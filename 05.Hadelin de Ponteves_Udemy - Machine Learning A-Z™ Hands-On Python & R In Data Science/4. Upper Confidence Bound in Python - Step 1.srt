1
00:00:00,300 --> 00:00:04,010
Hello my friends and welcome to this new practical activity.

2
00:00:04,020 --> 00:00:11,820
The first one of Part 6 reinforcement learning where we will be implementing the UCB algorithm upper

3
00:00:11,910 --> 00:00:13,660
confidence bound.

4
00:00:13,860 --> 00:00:19,120
It is one of the most exciting branches of machine learning because you know it is the one the closest

5
00:00:19,120 --> 00:00:24,480
to artificial intelligence in the sense that you know we're making some programs that play some actions

6
00:00:24,540 --> 00:00:25,860
just like a robot.

7
00:00:25,860 --> 00:00:27,240
So this is very exciting.

8
00:00:27,240 --> 00:00:33,180
This is one of my favorite branches if not the number one and so I'm so excited right now to teach you

9
00:00:33,180 --> 00:00:36,500
about the fundamentals of reinforcement learning especially.

10
00:00:36,600 --> 00:00:42,870
I'm so excited to implement two of the best reinforcement learning models with you which are UCB and

11
00:00:42,930 --> 00:00:44,120
Thompson assembling.

12
00:00:44,130 --> 00:00:50,580
So first A.S. we will implement UCB uproot confidence bound and once again we will apply it on a business

13
00:00:50,580 --> 00:00:56,440
case study which you know will be the next part of the story we had in Part 3 classification.

14
00:00:56,580 --> 00:01:03,030
You remember that SUV you know that brand new luxury SUV that this car company was trying to optimize

15
00:01:03,030 --> 00:01:05,240
the targeting thanks to classification.

16
00:01:05,250 --> 00:01:11,400
Well this time we're going to optimize the online advertising meaning that we're going to find the best

17
00:01:11,490 --> 00:01:18,600
ad you know among different ads designs the best ad that will convert the maximum customers to click

18
00:01:18,690 --> 00:01:22,050
on the ad and you know potentially buy the product by the car.

19
00:01:22,160 --> 00:01:22,800
Okay.

20
00:01:22,830 --> 00:01:28,440
So I will explain the story a bit more later but before let's just make sure everyone here is on this

21
00:01:28,530 --> 00:01:29,730
same page.

22
00:01:29,730 --> 00:01:33,480
I give you the links to this whole folder right before this does oil in the article.

23
00:01:33,480 --> 00:01:34,780
So make sure to click it.

24
00:01:34,890 --> 00:01:39,600
And now we should all be on the same page so let's do this let's end to Part 6.

25
00:01:39,630 --> 00:01:41,370
Reinforcement learning.

26
00:01:41,370 --> 00:01:46,600
And we're going to start as we said with upper confidence bound UCB.

27
00:01:46,650 --> 00:01:52,200
And so this time you'll not only see the two folders by then in orbit you also see the full slide of

28
00:01:52,200 --> 00:01:57,180
the UCB algorithm and you will also see the full slate of the Thompson something algorithm in the other

29
00:01:57,180 --> 00:01:57,960
folder.

30
00:01:57,960 --> 00:01:58,980
So let's have a look at it.

31
00:01:59,010 --> 00:02:00,110
Make sure to download it.

32
00:02:00,120 --> 00:02:03,380
And if you want you can print it and post it on your wall.

33
00:02:03,390 --> 00:02:03,930
There you go.

34
00:02:03,930 --> 00:02:09,960
You have the three steps of the UCB algorithm which we are going to implement together.

35
00:02:09,990 --> 00:02:14,730
You know I will actually give you a lot of exercises in this implementation I will tell you before we

36
00:02:14,730 --> 00:02:17,400
implement each of the steps to implement it yourself.

37
00:02:17,400 --> 00:02:22,590
So at first you will have to implement step one then one step one is implemented we will implement step

38
00:02:22,590 --> 00:02:22,990
two.

39
00:02:23,070 --> 00:02:24,930
You will do it first before we do it together.

40
00:02:25,050 --> 00:02:26,100
And then step three.

41
00:02:26,130 --> 00:02:29,810
So you see it will be a very learned by doing process.

42
00:02:29,820 --> 00:02:30,450
All right.

43
00:02:30,450 --> 00:02:31,230
So that is the slide.

44
00:02:31,230 --> 00:02:32,500
Make sure to download it.

45
00:02:32,550 --> 00:02:38,400
And now let's go into Python first to implement the UCB algorithm.

46
00:02:38,400 --> 00:02:43,310
All right so as usual you have two fouls here you have the data set at City are optimization city are

47
00:02:43,340 --> 00:02:48,460
means click through rate and that's what we are going to optimize things to uproot confidence mount

48
00:02:48,500 --> 00:02:54,120
first and then Thompson sampling and then we have the implementation of course upper confidence bound

49
00:02:54,330 --> 00:03:00,030
in the IPO and B format which can open with either Google collaboratively or Jupiter notebook.

50
00:03:00,030 --> 00:03:04,020
All right so as usual let us start by explaining what this dataset is about.

51
00:03:04,020 --> 00:03:09,930
So as I said we are doing the next part of the story of this car dealership trying to sell that new

52
00:03:10,260 --> 00:03:11,070
SUV.

53
00:03:11,090 --> 00:03:15,510
We've already done the targeting you know we've already optimized motoring thanks to classification

54
00:03:15,510 --> 00:03:19,840
in part three and now we're going to optimize the click through rate of some ads.

55
00:03:19,860 --> 00:03:21,590
We're going to make for this car.

56
00:03:21,760 --> 00:03:22,130
Okay.

57
00:03:22,470 --> 00:03:29,580
So what happened exactly is that the advertising team prepared 10 different ads you know with 10 different

58
00:03:29,580 --> 00:03:35,760
designs for example on one ad we will see the SUV in a beautiful mountain on the other ad we'll see

59
00:03:35,760 --> 00:03:41,040
that SUV in a futuristic city and another ad we'll see that SUV and a charming city you know like a

60
00:03:41,040 --> 00:03:43,310
charming city in the south of France or Italy.

61
00:03:43,470 --> 00:03:46,370
And another ad will see the car on the moon.

62
00:03:46,440 --> 00:03:47,360
You know why not.

63
00:03:47,430 --> 00:03:51,930
And another ad we'll see the car on a beautiful countryside cornfield you know something like that.

64
00:03:51,960 --> 00:03:58,770
So basically all the ads have different designs and advertising team is wondering well which ad will

65
00:03:58,770 --> 00:04:04,080
convert the most you know which ad will attract the most people to click the ad and then potentially

66
00:04:04,080 --> 00:04:05,760
buy the SUV.

67
00:04:05,760 --> 00:04:10,410
So we have these 10 different ads and what we're going to do and that is the process of online learning

68
00:04:10,760 --> 00:04:13,920
we're going to show these ads to different users online.

69
00:04:13,920 --> 00:04:19,410
You know once they connect to a certain Web site or to a search engine you know it can be ads that appear

70
00:04:19,650 --> 00:04:22,610
at the top of a page when you type of research on Google.

71
00:04:22,650 --> 00:04:27,930
We're going to show one of these ads each time the user connects to the Web page and we're going to

72
00:04:27,930 --> 00:04:32,460
record the result whether this user clicked yes or no on the ad.

73
00:04:32,670 --> 00:04:33,290
OK.

74
00:04:33,330 --> 00:04:38,290
So just to recap there is a first user that connects to let's say a web page.

75
00:04:38,300 --> 00:04:44,910
Our algorithm which will be here first UCB will select an ad to show to this user and then the user

76
00:04:44,910 --> 00:04:47,700
will decide to click yes or no on the ad.

77
00:04:47,700 --> 00:04:50,730
If the user clicks on the ad we will recorded as one.

78
00:04:50,730 --> 00:04:53,930
And if the user doesn't click on the ad we will record it as zero.

79
00:04:53,940 --> 00:04:54,750
Okay.

80
00:04:54,810 --> 00:05:01,110
And then a new user connects to the Web page and same the algorithm selects an ad to show this new user.

81
00:05:01,110 --> 00:05:04,890
And if this new user clicks the ad then it's a one and if not it's a zero.

82
00:05:05,210 --> 00:05:05,870
OK.

83
00:05:05,880 --> 00:05:08,390
And we're going to do this for lots of users actually.

84
00:05:08,430 --> 00:05:10,230
Ten 10000 users.

85
00:05:10,230 --> 00:05:12,130
And that's what this dataset is about.

86
00:05:12,150 --> 00:05:17,400
However now there is something you must absolutely understand and that is very very important.

87
00:05:17,400 --> 00:05:20,520
Make sure to understand it and make sure to rewind.

88
00:05:20,580 --> 00:05:21,930
If this is not understood.

89
00:05:21,990 --> 00:05:22,440
Okay.

90
00:05:22,590 --> 00:05:23,760
So I'm going to explain this.

91
00:05:23,910 --> 00:05:25,560
Please listen carefully.

92
00:05:25,560 --> 00:05:31,950
So you know in reality what happens is that users connect one by one to the Web page and for each of

93
00:05:31,950 --> 00:05:35,070
them we successively show them the ad right.

94
00:05:35,070 --> 00:05:36,970
So everything happens in real time.

95
00:05:36,970 --> 00:05:38,460
You know it's a dynamic process.

96
00:05:38,460 --> 00:05:43,490
It's not a static process with a static data set which was recorded over a certain period of time.

97
00:05:43,500 --> 00:05:45,600
It's a real time process.

98
00:05:45,600 --> 00:05:52,350
And therefore the only way to simulate this would be either that I you know make ten real ads right

99
00:05:52,350 --> 00:05:57,180
now you know 10 real hours of a car that I open a Google AdWords account and then I show the ads for

100
00:05:57,180 --> 00:06:01,310
real to some users you know real persons connect to the site.

101
00:06:01,350 --> 00:06:04,500
Of course I'm not going to do this because first of all this is costly.

102
00:06:04,560 --> 00:06:06,360
And then you know this would deceive the users.

103
00:06:06,360 --> 00:06:09,300
Well you know I would have to really sell a car somehow.

104
00:06:09,300 --> 00:06:13,300
So of course this is not an option and therefore I have to make a simulation.

105
00:06:13,430 --> 00:06:13,700
OK.

106
00:06:13,710 --> 00:06:19,800
I have to make a simulation in this simulation is exactly given by this dataset because in this dataset

107
00:06:20,010 --> 00:06:26,490
what happens is that each row corresponds to the different user is connecting to the web page.

108
00:06:26,610 --> 00:06:28,730
And to whom we're going to show the ads.

109
00:06:28,800 --> 00:06:33,150
And then each column of this dataset corresponds to the different ads.

110
00:06:33,240 --> 00:06:33,530
OK.

111
00:06:33,540 --> 00:06:35,670
From add one to ad 10.

112
00:06:36,270 --> 00:06:42,150
And this dataset is assimilation in the sense that each time a user connects to the web page.

113
00:06:42,210 --> 00:06:48,780
While this dataset tells us even if we wouldn't know in reality this dataset tells us on which ad the

114
00:06:48,900 --> 00:06:51,450
user of the row would click on you know.

115
00:06:51,450 --> 00:06:56,250
So for example this first user you know this corresponds to the first user to whom we're going to show

116
00:06:56,430 --> 00:07:02,510
the ad and what these sales mean is that this user would click on Add 1.

117
00:07:02,640 --> 00:07:06,180
If we show this user at one then it wouldn't click at 2.

118
00:07:06,210 --> 00:07:10,540
If we show at two because there is a zero here then the user wouldn't click at three.

119
00:07:10,560 --> 00:07:12,690
If we show at three it wouldn't click at four.

120
00:07:12,690 --> 00:07:15,250
If we show at four but then it would click at five.

121
00:07:15,270 --> 00:07:17,600
If we showed at five and etc..

122
00:07:17,730 --> 00:07:24,330
So in other words we know thanks to this simulation you know this dataset doing a simulation we know

123
00:07:24,330 --> 00:07:29,330
that this user will only click Add one at five and at nine.

124
00:07:29,430 --> 00:07:34,920
If we showed these ads and then if we showed all of the other ads at 2:00 at 3:00 et cetera up to at

125
00:07:34,980 --> 00:07:39,360

126
8:00 and at 10:00 Well this user wouldn't click the ad.

127
00:07:39,360 --> 00:07:45,940
Now I know we wouldn't know that in reality but that's why I'm saying that this dataset is a simulation.

128
00:07:46,080 --> 00:07:52,260
And this is the only way we can actually run the UCB algorithm or the Thomson something algorithm if

129
00:07:52,260 --> 00:07:55,540
not doing it for real you know with a real advertising campaign.

130
00:07:55,690 --> 00:07:55,940
Okay.

131
00:07:55,950 --> 00:07:56,880
So I hope it's clear.

132
00:07:56,880 --> 00:08:02,300
Please we if it's not clear because I think I've said all the keywords you know this dataset is a simulation.

133
00:08:02,400 --> 00:08:07,860
Therefore for all the user as you know corresponding to these ROVs we know on which ad the users will

134
00:08:07,860 --> 00:08:08,910
click right.

135
00:08:08,910 --> 00:08:14,010
This user for example would click only on ad number two or ad number eight.

136
00:08:14,010 --> 00:08:14,520
Right.

137
00:08:14,520 --> 00:08:16,390
But wouldn't click on all the other ads.

138
00:08:16,440 --> 00:08:22,650
And so that's the only way we can indeed simulate the Thompson sampling or UCB algorithm.

139
00:08:22,650 --> 00:08:22,920
All right.

140
00:08:22,920 --> 00:08:27,720
So I hope it's clear then we have let's see let's scroll down to the bottom we have in total ten thousand

141
00:08:27,720 --> 00:08:29,010
users as we said.

142
00:08:29,100 --> 00:08:34,650
And so we're going to run that UCB algorithm first and then add something something algorithm to figure

143
00:08:34,650 --> 00:08:38,550
out the ad that has the highest conversion rate.

144
00:08:38,580 --> 00:08:41,820
Right the ad on which the users click the most.

145
00:08:41,820 --> 00:08:47,220
So I know that we could do it for example with a naive strategy you know a naive algorithm like a simple

146
00:08:47,220 --> 00:08:53,520
one where we collect some simple statistics to see which ad is most frequently clicked on.

147
00:08:53,520 --> 00:08:59,370
But remember as Carol explains in the tuition lectures each time we imprison ad on the Web site or the

148
00:08:59,370 --> 00:09:00,570
Google search engine.

149
00:09:00,600 --> 00:09:02,610
Well this incurs a cost right.

150
00:09:02,610 --> 00:09:08,580
It has a cost to impress and therefore we need to figure out as fast as possible you know in the minimum

151
00:09:08,670 --> 00:09:14,370
number of rounds because you know the users here are represented as rounds because we show the ads for

152
00:09:14,370 --> 00:09:17,870
the users one by one as in one round after the other.

153
00:09:17,880 --> 00:09:23,490
So we need to figure out in a minimum number of rounds which ad converts to the most meaning which is

154
00:09:23,490 --> 00:09:27,130
the best ad to which the users are most attracted to.

155
00:09:27,240 --> 00:09:33,390
And that's why we need a stronger algorithm than a simple statistics algorithm and that stronger algorithm

156
00:09:33,390 --> 00:09:40,050
will be first UCB and then Thompson simply and we will even see which of the two is the most powerful.

157
00:09:40,050 --> 00:09:40,560
All right.

158
00:09:40,560 --> 00:09:43,460
So I think that's enough explained for it this data dataset.

159
00:09:43,470 --> 00:09:45,150
Now we're going to start the implementation.

160
00:09:45,150 --> 00:09:46,020
I can't wait.

161
00:09:46,020 --> 00:09:51,640
This is a very exciting and actually widely used algorithm in online advertising or digital marketing.

162
00:09:51,670 --> 00:09:52,590
So let's do this.

163
00:09:52,590 --> 00:09:59,210
Let's click this implementation and then let's open it with Google collaborate tree or Jupiter notebook

164
00:09:59,330 --> 00:10:05,540
adjuvant all right so now it is loading it it is loading the notebook laying out the notebook.

165
00:10:05,540 --> 00:10:07,010
And now here you go.

166
00:10:07,010 --> 00:10:09,790
Welcome to the UCB implementation.

167
00:10:09,800 --> 00:10:13,830
All right so as usual we're going to create a copy because this is an read only mode.

168
00:10:13,940 --> 00:10:19,820
So in order to re implement it from scratch we're going to click file here and then save a copy and

169
00:10:19,820 --> 00:10:20,540
drive.

170
00:10:20,540 --> 00:10:27,620
This will create a copy inside which we will be able to read implement the whole algorithm from scratch.

171
00:10:27,620 --> 00:10:28,000
All right.

172
00:10:28,010 --> 00:10:32,240
So it is opening you notice that I have my data pricing template opened.

173
00:10:32,240 --> 00:10:37,070
That's because we will use it very quickly you know just to actually import the libraries and the data

174
00:10:37,070 --> 00:10:37,770
set.

175
00:10:37,880 --> 00:10:46,560
And so now before we start let's delete all the code cells here but not the text cells and very soon

176
00:10:46,680 --> 00:10:48,080
we should be able to start.

177
00:10:48,130 --> 00:10:53,790
Okay so that's a simple intimidation you know a simple structure but this cell will actually be long

178
00:10:53,790 --> 00:10:59,540
and that's where you will practice by doing first some steps of the implementation before we do it together.

179
00:10:59,550 --> 00:11:00,810
And so let's have a look.

180
00:11:00,810 --> 00:11:03,100
Welcome to the UCB implementation.

181
00:11:03,150 --> 00:11:05,680
We will start first by empowering the libraries.

182
00:11:05,760 --> 00:11:07,420
Then we will impose a data set.

183
00:11:07,440 --> 00:11:12,820
Then we will implement the full UCB algorithm just following the steps on the slide.

184
00:11:12,850 --> 00:11:14,080
You know with the three steps.

185
00:11:14,190 --> 00:11:19,560
And finally we will visualize the results and by that I mean that we will plot a histogram where we

186
00:11:19,560 --> 00:11:25,680
will clearly see the add that was the most selected you know and that of course it added was identified

187
00:11:25,920 --> 00:11:29,660
as the strongest ad you know the most attractive ad for the users.

188
00:11:29,670 --> 00:11:33,090
And one thing I forgot to say and which is really really important.

189
00:11:33,250 --> 00:11:41,520
This dataset actually suppose that each ad has a fixed conversion rate so ad number one has a certain

190
00:11:41,520 --> 00:11:44,790
conversion rate at number two has another conversion rate.

191
00:11:44,790 --> 00:11:46,950
And then same for all the other ads.

192
00:11:46,980 --> 00:11:53,580
And that's of course because it is a required assumption of both the UCB and Thompson sampling algorithm.

193
00:11:53,580 --> 00:11:57,000
Basically reinforcement learning algorithms for online learning.

194
00:11:57,000 --> 00:12:02,440
And that's you know anyway the case in reality for example with the slot machines in the casino.

195
00:12:02,520 --> 00:12:06,200
Well they all have a fixed conversion rate unless they change it over time.

196
00:12:06,210 --> 00:12:08,000
But that's another question.

197
00:12:08,010 --> 00:12:13,620
There you go usually an ad that you show online has a fixed conversion rate because it will convert

198
00:12:13,710 --> 00:12:15,590
over time the same rate of people.

199
00:12:15,600 --> 00:12:17,280
So we will assume this.

200
00:12:17,340 --> 00:12:19,280
And besides it's close to reality.

201
00:12:19,280 --> 00:12:19,920
But there you go.

202
00:12:19,920 --> 00:12:23,300
That's an important assumption of online learning.

203
00:12:23,310 --> 00:12:23,910
All right.

204
00:12:23,910 --> 00:12:25,440
So now we're ready.

205
00:12:25,440 --> 00:12:27,480
We're ready to begin this implementation.

206
00:12:27,480 --> 00:12:28,500
I hope you're excited.

207
00:12:28,500 --> 00:12:30,770
I hope you understood this data set.

208
00:12:30,780 --> 00:12:35,060
And the fact that we're doing a simulation because we actually don't have too much of a choice.

209
00:12:35,100 --> 00:12:36,830
And so if everything is all good.

210
00:12:36,870 --> 00:12:40,830
Well my friends let let's begin this implementation in the next tutorial.

211
00:12:40,920 --> 00:12:42,660
And until then enjoy machine learning.
