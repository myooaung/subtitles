1
00:00:00,330 --> 00:00:02,570
Hello and welcome to this art tutorial.

2
00:00:02,730 --> 00:00:07,900
So let's pick up where we left off that is let's try to figure out why we're using this upper bound

3
00:00:07,900 --> 00:00:14,240
sequel to this very large number 10 of the power of 400 given to this upper bound variable here in this

4
00:00:14,340 --> 00:00:15,380
Elle's condition.

5
00:00:15,570 --> 00:00:16,910
Well let's see what happens.

6
00:00:16,990 --> 00:00:19,820
You know let's see what happens at First Round.

7
00:00:20,010 --> 00:00:25,500
One of the first round we will go through the 10 versions of the add things to this for I loop here.

8
00:00:25,680 --> 00:00:28,920
And since the first round no ADD was selected.

9
00:00:29,130 --> 00:00:37,470
Well this condition here if numbers of selections I is higher than zero will never be true and therefore

10
00:00:37,580 --> 00:00:40,420
we will directly go to this else here.

11
00:00:40,740 --> 00:00:46,590
And accordingly the upper bound will be set equal to 10 at the power of 400.

12
00:00:46,590 --> 00:00:50,980
Then we move on to this condition because this is the next step of this fault here.

13
00:00:51,150 --> 00:00:56,780
And it says that if upper bound is larger than max rebounds which is true of course because of about

14
00:00:56,840 --> 00:00:59,680
10 of the power of 400 and Maxo we're going to zero.

15
00:00:59,730 --> 00:01:01,170
So this condition is true.

16
00:01:01,290 --> 00:01:05,220
So what happens next is that Max supervillian is equal to upper bound.

17
00:01:05,250 --> 00:01:11,000
So Max pre-ban will be equal to 10 at the power of 400 and add equals.

18
00:01:11,370 --> 00:01:14,810
And so since we're at the beginning of the fold here I equals 1.

19
00:01:14,880 --> 00:01:16,770
So I will be equal to 1.

20
00:01:16,920 --> 00:01:23,730
And then what happens then we go to the next step of this for I loop here which is I equals 2 and I

21
00:01:23,970 --> 00:01:28,370
do response to the second ad and the second ad hasn't been selected yet.

22
00:01:28,380 --> 00:01:33,060
So numbers of selections I hear will not be larger than zero.

23
00:01:33,090 --> 00:01:34,920
So this condition will not be true here.

24
00:01:35,040 --> 00:01:37,460
So again we will get to this out here.

25
00:01:37,740 --> 00:01:41,070
And therefore Appelbaum will be equal to at the power of 400.

26
00:01:41,370 --> 00:01:43,350
And then we go to this if here.

27
00:01:43,350 --> 00:01:48,470
So now let's see if this condition is true upper bound is equal to 10 at the power of 400.

28
00:01:48,690 --> 00:01:54,840
And remember from the previous round Max upper bound was said equal to 10 at the power of 400 because

29
00:01:54,840 --> 00:01:56,740
it was said equal to upper bound.

30
00:01:57,000 --> 00:02:04,160
So this condition translated in real terms as if 10 of the power of 400 is larger than 10 at the power

31
00:02:04,160 --> 00:02:05,010
of 400.

32
00:02:05,190 --> 00:02:06,450
And that is not true.

33
00:02:06,510 --> 00:02:10,360
Ten the power of 400 is not larger than 10 of the power 400.

34
00:02:10,530 --> 00:02:17,970
So that condition is not true and therefore add is not set equal to 2 because right now equals two.

35
00:02:18,210 --> 00:02:20,030
But it remains equal to 1.

36
00:02:20,200 --> 00:02:26,170
And that's why at the first round the ad that will be selected is at equals 1.

37
00:02:26,250 --> 00:02:29,830
That is the first that you can try with the other values.

38
00:02:29,880 --> 00:02:35,790
I hear a pre-ban will always be equal to 10 or the power 400 and Max upper bound will stay equal to

39
00:02:35,790 --> 00:02:37,240
10 of the power 400.

40
00:02:37,380 --> 00:02:41,470
So therefore this condition will never be verified for the nine remaining here.

41
00:02:41,580 --> 00:02:47,990
And therefore we keep this at equals 1 and that's the same principle for the next rounds up to 10 that's

42
00:02:48,000 --> 00:02:54,330
round and he goes to this number of selections I hear will be larger than zero only for the first and

43
00:02:54,540 --> 00:02:59,670
because the first ad was selected at Round 1 and therefore this condition will be true only for the

44
00:02:59,670 --> 00:03:00,440
first.

45
00:03:00,690 --> 00:03:05,340
So upper bound will be equal to this average reward plus delta I hear.

46
00:03:05,370 --> 00:03:09,910
But then we'll move on to I plus one which will correspond to adversion 2.

47
00:03:10,110 --> 00:03:17,120
And since adversion 2 wasn't selected yet well this numbers of selection's I hear will be equal to zero

48
00:03:17,370 --> 00:03:21,230
and therefore this condition won't be verified and therefore we will go to this.

49
00:03:21,240 --> 00:03:25,700
Else here an upper bound will be equal to 10 at the power of 400.

50
00:03:25,800 --> 00:03:30,710
We will forget this upper bound value here computed at the previous eye here.

51
00:03:30,810 --> 00:03:35,310
And therefore what happens next is the same upper Belang will be larger than maksud rebound because

52
00:03:35,420 --> 00:03:40,170
Macs are preven was equal to the upper bound at the previous AI and the upper bound of the previous

53
00:03:40,230 --> 00:03:46,450
I was average reward Plus Delta II which is of course lower than the standard the power of 400.

54
00:03:46,500 --> 00:03:51,840
And that's why by the way we said it to a very large value it's in order to have this upper bound here

55
00:03:52,080 --> 00:03:58,740
lower than the center the power of 400 and therefore Maxo preven will be 10 at the power 400 and we

56
00:03:58,740 --> 00:04:00,390
will select as equals.

57
00:04:00,420 --> 00:04:06,590
That is at number two and then same principle as before when we'll move on to the next eyes upper bound

58
00:04:06,630 --> 00:04:12,430
will be equal to 10 or the power of 400 Max or pre-ban will also be equal to 10 of the power of 400.

59
00:04:12,570 --> 00:04:17,850
So this condition won't be verified and therefore we'll keep at number two.

60
00:04:17,850 --> 00:04:23,490
So that's why this nice little trick here works perfectly well for us and gives us exactly what we want.

61
00:04:23,490 --> 00:04:29,760
All right so the 10 first round selected 10 adds and then after around 10 we used the strategy to select

62
00:04:29,760 --> 00:04:30,830
the adds.

63
00:04:30,840 --> 00:04:38,100
All right so now the only thing that we need to do is to append the selected at here and this selected

64
00:04:38,100 --> 00:04:38,900
vector here.

65
00:04:39,060 --> 00:04:40,840
And that's exactly what we'll do now.

66
00:04:40,950 --> 00:04:42,390
So let's do it.

67
00:04:42,390 --> 00:04:46,580
We just need to get out of the for loop because we're done with this loop.

68
00:04:46,590 --> 00:04:50,220
We did exactly what we had to do that is to select the right add.

69
00:04:50,460 --> 00:04:56,760
And now we need to get out of this for a loop but remain in this for loop because we are still at a

70
00:04:56,760 --> 00:04:57,520
specific route.

71
00:04:57,550 --> 00:05:04,730
And and what we have to do now is a band the ad that was selected here to this huge vector and selected

72
00:05:05,060 --> 00:05:08,550
that contains all the different ad selected at each round.

73
00:05:08,780 --> 00:05:09,080
OK.

74
00:05:09,080 --> 00:05:11,330
So now things are easy.

75
00:05:11,390 --> 00:05:18,650
We just need to use the append function on these ads selected huge vector and then a pen.

76
00:05:18,650 --> 00:05:19,580
Here it is.

77
00:05:19,880 --> 00:05:20,900
All right.

78
00:05:20,900 --> 00:05:28,430
And now in this append function we enter as input first input selected and second input add because

79
00:05:28,430 --> 00:05:33,490
it corresponds to the index of the ad that was selected in this for loop here.

80
00:05:33,500 --> 00:05:36,510
All right so done at appended.

81
00:05:36,680 --> 00:05:43,280
And now since we've just selected and you add here what we need to do is to update this vector number

82
00:05:43,280 --> 00:05:44,490
of selections here.

83
00:05:44,570 --> 00:05:49,310
That is you know the vector telling for each add the number of times it was selected.

84
00:05:49,310 --> 00:05:56,070
So since here we know which index of the albums just selected what we need to do is to add a plus one.

85
00:05:56,090 --> 00:06:01,300
In this particular index of these numbers of selections vector to update this vector.

86
00:06:01,310 --> 00:06:02,660
So let's do it right now.

87
00:06:02,660 --> 00:06:09,500
We will stay of course in this for end loop because this vector will contain the numbers of times each

88
00:06:09,590 --> 00:06:11,750
add was selected at this specific run.

89
00:06:11,780 --> 00:06:18,410
And so we need to stay in the loop and we will simply take this vector here.

90
00:06:18,410 --> 00:06:22,280
Copy and pasted here to update it.

91
00:06:22,280 --> 00:06:29,880
And so what we need to date is the ADD index of this numbers of selection's vector because this add

92
00:06:29,930 --> 00:06:35,540
index corresponds to the index of the ad that was just elected here a selection that's based on all

93
00:06:35,540 --> 00:06:36,550
the strategy.

94
00:06:36,830 --> 00:06:42,090
And so what we simply need to do is increment by one this vector here.

95
00:06:42,110 --> 00:06:44,810
So we will copy that again.

96
00:06:45,020 --> 00:06:47,940
Copy equals paste.

97
00:06:47,990 --> 00:06:50,330
And then a little plus one here.

98
00:06:50,330 --> 00:06:50,910
All right.

99
00:06:51,020 --> 00:06:55,100
So now this numbers of selections vector is well updated.

100
00:06:55,310 --> 00:07:00,230
And that's all we need to do for this vector at this specific round because of course only one ad was

101
00:07:00,230 --> 00:07:01,130
selected.

102
00:07:01,600 --> 00:07:07,580
OK and now we need to take care of the rewards because indeed we have this sums of rewards vector here

103
00:07:07,910 --> 00:07:13,910
that we need to update because this vector contains the different sums of rewards of each of the 10

104
00:07:14,000 --> 00:07:16,160
adds at each round.

105
00:07:16,160 --> 00:07:17,850
So we need to update it.

106
00:07:17,960 --> 00:07:23,450
And of course afterwards we would like to get the total we wanted that unit will be a variable containing

107
00:07:23,630 --> 00:07:28,520
the unique sum of rewards we accumulated over the end rounds.

108
00:07:28,520 --> 00:07:30,450
So let's first take care of this.

109
00:07:30,470 --> 00:07:34,720
Some of you want to here and then we'll take care of total we want.

110
00:07:34,760 --> 00:07:37,460
So today some of the words factor here.

111
00:07:37,550 --> 00:07:42,700
What we need to get now is the reward we get at this specific round.

112
00:07:42,740 --> 00:07:49,000
And because you know we just selected this ad here but we haven't got it's we yet.

113
00:07:49,100 --> 00:07:52,500
We just selected the ad so for now we need to get the reward.

114
00:07:52,520 --> 00:07:58,430
So in real life what happens is that you know we showed the ad to the user and then the user clicks

115
00:07:58,430 --> 00:07:59,890
yes or no on the AD.

116
00:08:00,200 --> 00:08:06,090
But here we are not in real life as much as I would have loved to show you a real experiment of this.

117
00:08:06,140 --> 00:08:09,170
Right now in front of your eyes this would not be that simple.

118
00:08:09,200 --> 00:08:16,820
But we have this simulation data set you know this data set here that you know contains the real results

119
00:08:16,880 --> 00:08:22,260
only known by God you know because we have no idea of which add each user would click on.

120
00:08:22,370 --> 00:08:28,470
So as a reminder the first user clicks on one at five and at nine not the rest of them.

121
00:08:28,520 --> 00:08:31,150
So that's just a simulation data set.

122
00:08:31,160 --> 00:08:36,540
And so what we have to do now is get the reward at each round and based on the ad that were selected.

123
00:08:36,650 --> 00:08:38,320
Thanks to this dataset.

124
00:08:38,330 --> 00:08:47,180
So let's do it which will simply do is get the word that is either 1 or 0 at this specific round and

125
00:08:47,180 --> 00:08:48,300
where we are at.

126
00:08:48,320 --> 00:08:54,980
And so to get this it's really simple which we need to do is you know take our data set and in the brackets

127
00:08:54,980 --> 00:08:58,850
will need to specify the index of the line where we are at.

128
00:08:58,850 --> 00:09:03,250
Which is you know the round and corresponding to the round where we are right now.

129
00:09:03,350 --> 00:09:08,180
So since all the lines of this dataset here are nothing else but the rounds.

130
00:09:08,330 --> 00:09:10,330
Well the first index will be the round.

131
00:09:10,370 --> 00:09:12,850
So for example let's say we are at Round 9.

132
00:09:12,950 --> 00:09:18,980
Well we will need to take the line index 9 of the dataset and then for the columns since the columns

133
00:09:18,980 --> 00:09:22,370
here correspond to the rewards of the 10 different ads.

134
00:09:22,580 --> 00:09:27,980
Well we will need to take the index of the ads that were selected that is nothing else and this add

135
00:09:28,100 --> 00:09:32,390
index here so that's the idea that what we have to do.

136
00:09:32,500 --> 00:09:36,520
But of course in real life you'll get what really happens with the users.

137
00:09:36,520 --> 00:09:41,960
So I'm going to close this and right now I'm going to get the real reward at round.

138
00:09:41,980 --> 00:09:46,420
And that's we get with the selection of this ad index here.

139
00:09:46,420 --> 00:09:47,620
So let's do it.

140
00:09:47,620 --> 00:09:51,080
We will call this real reward simply reward.

141
00:09:51,100 --> 00:09:51,820
All right.

142
00:09:51,870 --> 00:09:56,860
And now as I just explained we need to take the data set and then the brackets and we need to take the

143
00:09:56,860 --> 00:09:59,160
index of the line that corresponds to around.

144
00:09:59,200 --> 00:10:04,990
And so and here and then we need to take the index of the column that corresponds to the index of the

145
00:10:04,990 --> 00:10:06,710
ad that was just selected.

146
00:10:06,820 --> 00:10:09,280
So it's out here and that's all.

147
00:10:09,370 --> 00:10:11,350
We simply get the reward at around.

148
00:10:11,350 --> 00:10:15,220
And for this specific selection of this ad by using this.

149
00:10:15,390 --> 00:10:15,980
OK.

150
00:10:16,000 --> 00:10:16,900
So great.

151
00:10:16,960 --> 00:10:23,320
We've just got the real reward and now we can update this sums up reward vector here that as a reminder

152
00:10:23,320 --> 00:10:27,510
gives the sons of rewards of each of the 10 ads at each end.

153
00:10:27,820 --> 00:10:36,340
So we will take this copy and then just below we will increment this vector.

154
00:10:36,470 --> 00:10:42,430
And of course we need to take the added index of this vector because only the ADD that was selected

155
00:10:42,430 --> 00:10:43,450
at this specific round.

156
00:10:43,480 --> 00:10:46,530
And we'll have it some of the words changed.

157
00:10:46,570 --> 00:10:52,060
So that's the only some of words we need to update and therefore what we need to do is to incremented

158
00:10:52,360 --> 00:10:58,770
by the we Word not by one of course only by the reward because the reward is either 0 or 1.

159
00:10:58,980 --> 00:11:05,740
So equals here and then we take that again and then plus reward.

160
00:11:06,130 --> 00:11:12,070
So if we go to zero reward the sum of rewards for this specific add won't change and we were equals

161
00:11:12,070 --> 00:11:12,710
one.

162
00:11:12,770 --> 00:11:16,870
This some of the worst for this specific ad will be incremented by 1.

163
00:11:17,160 --> 00:11:17,790
OK.

164
00:11:17,890 --> 00:11:19,990
And now we just have to do one last thing.

165
00:11:20,000 --> 00:11:25,100
It's of course to get the total reward accumulated over the end rounds.

166
00:11:25,210 --> 00:11:31,310
Well the total reward is not very interesting for us at any round end but at the last round.

167
00:11:31,330 --> 00:11:37,120
And that is that the 10000 is around because we're all compared of course to the total we we got with

168
00:11:37,120 --> 00:11:42,800
this random selection algorithm which as a reminder was 1200 on average.

169
00:11:42,910 --> 00:11:46,780
So that's why we're very excited to find out about this total we work.

170
00:11:46,900 --> 00:11:53,690
But at the end of the ten thousand rounds so of course we need to initialize this total reward very

171
00:11:53,770 --> 00:11:58,050
Because you know we are updating it at each round.

172
00:11:58,120 --> 00:12:03,970
So we need to give its initial value like in physics and this initial value will give of course zero

173
00:12:04,000 --> 00:12:09,380
because at around zero at the beginning of this experiment the total reward is of course zero.

174
00:12:09,520 --> 00:12:12,270
We haven't actually related any reward yet.

175
00:12:12,280 --> 00:12:22,530
So let's declare this new variable total reward right here and then set it equal to zero and now very

176
00:12:22,530 --> 00:12:28,970
simply what we need to do is to compute the total reward that we accumulate at a trout.

177
00:12:29,190 --> 00:12:34,630
And there is something we need to do another increment the same as the one we just did.

178
00:12:34,680 --> 00:12:44,370
So I'm copying all word here pasting in here and equal and then pasted again and adding a plus and then

179
00:12:44,370 --> 00:12:46,130
according to you what do we need to add.

180
00:12:46,140 --> 00:12:51,260
Of course we need to add the word that we get at each round and.

181
00:12:51,600 --> 00:12:56,060
And that's done the UCB algorithm is implemented.

182
00:12:56,070 --> 00:12:57,380
Congratulations.

183
00:12:57,480 --> 00:13:01,860
This is the first algorithm we implement from scratch in this course.

184
00:13:01,860 --> 00:13:03,010
That's very exciting.

185
00:13:03,120 --> 00:13:08,750
And as you notice we built and implemented this algorithm as if we would do it in real life.

186
00:13:08,760 --> 00:13:10,010
No we didn't.

187
00:13:10,050 --> 00:13:16,860
Adeline's one by one we implemented it as a developer we do it step by step you know with the same logical

188
00:13:16,860 --> 00:13:17,890
thinking process.

189
00:13:18,970 --> 00:13:20,260
So congratulations.

190
00:13:20,280 --> 00:13:27,070
Now I'm so excited to look at the results and find out by how much they use the algorithm will beat

191
00:13:27,310 --> 00:13:29,300
the random selection algorithm.

192
00:13:29,320 --> 00:13:34,960
So as a reminder the random selection algorithm gave us a reward of 1200.

193
00:13:35,020 --> 00:13:37,230
Let's see how you beat that.

194
00:13:37,330 --> 00:13:39,370
And let's hope we get a nice result.

195
00:13:39,460 --> 00:13:44,700
So I'm going to select everything from here to here.

196
00:13:44,710 --> 00:13:45,410
All right.

197
00:13:45,490 --> 00:13:48,250
And there we go.

198
00:13:48,250 --> 00:13:49,170
Here it is.

199
00:13:49,180 --> 00:13:51,660
Let's immediately have a look at the total reward.

200
00:13:51,670 --> 00:13:56,710
We can see that the total reward is two thousand one hundred seventy eight.

201
00:13:56,710 --> 00:14:02,450
We almost doubled the whole word earned by the random selection algorithm.

202
00:14:02,500 --> 00:14:09,640
So that's great you know if you are Zino and if the ads are not ads but you know slot machines that

203
00:14:09,640 --> 00:14:14,500
means that you will earn twice as much money and that's not all because this is just the total word

204
00:14:14,500 --> 00:14:15,570
of the experiment.

205
00:14:15,730 --> 00:14:21,310
But what's very interesting to see now is the specific ad that has the highest conversion rates you

206
00:14:21,310 --> 00:14:26,600
know simply what is the best ad to show to the users and how can we find out about this.

207
00:14:26,770 --> 00:14:32,830
Well what we simply need to look at is this as a selected vector here.

208
00:14:32,890 --> 00:14:39,370
So let's have a look first what we can see is that as expected you know as the expected result of our

209
00:14:39,370 --> 00:14:46,810
implementation here will we can see that during the first round the tent ads are selected you know round

210
00:14:46,810 --> 00:14:52,710
one we select and one round to add to round 3 at 3 up to around 10 at 10.

211
00:14:52,750 --> 00:14:59,380
So that's exactly the result of what we did here with this huge value trick to get this 10 ads of the

212
00:14:59,380 --> 00:15:00,360
10 first rounds.

213
00:15:00,490 --> 00:15:02,420
And then the strategy starts.

214
00:15:02,500 --> 00:15:07,780
You know since we get some information based on the selections of these 10 ads here during the 10 first

215
00:15:07,780 --> 00:15:13,660
round then we get the sums of rewards and food and the numbers of selection's info and that's when the

216
00:15:13,660 --> 00:15:14,710
strategy can start.

217
00:15:14,710 --> 00:15:21,220
And that's exactly what happens here from here the strategy is running and different selections appear.

218
00:15:21,550 --> 00:15:26,410
And what's really interesting to see now is to look at the last round.

219
00:15:26,440 --> 00:15:33,280
There is you know the rounds close to 10000 because if the strategy works well logically this algorithm

220
00:15:33,280 --> 00:15:39,040
should select always the same ad during the last rounds because you know there is one ad that is the

221
00:15:39,040 --> 00:15:41,700
best that has the highest conversion rate.

222
00:15:41,770 --> 00:15:44,620
You know maybe it's the ad where the car is on a beautiful bridge.

223
00:15:44,620 --> 00:15:51,520
So there is this winner ad that we don't know of course but that's what this ad selects vector will

224
00:15:51,550 --> 00:15:52,080
tell us.

225
00:15:52,120 --> 00:15:54,320
If we look at the last round so let's do it.

226
00:15:54,370 --> 00:15:56,440
We will go down and down and down.

227
00:15:56,440 --> 00:15:56,690
OK.

228
00:15:56,700 --> 00:15:57,350
Here we go.

229
00:15:57,400 --> 00:16:03,520
So as you can see as I'm going down it appears that there are more and more five different ones as you

230
00:16:03,520 --> 00:16:07,720
can see there are more and more five that we're selecting and a drought.

231
00:16:08,110 --> 00:16:14,710
And if I go down again and go down more and more well we get even more 5 and that their last rounds

232
00:16:14,710 --> 00:16:16,860
that is during the last thousand rounds.

233
00:16:16,960 --> 00:16:24,100
Well we select only five as you can see right now we are at around nine thousand eight hundred and we

234
00:16:24,100 --> 00:16:25,990
can only observe five.

235
00:16:25,990 --> 00:16:27,640
So clearly the best.

236
00:16:27,660 --> 00:16:33,450
And we should pick to show to the use and that has the highest conversion rate is number five.

237
00:16:33,670 --> 00:16:35,440
So great.

238
00:16:35,440 --> 00:16:40,630
Not only would almost double the total we would with this two thousand one hundred seventy eight total

239
00:16:40,640 --> 00:16:45,970
reward but also we get to know what is the best ad to show to the users.

240
00:16:45,970 --> 00:16:47,470
And of course we're interested in both.

241
00:16:47,470 --> 00:16:49,700
We're interested in knowing what's the best.

242
00:16:49,720 --> 00:16:55,660
But also to optimize this told we were here because you know experimenting this placement of these ads

243
00:16:55,660 --> 00:16:57,430
on the social network costs money.

244
00:16:57,550 --> 00:17:02,740
And you know I said at the beginning we have a limited budget and that's generally the case for departments

245
00:17:02,740 --> 00:17:04,750
of marketing or any business.

246
00:17:04,840 --> 00:17:11,650
We have a limited budget so we need to optimize this all we want here to compensate the costs and hopefully

247
00:17:11,710 --> 00:17:12,920
already earn some money.

248
00:17:13,060 --> 00:17:15,650
So these two results are very important.

249
00:17:15,670 --> 00:17:19,190
And so thank you very much to this UCB algorithm.

250
00:17:19,330 --> 00:17:24,900
And now as usual as promised we will finish this UCAP algorithm section was the last step.

251
00:17:24,940 --> 00:17:31,270
The exciting step about visualizing the results and simply what we will do is plot a histogram showing

252
00:17:31,270 --> 00:17:34,170
for each add the number of times it was selected.

253
00:17:34,180 --> 00:17:37,910
So we'll do that in the next tutorial and until then enjoy machine learning.
