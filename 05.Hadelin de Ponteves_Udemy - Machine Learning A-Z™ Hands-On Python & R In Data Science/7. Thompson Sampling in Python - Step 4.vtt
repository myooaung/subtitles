WEBVTT
1
00:00:00.300 --> 00:00:01.170
Okay my friends.

2
00:00:01.170 --> 00:00:07.290
So now comes the exciting step the step where we visualize the results of Thompson's sampling and mostly

3
00:00:07.440 --> 00:00:14.490
the step where we're going to find out if Thompson sampling can beat the UCB algorithm and about that.

4
00:00:14.490 --> 00:00:17.950
Let me remind what we got with the UCB algorithm.

5
00:00:18.000 --> 00:00:21.320
Remember that was you know in the original implementation.

6
00:00:21.420 --> 00:00:29.070
Remember that with 10000 round while the U.S. was perfectly able to find the best ad you know the ad

7
00:00:29.070 --> 00:00:34.610
with the highest conversion rate which is of course the ad of index 4 or you know ad number five.

8
00:00:34.620 --> 00:00:43.940
Then remember we tried with lower values of n we first tried with 5000 and indeed still with 5000 UCB

9
00:00:43.950 --> 00:00:48.750
was perfectly able to identify the best ad with the highest conversion rate.

10
00:00:48.780 --> 00:00:49.890
Then we even tried.

11
00:00:49.980 --> 00:00:56.480
N equals 1000 and with n 1000 still the UCB was perfectly able to find that best ad.

12
00:00:56.610 --> 00:01:04.240
However in our copy you know in our implementation of UCB Well we tried and equals 500.

13
00:01:04.380 --> 00:01:11.490
And unfortunately the UCB algorithm was not able to figure out the best ad you know that ad of index

14
00:01:11.490 --> 00:01:15.390
4 with the highest conversion rate in 500 rounds right.

15
00:01:15.390 --> 00:01:18.000
It identified ad number 7.

16
00:01:18.060 --> 00:01:25.260
So what we really want to see now you know when visualizing the results of Thompson sampling is if Thompson

17
00:01:25.260 --> 00:01:31.560
simply can not only figure out that same best ad you know with the highest conversion rate in 10000

18
00:01:31.740 --> 00:01:34.230
rounds first we will start with 10000 rounds.

19
00:01:34.230 --> 00:01:41.040
But mostly what we want to see is if it is able to figure out that best ad in less than 500 rounds or

20
00:01:41.040 --> 00:01:48.480
you know 500 rounds because if that's the case then that means Thompson sampling will beat the UCB algorithm.

21
00:01:48.480 --> 00:01:50.120
So can't wait to try.

22
00:01:50.160 --> 00:01:55.620
I promise that I actually have no idea because you know this is a new recording that I'm doing and when

23
00:01:55.620 --> 00:02:01.290
I made these implementations I only visualized the results with ten thousand so I'm discovering the

24
00:02:01.290 --> 00:02:02.310
results with you.

25
00:02:02.310 --> 00:02:07.250
And that's why I'm just super excited to not only show this to you but also to myself.

26
00:02:07.260 --> 00:02:11.650
So we're all in the same row of seats you know watching the same show.

27
00:02:12.030 --> 00:02:12.380
OK.

28
00:02:12.390 --> 00:02:14.100
So let's do this enough talking.

29
00:02:14.100 --> 00:02:19.290
Let's click this fully here to you know upload the data set into the notebook let's not forget to do

30
00:02:19.290 --> 00:02:23.420
this because we actually have not run any cell so far.

31
00:02:23.490 --> 00:02:30.000
So right now it is connecting to a runtime to enable file browsing and in a second we should see hopefully

32
00:02:30.330 --> 00:02:32.690
the upload button.

33
00:02:32.770 --> 00:02:35.280
It is not coming but you know sometimes it takes time.

34
00:02:35.280 --> 00:02:36.270
There we go.

35
00:02:36.270 --> 00:02:36.470
All right.

36
00:02:36.480 --> 00:02:37.770
So the upload button.

37
00:02:37.770 --> 00:02:39.150
Let's click it.

38
00:02:39.150 --> 00:02:43.260
And now in your machine please find the machinery it is at folder.

39
00:02:43.290 --> 00:02:48.480
Wherever you put it in which you had to download at the beginning of each section including this one

40
00:02:48.900 --> 00:02:50.880
then once you find it let's go inside.

41
00:02:50.880 --> 00:02:52.410
Let's go to part 6 now.

42
00:02:52.410 --> 00:03:01.410
Reinforcement learning and Section 33 Thompson sampling and of course by phone and at CGI are optimization.

43
00:03:01.440 --> 00:03:02.640
Let's click open.

44
00:03:02.640 --> 00:03:03.830
Let's click Okay.

45
00:03:03.870 --> 00:03:05.800
Now we have the data set.

46
00:03:05.910 --> 00:03:12.600
So I suggest that we do a run out so that we can you know quickly experiment with the different numbers

47
00:03:12.690 --> 00:03:18.180
of rounds and we're going to start with 10000 of course just to make sure that Thompson's sampling works

48
00:03:18.180 --> 00:03:19.160
correctly.

49
00:03:19.160 --> 00:03:20.420
So let's do this.

50
00:03:20.490 --> 00:03:25.820
Let's click runtime here and then run all.

51
00:03:25.830 --> 00:03:29.880
And now all the cells will be running including this one.

52
00:03:29.880 --> 00:03:36.720
Everything seems to be all good and well well well that's actually even more incredible than the UCB

53
00:03:36.720 --> 00:03:37.310
algorithm.

54
00:03:37.300 --> 00:03:44.630
You know it seems that this ad of index 4 was actually very quickly identified as the best.

55
00:03:44.660 --> 00:03:50.970
I'm actually very confident about that question whether or not the Thompson something will beat UCB

56
00:03:50.970 --> 00:03:57.290
in the sense that it will be able to identify this ad of index for as the best one in less than 500

57
00:03:57.300 --> 00:03:57.720
rounds.

58
00:03:57.720 --> 00:03:58.350
Right.

59
00:03:58.350 --> 00:04:01.680
Clearly all these other ads here are smashed.

60
00:04:01.680 --> 00:04:02.990
With respect to this one.

61
00:04:03.060 --> 00:04:03.300
Right.

62
00:04:03.300 --> 00:04:10.780
If we have a look at UCB again see the other ads are way more selective here than you know this one.

63
00:04:11.040 --> 00:04:11.310
OK.

64
00:04:11.310 --> 00:04:13.710
So I'm really really confident about this.

65
00:04:13.710 --> 00:04:18.890
So I think we can directly not write 500 but you know 1000.

66
00:04:19.080 --> 00:04:21.320
So I'm going to remove a zero here.

67
00:04:21.360 --> 00:04:22.180
All right.

68
00:04:22.290 --> 00:04:28.680
And then we're just gonna do another runtime and then restart this time and run off so that we can restart

69
00:04:28.680 --> 00:04:35.960
everything and rerun all the cells yes here and now all the cells will be running again with this 1000

70
00:04:35.970 --> 00:04:38.730
rounds now and let's see the new results.

71
00:04:38.970 --> 00:04:41.490
And coming in a second.

72
00:04:41.490 --> 00:04:42.510
There we go.

73
00:04:42.510 --> 00:04:42.900
OK.

74
00:04:42.930 --> 00:04:47.040
So now with 1000 rounds of course the other ads are a bit higher.

75
00:04:47.040 --> 00:04:51.810
You know I mean the bars of these other ads are a bit higher because of course now we're on a different

76
00:04:51.810 --> 00:04:52.170
scale.

77
00:04:52.180 --> 00:04:56.250
We're only with 1000 rounds but still with 1000 rounds.

78
00:04:56.250 --> 00:05:04.320
Well that ad of index four was way more selective then the others and now time for the ultimate truth

79
00:05:04.600 --> 00:05:08.610
will Thompson sampling beat the UCB algorithm.

80
00:05:08.610 --> 00:05:09.280
Meaning.

81
00:05:09.390 --> 00:05:15.480
Will it be able to identify the best ad with the highest conversion rate in 500 rounds.

82
00:05:15.480 --> 00:05:18.600
Well that's what we're about to figure out right away.

83
00:05:18.600 --> 00:05:24.490
So let's replace that 1000 value here by five hundred.

84
00:05:24.660 --> 00:05:29.910
Then let's click runtime again and then restart and run out.

85
00:05:29.910 --> 00:05:30.810
Are you ready.

86
00:05:30.810 --> 00:05:32.590
We're about to reveal the ultimate truth.

87
00:05:32.850 --> 00:05:33.750
Let's do this.

88
00:05:34.350 --> 00:05:35.120
Yes.

89
00:05:35.190 --> 00:05:36.090
And now.

90
00:05:36.210 --> 00:05:38.640
Now all the sales will be running again.

91
00:05:38.640 --> 00:05:43.100
And let's see if Thompson simply can figure out the best ad in 500 rounds.

92
00:05:43.740 --> 00:05:46.570
And congratulations Thompson sampling.

93
00:05:46.590 --> 00:05:54.300
It was indeed truly able to figure out that ad of index 4 with the highest conversion rate in as little

94
00:05:54.390 --> 00:05:55.980
as 500 rounds.

95
00:05:55.980 --> 00:05:57.630
So that was expected.

96
00:05:57.630 --> 00:06:02.670
You know I actually expect this because I knew from my educational background in machine learning you

97
00:06:02.670 --> 00:06:07.230
know reinforcement learning with one of the topics I had it's cool in my masters of machine learning

98
00:06:07.530 --> 00:06:14.340
that indeed Thompson's sampling is more powerful than UCB in most situations and that's what we clearly

99
00:06:14.340 --> 00:06:15.680
see here right.

100
00:06:15.690 --> 00:06:22.590
Even in 500 rounds that add an index four was way more selected than the others you know almost twice

101
00:06:22.590 --> 00:06:25.530
as much as this first ad and twice as much as this one.

102
00:06:25.530 --> 00:06:32.520
So clearly Thompson something did an amazing job at quickly identifying that best ad with the highest

103
00:06:32.730 --> 00:06:33.880
conversion rate.

104
00:06:33.990 --> 00:06:36.570
So to the question Should I try.

105
00:06:36.630 --> 00:06:39.780
Should I choose UCB or Thompson sampling.

106
00:06:39.780 --> 00:06:45.660
Well of course you can try that too because you know it just takes a few seconds to run the two but

107
00:06:45.750 --> 00:06:46.620
if you have a doubt.

108
00:06:46.620 --> 00:06:52.200
Well I would suggest to go with Thompson sampling because India is more powerful you know it is faster

109
00:06:52.380 --> 00:06:55.630
to identify the elements with the highest rates.

110
00:06:55.680 --> 00:06:56.760
So there we go.

111
00:06:56.760 --> 00:07:01.440
I was really happy to implement these two models with you UCB and Thompson something and I'm really

112
00:07:01.440 --> 00:07:08.100
glad that we enjoyed at the same time the final results on our notebook and now we're gonna move on

113
00:07:08.100 --> 00:07:13.500
to another branch of personal learning which has become super popular over the recent years.

114
00:07:13.500 --> 00:07:18.930
I'm talking about natural language processing and that is the branch of machine learning that of course

115
00:07:19.110 --> 00:07:25.110
allows to build you know chat bot or machine translations so that's not what we will do in this part

116
00:07:25.110 --> 00:07:30.780
7 because we will cover the basics with sentiment analysis but still it is great that you are being

117
00:07:30.780 --> 00:07:36.870
introduced to this branch because if you want to pursue a career in MLP Well this new chapter will definitely

118
00:07:36.870 --> 00:07:38.970
help you with the right basics.

119
00:07:38.970 --> 00:07:41.560
So I can't wait to see you in this next part.

120
00:07:41.590 --> 00:07:45.270
And until then enjoy reinforcement learning and enjoy machine learning.
