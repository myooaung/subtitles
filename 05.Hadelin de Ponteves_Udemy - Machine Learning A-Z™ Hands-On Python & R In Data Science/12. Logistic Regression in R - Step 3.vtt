WEBVTT
1

00:00:00.150  -->  00:00:02.590
Hello and welcome to this art tutorial.

2

00:00:02.670  -->  00:00:07.650
So now that we fitted our logistic regression to the training set we are going to predictive test that

3

00:00:07.660  -->  00:00:12.120
result using this classifier that we just built in the previous tutorial.

4

00:00:12.420  -->  00:00:17.790
So usually we can do this in one step but for logistic regression we're going to do it in two steps

5

00:00:17.880  -->  00:00:23.790
and we are more interested in having the 0 and 1 predictions rather than the probabilities.

6

00:00:23.790  -->  00:00:25.870
So first let's take anyway the probabilities.

7

00:00:25.860  -->  00:00:32.790
So where are we going to call them problem pred which is the vector of the period which will be the

8

00:00:32.790  -->  00:00:38.390
vector of the predicted probabilities of our test set observations by the classifier.

9

00:00:38.670  -->  00:00:41.930
So propertied equals predict.

10

00:00:41.940  -->  00:00:48.180
So we're going to use this pretty function to predict the probabilities based on our Jhelum classifier

11

00:00:48.190  -->  00:00:48.520
.

12

00:00:48.840  -->  00:00:55.170
And speaking of classifier This is our first argument in the pretty function so here we can put classifier

13

00:00:56.670  -->  00:01:05.430
come up then the next argument is type and for logistic regression we should choose the response type

14

00:01:05.940  -->  00:01:09.580
because that will give us the probabilities listed in a single vector.

15

00:01:09.840  -->  00:01:11.320
So that's what we want.

16

00:01:12.030  -->  00:01:16.520
And then we have to specify the new observations that we want to predict.

17

00:01:16.800  -->  00:01:22.000
So in our case these new observations are the test set observations.

18

00:01:22.380  -->  00:01:32.130
So new data equals test set and we're just going to remove the last column of the test said because

19

00:01:32.430  -->  00:01:36.090
the last column is the dependent variable and that's what we want to predict.

20

00:01:36.090  -->  00:01:38.190
So we will only take tests at minus 3.

21

00:01:38.190  -->  00:01:42.860
That is the two independent variables age and salary of the test set.

22

00:01:42.870  -->  00:01:45.440
All right so let's just summarize this line.

23

00:01:45.510  -->  00:01:53.190
We are predicting the test set observations using our classifier which is the logistic regression classify

24

00:01:53.200  -->  00:01:53.830
.

25

00:01:54.390  -->  00:01:54.700
All right.

26

00:01:54.700  -->  00:02:01.110
That returns the probabilities because as you can see if I select this line and execute here if I type

27

00:02:01.110  -->  00:02:09.370
problem pred in the console I will get as you can see I will get the probabilities of each of my test

28

00:02:09.370  -->  00:02:10.800
set observations.

29

00:02:11.190  -->  00:02:12.610
So here for example that's.

30

00:02:12.990  -->  00:02:14.510
Let's go to our test set.

31

00:02:14.700  -->  00:02:19.920
The first observation has indexed to the real result is zero.

32

00:02:19.920  -->  00:02:24.140
That means that the user number two didn't buy the SUV.

33

00:02:24.160  -->  00:02:31.280
Now if we go back to logistic regression we can see that for this user number two proc predetermines

34

00:02:31.360  -->  00:02:33.080
0.06 10.

35

00:02:33.240  -->  00:02:38.820
So what does this probability exactly that probability is the probability that the dependent variable

36

00:02:38.820  -->  00:02:39.940
is equal to one.

37

00:02:40.050  -->  00:02:44.430
That is the probability that the user buys the SUV.

38

00:02:44.430  -->  00:02:47.750
So here since it's very small it's open 0 16.

39

00:02:47.760  -->  00:02:53.640
That means that the classifier predicts a very low probability of the dependent variable being equal

40

00:02:53.640  -->  00:02:54.410
to 1.

41

00:02:54.420  -->  00:03:00.510
That means that it predicts that the user number two has very low chance to buy the SUV.

42

00:03:01.110  -->  00:03:09.390
Therefore in short propertied returns the predicted probabilities that the user will buy the SUV which

43

00:03:09.480  -->  00:03:13.500
we don't really want that we would rather have zero and one result.

44

00:03:13.650  -->  00:03:18.630
And to do this it's very simple we're just going to do some kind of a conversion.

45

00:03:19.140  -->  00:03:27.420
So we're going to create a vector of predicted results that we're going to call y pred equals and then

46

00:03:27.420  -->  00:03:33.950
we're just going to use if else to transform those probabilities into zero and one result.

47

00:03:33.960  -->  00:03:36.920
So him going to write if else.

48

00:03:37.020  -->  00:03:43.120
So the first argument of if else is the condition and the condition is going to be problem.

49

00:03:43.990  -->  00:03:55.590
Pred over 0.5 because if pred is larger than 0.5 that means that the user has more chance to buy the

50

00:03:55.590  -->  00:03:56.870
SUV.

51

00:03:56.880  -->  00:03:59.780
So in that case that means that we want to predict one.

52

00:03:59.930  -->  00:04:05.640
And actually the second argument of the if else function is the result you want to take when this condition

53

00:04:05.640  -->  00:04:06.410
is true.

54

00:04:06.600  -->  00:04:09.960
So here we're going to put a one on right.

55

00:04:10.080  -->  00:04:14.850
And the last argument is the result you want to return if this condition is false.

56

00:04:15.030  -->  00:04:20.690
And if this condition is false that means that the predicted probability is lower than 0.5.

57

00:04:20.700  -->  00:04:26.880
That means that the user has less chance to buy the SUV and therefore it's going to be a zero.

58

00:04:27.570  -->  00:04:28.440
And that's it.

59

00:04:28.440  -->  00:04:33.190
Now you're going to see if I select this line and executes.

60

00:04:33.420  -->  00:04:39.840
All right let's look at white bread now white bread as you can see.

61

00:04:40.080  -->  00:04:42.230
I only have zeroes or one.

62

00:04:42.300  -->  00:04:48.960
I no longer have the probabilities and remember the real result for use or two was zero.

63

00:04:48.960  -->  00:04:52.010
So that's what happened in reality.

64

00:04:53.070  -->  00:04:55.700
And here are classified predictors 0.

65

00:04:55.740  -->  00:04:57.820
So that's a correct prediction.

66

00:04:57.870  -->  00:05:01.630
And that's because remember before the probability was very low.

67

00:05:01.740  -->  00:05:06.380
So it was below 0.5 and therefore it returned zero.

68

00:05:06.930  -->  00:05:07.310
All right.

69

00:05:07.320  -->  00:05:09.430
So we predicted our test results.

70

00:05:09.690  -->  00:05:10.320
That's a good thing.

71

00:05:10.320  -->  00:05:18.000
Now we are going to evaluate this predictions thanks to the confusion matrix that we're going to build

72

00:05:18.090  -->  00:05:19.460
in the next tutorial.

73

00:05:19.560  -->  00:05:21.180
So I look forward to seeing you there.

74

00:05:21.360  -->  00:05:23.190
And until then enjoy machine learning.
