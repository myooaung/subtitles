1
00:00:00,250 --> 00:00:01,050
Okay, my friends.

2
00:00:01,160 --> 00:00:06,390
So now we're about to have a very exciting tutorial because we're about to watch the demo.

3
00:00:06,570 --> 00:00:13,770
You know, the demo of our A.I. being built first and trained and finally making our single predictions.

4
00:00:14,310 --> 00:00:16,770
So this is where we left off in the previous tutorial.

5
00:00:16,800 --> 00:00:18,990
Basically, all the implementation is done.

6
00:00:19,290 --> 00:00:23,970
And now I'm going to guide you through how to run this on Jubran Notebook.

7
00:00:24,360 --> 00:00:30,370
And therefore, the first thing I'll do will be to download and install everything we need to have Duplin

8
00:00:30,380 --> 00:00:30,820
notebook.

9
00:00:31,290 --> 00:00:35,670
If you already installed that you know, which contains Juber notebook.

10
00:00:35,910 --> 00:00:40,890
And if you already have you bring a book on your machine, then feel free to skip the five first minutes

11
00:00:40,890 --> 00:00:44,250
of this tutorial and start directly from minute five.

12
00:00:44,400 --> 00:00:44,660
Okay.

13
00:00:44,760 --> 00:00:47,160
This is when we will start using Juber in the book.

14
00:00:47,400 --> 00:00:49,510
And for the rest of you, well, follow me.

15
00:00:49,530 --> 00:00:52,880
I will guide you through the installation of an icon.

16
00:00:53,160 --> 00:00:54,460
And therefore in notebook.

17
00:00:54,960 --> 00:00:58,350
So let's open a new search tab on your favorite browser.

18
00:00:58,440 --> 00:01:02,110
And in a search bar and its type and conduct.

19
00:01:02,310 --> 00:01:02,820
There we go.

20
00:01:03,420 --> 00:01:06,480
So anakonda then we're gonna go to the first link.

21
00:01:06,810 --> 00:01:08,760
And I kinda has become so popular now.

22
00:01:09,210 --> 00:01:10,340
And we're going to go to.

23
00:01:10,410 --> 00:01:11,620
Well, get started.

24
00:01:11,850 --> 00:01:15,290
And install an icon, that individual edition.

25
00:01:15,870 --> 00:01:17,940
Then you can click download here.

26
00:01:18,540 --> 00:01:25,140
And then you're going to choose the anakonda and steller for your system, whether you have a Windows

27
00:01:25,180 --> 00:01:27,880
or Mac OS or Linux Imon macros.

28
00:01:28,090 --> 00:01:33,830
So I'm gonna go with this and you're gonna take the graphic installer and not the command line and stutter.

29
00:01:34,250 --> 00:01:34,560
All right.

30
00:01:34,620 --> 00:01:35,550
Graphic installer.

31
00:01:35,610 --> 00:01:39,840
And you're gonna take the Python three point seven version, not the Python two point seven.

32
00:01:39,930 --> 00:01:40,170
Right.

33
00:01:40,180 --> 00:01:42,420
So only this row here.

34
00:01:42,840 --> 00:01:43,890
So choose your system.

35
00:01:44,130 --> 00:01:49,560
Click the file and this will download Anakonda, you know, the installer.

36
00:01:50,220 --> 00:01:55,500
And in a few seconds you'll get, you know, the installer on your machine, probably in your download

37
00:01:55,500 --> 00:01:57,600
folder, which is done for me.

38
00:01:57,750 --> 00:01:58,140
Good.

39
00:01:58,500 --> 00:02:01,230
So let's just get rid of this download.

40
00:02:01,590 --> 00:02:03,720
And now let's go to my machine.

41
00:02:03,900 --> 00:02:04,330
There we go.

42
00:02:04,350 --> 00:02:08,550
This is my download folder on which the installer was downloaded.

43
00:02:09,060 --> 00:02:11,670
So make sure I find it and then double click it.

44
00:02:12,210 --> 00:02:15,210
And this will launch the installation of Anakonda.

45
00:02:15,630 --> 00:02:16,680
Here you can just click.

46
00:02:16,770 --> 00:02:17,620
Continue.

47
00:02:17,850 --> 00:02:18,570
Continue.

48
00:02:18,610 --> 00:02:19,280
Continue.

49
00:02:19,300 --> 00:02:20,050
Continue.

50
00:02:20,370 --> 00:02:20,850
Just click.

51
00:02:20,910 --> 00:02:21,840
Agree and continue.

52
00:02:21,840 --> 00:02:22,890
Can read that if you want.

53
00:02:22,920 --> 00:02:24,270
And then install.

54
00:02:24,780 --> 00:02:25,830
Then this will install.

55
00:02:25,890 --> 00:02:26,400
And I condemn.

56
00:02:26,430 --> 00:02:28,800
This will just take a few seconds.

57
00:02:29,040 --> 00:02:32,240
Not more than one minute and you know.

58
00:02:32,410 --> 00:02:32,600
Okay.

59
00:02:32,670 --> 00:02:33,210
Less than a minute.

60
00:02:33,270 --> 00:02:33,870
There we go.

61
00:02:33,960 --> 00:02:34,290
Good.

62
00:02:35,070 --> 00:02:39,220
So right now Anaconda's installing and let me tell you a few words about Anakonda.

63
00:02:39,340 --> 00:02:45,990
So this is basically a platform that contains several ideas on which you can code in Python and even.

64
00:02:46,020 --> 00:02:48,690
Ah, because you will see that it contains now or is to you.

65
00:02:49,020 --> 00:02:57,010
But the Python idea is that it contains include in a book and also Spider Spider is another great idea

66
00:02:57,030 --> 00:02:58,110
to code and Python.

67
00:02:58,230 --> 00:03:04,410
But here we're gonna go with Jubera notebook because we have been used to, you know, the IP only format,

68
00:03:04,440 --> 00:03:06,570
which was the format we used on Google CoLab.

69
00:03:06,990 --> 00:03:11,700
But this time since we have a huge dataset which we can't import on Google.

70
00:03:11,700 --> 00:03:15,130
Kulab Well, we're going to run this with Dupere notebook.

71
00:03:16,050 --> 00:03:16,500
All right.

72
00:03:16,560 --> 00:03:18,400
So let's see where we are.

73
00:03:18,420 --> 00:03:24,810
So still installing well, you know, running the package scripts, but you will have anakonda on your

74
00:03:24,810 --> 00:03:26,790
machine with no issue.

75
00:03:27,450 --> 00:03:27,630
All right.

76
00:03:27,650 --> 00:03:32,010
So here this is just given deed access to your downloads folder.

77
00:03:32,180 --> 00:03:32,840
Of course, you click.

78
00:03:32,870 --> 00:03:33,380
Okay.

79
00:03:33,780 --> 00:03:35,940
And then it should progress now.

80
00:03:36,480 --> 00:03:37,080
All right.

81
00:03:37,530 --> 00:03:38,220
Let's see.

82
00:03:39,230 --> 00:03:40,480
And dairy perfect.

83
00:03:40,740 --> 00:03:44,110
So now we have an icon that you can click continue to and insulation.

84
00:03:44,570 --> 00:03:45,820
Yes, close.

85
00:03:46,400 --> 00:03:50,060
And then you can either choose to keep the star or remove it as you want.

86
00:03:50,120 --> 00:03:50,750
I'll just keep it.

87
00:03:51,380 --> 00:03:51,980
All right, good.

88
00:03:52,010 --> 00:03:53,740
Now we have an icon then.

89
00:03:53,960 --> 00:03:54,710
It's not over.

90
00:03:55,070 --> 00:03:56,920
We still need to install a few things.

91
00:03:56,990 --> 00:04:04,520
And these things are unfortunately the Tensor Flow Library and the Keris library, because I remind

92
00:04:04,520 --> 00:04:06,620
that the beauty of Google CoLab.

93
00:04:06,680 --> 00:04:12,860
And the reason why I wanted to code everything on Google Kulab was that we didn't have anything to install

94
00:04:12,860 --> 00:04:17,810
because all the libraries and packages are already preinstalled except for the rare ones.

95
00:04:18,230 --> 00:04:22,070
But here on Jubera notebook or Spider or any anakonda I.D..

96
00:04:22,370 --> 00:04:27,770
Well, we have to install manually the packages, and that's exactly what I'm about to show you.

97
00:04:28,430 --> 00:04:35,210
So for Mac and Linux users, please open your terminal Linux users, you'll find it very easily.

98
00:04:35,390 --> 00:04:41,570
And Mac users, well, you can just press command plus space and then in the spotlight search can type

99
00:04:41,570 --> 00:04:42,230
terminal.

100
00:04:42,590 --> 00:04:44,180
And this will open your terminal.

101
00:04:44,580 --> 00:04:46,330
And for Windows users, no reason.

102
00:04:46,340 --> 00:04:47,210
I'm not forgetting you.

103
00:04:47,510 --> 00:04:49,540
Windows users, please go.

104
00:04:49,640 --> 00:04:56,000
You know, at the lower left corner of your monitor, please click that window button and then find

105
00:04:56,140 --> 00:05:01,700
an icon that in your list of programs and in an icon tab, you will find command prompt.

106
00:05:02,090 --> 00:05:03,110
Then please click it.

107
00:05:03,290 --> 00:05:10,070
And this will be the equivalent of the terminal on which you can run commands to install packages from

108
00:05:10,070 --> 00:05:10,400
the web.

109
00:05:11,120 --> 00:05:11,450
All right.

110
00:05:11,570 --> 00:05:13,400
So now we should all be on the same page.

111
00:05:13,430 --> 00:05:15,830
No Windows users, Mac users or Linux users.

112
00:05:16,070 --> 00:05:19,130
And we're about to install tend to flow and carers.

113
00:05:19,220 --> 00:05:25,100
And you will see that it will be still super quick and easy because the simple commands that we have

114
00:05:25,100 --> 00:05:29,810
to enter here in order to install tensor flow and carers are the following.

115
00:05:29,840 --> 00:05:31,250
So we have to enter them separately.

116
00:05:31,620 --> 00:05:32,690
US always Tenzer flow.

117
00:05:32,750 --> 00:05:39,940
We simply need to enter Pip, then install and then ten sir flow.

118
00:05:40,340 --> 00:05:40,670
All right.

119
00:05:40,700 --> 00:05:42,710
And then we just need to press enter.

120
00:05:43,100 --> 00:05:50,300
And this will download Tenzer flow from the web and install it on your anakonda environment.

121
00:05:50,510 --> 00:05:50,830
All right.

122
00:05:50,850 --> 00:05:55,550
So right now, as you can see, it is downloading it and installing it.

123
00:05:56,030 --> 00:05:56,330
All right.

124
00:05:56,360 --> 00:05:57,920
So sorry about all this.

125
00:05:58,010 --> 00:05:59,460
This is totally fine, right?

126
00:05:59,570 --> 00:06:03,810
See, installing connected packages, including, indeed, to flow.

127
00:06:03,950 --> 00:06:09,460
So it is not only installing tens of low, but also some what we call dependencies which work with denser

128
00:06:09,460 --> 00:06:09,740
flow.

129
00:06:09,920 --> 00:06:11,510
But please don't worry about all this.

130
00:06:11,810 --> 00:06:14,510
This will just install Tenzer flow, which is exactly what we need.

131
00:06:15,110 --> 00:06:15,310
Okay.

132
00:06:15,370 --> 00:06:15,680
Good.

133
00:06:15,770 --> 00:06:17,450
So installation done, as we can see.

134
00:06:17,510 --> 00:06:21,870
Successfully installed all these dependencies, including Tenzer flow.

135
00:06:22,400 --> 00:06:23,870
And now to install carers.

136
00:06:23,930 --> 00:06:25,030
Well, we're gonna do the same.

137
00:06:25,040 --> 00:06:27,830
We're gonna enter Pip and then install.

138
00:06:28,190 --> 00:06:29,440
And then carrots.

139
00:06:29,780 --> 00:06:30,800
And then press enter.

140
00:06:31,100 --> 00:06:34,490
And this will install carers on your machine.

141
00:06:34,550 --> 00:06:35,030
There we go.

142
00:06:35,030 --> 00:06:36,860
Successfully installed carers.

143
00:06:36,890 --> 00:06:39,050
And that's the version that we just installed.

144
00:06:39,080 --> 00:06:43,310
You might get a different version if you take this course way after I recorded it.

145
00:06:44,060 --> 00:06:44,420
Good.

146
00:06:44,750 --> 00:06:46,100
Done with the terminal.

147
00:06:46,160 --> 00:06:46,820
No worries.

148
00:06:46,850 --> 00:06:48,880
We won't have to deal with it anymore.

149
00:06:48,920 --> 00:06:53,810
I hope it wasn't too traumatising for, you know, those of you who used it for the first time.

150
00:06:53,840 --> 00:06:59,210
I know it can be a bit surprising at first, but indeed, this is the classic way of installing packages

151
00:06:59,510 --> 00:07:01,560
when you're not working on Google colour.

152
00:07:02,210 --> 00:07:05,170
So then you can quit the terminal and then there we go.

153
00:07:05,220 --> 00:07:11,160
Now we're ready to finally open anakonda and mostly open champion notebook.

154
00:07:11,360 --> 00:07:17,390
So we're gonna find Anakonda in either, you know, the list of applications from Mac users or in your

155
00:07:17,480 --> 00:07:19,220
list of programs for Windows users.

156
00:07:19,280 --> 00:07:20,960
And same for Linux users.

157
00:07:21,350 --> 00:07:23,770
So on Mac here is an icon there.

158
00:07:23,870 --> 00:07:25,490
So let's just double click it.

159
00:07:25,970 --> 00:07:27,470
And this will open it.

160
00:07:27,800 --> 00:07:33,500
I can just go back to my desktop here because Anaconda is now opening.

161
00:07:33,980 --> 00:07:37,820
And in a second, we should see that beautiful platform.

162
00:07:38,330 --> 00:07:43,700
Very user friendly, containing all the different ideas on which you can code with Python.

163
00:07:43,960 --> 00:07:44,320
All right.

164
00:07:44,420 --> 00:07:45,530
Loading applications.

165
00:07:46,130 --> 00:07:47,600
And in a second.

166
00:07:47,720 --> 00:07:48,290
There we go.

167
00:07:48,410 --> 00:07:50,060
Welcome to Anakonda.

168
00:07:50,510 --> 00:07:50,900
Good.

169
00:07:51,320 --> 00:07:53,600
So, as I told you, you have several ideas.

170
00:07:53,750 --> 00:07:58,670
You have this Oresteia for all, but you have several of them for Python, including Jubera in the book.

171
00:07:58,760 --> 00:07:59,630
And Spider.

172
00:07:59,800 --> 00:08:03,850
And as we said, we're going to run our implementation entrepreneur book.

173
00:08:03,860 --> 00:08:05,540
So here we are going to click launch.

174
00:08:05,960 --> 00:08:06,560
All right.

175
00:08:06,950 --> 00:08:09,020
And this will launch jibbering a book.

176
00:08:09,110 --> 00:08:12,650
And this will automatically open it on a new tab on your browser.

177
00:08:12,680 --> 00:08:13,160
You'll see.

178
00:08:13,190 --> 00:08:14,510
We should see pop up in a second.

179
00:08:14,540 --> 00:08:15,060
There we go.

180
00:08:15,530 --> 00:08:17,060
So welcome to Jubera notebook.

181
00:08:17,420 --> 00:08:18,890
So this is your machine.

182
00:08:19,070 --> 00:08:21,050
You will recognize the folders of your machine.

183
00:08:21,410 --> 00:08:26,600
And of course, now you're gonna go to the folder that contains, you know, the data set.

184
00:08:26,720 --> 00:08:30,110
Know, which you downloaded at the beginning of this practical activity.

185
00:08:30,500 --> 00:08:32,690
So remember, mine is on my desktop.

186
00:08:33,050 --> 00:08:37,370
And here is the folder, you know, Section 40, convolutional neural networks.

187
00:08:37,670 --> 00:08:38,500
So within a click it.

188
00:08:39,010 --> 00:08:39,730
And inside.

189
00:08:39,820 --> 00:08:42,320
Well, as you notice, I only kept the data set.

190
00:08:42,670 --> 00:08:46,720
I removed the two previous implementations which were in that folder.

191
00:08:46,990 --> 00:08:52,510
Because now what I want to do is actually take or exact implementation.

192
00:08:52,570 --> 00:08:55,120
We coded during this practical activity.

193
00:08:55,540 --> 00:09:02,630
I'm going to download it by clicking fell here and then download that IPY and B, make sure that the

194
00:09:02,710 --> 00:09:06,610
IP won't be because that's the format used for Jubera and Notebook.

195
00:09:07,120 --> 00:09:09,190
All right, then I'm gonna close this.

196
00:09:09,670 --> 00:09:15,130
And now we're gonna go to where this was downloaded, meaning in the download folder.

197
00:09:15,640 --> 00:09:21,520
We're gonna put that into this folder, you know, containing the data set right here.

198
00:09:21,640 --> 00:09:23,530
So you have to put it in the exact same folder.

199
00:09:23,590 --> 00:09:30,400
That's important because you have to run this file on Dupere in the book within the same directory folder

200
00:09:30,400 --> 00:09:31,580
that contains the dataset.

201
00:09:31,720 --> 00:09:33,610
That's why it's important to do it.

202
00:09:34,060 --> 00:09:38,680
So this is the exact implementation we coded together during the practical activity.

203
00:09:38,680 --> 00:09:44,140
And now we're gonna check that it works by running each and every single one of the cells.

204
00:09:44,590 --> 00:09:45,280
So let's do this.

205
00:09:45,340 --> 00:09:49,840
Let's go back to Jupiter notebook, which is right here.

206
00:09:50,090 --> 00:09:50,700
Okay, good.

207
00:09:50,950 --> 00:09:52,030
And now, indeed, we have.

208
00:09:52,120 --> 00:09:53,500
Well, our implementation.

209
00:09:54,010 --> 00:09:54,370
Good.

210
00:09:54,490 --> 00:09:56,620
So let's open it by just clicking it.

211
00:09:57,070 --> 00:10:02,290
And welcome to our implementation of the convolutional neural network.

212
00:10:02,830 --> 00:10:08,770
And now now is really the show time, because the only thing we'll have to do will be to click this

213
00:10:08,860 --> 00:10:11,750
run button, cell after cell, even the text cell.

214
00:10:11,800 --> 00:10:15,160
You know, we'll just start from the beginning and see what happens.

215
00:10:15,700 --> 00:10:16,030
Okay.

216
00:10:16,120 --> 00:10:16,860
So I already.

217
00:10:17,110 --> 00:10:21,400
Let me just, you know, clear all the output, which were the output we got in Google.

218
00:10:21,400 --> 00:10:26,800
Kulab So to do this, we can click kernel here and then restart and clear output.

219
00:10:26,950 --> 00:10:27,280
Right.

220
00:10:27,880 --> 00:10:28,950
We won't get these output.

221
00:10:28,990 --> 00:10:31,000
We will just really start from scratch.

222
00:10:31,270 --> 00:10:31,530
Okay.

223
00:10:32,050 --> 00:10:32,350
Good.

224
00:10:33,070 --> 00:10:34,570
So now let's do this.

225
00:10:34,780 --> 00:10:36,700
Three, two, one.

226
00:10:37,030 --> 00:10:38,100
Go, run.

227
00:10:38,220 --> 00:10:38,440
OK.

228
00:10:38,590 --> 00:10:39,430
That doesn't run anything.

229
00:10:39,460 --> 00:10:41,800
Because this is a tech cell run again.

230
00:10:41,920 --> 00:10:43,060
And now it is starting.

231
00:10:43,370 --> 00:10:47,950
We're gonna click our first run for the first cell and this will import tensor flow.

232
00:10:48,250 --> 00:10:50,380
This door means that it is running right now.

233
00:10:50,380 --> 00:10:55,780
You know, the cell is running and when it is done running, we will see the first number one, meaning

234
00:10:55,780 --> 00:10:57,910
that the cell is successfully run.

235
00:10:58,230 --> 00:10:58,520
OK.

236
00:10:58,600 --> 00:10:59,080
There we go.

237
00:10:59,230 --> 00:11:00,530
Using transfer back in.

238
00:11:00,570 --> 00:11:02,620
That's the output of this cell.

239
00:11:02,950 --> 00:11:08,770
And in order for this to work this way, we'll make sure to have run like me, the PIP install commands

240
00:11:08,860 --> 00:11:10,290
of tensor flow and cast.

241
00:11:10,900 --> 00:11:11,380
All right, good.

242
00:11:11,410 --> 00:11:16,180
Now, this sector version is still going to be you know, it's sensible to 2.0 2.0.

243
00:11:16,690 --> 00:11:18,730
And then let's just run the rest of the sales.

244
00:11:18,940 --> 00:11:19,480
There we go.

245
00:11:19,620 --> 00:11:24,640
So now we're entering part one, preprocessing the training set and now running the cell.

246
00:11:24,640 --> 00:11:30,640
We will get in the output that indeed we imported and preprocessed, you know, with data augmentation,

247
00:11:31,000 --> 00:11:35,170
8000 images belonging to two classes, dogs and cats.

248
00:11:35,560 --> 00:11:39,970
Okay, then let's click run for the next cell repricing the test set.

249
00:11:40,390 --> 00:11:46,690
And now running this cell, we'll get indeed this time 2000 images belonging to two classes.

250
00:11:46,690 --> 00:11:51,520
And of course, no image augmentation was applied, only feature scaling was applied.

251
00:11:52,150 --> 00:11:52,540
All right.

252
00:11:52,550 --> 00:11:55,250
And now entering part two, building the CNN.

253
00:11:55,360 --> 00:11:55,990
There we go.

254
00:11:56,320 --> 00:11:59,980
First, we initializes CNN as a sequence of layers.

255
00:12:00,400 --> 00:12:07,360
Then we start the first step, step one convolution where we add a convolutional layer, then puling.

256
00:12:07,570 --> 00:12:09,430
Let me just scroll down a bit, actually.

257
00:12:09,610 --> 00:12:09,910
Right.

258
00:12:10,420 --> 00:12:11,340
Then puling.

259
00:12:11,350 --> 00:12:12,190
So here we apply.

260
00:12:12,220 --> 00:12:14,800
Max, pulling through this first convolutional layer.

261
00:12:15,220 --> 00:12:15,570
Good.

262
00:12:15,580 --> 00:12:15,940
Done.

263
00:12:16,240 --> 00:12:18,640
Then we add a second convolutional layer.

264
00:12:18,910 --> 00:12:21,980
And at the same time, we play Max pulling done.

265
00:12:22,450 --> 00:12:28,570
Then we proceed to step three where we flatten the result of all these convolutions and pooling into

266
00:12:28,650 --> 00:12:35,140
a one dimensional single vector which will become in this new step for food connection.

267
00:12:35,470 --> 00:12:42,100
The input of a fully connected neural network which will contain only one fully connected layer with

268
00:12:42,100 --> 00:12:43,960
this cell that we're about to run.

269
00:12:44,200 --> 00:12:44,680
Done.

270
00:12:45,040 --> 00:12:47,110
And now let me scroll down a bit again.

271
00:12:47,450 --> 00:12:47,860
Right.

272
00:12:48,190 --> 00:12:49,510
Let's scroll down like that, OK?

273
00:12:49,990 --> 00:12:56,230
And now in the final step of the construction process of our CNN, we will connect all these to the

274
00:12:56,230 --> 00:12:59,980
final output layer, which will contain the final prediction.

275
00:13:00,400 --> 00:13:00,690
Right.

276
00:13:00,760 --> 00:13:01,810
Let's run this cell.

277
00:13:02,080 --> 00:13:03,010
And there we go.

278
00:13:03,130 --> 00:13:05,410
Now we're done building the CNN.

279
00:13:05,800 --> 00:13:07,180
Everything looks good so far.

280
00:13:07,390 --> 00:13:11,710
We now have a brain with some eyes that are able to see images.

281
00:13:11,740 --> 00:13:13,870
You know, just like we humans do with our eyes.

282
00:13:14,320 --> 00:13:21,340
And now now that we have this brain and these eyes will time to make them smart by training the CNN

283
00:13:21,580 --> 00:13:24,700
to recognize cats and dogs in images.

284
00:13:25,150 --> 00:13:25,780
So there we go.

285
00:13:25,780 --> 00:13:27,190
We enter part three now.

286
00:13:27,280 --> 00:13:33,090
First compiling the CNN with an Adam optimizer, which will performs to gas a gradient descent.

287
00:13:33,400 --> 00:13:38,440
The best way than a binary cross entropy lost function because we're doing binary classification.

288
00:13:38,810 --> 00:13:40,220
And an accuracy metrics.

289
00:13:40,640 --> 00:13:41,300
There we go.

290
00:13:41,480 --> 00:13:46,580
Now our CNN is compiled and now now, my friends, it's time for the training.

291
00:13:46,820 --> 00:13:47,540
Are you ready?

292
00:13:47,780 --> 00:13:55,190
This following cell will run the training for 25 books and at the same time, we will get the accuracy

293
00:13:55,280 --> 00:13:56,960
on the test set.

294
00:13:57,110 --> 00:14:01,850
So this will be very exciting because we will see the accuracy on both the training set and it's set

295
00:14:02,210 --> 00:14:04,410
getting increased and increased over time.

296
00:14:05,180 --> 00:14:05,810
Are you ready?

297
00:14:06,080 --> 00:14:07,610
I'm not going to make us wait longer.

298
00:14:07,850 --> 00:14:08,480
There we go.

299
00:14:08,630 --> 00:14:10,250
Now the training is starting.

300
00:14:10,280 --> 00:14:12,760
There we go with the first epic, one of 25.

301
00:14:13,160 --> 00:14:19,020
And here you see the loss, the accuracy, you know, progressing, increasing.

302
00:14:19,070 --> 00:14:25,990
So basically, the 250 here corresponds to the fact that, you know, the batch size is 32.

303
00:14:26,330 --> 00:14:33,350
And we have until 8000 images so that, you know, 32 times 250 equals eight thousand.

304
00:14:33,710 --> 00:14:41,450
So basically, you know, we have 32 images in the batch and we have 250 steps in each book to, you

305
00:14:41,450 --> 00:14:44,630
know, reach the total amount of eight thousand images.

306
00:14:45,350 --> 00:14:45,590
All right.

307
00:14:45,620 --> 00:14:47,510
So first it Bogdan, let's see what we got.

308
00:14:47,630 --> 00:14:52,430
We got an accuracy of 61 percent on the training set.

309
00:14:52,460 --> 00:14:53,000
Be careful.

310
00:14:53,450 --> 00:14:59,760
And on the set, we got an accuracy of sixty seven point seventy five percent, which is pretty good.

311
00:15:00,530 --> 00:15:00,860
All right.

312
00:15:00,950 --> 00:15:02,870
And now the other epics are running.

313
00:15:02,930 --> 00:15:04,730
But as you can see, it's going to take some time.

314
00:15:04,940 --> 00:15:06,380
So I'm just gonna do it.

315
00:15:06,380 --> 00:15:12,710
Fast forward here with some exciting music so that we can observe and mostly admire the result and the

316
00:15:12,710 --> 00:15:18,050
progression of, you know, getting higher and higher accuracies in accelerated mode.

317
00:15:18,380 --> 00:15:18,710
All right.

318
00:15:18,770 --> 00:15:19,370
Are you ready?

319
00:15:19,580 --> 00:15:21,290
Three, two, one.

320
00:15:21,590 --> 00:15:21,890
Action.

321
00:16:09,590 --> 00:16:10,020
All right.

322
00:16:10,040 --> 00:16:11,480
Here I am back in the game.

323
00:16:11,570 --> 00:16:15,730
I'm super excited to see the final result here of the 25th epic.

324
00:16:16,010 --> 00:16:16,580
There we go.

325
00:16:16,610 --> 00:16:23,090
We end up with a final accuracy on the training set of eighty nine percent and a final accuracy on the

326
00:16:23,090 --> 00:16:25,820
test set of 80 percent, which is great.

327
00:16:26,150 --> 00:16:31,670
And I remind that if we hadn't done that image augmentation pricing, you know, in part one, well,

328
00:16:31,730 --> 00:16:37,430
we would have ended up you know, you can try with an accuracy here of the training set around 98 or

329
00:16:37,430 --> 00:16:43,550
even ninety nine percent, which clearly indicates overfitting and a lower accuracy here on the test

330
00:16:43,550 --> 00:16:43,790
set.

331
00:16:43,850 --> 00:16:45,020
Around 70 percent.

332
00:16:45,530 --> 00:16:50,510
So that's why I insist image augmentation is absolutely fundamental.

333
00:16:51,230 --> 00:16:51,710
OK.

334
00:16:51,860 --> 00:16:53,300
So the training is done.

335
00:16:53,420 --> 00:16:53,970
There you go.

336
00:16:53,990 --> 00:16:56,060
You had your first advanced training.

337
00:16:56,360 --> 00:16:57,590
Congratulations again.

338
00:16:57,920 --> 00:16:58,340
And now.

339
00:16:58,340 --> 00:17:05,930
Well, let's test our model in production by, you know, making that single prediction of a single

340
00:17:06,140 --> 00:17:06,590
image.

341
00:17:07,310 --> 00:17:07,550
All right.

342
00:17:07,780 --> 00:17:11,940
So just before we run this, let's just make sure we know whether we're predicting.

343
00:17:12,230 --> 00:17:14,980
So we're going to go back to our folder, which is right here.

344
00:17:14,990 --> 00:17:16,400
We're going to go into our data set.

345
00:17:16,760 --> 00:17:21,010
And remember, those single images are in this single prediction for there.

346
00:17:21,470 --> 00:17:22,820
And we're going to start with this one.

347
00:17:22,940 --> 00:17:26,430
Caradog one which concerns, of course, Doug.

348
00:17:26,750 --> 00:17:32,360
And now we're going to check that our CNN can predict that indeed there is a duck inside this image.

349
00:17:32,730 --> 00:17:33,210
You ready?

350
00:17:33,560 --> 00:17:34,430
Let's do this.

351
00:17:34,510 --> 00:17:35,150
Where is it?

352
00:17:35,200 --> 00:17:35,960
It's right here.

353
00:17:36,440 --> 00:17:36,800
All right.

354
00:17:36,830 --> 00:17:37,960
So play.

355
00:17:38,420 --> 00:17:41,480
Now we're gonna play this cell to, you know, get a prediction.

356
00:17:41,780 --> 00:17:46,550
Make sure to have cat or dog one here, which corresponds to the image we just saw.

357
00:17:46,940 --> 00:17:48,350
And now let's play this cell.

358
00:17:48,710 --> 00:17:52,640
And now we're about to get the final prediction printed in the console.

359
00:17:52,850 --> 00:17:56,360
And we're certainly hoping to see Doug in the output.

360
00:17:56,760 --> 00:17:57,350
Are you ready?

361
00:17:57,770 --> 00:17:59,550
Three, two, one, run.

362
00:18:00,020 --> 00:18:01,060
And perfect.

363
00:18:01,250 --> 00:18:04,670
Our CNN predicted that there was a dog inside the image.

364
00:18:05,250 --> 00:18:05,870
Okay, good.

365
00:18:06,110 --> 00:18:07,880
First test bass successfully.

366
00:18:08,300 --> 00:18:09,490
Now let's see for it.

367
00:18:09,500 --> 00:18:10,430
The other image.

368
00:18:10,730 --> 00:18:13,190
This one, which contains, of course, a cat.

369
00:18:13,520 --> 00:18:19,760
So let's deploy our model on this single image and check that indeed, our CNN returns a cat.

370
00:18:20,180 --> 00:18:25,260
So to do this, we just need to replace this image name here by cat or dog, too.

371
00:18:25,850 --> 00:18:29,900
Then we can just play this cell again by just clicking wrong again.

372
00:18:30,230 --> 00:18:35,450
And now we're going to print this again to print a new prediction of this other image.

373
00:18:35,840 --> 00:18:38,060
So let's do this and let's hope that indeed we get.

374
00:18:38,810 --> 00:18:41,030
Cut in the output of the console.

375
00:18:41,240 --> 00:18:41,810
Perfect.

376
00:18:42,200 --> 00:18:44,900
So our CNN got all the answers correct.

377
00:18:45,290 --> 00:18:50,960
But what if I make it even more challenging, you know, because maybe I was sneaky and maybe I chose

378
00:18:51,050 --> 00:18:54,710
images in a test set that I checked was working well with our CNN.

379
00:18:54,740 --> 00:18:59,910
You know, that our CNN was able to predict correctly so to make it more challenging.

380
00:18:59,930 --> 00:19:03,320
My idea is to open a new tab here.

381
00:19:03,590 --> 00:19:04,730
Then the search bar.

382
00:19:04,880 --> 00:19:13,160
I would like to generate random number and we're gonna generate a random number using this, you know,

383
00:19:13,160 --> 00:19:15,020
the classic tool by Google.

384
00:19:15,440 --> 00:19:21,770
And we're going to generate a random number from our test set, you know, which contains the new images

385
00:19:21,860 --> 00:19:23,750
on which the mole wasn't trained.

386
00:19:24,050 --> 00:19:30,590
And we're gonna take randomly an image from this test set and tested as a final test, you know, for

387
00:19:30,710 --> 00:19:31,250
CNN.

388
00:19:31,700 --> 00:19:38,480
So let's see the images of the dogs in the test set go from 4000 one to 4000.

389
00:19:39,050 --> 00:19:39,840
Well, 5000.

390
00:19:40,390 --> 00:19:45,680
And the cats go from the same four thousand one up to once again, 5000.

391
00:19:46,310 --> 00:19:48,290
Okay, so let's start with dog first.

392
00:19:48,380 --> 00:19:56,150
Let's generate a random number, you know, between 4000 and 5000.

393
00:19:56,810 --> 00:19:58,280
And let's generate this.

394
00:19:58,550 --> 00:20:00,860
And we get four, six, eight, nine.

395
00:20:00,950 --> 00:20:01,200
OK.

396
00:20:01,270 --> 00:20:02,330
So let's get that image.

397
00:20:02,570 --> 00:20:04,280
Four, six, eight, nine.

398
00:20:04,310 --> 00:20:06,050
Which is a bit below.

399
00:20:06,170 --> 00:20:06,760
Okay.

400
00:20:06,920 --> 00:20:07,730
Right here.

401
00:20:07,760 --> 00:20:08,660
Four, six, eight, nine.

402
00:20:09,020 --> 00:20:09,170
All right.

403
00:20:09,230 --> 00:20:11,210
So that's actually gonna be quite challenging.

404
00:20:11,390 --> 00:20:13,960
Our CNN might not recognize that it is a dog.

405
00:20:13,970 --> 00:20:14,610
Will it see?

406
00:20:14,960 --> 00:20:16,160
So I'm going to take that image.

407
00:20:16,190 --> 00:20:22,160
I just copied it and into this single prediction folder, I'm pacing it and I'm going to rename this.

408
00:20:22,250 --> 00:20:26,440
You know, I'm going to rename this Caradog three.

409
00:20:26,680 --> 00:20:26,920
All right.

410
00:20:26,970 --> 00:20:28,220
That will be our third image.

411
00:20:28,700 --> 00:20:31,820
And now let's generate a new number for the cat.

412
00:20:32,570 --> 00:20:32,900
All right.

413
00:20:32,930 --> 00:20:35,330
Four thousand five hundred and thirty eight.

414
00:20:35,540 --> 00:20:40,250
And so in the test set, let's go into the cat folder and at stake.

415
00:20:40,550 --> 00:20:41,570
Sorry, what is it again?

416
00:20:42,050 --> 00:20:43,670
Four thousand five hundred thirty eight.

417
00:20:43,870 --> 00:20:44,230
Yes.

418
00:20:44,540 --> 00:20:47,630
Four thousand five hundred and thirty eight.

419
00:20:47,960 --> 00:20:50,030
Which is right here.

420
00:20:50,720 --> 00:20:50,970
All right.

421
00:20:51,050 --> 00:20:51,430
Wow.

422
00:20:51,530 --> 00:20:52,670
It's gonna be challenging again.

423
00:20:52,700 --> 00:20:53,210
Let's see.

424
00:20:53,390 --> 00:20:56,220
We only see a cat head here, so let's see.

425
00:20:56,280 --> 00:20:56,650
Okay.

426
00:20:56,840 --> 00:21:01,530
Well, I didn't expect such a hard challenge, but let's see how our CNN is going to do anyway.

427
00:21:02,000 --> 00:21:05,480
So I just copied it and into this single prediction for the let's based it.

428
00:21:06,050 --> 00:21:13,540
Let's, you know, copy the name of this and then paste that here to replace that by Caradog four.

429
00:21:14,270 --> 00:21:14,690
All right.

430
00:21:14,810 --> 00:21:21,680
So let's deploy our model on this single image first and let's hope that, you know, it predicts this

431
00:21:21,680 --> 00:21:22,880
time a dog.

432
00:21:23,300 --> 00:21:27,330
So here it is, Caradog three.

433
00:21:27,800 --> 00:21:28,370
I'm scared.

434
00:21:28,700 --> 00:21:32,360
And let's play run and then print prediction.

435
00:21:32,540 --> 00:21:32,860
Doug.

436
00:21:33,050 --> 00:21:33,770
Woo hoo!

437
00:21:33,800 --> 00:21:34,370
Great.

438
00:21:34,820 --> 00:21:39,890
I was really scared because, you know, is not that obvious for a machine that the dog in the image

439
00:21:39,890 --> 00:21:40,340
is a dog.

440
00:21:40,430 --> 00:21:41,420
But that's really good.

441
00:21:41,930 --> 00:21:42,290
OK.

442
00:21:42,350 --> 00:21:46,220
And now that special cat and this red gift wrapping thing.

443
00:21:46,690 --> 00:21:50,960
Caradog for let us hope that our recognizes that it is a cat.

444
00:21:51,080 --> 00:21:56,300
You know, it's obvious for us humans, but here we only see a head actually, you know, with the features

445
00:21:56,300 --> 00:21:56,700
of a cat.

446
00:21:56,720 --> 00:21:59,480
So yeah, let's hope that it will work.

447
00:22:00,080 --> 00:22:02,300
So Caradog four.

448
00:22:02,750 --> 00:22:04,270
And now let's play the cell.

449
00:22:04,340 --> 00:22:06,460
I'm scared again and.

450
00:22:07,780 --> 00:22:08,400
Excellent.

451
00:22:08,840 --> 00:22:13,350
So 100 percent correct answers from our CNN.

452
00:22:13,490 --> 00:22:14,270
So that's awesome.

453
00:22:14,330 --> 00:22:16,720
I'm really happy that it worked 100 percent.

454
00:22:16,760 --> 00:22:22,520
That's because, you know, we have, after all, an accuracy of 80 percent on the test set, which

455
00:22:22,520 --> 00:22:25,970
means that indeed eight predictions will be correct out of ten.

456
00:22:26,090 --> 00:22:31,340
So, yes, even if the images are quite challenging, you know, with not some obvious dogs or cats.

457
00:22:31,550 --> 00:22:33,920
Well, our model can do pretty well.

458
00:22:34,400 --> 00:22:35,930
So congratulations.

459
00:22:36,110 --> 00:22:39,260
You just built a pretty advanced artificial wool network.

460
00:22:39,290 --> 00:22:42,620
You know, the convolutional neural network is quite technically advanced.

461
00:22:42,890 --> 00:22:43,970
So congratulations.

462
00:22:43,970 --> 00:22:47,420
And not only you built it, but mostly you built it successfully.

463
00:22:47,690 --> 00:22:50,480
It is now a really good cat or dog predictor.

464
00:22:50,930 --> 00:22:56,420
And feel free to, you know, play the same game by generating a random number and test some other single

465
00:22:56,450 --> 00:22:58,490
images you might be surprised by.

466
00:22:58,550 --> 00:23:01,490
You know, the predictive power of the model you just built.

467
00:23:02,270 --> 00:23:02,870
All right.

468
00:23:02,960 --> 00:23:04,580
So we're making great progress here.

469
00:23:04,610 --> 00:23:07,040
Now we're done with deep learning part.

470
00:23:07,340 --> 00:23:12,230
So we're going to move on to the next part, which is about dimensionality reduction and which is super

471
00:23:12,230 --> 00:23:16,550
important for you and your career, because, you know, you're going to work with huge datasets, with

472
00:23:16,550 --> 00:23:17,660
many, many features.

473
00:23:17,900 --> 00:23:23,810
So you need to have the right tools in order to reduce the dimensionality of your dataset without losing,

474
00:23:23,810 --> 00:23:25,430
of course, the information.

475
00:23:25,460 --> 00:23:30,410
You know, the information that allows to learn some correlations between the features and the dependent

476
00:23:30,410 --> 00:23:30,800
variable.

477
00:23:31,310 --> 00:23:32,840
So that's a super important chapter.

478
00:23:32,900 --> 00:23:35,580
I look forward to seeing you in this next part.

479
00:23:35,960 --> 00:23:37,940
And until then, enjoy machine learning.
