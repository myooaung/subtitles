WEBVTT
1
00:00:00.210 --> 00:00:01.070
Okay my friends.

2
00:00:01.080 --> 00:00:06.510
Are you ready to now implement the Step 3 of this uproar conference bound implementation.

3
00:00:06.510 --> 00:00:13.020
We already implemented step 2 and we even got these values in each of the ads and now we need to use

4
00:00:13.020 --> 00:00:15.270
a trick to find the maximum of them.

5
00:00:16.020 --> 00:00:16.460
All right.

6
00:00:16.500 --> 00:00:19.990
So in the last tutorial we left things at this.

7
00:00:19.990 --> 00:00:20.620
Else.

8
00:00:20.730 --> 00:00:21.150
Else.

9
00:00:21.300 --> 00:00:26.670
Meaning if the numbers of selections of this add number I we're dealing with right now and the second

10
00:00:26.670 --> 00:00:31.590
for loop is equal to zero meaning if the ad was not selected yet.

11
00:00:32.130 --> 00:00:36.860
Well in that case what we have to do is absolutely select it right.

12
00:00:36.870 --> 00:00:41.150
We must selected if the ad has not been selected yet we have to select it.

13
00:00:41.160 --> 00:00:42.060
Why is that.

14
00:00:42.060 --> 00:00:47.820
That's because as we explained at the end of the previous editorial we need to make sure that the denominator

15
00:00:48.000 --> 00:00:52.880
and i n which is the number of times the ad I was selected is different than zero.

16
00:00:52.950 --> 00:00:58.270
So that we can indeed compute the average reward and then the upper confidence belt.

17
00:00:58.410 --> 00:01:04.230
So there is a priority now you know at the beginning you know in the first round to select all the ads

18
00:01:04.590 --> 00:01:11.730
and therefore the trick that we have to use is to set the upper bound of this particular ad we're dealing

19
00:01:11.730 --> 00:01:17.610
with right now and the second for loop to a super high value so that it will be indeed the maximum upper

20
00:01:17.610 --> 00:01:22.110
bound and therefore the one that will be selected because at the end we will of course like the ad with

21
00:01:22.110 --> 00:01:24.340
the highest upper confidence bound.

22
00:01:24.360 --> 00:01:31.050
So the trick right now is to take that variable again which so far thanks to this if condition is equal

23
00:01:31.050 --> 00:01:36.690
to this value but if we're not in this if condition and if we are in this ls Well we would like that

24
00:01:36.690 --> 00:01:42.000
same variable to be equal to super high value like you know infinity.

25
00:01:42.180 --> 00:01:44.460
But we can't sell it equal to infinity.

26
00:01:44.460 --> 00:01:51.090
However we can set it equal to a super high value like 1 times 10 at the power of four hundred.

27
00:01:51.090 --> 00:01:54.860
That's a classic trick in Python to you know use the infinity.

28
00:01:54.870 --> 00:02:01.260
This is a super high value which will definitely be the maximum of the upper bound so that if that ad

29
00:02:01.260 --> 00:02:06.720
was not selected yet well we will selected because indeed it will have the maximum of the upper confidence

30
00:02:06.720 --> 00:02:07.340
belt.

31
00:02:07.530 --> 00:02:14.010
And now we need to finish with a final if condition to make sure that indeed we select the ad with the

32
00:02:14.010 --> 00:02:16.100
highest upper confidence bound.

33
00:02:16.200 --> 00:02:19.770
And the trick to do that is to play with Max.

34
00:02:19.800 --> 00:02:24.990
Upper bound here which so far is initialized to 0 you know before we start this second for loop and

35
00:02:25.170 --> 00:02:34.500
that upper bound and the if condition that we have to adhere is to check if well the upper bound of

36
00:02:34.890 --> 00:02:39.810
the ad we're dealing with right now and the second for loop and which we've just computed either through

37
00:02:39.810 --> 00:02:48.090
this first if condition or in this else we have to check if that upper bound is larger than the maximum

38
00:02:48.780 --> 00:02:49.720
upper bound.

39
00:02:49.920 --> 00:02:50.330
Right.

40
00:02:50.340 --> 00:02:51.120
Because.

41
00:02:51.120 --> 00:02:55.290
Okay at the beginning you know before we start this for loop Max bound is equal to zero.

42
00:02:55.290 --> 00:03:01.920
Then we will compute this for the first ad we will get either a value if this ad had already been selected

43
00:03:02.280 --> 00:03:03.560
or we'll get this value.

44
00:03:03.600 --> 00:03:09.890
And of course since this or this will be larger than zero then this Max upper bound will be updated.

45
00:03:09.900 --> 00:03:10.200
Right.

46
00:03:10.200 --> 00:03:12.100
And this is exactly our next up here.

47
00:03:12.210 --> 00:03:15.550
If indeed upper bound is larger than this maximum upper bound.

48
00:03:15.870 --> 00:03:19.130
Well we need to update that Max.

49
00:03:19.260 --> 00:03:21.580
Upper bound value.

50
00:03:21.600 --> 00:03:29.490
There we go to be equal to that new upper bound just computed either through this if condition or this

51
00:03:29.690 --> 00:03:30.250
else.

52
00:03:30.290 --> 00:03:30.890
All right.

53
00:03:30.930 --> 00:03:32.180
So upper bounds.

54
00:03:32.220 --> 00:03:32.680
Okay.

55
00:03:32.700 --> 00:03:38.370
And then in the next step of this second for loop Well we will compute a new value of the upper bound

56
00:03:38.370 --> 00:03:38.800
here.

57
00:03:38.840 --> 00:03:45.740
If the ad was already selected and if this new value of the upper bound is larger than this new Max

58
00:03:45.810 --> 00:03:51.280
upper bound which was just updated to the previous upper bound of the previous ad well we will update

59
00:03:51.280 --> 00:03:57.030
it again you see the you see the trick each time you know at each iteration of the second for loop we

60
00:03:57.030 --> 00:03:58.590
compute a new upper bound.

61
00:03:58.590 --> 00:04:03.240
We compare that upper bound with the largest upper bound collected so far.

62
00:04:03.240 --> 00:04:08.010
You know with the previous ad and if that new upper bound is larger than this maximum upper bound will

63
00:04:08.070 --> 00:04:10.950
we update the new maximum upper bound.

64
00:04:10.950 --> 00:04:16.740
And of course for the ads that have not been selected yet this upper bound will always be larger than

65
00:04:16.740 --> 00:04:20.190
the max upper bound and therefore this ad will be selected.

66
00:04:20.190 --> 00:04:22.080
And speaking of this ad we'll be selected.

67
00:04:22.080 --> 00:04:25.580
Well that's exactly the final step we have to do here.

68
00:04:25.620 --> 00:04:31.760
We have to select the ad and in order to select it well we need to update that variable here at equals

69
00:04:31.760 --> 00:04:33.040
0 2.

70
00:04:33.090 --> 00:04:35.780
Of course I know the index.

71
00:04:35.880 --> 00:04:41.970
I love that ad we're dealing with right now in the second for loop and that's my friend.

72
00:04:41.970 --> 00:04:48.330
That's how you implement Step 3 by making sure at the same time that you select the ad that was not

73
00:04:48.480 --> 00:04:49.490
selected yet.

74
00:04:49.590 --> 00:04:52.850
And at some point you know after a couple of rounds where all the ads will be selected.

75
00:04:52.860 --> 00:04:57.960
Well you know actually after the 10 first rounds all the ads will automatically be selected and then

76
00:04:58.080 --> 00:04:59.930
we will only be in this condition.

77
00:04:59.990 --> 00:05:02.870
No this ls condition will never happen after the 10 first rounds.

78
00:05:03.020 --> 00:05:04.960
OK so there you go now.

79
00:05:04.980 --> 00:05:05.830
Congratulations.

80
00:05:05.830 --> 00:05:07.860
This steps three is implemented.

81
00:05:07.860 --> 00:05:13.470
We selected the that has a maximum upper confidence bound and now what we simply need to do is just

82
00:05:13.680 --> 00:05:15.910
finish this main code here.

83
00:05:15.910 --> 00:05:22.020
You know this sell by going back to this first for loop you know iterating through the round you know

84
00:05:22.080 --> 00:05:27.930
through the users who connect to the website and well the way to do this is just to update each of these

85
00:05:27.930 --> 00:05:33.210
variables which were created at the beginning before starting the for loop to indeed get you know that

86
00:05:33.300 --> 00:05:36.410
full list of all the add selected over the round.

87
00:05:36.480 --> 00:05:42.150
Then of course update this variable to update the numbers of selections for each of the ADD and of course

88
00:05:42.180 --> 00:05:46.070
update this one which gives the accumulated rewards for each of the ads.

89
00:05:46.170 --> 00:05:50.670
And finally update the total accumulated reward over the rounds.

90
00:05:50.670 --> 00:05:52.710
All right so I will let you do this.

91
00:05:52.740 --> 00:05:55.280
Please try to do it yourself before the next material.

92
00:05:55.320 --> 00:06:00.720
And we will implement the solution together in the next material which will at the same time finish

93
00:06:00.870 --> 00:06:02.630
and complete that sale.

94
00:06:02.790 --> 00:06:06.120
Implementing the upper confidence bound algorithm.

95
00:06:06.120 --> 00:06:06.500
All right.

96
00:06:06.510 --> 00:06:10.440
So good luck again and I'll see you in the next material for the solution.

97
00:06:10.440 --> 00:06:12.240
And until then enjoy machine learning.
