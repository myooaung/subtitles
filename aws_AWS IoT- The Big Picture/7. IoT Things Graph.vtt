WEBVTT
1
00:00:01.143 --> 00:00:06.020
Now let's take a look at a service that's currently in preview as of early 2019,

2
00:00:06.020 --> 00:00:07.971
the IoT Things Graph.

3
00:00:07.971 --> 00:00:11.769
The IoT Things Graph is a service that makes it easy to visually connect

4
00:00:11.769 --> 00:00:16.173
different devices and web services to build the IoT applications.

5
00:00:16.173 --> 00:00:18.869
So let's take a look at some of the features that IoT

6
00:00:18.869 --> 00:00:23.201
Things Graph has as of early 2019.

7
00:00:23.201 --> 00:00:27.280
Let's start by just taking a look at the basic features of IoT Things Graph.

8
00:00:27.280 --> 00:00:32.834
The first is visual interface that will help build applications with IoT.

9
00:00:32.834 --> 00:00:36.328
The next is the models that it provides to help us model out

10
00:00:36.328 --> 00:00:38.370
how to interact with different IoT devices,

11
00:00:38.370 --> 00:00:42.156
and then some tools that'll help us run these models at

12
00:00:42.156 --> 00:00:45.786
the edge on local computing devices,

13
00:00:45.786 --> 00:00:49.906
and finally some ability to monitor the applications that we're working with.

14
00:00:49.906 --> 00:00:53.494
So let's briefly take a look at the first component, the visual interface.

15
00:00:53.494 --> 00:00:57.814
Now this is just a screenshot of what the interface is currently looking like,

16
00:00:57.814 --> 00:01:00.177
however I won't be doing any demos because this is

17
00:01:00.177 --> 00:01:01.472
likely to change in the future.

18
00:01:01.472 --> 00:01:04.464
But essentially what'll happen is you'll be able to construct

19
00:01:04.464 --> 00:01:08.500
applications using a sort of drag and drop interface that you also

20
00:01:08.500 --> 00:01:11.348
program in order to add the different components of,

21
00:01:11.348 --> 00:01:16.253
such as the devices and the services that are going and working together.

22
00:01:16.253 --> 00:01:18.181
Now in addition to this visual interface,

23
00:01:18.181 --> 00:01:21.935
we also have the models, and the models will take a few different components.

24
00:01:21.935 --> 00:01:23.094
They'll start with actions,

25
00:01:23.094 --> 00:01:27.434
such as some ability to set the state of the device that we're working with.

26
00:01:27.434 --> 00:01:30.963
In this case let's imagine this as a car and the states that

27
00:01:30.963 --> 00:01:33.381
the car might have could be on or off,

28
00:01:33.381 --> 00:01:36.099
is the engine running or is it not running?

29
00:01:36.099 --> 00:01:39.363
Next up, we might have events that happen with that car,

30
00:01:39.363 --> 00:01:41.960
so we could have an event that is turned on,

31
00:01:41.960 --> 00:01:43.515
so the car was just turned on.

32
00:01:43.515 --> 00:01:46.580
We could have another event that the car was just turned off,

33
00:01:46.580 --> 00:01:50.986
and this sort of model can be built out for any devices that we have,

34
00:01:50.986 --> 00:01:53.937
so that we can start to rely on this to get the basic structure

35
00:01:53.937 --> 00:01:56.394
of our interactions with similar devices.

36
00:01:56.394 --> 00:01:59.167
For example, if we're using Things Graph models,

37
00:01:59.167 --> 00:02:01.658
we might start with a base model for a car,

38
00:02:01.658 --> 00:02:06.489
maybe a generic car that doesn't have too many specific attributes that we need,

39
00:02:06.489 --> 00:02:09.259
and then we can expand that from just the two attributes that

40
00:02:09.259 --> 00:02:12.415
it has to maybe working for a sports model.

41
00:02:12.415 --> 00:02:15.799
Now this model might carry those same two attributes over,

42
00:02:15.799 --> 00:02:18.780
but it might add attributes of its own so that it

43
00:02:18.780 --> 00:02:20.876
works better for the sports car.

44
00:02:20.876 --> 00:02:22.327
We could do the same thing with maybe an electric car

45
00:02:22.327 --> 00:02:24.193
where the two attributes are brought over,

46
00:02:24.193 --> 00:02:26.934
but it adds in its own unique attributes in order just to make

47
00:02:26.934 --> 00:02:30.021
sure it works better with that particular device.

48
00:02:30.021 --> 00:02:34.430
Now this is all subject to change, given that the service is still in preview,

49
00:02:34.430 --> 00:02:36.568
you'll probably see a lot of additional features as

50
00:02:36.568 --> 00:02:39.120
the months and years wear on.

51
00:02:39.120 --> 00:02:41.092
So let's go ahead and take a look at everything

52
00:02:41.092 --> 00:02:43.849
we've done so far in this module.

53
00:02:43.849 --> 00:02:47.254
We started off by looking at device- application interaction.

54
00:02:47.254 --> 00:02:51.755
Now we looked at the Message Broker to see how messages were sent back and

55
00:02:51.755 --> 00:02:55.901
forth between every device and application working in AWS IoT.

56
00:02:55.901 --> 00:02:59.275
We also took at a look at the Device Shadow service to see how we

57
00:02:59.275 --> 00:03:03.631
kept track of the state of different devices using Device Shadows

58
00:03:03.631 --> 00:03:05.515
and the service that manages them.

59
00:03:05.515 --> 00:03:09.020
We also looked at building and extending IoT applications.

60
00:03:09.020 --> 00:03:13.557
We saw how we could use the AWS IoT button to speed up the

61
00:03:13.557 --> 00:03:16.409
development of applications that just require us to use a

62
00:03:16.409 --> 00:03:17.983
simple click to trigger some of them.

63
00:03:17.983 --> 00:03:21.859
We also saw how we could use the Rules Engine to take a bunch of the

64
00:03:21.859 --> 00:03:27.013
different information coming in from AWS IoT devices on AWS IoT topics

65
00:03:27.013 --> 00:03:30.831
and process that to some external sources,

66
00:03:30.831 --> 00:03:34.971
either by storing the data or taking other actions on it down the line,

67
00:03:34.971 --> 00:03:39.121
in integrations both with AWS services and with third party applications.

68
00:03:39.121 --> 00:03:39.485
And finally,

69
00:03:39.485 --> 00:03:42.292
we took at the look at the IoT Things Graph and what it

70
00:03:42.292 --> 00:03:46.364
represents for constructing the future of IoT applications in

71
00:03:46.364 --> 00:03:48.995
a more efficient and visualized way.

72
00:03:48.995 --> 00:03:51.801
So hopefully now you have a better understanding of a bunch of the

73
00:03:51.801 --> 00:04:00.000
different components that go into collecting, storing, and processing information using AWS IoT.

