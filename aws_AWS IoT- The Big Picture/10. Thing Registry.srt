1
00:00:01,447 --> 00:00:05,876
So now let's talk about one of the most critical components of AWS IoT,

2
00:00:05,876 --> 00:00:08,676
the AWS IoT Thing Registry.

3
00:00:08,676 --> 00:00:10,846
When we're working with AWS IoT,

4
00:00:10,846 --> 00:00:14,682
we might have a lot of different devices of the same type or we might have a lot

5
00:00:14,682 --> 00:00:18,201
of various different devices of completely different types.

6
00:00:18,201 --> 00:00:19,725
Now when we're working with these,

7
00:00:19,725 --> 00:00:23,704
we're going to want a way that we can allow them to all connect to AWS IoT,

8
00:00:23,704 --> 00:00:26,548
we're going to want to be able to secure those connections to

9
00:00:26,548 --> 00:00:29,212
make sure that they're not forged or hacked,

10
00:00:29,212 --> 00:00:31,771
and we're also going to want to be able to send data from these

11
00:00:31,771 --> 00:00:36,151
varying devices into our AWS IoT system so that can be processed

12
00:00:36,151 --> 00:00:38,930
and evaluated by other applications.

13
00:00:38,930 --> 00:00:42,111
So how do we do all this and what's the building block of getting

14
00:00:42,111 --> 00:00:44,490
started with all of these different devices?

15
00:00:44,490 --> 00:00:47,096
Well that would be the Thing Registry.

16
00:00:47,096 --> 00:00:48,694
Now with the Thing Registry,

17
00:00:48,694 --> 00:00:51,894
you're going to be able to take a bunch of different devices and

18
00:00:51,894 --> 00:00:55,008
classify them into things called thing types.

19
00:00:55,008 --> 00:00:57,727
Now a thing type in this example might be a car,

20
00:00:57,727 --> 00:01:00,503
where we might have an electric car, a sports vehicle,

21
00:01:00,503 --> 00:01:02,391
and just your average everyday automotive,

22
00:01:02,391 --> 00:01:06,379
and all of those could be classified with a thing type of car.

23
00:01:06,379 --> 00:01:08,631
Then if they had similar attributes,

24
00:01:08,631 --> 00:01:13,006
we could actually have each of these cars attributes be stored

25
00:01:13,006 --> 00:01:15,597
and searchable inside of the Thing Registry.

26
00:01:15,597 --> 00:01:18,753
For example, for our sports car and all of our other cars,

27
00:01:18,753 --> 00:01:21,094
we might have the horsepower of the car,

28
00:01:21,094 --> 00:01:23,960
the year it was actually made, and the price of the car,

29
00:01:23,960 --> 00:01:27,127
and those could all be searchable attributes for every single kind

30
00:01:27,127 --> 00:01:31,205
of car that we're using in our Thing Registry.

31
00:01:31,205 --> 00:01:32,587
Now in addition to these three searchable attributes,

32
00:01:32,587 --> 00:01:35,889
we could also have a list of non-searchable attributes that are

33
00:01:35,889 --> 00:01:39,476
essentially just metadata about the car that we can't use the same

34
00:01:39,476 --> 00:01:40,627
way with the searchable attributes,

35
00:01:40,627 --> 00:01:45,901
but still give us useful information whenever we're looking at our IoT things.

36
00:01:45,901 --> 00:01:48,591
So what's some more information about thing types?

37
00:01:48,591 --> 00:01:50,220
Well, when we're working with thing types,

38
00:01:50,220 --> 00:01:54,039
it's important to note that things can have those three searchable attributes,

39
00:01:54,039 --> 00:01:56,000
but when things have a thing type,

40
00:01:56,000 --> 00:01:59,996
they can also have up to 50 non-searchable attributes.

41
00:01:59,996 --> 00:02:03,801
Additionally, you can only have things be associated with one thing type.

42
00:02:03,801 --> 00:02:04,682
Now this is optional,

43
00:02:04,682 --> 00:02:07,841
you don't need to have to a thing type associated with your thing,

44
00:02:07,841 --> 00:02:12,599
but it does give you the ability to add these 50 non-searchable attributes.

45
00:02:12,599 --> 00:02:17,408
Now with that said, you can actually have an unlimited number of thing types.

46
00:02:17,408 --> 00:02:19,889
So this means you can create as many types as you'd like to

47
00:02:19,889 --> 00:02:22,393
sort all of your various IoT things into.

48
00:02:22,393 --> 00:02:25,053
So what are these attributes we're talking about when

49
00:02:25,053 --> 00:02:26,566
we're talking about thing types?

50
00:02:26,566 --> 00:02:26,973
Well,

51
00:02:26,973 --> 00:02:30,766
attributes are essentially just key value pairs and the searchable

52
00:02:30,766 --> 00:02:33,762
attributes are going to help us find specific things,

53
00:02:33,762 --> 00:02:37,870
so if we wanted to find cars with horsepowers above a specific number,

54
00:02:37,870 --> 00:02:41,146
or maybe cars that only have a make of 2017 or 2019.

55
00:02:41,146 --> 00:02:43,921
This would allow us to do that.

56
00:02:43,921 --> 00:02:44,186
Additionally,

57
00:02:44,186 --> 00:02:49,320
we can also have non-searchable attributes that simply provide extra metadata.

58
00:02:49,320 --> 00:02:52,241
Now this becomes useful if we have maybe some cars with

59
00:02:52,241 --> 00:02:54,117
seat warmers or without seat warmers,

60
00:02:54,117 --> 00:02:58,012
we might want to be able to integrate those with our attributes,

61
00:02:58,012 --> 00:03:00,475
but we can't, in the current system of AWS IoT,

62
00:03:00,475 --> 00:03:04,052
have more than just those three searchable attributes.

63
00:03:04,052 --> 00:03:06,297
So back to our Thing Registry visualization here.

64
00:03:06,297 --> 00:03:10,764
We now have thing types, which we can classify our registered things in,

65
00:03:10,764 --> 00:03:13,365
and the attributes associated with both the things

66
00:03:13,365 --> 00:03:15,836
and the thing types themselves.

67
00:03:15,836 --> 00:03:16,965
Now in addition to these concepts here,

68
00:03:16,965 --> 00:03:20,213
we also have the concepts of thing groups.

69
00:03:20,213 --> 00:03:21,646
Now it kind of goes without saying,

70
00:03:21,646 --> 00:03:25,286
but thing groups are essentially going to contain things,

71
00:03:25,286 --> 00:03:27,911
but they can also contain other thing groups.

72
00:03:27,911 --> 00:03:32,726
So we can nest the things and the thing groups together and

73
00:03:32,726 --> 00:03:35,464
keep that going as much as we'd like.

74
00:03:35,464 --> 00:03:38,796
We can also have permission policies that are attached to thing groups,

75
00:03:38,796 --> 00:03:41,749
and I'll talk about that in just a moment.

76
00:03:41,749 --> 00:03:43,857
But in addition to being able to do that,

77
00:03:43,857 --> 00:03:49,023
we can also use thing groups to coordinate update jobs and certificate rotation.

78
00:03:49,023 --> 00:03:50,846
So if we want to have updates across a set of things,

79
00:03:50,846 --> 00:03:53,004
we can use thing groups to do that.

80
00:03:53,004 --> 00:03:56,550
Further, things can also be in a max of 10 thing groups.

81
00:03:56,550 --> 00:03:59,906
So this means that you can't have the same light bulb or the same

82
00:03:59,906 --> 00:04:03,145
car be in more than 10 of these thing groups.

83
00:04:03,145 --> 00:04:05,195
Now this is simple a current limitation that AWS

84
00:04:05,195 --> 00:04:07,738
imposes on us inside of their system.

85
00:04:07,738 --> 00:04:11,605
So with these things groups, we can classify all of our different devices,

86
00:04:11,605 --> 00:04:14,195
maybe across different factories or geographic locations,

87
00:04:14,195 --> 00:04:18,224
and this could allow us to helpfully delineate between these

88
00:04:18,224 --> 00:04:20,757
different devices and also take all of the actions I just

89
00:04:20,757 --> 00:04:23,175
mentioned pertaining to thing groups.

90
00:04:23,175 --> 00:04:27,028
In addition to thing groups, there's also dynamic thing groups.

91
00:04:27,028 --> 00:04:28,127
Now dynamic thing groups,

92
00:04:28,127 --> 00:04:33,275
you can think of as groups that are created using a sort of search query based

93
00:04:33,275 --> 00:04:36,590
on the attributes and other characteristics of IoT things.

94
00:04:36,590 --> 00:04:38,649
Now in this particular example,

95
00:04:38,649 --> 00:04:42,361
let's imagine a search query where we wanted to find any

96
00:04:42,361 --> 00:04:45,925
devices with a battery level of 50% or better.

97
00:04:45,925 --> 00:04:46,828
Now in the case on the right,

98
00:04:46,828 --> 00:04:50,071
there's a bunch of different devices that might be in different locations,

99
00:04:50,071 --> 00:04:53,452
but they all share a characteristic of a battery level attribute,

100
00:04:53,452 --> 00:04:56,134
and this attribute is going to allow us to group all of these

101
00:04:56,134 --> 00:04:58,615
devices together based on that attribute.

102
00:04:58,615 --> 00:05:00,684
Now if the battery level in one of these devices went

103
00:05:00,684 --> 00:05:02,451
down below a certain threshold,

104
00:05:02,451 --> 00:05:06,749
then we would remove that dynamically from the thing group.

105
00:05:06,749 --> 00:05:07,011
Similarly,

106
00:05:07,011 --> 00:05:10,190
if a device with a lower battery level then achieved a

107
00:05:10,190 --> 00:05:12,096
higher battery level than what we needed,

108
00:05:12,096 --> 00:05:13,887
it would be added to this group.

109
00:05:13,887 --> 00:05:17,079
Now dynamic thing groups are created from the search queries,

110
00:05:17,079 --> 00:05:20,051
and they can be much more complex than this.

111
00:05:20,051 --> 00:05:22,512
So what can we do with dynamic thing groups?

112
00:05:22,512 --> 00:05:23,922
Well we can, as we just mentioned,

113
00:05:23,922 --> 00:05:26,514
group things together based on search queries that

114
00:05:26,514 --> 00:05:28,958
look at things like connectivity, metadata,

115
00:05:28,958 --> 00:05:31,124
and other attributes.

116
00:05:31,124 --> 00:05:33,780
We can also apply policies to dynamic thing groups in the same

117
00:05:33,780 --> 00:05:36,310
way we could do it with regular thing groups.

118
00:05:36,310 --> 00:05:38,532
Now these dynamic thing groups can be especially useful

119
00:05:38,532 --> 00:05:41,577
when we want to target devices that need certain

120
00:05:41,577 --> 00:05:44,498
attributes in order to receive updates.

121
00:05:44,498 --> 00:05:46,321
In the case of the battery level example,

122
00:05:46,321 --> 00:05:48,662
in our IoT Thing Registry here,

123
00:05:48,662 --> 00:05:51,090
we could maybe target devices that we knew had sufficient battery

124
00:05:51,090 --> 00:05:55,939
level to run an entire update process without potentially going below

125
00:05:55,939 --> 00:05:57,810
the required battery amount that we needed.

126
00:05:57,810 --> 00:06:01,345
So now that we know about the thing groups and dynamic thing groups,

127
00:06:01,345 --> 00:06:03,849
let's take a look at how certificates and policies

128
00:06:03,849 --> 00:06:05,772
work together to control permissions.

129
00:06:05,772 --> 00:06:08,887
Now when we have a bunch of IoT things,

130
00:06:08,887 --> 00:06:11,720
each of these IoT things is going to need a certificate to

131
00:06:11,720 --> 00:06:14,511
authenticate itself to the IoT Thing Registry.

132
00:06:14,511 --> 00:06:18,367
This certificate will allow those things to say that they are indeed the

133
00:06:18,367 --> 00:06:22,260
verified thing that was associated with a particular certificate.

134
00:06:22,260 --> 00:06:25,415
Now in addition to the certificates that verify the identity of

135
00:06:25,415 --> 00:06:28,852
the device and that it is the device you expect,

136
00:06:28,852 --> 00:06:33,277
there's also policies that can be attached to the certificates themselves.

137
00:06:33,277 --> 00:06:36,058
Those policies will essentially say that anything that can prove it

138
00:06:36,058 --> 00:06:39,453
has that certificate that authenticates its identity should have

139
00:06:39,453 --> 00:06:41,733
this relevant policy associated with it.

140
00:06:41,733 --> 00:06:45,608
Now in addition to associating policies directly with certificates,

141
00:06:45,608 --> 00:06:49,195
you can also associate policies with thing groups.

142
00:06:49,195 --> 00:06:52,025
Now this can be either thing groups or dynamic thing groups,

143
00:06:52,025 --> 00:06:55,118
and in this way you can avoid having to recycle

144
00:06:55,118 --> 00:06:57,356
different policies in the long run.

145
00:06:57,356 --> 00:06:58,030
So for example,

146
00:06:58,030 --> 00:07:01,820
rather than having to attach a policy to every single certificate

147
00:07:01,820 --> 00:07:04,851
out of a million certificates and then renew those as the

148
00:07:04,851 --> 00:07:07,028
certificates are expired and have to be recreated,

149
00:07:07,028 --> 00:07:11,219
you could instead just put things inside of thing groups and then assign

150
00:07:11,219 --> 00:07:14,582
policies to those thing groups that do not need to be rotated,

151
00:07:14,582 --> 00:07:17,254
instead you just manage the certificate rotation and keep

152
00:07:17,254 --> 00:07:20,609
those things within the same thing group.

153
00:07:20,609 --> 00:07:23,717
So hopefully this gives you a better understanding of the IoT Thing Registry.

154
00:07:23,717 --> 00:07:25,985
Whenever you're creating a thing inside of IoT,

155
00:07:25,985 --> 00:07:28,685
you have the option to use all of these different

156
00:07:28,685 --> 00:07:30,042
tools independently or together,

157
00:07:30,042 --> 00:07:40,000
and they can help you form very robust policies for onboarding your devices, or maintaining security, and also for managing permissions and updates.

