WEBVTT
1
00:00:01.157 --> 00:00:05.612
Let's take a look at two more services underneath the IoT services category,

2
00:00:05.612 --> 00:00:07.715
Events and SiteWise.

3
00:00:07.715 --> 00:00:12.436
AWS IoT Events is a fully managed IoT service that makes it easy to detect

4
00:00:12.436 --> 00:00:16.734
and respond to events from IoT sensors and applications.

5
00:00:16.734 --> 00:00:19.689
Well let's try and visualize what we're talking about here.

6
00:00:19.689 --> 00:00:21.724
We'll have an IoT Events application,

7
00:00:21.724 --> 00:00:23.943
and this can get information from IoT Analytics,

8
00:00:23.943 --> 00:00:26.921
it could get information directly from IoT Things,

9
00:00:26.921 --> 00:00:30.994
and it can also get information from anything else that decides to

10
00:00:30.994 --> 00:00:34.637
use the IoT Events API to send data indirectly.

11
00:00:34.637 --> 00:00:38.003
Now IoT Events is going to take information from these various

12
00:00:38.003 --> 00:00:40.314
sources and it's going to start to aggregate it,

13
00:00:40.314 --> 00:00:45.069
and it's going to take this aggregated information and define some logic and

14
00:00:45.069 --> 00:00:49.513
states to detect particular kinds of events in the data.

15
00:00:49.513 --> 00:00:50.318
Now when these events occur,

16
00:00:50.318 --> 00:00:55.220
it will take some sort of action from those events to try and

17
00:00:55.220 --> 00:00:58.562
either mitigate a potential error or simply take a different action

18
00:00:58.562 --> 00:01:01.669
that's appropriate given a various time.

19
00:01:01.669 --> 00:01:02.363
And by doing this,

20
00:01:02.363 --> 00:01:06.474
it may end up triggering something like a lambda function to run some bits of

21
00:01:06.474 --> 00:01:10.587
code that might mitigate whatever the action is or potentially notify

22
00:01:10.587 --> 00:01:14.748
somebody else using the simple notification service.

23
00:01:14.748 --> 00:01:18.175
Now this entire process could be because of a manufacturing

24
00:01:18.175 --> 00:01:21.599
malfunction on some assembly line or it could have nothing to do

25
00:01:21.599 --> 00:01:24.789
with errors and could simply be another way to get some benefits

26
00:01:24.789 --> 00:01:28.077
out of more complex workflows here.

27
00:01:28.077 --> 00:01:31.432
Now the key part of this is that these events are defined by

28
00:01:31.432 --> 00:01:34.229
many different pieces of information coming together rather

29
00:01:34.229 --> 00:01:39.226
than a single piece of information, and that's what makes it a bit more powerful.

30
00:01:39.226 --> 00:01:45.352
But in addition to AWS IoT Events, let's take a look at AWS IoT SiteWise.

31
00:01:45.352 --> 00:01:48.051
This is a managed service that makes it easy to collect and

32
00:01:48.051 --> 00:01:52.184
organize data from industrial equipment at scale.

33
00:01:52.184 --> 00:01:54.520
So let's try and visualize this.

34
00:01:54.520 --> 00:01:57.397
A common challenge of factory environments and on-premises

35
00:01:57.397 --> 00:02:00.766
environments is that all of the information is cloistered inside

36
00:02:00.766 --> 00:02:04.301
of that factory environment and is difficult to take actions on

37
00:02:04.301 --> 00:02:06.435
inside of the cloud like AWS is.

38
00:02:06.435 --> 00:02:09.277
So how do we address this using SiteWise?

39
00:02:09.277 --> 00:02:13.484
Well SiteWise will provide a SiteWise Gateway and this gateway

40
00:02:13.484 --> 00:02:17.714
can be used both to take different machines and actually link

41
00:02:17.714 --> 00:02:21.527
those up locally on the locally connected system and send data

42
00:02:21.527 --> 00:02:22.977
back and forth between them,

43
00:02:22.977 --> 00:02:26.282
or it can actually be used to integrate with on-premises

44
00:02:26.282 --> 00:02:28.915
data that's already stored on-premises,

45
00:02:28.915 --> 00:02:34.918
but eventually it can take that data and actually extract it to the AWS cloud.

46
00:02:34.918 --> 00:02:37.818
And it will do this in a secure and efficient manner that really

47
00:02:37.818 --> 00:02:41.285
leverages both the connectivity of local devices and the fact

48
00:02:41.285 --> 00:02:43.597
that many of these industrial systems weren't initially designed

49
00:02:43.597 --> 00:02:46.033
to do something like this.

50
00:02:46.033 --> 00:02:48.086
Now because of the SiteWise Gateway,

51
00:02:48.086 --> 00:02:51.076
and other potential pieces of hardware that the SiteWise Gateway software

52
00:02:51.076 --> 00:02:54.553
could be installed on within a common manufacturing setting,

53
00:02:54.553 --> 00:02:58.552
this makes the extraction of this industrial equipment data much easier and

54
00:02:58.552 --> 00:03:03.091
allows you to take more actions on it inside of the AWS cloud.

55
00:03:03.091 --> 00:03:07.614
So now that we've take a look at both AWS IoT Events and IoT SiteWise,

56
00:03:07.614 --> 00:03:10.464
let's go ahead and review what we've done in this module.

57
00:03:10.464 --> 00:03:11.617
In this module,

58
00:03:11.617 --> 00:03:15.666
we looked at how we could enrich data using things like the AWS IoT

59
00:03:15.666 --> 00:03:18.446
Analytics pipelines that are part of IoT Analytics,

60
00:03:18.446 --> 00:03:21.857
and also how we could use IoT Events to aggregate bits of

61
00:03:21.857 --> 00:03:25.163
information from many different sources and create dynamic

62
00:03:25.163 --> 00:03:28.257
events that can trigger different actions.

63
00:03:28.257 --> 00:03:28.617
After that,

64
00:03:28.617 --> 00:03:31.752
we looked how we could analyze data using systems like

65
00:03:31.752 --> 00:03:34.988
IoT Analytics and configuring them together with other

66
00:03:34.988 --> 00:03:36.701
tools like SageMaker Notebooks.

67
00:03:36.701 --> 00:03:39.033
Now you could many other things with all this data,

68
00:03:39.033 --> 00:03:41.090
including creating your own visualizations and

69
00:03:41.090 --> 00:03:43.135
leveraging tools like Amazon QuickSight,

70
00:03:43.135 --> 00:03:46.478
to graph all of those as well.

71
00:03:46.478 --> 00:03:48.512
So now that we've learned how we can enrich and analyze

72
00:03:48.512 --> 00:03:50.512
data inside of the AWS IoT Suite,

73
00:03:50.512 --> 00:03:53.433
how else can we continue to grow and learn more

74
00:03:53.433 --> 00:03:55.597
about IoT and relevant technologies?

75
00:03:55.597 --> 00:03:57.910
Well let's take a look at what could be next for us.

76
00:03:57.910 --> 00:04:02.344
First, we might want to think about building our own IoT applications.

77
00:04:02.344 --> 00:04:05.105
There's not very much code in this course and that's a

78
00:04:05.105 --> 00:04:07.420
symptom of having to get through so many different

79
00:04:07.420 --> 00:04:10.513
services inside of the AWS IoT Suite.

80
00:04:10.513 --> 00:04:13.878
I'd suggest diving down into building your own applications and learning

81
00:04:13.878 --> 00:04:16.702
more of the nitty gritty fundamentals about AWS IoT.

82
00:04:16.702 --> 00:04:19.399
You might also want to think about developing

83
00:04:19.399 --> 00:04:21.566
applications with other AWS services.

84
00:04:21.566 --> 00:04:25.505
Now learning these other services will really also help you

85
00:04:25.505 --> 00:04:28.414
with developing your IoT applications.

86
00:04:28.414 --> 00:04:31.644
Another particular point of services you might want to know is ones

87
00:04:31.644 --> 00:04:34.613
related to serverless application development.

88
00:04:34.613 --> 00:04:38.879
AWS Lambda in particular is used pretty frequently throughout the AWS

89
00:04:38.879 --> 00:04:42.632
ecosystem to tie serverless applications to one another.

90
00:04:42.632 --> 00:04:44.486
And because AWS IoT is serverless,

91
00:04:44.486 --> 00:04:46.860
it's definitely another good path forward to go.

92
00:04:46.860 --> 00:04:48.780
If you're interested in this in particular,

93
00:04:48.780 --> 00:04:51.475
you can check out some of my other courses on serverless

94
00:04:51.475 --> 00:04:54.823
application development here on Pluralsight.

95
00:04:54.823 --> 00:04:55.223
Now finally,

96
00:04:55.223 --> 00:04:58.474
I just wanted to take a moment and thank you for watching this course.

97
00:04:58.474 --> 00:05:02.339
If you have any feedback for me on this course or for future courses,

98
00:05:02.339 --> 00:05:06.647
please feel free to leave it in the discussion comments attached to this course.

99
00:05:06.647 --> 00:05:07.500
And if you have any questions,

100
00:05:07.500 --> 00:05:10.569
don't hesitate to reach out with my contact information.

101
00:05:10.569 --> 00:05:16.000
This has been Fernando Medina Corey and I hope to see you in another course soon.

