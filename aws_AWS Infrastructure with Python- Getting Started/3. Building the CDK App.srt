1
00:00:01,340 --> 00:00:05,640
We will also need to edit the app file.

2
00:00:05,640 --> 00:00:08,940
Now let's just import the lambda_stack,

3
00:00:08,940 --> 00:00:16,340
which is the new class and the new file we just created.

4
00:00:16,340 --> 00:00:20,680
We're also declaring the LambdaStack class here,

5
00:00:20,680 --> 00:00:29,140
as well as naming this CloudFormation stack as LambdaStack.

6
00:00:29,140 --> 00:00:36,030
Finally, we can also specify a new set of environment variables.

7
00:00:36,030 --> 00:00:42,440
Currently it is set to the US West region.

8
00:00:42,440 --> 00:00:48,590
Now what I personally do is I change this environment variable

9
00:00:48,590 --> 00:00:52,980
to actually get information from CDK itself.

10
00:00:52,980 --> 00:00:58,590
So I can actually specify an environment here,

11
00:00:58,590 --> 00:01:08,800
and I am going to specify my AWS account to be the default account,

12
00:01:08,800 --> 00:01:12,540
which is specified in my operating system.

13
00:01:12,540 --> 00:01:17,090
You can access this through CDK by using the

14
00:01:17,090 --> 00:01:23,240
CDK_DEFAULT_ACCOUNT environment variable.

15
00:01:23,240 --> 00:01:29,310
Even if you didn't manually define this, CDK will take care of defining this.

16
00:01:29,310 --> 00:01:32,570
For the region, we can do something similar,

17
00:01:32,570 --> 00:01:45,040
and we're going to retrieve the CDK_DEFAULT_REGION as the region for this app.

18
00:01:45,040 --> 00:01:45,840
And of course,

19
00:01:45,840 --> 00:01:50,440
we have to import the Python OS library to gain

20
00:01:50,440 --> 00:01:54,240
access to these environment variables.

21
00:01:54,240 --> 00:01:58,240
Now let's actually attempt to run cdk ls.

22
00:01:58,240 --> 00:02:04,310
You notice that we did everything correctly; however, we still have an error.

23
00:02:04,310 --> 00:02:14,940
The error is we cannot import the AWS API gateway library.

24
00:02:14,940 --> 00:02:18,270
This is because this library actually does not yet

25
00:02:18,270 --> 00:02:20,500
exist in our virtual environment.

26
00:02:20,500 --> 00:02:26,340
We will need to make some edits to our setup tools

27
00:02:26,340 --> 00:02:29,810
to gain access to this library.

28
00:02:29,810 --> 00:02:31,440
Now, to do this,

29
00:02:31,440 --> 00:02:38,670
all you have to do is go to setup.py and then specify the

30
00:02:38,670 --> 00:02:41,830
new libraries you're going to import.

31
00:02:41,830 --> 00:02:54,440
In this case, I am importing cdk.aws_lambda and cdk.aws_apigateway.

32
00:02:54,440 --> 00:02:58,690
Now we're also specifying that we're using version 1.58,

33
00:02:58,690 --> 00:03:07,640
again to ensure that we don't run into any breaking changes.

34
00:03:07,640 --> 00:03:08,050
Whoops.

35
00:03:08,050 --> 00:03:11,380
So don't forget to also include the comma,

36
00:03:11,380 --> 00:03:14,330
so syntax errors can be very common,

37
00:03:14,330 --> 00:03:20,340
and then we can install all of these dependencies again.

38
00:03:20,340 --> 00:03:26,210
Now it will look for all of the dependencies in Setup tools.

39
00:03:26,210 --> 00:03:32,320
So it will find all of the dependencies that you enumerated here in Setup tools.

40
00:03:32,320 --> 00:03:39,140
So you can see it's now installed the lambda and API gateway dependencies.

41
00:03:39,140 --> 00:03:46,510
Now, if we run cdk ls, you can see we can now view the LambdaStack.

42
00:03:46,510 --> 00:03:50,740
We can even synth the LambdaStack,

43
00:03:50,740 --> 00:03:57,140
which will get us a CloudFormation template for this LambdaStack.

44
00:03:57,140 --> 00:04:03,410
I can actually again upload this lambda's template to the CloudFormation

45
00:04:03,410 --> 00:04:09,640
service and CloudFormation will provision this LambdaStack.

46
00:04:09,640 --> 00:04:21,000
Also, take note that there are additional metadata attributes in this stack. This is for AWS to actually use for tracking purposes.

