WEBVTT
1
00:00:01.770 --> 00:00:02.080
All right.

2
00:00:02.100 --> 00:00:06.590
Let's get started with the first example which is hello.

3
00:00:07.080 --> 00:00:11.820
As I mentioned previously we need to first of all switch to the environment that we're working on which

4
00:00:11.820 --> 00:00:14.350
is machine learning Python 2019.

5
00:00:14.360 --> 00:00:19.080
So we're going to activate that to get started.

6
00:00:19.080 --> 00:00:24.150
Now the next thing is that I'm going to make use of Jupiter lab for the purpose of this tutorial.

7
00:00:24.180 --> 00:00:27.710
So let's get started by clicking to launch.

8
00:00:27.810 --> 00:00:33.120
Give it a few minutes and it will eventually switch to that screen for you.

9
00:00:33.150 --> 00:00:43.210
So let me just go back to my this top machine learning and then the code.

10
00:00:43.860 --> 00:00:44.180
OK.

11
00:00:44.220 --> 00:00:45.630
So let's just close that all.

12
00:00:46.020 --> 00:00:47.540
I don't need that.

13
00:00:47.670 --> 00:00:48.860
I'm saying yes.

14
00:00:49.000 --> 00:00:49.370
All right.

15
00:00:49.380 --> 00:00:54.190
So this is a clean slate nominee.

16
00:00:54.190 --> 00:00:57.100
This is what you will see on this.

17
00:00:57.100 --> 00:01:04.840
This may be blank if you don't actually have any codes whatsoever or any files.

18
00:01:04.840 --> 00:01:11.650
So on this side of the screen the launcher you can launch either a notebook and Python 3 or console

19
00:01:11.650 --> 00:01:13.630
in Python 3 and a few other things as well.

20
00:01:14.140 --> 00:01:19.360
So in our case what we want to do is actually select the hello world file.

21
00:01:19.370 --> 00:01:20.000
Okay.

22
00:01:20.110 --> 00:01:21.770
This is a notebook file.

23
00:01:21.820 --> 00:01:23.290
So let's double click on that.

24
00:01:23.620 --> 00:01:24.500
OK.

25
00:01:24.640 --> 00:01:31.230
And this is the purpose of this exercise really is to just get you comfortable with how the Jupiter

26
00:01:31.250 --> 00:01:33.700
notebook actually works.

27
00:01:33.700 --> 00:01:40.430
What we have here is that the first is actually a cell which is also called Markdown cell.

28
00:01:40.450 --> 00:01:42.790
There's a few types of cells here.

29
00:01:42.790 --> 00:01:45.460
There is the code cell markdown and raw.

30
00:01:45.540 --> 00:01:51.350
In this case we want to mark down because it gives us the rich formatted text the hash here.

31
00:01:51.360 --> 00:01:54.980
Basically it means that this has had a 1 double hash means had a 2.

32
00:01:55.030 --> 00:02:02.590
So the font gets smaller as you go to had a two to three and then this is just a normal text as you

33
00:02:02.590 --> 00:02:09.460
can see here as I pressed Schiff return or just run the code himself using this.

34
00:02:09.460 --> 00:02:17.530
What you have here is that the details of the in the code so get run and you get this beautiful rich

35
00:02:17.530 --> 00:02:22.100
text format now I don't actually have all of these codes.

36
00:02:22.200 --> 00:02:27.420
I wanted to start with a blank slate so what I can do is come to Col..

37
00:02:27.900 --> 00:02:37.680
I can either restart kernel and restart clear or I'll put Alternatively I can actually select I can

38
00:02:37.680 --> 00:02:44.070
actually select these clear outputs and or the output goes away.

39
00:02:44.070 --> 00:02:50.880
This is just really a very simple illustration of the actual notebook itself.

40
00:02:50.920 --> 00:02:54.910
What I'm going to do here is print the word tax.

41
00:02:54.960 --> 00:02:56.060
Hello world.

42
00:02:56.220 --> 00:03:01.950
You can see the syntax is that the word print and then you have an open bracket close bracket and then

43
00:03:01.950 --> 00:03:07.330
using the process of the as to income past whatever that is.

44
00:03:07.340 --> 00:03:11.940
Within that those are possibly to actually be.

45
00:03:11.940 --> 00:03:14.570
Those are the text that is rendered onto the console.

46
00:03:15.210 --> 00:03:19.710
So let's run that and what you have is the hello world example.

47
00:03:19.770 --> 00:03:25.200
So I can actually come here copy and paste it crossed and what I would do here now is that I want to

48
00:03:25.200 --> 00:03:26.890
change a little bit.

49
00:03:26.880 --> 00:03:33.840
Instead of using single code I can use double quote and just delete this single quote have a take a

50
00:03:33.840 --> 00:03:39.360
moment and have a think about it and say ask yourself what do you think will actually show what would

51
00:03:39.360 --> 00:03:41.730
actually be illustrated.

52
00:03:42.120 --> 00:03:45.740
What would the would the outcome be different this time round.

53
00:03:45.810 --> 00:03:48.360
So let's run it.

54
00:03:48.510 --> 00:03:50.840
If you've guessed that they are exactly the same.

55
00:03:50.840 --> 00:03:52.440
You are absolutely correct.

56
00:03:52.660 --> 00:04:02.020
In Python there are two ways to do the notation and the single quote or double code and both ways to

57
00:04:02.080 --> 00:04:09.820
render the output the same way the other illustration I want to show you is that you can actually make

58
00:04:09.820 --> 00:04:20.190
use of Python K as a calculated okay using python as a calculator.

59
00:04:20.190 --> 00:04:20.500
All right.

60
00:04:20.530 --> 00:04:25.100
So the typical one plus one you get the answer to.

61
00:04:26.260 --> 00:04:29.870
I would just want to show you something how serious the one plus one.

62
00:04:29.880 --> 00:04:30.350
Okay.

63
00:04:30.400 --> 00:04:37.160
And then two plus two have a simple guess what could possibly be the output.

64
00:04:37.160 --> 00:04:39.440
Do you think that it will show 2 and 4.

65
00:04:40.450 --> 00:04:47.560
Well this is where I want to do this to actually show you the output so that you can actually experiment

66
00:04:47.590 --> 00:04:47.950
with it.

67
00:04:47.980 --> 00:04:53.950
And from this exercise you learn how to interact with Python so that you can actually receive the output

68
00:04:53.950 --> 00:04:55.120
that you expect.

69
00:04:55.120 --> 00:05:02.140
So if I run this strangely interesting the only two plus two is the outcome of two plus two as shown

70
00:05:02.620 --> 00:05:05.380
one plus one is not shown.

71
00:05:05.860 --> 00:05:11.890
And I'm going to show you an example after I do the print part on how to actually print both of these

72
00:05:11.890 --> 00:05:12.940
examples out.

73
00:05:13.210 --> 00:05:17.590
So printing it out shows you the output of one plus one.

74
00:05:18.100 --> 00:05:25.180
So let me add a cell to error so you can actually use plus to add a cell or press the letter A.

75
00:05:25.870 --> 00:05:29.790
So let me just copy this across and repeat that again.

76
00:05:29.810 --> 00:05:33.600
Control C control the contrast use the copy.

77
00:05:33.600 --> 00:05:35.170
Control the pace.

78
00:05:35.180 --> 00:05:40.180
Now this is exactly the same as this do with the exception of the spacing.

79
00:05:40.240 --> 00:05:40.470
All right.

80
00:05:40.500 --> 00:05:42.420
So now this is exactly the same.

81
00:05:42.430 --> 00:05:52.910
So if we run those you'll notice that both the actual calculation on the computation upward comes out.

82
00:05:53.220 --> 00:05:53.970
All right.

83
00:05:53.970 --> 00:05:57.610
So that kind of like illustrate how you can make use of python as a calculator.

84
00:05:57.630 --> 00:05:59.090
Coming back here.

85
00:05:59.580 --> 00:06:09.380
Well I've got a print text here onto the consoles and images rename this printing tags to the console.

86
00:06:09.990 --> 00:06:12.040
OK so that's one way to do it.

87
00:06:12.150 --> 00:06:15.580
The other one is using Python.

88
00:06:15.600 --> 00:06:18.480
So that just makes the font it looks a little bit nicer.

89
00:06:18.600 --> 00:06:22.230
I used to rehash all that these two are consistent.

90
00:06:22.230 --> 00:06:22.550
Right.

91
00:06:22.560 --> 00:06:24.340
I have this extra cell now.

92
00:06:24.360 --> 00:06:25.340
What do I do.

93
00:06:25.350 --> 00:06:28.680
I can actually use this clicker or scissors to delete that.

94
00:06:28.680 --> 00:06:36.270
So now what I've shown you so far is not very useful because basically all that I've done is that I

95
00:06:36.270 --> 00:06:43.260
tell patterned print Hello World to the console and print the actual computation onto the screen.

96
00:06:43.260 --> 00:06:46.540
And quite often this is fairly useless.

97
00:06:46.650 --> 00:06:55.470
It's not you know you can't do much with it where the power of programming becomes really handy is to

98
00:06:55.860 --> 00:06:59.880
start storing the actual value of that variable itself.

99
00:06:59.880 --> 00:07:08.880
So in this example here we're storing 5 to the variable name or variable call bar and we on this.

100
00:07:08.880 --> 00:07:15.330
There's no output but if we want to see what what kind of value is being stored into the variable bar

101
00:07:15.810 --> 00:07:20.490
we can run this and can see the output is 5.

102
00:07:20.970 --> 00:07:28.470
Again this is to illustrate what we had before it only shows you the output the latest computation to

103
00:07:28.470 --> 00:07:31.710
see if you can actually run these.

104
00:07:31.760 --> 00:07:32.150
OK.

105
00:07:32.160 --> 00:07:39.270
You have to do print and the other thing is that when you actually select these cells you have the code.

106
00:07:39.310 --> 00:07:39.660
All right.

107
00:07:39.750 --> 00:07:46.950
And just another characteristics of Jupiter no is that you notice that there are two solid blue bar

108
00:07:46.950 --> 00:07:47.460
here.

109
00:07:47.480 --> 00:07:52.260
That means that we have selected these cells to top up a bar.

110
00:07:52.280 --> 00:07:56.730
This the code the second bar is actually the output console.

111
00:07:56.730 --> 00:08:04.250
If I find that too I want to minimize the output I can actually click this blue bar to minimize that.

112
00:08:04.260 --> 00:08:04.540
Okay.

113
00:08:04.560 --> 00:08:14.040
The UN packet I can actually click that again to see the outcome of the actual output or console output.

114
00:08:14.070 --> 00:08:17.950
This is quite a neat way to actually clean up your console.

115
00:08:18.420 --> 00:08:18.660
OK.

116
00:08:18.660 --> 00:08:23.100
The other thing is that I want to show you is that when you select this this is a code cell when you

117
00:08:23.340 --> 00:08:24.120
select this.

118
00:08:24.120 --> 00:08:25.720
This is actually a markdown.

119
00:08:25.740 --> 00:08:30.590
And this looks distinctively like a formula mathematical formula.

120
00:08:30.630 --> 00:08:38.040
So if I double click go in it can see that you can actually write formula in the markdown say I will

121
00:08:38.040 --> 00:08:45.450
render it really really nicely as you can see the x's could do one seventh and this is quite a nice

122
00:08:45.450 --> 00:08:49.830
way for you to actually while especially when you're actually trying to illustrate some concepts.

123
00:08:49.830 --> 00:08:53.090
So there are a lot more functionality added for now.

124
00:08:53.100 --> 00:08:54.990
This is really what I want to illustrate to you.

125
00:08:55.570 --> 00:08:59.580
And the last compilation I want to show you is that how do you do power.

126
00:08:59.580 --> 00:09:02.890
This is forward to the power five probe.

127
00:09:02.910 --> 00:09:04.640
Difficult to know.

128
00:09:04.640 --> 00:09:11.470
And I think probably two to the power of three is probably more useful you're more likely to know the

129
00:09:11.470 --> 00:09:13.800
answer to that then fall to the power of fire.

130
00:09:13.810 --> 00:09:16.620
So let's do through the policy the answer we know is eight.

131
00:09:16.750 --> 00:09:18.130
Let's run this.

132
00:09:18.130 --> 00:09:22.240
And sure enough that is indeed the answer that we have in mind.

133
00:09:23.190 --> 00:09:29.700
But let's just check our understanding again to the power to what you get should be for.

134
00:09:29.710 --> 00:09:32.690
And sure enough that is the answer that you get.

135
00:09:33.160 --> 00:09:33.430
Right.

136
00:09:33.430 --> 00:09:44.300
This is really a very quick rundown illustration of the Python The Jupiter not book interface.

137
00:09:44.360 --> 00:09:48.810
How to work with it and the fact that it comes in different format.

138
00:09:48.810 --> 00:09:57.140
Each code has the flexibility to be a code cell to be a markdown so I never saw raw of raw cell or that

139
00:09:57.140 --> 00:10:03.770
I've illustrated to you so far is code and markdown and I've shown you that you can see when it is a

140
00:10:03.770 --> 00:10:11.240
code you can use it to calculate to perform computation print screen as well as storing the data into

141
00:10:11.240 --> 00:10:17.900
their variable in the RAM itself and for out that's really what I want to cover with you or hope that

142
00:10:18.020 --> 00:10:26.250
you find it useful and to close this off or you to do is when you see the blue or green dot here it's

143
00:10:26.270 --> 00:10:34.400
telling you that you have data and saved to save this you just pressed this diskette and sure enough

144
00:10:34.520 --> 00:10:41.230
that comes to become a cross the cross basically means that you already save or the contents that you've

145
00:10:41.240 --> 00:10:44.170
run and do so well having done that.

146
00:10:44.180 --> 00:10:46.280
I just want to sign off this lesson.

147
00:10:46.280 --> 00:10:47.620
Thank you for watching.

148
00:10:47.630 --> 00:10:50.370
Let me just close this off and see you in the next lesson.
