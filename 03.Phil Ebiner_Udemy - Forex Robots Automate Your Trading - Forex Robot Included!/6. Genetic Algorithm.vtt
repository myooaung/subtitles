WEBVTT
1

00:00:07.410  -->  00:00:09.560
Hello this is Kirill from forexboat dot com.

2

00:00:09.570  -->  00:00:13.570
And welcome back to the course on testing and optimization in metatrader 4.

3

00:00:14.250  -->  00:00:16.480
Today we'll be talking about the genetic outgroup.

4

00:00:16.710  -->  00:00:18.930
So what is the genetic algorithm.

5

00:00:18.930  -->  00:00:24.270
According to Wikipedia in the computer science field of artificial intelligence agent etic algorithm

6

00:00:24.330  -->  00:00:28.580
is a search heuristic that mimics the process of natural selection.

7

00:00:28.580  -->  00:00:34.730
This eristic is routinely used to generate useful solutions to optimization and search problems.

8

00:00:34.950  -->  00:00:40.330
Before we discussed this definition let's have a look at the word heuristic.

9

00:00:40.350  -->  00:00:44.750
So here stick is a technique designed for solving a problem more quickly.

10

00:00:44.850  -->  00:00:50.880
When classic methods are too slow or for finding an approximate solution when classic methods fail to

11

00:00:50.880  -->  00:00:53.090
find any exact solution.

12

00:00:53.160  -->  00:00:59.310
So going back to our definition of genetic algorithm this basically means that a genetic algorithm is

13

00:00:59.310  -->  00:01:06.460
a process that mimics natural selection to find solutions to a problem.

14

00:01:06.540  -->  00:01:11.980
When conventional methods would have taken too long to solve the same problem.

15

00:01:12.240  -->  00:01:16.140
So that basically means that we're getting into the territory of evolution.

16

00:01:16.200  -->  00:01:17.260
That's very exciting.

17

00:01:17.310  -->  00:01:23.550
This means that we're putting together Computer Science and Artificial Intelligence on one hand and

18

00:01:23.550  -->  00:01:30.240
on the other hand we're adding to the mix we're adding evolution and natural selection and combining

19

00:01:30.240  -->  00:01:36.390
those two things that you'd never even think to combine when you're trading the Forex market to get

20

00:01:36.390  -->  00:01:43.320
something absolutely outstanding and something that definitely benefit the process of optimization for

21

00:01:43.320  -->  00:01:47.060
us to understand how exactly this is going to happen.

22

00:01:47.070  -->  00:01:56.520
Let's have a brief look at how natural selection works in nature and then see how that can be applied

23

00:01:57.360  -->  00:02:05.910
to artificial intelligence and optimization of forex robots to extract additional benefits.

24

00:02:05.910  -->  00:02:12.660
So in nature if let's let's look at a giraffe for example originally giraffes probably horses and they

25

00:02:12.660  -->  00:02:13.350
were short.

26

00:02:13.440  -->  00:02:18.050
And then there was scarce food around them so they had to evolve.

27

00:02:18.060  -->  00:02:22.400
And that happened through mutations but we won't go into that.

28

00:02:22.410  -->  00:02:27.660
What happened was some giraffes got their necks became longer and those giraffes survived the ones that

29

00:02:27.750  -->  00:02:36.330
had had short necks just died out because they starved out and they didn't have any children left to

30

00:02:36.360  -->  00:02:45.700
continue their reproduction process and therefore the giraffe flung the next dominated area and so on

31

00:02:45.700  -->  00:02:45.720
.

32

00:02:45.720  -->  00:02:49.750
So they next grew and grew and grew and only the giraffes with the longer necks right.

33

00:02:49.770  -->  00:02:53.630
And so that's the process of natural selection.

34

00:02:53.670  -->  00:02:57.970
In a nutshell only those that can adapt to the environment survive.

35

00:02:58.140  -->  00:03:01.390
But how can we apply this in the Forex market.

36

00:03:01.470  -->  00:03:08.370
So let's put this into a diagram for a moment at the top we have one common ancestor and through mutation

37

00:03:08.450  -->  00:03:11.280
you'll have three different or many many more.

38

00:03:11.280  -->  00:03:14.930
But in this case for simplicity three different offspring.

39

00:03:15.150  -->  00:03:21.560
One that is the least adapted to the environment will fail to survive and give more offspring.

40

00:03:21.570  -->  00:03:29.430
These two will give offspring and then out of them in a natural way some of them will survive some of

41

00:03:29.430  -->  00:03:32.610
them will fail to survive and so on.

42

00:03:32.610  -->  00:03:39.390
So that's you can apply as giraffes you can apply as training animals and anything that happens in nature

43

00:03:39.960  -->  00:03:48.270
how the genetic algorithm traded for works is it takes a set of parameters and then it varies it a little

44

00:03:48.270  -->  00:03:48.550
bit.

45

00:03:48.570  -->  00:03:55.680
So it goes up and down in one of the variables and goes up and down another variable and goes up and

46

00:03:55.680  -->  00:04:02.610
down and in another variable and gets a set of parameters and then compares them they become more profitable

47

00:04:02.610  -->  00:04:04.240
do they become less profitable.

48

00:04:04.350  -->  00:04:09.840
So the ones that became less profitable die they basically don't get to reproduce they don't get to

49

00:04:10.260  -->  00:04:17.130
continue in the optimization they excluded the ones that became more profitable while Medicare for adjust

50

00:04:17.190  -->  00:04:22.410
the values of those PERRA of the variables in those parameters sets of parameters again.

51

00:04:22.620  -->  00:04:28.020
And then you get some more results from this set some more results from this set and say if these die

52

00:04:28.020  -->  00:04:34.380
out basically they become less profitable than men trade for stops optimizing them and doesn't continue

53

00:04:34.470  -->  00:04:34.910
that.

54

00:04:35.040  -->  00:04:39.630
Whereas these ones it again applies that iterative process.

55

00:04:39.810  -->  00:04:45.770
So that's a very basic explanation of what men are trained for does in the background when you run a

56

00:04:45.780  -->  00:04:48.010
genetic algorithm optimizations.

57

00:04:48.090  -->  00:04:50.340
It's very similar.

58

00:04:50.340  -->  00:04:57.020
This is brief optimization in each case a brief alteration of parameters is very similar to what we

59

00:04:57.020  -->  00:05:01.650
discussed in one of the prior tutorials where we talked about precise optimization.

60

00:05:01.920  -->  00:05:08.030
Well that's pretty much what happened administrator for just just's the Perlman's a very tiny bit to

61

00:05:08.030  -->  00:05:14.720
see if it can improve the result that we see currently and it just keeps improving it step by step by

62

00:05:14.720  -->  00:05:16.680
step to get a very good result.

63

00:05:17.030  -->  00:05:23.420
So let's go over to megatrend for and see how that all plays out in reality.

64

00:05:23.420  -->  00:05:29.810
So we've got a simple system version five point on over here with a set of parameters loaded as you

65

00:05:29.810  -->  00:05:33.070
can see I've already set up optimization.

66

00:05:33.070  -->  00:05:39.800
There's going to be a lot of back tests and this optimisation because a lot of steps are involved.

67

00:05:39.950  -->  00:05:43.180
So we will check the genetic algorithms is off.

68

00:05:43.370  -->  00:05:50.780
Click OK and just quickly see how all long it will take to optimize this on using every tick model.

69

00:05:50.780  -->  00:05:57.170
So there's 560000 back tests that have to be conducted and on every tech model it'll take a hundred

70

00:05:57.620  -->  00:06:00.700
and five hours to get this done.

71

00:06:00.710  -->  00:06:08.900
So that's more than four days of time and just nonstop optimizing and you're probably not even guaranteed

72

00:06:08.900  -->  00:06:15.480
that if you know your computer won't fail during this process.

73

00:06:15.660  -->  00:06:18.620
So and as you can see it's slowly building up.

74

00:06:19.010  -->  00:06:26.270
And of course this is a case when conventional methods will take too long to solve the problem at hand

75

00:06:26.270  -->  00:06:26.760
.

76

00:06:26.780  -->  00:06:32.600
And so if we stop that and then we go to open prices and we look at it and open prices even at open

77

00:06:32.600  -->  00:06:33.840
prices.

78

00:06:34.290  -->  00:06:36.080
It will take way too long.

79

00:06:36.080  -->  00:06:39.430
It will take five hundred and six.

80

00:06:39.500  -->  00:06:42.080
So it'll take 12 minutes to do this.

81

00:06:42.260  -->  00:06:51.860
So if we go to inputs and I'll just change one of the inputs here say we'll do it five take Crawford

82

00:06:52.070  -->  00:06:57.530
and we'll just click OK you'll see that say if we want to optimize like that then I'll take 39 minutes

83

00:06:57.860  -->  00:07:00.830
and there's like 1.8 million or picturisation.

84

00:07:00.840  -->  00:07:06.890
As you can see this is the optimization graph so it's just basically brute forcing through the sets

85

00:07:06.890  -->  00:07:13.160
of parameters and it's just checking every single combination of those parameters and it's just going

86

00:07:13.160  -->  00:07:16.830
to keep going until it goes through everything you see in the chart doesn't fit anymore.

87

00:07:17.120  -->  00:07:23.420
So what are we going to do now is we going to apply the genetic algorithm and see if that's going to

88

00:07:23.420  -->  00:07:25.280
speed up the process.

89

00:07:25.280  -->  00:07:31.310
So all we have to do is go to the testing tab click genetic algorithms or here click OK and then click

90

00:07:31.310  -->  00:07:31.860
start.

91

00:07:32.180  -->  00:07:37.250
And what you'll see right away is much faster if you go to the optimization graph you can see how it's

92

00:07:37.250  -->  00:07:41.120
slowly slowly climbing up getting more profitable.

93

00:07:41.150  -->  00:07:42.730
And there you go it's already done.

94

00:07:42.800  -->  00:07:50.420
So here out of the 1.8 million Ameritrade for usually goes through about 10000 or so parameters sets

95

00:07:50.420  -->  00:07:56.160
of parameters and it limits the genetic algorithm optimization to that number.

96

00:07:56.510  -->  00:08:02.420
And therefore it's much quicker and as you can see the graph is not just a sporadic graph.

97

00:08:02.480  -->  00:08:11.510
It actually follows that logic that we discussed where it Metro tries to improve and improve and improve

98

00:08:11.510  -->  00:08:13.310
the output every time.

99

00:08:13.310  -->  00:08:14.960
And so just run that again.

100

00:08:15.260  -->  00:08:21.560
And the interesting thing about this is that every time you will get a different result every time you

101

00:08:21.560  -->  00:08:26.730
run the generic algorithm because of the way it's structured because it's like biology.

102

00:08:27.050  -->  00:08:32.080
It's got a lot of randomness in it and therefore results will be different every time they look similar

103

00:08:32.080  -->  00:08:33.920
but like here you can see it dropped off.

104

00:08:33.980  -->  00:08:39.410
And so that was a good one so you can just keep rerunning it and just pick out the one that you really

105

00:08:39.410  -->  00:08:40.280
like.

106

00:08:41.090  -->  00:08:47.200
And sometimes you can get very good results that way.

107

00:08:47.210  -->  00:08:53.390
So another thing I wanted to show you was that if you right click and you click to the surface which

108

00:08:53.390  -->  00:08:58.940
we discussed in the previous tours you'll see that there's a lot of white spots and that basically means

109

00:08:58.940  -->  00:09:00.640
like as it says here no result.

110

00:09:00.650  -->  00:09:05.930
Meaning that the genetic algorithm never tried to pick the combination of these two parameters where

111

00:09:06.760  -->  00:09:10.800
store hours 12 and mean people limit was five.

112

00:09:10.970  -->  00:09:15.190
And you can change your axes around and say like we used to have.

113

00:09:15.320  -->  00:09:19.340
So why axes was Stop-Loss and X actually was that Crawford.

114

00:09:19.400  -->  00:09:21.900
And here you go you have a lot of white spaces again.

115

00:09:22.040  -->  00:09:28.580
And remember there are located if we rerun the optimization now you'll see that they'll be located in

116

00:09:28.580  -->  00:09:33.110
different places now because once again it's random.

117

00:09:33.440  -->  00:09:39.960
So that's basically how this optimize this type of compression works and this also means that since

118

00:09:39.960  -->  00:09:50.090
it's 10000 is always around 10000 runs that are made that that if you run on every tick model then it

119

00:09:50.090  -->  00:09:56.150
will probably it won't be as long it won't be 100 hours it'll be much less and likes in this case just

120

00:09:56.210  -->  00:10:03.590
under three hours so you can definitely get that to run and then do some analysis on that on the results

121

00:10:03.590  -->  00:10:03.610
.

122

00:10:03.620  -->  00:10:09.910
And also what you can do I also recommend The Sometimes I do this myself install for Ameritrade or for

123

00:10:09.910  -->  00:10:10.920
terminals.

124

00:10:11.240  -->  00:10:18.710
If your CPU and ram allows it install for Metro to four terminals and run for genetic algorithm tests

125

00:10:19.130  -->  00:10:24.230
on every tick and because they're random they won't be the same results in each of the four terminals

126

00:10:24.230  -->  00:10:29.450
and therefore your chances of getting good results are increased multiplied by four.

127

00:10:29.450  -->  00:10:38.510
And that way it's much more efficient than running all of the tests for genetic algorithm in one terminal

128

00:10:38.530  -->  00:10:39.400
.

129

00:10:40.280  -->  00:10:45.440
So as you can see here for example and control points I will only take two minutes to pass through this

130

00:10:45.440  -->  00:10:46.370
test.

131

00:10:46.400  -->  00:10:47.270
So there you go.

132

00:10:47.270  -->  00:10:54.860
That's what the genetic algorithm is in a nutshell and how it works and meditated for it can definitely

133

00:10:55.190  -->  00:11:01.730
speed up your process of optimization especially when you have lots of parameters or if you have to

134

00:11:01.730  -->  00:11:06.770
optimize on every tick the genetic algorithm can come in very handy.

135

00:11:06.860  -->  00:11:13.790
And I recommend using the genetic algorithm in combination with multiple men or trader for terminal's

136

00:11:13.790  -->  00:11:14.150
.

137

00:11:14.210  -->  00:11:21.430
So that's all for today I hope you consider using the genetic algorithm in your optimizations and look

138

00:11:21.440  -->  00:11:24.150
focusing on next tutorial Until then have trading
