1
00:00:02,018 --> 00:00:03,696
First off, if you're working in an XA environment,

2
00:00:03,696 --> 00:00:06,695
then you don't really need to worry too much about

3
00:00:06,695 --> 00:00:08,090
transactions and acknowledgement modes.

4
00:00:08,090 --> 00:00:10,864
The Transaction Manager will commit anything that has occurred on

5
00:00:10,864 --> 00:00:13,107
the session when the transaction completes.

6
00:00:13,107 --> 00:00:20,080
If some form of unhandled exception occurs, then the transaction is rolled back.

7
00:00:20,080 --> 00:00:23,270
Known XA sessions need a bit more thought though.

8
00:00:23,270 --> 00:00:26,077
We have seen when creating a JMS session that there are two

9
00:00:26,077 --> 00:00:29,581
parameters that are passed to the CreateSession method.

10
00:00:29,581 --> 00:00:31,460
Now if you pass transacted true,

11
00:00:31,460 --> 00:00:34,008
then the acknowledgement mode parameter is ignored.

12
00:00:34,008 --> 00:00:39,642
Any operations on the session will take place within a local transaction,

13
00:00:39,642 --> 00:00:41,819
not a JTA transaction.

14
00:00:41,819 --> 00:00:43,678
If you leave transacted false,

15
00:00:43,678 --> 00:00:46,637
then the acknowledgement mode parameter will be used.

16
00:00:46,637 --> 00:00:48,473
There are three possible options,

17
00:00:48,473 --> 00:00:51,103
which primarily deals with messages which are received

18
00:00:51,103 --> 00:00:52,632
during this session and acknowledged.

19
00:00:52,632 --> 00:00:54,782
We have already used AUTO_ACKNOWLEDGED.

20
00:00:54,782 --> 00:00:56,072
In this mode,

21
00:00:56,072 --> 00:01:00,636
the session will automatically acknowledge the client's receipt of the message.

22
00:01:00,636 --> 00:01:02,484
This will therefore mean the message has been marked as

23
00:01:02,484 --> 00:01:06,717
delivered and is not eligible to be delivered again.

24
00:01:06,717 --> 00:01:08,924
Another option is DUPS_OK_ACKNOWLEDGE.

25
00:01:08,924 --> 00:01:13,626
In this mode, the session may lazily acknowledge the receipt of the message.

26
00:01:13,626 --> 00:01:17,185
This could be read that it will acknowledge it at some later point.

27
00:01:17,185 --> 00:01:20,101
If there is a failure in the client or the server before

28
00:01:20,101 --> 00:01:21,670
that acknowledgement actually takes place,

29
00:01:21,670 --> 00:01:25,509
then it is possible that the message may be delivered again.

30
00:01:25,509 --> 00:01:25,879
Therefore,

31
00:01:25,879 --> 00:01:30,343
your system must be able to deal with duplicates of the same

32
00:01:30,343 --> 00:01:33,330
message in order to use this acknowledgment mode.

33
00:01:33,330 --> 00:01:36,820
There is also a third option called CLIENT_ACKNOWLEDGEMENT.

34
00:01:36,820 --> 00:01:37,845
In this case,

35
00:01:37,845 --> 00:01:42,095
it is the developer's responsibly to ensure that the acknowledge method is

36
00:01:42,095 --> 00:01:45,613
called on the received message at the correct point.

37
00:01:45,613 --> 00:01:49,033
However, beware, although the acknowledgement method is on the message object,

38
00:01:49,033 --> 00:01:51,843
it actually applies at the session level,

39
00:01:51,843 --> 00:02:00,000
so all messages that have been consumed in this session will be acknowledged, so watch out for that.

