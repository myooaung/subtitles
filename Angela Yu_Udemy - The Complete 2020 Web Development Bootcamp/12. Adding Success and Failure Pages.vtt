WEBVTT
1
00:00:00.780 --> 00:00:07.710
In der letzten Lektion haben wir erwähnt, dass es keine sehr gute Benutzererfahrung ist, Ihre Website einfach

2
00:00:07.710 --> 00:00:13.150
im Timeout hängen zu lassen, sobald der Benutzer seine Daten übermittelt hat.

3
00:00:13.200 --> 00:00:17.970
Sie werden nicht viel Vertrauen in diesen Newsletter haben, wenn wir ihnen kein Feedback geben.

4
00:00:18.000 --> 00:00:18.890
Richtig.

5
00:00:18.990 --> 00:00:21.350
Also lasst uns weitermachen und das tun.

6
00:00:21.390 --> 00:00:24.150
Das wird eine Herausforderung für dich.

7
00:00:24.270 --> 00:00:30.790
Wie können wir herausfinden, welchen Antwortcode wir nach dieser HP Anfrage erhalten haben?

8
00:00:30.960 --> 00:00:37.950
Und wenn dieser Code zweihundert war, bedeutet dies wahrscheinlich, dass alles in Ordnung war und wir dem

9
00:00:38.010 --> 00:00:42.960
Benutzer ein paar Tags senden, die auf der Website angezeigt werden sollen.

10
00:00:42.960 --> 00:00:48.510
Wenn der Code nicht zweihundert war und wir einen anderen Code haben, senden wir ihnen eine

11
00:00:48.510 --> 00:00:49.240
andere Nachricht.

12
00:00:49.260 --> 00:00:52.110
Etwas an dem Prozess ist fehlgeschlagen und sie sollten es später erneut versuchen.

13
00:00:52.680 --> 00:00:59.090
Halten Sie das Video an und prüfen Sie, ob Sie diese Herausforderung abschließen können.

14
00:00:59.290 --> 00:00:59.600
Gut.

15
00:00:59.620 --> 00:01:06.630
Wir wissen also, dass wir das Antwortobjekt erhalten können, das wir von der Anforderung zurückerhalten, und

16
00:01:06.700 --> 00:01:13.960
wir können auf den Statuscode tippen, um zu sehen, ob es 200 war oder ob es etwas

17
00:01:13.960 --> 00:01:24.270
anderes war. Was ist, wenn wir prüfen, ob der Status vorliegt? Der Code war gleich 200, und wenn ja, senden wir mit red dot

18
00:01:24.600 --> 00:01:29.140
send eine Steuer, die auf der Website angezeigt wird.

19
00:01:29.150 --> 00:01:34.770
Jetzt können Sie natürlich einen Absatz oder jedes einzelne Element senden, aber ich werde nur einen sehr einfachen Text

20
00:01:34.770 --> 00:01:35.200
senden.

21
00:01:35.220 --> 00:01:47.010
Ich werde sagen, dass der Erfolg vollständig abonniert ist. Wenn der Code nicht 200 war, gehe ich zu den Bewohnern und es gab einen Fehler bei

22
00:01:47.280 --> 00:01:48.480
der Anmeldung.

23
00:01:48.480 --> 00:01:50.460
Bitte versuche es erneut.

24
00:01:50.460 --> 00:01:53.490
Also jetzt lass es uns ausprobieren.

25
00:01:53.820 --> 00:01:58.610
Wenn ich auf Anmelden klicke, werde ich erfolgreich abonniert.

26
00:01:58.800 --> 00:02:00.910
Und das steht auf der Website.

27
00:02:01.500 --> 00:02:08.670
Angenommen, der API-Schlüssel war falsch oder die Liste I. D. D. war falsch.

28
00:02:08.670 --> 00:02:13.980
Nun, in diesem Fall, als ich versuchte mich anzumelden, bekam ich einen Fehler bei der Anmeldung.

29
00:02:13.980 --> 00:02:16.850
Bitte versuchen Sie es erneut.

30
00:02:16.920 --> 00:02:19.440
Aber es ist ein bisschen richtig.

31
00:02:19.440 --> 00:02:25.740
Niemand möchte eine Website aufrufen, die anfangs gut aussieht, und nach ein wenig Interaktion sieht

32
00:02:25.740 --> 00:02:29.190
sie dann wirklich sehr, sehr einfach aus.

33
00:02:29.190 --> 00:02:32.890
Was wäre, wenn wir Bootstrap verwenden wollten, um es ein bisschen aufzupeppen?

34
00:02:32.910 --> 00:02:41.910
Nun, wir können, weil wir zuvor die Anfänge des Erfolgsgedankens HMO und des Misserfolgspunkts HMO geschaffen

35
00:02:41.940 --> 00:02:43.110
haben.

36
00:02:43.410 --> 00:02:51.240
Zusätzlich zu allen Anmeldungen für jedes Team hier draußen können wir einen Bootstrap-Code einfügen, der uns schnell eine gut aussehende

37
00:02:51.240 --> 00:02:56.090
Seite gibt, die viel besser aussieht als das, was wir zuvor hatten.

38
00:02:56.190 --> 00:03:01.270
Wir können auch Schaltflächen einfügen und dem Benutzer die Interaktion mit ihm ermöglichen.

39
00:03:01.380 --> 00:03:07.560
Also gehe ich zur Bootstrap-Website und gehe zu den Komponenten und füge

40
00:03:07.650 --> 00:03:13.160
unserer Website ein Jumbotron hinzu, das ein bisschen so aussieht.

41
00:03:13.200 --> 00:03:20.590
Kopieren wir also den gesamten Code und fügen unser HMO-Boilerplate hinzu.

42
00:03:20.670 --> 00:03:23.910
Dieser wird einen Titel des Scheiterns haben.

43
00:03:23.940 --> 00:03:31.740
Klingt ein bisschen traurig, aber lassen Sie uns unseren Code für unser Jumbotron einfügen und jeder wird sagen,

44
00:03:43.300 --> 00:03:49.170
oh und wir werden auch ein Jumbotron in unserem Erfolg haben, nicht HMO.

45
00:03:49.480 --> 00:03:51.520
Und dieser wird

46
00:03:58.710 --> 00:04:04.170
jetzt sagen, um Bootstrap zu verwenden, brauchen wir natürlich ein Bootstrap-Stylesheet.

47
00:04:04.410 --> 00:04:10.440
Lassen Sie uns das auf unseren Erfolg und unser Scheitern übertragen.

48
00:04:10.450 --> 00:04:19.640
Auf Websites ist es jetzt wieder an Ihnen, eine Herausforderung zu stellen, anstatt Resort-Sand zum Senden dieser Nachrichten zu verwenden. Können Sie herausfinden,

49
00:04:19.640 --> 00:04:21.760
wie wir diese senden können?

50
00:04:21.800 --> 00:04:23.640
Erfolg und Niederlage.

51
00:04:23.660 --> 00:04:25.790
Webseiten stattdessen vorbei.

52
00:04:25.850 --> 00:04:28.420
Halten Sie das Video an und versuchen Sie, die Herausforderung abzuschließen.

53
00:04:30.530 --> 00:04:36.930
Also gut, das ist so einfach wie das Ändern des residenten Sendens, um

54
00:04:36.930 --> 00:04:45.590
diese Sendedatei zu lesen. Dann fügen wir unser Verzeichnis hinzu und markieren unseren Dateinamen, der als Schrägstrich erfolgreich sein

55
00:04:45.990 --> 00:04:54.480
wird. Punkt HMO, den Namen dieser Datei und dann diese Zeile wird gelesen, dass Sendedatei Fehler Punkt HMO.

56
00:04:55.200 --> 00:05:02.870
Also lasst uns jetzt mal ein paar zufällige Sachen ausprobieren und loslegen.

57
00:05:02.870 --> 00:05:05.390
Melde mich an und genial.

58
00:05:05.400 --> 00:05:10.590
Sie haben sich erfolgreich für den Newsletter angemeldet. Freuen Sie sich auf viele großartige Inhalte. Das

59
00:05:10.590 --> 00:05:15.120
ist also ziemlich cool. Lassen Sie uns testen, ob es eine Fehler-Website gibt. Es

60
00:05:18.800 --> 00:05:22.090
gibt noch ein weiteres Problem, das ich ansprechen möchte.

61
00:05:22.270 --> 00:05:28.810
Es wäre schön, wenn sie sich nicht anmelden könnten, um es erneut versuchen zu können.

62
00:05:28.960 --> 00:05:33.120
Und wenn sie hier einen großen Knopf hatten, auf dem stand, versuchen Sie es erneut.

63
00:05:33.310 --> 00:05:37.330
Das bringt sie zurück zur ursprünglichen Seite hier.

64
00:05:37.330 --> 00:05:39.660
Das wäre ziemlich schön, oder?

65
00:05:39.700 --> 00:05:44.410
Wir können dies tun, indem wir unsere Seite hier verwenden.

66
00:05:44.410 --> 00:05:56.920
Wir können einfach ein Formular hinzufügen, das eine Senden-Schaltfläche enthält. Auf dieser Schaltfläche wird erneut versucht, und es wird die Aktion ausgeführt, auf einer neuen

67
00:05:56.920 --> 00:06:02.430
Route zu posten, bei der es sich um die Fehlerroute handelt.

68
00:06:02.620 --> 00:06:10.270
Jetzt wird unser Formular keine Klasse haben, aber unsere Schaltfläche wird

69
00:06:10.370 --> 00:06:29.320
einige Bootstrap-Klassen erhalten, nämlich B10 B10 große B10-Warnung, um es gelb zu machen. Versuchen wir nun erneut, zu unserer Fehlerseite zu gelangen, und jetzt können Sie sehen, dass wir

70
00:06:29.350 --> 00:06:38.860
einen Versuch haben erneut-Schaltfläche, aber im Moment funktioniert es nicht, da noch keine Route

71
00:06:38.950 --> 00:06:42.690
für die Fehlerroute definiert ist.

72
00:06:42.730 --> 00:06:45.160
Das macht eine Post-Anfrage.

73
00:06:45.160 --> 00:06:51.360
Lassen Sie uns dies hier unter unserer Post-Anfrage für die Heimroute tun.

74
00:06:51.430 --> 00:06:59.740
Ich werde einen weiteren für unsere Fehlerrunde hinzufügen, und dieser wird einen Abschluss-Handler haben, der den

75
00:07:00.340 --> 00:07:11.470
Benutzer zum Home-Run umleitet, sodass ich einfach sagen kann, dass Rest nicht umleitet und der Pfad, zu dem ich ihn umleiten

76
00:07:11.470 --> 00:07:14.560
möchte, ist einfach die Heimatroute.

77
00:07:14.590 --> 00:07:22.390
Wenn wir nun auf dieser Fehlerroute landen und dann auf diese Schaltfläche klicken, gelangen wir

78
00:07:22.480 --> 00:07:24.910
direkt zurück zur Anmeldeseite.

79
00:07:24.910 --> 00:07:31.780
Das heißt, wenn ich auf diese Schaltfläche klicke, die besagt, dass wir es erneut versuchen,

80
00:07:31.810 --> 00:07:39.670
werden wir eine Post-Anfrage an die Fehlerroute auslösen. Diese wird von unserem Server hier abgefangen und zur

81
00:07:39.790 --> 00:07:48.670
Heimroute umgeleitet, die diesen App-Punkt auslöst get und es sendet die Anmeldeseite als die Datei, die auf dem Bildschirm gerendert

82
00:07:48.850 --> 00:07:50.320
werden soll.

83
00:07:50.320 --> 00:07:57.130
Das ist so ziemlich die gesamte Funktionalität, die wir für unsere sehr einfache Newsletter-Anmeldeseite benötigen.

84
00:07:57.130 --> 00:08:01.370
Jetzt gibt es eine ganze Welt der Anpassung, die Sie hinzufügen können.

85
00:08:01.450 --> 00:08:08.200
Und natürlich können Sie es mit besseren Seiten noch komplexer machen, indem Sie diese Seiten besser rendern

86
00:08:08.200 --> 00:08:09.020
und anpassen.

87
00:08:09.130 --> 00:08:16.600
Wichtiger ist jedoch, wie wir unseren Server nicht nur lokal hosten lassen,

88
00:08:16.660 --> 00:08:24.850
da diese Website derzeit nur funktioniert, wenn wir unsere Server lokal auf unserem Computer ausführen.

89
00:08:24.850 --> 00:08:32.710
Wie kann ich dies ins World Wide Web stellen, damit wir unseren Freunden und Familienmitgliedern sowie Clans und Kunden

90
00:08:33.100 --> 00:08:41.790
ein U senden können? R. L. L. Damit sie diese Website nutzen und sich auch bei unserer MailChimp-Liste anmelden können.

91
00:08:41.800 --> 00:08:48.400
Nun, das werden wir in der nächsten Lektion angehen, in der wir unsere Website live schalten, damit es

92
00:08:48.430 --> 00:08:53.630
eine echte Web-App ist, die für all das im World Wide Web verfügbar ist.

93
00:08:53.770 --> 00:08:55.390
Und wir werden Sie in der nächsten Lektion fragen.
