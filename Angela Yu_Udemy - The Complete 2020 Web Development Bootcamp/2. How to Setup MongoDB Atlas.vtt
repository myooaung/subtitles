WEBVTT
0
1
00:00:00.420 --> 00:00:00.740
All right.
1

2
00:00:00.750 --> 00:00:07.710
So now that we know how our backend is going to function once it's hosted on MongoDB Atlas and
2

3
00:00:07.710 --> 00:00:14.160
Heroku, then it's time to get started and actually set up our website so that we can deploy our ToDo
3

4
00:00:14.160 --> 00:00:16.120
list app onto the Internet.
4

5
00:00:16.170 --> 00:00:17.130
First things first.
5

6
00:00:17.220 --> 00:00:22.030
Let's go ahead and sign up for a MongoDB Atlas account.
6

7
00:00:22.080 --> 00:00:31.200
So if you just click on "Get MongoDB" and the first thing that it has here is sign up to the MongoDB 
7

8
00:00:31.290 --> 00:00:36.140
Atlas service. Here where it says "Deploy a free cluster"
8

9
00:00:36.210 --> 00:00:45.620
you're going to create a new account and you're going to click on "Get started free".
9

10
00:00:45.650 --> 00:00:52.160
So now we're going to go through a few steps to set up our brand new cluster on MongoDB Atlas.
10

11
00:00:52.220 --> 00:00:57.020
The first thing we're going to choose is where is our cluster going to be hosted on.
11

12
00:00:57.230 --> 00:01:04.310
And the cloud provider that we're going to go with is AWS and both AWS and Google Cloud have free
12

13
00:01:04.310 --> 00:01:06.090
tiers that are available.
13

14
00:01:06.140 --> 00:01:13.130
We're going to click on AWS and select North Virginia where we can get a free tier for our MongoDB 
14

15
00:01:13.140 --> 00:01:17.630
database without having to enter our credit card details.
15

16
00:01:17.660 --> 00:01:23.910
Next we're going to scroll down and expand this part where it says "Cluster Tier".
16

17
00:01:24.320 --> 00:01:30.500
At the moment the option that's selected is M30 which gives you 8GB of RAM and 40 gigabytes of
17

18
00:01:30.500 --> 00:01:35.140
storage but you're also paying 50 cents an hour. In order to get started
18

19
00:01:35.150 --> 00:01:39.500
we're going to change our cluster to M) which is the free tier
19

20
00:01:39.740 --> 00:01:45.500
and you can see now we have a free forever plan and this means that we don't have enter any credit card
20

21
00:01:45.500 --> 00:01:49.400
details and we can learn without fear of messing up.
21

22
00:01:49.400 --> 00:01:55.210
So the nice thing about using MongoDB Atlas as opposed to setting up our servers straight up on 
22

23
00:01:55.210 --> 00:02:02.600
AWS is we can get started without having to provide any payment details without any fear of accidentally
23

24
00:02:02.600 --> 00:02:06.740
messing something up and getting a huge bill from Amazon AWS.
24

25
00:02:06.800 --> 00:02:12.050
So this is a really really safe environment. And if you find a website getting more and more popular
25

26
00:02:12.380 --> 00:02:15.520
then you can always scale up at a later stage as well.
26

27
00:02:16.990 --> 00:02:21.990
Now the next thing is we're going to use our MongoDB 3.6.
27

28
00:02:21.980 --> 00:02:30.480
Now this is not the latest and greatest version of MongoDB but it will work just fine as it is. Now
28

29
00:02:30.510 --> 00:02:31.430
for Cluster name
29

30
00:02:31.440 --> 00:02:37.080
you can rename it if you wish but for this tutorial we're just going to keep it as "Cluster0".
30

31
00:02:37.440 --> 00:02:41.080
And now we're ready to go ahead and click Create cluster.
31

32
00:02:41.580 --> 00:02:48.150
And because they do have costs associated with these clusters because they're paying AWS then it's
32

33
00:02:48.150 --> 00:02:52.740
important for them to check that you are not a robot and you're not trying to take advantage of their
33

34
00:02:52.740 --> 00:02:53.590
services.
34

35
00:02:57.740 --> 00:03:03.650
All right, so now your cluster is being created and as they say it takes between 7 to 10 minutes
35

36
00:03:03.740 --> 00:03:10.350
to provision and they're doing a lot of heavy lifting on the backend setting up everything on AWS.
36

37
00:03:10.430 --> 00:03:13.520
And so we're going to come back to this a little bit later on.
37

38
00:03:13.610 --> 00:03:20.480
Now if you go ahead and click on "Security", you can see that we currently have no users.
38

39
00:03:20.480 --> 00:03:23.640
Let's go ahead and add a brand new user.
39

40
00:03:23.750 --> 00:03:28.150
So I'm just going to call my user admin-
40

41
00:03:28.430 --> 00:03:35.910
angela and then I'm just going to enter a password that we're going to use to test with.
41

42
00:03:35.940 --> 00:03:39.420
So let's call it test123.
42

43
00:03:39.600 --> 00:03:45.900
Go ahead and enter a user and password and note down those details because we're going to use it very
43

44
00:03:45.900 --> 00:03:49.970
very soon and then change that uses privileges to be an Atlas
44

45
00:03:49.970 --> 00:03:50.650
admin
45

46
00:03:50.850 --> 00:03:58.770
and go ahead and add this user to our list of MongoDB users. These MongoDB users have the credentials
46

47
00:03:58.800 --> 00:04:04.340
which we'll need to be able to communicate with our database on MongoDB Atlas.
47

48
00:04:04.380 --> 00:04:09.930
And that's why we set up usernames and passwords to make accessing our database more secure.
48

49
00:04:09.930 --> 00:04:15.240
Now the next thing we're going to do is we're going to go over to the IP whitelist and we're going
49

50
00:04:15.240 --> 00:04:22.020
to click on Add an IP address and we're going to click on allow access from anywhere and then go ahead
50

51
00:04:22.020 --> 00:04:24.070
and click confirm.
51

52
00:04:24.090 --> 00:04:26.770
Now this again takes a little while for it to set up.
52

53
00:04:27.000 --> 00:04:33.300
But meanwhile if we head back over to overview then you can see our cluster is now set up and it's ready
53

54
00:04:33.300 --> 00:04:33.930
to go.
54

55
00:04:34.630 --> 00:04:35.600
First things first.
55

56
00:04:35.650 --> 00:04:38.920
Let's go ahead and connect to our cluster.
56

57
00:04:38.920 --> 00:04:46.650
We click on the connect button here and go ahead and click on connect with the Mongo shell.
57

58
00:04:46.660 --> 00:04:51.460
So first it checks to see if you already have the Mongo shell installed which we do because we've
58

59
00:04:51.460 --> 00:04:52.870
been using it for a long time 
59

60
00:04:52.870 --> 00:05:00.400
now. The next thing it says is click on the version of Mongo shell you have to see what URL
60

61
00:05:00.400 --> 00:05:01.910
you need to connect to it.
61

62
00:05:02.140 --> 00:05:11.920
Let's go ahead and open up our hyper terminal and we're going to just run "mongo --version" and
62

63
00:05:11.920 --> 00:05:17.740
this will tell us what is the version of our Mongo shell. And we're on 4.0.2 which
63

64
00:05:17.740 --> 00:05:20.000
is more than 3.6
64

65
00:05:20.020 --> 00:05:27.100
so we'll click on this option. And now it gives you a URL to connect to your MongoDB cluster and
65

66
00:05:27.250 --> 00:05:35.680
you can see that it's got the username baked in and it's also got the URL of a test database in our
66

67
00:05:35.680 --> 00:05:36.610
cluster.
67

68
00:05:36.640 --> 00:05:41.970
So let's go ahead and copy this and paste it into our command line.
68

69
00:05:42.920 --> 00:05:45.470
It doesn't really matter where you do this from.
69

70
00:05:45.470 --> 00:05:50.300
You can see that at the moment I'm inside the user folder, angelayu, but you can call this command
70

71
00:05:50.330 --> 00:05:51.740
anywhere you like.
71

72
00:05:51.740 --> 00:05:54.620
So now let's go ahead and hit enter.
72

73
00:05:54.620 --> 00:06:03.170
Now once I hit Enter it's going to ask me for a password and the password that it wants as it says here
73

74
00:06:03.290 --> 00:06:07.580
is it has to be the one for that user that you just set up.
74

75
00:06:07.580 --> 00:06:13.910
Remember previously when we set up our users under the Security tab. You need to remember what the password
75

76
00:06:13.910 --> 00:06:15.630
is that you put in here.
76

77
00:06:15.770 --> 00:06:17.290
And if you don't remember
77

78
00:06:17.300 --> 00:06:24.110
you can also just go ahead and enter a new password and click it to update the user.
78

79
00:06:24.150 --> 00:06:25.850
But if you do remember the password,
79

80
00:06:25.890 --> 00:06:35.340
so previously I set it up with test123, and now it's going to link up to my MongoDB server on Atlas.
80

81
00:06:35.520 --> 00:06:39.010
And now we no longer see our prompt from the command line
81

82
00:06:39.180 --> 00:06:47.280
and instead we now have an active session with the MongoDB shell running on the Atlas cluster.
82

83
00:06:47.280 --> 00:06:52.320
Now here you'll see a warning where it says "shell and server versions do not match"
83

84
00:06:52.440 --> 00:06:58.180
because if you scroll up and if you remember our shell version is 4.0.2
84

85
00:06:58.470 --> 00:07:04.180
but remember when we're working with free instances on MongoDB Atlas at least currently anyways
85

86
00:07:04.250 --> 00:07:06.200
they're limited to 3.6,
86

87
00:07:06.240 --> 00:07:07.580
so that's why it doesn't match.
87

88
00:07:07.620 --> 00:07:09.660
But it doesn't affect us at all
88

89
00:07:09.660 --> 00:07:17.240
so don't worry about that warning. Now that we're inside our Mongo shell and if you remember previously
89

90
00:07:17.570 --> 00:07:23.510
we had to have another tab that was running mongo for this to work but currently we actually don't
90

91
00:07:23.510 --> 00:07:24.680
have that at all.
91

92
00:07:24.800 --> 00:07:29.130
And instead of mongod we're now connected to the cloud based cluster.
92

93
00:07:29.420 --> 00:07:37.040
And we can start typing in Mongo commands such as "show dbs" and there is an admin and there's a
93

94
00:07:37.040 --> 00:07:38.270
local db.
94

95
00:07:38.270 --> 00:07:43.580
Now what if we wanted to see if we were definitely connected to this same cluster?
95

96
00:07:43.760 --> 00:07:50.280
Well we can go ahead and click on collections under our cluster and we can create a new database.
96

97
00:07:50.300 --> 00:07:59.290
Let's just call our database test and our collection name also test, hit create.
97

98
00:07:59.420 --> 00:08:05.360
And now we're going to add a new piece of data to this collection. And to do that we just click on insert
98

99
00:08:05.450 --> 00:08:12.120
document and we'll call it newData
99

100
00:08:12.160 --> 00:08:16.200
"Welcome to your database".
100

101
00:08:16.210 --> 00:08:24.730
All right. Now let's hit insert and put that data into our test collection inside our test database.
101

102
00:08:24.730 --> 00:08:32.920
And if we go back to our Mongo shell and we say "show dbs" again now you can see we have this new
102

103
00:08:32.920 --> 00:08:41.860
database called test and if we say "use test" then "show collections" you can see we've got a single collection
103

104
00:08:41.860 --> 00:08:47.770
called test and then we can say "db.test.find all.
104

105
00:08:48.010 --> 00:08:52.020
And you can see that new data that you inserted just now.
105

106
00:08:52.420 --> 00:08:53.910
This is pretty cool.
106

107
00:08:53.980 --> 00:08:59.080
Now we're able to connect to our cluster using our Mongo shell.
107

108
00:08:59.080 --> 00:09:04.440
Now the next thing we need to do is to be able to connect to it from our application.
108

109
00:09:04.690 --> 00:09:11.440
So if you remember, our previous method for running this app was we had to create a new terminal and
109

110
00:09:11.530 --> 00:09:22.490
we said mongod to start up our MongoDB server on port 27017 in our local system. The next thing
110

111
00:09:22.490 --> 00:09:30.340
we did was we went back to our previous shell and we used nodemon to run our app.js and our server
111

112
00:09:30.340 --> 00:09:32.110
started on port 3000.
112

113
00:09:32.330 --> 00:09:40.660
So now if we head over to localhost:3000 then we can see our ToDo list as it is.
113

114
00:09:40.680 --> 00:09:45.830
So this is currently running on our local MongoDB database.
114

115
00:09:45.840 --> 00:09:50.690
Now what if we wanted to swap out a local database?
115

116
00:09:50.850 --> 00:09:59.140
If we go ahead and hit Control + C and we shut down our MongoDB server on our local host.
116

117
00:09:59.880 --> 00:10:06.790
So right now if I was to hit "rs" to restart our server, you can see we get a whole bunch of errors.
117

118
00:10:06.960 --> 00:10:13.710
And it's because we can't actually connect to our Mongo server on 27017.
118

119
00:10:13.860 --> 00:10:15.660
Well that's because we shut it down.
119

120
00:10:15.960 --> 00:10:23.640
So how can we instead connect to our MongoDB cluster to save our data in the cloud in Mongo Atlas
120

121
00:10:23.730 --> 00:10:31.140
instead? If we head back to our cluster and we click on Connect again and we choose the "connect your
121

122
00:10:31.140 --> 00:10:37.380
application" and then we're going to select the "SRV connection" because we're using the latest version
122

123
00:10:37.380 --> 00:10:38.690
of MongoDB 
123

124
00:10:38.790 --> 00:10:42.950
and then we're going to copy this address.
124

125
00:10:43.050 --> 00:10:47.080
So now if we copy that address and we go back into our app.
125

126
00:10:47.130 --> 00:10:53.700
js, we can now select all of this string other than the last part where we're creating our database
126

127
00:10:54.150 --> 00:10:57.630
and we can replace it with that string that we just copied.
127

128
00:10:58.020 --> 00:11:07.610
And this you will notice is on mongodb.net and it's logging in using our admin-angela 
128

129
00:11:07.610 --> 00:11:12.120
username and then we have to provide the password that we created earlier on.
129

130
00:11:12.130 --> 00:11:17.070
So there's a couple of changes that we need to make to this URL before we can test it.
130

131
00:11:17.080 --> 00:11:23.200
Now the first thing is you can see that there is a password placeholder here and we have to replace that
131

132
00:11:23.440 --> 00:11:26.750
with the password that we created for our user.
132

133
00:11:26.890 --> 00:11:33.310
So we're using the credentials of our admin-angela username and we have to provide the same password
133

134
00:11:33.310 --> 00:11:36.010
that we used when we created this user.
134

135
00:11:36.280 --> 00:11:41.660
So we have to replace all of this part including the angle brackets with the password.
135

136
00:11:41.840 --> 00:11:46.810
And that might be different for you but for me it was Test-123.
136

137
00:11:46.900 --> 00:11:48.370
This is the initial part.
137

138
00:11:48.450 --> 00:11:54.320
Now the second thing we have to check is previously we were saying that we were going to create a database
138

139
00:11:54.340 --> 00:11:55.860
called todolistDB.
139

140
00:11:56.080 --> 00:12:01.690
But at the moment it's trying to save data into the database that we created earlier on which was called
140

141
00:12:01.690 --> 00:12:02.680
test.
141

142
00:12:02.680 --> 00:12:08.080
So what we're going to do is we're going to delete all of this and we're going to get it to save into
142

143
00:12:08.140 --> 00:12:11.840
the database that we wanted which was todolistDB.
143

144
00:12:11.860 --> 00:12:20.230
So now if we hit save and we go back into our console and we restart our server, now you can see we're
144

145
00:12:20.230 --> 00:12:25.330
no longer getting that error right? We're not getting "failed to connect to server" because we're actually
145

146
00:12:25.330 --> 00:12:27.620
getting a success message.
146

147
00:12:27.940 --> 00:12:35.860
Now if we go into our browser and we go ahead and go on to localhost:3000 again you can see we now have
147

148
00:12:35.890 --> 00:12:44.400
a brand new copy of our todo list app with a database that's hosted in the cloud on Mongo atlas.
148

149
00:12:44.690 --> 00:12:47.520
And if I go ahead and add a new item here
149

150
00:12:47.540 --> 00:12:52.650
so for example let's say "Test item" and click add,
150

151
00:12:52.760 --> 00:12:59.360
now not only does it show up in my database, but if I go over to my MongoDB cluster and I click on
151

152
00:12:59.380 --> 00:13:05.970
"Collections" you can see I now have this new database called todolistDB
152

153
00:13:06.220 --> 00:13:09.800
and I've got items and lists and inside items
153

154
00:13:09.880 --> 00:13:14.030
I've got all of my default items plus the one I added just now.
154

155
00:13:14.320 --> 00:13:21.910
So now we can verify for certain that our database is hosted in the cloud and we're accessing it from our
155

156
00:13:21.930 --> 00:13:24.650
Node.js app. Now
156

157
00:13:24.670 --> 00:13:31.510
in the next lesson we're going to set up our app so that we can deploy it on Heroku and get Heroku
157

158
00:13:31.510 --> 00:13:38.300
to talk to Mongo Atlas and to be able to access our entire website and make it function on the worldwide
158

159
00:13:38.320 --> 00:13:41.260
web. For all of that and more, I'll see you on the next lesson.
