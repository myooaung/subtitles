0
1
00:00:00,840 --> 00:00:08,880
Now while we've been developing this module with every level of increased security I've been committing
1

2
00:00:08,940 --> 00:00:16,140
the code for each of these stages just so that later on you'll be able to check out the commits that
2

3
00:00:16,140 --> 00:00:22,050
you want to review and check against your code easily. So you can see that we've got level 1 where
3

4
00:00:22,050 --> 00:00:24,240
we've got username and password only,
4

5
00:00:24,240 --> 00:00:25,370
and then level 2 where
5

6
00:00:25,420 --> 00:00:31,620
we added encryption to our password field. But there would be a bit of a security flaw that's introduced
6

7
00:00:31,890 --> 00:00:39,360
by committing all of this code to a remote Git repository like GitHub. Because if I go ahead and pull
7

8
00:00:39,360 --> 00:00:47,850
up the GitHub page for this particular project you can see everything that I've committed including
8

9
00:00:47,940 --> 00:00:55,980
all the code that's inside my app.js which as you remember contains some secrets in there namely
9

10
00:00:56,010 --> 00:00:59,910
the key that we used to encrypt our database.
10

11
00:01:00,240 --> 00:01:06,970
So this is now on the internet being crawled by Google completely searchable.
11

12
00:01:06,990 --> 00:01:15,600
Anybody can see my encryption key which also means that anybody can decrypt my encrypted database using
12

13
00:01:16,050 --> 00:01:17,370
this secure key.
13

14
00:01:17,380 --> 00:01:18,600
So it's not very secure
14

15
00:01:18,600 --> 00:01:26,490
essentially. It's very easy for people to crawl GitHub looking out for these secrets and API keys that
15

16
00:01:26,490 --> 00:01:28,070
they can take advantage of.
16

17
00:01:28,200 --> 00:01:34,120
And very often in the development world you hear stories like this where a developer put AWS
17

18
00:01:34,130 --> 00:01:43,050
keys on GitHub then bad things happen. And it's because currently we're in a bitcoin mining frenzy era.
18

19
00:01:43,050 --> 00:01:50,730
And to mine Bitcoin you need a lot of computing resources and those resources get directly turned into
19

20
00:01:50,730 --> 00:01:57,870
money providing a huge incentive for people to scrape the internet for developers who've accidentally
20

21
00:01:57,870 --> 00:02:00,450
published their secret keys.
21

22
00:02:00,450 --> 00:02:08,100
And this is a good story as well that I'll link to in the course resources where this guy Luke had accidentally
22

23
00:02:08,100 --> 00:02:10,930
published his API keys onto GitHub.
23

24
00:02:11,130 --> 00:02:19,620
And then he racked up an AWS bill of over 3000 dollars in a very very short space of time.
24

25
00:02:19,620 --> 00:02:26,220
Now I think the ending to the story was a happy one and Amazon AWS actually refunded him the money
25

26
00:02:26,730 --> 00:02:30,830
but I'm not sure everybody is as lucky as he was.
26

27
00:02:30,960 --> 00:02:39,060
So these are some really cautionary tales about keeping your secrets, your API keys, off the Internet
27

28
00:02:39,120 --> 00:02:43,530
where it's publicly searchable and where people can steal.
28

29
00:02:43,740 --> 00:02:48,710
So that's all very well and good but how exactly do we do that?
29

30
00:02:48,720 --> 00:02:57,120
Because obviously for our app to work we need these secrets to be able to encrypt our database. And for
30

31
00:02:57,120 --> 00:03:03,390
us to be able to collaborate with other people or simply just using version control or backing up our
31

32
00:03:03,390 --> 00:03:07,020
project to GitHub then we will need to publish it
32

33
00:03:07,020 --> 00:03:07,320
right?
33

34
00:03:07,680 --> 00:03:14,760
So the way that developers solve this conundrum is through using something called environment variables.
34

35
00:03:15,450 --> 00:03:22,770
And environment variables are basically a very very simple file that we're going to keep certain sensitive
35

36
00:03:22,770 --> 00:03:27,220
variables such as encryption keys and API keys.
36

37
00:03:27,270 --> 00:03:35,130
So in this lesson I want to show you how we can do this using a really popular package called dotenv.
37

38
00:03:35,640 --> 00:03:41,730
And you can see just through the sheer number of weekly downloads that it is a really heavily dependent
38

39
00:03:41,730 --> 00:03:49,580
upon module to keep everybody's secrets off of the Internet safe and secure.
39

40
00:03:49,770 --> 00:03:54,990
So let's get started by installing this thing called dotenv.
40

41
00:03:55,020 --> 00:04:00,230
So I'm still in my secrets repository and I'm going to install this thing called dotenv.
41

42
00:04:00,260 --> 00:04:05,610
So now that it's installed the next thing to see is how do we use it.
42

43
00:04:05,610 --> 00:04:14,190
Well the documentation tells us that as early as possible in your application require and configure
43

44
00:04:14,220 --> 00:04:15,180
this package.
44

45
00:04:15,210 --> 00:04:21,830
So I'm just gonna straight up copy this line of code and paste it right at the very top of my app.js
45

46
00:04:21,830 --> 00:04:29,160
over here. And you can see in this case we're not actually setting a constant for it because all
46

47
00:04:29,160 --> 00:04:35,790
we need to do is just require it and then call config on it and we don't need it ever again.
47

48
00:04:35,790 --> 00:04:42,780
It will be active and running and all we need to do now is to define our environment variable.
48

49
00:04:42,780 --> 00:04:48,270
Now it's important that you put it right at the top because otherwise if you try to use an environment
49

50
00:04:48,270 --> 00:04:52,170
variable and it's not configured then you won't be able to access it.
50

51
00:04:53,100 --> 00:04:56,160
So what exactly are environment variables?
51

52
00:04:56,250 --> 00:04:57,620
Well let's go ahead and create them
52

53
00:04:57,630 --> 00:05:04,600
now. We have to first create a dotenv file in the root directory of your project,
53

54
00:05:04,620 --> 00:05:08,710
so that means in this particular folder here.
54

55
00:05:08,820 --> 00:05:13,400
So let's go ahead and create a new file by hitting the a key.
55

56
00:05:13,860 --> 00:05:19,980
Alternatively you can go into hyper and make sure you're in the root directory and simply write touch
56

57
00:05:20,280 --> 00:05:20,910
.
57

58
00:05:20,910 --> 00:05:27,900
env. Now it's really really important that when you name this file .env can't be used like a file
58

59
00:05:27,900 --> 00:05:28,520
extension.
59

60
00:05:28,530 --> 00:05:32,250
It's not like .mp3 or .png.
60

61
00:05:32,250 --> 00:05:39,870
This has to be the entire name of the file. And just like other files like .git, this is a hidden file.
61

62
00:05:39,870 --> 00:05:46,020
So that means when I hit enter and create that file and I do an ls on my current directory I won't
62

63
00:05:46,020 --> 00:05:53,010
see it. And it's only when I do ls -a revealing all of my hidden files do I see it created here.
63

64
00:05:53,580 --> 00:05:58,730
But because we have Atom we can also see it inside Atom here.
64

65
00:05:59,310 --> 00:06:07,470
So now that I've created my file the next step is to add my environment variables to that file. And the
65

66
00:06:07,480 --> 00:06:16,410
format you have to follow is NAME=VALUE and there shouldn't be any spaces in between and nor
66

67
00:06:16,410 --> 00:06:18,880
should there be any quotation marks
67

68
00:06:19,050 --> 00:06:22,050
and the name should ideally be snake case,
68

69
00:06:22,050 --> 00:06:27,280
so words separated by underscores and they should all be capitalized.
69

70
00:06:27,300 --> 00:06:28,790
This is just convention.
70

71
00:06:28,830 --> 00:06:31,830
But I strongly recommend you to follow it.
71

72
00:06:31,860 --> 00:06:37,760
So let's go ahead and define the environment variables that we want to save.
72

73
00:06:37,770 --> 00:06:43,350
So the top contender is of course this constant code secret.
73

74
00:06:43,350 --> 00:06:53,370
So let's go ahead and cut it out of our app.js  and paste it into our .env file. And let's reformat
74

75
00:06:53,370 --> 00:06:59,030
this so that it complies with the formatting that they want us to have.
75

76
00:06:59,040 --> 00:07:01,000
So let's first delete the const,
76

77
00:07:01,050 --> 00:07:06,870
this is not a Javascript file. We don't need any const or semicolons,
77

78
00:07:06,870 --> 00:07:13,550
so those are gone. Then we're going to rename the environment variable to make it capitalized.
78

79
00:07:13,560 --> 00:07:19,170
So this is going to be secret. And then we're going to get rid of that space between the equal signs
79

80
00:07:19,740 --> 00:07:24,660
and we're also going to delete our quotation marks.
80

81
00:07:24,750 --> 00:07:32,520
Now in my case the full stop is a part of my encryption key and it's not just therefore grammatical
81

82
00:07:32,520 --> 00:07:38,720
sense because all of my passwords were encrypted with this key including the full stop.
82

83
00:07:38,730 --> 00:07:40,440
So I have to keep that in there.
83

84
00:07:41,190 --> 00:07:48,930
However if we say had, I don't know, an API key then we might write it something like this and it would
84

85
00:07:49,020 --> 00:07:54,370
also not have any sort of semicolons or other symbols at the end.
85

86
00:07:54,390 --> 00:07:57,390
You don't need it basically is what I'm trying to say.
86

87
00:07:57,480 --> 00:08:05,490
You also don't need to separate the lines with a comma as you will commonly see when we're writing code
87

88
00:08:05,490 --> 00:08:13,020
files because this is just a piece of plain text file that's going to be used to be able to render these
88

89
00:08:13,200 --> 00:08:16,340
little tiny pieces of secret information.
89

90
00:08:16,380 --> 00:08:22,020
So let's hit Save and I'll leave the API key in there as well just so I can show you how we can fetch
90

91
00:08:22,020 --> 00:08:22,730
it out.
91

92
00:08:22,890 --> 00:08:30,480
So let's say that we're running our app.js and we've already required our dotenv package and we've
92

93
00:08:30,480 --> 00:08:36,360
configured it to be able to access our environment variables then anywhere after this line we should
93

94
00:08:36,360 --> 00:08:40,370
be able to tap in to those variables by referring to them.
94

95
00:08:40,380 --> 00:08:44,720
So let's go ahead and log say are API key
95

96
00:08:44,760 --> 00:08:45,050
right?
96

97
00:08:45,570 --> 00:08:51,900
And to do that what we need to write is process.env.
97

98
00:08:51,900 --> 00:08:58,530
then comes the name of that key which is going to be API_KEY.
98

99
00:08:58,560 --> 00:09:09,540
So now if I hit save and I run my app.js then you can see printed over here is the content of my API
99

100
00:09:09,570 --> 00:09:11,740
key right here.
100

101
00:09:11,760 --> 00:09:17,250
So now that we've seen how we can get access to our environment variables let's go ahead and fix our
101

102
00:09:17,250 --> 00:09:21,060
code because as you can see at the moment it's breaking.
102

103
00:09:21,060 --> 00:09:26,570
And it's because we no longer have that secret specified inside our app.
103

104
00:09:26,660 --> 00:09:27,890
js.
104

105
00:09:28,050 --> 00:09:34,170
So right here we deleted our secret and we moved it into our environment file.
105

106
00:09:34,500 --> 00:09:43,740
So try and pause the video the change line of code over here so that our app continues to work as it
106

107
00:09:43,740 --> 00:09:44,300
used to.
107

108
00:09:44,610 --> 00:09:48,690
But now it grabs the secret from our environment variable.
108

109
00:09:52,760 --> 00:09:53,090
All right.
109

110
00:09:53,120 --> 00:09:58,670
So all we have to do is exactly the same as what we did up here. Instead of trying to tap into a variable
110

111
00:09:58,670 --> 00:10:03,110
called secret inside our app.js which now no longer exist,
111

112
00:10:03,110 --> 00:10:12,080
we're going to replace it with process.env. the name of our secret which is just the word SECRET
112

113
00:10:12,170 --> 00:10:14,590
in all caps.
113

114
00:10:14,720 --> 00:10:21,760
And now if we hit save and nodemon should rerun our server you can see we no longer have any errors
114

115
00:10:21,920 --> 00:10:25,040
and our server has started on port 3000.
115

116
00:10:25,220 --> 00:10:32,090
So we can just go ahead and just confirm that everything still works the same by trying to log into
116

117
00:10:32,180 --> 00:10:34,970
our user with the password qwerty.
117

118
00:10:35,120 --> 00:10:37,700
So everything is working just fine.
118

119
00:10:37,700 --> 00:10:43,010
Now some of you guys might have spotted the next problem that's coming along.
119

120
00:10:43,070 --> 00:10:53,000
If I go ahead and simply just commit my project with all of the changes as it is to GitHub I will also
120

121
00:10:53,000 --> 00:11:00,590
commit my environment file which defeats the whole purpose of creating environment variables, configuring
121

122
00:11:00,590 --> 00:11:04,820
it and changing our code to keep all of those secrets secret
122

123
00:11:04,820 --> 00:11:05,690
right?
123

124
00:11:05,720 --> 00:11:07,700
So what can we do?
124

125
00:11:08,060 --> 00:11:16,850
Well, if you remember previously in the Git and GitHub module we covered something called gitignore.
125

126
00:11:16,880 --> 00:11:20,310
So that's another hidden file that we add to our project
126

127
00:11:20,420 --> 00:11:29,120
that tells Git which files and which folders it should ignore when it's uploading the files to a remote
127

128
00:11:29,210 --> 00:11:30,310
like GitHub.
128

129
00:11:30,380 --> 00:11:38,000
And if you search for "github gitignore" then you'll see that they've created this very helpful collection
129

130
00:11:38,420 --> 00:11:43,280
of template files for different types of projects.
130

131
00:11:43,310 --> 00:11:50,570
So if we go ahead and search for our node gitignore then you can see that this is a template file that
131

132
00:11:50,570 --> 00:11:57,530
you can create as your gitignore and it will set up Git to ignore most of the files that you don't
132

133
00:11:57,590 --> 00:11:59,240
want to commit.
133

134
00:11:59,240 --> 00:12:01,710
So let's take a look at what that includes.
134

135
00:12:01,730 --> 00:12:07,490
So one of the most common things that we don't commit when we're creating Node projects are the Node
135

136
00:12:07,580 --> 00:12:16,580
modules because you can see it's a massive list of Node modules and it's a whole bunch of code and a
136

137
00:12:16,580 --> 00:12:18,080
whole bunch of dependencies.
137

138
00:12:18,080 --> 00:12:23,940
So it massively blows up our project when we're moving it online and offline.
138

139
00:12:24,080 --> 00:12:31,070
And as long as we've got access to the package.json then anybody who Git clones our project or
139

140
00:12:31,070 --> 00:12:37,790
downloads it will be able to simply run npm install and it will automatically pull down all of those
140

141
00:12:37,790 --> 00:12:40,460
dependencies inside the Node modules.
141

142
00:12:40,490 --> 00:12:46,790
So it's common practice to ignore the node_module folder in our Node projects.
142

143
00:12:46,790 --> 00:12:56,750
The other thing that is inside this template of gitignore is of course the .env file and this is
143

144
00:12:56,810 --> 00:13:04,670
the dotenv environment variable files. So you can see this is very very common and it's very very essential
144

145
00:13:04,970 --> 00:13:13,580
that you add this to your .gitignore file so that our secrets do not get revealed to the public
145

146
00:13:13,700 --> 00:13:14,810
on the Internet.
146

147
00:13:14,840 --> 00:13:17,210
So let's give that a go.
147

148
00:13:17,210 --> 00:13:26,310
Let's go into hyper, let's stop our server and making sure that we're still inside our project root folder
148

149
00:13:26,360 --> 00:13:37,040
we're going to create our gitignore file and that's simply .gitignore. We hit enter and now we should
149

150
00:13:37,040 --> 00:13:40,020
have a gitignore file. Here
150

151
00:13:40,070 --> 00:13:47,030
I'm simply going to copy and paste the template that comes from GitHub and I'm going to paste it
151

152
00:13:47,180 --> 00:13:50,770
inside here and then hit save.
152

153
00:13:50,780 --> 00:13:59,690
So now inside our project folder you can see we've got our .gitignore, our .env file and Atom
153

154
00:13:59,780 --> 00:14:06,260
is actually helpful enough to show you the files that will be ignored by showing it to you in this kind
154

155
00:14:06,260 --> 00:14:07,910
of greyed out mode.
155

156
00:14:07,910 --> 00:14:14,840
You can see this folder is not going to be committed neither this one or our .env file and everything
156

157
00:14:14,840 --> 00:14:21,230
else shows up in a slightly different color. But let's just confirm it for ourselves.
157

158
00:14:21,230 --> 00:14:29,630
I'm gonna go ahead and git add all of my files in my folder. And then I'm going to add a commit message
158

159
00:14:29,810 --> 00:14:42,830
which will simply be "Add Environment Vars". And now I'm going to git push to my origin master which will
159

160
00:14:42,830 --> 00:14:49,280
now push all of the things I've committed locally to GitHub.
160

161
00:14:49,280 --> 00:14:57,210
Now if any of this is confusing at all, be sure that you've definitely completed the GitHub and Git module
161

162
00:14:57,510 --> 00:14:59,310
and that you're comfortable with it
162

163
00:14:59,310 --> 00:15:03,760
because I go into a lot more detail on this in that module.
163

164
00:15:03,750 --> 00:15:05,030
So let's hit enter.
164

165
00:15:05,280 --> 00:15:14,490
And now if we go into our project folder and we refresh our project then you can see our .env file
165

166
00:15:14,640 --> 00:15:18,510
is not visible in our list of files
166

167
00:15:18,510 --> 00:15:27,210
and when we go into our app.js it simply refers to our process.env.SECRET and there's no
167

168
00:15:27,210 --> 00:15:35,460
way for anybody online to be able to see what our API key is or what our secret is unless they had access
168

169
00:15:35,700 --> 00:15:39,360
which keeps us and our encryption safe.
169

170
00:15:39,360 --> 00:15:49,920
However, remember that Git and GitHub works on a version control basis. So if you click on history for
170

171
00:15:49,920 --> 00:15:57,690
our app.js then you'll be able to see the entire commit history and all of the versions previous
171

172
00:15:57,690 --> 00:15:59,280
to the current version.
172

173
00:15:59,280 --> 00:16:05,700
And if we click on the level 2 encryption one you can see that one of the differences here is that
173

174
00:16:05,790 --> 00:16:14,580
we used to have our secret inside our app.js in plain text not inside our environment variables.
174

175
00:16:14,580 --> 00:16:21,960
So this is why it's really important that the first thing you do when you start any new project is to
175

176
00:16:21,960 --> 00:16:32,070
incorporate .env, create your .env file and as you create anything that should be secure to create
176

177
00:16:32,070 --> 00:16:33,880
it inside that file
177

178
00:16:34,020 --> 00:16:39,880
and to add that gitignore template before you push to GitHub.
178

179
00:16:39,890 --> 00:16:49,050
Now when we're ready to deploy our app to Heroku, they actually have a specific way of handling these
179

180
00:16:49,050 --> 00:16:56,490
config VARs because obviously for your app to be able to run it needs access to those secrets. And there's
180

181
00:16:56,550 --> 00:17:04,020
a special pane that you'll be able to see on your dashboard where you can set those config VARs especially
181

182
00:17:04,080 --> 00:17:13,470
inside Heroku and they'll keep those safe and off the Internet, so keeping your API keys and your encryption
182

183
00:17:13,470 --> 00:17:14,670
keys secure.
183

184
00:17:15,360 --> 00:17:22,080
So it follows exactly the same format as what we've seen in the .env and you access it in the same
184

185
00:17:22,080 --> 00:17:24,720
way by using process.env.
185

186
00:17:25,110 --> 00:17:31,380
Now in the next lesson we're going to get back to authentication and we're going to level up the security
186

187
00:17:31,380 --> 00:17:36,510
for our users by switching from encryption to hashing.
187

188
00:17:36,570 --> 00:17:39,930
So for all of that and more, I'll see you on the next lesson.
