WEBVTT

00:04.400 --> 00:05.840
Hello everyone and welcome back.

00:05.840 --> 00:10.100
We're going to go through the enormous amount of file types not one by one.

00:10.100 --> 00:15.980
By the way which is going to have a look at what they are how you would go about using them.

00:15.980 --> 00:19.990
So we get a better understanding because there are many many file types.

00:19.990 --> 00:21.220
You can pick from.

00:21.440 --> 00:26.750
The first thing to consider and this is not only with fahd's house but with a lot of things in life

00:27.020 --> 00:28.780
is what is your outputs.

00:28.790 --> 00:31.940
What's the end goal what are you trying to achieve.

00:31.940 --> 00:38.780
So think of your output first that filters back to everything else whether what quality level you're

00:38.780 --> 00:43.920
going for what file type that you're going to outputs et cetera et cetera.

00:44.240 --> 00:47.200
Where is your image going to end up.

00:47.210 --> 00:50.780
Is it going to end up in a game in which case you want to insert some formats.

00:50.780 --> 00:56.420
Is it going to end up on the Web where you might choose others imprint's is it going to be a box art

00:56.420 --> 00:57.620
or for a manual.

00:57.620 --> 00:59.960
These are all questions you need to ask yourself.

00:59.990 --> 01:04.820
And in some cases some file types are more appropriate than others.

01:04.910 --> 01:08.000
So let's have a look at types of images.

01:08.090 --> 01:10.130
There are raw images now.

01:10.220 --> 01:16.370
These are images that are uncompressed For example data sent straight from a camera sensor.

01:16.400 --> 01:19.490
Now in general this is input data.

01:19.490 --> 01:25.090
If you were to go out and take some photos for Textus for instance you may come back with raw.

01:25.160 --> 01:27.080
Now they need to be processed.

01:27.090 --> 01:32.900
They're um they're uncompressed and they're UN processed so they're not in any particular format at

01:32.900 --> 01:33.550
the moment.

01:33.590 --> 01:38.150
You may see a dot raw or a dot something that the camera produces.

01:38.210 --> 01:42.200
And unless your computer knows how to understand that you won't be able to do anything further with

01:42.200 --> 01:43.370
it.

01:43.400 --> 01:48.180
Now there is a type called uncompressed And it's also lossless.

01:48.220 --> 01:55.400
You may have heard of bitmap BNP tiff t.j. these are the common three that I've come across in my time

01:55.400 --> 01:56.730
working with graphics.

01:56.750 --> 02:01.250
Now these are very large in size because they are uncompressed.

02:01.400 --> 02:08.780
But the great thing about them is they are lossless now in days gone by when processor time was expensive

02:08.780 --> 02:10.500
and it's not that much anymore.

02:10.640 --> 02:15.710
We are having something uncompressed meant that it could be accessed quickly it wouldn't have to be

02:15.750 --> 02:17.780
decompressed in order to use it in.

02:17.790 --> 02:19.790
Today that's not the case.

02:19.790 --> 02:23.270
Storage is more of a premium than the processing time.

02:23.360 --> 02:26.890
So then we have our compressed files and there are two types.

02:26.890 --> 02:28.160
There is Lossie.

02:28.280 --> 02:31.020
In which case we're looking at things like Jay Pake.

02:31.100 --> 02:38.120
Now the issue with using jpa is is every time you save a file or make an edit you're potentially losing

02:38.120 --> 02:38.770
data.

02:38.870 --> 02:46.790
Now there is a caveat here and that's the fact that I think a couple of years ago 2014 the jpa Standard

02:46.790 --> 02:50.900
included a loss less format as well.

02:50.900 --> 02:58.260
However in general Jay Pake is a destructive process by using it you're likely to lose information.

02:58.370 --> 03:02.340
At worst you'll make a really sharp image slightly fuzzy.

03:02.510 --> 03:05.600
And if you carry on saving it has a J peg.

03:05.620 --> 03:13.280
Each time you do that you are going to eventually rot your image and then there's the lossless types.

03:13.280 --> 03:21.110
We've already explored these in brief we've used them both PRNG and Giff now Giff is mainly used for

03:21.170 --> 03:28.190
animation but it is kind of a compressed format in the way that it's an indexed format.

03:28.250 --> 03:36.590
Now an indexed format means that there are 256 different combinations of colour you can have at any

03:36.590 --> 03:39.310
one time and that's per frame.

03:39.320 --> 03:44.200
So on an animation those can change and it has transparency.

03:44.270 --> 03:51.500
Now if you use the transparency it takes up one of those 256 particular colours and it's either on or

03:51.500 --> 03:52.210
off.

03:52.220 --> 04:00.050
It's not that gradual fade for you would have elsewhere ampie in G was developed as the successor to

04:00.050 --> 04:00.400
gear.

04:00.410 --> 04:04.250
Unfortunately there's no animation when it comes to p and Gs.

04:04.330 --> 04:10.670
Now I've mentioned transparency here the alpha channel We've got red green blue channels and we've also

04:10.670 --> 04:16.130
got that fourth channel the Alpher channel now using a j peg rules that out completely.

04:16.130 --> 04:23.180
And now there are some instances where you may choose to use a lossless uncompressed format but in general

04:23.330 --> 04:26.880
PRNG with game development is the way to go.

04:26.880 --> 04:31.300
Now of course we can't talk about fart heights without talking about program specific files.

04:31.310 --> 04:32.990
We've got the FCF format.

04:32.990 --> 04:39.630
This is gimp's own format game engines of most of programs unknot and understand this file type.

04:39.710 --> 04:46.690
So you're going to have to do some sort of export process to get your work to that final place and PSA

04:46.700 --> 04:50.140
is something you'll see a lot that's a Photoshop document.

04:50.150 --> 04:54.000
Again that's proprietary it's part of the Adobe Photoshop suite.

04:54.020 --> 05:00.950
Now when it comes to this some other programs can understand the piasta Including gimp So there is a

05:00.950 --> 05:02.650
benefit in a pierced.

05:02.690 --> 05:03.650
Far though.

05:03.710 --> 05:07.400
Altimetry we're talking about not the construction files themselves.

05:07.400 --> 05:14.780
Here we are talking about the output What's he going to give to the final program printer or whatever

05:14.780 --> 05:15.980
you're going for.

05:16.550 --> 05:19.810
Now you can convert from one image type to another.

05:20.000 --> 05:21.610
Why would you want to do that.

05:21.800 --> 05:27.620
Well creating all of your images as pinches will make your project consistent and it will also save

05:27.620 --> 05:35.150
space without losing quality because a P N G is a lossless compressed format.

05:35.210 --> 05:39.770
So if you've got a series of Tiff's perhaps you've got a scanner and you've scanned something in and

05:39.770 --> 05:46.510
it's saved it is a tiff or a bit map or even a j peg by changing it to appear in G.

05:46.580 --> 05:51.140
You're not gonna save space necessarily but you're certainly going to make your project consistent and

05:51.140 --> 05:54.470
stop the degradation of your image.

05:54.530 --> 06:01.250
So I would in general avoid receiving a J pay if you've gone out and you've taken a picture with your

06:01.250 --> 06:03.380
smart phone or a lot of cameras.

06:03.380 --> 06:05.450
They will save a j peg.

06:05.450 --> 06:12.380
Now once you've got that in to give and you start going ahead and editing the image each time you save

06:12.380 --> 06:19.760
you potentially losing more and more information and it's changing at that point before you do any editing.

06:19.760 --> 06:26.440
I would suggest changing it to a PRNG So you're in a lossless state so converting a j peg to a pin G

06:26.450 --> 06:30.270
is great if you need to edit that image.

06:30.470 --> 06:36.440
If you are having issues with PRNG sometimes you may be in a position where the target program is not

06:36.440 --> 06:37.210
supporting that.

06:37.220 --> 06:42.910
And that's the main one but I would change if your target destination needs it in another format.

06:43.280 --> 06:48.230
Now I've only ever come across this once and that was working with the cry engine.

06:48.230 --> 06:55.160
I believe they needed t A's in order to convert it into the game engine itself so that's the only time

06:55.160 --> 07:00.390
I've ever come across the acceptance of pages being nope not going to accept that.

07:00.410 --> 07:06.590
So do bear in mind saving as a is pretty universal and it comes with most of the benefits of saving

07:06.590 --> 07:08.370
space not losing data.

07:08.390 --> 07:10.680
And your project consistency.

07:11.090 --> 07:12.330
Okay so that's it.

07:12.350 --> 07:18.920
When it comes to this theory session just a reminder here never to remove your source files so when

07:18.920 --> 07:24.770
you've gone ahead and created a multi layered image using something like gimp you don't want to just

07:24.770 --> 07:28.460
bin that you don't wanna convert to export is a pian G and delete the original.

07:28.490 --> 07:32.530
That would really really muck up your workflow later on.

07:32.630 --> 07:37.860
If you need to go back and edit some much like we've done when it comes to making the animated gifts

07:37.860 --> 07:44.390
when you've had to compress those layer groups or rather flatten them so they are just one layer rather

07:44.390 --> 07:46.390
than multiple layers within.

07:46.550 --> 07:48.440
I would do the same when it comes to this.

07:48.440 --> 07:53.870
I'd always keep my raw data so that I can go back at any time and do tweaks that as you go through the

07:53.870 --> 07:58.280
process you'll get better at making sure that you don't write these things.

07:58.280 --> 07:59.390
It's very easy.

07:59.390 --> 08:06.470
Remember to always go ahead and save as create the new file and then start working on it rather than

08:06.470 --> 08:12.830
going the other way around and making all this work on it potentially saving as you go and then going

08:12.890 --> 08:16.030
Whoops I've overwritten the original I didn't want to do that.

08:16.250 --> 08:18.140
Of course I always have a backup as well.

08:18.140 --> 08:22.640
I cannot stress that enough and I can guarantee you when you're working with an image or make a mistake

08:22.640 --> 08:29.150
one day and you'll wish you had a previous version of a file so you can have a version backup that is

08:29.180 --> 08:30.920
even better.

08:30.920 --> 08:35.910
As I said That's it for now on this theory and I will see you all in the next lecture.
