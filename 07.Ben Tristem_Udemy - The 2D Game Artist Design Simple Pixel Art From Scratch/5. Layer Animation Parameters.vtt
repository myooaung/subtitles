WEBVTT

00:04.650 --> 00:06.350
Hello everybody and welcome.

00:06.360 --> 00:11.960
By the end of this section will learn how to control the frame rates of our animation.

00:12.030 --> 00:18.210
As you can see here as the ball drops the animation picks up speed and slows down again as it gets the

00:18.210 --> 00:19.190
top.

00:19.230 --> 00:23.060
So let's go of course into Give now where I can show you how to achieve this.

00:23.160 --> 00:28.570
Just before we get over into game splits have a look at the different layer options that you can do.

00:28.650 --> 00:33.120
And then we're hop into guimpe and see how to actually use them themselves.

00:33.120 --> 00:34.890
So here's a little chart that I put together.

00:34.890 --> 00:37.590
First of all you've got the type that you have.

00:37.590 --> 00:44.100
So first of all you can actually change the milliseconds the amount of time that the frame will be showed

00:44.100 --> 00:44.630
for.

00:44.640 --> 00:50.280
And this can be incredibly useful if you do need to delay a frame or show it for longer on the screen

00:50.280 --> 00:57.900
for perhaps dramatic effect or even shorten it to make something pass quicker without having to necessarily

00:58.170 --> 01:04.680
move your images about to compensate for perhaps a slight judder in your animation.

01:04.680 --> 01:11.180
Now the next two options combine and replace can be used one or the other.

01:11.370 --> 01:16.560
So you may combine which mixes the current frame with the one before and this is useful for our followers.

01:16.560 --> 01:22.520
So if you put a dot on the screen on one layer with an Outward Bound background and then the dots on

01:22.520 --> 01:27.600
the next layer when you combine it you will end up with an animation that consists of one frame of a

01:27.600 --> 01:36.060
single dot and then one frame with two dots if you happen to have used replace you will end up with

01:36.060 --> 01:38.820
a single dot on each frame.

01:38.820 --> 01:44.870
Now finally the order matters as do the brackets and the spacing.

01:44.940 --> 01:48.420
So recommended an example here you would have the layer name itself.

01:48.420 --> 01:53.190
You don't have to have a space between that and these control options.

01:53.190 --> 01:57.760
These parameters you can put in but I would recommend that just for readability.

01:57.780 --> 02:05.000
However if you are using both the time that the frame will be showed and either combine or replace there's

02:05.010 --> 02:10.950
no space between the brackets themselves so will need to be exactly as you see here.

02:11.160 --> 02:17.130
Now if you want to you can omit replace or combine or you can omit the timing itself and then it will

02:17.130 --> 02:24.460
go to the default unspecified timing when your doing the export so you can see you have lots of options

02:24.460 --> 02:26.390
a control as to what you do.

02:26.520 --> 02:29.780
Let's go over into gimp now and see how that's applied.

02:30.210 --> 02:32.460
Okay welcome back over into gimp.

02:32.460 --> 02:34.410
Now usually we go ahead and create an image.

02:34.410 --> 02:38.880
But what I will do this time round is actually go ahead and open up one I've already made.

02:38.910 --> 02:42.850
So in this case just go and open up the challenge from the last lecture.

02:42.990 --> 02:46.400
So we've got our bouncing ball with 10 layers.

02:46.400 --> 02:50.090
The 10 frames that we made and we exported it to two seconds.

02:50.100 --> 02:56.740
Now in this particular case these are all unspecified I've got no parameters on them.

02:56.910 --> 03:02.580
But what we can do is take the layer the original layer itself and on the end.

03:02.580 --> 03:10.620
Let's say I put open brackets at a thousand milliseconds which is one whole second and close the brackets.

03:10.620 --> 03:18.120
Now what we will see here is when we go to our filters animation and playback when we press play the

03:18.120 --> 03:24.810
1. will stay there for a whole second before the rest of the frames play so we can start adjusting our

03:24.840 --> 03:25.890
animation itself.

03:25.890 --> 03:31.190
Now this is a manual process that will take you time and optimization if you wanted to do this.

03:31.380 --> 03:38.520
Now what we can also do is type in let's say here are by default at the moment is just whatever you've

03:38.520 --> 03:39.610
got set here.

03:39.780 --> 03:46.740
So we go play back and we've got 10 frames per second here that will last one second because it specified

03:46.740 --> 03:50.960
but the others will play back at a hundred milliseconds each.

03:51.000 --> 03:56.130
If we up that to 60 that first frame will still be a whole second because that is a specified time.

03:56.220 --> 04:00.350
But all the rest would be 16 milliseconds or thereabouts.

04:00.420 --> 04:04.260
A switch that back down to 10 and just close them down for the moment.

04:04.470 --> 04:08.810
Okay so back here what we can do is on Layer 1.

04:08.820 --> 04:14.470
For instance we can go ahead and say this one's going to be replace.

04:15.560 --> 04:22.450
Now what that will do is it will remove the next layer or the previous layer and just add that one there.

04:22.460 --> 04:26.920
So when we go ahead and play back that you'll see the first dot actually disappear.

04:27.380 --> 04:29.440
But all the others will then appear.

04:29.470 --> 04:31.280
So go ahead and click play.

04:31.310 --> 04:35.630
We can see that the first dot disappears and then the rest come in.

04:35.630 --> 04:40.340
So if you were going further up and perhaps when it hits the ground all the previous one so was the

04:40.340 --> 04:42.690
ground strike the ground strike is layer 5.

04:42.830 --> 04:46.540
If I go ahead and press replace there it will then start afresh.

04:46.550 --> 04:51.380
From that point in all the previous ones will disappear and again we can demonstrate that by going to

04:51.380 --> 04:54.500
the animation and playback and when we press play.

04:55.540 --> 04:58.090
You can see that the first bit comes down and disappears.

04:58.090 --> 05:03.570
Now you could use this to make a trail that affects you know after a certain amount you drop it and

05:03.580 --> 05:04.410
started again.

05:04.410 --> 05:12.220
That's absolutely fine and this is a great way of specifying to replace a frame with out having to make

05:12.280 --> 05:14.790
the background white for instance.

05:14.810 --> 05:17.400
Now in this case there is no background that's absolutely fine.

05:17.410 --> 05:23.530
But if I was to go down to to the very bottom and create a new layer and just call this background for

05:23.530 --> 05:25.820
the moment because that's essentially what it would be.

05:26.170 --> 05:28.850
I could have specified it to be white at that point.

05:28.900 --> 05:31.830
I would just do that now by filling it in.

05:31.880 --> 05:36.200
Now if we go ahead and do the animation and playback.

05:37.060 --> 05:47.110
We see that as we step through because it's replaced frame to yet I've put it in the second one because

05:47.110 --> 05:49.030
it's replaced it doesn't persists.

05:49.030 --> 05:54.660
By the time you reach in this case framed three the background itself would disappear.

05:54.670 --> 05:59.670
So this is when labour groups can come in handy but we'll deal with that in a bit.

05:59.890 --> 06:01.750
So let's go ahead and just see what that looks like.

06:01.750 --> 06:03.090
Just to confirm.

06:03.250 --> 06:04.930
So white that's fine.

06:04.930 --> 06:09.070
Comes on disappears and then resets makes the others disappear afterwards.

06:09.070 --> 06:09.910
That's fine.

06:09.910 --> 06:13.780
Now by default because these are on a alph for life.

06:13.960 --> 06:16.570
They are naturally combining.

06:16.570 --> 06:22.930
Now when we go in export our actual animation that we've made as a gift them just come overwrite my

06:22.930 --> 06:26.880
test animation again exports replace.

06:26.980 --> 06:33.460
This is where we can change the settings for anything that is un specified.

06:33.520 --> 06:38.320
That's important So here the hundred milliseconds that means that every frame that doesn't have any

06:38.320 --> 06:45.290
millisecond like this layer here with a thousand milliseconds everything else will be play back a hundred.

06:45.520 --> 06:52.660
If we go down and just use the scroll wheel to change that each frame despose aware unspecified So at

06:52.660 --> 06:59.200
the moment it will replace everything unless I've told it to combine as those only those two options

06:59.200 --> 07:01.990
and you can see here I don't care.

07:01.990 --> 07:07.360
Chance means that it's going to listen to what is written here.

07:07.390 --> 07:13.030
Now what you can do these two check boxes underneath We've briefly talked about them before but this

07:13.030 --> 07:21.040
basically means you can override both the frame time specification and also whether or not any disposal

07:21.100 --> 07:24.670
or combination has happened to the previous frame.

07:24.670 --> 07:30.040
If you wanted to entirely up to you how you manage that's of course in it would differ depending on

07:30.040 --> 07:33.040
what outputs you were trying to achieve.

07:33.040 --> 07:37.630
And of course we can go ahead and export that if we wanted to at the end.

07:37.930 --> 07:43.960
So finally what I want to do here before I export or anything else is go to file and save as because

07:43.960 --> 07:49.030
what I don't want to do at the moment is overwrite my original bouncy ball with the changes I've made

07:49.390 --> 07:56.050
so save as and again I'm going to put this one in here ankled it's five in this case because I'm on

07:56.050 --> 07:59.290
the fifth lecture an umbilical a bouncing ball.

07:59.290 --> 08:00.910
But I'm going to call it varied.

08:01.060 --> 08:05.810
And you can probably see I've already done that one just to check for all of this works.

08:05.840 --> 08:07.140
So replace that.

08:07.180 --> 08:08.030
And there we go.

08:08.080 --> 08:10.580
I've got a new file now that I'm working on.

08:10.630 --> 08:17.800
And of course this leads us nicely up to a challenge and your challenge is going to be to use a copy

08:17.800 --> 08:20.650
of the last lectures works who got the bouncing ball there.

08:20.740 --> 08:28.270
Make sure the animation is 10 frames long in total and then have the ball increase speed as it falls

08:28.270 --> 08:31.750
to the ground and decrease has it ascends again.

08:31.750 --> 08:35.770
Now as always there's going to be more than one way to do this but this time round I'd like you to do

08:35.770 --> 08:41.100
this by adjusting the frame timing and not adjusting the image.

08:41.140 --> 08:47.950
Finally export it as an animated gif and share it with us over in the discussions pause the video now

08:48.010 --> 08:49.290
and give that a go.

08:51.740 --> 08:53.250
Okay everyone welcome back.

08:53.350 --> 08:59.140
Let's go ahead now and have our ball accelerate or at least appear to accelerate as it goes towards

08:59.140 --> 09:01.930
the ground and decrease as it goes up again.

09:04.010 --> 09:06.100
Okay so back overing guimpe.

09:06.110 --> 09:09.830
We've got a little bit of typing to do in this case.

09:09.830 --> 09:16.100
I'm going to export them all replace anyway so I don't need to add to replace or change any of those

09:16.100 --> 09:16.530
around.

09:16.640 --> 09:21.350
But we're going to have it increasing speed as it drops and comes back up again.

09:21.350 --> 09:26.840
Now the challenge specifications said not to move our balls about even though I've kind of space them

09:26.840 --> 09:30.830
in a falling manner any way where they appear to get faster.

09:30.890 --> 09:34.200
We can exaggerate that now by adjusting the frame timing.

09:34.250 --> 09:37.830
So the first layer a whole second is just too long.

09:38.210 --> 09:41.600
I'm going to guess here maybe 250 milliseconds.

09:41.720 --> 09:45.710
So it's a bit delayed at the beginning and then picks up speed more rapidly.

09:45.770 --> 09:50.640
Of course we need to watch our timing here as well as we go downstairs and get too long.

09:50.660 --> 09:53.550
So this one I'm just going to do a simple deduction as we go.

09:53.550 --> 09:58.420
I'm going to replace the Replace with 200 milliseconds and so forth.

09:58.430 --> 10:02.530
As we go up and I'll see you guys back in a moment when I finish typing this in.

10:06.470 --> 10:12.560
Okay so I'm just coming to the end of this here and a couple of things that you can bear in mind as

10:12.560 --> 10:19.760
it's coming back up again is that it can be a little slow in fact in this case I am just doing 50 for

10:19.760 --> 10:26.330
this sake of just being easy you can adjust these to any values that you want of course and it's going

10:26.330 --> 10:31.880
to be a bit slower at their end frame there and with the background frame that is there any way it's

10:31.880 --> 10:33.410
not needed to be there.

10:33.650 --> 10:36.520
Sometimes you will get an error message like this up.

10:36.620 --> 10:43.250
And I think it's because I've got our animation playbacks in the background still running on another

10:43.250 --> 10:44.620
screen.

10:45.080 --> 10:45.680
There it is.

10:45.680 --> 10:51.770
There's that one and there's another one lurking about my fault for not shutting it down whilst adjusting.

10:51.770 --> 10:55.780
So in this case I can just click okay and close these two down.

10:55.800 --> 11:01.010
Now I can go into filter's animation and just check it with a playback feature and move this a bit more

11:01.010 --> 11:03.520
central and go ahead and press play.

11:03.770 --> 11:08.260
Then we should see it's beat up comes down and bounces back up again.

11:08.420 --> 11:12.390
In this case that's absolutely fine that's exactly what we wanted to achieve.

11:12.440 --> 11:15.720
And then finally of course we go ahead and export that.

11:15.890 --> 11:22.310
So export as I'm going to call this bouncing ball varied that's apsey Final going to hit exports and

11:22.310 --> 11:23.830
Giff that's what we want.

11:23.840 --> 11:32.540
Finally as an animation Yes at loop forever why not so we can just repeat the animation delay between

11:32.540 --> 11:34.160
the frames were unspecified.

11:34.160 --> 11:40.370
Well these are all specified anyway so that value is irrelevant framed disposal where unspecified.

11:40.370 --> 11:46.670
Now in this case I have not specified any of these to be replaced so if I just export it it they would

11:46.670 --> 11:49.610
build up on top of one another and leave a trail.

11:49.610 --> 11:52.160
That's not what I want to do in this case.

11:52.160 --> 11:54.800
I do want to make sure that one frame per player.

11:54.830 --> 11:58.130
So it's replaced used to lay a bone end to the buzz.

11:58.130 --> 11:59.790
No I don't need to change that.

11:59.810 --> 12:05.090
I could do that if I wanted a smooth animation again where it is all a hundred milliseconds each.

12:05.090 --> 12:08.110
Because that's what is unspecified timing up here.

12:08.250 --> 12:15.500
Use disposal entered above for all frames now because this is not got any specified ones I also don't

12:15.500 --> 12:18.350
need to check that I've just lost my dialogue box.

12:18.350 --> 12:19.120
There it is.

12:19.130 --> 12:23.030
So let's go ahead hit export and then finally check that.

12:23.220 --> 12:29.120
So here we go and back in my animation director in here we have my bouncing ball varied to double click

12:29.120 --> 12:31.190
it and just check to make sure it's working.

12:31.190 --> 12:33.280
That is exactly what I wanted.

12:33.290 --> 12:34.730
How did you guys get on.

12:34.730 --> 12:38.200
Did you experiment with different timings than what I've done.

12:38.210 --> 12:39.620
I'd love to see your results.

12:39.620 --> 12:43.630
Please share with them in the discussions and I will see you in the next lecture.
