1
00:00:00,630 --> 00:00:01,680
Okay ready.

2
00:00:01,680 --> 00:00:03,540
Hope you had a go at doing all this.

3
00:00:03,570 --> 00:00:10,210
Here's the solution let's very quickly just recap where we are in terms of the data that we're working

4
00:00:10,210 --> 00:00:21,160
with X on a school test thought ahead we'll show us the first five rows of our feature matrix the first

5
00:00:21,160 --> 00:00:30,800
five rows of our target values y underscore test look like this so you've got document four thousand

6
00:00:30,800 --> 00:00:39,740
six hundred seventy five as the very first row in both X and a school test don't shape we'll chose the

7
00:00:39,740 --> 00:00:46,730
size of our data frame that we're working with this is gonna be much smaller than X underscore train

8
00:00:47,200 --> 00:00:53,360
and as such the function call that we're gonna make to a make underscores sparse underscore matrix function

9
00:00:53,590 --> 00:00:58,370
will take a lot less time to run let's check it out.

10
00:00:58,370 --> 00:01:07,910
Percent percent time will benchmark this for us and I want to call a variable sparse on this court test

11
00:01:08,270 --> 00:01:18,080
underscored D F to hold on to result from our function call so sparse on school test as IDF equals make

12
00:01:18,990 --> 00:01:29,840
and score sparse on the score matrix parentheses x on a school test comma would index would an X is

13
00:01:29,840 --> 00:01:38,960
the same for both our training data and our test data and then comma third argument y on a school test

14
00:01:39,980 --> 00:01:42,770
let's run this and see what we get.

15
00:01:42,950 --> 00:01:49,200
Scroll down a bit add a few rows in the meantime there you go.

16
00:01:49,250 --> 00:01:51,030
Now we play the waiting game.

17
00:01:51,170 --> 00:01:59,170
I could try and yodel for you to help pass the time but think of us would enjoy that very much.

18
00:01:59,180 --> 00:02:01,060
Oh man come on come on.

19
00:02:01,130 --> 00:02:07,160
These are the times when you start feeling a bit of the pain of working on a 4 year old laptop but my

20
00:02:07,160 --> 00:02:14,810
patients has paid off two minutes 45 seconds to complete this calculation.

21
00:02:14,840 --> 00:02:17,260
Let's take a look at how many rows we've got here.

22
00:02:17,630 --> 00:02:25,370
Sparse on this contest on what the f dots shape reveals to us that we've got about one hundred and ninety

23
00:02:25,490 --> 00:02:28,600
thousand individual rows.

24
00:02:28,600 --> 00:02:37,090
We create another variable called test on a school grouped and set that equal to sparse on the score

25
00:02:37,090 --> 00:02:46,120
test on the score DLF dot group by parentheses square brackets and I've got to have those column names

26
00:02:46,320 --> 00:02:47,040
right.

27
00:02:47,260 --> 00:02:49,700
The first one was on a school I.D..

28
00:02:50,140 --> 00:02:57,490
The second one was word on the school I.D. everything's case sensitive of course and spelling really

29
00:02:57,490 --> 00:03:01,210
matters which makes this extra difficult for me.

30
00:03:01,210 --> 00:03:02,790
Third one is label.

31
00:03:03,070 --> 00:03:13,450
All of these are in a list and at the end will sum it up and I'm going to chain reset on a school index

32
00:03:13,780 --> 00:03:23,030
straight onto this finally when I look at the first five rows test on the school groups dot head give

33
00:03:23,030 --> 00:03:24,380
me the following.

34
00:03:24,710 --> 00:03:35,560
As you can see it summed up the occurrence of word number 19 in email number eight quite nicely tests

35
00:03:35,580 --> 00:03:42,570
on the score grouped don't shape will also show me the has five euros only one hundred and ten thousand

36
00:03:42,690 --> 00:03:48,610
as opposed to one hundred and ninety thousand to save this as a text file will use number again and

37
00:03:48,630 --> 00:04:00,080
p dot save t x t parentheses and now we supply that constant we created test data file test Moscow grouped

38
00:04:00,650 --> 00:04:05,870
format F T equals single quotes percent D.

39
00:04:07,000 --> 00:04:15,680
I move my browser over a little bit keep that finder window in view hit shift enter and there it is

40
00:04:16,240 --> 00:04:24,410
there's my test hyphen data dot text file if I open it in item then I can see that the first five rows

41
00:04:24,680 --> 00:04:32,240
that we print out in Jupiter here and are showing as an output mirror what we see in the text file exactly

42
00:04:33,320 --> 00:04:38,540
the document that is the first column where that is the second one label is this third occurrence is

43
00:04:38,540 --> 00:04:39,350
the fourth column.
