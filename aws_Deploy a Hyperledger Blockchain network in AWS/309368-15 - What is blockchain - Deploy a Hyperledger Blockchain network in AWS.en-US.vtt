WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.340
Hi,

00:00:00.340 --> 00:00:00.930
everybody.

00:00:00.930 --> 00:00:04.850
And welcome to this lesson on looking at what is Blockchain.

00:00:04.850 --> 00:00:05.420
First,

00:00:05.420 --> 00:00:09.350
let's go ahead and try to define what we mean by Blockchain.

00:00:09.350 --> 00:00:12.280
And if you guys Google Blockchain,

00:00:12.280 --> 00:00:17.250
you'll get a number of different meanings and descriptions off what people think.

00:00:17.250 --> 00:00:19.010
Blockchain actually is now.

00:00:19.010 --> 00:00:24.910
The one I found out to be the best came in a book titled Blockchain Revolution back in 2016

00:00:24.910 --> 00:00:31.050
and they described Blockchain as an incorruptible digital ledger off economic transactions

00:00:31.050 --> 00:00:36.940
that can be programmed to record not just financial transactions but virtually everything

00:00:36.940 --> 00:00:37.790
off value.

00:00:37.790 --> 00:00:45.120
So it can also be thought of as an encrypted database of agreements that are entered into

00:00:45.120 --> 00:00:47.520
the agreements that are stored in a Blockchain,

00:00:47.520 --> 00:00:53.750
our contractual clauses and terms and conditions that haven't agreed to by a number of

00:00:53.750 --> 00:00:54.540
parties.

00:00:54.540 --> 00:00:59.300
The terms and clauses are recorded as transactions in these agreements.

00:00:59.300 --> 00:01:04.520
Ah Blockchain is essentially alleged because thes transactions are entered into the

00:01:04.520 --> 00:01:08.660
Blockchain ledger and that serves as a bookkeeping structure for these agreements.

00:01:08.660 --> 00:01:08.920
Now,

00:01:08.920 --> 00:01:13.990
the beauty of this technology is that once thes transactions have been recorded,

00:01:13.990 --> 00:01:16.650
neither party can rewrite the terms.

00:01:16.650 --> 00:01:19.270
No terms can be modified easily.

00:01:19.270 --> 00:01:22.510
Transactions are there for immutable,

00:01:22.510 --> 00:01:27.400
irreversible and incorruptible and most important of all,

00:01:27.400 --> 00:01:30.790
they are verified before being added to the Blockchain.

00:01:30.790 --> 00:01:35.930
A lot of us are most likely familiar with Bitcoins,

00:01:35.930 --> 00:01:42.610
especially in 2018 when there was a big rise and fall in the Bitcoin and the Bitcoin price

00:01:42.610 --> 00:01:45.990
is a lot of us became familiar or at least heard about Bitcoin.

00:01:45.990 --> 00:01:48.720
I even know this course is not about Bitcoin itself.

00:01:48.720 --> 00:01:54.520
I think it's important that we have some idea about it to differentiate it from Blockchain

00:01:54.520 --> 00:01:54.520
.

00:01:54.520 --> 00:01:55.450
Ah,

00:01:55.450 --> 00:01:58.950
Bitcoin is broadly used as a Cryptocurrency,

00:01:58.950 --> 00:02:02.560
and that's something that only exists in the digital realm.

00:02:02.560 --> 00:02:08.580
There is no physical Bitcoin like we have physical money on our physical money is something

00:02:08.580 --> 00:02:10.110
that we keep in a bank account,

00:02:10.110 --> 00:02:15.510
and we trust our bank to make sure that they keep a secure ledger or the incoming and

00:02:15.510 --> 00:02:19.270
outgoing value so they keep track of the money you're putting in and the money you're

00:02:19.270 --> 00:02:20.090
taking out.

00:02:20.090 --> 00:02:25.560
Banks are part of a large global network where transactions can be done between banks and

00:02:25.560 --> 00:02:28.380
currencies can be exchanged With Bitcoin,

00:02:28.380 --> 00:02:30.270
there is no central system as well.

00:02:30.270 --> 00:02:34.890
Look at later we look at digital ledgers and how Blockchain works.

00:02:34.890 --> 00:02:36.270
There's no bank.

00:02:36.270 --> 00:02:39.870
There's no way to revert transactions once they're done.

00:02:39.870 --> 00:02:44.210
All transactions are transparent and can be fully anonymous.

00:02:44.210 --> 00:02:48.740
The underlying technology that enables this is called Blockchain,

00:02:48.740 --> 00:02:52.020
and that's what we're going to focus on in this course.

00:02:52.020 --> 00:02:57.380
Now let's talk about briefly about the history of Blockchain and how it came about now in

00:02:57.380 --> 00:03:04.500
motion off crypto currency motion off Secure blocks or cryptographic Lee Secure Chain of

00:03:04.500 --> 00:03:10.350
Blocks was actually described back in 1989 by somebody called Stuart Haber.

00:03:10.350 --> 00:03:17.250
But the first recognized work on decentralized digital currency on using similar technology

00:03:17.250 --> 00:03:19.010
came in 1997.

00:03:19.010 --> 00:03:22.650
But it took almost 10 years after that until Blockchain,

00:03:22.650 --> 00:03:28.750
until a blocking concept was getting mature and published by somebody known as Satoshi

00:03:28.750 --> 00:03:32.540
Nakamoto in 2000 and six or 2000 and eight.

00:03:32.540 --> 00:03:33.360
No,

00:03:33.360 --> 00:03:37.310
Satoshi is actually considered to be the founder of Bitcoin,

00:03:37.310 --> 00:03:43.340
but the issue is that nobody actually knows who start where she actually is because they

00:03:43.340 --> 00:03:44.550
are still anonymous,

00:03:44.550 --> 00:03:45.670
even to the state.

00:03:45.670 --> 00:03:47.720
Nobody knows whether they're a person,

00:03:47.720 --> 00:03:50.120
whether they're an organization or who they are.

00:03:50.120 --> 00:03:56.510
They have decided to stay anonymous since its beginning that many interesting theories

00:03:56.510 --> 00:03:59.670
about who they actually are that kind of adds ah,

00:03:59.670 --> 00:04:04.020
bit of enchantment and mysticism about Bitcoin and its underlying technology.

00:04:04.020 --> 00:04:06.630
Let's go ahead and raise forward to today,

00:04:06.630 --> 00:04:09.160
and Blockchain is actually hitting mainstream.

00:04:09.160 --> 00:04:14.250
We have a lot of early adopters off Blockchain in many different industries.

00:04:14.250 --> 00:04:20.650
Lots of large organisations such as IBM and Microsoft and Fujitsu and Apple are adopting

00:04:20.650 --> 00:04:27.070
the Blockchain technology within their own organizations and also looking to deploy

00:04:27.070 --> 00:04:30.510
Blockchain into the mainstream corporate world.

00:04:30.510 --> 00:04:33.360
Now some of the characteristics are blocked in that you guys see in the bottom.

00:04:33.360 --> 00:04:34.160
First of all,

00:04:34.160 --> 00:04:37.790
it's you can think of it as globally unique or a global singleton.

00:04:37.790 --> 00:04:38.760
And if you know how,

00:04:38.760 --> 00:04:43.670
Singleton's work for a program you can think of Blockchain objects as a global singleton

00:04:43.670 --> 00:04:46.720
instance is the Blockchain is natively.

00:04:46.720 --> 00:04:49.900
Object oriented were cold and data reside together.

00:04:49.900 --> 00:04:51.240
However,

00:04:51.240 --> 00:04:53.650
objects are securely separated from each other.

00:04:53.650 --> 00:04:56.270
They're virtually unstoppable.

00:04:56.270 --> 00:04:59.100
There's no one control over a Blockchain.

00:04:59.100 --> 00:05:00.300
It can't be stopped,

00:05:00.300 --> 00:05:02.750
and it cannot have a central point of failure.

00:05:02.750 --> 00:05:04.020
Blockchain,

00:05:04.020 --> 00:05:05.390
by its very nature,

00:05:05.390 --> 00:05:11.510
is meant to be accessible to everyone and everywhere and most important of all,

00:05:11.510 --> 00:05:12.620
its verifiable.

00:05:12.620 --> 00:05:17.480
Everyone that has access to the Blockchain convey verify every single transaction from the

00:05:17.480 --> 00:05:19.500
beginning off the block chain.

00:05:19.500 --> 00:05:24.370
This enables everyone to audit everything that had ever been done to a Blockchain.

00:05:24.370 --> 00:05:28.590
So now that you have a quick history and a quick overview about Blockchain and we've

00:05:28.590 --> 00:05:31.120
differentiated from Bitcoin,

00:05:31.120 --> 00:05:34.740
let's see how the technology actually works as a quick or,

00:05:34.740 --> 00:05:35.180
you know,

00:05:35.180 --> 00:05:35.510
you know,

00:05:35.510 --> 00:05:37.360
this is a very detailed process,

00:05:37.360 --> 00:05:41.850
but I'm just going to give you a quick overview to give you a good understanding of how the

00:05:41.850 --> 00:05:43.350
Blockchain actually works.

00:05:43.350 --> 00:05:48.250
So essentially begins with someone doing a single or a group of transactions.

00:05:48.250 --> 00:05:53.550
A transaction is typically sending data in the form of a contract where you're exchanging

00:05:53.550 --> 00:05:55.920
tangible or intangible goods,

00:05:55.920 --> 00:05:58.480
and depending on the Blockchain implementation you're using,

00:05:58.480 --> 00:06:02.450
it can also involve Cryptocurrency being sent from one account to another.

00:06:02.450 --> 00:06:05.150
The transactions are sent to large peer,

00:06:05.150 --> 00:06:06.950
a peer network of computers.

00:06:06.950 --> 00:06:09.650
These air generally distributed across the globe.

00:06:09.650 --> 00:06:13.070
Each computer is referred to as a note,

00:06:13.070 --> 00:06:17.610
and they all have a copy of the existing data or the existing legend.

00:06:17.610 --> 00:06:23.800
The transaction is then executed invalidity based on appreciate contracts and scripts,

00:06:23.800 --> 00:06:28.560
and we'll look at the different ways that we can execute transactions a little later on

00:06:28.560 --> 00:06:29.890
when we discuss hyper ledger.

00:06:29.890 --> 00:06:37.180
Now this ensures that all nodes execute using the same set of rules and same set of log

00:06:37.180 --> 00:06:37.800
rhythms.

00:06:37.800 --> 00:06:39.870
When the transactions were executed,

00:06:39.870 --> 00:06:42.160
the result is added to the Blockchain,

00:06:42.160 --> 00:06:44.230
and since this has done it each node,

00:06:44.230 --> 00:06:48.800
you would have to literally compromise every single node in the chain in order to

00:06:48.800 --> 00:06:50.380
compromise the transaction.

00:06:50.380 --> 00:06:53.330
When Boone transactions in the Blockchain,

00:06:53.330 --> 00:06:56.690
there's some aspects that are absolutely necessary for toe.

00:06:56.690 --> 00:06:58.150
Have the carrots restricts,

00:06:58.150 --> 00:06:59.280
I previously mentioned.

00:06:59.280 --> 00:07:00.870
First of all,

00:07:00.870 --> 00:07:02.950
all transactions are atomic.

00:07:02.950 --> 00:07:06.760
This means that the full operation run or nothing at all.

00:07:06.760 --> 00:07:12.550
So let's say you have some type of monetary transaction in this transaction,

00:07:12.550 --> 00:07:17.420
you'd have to ensure that both the credit and debit functions occur properly.

00:07:17.420 --> 00:07:19.540
If either one of those functions failed,

00:07:19.540 --> 00:07:21.490
the whole transaction fails.

00:07:21.490 --> 00:07:22.470
Secondly,

00:07:22.470 --> 00:07:24.880
transactions run independently of each other,

00:07:24.880 --> 00:07:28.950
so no two operations can interact or interfere that with each other.

00:07:28.950 --> 00:07:31.160
It has to be inspect herbal.

00:07:31.160 --> 00:07:36.390
Every single method called that comes to Blockchain comes with the actual address to the

00:07:36.390 --> 00:07:37.050
caller.

00:07:37.050 --> 00:07:43.330
This gives unique possibility for securing an audit and auditing solutions on a very,

00:07:43.330 --> 00:07:44.550
very wide scale.

00:07:44.550 --> 00:07:47.260
And this is what makes Blockchain unique.

00:07:47.260 --> 00:07:48.330
And and lastly,

00:07:48.330 --> 00:07:50.640
Blockchain objects are permanent.

00:07:50.640 --> 00:07:53.250
The cold foreign object can never be changed,

00:07:53.250 --> 00:07:55.250
and you can never delete an object.

00:07:55.250 --> 00:07:56.120
Externally,

00:07:56.120 --> 00:08:00.710
the only way to remove an object from a block from a Blockchain is that if its program to

00:08:00.710 --> 00:08:04.620
remove itself in one ways that's done is through hashing.

00:08:04.620 --> 00:08:05.750
No hashing,

00:08:05.750 --> 00:08:06.770
simply stated,

00:08:06.770 --> 00:08:11.420
is a function that takes some input data and create some output.

00:08:11.420 --> 00:08:17.840
Data in layman's terms is basically to execute a mathematical longer them that creates a

00:08:17.840 --> 00:08:19.330
result with a given length,

00:08:19.330 --> 00:08:20.730
regardless off the input.

00:08:20.730 --> 00:08:22.120
Given the result,

00:08:22.120 --> 00:08:24.850
off a hashing function is called the hatch,

00:08:24.850 --> 00:08:28.030
and you can think of them as digital fingerprints.

00:08:28.030 --> 00:08:32.190
Hashing is a one way function mean the functional always returned,

00:08:32.190 --> 00:08:34.410
the same result given the same input.

00:08:34.410 --> 00:08:39.760
But you can never regenerate the input based on the result off the hashing lager them.

00:08:39.760 --> 00:08:42.030
Let me give you a simple example.

00:08:42.030 --> 00:08:46.770
Let's say that we have a simple hashing lager them that takes any number between zero and

00:08:46.770 --> 00:08:48.850
45 isn't input Ah,

00:08:48.850 --> 00:08:49.510
logger them,

00:08:49.510 --> 00:08:52.250
then double the number and round to the nearest 10.

00:08:52.250 --> 00:08:54.650
This means that if you put five,

00:08:54.650 --> 00:08:56.440
you'll get the hashing result of 10.

00:08:56.440 --> 00:08:59.650
The same will be true if you put 12 or three,

00:08:59.650 --> 00:09:01.870
but if you put nine,

00:09:01.870 --> 00:09:03.940
the hash result will be 20.

00:09:03.940 --> 00:09:06.950
The length of the result will always be two digits,

00:09:06.950 --> 00:09:09.100
even if you give a single digit input.

00:09:09.100 --> 00:09:12.220
If you run the log a rhythm several times in the same input,

00:09:12.220 --> 00:09:14.050
you always get the same result.

00:09:14.050 --> 00:09:18.240
But you would not be able to figure out what the input waas.

00:09:18.240 --> 00:09:23.060
A lot of times hashing is used in data forensics.

00:09:23.060 --> 00:09:29.050
When organizations are doing forensic activity and doing audits off there,

00:09:29.050 --> 00:09:30.760
internal networks,

00:09:30.760 --> 00:09:37.230
the use hashing technology one making images of databases or images off hard drives ensure

00:09:37.230 --> 00:09:40.990
that image that's taken is stays the same.

00:09:40.990 --> 00:09:41.580
For one,

00:09:41.580 --> 00:09:42.450
it's access.

00:09:42.450 --> 00:09:46.610
And a lot of times when you're in legal cases that involve digital information,

00:09:46.610 --> 00:09:50.850
hashing is used to ensure that evidence has not been tampered with.

00:09:50.850 --> 00:09:51.140
Now,

00:09:51.140 --> 00:09:56.250
very common hashing longer than use with Blockchain is called S H A to 56.

00:09:56.250 --> 00:09:58.190
It's one of the several checks,

00:09:58.190 --> 00:10:02.630
Um hashing logarithms and it will produce a long text ring as a result.

00:10:02.630 --> 00:10:08.450
S A J is a family of hashing a log rhythms The number following the name lets you know the

00:10:08.450 --> 00:10:13.280
complexity of the implementation just to give you an example when we run the text through

00:10:13.280 --> 00:10:18.280
on s a G 2 to 6 a longer than we get a long string that you can see here As a result.

00:10:18.280 --> 00:10:20.150
When I typed in my name Kassam,

00:10:20.150 --> 00:10:22.750
you guys didn't see the long hash off.

00:10:22.750 --> 00:10:24.570
My name are very common.

00:10:24.570 --> 00:10:27.540
Used for hashing is one storing passwords in a database.

00:10:27.540 --> 00:10:30.540
If you start the password and clear text in your database,

00:10:30.540 --> 00:10:35.740
your usage might be at risk if you're databases hacked and the hacker gets access to the

00:10:35.740 --> 00:10:36.350
table.

00:10:36.350 --> 00:10:37.130
However,

00:10:37.130 --> 00:10:39.110
if the password is store is a hash,

00:10:39.110 --> 00:10:43.770
the hacker will have a very hard time figuring out what the actual passer it is.

00:10:43.770 --> 00:10:49.480
They will then need to compare the passers with known hashed results where the input is

00:10:49.480 --> 00:10:54.860
known less well because hash longer than was always give the same results given the same

00:10:54.860 --> 00:11:00.540
input and always give a fixed length off the result they are also ideal to verify the

00:11:00.540 --> 00:11:03.180
consistency off large amounts of data.

00:11:03.180 --> 00:11:05.510
If you put the entire Wikipedia,

00:11:05.510 --> 00:11:06.390
the website,

00:11:06.390 --> 00:11:09.380
through a hashing algorithm and save the resulting hash,

00:11:09.380 --> 00:11:14.090
you could easily figure out if someone had changed anything on that website.

00:11:14.090 --> 00:11:18.850
Even a single comma or a single period would change the hash result.

00:11:18.850 --> 00:11:20.240
Lastly,

00:11:20.240 --> 00:11:24.290
other benefit is that you don't need to store the original data to see if anything has

00:11:24.290 --> 00:11:24.970
changed.

00:11:24.970 --> 00:11:27.780
All you need to store is the initial hash.

00:11:27.780 --> 00:11:33.080
Hashing logarithms are also used in countless areas of modern security,

00:11:33.080 --> 00:11:35.750
where the need for consistency is high.

00:11:35.750 --> 00:11:36.040
Now,

00:11:36.040 --> 00:11:37.780
since we're talking about hashing,

00:11:37.780 --> 00:11:43.770
want to briefly give you or you about something called the Miracle Tree LaMarca trees.

00:11:43.770 --> 00:11:44.550
Fundamentally,

00:11:44.550 --> 00:11:51.110
our data structure trees were each non leaf note is a hash off its representative child

00:11:51.110 --> 00:11:51.650
nodes.

00:11:51.650 --> 00:11:55.590
The leave note are the lowest tier of notes in the tree.

00:11:55.590 --> 00:11:57.360
That might sound difficult,

00:11:57.360 --> 00:12:00.550
but but if you guys look at the image,

00:12:00.550 --> 00:12:02.950
it will make it a little bit easier.

00:12:02.950 --> 00:12:11.770
Notice how the non leaf nodes or branches represented by hash 00 and 01 on the left side

00:12:11.770 --> 00:12:18.090
are hashes off the respective Children L one and L two further notice how hash zero is a

00:12:18.090 --> 00:12:18.820
hash off.

00:12:18.820 --> 00:12:27.330
It's concentrated Children branches hash 00 and 01 The example you see is the most common

00:12:27.330 --> 00:12:31.110
and simple form off a miracle tree known as a binary miracle tree.

00:12:31.110 --> 00:12:32.240
As you can see,

00:12:32.240 --> 00:12:35.320
there is a top hash that is the hash of the entire tree.

00:12:35.320 --> 00:12:36.550
Known as the root.

00:12:36.550 --> 00:12:37.700
Essentially,

00:12:37.700 --> 00:12:43.590
market Merkle trees are a data structure that can take and number of hashes and represented

00:12:43.590 --> 00:12:44.880
with a single hash.

00:12:44.880 --> 00:12:51.330
The structure of the tree allows for efficient mapping off arbitrarily large amounts of

00:12:51.330 --> 00:12:56.890
data and enables easy identification of where changes in that data occur.

00:12:56.890 --> 00:13:03.400
This concept enables Merkel proofs with which someone can verify that the hashing of data

00:13:03.400 --> 00:13:07.830
is consistent all the way up the tree and in the correct position,

00:13:07.830 --> 00:13:11.900
without having to actually look at the entire set of hashes.

00:13:11.900 --> 00:13:12.980
Instead,

00:13:12.980 --> 00:13:16.280
they can verify the data chunk is consistent with the root hash,

00:13:16.280 --> 00:13:21.470
but only checking a small subset of the hashes rather than entire data set.

00:13:21.470 --> 00:13:26.100
This becomes very useful when the Blockchain becomes fairly long,

00:13:26.100 --> 00:13:31.700
where you don't necessarily have to check the entire block chain for consistence you can

00:13:31.700 --> 00:13:37.010
check a small subset of the chain to ensure that nothing has been changed.

00:13:37.010 --> 00:13:41.420
Are the most important benefits of the Merkel tree structure is ability to authenticate

00:13:41.420 --> 00:13:46.950
arbitrarily large sets of data to a similar hashing mechanism that is used to verify a much

00:13:46.950 --> 00:13:47.740
smaller amount.

00:13:47.740 --> 00:13:52.230
The tree is advantages for distributing large sets of data into manageable,

00:13:52.230 --> 00:13:57.830
smaller parts where the barrier for verification of integrity it's substantially reduced

00:13:57.830 --> 00:14:00.880
despite the overall larger data size.

00:14:00.880 --> 00:14:02.020
And again,

00:14:02.020 --> 00:14:08.790
Blockchain uses this as its primary stores off authenticating hashes Just due to his very

00:14:08.790 --> 00:14:13.870
nature were the chains can get fairly large since involved Global network.

00:14:13.870 --> 00:14:14.130
No,

00:14:14.130 --> 00:14:15.370
we talk about Blockchain.

00:14:15.370 --> 00:14:19.000
Let's look at what we mean with the block in.

00:14:19.000 --> 00:14:25.670
Blockchain actually means a block consists of data and its resulting hash for go ahead and

00:14:25.670 --> 00:14:27.900
change any data in the block.

00:14:27.900 --> 00:14:30.550
The hash will change and the block will be invalid.

00:14:30.550 --> 00:14:32.440
It also includes a nonce,

00:14:32.440 --> 00:14:36.890
which is input to the hashing allow algorithm that would result in the first part of the

00:14:36.890 --> 00:14:38.640
hash to be something pre defined,

00:14:38.640 --> 00:14:45.260
like a set of zeros like the non stick I see on the screen is 431189 Now,

00:14:45.260 --> 00:14:46.510
whenever we change anything,

00:14:46.510 --> 00:14:48.780
we will need to rerun the hashing law birth.

00:14:48.780 --> 00:14:48.920
Um,

00:14:48.920 --> 00:14:51.660
until we figure out which nonce to set,

00:14:51.660 --> 00:14:55.030
this is called Mining the block.

00:14:55.030 --> 00:14:58.230
Now let's see what happens when we have a chain of blocks.

00:14:58.230 --> 00:14:58.480
Now,

00:14:58.480 --> 00:15:04.360
when we're looking at a chain the block the subsequent block contains ah block number

00:15:04.360 --> 00:15:07.350
meaning which order it has in the Blockchain.

00:15:07.350 --> 00:15:07.940
Ah,

00:15:07.940 --> 00:15:10.010
block ultimas contains a time stamp,

00:15:10.010 --> 00:15:15.190
but the most important aspect of the block is the hash that it includes.

00:15:15.190 --> 00:15:17.000
And as you guys can see,

00:15:17.000 --> 00:15:22.000
Block number four contains the hash of the previous block,

00:15:22.000 --> 00:15:28.830
and block number five contains a hash of block number four and each previous hash is used

00:15:28.830 --> 00:15:30.790
to generate their own hash.

00:15:30.790 --> 00:15:35.460
This means that if you alter any off the value in any of the blocks you will book,

00:15:35.460 --> 00:15:39.050
you will literally break all of the blocks in the chain.

00:15:39.050 --> 00:15:43.610
This is also the Merkel tree I mentioned earlier comes in to use.

00:15:43.610 --> 00:15:49.180
The only way to fix a blocking will then be the mind all of the blocks after the changed

00:15:49.180 --> 00:15:56.150
block and make the non Stashes all over and Blockchain redistribute redistribute a chain of

00:15:56.150 --> 00:15:58.220
blocks toe last number of computers.

00:15:58.220 --> 00:16:02.950
This means that the chain exists in multiple locations at one point in time,

00:16:02.950 --> 00:16:05.170
and depending on implementation or using,

00:16:05.170 --> 00:16:07.760
it could be literally millions off computers.

00:16:07.760 --> 00:16:11.200
This means that we could easily figure out if something has changed.

00:16:11.200 --> 00:16:13.850
Even if one of the chains has been remind,

00:16:13.850 --> 00:16:19.020
the resulting hashes would be different from one chain on the Blockchain works in a way

00:16:19.020 --> 00:16:22.810
where the chain that has the most work put into it minds.

00:16:22.810 --> 00:16:28.360
The altar chain would then be rejected by the distributive Blockchain and removed data

00:16:28.360 --> 00:16:33.070
stored in the Blockchain is generally available to everyone that has access to the chain.

00:16:33.070 --> 00:16:35.440
This gives some challenges,

00:16:35.440 --> 00:16:40.160
but it will also lead you to think about security in some application.

00:16:40.160 --> 00:16:42.950
It's not a problem that everyone has access to everything,

00:16:42.950 --> 00:16:46.080
but in most cases you want limited control.

00:16:46.080 --> 00:16:48.670
They're basically two ways to handle this.

00:16:48.670 --> 00:16:50.940
The first is obfuscation,

00:16:50.940 --> 00:16:51.770
obfuscation.

00:16:51.770 --> 00:16:55.610
Biscuit means to make the data relevant only to those who know its meaning.

00:16:55.610 --> 00:16:56.270
One double.

00:16:56.270 --> 00:17:00.740
This is what Bitcoins with the address of any account.

00:17:00.740 --> 00:17:03.000
It's a long string of letters and numbers.

00:17:03.000 --> 00:17:07.720
No one in the chain knows who the addresses physically connected to,

00:17:07.720 --> 00:17:08.840
and they don't need to.

00:17:08.840 --> 00:17:13.640
But everyone knows every transaction going between the different account addresses.

00:17:13.640 --> 00:17:15.340
This is how you stand on Imus.

00:17:15.340 --> 00:17:18.500
As long as you don't share a connection to your account address,

00:17:18.500 --> 00:17:22.010
there's no way anybody can figure out who you actually are.

00:17:22.010 --> 00:17:24.030
But the bomb are with drying on.

00:17:24.030 --> 00:17:24.530
Lian artifice,

00:17:24.530 --> 00:17:29.120
Cation is that you always run the risk off someone making the connection due to a bridge in

00:17:29.120 --> 00:17:29.640
the system,

00:17:29.640 --> 00:17:34.310
controlling the keys and connect the data to deal with this blotchy news is encryption.

00:17:34.310 --> 00:17:38.170
When you encrypt a message or the transaction payload,

00:17:38.170 --> 00:17:42.890
you apply a two way lager of them to the message in a way that can Onley be dick or did.

00:17:42.890 --> 00:17:45.100
If you know the password or pass phrase,

00:17:45.100 --> 00:17:50.260
this is where blocked in uses the public key infrastructure to use private and public keys

00:17:50.260 --> 00:17:50.260
.

00:17:50.260 --> 00:17:53.470
Let me is the data can be available to everyone,

00:17:53.470 --> 00:17:57.950
but only those who have the keys and the cryptic message can make sense of it.

00:17:57.950 --> 00:18:00.450
And there many different encryption,

00:18:00.450 --> 00:18:06.440
a log rhythms that come with hashing and most of them are continually evolving to make sure

00:18:06.440 --> 00:18:08.440
that nobody has breached them.

00:18:08.440 --> 00:18:12.690
Now that we have a good overview about the technical aspects of Blockchain,

00:18:12.690 --> 00:18:13.880
let's talk about,

00:18:13.880 --> 00:18:14.540
well,

00:18:14.540 --> 00:18:16.110
it's currently being used.

00:18:16.110 --> 00:18:17.800
I like I mentioned.

00:18:17.800 --> 00:18:22.760
The current most broad use of Blockchain is with digital currencies and cryptocurrencies

00:18:22.760 --> 00:18:28.390
like Bitcoin because of the fact that anonymous transactions can be trusted just as much as

00:18:28.390 --> 00:18:30.740
they can with any bank this opens up,

00:18:30.740 --> 00:18:34.450
why'd range of new ways to deal with global transactions?

00:18:34.450 --> 00:18:35.050
Additionally,

00:18:35.050 --> 00:18:40.200
a small revolution that has been going on for some time and picking up pace now is called I

00:18:40.200 --> 00:18:40.370
O.

00:18:40.370 --> 00:18:40.800
T.

00:18:40.800 --> 00:18:42.290
Or Our Internet of things.

00:18:42.290 --> 00:18:42.760
Well,

00:18:42.760 --> 00:18:47.740
this is literally where small smart devices use the Internet without human intervention.

00:18:47.740 --> 00:18:48.450
Right now,

00:18:48.450 --> 00:18:51.300
there are many more devices using the Internet than humans.

00:18:51.300 --> 00:18:52.680
With using Blockchain,

00:18:52.680 --> 00:18:56.730
these devices can suddenly do trustworthy transaction securely.

00:18:56.730 --> 00:18:57.540
For example,

00:18:57.540 --> 00:19:01.800
your washing machine could order detergent for you when it notices that is getting empty.

00:19:01.800 --> 00:19:07.780
Certifications is also is also a great use of Blockchain certification.

00:19:07.780 --> 00:19:13.660
Bodies could use certifications to products or organizations in a tamper free and fully

00:19:13.660 --> 00:19:14.830
transparent way.

00:19:14.830 --> 00:19:17.190
Secure sharing of data is another example.

00:19:17.190 --> 00:19:18.650
Given the nature of Blockchain,

00:19:18.650 --> 00:19:23.780
you could insert encrypted information into it and make sure that only those you allow can

00:19:23.780 --> 00:19:25.170
access the information.

00:19:25.170 --> 00:19:29.750
This could be used for gap with medical information or medical devices.

00:19:29.750 --> 00:19:34.480
Hospitals in the world could have instant access to your medical folder one needed,

00:19:34.480 --> 00:19:39.050
and you would be able to track everyone that has tried to access your information.

00:19:39.050 --> 00:19:45.110
And there are many more examples of how organizations can use Blockchain within their own

00:19:45.110 --> 00:19:46.110
private networks,

00:19:46.110 --> 00:19:50.880
along with utilizing it with public networks and consumers.

00:19:50.880 --> 00:19:56.100
This is just a start off a new era in technology and the way to do things,

00:19:56.100 --> 00:19:57.270
and luckily,

00:19:57.270 --> 00:20:00.660
Bitcoin has allowed Blockchain to come into the mainstream.

00:20:00.660 --> 00:20:06.410
But now is the time where organizations are adopting the use of this technology within

00:20:06.410 --> 00:20:07.240
their own networks.

00:20:07.240 --> 00:20:12.830
And pretty soon it will be in the mainstream where this technology is used for your day to

00:20:12.830 --> 00:20:13.820
day transactions.

00:20:13.820 --> 00:20:18.380
Thank you for watching this lesson on and on a broad or you about Blockchain.

00:20:18.380 --> 00:20:21.710
I hope you guys got a good overview off what Blockchain is,

00:20:21.710 --> 00:20:28.000
what the term means and how we can differentiate Blockchain from Bitcoin and the different

00:20:28.000 --> 00:20:30.020
uses that this technology has

