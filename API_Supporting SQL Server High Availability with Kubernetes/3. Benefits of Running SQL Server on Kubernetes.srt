1
00:00:00,540 --> 00:00:03,170
So we talked about some of the basic Kubernetes

2
00:00:03,170 --> 00:00:06,490
architecture, so what are some of the benefits that you get

3
00:00:06,490 --> 00:00:09,440
for running SQL Server on Kubernetes?

4
00:00:09,440 --> 00:00:09,960
Well,

5
00:00:09,960 --> 00:00:14,920
first, Kubernetes, since it is all about running containerized applications,

6
00:00:14,920 --> 00:00:19,280
you get all of the advantages of running SQL Server in a container. That is,

7
00:00:19,280 --> 00:00:22,540
you can get fast, standardized deployments.

8
00:00:22,540 --> 00:00:26,220
It's also great for dev, test, and Q&A.

9
00:00:26,220 --> 00:00:30,750
You can spin up test versions of SQL Server in just a few seconds

10
00:00:30,750 --> 00:00:36,540
using standardized methods with Kubernetes packages and deployments

11
00:00:36,540 --> 00:00:41,100
opposed to the hours it might take otherwise if you were building a

12
00:00:41,100 --> 00:00:45,730
new VM and installing SQL Server on it. And these kind of deployment

13
00:00:45,730 --> 00:00:51,090
benefits are great for testing in Q&A too. It's also great for

14
00:00:51,090 --> 00:00:52,810
allowing SQL Server,

15
00:00:52,810 --> 00:00:58,170
which is a stateful application, to fit in with the new DevOps and

16
00:00:58,170 --> 00:01:03,250
CI/CD types of deployments for applications these days. It helps the

17
00:01:03,250 --> 00:01:07,940
database to be a part of your CI/CD pipeline.

18
00:01:07,940 --> 00:01:10,610
It also is great for projects where you have quick,

19
00:01:10,610 --> 00:01:13,410
repeatable components. Say you have a project that

20
00:01:13,410 --> 00:01:16,730
needs to possibly perform an EL task,

21
00:01:16,730 --> 00:01:22,660
or maybe you need to train a machine learning database, or you need to

22
00:01:22,660 --> 00:01:27,570
have a reporting server come up and generates some quick reports for

23
00:01:27,570 --> 00:01:29,470
you, so it's great for these kind of quick,

24
00:01:29,470 --> 00:01:31,440
repeatable tasks.

25
00:01:31,440 --> 00:01:32,760
And, of course,

26
00:01:32,760 --> 00:01:36,660
and what we're talking about, Kubernetes can also provide high

27
00:01:36,660 --> 00:01:39,890
availability for SQL Server implementations,

28
00:01:39,890 --> 00:01:43,570
and it can be an alternative to Windows failover clusters.

29
00:01:43,570 --> 00:01:48,040
So what are some of the requirements for running SQL Server on Kubernetes?

30
00:01:48,040 --> 00:01:51,090
Well, you're going to have to select a Kubernetes platform.

31
00:01:51,090 --> 00:01:54,940
We saw it runs onâ€‘premises with managed providers or in the cloud.

32
00:01:54,940 --> 00:01:56,310
In this course,

33
00:01:56,310 --> 00:02:01,210
I'll be mainly using Microsoft's Azure's Azure Kubernetes

34
00:02:01,210 --> 00:02:04,340
Services as the platform for running Kubernetes on.

35
00:02:04,340 --> 00:02:08,920
You also need a SQL Server 2017 on Linux or SQL

36
00:02:08,920 --> 00:02:11,840
Server 2019 on Linux container image.

37
00:02:11,840 --> 00:02:15,230
These are the only versions of Microsoft SQL Server that

38
00:02:15,230 --> 00:02:17,640
Microsoft supports within a container.

39
00:02:17,640 --> 00:02:20,680
So if you want a supported production environment,

40
00:02:20,680 --> 00:02:24,240
you need to use one of these SQL Server on Linux images.

41
00:02:24,240 --> 00:02:28,740
You can get Ubuntu images off of the Docker Hub,

42
00:02:28,740 --> 00:02:34,960
and you can get images for Red Hat from Red Hat's catalog. And, in addition,

43
00:02:34,960 --> 00:02:38,800
you also need to access Kubernetes persistent storage where

44
00:02:38,800 --> 00:02:42,710
there's some form of external storage where your database is

45
00:02:42,710 --> 00:02:49,000
going to be located so that you can get access to the database from the different Kubernetes Pods.

