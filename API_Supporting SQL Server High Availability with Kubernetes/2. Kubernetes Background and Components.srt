1
00:00:01,640 --> 00:00:04,450
Now let's talk about some of the background that can help you

2
00:00:04,450 --> 00:00:06,650
understand what's going on in this module.

3
00:00:06,650 --> 00:00:10,700
If you have a basic understanding of Docker and Kubernetes, that's great.

4
00:00:10,700 --> 00:00:11,830
You're good to go.

5
00:00:11,830 --> 00:00:15,140
However, if you're not all that familiar with Kubernetes,

6
00:00:15,140 --> 00:00:18,390
there are a few resources that could help you get up to speed.

7
00:00:18,390 --> 00:00:19,140
First,

8
00:00:19,140 --> 00:00:23,240
Pluralsight offers a number of courses that can provide the Kubernetes

9
00:00:23,240 --> 00:00:26,800
background that you need to understand some of the basic tools and

10
00:00:26,800 --> 00:00:29,150
technologies that are used in this course.

11
00:00:29,150 --> 00:00:32,260
If you have a basic knowledge of Docker and containers,

12
00:00:32,260 --> 00:00:35,930
the best place to start is Getting Started with Kubernetes.

13
00:00:35,930 --> 00:00:39,500
This course is 2 hours and 53 minutes long, it covers all the

14
00:00:39,500 --> 00:00:41,610
Kubernetes basics that you need to know,

15
00:00:41,610 --> 00:00:45,640
including information about Kubernetes architecture, masters,

16
00:00:45,640 --> 00:00:50,550
nodes, pods, services, deployments, YAML, and kubectl.

17
00:00:50,550 --> 00:00:53,460
If you're not that familiar with Docker and containers,

18
00:00:53,460 --> 00:00:56,580
you may want to take a step back and watch Docker

19
00:00:56,580 --> 00:00:58,560
and Kubernetes: The Big Picture.

20
00:00:58,560 --> 00:01:02,110
This 1 hour and 47‑minute course starts back a bit farther

21
00:01:02,110 --> 00:01:04,850
and it's designed to give a first start into the world of

22
00:01:04,850 --> 00:01:07,300
containers, it introduces Docker,

23
00:01:07,300 --> 00:01:10,930
and it also provides a high‑level overview of Kubernetes and

24
00:01:10,930 --> 00:01:14,120
tells you about the roles Docker and Kubernetes play in a

25
00:01:14,120 --> 00:01:16,790
container and microservices world.

26
00:01:16,790 --> 00:01:21,250
Next, Pluralsight provides a couple more advanced courses on Kubernetes.

27
00:01:21,250 --> 00:01:25,060
These courses pick up where the basics leave off and they

28
00:01:25,060 --> 00:01:28,630
provide much more in‑depth information about the different

29
00:01:28,630 --> 00:01:30,740
details of running Kubernetes.

30
00:01:30,740 --> 00:01:31,340
First,

31
00:01:31,340 --> 00:01:36,750
you can dive into managing the Kubernetes API server and pods. This in‑depth

32
00:01:36,750 --> 00:01:40,510
course last 3 hours and 9 minutes, it's designed for administrators and

33
00:01:40,510 --> 00:01:43,830
developers who need to deploy Kubernetes clusters.

34
00:01:43,830 --> 00:01:46,710
It explains how the Kubernetes API server works,

35
00:01:46,710 --> 00:01:48,830
and then it shows you how to use labels,

36
00:01:48,830 --> 00:01:53,770
annotations, and namespaces to to better manage your deployments, and finally,

37
00:01:53,770 --> 00:01:57,740
it digs into the details of how pods work.

38
00:01:57,740 --> 00:02:02,710
Next, Managing Kubernetes Controllers and Deployments provides a deep

39
00:02:02,710 --> 00:02:05,760
dive into Kubernetes controllers and deployments.

40
00:02:05,760 --> 00:02:10,580
This 2 hour and 40‑minute course digs into the details of deploying Kubernetes.

41
00:02:10,580 --> 00:02:13,870
This course will teach you about the different types of controllers and

42
00:02:13,870 --> 00:02:16,440
the types of scenarios that you would use them in.

43
00:02:16,440 --> 00:02:18,350
You'll also learn how to roll out,

44
00:02:18,350 --> 00:02:22,050
maintain, and scale production workloads in Kubernetes,

45
00:02:22,050 --> 00:02:23,180
And of course,

46
00:02:23,180 --> 00:02:26,270
there is the core Kubernetes documentation that you can

47
00:02:26,270 --> 00:02:28,680
check out. This material is kind of dry,

48
00:02:28,680 --> 00:02:32,750
but this is the source of the information for Kubernetes, it's the

49
00:02:32,750 --> 00:02:36,940
official documentation so you can find it at this URL.

50
00:02:36,940 --> 00:02:40,210
Now let's talk a little bit about the deployment

51
00:02:40,210 --> 00:02:42,810
platform that I've used in this example.

52
00:02:42,810 --> 00:02:46,490
Kubernetes is pretty much platform agnostic. For the examples in

53
00:02:46,490 --> 00:02:49,750
this module, I used Azure Kubernetes services.

54
00:02:49,750 --> 00:02:52,970
I should mention that you don't have to use Azure Kubernetes

55
00:02:52,970 --> 00:02:55,640
services to build Kubernetes deployments.

56
00:02:55,640 --> 00:02:58,360
In fact, as I pointed out in the previous module,

57
00:02:58,360 --> 00:03:00,340
you don't need to use the cloud at all.

58
00:03:00,340 --> 00:03:04,200
You can deploy Kubernetes on‑premise using minikube or one of the

59
00:03:04,200 --> 00:03:09,860
managed providers. I used Azure Kubernetes services, or AKS, because

60
00:03:09,860 --> 00:03:13,680
Kubernetes is primarily built for running cloud apps. I was familiar

61
00:03:13,680 --> 00:03:17,370
with Azure and found it to be a cost effective way to get experience

62
00:03:17,370 --> 00:03:18,440
with Kubernetes.

63
00:03:18,440 --> 00:03:22,630
There is no upfront hardware costs. There is a free Azure trial with

64
00:03:22,630 --> 00:03:27,350
a limited usage credit, and AKS is a free service, you just pay for

65
00:03:27,350 --> 00:03:30,040
the resulting VM and networking costs.

66
00:03:30,040 --> 00:03:31,010
Of course,

67
00:03:31,010 --> 00:03:36,460
you can use a different cloud provider if you want to, like Google or AWS.

68
00:03:36,460 --> 00:03:39,080
The difference is in the specifics of the creation of the

69
00:03:39,080 --> 00:03:42,460
Kubernetes cluster that you'll see in a little bit. The Kubernetes

70
00:03:42,460 --> 00:03:45,480
configuration itself is pretty much the same.

71
00:03:45,480 --> 00:03:49,370
So the demo scripts that accompany this module can be used

72
00:03:49,370 --> 00:03:53,110
step‑by‑step verbatim with Azure Kubernetes Services.

73
00:03:53,110 --> 00:03:56,310
However, if you use a different Kubernetes platform,

74
00:03:56,310 --> 00:04:00,130
the portion where you create and connect to the cluster will

75
00:04:00,130 --> 00:04:02,770
have to be changed to meet the requirements of whatever

76
00:04:02,770 --> 00:04:04,720
Kubernetes provider you're using.

77
00:04:04,720 --> 00:04:09,140
In addition, there are a few other minor dependencies on AKS,

78
00:04:09,140 --> 00:04:12,050
like if you get into the storage class definitions

79
00:04:12,050 --> 00:04:17,040
that specify Azure storage types, those would also need to be changed.

80
00:04:17,040 --> 00:04:17,770
Next,

81
00:04:17,770 --> 00:04:20,630
let's discuss some additional Kubernetes components that are

82
00:04:20,630 --> 00:04:23,940
used in this SQL Server Kubernetes example.

83
00:04:23,940 --> 00:04:24,620
First,

84
00:04:24,620 --> 00:04:29,480
a deployment tells Kubernetes how to create or modify instances of

85
00:04:29,480 --> 00:04:32,650
the pods that hold a containerized application.

86
00:04:32,650 --> 00:04:36,920
Deployments automate the launching of pod instances and they ensure they're

87
00:04:36,920 --> 00:04:40,410
running as defined across all the nodes in a cluster.

88
00:04:40,410 --> 00:04:45,120
A ReplicaSet is very important in a highly available environment like the one

89
00:04:45,120 --> 00:04:51,550
we're creating. A ReplicaSet, it maintains a stable set of replica pods that

90
00:04:51,550 --> 00:04:56,280
are running at any given time, it's used to guarantee the availability of a

91
00:04:56,280 --> 00:05:02,060
specified number of identical pods, it creates and deletes pods as required to

92
00:05:02,060 --> 00:05:03,820
reach that desired number.

93
00:05:03,820 --> 00:05:05,210
In this example,

94
00:05:05,210 --> 00:05:08,040
the ReplicaSet ensures that there will be one

95
00:05:08,040 --> 00:05:10,440
instance of a SQL Server pod running.

96
00:05:10,440 --> 00:05:12,350
While I don't use one in this example,

97
00:05:12,350 --> 00:05:16,640
you'll undoubtedly run across the concept of namespaces. A Kubernetes

98
00:05:16,640 --> 00:05:20,560
namespace provides a way of scoping Kubernetes objects.

99
00:05:20,560 --> 00:05:25,450
Namespaces are intended to help multiple users share a Kubernetes cluster.

100
00:05:25,450 --> 00:05:29,560
Labels are used to identify the resources within a project.

101
00:05:29,560 --> 00:05:32,520
They're created using key value pairs and are often

102
00:05:32,520 --> 00:05:35,940
assigned to Kubernetes objects like pods.

103
00:05:35,940 --> 00:05:37,140
In this example,

104
00:05:37,140 --> 00:05:42,810
we'll be using the label of MS SQL to identify our SQL Server pod and

105
00:05:42,810 --> 00:05:46,750
Kubernetes secrets let you store and manage sensitive information like

106
00:05:46,750 --> 00:05:56,000
passwords. Again, in the example you're about to see, a Kubernetes environment variable is used to store the SQL Server SA password.

