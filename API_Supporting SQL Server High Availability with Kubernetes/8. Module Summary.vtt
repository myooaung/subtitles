WEBVTT
1
00:00:00.440 --> 00:00:03.840
Okay, we went through quite a bit in this module.

2
00:00:03.840 --> 00:00:06.860
We got an understanding of SQL Server availability groups,

3
00:00:06.860 --> 00:00:09.180
and we saw how they can replicate transactions

4
00:00:09.180 --> 00:00:11.160
between the primary and secondaries.

5
00:00:11.160 --> 00:00:14.810
We saw how to deploy a three‑node Kubernetes cluster that

6
00:00:14.810 --> 00:00:17.040
could be used for that availability group.

7
00:00:17.040 --> 00:00:22.040
We saw how to create that availability group on that Kubernetes cluster.

8
00:00:22.040 --> 00:00:26.930
We created one primary replica. We created two secondary replicas,

9
00:00:26.930 --> 00:00:29.540
one synchronous and one asynchronous.

10
00:00:29.540 --> 00:00:33.330
Then, we saw how to connect to that SQL Server availability group.

11
00:00:33.330 --> 00:00:35.730
We saw how to load some data to it, and watched the

12
00:00:35.730 --> 00:00:38.440
replication from the primary to the secondaries.

13
00:00:38.440 --> 00:00:44.940
And we also tested the failover for our primary pod in that availability group.

14
00:00:44.940 --> 00:00:46.010
Before we move on,

15
00:00:46.010 --> 00:00:48.900
I should mention that there are ways this solution could have been

16
00:00:48.900 --> 00:00:52.380
more automated, to take out some of the manual effort required to

17
00:00:52.380 --> 00:00:55.200
run our T‑SQL configuration scripts.

18
00:00:55.200 --> 00:00:58.150
I didn't show that here because of the added complexity

19
00:00:58.150 --> 00:01:00.270
that it would have entailed; however,

20
00:01:00.270 --> 00:01:04.450
you could have taken advantage of Kubernetes init containers, and SQL

21
00:01:04.450 --> 00:01:08.370
Server's SQL Command capability to automatically run some of the

22
00:01:08.370 --> 00:01:12.280
configuration scripts for these SQL Server pods.

23
00:01:12.280 --> 00:01:12.780
Finally,

24
00:01:12.780 --> 00:01:18.290
you can see how Kubernetes was providing the availability here for our SQL

25
00:01:18.290 --> 00:01:28.000
Server pods, and SQL Server availability groups was providing the scale‑out capabilities for SQL Server and the SQL Server database.

