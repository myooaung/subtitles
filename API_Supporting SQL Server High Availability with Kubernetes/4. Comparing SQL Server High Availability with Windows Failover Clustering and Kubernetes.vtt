WEBVTT
1
00:00:00.440 --> 00:00:04.320
Now let's talk a little bit about SQL Server high availability with

2
00:00:04.320 --> 00:00:08.840
Windows Failover Clustering and with Kubernetes clusters.

3
00:00:08.840 --> 00:00:09.270
First,

4
00:00:09.270 --> 00:00:12.180
let's get an idea of some of the basics of Windows Failover

5
00:00:12.180 --> 00:00:15.140
Clustering when it's used to a SQL Server.

6
00:00:15.140 --> 00:00:18.080
Windows Failover Clustering is built into both the

7
00:00:18.080 --> 00:00:20.090
main editions of Windows Server,

8
00:00:20.090 --> 00:00:24.740
which is Windows Server Standard and Windows Server Enterprise editions.

9
00:00:24.740 --> 00:00:28.530
It basically provides protection from unplanned downtime.

10
00:00:28.530 --> 00:00:30.900
So if the services on one node fail,

11
00:00:30.900 --> 00:00:34.520
another node can take over those services and run them,

12
00:00:34.520 --> 00:00:36.680
continuing the production application.

13
00:00:36.680 --> 00:00:40.870
What it does not do is it does not provide added scalability.

14
00:00:40.870 --> 00:00:44.790
So you cannot use Windows Failover Clusters to increase

15
00:00:44.790 --> 00:00:47.840
the scalability of your applications.

16
00:00:47.840 --> 00:00:53.350
It does provide automatic failover in the case of a server failure,

17
00:00:53.350 --> 00:00:56.000
and that is what it's primarily designed to protect,

18
00:00:56.000 --> 00:00:58.340
a server‑level failure.

19
00:00:58.340 --> 00:01:00.860
It does allow for multi‑node clusters.

20
00:01:00.860 --> 00:01:05.420
You can have multi‑site clusters so clusters can span geographic

21
00:01:05.420 --> 00:01:09.740
regions for disaster recovery and data protection.

22
00:01:09.740 --> 00:01:14.130
Normally, with SQL Server, a cluster requires shared storage.

23
00:01:14.130 --> 00:01:16.890
It is possible to create Windows Server Failover

24
00:01:16.890 --> 00:01:19.200
Clusters without shared storage.

25
00:01:19.200 --> 00:01:23.930
But for applications like SQL Server where a database is involved,

26
00:01:23.930 --> 00:01:26.440
shared storage is a requirement.

27
00:01:26.440 --> 00:01:28.810
Applications must be cluster‑aware.

28
00:01:28.810 --> 00:01:33.060
So when you go to install your application and it's going

29
00:01:33.060 --> 00:01:35.110
to use Windows Failover Clustering,

30
00:01:35.110 --> 00:01:37.940
that application has to be specifically designed to

31
00:01:37.940 --> 00:01:42.300
be able to take over a cluster, and SQL Server is one of those applications.

32
00:01:42.300 --> 00:01:45.440
We'll see a little bit more about that in just a second.

33
00:01:45.440 --> 00:01:49.610
The failover process is completely transparent to client applications.

34
00:01:49.610 --> 00:01:53.670
So sometimes there is a delay, as we'll talk about in a few minutes,

35
00:01:53.670 --> 00:01:55.120
in the failover process.

36
00:01:55.120 --> 00:01:56.830
But apart from that,

37
00:01:56.830 --> 00:02:00.450
clients can seamlessly reconnect and not even be

38
00:02:00.450 --> 00:02:02.910
aware that there was a failover.

39
00:02:02.910 --> 00:02:06.580
And this can be implemented at the physical level,

40
00:02:06.580 --> 00:02:10.340
but it can also be implemented for virtual machines.

41
00:02:10.340 --> 00:02:13.870
It's often implemented for virtual machine hosts to

42
00:02:13.870 --> 00:02:15.640
provide host‑level protection,

43
00:02:15.640 --> 00:02:19.430
but you can also create Windows Failover Clusters at the

44
00:02:19.430 --> 00:02:21.960
guest level for VM guests as well.

45
00:02:21.960 --> 00:02:26.280
So if you go to install SQL Server on a Windows Failover Cluster,

46
00:02:26.280 --> 00:02:29.440
you can see that there are a couple different options here.

47
00:02:29.440 --> 00:02:34.450
The first callout here points to installing a standalone version of SQL Server.

48
00:02:34.450 --> 00:02:38.150
You can do this if you're installing one instance of SQL Server.

49
00:02:38.150 --> 00:02:41.370
This is also the option that you use if you're installing

50
00:02:41.370 --> 00:02:44.480
SQL Server for a Kubernetes cluster.

51
00:02:44.480 --> 00:02:46.380
On the second callout,

52
00:02:46.380 --> 00:02:50.850
you can see this is the installation option that you use for

53
00:02:50.850 --> 00:02:54.710
installing SQL Server to a Windows Failover Cluster.

54
00:02:54.710 --> 00:02:56.390
So these are different options,

55
00:02:56.390 --> 00:03:01.040
and they perform different types of installations for SQL Server.

56
00:03:01.040 --> 00:03:05.190
Now let's talk a little bit more specifically about how Windows

57
00:03:05.190 --> 00:03:07.960
Failover Clustering and SQL Server works.

58
00:03:07.960 --> 00:03:13.340
A Windows Failover Cluster can consist of 2 nodes up to 64 nodes.

59
00:03:13.340 --> 00:03:15.340
When it's used with SQL Server,

60
00:03:15.340 --> 00:03:18.040
there are a few limitations that you need to be aware of.

61
00:03:18.040 --> 00:03:22.440
The SQL Server Standard edition only supports two‑node clusters.

62
00:03:22.440 --> 00:03:25.440
You need to use the SQL Server Enterprise edition if you

63
00:03:25.440 --> 00:03:28.240
want support for more than two nodes.

64
00:03:28.240 --> 00:03:30.950
The nodes in a Windows Failover Cluster are connected

65
00:03:30.950 --> 00:03:34.850
together using an internal network. Each node sends out a

66
00:03:34.850 --> 00:03:36.800
heartbeat to show that it's active.

67
00:03:36.800 --> 00:03:38.940
If a node does not have a heartbeat,

68
00:03:38.940 --> 00:03:43.010
then that node is considered offline, and a failover will occur.

69
00:03:43.010 --> 00:03:46.900
The latency of the heartbeat can be adjusted to allow the nodes to be

70
00:03:46.900 --> 00:03:50.550
geographically dispersed in different regions of the country that

71
00:03:50.550 --> 00:03:55.260
have higher latencies. To support SQL Server, the Windows Failover

72
00:03:55.260 --> 00:03:59.170
Cluster needs to provide shared storage where the SQL Server database

73
00:03:59.170 --> 00:04:00.420
is going to reside.

74
00:04:00.420 --> 00:04:02.890
This storage is typically on an external SAN,

75
00:04:02.890 --> 00:04:05.140
but it can also be on a file share.

76
00:04:05.140 --> 00:04:07.690
This storage must be able to be accessed by all the

77
00:04:07.690 --> 00:04:09.460
different nodes in the cluster.

78
00:04:09.460 --> 00:04:13.940
Client systems don't directly access individual nodes in the cluster.

79
00:04:13.940 --> 00:04:18.050
Instead, when the cluster is created, you make a virtual cluster host.

80
00:04:18.050 --> 00:04:24.340
That host has its own IP address, which can be static or dynamically assigned.

81
00:04:24.340 --> 00:04:28.630
Clients connect to that virtual host using your external network.

82
00:04:28.630 --> 00:04:32.150
The cluster's virtual host directs the clients to the primary node

83
00:04:32.150 --> 00:04:35.540
that's running the services that that client needs.

84
00:04:35.540 --> 00:04:37.760
In the event of a server failure,

85
00:04:37.760 --> 00:04:41.120
the cluster will failover to one of the secondary servers.

86
00:04:41.120 --> 00:04:45.000
For SQL Server, the length of time that the failover requires depends

87
00:04:45.000 --> 00:04:48.940
largely on the activity level of the server and the number of uncommitted

88
00:04:48.940 --> 00:04:53.280
transactions and the processing power of the server involved. For a lightly

89
00:04:53.280 --> 00:04:57.550
loaded system, this can take just a few seconds. For a heavily loaded,

90
00:04:57.550 --> 00:05:01.840
enterprise‑level workload, the failover can take many minutes. To account

91
00:05:01.840 --> 00:05:05.230
for this kind of delay, many businesses include retry logic in their

92
00:05:05.230 --> 00:05:11.000
applications to make sure the clients can seamlessly reconnect following a failover.

