WEBVTT
1
00:00:01.350 --> 00:00:02.990
All right guys welcome back to the course.

2
00:00:03.000 --> 00:00:09.660
So in this lecture does not talk really quickly about what are the ways and common techniques that development

3
00:00:09.660 --> 00:00:14.550
firms use to give estimations to their clients and in the very end I'm going to show you an example

4
00:00:14.550 --> 00:00:15.530
of how we do it.

5
00:00:15.540 --> 00:00:20.480
And explain to you why we made that decision and why we think it's the best way to do it.

6
00:00:20.550 --> 00:00:25.920
Are really so there's only three different ways that you can go about doing this when you deliver an

7
00:00:25.920 --> 00:00:29.230
estimate to a client you want to give them as much information as possible.

8
00:00:29.250 --> 00:00:35.790
You want that information to be clear and easy to understand but you also want it to be digestible and

9
00:00:35.790 --> 00:00:40.950
something that doesn't kind of hit them with sticker shock or hit them with what we call our shock.

10
00:00:41.100 --> 00:00:46.980
So with that being said there are different ways of doing it and different reasons for why people pick

11
00:00:47.070 --> 00:00:47.760
the way they do.

12
00:00:47.760 --> 00:00:53.100
So the normal one way and this is probably the most common way you'll see is you get an altogether estimate

13
00:00:53.130 --> 00:00:58.770
now in the previous lecture we had gone over a sample proposal from one of the Digital Studios and I

14
00:00:58.770 --> 00:01:02.580
don't know if you actually noticed that but they did a altogether estimate.

15
00:01:02.580 --> 00:01:08.880
They just said at the very end of their thing $120000 that was it no itemized sections no breakdowns

16
00:01:08.910 --> 00:01:10.010
no nothing.

17
00:01:10.140 --> 00:01:16.560
Now an altogether way of estimating it is a simpler way it's easier it saves you time and it's typically

18
00:01:16.560 --> 00:01:18.080
something that is going to deliver to the client.

19
00:01:18.080 --> 00:01:23.190
If you think the client knows exactly what you're delivering and there's no real discussion about what

20
00:01:23.190 --> 00:01:29.670
exactly you're doing and you and it might be the case that you think the client trust you already so

21
00:01:29.700 --> 00:01:32.360
they just need a top level estimate.

22
00:01:32.370 --> 00:01:34.590
They don't need granularity.

23
00:01:34.630 --> 00:01:37.290
The second second way you could do it is called section by section.

24
00:01:37.290 --> 00:01:42.750
Now the way that you would do this is you would take the estimate of whatever you are proposing to build

25
00:01:43.110 --> 00:01:47.350
and you would break it down into the major sections of it.

26
00:01:47.430 --> 00:01:49.430
So let's say that you were building.

27
00:01:49.800 --> 00:01:54.610
So let's say that you're building an app and the app has a section for our say logging in.

28
00:01:54.600 --> 00:01:56.340
It's a welcome screen.

29
00:01:56.340 --> 00:02:02.580
And then you have a section for messaging other users then you have a section for let's say saving notes.

30
00:02:02.580 --> 00:02:07.470
Now in a section by section estimation I would give an estimate for each individual section.

31
00:02:07.590 --> 00:02:09.090
You know it could be five sections.

32
00:02:09.090 --> 00:02:13.200
It could be 10 sections it could even be two sections of a small application and they would just give

33
00:02:13.200 --> 00:02:16.000
them that price per section.

34
00:02:16.020 --> 00:02:18.470
They can make a choice whether or not to add it or not to drop it.

35
00:02:18.480 --> 00:02:23.200
But it gives them a better idea of what sections are larger What sections are smaller.

36
00:02:23.310 --> 00:02:27.760
Now that's kind of the in between between the other two on this list.

37
00:02:27.810 --> 00:02:32.490
It's kind of the Goldilocks a lot of people use that because it does take a little bit of time to estimate

38
00:02:32.490 --> 00:02:38.580
out every single section but not so much time that you have to estimate every single task and that might

39
00:02:38.580 --> 00:02:44.010
also be something that you think is easier to explain it easier digest a lot of people don't prefer

40
00:02:44.010 --> 00:02:49.410
to get into technical details when it comes to explaining estimates so they like to say section by section

41
00:02:49.410 --> 00:02:50.110
or all together.

42
00:02:50.110 --> 00:02:56.490
Now the final example is called piece by piece and now what you do in this case is you break down literally

43
00:02:56.490 --> 00:02:58.350
as much as you possibly can.

44
00:02:58.350 --> 00:03:01.980
You give estimates for every single task involved.

45
00:03:02.100 --> 00:03:08.640
You'll give subtasks for features and each feature you'll show every task that theoretically would go

46
00:03:08.700 --> 00:03:09.390
into it.

47
00:03:09.390 --> 00:03:14.790
Now piece by piece is something that naturally lends itself to Agile people who run agile teams have

48
00:03:14.790 --> 00:03:21.000
to make estimates up front as to how long each feature is going to take and that's how they determine

49
00:03:21.030 --> 00:03:23.750
what features to build in each batch of work.

50
00:03:23.760 --> 00:03:25.440
Remember Well we called sprints.

51
00:03:25.440 --> 00:03:27.880
So if you're doing agile it's a pretty natural fit.

52
00:03:27.980 --> 00:03:32.820
You have a general idea of how long you think each feature and each task will take now with piece by

53
00:03:32.820 --> 00:03:33.380
piece.

54
00:03:33.510 --> 00:03:40.440
You add in things like how long it takes to upload files to a server how long it takes to even debug

55
00:03:41.150 --> 00:03:44.140
you will add in a ton of granularity.

56
00:03:44.160 --> 00:03:49.280
Really anything you can estimate now the pros and cons of piece by piece avise are pretty obvious a

57
00:03:49.290 --> 00:03:55.350
piece by piece estimate gives your potential client more visibility more transparency than they would

58
00:03:55.350 --> 00:03:56.430
get with the other two.

59
00:03:56.430 --> 00:03:59.480
They know exactly what each section takes.

60
00:03:59.520 --> 00:04:04.920
They know exactly what each feature takes and it tells them some things are larger than other parts

61
00:04:04.950 --> 00:04:07.360
and some parts are smaller than you think.

62
00:04:07.530 --> 00:04:10.340
And it really shows that you know what you're talking about.

63
00:04:10.440 --> 00:04:11.860
Now the downside is obvious.

64
00:04:12.020 --> 00:04:14.430
Now the downside can happen in different ways.

65
00:04:14.430 --> 00:04:15.980
One is it takes more time.

66
00:04:16.070 --> 00:04:19.140
Two is that it opens you up to criticism to your clients.

67
00:04:19.140 --> 00:04:21.110
Now here is a semi-technical client.

68
00:04:21.210 --> 00:04:25.660
They might actually challenge you on individual pieces if you overestimate.

69
00:04:25.740 --> 00:04:30.350
And if you guys have guessed it we actually estimate ours out piece by piece.

70
00:04:30.360 --> 00:04:34.060
Now I'm going to show you an example of what a piece by piece estimate looks like.

71
00:04:34.080 --> 00:04:35.970
And I actually show you a real one that we use.
