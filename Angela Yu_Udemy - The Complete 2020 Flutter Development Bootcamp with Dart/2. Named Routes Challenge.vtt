WEBVTT
0
1
00:00:00.700 --> 00:00:00.980
All right.
1

2
00:00:01.020 --> 00:00:07.670
So now that we've cloned the starting project, it's a good time to take a look through the screens. And
2

3
00:00:07.720 --> 00:00:13.920
in order to be able to view all the screens, we're first going to set up some routes so inside our main.
3

4
00:00:13.920 --> 00:00:14.500
dart.
4

5
00:00:14.580 --> 00:00:22.020
We're going to add a routes property to our material app and I'm going to leave this as a challenge to
5

6
00:00:22.020 --> 00:00:22.960
you.
6

7
00:00:22.980 --> 00:00:30.120
I want you to try and remember or research or Google how we can use name routes in our Flutter app to
7

8
00:00:30.120 --> 00:00:31.980
be able to do the following.
8

9
00:00:32.040 --> 00:00:38.490
Can you create a map of four named routes? One route should go to the welcome screen, one to the login
9

10
00:00:38.490 --> 00:00:45.690
screen, one to the registration screen and one to the chat screen. Then set the initial route to go to
10

11
00:00:45.690 --> 00:00:50.520
the welcome screen and run your app. Verify that you see the welcome screen
11

12
00:00:50.520 --> 00:00:56.190
and after that, set the initial route to go to the login screen and run your app. This time you should
12

13
00:00:56.190 --> 00:00:58.860
see the login screen show up instead.
13

14
00:00:58.860 --> 00:01:00.240
So once you're ready
14

15
00:01:00.240 --> 00:01:06.100
pause the video and try to complete this challenge.
15

16
00:01:06.400 --> 00:01:06.640
All right.
16

17
00:01:06.730 --> 00:01:12.560
So if you remember, there's a great cookbook recipe on how to build named routes.
17

18
00:01:12.760 --> 00:01:16.700
And you can either follow it or you might remember how to do this.
18

19
00:01:16.720 --> 00:01:19.960
So first things first in our routes property,
19

20
00:01:20.140 --> 00:01:22.400
let's check to see what it expects.
20

21
00:01:22.420 --> 00:01:31.110
So it expects a map object that has a string as a key and a route builder as an object.
21

22
00:01:31.120 --> 00:01:37.330
So we have to supply the current context and also which screen or which stateful widget should be
22

23
00:01:37.330 --> 00:01:37.860
built
23

24
00:01:37.900 --> 00:01:39.800
as a result of going to that route.
24

25
00:01:40.300 --> 00:01:44.930
So just as they've shown here, we're going to create our own map of routes.
25

26
00:01:45.220 --> 00:01:51.280
So let's head back into our routes property and I'm going to build a new map by opening up a set of curly
26

27
00:01:51.280 --> 00:01:52.420
braces.
27

28
00:01:52.420 --> 00:02:00.730
And the first item in our routes is going to have a key of welcome screen. And then we can build the route
28

29
00:02:00.820 --> 00:02:07.900
by creating an anonymous function that takes a context, the current context as an input and returns the
29

30
00:02:07.900 --> 00:02:12.150
screen that we want which is the welcome screen.
30

31
00:02:12.160 --> 00:02:14.930
So now this is our first route out of the way.
31

32
00:02:14.950 --> 00:02:21.850
Let's go ahead and create the second one which is going to be our login screen. And we're going to do
32

33
00:02:22.090 --> 00:02:23.740
exactly the same thing here.
33

34
00:02:24.040 --> 00:02:30.730
But instead of going to welcome screen, we're gonna go to login screen and let's just repeat this for
34

35
00:02:30.790 --> 00:02:32.020
the other screens.
35

36
00:02:32.020 --> 00:02:39.150
So there's registration and chats.
36

37
00:02:39.750 --> 00:02:40.060
All right.
37

38
00:02:40.080 --> 00:02:48.510
So we have all of our routes now defined as key value pairs and we should now be able to specify an
38

39
00:02:48.510 --> 00:02:49.640
initial route.
39

40
00:02:49.680 --> 00:02:56.940
So the one that we're going to pick out as the start of our app is going to be the welcome screen.
40

41
00:02:56.940 --> 00:03:01.560
Now remember if you're going to use initial routes, you can't use the home property.
41

42
00:03:01.560 --> 00:03:02.990
They do one and the same thing.
42

43
00:03:03.000 --> 00:03:06.930
So they would conflict with each other if they were both present.
43

44
00:03:06.930 --> 00:03:15.030
So now we're ready to run our app and see how it looks. All going well, you should be at to see the welcome
44

45
00:03:15.030 --> 00:03:19.530
screen that has a button to login or to register.
45

46
00:03:19.530 --> 00:03:25.070
And if you want to check out any of the other screens then just swap in the name of the route.
46

47
00:03:25.110 --> 00:03:30.810
So if we want to take a look at the login screen, we can of course just put that in here and let's
47

48
00:03:30.810 --> 00:03:36.790
hit hot restarts and we should be able to see or login screen.
48

49
00:03:37.020 --> 00:03:44.790
So that's all very well and good but here's the problem. Because we're only using strings to refer to
49

50
00:03:44.910 --> 00:03:47.370
other strings, if we have a typo
50

51
00:03:47.370 --> 00:03:52.240
here, our IDE Android Studio is not actually going to help us.
51

52
00:03:52.260 --> 00:03:53.840
So let me show you what I mean.
52

53
00:03:53.970 --> 00:04:00.060
If instead of typing login screen I didn't have enough coffee and I typed in long in screen or
53

54
00:04:00.060 --> 00:04:02.250
some other sort of typo in here,
54

55
00:04:02.250 --> 00:04:08.940
well that actually refers to absolutely nothing because there are no routes inside our map of routes
55

56
00:04:08.940 --> 00:04:11.270
that is exactly like this.
56

57
00:04:11.310 --> 00:04:15.360
There is something called login screen but the computer is not clever enough to know that's what we're
57

58
00:04:15.360 --> 00:04:16.420
referring to.
58

59
00:04:16.440 --> 00:04:23.850
So that means if we tried to run our app then it would crash and it would be something that seems really
59

60
00:04:23.850 --> 00:04:27.150
really obscure, something about a global key or something else.
60

61
00:04:27.150 --> 00:04:31.110
And it basically just can't bring up the first screen.
61

62
00:04:31.110 --> 00:04:38.280
This is why programmers are cautious and they try to avoid using strings when it matters because there's
62

63
00:04:38.280 --> 00:04:42.500
no way for the IDE for Android Studio to help us.
63

64
00:04:43.110 --> 00:04:49.320
So when we need to use strings such as here, we try to make sure there's only one place where it exists
64

65
00:04:49.380 --> 00:04:50.380
as a string.
65

66
00:04:50.550 --> 00:04:57.600
And in all other places, we use some sort of code to minimize errors because code is checkable whereas
66

67
00:04:57.600 --> 00:05:01.110
strings are not. Strings can be anything.
67

68
00:05:01.170 --> 00:05:11.870
So let's change this. Why don't we associate these names of routes with the actual screen that it's going to
68

69
00:05:11.870 --> 00:05:12.990
point to?
69

70
00:05:13.010 --> 00:05:18.470
So for example we could go into the welcome screen and right at the top here inside the welcome screen
70

71
00:05:18.760 --> 00:05:23.520
stateful widget which is the one that we want to create when we navigate over here,
71

72
00:05:23.690 --> 00:05:27.810
what if we created a new property and it's a string
72

73
00:05:27.830 --> 00:05:28.550
right?
73

74
00:05:28.640 --> 00:05:33.650
And let's just call it id right? The id of this particular screen.
74

75
00:05:33.920 --> 00:05:40.070
And then we can give it a string and we can call it welcome_screen.
75

76
00:05:40.070 --> 00:05:49.650
And now instead of providing the text here or here, we can simply refer to the welcomeScreen
76

77
00:05:49.760 --> 00:05:53.930
.id and we can do that here as well
77

78
00:05:53.970 --> 00:05:54.260
right?
78

79
00:05:54.260 --> 00:05:59.660
So if we wanted to instead of going to login screen, we want to go to the welcome screen again we could
79

80
00:05:59.660 --> 00:06:06.980
specify that id. And so what will happen is that it will create a new welcome screen, tap into that
80

81
00:06:06.980 --> 00:06:12.320
id and check to see which of these routes have the matching key.
81

82
00:06:12.350 --> 00:06:17.920
So let's run this. And you can see that our route now works.
82

83
00:06:17.920 --> 00:06:24.940
We get that initial welcome screen showing up on screen. But if you think about this, it's actually quite
83

84
00:06:25.150 --> 00:06:27.260
wasteful in terms of code.
84

85
00:06:27.340 --> 00:06:29.960
We're creating a whole new welcome screen
85

86
00:06:30.010 --> 00:06:34.630
just to be able to grab that id both here and here.
86

87
00:06:34.630 --> 00:06:38.140
And that's not very efficient with our resources.
87

88
00:06:38.140 --> 00:06:39.880
So what else can we do?
88

89
00:06:40.330 --> 00:06:45.930
Well if instead of just creating a string called id that has this value,
89

90
00:06:46.090 --> 00:06:48.700
what if we added the words static in front of it?
90

91
00:06:49.240 --> 00:06:58.120
So this is a modifier and it's used in many different languages including Java and Dart and Swift. And
91

92
00:06:58.270 --> 00:07:06.160
we can use this to modify this variable so that it's now associated with the class.
92

93
00:07:06.160 --> 00:07:13.300
So what I can do now is instead of having to create a welcome screen object, that id now exists on
93

94
00:07:13.300 --> 00:07:20.230
the class. So I can delete the parentheses which means I'm no longer creating any new objects which makes
94

95
00:07:20.230 --> 00:07:23.150
it more efficient.
95

96
00:07:23.500 --> 00:07:31.210
Now even if I tried to mess up really hard say if I had a in and welcome screen, well Android Studio
96

97
00:07:31.210 --> 00:07:33.800
is going to tell me about that and it's going to tell me
97

98
00:07:34.210 --> 00:07:36.370
here's an error, I don't know what this is.
98

99
00:07:36.370 --> 00:07:40.440
You probably haven't drunk enough coffee or you know, not had breakfast.
99

100
00:07:40.480 --> 00:07:45.970
Please review this. So I'll take a look at that and be like oh yeah that should have been welcome screen
100

101
00:07:46.290 --> 00:07:55.510
and now always well in the world. But what exactly is this static keyword that I'm using and what does
101

102
00:07:55.510 --> 00:08:01.720
it mean when I add it to a variable like this? In the next lesson we're going to do a deep dive into
102

103
00:08:01.720 --> 00:08:03.700
static methods and variables.
103

104
00:08:03.700 --> 00:08:09.460
So if you come from a programming language where you're already super familiar with static, then feel
104

105
00:08:09.460 --> 00:08:11.270
free to skip the next lesson.
105

106
00:08:11.440 --> 00:08:17.080
But if you want to know what this is all about and how it works in Dart, then we'll go into that in more
106

107
00:08:17.080 --> 00:08:18.540
detail in the next lesson.
