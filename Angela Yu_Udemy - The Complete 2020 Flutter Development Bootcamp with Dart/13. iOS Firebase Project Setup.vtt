WEBVTT
0
1
00:00:00.480 --> 00:00:03.900
Now in the last lesson, we set up firebase for Android.
1

2
00:00:03.960 --> 00:00:07.180
Now we can tackle setting up for iOS. Now
2

3
00:00:07.200 --> 00:00:11.190
you'll need to be running Mac OS with Xcode already installed to do this.
3

4
00:00:11.220 --> 00:00:14.820
So if you're on Windows, you can simply skip this lesson.
4

5
00:00:14.820 --> 00:00:18.370
You should have already created your project on the Firebase website.
5

6
00:00:18.540 --> 00:00:25.590
So now we're ready to add our iOS app and it's all going to be under the same project in Firebase because
6

7
00:00:25.590 --> 00:00:27.830
they're going to share the same data.
7

8
00:00:27.840 --> 00:00:35.700
So now we click on Add app and pick our iOS app to add Firebase to, then we can register our app by
8

9
00:00:35.700 --> 00:00:38.650
providing an iOS  bundle ID.
9

10
00:00:38.670 --> 00:00:40.610
Now how do we find this?
10

11
00:00:40.620 --> 00:00:48.510
Well if we head back into our project and we click on our iOS project and open up the folder, we right
11

12
00:00:48.510 --> 00:00:53.930
click on the runner folder and open it inside Finder.
12

13
00:00:54.150 --> 00:00:59.910
And here we're going to open up this Runner.scodeproj.
13

14
00:01:00.270 --> 00:01:05.180
So it's the one that has a blue icon rather than the one that has a white icon.
14

15
00:01:05.190 --> 00:01:06.540
So it's this one
15

16
00:01:06.630 --> 00:01:08.910
and it's this one right here.
16

17
00:01:08.970 --> 00:01:13.260
So let's double click on that to open it in Xcode.
17

18
00:01:13.260 --> 00:01:18.330
And it goes without saying this obviously means you have to be running this on a Mac.
18

19
00:01:18.330 --> 00:01:24.360
If you're creating an iOS  Flutter app that requires Firebase, you'll need access to a Mac.
19

20
00:01:24.420 --> 00:01:30.210
And more specifically, a Mac with the latest version of Xcode installed on it.
20

21
00:01:30.240 --> 00:01:36.510
Now as I said before, if you don't own a Mac you could probably get away with renting one or borrowing
21

22
00:01:36.510 --> 00:01:43.200
one from friends for a couple of days while you test out the app and run it and try it out on a actual
22

23
00:01:43.200 --> 00:01:46.430
Mac and on an actual iPhone device.
23

24
00:01:46.470 --> 00:01:52.760
But as you've seen, you'll be doing most of the development and most of the code writing in Android Studio
24

25
00:01:52.770 --> 00:01:56.580
so that can be run on Mac or Windows.
25

26
00:01:56.580 --> 00:02:05.370
So once we're here, you're going to click on this blue icon runner and it's going to open up the general
26

27
00:02:05.370 --> 00:02:13.800
settings of our app. And here lies our bundle identifier and the same thing goes for what I mentioned
27

28
00:02:13.800 --> 00:02:15.450
about the Android package.
28

29
00:02:15.600 --> 00:02:23.100
I recommend changing this bundle identifier to change the middle part or change the first part to your
29

30
00:02:23.100 --> 00:02:24.090
own name.
30

31
00:02:24.090 --> 00:02:25.850
So it could be com.
31

32
00:02:25.890 --> 00:02:33.830
angelayu or if you own a web domain then it could be something like com.google.FlashCharts.
32

33
00:02:34.230 --> 00:02:39.740
But this has to be unique in order for you to be able to publish your app onto the app store.
33

34
00:02:40.290 --> 00:02:47.580
So once you've created your unique bundle identifier, so not co.appbrewery.FlashChat, then you can
34

35
00:02:47.640 --> 00:02:55.440
copy it and we're going to now paste it into Firebase right here. And we're going to leave the other
35

36
00:02:55.440 --> 00:03:01.410
two fields blank and we're going to register iOS counterpart of our app.
36

37
00:03:01.530 --> 00:03:09.120
So now once it's registered, we can download a GoogleService-Info.plist and remembering what
37

38
00:03:09.120 --> 00:03:11.450
I said before also applies here.
38

39
00:03:11.460 --> 00:03:19.590
If you downloaded it twice, then be aware that the file name changes and we have to have just this file
39

40
00:03:19.590 --> 00:03:20.010
name.
40

41
00:03:20.130 --> 00:03:22.950
It can't look like anything else for this to work.
41

42
00:03:23.280 --> 00:03:30.180
So once you've got that file downloaded, then it's time to incorporate it into our Xcode project.
42

43
00:03:30.180 --> 00:03:37.200
Now notice how I'm actually adding it to Xcode directly and it's because Xcode will add this as a
43

44
00:03:37.200 --> 00:03:41.090
target of our app and it'll do all the behind the scenes linking.
44

45
00:03:41.280 --> 00:03:48.060
Now in the Flutter tutorials online, they often tell you to add this straight into Android Studio or
45

46
00:03:48.090 --> 00:03:53.640
Visual studio wherever you're creating your Flutter app, but it actually won't work and you will get very
46

47
00:03:53.640 --> 00:03:55.860
cryptic error messages later on.
47

48
00:03:55.860 --> 00:04:02.910
So it's really important that you take this GoogleService-Info.plist file and drop it into
48

49
00:04:02.970 --> 00:04:04.950
your runner project.
49

50
00:04:04.950 --> 00:04:12.360
So usually I like to put it inside the runner folder right here and be sure that when this screen pops
50

51
00:04:12.360 --> 00:04:16.260
up to make sure that 'Copy items if needed' is checked.
51

52
00:04:16.260 --> 00:04:19.660
And also this 'Add to targets' is checked.
52

53
00:04:19.710 --> 00:04:21.700
These are really important.
53

54
00:04:21.720 --> 00:04:28.200
So if your screen looks like this then go ahead and click finish and that should be added to your iOS 
54

55
00:04:28.230 --> 00:04:33.380
project and we can now close down Xcode.
55

56
00:04:33.450 --> 00:04:40.860
So now the next step of setting up a Firebase involves CocoaPods. And because we're using Flutter, it's
56

57
00:04:40.860 --> 00:04:43.890
actually going to do this for us automatically.
57

58
00:04:43.890 --> 00:04:47.910
So we don't actually need to perform any of these commands.
58

59
00:04:47.910 --> 00:04:54.570
Instead what we can do is we can go back to our Android Studio for our Flash chat project, change our
59

60
00:04:54.570 --> 00:05:03.270
destination to an iPhone, a physical device or the simulator, and hit run to build our app incorporating
60

61
00:05:03.270 --> 00:05:04.860
those things that we added just now.
61

62
00:05:07.850 --> 00:05:08.250
All right.
62

63
00:05:08.260 --> 00:05:09.890
So far so good.
63

64
00:05:09.910 --> 00:05:14.860
We are getting our app launched and we're not getting any major errors in the console.
64

65
00:05:14.860 --> 00:05:21.130
If you do see an error message in here in red, then be sure to review all the steps that I mentioned
65

66
00:05:21.160 --> 00:05:28.120
before carefully because it's really really easy to forget a step or miss a step and everything will come
66

67
00:05:28.120 --> 00:05:29.460
crashing and burning.
67

68
00:05:29.500 --> 00:05:31.570
So if you do have any problems there
68

69
00:05:31.570 --> 00:05:35.560
be sure to re-watch what we've done in this video so far.
