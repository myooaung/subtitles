WEBVTT
0
1
00:00:00.810 --> 00:00:01.170
All right.
1

2
00:00:01.200 --> 00:00:10.740
So in the last lesson we looked at how we could get tasks from our task provider and read it both inside
2

3
00:00:10.740 --> 00:00:13.970
our task screen as well as our task list.
3

4
00:00:13.980 --> 00:00:20.790
Now in this lesson I want to look at how we can add a new task to our task provider
4

5
00:00:20.790 --> 00:00:24.530
and that task is going to come from our add task screen.
5

6
00:00:24.960 --> 00:00:32.010
So when a user types a new task in here and they press the add button then that data is coming in right
6

7
00:00:32.010 --> 00:00:33.450
here inside this widget,
7

8
00:00:33.450 --> 00:00:41.100
this part of the tree. And that data needs to go and update our task object, so we add a new task to that
8

9
00:00:41.100 --> 00:00:48.780
list and then we want to be able to listen for changes in that provider both inside our task screen
9

10
00:00:48.930 --> 00:00:55.710
to update the number of tasks as well as inside our task list so that we can actually add the new item
10

11
00:00:56.010 --> 00:00:59.110
into the list and rebuild the list.
11

12
00:00:59.280 --> 00:01:05.310
If you think you can tackle this then pause the video now and try to give that a go and complete this
12

13
00:01:05.400 --> 00:01:12.630
functionality of making that add task screen work and seeing it inside the list as well as seeing it
13

14
00:01:12.810 --> 00:01:15.550
update the number right here.
14

15
00:01:15.690 --> 00:01:21.090
And once you're done having a go and come back and I'll show you my solution and we can talk through
15

16
00:01:21.090 --> 00:01:24.020
it all right.
16

17
00:01:24.090 --> 00:01:31.830
So in order to add a task, we of course do that inside our add task screen. And the way that it works at
17

18
00:01:31.830 --> 00:01:38.950
the moment is we have this text field where the user types in a new piece of text which is going to
18

19
00:01:39.120 --> 00:01:46.440
correspond to the new task and then we save that inside a local property called newTaskTitle.
19

20
00:01:46.440 --> 00:01:52.770
And when the user is finally done changing or typing in the text field then they press the Add button
20

21
00:01:53.220 --> 00:02:01.680
and it's in that moment where we trigger a callback that takes that value and puts it back over inside
21

22
00:02:01.740 --> 00:02:08.380
our task screen where we call a set state and add the new task to our list of tasks.
22

23
00:02:09.450 --> 00:02:15.360
But now our list of tasks doesn't exist and our task screen is not even stateful anymore
23

24
00:02:15.390 --> 00:02:17.220
so we can't use set state either.
24

25
00:02:17.700 --> 00:02:21.460
So let's see how we might do this in the provider way.
25

26
00:02:21.570 --> 00:02:30.000
Now one way that you might think it could be done is like this. If I go ahead and delete my callback
26

27
00:02:30.090 --> 00:02:38.310
inside my add task screen so that it becomes just a simple stateless widget being created as the
27

28
00:02:38.310 --> 00:02:44.760
modal bottom sheet, then I can go into my add task screen and I'm going to also delete my call to that
28

29
00:02:44.760 --> 00:02:51.650
method right here and delete all of these properties which passes over that callback.
29

30
00:02:51.660 --> 00:03:00.330
So now the way that you might think we could do this is when the onPressed is called, we create a new
30

31
00:03:00.330 --> 00:03:10.020
task and that task is going to have the name created from that local property which is called new task
31

32
00:03:10.080 --> 00:03:11.380
title.
32

33
00:03:11.580 --> 00:03:12.830
So let's put that in there.
33

34
00:03:13.290 --> 00:03:21.530
And of course it doesn't know about task because we're not importing the model/task.dart.
34

35
00:03:21.600 --> 00:03:22.980
So let's go ahead and do that.
35

36
00:03:22.980 --> 00:03:29.430
So we now have created a new task based on what the user typed in and you might think that we could
36

37
00:03:29.430 --> 00:03:40.530
simply just tap into the provider.dart and also tap into the models/task_data.dart and
37

38
00:03:40.530 --> 00:03:50.250
simply write inside the onPressed provider.of and the data type will be a TaskData data type.
38

39
00:03:50.250 --> 00:03:59.700
And now we have access to our task data object where we can simply say .tasks.add and we add
39

40
00:03:59.700 --> 00:04:10.590
that new task over here. And then finally we call the navigator.pop right here and then we pop away
40

41
00:04:10.650 --> 00:04:13.190
this current screen.
41

42
00:04:13.190 --> 00:04:21.210
Now this kind of sort of makes sense in theory especially this part, but in practice if we go ahead and
42

43
00:04:21.210 --> 00:04:25.590
run this you'll notice that it doesn't actually work.
43

44
00:04:25.590 --> 00:04:27.600
So let me go ahead and show you.
44

45
00:04:27.660 --> 00:04:29.100
I've typed in a new task,
45

46
00:04:29.100 --> 00:04:36.850
I press add, it correctly dismisses that screen but nothing gets added.
46

47
00:04:36.870 --> 00:04:39.750
So what's going on right here?
47

48
00:04:39.750 --> 00:04:45.480
Well remember how when we were going through the examples we mentioned that you can't just change the
48

49
00:04:45.480 --> 00:04:52.470
string by simply tapping into that property data and giving it a new value by setting it to some new
49

50
00:04:52.470 --> 00:04:53.310
value.
50

51
00:04:53.310 --> 00:05:00.660
You have to do it through a method because we need to call notify listeners. And that is a method that
51

52
00:05:00.660 --> 00:05:07.770
comes from the change notifier class which updates all the places which listens to the state of that particular
52

53
00:05:07.770 --> 00:05:14.150
property so that they can redraw and rebuild. Similarly over here
53

54
00:05:14.160 --> 00:05:23.280
if we simply just add this new task to our tasks list and without calling that notify listeners, nothing
54

55
00:05:23.280 --> 00:05:24.480
is going to be notified,
55

56
00:05:24.480 --> 00:05:26.240
nothing is going to happen.
56

57
00:05:26.260 --> 00:05:33.990
Instead what we have to do is we have to create a method and we'll call it addTask where we pass over
57

58
00:05:33.990 --> 00:05:43.350
the string of the newTaskTitle. And inside this method is where we're going to tap into our tasks and
58

59
00:05:43.380 --> 00:05:51.450
we call the .add and we add a new task. So we can either do it in line over here or we can create
59

60
00:05:51.450 --> 00:05:52.380
it right here.
60

61
00:05:52.410 --> 00:06:02.220
So final task equals new task which has the name of the new task title and then we pass it in to add
61

62
00:06:02.370 --> 00:06:07.060
this new task into our task list.
62

63
00:06:07.170 --> 00:06:15.360
But most importantly we call notify listeners once we're done so that we update all the listeners on
63

64
00:06:15.360 --> 00:06:19.380
the latest state of the task object that they're listening to.
64

65
00:06:19.410 --> 00:06:27.090
So now inside on our add task screen, instead of doing all of this we would instead delete this firstly and
65

66
00:06:27.150 --> 00:06:34.430
we would call provider.of task data and we tap into that method we created just now, add
66

67
00:06:34.430 --> 00:06:44.890
Task and we pass in that new task title which comes in through here via our text field. So now if I go ahead
67

68
00:06:44.920 --> 00:06:54.490
and hit save and I try to check it out again, you can see that if I add a new task, 'Go to the gym' and
68

69
00:06:54.550 --> 00:07:02.200
click add, you can see it gets added to the list because of that important notify listeners method being
69

70
00:07:02.200 --> 00:07:09.100
called so that everybody who's listening to the task right here as well as in the list, they all update
70

71
00:07:09.220 --> 00:07:18.100
accordingly. It's actually quite dangerous if we simply just leave our tasks like this because it means
71

72
00:07:18.100 --> 00:07:24.280
that sometime down the line when we forget about all of this knowledge that we've learned about provider,
72

73
00:07:24.490 --> 00:07:31.930
we might get into the situation again where we think oh I could just say .tasks.add and add
73

74
00:07:31.990 --> 00:07:33.150
a new task.
74

75
00:07:33.370 --> 00:07:40.390
So in order to save ourselves from making this mistake in the future because remember that you have
75

76
00:07:40.390 --> 00:07:42.670
to be kind to your future self
76

77
00:07:42.670 --> 00:07:43.420
right?
77

78
00:07:43.450 --> 00:07:50.360
So as a programmer but also in life you have to make life easier for the future version of yourself.
78

79
00:07:50.470 --> 00:07:56.470
So let's try and figure out how we can prevent ourselves from making this mistake in the future so we
79

80
00:07:56.470 --> 00:07:58.780
don't have to actively remember,
80

81
00:07:58.810 --> 00:07:59.340
'Oh yeah.
81

82
00:07:59.350 --> 00:08:04.750
I can't just tap into this list and just use .add or .remove.
82

83
00:08:04.750 --> 00:08:09.320
I actually have to do it via a method where I notify the listeners'.
83

84
00:08:09.430 --> 00:08:17.350
So instead of allowing this task to be accessible everywhere keeping it public, I'm going to add that
84

85
00:08:17.410 --> 00:08:22.110
underscore in front of it to make it a private property.
85

86
00:08:22.120 --> 00:08:31.660
So now it's only accessible within the two walls of curly braces here and I can tap into it inside my
86

87
00:08:31.660 --> 00:08:35.650
methods and also inside my getter right here.
87

88
00:08:35.950 --> 00:08:43.420
So both when I'm returning my task count as well as when I'm adding a task, I'm tapping into this private
88

89
00:08:43.510 --> 00:08:45.550
version of tasks.
89

90
00:08:45.550 --> 00:08:53.430
And now if I tried to tap into tasks from the outside, I can no longer do that.
90

91
00:08:53.470 --> 00:08:56.320
It's no longer accessible to anybody outside.
91

92
00:08:56.740 --> 00:09:04.540
So I am now forced to use the add task method in order to add that new task title as a string for my new
92

93
00:09:04.540 --> 00:09:05.260
task.
93

94
00:09:05.260 --> 00:09:14.370
So this minimizes any errors. But now there's a kind of a problem right? Because I use that tasks elsewhere
94

95
00:09:15.250 --> 00:09:23.200
and those places are, for example, here when I'm trying to read from that task list. If that task list
95

96
00:09:23.260 --> 00:09:24.880
is now private
96

97
00:09:24.940 --> 00:09:27.920
well how am I supposed to read it here?
97

98
00:09:28.060 --> 00:09:30.460
And that's why I'm getting all these errors.
98

99
00:09:30.460 --> 00:09:35.900
Well let's go ahead and create a getter for this task.
99

100
00:09:36.130 --> 00:09:42.730
So down here I'm going to create a new list which is going to be of type task and it's going to be public.
100

101
00:09:42.730 --> 00:09:46.660
So it's going to be called tasks without that underscore.
101

102
00:09:46.660 --> 00:09:49.780
And then here I'm going to create a getter by,
102

103
00:09:49.810 --> 00:09:56.050
remember, adding the get keyword in front of the name of the property, opening a set of curly braces and
103

104
00:09:56.050 --> 00:10:03.400
then returning the value that I'm going to compute which is simply going to be our private version of
104

105
00:10:03.400 --> 00:10:04.550
the task.
105

106
00:10:04.570 --> 00:10:11.620
Now you might think that this would work because now we don't have any problems in here and we can access
106

107
00:10:11.620 --> 00:10:15.880
the tasks. But we've now kind of gotten back to the same place
107

108
00:10:15.880 --> 00:10:16.210
right?
108

109
00:10:16.210 --> 00:10:18.670
I can now again tap into tasks,
109

110
00:10:18.700 --> 00:10:21.360
I can try to add value to it
110

111
00:10:21.370 --> 00:10:26.070
and now I'm in the same problem as I had before.
111

112
00:10:26.140 --> 00:10:30.670
So how can we make sure that we don't do this
112

113
00:10:30.850 --> 00:10:38.950
and instead we make sure that we use our add method and safety-check this? Well instead of just using
113

114
00:10:39.040 --> 00:10:43.960
a bog standard list in our computed property,
114

115
00:10:43.960 --> 00:10:52.270
our task which has the getter, I'm going to use something called a unmodifiable listview. And that comes
115

116
00:10:52.270 --> 00:10:54.670
from the Dart collections library
116

117
00:10:54.670 --> 00:11:02.090
so that's what I'm going to import. And then here I'm going to change that type to a UnmodifiableListView.
117

118
00:11:02.110 --> 00:11:06.370
Now this is kind of a misnomer if you will.
118

119
00:11:06.370 --> 00:11:12.850
I don't like the way that this class is named because it makes you think of list views, as in the widget
119

120
00:11:12.910 --> 00:11:18.520
like here where we have a ListView. But it's really not a list view widget at all.
120

121
00:11:18.520 --> 00:11:25.660
It's in fact another version of a list data type but it's kind of a view of another list.
121

122
00:11:25.750 --> 00:11:30.460
So this is why they're calling it a unmodifiable list view.
122

123
00:11:30.460 --> 00:11:36.340
It's kind of like you're looking at a version of the list but you're looking at that list through a
123

124
00:11:36.340 --> 00:11:37.350
window pane.
124

125
00:11:37.360 --> 00:11:39.330
You can't touch it, you can't change it
125

126
00:11:39.730 --> 00:11:50.020
and in fact if you tried to say, I don't know, inside add task, let's for example try to tap into our tasks Un
126

127
00:11:50.020 --> 00:12:01.450
modifiableListView and we tried to call .add on it and add a new task object with a random name.
127

128
00:12:01.450 --> 00:12:08.770
Then even though it doesn't give you an error right here which I wish it did, but it will actually give
128

129
00:12:08.770 --> 00:12:14.390
you an error when you run it because if we hold down command and we click on this add function and look
129

130
00:12:14.390 --> 00:12:16.320
at how it's implemented,
130

131
00:12:16.340 --> 00:12:20.760
you can see all it does is it just throws an error.
131

132
00:12:20.810 --> 00:12:28.210
It tells you that you can't add to an unmodifiable list because this method is not supported in an un
132

133
00:12:28.220 --> 00:12:29.560
modifiable list.
133

134
00:12:29.570 --> 00:12:30.410
That's the whole point
134

135
00:12:30.410 --> 00:12:33.380
right? We're not meant to be able to modify this list.
135

136
00:12:33.500 --> 00:12:45.740
So now I can create my unmodifiable list view and I can return a unmodifiable version of my tasks.
136

137
00:12:45.770 --> 00:12:55.070
So now theoretically, it should mean that when I try to access this tasks directly from the outside and
137

138
00:12:55.070 --> 00:13:00.550
I try to modify it, I should get an error somewhere down the line.
138

139
00:13:00.560 --> 00:13:08.360
So now I can kind of be a little bit safer in my use of this task data class and I'll now be reminded
139

140
00:13:08.360 --> 00:13:17.210
to always use the version which calls the notify listeners which is through that method addTask. Now
140

141
00:13:17.210 --> 00:13:23.870
that we're done with our code and we're done with increasing the safety of our code,
141

142
00:13:24.050 --> 00:13:29.120
we're ready to go ahead and hit save and check out our app.
142

143
00:13:29.390 --> 00:13:33.570
So let's go ahead and add a new item, 'Go to the gym'.
143

144
00:13:33.680 --> 00:13:35.340
I really need to go to the gym.
144

145
00:13:35.700 --> 00:13:38.340
So I'm going to add that to my list
145

146
00:13:38.480 --> 00:13:42.370
and now you can see it updates right here where we're listening inside
146

147
00:13:42.380 --> 00:13:50.510
our task via our consumer and also it updates right here where we're listening using our provider
147

148
00:13:50.690 --> 00:13:52.620
.of task data.
148

149
00:13:53.210 --> 00:13:59.780
So did you manage to get it to work and did you get tripped up by that notify listeners method call?
149

150
00:14:00.440 --> 00:14:05.770
Again if this is confusing it's worth going into a simpler version,
150

151
00:14:05.840 --> 00:14:12.290
so going back to that state management example app where everything is super simple, super easy to understand
151

152
00:14:12.560 --> 00:14:19.020
and messing about with the code over that just so that you can get the hang of it and write the code yourself.
152

153
00:14:19.040 --> 00:14:25.400
Now in the next lesson, we're going to look at the next part where we check off items in our task list
153

154
00:14:25.760 --> 00:14:29.550
without the need of a set state or a stateful widget.
154

155
00:14:29.810 --> 00:14:32.750
So for all of that and more, I'll see on the next lesson.
