WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.830
okay.

00:00:01.830 --> 00:00:05.630
We're pretty much reaching the end off the structured query language section off this

00:00:05.630 --> 00:00:06.110
course.

00:00:06.110 --> 00:00:07.180
And in this way,

00:00:07.180 --> 00:00:12.070
we were going to take a look at some of the conditional expressions you can use in your

00:00:12.070 --> 00:00:13.650
structured query language.

00:00:13.650 --> 00:00:17.050
So here are the three that we're going to talk about the first off,

00:00:17.050 --> 00:00:18.550
which is a case statement.

00:00:18.550 --> 00:00:23.790
This is something similar to the Felts clause in any programming language.

00:00:23.790 --> 00:00:24.980
So it goes like this.

00:00:24.980 --> 00:00:27.850
You will start the statement with the keyword case,

00:00:27.850 --> 00:00:33.720
and then you will provide your condition or an expression with the ven keyword.

00:00:33.720 --> 00:00:37.690
So when the expression is evaluated to true,

00:00:37.690 --> 00:00:42.050
then we would execute whatever recites in the den section,

00:00:42.050 --> 00:00:48.220
or else we would evaluate whatever is there in the L section and finally would end the

00:00:48.220 --> 00:00:50.350
construct with the key would end.

00:00:50.350 --> 00:00:53.850
So here is the example that the monster is the same.

00:00:53.850 --> 00:00:54.570
I said,

00:00:54.570 --> 00:00:59.150
select student name and age from students and in between those two,

00:00:59.150 --> 00:01:01.450
we're having this case construct,

00:01:01.450 --> 00:01:04.540
and we're displaying it as a new column.

00:01:04.540 --> 00:01:07.030
So we have the keyword case and then I'm thing.

00:01:07.030 --> 00:01:14.900
When the age is greater than or equal to 28 that I'm displaying the following message or

00:01:14.900 --> 00:01:22.880
else we're displaying this This text and we're ending with the end keyword.

00:01:22.880 --> 00:01:26.030
And here is how the result would look.

00:01:26.030 --> 00:01:30.920
People are the students whose age is greater than 28 are equal to 28.

00:01:30.920 --> 00:01:32.220
Then we're displaying.

00:01:32.220 --> 00:01:33.340
Feel young.

00:01:33.340 --> 00:01:34.550
Don't give up.

00:01:34.550 --> 00:01:36.860
It is their ages.

00:01:36.860 --> 00:01:41.350
Lesson 20 It were displaying your young as simple as that.

00:01:41.350 --> 00:01:44.090
Let's go to next one.

00:01:44.090 --> 00:01:49.670
We have cold dysfunction which would take multiple arguments and it would display the first

00:01:49.670 --> 00:01:50.150
argument.

00:01:50.150 --> 00:01:51.070
That is not now,

00:01:51.070 --> 00:01:52.190
for example,

00:01:52.190 --> 00:01:53.080
with to this matter,

00:01:53.080 --> 00:01:59.930
if a person and no value and one and two in the first value that is not no,

00:01:59.930 --> 00:02:01.560
in this case is one.

00:02:01.560 --> 00:02:03.930
So it would just simply to spread up.

00:02:03.930 --> 00:02:08.420
If I have the following expression,

00:02:08.420 --> 00:02:10.420
then it would result in two.

00:02:10.420 --> 00:02:13.290
If we have all the arguments has now,

00:02:13.290 --> 00:02:15.080
then it will just simply display now.

00:02:15.080 --> 00:02:18.970
So let's take a look at one example off the same.

00:02:18.970 --> 00:02:21.410
I already have it ready.

00:02:21.410 --> 00:02:22.750
So here it is.

00:02:22.750 --> 00:02:24.530
So in this case,

00:02:24.530 --> 00:02:28.280
I'm saying select collies and I'm passing two arguments.

00:02:28.280 --> 00:02:29.980
One is the fee,

00:02:29.980 --> 00:02:33.650
which is an attribute that is part of the students table and then zero.

00:02:33.650 --> 00:02:36.020
If he happens to be a null,

00:02:36.020 --> 00:02:40.810
then we would just simply display zero instruct displaying now for this purpose.

00:02:40.810 --> 00:02:45.750
I have actually made changes to the stable and made one of the fee as now.

00:02:45.750 --> 00:02:47.750
And when I run this query,

00:02:47.750 --> 00:02:49.110
as you would see,

00:02:49.110 --> 00:02:51.330
we're having one of the fee as zero,

00:02:51.330 --> 00:02:53.160
which was actually an l value.

00:02:53.160 --> 00:02:56.590
So this is one of the use case where you would use the police.

00:02:56.590 --> 00:02:59.910
And lastly we have no.

00:02:59.910 --> 00:03:03.660
If the only function would actually take two arguments.

00:03:03.660 --> 00:03:05.850
If those two arguments are same,

00:03:05.850 --> 00:03:07.680
the result would be now,

00:03:07.680 --> 00:03:09.260
if they're not same,

00:03:09.260 --> 00:03:13.350
then it's just simply going to display whatever is the first argument.

00:03:13.350 --> 00:03:17.450
And same thing is reflected over here as well.

00:03:17.450 --> 00:03:18.250
In the result,

00:03:18.250 --> 00:03:23.870
if the feed is equal into 1000 then we're saying it to be now.

00:03:23.870 --> 00:03:24.990
Otherwise,

00:03:24.990 --> 00:03:26.670
we're displaying the first argument.

00:03:26.670 --> 00:03:28.050
The actual fee.

00:03:28.050 --> 00:03:29.010
Hold it.

00:03:29.010 --> 00:03:29.550
That's it.

00:03:29.550 --> 00:03:31.090
On conditional expressions

