WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.800
already in this,

00:00:02.800 --> 00:00:03.060
really,

00:00:03.060 --> 00:00:05.470
we're going to talk about joints.

00:00:05.470 --> 00:00:12.100
There could be cases where you might want to extract information from more than one table,

00:00:12.100 --> 00:00:13.450
for example,

00:00:13.450 --> 00:00:16.060
the data that you want to retrieve,

00:00:16.060 --> 00:00:18.830
maybe reciting in multiple tables.

00:00:18.830 --> 00:00:19.780
In that case,

00:00:19.780 --> 00:00:25.390
he would use joints to join those two tables and present some data.

00:00:25.390 --> 00:00:25.870
First,

00:00:25.870 --> 00:00:27.590
let's talk about the inner join,

00:00:27.590 --> 00:00:30.660
and if you understand they not join perfectly,

00:00:30.660 --> 00:00:33.030
then it's easier for you to understand.

00:00:33.030 --> 00:00:37.150
Any other joint instructions will talk about after this.

00:00:37.150 --> 00:00:40.010
So let's not go through the definition.

00:00:40.010 --> 00:00:43.260
That's just jump right in to the example,

00:00:43.260 --> 00:00:46.280
and then I'm sure you'll be able to understand the definition.

00:00:46.280 --> 00:00:48.500
So we have the street tables,

00:00:48.500 --> 00:00:49.520
student table,

00:00:49.520 --> 00:00:52.680
course table and student course table,

00:00:52.680 --> 00:00:55.250
which will actually map these two tables.

00:00:55.250 --> 00:01:02.090
So this table essentially tells which student has registered for which course.

00:01:02.090 --> 00:01:06.900
And these two are the foreign keys mapped to the primary keys off,

00:01:06.900 --> 00:01:09.850
student table and the course table.

00:01:09.850 --> 00:01:11.160
Pretty straightforward.

00:01:11.160 --> 00:01:17.720
Now let's say that I wanted to display all the list off students who have enrolled for this

00:01:17.720 --> 00:01:19.370
course is now.

00:01:19.370 --> 00:01:25.340
If you observe the only students who are listed in here or 12 and three,

00:01:25.340 --> 00:01:29.940
which means the rest of the students are not registered Well,

00:01:29.940 --> 00:01:35.780
if we have a column here that says to the name and if we have this tour name that

00:01:35.780 --> 00:01:38.660
corresponds to the course that he registered,

00:01:38.660 --> 00:01:40.210
then our job is easy.

00:01:40.210 --> 00:01:45.600
You can just say select student name from student course stable,

00:01:45.600 --> 00:01:47.590
and that would give us list off.

00:01:47.590 --> 00:01:49.900
Students who registered for this course is,

00:01:49.900 --> 00:01:54.970
but it's not so straightforward because we don't have the student name column here.

00:01:54.970 --> 00:01:55.560
Instead,

00:01:55.560 --> 00:01:59.720
we're having the student name column in the students table,

00:01:59.720 --> 00:02:06.550
so we need to somehow joined these two tables to be ableto retrieve the information.

00:02:06.550 --> 00:02:12.850
So essentially my task is to find the common rose in these two tables.

00:02:12.850 --> 00:02:14.620
But how do you determine mine?

00:02:14.620 --> 00:02:18.250
The commonality of the Rose is based on the i D.

00:02:18.250 --> 00:02:22.950
If I find an idea that is here mapping with the I D,

00:02:22.950 --> 00:02:24.820
which is specified in the students table,

00:02:24.820 --> 00:02:28.850
then I would display the student named that corresponds to it.

00:02:28.850 --> 00:02:30.500
In other words,

00:02:30.500 --> 00:02:33.750
ignore their school statement will talk about it.

00:02:33.750 --> 00:02:36.850
This is a resultant output.

00:02:36.850 --> 00:02:42.970
I'm expecting so list off students and their free structure and do taken note that it won't

00:02:42.970 --> 00:02:47.300
be able to see the other students because they haven't handled for any courses.

00:02:47.300 --> 00:02:50.130
So let's see how we go about doing that.

00:02:50.130 --> 00:02:53.080
Let's go to PG admin r P ehskyoo,

00:02:53.080 --> 00:02:54.650
whichever is your preference.

00:02:54.650 --> 00:03:11.280
So we have those three tables populated here.

00:03:11.280 --> 00:03:13.290
Let me just get rid off other tables,

00:03:13.290 --> 00:03:16.790
which are which we have created.

00:03:16.790 --> 00:03:23.850
We don't need that some name table as well as the old students stable could just delayed it

00:03:23.850 --> 00:03:27.550
or weaken delivered with drop table SQL statement as well.

00:03:27.550 --> 00:03:31.040
So let's open our query tool.

00:03:31.040 --> 00:03:33.360
No.

00:03:33.360 --> 00:03:34.260
First,

00:03:34.260 --> 00:03:36.550
let's try to display the student name,

00:03:36.550 --> 00:03:48.450
select student name from students and with the semi colon and run it.

00:03:48.450 --> 00:03:51.200
I could just hit their five to run it,

00:03:51.200 --> 00:03:53.850
and that's what I'm going to do from no one.

00:03:53.850 --> 00:03:56.920
So this has listed all the students,

00:03:56.920 --> 00:03:58.830
but this is not what we're looking for.

00:03:58.830 --> 00:04:02.900
We don't want to display the students who who haven't enrolled for any courses.

00:04:02.900 --> 00:04:03.580
Well,

00:04:03.580 --> 00:04:05.780
before we talk about joining the tables,

00:04:05.780 --> 00:04:13.950
let me talk about so called and Elias we condemn present the students table with a letter.

00:04:13.950 --> 00:04:14.890
In our case,

00:04:14.890 --> 00:04:18.750
let's say the letter is s you can give any letter off your choice.

00:04:18.750 --> 00:04:20.600
And once you define that,

00:04:20.600 --> 00:04:28.600
you can defer to its column by saying s dots to the name or say as dot I d coma,

00:04:28.600 --> 00:04:29.350
etcetera.

00:04:29.350 --> 00:04:31.050
And if you run this,

00:04:31.050 --> 00:04:33.800
you're able to see those two columns.

00:04:33.800 --> 00:04:41.140
The significance off this is it's a also want to show that details off course stable and

00:04:41.140 --> 00:04:43.750
even it has the field i d.

00:04:43.750 --> 00:04:47.490
If there was no concept off Elia's,

00:04:47.490 --> 00:04:50.050
and if I say I become I D,

00:04:50.050 --> 00:04:51.940
there is an ambiguity here,

00:04:51.940 --> 00:04:57.050
which I really belongs to which table they both have the same field with the same name.

00:04:57.050 --> 00:05:00.760
So it's always better that you use Elias,

00:05:00.760 --> 00:05:01.370
for example,

00:05:01.370 --> 00:05:01.930
for course.

00:05:01.930 --> 00:05:02.840
I want to say,

00:05:02.840 --> 00:05:03.480
see,

00:05:03.480 --> 00:05:08.140
and then I want us display it cited by saying,

00:05:08.140 --> 00:05:09.290
si dot i d.

00:05:09.290 --> 00:05:11.380
As simple as that,

00:05:11.380 --> 00:05:13.890
by the way,

00:05:13.890 --> 00:05:19.760
we are seeing so many columns because what has just happened is cross joined.

00:05:19.760 --> 00:05:22.150
We'll talk about it in the end of this video,

00:05:22.150 --> 00:05:23.120
but the point is,

00:05:23.120 --> 00:05:25.280
this is about the Elia's.

00:05:25.280 --> 00:05:31.140
This will help us avoid ambiguity nor statements as allows,

00:05:31.140 --> 00:05:31.810
this would say,

00:05:31.810 --> 00:05:33.230
was some typing as well.

00:05:33.230 --> 00:05:36.880
You don't have to enter the entire table name in stricken.

00:05:36.880 --> 00:05:41.780
Just type the alias on the subsequent statement instructions.

00:05:41.780 --> 00:05:42.780
All right,

00:05:42.780 --> 00:05:45.900
so let me just undo the court spot.

00:05:45.900 --> 00:05:49.350
But we're going to keep using the students Elia's.

00:05:49.350 --> 00:05:52.350
So I want to display fee as well.

00:05:52.350 --> 00:05:54.750
This works pretty well.

00:05:54.750 --> 00:05:55.430
No.

00:05:55.430 --> 00:05:59.950
Let us join this table with the student course table.

00:05:59.950 --> 00:06:05.500
And so we can get the common rose within them based on a certain condition eventually.

00:06:05.500 --> 00:06:05.680
What?

00:06:05.680 --> 00:06:06.130
I mean,

00:06:06.130 --> 00:06:08.190
I'm going to say inner join.

00:06:08.190 --> 00:06:16.790
And then I would specify the table that I want to join student Underscore Course I'll call

00:06:16.790 --> 00:06:17.870
it S C.

00:06:17.870 --> 00:06:23.490
This is going to be an Elias for student course stable on.

00:06:23.490 --> 00:06:29.690
The reason why you need to specify this keyword on is because it would allow us to provide

00:06:29.690 --> 00:06:34.050
the condition on which we can say that the person both the tables are common.

00:06:34.050 --> 00:06:35.750
In my case,

00:06:35.750 --> 00:06:47.650
I want to say has dot i d is equal int to s c dot student underscore.

00:06:47.650 --> 00:06:53.800
I d underscore foreign key because that's the feel that we have in here.

00:06:53.800 --> 00:06:54.990
If you take a look at it,

00:06:54.990 --> 00:07:00.580
we got student I D and Foreign key.

00:07:00.580 --> 00:07:02.550
So let's go back,

00:07:02.550 --> 00:07:03.850
give the same here.

00:07:03.850 --> 00:07:11.160
But when you create a Colum using the PG admin you'd have to provide or put it inside this

00:07:11.160 --> 00:07:12.290
double quotations.

00:07:12.290 --> 00:07:13.950
Only then will it work.

00:07:13.950 --> 00:07:20.550
So let's run our query and see how are our put looks so pretty well and good.

00:07:20.550 --> 00:07:22.650
We have in fact,

00:07:22.650 --> 00:07:28.570
seen all the people off the student names who haven't rolled along with their fee structure

00:07:28.570 --> 00:07:28.570
.

00:07:28.570 --> 00:07:29.430
For that course.

00:07:29.430 --> 00:07:32.600
Now we're seeing the double gets here.

00:07:32.600 --> 00:07:36.810
If you want to get it off it and showed distinct student names,

00:07:36.810 --> 00:07:39.550
then you can always use the key word.

00:07:39.550 --> 00:07:48.250
Guess what distinct and that would display the desired result.

00:07:48.250 --> 00:07:50.950
It's let me undo it.

00:07:50.950 --> 00:07:54.590
So if you go back to our document,

00:07:54.590 --> 00:08:00.850
were able to see the result and this is the skill which we have just run.

00:08:00.850 --> 00:08:03.370
If I want to represent the scenario,

00:08:03.370 --> 00:08:04.580
dia grammatically,

00:08:04.580 --> 00:08:06.660
then this is how it would look.

00:08:06.660 --> 00:08:10.740
This circle represents all the rules in the student stable,

00:08:10.740 --> 00:08:15.650
and this circle represents all the rose off the student course stable.

00:08:15.650 --> 00:08:22.250
But what we're displaying here are the roads that are common to these two tables,

00:08:22.250 --> 00:08:25.950
and that's why we have highlighted this common section.

00:08:25.950 --> 00:08:32.550
So inner join helps us rose that are common in both the tables,

00:08:32.550 --> 00:08:37.490
and the commonality can be deter mined based on the condition that you provide.

00:08:37.490 --> 00:08:38.770
In this case,

00:08:38.770 --> 00:08:40.450
this is the condition.

00:08:40.450 --> 00:08:43.150
I hope that's clear.

00:08:43.150 --> 00:08:46.990
This is just another example.

00:08:46.990 --> 00:08:52.720
Let's say that you wanted to display the name column as well the name of the course.

00:08:52.720 --> 00:08:59.550
But if you notice the course name is actually reciting in another table the course table

00:08:59.550 --> 00:09:06.640
now we have to use in a joint in the same SQL statement to expect the result from this

00:09:06.640 --> 00:09:07.670
table as well,

00:09:07.670 --> 00:09:12.680
and ultimately were able to club all the results by joining all these three tables.

00:09:12.680 --> 00:09:14.960
And this is instruction to do so.

00:09:14.960 --> 00:09:21.290
I said I wanted to do in a join between the table that is mentioned previously,

00:09:21.290 --> 00:09:25.660
which is student course table as well as the course table.

00:09:25.660 --> 00:09:28.150
Based on the falling condition,

00:09:28.150 --> 00:09:35.050
I said the course table I d equals I mean,

00:09:35.050 --> 00:09:35.520
idea off.

00:09:35.520 --> 00:09:38.520
This equals the idea off this,

00:09:38.520 --> 00:09:41.350
and since there is no mention off,

00:09:41.350 --> 00:09:44.030
if I d four here,

00:09:44.030 --> 00:09:47.550
we shouldn't be able to see the course as cure.

00:09:47.550 --> 00:09:49.930
And here,

00:09:49.930 --> 00:09:50.950
in this result,

00:09:50.950 --> 00:09:54.770
he won't see it and die grammatical.

00:09:54.770 --> 00:09:56.350
This is how it's going to look like.

00:09:56.350 --> 00:10:03.770
We've joined students with the student course table and then we joined Stone Course table

00:10:03.770 --> 00:10:09.270
with the course table so we can populate the rules that are common within these three

00:10:09.270 --> 00:10:09.870
tables.

00:10:09.870 --> 00:10:12.350
Just as the idea that have violated here,

00:10:12.350 --> 00:10:16.790
let's run this instruction an RPG admin.

00:10:16.790 --> 00:10:22.650
And here's result,

00:10:22.650 --> 00:10:24.470
of course,

00:10:24.470 --> 00:10:32.050
we need to say si dot name pretty straightforward.

00:10:32.050 --> 00:10:34.050
Now,

00:10:34.050 --> 00:10:36.620
if you understood inner join,

00:10:36.620 --> 00:10:39.350
our rest of the journey is going to be very easy.

00:10:39.350 --> 00:10:45.010
The left joined simply means that not only do we want to populate the common rose,

00:10:45.010 --> 00:10:52.600
but also the rose off the table that is reciting on the left hand side off the left joint

00:10:52.600 --> 00:11:00.970
key would in this case we have the exact same instruction of just copied it and best it

00:11:00.970 --> 00:11:01.590
here.

00:11:01.590 --> 00:11:03.480
The only difference is instead off saying,

00:11:03.480 --> 00:11:04.310
inner join,

00:11:04.310 --> 00:11:06.000
I said left join.

00:11:06.000 --> 00:11:07.840
So left joined,

00:11:07.840 --> 00:11:11.890
meaning that we wanted toe also populate all the rows and students table,

00:11:11.890 --> 00:11:16.200
regardless off if they have registered with any course or not.

00:11:16.200 --> 00:11:18.450
And that's why if you take a look at this result,

00:11:18.450 --> 00:11:27.210
we've also populated are the students who haven't general for any course but that they seem

00:11:27.210 --> 00:11:33.280
to have paid fee even though they haven't enrolled for any course but destroyed.

00:11:33.280 --> 00:11:34.490
Understand the concept.

00:11:34.490 --> 00:11:36.750
This is just a example,

00:11:36.750 --> 00:11:41.090
and right join is the opposite.

00:11:41.090 --> 00:11:42.170
Off left join.

00:11:42.170 --> 00:11:48.130
Not only will it display the common rose between two tables,

00:11:48.130 --> 00:11:56.220
but also all the rose off the table that recites on the right hand side off the right joint

00:11:56.220 --> 00:11:58.350
keyword in the scarce.

00:11:58.350 --> 00:12:01.720
We have the exact same instruction,

00:12:01.720 --> 00:12:03.650
just as we have here.

00:12:03.650 --> 00:12:06.100
But the only difference is,

00:12:06.100 --> 00:12:08.140
I said,

00:12:08.140 --> 00:12:14.580
the course table needs to write join with the student course table,

00:12:14.580 --> 00:12:16.760
so diagram magical.

00:12:16.760 --> 00:12:21.470
This is how it's going to look like we're going to display all the roads in the course

00:12:21.470 --> 00:12:22.040
table.

00:12:22.040 --> 00:12:24.340
So this has in fact,

00:12:24.340 --> 00:12:27.200
displayed all the course names.

00:12:27.200 --> 00:12:29.120
If this sounds confusing,

00:12:29.120 --> 00:12:32.750
just walk through this document and try to understand.

00:12:32.750 --> 00:12:38.650
I'll go ahead and run these instructions and pretty easy to understand.

00:12:38.650 --> 00:12:48.600
The full joinus simply combination off left and right joins nothing fancy,

00:12:48.600 --> 00:12:53.190
and this is how it would look now.

00:12:53.190 --> 00:12:56.250
I provided a sample Eskil statement.

00:12:56.250 --> 00:13:01.010
This is not an SQL statement that that we were typically use in real world.

00:13:01.010 --> 00:13:02.020
This is just,

00:13:02.020 --> 00:13:02.590
for example,

00:13:02.590 --> 00:13:03.240
purpose,

00:13:03.240 --> 00:13:05.250
and that's why I give you this warning.

00:13:05.250 --> 00:13:11.610
We would never want to join two tables based on their i D,

00:13:11.610 --> 00:13:13.450
as I did here.

00:13:13.450 --> 00:13:16.270
But here's the result.

00:13:16.270 --> 00:13:20.400
So we've joined students as well as the core stable,

00:13:20.400 --> 00:13:22.760
and this literally displays all this.

00:13:22.760 --> 00:13:28.600
All the rose in both the tables coming to the cross joined.

00:13:28.600 --> 00:13:34.920
This is a default join when you don't specify the where clause or if you don't specify any

00:13:34.920 --> 00:13:44.160
other joints and basically it's going to join each row off one table with each other.

00:13:44.160 --> 00:13:44.560
Roy,

00:13:44.560 --> 00:13:45.700
in another table,

00:13:45.700 --> 00:13:47.750
I'm going to show you with an example.

00:13:47.750 --> 00:13:49.150
In fact,

00:13:49.150 --> 00:13:51.350
I've actually demonstrated this already,

00:13:51.350 --> 00:13:52.750
if you remember.

00:13:52.750 --> 00:13:54.800
I mean,

00:13:54.800 --> 00:14:05.810
just keep on doing say that we also have course table Coursey and wanted to display.

00:14:05.810 --> 00:14:06.870
See name,

00:14:06.870 --> 00:14:09.610
of course name.

00:14:09.610 --> 00:14:13.550
So I want to see that name and let us run it.

00:14:13.550 --> 00:14:19.550
If you notice the number of rows in the students table is six,

00:14:19.550 --> 00:14:23.150
and the number of rows in course table is four,

00:14:23.150 --> 00:14:25.810
and when we multiply this too,

00:14:25.810 --> 00:14:28.320
we get 24 rows in total,

00:14:28.320 --> 00:14:30.350
and that's exactly what we see here.

00:14:30.350 --> 00:14:38.690
So all the roads in student table are joined with each and every roll in the course table.

00:14:38.690 --> 00:14:42.700
We're seeing all the student names mapped with Java.

00:14:42.700 --> 00:14:43.380
Similarly,

00:14:43.380 --> 00:14:47.150
we've seen all the store names matter jsp,

00:14:47.150 --> 00:14:50.050
similarly with the rest of the courses as well.

00:14:50.050 --> 00:14:55.190
I couldn't think off any real time scenario where this could be useful,

00:14:55.190 --> 00:14:56.680
but it is existing.

00:14:56.680 --> 00:14:58.650
So just letting you know.

00:14:58.650 --> 00:15:02.760
Well,

00:15:02.760 --> 00:15:09.110
there could be cases where you might want to join a table with another instance off the

00:15:09.110 --> 00:15:10.050
same table,

00:15:10.050 --> 00:15:13.750
and that's called self join.

00:15:13.750 --> 00:15:16.950
But it's not something that is popularly used,

00:15:16.950 --> 00:15:24.190
and so I'm not putting it in this document because these are all the joints which you

00:15:24.190 --> 00:15:27.850
should be aware off as a Java programmer.

00:15:27.850 --> 00:15:29.550
Hope that makes ends.

00:15:29.550 --> 00:15:31.150
See you in my next radio

