1
00:00:00,740 --> 00:00:04,930
Hello, and welcome to my course on Performing Continuous Integration

2
00:00:04,930 --> 00:00:09,240
with AWS Codebuild. First, a little bit about me.

3
00:00:09,240 --> 00:00:13,420
My name is Joshua Edwards. I'm the Vice President of Engineering at a

4
00:00:13,420 --> 00:00:17,600
blockchain and cryptocurrency‑focused business. I have previously been a

5
00:00:17,600 --> 00:00:22,130
head of DevOps, and I have used Codebuild on a day‑to‑day basis.

6
00:00:22,130 --> 00:00:25,890
Throughout my career, I've worked in the GovCloud space, a start‑up space,

7
00:00:25,890 --> 00:00:29,440
and also for tier 1 consultancies.

8
00:00:29,440 --> 00:00:32,130
This has allowed me to deliver fully automated and

9
00:00:32,130 --> 00:00:35,630
secure environments inside of AWS.

10
00:00:35,630 --> 00:00:38,670
If you like my course or you have any questions,

11
00:00:38,670 --> 00:00:40,980
please feel free to reach out to me on Twitter.

12
00:00:40,980 --> 00:00:45,120
My username is @JoshuaGEdwards.

13
00:00:45,120 --> 00:00:48,840
Okay, let's jump right in.

14
00:00:48,840 --> 00:00:56,000
This course is going to be focused on Amazon Web Services Codebuild.

15
00:00:56,000 --> 00:00:58,250
We're going to look at planning a build,

16
00:00:58,250 --> 00:01:02,520
creating a build, managing build artifacts, the security

17
00:01:02,520 --> 00:01:06,440
aspects, and finally, monitoring builds.

18
00:01:06,440 --> 00:01:08,040
Sounds exciting, right?

19
00:01:08,040 --> 00:01:10,420
Let's get started.

20
00:01:10,420 --> 00:01:14,460
Okay, so let's delve into what AWS Codebuild is.

21
00:01:14,460 --> 00:01:17,800
So let's take a look at an overview of the service and some of the

22
00:01:17,800 --> 00:01:21,010
prerequisites required to use in this service.

23
00:01:21,010 --> 00:01:24,870
Codebuild is a managed service from AWS that allows you to run

24
00:01:24,870 --> 00:01:27,990
custom build commands and scripts from other sources.

25
00:01:27,990 --> 00:01:31,140
So let's take a look at some of the components.

26
00:01:31,140 --> 00:01:35,110
You can build all sorts of things such as code, packages,

27
00:01:35,110 --> 00:01:39,710
executables, scripts, and config files that all gets stored in

28
00:01:39,710 --> 00:01:43,770
an S3 bucket after the build process. You can even use

29
00:01:43,770 --> 00:01:48,220
Codebuild to run a packer script to create an AMI. You're going

30
00:01:48,220 --> 00:01:50,830
to see more about this later.

31
00:01:50,830 --> 00:01:54,740
You can use code sources such as S3 bucket,

32
00:01:54,740 --> 00:01:59,340
GitHub, CodeCommit, and even BitBucket.

33
00:01:59,340 --> 00:02:03,000
CodeBuild makes it so easy to build artifacts,

34
00:02:03,000 --> 00:02:06,780
and it fits perfectly into your automation lifecycle, and

35
00:02:06,780 --> 00:02:11,640
integrates nicely into CodePipeline and CodeDeploy.

36
00:02:11,640 --> 00:02:15,650
It handles all of the complexities of building your application and

37
00:02:15,650 --> 00:02:20,000
can build it exactly how you want it to be built.

38
00:02:20,000 --> 00:02:23,610
It makes builds a safe and seamless process for your users

39
00:02:23,610 --> 00:02:30,550
and your developers. AWS CodeBuild is aimed at AWS

40
00:02:30,550 --> 00:02:41,040
developers, AWS DevOps engineers, AWS architects, and also system administrators.

41
00:02:41,040 --> 00:02:46,140
But this does not mean that it's solely exclusive to the people in those jobs.

42
00:02:46,140 --> 00:02:49,770
CodeBuild is for anyone who wants to use it, so I recommend

43
00:02:49,770 --> 00:02:53,980
programmers, engineers, and anyone else who wants to know more

44
00:02:53,980 --> 00:02:56,940
just to have a go and have a look.

45
00:02:56,940 --> 00:03:02,240
It's a fantastic service to use in your development lifecycle.

46
00:03:02,240 --> 00:03:07,340
AWS CodeBuild uses Docker containers to run build scripts and commands.

47
00:03:07,340 --> 00:03:12,040
You can use custom containers that contain any OS that you want,

48
00:03:12,040 --> 00:03:15,290
or you can use the AWS Linux one.

49
00:03:15,290 --> 00:03:19,190
The AWS Linux one has runtimes that you can specify to build most

50
00:03:19,190 --> 00:03:22,140
of the common programming languages available.

51
00:03:22,140 --> 00:03:25,810
We'll see more about this later.

52
00:03:25,810 --> 00:03:26,400
Okay,

53
00:03:26,400 --> 00:03:30,270
let's take a look at some of the CodeBuild security features that are in

54
00:03:30,270 --> 00:03:35,040
place that are going to keep your information secure.

55
00:03:35,040 --> 00:03:40,440
Codebuild is in the boundaries of the AWS shared responsibility model,

56
00:03:40,440 --> 00:03:45,320
which means that you know AWS has your utmost security desires at

57
00:03:45,320 --> 00:03:50,420
heart and will allow you to manage your data securely.

58
00:03:50,420 --> 00:03:52,730
It supports encryption at rest.

59
00:03:52,730 --> 00:03:55,370
So when your build, cache, and logs are created,

60
00:03:55,370 --> 00:04:00,860
you know they are encrypted and secure. CodeBuild uses TLS

61
00:04:00,860 --> 00:04:04,750
connections for all of its endpoints, so you know that all

62
00:04:04,750 --> 00:04:08,300
information in transit is encrypted.

63
00:04:08,300 --> 00:04:13,890
All of the CodeBuild actions are monitored through AWS CloudTrail.

64
00:04:13,890 --> 00:04:18,640
This means you can see how all of the actions happened and who did them,

65
00:04:18,640 --> 00:04:25,430
as CloudTrail logs all of the API calls. For incident management, you can

66
00:04:25,430 --> 00:04:30,600
use AWS CloudWatch events to detect and react to changes in the CodeBuild

67
00:04:30,600 --> 00:04:37,940
state such as if a build happened, you can create an alert to notify you.

68
00:04:37,940 --> 00:04:43,200
AWS CodeBuild has been audited and vetted by third‑party auditors

69
00:04:43,200 --> 00:04:49,850
such a SOC, PCI, FedRAMP, HIPPA, and many more, so you know that

70
00:04:49,850 --> 00:04:53,040
you're getting a highly secure service to use.

71
00:04:53,040 --> 00:04:56,400
First off, to start using AWS CodeBuild,

72
00:04:56,400 --> 00:04:58,960
we're going to need to make sure your user has some access

73
00:04:58,960 --> 00:05:01,520
and permissions set up to allow the right access levels to

74
00:05:01,520 --> 00:05:03,860
use the services required.

75
00:05:03,860 --> 00:05:07,490
And we're also going to need to make sure that the AWS CodeBuild

76
00:05:07,490 --> 00:05:11,870
service also has the correct amount of permissions to work. In this

77
00:05:11,870 --> 00:05:15,650
demo, I'm going to show you how to allow and restrict access to

78
00:05:15,650 --> 00:05:20,600
CodeBuild in IAM. Also, I'm going to show you how to create service

79
00:05:20,600 --> 00:05:24,420
roles for some of the use cases of CodeBuild we'll be creating in the

80
00:05:24,420 --> 00:05:27,110
following modules. Okay,

81
00:05:27,110 --> 00:05:29,530
so I'm going to create a group and give it the

82
00:05:29,530 --> 00:05:38,210
admin CodeBuild policy. Here it is,

83
00:05:38,210 --> 00:05:40,490
and then we're just going to add that to the group,

84
00:05:40,490 --> 00:05:42,370
but let's just hang on a second.

85
00:05:42,370 --> 00:05:48,350
There are two other CodeBuild policies available, CodeBuildDeveloperAccess

86
00:05:48,350 --> 00:05:53,530
and also CodeBuildReadOnlyAccess. Now dependent on what level of access

87
00:05:53,530 --> 00:05:57,190
you want to give to the user, you would pick either one of these. And in

88
00:05:57,190 --> 00:06:01,630
the next step, we're going to have a look at what some of the access

89
00:06:01,630 --> 00:06:07,840
permissions the CodeBuild admin access policy has. Let's just create that

90
00:06:07,840 --> 00:06:13,530
group, and with that policy attached, and then let's have a look at what

91
00:06:13,530 --> 00:06:16,020
it can do.

92
00:06:16,020 --> 00:06:17,690
So as you can see here,

93
00:06:17,690 --> 00:06:21,610
the policy we have attached actually has a lot more actions and

94
00:06:21,610 --> 00:06:25,240
access permissions available than just for CodeBuild.

95
00:06:25,240 --> 00:06:34,280
We can see sorts of access permissions for logs, for ECR, EC2, CloudWatch, and

96
00:06:34,280 --> 00:06:40,340
all sorts, S3. So that's going to be perfect for us to allow us to perform the

97
00:06:40,340 --> 00:06:46,660
next few modules that we're going to be doing. Okay, to use CodeBuild, it's

98
00:06:46,660 --> 00:06:49,210
going to need to have a service role.

99
00:06:49,210 --> 00:06:52,420
We're going to create two service roles for both of our

100
00:06:52,420 --> 00:06:54,940
use cases in the following modules.

101
00:06:54,940 --> 00:06:59,070
We're going to create a generic CodeBuild service role,

102
00:06:59,070 --> 00:07:03,070
and then we're going to create one that has more expanded access and

103
00:07:03,070 --> 00:07:08,570
permissions to allow Packer to then create an EC2 AMI.

104
00:07:08,570 --> 00:07:13,690
So let's go ahead and create the first service role.

105
00:07:13,690 --> 00:07:16,670
We're going to select AWS service,

106
00:07:16,670 --> 00:07:21,710
and we're going to scroll down and select CodeBuild. Next, let's jump over to

107
00:07:21,710 --> 00:07:28,740
Permissions. We're then going to create our own custom policy.

108
00:07:28,740 --> 00:07:34,230
We're going to select the JSON tab, and then in here you're going to paste in

109
00:07:34,230 --> 00:07:40,820
the ServiceRoleCodeBuild JSON from the course document files.

110
00:07:40,820 --> 00:07:43,730
And as you can see in here, we're going to give CodeBuild access to

111
00:07:43,730 --> 00:07:48,340
everything that it needs to perform properly.

112
00:07:48,340 --> 00:07:50,840
So let's review that policy.

113
00:07:50,840 --> 00:07:59,570
We're going to give it a name, and then hit Create policy,

114
00:07:59,570 --> 00:08:05,430
and then let's jump back over to our role, and then let's see if

115
00:08:05,430 --> 00:08:16,240
it's in here, CodeBuild, there it is, and we'll select that, and

116
00:08:16,240 --> 00:08:19,670
Next: Tags, and then Next: Review,

117
00:08:19,670 --> 00:08:22,450
and then we'll give it a name. So, in here, we're probably

118
00:08:22,450 --> 00:08:25,720
going to want to call it a ServiceRole,

119
00:08:25,720 --> 00:08:34,540
and we'll call it CodeBuild, and then we'll hit Create role. Perfect.

120
00:08:34,540 --> 00:08:38,840
Next, let's create the second role.

121
00:08:38,840 --> 00:08:43,990
Same thing again, AWS service, select CodeBuild, Next:

122
00:08:43,990 --> 00:08:50,080
Permissions, and then create our own policy.

123
00:08:50,080 --> 00:08:56,280
And then we'll select the JSON tab again, and then we'll replace this with

124
00:08:56,280 --> 00:09:06,640
the ServiceRoleCodeBuildPacker JSON. We'll give it a name.

125
00:09:06,640 --> 00:09:09,540
Let's copy that, make it a bit easier to find it,

126
00:09:09,540 --> 00:09:13,190
create the policy,

127
00:09:13,190 --> 00:09:17,110
and then let's jump back over to the role, let's hit Refresh so it

128
00:09:17,110 --> 00:09:20,340
has more of the new updated policy in there,

129
00:09:20,340 --> 00:09:26,030
and then we'll find our policy, and then we'll then attach that to our new

130
00:09:26,030 --> 00:09:36,450
role. And then we'll give it a name. Perfect. Create that role.

131
00:09:36,450 --> 00:09:40,900
Now in here, we should be able to see our new roles.

132
00:09:40,900 --> 00:09:48,430
There we are, ServiceRoleCodeBuild and then ServiceRoleCodeBuildPacker.

133
00:09:48,430 --> 00:09:51,720
Here's a quick list of the AWS managed policies that can be

134
00:09:51,720 --> 00:09:54,780
used for the IAM CodeBuild permissions.

135
00:09:54,780 --> 00:09:56,380
We covered them in the previous demo,

136
00:09:56,380 --> 00:09:59,570
but I thought I'd delve into it a little bit more here. We

137
00:09:59,570 --> 00:10:03,010
use the AWS CodeBuild admin access, and that provides full

138
00:10:03,010 --> 00:10:04,810
access to the CodeBuild,

139
00:10:04,810 --> 00:10:10,440
including administrator access and permissions to build project.

140
00:10:10,440 --> 00:10:14,210
We then have the other two we mentioned, which were the developer access and

141
00:10:14,210 --> 00:10:19,800
the read‑only access. Developer access only allows access to specific build

142
00:10:19,800 --> 00:10:25,640
projects and administration, and the read‑only allows you to just view and

143
00:10:25,640 --> 00:10:28,640
take a look at CodeBuild and the project.

144
00:10:28,640 --> 00:10:29,830
If you had a keen eye,

145
00:10:29,830 --> 00:10:34,820
you would've also seen the S3 access too. In this section, we're going to

146
00:10:34,820 --> 00:10:38,940
cover monitoring AWS CodeDeploy actions and events.

147
00:10:38,940 --> 00:10:42,350
These are important to keep your environment secure like we talked about

148
00:10:42,350 --> 00:10:46,730
earlier, and we can show how to order events if needed.

149
00:10:46,730 --> 00:10:48,460
Okay, so in the next walk through,

150
00:10:48,460 --> 00:10:54,180
we're going to take a look at the API call logs in CloudTrail for CodeBuild.

151
00:10:54,180 --> 00:10:56,300
Let's jump right in.

152
00:10:56,300 --> 00:10:59,360
Okay, so here I am on the CloudTrail dashboard.

153
00:10:59,360 --> 00:11:04,040
Let's go over to Event history.

154
00:11:04,040 --> 00:11:08,540
In here, we can see all of the event history in the CloudTrail log.

155
00:11:08,540 --> 00:11:15,330
So if we select Event source and then we then select our CodeBuild

156
00:11:15,330 --> 00:11:22,070
service, we can then see a list of all of the different actions and

157
00:11:22,070 --> 00:11:24,890
events that happened in CodeBuild.

158
00:11:24,890 --> 00:11:27,440
Let's open one of these up to have a look.

159
00:11:27,440 --> 00:11:29,650
We can see what region it was.

160
00:11:29,650 --> 00:11:32,370
We can see the event name and source.

161
00:11:32,370 --> 00:11:35,950
We can see the time, and we can even see the IP address

162
00:11:35,950 --> 00:11:39,340
where it originated from of the user.

163
00:11:39,340 --> 00:11:44,370
It's that simple and that easy to monitor CodeBuild through

164
00:11:44,370 --> 00:11:49,330
CloudTrail logs. Okay, first module finished.

165
00:11:49,330 --> 00:11:51,370
That wasn't so bad, was it?

166
00:11:51,370 --> 00:11:55,200
And we're well on our way to becoming CodeBuild pros.

167
00:11:55,200 --> 00:11:58,340
Let's have a quick recap of what we just covered.

168
00:11:58,340 --> 00:12:01,050
We covered what CodeBuild is in an introduction,

169
00:12:01,050 --> 00:12:09,000
we had an overview of the service, we had a look at managing the permissions, and then also monitoring CodeBuild actions.

