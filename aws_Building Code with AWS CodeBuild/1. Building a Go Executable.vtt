WEBVTT
1
00:00:00.970 --> 00:00:04.540
So now we have covered setting up a local build environment,

2
00:00:04.540 --> 00:00:07.470
let's take a look at building one in the cloud.

3
00:00:07.470 --> 00:00:08.130
First,

4
00:00:08.130 --> 00:00:11.080
we need to make sure you have the right prerequisites required

5
00:00:11.080 --> 00:00:14.640
to build a Go executable with AWS CodeBuild.

6
00:00:14.640 --> 00:00:18.780
There is only one thing we need to have ready and set up for this module,

7
00:00:18.780 --> 00:00:20.350
and we have already set it up.

8
00:00:20.350 --> 00:00:21.390
Awesome.

9
00:00:21.390 --> 00:00:23.670
Let's have a look what the next steps are.

10
00:00:23.670 --> 00:00:27.000
So we already have everything set up and in place.

11
00:00:27.000 --> 00:00:31.520
Let's take a look at how to plan a build for AWS CodeBuild.

12
00:00:31.520 --> 00:00:34.100
There are five main components to remember when

13
00:00:34.100 --> 00:00:36.810
planning a build with AWS CodeBuild.

14
00:00:36.810 --> 00:00:41.530
They include the buildspec file, the Docker image,

15
00:00:41.530 --> 00:00:47.590
the compute type, the shell commands, and the environment variables.

16
00:00:47.590 --> 00:00:48.540
In this demo,

17
00:00:48.540 --> 00:00:52.900
we're going to cover the following components in a little bit more detail.

18
00:00:52.900 --> 00:00:55.160
We're going to take a look at the buildspec file,

19
00:00:55.160 --> 00:00:58.610
the Docker image, the compute type, the commands,

20
00:00:58.610 --> 00:01:01.330
and the environment variables.

21
00:01:01.330 --> 00:01:05.240
So I'm going to talk about our buildspec.yml file.

22
00:01:05.240 --> 00:01:07.900
The first thing you'll notice is the version at the top.

23
00:01:07.900 --> 00:01:09.940
0.2 is the latest.

24
00:01:09.940 --> 00:01:14.780
There's also 0.1 available, but it uses a difference syntax.

25
00:01:14.780 --> 00:01:19.740
And then I'm going to set an environment variable here called VERSION_ID.

26
00:01:19.740 --> 00:01:23.950
Now, I've used this a little bit later on in the post_build command down here,

27
00:01:23.950 --> 00:01:27.440
and that's how you reference the variable.

28
00:01:27.440 --> 00:01:29.980
And let's jump back up to the top,

29
00:01:29.980 --> 00:01:33.840
and then the next thing you'll notice is we have a phases key.

30
00:01:33.840 --> 00:01:36.740
Now, phases has other keys inside them.

31
00:01:36.740 --> 00:01:43.100
We have install, pre_build, and post_build the install phase.

32
00:01:43.100 --> 00:01:49.840
You can select a runtime version to use, so I've used golang 1.14.

33
00:01:49.840 --> 00:01:56.750
So in our ubuntu.standard 4.0, container that we used locally before,

34
00:01:56.750 --> 00:01:58.990
you can actually reference golang in there,

35
00:01:58.990 --> 00:02:05.570
and it will then say install golang for us to use during the build process.

36
00:02:05.570 --> 00:02:08.110
The next phase is the pre_build phase.

37
00:02:08.110 --> 00:02:08.980
In this phase,

38
00:02:08.980 --> 00:02:15.150
you can install any dependencies or any packages that you need for the build.

39
00:02:15.150 --> 00:02:19.220
And then the next one is the build, and in here,

40
00:02:19.220 --> 00:02:22.700
we're just going to perform the go build like we did locally,

41
00:02:22.700 --> 00:02:29.700
and then we're also going to echo out whether the CODEBUILD_BUILD is succeeding.

42
00:02:29.700 --> 00:02:32.310
Now, this environment variable here, as you'll notice,

43
00:02:32.310 --> 00:02:37.040
isn't at the top, and this is actually provided by CodeBuild for us to use.

44
00:02:37.040 --> 00:02:40.140
I'm going to show you a few more of these later on.

45
00:02:40.140 --> 00:02:42.690
So after the build is finished,

46
00:02:42.690 --> 00:02:47.510
we want to have some actions after there, and I've used that

47
00:02:47.510 --> 00:02:49.920
CODEBUILD_BUILD_SUCCEEDING environment variable.

48
00:02:49.920 --> 00:02:56.680
So if it's a success, we can then echo out Successfully built VERSION_ID.

49
00:02:56.680 --> 00:03:03.360
You could also hit up Slack's APIs for ChatOps. And then the

50
00:03:03.360 --> 00:03:06.810
final one you'll see is the artifact that were created, and

51
00:03:06.810 --> 00:03:10.300
that's the simplegoapp executable.

52
00:03:10.300 --> 00:03:15.040
So let's jump over to some AWS documentation,

53
00:03:15.040 --> 00:03:21.660
which shows all of the buildspec syntax as possible. And I've put the links

54
00:03:21.660 --> 00:03:27.630
to these at the top of the buildspec.yml file for you to have a look at.

55
00:03:27.630 --> 00:03:33.100
Everything that's possible and can be created is in here, and also, all of

56
00:03:33.100 --> 00:03:38.400
the definitions for each one too. It's really handy, and you'll probably find

57
00:03:38.400 --> 00:03:43.060
this is the first point of call for when you're planning your builds. The

58
00:03:43.060 --> 00:03:46.680
next thing I want to show you is some of the standard containers that are

59
00:03:46.680 --> 00:03:52.330
available to use with a CodeBuild build. So as you've seen before, we used

60
00:03:52.330 --> 00:03:57.380
this one, which was the standard 4.0, and there's also SumUp as a variable,

61
00:03:57.380 --> 00:04:00.670
such as Amazon Linux 2, and I think you can

62
00:04:00.670 --> 00:04:02.670
probably still use the Amazon Linux 1,

63
00:04:02.670 --> 00:04:05.320
but I'm not sure if it's documented on here anymore, and

64
00:04:05.320 --> 00:04:09.370
also Windows 1. Then the next thing I'm going to show you

65
00:04:09.370 --> 00:04:11.620
is the build specifications.

66
00:04:11.620 --> 00:04:15.740
So remember how we used golang 14?

67
00:04:15.740 --> 00:04:21.190
Here's all of the other options that you can have installed. You can have Node,

68
00:04:21.190 --> 00:04:25.820
Java, there's PHP in here, Python. There's loads of them.

69
00:04:25.820 --> 00:04:30.670
So CodeBuild really has your back and makes things easy for you, and

70
00:04:30.670 --> 00:04:34.560
then the next thing I want to show you is the different compute

71
00:04:34.560 --> 00:04:37.380
types that you can use with your build.

72
00:04:37.380 --> 00:04:40.640
So this is the compute resource that you'll select

73
00:04:40.640 --> 00:04:43.980
for your CodeBuild build to use.

74
00:04:43.980 --> 00:04:46.660
Typically, you could probably get away of using a small one,

75
00:04:46.660 --> 00:04:49.230
but if you have something that takes a long time,

76
00:04:49.230 --> 00:04:55.720
you might want to use a bigger compute resource. And then finally,

77
00:04:55.720 --> 00:04:58.980
I'm going to show you the environment variables that are available

78
00:04:58.980 --> 00:05:03.390
for us automatically by default by CodeBuild,

79
00:05:03.390 --> 00:05:06.110
and you'll also see if the, see the

80
00:05:06.110 --> 00:05:09.910
CODEBUILD_BUILD_SUCCEEDING variable here that I've used.

81
00:05:09.910 --> 00:05:12.420
So all of these are available to you to use.

82
00:05:12.420 --> 00:05:16.780
And you might find different reasons to use them in your builds.

83
00:05:16.780 --> 00:05:21.300
So let's just jump back over to the buildspec.yml file, and you'll see at

84
00:05:21.300 --> 00:05:27.000
the top, I've documented all of the links that we've just gone through for you to have a look at at a later date.

