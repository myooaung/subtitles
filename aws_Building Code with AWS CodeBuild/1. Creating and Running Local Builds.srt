1
00:00:00,580 --> 00:00:06,240
In our next module, we're going to learn how to set up and run CodeBuild locally.

2
00:00:06,240 --> 00:00:07,640
So without further ado,

3
00:00:07,640 --> 00:00:11,160
let's dive into the local CodeBuild environment and talk

4
00:00:11,160 --> 00:00:14,440
about what is needed to perform this task.

5
00:00:14,440 --> 00:00:15,070
First,

6
00:00:15,070 --> 00:00:17,430
we need to make sure you have the right prerequisites

7
00:00:17,430 --> 00:00:22,040
set up to use CodeBuild locally, so let's take a look at what they are.

8
00:00:22,040 --> 00:00:24,740
There are two things you're going to need to have ready and

9
00:00:24,740 --> 00:00:26,920
set up before using CodeBuild locally.

10
00:00:26,920 --> 00:00:31,280
You're going to need to have the CodeBuild.sh script.

11
00:00:31,280 --> 00:00:32,590
We're going to download that.

12
00:00:32,590 --> 00:00:36,220
And then we're also going to need the CodeBuild local container,

13
00:00:36,220 --> 00:00:39,620
so we'll download that container from the repository,

14
00:00:39,620 --> 00:00:42,240
and then we'll build that too.

15
00:00:42,240 --> 00:00:45,740
So let's go ahead and get these set up locally now.

16
00:00:45,740 --> 00:00:47,790
So in this next demo,

17
00:00:47,790 --> 00:00:52,460
I'm going to show you where to download the CodeBuild.sh script from,

18
00:00:52,460 --> 00:00:55,510
and I'm also going to show you where to download the

19
00:00:55,510 --> 00:00:58,730
CodeBuild container and then build it.

20
00:00:58,730 --> 00:01:02,330
This will then form the base layer for our builds locally,

21
00:01:02,330 --> 00:01:05,870
So let's go ahead and jump right in and get this set up.

22
00:01:05,870 --> 00:01:11,740
So the first thing we're going to do is we're going to clone the repo from

23
00:01:11,740 --> 00:01:20,180
AWS with all of the AWS CodeBuild Docker images in it.

24
00:01:20,180 --> 00:01:23,740
So I'm just going to jump over to our Visual Studio Code,

25
00:01:23,740 --> 00:01:27,940
and we can have a look what's in this repo here.

26
00:01:27,940 --> 00:01:31,160
So you can see that we have a local_build,

27
00:01:31,160 --> 00:01:36,510
ubuntu, and we are going to use this Ubuntu standard image,

28
00:01:36,510 --> 00:01:40,120
and we're going to use the latest 4.01.

29
00:01:40,120 --> 00:01:42,740
And this is a Docker file that we are going to build,

30
00:01:42,740 --> 00:01:49,680
and then this container will then run our CodeBuild builds locally.

31
00:01:49,680 --> 00:01:52,490
So let's jump back over to Bash.

32
00:01:52,490 --> 00:01:57,640
Let's cd into our new repo.

33
00:01:57,640 --> 00:02:03,670
We are then going to cd into the ubuntu folder,

34
00:02:03,670 --> 00:02:07,030
and then we're going to go into the standard folder,

35
00:02:07,030 --> 00:02:09,940
and then we're also going to go into the 4.0,

36
00:02:09,940 --> 00:02:12,840
which is the latest build.

37
00:02:12,840 --> 00:02:16,880
So let's go ahead and build our container now.

38
00:02:16,880 --> 00:02:23,320
We're going to build the 4.0 version.

39
00:02:23,320 --> 00:02:24,770
Now, this built really quick for me,

40
00:02:24,770 --> 00:02:26,820
but it might take a little bit longer for you as

41
00:02:26,820 --> 00:02:30,080
I've already built it previously.

42
00:02:30,080 --> 00:02:33,540
Now that's finished building, we just need one more container,

43
00:02:33,540 --> 00:02:38,480
so let's go ahead and pull that one down.

44
00:02:38,480 --> 00:02:44,510
We're going to need the codebuild‑local container.

45
00:02:44,510 --> 00:02:45,250
Cool.

46
00:02:45,250 --> 00:02:47,920
Looks like I already have that one.

47
00:02:47,920 --> 00:02:51,850
You might see the container pulling down from the repo.

48
00:02:51,850 --> 00:02:55,430
So now we have the codebuild‑local container.

49
00:02:55,430 --> 00:03:09,930
Let's go back to our working directory, so let's go back a few where we‑‑‑ Yeah,

50
00:03:09,930 --> 00:03:18,430
let's pull the CodeBuild.sh script, which is one of our requirements.

51
00:03:18,430 --> 00:03:20,820
There it is.

52
00:03:20,820 --> 00:03:26,120
And then let's make it an executable.

53
00:03:26,120 --> 00:03:33,040
We just need to run the chmod command, and that should do it for us.

54
00:03:33,040 --> 00:03:33,910
Perfect.

55
00:03:33,910 --> 00:03:35,220
So that's it.

56
00:03:35,220 --> 00:03:42,030
That's all we need to run our local CodeBuild builds on our local environment.

57
00:03:42,030 --> 00:03:45,330
So now we have the script and containers locally,

58
00:03:45,330 --> 00:03:48,730
let's take a look at how to use them.

59
00:03:48,730 --> 00:03:51,050
In this demo, we're going to cover the following.

60
00:03:51,050 --> 00:03:54,860
We're going to actually run a local CodeBuild build

61
00:03:54,860 --> 00:03:58,230
that creates a Go binary for us.

62
00:03:58,230 --> 00:04:03,040
So in our local dev working environment,

63
00:04:03,040 --> 00:04:06,980
we're going to need to create a folder called Artifacts.

64
00:04:06,980 --> 00:04:08,570
So let's create that now,

65
00:04:08,570 --> 00:04:14,270
and then the next one we're going to need is our simple Go app.

66
00:04:14,270 --> 00:04:17,900
Now, you'll be able to find this in the course modules,

67
00:04:17,900 --> 00:04:21,320
so I'm just going to pop that in here.

68
00:04:21,320 --> 00:04:27,320
And then inside this SimpleGoApp is just a really simple web server

69
00:04:27,320 --> 00:04:32,480
and then also the buildspec file for CodeBuild.

70
00:04:32,480 --> 00:04:38,840
So in the CodeBuild buildspec file, you have to select the version at the top.

71
00:04:38,840 --> 00:04:41,530
So we can just use the latest 0.2 version.

72
00:04:41,530 --> 00:04:45,030
And then in the phases, we just need one phase,

73
00:04:45,030 --> 00:04:49,540
and it's just the build phase, and it's going to run a command that says,

74
00:04:49,540 --> 00:04:54,640
build started on this date, and then it's going to build our Go binary.

75
00:04:54,640 --> 00:04:58,860
It's then going to output an artifact called simplegoapp

76
00:04:58,860 --> 00:05:02,410
into our artifacts folder over here.

77
00:05:02,410 --> 00:05:06,740
So let's go ahead and do this now.

78
00:05:06,740 --> 00:05:09,980
So let's jump over to the command line.

79
00:05:09,980 --> 00:05:12,620
As you can see from this command here,

80
00:05:12,620 --> 00:05:16,060
we're going to run the CodeBuild.sh script,

81
00:05:16,060 --> 00:05:19,050
and it's going to need some variables passed in,

82
00:05:19,050 --> 00:05:21,440
and let's walk through them now.

83
00:05:21,440 --> 00:05:24,270
So the dash ‑i, this one,

84
00:05:24,270 --> 00:05:29,230
is the container that we built before with a 4.0 version,

85
00:05:29,230 --> 00:05:31,830
and then we're going to tell it where to store the artifact of

86
00:05:31,830 --> 00:05:36,270
the build with ‑a in the artifacts folder.

87
00:05:36,270 --> 00:05:43,840
And then the final one is the ‑s, which is the source repository for the code.

88
00:05:43,840 --> 00:05:47,780
So let's go ahead and run that now.

89
00:05:47,780 --> 00:05:49,580
As you can see, it spins up the container,

90
00:05:49,580 --> 00:05:53,530
and it's starting to run our build for us.

91
00:05:53,530 --> 00:05:58,560
You can see from the output here in the Bash window that it ran through the

92
00:05:58,560 --> 00:06:02,290
different phases that we required, it ran the build phase,

93
00:06:02,290 --> 00:06:06,120
and it ran the build command, and you can see all the output from that,

94
00:06:06,120 --> 00:06:10,380
and then exported the artifact for us over here.

95
00:06:10,380 --> 00:06:14,550
So let's jump over to Visual Studio Code,

96
00:06:14,550 --> 00:06:20,140
and you can see that that build container created an artifact.zip for us.

97
00:06:20,140 --> 00:06:24,310
So let's have a look what's in there.

98
00:06:24,310 --> 00:06:26,930
We're going to unzip it,

99
00:06:26,930 --> 00:06:32,330
and then here you can see our simplegoapp executable that was created

100
00:06:32,330 --> 00:06:37,540
from our CodeBuild build local build environment.

101
00:06:37,540 --> 00:06:38,640
How easy was that?

102
00:06:38,640 --> 00:06:39,390
Whew!

103
00:06:39,390 --> 00:06:41,250
That wasn't so bad, was it?

104
00:06:41,250 --> 00:06:43,870
Let's have a quick recap at what we just covered.

105
00:06:43,870 --> 00:06:47,900
We had a look at the local CodeBuild build,

106
00:06:47,900 --> 00:06:50,240
we had to look at the prerequisites required,

107
00:06:50,240 --> 00:06:53,520
we had a look at setting up the local build environment,

108
00:06:53,520 --> 00:06:59,000
and we had to go running a local build. So let's carry on and move on to our next module.

