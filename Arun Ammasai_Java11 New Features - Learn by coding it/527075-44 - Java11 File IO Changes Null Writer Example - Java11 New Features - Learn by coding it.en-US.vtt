WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.235
Hello everyone, Welcome back.

00:00:02.235 --> 00:00:04.995
So we discussed that mood are null-recurrent rate.

00:00:04.995 --> 00:00:07.290
So let's talk about later.

00:00:07.290 --> 00:00:10.740
But before that, let's change the class name so I don't

00:00:10.740 --> 00:00:14.640
want to give it a common name, so rename.

00:00:14.640 --> 00:00:24.360
So I will not good reader, non-reader.

00:00:24.360 --> 00:00:25.965
Okay, so now what I'm gonna do,

00:00:25.965 --> 00:00:28.720
I'm gonna create one more class here.

00:00:29.030 --> 00:00:37.920
So Java 11, ooh, null brighter.

00:00:39.400 --> 00:00:43.010
Okay, let's go back to the presentation mode.

00:00:43.010 --> 00:00:46.805
As always, I'm going to write a main method here.

00:00:46.805 --> 00:00:48.140
Correct.

00:00:48.140 --> 00:00:49.745
Okay, So what we are trying to do,

00:00:49.745 --> 00:00:53.060
so we are going to write something.

00:00:53.060 --> 00:00:56.780
So initially we read some data using Redis.

00:00:56.780 --> 00:00:58.505
Now you're going to write some data.

00:00:58.505 --> 00:00:59.750
We don't follow same thing.

00:00:59.750 --> 00:01:01.910
We use string reader and then we use null,

00:01:01.910 --> 00:01:04.100
and then we use the ACAT Adelaide.

00:01:04.100 --> 00:01:06.530
Similarly, we can use the operate right role.

00:01:06.530 --> 00:01:08.435
So let's try that.

00:01:08.435 --> 00:01:11.840
Okay, so again, I'm gonna try with the numerator.

00:01:11.840 --> 00:01:18.390
So static wide and null right up.

00:01:18.970 --> 00:01:24.890
Or it is supposed to analyse shame rate right now stream, right?

00:01:24.890 --> 00:01:27.755
Let's create a few writers here.

00:01:27.755 --> 00:01:32.495
So I'm going to use a write that here. Yeah, I did.

00:01:32.495 --> 00:01:37.520
I, O w1 is equal to and as we shall new string red.

00:01:37.520 --> 00:01:39.080
And I'm going to use the string radar here.

00:01:39.080 --> 00:01:42.320
I'm going to write something which is belongs to a string here.

00:01:42.320 --> 00:01:46.084
And the second one, writer W2,

00:01:46.084 --> 00:01:47.915
which is going to be a null.

00:01:47.915 --> 00:01:49.490
This is a dumb scenario anyway,

00:01:49.490 --> 00:01:51.530
because you wouldn't get something like that in

00:01:51.530 --> 00:01:53.690
the real time scenario to just to manipulate,

00:01:53.690 --> 00:01:56.405
show you that Alpine taxonomic grading as a null.

00:01:56.405 --> 00:02:00.185
So writer W3 is equal to,

00:02:00.185 --> 00:02:02.720
let's try the character array again.

00:02:02.720 --> 00:02:06.290
So new character array right here.

00:02:06.290 --> 00:02:09.065
Okay, so now I have three raters.

00:02:09.065 --> 00:02:17.630
So what I can do is create a try catch block.

00:02:17.630 --> 00:02:22.085
Okay, then we can try with the try with resource here.

00:02:22.085 --> 00:02:23.840
Okay, let me try something different here, okay,

00:02:23.840 --> 00:02:25.700
so E dot, I guess.

00:02:25.700 --> 00:02:26.930
And now what I'm gonna do here,

00:02:26.930 --> 00:02:31.655
I'm going to use W1, W2, W3.

00:02:31.655 --> 00:02:35.240
You can use all of them because this is a try with resource.

00:02:35.240 --> 00:02:38.420
All of them are implements auto closable so we can use interdict,

00:02:38.420 --> 00:02:40.130
try with resource here.

00:02:40.130 --> 00:02:42.425
All right, so now what do we need?

00:02:42.425 --> 00:02:45.170
Okay, so now the previous example,

00:02:45.170 --> 00:02:47.135
we send a list of reader.

00:02:47.135 --> 00:02:51.950
And now I need to send a list of writer which you write some data into it.

00:02:51.950 --> 00:02:53.720
Okay, So what I'm gonna do,

00:02:53.720 --> 00:02:56.135
I'm going to create a pretty new method,

00:02:56.135 --> 00:03:01.625
static, void, right? Data.

00:03:01.625 --> 00:03:04.085
Rate data.

00:03:04.085 --> 00:03:12.180
So which will accept a list of writer.

00:03:12.850 --> 00:03:15.875
Okay, let's make it as I lay here.

00:03:15.875 --> 00:03:20.240
Okay, so what I'm going to do, I'm not going to do anything drastic.

00:03:20.240 --> 00:03:22.755
Change this to simple thing.

00:03:22.755 --> 00:03:25.060
Just write some random thing.

00:03:25.060 --> 00:03:31.300
Okay, maybe we can write that next integer from the current thread or are some random,

00:03:31.300 --> 00:03:33.925
okay, let me try something like this for,

00:03:33.925 --> 00:03:37.400
and it's going to be right, right,

00:03:37.500 --> 00:03:43.480
right, right, right there,

00:03:43.480 --> 00:03:45.950
and it is coming from the LA.

00:03:45.950 --> 00:03:49.240
So h, and every time I'm going to write something here,

00:03:49.240 --> 00:03:52.870
so dot, dot, dot, right, math.pi.

00:03:52.870 --> 00:03:54.850
So what are we going to write here?

00:03:54.850 --> 00:03:56.695
So I'm going to use them.

00:03:56.695 --> 00:04:00.200
Integer dot two string.

00:04:00.990 --> 00:04:02.395
Okay?

00:04:02.395 --> 00:04:04.030
Again, it'll end up sum to integer, right?

00:04:04.030 --> 00:04:07.610
So I can use the thread-local.

00:04:07.610 --> 00:04:11.330
So thread local random generator,

00:04:11.330 --> 00:04:13.700
which will have that current instance.

00:04:13.700 --> 00:04:17.090
And I'm going to Monday the next integer.

00:04:17.090 --> 00:04:19.385
Okay? So I'm going to solve,

00:04:19.385 --> 00:04:20.870
we have to draw from exception.

00:04:20.870 --> 00:04:24.380
Yeah, right, So throws exception here.

00:04:24.380 --> 00:04:26.045
Got it.

00:04:26.045 --> 00:04:30.290
So now so once writer is done,

00:04:30.290 --> 00:04:32.900
then what we need to do, right?

00:04:32.900 --> 00:04:37.145
Close, I think which is not acquired anyway.

00:04:37.145 --> 00:04:41.240
Because that is the reason we are using try with resource.

00:04:41.240 --> 00:04:46.100
Once the process is then it automatically loads the moment it is finished, the try-block.

00:04:46.100 --> 00:04:51.125
All right, so here what I'm gonna do is so now we have them at the ready.

00:04:51.125 --> 00:04:54.095
All we need to do just call the METAR.

00:04:54.095 --> 00:05:01.860
So right, data, which accepts a list.

00:05:03.010 --> 00:05:11.900
And it is dot S dot list.

00:05:11.900 --> 00:05:15.830
And I'm going to pass it the command W2, W3.

00:05:15.830 --> 00:05:17.075
Okay?

00:05:17.075 --> 00:05:19.040
So the data has been written now,

00:05:19.040 --> 00:05:24.650
but I want to split the data rate then only I can see them.

00:05:24.650 --> 00:05:25.610
Okay?

00:05:25.610 --> 00:05:28.440
So the data is available Indy.

00:05:30.520 --> 00:05:35.555
The list. Okay, So if I pass directly as a list,

00:05:35.555 --> 00:05:37.160
I don't think I'll be able to use it.

00:05:37.160 --> 00:05:41.360
So what I'm gonna do is I'm going to do something different, right?

00:05:41.360 --> 00:05:47.075
List of writer and lie is a quote,

00:05:47.075 --> 00:05:51.770
inch. Get pasted here.

00:05:51.770 --> 00:05:54.560
And I'm going to use the ELA here because I want

00:05:54.560 --> 00:05:57.185
to use the align them in a bit of laughter written the data.

00:05:57.185 --> 00:05:58.535
I mean, writing the data.

00:05:58.535 --> 00:05:59.990
I want to print them right?

00:05:59.990 --> 00:06:05.135
So what I'm gonna do, I'm gonna use an ally dot forEach method.

00:06:05.135 --> 00:06:07.610
Foreach method which accepts a consumer, right?

00:06:07.610 --> 00:06:10.595
So I'm gonna write the lambda expression here.

00:06:10.595 --> 00:06:13.940
Right down here.

00:06:13.940 --> 00:06:20.870
I'm gonna, I'm gonna simply print out something like system dot out,

00:06:20.870 --> 00:06:29.960
dot, print f here, print f.

00:06:29.960 --> 00:06:33.140
So here I'm going to do something like this.

00:06:33.140 --> 00:06:37.560
So like a type writer.

00:06:40.090 --> 00:06:43.830
And that does shrink.

00:06:48.250 --> 00:06:51.110
Yes, and I need to put the interval.

00:06:51.110 --> 00:06:54.500
So the next thing comes with the next line.

00:06:54.500 --> 00:06:57.815
Okay, So now I need to pass the data for it.

00:06:57.815 --> 00:07:03.125
So the writer to not just get the simple name,

00:07:03.125 --> 00:07:06.125
getClass dot get simple name.

00:07:06.125 --> 00:07:09.425
It's simple name.

00:07:09.425 --> 00:07:12.620
And then the data, the what is an extra integer data.

00:07:12.620 --> 00:07:18.450
So come on, writer, dot tostring.

00:07:19.300 --> 00:07:22.535
So that Oshima there, which contains this one,

00:07:22.535 --> 00:07:25.880
what is the next int current at local value?

00:07:25.880 --> 00:07:27.095
Right?

00:07:27.095 --> 00:07:29.600
So now what we need to do,

00:07:29.600 --> 00:07:31.830
just call them at that.

00:07:32.200 --> 00:07:35.195
So null stream, right?

00:07:35.195 --> 00:07:38.070
Just run it.

00:07:38.410 --> 00:07:43.445
Yes, As we export to null pointer exception because we are using direct null,

00:07:43.445 --> 00:07:46.040
because you cannot pass as a null data here

00:07:46.040 --> 00:07:49.550
because we are supposed to send null asset concept of data here.

00:07:49.550 --> 00:07:50.945
So I'm just to show you,

00:07:50.945 --> 00:07:53.495
I just created something like that.

00:07:53.495 --> 00:07:56.510
So when the real time,

00:07:56.510 --> 00:07:58.895
if you get this kind of scenario is what you need to.

00:07:58.895 --> 00:08:01.550
So similar way, right,

00:08:01.550 --> 00:08:03.470
or dot. And they'll write that.

00:08:03.470 --> 00:08:06.440
So now what happened? But I'm trying to write the data,

00:08:06.440 --> 00:08:09.035
it will come in a better way.

00:08:09.035 --> 00:08:10.685
So the right type,

00:08:10.685 --> 00:08:13.370
it is, this is for right one, which means w1.

00:08:13.370 --> 00:08:15.290
So what is a class?

00:08:15.290 --> 00:08:16.565
It's a string writer.

00:08:16.565 --> 00:08:18.215
So these are string rate are correct.

00:08:18.215 --> 00:08:20.135
So that is the simple name,

00:08:20.135 --> 00:08:21.740
which is nothing but the class name.

00:08:21.740 --> 00:08:25.235
And this is the next int value for the current thread.

00:08:25.235 --> 00:08:28.970
And then W2. So it's an aldehyde or rate.

00:08:28.970 --> 00:08:34.910
So there won't be any classes available or any simple name because there is nothing.

00:08:34.910 --> 00:08:38.000
I'm not gonna do anything. I'm going to ignore this because it is going to be null data.

00:08:38.000 --> 00:08:39.995
So that won't be nothing here.

00:08:39.995 --> 00:08:42.755
If it is anonymous and r you'll get NullPointerException.

00:08:42.755 --> 00:08:45.695
And this is some random thread value.

00:08:45.695 --> 00:08:48.440
And the next one I have a character array later.

00:08:48.440 --> 00:08:54.545
So the type is character array writer and this is the value for it.

00:08:54.545 --> 00:08:55.835
Okay?

00:08:55.835 --> 00:09:00.155
So this is how you need to make use of the changes.

00:09:00.155 --> 00:09:02.495
So we just adopt our boat.

00:09:02.495 --> 00:09:04.355
The FileReader.

00:09:04.355 --> 00:09:09.755
And FileReader, you're going to try file writer.

00:09:09.755 --> 00:09:12.965
And so we try to input on right,

00:09:12.965 --> 00:09:14.120
right, You can try it the similar way.

00:09:14.120 --> 00:09:16.505
You can try the output stream also.

00:09:16.505 --> 00:09:17.765
Okay.

00:09:17.765 --> 00:09:22.145
So just try and let me know if you got any clarification.

00:09:22.145 --> 00:09:23.730
Thank you.
