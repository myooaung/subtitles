WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.290
Hello everyone.

00:00:01.290 --> 00:00:02.145
Welcome back.

00:00:02.145 --> 00:00:06.510
So in this unit I'm going to show you how to download IntelliJ ID.

00:00:06.510 --> 00:00:08.340
We all know how to do that, but anyway,

00:00:08.340 --> 00:00:11.550
I'm going to provide some little information about where

00:00:11.550 --> 00:00:14.805
you can go and download integer ID. It's very simple thing.

00:00:14.805 --> 00:00:19.725
Open your browser and tried Intel J download.

00:00:19.725 --> 00:00:21.765
It'll take you to the official website.

00:00:21.765 --> 00:00:24.450
You can go there and based on your operating system you

00:00:24.450 --> 00:00:27.420
can use or you can download the version.

00:00:27.420 --> 00:00:29.010
So it is available for Windows.

00:00:29.010 --> 00:00:33.570
At the same time, it is available for Mac and Linux also, right?

00:00:33.570 --> 00:00:37.050
And in every operating system we have different kind of ocean.

00:00:37.050 --> 00:00:41.255
So one is for ultimate version which enterprises will use.

00:00:41.255 --> 00:00:44.705
And the one which we are going to prefer is Community Edition,

00:00:44.705 --> 00:00:46.730
free and open source.

00:00:46.730 --> 00:00:47.285
Okay?

00:00:47.285 --> 00:00:51.290
You wouldn't find much of a difference between the ultimate ocean and the ocean,

00:00:51.290 --> 00:00:53.225
okay, as a developer perspective.

00:00:53.225 --> 00:00:57.395
But we are good to go with the intelligence ID.

00:00:57.395 --> 00:01:02.480
Okay, so let's download the intelligence and install it.

00:01:02.480 --> 00:01:03.920
So I'm using Mac machine.

00:01:03.920 --> 00:01:06.395
I already downloaded the community package.

00:01:06.395 --> 00:01:08.180
There is nothing different here.

00:01:08.180 --> 00:01:09.335
Just download the package.

00:01:09.335 --> 00:01:11.255
It automatically start installing everything.

00:01:11.255 --> 00:01:14.600
Okay, so now I have intelligent installed on my mission.

00:01:14.600 --> 00:01:17.910
So what I'm gonna do, let me launch the integer.

00:01:22.810 --> 00:01:27.875
Okay, So this is the intelligence ID launching page.

00:01:27.875 --> 00:01:30.560
Either you need to create a new project or you want to open

00:01:30.560 --> 00:01:33.395
an existing R input existing project.

00:01:33.395 --> 00:01:39.695
Or if in case your code is available in a repository Git or some versions,

00:01:39.695 --> 00:01:42.440
you can use Git from version control.

00:01:42.440 --> 00:01:45.110
For now we're not going to worry about anything.

00:01:45.110 --> 00:01:47.960
We're going to simply create a new project.

00:01:47.960 --> 00:01:50.525
Okay, just click New Project.

00:01:50.525 --> 00:01:52.430
And now so okay,

00:01:52.430 --> 00:01:54.380
so that SDK version,

00:01:54.380 --> 00:01:56.510
which I'm going to use his java dot n. Okay,

00:01:56.510 --> 00:01:58.970
so we have to point to the Java 11 motion, right?

00:01:58.970 --> 00:02:02.630
So just click, there is a data testes again,

00:02:02.630 --> 00:02:05.780
okay, so that done and 13, which is already existing,

00:02:05.780 --> 00:02:09.830
but the one I'm trying to use his Java JDK 1.2 in

00:02:09.830 --> 00:02:14.375
case if you are not able to find it here because the IntelliJ idea works months.

00:02:14.375 --> 00:02:15.710
Okay, So will give you a list

00:02:15.710 --> 00:02:20.465
of Java Runtime Environment which is available in your mission.

00:02:20.465 --> 00:02:22.400
Which means what are the JDK installed on your machine?

00:02:22.400 --> 00:02:25.655
It'll give you the sessions here in case if you don't find your version here,

00:02:25.655 --> 00:02:28.625
you can directly download the JDK using this link.

00:02:28.625 --> 00:02:31.670
So now we're going to use Java Virtual Machine

00:02:31.670 --> 00:02:35.520
11 because that is what we are learning right now.

00:02:35.800 --> 00:02:40.130
Okay, So then click Next and we don't need any grow.

00:02:40.130 --> 00:02:42.020
We are a Kotlin models here.

00:02:42.020 --> 00:02:46.340
So next. So it is going to be a command-line up.

00:02:46.340 --> 00:02:49.430
So you have to simply write this as simple a project, right?

00:02:49.430 --> 00:02:50.990
So you don't have to specifically for anything,

00:02:50.990 --> 00:02:53.885
so you can simply create as a command line app.

00:02:53.885 --> 00:02:57.710
And next, and you need to title the project name.

00:02:57.710 --> 00:03:07.205
So I'm going to provide Java 11 underscore tutorials and click Finish.

00:03:07.205 --> 00:03:11.900
So it took a while to load and C.

00:03:11.900 --> 00:03:13.700
So when the product launched,

00:03:13.700 --> 00:03:15.485
it automatically created a,

00:03:15.485 --> 00:03:17.585
the main file and it will launch it.

00:03:17.585 --> 00:03:20.360
So far I'm, what I'm gonna do is I'm going to simply

00:03:20.360 --> 00:03:28.310
provide hello world to see how it is running.

00:03:28.310 --> 00:03:32.210
But I guess it was your first time. Hello World.

00:03:32.210 --> 00:03:34.040
So let me save it.

00:03:34.040 --> 00:03:36.750
Right-click end.

00:03:37.090 --> 00:03:41.090
Okay, So the reason why you're not able to see the main method,

00:03:41.090 --> 00:03:43.820
the index, it will take a while to load.

00:03:43.820 --> 00:03:45.875
See here the indexing JDK 11 here.

00:03:45.875 --> 00:03:48.260
So it might, it will happen only at the first time.

00:03:48.260 --> 00:03:50.945
So don't worry about if you don't see the Run button here.

00:03:50.945 --> 00:03:54.050
So just wait until the index j week 11 is finished.

00:03:54.050 --> 00:03:56.270
It's kinda loading some pre comp.

00:03:56.270 --> 00:03:59.285
I mean, a competence is available nor Jerry, good.

00:03:59.285 --> 00:04:00.845
So now it is done.

00:04:00.845 --> 00:04:03.695
Just right-click. Now you should be able to run Matata.

00:04:03.695 --> 00:04:05.180
Okay, just run.

00:04:05.180 --> 00:04:11.090
So it is building now and it will build an executable jar file.

00:04:11.090 --> 00:04:14.660
It might feel like a slow comparing the eclipse,

00:04:14.660 --> 00:04:17.030
but it'll be faster if you're using it.

00:04:17.030 --> 00:04:19.340
Say library Java, java,

00:04:19.340 --> 00:04:22.145
Laura's emotion, the version which I am using the regular 1.2.

00:04:22.145 --> 00:04:25.640
The reason why I run this particular code to check which JDK is picked up.

00:04:25.640 --> 00:04:32.120
Anyway, we mentioned JDK LeBron has to be used as part of creating this project.

00:04:32.120 --> 00:04:33.620
But anyway, it is just a double-checking.

00:04:33.620 --> 00:04:36.455
Okay, so now we can see that here 11,

00:04:36.455 --> 00:04:38.060
so we are good to go.

00:04:38.060 --> 00:04:40.685
So in the next video, we're going to talk about

00:04:40.685 --> 00:04:43.220
the features and we're going to export all of them.

00:04:43.220 --> 00:04:44.880
Thank you.
