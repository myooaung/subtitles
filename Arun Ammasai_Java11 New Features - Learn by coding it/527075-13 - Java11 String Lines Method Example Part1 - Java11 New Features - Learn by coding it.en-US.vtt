WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.500
Hello everyone.

00:00:01.500 --> 00:00:02.595
Welcome back.

00:00:02.595 --> 00:00:04.800
So we discussed I would eat blank.

00:00:04.800 --> 00:00:09.300
So now the time to return to look for the next modality cell lines.

00:00:09.300 --> 00:00:13.575
So what lines they'll do it to densa stream of a string.

00:00:13.575 --> 00:00:18.780
Okay, let's go back to intelligent ID and then we'll see how we can implement that.

00:00:18.780 --> 00:00:21.195
Okay? So let me minimize this one.

00:00:21.195 --> 00:00:26.340
Okay, so this particular piece of code which will return a string a payment,

00:00:26.340 --> 00:00:29.235
that's maybe I can do one thing I can now

00:00:29.235 --> 00:00:34.380
just rename the class name saying in this class is really good for East blank example.

00:00:34.380 --> 00:00:35.970
So let me do one thing.

00:00:35.970 --> 00:00:39.119
You're going to upload it here and right-click Refactor,

00:00:39.119 --> 00:00:43.085
Rename java 11 string API.

00:00:43.085 --> 00:00:53.910
Xing is blank example.

00:00:53.980 --> 00:00:55.445
Okay?

00:00:55.445 --> 00:01:02.180
So this example is for verifying is blank method.

00:01:02.180 --> 00:01:04.520
So learn now let's create a one more class here.

00:01:04.520 --> 00:01:12.930
So here I'm going to create a main class name called Java live in string lines example.

00:01:14.320 --> 00:01:19.680
Okay, so let's go back to the presentation mode here.

00:01:19.690 --> 00:01:22.100
So let me maximize it.

00:01:22.100 --> 00:01:25.225
Okay, so let's create a main method.

00:01:25.225 --> 00:01:26.920
That's the first thing which we need to do.

00:01:26.920 --> 00:01:30.565
Okay, So we're going to explore the string Lanes example, right?

00:01:30.565 --> 00:01:33.190
So the string length method is nothing but it

00:01:33.190 --> 00:01:36.910
will create a stream out of it from a string.

00:01:36.910 --> 00:01:38.215
Okay, so let's do that.

00:01:38.215 --> 00:01:40.825
So I'm going to write a separate method here, static,

00:01:40.825 --> 00:01:47.450
void, string, lines example.

00:01:49.110 --> 00:01:52.810
So first of all, let me create a single string here,

00:01:52.810 --> 00:01:55.360
a string STR 1 is equal.

00:01:55.360 --> 00:02:01.600
I'm going to provide welcome to Java.

00:02:01.600 --> 00:02:04.300
Java 11 features.

00:02:04.300 --> 00:02:05.295
Got it.

00:02:05.295 --> 00:02:07.595
Okay, so now what we need to do,

00:02:07.595 --> 00:02:11.090
so I want to convert this entire string into a stream.

00:02:11.090 --> 00:02:15.410
So we can convert the string, which is pretty simple.

00:02:15.410 --> 00:02:17.060
You just need to use a linesman thought,

00:02:17.060 --> 00:02:19.415
okay, so what is outcome?

00:02:19.415 --> 00:02:22.220
It is going to be stream of lines, correct?

00:02:22.220 --> 00:02:32.160
So what, okay, so let's input this chain here,

00:02:32.560 --> 00:02:40.205
input class and here as DR1 dot lines method.

00:02:40.205 --> 00:02:42.350
So now you might think if it is a stream,

00:02:42.350 --> 00:02:44.900
you can use the forEach method to see the data.

00:02:44.900 --> 00:02:47.285
But first I need to know what is the length of it.

00:02:47.285 --> 00:02:49.385
Because here we have at the entire world,

00:02:49.385 --> 00:02:54.545
if I then Dyer and Dyer word is returning as a stream.

00:02:54.545 --> 00:02:55.895
So what is the length of it?

00:02:55.895 --> 00:02:58.620
So first I'm trying to print the Linde.

00:03:01.990 --> 00:03:05.915
Linde. So what I'm trying to do is here.

00:03:05.915 --> 00:03:11.480
So lines dot to dot lend to Monday,

00:03:11.480 --> 00:03:13.100
which will give me the length.

00:03:13.100 --> 00:03:15.900
So let me call this method here.

00:03:17.260 --> 00:03:19.550
Streamlines example.

00:03:19.550 --> 00:03:22.440
So let's execute the code. We'll see.

00:03:23.920 --> 00:03:29.540
So the limit is one. So now what we need to do,

00:03:29.540 --> 00:03:34.355
so I want to, so the entire string becomes a stream now, right?

00:03:34.355 --> 00:03:35.810
And I have the array yet,

00:03:35.810 --> 00:03:40.100
so I want to print the data or because it's a stream, right?

00:03:40.100 --> 00:03:44.180
So you can use the forEach method here, right, forage.

00:03:44.180 --> 00:03:47.210
And I'm going to use the method reference here,

00:03:47.210 --> 00:03:52.385
system dot out, and I'm just simply printing a line.

00:03:52.385 --> 00:03:53.300
That's all.

00:03:53.300 --> 00:03:55.775
So let me run. So now when you run it,

00:03:55.775 --> 00:03:56.915
we will end up with a shoe,

00:03:56.915 --> 00:03:59.190
will see what is at issue.

00:03:59.830 --> 00:04:02.150
Illegal state exception.

00:04:02.150 --> 00:04:04.370
Stream has already been operated.

00:04:04.370 --> 00:04:07.055
So you cannot use it again because the stream is,

00:04:07.055 --> 00:04:10.415
because I used a stream to open an array and I want to check the link.

00:04:10.415 --> 00:04:15.350
So if you want to run this command is and because stream cannot be used twice,

00:04:15.350 --> 00:04:17.300
it can be one once that seam is open,

00:04:17.300 --> 00:04:19.655
which means it cannot be used again.

00:04:19.655 --> 00:04:23.345
So run it again. So now we should be able to see that data.

00:04:23.345 --> 00:04:24.920
Okay, you might think, okay,

00:04:24.920 --> 00:04:27.275
so now I got D welcome dot Java features.

00:04:27.275 --> 00:04:30.320
But I really don't understand what exactly it means.

00:04:30.320 --> 00:04:33.485
Okay, so basically what the alignment that we're doing, right?

00:04:33.485 --> 00:04:36.515
For example, you have a file which kinda multiple lines.

00:04:36.515 --> 00:04:42.425
So your lines method's will convert each and every line acids single stream.

00:04:42.425 --> 00:04:44.900
If you have a 10 lines of a code,

00:04:44.900 --> 00:04:50.255
which means it will take as a stream of a string which contains 10 different streams.

00:04:50.255 --> 00:04:53.210
Okay, let me give you an even simpler example.

00:04:53.210 --> 00:04:54.890
So what I'm gonna do, I'm gonna copy this.

00:04:54.890 --> 00:04:57.860
I'm going to make them as some multiple ends of a court.

00:04:57.860 --> 00:05:01.925
So simple thing is I'm gonna make an MSIS VR2.

00:05:01.925 --> 00:05:03.170
Okay, so instead of doing that,

00:05:03.170 --> 00:05:05.315
I'm going to provide a line break here.

00:05:05.315 --> 00:05:07.310
Okay, So like, um,

00:05:07.310 --> 00:05:08.720
poverty line break here.

00:05:08.720 --> 00:05:10.895
So now it is considered RESA,

00:05:10.895 --> 00:05:12.845
three different lines, the line number 1,

00:05:12.845 --> 00:05:14.810
and this is line number 2. Number 2.

00:05:14.810 --> 00:05:17.495
Now the rent, it must be three,

00:05:17.495 --> 00:05:19.685
not like the SDR one.

00:05:19.685 --> 00:05:24.830
Okay, so now what I'm going to do is just copy the entire thing here and paste it here.

00:05:24.830 --> 00:05:29.400
And lines 1. And here is going to be STR 2.

00:05:30.160 --> 00:05:36.170
So lent SDR two lines, one.

00:05:36.170 --> 00:05:40.820
Okay, so now what I'm gonna do is I'm going to run it again to see what is the outcome.

00:05:40.820 --> 00:05:43.100
So the first one is one,

00:05:43.100 --> 00:05:46.490
and here it is when it on a tree, right?

00:05:46.490 --> 00:05:50.750
Because we have three lines of string here.

00:05:50.750 --> 00:05:53.270
So now I'm going to print them and soil.

00:05:53.270 --> 00:05:55.820
So in order to print them, you need to close the stream,

00:05:55.820 --> 00:05:58.580
which all the open and open the forage 1 third,

00:05:58.580 --> 00:06:02.405
so lines one dot forEach relays.

00:06:02.405 --> 00:06:05.100
So right-click and read them.

00:06:05.950 --> 00:06:09.140
See, now we've got three strings.

00:06:09.140 --> 00:06:11.000
Welcome stream 1, 2,

00:06:11.000 --> 00:06:13.430
Java's Stream 2, and future stream three.

00:06:13.430 --> 00:06:17.840
Okay, this is how the lines mother I will convert the data into a stream.

00:06:17.840 --> 00:06:19.595
That might be another quotient.

00:06:19.595 --> 00:06:20.960
So I have a file,

00:06:20.960 --> 00:06:25.550
I want to read the entire file and convert them into a string.

00:06:25.550 --> 00:06:27.065
So all we can do that,

00:06:27.065 --> 00:06:30.450
that we'll discuss in the next video. Thank you.
