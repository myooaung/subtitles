WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.380
Hello everyone.

00:00:01.380 --> 00:00:03.030
And this is going to be a simple one.

00:00:03.030 --> 00:00:04.995
We tried eyes black matter.

00:00:04.995 --> 00:00:11.565
So now I want to try the same thing with the lambda expression and method reference.

00:00:11.565 --> 00:00:15.225
Okay, let's do that. Okay, So STR blank,

00:00:15.225 --> 00:00:17.010
it is going to be written on Boolean, right?

00:00:17.010 --> 00:00:19.560
So which functional interface we can use it.

00:00:19.560 --> 00:00:23.280
So the predicate is a one which we can use it because predicate which will take

00:00:23.280 --> 00:00:27.745
some single input and it will return a Boolean as output, right?

00:00:27.745 --> 00:00:29.285
Let's try to achieve them.

00:00:29.285 --> 00:00:31.850
So first thing I'm going to create a predicate here.

00:00:31.850 --> 00:00:34.370
So predicate which will accepts a string.

00:00:34.370 --> 00:00:36.960
So what I'm trying to y, I'm passing a string because I'm shaking

00:00:36.960 --> 00:00:39.830
the string dot is blank method, right?

00:00:39.830 --> 00:00:44.825
So here I'm going to maybe I can call them as STR 4 is equal to,

00:00:44.825 --> 00:00:46.490
I need to pass the input, right?

00:00:46.490 --> 00:00:49.835
So first I'm trying with the Lambda expression,

00:00:49.835 --> 00:00:51.875
then we can go for method of friends.

00:00:51.875 --> 00:00:59.540
So S is a input and the token and the message I'm trying to look for S dot is blank.

00:00:59.540 --> 00:01:02.660
So which will have done the data.

00:01:02.660 --> 00:01:06.260
Now what do I need to do? Just feed the data to wait.

00:01:06.260 --> 00:01:16.200
Okay, So is blank lambda expression.

00:01:16.690 --> 00:01:20.540
So SDR for dot test.

00:01:20.540 --> 00:01:23.870
And we need to feed some data so it's feet some proper data.

00:01:23.870 --> 00:01:27.695
Java 11 features.

00:01:27.695 --> 00:01:30.065
So what it does I explanation here.

00:01:30.065 --> 00:01:34.520
So the mat that's supposed to be written to files

00:01:34.520 --> 00:01:40.280
because the string which I'm passing to this SDF 48 is not empty.

00:01:40.280 --> 00:01:45.215
Okay, so let's try to achieve the same thing using functional,

00:01:45.215 --> 00:01:46.340
I mean the method reference there.

00:01:46.340 --> 00:01:48.875
So let's do it at the same time.

00:01:48.875 --> 00:01:51.380
So copy, let me copy it.

00:01:51.380 --> 00:01:54.640
One of them, copy and paste it here.

00:01:54.640 --> 00:01:57.670
Okay, so we should understand one thing, okay,

00:01:57.670 --> 00:02:01.855
So one to use my reference when to use lambda expression.

00:02:01.855 --> 00:02:03.070
Here is the deal.

00:02:03.070 --> 00:02:07.585
So in case the method implementation is not existing,

00:02:07.585 --> 00:02:09.790
so you can go for lambda expression.

00:02:09.790 --> 00:02:11.920
But if the method is existing,

00:02:11.920 --> 00:02:13.630
you don't have to go for a lambda expression,

00:02:13.630 --> 00:02:15.190
you can simply use the method reference.

00:02:15.190 --> 00:02:16.540
It's pretty much the same thing, okay,

00:02:16.540 --> 00:02:18.790
So there is no much difference between the lambda expression.

00:02:18.790 --> 00:02:21.370
Andy, my third offense, both are,

00:02:21.370 --> 00:02:23.110
both are doing the same job,

00:02:23.110 --> 00:02:25.060
but the implementation part is different.

00:02:25.060 --> 00:02:26.980
So here he's black Madonna,

00:02:26.980 --> 00:02:30.715
even though it is existing directly using the lambda expression.

00:02:30.715 --> 00:02:32.545
So now what we can do,

00:02:32.545 --> 00:02:34.120
we can use the method reference.

00:02:34.120 --> 00:02:39.305
So what is the class contains his blank so string, correct. String.

00:02:39.305 --> 00:02:41.045
And what are the material looking for?

00:02:41.045 --> 00:02:43.235
So is plant mud that,

00:02:43.235 --> 00:02:46.700
so this is Walt has a matter reference.

00:02:46.700 --> 00:02:51.410
Now I can pass HDF5 test.js No.1 futures.

00:02:51.410 --> 00:02:54.380
And here is blank.

00:02:54.380 --> 00:02:57.935
My third array if, for example,

00:02:57.935 --> 00:03:00.065
I let me pass empty,

00:03:00.065 --> 00:03:01.775
empty, empty here, okay?

00:03:01.775 --> 00:03:04.320
So let me pause empty here.

00:03:05.710 --> 00:03:08.760
So now what we need to do.

00:03:09.040 --> 00:03:15.290
So just right-click and you should be able to see the outcome.

00:03:15.290 --> 00:03:17.930
The SDI one is true, okay.

00:03:17.930 --> 00:03:21.200
Because he disciplined SPO2 is true because again,

00:03:21.200 --> 00:03:22.730
it's some multiple blank.

00:03:22.730 --> 00:03:25.190
And SDG3, which returns a false,

00:03:25.190 --> 00:03:29.195
which means SDR's there is not a empty or not a blank.

00:03:29.195 --> 00:03:32.300
The same way as GAL4 is returning false,

00:03:32.300 --> 00:03:34.730
which means that eta, I'm feeding our lemon feature.

00:03:34.730 --> 00:03:37.130
It is not empty, so it is false again.

00:03:37.130 --> 00:03:38.795
But the STL file,

00:03:38.795 --> 00:03:40.085
I'm passing an empty.

00:03:40.085 --> 00:03:43.835
So which means it will return a true because these blank is true.

00:03:43.835 --> 00:03:44.465
Okay?

00:03:44.465 --> 00:03:47.405
So this is our window make use of a is blank.

00:03:47.405 --> 00:03:53.809
My thought. Okay, so in the next example we're going to talk about the next method,

00:03:53.809 --> 00:03:56.670
which is called as lines.
