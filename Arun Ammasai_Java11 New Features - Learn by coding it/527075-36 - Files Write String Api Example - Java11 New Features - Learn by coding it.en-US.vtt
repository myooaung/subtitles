WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.640
Hello everyone, Welcome back.

00:00:02.640 --> 00:00:06.630
So we could an example for eating a string, correct?

00:00:06.630 --> 00:00:15.540
So now I need to create an one more example to write string API example.

00:00:15.540 --> 00:00:18.060
So you can write a string into a file.

00:00:18.060 --> 00:00:19.725
So that's all it's all about.

00:00:19.725 --> 00:00:21.480
Okay, for now what I'm going to know,

00:00:21.480 --> 00:00:23.820
I'm going to need the path, right?

00:00:23.820 --> 00:00:28.935
So for now, I'm going to copy this path alone because we might need it.

00:00:28.935 --> 00:00:32.200
So keep it here.

00:00:34.550 --> 00:00:38.550
Just copy control C and paste it here.

00:00:38.550 --> 00:00:42.005
Okay, so now let's go back to the presentation mode.

00:00:42.005 --> 00:00:44.140
Okay, so now what I'm gonna do,

00:00:44.140 --> 00:00:45.355
I'm gonna write a main method,

00:00:45.355 --> 00:00:47.275
which we can use it to call the method.

00:00:47.275 --> 00:00:50.815
So now I'm going to write another method, private,

00:00:50.815 --> 00:00:55.195
static, void, right string.

00:00:55.195 --> 00:00:58.690
Okay, first method I'm going to write without

00:00:58.690 --> 00:01:03.190
any cash that and secondly that I'm going to use with the acid, okay?

00:01:03.190 --> 00:01:09.070
So we need the location is available here correctly so we can use it inside this method.

00:01:09.070 --> 00:01:17.005
So save it.

00:01:17.005 --> 00:01:19.400
So now what I'm gonna do.

00:01:19.770 --> 00:01:22.540
So we need to have a part.

00:01:22.540 --> 00:01:25.640
So that is an important parameter, right?

00:01:29.100 --> 00:01:35.155
But Pat is a pads

00:01:35.155 --> 00:01:41.810
that GET method which will accepts input the path.

00:01:43.800 --> 00:01:47.500
So good luck subs.

00:01:47.500 --> 00:01:51.205
But so where is that location retreat?

00:01:51.205 --> 00:01:52.480
I would in the lane number seven,

00:01:52.480 --> 00:01:56.630
this is a location I how my file right.

00:01:57.510 --> 00:02:02.170
So I got D. But the next thing, asocial,

00:02:02.170 --> 00:02:04.765
Let's write try and a catch block,

00:02:04.765 --> 00:02:07.764
which is always a good practice.

00:02:07.764 --> 00:02:10.490
So exception,

00:02:15.780 --> 00:02:22.600
exception, e dot, print, stack trace.

00:02:22.600 --> 00:02:29.680
Okay. So now what we're going to do is we're going to use the files dot right string.

00:02:29.680 --> 00:02:38.545
Okay, so for now I'm going to use the three API format like path,

00:02:38.545 --> 00:02:41.575
GAT, sequence and open option.

00:02:41.575 --> 00:02:45.355
So the first thing that you're going to write your file,

00:02:45.355 --> 00:02:46.810
so I have a path, right?

00:02:46.810 --> 00:02:50.470
So I can use the path here and the next parameter.

00:02:50.470 --> 00:02:53.034
Okay, so gas sequence,

00:02:53.034 --> 00:02:56.185
so gas you can just nothing but a sequence of character.

00:02:56.185 --> 00:03:01.240
So only a sequence of character can form as a string,

00:03:01.240 --> 00:03:05.125
because string is nothing but string is a combination of characters rate.

00:03:05.125 --> 00:03:09.220
Okay? So here I need to provide some cast sequence,

00:03:09.220 --> 00:03:11.650
gas sequence, Miss USA, string anyway.

00:03:11.650 --> 00:03:14.965
So I'm going to provide a Hello World.

00:03:14.965 --> 00:03:17.200
Now I'm going to provide some exclamatory here.

00:03:17.200 --> 00:03:19.345
And then I'm gonna say,

00:03:19.345 --> 00:03:20.815
so what are the open option?

00:03:20.815 --> 00:03:24.160
So are you trying to overwrite the file or are you trying to open it up?

00:03:24.160 --> 00:03:27.310
Are how are we going to do the open option?

00:03:27.310 --> 00:03:30.505
So I want to open a file and I want to append the data,

00:03:30.505 --> 00:03:32.050
not to write it.

00:03:32.050 --> 00:03:40.790
Okay, so what I'm gonna do is I'm going to use standard open option dot.

00:03:40.790 --> 00:03:43.250
I'm going to use append.

00:03:43.250 --> 00:03:47.705
So now we've successfully read the data.

00:03:47.705 --> 00:03:49.355
I'm in, right, the data.

00:03:49.355 --> 00:03:51.995
So I need to read the file rate.

00:03:51.995 --> 00:03:55.610
Okay, So either you execute the code and then you can go back

00:03:55.610 --> 00:04:00.380
to your file and you can see the changes are you can,

00:04:00.380 --> 00:04:04.220
we have the previous example where we can use a reader?

00:04:04.220 --> 00:04:06.590
Might that right? We can use that also.

00:04:06.590 --> 00:04:08.090
For now, I'm gonna,

00:04:08.090 --> 00:04:11.210
I'm gonna just simply call the right,

00:04:11.210 --> 00:04:13.175
stream it out, save it,

00:04:13.175 --> 00:04:15.900
right-click and run it.

00:04:17.170 --> 00:04:20.030
So it is done.

00:04:20.030 --> 00:04:23.609
So what we can do is now go back to our desktop.

00:04:24.070 --> 00:04:28.490
Go into desktop, and I'm trying to find out the file.

00:04:28.490 --> 00:04:31.805
So here is a test.txt. See you welcome again.

00:04:31.805 --> 00:04:35.975
We got the Hello World because I'm appending the data.

00:04:35.975 --> 00:04:38.090
Okay, So, so open up,

00:04:38.090 --> 00:04:40.970
nice and I think how you want to open a file and whether you want to

00:04:40.970 --> 00:04:44.390
append or you had a file options, right?

00:04:44.390 --> 00:04:45.830
You can append the data,

00:04:45.830 --> 00:04:48.860
you can override it, something like that.

00:04:48.860 --> 00:04:53.240
Okay, so now I don't want to read something like that because

00:04:53.240 --> 00:04:57.695
I haven't a previous example where I can read the data.

00:04:57.695 --> 00:05:00.725
Correct. So what I'm gonna do using the right API.

00:05:00.725 --> 00:05:04.010
So instead of every time I'm going to open a file

00:05:04.010 --> 00:05:09.365
and run the file and go back to my physical location and find out the file.

00:05:09.365 --> 00:05:12.920
What I'm gonna do is so once the file is written properly,

00:05:12.920 --> 00:05:16.820
I'm going to call the sorry.

00:05:16.820 --> 00:05:21.050
So just come up to read API cobia,

00:05:21.050 --> 00:05:24.120
the class name, dot.

00:05:27.210 --> 00:05:32.110
So why is wonderful AABA example and it's going to spray trade.

00:05:32.110 --> 00:05:38.080
So I'm going to make it to the public so I can access in the class.

00:05:38.080 --> 00:05:40.720
So here, so read stream.

00:05:40.720 --> 00:05:43.630
Okay, so you don't end up with any specific parameter

00:05:43.630 --> 00:05:46.270
because reaching will try and look up this same file.

00:05:46.270 --> 00:05:50.920
Okay, so now what I'm gonna do is instead of hello world solid existing, right?

00:05:50.920 --> 00:05:56.695
So what I'm going to know, welcome slash n.

00:05:56.695 --> 00:05:59.090
So I want a line break.

00:05:59.700 --> 00:06:03.625
Welcome to files. Save it,

00:06:03.625 --> 00:06:05.870
and let's run it again.

00:06:07.810 --> 00:06:10.265
See the file as well.

00:06:10.265 --> 00:06:11.765
Okay, So what is the total octet?

00:06:11.765 --> 00:06:15.650
It's supposed to be backslash n. Okay,

00:06:15.650 --> 00:06:17.670
so let me run it again.

00:06:19.210 --> 00:06:27.155
Cool, right? So we got that data from the existing file and we got the appended data.

00:06:27.155 --> 00:06:30.230
And this one, I made a mistake and seal it up under data.

00:06:30.230 --> 00:06:33.485
And the next time I made a line break,

00:06:33.485 --> 00:06:34.730
which means an enter.

00:06:34.730 --> 00:06:37.100
And that is also available in the file.

00:06:37.100 --> 00:06:39.425
Okay, so you might think so.

00:06:39.425 --> 00:06:41.510
So you try a lot of things.

00:06:41.510 --> 00:06:45.420
So how we can use the cache set,

00:06:46.150 --> 00:06:49.700
right, to write a file, how we can use the castle.

00:06:49.700 --> 00:06:55.140
Okay, so what I'm gonna do is desert.

00:06:55.240 --> 00:06:58.745
So I'm going to write a one more method here.

00:06:58.745 --> 00:07:03.030
So private,

00:07:09.400 --> 00:07:15.750
static, void, right?

00:07:16.240 --> 00:07:21.605
Width, set.

00:07:21.605 --> 00:07:26.765
So the implementation is pretty much the same thing, right?

00:07:26.765 --> 00:07:29.975
So only thing you have to provide a specific asset here,

00:07:29.975 --> 00:07:34.040
because I want to specific acid sequence.

00:07:34.040 --> 00:07:37.200
So let me try a Latin.

00:07:37.420 --> 00:07:41.930
You might not see any output, a difference,

00:07:41.930 --> 00:07:45.620
but it makes sense in some other place where they're specifically reading your file,

00:07:45.620 --> 00:07:48.305
Venus's specific format, because the file might have,

00:07:48.305 --> 00:07:50.885
right, and using that particular format.

00:07:50.885 --> 00:07:52.400
So when you read the file,

00:07:52.400 --> 00:07:55.590
you need to make sure you're reading an appropriate way.

00:07:55.900 --> 00:07:57.995
Okay, So now here,

00:07:57.995 --> 00:08:01.370
so the Latin is ISO, iPhone 8,

00:08:01.370 --> 00:08:06.560
8, 5, 9, iPhone 3, I guess. Yes.

00:08:06.560 --> 00:08:08.960
Now I have a capsid,

00:08:08.960 --> 00:08:14.400
so I can simply copy the entire thing here.

00:08:16.770 --> 00:08:21.955
Paste it here. And one thing different is I have the bad.

00:08:21.955 --> 00:08:25.165
Okay, So before the standard options,

00:08:25.165 --> 00:08:28.330
I can use the Latin gas at right,

00:08:28.330 --> 00:08:31.580
so I'm going to use the Latin Cassatt here.

00:08:32.220 --> 00:08:39.940
So now we have ridden the file has the right string using the Latin guard set.

00:08:39.940 --> 00:08:43.180
So what I'm gonna do is I'm going to read something else here.

00:08:43.180 --> 00:08:50.540
Right? Didn't write using Latin.

00:08:52.170 --> 00:09:01.505
Latin gas it. So, so now we need to read the file.

00:09:01.505 --> 00:09:04.340
But the thing is I write the file using Latin.

00:09:04.340 --> 00:09:06.005
So when I read the file,

00:09:06.005 --> 00:09:11.765
I need to make sure I'm reading as a Latin format, so string data.

00:09:11.765 --> 00:09:17.405
So we are not going to use this one because this is not using any gas it.

00:09:17.405 --> 00:09:20.450
So data is equal to,

00:09:20.450 --> 00:09:24.350
and I'm going to use the files dot read string,

00:09:24.350 --> 00:09:25.850
the second one path.

00:09:25.850 --> 00:09:30.210
So we do have a path and we have a Cassatt also Latin.

00:09:30.730 --> 00:09:34.685
Okay, so now let's print.

00:09:34.685 --> 00:09:37.370
So I'm going to call this month.

00:09:37.370 --> 00:09:39.770
All right, We'll see okay,

00:09:39.770 --> 00:09:42.950
until we get to S. Okay,

00:09:42.950 --> 00:09:45.860
so let's print the data as well so we can see the outcome.

00:09:45.860 --> 00:09:47.930
Size OUT.

00:09:47.930 --> 00:09:50.915
Data, save it.

00:09:50.915 --> 00:09:52.760
Run right.

00:09:52.760 --> 00:09:56.480
Baby changes. See, take a look at it. Welcome to Java.

00:09:56.480 --> 00:10:02.060
So this is our original data and good got upended using the first method.

00:10:02.060 --> 00:10:05.015
And this is also about operated from the first method.

00:10:05.015 --> 00:10:10.835
And this is the one which we write using the second method using the Cassatt.

00:10:10.835 --> 00:10:15.200
At the same time, we are read the entire file using the Latin god sets.

00:10:15.200 --> 00:10:19.280
So this is how you need to make use of a reader file or read,

00:10:19.280 --> 00:10:22.940
write a file, but make sure it is writing in,

00:10:22.940 --> 00:10:24.665
in a string into a file.

00:10:24.665 --> 00:10:28.760
It is reading file into a string so that input and output matters.

00:10:28.760 --> 00:10:29.330
Okay?

00:10:29.330 --> 00:10:30.695
So input is going to be string,

00:10:30.695 --> 00:10:32.450
so you can improve it file as an input,

00:10:32.450 --> 00:10:33.815
it will be the string,

00:10:33.815 --> 00:10:35.525
the sequence of character.

00:10:35.525 --> 00:10:37.295
At the same time you're reading your file,

00:10:37.295 --> 00:10:40.190
it will do turn it gas sequence,

00:10:40.190 --> 00:10:42.139
which is nothing but a string combination.

00:10:42.139 --> 00:10:44.000
So I've ever read file,

00:10:44.000 --> 00:10:47.105
we'll give it a string by the right value into new string as the input.

00:10:47.105 --> 00:10:50.030
That's, that's all we need to keep in our mind.

00:10:50.030 --> 00:10:52.700
Okay, So in the next video I'm going to coming up with

00:10:52.700 --> 00:10:58.140
a new another feature and we'll meet each other next video. Thank you.
