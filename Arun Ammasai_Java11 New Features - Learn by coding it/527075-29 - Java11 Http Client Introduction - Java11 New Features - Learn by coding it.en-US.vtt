WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:02.805
Hello everyone, Welcome back.

00:00:02.805 --> 00:00:07.425
The next important future we're going to talk about is hushed UDP client.

00:00:07.425 --> 00:00:10.380
Okay, So what are the hashtag declined in the first place?

00:00:10.380 --> 00:00:14.580
I'm making a call to a server and the server responding to me,

00:00:14.580 --> 00:00:19.005
that is a simple client and the server request communication, right?

00:00:19.005 --> 00:00:21.615
So since Java one,

00:00:21.615 --> 00:00:28.825
we do have the functionality to make a APA call on Hajj TDP called bad.

00:00:28.825 --> 00:00:36.500
We can only do synchronous call because since the arrow one to age,

00:00:36.500 --> 00:00:39.725
Java one, Lisa Porter descent goodness calls.

00:00:39.725 --> 00:00:42.260
Okay, So what happened if I want to make asynchronous call,

00:00:42.260 --> 00:00:44.480
we had to go for the third party APIs,

00:00:44.480 --> 00:00:46.535
which means the Google API,

00:00:46.535 --> 00:00:51.140
or else you how to go for Apache APIs.

00:00:51.140 --> 00:00:53.240
So now in Java 11,

00:00:53.240 --> 00:00:57.635
the hashtag decline has been introduced with some new enhancements,

00:00:57.635 --> 00:01:01.625
which means it will support has to DB2 aswell.

00:01:01.625 --> 00:01:05.885
So when a disappointing I should contribute to which means

00:01:05.885 --> 00:01:08.060
eventually it will support us to make us in

00:01:08.060 --> 00:01:11.330
conference call at the same time as in goodness call as well.

00:01:11.330 --> 00:01:15.035
And Java and n is a modular programming, right?

00:01:15.035 --> 00:01:20.075
So our HTTP model has been pleased and the JDK dot incubator module.

00:01:20.075 --> 00:01:22.895
Okay, so what is an incubator?

00:01:22.895 --> 00:01:25.910
We all know that when baby was born,

00:01:25.910 --> 00:01:29.690
if the baby's not grown up fully,

00:01:29.690 --> 00:01:36.230
we keep the baby inside the incubator and deliver baby grew in a proper health condition.

00:01:36.230 --> 00:01:38.690
Okay, It's a similar way, has to decline,

00:01:38.690 --> 00:01:40.895
has been introduced in Java nine,

00:01:40.895 --> 00:01:42.920
but it was not fully developed.

00:01:42.920 --> 00:01:46.715
It wasn't only test phase.

00:01:46.715 --> 00:01:51.979
So the particular model has been put under JDK dot incubator.

00:01:51.979 --> 00:01:54.980
And then what happen when the Java 11,

00:01:54.980 --> 00:01:59.495
the list that has GDB client model has been introduced or

00:01:59.495 --> 00:02:04.130
finalize all the developments and everything fall in their proper place.

00:02:04.130 --> 00:02:07.040
So we don't need anymore the incubator.

00:02:07.040 --> 00:02:12.500
So everything has been moved from JDK dot incubator to Java dotnet.

00:02:12.500 --> 00:02:14.420
Right?

00:02:14.420 --> 00:02:20.270
And then what will happen when you're using I shouldn't be after 9,

00:02:20.270 --> 00:02:22.760
which will enable us to use how should it be one?

00:02:22.760 --> 00:02:24.680
And actually we do.

00:02:24.680 --> 00:02:30.000
So we can make synchronous at the same time as an economist call as well.

00:02:30.010 --> 00:02:35.375
And then we can simply say it's a replacement for URL connection.

00:02:35.375 --> 00:02:38.480
What we'll do, if it is a URL connection,

00:02:38.480 --> 00:02:41.435
it will simply make a connection to a URL which is,

00:02:41.435 --> 00:02:43.190
which we provide are.

00:02:43.190 --> 00:02:44.495
Okay.

00:02:44.495 --> 00:02:51.350
And now we know what is available in Java and N and what has been changed in Java 11.

00:02:51.350 --> 00:02:57.035
Right? So now we need to know some important in detailed parts of

00:02:57.035 --> 00:03:01.880
the changes that are four important thing we need

00:03:01.880 --> 00:03:06.530
to know when you're trying to make it call the first one request.

00:03:06.530 --> 00:03:11.195
And the second one isn't builder.

00:03:11.195 --> 00:03:13.385
And the third one, client,

00:03:13.385 --> 00:03:15.515
and the fourth one is a response.

00:03:15.515 --> 00:03:16.550
Okay?

00:03:16.550 --> 00:03:18.845
Now, what are all those?

00:03:18.845 --> 00:03:22.565
The hashtable request, which will

00:03:22.565 --> 00:03:27.710
contain the request URI and the headers and the body that necessary information.

00:03:27.710 --> 00:03:29.600
And then we do have a builder.

00:03:29.600 --> 00:03:31.640
So I do have the necessary information.

00:03:31.640 --> 00:03:34.985
So i how to create a instance out of it.

00:03:34.985 --> 00:03:39.560
Because you need to create a object contains request URL headers and the body.

00:03:39.560 --> 00:03:45.890
Correct with the help of new builder method and the client.

00:03:45.890 --> 00:03:48.440
So I have the unnecessary information

00:03:48.440 --> 00:03:51.485
and I do have the instance which contents every details.

00:03:51.485 --> 00:03:54.770
Now I need somebody else to make a call.

00:03:54.770 --> 00:03:57.110
So that is where the client comes into place.

00:03:57.110 --> 00:04:00.620
The client will make a call with the help

00:04:00.620 --> 00:04:04.460
of the instance which we created as part of Builder.

00:04:04.460 --> 00:04:07.100
So the new height to the reclined method,

00:04:07.100 --> 00:04:10.235
which will help us to make a call.

00:04:10.235 --> 00:04:13.985
And at same time now we can make an asynchronous call aswell.

00:04:13.985 --> 00:04:16.685
And the next one is HTTP response.

00:04:16.685 --> 00:04:19.730
I'm asking what is your name and you're saying My name is John.

00:04:19.730 --> 00:04:22.730
So what does it mean? Somebody somebody's asking, somebody is responding.

00:04:22.730 --> 00:04:23.870
So what is your name?

00:04:23.870 --> 00:04:26.075
It's a request. End.

00:04:26.075 --> 00:04:28.535
My name is Jonah and respond. Who's a client?

00:04:28.535 --> 00:04:31.820
And the client because I'm the one who's asking the question.

00:04:31.820 --> 00:04:32.585
Okay.

00:04:32.585 --> 00:04:35.960
So you were response which means our response has

00:04:35.960 --> 00:04:42.335
the compatibility or the eligibility to read the response.

00:04:42.335 --> 00:04:44.615
All received the response from the other end.

00:04:44.615 --> 00:04:49.175
And it has the ability to handle are

00:04:49.175 --> 00:04:53.870
convert the response into a string or convert that response into a file.

00:04:53.870 --> 00:04:58.530
It's up to individual person.

00:04:59.110 --> 00:05:03.455
Not only that, when a document with the highest level response.

00:05:03.455 --> 00:05:07.775
We've got something like code as part of the response,

00:05:07.775 --> 00:05:13.775
each and every code number which indicates a separate our response type.

00:05:13.775 --> 00:05:17.570
You all know what is 404 means the patient out front,

00:05:17.570 --> 00:05:21.980
the similarity we had triple response as well as their coats.

00:05:21.980 --> 00:05:24.980
For example, if you've got 200 and 300 response code,

00:05:24.980 --> 00:05:29.045
which means the call is successful and we got the response back.

00:05:29.045 --> 00:05:31.115
So everything went fine,

00:05:31.115 --> 00:05:32.704
which means it's 200.

00:05:32.704 --> 00:05:34.100
So now the interior,

00:05:34.100 --> 00:05:36.140
but what are the main class for hashtag request?

00:05:36.140 --> 00:05:38.210
Eventually, it's an antipyretic West

00:05:38.210 --> 00:05:42.065
and build a prospect to that new method called new builder.

00:05:42.065 --> 00:05:44.675
And from the client perspective,

00:05:44.675 --> 00:05:47.825
that is a new method called New Hampshire cubic lattice, which will make the call.

00:05:47.825 --> 00:05:50.255
And here the response.

00:05:50.255 --> 00:05:52.685
Normally it will receive as a string,

00:05:52.685 --> 00:05:55.805
and it's up to you whether you want to receive them as a,

00:05:55.805 --> 00:05:58.370
a string or a file.

00:05:58.370 --> 00:06:00.425
So now what I'm gonna do,

00:06:00.425 --> 00:06:02.630
so we know that Nadia 19 and Java,

00:06:02.630 --> 00:06:06.770
and what is the existing in German in what has been modified in Java 11.

00:06:06.770 --> 00:06:08.165
Right?

00:06:08.165 --> 00:06:12.515
So now we need to know and a simple example in Java 11.

00:06:12.515 --> 00:06:17.360
But before, I'm going to show you a simple example in Java and how it has been done.

00:06:17.360 --> 00:06:19.970
And then I'm going to show you what it has been implemented,

00:06:19.970 --> 00:06:22.385
how it has been implemented in Java 11.

00:06:22.385 --> 00:06:24.320
So the alanine is not necessarily right now,

00:06:24.320 --> 00:06:27.230
but still it's kind of a refreshing the things.

00:06:27.230 --> 00:06:31.880
So let's talk about what is in Java and in Anna how it is implemented.

00:06:31.880 --> 00:06:34.100
And then we'll move on to the next example,

00:06:34.100 --> 00:06:36.305
how the same thing as we implemented in Java Lang.

00:06:36.305 --> 00:06:38.040
Thank you.
