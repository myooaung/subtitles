WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.180
Under this video,

00:00:02.180 --> 00:00:08.450
we will adapt the final user AP I toe work with spring data G P A.

00:00:08.450 --> 00:00:13.990
So let's go on the reserve service.

00:00:13.990 --> 00:00:24.750
I am peel in search for find or corresponding method and we see here that this currently

00:00:24.750 --> 00:00:32.520
takes into account a user spliced lose the static users list that is created on the

00:00:32.520 --> 00:00:34.050
application startup.

00:00:34.050 --> 00:00:48.030
So we need to first inject the user depository using the auto wired a notation so that we

00:00:48.030 --> 00:00:52.250
can use depository corresponding methods.

00:00:52.250 --> 00:00:55.620
And under user reposed toy,

00:00:55.620 --> 00:01:05.160
there is a metal called find all so we can invoke it to extract and basically return all

00:01:05.160 --> 00:01:06.050
the users.

00:01:06.050 --> 00:01:09.650
Okay,

00:01:09.650 --> 00:01:13.180
and this we don't need any more.

00:01:13.180 --> 00:01:14.170
However,

00:01:14.170 --> 00:01:20.800
we see an issue here that a terrible users first was leased off users.

00:01:20.800 --> 00:01:25.050
So if we take a closer look at this method,

00:01:25.050 --> 00:01:34.060
this returns of terrible least off users and comes directly from crowd repository.

00:01:34.060 --> 00:01:43.620
Please recall that are user repository extends the crowd repository corresponding interface

00:01:43.620 --> 00:01:43.620
.

00:01:43.620 --> 00:01:52.720
So let's do something like this under our user repository.

00:01:52.720 --> 00:01:53.170
Instead,

00:01:53.170 --> 00:02:02.350
off described the depository Let's extend the JPL reported story under GPL repository.

00:02:02.350 --> 00:02:08.150
We can see that we have access to pagination sorting and so on.

00:02:08.150 --> 00:02:16.620
And this extents off course crowd repository that had that terrible find.

00:02:16.620 --> 00:02:21.160
All Okay,

00:02:21.160 --> 00:02:21.800
good.

00:02:21.800 --> 00:02:33.420
So instead of find all we see that under GBH repository,

00:02:33.420 --> 00:02:34.900
we have the list.

00:02:34.900 --> 00:02:44.390
Find all that we can properly use instead off the a terrible find all from the Carod

00:02:44.390 --> 00:02:45.120
repository.

00:02:45.120 --> 00:02:48.500
So now the should work,

00:02:48.500 --> 00:02:49.550
as expected.

00:02:49.550 --> 00:02:52.650
I just started the application.

00:02:52.650 --> 00:03:01.450
Okay,

00:03:01.450 --> 00:03:06.770
so once again,

00:03:06.770 --> 00:03:13.890
I've done some lively factory ization for you to show how the final should be properly used

00:03:13.890 --> 00:03:13.890
.

00:03:13.890 --> 00:03:21.270
I'm invoking the final method and by default,

00:03:21.270 --> 00:03:24.930
there are no users into the database,

00:03:24.930 --> 00:03:28.550
so it will return on the list of users.

00:03:28.550 --> 00:03:36.080
Since please recall that we don't use anymore the static list off users.

00:03:36.080 --> 00:03:39.730
But instead we use the user repository toe,

00:03:39.730 --> 00:03:41.050
find our user,

00:03:41.050 --> 00:03:44.320
are our list of users from the database

