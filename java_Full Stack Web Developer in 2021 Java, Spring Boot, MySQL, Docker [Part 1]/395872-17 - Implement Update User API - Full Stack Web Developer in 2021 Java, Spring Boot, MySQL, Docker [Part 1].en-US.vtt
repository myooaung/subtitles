WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.350
under these video,

00:00:01.350 --> 00:00:05.920
let's create together the final method for our karate P.

00:00:05.920 --> 00:00:10.450
I so does go on there,

00:00:10.450 --> 00:00:13.800
calm that service user service.

00:00:13.800 --> 00:00:17.400
And over here,

00:00:17.400 --> 00:00:20.400
let's set up when you met,

00:00:20.400 --> 00:00:30.750
called Update that will return on optional off user.

00:00:30.750 --> 00:00:40.250
And as arguments it will receive the user that will be updated.

00:00:40.250 --> 00:00:45.850
Okay,

00:00:45.850 --> 00:00:55.350
lets more under user service time peel and implement the new method.

00:00:55.350 --> 00:01:06.730
Let's move it above a bit right here.

00:01:06.730 --> 00:01:07.340
Okay,

00:01:07.340 --> 00:01:08.050
it's good,

00:01:08.050 --> 00:01:16.550
and we don't want to return more or anything related to this.

00:01:16.550 --> 00:01:23.580
But we also need to check if the user experience and under our list,

00:01:23.580 --> 00:01:32.050
and we can use something like this just copy place from the delete method.

00:01:32.050 --> 00:01:39.530
So this will check if our users list will contain the user that we want.

00:01:39.530 --> 00:01:42.740
What date and return the optional.

00:01:42.740 --> 00:01:43.850
That user.

00:01:43.850 --> 00:01:47.030
Ah,

00:01:47.030 --> 00:01:50.290
this should be used or that get I d.

00:01:50.290 --> 00:01:51.950
Okay.

00:01:51.950 --> 00:02:02.150
And if use the optional this present,

00:02:02.150 --> 00:02:10.770
we can extract the user from the user optional.

00:02:10.770 --> 00:02:15.150
Let's do this as 1/4 step.

00:02:15.150 --> 00:02:27.450
Use the optional that get and we need to Very far,

00:02:27.450 --> 00:02:37.060
which fields have been updated for the user that we receive as metadata argument so if user

00:02:37.060 --> 00:02:38.550
get force name,

00:02:38.550 --> 00:02:40.940
it's not equal.

00:02:40.940 --> 00:02:41.680
Tono.

00:02:41.680 --> 00:02:46.150
It means that the user force name has been updated.

00:02:46.150 --> 00:02:59.510
So said the existing user New Force name as user that get forced Name a similar process for

00:02:59.510 --> 00:03:00.530
the users.

00:03:00.530 --> 00:03:11.750
Last name Same technique will use such as existing User said the last name.

00:03:11.750 --> 00:03:17.390
Well,

00:03:17.390 --> 00:03:19.620
we received the value from the user.

00:03:19.620 --> 00:03:20.450
Last name.

00:03:20.450 --> 00:03:27.750
We have two more properties to set up aging country.

00:03:27.750 --> 00:03:32.210
So if user age it's not equal.

00:03:32.210 --> 00:03:43.400
Tono existing user set age will be user Get age in the final property.

00:03:43.400 --> 00:03:48.930
This is for country,

00:03:48.930 --> 00:03:54.150
so users get country.

00:03:54.150 --> 00:03:56.500
It's equal,

00:03:56.500 --> 00:04:04.250
it's not equal to no existing user said Country will be the user that get country.

00:04:04.250 --> 00:04:14.950
Now we need toe update Somehow the users list with the new user.

00:04:14.950 --> 00:04:21.610
But for this we can use on Internet of approach,

00:04:21.610 --> 00:04:36.410
such as very moving the user that we found from the list and basically re adding the user

00:04:36.410 --> 00:04:37.910
at the end off the list.

00:04:37.910 --> 00:04:43.560
Let's go with something much harder.

00:04:43.560 --> 00:04:47.000
Let's say so.

00:04:47.000 --> 00:05:03.460
Users least that stream that's filter on the list off users and let's go with this now and

00:05:03.460 --> 00:05:07.050
we need to negate the operation here.

00:05:07.050 --> 00:05:11.750
So were we were received.

00:05:11.750 --> 00:05:26.390
Only the users that don't have the who's our i d received US method argument and we need to

00:05:26.390 --> 00:05:28.310
create a new collection.

00:05:28.310 --> 00:05:31.000
So Collector says,

00:05:31.000 --> 00:05:46.760
to least and now we have created our new users list and on the user's least just add the

00:05:46.760 --> 00:05:48.130
existing user.

00:05:48.130 --> 00:05:48.810
Basically,

00:05:48.810 --> 00:05:51.130
this existing user with will be,

00:05:51.130 --> 00:05:51.770
in fact,

00:05:51.770 --> 00:05:59.750
top dated user so we can format a beat,

00:05:59.750 --> 00:06:08.050
this cold strain filter and now the collect operation.

00:06:08.050 --> 00:06:14.350
Okay.

00:06:14.350 --> 00:06:20.850
And we need to return the existing user.

00:06:20.850 --> 00:06:26.910
And also actually,

00:06:26.910 --> 00:06:29.720
we need to return an optional here.

00:06:29.720 --> 00:06:39.650
So let's do something like this optional off existing user.

00:06:39.650 --> 00:06:43.650
And if the user was not present,

00:06:43.650 --> 00:06:49.350
we return on optional off empty.

00:06:49.350 --> 00:06:57.550
Let's do something like this so optional dot empty and that's basically it.

00:06:57.550 --> 00:07:06.510
So K users list will be updated with the new.

00:07:06.510 --> 00:07:15.450
Yours are where they told the properties that are present in the user provided as argument

00:07:15.450 --> 00:07:19.050
and okay,

00:07:19.050 --> 00:07:21.550
we need to create Ah,

00:07:21.550 --> 00:07:25.260
you met that under our controller.

00:07:25.260 --> 00:07:31.150
Let's call it put mapping.

00:07:31.150 --> 00:07:41.180
Since this Ah,

00:07:41.180 --> 00:07:51.450
the statement this required for STP I to ah be work with the put operation,

00:07:51.450 --> 00:07:57.950
so slash update This were Returner Response Entity.

00:07:57.950 --> 00:08:08.840
The update method created similar to the add operation will have a response.

00:08:08.840 --> 00:08:09.520
Body off.

00:08:09.520 --> 00:08:17.440
User user You can see that we didn't set up the varied operation here since valid The

00:08:17.440 --> 00:08:19.600
statement here,

00:08:19.600 --> 00:08:29.350
since we will allow the update Operation toe not sit all the mandatory properties.

00:08:29.350 --> 00:08:38.550
So no if from the user service update method,

00:08:38.550 --> 00:08:43.050
if we got the optional off user,

00:08:43.050 --> 00:08:53.390
we're returning a response in teen entity off user with optional Fuser Thought get And the

00:08:53.390 --> 00:09:00.200
http state to school does okay not content.

00:09:00.200 --> 00:09:00.650
Sorry.

00:09:00.650 --> 00:09:06.050
And if not,

00:09:06.050 --> 00:09:15.150
we return no response entity with void in a city with status that not found.

00:09:15.150 --> 00:09:21.040
Okay,

00:09:21.040 --> 00:09:23.850
so we're are in a good state,

00:09:23.850 --> 00:09:32.650
so we will just start the application once again.

00:09:32.650 --> 00:09:37.310
As I told you guys,

00:09:37.310 --> 00:09:43.020
we did not have to set up the valid statement under our request.

00:09:43.020 --> 00:09:48.550
Since we're allowed the user Toby updated turns off first name,

00:09:48.550 --> 00:09:49.910
last name,

00:09:49.910 --> 00:09:51.250
whatever we want.

00:09:51.250 --> 00:10:01.850
So we can go on their postman and create a new request less college Update a user.

00:10:01.850 --> 00:10:08.450
Let's change the operation Toe put.

00:10:08.450 --> 00:10:20.900
This will be invoked by local host 80 80 AP I users update I was just save for now and

00:10:20.900 --> 00:10:31.900
let's first in photo find all AP I You can see that for the i d.

00:10:31.900 --> 00:10:32.710
With one.

00:10:32.710 --> 00:10:34.340
We can cope.

00:10:34.340 --> 00:10:45.430
Replace that state month go under our update operation for Body Select J Son and Kobe Paste

00:10:45.430 --> 00:10:45.430
.

00:10:45.430 --> 00:10:46.150
Here.

00:10:46.150 --> 00:10:52.050
Let's change the age 28.

00:10:52.050 --> 00:10:54.170
Extend off.

00:10:54.170 --> 00:10:56.250
24 will have 28.

00:10:56.250 --> 00:11:00.690
Let's involve the rest.

00:11:00.690 --> 00:11:01.410
AP I.

00:11:01.410 --> 00:11:07.850
We can see that toe for no content has Bean returned.

00:11:07.850 --> 00:11:11.740
And if we will walk once again,

00:11:11.740 --> 00:11:12.940
find all AP,

00:11:12.940 --> 00:11:16.820
I you can see that.

00:11:16.820 --> 00:11:17.040
No,

00:11:17.040 --> 00:11:17.190
no,

00:11:17.190 --> 00:11:17.520
no,

00:11:17.520 --> 00:11:21.060
that's not the one we can see that the bottom.

00:11:21.060 --> 00:11:29.150
Since the list has been updated with a new user,

00:11:29.150 --> 00:11:35.860
we saw that the age has been set up to 28.

00:11:35.860 --> 00:11:37.150
Well,

00:11:37.150 --> 00:11:48.350
we can go back and just toe sorting for our final AP I using a comparator that will compare

00:11:48.350 --> 00:11:52.610
our users based by I d.

00:11:52.610 --> 00:11:53.720
So,

00:11:53.720 --> 00:12:05.450
even if we add a new user at the end of the list one way out dated on the final AP I this

00:12:05.450 --> 00:12:09.150
will be shown as sorted by by 80.

00:12:09.150 --> 00:12:13.550
So collect collectors to list.

00:12:13.550 --> 00:12:18.650
Okay,

00:12:18.650 --> 00:12:35.300
let's restart the application once again and see how things go now were involved.

00:12:35.300 --> 00:12:43.450
The find all AP I go An update on user the same user with Ah,

00:12:43.450 --> 00:12:54.800
I do want an age 28 invoking the final AP I Once again we'll see that the list is sorted by

00:12:54.800 --> 00:12:58.250
D and ages 28 for the 1st 2 user.

