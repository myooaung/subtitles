WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.480
when we run the application.

00:00:01.480 --> 00:00:08.730
We saw that before printing this line that is a claim number 20 at line number 18 itself

00:00:08.730 --> 00:00:10.690
days three lines were printed,

00:00:10.690 --> 00:00:16.310
which means that the function done media will as well as jelly BCD will have already been

00:00:16.310 --> 00:00:21.260
called When we say in line number 20 to give me a being object over here,

00:00:21.260 --> 00:00:25.810
Spring is not gonna call the DA media war Judy Me sitio again,

00:00:25.810 --> 00:00:30.460
but instead it's simply going toe return the object from here.

00:00:30.460 --> 00:00:32.270
So as you can see at this time,

00:00:32.270 --> 00:00:37.820
deal already corresponds toe j BBC Diego And we're simply getting the reference off.

00:00:37.820 --> 00:00:39.590
This just to prove the point.

00:00:39.590 --> 00:00:43.170
If I go here and then call this one more time,

00:00:43.170 --> 00:00:47.390
let's at this time and said the war two equals Toe city extort.

00:00:47.390 --> 00:00:48.720
Get bean on.

00:00:48.720 --> 00:00:55.250
We'll call Chili BCT will itself here and we want an instance off product the water class,

00:00:55.250 --> 00:00:56.880
one of the other.

00:00:56.880 --> 00:01:00.810
The beauty is that the one who has not been created in Java.

00:01:00.810 --> 00:01:07.740
Every variable must be declared so we can press command one on Mac control one on other

00:01:07.740 --> 00:01:10.930
computers toe get an intelligence tow,

00:01:10.930 --> 00:01:12.250
create a local variable.

00:01:12.250 --> 00:01:14.560
This is called Quick Fix To get a quick fix,

00:01:14.560 --> 00:01:16.070
press control one of mine one,

00:01:16.070 --> 00:01:17.090
depending on your computer.

00:01:17.090 --> 00:01:17.920
Press enter,

00:01:17.920 --> 00:01:20.110
you'll see that automatically.

00:01:20.110 --> 00:01:25.450
It is product available because the return value off this happens to be a product to you.

00:01:25.450 --> 00:01:26.770
Anyways,

00:01:26.770 --> 00:01:28.820
if you happen to look at this now,

00:01:28.820 --> 00:01:32.500
what will happen is that we got a deal or two here,

00:01:32.500 --> 00:01:36.920
which is also referencing toe the same object.

00:01:36.920 --> 00:01:42.170
So the two references single object they type your D A.

00:01:42.170 --> 00:01:49.220
War two is equal to zero is and then you can check deal toe double it puts to deal.

00:01:49.220 --> 00:01:53.980
They should give me true because both of them are finding to the same location.

00:01:53.980 --> 00:01:55.890
So just to check this out,

00:01:55.890 --> 00:01:59.920
let's run the program and you will see that it says deal two equals two.

00:01:59.920 --> 00:02:01.280
Deol is true,

00:02:01.280 --> 00:02:04.600
but sometimes you may want tohave it other ways.

00:02:04.600 --> 00:02:05.540
For example,

00:02:05.540 --> 00:02:07.480
every time you say give me a bean,

00:02:07.480 --> 00:02:09.300
you want a new being object?

00:02:09.300 --> 00:02:16.510
This is only possible if you mark the being GBC deal All which are being you're looking for

00:02:16.510 --> 00:02:18.540
as a for the night.

00:02:18.540 --> 00:02:21.630
Now the way you do is you go toe up conflict.

00:02:21.630 --> 00:02:22.150
One.

00:02:22.150 --> 00:02:23.650
Onda uh,

00:02:23.650 --> 00:02:25.690
let's say this is the one that we're looking at.

00:02:25.690 --> 00:02:33.030
We can annotate this as act scope and scope has two options here at this time.

00:02:33.030 --> 00:02:34.380
We can say Singleton,

00:02:34.380 --> 00:02:38.150
which is the default value for scope at this time,

00:02:38.150 --> 00:02:41.360
and the other option is through today.

00:02:41.360 --> 00:02:42.860
Now,

00:02:42.860 --> 00:02:47.250
since we were working on a annotation conflict application context,

00:02:47.250 --> 00:02:49.310
these are the only two scoops that are they.

00:02:49.310 --> 00:02:52.050
But when you're working with spring Web applications,

00:02:52.050 --> 00:02:58.000
then you'll also have scopes like request session and globalization.

00:02:58.000 --> 00:03:00.480
So now the scope is prototype.

00:03:00.480 --> 00:03:03.240
There'll be a significant change in its behaviour.

00:03:03.240 --> 00:03:04.020
Let's save this.

00:03:04.020 --> 00:03:05.240
Go back to a program,

00:03:05.240 --> 00:03:06.160
run the same.

00:03:06.160 --> 00:03:07.920
Keep an eye on this line.

00:03:07.920 --> 00:03:14.550
You'll see that the GBC Deol is not printed before this particular line.

00:03:14.550 --> 00:03:18.820
And that's because when the spring container Waas manufactured,

00:03:18.820 --> 00:03:22.050
there is only dumb media war that God's created.

00:03:22.050 --> 00:03:24.970
Because Jerry BCD a war is a prototype,

00:03:24.970 --> 00:03:28.560
it is not even inside this particular container.

00:03:28.560 --> 00:03:32.590
So dear will reference to one single object,

00:03:32.590 --> 00:03:35.040
and there were two corresponds to another.

00:03:35.040 --> 00:03:36.940
Objects with these two don't exist,

00:03:36.940 --> 00:03:39.250
and this object also doesn't exist anymore,

00:03:39.250 --> 00:03:43.690
so spring will not be maintaining the lifecycle off protein beans,

00:03:43.690 --> 00:03:44.880
meaning off that is,

00:03:44.880 --> 00:03:47.580
If you say deal equals Tono,

00:03:47.580 --> 00:03:50.440
then this object is ready for garbage collection.

00:03:50.440 --> 00:03:54.360
Deal two equals to know our Dior two equals to something else.

00:03:54.360 --> 00:03:56.860
This object will also be ready for God,

00:03:56.860 --> 00:04:00.850
which collection but is in the previous case when it's a singleton.

00:04:00.850 --> 00:04:02.850
If Dio equals to know,

00:04:02.850 --> 00:04:06.750
Spring would still maintain a copy off the being object itself.

00:04:06.750 --> 00:04:08.160
You can also see here,

00:04:08.160 --> 00:04:08.580
dear,

00:04:08.580 --> 00:04:09.680
were two equals.

00:04:09.680 --> 00:04:14.190
Studio is also false because it corresponds toe to different objects.

00:04:14.190 --> 00:04:14.810
Right now,

00:04:14.810 --> 00:04:16.690
when being is Singleton,

00:04:16.690 --> 00:04:20.050
let's go back door court here and changes to single done,

00:04:20.050 --> 00:04:21.350
which is by default.

00:04:21.350 --> 00:04:25.960
You can also say that the bean has to be instance,

00:04:25.960 --> 00:04:29.150
rated only on first request.

00:04:29.150 --> 00:04:30.210
For example,

00:04:30.210 --> 00:04:31.150
at this time,

00:04:31.150 --> 00:04:33.200
if you go here on the run,

00:04:33.200 --> 00:04:34.170
the application,

00:04:34.170 --> 00:04:35.510
you will see that,

00:04:35.510 --> 00:04:37.570
irrespective of whether you ask,

00:04:37.570 --> 00:04:39.210
are not dumb Media.

00:04:39.210 --> 00:04:42.750
Waas called Julie Meese video also what's called,

00:04:42.750 --> 00:04:47.970
but we never made us off this damn medium or a tall in order to tell the Sprinkle dinner

00:04:47.970 --> 00:04:51.050
that they create that being only if it is needed.

00:04:51.050 --> 00:04:57.600
But still it is a single done you can mark a singleton being as at Lazy,

00:04:57.600 --> 00:05:02.410
which makes the bean qualified for lazy in Stan Shih ation.

00:05:02.410 --> 00:05:07.270
So let's save this and then go back over here on then run this.

00:05:07.270 --> 00:05:11.530
You'll see that before the line there is no damn medial,

00:05:11.530 --> 00:05:13.910
but before the line there is a jelly bean video,

00:05:13.910 --> 00:05:16.200
because this is an eager instant station.

00:05:16.200 --> 00:05:22.690
But if I go to the app Kontic one copy and paste the same thing for the second being,

00:05:22.690 --> 00:05:23.450
also,

00:05:23.450 --> 00:05:26.560
you'll see that before this particular line,

00:05:26.560 --> 00:05:26.870
that is,

00:05:26.870 --> 00:05:30.560
when the string containers created no beans are created.

00:05:30.560 --> 00:05:31.950
He wanted their singleton.

00:05:31.950 --> 00:05:34.380
But on the first request here,

00:05:34.380 --> 00:05:34.880
Jerry,

00:05:34.880 --> 00:05:36.760
be CDO function gets called,

00:05:36.760 --> 00:05:40.950
which means that we get a reference of the singleton being here.

00:05:40.950 --> 00:05:45.260
But when I called this second time being already exists,

00:05:45.260 --> 00:05:49.310
this being a single done the same references given to this again.

00:05:49.310 --> 00:05:54.480
But all those things happen at a later point in time when you actually ask for being so

00:05:54.480 --> 00:05:59.500
let's run the same thing again and check it out and you'll see that jelly BCD,

00:05:59.500 --> 00:06:01.740
always called only once dear,

00:06:01.740 --> 00:06:05.930
were to eat same SDO because there are two references.

00:06:05.930 --> 00:06:07.250
Single object

