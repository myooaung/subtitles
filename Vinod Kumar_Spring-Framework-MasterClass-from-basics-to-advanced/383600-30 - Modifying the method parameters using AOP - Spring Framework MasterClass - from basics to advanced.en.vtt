WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.850
Let's take a step back and understand what happens when we run this particular program.

00:00:04.850 --> 00:00:12.310
So the first thing is I'm creating a springtime dinner supplying this app con trick for So

00:00:12.310 --> 00:00:13.900
this is how it's gonna look like now.

00:00:13.900 --> 00:00:17.090
We have a JBM when we're under program New.

00:00:17.090 --> 00:00:20.450
An addition Conflict Application Context created this pink and data,

00:00:20.450 --> 00:00:27.920
and we assigned that reference toe City X and we're supplying AB conflict for So let's go

00:00:27.920 --> 00:00:31.320
toe up conflict for and see what's there because of the components.

00:00:31.320 --> 00:00:34.450
Can were no loading components from two packages.

00:00:34.450 --> 00:00:35.580
Quarter note.

00:00:35.580 --> 00:00:36.350
That deal,

00:00:36.350 --> 00:00:43.090
which has got two components Number one is having a template product deal because we mark

00:00:43.090 --> 00:00:44.050
it as a repository.

00:00:44.050 --> 00:00:48.720
And the same thing is with restrict toe GBC template product deal.

00:00:48.720 --> 00:00:51.070
Soto Beans are created over here.

00:00:51.070 --> 00:00:53.450
Let's call them as JT deal.

00:00:53.450 --> 00:00:57.410
Andi hits todo Next.

00:00:57.410 --> 00:01:02.690
We're creating a being called data source that is required by Judy Deal.

00:01:02.690 --> 00:01:04.050
Let's call it as DS.

00:01:04.050 --> 00:01:06.450
Then we have a jelly BC template.

00:01:06.450 --> 00:01:09.150
Let's call it us Judy.

00:01:09.150 --> 00:01:16.100
Then we have local session factory being let's call it us a less of me and then we have

00:01:16.100 --> 00:01:17.860
here a Highlander template.

00:01:17.860 --> 00:01:23.150
Let's call it us hedge t Also because of the package quarter,

00:01:23.150 --> 00:01:29.030
you know dot aspect if you go to the aspects over here we have my custom aspect of Java is

00:01:29.030 --> 00:01:32.080
also a competent that is also loaded somewhere here.

00:01:32.080 --> 00:01:34.250
Let's call it us aspect.

00:01:34.250 --> 00:01:39.470
Once on the beans are instance created Now spring starts the dependency injection.

00:01:39.470 --> 00:01:44.870
The first thing is DS are the leader source is injected tau this jelly busy template,

00:01:44.870 --> 00:01:48.750
then the GBC template is wild toe jet video.

00:01:48.750 --> 00:01:50.250
Similarly,

00:01:50.250 --> 00:01:56.220
the data source is injected Tau our local session factory bean which is then injected Tau

00:01:56.220 --> 00:02:01.350
Ivan in template and then the having a template is injected or wild with our heads studio.

00:02:01.350 --> 00:02:05.250
And because of this enable aspect you are a proxy.

00:02:05.250 --> 00:02:07.260
There'll be another being here,

00:02:07.260 --> 00:02:09.060
which is from Aspect J.

00:02:09.060 --> 00:02:10.350
Let's call it US e J.

00:02:10.350 --> 00:02:12.220
Once it is instant created,

00:02:12.220 --> 00:02:18.210
it starts scanning then that spin container for only being smart dust aspect.

00:02:18.210 --> 00:02:24.060
And the only one that is annotated as at aspect is this particular being and that being has

00:02:24.060 --> 00:02:27.580
some point expressions and joined points aspect.

00:02:27.580 --> 00:02:32.450
J starts looking for any off the beans matching the aspect J expressions.

00:02:32.450 --> 00:02:34.720
Our hits T dia will Jadidi.

00:02:34.720 --> 00:02:39.350
Will both of them matched that a proxy object is no created or here,

00:02:39.350 --> 00:02:42.250
and the proxy object will now have references.

00:02:42.250 --> 00:02:48.840
Toe put the JTTF go on the studio and the proxy also has a reference to the aspect class,

00:02:48.840 --> 00:02:54.630
because it has other ways is so any time if you are creating a deal more valuable here off

00:02:54.630 --> 00:02:54.960
product,

00:02:54.960 --> 00:02:55.580
Debatable.

00:02:55.580 --> 00:02:57.120
Whether you ask for J d.

00:02:57.120 --> 00:02:58.970
D will our head studio,

00:02:58.970 --> 00:03:03.090
the proxy object is going to be given to you and every function that you're calling using

00:03:03.090 --> 00:03:04.670
the deal that goes,

00:03:04.670 --> 00:03:05.860
Why are the proxy?

00:03:05.860 --> 00:03:08.460
And then the proxy will check in the aspect.

00:03:08.460 --> 00:03:10.550
Do we have any advice for that?

00:03:10.550 --> 00:03:12.450
If there is any before it weighs,

00:03:12.450 --> 00:03:14.090
that gets executed,

00:03:14.090 --> 00:03:17.150
then the actual function is delegated to the deal,

00:03:17.150 --> 00:03:19.920
comes back and then checks again.

00:03:19.920 --> 00:03:21.930
Is there any after returning advice?

00:03:21.930 --> 00:03:25.080
If there is any that gets executed after that,

00:03:25.080 --> 00:03:27.840
the return value is given back to the client.

00:03:27.840 --> 00:03:34.770
So every time you call a function because it goes to the proxy proxy can also change the

00:03:34.770 --> 00:03:36.600
parameters that is supposed to be supplied.

00:03:36.600 --> 00:03:39.560
Toe the hits TD of all in this demo.

00:03:39.560 --> 00:03:43.950
Let's have a look at it as how we can alter the arguments that is supposed to be passed on

00:03:43.950 --> 00:03:45.550
to the target object.

00:03:45.550 --> 00:03:47.620
So let's go to our program first.

00:03:47.620 --> 00:03:52.550
Here we have a scenario where I'm supposed to supply the min and max,

00:03:52.550 --> 00:03:54.180
and at this point in time,

00:03:54.180 --> 00:03:56.150
minutes 50 max is 200.

00:03:56.150 --> 00:03:58.380
And when we run this actual court,

00:03:58.380 --> 00:04:03.340
you will see that it's going to say that our own six products within that particular price

00:04:03.340 --> 00:04:09.050
range and this is where we see that before executing,

00:04:09.050 --> 00:04:10.740
get products by price range.

00:04:10.740 --> 00:04:12.720
The arguments are 50 and 200.

00:04:12.720 --> 00:04:15.650
There are six products between 50 and $200.

00:04:15.650 --> 00:04:17.280
So if I say here,

00:04:17.280 --> 00:04:20.360
mill equals to $200 on Mexico,

00:04:20.360 --> 00:04:26.750
stole $50 then make the same function called again and bring the result this time when

00:04:26.750 --> 00:04:29.020
hibernate actually executives the quality.

00:04:29.020 --> 00:04:31.680
The hibernate quarters are converted into SQL queries,

00:04:31.680 --> 00:04:36.050
and SQL expects the men to be smaller than articles to Max.

00:04:36.050 --> 00:04:37.850
Since that is not so here,

00:04:37.850 --> 00:04:42.720
it's going to give me that there are zero products between that particular price range.

00:04:42.720 --> 00:04:48.580
Let's give it a try by executing the same and this American see before executing get

00:04:48.580 --> 00:04:50.050
products by price range.

00:04:50.050 --> 00:04:58.050
The arguments are 250 it says that there are zero products between $200.50 dollars using LP

00:04:58.050 --> 00:04:58.050
.

00:04:58.050 --> 00:05:02.670
By the time you actually passed the values and it gets received over here,

00:05:02.670 --> 00:05:06.550
we can ensure that minutes always less than articles to max.

00:05:06.550 --> 00:05:09.700
So let's goto our my custom aspect of Java.

00:05:09.700 --> 00:05:13.200
So this time the method signature is going to be a little bit different.

00:05:13.200 --> 00:05:16.080
The function should return and object.

00:05:16.080 --> 00:05:19.580
This would be the return value from the actual target function.

00:05:19.580 --> 00:05:22.050
Let's call it as scrap inputs.

00:05:22.050 --> 00:05:28.180
And then we write an argument off something called Proceeding Giant Point,

00:05:28.180 --> 00:05:30.990
which is a subtype off giant point.

00:05:30.990 --> 00:05:32.430
Let's call it S P J P.

00:05:32.430 --> 00:05:33.540
And for the time being,

00:05:33.540 --> 00:05:34.860
let's say return none.

00:05:34.860 --> 00:05:36.930
Let's see what is there in the BJP.

00:05:36.930 --> 00:05:43.400
So if I select this on press function key for you'll see the type hierarchy and in the iPad

00:05:43.400 --> 00:05:43.400
,

00:05:43.400 --> 00:05:49.090
Or you can see that the proceeding giant Point inherit from giant point on it has a

00:05:49.090 --> 00:05:51.880
function called proceed and using this function,

00:05:51.880 --> 00:05:55.000
you can actually in work the target function.

00:05:55.000 --> 00:05:56.310
And using this function,

00:05:56.310 --> 00:05:59.110
you can ignore the target function with the arguments on.

00:05:59.110 --> 00:06:03.720
So and this is the modified argument that we can do If you look at the giant point,

00:06:03.720 --> 00:06:05.680
we don't have this function called Proceed,

00:06:05.680 --> 00:06:10.750
so we won't be ableto in walk our delegate the request to the target function.

00:06:10.750 --> 00:06:13.540
So that is the reason why we're using proceeding joint point.

00:06:13.540 --> 00:06:16.520
If you use the proceeding joint point as a dependency,

00:06:16.520 --> 00:06:20.410
the function must be annotated as at the rate around.

00:06:20.410 --> 00:06:23.750
Any other annotation you use here will result into another.

00:06:23.750 --> 00:06:31.520
So I'm gonna say here and there it don't execution off that the written type and the

00:06:31.520 --> 00:06:34.140
modifiers could be anything Corder to be,

00:06:34.140 --> 00:06:40.930
no doubt be able is the package product deal are you can say star deal because that's the

00:06:40.930 --> 00:06:42.000
only one we have.

00:06:42.000 --> 00:06:47.900
You can even say any function as long as the arguments are off Double day or you can say

00:06:47.900 --> 00:06:50.810
get star as a wildcard character on here.

00:06:50.810 --> 00:06:55.060
You can say that the arguments must be off double on the double,

00:06:55.060 --> 00:07:00.310
which means that if there is any other argument and it's not get function,

00:07:00.310 --> 00:07:04.100
this particular interceptor will never come into picture.

00:07:04.100 --> 00:07:06.330
So in our product be able.

00:07:06.330 --> 00:07:11.620
The only function that matches the signature happens to be the one get products by price

00:07:11.620 --> 00:07:12.110
range,

00:07:12.110 --> 00:07:13.850
which takes two double perimeter.

00:07:13.850 --> 00:07:14.920
Now that we have here,

00:07:14.920 --> 00:07:19.670
let's import this around by pressing command shift or control shift ball using the

00:07:19.670 --> 00:07:20.090
proceeding.

00:07:20.090 --> 00:07:20.810
Giant point.

00:07:20.810 --> 00:07:22.330
We can now say P J P.

00:07:22.330 --> 00:07:23.710
Darche get arcs.

00:07:23.710 --> 00:07:25.450
This is the current arguments.

00:07:25.450 --> 00:07:32.020
Let us end this toe a variable called ARBs on art is gonna be an object or a Let's move the

00:07:32.020 --> 00:07:37.390
cursor on the other line and say Create a local variable arcs are you can press command one

00:07:37.390 --> 00:07:40.050
or control one and press enter to get the same thing.

00:07:40.050 --> 00:07:44.910
I know that the unusual elements off the arts are to double variables.

00:07:44.910 --> 00:07:46.180
If they're not doubled,

00:07:46.180 --> 00:07:48.540
then this particular interception will never happen.

00:07:48.540 --> 00:07:54.470
So I can take it for granted and then say double many equals tow ARDS off zero that's going

00:07:54.470 --> 00:07:55.180
to give an editor.

00:07:55.180 --> 00:07:56.810
So I'm gonna cast it.

00:07:56.810 --> 00:08:02.110
And there is no hesitation in tons of casting because this is always going to be a double

00:08:02.110 --> 00:08:05.390
because off this particular signature here and the same thing.

00:08:05.390 --> 00:08:07.940
I'll say Double Max equals toe.

00:08:07.940 --> 00:08:13.570
Cast it in at once and I say parks off one and I don't have to worry about arraigned

00:08:13.570 --> 00:08:17.190
excepto bones exception because if there are no two arguments,

00:08:17.190 --> 00:08:19.390
it will never come to this particular location.

00:08:19.390 --> 00:08:24.450
It also I know that there are always gonna be two arguments are zero and one exists,

00:08:24.450 --> 00:08:27.950
and I know that are zero is a double are one is a double.

00:08:27.950 --> 00:08:34.750
Now I can check your if mean happens to be greater than Max Then I'm gonna say here arcs

00:08:34.750 --> 00:08:41.430
equals toe new object and then supply your Max and Min where I'm pleading a new array in

00:08:41.430 --> 00:08:42.600
the reverse order.

00:08:42.600 --> 00:08:42.780
Now,

00:08:42.780 --> 00:08:46.950
this is the arguments that I need to supply to the target function.

00:08:46.950 --> 00:08:53.200
I cannot say your return p j b dot proceed and then supply this arcs.

00:08:53.200 --> 00:08:58.010
The error here says that the proceed function throws an object off trouble.

00:08:58.010 --> 00:09:02.850
So let's are throws declaration to our function and the other is no salt.

00:09:02.850 --> 00:09:08.910
Let's say this court on go door program around the same and this time you'll see by the

00:09:08.910 --> 00:09:12.800
time the target function this is the arguments it has already been into changed,

00:09:12.800 --> 00:09:13.800
and this is the output.

00:09:13.800 --> 00:09:18.770
From the first time you can see that we got before executing get products by price range.

00:09:18.770 --> 00:09:23.450
The arguments were 50 and 200 on that is actually saying six products.

00:09:23.450 --> 00:09:28.820
This is the second time on notice it is also 50 and 200.

00:09:28.820 --> 00:09:31.670
Even though I have said here 250 on,

00:09:31.670 --> 00:09:34.690
that's because the owner roadways has already scrapped it.

00:09:34.690 --> 00:09:36.770
And then before our boys gets executed,

00:09:36.770 --> 00:09:37.880
that's the reason we're seeing.

00:09:37.880 --> 00:09:38.440
But of course,

00:09:38.440 --> 00:09:43.550
my output still says that there are six products between $200 on $50.

00:09:43.550 --> 00:09:50.050
So to summarize proceeding Joint Point follows us toe proceed to the actual target function

00:09:50.050 --> 00:09:50.050
.

00:09:50.050 --> 00:09:52.190
We can also supply modified Washington.

00:09:52.190 --> 00:09:53.050
The argument,

00:09:53.050 --> 00:10:00.020
plus the proceeding Giant point must be used in 100 ways and not in any other kind of

00:10:00.020 --> 00:10:00.650
advice.

