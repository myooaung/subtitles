WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.610
Now that we have a fair idea off how jelly busy template works,

00:00:03.610 --> 00:00:04.360
let us go on.

00:00:04.360 --> 00:00:09.370
Add more functionalities to our deal interface the product deal.

00:00:09.370 --> 00:00:10.270
Typically right?

00:00:10.270 --> 00:00:11.860
Credit operations enquiries.

00:00:11.860 --> 00:00:12.970
As I mentioned earlier,

00:00:12.970 --> 00:00:14.750
we will our many functions over here,

00:00:14.750 --> 00:00:17.610
which will be used to tour this particular training on.

00:00:17.610 --> 00:00:19.560
We will also follow best practices.

00:00:19.560 --> 00:00:25.120
So the number one function I want to have here is public wide add product.

00:00:25.120 --> 00:00:31.940
This is supposed to take product as a object and supposed toe through an exception.

00:00:31.940 --> 00:00:37.050
Calling Diego exception we don't have the product loss are that Dio exception.

00:00:37.050 --> 00:00:37.330
Plus,

00:00:37.330 --> 00:00:41.350
that's really getting an error and the product loss that we should create,

00:00:41.350 --> 00:00:45.750
which represents a record from the florets table over here.

00:00:45.750 --> 00:00:50.270
And this has got the fields like product idea product name supply,

00:00:50.270 --> 00:00:51.600
ready category I d.

00:00:51.600 --> 00:00:54.060
Supply ready is a foreign Kato.

00:00:54.060 --> 00:00:55.710
The supply unstable here,

00:00:55.710 --> 00:00:59.450
and the category idea is a foreign key to the category stable.

00:00:59.450 --> 00:01:02.070
So let's go and clear these fields over there.

00:01:02.070 --> 00:01:04.620
So I'm gonna go create a product last first,

00:01:04.620 --> 00:01:06.570
and this is gonna be an entity class,

00:01:06.570 --> 00:01:07.550
not ideal.

00:01:07.550 --> 00:01:07.840
Also,

00:01:07.840 --> 00:01:09.240
since I already have the package,

00:01:09.240 --> 00:01:14.160
I can pros and say that this is gonna belong toe the entity and they're just a regular

00:01:14.160 --> 00:01:15.770
class with fields,

00:01:15.770 --> 00:01:17.300
Summer at the fields,

00:01:17.300 --> 00:01:20.880
private integer product idee on.

00:01:20.880 --> 00:01:30.250
Then we have a product name we have in teacher stuff player I D and a category idea which

00:01:30.250 --> 00:01:32.160
is also India.

00:01:32.160 --> 00:01:33.550
Apart from that,

00:01:33.550 --> 00:01:37.390
we have a string that represents the 20 people unit.

00:01:37.390 --> 00:01:41.250
We have a private double unit price.

00:01:41.250 --> 00:01:46.750
Then we have a private individual units in stop.

00:01:46.750 --> 00:01:51.040
We have units on Arctic.

00:01:51.040 --> 00:01:55.340
There is also a reorder 11.

00:01:55.340 --> 00:01:59.140
I believe we have one more,

00:01:59.140 --> 00:02:06.520
which is a integer discontinued I have on the fields now let's are a default.

00:02:06.520 --> 00:02:07.360
No argument,

00:02:07.360 --> 00:02:07.980
constructor.

00:02:07.980 --> 00:02:11.090
And then you get it.

00:02:11.090 --> 00:02:12.990
Like I said,

00:02:12.990 --> 00:02:18.940
I don't need anything else other than that constructor get a center so they should be good

00:02:18.940 --> 00:02:19.650
enough for me.

00:02:19.650 --> 00:02:21.200
So I'm gonna say this.

00:02:21.200 --> 00:02:24.830
Come back to the product deal and you'll see that data is gone.

00:02:24.830 --> 00:02:30.410
But there is a true it's supposed to be throws over here and now it says that exception is

00:02:30.410 --> 00:02:30.940
not formed.

00:02:30.940 --> 00:02:33.720
So let's go and clear a new class carved out exception.

00:02:33.720 --> 00:02:40.190
This is an exception that each off these functions should throw so that the layer the

00:02:40.190 --> 00:02:45.030
service later that actually cause this function will be able to collect that of exception

00:02:45.030 --> 00:02:47.760
without having to worry about the underlying exception.

00:02:47.760 --> 00:02:48.630
For example,

00:02:48.630 --> 00:02:49.610
done dealing exception.

00:02:49.610 --> 00:02:56.190
Maybe an Iot exception or a example exception or hibernate exception on an SQL exception.

00:02:56.190 --> 00:02:58.750
So your salaries layer doesn't have to worry about that.

00:02:58.750 --> 00:03:00.940
Service Layer will only worry about that.

00:03:00.940 --> 00:03:02.070
It's a dollar exception,

00:03:02.070 --> 00:03:02.690
of course.

00:03:02.690 --> 00:03:06.050
We will be creating a dove exception using a route cost,

00:03:06.050 --> 00:03:08.710
so create the last hour exception.

00:03:08.710 --> 00:03:11.750
And this is going to be part of the doll or be able,

00:03:11.750 --> 00:03:12.570
so that's fine.

00:03:12.570 --> 00:03:16.000
The super class is exception.

00:03:16.000 --> 00:03:18.560
You can also make it other runtime exception.

00:03:18.560 --> 00:03:20.280
As a good practice application,

00:03:20.280 --> 00:03:22.800
developers should throw checked exceptions.

00:03:22.800 --> 00:03:26.150
We can enable this constructors from super close here.

00:03:26.150 --> 00:03:27.840
All I can add this later.

00:03:27.840 --> 00:03:28.270
Also,

00:03:28.270 --> 00:03:29.950
let's go and finish this first.

00:03:29.950 --> 00:03:33.070
First thing is there is a warming litigated off the warning.

00:03:33.070 --> 00:03:36.180
We say our default cereal washing your I D.

00:03:36.180 --> 00:03:40.250
And that's one required for serialization purposes.

00:03:40.250 --> 00:03:43.140
Then we want to add some constructors,

00:03:43.140 --> 00:03:45.370
every other built in exception.

00:03:45.370 --> 00:03:51.020
Classes are nothing but classes with some constructors so somebody can construct an object

00:03:51.020 --> 00:03:54.660
off that class and throw it so everything is in the name.

00:03:54.660 --> 00:03:57.050
There's nothing else in the exception classes.

00:03:57.050 --> 00:04:02.110
So how do we all owe the uses to construct an object on implementer off dear?

00:04:02.110 --> 00:04:08.320
What class may create New Dio exception by not supplying any arguments or by supplying some

00:04:08.320 --> 00:04:09.400
string messages?

00:04:09.400 --> 00:04:14.270
Are by supplying already existing exception object so that we can convert that India

00:04:14.270 --> 00:04:17.920
dialect friction so toe our customers the constructors.

00:04:17.920 --> 00:04:19.380
We can go to source menu,

00:04:19.380 --> 00:04:25.510
generate constructors using super close and then choose what constructors we want.

00:04:25.510 --> 00:04:29.400
We want to be ableto created our exception without any argument.

00:04:29.400 --> 00:04:31.300
This is not required.

00:04:31.300 --> 00:04:33.150
This is also not required.

00:04:33.150 --> 00:04:38.050
This one follows us to create a new dollar exception using a string message.

00:04:38.050 --> 00:04:42.950
But if you're receiving an exception in constructing a dollar exception out of that,

00:04:42.950 --> 00:04:44.550
this is the most important one.

00:04:44.550 --> 00:04:46.790
So let's go and take on Generate,

00:04:46.790 --> 00:04:48.200
and we don't need this to do.

00:04:48.200 --> 00:04:50.550
Let's get it off each off the studios.

00:04:50.550 --> 00:04:57.210
You can also pressed on toward Ito the little like so I'm gonna save this and my deal

00:04:57.210 --> 00:04:58.350
exception is ready.

00:04:58.350 --> 00:05:03.190
Let's go back to the product dio the others are gone has come back and add a second

00:05:03.190 --> 00:05:03.620
function,

00:05:03.620 --> 00:05:05.600
which is gonna be public wide.

00:05:05.600 --> 00:05:08.380
If I already have a product object on.

00:05:08.380 --> 00:05:09.490
I made some changes.

00:05:09.490 --> 00:05:14.310
I should be able to supply and update the product that's gonna test off the product we

00:05:14.310 --> 00:05:14.740
received.

00:05:14.740 --> 00:05:19.050
A product object throws dollar exception,

00:05:19.050 --> 00:05:25.100
and we also should be ableto get a product based on an idea.

00:05:25.100 --> 00:05:26.690
Let's call it S get product.

00:05:26.690 --> 00:05:31.630
We simply supply into jerk product idea on throws.

00:05:31.630 --> 00:05:33.550
The exception Literate.

00:05:33.550 --> 00:05:36.420
A public wide delete product,

00:05:36.420 --> 00:05:39.620
which takes a into your product.

00:05:39.620 --> 00:05:42.560
I d on close dogs.

00:05:42.560 --> 00:05:45.950
Let's create some quite is no number one.

00:05:45.950 --> 00:05:48.550
I should be able to get the list off all the products,

00:05:48.550 --> 00:05:54.670
so we're gonna have a public list from Jabara Butin off product type.

00:05:54.670 --> 00:06:00.150
Let's call it as get all products and throws the exception.

00:06:00.150 --> 00:06:03.850
Get a list off product,

00:06:03.850 --> 00:06:08.960
get products by price range.

00:06:08.960 --> 00:06:10.950
So we supply men.

00:06:10.950 --> 00:06:13.840
Andi Max.

00:06:13.840 --> 00:06:15.930
Through stop exception,

00:06:15.930 --> 00:06:20.250
let's have one more public list off product.

00:06:20.250 --> 00:06:27.040
Get products in category will supply the category idea here,

00:06:27.040 --> 00:06:30.540
so it's a int integer category.

00:06:30.540 --> 00:06:34.250
Idee Onda throws exception again.

00:06:34.250 --> 00:06:37.070
We'll also have one more function.

00:06:37.070 --> 00:06:38.360
Let's copy the holding.

00:06:38.360 --> 00:06:41.030
Paste it so that we don't have toe type again.

00:06:41.030 --> 00:06:42.640
So the name of the function,

00:06:42.640 --> 00:06:42.970
let's say,

00:06:42.970 --> 00:06:43.710
for example,

00:06:43.710 --> 00:06:47.250
we won't get products not in stock.

00:06:47.250 --> 00:06:51.760
So obviously I don't need a perimeter.

00:06:51.760 --> 00:06:55.020
So just want to get the list of products which are currently not in stock.

00:06:55.020 --> 00:06:56.270
Let's that's right.

00:06:56.270 --> 00:06:57.750
One more function that says,

00:06:57.750 --> 00:07:01.520
Let's changes to get products on order.

00:07:01.520 --> 00:07:04.620
So how many products are on hold on order?

00:07:04.620 --> 00:07:06.330
So they throw an exception.

00:07:06.330 --> 00:07:11.010
Let's say we want to get the list off discontinued product so they get discontinued

00:07:11.010 --> 00:07:11.750
products.

00:07:11.750 --> 00:07:14.940
So I don't need Despont.

00:07:14.940 --> 00:07:17.650
I think for our project,

00:07:17.650 --> 00:07:18.860
this should be good enough.

00:07:18.860 --> 00:07:22.940
If we require some more will come back at these functions again.

00:07:22.940 --> 00:07:30.420
Let format this by pressing command shift F R control shift F Save it on now are interfaces

00:07:30.420 --> 00:07:30.420
,

00:07:30.420 --> 00:07:30.920
really?

00:07:30.920 --> 00:07:34.610
But this would not cost problems in two.

00:07:34.610 --> 00:07:36.470
Off the implementations we have,

00:07:36.470 --> 00:07:41.300
you can see that the dummy brother deal says that the class has many functions that it

00:07:41.300 --> 00:07:42.280
doesn't implement.

00:07:42.280 --> 00:07:43.140
Likewise,

00:07:43.140 --> 00:07:48.060
even the GBC product be able also doesn't have those functions Now there are two things

00:07:48.060 --> 00:07:49.400
that I can do number one I can mark.

00:07:49.400 --> 00:07:50.290
This is an abstract.

00:07:50.290 --> 00:07:52.060
Plus the problem is solved.

00:07:52.060 --> 00:07:56.830
But you will not be able to instantly it that in our very first program,

00:07:56.830 --> 00:07:59.810
when we tried toe you stink of the factory,

00:07:59.810 --> 00:08:01.410
that program would fail.

00:08:01.410 --> 00:08:03.150
So let's not make this is abstract.

00:08:03.150 --> 00:08:07.550
That second solution to this is in the interface product deal.

00:08:07.550 --> 00:08:09.870
I can add a body here and say,

00:08:09.870 --> 00:08:11.280
Provide a default.

00:08:11.280 --> 00:08:13.950
I can see your public default wide,

00:08:13.950 --> 00:08:19.310
add then that function need not be implemented in the dummy product deal.

00:08:19.310 --> 00:08:20.180
Alternately,

00:08:20.180 --> 00:08:25.010
we can go to the dummy product deal and then implement all the functions.

00:08:25.010 --> 00:08:26.840
So we have three choices.

00:08:26.840 --> 00:08:29.660
What we'll do is we'll go to the product deal,

00:08:29.660 --> 00:08:34.190
interferes and make this as a default function.

00:08:34.190 --> 00:08:36.130
And when you make this is a default function,

00:08:36.130 --> 00:08:41.710
you should probably the method body on the method body that I'm only going to do is tow

00:08:41.710 --> 00:08:48.890
throw new exception or a dollar exception saying that this function is not implemented,

00:08:48.890 --> 00:08:50.650
matter not implemented.

00:08:50.650 --> 00:08:57.550
So this kind of body we can add for all these functions are gonna copy this,

00:08:57.550 --> 00:09:04.780
make this as the default and then based or here for each one of them.

00:09:04.780 --> 00:09:14.140
And now that I have done for all these,

00:09:14.140 --> 00:09:15.150
let's save this.

00:09:15.150 --> 00:09:16.250
One.

00:09:16.250 --> 00:09:22.330
Small problem may still exist that whenever we're calling the con function in the program

00:09:22.330 --> 00:09:26.790
one we're calling that that throws a dollar exception which were not done.

00:09:26.790 --> 00:09:29.880
So we're gonna go back over here on wherever,

00:09:29.880 --> 00:09:31.160
counties that we had a handle.

00:09:31.160 --> 00:09:32.460
So I'm simply going to say,

00:09:32.460 --> 00:09:32.860
here,

00:09:32.860 --> 00:09:36.090
trust dollar encryption.

00:09:36.090 --> 00:09:42.370
Save this and our application is now free.

00:09:42.370 --> 00:09:43.750
In the next video,

00:09:43.750 --> 00:09:50.060
let us implement product deal using Jerry Busy template problem all the functions off the

00:09:50.060 --> 00:09:51.850
product deal interface.

