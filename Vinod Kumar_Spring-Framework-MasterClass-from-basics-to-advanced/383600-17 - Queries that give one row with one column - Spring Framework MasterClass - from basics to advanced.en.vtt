WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.700
Based on the number of rows that a select statement puts,

00:00:03.700 --> 00:00:06.220
we can categorize them into three types.

00:00:06.220 --> 00:00:10.980
Number one is a quality that returns one drove one column,

00:00:10.980 --> 00:00:12.020
for example.

00:00:12.020 --> 00:00:18.490
If I say you're select going top star from products press control,

00:00:18.490 --> 00:00:19.060
enter,

00:00:19.060 --> 00:00:21.920
you'll see that we get a one dro one column,

00:00:21.920 --> 00:00:25.190
which shows number of records off product stable.

00:00:25.190 --> 00:00:26.320
Similarly,

00:00:26.320 --> 00:00:29.130
I can see here Select company,

00:00:29.130 --> 00:00:31.250
Underscore name from shippers.

00:00:31.250 --> 00:00:33.460
We're shipper underscore.

00:00:33.460 --> 00:00:34.910
I'd e equals to four.

00:00:34.910 --> 00:00:36.470
This will give me one.

00:00:36.470 --> 00:00:39.340
Drove one column because based on an idea,

00:00:39.340 --> 00:00:42.290
there's only one decker and we're only looking for company name.

00:00:42.290 --> 00:00:48.050
The second type off select statements would produce one dro but multiple columns,

00:00:48.050 --> 00:00:48.890
for example.

00:00:48.890 --> 00:00:52.250
I can say here select start from employees.

00:00:52.250 --> 00:00:56.890
Employees understood rightly equals to one.

00:00:56.890 --> 00:01:00.400
This particular quality will result in tow one row,

00:01:00.400 --> 00:01:03.840
but multiple Collins in it because we're quiting it.

00:01:03.840 --> 00:01:06.790
Based on primary key and little type of SQL.

00:01:06.790 --> 00:01:10.500
Select statements would produce multiple rows multiple columns,

00:01:10.500 --> 00:01:11.180
for example.

00:01:11.180 --> 00:01:13.950
I can stay here select start from shippers,

00:01:13.950 --> 00:01:20.250
our select star from products with category underscore.

00:01:20.250 --> 00:01:21.850
80 equals toe one.

00:01:21.850 --> 00:01:26.790
So these kind of statements will produce multiple rows multiple columns.

00:01:26.790 --> 00:01:28.030
In this lecture,

00:01:28.030 --> 00:01:33.270
let us focus on the 1st 2 type of commands where you get one bro one color.

00:01:33.270 --> 00:01:39.380
So let's go toe over a clips and write a function here where we want to produce the number

00:01:39.380 --> 00:01:41.410
off records in the product stable.

00:01:41.410 --> 00:01:44.970
So let's call this has print product called.

00:01:44.970 --> 00:01:47.360
Since we don't have this function,

00:01:47.360 --> 00:01:53.120
we are getting an error that's more the cursor on top of the EDL and click on Create Method

00:01:53.120 --> 00:01:53.120
.

00:01:53.120 --> 00:01:53.870
I can press,

00:01:53.870 --> 00:01:54.250
tab,

00:01:54.250 --> 00:01:54.570
toe,

00:01:54.570 --> 00:02:02.040
navigate and choose the appropriate options String SQL equals toe Select Count off star

00:02:02.040 --> 00:02:03.650
from products.

00:02:03.650 --> 00:02:07.050
Since we know that this producers one row,

00:02:07.050 --> 00:02:12.370
one column we want to know what kind of data type is that This could be treated as an

00:02:12.370 --> 00:02:20.400
individual or long so I can say here template dot quietly for object and then say you're

00:02:20.400 --> 00:02:24.870
the SQL and the recorded tape is indigent start class.

00:02:24.870 --> 00:02:29.340
The return value off this particular function now automatically becomes an integer,

00:02:29.340 --> 00:02:34.990
so I can simply assigned this to available like PC PC has not been declared so we can

00:02:34.990 --> 00:02:39.350
create a local variable PC and know that it becomes automatically integer.

00:02:39.350 --> 00:02:41.270
Had this been long,

00:02:41.270 --> 00:02:43.390
then this would have been automatically along.

00:02:43.390 --> 00:02:49.590
So now I can paint here something like there are PC products.

00:02:49.590 --> 00:02:52.500
Let's test it out by running the court,

00:02:52.500 --> 00:02:56.050
and you should see that there are 77 products.

00:02:56.050 --> 00:02:58.490
Let's give another example.

00:02:58.490 --> 00:03:02.960
Let's say we want toe find the name off the shipper based on the I D.

00:03:02.960 --> 00:03:06.450
Let's say your print shipper name.

00:03:06.450 --> 00:03:09.240
We will supply the I D off four.

00:03:09.240 --> 00:03:10.940
This function again doesn't exist,

00:03:10.940 --> 00:03:12.210
so we're gonna create a new one,

00:03:12.210 --> 00:03:16.780
but a stab to never get to those boxes and choose appropriate option.

00:03:16.780 --> 00:03:19.320
We want to have it as wide function.

00:03:19.320 --> 00:03:21.040
Name is fine interest Fine.

00:03:21.040 --> 00:03:23.180
But this is gonna be a shipper.

00:03:23.180 --> 00:03:23.760
Idee.

00:03:23.760 --> 00:03:31.070
Let's get it off this particular toe and then say here string SQL equals toe Select company

00:03:31.070 --> 00:03:33.810
Underscore name from shippers.

00:03:33.810 --> 00:03:37.870
We're shipper Underscore really equals toe caution,

00:03:37.870 --> 00:03:38.360
Mark.

00:03:38.360 --> 00:03:40.130
And now I have this perimeter.

00:03:40.130 --> 00:03:45.450
So unlike the previous example where we supply only the SQL ended at this time.

00:03:45.450 --> 00:03:47.360
We also have to supply the perimeter.

00:03:47.360 --> 00:03:52.750
And the way we do is we say here template dot quality for object.

00:03:52.750 --> 00:03:57.170
And this ever gonna select this one where we have the third parameter,

00:03:57.170 --> 00:03:59.090
which is the bad Omit a list.

00:03:59.090 --> 00:04:04.430
So I'm gonna select a skilled record That distance is a company which is a string so I

00:04:04.430 --> 00:04:09.470
could string dot class and then arcs is a paradox here.

00:04:09.470 --> 00:04:11.150
So if you have five question much,

00:04:11.150 --> 00:04:13.170
you make you five values Over here,

00:04:13.170 --> 00:04:14.920
I have only one caution.

00:04:14.920 --> 00:04:17.450
Not so I have to supply the value for that.

00:04:17.450 --> 00:04:21.590
The return value off this now has dynamically changed to string.

00:04:21.590 --> 00:04:28.390
So if I ascend this to a variable called name equals toe and name automatically becomes a

00:04:28.390 --> 00:04:29.480
string here.

00:04:29.480 --> 00:04:38.230
So let's go on the same thing she brought name equals toe plus name and execute the same to

00:04:38.230 --> 00:04:41.100
see the result and it is caving or transports.

