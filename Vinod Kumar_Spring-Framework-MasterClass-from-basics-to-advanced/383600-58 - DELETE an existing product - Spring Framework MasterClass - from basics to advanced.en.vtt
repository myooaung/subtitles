WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.650
As for us,

00:00:00.650 --> 00:00:01.720
the resources concerned,

00:00:01.720 --> 00:00:06.870
we should also be ableto delete the resource by sending an extra TP dilate requests.

00:00:06.870 --> 00:00:07.710
However,

00:00:07.710 --> 00:00:08.550
in our case,

00:00:08.550 --> 00:00:10.660
when we say we want to delete a product,

00:00:10.660 --> 00:00:15.110
we basically want toe change the value of discontinued to one from zero.

00:00:15.110 --> 00:00:16.820
This is what we want to go on.

00:00:16.820 --> 00:00:17.130
Of course,

00:00:17.130 --> 00:00:19.950
we also have written our product the award to do the same thing.

00:00:19.950 --> 00:00:25.120
So let's see if we can send a delete request on make sure that the product gets

00:00:25.120 --> 00:00:26.040
discontinued.

00:00:26.040 --> 00:00:26.990
So to do so,

00:00:26.990 --> 00:00:29.330
let's go back to our eclipse.

00:00:29.330 --> 00:00:31.750
Stop the Tomcat server for a minute.

00:00:31.750 --> 00:00:37.550
Let's go back to our product resource on a new entry over here.

00:00:37.550 --> 00:00:41.820
Public response Entity off.

00:00:41.820 --> 00:00:43.990
Take Oshima dilate.

00:00:43.990 --> 00:00:44.750
Call it.

00:00:44.750 --> 00:00:51.550
We're gonna receive an integer idee and this is the one that we want to do a softly lit for

00:00:51.550 --> 00:00:51.550
.

00:00:51.550 --> 00:00:53.750
So first we couldn't say trying.

00:00:53.750 --> 00:00:58.010
So the couple of things that we can do here before actually deleting number one is that we

00:00:58.010 --> 00:01:03.880
want to see if that I d is valid so I can ask for a product and then check if a product is

00:01:03.880 --> 00:01:04.450
no.

00:01:04.450 --> 00:01:09.680
Then we return a fortnight for saying that this is not for me to do that.

00:01:09.680 --> 00:01:17.750
Let's say your product PR equals toe HDD award dot Get product and we supply this idee if

00:01:17.750 --> 00:01:19.130
we are equals toe.

00:01:19.130 --> 00:01:19.750
No,

00:01:19.750 --> 00:01:22.210
we already have this somewhere.

00:01:22.210 --> 00:01:23.670
Our earlier we had used this.

00:01:23.670 --> 00:01:24.910
If PR equals two done,

00:01:24.910 --> 00:01:28.810
we can actually copy this whole thing and then faced in place off this.

00:01:28.810 --> 00:01:33.450
So that's actually going to say that there is no product for this given i d.

00:01:33.450 --> 00:01:37.190
But otherwise now I want to delete that.

00:01:37.190 --> 00:01:41.280
I can say it's TD about dot delete product and this deal,

00:01:41.280 --> 00:01:43.070
it product will take ideas.

00:01:43.070 --> 00:01:46.450
A perimeter will supply that after delusion.

00:01:46.450 --> 00:01:53.400
We now have to do the new or later because this is an older data which has got probably

00:01:53.400 --> 00:01:54.030
discontinued.

00:01:54.030 --> 00:01:56.930
A zero on after this discontinued is one.

00:01:56.930 --> 00:01:58.160
But this is a stale data.

00:01:58.160 --> 00:02:00.190
So we're gonna make this request once more,

00:02:00.190 --> 00:02:04.870
and this time we don't have a check for null because we have only funded that it is not

00:02:04.870 --> 00:02:05.350
know,

00:02:05.350 --> 00:02:08.350
But this is the modified version of the later.

00:02:08.350 --> 00:02:13.670
We now have toe written this as a response entity because now we have successfully deleted

00:02:13.670 --> 00:02:19.450
so I'm gonna copy this written statement on based Over here on in the Catch block.

00:02:19.450 --> 00:02:21.140
In case of any exception,

00:02:21.140 --> 00:02:24.800
we're gonna simply copy this on and paste just like that.

00:02:24.800 --> 00:02:27.820
Except that we don't have the product object over here.

00:02:27.820 --> 00:02:29.590
Let's get it up that we don't need that.

00:02:29.590 --> 00:02:30.690
We just send a message.

00:02:30.690 --> 00:02:31.350
That's good enough.

00:02:31.350 --> 00:02:33.490
One last thing is we have toe energy.

00:02:33.490 --> 00:02:35.250
This as a great request.

00:02:35.250 --> 00:02:38.840
Mapping part equals toe slash Heidi,

00:02:38.840 --> 00:02:41.700
which is what actually we have toe map it over here.

00:02:41.700 --> 00:02:45.250
And then we say method equals toe request maker.

00:02:45.250 --> 00:02:49.030
Don't deal it after it path variable.

00:02:49.030 --> 00:02:53.530
And our function is really let's restart,

00:02:53.530 --> 00:02:58.150
dunk it and see if we get the result for deletion.

00:02:58.150 --> 00:03:02.650
So let's go back to a postman and copy this urine.

00:03:02.650 --> 00:03:08.250
Create a new request with deal it as the method.

00:03:08.250 --> 00:03:12.580
This is the same Ural 85 on head.

00:03:12.580 --> 00:03:12.910
Oh,

00:03:12.910 --> 00:03:15.910
I can say I want toe except Jason.

00:03:15.910 --> 00:03:19.770
As the response and click on Send on,

00:03:19.770 --> 00:03:26.550
we should be able to get the product 85 and the value for distant in your must be one will

00:03:26.550 --> 00:03:29.750
also try for one more and then checked out in the DB as well.

00:03:29.750 --> 00:03:36.420
Let's go back on changes to 84 before sending the request for deleting this products.

00:03:36.420 --> 00:03:37.380
84.

00:03:37.380 --> 00:03:40.410
Let's go check the DB for the same Simon say here,

00:03:40.410 --> 00:03:41.530
this is 84.

00:03:41.530 --> 00:03:42.230
Let's get it off.

00:03:42.230 --> 00:03:47.580
The select statements on you can see that 84 has discontinued at zero,

00:03:47.580 --> 00:03:50.150
but as soon as the sender's request,

00:03:50.150 --> 00:03:51.550
when the response comes back,

00:03:51.550 --> 00:03:52.950
if I go back over day,

00:03:52.950 --> 00:03:54.970
make the request again,

00:03:54.970 --> 00:03:57.850
you can see that discontinuity is no one on.

00:03:57.850 --> 00:03:59.350
It has been self deleted.

