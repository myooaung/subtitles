WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.960
Let's take another example on aspect oriented programming.

00:00:02.960 --> 00:00:07.170
And this time we want to see if I can call this function on.

00:00:07.170 --> 00:00:08.840
When this throws an exception,

00:00:08.840 --> 00:00:09.810
we want to see.

00:00:09.810 --> 00:00:12.020
Does it really throw a dollar exception?

00:00:12.020 --> 00:00:13.220
As it's supposed to say?

00:00:13.220 --> 00:00:14.010
For example,

00:00:14.010 --> 00:00:15.860
if I uncommon days on,

00:00:15.860 --> 00:00:18.950
then move the cursor on update product,

00:00:18.950 --> 00:00:23.450
you'll see that the signature says the function throws Dior exception.

00:00:23.450 --> 00:00:26.390
Let's trace surrounding this with a try catch block.

00:00:26.390 --> 00:00:27.730
So I'm gonna die,

00:00:27.730 --> 00:00:28.390
try,

00:00:28.390 --> 00:00:29.340
and then this.

00:00:29.340 --> 00:00:34.790
I'm gonna catch a deal exception because that's where actually the function is supposed to

00:00:34.790 --> 00:00:35.750
throw me.

00:00:35.750 --> 00:00:44.470
And let's print a message saying that there waas on better and the other probably would be

00:00:44.470 --> 00:00:45.850
he extort.

00:00:45.850 --> 00:00:46.850
Get message.

00:00:46.850 --> 00:00:47.720
That's what we want to see.

00:00:47.720 --> 00:00:49.050
What's the actual enter?

00:00:49.050 --> 00:00:55.170
We know that this request transaction on we haven't enabled the transaction it,

00:00:55.170 --> 00:00:58.010
so this is definitely going to throw another.

00:00:58.010 --> 00:01:00.760
We just want to see if the exception thrown here.

00:01:00.760 --> 00:01:02.090
Is that doll exceptional?

00:01:02.090 --> 00:01:02.580
Not?

00:01:02.580 --> 00:01:05.900
And if I go to the hybrid template product deal,

00:01:05.900 --> 00:01:10.150
the actual update function calls the template dot march,

00:01:10.150 --> 00:01:12.450
which does not throw down exception,

00:01:12.450 --> 00:01:15.650
but instead it throws an unchecked data access exception.

00:01:15.650 --> 00:01:21.800
So obviously a dollar exception is never thrown so that catch block is off no use,

00:01:21.800 --> 00:01:24.110
which means that we don't have a corresponding catch,

00:01:24.110 --> 00:01:24.600
blogged.

00:01:24.600 --> 00:01:26.860
It's gonna break the execution of the program.

00:01:26.860 --> 00:01:28.030
So just to prove the point,

00:01:28.030 --> 00:01:29.400
that's also put one message.

00:01:29.400 --> 00:01:32.470
You're saying that end off testing,

00:01:32.470 --> 00:01:34.050
save this.

00:01:34.050 --> 00:01:35.460
And if our under court,

00:01:35.460 --> 00:01:41.200
you'll see that the end of testing is never printed as well as you can see that the

00:01:41.200 --> 00:01:44.260
exception is nothing but inviolate data access.

00:01:44.260 --> 00:01:48.050
A peer usage exception on our deal exception is now being strong,

00:01:48.050 --> 00:01:49.950
So you think it will be now.

00:01:49.950 --> 00:01:51.990
What we want to do is this.

00:01:51.990 --> 00:01:56.490
When it throws a data access exception are any kind of exception.

00:01:56.490 --> 00:01:59.420
By the time that client receives that,

00:01:59.420 --> 00:02:01.710
it should be transformed into a dollar exception.

00:02:01.710 --> 00:02:02.980
So this is what we want to do.

00:02:02.980 --> 00:02:04.080
So to do that,

00:02:04.080 --> 00:02:06.790
let's go door my custom aspect of Java,

00:02:06.790 --> 00:02:07.540
and that's right.

00:02:07.540 --> 00:02:10.880
One function right in between here public wide.

00:02:10.880 --> 00:02:15.600
Let's call the function as convert to deal exception.

00:02:15.600 --> 00:02:20.220
The argument to this function is going to be an object off trouble.

00:02:20.220 --> 00:02:21.330
Let's call it esteem,

00:02:21.330 --> 00:02:26.880
and whatever the exception really seem we have toe through this as a dove exception.

00:02:26.880 --> 00:02:28.750
So let's take your exception.

00:02:28.750 --> 00:02:33.320
All I minuto is to say through new video exception,

00:02:33.320 --> 00:02:37.090
and we're gonna pass this trouble D as an argument,

00:02:37.090 --> 00:02:42.650
thereby converting a trouble object into a dollar exception object in order for a suspect

00:02:42.650 --> 00:02:46.150
Jato in walk this particular function were toe admitted.

00:02:46.150 --> 00:02:50.950
This as at the rate after throwing this has got a couple of elements.

00:02:50.950 --> 00:02:51.620
Now,

00:02:51.620 --> 00:02:57.510
one of the element that your use is called throwing equals toe some expression some

00:02:57.510 --> 00:02:58.890
variable name over here.

00:02:58.890 --> 00:03:04.780
But that should match this variable so you get if you want to give it as key X,

00:03:04.780 --> 00:03:07.150
make sure that this variable is e X.

00:03:07.150 --> 00:03:13.490
So I'm gonna undo and keep it back SP because everywhere I'm using t the other one is the

00:03:13.490 --> 00:03:14.690
point guard expression.

00:03:14.690 --> 00:03:19.170
So I'll say our point got equals toe execution offer method.

00:03:19.170 --> 00:03:23.850
So the methods written type and access modified is anything.

00:03:23.850 --> 00:03:25.700
It's part of quarter.

00:03:25.700 --> 00:03:28.600
We not it could be any of the sub packages.

00:03:28.600 --> 00:03:31.220
It could be any deal into face.

00:03:31.220 --> 00:03:37.190
It could be any function of the interface on it could be taking any perimeters at all

00:03:37.190 --> 00:03:38.090
doesn't matter.

00:03:38.090 --> 00:03:41.610
So whenever you call a function using a deal and if it happens,

00:03:41.610 --> 00:03:43.050
toe throw an exception.

00:03:43.050 --> 00:03:44.750
Because there was an exception.

00:03:44.750 --> 00:03:47.550
Now this function will receive that exception object,

00:03:47.550 --> 00:03:52.650
and that exception object is now transformed into a doll exception on being thrown.

00:03:52.650 --> 00:03:54.680
Let's save this on.

00:03:54.680 --> 00:03:56.880
Check it out in the program.

00:03:56.880 --> 00:03:57.850
We're not Put a try.

00:03:57.850 --> 00:04:02.080
Catch the actual implementation off this vital function in our hibernate template probably

00:04:02.080 --> 00:04:05.410
or throws a data access exception.

00:04:05.410 --> 00:04:06.930
More specific exception.

00:04:06.930 --> 00:04:07.420
Waas.

00:04:07.420 --> 00:04:10.690
Something going invalid Data access.

00:04:10.690 --> 00:04:12.120
A peer usage exception.

00:04:12.120 --> 00:04:13.860
This is the one that was thrown,

00:04:13.860 --> 00:04:20.970
but I was caught by our function over here on this read throws a dollar exception on the

00:04:20.970 --> 00:04:26.070
client here we received our exception because of which it will go to the catch block,

00:04:26.070 --> 00:04:31.280
unlike the previous case and then finally it prints this end off testing which was not

00:04:31.280 --> 00:04:32.290
printed last time.

00:04:32.290 --> 00:04:37.250
That's going from the court and hopefully we would get there on foot as expected.

00:04:37.250 --> 00:04:44.990
There you go so you can see that the error which we printed in our catch block is available

00:04:44.990 --> 00:04:50.040
over here as well as end of testing is printed because now it went to the catch blood.

00:04:50.040 --> 00:04:51.450
The exception has been negated

