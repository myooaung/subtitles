WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.560
when spring is able to give a map or a list off map in many practical applications,

00:00:05.560 --> 00:00:11.760
such as multi tired architectures where the presentation layer depends on the mine objects

00:00:11.760 --> 00:00:11.760
,

00:00:11.760 --> 00:00:12.750
for example,

00:00:12.750 --> 00:00:17.650
instead off getting a list off categories as a list off map,

00:00:17.650 --> 00:00:23.480
we would like to have a list off category objects where a category close represents the

00:00:23.480 --> 00:00:25.350
columns off a category stable.

00:00:25.350 --> 00:00:27.520
What I mean is the categories.

00:00:27.520 --> 00:00:30.850
Table has category idea as a field category.

00:00:30.850 --> 00:00:31.210
Name,

00:00:31.210 --> 00:00:31.820
description,

00:00:31.820 --> 00:00:33.280
picture For this,

00:00:33.280 --> 00:00:37.630
we want to create a class called category with the respective field names.

00:00:37.630 --> 00:00:38.750
Get her centers,

00:00:38.750 --> 00:00:43.330
and we want the objects off category close for every record in the category,

00:00:43.330 --> 00:00:47.200
stable since spring uses the template design baton,

00:00:47.200 --> 00:00:50.640
we can ask spring toe generate such objects,

00:00:50.640 --> 00:00:55.430
providing the logic for converting their resents it into the category.

00:00:55.430 --> 00:00:56.260
Object.

00:00:56.260 --> 00:00:57.180
In this demo,

00:00:57.180 --> 00:00:58.470
let's have a look at the same thing.

00:00:58.470 --> 00:01:04.410
Spring perverts and interface called room mapper to have a look at the same.

00:01:04.410 --> 00:01:06.430
Let's first command shift.

00:01:06.430 --> 00:01:11.770
Hedge our control shift hedge on windows and then type rope mapper.

00:01:11.770 --> 00:01:14.480
You'll see that there are two interfaces.

00:01:14.480 --> 00:01:15.560
One comes from Java,

00:01:15.560 --> 00:01:16.720
extracts Rick,

00:01:16.720 --> 00:01:20.080
the other one comes from all the spring framework,

00:01:20.080 --> 00:01:21.330
so let's select the same.

00:01:21.330 --> 00:01:22.570
When you say open,

00:01:22.570 --> 00:01:26.000
you'll see that there is a single method called macro,

00:01:26.000 --> 00:01:31.970
which takes presented as a barometer in which corresponds to the row number and then

00:01:31.970 --> 00:01:36.040
supposed to return a custom object the way we can use it.

00:01:36.040 --> 00:01:41.270
We can create a class that implements remember often intimate type and then over

00:01:41.270 --> 00:01:42.140
dysfunction.

00:01:42.140 --> 00:01:43.650
With spring will supply.

00:01:43.650 --> 00:01:46.850
The results are being processed with the current rope,

00:01:46.850 --> 00:01:51.070
and then we have to convert that into a custom domain object 100 in the same.

00:01:51.070 --> 00:01:56.650
An object off such a clause can be given toe Jerry BC template for further use.

00:01:56.650 --> 00:01:57.540
Ultimately,

00:01:57.540 --> 00:02:00.990
you can create an anonymous object and then supply the same.

00:02:00.990 --> 00:02:02.110
To understand this,

00:02:02.110 --> 00:02:03.400
let's take an example.

00:02:03.400 --> 00:02:07.730
Let's say we want to first create a class called category so that we can get a category

00:02:07.730 --> 00:02:09.180
object based on a 90.

00:02:09.180 --> 00:02:11.450
So let's goto our Project Explorer.

00:02:11.450 --> 00:02:15.560
Let's create a class under a package called Entity and I don't have here.

00:02:15.560 --> 00:02:20.630
So let's right click on any of the package and say New class package name.

00:02:20.630 --> 00:02:24.830
Let's change this to Entity and the name of the class is category.

00:02:24.830 --> 00:02:29.510
We give singular names for classes when the table has plume.

00:02:29.510 --> 00:02:31.110
This is just an entity close.

00:02:31.110 --> 00:02:34.050
There is nothing other than the fields over here,

00:02:34.050 --> 00:02:35.400
private,

00:02:35.400 --> 00:02:37.060
indigent or int.

00:02:37.060 --> 00:02:40.960
Intelligence is better because this all those values also,

00:02:40.960 --> 00:02:41.770
however,

00:02:41.770 --> 00:02:44.690
category happens to be a primary keys.

00:02:44.690 --> 00:02:45.670
So there is no scope,

00:02:45.670 --> 00:02:46.860
often al value here,

00:02:46.860 --> 00:02:47.880
but in general,

00:02:47.880 --> 00:02:49.080
for the rest of the fields,

00:02:49.080 --> 00:02:52.280
it's good idea to use rapper types rather than primitive types.

00:02:52.280 --> 00:02:55.290
So I'm gonna add a 2nd 1 string.

00:02:55.290 --> 00:02:55.610
OK,

00:02:55.610 --> 00:03:00.300
I really need I heard one string description.

00:03:00.300 --> 00:03:03.510
The 4th 1 here is a block,

00:03:03.510 --> 00:03:10.310
which is represented as a bite a rain so I can go here and then take private bite a picture

00:03:10.310 --> 00:03:10.310
.

00:03:10.310 --> 00:03:17.390
We will add annotations to generate the constructor so it's a no are constructive.

00:03:17.390 --> 00:03:20.830
It's at a getter and setter,

00:03:20.830 --> 00:03:27.580
so we have no a clause that contains all the required feels corresponding.

00:03:27.580 --> 00:03:29.660
Get a sitters and constructors.

00:03:29.660 --> 00:03:35.500
We want spring to you an object off this class whenever we quite a record from the table,

00:03:35.500 --> 00:03:39.850
going back to our program where we were trying toe test all the same,

00:03:39.850 --> 00:03:40.370
that's right,

00:03:40.370 --> 00:03:45.060
a function saying that get category for an I D off.

00:03:45.060 --> 00:03:47.670
Let a one so we don't have this function.

00:03:47.670 --> 00:03:49.190
Let's create one quickly.

00:03:49.190 --> 00:03:50.910
Make this as a package level.

00:03:50.910 --> 00:03:57.390
Let the variable name being called US category I d and get it off this to do.

00:03:57.390 --> 00:04:03.550
The SQL statement is going to be select star from categories.

00:04:03.550 --> 00:04:09.970
We're category underscore I d equals two question mark and what I need to do here is we can

00:04:09.970 --> 00:04:16.120
say template dot quietly for object because I want an object off category type.

00:04:16.120 --> 00:04:17.150
And if you look it,

00:04:17.150 --> 00:04:18.680
the variants.

00:04:18.680 --> 00:04:20.630
This is a 1,000,000 that I can make use off.

00:04:20.630 --> 00:04:22.550
The first perimeter is the X Curiel,

00:04:22.550 --> 00:04:24.270
which is our select statement here.

00:04:24.270 --> 00:04:28.750
The 2nd 1 is an object off room upper into face.

00:04:28.750 --> 00:04:30.330
I have to create one,

00:04:30.330 --> 00:04:34.880
and the 3rd 1 is basically an object away as barracks,

00:04:34.880 --> 00:04:37.780
which is the bunch of parameters that you can supply.

00:04:37.780 --> 00:04:39.060
Let's select that,

00:04:39.060 --> 00:04:41.710
and I have here SQL No problem.

00:04:41.710 --> 00:04:44.650
Let's keep the room rapper as ish because we don't have it.

00:04:44.650 --> 00:04:46.040
We will create one now,

00:04:46.040 --> 00:04:50.170
and the argument is a bunch of argument for each question mark.

00:04:50.170 --> 00:04:51.440
I have only one question mark.

00:04:51.440 --> 00:04:54.080
So that's the category Ivy.

00:04:54.080 --> 00:04:57.000
Since I don't have a road map marriage giving me another,

00:04:57.000 --> 00:04:58.240
let's manually create this.

00:04:58.240 --> 00:05:02.440
Remember as an anonymous object and the way you do is you say,

00:05:02.440 --> 00:05:03.060
Rome Apple,

00:05:03.060 --> 00:05:05.700
Let's wrest control space toe,

00:05:05.700 --> 00:05:09.920
Get the data type from spring framework and the generate did eight.

00:05:09.920 --> 00:05:11.990
I want to supply here s category.

00:05:11.990 --> 00:05:13.210
Let's call it as Rome,

00:05:13.210 --> 00:05:15.120
AKA equals toe,

00:05:15.120 --> 00:05:23.950
I can cleared an anonymous object by tapping new row mapper off category day open and close

00:05:23.950 --> 00:05:23.950
.

00:05:23.950 --> 00:05:29.170
The bracket sets that we're creating an object and we know that Roma prison interface.

00:05:29.170 --> 00:05:33.630
You cannot instance she ate that and hence eclipses giving me another.

00:05:33.630 --> 00:05:35.780
So if I point out on that error,

00:05:35.780 --> 00:05:39.250
it is cannot instance yet the type row mapper off category.

00:05:39.250 --> 00:05:41.600
It is not suggesting a quick fix over here,

00:05:41.600 --> 00:05:45.250
but basically what it expects is an object off a class.

00:05:45.250 --> 00:05:48.320
So I can simply open and close the bracket over here,

00:05:48.320 --> 00:05:48.920
saying that Hey,

00:05:48.920 --> 00:05:54.740
this is the class that implements this interface and this is an object off the particular

00:05:54.740 --> 00:05:55.750
class so easy,

00:05:55.750 --> 00:06:00.310
the other is different and it is that the anonymous type has to have the UN implement

00:06:00.310 --> 00:06:00.730
admitted.

00:06:00.730 --> 00:06:04.140
So now I'm getting a quick fix saying that at unimplemented metal.

00:06:04.140 --> 00:06:06.950
So if I select that you see now,

00:06:06.950 --> 00:06:10.650
we haven't endowed last being instance hated over here.

00:06:10.650 --> 00:06:12.180
Let's for the cynical.

00:06:12.180 --> 00:06:17.690
And this is the overdone function where you can see that the map row is the function which

00:06:17.690 --> 00:06:23.330
takes a result search of spring supplies the results that object in its current state.

00:06:23.330 --> 00:06:24.310
For example.

00:06:24.310 --> 00:06:28.790
It would have moved the results after the first euro and then passes that object to me,

00:06:28.790 --> 00:06:31.210
this will be off practically no use.

00:06:31.210 --> 00:06:34.340
It's the wrong number we won't be making with that at all.

00:06:34.340 --> 00:06:37.900
All we're gonna do is tow can ward the current Ruoff.

00:06:37.900 --> 00:06:43.210
This results that assuming that it contains all the values for categories and then cleared

00:06:43.210 --> 00:06:45.420
an object of category and returning the same thing.

00:06:45.420 --> 00:06:51.680
So let's get it off this to do at a Category C equals toe new category,

00:06:51.680 --> 00:06:57.280
Cedar said category I d off orders doors get into off.

00:06:57.280 --> 00:07:00.240
I can say one or like unused category.

00:07:00.240 --> 00:07:03.570
Underscore 80 like boys see dot said category.

00:07:03.570 --> 00:07:11.850
Name orders don't get string off category underscore Name cedar set description off.

00:07:11.850 --> 00:07:18.230
Artists don't get string off description and then seed are set.

00:07:18.230 --> 00:07:22.870
Picture honest are get bites off picture,

00:07:22.870 --> 00:07:27.040
then return the C inside off.

00:07:27.040 --> 00:07:27.380
Now,

00:07:27.380 --> 00:07:33.920
Now we have a room Apple as an object and that object were supplying over here.

00:07:33.920 --> 00:07:39.740
When you call this particular function spring collapse these values and then gets a

00:07:39.740 --> 00:07:43.330
connection from the pool that template maintenance and using the connection,

00:07:43.330 --> 00:07:48.060
it creates a prepared statement and the prepared statement is supplied with this SQL we

00:07:48.060 --> 00:07:49.800
supply few parameters over here.

00:07:49.800 --> 00:07:52.570
Prepared statement parameters have been initialized prepared,

00:07:52.570 --> 00:07:53.820
statement gets executed,

00:07:53.820 --> 00:07:55.570
the results that is collected,

00:07:55.570 --> 00:07:56.400
then the results.

00:07:56.400 --> 00:07:58.090
It is checked whether there is a need,

00:07:58.090 --> 00:07:58.820
a card or not,

00:07:58.820 --> 00:08:00.970
because we're looking for a single object.

00:08:00.970 --> 00:08:02.690
And once the record exists,

00:08:02.690 --> 00:08:06.150
the Jerry busy template is going to make it off my row mapper,

00:08:06.150 --> 00:08:09.070
which has a function called macro supplies.

00:08:09.070 --> 00:08:11.820
That prism said on the road number which happens to be one.

00:08:11.820 --> 00:08:13.200
This is my logic.

00:08:13.200 --> 00:08:18.480
So spring is in working my logic and then my logic is converting the results it into a

00:08:18.480 --> 00:08:20.890
category object that is being returned.

00:08:20.890 --> 00:08:23.930
Then it comes back to this function and inside the function,

00:08:23.930 --> 00:08:24.610
the results,

00:08:24.610 --> 00:08:25.610
it gets closed,

00:08:25.610 --> 00:08:31.360
statement gets closed connection gets closed and then the return value were dysfunction.

00:08:31.360 --> 00:08:34.140
Return is now written from this particular template.

00:08:34.140 --> 00:08:38.240
So if I assigned this to a variable called say cat equals two,

00:08:38.240 --> 00:08:41.790
you'll see that cat is a variable off category.

00:08:41.790 --> 00:08:43.240
And now that I have the category,

00:08:43.240 --> 00:08:45.770
I want toe print the details off the category.

00:08:45.770 --> 00:08:49.630
I can see your sis out and then say Cat,

00:08:49.630 --> 00:08:51.650
don't get category I d.

00:08:51.650 --> 00:09:00.340
Probably I can add a label here saying that I d equals two plus 2nd 1 Name off the category

00:09:00.340 --> 00:09:02.550
is cat get category name.

00:09:02.550 --> 00:09:10.200
Third is description equals toe cannot get description.

00:09:10.200 --> 00:09:13.050
I won't be ableto print the picture.

00:09:13.050 --> 00:09:16.600
I have to probably save it as a filing open and see.

00:09:16.600 --> 00:09:17.540
Right now,

00:09:17.540 --> 00:09:18.690
this should be good enough.

00:09:18.690 --> 00:09:24.360
Let's save this and around the court and I should be able to see in that category objects

00:09:24.360 --> 00:09:26.350
information printed over here.

00:09:26.350 --> 00:09:31.850
Now this can be for their simplified because creating in 100 subject every time I need is

00:09:31.850 --> 00:09:33.270
something that we don't want.

00:09:33.270 --> 00:09:39.460
So what I can do is I can cut this from here and then paste it over here to make it as a

00:09:39.460 --> 00:09:39.890
member.

00:09:39.890 --> 00:09:43.690
Variable The only thing I have to do is to mark this s static.

00:09:43.690 --> 00:09:46.790
Otherwise I won't be able to use it in static functions.

00:09:46.790 --> 00:09:47.550
So now you see,

00:09:47.550 --> 00:09:48.660
I don't have a problem.

00:09:48.660 --> 00:09:53.850
So we can just the same by running the court and were ableto successfully get the output.

00:09:53.850 --> 00:09:57.960
Since we're using Java ate that whole expression,

00:09:57.960 --> 00:10:03.580
often anonymous object can be converted into a lambda expression because Rome apple is an

00:10:03.580 --> 00:10:09.160
interface which has exactly one function and it is called has a functional interface,

00:10:09.160 --> 00:10:15.020
which means I can convert this endeavor anonymous object expression in tow just an adult

00:10:15.020 --> 00:10:20.870
function so that this can be a function instead of an actual interface object.

00:10:20.870 --> 00:10:23.770
So this is possible only freezing job eight.

00:10:23.770 --> 00:10:28.570
So to do that instead of assigning an ender new remember object,

00:10:28.570 --> 00:10:30.680
I just have to assign this function.

00:10:30.680 --> 00:10:34.880
So I'm gonna cut this from here and then based instead off this.

00:10:34.880 --> 00:10:36.890
But that's not the way you do it.

00:10:36.890 --> 00:10:38.340
So what do you have to do for that?

00:10:38.340 --> 00:10:42.080
Is you have to remove this public the return type,

00:10:42.080 --> 00:10:43.350
the function,

00:10:43.350 --> 00:10:44.910
Andi Instead,

00:10:44.910 --> 00:10:47.930
you need toe assign an adult Over here.

00:10:47.930 --> 00:10:51.450
The arrow is nothing but a hyphen and greater than symbol.

00:10:51.450 --> 00:10:56.190
Now we can see we have a function being assigned to Rome.

00:10:56.190 --> 00:11:00.650
APA this function can four be simplified by removing the data types?

00:11:00.650 --> 00:11:04.980
Because the only function that is available in the room upper interface has these two

00:11:04.980 --> 00:11:05.790
parameters.

00:11:05.790 --> 00:11:11.820
Java compilers are able to identify that this is a result set and this is an int.

00:11:11.820 --> 00:11:14.160
And now that I have the function simplified,

00:11:14.160 --> 00:11:18.430
I can organize may import by getting rid off the unused imports.

00:11:18.430 --> 00:11:21.280
You press command shift on Mac control,

00:11:21.280 --> 00:11:24.970
shift on windows and you can see my imports are also removed.

00:11:24.970 --> 00:11:26.900
And I have a simpler court on.

00:11:26.900 --> 00:11:29.130
Let's try this one last time.

00:11:29.130 --> 00:11:33.070
Execute and I get the same result without any change.

00:11:33.070 --> 00:11:37.500
Let's take one more example Toe let's start categories in our table.

00:11:37.500 --> 00:11:39.940
So I'm gonna come in this one Andre,

00:11:39.940 --> 00:11:42.790
a new function called Get all categories.

00:11:42.790 --> 00:11:44.920
I don't have this function.

00:11:44.920 --> 00:11:45.870
I'm getting another.

00:11:45.870 --> 00:11:48.540
I'm going to create a new one package level function.

00:11:48.540 --> 00:11:53.250
Let's get off this to do Now that I have this room members a static member variable of this

00:11:53.250 --> 00:11:53.760
class,

00:11:53.760 --> 00:11:57.190
I can reuse that over here so I can say template,

00:11:57.190 --> 00:11:58.290
dark quality.

00:11:58.290 --> 00:12:02.840
And then I can supply SQL statement and remember,

00:12:02.840 --> 00:12:03.550
object.

00:12:03.550 --> 00:12:06.870
If I have any perimeter I can supply.

00:12:06.870 --> 00:12:09.680
But my SQL statement is gonna be very simple,

00:12:09.680 --> 00:12:11.270
so I can straight away right here.

00:12:11.270 --> 00:12:17.780
Select start from categories And this is a function that takes an SQL statement on the Roma

00:12:17.780 --> 00:12:23.060
por object and option perimeters gives me a list off category objects.

00:12:23.060 --> 00:12:26.550
And how does spring know that this is supposed to it on a list of categories,

00:12:26.550 --> 00:12:32.940
you can see that the Roma part that we have created is based on a category teletype.

00:12:32.940 --> 00:12:35.750
All I have to do is to assign this to your list.

00:12:35.750 --> 00:12:36.610
Andi,

00:12:36.610 --> 00:12:42.380
if you see that list is going to be a variable off list off category objects,

00:12:42.380 --> 00:12:49.540
I can look over this now by tapping for category C in list on bond.

00:12:49.540 --> 00:12:50.930
Print the leaders off.

00:12:50.930 --> 00:12:51.460
See,

00:12:51.460 --> 00:12:52.260
I can stay here,

00:12:52.260 --> 00:12:52.900
sits out.

00:12:52.900 --> 00:12:53.620
See,

00:12:53.620 --> 00:12:57.240
I do not have a to shing over here for this category objects.

00:12:57.240 --> 00:13:01.080
So you for undid it simply going to say that they're objects off category types.

00:13:01.080 --> 00:13:04.930
But if I want the information off these to be printed,

00:13:04.930 --> 00:13:08.810
I can go to the category Jojoba are here at the rate,

00:13:08.810 --> 00:13:10.210
two strings.

00:13:10.210 --> 00:13:12.650
But this will print all off.

00:13:12.650 --> 00:13:15.640
These and pictures are a big bite array.

00:13:15.640 --> 00:13:17.790
They'll be a lot of junk characters being printed.

00:13:17.790 --> 00:13:19.760
If I want to exclude that here,

00:13:19.760 --> 00:13:26.580
I have an element I can say here control space and I can say exclude and a day off values

00:13:26.580 --> 00:13:28.460
are implore field names,

00:13:28.460 --> 00:13:32.640
so I'm gonna say Exclude equals toe Picture said.

00:13:32.640 --> 00:13:34.880
This is a field that I don't want to include.

00:13:34.880 --> 00:13:37.590
Let's go back to a program on run the same,

00:13:37.590 --> 00:13:43.040
and I should be able to get the details of the category using the toasting that we added

00:13:43.040 --> 00:13:43.850
right now.

