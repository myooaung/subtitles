WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.520
Now that we have a fully configured having a template object,

00:00:03.520 --> 00:00:09.810
let us create any implementation for our product deal using the hibernate template.

00:00:09.810 --> 00:00:10.480
That's right.

00:00:10.480 --> 00:00:17.600
Click on a package New Class and let's name this as the hibernate template Implementation

00:00:17.600 --> 00:00:22.050
off product deal at the interface called Part of a Deal,

00:00:22.050 --> 00:00:23.740
Click on OK,

00:00:23.740 --> 00:00:24.820
finish.

00:00:24.820 --> 00:00:26.310
Since all the members off,

00:00:26.310 --> 00:00:29.750
probably a will have default access modifier,

00:00:29.750 --> 00:00:32.550
none of them have been generated automatically.

00:00:32.550 --> 00:00:35.310
So let's go to the source menu overrated,

00:00:35.310 --> 00:00:40.720
implement methods and choose that we want all the functions of product there were to be

00:00:40.720 --> 00:00:42.250
implemented over here.

00:00:42.250 --> 00:00:49.130
Let's go up I after it reportedly so that this is qualified for components can.

00:00:49.130 --> 00:00:53.090
And we will also give this as hedge t deal with this time,

00:00:53.090 --> 00:00:57.160
we'll also inject or auto where the hibernate template that we have.

00:00:57.160 --> 00:00:59.120
Let's call it us private.

00:00:59.120 --> 00:01:00.340
I'm in a template.

00:01:00.340 --> 00:01:07.650
Let's give a name called template itself and with our did not aware once again for the

00:01:07.650 --> 00:01:14.400
demonstration purpose only with required equals two fonts so that our other programs work

00:01:14.400 --> 00:01:16.700
without any problem in practice.

00:01:16.700 --> 00:01:18.720
We will not be using this at all.

00:01:18.720 --> 00:01:24.230
The first thing that we want to do here is toe add a new product and it's as simple as

00:01:24.230 --> 00:01:25.040
their played out.

00:01:25.040 --> 00:01:29.950
Persist and then supply the product object just one later.

00:01:29.950 --> 00:01:33.580
The only thing that we have to take it is exception handling,

00:01:33.580 --> 00:01:37.120
since the process function throws data access exception,

00:01:37.120 --> 00:01:38.810
which is a spring exception.

00:01:38.810 --> 00:01:39.910
But as we're seeing,

00:01:39.910 --> 00:01:42.690
our function throws Dior exception,

00:01:42.690 --> 00:01:44.600
which has never been thrown from here.

00:01:44.600 --> 00:01:47.930
We will handle this using aspect or indeed programming.

00:01:47.930 --> 00:01:48.700
But for now,

00:01:48.700 --> 00:01:49.450
let's just leave that.

00:01:49.450 --> 00:01:50.150
As it is,

00:01:50.150 --> 00:01:53.060
updating a product is very simple.

00:01:53.060 --> 00:01:58.810
You simply have to say template dot are much and then supply the entity,

00:01:58.810 --> 00:02:02.050
which is old product getting a product.

00:02:02.050 --> 00:02:09.250
Let's do a return template dot get the class is product art class.

00:02:09.250 --> 00:02:11.470
Idea is nothing with the argument that we got,

00:02:11.470 --> 00:02:12.850
which is a product I d.

00:02:12.850 --> 00:02:13.480
Here,

00:02:13.480 --> 00:02:15.760
let us do a self village for that.

00:02:15.760 --> 00:02:16.210
First,

00:02:16.210 --> 00:02:21.240
I'm gonna say p equals toe get product off product I d.

00:02:21.240 --> 00:02:23.750
So we have a function here.

00:02:23.750 --> 00:02:27.050
We're calling that function that's supposed to return a product object.

00:02:27.050 --> 00:02:31.410
So P is going to be a product object I'll be able to do is to say,

00:02:31.410 --> 00:02:32.620
readout set,

00:02:32.620 --> 00:02:34.800
discontinued as one.

00:02:34.800 --> 00:02:35.840
And then we'll say,

00:02:35.840 --> 00:02:41.260
template dot march on supply this be which is the entity object.

00:02:41.260 --> 00:02:46.830
So we basically said that this product is no longer going to be continued when we update

00:02:46.830 --> 00:02:47.290
this.

00:02:47.290 --> 00:02:52.480
And this way we have a Children soft volition of the product To get the list of products,

00:02:52.480 --> 00:02:55.350
we can have many functionalities first,

00:02:55.350 --> 00:02:55.900
let's have a look.

00:02:55.900 --> 00:03:01.150
It hibernate template in our type hierarchy for go to the type heirarchy here and look at

00:03:01.150 --> 00:03:02.000
the history here.

00:03:02.000 --> 00:03:04.240
So we have the hybrid template.

00:03:04.240 --> 00:03:09.650
There are functions like find This takes hedge fuel as an argument,

00:03:09.650 --> 00:03:11.750
and in case it's clear that's question much.

00:03:11.750 --> 00:03:14.120
It takes those as perimeters.

00:03:14.120 --> 00:03:14.940
However,

00:03:14.940 --> 00:03:17.770
you can see that it has been duplicated from,

00:03:17.770 --> 00:03:18.610
I believe Washington.

00:03:18.610 --> 00:03:23.350
Find out to hundreds so we can't use the hibernate quietly language at all.

00:03:23.350 --> 00:03:26.290
But we can use something called criteria.

00:03:26.290 --> 00:03:27.120
Ap I.

00:03:27.120 --> 00:03:28.660
Since this is duplicated,

00:03:28.660 --> 00:03:31.600
let us use something called find by criteria.

00:03:31.600 --> 00:03:33.910
So I'm gonna get off this court over here.

00:03:33.910 --> 00:03:37.540
Let's create a detached criteria that's called it as D.

00:03:37.540 --> 00:03:39.830
C equals toe touch criteria.

00:03:39.830 --> 00:03:42.160
And we have the supply an entity class here.

00:03:42.160 --> 00:03:45.300
So the interdict last year is the product that close.

00:03:45.300 --> 00:03:48.710
So whenever we execute this criteria,

00:03:48.710 --> 00:03:51.170
the creditor is going to give me a list of products,

00:03:51.170 --> 00:03:58.490
and all I have to do is tow template dot find by criteria and then supply this D.

00:03:58.490 --> 00:04:00.840
C written this volume,

00:04:00.840 --> 00:04:03.430
which gives me a list off products,

00:04:03.430 --> 00:04:08.050
but it says here that the return value is a list off object.

00:04:08.050 --> 00:04:11.180
But as I have a list off product,

00:04:11.180 --> 00:04:13.060
so it says that you have to cast it.

00:04:13.060 --> 00:04:16.450
Let's do a casting on the problem is salt.

00:04:16.450 --> 00:04:18.660
Even though this is a warning,

00:04:18.660 --> 00:04:20.540
we can suppress that for sure,

00:04:20.540 --> 00:04:26.150
because we know that our detached criteria is always going to give me a list of product.

00:04:26.150 --> 00:04:29.970
Since this warning is going to be there in almost all these functions,

00:04:29.970 --> 00:04:30.420
I'm you know,

00:04:30.420 --> 00:04:35.850
cut this from your pasted at the class level so that the warnings are suppressed all over.

00:04:35.850 --> 00:04:41.810
Let's copy paste the same thing for the next to function where we want to get the list of

00:04:41.810 --> 00:04:44.760
products between a price range minute max.

00:04:44.760 --> 00:04:46.500
So before actually we say,

00:04:46.500 --> 00:04:48.730
give me the list of products,

00:04:48.730 --> 00:04:53.230
we will send those parameters also here we have to say here now,

00:04:53.230 --> 00:05:01.950
d c dot on and we can say restrictions dot between the property is unit price.

00:05:01.950 --> 00:05:03.270
Not that it is a property,

00:05:03.270 --> 00:05:07.040
not a column on This is the men and Max.

00:05:07.040 --> 00:05:12.670
So we basically say that we are adding a condition to this detached criteria.

00:05:12.670 --> 00:05:18.340
So while it is supposed to give me all the products now it is going toe filled a lot based

00:05:18.340 --> 00:05:19.350
on this condition.

00:05:19.350 --> 00:05:21.650
So when you actually execute this criteria,

00:05:21.650 --> 00:05:25.670
the criteria has one condition that will be added as a way of conditioning.

00:05:25.670 --> 00:05:31.290
Our SQL Select Statement to get the list off products in a given category will copy the

00:05:31.290 --> 00:05:34.700
same and based over here,

00:05:34.700 --> 00:05:37.260
we do have a property called category I D.

00:05:37.260 --> 00:05:39.610
So I can simply say your EQ you.

00:05:39.610 --> 00:05:42.920
This is gonna be category I d on the value.

00:05:42.920 --> 00:05:45.410
Here is nothing with the argument that I received.

00:05:45.410 --> 00:05:47.550
I'm gonna supply the same thing over here.

00:05:47.550 --> 00:05:52.750
Same way I can also specify units in stock.

00:05:52.750 --> 00:06:00.040
So the units in stock is the field and the value happens to be zero.

00:06:00.040 --> 00:06:03.410
The next one is get products on order.

00:06:03.410 --> 00:06:07.200
So wherever the units on order is greater than zero,

00:06:07.200 --> 00:06:11.990
so I can see you're greater than so GT for Grade them here.

00:06:11.990 --> 00:06:18.330
I'll say units on order Greater than zero If you want Greater than R equals zero,

00:06:18.330 --> 00:06:20.710
you'll said G E angel of GT.

00:06:20.710 --> 00:06:21.410
In this case,

00:06:21.410 --> 00:06:22.940
GT makes sense.

00:06:22.940 --> 00:06:24.470
The discontinued products.

00:06:24.470 --> 00:06:24.960
Once again,

00:06:24.960 --> 00:06:28.250
it's equal Stoop is the condition that we want.

00:06:28.250 --> 00:06:30.500
We're gonna copy Paste over here.

00:06:30.500 --> 00:06:33.650
This is discontinued is the property.

00:06:33.650 --> 00:06:36.830
The value is one in case if it's discontinued,

00:06:36.830 --> 00:06:37.350
it's gonna be,

00:06:37.350 --> 00:06:37.590
like,

00:06:37.590 --> 00:06:38.150
true.

00:06:38.150 --> 00:06:45.580
So we are saying Select star from products were discontinued equals to one,

00:06:45.580 --> 00:06:47.350
and then we get this result.

00:06:47.350 --> 00:06:49.000
The last one is a little bit different,

00:06:49.000 --> 00:06:51.050
so let's make some space over here.

00:06:51.050 --> 00:06:53.750
Let's get off this to doom.

00:06:53.750 --> 00:06:57.470
We want to first create a detached radio,

00:06:57.470 --> 00:06:58.950
so let's copy that one.

00:06:58.950 --> 00:07:01.630
But this imports of projection,

00:07:01.630 --> 00:07:06.830
because we are not interested in the entire product object were only interested in the low

00:07:06.830 --> 00:07:15.630
count so we can see your d c dot second prediction and then we can see here predictions dot

00:07:15.630 --> 00:07:20.540
ro count that will actually give you the number of rows in the product.

00:07:20.540 --> 00:07:21.600
Now we have this.

00:07:21.600 --> 00:07:26.050
We can execute this query by typing template dot find by criteria,

00:07:26.050 --> 00:07:29.460
but its return value is not going to be a list of product.

00:07:29.460 --> 00:07:31.620
It's going to be a list off long,

00:07:31.620 --> 00:07:33.180
even though I have a one grow.

00:07:33.180 --> 00:07:36.940
One column find by criteria always is going to give a list.

00:07:36.940 --> 00:07:44.370
But since our broken is a long so it's going to give you long so I have toe get this object

00:07:44.370 --> 00:07:44.370
.

00:07:44.370 --> 00:07:45.850
So let's call this first.

00:07:45.850 --> 00:07:50.210
This is gonna be a list so I can see here get off zero,

00:07:50.210 --> 00:07:57.160
which is nothing but a long We can actually cast to this by pressing control one or command

00:07:57.160 --> 00:07:59.010
one ad cast along.

00:07:59.010 --> 00:08:04.520
You can t Now almost all the functions here are implemented with just one or two lines off

00:08:04.520 --> 00:08:05.030
court.

00:08:05.030 --> 00:08:08.800
And that's how spring makes hibernate core very simple.

00:08:08.800 --> 00:08:10.320
In the next video,

00:08:10.320 --> 00:08:14.650
let us test our this deal implementation on check out the results

