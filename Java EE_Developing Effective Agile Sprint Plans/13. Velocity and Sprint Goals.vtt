WEBVTT
1
00:00:01.162 --> 00:00:04.037
Step 4 - Velocity and Sprint Goals.

2
00:00:04.037 --> 00:00:06.691
You really can't have one without the other.

3
00:00:06.691 --> 00:00:10.556
So to recap, we have the sprint backlog with our story points.

4
00:00:10.556 --> 00:00:12.564
The backlog is in priority order,

5
00:00:12.564 --> 00:00:17.968
but how much of the sprint backlog can we get done in this upcoming sprint?

6
00:00:17.968 --> 00:00:19.805
As we mentioned earlier in this module,

7
00:00:19.805 --> 00:00:22.840
the amount of work a team can produce in a single

8
00:00:22.840 --> 00:00:25.248
sprint is known as the velocity.

9
00:00:25.248 --> 00:00:29.126
Before we see what might fix into the next sprint, let's look at capacity.

10
00:00:29.126 --> 00:00:33.122
It's important to briefly discuss capacity and compare it to velocity.

11
00:00:33.122 --> 00:00:35.601
Most of us are likely familiar with the term capacity.

12
00:00:35.601 --> 00:00:39.965
We use capacity to figure out how much work is possible to be produced.

13
00:00:39.965 --> 00:00:42.331
For example, if I have three people full time,

14
00:00:42.331 --> 00:00:48.525
that is 40 hours per week, for 2 weeks, my capacity is 240 hours.

15
00:00:48.525 --> 00:00:50.834
It is quite different in the Agile/Scrum world.

16
00:00:50.834 --> 00:00:56.097
Here we use the term velocity as our tool to plan work rather than capacity.

17
00:00:56.097 --> 00:00:59.307
Velocity is the amount of work a team can undertake.

18
00:00:59.307 --> 00:01:02.489
The velocity value is based on historical data.

19
00:01:02.489 --> 00:01:06.401
That is the average number of story points that have been

20
00:01:06.401 --> 00:01:08.824
delivered per sprint is our velocity.

21
00:01:08.824 --> 00:01:10.048
Now let's see an example.

22
00:01:10.048 --> 00:01:14.178
We calculate velocity by taking the total number of story points

23
00:01:14.178 --> 00:01:17.159
completed divided by the number of sprints.

24
00:01:17.159 --> 00:01:19.313
So it's a very simple calculation.

25
00:01:19.313 --> 00:01:22.731
Now velocity can change over time and is a much

26
00:01:22.731 --> 00:01:25.191
better measurement than just capacity.

27
00:01:25.191 --> 00:01:27.793
Capacity is more like what we could produce,

28
00:01:27.793 --> 00:01:32.076
whereas velocity is what the team is more likely to produce,

29
00:01:32.076 --> 00:01:34.978
and we are more likely to produce it because we're

30
00:01:34.978 --> 00:01:38.243
using historical data sprint by sprint,

31
00:01:38.243 --> 00:01:41.840
calculating the average velocity over time.

32
00:01:41.840 --> 00:01:46.139
And as I said, the velocity may change over time because the team gets better,

33
00:01:46.139 --> 00:01:48.377
gets smarter, gets more experienced,

34
00:01:48.377 --> 00:01:51.386
or might get a little bit less over time because someone

35
00:01:51.386 --> 00:01:54.248
may leave the company or leave the team,

36
00:01:54.248 --> 00:01:54.644
etc.

37
00:01:54.644 --> 00:01:57.495
Step 4 - Velocity and Sprint Potential.

38
00:01:57.495 --> 00:02:00.744
Now let's use our velocity to see if we can get all of our

39
00:02:00.744 --> 00:02:03.822
story points completed in this planned sprint.

40
00:02:03.822 --> 00:02:08.205
So total story points completed to date on our project is 531,

41
00:02:08.205 --> 00:02:12.418
and that is divided by the number of sprints to date,

42
00:02:12.418 --> 00:02:13.518
which is 11.

43
00:02:13.518 --> 00:02:17.193
So the average story points per sprint is 48.

44
00:02:17.193 --> 00:02:20.318
Here in our sprint backlog, we have a total of 44 story points,

45
00:02:20.318 --> 00:02:24.674
so we can fit the 44 planned story points into our

46
00:02:24.674 --> 00:02:28.429
velocity with 4 points to spare, also known as slack.

47
00:02:28.429 --> 00:02:30.965
And we will talk about slack in the next module.

48
00:02:30.965 --> 00:02:32.844
With only 4 points to spare,

49
00:02:32.844 --> 00:02:35.790
I would not choose to bring forward any additional

50
00:02:35.790 --> 00:02:40.709
user stories or other activity, but just keep that as a cushion.

51
00:02:40.709 --> 00:02:41.022
Naturally,

52
00:02:41.022 --> 00:02:44.254
there is nothing wrong by introducing the knowledge and value

53
00:02:44.254 --> 00:02:48.139
of your velocity in the previous step to help in the

54
00:02:48.139 --> 00:02:50.489
prioritization process and its outcomes.

55
00:02:50.489 --> 00:02:53.724
Team velocity is a key planning element of sprint planning,

56
00:02:53.724 --> 00:02:56.442
but why does it seem to change over time?

57
00:02:56.442 --> 00:02:58.238
Let's look at some examples.

58
00:02:58.238 --> 00:03:01.088
Velocity will be unstable initially,

59
00:03:01.088 --> 00:03:05.384
so give it three or four iterations before you see it settle down and stabilize.

60
00:03:05.384 --> 00:03:08.409
As you learn more about the business domain and the technology,

61
00:03:08.409 --> 00:03:11.650
it is likely the velocity will increase.

62
00:03:11.650 --> 00:03:14.742
As you work more as a team and better understand and work

63
00:03:14.742 --> 00:03:16.228
with the Agile processes themselves,

64
00:03:16.228 --> 00:03:20.207
it is likely the velocity will increase as well.

65
00:03:20.207 --> 00:03:21.756
Team members will come and go.

66
00:03:21.756 --> 00:03:24.553
At times, you may be down a member or two,

67
00:03:24.553 --> 00:03:26.177
which will affect your velocity,

68
00:03:26.177 --> 00:03:30.308
and at times you may even have new people that have yet to come up to speed.

69
00:03:30.308 --> 00:03:34.475
This variance is totally normal in tracking your velocity trend,

70
00:03:34.475 --> 00:03:36.766
can produce some interesting information.

71
00:03:36.766 --> 00:03:40.265
But in my opinion, this information should be kept to the team.

72
00:03:40.265 --> 00:03:44.772
Comparing velocity across teams really makes no sense at all.

73
00:03:44.772 --> 00:03:53.000
Different teams will have different ways of estimating, may weight user stories differently, and a host of other variabilities.

