1
00:00:00,831 --> 00:00:04,906
If you plan your sprint where the velocity equals the number of story points,

2
00:00:04,906 --> 00:00:07,021
I think that's just cutting things too close.

3
00:00:07,021 --> 00:00:10,238
Give your team some slack, that is some breathing room.

4
00:00:10,238 --> 00:00:11,795
So what is slack?

5
00:00:11,795 --> 00:00:16,098
Slack is time earmarked within an iteration that'll be

6
00:00:16,098 --> 00:00:18,423
used for unanticipated activities.

7
00:00:18,423 --> 00:00:21,289
Basically, you're setting aside time in reserve.

8
00:00:21,289 --> 00:00:24,378
Slack is your team wiggle room in each and every sprint.

9
00:00:24,378 --> 00:00:26,638
As I said at the beginning of this slide,

10
00:00:26,638 --> 00:00:31,057
if the number of story points in your sprint is identical to the velocity,

11
00:00:31,057 --> 00:00:34,605
you will likely be overcommitting your team.

12
00:00:34,605 --> 00:00:38,234
If you have a consistent number of hours per sprint where you are

13
00:00:38,234 --> 00:00:40,809
handling problems rather than pure user stories,

14
00:00:40,809 --> 00:00:43,877
then, of course, your velocity perfectly handles that.

15
00:00:43,877 --> 00:00:46,632
In other words, your velocity will remain where it is,

16
00:00:46,632 --> 00:00:49,373
albeit not as productive as you would like.

17
00:00:49,373 --> 00:00:53,049
But if your problems vary somewhat widely per sprint,

18
00:00:53,049 --> 00:00:55,807
your velocity will bounce around as well,

19
00:00:55,807 --> 00:00:58,854
so you may want to ensure you leave some slack by reducing the

20
00:00:58,854 --> 00:01:01,688
number of story points you want to tackle.

21
00:01:01,688 --> 00:01:04,751
Lastly, if your velocity is rock solid,

22
00:01:04,751 --> 00:01:14,000
then you might consider reducing slack by instead committing to a small extra user story in the next sprint.

