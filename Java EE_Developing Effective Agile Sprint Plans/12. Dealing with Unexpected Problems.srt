1
00:00:01,035 --> 00:00:03,561
As we all know, not everything goes according to plan.

2
00:00:03,561 --> 00:00:06,263
You will not be able to avoid all problems certainly,

3
00:00:06,263 --> 00:00:09,672
but maybe we can do a couple things to minimize a potential dumpster fire,

4
00:00:09,672 --> 00:00:14,873
so we want to discover unexpected problems as early as possible.

5
00:00:14,873 --> 00:00:19,172
So, work on the hardest, most uncertain tasks early in the sprint,

6
00:00:19,172 --> 00:00:20,118
or just do them first.

7
00:00:20,118 --> 00:00:22,233
This will help you find the tough problems sooner,

8
00:00:22,233 --> 00:00:26,187
and you will have more time to fix them and get the help you need.

9
00:00:26,187 --> 00:00:31,021
Share issues with your team ASAP, or at least by the next standup.

10
00:00:31,021 --> 00:00:33,648
This will give an opportunity for the team to solve

11
00:00:33,648 --> 00:00:35,712
collectively any issues or blockers.

12
00:00:35,712 --> 00:00:38,745
Now let's see how we cope with them once we find them.

13
00:00:38,745 --> 00:00:41,834
Here are two options for dealing with unexpected problems.

14
00:00:41,834 --> 00:00:46,076
With small setbacks, absorb them into the sprint by using slack,

15
00:00:46,076 --> 00:00:48,164
or reduce non- critical refactoring,

16
00:00:48,164 --> 00:00:51,179
that technical debt you were going to work on.

17
00:00:51,179 --> 00:00:54,407
Well, put it aside now, and focus on the issue at hand.

18
00:00:54,407 --> 00:00:56,708
Another option is canceling the spike.

19
00:00:56,708 --> 00:00:58,969
Maybe that research can just wait.

20
00:00:58,969 --> 00:01:00,920
Or work an extra hour or two.

21
00:01:00,920 --> 00:01:04,178
If some issues are just too big to absorb in the slack

22
00:01:04,178 --> 00:01:08,356
or any other way and the team agrees, then here are some other options.

23
00:01:08,356 --> 00:01:10,057
It is time to re-plan,

24
00:01:10,057 --> 00:01:13,863
so call a meeting with the full dev team and more than likely

25
00:01:13,863 --> 00:01:16,881
the product owner as well since it may affect the outcome of

26
00:01:16,881 --> 00:01:18,719
the sprint or even the release.

27
00:01:18,719 --> 00:01:21,238
Consider reducing the scope of the story.

28
00:01:21,238 --> 00:01:24,085
This is a good approach since the product owner will at

29
00:01:24,085 --> 00:01:26,272
least get some functionality delivered.

30
00:01:26,272 --> 00:01:31,175
So take that user story, and decompose it into two or three user stories,

31
00:01:31,175 --> 00:01:34,264
and just commit to one of those, not all of those.

32
00:01:34,264 --> 00:01:35,085
Or remove scope.

33
00:01:35,085 --> 00:01:38,088
That is, the user story that is causing the issue,

34
00:01:38,088 --> 00:01:40,619
remove it completely from the sprint.

35
00:01:40,619 --> 00:01:44,022
You can readdress this story in the review or in

36
00:01:44,022 --> 00:01:45,490
the next sprint planning meeting.

37
00:01:45,490 --> 00:01:47,885
This is not unusual, so don't be alarmed.

38
00:01:47,885 --> 00:01:55,000
Again, it may be caused by complex business rules, technical challenges, or even things beyond your control.

