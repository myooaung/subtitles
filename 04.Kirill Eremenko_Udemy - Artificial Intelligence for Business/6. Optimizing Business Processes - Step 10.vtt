WEBVTT

00:00.450 --> 00:02.730
Hello welcome to this new the toile.

00:02.730 --> 00:06.600
Now we're about to start implementing the Q learning process.

00:06.750 --> 00:12.320
So let's go back to our slide in the Brusa toil we took care of the initialization step.

00:12.330 --> 00:21.870
Now we're about to make this for loop iterating 1000 times repeating the following five steps process.

00:22.010 --> 00:23.520
And so how are we going to do that.

00:23.520 --> 00:30.090
Well I suggest that we dedicate one to toil for each of these five steps.

00:30.090 --> 00:36.960
Therefore it is the toilet stall with the first step selecting a random state SD from our 12th possible

00:36.980 --> 00:37.560
state.

00:37.640 --> 00:38.870
All right let's do this.

00:39.150 --> 00:45.060
So if you try to do it yourself you had to get some info on line to see which function could get you

00:45.060 --> 00:48.350
some random integer between 0 and 12.

00:48.540 --> 00:49.720
So if you found it.

00:49.770 --> 00:50.820
Congratulations.

00:50.820 --> 00:52.280
Now let's do it together.

00:52.620 --> 00:54.560
So first of all we have to start the for loop.

00:54.660 --> 00:55.870
That's easy to do.

00:55.950 --> 01:02.130
Flipping Python you need to start with four obviously and then you need to choose an index variable

01:02.130 --> 01:06.700
which will be incremented by one after each iteration of the for loop.

01:07.140 --> 01:12.560
And then you have to specify the range by adding in range and in the range function.

01:12.570 --> 01:16.350
You just need to put the range of values that is going to take.

01:16.530 --> 01:23.840
And these are from 0 to 1000 because we want to repeat this five steps process 1000 times.

01:24.090 --> 01:29.440
But the range function actually the lower bound is by default zeros.

01:29.440 --> 01:34.460
We only have to specify the upper bound which is 1000.

01:34.560 --> 01:36.100
And then you just add a column.

01:36.180 --> 01:37.200
And here we go.

01:37.290 --> 01:38.950
You're ready to start your for loop.

01:39.120 --> 01:40.080
All right.

01:40.080 --> 01:45.570
And so as we said in this first tutorial we're going to take care of this first up here which is to

01:45.570 --> 01:52.440
select a random state from our 12th possible states that is basically a random number between 0 and

01:52.440 --> 01:59.060
11 because indeed our states in our case study are those indexes from 0 to 11.

01:59.430 --> 01:59.700
All right.

01:59.700 --> 02:01.210
So let's go back.

02:01.530 --> 02:06.190
So first since we have to get the state you know we have to get a state randomly.

02:06.390 --> 02:12.340
Well we'll put that state in a new variable which we're going to call current state.

02:12.470 --> 02:16.850
Why do I specify current state instead of simply state.

02:16.960 --> 02:24.380
That's because remember in the next steps we'll get the next state as C plus 1 as opposed to the current

02:24.380 --> 02:32.480
state t and therefore to make a difference and specify your current state current state.

02:32.530 --> 02:38.370
Now here we are we have to choose a random number a random integer between 0 and 11.

02:38.660 --> 02:46.010
And there is a function again offered to us by none by that can allow us to do that directly which is

02:46.250 --> 02:53.690
the rand int function in which will have to specify as input the lower bound and the upper bound of

02:53.690 --> 02:57.950
the range from which we want to get that integer randomly.

02:57.940 --> 03:05.690
All right so this is the rand int function for the rand function is taken from the random Mudgal which

03:05.690 --> 03:12.240
is a module of non-bias and therefore in order to get all this we need to first call none by which I

03:12.320 --> 03:12.930
shall get.

03:12.960 --> 03:22.090
P then this random module which contains the function we want to use and which is the rand int function.

03:22.090 --> 03:22.810
All right.

03:22.940 --> 03:24.710
That's how we can get it to Congress.

03:24.890 --> 03:31.100
If you found this and so in this run in function as we just said we just have to improve the range of

03:31.100 --> 03:33.910
the states from which we want to take one randomly.

03:34.250 --> 03:37.840
And that is the range from 0 2.

03:38.060 --> 03:44.300
And here there is a little trap but classic one that you must know the upper bound in a range and Python

03:44.630 --> 03:45.740
is excluded.

03:45.740 --> 03:53.510
And therefore instead of specifying 11 here as we would do naturally Well we have two inputs 12 to range

03:53.510 --> 03:56.180
from zero or 12 zeroes included.

03:56.180 --> 04:03.460
So zero will be taken into account but 12 is excluded and therefore will go from zero to 11.

04:03.860 --> 04:04.450
All right.

04:04.550 --> 04:08.500
So if you manage to get the current state this way congratulations.

04:08.540 --> 04:12.500
So we're done with the first step of this big part here.

04:12.500 --> 04:18.530
Now we're going to tackle the second step which consists of playing a random action 80 that can lead

04:18.530 --> 04:24.750
to a next possible state that is where the reward of the action played in this state is above zero.

04:24.770 --> 04:30.090
That's what we explained before and from these possible actions that we can play from a state.

04:30.200 --> 04:33.530
We'll take a random one and that will make it for this step too.

04:33.620 --> 04:34.310
All right.

04:34.310 --> 04:38.690
So again try to do it by yourself and then we'll do it together in the next tutorial.
