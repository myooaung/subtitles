WEBVTT

00:00.630 --> 00:06.550
All right and here we go for the next step of our general framework in the that's in capital letters

00:06.600 --> 00:13.590
the next step is to get the next state and the next date for a specific case that he is composed of

00:13.590 --> 00:15.630
first the number of users.

00:15.630 --> 00:17.990
Second the rate of data transmission.

00:18.060 --> 00:22.120
And third the surface temperature when there is the AI.

00:22.190 --> 00:29.150
So that's exactly what we have to do in this new gen step of the general framework to get that next

00:29.150 --> 00:36.420
date after of course the AI plays an action at this specific time when we have to date our environment.

00:36.690 --> 00:37.800
So let's do this.

00:37.800 --> 00:44.340
And first we're going to get the atmospheric temperature because we will need it to compute the delta

00:44.430 --> 00:49.980
of intrinsic temperature because indeed assumption one says that the intrinsic temperature of the server

00:50.340 --> 00:55.350
is the atmospheric temperature plus one point twenty five number of users plus one point twenty five

00:55.350 --> 00:56.300
the rate of data.

00:56.550 --> 01:00.990
So we'll get that first that will allow us to get the intrinsic temperature then we'll get the number

01:00.990 --> 01:04.690
of users and the rate of data to get the first elements of the state.

01:04.800 --> 01:11.010
And then you know we'll get the temperature change course by the AI which will allow us to get the new

01:11.010 --> 01:13.410
surface temperature when we have to.

01:13.620 --> 01:18.960
And in the end we'll get the new surface temperature when we have no AI in that separate simulation.

01:18.960 --> 01:21.740
All right so let's deal with the atmospheric temperature.

01:22.050 --> 01:26.630
So remember that we have a void well for that which is right here.

01:26.670 --> 01:29.270
Self-edit atmospheric temperature.

01:29.490 --> 01:36.560
So I'm copying this and I'm going to base that here to get its value and what it's going to be its value

01:36.570 --> 01:38.250
Well that's simple.

01:38.250 --> 01:46.660
We're going to get of course again our list of monthly atmospheric temperatures and because among the

01:46.720 --> 01:53.110
arguments of our update environment function we have the month Well that's how we're going to get the

01:53.110 --> 01:59.680
atmospheric temperature by getting the elements of the next month because this is just the index of

01:59.680 --> 02:05.920
the month in the year of our monthly atmospheric temperature is just right and that's it.

02:05.920 --> 02:11.110
We got our atmospheric temperature the current one at that specific time because at that specific time

02:11.110 --> 02:15.410
we were in a specific month and we only need two months to get that atmospheric temperature.

02:15.760 --> 02:18.890
All right so now let's get the number of users the new one.

02:19.030 --> 02:20.200
So good question.

02:20.200 --> 02:22.330
What is going to be that new number of users.

02:22.540 --> 02:25.200
Well that's when we had to make a simulation.

02:25.210 --> 02:27.360
That's where the real simulation takes place.

02:27.370 --> 02:32.860
And you know the common part of the two separate simulations when we have the AI and when we have no

02:32.860 --> 02:33.480
AI.

02:33.690 --> 02:36.220
And so how are we going to make that simulation.

02:36.220 --> 02:43.480
Well first let's get the current number of users which is one of our viable self that are a number of

02:43.480 --> 02:44.290
users.

02:44.470 --> 02:46.930
And that's a date it's new value.

02:47.200 --> 02:53.140
So how are you going to simulate the fluctuation of number of users.

02:53.140 --> 02:57.860
Well we're going to take the old number of users that is just before the date.

02:58.120 --> 03:05.470
And to this all number of users we're going to add well the fluctuation of the number of users happening

03:05.740 --> 03:07.550
at that specific iteration.

03:07.780 --> 03:13.240
And so that's when we simulate exactly that tuition to simulate this with tuition we're going to take

03:13.590 --> 03:19.000
none by then we're going to take the random module of them by and from this from the module we're going

03:19.000 --> 03:27.310
to take the rand int function because indeed to this current number of users we're going to add an integer

03:27.700 --> 03:29.390
between two bounds.

03:29.530 --> 03:36.190
The lower bound which will be minus the maximum update of users that is minus 5 and the upper bound

03:36.190 --> 03:40.020
which will be plus the maximum date of users which is plus 5.

03:40.090 --> 03:46.210
So that will get an update of the number of users which will just increase or decrease by a certain

03:46.210 --> 03:48.040
number between 0 and 5.

03:48.040 --> 03:48.590
All right.

03:48.820 --> 03:52.330
That's how we can simulate the fluctuation of number of users.

03:52.330 --> 03:58.720
That's a simple simulation but let's not make it too complicated so that we can focus the maximum energy

03:59.110 --> 04:00.500
on the AI framework.

04:00.760 --> 04:06.530
All right so that's why the lower bound here is going to be minus that self max of that users and the

04:06.520 --> 04:11.350
upper bound is going to be that self plus self Max that users.

04:11.350 --> 04:12.180
OK good.

04:12.280 --> 04:19.270
But now we have to be careful with something I remind that there is a maximum authorized number of users

04:19.270 --> 04:21.050
which is 100.

04:21.080 --> 04:24.440
And also there is a minimum authorized number of uses which is done.

04:24.610 --> 04:31.840
So since we've just updated the current number of years well maybe this new number of users after the

04:31.840 --> 04:39.190
update will be either below the minimum number of users of 10 or above the maximum number of users of

04:39.240 --> 04:39.730
100.

04:39.730 --> 04:45.290
So we have to make sure this doesn't happen and if that happens we'll just bring it back to the Close's

04:45.310 --> 04:45.920
bound.

04:46.210 --> 04:54.940
So we're going to make two if conditions now one that will check if the self current number of users

04:55.180 --> 04:57.130
that was just updated.

04:57.130 --> 04:59.510
So I'm getting this variable here.

04:59.590 --> 05:08.950
If that new number of users is larger than in fact the maximum number of users going by self the max

05:08.950 --> 05:11.290
number of users of 100.

05:11.470 --> 05:17.630
So if the new number of users is larger than the maximum number of users Well what will happen.

05:17.770 --> 05:25.290
Well very simply what will happen is that we will update again our new number of users to sell equal

05:25.410 --> 05:34.270
to that maximum number of users because we don't want to go over 100 that maximum number of users.

05:34.270 --> 05:36.500
All right so that's where this first condition.

05:36.820 --> 05:44.860
And now second condition Elif this time that new number of users that we've just updated and I'm also

05:44.860 --> 05:52.090
going to get this because you're going to see that we can do it efficiently if that new number of users

05:52.270 --> 05:57.720
is this time below the minimum number of users.

05:57.850 --> 06:00.140
Well in that case what will happen.

06:00.400 --> 06:07.660
Well again we can take this what will happen is that we'll have to update again our current number of

06:07.660 --> 06:12.640
users which this time will be equal to the men number of users.

06:12.760 --> 06:13.060
Right.

06:13.060 --> 06:17.860
We don't want it to go below the minimum number of users so we're bringing it back up to the minimum

06:17.860 --> 06:19.330
number of users.

06:19.420 --> 06:20.320
Perfect.

06:20.320 --> 06:22.020
We updated correctly.

06:22.210 --> 06:25.900
The very first element of our state.

06:25.900 --> 06:27.970
And now let's take care of the second one.

06:27.970 --> 06:32.650
That is the second element of our state which is the rate of data transmission and in fact we're going

06:32.650 --> 06:35.710
to follow the same process as what we did here.

06:35.710 --> 06:41.110
So I'm just going to copy on this so we can be efficient and then I'm just going to replace all you

06:41.100 --> 06:47.720
know the numbers here by rate and uses year by data and to do this we can press command control plus

06:47.900 --> 06:50.080
are to do some replacement.

06:50.120 --> 06:54.860
And so as we just said to be efficient we're going to replace all the numbers here just with a section

06:54.950 --> 06:58.700
will pay attention to that by rate.

06:58.730 --> 06:59.670
So here we go.

06:59.670 --> 07:01.690
Let's start with this one.

07:01.940 --> 07:09.050
Replacing number by rate here here here here here here here and here and now we're going to replace

07:09.530 --> 07:16.000
all the users by data and starting with this one.

07:16.010 --> 07:23.980
So here we go replace replace replace replace replace replace replace replace replace and replace.

07:24.200 --> 07:26.540
And now we should be ready.

07:26.660 --> 07:29.860
That is this should be the correct update of the rate of data.

07:30.050 --> 07:31.260
Let's check it out quickly.

07:31.310 --> 07:32.660
I'm going to close this.

07:32.720 --> 07:38.900
So the new current rate of data at the beginning you know not checking anything is going to be increased

07:38.900 --> 07:45.610
by this random fluctuation of the current rate of data which is going to be a rate between minus maximum

07:45.650 --> 07:49.290
the update of data and plus maximum the date of data.

07:49.400 --> 07:55.880
And we do this random fluctuation with the same Rand int function which will return an integer in this

07:55.970 --> 07:56.780
range.

07:56.780 --> 07:57.420
Perfect.

07:57.590 --> 08:04.040
But then if this new rate of data that we've just updated goes above the maximum authorized rate of

08:04.040 --> 08:08.890
data well we'll bring it back down to that maximum rate of data.

08:09.110 --> 08:14.720
And same with the new rate of data that we've just have that it goes below the minimum authorized rate

08:14.720 --> 08:15.370
of data.

08:15.470 --> 08:23.420
Well we'll bring that back up to that minimum rate of data I seem to have forgotten to make that final

08:23.420 --> 08:24.550
replacement here.

08:24.610 --> 08:25.460
Here we go.

08:25.460 --> 08:28.470
Minimum rate of data and now perfect.

08:28.490 --> 08:30.220
Everything seems all good.

08:30.230 --> 08:35.420
Not only we got our atmospheric temperature but also we got the new number of juices which is the first

08:35.480 --> 08:40.420
element of our state and we got the new rate of data which is the second element of our state.

08:40.430 --> 08:43.100
And thanks to these three elements.

08:43.280 --> 08:50.990
Well we can now compute the new intrinsic temperature of which the formula that is given by Sumption

08:50.990 --> 08:51.420
1.

08:51.650 --> 08:55.280
And that's exactly what will take care of in the next tutorial.

08:55.520 --> 08:57.220
Until then enjoy a.
