WEBVTT

00:00.790 --> 00:06.880
Hello and welcome back to the final section of this part to minimizing the costs indeed you've just

00:06.880 --> 00:12.670
seen the intuitional lectures and the theory with Curiel and now we're about to implement this huge

00:13.090 --> 00:16.690
environment artificial brain deep learning algorithm.

00:16.720 --> 00:22.270
And of course the training and testing all that together from scratch and Step-By-Step.

00:22.270 --> 00:26.120
And so since we have a lot to do well let's get straight into it.

00:26.140 --> 00:27.860
I've already prepared everything.

00:27.920 --> 00:34.710
I am here on spider in my desktop folder where we have the artificial intelligence for business for

00:34.760 --> 00:35.390
there.

00:35.560 --> 00:41.710
And now we are in part two with a case study minimizing the energy consumption in the server with deep

00:41.710 --> 00:42.510
learning.

00:42.520 --> 00:43.830
Let's open this.

00:43.830 --> 00:50.050
And as you can see I've already prepared the five python files that we're going to implement together.

00:50.110 --> 00:55.690
However they're empty they only contain the titles and that is just to prepare everything.

00:55.810 --> 01:01.480
All right so now what I'm first going to do is open all of them just to show you what we're going to

01:01.480 --> 01:03.400
implement basically in these files.

01:03.610 --> 01:06.750
So the first well we're going to implement is the environment.

01:07.000 --> 01:12.910
Then the second vowel will implement is going to be the brain the artificial brain then the deep new

01:12.970 --> 01:14.160
learning algorithm.

01:14.210 --> 01:21.640
Indeed you wonder why then the training of the artificial intelligence and then the testing on one year

01:21.730 --> 01:23.310
of simulation.

01:23.360 --> 01:29.470
Now I'm going to close this test that I fell and let me explain quickly what each of these values will

01:29.470 --> 01:30.320
be.

01:30.320 --> 01:35.820
So first what's important for you to understand is that this is a framework which means that what we're

01:35.830 --> 01:42.130
going to implement here to try to minimize energy consumption in the server world thanks to this framework

01:42.280 --> 01:48.640
India you'll be able to adapt it easily to your business problem and from time to time while implementing

01:48.640 --> 01:55.270
the whole solution will take a step back and I will explain how you can adapt things and where we are

01:55.360 --> 01:57.790
with respect to the general framework.

01:57.790 --> 02:02.040
So this first well environment the why is the first file of the framework.

02:02.110 --> 02:07.690
And this is the file where we will build the whole environment you know with all the parameters with

02:07.690 --> 02:08.700
all the variables.

02:08.860 --> 02:14.830
And mostly this is a file that will also contain one of the most important functions of this implementation

02:14.830 --> 02:17.650
which is the update environment method.

02:17.860 --> 02:24.200
It is going to be a function that will update the environment as soon as an action is played.

02:24.210 --> 02:29.650
You know as soon as the AI plays an action all right and then we have the brain.

02:29.800 --> 02:36.070
And this is in this file that will implement the artificial brain that is this fully connected neural

02:36.070 --> 02:38.060
network of two layers.

02:38.140 --> 02:43.960
The first layer containing 64 neurons and the second there containing thirty two neurons.

02:44.080 --> 02:49.890
That's a deep neural network which will implement very easily thanks to Cara's than in this file.

02:49.890 --> 02:50.760
Did you end that.

02:50.780 --> 02:51.550
Why.

02:51.580 --> 02:56.430
That's where we will implement the whole deep Kule learning process.

02:56.440 --> 02:59.650
This whole process is provided in the book.

02:59.650 --> 03:04.190
You can try to implement it yourself and follow the steps than this.

03:04.200 --> 03:10.720
Well of course very fundamental that's where we will implement the whole training of our artificial

03:10.720 --> 03:18.180
intelligence which is basically composed of the brain and the killer in process and we will train this

03:18.230 --> 03:23.960
artificial intelligence inside the environment then we'll execute the training here.

03:24.030 --> 03:30.250
We'll be around 100 lines of code and once the training is executed and finished well we will have a

03:30.250 --> 03:37.680
trained brain and then we will be able to start the simulation phase which will also have to implement.

03:37.920 --> 03:45.030
And the simulation phase will simulate the actions of our AI on the server over a one year simulation.

03:45.160 --> 03:49.340
And at the same time we will compare what the other system would do.

03:49.390 --> 03:52.170
You know the servers integrate cooling system.

03:52.360 --> 03:56.660
When this AI is not activated that is when there is no AI.

03:56.800 --> 03:59.370
And that's how we will you know in the end.

03:59.530 --> 04:06.520
Compare the final performance of these two systems by computing the total energy saved by the eye with

04:06.520 --> 04:12.310
respect to the service integrated cooling system that is with respect to the situation where we don't

04:12.310 --> 04:13.690
have an AI.

04:14.050 --> 04:17.030
All right so these are the five vowels we have to implement.

04:17.140 --> 04:21.920
And we're going to start with the environment and what we're going to do already in this Etoile just

04:21.920 --> 04:30.480
to finish the soil because it's going to be very quick to import the libraries and actually the good

04:30.480 --> 04:37.770
news is that for this environment we will only need one library which is the number by library and we

04:37.770 --> 04:40.670
will still keep the same shortcuts.

04:41.160 --> 04:47.730
So as a reminder number is a library with which we can play easily with arrays and also with some useful

04:47.730 --> 04:52.380
mathematical tools here for the environment who will actually use them by for both.

04:52.500 --> 04:55.120
That is at some point you'll see will have to make vector.

04:55.170 --> 04:59.050
And you can guess what it is it's going to be the input state vector.

04:59.100 --> 05:04.910
Remember the states are going to be some input vectors of three elements temperature the number of users

05:05.130 --> 05:08.130
and the data rate transmission at a specific time.

05:08.460 --> 05:11.330
So we will use them to make the input state vector.

05:11.490 --> 05:17.520
And also we'll use them by to use some random functions because we will need them at some point.

05:17.520 --> 05:18.150
All right.

05:18.210 --> 05:22.910
So now in the next couple of tutorials we're going to implement this environment.

05:22.980 --> 05:28.710
And in the next tutorial we're going to build that huge and environment class which basically will contain

05:28.710 --> 05:34.290
the whole environment and how it works and is updated when we play an action.

05:34.310 --> 05:37.550
So I'll see in the next tutorial and until then enjoy.
