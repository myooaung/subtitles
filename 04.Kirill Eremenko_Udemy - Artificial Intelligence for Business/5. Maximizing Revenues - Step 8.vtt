WEBVTT

00:00.330 --> 00:06.480
Hello and welcome to this new tutorial and mostly to this new very essential code section because indeed

00:06.480 --> 00:11.860
that's in this code section that will implement the whole Tompson sampling algorithm.

00:12.000 --> 00:17.760
And as you can see we're also going to implement the random strategy you know just selecting randomly

00:17.900 --> 00:23.820
a strategy at each round that is each time a customer connects to the online retail business website

00:24.240 --> 00:31.620
and that's of course to assess how more performance art Thompson sampling algorithm can be compared

00:31.620 --> 00:37.950
to a benchmark and as benchmark we take the random strategy and mostly in the end you'll see will compute

00:38.040 --> 00:45.030
exactly how much revenues this online retail business will make more than it is would make by just you

00:45.030 --> 00:47.790
know deploying any of the nine strategies.

00:47.790 --> 00:54.270
All right so we'll compete not only the revenues earned that is the extra revenues made on the experiment

00:54.420 --> 01:00.570
because the goal is to save some costs on the experiment but then will also compute how much extra revenues

01:00.570 --> 01:02.330
it makes the whole year.

01:02.410 --> 01:07.620
You know because as soon as you get the best strategy you're going to of course deploy it on all your

01:07.620 --> 01:10.810
customers to convert you know your millions of customers.

01:10.830 --> 01:15.480
And since you have the best strategy that will maximize the revenues over the year.

01:15.720 --> 01:21.570
So we can do that as well but for now we have to implement Tompson something first in order to catch

01:21.690 --> 01:23.190
that best strategy.

01:23.190 --> 01:27.280
All right so here we go let's start implementing Thompson standing.

01:27.600 --> 01:34.230
So first of all remember that in the Thompsons underlying algorithm we'll have to take some random draws

01:34.500 --> 01:40.650
from the beta distributions you know we'll have a beta distribution for each of the nine strategies.

01:40.650 --> 01:44.610
By the way I'm going to open the Thompson sampling algorithm.

01:44.760 --> 01:45.600
Here it is.

01:45.610 --> 01:50.520
Now as I just told you you know remember and step one for each strategy.

01:50.540 --> 01:56.760
I will take a random draw from the following beta distribution with these two parameters and we have

01:57.120 --> 02:00.410
different parameters of course for each of the nine strategies.

02:00.420 --> 02:06.240
So since we're going to take some random draws from the beta distribution Well the first thing we're

02:06.240 --> 02:10.530
going to do here is to import random.

02:10.650 --> 02:18.210
And actually if you want we can even put that here because that's where we import all our libraries

02:18.660 --> 02:19.970
so in-born them.

02:20.000 --> 02:27.240
And this doesn't belong to non-pilots because you know we have directedness random module that contains

02:27.240 --> 02:34.740
the beta Vrede function which is exactly a function that can return a sample from the beta distribution.

02:34.830 --> 02:38.360
So we don't have to import them by we have directy what we want.

02:38.670 --> 02:40.950
So import run them and then here we go.

02:40.980 --> 02:46.410
Let's first introduce our variables that we'll use to implement this algorithm.

02:46.440 --> 02:46.790
All right.

02:46.810 --> 02:53.430
And speaking of these variables we have to initialize six variables in total and more precisely we have

02:53.430 --> 02:59.280
to initialize three variables for the random strategy and three variables for Thompson sampling and

02:59.280 --> 03:03.390
these three variables will be the same for the random strategy and Tompson sampling.

03:03.550 --> 03:07.890
Indeed the first one is the list of the strategies selected.

03:07.890 --> 03:12.290
So we'll make a list for the random strategy and the list for the Thompson sampling strategy.

03:12.480 --> 03:18.420
Then the second variable will be the toll we word that is action related reward that we get over the

03:18.420 --> 03:25.010
round which is simply the sum of the rewards accumulated over the round and then the third variable

03:25.020 --> 03:28.560
will be of course the reward we get at each round.

03:28.560 --> 03:32.980
And they'll be the reward of the random strategy you know by selecting randomly.

03:33.030 --> 03:36.000
Strategy Well we'll get the rewards 0 or 1.

03:36.120 --> 03:41.440
And then of course the reward of Tompson sampling at each round so Tompson something will select the

03:41.430 --> 03:44.090
strategy and say we'll get a 0 or 1.

03:44.220 --> 03:48.360
And this third variable will get that value 0 or 1.

03:48.660 --> 03:54.750
And then finally we have to initialize two extra variables which are only related to Tompson sampling.

03:54.750 --> 04:01.470
And then of course you know these two variables the number of times the strategy has received a reward

04:01.500 --> 04:09.210
one up to around and and this one the number of times the strategy has received a reward 0 up to round.

04:09.440 --> 04:14.910
And since we have to make these variables for each of the nine strategies Well what we'll do is simply

04:14.910 --> 04:17.010
make a list of nine elements.

04:17.130 --> 04:20.740
Each element of this list will correspond to a strategy and will contain.

04:20.740 --> 04:27.760
Of course this number of times that this strategy has received one word or zero we want to count them.

04:27.780 --> 04:31.190
So we'll make two lists one for each of these two numbers.

04:31.200 --> 04:31.920
All right.

04:31.920 --> 04:32.940
So let's do this.

04:32.940 --> 04:35.290
That's basically the initialization step.

04:35.460 --> 04:38.180
And so naturally that's what we have to start with.

04:38.250 --> 04:38.630
OK.

04:38.640 --> 04:44.070
So the first variable as we said is strategies selected.

04:44.070 --> 04:46.510
So I'm just giving a random name here.

04:46.580 --> 04:48.480
You can call it any other way.

04:48.480 --> 04:54.600
And as a reminder this is going to be a list of the strategies are selected over the round so by the

04:54.600 --> 05:01.580
end of the 10000 round we'll get a list of 10000 elements each of them will be strategies elected at

05:01.760 --> 05:09.260
the round and we're going to make that for the random strategies that we're adding are as here run strategy

05:09.740 --> 05:16.120
and we'll make another one for the Thompson something strange no.

05:16.130 --> 05:24.110
TS Thompson sampling and will initialises to list as empty list because of course the beginning we haven't

05:24.110 --> 05:25.550
selected anything.

05:25.960 --> 05:32.070
So strategies selected of the Ranum strategy and the Thompson sampling strategy.

05:32.150 --> 05:34.500
All right then next viable.

05:34.880 --> 05:43.010
So the next verbal is as we said the total reward or if you want the accumulated reward and again we're

05:43.010 --> 05:45.870
going to compute that for the Ranum strategy.

05:45.890 --> 05:52.460
So I'm adding our s here to specify difference and the Thompson sampling strategy.

05:53.420 --> 05:58.240
And again we have to initialize that these won't be less of course but numbers.

05:58.340 --> 06:03.950
And so we initialize that to zero because of course we haven't received any reward.

06:04.100 --> 06:07.300
So the accumulated reward is zero for both.

06:07.310 --> 06:07.980
All right.

06:08.030 --> 06:12.440
So total reward for the randoms Reggie and the Thompson sampling strategy.

06:12.440 --> 06:13.160
Great.

06:13.160 --> 06:18.390
And then the next step as we said we have a third variable you know which is the rewards like that are

06:18.410 --> 06:21.940
each round but that of course will be introduced later in the loop.

06:21.940 --> 06:29.720
Of course you know we'll loop over all the rounds from 0 to 10000 and that each round will collect the

06:29.720 --> 06:36.020
reward that we get by selecting the strategy either with the Ranum strategy or the Thompson sampling

06:36.080 --> 06:36.940
algorithm.

06:36.960 --> 06:43.160
So we'll use that in the loop but then remember we said that we had some extra variables to introduce

06:43.460 --> 06:46.790
which are Remember these two variables.

06:46.790 --> 06:50.980
And as we said we're going to introduce them in lists.

06:51.230 --> 07:00.050
So we're going to make a first list for this horrible and I want and which is number of times the strategies

07:00.170 --> 07:03.710
from 1 to 9 have received a 1 we weren't up to around.

07:03.710 --> 07:08.590
And and then we'll do the same we'll create the same list of nine elements each of these elements of

07:08.590 --> 07:10.470
the next I will grasp onto the strategy.

07:10.510 --> 07:16.210
I and will contain a number of times the strategy has received is zero we want to run it.

07:16.550 --> 07:17.430
So here we go.

07:17.510 --> 07:23.120
Let's introduce these variables to make that as clear as possible I'm going to name them.

07:23.210 --> 07:30.230
But again feel free to name them by any other names numbers of rewards.

07:30.350 --> 07:36.290
So you know I'm specifying numbers because we're going to get these numbers for each of the nine strategies

07:36.560 --> 07:38.930
in the list of nine elements.

07:38.930 --> 07:40.440
So numbers are rewards.

07:40.460 --> 07:47.360
And then you know I'm adding one specified that this is this number and I want the number of times the

07:47.360 --> 07:51.140
strategies have received a one word around.

07:51.670 --> 07:57.800
And then of course for the second element we're going to simply name it this way.

07:57.870 --> 08:00.710
Numbers of rewards zero.

08:00.870 --> 08:01.720
All right.

08:01.740 --> 08:07.820
And that will correspond to of course this number the number of times the treasuries have received as

08:07.820 --> 08:09.440
you were warned about.

08:09.800 --> 08:12.500
So make sure you understand this.

08:12.500 --> 08:14.190
This will work perfectly well.

08:14.210 --> 08:16.140
Now let's initialize that.

08:16.280 --> 08:20.360
So to initialize the list the best way there is a trick.

08:20.360 --> 08:26.100
We're not going to you know put nine zeros in square brackets because of course at the beginning.

08:26.180 --> 08:28.670
Well none of the strategies received any reward.

08:28.670 --> 08:35.270
So we have to initialize both of these lists as a list of nine zeros but we're not going to put nine

08:35.270 --> 08:37.160
zeros into some square brackets.

08:37.160 --> 08:39.090
We're going to use the following trick.

08:39.170 --> 08:46.670
We're going to put one zero in square brackets here and then we'll multiply that by D and D is equal

08:46.670 --> 08:47.510
to 9.

08:47.510 --> 08:52.570
So this will create a list of nine zeros.

08:52.570 --> 08:53.120
All right.

08:53.150 --> 08:55.830
Same for our second list.

08:55.830 --> 08:56.820
Here we go.

08:57.030 --> 09:00.410
And perfect we have initialized everything.

09:00.770 --> 09:03.490
So now we're ready to start the big for loop.

09:03.610 --> 09:08.940
You know that will basically repeat you know repeat the following three steps.

09:09.080 --> 09:14.150
So step 1 We'll take a random draw from the beta distribution for each of these strategies with these

09:14.150 --> 09:16.410
two numbers that we just initialized.

09:16.430 --> 09:23.210
Step 2 will take the maximum of these random draws and we'll get the strategy that corresponds to this

09:23.210 --> 09:24.020
maximum.

09:24.230 --> 09:28.820
And Step 3 of course we won't forget to update these two numbers.

09:28.830 --> 09:34.420
There is number of times the strategies have received a 1 or Z what we want to round them.

09:34.760 --> 09:37.810
So let's make this full loop in the next tutorial.

09:37.900 --> 09:39.680
And until then enjoy AI.
