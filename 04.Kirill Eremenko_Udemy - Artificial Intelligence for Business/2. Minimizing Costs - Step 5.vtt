WEBVTT

00:00.540 --> 00:06.560
Hello and welcome to the very beginning of this whole implementation indeed.

00:06.600 --> 00:14.010
Right now we're about to start building the environment which is the very first step of your AI framework

00:14.250 --> 00:16.910
when you're building an AI to solve a problem.

00:17.100 --> 00:19.980
And speaking of general AI framework.

00:20.190 --> 00:22.330
Well we're going to do something great.

00:22.470 --> 00:29.130
We're going to highlight the structure of the general AI framework so that you can take a step back

00:29.390 --> 00:37.410
visualize it clearly and use it to adapt our whole implementation here to your own environment to solve

00:37.410 --> 00:38.910
your own business problem.

00:39.060 --> 00:45.570
And speaking of general AI framework make sure you understand that this these five files here in the

00:45.570 --> 00:51.390
same order is also the general structure of this AI framework the general framework.

00:51.390 --> 00:57.120
When you're building a deep reinforcement learning model that is when you're doing reinforcement learning

00:57.120 --> 00:58.580
with deep learning.

00:58.770 --> 01:05.220
So just to make it clear the right big steps of the general AI framework is first to define the environment

01:05.550 --> 01:10.110
then build the brain then implemented Kule earning model.

01:10.110 --> 01:15.390
There's the whole deep reinforcement learning process then that makes your AI.

01:15.540 --> 01:19.860
And then you're going to train your AI in this training implementation file.

01:19.950 --> 01:25.260
And once the training is done you're going to test it as you're going to simulate the actions of the

01:25.320 --> 01:30.870
AI to regulate the temperature of the server over a certain period of simulation.

01:30.870 --> 01:33.900
That's the whole general AI framework.

01:34.110 --> 01:40.530
But then inside this general framework we're going to add some new structure which is still part of

01:40.530 --> 01:43.050
the general framework basically.

01:43.110 --> 01:47.610
Now we're in this big step building the environment and inside is big first step.

01:47.610 --> 01:53.460
Well you're going to follow the same steps for whatever environment you're building to solve whatever

01:53.460 --> 01:54.470
business problem.

01:54.660 --> 01:58.660
And I highlighted these steps in capital letters.

01:58.830 --> 02:03.870
So from now on you're going to see some code section titles in capital letters.

02:03.970 --> 02:10.560
Well that will be for the general AI framework and you will see some other code section titles in minimal

02:10.560 --> 02:13.530
letters and that will be for our own business problem.

02:13.530 --> 02:18.390
That is what we're trying to do right now to regulate the temperature of the server and save the maximum

02:18.420 --> 02:19.140
energy.

02:19.380 --> 02:25.020
So remember the Capital letters are for the general framework which you will be able to adapt to your

02:25.080 --> 02:27.930
own business problem with your own environment.

02:27.930 --> 02:32.700
And then the minimal letters are for this specific problem that we are solving.

02:32.700 --> 02:33.250
All right.

02:33.330 --> 02:40.080
So you'll be able to take a step back and adapt things easily to switch from this implementation to

02:40.470 --> 02:43.610
your implementation to solve your business problem.

02:43.620 --> 02:49.170
All right and now that we explained that here we go let's build the environment and our first step here

02:49.170 --> 02:54.960
is as you can see of the general framework to build the environment in a class.

02:54.960 --> 03:00.930
So first let me explain quickly for those of you who don't know what a class is a class is simply an

03:00.930 --> 03:07.800
advanced Python structure that will contain the instructions of something you want to build and hear

03:07.800 --> 03:08.670
what we want to build.

03:08.670 --> 03:14.030
Of course our environment the environment in which we will train our AI.

03:14.240 --> 03:17.730
And so a class always contains the same structure.

03:17.730 --> 03:23.370
First it contains the init method that will initialize all the variables of the class so that will be

03:23.370 --> 03:28.590
all the variables and the parameters of the environment that were listed before and that are also listed

03:28.590 --> 03:29.400
in the book.

03:29.670 --> 03:34.980
And then we're going to have some other method which will be like tools which can either complete some

03:35.040 --> 03:40.880
actions inside your class or here inside your environment or return some outcomes.

03:41.040 --> 03:47.340
Right so basically In conclusion a class is an Advanced button structure that contains the instructions

03:47.340 --> 03:53.040
of something you want to build into the parameters variables and some tools which are functions.

03:53.040 --> 03:59.130
And so now that we explained what a class is let's explain the why that is why are we building the environment

03:59.400 --> 04:00.600
inside a class.

04:00.810 --> 04:04.620
Well that's because we are trying to mimic a real world situation.

04:04.920 --> 04:10.020
And in our case what we're trying to do is build an AI AI to regulate the temperature of the server

04:10.020 --> 04:11.800
to save the maximum energy.

04:12.090 --> 04:14.830
But of course if we're doing that for a server.

04:14.940 --> 04:18.000
Well we would like to do that for any other servers.

04:18.150 --> 04:23.820
And if we build the environment inside a class then that means that in the end we'll be able to create

04:23.820 --> 04:29.480
some object of this class and the objects of the class will be the environments themselves.

04:29.700 --> 04:36.030
And so you know we'll be able to create one environment object for one server and another environment

04:36.030 --> 04:42.870
object for another server which will have some other arguments or some other parameters so that what

04:42.870 --> 04:44.880
we're doing right now for a single sir.

04:45.000 --> 04:51.180
Well we'll be able to do it for other servers and therefore we'll be able to do that for a whole datacenter

04:51.450 --> 04:55.400
regulating the energy of all the servers inside the data center.

04:55.560 --> 05:01.440
So that's the advantage of being in a class that is we will be able to create as the environment object

05:01.440 --> 05:08.010
as we want to regulate as many servers as we want inside the data center and you will see that when

05:08.010 --> 05:14.160
we create some environment objects we'll be able to choose several parameters in the arguments and that's

05:14.160 --> 05:15.870
what we'll do in the first method.

05:15.990 --> 05:21.870
The init method so that we can easily plug our object environments to another Saroo which will have

05:22.080 --> 05:28.320
some other parameters like some different Kuhr a number of users at this specific time t. where we connect

05:28.650 --> 05:35.760
our AI onto it or some other Karun rate of data and that's the whole purpose of making a class so I

05:35.760 --> 05:41.640
wanted to explain this so that you really understand the why of what were coding and now that we understand

05:41.640 --> 05:42.770
the what and the why.

05:42.840 --> 05:44.400
Well let's do the how.

05:44.520 --> 05:48.470
Let's implement this whole environment inside a class.

05:48.510 --> 05:51.860
And so what are going to be the steps of this implementation.

05:52.020 --> 05:54.810
Well these are here these are listed here.

05:54.810 --> 06:01.050
These are the steps and they're in capital letters meaning that these are the general steps of the general

06:01.100 --> 06:06.690
AI framework that you have to follow when you build an environment for whatever business problem you're

06:06.720 --> 06:08.320
trying to solve within the eye.

06:08.490 --> 06:09.790
And here are the steps.

06:09.870 --> 06:16.090
First we start by introducing an initialising all the parameters and variables of the environment.

06:16.140 --> 06:21.720
So that's going to be the parameters and variables listed before then we're going to make a method that

06:21.870 --> 06:27.890
updates the environment right after the AI plays in action at a specific iteration.

06:28.250 --> 06:34.230
Then what you're going to do any time is to make a method that resets the environment because when we

06:34.230 --> 06:41.880
train our AI we will need to reset the environment at the start of a new training book and then final

06:41.880 --> 06:47.340
step of this first part of the general act where we are building the environment is to make a method

06:47.340 --> 06:52.730
that gives us at any time the current state the last word and whether the game is over.

06:52.980 --> 06:57.930
And that's because at some point we will need to get the current state the less reward obtained and

06:58.110 --> 07:01.830
whether the game is over again at some point in the training.

07:01.830 --> 07:06.690
So these are the general steps of the general AI framework and therefore let's start with the first

07:06.690 --> 07:12.870
one introducing an initializing all the parameters and variables of the environment.

07:12.870 --> 07:21.000
And so as we said well we're going to do that inside a method called the in that method that is written

07:21.000 --> 07:26.350
this way and there is always the first method that you have to make when building a class.

07:26.350 --> 07:32.550
So this is still in the general process and then now we're going to start doing things specifically

07:32.610 --> 07:38.250
for our own business problem because in theory we're going to enter the arguments which are going to

07:38.250 --> 07:41.270
be the variables which we won't initialize directly.

07:41.280 --> 07:47.930
When building an environment object so that we can easily plug it to any other server or to plug it

07:47.930 --> 07:54.390
to a same server but which will have its parameters changed and these parameters are going to be the

07:54.390 --> 08:00.030
optimal temperature range you know the different servers can have different optimal temperature ranges

08:00.040 --> 08:06.450
so we want to be able to input it easily whenever we plug our environment onto a new server.

08:06.630 --> 08:08.630
Then it's going to be the initial month.

08:08.760 --> 08:14.550
Indeed whenever you want to try an end user Well maybe you'll be in a different month of some other

08:14.550 --> 08:18.330
servers you regulated before with another environment object.

08:18.600 --> 08:21.740
And then of course we'll have these very important parameters remember them.

08:21.850 --> 08:24.870
There are going to be the current number of users in the server.

08:24.960 --> 08:30.990
You know when you start training your AI to regulate its temperature and also the rate of data transmission

08:31.290 --> 08:31.890
in the service.

08:31.890 --> 08:37.480
So we want to be able to initialize them directly whenever you want to build an environment and train

08:37.480 --> 08:40.480
any eye to regulate the temperature of a server.

08:40.500 --> 08:46.320
So let's end with these arguments and we're always by the way have to start with self which will correspond

08:46.320 --> 08:53.340
to the future environment object that will be created after the class is done and self here will represent

08:53.340 --> 08:58.200
the object so you will see that I will introduce all the variables of the environment which will be

08:58.200 --> 09:04.410
actually all the variables of the object and to specify that these are variables belonging to the object.

09:04.500 --> 09:06.240
Well I will proceed.

09:06.320 --> 09:08.290
The variables were self-taught.

09:08.370 --> 09:09.810
All right and then here we go.

09:09.810 --> 09:12.070
Let's improve the other parameters.

09:12.060 --> 09:18.370
First we said that each server can have a different optimal temperature range.

09:18.450 --> 09:24.210
And here I'm going to enter some default values but these are going to be the values we saw before the

09:24.210 --> 09:27.730
optimal temperature range of 18 degrees for the lower bound.

09:27.900 --> 09:34.400
And remember 24 degrees for the upper bound then next argument.

09:34.500 --> 09:37.080
Well as we said it's going to be that initial month.

09:37.200 --> 09:43.060
Indeed we want to be able to specify the month we're starting the training and by default we're going

09:43.050 --> 09:47.750
to say that it's the first month but we'll be able to change this value later.

09:48.000 --> 09:56.270
And then the next parameter as we said is going to be the initial number of users inside the service

09:56.280 --> 09:58.290
that is the current number of users.

09:58.380 --> 10:04.940
When we start the environment to a specific server and training our AI to regulate its temperature and

10:04.940 --> 10:07.570
by default we're going to set that to 10.

10:07.580 --> 10:16.070
And finally we will also give us the option to enter directly the value for the initial rate of data

10:16.460 --> 10:21.860
which will be of course the rate of data transmission at the time we plug the environment onto a new

10:21.860 --> 10:24.930
server and train and the eye to regulate its temperature.

10:25.280 --> 10:28.480
And by default we're going to set that to 60.

10:28.790 --> 10:32.510
But again we'll be able to answer this later.

10:32.510 --> 10:34.170
All right then Cullen.

10:34.280 --> 10:35.460
And then here we go.

10:35.510 --> 10:41.300
We're ready to define all the variables and all the parameters of our environment objects that is of

10:41.300 --> 10:42.180
our environment.

10:42.410 --> 10:44.280
And let's do that in the next tutorial.
