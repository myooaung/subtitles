WEBVTT

00:00:01.450 --> 00:00:05.960
I want to introduce average new feature added by ESX.

00:00:05.970 --> 00:00:13.850
It's called subclassing and that basically allows you to extend both in objects and at your own function

00:00:13.860 --> 00:00:15.440
not just to them.

00:00:15.630 --> 00:00:18.490
Now of course you may extend any object there is.

00:00:18.780 --> 00:00:22.170
But I think a very quick example is steepled in every object.

00:00:22.170 --> 00:00:27.740
And this also shows how it works and why you might use it.

00:00:28.020 --> 00:00:29.210
It's simple to do.

00:00:29.310 --> 00:00:36.260
I use the class keyword and then I will create a new array and I will call my convertible airy and will

00:00:36.270 --> 00:00:44.640
see why they would like to assume. My convertible array now extends the boat in every case every object

00:00:44.670 --> 00:00:47.950
which is built into javascript.

00:00:48.010 --> 00:00:52.090
Now I will just add a new method to this array here like so.

00:00:52.590 --> 00:00:57.500
And what I want to do was I want to both convert the array all the values in the array.

00:00:57.660 --> 00:01:05.190
So I will have a helper every year return entry and then I use the already built in for each method

00:01:05.190 --> 00:01:09.790
which every object peopled in every object already has.

00:01:09.790 --> 00:01:15.560
And then it had a function to basically transform every value in this array.

00:01:15.990 --> 00:01:26.460
I will push this value into my new array here but I want to do is I want to add a converted string and

00:01:26.460 --> 00:01:28.010
then add the original value.

00:01:28.080 --> 00:01:31.730
So everything will be converted to a string therefore of course two.

00:01:32.130 --> 00:01:35.560
And then I will return my return array.

00:01:35.670 --> 00:01:40.050
Now with this if I create in you every number array let's say.

00:01:40.800 --> 00:01:45.020
And this is a new convertible array of course that's important.

00:01:45.030 --> 00:01:52.320
I can't use the brackets notation to create an array because you only use the default array have to

00:01:52.320 --> 00:02:00.090
use my own array the extended one so I'll create a new convertible array here and then I'll just push

00:02:00.090 --> 00:02:03.800
some valid values on it so I'll push one.

00:02:04.110 --> 00:02:17.850
And also to end the free real quick and thereafter I'll simply go to console log out and log my number

00:02:18.190 --> 00:02:20.970
every dot called Word.

00:02:21.360 --> 00:02:28.830
And what do you think we'll see if an would run convert one convert to convert to add free.

00:02:29.010 --> 00:02:36.030
That's just a brief example which I think perfectly shows how subclassing works because in the end subclassing

00:02:36.030 --> 00:02:43.050
is nothing special in its normal class behavior it only means that you can extend both in classes like

00:02:43.050 --> 00:02:50.820
theory class but of course upper classes too with subclassing you have the chance of changing the behavior

00:02:50.910 --> 00:02:54.510
of bolt in objects or providing certain features.

00:02:54.510 --> 00:02:57.510
Your app might be the missing and you need right now.

00:02:57.980 --> 00:03:01.970
So that's subclassing and definitely play around with that.

00:03:01.980 --> 00:03:07.990
Take all the balls and objects and try out what you may want to add but you can add all of that works