WEBVTT

00:00:01.410 --> 00:00:07.980
Some started from scratch here and that will create my person object here again let's say and this person

00:00:07.980 --> 00:00:18.120
object I'll have a name Max and I will also have a dynamic property here where I use the both in well-known

00:00:18.420 --> 00:00:19.550
iterator symbol.

00:00:19.560 --> 00:00:23.250
Again just repeating this because it's important.

00:00:23.290 --> 00:00:29.460
Rick turning you're giving me a unique ID which Chavez could recognize as oh ok.

00:00:29.490 --> 00:00:33.860
This object has an iterator it's now iterable.

00:00:33.890 --> 00:00:41.780
And here again or of course I will set my function like before when we overrode people in array behavior

00:00:41.780 --> 00:00:42.180
.

00:00:42.210 --> 00:00:50.250
Of course this is not an equal sign but a colon is function as you learn to show it return me an object

00:00:51.440 --> 00:00:59.460
and the object I return to here should have the next function the next function Den's should return

00:00:59.460 --> 00:01:01.800
me an object.

00:01:01.920 --> 00:01:05.450
You will get used to that pattern and it's not that difficult actually.

00:01:05.640 --> 00:01:13.850
What should have done that say falls and what should have a value of let's say 10.

00:01:13.880 --> 00:01:16.350
You're just some dummy values.

00:01:16.350 --> 00:01:18.850
Now let's say when went into a loop from my previous year.

00:01:18.870 --> 00:01:22.680
I actually want you to output all the hobbies I might have.

00:01:23.190 --> 00:01:31.510
So let's say I have my hobbies in it's own property here of course.

00:01:31.590 --> 00:01:33.830
And that's sports.

00:01:33.840 --> 00:01:42.390
And let's just say cooking to keep to short though we have those two hobbies and that is you.

00:01:42.480 --> 00:01:52.770
I'll have my let's say my iterator or my my helper variable which is I which is 0 at the beginning.

00:01:52.770 --> 00:02:03.350
Then I create my value here which is equal to poppys by then a increment of course.

00:02:03.900 --> 00:02:07.940
And then you which in turn is de-value up.

00:02:07.960 --> 00:02:19.350
So my current hobby done should be done if I is greater equal than hobby's startling otherwise.

00:02:19.490 --> 00:02:24.570
Or in this case it will be true otherwise it will be false and it's not done.

00:02:24.570 --> 00:02:27.450
And of course hobby's here is also a variable.

00:02:27.450 --> 00:02:33.590
I have to define your Endace should be discard hobby's so of my object and I have to do it here because

00:02:33.600 --> 00:02:38.730
for you use this the hobby and here then I would actually refer to this object here which is not what

00:02:38.730 --> 00:02:40.120
I want.

00:02:40.170 --> 00:02:49.230
So now I can simply create a four of loops so for let's say hobby of person and then I can print this

00:02:49.230 --> 00:02:50.270
out to the console.

00:02:50.280 --> 00:02:53.350
So console the law Bobby.

00:02:53.790 --> 00:02:59.130
Well since I'm incrementing I first year it just recognized I should make this chest rate right then

00:02:59.130 --> 00:02:59.700
.

00:02:59.910 --> 00:03:02.970
And with that I think it should be fine.

00:03:03.000 --> 00:03:06.700
So if I know to run what they think we'll see.

00:03:07.560 --> 00:03:13.550
Sports and cooking and that really shows the power of iterators.

00:03:13.770 --> 00:03:21.150
I just made my personal check here into Red Bull and it's up to you of course to define a word iterating

00:03:21.210 --> 00:03:28.710
looping through your optic should mean in your app or in your project you might have a case where you

00:03:28.710 --> 00:03:32.620
want to loop through a field like I'm doing here with hobbies.

00:03:32.730 --> 00:03:36.930
In other cases you might just increment a number whatever you want to do.

00:03:37.140 --> 00:03:41.290
Just be sure to also implement a logic to set done to false.

00:03:41.430 --> 00:03:49.150
Otherwise you won't create create an infinite for loop that's poor to remember or to understand