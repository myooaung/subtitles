WEBVTT

00:00:01.560 --> 00:00:07.710
Actually and now we're getting really fancy but for completeness sake I want to show it to you can not

00:00:07.710 --> 00:00:13.120
only use proxies as prototypes You can also wrap proxies itself.

00:00:13.380 --> 00:00:15.510
So oh I use var all the time.

00:00:15.510 --> 00:00:25.650
Well doesn't matter if I create another proxy or just name a proxy and does a new proxy that here.

00:00:25.680 --> 00:00:28.870
I passed the first proxy.

00:00:28.890 --> 00:00:31.070
Now a lot of proxies here.

00:00:31.530 --> 00:00:35.810
And then I said the same same handler.

00:00:36.240 --> 00:00:39.000
And then I'll copy my handler here too.

00:00:39.420 --> 00:00:44.960
And the first handler will actually have no traps.

00:00:45.330 --> 00:00:49.460
The promo handler here will however.

00:00:49.640 --> 00:00:58.220
No I'm setting produ handler on my produ proxy and then I'm using produ proxy as my prototype.

00:00:58.230 --> 00:01:01.620
And if you're still with me what do you think will happen.

00:01:01.620 --> 00:01:12.480
I had run I get non-access And so now the prototype is a proxy which wraps a proxy which uses this handler

00:01:13.690 --> 00:01:16.900
or the wrapping proxy uses this handler.

00:01:17.250 --> 00:01:25.470
And yet that is I don't know if you are using that all the time but just for completeness sake proxies

00:01:25.560 --> 00:01:31.890
can wrap proxies and you may play around with that as well and see how different traps that interact

00:01:31.890 --> 00:01:33.900
if you do have traps in both proxies.

00:01:33.900 --> 00:01:41.300
For example you might have a first check in the wrapping proxy and the proxy you might have another

00:01:41.310 --> 00:01:42.130
check.

00:01:42.150 --> 00:01:45.120
So there are just some things where you might want to think about