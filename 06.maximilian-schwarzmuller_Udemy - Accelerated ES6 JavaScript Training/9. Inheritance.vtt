WEBVTT

00:00:00.910 --> 00:00:03.660
Sweat or Person class you that's great.

00:00:03.970 --> 00:00:08.750
But the Scriptorium 5:57 offers some of her great Futurists with classes.

00:00:08.850 --> 00:00:16.050
It has inheritance built in so we already have inheritance with prototypes but no it's easier than ever

00:00:16.050 --> 00:00:19.500
to grasp and to do well on your own.

00:00:19.500 --> 00:00:24.390
So let's say off my person I want to create a specific purpose.

00:00:24.430 --> 00:00:32.460
This Max class and with the extents keyword Id find that Max should extend prison.

00:00:32.640 --> 00:00:39.420
This means it will inherit everything Priscilla has this property at this function but of able to add

00:00:39.420 --> 00:00:48.570
my own things to Word or override the properties or functions I inherited from my most recent parent

00:00:48.570 --> 00:00:49.510
class here.

00:00:49.740 --> 00:00:58.290
So we can check this by know not creating a new person but creating a new Mak's like this.

00:00:58.290 --> 00:01:05.430
If I now run Read what do you think I'll see if I get run see my name is Max.

00:01:05.430 --> 00:01:14.790
Because even though Max here doesn't have a constructor the parent class person which Max extends does

00:01:15.210 --> 00:01:21.300
therefore I can still pass the name and it will be used here and then I can also call this method because

00:01:21.300 --> 00:01:23.740
this is also set up in the parent class.

00:01:23.970 --> 00:01:27.930
So Max is currently not the most useful class.

00:01:27.940 --> 00:01:30.220
Let's add a property to him.

00:01:30.420 --> 00:01:35.910
So add a constructor to set this age equals.

00:01:36.060 --> 00:01:44.130
And now when it gets the age that is only true it is.

00:01:44.250 --> 00:01:54.390
And I want to change the greeting to say and I am and then just start age what do you think will happen

00:01:54.400 --> 00:01:58.800
if I had run or they get an error.

00:01:58.860 --> 00:02:08.670
And the reason for this error is that here in the constructor we're not calling our parent constructor

00:02:08.740 --> 00:02:08.860
.

00:02:08.880 --> 00:02:10.710
However we need to do that.

00:02:10.740 --> 00:02:14.350
Otherwise our parent class is not set up correctly.

00:02:14.430 --> 00:02:22.080
So as a rule of thumb you have to remember that if you want to use a constructor in your class which

00:02:22.080 --> 00:02:28.680
extends not for class you also have to call the constructor in the parent class.

00:02:28.680 --> 00:02:36.960
Now how do you do this with the super keyword and then parentheses this will call the parent constructor

00:02:36.970 --> 00:02:37.160
.

00:02:37.350 --> 00:02:39.610
Now it still won't pass a name.

00:02:39.660 --> 00:02:46.500
Now since this object here is named Max orthis class I think it's appropriate to always pass Max the

00:02:46.500 --> 00:02:48.140
parent constructor.

00:02:48.540 --> 00:02:52.090
So for now it run what you think will happen.

00:02:52.450 --> 00:02:52.800
We see.

00:02:52.800 --> 00:02:59.070
My name is Max 9:27 So now everything works again just by adding this super call.

00:02:59.070 --> 00:03:01.190
Here it is super constructor call.

00:03:01.200 --> 00:03:03.330
And as I said this is important to remember.

00:03:03.540 --> 00:03:08.450
Always call the constructor of your parent class if you want to add your own constructor.

00:03:08.550 --> 00:03:11.880
If you don't have your own constructor like before you don't need it.

00:03:12.060 --> 00:03:15.700
But if you do you sure need to call super here.

00:03:16.260 --> 00:03:19.890
And here you can always see how the inheritance works.

00:03:20.100 --> 00:03:26.760
We are able to create our own custom Lapchick which has all the features of the parent object has like

00:03:26.760 --> 00:03:32.460
to create function or a name but we customize it a bit more to make it a bit more specific and that

00:03:32.460 --> 00:03:34.140
is what inheritance is all about.

00:03:34.140 --> 00:03:41.910
In the end to have a parent blueprint and then create specific blueprints of that overarching blueprint

00:03:41.930 --> 00:03:42.570
.

00:03:43.140 --> 00:03:47.970
You can also add of course a new method here.

00:03:48.000 --> 00:03:49.590
No comma is required though.

00:03:49.650 --> 00:03:50.570
That's important too.

00:03:50.570 --> 00:03:53.340
We're not inside an object you don't need a comma here.

00:03:53.760 --> 00:03:58.280
So here then I could employ and treat twice.

00:03:58.440 --> 00:04:03.700
And what I want to do here is I want to call read two times.

00:04:03.870 --> 00:04:13.630
So if I call this right and I call it again and then here I call it read twice.

00:04:13.870 --> 00:04:14.370
What do you think.

00:04:14.370 --> 00:04:16.750
We'll see if I had run.

00:04:17.400 --> 00:04:17.760
We'll see.

00:04:17.760 --> 00:04:20.310
My name is Max and I'm 27 two times.

00:04:20.490 --> 00:04:27.720
So this is how I can well interact with within the object or with it in the class with the parent class

00:04:27.720 --> 00:04:28.110
.

00:04:28.110 --> 00:04:31.220
I could also use super here.

00:04:31.710 --> 00:04:35.930
So if I had run now it still works.

00:04:36.180 --> 00:04:43.870
The difference is this will point towards this object whereas superball directly refer to the parent

00:04:44.340 --> 00:04:46.380
and to show you a difference.

00:04:46.430 --> 00:04:57.710
All implemented create function here to purchase say hello and all exchange super for this again.

00:04:57.840 --> 00:05:02.870
So for now I'd run what will we see we see Halo.

00:05:03.300 --> 00:05:10.140
But if I exchange super for this for super again what do you think we'll now see.

00:05:11.010 --> 00:05:13.820
Well now we see My name is Max and I'm 27.

00:05:14.070 --> 00:05:20.940
So super I not only call the constructor here by adding parentheses I also have direct access to the

00:05:21.030 --> 00:05:22.410
direct parent.

00:05:22.800 --> 00:05:28.320
And this is of course great in a case like this where it might have a method in both the parent and

00:05:28.320 --> 00:05:33.990
the A.D extending object or extending class like Max here.

00:05:34.110 --> 00:05:40.590
But I want to call the parent Greta function then I can do this by using super with this I would always

00:05:40.590 --> 00:05:42.980
just get my own one but it was super.

00:05:43.020 --> 00:05:44.640
I can get the parent ones