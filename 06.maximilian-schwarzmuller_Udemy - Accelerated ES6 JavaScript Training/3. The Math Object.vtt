WEBVTT

00:00:01.380 --> 00:00:08.340
Demands object also received quite a lot of new methods and functions though a lot of them are really

00:00:08.370 --> 00:00:09.410
highly mathematical.

00:00:09.410 --> 00:00:16.020
Like for example the hyperbolic sign of whatever you input as an argument so I'm trying you know metric

00:00:16.020 --> 00:00:21.290
methods but there are also some other ones which I definitely don't want to hide.

00:00:21.630 --> 00:00:25.800
And of course always and and that is true for all the objects.

00:00:25.890 --> 00:00:30.780
A great way to find out more is simply had a word to the end the end to the muzzleloader Developer Network

00:00:31.200 --> 00:00:33.420
and check the individual objects there.

00:00:33.420 --> 00:00:38.490
If they have to function you're looking for because I really can't go through all of them and a lot

00:00:38.490 --> 00:00:44.040
of them already are available anyways and you might not be aware that the function you're looking for

00:00:44.100 --> 00:00:45.660
is already there.

00:00:45.660 --> 00:00:48.840
So back to newly added methods I want to press.

00:00:49.140 --> 00:00:57.900
There are mainly two which I think are might get used more often or aren't in that uninteresting.

00:00:57.920 --> 00:01:05.190
So let's say I have the number which is minus 10 then I now have a new math function.

00:01:05.190 --> 00:01:09.890
The math on the math object of course the sine method here.

00:01:09.930 --> 00:01:18.210
Now if I enter number here what do you imagine what could this method actually do.

00:01:18.210 --> 00:01:22.740
It returns minus 1 then what it actually does is it returns us sign.

00:01:22.740 --> 00:01:24.110
So this is a negative number.

00:01:24.110 --> 00:01:26.190
Therefore we get minus 1.

00:01:26.400 --> 00:01:28.880
If I remove the minus in front of the 10.

00:01:28.890 --> 00:01:30.910
Now what do you think we'll get.

00:01:31.380 --> 00:01:36.540
Well of course we get the 1 and so now we have a positive number and that is all but signed really does

00:01:36.930 --> 00:01:40.900
it gives us the sign of our number.

00:01:40.920 --> 00:01:44.640
Now what does happened if I pass 0 will get minus 1 or 1.

00:01:44.640 --> 00:01:45.270
What do you think

00:01:48.280 --> 00:01:51.010
is the case he gets Yaro So number case.

00:01:51.120 --> 00:01:52.850
If we have exactly zero.

00:01:52.890 --> 00:01:54.580
And we will get zero.

00:01:55.170 --> 00:01:58.110
And what if the pass not a number.

00:01:58.470 --> 00:02:00.420
What do you think we'll now get.

00:02:01.320 --> 00:02:09.000
We get not a number and the same is true if we pass a string for example in this case if I had run we

00:02:09.000 --> 00:02:16.170
also get another number and number Newmar function which I find interesting is the trunk function.

00:02:16.170 --> 00:02:23.370
If I have let's say this number this floating point number then I can use trunk method here and pass

00:02:23.370 --> 00:02:24.470
number.

00:02:24.500 --> 00:02:33.750
Now what do you think will it get if I had run while I get 0 and if I add free I also get free.

00:02:33.750 --> 00:02:39.810
So it basically truncates this number and cuts off everything offered the decimal place.

00:02:39.810 --> 00:02:43.960
Now you might think well that's basically the same as Ma floor right.

00:02:44.190 --> 00:02:49.580
Because if I add more of Florida here and I hit run I also get free.

00:02:49.830 --> 00:02:53.580
But you'll see that difference if I make this a negative number.

00:02:53.790 --> 00:03:01.060
Do you think oh now I get I get minus four because that's the lower number in this case.

00:03:01.060 --> 00:03:06.400
But we're trunk if I do run I'll get minus three.

00:03:06.540 --> 00:03:08.140
And that's the key difference.

00:03:08.250 --> 00:03:15.510
Truncate will actually cut off the decimal pieces or decimal places here and floor will give me the

00:03:15.510 --> 00:03:16.790
next lower number.

00:03:16.800 --> 00:03:22.100
So for positive numbers it works exactly the same but it doesn't for negative ones.

00:03:22.170 --> 00:03:26.490
That's important to understand and that's probably where trunk could be helpful to you.

00:03:26.490 --> 00:03:32.520
It spares you the act of having to get the absolute value for this before using ceil for a floor for

00:03:32.520 --> 00:03:33.100
example.

00:03:33.120 --> 00:03:35.630
So that's the difference.