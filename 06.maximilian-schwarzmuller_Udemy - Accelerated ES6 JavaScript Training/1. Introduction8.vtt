WEBVTT

00:00:01.350 --> 00:00:06.660
Well we really covered a lot until now and we're nearing the end of course.

00:00:06.840 --> 00:00:12.960
Now there are two big topics left and here's the first of the two the refl. API.

00:00:13.200 --> 00:00:19.740
Now they reflect API as the last module which will come after that refers to.

00:00:19.740 --> 00:00:23.890
Or it can be counter to the meta programming corner.

00:00:23.940 --> 00:00:32.010
So it's it has something to do with metaprogramming which means it gives us tools to evaluate our code

00:00:32.100 --> 00:00:38.070
during runtime for example to find out if the object has a specific property.

00:00:38.070 --> 00:00:47.610
Now the refl. API offer is a lot of built in static methods which you can use to create objects to create

00:00:47.610 --> 00:00:54.970
properties configure properties to call functions and now probably the first question everyone has.

00:00:55.110 --> 00:00:56.270
Why do we need this.

00:00:56.280 --> 00:01:00.540
We got all of that already in shell script.

00:01:00.570 --> 00:01:05.160
It has at least two advantages or free depending on how you count.

00:01:05.400 --> 00:01:08.520
One is in bundles all of these things.

00:01:08.550 --> 00:01:15.780
Currently there is a mixture of objects or built in keywords which do different things for example to

00:01:15.810 --> 00:01:22.340
delete a property you have the delete key word to create a new one you have object Daut defined properties

00:01:22.340 --> 00:01:26.920
so that static method on the object object and all of that.

00:01:26.920 --> 00:01:32.210
So we got a couple of different places where all these things live.

00:01:32.250 --> 00:01:37.040
And now it's bundled into one single API which is certainly a good decision.

00:01:37.050 --> 00:01:41.790
Now the old ways to do those things still persist.

00:01:42.000 --> 00:01:48.480
They have to for backward compatibility but they reflect API gives us a cleaner and quicker access to

00:01:48.480 --> 00:01:50.510
this to all those things.

00:01:50.850 --> 00:01:55.890
Additionally Of course it also introduces some new features some new method which allows us to do things

00:01:55.890 --> 00:01:57.390
we weren't able to do before.

00:01:57.390 --> 00:02:04.800
So that's another big advantage and deferred advantage is together with the proxy API which you will

00:02:04.800 --> 00:02:11.760
learn about in the next module and it works well together with it and you will see why that is.

00:02:11.760 --> 00:02:16.500
But with that it gives us a great way to interact with that API.

00:02:16.500 --> 00:02:19.390
As I said I'll come back to that in the next module.

00:02:19.410 --> 00:02:20.820
So that's the theory.

00:02:20.910 --> 00:02:26.330
Let's see how it actually works and which methods it offers to us.