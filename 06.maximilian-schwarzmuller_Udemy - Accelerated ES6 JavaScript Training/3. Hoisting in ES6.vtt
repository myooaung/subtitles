WEBVTT

00:00:01.860 --> 00:00:07.950
We also have important implications regarding posting remember hoisting referred to the fact that I

00:00:07.950 --> 00:00:10.330
could set something like this.

00:00:10.350 --> 00:00:19.290
I could set my age to 27 and then I could print my age and I could find that there after a like this

00:00:19.410 --> 00:00:21.360
or declare it like this.

00:00:21.360 --> 00:00:24.470
If I had run this would work.

00:00:24.600 --> 00:00:28.620
Now let's see if it all works if I use LET.

00:00:28.620 --> 00:00:29.510
What do you think will happen.

00:00:29.510 --> 00:00:37.040
I had run well since I was asking like this you probably expected this result we're getting an error

00:00:37.050 --> 00:00:37.090
.

00:00:37.110 --> 00:00:45.040
So the hoisting of the variables were flat or Konst doesn't work the way it works with var.

00:00:45.180 --> 00:00:50.080
We have to declare our variable before actually initializing it.

00:00:50.220 --> 00:00:57.000
And this certainly is a good behavior because there really wasn't any big advantage of the old approach

00:00:57.090 --> 00:01:03.150
of pulling everything up at the top and therefore probably leading to bad code.

00:01:03.160 --> 00:01:08.400
Are you forgetting something it's better to get a clear error or if you forget Dijk declaration before

00:01:08.400 --> 00:01:09.770
the initialization.

00:01:09.930 --> 00:01:16.830
So if I ran this code while we see 27 so this works and again I think this is change that really makes

00:01:16.830 --> 00:01:17.740
sense.

00:01:18.090 --> 00:01:24.080
What of course still will work is if we have a function do something.

00:01:24.660 --> 00:01:35.790
And here we for example have our h variable set to 27 and then I have

00:01:38.940 --> 00:01:40.110
at age

00:01:43.130 --> 00:01:44.580
like this.

00:01:44.580 --> 00:01:51.970
Now I call doing something and I log age.

00:01:52.920 --> 00:01:53.960
But you think will happen.

00:01:53.970 --> 00:02:04.920
I had run I get 27 so here it does work because actually it is declared because before it is used as

00:02:05.010 --> 00:02:11.130
I'm calling the function after declaring the variable and the function is to place where I use the variable

00:02:11.130 --> 00:02:11.290
.

00:02:11.310 --> 00:02:14.440
So therefore this is a valid approach and this will work.

00:02:14.550 --> 00:02:20.670
But if you really think about it as I just mentioned it works that way the same way as before it is

00:02:20.670 --> 00:02:22.230
declared before it's been used.

00:02:22.260 --> 00:02:24.130
And that is the core thing to keep in mind.

00:02:24.330 --> 00:02:27.110
You have to declare things for actually using them