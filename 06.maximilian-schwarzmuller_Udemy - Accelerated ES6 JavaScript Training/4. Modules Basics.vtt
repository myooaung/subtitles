WEBVTT

00:00:01.310 --> 00:00:05.420
So time to write some wonderful code the script that cestus our entry for.

00:00:05.430 --> 00:00:08.730
But since we're talking about modules imports and export thing.

00:00:08.750 --> 00:00:14.640
I also need a number of Voll I will name it external Dutchesse and let's say in this fall I'll have

00:00:14.640 --> 00:00:20.830
a variable which is a key value which should be 1000 and I want to use this value in my script that

00:00:20.850 --> 00:00:21.960
Cheops.

00:00:21.960 --> 00:00:27.360
Now of course I quit just at the import here but that's not what we're doing we're talking about modules

00:00:27.360 --> 00:00:27.520
here.

00:00:27.540 --> 00:00:28.400
Right.

00:00:28.410 --> 00:00:36.140
So any script that script a test file is somehow want to print this key value.

00:00:36.150 --> 00:00:43.020
And of course this year if a refresh won't work because key value is not defined as you can clearly

00:00:43.020 --> 00:00:43.940
see here.

00:00:44.200 --> 00:00:46.540
And thank you for having my console.

00:00:46.680 --> 00:00:48.270
So that doesn't work.

00:00:48.570 --> 00:00:51.320
And the question is how do we get it to work.

00:00:51.540 --> 00:01:00.810
Well by adding modules I can't export to variable here just like this or putting the export keyword

00:01:00.810 --> 00:01:05.510
in front of it and in the script Dutchesse file I can therefore import it.

00:01:05.820 --> 00:01:07.990
And now the syntax here is important.

00:01:08.070 --> 00:01:13.260
I use curly braces and inside of those braces I specify what I want to import.

00:01:13.530 --> 00:01:20.860
So I want to import key value into name here has to match the export that name India Rafal key value

00:01:20.870 --> 00:01:21.120
.

00:01:21.270 --> 00:01:24.690
And don't be confused by all these Aerostich just because I'm not finished yet.

00:01:24.930 --> 00:01:28.470
So I'm importing key value from.

00:01:29.010 --> 00:01:32.930
And now I specify the path from which I want to import.

00:01:33.180 --> 00:01:36.800
And I do want to import from my import from my.

00:01:36.870 --> 00:01:41.140
Excuse me from my external.js file here.

00:01:41.280 --> 00:01:43.840
They now clear the console and hit refresh.

00:01:44.120 --> 00:01:45.420
You'll see 1000.

00:01:45.630 --> 00:01:51.650
So now it prints to the consulate because I'm now importing from the Rafal successfully.

00:01:51.700 --> 00:01:58.980
But here's an important note though here I have to add tachi as which is needed for a system chess here

00:01:59.310 --> 00:02:04.720
to work correctly in the final specification.

00:02:05.010 --> 00:02:11.890
You would import chess from the module name like this high risk as you can see here.

00:02:11.920 --> 00:02:14.110
I'm just getting some arrows with that.

00:02:14.130 --> 00:02:19.080
That is it's not found because it's looking for a file named external without an extension.

00:02:19.080 --> 00:02:25.720
That is why I need to add the extension here to make this work.

00:02:28.080 --> 00:02:36.120
I really want to stress this though in the final version or as it will run in the browser in the future

00:02:36.360 --> 00:02:40.770
you would import from externals So what ever I write Dot.

00:02:40.880 --> 00:02:42.160
Yes.

00:02:42.660 --> 00:02:47.340
Think of it as if it word here it's schist needed for this example to work.

00:02:47.430 --> 00:02:54.000
You won't need the file extension in the future it's only here for to get this example to work really

00:02:54.000 --> 00:02:56.700
memorize that that's really important.

00:02:56.700 --> 00:03:00.190
So we're successfully importing a variable from another fall.

00:03:00.240 --> 00:03:09.030
And of course we can also add another export to say a function its name and test and does function and

00:03:09.030 --> 00:03:12.940
we'll simply print out estat.

00:03:12.960 --> 00:03:15.880
Now of course in my script not his fault.

00:03:16.050 --> 00:03:18.960
I can also add this import here to the top.

00:03:19.290 --> 00:03:32.420
I can import test from external datcha us and that I can run tests here.

00:03:32.980 --> 00:03:35.960
For me it does.

00:03:36.810 --> 00:03:38.060
You see it tested.

00:03:38.220 --> 00:03:40.530
So this also works.

00:03:40.530 --> 00:03:46.020
Now since I'm importing them from the same file I can also combine the import statement to not have

00:03:46.020 --> 00:03:47.490
two lines here.

00:03:47.910 --> 00:03:54.690
So now I've run this you'll still see it works even though I'm now doing this all in one line.

00:03:54.690 --> 00:03:58.900
On the other hand in the external file I can also change this.

00:03:58.920 --> 00:04:05.610
I could remove the export keywords here and instead at the bottom simply export.

00:04:05.610 --> 00:04:12.160
And then what call the braces key value and test.

00:04:13.470 --> 00:04:18.270
So if I cleared a console and now refresh.

00:04:19.320 --> 00:04:20.660
You see this also works.

00:04:20.700 --> 00:04:26.970
So I can group the imports in the script or chest fall and I can also grouped the exports here.

00:04:27.210 --> 00:04:32.730
And that's of course important to understand that you can follow it this way too when you don't have

00:04:32.730 --> 00:04:34.370
to specify the export keyword.

00:04:34.380 --> 00:04:38.400
You may but you don't have to you can also group it at the end of your file.

00:04:38.400 --> 00:04:47.040
Now here's an interesting question if I'd say my test function also changes my key value to 2000 and

00:04:47.040 --> 00:04:52.360
then in my script that shares fall I import this.

00:04:52.380 --> 00:04:57.270
I run test and then I lock key value again.

00:04:57.290 --> 00:05:00.050
What do you think will happen if I now look at this.

00:05:00.540 --> 00:05:05.340
Well the answer is C it's change cell key value.

00:05:06.000 --> 00:05:13.620
We import here really is only the reference to the variable in the aggregate file it's not copied over

00:05:13.620 --> 00:05:13.650
.

00:05:13.650 --> 00:05:19.040
We're not copying everything we're not copying the value we're just copying the reference.

00:05:19.050 --> 00:05:25.590
Therefore if I execute code which changes the value in the Rafal like the test function does then the

00:05:25.830 --> 00:05:29.630
key value will be changed to what if it printed again.

00:05:29.910 --> 00:05:33.020
It will be different from well to the first time we print it.

00:05:33.120 --> 00:05:34.920
So that's important to understand.

00:05:34.920 --> 00:05:39.080
You're not importing the values you were importing the references to them.

00:05:39.150 --> 00:05:41.770
So any links to the actual things.

00:05:41.970 --> 00:05:46.500
And of course you can also not only export functions or variables.

00:05:46.500 --> 00:05:51.270
You can also export arrays objects whatever you want later as you will see.

00:05:51.270 --> 00:05:54.210
You can also export classes to use to our files.

00:05:54.240 --> 00:05:56.850
So that's all it's possible.