WEBVTT

00:00:01.350 --> 00:00:12.720
Now that's with the adding and the initialising here of course I can also delete a value so I can delete

00:00:12.720 --> 00:00:14.550
one for example.

00:00:14.550 --> 00:00:21.030
And now if everyone unsurprisingly I get to or maybe this is a bit surprisingly because you could think

00:00:21.030 --> 00:00:29.180
that it stores the whole excess ones which were in kind of attitude a set that it could store down in

00:00:29.190 --> 00:00:35.580
the background kind of a back up in case you delete the item which was added but that's not the case

00:00:35.600 --> 00:00:35.740
.

00:00:35.880 --> 00:00:43.790
If you pass value which is already Indosat multiple times it's not stored as a back up it's just omitted

00:00:43.830 --> 00:00:44.700
and you're done.

00:00:44.730 --> 00:00:50.410
And if you delete the one value which was in the set then it's completely deleted and not did you ever

00:00:50.430 --> 00:00:50.910
back up.

00:00:50.910 --> 00:00:55.830
Values are used instead or something like that so each was only there once.

00:00:55.860 --> 00:01:01.650
If you delete that it's gone you have to re-add  it like with the map you also got the clear method

00:01:02.040 --> 00:01:04.430
to get rid of all values in the set.

00:01:04.470 --> 00:01:09.570
So if I had run now we don't see anything because there's nothing to loop through because I cleared

00:01:09.600 --> 00:01:12.370
all the items in the set all the values.

00:01:12.840 --> 00:01:19.280
Now how do you get a value both think about this function get one.

00:01:19.290 --> 00:01:21.040
Does this make any sense.

00:01:21.270 --> 00:01:28.050
You get the value one from a list which only has values that doesn't really make sense right.

00:01:28.050 --> 00:01:31.190
So therefore this method doesn't exist.

00:01:31.190 --> 00:01:32.800
You don't have a get method.

00:01:33.270 --> 00:01:37.700
But what we do want to have though is the pass method.

00:01:37.950 --> 00:01:42.290
So I can check if this sets has a 1.

00:01:43.020 --> 00:01:48.510
So now I see true because of course we do have a one inside the set and this makes much more sense because

00:01:48.510 --> 00:01:50.310
you could check and save condition.

00:01:50.400 --> 00:01:52.650
If your set contains a certain value.

00:01:52.830 --> 00:01:59.040
And if your code execution depends on that because your asset might have been like used Reddy's who

00:01:59.040 --> 00:02:02.860
should enter should be able to enter this page and then you just check.

00:02:02.910 --> 00:02:05.470
Is this user ID which tries to enter the page.

00:02:05.520 --> 00:02:09.660
In my set of all out user IDs you check them and that has my third.

00:02:09.690 --> 00:02:15.250
And if this is the case there is no need to retrieve the value because you already had that anyways

00:02:15.270 --> 00:02:15.810
right.

00:02:15.820 --> 00:02:18.760
Going you store values in the set in order to go.

00:02:18.840 --> 00:02:23.290
So you have this have a method to check if a set contains a certain value