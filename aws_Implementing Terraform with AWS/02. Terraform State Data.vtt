WEBVTT
1
00:00:01.140 --> 00:00:06.200
[Autogenerated] terra form state data is the information that maps

2
00:00:06.200 --> 00:00:10.990
what's in your configuration to the real world resources that have

3
00:00:10.990 --> 00:00:14.130
been deployed in your public cloud provider.

4
00:00:14.130 --> 00:00:14.900
So, for instance,

5
00:00:14.900 --> 00:00:19.580
if you define a VPC called pure VPC in the terra form config

6
00:00:19.580 --> 00:00:23.500
that maps to a vpc IDE in the state file,

7
00:00:23.500 --> 00:00:27.750
which maps to an actual VPC in AWS Now when you

8
00:00:27.750 --> 00:00:30.430
deploy a configuration via terra form,

9
00:00:30.430 --> 00:00:32.830
if you don't tell it where to put that state data,

10
00:00:32.830 --> 00:00:37.230
it's gonna put it locally in the same directory Azure configuration.

11
00:00:37.230 --> 00:00:40.500
And that's fine when you get started with your development projects.

12
00:00:40.500 --> 00:00:44.140
But as you progress through your ______ form journey,

13
00:00:44.140 --> 00:00:47.340
you may want to move that state data somewhere else.

14
00:00:47.340 --> 00:00:48.370
Why would you want to do that?

15
00:00:48.370 --> 00:00:51.640
Well, for one reason, that data is kind of important,

16
00:00:51.640 --> 00:00:55.340
and your laptop or desktop may not be the safest

17
00:00:55.340 --> 00:00:57.340
place for that state data to live.

18
00:00:57.340 --> 00:00:58.840
Laptops get lost.

19
00:00:58.840 --> 00:01:00.610
Hard drives get corrupted.

20
00:01:00.610 --> 00:01:05.440
Let's safeguard that state data by putting it somewhere a little more robust.

21
00:01:05.440 --> 00:01:10.910
The other reason is moving your state data to remote location enables team

22
00:01:10.910 --> 00:01:15.140
collaboration because other team members can also point at that remote

23
00:01:15.140 --> 00:01:18.240
state and work on the same configuration as you.

24
00:01:18.240 --> 00:01:22.920
That remote state can also be used as a data source for another team that

25
00:01:22.920 --> 00:01:26.350
wants to pull information about one of your deployments.

26
00:01:26.350 --> 00:01:30.640
So it really supports two different kinds of team collaboration.

27
00:01:30.640 --> 00:01:36.040
The location of your state data is referred to as a back end.

28
00:01:36.040 --> 00:01:40.160
The local back end is when Terra Form stores your data locally

29
00:01:40.160 --> 00:01:42.510
in the same directory Azure configuration.

30
00:01:42.510 --> 00:01:45.730
But there's also a bunch of other supported back ends,

31
00:01:45.730 --> 00:01:48.440
including remote back ends.

32
00:01:48.440 --> 00:01:50.790
Now there's basically two categories of back ends.

33
00:01:50.790 --> 00:01:54.440
There's standard and enhanced enhanced means.

34
00:01:54.440 --> 00:01:57.210
Not only does it store the state data for you,

35
00:01:57.210 --> 00:02:00.740
but it actually also runs the terra form processes.

36
00:02:00.740 --> 00:02:01.410
So technically,

37
00:02:01.410 --> 00:02:04.290
the local back end is enhanced because it's storing both the

38
00:02:04.290 --> 00:02:07.040
state data and running the terra form processes.

39
00:02:07.040 --> 00:02:09.990
These only other back ends that are enhanced our terra

40
00:02:09.990 --> 00:02:14.980
form cloud and terra form enterprise, So those would be your enhanced back ends.

41
00:02:14.980 --> 00:02:17.590
Everything else is considered standard.

42
00:02:17.590 --> 00:02:21.470
There are also some special features that are supported by some back ends,

43
00:02:21.470 --> 00:02:22.670
but not all of them.

44
00:02:22.670 --> 00:02:28.970
One is the concept of locking when you are making changes to the state data.

45
00:02:28.970 --> 00:02:31.840
You don't want anybody else interfering with those changes

46
00:02:31.840 --> 00:02:34.740
and making other changes simultaneously.

47
00:02:34.740 --> 00:02:38.740
So back ends that support locking will prevent any changes to the

48
00:02:38.740 --> 00:02:42.840
state data outside of what you're doing at the moment.

49
00:02:42.840 --> 00:02:46.940
Another special feature is that of workspaces and workspaces

50
00:02:46.940 --> 00:02:50.500
are the capability that Terra Form has of using the same

51
00:02:50.500 --> 00:02:54.040
configuration for multiple environments.

52
00:02:54.040 --> 00:02:56.560
Basically, it's using a single configuration,

53
00:02:56.560 --> 00:03:00.500
but different state data for each environment that you want

54
00:03:00.500 --> 00:03:04.320
to use and that state data is stored in a works based

55
00:03:04.320 --> 00:03:07.310
construct some back and support it.

56
00:03:07.310 --> 00:03:13.000
Some don't. Now, how does AWS stack up in all of this?

