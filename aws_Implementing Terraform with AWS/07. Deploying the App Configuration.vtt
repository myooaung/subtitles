WEBVTT
1
00:00:01.040 --> 00:00:03.710
[Autogenerated] All right, let's get our configuration deployed.

2
00:00:03.710 --> 00:00:06.990
And the way we're going to do that is go over to commands and we are

3
00:00:06.990 --> 00:00:09.500
going to initializer are terra form configuration.

4
00:00:09.500 --> 00:00:12.080
But first, we have to fill out some information here.

5
00:00:12.080 --> 00:00:18.040
Since we're storing our state remotely first, we'll fill out the bucket name.

6
00:00:18.040 --> 00:00:19.160
All right, there we go.

7
00:00:19.160 --> 00:00:22.330
That is our application bucket name, and we scroll over.

8
00:00:22.330 --> 00:00:26.440
We need to fill out that dynamodb table name.

9
00:00:26.440 --> 00:00:29.920
All right, we have our dynamo DB table set as well.

10
00:00:29.920 --> 00:00:33.690
So we can grab that entire command and we'll open up the

11
00:00:33.690 --> 00:00:38.440
terminal down below and go ahead and paste that in.

12
00:00:38.440 --> 00:00:40.780
And now it will initializer that back end,

13
00:00:40.780 --> 00:00:42.710
download the modules and plug ins,

14
00:00:42.710 --> 00:00:48.040
and we will be ready to go to plan our deployment.

15
00:00:48.040 --> 00:00:51.040
All right, let's go ahead and plan that deployment out.

16
00:00:51.040 --> 00:00:54.940
Go ahead and copy this command for terra form plan.

17
00:00:54.940 --> 00:00:56.440
Go ahead and run that,

18
00:00:56.440 --> 00:00:58.750
and it's going to create all the resources that we

19
00:00:58.750 --> 00:01:01.040
just went through in the main TF.

20
00:01:01.040 --> 00:01:03.520
You can see it's also refreshing the state from our

21
00:01:03.520 --> 00:01:06.190
network state that flew by pretty quickly.

22
00:01:06.190 --> 00:01:10.840
So maybe I'll scroll back up and take a look at that.

23
00:01:10.840 --> 00:01:11.150
All right,

24
00:01:11.150 --> 00:01:13.780
so if we scroll back up to the beginning when it started to

25
00:01:13.780 --> 00:01:16.960
do things you can see it is refreshing.

26
00:01:16.960 --> 00:01:21.090
State for ______ form remote state .NET work so it was able to

27
00:01:21.090 --> 00:01:25.370
successfully go out and access the object in the S3 bucket

28
00:01:25.370 --> 00:01:27.640
that has the remote state in it.

29
00:01:27.640 --> 00:01:28.390
That's very exciting.

30
00:01:28.390 --> 00:01:31.240
So our plan went successfully.

31
00:01:31.240 --> 00:01:33.320
It's going to deploy all these objects.

32
00:01:33.320 --> 00:01:39.940
Let's go ahead and run terra form apply.

33
00:01:39.940 --> 00:01:42.470
Now it is creating an RDS instance.

34
00:01:42.470 --> 00:01:44.080
It's creating a C two instances.

35
00:01:44.080 --> 00:01:47.680
It's creating an application load bouncer out of all of our deployments.

36
00:01:47.680 --> 00:01:49.640
This one's going to take a while.

37
00:01:49.640 --> 00:01:55.000
So through the magic of editing will go ahead and fade to when

38
00:01:55.000 --> 00:01:57.770
the entire thing deploy successfully and just take a look at

39
00:01:57.770 --> 00:02:00.540
what's going on in the console.

40
00:02:00.540 --> 00:02:03.730
All right, it looks like it finished successfully and arts.

41
00:02:03.730 --> 00:02:06.540
Glad you didn't wait because that was 10 minutes of just

42
00:02:06.540 --> 00:02:08.140
watching that screen go buying it.

43
00:02:08.140 --> 00:02:11.140
Usually the database is what takes the longest to create.

44
00:02:11.140 --> 00:02:15.340
Let's go over to the console real quick and see what got provisioned.

45
00:02:15.340 --> 00:02:18.350
All right, here we are in the AWS console,

46
00:02:18.350 --> 00:02:21.370
and we've got our database that looks like it's been deployed.

47
00:02:21.370 --> 00:02:23.350
Globo Dev Dash D B.

48
00:02:23.350 --> 00:02:25.940
Let's go ahead and click on that.

49
00:02:25.940 --> 00:02:28.790
And if we scroll down to the networking area we can see,

50
00:02:28.790 --> 00:02:31.890
it's using the Dev vpc just like we intended.

51
00:02:31.890 --> 00:02:35.160
And it's using these sub net group DevOps Dash vpc.

52
00:02:35.160 --> 00:02:36.260
So that's perfect.

53
00:02:36.260 --> 00:02:38.650
It is all set and ready to go.

54
00:02:38.650 --> 00:02:40.050
Let's go over to E.

55
00:02:40.050 --> 00:02:42.640
C two.

56
00:02:42.640 --> 00:02:44.770
There we go, loading up E C two.

57
00:02:44.770 --> 00:02:46.950
And if we scroll down on the left,

58
00:02:46.950 --> 00:02:51.930
we can see we've got our load balancers down here and

59
00:02:51.930 --> 00:02:53.430
we've got a single load bouncer.

60
00:02:53.430 --> 00:02:55.560
Our Web server a L B.

61
00:02:55.560 --> 00:02:58.440
Let's go ahead and expand up the bottom a little bit.

62
00:02:58.440 --> 00:03:00.290
And if we look over in listeners,

63
00:03:00.290 --> 00:03:04.040
we've got one listener that's listening on Port 80.

64
00:03:04.040 --> 00:03:10.510
If we go down to our auto scale groups, we've got our Web servers,

65
00:03:10.510 --> 00:03:14.170
auto scale group we can look at the instances here and see the two

66
00:03:14.170 --> 00:03:17.160
instances that were deployed and they're both healthy and they're

67
00:03:17.160 --> 00:03:19.160
in two different availability zones.

68
00:03:19.160 --> 00:03:21.030
That's also what we wanted.

69
00:03:21.030 --> 00:03:26.040
So let's go back to our load bounce are here.

70
00:03:26.040 --> 00:03:27.260
We'll grab the DNS.

71
00:03:27.260 --> 00:03:28.340
Name of our load.

72
00:03:28.340 --> 00:03:29.110
Bouncer.

73
00:03:29.110 --> 00:03:32.040
Open up a new tab and paste it in.

74
00:03:32.040 --> 00:03:32.710
And there we go.

75
00:03:32.710 --> 00:03:34.770
We get the engine NICs loading page.

76
00:03:34.770 --> 00:03:36.870
So everything set up correctly.

77
00:03:36.870 --> 00:03:44.000
We know that Joshua Magee is gonna be super pumped. Now, let's talk about CloudFormation templates.

