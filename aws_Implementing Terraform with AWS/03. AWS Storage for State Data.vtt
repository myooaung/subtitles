WEBVTT
1
00:00:01.240 --> 00:00:02.440
[Autogenerated] on a W s.

2
00:00:02.440 --> 00:00:07.320
You can use their native storage to hold your remote state data.

3
00:00:07.320 --> 00:00:08.870
Which native storage?

4
00:00:08.870 --> 00:00:14.790
Why S3 So you can write your state data as an object in an S3 bucket.

5
00:00:14.790 --> 00:00:18.600
That S3 bucket is not going to support locking by itself,

6
00:00:18.600 --> 00:00:22.660
though you also need to create a dynamo DB table,

7
00:00:22.660 --> 00:00:25.940
where Terra Form will put a locking entry when it's

8
00:00:25.940 --> 00:00:29.200
manipulating the state that's in the three bucket.

9
00:00:29.200 --> 00:00:34.140
And those two components combined allow the solution to support locking.

10
00:00:34.140 --> 00:00:36.700
It also natively support workspaces,

11
00:00:36.700 --> 00:00:39.410
and it doesn't need the dynamodb table for that.

12
00:00:39.410 --> 00:00:45.440
It could just use S3 in the native constructs in S3 to support workspaces.

13
00:00:45.440 --> 00:00:50.620
You can also specify granular control within your bucket in S3,

14
00:00:50.620 --> 00:00:55.030
which means you can use the same bucket for multiple state files and

15
00:00:55.030 --> 00:00:57.940
actually have different teams using the same state bucket.

16
00:00:57.940 --> 00:01:00.910
Because you can say this path is for the infrastructure team

17
00:01:00.910 --> 00:01:02.450
and I'm going to Grantham full access,

18
00:01:02.450 --> 00:01:04.760
and this other path is for the application team,

19
00:01:04.760 --> 00:01:07.220
and I'll grant them full access on that one.

20
00:01:07.220 --> 00:01:11.420
So it does give you that granular level of control and finally,

21
00:01:11.420 --> 00:01:15.210
state data can have some sensitive information in it

22
00:01:15.210 --> 00:01:18.210
things like passwords and API keys.

23
00:01:18.210 --> 00:01:20.940
So you do want a solution that supports encryption.

24
00:01:20.940 --> 00:01:24.270
And fortunately, as three does support encryption,

25
00:01:24.270 --> 00:01:27.840
so make sure you have that sensitive data encrypt did.

26
00:01:27.840 --> 00:01:31.910
Now, going hand in hand with this configuration for remote state,

27
00:01:31.910 --> 00:01:37.530
we also need to be able to authenticate to write data to S3 and Dynamo DB.

28
00:01:37.530 --> 00:01:39.940
So let's see how we do that.

29
00:01:39.940 --> 00:01:43.340
Just like we saw with the A W s provider,

30
00:01:43.340 --> 00:01:49.440
the S3 back and supports a number of different authentication methods.

31
00:01:49.440 --> 00:01:52.340
The first one is the instance profile.

32
00:01:52.340 --> 00:01:54.550
If you're running in an automation scenario,

33
00:01:54.550 --> 00:01:57.480
your ______ form processes might be executing on the E.

34
00:01:57.480 --> 00:01:57.680
C.

35
00:01:57.680 --> 00:01:59.940
Two instance, you can give that E.

36
00:01:59.940 --> 00:02:00.150
C.

37
00:02:00.150 --> 00:02:03.740
Two instance an instance profile that gives it permissions to

38
00:02:03.740 --> 00:02:08.040
write to the S3 bucket and the Dynamo DB table.

39
00:02:08.040 --> 00:02:12.290
Another way to authenticate is using access keys and secret keys.

40
00:02:12.290 --> 00:02:13.090
Basically,

41
00:02:13.090 --> 00:02:18.340
you'll supply your access key and secret key and use those to authenticate.

42
00:02:18.340 --> 00:02:19.310
Alternatively,

43
00:02:19.310 --> 00:02:22.300
you can use the credentials file that's generated by the

44
00:02:22.300 --> 00:02:26.040
AWS CLI and select the appropriate profile you want to

45
00:02:26.040 --> 00:02:28.740
use to write your state data.

46
00:02:28.740 --> 00:02:31.640
Finally, you can use a session token.

47
00:02:31.640 --> 00:02:32.440
Obviously,

48
00:02:32.440 --> 00:02:36.330
these should all look very familiar because they're the same authentication

49
00:02:36.330 --> 00:02:40.340
methods that we used for the AWS provider as a whole.

50
00:02:40.340 --> 00:02:47.000
Now let's take a look at how we're going to implement remote state storage at Globomantics.

