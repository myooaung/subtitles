WEBVTT
1
00:00:01.140 --> 00:00:04.150
[Autogenerated] Okay, We're back in the console looking at the pipeline,

2
00:00:04.150 --> 00:00:07.220
and it won't update the view when you're just staring at it like this.

3
00:00:07.220 --> 00:00:10.890
So let's go back to pipelines and then go back into

4
00:00:10.890 --> 00:00:12.920
this pipeline and we scroll down.

5
00:00:12.920 --> 00:00:17.060
Now we can see the are is au 80 stage that has a plan and apply.

6
00:00:17.060 --> 00:00:20.410
And there's a production stage that has a plan.

7
00:00:20.410 --> 00:00:23.490
Then Emmanuel approval and then lastly,

8
00:00:23.490 --> 00:00:27.110
and apply in order to kick this whole thing off.

9
00:00:27.110 --> 00:00:30.900
We could push a new commit to the source control.

10
00:00:30.900 --> 00:00:35.210
Or we could simply click on release change and click release.

11
00:00:35.210 --> 00:00:37.110
And now it will run the pipeline,

12
00:00:37.110 --> 00:00:39.650
even though there hasn't been an update from source,

13
00:00:39.650 --> 00:00:43.140
which means nothing from the development stage should change.

14
00:00:43.140 --> 00:00:47.290
But we should see it successfully run you a t the plan

15
00:00:47.290 --> 00:00:50.870
stage for production and then halt and wait for us to

16
00:00:50.870 --> 00:00:53.940
manually approve the apply stage.

17
00:00:53.940 --> 00:00:56.070
So let's scroll down to you 80.

18
00:00:56.070 --> 00:00:59.350
And this is gonna take a little while to run so through the

19
00:00:59.350 --> 00:01:05.120
magic of editing won't fade into when you 80 is running and

20
00:01:05.120 --> 00:01:08.340
follow that process along a little bit.

21
00:01:08.340 --> 00:01:11.640
All right, we have made it through the development stage,

22
00:01:11.640 --> 00:01:15.490
and now it is running the plan for Are you a T stage?

23
00:01:15.490 --> 00:01:17.680
Let's go ahead and click on details here,

24
00:01:17.680 --> 00:01:23.130
and this will actually take us to a log of what's going on with this process.

25
00:01:23.130 --> 00:01:26.190
And as we can see we can actually follow along as it's

26
00:01:26.190 --> 00:01:28.860
running through all of the various stages,

27
00:01:28.860 --> 00:01:30.640
let's see what it's up to now.

28
00:01:30.640 --> 00:01:30.770
Well,

29
00:01:30.770 --> 00:01:35.240
it successfully ran our initialization process and initializer some modules,

30
00:01:35.240 --> 00:01:37.120
and then it echoed out RTF action.

31
00:01:37.120 --> 00:01:40.890
It echoed out plan, and then it started running terra form actions.

32
00:01:40.890 --> 00:01:44.720
It created a new U 80 workspace and we scroll down.

33
00:01:44.720 --> 00:01:46.850
Looks like this one completed successfully.

34
00:01:46.850 --> 00:01:51.720
So we can scroll back up and we'll go back to the pipeline itself and scroll

35
00:01:51.720 --> 00:01:55.750
down here and we can see that plan portion was successful.

36
00:01:55.750 --> 00:01:57.540
So now it's in the apply section.

37
00:01:57.540 --> 00:01:57.790
We can.

38
00:01:57.790 --> 00:02:00.530
Go ahead and click on details here and actually see what's

39
00:02:00.530 --> 00:02:03.480
going on with the apply billed as well.

40
00:02:03.480 --> 00:02:07.140
It looks like it has gotten through many of the stages here.

41
00:02:07.140 --> 00:02:09.020
Let's see just how far it's gotten to.

42
00:02:09.020 --> 00:02:12.100
It is currently running terra form actions,

43
00:02:12.100 --> 00:02:17.030
and now it is downloading the vpc dot t F plan from our S3

44
00:02:17.030 --> 00:02:21.340
bucket that all is going very smoothly.

45
00:02:21.340 --> 00:02:22.100
And there we go.

46
00:02:22.100 --> 00:02:23.920
It has successfully completed.

47
00:02:23.920 --> 00:02:28.090
If we go to our VP CS and refresh our view here we

48
00:02:28.090 --> 00:02:30.390
now see there's a U A T v p c.

49
00:02:30.390 --> 00:02:31.780
That was just provisioned.

50
00:02:31.780 --> 00:02:32.580
Now we can,

51
00:02:32.580 --> 00:02:40.340
go back to CodeBuild and go back one and scroll down to our production stage.

52
00:02:40.340 --> 00:02:40.660
Now,

53
00:02:40.660 --> 00:02:46.030
our production stage is in the plan action so we can wait for that to

54
00:02:46.030 --> 00:02:49.860
complete and it will go to the approval action.

55
00:02:49.860 --> 00:02:54.540
And once we review and approve, then it can move to the apply action.

56
00:02:54.540 --> 00:02:54.690
Now,

57
00:02:54.690 --> 00:02:59.780
how would we check to see if we want to approve this we can open up the S3

58
00:02:59.780 --> 00:03:03.950
bucket where that t F underscore output file is being written.

59
00:03:03.950 --> 00:03:08.620
So let's go ahead and drop-down on services and will open up S3

60
00:03:08.620 --> 00:03:13.210
in a new window and I'll go into S3 here,

61
00:03:13.210 --> 00:03:18.140
and the bucket that I'm interested in is build logs.

62
00:03:18.140 --> 00:03:22.130
If we go into VPC dash deployed dash pipeline.

63
00:03:22.130 --> 00:03:27.590
This is where it stores all of the artifacts that are generated from

64
00:03:27.590 --> 00:03:31.840
the various stages and actions within our pipeline.

65
00:03:31.840 --> 00:03:34.680
Now we're not gonna see anything from production here yet because the

66
00:03:34.680 --> 00:03:38.170
production action for planning hasn't completed yet.

67
00:03:38.170 --> 00:03:40.740
If we go back, oh, it looks like it just succeeded.

68
00:03:40.740 --> 00:03:42.070
Well, that's pretty convenient.

69
00:03:42.070 --> 00:03:44.310
So now we could go to S3.

70
00:03:44.310 --> 00:03:46.230
And if we refresh our view here,

71
00:03:46.230 --> 00:03:49.440
there's the production folder we can Go into there.

72
00:03:49.440 --> 00:03:53.340
And if we click on this and download it,

73
00:03:53.340 --> 00:03:57.850
it's a ZIP file that has RTF underscore output information in their we can.

74
00:03:57.850 --> 00:04:01.640
Go ahead and open up that text file,

75
00:04:01.640 --> 00:04:05.890
and you can see this is the plan that was generated by Terra form.

76
00:04:05.890 --> 00:04:09.500
Now, rather than sending this to an S3 bucket, that's kind of difficulty.

77
00:04:09.500 --> 00:04:14.250
You could also set up a process where the output is emailed to someone

78
00:04:14.250 --> 00:04:17.750
or dropped in a slack channel or something like that to know that it's

79
00:04:17.750 --> 00:04:20.620
gotten to the point where it needs to be reviewed and approved before

80
00:04:20.620 --> 00:04:22.140
it can move to the next stage.

81
00:04:22.140 --> 00:04:25.960
Let's go ahead and close that out and we'll go back to our code pipeline.

82
00:04:25.960 --> 00:04:32.740
It's waiting for our approval we can click on review and say,

83
00:04:32.740 --> 00:04:35.220
approved Absolutely Azure.

84
00:04:35.220 --> 00:04:37.510
Now that we've approved that action,

85
00:04:37.510 --> 00:04:41.210
it can move to the final action which is applying that

86
00:04:41.210 --> 00:04:43.430
configuration to the production.

87
00:04:43.430 --> 00:04:45.960
VPC Now it's gonna take a few months.

88
00:04:45.960 --> 00:04:48.320
So again, through the magic of editing,

89
00:04:48.320 --> 00:04:51.240
will speed that up to where the apply finishes

90
00:04:51.240 --> 00:04:55.560
successfully and it looks like this build failed.

91
00:04:55.560 --> 00:04:57.500
Let's click on details and see what went wrong.

92
00:04:57.500 --> 00:04:59.130
Link to execution details.

93
00:04:59.130 --> 00:05:01.080
All right, so build status has failed.

94
00:05:01.080 --> 00:05:02.260
Something went wrong here.

95
00:05:02.260 --> 00:05:04.880
We can scroll down and see where it kicked out in are Oh,

96
00:05:04.880 --> 00:05:09.120
there's some red there looks like are while executing cmdlet we

97
00:05:09.120 --> 00:05:11.970
scroll a little bit who unable to find matching route.

98
00:05:11.970 --> 00:05:15.710
So my guess is that AWS is just being wonky and had some issues

99
00:05:15.710 --> 00:05:18.230
while those provisioning the VPC resources.

100
00:05:18.230 --> 00:05:22.090
That's not a big deal because, fortunately, this is all automated we can.

101
00:05:22.090 --> 00:05:26.040
Go back to our pipeline and simply click on release.

102
00:05:26.040 --> 00:05:29.480
Change again and click on release and let the process run through again.

103
00:05:29.480 --> 00:05:31.380
Now, obviously, we're not going to sit through all that.

104
00:05:31.380 --> 00:05:34.100
But it's important to note that when you have an error,

105
00:05:34.100 --> 00:05:38.060
you would probably want to notify somebody triage why that are happened.

106
00:05:38.060 --> 00:05:41.290
And then we can release the entire pipeline again.

107
00:05:41.290 --> 00:05:43.320
Or we could have alternatively,

108
00:05:43.320 --> 00:05:46.470
just released a particular portion of this by

109
00:05:46.470 --> 00:05:48.470
clicking on retry under production.

110
00:05:48.470 --> 00:05:51.550
So we have a couple different options here now.

111
00:05:51.550 --> 00:05:54.390
This is probably going to deploy successfully the second time,

112
00:05:54.390 --> 00:05:56.470
but I think it's important to see when things fail.

113
00:05:56.470 --> 00:05:57.640
That's okay.

114
00:05:57.640 --> 00:06:02.440
We have an automated way to triage and get things back on track.

115
00:06:02.440 --> 00:06:05.970
So we have succeeded in our goal of creating these additional stages.

116
00:06:05.970 --> 00:06:09.940
Everyone at Globomantics is pretty excited about this process.

117
00:06:09.940 --> 00:06:13.440
And when we want to update something about any of the VPC s,

118
00:06:13.440 --> 00:06:17.180
we can make that update in code and have it automatically push

119
00:06:17.180 --> 00:06:19.800
to the lower environments and then pause on the production

120
00:06:19.800 --> 00:06:26.000
before it goes through successfully. Now let's wrap up for this module.

