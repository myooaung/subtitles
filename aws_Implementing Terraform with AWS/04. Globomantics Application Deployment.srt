1
00:00:01,140 --> 00:00:02,940
[Autogenerated] alright at Globomantics.

2
00:00:02,940 --> 00:00:03,880
If you'll recall.

3
00:00:03,880 --> 00:00:06,960
We had a software developer, Joshua Magee,

4
00:00:06,960 --> 00:00:10,760
and he has some applications that he wants to deploy into the

5
00:00:10,760 --> 00:00:15,540
Dev VPC that we created in a previous module.

6
00:00:15,540 --> 00:00:15,720
Now,

7
00:00:15,720 --> 00:00:21,710
in order to get information about that Dev vpc he could query a W s directly,

8
00:00:21,710 --> 00:00:24,140
but there's actually an easier route for him.

9
00:00:24,140 --> 00:00:28,570
He can query the network state data because we're storing that network

10
00:00:28,570 --> 00:00:33,580
state data in an S3 bucket in a W s so he can connect to that and

11
00:00:33,580 --> 00:00:36,540
query for information about our deployment.

12
00:00:36,540 --> 00:00:39,450
He's going to do exactly that now.

13
00:00:39,450 --> 00:00:41,240
What is he planning to deploy?

14
00:00:41,240 --> 00:00:41,450
Well,

15
00:00:41,450 --> 00:00:44,050
the application he wants to deploy is going to be an auto

16
00:00:44,050 --> 00:00:46,530
scale group across the two public sub nets,

17
00:00:46,530 --> 00:00:50,310
as well as an application load bouncer that's public facing.

18
00:00:50,310 --> 00:00:56,440
He also wants to deploy a my SQL rds instantiate the database sub nets.

19
00:00:56,440 --> 00:00:58,950
Now, in this graphic I have to database servers.

20
00:00:58,950 --> 00:01:02,670
One would be a master and the other would be a replica in the actual deployment.

21
00:01:02,670 --> 00:01:05,370
I've only deployed one because I'm trying to save money and I

22
00:01:05,370 --> 00:01:10,270
don't need a bunch of extra database instances eating up cost Now

23
00:01:10,270 --> 00:01:12,260
where is he going to store his state.

24
00:01:12,260 --> 00:01:14,400
While he's not going to store it in the same S3 bucket

25
00:01:14,400 --> 00:01:15,750
that we're using for a network state,

26
00:01:15,750 --> 00:01:21,540
he's going to store that in a separate S3 bucket for application state,

27
00:01:21,540 --> 00:01:25,870
and we will deploy that as part of our configuration Before

28
00:01:25,870 --> 00:01:27,540
we take a look at that configuration.

29
00:01:27,540 --> 00:01:31,930
I do want to quickly reference how you can use terra form remote state as a

30
00:01:31,930 --> 00:01:36,490
data source in order to use ______ form remote state.

31
00:01:36,490 --> 00:01:41,250
As a data source, you're going to create a data source configuration block.

32
00:01:41,250 --> 00:01:42,850
It starts with the keyword data,

33
00:01:42,850 --> 00:01:45,830
and then the data source type is terra form remote state.

34
00:01:45,830 --> 00:01:48,140
And then we have to give it a name label.

35
00:01:48,140 --> 00:01:51,270
Now, just like when you're setting up remote state for a configuration,

36
00:01:51,270 --> 00:01:53,070
you have to specify a back end.

37
00:01:53,070 --> 00:01:56,680
We have to specify a back end argument here telling terra form,

38
00:01:56,680 --> 00:01:59,540
where can it find this remote state data source?

39
00:01:59,540 --> 00:02:00,100
In our case,

40
00:02:00,100 --> 00:02:05,540
we're using S3 to get information about that networking remote state.

41
00:02:05,540 --> 00:02:07,980
And then, just like when you configure a back end,

42
00:02:07,980 --> 00:02:12,910
you have to specify config data for accessing this back end And in our case,

43
00:02:12,910 --> 00:02:15,770
since it's an S3, we have to give the name of the bucket,

44
00:02:15,770 --> 00:02:17,770
the name of the key and the region.

45
00:02:17,770 --> 00:02:20,780
You note the Dynamo DB is not in here because we're not

46
00:02:20,780 --> 00:02:22,970
trying to lock the state and change anything.

47
00:02:22,970 --> 00:02:25,590
We're simply reading information out of it.

48
00:02:25,590 --> 00:02:29,040
There's also no authentication information in here,

49
00:02:29,040 --> 00:02:33,360
so it will use the authentication information that was supplied with the A.

50
00:02:33,360 --> 00:02:40,000
W s provider. All right, let's go over to visual studio code and get things set up.

