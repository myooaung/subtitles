1
00:00:01,140 --> 00:00:02,590
[Autogenerated] within a ws.

2
00:00:02,590 --> 00:00:07,600
There are a bunch of different tools that all start with the code moniker,

3
00:00:07,600 --> 00:00:10,330
and we're going to be using three of those tools.

4
00:00:10,330 --> 00:00:11,840
In our example.

5
00:00:11,840 --> 00:00:15,640
I want to explain what those code tools were before

6
00:00:15,640 --> 00:00:18,440
we got to the actual deployment.

7
00:00:18,440 --> 00:00:22,290
The first is code commit and, as I mentioned a little bit earlier.

8
00:00:22,290 --> 00:00:25,660
Code commit is their source control management solution.

9
00:00:25,660 --> 00:00:29,540
So we're going to be checking some code into code commit.

10
00:00:29,540 --> 00:00:31,520
What are we going to do with that code?

11
00:00:31,520 --> 00:00:33,920
Well, we want to deploy infrastructure,

12
00:00:33,920 --> 00:00:39,540
and we're going to use the A W s product CodeBuild to do exactly that.

13
00:00:39,540 --> 00:00:44,060
CodeBuild would typically be used to create an executable or a package

14
00:00:44,060 --> 00:00:46,500
based off of what you have stored in code commit.

15
00:00:46,500 --> 00:00:50,640
But in our case, we're going to use it to deploy infrastructure instead.

16
00:00:50,640 --> 00:00:55,100
And we're also going to use the product code pipeline to deploy our

17
00:00:55,100 --> 00:00:59,140
infrastructure in stages across multiple environments.

18
00:00:59,140 --> 00:01:01,140
Those are the three tools.

19
00:01:01,140 --> 00:01:01,570
Now,

20
00:01:01,570 --> 00:01:03,830
let's take a look at how we're going to use those

21
00:01:03,830 --> 00:01:06,970
at Globomantics at Globomantics.

22
00:01:06,970 --> 00:01:11,580
The initial goal is to deploy a development environment

23
00:01:11,580 --> 00:01:15,070
through a pipeline and the way that we're going to do that

24
00:01:15,070 --> 00:01:18,030
is to start with a code pipeline.

25
00:01:18,030 --> 00:01:19,210
Now, like I mentioned,

26
00:01:19,210 --> 00:01:24,670
code pipelines are broken up into stages for the first stage of our pipeline.

27
00:01:24,670 --> 00:01:28,430
We need to get the source from code commit that we're

28
00:01:28,430 --> 00:01:30,710
going to use as part of our deployment.

29
00:01:30,710 --> 00:01:33,740
So there is an action in this stage.

30
00:01:33,740 --> 00:01:36,690
Each step inside a stage is called in action,

31
00:01:36,690 --> 00:01:41,440
and that action is to go out to code, commit and get that source material.

32
00:01:41,440 --> 00:01:44,440
So that's gonna be the first stage of our pipeline.

33
00:01:44,440 --> 00:01:48,240
These second stage of our pipeline is called development.

34
00:01:48,240 --> 00:01:50,350
And within that portion of the pipeline,

35
00:01:50,350 --> 00:01:53,320
we are going to plan out our deployment.

36
00:01:53,320 --> 00:01:57,380
So we're going to invoke CodeBuild and have it run

37
00:01:57,380 --> 00:01:59,710
Terra form with the plan argument.

38
00:01:59,710 --> 00:02:04,280
So we can plan out our deployment of a development VPC and then

39
00:02:04,280 --> 00:02:06,720
we'll have a second action in that stage,

40
00:02:06,720 --> 00:02:08,440
which is our apply.

41
00:02:08,440 --> 00:02:10,180
So we do our plan and our apply,

42
00:02:10,180 --> 00:02:12,630
just like we would normally except that we're having

43
00:02:12,630 --> 00:02:16,640
CodeBuild automate that process for us.

44
00:02:16,640 --> 00:02:20,820
From the CodeBuild perspective and the code pipeline perspective,

45
00:02:20,820 --> 00:02:23,570
they are gonna be generating logs and artifacts,

46
00:02:23,570 --> 00:02:25,370
so we need somewhere to put that stuff,

47
00:02:25,370 --> 00:02:30,910
So we're going to create an S3 bucket to dump our logs and artifacts into Now.

48
00:02:30,910 --> 00:02:34,280
What is CodeBuild actually doing what it's doing behind the

49
00:02:34,280 --> 00:02:36,780
scenes is spinning up a Linux container.

50
00:02:36,780 --> 00:02:41,040
That's what we're telling it we want to use as part of our built environment.

51
00:02:41,040 --> 00:02:44,440
And then it's looking at a file that's inside the source code

52
00:02:44,440 --> 00:02:48,200
called Build Spec .NET XAML and build spec dot um,

53
00:02:48,200 --> 00:02:52,840
well, basically gives it the steps that are part of this build action.

54
00:02:52,840 --> 00:02:55,570
In our case, we are going to initialize,

55
00:02:55,570 --> 00:02:58,470
are terra form configuration based off of the source

56
00:02:58,470 --> 00:03:00,770
and then run either plan or apply,

57
00:03:00,770 --> 00:03:04,140
and we'll control that through environment variables.

58
00:03:04,140 --> 00:03:04,770
Lastly,

59
00:03:04,770 --> 00:03:07,380
we are going to need somewhere to store our remote

60
00:03:07,380 --> 00:03:09,630
state from this plan and apply.

61
00:03:09,630 --> 00:03:13,760
And we're going to use our existing S3 bucket and dynamodb

62
00:03:13,760 --> 00:03:17,180
table from the previous module for the storage of remote

63
00:03:17,180 --> 00:03:19,820
state in this build process.

64
00:03:19,820 --> 00:03:21,740
So that's our initial deployment.

65
00:03:21,740 --> 00:03:24,280
Let's go over to V s code and we're going to use tear form

66
00:03:24,280 --> 00:03:28,000
to actually deploy all of this into A. W s

