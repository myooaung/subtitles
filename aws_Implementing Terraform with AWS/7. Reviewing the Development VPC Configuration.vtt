WEBVTT
1
00:00:01.040 --> 00:00:03.800
[Autogenerated] Okay, here we are in visual studio code.

2
00:00:03.800 --> 00:00:05.720
This is my preferred code editor.

3
00:00:05.720 --> 00:00:09.150
You can use whatever code editor you feel most comfortable with,

4
00:00:09.150 --> 00:00:12.600
but this is the one that I prefer to use in the left pane.

5
00:00:12.600 --> 00:00:16.240
I have all of the exercise files loaded and the one we're

6
00:00:16.240 --> 00:00:19.900
going to be working with in this case is one Dash Dev cache

7
00:00:19.900 --> 00:00:22.660
VPC The directories go in order.

8
00:00:22.660 --> 00:00:25.870
So as we move through the modules and examples,

9
00:00:25.870 --> 00:00:28.840
we're gonna be going from one down to nine.

10
00:00:28.840 --> 00:00:32.620
Now, let's expand out what's in the first directory in there,

11
00:00:32.620 --> 00:00:34.320
we have a number of different files.

12
00:00:34.320 --> 00:00:38.620
The configuration itself is in Maine .NET e f and I also have the

13
00:00:38.620 --> 00:00:40.640
commands we're going to be running in commands.

14
00:00:40.640 --> 00:00:42.340
.NET y-axis thead.

15
00:00:42.340 --> 00:00:43.530
There's two files in here.

16
00:00:43.530 --> 00:00:47.940
Back end dot t f dot rename and peering dot t f dot rename.

17
00:00:47.940 --> 00:00:51.760
Those are going to be included in the terra form configuration.

18
00:00:51.760 --> 00:00:54.440
As we move into a different example,

19
00:00:54.440 --> 00:00:58.780
I also have a terra form dot t f bars that example file.

20
00:00:58.780 --> 00:01:03.450
If you're following along, this has example variable values.

21
00:01:03.450 --> 00:01:08.360
You can simply rename this file to terra form .NET vars set

22
00:01:08.360 --> 00:01:10.520
the values for whatever makes sense for you,

23
00:01:10.520 --> 00:01:13.130
and then terra form will pick up those variables and

24
00:01:13.130 --> 00:01:15.440
use them in your configuration.

25
00:01:15.440 --> 00:01:17.120
Speaking of that configuration,

26
00:01:17.120 --> 00:01:21.440
let's go ahead and open up main dot t f and see what's in there.

27
00:01:21.440 --> 00:01:24.420
All right, The first thing we're doing is setting some variables,

28
00:01:24.420 --> 00:01:27.540
so we're setting the region we want to work with.

29
00:01:27.540 --> 00:01:33.140
We're setting a VPC cider range of 10 000 slash 16.

30
00:01:33.140 --> 00:01:39.380
We're setting the public sub nets for our VPC to 10 000 slash 24

31
00:01:39.380 --> 00:01:46.070
10 1.0 slash 24 and we're setting our database sub nets to 10.0

32
00:01:46.070 --> 00:01:51.760
dot 8.0 slash 24 10.0 dot 9.0 slash 24.

33
00:01:51.760 --> 00:01:55.570
Now, these are just the default values that I put into the variables.

34
00:01:55.570 --> 00:02:00.390
But you can override those with the TF bars file or in line with dash

35
00:02:00.390 --> 00:02:03.550
var commands scrolling down a little bit further.

36
00:02:03.550 --> 00:02:07.310
We get into the provider definition, and as you can see,

37
00:02:07.310 --> 00:02:09.480
we only have two things set in the provider.

38
00:02:09.480 --> 00:02:13.710
We have the version pinned at version two .NET x,

39
00:02:13.710 --> 00:02:16.020
the tilde with the greater than symbol.

40
00:02:16.020 --> 00:02:17.000
Let's tear for him.

41
00:02:17.000 --> 00:02:20.740
No, that it should stay on to dot x of this provider.

42
00:02:20.740 --> 00:02:24.060
So when version three comes out, it won't bump you up to three.

43
00:02:24.060 --> 00:02:29.140
But if 2.8 comes out, it'll move you from 2.622 dot eight.

44
00:02:29.140 --> 00:02:33.200
We're also defining the region we want to use for this specific provider.

45
00:02:33.200 --> 00:02:34.660
Okay, so we got that.

46
00:02:34.660 --> 00:02:35.550
That's out of the way.

47
00:02:35.550 --> 00:02:38.890
Let's scroll down to data sources for data sources.

48
00:02:38.890 --> 00:02:42.600
I am querying for the availability zones in the region

49
00:02:42.600 --> 00:02:44.360
that we have selected in this case.

50
00:02:44.360 --> 00:02:46.540
It's us East one.

51
00:02:46.540 --> 00:02:50.480
So this is going to pull the full list of availability zones so that

52
00:02:50.480 --> 00:02:54.340
we can use them when we're configuring our VPC.

53
00:02:54.340 --> 00:02:58.800
And if we scroll down a little bit more, we get into the use of a module.

54
00:02:58.800 --> 00:02:59.300
Remember?

55
00:02:59.300 --> 00:03:02.240
I talked about modules a little bit earlier.

56
00:03:02.240 --> 00:03:07.840
Modules are reusable bits of code that can be used in your configuration.

57
00:03:07.840 --> 00:03:09.000
In this particular case,

58
00:03:09.000 --> 00:03:12.570
I'm using a module that's posted on the Terra form registry.

59
00:03:12.570 --> 00:03:15.640
If we go over to the browser,

60
00:03:15.640 --> 00:03:18.180
this is the Terra form registry which you confined at

61
00:03:18.180 --> 00:03:20.940
registry dot terra form dot iOS.

62
00:03:20.940 --> 00:03:22.910
And if we select browse modules,

63
00:03:22.910 --> 00:03:26.220
it will take us to the most commonly used modules.

64
00:03:26.220 --> 00:03:30.570
And look at that terra form dash AWS dash module slash vpc is

65
00:03:30.570 --> 00:03:34.150
see the second most popular module in the group,

66
00:03:34.150 --> 00:03:35.640
and that's the one we're using.

67
00:03:35.640 --> 00:03:36.320
In this case.

68
00:03:36.320 --> 00:03:39.740
If we click through on that module,

69
00:03:39.740 --> 00:03:42.740
it's going to give us instructions on how to properly

70
00:03:42.740 --> 00:03:46.040
use this module in our configuration.

71
00:03:46.040 --> 00:03:50.950
Now let's go back to V s code in the module block.

72
00:03:50.950 --> 00:03:53.980
The source argument says, Where can you find this module?

73
00:03:53.980 --> 00:03:58.020
And because we're using one from the Terra form registry we can Just give

74
00:03:58.020 --> 00:04:01.590
the name of the module and then we also have to set a version for the

75
00:04:01.590 --> 00:04:05.010
module because newer versions come out and we want to be a little bit

76
00:04:05.010 --> 00:04:07.160
careful about which version we're using.

77
00:04:07.160 --> 00:04:08.940
We don't want to break things.

78
00:04:08.940 --> 00:04:14.290
The name of the VPC in this case is Dev Dash vpc We're using the cider range

79
00:04:14.290 --> 00:04:18.470
that we defined in our variables for the availability zone.

80
00:04:18.470 --> 00:04:21.040
We're using the slice function and what the slice

81
00:04:21.040 --> 00:04:23.520
function does is it takes a list.

82
00:04:23.520 --> 00:04:27.540
In this case, we're getting the list of availability zone names,

83
00:04:27.540 --> 00:04:31.010
and it slices off a piece of that list, starting with zero,

84
00:04:31.010 --> 00:04:34.650
which would be the first element and ending with two,

85
00:04:34.650 --> 00:04:36.360
which would be the third element.

86
00:04:36.360 --> 00:04:38.120
Because we're counting from zero now.

87
00:04:38.120 --> 00:04:39.600
It doesn't include that third element.

88
00:04:39.600 --> 00:04:40.430
So in this case,

89
00:04:40.430 --> 00:04:47.140
it's grabbing two availability zones from our availability Zone data source.

90
00:04:47.140 --> 00:04:48.560
Under public sub nets,

91
00:04:48.560 --> 00:04:52.530
we are giving it to the list of public sub net cider ranges

92
00:04:52.530 --> 00:04:55.190
we want to use scrolling down some more.

93
00:04:55.190 --> 00:04:58.440
We're creating our database sub nets by telling it,

94
00:04:58.440 --> 00:05:02.110
What's the database sub net cider ranges we want to use?

95
00:05:02.110 --> 00:05:05.730
And then, if we want to apply a consistent tag for those sub nets,

96
00:05:05.730 --> 00:05:09.390
we can set the sub net type tag to database,

97
00:05:09.390 --> 00:05:12.540
and I'll just make it a little bit easier to find.

98
00:05:12.540 --> 00:05:16.120
Finally, we are applying some tags to the VPC itself.

99
00:05:16.120 --> 00:05:19.880
We're setting the environment to Dev and the team to in FA,

100
00:05:19.880 --> 00:05:22.000
which is short for infrastructure.

101
00:05:22.000 --> 00:05:23.570
All right, sounds good.

102
00:05:23.570 --> 00:05:24.430
And then, lastly,

103
00:05:24.430 --> 00:05:27.100
we've got some outputs here and we're going to make use of

104
00:05:27.100 --> 00:05:30.820
these outputs in a future module four outputs.

105
00:05:30.820 --> 00:05:36.740
We are out putting our vpc IDE the name of the database sub net group,

106
00:05:36.740 --> 00:05:41.940
and then finally, the list of public sub nets that are generated by the module.

107
00:05:41.940 --> 00:05:47.000
So that's the entire configuration. Now let's take a look at the commands.

