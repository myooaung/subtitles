WEBVTT
1
00:00:01.140 --> 00:00:02.670
Hi, this is Craig Golightly,

2
00:00:02.670 --> 00:00:08.930
and welcome to Customizing Swagger for Your API. Spring is an opinionated

3
00:00:08.930 --> 00:00:13.660
framework. In general, it's going to save you the most time and make things

4
00:00:13.660 --> 00:00:17.900
easiest for you if you follow those opinionated conventions.

5
00:00:17.900 --> 00:00:21.850
Springfox leverages Spring opinions to generate Swagger for

6
00:00:21.850 --> 00:00:25.120
you without adding a lot of annotations.

7
00:00:25.120 --> 00:00:29.200
You certainly can use any of the Swagger annotations you wish.

8
00:00:29.200 --> 00:00:30.340
But for this course,

9
00:00:30.340 --> 00:00:34.010
we're going to focus on those things that maximize what the framework can

10
00:00:34.010 --> 00:00:39.680
automatically do for you. If you have something to add that is not obvious

11
00:00:39.680 --> 00:00:45.150
from the class and variable name, the ApiModelProperty is a useful

12
00:00:45.150 --> 00:00:49.570
annotation. As we've shown before, if you're only adding the class name and

13
00:00:49.570 --> 00:00:51.610
the field name as a description,

14
00:00:51.610 --> 00:00:55.410
don't. These types of descriptions don't add any value,

15
00:00:55.410 --> 00:00:58.580
and they're just going to clutter up your code and documentation.

16
00:00:58.580 --> 00:01:06.140
The annotation is available in the io.swagger.annotations package.

17
00:01:06.140 --> 00:01:11.030
Let's take a look at adding the ApiModelProperty annotation to our Spring

18
00:01:11.030 --> 00:01:16.270
data managed entity, and see how it looks in the Swagger UI. There are a

19
00:01:16.270 --> 00:01:20.760
couple of places in the Swagger UI that you can check out your entity and see

20
00:01:20.760 --> 00:01:23.340
how it's showing up in the documentation.

21
00:01:23.340 --> 00:01:24.930
The first is in Models.

22
00:01:24.930 --> 00:01:29.040
Scroll down to the bottom of the page, then expand Models.

23
00:01:29.040 --> 00:01:32.740
From here, let's look at the Employee model,

24
00:01:32.740 --> 00:01:36.770
and we can see the four attributes of the Employee model.

25
00:01:36.770 --> 00:01:42.890
This matches what we see in the Employee class, id, name, title, and department.

26
00:01:42.890 --> 00:01:45.950
Let's add the ApiModelProperty to add some additional

27
00:01:45.950 --> 00:01:49.290
information about the name attribute.

28
00:01:49.290 --> 00:01:53.840
We've added the description first and last name to the name attribute.

29
00:01:53.840 --> 00:01:56.660
Let's restart the application and see how it changes in

30
00:01:56.660 --> 00:02:01.740
the Swagger UI. We can refresh the page,

31
00:02:01.740 --> 00:02:05.820
go back to the Employee entity, and see the value first and last

32
00:02:05.820 --> 00:02:09.240
name that appears under the name attribute.

33
00:02:09.240 --> 00:02:13.420
Keep in mind, simply adding the class name and the variable name

34
00:02:13.420 --> 00:02:16.180
as a description really doesn't add value,

35
00:02:16.180 --> 00:02:17.870
and will just clutter things up.

36
00:02:17.870 --> 00:02:22.850
So you'll only want to add the ApiModelProperty to your entities if there is

37
00:02:22.850 --> 00:02:27.320
something more to describe than class name and variable name. The other

38
00:02:27.320 --> 00:02:31.430
place you can see the model is in our POST call of the entity. Under

39
00:02:31.430 --> 00:02:35.900
Employee Entity, we'll expand the POST call,

40
00:02:35.900 --> 00:02:39.040
then select Model under body.

41
00:02:39.040 --> 00:02:47.000
Here's displayed the same information about the employee entity, including the additional description that we've added.

