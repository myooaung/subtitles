WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:03.540
First, we're going to look at em units,

00:00:03.540 --> 00:00:05.685
so how we are going to specify.

00:00:05.685 --> 00:00:09.465
Let's see, here is an example document I have created for you.

00:00:09.465 --> 00:00:12.630
On the both sides,

00:00:12.630 --> 00:00:17.520
we are using em units but in different situations and different parents.

00:00:17.520 --> 00:00:21.150
Let's see how this can mess up,

00:00:21.150 --> 00:00:24.660
such problem like we have on the left side.

00:00:24.660 --> 00:00:25.980
On the right side,

00:00:25.980 --> 00:00:27.300
we have the proper usage.

00:00:27.300 --> 00:00:29.355
Let's stick into the coding.

00:00:29.355 --> 00:00:31.125
There's nothing fancy.

00:00:31.125 --> 00:00:34.875
Let's see what we have in our HTML document.

00:00:34.875 --> 00:00:38.970
I have imported this normalize to normalize.min.css.

00:00:38.970 --> 00:00:41.260
If you don't know what normalize is,

00:00:41.260 --> 00:00:47.270
it is basically to eliminate all the browser styles and other problems,

00:00:47.270 --> 00:00:48.845
mismatch problems we have.

00:00:48.845 --> 00:00:51.875
It is going to reset your styles.

00:00:51.875 --> 00:00:55.385
Then we have this Google API.

00:00:55.385 --> 00:00:58.060
We are basically importing this em.

00:00:58.060 --> 00:01:01.570
We have imported this Source Sans Pro font,

00:01:01.570 --> 00:01:05.270
and then we have a style sheet linked to it. That's it.

00:01:05.270 --> 00:01:07.595
This is my heading for the header,

00:01:07.595 --> 00:01:10.220
it has nothing to do with the example.

00:01:10.220 --> 00:01:13.085
Min code is over here.

00:01:13.085 --> 00:01:14.770
This is a container heading 1, 2,

00:01:14.770 --> 00:01:16.970
3, body tags, span.

00:01:16.970 --> 00:01:19.755
Then we have small text, small,

00:01:19.755 --> 00:01:24.560
and then we have another container which is at the right side over here.

00:01:24.560 --> 00:01:27.070
This one is another container.

00:01:27.070 --> 00:01:29.130
Left is the container.

00:01:29.130 --> 00:01:31.460
We have two containers,

00:01:31.460 --> 00:01:34.735
right and left on the left and right side.

00:01:34.735 --> 00:01:39.245
Now, what is happening here is if you look at this container,

00:01:39.245 --> 00:01:42.890
let's go to the CSS style.css.

00:01:42.890 --> 00:01:46.730
Here, I have all the sizes specified.

00:01:46.730 --> 00:01:49.940
Now, in my HTML element,

00:01:49.940 --> 00:01:52.670
I am saying for size 18 pixel,

00:01:52.670 --> 00:01:54.530
so line height 1.5.

00:01:54.530 --> 00:01:56.660
When you want to set up your base font,

00:01:56.660 --> 00:01:59.600
always use HTML or your body tags.

00:01:59.600 --> 00:02:01.220
You can also use init,

00:02:01.220 --> 00:02:04.100
but I prefer to use it over here.

00:02:04.100 --> 00:02:05.750
You can use in both.

00:02:05.750 --> 00:02:08.120
You can use this font size.

00:02:08.120 --> 00:02:10.535
We are setting our base font size.

00:02:10.535 --> 00:02:12.710
Baseline is 27 right now.

00:02:12.710 --> 00:02:16.145
If you multiply 18 by 1.5, it is 27.

00:02:16.145 --> 00:02:21.970
Now, you can see over here our paragraph size is 0.9 em.

00:02:21.970 --> 00:02:26.705
If we calculate 18 pixel multiplied by 0.9,

00:02:26.705 --> 00:02:31.245
16.2 pixels, line height is 1.25.

00:02:31.245 --> 00:02:34.840
Same as the other calculations like three em,

00:02:34.840 --> 00:02:37.030
18 pixels multiplied by 3,

00:02:37.030 --> 00:02:39.710
and so on and so forth.

00:02:39.710 --> 00:02:46.720
What we're doing is we're multiplying our base font with our em value in each element.

00:02:46.720 --> 00:02:48.580
If we have paragraph element,

00:02:48.580 --> 00:02:52.580
we are multiplying its value with the HTML.

00:02:53.660 --> 00:02:57.360
Our em works in a way,

00:02:57.360 --> 00:03:00.030
like we have this em unit.

00:03:00.030 --> 00:03:03.030
It looks for the immediate parent.

00:03:03.030 --> 00:03:07.945
If the paragraph is inside this body and HTML tag,

00:03:07.945 --> 00:03:09.925
there is no other div,

00:03:09.925 --> 00:03:13.220
then it will be 18 pixel.

00:03:13.230 --> 00:03:18.580
In this case, if you look at our container code,

00:03:18.580 --> 00:03:22.545
let's show you what my containers have.

00:03:22.545 --> 00:03:25.955
If you look at this container on the left,

00:03:25.955 --> 00:03:27.500
this is the left one.

00:03:27.500 --> 00:03:30.250
Let's add over here.

00:03:30.250 --> 00:03:37.375
Now, you can see left container has some size for size which is two em.

00:03:37.375 --> 00:03:39.905
But this one on the right side,

00:03:39.905 --> 00:03:44.255
this container has no font size specification.

00:03:44.255 --> 00:03:52.760
What will happen here is that all elements inside

00:03:52.760 --> 00:03:56.150
this div will be

00:03:56.150 --> 00:04:05.055
calculated with 18 pixel HTML base font.

00:04:05.055 --> 00:04:07.920
This is going to happen over here.

00:04:07.920 --> 00:04:11.360
In this container, every heading,

00:04:11.360 --> 00:04:14.360
every paragraph element, everything we see,

00:04:14.360 --> 00:04:16.820
you can see at the right side,

00:04:16.820 --> 00:04:22.070
it is calculated on the level of our HTML element base font size.

00:04:22.070 --> 00:04:25.325
If you click at it and inspect element,

00:04:25.325 --> 00:04:30.385
you can also do this in Chrome.

00:04:30.385 --> 00:04:34.275
If we go to this computed box model,

00:04:34.275 --> 00:04:38.505
then this computed, you can see font size is 16.2 pixels.

00:04:38.505 --> 00:04:42.015
So 18 multiply by 0.9,

00:04:42.015 --> 00:04:43.915
it is the correct font size.

00:04:43.915 --> 00:04:48.340
But if we look at the paragraph inside this container,

00:04:48.340 --> 00:04:51.730
which is the left one, it is 32.4.

00:04:51.730 --> 00:04:56.720
How come this 32.4 pixel has been calculated?

00:04:56.720 --> 00:04:59.885
Let's see how this has been calculated.

00:04:59.885 --> 00:05:04.810
Everything that is a bit different is in this container.

00:05:04.810 --> 00:05:07.090
We have two em.

00:05:07.090 --> 00:05:13.920
This container had a parent which was HTML.

00:05:13.920 --> 00:05:19.485
Our base font size was 18 pixels multiplied by 2,

00:05:19.485 --> 00:05:24.325
is equal to 36 pixels.

00:05:24.325 --> 00:05:27.375
Now, in this situation,

00:05:27.375 --> 00:05:32.465
our parent have the base font size has changed.

00:05:32.465 --> 00:05:41.350
So everything that is inside this container will use this 36 pixels as their base font,

00:05:41.350 --> 00:05:45.810
because now their container have different base font.

00:05:47.390 --> 00:05:51.005
I'm using shortcut key for my sublime text.

00:05:51.005 --> 00:05:57.020
So 18 multiplied by 36 pixel is our base font for

00:05:57.020 --> 00:06:03.660
this container child elements.

00:06:03.660 --> 00:06:09.270
Basically, child elements mean everything in this container is its child.

00:06:09.610 --> 00:06:13.475
Here, we can see if you look at this,

00:06:13.475 --> 00:06:17.975
why this has been calculated as 32.4,

00:06:17.975 --> 00:06:22.880
because our paragraph size was 0.9.

00:06:22.880 --> 00:06:29.015
If we multiply 36 pixels multiplied by 0.9,

00:06:29.015 --> 00:06:32.850
it will be 32.4 pixels.

00:06:32.850 --> 00:06:36.765
This is how our paragraph has been calculated.

00:06:36.765 --> 00:06:43.340
This is how our paragraph size's calculated and also all our heading sizes.

00:06:43.340 --> 00:06:48.410
Three em in this situation now means that we have

00:06:48.410 --> 00:06:55.580
36 pixels multiplied by 3,

00:06:55.580 --> 00:07:01.890
is equal to 108,

00:07:01.890 --> 00:07:09.690
108 pixels is our heading 1 in this situation.

00:07:09.690 --> 00:07:14.670
Let's see whether this heading 1 is 108 pixels or not.

00:07:14.670 --> 00:07:17.780
Let's inspect it and you can see over here.

00:07:17.780 --> 00:07:20.570
Font size, 108 pixels,

00:07:20.570 --> 00:07:23.615
also the line-height is 108 pixels.

00:07:23.615 --> 00:07:26.435
This is how em works.

00:07:26.435 --> 00:07:31.530
Here, we have only one parent, which is HTML.

00:07:31.530 --> 00:07:35.195
This container, it has no font specification.

00:07:35.195 --> 00:07:38.600
In this case, we have container inside

00:07:38.600 --> 00:07:44.795
this HTML element and we have two levels of this calculation.

00:07:44.795 --> 00:07:49.130
Em is basically relative to its immediate parent.

00:07:49.130 --> 00:07:53.010
Its immediate parent was this container.

00:07:54.160 --> 00:07:57.780
We had this font size two em,

00:07:57.780 --> 00:08:00.790
so now its base font size changed.

00:08:00.790 --> 00:08:02.390
If you want to use it,

00:08:02.390 --> 00:08:07.910
use it carefully and make sure that you are using good relative calculations.

00:08:07.910 --> 00:08:09.950
This is all about em units.

00:08:09.950 --> 00:08:12.420
Let's move on to the next one.
