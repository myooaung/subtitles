1
00:00:00,870 --> 00:00:03,330
Hello everyone and welcome to this python tutorial.

2
00:00:04,170 --> 00:00:09,480
So far we've prepared everything to perform fine tuning step.

3
00:00:09,600 --> 00:00:16,280
The goal for the fine tuning technique is to try to improve what thruster learning achieved.

4
00:00:16,500 --> 00:00:21,780
In some cases it is going to help but in others it won't help at all.

5
00:00:21,780 --> 00:00:26,730
It really depends on the data said architecture and so on.

6
00:00:26,740 --> 00:00:29,370
Let's take a look at the code that we have for this lesson.

7
00:00:30,350 --> 00:00:37,180
It is the same code that we used a few years ago to train our transfer learning model.

8
00:00:37,210 --> 00:00:40,790
We are using the train generator for our training data.

9
00:00:40,900 --> 00:00:48,220
Five e-books in volume generator for our validation data set if everything is clear.

10
00:00:48,350 --> 00:00:49,970
Execute a cell.

11
00:00:49,970 --> 00:00:52,490
It will take some time to train the model.

12
00:00:52,490 --> 00:00:56,790
Therefore I will skip to the part where the model is trained.

13
00:00:57,030 --> 00:00:58,300
And welcome back.

14
00:00:58,300 --> 00:01:04,000
Well let's see the results that we have after the fine tuning step after the first e-book.

15
00:01:04,000 --> 00:01:11,200
We have a 100 percent accuracy on the training set and the worst accuracy on the validation data set

16
00:01:11,770 --> 00:01:14,230
about 94 percent.

17
00:01:14,380 --> 00:01:21,850
The results indicate that our model or fitted in this case we didn't improve the accuracy by applying

18
00:01:21,850 --> 00:01:28,000
the fine tuning technique which is still okay since we have fantastic results with the transfer learning

19
00:01:28,000 --> 00:01:30,630
along in general.

20
00:01:30,710 --> 00:01:37,310
When you have a small data set it is not a good idea to perform the fine tuning step since it will over

21
00:01:37,310 --> 00:01:41,060
fit which we have proven with this case as well.

22
00:01:41,060 --> 00:01:47,900
We came very far by applying these techniques and we created a remarkable network that saw the binary

23
00:01:47,900 --> 00:01:52,000
classification we had state of the art results in the next story.

24
00:01:52,030 --> 00:01:56,870
We are going to confirm our results from this review and that's it for now.

25
00:01:56,900 --> 00:02:01,280
If you have any questions or comments please buzz them in the comments section.

26
00:02:01,280 --> 00:02:03,200
Otherwise see in the next tutorial.
