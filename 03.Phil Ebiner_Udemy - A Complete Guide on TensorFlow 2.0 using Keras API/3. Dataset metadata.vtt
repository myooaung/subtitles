WEBVTT
1
00:00:00.150 --> 00:00:04.850
Hello everyone and welcome to this python tutorial in the previous video.

2
00:00:04.900 --> 00:00:10.610
We have converted our dataset to the dictionary format and set up our environment.

3
00:00:10.750 --> 00:00:17.560
Right now we have to define and add a few additional pieces of information about the data set itself

4
00:00:18.860 --> 00:00:25.130
because is a flow transform uses a batch of being in the backend the whole infrastructure needs more

5
00:00:25.130 --> 00:00:33.380
detail about each column what type of column it is what future to expect in that column and so on that

6
00:00:33.380 --> 00:00:36.600
information is called meta data.

7
00:00:36.620 --> 00:00:40.640
For now we are going to define that method data manually.

8
00:00:40.640 --> 00:00:42.990
So let's do that in this video.

9
00:00:42.990 --> 00:00:51.250
We are going to define variable called data metadata and let's set that to our input function called

10
00:00:51.370 --> 00:00:52.120
data set.

11
00:00:52.120 --> 00:01:00.040
Metadata all of that is followed by DOT and use the main object used to create this metadata called

12
00:01:00.150 --> 00:01:02.340
data set metadata.

13
00:01:02.410 --> 00:01:07.420
This class accepts the single argument and that is information about our columns.

14
00:01:08.110 --> 00:01:15.570
So to create that information we are going to use our second import data set schema and call a function

15
00:01:15.680 --> 00:01:23.930
it from features spec the data set schema is another helpful thing that we are going to use to generate

16
00:01:23.960 --> 00:01:30.780
our metadata and there from feature spec is a function that receives a Python dictionary.

17
00:01:31.190 --> 00:01:38.390
And as you can see the first argument is a Python dictionary called feature of spec where each key is

18
00:01:38.390 --> 00:01:43.570
a column name and the value for that key is information about a column.

19
00:01:43.640 --> 00:01:47.870
Now that we know that what dictionary or how the dictionary should look like.

20
00:01:47.900 --> 00:01:51.500
Let's provide one for the first column.

21
00:01:51.570 --> 00:01:58.660
Let us define and 0 2 because that is the name of a column and for the value of that column we are going

22
00:01:58.660 --> 00:02:05.470
to use our tensor flow and the function from it called fixed line feature because we are not dealing

23
00:02:05.470 --> 00:02:10.360
with strings or dates or forms of that sort.

24
00:02:10.360 --> 00:02:13.600
In this case we are dealing with floating numbers.

25
00:02:13.600 --> 00:02:17.250
Therefore we are going to use a fixed line feature.

26
00:02:17.380 --> 00:02:24.070
It could be in different numbers of digits but in the end it is fixed length and we know what data type

27
00:02:24.070 --> 00:02:30.160
to accept this fixed line feature accepts a few additional arguments.

28
00:02:30.160 --> 00:02:37.690
The shape of our data and the data type since we are expecting a single number as an input we can simply

29
00:02:37.690 --> 00:02:45.580
provide an empty brackets for our shape and for our data type as we discussed it is you have that flowed

30
00:02:45.720 --> 00:02:55.110
32 since each particle in our data set or in the air except the same type of data flowed 32.

31
00:02:55.120 --> 00:03:04.380
We can simply copy this line and place it three more times below for each column in data set and now

32
00:03:04.980 --> 00:03:08.480
on the thing that we need to change is a column name.

33
00:03:08.820 --> 00:03:18.530
So for the second one put so two DNA for the third 1 p.m. then and lastly change the column name to

34
00:03:18.530 --> 00:03:20.420
suit and that's it.

35
00:03:20.420 --> 00:03:22.520
We are all done in our data set.

36
00:03:22.520 --> 00:03:28.620
Meta data is created because we used some additional new functions.

37
00:03:28.640 --> 00:03:32.610
I know that this could be hard but trust me this.

38
00:03:32.650 --> 00:03:35.470
This was the hardest part of the whole section.

39
00:03:35.870 --> 00:03:42.890
And to conclude this video let's print our metadata and as you can see it is python dictionary for each

40
00:03:42.890 --> 00:03:49.220
future we have information such as name type presence shape and so on.

41
00:03:49.220 --> 00:03:55.810
Now we have enough information about the dataset itself to build our pretty processing function and

42
00:03:55.810 --> 00:03:58.500
that's what we are going to do in the next video.

43
00:03:58.720 --> 00:04:03.680
If you have any questions or comments so far please post them in the comments section.

44
00:04:03.680 --> 00:04:05.860
Otherwise I've seen the next tutorial.
