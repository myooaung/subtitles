1
00:00:00,270 --> 00:00:02,150
Hello and welcome to this new tutorial.

2
00:00:02,160 --> 00:00:08,070
And now just before moving on to the more exciting applications of tensor flow 2.0 which are of course

3
00:00:08,070 --> 00:00:14,800
related to the neural networks let us finish with some final basics about the strings.

4
00:00:14,880 --> 00:00:17,940
How to handle strings with tons of Loot 2.0.

5
00:00:17,940 --> 00:00:19,920
That's what we about to discover.

6
00:00:20,490 --> 00:00:26,370
So first of all first things first let's start with the basics the very basics the way to create a string

7
00:00:26,420 --> 00:00:30,150
which tend to flow is by using once again the constant function.

8
00:00:30,160 --> 00:00:37,200
You know this is not only used to create tensor with tensor flow you can also create a string constant

9
00:00:37,470 --> 00:00:40,580
which same you create through this constant function by tenths of law.

10
00:00:40,890 --> 00:00:45,430
So once again you take your tensor flow library from which you call the constant function which takes

11
00:00:45,430 --> 00:00:53,040
as input your string instead of the tensor as before and indeed then when we call R T A string variable

12
00:00:53,040 --> 00:00:57,140
which is the name of the viable I gave that gets the string.

13
00:00:57,150 --> 00:01:02,730
Well indeed we get the different informations you know of the properties of this tensor flow object

14
00:01:02,970 --> 00:01:09,210
such as the shape so the shape is now this time and the type is of course string and the value of the

15
00:01:09,210 --> 00:01:11,820
string inside is indeed tend to flow right.

16
00:01:11,850 --> 00:01:13,470
That's your string tensor flow.

17
00:01:14,130 --> 00:01:17,610
All right so that's how you define a string with tensor flow.

18
00:01:17,610 --> 00:01:23,400
You don't have to do it with stencil flow but if you want to do deep and LP for example well you might

19
00:01:23,400 --> 00:01:26,010
want to create your strings with tons of flow.

20
00:01:26,130 --> 00:01:31,110
And now that we define a string Well let's see some simple string operations starting with the first

21
00:01:31,110 --> 00:01:37,080
one which is widely used especially well in natural language processing and which is to get the length

22
00:01:37,140 --> 00:01:42,960
you know if you want to get the length of a string the number of letters composing your string and to

23
00:01:42,960 --> 00:01:47,510
do this well you have a certain path to get to first.

24
00:01:47,510 --> 00:01:52,710
You start with the tensor for library form which you get the strings module from which you call the

25
00:01:52,710 --> 00:01:59,700
length function which takes as input of course your sense of low string object T F string and so by

26
00:01:59,700 --> 00:02:06,480
calling this well we get once again no shape because this time it's just a number and the value of ten

27
00:02:06,780 --> 00:02:10,060
you know ten because there are 10 letters intensive.

28
00:02:10,320 --> 00:02:10,750
All right.

29
00:02:10,770 --> 00:02:13,350
So very simple string operation.

30
00:02:13,350 --> 00:02:17,590
Now a less simple one well it's still very simple to do it.

31
00:02:17,760 --> 00:02:24,330
It's the decode operation or if you want to decode your string into another format and as an example

32
00:02:24,330 --> 00:02:26,480
here I took the UTF 8.

33
00:02:26,550 --> 00:02:31,530
So this is something you might not use but it's just in case you're doing some pretty advanced LP and

34
00:02:31,530 --> 00:02:33,420
you need to decode anything.

35
00:02:33,630 --> 00:02:39,310
Well you're gonna use the unicode decode function again by the strings module by the tens of Lew library.

36
00:02:39,340 --> 00:02:39,680
Right.

37
00:02:39,690 --> 00:02:42,990
And this Unicode decode function takes two arguments.

38
00:02:42,990 --> 00:02:48,750
The first one is your string and the second one is the format to which you want it to code your string.

39
00:02:48,750 --> 00:02:49,080
All right.

40
00:02:49,080 --> 00:02:55,830
And indeed by calling this we get this time a shape because indeed when you decode a string into UTF

41
00:02:55,890 --> 00:03:00,300
8 you will get one number for each of the letters of your string.

42
00:03:00,300 --> 00:03:05,600
And that's why here we get 10 numbers which are resulting from the UTF 8 format.

43
00:03:05,760 --> 00:03:07,810
And each is indeed an integer.

44
00:03:07,810 --> 00:03:08,490
All right.

45
00:03:08,520 --> 00:03:10,980
So just some simple string operations.

46
00:03:11,160 --> 00:03:17,370
And now another thing that might be very useful for you if once again you wanted to keep an LP or even

47
00:03:17,610 --> 00:03:20,180
simple natural language processing with sense of flow.

48
00:03:20,370 --> 00:03:25,830
But you know if you're using tensor flow you might do deep MLP in the sense that you might build and

49
00:03:25,830 --> 00:03:28,510
use a tensor flow new network.

50
00:03:28,560 --> 00:03:33,630
So it is how to store some arrays of strings right.

51
00:03:33,630 --> 00:03:37,980
You know imagine you have several strings and you want to put them into an array.

52
00:03:38,010 --> 00:03:45,270
Well the way to do this is once again to take the constant function by tensor flow you create your array

53
00:03:45,270 --> 00:03:51,930
which is this time one array with a single pair of square brackets containing your different strings

54
00:03:51,940 --> 00:03:53,730
so the first one is tensor flow.

55
00:03:53,730 --> 00:03:59,880
The second one is deep learning and the third one is A.I. and that will create an array of string very

56
00:03:59,880 --> 00:04:06,020
simply an array of strings which you put into a variable but which is in fact actually a constant in

57
00:04:06,030 --> 00:04:08,310
which I called T S string array.

58
00:04:08,370 --> 00:04:16,290
All right and then once you have an array of strings while you might have to iterate through this array

59
00:04:16,320 --> 00:04:21,720
you know iterate the different elements of this array you know just to get the different strings separately

60
00:04:21,720 --> 00:04:22,580
one by one.

61
00:04:22,590 --> 00:04:28,770
That's something we do many times in LP and well to do this you can do a simple for loop.

62
00:04:28,770 --> 00:04:35,160
I provided the full loop here you know you iterate the different strings inside your array of strings

63
00:04:35,550 --> 00:04:41,460
and then I just printed the different strings just to show you that indeed we are well iterating our

64
00:04:41,520 --> 00:04:46,700
array of strings and we get each of its elements first one extensively indeed.

65
00:04:46,840 --> 00:04:49,830
Second with deep learning and the third one is a I.

66
00:04:50,550 --> 00:04:51,000
All right.

67
00:04:51,030 --> 00:04:58,000
So I just provided that as extra you know if any of you is interested in LP and want to do deep and

68
00:04:58,000 --> 00:05:01,190
happy with tensor flow 2.0 so you have the basics.

69
00:05:01,190 --> 00:05:05,710
And besides we will have a great deep end of the application in this course.

70
00:05:05,750 --> 00:05:12,810
So it's even greater that we actually introduce the basics of the strings intensive flow 2.0.

71
00:05:13,610 --> 00:05:21,260
So now I guess we are ready to move on to the real and more exciting applications of tensor flow.

72
00:05:21,260 --> 00:05:23,140
This was just the introduction.

73
00:05:23,180 --> 00:05:28,020
Now we're going to move on to new networks and we're going to start with artificial neural networks.

74
00:05:28,040 --> 00:05:32,710
And each time they're going to apply to a real world problem or you know to an advanced application

75
00:05:32,710 --> 00:05:37,710
so that you can see how useful can be tensor flow 2.0.

76
00:05:37,730 --> 00:05:42,530
So I look forward to seeing you in the next sections on the new networks.

77
00:05:42,560 --> 00:05:43,460
And that's not all.

78
00:05:43,550 --> 00:05:48,860
Then after the rule networks you'll see we're going to have some more applications of tensor flow 2.0

79
00:05:49,160 --> 00:05:51,830
and even more advanced features of tensor flow.

80
00:05:51,830 --> 00:05:56,120
I remind that this is a very very complete course on center flow 2.0.

81
00:05:56,330 --> 00:06:00,440
So you'll get everything and you'll get a variety of applications.

82
00:06:00,470 --> 00:06:02,640
So I look forward to seeing you in the next section.

83
00:06:02,660 --> 00:06:04,550
And until then enjoy tons of low.
