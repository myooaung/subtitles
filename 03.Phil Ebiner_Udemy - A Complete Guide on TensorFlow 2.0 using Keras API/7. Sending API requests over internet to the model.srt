1
00:00:00,330 --> 00:00:05,150
Hello everyone and welcome to despite a tutorial in the previous with you.

2
00:00:05,160 --> 00:00:08,320
We have started our flask API on the board.

3
00:00:09,720 --> 00:00:15,810
And in this video we are going to use the postman to send the request and make predictions over the

4
00:00:15,810 --> 00:00:17,590
Internet just for the track.

5
00:00:17,640 --> 00:00:22,930
I opened uploads folder to see all objects that we are trying to predict.

6
00:00:23,010 --> 00:00:27,390
If you haven't used the postman before this is the interface.

7
00:00:27,390 --> 00:00:33,780
I know there are a lot of moving parts but in our case we are going to use just a few of them.

8
00:00:33,850 --> 00:00:40,920
For example this line right here is just a line where you can enter an address where you want to send

9
00:00:40,920 --> 00:00:42,760
a request.

10
00:00:42,800 --> 00:00:48,420
Here you can specify what type of the request you want to send in the blue send button.

11
00:00:48,470 --> 00:00:55,400
It's pretty much self-explanatory and the response window is here to visualize all data that we received

12
00:00:55,400 --> 00:00:58,500
from the server okay.

13
00:00:58,540 --> 00:01:04,160
If we take a look at the address line you can see that we already have some address there.

14
00:01:04,240 --> 00:01:07,260
The first part is just a local host IP.

15
00:01:07,460 --> 00:01:14,940
In the second part is the port that we specified in the plastic application please note if you specify

16
00:01:15,000 --> 00:01:23,670
another port for your flask application specified here instead of this one now about the request we

17
00:01:23,670 --> 00:01:29,910
want to send a request to classify image function that we've wrote in our flask API backend.

18
00:01:30,810 --> 00:01:37,650
And if you remember it only takes the post to request go to this part of the interface and select the

19
00:01:37,650 --> 00:01:40,070
post request.

20
00:01:40,080 --> 00:01:46,060
Now it's time to specify the full path to which we want to send the request this address right.

21
00:01:46,080 --> 00:01:50,910
Here is the root address for the API and it always stays the same.

22
00:01:52,450 --> 00:01:58,260
The second part of the address is one that changes and the one that we need to specify right now.

23
00:01:59,570 --> 00:02:10,020
So after the port in the address right API slash V1 and here we need to specify a name of an image let's

24
00:02:10,020 --> 00:02:15,030
use these free dot PMG as the first test subject right.

25
00:02:15,060 --> 00:02:23,920
Free dot BMG before we send our first request just a side note to remember if we had the full functional

26
00:02:23,920 --> 00:02:28,640
web application this part would be automatic for the user.

27
00:02:28,630 --> 00:02:29,120
OK.

28
00:02:29,160 --> 00:02:36,690
Now are you ready to send the first request to our custom made API and click Send button.

29
00:02:37,880 --> 00:02:41,510
And we get amazing results for this image.

30
00:02:41,510 --> 00:02:49,780
We recognize the correct it was trousers on it this proves that we have successfully build a fully functional

31
00:02:49,840 --> 00:02:56,630
API that has an accuracy of over 98 percent on unseen data.

32
00:02:56,830 --> 00:03:02,810
Let's test this API on other images that we selected before we end the tutorial.

33
00:03:02,910 --> 00:03:06,580
Let's go with Image 4 and click send.

34
00:03:06,690 --> 00:03:09,600
As you can see amazing correct results.

35
00:03:09,600 --> 00:03:10,870
Again.

36
00:03:11,100 --> 00:03:12,620
Now let's go with the image 1.

37
00:03:13,500 --> 00:03:15,750
And again our results are correct.

38
00:03:15,900 --> 00:03:21,850
This time we predicted pool over class and finally let us go with image 0.

39
00:03:21,990 --> 00:03:26,630
It should be a boot and again we have correct results.

40
00:03:26,670 --> 00:03:33,090
Congratulations for creating your own custom made flask API that harnesses the power of deep learning

41
00:03:33,120 --> 00:03:34,800
in the backend.

42
00:03:34,800 --> 00:03:41,910
I'm really excited that we sold this project in this course together and for now if you have any questions

43
00:03:41,910 --> 00:03:45,220
or comments please post them in the comments section.

44
00:03:45,390 --> 00:03:47,400
Otherwise I've seen the next tutorial.
