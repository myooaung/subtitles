WEBVTT
1
00:00:00.650 --> 00:00:03.970
Hello everyone and welcome to this python tutorial.

2
00:00:04.100 --> 00:00:10.910
In the previous video we finally finished with our A.I. trader class and now that we have everything

3
00:00:10.910 --> 00:00:16.940
prepared for our algorithm it's time to create a few helper functions that are going to help us in the

4
00:00:16.940 --> 00:00:19.020
learning process.

5
00:00:19.060 --> 00:00:24.100
The goal of this video is to define and complete our data set loader function.

6
00:00:24.100 --> 00:00:30.580
But before we jump into that part of the video we'll discuss these two helper functions they have just

7
00:00:30.580 --> 00:00:38.160
defined for you the first one is the sigmoid as you already know the sigmoid is an activation function

8
00:00:38.520 --> 00:00:40.870
used mostly at the end of the network.

9
00:00:40.890 --> 00:00:48.700
When we have binary classification ultimately it's kills a number to the range from 0 to 1 this function

10
00:00:48.700 --> 00:00:51.730
here will help us to scale our prices.

11
00:00:51.730 --> 00:00:58.690
We are doing this so we can compare and gather the real differences between each day one day the stock

12
00:00:58.690 --> 00:01:01.410
can be two hundred but the next one.

13
00:01:01.420 --> 00:01:04.020
It can jump to 1000.

14
00:01:04.050 --> 00:01:08.570
The difference between them is the same as forty five to 200.

15
00:01:08.580 --> 00:01:14.940
The difference as in the jump is the same but the prices weren't to handle this.

16
00:01:14.970 --> 00:01:20.780
We need to use sigmoid function to have the same number two represents this difference.

17
00:01:20.970 --> 00:01:27.870
The next helper function is stock price format and there's the formatting function which will help us

18
00:01:27.870 --> 00:01:32.580
to print out the prices of the stock we bought or sold.

19
00:01:32.730 --> 00:01:35.190
It says if the number is negative.

20
00:01:35.370 --> 00:01:42.810
So we lost some money for example it will add a minus in front of it and we are using this string formatting

21
00:01:42.810 --> 00:01:47.520
to limit the printed number to only 2 decimal points.

22
00:01:47.550 --> 00:01:49.030
We are doing the same thing.

23
00:01:49.080 --> 00:01:56.750
If the number is positive although we don't add the minus in front of it the core of this video is to

24
00:01:56.750 --> 00:01:59.660
complete this data loader function.

25
00:01:59.660 --> 00:02:02.840
We only have to add one line of code.

26
00:02:03.020 --> 00:02:09.200
We are going to explain these free lines of code right here but for the more straightforward implementation

27
00:02:09.500 --> 00:02:16.130
and focusing on the meat of this function we wont bother writing these lines before we complete this

28
00:02:16.130 --> 00:02:17.610
data loader a function.

29
00:02:17.840 --> 00:02:21.220
Let's visualize the data set and see how to load 1.

30
00:02:21.500 --> 00:02:28.370
Let's define a data set as a variable and let's call our library called data reader that we installed

31
00:02:28.370 --> 00:02:35.720
in the first video of this section this function has a data either object that takes a stock price information

32
00:02:36.530 --> 00:02:44.450
as you can see it can reach to Google finances Yahoo Finance or any other provider of stock market information.

33
00:02:44.750 --> 00:02:47.530
In our case we are going to use Yahoo scenes.

34
00:02:47.570 --> 00:02:54.540
It provides the most relevant information for us the stock name represents the name of the company on

35
00:02:54.540 --> 00:03:02.230
the stock exchange market let's use Apple for this example to get Apple stock information right.

36
00:03:02.430 --> 00:03:05.360
A P L as a string.

37
00:03:05.430 --> 00:03:11.790
The next argument that we have to specify is data source or which provider we should ask to provide

38
00:03:11.790 --> 00:03:13.750
that information for us.

39
00:03:14.010 --> 00:03:22.500
In this case we are saying data source is equal to Yahoo and that's all what we have to provide after

40
00:03:22.500 --> 00:03:24.540
we finish with testing of this line.

41
00:03:24.540 --> 00:03:31.620
We are going to copy and pasted right here in the function but before we do that let's check what it

42
00:03:31.620 --> 00:03:32.070
does.

43
00:03:33.220 --> 00:03:34.780
It will reach through Yahoo.

44
00:03:34.780 --> 00:03:39.770
Get Apple stock information and save that to our data set variable.

45
00:03:40.090 --> 00:03:47.280
Let us visualize it as you can see it uses Panda's data frame object to store that information.

46
00:03:48.060 --> 00:03:54.420
If you haven't worked with stocks before it has a date scenes for each day we have some price of the

47
00:03:54.420 --> 00:03:55.300
stock.

48
00:03:55.650 --> 00:04:03.500
High Low is the highest and lowest price for the day open is when the market is opened physically.

49
00:04:03.510 --> 00:04:11.120
For example in New York what was the price for that company then we have close and close is a price

50
00:04:11.150 --> 00:04:12.900
similar to open one.

51
00:04:12.920 --> 00:04:21.300
But the price when the market is closed volume represents how many stocks are there to be sold and the

52
00:04:21.300 --> 00:04:23.750
last column is not important for us right now.

53
00:04:24.870 --> 00:04:32.360
We don't have to use or want to use all of this information if we want to predict stock market prices.

54
00:04:32.360 --> 00:04:40.530
We are going to use only the close or open column let's use close for our example and this is the column

55
00:04:40.530 --> 00:04:47.950
that we are trying to predict and also from these data we are going to build state for our network this

56
00:04:47.980 --> 00:04:55.990
index here is the date in here we need to specify the starting date and the end date and if we specify

57
00:04:56.020 --> 00:05:01.400
data said Dot index it is going to take all data from the data set.

58
00:05:01.810 --> 00:05:08.750
But if we specify just the first one it is going to get our starting date and that's pretty much it.

59
00:05:08.920 --> 00:05:15.790
We can convert this date to a string format and split it on space so we don't use this time or related

60
00:05:15.790 --> 00:05:17.590
information by just the date.

61
00:05:17.620 --> 00:05:20.820
So this is the same thing that is happening right here.

62
00:05:20.890 --> 00:05:27.370
We are taking the first and the last date from our data set putting them in the string format and getting

63
00:05:27.370 --> 00:05:34.660
the information like what is the starting and the ending date of the data set we can delete this cell

64
00:05:34.660 --> 00:05:42.400
right now as we already said let us copy this line right here and based it to our function with this

65
00:05:42.400 --> 00:05:48.960
line added the function is ready to be used since the data set variable is the same as this one.

66
00:05:50.100 --> 00:05:55.710
There is only one more thing that we have to do instead of specifying Apple as a string.

67
00:05:55.830 --> 00:06:02.260
Let's use argument of the function instead with that we are done with the function execute the cell

68
00:06:02.500 --> 00:06:06.480
and we are ready to proceed and that's it for this video.

69
00:06:06.520 --> 00:06:12.490
You learned how to use this data either a library to reach to some markets such as Yahoo Finance and

70
00:06:12.550 --> 00:06:18.400
ask for the data information about a certain company in the next video we will take this information

71
00:06:18.460 --> 00:06:20.280
and create state from it.

72
00:06:20.380 --> 00:06:25.360
If you have any questions or comments so far please post them in the comments section.

73
00:06:25.360 --> 00:06:27.510
Otherwise I seeing the next tutorial.
