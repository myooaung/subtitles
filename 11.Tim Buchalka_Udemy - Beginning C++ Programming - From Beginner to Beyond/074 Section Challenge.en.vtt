WEBVTT
1
00:00:05.790 --> 00:00:11.580
Welcome to the s.a.a challenge for this program I'm going to be using U.S. dollars and cents.

2
00:00:11.580 --> 00:00:16.950
But feel free to use whatever currency system you're familiar whether you want to use the idea here

3
00:00:16.950 --> 00:00:20.970
is you want to write a program that ask the user to enter the following.

4
00:00:20.970 --> 00:00:24.310
Ask them to enter an integer representing the number of cents.

5
00:00:24.570 --> 00:00:28.260
You can assume that the number of cents entered is greater than or equal to zero.

6
00:00:28.260 --> 00:00:31.930
The program then displays how to provide that change to the user.

7
00:00:31.950 --> 00:00:39.390
So in the US we have $1 100 cents a quarter is 25 cents a dime is 10 cents a nickel is five cents and

8
00:00:39.390 --> 00:00:40.760
a penny is one cent.

9
00:00:40.770 --> 00:00:46.950
So in this example suppose a user enters 92 cents your results for display that you can provide this

10
00:00:46.950 --> 00:00:48.160
change as follows.

11
00:00:48.270 --> 00:00:53.800
No dollars three quarters would be 75 cents a dime which would be another 10 cents that would give you

12
00:00:53.820 --> 00:00:54.940
85.

13
00:00:55.020 --> 00:00:55.920
The nickel is five.

14
00:00:55.920 --> 00:00:59.810
There's your 90 and the two pennies there is your 92.

15
00:00:59.880 --> 00:01:02.160
As I said feel free to use your own currency system.

16
00:01:02.160 --> 00:01:07.680
Also think of how you want to solve this problem using the modulo operator when I give you my solution.

17
00:01:07.680 --> 00:01:12.890
I have two solutions I'll have one without the modulo operator and one that uses the modulo operator.

18
00:01:12.890 --> 00:01:15.450
So you can see two different ways to approach the problem.

19
00:01:15.450 --> 00:01:18.450
Quick hint please don't just sit down and start coding this.

20
00:01:18.450 --> 00:01:20.320
Think about how you want to solve it.

21
00:01:20.430 --> 00:01:24.760
Write down some pseudo code that's English like statement so you can get your thoughts straight.

22
00:01:24.810 --> 00:01:28.940
Figure out what your algorithm is where your steps that you want to use to solve the program.

23
00:01:29.070 --> 00:01:30.040
So have fun.

24
00:01:30.120 --> 00:01:31.710
Make sure you test your program.

25
00:01:31.710 --> 00:01:33.470
Don't forget to test 0.

26
00:01:33.480 --> 00:01:38.410
Don't forget to test large numbers and what I'm going to do isn't going to do a couple of sample runs

27
00:01:38.420 --> 00:01:40.430
as you can see how this works.

28
00:01:40.440 --> 00:01:46.410
So in this example it says enter an amount in sense so let's say I type in 92 cents and the program

29
00:01:46.410 --> 00:01:47.180
responds.

30
00:01:47.190 --> 00:01:51.600
You can provide change for this as follows dollars 0.

31
00:01:51.870 --> 00:01:55.180
Three quarters one dime one nickel two pennies.

32
00:01:55.290 --> 00:01:56.670
Just like we would expect.

33
00:01:56.940 --> 00:02:03.840
As I mentioned Don't forget to test with zero and we should get all zeros straight down the line and

34
00:02:04.020 --> 00:02:07.810
let's say we want to test this with 267 cents.

35
00:02:07.830 --> 00:02:11.150
That's two dollars $2 sixty seven cents.

36
00:02:11.220 --> 00:02:12.780
In this case we've got our $2.

37
00:02:12.780 --> 00:02:13.790
We've got two quarters.

38
00:02:13.790 --> 00:02:15.120
That gives us 50.

39
00:02:15.180 --> 00:02:16.880
The dime gives us 60.

40
00:02:16.910 --> 00:02:18.960
The nickel sixty five and the two pennies.

41
00:02:18.990 --> 00:02:20.070
Sixty seven.

42
00:02:20.070 --> 00:02:22.770
So there you two hundred and sixty seven cents.

43
00:02:22.770 --> 00:02:23.130
All right.

44
00:02:23.130 --> 00:02:24.730
So have a go at it.

45
00:02:24.780 --> 00:02:28.890
And when you come back go to the solutions section or I'd go over my solution.

46
00:02:28.890 --> 00:02:29.310
Good luck.
