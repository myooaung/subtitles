1
00:00:05,350 --> 00:00:10,840
Welcome to the first challenge for Section 19 this challenge is all about using what you learned about

2
00:00:10,960 --> 00:00:18,430
formatting output to format a table of tours to different cities in South America including prices and

3
00:00:18,430 --> 00:00:19,250
so forth.

4
00:00:19,420 --> 00:00:20,890
And we'll get to that in a second.

5
00:00:20,890 --> 00:00:27,280
But I'm in the section 19 workspace and there are two projects challenge underscore one is the source

6
00:00:27,280 --> 00:00:32,650
code that I'm providing for you and challenge underscore one underscore solution is my solution to the

7
00:00:32,800 --> 00:00:33,460
challenge.

8
00:00:33,490 --> 00:00:38,110
So let's take a look at what the challenge is all about then I'll give you a sample run and then you

9
00:00:38,110 --> 00:00:40,570
can try it out on your own.

10
00:00:40,630 --> 00:00:45,290
So as I said it's about formatting output and we're going to do everything to see out.

11
00:00:45,520 --> 00:00:47,560
We're going to display everything to the console.

12
00:00:47,560 --> 00:00:52,040
Later on we can change that and display the files and that's what we're going to our next in this section.

13
00:00:52,060 --> 00:00:56,890
So let's start I'm giving you the starter source code for the challenge and I'll go through that in

14
00:00:56,890 --> 00:00:57,890
just a second.

15
00:00:57,940 --> 00:01:03,370
But the challenge for you to display the provided data in a nicely formatted table your table doesn't

16
00:01:03,370 --> 00:01:06,210
have to match mine you can do however you like.

17
00:01:06,220 --> 00:01:10,820
The point is for you to become comfortable with these manipulators play around with them.

18
00:01:10,820 --> 00:01:14,370
Don't just try to mimic my table exactly.

19
00:01:14,710 --> 00:01:17,060
You know big pre-created do your do your own thing.

20
00:01:17,080 --> 00:01:19,270
So I'm going to give you three structures.

21
00:01:19,270 --> 00:01:24,440
We haven't really done these sorts of structures before but they're really really straightforward.

22
00:01:24,500 --> 00:01:25,630
They're not classes.

23
00:01:25,630 --> 00:01:29,160
We're going to use structures because we don't really need to model operations.

24
00:01:29,160 --> 00:01:31,660
We just want to model data and member modeling data.

25
00:01:31,660 --> 00:01:34,030
It's really common to just use structures.

26
00:01:34,030 --> 00:01:36,430
Again I'll show you what they look like in just a second.

27
00:01:36,430 --> 00:01:41,790
So the first thing is these structures work together to create a tures structure.

28
00:01:42,010 --> 00:01:46,960
And that's going to contain about information about tours to South America and the tours include the

29
00:01:46,960 --> 00:01:52,150
countries that you can visit the cities within those countries and those cities have population and

30
00:01:52,150 --> 00:01:54,780
cost data associated with the tour.

31
00:01:54,970 --> 00:01:58,810
I know population I was thinking the same thing I just wondered a really big numbers that you could

32
00:01:58,810 --> 00:02:02,450
format it watched the challenge video which you're obviously watching right now.

33
00:02:02,500 --> 00:02:06,820
But if you're looking at the code I'm hoping that you come back to this video and watch it so that you

34
00:02:06,820 --> 00:02:08,650
can see what the expected output looks like.

35
00:02:08,650 --> 00:02:14,740
I tried to copy the output to this document here but everybody's got different fonts and some of the

36
00:02:14,740 --> 00:02:17,940
fonts aren't monospaced in the document would look really weird.

37
00:02:18,020 --> 00:02:23,740
So I'd I'll just run it for you so you can see exactly what it's supposed to look like in the code.

38
00:02:23,740 --> 00:02:28,930
I'm going to give you some starter code that displays all the data from these structures and vectors

39
00:02:29,350 --> 00:02:32,440
using tabs to kind of align things and it looks pretty ugly.

40
00:02:32,650 --> 00:02:35,240
But your job is to clean it up make it look pretty.

41
00:02:35,320 --> 00:02:35,680
OK.

42
00:02:35,680 --> 00:02:41,230
So as I always say have fun create functions Constans do whatever you think makes sense explore play

43
00:02:41,230 --> 00:02:44,940
around do it and then do it again a different way that's how you really really learn.

44
00:02:45,220 --> 00:02:48,340
OK so let's go to the source code so I'll get him in the challenge.

45
00:02:48,350 --> 00:02:51,940
Underscore one project and I'm looking at the main code right here.

46
00:02:52,030 --> 00:02:55,020
And let's go over these data structures.

47
00:02:55,210 --> 00:03:00,990
First of all what we've got is we're including our normal group here.

48
00:03:01,030 --> 00:03:05,220
We've got IO dream we've got iOS manip since we're going to use the manipulators.

49
00:03:05,290 --> 00:03:10,390
We've got a vector and we've got a string and we've got these three structures right here.

50
00:03:10,390 --> 00:03:14,560
Here's the first one it's city country and tours.

51
00:03:14,620 --> 00:03:16,960
And let me start with City.

52
00:03:16,960 --> 00:03:17,880
Think of a struct.

53
00:03:17,890 --> 00:03:24,070
We talked about a struct A little bit earlier in the Object-Oriented classes and phunk method section.

54
00:03:24,070 --> 00:03:27,500
It's like a class except Everything's public.

55
00:03:27,520 --> 00:03:29,640
You can have instructors you can have all kinds of stuff.

56
00:03:29,650 --> 00:03:33,610
But typically we use trucks like this to just model data.

57
00:03:33,610 --> 00:03:38,350
Sometimes you just want pure data and you want to deal with constructors and methods and you really

58
00:03:38,350 --> 00:03:39,670
don't need any of that.

59
00:03:39,670 --> 00:03:42,390
So this is just a good way to collect data together.

60
00:03:42,400 --> 00:03:48,370
So what we've got here is we've got a city and each city has a name so let's say the name for one of

61
00:03:48,370 --> 00:03:55,180
the cities is Bogota in Colombia a population which is a long and I don't know how many millions there

62
00:03:55,180 --> 00:03:59,090
are I made some of those numbers up let's just say 18 million or something like that.

63
00:03:59,290 --> 00:04:02,920
And the cost of taking a tour to Bogota from Miami.

64
00:04:02,920 --> 00:04:04,960
So that's five hundred sixty nine dollars.

65
00:04:04,960 --> 00:04:06,580
And again I don't know what that number is.

66
00:04:06,580 --> 00:04:08,940
It's in the data you see in a minute.

67
00:04:09,100 --> 00:04:10,690
So that's a city.

68
00:04:10,870 --> 00:04:15,280
We're going to have many of these cities right we'll have Rio de Janeiro will have Santiago Chile we'll

69
00:04:15,280 --> 00:04:18,020
have a whole bunch of places that we can visit in South America.

70
00:04:18,160 --> 00:04:21,030
Each one will be modeled by a city.

71
00:04:21,400 --> 00:04:22,210
Perfect.

72
00:04:22,210 --> 00:04:26,730
Now let's look at the country the country has a name.

73
00:04:26,770 --> 00:04:31,010
In this case it will be Colombia.

74
00:04:31,390 --> 00:04:35,700
And it has stood Vektor of cities.

75
00:04:36,100 --> 00:04:41,230
And so I might have three or four cities associated with Colombia I might have two or three cities associated

76
00:04:41,230 --> 00:04:42,910
with Brazil and so forth.

77
00:04:42,910 --> 00:04:48,640
So this is how we structure our data using these structures building one within the other.

78
00:04:48,640 --> 00:04:55,180
Finally we've got our main object here which is the tours and it has a title and that title I don't

79
00:04:55,180 --> 00:04:58,390
remember exactly what it is Prussia tea in a minute when I show you the data.

80
00:04:58,390 --> 00:05:03,610
It's something like you know tours to South America or something and some some big title they'll little

81
00:05:03,700 --> 00:05:11,740
the Tator the header on our report and the tures has a vector of countries that makes sense.

82
00:05:11,800 --> 00:05:15,300
So we could have the title which is this guy

83
00:05:18,080 --> 00:05:26,870
and then we could have let's say Columbia and we could have Brazil as our countries and we could have

84
00:05:26,870 --> 00:05:33,220
Argentina in many countries have cities within them you can see them right here.

85
00:05:33,470 --> 00:05:44,270
So you may have Bogota here and the population is 18 million and the cost is $567 or something like

86
00:05:44,270 --> 00:05:44,680
that.

87
00:05:44,810 --> 00:05:47,260
Then you would display the next city and the next city.

88
00:05:47,360 --> 00:05:50,330
Then you'd go to Brazil and you display Rio and so forth.

89
00:05:50,330 --> 00:05:52,590
So this is what our report is going to look like.

90
00:05:53,000 --> 00:05:58,130
And the reason we structured this data is because it makes it so much easier to process that where we

91
00:05:58,130 --> 00:06:03,520
don't have to just play around with the hundreds of arrays and strings and so forth so we're using what

92
00:06:03,530 --> 00:06:04,370
we should be using.

93
00:06:04,370 --> 00:06:09,880
We're using stood strings and we're using stood vector's and that's what modern C++ is all about.

94
00:06:09,890 --> 00:06:16,020
It's not using character pointers and we're not using any anything else just real solid data structures.

95
00:06:16,160 --> 00:06:18,650
OK so how do we initialize these guys.

96
00:06:18,650 --> 00:06:26,340
Let me scroll down just a little bit and here you see some of the initialization and this is done for

97
00:06:26,340 --> 00:06:26,750
you.

98
00:06:26,790 --> 00:06:27,950
I've already written this for you.

99
00:06:27,960 --> 00:06:29,610
You could just use it.

100
00:06:29,620 --> 00:06:34,080
Notice that this piece right here and this is using our uniform initialization right.

101
00:06:34,080 --> 00:06:39,440
This is the kind of stuff we've been using all along except we're doing it all in one shot here.

102
00:06:39,660 --> 00:06:42,810
So here is a city.

103
00:06:43,050 --> 00:06:45,980
Here's another city here's another city here's another city.

104
00:06:46,080 --> 00:06:53,050
These four cities are a vector and that vector is the vector of cities in that country.

105
00:06:53,070 --> 00:06:55,090
Columbia right.

106
00:06:55,110 --> 00:06:58,410
And that country Columbia is one of these guys.

107
00:06:58,440 --> 00:07:00,840
And is the title at the top of the tures.

108
00:07:00,870 --> 00:07:05,790
So what we're doing is we're building this using uniform initialization which makes it really really

109
00:07:05,790 --> 00:07:09,090
nice to visually see what's going on here.

110
00:07:09,120 --> 00:07:11,180
So you could see that I've got.

111
00:07:11,230 --> 00:07:14,800
Let me scroll up just a little bit here so hopefully we can see them all.

112
00:07:15,750 --> 00:07:17,060
Yep I think we can see them all.

113
00:07:17,070 --> 00:07:17,830
Great.

114
00:07:18,120 --> 00:07:21,770
So in this case there's my title.

115
00:07:21,960 --> 00:07:29,980
Here is a country another country another country another country I don't know what happened to my mouse.

116
00:07:30,060 --> 00:07:33,690
All of a sudden got really big fix that real quick.

117
00:07:33,690 --> 00:07:40,750
And within those countries I've got cities and cities and cities and here's a single city.

118
00:07:40,860 --> 00:07:43,130
You can always assume that there must be.

119
00:07:43,140 --> 00:07:46,980
You've got a country you must have a city so you can assume that you're never going to have a country

120
00:07:46,980 --> 00:07:51,370
without a city that will just make your your processing a little bit easier.

121
00:07:51,390 --> 00:07:52,230
That's it.

122
00:07:52,230 --> 00:07:53,470
So that's our data up.

123
00:07:53,580 --> 00:07:56,720
And let me show you how you would work with this data.

124
00:07:56,910 --> 00:07:59,550
So let me scroll up and clear this a little bit.

125
00:07:59,610 --> 00:08:01,240
Here's the code I'm giving you.

126
00:08:02,520 --> 00:08:07,830
And you may not see it right off the bat but it should be pretty intuitive once you start walking into

127
00:08:07,830 --> 00:08:09,540
it and thinking about it a little bit.

128
00:08:09,660 --> 00:08:12,610
You can see what we're starting out here we're displaying the title.

129
00:08:12,870 --> 00:08:16,780
The title is part of that tures object right towards that title.

130
00:08:17,010 --> 00:08:23,490
And then for each country it's in the countries in that tour object.

131
00:08:23,490 --> 00:08:28,620
So we'll loop through all the different countries like Colombia Brazil Argentina and so forth for each

132
00:08:28,620 --> 00:08:35,100
one of playing the name and then I'm looking through that city's vector that's inside of it for each

133
00:08:35,100 --> 00:08:38,130
city in that city's vector I'm displaying the city.

134
00:08:38,550 --> 00:08:41,120
That's really and it's really really straightforward.

135
00:08:41,130 --> 00:08:47,100
Again take a minute and understand the concept walk through this before you start trying to format this

136
00:08:47,100 --> 00:08:47,370
data.

137
00:08:47,370 --> 00:08:50,940
Make sure you understand how we're getting the data that's really important.

138
00:08:50,970 --> 00:08:55,830
Once we do that we can display this information it's not going to look very pretty but as you can see

139
00:08:55,830 --> 00:08:59,200
we're using tab characters to kind of align these columns.

140
00:08:59,340 --> 00:09:02,960
And it's not going to do a real good job but at least you'll be able to see what's going on.

141
00:09:03,030 --> 00:09:07,560
If I run this now it'll be the output that you should be getting as well.

142
00:09:07,560 --> 00:09:09,890
So let me run that project right now.

143
00:09:09,990 --> 00:09:11,280
That's what you should get.

144
00:09:12,420 --> 00:09:18,800
Tour ticket prices from Miami you can see Colombia and the cities Brazil cities Chile and Argentina.

145
00:09:19,200 --> 00:09:23,370
But you can see this is lined up nicely because we're not doing any real formatting we're just using

146
00:09:23,370 --> 00:09:25,800
the tab character.

147
00:09:25,800 --> 00:09:29,530
OK so let me stop that and then let me show you the solution.

148
00:09:29,550 --> 00:09:38,460
Output looks something like this which is much nicer and I've been displaying this ruler appear I'm

149
00:09:38,460 --> 00:09:40,750
doing this in the width of 70 total.

150
00:09:40,770 --> 00:09:45,150
You don't have to do that and that's just what I chose because it's easy to see.

151
00:09:45,150 --> 00:09:48,680
You can see here I'm displaying tour ticket prices from Miami centered.

152
00:09:48,700 --> 00:09:53,820
There is no way to center something you remember with when we use the set width and the justification

153
00:09:53,820 --> 00:09:55,340
we get on the left or right.

154
00:09:55,380 --> 00:10:00,510
So centering it you're going have to do maybe a little bit of math and figure out what's the center.

155
00:10:00,540 --> 00:10:06,240
Now I've got a header here I'm just playing the country the city the population the price line of dashes

156
00:10:06,750 --> 00:10:08,460
and then I'm just lining up the data.

157
00:10:08,610 --> 00:10:12,340
So I've got all the countries Colombia Brazil Chile Argentina.

158
00:10:12,600 --> 00:10:17,760
The cities within the countries the population of the cities it's right just to fight here in this field

159
00:10:18,150 --> 00:10:24,360
as well as the price which is right justified and I've got the two decimal digits displaying.

160
00:10:24,540 --> 00:10:26,660
OK so that's it.

161
00:10:26,660 --> 00:10:28,240
Good luck with this one.

162
00:10:28,250 --> 00:10:29,110
Again this is this.

163
00:10:29,110 --> 00:10:33,350
This project is this little challenge is more than just formatting.

164
00:10:33,380 --> 00:10:37,610
I really want you to understand the structures and how you access those structures using the vectors

165
00:10:37,610 --> 00:10:39,200
within the structures.

166
00:10:39,200 --> 00:10:43,550
It's really simple once you get it and it's really powerful be able to use those structures that have

167
00:10:43,550 --> 00:10:48,320
those vectors of structures within them very powerful very easy to use.

168
00:10:48,320 --> 00:10:50,470
You saw how easy it was to declare the data.

169
00:10:50,840 --> 00:10:51,860
OK so that's it.

170
00:10:51,860 --> 00:10:53,300
Good luck with the challenge.

171
00:10:53,510 --> 00:10:55,580
I'll see you on the other side in the solution.

172
00:10:55,580 --> 00:10:56,620
Don't rush through this.

173
00:10:56,620 --> 00:10:57,860
Take your time.

174
00:10:57,890 --> 00:11:00,540
Once this challenge is over we'll start working with files.
