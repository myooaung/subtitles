WEBVTT
1
00:00:05.200 --> 00:00:09.580
Hello everyone welcome to the section 13 challenge.

2
00:00:09.820 --> 00:00:11.890
Congratulations on finishing up this section.

3
00:00:11.890 --> 00:00:17.480
This section was long and had a lot of information some of it pretty easy some of it not so easy.

4
00:00:17.500 --> 00:00:21.610
So now we're at the challenge and we want to do here is we want to apply some of the things that we've

5
00:00:21.610 --> 00:00:22.160
learned.

6
00:00:22.330 --> 00:00:24.300
Obviously we're not going to do everything that we've learned.

7
00:00:24.310 --> 00:00:27.700
And one challenge project that would make it a very complex project.

8
00:00:27.700 --> 00:00:32.880
But we want to model some objects we want to model other objects in terms of those objects.

9
00:00:32.890 --> 00:00:38.500
We want to be about call methods and break up our program into separate files so that we can manage

10
00:00:38.500 --> 00:00:39.140
it easily.

11
00:00:39.280 --> 00:00:42.070
So let's talk about the challenge for this challenge.

12
00:00:42.070 --> 00:00:46.920
We're going to develop the foundation for a program from movie fanatics and what we want to do is they

13
00:00:46.930 --> 00:00:50.860
want to keep track of the movies they've watched and how many times they've watched each movie.

14
00:00:50.860 --> 00:00:53.650
So the program has to support the following.

15
00:00:53.650 --> 00:00:59.320
We're going to have a class called Movie Now this model's a single movie which includes the movie's

16
00:00:59.320 --> 00:01:03.160
name the movie's rating and how many times we've watched the movie.

17
00:01:03.250 --> 00:01:07.670
Of course we can add fields to this like the rating you rating for the movie.

18
00:01:07.690 --> 00:01:11.530
So we're like one two three four five depending on how much you like it.

19
00:01:11.590 --> 00:01:15.650
Also a note maybe a little comment area that you could type information about the movie.

20
00:01:15.730 --> 00:01:17.270
All kinds of information maybe.

21
00:01:17.290 --> 00:01:19.790
Who the leading star of the movie is and so forth.

22
00:01:19.900 --> 00:01:23.080
You get the idea but at a minimum this is what we're going to do.

23
00:01:23.080 --> 00:01:29.110
Just the movie's name the movie's rating which would be GBG P.G. 13 or are and how many have watched

24
00:01:29.200 --> 00:01:30.290
the movie.

25
00:01:30.340 --> 00:01:36.590
We're also going to model a collection of movies and that's what the movie's class does.

26
00:01:36.630 --> 00:01:40.920
I notice this is plural because it's modeling a collection of movie objects.

27
00:01:40.970 --> 00:01:43.520
We're going to model it with a vector.

28
00:01:43.640 --> 00:01:51.600
Now obviously the movie's class needs to know about the movie since it is a collection of movie objects.

29
00:01:51.620 --> 00:01:55.080
However our main driver should only interact with the movie's class.

30
00:01:55.190 --> 00:01:58.190
So it's going to create a movie's object and work with that.

31
00:01:58.220 --> 00:02:02.120
So here's a simple example of what Maine could do.

32
00:02:02.180 --> 00:02:08.030
So we're going to create movies object then I'm going to ask that movies object to add a movie by providing

33
00:02:08.030 --> 00:02:10.580
the movie's name the rating and the watch count.

34
00:02:11.240 --> 00:02:16.910
I could ask the movies object to increment the watch count for a specific movie given its name and I

35
00:02:16.910 --> 00:02:20.730
could also ask the movie's objects to display all the movies that it has.

36
00:02:20.840 --> 00:02:25.150
Now obviously the movie's class has a bunch of movies in it.

37
00:02:25.160 --> 00:02:29.530
So in that case it could just as each movie had to spoil yourself despite yourself despite yourself

38
00:02:29.540 --> 00:02:30.960
and that's kind of what we're going to do.

39
00:02:31.340 --> 00:02:36.720
Now additionally we need to have a little bit of logic here so that we don't have duplicate movies.

40
00:02:36.830 --> 00:02:42.320
So if we try to add a movie whose name is already in the movie's collection we should display an error

41
00:02:42.320 --> 00:02:43.440
to the user.

42
00:02:44.150 --> 00:02:49.040
And if we try to increment the watch to count for a movie whose name is not in the movie collection

43
00:02:49.220 --> 00:02:51.760
we should also this planar to the is freak.

44
00:02:51.770 --> 00:02:59.840
I've created a basic shell and that basic shell is right here in the section 13 challenge project movie

45
00:03:00.080 --> 00:03:05.640
and Main have been fully implemented for you with hametz movies has not.

46
00:03:05.870 --> 00:03:11.000
So the idea here is that you would go into the movies that see and in the movies dark age and I'll talk

47
00:03:11.000 --> 00:03:14.330
about the structure in a second and implement those.

48
00:03:14.360 --> 00:03:16.960
Now the shell is there so the Stubb's are all there.

49
00:03:16.970 --> 00:03:20.620
Just look for the places where I write you implement this.

50
00:03:20.720 --> 00:03:29.090
The other option is don't use any of my stuff do it yourself just go based on this description as well

51
00:03:29.090 --> 00:03:33.650
as the main because the main the main gives you a little bit of insight into the structure and then

52
00:03:33.650 --> 00:03:36.020
implement movie C-p movies.

53
00:03:36.060 --> 00:03:42.530
C.P the H falls all that stuff yourself depending on how comfortable you feel with C++ right now if

54
00:03:42.540 --> 00:03:43.880
you're a beginner.

55
00:03:43.920 --> 00:03:48.920
Just start out with the show that I'm giving if you feel more comfortable and you've a little bit more

56
00:03:48.920 --> 00:03:51.000
advanced then just try it on your own.

57
00:03:51.350 --> 00:03:53.630
OK so how are we going to structure a project.

58
00:03:53.630 --> 00:03:58.120
Well we're going to have different files we want to be able to separate our files.

59
00:03:58.220 --> 00:04:03.620
So this is what it's going to look like we're going to have movie Die age that's an include file that

60
00:04:03.620 --> 00:04:06.650
has the specification for a movie class.

61
00:04:06.650 --> 00:04:10.890
And again remember a movie is a model of a single movie.

62
00:04:11.120 --> 00:04:16.640
Then we've got movie CBP which is our implementation just like we've seen before.

63
00:04:16.640 --> 00:04:23.450
I've got movies that age which is our include file for the movies class specification and then movies

64
00:04:23.450 --> 00:04:25.190
that C.P is the implementation.

65
00:04:25.190 --> 00:04:30.620
And then finally we have a main TPP that just has the main driver that creates the movie's object and

66
00:04:30.680 --> 00:04:33.440
adds movies to it increments counts and displays.

67
00:04:33.740 --> 00:04:34.040
OK.

68
00:04:34.050 --> 00:04:37.460
So again this program might sound simple it's not.

69
00:04:37.610 --> 00:04:39.280
It's not trivial for sure.

70
00:04:39.350 --> 00:04:44.390
It's definitely not trivial if you try to get 100 percent on your own but it's a fun project to do and

71
00:04:44.390 --> 00:04:46.460
that will really help you with the coding.

72
00:04:46.460 --> 00:04:51.710
Now what I want to do is I want to show you the main and I've included the main down here in the description

73
00:04:51.740 --> 00:04:53.450
but I'm going to show it to you in the source code.

74
00:04:53.450 --> 00:04:54.560
It's the same thing.

75
00:04:54.860 --> 00:04:57.590
And I'm going to show you the main for the challenge solution here.

76
00:04:57.770 --> 00:05:03.920
So I'm going to double click on that main C.P. file and you can see that there is to help or functions

77
00:05:03.920 --> 00:05:06.480
that I've already written and the function prototypes here.

78
00:05:06.560 --> 00:05:11.690
And the reason I wrote those is because when I asked the movie's object to add a movie and that movie

79
00:05:11.690 --> 00:05:14.820
is already there I need to display an error message right.

80
00:05:14.930 --> 00:05:16.610
So I have all that if else logic.

81
00:05:16.610 --> 00:05:21.030
So if the movie is not there at it if it is give me an error message that kind of thing.

82
00:05:21.050 --> 00:05:26.960
So I wanted to wrap that up in a helper function so that my main looks really nice like this just add

83
00:05:26.960 --> 00:05:32.120
movie rather than have all that else print up logic all in the main which kind of gets really ugly and

84
00:05:32.120 --> 00:05:33.060
hard to follow.

85
00:05:33.080 --> 00:05:35.760
So but let's walk through this really quickly here.

86
00:05:35.990 --> 00:05:42.410
Here's my main and I'm going to create a movies object that's the collection and then I'm going to ask

87
00:05:42.410 --> 00:05:45.330
that movie's object to display its movies.

88
00:05:45.620 --> 00:05:50.360
Obviously there are no movies in there now so it should display something like No movies or have no

89
00:05:50.360 --> 00:05:52.850
movies yet or something something meaningful.

90
00:05:53.070 --> 00:05:58.250
Then what I want to do is I want to call add movie now and movies this helper function that I created

91
00:05:58.250 --> 00:06:00.300
right here and to see the comment right here.

92
00:06:00.350 --> 00:06:06.300
So I'm going to call add movie I'm going to pass in my movies right as a reference.

93
00:06:06.500 --> 00:06:08.690
I'm going to pass in the information for the movie.

94
00:06:08.680 --> 00:06:14.850
So in this case I want to add big which is the movie's name P.G. 13 and I've watched it twice.

95
00:06:14.960 --> 00:06:21.740
At that point this function here gets called and notice what it's doing it's asking the movies object

96
00:06:21.890 --> 00:06:23.650
to add the movie.

97
00:06:23.650 --> 00:06:27.200
And so at this point it's really delegating that behavior to the movies object.

98
00:06:27.200 --> 00:06:31.880
And again the only reason this function is here right here is to help us with that error checking so

99
00:06:31.880 --> 00:06:35.380
we don't clutter up all the Mankad that's it.

100
00:06:35.410 --> 00:06:39.880
Now we're going to add another movie star wars now going to add a third movie Cinderella.

101
00:06:40.330 --> 00:06:43.830
So if I run this at this point this is what I've got.

102
00:06:44.860 --> 00:06:48.880
You can see movies over so we can kind of line them up.

103
00:06:49.150 --> 00:06:54.400
Here's my movies and I'm going to say display the movies and it's going to say sorry no movies to display.

104
00:06:54.460 --> 00:06:57.770
Now I'm going to add a movie at a movie and add a movie.

105
00:06:58.000 --> 00:07:01.290
And this is going to say big added Star Wars added Cinderella added.

106
00:07:01.280 --> 00:07:03.400
And that message is coming right from here.

107
00:07:04.580 --> 00:07:07.550
OK so now I want to display the movies.

108
00:07:07.570 --> 00:07:11.500
So what I can do is I just come at this line out we'll take it one step at a time but we will really

109
00:07:11.500 --> 00:07:12.930
understand what's going on.

110
00:07:12.940 --> 00:07:16.750
Someone asked them my movies objects to display itself.

111
00:07:16.780 --> 00:07:20.920
Well it's going to loop through its collection and print out all the movie objects that it has.

112
00:07:20.920 --> 00:07:23.600
So in this case we've had a big Star Wars in Cinderella.

113
00:07:23.680 --> 00:07:25.210
So that's what I expect to print out.

114
00:07:25.210 --> 00:07:26.370
So let's run this.

115
00:07:26.710 --> 00:07:33.520
And here you see again that we added Big Star Wars and Cinderella like before now when we call the display

116
00:07:33.520 --> 00:07:37.750
method of the my movies class this is what I'm going to get.

117
00:07:37.810 --> 00:07:39.170
Big Star Wars and Cinderella.

118
00:07:39.190 --> 00:07:41.250
It's going to print out those three movies.

119
00:07:41.740 --> 00:07:42.290
OK.

120
00:07:42.460 --> 00:07:44.110
So it's really simple as that.

121
00:07:44.140 --> 00:07:50.120
And let's just add a couple of more here and display those two.

122
00:07:50.120 --> 00:07:54.890
Now this is a little bit different now because I'm adding my movie and I'm adding Cinderella while I've

123
00:07:54.890 --> 00:07:56.450
already added Cinderella.

124
00:07:56.450 --> 00:07:59.700
So I expect this to tell me sorry it already exists.

125
00:07:59.840 --> 00:08:02.520
Then I want to add ice age which should be OK.

126
00:08:02.630 --> 00:08:04.440
And then I want to print those out again.

127
00:08:04.490 --> 00:08:07.450
I should only see Cinderella once right if I see Cinderella twice.

128
00:08:07.450 --> 00:08:09.120
Then there's something wrong with my code.

129
00:08:09.290 --> 00:08:15.850
So let's run this and you can see here big added Star Wars added Cinderella added just like we did before.

130
00:08:16.880 --> 00:08:19.220
We're just playing those three movies now.

131
00:08:19.220 --> 00:08:21.640
Cinderella already exists so we didn't get it again.

132
00:08:21.890 --> 00:08:25.940
We did at Ice Age and now when we display all four of the movies now that's what we expect we don't

133
00:08:25.940 --> 00:08:27.650
expect to see Cinderella twice.

134
00:08:28.870 --> 00:08:29.470
OK.

135
00:08:29.660 --> 00:08:31.990
So couple more things.

136
00:08:32.820 --> 00:08:38.340
We can't obviously when we watch a movie again and this doesn't store this information on disk or on

137
00:08:38.340 --> 00:08:40.540
file or anything what gives while that stuff later.

138
00:08:40.560 --> 00:08:43.590
But right now it's just keeping it all in memory.

139
00:08:43.590 --> 00:08:46.190
So in this case I'm going to say increment watched my movie.

140
00:08:46.190 --> 00:08:52.080
So what I'm saying here is I want to increment the watch count for big and I want to incrementally watch

141
00:08:52.200 --> 00:08:53.460
out for ice age.

142
00:08:53.650 --> 00:08:58.770
You remember the watch out for big two and four ice age was 12.

143
00:08:58.800 --> 00:09:03.240
So now when I display my movies I would expect to see three and 13 right.

144
00:09:03.240 --> 00:09:05.530
So let's try that out.

145
00:09:05.580 --> 00:09:09.110
So big was to Ice Age was 12.

146
00:09:09.120 --> 00:09:14.340
Now biggest three ice age is 13 just like what we expect.

147
00:09:15.220 --> 00:09:20.640
And now the last test case here and this is by no means a lot of test cases but it's enough to get you

148
00:09:20.650 --> 00:09:21.460
started.

149
00:09:21.460 --> 00:09:25.360
Now what I want to do is I want to increment the number of times that I've watched this movie called

150
00:09:25.420 --> 00:09:27.500
X X X and that could be anything.

151
00:09:27.670 --> 00:09:29.570
So long as it's not in the collection.

152
00:09:29.710 --> 00:09:34.100
Obviously it's not in the collection so I can't imagine I can't increment it right makes no sense.

153
00:09:34.120 --> 00:09:37.110
So I would expect some sign of some sort of error message there.

154
00:09:37.180 --> 00:09:39.390
So let's run this one last time.

155
00:09:39.730 --> 00:09:49.050
And what we get is that last statement X X X not found so obviously there's no movie called x x x so

156
00:09:49.240 --> 00:09:52.150
I could not have it incremented the watch out for it.

157
00:09:52.200 --> 00:09:54.560
OK so that's a simple run you get the idea.

158
00:09:54.570 --> 00:09:59.350
Notice there's no user menu where you can say select one to add a movie select two to delete a movie.

159
00:09:59.370 --> 00:10:03.320
We could certainly add that later but we need to get this part working first.

160
00:10:03.330 --> 00:10:10.740
So now let's take a look at the movie h file which is our Hetter and there it is right here.

161
00:10:10.960 --> 00:10:13.150
This model is a movie with the following attributes.

162
00:10:13.180 --> 00:10:14.820
And you can see I've already implemented this.

163
00:10:14.830 --> 00:10:19.010
I've got a name a radio and a watch which has strings and integers.

164
00:10:19.150 --> 00:10:22.800
I've got a constructor that expects all three of those attributes.

165
00:10:22.810 --> 00:10:26.140
I've got a copy constructor that were just empty.

166
00:10:26.140 --> 00:10:30.550
I've got a destructor again that's empty that we're not using any raw pointers so we really don't need

167
00:10:30.550 --> 00:10:31.500
these.

168
00:10:31.750 --> 00:10:37.030
And then I've implemented the basic getters and setters set name get name and so forth.

169
00:10:37.030 --> 00:10:39.090
Notice that these are Konst correct.

170
00:10:39.130 --> 00:10:46.940
So my get names are all Konst my get functions I should say are all Konst as well as my display.

171
00:10:47.050 --> 00:10:51.930
So I don't want my display modifying anything so I may make that a Konst method.

172
00:10:52.450 --> 00:10:53.170
That's it.

173
00:10:53.170 --> 00:10:54.710
Now let's look at movies.

174
00:10:54.850 --> 00:10:56.390
Which is the implementation.

175
00:10:56.470 --> 00:11:01.060
And you can see here I'm implementing the constructor as an initializer list.

176
00:11:01.240 --> 00:11:05.140
Here's my copy constructor which is simply delegating to the constructor.

177
00:11:05.140 --> 00:11:10.210
I could have simply used the default that I get for free from the compiler but I decided to implement

178
00:11:10.210 --> 00:11:11.270
that explicitly.

179
00:11:11.360 --> 00:11:16.570
So again just to get a little bit more practice my destructor is here doesn't do anything.

180
00:11:17.020 --> 00:11:23.170
And here is the display method to display method just displays the name the rating and the watched for

181
00:11:23.200 --> 00:11:25.000
each one of those objects.

182
00:11:25.150 --> 00:11:25.990
That's it.

183
00:11:25.990 --> 00:11:32.180
Now let's take a look at movies that age here's the specification for my movies class.

184
00:11:32.260 --> 00:11:39.490
And again movies is a collection of movie objects and there is my vector.

185
00:11:39.760 --> 00:11:42.430
I have a constructor I have a destructor.

186
00:11:44.020 --> 00:11:49.810
I have the add movie method which you have to implement and I have the increment watched method which

187
00:11:49.810 --> 00:11:52.560
you have to implement as well as the display method.

188
00:11:52.570 --> 00:11:55.970
So if we look at DCP files those are all in there right.

189
00:11:55.970 --> 00:11:59.660
I have no code in my constructor right now a default constructor.

190
00:11:59.800 --> 00:12:08.890
I've got no code in my destructor and there is my ADD movie right now which is returning false.

191
00:12:08.890 --> 00:12:11.050
You need to implement the logic in this method.

192
00:12:11.170 --> 00:12:15.530
And is my increment watched which again returns false.

193
00:12:15.530 --> 00:12:19.370
And then finally we have the display method which displays those objects.

194
00:12:19.410 --> 00:12:24.490
Obviously you all you want to do here just loop through that collection and display each movie object

195
00:12:24.810 --> 00:12:28.210
and remember each movie knows how to display itself.

196
00:12:28.210 --> 00:12:33.040
So just call that movie objects dot display method OK.

197
00:12:33.040 --> 00:12:37.240
So here take your time try to understand the logic.

198
00:12:37.410 --> 00:12:39.040
If you have any questions let me know.

199
00:12:39.270 --> 00:12:42.380
And good luck with this when you're done take out.

200
00:12:42.390 --> 00:12:44.160
Check out the challenge solution.

201
00:12:44.160 --> 00:12:47.730
Obviously if you're doing this from scratch my solution is going to be different from yours.

202
00:12:47.760 --> 00:12:50.420
But good luck with it and most of all have fun.
