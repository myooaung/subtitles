WEBVTT
1
00:00:05.490 --> 00:00:11.500
In this video we'll do a quick overview of looping in general and specifically in C++.

2
00:00:11.940 --> 00:00:15.170
Looping is also called iteration or repetition.

3
00:00:15.450 --> 00:00:18.520
It's the third basic building block of programming.

4
00:00:18.870 --> 00:00:24.690
After this section of the course you have all you need to begin to solve very complex problems using

5
00:00:24.690 --> 00:00:31.060
sequence selection and iteration in this course we're covering C++.

6
00:00:31.110 --> 00:00:36.180
However all programming languages must support sequence selection and iteration.

7
00:00:36.210 --> 00:00:40.980
Once you understand these concepts completely then it's just a matter of picking up the syntax of another

8
00:00:40.980 --> 00:00:46.080
programming language and you'll be able to implement solutions to problems in those languages as well.

9
00:00:46.900 --> 00:00:52.510
Loops allow the execution of a statement or block of statements repeatedly and they're made up of two

10
00:00:52.510 --> 00:00:53.520
sections.

11
00:00:53.530 --> 00:00:56.880
First the loop condition which determines when we iterate.

12
00:00:56.890 --> 00:00:58.420
And when we don't.

13
00:00:58.420 --> 00:01:00.060
Second is the loop body.

14
00:01:00.100 --> 00:01:03.660
That's the statement or block of statements that will be repeated.

15
00:01:03.670 --> 00:01:04.420
That's it.

16
00:01:04.450 --> 00:01:06.670
Conceptually it's very simple.

17
00:01:06.670 --> 00:01:10.310
Let's look at a few use cases for looping.

18
00:01:10.380 --> 00:01:13.230
Here's some typical use cases for looping.

19
00:01:13.230 --> 00:01:17.170
We want to execute a loop or repeat statements a specific number of times.

20
00:01:17.190 --> 00:01:23.460
For example we want to do something 10 times where we ask the user how many times they wish to do something.

21
00:01:23.490 --> 00:01:28.470
Another use case is iterating one time for each element in a collection.

22
00:01:28.470 --> 00:01:34.100
So suppose we have items in an array or vector and we want to process each of those items.

23
00:01:34.140 --> 00:01:37.590
Other times we want to loop until a specific condition becomes true.

24
00:01:37.800 --> 00:01:40.160
So we loop until we see a specific value.

25
00:01:40.200 --> 00:01:43.700
Then we stop of course we can also loop forever.

26
00:01:43.920 --> 00:01:48.630
This isn't as common as the other use cases but operating systems are an example of programs that loop

27
00:01:48.630 --> 00:01:51.740
forever executing system processes.

28
00:01:51.750 --> 00:01:56.180
There are many other use cases and variations of these existing use cases.

29
00:01:56.610 --> 00:01:59.130
Let's look at the C++ looping constructs.

30
00:01:59.130 --> 00:02:04.160
Now C++ has three main looping structures.

31
00:02:04.200 --> 00:02:05.110
The for loop.

32
00:02:05.310 --> 00:02:08.350
The while loop and the do while loop.

33
00:02:08.370 --> 00:02:12.350
The for loop has arranged base variant which is really great.

34
00:02:12.360 --> 00:02:14.200
First let's talk about the for loop.

35
00:02:14.580 --> 00:02:18.900
The for loop is typically used when you want to iterate a specific number of times.

36
00:02:18.900 --> 00:02:25.110
For example you want to loop 10 times or end times where end is determined by the program.

37
00:02:25.190 --> 00:02:30.080
The range based for loop makes it really easy to iterate through a range of items or through the elements

38
00:02:30.080 --> 00:02:33.860
of a collection with arrays vectors and other collections.

39
00:02:33.860 --> 00:02:41.370
This is a great loop to use the while loop iterates while a specific condition remains true when the

40
00:02:41.370 --> 00:02:42.850
condition becomes false.

41
00:02:42.870 --> 00:02:46.150
We terminate the loop in the case of the While loop.

42
00:02:46.150 --> 00:02:49.810
The condition is checked at the beginning of every iteration.

43
00:02:50.050 --> 00:02:52.280
The do while loop is similar to the While loop.

44
00:02:52.420 --> 00:02:58.270
Except that the condition is checked after each iteration with only these basic loops we can implement

45
00:02:58.360 --> 00:03:00.880
any iteration pattern we want.

46
00:03:00.880 --> 00:03:03.690
All programming languages have loop constructs.

47
00:03:03.820 --> 00:03:06.620
The C++ loops are clear and concise.

48
00:03:06.940 --> 00:03:09.730
Let's go through the C++ loops one at a time.

49
00:03:09.760 --> 00:03:11.620
Let's start with the for loop and the next video.
