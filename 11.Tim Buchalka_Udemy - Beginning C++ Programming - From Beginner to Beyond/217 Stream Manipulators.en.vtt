WEBVTT
1
00:00:05.640 --> 00:00:12.910
In this video we'll learn about some of the C++ stream manipulators C++ streams have many useful member

2
00:00:12.910 --> 00:00:16.240
methods that can be used to control formatting.

3
00:00:16.350 --> 00:00:22.630
There are methods that work on input and output streams but formatting output is much more common and

4
00:00:22.630 --> 00:00:28.120
important concept to understand is that when we manipulate a stream for formatting sometimes the settings

5
00:00:28.120 --> 00:00:31.190
we make will be set for the remainder of the program.

6
00:00:31.330 --> 00:00:37.630
Other times they'll only affect the next object placed on the stream and sometimes her effect is immediate.

7
00:00:37.630 --> 00:00:42.820
When we go over the individual formatting method to manipulators I'll show you the fecht each one has

8
00:00:43.060 --> 00:00:45.430
as well as how long the effect lasts.

9
00:00:45.430 --> 00:00:51.580
Most of the stream formatters come in two versions a method version and a manipulator version the method

10
00:00:51.580 --> 00:00:55.640
version is simply a method call that you use with a stream object.

11
00:00:55.720 --> 00:00:58.380
For example see outdoors with 10.

12
00:00:58.570 --> 00:01:00.820
I'll explain what this does in a later section.

13
00:01:00.820 --> 00:01:06.820
But for now you can see the syntax it's calling the width method on the C out object.

14
00:01:06.820 --> 00:01:12.370
There's also a manipulator version which is designed to be used in line as a stream insertion.

15
00:01:12.400 --> 00:01:19.240
In this case set w 10 as you probably guessed the manipulator versions are simply overloading the insertion

16
00:01:19.240 --> 00:01:25.770
operator to make this easier to use to use the manipulators you must include IO manip.

17
00:01:26.020 --> 00:01:31.030
The code will write will focus mainly on manipulator usage but I'll also show you how to use the methods

18
00:01:32.760 --> 00:01:34.000
in the next few videos.

19
00:01:34.000 --> 00:01:37.450
I will go over some of the most commonly used stream manipulators.

20
00:01:37.590 --> 00:01:38.810
Here's a preview.

21
00:01:39.240 --> 00:01:42.110
We'll first start by looking at formatting boolean types.

22
00:01:42.150 --> 00:01:48.420
We've already seen this used in the course and a few places we can use bool Alpha and noble Alpha to

23
00:01:48.420 --> 00:01:51.360
display boolean values as either the strings.

24
00:01:51.390 --> 00:01:57.900
True or false or the integers 1 and 0 then we'll look at formatting integer types.

25
00:01:57.960 --> 00:02:04.820
These manipulators allow us to display integers base 10 base 16 or base 8 as well as to decide whether

26
00:02:04.830 --> 00:02:09.480
we want the base prefix to show and in uppercase or lowercase.

27
00:02:09.480 --> 00:02:14.960
We can also decide if we want positive numbers to show the plus symbol in front of the number.

28
00:02:15.170 --> 00:02:17.670
Then we'll switch over to floating point numbers again.

29
00:02:17.750 --> 00:02:20.750
We've already seen some of these manipulators used in the course.

30
00:02:20.900 --> 00:02:26.720
We can use fixpoint we can set the precision we can show the number in scientific notation format.

31
00:02:26.900 --> 00:02:33.260
And again we can decide whether we want trailing zeros printed and whether we want the plus symbol displayed.

32
00:02:33.470 --> 00:02:39.140
Then we'll learn how to output numbers and strings in fields of fixed width and we can see how we can

33
00:02:39.150 --> 00:02:42.600
left or right justify them within that field.

34
00:02:42.620 --> 00:02:47.720
We'll also be able to fill empty space within the field to a specific character.

35
00:02:47.730 --> 00:02:54.600
Finally there are several other formatters they can be very useful and we've already seen and used flush

36
00:02:54.600 --> 00:02:59.490
can be useful when we want to be sure that we flush out any stream buffers but it doesn't add a new

37
00:02:59.490 --> 00:03:01.800
line like inline does.

38
00:03:01.800 --> 00:03:05.940
The last few we really won't talk about much but I'm including them here for your reference.

39
00:03:05.940 --> 00:03:11.640
Skip whitespace no skip whitespace and whitespace are typically used with input streams.

40
00:03:11.790 --> 00:03:16.570
When you have very specific use cases about dealing with whitespace.

41
00:03:17.070 --> 00:03:20.230
OK so in the next video we'll start with the boolean formatters.

42
00:03:20.230 --> 00:03:21.080
I'll see you there.
