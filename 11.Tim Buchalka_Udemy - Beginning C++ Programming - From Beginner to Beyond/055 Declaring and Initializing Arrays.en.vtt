WEBVTT
1
00:00:05.550 --> 00:00:10.380
This video will look at the syntax for declaring an initialising a race.

2
00:00:10.590 --> 00:00:13.600
The syntax for an array declaration is very simple.

3
00:00:13.600 --> 00:00:16.670
First we write the type of each element in the array.

4
00:00:16.680 --> 00:00:19.710
This is followed by the name of the array variable.

5
00:00:19.770 --> 00:00:25.240
Then we provide square brackets which is the array indexing operator and then the square brackets.

6
00:00:25.240 --> 00:00:28.330
We provide the size that we want the array to be.

7
00:00:28.320 --> 00:00:33.750
Remember this size is fixed so the compiler must know the size of whatever in the square brackets at

8
00:00:33.750 --> 00:00:34.890
compile time.

9
00:00:34.920 --> 00:00:36.930
So this can be a constant literal.

10
00:00:36.930 --> 00:00:39.870
It can be a declared constant or constant expression.

11
00:00:40.600 --> 00:00:43.100
In the first example we're declaring an array named.

12
00:00:43.110 --> 00:00:45.800
Test scores of five integers.

13
00:00:45.800 --> 00:00:50.750
The second example declares an array named high scores per level of 10 integers.

14
00:00:51.260 --> 00:00:56.920
And the third example declares an array named high temperatures of 365 doubles.

15
00:00:56.930 --> 00:01:01.850
Notice that days and years are declared constant so the compiler knows its value.

16
00:01:01.850 --> 00:01:06.440
Also note that in all three cases the arrays have not been initialized.

17
00:01:06.440 --> 00:01:10.100
This means that the contents of the array elements could be anything.

18
00:01:10.100 --> 00:01:13.730
Best practice is to always initialize arrays when you declared them.

19
00:01:13.730 --> 00:01:15.560
Let's see how we can do that.

20
00:01:15.560 --> 00:01:19.960
We can also initialize raise when we declare them and it's good practice to do so.

21
00:01:19.970 --> 00:01:23.470
The syntax is similar to when we initialize primitive variables.

22
00:01:23.480 --> 00:01:27.140
The syntax is similar to when we initialize primitive variables.

23
00:01:27.140 --> 00:01:33.740
We include an initialization list after the declaration and this list we can provide as many initial

24
00:01:33.740 --> 00:01:34.840
errors just as we like.

25
00:01:34.880 --> 00:01:37.760
Separated by commas in the first example.

26
00:01:37.760 --> 00:01:41.270
Test scores is initialized to 100 95.

27
00:01:41.350 --> 00:01:47.840
99 97 and 88 the initialization works as you would expect.

28
00:01:47.940 --> 00:01:51.840
The test scores array element at index 0 is initialized to 100.

29
00:01:51.930 --> 00:01:55.310
The element at index 1 to 95 and so on.

30
00:01:55.760 --> 00:02:01.680
In the second example you see that we declared an array named high scores per level of 10 integers but

31
00:02:01.680 --> 00:02:06.520
we only provided two values in the initializer list 3 and 5.

32
00:02:06.600 --> 00:02:12.990
In this case the first two elements of the array are initialized at 3 and 5 respectively and the remaining

33
00:02:13.050 --> 00:02:15.610
8 array elements will be initialized to zero.

34
00:02:15.660 --> 00:02:20.720
In the third example all of the elements of the array high temperatures are initialized to zero.

35
00:02:20.820 --> 00:02:24.590
This is a very handy initialiser that's used very often.

36
00:02:24.660 --> 00:02:26.630
The final example is a little bit different.

37
00:02:26.790 --> 00:02:31.850
In this case I didn't provide any number for the size of the array inside the square brackets.

38
00:02:32.070 --> 00:02:36.960
Instead I'm letting the compiler determine the size of the array based on the number of elements in

39
00:02:36.960 --> 00:02:38.940
the initializer list.

40
00:02:38.940 --> 00:02:41.910
This form is also often seen in this case.

41
00:02:41.910 --> 00:02:47.130
Another array will be of size 5 integers and they'll each be initialized from 1 to 5.

42
00:02:47.550 --> 00:02:52.530
As you can see the syntax for declaring and initializing arrays is very straight forward in the next

43
00:02:52.530 --> 00:02:56.100
video will look at the syntax for accessing individual array elements.
