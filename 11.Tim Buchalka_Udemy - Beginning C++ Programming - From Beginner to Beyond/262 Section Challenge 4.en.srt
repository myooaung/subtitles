1
00:00:05,570 --> 00:00:10,030
Hello welcome to the Section 20 challenge for video.

2
00:00:10,130 --> 00:00:14,450
You've already seen before we did this challenge in set in challenge one.

3
00:00:14,480 --> 00:00:18,590
This is where we decided whether a string was a palindrome or not.

4
00:00:18,860 --> 00:00:23,000
We use the deck and challenge one what we're going to use here and challenge for is we're going to use

5
00:00:23,000 --> 00:00:26,770
a stack and a cue to do the same thing.

6
00:00:27,140 --> 00:00:29,960
It's actually exactly the same main driver.

7
00:00:29,960 --> 00:00:34,160
The only difference is your function is going to be different obviously because it has to use a stack

8
00:00:34,160 --> 00:00:36,040
in a cue to solve the problem.

9
00:00:36,230 --> 00:00:41,590
What I would ask you to do is go back to challenge 1 and play the description video where I go into

10
00:00:41,660 --> 00:00:44,900
what a palindrome is and so forth rather than repeat it here.

11
00:00:45,020 --> 00:00:49,010
But if you're here already and you don't want to go over there I'll do a real quick review.

12
00:00:49,040 --> 00:00:54,230
A palindrome is a string that reads the same backwards or forwards so we have a couple of examples here

13
00:00:54,410 --> 00:00:55,040
madam.

14
00:00:55,070 --> 00:00:56,770
Bob Tutte radar.

15
00:00:56,810 --> 00:01:00,290
So no matter how you read it from the left or from the right it's the same word.

16
00:01:00,800 --> 00:01:04,730
And we can have entire phrases that are palindromes as well.

17
00:01:04,730 --> 00:01:12,020
So a Toyota is a Toyota a Santa NASA a man a plan a cat a ham a yak yam a hat a canal Panama.

18
00:01:12,190 --> 00:01:17,390
It's amazing that this actually is a palindrome for palindrome phrases like this what we're going to

19
00:01:17,390 --> 00:01:22,340
do is we're going to remove all the spaces and we're going to remove all the special characters and

20
00:01:22,340 --> 00:01:23,950
we're going to make those upper case.

21
00:01:23,960 --> 00:01:30,850
So in the case of a Santa at NASA what we're going to do is we're going to create that string from it.

22
00:01:31,070 --> 00:01:34,470
You can see it says a Santa at NASA right in there but no spaces.

23
00:01:34,470 --> 00:01:35,670
Everything is uppercase.

24
00:01:35,840 --> 00:01:40,090
And if there were any apostrophes or anything else we're going to get rid of it.

25
00:01:40,370 --> 00:01:46,500
So we're only going to process alpha characters and you can use the CC type header file for that.

26
00:01:46,610 --> 00:01:48,350
That's it.

27
00:01:48,350 --> 00:01:49,470
Good luck with this one.

28
00:01:49,470 --> 00:01:53,910
Like I said go back to challenge one description and I talk a lot more about that.

29
00:01:54,020 --> 00:01:56,940
Actually let me show you a sample run so you don't have to go back there.

30
00:01:56,990 --> 00:02:04,430
I'm going to show you a sample run of my solution here and I'll build and run.

31
00:02:04,610 --> 00:02:09,590
The main driver assure you the code also in the second the main driver has a bunch of test cases that

32
00:02:09,590 --> 00:02:10,420
they run.

33
00:02:10,700 --> 00:02:13,210
All you have to do is write one function.

34
00:02:13,280 --> 00:02:15,680
It's called is palindrome and it returns True or false.

35
00:02:15,680 --> 00:02:18,140
I pass you a string you return true or false.

36
00:02:18,140 --> 00:02:23,960
So in this case a is a palindrome A is palindrome a B A's a palindrome and so forth.

37
00:02:23,960 --> 00:02:29,850
Obviously a b and ABC are not radar and Bob and Anna and avid diva.

38
00:02:29,990 --> 00:02:33,160
And there's a Toyota Toyota Center at NASA.

39
00:02:33,170 --> 00:02:38,960
C++ is also a palindrome because what we're doing is we're removing the plus plus and just using the

40
00:02:38,960 --> 00:02:41,630
capital C we're getting rid of the special characters.

41
00:02:41,630 --> 00:02:47,090
So there are some test cases and here you can see the man the planned the cat and so forth is a palindrome.

42
00:02:47,240 --> 00:02:48,920
You can read it the same both ways.

43
00:02:49,100 --> 00:02:51,380
So that's the the sample run.

44
00:02:51,500 --> 00:02:53,570
And let me show you the main that I'm giving you.

45
00:02:54,610 --> 00:02:58,740
This is the main I'm giving you it's the same exact main that I gave you for challenge one.

46
00:02:58,810 --> 00:03:01,190
Except what I want you to do is I want you to use.

47
00:03:01,210 --> 00:03:02,470
You can see right there.

48
00:03:02,680 --> 00:03:05,110
Use a stack in a cube before we use the deck.

49
00:03:05,170 --> 00:03:07,380
So this will give you a little bit of experience with that.

50
00:03:07,450 --> 00:03:14,390
You can see the main here and all I'm doing in the main is I've got a vector of strings.

51
00:03:14,590 --> 00:03:15,860
And those are my test cases.

52
00:03:15,880 --> 00:03:20,980
I'm just looping through that vector and I'm calling your function is palindrome right here and passing

53
00:03:20,980 --> 00:03:26,050
in the string and you're returning true or false and I'm displaying that it's as simple as that.

54
00:03:26,230 --> 00:03:28,550
Here's the function you have to implement.

55
00:03:28,780 --> 00:03:34,210
It's called is palindrome it expects the string and it returns True False right now just returning false

56
00:03:34,210 --> 00:03:35,350
for everything.

57
00:03:35,350 --> 00:03:37,470
So if you run this right now you're going to get that shot.

58
00:03:37,510 --> 00:03:44,530
Run it right now so you could see what it looks like if I run this guy right now it's going to say fault's

59
00:03:44,530 --> 00:03:47,720
all the way down the line because there's no real logic in that function.

60
00:03:47,860 --> 00:03:50,980
But it all runs and compiles and no worries at all.

61
00:03:51,340 --> 00:03:52,320
So that's it.

62
00:03:52,720 --> 00:03:56,350
If you solve the problem with the deck you kind of know how to approach it.

63
00:03:56,410 --> 00:03:57,900
I'm not going to give you any hints here.

64
00:03:57,910 --> 00:04:03,100
If you have you want a hint or if you have questions please post in the Q&amp;A and I'll be glad to answer

65
00:04:03,100 --> 00:04:04,260
them there.

66
00:04:04,270 --> 00:04:04,500
All right.

67
00:04:04,510 --> 00:04:05,500
So good luck.

68
00:04:05,500 --> 00:04:08,310
I'll see you in the next video and I'll show you my solution.
