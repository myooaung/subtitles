1
00:00:05,460 --> 00:00:11,880
In this section of the Course will learn about exception handling and C++ exception handling is definitely

2
00:00:11,880 --> 00:00:16,560
not a beginner topic but I want it to cover the basics so that you can understand exception handling

3
00:00:16,830 --> 00:00:22,170
and be able to move on to more advanced features in Exception handling as you learn more C++.

4
00:00:22,900 --> 00:00:28,450
We'll talk about what an exception is as well as how we can handle exceptions and C++ then we'll look

5
00:00:28,450 --> 00:00:31,240
at a simple program that has a divide by zero error.

6
00:00:31,330 --> 00:00:36,640
And with that exception handling to it so that we can handle that error once we understand the basics

7
00:00:36,640 --> 00:00:41,230
of exception handling will create a function that throws an exception when something goes wrong within

8
00:00:41,230 --> 00:00:46,300
it and we'll see how to throw an exception from that function and also learn how to catch the exception

9
00:00:46,360 --> 00:00:48,260
outside the function and deal with it.

10
00:00:48,990 --> 00:00:54,300
Obviously when something goes wrong in a program the normal flow of control of that program cannot continue

11
00:00:54,540 --> 00:00:56,100
as if nothing has happened.

12
00:00:56,130 --> 00:01:01,290
So it's very important to understand how exception handling affects the flow of control of your program.

13
00:01:01,380 --> 00:01:06,810
Specifically we'll learn about stack unwinding what it is and how C++ uses it.

14
00:01:06,810 --> 00:01:11,910
Then we'll create our own exception classes so that we have complete control over the exception types

15
00:01:12,090 --> 00:01:13,980
that we throw and handle.

16
00:01:14,070 --> 00:01:19,800
Finally we'll look at the standard exception class hierarchy provided by C++ and we'll look at the types

17
00:01:19,800 --> 00:01:22,680
of exceptions that are already defined in C++.

18
00:01:22,680 --> 00:01:25,330
Let me finish off this section overview with a few thoughts.

19
00:01:25,440 --> 00:01:31,650
Writing exception safe code in C++ is extremely difficult and it's beyond the scope of this course.

20
00:01:31,800 --> 00:01:38,160
In this section I want to introduce you to the basic concepts the syntax and the behavior of C++ exception

21
00:01:38,160 --> 00:01:38,930
handling.

22
00:01:38,940 --> 00:01:42,640
There are several schools of thought when using C++ exception handling.

23
00:01:42,750 --> 00:01:47,640
One is that it should only be used for extremely exceptional conditions conditions that would prevent

24
00:01:47,640 --> 00:01:49,940
your program from continuing.

25
00:01:50,020 --> 00:01:54,040
Another is that it should never be used and then somewhere in the middle is a school of thought that

26
00:01:54,040 --> 00:01:57,870
it should always be used even for not so exceptional situations.

27
00:01:58,060 --> 00:02:01,490
And then of course there's all sorts of opinion in between all of these.

28
00:02:01,840 --> 00:02:08,010
I've worked with C++ code where each of these scenarios was used and they all have advantages and disadvantages.

29
00:02:08,050 --> 00:02:12,380
It really all comes down to how you define what an exception is.

30
00:02:12,460 --> 00:02:18,700
This section of the Course will present a few C++ exception handling best practices but it's very difficult

31
00:02:18,700 --> 00:02:25,390
to establish these best practices in C++ because when and how to use C++ exception handling is such

32
00:02:25,390 --> 00:02:27,020
a hotly debated topic.

33
00:02:27,340 --> 00:02:29,830
OK so let's see what exception handling is all about.
