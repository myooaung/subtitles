1
00:00:05,470 --> 00:00:10,510
In this video we'll learn how we can access class attributes and methods.

2
00:00:10,570 --> 00:00:15,340
Of course we want to create objects from our classes but we also want to be able to use and modify the

3
00:00:15,340 --> 00:00:19,300
objects attributes and call methods for specific objects.

4
00:00:20,190 --> 00:00:22,660
There are two ways to access class members.

5
00:00:22,740 --> 00:00:28,660
We can use the dot operator and we can use the member of pointer operator or the arrow operator.

6
00:00:28,950 --> 00:00:33,570
Remember that some class members may not be accessible since we can hide them we'll see that in the

7
00:00:33,570 --> 00:00:36,170
next video.

8
00:00:36,240 --> 00:00:41,030
We've already seen how we can use the dot operator when we worked with standard vector and string.

9
00:00:41,100 --> 00:00:46,460
If we have an object then we can use the dot operator followed by the class member that we want to reference.

10
00:00:46,470 --> 00:00:47,760
It's as easy as that.

11
00:00:47,910 --> 00:00:53,790
For example if I have an account object named Frank sickout then I can access the balance attribute

12
00:00:53,940 --> 00:01:00,990
with frank account balance and I can deposit a thousand dollars into frank account by writing frank

13
00:01:00,990 --> 00:01:07,830
account dot deposit 1000 in this case we're accessing the deposit method.

14
00:01:07,830 --> 00:01:11,070
Notice that the object is to the left of the dot operator.

15
00:01:11,160 --> 00:01:15,040
So that method will be called on that specific object.

16
00:01:15,120 --> 00:01:17,330
In this case the frank account object

17
00:01:20,470 --> 00:01:25,630
if we have a pointer to an object then we need to dereference the pointer first in order to get to the

18
00:01:25,630 --> 00:01:26,370
object.

19
00:01:26,560 --> 00:01:28,930
And then we can apply the dot operator.

20
00:01:28,990 --> 00:01:30,810
There's two ways we can do that.

21
00:01:30,820 --> 00:01:34,980
Remember in these examples frank account is not an account object.

22
00:01:35,050 --> 00:01:40,190
It is a pointer to an account object which has been dynamically allocated on the heap.

23
00:01:40,210 --> 00:01:46,750
The first way to do this is to explicitly dereference the pointer and then use the dot operator in order

24
00:01:46,750 --> 00:01:48,910
to access the objects class members.

25
00:01:48,910 --> 00:01:54,400
We have to dereference the pointer using the asterisk and then use the dot operator to get the class

26
00:01:54,400 --> 00:02:00,730
member we want but notice that we have to use parentheses here since the dot operator has higher precedence

27
00:02:00,970 --> 00:02:06,010
than the pointer dereference operator and we want to be sure that we dereference first.

28
00:02:06,280 --> 00:02:10,160
While this syntax is explicit it can be a little tedious to read and write.

29
00:02:10,360 --> 00:02:16,480
So C++ provides an alternate operator called the member of pointer operator which is often referred

30
00:02:16,480 --> 00:02:18,630
to as the arrow operator.

31
00:02:18,700 --> 00:02:24,710
It's a dash followed by a greater than sign which looks like an arrow pointing to the right this operator

32
00:02:24,710 --> 00:02:31,040
has the same effect as the first example above it will dereference the pointer and then apply the dot

33
00:02:31,040 --> 00:02:37,310
operator as you can see this operator is very intuitive to read and use and it's used very often.

34
00:02:37,310 --> 00:02:39,740
That's all there is to accessing class members.

35
00:02:39,740 --> 00:02:45,220
Let's head over to the ID and we'll access some class members for the player and account classes.

36
00:02:45,830 --> 00:02:53,390
Ok so I mean the ID and I mean the section 13 workspace The accessing class members project.

37
00:02:53,390 --> 00:02:58,610
What we've got here is we've got the same player class and Account class that we created in the last

38
00:02:58,610 --> 00:03:04,670
video with its attributes and methods just like we did before and what we'd like to do now is access

39
00:03:04,670 --> 00:03:08,600
some of these attributes and methods from within our main.

40
00:03:08,720 --> 00:03:11,180
And we want to access them for specific objects.

41
00:03:11,180 --> 00:03:15,890
Obviously now there's a couple of things we're going to do and we'll discuss them in detail in a few

42
00:03:15,890 --> 00:03:21,830
videos from now but by default all of this information in the class is private and we don't have access

43
00:03:21,830 --> 00:03:22,370
to it.

44
00:03:22,400 --> 00:03:23,840
So let's make it all public.

45
00:03:23,840 --> 00:03:28,560
For this video and in the next video we'll talk about public and private.

46
00:03:28,580 --> 00:03:34,430
So this is what I'm going to do here is say public Colin for the account class and public Colwin for

47
00:03:34,430 --> 00:03:40,250
the player class that says that everything after that access modifier is public which means we've got

48
00:03:40,250 --> 00:03:40,960
access to it.

49
00:03:40,970 --> 00:03:41,910
No worries at all.

50
00:03:42,020 --> 00:03:42,420
OK.

51
00:03:42,500 --> 00:03:45,670
And as I said we'll talk about public and private in the next video.

52
00:03:45,740 --> 00:03:47,620
So what do I do.

53
00:03:47,630 --> 00:03:49,000
Well let's create some objects.

54
00:03:49,010 --> 00:03:54,210
Let's create a player object and let's call it Frank.

55
00:03:54,290 --> 00:03:58,940
And now what I want to do is I want to set Frank's name health and XP.

56
00:03:58,940 --> 00:04:01,660
Those are the attributes for the player class.

57
00:04:01,910 --> 00:04:03,030
Well how do I get to them.

58
00:04:03,140 --> 00:04:05,000
This is where we use the dot operator.

59
00:04:05,000 --> 00:04:12,770
Frank is an object so we can say Frank datt name and we could just set it to Frank or anything else

60
00:04:12,770 --> 00:04:20,510
we'd like we could say Frank-Dodd health is 100 let's say.

61
00:04:21,770 --> 00:04:28,730
And finally we could say Franke's XP is that say 12.

62
00:04:28,820 --> 00:04:30,530
OK so it's really as simple as that.

63
00:04:30,530 --> 00:04:34,640
That sets those attributes the values for those attributes.

64
00:04:34,640 --> 00:04:38,840
Now obviously if I wanted to print out those attributes I would just do a seek out Frank-Dodd health

65
00:04:38,840 --> 00:04:42,720
and that's it and I'm going to get whatever was stored in there as a value.

66
00:04:42,920 --> 00:04:47,620
So let's take a look at this in the debugger and see what it looks like so I'm going to put a breakpoint

67
00:04:47,630 --> 00:04:53,240
right here on 9:33 and let's run this in the debugger so we can see what's going on.

68
00:04:53,270 --> 00:04:59,660
First of all you can see over here that Frank is a player object that's its type.

69
00:05:00,170 --> 00:05:04,340
And if I expand this you can see it's all garbage right now right.

70
00:05:04,340 --> 00:05:10,540
So this is all garbage and let me hit next and I just did.

71
00:05:10,530 --> 00:05:14,910
Let me refresh just one more time you'll see that the string is now empty for the name.

72
00:05:15,150 --> 00:05:21,800
Now what I'm doing here is I'm saying Set the name attribute for the frank object to the string Frank.

73
00:05:22,050 --> 00:05:22,630
OK.

74
00:05:22,710 --> 00:05:27,120
And then I'm setting the health attribute for the frank object and the XP attribute for the frank object

75
00:05:27,330 --> 00:05:28,710
to 112.

76
00:05:28,710 --> 00:05:36,020
So I'll hit next a couple of times one to three times I'll execute those three lines of code and what

77
00:05:36,020 --> 00:05:42,500
I'll do here is our refresh the screen so that we can see that now we've got Frank is the name the health

78
00:05:42,500 --> 00:05:44,590
is 100 the XP is 12.

79
00:05:44,660 --> 00:05:46,310
Exactly what we expected.

80
00:05:46,460 --> 00:05:47,030
OK.

81
00:05:47,030 --> 00:05:50,360
So that's a really easy way to do this.

82
00:05:50,360 --> 00:05:53,470
Now remember this is all based on the fact that this is public.

83
00:05:53,510 --> 00:05:58,820
If this was private you'd get a compiler error and I'll discuss that in detail in the next video.

84
00:05:58,850 --> 00:06:04,020
Same idea holds for accounts but how about these methods here.

85
00:06:04,040 --> 00:06:06,250
I haven't implemented those methods.

86
00:06:06,500 --> 00:06:17,720
So if I try to say something like Frank don't talk and I pass in a strength to say hi hi there or something

87
00:06:17,720 --> 00:06:23,880
like that this will compile just fine but it won't link because I haven't implemented this method.

88
00:06:23,900 --> 00:06:25,220
How do we implement this method.

89
00:06:25,220 --> 00:06:27,210
There's a whole bunch of different ways to do it.

90
00:06:27,500 --> 00:06:28,800
Let's do it the simple way.

91
00:06:28,820 --> 00:06:32,610
And again I'm going to do a whole video on methods and how to implement them.

92
00:06:32,630 --> 00:06:39,430
But for now just to get this to work let's put in a method block here and just like we've always done

93
00:06:39,440 --> 00:06:42,610
I'm going to say seek out what's my name.

94
00:06:42,620 --> 00:06:47,770
Well my name is name someone the same name.

95
00:06:47,770 --> 00:07:00,190
I'm going to put another insertion operator and I'll say says followed by the text to say which is we

96
00:07:00,190 --> 00:07:05,720
pass into me followed by an end line.

97
00:07:05,740 --> 00:07:06,130
That's it.

98
00:07:06,130 --> 00:07:07,890
Now I've implemented that method.

99
00:07:07,930 --> 00:07:11,390
So now when this code executes right here Frank talk.

100
00:07:11,410 --> 00:07:12,280
Hi there.

101
00:07:12,280 --> 00:07:14,940
It should say Frank says Hi there.

102
00:07:14,980 --> 00:07:17,770
OK so let me stop this and let's run this again.

103
00:07:20,680 --> 00:07:22,480
And again we'll run this in the debugger.

104
00:07:22,480 --> 00:07:27,370
And since we have some output what I'm going to do is put that output window right over here so we can

105
00:07:27,370 --> 00:07:30,660
actually see what's going on in our output window.

106
00:07:30,850 --> 00:07:32,870
OK so let's do this again.

107
00:07:32,950 --> 00:07:40,190
I'm going to select next on line 34 now line 35 line 36.

108
00:07:40,220 --> 00:07:42,020
Now I'm going to execute 9:36.

109
00:07:42,050 --> 00:07:47,360
And at this point my frank object has a named Frank health 100.

110
00:07:47,390 --> 00:07:48,680
XP is 12.

111
00:07:48,710 --> 00:07:54,590
Now what's going to happen is we're going to call the talk method for the frank object and control will

112
00:07:54,590 --> 00:07:59,520
be transferred right over here to this method we just wrote we're passing in this string Hi there.

113
00:07:59,570 --> 00:08:01,790
And it should say Frank says Hi there.

114
00:08:01,790 --> 00:08:03,470
And it should display it right out here.

115
00:08:03,470 --> 00:08:04,380
So let's take a look.

116
00:08:05,340 --> 00:08:06,810
That's exactly what happens.

117
00:08:06,810 --> 00:08:08,490
Frank says Hi there.

118
00:08:09,260 --> 00:08:09,580
OK.

119
00:08:09,720 --> 00:08:17,220
So what's neat about this is that since I'm calling the talk method for the frank object these attributes

120
00:08:17,220 --> 00:08:18,940
are available to that method.

121
00:08:19,130 --> 00:08:23,340
And so I don't have to pass in the name of Frank because I've already got it I could just simply say

122
00:08:23,340 --> 00:08:29,370
name as far as this name is concerned remember we talked about scope a while back.

123
00:08:29,370 --> 00:08:35,330
Well we look for the definition of this variable inside the class first.

124
00:08:35,370 --> 00:08:38,390
It's not there then we go global but we're going to look for it here.

125
00:08:38,390 --> 00:08:39,130
There it is.

126
00:08:39,180 --> 00:08:41,970
That's someone we're going to use OK.

127
00:08:42,110 --> 00:08:43,240
So there you go.

128
00:08:43,240 --> 00:08:49,330
That's a real simple example of calling some member method really really easy.

129
00:08:49,340 --> 00:08:53,510
Now how about if we had a pointer Let's try that.

130
00:08:53,510 --> 00:08:58,250
So let me stop this and we'll do the same kind of code will write it with a pointer and I'll leave this

131
00:08:58,430 --> 00:09:00,590
window a little bit smaller so we could see.

132
00:09:00,590 --> 00:09:07,730
So let's say we have a player and it's a pointer this time called enemy which is a pointer to a player.

133
00:09:08,150 --> 00:09:10,090
And I'll just instantiate it right here.

134
00:09:10,190 --> 00:09:12,480
So I say it's a new player.

135
00:09:13,510 --> 00:09:20,540
OK so in order to get to that player object I need to dereference the pointer right remember enemy is

136
00:09:20,540 --> 00:09:24,310
not a player object enemy is a pointer to a player object.

137
00:09:24,320 --> 00:09:26,790
So in this case there's two ways to do it.

138
00:09:26,900 --> 00:09:30,670
We can dereference enemy.

139
00:09:32,250 --> 00:09:40,190
Ok so I just did was I dereference the pointer so now I've got the object and I can say enemy dot name

140
00:09:41,350 --> 00:09:53,930
is and then the simple as that I could say enemy dot health is 100.

141
00:09:55,030 --> 00:09:56,860
And I could do the same thing for XP.

142
00:09:56,880 --> 00:10:02,380
But rather than use this syntax we're explicitly dereferencing the pointer and then doing the dot operator.

143
00:10:02,410 --> 00:10:04,340
Let's use the arrow operator here.

144
00:10:04,360 --> 00:10:15,140
So what we can say is enemy followed by the arrow operator and then we can say x p is that say 15.

145
00:10:15,340 --> 00:10:17,210
Right now how do you call a method here.

146
00:10:17,230 --> 00:10:21,540
Same way we could say enemy arrow.

147
00:10:21,550 --> 00:10:26,470
So what I want to do is I want to dereference that point or I use the dot then I'm going to call talk

148
00:10:27,400 --> 00:10:35,900
and say I will destroy you.

149
00:10:36,270 --> 00:10:37,560
OK so let's try this.

150
00:10:37,560 --> 00:10:39,660
Now let's walk through this one more time.

151
00:10:39,840 --> 00:10:41,360
So we'll debug this

152
00:10:44,550 --> 00:10:46,150
move this over here real quick.

153
00:10:48,670 --> 00:10:50,580
And let's step through the program.

154
00:10:50,620 --> 00:10:53,830
Right now we're on 9:33 that's where we've got the breakpoint.

155
00:10:53,890 --> 00:10:59,200
So we're creating the Frank object we're setting the name to franked the health 100 and the XP to 12

156
00:10:59,580 --> 00:11:03,700
and then we're going to call the talk method on the Frank object which should display.

157
00:11:03,790 --> 00:11:08,770
Frank says Hi there and that's exactly what happens over here in the output.

158
00:11:08,770 --> 00:11:12,970
Now we're going to create this enemy which is a pointer to a player.

159
00:11:12,970 --> 00:11:17,050
Now it's important that you see that you can see the type here what the debugger is really helping you

160
00:11:17,050 --> 00:11:17,620
out here.

161
00:11:17,680 --> 00:11:23,470
You can see Frank is a player enemy is a pointer to a player.

162
00:11:23,470 --> 00:11:26,560
You could see that the debugger is really helping you out there with the type.

163
00:11:26,980 --> 00:11:33,520
So at this point right now that enemy is garbage right we've got garbage data in the pointer.

164
00:11:33,520 --> 00:11:38,490
As soon as I execute 939 now it will be pointing to a real player object.

165
00:11:38,530 --> 00:11:40,980
So I'm going to sit next.

166
00:11:41,080 --> 00:11:43,650
Now we've got enemy pointing to a player object.

167
00:11:43,660 --> 00:11:47,040
And if I come over here you can see the name is junk.

168
00:11:47,060 --> 00:11:49,870
The health is junk and the Czar the name is empty.

169
00:11:49,930 --> 00:11:51,870
The health is junk and the XP is junk.

170
00:11:52,690 --> 00:11:53,170
OK.

171
00:11:53,410 --> 00:11:55,610
So what do I do here.

172
00:11:55,650 --> 00:12:00,300
I want to dereference enemy and then get the names I want to follow the pointer and get the them.

173
00:12:00,360 --> 00:12:01,290
OK.

174
00:12:01,290 --> 00:12:07,860
We can also use this area right here with the watches so I can add a watch and you can put whatever

175
00:12:07,860 --> 00:12:08,810
expression you want.

176
00:12:08,810 --> 00:12:11,740
So I just want to see this expression right here.

177
00:12:12,300 --> 00:12:13,330
Dereference enemy.

178
00:12:13,380 --> 00:12:14,730
That's the object.

179
00:12:14,730 --> 00:12:19,150
So when I add that you can see I'm seeing the same thing that I'm seeing here.

180
00:12:19,380 --> 00:12:22,180
Now for some reason this you need to refresh this you don't.

181
00:12:22,200 --> 00:12:24,200
So it's kind of nice to have these here.

182
00:12:24,240 --> 00:12:29,250
So let's walk through this dereference enemy that means go to the object that I'm pointing to and set

183
00:12:29,250 --> 00:12:30,410
the name to enemy.

184
00:12:30,660 --> 00:12:34,140
OK so let's execute that line of code.

185
00:12:34,140 --> 00:12:39,820
Notice how enemy shows up here doesn't show up here unless I refresh.

186
00:12:39,950 --> 00:12:41,660
But now it does.

187
00:12:41,810 --> 00:12:43,620
They don't want to set the health to 100.

188
00:12:43,700 --> 00:12:45,520
So I'll do that next.

189
00:12:45,530 --> 00:12:54,280
Now the health is 100 XP is 15 but now we're using the arrow operators so but it's all the same XP is

190
00:12:54,430 --> 00:12:55,200
15.

191
00:12:55,280 --> 00:13:00,730
And now I want to call the talk method for the enemy object but I want to do it through the pointer.

192
00:13:00,730 --> 00:13:04,000
And when I run this it should say enemy says I will destroy you.

193
00:13:04,000 --> 00:13:05,270
So let's try that out.

194
00:13:05,800 --> 00:13:07,230
And that's exactly what it says.

195
00:13:07,250 --> 00:13:14,310
And he says I will destroy OK OK so that gives you an idea of how some of this works.

196
00:13:14,310 --> 00:13:17,640
What we'll do next is let's update this a little bit.

197
00:13:17,640 --> 00:13:21,810
We'll do that quickly because this video is getting a little long now and what we'll do is we'll do

198
00:13:21,810 --> 00:13:23,070
the account.

199
00:13:23,520 --> 00:13:23,930
OK.

200
00:13:23,940 --> 00:13:30,810
Same idea except here I'm going to say something like what do I want to do when the user passes in a

201
00:13:30,810 --> 00:13:32,040
number to deposit.

202
00:13:32,070 --> 00:13:38,510
Well what I want to do is just say something like balance plus equals right.

203
00:13:39,540 --> 00:13:43,820
Just something really really simple I don't increment the balance by whatever they passed into me.

204
00:13:44,310 --> 00:13:52,900
And for for withdraw I just want to say balance minus equals be a help.

205
00:13:53,610 --> 00:14:01,800
And while I'm at it I want to also say seek out something like in deposit just so I know that I'm in

206
00:14:01,800 --> 00:14:02,250
there.

207
00:14:02,250 --> 00:14:08,650
So we could see this being called would do that and we'll do the same thing for withdrawal.

208
00:14:08,880 --> 00:14:13,860
And again just so we can see these things are being called now we're defining these methods right in

209
00:14:13,860 --> 00:14:15,060
here right inside the class.

210
00:14:15,060 --> 00:14:19,740
As I said there's other ways to do this and I'll show you what those are in a couple of videos.

211
00:14:19,740 --> 00:14:24,620
But let me just change this so we can understand how to access this.

212
00:14:24,630 --> 00:14:25,410
That's it.

213
00:14:25,410 --> 00:14:28,180
So now let's create right up here.

214
00:14:28,590 --> 00:14:30,370
Let's create an account.

215
00:14:30,510 --> 00:14:34,870
So we'll say account and we'll just say Frank account.

216
00:14:35,460 --> 00:14:35,670
Right.

217
00:14:35,670 --> 00:14:37,650
That creates an account object.

218
00:14:37,650 --> 00:14:40,140
Now I can set the name and the balance of that account.

219
00:14:40,140 --> 00:14:41,830
These are public attributes right now.

220
00:14:42,000 --> 00:14:48,310
So I could say Frank account and I'll just say equals Frank's account.

221
00:14:48,520 --> 00:14:51,820
That could be any C++ string.

222
00:14:52,140 --> 00:14:58,320
And then I'm going to set the balance I'm going to say Frank's account balance and say that there is

223
00:14:58,320 --> 00:15:03,200
$5000 in there.

224
00:15:03,450 --> 00:15:04,560
OK that's it.

225
00:15:04,560 --> 00:15:10,860
Now let's say I want to deposit a thousand dollars into that account I could say again you need the

226
00:15:10,860 --> 00:15:14,650
object that you're working on has to be to the left of the dot operator.

227
00:15:14,760 --> 00:15:18,000
So it's going to be frank account deposit.

228
00:15:18,300 --> 00:15:19,860
And I'm going to deposit a thousand

229
00:15:22,970 --> 00:15:30,070
OK and then we'll save Frank's account withdraw and let's see if we want to withdraw 500

230
00:15:32,980 --> 00:15:33,690
and that's it.

231
00:15:33,700 --> 00:15:37,300
And I'm forgetting semi-colons because I've been working with a programming language all day that doesn't

232
00:15:37,300 --> 00:15:38,030
need them.

233
00:15:38,110 --> 00:15:41,270
So I'll put them in there hope Fed and forget any other ones.

234
00:15:41,500 --> 00:15:42,390
OK so that's it.

235
00:15:42,400 --> 00:15:47,030
Let's put a break point here and just try running through this so again we'll get to the debugger.

236
00:15:48,900 --> 00:15:58,280
And Frank's account equals of course Frank accounts name I need to set that specific attribute

237
00:16:02,480 --> 00:16:07,370
and frank account withdraw five hundred

238
00:16:12,230 --> 00:16:14,850
have an extra portion right there.

239
00:16:15,320 --> 00:16:19,120
OK let's try that now OK.

240
00:16:19,120 --> 00:16:19,600
Perfect.

241
00:16:19,600 --> 00:16:23,170
Let's put the output window over here on the side and let's walk through this.

242
00:16:23,170 --> 00:16:28,530
I'm at 9:33 right now I'm creating frank account so I'm doing that right now.

243
00:16:28,520 --> 00:16:31,800
Now I'm setting Frank accounts name into Frank's account.

244
00:16:31,810 --> 00:16:32,740
We'll do that.

245
00:16:32,890 --> 00:16:34,980
And the balance to 5000.

246
00:16:34,990 --> 00:16:41,510
So let's take a look at Frank's account right here will refresh there's Frank's account and the balance

247
00:16:41,520 --> 00:16:43,040
is 5000.

248
00:16:43,050 --> 00:16:47,760
Now when I call the deposit method it's going to call this method right here for that Frank account

249
00:16:47,790 --> 00:16:50,960
object and increment the balance by a thousand.

250
00:16:51,300 --> 00:16:53,000
OK so let's do that.

251
00:16:53,000 --> 00:16:56,780
And should we should also get an output statement print out over here.

252
00:16:56,780 --> 00:16:58,290
There you go in deposit.

253
00:16:58,490 --> 00:17:04,280
Refresh frank account again notice I've got 6000 in here now.

254
00:17:04,480 --> 00:17:09,800
When I called the withdraw method this should go down to fifty five hundred and it should say in withdraw.

255
00:17:09,820 --> 00:17:13,880
So let's do that one more time and we'll refresh one more time.

256
00:17:13,950 --> 00:17:19,300
There's 1500 exactly what we expected and the withdrawal kicked in OK.

257
00:17:19,380 --> 00:17:22,080
Same idea here with the pointer that we did with the player object.

258
00:17:22,080 --> 00:17:25,950
I won't do that because the video is getting a little bit longer but I'll let you guys try that out.

259
00:17:25,950 --> 00:17:30,930
You can create Mary's account which is a pointer to an account and then you can access the attributes

260
00:17:30,930 --> 00:17:33,460
using this syntax or the error.

261
00:17:33,480 --> 00:17:35,880
OPERATOR OK.

262
00:17:35,880 --> 00:17:38,870
So if you have any questions please drop by the forum and let us know.
