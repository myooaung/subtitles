1
00:00:05,540 --> 00:00:10,580
When I take a course I always like to know what will be covered in that course so I know what to expect.

2
00:00:11,390 --> 00:00:14,360
In this video I'd like to go over the curriculum for this course.

3
00:00:15,120 --> 00:00:20,100
The curriculum has been developed in such a way that students with little to no programming background

4
00:00:20,310 --> 00:00:23,880
can get started programming quickly in C++.

5
00:00:23,880 --> 00:00:26,490
C++ is a very complex language.

6
00:00:26,580 --> 00:00:30,320
Probably one of the most complex programming languages use today.

7
00:00:30,690 --> 00:00:34,730
That doesn't mean that learning the basics should be impossible to grasp.

8
00:00:34,740 --> 00:00:41,460
In fact all programming languages provide the same general constructs that we use to build programs.

9
00:00:41,460 --> 00:00:44,150
This is a beginning modern C++ course.

10
00:00:44,340 --> 00:00:50,020
There are many many topics in C++ that are at an intermediate or advanced level.

11
00:00:50,100 --> 00:00:53,100
I won't be covering those topics in this course.

12
00:00:53,100 --> 00:01:00,590
My goal in this course is to teach the basics of C++ so that you can write C++ programs that solve problems.

13
00:01:00,600 --> 00:01:06,870
More importantly this course lays the foundation necessary to go forward and learn more advanced C++

14
00:01:06,870 --> 00:01:08,030
concepts.

15
00:01:08,040 --> 00:01:15,200
This foundation will also allow you to read C++ code written by other programmers C++ frameworks are

16
00:01:15,200 --> 00:01:16,210
used everywhere.

17
00:01:16,310 --> 00:01:22,250
For example if you want to program games in C++ using the Unreal Engine then you'll have the background

18
00:01:22,250 --> 00:01:24,800
necessary to use their frameworks.

19
00:01:24,890 --> 00:01:29,990
If you want to use the popular C++ Boost libraries you'll be able to use them and understand many of

20
00:01:29,990 --> 00:01:31,120
their a prize.

21
00:01:31,370 --> 00:01:35,490
OK so let's talk about the curriculum and what you can expect in this course.

22
00:01:35,510 --> 00:01:42,470
We'll begin our C++ training by going over the code like IDS interface and writing a C++ program using

23
00:01:42,470 --> 00:01:49,000
code like as we do this will understand how to compile build and run a C++ program.

24
00:01:49,040 --> 00:01:51,950
Also talk a bit about some areas you may encounter.

25
00:01:51,950 --> 00:01:53,070
I know what you're thinking.

26
00:01:53,090 --> 00:01:55,440
Geez she's already talking about errors already.

27
00:01:55,490 --> 00:01:58,690
I haven't even started learning to program yet and he's talking about errors.

28
00:01:58,700 --> 00:02:00,460
Is this going to be that difficult.

29
00:02:00,530 --> 00:02:01,250
Don't worry.

30
00:02:01,280 --> 00:02:05,620
The sooner we talk about errors kinds of errors why they happen and how to fix them.

31
00:02:05,750 --> 00:02:08,750
The sooner errors will become normal and expected.

32
00:02:08,750 --> 00:02:12,320
I've seen students get turned off from programming because they get errors.

33
00:02:12,320 --> 00:02:14,730
Expect the errors fix them and move on.

34
00:02:14,780 --> 00:02:18,610
Then we'll talk about the structure of a basic C++ program.

35
00:02:18,620 --> 00:02:21,710
I'll explain LB include name spaces comments.

36
00:02:21,710 --> 00:02:24,520
The main function see in and see out.

37
00:02:24,650 --> 00:02:28,800
These are the elements that nearly every C++ program will have.

38
00:02:28,830 --> 00:02:31,960
Then we'll talk about variables and concepts and how to use them.

39
00:02:32,000 --> 00:02:37,240
You can't write a C++ program that does much of anything unless it has variables and constants.

40
00:02:37,360 --> 00:02:40,650
We'll go over how to declare them use them Name them and much more.

41
00:02:40,670 --> 00:02:42,230
We'll also discuss C++.

42
00:02:42,240 --> 00:02:47,460
Basic types which allow you to use integers floating point numbers characters and more.

43
00:02:47,480 --> 00:02:51,860
Now that we know of variables are will group a bunch of variables together into collection of variables

44
00:02:51,860 --> 00:02:53,390
called an array.

45
00:02:53,390 --> 00:02:58,310
Now we'll be storing and using multiple variables like a bunch of test scores or temperatures for the

46
00:02:58,310 --> 00:03:00,110
last 7 days.

47
00:03:00,110 --> 00:03:05,340
These collections are called arrays and vectors and will learn how to create them and use them.

48
00:03:05,380 --> 00:03:11,900
Also learn how to use multi dimensional structures so we can model things like grids boards and spreadsheets.

49
00:03:11,900 --> 00:03:17,480
Then we'll learn about strings and C++ strings or collections of characters like my named Frank which

50
00:03:17,480 --> 00:03:24,410
is f r a and k strings are used extensively in C++ and we go over the basics in this section in the

51
00:03:24,410 --> 00:03:27,790
following section will learn how to write program statements.

52
00:03:27,800 --> 00:03:34,100
These statements are made up of expressions will also go over some of the C++ operators like plus minus

53
00:03:34,100 --> 00:03:36,170
multiply divide and so forth.

54
00:03:37,100 --> 00:03:42,560
At the end of this section you'll be able to write C++ statements that tell the computer what to do

55
00:03:42,560 --> 00:03:44,490
in order.

56
00:03:44,650 --> 00:03:47,720
Now we get to the real powerful stuff control flow.

57
00:03:47,740 --> 00:03:52,210
It's nice to be able to write a bunch of statements one after the other but to really have power we

58
00:03:52,210 --> 00:03:56,080
need to be able to make decisions and repeat things more than once.

59
00:03:56,170 --> 00:03:57,990
This is control flow.

60
00:03:58,030 --> 00:04:03,160
This will open up the world of programming and give you so much power in the next section we'll learn

61
00:04:03,160 --> 00:04:09,190
how to write functions a function let's as group a bunch of statements into a single construct.

62
00:04:09,250 --> 00:04:12,520
It helps us organize our code and think more abstractly.

63
00:04:12,790 --> 00:04:16,820
Following functions We'll talk about C++ pointers and references.

64
00:04:17,050 --> 00:04:22,430
You may have heard horror stories about C++ pointers don't worry I'll walk you through how and why do

65
00:04:22,430 --> 00:04:26,790
you use them and you'll see the incredible power they give you over your hardware.

66
00:04:26,800 --> 00:04:32,260
Finally now that we know the basics of procedural programming and C++ will dive into object oriented

67
00:04:32,260 --> 00:04:40,060
programming or O P O P is awesome and lets you model your program in terms of real world objects.

68
00:04:40,070 --> 00:04:45,580
C++ is after all an object oriented language and that's how we want to use it.

69
00:04:45,580 --> 00:04:50,920
Once we understand the basics of AP we'll learn about operator overloading which allows us to define

70
00:04:50,920 --> 00:04:57,310
how the built in C++ operators can be defined so that they work with our own classes so they feel like

71
00:04:57,340 --> 00:04:59,530
are part of the standard language.

72
00:04:59,880 --> 00:05:02,790
Then you'll learn about inheritance and the power that it provides.

73
00:05:02,800 --> 00:05:07,960
Imagine reusing existing code by inheriting what you need from it and just modifying the parts that

74
00:05:07,960 --> 00:05:09,410
you need to solve your problem.

75
00:05:10,400 --> 00:05:13,270
We'll wrap up our with polymorphism.

76
00:05:13,280 --> 00:05:19,430
Polymorphism allows your program to determine its behavior at runtime and really let you think in general

77
00:05:19,430 --> 00:05:21,820
so you don't have to be concerned about details.

78
00:05:22,720 --> 00:05:27,400
The last several sections of the Course are slightly more advanced but they're so important that I wanted

79
00:05:27,400 --> 00:05:29,200
to include them in this course.

80
00:05:29,200 --> 00:05:31,070
The first is smart pointers.

81
00:05:31,360 --> 00:05:37,920
We'll talk a lot about C++ pointers since every C++ programmer really needs to understand raw pointers

82
00:05:38,470 --> 00:05:44,380
but C++ also provides smart pointers which make memory management much simpler and make your program

83
00:05:44,380 --> 00:05:46,330
safer to use.

84
00:05:46,390 --> 00:05:53,200
Then we'll talk about the C++ standard template library C++ provides a standard C++ template library

85
00:05:53,470 --> 00:05:57,870
with a rich set of containers iterators and algorithms that are ready to use.

86
00:05:57,880 --> 00:06:04,000
Why reinvent the wheel when you can use the wheels you have Aguayo over the basic FCL elements so that

87
00:06:04,000 --> 00:06:06,880
you can put them together and solve complex problems.

88
00:06:07,000 --> 00:06:12,730
Will finish off the course by talking about input and output to files in Exception handling exception

89
00:06:12,730 --> 00:06:17,000
handling allows you to deal with exceptional conditions that might occur in your program.

90
00:06:17,290 --> 00:06:21,810
What if a file doesn't exist or you try an operation and it fails.

91
00:06:21,820 --> 00:06:26,290
It's important to understand how to write your code so that it's aware that something has gone wrong

92
00:06:26,290 --> 00:06:27,960
so you can recover from it.

93
00:06:28,330 --> 00:06:29,780
Wow that's a lot of material.

94
00:06:29,860 --> 00:06:35,500
Some of these topics can be covered by an entire course dedicated just to them but don't worry we aren't

95
00:06:35,500 --> 00:06:40,390
going to get into every possible option or explain every construct from a theoretical computer science

96
00:06:40,390 --> 00:06:42,010
perspective.

97
00:06:42,010 --> 00:06:47,530
This course is practical and it's about learning beginning C++ so that you can further explore this

98
00:06:47,530 --> 00:06:53,160
amazing programming language and use it in real world applications in the next videos.

99
00:06:53,170 --> 00:06:58,330
I briefly discuss the challenge exercises and the quizzes that are included in the course sections.
