WEBVTT
1
00:00:05.200 --> 00:00:09.720
Hello everyone welcome back to the challenge solution for Section 13.

2
00:00:10.580 --> 00:00:15.710
If you look through the project that you really found what we had to implement was basically three methods

3
00:00:16.190 --> 00:00:23.120
in the movies that CBP file and if you look at your movies file you can basically see what's going on

4
00:00:23.120 --> 00:00:23.860
here.

5
00:00:23.900 --> 00:00:29.130
We have an ad movie method that expects the movie name movie rating and the number of times watched.

6
00:00:29.210 --> 00:00:32.840
And I want to add that movie to this vector right here.

7
00:00:32.840 --> 00:00:37.730
This collection of movies but I have two streams of an integer I don't have a movie object so obviously

8
00:00:37.730 --> 00:00:43.520
we need to create a movie object but we only create that movie object and add it if the movie isn't

9
00:00:43.520 --> 00:00:44.300
in there already.

10
00:00:44.370 --> 00:00:44.640
OK.

11
00:00:44.690 --> 00:00:47.000
And we're deciding that by the name.

12
00:00:47.090 --> 00:00:48.630
So that's one thing we've got to do.

13
00:00:49.600 --> 00:00:54.430
The other thing we need to do is implement this incremental watched and it's very similar the users

14
00:00:54.430 --> 00:00:58.570
passing in the name of the movie that they want to watch number incremented by one.

15
00:00:58.570 --> 00:00:59.510
So what do we do.

16
00:00:59.590 --> 00:01:07.090
We search through that vector again right here and if we find that movie by name then we increment its

17
00:01:07.090 --> 00:01:07.600
count.

18
00:01:07.600 --> 00:01:10.750
Otherwise we return false and we do that here as well.

19
00:01:10.750 --> 00:01:14.120
So if we add the movie that was successful we're returning true.

20
00:01:14.260 --> 00:01:16.080
Otherwise we're returning false.

21
00:01:16.090 --> 00:01:20.590
Same here if we increment watch count we're returning true otherwise we're returning false.

22
00:01:20.590 --> 00:01:22.580
We couldn't do it because the movie wasn't there.

23
00:01:22.840 --> 00:01:27.610
And then the last method will intimate to this display method which just basically loops through that

24
00:01:27.610 --> 00:01:29.850
vector and prints out all the moving objects.

25
00:01:29.970 --> 00:01:30.420
OK.

26
00:01:30.550 --> 00:01:33.810
So why don't we get started let's head over to the movie C.P. file.

27
00:01:33.940 --> 00:01:36.030
That's where we're going to implement these methods.

28
00:01:36.050 --> 00:01:38.110
Now notice we have a default constructor.

29
00:01:38.290 --> 00:01:40.360
We have a destructor.

30
00:01:40.360 --> 00:01:43.900
We don't have a copy constructor we don't really have anything going on like that.

31
00:01:44.010 --> 00:01:51.230
Again if you look at your movies file we don't have any raw pointers here so we're fine with the default

32
00:01:51.230 --> 00:01:54.700
behavior of the copy constructor so we don't have to implement it.

33
00:01:54.920 --> 00:01:55.450
OK.

34
00:01:55.580 --> 00:01:57.820
So again let's go back to movie c.p.

35
00:01:57.890 --> 00:02:00.410
We don't really need to implement a destructor since we're not.

36
00:02:00.410 --> 00:02:04.940
There's nothing to destroy unless you input output statements in here so that you can see them happening

37
00:02:05.180 --> 00:02:06.920
then you would certainly implement them that way.

38
00:02:07.040 --> 00:02:09.710
So let's start with this add movie.

39
00:02:09.800 --> 00:02:14.810
Right now it's just returning false and increment watched officers returning false and this will actually

40
00:02:14.810 --> 00:02:17.050
run right now if you run this project.

41
00:02:17.180 --> 00:02:18.680
That's kind of what you get.

42
00:02:19.160 --> 00:02:24.740
Pretty meaningless but it all works all compiles So that's the next step is trying to get the functionality

43
00:02:24.740 --> 00:02:25.240
right.

44
00:02:25.460 --> 00:02:31.400
So let's start with AD movies so we're right here I'm going to get rid of that return statement and

45
00:02:31.400 --> 00:02:34.290
let's start coding this method right here.

46
00:02:34.310 --> 00:02:35.350
So what do we want to do.

47
00:02:35.390 --> 00:02:41.570
What we want to loop over that collection movies and for every object in there remember every object

48
00:02:41.570 --> 00:02:46.430
will be a movie object we want to get the name for that movie object and compare it to this name right

49
00:02:46.430 --> 00:02:47.130
here.

50
00:02:47.500 --> 00:02:48.080
OK.

51
00:02:48.320 --> 00:02:52.820
And if we find the name in there that means that that movie is already in there.

52
00:02:52.820 --> 00:02:56.690
We don't want to add it again so a return false otherwise we'll add the movie.

53
00:02:56.840 --> 00:02:58.630
OK so let's take this one step at a time.

54
00:02:58.640 --> 00:03:04.360
Let's just use a range based for loop to do this and we'll start here we'll say four.

55
00:03:04.730 --> 00:03:06.650
And we'll modify this a little bit as we go.

56
00:03:06.650 --> 00:03:09.480
Movie movie.

57
00:03:09.830 --> 00:03:11.360
That's each item in the collection.

58
00:03:11.360 --> 00:03:14.030
And we're going to loop over movies.

59
00:03:14.270 --> 00:03:17.070
So there's my range based for loop.

60
00:03:17.180 --> 00:03:23.330
Now we can check for each movie that we're going through we can get the name for the movie

61
00:03:26.490 --> 00:03:31.970
and if the name of the movie that we're iterating through each step is equal to the name that's being

62
00:03:31.970 --> 00:03:36.210
passed in that's that guy right here then what happened.

63
00:03:36.520 --> 00:03:40.260
Well then we found a movie that's in there where there's no sense in adding it again.

64
00:03:40.450 --> 00:03:44.220
We just want to return false and we're out of here right now.

65
00:03:44.230 --> 00:03:48.730
We could certainly have some if else logic and so forth but why bother at this point.

66
00:03:48.820 --> 00:03:51.870
Remember if it's the first one we're out if it's the last one we're at.

67
00:03:51.900 --> 00:03:56.260
But in any case if we find a movie that has the same name as the one we're trying to add we're want

68
00:03:56.260 --> 00:03:59.020
to return Foltz at this point.

69
00:03:59.110 --> 00:04:02.210
I loop through the entire collection I have not found the movie.

70
00:04:02.260 --> 00:04:04.530
So now what I want to do is add the movie.

71
00:04:04.690 --> 00:04:10.630
Well in order to add the movie I need to create a movie object to add or create movie with it just call

72
00:04:10.630 --> 00:04:13.510
it temper anything we like and we'll constructed.

73
00:04:13.510 --> 00:04:22.150
Given the name the rating and the watched.

74
00:04:22.330 --> 00:04:30.040
Now we've got an object we can simply add it to the movie's vector and can push back and we can push

75
00:04:30.040 --> 00:04:36.450
back to help and at this point want to return true right because we were able to add that movie.

76
00:04:36.760 --> 00:04:37.600
That's it.

77
00:04:37.630 --> 00:04:40.630
Now there's a couple of things we can do here to make this a little better.

78
00:04:40.630 --> 00:04:46.330
First of all this loop right here that's looping through that collection or iterating through that collection

79
00:04:47.410 --> 00:04:49.850
it really is stuck in a modified collection.

80
00:04:49.870 --> 00:04:53.280
And I want to be sure that it doesn't modify the collection this will do that right because it's the

81
00:04:53.300 --> 00:04:56.530
all returned by copy but it's not very efficient.

82
00:04:56.530 --> 00:05:01.370
So what I'd rather do is change this too so that this is a reference right here.

83
00:05:01.600 --> 00:05:04.410
But if I just leave it as a reference and this can potentially change.

84
00:05:04.430 --> 00:05:06.680
So I really want to make this a contest.

85
00:05:06.880 --> 00:05:10.320
So I want this to be a reference to a concert movie at each iteration.

86
00:05:10.390 --> 00:05:15.760
So if I try to change it by accident or by mistake or even intentionally if I try to change that movie

87
00:05:15.790 --> 00:05:18.600
in here I'm going to get a compiler error.

88
00:05:19.150 --> 00:05:21.270
OK so that's basically done.

89
00:05:21.280 --> 00:05:23.300
Now let's take a look at the increment watch.

90
00:05:23.300 --> 00:05:27.750
Again I'll get rid of the return value since we'll do it from scratch.

91
00:05:28.300 --> 00:05:31.780
And what we'll do here is again we want to loop through.

92
00:05:31.780 --> 00:05:36.660
So this is a little different though because I want to loop through until I find it right.

93
00:05:36.670 --> 00:05:39.210
And then when I find it I want to update it.

94
00:05:39.280 --> 00:05:43.270
So it's a little different logic than we just had before but it's the same idea.

95
00:05:43.330 --> 00:05:48.220
So let's say for movie and we could use audio here if we wanted.

96
00:05:48.550 --> 00:05:53.920
And I want a reference to each one of those movie objects because if I find the one that matches I need

97
00:05:53.920 --> 00:05:54.960
to change it right.

98
00:05:55.150 --> 00:05:57.870
So it can't be a constant needs to be a reference.

99
00:05:57.940 --> 00:06:03.720
So I'm again looping through and I just forgot that bit movies right here.

100
00:06:05.960 --> 00:06:06.380
There we go.

101
00:06:06.380 --> 00:06:08.250
So now we've got a range base for loop.

102
00:06:08.360 --> 00:06:13.100
We're looping through movies and at each iteration we have a movie and it's a reference so we can change

103
00:06:13.100 --> 00:06:13.330
it.

104
00:06:13.460 --> 00:06:14.240
OK.

105
00:06:14.240 --> 00:06:15.320
So what are we doing here.

106
00:06:15.340 --> 00:06:19.840
Well we checked to see if the name of the movie is the name that I want to change.

107
00:06:20.090 --> 00:06:23.960
So here I'm simply going to say if that movie's name

108
00:06:28.310 --> 00:06:35.960
if that movie object's name is equal to the name that was just passed into me then at this point I've

109
00:06:35.960 --> 00:06:37.310
got the one that I want to update.

110
00:06:37.300 --> 00:06:38.120
Right.

111
00:06:38.300 --> 00:06:45.220
So I can simply call a movie which is the object and increment watched.

112
00:06:45.230 --> 00:06:48.280
That's a method in the movie class.

113
00:06:49.220 --> 00:06:54.630
And I want to return true because it was successful and I'm out now at this point down here.

114
00:06:54.950 --> 00:07:01.670
What happened was I loop through the entire vector and I did not find any movie with that name.

115
00:07:01.700 --> 00:07:06.190
So at this point right here I simply want to return false right because I'm done.

116
00:07:06.410 --> 00:07:09.550
I wasn't able to increment anything because it wasn't there.

117
00:07:10.190 --> 00:07:11.520
So that should take care of that.

118
00:07:11.720 --> 00:07:15.290
And then the last method that we're going to is this display method.

119
00:07:15.290 --> 00:07:17.270
So what do we need to do here.

120
00:07:17.270 --> 00:07:19.790
Well let's first check to see if there are any movies at all.

121
00:07:19.790 --> 00:07:20.240
Right.

122
00:07:20.360 --> 00:07:23.100
And noticed this is a contact method so that's really important right.

123
00:07:23.100 --> 00:07:26.010
We can't modify that movie's object in here.

124
00:07:26.360 --> 00:07:35.440
So I'm going to say if my movies dot size that's the vector size how many items are in there.

125
00:07:35.750 --> 00:07:40.160
If that is equal to zero then I really have nothing to display.

126
00:07:40.400 --> 00:07:47.370
So I just say something like let's output something like let's say sorry I think that's what I had before.

127
00:07:47.380 --> 00:07:50.650
Sorry no movies to display.

128
00:07:51.920 --> 00:07:55.350
Put a new line in there and put an end line in there as well.

129
00:07:57.000 --> 00:08:00.900
OK so we've just taking care of the case where there are no movies.

130
00:08:00.960 --> 00:08:03.790
Now the other cases there are movies.

131
00:08:03.960 --> 00:08:09.960
So in this case what I need to do is basically loop through that movie's vector again and every time

132
00:08:09.960 --> 00:08:14.370
I see a movie object tell it to display itself it knows how to display itself.

133
00:08:14.380 --> 00:08:21.470
So let me just put in one of these lines just to sort of have to keep typing so much.

134
00:08:21.740 --> 00:08:25.810
So we've got a header line here and we'll put another one here.

135
00:08:26.090 --> 00:08:29.220
We will put everything else in between that we've got a nice sort of separation.

136
00:08:29.330 --> 00:08:30.290
So what do we want to do in here.

137
00:08:30.300 --> 00:08:35.630
Well I want to say for my movie and I could say Otto here as well it's going to figure out what it is

138
00:08:36.380 --> 00:08:38.600
for auto movie.

139
00:08:39.440 --> 00:08:43.670
That's my variable name in my movies collection.

140
00:08:43.970 --> 00:08:46.720
So every time I see one of these guys what do I want to do.

141
00:08:46.820 --> 00:08:52.300
Well I'm going to tell the movie to display itself.

142
00:08:52.970 --> 00:08:55.650
It's really that simple so we're done with this.

143
00:08:55.670 --> 00:08:57.440
We've got our logic set up.

144
00:08:57.650 --> 00:09:00.600
Now let's compile and see if we've got any compiler errors.

145
00:09:02.490 --> 00:09:08.790
We've got a compiler error right here because I forgot my standard namespace and it's Try that one more

146
00:09:08.790 --> 00:09:09.800
time.

147
00:09:09.810 --> 00:09:10.320
That's it.

148
00:09:10.320 --> 00:09:11.130
We're done.

149
00:09:11.160 --> 00:09:13.020
Everything's working as expected.

150
00:09:14.100 --> 00:09:16.840
Sorry no movies to display we add those three items.

151
00:09:16.840 --> 00:09:20.140
We display the three movies Cedrela already exists.

152
00:09:20.140 --> 00:09:25.570
We are an ice age now we display the for we don't display Cinderella twice and we increment big and

153
00:09:25.570 --> 00:09:35.410
I say edge so we got 3 and 13 it was 2 and 12 and then finally we can't increment that x x x will be

154
00:09:35.410 --> 00:09:36.890
because there is no such thing.

155
00:09:37.730 --> 00:09:40.280
OK so that really is about it.

156
00:09:40.550 --> 00:09:45.320
You could add an interface to this you can add some more attributes to this to extend it and practice

157
00:09:45.320 --> 00:09:46.250
some more.

158
00:09:46.250 --> 00:09:49.360
What I would suggest you do is go to your movies.

159
00:09:49.440 --> 00:09:54.470
H file right here and make this one change.

160
00:09:54.470 --> 00:09:58.840
Make that movies not a movie object but a pointer.

161
00:09:58.850 --> 00:10:02.380
So now this movie contains a pointer to a vector.

162
00:10:02.570 --> 00:10:06.080
And now you've really got to think about what you're doing because now we need copy constructors that

163
00:10:06.080 --> 00:10:10.820
are doing deep copies and we need move constructors and we need to be a little bit more careful more

164
00:10:10.820 --> 00:10:11.490
efficient.

165
00:10:11.510 --> 00:10:16.200
So I'll leave this as an exercise to you but I encourage you to do this.

166
00:10:16.310 --> 00:10:17.280
All right.

167
00:10:17.300 --> 00:10:20.170
Hope you had fun doing this project.

168
00:10:20.190 --> 00:10:21.600
Hey everybody I'm back.

169
00:10:21.600 --> 00:10:25.680
I just realized that when I wrote this line of code here on line 76 I was trying to show you that you

170
00:10:25.680 --> 00:10:28.990
can use auto here but I was a little quick on the gun.

171
00:10:29.070 --> 00:10:32.820
We have to be a little bit more careful than just this because this is going to create an object by

172
00:10:32.820 --> 00:10:34.890
copy and it's going to be inefficient.

173
00:10:34.890 --> 00:10:39.210
So what we really want to do is we want to replace it with conc because still use audio but we want

174
00:10:39.210 --> 00:10:41.420
to make sure it's a reference to a constant object.

175
00:10:41.460 --> 00:10:43.890
And in this case the auto makes it a movie.

176
00:10:43.920 --> 00:10:44.330
Right.

177
00:10:44.340 --> 00:10:47.800
So we've got this is equivalent to typing this.

178
00:10:48.450 --> 00:10:55.710
And if we do this with auto save and we'll build and run and we've got the same output as before but

179
00:10:55.710 --> 00:10:56.670
a little bit more efficient.
