WEBVTT
1
00:00:05.690 --> 00:00:11.300
This video we'll apply some of the concepts that we've learned in this section to solve a problem but

2
00:00:11.310 --> 00:00:14.580
will do for us is will solve the problem using literal constants.

3
00:00:14.790 --> 00:00:19.260
And then what we'll do as well refactored to use declared constants and along the way you'll see how

4
00:00:19.260 --> 00:00:21.660
much better it is used declared constants.

5
00:00:21.900 --> 00:00:23.970
OK so here's the problem we're going to solve.

6
00:00:24.000 --> 00:00:30.510
Frank has a carpet cleaning service that charges $30 per room and there's a sales tax rate of 6 percent.

7
00:00:30.510 --> 00:00:32.690
All the estimates are valid for 30 days.

8
00:00:32.820 --> 00:00:37.350
So our program is really we're going to prompt the user for the number of rooms that would like cleaned

9
00:00:37.950 --> 00:00:39.480
and we're going to provide an estimate.

10
00:00:39.720 --> 00:00:41.410
Decimal looks something like this.

11
00:00:41.430 --> 00:00:47.110
You can see here starting at line 13 estimate for carpet cleaning service number of rooms too.

12
00:00:47.190 --> 00:00:53.390
That's the number that the user entered price per room $30 cost $60.

13
00:00:53.610 --> 00:00:57.010
Obviously that would be $30 per room times two rooms.

14
00:00:57.420 --> 00:01:04.110
The tax which would be 6 percent based on the $60 which would be $3 is 60 cents then the total estimate

15
00:01:04.110 --> 00:01:08.890
would be sixty three dollars and sixty cents and then you print out this estimate is valid for 30 days.

16
00:01:09.000 --> 00:01:12.380
Now I'm using dollars you could use euros you could use any currency you like.

17
00:01:12.390 --> 00:01:14.480
Also I know that the formatting is that right.

18
00:01:14.490 --> 00:01:18.390
Obviously three dollars and sixty cents would be three point six zero.

19
00:01:18.390 --> 00:01:22.980
Don't worry about that right now let's worry about solving this problem and using literal constants

20
00:01:23.220 --> 00:01:24.840
and using declared constants.

21
00:01:24.970 --> 00:01:30.150
Worry about output formatting in a different section and we'll go over a bunch different ways to do

22
00:01:30.300 --> 00:01:34.050
formatting including currency formatting based on your locale.

23
00:01:34.140 --> 00:01:34.520
All right.

24
00:01:34.530 --> 00:01:37.360
So let's think about how we're going to solve this problem.

25
00:01:37.710 --> 00:01:43.380
Programmers often use something called pseudo code pseudo code is like in English like or your own natural

26
00:01:43.380 --> 00:01:50.170
spoken language like representation of the algorithm or the steps necessary to solve the problem.

27
00:01:50.220 --> 00:01:55.230
In this example I wrote down some pseudo code and pseudo code that don't let anybody tell you that is

28
00:01:55.230 --> 00:01:58.110
a right way and a wrong way to do pseudo code that really isn't.

29
00:01:58.140 --> 00:02:00.930
It's not a programming language.

30
00:02:00.960 --> 00:02:05.610
This is something that organizes your thoughts and allows you to solve the problem.

31
00:02:05.620 --> 00:02:11.040
Remember if you can't solve the problem in pseudocode there's no way you're going to solve it in C or

32
00:02:11.040 --> 00:02:13.490
in Java or in any other programming language.

33
00:02:13.500 --> 00:02:15.110
So in this case this is my.

34
00:02:15.140 --> 00:02:18.290
These are the steps that I want to take to solve this problem.

35
00:02:18.300 --> 00:02:23.160
The first thing I want to do and you can see here on 9:23 is prompt the user to enter the number of

36
00:02:23.160 --> 00:02:24.090
rooms.

37
00:02:24.210 --> 00:02:24.790
Great.

38
00:02:25.020 --> 00:02:29.390
I want to display the number of rooms to the user display the price per room.

39
00:02:29.470 --> 00:02:34.690
Didn't want to display the cost which is the number of firms times the price per room.

40
00:02:34.740 --> 00:02:41.150
I want to display the tax which is the number of rooms times the price per room times the tax rate.

41
00:02:41.280 --> 00:02:46.640
They don't want to display the total estimate the total estimate of course is the cost plus the tax.

42
00:02:46.660 --> 00:02:48.060
They I want to display at the end.

43
00:02:48.060 --> 00:02:50.140
This estimate is valid for 30 days.

44
00:02:50.220 --> 00:02:54.840
So what we want to do is we want to mimic this sample output right here.

45
00:02:54.840 --> 00:02:56.420
OK so let's get started.

46
00:02:56.460 --> 00:03:01.980
What we'll do first is we'll do this using literal constants and then we'll refactor it using declared

47
00:03:01.980 --> 00:03:03.010
constants.

48
00:03:03.030 --> 00:03:05.100
So the first thing I'm saying is hello.

49
00:03:05.130 --> 00:03:07.340
Welcome to Frank's carpet cleaning service.

50
00:03:07.470 --> 00:03:09.220
That's my little introduction.

51
00:03:09.270 --> 00:03:12.270
Now I need to ask the user again look at the pseudo code.

52
00:03:12.270 --> 00:03:14.670
Ask the user how many rooms they buy to be clean.

53
00:03:14.750 --> 00:03:22.080
OK so that's you that will say seek out and we'll say how many rooms would you like clean

54
00:03:27.120 --> 00:03:31.440
and I'm going to type this along and if I make typos and errors that's fine I'll fix them along the

55
00:03:31.440 --> 00:03:31.880
way.

56
00:03:32.100 --> 00:03:35.750
And you probably make the same kinds of errors so you'll see how to fix them.

57
00:03:35.910 --> 00:03:37.660
Semi-colon at the end.

58
00:03:38.010 --> 00:03:39.540
And there's a typo right here.

59
00:03:39.540 --> 00:03:41.710
So how many rooms would you like cleaned.

60
00:03:41.760 --> 00:03:43.080
Now let's run this.

61
00:03:43.230 --> 00:03:50.080
And what I'm doing is in pressing control F5 which is build and run and you can see here.

62
00:03:50.090 --> 00:03:50.500
Hello.

63
00:03:50.510 --> 00:03:52.860
Welcome to Frank's carpet cleaning service.

64
00:03:52.880 --> 00:03:54.330
How many rooms would you like cleaned.

65
00:03:54.410 --> 00:03:55.180
Perfect.

66
00:03:55.190 --> 00:03:59.960
Now I'd like to put a space between the first line and the second line of output.

67
00:03:59.960 --> 00:04:05.570
Now there's a couple of ways I can do that I can come down here and I could just add another line and

68
00:04:05.850 --> 00:04:09.410
that will print two new lines at the end which would be fine.

69
00:04:09.920 --> 00:04:15.360
I could also just say see out and line here which prints out a line.

70
00:04:15.570 --> 00:04:17.910
Let's run that machine with that looks like.

71
00:04:18.020 --> 00:04:21.710
Now you can see that there's a line between the first line and the second line.

72
00:04:22.100 --> 00:04:29.090
And I can also use a character literal constant right here at the front of the house if you put a slash

73
00:04:29.180 --> 00:04:31.940
and a backslash in that's a new line.

74
00:04:32.020 --> 00:04:35.300
And I can get rid of this and it has the same effect.

75
00:04:35.300 --> 00:04:40.010
So it's going to happen here is it's going to print a new line before it prints the how.

76
00:04:40.010 --> 00:04:44.350
So if I run this now you can see I get the same effect.

77
00:04:44.360 --> 00:04:50.690
So this is an example of embedding those escape codes as I mentioned in the PowerPoint slides into String

78
00:04:50.690 --> 00:04:51.480
literals.

79
00:04:51.710 --> 00:04:53.700
So now we're here.

80
00:04:53.780 --> 00:04:59.990
Next step is to read in the number of rooms from the user so obviously we need to use the extraction

81
00:04:59.990 --> 00:05:03.570
operator with the C in object but we need to store that somewhere.

82
00:05:03.680 --> 00:05:09.060
So let's create an integer will create a variable here and we'll call it number of rooms.

83
00:05:11.800 --> 00:05:19.750
Best practice is to initialize it so I'm going to initialize it to 0 and see in and get the number of

84
00:05:19.750 --> 00:05:22.970
rooms from CNN.

85
00:05:23.440 --> 00:05:25.700
OK so again let's see where we're at.

86
00:05:25.780 --> 00:05:30.310
We've outputted our prompt and the user has entered the number of rooms.

87
00:05:30.340 --> 00:05:34.650
Now we've got all the information that we need to do our calculations.

88
00:05:34.660 --> 00:05:39.160
We know that it's $30 per room and we know that it's a 6 percent tax rate.

89
00:05:39.160 --> 00:05:40.090
That's all I need.

90
00:05:40.120 --> 00:05:43.600
So let's create some output statements and I'm going to close this down here just to create a little

91
00:05:43.600 --> 00:05:45.490
bit more room.

92
00:05:45.490 --> 00:05:45.870
All right.

93
00:05:45.870 --> 00:05:53.290
So let's go here and we're going to say see out and that's put a slash and here too.

94
00:05:53.320 --> 00:05:54.800
I'd like a space right here.

95
00:05:54.910 --> 00:05:59.610
So I'm going to say estimate for carpet cleaning service

96
00:06:04.660 --> 00:06:06.700
will create a new line here.

97
00:06:08.670 --> 00:06:11.910
Now we want to display the number of rooms to the user.

98
00:06:14.830 --> 00:06:20.180
Say number of rooms and I'll put a dollar sign in here I'm not too worried about the formatting I'm

99
00:06:20.180 --> 00:06:22.920
just using dollars so might as well put the dollar sign here.

100
00:06:23.150 --> 00:06:27.650
And I want to display the number of firms where do I get that like that right from here.

101
00:06:27.650 --> 00:06:32.900
That variable right there the user just entered a number and I stored it in there so that can it contain

102
00:06:33.140 --> 00:06:34.660
whatever they entered.

103
00:06:34.670 --> 00:06:39.320
So there's a number of rooms and then and line.

104
00:06:39.440 --> 00:06:39.750
All right.

105
00:06:39.770 --> 00:06:42.530
Let's run this trial at.

106
00:06:43.520 --> 00:06:49.820
And I've got an error that says I forgot to put an L at the end of the line.

107
00:06:49.820 --> 00:06:50.750
There we go.

108
00:06:51.140 --> 00:06:54.260
So let's run this again.

109
00:06:54.260 --> 00:06:59.290
How many rooms would you like clean that say two rooms clean and estimate for carpet cleaning services

110
00:06:59.300 --> 00:07:00.800
number of rooms.

111
00:07:01.100 --> 00:07:03.030
I don't want a dollar there.

112
00:07:03.260 --> 00:07:08.830
I want dollar for prices so that I'll fix that error.

113
00:07:09.270 --> 00:07:09.770
Two rooms.

114
00:07:09.770 --> 00:07:10.300
Perfect.

115
00:07:10.460 --> 00:07:15.420
OK so now let's start doing some of the calculations but first we need to print out the price per room

116
00:07:17.040 --> 00:07:19.930
and that's a given that was given to us as $30.

117
00:07:20.000 --> 00:07:31.370
So we'll say price per room here we'll put a dollar sign and we'll say 30 we'll use a literal right

118
00:07:31.370 --> 00:07:34.210
in there and we'll say in line.

119
00:07:34.220 --> 00:07:35.670
All right so that's it.

120
00:07:35.750 --> 00:07:37.770
Then we'll say what's the cost.

121
00:07:37.820 --> 00:07:39.240
We'll have to do a calculation.

122
00:07:39.260 --> 00:07:42.870
We'll see see out would be cost.

123
00:07:43.920 --> 00:07:46.090
And again I'll put a dollar sign in here.

124
00:07:48.410 --> 00:07:56.650
And what's the costs going to be while the cost is going to be 30 times the number of rooms.

125
00:07:56.750 --> 00:07:56.960
Right.

126
00:07:56.960 --> 00:08:04.350
$30 per room times the number of rooms and we'll put in new line of DNA.

127
00:08:04.630 --> 00:08:06.080
Let's test this out as we go.

128
00:08:06.080 --> 00:08:08.740
So let's run it.

129
00:08:08.810 --> 00:08:13.420
I went to rooms clean so I expect the costs at this point to be $60.

130
00:08:13.460 --> 00:08:18.420
So two rooms $30 per room cost $60 so we're good.

131
00:08:18.440 --> 00:08:28.580
All right so let's continue and we'll say seek out what's my tax or my sales tax is again I'll use dollar

132
00:08:29.930 --> 00:08:36.540
and my sales tax is going to be the same calculation right thirty times the number of rooms.

133
00:08:37.500 --> 00:08:40.630
And again next you'll cook character right here to get rid of it.

134
00:08:43.380 --> 00:08:51.950
Thirty times the number of rooms times 0.06 which is the tax rate and bine.

135
00:08:52.110 --> 00:08:52.810
I'll save this.

136
00:08:52.800 --> 00:08:54.880
Let's run one more time.

137
00:08:54.960 --> 00:09:03.700
Two rooms cleaned $30 it's $60 six per cent of 60 is $3 to 60 cents.

138
00:09:04.180 --> 00:09:06.810
OK so we're good.

139
00:09:07.260 --> 00:09:10.710
Now we're going to calculate the total estimate which is going to be the costs plus the tax.

140
00:09:10.710 --> 00:09:16.240
But first I just want to print out a nice little line that separates everything together.

141
00:09:16.350 --> 00:09:22.390
That's long enough and up and line at the end.

142
00:09:22.650 --> 00:09:26.670
All right so now let's say what the total estimate is and then we just need to say the estimate is valid

143
00:09:26.670 --> 00:09:37.740
for 30 days and we're done so see out we'll say total estimate and again in dollars is going to be OK

144
00:09:37.790 --> 00:09:39.310
with it to do the calculation again.

145
00:09:39.310 --> 00:09:47.030
So we're going to say 30 times the number of rooms which gives us the cost.

146
00:09:47.050 --> 00:09:47.530
Right.

147
00:09:47.770 --> 00:09:51.740
And I'm going to put some parens around that because I need to add to that.

148
00:09:54.330 --> 00:10:04.800
Plus 30 times the number of rooms times 0.06 which is my sales tax.

149
00:10:04.810 --> 00:10:10.810
So that's my cost plus my sales tax and a newline at the end.

150
00:10:10.940 --> 00:10:23.630
Last thing is that say seek out this estimate is valid for however many days and we said 30

151
00:10:26.650 --> 00:10:33.090
and I put a space in front of the Deja's we have a little room on the line here and I think we're good.

152
00:10:33.090 --> 00:10:35.030
Let me clean this up a little bit down here.

153
00:10:35.030 --> 00:10:37.040
So it all fits a little better.

154
00:10:37.040 --> 00:10:39.860
All right so let's run it and then we'll go over it real quick.

155
00:10:39.860 --> 00:10:43.100
I'm going to save it and run it with control of 5.

156
00:10:43.280 --> 00:10:49.970
How many rooms would you like clean two rooms number of rooms is to the price per room is 30.

157
00:10:50.000 --> 00:10:51.070
The cost is 60.

158
00:10:51.080 --> 00:10:52.630
The taxes 360.

159
00:10:52.630 --> 00:10:59.530
So you would expect the total estimate to be 60 360 which it is this estimate is valid for 30 days.

160
00:10:59.690 --> 00:11:00.570
Let's try it again.

161
00:11:00.860 --> 00:11:04.730
Let's run it again with one room this time.

162
00:11:04.730 --> 00:11:06.390
One room is $30.

163
00:11:06.410 --> 00:11:11.180
The cost is $30 the taxes adulterating total estimate 30 180.

164
00:11:11.210 --> 00:11:12.380
So it looks good.

165
00:11:12.410 --> 00:11:21.480
Don't forget to test with zero so zero rooms cleaned zero cost the Rotax zero estimate.

166
00:11:21.480 --> 00:11:21.740
Great.

167
00:11:21.750 --> 00:11:26.190
Don't worry about testing with illegal values we'll learn how to deal with illegal values later.

168
00:11:26.190 --> 00:11:31.920
So for example expected to use this in a type zero or something positive in the number of rooms that

169
00:11:31.920 --> 00:11:35.240
are going to type in negative 1 or Joe or Frank or anything like that.

170
00:11:35.250 --> 00:11:39.120
As I said we'll deal with exceptions as the course progresses.

171
00:11:39.180 --> 00:11:39.890
So that's it.

172
00:11:39.930 --> 00:11:41.100
That's the program.

173
00:11:41.130 --> 00:11:42.490
It's it works.

174
00:11:42.570 --> 00:11:45.360
It's pretty easy to understand it follows our pseudocode.

175
00:11:45.490 --> 00:11:49.080
But there's a couple of issues here.

176
00:11:49.140 --> 00:11:59.290
First suppose that I want to increase my cost per room or my price per room to $32 and 50 cents.

177
00:11:59.910 --> 00:12:00.830
What do I do.

178
00:12:01.260 --> 00:12:04.190
Well I could do a search and replace.

179
00:12:04.380 --> 00:12:04.610
Right.

180
00:12:04.620 --> 00:12:05.550
Let's do that.

181
00:12:05.610 --> 00:12:08.580
I'll do a search find and replace

182
00:12:11.720 --> 00:12:14.970
and I want to look for 30 and I want to replace it with 30 to 50.

183
00:12:14.960 --> 00:12:21.530
And I want to do it everywhere replace all done close up and run it

184
00:12:24.680 --> 00:12:29.720
so I want to do two rooms two times 30 to 50 is 65.

185
00:12:29.720 --> 00:12:30.380
That's correct.

186
00:12:30.380 --> 00:12:32.600
The tax is thirty three dollars and ninety cents.

187
00:12:32.600 --> 00:12:33.290
That's correct.

188
00:12:33.290 --> 00:12:35.080
The total estimate is correct.

189
00:12:35.090 --> 00:12:36.170
Looks good right.

190
00:12:36.260 --> 00:12:40.490
Except for one little thing this estimate is valid for 32 and a half days.

191
00:12:40.700 --> 00:12:44.160
You can see that the 30 was replaced with 32 and a half.

192
00:12:44.510 --> 00:12:45.410
I didn't want to do that.

193
00:12:45.440 --> 00:12:51.750
So I need to go back to my code and it's changed that to 30 and now we're OK.

194
00:12:51.890 --> 00:12:56.240
This is easy to fix in this example because it's really small but if you've got thousands of lines of

195
00:12:56.240 --> 00:13:01.850
code and you're doing search and replaces like this it's real possible that that 30 is going to be in

196
00:13:01.850 --> 00:13:07.460
different places and it doesn't represent price per room it represents something else and you just really

197
00:13:07.460 --> 00:13:08.930
messed up your program.

198
00:13:08.960 --> 00:13:11.310
You made a lot of changes you did intend to change.

199
00:13:11.310 --> 00:13:13.990
So hopefully you'll see what I mean.

200
00:13:14.150 --> 00:13:19.120
I'm going to undo this 30 and I hope I'm back to where I was.

201
00:13:19.140 --> 00:13:21.120
Yep I'm back to where I was with 30.

202
00:13:21.350 --> 00:13:27.020
What I want to do here is I want to use declared constants rather than these literal constants.

203
00:13:27.020 --> 00:13:31.850
So let's do that first let's just create the variable name will make it a constant so we need something

204
00:13:31.850 --> 00:13:33.790
for the price per room.

205
00:13:33.890 --> 00:13:41.040
So let's create that let's say int price per room and we condition initialize it to 30.

206
00:13:41.600 --> 00:13:46.370
And the idea being instead of using 30 here we'll use that name price per room.

207
00:13:46.620 --> 00:13:47.150
OK.

208
00:13:47.360 --> 00:13:48.220
That's OK.

209
00:13:48.230 --> 00:13:51.750
But why an integer that's really doesn't make too much sense.

210
00:13:51.740 --> 00:13:53.000
It makes sense with 30.

211
00:13:53.060 --> 00:13:58.340
But if I change the price per room 30 to 50 or some real number like that a floating point number.

212
00:13:58.340 --> 00:13:59.690
This worked very well.

213
00:13:59.690 --> 00:14:03.560
So this really should be a double and I'm going to change that right there.

214
00:14:03.560 --> 00:14:08.920
That gives us a floating point number and the last thing I want to do is I want to make it Konst.

215
00:14:09.470 --> 00:14:12.500
I don't want that to change in my program.

216
00:14:12.530 --> 00:14:13.840
Always want it to be 30.

217
00:14:13.940 --> 00:14:21.320
While this program is running OK now if I try to change that right here I'll just show you a quick price

218
00:14:21.320 --> 00:14:21.800
per room.

219
00:14:21.800 --> 00:14:29.120
Let's say I want to change that to 100 and I'll just compile over here I'll get a compiler error that

220
00:14:29.120 --> 00:14:33.400
says error assignment of read only variable price per room.

221
00:14:33.440 --> 00:14:36.650
You just told the compiler that price per room is constant.

222
00:14:36.680 --> 00:14:40.240
And here you tried to change the computer saying no way.

223
00:14:40.370 --> 00:14:42.970
You just told me that this should not be allowed.

224
00:14:43.040 --> 00:14:46.640
So that's one of the benefits of constants as I mentioned in the lecture.

225
00:14:46.820 --> 00:14:48.710
So let me get rid of that.

226
00:14:48.890 --> 00:14:50.740
And so that's one of the constants we need.

227
00:14:50.740 --> 00:14:55.160
We also need another constant up at a 30 point zero in here to be more accurate because it is a real

228
00:14:55.160 --> 00:14:56.540
number.

229
00:14:56.540 --> 00:15:04.550
I need another one for the sales tax so I could say Konst again double and I could say sales tax or

230
00:15:04.550 --> 00:15:06.600
sales rate or whatever you want to call it.

231
00:15:06.770 --> 00:15:09.990
In this case is 0.06.

232
00:15:11.090 --> 00:15:18.850
And then finally let's create another one for the estimate expiry which is the 30 days conc this case

233
00:15:18.980 --> 00:15:26.000
could be an integer and we'll just say estimate expertly and we'll initialize that to 30.

234
00:15:26.240 --> 00:15:30.130
And this will be a good place for comment days.

235
00:15:31.310 --> 00:15:33.400
Okay so now we've got those three conc.

236
00:15:33.410 --> 00:15:39.710
So what we can do now is let's go through our code and will replace that 30 for example with price per

237
00:15:39.710 --> 00:15:44.340
room that 0 0 6 with sales tax and so forth.

238
00:15:44.360 --> 00:15:51.230
This is called refactoring your code refactoring means changing your code to make it better without

239
00:15:51.230 --> 00:15:52.580
changing behavior.

240
00:15:52.580 --> 00:15:54.170
That's real important.

241
00:15:54.170 --> 00:15:59.140
Refractories does not change the behavior of the code it just makes your code better more modifiable

242
00:15:59.180 --> 00:16:01.690
easier to read and so forth.

243
00:16:01.730 --> 00:16:02.740
So let's do that.

244
00:16:02.780 --> 00:16:04.740
I'm going to use price per room here.

245
00:16:04.760 --> 00:16:09.740
Just going to copy and paste it in here pasted in here.

246
00:16:09.770 --> 00:16:17.040
I'll paste it in here and here in here and not in here because that's my expertise.

247
00:16:17.540 --> 00:16:27.100
I'll take sales tax copy that and I'll paste it here as well as over here.

248
00:16:27.930 --> 00:16:33.920
And then finally we'll do the estimate expiry right here.

249
00:16:35.060 --> 00:16:37.660
Alright so now let's run this again.

250
00:16:39.260 --> 00:16:41.150
And the behavior should not change.

251
00:16:41.200 --> 00:16:50.320
I want two rooms and two rooms at $30 is $60 360 sales tax sixty 360's total estimate and it's valid

252
00:16:50.320 --> 00:16:51.270
for 30 days.

253
00:16:51.280 --> 00:16:56.530
Perfect as you can see this code is much more readable now you can actually see what's going on and

254
00:16:56.680 --> 00:17:02.800
more importantly if I want to change the price per room to 30 to 50 I only have to do it in one place

255
00:17:02.800 --> 00:17:03.840
right up here.

256
00:17:03.860 --> 00:17:06.520
Second make this 32 50.

257
00:17:07.030 --> 00:17:09.730
Save it build and run again.

258
00:17:11.720 --> 00:17:20.290
Two rooms 30 to 50 which is $65 as the cost 390 tax 68 90 and it's still valid for 30 days.

259
00:17:20.390 --> 00:17:23.560
So could see the benefits of using declared constants.

260
00:17:23.630 --> 00:17:28.190
You could just make changes in one place you're guaranteed that they're not going to change even if

261
00:17:28.190 --> 00:17:35.380
you made a mistake and it was an accident and it makes your code so much more readable and modifiable.

262
00:17:35.430 --> 00:17:41.190
Now although this code is much better now after refactoring it still has a few problems and those problems

263
00:17:41.190 --> 00:17:43.590
are going to address as the course progresses.

264
00:17:43.770 --> 00:17:49.680
You hopefully have seen that right about here we're doing a calculation and then right here we're doing

265
00:17:49.680 --> 00:17:54.950
the same calculation again and here we're doing the same calculation again.

266
00:17:55.290 --> 00:17:56.770
And here we're doing it again.

267
00:17:56.870 --> 00:18:00.770
OK so that's four places that were doing the same calculation.

268
00:18:00.780 --> 00:18:02.810
That's four places we could mess up.

269
00:18:02.850 --> 00:18:07.740
We really don't want to do that we want to do that calculation exactly in one place and what we'll do

270
00:18:07.740 --> 00:18:11.670
is when we learn about assignment statements a little bit more about mathematical expressions will do

271
00:18:11.670 --> 00:18:17.120
that there and then a little bit later in the course will use functions to do that in exactly one place.

272
00:18:17.130 --> 00:18:21.150
So if you notice that this isn't quite right you see a lot of duplications of code.

273
00:18:21.150 --> 00:18:23.610
You're absolutely right and we're going to handle that as we go.
