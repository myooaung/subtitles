1
00:00:05,590 --> 00:00:09,350
This video we'll look at the last looping construct in C++.

2
00:00:09,440 --> 00:00:15,260
It's called the do while loop the do while loop begins with the do keyword followed by block statement

3
00:00:15,710 --> 00:00:19,890
then the while keyword followed by the loop control expression in parentheses.

4
00:00:19,910 --> 00:00:25,160
Notice that you need a semi-colon at the end of the do while statement in a do while loop you execute

5
00:00:25,160 --> 00:00:28,540
the body of a loop while the conditional expression is true.

6
00:00:28,580 --> 00:00:29,970
Pretty straightforward.

7
00:00:29,990 --> 00:00:34,730
Note that the condition is checked at the end of each iteration that makes the do while loop.

8
00:00:34,730 --> 00:00:36,600
A post test loop.

9
00:00:36,620 --> 00:00:41,050
It also means that you're guaranteed that the loop body will execute at least once.

10
00:00:41,090 --> 00:00:43,210
This comes in very handy in many cases.

11
00:00:43,220 --> 00:00:47,480
You don't have to force our way into the loop like we had to do with the While loop.

12
00:00:47,890 --> 00:00:51,380
Let's see an example of using the do while loop for input validation.

13
00:00:53,620 --> 00:00:56,060
In this example we execute the body of a loop.

14
00:00:56,170 --> 00:00:57,870
Then test the condition.

15
00:00:58,090 --> 00:01:03,170
So we asked the user for a number between 1 and 5 and assign it to the variable number.

16
00:01:03,220 --> 00:01:05,780
Then we test to see if number is out of range.

17
00:01:05,890 --> 00:01:07,760
If it is then we loop again.

18
00:01:07,900 --> 00:01:10,180
If it is in range then the loop terminates.

19
00:01:10,180 --> 00:01:13,750
You can see how much cleaner the logic is in this case.

20
00:01:13,870 --> 00:01:17,080
Also let me talk for a minute about the variable number.

21
00:01:17,080 --> 00:01:20,050
Notice how we declared it outside the loop body.

22
00:01:20,050 --> 00:01:25,390
Since number is used in the while loops condition expression at the bottom A cannot be declared within

23
00:01:25,390 --> 00:01:26,430
the body of the loop.

24
00:01:26,500 --> 00:01:28,870
If you do so you'll get a compiler error.

25
00:01:29,620 --> 00:01:33,190
In this example we're declaring selection as a character type.

26
00:01:33,250 --> 00:01:37,190
It's outside the loop because we're using it in the loop condition at the bottom.

27
00:01:37,300 --> 00:01:38,750
So let's look at the loop.

28
00:01:38,770 --> 00:01:41,550
I always start reading loops at their conditional expression.

29
00:01:41,590 --> 00:01:47,090
In this case we know we're looping while the selection is a lowercase or in our case Y.

30
00:01:47,260 --> 00:01:50,930
If the selection is any other character the loop terminates.

31
00:01:50,950 --> 00:01:53,330
Now let's see what's going on in the loop body.

32
00:01:53,530 --> 00:01:58,930
We see we have two doubles width and height declared and initialized to zero and we asked the user for

33
00:01:58,930 --> 00:02:01,460
these values and read them in from the keyboard.

34
00:02:01,570 --> 00:02:06,670
Then we're calculating the product of the within the height and initializing another double named area.

35
00:02:06,670 --> 00:02:12,780
With that result we display the area to the user and then we ask if they want to calculate another.

36
00:02:12,970 --> 00:02:17,010
Note that we have executed that first iteration of the loop unconditionally.

37
00:02:17,020 --> 00:02:20,130
That means we always execute this loop at least once.

38
00:02:20,140 --> 00:02:24,190
This makes sense in this case since I want to be able to calculate the area.

39
00:02:24,220 --> 00:02:28,750
Now we ask the user if they want to calculate another and we read their response into the selection

40
00:02:28,750 --> 00:02:29,900
variable.

41
00:02:30,010 --> 00:02:32,350
Then we test this variable in the loop condition.

42
00:02:32,350 --> 00:02:38,110
If they entered a lowercase or an upper case why we perform another iteration of the loop and calculate

43
00:02:38,110 --> 00:02:39,000
another area.

44
00:02:39,160 --> 00:02:45,070
If they enter anything else the loop terminates and we display thinks the choice between a while loop

45
00:02:45,070 --> 00:02:47,680
and a do while loop isn't always crystal clear.

46
00:02:47,680 --> 00:02:52,780
However if you know that you must perform at least one iteration of the loop then you should consider

47
00:02:52,780 --> 00:02:55,750
the do while loop as your first alternative.

48
00:02:55,750 --> 00:03:01,210
Let's head over to the IDM We'll see how we can use a do loop to do a real simple menu system.

49
00:03:02,080 --> 00:03:07,910
OK so I mean the ID and let me share an example of the application we're going to build.

50
00:03:07,930 --> 00:03:14,320
Run it now and you could see it's a simple menu driven application there's the menu press 1 2 3 or Q.

51
00:03:14,320 --> 00:03:17,410
If you press 1 you do this if you press to do that.

52
00:03:17,410 --> 00:03:19,540
If you press 3 you do something else.

53
00:03:19,570 --> 00:03:23,330
Obviously the selections could do any kind of behavior depending on your application.

54
00:03:23,350 --> 00:03:25,190
So in this case I enter a selection.

55
00:03:25,190 --> 00:03:30,400
I press number one and it says you chose 1 doing this.

56
00:03:30,490 --> 00:03:34,720
If I press 2 it says you chose to doing that.

57
00:03:34,810 --> 00:03:38,830
Press 3 you chose 3 doing something else.

58
00:03:38,830 --> 00:03:44,350
Obviously if I press a lower case Q or an upper case Q to quit anything else should give me an illegal

59
00:03:44,350 --> 00:03:44,980
entry.

60
00:03:44,980 --> 00:03:47,270
So let's say I pressed 4.

61
00:03:47,560 --> 00:03:49,980
It says here unknown option try again.

62
00:03:50,030 --> 00:03:53,260
Say I pressed P again.

63
00:03:53,290 --> 00:03:54,070
Unknown option.

64
00:03:54,070 --> 00:03:55,030
Try again.

65
00:03:55,030 --> 00:03:59,970
The only valid choices will be 1 2 3 and lowercase are uppercase Q.

66
00:03:59,980 --> 00:04:05,570
So now if I type q the program terminates and says good bye.

67
00:04:05,580 --> 00:04:07,160
OK so that's what we're going to build.

68
00:04:07,260 --> 00:04:12,180
And in the section challenge at the end of the segment you're going to be using this kind of logic to

69
00:04:12,180 --> 00:04:14,300
build a more complex application.

70
00:04:14,400 --> 00:04:17,600
All right so let's start where do we start.

71
00:04:17,730 --> 00:04:21,570
Well we know we need to display a menu at least one time right.

72
00:04:21,600 --> 00:04:26,220
Because the user has to select Q or X or whatever we choose is the exit criteria.

73
00:04:26,310 --> 00:04:28,520
So that's a good choice for a do while loop.

74
00:04:28,740 --> 00:04:35,130
So basically what we're doing the do part which is display the menu while they haven't quit makes sense

75
00:04:35,130 --> 00:04:36,490
so that's what we're going to build.

76
00:04:36,510 --> 00:04:43,440
Now obviously we need a character variable and I'll just call it selection and whatever the user types

77
00:04:43,440 --> 00:04:46,860
in will be stored into that Kerak variable.

78
00:04:46,860 --> 00:04:49,070
Now let's do the do logic here.

79
00:04:49,140 --> 00:04:54,720
We've got a do loop and we want to do the body of the loop.

80
00:04:54,750 --> 00:04:58,890
While a condition is true now what is that condition.

81
00:04:58,890 --> 00:05:04,170
Well we want a loop as long as they haven't typed a lower or an upper case Q So we can see something

82
00:05:04,170 --> 00:05:04,510
like.

83
00:05:04,530 --> 00:05:15,350
While selection is not equal to a lower case Q and selection is not equal to an upper case Q.

84
00:05:16,030 --> 00:05:20,860
OK if you were thinking or here that would not be right and you would test your coding you'll see that

85
00:05:20,860 --> 00:05:22,180
it doesn't work right.

86
00:05:22,560 --> 00:05:26,660
So let's just write a real simple test here before you bother with anything else.

87
00:05:26,730 --> 00:05:35,400
Let's just say in selection no menu no prompting No we're just going to grab a bunch of characters here

88
00:05:35,400 --> 00:05:37,790
and see what happens.

89
00:05:37,830 --> 00:05:44,460
So let's run that OK let's type in a loop.

90
00:05:44,500 --> 00:05:46,100
Q We stop.

91
00:05:46,400 --> 00:05:47,420
Cool that's what we want.

92
00:05:47,440 --> 00:05:49,330
Ms try that again.

93
00:05:50,320 --> 00:05:53,830
A one way loop to loop a three loop for we loop again.

94
00:05:53,830 --> 00:05:58,420
The only time we should stop is when we get an old case or an uppercase Q we stop.

95
00:05:58,420 --> 00:06:00,550
So our logic is correct here.

96
00:06:00,610 --> 00:06:07,810
Right now what we can do is we can actually prompt the user and with the menu we can say see out and

97
00:06:07,810 --> 00:06:13,180
let's just use a newline at the beginning so it gives us a new line every time we do a dash of characters

98
00:06:13,180 --> 00:06:21,490
here and we'll do that and then we'll give them the menu options so you can press one.

99
00:06:21,910 --> 00:06:23,710
And if you press one of Will do this.

100
00:06:23,710 --> 00:06:29,770
Obviously this would be you know at a record or delete a record or do something in a real application

101
00:06:30,940 --> 00:06:33,820
so that would be that.

102
00:06:34,240 --> 00:06:37,840
And I'm just going to copy this and paste it to save a little time here.

103
00:06:42,310 --> 00:06:43,490
So number one.

104
00:06:43,720 --> 00:06:50,310
Number two would be do that number three.

105
00:06:50,440 --> 00:06:53,930
Or option they would be do something else.

106
00:06:55,330 --> 00:06:59,050
And then finally and we can say q or X or whatever letter you like.

107
00:07:00,700 --> 00:07:01,350
To quit

108
00:07:04,510 --> 00:07:11,500
perfect and we'll give them one more little prompt here that says it will put a new line in Frejus to

109
00:07:11,500 --> 00:07:13,630
separate will say enter your selection

110
00:07:16,690 --> 00:07:22,410
Colan no end line here so that looks nicer for them and then we put the selection right into selection

111
00:07:22,420 --> 00:07:22,640
right.

112
00:07:22,660 --> 00:07:27,540
So let's run this and we should see a menu show up and there you go.

113
00:07:27,560 --> 00:07:29,830
Do this do that do something else or quit.

114
00:07:29,840 --> 00:07:34,440
So if we press one we stay in the loop and we display the menu again.

115
00:07:34,490 --> 00:07:35,390
Same thing with two.

116
00:07:35,390 --> 00:07:41,750
Same thing with three four gives us the same issue because we haven't checked for anything that's illegal

117
00:07:41,750 --> 00:07:42,510
right.

118
00:07:42,610 --> 00:07:44,390
5 P whatever.

119
00:07:44,390 --> 00:07:47,820
Now whenever I type Q I stop.

120
00:07:47,840 --> 00:07:53,020
So what I need to do now is decide what the user has typed in and what to do.

121
00:07:53,330 --> 00:07:54,460
OK how do I do that.

122
00:07:54,470 --> 00:07:57,400
Well it's a lot of choices here.

123
00:07:57,440 --> 00:08:02,420
We've got liberals here we got one the two the three these are character riddles so we could certainly

124
00:08:02,420 --> 00:08:04,820
use a switch statement really really easily.

125
00:08:04,910 --> 00:08:07,740
What I'm going to do is I'm going to use an if else if later here.

126
00:08:07,810 --> 00:08:09,880
Again I encourage you to do this with an if.

127
00:08:09,920 --> 00:08:13,500
With a switch statement with all kinds of logic that we can play around with it.

128
00:08:13,520 --> 00:08:14,350
So let's do this.

129
00:08:14,350 --> 00:08:21,920
I say if the selection that the user entered is the character want to remember this is a character so

130
00:08:21,920 --> 00:08:23,860
we need the single quotes.

131
00:08:24,050 --> 00:08:35,240
So if the user entered the one we simply want to say something like see out let's see you chose one

132
00:08:35,600 --> 00:08:47,100
which was do this or let's just say doing this can put an end line at the end else and we don't need

133
00:08:47,100 --> 00:08:51,050
block statements here we could certainly use them and makes it easier to modify our code.

134
00:08:51,150 --> 00:09:01,850
But I wanted to try to keep as much on the screen as I can so else if the selection is a two then what

135
00:09:01,850 --> 00:09:06,240
we want to do here and again I'll just copy and paste this to save a little bit of typing time.

136
00:09:08,260 --> 00:09:12,550
Then you spell that correctly.

137
00:09:12,720 --> 00:09:18,440
That's better you chose to which was doing that

138
00:09:22,990 --> 00:09:24,430
else.

139
00:09:24,930 --> 00:09:29,640
I remember your indentation make it make sure the indentation is correct because it adds to the readability

140
00:09:29,640 --> 00:09:30,750
big time.

141
00:09:30,750 --> 00:09:38,190
So if the selection is equal to three then in this case copying that again

142
00:09:41,650 --> 00:09:52,170
you chose three which was doing something else and then so now what where are we at.

143
00:09:52,400 --> 00:09:59,220
Well let's worry about the unknown option as the bottom else of this condition.

144
00:09:59,270 --> 00:10:03,470
So if nothing else matches then we're going to say oh sorry try again.

145
00:10:03,830 --> 00:10:09,760
But in this case if you really think about this one two three and Q are all valid.

146
00:10:09,890 --> 00:10:10,330
Right.

147
00:10:10,400 --> 00:10:23,600
So let's deal with Q Ossett else if selection is equal to AQ or not is that here we need more whereas

148
00:10:23,600 --> 00:10:29,190
in the wild we need a demand or selection is equal to or lower case.

149
00:10:29,190 --> 00:10:35,110
Q Then in this case really all we want to say is goodbye because Luke's going to fail we're going to

150
00:10:35,110 --> 00:10:37,070
be out of here in a minute.

151
00:10:37,920 --> 00:10:38,610
OK.

152
00:10:38,990 --> 00:10:41,760
So that takes care of that case.

153
00:10:42,620 --> 00:10:46,260
So what's left this else to here.

154
00:10:46,460 --> 00:10:47,750
So what happened.

155
00:10:47,750 --> 00:10:49,130
Well it's not a one.

156
00:10:49,160 --> 00:10:53,720
It's not a 2 it's not a 3 it's not a Q It's got to be something that I don't know and I really don't

157
00:10:53,720 --> 00:10:55,310
care it's something that's illegal.

158
00:10:55,310 --> 00:11:01,230
So in this case we're just say out let's say something like a known option.

159
00:11:01,310 --> 00:11:06,570
You spell that right and maybe try again.

160
00:11:08,310 --> 00:11:12,520
We could do something like that.

161
00:11:12,780 --> 00:11:16,550
Let me clear the space up and let's walk through this and make sure we're not missing anything.

162
00:11:16,560 --> 00:11:20,050
We've got our selection variable declared that's important.

163
00:11:20,100 --> 00:11:21,450
We're in the do.

164
00:11:21,570 --> 00:11:24,690
We're going to execute this code immediately right.

165
00:11:24,690 --> 00:11:27,320
This is unconditional the first time in we're in.

166
00:11:27,480 --> 00:11:32,940
So we're displaying the menu and we're reading the selection of the user if the user selects one we

167
00:11:32,940 --> 00:11:39,540
print we output you chose one doing this and that's it we're out of this if else if latter we test down

168
00:11:39,540 --> 00:11:47,170
here and we loop while the selection is not lowercase or uppercase Q We come back up.

169
00:11:47,280 --> 00:11:50,160
We display the menu again if they typed three.

170
00:11:50,370 --> 00:11:53,990
We execute this code right here and we keep looping.

171
00:11:54,240 --> 00:11:55,120
If they type.

172
00:11:55,170 --> 00:11:57,820
Q What do we do we simply say goodbye.

173
00:11:58,050 --> 00:12:02,890
And then this condition fires at the end it will fail and we're out of the loop.

174
00:12:04,010 --> 00:12:06,710
If none of these are true we just say unknown option.

175
00:12:06,710 --> 00:12:07,090
I don't know.

176
00:12:07,090 --> 00:12:08,770
You've entered.

177
00:12:08,790 --> 00:12:13,960
OK so let's try this and again I'm in the section 9 workspace and the do wild project.

178
00:12:14,280 --> 00:12:15,480
So let's build and run

179
00:12:18,840 --> 00:12:20,740
and we've got a clean compile and a run.

180
00:12:20,820 --> 00:12:21,930
So let's try this.

181
00:12:21,930 --> 00:12:24,730
Press 1 do this.

182
00:12:24,750 --> 00:12:28,440
You chose one doing this exactly what we want to.

183
00:12:28,980 --> 00:12:34,960
You chose two doing that three you chose three doing something else.

184
00:12:35,250 --> 00:12:38,460
Let's say we press for unknown option try again.

185
00:12:38,460 --> 00:12:40,680
But notice how we don't get out of the loop.

186
00:12:40,800 --> 00:12:42,360
We don't want to get out of the loop right.

187
00:12:42,360 --> 00:12:45,570
We want to ask them to do to enter Q If they want to get out.

188
00:12:45,570 --> 00:12:53,150
So at this point we can press an uppercase Q And there it is goodbye and the program is finished ok

189
00:12:53,570 --> 00:13:00,700
really really common use case is this idea of menu driven programs you want to display that menu the

190
00:13:00,700 --> 00:13:09,430
first time ask the user for this election and basically use an if else if latter here or switch statement

191
00:13:09,430 --> 00:13:10,590
would work here.

192
00:13:10,660 --> 00:13:14,530
Try rewriting this program using a switch statement you'll see it's pretty easy to do as well.

193
00:13:14,530 --> 00:13:16,350
Same same logic really.

194
00:13:16,360 --> 00:13:16,840
OK.

195
00:13:16,990 --> 00:13:21,670
So that's pretty much it in the challenge exercise at the end of the section we're actually going to

196
00:13:21,670 --> 00:13:25,870
do stuff when the user presses one we're going to use a vector and you would be adding things to the

197
00:13:25,870 --> 00:13:30,460
vector and displaying the vector elements and so forth depending on what they choose.

198
00:13:30,640 --> 00:13:32,250
OK so that's the end of this video.

199
00:13:32,260 --> 00:13:38,140
I encourage you like I said to walk through this and tweak it and change it and change his tune or and

200
00:13:38,140 --> 00:13:39,120
see why it doesn't work.

201
00:13:39,130 --> 00:13:42,760
Understand that that's really really important that's a very common mistake.

202
00:13:42,760 --> 00:13:44,210
All right I'll see you in the next video.
