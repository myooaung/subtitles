1
00:00:05,690 --> 00:00:12,560
In this video we'll learn about infinite loops an infinite loop is often called an endless loop an infinite

2
00:00:12,590 --> 00:00:16,710
loop is a loop whose control expression always evaluates to true.

3
00:00:16,910 --> 00:00:22,590
So it iterates over and over usually infinite loops or mistakes by the programmer.

4
00:00:22,610 --> 00:00:27,490
If you have an infinite loop it's pretty easy to know since the program does something or does nothing.

5
00:00:27,500 --> 00:00:28,780
Over and over again.

6
00:00:28,820 --> 00:00:30,830
So we find and fix the problem.

7
00:00:30,830 --> 00:00:35,750
However sometimes infinite loops are written as infinite loops on purpose and programmers use break

8
00:00:35,750 --> 00:00:39,740
statements and strategic places to eventually break out of the loop.

9
00:00:40,160 --> 00:00:42,940
There are cases where this makes sense and could be justified.

10
00:00:43,040 --> 00:00:48,020
However writing an infinite loop and using break statements to terminate the loop is usually bad practice

11
00:00:48,020 --> 00:00:54,200
and should be rewritten so the loop condition expression is descriptive of what the loop is doing.

12
00:00:54,260 --> 00:00:59,610
Here are a couple of examples of infinite loops that are appropriate and in fact necessary Infinity

13
00:00:59,680 --> 00:01:04,460
event loops are commonly used and event driven programs such as those you find on mobile devices and

14
00:01:04,460 --> 00:01:09,620
embedded systems in these programs the program loops forever listening for mouse clicks mouse movements

15
00:01:09,620 --> 00:01:12,190
touches and so forth and reacting to them.

16
00:01:12,500 --> 00:01:15,550
This continues as long as the program is running.

17
00:01:15,560 --> 00:01:20,360
Another example of an endless loop is an operating system an operating system is constantly looping

18
00:01:20,360 --> 00:01:23,630
handling input output handling resources and so forth.

19
00:01:23,660 --> 00:01:26,770
It only shuts down when you shut down your computer.

20
00:01:26,780 --> 00:01:31,410
Let's see a few examples of infinite loops in C++.

21
00:01:31,630 --> 00:01:34,040
First let's look at an infinite for loop.

22
00:01:34,060 --> 00:01:37,060
Remember that all three expressions in the for loop are optional.

23
00:01:37,120 --> 00:01:40,270
So if you omit all three you get just two semi-colons.

24
00:01:40,270 --> 00:01:43,960
By definition in C++ that's an infinite loop.

25
00:01:43,960 --> 00:01:47,570
The output statement will be displayed as long as the program is running.

26
00:01:48,010 --> 00:01:49,630
Let's look at a while loop.

27
00:01:50,050 --> 00:01:52,180
Here's an example of an infinite while loop.

28
00:01:52,180 --> 00:01:54,740
It's probably exactly what you were thinking of.

29
00:01:54,760 --> 00:02:00,270
While true will always be true and the output statement will execute over and over again.

30
00:02:00,370 --> 00:02:02,870
Of course we don't have to use the true keyword.

31
00:02:03,010 --> 00:02:04,870
We can use an expression that's always true.

32
00:02:04,870 --> 00:02:10,360
So if we say while 10 is less than 12 since 10 is always less than 12 it a loop forever.

33
00:02:10,360 --> 00:02:11,640
You get the idea.

34
00:02:11,680 --> 00:02:15,250
Finally let's look at an infinite do while loop again.

35
00:02:15,360 --> 00:02:17,180
The loop condition will always be true.

36
00:02:17,190 --> 00:02:19,820
So the output statement repeats forever.

37
00:02:19,830 --> 00:02:20,640
OK so what.

38
00:02:20,640 --> 00:02:22,310
Why would I ever do this.

39
00:02:22,440 --> 00:02:27,180
Well you might write an event loop like this but more often you see code that looks more like the following.

40
00:02:28,240 --> 00:02:32,920
Note that in this example we have an infinite loop since while true will always be true.

41
00:02:32,950 --> 00:02:37,170
However we have a strategically placed break statement that terminates the loop.

42
00:02:37,180 --> 00:02:39,750
Let's walk through the example inside the loop.

43
00:02:39,760 --> 00:02:42,100
We declare a character variable named again.

44
00:02:42,310 --> 00:02:47,080
We asked the user if they want to loop again and read their response as a character into the variable

45
00:02:47,080 --> 00:02:47,650
again.

46
00:02:47,980 --> 00:02:53,650
If again is uppercase and or lowercase and then we break and terminate the loop if they enter anything

47
00:02:53,650 --> 00:02:55,550
else we loop again.

48
00:02:55,660 --> 00:02:58,470
This is an example of an endless loop that might be ok.

49
00:02:58,510 --> 00:03:04,170
However best practice suggests that the loop condition be more informative of when the loop iterates.

50
00:03:04,180 --> 00:03:07,990
If I was doing the code review of this code I would refactor it to do just that.

51
00:03:07,990 --> 00:03:12,180
However you do see code like this out there and now you know how it works.

52
00:03:12,370 --> 00:03:14,670
That completes this video in the next video.

53
00:03:14,680 --> 00:03:16,770
We'll see how we can nest loops one within the other.
