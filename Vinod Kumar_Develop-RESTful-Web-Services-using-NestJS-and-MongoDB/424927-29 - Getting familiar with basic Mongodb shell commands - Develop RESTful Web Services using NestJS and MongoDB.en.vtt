WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.080
in this lecture,

00:00:01.080 --> 00:00:04.180
let's learn about some of the basic commanded mongo DB,

00:00:04.180 --> 00:00:06.690
although in orderto work with Mongo db,

00:00:06.690 --> 00:00:07.830
Why are less chairs?

00:00:07.830 --> 00:00:09.200
We don't really need to know this,

00:00:09.200 --> 00:00:11.500
but in case if you're adding data,

00:00:11.500 --> 00:00:12.460
why are Nestor's?

00:00:12.460 --> 00:00:17.290
We can verify that by coming to this convention and then checking our database.

00:00:17.290 --> 00:00:21.550
So the first comment we have already thing called Shore DBS our debates,

00:00:21.550 --> 00:00:22.730
which is nothing more sure.

00:00:22.730 --> 00:00:23.480
Data basis,

00:00:23.480 --> 00:00:28.270
which shows the list of databases that are currently available in the mongo DB Server.

00:00:28.270 --> 00:00:29.350
However,

00:00:29.350 --> 00:00:33.130
in the beginning I mentioned that when you typed among go command and president or it'll

00:00:33.130 --> 00:00:35.050
connect to a DB called the Test.

00:00:35.050 --> 00:00:39.950
But I don't see that over here because they're either tested every but because there is no

00:00:39.950 --> 00:00:40.820
content in it.

00:00:40.820 --> 00:00:42.600
It is not being listed out here,

00:00:42.600 --> 00:00:45.500
so it's not actually committed to the secondary storage.

00:00:45.500 --> 00:00:49.260
But if I want to know what is our database that I'm currently connected toe,

00:00:49.260 --> 00:00:51.760
I can take the commander db and press enter.

00:00:51.760 --> 00:00:52.610
Basically,

00:00:52.610 --> 00:00:55.650
DB is an object on when you take the object.

00:00:55.650 --> 00:00:58.550
It actually shows what is the name of that object,

00:00:58.550 --> 00:01:01.550
and it is test if you want to switch to a different database.

00:01:01.550 --> 00:01:02.120
For example,

00:01:02.120 --> 00:01:04.540
if I want to connect your database called training,

00:01:04.540 --> 00:01:06.450
I can type your use,

00:01:06.450 --> 00:01:08.590
training and press enter.

00:01:08.590 --> 00:01:13.770
And now it's a switch to the TV called training and by typing DB pressing enter,

00:01:13.770 --> 00:01:17.070
you can see that it is a new database called training.

00:01:17.070 --> 00:01:17.960
However,

00:01:17.960 --> 00:01:19.440
if I typed the command show,

00:01:19.440 --> 00:01:20.940
DBS are DBS,

00:01:20.940 --> 00:01:23.450
it will still show me only the admin,

00:01:23.450 --> 00:01:24.520
confident local,

00:01:24.520 --> 00:01:25.860
not the training.

00:01:25.860 --> 00:01:29.570
And that's primarily because I don't have any data in the current database,

00:01:29.570 --> 00:01:30.450
which is called Training.

00:01:30.450 --> 00:01:33.620
Unlike RGB means you don't have to create a table,

00:01:33.620 --> 00:01:35.060
which is called US collection.

00:01:35.060 --> 00:01:36.530
Over here in odd ones,

00:01:36.530 --> 00:01:39.150
you can simply start adding a data toe.

00:01:39.150 --> 00:01:40.660
A non existing collection,

00:01:40.660 --> 00:01:42.950
a collection get automatically created.

00:01:42.950 --> 00:01:46.560
You also have a command called debido Create collection,

00:01:46.560 --> 00:01:48.850
but we don't have to necessarily give that.

00:01:48.850 --> 00:01:53.640
So in order to create a database collection called contacts,

00:01:53.640 --> 00:01:58.150
I can simply type here db dot contacts and then say,

00:01:58.150 --> 00:02:04.980
Don't we can issue commands like save or insert so I can type your sale and then I need to

00:02:04.980 --> 00:02:07.530
supply a job basket object.

00:02:07.530 --> 00:02:09.350
Are Jason object?

00:02:09.350 --> 00:02:11.540
It's not necessarily a Jason.

00:02:11.540 --> 00:02:13.880
I can simply give a javascript object.

00:02:13.880 --> 00:02:14.560
For example,

00:02:14.560 --> 00:02:19.310
Jason objects will have the key value pairs where keys are always gonna be string.

00:02:19.310 --> 00:02:20.120
But in Javascript.

00:02:20.120 --> 00:02:21.790
Just a identified,

00:02:21.790 --> 00:02:22.360
for example,

00:02:22.360 --> 00:02:30.160
are type Your name is Let's be Not on email is let's say we know at the rate we know dot co

00:02:30.160 --> 00:02:33.890
close the curly record andan their own bracket for the same function.

00:02:33.890 --> 00:02:35.160
Nor does that say,

00:02:35.160 --> 00:02:35.970
with a function.

00:02:35.970 --> 00:02:39.600
And I'm supplying a JavaScript object over here when I pressed.

00:02:39.600 --> 00:02:40.580
Enter it,

00:02:40.580 --> 00:02:41.850
SIMPLEs Is that right?

00:02:41.850 --> 00:02:42.360
Result.

00:02:42.360 --> 00:02:45.400
An inserted number off inserted record is one,

00:02:45.400 --> 00:02:49.160
which also means I can insert multiple records as well.

00:02:49.160 --> 00:02:49.710
Now,

00:02:49.710 --> 00:02:52.140
if I type short DBS are short DBS.

00:02:52.140 --> 00:02:55.470
You'll see that there is also a database called the Training,

00:02:55.470 --> 00:02:56.630
and no one works.

00:02:56.630 --> 00:02:59.820
This chaining delivers I can access from other applications.

00:02:59.820 --> 00:03:00.350
Also,

00:03:00.350 --> 00:03:03.480
we can also add a new document,

00:03:03.480 --> 00:03:09.120
which is equal in the very card in RD Bemis using the insert command so I can type your

00:03:09.120 --> 00:03:10.470
David or contact,

00:03:10.470 --> 00:03:10.870
start,

00:03:10.870 --> 00:03:13.240
insert and then supply.

00:03:13.240 --> 00:03:17.080
Let a name that start Sham e mail.

00:03:17.080 --> 00:03:21.630
Let's give Sham at example dot com Onda,

00:03:21.630 --> 00:03:26.520
Unlike are the women's where the columns off multiple rows are supposed to be identical.

00:03:26.520 --> 00:03:27.830
I can give different values.

00:03:27.830 --> 00:03:28.340
For example,

00:03:28.340 --> 00:03:34.040
I can also say city off bangle and then close the curly bracket and press enter.

00:03:34.040 --> 00:03:36.250
You'll see that it is inserted.

00:03:36.250 --> 00:03:39.380
Number of records is one just like the previous one.

00:03:39.380 --> 00:03:42.890
There is a minor difference between insert and sale,

00:03:42.890 --> 00:03:47.110
which is nothing but insert always tries to insert at a card,

00:03:47.110 --> 00:03:50.220
whereas Sale tries to update a record.

00:03:50.220 --> 00:03:54.160
If the record already exists based on a property called Underscore 80.

00:03:54.160 --> 00:03:54.900
What is that?

00:03:54.900 --> 00:03:58.050
We didn't give any special primary key kind of stuff,

00:03:58.050 --> 00:04:02.580
but by default Mongo db documents have a underscore idea property.

00:04:02.580 --> 00:04:05.800
If I don't supply that didn't get automatically created.

00:04:05.800 --> 00:04:06.610
Soto,

00:04:06.610 --> 00:04:09.550
view the content off our collection Right now,

00:04:09.550 --> 00:04:12.800
I can issue a command called find our find.

00:04:12.800 --> 00:04:16.400
One find will give you the list off all the documents,

00:04:16.400 --> 00:04:20.340
but eventually will only see the 1st 2 20 off them here on the console.

00:04:20.340 --> 00:04:24.790
But find one will give the very first document that is inserted.

00:04:24.790 --> 00:04:30.250
So I'm gonna clear the screen once and then type here show collections,

00:04:30.250 --> 00:04:34.120
which is going to tell you what are the collections that exist in the current DB.

00:04:34.120 --> 00:04:41.900
So now I can say db dot contacts Don't find one no notice find one is given in camel case.

00:04:41.900 --> 00:04:43.270
If a press enter,

00:04:43.270 --> 00:04:48.200
you'll see that the very first to document I inserted is listed out with the three

00:04:48.200 --> 00:04:52.630
properties while I give only to off them I gave name and email but there is also an

00:04:52.630 --> 00:04:58.600
underscore 80 and then underscore idea is supposed to be unique across all the documents

00:04:58.600 --> 00:04:59.910
off a single collection.

00:04:59.910 --> 00:05:02.270
We can give any kind of values.

00:05:02.270 --> 00:05:05.390
But if you don't do an object off a classical,

00:05:05.390 --> 00:05:06.950
objectivity will be created.

00:05:06.950 --> 00:05:11.940
And I really speaking this is the actual idee on These are the rest of the properties that

00:05:11.940 --> 00:05:12.500
I give.

00:05:12.500 --> 00:05:17.560
If I want a list of all the documents in the contacts collection I can say here db dot

00:05:17.560 --> 00:05:18.810
contact start,

00:05:18.810 --> 00:05:22.600
find But this will give you in an unformed it'd way.

00:05:22.600 --> 00:05:23.180
As you can see,

00:05:23.180 --> 00:05:24.370
it is showing you like this.

00:05:24.370 --> 00:05:25.560
But if you want oh,

00:05:25.560 --> 00:05:30.240
former daddy can also are there another function called called Pretty on.

00:05:30.240 --> 00:05:35.220
This will probably former that and then show you in a different way while executing the

00:05:35.220 --> 00:05:36.030
find command.

00:05:36.030 --> 00:05:38.050
You can also supply some conditions.

00:05:38.050 --> 00:05:38.770
For example,

00:05:38.770 --> 00:05:43.740
let's say I want to find the document where email is sham at example dot com.

00:05:43.740 --> 00:05:49.690
I can basically copy this particular Kiva loop here and then clear the screen type David or

00:05:49.690 --> 00:05:51.310
Contact start find.

00:05:51.310 --> 00:05:53.610
And then I'm gonna supply JavaScript.

00:05:53.610 --> 00:05:55.990
Object with this key value pairs,

00:05:55.990 --> 00:05:58.580
and now this will be considered a rare condition,

00:05:58.580 --> 00:06:00.050
so it's equal in tow.

00:06:00.050 --> 00:06:00.550
Select.

00:06:00.550 --> 00:06:01.850
Start from contacts.

00:06:01.850 --> 00:06:08.580
We're email equals toe sham at example dot com I pressed enter and you can see I got the

00:06:08.580 --> 00:06:11.680
result once again if I wanted to do the formatting,

00:06:11.680 --> 00:06:12.240
either again,

00:06:12.240 --> 00:06:20.000
use find one are I can use find dot pretty so I can take your find dot pretty like this.

00:06:20.000 --> 00:06:26.500
That's enter all I could have used something like Find one because I know that based on an

00:06:26.500 --> 00:06:26.870
email,

00:06:26.870 --> 00:06:29.440
I may have either zero or one record.

00:06:29.440 --> 00:06:31.090
So when I pressed Enter,

00:06:31.090 --> 00:06:33.250
you can see a similar put over here,

00:06:33.250 --> 00:06:40.150
although we can perform lots of operations like update or remove our indexing and many

00:06:40.150 --> 00:06:40.800
other things.

00:06:40.800 --> 00:06:44.870
Those are beyond the scope of this particular training because we want to do all those

00:06:44.870 --> 00:06:48.040
things using a nest application rather than the Mongo DB shell.

00:06:48.040 --> 00:06:50.620
But if you're interested to know more about this,

00:06:50.620 --> 00:06:53.250
I do have a course on Mongo DB fundamentals,

00:06:53.250 --> 00:06:55.370
which colors many commands and features,

00:06:55.370 --> 00:06:56.850
including indexes.

00:06:56.850 --> 00:06:58.400
So that's all for this lecture.

00:06:58.400 --> 00:06:59.720
In the next lecture,

00:06:59.720 --> 00:07:05.030
let's create a new next year's project that can communicate with this mongrel bizarre work

00:07:05.030 --> 00:07:07.400
for working with rest endpoint.

