WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.200
in this lecture,

00:00:01.200 --> 00:00:07.540
let's understand the use off valuation pipe for which I've created a brand new this chase

00:00:07.540 --> 00:00:10.290
project or the next validation demo.

00:00:10.290 --> 00:00:16.000
And I opened the same thing in visual studio court where I have a controller for locals

00:00:16.000 --> 00:00:16.750
3000.

00:00:16.750 --> 00:00:19.050
I don't need any off these things.

00:00:19.050 --> 00:00:24.400
So I'm gonna get it up the same and then also provide a part here so we can receive request

00:00:24.400 --> 00:00:28.610
for local streeters and slash contacts on.

00:00:28.610 --> 00:00:32.820
I'm gonna write one function here for handling the post to submission,

00:00:32.820 --> 00:00:35.470
and we'll call this US created contact,

00:00:35.470 --> 00:00:38.440
which is supposed to receive the payload,

00:00:38.440 --> 00:00:41.050
which is nothing but the body off the request.

00:00:41.050 --> 00:00:41.920
Andi,

00:00:41.920 --> 00:00:43.920
toe associate the request body.

00:00:43.920 --> 00:00:49.150
I'll be using the body decorator toe a variable for contact.

00:00:49.150 --> 00:00:53.840
And then all I'm gonna do is to simply written the same thing back to the user.

00:00:53.840 --> 00:01:00.850
But I want toe validate the data sent by the user toe match my own data type.

00:01:00.850 --> 00:01:02.830
But I don't have a day that I've yet.

00:01:02.830 --> 00:01:08.090
So what I can do that can create a regular jealously plus over here are types of plus

00:01:08.090 --> 00:01:10.890
called contact and then say that Hey,

00:01:10.890 --> 00:01:15.270
the body must match the fields defined in the contact.

00:01:15.270 --> 00:01:15.750
Plus,

00:01:15.750 --> 00:01:16.790
first of all,

00:01:16.790 --> 00:01:18.480
let's create a contact last.

00:01:18.480 --> 00:01:24.870
So I'm gonna go to the terminal and then tape next G four generate and then tape seal our

00:01:24.870 --> 00:01:28.250
class and then I'm gonna type your class name called Contact.

00:01:28.250 --> 00:01:31.270
This is simply going to create a tight script File,

00:01:31.270 --> 00:01:31.580
Corp.

00:01:31.580 --> 00:01:35.150
Contact tortillas and contact Dark Spectre tears.

00:01:35.150 --> 00:01:39.280
Now let's go back to our court on then open the contact,

00:01:39.280 --> 00:01:39.880
our tears,

00:01:39.880 --> 00:01:40.760
which is right here.

00:01:40.760 --> 00:01:44.040
It's been exported as class contact.

00:01:44.040 --> 00:01:46.320
That's a couple of members here.

00:01:46.320 --> 00:01:52.020
So for our contact object represents Islay name and email where when the user sense the

00:01:52.020 --> 00:01:52.270
data,

00:01:52.270 --> 00:01:53.590
it is only the name and email.

00:01:53.590 --> 00:01:55.310
So I'm gonna create two variables here.

00:01:55.310 --> 00:01:57.660
Name off type string on,

00:01:57.660 --> 00:02:00.900
then as a email off type string as well.

00:02:00.900 --> 00:02:04.240
But I may want to do some validations for days.

00:02:04.240 --> 00:02:05.070
For example,

00:02:05.070 --> 00:02:06.950
name is mandatory field,

00:02:06.950 --> 00:02:12.420
as the less the minimum number of characters for name expected is three maximum,

00:02:12.420 --> 00:02:13.070
you misapply.

00:02:13.070 --> 00:02:14.410
Probably 20.

00:02:14.410 --> 00:02:16.830
Email is also a mandatory field,

00:02:16.830 --> 00:02:22.880
but also it must be a valid email with under it on the dot to do all these validations,

00:02:22.880 --> 00:02:26.770
we made different on the validation pipe uploaded by next Jerious.

00:02:26.770 --> 00:02:30.420
But Validation Pipe uses a very powerful,

00:02:30.420 --> 00:02:32.700
jealous replied very core plus validator,

00:02:32.700 --> 00:02:33.820
which is over here,

00:02:33.820 --> 00:02:38.080
as you can see the documentation there given how to work with this.

00:02:38.080 --> 00:02:40.680
So the first thing I have to do is tow NPM,

00:02:40.680 --> 00:02:42.220
install class validator,

00:02:42.220 --> 00:02:46.140
and then I can start using the decorators that they're provided,

00:02:46.140 --> 00:02:51.480
like Lend for a string and I can say the minimum length is 10 characters.

00:02:51.480 --> 00:02:52.780
Maximum is 20.

00:02:52.780 --> 00:02:53.430
In our case,

00:02:53.430 --> 00:02:55.750
I may say three comma 25 probably.

00:02:55.750 --> 00:03:01.830
We may also use at ease email on the email field so that it is supposed to be a valid email

00:03:01.830 --> 00:03:01.830
.

00:03:01.830 --> 00:03:02.730
I'm like this.

00:03:02.730 --> 00:03:04.530
There are many decorators.

00:03:04.530 --> 00:03:07.050
Probably you can have a look at the same here,

00:03:07.050 --> 00:03:10.350
so the first thing we have to do is to install the class validator.

00:03:10.350 --> 00:03:11.630
So let's do the same thing.

00:03:11.630 --> 00:03:15.590
I'm gonna type your NPM I class dash validator.

00:03:15.590 --> 00:03:16.390
Also,

00:03:16.390 --> 00:03:20.140
let's add another library called Class Transformer.

00:03:20.140 --> 00:03:27.130
This is useful for transforming a string toe respective journalistic object off our class

00:03:27.130 --> 00:03:29.090
data type press enter.

00:03:29.090 --> 00:03:32.280
Now that the installation is done,

00:03:32.280 --> 00:03:34.970
let's go back to be a score on the first of all,

00:03:34.970 --> 00:03:39.350
let's add an empty import statement like this and say import.

00:03:39.350 --> 00:03:42.170
And in tickle abrogate from Anakin,

00:03:42.170 --> 00:03:44.390
state class validator is over here.

00:03:44.390 --> 00:03:50.090
And now I can come down toe this name and then they at the rate he's not empty.

00:03:50.090 --> 00:03:53.950
This will ensure that name is not empty.

00:03:53.950 --> 00:03:54.880
The same thing.

00:03:54.880 --> 00:03:56.730
We're gonna play for email also.

00:03:56.730 --> 00:03:58.270
So I'm gonna copy this.

00:03:58.270 --> 00:04:00.550
Based the same thing over here.

00:04:00.550 --> 00:04:01.590
Onda.

00:04:01.590 --> 00:04:03.720
Let's make some room for me.

00:04:03.720 --> 00:04:07.340
Let's also are another decorated that the minimum lent off.

00:04:07.340 --> 00:04:11.340
This is three letters and maximum is 20 or 25.

00:04:11.340 --> 00:04:15.010
So I can say that the red lent and then type here.

00:04:15.010 --> 00:04:15.860
Three Come on,

00:04:15.860 --> 00:04:16.670
25.

00:04:16.670 --> 00:04:17.620
Similarly,

00:04:17.620 --> 00:04:21.450
I can come to the email and then say it must be an email.

00:04:21.450 --> 00:04:23.130
Second tape your east email.

00:04:23.130 --> 00:04:29.310
We can also say that they all have to be string data types so I can take your activate

00:04:29.310 --> 00:04:30.340
these streams,

00:04:30.340 --> 00:04:30.850
Andi,

00:04:30.850 --> 00:04:36.950
that will ensure that numerical values are not applicable for these variables With these

00:04:36.950 --> 00:04:38.760
decorators on these fields.

00:04:38.760 --> 00:04:44.440
Let's go back door at controller map dysfunction of the post request handler so that I can

00:04:44.440 --> 00:04:46.370
do by typing at the right post.

00:04:46.370 --> 00:04:52.540
Andi also will say attended Use pipes on the point that I'm interested to use is the

00:04:52.540 --> 00:04:57.870
valuation pipe import the team from next year's common on automatically.

00:04:57.870 --> 00:05:02.880
Our payload will now be validated against the data date that I'm going to specify here

00:05:02.880 --> 00:05:03.570
things.

00:05:03.570 --> 00:05:04.970
I didn't mention anything here.

00:05:04.970 --> 00:05:09.800
The valuation pipe doesn't relate this object with the contact last year.

00:05:09.800 --> 00:05:14.350
So I have to say your contact colon off type contact.

00:05:14.350 --> 00:05:19.710
I know my model class that I have created has all the valuations on that would be now

00:05:19.710 --> 00:05:21.650
validated by this validation pipe.

00:05:21.650 --> 00:05:24.450
If there is any valuation errors,

00:05:24.450 --> 00:05:28.040
it will be automatically reported to the user with error.

00:05:28.040 --> 00:05:32.130
Court 400 Because it's bad requests on bad input.

00:05:32.130 --> 00:05:33.380
Let's go check it out.

00:05:33.380 --> 00:05:35.300
First were toe start the server.

00:05:35.300 --> 00:05:43.120
I'm gonna type your NPM run start colon del press enter understand what is really Let's go

00:05:43.120 --> 00:05:44.310
to the postman.

00:05:44.310 --> 00:05:46.980
Make a request for the Ural.

00:05:46.980 --> 00:05:53.870
Using the post on the Ural is nothing but http equal and local host Colin 3000 slash

00:05:53.870 --> 00:06:00.110
contacts I have to send in a body on the body is going to be a raw data in the form off

00:06:00.110 --> 00:06:00.770
Jason.

00:06:00.770 --> 00:06:07.340
I'm gonna simply send an empty JavaScript object and click on Sane because there is a

00:06:07.340 --> 00:06:08.650
valuation tool applied.

00:06:08.650 --> 00:06:14.330
I should get some errors and you can see that the head of state escort is 400 the messages

00:06:14.330 --> 00:06:17.170
and ari off all the violations that I violated.

00:06:17.170 --> 00:06:18.170
For example,

00:06:18.170 --> 00:06:19.580
as for his name is concerned.

00:06:19.580 --> 00:06:21.250
Name must be a string.

00:06:21.250 --> 00:06:23.820
It must be longer than R equals 23 characters.

00:06:23.820 --> 00:06:25.240
Name should not be empty.

00:06:25.240 --> 00:06:26.230
Likewise,

00:06:26.230 --> 00:06:27.840
you can see that it's his email.

00:06:27.840 --> 00:06:28.930
Must be an email.

00:06:28.930 --> 00:06:30.950
Must be a string as a less.

00:06:30.950 --> 00:06:31.990
It should not be empty.

00:06:31.990 --> 00:06:34.870
So if I simply send here name,

00:06:34.870 --> 00:06:37.030
colon and interesting email,

00:06:37.030 --> 00:06:40.740
colon and industry name must be string on email,

00:06:40.740 --> 00:06:41.530
most blistering.

00:06:41.530 --> 00:06:44.060
They are satisfied because I'm sending a string,

00:06:44.060 --> 00:06:46.930
but the other ones are not satisfied,

00:06:46.930 --> 00:06:50.050
so they will still remain as errors as you can see.

00:06:50.050 --> 00:06:52.440
But if I send a valued name,

00:06:52.440 --> 00:06:54.350
that's maybe not and take on send.

00:06:54.350 --> 00:06:55.860
My name is okay,

00:06:55.860 --> 00:06:57.590
but email is not okay,

00:06:57.590 --> 00:06:59.640
so email should not be empty.

00:06:59.640 --> 00:07:01.190
So let's send in an email.

00:07:01.190 --> 00:07:05.990
Let's just be know that check coverage cause you can t now the errors are reduced to only

00:07:05.990 --> 00:07:08.710
one and says email must be an email.

00:07:08.710 --> 00:07:13.950
So I'm gonna send your We know that we know dot co now everything is okay.

00:07:13.950 --> 00:07:17.870
The same data is going to be returned back to me by the handler there every time.

00:07:17.870 --> 00:07:19.140
However,

00:07:19.140 --> 00:07:22.660
if I let they give a very big name over here.

00:07:22.660 --> 00:07:25.480
So which is more than 25 characters over here?

00:07:25.480 --> 00:07:31.060
This will come back with one other message and says that name must be shorter than r equals

00:07:31.060 --> 00:07:32.750
toe 25 characters.

00:07:32.750 --> 00:07:39.130
So just where adding the class validator and plus transformer libraries to our project on,

00:07:39.130 --> 00:07:45.750
then just by adding this pipe validation pipe along with the appropriate validation

00:07:45.750 --> 00:07:52.800
annotations were ableto automatically validate the incoming data and ensure that our data

00:07:52.800 --> 00:07:55.610
conforms to the rules defined by my model.

