WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.390
Let's say we want to update the details off a document or contact object based on the idea

00:00:06.390 --> 00:00:12.520
given we have to supply the idea as a part perimeter on the details off the contact that we

00:00:12.520 --> 00:00:15.920
want to update using the request body our payload.

00:00:15.920 --> 00:00:19.880
The body may or may not contender underscore Heidi.

00:00:19.880 --> 00:00:25.060
Even if it contained the underscore 80 that should not be considered for quieting the I.

00:00:25.060 --> 00:00:25.240
D.

00:00:25.240 --> 00:00:30.490
Supplied as part of the part perimeter should be used for searching and updating.

00:00:30.490 --> 00:00:36.660
So here is the result off a get request for this particular Ural that contains this.

00:00:36.660 --> 00:00:37.230
Heidi,

00:00:37.230 --> 00:00:43.850
we want to send a put request for the same by sending a payload that contains modified

00:00:43.850 --> 00:00:46.250
details over here To do so.

00:00:46.250 --> 00:00:49.650
Let's copy this yarn and then go to a new tab.

00:00:49.650 --> 00:00:51.950
Select the court request.

00:00:51.950 --> 00:00:53.180
Basically,

00:00:53.180 --> 00:00:53.650
you're in.

00:00:53.650 --> 00:00:55.850
Select the body,

00:00:55.850 --> 00:00:57.850
make sure that it is raw,

00:00:57.850 --> 00:01:00.750
and then the Jason form it over here.

00:01:00.750 --> 00:01:04.430
That's also copy the current value off the contact object.

00:01:04.430 --> 00:01:05.840
So I go back over here,

00:01:05.840 --> 00:01:07.030
copy this,

00:01:07.030 --> 00:01:10.630
come back to the port and in the body were going to send it,

00:01:10.630 --> 00:01:12.700
and I don't need to send the underscore eighties.

00:01:12.700 --> 00:01:16.910
I'm gonna remove that part and let's say we want to change the email.

00:01:16.910 --> 00:01:22.320
I'm gonna change this part of the email and say that this is going to be gmail dot com And

00:01:22.320 --> 00:01:23.350
if I send it,

00:01:23.350 --> 00:01:28.340
I'm gonna get a fortnight for because we haven't implemented the put request as off now.

00:01:28.340 --> 00:01:30.170
But that's what we want to do now.

00:01:30.170 --> 00:01:35.400
So let's go to our rituals to their core and implement a handler for this particular

00:01:35.400 --> 00:01:36.050
request.

00:01:36.050 --> 00:01:37.070
First,

00:01:37.070 --> 00:01:41.050
let's go to the controller at a day rate put decorator.

00:01:41.050 --> 00:01:47.030
It's important the same and in the black idea to give a string that represents the part

00:01:47.030 --> 00:01:47.550
perimeter.

00:01:47.550 --> 00:01:50.400
I'm gonna call it as I d and the name of the function.

00:01:50.400 --> 00:01:52.750
I'm gonna call it us off date contact,

00:01:52.750 --> 00:01:55.250
and it's going to receive two parameters.

00:01:55.250 --> 00:01:56.480
One is the idea,

00:01:56.480 --> 00:02:00.910
which is the part perimeter on the 2nd 1 is the body,

00:02:00.910 --> 00:02:02.700
which is nothing with the request body.

00:02:02.700 --> 00:02:06.300
In order to map the part perimeter toe this variable,

00:02:06.300 --> 00:02:08.750
we have to say a direct problem.

00:02:08.750 --> 00:02:13.060
Press enter and in brackets specified the part perimeter name.

00:02:13.060 --> 00:02:19.060
And here we're going to say at the red body to associate the request body with the variable

00:02:19.060 --> 00:02:19.390
body.

00:02:19.390 --> 00:02:22.150
Unlike the previous few request handlers.

00:02:22.150 --> 00:02:25.850
This time I'm not going to return any value from here.

00:02:25.850 --> 00:02:29.810
But I'm simply going to call the update function from the salaries.

00:02:29.810 --> 00:02:30.990
Andi in the service.

00:02:30.990 --> 00:02:32.620
We don't have the update function yet,

00:02:32.620 --> 00:02:35.300
so I'm gonna call a non existing function.

00:02:35.300 --> 00:02:39.680
I'll say this start service dot update contact,

00:02:39.680 --> 00:02:43.380
and I'll supply the same parameters I d and Body,

00:02:43.380 --> 00:02:44.840
as you know,

00:02:44.840 --> 00:02:46.230
that we don't have this function.

00:02:46.230 --> 00:02:47.580
So we had to create one.

00:02:47.580 --> 00:02:49.400
So I go back over here.

00:02:49.400 --> 00:02:50.100
All right.

00:02:50.100 --> 00:02:56.980
A function called update contact that receives idee and a contact object.

00:02:56.980 --> 00:02:59.720
We can also defend our data tape off this idea,

00:02:59.720 --> 00:03:05.250
which is nothing but the string on the contract itself should be off contact type and in

00:03:05.250 --> 00:03:06.560
the functions body.

00:03:06.560 --> 00:03:10.550
We can say this Start contact model dot update,

00:03:10.550 --> 00:03:12.490
which takes two parameters.

00:03:12.490 --> 00:03:17.720
The 1st 1 is a javascript object that acts like a filter condition,

00:03:17.720 --> 00:03:18.250
for example.

00:03:18.250 --> 00:03:21.550
I can say underscore idea is nothing but this idea Over here.

00:03:21.550 --> 00:03:27.290
We told the document that matches this particular condition that will be updated with the

00:03:27.290 --> 00:03:29.070
perimeter that I'm sending over here.

00:03:29.070 --> 00:03:32.440
if there is no problem in updating the contact,

00:03:32.440 --> 00:03:34.720
the control simply comes back toe here.

00:03:34.720 --> 00:03:36.590
And since we're not returning anything,

00:03:36.590 --> 00:03:38.260
there is no response.

00:03:38.260 --> 00:03:38.700
Body.

00:03:38.700 --> 00:03:39.470
However,

00:03:39.470 --> 00:03:41.460
by default they'll be a response.

00:03:41.460 --> 00:03:49.270
Status Court off 200 the http response code for indicating that the data got updated is 204

00:03:49.270 --> 00:03:51.650
It's also called no content.

00:03:51.650 --> 00:03:56.150
We can define that in AD wants by saying whenever the responses,

00:03:56.150 --> 00:03:59.390
given that it's TDP court corresponding toe.

00:03:59.390 --> 00:04:02.760
This is supposed to be 204 African.

00:04:02.760 --> 00:04:06.350
Is the http status dot no content.

00:04:06.350 --> 00:04:07.820
Also,

00:04:07.820 --> 00:04:10.770
we want toe into the very the proper validation.

00:04:10.770 --> 00:04:12.050
For example,

00:04:12.050 --> 00:04:13.230
when the payload is received,

00:04:13.230 --> 00:04:15.690
we want to validate this against the contact.

00:04:15.690 --> 00:04:22.910
We can say your body is off type contact and then we say here at great use pipes and in the

00:04:22.910 --> 00:04:23.720
perimeter,

00:04:23.720 --> 00:04:28.210
I can say new valuation pipe In cuddly bracket,

00:04:28.210 --> 00:04:31.950
we supply a conflict object transform colon truth.

00:04:31.950 --> 00:04:36.960
One thing you must know that this function returns that promise.

00:04:36.960 --> 00:04:41.180
The promise has to old comes If the promises rejected,

00:04:41.180 --> 00:04:42.420
then there'll be an exception.

00:04:42.420 --> 00:04:44.230
If the promise is result,

00:04:44.230 --> 00:04:46.810
then that result value will be given back to the user,

00:04:46.810 --> 00:04:49.290
but we're not getting anything from the function,

00:04:49.290 --> 00:04:51.990
so the next chase is never going to decide the promise,

00:04:51.990 --> 00:04:53.610
and it never handles that.

00:04:53.610 --> 00:04:56.380
If you want to handle the exceptions by yourself,

00:04:56.380 --> 00:04:58.350
then it is better to say await,

00:04:58.350 --> 00:05:00.800
which will resolve the promise.

00:05:00.800 --> 00:05:03.200
But if the promise has been rejected,

00:05:03.200 --> 00:05:04.650
then they'll be an exception.

00:05:04.650 --> 00:05:06.400
We can surround this with a trick at,

00:05:06.400 --> 00:05:07.100
so I'm gonna just,

00:05:07.100 --> 00:05:09.050
temporarily cutest put a try,

00:05:09.050 --> 00:05:11.160
catch block and then paste inside the tribe.

00:05:11.160 --> 00:05:12.990
Log on in the catch block.

00:05:12.990 --> 00:05:14.650
I get an exception object.

00:05:14.650 --> 00:05:17.780
And then I said through new http,

00:05:17.780 --> 00:05:23.150
exception are since the era is most probably because you have given a duplicate email or

00:05:23.150 --> 00:05:24.510
duplicate phone number.

00:05:24.510 --> 00:05:27.900
This could be a candidate for bad requests.

00:05:27.900 --> 00:05:28.660
Exception,

00:05:28.660 --> 00:05:35.440
which will automatically send the response court off 400 await keyword can be used only if

00:05:35.440 --> 00:05:36.800
the function has been marked.

00:05:36.800 --> 00:05:38.110
Boesky think so.

00:05:38.110 --> 00:05:39.190
Let's do the same thing.

00:05:39.190 --> 00:05:43.370
One last thing is that since we added the await keyword,

00:05:43.370 --> 00:05:47.080
that means this function should return something which is supposed to be a promise.

00:05:47.080 --> 00:05:48.620
But if you go to that function,

00:05:48.620 --> 00:05:50.820
you see that we haven't returned anything,

00:05:50.820 --> 00:05:55.720
so I'll have to do is to say return from here now in the controller calls,

00:05:55.720 --> 00:05:57.670
dysfunction would return a promise.

00:05:57.670 --> 00:06:00.620
That promise is going to be a result.

00:06:00.620 --> 00:06:02.490
And in case if there is no problem,

00:06:02.490 --> 00:06:06.820
the user will be given a response off status scored 204.

00:06:06.820 --> 00:06:08.830
But if the promises rejected,

00:06:08.830 --> 00:06:10.040
there'll be an exception.

00:06:10.040 --> 00:06:13.650
We are further throwing a bad request exception,

00:06:13.650 --> 00:06:17.150
which will result into a state escort off 400.

00:06:17.150 --> 00:06:19.500
So let's go to the postman and check it out.

00:06:19.500 --> 00:06:24.900
So I'm gonna send the same request once again and you can see that we got the response

00:06:24.900 --> 00:06:25.540
scored off.

00:06:25.540 --> 00:06:28.760
204 which means it has been updated successfully.

00:06:28.760 --> 00:06:34.150
There was no exception in order to check if we have got the email properly,

00:06:34.150 --> 00:06:35.590
let's copy this I d.

00:06:35.590 --> 00:06:41.240
And then go to the Mongo de Bischel and verified by ourselves.

00:06:41.240 --> 00:06:42.790
So I have the shell open here.

00:06:42.790 --> 00:06:49.520
I can say db dot contact start signed or find one where Underscore Idea is nothing but

00:06:49.520 --> 00:06:52.550
object idee off this value.

00:06:52.550 --> 00:06:54.600
And then when I pressed enter,

00:06:54.600 --> 00:06:57.240
you can see that it has been updated toe Jimmy.

00:06:57.240 --> 00:07:00.530
We can also very for the same thing from postman.

00:07:00.530 --> 00:07:06.690
By sending a get request for this Europe and take on send,

00:07:06.690 --> 00:07:09.640
you can see that we got the updated data back.

00:07:09.640 --> 00:07:10.440
However,

00:07:10.440 --> 00:07:15.930
while sending the data if I did not send the email are probably it is not a valid email.

00:07:15.930 --> 00:07:21.050
Then you will see that you get the validation error because we're using the validation pipe

00:07:21.050 --> 00:07:21.050
.

00:07:21.050 --> 00:07:22.020
Also,

00:07:22.020 --> 00:07:24.660
if I send an already existing email,

00:07:24.660 --> 00:07:25.270
for example,

00:07:25.270 --> 00:07:27.440
if I remove this and put my email,

00:07:27.440 --> 00:07:28.560
which is already there,

00:07:28.560 --> 00:07:30.130
we know that we know dot Co.

00:07:30.130 --> 00:07:34.790
This is also going to be another because duplicate emails are not alone.

00:07:34.790 --> 00:07:35.220
Also,

00:07:35.220 --> 00:07:36.830
duplicate phone numbers not alone.

00:07:36.830 --> 00:07:38.640
If I click on send now,

00:07:38.640 --> 00:07:43.210
we're going to get the state of scored as 400 because there is a bad request.

00:07:43.210 --> 00:07:45.140
We threw a bad request exception.

00:07:45.140 --> 00:07:51.230
We got one with this Now our put request handler easily In the next lecture,

00:07:51.230 --> 00:07:53.950
let's read 100 for delayed request

