WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.930
next year's are simply called NEST is an open source and mighty license framework for

00:00:06.930 --> 00:00:08.340
building efficient,

00:00:08.340 --> 00:00:11.810
scalable nor Jace applications that run on the starboard side.

00:00:11.810 --> 00:00:16.850
It is built by Kamil Mr Vick and uses progressive JavaScript.

00:00:16.850 --> 00:00:19.480
It is built with on fully supports,

00:00:19.480 --> 00:00:23.490
type tripped and combines the elements off object oriented programming.

00:00:23.490 --> 00:00:29.380
Functional programming on functional reactive programming under the Hood Nest makes you

00:00:29.380 --> 00:00:30.320
self robust.

00:00:30.320 --> 00:00:32.960
It's TDP Sarwer Frameworks like Express,

00:00:32.960 --> 00:00:35.390
which is the default on optionally,

00:00:35.390 --> 00:00:40.540
can be configured to use fast if I also expresses the fast,

00:00:40.540 --> 00:00:41.160
unopened,

00:00:41.160 --> 00:00:41.810
you knitted,

00:00:41.810 --> 00:00:48.230
minimalistic Web framework for Norges that provides many it's TDP utilities for easily and

00:00:48.230 --> 00:00:50.520
quickly building robust rest A.

00:00:50.520 --> 00:00:51.050
P s.

00:00:51.050 --> 00:00:55.690
Although Nest provides a level of abstraction about these frameworks,

00:00:55.690 --> 00:01:02.540
such as express our fast if I it exposes their AP is directly to the developer as well.

00:01:02.540 --> 00:01:08.530
This follows develop was the freedom to use a countless number of third party modules which

00:01:08.530 --> 00:01:10.480
are available for the underlying platform.

00:01:10.480 --> 00:01:12.220
In recent years,

00:01:12.220 --> 00:01:12.910
thanks to know,

00:01:12.910 --> 00:01:18.630
Jay's Java script has become the lingua franca off the Web for both front and back in

00:01:18.630 --> 00:01:19.450
applications.

00:01:19.450 --> 00:01:24.680
This has given rise to awesome projects like angular react and view,

00:01:24.680 --> 00:01:30.140
which include developer productivity and enable the creation off fast testable on

00:01:30.140 --> 00:01:32.050
extensible front and applications.

00:01:32.050 --> 00:01:33.210
However,

00:01:33.210 --> 00:01:35.500
while plenty off superb libraries,

00:01:35.500 --> 00:01:39.680
helpers and tools exist for North on server side JavaScript,

00:01:39.680 --> 00:01:46.220
none of them effectively sol the main problem off architecture nest forwards and out of the

00:01:46.220 --> 00:01:47.880
box application architecture,

00:01:47.880 --> 00:01:50.990
which all those developers on teams to create.

00:01:50.990 --> 00:01:52.340
Highly testable,

00:01:52.340 --> 00:01:57.450
scalable and loosely coupled and easily maintainable zero cell applications.

00:01:57.450 --> 00:02:01.130
The architecture is heavily inspired by Angula,

00:02:01.130 --> 00:02:05.700
since it makes use of the based concepts off angular and typescript.

00:02:05.700 --> 00:02:10.920
Angular developers can learn it quickly on will be able to create back and for their

00:02:10.920 --> 00:02:13.750
angular APs without resulting toe.

00:02:13.750 --> 00:02:15.250
Others are beside frameworks.

00:02:15.250 --> 00:02:16.830
Having said that,

00:02:16.830 --> 00:02:18.360
to learn next year's,

00:02:18.360 --> 00:02:20.070
especially with this course,

00:02:20.070 --> 00:02:23.130
you don't need to have a background knowledge off angular

