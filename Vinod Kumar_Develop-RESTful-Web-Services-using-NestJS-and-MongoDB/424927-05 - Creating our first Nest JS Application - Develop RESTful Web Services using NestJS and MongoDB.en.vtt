WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.240
in this lecture,

00:00:01.240 --> 00:00:06.540
Let's see how to create a new nest Js project and also have a look at the files.

00:00:06.540 --> 00:00:10.190
Gender it for us in order to create a new next year's project.

00:00:10.190 --> 00:00:16.170
We can issue the command nest new on the project name that would create a new project

00:00:16.170 --> 00:00:16.910
folder for us.

00:00:16.910 --> 00:00:20.820
So it is better to decide where do we keep out projects in at once?

00:00:20.820 --> 00:00:27.210
So I'm gonna go into my desktop and issued a man that's a your silly desktop and then typed

00:00:27.210 --> 00:00:30.770
the command nest new on a name off a project.

00:00:30.770 --> 00:00:35.670
Whatever you want to convey you Typically you should view something in lower case on if you

00:00:35.670 --> 00:00:39.070
have multiple words you should you the high fund to separate the same thing.

00:00:39.070 --> 00:00:44.780
So I'm gonna give it us something called nest dash training on a per intern.

00:00:44.780 --> 00:00:50.150
First it's gonna create a bunch of sore scored for us and then it will ask you What is the

00:00:50.150 --> 00:00:52.410
package manager you want to use?

00:00:52.410 --> 00:00:53.350
For example?

00:00:53.350 --> 00:00:54.960
NBN are young.

00:00:54.960 --> 00:00:56.860
I want to use NPM,

00:00:56.860 --> 00:01:03.240
So I think we have to press enter after a couple of minutes of the project has been

00:01:03.240 --> 00:01:04.780
successfully created for us.

00:01:04.780 --> 00:01:10.000
It's called Nestor Dutch training on their the feedback here as what we're supposed to next

00:01:10.000 --> 00:01:12.700
it is get started with the following command.

00:01:12.700 --> 00:01:17.860
Number one is theory next to training and then issue the command NPM run,

00:01:17.860 --> 00:01:18.490
start.

00:01:18.490 --> 00:01:19.920
Let's do the same thing.

00:01:19.920 --> 00:01:22.800
So I'm gonna type your city next dash training,

00:01:22.800 --> 00:01:30.150
press enter and then issued the command NPM run start are simply you can type in pm start

00:01:30.150 --> 00:01:30.760
also.

00:01:30.760 --> 00:01:35.370
So I'm gonna press enter on this brings up the developments or work.

00:01:35.370 --> 00:01:39.460
Deploying our application that just got created onto the developments are,

00:01:39.460 --> 00:01:39.680
well,

00:01:39.680 --> 00:01:40.840
the developments.

00:01:40.840 --> 00:01:46.340
Our work has started in port number 3000 so I can open a browser and access local host

00:01:46.340 --> 00:01:47.260
Colin 3000.

00:01:47.260 --> 00:01:48.250
Let's do the same thing.

00:01:48.250 --> 00:01:54.970
Its GDP double slash local host cool and 3000 enter and you can see it is hello world,

00:01:54.970 --> 00:01:58.970
which means our application is up and running properly.

00:01:58.970 --> 00:02:00.820
So let's go back to the command front.

00:02:00.820 --> 00:02:01.600
Press control,

00:02:01.600 --> 00:02:03.740
See toe stop the same on.

00:02:03.740 --> 00:02:09.620
Then let's open visual studio cord and load the current folder into the same father I can

00:02:09.620 --> 00:02:09.990
simulate.

00:02:09.990 --> 00:02:12.620
I called dot and then press enter.

00:02:12.620 --> 00:02:15.910
Let's get it off the welcome screen here.

00:02:15.910 --> 00:02:20.320
The first thing you notice is the kind of icons I have over here.

00:02:20.320 --> 00:02:21.950
While it doesn't really matter,

00:02:21.950 --> 00:02:25.170
if you want toe have icons that look like mine,

00:02:25.170 --> 00:02:25.850
what it can do,

00:02:25.850 --> 00:02:32.350
they can go toe extensions and then look for material icon that is actually a team,

00:02:32.350 --> 00:02:34.920
so you can see that in my credit quality install.

00:02:34.920 --> 00:02:35.980
But what you can do it.

00:02:35.980 --> 00:02:38.110
You can click on the install button over here,

00:02:38.110 --> 00:02:40.760
or maybe you can open that and then click on the install.

00:02:40.760 --> 00:02:41.410
Now,

00:02:41.410 --> 00:02:45.450
this is especially helpful when you're working with angular applications,

00:02:45.450 --> 00:02:49.290
and since next year's uses the angular style off coding,

00:02:49.290 --> 00:02:52.500
these icons may still be off some use.

00:02:52.500 --> 00:02:54.450
But it's really not mandatory.

00:02:54.450 --> 00:02:55.750
It's totally optional.

00:02:55.750 --> 00:02:59.350
Let's goto our files and see what other fights that came up.

00:02:59.350 --> 00:03:01.900
Now you can see that they're either dissed folder here.

00:03:01.900 --> 00:03:04.910
This is for the final bill that we would be creating.

00:03:04.910 --> 00:03:05.430
However,

00:03:05.430 --> 00:03:07.200
every time you'll run your project,

00:03:07.200 --> 00:03:10.930
there'll be a bunch of files copied and pasted over here.

00:03:10.930 --> 00:03:12.490
You can ignore this for now.

00:03:12.490 --> 00:03:14.660
On almost at the end of our course,

00:03:14.660 --> 00:03:17.660
we will be discussing about build and deploy at that time,

00:03:17.660 --> 00:03:19.950
you can come back and have a look at What are these files?

00:03:19.950 --> 00:03:23.300
The 2nd 1 is the north Underscore models,

00:03:23.300 --> 00:03:24.150
discontents.

00:03:24.150 --> 00:03:28.560
All the third party dependence is that we have added Why other Packaged or Jason,

00:03:28.560 --> 00:03:35.180
if you are sharing your project with someone using some repositories like a get UB are big

00:03:35.180 --> 00:03:35.750
bucket.

00:03:35.750 --> 00:03:40.550
No models will be excluded from that and that can be specified in the date.

00:03:40.550 --> 00:03:43.240
Ignore file Here on you can say no.

00:03:43.240 --> 00:03:46.380
Models and dissed have been included in the get ignored.

00:03:46.380 --> 00:03:51.140
The next one is the SRC folder that contains the source scored generated.

00:03:51.140 --> 00:03:51.920
As you can see,

00:03:51.920 --> 00:03:53.260
all of them are typescript.

00:03:53.260 --> 00:03:55.190
Files will come back here in a minute.

00:03:55.190 --> 00:04:00.250
On the next one is the test folder that contains the E two e spec files.

00:04:00.250 --> 00:04:01.650
Nothing but test cases.

00:04:01.650 --> 00:04:02.690
Apart from these,

00:04:02.690 --> 00:04:05.590
there are a couple of important configuration fights.

00:04:05.590 --> 00:04:07.480
Number one is the packaged or Jason.

00:04:07.480 --> 00:04:09.030
If I checked it out,

00:04:09.030 --> 00:04:14.100
here is a bunch off meta information like the name of the Project washn description,

00:04:14.100 --> 00:04:15.420
Arthur etcetera.

00:04:15.420 --> 00:04:21.100
So if you're publishing this particular project in repositories like NPM Cheers,

00:04:21.100 --> 00:04:24.010
this information would be useful for searching.

00:04:24.010 --> 00:04:26.430
There is a bunch of scripts over here.

00:04:26.430 --> 00:04:32.270
One of the script is what we ran earlier called NPM Run Start that triggered this command.

00:04:32.270 --> 00:04:32.790
Nesta,

00:04:32.790 --> 00:04:36.990
start on on these commands are executive from the North Models.

00:04:36.990 --> 00:04:37.590
For example,

00:04:37.590 --> 00:04:39.000
If you see that there is a command,

00:04:39.000 --> 00:04:43.350
your car nest But under no models you can see that dark being.

00:04:43.350 --> 00:04:49.210
And inside the dot been you may find a command called nest on on windows platform.

00:04:49.210 --> 00:04:54.510
You may see next to dark CMB as the fight Any commander do you want to execute from here?

00:04:54.510 --> 00:04:56.970
You can add a shortcut script over here.

00:04:56.970 --> 00:05:00.380
Although we executed this one From now on,

00:05:00.380 --> 00:05:02.390
we will be executing start Poland,

00:05:02.390 --> 00:05:06.650
Del because it actually has a flag here called bastards Watch,

00:05:06.650 --> 00:05:12.020
which keeps an eye on the source court changes that mean if I make any change to my so

00:05:12.020 --> 00:05:12.520
scored,

00:05:12.520 --> 00:05:15.480
the developments are what will automatically start.

00:05:15.480 --> 00:05:20.480
And that's a good thing because the change is what I dough can be immediately reflected and

00:05:20.480 --> 00:05:24.380
we can go and test the same thing on the browser are too like postman.

00:05:24.380 --> 00:05:26.570
If you want to go do some debug,

00:05:26.570 --> 00:05:33.710
you can also execute NPM Run start Colon Bieber which has added a flag here called debug.

00:05:33.710 --> 00:05:34.850
Apart from this,

00:05:34.850 --> 00:05:37.340
probably towards the end of all of course,

00:05:37.340 --> 00:05:43.570
we will also use NPM run build are If you want to test your application probably you can't

00:05:43.570 --> 00:05:47.500
on N p m test Out of all these shortcut commands,

00:05:47.500 --> 00:05:54.030
two commands like start on the test can be run directly by typing the command NPM start our

00:05:54.030 --> 00:06:00.530
NPM test for all of the other ones you have to take npm run and the actual scripted me

00:06:00.530 --> 00:06:02.090
Apart from the scripts,

00:06:02.090 --> 00:06:04.540
you can see that there are some dependencies over here.

00:06:04.540 --> 00:06:06.290
These are the production dependencies,

00:06:06.290 --> 00:06:09.030
which means they're going to be a part of your production bill.

00:06:09.030 --> 00:06:10.170
Most commonly,

00:06:10.170 --> 00:06:13.120
the one that we are going to ruffle toe is next year,

00:06:13.120 --> 00:06:16.950
slash common and that internally uses the rest off them.

00:06:16.950 --> 00:06:21.110
Any other additional dependence is that we might require in the future.

00:06:21.110 --> 00:06:21.970
When we are,

00:06:21.970 --> 00:06:24.690
they will be added in this particular section.

00:06:24.690 --> 00:06:26.040
Apart from the production,

00:06:26.040 --> 00:06:27.550
different individuals are their depth.

00:06:27.550 --> 00:06:28.330
Dependence is,

00:06:28.330 --> 00:06:29.060
for example,

00:06:29.060 --> 00:06:31.610
there some tooling support for sea life.

00:06:31.610 --> 00:06:33.330
There is some testing.

00:06:33.330 --> 00:06:38.450
There is some pretty formatting and then the typescript language support itself.

00:06:38.450 --> 00:06:40.410
Let's close this file on,

00:06:40.410 --> 00:06:44.710
then have a look at one more important file which is called ts conflict or Jason.

00:06:44.710 --> 00:06:44.860
Now,

00:06:44.860 --> 00:06:46.590
this is nothing to do with messages.

00:06:46.590 --> 00:06:51.240
But since ness jizz is built on the supports typescript,

00:06:51.240 --> 00:06:53.140
it's good idea to have a look at this fight.

00:06:53.140 --> 00:06:58.090
One of the most important property here in this particular configuration file is the target

00:06:58.090 --> 00:06:58.090
.

00:06:58.090 --> 00:07:01.070
This is where we're telling the typescript toe.

00:07:01.070 --> 00:07:02.880
Compile all our typescript,

00:07:02.880 --> 00:07:03.840
gored in tow,

00:07:03.840 --> 00:07:08.300
awash in of javascript or a musket for years 2017.

00:07:08.300 --> 00:07:09.920
And if you want to complain this toe,

00:07:09.920 --> 00:07:10.750
other Russians,

00:07:10.750 --> 00:07:12.960
you can also give the same thing over here.

00:07:12.960 --> 00:07:15.810
Another important property here is the source map,

00:07:15.810 --> 00:07:17.740
which has been turned toe through here.

00:07:17.740 --> 00:07:19.380
Now this is useful,

00:07:19.380 --> 00:07:22.350
especially when you're actually doing a build.

00:07:22.350 --> 00:07:24.500
You get Thomas good files,

00:07:24.500 --> 00:07:25.810
but they will be magnified.

00:07:25.810 --> 00:07:26.820
However,

00:07:26.820 --> 00:07:29.150
you can gender their corresponding source map,

00:07:29.150 --> 00:07:32.050
which can be used for debugging purposes.

00:07:32.050 --> 00:07:33.560
Apart from that,

00:07:33.560 --> 00:07:39.340
there is a base Ural on the output directory where your build files will be dumped on.

00:07:39.340 --> 00:07:41.710
We have seen that there is a folder called Distant can.

00:07:41.710 --> 00:07:44.030
If you want to change your output directory during the bill,

00:07:44.030 --> 00:07:46.060
you can actually change it over here.

00:07:46.060 --> 00:07:49.310
If you want to know more about the typescript configuration,

00:07:49.310 --> 00:07:50.640
you can visit types,

00:07:50.640 --> 00:07:53.870
tip Langdon art and then go to the documentation.

00:07:53.870 --> 00:07:56.360
There you have the Project Configuration section,

00:07:56.360 --> 00:07:59.920
and you can find more detailed explanation about tortillas,

00:07:59.920 --> 00:08:02.030
conflict or Jason in the section.

00:08:02.030 --> 00:08:04.230
Let's go back to the escort on.

00:08:04.230 --> 00:08:06.410
Have a look at the source scored that is generated.

00:08:06.410 --> 00:08:08.900
So when you run the NPM run,

00:08:08.900 --> 00:08:11.810
start our NPM run start cooling Dale.

00:08:11.810 --> 00:08:15.760
The starting point of your application is the main Doherty S.

00:08:15.760 --> 00:08:17.900
If you're from angular background human,

00:08:17.900 --> 00:08:19.790
probably related immediately that did.

00:08:19.790 --> 00:08:20.070
Also,

00:08:20.070 --> 00:08:21.950
we have something called Main Dark Tears.

00:08:21.950 --> 00:08:23.550
In this particular file,

00:08:23.550 --> 00:08:27.040
you can see that there is a bootstrap function being called,

00:08:27.040 --> 00:08:29.560
which is nothing but a function that is defined over here.

00:08:29.560 --> 00:08:31.820
It's not a building function or anything.

00:08:31.820 --> 00:08:34.540
It's just a function that is being defined over here,

00:08:34.540 --> 00:08:35.890
and we're in walking the theme.

00:08:35.890 --> 00:08:42.690
So this line triggers the creation off object off a class called at Model,

00:08:42.690 --> 00:08:46.090
and that at Model is the one that is run on.

00:08:46.090 --> 00:08:48.800
A star were listening on Port number 3000.

00:08:48.800 --> 00:08:51.440
If you want to know what is there in the at model,

00:08:51.440 --> 00:08:52.880
you can press command,

00:08:52.880 --> 00:08:54.880
click on Mac or control.

00:08:54.880 --> 00:08:56.250
Click on windows and leaners.

00:08:56.250 --> 00:09:00.470
It will take you to the actual source score Abdullah Model tortillas,

00:09:00.470 --> 00:09:06.950
which defines the class over here and then decorates the same thing using accurate model,

00:09:06.950 --> 00:09:10.850
very similar toe accurate engine model in angular.

00:09:10.850 --> 00:09:12.750
If you're not familiar with angular,

00:09:12.750 --> 00:09:14.850
you don't have to worry about that at all.

00:09:14.850 --> 00:09:18.100
We're going to discuss about all these decorators in detail.

00:09:18.100 --> 00:09:22.300
The eight model decorator has few properties that you can configure.

00:09:22.300 --> 00:09:24.110
Number one is the import.

00:09:24.110 --> 00:09:30.410
You can think off a model as a logical group off controllers and salaries is on all other

00:09:30.410 --> 00:09:31.870
port that you have developed.

00:09:31.870 --> 00:09:35.050
You've buried another model that somebody else have developed.

00:09:35.050 --> 00:09:39.370
You can actually start using them in imports a section over here,

00:09:39.370 --> 00:09:40.480
for example,

00:09:40.480 --> 00:09:44.620
if I want to panic toe mongo db using a library called mangoes,

00:09:44.620 --> 00:09:47.860
mangoes country something for bongos module on.

00:09:47.860 --> 00:09:50.140
I can simply import that over here.

00:09:50.140 --> 00:09:51.640
At this point in time.

00:09:51.640 --> 00:09:54.260
The most important one is the controllers,

00:09:54.260 --> 00:09:57.850
which is nothing but a rotor for our applications.

00:09:57.850 --> 00:10:03.300
You may also see that there is another thing called the providers A provider basically our

00:10:03.300 --> 00:10:04.830
car injectables.

00:10:04.830 --> 00:10:05.570
Basically,

00:10:05.570 --> 00:10:06.370
you can think off.

00:10:06.370 --> 00:10:10.150
This is a helper plus that has some functionality.

00:10:10.150 --> 00:10:15.340
I want this to be available for dependency injection across my application.

00:10:15.340 --> 00:10:18.050
More on this we will discuss later.

00:10:18.050 --> 00:10:23.800
But for now let's go to the APP controller by clicking on that holding the command key on

00:10:23.800 --> 00:10:26.150
Mac control key on windows and leaners.

00:10:26.150 --> 00:10:29.650
It would take me toe abduct controller tortillas.

00:10:29.650 --> 00:10:31.100
As you can see,

00:10:31.100 --> 00:10:33.820
there is a decorator called at controller.

00:10:33.820 --> 00:10:36.890
There is no you are part segment here.

00:10:36.890 --> 00:10:43.850
So because of which local host 3000 if handled by this controller and since we made a

00:10:43.850 --> 00:10:48.430
request using a browser and browser requests are always going to be a get request by

00:10:48.430 --> 00:10:49.030
default,

00:10:49.030 --> 00:10:55.040
bury the function that is decorated with other it get which is responsible for sending a

00:10:55.040 --> 00:10:55.940
response value.

00:10:55.940 --> 00:11:00.650
So when you make a local host Colon 3000 as a request,

00:11:00.650 --> 00:11:04.530
that request is eventually received by dysfunction.

00:11:04.530 --> 00:11:07.540
This is returning value over here,

00:11:07.540 --> 00:11:09.730
which is coming from our service function.

00:11:09.730 --> 00:11:10.970
And if you go there,

00:11:10.970 --> 00:11:13.110
you will see that it simply returning a lower,

00:11:13.110 --> 00:11:19.520
which is what we saw in the browser when we access the Ural Local School and 3000 for the

00:11:19.520 --> 00:11:20.080
time being.

00:11:20.080 --> 00:11:23.550
Let's go back door controller on the change This to,

00:11:23.550 --> 00:11:24.060
let's say,

00:11:24.060 --> 00:11:24.960
for example,

00:11:24.960 --> 00:11:30.840
hello from nest and let's go to the terminal on then run the Sarwar once again.

00:11:30.840 --> 00:11:34.390
But this time let's run using the watch options.

00:11:34.390 --> 00:11:36.810
So I'm gonna take your NPM run,

00:11:36.810 --> 00:11:38.160
start colon,

00:11:38.160 --> 00:11:41.300
their press enter and this time on words.

00:11:41.300 --> 00:11:43.270
Any change I make to my source scored.

00:11:43.270 --> 00:11:45.350
That's our were automatically the stocks.

00:11:45.350 --> 00:11:49.700
Now that does start what is really let's go to the browser.

00:11:49.700 --> 00:11:53.380
Access local host 3000 Once again on day,

00:11:53.380 --> 00:11:56.510
you will see that we got the output as hello from next.

00:11:56.510 --> 00:12:01.410
One of the very important feature off nest is the written data type.

00:12:01.410 --> 00:12:03.150
We call it as mind type,

00:12:03.150 --> 00:12:05.770
multipart Internet mail extension.

00:12:05.770 --> 00:12:07.090
To understand the same,

00:12:07.090 --> 00:12:09.610
let's goto our developer tools.

00:12:09.610 --> 00:12:13.050
I go to the view developer and then go to develop a tools.

00:12:13.050 --> 00:12:15.420
I select the network tab,

00:12:15.420 --> 00:12:20.490
make sure that you have the request for on I refresh this once more and you can see we got

00:12:20.490 --> 00:12:22.450
a request log here.

00:12:22.450 --> 00:12:28.640
Click on that and you will see that the response comes with a header called Content Type,

00:12:28.640 --> 00:12:31.940
which indicates what other type of data that start where it's ending,

00:12:31.940 --> 00:12:34.320
which says that texter slash pitched GMO.

00:12:34.320 --> 00:12:39.520
This is important because nest automatically identifies the kind of data that you're

00:12:39.520 --> 00:12:41.070
sending on ads.

00:12:41.070 --> 00:12:43.510
Appropriate value for response,

00:12:43.510 --> 00:12:44.580
header content type.

00:12:44.580 --> 00:12:48.990
So since I'm sending a primitive value over here like string,

00:12:48.990 --> 00:12:52.890
so next automatically thought that this is a textual value.

00:12:52.890 --> 00:12:54.150
However,

00:12:54.150 --> 00:12:56.570
if I go and declare a variable,

00:12:56.570 --> 00:12:57.010
let's say,

00:12:57.010 --> 00:12:57.980
for example,

00:12:57.980 --> 00:13:02.470
contacts equals toe an empty are a This is an object.

00:13:02.470 --> 00:13:09.220
Now where is our object in JavaScript on ever return Here they start contacts on change.

00:13:09.220 --> 00:13:13.860
Er return data type of the function toe Probably any are even.

00:13:13.860 --> 00:13:15.450
I can remove this completely.

00:13:15.450 --> 00:13:16.320
No,

00:13:16.320 --> 00:13:21.130
Nancy Ness just determined that this is an object and not a primitive.

00:13:21.130 --> 00:13:25.700
The response did it will automatically be applications left Jason.

00:13:25.700 --> 00:13:26.460
No,

00:13:26.460 --> 00:13:27.640
I don't have to restart.

00:13:27.640 --> 00:13:31.800
The servers are where is in the watch more so I can go back to the browser directly.

00:13:31.800 --> 00:13:36.220
Make another request while I got an empty array here.

00:13:36.220 --> 00:13:40.980
If you go and have a look at the response headers This time the response had our content

00:13:40.980 --> 00:13:43.260
type is application slash chase on,

00:13:43.260 --> 00:13:46.390
and that's automatically done by messages.

00:13:46.390 --> 00:13:47.310
However,

00:13:47.310 --> 00:13:48.880
if you want to control this,

00:13:48.880 --> 00:13:52.150
you can still are your own responsive hours.

00:13:52.150 --> 00:13:55.440
But since nest is opinionated,

00:13:55.440 --> 00:13:58.460
a lot of things are automatically done for you.

00:13:58.460 --> 00:14:01.060
Let's go back toe ria score on.

00:14:01.060 --> 00:14:03.670
Probably written a string once more.

00:14:03.670 --> 00:14:05.950
Let's say hello world again.

00:14:05.950 --> 00:14:06.740
Andi,

00:14:06.740 --> 00:14:09.600
I don't need to use this constructor for now.

00:14:09.600 --> 00:14:11.880
Let's not worry about what is this constructor doing?

00:14:11.880 --> 00:14:14.930
Let's get it off that since I'm not using it all day,

00:14:14.930 --> 00:14:17.660
I don't need to add that in the import section.

00:14:17.660 --> 00:14:18.380
Also,

00:14:18.380 --> 00:14:19.170
In fact,

00:14:19.170 --> 00:14:22.850
I can even delete the file abduct service tortillas.

00:14:22.850 --> 00:14:24.950
If I delete this file now,

00:14:24.950 --> 00:14:26.780
I made on inter problem.

00:14:26.780 --> 00:14:29.350
If you go back to the Sarwar console here,

00:14:29.350 --> 00:14:30.640
you can see that there is another.

00:14:30.640 --> 00:14:35.990
It is that import AB service from adult surveys in the APP model.

00:14:35.990 --> 00:14:37.770
Dirty s is giving an address.

00:14:37.770 --> 00:14:38.970
So let's go back to the at,

00:14:38.970 --> 00:14:40.650
model tears on,

00:14:40.650 --> 00:14:42.280
Get it off this line from here.

00:14:42.280 --> 00:14:43.930
And since I don't have the AB service,

00:14:43.930 --> 00:14:46.480
I don't have to mention anything over here,

00:14:46.480 --> 00:14:49.860
you may observe one more thing that I'm not saving my files.

00:14:49.860 --> 00:14:54.190
That saved automatically because in the file there is an option called Otto.

00:14:54.190 --> 00:14:56.060
Say I have enabled that.

00:14:56.060 --> 00:14:57.910
So every time I make some changes,

00:14:57.910 --> 00:15:02.850
the final is being automatically saved on every time the finally saved that,

00:15:02.850 --> 00:15:03.040
sir,

00:15:03.040 --> 00:15:03.960
where is restarted?

00:15:03.960 --> 00:15:09.380
I can go back to the browser now on the send in a request we got hollow word on.

00:15:09.380 --> 00:15:09.980
Once again,

00:15:09.980 --> 00:15:10.560
it's easier.

00:15:10.560 --> 00:15:13.120
The content I please text slash html.

00:15:13.120 --> 00:15:16.750
So for primitives like numbers bullion,

00:15:16.750 --> 00:15:17.890
our strings,

00:15:17.890 --> 00:15:20.380
this would be texted slash html.

00:15:20.380 --> 00:15:23.020
But for objects and arrays automatically,

00:15:23.020 --> 00:15:25.450
this is street address applications like Jason.

00:15:25.450 --> 00:15:30.680
Now that we have a basic understanding off on exchange applications work in the next

00:15:30.680 --> 00:15:31.310
lecture,

00:15:31.310 --> 00:15:34.180
let's create a new model for our contacts.

00:15:34.180 --> 00:15:39.350
Restaurant point on the right couple of handlers toe handle the get the requests

