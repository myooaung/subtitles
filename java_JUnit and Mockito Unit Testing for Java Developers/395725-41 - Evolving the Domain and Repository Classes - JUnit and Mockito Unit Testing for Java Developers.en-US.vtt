WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.580
So let's get off this section now with adding some more meat on the bones to the domain and

00:00:06.580 --> 00:00:10.370
repository classes because this will allow us to have something a bit more interesting to

00:00:10.370 --> 00:00:10.840
test.

00:00:10.840 --> 00:00:13.790
We can also talk about some design decisions we make along the way as well,

00:00:13.790 --> 00:00:14.700
which is always useful.

00:00:14.700 --> 00:00:16.480
So let's get started,

00:00:16.480 --> 00:00:17.230
right?

00:00:17.230 --> 00:00:19.310
So let's jump back into this project we've been working with.

00:00:19.310 --> 00:00:24.350
So if we open up my app going to source me in Java and look at the production code,

00:00:24.350 --> 00:00:25.010
we can see here,

00:00:25.010 --> 00:00:26.980
we've got the data service and Web layers,

00:00:26.980 --> 00:00:29.050
and we've also got this user object as well.

00:00:29.050 --> 00:00:33.580
So let's just double click this user object and we just got an extra field on here.

00:00:33.580 --> 00:00:36.050
To say if the user is could've been Life,

00:00:36.050 --> 00:00:36.430
in other words,

00:00:36.430 --> 00:00:40.360
is currently having an account which isn't suspended for examples is live on the system and

00:00:40.360 --> 00:00:40.980
he can log in.

00:00:40.980 --> 00:00:45.320
You can imagine setting this flag to force if we wanted to spend the user account for

00:00:45.320 --> 00:00:46.010
whatever reason,

00:00:46.010 --> 00:00:47.320
let's just put that in.

00:00:47.320 --> 00:00:49.740
Just give us an extra field that we contest with.

00:00:49.740 --> 00:00:51.240
Actually,

00:00:51.240 --> 00:00:52.620
you know what we'll always said it's true.

00:00:52.620 --> 00:00:53.590
So whenever we create,

00:00:53.590 --> 00:00:56.740
a new user will always said it's true in a normal system,

00:00:56.740 --> 00:00:58.020
you probably wouldn't want to do this.

00:00:58.020 --> 00:00:59.090
And again,

00:00:59.090 --> 00:01:01.050
we'll put the Guetta on here.

00:01:01.050 --> 00:01:03.650
It will be his life.

00:01:03.650 --> 00:01:04.770
The convention,

00:01:04.770 --> 00:01:06.910
Forget us for bullion type values,

00:01:06.910 --> 00:01:07.310
isn't it?

00:01:07.310 --> 00:01:07.570
Would mean,

00:01:07.570 --> 00:01:08.070
for example,

00:01:08.070 --> 00:01:08.790
get live.

00:01:08.790 --> 00:01:12.190
It returns his life replaces Would get with is on,

00:01:12.190 --> 00:01:16.750
will also regenerate the hash code and equals methods to.

00:01:16.750 --> 00:01:19.490
By the way,

00:01:19.490 --> 00:01:20.490
before I did job a seven,

00:01:20.490 --> 00:01:21.240
you don't have to do that.

00:01:21.240 --> 00:01:22.420
You can't change the template,

00:01:22.420 --> 00:01:23.900
which intelligent uses.

00:01:23.900 --> 00:01:24.200
So,

00:01:24.200 --> 00:01:24.610
for example,

00:01:24.610 --> 00:01:27.050
Iraq issues an intelligent default and what this does.

00:01:27.050 --> 00:01:35.000
But its next through these is that it generates the equals in Moscow methods anywhere

00:01:35.000 --> 00:01:36.620
that's gonna work with any Judy care versions.

00:01:36.620 --> 00:01:37.490
It's probably better to do,

00:01:37.490 --> 00:01:41.850
and that means we can just new objects reference from jobs seven.

00:01:41.850 --> 00:01:43.950
And then we could I use object.

00:01:43.950 --> 00:01:46.550
It's also had an enumeration now as well.

00:01:46.550 --> 00:01:51.000
Now the other thing want to have with this is basically the notion over use of being a

00:01:51.000 --> 00:01:51.750
regular user.

00:01:51.750 --> 00:01:53.340
So user who was a customer,

00:01:53.340 --> 00:01:56.030
if you like on the website or use who is a super user.

00:01:56.030 --> 00:01:56.550
In other words,

00:01:56.550 --> 00:01:57.820
an admin or a manager,

00:01:57.820 --> 00:01:58.540
that kind of thing.

00:01:58.540 --> 00:01:59.210
So for now,

00:01:59.210 --> 00:02:00.830
let's just say there are two types.

00:02:00.830 --> 00:02:04.130
There's a user and an admin soccer and represent this.

00:02:04.130 --> 00:02:05.620
So we can I represent this point,

00:02:05.620 --> 00:02:06.350
for example,

00:02:06.350 --> 00:02:09.300
having an enumeration reference in the user class.

00:02:09.300 --> 00:02:10.310
Alternatively,

00:02:10.310 --> 00:02:11.660
by introducing a new type,

00:02:11.660 --> 00:02:12.220
for example,

00:02:12.220 --> 00:02:16.900
Super user or Adam and user or whatever you want to name it Now we can just put on eating

00:02:16.900 --> 00:02:17.520
them in here for now.

00:02:17.520 --> 00:02:17.990
That's fine.

00:02:17.990 --> 00:02:18.950
So I just go up here.

00:02:18.950 --> 00:02:35.350
Nobody has put the anything like that,

00:02:35.350 --> 00:02:41.550
and then we just need to make sure we can hold a reference to that user times they were

00:02:41.550 --> 00:02:44.450
defining to use the times regular user admin user.

00:02:44.450 --> 00:02:48.550
Let's just say we make the final.

00:02:48.550 --> 00:02:53.200
So should we have to sign in the constructor?

00:02:53.200 --> 00:03:05.160
And so we do this.

00:03:05.160 --> 00:03:09.250
So we have to be explicit about the type that is the type of user that we're creating.

00:03:09.250 --> 00:03:12.450
This means that if I find usages of this now,

00:03:12.450 --> 00:03:17.360
we have command ship death,

00:03:17.360 --> 00:03:21.550
then call to the construct like this will no longer work so I could change them.

00:03:21.550 --> 00:03:23.860
I could change them now.

00:03:23.860 --> 00:03:26.670
And do you use a type door regular user,

00:03:26.670 --> 00:03:27.450
for example?

00:03:27.450 --> 00:03:29.200
I don't do that in this case,

00:03:29.200 --> 00:03:30.560
for the sake of this administration with him.

00:03:30.560 --> 00:03:30.950
Crist.

00:03:30.950 --> 00:03:31.870
But in general,

00:03:31.870 --> 00:03:32.730
a better approach,

00:03:32.730 --> 00:03:33.510
in my opinion,

00:03:33.510 --> 00:03:41.920
is to instead market constructor as package private that instead create static factory

00:03:41.920 --> 00:03:44.300
methods to create a different types of user in large.

00:03:44.300 --> 00:03:45.220
If I will just do this now,

00:03:45.220 --> 00:03:45.600
in fact,

00:03:45.600 --> 00:03:46.170
I think about it.

00:03:46.170 --> 00:03:52.100
So public static user publics that you use a credit regular user.

00:03:52.100 --> 00:03:58.350
You should be using it and password.

00:03:58.350 --> 00:04:07.240
I won't do return new user using him.

00:04:07.240 --> 00:04:08.750
That's word,

00:04:08.750 --> 00:04:12.150
and that would put the user type in here.

00:04:12.150 --> 00:04:14.810
So this is nice,

00:04:14.810 --> 00:04:19.190
because basically worse off encapsulating to a very mild degree the logic of what it means

00:04:19.190 --> 00:04:24.920
to create a regular user army user inside this class itself and quit meddling,

00:04:24.920 --> 00:04:25.600
therefore,

00:04:25.600 --> 00:04:27.450
and I'm in using,

00:04:27.450 --> 00:04:37.750
you might want to read em these as well to regular admission or whatever else.

00:04:37.750 --> 00:04:38.290
Additionally,

00:04:38.290 --> 00:04:42.130
put an extra and use a role time specific behaviour in each of these constructors to set up

00:04:42.130 --> 00:04:44.880
what it means to be an admin user on what it means to be a regular user.

00:04:44.880 --> 00:04:45.350
For example,

00:04:45.350 --> 00:04:47.030
if you had different access rights,

00:04:47.030 --> 00:04:47.400
all right,

00:04:47.400 --> 00:04:48.380
still permissions you went to put in.

00:04:48.380 --> 00:04:49.190
You could put those in as well.

00:04:49.190 --> 00:04:50.450
Let's not get carried away.

00:04:50.450 --> 00:04:51.420
We don't really care about that.

00:04:51.420 --> 00:04:52.980
They just go back to the user repository.

00:04:52.980 --> 00:04:54.750
And now we can do this.

00:04:54.750 --> 00:04:55.160
That is,

00:04:55.160 --> 00:04:56.350
we can use our factory method.

00:04:56.350 --> 00:04:57.330
You'll notice.

00:04:57.330 --> 00:04:58.300
Here we've got the user,

00:04:58.300 --> 00:05:02.570
which we can no longer use because the visibility with marches package private so we could

00:05:02.570 --> 00:05:02.830
just knew.

00:05:02.830 --> 00:05:05.820
Now user dot create regular user.

00:05:05.820 --> 00:05:11.350
And then we take this out now because we don't need it anymore.

00:05:11.350 --> 00:05:18.900
Optimize the imports and then make the same call here.

00:05:18.900 --> 00:05:20.820
So I did a little bit of re function day,

00:05:20.820 --> 00:05:22.410
just a tiny things up,

00:05:22.410 --> 00:05:23.270
a bit nicer.

00:05:23.270 --> 00:05:27.070
And then we have this user type people who want to get the user type as well.

00:05:27.070 --> 00:05:28.310
Let's put it,

00:05:28.310 --> 00:05:29.850
get on there for the user type.

00:05:29.850 --> 00:05:32.540
Once again,

00:05:32.540 --> 00:05:37.150
please get into the habit whenever you add new fields of regenerating hash coding equals.

00:05:37.150 --> 00:05:43.830
Just accept all those that's one.

00:05:43.830 --> 00:05:47.870
So this user classes fleshed out a bit more now,

00:05:47.870 --> 00:05:48.530
which is nice.

00:05:48.530 --> 00:05:53.230
So let's go back into use a repository and put in some extra users on.

00:05:53.230 --> 00:05:55.950
This is because we're also gonna create on menus in this as well,

00:05:55.950 --> 00:05:56.790
which we contest with.

00:05:56.790 --> 00:06:00.060
So it's not another regular user.

00:06:00.060 --> 00:06:01.400
Say,

00:06:01.400 --> 00:06:01.950
Susie,

00:06:01.950 --> 00:06:13.250
it's a fabric Deborah on these regular uses.

00:06:13.250 --> 00:06:19.100
Now we'll have some I mean,

00:06:19.100 --> 00:06:19.600
uses.

00:06:19.600 --> 00:06:22.250
Let's just say we've got one.

00:06:22.250 --> 00:06:23.600
I mean,

00:06:23.600 --> 00:06:24.150
for now,

00:06:24.150 --> 00:06:25.450
which is Thomas.

00:06:25.450 --> 00:06:32.860
Yep,

00:06:32.860 --> 00:06:33.680
that looks good.

00:06:33.680 --> 00:06:35.890
So that gives us enough code for now,

00:06:35.890 --> 00:06:36.850
so let's move on.

