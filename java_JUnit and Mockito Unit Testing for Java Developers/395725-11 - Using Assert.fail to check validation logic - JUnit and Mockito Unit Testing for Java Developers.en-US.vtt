WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.590
in this video,

00:00:02.590 --> 00:00:04.300
we're going to continue from the previous video.

00:00:04.300 --> 00:00:07.840
We will learn how we can use the search dot failed to explicitly fail a test and explore

00:00:07.840 --> 00:00:09.900
where we actually might want to use that mechanism.

00:00:09.900 --> 00:00:10.740
So let's jump in.

00:00:10.740 --> 00:00:11.760
They might be thinking,

00:00:11.760 --> 00:00:12.870
Where is that gonna be useful?

00:00:12.870 --> 00:00:14.840
Where Why would ever want to fail the test?

00:00:14.840 --> 00:00:15.270
What?

00:00:15.270 --> 00:00:15.940
You might want to do that.

00:00:15.940 --> 00:00:16.690
For example,

00:00:16.690 --> 00:00:18.350
if you testing some exception handling.

00:00:18.350 --> 00:00:23.080
So you could imagine having a have a try,

00:00:23.080 --> 00:00:31.760
catch some kind of validation error e.

00:00:31.760 --> 00:00:41.520
And if we supply but input to the system in the test that where Invoking the test method

00:00:41.520 --> 00:00:48.540
off Imagine this comment here is replaced with natural method.

00:00:48.540 --> 00:00:52.520
Call to the classical testing on you specifically a bit bad input.

00:00:52.520 --> 00:00:55.590
If you could be bad input and you expect a validation error to occur,

00:00:55.590 --> 00:00:57.390
then you expect that you're immediately.

00:00:57.390 --> 00:00:58.820
Then you end up in the catch block,

00:00:58.820 --> 00:01:01.350
which means that if you end up on this line here,

00:01:01.350 --> 00:01:05.090
then you didn't end up in the catch block,

00:01:05.090 --> 00:01:08.290
which means the class you're testing didn't throw a validation era.

00:01:08.290 --> 00:01:12.300
And so at that point you might want to fail the test and say something like The validation

00:01:12.300 --> 00:01:16.250
didn't kick in or some more descriptive nice error message in that?

00:01:16.250 --> 00:01:16.870
No,

00:01:16.870 --> 00:01:19.350
Obviously ignore the fact that this is red here,

00:01:19.350 --> 00:01:24.210
have just typed in a random error thou fictional AP on right through.

00:01:24.210 --> 00:01:24.630
Actually,

00:01:24.630 --> 00:01:25.200
in fact as well,

00:01:25.200 --> 00:01:28.570
thinking about it wouldn't be an error as an error is really like a stop the World Cup type

00:01:28.570 --> 00:01:28.890
thing.

00:01:28.890 --> 00:01:30.150
It would be an exception.

00:01:30.150 --> 00:01:33.840
So maybe there's a checked exception which is throwing out from this a p I that you've

00:01:33.840 --> 00:01:34.200
written.

00:01:34.200 --> 00:01:36.990
So we're just supposing that here and at this point,

00:01:36.990 --> 00:01:37.850
it probably thinking.

00:01:37.850 --> 00:01:42.260
But you've just told me a few seconds ago that we can put expected equals and then an

00:01:42.260 --> 00:01:45.530
exception class that were expecting to be thrown on that would make the test pass.

00:01:45.530 --> 00:01:46.640
And that's true.

00:01:46.640 --> 00:01:47.420
You can do that.

00:01:47.420 --> 00:01:48.400
And then you're probably thinking,

00:01:48.400 --> 00:01:48.520
Well,

00:01:48.520 --> 00:01:48.940
in which case,

00:01:48.940 --> 00:01:52.160
why would I want to even have the try catch in the first place?

00:01:52.160 --> 00:01:54.350
Why would even want to have this catch block?

00:01:54.350 --> 00:01:58.260
And the reason is because in the catch book he might want to do some kind of extra

00:01:58.260 --> 00:01:58.950
assertions.

00:01:58.950 --> 00:01:59.520
So,

00:01:59.520 --> 00:01:59.890
for example,

00:01:59.890 --> 00:02:03.350
if you set things on this validation exception to be set different parameters,

00:02:03.350 --> 00:02:07.600
or you expect the violation exception to carry some kind of state with it that maybe you

00:02:07.600 --> 00:02:08.940
want to do with some assertions,

00:02:08.940 --> 00:02:12.640
which check what's been set on it on what the state is that it's carrying.

00:02:12.640 --> 00:02:16.020
So that's one example where you could use that and get to know how to write better test

00:02:16.020 --> 00:02:16.600
with your unit.

00:02:16.600 --> 00:02:17.790
As you get more experience with it,

00:02:17.790 --> 00:02:19.800
you'll find other opportunities to use this as well.

00:02:19.800 --> 00:02:21.800
But that's just one example we wanted to give you,

00:02:21.800 --> 00:02:22.950
so that's my home.

