WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.990
now,

00:00:02.990 --> 00:00:05.550
when I was recording this video actually made a mistake,

00:00:05.550 --> 00:00:08.790
and I could just re record the video.

00:00:08.790 --> 00:00:12.540
But I wanted to leave the video at is because it shows us how we can use Congress with

00:00:12.540 --> 00:00:13.050
lists.

00:00:13.050 --> 00:00:15.570
And also it shows you that anybody makes mistakes.

00:00:15.570 --> 00:00:16.370
So don't feel pain.

00:00:16.370 --> 00:00:18.530
If you writing unit tests and you make mistakes,

00:00:18.530 --> 00:00:19.880
everybody makes mistakes.

00:00:19.880 --> 00:00:20.880
That's perfectly fine.

00:00:20.880 --> 00:00:25.120
But what I would recommend is that you check over your work at regular intervals just to

00:00:25.120 --> 00:00:26.180
make sure that it makes sense.

00:00:26.180 --> 00:00:27.750
And that's what I did in this video,

00:00:27.750 --> 00:00:32.050
and I realize it didn't make sense and at that point then enables you to be able to

00:00:32.050 --> 00:00:34.710
backtrack and correct what you've done and then move forward.

00:00:34.710 --> 00:00:36.390
But I think it's useful to see anyway,

00:00:36.390 --> 00:00:38.340
just A J that you don't have to be perfect.

00:00:38.340 --> 00:00:40.000
I'm not to worry if you do make a mistake.

00:00:40.000 --> 00:00:45.050
So what I want to put here is hand Crist expression,

00:00:45.050 --> 00:00:48.000
which basically encapsulates both of these two things.

00:00:48.000 --> 00:00:48.690
Or rather,

00:00:48.690 --> 00:00:50.270
it combines both of those two things.

00:00:50.270 --> 00:00:51.040
So,

00:00:51.040 --> 00:00:51.420
as I say,

00:00:51.420 --> 00:00:53.990
whereas we can check the individual user,

00:00:53.990 --> 00:00:54.650
one individual,

00:00:54.650 --> 00:00:56.820
you the tools that we can do an index base.

00:00:56.820 --> 00:01:03.220
Get on the list to get the user one on the case of the 2nd 1 user to and then perform these

00:01:03.220 --> 00:01:08.190
individual assertions on the object this past back does return from the collection.

00:01:08.190 --> 00:01:10.450
There's a nicer way of being able to do it now.

00:01:10.450 --> 00:01:14.480
As we get more deeper into hand Crist on Look at how we can analyze collections.

00:01:14.480 --> 00:01:15.950
Also,

00:01:15.950 --> 00:01:20.190
another aspect a very mind is that get regular users returns a set on.

00:01:20.190 --> 00:01:24.380
So this test should actually break because we can't guarantee the order of elements that

00:01:24.380 --> 00:01:25.250
come back from a set.

00:01:25.250 --> 00:01:27.790
So prizes for guessing.

00:01:27.790 --> 00:01:30.750
The mistake that I made when I did this Yes,

00:01:30.750 --> 00:01:31.160
that's right.

00:01:31.160 --> 00:01:33.370
I didn't use the result of this.

00:01:33.370 --> 00:01:37.730
I didn't use the actual users return value and said,

00:01:37.730 --> 00:01:40.470
I'm mistaking the used to use a list That's OK,

00:01:40.470 --> 00:01:41.970
because we were demonstrating Ham quest.

00:01:41.970 --> 00:01:43.850
Let's just fix it up now.

00:01:43.850 --> 00:01:53.910
And of course we see we can't do this now because we don't have to get method on a set

00:01:53.910 --> 00:01:54.260
anyway.

00:01:54.260 --> 00:01:57.390
So in these circumstances,

00:01:57.390 --> 00:02:00.270
you wouldn't really be able to use this kind of thing.

00:02:00.270 --> 00:02:03.270
But I wanted to demonstrate how you could use it if you had a least.

00:02:03.270 --> 00:02:04.360
However,

00:02:04.360 --> 00:02:05.110
we don't have a list.

00:02:05.110 --> 00:02:10.100
So let's fix it up in a different way by using a really nice match in ham Crest called.

00:02:10.100 --> 00:02:12.060
Is it terrible containing now?

00:02:12.060 --> 00:02:15.840
This is better than going to allow us to do assertions on collections.

00:02:15.840 --> 00:02:16.250
Okay,

00:02:16.250 --> 00:02:20.590
Just come in these out now so we don't have any red.

00:02:20.590 --> 00:02:21.980
Yeah,

00:02:21.980 --> 00:02:22.540
that's gon Day.

00:02:22.540 --> 00:02:24.930
And left inside on the everything compiles.

00:02:24.930 --> 00:02:26.230
And we spotted our mistake.

00:02:26.230 --> 00:02:29.150
We could move on and get to using conquest with collections.

