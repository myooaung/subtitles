WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.890
in this video,

00:00:02.890 --> 00:00:06.070
we're going to develop the service a little bit more so that we can pull back some users

00:00:06.070 --> 00:00:07.120
from the user repository.

00:00:07.120 --> 00:00:08.070
So let's get to this.

00:00:08.070 --> 00:00:09.990
Now lets out another method.

00:00:09.990 --> 00:00:10.400
Now,

00:00:10.400 --> 00:00:15.170
let's just say find all should we?

00:00:15.170 --> 00:00:16.150
Don't this method here,

00:00:16.150 --> 00:00:17.640
I don't think about it.

00:00:17.640 --> 00:00:21.400
What I'm gonna do now is I'm gonna put a method to find all the admin users or to find all

00:00:21.400 --> 00:00:22.350
the regular users.

00:00:22.350 --> 00:00:23.290
We could put that here,

00:00:23.290 --> 00:00:23.860
but instead,

00:00:23.860 --> 00:00:26.900
let's put it higher up an infusion of the service class.

00:00:26.900 --> 00:00:31.900
So in here we've got an authentication service which is responsible for authenticating

00:00:31.900 --> 00:00:33.650
users by checking the user name and password,

00:00:33.650 --> 00:00:35.600
Let's create another class.

00:00:35.600 --> 00:00:36.780
You know,

00:00:36.780 --> 00:00:38.290
there's no we can put it in here.

00:00:38.290 --> 00:00:38.650
For now,

00:00:38.650 --> 00:00:39.270
I was thinking,

00:00:39.270 --> 00:00:40.150
created the classical like,

00:00:40.150 --> 00:00:40.600
for example,

00:00:40.600 --> 00:00:41.890
user enquiry service.

00:00:41.890 --> 00:00:45.050
Maybe that's you might want to create different service for this.

00:00:45.050 --> 00:00:46.210
It could be viewed that,

00:00:46.210 --> 00:00:46.450
like,

00:00:46.450 --> 00:00:46.640
you know,

00:00:46.640 --> 00:00:51.400
authentication is different from generally accessing users.

00:00:51.400 --> 00:00:52.580
Um,

00:00:52.580 --> 00:00:55.660
we're not designing a four system here,

00:00:55.660 --> 00:00:59.110
so let's just putting authentication service now for the sake of the demo C inside

00:00:59.110 --> 00:01:00.170
authentication service.

00:01:00.170 --> 00:01:07.610
Let's have an extra method now public least.

00:01:07.610 --> 00:01:08.230
Actually,

00:01:08.230 --> 00:01:09.670
just let's that let's to make it public saying,

00:01:09.670 --> 00:01:10.160
In fact,

00:01:10.160 --> 00:01:13.400
normally with GOP hibernate those kind of things.

00:01:13.400 --> 00:01:14.910
When they're executing queries,

00:01:14.910 --> 00:01:16.010
you tend to get back a list.

00:01:16.010 --> 00:01:20.390
That's because the execution of sequel might return a collection that's ordered,

00:01:20.390 --> 00:01:20.910
for example,

00:01:20.910 --> 00:01:23.070
if you have an order by clause in generally one.

00:01:23.070 --> 00:01:27.720
But it might do on because it might do is important that the GOP and hibernate libraries,

00:01:27.720 --> 00:01:28.770
GBC libraries,

00:01:28.770 --> 00:01:31.510
those kind of things that they provide that facilities that's in general,

00:01:31.510 --> 00:01:33.360
where you'll always get things back into a list.

00:01:33.360 --> 00:01:34.130
But here,

00:01:34.130 --> 00:01:34.470
of course,

00:01:34.470 --> 00:01:35.220
in this service layer,

00:01:35.220 --> 00:01:36.250
we know better than that.

00:01:36.250 --> 00:01:37.430
We don't care about ordering,

00:01:37.430 --> 00:01:38.950
so we can just change it to a set.

00:01:38.950 --> 00:01:39.820
So I just do that,

00:01:39.820 --> 00:01:40.010
you know,

00:01:40.010 --> 00:01:43.820
which is not something we probably do if we're writing proper production cut anyhow.

00:01:43.820 --> 00:01:46.050
So here we got a public set off.

00:01:46.050 --> 00:01:48.850
Let's say user Rob Jenks,

00:01:48.850 --> 00:01:54.380
let's just think it's regular uses.

00:01:54.380 --> 00:01:58.750
And to do this basically return,

00:01:58.750 --> 00:02:00.950
use a repository,

00:02:00.950 --> 00:02:07.970
find all and then let's stream them using the job extremes.

00:02:07.970 --> 00:02:10.210
FBI filter.

00:02:10.210 --> 00:02:12.050
A pretty good on a user object.

00:02:12.050 --> 00:02:18.300
I want to say that user is life and use a get use.

00:02:18.300 --> 00:02:22.060
The time equals equals use.

00:02:22.060 --> 00:02:25.860
The type regularly was a This is right.

00:02:25.860 --> 00:02:28.950
The reason this is red is because we need a 1.8 J.

00:02:28.950 --> 00:02:29.070
D.

00:02:29.070 --> 00:02:29.400
K.

00:02:29.400 --> 00:02:30.200
That's okay,

00:02:30.200 --> 00:02:32.860
let's go in here making 1.8 unique a reference for it.

00:02:32.860 --> 00:02:41.170
So Target Point could it's 1.8.

00:02:41.170 --> 00:02:41.780
That's fine,

00:02:41.780 --> 00:02:44.550
that if we right click here,

00:02:44.550 --> 00:02:47.550
I'm going to module settings.

00:02:47.550 --> 00:02:52.450
So the language level to eight on do OK,

00:02:52.450 --> 00:02:54.350
what should we find them?

00:02:54.350 --> 00:02:56.750
Because we haven't finished it.

00:02:56.750 --> 00:03:01.550
So we didn't need to collects those results into a set.

00:03:01.550 --> 00:03:03.420
So with that intelligent idea,

00:03:03.420 --> 00:03:06.680
there very quickly to be able to use Judy K eight features.

00:03:06.680 --> 00:03:10.010
But a better way of doing this is to do it via configuring the maven.

00:03:10.010 --> 00:03:10.870
Compile a plug in,

00:03:10.870 --> 00:03:12.750
and we'll see how to do that in the next video

