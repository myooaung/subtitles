WEBVTT
1
00:00:00.870 --> 00:00:06.680
Write in the previews Statoil toil we detected the faces using the detect Montell scale method from

2
00:00:06.680 --> 00:00:13.650
our face cascade object and we gather the coordinates and the width and height of the detector rectangles

3
00:00:13.950 --> 00:00:20.420
in faces we iterated through the faces to draw the rectangles around them.

4
00:00:20.590 --> 00:00:26.250
And now now that we have those rectangles we can detect the eyes because we are actually going to take

5
00:00:26.250 --> 00:00:31.920
the eyes in the referential of the faces that is in the referentially of these rectangles.

6
00:00:31.920 --> 00:00:38.730
So the first thing we're going to do to detect the eyes is to get to region of interest inside the rectangles

7
00:00:39.060 --> 00:00:45.390
and y2 region of interest because we need one region of interest for the black and white image in which

8
00:00:45.390 --> 00:00:48.500
the cascade is going to be applied to detect the eyes.

9
00:00:48.690 --> 00:00:54.900
And of course one other region of interest for the original colored image because we will draw the rectangles

10
00:00:55.200 --> 00:00:57.600
in the original color image.

11
00:00:57.600 --> 00:00:59.780
So let's get these two regions of interest.

12
00:00:59.820 --> 00:01:03.390
So the first one for the black and white image.

13
00:01:03.390 --> 00:01:13.590
I'm going to call it our I underscore gray and I'm going to take my gray image that is the black and

14
00:01:13.590 --> 00:01:20.910
white image and I'm going to take the zone of the rectangles which corresponds to the first range y

15
00:01:21.330 --> 00:01:30.270
Collin y plus H H is the height and then Same for x which is the x coordinate of the upper left corner

16
00:01:30.270 --> 00:01:31.410
of the rectangle.

17
00:01:31.500 --> 00:01:35.100
And we're taking the range from x to x.

18
00:01:35.100 --> 00:01:37.460
Plus the width which is W..

19
00:01:37.780 --> 00:01:45.270
Right now we have our zone of interest which corresponds exactly to the zone inside the detector rectangle.

20
00:01:45.900 --> 00:01:47.880
But remember we need to do that.

21
00:01:48.030 --> 00:01:55.310
We need to get a region of interest for both the gray images and the original color image.

22
00:01:55.350 --> 00:02:03.390
So I'm introducing a new variable here which is going to be our own eye color design for the original

23
00:02:03.390 --> 00:02:09.990
color image and therefore I need to here not gray but frame which is my original color image and the

24
00:02:09.990 --> 00:02:12.330
same zones of coordinates.

25
00:02:12.330 --> 00:02:18.420
All right so now we have two region of interest the zone inside the rectangle detecting the faces both

26
00:02:18.450 --> 00:02:21.550
in the black and white image and the colored image.

27
00:02:21.930 --> 00:02:25.590
And now now that we have this we can detect the eyes.

28
00:02:25.740 --> 00:02:29.280
And we're going to detect them in the region of interest.

29
00:02:29.370 --> 00:02:36.210
Of course the gray image because the Cascades are applied in black and white images.

30
00:02:36.210 --> 00:02:38.120
And so how are we going to detect the eyes.

31
00:02:38.160 --> 00:02:43.050
Well we're going to do exactly the same as what we did for the faces we're going to introduce a new

32
00:02:43.050 --> 00:02:49.770
variable which we're going to call ice then we're going to take our eye cascade object from the cascade

33
00:02:49.770 --> 00:02:57.000
classified class and we're going to apply to detect multihulls scale method to detect the ice that is

34
00:02:57.000 --> 00:03:03.060
to get the coordinates of the upper left corner of the rectangle detecting the eyes and the width and

35
00:03:03.060 --> 00:03:05.040
the height of these rectangles.

36
00:03:05.040 --> 00:03:17.610
So basically what we simply need to do is take this and here paste it replies here faces by eyes.

37
00:03:17.650 --> 00:03:22.270
That's a new variable to get these doubles of coordinates with and height for the eyes the rectangle

38
00:03:22.270 --> 00:03:23.590
detecting the eyes.

39
00:03:23.620 --> 00:03:31.090
And here we of course need to take not our face Cascada object but our eye Cascada objects and then

40
00:03:31.090 --> 00:03:36.510
same to detect multifocal method to detect Montell scale method as a method of the Cascade pass first

41
00:03:36.520 --> 00:03:43.690
class so we can use it for as many objects of the Cascade class for class as we want and then do we

42
00:03:43.690 --> 00:03:45.990
need to replace here Grey by something.

43
00:03:46.120 --> 00:03:52.750
Yes of course because we're detecting the eyes in the referential of the face there is a zone inside

44
00:03:52.750 --> 00:03:54.480
the rectangle detecting the face.

45
00:03:54.670 --> 00:03:57.740
That's just in order to save some computation time.

46
00:03:57.880 --> 00:04:05.080
So of course we need to replace Gray here by the region of interest in black and white and that is all

47
00:04:05.140 --> 00:04:06.790
I underscore.

48
00:04:06.790 --> 00:04:07.610
Gray.

49
00:04:07.840 --> 00:04:08.740
Perfect.

50
00:04:08.830 --> 00:04:12.160
And then are we going to change these numbers here.

51
00:04:12.190 --> 00:04:19.270
I remind that this first one here corresponds to descale factor by which we reduce the size of the images

52
00:04:19.480 --> 00:04:22.590
or equivalently by which we increase the size of the filters.

53
00:04:22.590 --> 00:04:23.690
That is the kernels.

54
00:04:23.890 --> 00:04:28.770
And yes we are going to replace it by 1 point 1 again.

55
00:04:28.870 --> 00:04:30.490
This is by experimenting.

56
00:04:30.550 --> 00:04:33.900
We get some good results with that some fast result.

57
00:04:33.970 --> 00:04:39.470
So 1.1 and then are we going to keep the same number of minimum neighbors.

58
00:04:39.580 --> 00:04:46.090
I remind this is the minimum number of zones around the accepted zone to be accepted and yes we are

59
00:04:46.090 --> 00:04:48.520
going to replace it by 3.

60
00:04:48.550 --> 00:04:50.580
That will give us some good results.

61
00:04:50.590 --> 00:04:51.590
All right.

62
00:04:51.590 --> 00:04:54.190
So we now have our eyes.

63
00:04:54.190 --> 00:04:57.580
That is a table of the coordinates of the upper left corner.

64
00:04:57.580 --> 00:05:00.530
The width and the height of the rectangle surrounding the eyes.

65
00:05:00.850 --> 00:05:05.970
And so now we are ready to start a new for loop in which.

66
00:05:06.010 --> 00:05:12.280
Well again we will draw the rectangles around the ice so we'll do that in the next to tutorial and until

67
00:05:12.280 --> 00:05:13.810
then enjoy computer vision.
