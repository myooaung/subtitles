1
00:00:00,985 --> 00:00:05,524
Okay, before we start looking into Spring Data repositories in more detail,

2
00:00:05,524 --> 00:00:08,320
we'll first look at a repository hierarchy and how everything

3
00:00:08,320 --> 00:00:11,363
relates to each other across multiple modules.

4
00:00:11,363 --> 00:00:13,496
The base interface is a repository interface,

5
00:00:13,496 --> 00:00:16,891
which all other repository instances inherit from.

6
00:00:16,891 --> 00:00:19,060
This is a marker interface with no methods,

7
00:00:19,060 --> 00:00:21,561
just argument types for the entity you want to

8
00:00:21,561 --> 00:00:24,466
persist and the ID class of the entity.

9
00:00:24,466 --> 00:00:26,353
Below this is the CRUDRepository,

10
00:00:26,353 --> 00:00:29,145
the one which is most used in Spring Data projects.

11
00:00:29,145 --> 00:00:32,728
As the name implies, it comes with generic operations for creating,

12
00:00:32,728 --> 00:00:35,919
reading, updating, and deleting entities.

13
00:00:35,919 --> 00:00:38,013
That's then inherited by the PagingAndSortingRepository,

14
00:00:38,013 --> 00:00:40,840
which again, as the name implies,

15
00:00:40,840 --> 00:00:44,059
adds additional generic operations for paging and sorting the data,

16
00:00:44,059 --> 00:00:47,180
as well as the original CRUD operations.

17
00:00:47,180 --> 00:00:49,476
Whilst the free interfaces live in Spring Data

18
00:00:49,476 --> 00:00:51,735
Commons and are used by all modules,

19
00:00:51,735 --> 00:00:56,069
the remaining subinterfaces or implementations are module-specific.

20
00:00:56,069 --> 00:00:59,718
It's these that will contain all the code specific to the module's database,

21
00:00:59,718 --> 00:01:02,987
such as a JPA or MongoDB repository.

22
00:01:02,987 --> 00:01:06,018
It's important to note that you're not going to be touching this code

23
00:01:06,018 --> 00:01:12,000
yourself and will only be working with the interfaces provided in Spring Data Commons throughout this course.

