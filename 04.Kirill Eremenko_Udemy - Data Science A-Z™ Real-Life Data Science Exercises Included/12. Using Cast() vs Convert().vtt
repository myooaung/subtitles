WEBVTT
1

00:00:00.820  -->  00:00:05.920
In this tutorial we will be talking about the explicit type conversion in Ezekiel.

2

00:00:06.000  -->  00:00:12.480
Here I've got the order breakdown table and I've selected all of the rows from it and here they're are

3

00:00:12.480  -->  00:00:14.010
displayed at the bottom.

4

00:00:14.010  -->  00:00:19.950
Now let's have a look at something that we've already done before when we want to for instance order

5

00:00:19.950  -->  00:00:23.020
by a roll which is actually a number.

6

00:00:23.250  -->  00:00:33.870
If we just type in order by let's say let's not say discount let's say sales then if we run this you

7

00:00:33.870  -->  00:00:41.250
will see that it's actually not ordered correctly because sales has been treated as a text rather than

8

00:00:41.250  -->  00:00:42.090
a number.

9

00:00:42.090  -->  00:00:49.500
Now if we want to order by sales as a number then we have to convert this text into a number and ideally

10

00:00:49.620  -->  00:00:55.080
of course sales would be stored as a number ready you know table but in this case it's it's not like

11

00:00:55.080  -->  00:00:56.710
that so we have to convert there.

12

00:00:56.820  -->  00:01:00.220
That means we have to perform an explicit conversion in this case.

13

00:01:00.450  -->  00:01:03.440
And there are two types two ways you can do an explicit conversion.

14

00:01:03.450  -->  00:01:08.990
One is called cost and the function costs and one that's called the function convert will start over

15

00:01:08.990  -->  00:01:11.070
function cost because it's a bit easier.

16

00:01:11.370  -->  00:01:14.560
So we've already seen this function before cost.

17

00:01:14.680  -->  00:01:17.740
Then your column name.

18

00:01:17.790  -->  00:01:19.990
And then you type in as.

19

00:01:20.470  -->  00:01:28.740
And what would you want to cost it as I'd like to cast it as a float because float is our type that

20

00:01:28.740  -->  00:01:30.800
has decimal points.

21

00:01:30.840  -->  00:01:34.160
So if I execute this now you will see that.

22

00:01:34.380  -->  00:01:39.750
Now my table has been ordered correctly by the

23

00:01:42.450  -->  00:01:44.130
number rather than the text.

24

00:01:44.130  -->  00:01:49.380
So it's going from the lowest to the highest which is great.

25

00:01:49.440  -->  00:01:54.870
Now if you want to look at the other function then we need to change this row.

26

00:01:54.870  -->  00:02:02.370
So I'm just going to commented it out and I will add the other row that we're going to be looking at

27

00:02:02.380  -->  00:02:02.450
.

28

00:02:02.520  -->  00:02:08.680
So ORDER BY and is then of course we're going to use convert and convert works a bit differently.

29

00:02:08.730  -->  00:02:14.400
Convert takes three parameters for the first two are the important ones the third one is only four dates

30

00:02:14.400  -->  00:02:14.460
.

31

00:02:14.460  -->  00:02:20.960
So here we want to convert the target type for us is going to be float.

32

00:02:20.960  -->  00:02:28.630
So here you first specify the target type and then you put a comma and then you type in the expression

33

00:02:28.630  -->  00:02:28.650
.

34

00:02:28.650  -->  00:02:31.410
So in this case will be sales.

35

00:02:31.450  -->  00:02:33.990
And was going to add the brackets here as well.

36

00:02:34.500  -->  00:02:41.590
So if I run this now same result it's ordered correctly but we just use a different approach.

37

00:02:41.700  -->  00:02:47.490
And so that's how you can convert data in a skew all you can either use the convert or the cost function

38

00:02:47.490  -->  00:02:48.620
.

39

00:02:48.660  -->  00:02:54.560
I find that the cost is a bit faster because it's a shorter word to type.

40

00:02:54.690  -->  00:02:59.390
And it kind of makes sense when you read it.

41

00:02:59.390  -->  00:03:07.780
So costs sales as a float whereas convert's you have to remember that converts into a float the very

42

00:03:07.930  -->  00:03:09.030
the column sales.

43

00:03:09.030  -->  00:03:11.180
So it's a bit more difficult use.

44

00:03:11.230  -->  00:03:12.240
You should use cost.

45

00:03:12.410  -->  00:03:16.150
I would advise that use cost when you're not working with dates.

46

00:03:16.200  -->  00:03:21.750
Use convert when you're working with dates because you'll need a third variable and we'll talk about

47

00:03:21.750  -->  00:03:26.620
why and how you can use a third variable in the next section of the course.

48

00:03:26.640  -->  00:03:30.790
When we come across a convert one more time.

49

00:03:31.050  -->  00:03:38.010
So that's how you can convert variables in Eskew I'll give it a go see see how you can convert for instance

50

00:03:38.010  -->  00:03:44.170
the quantity into an integer discount into an other float.

51

00:03:44.280  -->  00:03:50.060
But of course try the different methods try converts try cost and see which one you like more
