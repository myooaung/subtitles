1

00:00:00,780  -->  00:00:06,510
We're rapidly approaching the end of this section and we've pretty much done everything we needed to

2

00:00:06,510  -->  00:00:14,550
do to work with our daughter from here so it might be a surprise but pretty much our tables are ready

3

00:00:14,550  -->  00:00:16,220
to do analysis on.

4

00:00:16,220  -->  00:00:18,320
So for instance let's have a look at this one.

5

00:00:18,320  -->  00:00:20,700
Orac office supplies a customer list.

6

00:00:20,760  -->  00:00:23,850
We've already prepared the table.

7

00:00:23,850  -->  00:00:26,850
We've put the columns in there correct formats.

8

00:00:26,910  -->  00:00:32,580
Everything is ready so we've done everything we could to get from our row file to a workable file.

9

00:00:32,580  -->  00:00:38,760
Same thing with transactional data here you can see the dates customer IDs everything is in the correct

10

00:00:38,760  -->  00:00:45,270
formats and so on and we've got all prox saved in case we need to check the process and redo some of

11

00:00:45,270  -->  00:00:45,960
this work.

12

00:00:46,200  -->  00:00:51,030
So pretty much what you can do from here is you can connect different types of analytics tools like

13

00:00:51,270  -->  00:00:59,630
Tablo are Piscean whatever tool you're using to analyze data to these tables in as few.

14

00:00:59,640  -->  00:01:05,250
So there you have like a lot of benefits that first of all they're clean they're prepared.

15

00:01:05,250  -->  00:01:06,570
You've done all the groundwork.

16

00:01:06,570  -->  00:01:09,330
Q Well you've got all this traceability of what you've done.

17

00:01:09,330  -->  00:01:15,260
Also NSU all unnecessary but also on top of all that you have a storage facility.

18

00:01:15,270  -->  00:01:22,320
These tables are now stored in as well and you don't have to work with CSC or Excel or other types of

19

00:01:22,320  -->  00:01:28,770
files you just hook up your analytics tools to your server and you access your tables from there.

20

00:01:29,010  -->  00:01:36,180
And that's that's how it works so pretty much you've done this 70 percent of that work that remember

21

00:01:36,220  -->  00:01:41,340
was always saying you've done that 70 percent of the time you're going to be doing more work of data

22

00:01:41,340  -->  00:01:41,840
preparing.

23

00:01:41,880  -->  00:01:45,300
Well we've done it that this is the end pretty much.

24

00:01:45,300  -->  00:01:48,350
We are ready to work with our data.

25

00:01:48,390  -->  00:01:50,980
The remaining 30 percent are the fun bit.

26

00:01:51,050  -->  00:01:59,770
They're the exciting happy visualizations and modeling and and stuff like that but just to finish off

27

00:01:59,770  -->  00:02:06,270
of this section I wanted to show you a few more other things that you can do and ask you all just to

28

00:02:06,270  -->  00:02:14,190
perhaps make your life easier or maybe give you some ideas of how you can structure your daughter for

29

00:02:14,190  -->  00:02:22,650
analysis so just to clarify this is we're done with for the preparation that this is like an extra bonus

30

00:02:22,650  -->  00:02:27,360
that you can do to maybe make your work easier further on.

31

00:02:27,360  -->  00:02:27,820
Why.

32

00:02:27,870  -->  00:02:32,150
Well on top of all of the things we mentioned are beautiful bottom scale.

33

00:02:32,160  -->  00:02:40,770
It is also a very good facility to manipulate your data so if in case your tables are not exactly as

34

00:02:40,770  -->  00:02:48,300
you want them for you or our modeling or for your Tablo visualisations you don't have to you can you

35

00:02:48,300  -->  00:02:53,190
can connect to these tables as they are now to the working tables to these two.

36

00:02:53,460  -->  00:02:59,730
And and then combine them in our or in Tablo all of those analytical tools they have the capacity to

37

00:02:59,730  -->  00:03:00,360
do that.

38

00:03:00,420  -->  00:03:07,830
However you can prepare your tables a little bit more in this Deuel and that way make that last part

39

00:03:07,830  -->  00:03:09,650
of your work where you visualize and so on.

40

00:03:09,680  -->  00:03:17,940
Even even more seamless because you don't have to do any you know won't have to connect different doorframes

41

00:03:17,940  -->  00:03:21,420
to each other different tables and merges and joins and so on.

42

00:03:21,420  -->  00:03:26,970
You can do a lot of that other remaining groundwork and Asgill And right now I'll show you one of those

43

00:03:26,970  -->  00:03:28,020
tricks.

44

00:03:28,020  -->  00:03:29,700
So all right let's get into it.

45

00:03:29,700  -->  00:03:33,020
We have two tables here let's put them side by side.

46

00:03:33,520  -->  00:03:34,380
Which one is this.

47

00:03:34,380  -->  00:03:37,280
This is the customer list and this is the transactional data.

48

00:03:37,530  -->  00:03:44,340
So here you can see customer ID and you know where they live zip code gender age and here you can see

49

00:03:44,340  -->  00:03:46,410
the transactions that those customers conducted.

50

00:03:46,410  -->  00:03:51,090
Once again these are tiny tables are only 43 rows and and they match one to one.

51

00:03:51,090  -->  00:03:54,590
So there's nothing difficult about them this is just for practice sake.

52

00:03:54,870  -->  00:04:01,590
Here you have the order date order number date customer I.D. region who sold to the customer what they

53

00:04:01,590  -->  00:04:02,230
sold.

54

00:04:02,240  -->  00:04:04,080
Number of units unit price.

55

00:04:04,080  -->  00:04:11,370
So right away you can see that these two tables have one common field it's customer I.D. and you can

56

00:04:11,370  -->  00:04:12,760
connect the two on that field.

57

00:04:12,960  -->  00:04:20,430
And let's say for instance what we want to visualize later on in Tablo or analyze in our is how different

58

00:04:20,820  -->  00:04:26,570
how many sales we have per zip code for for instance a which zip codes are selling the best.

59

00:04:26,570  -->  00:04:33,450
Or let's let's say something like that so we want some data from this table and we want some data from

60

00:04:33,450  -->  00:04:37,150
this step or it could be which genders are buying more.

61

00:04:37,170  -->  00:04:43,020
Let's do that and probably So we want to understand are males buying more are females buying more and

62

00:04:43,590  -->  00:04:44,220
just.

63

00:04:44,220  -->  00:04:47,580
Just so you understand and we're not doing this analysis in as well.

64

00:04:47,670  -->  00:04:52,920
We're just preparing the data so that later we can do this analysis in another tool.

65

00:04:53,400  -->  00:05:01,710
And by that I mean that we need to make sure that gender and units and unit prices are all in one table

66

00:05:01,710  -->  00:05:02,250
altogether.

67

00:05:02,250  -->  00:05:03,900
Right now they're in two separate tables.

68

00:05:03,900  -->  00:05:06,620
So let's see how we can do that in Eskew al.

69

00:05:07,080  -->  00:05:12,390
So I'm going to close that close that we need to create a new prok obviously all we need to create a

70

00:05:12,390  -->  00:05:21,180
new query to join this sort of inquiry so we're going to use at the top we're going to use Diest training

71

00:05:21,870  -->  00:05:31,110
as we're used to go and we'll just write a simple query so select a star from which table we want to

72

00:05:31,110  -->  00:05:39,070
can I grow on take customer lists right and we'll call a table a and will left join it too.

73

00:05:39,090  -->  00:05:44,850
We've talked we talked about joined in the previous section so I'm assuming that you are quite comfortable

74

00:05:44,850  -->  00:05:47,210
with what we're doing right now.

75

00:05:47,850  -->  00:05:51,410
So everything from these to tables.

76

00:05:51,410  -->  00:06:02,910
Join them on a door to have customer ID here equals b b Daut also have Customer ID should come up and

77

00:06:02,910  -->  00:06:05,660
let's run that let's see what happens cyclic top 5.

78

00:06:05,700  -->  00:06:11,180
And as you see here we've got the first stable customer table.

79

00:06:11,220  -->  00:06:11,830
There it is.

80

00:06:11,940  -->  00:06:16,070
And now it's joined to the second table and they have been joined on this field.

81

00:06:16,080  -->  00:06:19,500
Customer ID customer ID so you can see it always matches up.

82

00:06:19,590  -->  00:06:24,770
And this by the way this wouldn't have been possible if we hadn't restored the leading zeros so it's

83

00:06:24,780  -->  00:06:28,760
great that we restored the leading zeros in our data preparation phase.

84

00:06:28,800  -->  00:06:33,390
As you can see we can seamlessly connect the two data sets right here.

85

00:06:33,600  -->  00:06:39,410
And obviously we don't need all the columns we might for our analysis we and definitely we don't duplicate

86

00:06:39,410  -->  00:06:41,690
it like customer did twice.

87

00:06:41,780  -->  00:06:45,450
For analysis we might only need gender.

88

00:06:45,870  -->  00:06:51,910
So we could keep the customer ID as so we know which record came from where.

89

00:06:51,960  -->  00:06:57,920
So would keep customer ID would keep gender and we would keep units in unit price and in fact we don't

90

00:06:57,930  -->  00:07:00,330
need units in price for our analysis.

91

00:07:00,330  -->  00:07:06,480
We know that we need units we need the sales we need the revenue so we need Munis times unit price so

92

00:07:06,480  -->  00:07:07,970
let's go ahead and type that in.

93

00:07:08,280  -->  00:07:18,180
So we want customer ID all we want customer ID from table a then we want and probably better to expand

94

00:07:18,180  -->  00:07:18,660
it like this.

95

00:07:18,660  -->  00:07:28,050
Customer ID from table a then we want gender from table than we want from table B.

96

00:07:28,410  -->  00:07:30,550
We want units.

97

00:07:30,900  -->  00:07:36,330
And so we will call this call because we're multiplying and altering and call them.

98

00:07:36,330  -->  00:07:39,200
It won't have a name so we'll call it revenue.

99

00:07:39,660  -->  00:07:40,530
Let's have a look at that.

100

00:07:40,530  -->  00:07:48,270
So I'm going to execute they go we have customized the gender revenue and now you can simply connect

101

00:07:48,490  -->  00:07:53,260
you know like well you could simply connect tabel or some other tool to this table.

102

00:07:53,340  -->  00:08:03,150
And do you have isolations make no make awesome conclusions and analysis but to perform analysis.

103

00:08:03,150  -->  00:08:08,100
But right now this is just a select statement so this table doesn't exist anywhere.

104

00:08:08,100  -->  00:08:15,540
It's basically we just did an ad hoc query and as soon as we close this query we know we're not going

105

00:08:15,540  -->  00:08:18,310
to have it anymore and we won't have the table or anything.

106

00:08:18,510  -->  00:08:21,870
So right now what I'm going to show you is two things.

107

00:08:21,870  -->  00:08:24,570
First of all we want to put this query into a table.

108

00:08:24,570  -->  00:08:24,980
Right.

109

00:08:25,020  -->  00:08:29,560
So it has to be somewhere here so that later on we can connect to it and to.

110

00:08:29,580  -->  00:08:34,350
We want to save this query as well why we want to say this query because you don't have to say this

111

00:08:34,350  -->  00:08:39,810
query if you know if you just want the table and then connect to it you can sure but I highly recommend

112

00:08:39,810  -->  00:08:44,760
to save all queries when you create a table that you're going to be working with and doing analysis

113

00:08:44,760  -->  00:08:49,680
on so it's not just some some something you did quickly just to check something out you're actually

114

00:08:49,680  -->  00:08:55,080
going to be working it you want to save the query just like before working for us so that then you can

115

00:08:55,080  -->  00:08:57,980
repeat it you can audited you understand what you've done.

116

00:08:57,990  -->  00:09:00,350
You can modify it if you need to.

117

00:09:00,600  -->  00:09:05,850
So that's what we're going to be talking about now and it's going to be long is going to be very very

118

00:09:05,850  -->  00:09:08,590
simple because we already know most of this stuff.

119

00:09:08,700  -->  00:09:11,550
We need a Proc. as you guessed.

120

00:09:11,580  -->  00:09:14,320
That's the way we save stuff in Esky all right.

121

00:09:14,460  -->  00:09:27,210
So let's go and find out or find a proxy or we're going to modify and we will take this Tobit and including

122

00:09:27,210  -->  00:09:27,870
this as.

123

00:09:27,870  -->  00:09:29,170
And then we'll remember to put in.

124

00:09:29,200  -->  00:09:31,940
And there's our.

125

00:09:32,300  -->  00:09:33,960
It's on a template.

126

00:09:33,960  -->  00:09:35,670
This time it won't be at work.

127

00:09:35,670  -->  00:09:44,310
We're building a r table D R B and we're going to call our table.

128

00:09:44,340  -->  00:09:49,950
We're going to keep the name of the project because we normally would have a separate database for every

129

00:09:49,950  -->  00:09:53,180
project but Or or a schema.

130

00:09:53,190  -->  00:09:55,770
But in this case we'll just keep this prefix.

131

00:09:55,770  -->  00:10:03,290
And here we will call this and we'll say gender as well.

132

00:10:03,480  -->  00:10:05,610
So Author everything.

133

00:10:05,610  -->  00:10:08,390
I'll just leave that empty phone for today.

134

00:10:08,710  -->  00:10:14,790
Sheer rule will say it's a work to a d'Harville file so what it does the table is it's derived tables

135

00:10:14,790  -->  00:10:20,970
when you combining two tables when it's not just like a working table is one to one we're here you doing

136

00:10:20,970  -->  00:10:21,910
something so.

137

00:10:22,080  -->  00:10:29,130
And that's why also it's good to add some description so split by gender something that's so totally

138

00:10:29,130  -->  00:10:31,530
up to what you'd like to happen here.

139

00:10:32,190  -->  00:10:35,090
That's our Jarvi Proc..

140

00:10:35,190  -->  00:10:38,980
That's how we start it then we'll have to have an end here.

141

00:10:39,630  -->  00:10:43,250
So right now we need to create it instead of altering it.

142

00:10:43,350  -->  00:10:44,180
That's pretty much it.

143

00:10:44,180  -->  00:10:52,530
So if we run this now it's executed successfully and here you'll see a D'Arby proc PLDT Arvie.

144

00:10:52,590  -->  00:10:58,920
Now the last thing that we have to do is put this result into a table and instead of creating that whole

145

00:10:58,950  -->  00:11:05,880
thing from start where we create the table we delete it created truncated and then select into the to

146

00:11:05,880  -->  00:11:08,580
insert into the table like we did with the workforce.

147

00:11:08,700  -->  00:11:13,770
You can do that but that's tedious and you'd only do that for important files for important tables like

148

00:11:13,770  -->  00:11:19,320
work tables or if you have a major table that you're putting a lot of stuff into for an ad hoc query

149

00:11:19,320  -->  00:11:19,800
like this.

150

00:11:19,800  -->  00:11:21,530
There's a fast way and I'll show you now.

151

00:11:21,720  -->  00:11:30,750
So all you have to do is once you've selected the columns here you just say in two and then you give

152

00:11:30,750  -->  00:11:35,910
your table name so where it you know what the name is going to be it's going to be this name.

153

00:11:35,910  -->  00:11:42,060
And if you do that if you run this now four or three rows affected once again we're going to copy that

154

00:11:42,080  -->  00:11:42,590
.

155

00:11:43,200  -->  00:11:49,590
And if you refresh here you will see that there is a select there's a diary file so we just basically

156

00:11:49,650  -->  00:11:52,490
very quickly selected all the columns in there.

157

00:11:52,590  -->  00:11:58,200
And if you also go to design you will see that they have the right types they have the exact same times

158

00:11:58,230  -->  00:12:01,110
as the columns that we selected from.

159

00:12:01,110  -->  00:12:05,750
So here's a flawed because we multiplied an integer by float and that gives us a float.

160

00:12:05,820  -->  00:12:08,660
And these are char 100 on a larger one.

161

00:12:08,670  -->  00:12:12,660
So like that on the fly very quickly you can create a D'Arby table.

162

00:12:12,660  -->  00:12:15,400
And I recommend this approach if you don't want to waste time.

163

00:12:15,510  -->  00:12:16,440
If you want to save time.

164

00:12:16,520  -->  00:12:19,940
The only thing is how they execute your proc to save it.

165

00:12:19,980  -->  00:12:26,490
Of course you can execute you've got to change it to alter so you Praag But if you rerun this code you'll

166

00:12:26,490  -->  00:12:29,430
see you get an error because there's a dairy file.

167

00:12:29,430  -->  00:12:36,230
So I recommend putting a comment here at the top a multi-line comment where you will drop the table

168

00:12:36,240  -->  00:12:40,200
so drop table this table this one.

169

00:12:40,350  -->  00:12:43,060
No not this one this one.

170

00:12:43,110  -->  00:12:51,180
So if you ever need to rerun this bit you just have to select this line execute and then the table gets

171

00:12:51,180  -->  00:12:53,000
dropped and you can execute this part.

172

00:12:53,100  -->  00:12:58,770
And by the way this is a this is a safe option because if you ever highlight everything in here it will

173

00:12:58,770  -->  00:13:04,860
be highlighted as a comment and if you run it it's not dropping the table because the table this line

174

00:13:04,860  -->  00:13:05,880
is in the comments.

175

00:13:05,900  -->  00:13:10,800
It's not being executed at all so that kind of prevents you from accidentally dropping table so if you

176

00:13:10,800  -->  00:13:15,340
ever want to drop the table you have to specifically select this line by itself.

177

00:13:15,630  -->  00:13:22,040
Drop the table so you assume it's assumed that you know what you're doing and then you select in two

178

00:13:22,060  -->  00:13:22,430
.

179

00:13:22,860  -->  00:13:28,380
And if we're fresh we've got our DARBEE table here ready for us to work.

180

00:13:28,410  -->  00:13:30,230
And then finally say the Proc..

181

00:13:30,300  -->  00:13:37,230
So that is how you can use GRV prox and files to save yourself some time in other analytical tools such

182

00:13:37,230  -->  00:13:45,150
as Tablo and are you're really leveraging the purpose skills design for its design for storage and manipulation

183

00:13:45,150  -->  00:13:45,710
of data.

184

00:13:45,840  -->  00:13:49,130
So if you need to combine some tables why not do it in a secure all
