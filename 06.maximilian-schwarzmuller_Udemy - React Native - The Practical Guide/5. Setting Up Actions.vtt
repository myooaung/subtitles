WEBVTT

00:02.270 --> 00:07.650
In the last lecture we installed redux and react redux and started creating the reducer,

00:07.790 --> 00:11.990
let's now add some actions. For that in the actions folder,

00:12.050 --> 00:18.500
I'm going to add a file named action types, here I want to define all the action types I know

00:18.770 --> 00:27.440
and for our application, I can think of three action types we need right now, one for adding a place, one

00:27.440 --> 00:36.860
for deleting a place and one for selecting a place and maybe even one for unselecting the place so that

00:36.890 --> 00:43.430
we can also use that action to close the modal essentially if we decide to well hit the close button, we

00:43.430 --> 00:46.710
essentially unselect the place we tapped on before.

00:46.730 --> 00:48.810
So it's four actions,

00:48.860 --> 00:53.060
let me simply export four constants here in the action types file

00:53.300 --> 01:00.290
and the convention is to create these constants to have clearly defined action types and you don't have

01:00.290 --> 01:07.430
to type them all over the place again with the danger of mistyping and therefore well adding an error which

01:07.430 --> 01:08.950
is hard to find.

01:08.960 --> 01:15.190
So the first action is add place and the convention is to name the constant,

01:15.320 --> 01:21.710
well like the action type and use all uppercase characters and the value then is just a string with

01:21.710 --> 01:22.340
that value,

01:22.340 --> 01:29.300
so add place and it holds a string, add place, that's our first type.

01:29.420 --> 01:33.200
The second type is delete place if we want to get rid of one,

01:33.200 --> 01:36.940
so here we got delete place like this

01:37.160 --> 01:40.400
and then we will have one for selecting a place,

01:40.400 --> 01:47.030
so let's name this one select place and then finally one for unselecting,

01:47.030 --> 01:58.540
so unselect place or deselect, let's use deselect place, so deselect place is our fourth action type.

01:58.570 --> 02:04.690
Now you might be aware of the concept of action creators, if you aren't, you can learn more about all

02:04.690 --> 02:13.720
of that on the official redux documentation on redux.js.org. The action creator idea is mostly

02:13.720 --> 02:18.340
important for also using asynchronous code in your actions,

02:18.340 --> 02:25.590
it's basically a couple of functions that return objects that represent actions.

02:25.810 --> 02:28.340
And this is an alternative approach,

02:28.450 --> 02:33.940
I will use it though because it's really convenient especially once we start running asynchronous code

02:34.030 --> 02:38.970
or we need to handle side effects which we always handle in actions.

02:38.980 --> 02:43.670
So let me add my places.js file in the actions folder,

02:43.690 --> 02:51.160
this is where I want to store my places related actions and here I will also export a constant and I'll

02:51.160 --> 02:52.820
name it add place,

02:52.870 --> 03:00.490
now named like this, not all uppercase and this actually will be a function. A function which also should

03:00.490 --> 03:07.180
get arguments which describe the place and if we have a look at our app.js file at the add place

03:07.180 --> 03:11.890
handler, we see that for adding a place, right now we need a name.

03:11.890 --> 03:20.350
So I expect to also get the place name as an argument here and then in this function, we simply just

03:20.650 --> 03:28.210
return a javascript object because actions are just javascript objects and an action creator serves

03:28.240 --> 03:35.830
as a factory which spits out actions, so it has to spit out a javascript object. To be a valid action,

03:35.860 --> 03:39.400
this object needs to at least have a type property,

03:39.460 --> 03:42.400
that's the only hard requirement, it needs to have that.

03:42.730 --> 03:45.920
Now we defined the types in our action types file,

03:46.090 --> 03:48.360
so let's import from there,

03:48.430 --> 03:53.410
from action types, you can omit the file extension since it's javascript,

03:53.420 --> 04:01.910
our build workflow will add it automatically and then here, I will import add place and I will also already

04:01.910 --> 04:09.790
import the other ones, so delete, select and deselect, we'll all need them later too.

04:09.830 --> 04:17.480
Now here with that, the type of this object we return here is add place, referring to this add place constant

04:17.630 --> 04:22.760
which held a string which value is add place, now this

04:22.790 --> 04:28.490
action should also have a payload because this action will be consumed by the reducer in the end

04:28.700 --> 04:32.380
and the reducer needs to know the name of the place, so we shall pass it on

04:32.420 --> 04:37.460
and therefore I will always name this place name and pass on the place name

04:37.460 --> 04:38.340
argument here.

04:38.420 --> 04:40.700
So the argument is the value we pass on,

04:40.700 --> 04:45.910
this is then the property name by which we can access it in the reducer later.

04:45.950 --> 04:54.770
So I'm going to now add another action creator, delete place, if we have a look at the app.js file for

04:54.800 --> 04:55.460
this,

04:55.490 --> 05:00.400
you see that for deleting, we don't need any extra information because we always delete the selected

05:00.470 --> 05:05.760
place so we don't expect an argument in this action creator,

05:05.870 --> 05:11.440
we just return a javascript object here which has a type which is delete place and

05:11.450 --> 05:13.390
that's actually all.

05:13.430 --> 05:18.860
Then we need one for selecting a place, so a new action creator,

05:18.980 --> 05:27.000
select place, here the idea is to return a javascript object which allows the reducer to well select

05:27.000 --> 05:33.950
a place and there if we have a look at the app.js file, when we use the place select handler,

05:33.950 --> 05:41.780
we also get the key of the element of the place we want to select. So we should expect that key as an argument in

05:41.810 --> 05:50.060
this action creator too, set the type of the action to select place and then also add a property, maybe place

05:50.060 --> 05:54.000
key which is the key we receive, an instant argument.

05:54.030 --> 05:57.840
Note the fourth and last action creator I'll add is

05:57.900 --> 06:00.320
deselect place, here

06:00.350 --> 06:05.860
I don't expect any argument because we will simply deselect the currently selected place.

06:05.870 --> 06:12.680
So I will just return a javascript object here and in that object, I'll have a type which is deselect

06:12.680 --> 06:20.130
place, not delete, deselect. So that is my action creator file,

06:20.130 --> 06:26.190
now later in the app we'll have multiple action creator files so I'll actually add a new file in the actions

06:26.190 --> 06:28.940
folder which I will name index.js

06:28.950 --> 06:31.890
and there,

06:32.040 --> 06:39.210
I will simply bundle all my exports so that later we can conveniently import from this file only instead

06:39.210 --> 06:41.900
of having to reference all the other files.

06:42.000 --> 06:49.910
So there I will just add export statement and export from my places file here in the same folder,

06:49.920 --> 06:55.780
so from the file we just created and now I simply want to export all the action creators

06:55.830 --> 07:02.550
I added there, so add place, delete place, select place and deselect place. This might look strange but

07:02.550 --> 07:05.630
the idea really is just to have one place we can import from,

07:05.760 --> 07:10.830
it will become really useful once we have more action creator files.

07:10.980 --> 07:18.120
Now with that set up, we can go back to our reducer and start adding logic there to be able to handle

07:18.120 --> 07:20.000
our different action types.
