WEBVTT

00:02.220 --> 00:08.250
So now if these first basic steps taken if I now fill in a number here and we continue this all looks

00:08.250 --> 00:10.330
good to me here.

00:10.420 --> 00:12.980
This all works if we now start a game.

00:12.990 --> 00:19.560
Then I also want to reduce this spacing we have here and I also want to make sure that my box is down

00:19.560 --> 00:20.020
there.

00:20.040 --> 00:23.240
So this log off guesses we have that dissolves.

00:23.250 --> 00:24.490
Looks better.

00:25.050 --> 00:29.820
Now that is something we can do on the game screen of course because that's the screen we're currently

00:29.820 --> 00:31.350
viewing there.

00:31.410 --> 00:37.410
Now for one of course it's the spacing does margin top on our bottom container which is this container

00:37.590 --> 00:43.370
margin top is this distance between the number here and the container and I want to change this now

00:43.510 --> 00:44.720
to change this.

00:44.760 --> 00:47.120
We can again use the dimensions API.

00:47.280 --> 00:54.300
So here I again import dimensions from HREOC native and now down there we can calculate this margin

00:54.510 --> 01:03.630
dynamically what we can do here is we can get again gets the dimensions of our window and then here

01:03.870 --> 01:09.630
the the width or in this case probably the height and then divide this by something but this would be

01:09.630 --> 01:17.430
very cumbersome we could divide this by 20 for example whips by 20 and see if Dad looks good but this

01:17.430 --> 01:21.990
is really a guessing game then might not be what we really want.

01:22.230 --> 01:28.320
Instead we could check how much height we have a way lable and then use a different spacing based on

01:28.320 --> 01:34.920
that we could check if our height is let's say greater than six hundred.

01:35.310 --> 01:41.490
If that's the case we want have a spacing of 20 otherwise we have one of ten so we can also use the

01:41.490 --> 01:46.920
dimensions we're calculating in if condition in this case in a ternary expression here but you could

01:46.920 --> 01:49.890
use it in a normal if check as well.

01:49.970 --> 01:56.300
So now we can go back here and what we now see is that when we start to game we don't have that huge

01:56.300 --> 02:01.580
of a gap here on the smaller screen on the iPhone which is a bigger screen however we definitely have

02:01.670 --> 02:05.960
a bigger gap and to see that clearer you can of course play around with that.

02:06.050 --> 02:12.690
And for example use 30 for smaller screens and 5 30 for bigger screens and 5 for smaller screens.

02:12.800 --> 02:15.170
And now you should definitely see that.

02:15.350 --> 02:17.680
Here we have a small gap.

02:17.840 --> 02:20.450
And here we have a bigger gap.

02:20.750 --> 02:23.540
So we can also use this in if conditions.

02:23.540 --> 02:29.060
Now with that I'll set this back to 20 and 5 here but there's now hopefully also shows yet another way

02:29.060 --> 02:30.110
of using this.

02:30.110 --> 02:34.700
You can use this and if conditions which of course gives you a lot of flexibility in cases where you

02:34.700 --> 02:40.670
don't want to use the width in a dynamic calculation but you have different hardcoded values which you

02:40.670 --> 02:46.730
want to use based on different breakpoints you want to set a little bit like you know it from C as s

02:46.730 --> 02:51.080
where you also have media queries and then you can render different things based on different media

02:51.080 --> 02:51.830
queries.

02:52.070 --> 02:57.740
You're also not restricted on using the dimensions API down there in your style sheet of course you

02:57.740 --> 03:04.100
can use it anywhere where you can use javascript so everywhere in your components basically you could

03:04.130 --> 03:10.070
also attach TOTALLY DIFFERENT STYLES based on your way label width or height we could all use dimensions

03:10.100 --> 03:18.050
get window here where I assign my style and for example check my height here check if it's greater than

03:18.050 --> 03:25.400
six hundred and if that's the case use stylus bottom container and otherwise use styles button container

03:25.520 --> 03:31.520
small if we had this class I don't have it here so I'll get rid of that but that's no way of using this

03:31.670 --> 03:37.280
you can use it anywhere where javascript runs you can all of course use it here you could have a check

03:37.280 --> 03:45.690
here right before you return your J is X code and check get window height if that's greater than six

03:45.690 --> 03:49.830
hundred and if that's the case let's say you return totally different.

03:49.830 --> 03:55.910
J is X code and therefore this code there often will never run if you return here and only if you don't

03:55.910 --> 03:57.230
make it into the safe check.

03:57.230 --> 04:02.560
So if you have a device that's not as tall as this one then you make it down there.

04:02.600 --> 04:09.260
So you're really flexible here and use that flexibility to build the layouts you want because that's

04:09.410 --> 04:14.020
what this is all about and what gives you a lot of flexibility for your apps.

04:14.120 --> 04:15.440
So that's the spacing here.

04:15.440 --> 04:19.210
Now I also wanted to change my my log items down there.

04:19.340 --> 04:21.560
That's also something we can easily do of course.

04:21.740 --> 04:28.400
We have our list item stair and on the list items we set a width of 100 percent because we set our list

04:28.400 --> 04:32.330
width here with the list container and that's set to 60 percent.

04:32.600 --> 04:36.750
Now 60 percent looks pretty good on bigger devices I think.

04:36.910 --> 04:40.280
But on smaller devices we could go bigger than that.

04:40.280 --> 04:48.050
Now we can of course again try to solve this with different rules here where we set a max width and

04:48.050 --> 04:55.370
a man with and maybe also use two dimensions API to calculate this dynamically or we again use if check

04:55.910 --> 05:03.500
here we could again say dimensions get window get the available width and his case and if that's let's

05:03.500 --> 05:07.340
say greater than 500 then I want to use 60 percent.

05:07.340 --> 05:15.220
Otherwise I want to use 80 percent so now we simply render a broader a wider list container based on

05:15.220 --> 05:18.070
the way to deal with on the device we're running on.

05:18.250 --> 05:19.340
And that's actually use.

05:19.420 --> 05:24.490
Three hundred and fifty here maybe instead of 500 hundred because we're talking about the width not

05:24.490 --> 05:26.350
about the height.

05:26.380 --> 05:31.630
So now you're if we run this on the iPhone we have to same with ASP before but on the smaller screen

05:32.080 --> 05:33.820
we have bigger items.

05:33.820 --> 05:37.650
So that's also something we can do and you can of course play around with the breakpoint.

05:37.690 --> 05:39.140
You're effectively setting here.

05:39.160 --> 05:41.290
You can try out different breakpoint sizes here.

05:41.320 --> 05:43.420
Of course you could also have multiple breakpoints.

05:43.420 --> 05:48.940
You can have nested ternary expressions here or before you rights too many nested expressions simply

05:48.940 --> 05:56.500
set up different style objects here which you load with different if checks you use up there just to

05:56.500 --> 06:03.820
give you an example for it is we could have a list container big here and dare we set flex one and we

06:03.820 --> 06:09.320
set our width of let's say 80 percent because this is the big one.

06:09.450 --> 06:13.380
And here we have the normal one with 60 percent.

06:13.380 --> 06:18.400
Now I have no if condition down there but I have two different style objects.

06:18.400 --> 06:22.320
And now we just need to attach different style objects up there.

06:22.680 --> 06:31.780
Not here but here of course on this you well to do this we can simply set up list containers style variable

06:31.780 --> 06:38.740
here for example and point at Styles list container which is our default but then add if check here

06:38.830 --> 06:46.750
where we check if dimensions get window with and now if the width here is let's say smaller than three

06:46.750 --> 06:51.910
hundred and fifty so if we have a small device then we want to have the big list container so then we

06:51.910 --> 06:53.470
can set list container style.

06:53.470 --> 06:55.960
This variable equal to styles list container.

06:55.960 --> 07:01.960
Big to point at this style object and now we can use that style object here on that view where we need

07:01.960 --> 07:07.180
to list container style We use that variable now which holds a different list container style object

07:07.330 --> 07:13.060
based on the width of our device and if we now as safeties and we run this again you see that on the

07:13.060 --> 07:19.270
iPhone with the bigger the Y's where we have more with we got the smaller container and here on the

07:19.270 --> 07:24.200
android phone with the well the smaller device with less with we get the bigger container.

07:24.280 --> 07:26.980
So it's the same result as before but a bit more readable.

07:27.070 --> 07:32.080
And now we could have multiple such if checks here where we store different styles here in the list

07:32.080 --> 07:34.900
container style which we then use down there.

07:34.900 --> 07:42.070
This can be more readable than having nested ternary expressions down there in your style sheet object.

07:42.070 --> 07:47.650
So this is how you can play around with that and being aware of that flexibility of two dimensions API

07:47.770 --> 07:48.970
is really crucial here.
