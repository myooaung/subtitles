WEBVTT

00:02.490 --> 00:08.890
Here I got our react native app running and I already taught you that in the simulators, you can press

00:08.890 --> 00:17.680
command D for the iOS one or command or control M for the Android one to open up this developer menu.

00:17.950 --> 00:26.310
If you just want to reload, you can also do this on Android by pressing R twice or command R on

00:26.310 --> 00:33.390
iOS, you can also turn on things like live reload and hot reloading so that the app automatically

00:33.390 --> 00:38.770
reloads whenever you change it or even tries to render the changes on the same page

00:39.860 --> 00:43.500
and you also get some other tools here which I haven't had a look at before.

00:43.580 --> 00:50.090
For example the inspector here, if you toggle it, you can click somewhere in your app and you'll see some

00:50.090 --> 00:55.160
basic information about the component you selected, like the margin and padding

00:55.370 --> 01:02.290
and yeah, basically that. You can also inspect the network here so your network connections which you have

01:02.300 --> 01:04.470
so which network requests were sent

01:05.500 --> 01:09.490
and some information about the performance if displaying anything.

01:09.520 --> 01:15.290
So this is a nice thing, the inspector and you can always turn it off by clicking toggle inspector again.

01:15.310 --> 01:19.810
You also have the performance monitor here on the top right where you see the frames with which it's

01:19.810 --> 01:20.600
running,

01:20.620 --> 01:25.250
how many frames javascript process has and so on.

01:25.450 --> 01:30.570
And by the way, whenever you see something here in this course, always keep in mind that I got two simulators

01:30.580 --> 01:36.190
running and I'm recording this at the same time, so my performance is certainly not as good as you have

01:36.190 --> 01:37.600
it out in the wild,

01:38.140 --> 01:40.650
so I'm going to also hide the performance monitor

01:40.650 --> 01:45.150
here again. One other very useful tool

01:45.150 --> 01:53.430
I want to show you is the capability to debug your javascript code remotely though, click on debug javascript

01:53.430 --> 01:57.890
code remotely and it should open up a new tab in your browser,

01:59.720 --> 02:00.290
if it doesn't,

02:00.290 --> 02:06.310
you can simply connect to localhost:8081/debuggerUI.

02:06.770 --> 02:12.070
Now you can open your developer tools here in Chrome and I recommend using Chrome for this,

02:12.080 --> 02:15.280
to my knowledge it's not even supported in other browsers,

02:15.520 --> 02:24.260
so you can open your developer tools there and the cool thing is the console you see here now is the

02:24.260 --> 02:31.390
console output by your code running on the native device, elements and so on won't work here like this

02:31.420 --> 02:34.410
though so you still only inspect this page.

02:34.430 --> 02:39.620
But the console now is connected to your native device code,

02:39.620 --> 02:43.580
the other tabs won't really work like this, it's really just a console

02:43.880 --> 02:46.010
but this allows you to do cool things.

02:46.100 --> 02:53.000
You can now use console log in your debugging steps here or in your code, anywhere you like.

02:53.090 --> 03:04.570
For example you could add a console log statement in app.js, whenever you add a new place you

03:04.570 --> 03:12.340
could console log place added, like this

03:12.340 --> 03:21.050
and if you now save this and make sure your app reloads, it seems like Android is having an issue here, let

03:21.050 --> 03:23.410
me try to restart the app.

03:26.300 --> 03:33.050
Now you can see that if I do add a place here like Munich, if you could go back, you see place added here

03:33.050 --> 03:34.320
in the console.

03:34.580 --> 03:41.420
So this is a great and quick way of doing some basic debugging, simply logging something here and being

03:41.420 --> 03:48.350
able to see the log, to get information about the state of your application and well, how it's currently

03:48.350 --> 03:48.860
behaving,

03:48.860 --> 03:50.510
so this is super useful.

03:51.510 --> 03:57.150
You may of course ignore the warning that this is running in the background and may impact your apps

03:57.150 --> 03:57.790
performance,

03:57.810 --> 04:03.110
obviously it may, this won't be an issue in production because there, this process isn't running.

04:03.120 --> 04:04.080
So that's remote

04:04.110 --> 04:08.540
javascript debugging and the capability of using your console log.

04:08.660 --> 04:09.990
And what else can you do.
