WEBVTT

00:02.450 --> 00:07.810
In the last lecture we added this background image and again learned something about flex box,

00:07.820 --> 00:10.370
now let's add a custom button.

00:10.400 --> 00:17.930
So for that, I'll go to the UI component and there, I'll add a button but actually I want to add a button that

00:18.020 --> 00:24.920
also has an outline and a background color on iOS because I think if we just have some blue text here,

00:25.160 --> 00:26.630
that might be hard to see,

00:26.630 --> 00:33.580
I like the styling of the Android version and I want to have a comparable styling here on iOS.

00:33.740 --> 00:39.180
So for that reason, I'm going to create my button here

00:39.980 --> 00:48.180
as a button with background, of course you can pick a different name, ButtonWithBackground.js

00:48.380 --> 00:51.610
will be inside there and there,

00:51.710 --> 00:52.380
well you know it,

00:52.400 --> 00:54.920
we import react from react,

00:55.040 --> 01:02.600
we'll then also later import something from react native, here I'll name this button with background and simply

01:02.600 --> 01:10.250
have a function that receives props and returns some jsx and I'll export this as the default.

01:10.250 --> 01:14.040
Now what do we need to import from react native?

01:14.130 --> 01:23.440
So let's first of all add the general import statement from react native and what I want to import

01:23.440 --> 01:30.100
here is touchable and I want to use touchable opacity for now,

01:30.160 --> 01:37.950
later I also want to support the preferred mode for Android, so touchable or let's maybe use touchable

01:37.980 --> 01:38.540
highlight,

01:38.550 --> 01:40.220
let's see how that looks like

01:40.470 --> 01:43.850
and I want to import a text, the text of our button

01:44.290 --> 01:49.570
and then also a view so that we have something to style because in a text for example, we can't set a border

01:49.570 --> 01:50.720
or anything like that,

01:50.770 --> 01:53.200
so we'll use a view for this.

01:53.200 --> 01:59.590
So our outermost component is touchable highlight, so that we can register touch events,

01:59.750 --> 02:05.200
inside there we have a view to style it because we can't style touchable highlight or the text in the

02:05.200 --> 02:06.300
way we want

02:06.610 --> 02:09.640
and then inside there, we'll have the actual button caption

02:09.670 --> 02:17.760
so our text. I will also import one more thing from react native and that is the stylesheet of course because here,

02:17.820 --> 02:25.630
I will now create styles, stylesheet create and create my custom button styling,

02:25.930 --> 02:31.890
so here, I'll name this button and we can then play around with that and set the styling we want.

02:32.020 --> 02:38.380
Now on the text here, I actually want to output props children so that I can use my button differently

02:38.380 --> 02:46.620
than the default button on react, on the view, I'll set the style equal to styles button,

02:46.620 --> 02:51.560
that's why we added the view, to be able to do some styling and on touchable highlight,

02:51.590 --> 02:57.780
I'll add onPress and there I basically want to trigger some property or be able to execute some method

02:57.780 --> 03:00.180
which we receive through some property,

03:00.180 --> 03:08.880
let's name it onPress here so that we get to use our button to the outside like a built-in button.

03:08.890 --> 03:11.780
So with that, let's just give it some styling shall we,

03:11.860 --> 03:18.870
let's add some padding for example of 10 maybe and some slight margin so that the button never sits

03:18.870 --> 03:20.890
directly on the edge of something else

03:21.850 --> 03:26.360
and let's also say we want to have a background color but that should be settable from outside,

03:26.560 --> 03:34.300
so I'll actually wrap my styles here again in an array and I will also pass some styles from outside. So I

03:34.300 --> 03:35.770
expect to get props

03:35.800 --> 03:45.910
but here I'll add an inline javascript object where I'll set background color to and I get props color so that

03:45.910 --> 03:52.700
we can set a color prop to actually style the background color. With that let's use this button with background

03:52.700 --> 03:54.890
and let's have a look at how it looks like,

03:55.160 --> 04:00.030
so in auth component, I actually will add an import at the top,

04:01.270 --> 04:04.230
button with background from

04:04.240 --> 04:08.540
and now let's again go to the components folder, the UI folder there,

04:08.670 --> 04:13.070
let's import our button with background component.

04:13.560 --> 04:17.930
Now let's use the button with background where we previously used the button,

04:18.040 --> 04:22.960
this time however with some text between the opening and closing tag because this is how we set up

04:22.960 --> 04:23.990
our own button.

04:24.220 --> 04:25.240
So here I'll set

04:26.300 --> 04:31.560
switch to login and then here on that button,

04:32.000 --> 04:39.610
I'll set submit as attached, text. Now if we were to test this, it wouldn't look like much because we need

04:39.610 --> 04:41.180
to set color, remember?

04:41.350 --> 04:48.600
So let's set color to blue maybe, we can pass anything which is assignable to background color here as

04:48.600 --> 04:49.690
a value

04:50.220 --> 04:53.660
and this would now be the button, not as pretty as the build

04:53.670 --> 04:57.780
in one. Let's maybe use some hex code,

04:57.780 --> 04:59.010
here's one I prepared,

05:00.570 --> 05:08.450
it's #29aaf4, let's save this, this looks nicer in my opinion.

05:08.590 --> 05:13.380
Let's now also use that on our top button,

05:14.510 --> 05:16.080
now it's looking better,

05:16.370 --> 05:16.970
let's apply some

05:16.970 --> 05:19.510
other styling to our button with background though,

05:20.480 --> 05:25.550
let's also give it a border radius of 5 maybe,

05:25.880 --> 05:36.900
so we've got some round corners here and let's give it a border width of one and a border color

05:38.400 --> 05:41.000
of black maybe.

05:41.120 --> 05:44.710
Now we got our button here but clicking on it doesn't do anything,

05:45.970 --> 05:54.230
well let's just go back to auth.js and hook up the onPress handler here, on the switch to login button,

05:54.530 --> 06:03.320
just add a quick inline function here where I print hello in an alert and now you see you get the

06:03.320 --> 06:08.980
feedback because now we're handling the press. The highlight style doesn't really look nice though,

06:09.110 --> 06:16.370
so let's go back to button with background and exchange touchable highlight with touchable opacity and

06:16.370 --> 06:21.040
again, we'll add some special look for Android later.

06:21.040 --> 06:21.970
So now with that,

06:24.750 --> 06:26.330
we got this nicer look

06:26.370 --> 06:32.160
when we click the button. And with that, we added our own custom button that looks quite decent in my

06:32.160 --> 06:33.130
opinion

06:33.390 --> 06:39.120
and by the way touchable opacity works where I apply some styling even without an onPress listener

06:39.390 --> 06:45.420
but let's now add such an onPress listener to again navigate away and call login handler here

06:45.450 --> 06:46.550
once we click it.

06:46.740 --> 06:48.400
Now we got the code in place already so

06:48.410 --> 06:56.280
all we need to do is add onPress and hook it up to this login handler, restructure the code to make

06:56.280 --> 06:57.480
it a bit easier to read

06:57.750 --> 07:03.290
and with that, let's go back to our application and now we can press submit to move on.

07:03.570 --> 07:04.740
So that's all nice,

07:04.740 --> 07:07.710
let's now see what else in this application we want to style.