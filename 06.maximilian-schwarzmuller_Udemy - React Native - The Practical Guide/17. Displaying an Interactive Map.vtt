WEBVTT

00:02.100 --> 00:09.600
To display this on a map we have this map screen component which currently just has some dummy content.

00:09.600 --> 00:15.800
And now we need to be able to render an interactive map for this expo again has got us covered.

00:15.870 --> 00:17.880
There you find D.

00:18.970 --> 00:20.810
Map view package.

00:20.850 --> 00:25.840
Now in this behind the scenes uses a package named React Native maps which you can also use in non Expo

00:25.840 --> 00:26.070
apps.

00:26.080 --> 00:30.220
By the way many of these packages can be used in non Expo apps and that's something I will come back

00:30.220 --> 00:33.950
to in the building apps without Expo module.

00:34.060 --> 00:38.480
But for now we can simply conveniently install it by running this command and this will install the

00:38.500 --> 00:40.630
react native maps package.

00:40.640 --> 00:43.820
Then we can use it as we see it here in this example.

00:43.900 --> 00:49.660
By the way also check out the official documentation at this link to see way more usage examples in

00:49.660 --> 00:52.660
there because there you can learn all about how to use this package.

00:52.660 --> 00:56.300
Some examples are also shown here in this module of course.

00:56.410 --> 01:01.810
So let's run Expo install react dash native dash maps to install this package here and this will then

01:01.810 --> 01:06.160
allow us to use various components to render interactive maps.

01:06.160 --> 01:12.860
So let's wait for that to finish and with that finished in the map screen component we can start using

01:12.860 --> 01:13.300
that map.

01:15.730 --> 01:26.160
Now in their to use the map we can import map view from React Native maps or from this package we just

01:26.160 --> 01:31.150
installed and that will allow us to render a map on the screen.

01:31.200 --> 01:32.730
Now how does that work.

01:32.730 --> 01:38.880
Well let's go here into our map screen and instead of returning this view here I'll return a map view

01:39.630 --> 01:41.340
like that.

01:41.370 --> 01:43.470
Now the map view can be a self closing tag.

01:43.470 --> 01:47.910
For now we can later also add some markers in there but for now that's just rendered like this.

01:48.180 --> 01:51.530
And now you need to configure this map view to be precise.

01:51.540 --> 01:58.310
It needs a region for up which tells it where it should be focused on when it loads.

01:58.440 --> 02:03.990
So which map part or which part of the world it should focus on when it loads.

02:03.990 --> 02:12.770
So we need to create such a region here and all stored in a constant named map or region and the region

02:12.770 --> 02:20.810
is actually an object with four properties and you have to name them like this latitude and not let

02:20.840 --> 02:24.470
but really latitude written out long etude

02:27.360 --> 02:32.680
latitude Delta and long hued Delta.

02:32.830 --> 02:41.430
The delta is basically set to soon factor because this describes well how much space you can see around

02:41.490 --> 02:45.450
the center which you describe with these two points.

02:45.480 --> 02:48.690
So that describes a point together with the two deltas.

02:48.690 --> 02:51.030
It describes a surface.

02:51.080 --> 02:54.890
So now here we can start with some dummy values before we.

02:54.890 --> 02:58.820
Then later also make sure that we can pre populate this.

02:58.820 --> 03:03.980
So here I'll set this to dummy value of thirty seven point seventy eight and minus one hundred twenty

03:03.980 --> 03:11.900
two dot for free which is in the Bay Area round the Google headquarters and here latitude Delta will

03:11.900 --> 03:18.080
take zero dot 0 9 2 2 and then Syria at 0 4 2 1.

03:18.080 --> 03:21.030
I've found that this works quite well as a region.

03:21.080 --> 03:27.120
Of course you can experiment with these numbers but then you can pass in this map region here.

03:27.200 --> 03:30.020
Now this should render a map on the screen.

03:30.110 --> 03:32.320
Now we just need to be able to reach it and for that.

03:32.330 --> 03:37.000
Let me go back to the location picker and I want to reach it in two different ways.

03:37.010 --> 03:42.380
One is with the help of a button which I didn't add yet besides to get user location but now I won't

03:42.390 --> 03:48.730
have a second button which should sit next to the first one so I'll add a view to wrap both and then

03:48.730 --> 03:53.830
move this button here and have a second button in there and this button will generally be configured

03:53.830 --> 04:01.400
in the same way but I will say pick on map and of course I'll trigger a different method.

04:01.400 --> 04:09.740
Different function here I want to trigger a function which is to pick on map handler and all therefore

04:09.740 --> 04:10.870
use this year.

04:10.940 --> 04:16.220
And that's one way of selecting this the other way of selecting this or off going to the map is by clicking

04:16.220 --> 04:22.900
on the map preview before I implement this let me quickly style this view that holds the two buttons.

04:22.900 --> 04:30.460
I'll give it a style identifier of actions and then down their actions can be configured in a relatively

04:30.460 --> 04:31.620
straightforward way.

04:32.930 --> 04:38.720
I want to have the item sit next to each other so flex direction will be a row not column justify content

04:38.720 --> 04:45.580
can be space around to distribute the available free space around both buttons all take a width of 100

04:45.620 --> 04:49.400
percent for this row and that's actually it.

04:49.400 --> 04:51.170
Now with that I have my buttons here.

04:51.170 --> 04:56.510
Now we need to make sure that we can also tap the map preview for that that we go to map preview and

04:56.510 --> 05:03.090
actually wrap this not in a view but in a touchable component here I'll just use touchable opacity.

05:03.110 --> 05:07.700
Of course you could also go for a different and touchable components based on the platform you're running

05:07.700 --> 05:08.260
on.

05:08.270 --> 05:14.000
I want to keep this relatively straightforward so I'll just replace this view here with touchable opacity

05:14.450 --> 05:15.430
have my style here.

05:15.440 --> 05:20.750
That's fine but also of course have to on press handler and there I want to trigger a function which

05:20.750 --> 05:23.950
I expect to get from outside wire props.

05:24.020 --> 05:28.210
I'll just call this on Press 2 but you could give this prop any name you want.

05:28.250 --> 05:32.030
This now allows us to add on press prop on the map preview.

05:32.030 --> 05:38.030
So here in the location picture I can listen to you on press on the map preview and there of course

05:38.030 --> 05:42.050
I want to trigger the same function as when I click on the button down there.

05:42.140 --> 05:44.420
I want a trigger to pick on map handler.

05:44.660 --> 05:46.490
So that's what I do.

05:46.520 --> 05:49.790
Now the pick on map handler should simply go to the map screen right.

05:49.790 --> 05:56.700
So in there we can say props navigation navigate map and that's it for the second.

05:56.720 --> 06:01.760
So if we now saved as we should be able to reach his full screen interactive map where we can select

06:01.760 --> 06:04.140
the place yet but at least we can view it.

06:04.160 --> 06:09.500
So now if I click on the plus here and then pick on map I get an error.

06:09.600 --> 06:15.930
The Y stat Well that's totally unrelated to native modules you might remember that the navigation probe

06:15.930 --> 06:20.700
is only available on components which are directly loaded as screens which to location picker of course

06:20.700 --> 06:22.140
isn't there.

06:22.140 --> 06:23.750
There are various workarounds.

06:23.760 --> 06:26.070
There would be a higher order component we can use.

06:26.080 --> 06:29.910
We can also install a react navigation specific hooks package.

06:30.360 --> 06:35.430
But here I'll take a simple approach and just make sure that I have an obligation prop on location picker

06:35.760 --> 06:39.720
by going to the new place screen which is where a do used location figure.

06:39.960 --> 06:45.600
And there I'll set this navigation prop and forward prop stock navigation which I here do have a way

06:45.600 --> 06:49.170
lable because this is a component directly loaded through a navigator.

06:49.170 --> 06:54.960
So now I'm just forwarding access to my navigation props with that if we now go back and click this

06:55.680 --> 07:00.300
we do load this map here or at least a map screen.

07:00.320 --> 07:01.740
But where is the map.

07:01.820 --> 07:09.290
Well the maps invisible because and that's important for your map you need to add a style and here I'll

07:09.290 --> 07:15.130
add style star map and it can be a very simple style but you just need to define how big it should be

07:15.140 --> 07:18.520
because by default it will not occupy any space.

07:18.560 --> 07:24.410
So by just setting flex to one year and tallying it it should take all the space it gets just by doing

07:24.410 --> 07:26.840
that you will make sure that you see a map.

07:26.840 --> 07:35.360
So now with that if you click on this here is our map getting loaded now also worth noting on ISIS you

07:35.450 --> 07:40.490
automatically use Apple Maps though you can also use Google Maps there if you want to do your official

07:40.490 --> 07:44.680
docs tell you how on Android you always use google maps.

07:44.690 --> 07:46.820
So you're right click on pick on map.

07:46.910 --> 07:53.430
We will also see that once we load that new screen here it is now of course we can also go to that screen

07:53.430 --> 07:55.290
by clicking on our preview here.

07:55.350 --> 07:56.580
That's what we set up right.

07:56.580 --> 08:00.500
So that all the works of course also works on ISIS.

08:00.540 --> 08:05.940
And by the way the animation here isn't super smooth on a real device it will be.

08:05.940 --> 08:09.300
So that's not a problem that's just here on the emulator.

08:09.300 --> 08:14.040
So with that we have our map here and on this map we can scroll again on the simulator it might be a

08:14.040 --> 08:16.620
bit small on the real otherwise it won't be.

08:16.620 --> 08:21.090
So here you can scroll around you will all be able to pinch and soon later you can do all of that and

08:21.090 --> 08:23.150
with that we see the map.

08:23.220 --> 08:27.570
Now the map is usable but of course we can't pick a place on there yet.

08:27.600 --> 08:29.430
So that's the next thing we'll need to change.
