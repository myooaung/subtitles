WEBVTT

00:02.880 --> 00:05.340
I still got my application running, now

00:05.340 --> 00:12.520
I want to add some platform specific code and there, we get a couple of places where we can do this,

00:12.600 --> 00:17.360
for example the icons and the tabs, we use the same icons for iOS and Android

00:17.370 --> 00:23.490
but theoretically, iconicons, the icon set we're using ship with different icons,

00:23.550 --> 00:25.490
so using them might make sense.

00:26.250 --> 00:29.570
Additionally, take our buttons for example here on the auth screen,

00:29.760 --> 00:32.320
when we click this button, we got this opacity look

00:32.550 --> 00:34.720
but we also got that on Android,

00:34.720 --> 00:38.370
now on android you might want to have this ripple effect instead on these buttons,

00:38.370 --> 00:44.430
so that is something we can change. And maybe in your app you even need to change the layout depending

00:44.460 --> 00:45.600
on the platform,

00:45.600 --> 00:51.690
it's not really the case here but maybe in some application, you want to show a fourth input field

00:51.690 --> 00:55.750
on Android only, well you can do all of that with the platform API.

00:55.950 --> 00:59.440
So let me show you how it works and let me show you how it works

00:59.510 --> 01:06.820
at the example of our button with a background, that's the button we're using on the auth screen. There

01:06.840 --> 01:14.400
we use touchable opacity but I actually only want to use touchable opacity if we're on iOS, if we're

01:14.400 --> 01:19.730
on Android, I want to use this touchable with native feedback,

01:19.830 --> 01:26.470
so let me first of all import that, TouchableNativeFeedback is a wrapper which we can only use on Android,

01:26.700 --> 01:32.640
so therefore I need some way of finding out if we are on Android or not. And for that I'll

01:32.680 --> 01:40.400
first of all restructure this function to have a real function body and not immediately return jsx,

01:40.500 --> 01:47.010
therefore I need to add a return statement in there but I also will import one other API from react

01:47.010 --> 01:52.700
native and I already mentioned which one this will be, the platform API.

01:52.740 --> 02:00.190
Now with that, what we can do is we can check if platform and there we got this OS variable or property

02:00.190 --> 02:08.430
you could access and then we can compare this and it's either going to be iOS or Android.

02:08.640 --> 02:16.770
And there I can check if it's Android and if it is, then I want to return some jsx which differs from

02:16.770 --> 02:21.050
the other jsx, we'll have some common ground in between,

02:21.060 --> 02:28.280
this view will always be the same so we can store this in some variable which we name content, there

02:28.290 --> 02:32.010
I will simply put this view inside of it.

02:33.330 --> 02:41.810
And then here in this return statement in this if block, I actually want return TouchableNativeFeedback

02:43.600 --> 02:46.950
and wrap our content with it,

02:46.990 --> 02:56.690
so output this content here dynamically and of course also connect onPress here.

02:56.910 --> 02:58.550
And if we don't make it in here,

02:58.590 --> 03:05.160
so if we don't return which we do here, then we know we got something else than Android, most likely iOS,

03:05.190 --> 03:12.870
so here I then want to cover or get to this return statement where I will still use the touchable opacity

03:13.470 --> 03:20.580
and in there, I also want to output the content, I'll quickly reformat all of that so that it's looking

03:20.580 --> 03:21.670
a bit nicer.

03:21.840 --> 03:28.440
And with that, we got a really flexible button which has some content that is always the same but then

03:28.440 --> 03:35.580
checks if we are on Android with this platform API and the operating system, the OS property on it

03:35.850 --> 03:41.310
and if we are on Android, then we actually wrap the button with TouchableNativeFeedback

03:41.340 --> 03:43.760
otherwise we use touchable opacity.

03:44.220 --> 03:49.740
Now with that save that file and make sure your development server is still running, you can always restart it

03:49.740 --> 03:54.410
with npm start or npm run Android or run iOS.

03:54.600 --> 04:01.320
And with that let's see let's reload our iOS app and Android app, now on iOS, if I press submit, you see

04:01.320 --> 04:07.810
it still gets transparent so we have the touchable opacity on iOS and the rest works as before.

04:08.190 --> 04:13.910
Now on Android, if I click it, it's hard to see but there was this ripple effect,

04:13.950 --> 04:16.350
unfortunately it only fires if I click

04:16.620 --> 04:20.770
but if you do watch closely here, you'll see it start.

04:21.090 --> 04:25.390
So we got this ripple effect here on Android which is really awesome,

04:25.830 --> 04:28.540
so you got to watch close but it is there

04:28.950 --> 04:36.840
and now we got different effects and we are aware or we use the fact that we can get aware of which

04:36.840 --> 04:38.930
platform we're running on.

04:38.960 --> 04:45.480
Now I did mention that this would not be the only case, icons are another place where knowing the platform

04:45.630 --> 04:46.890
is really useful.

04:46.920 --> 04:49.360
So let's have a look at this in the next lecture.
