WEBVTT

00:02.100 --> 00:09.180
To use the validation state we now have in our controls object in our state here, we probably want to

00:09.180 --> 00:15.300
give some visual feedback to the user to mark invalid controls as such, maybe give them a red border

00:15.300 --> 00:20.320
and a red background and we maybe also want to disable the submit button,

00:20.400 --> 00:22.050
so let's do both.

00:22.050 --> 00:28.200
Now keep in mind that our inputs are custom components, the default input component which we can find

00:28.260 --> 00:31.500
under components UI default input.

00:31.500 --> 00:40.530
There, we assign some styling and we can simply add another style now, invalid maybe in that component where

00:40.530 --> 00:44.950
we set up how this input component should look like if it is invalid.

00:45.120 --> 00:50.510
There I could set a background color of some red tone,

00:50.700 --> 01:00.770
here's one I prepared #f9c0c0 and give it up border color of red maybe, just typing red

01:00.770 --> 01:03.660
here, now this invalid

01:03.660 --> 01:07.380
style should always be appended when the input is invalid

01:07.380 --> 01:10.590
which is some information which we need to get from outside.

01:10.890 --> 01:13.110
So I'll add invalid to this array here,

01:13.260 --> 01:18.050
however it should not always be added, styles invalid by the way,

01:18.070 --> 01:20.270
however it should not always be added.

01:20.470 --> 01:22.350
I expect to get a property,

01:22.390 --> 01:27.370
let's name it valid and if this is true, then I want to attach null here,

01:27.370 --> 01:33.340
I don't want to add any extra styling but if it is false, then this case will kick in and it will add

01:33.340 --> 01:34.940
my invalid styles,

01:35.020 --> 01:39.670
so all we now need to do is pass the valid prop to the default input.

01:39.940 --> 01:43.900
That should be easy because in the auth screen, we manage the validity,

01:43.900 --> 01:47.740
each control we have in our state has the valid property,

01:47.860 --> 01:54.220
so that's just information which we need to pass on to our children or to the default input.

01:54.220 --> 01:58.960
So therefore here, I'll add another property

01:59.020 --> 02:09.970
I can pass, valid and this simply is this state controls, in this case email valid, going to copy that

02:09.970 --> 02:13.160
line and also add it to my other inputs like here,

02:13.230 --> 02:15.740
the password

02:15.760 --> 02:18.450
input and then of course down here,

02:18.610 --> 02:22.540
also my confirm password

02:22.660 --> 02:27.920
input. Now with that, if we save that and we reload the page,

02:28.410 --> 02:29.840
we see all is red

02:30.060 --> 02:38.700
but if I enter valid values here, then we actually have everything marked as such and this also correctly

02:38.940 --> 02:41.630
updates whenever we enter something invalid.

02:41.970 --> 02:47.250
The one issue is that if I reload this again, that we start with everything red.

02:47.310 --> 02:53.480
Now this is not super user friendly so we should also keep in mind or keep track of whether the user

02:53.520 --> 02:56.370
touched this input already or not,

02:56.400 --> 03:01.980
so I'll go up to my state and add a new property to each of these controls after validation rules, maybe

03:01.980 --> 03:08.310
touched which initially just falls, which means the user didn't even have a chance to enter or to

03:08.310 --> 03:09.590
edit this

03:09.690 --> 03:16.410
and then in my set state call in update input state, for the key we're working on,

03:16.410 --> 03:22.110
I can simply set touched to true because this will only be called when the text changes so when the

03:22.110 --> 03:24.790
user typed so he did touch it.

03:24.900 --> 03:33.220
Now with this information, we can pass on this validity state to our default input and also pass

03:33.240 --> 03:35.250
on whether it has been touched or not,

03:35.400 --> 03:42.890
so I'll add a new prop to default input which is just this state controls, now here we're on password so

03:43.020 --> 03:51.410
use this touched, I'm also going to copy this entire line, add it to confirm password and therefore

03:51.480 --> 03:56.600
of course also target confirm password here and the same for the e-mail,

03:56.850 --> 03:58.940
let's target e-mail here,

03:58.950 --> 04:00.810
e-mail touched.

04:00.810 --> 04:02.960
Now we need to handle this in default input,

04:03.240 --> 04:10.020
there I now need to check not only if it's valid but if it's valid and if this touch prop is also set

04:10.050 --> 04:11.170
to true.

04:11.490 --> 04:13.770
This check now however is the wrong one,

04:13.830 --> 04:20.260
we should now revert our logic, we should check if it's not valid and has been touched, in this case,

04:20.280 --> 04:24.010
we want to add the invalid styles in all other cases,

04:24.060 --> 04:28.920
so either it's valid or it simply wasn't touched yet,

04:28.920 --> 04:30.400
we'll set it to null.

04:30.680 --> 04:34.760
Now with that, if we reload this page, the invalid style is gone

04:34.830 --> 04:40.730
and only if I enter something here, it is marked as such which is more user friendly.

04:40.770 --> 04:48.410
Now let's also disable this submit button, here in auth.js if we have a look at the very button,

04:48.420 --> 04:51.240
we got this button with background,

04:51.270 --> 04:56.670
it's our custom button we added and there, we simply want to disable it whenever

04:56.700 --> 05:00.040
well all our controls are invalid.

05:00.120 --> 05:04.680
For this what I can do is I can pass a new property to this,

05:04.680 --> 05:06.860
maybe we name it disabled,

05:07.260 --> 05:08.870
you can name it whatever you want

05:08.870 --> 05:16.200
and there I simply check if this state controls confirm password valid and all the others, so if all of

05:16.200 --> 05:17.080
them are valid

05:17.220 --> 05:21.510
and you could of course also create a new property in your state which you update whenever you type

05:21.530 --> 05:27.350
into any of the inputs so that you have just one property you can check here, whatever you like.

05:27.450 --> 05:29.660
So email also should be valid

05:29.760 --> 05:34.330
and this state controls password should be valid.

05:34.530 --> 05:39.690
So a lot of code but in the end, I'm just checking the validity of all the relevant inputs and then I'm binding

05:39.690 --> 05:40.710
this to disabled,

05:40.770 --> 05:42.850
so this is either true or false.

05:43.190 --> 05:48.590
In button with background, I can now use this new prop to change the styling and to really disable it,

05:48.810 --> 05:54.580
so for that what I can do is I want to change the style of my view if we're disabled,

05:54.720 --> 05:58.230
so I'll add a new disabled property to my stylesheet here.

05:58.390 --> 06:02.500
There I want to set the background color to some gray-ish look,

06:02.580 --> 06:10.100
so maybe we use #eee here and I want to use the or set the text color to a darker gray maybe #aaa

06:10.380 --> 06:18.810
and this could now be a look that looks rather good and disabled for example, maybe also set the border

06:18.810 --> 06:21.970
color to this darker gray,

06:22.240 --> 06:24.360
#aaa. So disabled

06:24.360 --> 06:27.470
now should be added as a style if it is disabled,

06:27.660 --> 06:35.750
well here we simply add it if props disabled is true therefore, if that is the case we add styles disabled

06:36.660 --> 06:39.850
otherwise we add no new style.

06:39.870 --> 06:41.850
We also want to really disable it,

06:41.850 --> 06:50.600
so what I will do is I will actually not return touchable object if the button is disabled but just

06:50.600 --> 06:55.230
this view which is the styling but without touchable isn't touchable.

06:55.470 --> 07:04.940
So therefore I'll check if props disabled is true, in which case I'll return just the content without

07:04.940 --> 07:06.480
touchable. Now

07:06.500 --> 07:12.290
with that, we're almost there but I think I made a mistake here in auth screen, disabled here of course should

07:12.290 --> 07:19.790
not be true if they're all valid instead disabled should be true is any of them is invalid,

07:19.910 --> 07:25.260
so I'll change this to or and then simply add an exclamation mark in front of each check,

07:25.280 --> 07:29.600
so if either of them is not valid, then disabled will be true.

07:29.600 --> 07:38.780
Additionally in the button with background, I need to add one tiny change, we got our enable and disabled style here

07:38.920 --> 07:41.690
where I also want to set the text color,

07:41.720 --> 07:46.980
now that is applied to a view though so don't do this, don't add it here to disabled,

07:47.090 --> 07:50.030
let's add a disabled text instead

07:51.170 --> 07:57.590
where I now set the color and this disabled text property should be added to the text node here,

07:57.800 --> 08:02.660
so here I'll add a style configuration and check if props disabled,

08:02.670 --> 08:08.530
if this is true then I want to add my styles disabled text color

08:08.700 --> 08:13.010
otherwise I'll set it to null and I will add no particular style. With that,

08:13.020 --> 08:16.010
let's go back and reload our application,

08:16.290 --> 08:19.370
you see it's now disabled, it doesn't look clickable.

08:19.890 --> 08:24.330
If I now start typing here and I confirm the last field,

08:24.390 --> 08:26.840
now we got an enabled button again

08:27.030 --> 08:32.430
and with that, we're giving the user a visual feedback about the authentication status.

08:32.430 --> 08:35.680
Now with that we got all the validation thing done,

08:35.790 --> 08:41.190
now let's also make sure that clicking the submit button does more than just load a new page, at least in

08:41.190 --> 08:45.120
theory and that this switch to login button does something too.
