WEBVTT

00:02.210 --> 00:07.310
Now I also want to use this fun family for the header title.

00:07.310 --> 00:10.990
So here in my head are a component on the header title.

00:11.000 --> 00:18.560
I also want to set the font family to open dash sense dash bold so that we use that there as well.

00:20.300 --> 00:27.110
And for all our text in this application I actually want to use my open sense fund.

00:27.440 --> 00:35.480
So for example in these start games green here we have our text select the number and to use d normal

00:35.870 --> 00:45.080
open Sans font we can of course assign a style there and then use styles text for example and add this

00:45.350 --> 00:55.900
textile here at the bottom and then use font family open dash sense now that works but it of course

00:55.900 --> 00:57.450
has a downside.

00:57.700 --> 01:04.810
The downside is that you now manually need to add this font family to any text in your app where you

01:04.810 --> 01:10.980
want to use it and you have to edit directly on the text components you can't added to a view.

01:11.140 --> 01:18.880
And for example set this on the screen here and rely on that being passed down to nested texts.

01:18.880 --> 01:21.010
Unfortunately this does not work.

01:21.040 --> 01:28.120
So if I would go to the screen here and I set font family to open sans bold so that we can easily see

01:28.120 --> 01:32.340
if it works or not you see this is clearly not bold select the number is not bold.

01:32.530 --> 01:38.250
So passing it down like this like it works and see us S does not work because that isn't C has assets

01:38.290 --> 01:45.130
javascript and what you apply on an object is only applied on the element on the component where this

01:45.190 --> 01:47.470
style object is attached to.

01:47.470 --> 01:52.930
So we would have to style this text individually but again re creating that style over and over again

01:52.930 --> 01:56.760
and all the different places might not be what you want to do in the end.

01:57.600 --> 02:01.680
There are two work arounds or work around always sounds a bit dirty.

02:01.680 --> 02:05.440
Two ways of handling this in a more elegant way.

02:05.460 --> 02:12.210
One is that you create a separate component maybe a body text component or just a text component whatever

02:12.210 --> 02:13.920
you want to name it and I'll name it.

02:13.920 --> 02:19.040
Body Text J.S. and it will be a very simple component.

02:19.040 --> 02:27.360
I just import react from react and I import text and style sheet

02:30.250 --> 02:39.730
from React Native here and then the body text component here gets props and simply returns my text component

02:39.730 --> 02:41.650
here raw output props.

02:41.650 --> 02:48.430
Children in between the text tax so that we can pass content to body text by passing it between the

02:48.430 --> 02:52.500
opening and closing body text tag when we use this component.

02:52.510 --> 02:56.570
Then here I have my styles and there I use style sheet create.

02:56.950 --> 03:01.390
And of course I export this component like this.

03:01.390 --> 03:07.370
And now here in this style sheet I simply set one style which I apply here to this text.

03:08.650 --> 03:09.590
Styles.

03:09.820 --> 03:12.680
Body or whatever you want to name it have the body style here.

03:12.910 --> 03:19.060
And the one style I set is fun family open sense and I'll use bold for now so that we can see that this

03:19.060 --> 03:20.110
really has an effect.

03:20.170 --> 03:25.890
Before I change it to be a bit harder to see open sands so open sans bold.

03:25.900 --> 03:31.900
And now it does this a very simple component just a thin wrapper around the normal text but a thin wrapper

03:31.960 --> 03:34.360
that always sets this font family.

03:34.420 --> 03:39.640
And this means that whenever we want to have text that uses this one family maybe in all places in the

03:39.640 --> 03:46.780
app instead of using the normal text component by React Native we just use the body text component I

03:46.780 --> 03:52.920
just created so I can import body text from components.

03:53.890 --> 04:01.630
Body Text importing that component and now I can simply replace the text component here with body text

04:01.630 --> 04:06.830
and if we do that we saved as we of course see that now it is will be bold.

04:07.090 --> 04:12.640
Well if I would have used it on the right text it does is of course to you select the text it's fine

04:12.640 --> 04:17.670
there too but I want to go here to use select it to select the number.

04:17.740 --> 04:23.800
So if I use it there the body text wrap this text you see now it is as bold and now we can all go back

04:23.800 --> 04:30.850
and give our body text D actually intended open sense look which is still not the default fund but which

04:31.240 --> 04:33.370
can't immediately be seen that it's a different fund.

04:33.400 --> 04:40.240
So this is option 1 of passing textile around or a fun family around.

04:40.240 --> 04:45.250
You simply create your own text component which always has this font family and if you have multiple

04:45.250 --> 04:49.670
different font families like a title and a heading you create separate components.

04:49.790 --> 04:55.960
For example here we have a title well we maybe want to use that in other parts of the app too so we

04:55.960 --> 05:02.500
can add a title text J File which is basically what we have in body text I'll just copy that and move

05:02.500 --> 05:09.700
it into title text and then here we have the title text name and here it's title text and there we use

05:09.910 --> 05:12.980
open Sands bold and maybe for the title.

05:12.980 --> 05:19.510
Also have a font size of 18 and now again let's rename is to title maybe it makes more sense for the

05:19.530 --> 05:26.010
style prop but now again we have a very thin wrapper around the text and in all places where we need

05:26.010 --> 05:34.110
the title like in the header for example we can get rid of this manual style assignment here in the

05:34.110 --> 05:43.340
header component and instead simply import our title text from the title text component and Ustad instead

05:43.340 --> 05:47.450
of text get rid of this style assignment here.

05:47.690 --> 05:51.520
Like that and do the same in the start game screen there.

05:51.560 --> 05:54.750
This text can now be titled text.

05:54.920 --> 05:57.860
All I need to do is I need to import it left me.

05:57.860 --> 06:06.500
Import title text from the components folder and they are from title text and we can reuse this and

06:06.500 --> 06:12.980
just as we did it before with the card for example if you want this to still be customizable so that

06:12.980 --> 06:18.740
you could set more on the title or override the font size or add a margin as we're doing it here.

06:18.770 --> 06:25.440
Well then what you can always do is you can still add style here to the title text refer to styles title

06:25.530 --> 06:32.080
so to the title style I have set up down there in the start game screen and inside of the title text

06:32.080 --> 06:37.270
component you just need to make sure you merge these incoming styles with the styles you are setting

06:37.270 --> 06:38.240
up there.

06:38.260 --> 06:47.680
So here style now points at aisle object where you take all the values in the titles set up here and

06:47.680 --> 06:53.510
then merge them or overwrite them with all the values set up and props style.

06:53.620 --> 07:00.190
And now you have an adjustable text layer which sets these default styles but which can be overwritten

07:00.190 --> 07:01.990
and adjusted to your requirements.

07:01.990 --> 07:06.330
Therefore we have the same look as before but now with more usability.

07:06.340 --> 07:08.730
Now again that's option number one.

07:08.740 --> 07:15.700
The alternative to that would be that for example in a constant folder you have your default styles

07:15.720 --> 07:18.070
J has followed whatever you want to name it.

07:18.310 --> 07:26.770
In India you export a default style sheet and you need to import Tisdale for import from react import

07:26.770 --> 07:29.530
style sheet from react native

07:32.240 --> 07:43.590
you export your default style sheet create object and there you set up like your body text for example

07:44.070 --> 07:45.100
any name you want.

07:45.150 --> 07:50.910
And here you set up fun family open sends and maybe just temporarily so that we can see whether it is

07:50.910 --> 07:52.520
works give it a red color.

07:52.680 --> 07:55.480
Now you can import this into different files.

07:55.680 --> 08:07.630
Let's say in the game screen there we can now import default styles from the constants folder and their

08:07.670 --> 08:11.070
default styles and if we now want dead.

08:11.090 --> 08:12.930
Default text style.

08:13.160 --> 08:19.340
For example here on opponents guess well then all we do is we set the stall here reach out to default

08:19.340 --> 08:23.440
styles and point at body text and you will see if we start a game.

08:23.450 --> 08:25.200
Now this text will be read.

08:25.370 --> 08:29.360
So if we start to see game opponents guess is red.

08:29.390 --> 08:35.360
So this would be an alternative to having separate components did you simply have a globally managed

08:35.360 --> 08:38.470
style sheet which you import into different files.

08:38.680 --> 08:44.760
And now I don't read a body text that is read but what I do want there is a title and there I wanted

08:44.780 --> 08:52.730
a fun family of open sense bold and a font size of let's say 18.

08:52.970 --> 08:55.320
And yes I do have the same set up in the title text.

08:55.340 --> 09:01.010
I'm just recreating it here to show both alternatives because now with the title being set up like this

09:01.010 --> 09:06.920
and the default style sheet we can now go to the game screen and hear not use the body text but use

09:07.250 --> 09:13.610
the title on the opponent's guests and the result of this is that if we now restart this game we have

09:13.610 --> 09:14.630
that nice title here.

09:14.660 --> 09:19.670
So that's a valid alternative and it's up to you which one you prefer separate components which you

09:19.670 --> 09:25.560
reuse instead of the text component or the text component with a globally managed style.

09:25.760 --> 09:31.460
And as a side note in the globally managed style you're of course not restricted to managing font specific

09:31.460 --> 09:37.490
properties you can manage any styles here so any styles that you want to share across components can

09:37.490 --> 09:43.940
be managed in such a global style sheet that can be general layout doing setups that can be colors that

09:43.940 --> 09:50.900
can be whatever you want but typically you always have to option between creating separate components

09:50.900 --> 09:55.790
like the card's component which is a wrapper around the view or the body text or the title text which

09:55.790 --> 10:01.400
are all just wrappers that add some styling or while managing this here in a global style shoot it's

10:01.400 --> 10:02.780
up to you what you prefer.

10:02.780 --> 10:07.910
I personally preferred the component driven approach because in the end react is all about components

10:08.180 --> 10:13.280
and therefore I think we stay a bit closer to the default react world by doing it like this but it's

10:13.310 --> 10:20.430
also not a decision where you always have to follow path A or path B you can mix and match these concepts.

10:20.540 --> 10:25.330
Maybe you sometimes have something where a separate component doesn't really make a lot of sense manage

10:25.350 --> 10:31.070
it in a global style then and in other cases maybe a custom component makes more sense than having a

10:31.070 --> 10:32.180
global style setup.
