WEBVTT

00:02.520 --> 00:07.110
So now we work with navigation quite a bit we're able to move forward and backward.

00:07.110 --> 00:13.620
You learn how to add icons and action buttons here to this header how to style and control the header

00:13.620 --> 00:18.630
in general how to pass data around and these are all crucial things for mobile apps you are building

00:18.630 --> 00:23.610
with React Native Of course these are things you'll do over and over again when working with React Native

00:23.790 --> 00:24.980
to build apps.

00:25.050 --> 00:31.170
Now this is not the only form of navigation we can implement though we can also at taps at the bottom

00:31.440 --> 00:36.330
so we can switch between different sections in his app which of course all does a typical pattern you

00:36.330 --> 00:42.210
know from mobile apps and which is also the pattern I sketched out at the beginning of this module I

00:42.210 --> 00:49.950
want to have two taps in his app one for all our meals or in this case all our categories and one for

00:49.950 --> 00:55.440
just our favorite meals the meals we marked as a favorite.

00:55.500 --> 01:01.640
That of course brings us to one important question how can we add taps when working with react navigation.

01:01.800 --> 01:04.970
And that's thankfully not too difficult.

01:05.010 --> 01:09.840
Let's go to our meals navigator James file which is where we set up navigation and there we created

01:09.840 --> 01:11.190
a stack navigator.

01:11.190 --> 01:17.460
You need a stack navigator whenever you have screens pages in your app that are connected with such

01:17.460 --> 01:19.020
a forward backward flow.

01:19.020 --> 01:21.080
That's the typical stack navigation.

01:21.140 --> 01:26.960
What we're using here it of course will still need that even if we now all the ad taps.

01:26.970 --> 01:32.910
The good thing is you can simply have multiple navigators in your application and that's exactly well

01:32.940 --> 01:39.180
do now from Rick navigation besides the stack navigator that create stack navigator function.

01:39.210 --> 01:45.240
We can also import create bottom tab navigator and that does just what it sounds like it allows us to

01:45.240 --> 01:48.080
create a navigator that works with taps at the bottom.

01:49.050 --> 01:56.220
So create bottom tab navigator it is and we can simply create that additional navigator next to our

01:56.220 --> 02:04.230
meals navigator let's say so here I will named is meals Pfaff tab navigator you can name it whatever

02:04.230 --> 02:10.110
you want that just want to be really clear about what his navigator controls and wheel controls are

02:10.110 --> 02:17.550
meals and favorites with taps and I call create bottom tab navigator and store the result of that in

02:17.550 --> 02:18.360
this constant.

02:18.360 --> 02:24.000
The result of this justice before for the stack navigator isn't the end a react component.

02:24.210 --> 02:27.740
So we can store that here and we'll soon be able to to use distance.

02:28.410 --> 02:34.650
Now how do we configure that tab navigator then just like the stack navigator the tab navigator all

02:34.650 --> 02:40.590
the takes the object where we have to inform it about the different taps so to say the different sections

02:40.590 --> 02:46.880
to different screens you want to load when we click to different taps and there I have two tabs which

02:46.880 --> 02:49.790
I want one tab should be what we see here.

02:49.830 --> 02:56.010
So our stack in the end not just this screen but all of the functionality to go to another screen.

02:56.010 --> 03:02.310
So I want to have the entire stack here in one tab and a different screen or a different stack in the

03:02.310 --> 03:11.740
Abbott tab and the good thing is you can use a stack or any other Navigator as a screen in this Navigator.

03:12.040 --> 03:15.130
So what you can do here is you can set up an identifier.

03:15.220 --> 03:16.540
Let's maybe name it meals.

03:16.570 --> 03:18.140
That is totally up to you that name.

03:18.250 --> 03:21.060
And now you could point at a screen here.

03:21.100 --> 03:27.100
You can also use that long form with screen but I'll use the shortcut and just directly point at a screen

03:27.100 --> 03:35.070
here at the screen add which you point here can even be just a react component as we created here in

03:35.070 --> 03:36.530
the screens folder or.

03:36.540 --> 03:40.290
Well since this year as I mentioned all the returns are real component.

03:40.290 --> 03:42.790
It can also be the result of create stack Navigator.

03:42.840 --> 03:50.350
So indeed I'll use the meals navigator here as my screen to be loaded for the meals tab.

03:50.420 --> 03:54.320
Indeed this is how it is works is how we can set this up.

03:54.480 --> 03:56.420
So that's our first tap.

03:56.430 --> 03:59.270
The second tab will be our favorites and there.

03:59.340 --> 04:01.280
I have no stack yet.

04:01.290 --> 04:07.940
We might later add one but for now I'll just point at the favorites screen so let's import dead favorites.

04:07.950 --> 04:16.230
Screen here in the meals navigator file import favorites screen from the screens folder and they are

04:16.260 --> 04:18.000
favorites screen like this.

04:18.180 --> 04:27.980
And now simply point at the favorite screen here for our favorites identifier in the bottom tab navigator.

04:28.080 --> 04:30.930
This is how easy we can set up a tab Navigator.

04:30.930 --> 04:33.340
The question now is how do we use it.

04:33.420 --> 04:39.000
Well in the end it's now this Navigator which we want to use as our route navigator in the app because

04:39.000 --> 04:41.510
it includes our existing meals navigator.

04:41.610 --> 04:44.520
And it also allows us to go to the favorite screen.

04:44.520 --> 04:50.010
So in the end I just use this year in my app container instead of the meals navigator because the meals

04:50.010 --> 04:56.600
navigator now is nested in this tab navigator and that is how you can combine multiple navigators in

04:56.620 --> 05:02.400
a native app driven by rack navigation because you can simply mix and match them together.

05:02.400 --> 05:07.740
You always have one route Navigator which is in your app container and that makes sense you have one

05:07.740 --> 05:14.550
entry point to your app but this route navigator can of course have our nested navigators as we have

05:14.550 --> 05:20.670
it here for this tap where we point at the meals navigator and if we now save safe this and our app

05:20.670 --> 05:25.950
therefore restarts you see now we have tabs at the bottom here and we can click them to go to our meals

05:26.160 --> 05:32.550
stack here and we can use this stack just as before but I can also switch to favorites go back to my

05:32.550 --> 05:37.340
stack which even keeps it stated was in and that is how easy we can add tasks.

05:37.380 --> 05:39.210
Same on Android of course.

05:39.480 --> 05:44.540
Now of course it's also noteworthy that these taps don't look at right yet it would be nice to have

05:44.540 --> 05:49.290
a I can hear it and not just some text and we'll take care about configuring these taps.

05:49.290 --> 05:54.660
Just a second but this is how easy we can get started with taps and this is how you can think about

05:54.660 --> 06:00.620
using multiple navigators in a react navigation app or in the app using react navigation.

06:00.630 --> 06:05.490
Now with that let's see how we can actually add icons and how we can configure our taps a bit more also

06:05.490 --> 06:08.160
to use a different color than this default blue year.
