WEBVTT

00:02.630 --> 00:05.410
Let's start with the favorites.

00:05.420 --> 00:13.270
I want to make sure that when I'm in a recipe I can click that star and that adds it is as a favorite

00:13.660 --> 00:18.490
and shows adhere to favorite screen where I currently see nothing because I removed these dummy favorites

00:19.880 --> 00:20.200
for that.

00:20.210 --> 00:25.830
I'll start in the store folder in the actions folder and add a new folder which I'll all the name meals

00:25.840 --> 00:30.570
J asked you can name it differently if that's confusing to you but get these two files meals J here

00:30.560 --> 00:34.970
and actions and meals charts and road users and then the actions meals.

00:34.960 --> 00:41.900
J ust fall I will set up some redux actions which typically starts by setting up some unique identifiers

00:41.930 --> 00:48.760
which I store in constants and that will be toggle favorite.

00:49.070 --> 00:50.710
You can use whatever you want here.

00:50.780 --> 00:53.860
The value you store here typically is the same identifier.

00:54.350 --> 00:59.570
So this is the identifier value and that is simply stored in a constant so that we don't have to manually

00:59.570 --> 01:02.870
type this later but we can always import this constant in the void.

01:02.870 --> 01:03.690
Typos.

01:03.860 --> 01:05.440
Again if it's brand new to you.

01:05.440 --> 01:09.730
Definitely check out a dedicated react read X resource first.

01:09.950 --> 01:12.680
Now also use the action create or pattern here.

01:12.680 --> 01:19.190
Which means I have that identifier here but now I will also export a function that creates me action

01:19.280 --> 01:24.050
because an action is not just an identifier often and in this case that's the case.

01:24.050 --> 01:29.630
It also needs some extra payload and therefore we actually have an action which is an object with identifier

01:29.780 --> 01:35.930
and payload and therefore here I'll add a function that creates me such a action object and I'll named

01:35.930 --> 01:37.430
as toggle favorite like this.

01:37.490 --> 01:42.950
Select identifier button camel case and this is a function that can receive some data because I will

01:42.950 --> 01:48.500
be the one calling it and that should return a javascript object which describes does action so which

01:48.500 --> 01:50.300
has let's say a type.

01:50.330 --> 01:55.010
That's typically how you call that identifier field but you're generally free to use whatever you want

01:55.010 --> 01:55.590
there.

01:55.670 --> 01:57.490
And in my case the will be toggle favorite.

01:57.500 --> 02:03.700
So I a point at this identifier I use this string as an identifier and then any extra data you want.

02:03.740 --> 02:09.500
For example here I'll need to add the meal ideas of the meal which should be toggled and that means

02:09.500 --> 02:14.540
that dysfunction also needs to get decided as I input because otherwise I can't store it in the action

02:14.540 --> 02:16.700
which I create.

02:16.710 --> 02:21.120
So this is my action creator for the toggle favorite action now in the reducer.

02:21.120 --> 02:27.810
I want to act when I get such a toggle favorite action and for this I'll use a pattern which you probably

02:27.810 --> 02:28.370
have seen.

02:28.380 --> 02:34.020
If you work with redux before I'll use a switch statement here and switch on my action type because

02:34.020 --> 02:40.890
keep in mind that action will be an object with a type property which identifies the action that occurred.

02:40.890 --> 02:45.330
So I switch on that action type and then I handle different cases for the different actions I might

02:45.330 --> 02:46.650
have.

02:46.650 --> 02:53.040
So here I have the toggle favorite action for this you need to import toggle favorite from actions meals

02:53.390 --> 02:58.590
and that's why I'm storing this into separate constant because now I don't have to manually type toggle

02:58.590 --> 03:00.820
favorites where I might have a typo in there.

03:00.840 --> 03:07.410
Instead I just use that constant in which the string is stored and now here I run whichever logic I

03:07.410 --> 03:13.310
want to run to then work with that action and change my state such that the meal with the meal right.

03:13.350 --> 03:19.470
That's part of my action is added to favorite meals or removed from there if it already was part because

03:19.470 --> 03:20.790
it's a toggle action here.

03:20.820 --> 03:28.770
I want to add items that aren't favorites yet I want to remove items that are side note in the switch

03:28.770 --> 03:29.250
statement.

03:29.250 --> 03:33.150
I also will add a default case where it just returned the unchanged state.

03:33.150 --> 03:36.900
We shouldn't really reached that but in case we do well and that's what we do.

03:37.380 --> 03:40.800
But back to the toggle favorite case in there.

03:42.770 --> 03:48.740
I now want to in the end find out whether my meal with the idea that's part of the action because I'm

03:48.740 --> 03:50.450
adding delight to the action.

03:50.450 --> 03:52.550
If Dad meals already part of favorite meals.

03:52.550 --> 03:53.660
If yes I want to remove it.

03:53.690 --> 04:00.960
If it's not I want to add it so for this I'll start by finding the index of the meal.

04:00.960 --> 04:07.380
Any favorite meals array because if Dad is 10 minus one I know I didn't find the index so it wasn't

04:07.390 --> 04:07.820
part.

04:07.840 --> 04:13.540
If that's greater or equal in cereal I know that the item was part of that so I'll have my existing

04:13.540 --> 04:21.960
index here and I get this by using state favorite meals whips and they're the equals sign and state

04:22.010 --> 04:27.510
is simply my current state snapshot which I get and there will have a favorite meals property and I

04:27.510 --> 04:33.780
can use to find index method or normal javascript method which I can use all on arrays to get the index

04:33.840 --> 04:39.810
of an item that matches a certain criteria which I set up here in a function I pass to find the next

04:40.230 --> 04:47.040
dysfunction runs on every meal in the array and if it returns true then it gives me the index of the

04:47.040 --> 04:48.610
element for which it ran through.

04:48.660 --> 04:56.900
So here I want to return true if meal dot I.D. is equal to action dot meal idea that simply means that

04:56.930 --> 05:02.090
the meal I'm looking at in my favorite meals has the same idea SD meal for which is actual calories

05:02.090 --> 05:08.450
and dad means if that is true for any item and favorite meals that the meal we're trying to toggle is

05:08.540 --> 05:13.490
already part of the favorites so we'll have to remove it because this will now return us to index of

05:13.490 --> 05:13.990
the item.

05:13.990 --> 05:20.090
Therefore existing index will be greater than minus one and therefore we can then use that index to

05:20.090 --> 05:21.120
remove it.

05:21.170 --> 05:23.660
If this returns true for no item.

05:23.720 --> 05:29.870
So if Disney and returns minus one I note that the item isn't part of favorite meals yet so existing

05:29.870 --> 05:34.520
index holds very important information and hence I will use it here native state and a check if existing

05:34.520 --> 05:40.760
index is greater or equal than 0 which means we already have that meal as part of the favorite meals

05:41.390 --> 05:43.040
or not.

05:43.040 --> 05:48.290
Now in the if case soda item already is part of the favorite meals I want to remove it.

05:48.290 --> 05:53.210
So here I will in the end return and use state because in your reducer in the end you have to return

05:53.210 --> 06:00.740
and use state which is a new object where I first of all copy the existing state with the spread operator

06:00.740 --> 06:01.110
here.

06:01.110 --> 06:05.810
Pull out all the key value pairs of the existing states so that they don't lose any state and don't

06:05.870 --> 06:06.980
override any state.

06:06.980 --> 06:12.200
I don't want to overwrite and then I will only overwrite the favorite meals so I'll add this property

06:12.200 --> 06:17.870
again to override the existing favorite meals with my new favorite meals which shouldn't even be the

06:17.930 --> 06:21.520
old favorite meals without the item on this index.

06:24.250 --> 06:30.360
Now here to get my updated favorite meals I'll create a new constant updated fare of meals there I will

06:30.360 --> 06:39.470
first of all create a new array and populated with my existing meals so move my existing favorite meals

06:39.470 --> 06:46.240
like this and I do this to create a copy of that array so that I don't manipulate the original array

06:46.250 --> 06:53.000
if I now start working on that because now I want to take my updated fare have meals called splice here

06:53.660 --> 06:57.470
and then removed the item at the existing index and only that item.

06:57.470 --> 07:03.950
So this will in the end take this updated fast meals index added it and remove the item at this index

07:04.250 --> 07:06.200
and added this array.

07:06.200 --> 07:12.110
That's why I copied it so that I don't edit the original array and now we can use it as updated fav

07:12.110 --> 07:17.330
meals array here and stored this back as favorite meals into our store because that will be the favorite

07:17.390 --> 07:19.880
meals array without the meal we just removed.

07:23.360 --> 07:29.680
In the Ellis case which is of course relevant if we're not finding a product we want to add it here.

07:29.690 --> 07:36.380
I also want to return and use state where I first of all copy the old state and then I will overwrite

07:36.380 --> 07:42.230
favorite meals to basically be my old favorite meals.

07:42.230 --> 07:48.380
And now I can call Kong cat a javascript method built into while javascript which returns a new array

07:48.410 --> 07:55.520
which takes the older and adds a new item and there I want to add the meal for Dad ideas here.

07:55.700 --> 08:05.130
And of course I can find that meal on my state dinner on meals does this property state here always

08:05.130 --> 08:08.940
refers just to this state structure here by the way.

08:08.940 --> 08:14.240
And now here I can find the meal which I want to add.

08:14.380 --> 08:18.210
And since this gets very long I'll actually outsource this into a new line.

08:18.490 --> 08:27.770
So my meal which I want to add can be found with the fine method which runs on all meals and there if

08:27.800 --> 08:33.560
my like is equal to action dog meal idea then I have the meal I want to add and it's this meal which

08:33.560 --> 08:40.180
I concatenate to my favorite meals so that they add this to that array that should be logic that works

08:40.180 --> 08:45.690
and that manages our favorites.

08:45.700 --> 08:52.120
Now we need to make sure that we actually dispatch this action whenever we click that star icon in our

08:52.120 --> 08:52.540
header

08:55.360 --> 08:56.570
to dispatch the action.

08:56.570 --> 09:00.550
Let's go to the meal detailed screen because that's where we have our star.

09:00.550 --> 09:05.590
I can hear and when I press this button I in the end want dispatch action.

09:05.710 --> 09:08.520
Good news is dispatching actions is very easy.

09:08.530 --> 09:09.800
We got to use selector.

09:09.850 --> 09:16.190
We also got use dispatch which in the end gives us an easy way of firing a function.

09:16.200 --> 09:24.110
The bad news is that this of course can only be used in the component body here in our functional component

09:24.260 --> 09:26.150
and not in the navigation options.

09:26.210 --> 09:32.690
So we'll again have to work with set parents to communicate between navigation options and the component

09:32.720 --> 09:37.970
but that is something we can of course do so here in meal detail screen.

09:38.040 --> 09:45.470
I'll simply start by calling use dispatch and what this does is it gives us a dispatch function of function

09:45.470 --> 09:53.650
we can call to dispatch new actions and I'll store in a constant named dispatch next I want to create

09:53.650 --> 10:01.210
a toggle favorite handler which is a function which in the end should dispatched his action.

10:01.210 --> 10:06.390
So here I want to call this patch which I have a way to little thanks to this hook.

10:06.610 --> 10:10.600
And now to dispatch I need to forward the action which I want to dispatch.

10:10.600 --> 10:14.410
And for this I'll use this action create or toggle favorite here.

10:14.620 --> 10:18.340
So we just have to import this import

10:20.780 --> 10:27.410
from the store folder there from actions and there from the meals chairs file from there.

10:27.410 --> 10:35.740
I want to import toggle favorite not the identifier in all caps but this action create or function with

10:35.740 --> 10:40.940
it imported here in dispatch we can call toggle favorite like this and now here we need to forward the

10:40.940 --> 10:45.440
idea and that of course is the meal ideas which we're already extracting up there

10:48.480 --> 10:53.310
or selected meal ideas would also work whatever you want.

10:55.350 --> 10:58.910
Ultimately go for the meal idea like this.

10:59.010 --> 11:07.110
Now we can reactive wait use effect to communicate to our header not with this line though but instead

11:07.110 --> 11:14.130
with props navigation set paradigms and now here all named as toggle Pfaff to name is up to you and

11:14.130 --> 11:16.890
point at my toggle favorite handler.

11:16.890 --> 11:22.980
Now toggle favorite handler should therefore be added as a dependency here and to a wide infinite loops

11:23.580 --> 11:30.180
all again use use callback which I import from react to wrap this function here.

11:30.180 --> 11:37.060
So here use callback is wrapped around this function and we need to specify dependencies here.

11:37.200 --> 11:40.020
And dependency number one is dispatch.

11:40.020 --> 11:44.640
React read X will make sure that this never changes though so that's a dependency which will never change

11:45.210 --> 11:46.730
dependency to his meal idea.

11:46.740 --> 11:49.270
That also shouldn't change you elsewhere on this page.

11:49.340 --> 11:54.900
It will always have the same value so as that this function shouldn't really be recreated which means

11:54.900 --> 12:00.360
this effect will never rerun unless it's recreated which only is the case if we had a new idea in which

12:00.360 --> 12:07.820
case it would be good that this is recreated but otherwise this won't change and hence we should have

12:07.820 --> 12:10.340
a secure communication channel here.

12:10.550 --> 12:16.490
Now in the header we can now extract that handler by the way.

12:16.510 --> 12:19.040
We also don't need to be Lady here anymore.

12:19.150 --> 12:28.420
We can now simply get the toggle favorite function out of our navigation data navigation get param and

12:28.420 --> 12:35.080
then I named that toggle fast so that's the param name which we can extract and this should give us

12:35.080 --> 12:41.050
access to this function which we pass now toggle favorite is what should actually be executed when we

12:41.050 --> 12:42.130
press this button.

12:42.550 --> 12:49.570
So here I will point its toggle favorite because this holds a pointer at this function and therefore

12:49.600 --> 12:56.740
dysfunction will be executed when we now press this star well we'll see if that works.

12:56.750 --> 13:04.760
Let's save that and go back to the spaghetti here and click this star and click to favorites and that

13:04.760 --> 13:05.450
looks good.

13:05.450 --> 13:07.600
Spaghetti are part of the favorites.

13:07.670 --> 13:11.440
Let's take the star again here and go to favorites and it's gone.

13:11.480 --> 13:12.730
That makes a lot of sense.

13:12.740 --> 13:18.290
Click it again it's back go to the detail page here and the favorites tab and click on the star and

13:18.290 --> 13:20.550
go back while it's gone.

13:20.750 --> 13:27.410
That's all the verified on Android for the schnitzel maybe favorites is empty right now let's go back

13:27.410 --> 13:30.560
and click the star go to favorites.

13:30.560 --> 13:39.250
Here it is go back click the star and it's gone so this logic generally works.

13:39.250 --> 13:43.150
There are a couple of things I still want to work on for example I want to change the icon based on

13:43.150 --> 13:44.250
the favorite status.

13:44.260 --> 13:49.600
I also want to show some text and the favorite screen when it's empty but generally dispatching and

13:49.600 --> 13:52.840
using the data works even if we need it in a header.
