WEBVTT

00:02.300 --> 00:05.960
So with tabs implemented, we made a huge step forward.

00:05.960 --> 00:12.090
Now the goal is to actually be able to share places and then find a place

00:12.140 --> 00:18.830
and if we click on that place, we actually load a different screen which is pushed on a stack of screens

00:18.830 --> 00:24.030
where we can then click on some back button which should appear here which should take us back.

00:24.080 --> 00:27.490
So that's the goal but for that we need places

00:27.620 --> 00:33.380
and even though we haven't implemented authentication yet, I want to implement the places, add place, load

00:33.380 --> 00:35.640
place thing already.

00:35.780 --> 00:39.270
For that, we need redux to manage that,

00:39.380 --> 00:45.770
well we don't need it but especially when using multiple screens, it makes a lot of sense because passing

00:45.770 --> 00:49.570
data around between screens is possible but not that much fun

00:49.700 --> 00:51.800
and redux is much better here.

00:51.890 --> 00:55.750
So let me show you how to add redux,

00:55.760 --> 00:57.780
it's very simple thankfully.

00:57.860 --> 01:02.870
If you want to add redux, you go to the place where you register your components,

01:02.900 --> 01:06.480
keep in mind these are the components which are loaded through navigation,

01:06.500 --> 01:12.280
they are the only components you can reach as screens, as containers,

01:12.290 --> 01:16.250
so these are the components which should be connected to redux.

01:16.250 --> 01:18.470
So these are the interesting components for us,

01:18.530 --> 01:21.240
how do we add redux here?

01:21.290 --> 01:24.780
We first of all import the provider,

01:24.800 --> 01:29.730
so we import provider from redux,

01:29.730 --> 01:31.320
that's the first step.

01:31.320 --> 01:34.710
The second step is that we also need to get access to our store,

01:35.010 --> 01:41.820
so in index.js, the old file where configured our store, we can copy these two lines where I import configure

01:41.820 --> 01:46.670
store and where I then execute configure store to get my store.

01:47.040 --> 01:48.790
So I'll head over to app.js

01:48.990 --> 01:55.300
and quickly add this here, import configure store, the path should be all right because app.js

01:55.300 --> 01:59.410
is on the same level as index.js and then execute it

01:59.440 --> 02:04.740
and once we get the store and the provider, we can add it to register component.

02:05.040 --> 02:11.460
The third argument would be the store and the fourth argument would be the provider and you need to

02:11.460 --> 02:17.640
pass both if you want to use redux and then you just do that for every screen which you want to connect

02:17.850 --> 02:21.520
to redux and of course you don't have to connect all the screens,

02:21.690 --> 02:23.300
I just reformatted this,

02:23.310 --> 02:29.670
we have first argument, second, third and fourth. You don't have to connect all screens to redux, if there

02:29.670 --> 02:31.880
is a screen which doesn't need the global state,

02:31.980 --> 02:37.300
just don't pass the third and fourth argument. Here all screens do need that though,

02:37.350 --> 02:39.030
so I'll leave it as it is.

02:39.090 --> 02:42.860
Now all these screens will get my redux store

02:43.350 --> 02:51.060
and now we can use the connect middleware as we did before on these screens to map dispatch to props

02:51.090 --> 02:52.910
and map states to props,

02:52.920 --> 02:55.090
so nothing spectacular there.

02:55.440 --> 03:06.210
So with that let's update our store to be able to create new places and load all our places and let's

03:06.210 --> 03:11.060
add all this functionality to our components over the next lectures.
