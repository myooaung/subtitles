WEBVTT

00:02.040 --> 00:06.860
Let us start by making this usable again because that's the most important thing.

00:06.900 --> 00:12.780
The fix here of course is to make this scroll label because if we can scroll this view then we can reach

00:12.780 --> 00:14.610
this button down there again.

00:14.610 --> 00:20.580
So back on the start game screen we need the good old scroll view again which we import from React Native

00:22.970 --> 00:28.460
and now we can use that to wrap our view which surrounds our screen detachable touchable without feedback

00:29.070 --> 00:33.390
button in this case with the scroll view.

00:33.510 --> 00:39.330
So let's use a scroll view to surround our entire screen here.

00:39.340 --> 00:45.600
Our entire component in the end and with this this is now scrolling all the advantages that we're now

00:45.610 --> 00:47.370
the keyboard is open on ours.

00:47.560 --> 00:52.510
We can scroll a little bit but we still have the problem that it bounces back.

00:52.510 --> 00:56.740
So that's not perfect but at least we can reach this button and we'll take care about the keyboard in

00:56.740 --> 01:04.590
a second and we can now use the app again because now we can start the game again now on the game screen

01:04.590 --> 01:04.940
by the way.

01:04.950 --> 01:09.420
We have a similar problem on the small Android device.

01:09.510 --> 01:13.380
We have such little height available that we can't even see our log.

01:13.440 --> 01:16.890
We can scroll it but yeah that's not too convenient.

01:16.950 --> 01:21.960
And here on our west we also don't we have a big log so there we might want to use a totally different

01:21.960 --> 01:24.060
layout for example or.

01:24.080 --> 01:26.160
Well whatever we'll have to see.

01:26.160 --> 01:31.020
But before I focus on this screen there also is when everything we've fixed the scrolling.

01:31.020 --> 01:32.160
That's good.

01:32.160 --> 01:35.170
But we still have two other problems on the start game screen.

01:35.220 --> 01:42.250
If I change something change it back just so that this restarts we have to the layout.

01:42.260 --> 01:47.120
I'm not happy with with the buttons though it now looks different than before and we'll come back to

01:47.120 --> 01:48.110
why in a second.

01:48.170 --> 01:49.210
And while the keyboard.

01:49.220 --> 01:55.640
That's the real issue here so what can we do about this to fix that keyboard issue.

01:55.640 --> 02:01.490
There's never a component you can import from React Native and that's the keyboard avoiding view.

02:01.670 --> 02:08.750
That's a view a component you can use to wrap your component with in this case inside of that scroll

02:08.750 --> 02:13.760
view and that's important use it instead of the scroll view and then wrap your entire touchable without

02:13.760 --> 02:22.470
feedback component with it to make sure that your keyboard your soft keyboard when it opens up never

02:22.530 --> 02:24.720
overlays the input you're typing in.

02:24.770 --> 02:27.660
And for Dad you can all configure the keyboard avoiding view.

02:27.750 --> 02:34.750
You can set a behavior dear that accepts different values and set this to position here.

02:34.760 --> 02:38.880
And I'll come back to different behaviors you can set up and how they differ in a second.

02:39.260 --> 02:47.180
With that added here on IAW you'll now see that this slides a little bit when we open the soft keyboard

02:47.210 --> 02:50.050
when we start typing doesn't slide enough.

02:50.060 --> 02:56.210
But for Dad we can also go back here and set the keyboard vertical offset to a number for example to

02:56.210 --> 02:57.450
30.

02:57.530 --> 02:59.860
This is the amount of pixels that slice it up.

02:59.870 --> 03:04.660
And this should be the height of your input typically or around the height of your input.

03:04.700 --> 03:07.610
And now to slide it up so that we can always see this which is great.

03:07.610 --> 03:10.320
It now never overlays our input here.

03:10.370 --> 03:17.140
Now setting this to behavior position simply means that it reposition the entire screen by 30 pixels

03:17.140 --> 03:17.770
basically.

03:18.090 --> 03:24.740
It could also set us to padding so did that pattern gets added at the bottom to slide everything up.

03:24.740 --> 03:30.170
And last but not least you can also change the overall height of the screen a little bit.

03:30.170 --> 03:37.070
Now typically on ISIS it works best if you use position and on Android it works best if you get use

03:37.070 --> 03:37.870
padding.

03:37.880 --> 03:42.100
And later in this module you'll learn how to find out on which fled from your running on.

03:42.140 --> 03:47.740
For now I'll use position here with that we fixed the keyboard issue.
