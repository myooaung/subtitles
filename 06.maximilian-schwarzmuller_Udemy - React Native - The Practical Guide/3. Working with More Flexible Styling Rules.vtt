WEBVTT

00:02.350 --> 00:07.180
So back in our code here and to start game screen which is the first screen we see.

00:07.370 --> 00:13.070
We could already see that our two buttons are reset and confirm although we're in position that great

00:13.160 --> 00:14.980
in our button container.

00:15.080 --> 00:21.650
So let's have a look at the styling we set up down there and what we can see here is that we assign

00:21.650 --> 00:24.790
the width of one hundred percent on the button container.

00:24.830 --> 00:28.380
But what's this size referring to.

00:28.400 --> 00:34.820
Well this size on this view here of course if we say 100 percent in the end refers to the surrounding

00:34.820 --> 00:38.150
parent which in this case is discarded this input container.

00:38.150 --> 00:46.370
And on this input container we actually set a width of 300 and dead somebody is too small combined with

00:46.370 --> 00:52.640
our buttons which we have a fixed width of one hundred we get is look which we don't want which we by

00:52.640 --> 00:58.570
the way can see if we change something so that our app rebuilds and therefore restarts.

00:58.590 --> 01:01.280
Then we see that start screen again here.

01:01.340 --> 01:03.530
That's the look we don't want.

01:03.530 --> 01:06.210
So what do we want here.

01:06.210 --> 01:13.500
Well maybe we don't want the width of three hundred here but a more flexible width we're setting a max

01:13.500 --> 01:22.020
width of 80 percent what we could do here is we could always set a width of let's say 80 or 90 percent

01:23.790 --> 01:31.230
and simply make sure that this should always have a men with a 300 so that we always have at least this

01:31.230 --> 01:36.180
many pixels in case we have a small device where 80 percent would be less than that that we have at

01:36.180 --> 01:39.750
least this and now it is would look better here.

01:39.750 --> 01:40.630
Why.

01:40.710 --> 01:43.520
Because now we have 80 percent as a default.

01:43.620 --> 01:46.070
And prior to that we had it as a max with.

01:46.650 --> 01:50.280
So now by setting it to a default this ensures that this is not our limit.

01:50.280 --> 01:51.830
Instead it's our default size.

01:51.840 --> 01:57.030
But we also set up that we want to have a min width of 300 on this small device.

01:57.060 --> 02:02.760
This man with this overruling our default width because 80 percent would actually be less than 300 on

02:02.760 --> 02:04.730
this small device.

02:04.740 --> 02:10.200
Now of course you could have even smaller device where this rule however leads to an issue where men

02:10.200 --> 02:16.950
width of three hundred basically means that your device is smaller than that it's not wide enough and

02:16.950 --> 02:20.800
therefore your container would go beyond the boundaries of our screen.

02:20.820 --> 02:26.070
So it is still might not be the perfect rule but it's certainly better as we can see here because on

02:26.070 --> 02:30.900
the bigger screen this does still looks good here on the iPhone on the smaller screen does not always

02:30.900 --> 02:31.800
looks good.

02:31.800 --> 02:38.730
Now to ensure that we never leave our boundaries we can also set a max width and set this to let's say

02:38.970 --> 02:42.920
95 percent so that we have at least a little bit of spacing around it.

02:42.960 --> 02:50.340
Now we ensure that our container never will go outside of our screen but it tries to take 80 percent

02:50.670 --> 02:53.780
but in case we have a super small screen it will take 300.

02:53.790 --> 02:57.840
But again never more than 95 percent of the available with.

02:58.440 --> 03:04.440
So now we simply set up more flexible rules here which work on a broader range of devices which while

03:04.500 --> 03:06.390
as you can tell is a bit better here.
