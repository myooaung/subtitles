WEBVTT

00:02.300 --> 00:06.340
Now sometimes console log alone doesn't get you that far.

00:06.380 --> 00:11.270
You need more help and in such cases you can debug your code remotely.

00:11.270 --> 00:17.750
Now for Dad you need to open the debugging menu on these emulators or on real devices too if you you're

00:17.750 --> 00:23.650
working with those you do that by pressing on the Iaw simulator command.

00:23.660 --> 00:34.030
D And it will open this menu here on Android you press command or control em and it will open this menu.

00:34.030 --> 00:38.360
Now you see some options there and we'll have a look at the important ones for all this module.

00:38.360 --> 00:41.780
The option will now chooses debug J.S. remotely.

00:42.050 --> 00:48.290
If you pressed as a new tab should open up in the browser which automatically navigated too low closed

00:48.680 --> 00:54.700
nineteen hundred and one in Mike has your slash debugger UI dad should open automatically now for it

00:54.690 --> 01:01.160
to work correctly make sure that in your expo dev tools you have setup the connection to be Alon or

01:01.160 --> 01:08.490
local not tunnel otherwise this will be super super slow and now what this debugger yields you this

01:08.500 --> 01:13.650
new tab is that you can open the Chrome developer tools now with the shortcut you should be seeing here.

01:14.790 --> 01:19.890
And there you now also see the same console log you're getting here so you now also have a number of

01:19.890 --> 01:25.320
console you can look into which might be more convenient to work with just to quickly show that example

01:25.320 --> 01:26.930
with the core SQL goals again.

01:26.940 --> 01:36.290
If I can so log my chorus goals here in safeties D does rebuilds and now we see the array here and we

01:36.290 --> 01:37.040
can expand it.

01:37.040 --> 01:39.050
So this might be a bit more convenient to work with.

01:39.140 --> 01:41.420
Basically as you know it from web development.

01:41.420 --> 01:44.760
In case you're a web developer but you can also do more.

01:44.780 --> 01:50.570
You can dive into sources for example to dive into your source code and set breakpoints there simply

01:50.570 --> 01:56.870
expand this debug a worker J.S. thing here expand these folders and you'll find the folder structure

01:56.900 --> 01:58.750
you're also working with.

01:58.820 --> 02:05.000
For example there in your users folder here you'll find the app J.S. file you find key components.

02:05.450 --> 02:10.950
So now in app chairs if you open that file you'll see your code as you wrote it.

02:10.960 --> 02:12.510
So in the end compiled words.

02:12.550 --> 02:15.560
Which is great because it's easy to recognize your code there.

02:15.700 --> 02:21.880
And now here for example let's say you want to stop the code when you're about to add a new goal.

02:21.880 --> 02:25.350
You can add a breakpoint by clicking on the left of the line number here.

02:25.360 --> 02:27.370
So did you have this blue mark.

02:27.370 --> 02:32.730
And now your code execution will stop the next time you hit this code code line here.

02:32.830 --> 02:36.930
Now I enabled debugging on the android emulator so it will not stop.

02:36.940 --> 02:39.980
If I try it on ISIS it will stop if I try it on Android.

02:40.000 --> 02:47.500
We could have enabled it on ISIS to here with debug remote J.S. but I didn't do that so let's go with

02:47.500 --> 02:48.250
Android.

02:48.310 --> 02:49.800
You can't ignore this warning here.

02:49.840 --> 02:57.340
You can simply dismiss it and now press add new goal and maybe enter learn react native click add and

02:57.340 --> 03:04.030
now you see this is getting stuck here because if you go back to the dev tools this is now past.

03:04.060 --> 03:06.580
You see this is now highlighted in blue.

03:06.670 --> 03:12.310
It's getting passed and now the cool thing is you can walk for your code step by step with these controls

03:12.310 --> 03:12.610
here.

03:12.760 --> 03:18.400
Simply play around with them and you can also hover over or things to look into your code for example

03:18.400 --> 03:21.060
to see the current value in gold title.

03:21.070 --> 03:25.480
Now we can simply progress through these lines step by step with this button.

03:25.480 --> 03:30.220
You can step into a function call with this button or step out of it with this button.

03:31.210 --> 03:35.430
And you can always resume code execution with this blue play button.

03:38.030 --> 03:43.850
This can be a very powerful tool for really diving deeply into your code flow because it allows you

03:43.850 --> 03:45.810
to fully understand what's going on.

03:45.890 --> 03:51.240
To look into your values at runtime and to get full control over your code.

03:51.260 --> 03:56.960
Now if you want to learn more about how to use the chrome debugging tools you'll find a helpful link

03:56.990 --> 04:01.040
attached to this lecture which has more information about the chrome debugging tools.
