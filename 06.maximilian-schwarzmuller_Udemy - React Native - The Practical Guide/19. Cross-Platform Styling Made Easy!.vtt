WEBVTT

00:02.340 --> 00:09.990
Let's start with cross-platform styling, how can we fix this, which possibilities of styling for different

00:09.990 --> 00:10.590
platforms

00:10.590 --> 00:16.190
do we have? There are two main approaches or two main tools we can use,

00:16.260 --> 00:22.860
the first which is often overlooked is that we do have an index.ios and an index.android.js

00:22.930 --> 00:29.760
file and keep in mind that these are the files which essentially start our application, in our course

00:29.760 --> 00:32.040
project we run the same code in both,

00:32.040 --> 00:38.250
so we start the same application but theoretically you have different starting points here and you could

00:38.250 --> 00:45.390
go as far as launching two totally different apps for different devices or at least you can load different

00:45.390 --> 00:46.950
layouts if you need that.

00:47.220 --> 00:53.890
So that's one major thing you can do, in a lot of apps, you might not need that and in our course project,

00:53.910 --> 00:59.500
I actually won't go as far but you can do that and it's not uncommon to do that,

00:59.610 --> 01:05.760
you will have a rather big codebase then but it's not an issue because you always only build for one

01:05.760 --> 01:08.310
of the two platforms, you ship two independent apps right,

01:08.310 --> 01:13.230
so whilst your project might be big, the apps you ship aren't impacted by that.

01:13.230 --> 01:16.380
So that's one thing, the different starting points,

01:16.380 --> 01:23.370
additionally there's the platform API, an API provided by react native which offers you some tools

01:23.370 --> 01:30.660
to detect the operating system at runtime so that you can find out on which operating system your app

01:30.660 --> 01:31.300
is running

01:31.350 --> 01:36.420
because if you're writing one codebase and you're not developing two totally independent apps with the

01:36.450 --> 01:39.990
different starting points, then you've got no chance of knowing this

01:39.990 --> 01:46.530
except for this API. I will show you how to use this of course and with that, you can easily then run

01:46.530 --> 01:49.530
some code depending on which platform you're on,

01:49.560 --> 01:54.940
you can render some content conditionally and simply access this in Javascript code.

01:55.230 --> 02:01.980
So this allows you to adjust your application at runtime and output different layouts, different components,

02:02.160 --> 02:05.370
run different code depending on the platform.

02:05.730 --> 02:07.160
So these are the tools we have,

02:07.170 --> 02:13.520
now let's take a closer look specifically at this platform API and let's use it in the next lectures.
