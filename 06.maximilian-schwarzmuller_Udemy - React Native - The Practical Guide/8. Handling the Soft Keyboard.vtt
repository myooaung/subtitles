WEBVTT

00:02.490 --> 00:06.150
There are two things you want to do when working with the soft keyboard here,

00:06.300 --> 00:12.090
we want to make sure that when we enter something, it actually pushes our form up so that we can reach

00:12.120 --> 00:17.580
all the values here, we can't right now because for secure text enter, we don't get any proposals so

00:17.610 --> 00:18.940
this bar is gone

00:19.120 --> 00:24.330
but it would be nice if it pushes this up so it's always in screen and it would also be nice if we could

00:24.330 --> 00:26.970
click somewhere else to dismiss this.

00:27.030 --> 00:28.890
Now let's work on both

00:28.890 --> 00:31.660
and let's start with pushing this up.

00:31.770 --> 00:37.250
This actually is a bit tricky though there is a helpful component in react native, this component

00:37.320 --> 00:41.650
just is a bit strange from the behavior sometimes.

00:42.080 --> 00:49.560
Let's import it all the way at the top from react native, it's name is the keyboard avoiding view.

00:49.870 --> 00:51.960
Now with that imported, if we go down

00:55.000 --> 01:00.910
to our jsx code, we can replace our wrapping view here inside the background image with keyboard avoiding

01:00.970 --> 01:04.990
view, make sure to also replace the closing tag

01:05.140 --> 01:08.190
and now we need to configure this, we need to set the behavior,

01:08.200 --> 01:09.580
so how should it achieve

01:09.580 --> 01:13.230
this effect of pushing up the elements? There

01:13.240 --> 01:17.960
you can always check out the docs of keyboard avoiding view to learn about the different behaviors,

01:18.130 --> 01:23.410
I strongly recommend using padding. So this will simply some padding at the bottom of the page effectively

01:23.410 --> 01:25.590
pushing up the elements.

01:25.630 --> 01:31.390
If we now save this and I go back and I rotate into landscape mode so that we have a little bit less screen

01:31.390 --> 01:34.610
size available, I click into this field here,

01:34.720 --> 01:41.920
you now see it gets pushed up so that we can see everything and that we can see our screen here, the same should

01:41.920 --> 01:43.470
work on Android. 

01:43.480 --> 01:49.710
Now if I reload this, you see if I enter something here, it gets pushed up, if I close it, it goes down.

01:49.720 --> 01:51.880
So this is now behaving better,

01:51.880 --> 01:57.130
the second thing is that I wanted to be able to dismiss the keyboard if you click somewhere else, for this,

01:57.130 --> 01:59.460
I'll import something else from react native

01:59.530 --> 02:00.480
and that something else is

02:00.490 --> 02:02.570
the keyboard API.

02:03.120 --> 02:06.510
Now you can learn more about the keyboard API in the official docs of course,

02:06.640 --> 02:13.100
if you scroll down to APIs, there if you choose keyboard, you learn what you can do with it,

02:13.120 --> 02:17.410
it allows you to control keyboard, add some event listeners and so on.

02:17.410 --> 02:21.770
Now what I want to do is I want to call this dismiss function here,

02:21.970 --> 02:24.210
I want to call it whenever the user presses

02:24.250 --> 02:26.670
somewhere on the screen,

02:27.070 --> 02:30.610
so for this I'll import touchable without feedback

02:32.320 --> 02:38.550
because I certainly don't want to turn the whole screen opaque or something like this.

02:38.620 --> 02:46.480
Now I will go down to my jsx code and there, unfortunately wrapping the entire keyboard avoiding view

02:46.480 --> 02:49.120
will lead to it not working correctly anymore,

02:49.360 --> 02:52.320
wrapping image background unfortunately will have no effect so

02:52.330 --> 02:55.210
what I'll do is I'll wrap my input container,

02:55.210 --> 02:56.220
better than nothing,

02:56.290 --> 03:02.830
so touchable without feedback and this is something which very well might be changed in the future

03:02.830 --> 03:04.590
but for now it is what it is.

03:07.300 --> 03:10.060
So here I'll wrap this entire view here,

03:10.090 --> 03:14.330
you must have only one child element so make sure to fulfill this criteria,

03:14.380 --> 03:23.020
I will wrap it with touchable without feedback and there I'll bind on press to keyboard dismiss. Don't execute

03:23.200 --> 03:24.410
dismiss yet though,

03:24.430 --> 03:26.180
so no parentheses are added,

03:26.410 --> 03:34.050
just pass a reference of it to on press so whenever this occurs or fires, it will trigger dismiss.

03:34.060 --> 03:40.420
Now with that, if I go back to the application, you can see that whenever I click somewhere in the input,

03:40.810 --> 03:42.800
it dismisses the keyboard,

03:42.820 --> 03:46.640
unfortunately clicking outside of it doesn't work due to the reasons I described,

03:46.810 --> 03:52.810
it has to be somewhere on the input here but better than nothing. You can of course improve this

03:52.810 --> 04:00.160
if you add some other view here which would wrap your other content but you'll probably need to adjust

04:00.160 --> 04:05.470
flexbox thereafter and then wrap this other view with touchable without feedback, so you can wrap more

04:05.740 --> 04:12.780
just directly wrapping keyboard avoiding view or image background won't work at least right now.

04:12.790 --> 04:18.530
Also keep in mind, users can of course always dismiss this by hitting the return button or on Android,

04:18.550 --> 04:24.020
this back button here. With that we got the auth form finished,

04:24.070 --> 04:30.470
we now got it well-prepared for the various things we might need and we can handle user input, we can

04:30.490 --> 04:31.390
validate,

04:31.390 --> 04:33.790
we provide a pleasant user experience.

04:33.790 --> 04:41.530
Let's now make sure that we also do this on our other component where we want to have user input, the

04:41.530 --> 04:43.030
share place screen.
