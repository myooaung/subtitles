WEBVTT

00:02.350 --> 00:09.690
So with that let's get started with our application here and there are various ways of getting started

00:09.700 --> 00:10.520
of course.

00:10.690 --> 00:19.420
I want I get started by first of all dropping this container style here in my starting screen and instead

00:19.960 --> 00:25.060
I want to get rid of the text and everything here and then I want to start by adding my own header.

00:25.060 --> 00:27.790
So this bar at the top of the street.

00:28.150 --> 00:34.360
Now we can build such a bar on our own here we get rid of that input which you don't need.

00:34.360 --> 00:39.880
And I will build it not inside of this app component but in a separate component file in a separate

00:39.880 --> 00:46.630
custom component because that's already one super important thing to take away just like in react for

00:46.630 --> 00:47.630
web apps.

00:47.680 --> 00:55.360
It is a good practice to split your app into multiple components which you then compose to gather because

00:55.360 --> 00:59.540
dad leads to more manageable and reusable code.

00:59.540 --> 01:04.660
So add a new folder components the name is up to you though you can name that folder whatever you want

01:04.910 --> 01:09.360
and in there I want to have a header J.S. file to hold the header component.

01:09.490 --> 01:14.490
Dear we need to import react from react so that we can well use react in there and write.

01:14.500 --> 01:23.300
J as X code and then we'll also need some components from React Native because you must never forget

01:23.300 --> 01:27.650
that these are the only core components you can use in the end.

01:27.650 --> 01:31.310
You can't use any web age him Al elements or anything like that.

01:31.310 --> 01:34.720
You need these core primitives React Native gives you.

01:34.850 --> 01:40.290
So we'll definitely need a view in here and also a text component and also style sheet component.

01:40.520 --> 01:43.420
And now with that we can get started building our header.

01:43.550 --> 01:51.890
So for this I'll add a header constant which holds my functional component because I'll work with functional

01:51.890 --> 01:58.560
components only in this course we'll use hooks in places where we need to manage state or a side effects.

01:58.620 --> 02:06.170
And here we will of course export this component in the end and also set up a stylus object with style

02:06.170 --> 02:10.460
sheet create so that we can styled is in the end.

02:10.520 --> 02:13.020
Now let's create our component here.

02:13.040 --> 02:14.580
Let's return something here.

02:14.750 --> 02:19.120
And what I want to return is in the end of the you with the text inside of it and the text should be

02:19.120 --> 02:20.190
our title.

02:20.300 --> 02:26.780
So therefore between the opening and closing text attack here I will output props title so did our own

02:26.780 --> 02:34.010
component can receive the title proper and output this year and the view surrounding the text will be

02:34.010 --> 02:40.790
used for positioning the text and for giving this some styling so for styling our header because text

02:40.880 --> 02:47.960
elements on their own are all the stylus all but not to the same extent like views are views really

02:47.960 --> 02:53.090
are a bit more flexible regarding the styles you can assign and regarding how they behave and therefore

02:53.120 --> 02:59.600
you always want to use a view for such a surrounding container and Ford is overall styling your component

02:59.600 --> 03:02.380
might have or parts of your component might have.

03:02.390 --> 03:08.810
So here all at the style prop and assign a style for my styles object a style we haven't created there

03:08.810 --> 03:16.810
yet but I'll name it header and I'll also give the text a style prompt though and point at Styles header

03:16.820 --> 03:21.500
title or whatever you want to name it because as I said you can style text to it if you don't want to

03:21.500 --> 03:28.360
have some text specific styles later to also make sure that the text looks good so now you're in the

03:28.450 --> 03:35.170
style sheet we can start styling our header and I'll start with the header itself by adding a header

03:35.170 --> 03:40.810
prop and then does object will hold these style definitions for the header so for it is the new component

03:40.810 --> 03:46.960
here and there of course you are free to experiment with whatever you want I'll go with a width of 100

03:47.080 --> 03:53.470
percent so that it takes the full device width we can get or the full width of the parent component

03:53.470 --> 03:58.810
to be precise but all added such that the parent component takes the full device width and therefore

03:58.840 --> 04:05.040
this will also take the full device with the end assign a height and there you can experiment with different

04:05.040 --> 04:10.020
values I found ninety to look quite decent and therefore I'll go with that.

04:10.020 --> 04:16.500
Side note for now I will optimize for these screens which I have here in the next course module will

04:16.500 --> 04:23.610
dive into how you can adjust your your views and you and your code for different devices both regarding

04:23.610 --> 04:30.690
their size as well as regarding the platform your code is running on for now will not have any differentiation

04:30.690 --> 04:37.640
there will adjust Q in our app to look good on these two emulators but again I'll pick up on this later.

04:37.830 --> 04:45.900
So height of 90 a padding of top padding to top of 36 to have some spacing to the top and I need to

04:45.900 --> 04:53.130
add this to basically cope or things like the status bar here or this notch here so therefore I add

04:53.160 --> 05:00.200
this padding top and I also want to add a background color here.

05:00.360 --> 05:04.760
And now you are of course totally free to pick any color you want.

05:04.770 --> 05:13.350
I prepared a nice color a hex code of a color which I personally like and that is hash symbol F seven

05:13.380 --> 05:21.450
to eight seven B which is quite a nice color in my opinion as you will see in a second.

05:21.460 --> 05:27.250
Now I also want to center the title and they offer all use a line items and justify content because

05:27.340 --> 05:33.280
every view by default uses flex box and data from with a line items and justify content we can control

05:33.280 --> 05:39.610
how to child elements of the view are positioned inside of the view and with Center for a line items

05:39.640 --> 05:40.780
and justify content.

05:40.780 --> 05:48.010
All set to center we center all children or child element instead of the view in while the center both

05:48.010 --> 05:50.680
horizontally and vertically.

05:50.680 --> 05:52.480
Now forward a header title.

05:52.480 --> 05:55.640
I also want to set up some styles for this.

05:55.780 --> 06:05.230
So the header title here while that should get a color of black because that will fit discolored urine

06:05.260 --> 06:11.020
so that we can read the text and I want to set the font size to 18.

06:11.050 --> 06:18.500
Let's say so that we have this fixed a bit bigger font size here with that.

06:18.620 --> 06:26.550
Let's try using this header and let's use it in the app J.S. file here there.

06:26.560 --> 06:31.070
We have this view and this view has no style attached.

06:31.150 --> 06:38.050
I will change this and set up a screen view here and give it as a flex of one attribute.

06:38.050 --> 06:44.090
Now we can assign this here and flex one will ensure that this view takes all the space it can get.

06:44.140 --> 06:49.780
And since it's the root view of our application that means it will take all the width and height it

06:49.780 --> 06:56.770
can get it will occupy the full screen and they are fluorescence my header takes width 100 percent since

06:56.770 --> 07:03.730
I'll add it directly inside of this view which is now configured to take the full width and height this

07:03.730 --> 07:06.360
header will also take to full with.

07:06.370 --> 07:08.440
So now we just need to add the header here of course.

07:08.440 --> 07:12.480
So import header from dot slash components header.

07:12.580 --> 07:20.020
You can omit do you file extension and then simply add header as a self closing tag here but don't forget

07:20.020 --> 07:25.120
to set a title prop because remember that we're outputting the title prop here between the text tax

07:25.570 --> 07:33.120
so we can add a title here and I'll name it guess a number because that's what our game is about.

07:33.120 --> 07:39.210
Now if we save this it should automatically rebuild and you should see a header that looks like this

07:39.240 --> 07:45.900
on the iPhone and like this here on Android and I'd say that's OK for both devices again we'll later

07:46.290 --> 07:52.320
explore ways of how you can find q and a look to the specific device your app is running on.
