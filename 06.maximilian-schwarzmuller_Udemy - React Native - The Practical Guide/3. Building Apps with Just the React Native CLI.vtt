WEBVTT

00:02.410 --> 00:05.440
So what are our alternatives to the managed workflow.

00:05.440 --> 00:08.450
One alternative is to use the React Native Seelye.

00:08.470 --> 00:10.950
You can learn about this on the official React Native page.

00:10.960 --> 00:15.430
If you whiz it that you can simply google for weak native to find it and there if you click on get started

00:15.880 --> 00:22.120
you actually are greeted with Q Different ways of getting started and the preselected ways to use the

00:22.130 --> 00:23.080
explicit lie.

00:23.080 --> 00:24.700
It is the approach we used.

00:24.730 --> 00:24.960
Right.

00:24.970 --> 00:30.220
So there is nothing too fancy about this this gives you to react native app using Expo it's what we

00:30.220 --> 00:31.720
used in this course.

00:31.750 --> 00:35.410
You can also click however on the React Native seal ie quick start.

00:35.410 --> 00:41.170
And now here you first of all need to set your system up in a certain way and then you can install a

00:41.170 --> 00:47.530
separate package that React Native seal ie which should now need to create a project and to run it and

00:47.530 --> 00:55.060
so on now important here you'll find the detailed installation structures for different operating systems

00:55.300 --> 00:57.070
and apps you want to build.

00:57.100 --> 01:02.680
Now be aware that on Windows as it says here you can't build I was apps the same on Linux you can only

01:02.680 --> 01:07.870
build Android apps there and you'll find installation structures if you select these specific options

01:08.590 --> 01:09.730
on Mac OS you can build.

01:09.760 --> 01:14.170
I was an android and you also will need to follow through these installation instructions.

01:14.170 --> 01:19.030
Now I'll not do this in detail here because you'll find them all written here of course if you want

01:19.030 --> 01:20.110
to follow along.

01:20.110 --> 01:25.960
In the end you will need to install a couple of packages not NPM packages but system wide packages and

01:25.960 --> 01:30.490
the exact installation process differs regarding on which platform you're running on.

01:30.580 --> 01:36.670
You will need to install Android Studio or X code so x code for ISIS apps Android Studio for Android

01:36.670 --> 01:39.130
apps and you need to install that now.

01:39.160 --> 01:40.610
Previously it was optional.

01:40.630 --> 01:42.840
I just did it to get a simulator.

01:42.850 --> 01:47.020
Now you need it because now these tools will be used to build your app.

01:47.080 --> 01:52.750
Previously that was not required because the expo wrapper basically kind of read our code and hosted

01:52.750 --> 01:56.780
it and you can build a standalone app with Expo and you managed workflow as well.

01:56.810 --> 01:59.030
Their dead will happen in the cloud.

01:59.320 --> 02:04.780
Now that all happens locally you will need to install Android Studio ins on install it with all the

02:04.780 --> 02:07.540
options you find here.

02:07.550 --> 02:14.130
Now you also no matter for which platform you're working you also need to install the react native seal.

02:14.140 --> 02:22.420
I you can do this in your normal command prompt or terminal on mac or linux you might need to add sudo

02:22.420 --> 02:27.670
in front of this to get the right permissions and this will now globally install do you react native

02:27.670 --> 02:28.050
Seelye.

02:28.060 --> 02:32.860
For Dad you also need node j s installed because it is uses NPM which is no its package manager.

02:32.860 --> 02:34.450
So make sure you have that as well.

02:35.540 --> 02:38.330
Now with the react native seal I installed.

02:38.330 --> 02:44.990
We can start creating a project totally without expo in 4 dead I'll create a brand new project and I

02:44.990 --> 02:49.110
selected a folder for that by running react native in it.

02:49.130 --> 02:53.120
And now any name of your choice for example are n

02:56.120 --> 02:59.950
without expo for the name it's important that it's written like this.

02:59.990 --> 03:03.380
No dashes or underscores in there but just one word.

03:03.890 --> 03:08.780
So our end without Expo the name all choose and this will now create a brand new react native project

03:08.810 --> 03:14.450
using the react native Seelye in this place where you ran this command and it will give you this new

03:14.450 --> 03:16.870
folder which contains this new rec native project.

03:16.970 --> 03:18.260
Now important again.

03:18.260 --> 03:24.800
You now need to have Android stood you and X code installed and configured as mentioned in the official

03:24.800 --> 03:25.690
docs here.

03:25.700 --> 03:28.520
Otherwise what I'm about to show you will now not work.

03:28.520 --> 03:34.100
You need that installed because now these tools will be leveraged Spidey react native seal to build

03:34.100 --> 03:40.820
and run your app all those spin ups some emulators or simulators can be the same ones used before in

03:40.820 --> 03:46.060
the course but you need to have those running so that we can see our running react native app there.

03:46.560 --> 03:52.830
So now let's wait for it is setup to finish here and once this is done and this process can take a while

03:52.860 --> 03:59.900
you can follow the instructions here too and then run your app let me navigate into this newly created

03:59.900 --> 04:00.560
folder here.

04:01.640 --> 04:04.670
And run react native run.

04:04.750 --> 04:12.260
IOW for example to run it on the Iaw simulator which I got now this behind the scenes uses x code to

04:12.260 --> 04:13.070
built this app.

04:13.070 --> 04:19.180
It does not use Expo anymore you could uninstall the expo client here you can uninstall the Expos Seelye

04:19.220 --> 04:20.390
from your system.

04:20.390 --> 04:26.510
This does not leverage expo at all it just uses x code behind the scenes to build your app.

04:26.540 --> 04:33.020
So does native Apple development tool sleds await for this bill to finish and the first time you built

04:33.020 --> 04:33.260
this.

04:33.260 --> 04:34.260
This takes a bit longer.

04:34.280 --> 04:38.960
Subsequent rebuilds will be faster so let's wait for this to finish.

04:39.870 --> 04:43.980
Now for all this build process a new tab will be opened or a new window in your terminal.

04:43.980 --> 04:47.430
Keep that process running and also keep the build process running of course.

04:47.430 --> 04:48.080
Don't quit this.

04:48.090 --> 04:53.610
So keep both these processes up and running here and now it is install the app on the.

04:53.610 --> 04:58.650
In this case simulator if you had a real device connected it would install it there and it launches

04:58.650 --> 05:00.490
the app there and therefore here.

05:00.580 --> 05:03.060
They actually created a new simulator here for me.

05:03.090 --> 05:07.830
Doesn't matter though it now launches the app here in this simulator again for the first launched is

05:07.830 --> 05:14.030
now download steam built app on this device basically and you have some nice development features there

05:14.030 --> 05:18.270
to remote debugging can be enabled so you've got all these nice features in here as well.

05:18.300 --> 05:22.750
That's not Expo exclusive at this first launch will take a bit longer as mentioned.

05:22.770 --> 05:30.220
So let's wait for this download to finish here so that the app does launch and here it's coming up not

05:30.250 --> 05:32.410
the exact start screen you're seeing here.

05:32.500 --> 05:37.450
That might differ over time because that's just the starting code you get in the project which will

05:37.450 --> 05:43.990
have a look at in a second but this is now the app a native app without Expo otherwise the same running

05:44.080 --> 05:50.740
on ISIS guess we can also run it on Android and for dead this process which now finished can be cleared.

05:50.740 --> 05:52.330
The other ones should be kept running.

05:52.330 --> 05:57.360
That's your development server that talks to the bison which watches for file changes and pushes new

05:57.360 --> 05:58.270
code to the device.

05:58.270 --> 06:03.250
So what you know from expo that works here as well so keep the other process running but now we can

06:03.250 --> 06:10.300
also run React Native run Android to also built the app for Android and leverage that same server to

06:10.300 --> 06:16.260
then also build and push the Android app to the android emulator and then see that as well.

06:16.270 --> 06:17.950
So let's wait for this to finish.

06:17.950 --> 06:22.850
Again this first build will take longer as subsequent reloads will be much faster.

06:22.930 --> 06:28.150
This build process now leverages Android Studio which you all need to have installed and configured

06:28.330 --> 06:34.130
as described in the official box and therefore it is not all of course works totally without Expo it

06:34.140 --> 06:37.190
just uses Android Studio.

06:37.370 --> 06:44.030
Now this all launches the Android app here on my android emulator justice before this initial launch

06:44.030 --> 06:45.470
can can take a short while.

06:45.470 --> 06:48.600
Now it's connecting to those development server what you deal for here of course.

06:48.710 --> 06:53.900
All this should keep on running not only wants to builds this bundle but all the time so that up on

06:53.900 --> 06:59.180
changes in your files you get a life rebuild and once this is done let's see the finished app run on

06:59.180 --> 07:00.530
Android.

07:00.530 --> 07:03.500
Now let's have a look at the code that is responsible for that.

07:03.500 --> 07:07.420
Does Dad now look totally different than what we saw thus far.

07:07.550 --> 07:12.620
For that I loaded the project here again with visual pseudocode so the same set up as before and what

07:12.620 --> 07:18.140
you see looks a bit different but mostly we have a bunch of different configuration files.

07:18.140 --> 07:22.040
Fair enough but that doesn't really change the way we write our code.

07:22.130 --> 07:24.960
Very important we got an android and an ISIS folder.

07:24.980 --> 07:26.320
We didn't have that before.

07:26.360 --> 07:31.270
Those folders and on windows by the way Linux you don't have IOW you only have Android there.

07:31.460 --> 07:36.740
But those folders contained a real native app projects which are built with the help of Android Studio

07:36.740 --> 07:40.570
and ex code and your code gets kind of built into that.

07:40.570 --> 07:45.710
You could say react native does all that for you the wrecked native sea lion process but if we have

07:45.710 --> 07:51.230
a look at the concrete code in the app chips fall well that is just what we used in this course.

07:51.230 --> 07:58.430
Right there we have a couple of imports and some additional lending which is showing you some some warnings

07:58.430 --> 08:00.180
here regarding the code style.

08:00.230 --> 08:04.160
These are not actual errors just that I should use double quotes instead of single quotes.

08:04.170 --> 08:08.570
Yeah some recommendation I don't care about here but if you have a look at what's getting imported here

08:08.630 --> 08:13.560
react save area of use style sheet scroll view a view text.

08:13.700 --> 08:18.520
These are all things we already worked with so we have the normal components we already worked with.

08:18.710 --> 08:26.690
And of course we do because what I said brought this chorus react native is react native expo is a thin

08:26.690 --> 08:27.780
wrapper around it.

08:27.860 --> 08:34.580
We write the same code we use the same components they get compiled to native widgets that all does

08:34.580 --> 08:36.920
not change when we use Expo.

08:36.920 --> 08:41.360
The only difference is that with Expo we don't have to set up as much.

08:41.390 --> 08:48.220
The build is a bit faster and adding native modules is super easy testing on real devices is super easy.

08:48.230 --> 08:49.580
It's simply easier.

08:49.580 --> 08:54.110
We built the app in the same way though and that's something you can see here as well.

08:54.110 --> 08:56.920
Styles are set up in the same way with Styles he'd create.

08:56.990 --> 09:00.530
That's all just as we did throughout this course.

09:01.570 --> 09:02.960
And that's important for you.

09:03.020 --> 09:05.870
Now one extra thing you'll find here is the index chains fall.

09:05.870 --> 09:11.780
We didn't have dad an expo that kind of us the basic configuration file that launches your app you could

09:11.780 --> 09:16.150
say that makes sure that this app component gets rendered to the screen.

09:16.160 --> 09:22.160
That's something Expo did for you in the react native Expo app but other than that it's really just

09:22.160 --> 09:24.460
the same and you would build an app in the same way.
