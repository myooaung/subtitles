WEBVTT

00:02.140 --> 00:06.450
Brought this cause we built React Native apps and I really want to emphasize this.

00:06.490 --> 00:12.480
We built React Native apps but we built them with a tool called Expo and as you saw overall it this

00:12.490 --> 00:17.530
cause Expo mostly get out of our way but it made building these apps way simpler.

00:17.530 --> 00:23.530
The setup process is simple you can test it on your real device without any special configuration that

00:23.530 --> 00:31.060
you can easily add native modules and you have a huge catalog of built in native modules Enzo Enzo developing

00:31.060 --> 00:36.970
React Native apps with the UP of Expo is really easy and therefore my recommended way of doing it now

00:36.980 --> 00:41.090
there can be reasons why you might want to build an app without excel.

00:41.260 --> 00:47.530
For one you must not forget that expo of course works such that you have the expo client on your real

00:47.530 --> 00:52.480
device or although any simulator of course there we all in the end installed the expo lines though this

00:52.570 --> 00:59.890
app on the device and your app kind of gets loaded into that Clyde now you still will be able to publish

00:59.890 --> 01:05.260
a standalone app as you learn so you can still publish your app which you upload to the app stores where

01:05.260 --> 01:10.780
people don't need to install declined but this published app will in the end kind of include dead app

01:10.780 --> 01:17.500
wrapper so it will be a standalone app where people don't need to install the expo client app but the

01:17.500 --> 01:19.980
expo client app is part of your app you could say.

01:19.990 --> 01:23.270
So people indirectly install it if that makes sense.

01:23.320 --> 01:27.880
So you'll always have his wrapper in there for one reason for not using X but could be dead you want

01:27.880 --> 01:32.980
to get rid of that wrapper because as you might imagine this wrapper while still giving you a native

01:32.980 --> 01:38.230
app and while still giving you the benefits of your view is being compiled to native use while it's

01:38.230 --> 01:44.060
all of that is the case does a wrapper of course as a little bit of size to your app your app gets bigger.

01:44.110 --> 01:47.460
It probably also gets a bit slower because of that extra wrapper though.

01:47.500 --> 01:50.620
I still want to emphasize you get a native comp. app right.

01:50.620 --> 01:54.710
Your views still are compiled to native code so you don't lose that.

01:54.730 --> 02:00.300
It's not like ionic where you have like ionic use a native app as a wrapper for a web app.

02:00.310 --> 02:01.950
That's not what's happening here.

02:01.960 --> 02:03.450
Still you have that overhead.

02:03.460 --> 02:10.240
So one reason for not using Expo might be that you want to get rid of that extra wrapper and no reason

02:10.240 --> 02:16.000
could be that you need some native device functionality outside of what we used in the native feature

02:16.000 --> 02:18.580
module that isn't included in expo.

02:18.580 --> 02:24.580
So as some feature which you just can't add with the help of Expo and then you're stuck if you need

02:24.580 --> 02:28.210
some feature that's not part of expos of which you can find here.

02:28.330 --> 02:33.580
Then you can't add it to a react native app built with expo there's no way for that you can't write

02:33.580 --> 02:39.070
your own native code and connected and you can't bring other third party packages which tap into a native

02:39.070 --> 02:41.680
device features that's not supported at Expo.

02:41.770 --> 02:46.420
So these could be two reasons for why you want to switch away you want to get rid of that wrapper because

02:46.480 --> 02:53.350
every millisecond of performance matters to you and every kilobytes of size matters you or because of

02:53.710 --> 02:55.420
a native feature that's missing.

02:55.420 --> 03:01.120
Now I will emphasize for most apps both reasons probably don't apply because we're not talking about

03:01.120 --> 03:03.070
a huge performance hit.

03:03.070 --> 03:09.700
We're not talking about a super huge app what you would be getting indeed is very lean but still that

03:09.700 --> 03:11.250
might be a thing for some apps.

03:11.290 --> 03:15.850
And the thing with the native modules which might be missing there is so many included.

03:15.880 --> 03:21.580
Chances are that you can built the app you want to build with what's included but in case something

03:21.580 --> 03:26.440
is missing you can of course all the builder react native app and we can find that on the official docs

03:26.440 --> 03:28.210
too without Expo.

03:28.210 --> 03:30.120
Now let me dive into the alternatives you have.
