WEBVTT

00:02.870 --> 00:05.800
So we added react native debugger, an amazing tool

00:05.840 --> 00:08.620
and we already can dive deeply into our app with it.

00:08.810 --> 00:13.720
Now I also want to be able to inspect redux here and it's super easy to do,

00:13.910 --> 00:20.240
you can go back to the react native debugger page and there, you'll find explanations on how to add

00:20.300 --> 00:26.190
the redux dev tools, super simple. If you enable debug.js remotely,

00:26.330 --> 00:37.040
you already can include these things here in your redux store connection set up to also hook in the

00:37.040 --> 00:38.540
redux dev tools.

00:38.540 --> 00:39.860
Now it's really easy to do,

00:39.860 --> 00:41.850
let me show you how it works.

00:41.900 --> 00:47.890
Let's go back in our project and then the configure store file where we well do configure our store.

00:47.910 --> 00:52.080
Right now we create a simple store which just gets a reducer but 

00:52.100 --> 00:55.770
as you probably know, your store can also get some middleware

00:55.940 --> 01:01.220
and later in the course we will add middleware. To already prepare our whole set up to be able to handle

01:01.250 --> 01:07.950
middleware and the redux dev tools, I'll use the best possible set up we can use for that. For this,

01:07.970 --> 01:13.930
I'll first of all import one other tool or function to be precise from the redux package,

01:13.970 --> 01:23.730
it's called compose and we can use this to basically add multiple middlewares to our store.

01:23.730 --> 01:31.860
Now what I will do is I will add a new constant here and I'll name it compose enhancers,

01:31.860 --> 01:40.350
the idea is that we can either just use the built-in compose function to add middleware to our store

01:40.350 --> 01:45.320
or that we can use the one we get from the dev tools here,

01:45.360 --> 01:52.560
this compose function which is basically an abstraction of this compose function which also includes the dev

01:52.560 --> 01:56.190
tools which of course need to be able to hook into redux,

01:56.280 --> 02:00.150
that's why they're as deeply baked into it.

02:00.210 --> 02:10.080
So here we want to use that and to use it, we can use a simple approach where we first of all turn this

02:10.080 --> 02:15.900
into a let to be able to reassign it and simply set it equal to compose,

02:15.900 --> 02:21.690
so just to the compose function, we don't gain much by that but then I'll add an if check and I check if

02:22.020 --> 02:23.070
dev,

02:23.280 --> 02:29.400
that's a special global variable exposed to you by react native which is only true if you're in development

02:29.400 --> 02:30.900
mode. In this mode,

02:30.900 --> 02:33.390
I also want to connect the redux dev tools,

02:33.390 --> 02:38.850
I don't want to do this in production because I don't want to bloat the bundle unnecessarily and possibly

02:38.850 --> 02:40.510
even slow it down.

02:40.710 --> 02:50.020
If we're in dev mode, I try to set compose enhancers equal to window redux dev tools extension compose

02:52.400 --> 02:58.560
or just to compose, in case we can't fetch this because for some reason we don't have our debugger connected,

02:58.560 --> 03:02.630
then it should fail but fall back to the normal compose function.

03:02.630 --> 03:10.260
So now compose enhancers is either the normal compose function in production mode or in development mode,

03:10.280 --> 03:17.090
it tries to get the one exposed by the react native debugging tools which is simply the compose function

03:17.120 --> 03:23.630
plus the redux dev tools or if that fails, it still uses the normal one.

03:23.630 --> 03:31.190
Now when we create our store, we have to create that store with the usage of compose enhancers,

03:31.190 --> 03:38.960
so there I'll add compose enhancers, like this and to this function, we can then pass apply middleware

03:39.170 --> 03:42.280
and apply whichever middleware we want to add.

03:42.340 --> 03:47.660
This is needed because the redux dev tools are not a middleware but another so-called enhancer,

03:47.780 --> 03:49.990
middleware is a different type of enhancer,

03:50.030 --> 03:56.750
so we need compose enhancers to well add multiple enhancers is one, a little bit like we use combined

03:56.750 --> 04:02.000
reducer to combine multiple reducers to one. Here I don't pass any argument because I don't have any

04:02.000 --> 04:02.770
other middlewares

04:02.900 --> 04:07.870
but once we got more middleware, which we'll have later in the course, then this is really useful.

04:08.150 --> 04:11.090
And that's all, with that redux dev tools are connected,

04:11.090 --> 04:13.000
make sure to save all files.

04:13.310 --> 04:17.720
And now if you reload your application, your dev tools should be connected,

04:17.780 --> 04:21.740
you should see the init action being dispatched.

04:21.740 --> 04:28.070
And if I now add Munich, we indeed see add place and now we can inspect this as we always can in the

04:28.070 --> 04:32.370
redux dev tools, you can search for redux dev tools if you want to learn more about them.

04:32.480 --> 04:39.950
We can have a look at our action, add a state after this action, how this action changed our state,

04:39.950 --> 04:42.440
what this action look like,

04:42.440 --> 04:46.310
we can dispatch a new action by clicking on a place and selecting it,

04:46.400 --> 04:50.910
you see that this changed selected place from null to our place,

04:51.050 --> 04:54.400
we can delete it, now we dispatch delete action here too

04:54.770 --> 04:55.430
and so on,

04:55.430 --> 04:58.240
we can do whatever we like here,

04:58.280 --> 05:01.520
we can work with this with redux now.

05:01.520 --> 05:03.010
So this is great,

05:03.020 --> 05:10.400
now we really have advanced debugging capabilities here because now, we can set breakpoints,

05:10.430 --> 05:11.900
use console log,

05:12.080 --> 05:16.830
dive into our component hierarchy and also have a look at redux.

05:17.000 --> 05:18.610
What else could you wish for?
