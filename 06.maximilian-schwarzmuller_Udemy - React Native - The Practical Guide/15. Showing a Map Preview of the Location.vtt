WEBVTT

00:02.340 --> 00:07.350
So now I also want to display a little map preview here and there are different ways of doing that of

00:07.350 --> 00:11.000
course and later will also add interactive map to this app.

00:11.010 --> 00:12.970
For now it just won't have a static image.

00:12.960 --> 00:19.570
So like a map snapshot and the cool thing is Google has an API for us which generates such snapshots.

00:19.620 --> 00:24.810
You can google for Google Maps static API to find the official documentation where you can learn all

00:24.810 --> 00:26.010
about that of course.

00:26.190 --> 00:29.340
And in the end using that API is super super straightforward.

00:29.400 --> 00:35.820
You just need to send the request to this you are L and this already gives you back an image so you

00:35.820 --> 00:40.650
can just use this link in on an image component and you're good.

00:40.650 --> 00:46.740
The only tricky thing here is this API key thing there you need your API credentials and for that you

00:46.740 --> 00:49.300
need an API key.

00:49.410 --> 00:55.590
Now for this you can just click on your API key here and generate one and now you can select a project

00:55.590 --> 00:59.660
which you already have or you create a new project for Dad.

00:59.670 --> 01:05.220
You need to cancel here and instead scroll down a bit further to this.

01:05.250 --> 01:10.110
Getting Started activate the API apart here and click on get started here.

01:10.110 --> 01:15.840
Now once you do that you're taking to the Google Maps platform console where you can now and able the

01:15.840 --> 01:21.930
different Google Maps features you want to use and here I'm interested in maps which will later help

01:21.930 --> 01:29.590
us use this interactive dynamic app on Android and I'm interested in places.

01:29.670 --> 01:31.420
So these two things should be checked.

01:31.470 --> 01:36.430
We don't need to roots because we're not building any navigation features here with that we can click

01:36.430 --> 01:40.600
on continuous like the project and now you will use like the existing project or simply create a new

01:40.600 --> 01:45.820
one and all trade and you won't hear a name and react a complete guide but you can named whatever you

01:45.820 --> 01:47.560
want click next year

01:50.460 --> 01:53.370
and wait for this to be generated.

01:53.370 --> 01:57.320
This should be relatively fast and now we're worried about pricing Wildstar.

01:57.360 --> 01:58.680
This is loading.

01:58.770 --> 02:02.970
You can generally use this for free but you need a billing account.

02:02.970 --> 02:04.740
That's what I'm getting ask for here.

02:04.770 --> 02:06.080
You need a Google account of course.

02:06.150 --> 02:09.930
And on this Google account you need to have a credit card in order to use it.

02:09.930 --> 02:13.570
Otherwise you can't use that unfortunately it is what it is.

02:13.590 --> 02:15.180
So you need a credit card.

02:15.180 --> 02:19.590
You need to have a billion account set up in your Google account and then you can use this locked in

02:19.590 --> 02:26.100
google account for this project which is what I'm doing here with debt enabled.

02:26.160 --> 02:28.550
You still will be able to use that for free.

02:28.550 --> 02:33.570
You got a very generous free tier and attached you find a link to the pricing of the Google Maps platform

02:33.810 --> 02:39.540
and only if you breach certain limits which will not breach for a little usage which we have here in

02:39.540 --> 02:43.200
these videos only if you would breach these limits you would pay.

02:43.200 --> 02:47.520
Now would still be aware that there can be a point where you need to pay and that it depends on how

02:47.520 --> 02:52.340
much you use the API and therefore definitely check out the pricing docs.

02:52.380 --> 02:57.190
Now here I got this all enabled now and I'm just finishing this up.

02:57.300 --> 03:03.160
And by the end you should be presented with an API key which of course all invalidate after these recordings.

03:03.180 --> 03:06.440
So you can use mine but you should take yours instead.

03:06.460 --> 03:11.610
Now this is the API key which you need to insert here into this you are L.

03:11.670 --> 03:18.150
So now I'll just copy this entire you are L here and moved it over into our code and there.

03:18.210 --> 03:23.790
I now want your output image here which points out that you are L because as I mentioned this is how

03:23.790 --> 03:27.900
you can get this image as you are L returns a image.

03:27.900 --> 03:33.390
Now what I'll do therefore is all create a new component here which I'll name map preview J.S. because

03:33.390 --> 03:39.090
I'll also use it in another place of the app later where I import react from react where I then import

03:39.180 --> 03:44.890
image and style sheet from React Native like this

03:47.620 --> 03:55.180
then here I'll create my map preview component which receives props of course unsurprisingly which needs

03:55.180 --> 04:02.310
to return some J is X later and set up some styles here with stylish she'd create

04:04.970 --> 04:11.600
and of course also export this map preview component.

04:12.050 --> 04:16.430
Now in the here I want to generate this you are L which I just talked about so here D.

04:17.660 --> 04:26.870
Image preview you are l should be generated and that can be done by using back tax here so that I can

04:26.900 --> 04:32.540
add dynamic content into the text easily and then copy in that you are all you just copied from the

04:32.540 --> 04:34.110
documentation here.

04:34.190 --> 04:37.790
Make sure it's all in one line because by default it's not.

04:37.790 --> 04:40.360
So make sure it's all in one line.

04:40.370 --> 04:42.460
Otherwise this won't work.

04:42.460 --> 04:44.590
And of course there are a couple of segments you need to replace.

04:44.600 --> 04:50.210
For example here the center equals part but default this points at the Brooklyn Bridge and you can enter

04:50.270 --> 04:55.100
addresses here but you can also enter latitude longitude pairs here.

04:55.100 --> 05:01.820
So we'll all do here is all dynamically add two pieces of information here separated by a comma and

05:01.820 --> 05:04.090
the first thing is the latitude here.

05:04.100 --> 05:06.680
I expect to get this on my props.

05:06.680 --> 05:12.100
I expect to get a location prop and of course this can be any prop name of your choice which generally

05:12.110 --> 05:20.600
have a lat key and here I want to have a long key LNG key as well so that will be the latitude and longitude

05:20.660 --> 05:21.610
of the location.

05:21.620 --> 05:27.130
I want to preview now and assume factor all that is to 14.

05:27.200 --> 05:33.110
You can experiment with different factors does influences basically how far to map assumed in or out.

05:33.170 --> 05:36.350
You can also play around with your with your size here.

05:36.360 --> 05:42.230
Now since I will have a map preview container that I'll typically use with a height of two hundred I'll

05:42.230 --> 05:48.520
set the high to 200 here and I will set the width therefore to 400 here.

05:48.740 --> 05:55.640
Of course you can use a bigger size here than you'll use for the container to display the image later.

05:55.640 --> 06:01.610
Just be aware that if you are fetching a super large image here it will of course be too large.

06:01.610 --> 06:06.290
Too much data to download it will load slower and you might not need that.

06:06.350 --> 06:12.260
So you should aim for a size of the map image here which kind of fits to container where you want to

06:12.260 --> 06:18.740
display it doesn't have to be the exact same size but roughly no map type is how the map should be displayed.

06:18.740 --> 06:23.990
You could use satellite here but I'll stick to the standard road map and now you can also add markers

06:23.990 --> 06:24.870
to that map.

06:24.950 --> 06:27.840
Now there are a couple of markers set up in this dummy snippet.

06:28.040 --> 06:34.700
I'll get rid of all of them but one so that I just have markers here.

06:34.700 --> 06:35.600
Color red.

06:35.630 --> 06:37.220
A label of a.

06:37.220 --> 06:42.890
This can be a single character here like ABC and then the latitude and longitude where this marker should

06:42.890 --> 06:46.440
be placed and of course that's again prop start location.

06:46.490 --> 06:53.960
Let then here a comma and thereafter replace this number with props the location dot LNG.

06:54.470 --> 07:01.500
Placing such a marker is optional but of course I want to show the user where this is.

07:01.740 --> 07:09.360
Now I need the API key so I'll copy this key which was generated here and replace this here.

07:09.480 --> 07:14.610
Now I can't paste it in like this but actually I want to manage it isn't a separate file because I will

07:14.610 --> 07:18.490
use that API key in other places of the app as well.

07:18.570 --> 07:24.180
So here all create a new file which will name any of J.S. for environment to set up an environment variables

07:24.870 --> 07:34.970
and they're all set up an object with my Google API key and that should be this value here and then

07:34.970 --> 07:44.820
I can export this and of course the effort that should have a name VARs equals and then export VARs

07:44.820 --> 07:45.980
here.

07:46.050 --> 07:51.000
So with that I can simply import from that end file and that's just what I'll do here.

07:51.000 --> 08:02.300
Import env from the end file here and that just stands for environment variables as I said and now dynamically

08:02.300 --> 08:03.110
inject this here.

08:03.110 --> 08:07.670
So now we have one place where we can change that key and where we can also then imported from and all

08:07.670 --> 08:09.550
the different places of our app.

08:09.590 --> 08:14.900
So here all dynamically inject and stored Google API key.

08:15.010 --> 08:17.900
So with that I got the image preview you are all set up.

08:18.100 --> 08:23.550
Now in this component we of course need to return the image preview and that generally is dead.

08:23.560 --> 08:30.250
View I have here in the location pickers all grab it from there and added in the map preview like this

08:31.500 --> 08:35.130
though the fallback content in there.

08:35.130 --> 08:41.790
I actually want to pass dad in from outside so I'll cut this out again and move that back into the location

08:41.790 --> 08:42.420
picker.

08:42.420 --> 08:44.370
However not like this but instead here.

08:45.180 --> 08:53.440
Import this newly added map preview components import that from dots slash map preview.

08:53.480 --> 08:55.910
So this new component we're currently working on.

08:56.030 --> 08:57.960
Add this here.

08:58.220 --> 09:05.240
Map preview and then have this check for his fetching and d indicator and the fallback text in here.

09:05.270 --> 09:12.250
So in map preview I will therefore only have props children in here to output what's added between the

09:12.250 --> 09:15.480
opening and closing tag but that's just a fallback content of course.

09:15.480 --> 09:21.760
I do care about putting the real preview here of for Dad we have to make sure that image preview URL

09:21.820 --> 09:28.190
actually also can be empty in case no place has been chosen yet so create a variable image preview you

09:28.220 --> 09:30.610
or L and just assign a value here.

09:30.610 --> 09:37.990
And I do want to assign a value if prop start location is set because that also cannot be set in case

09:37.990 --> 09:44.980
we haven't picked a location yet and now image preview URL is either empty or it's this you or L depending

09:44.980 --> 09:51.400
on whether we have a location passed in on the location prop and we can now use this down there to output

09:51.400 --> 09:52.220
something.

09:52.220 --> 09:56.020
And by the way since I'm using view here of course we should all to make sure we import.

09:56.020 --> 09:57.640
View.

09:57.870 --> 09:59.290
Now how do I use this you know.

09:59.310 --> 10:02.160
Well if we do have it I want to use it to output an image.

10:02.160 --> 10:06.170
Otherwise all showed us props children fallback content.

10:06.240 --> 10:08.580
So here we can check for props.

10:08.580 --> 10:10.140
Location of death set.

10:10.140 --> 10:12.230
I know I'll have a image you are L as well.

10:12.240 --> 10:18.600
We could of course also just check the image you are ELA existence and if it is a set I'll put an image

10:18.600 --> 10:19.260
here.

10:19.260 --> 10:25.200
If it's not set output props children like this so I'll put my fallback content.

10:26.110 --> 10:29.960
No the image here will receive some styling map.

10:30.040 --> 10:39.650
Image and a source and the source here takes a you are eye which points at image preview URL because

10:39.650 --> 10:42.010
that will be a network you are and network image right.

10:43.000 --> 10:46.330
So now let's just bring over to styles from the location picker.

10:46.390 --> 10:54.520
I can take a map preview but I only want to bring over to justify content part and actually pass in

10:54.520 --> 11:01.390
the rest and manual here and merge it's all still pass and styles of map preview from inset my location

11:01.390 --> 11:07.300
picker and in the map preview I now want to merged as with my styles I'm setting up here so here I'll

11:07.300 --> 11:13.270
actually wrapped as into an object where I pull out all the styles setup and map preview in here and

11:13.270 --> 11:19.240
merge in all styles set up on this style prop so that we can get cells from outside as well and merged

11:19.240 --> 11:26.980
and with our internal cells and now 40 internal styles on the map preview as I just said I'll have justified

11:26.980 --> 11:29.050
content and a line items in here.

11:29.200 --> 11:30.850
And for the image itself.

11:30.910 --> 11:37.020
So for the map image there I want to set this to take all the available width and height it can get

11:37.040 --> 11:41.410
and we need to set this because it's a network image as you learned for those you need to set the width

11:41.410 --> 11:43.040
and height of the image component.

11:44.710 --> 11:51.040
Now with that we have the map preview component which you were displaced as map image or our fallback

11:51.040 --> 11:53.690
content which is passed in from outside.

11:53.920 --> 11:57.640
And it does so by checking the location prop.

11:57.640 --> 12:02.950
So in the place where we use the map preview component which of course is the location picker we need

12:02.950 --> 12:07.330
to pass in this location prop and the location prop.

12:07.330 --> 12:15.190
If we check the map preview Indian has to be an object with a latitude and longitude or a lat and LNG

12:15.190 --> 12:19.840
key so therefore back in location picture.

12:19.910 --> 12:25.610
I want to pass in such a prop here and indeed that's exactly what we manage here with the pick location

12:25.610 --> 12:32.870
which is of course no coincidence that is an object with latitude and longitude or it's undefined initially

12:33.050 --> 12:36.300
and we do handle this case and the map preview component as well.

12:36.410 --> 12:41.060
If it's undefined we just showed a fallback content which is passed in from outside.

12:41.060 --> 12:46.880
So to location we can just pass and the picked location with Dad we should now have a setup where we

12:46.880 --> 12:50.150
actually are able to see a preview of the place.

12:50.630 --> 12:52.490
So now here we see the fallback content.

12:52.520 --> 12:59.120
But if I now click on get user location we see the spinner and then we see a real snapshot of the place

12:59.150 --> 13:00.010
we picked.

13:00.080 --> 13:02.180
As I mentioned this is not where I am sitting right now.

13:02.180 --> 13:05.930
This is just some dummy place the emulator it gives us the same on Android.

13:05.930 --> 13:08.370
If I take a location here.

13:08.370 --> 13:12.140
Now this is actually the Google headquarters which are selected by default there.

13:12.880 --> 13:17.370
So this works now as a next step.

13:17.410 --> 13:22.570
I want to make sure that we can also pick this place on a map instead of just locating us.
