WEBVTT

00:02.260 --> 00:08.000
Now we have to card look now as a next thing let's fix the buttons and that's something I already showed

00:08.000 --> 00:08.270
you.

00:08.300 --> 00:11.860
So definitely your chance to positive video and do it on your own.

00:11.870 --> 00:16.430
I want to make sure that the buttons have the equal size they shouldn't take the full away level with

00:16.760 --> 00:22.070
but they should have an equal size which makes sure that the text fits in there and well that they're

00:22.280 --> 00:22.990
equally sized.

00:23.000 --> 00:30.020
So your chance to pass the video there after we'll do this together where are you successful.

00:30.020 --> 00:35.480
Let's make sure the buttons have the same size and for this in the start game screen where I have the

00:35.480 --> 00:43.070
buttons you learn that the solution is to wrap the buttons in a view so you have to add your own view

00:43.220 --> 00:45.200
component around the buttons.

00:45.200 --> 00:52.670
And now you can assign a style to these buttons so to both buttons here and I'll use a button object

00:52.670 --> 00:55.190
in my styles object down there.

00:55.370 --> 01:02.730
So let's add a button here and simply give that a width and here a without shoes is let's say 80.

01:02.750 --> 01:09.050
Let's see what this looks like if I save this a bit too small as it seems since there is a line break

01:09.260 --> 01:10.370
in this button.

01:10.370 --> 01:16.890
So let's go with one hundred and twenty now that's certainly too much.

01:16.920 --> 01:22.510
So how about 100 and that looks pretty neat to me.

01:22.530 --> 01:26.790
Now in addition and that was not a task for a user no worries if you didn't do that.

01:26.910 --> 01:31.840
I want to change their colors and one of the colors should be our main color.

01:31.950 --> 01:37.590
And I also want to set up some some accent and some secondary colors so to say which we can use

01:40.450 --> 01:46.810
so for that back in the start game screen component on the button itself there is a color prop which

01:46.810 --> 01:48.530
you can set to control the color.

01:48.550 --> 01:54.460
And for Android that's the background color for ISIS that will be the text color and now the reset button

01:54.780 --> 01:55.110
there.

01:55.120 --> 02:00.250
I want to set up a color of hash 7 1 7 FC.

02:00.340 --> 02:02.170
That's a nice color I think.

02:02.170 --> 02:08.170
And for the main button the confirm button I'll use my main theme and I want to use the same color I

02:08.170 --> 02:09.370
used in the header.

02:09.370 --> 02:12.960
So there I have this Hex code used as a background color.

02:13.030 --> 02:19.090
I'll use the same color here for this second button though was dead we can save this and now we got

02:19.210 --> 02:24.050
these two button colors here which shall looks quite nice in my opinion.

02:24.070 --> 02:30.660
Now one downside of this approach or one thing we can improve is that I'm using this hex code here I'm

02:30.670 --> 02:34.080
using it in the header and chances are dead later in the app.

02:34.090 --> 02:37.330
We want to use the same color in other places too.

02:37.330 --> 02:41.380
So would be nice if we could set this up as kind of of a theme.

02:41.380 --> 02:48.340
You could say that we could easily use these colors without copying hex codes across our app and then

02:48.340 --> 02:53.350
we can also change the color in one place if we ever want to use a different color and we don't have

02:53.350 --> 02:55.980
to do that in dozens of components.

02:56.080 --> 03:01.830
And for that I'll use a approach where I'll add a new folder on the root level and I'll name it Constance

03:01.840 --> 03:05.440
and as always you can name these folders whatever you want.

03:05.440 --> 03:11.640
And then there I want to have a colors J.S. file again his name can also be named whatever you want

03:11.670 --> 03:19.020
because what this file will do is it will export a default javascript object will export of javascript

03:19.050 --> 03:26.760
object and in there you can have any key value pairs you want and all set up a primary color.

03:26.820 --> 03:32.790
So just primary as a key name and this should be this hex code which I just copied so does header color

03:32.790 --> 03:37.230
also and accent or a secondary whatever you want to name it.

03:37.230 --> 03:42.330
I'll go with accent color and that should be does Amber color which I used on the first button.

03:42.330 --> 03:47.070
So this hex code here I'll use Dad in here.

03:47.070 --> 03:52.920
Now these colors are defined here and we can now simply import them from this file and whenever we change

03:52.920 --> 03:58.700
them here they're changing everywhere in his application and we can every easily swap this during development.

03:58.740 --> 04:07.800
So now in a start game screen we can just go ahead and import colors from constants colors like this.

04:08.050 --> 04:15.720
And I gave it as a capital C here to kind of indicate that this is a collection of of values.

04:15.730 --> 04:16.900
You can name whatever you want.

04:16.900 --> 04:20.530
You can also use a lowercase c that naming doesn't matter.

04:20.590 --> 04:23.980
And now you can use colors here to assign your well colors.

04:24.010 --> 04:31.570
So for it is reset button will now use at the naming values so that we can reach out to colors dot accent

04:32.050 --> 04:39.080
and here for the main button for to confirm button I'll go with colors dot primary and the same in the

04:39.080 --> 04:44.630
header they are of course we now all want to use that color and not hardcoded in here.

04:45.020 --> 04:52.180
Instead import colors from constants constants colors.

04:52.370 --> 04:57.680
And with that imported You can also use that in the style sheet not just in J as x you can use it anywhere

04:57.680 --> 04:59.420
in that file after all.

04:59.420 --> 05:05.680
So now here all refer to colors dot primary and if you save that again we have the same look as before

05:05.720 --> 05:13.460
but yet again in a never more elegant way where if you ever decide that your accent color should not

05:13.460 --> 05:19.790
be this color but should be blue you just swap it here your app is rebuilt and you have a blue button.

05:19.910 --> 05:26.630
So that is the huge advantage of managing your colors or other core constants in such files you could

05:26.630 --> 05:34.910
have a number of file named text for example where you have some core fund sizes or another file spacing

05:34.940 --> 05:41.000
where you stored default values for margins or padding so that you don't manually have to use the same

05:41.000 --> 05:42.550
values over and over again.

05:42.620 --> 05:47.690
These are all approaches you can use to make your life as a developer easier and to have code where

05:47.690 --> 05:50.900
you can quickly swap values if you need to.

05:50.990 --> 05:56.360
For now I'll just manage my colors in there because that's one of the things that is most annoying to

05:56.360 --> 06:01.490
copy around and it's a really great approach to offer to manage it in such a file.
