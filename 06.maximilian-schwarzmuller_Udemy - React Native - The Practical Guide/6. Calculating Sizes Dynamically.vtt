WEBVTT

00:02.830 --> 00:08.740
Now we had another issue issued this app here because once this is all solved here if we quickly go

00:08.740 --> 00:12.200
there make sure that we solve this.

00:12.220 --> 00:16.120
Then we have this screen and this screen also is broken.

00:16.120 --> 00:17.670
We got two issues here actually.

00:17.680 --> 00:22.810
One is that the screen is the scroll label which wasn't a problem on bigger devices where we have more

00:22.810 --> 00:23.190
height.

00:23.200 --> 00:29.050
But here we can squeeze all the content on the screen so we might want to make it scroll just to be

00:29.050 --> 00:36.640
safe and or alternatively we make sure that we're guaranteed to fit everything onto the screen and to

00:36.640 --> 00:43.270
be guaranteed that this is the case we need to go to the game over screen and calculate our heights

00:43.270 --> 00:50.230
here dynamically especially the image height here which were right now hard coding 2 300 pixels which

00:50.230 --> 00:52.810
is way too big on the small device.

00:52.810 --> 00:55.950
Now you already learned about the solution for that.

00:56.050 --> 01:02.880
We can't again use these dimensions API by importing it from React Native and with dimensions imported.

01:02.890 --> 01:11.430
We can go down to our style sheet and on the image container we can now say dimensions get window width

01:12.150 --> 01:21.590
and now let's say for the image container for the image here we want to have a width of maybe 70 percent

01:21.590 --> 01:24.860
of the available width and we wanted to have the same value as a height.

01:24.860 --> 01:25.920
So I'll just copy that.

01:25.920 --> 01:32.180
It's important here we don't use height because the image shouldn't be 70 percent of our available height

01:32.480 --> 01:32.960
high.

01:33.200 --> 01:38.390
Instead it should just have the same height as it has width and that's calculated on the device width

01:38.420 --> 01:45.260
so we use with down there as well now here border radius should be half of that so we can use that here

01:45.380 --> 01:50.840
too and then divide it by two and we'll have the perfect border radius for added dynamically calculated

01:50.900 --> 01:54.170
width so that's one important thing.

01:54.200 --> 01:59.030
Now we also got a couple of other sizes we're setting up like the margin vertical here which we hard

01:59.030 --> 02:07.600
code to 30 the same for the result container and we might want to change this as well so here we can

02:07.600 --> 02:11.380
also say dimensions get window.

02:11.380 --> 02:21.010
In this case height and maybe divide this by let's say 20 and see if that looks good and also down there

02:21.040 --> 02:26.720
margin vertical maybe divide this by 40 because it was 15 before this will 30.

02:26.740 --> 02:31.960
So let's add the White this by 40 if we divide it this by twenty two if the same to have the same relation

02:31.960 --> 02:34.370
between these two margin verticals again.

02:34.510 --> 02:35.980
So let's solve this again.

02:36.010 --> 02:41.150
Let's see what the result is better.

02:41.180 --> 02:44.100
Now at least we can see the button but still not perfect.

02:44.240 --> 02:50.150
This margin here is certainly still too big and also the fun size we could shrink this as well.

02:50.330 --> 02:56.570
So rounder image can certainly divide the height by 30 year for this margin we're setting up and then

02:56.570 --> 03:03.970
go to 60 for this result container vertical margin and for the font size here.

03:04.130 --> 03:13.860
Here we can use if check if we want to add for example check our available height here and if Dad is

03:13.860 --> 03:25.210
let's say smaller than 400 then we use 16 here and otherwise we use 20 now last but not least to all

03:25.210 --> 03:31.310
to make sure that we can scroll because sometimes with all the tweaking will still not be able to fit

03:31.310 --> 03:35.400
it onto the screen at least not without making everything super small.

03:35.510 --> 03:42.990
We might want to import dead scroll view here and wrap our view with that.

03:42.990 --> 03:50.730
So add scroll view here around our view to make that scroll.

03:50.850 --> 03:52.860
Now let's have a look at this again.

03:52.880 --> 03:53.860
Let's solve this

04:03.670 --> 04:10.700
now it looks better it fits onto the screen and if we needed to we would also be able to scroll it can

04:10.700 --> 04:14.090
see that on the iPhone by the way they are if we solve this

04:19.360 --> 04:22.390
on the iPhone we can always scroll a little bit and it bounces back.

04:22.390 --> 04:27.010
We have scrolling enabled and therefore now does looks good on the iPhone but all eyes on this device

04:27.040 --> 04:32.920
where we reduced the font size a little bit worked on the spacing here a little bit and if it would

04:33.070 --> 04:36.420
go beyond our boundaries then we could scroll it.

04:36.520 --> 04:45.760
So we will always be able to interact with our game so that's D dimensions API here and dimensions API

04:45.760 --> 04:52.250
really helps us build user interfaces to look good on different device sizes and as you learn there

04:52.250 --> 04:59.230
are different ways of using it to dynamically calculate sizes speed set for width or height or margins

04:59.440 --> 05:05.710
and also of course in If statements to simply render different content attach different styles or different

05:05.710 --> 05:10.750
style objects based on the width or height conditions you're setting up here.

05:10.750 --> 05:16.180
But that's not all because users might also change the device orientation while the app runs.

05:16.180 --> 05:20.440
And that also sometimes means that we need to change the styling and or layout.
