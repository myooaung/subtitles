WEBVTT

00:02.310 --> 00:10.050
Now before we finish up this module let's go back to some lists and to some scroll label content because

00:10.050 --> 00:12.670
in this application we have no such content at all.

00:12.690 --> 00:18.570
And actually it's crucial for you to understand how to work with lists and what some of the special

00:18.570 --> 00:19.920
quirks are.

00:19.920 --> 00:25.380
When it comes to lists so let's say here we want to lock the previous guest list to computer made you

00:25.380 --> 00:32.060
want to lock that down here below our plus and minus button in this white empty space here.

00:32.310 --> 00:38.910
For Dad we of course need to register any guests made by the computer and then output it in the list.

00:38.910 --> 00:41.880
So in the game screen let's start with registering that.

00:41.970 --> 00:44.610
Currently we're just counting rounds here.

00:44.610 --> 00:49.620
The goal however has to be that we don't just count rounds but that we also saved the rounds.

00:49.650 --> 00:52.770
So we saved a guess that was made in each round.

00:52.920 --> 00:59.520
And to achieve that here in our rounds state we can simply manage an array instead of a number and I'll

00:59.520 --> 01:03.510
name this past guesses to be really clear about what's in there.

01:03.690 --> 01:06.690
And this is to have four names set past guesses.

01:06.690 --> 01:13.390
So now the goal is to add a new guess here to this array whenever we generate a new random numbers.

01:13.390 --> 01:19.530
So here in the next guess handler there where we set the rounds instead of setting the rounds like this

01:19.560 --> 01:23.660
which we're not managing anymore we have to set our past guesses.

01:23.790 --> 01:30.420
And there we need to use our previous guesses and actually add a new guess here.

01:30.420 --> 01:37.540
Now for that we can use that function form here where we get the cur past guesses which is a bit of

01:37.540 --> 01:42.790
a strange name but which simply means that this is our current state and we want to update that or it's

01:42.790 --> 01:49.810
our latest state to be precise and we want to update that and we want to update it by returning a new

01:50.020 --> 01:55.720
era which will be our new state and that of course should take our current past guesses into account

01:56.020 --> 01:59.680
and then add new guesses stare.

01:59.690 --> 02:04.280
Now we can either add a new guess at the end of that list or at the beginning and I'll actually added

02:04.280 --> 02:09.590
at the beginning so did our most recent guests is always at the top of the list when we later render

02:09.590 --> 02:10.520
it to the screen.

02:11.210 --> 02:17.600
So here we can add next number which is our new current guests we're generating here and that's what

02:17.600 --> 02:25.440
we have to add here as and right with that we're adding new items to this array with every guess.

02:25.470 --> 02:28.760
Now don't forget that we also start with a guest though.

02:28.770 --> 02:31.290
We generate an initial guess here.

02:31.290 --> 02:36.670
I want to start with that guess in the list and therefore we have to add it to the list here.

02:36.720 --> 02:44.040
So I'll extracted from our used state function call here and trade a new constant initial guess which

02:44.040 --> 02:51.910
is this randomly generated number and now it's this initial guess which I add here to use state and

02:51.910 --> 02:57.850
it's all of the initial guests I add as a first element to date array in our past guesses use state

02:57.850 --> 02:59.200
initialization.

02:59.200 --> 03:06.260
Now don't forget that use state as oldest code here of course reruns whenever this component reenters.

03:06.340 --> 03:12.670
But the way you state works is such that react detects that a state for this component has already been

03:12.670 --> 03:13.350
initialized.

03:13.780 --> 03:19.210
So it will only set the state to this initial guess for the very first time this component renders and

03:19.210 --> 03:21.400
not for a subsequent renders there.

03:21.400 --> 03:28.120
Indeed this initial guess will be re created but it won't actually be used because of that detached

03:28.210 --> 03:33.060
state handling where react finds out that we already have a state.

03:33.070 --> 03:38.080
So with that we're initializing this word initializing our guests here in that list as well and we're

03:38.380 --> 03:43.090
adding a new guest to the list at the bottom here with all of that.

03:43.240 --> 03:46.480
We should have some past guesses which we can output in a list.

03:46.780 --> 03:52.300
And now here we have two ways of putting this with a flat list or with the scroll view and I'll again

03:52.300 --> 03:54.660
start with a scroll view for that.

03:54.730 --> 04:02.320
So here below the card I'll add a scroll view and for Dad you need to import the scroll view from React

04:02.320 --> 04:02.890
Native.

04:03.010 --> 04:04.820
So let's do that here scroll.

04:04.870 --> 04:10.060
You imported from React Native and output that below the list so that this is the scroll label content

04:10.420 --> 04:13.190
because in there I'll have my dynamic content.

04:13.210 --> 04:18.620
I'll use my past guesses and map this into a list of components.

04:18.640 --> 04:20.550
So here I'll have my individual guests.

04:20.560 --> 04:26.140
So to say and this should now return a component instead of this map function and such a guest component

04:26.140 --> 04:32.350
could be a view let's say with a text in there where I simply output the guests.

04:32.350 --> 04:39.880
So here I render this guess I'm getting and since I just add my guesses here directly like this to the

04:39.880 --> 04:45.670
array the guests I have in there is just the guest number and I can simply output it like this here

04:47.150 --> 04:53.600
now you'll learn Dad for items which were mapping like this you also need to add a key and we could

04:53.600 --> 04:57.340
use our guests here as a key if weed would be guaranteed to be unique.

04:57.350 --> 05:04.010
But with our current logic it actually isn't because in our current logic generate random between actually

05:04.010 --> 05:11.300
generates a new random number where the upper boundary does high value here is excluded but the lower

05:11.300 --> 05:17.190
boundary is included so we can get this lower boundary as a new random value.

05:17.300 --> 05:23.660
Now the downside of this is that here where we're setting our new lower boundary we're setting this

05:23.660 --> 05:30.020
to the current guess which means this can be repeated in a future random number and we actually saw

05:30.020 --> 05:31.120
it as in this module too.

05:31.130 --> 05:37.010
There is sometimes the computer guest a number which was guest a couple of rounds early already.

05:37.070 --> 05:42.900
It's not a huge problem but now it is because now we need our guests to be guaranteed to be unique.

05:43.190 --> 05:49.460
And the fix is simple though we can simply add one year when we set our new lower boundary because by

05:49.460 --> 05:56.930
adding one here we ensure that the new lower boundary which is included in the random number generation

05:57.410 --> 06:01.270
is actually one higher than the current guest which was false.

06:01.280 --> 06:02.910
Otherwise we wouldn't have gotten here.

06:02.930 --> 06:09.020
So now we're setting a new lower boundary which can be generated in the future but which we didn't generate

06:09.020 --> 06:09.950
before.

06:09.950 --> 06:13.100
So this is a little fix in the logic which doesn't hurt any ways.

06:13.100 --> 06:18.560
And it's especially important if you plan on using the guests as a unique key here.

06:18.640 --> 06:20.110
So with that.

06:20.110 --> 06:21.670
Let's see whether that works.

06:21.730 --> 06:26.190
Let's save that and let's give it a try.

06:26.190 --> 06:27.610
Here on ISIS.

06:27.750 --> 06:31.830
Start the game and we see our initial guests fifty seven.

06:31.830 --> 06:37.890
It's not nicely formatted but we see it here now 57 is too high if I say lower we see the new guests

06:37.920 --> 06:43.670
on top of the list and Woops I lied there and that seems to work.

06:43.740 --> 06:49.470
Now of course we're getting an error when the game is over because they're we're trying to get our rounds

06:49.980 --> 06:53.730
and we're not managing this as a state anymore so we'll have to fix that.

06:53.910 --> 06:56.590
But I'm putting the list works now.

06:56.670 --> 06:59.140
Let's fix our rounds error.

06:59.160 --> 07:08.580
We're getting that is simply coming from use the fact where I forward rounds two on game over there

07:08.580 --> 07:13.120
I then need to forward the number of rounds it's took the computer to guess our number.

07:13.140 --> 07:17.030
Previously we had a Rollins variable here arounds state.

07:17.040 --> 07:23.010
Now we just have past guesses which is in a race we can forward past guesses like this because on game

07:23.040 --> 07:24.660
over Indiana needs a number.

07:24.660 --> 07:30.440
But of course we can forward the length of past guesses which is just the number of rounds it took the

07:30.450 --> 07:31.520
computer.

07:31.530 --> 07:37.920
So with that if we do this now we should actually be able to all to finish the game successfully.

07:37.980 --> 07:43.440
Give us a quick try here and solve the game.

07:43.440 --> 07:43.790
Yeah.

07:43.860 --> 07:44.900
Dad works.

07:45.030 --> 07:47.340
So now we have dad working.

07:47.340 --> 07:51.750
Now let's turn our heads towards that scroll view and the list items there again.

07:51.750 --> 07:54.210
And let's make sure that we have the right styling there.
