WEBVTT

00:02.340 --> 00:08.460
It's important to understand how navigation works and native apps and especially if you have a web development

00:08.460 --> 00:14.400
background it's important to understand how it differs from navigating between screens and the web because

00:14.460 --> 00:20.760
in the web you actually enter a you are L and if you're building a react app you use a tool like to

00:20.760 --> 00:24.240
react router to then load the users component.

00:24.240 --> 00:30.640
And if you click a link that goes to my site dot com slash products again the react router which is

00:30.660 --> 00:37.950
extra library you installed kicks in sees that you change the path in your U.R.L. and loads a different

00:37.950 --> 00:38.820
react component.

00:38.850 --> 00:40.800
That's how navigation works in the web.

00:40.890 --> 00:47.880
So do you are L is your source of truth and changing that you are l might be picked up by libraries

00:47.880 --> 00:51.220
like react router which then rendered different components onto the screen.

00:51.240 --> 00:53.910
That's how I react for web works.

00:54.030 --> 00:57.990
Now there is one important difference to that when we think about native apps.

00:58.070 --> 01:05.070
We have no you are ell users don't go around in your app by entering some you are L instead you are

01:05.070 --> 01:09.510
pressing buttons your pressing taps and you're going forth and back.

01:09.540 --> 01:16.050
You have back buttons you have side drawers that's how you navigate on mobile apps to be precise.

01:16.050 --> 01:19.720
As I mentioned having taps is one common pattern you see there.

01:19.770 --> 01:25.170
The average common pattern is that you navigate in a stack of pages and that simply means that you go

01:25.170 --> 01:31.770
to some page you click on some item you're taken to a new screen and then automatically you get a back

01:31.770 --> 01:36.210
button it top or on Android you have one built into the device of course.

01:36.210 --> 01:41.850
And when you press that your navigated back to the page you were on before and you get a smooth transition

01:41.850 --> 01:43.100
for that.

01:43.140 --> 01:48.660
So there you could navigate around for example load a users component by pressing the tab or by pressing

01:48.870 --> 01:54.270
a special item and being navigated there and the allegation simply looks and feels a bit different to

01:54.270 --> 01:55.390
the users.

01:55.500 --> 02:00.700
Now of course we want to bring that look and feel to our ReACT native app too.

02:00.780 --> 02:02.570
And thankfully that's very easy.

02:02.580 --> 02:09.310
With the help of a third party library will use the third party library which will use it for this I

02:09.310 --> 02:13.490
stopped my exposed server here is react navigation.

02:13.660 --> 02:19.830
We can install it with npm install dash dash safe react navigation like this.

02:20.080 --> 02:26.670
And this is called react navigation it's actually a navigation library that's built for react native.

02:26.680 --> 02:33.370
Now you can also kind of use it in web apps but its main focus is native apps built with React Native.

02:33.370 --> 02:40.120
So even though it's called the react navigation it's for React Native not just for react for the web

02:40.870 --> 02:45.990
so we can simply install this package here into our application to get started using it.

02:46.330 --> 02:51.130
And of course I'll teach you the ins and outs of this package and how to use it for different navigation

02:51.130 --> 02:52.960
patterns in this module.

02:53.200 --> 02:56.560
But in case you want to dive deeper or you also want to have a written guide.

02:56.590 --> 03:02.280
Definitely also check out react navigation dot ORIC which is the official page of this package where

03:02.290 --> 03:06.000
you can dive into the docks to learn all about this package.

03:06.040 --> 03:09.420
There you can read all about it in great detail.

03:09.430 --> 03:13.320
You'll learn how to use it how to configure it and so on.

03:13.330 --> 03:19.360
There is a lot you can do with it and whilst I will cover the majority of this here this is a great

03:19.360 --> 03:21.570
resource for you to dive deeper.

03:21.640 --> 03:27.490
Now one additional step we need to perform during installation when using react navigation in the Expo

03:27.490 --> 03:34.070
project is that we installed these two extra packages with the expo install command not NPM installed

03:34.110 --> 03:35.530
but Expo install.

03:35.530 --> 03:41.020
Though the only difference is that Expo installed behind the scenes will run npm install but it will

03:41.020 --> 03:47.160
pick the specific versions of these two packages that work with your specific Expo version.

03:47.170 --> 03:52.300
So it's a safer version of npm install you could say and therefore it's recommended that you use that

03:52.300 --> 03:53.140
here.

03:53.140 --> 03:58.870
So lets simply copy this command and also make sure that besides installing react navigation which is

03:58.880 --> 04:04.900
the clear package of course we also installed these two packages into the project by running Expo install

04:04.900 --> 04:11.640
here now with installation finished here I can restart my Expo server with NPM start and we can now

04:11.640 --> 04:14.610
start using react navigation.

04:14.610 --> 04:19.590
Now for this I'll trade a new folder in my project and I'll name it navigation.

04:19.590 --> 04:25.130
This is not something you have to do but it can help you keep your code clean because in there.

04:25.130 --> 04:31.620
I'll create a new file all create my meals navigator dot J.S. fall.

04:31.680 --> 04:33.660
Now this file name is totally up to you.

04:33.690 --> 04:41.040
I just want to indicate that in there I will set up the configuration for my navigation for my meals

04:41.040 --> 04:42.740
app here which which I'm building.

04:42.780 --> 04:44.480
So that's why I name it like this.

04:44.700 --> 04:50.490
And it's the meals navigator jazz fall where I want to set up my well navigation configuration I want

04:50.490 --> 04:57.600
to tell react navigation that library we installed which different screens we have how they are connected

04:57.900 --> 05:01.050
and how we want to be able to move between them.

05:01.260 --> 05:04.780
Now it's easier to simply see that than to just talk about them.

05:04.800 --> 05:09.420
So therefore in the meals navigator let's get started setting up some navigation.
