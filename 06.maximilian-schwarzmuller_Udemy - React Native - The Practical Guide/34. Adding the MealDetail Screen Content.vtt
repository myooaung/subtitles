WEBVTT

00:02.420 --> 00:06.140
So let's focus on the middle detail screen for now.

00:06.170 --> 00:06.770
So

00:09.660 --> 00:13.950
the part here where we view the details his elected recipe.

00:14.070 --> 00:19.590
Right now we just have the dummy content there of the middle details screen and that's of course not

00:19.590 --> 00:21.810
the content I really want to have there.

00:22.020 --> 00:24.190
Instead what should be in there.

00:24.210 --> 00:30.280
Well if we have a look at our meal model it probably makes sense to have the image there.

00:30.330 --> 00:35.340
Please keep in mind that the title already is shown in our header so it makes sense to have the image

00:35.340 --> 00:43.710
here at the top maybe and below that maybe just again repeat duration affordability and complexity just

00:43.710 --> 00:47.140
as we're doing it here below our recipe.

00:47.370 --> 00:56.730
And then also below that list all the ingredients and the steps it takes to well make that dish so that's

00:56.730 --> 01:02.170
in the end what I want to have on this page here on the meal detailed screen and Dafur.

01:02.340 --> 01:08.220
I think it makes sense to first of all add a scroll view because we'll certainly have a lot of content

01:08.220 --> 01:15.340
on there that will most likely not fit onto one screen and certainly not on all possible device sizes.

01:15.390 --> 01:22.320
So I will add a scroll view here and wrap that around my my content here.

01:22.330 --> 01:24.920
Now we'll have a couple of different sections here.

01:25.030 --> 01:30.750
For example at the very top I want to have my image for this.

01:30.750 --> 01:36.300
I will also import D the image component from React Native here So with that we can render an image

01:36.300 --> 01:39.030
here not a background image but a normal image.

01:39.270 --> 01:45.260
And I want to add this let's say here right at the top something like that.

01:45.260 --> 01:51.390
Now after the image I want to have a view with the duration affordability and complexity as I mentioned

01:51.400 --> 01:57.930
so basically the same setup we have in the meal item this year you could say and therefore I'll actually

01:57.930 --> 02:03.330
copy the view from there and then we can adjust it as we need it here in the meal detailed screen.

02:03.360 --> 02:06.220
So I'll just replace this view with the copy view.

02:06.360 --> 02:10.510
Of course dad requires us to import default text component here.

02:10.710 --> 02:11.700
So let's at this.

02:11.720 --> 02:16.370
Let's import default text from components.

02:16.610 --> 02:21.450
Default text so that's the next rule.

02:21.500 --> 02:26.580
And there ofter I want to have my ingredients and the steps you need to execute.

02:26.890 --> 02:39.790
So we can add some text here where we say ingredients and dare I want to also apply a style like styles

02:39.820 --> 02:42.910
text title or something like this or just title

02:45.630 --> 02:52.320
because I want to have some bold header here maybe increase the font size below that have my list of

02:52.320 --> 02:58.770
ingredients so list of ingredients and that's of course not the final content instead we will render

02:58.770 --> 03:07.260
a list here and below that I'll repeat this year because then I want to have a title where I say steps

03:07.980 --> 03:14.760
and then a list of steps below that and now I'll get rid of this old content down there and that's what

03:14.760 --> 03:15.940
I want to work with.

03:15.960 --> 03:20.790
Now of course all the styles are missing and all the props iterations on that doesn't yield anything.

03:20.790 --> 03:26.080
Instead we have to work with the selected meal here selected meal durations like meal complexities select

03:26.130 --> 03:34.560
meal affordability and for the image for example I want to add a source here source since it's a network

03:34.590 --> 03:42.210
image is an object with a you are I property which points at selected meal dot image you are L to load

03:42.240 --> 03:47.210
this and we also need to apply a style there to set a width and height.

03:47.310 --> 03:53.190
So here I want to point at Styles image let's say and all these styles are missing as I said let's add

03:53.190 --> 04:02.470
that here for this style I also want to say styles dot details maybe because we're displaying the details

04:02.470 --> 04:08.680
of this recipe and let's go down to the style sheet therefore remove the screen which we don't need

04:08.680 --> 04:09.340
anymore.

04:09.520 --> 04:16.920
Instead let's add image and details now for details we need to set the Flex direction to Roe because

04:16.920 --> 04:19.180
that should be all the details in a row.

04:19.380 --> 04:27.060
We can add a little bit of padding in all directions maybe all 15 and also add justify content of space

04:27.120 --> 04:33.550
around to nicely distribute our detail items here that should be good.

04:35.210 --> 04:42.270
In addition to that on the image here we also need to add a style there.

04:42.440 --> 04:48.100
The width should be 100 percent let's say to take the full away level with and for height.

04:48.140 --> 04:49.580
All go with 200.

04:49.580 --> 04:54.680
Though of course you could dynamically calculate this with the dimensions API for example to always

04:54.740 --> 05:00.720
take a certain fraction of the available height or simply play around with different values here.

05:00.890 --> 05:03.520
I'll go with that and have a look here.

05:03.740 --> 05:04.940
That doesn't look too shabby.

05:04.970 --> 05:06.130
That's not too bad.

05:07.450 --> 05:13.990
Now you could definitely also try some some bonus work here some bonus tasks end up for example a color.

05:13.990 --> 05:20.200
These details simple affordable and the duration depending on whether it's Robert Short or depending

05:20.200 --> 05:25.810
on the different values you have for simple for the complexity and the affordability.

05:25.810 --> 05:31.150
It's not something I will do here but you can have a look at the meal date of course to see which values

05:31.150 --> 05:37.090
we have there to derive what's short what's medium duration what's a long duration and to see which

05:37.090 --> 05:41.800
values are getting used for complexity and so on and then you could actually add some if checks to apply

05:41.800 --> 05:47.470
different styling to the different values we're out putting here in immediate detail screen for these

05:47.470 --> 05:52.360
details so that you color the text differently depending on whether it's long or not it's not something

05:52.360 --> 05:58.150
I'll do here because it's just says I'm extra work it doesn't really add much to the navigation which

05:58.150 --> 05:59.740
is the focus of this module.

05:59.740 --> 06:08.110
So instead I'll focus on ingredients and steps and their first step is to make sure that title here

06:08.530 --> 06:10.250
is styled properly.

06:10.330 --> 06:17.660
So let's add title to the style sheet and in there I'll add fun family and set this to open Sands bold

06:19.080 --> 06:26.790
said the font size to 22 maybe and set the text aligned to center to centered text in the middle.

06:26.810 --> 06:32.160
And with that if we check this does looks quite nice.

06:32.230 --> 06:37.540
Now I also want to output my ingredients in my steps of course and for that it's important to understand

06:37.540 --> 06:40.770
that in the dummy data these are a race.

06:40.780 --> 06:42.480
These are my ingredients for example.

06:42.490 --> 06:49.540
These are my steps and you see there's just text in these arrays so I just want to output my text here

06:49.720 --> 06:56.410
as a list and I'll not use a flat list because you could do that you could have a scroll label containers

06:56.410 --> 07:01.470
in there so to say but I was simply rendered ingredients and the steps on top of each other.

07:01.480 --> 07:07.690
So here we can use a good old approach we know from vanilla react for react for web to it which I also

07:07.690 --> 07:14.140
showed earlier in the course we can use our selected meal and they're doing Riggins which is an array

07:14.140 --> 07:17.640
of strings and map this into an array of components.

07:17.650 --> 07:23.230
That's how you can output a list of data and react and alter and react native.

07:23.230 --> 07:27.660
And often you use flatness but here we don't need to because it's not an infinite amount.

07:27.670 --> 07:33.300
So we don't need these optimizations and we have a wrapping scroll view around the entire screen.

07:33.400 --> 07:38.050
So we will be able to also scroll if we're outputting more than fits on the screen so we're absolutely

07:38.050 --> 07:39.950
fine using this approach.

07:39.950 --> 07:45.220
And if we're here I will have my single ingredient in this map function and map is a method built into

07:45.220 --> 07:46.900
JavaScript as you know.

07:46.990 --> 07:50.030
And here we need to return J is X element now.

07:50.170 --> 07:55.660
And what I want return is a text component where whereas simply output ingredient because ingredients

07:55.720 --> 07:56.880
is an array of strings.

07:56.890 --> 07:59.010
So ingredient is just a string.

07:59.020 --> 08:03.280
And then here we also need to supply a key that's a requirement by react.

08:03.280 --> 08:07.980
And we can use ingredient as a key because we'll always have each ingredient only once.

08:07.990 --> 08:10.230
So that is guaranteed to be unique.

08:10.240 --> 08:12.510
That's how our meals are set up.

08:12.550 --> 08:19.520
And with that if we save this and we have a look at a recipe here we see our ingredients now for the

08:19.520 --> 08:21.620
styling we can certainly do something there.

08:21.650 --> 08:26.960
And I will do so in a second but before I do that let me repeat this for the steps here.

08:26.960 --> 08:34.250
Replace this text with selected meal dot steps and then output each step here which is all just a string

08:34.350 --> 08:41.910
which is also unique in a text with that added We should also see the steps for our meal indeed we do

08:42.630 --> 08:46.730
now again styling can be improved a little bit and we'll do just that.

08:47.010 --> 08:53.460
And I think it makes sense to create a separate component or a render function for this and it will

08:53.460 --> 08:58.830
create a separate component will store it in the same file though because we really only use it in that

08:58.830 --> 08:59.310
file.

08:59.340 --> 09:03.260
But you could also create a new file totally up to you there.

09:03.270 --> 09:11.340
I'll have my list item which receives props where I return.

09:11.350 --> 09:17.500
And now here I want to use a view which I'm importing as a wrapper so that I can styled as container

09:17.500 --> 09:24.690
and in there have my text root props children and now that view here we'll get a style from style stuff

09:24.700 --> 09:28.450
list item maybe so that we can style this nicely.

09:28.450 --> 09:33.490
And here of course I don't want to use text but actually default text.

09:33.490 --> 09:34.630
Also here of course.

09:34.780 --> 09:38.010
So did we take advantage of our own custom text.

09:38.170 --> 09:47.430
Now for the list item style here let's go down to the style sheet and at list item and each list item

09:47.460 --> 09:55.530
should have some margin a vertical margin of let's say 10 and a horizontal margin of let's say 20.

09:55.530 --> 10:05.600
So more spacing to left and right and let's also maybe add a border color off a light grayish color

10:05.600 --> 10:09.540
here with hashtag CCC and a border width of one.

10:09.540 --> 10:16.730
We'll see how that looks like and then also add a little bit of padding in there 10 in all directions

10:17.570 --> 10:18.930
and we'll see how that looks like.

10:18.950 --> 10:25.910
Now we just need to make sure we use our list item component and we use it by returning that instead

10:25.910 --> 10:30.590
of text here when outputting the ingredients we still pass ingredient between the opening and closing

10:30.590 --> 10:36.200
tags of our own custom component because there we're using props children that does use the content

10:36.470 --> 10:38.920
which we pass between opening and closing tax.

10:39.110 --> 10:43.870
And we do the same for our steps with that.

10:44.530 --> 10:47.520
Let's have a look at this yeah.

10:47.670 --> 10:55.870
Doesn't look too bad get our steps here got our ingredients of course you can refine this styling fine

10:55.870 --> 11:02.650
tune to your requirements to the way you wanted to look but I'm actually quite happy with that and with

11:02.650 --> 11:08.050
that we got a basic detailed screen and of course this detailed screen also works for our favorites

11:08.050 --> 11:10.610
because we're using one of the same screen there.

11:10.660 --> 11:15.500
So that looks quite nice the filter screen is what's now missing.
