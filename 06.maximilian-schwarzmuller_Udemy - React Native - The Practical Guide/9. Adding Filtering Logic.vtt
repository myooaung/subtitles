WEBVTT

00:02.640 --> 00:06.640
This concludes the favorite recipes part.

00:06.690 --> 00:12.270
Now it's time to make sure that we actually filter our recipes because keep in mind and category meals

00:12.330 --> 00:17.260
screen we're actually retrieving our filtered meals from our state.

00:17.370 --> 00:24.870
And right now of course in our state that filtered meals property always holds all meals and never changes

00:24.870 --> 00:26.880
and that's something I want to change as a next step.

00:29.310 --> 00:35.910
Again let's start by adding an appropriate action that starts by adding a identifier which I export

00:35.910 --> 00:43.830
here and I'll name this set filters and set filters here as a text as well and create a fitting action

00:43.830 --> 00:47.150
creator function set filters.

00:47.190 --> 00:53.550
And here I expect to get an argument with my filter settings that should be an object in the end with

00:53.580 --> 00:57.730
the is gluten free is lactose free is vegan and is a vegetarian.

00:57.730 --> 01:05.040
Data in it that will return an action object where the type of course is set filters so does identifier

01:05.520 --> 01:12.000
and then the filters while that's my filter settings object so does object with all the while True or

01:12.000 --> 01:15.030
false values for the four different filter criteria.

01:15.030 --> 01:17.880
So we have that's the action CREATOR.

01:17.880 --> 01:24.900
NOW WHAT SHALL WE DO IN THE reducer in the reducer we now need to handle that new case.

01:24.900 --> 01:30.950
So here before default I'll add the case where a handle set filters.

01:30.950 --> 01:38.900
And for Dad you need to import the set filters identifier from the meals actions and inset filters.

01:38.900 --> 01:47.580
The goal now of course is to update our filtered meals to reflect the filters set up.

01:47.590 --> 01:53.350
Now keep in mind that this actual contained a filter is key which in the end will be a javascript object

01:53.350 --> 02:04.630
which has something like gluten free true lactose free falls and we want to reflect these settings in

02:04.630 --> 02:15.090
our filtered meals array so here I'll have my applied filter as let's say where I simply extract the

02:15.090 --> 02:16.770
filters from the actions.

02:16.830 --> 02:18.320
That's of course a step you could leave out.

02:18.320 --> 02:22.730
I'm just trying to write understandable code which speaks for itself.

02:22.890 --> 02:27.990
So I'm just extracting the filters set up by the user and we'll take care about dispatching this actually

02:27.990 --> 02:29.190
later.

02:29.190 --> 02:40.740
And then here I'll set my filter meals create a new filter meals constant based on my total meals so

02:40.740 --> 02:46.470
not the filtered meals but all the meals available and there I want to filter them with the built in

02:46.470 --> 02:47.280
filter method.

02:47.280 --> 02:53.670
Javascript offers filter always returns a brand new Array which is good because it don't want to edit

02:53.880 --> 02:55.470
any existing array just yet.

02:55.470 --> 03:02.370
I want to get a new array instead and dad will be an array where it keeps all items for which does function

03:02.370 --> 03:08.850
we pass to filter returns true and drops all items where we return false dysfunctional run for every

03:08.850 --> 03:14.250
meal and then now in this function we can go through all the filters to use reset and check whether

03:14.250 --> 03:20.100
that meal matches any of the filters and therefore should be dropped or if it passes all filters so

03:20.100 --> 03:21.240
to say it should be kept.

03:22.170 --> 03:29.460
So here we can check if filters dot gluten free and I simply expect that my filters excuse me applied

03:29.460 --> 03:33.920
filters that this object I get has a gluten free key.

03:34.290 --> 03:44.200
If that is true and my meal is not gluten free and hence I need to add exclamation mark here then I

03:44.200 --> 03:51.220
know that this meal should be dropped right because it is not gluten free but I have a filter that it

03:51.220 --> 03:57.250
should be gluten free so I will return false and I don't care about any other filters because it already

03:57.250 --> 03:58.540
doesn't match this filter.

03:58.540 --> 04:06.220
I can drop it if we make it past this if check we can check the next filter applied filters lactose

04:06.310 --> 04:07.150
free.

04:07.150 --> 04:11.820
If that's true and my meal is not lactose free.

04:11.830 --> 04:17.260
Same logic as before with the clue teens I can return false and drop it.

04:18.810 --> 04:29.370
Next def check if applied filters vegetarian is set and my meal is not vegetarian.

04:30.070 --> 04:34.930
So same logic as before again I can drop it because I might have passed the other filters but if the

04:34.930 --> 04:40.990
meal is not vegetarian but I am looking for vegetarian meals then I should get rid of it at last but

04:40.990 --> 04:43.840
not least applied filters thought vegan.

04:43.930 --> 04:51.980
If I'm looking for a vegan meals but my meal is not vegan here and by the way here I'm just leveraging

04:52.220 --> 04:55.290
all these properties that are part of my meals.

04:55.340 --> 05:01.550
If we have a look at our models at the meal there we do have is gluten free is vegan and so on as properties

05:01.640 --> 05:07.070
on every single meal so every single meal has the information for which filters that should be included

05:07.070 --> 05:07.690
or excluded.

05:07.700 --> 05:10.940
So every meal has that and I'm just using this here in the reducer.

05:11.000 --> 05:18.170
So therefore here in the vegan case I also wouldn't want to return false and only if I make it past

05:18.230 --> 05:26.420
all these checks I know I have a meal that matches all filters I set there for now I can return true.

05:26.540 --> 05:30.830
I'm still inside of that filter method and a return true which means I want to keep that meal in my

05:30.830 --> 05:38.390
filtered meals constant which is my new array and now overall after deriving this filtered meals array

05:38.810 --> 05:45.140
I have to return a new state by copying the old state and then I want to override my filtered meals

05:45.140 --> 05:51.740
here with the filter of meals I'd arrived here so filter meals on the left of the colon is the property

05:51.740 --> 05:53.010
in the state object.

05:53.060 --> 05:59.540
So essentially this property and filtered meals on the right side of the colon where Fuller refers to

05:59.540 --> 06:00.830
this constant.

06:01.110 --> 06:06.890
I can also named as updated filtered meals to be clearer about this.

06:06.940 --> 06:10.390
This is how my state gets updated when filters get set.

06:10.390 --> 06:13.570
Now of course we need to make sure we all the dispatch does action eventually.
