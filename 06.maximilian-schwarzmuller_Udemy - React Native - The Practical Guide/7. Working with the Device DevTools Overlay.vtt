WEBVTT

00:02.290 --> 00:07.930
Now I removed the breakpoint here and now that we saw the debugging tools in action let's have a closer

00:07.930 --> 00:10.590
look at these debugging overlays.

00:10.600 --> 00:14.630
We can open on these virtual devices or on real devices too.

00:14.680 --> 00:18.430
So on Android again you open it with command or control em.

00:18.520 --> 00:23.440
And first of all I'll stop at remote J.S. debugging you always need to stop this once you're done and

00:23.440 --> 00:28.390
you should stop it when you're when you're not in need of it anymore because it slows down your app.

00:28.420 --> 00:34.360
But if it's running and now let's see which other cool things we can see there for example we can reload

00:34.360 --> 00:38.780
the app simply while reloaded in case it got stuck somehow.

00:38.830 --> 00:44.350
You can also disable life reloading which just as automatic reloading when you change something and

00:44.350 --> 00:44.990
code.

00:45.250 --> 00:50.860
You can try enable a hot reloading which means it will try to reload parts of the screen that changed

00:50.860 --> 00:52.600
without reloading the entire app.

00:52.600 --> 00:59.260
After saving a file the default is that it reloads the entire app and off not reloading doesn't work

00:59.260 --> 01:02.700
in exactly the way it should work which is why it's not enabled by default.

01:02.770 --> 01:04.900
So I'll also go with live reloading here.

01:04.900 --> 01:10.420
But you can play around with that and then we get these free other things down there where especially

01:10.420 --> 01:14.060
the inspector and Performance Monitor are very interesting.

01:14.080 --> 01:16.370
Let's start with the Performance Monitor.

01:16.480 --> 01:22.090
If you enabled this you get this overlay which basically informs you about the performance you are having.

01:22.090 --> 01:27.350
And there you can see at how many frames your app is running how many frames were dropped and so on.

01:27.370 --> 01:31.570
Now please be aware that the performance you are seeing here is not the final performance of your app

01:31.600 --> 01:34.610
though because it's still in development mode.

01:34.690 --> 01:39.970
We're not having the debugger attached but development mode also means that there is a lot of overhead

01:39.970 --> 01:40.890
in your code.

01:41.050 --> 01:46.510
For example the overlay we're seeing here which is part of the app so to say which makes your apps slower

01:46.510 --> 01:48.120
than it would typically be.

01:48.130 --> 01:54.010
So this can be an indicator but it's not the final production ready testing you should do.

01:54.160 --> 02:00.520
Still it can be nice here you open it with commodity on ice it can be nice to look into this and get

02:00.520 --> 02:06.600
a feeling for how your apps behaving and how it's performing how much memory is consumed and so on.

02:06.640 --> 02:13.900
This can also help you spot memory leaks if this value for example is going up and up and you are occupying

02:13.900 --> 02:15.820
more and more memory on the device.
