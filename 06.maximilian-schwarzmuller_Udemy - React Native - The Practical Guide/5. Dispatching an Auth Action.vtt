WEBVTT

00:02.380 --> 00:07.870
With validation implemented, let's make sure that if we do submit a valid form so if we click the submit button,

00:08.320 --> 00:10.740
we actually can do something with it.

00:10.750 --> 00:17.380
So back in auth.js, we got our submit button and when we click it, you might remember that we call

00:17.380 --> 00:18.820
the login handler,

00:19.030 --> 00:23.260
right now we only start main tabs because there's not much else to do right now,

00:23.290 --> 00:28.820
in theory however, I want to submit this to some server and store it there.

00:28.910 --> 00:35.980
Now to set this up already, I'll go to my store and add an appropriate action, here we got add place

00:35.980 --> 00:46.280
and delete place, I'll add a new const here which I'll name try auth, try auth because we don't know yet

00:46.310 --> 00:47.930
if we will be successful

00:47.990 --> 00:53.570
but this is what I want to fire whenever we click the login button and no matter if we're in login or

00:53.690 --> 00:54.760
sign up mode.

00:55.130 --> 01:03.140
So with that I will also add a new file in my actions folder, auth.js here, I will import the action

01:03.140 --> 01:05.350
type from my action types file,

01:05.450 --> 01:16.420
the one I just created, so try auth and I'll add an action creator, so I'll export a const, try auth where

01:16.420 --> 01:20.080
I expect to get auth data,

01:20.450 --> 01:25.430
the content of that can vary depending on whether we're logging in or signing up

01:25.910 --> 01:37.430
and then here, I'll return a javascript object where I will set the type to try auth and pass on the auth

01:37.460 --> 01:40.190
data. And I won't do anything with that yet,

01:40.340 --> 01:44.460
we will add this in the authentication module, we might also change it a little bit there

01:44.630 --> 01:48.310
but I want to dispatch this action when we click login handler.

01:48.380 --> 01:56.880
Now for this to happen, we need to have this connected to redux, the auth screen and it isn't yet.

01:57.260 --> 02:01.960
Now let's first of all have a look at app.js where we register all our screens,

02:02.030 --> 02:04.990
you see that for auth screen, we do provide the store

02:05.030 --> 02:10.650
so hooking it up to redux is as easy as using the connect middleware now.

02:10.880 --> 02:18.950
So I'll import connect, not middleware, the connect function here from react redux. Let's import that

02:19.490 --> 02:25.220
and I want to be able to dispatch an action, so at the very bottom right before exporting, I'll add const

02:25.220 --> 02:30.990
map dispatch to props, we'll get the dispatch function here

02:32.770 --> 02:41.290
and there, simply return my mapping object where I will have an on login method where I expect to get my

02:41.680 --> 02:51.450
auth data and then simply call dispatch with the action we just created in the auth.js file in the actions

02:51.450 --> 02:52.080
folder.

02:52.110 --> 02:59.790
So let's import that, let's import something from

02:59.940 --> 03:10.370
and now we just go into the store folder, actions auth, excuse me, index because there I want to bundle all my exports.

03:10.400 --> 03:12.950
So let's also add this new export,

03:15.370 --> 03:19.780
try auth from our ./auth file,

03:19.780 --> 03:23.450
so I'm doing this in the index.js file in the actions folder.

03:23.450 --> 03:29.530
And with that export added here, in the auth.js file we can import it from there, so we can import try auth

03:29.590 --> 03:31.030
from the index file

03:32.310 --> 03:38.950
and we can then go to the bottom and dispatch this action, so we call try auth here which is an action creator,

03:39.260 --> 03:42.810
execute it and pass on the auth data.

03:42.820 --> 03:50.230
Now we can use on login in our login handler here, I can call this props on login and we need to

03:50.230 --> 03:51.960
pass the auth data here.

03:52.060 --> 03:56.800
So I'm going to construct that here, auth data will be a javascript object

03:56.800 --> 03:58.510
and here I will store my e-mail,

03:58.540 --> 04:02.910
this is this state controls e-mail value,

04:02.950 --> 04:08.300
that's the good thing about two-way binding, we can get all that value right from our state, password

04:08.320 --> 04:12.990
is this state controls password value

04:13.190 --> 04:15.440
and I don't need the confirm password here,

04:15.500 --> 04:18.140
this was just there for us to check it on the frontend,

04:18.220 --> 04:21.050
we don't we need to pass this to our server,

04:21.210 --> 04:25.550
not necessarily at least. Now we're dispatching this

04:25.600 --> 04:27.530
and right now this won't do much,

04:27.530 --> 04:28.890
it will go into the void

04:28.900 --> 04:31.640
but it's good that we already have this set up.

04:32.020 --> 04:39.940
Let's try it and let's thereafter make sure that we can also switch from login to sign up

04:39.940 --> 04:42.090
and the other way around.

04:42.100 --> 04:48.280
So let me quickly just try the button, on login is not a function,

04:48.800 --> 04:56.000
yeah that's a classic mistake, of course at the bottom of the auth screen, I need to execute connect, pass null

04:56.000 --> 05:05.210
for map states to props and then pass the map dispatch to props constant and then wrap our auth screen

05:05.420 --> 05:07.280
with the result of that function call.

05:07.430 --> 05:14.770
So with that, let's fix that

05:14.890 --> 05:16.790
and now if we try this, it works.

05:16.990 --> 05:20.610
So next step, let's make sure that switch to login does something.
