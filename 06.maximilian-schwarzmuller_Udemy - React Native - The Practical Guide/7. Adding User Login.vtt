WEBVTT

00:02.550 --> 00:12.460
Let's add the sign in logic and for that, I'll create a new function, export const auth sign in, here

00:12.540 --> 00:15.190
I will also get my auth data

00:15.720 --> 00:17.730
and then just well do that,

00:17.730 --> 00:19.140
sign the user in.

00:19.800 --> 00:24.080
I can copy my code from auth sign up here

00:29.250 --> 00:36.870
and paste it into auth sign in. Now if we copy that much code and a lot of that will never change,

00:36.930 --> 00:40.360
this might not be the best way of doing that right,

00:40.590 --> 00:46.420
so let's revert this and let's remove the auth sign in part here,

00:46.580 --> 00:51.470
let's instead change auth sign up here to behave differently.

00:51.650 --> 00:59.390
Maybe we stick to try auth and we just change the tiny part we want to change in this if statement and

00:59.390 --> 01:04.880
then continue with the same code we always want to use. So I'll cut dispatch

01:05.030 --> 01:12.590
UI start loading and add it here instead in try auth at the beginning and then I simply want to change

01:12.580 --> 01:15.230
the url we're sending the request to

01:15.560 --> 01:22.820
because if we have a hook at the firebase docs and we click on sign in with email and password, we see

01:22.820 --> 01:27.960
that it actually gets the same body payload, email, password and return secure token,

01:28.100 --> 01:33.360
it's the same method and the same content type as the sign up request is.

01:33.710 --> 01:36.430
The only difference is the url,

01:36.620 --> 01:38.880
well that makes it easy to reuse, right.

01:38.900 --> 01:50.450
All we have to do in our action creator is that we create some url variable here which by default

01:50.660 --> 01:52.890
can be the login url,

01:52.910 --> 01:58.360
so let's grab them from firebase, go to sign in and grab that url,

01:58.400 --> 02:00.680
it differs here by this part,

02:00.680 --> 02:03.050
here it says verify password, for signing up

02:03.050 --> 02:05.610
it says sign up new user,

02:06.020 --> 02:12.800
so that we grab this url and assign it here. That we of course also use our API key though I

02:12.800 --> 02:21.800
can store it in a const here, API key and simply store this string we already copied down there

02:22.630 --> 02:33.800
in a string here and then we can construct this url by setting the key equal to plus API key and I then

02:33.910 --> 02:37.720
just need to check if the auth mode might be sign up,

02:37.780 --> 02:44.540
so I revert this and I need no else part because here remember, this url is for signing in.

02:44.680 --> 02:48.260
So now I check if we might have a sign up case,

02:48.550 --> 02:54.720
In this case I would change the url to use this url from down there instead,

02:54.880 --> 03:01.520
so I'll copy that url, add it here and also add the API key here at the end.

03:01.660 --> 03:07.630
And with that, we control the only thing that does change, the url.

03:08.140 --> 03:15.040
And with that we can then copy or cut all the code from down there and remove this auth sign up action

03:15.040 --> 03:21.470
which we no longer need, this action creator and just execute it here and replace the hardcoded url in the

03:21.530 --> 03:28.940
fetch method with our url variable which now will target either the sign up or the sign in endpoint.

03:28.960 --> 03:32.200
And as I said, the payload we send is the same,

03:32.200 --> 03:36.030
it also doesn't matter here, we handle errors in the same way

03:36.190 --> 03:41.260
and we want to redirect to our main tabs if we did sign in successfully or sign up.

03:41.680 --> 03:49.540
So let's try this, if I save this code, save all the files and I reload this, let's try login with the

03:49.540 --> 03:56.910
credentials you used for signing up, so make sure to get these right, submit and we're forwarded.

03:57.190 --> 03:59.970
Now let's use different credentials,

04:00.070 --> 04:05.120
so maybe a correct password, email address but a wrong password,

04:05.140 --> 04:06.360
now I get an error.

04:07.900 --> 04:18.170
If I now switch to sign up and I use a new e-mail address and correct passwords, if I now hit submit,

04:18.170 --> 04:19.320
this also works.

04:19.490 --> 04:24.380
And now you will also see that if you check out your authentication screen and refresh this, you got

04:24.380 --> 04:25.840
two users.

04:25.910 --> 04:27.740
So this is all working,

04:27.740 --> 04:31.940
the one thing we're not doing is we're not using the response,

04:31.980 --> 04:35.420
this strange token which I said that it would be important.

04:35.780 --> 04:39.370
Now let's focus on this next because now we're logged in,

04:39.470 --> 04:44.150
now we want to make sure that the resources we have on our server,

04:44.300 --> 04:51.350
so here in the database in our custom cloud function, that we only can access them if we do have a

04:51.350 --> 04:52.870
valid token.

04:53.180 --> 04:59.510
Now let's first of all see in the next lecture how we can enforce this token to be present on the backend

05:00.050 --> 05:04.440
before we then learn how to store and manage and use the token on the frontend.
