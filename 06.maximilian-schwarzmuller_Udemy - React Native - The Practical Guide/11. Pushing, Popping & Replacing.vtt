WEBVTT

00:02.710 --> 00:07.840
Now we had a look at basic navigation with navigate and navigate is your most important tool.

00:08.020 --> 00:13.720
But actually when being inside of a screen of a component loaded with the help of a stack navigator

00:13.870 --> 00:15.950
you have alternatives to navigate.

00:15.970 --> 00:22.450
You also can use push instead of navigate though that doesn't take a javascript object but instead takes

00:22.450 --> 00:24.240
just the route name here.

00:24.250 --> 00:30.280
In this case category meals as a first argument and with that you'll get the same behavior as before

00:30.610 --> 00:33.200
the question of course is why would you then use this.

00:33.250 --> 00:37.960
Number one it's a bit shorter than navigate because you're not passing an object but that's not the

00:37.960 --> 00:39.440
primary reason.

00:39.490 --> 00:47.880
Instead using push here can be useful if you want to go to let's say a page where you already are on.

00:47.960 --> 00:49.100
Let me show you what I mean.

00:49.120 --> 00:53.560
If I reverse this and I navigate two categories here.

00:53.590 --> 00:59.650
So to the category screen which is to screen them already in for duties with navigate what you'll see

00:59.800 --> 01:02.690
is that nothing happens if I tap this.

01:02.930 --> 01:10.760
Now if I use portions stat and I therefore just pass categories as my first argument because that's

01:10.760 --> 01:16.490
how push works you'll see that now does works and I can go to the same screen over and over again and

01:16.490 --> 01:19.810
it's pushed to the same stack over and over again.

01:19.820 --> 01:26.030
Now of course you might wonder why would I want to push the screen I'm already on onto this again.

01:26.030 --> 01:32.150
Now in many apps you might not need this but let's say you're building an app like like Dropbox where

01:32.150 --> 01:33.370
you have folders.

01:33.380 --> 01:35.440
But we need which your users can navigate.

01:35.570 --> 01:38.330
If you're in a folder you want to go to a never folder.

01:38.330 --> 01:44.960
Now each folder is the same folder screen technically just with different content loaded into it in

01:44.960 --> 01:50.720
such a case you might want to go from folder A to B which uses the same component the same screen in

01:50.720 --> 01:56.540
the end but with different content in such a case you could use push to still be able to push that new

01:56.540 --> 02:02.580
screen which has the same screen onto the stack and load the same screen with different content.

02:02.600 --> 02:05.860
This would be one scenario where you could need this in this app.

02:05.870 --> 02:11.720
We don't need it so there's no need for a push but you have this in scenarios where navigate wouldn't

02:11.720 --> 02:13.100
take you to that screen.

02:13.100 --> 02:15.830
Push always will when inside of a stack.

02:15.830 --> 02:23.630
Navigator here however a will revert is to navigate which takes object with a route name which then

02:23.630 --> 02:31.800
points at categories because here we absolutely don't need push status category meals though so this

02:31.800 --> 02:33.330
will do for this app.

02:33.330 --> 02:36.370
Now you also have other explicit navigation options.

02:36.420 --> 02:39.600
Let's say from the category meal screen you want to be able to go back.

02:39.840 --> 02:45.330
Well of course we are able to go back with the help of this back button but it's also not that untypical

02:45.360 --> 02:51.140
that in some apps you have some other thing your users can do where you want to take them back then.

02:51.150 --> 02:55.890
For example let's say you're on the page where you can set up some configuration and when you click

02:55.890 --> 03:01.180
the save button you want to save that configuration and you'll also want to leave the screen.

03:01.290 --> 03:07.410
Now for this scenario you might want to be able to trigger a back navigation manually and don't wait

03:07.410 --> 03:13.260
for the user to press the back button because that might force the user to press a safe button first

03:13.260 --> 03:17.040
and then go back manually which is not the best user experience.

03:17.070 --> 03:24.210
So here I will kind of simulate this by just having a go back button here in our screen.

03:24.210 --> 03:30.090
So in our J as X code and when we press this I want to be able to go back a manually want to trigger

03:30.090 --> 03:31.790
a back navigation.

03:31.950 --> 03:37.740
You can do this with the help of the navigation prop because there you have a go back method you can

03:37.740 --> 03:41.030
call and this does just what it sounds like.

03:41.230 --> 03:46.380
We safe doesn't I go to the meals if I click go back we play the back navigation.

03:46.380 --> 03:51.960
Technically this pops off the screen we're on and goes back to the previous screen in the stack.

03:51.960 --> 03:58.860
Therefore as an alternative to go back if you're in a stack navigator you also have pop which well does

03:58.860 --> 04:01.740
what the name implies it pops off the current screen on the stack.

04:02.010 --> 04:08.730
And since you always see the topmost screen on your device does all the place the back navigation.

04:08.730 --> 04:14.240
So this is an alternative to going back differences that pop can only be used if you're in the stack

04:14.240 --> 04:14.980
navigator.

04:15.090 --> 04:19.770
Go back is also available in our navigators which we'll use later in this module

04:22.340 --> 04:27.000
sometimes you'll also want to go back all the way to your parent component.

04:27.140 --> 04:34.730
Let's say here in the meal detailed screen there we can also add a button and in this on this button

04:34.730 --> 04:39.390
here I want to go back to my categories.

04:39.390 --> 04:49.090
Let's say they offer I will add on press and in this function here I can use props navigation pop.

04:49.090 --> 04:49.360
Right.

04:49.360 --> 04:56.860
Because this takes us back Well the problem with that of course is it takes me back but only to the

04:56.860 --> 04:59.230
screen before this screen so to the screen.

04:59.230 --> 05:03.250
I came from I want to go back to the categories screen though.

05:03.250 --> 05:06.040
So I want to skip two screens at the same time.

05:06.250 --> 05:08.450
For this you have pop to top.

05:08.560 --> 05:14.260
This is another method you can call which simply pops of all screens from the stack and takes you back

05:14.470 --> 05:15.970
to your root screen.

05:16.390 --> 05:21.100
So if you click this we get the back animation and we're back on our root screen which in this case

05:21.220 --> 05:22.720
is to category screen.

05:22.720 --> 05:27.570
So that's an alternative here now with that.

05:27.580 --> 05:33.780
There's only one last possible Navigation Act you might sometimes need let's say on the categories screen

05:34.050 --> 05:41.880
you want to go to category meals but you don't want to add it to the stack but you want to instead replace

05:41.940 --> 05:47.790
your current component in the stack with it so that there is still only one screen in the stack but

05:47.790 --> 05:49.570
that screen extend a new page.

05:49.620 --> 05:54.630
That also means that you won't be able to go back on the new page because the stack would be empty thereafter

05:54.630 --> 05:56.820
which means your app closes.

05:56.820 --> 06:00.990
So in case you want to do that you can use replace replace.

06:01.020 --> 06:09.150
Also just like push takes just a identifier like this and replace also takes you to the new screen.

06:09.150 --> 06:15.240
It plays no forward animation though instead it instantly jumps there and you get no back button automatically

06:15.240 --> 06:19.030
because the stack is empty otherwise this is the only screen.

06:19.200 --> 06:24.540
This could be used for example on a log in screen where a user did sign in and once signed into user

06:24.540 --> 06:26.990
shouldn't be able to go back to the log in screen.

06:27.030 --> 06:32.430
Well then you could simply replace the log and screen with your you are locked in screen with the user

06:32.430 --> 06:34.370
profile or anything like that.

06:34.620 --> 06:39.930
If you still tried to go back nothing happens because you can't go back there's nothing else in the

06:39.930 --> 06:44.390
stack therefore of course replace is absolutely not what we need in this app.

06:44.430 --> 06:51.600
I just wanted to introduce this here though we will see more available patterns and how you go back

06:51.630 --> 06:56.810
and forth between pages and when you might want to replace or switch between screens like this for all

06:56.830 --> 07:02.610
this module just wanted to introduce it already at this point still here I will go back to navigate

07:02.910 --> 07:10.680
with the root name pointing at category meals and with Dad you had an overview of some of the basic

07:10.800 --> 07:16.230
navigation methods that allow you to go back and forth between your screens as I mentioned we'll of

07:16.230 --> 07:22.500
course see many patterns in action throughout this module for now this is it and I'd say with that out

07:22.500 --> 07:30.180
of the way it's time to actually add some meat to this application make sure it's a more realistic application

07:30.330 --> 07:33.030
and not just a dummy application like it currently is.
