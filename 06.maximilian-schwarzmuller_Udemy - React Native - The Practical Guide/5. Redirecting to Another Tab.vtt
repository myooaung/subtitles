WEBVTT

00:02.370 --> 00:06.260
So we want to make sure that the user is sent to the find place page

00:06.330 --> 00:10.840
once he's done creating a new place and that's important. In share place,

00:11.040 --> 00:16.890
I don't want to navigate here, we could easily do this with this props navigator and then there actually

00:16.890 --> 00:21.050
is a switch to tab function you can use,

00:21.060 --> 00:27.450
you can always check out the official react native navigation documentation to learn about all possible

00:27.450 --> 00:28.130
functions.

00:28.290 --> 00:32.430
So there is such a function, we could pass a javascript object to that

00:32.700 --> 00:39.570
and for this object, we would have to set a tab index property which is the well index of the tab we

00:39.570 --> 00:40.140
want to go to,

00:40.140 --> 00:41.730
so it starts at zero,

00:41.730 --> 00:43.630
this would be the first tab.

00:43.680 --> 00:49.520
Now this would work but it would immediately go there without waiting for this creation process to finish,

00:49.590 --> 00:55.590
I want to show the user this spinner though and I want to show that something is happening, instead

00:55.590 --> 01:02.430
therefore I want to navigate from within my store. There if we have a look at the places file, we have

01:02.430 --> 01:05.480
this add place action creator and

01:05.650 --> 01:11.500
there we do all these add place stuff but here in this then block, we're finally done,

01:11.550 --> 01:15.060
we are in the success version of this

01:15.210 --> 01:20.310
and we created a place. Now therefore here when we stop loading,

01:20.310 --> 01:27.450
I want to navigate away, to ensure or to achieve this, I'll actually add a new action type,

01:32.170 --> 01:34.020
place added maybe

01:34.530 --> 01:38.600
and this should be triggered when the place indeed was added. For this,

01:38.620 --> 01:47.050
I'll also create a new action creator, maybe right below the add place action creator, I'll name it place added, it

01:47.380 --> 01:50.910
takes no argument but it does one thing,

01:50.980 --> 01:53.530
it returns a new action object,

01:53.590 --> 01:57.520
so no asynchronous action, no function action creator,

01:57.580 --> 02:04.240
a plain vanilla action creator where I just set the type and I set the type to this type I just created so I'll

02:04.240 --> 02:05.240
import it here,

02:05.250 --> 02:07.860
place added, from action types,

02:07.870 --> 02:09.340
I'll import it here

02:09.370 --> 02:13.190
and then here I'll set this as the type, place added.

02:13.330 --> 02:20.140
With that, I can go to my reducer, to the places reducer and add a new case where I want to handle this

02:20.140 --> 02:28.910
case that we have added a place, so I'll import it too, place added and then add place, add it here.

02:28.960 --> 02:35.740
Now there I then want to return my new state where I copy the old state but where I want to set a

02:35.740 --> 02:38.280
new property which I have yet to add

02:38.540 --> 02:48.200
and I'll name it place added which initially is false, I'll here set it to true, place added should

02:48.200 --> 02:49.580
be true here.

02:51.210 --> 02:57.010
Now to ever have a chance of getting out of this, I'll add another action type, export

02:57.030 --> 03:01.820
const, start add place maybe

03:05.820 --> 03:09.390
because I need to be able to reset this at some point of time

03:09.480 --> 03:13.590
otherwise we later get in a state where we can never add a second place.

03:13.880 --> 03:16.210
So I'll also add an action creator for this,

03:16.260 --> 03:23.550
maybe right at the start of my places action creator file, start add place, like that.

03:23.550 --> 03:31.140
This also takes no argument but will return a javascript object which is representing the action we're

03:31.170 --> 03:32.240
dispatching,

03:32.430 --> 03:39.960
so I'll also import this start add place type and assign it here to this type. In my reducer,

03:39.960 --> 03:42.110
besides handling place added,

03:42.120 --> 03:49.710
I'll then also add a case for this new action type, start add place which I also import and here we'll

03:50.010 --> 03:52.350
handle it, start add place, there

03:52.420 --> 04:02.740
I will return my old state but I will also set place added to false. With that reducer updated, let's

04:02.760 --> 04:05.880
save it, we can now use these new actions.

04:05.910 --> 04:12.030
First of all in my index.js file in the actions folder, I want to export them so I'll export my place

04:12.060 --> 04:17.810
added action creator and my start add place action creator and restructure all of that,

04:17.880 --> 04:26.880
so that is what I changed, just added these two exports. And now in share place, I want to dispatch start

04:26.880 --> 04:27.740
place add

04:27.750 --> 04:34.250
whenever we visit this page and I want to dispatch this other action whenever we're done adding a place,

04:34.290 --> 04:37.930
so from within my places.js file, here in this

04:37.930 --> 04:40.800
then block where I dispatch UI stop loading,

04:40.950 --> 04:45.660
I also want to dispatch place added, just like this.

04:45.690 --> 04:51.460
Now we have this place added state and I want to connect it to my share place, there

04:51.540 --> 04:59.310
I already have map state to props, I will add place added at the bottom and map it to state places,

04:59.310 --> 05:04.950
that's the slice created by this places reducer and then here, we added a

05:04.980 --> 05:13.770
place added property, that's this property we're setting here, place added. So now I'm binding to this and

05:13.770 --> 05:20.790
now I can use this place added prop in my share place component and I can use it to redirect the user

05:20.850 --> 05:26.790
whenever this changes. For that, I'll implement another lifecycle

05:26.790 --> 05:27.490
hook here,

05:30.300 --> 05:40.120
componentDidUpdate, there we will receive the previous props and the previous state but I don't need

05:40.120 --> 05:42.710
either so I don't need to get these arguments,

05:42.940 --> 05:48.670
instead what I want to do here is I simply want to check if this props place added,

05:48.880 --> 05:55.930
if this is true because if it is true, then I will use this props navigator provided by react native

05:55.930 --> 06:05.450
navigation to call switch to tab and switch to the tab with the index one, so I'll pass an object with

06:05.480 --> 06:05.880
tab

06:05.890 --> 06:08.660
index 0, excuse me 0 not 1.

06:08.980 --> 06:16.170
So this will ensure that I go there whenever we did successfully update,

06:16.310 --> 06:24.340
so whenever this props place added essentially switched to true. Thereafter, I could already dispatch

06:24.380 --> 06:29.920
the action to switch it back to false though, so I could import this action,

06:29.950 --> 06:34.820
let's add an import at the top and point to this index file

06:34.840 --> 06:41.060
in my store actions folder and from there, I can get my

06:44.030 --> 06:51.590
start add place action and now I can bind it at the bottom of the share place screen,

06:51.590 --> 06:53.590
here we have on add place,

06:53.600 --> 06:56.330
I also want to have on start add

06:56.360 --> 07:05.780
place, so a function with no arguments where I in the end just dispatch place start add place as an action creator like

07:05.780 --> 07:06.450
this.

07:06.560 --> 07:10.800
Now I can call on start add place to essentially,

07:11.030 --> 07:17.700
well reset this, so here I can call this props on start add place.

07:17.840 --> 07:21.350
I will comment this out though because I first of all I want to see how it behaves

07:21.350 --> 07:26.020
if we don't do this and then I will later see where else we could do that.

07:26.030 --> 07:29.050
So for now, we're just switching the tab whenever we're done,

07:29.090 --> 07:30.320
let's see if that all works.

07:30.320 --> 07:34.360
Make sure that all files are saved and then reload your application,

07:34.520 --> 07:36.820
I'll also connect it to my debugger here

07:37.580 --> 07:41.180
and then I will again pick an image here from the library,

07:41.210 --> 07:52.240
maybe this one, locate myself and share this place and we're staying on the page. Once we're done we're

07:52.240 --> 07:55.980
redirected to find places, if I go back to share place,

07:56.230 --> 07:58.600
I can work on this page again though.

07:59.960 --> 08:01.930
If I do pick an image here,

08:03.690 --> 08:09.570
I am redirected though, the reason for this is that I can navigate back because navigating there

08:09.660 --> 08:11.520
doesn't trigger componentDidMount 

08:11.820 --> 08:17.940
but as soon as I change something on the page, maybe type here, I trigger a re-render because I update

08:17.940 --> 08:23.670
my state, so componentDidMount is executed and place added still will be true because we never

08:23.670 --> 08:24.830
reset it.

08:24.900 --> 08:27.890
Now calling this right after switching would reset it

08:28.170 --> 08:36.630
but there also is a different place where we can do that and that place is using a react native navigation

08:37.320 --> 08:42.420
hook so to say, so a function which is executed when this page becomes visible.

08:42.420 --> 08:47.880
Now one important thing, this page, this screen is not unmounted if we navigate away,

08:47.880 --> 08:49.210
I mentioned this before, 

08:49.440 --> 08:51.180
it's just hidden so to say

08:51.420 --> 08:57.990
but if you want to know when the user visits it, you can use a functionality provided by react native

08:57.990 --> 09:04.130
navigation. We actually already register navigator events here in the constructor

09:04.170 --> 09:10.390
using a react native navigation feature therefore we have this on navigator event and there, we check if the

09:10.410 --> 09:13.800
event type is nav bar button press.

09:13.800 --> 09:19.740
Now let's actually log this event object to see if there is something useful for us.

09:19.800 --> 09:26.360
If I reload the app now and I go back to share place, you'll see here are a couple of logs

09:26.580 --> 09:30.060
and for example we have this will appear ID here,

09:30.060 --> 09:36.840
so we got the screen changed event, will appear and did appear and there also will be will disappear

09:36.900 --> 09:38.360
and did disappear,

09:38.370 --> 09:42.030
so you can really find out if the screen is visible or not.

09:42.030 --> 09:42.990
Now that's great,

09:43.050 --> 09:56.760
I can now check if event type is equal to and there it was screen changed event, so I'll copy that and

09:56.780 --> 10:05.450
if it is, I can check if the event ID is equal to will appear, so right before it becomes visible.

10:05.590 --> 10:12.730
And there, I now want to call this props on start add place to reset this place added prop.

10:14.110 --> 10:17.210
With that change, if we now reload this,

10:17.310 --> 10:20.420
we should be in a state where we can go to this page

10:20.440 --> 10:25.540
and of course, since it's a first time, we have no problem picking anything so we can just try this

10:25.540 --> 10:32.230
out, enter something here and share this place but it'll be interesting once this is done and once

10:32.230 --> 10:34.500
it redirects us to find place.

10:34.500 --> 10:35.870
If I now go back,

10:36.100 --> 10:41.390
you see I can work on this page again and I can also submit everything here again

10:41.530 --> 10:47.790
because now, we essentially reset this, we reset place added.

10:47.860 --> 10:55.330
That is why this is now working and this is how you can use these lifecycle hooks provided by react

10:55.330 --> 10:56.460
native navigation.
