WEBVTT

00:02.170 --> 00:11.170
If you visit the official documentation, you will find the link here under guides where it says javascript

00:11.230 --> 00:12.200
environment,

00:12.200 --> 00:17.020
if you click on that you can learn more about the javascript environment your javascript code runs in

00:17.350 --> 00:19.350
in the react native code.

00:19.360 --> 00:26.290
Now here you also see how it works technically, you can see that it basically runs a javascript instance,

00:26.290 --> 00:32.560
runs your javascript code for you in the native app and always keep in mind, the majority of your code,

00:32.570 --> 00:35.400
all the UI is compiled to native code,

00:35.560 --> 00:40.810
the Javascript instance which is run is really just there to let you execute your logic which you wrote

00:40.810 --> 00:42.090
in Javascript.

00:42.460 --> 00:49.040
And since we run javascript there, of course the question is which javascript features can we use there

00:49.180 --> 00:54.430
because when running Javascript in the browser, the browser we're using determines which features we

00:54.430 --> 00:55.260
can use,

00:55.270 --> 01:01.450
you of course know this if you developed a web app which also has to target older instances of Internet

01:01.450 --> 01:02.040
Explorer

01:02.050 --> 01:09.020
for example, you may have to make some or impose some limitations on the Javascript features you use

01:09.280 --> 01:11.580
and that's also the case here.

01:11.620 --> 01:16.680
You can always have a look at this article to see which features you can use and you can't use

01:17.020 --> 01:21.220
and I recommend doing so because react native is evolving,

01:21.220 --> 01:26.990
so if I just tell you you can't use x y z, that might not be true in a year from now,

01:27.010 --> 01:29.470
so definitely check out this article.

01:29.470 --> 01:36.010
First of all here you see which features you can use in development because as you see here, react native

01:36.010 --> 01:39.420
basically apply some transformations to your code,

01:39.490 --> 01:43.580
so basically allows you to use next gen javascript features during development

01:43.810 --> 01:49.810
and this code will still work once it's shipped to the device. You can use things like arrow functions,

01:49.900 --> 01:51.580
let and const and so on,

01:51.580 --> 01:56.150
all these things we already used in this course which might seem natural to you,

01:56.170 --> 02:02.140
all these things we typically also use in modern react for web applications,

02:02.140 --> 02:03.660
you can use most of them here,

02:03.730 --> 02:06.110
a list can be found here.

02:06.160 --> 02:09.060
Now what's interesting are the polyfills,

02:09.240 --> 02:15.820
here you get access to many important javascript functionalities that typically are only included in

02:15.820 --> 02:18.310
the browser like console log,

02:18.310 --> 02:20.650
we'll have a look at this in the debugging section

02:20.890 --> 02:23.890
or the fact that you can require other things

02:24.130 --> 02:31.600
or the fact that you can send Ajax request with xml http request or the fetch API and that of course

02:31.600 --> 02:37.660
also means you could use a package like axios which builds up on xml http request, that you

02:37.660 --> 02:41.180
have set timeout and set interval and so on.

02:41.200 --> 02:46.900
These are things you can also use in react, in react native I should say and it might seem obvious

02:46.900 --> 02:52.480
to you but actually, this is only the case because react native provides polyfills for this to work

02:52.480 --> 02:58.200
on the native device because it's not running in the browser, it's running on some standalone thread,

02:58.210 --> 03:00.140
always keep that in mind.

03:00.230 --> 03:02.110
There also are things you can't use,

03:02.110 --> 03:05.830
they aren't listed here but if it's not listed here, you can't use it,

03:05.890 --> 03:07.730
that's how you can think about it.

03:07.750 --> 03:16.150
Things you can't use right now for example are the javascript file API, so the API where you can turn some

03:16.720 --> 03:22.060
element, some items, some file into a blob and then upload it for example,

03:22.060 --> 03:27.820
though this support is probably coming in the near future. Most important things should be supported

03:27.880 --> 03:28.360
though,

03:28.450 --> 03:34.010
so in this course we won't really face any issues because some feature wouldn't be supported. Anyways,

03:34.270 --> 03:39.850
have a look at this page to learn what you can use and if you are running into some issue that something

03:39.850 --> 03:40.830
doesn't work,

03:40.840 --> 03:41.970
check out this page

03:42.010 --> 03:46.760
if it's supposed to work because maybe you try using something which isn't supported.
