WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:08.489
Hello and welcome to this video in which we will be discussing a very important topic,

00:00:08.489 --> 00:00:11.730
especially for those who will be taking the exam.

00:00:11.730 --> 00:00:15.315
And that is instance purchasing options.

00:00:15.315 --> 00:00:19.815
Previously, I guess, known as instance launching types.

00:00:19.815 --> 00:00:23.549
But yeah, don't don't take my word for that,

00:00:23.549 --> 00:00:27.495
but what are now known as instance purchasing options.

00:00:27.495 --> 00:00:31.560
And the reason these are so important for your exam is because they

00:00:31.560 --> 00:00:38.684
are topics that are very easy to create.

00:00:38.684 --> 00:00:40.495
Exam questions on.

00:00:40.495 --> 00:00:45.559
Very good questions can be created on,

00:00:45.559 --> 00:00:48.560
you know, asking you in which situations,

00:00:48.560 --> 00:00:53.059
which purchasing, purchasing option would be preferred and so on and so forth.

00:00:53.059 --> 00:00:55.700
So in the hands-on section,

00:00:55.700 --> 00:00:58.070
I'm going to be showing you most of these,

00:00:58.070 --> 00:01:00.049
but I'm not going to be going into

00:01:00.049 --> 00:01:03.710
too much technical detail as to how

00:01:03.710 --> 00:01:07.459
you would arrange of different settings and configurations and that kinda stuff.

00:01:07.459 --> 00:01:13.249
Because what's more important for you is understanding the difference between

00:01:13.249 --> 00:01:19.804
the different purchasing options and knowing when to prefer one over the other.

00:01:19.804 --> 00:01:23.220
And also the advantages of them.

00:01:23.220 --> 00:01:29.709
Each purchasing option compared to the others in terms of price and that kinda stuff.

00:01:29.709 --> 00:01:34.900
So with that, let's go ahead and start by

00:01:34.900 --> 00:01:42.834
seeing the different purchasing options that Amazon EC2 provide you.

00:01:42.834 --> 00:01:50.004
And the main driver behind the person types is obviously the cost.

00:01:50.004 --> 00:01:52.524
Whereas with instance types,

00:01:52.524 --> 00:01:57.924
we select our instances based on whether we want to optimize

00:01:57.924 --> 00:02:03.639
our memory or maximize our storage or whatever, right?

00:02:03.639 --> 00:02:07.894
But with purchasing options,

00:02:07.894 --> 00:02:09.799
you're trying to minimize your costs.

00:02:09.799 --> 00:02:11.719
So you try and come up with

00:02:11.719 --> 00:02:17.390
the best purchasing option that will give you the lowest costs for your goals.

00:02:17.390 --> 00:02:20.210
So you might have just a website that

00:02:20.210 --> 00:02:23.059
you want to keep up and running for the next ten years, right?

00:02:23.059 --> 00:02:29.705
So there's a purchasing option that will make it that that is cheapest possible for you.

00:02:29.705 --> 00:02:32.059
Whereas in another case,

00:02:32.059 --> 00:02:34.039
you are not going to keep it off for ten years.

00:02:34.039 --> 00:02:38.644
You just want a quick data processing job done.

00:02:38.644 --> 00:02:45.530
And for that, you don't care about the reliability or the length of your instances.

00:02:45.530 --> 00:02:49.879
You just want to have as cheap as an option as possible.

00:02:49.879 --> 00:02:52.580
And so there's another purchasing options that will make

00:02:52.580 --> 00:02:56.600
that more economically viable for you, and so on and so forth.

00:02:56.600 --> 00:02:59.840
So that's the main reason why you would have

00:02:59.840 --> 00:03:03.559
to put thought into which purchasing option you should consider.

00:03:03.559 --> 00:03:06.709
Now, the On-Demand instances,

00:03:06.709 --> 00:03:09.050
these are the ones we're familiar with.

00:03:09.050 --> 00:03:11.554
These are the ones we've been doing so far.

00:03:11.554 --> 00:03:18.365
We, you know, the default is an On-Demand instance and this is essentially what,

00:03:18.365 --> 00:03:23.944
you know, where the power of Cloud services like AWS, common replay.

00:03:23.944 --> 00:03:31.070
The fact that you can literally on-demand completely elastically

00:03:31.070 --> 00:03:39.965
allocate virtual computational space herself and terminate it whenever you want,

00:03:39.965 --> 00:03:43.774
you have complete control over and you only pay for what you use.

00:03:43.774 --> 00:03:48.260
This is what so revolutionary about services like AWS.

00:03:48.260 --> 00:03:53.765
And so you just pay by the second for the instances that you launch, That's it.

00:03:53.765 --> 00:03:57.079
And you only pay as long as your instance is running.

00:03:57.079 --> 00:04:00.199
And if you stop it, you don't pay.

00:04:00.199 --> 00:04:00.890
That's it.

00:04:00.890 --> 00:04:05.220
You have complete control over your instances.

00:04:05.560 --> 00:04:11.959
Now, there's a new purchasing option by AWS called the savings plans.

00:04:11.959 --> 00:04:15.829
And these reducer EC2 costs by making,

00:04:15.829 --> 00:04:19.925
by allowing you to make a commitment to a consistent amount of usage

00:04:19.925 --> 00:04:23.780
in USD per hour for a term of one or three years.

00:04:23.780 --> 00:04:30.740
So most of the purchasing options for EC2 that allow you to do long-term commitments.

00:04:30.740 --> 00:04:35.944
They'll either be in terms of one year or three years.

00:04:35.944 --> 00:04:39.875
But saving plans is a relatively new purchasing options,

00:04:39.875 --> 00:04:41.615
or actually it's quite new.

00:04:41.615 --> 00:04:45.230
And we're not going to be going into too much in this course.

00:04:45.230 --> 00:04:47.960
It's a little more of an advanced topic.

00:04:47.960 --> 00:04:50.164
But if you're interested, you can definitely go into it,

00:04:50.164 --> 00:04:53.825
you know, asked to show you how to get to it.

00:04:53.825 --> 00:04:57.784
It'll open up like your cost management counsel on

00:04:57.784 --> 00:05:01.730
AWS and that's a whole nother, be straight there.

00:05:01.730 --> 00:05:05.555
So reserved instances, however,

00:05:05.555 --> 00:05:09.245
also allow you to reduce your EC2 costs by making a commitment

00:05:09.245 --> 00:05:14.000
about the sound to a consistent instant instance configuration.

00:05:14.000 --> 00:05:17.825
And this includes instance types and regions for

00:05:17.825 --> 00:05:21.860
a term of one or three years again, so I'm guessing.

00:05:21.860 --> 00:05:26.435
So again, savings plans are pretty new purchasing option.

00:05:26.435 --> 00:05:30.020
So I'm not sure if it would be in the exam,

00:05:30.020 --> 00:05:31.504
but if it would be,

00:05:31.504 --> 00:05:34.999
most probably they might ask you as a very specific question on

00:05:34.999 --> 00:05:38.959
what the difference between savings plan or an reserved instances are.

00:05:38.959 --> 00:05:40.850
But I doubt it sends,

00:05:40.850 --> 00:05:43.699
these are still pretty new and it's being established.

00:05:43.699 --> 00:05:45.439
But again, you know, for safe measure you

00:05:45.439 --> 00:05:48.994
can focus on studying the difference between these two.

00:05:48.994 --> 00:05:51.590
But my slide should be pretty.

00:05:51.590 --> 00:05:55.084
They should be quite comprehensive,

00:05:55.084 --> 00:05:59.600
at least enough for you to really understand the difference between these instance types.

00:05:59.600 --> 00:06:01.744
But if you do want to study further,

00:06:01.744 --> 00:06:06.815
maybe you do want to look up specifically what differentiates saving plans,

00:06:06.815 --> 00:06:09.710
savings plans from Reserved Instances.

00:06:09.710 --> 00:06:14.809
So I will be going into more depth on Reserved Instances but not savings plans.

00:06:14.809 --> 00:06:21.094
And then we have very interesting purchasing type called Spot instances.

00:06:21.094 --> 00:06:25.174
And these allow you to request unused EC2 instances.

00:06:25.174 --> 00:06:33.620
And this will, this will be what will truly significantly reduce your costs.

00:06:33.620 --> 00:06:36.140
If you really are looking for the cheapest,

00:06:36.140 --> 00:06:41.299
cheapest possible use of cloud computation,

00:06:41.299 --> 00:06:44.000
spot instances are the way to go.

00:06:44.000 --> 00:06:46.429
And I'm gonna be showing you how,

00:06:46.429 --> 00:06:50.869
you know how to do all of that and how to look at the prices and that kinda stuff.

00:06:50.869 --> 00:06:52.760
And yeah, so i'll,

00:06:52.760 --> 00:06:54.529
I'll go into more depth in the following slides.

00:06:54.529 --> 00:06:56.584
I don't want to give too much away now.

00:06:56.584 --> 00:07:02.389
And then we have dedicated hosts where you pay for physical host and this

00:07:02.389 --> 00:07:08.795
becomes completely dedicated to you and you and your instances.

00:07:08.795 --> 00:07:13.819
And so you can bring your existing licenses and so on and so forth.

00:07:13.819 --> 00:07:16.459
This will probably be like,

00:07:16.459 --> 00:07:18.499
I doubt a lot of you will have to use this.

00:07:18.499 --> 00:07:21.860
This is very, or maybe you will on the enterprise here,

00:07:21.860 --> 00:07:25.039
but and then we have dedicated instances where you

00:07:25.039 --> 00:07:28.730
pay by the hour for instances that run on a single tenant hardware.

00:07:28.730 --> 00:07:33.320
So single tenant is where you have, you know,

00:07:33.320 --> 00:07:35.629
and the hardware is dedicated to you,

00:07:35.629 --> 00:07:37.145
but you're paying for the instances,

00:07:37.145 --> 00:07:38.554
not for the hardware,

00:07:38.554 --> 00:07:40.549
as in the case of dedicated host.

00:07:40.549 --> 00:07:43.265
Again, I'm not gonna go into too much detail on these.

00:07:43.265 --> 00:07:47.974
Like just as long as you memorize these,

00:07:47.974 --> 00:07:50.479
you should be it should be good to go.

00:07:50.479 --> 00:07:53.270
You can maybe lockups and use cases on the differences,

00:07:53.270 --> 00:07:55.924
but, you know, it's pretty straightforward.

00:07:55.924 --> 00:07:57.994
And then we have capacity reservations.

00:07:57.994 --> 00:08:00.634
These are also pretty new, if I'm not mistaken.

00:08:00.634 --> 00:08:04.009
And they allow you to reserve capacity for your EC2 instances

00:08:04.009 --> 00:08:07.925
in a specific AZ for any duration.

00:08:07.925 --> 00:08:10.520
And again, these also I won't be going into too much.

00:08:10.520 --> 00:08:15.650
So mainly the three or four main purchasing options

00:08:15.650 --> 00:08:18.815
that you should really know very well are the On-Demand instances,

00:08:18.815 --> 00:08:24.289
the Reserved Instances, the spot instances in a dedicated hosts or instances, okay?

00:08:24.289 --> 00:08:27.530
So On-Demand instances, we're familiar with these.

00:08:27.530 --> 00:08:30.755
You pay for compute capacity by the second.

00:08:30.755 --> 00:08:33.320
And the prices are fixed, right?

00:08:33.320 --> 00:08:35.030
You can look them up based on the region,

00:08:35.030 --> 00:08:36.769
but based on availability zone.

00:08:36.769 --> 00:08:39.920
And you have no long-term commitments,

00:08:39.920 --> 00:08:41.974
you can terminate at any point.

00:08:41.974 --> 00:08:44.840
You don't have to sign on for a year,

00:08:44.840 --> 00:08:48.320
for three years or for any period of duration for that matter.

00:08:48.320 --> 00:08:53.210
And you have full control over your instances lifecycles.

00:08:53.210 --> 00:08:55.400
You get to decide when to launch, stop,

00:08:55.400 --> 00:08:58.700
hibernate, start, reboot, or terminate your instances.

00:08:58.700 --> 00:09:02.585
Like quite comprehensively so far in this section.

00:09:02.585 --> 00:09:05.480
And these are recommended for applications with

00:09:05.480 --> 00:09:09.109
short-term irregular workloads that cannot be interrupted.

00:09:09.109 --> 00:09:13.145
Now, the reason for that is as opposed to, for example,

00:09:13.145 --> 00:09:16.429
a reserved instance where you'll be paying

00:09:16.429 --> 00:09:22.009
for essentially reserving for at least a year or three years.

00:09:22.009 --> 00:09:29.135
And so if you have an application that doesn't require being up for that long.

00:09:29.135 --> 00:09:31.910
There's no point in paying for all of that.

00:09:31.910 --> 00:09:34.430
So on the man and the way to go,

00:09:34.430 --> 00:09:36.020
you could ask why,

00:09:36.020 --> 00:09:37.864
why not Spot instances?

00:09:37.864 --> 00:09:39.155
Since they're much cheaper,

00:09:39.155 --> 00:09:43.819
but Spot instances can be interrupted and they will be interrupted.

00:09:43.819 --> 00:09:48.890
And so they're not suitable for applications that cannot be interrupted.

00:09:48.890 --> 00:09:52.864
So that's where on-demand instances definitely do have their place.

00:09:52.864 --> 00:09:57.965
And they are very useful and you will be using them quite often.

00:09:57.965 --> 00:10:01.399
Now, when it comes to reserve instances,

00:10:01.399 --> 00:10:04.009
they provide you with significant savings on

00:10:04.009 --> 00:10:07.655
your EC2 costs compared to on-demand instance pricing.

00:10:07.655 --> 00:10:12.184
And the reason for that is because you are paying up front or your,

00:10:12.184 --> 00:10:14.255
or even if you're not paying up front,

00:10:14.255 --> 00:10:15.650
because you get to choose how you pay,

00:10:15.650 --> 00:10:18.979
but you're at least guaranteeing that you

00:10:18.979 --> 00:10:24.005
will be paying for at least a year or three years.

00:10:24.005 --> 00:10:26.944
And because of that inability to the wholesale effect,

00:10:26.944 --> 00:10:31.249
you can get a much lower price.

00:10:31.249 --> 00:10:33.949
Now, reserved instances you might argue

00:10:33.949 --> 00:10:38.915
are somewhat contrary to the concept of cloud computation.

00:10:38.915 --> 00:10:45.470
Where, you know, the whole focus is on on-demand and elasticity and an Afghanistan.

00:10:45.470 --> 00:10:55.414
And so AWS does allow you to sell these on a secondary market.

00:10:55.414 --> 00:11:02.960
So that that kind of alleviates the problem being locked into year three year contract.

00:11:02.960 --> 00:11:06.754
So the Reserved Instances are not physical instances.

00:11:06.754 --> 00:11:11.809
They're just a billing discount that's applied to an On-Demand instance in your account.

00:11:11.809 --> 00:11:14.419
So my guaranteeing right by

00:11:14.419 --> 00:11:18.379
promising that you will be paying for that On-Demand instance for a year,

00:11:18.379 --> 00:11:21.575
for three years, you get a billing discount.

00:11:21.575 --> 00:11:23.404
So that's essentially what a Reserved Instances.

00:11:23.404 --> 00:11:25.294
And that might be a question on the exam as well.

00:11:25.294 --> 00:11:27.065
So watch out for that.

00:11:27.065 --> 00:11:32.390
And in order for On-Demand instances to qualify for this billing discount,

00:11:32.390 --> 00:11:34.610
they must match certain attributes.

00:11:34.610 --> 00:11:37.819
And this can be based on instance, type or region.

00:11:37.819 --> 00:11:43.684
And you can look that up because that might be subject to change, right?

00:11:43.684 --> 00:11:48.304
So when you do plan on purchasing a reserved instance,

00:11:48.304 --> 00:11:53.194
you can definitely look it up very easily on AWS stocks on which

00:11:53.194 --> 00:11:59.929
instance types and regions will be granted this billing discount.

00:11:59.929 --> 00:12:02.329
So like we said,

00:12:02.329 --> 00:12:06.199
you can purchase them for a one-year or three-year commitment.

00:12:06.199 --> 00:12:09.440
And obviously, due to the wholesaler fact,

00:12:09.440 --> 00:12:11.675
the longer the commitment that cheaper

00:12:11.675 --> 00:12:15.874
the discount or the greater that is kinda should say the cheaper price.

00:12:15.874 --> 00:12:19.160
And hypothetically, you could save

00:12:19.160 --> 00:12:23.780
up to 75 percent in cost by choosing reserved instances over On-Demand one.

00:12:23.780 --> 00:12:28.144
So this is one of the biggest mistakes I see from people.

00:12:28.144 --> 00:12:30.769
You know, they have an application that they're going to keep

00:12:30.769 --> 00:12:33.350
running for as long as they can, right?

00:12:33.350 --> 00:12:36.395
They have no intentions to take it down.

00:12:36.395 --> 00:12:40.279
And they just, when they first started out with a project,

00:12:40.279 --> 00:12:43.729
they launched an On-Demand instance and,

00:12:43.729 --> 00:12:46.999
and they just keep the app running on it.

00:12:46.999 --> 00:12:49.610
And why? If you're going to keep it,

00:12:49.610 --> 00:12:52.010
if you intend to keep it on for at least a year,

00:12:52.010 --> 00:12:56.929
why not just purchase a reserved instance and save up to 35 percent, right?

00:12:56.929 --> 00:13:02.719
And so that's something that you could really use to save costs for a corporation.

00:13:02.719 --> 00:13:08.239
Or another reason, this might happen to be wise because initially there on the free tier,

00:13:08.239 --> 00:13:11.360
so they're not really caring about saving on costs.

00:13:11.360 --> 00:13:16.460
So they just launch an instance in the free tier and they keep it running.

00:13:16.460 --> 00:13:18.694
After a year, it runs out and they start pain.

00:13:18.694 --> 00:13:20.375
And by then, you know,

00:13:20.375 --> 00:13:22.820
they they still haven't thought about

00:13:22.820 --> 00:13:25.505
using reserved instances or revenue or know about them.

00:13:25.505 --> 00:13:27.650
So definitely watch out for that.

00:13:27.650 --> 00:13:30.379
And that's something that you read books about to your boss that

00:13:30.379 --> 00:13:35.610
you're really saving them on cost.

00:13:37.090 --> 00:13:42.785
And so, yeah, basically reserved instances are very good.

00:13:42.785 --> 00:13:45.289
If you have applications, like I said,

00:13:45.289 --> 00:13:49.280
that will be running for a long time,

00:13:49.280 --> 00:13:53.090
or you're willing to commit to this longer term.

00:13:53.090 --> 00:13:55.774
Because you know that you will be getting your money's worth,

00:13:55.774 --> 00:13:59.100
because you will be using that instance for that long.

00:13:59.590 --> 00:14:05.495
And AWS has acknowledged the fact that

00:14:05.495 --> 00:14:12.740
reserved instances are somewhat contrary to the cloud computation philosophy.

00:14:12.740 --> 00:14:17.914
So they have created something called a reserved instance marketplace.

00:14:17.914 --> 00:14:20.569
Specifically secondhand marketplace where you can

00:14:20.569 --> 00:14:24.080
sell your reserved instances and therefore

00:14:24.080 --> 00:14:27.979
alleviating the burden of committing to

00:14:27.979 --> 00:14:32.450
a longer term than you would for an On-Demand instance.

00:14:32.450 --> 00:14:36.275
So, you know, you could, you know,

00:14:36.275 --> 00:14:38.480
I I myself don't have too much experience

00:14:38.480 --> 00:14:42.409
selling reserved instances on the reserved instance marketplace.

00:14:42.409 --> 00:14:45.784
But I'm sure that, you know,

00:14:45.784 --> 00:14:50.795
you might be able to still get quite a bit of a discount without having to

00:14:50.795 --> 00:14:53.614
commit to a year or three year contract or

00:14:53.614 --> 00:14:56.974
are not having to pay for a year or for three years.

00:14:56.974 --> 00:14:59.479
Because you'd use as much as you need to,

00:14:59.479 --> 00:15:03.574
say nine months you need a server for.

00:15:03.574 --> 00:15:07.189
And then you could potentially sell it on the marketplace and it would

00:15:07.189 --> 00:15:11.330
potentially be cheaper than you having rented out a,

00:15:11.330 --> 00:15:14.330
an On-Demand instance for nine months.

00:15:14.330 --> 00:15:18.890
So that's something to also look into.

00:15:18.890 --> 00:15:23.509
Now, Spot instances are very interesting concept.

00:15:23.509 --> 00:15:26.630
And I'm going to try to do it justice.

00:15:26.630 --> 00:15:28.910
And I'm going to try to give you more of

00:15:28.910 --> 00:15:34.640
a practical hands-on approach in the latter part of this video.

00:15:34.640 --> 00:15:36.829
But bear with me,

00:15:36.829 --> 00:15:39.244
try and understand this concept.

00:15:39.244 --> 00:15:49.370
I'm essentially a Spot instances are unused EC2 instances that AWS normally would have to

00:15:49.370 --> 00:15:54.949
just leave unused because there's just those instance that those spots within

00:15:54.949 --> 00:16:00.950
their datacenters that remain unused for certain parts of time for,

00:16:00.950 --> 00:16:02.510
for various reasons, right?

00:16:02.510 --> 00:16:05.719
And instead of remaining empty,

00:16:05.719 --> 00:16:08.929
which it That's what was happening for a long time.

00:16:08.929 --> 00:16:12.169
They've decided to utilize this empty space instead of saying,

00:16:12.169 --> 00:16:14.360
And when I say empty space,

00:16:14.360 --> 00:16:17.194
I'm not talking about like racks and racks next to each other.

00:16:17.194 --> 00:16:21.634
Empty, unused computational space. I'm talking about.

00:16:21.634 --> 00:16:24.829
Maybe there's a partition or maybe

00:16:24.829 --> 00:16:30.470
there's a placement group that's using up in a certain racks,

00:16:30.470 --> 00:16:34.069
but they are not using up all the space uncertain rack.

00:16:34.069 --> 00:16:36.469
So like in-between different partitions,

00:16:36.469 --> 00:16:39.560
in between different users in different availability zones.

00:16:39.560 --> 00:16:45.560
There are some instances here and there that briefly remain unused,

00:16:45.560 --> 00:16:47.884
and so on and so forth, because it's impossible for

00:16:47.884 --> 00:16:50.990
AWS to constantly have all its interests being used.

00:16:50.990 --> 00:16:52.519
Obviously, if that were the case,

00:16:52.519 --> 00:16:54.560
that would be critical.

00:16:54.560 --> 00:16:59.059
That would be I would not be a good thing for AWS.

00:16:59.059 --> 00:17:00.530
I mean, they're running out of space.

00:17:00.530 --> 00:17:06.979
So essentially AWS came up with Spot instances as a way to utilize empty space.

00:17:06.979 --> 00:17:09.244
So on their end,

00:17:09.244 --> 00:17:10.639
they are able to utilize it,

00:17:10.639 --> 00:17:11.854
So it's a win for them.

00:17:11.854 --> 00:17:14.569
And on our end as the user,

00:17:14.569 --> 00:17:18.815
we are able to read them for very cheap prices.

00:17:18.815 --> 00:17:24.709
So it's a win-win for both both parties because otherwise they would remain unused.

00:17:24.709 --> 00:17:27.199
So AWS said, you know,

00:17:27.199 --> 00:17:33.905
a diverse figure that instead of the morning unused and they're making $0 off of it,

00:17:33.905 --> 00:17:39.620
they can make a much smaller amount than they would on On-Demand instances.

00:17:39.620 --> 00:17:42.979
But that's infinitely more than 0, right?

00:17:42.979 --> 00:17:44.660
And then we'd also get cheap instances.

00:17:44.660 --> 00:17:48.320
So, and that's essentially what spot instances are.

00:17:48.320 --> 00:17:52.865
There. Costs are much less than a 100 and prices on the On-Demand instances.

00:17:52.865 --> 00:17:58.010
And yeah, and so if you design

00:17:58.010 --> 00:18:05.389
your whatever you need to use EC2 for around the concept of spot instances,

00:18:05.389 --> 00:18:12.110
you can get significantly steep discounts and really low your EC2 costs.

00:18:12.110 --> 00:18:14.584
I'm talking like quite a lot.

00:18:14.584 --> 00:18:19.339
So it's good to know how to request spot instances and all of that.

00:18:19.339 --> 00:18:21.440
I'm controller show you how to do that.

00:18:21.440 --> 00:18:26.030
Now the hourly price for a Spot instances called a spot price,

00:18:26.030 --> 00:18:31.955
and this will change based on the demand of the spot instances.

00:18:31.955 --> 00:18:36.229
So you can look at the historical data of

00:18:36.229 --> 00:18:41.974
what different instances in different spot pulls have been at.

00:18:41.974 --> 00:18:43.715
And based on that, you can determine,

00:18:43.715 --> 00:18:45.019
you can bid on a price.

00:18:45.019 --> 00:18:50.150
And if your, if your price is higher than the Spot Instance price,

00:18:50.150 --> 00:18:53.704
then you, you will be granted that Spot Instance.

00:18:53.704 --> 00:18:56.599
So again, it does sound a little bit confusing at first,

00:18:56.599 --> 00:18:57.979
but just bear with me.

00:18:57.979 --> 00:19:01.504
It's a very cool concept and it's not too difficult to understand.

00:19:01.504 --> 00:19:04.820
So the Spot Instance is set for

00:19:04.820 --> 00:19:08.600
each instance type in each availability zone by Amazon EC2.

00:19:08.600 --> 00:19:13.865
So there are things called spot pools.

00:19:13.865 --> 00:19:17.209
And these all share the same instance type,

00:19:17.209 --> 00:19:18.980
the same availability zone,

00:19:18.980 --> 00:19:21.050
and the same operating system, et cetera.

00:19:21.050 --> 00:19:27.090
And they will share a spot price and that price will fluctuate.

00:19:28.000 --> 00:19:32.000
And the spot prices adjusted gradually based on

00:19:32.000 --> 00:19:35.780
the long-term supply and demand of spot instances.

00:19:35.780 --> 00:19:39.199
So if there's higher demand and this might,

00:19:39.199 --> 00:19:45.380
you might notice a great variability between availability zones.

00:19:45.380 --> 00:19:47.224
If it has a higher demand for

00:19:47.224 --> 00:19:50.810
Spot instances in a particular availability zone or a particular region.

00:19:50.810 --> 00:19:52.519
The price is there might be higher.

00:19:52.519 --> 00:19:59.719
So if your application is not dependent on availability zone or region,

00:19:59.719 --> 00:20:05.700
that, that might also be something to consider to really reduce your costs.

00:20:05.710 --> 00:20:11.480
So Spot instances run whenever capacity is available and

00:20:11.480 --> 00:20:18.260
the maximum price per hour for your request exceeds the spot price.

00:20:18.260 --> 00:20:21.844
So essentially, if the spot price is at x

00:20:21.844 --> 00:20:26.419
currently and you've been x plus 1 and you have,

00:20:26.419 --> 00:20:28.880
you've put in a spot request,

00:20:28.880 --> 00:20:33.184
you will be granted it as long as there is capacity available, right?

00:20:33.184 --> 00:20:38.555
Because there is a chance there is a chance that your maximum price per hour,

00:20:38.555 --> 00:20:44.660
your request is much greater than the current price of the Spot Instance,

00:20:44.660 --> 00:20:47.629
but there might just not be any capacity available.

00:20:47.629 --> 00:20:52.414
So these two conditions have to be met for you to be granted.

00:20:52.414 --> 00:20:54.215
Your request.

00:20:54.215 --> 00:20:58.489
Spot instances are uneffective choice if you can be flexible

00:20:58.489 --> 00:21:02.270
about when your applications run and if your applications can be interrupted.

00:21:02.270 --> 00:21:07.249
So they are definitely not good if you're going to be using a single spot instance

00:21:07.249 --> 00:21:13.475
to launch a website that supposed to be running full time or,

00:21:13.475 --> 00:21:20.300
or, or a database or anything that's critical that depends on constantly being online,

00:21:20.300 --> 00:21:23.180
then a single spot instance will now work for

00:21:23.180 --> 00:21:25.925
that you could use a fleet of spot instances.

00:21:25.925 --> 00:21:27.724
They're called spot fleets,

00:21:27.724 --> 00:21:31.474
which unlike a load balancer or something,

00:21:31.474 --> 00:21:38.660
so that you can just jump between Spot instances and when one is interrupted by Amazon,

00:21:38.660 --> 00:21:41.399
you could just jump to another one.

00:21:42.280 --> 00:21:53.135
So a very good example for when Spot instances would be well suited for your,

00:21:53.135 --> 00:21:56.570
your particular task would be for like

00:21:56.570 --> 00:22:01.340
data analysis or batch jobs back on processing, optional task.

00:22:01.340 --> 00:22:05.675
So anything that is not critically dependent

00:22:05.675 --> 00:22:13.099
on the app being constantly online are constantly connected.

00:22:13.099 --> 00:22:14.900
When you're running gait analysis,

00:22:14.900 --> 00:22:19.009
it's okay if one of your spine gets interrupted

00:22:19.009 --> 00:22:23.449
for some time before in another one is allocated for you, right?

00:22:23.449 --> 00:22:26.569
It's okay. Instead of your analysis finishing in

00:22:26.569 --> 00:22:29.780
five hours and my finishing 5.5 hours, right. That's okay.

00:22:29.780 --> 00:22:31.159
It's not critical.

00:22:31.159 --> 00:22:32.600
Or like I said,

00:22:32.600 --> 00:22:37.190
if you have some sort of load balancing and place where you can

00:22:37.190 --> 00:22:42.695
send users to the spot instances that are available that to have capacity.

00:22:42.695 --> 00:22:46.430
And you have enough Spot instances in

00:22:46.430 --> 00:22:50.509
your fleet that at any one time you at least have one up and running.

00:22:50.509 --> 00:22:52.654
So if you can manage all of that,

00:22:52.654 --> 00:22:59.494
you will see quite a bit of discount in how much you're,

00:22:59.494 --> 00:23:03.305
you're having to pay for your EC2.

00:23:03.305 --> 00:23:06.515
But since spot instances are such an important topic,

00:23:06.515 --> 00:23:12.230
I added on another slide just to give you a little bit more information.

00:23:12.230 --> 00:23:14.524
So you can get up to 90 percent

00:23:14.524 --> 00:23:19.819
of on your instances if you spot instances compared to on-demand prices.

00:23:19.819 --> 00:23:27.365
So that's the most cost effective purchasing option.

00:23:27.365 --> 00:23:32.330
Neither reserved instance or the other ones will give you that much, right?

00:23:32.330 --> 00:23:34.834
And, but that comes with a trade-off.

00:23:34.834 --> 00:23:36.499
I get it.

00:23:36.499 --> 00:23:39.739
You do get this potential for a 90% of

00:23:39.739 --> 00:23:45.930
your instances can be interrupted at any point in time.

00:23:46.630 --> 00:23:51.589
But they will give you a two-minute notification before they do that.

00:23:51.589 --> 00:23:55.055
So they will let you know that they need their capacity rack.

00:23:55.055 --> 00:23:57.949
But if you're using a fleet, that shouldn't be a problem.

00:23:57.949 --> 00:24:05.284
And also if you set it up so that if a Spot Instance is reclaimed by Amazon,

00:24:05.284 --> 00:24:09.800
a new request is put in automatically so that as soon

00:24:09.800 --> 00:24:13.460
as another spot instances is available with capacity,

00:24:13.460 --> 00:24:15.809
it will be allocated to you.

00:24:15.820 --> 00:24:19.910
Now, when Spot Instance are actually running,

00:24:19.910 --> 00:24:23.420
they're the exact same as On-Demand instances because remember we said spot instances are

00:24:23.420 --> 00:24:28.295
just the extra instances running around, like laying around.

00:24:28.295 --> 00:24:30.394
The extra On-Demand instances,

00:24:30.394 --> 00:24:36.680
instances that would normally be sold at on on-demand prices, but they're not.

00:24:36.680 --> 00:24:39.769
They're just empty and they're waiting.

00:24:39.769 --> 00:24:41.555
And instead of them waiting,

00:24:41.555 --> 00:24:46.235
Amazon offers them up for, for, for use.

00:24:46.235 --> 00:24:48.800
So when they're running,

00:24:48.800 --> 00:24:52.895
Egypt them exactly as you would any On-Demand instance.

00:24:52.895 --> 00:24:54.830
And they're not suitable for

00:24:54.830 --> 00:24:59.899
closer and flexible state for fault tolerant or tightly coupled between instance nodes.

00:24:59.899 --> 00:25:01.849
So for example application,

00:25:01.849 --> 00:25:06.780
for example databases and another applications like that.

00:25:07.180 --> 00:25:11.240
One important term, I briefly define this,

00:25:11.240 --> 00:25:14.345
but it's good for it to be up on the screen for you to see.

00:25:14.345 --> 00:25:21.275
Spot instance pool is a set of unused EC2 instances with the same instance type.

00:25:21.275 --> 00:25:25.685
For example, m5 dot large operating system,

00:25:25.685 --> 00:25:28.130
availability zone and network platform.

00:25:28.130 --> 00:25:32.975
So essentially when you specify a type of instance,

00:25:32.975 --> 00:25:35.269
and obviously you specify the operating system

00:25:35.269 --> 00:25:37.849
and availability zone and then our platform.

00:25:37.849 --> 00:25:45.559
Then within the Spot Instance pull that corresponds to those selections.

00:25:45.559 --> 00:25:53.344
There will be instances that are available that have capacity and those that don't.

00:25:53.344 --> 00:25:57.440
And instances in that pool have a spot price.

00:25:57.440 --> 00:26:01.805
And essentially you will be getting an instance from there based on the request.

00:26:01.805 --> 00:26:06.420
If you request aligns with that poll, right.

00:26:08.110 --> 00:26:12.275
And a Spot Fleet is a set of spot instances

00:26:12.275 --> 00:26:16.040
that is launched based on criteria that you specify.

00:26:16.040 --> 00:26:18.740
So this essentially allows you to put in

00:26:18.740 --> 00:26:25.745
multiple requests for the same instance type operating system available zone, et cetera.

00:26:25.745 --> 00:26:28.010
But Amazon puts it,

00:26:28.010 --> 00:26:30.420
puts them in for you, so you specify it.

00:26:30.420 --> 00:26:34.570
In the beginning, and then Amazon will be putting in those requests for you

00:26:34.570 --> 00:26:38.815
so you don't have to put in individual spot requests for,

00:26:38.815 --> 00:26:40.239
for each instance you want.

00:26:40.239 --> 00:26:44.395
If you want more than one. Now, that's enough for Spot instances.

00:26:44.395 --> 00:26:48.264
You're going to get some more exposure to them in the hands-on section of the video.

00:26:48.264 --> 00:26:50.470
Let's go ahead with dedicated hosts.

00:26:50.470 --> 00:26:56.920
So dedicated hosts are a physical server with EC2 capacity fully dedicated to your use.

00:26:56.920 --> 00:27:00.489
So you can feel like you're basically renting it out.

00:27:00.489 --> 00:27:02.229
You're not sharing with anybody else.

00:27:02.229 --> 00:27:05.320
It's completely yours and you get to decide what to do with it.

00:27:05.320 --> 00:27:07.645
And you can.

00:27:07.645 --> 00:27:12.945
This allows you to use existing licenses and so on and so forth.

00:27:12.945 --> 00:27:16.610
And it also allows you to,

00:27:16.610 --> 00:27:20.090
you know, determining your own placement groups.

00:27:20.090 --> 00:27:27.334
And you are able to allocate dedicated host for a year or three year term.

00:27:27.334 --> 00:27:32.194
And you have full control of easy to place from groups, like I said.

00:27:32.194 --> 00:27:37.339
And you avoid the sharing of physical computing resources with other AWS customers.

00:27:37.339 --> 00:27:38.569
So this might be submenus,

00:27:38.569 --> 00:27:42.769
pretty crucial for your company or your enterprise.

00:27:42.769 --> 00:27:49.460
And this is gateway into AWS for a lot of companies that do have

00:27:49.460 --> 00:27:57.409
legacy enterprise security in place where they don't have a phobia of Cloud systems.

00:27:57.409 --> 00:28:01.309
They don't want anything leaving their company, so on and so forth.

00:28:01.309 --> 00:28:07.910
So this might be a way for them to transition into trusting something like AWS.

00:28:07.910 --> 00:28:09.574
Because at least with dedicated host,

00:28:09.574 --> 00:28:15.140
you are getting access to that hardware completely.

00:28:15.140 --> 00:28:19.169
You alone, nobody else is going to be sharing it with you.

00:28:19.870 --> 00:28:27.690
Now let's jump into the AWS console for some hands-on with instance purchasing options.

00:28:27.690 --> 00:28:31.779
Here we are again in the EC2 dashboard.

00:28:31.779 --> 00:28:39.400
Now we will be able to find the explore the rest of these options under instances.

00:28:39.400 --> 00:28:42.714
So let's just go ahead and close this.

00:28:42.714 --> 00:28:49.855
And we already had a lot of exposure to instances here.

00:28:49.855 --> 00:28:53.785
And in the last video to instance types.

00:28:53.785 --> 00:29:02.140
And now let us actually start off by going into spot requests.

00:29:02.140 --> 00:29:07.149
So spot requests are what will allow you to put in requests

00:29:07.149 --> 00:29:13.259
for Spot instances that, that, that node.

00:29:13.300 --> 00:29:18.874
So right now we have no resources in this region.

00:29:18.874 --> 00:29:26.270
And it enablers acknowledges that this is somewhat of a difficult topic to master.

00:29:26.270 --> 00:29:28.549
So it sends you to a Getting Started page

00:29:28.549 --> 00:29:31.114
so you can go ahead and definitely check that page out.

00:29:31.114 --> 00:29:35.510
If you want to really know what you're doing before you go ahead and do anything.

00:29:35.510 --> 00:29:37.700
But before we do anything,

00:29:37.700 --> 00:29:41.370
actually, we can just go into pricing history here.

00:29:41.410 --> 00:29:52.024
And here you can see the history of different pricing for different Spark pools and.

00:29:52.024 --> 00:29:53.779
Default, it's set to one week.

00:29:53.779 --> 00:29:57.829
You can use up to three months at the max.

00:29:57.829 --> 00:30:03.094
And you can select so for

00:30:03.094 --> 00:30:09.020
us in our familiar with the t2 micro, t2 micro.

00:30:09.020 --> 00:30:12.964
So let's, let's view the spot price history for that.

00:30:12.964 --> 00:30:14.270
Now.

00:30:14.270 --> 00:30:20.660
Remember, a spot pool is determined by the availability zone.

00:30:20.660 --> 00:30:24.590
So there are three availability zones in a region.

00:30:24.590 --> 00:30:27.365
So by the availability zone,

00:30:27.365 --> 00:30:29.479
then since type and a platform.

00:30:29.479 --> 00:30:36.439
So for the instances that fall into this closed for example,

00:30:36.439 --> 00:30:37.579
these two availability zones.

00:30:37.579 --> 00:30:46.775
So the phone to us is to a that haven't instance type t2 micro and have a Linux platform.

00:30:46.775 --> 00:30:48.650
Of all those instances,

00:30:48.650 --> 00:30:54.304
the spot price for the pool has fluctuated like so.

00:30:54.304 --> 00:31:00.484
Now, what's striking is that despite the fact that,

00:31:00.484 --> 00:31:03.125
you know, spot instances,

00:31:03.125 --> 00:31:06.154
prices do change based on demand and supply.

00:31:06.154 --> 00:31:08.494
They are quite steady.

00:31:08.494 --> 00:31:12.649
So it's not too difficult to bet on them.

00:31:12.649 --> 00:31:18.229
Especially when compared with the worst case price and the on-demand price.

00:31:18.229 --> 00:31:22.099
So essentially, if you really want to be on the safe side,

00:31:22.099 --> 00:31:31.400
you could bid at ¢0.008 or $0.080, ¢0.8.

00:31:31.400 --> 00:31:34.310
And be on the safe side.

00:31:34.310 --> 00:31:38.329
Here you would have a much significant

00:31:38.329 --> 00:31:42.530
in are significantly bigger chance of a discount by bidding low.

00:31:42.530 --> 00:31:44.750
But if historically, if you want to stay on the safe side,

00:31:44.750 --> 00:31:47.674
the worst case you could do is you could be up here,

00:31:47.674 --> 00:31:50.960
and it's highly unlikely that the price will ever,

00:31:50.960 --> 00:31:54.364
ever pass that in the future.

00:31:54.364 --> 00:31:58.399
So you would have a pretty stable application,

00:31:58.399 --> 00:32:04.729
but AWS does still claim the right to take back any of your spot instances.

00:32:04.729 --> 00:32:07.339
So here you are,

00:32:07.339 --> 00:32:09.545
live with that possibility always.

00:32:09.545 --> 00:32:12.379
Now, this is for this available to region.

00:32:12.379 --> 00:32:15.289
But if we, if we look at the other ones, for example, this one,

00:32:15.289 --> 00:32:22.235
you can see that it's been a pretty consistent zero-point 000,

00:32:22.235 --> 00:32:25.909
let's say 35 dollars.

00:32:25.909 --> 00:32:31.774
So you could pretty safely bet on 0.004

00:32:31.774 --> 00:32:38.000
and expect a 99 percent chance that the price will never pass it.

00:32:38.000 --> 00:32:42.844
So that means you're saving essentially 70 percent,

00:32:42.844 --> 00:32:46.279
70 percent on the on-demand price because this is

00:32:46.279 --> 00:32:50.149
what the on-demand price would be for this instance, in this region.

00:32:50.149 --> 00:32:56.959
For this platform, the on-demand price would be close to $0.12.

00:32:56.959 --> 00:33:00.409
So you're saving quite a bit 70 percent, right?

00:33:00.409 --> 00:33:03.424
And likewise, you can check for any other instance you want.

00:33:03.424 --> 00:33:08.945
So for example, instead of getting an On-Demand instance for 0.012,

00:33:08.945 --> 00:33:12.079
maybe you can get like and that's a t, t2 micro.

00:33:12.079 --> 00:33:18.620
Maybe you can get like a T2X large spot instance. That'll be.

00:33:18.620 --> 00:33:21.380
The same price as the T2 micro and so on and so forth.

00:33:21.380 --> 00:33:23.285
So you can do your own comparisons.

00:33:23.285 --> 00:33:26.900
But it's, it's pretty good that

00:33:26.900 --> 00:33:32.029
the historical price is pretty stable and fluctuating like some currency or something.

00:33:32.029 --> 00:33:35.330
But, you know, there's always a chance that they will be reclaimed.

00:33:35.330 --> 00:33:40.145
So watch out for that now to put in a request,

00:33:40.145 --> 00:33:43.355
you just click on the orange one there.

00:33:43.355 --> 00:33:49.159
And these are, a lot of these configurations are new database it done.

00:33:49.159 --> 00:33:56.524
They've observed the most common use cases for spot fleets and Spot instances.

00:33:56.524 --> 00:33:58.729
And they've come up with configurations,

00:33:58.729 --> 00:34:00.815
quick configurations to help you with that.

00:34:00.815 --> 00:34:03.919
For us, you know, this is something that is, I guess pretty common.

00:34:03.919 --> 00:34:06.169
Stick with load balancing workloads.

00:34:06.169 --> 00:34:07.384
This is the example I showed.

00:34:07.384 --> 00:34:09.860
I mentioned where you have a website running

00:34:09.860 --> 00:34:12.530
or lack of web servers running or web app or something.

00:34:12.530 --> 00:34:20.660
And you just want to have a cheap set of servers that might fail at any moment.

00:34:20.660 --> 00:34:26.029
But you have like a load balancer some extent in place where you would be able

00:34:26.029 --> 00:34:29.059
to direct the user to the running instance so

00:34:29.059 --> 00:34:32.645
you wouldn't have a problem with them being interrupted.

00:34:32.645 --> 00:34:36.470
And then, and then you just continue from here,

00:34:36.470 --> 00:34:39.994
just selecting your instance type.

00:34:39.994 --> 00:34:42.319
You can change the instance type, for example,

00:34:42.319 --> 00:34:45.304
we can change it to a T2 micro.

00:34:45.304 --> 00:34:49.265
So search for T2 micro.

00:34:49.265 --> 00:34:52.100
Let's select that one.

00:34:52.100 --> 00:34:57.439
And then we only have one VPC.

00:34:57.439 --> 00:35:01.189
We don't prefer the availability zone,

00:35:01.189 --> 00:35:04.834
will just let Amazon deal with it.

00:35:04.834 --> 00:35:07.894
And our key parent name.

00:35:07.894 --> 00:35:15.740
And then here we have the option of launching more than one instance,

00:35:15.740 --> 00:35:20.650
and this becomes essentially a fleet as Spot Fleet.

00:35:20.650 --> 00:35:22.119
So we can launch,

00:35:22.119 --> 00:35:24.445
we can put in ten requests.

00:35:24.445 --> 00:35:30.160
And if we select maintain target capacity,

00:35:30.160 --> 00:35:34.314
if any of those 10 get interrupted,

00:35:34.314 --> 00:35:36.775
then eight of us will put in

00:35:36.775 --> 00:35:42.144
renewal request on our behalf so that when another one becomes available,

00:35:42.144 --> 00:35:43.555
it's put back into our fleet.

00:35:43.555 --> 00:35:46.465
So in this way you can average,

00:35:46.465 --> 00:35:49.240
you know, at least, you know,

00:35:49.240 --> 00:35:56.185
I don't know, maybe five or maybe even eight instances that are constantly running.

00:35:56.185 --> 00:35:59.890
But you get the advantage of having a spot price on all of them.

00:35:59.890 --> 00:36:03.159
And there are some extra configurations.

00:36:03.159 --> 00:36:06.490
And then you can also apply recommendations.

00:36:06.490 --> 00:36:09.760
So this means that in the case where

00:36:09.760 --> 00:36:12.429
the particular instance type or

00:36:12.429 --> 00:36:17.530
the particular spot pool that you requested has nothing available.

00:36:17.530 --> 00:36:24.729
What other pool might easy to reach into on your behalf to make up for that.

00:36:24.729 --> 00:36:26.005
So in this case,

00:36:26.005 --> 00:36:28.659
we pick T2 micro,

00:36:28.659 --> 00:36:32.109
but T2 smallest also pretty similar to that.

00:36:32.109 --> 00:36:33.819
So in the case with that note,

00:36:33.819 --> 00:36:36.519
T2 dot Microsoft available,

00:36:36.519 --> 00:36:40.599
we're telling easy to by allowing them to recommend this,

00:36:40.599 --> 00:36:42.165
that they can't actually.

00:36:42.165 --> 00:36:45.124
Supply this as well. But even with that,

00:36:45.124 --> 00:36:47.090
the fleet strength is weak,

00:36:47.090 --> 00:36:51.739
so you could potentially add more to make it stronger.

00:36:51.739 --> 00:36:54.139
So adding more instance types are available.

00:36:54.139 --> 00:36:56.060
Designs will increase the likelihood of fulfilling

00:36:56.060 --> 00:36:59.509
the request at the lowest price to instance types

00:36:59.509 --> 00:37:06.019
times three availability zones equals 6 instance pools, and so on and so forth.

00:37:06.019 --> 00:37:08.389
So right now we have six instance poles because of

00:37:08.389 --> 00:37:12.934
the three different availability zones and the two different instance types.

00:37:12.934 --> 00:37:21.200
But six instance pools is classified by AWS as being a weak fleet.

00:37:21.200 --> 00:37:26.000
And so you might want to adjust that in order to make it stronger.

00:37:26.000 --> 00:37:29.929
But given that and based on historical price,

00:37:29.929 --> 00:37:33.004
you are getting a 70 percent saving,

00:37:33.004 --> 00:37:38.015
savings amount compared to on-demand instances.

00:37:38.015 --> 00:37:40.160
And this ends up being the price.

00:37:40.160 --> 00:37:41.494
And this is basically, you know,

00:37:41.494 --> 00:37:46.369
this is a price that you probably be able to rent a single On-Demand instance for.

00:37:46.369 --> 00:37:48.304
So you're essentially getting ten.

00:37:48.304 --> 00:37:55.894
And this is, this is advantageous if you do master how to use spot instances.

00:37:55.894 --> 00:37:58.579
And you do make sure you have a budget in place and that kind of stuff.

00:37:58.579 --> 00:38:00.560
So you're not actually going overboard.

00:38:00.560 --> 00:38:03.680
But the thing is here.

00:38:03.680 --> 00:38:06.799
And you have to set the maximum costs for

00:38:06.799 --> 00:38:11.090
Spot instances so that you don't accidentally go overboard.

00:38:11.090 --> 00:38:13.129
And that's the real beauty of this.

00:38:13.129 --> 00:38:17.060
There's no way to spend extra an accident, right?

00:38:17.060 --> 00:38:21.455
With On-Demand instances in if you don't have other measures in place, right?

00:38:21.455 --> 00:38:26.284
Alerts and alarms and that kind of stuff in place to check for.

00:38:26.284 --> 00:38:28.145
When you exceed a certain limit.

00:38:28.145 --> 00:38:31.039
You can potentially go in and keep

00:38:31.039 --> 00:38:33.935
going up and up and up in terms of class ready for not paying attention.

00:38:33.935 --> 00:38:36.124
But with fleet instances,

00:38:36.124 --> 00:38:38.675
use specify like $1,

00:38:38.675 --> 00:38:40.280
max cost per hour.

00:38:40.280 --> 00:38:45.335
So if what's available now is more expensive than a dollar,

00:38:45.335 --> 00:38:47.239
you won't get anything, right,

00:38:47.239 --> 00:38:49.894
and you won't be allocated any instances.

00:38:49.894 --> 00:38:53.255
So you won't be able to be run whatever you're running,

00:38:53.255 --> 00:38:57.005
but at least you won't be charged more than a, right.

00:38:57.005 --> 00:38:59.450
And hopefully, you know,

00:38:59.450 --> 00:39:01.249
if the circle prices whole lot,

00:39:01.249 --> 00:39:05.735
you can make this quite a low amount compared to an On-Demand instance.

00:39:05.735 --> 00:39:10.864
And you would still be getting access to instances and servers.

00:39:10.864 --> 00:39:16.039
So I'm not going to launch this just because I don't want to launch ten servers.

00:39:16.039 --> 00:39:19.039
But essentially, if you do launch it,

00:39:19.039 --> 00:39:21.710
that's what's going to happen.

00:39:21.710 --> 00:39:25.069
And you can try this out on your own if you want.

00:39:25.069 --> 00:39:32.109
Now let's go back into the sidebar.

00:39:32.109 --> 00:39:34.420
And that's going to reserve instances.

00:39:34.420 --> 00:39:40.659
So here is where you can reserve instances and you have to purchase reserved instances.

00:39:40.659 --> 00:39:43.735
You can select your platform.

00:39:43.735 --> 00:39:46.269
And since type tenancy,

00:39:46.269 --> 00:39:48.850
so by default, it's shared.

00:39:48.850 --> 00:39:55.449
If you want a dedicated machine and you have a dedicated yeah.

00:39:55.449 --> 00:39:58.944
If you have security concerns or something like that.

00:39:58.944 --> 00:40:02.995
And then the term one year or three years, so on and so forth.

00:40:02.995 --> 00:40:07.149
And essentially from here you can purchase a reserved instance.

00:40:07.149 --> 00:40:11.654
And this is pretty similar to how you would purchase your server on any other platform.

00:40:11.654 --> 00:40:16.609
You know, a non-elastic and on-demand platform just in like a server for a year,

00:40:16.609 --> 00:40:18.109
for three years, for a website or something.

00:40:18.109 --> 00:40:22.160
So this is essentially AWS's version of that.

00:40:22.160 --> 00:40:25.829
And then if we go into dedicated hosts,

00:40:25.840 --> 00:40:29.525
here is where you can allocate dedicated hosts.

00:40:29.525 --> 00:40:34.834
Again, I told you earlier that are not going to go into the tactical details.

00:40:34.834 --> 00:40:38.690
They're pretty straightforward that by now you should have had pretty good exposure

00:40:38.690 --> 00:40:42.574
are in our name tag, instance family, right?

00:40:42.574 --> 00:40:43.760
These are familiar to, you know,

00:40:43.760 --> 00:40:45.560
that this recursion instance,

00:40:45.560 --> 00:40:51.170
the families of the instance types and instance type,

00:40:51.170 --> 00:40:53.989
availability zone, et cetera, et cetera, them,

00:40:53.989 --> 00:40:56.975
the quantity, so on and so forth.

00:40:56.975 --> 00:41:01.925
So I'm not gonna go into technical details because quite frankly,

00:41:01.925 --> 00:41:05.359
you don't need it unless you will actually be using dedicated host,

00:41:05.359 --> 00:41:09.020
in which case you should review documentation before you do anything anyway,

00:41:09.020 --> 00:41:11.615
even if you know very well.

00:41:11.615 --> 00:41:16.309
But for the exam, all you need to know is when a dedicated host might be

00:41:16.309 --> 00:41:21.620
needed and why it might be preferred over another purchasing option.

00:41:21.620 --> 00:41:25.925
So let's go back into ec2.

00:41:25.925 --> 00:41:29.990
And yeah, that is pretty much like I said,

00:41:29.990 --> 00:41:31.100
savings plans are pretty new,

00:41:31.100 --> 00:41:33.749
capacitor reservations are pretty new.

00:41:34.510 --> 00:41:38.059
You can go and learn some more about that,

00:41:38.059 --> 00:41:43.145
but I don't want to make this video too long.

00:41:43.145 --> 00:41:45.095
And to give you too much.

00:41:45.095 --> 00:41:47.329
These are essentially the ones that are covered are

00:41:47.329 --> 00:41:51.560
the core purchasing types of EC2 and AWS.

00:41:51.560 --> 00:41:55.549
So make sure to learn that well,

00:41:55.549 --> 00:41:58.700
review the slides, memorize the definitions,

00:41:58.700 --> 00:42:01.189
and I will see you in the next video.

00:42:01.189 --> 00:42:02.669
Bye-bye.
