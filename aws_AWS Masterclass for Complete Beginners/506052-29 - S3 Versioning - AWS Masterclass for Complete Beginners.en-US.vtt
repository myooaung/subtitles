WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.740
Hello and welcome back.

00:00:01.740 --> 00:00:05.310
Let's talk about AWS, S3 versioning.

00:00:05.310 --> 00:00:08.580
So versioning amazon S3 is a means of keeping

00:00:08.580 --> 00:00:12.540
multiple variants of an object in the same bucket.

00:00:12.540 --> 00:00:13.905
Okay?

00:00:13.905 --> 00:00:18.750
Now, once versioning is enabled for bucket,

00:00:18.750 --> 00:00:24.345
amazon S3 automatically generates a unique version ID for the object being stored.

00:00:24.345 --> 00:00:29.085
And you can, you can use as the S3 versioning feature to preserve,

00:00:29.085 --> 00:00:34.335
tree and restore every version of every object stored in your buckets.

00:00:34.335 --> 00:00:41.470
It enables you to easily recover from both unintended user actions,

00:00:41.470 --> 00:00:46.850
an application failures, and after versioning is enabled for bucket, right?

00:00:46.850 --> 00:00:52.490
If Amazon S3 receives multiple write requests for the same objects simultaneously,

00:00:52.490 --> 00:00:54.995
it stores all of those objects,

00:00:54.995 --> 00:00:58.355
which might be very useful in certain applications.

00:00:58.355 --> 00:01:05.760
Purging able buckets enable you to recover objects from accidental deletion or overwrite.

00:01:06.400 --> 00:01:10.055
Buckets can be in one of three states.

00:01:10.055 --> 00:01:12.635
They can either be on versioned,

00:01:12.635 --> 00:01:14.885
there can be versioning enabled,

00:01:14.885 --> 00:01:18.275
or versioning suspended buckets.

00:01:18.275 --> 00:01:23.390
The version state applies to all of the objects in that bucket.

00:01:23.390 --> 00:01:27.140
Objects that are stored in your bucket before you set

00:01:27.140 --> 00:01:31.920
the versioning state has a version ID of null.

00:01:32.140 --> 00:01:37.085
Something important to remember is that after you version enable a bucket,

00:01:37.085 --> 00:01:40.760
it can never return to an inversion state.

00:01:40.760 --> 00:01:44.930
But you can't suspend versioning on that bucket.

00:01:44.930 --> 00:01:47.314
And that's why we have the three states.

00:01:47.314 --> 00:01:49.955
Now with versioning, if you delete an object,

00:01:49.955 --> 00:01:54.110
Amazon S3 inserts a Delete marker instead of removing the object.

00:01:54.110 --> 00:01:55.565
Permanent.

00:01:55.565 --> 00:01:59.330
Marker becomes the current object version.

00:01:59.330 --> 00:02:01.670
If you override an object,

00:02:01.670 --> 00:02:05.420
it results in a new object version in the bucket.

00:02:05.420 --> 00:02:10.025
So you can always restore the previous version of an object.

00:02:10.025 --> 00:02:12.740
Now by default, as you saw as three,

00:02:12.740 --> 00:02:14.990
versioning is disabled on buckets.

00:02:14.990 --> 00:02:19.895
So we must explicitly enable it as we're going to be doing in this video.

00:02:19.895 --> 00:02:26.765
So let's jump right into the database console and start playing around with versioning.

00:02:26.765 --> 00:02:29.810
So here we are on the console ADFS console.

00:02:29.810 --> 00:02:31.925
Let's go ahead and create a bucket.

00:02:31.925 --> 00:02:34.580
And let's call it the, what we just called it,

00:02:34.580 --> 00:02:38.090
the last video number 1 AWS course.

00:02:38.090 --> 00:02:41.345
And we're blocking all public access.

00:02:41.345 --> 00:02:44.400
And we go ahead and create the bucket.

00:02:45.280 --> 00:02:56.495
And then let's upload our files. Upload.

00:02:56.495 --> 00:03:04.310
And if we go into our bucket and we go into properties,

00:03:04.310 --> 00:03:11.120
we can see that versioning is disabled bucket versioning has been disabled.

00:03:11.120 --> 00:03:13.940
In fact, it's disabled by default.

00:03:13.940 --> 00:03:18.305
Okay, so we can go ahead and edit this.

00:03:18.305 --> 00:03:20.450
And how do we get into there?

00:03:20.450 --> 00:03:22.325
We went into our buckets.

00:03:22.325 --> 00:03:24.320
We clicked on our bucket name,

00:03:24.320 --> 00:03:28.565
the bucket that we want to change the versioning status.

00:03:28.565 --> 00:03:31.835
And then we wanted to properties here.

00:03:31.835 --> 00:03:34.100
So there are a lot of different tabs here.

00:03:34.100 --> 00:03:38.810
We're going to be covering them, but we're going to Properties.

00:03:38.810 --> 00:03:43.670
And under Properties we have bucket versioning, bucket version disabled.

00:03:43.670 --> 00:03:46.175
So let's go ahead and edit this.

00:03:46.175 --> 00:03:52.385
And we can enable bucket versioning.

00:03:52.385 --> 00:03:55.895
And now we can go ahead and save our changes.

00:03:55.895 --> 00:04:00.694
And what happens now is if we go into

00:04:00.694 --> 00:04:05.855
our objects and refresh

00:04:05.855 --> 00:04:11.359
here we can see that there is now a switch for listing versions of objects.

00:04:11.359 --> 00:04:13.820
And when we turn it on,

00:04:13.820 --> 00:04:18.980
we now have a version ID showing right before we didn't have a version ID.

00:04:18.980 --> 00:04:21.170
Now and we can list version.

00:04:21.170 --> 00:04:26.450
You can see that the version ID for these two are our null, um,

00:04:26.450 --> 00:04:33.380
and that's because we have enabled versioning after these objects have been uploaded.

00:04:33.380 --> 00:04:35.585
So the version ID will be no.

00:04:35.585 --> 00:04:43.435
Now, if we were to upload the same file,

00:04:43.435 --> 00:04:46.310
upload burger for example,

00:04:46.650 --> 00:04:52.435
it has the same object name, the same destination.

00:04:52.435 --> 00:04:54.070
Everything is the same, right?

00:04:54.070 --> 00:04:56.290
It's the exact same object.

00:04:56.290 --> 00:04:59.905
But since we have versioning enabled,

00:04:59.905 --> 00:05:02.710
if we go back into the bucket,

00:05:02.710 --> 00:05:06.550
okay, we see that the timestamp has been updated.

00:05:06.550 --> 00:05:07.690
Okay.

00:05:07.690 --> 00:05:12.085
It is it is a newer object,

00:05:12.085 --> 00:05:15.490
but it has not been overwritten. And how do we know?

00:05:15.490 --> 00:05:23.570
We can list versions and we can see the original object here with virginity of NO.

00:05:23.570 --> 00:05:26.720
And now we have the new version,

00:05:26.720 --> 00:05:29.030
which has this version ID here.

00:05:29.030 --> 00:05:31.205
They're the same object to us,

00:05:31.205 --> 00:05:36.124
but to S3 there are two different versions.

00:05:36.124 --> 00:05:38.105
And so we can do that again,

00:05:38.105 --> 00:05:42.210
right Upload, Add Files.

00:05:47.200 --> 00:05:51.350
And again there's versions and there we go.

00:05:51.350 --> 00:05:55.820
So that's how you continually,

00:05:55.820 --> 00:06:02.285
right from now on all these objects we'll have versions are assigned to them.

00:06:02.285 --> 00:06:04.775
And in fact, what we can do is,

00:06:04.775 --> 00:06:07.950
let's delete this puppy.

00:06:09.610 --> 00:06:13.170
You and permanently delete.

00:06:15.610 --> 00:06:19.040
Now we have no puppy image.

00:06:19.040 --> 00:06:22.110
Let's upload it for the first time.

00:06:28.450 --> 00:06:30.830
And as you can see,

00:06:30.830 --> 00:06:32.600
it comes with the version ID.

00:06:32.600 --> 00:06:36.110
Now that version has been enabled, unlike burger,

00:06:36.110 --> 00:06:38.840
which put uploaded before,

00:06:38.840 --> 00:06:40.505
verging had been enabled.

00:06:40.505 --> 00:06:47.435
Now, what if we wanted to delete burger dot JPEG?

00:06:47.435 --> 00:06:49.625
Let's click Delete.

00:06:49.625 --> 00:06:56.105
And here we see deleting the specified objects adds delete markers to them.

00:06:56.105 --> 00:06:58.370
If you need to undo the delete action,

00:06:58.370 --> 00:07:01.805
you can delete the delete markers. Okay?

00:07:01.805 --> 00:07:09.540
So we can go ahead and write the lead and see what they mean by that message.

00:07:10.210 --> 00:07:12.470
Here, right?

00:07:12.470 --> 00:07:15.830
When List versions has been disabled,

00:07:15.830 --> 00:07:17.330
versioning is still enabled,

00:07:17.330 --> 00:07:19.880
but we're turning out the option to see the different versions

00:07:19.880 --> 00:07:23.240
currently in this panel here.

00:07:23.240 --> 00:07:26.780
And we don't see a burger that J peg,

00:07:26.780 --> 00:07:28.595
we only see a puppy or JPEG.

00:07:28.595 --> 00:07:33.530
But if we turn on this version that we can see that progress still exists.

00:07:33.530 --> 00:07:34.430
Okay?

00:07:34.430 --> 00:07:40.010
But what S3 has done is add a delete marker, okay?

00:07:40.010 --> 00:07:43.580
So that basically makes it seem to, you know,

00:07:43.580 --> 00:07:45.650
anybody who's accessing the S3 bucket,

00:07:45.650 --> 00:07:47.570
that that object has been deleted.

00:07:47.570 --> 00:07:49.970
But we have the option of rolling that back.

00:07:49.970 --> 00:07:52.680
So if we delete this,

00:07:54.730 --> 00:07:57.140
we're back where we were.

00:07:57.140 --> 00:08:02.734
Okay. So how would you delete the whole object?

00:08:02.734 --> 00:08:10.170
You would have to delete all the versions.

00:08:12.160 --> 00:08:18.530
And now we no longer have program.cs JPEG there.

00:08:18.530 --> 00:08:20.930
So versioning is very useful.

00:08:20.930 --> 00:08:26.210
And you know, when you're creating a new bucket,

00:08:26.210 --> 00:08:29.075
you can enable it by default.

00:08:29.075 --> 00:08:31.685
So you can enable it here.

00:08:31.685 --> 00:08:33.980
And then you can create your bucket.

00:08:33.980 --> 00:08:40.340
And then that will be enabled automatically from the beginning.

00:08:40.500 --> 00:08:47.155
Now, one last thing we can look at is if we go into properties,

00:08:47.155 --> 00:08:51.295
we can see that bucket version has been enabled.

00:08:51.295 --> 00:08:53.125
Now if we wanted to disable it,

00:08:53.125 --> 00:08:56.995
we can't we can't disable it after it's been enabled.

00:08:56.995 --> 00:08:58.585
We can only suspended,

00:08:58.585 --> 00:09:02.530
and that means this suspends the creation of object versions for

00:09:02.530 --> 00:09:06.820
all operations but preserves any existing object versions.

00:09:06.820 --> 00:09:07.990
Okay.

00:09:07.990 --> 00:09:18.950
So if we were to upload another version of the puppy file,

00:09:20.190 --> 00:09:26.035
we'd see that we have two versions of this puppy file.

00:09:26.035 --> 00:09:33.650
And now if we were to go into Properties, edit, suspend,

00:09:37.380 --> 00:09:41.090
from now on, there,

00:09:41.090 --> 00:09:43.210
there is no any,

00:09:43.210 --> 00:09:48.430
any further objects added to this bucket will no longer have a versioning enabled,

00:09:48.430 --> 00:09:54.415
but we will still have the two versions of Puppy. Okay?

00:09:54.415 --> 00:09:59.400
Now, don't hesitate to go yourself to experiment and the unit,

00:09:59.400 --> 00:10:02.940
if you have any questions of how things were organ that concept, try it out yourself.

00:10:02.940 --> 00:10:07.745
I'm like I said, you're only paying for the storage and since they're small files,

00:10:07.745 --> 00:10:09.710
it's not going to be that much.

00:10:09.710 --> 00:10:12.170
And in any case,

00:10:12.170 --> 00:10:16.475
you can delete buckets after you use them to experiment.

00:10:16.475 --> 00:10:19.790
So that's it for versioning.

00:10:19.790 --> 00:10:21.950
In the next video,

00:10:21.950 --> 00:10:26.850
we're going to be talking about S3 encryption. Thanks for y.
