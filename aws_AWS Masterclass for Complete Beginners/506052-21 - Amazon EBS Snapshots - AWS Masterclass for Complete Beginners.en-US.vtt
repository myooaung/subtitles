WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.410
Hello and welcome back.

00:00:01.410 --> 00:00:05.490
This will be a very quick video on EBS snapshots.

00:00:05.490 --> 00:00:09.390
In reality, this could have been merged into the previous video,

00:00:09.390 --> 00:00:14.355
but I wanted to keep it separate because snapshots to deserve their own attention.

00:00:14.355 --> 00:00:19.950
And, you know, the last section was introduced in quite a bit of new concepts anyway.

00:00:19.950 --> 00:00:22.995
So I don't want to mix the two together, but essentially,

00:00:22.995 --> 00:00:27.615
snapshots are just a continuation of what we were learning in the last video.

00:00:27.615 --> 00:00:32.805
They just allow you to create backups of the volumes that we were playing with.

00:00:32.805 --> 00:00:39.770
So essentially, you can back up the data on your Amazon EBS volumes

00:00:39.770 --> 00:00:42.680
to Amazon S3 and S3 will be covering in

00:00:42.680 --> 00:00:47.015
the next section by taking point-in-time snapshots.

00:00:47.015 --> 00:00:56.420
So this is very useful to keep in mind that amazon S3 is a low cost storage service.

00:00:56.420 --> 00:01:02.700
So the costs will be minimal compared to having an instance running, for example.

00:01:02.920 --> 00:01:06.710
Now, snapshots are incremental backups.

00:01:06.710 --> 00:01:13.850
And incremental backups are sometimes difficult for newcomers to really understand.

00:01:13.850 --> 00:01:16.685
So I'm going to be focusing a little bit more on it in the next slide.

00:01:16.685 --> 00:01:20.525
But essentially only the blocks on the device that have

00:01:20.525 --> 00:01:25.610
changed after your most recent snapshot or saved.

00:01:25.610 --> 00:01:29.540
So every time you take a snapshot of the same volume,

00:01:29.540 --> 00:01:34.370
you're not saving all the data every single time.

00:01:34.370 --> 00:01:39.350
If you know a part of that volume had previously been saved.

00:01:39.350 --> 00:01:41.780
It's not saved again,

00:01:41.780 --> 00:01:43.595
and only the changes are saved.

00:01:43.595 --> 00:01:46.700
So the purpose of this is that, uh,

00:01:46.700 --> 00:01:49.670
minimize the time required to create the snapshot

00:01:49.670 --> 00:01:53.210
and saves on storage costs by not duplicated data, right?

00:01:53.210 --> 00:01:56.855
Because if you were to copy all the data every single time,

00:01:56.855 --> 00:02:02.510
you essentially have a bunch of duplicated data that you're paying storage costs for.

00:02:02.510 --> 00:02:06.695
Now, Amazon EBS snapshots.

00:02:06.695 --> 00:02:12.140
Essentially, each snaps snapshot contains all of the information that is needed to

00:02:12.140 --> 00:02:17.990
restore your data from the moment the snapshot is taken to a new EBS volumes.

00:02:17.990 --> 00:02:21.905
So all that is required to restore it to EBS volume?

00:02:21.905 --> 00:02:26.540
Yes. Snapshot can be used to create new EBS volumes.

00:02:26.540 --> 00:02:30.230
And in fact, you can see this when you're launching your first error,

00:02:30.230 --> 00:02:32.075
when you're launching an EC2 instance,

00:02:32.075 --> 00:02:34.610
when you go to the storage step on step number

00:02:34.610 --> 00:02:38.660
4 and you see the root EBS volume that's been created.

00:02:38.660 --> 00:02:44.000
You can see that there's a snapshot ID or reference there.

00:02:44.000 --> 00:02:49.460
And that's the snapshot from which the root volume is being created.

00:02:49.460 --> 00:02:53.330
And I'll show you how to do that with your own snapshots as well.

00:02:53.330 --> 00:02:59.960
Now, charges first snapshots are based on the amount of data stored.

00:02:59.960 --> 00:03:03.500
So because now shots are incremental,

00:03:03.500 --> 00:03:07.190
deleting a snapshot might not reduce the data storage costs.

00:03:07.190 --> 00:03:11.450
So data reference exclusively by a snapshot is removed.

00:03:11.450 --> 00:03:13.100
When that snapshot is deleted,

00:03:13.100 --> 00:03:16.550
but data referenced by other snapshots is preserved.

00:03:16.550 --> 00:03:19.490
And so you have to watch out for that.

00:03:19.490 --> 00:03:22.040
And you can look up like AWS billing

00:03:22.040 --> 00:03:24.230
and cost management user guide or something like that.

00:03:24.230 --> 00:03:30.785
Just, you know, if it's a very specific topic that you're concerned about.

00:03:30.785 --> 00:03:35.300
You can share a snapshot across a diverse accounts by modifying it,

00:03:35.300 --> 00:03:37.640
access permissions, choose something that's,

00:03:37.640 --> 00:03:39.215
I'm gonna come in handy.

00:03:39.215 --> 00:03:42.380
And you can make copies of your own snapshots as well.

00:03:42.380 --> 00:03:47.390
And so you can also make copies of snapshots that haven't shared with you.

00:03:47.390 --> 00:03:54.365
Now I snapshot is constrained to the AWS region where it was created.

00:03:54.365 --> 00:03:57.005
So that's something really important to keep in mind.

00:03:57.005 --> 00:03:59.525
It is constrained to the region.

00:03:59.525 --> 00:04:02.840
It is not constrained to the availability zone.

00:04:02.840 --> 00:04:07.850
So very good way of if you do have a snapshot in

00:04:07.850 --> 00:04:09.535
a particular availability zone or anyone

00:04:09.535 --> 00:04:12.950
to essentially habit and another availability zone,

00:04:12.950 --> 00:04:14.690
you can create a snapshot of it.

00:04:14.690 --> 00:04:17.390
And it'll be within the same region.

00:04:17.390 --> 00:04:21.380
And then you can create a new volume from

00:04:21.380 --> 00:04:26.405
that snapshot within any availability zone within that region.

00:04:26.405 --> 00:04:29.180
And after you create a snapshot of an EBS volume,

00:04:29.180 --> 00:04:32.210
you can use it to create new volumes in the same region exam,

00:04:32.210 --> 00:04:33.455
basically what I just said.

00:04:33.455 --> 00:04:36.725
And you can also copy snapshots across regions.

00:04:36.725 --> 00:04:39.920
And this makes it possible to use multiple regions

00:04:39.920 --> 00:04:43.670
for geographical expansion in a datacenter,

00:04:43.670 --> 00:04:46.880
migration, disaster recovery, et cetera.

00:04:46.880 --> 00:04:52.310
And so there's really not much else to it.

00:04:52.310 --> 00:04:58.355
Let me just quickly explain to you how the incremental snapshot process works.

00:04:58.355 --> 00:05:04.940
So essentially the volume one here shown at three points in time.

00:05:04.940 --> 00:05:10.325
Okay, These are three consecutive points in time through different states.

00:05:10.325 --> 00:05:11.630
So this is the first one.

00:05:11.630 --> 00:05:14.975
And then after some time this happened and that does happen, this happens.

00:05:14.975 --> 00:05:16.880
And a snapshot is taken,

00:05:16.880 --> 00:05:20.240
taken at each of these three stay the same volume.

00:05:20.240 --> 00:05:22.340
But in each of these three time periods,

00:05:22.340 --> 00:05:26.795
in state 1, the volume has 10 gigabytes of data.

00:05:26.795 --> 00:05:31.100
And because snap a is the first snapshot taken up the volume,

00:05:31.100 --> 00:05:35.525
the entire 10 gigabytes of data must be copied.

00:05:35.525 --> 00:05:39.065
Okay, this is copied to S3, like so.

00:05:39.065 --> 00:05:40.520
And then state two,

00:05:40.520 --> 00:05:44.720
the volume still contains 10 gigabytes of data,

00:05:44.720 --> 00:05:48.920
but four gigabytes have changed.

00:05:48.920 --> 00:05:54.275
So now when a new snapshot is taken and Snap be

00:05:54.275 --> 00:06:01.445
only the part that has the new part that has been changed is,

00:06:01.445 --> 00:06:03.185
is added to step B.

00:06:03.185 --> 00:06:08.180
And then step B basically copies and stores

00:06:08.180 --> 00:06:13.745
the previous or the untouched six gigabytes from snap a.

00:06:13.745 --> 00:06:15.680
This is done by reference.

00:06:15.680 --> 00:06:20.240
So it's not copied twice in S3,

00:06:20.240 --> 00:06:22.325
it's only reference to here.

00:06:22.325 --> 00:06:24.755
So this prevents duplication,

00:06:24.755 --> 00:06:26.525
unnecessary duplication of this data.

00:06:26.525 --> 00:06:30.290
In S3 is already a redundant data storage service.

00:06:30.290 --> 00:06:33.410
So it's already dealing with, you know,

00:06:33.410 --> 00:06:37.670
making sure that data is not arranged and duplicate it and it's duplicated properly in

00:06:37.670 --> 00:06:42.260
terms of keeping it secure and preventing data from being a lost.

00:06:42.260 --> 00:06:46.145
So there's only two duplicate data within that system.

00:06:46.145 --> 00:06:49.610
And then in state 3 to the right of

00:06:49.610 --> 00:06:54.410
data has been added to the volume for a total of 12 gigabytes.

00:06:54.410 --> 00:06:55.730
Okay.

00:06:55.730 --> 00:07:00.140
And this is a feature EBS that we mentioned earlier

00:07:00.140 --> 00:07:04.430
that even while the volume is attached and instances live,

00:07:04.430 --> 00:07:09.680
you can actually add on or you can change the characteristics of an volume.

00:07:09.680 --> 00:07:11.120
You can add on,

00:07:11.120 --> 00:07:13.520
for example, store it.

00:07:13.520 --> 00:07:15.230
You can make them, you can enlarge it,

00:07:15.230 --> 00:07:17.555
you can change the IOPS and throughput, et cetera.

00:07:17.555 --> 00:07:26.405
So snaps see needs to copy the two gigabytes that were added after snap B was taken,

00:07:26.405 --> 00:07:28.865
which are the red ones here,

00:07:28.865 --> 00:07:30.485
they're copied to here.

00:07:30.485 --> 00:07:34.895
And then snap see references,

00:07:34.895 --> 00:07:42.965
four gigabytes of data stored in step B and 60 months of data stored in snap a. Okay?

00:07:42.965 --> 00:07:49.760
So the total storage required for the three snapshots is only 16 gigabytes.

00:07:49.760 --> 00:07:54.080
Whereas if the whole volume would have been copied every single time,

00:07:54.080 --> 00:07:56.960
it would have been 32 gigabytes, right?

00:07:56.960 --> 00:08:02.330
So almost half are actually exactly half of the space is taken.

00:08:02.330 --> 00:08:07.175
So yeah, there's really not much else to it.

00:08:07.175 --> 00:08:09.320
It's very neat. It's very neat.

00:08:09.320 --> 00:08:15.725
System Arrhenius concept and it just shows how AWS is always trying to help you really,

00:08:15.725 --> 00:08:17.030
truly minimize your costs.

00:08:17.030 --> 00:08:19.550
You know, they could be overcharging for so many things.

00:08:19.550 --> 00:08:23.780
But their intention is to make all of this as easy as possible for

00:08:23.780 --> 00:08:26.570
the consumer so that we do

00:08:26.570 --> 00:08:29.900
prefer to use a diverse over other providers, service provider.

00:08:29.900 --> 00:08:32.840
So that's pretty much it for EBS snapshots.

00:08:32.840 --> 00:08:39.230
I'm going to quickly walk you through the snapshot page on AWS and AWS console,

00:08:39.230 --> 00:08:41.090
but Moroccan dwell too much on it.

00:08:41.090 --> 00:08:43.265
But there's really not much else to it.

00:08:43.265 --> 00:08:45.920
So let's jump right into the console.

00:08:45.920 --> 00:08:51.320
So here we are in the ADOS management console is going to EC2.

00:08:51.320 --> 00:08:57.080
And down under Elastic Block Store, we have snapshots.

00:08:57.080 --> 00:09:01.475
Now, we turns out we do have some snapshots here.

00:09:01.475 --> 00:09:05.735
They were probably created during some of the,

00:09:05.735 --> 00:09:08.645
you know, when we were playing around with some of the other services.

00:09:08.645 --> 00:09:10.505
So that's not a problem.

00:09:10.505 --> 00:09:12.964
These are just the snapshots that we have available.

00:09:12.964 --> 00:09:15.245
This might be the only problem here is if,

00:09:15.245 --> 00:09:17.405
you know, if you're not aware of this,

00:09:17.405 --> 00:09:19.880
you might be getting charged on S3,

00:09:19.880 --> 00:09:24.380
but we shouldn't have exceeded the free tier limits anyway,

00:09:24.380 --> 00:09:25.490
so that's all right.

00:09:25.490 --> 00:09:28.850
So from here you can go ahead and create a snapshot

00:09:28.850 --> 00:09:34.010
and you have to select an existing volume or an instance,

00:09:34.010 --> 00:09:36.845
because when the second instance,

00:09:36.845 --> 00:09:39.500
it comes with the root volume attached to it.

00:09:39.500 --> 00:09:42.590
So I'm not going to create an instance or values,

00:09:42.590 --> 00:09:45.440
and we already went through that extensively in the last video.

00:09:45.440 --> 00:09:50.165
But essentially there's a volume or an instance with an attached volume.

00:09:50.165 --> 00:09:54.155
Then you'll be able to select that volume here.

00:09:54.155 --> 00:09:58.760
Adequate description, and then create your snapshot.

00:09:58.760 --> 00:10:01.490
And then once your snapshot has been created,

00:10:01.490 --> 00:10:03.740
you can create volumes from them.

00:10:03.740 --> 00:10:05.120
So for example, these snapshots,

00:10:05.120 --> 00:10:07.100
we're not really sure what's in them.

00:10:07.100 --> 00:10:09.710
We, you know, we don't know why they've been created,

00:10:09.710 --> 00:10:10.760
but it doesn't matter.

00:10:10.760 --> 00:10:17.615
We can still go into actions and we can create a volume directly from this snapshot.

00:10:17.615 --> 00:10:19.940
Okay? So.

00:10:19.940 --> 00:10:21.545
When we do that,

00:10:21.545 --> 00:10:24.065
we can specify any volume type you want.

00:10:24.065 --> 00:10:27.080
We don't have to specify this

00:10:27.080 --> 00:10:31.790
the same volume type of the volume from which the snapshot was created.

00:10:31.790 --> 00:10:34.700
So this value is being created from this snapshot,

00:10:34.700 --> 00:10:37.145
but the snapshot is just a snapshot of the data.

00:10:37.145 --> 00:10:43.850
And so we can specify any volume type and we can specify the size.

00:10:43.850 --> 00:10:46.160
Now, we can specify any volume type,

00:10:46.160 --> 00:10:49.190
but we can't specify necessarily any side.

00:10:49.190 --> 00:10:52.085
We can't go lower than the size

00:10:52.085 --> 00:10:55.610
of the volume from which a snapshot was created naturally, right?

00:10:55.610 --> 00:11:02.450
And because can reduce snapshot of eight gigabytes of data unit that's empty.

00:11:02.450 --> 00:11:04.280
You know, you can't go below it.

00:11:04.280 --> 00:11:05.840
So if we try to go,

00:11:05.840 --> 00:11:08.480
seven were not allowed to.

00:11:08.480 --> 00:11:10.310
But we can increase it.

00:11:10.310 --> 00:11:12.290
So we can increase the volume,

00:11:12.290 --> 00:11:17.105
volume size compared to the original volume.

00:11:17.105 --> 00:11:19.160
And then we can select the availability zone.

00:11:19.160 --> 00:11:25.820
So this is how you can be essentially transfer volumes between availability zones.

00:11:25.820 --> 00:11:30.545
So if you have a volume in US east to a,

00:11:30.545 --> 00:11:33.200
but you have an instance in the US east to be.

00:11:33.200 --> 00:11:40.955
So you want to transfer this or the volume you have over to US east to be,

00:11:40.955 --> 00:11:44.420
you can create a snapshot of it like I showed you how.

00:11:44.420 --> 00:11:47.420
And from there, you can create a volume from it.

00:11:47.420 --> 00:11:50.120
And here select US east to be.

00:11:50.120 --> 00:11:56.675
And this time the same volume will be created the same as the volume from the moment.

00:11:56.675 --> 00:11:59.465
At the moment that you took your snapshot.

00:11:59.465 --> 00:12:02.615
And we'll create it in your cease to be.

00:12:02.615 --> 00:12:06.755
And then from there you can attach it to an instance in US East Tooby.

00:12:06.755 --> 00:12:10.130
And then essentially that's basically it.

00:12:10.130 --> 00:12:11.990
And then you create your volume.

00:12:11.990 --> 00:12:16.670
And one last thing is you

00:12:16.670 --> 00:12:22.895
can copy your snapshots across regions.

00:12:22.895 --> 00:12:25.985
Okay, so currently we're in the Ohio region.

00:12:25.985 --> 00:12:27.995
If we were to jump to another region,

00:12:27.995 --> 00:12:29.780
we would not see the snapshot,

00:12:29.780 --> 00:12:32.555
but we can copy them into another region.

00:12:32.555 --> 00:12:37.700
And then that essentially allows us to transfer volumes across regions.

00:12:37.700 --> 00:12:39.290
So to transfer them across regions,

00:12:39.290 --> 00:12:41.255
we do it from copy.

00:12:41.255 --> 00:12:44.465
And to transfer across availability zones.

00:12:44.465 --> 00:12:50.045
We will do it from creating a new volume from a snapshot that is taken.

00:12:50.045 --> 00:12:54.410
So that is essentially all there is to this also,

00:12:54.410 --> 00:12:57.080
you can modify permissions, contents private,

00:12:57.080 --> 00:12:58.925
so you can share,

00:12:58.925 --> 00:13:01.129
just like we did with the AMIs.

00:13:01.129 --> 00:13:06.380
You can share snapshots with other accounts or you can make them private.

00:13:06.380 --> 00:13:08.700
You can make them public as well.

00:13:08.980 --> 00:13:10.865
Like so.

00:13:10.865 --> 00:13:14.045
Okay, that's pretty much it for snapshots.

00:13:14.045 --> 00:13:19.115
I'll see you in the next video where we will go over AES encryption.

00:13:19.115 --> 00:13:20.940
Thanks, buh-bye.
