WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.475
Hello and welcome back.

00:00:02.475 --> 00:00:05.175
In this section we're going to be covering something called

00:00:05.175 --> 00:00:08.520
S3 cores or cross origin resource sharing.

00:00:08.520 --> 00:00:12.810
Now, this is kind of a complicated topic and it does

00:00:12.810 --> 00:00:17.130
require some understanding or knowledge of web development.

00:00:17.130 --> 00:00:24.315
And that kind of it's not so much in S3 thing as it is in our web development thing.

00:00:24.315 --> 00:00:28.155
But now that we know we can host websites and S3,

00:00:28.155 --> 00:00:33.510
we can avoid also going into this topic because if you have websites,

00:00:33.510 --> 00:00:37.875
you're going to eventually need cross-origin resource sharing.

00:00:37.875 --> 00:00:44.030
So I'm not going to be showing you exactly how to configure I'm cores on a bucket,

00:00:44.030 --> 00:00:48.620
but I will kind of be going over what it is and where you can find it on

00:00:48.620 --> 00:00:52.145
the bucket page or on the bucket carton console so that

00:00:52.145 --> 00:00:56.060
you could further pursue this if you are so interested.

00:00:56.060 --> 00:01:01.940
So core stands for Cross-Origin Resource Sharing.

00:01:01.940 --> 00:01:06.740
And it defines a way for client web applications that are loaded

00:01:06.740 --> 00:01:11.570
in one domain to interact with resources in a different domain.

00:01:11.570 --> 00:01:15.215
So if a client sends a cross-origin request,

00:01:15.215 --> 00:01:18.680
then we need to enable the correct CORS headers.

00:01:18.680 --> 00:01:27.590
And this uses XML or JSON objects to basically enable CORS for an S3 bucket.

00:01:27.590 --> 00:01:29.480
And I'm going to be showing you where to do that from.

00:01:29.480 --> 00:01:31.535
But we won't be actually creating the,

00:01:31.535 --> 00:01:35.150
the XML documents or the JSON files themselves.

00:01:35.150 --> 00:01:38.240
I'll just show you how to do it if you are interested in that.

00:01:38.240 --> 00:01:42.920
And cause as a web browser-based mechanism,

00:01:42.920 --> 00:01:49.100
we can build rich client-side web applications with Amazon S3 and selectively allow

00:01:49.100 --> 00:01:55.940
cross-origin access to our Amazon S3 resources using course.

00:01:55.940 --> 00:02:00.035
So what are some examples order some scenarios of,

00:02:00.035 --> 00:02:05.375
you know, why we would ever need cross-origin resource sharing and why it even exists.

00:02:05.375 --> 00:02:09.050
So imagine, like suppose that you are hosting a website

00:02:09.050 --> 00:02:13.115
on Amazon S3 or on an Amazon S3 bucket.

00:02:13.115 --> 00:02:17.360
And just like the one we made and hosted in the last video,

00:02:17.360 --> 00:02:21.605
it was called Amazon Number 1 Amazon course website, right?

00:02:21.605 --> 00:02:24.860
And it had an endpoint or

00:02:24.860 --> 00:02:28.655
website endpoint that we use to access the website or to load the website,

00:02:28.655 --> 00:02:32.540
which was something like Amazon Number 1 Amazon course website

00:02:32.540 --> 00:02:36.485
dot S3 dash website dot the region,

00:02:36.485 --> 00:02:41.090
US East to dot amazon.com or something like that, right?

00:02:41.090 --> 00:02:45.590
It had a URL and that we use to actually load the website endpoint.

00:02:45.590 --> 00:02:50.915
And now, imagine you wanted to use JavaScript on the,

00:02:50.915 --> 00:02:54.965
on the webpages that are stored in this bucket to be able to make

00:02:54.965 --> 00:02:57.950
authenticated GET and PUT requests against

00:02:57.950 --> 00:03:01.925
the same bucket by using the Amazon S3 API endpoint,

00:03:01.925 --> 00:03:06.395
which was the number one Amazon course website data.com.

00:03:06.395 --> 00:03:10.790
Now, a browser would normally blocked JavaScript from allowing these requests.

00:03:10.790 --> 00:03:14.330
But with cores, you can configure your bucket to explicitly

00:03:14.330 --> 00:03:18.335
enable cross-origin requests from that same endpoint.

00:03:18.335 --> 00:03:19.175
Okay?

00:03:19.175 --> 00:03:22.325
So that's kind of the use of Cross-Origin Resource Sharing.

00:03:22.325 --> 00:03:24.830
Your, another scenario would be, you know,

00:03:24.830 --> 00:03:29.240
suppose that you want to host a web font from your S3 bucket.

00:03:29.240 --> 00:03:32.885
Again, browsers require a course check,

00:03:32.885 --> 00:03:35.150
which I'll show you in the next slide.

00:03:35.150 --> 00:03:37.430
And there's a little diagram I can show you.

00:03:37.430 --> 00:03:40.950
But this chat.
