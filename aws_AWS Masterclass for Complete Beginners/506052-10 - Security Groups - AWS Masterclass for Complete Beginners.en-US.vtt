WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.295
Hello and welcome back.

00:00:02.295 --> 00:00:03.719
So in this section,

00:00:03.719 --> 00:00:06.420
we're going to be going over something that I alluded to

00:00:06.420 --> 00:00:09.780
quite often earlier in this section.

00:00:09.780 --> 00:00:12.120
And that is security group.

00:00:12.120 --> 00:00:19.000
So security groups are essentially the first step of network security and AWS.

00:00:19.040 --> 00:00:24.525
There one of the most useful skills to learn for troubleshooting network related issues.

00:00:24.525 --> 00:00:27.479
I mentioned to you before that if you're trying to

00:00:27.479 --> 00:00:31.290
access your instance and it's getting a timeout,

00:00:31.290 --> 00:00:32.699
you know, you're not able to access it.

00:00:32.699 --> 00:00:36.929
It's most probably an issue with your security groups because remember,

00:00:36.929 --> 00:00:42.265
we need to have port 22 open in order to access it through SSH.

00:00:42.265 --> 00:00:45.064
And that's determined in a security group.

00:00:45.064 --> 00:00:48.484
So for now we've been using the default security group that

00:00:48.484 --> 00:00:54.859
AWS gives us when we initiate or when we launch a new instance,

00:00:54.859 --> 00:00:56.719
a new EC2 instance.

00:00:56.719 --> 00:00:59.104
But these are actually completely configurable.

00:00:59.104 --> 00:01:01.625
And that's what we're going to be learning about in this video.

00:01:01.625 --> 00:01:06.304
So security groups act as

00:01:06.304 --> 00:01:12.529
a virtual file firewall for your EC2 instances to control incoming and outgoing traffic.

00:01:12.529 --> 00:01:13.700
Okay?

00:01:13.700 --> 00:01:19.669
Now, if you take a look at the image in the top right corner,

00:01:19.669 --> 00:01:23.284
you can see that there is a security group

00:01:23.284 --> 00:01:26.734
or a box that has been labeled as a security group.

00:01:26.734 --> 00:01:29.090
And then we have our EC2 machine here.

00:01:29.090 --> 00:01:32.960
And essentially all traffic that goes out of

00:01:32.960 --> 00:01:39.739
the EC2 instance or into the EC2 instance passes first through the security group.

00:01:39.739 --> 00:01:43.684
So it passes into here all inbound traffic.

00:01:43.684 --> 00:01:48.320
And based on the security groups and their permissions,

00:01:48.320 --> 00:01:53.149
it's either let through into the EC2 machine or it's blocked.

00:01:53.149 --> 00:01:55.955
And same thing goes for outbound traffic.

00:01:55.955 --> 00:01:59.270
And this security group is completely in our control.

00:01:59.270 --> 00:02:02.819
We can configure it to our needs.

00:02:03.220 --> 00:02:07.070
Inbound rules control the incoming traffic.

00:02:07.070 --> 00:02:08.255
To your instance.

00:02:08.255 --> 00:02:11.599
Outbound rules control the outgoing traffic from your instance.

00:02:11.599 --> 00:02:13.339
And when you launch an instance,

00:02:13.339 --> 00:02:16.369
you can specify one or more security groups,

00:02:16.369 --> 00:02:21.335
so you don't have to specify all your permission to within one security group.

00:02:21.335 --> 00:02:25.070
You can have different permissions spread out across security groups

00:02:25.070 --> 00:02:29.329
and you can assign multiple security groups to one instance.

00:02:29.329 --> 00:02:31.205
And if you don't specify your grade group,

00:02:31.205 --> 00:02:34.834
Amazon EC2 uses the default security group as we've seen.

00:02:34.834 --> 00:02:41.900
And the default security group is one that allows for SSH to go through.

00:02:41.900 --> 00:02:45.814
And you can add rules to eat security group

00:02:45.814 --> 00:02:50.270
that allow traffic to or from its associated instances.

00:02:50.270 --> 00:02:52.129
So these rules are,

00:02:52.129 --> 00:02:53.900
you know what I mean by permissions, right?

00:02:53.900 --> 00:02:56.630
These are what specify what can be

00:02:56.630 --> 00:02:59.960
passed and what can't be passed through that security group.

00:02:59.960 --> 00:03:04.265
And you can add rules for acyclic graph at anytime so you don't have to have

00:03:04.265 --> 00:03:08.989
these already thought up in your mind, already prepared.

00:03:08.989 --> 00:03:10.879
When you're launching your instance,

00:03:10.879 --> 00:03:12.800
you can go ahead and larger instance and not

00:03:12.800 --> 00:03:15.860
touch the security group section at all as we've been doing.

00:03:15.860 --> 00:03:19.279
And so you get just very minimal access.

00:03:19.279 --> 00:03:20.540
You just can't SSH access,

00:03:20.540 --> 00:03:22.310
everything else is blocked, which is good.

00:03:22.310 --> 00:03:24.739
It keeps your EC2 instance secure.

00:03:24.739 --> 00:03:27.439
And then you can think about how

00:03:27.439 --> 00:03:30.679
that particular instance will play into your larger application,

00:03:30.679 --> 00:03:32.960
into your larger system and,

00:03:32.960 --> 00:03:37.504
and what exactly you need to give it access to or 4.

00:03:37.504 --> 00:03:41.030
And then based on that, you can go back and you can add

00:03:41.030 --> 00:03:46.400
a new security group to it at anytime or you can add rules to an existing security group

00:03:46.400 --> 00:03:55.339
so there's no reason to panic about which roofs said during launch of an instance.

00:03:55.339 --> 00:03:57.904
Now new and modified rules are automatically

00:03:57.904 --> 00:04:00.680
applied to all instances that are associated with the security group.

00:04:00.680 --> 00:04:03.920
So the advantage of a security group is very similar to

00:04:03.920 --> 00:04:07.444
the advantage of having groups in the IAM section.

00:04:07.444 --> 00:04:14.270
Remember how we created our user and we gave it certain privileges, certain permissions.

00:04:14.270 --> 00:04:19.084
But we didn't want to do this for every single user every time.

00:04:19.084 --> 00:04:21.769
So instead we remove the permissions

00:04:21.769 --> 00:04:24.530
from the user and we created a group that had those permissions.

00:04:24.530 --> 00:04:26.735
And now whenever we create a new user,

00:04:26.735 --> 00:04:29.809
we can just assign him or her to that group.

00:04:29.809 --> 00:04:35.089
And they will automatically get the same permissions and then you can change it.

00:04:35.089 --> 00:04:38.930
And those changes will be applied to all the users that are in that group.

00:04:38.930 --> 00:04:43.609
So securing groups work in the same way and thus advantage of security guards if you have

00:04:43.609 --> 00:04:49.220
a certain set of rules for certain type of instance that you'll be launching.

00:04:49.220 --> 00:04:53.195
And U1 every time you launch an instance,

00:04:53.195 --> 00:04:57.829
that would be a version of that type of instance.

00:04:57.829 --> 00:04:59.734
They are working within your application.

00:04:59.734 --> 00:05:02.989
You wanted to have the same security rules

00:05:02.989 --> 00:05:05.825
or permissions for inbound and outbound traffic,

00:05:05.825 --> 00:05:08.615
then you can just specify that in a security group.

00:05:08.615 --> 00:05:11.600
And when you're creating your new EC2 instance,

00:05:11.600 --> 00:05:13.400
you can just select that security group.

00:05:13.400 --> 00:05:16.729
So all the rules are automatically applied to that instance.

00:05:16.729 --> 00:05:20.450
And then in the future if you have to change something like that, say while testing,

00:05:20.450 --> 00:05:21.769
you had to keep a port open,

00:05:21.769 --> 00:05:23.029
but in production it has to,

00:05:23.029 --> 00:05:25.624
it's going to be closed, but you have a 10 instances.

00:05:25.624 --> 00:05:28.100
So all you have do is you have to go to the security group

00:05:28.100 --> 00:05:32.314
itself and block that port, close up port.

00:05:32.314 --> 00:05:36.240
And it'll be close for all those instances.

00:05:36.750 --> 00:05:40.780
When EC2 decide whether to allow traffic to reach in essence,

00:05:40.780 --> 00:05:43.120
at evaluates all the rules from all of

00:05:43.120 --> 00:05:46.300
the security groups that are associated with the instance, okay?

00:05:46.300 --> 00:05:50.995
So it's not recommended to use the same security group across different instances,

00:05:50.995 --> 00:05:55.044
but definitely does has a habit advantages.

00:05:55.044 --> 00:05:58.570
So let's look at security group,

00:05:58.570 --> 00:06:00.819
security group rules, because rules are

00:06:00.819 --> 00:06:04.209
actually what will be specifying within a security group.

00:06:04.209 --> 00:06:07.044
The security group just gathers a set of rules

00:06:07.044 --> 00:06:10.810
together and package them together to make it easy to assign a different instances.

00:06:10.810 --> 00:06:14.619
But it's the rules themselves that will be changing within the security group.

00:06:14.619 --> 00:06:19.920
So the following are the characteristics of security group rules.

00:06:19.920 --> 00:06:26.329
By default, security groups allow all outbound traffic by default.

00:06:26.329 --> 00:06:29.494
And because there's really no security risks,

00:06:29.494 --> 00:06:37.429
when you're easy to EC2 instance can send that traffic out, right?

00:06:37.429 --> 00:06:40.160
There is no security risk for your instance,

00:06:40.160 --> 00:06:44.824
but obviously it will block all inbound traffic by default.

00:06:44.824 --> 00:06:50.479
Ssh, which keep it secure until you open up apart.

00:06:50.479 --> 00:06:53.179
That are ports are a range of ports.

00:06:53.179 --> 00:06:56.300
So security group rules are always permissive,

00:06:56.300 --> 00:06:59.435
which means you can't create rules that deny access.

00:06:59.435 --> 00:07:02.849
So you only specify what is allowed.

00:07:03.820 --> 00:07:08.420
And security group rules enable you to filter

00:07:08.420 --> 00:07:12.230
traffic based on protocols and port numbers,

00:07:12.230 --> 00:07:14.780
as we'll see in the hands-on section.

00:07:14.780 --> 00:07:20.690
And for each rule you specify following how you have to specify name,

00:07:20.690 --> 00:07:22.669
and that's the name for the security group.

00:07:22.669 --> 00:07:27.395
For example, you can name it my die Security dash group, right?

00:07:27.395 --> 00:07:32.629
So just like how we've been naming key-value pairs and,

00:07:32.629 --> 00:07:34.850
and, and that kind of stuff.

00:07:34.850 --> 00:07:40.310
So a name can be up to 2255 characters in length.

00:07:40.310 --> 00:07:45.305
And again, in a pretty similar to how we've been naming his reform,

00:07:45.305 --> 00:07:46.520
if you're used to programming,

00:07:46.520 --> 00:07:48.020
it's just like a variable name.

00:07:48.020 --> 00:07:50.479
And there are only certain characters that are allowed

00:07:50.479 --> 00:07:52.789
and you can't start with certain characters and I kind of stuff,

00:07:52.789 --> 00:07:55.280
but it's okay because, you know,

00:07:55.280 --> 00:08:00.439
Amazon will warn you if you try to use our name that is not suitable.

00:08:00.439 --> 00:08:02.585
And then protocol.

00:08:02.585 --> 00:08:07.025
So you have to specify the protocol to allow.

00:08:07.025 --> 00:08:13.820
And the most, most common protocols are TCP, UDP, ICMP.

00:08:13.820 --> 00:08:15.920
Now this is not an IT networking class.

00:08:15.920 --> 00:08:18.889
So if you're not familiar with those, that's okay.

00:08:18.889 --> 00:08:21.079
But if you do need them for your application,

00:08:21.079 --> 00:08:23.299
you have to go and learn about them obviously,

00:08:23.299 --> 00:08:27.680
but and then port range, you have to.

00:08:27.680 --> 00:08:30.889
So for TCP, UDP, or a custom protocol,

00:08:30.889 --> 00:08:34.699
the range of ports to allow is what you need to specify here.

00:08:34.699 --> 00:08:36.935
And you can specify single port number.

00:08:36.935 --> 00:08:39.680
For example, 22. In the case of SSH,

00:08:39.680 --> 00:08:41.480
I'm on a range of ports, for example,

00:08:41.480 --> 00:08:44.434
7 thousand to 8 thousand, right?

00:08:44.434 --> 00:08:47.870
And then you have to specify the ICMP typing code.

00:08:47.870 --> 00:08:51.079
And this is only for ICMP protocols.

00:08:51.079 --> 00:08:54.334
Again, I'm just adding this in here just for extra information,

00:08:54.334 --> 00:08:58.174
but I've never had myself have to specify, you know,

00:08:58.174 --> 00:09:01.309
I've never worked in domains where I've needed ICMP,

00:09:01.309 --> 00:09:04.204
so this is considered as extra knowledge.

00:09:04.204 --> 00:09:06.079
It's not crucial for this.

00:09:06.079 --> 00:09:10.354
And then you have to specify the source or the destination.

00:09:10.354 --> 00:09:13.189
So the source is for inbound rules

00:09:13.189 --> 00:09:16.459
and the destination is for outbound rules for the traffic.

00:09:16.459 --> 00:09:21.860
Okay? So especially I want to either an individual IP four address,

00:09:21.860 --> 00:09:23.614
and that's basically what we are going to be using.

00:09:23.614 --> 00:09:26.840
But you can also specify IPV6 addresses and,

00:09:26.840 --> 00:09:28.084
and that kind of stuff.

00:09:28.084 --> 00:09:32.300
But you can also specify another security group.

00:09:32.300 --> 00:09:35.089
And this allows instances that are associated with

00:09:35.089 --> 00:09:38.975
the specific security group to access instances associated with the security group,

00:09:38.975 --> 00:09:41.374
which is very cool, say the least.

00:09:41.374 --> 00:09:46.025
And choosing this option does not add rules for the source security group to this,

00:09:46.025 --> 00:09:48.350
from the source to the security group.

00:09:48.350 --> 00:09:51.140
And you can specify one of the following security group.

00:09:51.140 --> 00:09:53.164
So you can specify current security Europe.

00:09:53.164 --> 00:09:56.299
I'm a different security group from the same VPC for

00:09:56.299 --> 00:10:01.805
a different security group from a peer VPC in a VPC peering connection.

00:10:01.805 --> 00:10:06.575
So again, these are some more advanced topics of, you know, how,

00:10:06.575 --> 00:10:11.239
how to allow your EC2 instances to communicate with one another and that kind of stuff.

00:10:11.239 --> 00:10:13.490
But it's good to know, right,

00:10:13.490 --> 00:10:15.289
that they exist and when you do need it,

00:10:15.289 --> 00:10:16.999
it'll be easier for you to look it up.

00:10:16.999 --> 00:10:22.475
And then obviously you have to specify a description if you want.

00:10:22.475 --> 00:10:27.799
It's optional, but it helps to identify your security ops later.

00:10:27.799 --> 00:10:30.305
So when you specify a security group,

00:10:30.305 --> 00:10:32.824
the source or destination for a rule,

00:10:32.824 --> 00:10:36.215
the rule affects all instances that are associated with the security group.

00:10:36.215 --> 00:10:38.180
So incoming traffic is allowed based

00:10:38.180 --> 00:10:41.359
on the private IP addresses of the instances that are

00:10:41.359 --> 00:10:47.750
associated with the source security group and not the public IP or elastic IP addresses.

00:10:47.750 --> 00:10:48.860
Again.

00:10:48.860 --> 00:10:51.320
And we're going to be covering IP addresses in a later video,

00:10:51.320 --> 00:10:53.315
but just keep that in mind.

00:10:53.315 --> 00:10:56.239
One last thing to keep in mind is that if there is

00:10:56.239 --> 00:10:58.910
more than one rule for a specific port,

00:10:58.910 --> 00:11:03.260
Amazon EC2 sub applies the set and the most permissive rule.

00:11:03.260 --> 00:11:07.909
For example, if you have a rule that allows access to a TCP port 22 for

00:11:07.909 --> 00:11:13.294
SSH from some random IP address, let's say.

00:11:13.294 --> 00:11:18.920
And another rule that allows access to TCP port 22 from everyone.

00:11:18.920 --> 00:11:24.860
Everyone has access to that port 22 to TCP port 22.

00:11:24.860 --> 00:11:30.634
Because Easy to, the service will immediately pick the most permissive,

00:11:30.634 --> 00:11:32.855
the one that allows for the most.

00:11:32.855 --> 00:11:34.639
So watch out for that.

00:11:34.639 --> 00:11:37.880
If you've had, had a larger range of

00:11:37.880 --> 00:11:41.509
IP addresses allowed for a certain port, and then later you won't,

00:11:41.509 --> 00:11:44.195
you wanted to limit it to a certain IP address,

00:11:44.195 --> 00:11:47.689
might not realize that you still have, you know,

00:11:47.689 --> 00:11:49.730
you're still giving access to the whole range because

00:11:49.730 --> 00:11:52.025
you haven't removed that that particular rule.

00:11:52.025 --> 00:11:57.979
So these are some things to keep in mind for security purposes,

00:11:57.979 --> 00:12:00.680
security best practices and

00:12:00.680 --> 00:12:07.399
other security best practices are to always close unnecessary open ports.

00:12:07.399 --> 00:12:14.390
So large port ranges when open exposed instances to unwanted attacks, right?

00:12:14.390 --> 00:12:15.380
Naturally.

00:12:15.380 --> 00:12:18.634
More than that, they make the traceability von,

00:12:18.634 --> 00:12:21.094
vulnerability is very difficult.

00:12:21.094 --> 00:12:24.410
For instance, your web servers,

00:12:24.410 --> 00:12:30.725
and they only require 80 and 443 ports to be open, but not all.

00:12:30.725 --> 00:12:40.370
One of the most common mistakes is when users open all ports using 0.050 slash 0.

00:12:40.370 --> 00:12:45.454
And they do this in a rush when they're first creating their instance

00:12:45.454 --> 00:12:51.274
because they're in a hurry and they just want to give complete access to the instance.

00:12:51.274 --> 00:12:54.905
And they think they're going to fix a later, but then they forget.

00:12:54.905 --> 00:12:58.010
And so the incidence remains open to everybody.

00:12:58.010 --> 00:13:01.280
And that's a very big security threat, right?

00:13:01.280 --> 00:13:03.170
And when running EC2 instances,

00:13:03.170 --> 00:13:06.620
you must expose your apps only to

00:13:06.620 --> 00:13:10.729
those ports enabled on the corresponding security group level.

00:13:10.729 --> 00:13:13.040
So things to keep in mind.

00:13:13.040 --> 00:13:18.200
Again, these might be going over your head because you still don't know what cgroups are.

00:13:18.200 --> 00:13:19.610
You never had experience with it,

00:13:19.610 --> 00:13:22.055
but you can always refer back to this video.

00:13:22.055 --> 00:13:23.600
And I get my,

00:13:23.600 --> 00:13:27.229
my job here is to give you as much exposure as possible.

00:13:27.229 --> 00:13:30.020
Um, but then obviously you have to go in and do

00:13:30.020 --> 00:13:33.154
some more studying on your own as with everything, right?

00:13:33.154 --> 00:13:37.699
So don't open ports for 0.01000 unless specifically required.

00:13:37.699 --> 00:13:41.674
So this is, this is what you specify

00:13:41.674 --> 00:13:46.955
in your range of IP addresses if you want to allow all IP addresses to access that port.

00:13:46.955 --> 00:13:49.880
So don't do that unless specifically required.

00:13:49.880 --> 00:13:52.685
There's really no need to do even for SSH.

00:13:52.685 --> 00:13:55.880
You know, even if you have security in other security measures in

00:13:55.880 --> 00:13:59.404
place like a key value pair and a password. And I kind of stuff.

00:13:59.404 --> 00:14:02.824
Generally, it's best to just pick my IP.

00:14:02.824 --> 00:14:06.469
And because most probably we are the only ones can be accessing it.

00:14:06.469 --> 00:14:11.269
And, you know, even if you do allow multiple people to access it,

00:14:11.269 --> 00:14:13.564
instead of just allowing for everybody access it,

00:14:13.564 --> 00:14:16.999
it's best to just receive from them their IP addresses,

00:14:16.999 --> 00:14:20.315
like requested IP addresses from the method second developer or somebody in.

00:14:20.315 --> 00:14:23.015
And just specify those specifically.

00:14:23.015 --> 00:14:26.225
Now minimize the number of discrete security groups.

00:14:26.225 --> 00:14:29.734
So security configurations in AWS or dynamic.

00:14:29.734 --> 00:14:34.055
So administrator can change these configuration at anytime.

00:14:34.055 --> 00:14:39.529
With the presence of unattached security groups,

00:14:39.529 --> 00:14:42.005
the risk of misconfiguration increases,

00:14:42.005 --> 00:14:45.949
increases because it makes it difficult for administrative figure out

00:14:45.949 --> 00:14:50.795
attached and unattached security groups in a large scale infrastructure.

00:14:50.795 --> 00:14:54.799
And so the chances of him or her changing the configuration of

00:14:54.799 --> 00:14:59.270
wrong security groups or accidentally attaching them to public instances

00:14:59.270 --> 00:15:08.059
becomes very high and this inadvertently opens up your environment to attacks.

00:15:08.059 --> 00:15:11.555
So a pro tip in this case,

00:15:11.555 --> 00:15:14.869
in this situation would be that the easiest way

00:15:14.869 --> 00:15:18.530
to identify unused security groups is to browse.

00:15:18.530 --> 00:15:20.059
And you can, I'm going to show you this,

00:15:20.059 --> 00:15:23.929
but you can browse through security group, Groups, lists,

00:15:23.929 --> 00:15:28.069
and then if you select them all and you try to delete them,

00:15:28.069 --> 00:15:32.149
AWS will tell you that you can't delete the security groups that are currently

00:15:32.149 --> 00:15:37.504
assigned are attached to instances and so it will delete everything else.

00:15:37.504 --> 00:15:39.064
And so, you know,

00:15:39.064 --> 00:15:41.539
obviously it's best to automate this in using

00:15:41.539 --> 00:15:44.659
some sort of programming or something if we can.

00:15:44.659 --> 00:15:47.464
But the worst case, you can do this.

00:15:47.464 --> 00:15:50.434
So just like administration acts,

00:15:50.434 --> 00:15:54.170
can accidentally miss misconfigured a security group.

00:15:54.170 --> 00:15:57.469
Another I am in other IAM roles

00:15:57.469 --> 00:16:01.100
with access to modifying security groups can be configured them as well.

00:16:01.100 --> 00:16:06.394
So you should authorize only specific users to modify research specific security groups.

00:16:06.394 --> 00:16:10.399
So you should restrict access to ec2 security groups

00:16:10.399 --> 00:16:15.785
and be alert when using multiple security groups in the same EC2 instance.

00:16:15.785 --> 00:16:20.675
And always maintain one separate security refreshes each access.

00:16:20.675 --> 00:16:23.899
Security groups are always associated with a VPC.

00:16:23.899 --> 00:16:25.699
That's something to keep in mind in

00:16:25.699 --> 00:16:29.550
the grander scheme of things when it comes to security.

00:16:29.560 --> 00:16:36.509
Now let's go and have some hands on practice using security groups.

00:16:36.820 --> 00:16:41.990
So here we are back in the AWS management console.

00:16:41.990 --> 00:16:44.630
Now sends security groups.

00:16:44.630 --> 00:16:46.219
When we talk about security groups,

00:16:46.219 --> 00:16:48.920
we mean EC2, right?

00:16:48.920 --> 00:16:55.669
We're talking about security rules and inbound and outbound rules for EC2 instances.

00:16:55.669 --> 00:17:01.745
So naturally secure groups will be located within the EC2 service.

00:17:01.745 --> 00:17:04.385
And so let's go on in.

00:17:04.385 --> 00:17:07.430
And here we are. We have our instance running, right?

00:17:07.430 --> 00:17:12.574
This is the last instance that we used userData to launch.

00:17:12.574 --> 00:17:15.980
And it should have an H,

00:17:15.980 --> 00:17:17.704
you have Git installed, Docker installed,

00:17:17.704 --> 00:17:27.620
and an Apache server that is displaying a very simple page to its port 80.

00:17:27.620 --> 00:17:30.079
And that page, remember,

00:17:30.079 --> 00:17:36.364
we're the one that we created ourselves and it displays the host name of the instance.

00:17:36.364 --> 00:17:39.589
But we weren't able to use an actual browser to view it.

00:17:39.589 --> 00:17:42.710
We had to use curl from within the instance to you locally,

00:17:42.710 --> 00:17:46.400
but we weren't, we were to view it on the private network,

00:17:46.400 --> 00:17:48.259
non-locally, but on the private network.

00:17:48.259 --> 00:17:52.160
But we weren't able to view it on the public network because we

00:17:52.160 --> 00:17:55.925
didn't have port 80 open for the instance.

00:17:55.925 --> 00:17:57.725
And now using security groups,

00:17:57.725 --> 00:18:00.680
we're going to be able to open them up.

00:18:00.680 --> 00:18:04.864
So and we're going to be able to expose port

00:18:04.864 --> 00:18:09.934
80 to the world publicly and then use a browser to actually view the instance.

00:18:09.934 --> 00:18:18.229
Now, we have one instance running one key pair,

00:18:18.229 --> 00:18:21.649
one volume that's by default attached to the instance.

00:18:21.649 --> 00:18:25.010
And we're going to be covering volumes in later section.

00:18:25.010 --> 00:18:27.770
But if you go here and you see the security groups,

00:18:27.770 --> 00:18:29.540
there happens to be six.

00:18:29.540 --> 00:18:33.709
And the reason is I created some extra ones just to show you how we

00:18:33.709 --> 00:18:35.810
can delete all the ones that are not

00:18:35.810 --> 00:18:37.969
currently are so currently associated with an instance.

00:18:37.969 --> 00:18:39.440
So of the six,

00:18:39.440 --> 00:18:44.014
not all are associated with the running instance or at any instance at all.

00:18:44.014 --> 00:18:47.645
So remember we said it's good practice to not leave

00:18:47.645 --> 00:18:51.410
security groups laying around if you're using them.

00:18:51.410 --> 00:18:57.200
And so I'm going to show you the quick way of getting rid of extra security group.

00:18:57.200 --> 00:19:00.890
So let's go into security groups and we can actually access

00:19:00.890 --> 00:19:06.290
the security groups dashboard from the sidebar as well.

00:19:06.290 --> 00:19:08.959
Now we're pretty familiar with the sidebar by now.

00:19:08.959 --> 00:19:14.090
We've mainly been using the Instances tab here.

00:19:14.090 --> 00:19:17.839
But if you go down into network and security,

00:19:17.839 --> 00:19:21.184
the first option there is security groups.

00:19:21.184 --> 00:19:23.509
So we can just click that as well and we're here.

00:19:23.509 --> 00:19:28.040
So starting with letting me click it because it's the same page.

00:19:28.040 --> 00:19:30.604
So we have all these different security groups now.

00:19:30.604 --> 00:19:34.159
And we don't know exactly which ones are associated

00:19:34.159 --> 00:19:37.519
with which instances, but we don't need to.

00:19:37.519 --> 00:19:39.575
We can go ahead and select them all.

00:19:39.575 --> 00:19:41.539
And then under Actions,

00:19:41.539 --> 00:19:44.180
we can delete security group and

00:19:44.180 --> 00:19:48.170
knock AWS tells us that some security groups cannot be deleted.

00:19:48.170 --> 00:19:52.820
Specifically, this security group here and this one here

00:19:52.820 --> 00:19:58.204
can be deleted or will not even be deleted because this is a default security.

00:19:58.204 --> 00:19:59.974
So first of all, this is a default,

00:19:59.974 --> 00:20:03.724
the default security group that AWS uses, right?

00:20:03.724 --> 00:20:07.159
When we said that if you're not using a security group.

00:20:07.159 --> 00:20:09.799
I was on, attaches when my default,

00:20:09.799 --> 00:20:13.700
so the default security groups can be deleted on,

00:20:13.700 --> 00:20:15.170
whereas this one is,

00:20:15.170 --> 00:20:17.539
has one instance associated with N. You can actually

00:20:17.539 --> 00:20:20.585
click this to go into and see which instance it is.

00:20:20.585 --> 00:20:22.579
In our case, we only have one instance anyway,

00:20:22.579 --> 00:20:23.839
so there's no need to do that.

00:20:23.839 --> 00:20:26.060
So we have to either terminate the distances

00:20:26.060 --> 00:20:30.575
or terminate instances or associate them with different security groups.

00:20:30.575 --> 00:20:35.465
So the associate them with this one in order to be able to delete the security group.

00:20:35.465 --> 00:20:40.250
And so what the rest are not associated with anything,

00:20:40.250 --> 00:20:41.855
so we can go ahead and delete them.

00:20:41.855 --> 00:20:44.359
And so we have to confirm my writing,

00:20:44.359 --> 00:20:47.809
delete and press delete.

00:20:47.809 --> 00:20:51.500
Everything will be deleted except for those two.

00:20:51.500 --> 00:20:52.745
Okay?

00:20:52.745 --> 00:20:57.455
Now we can go into the default security group.

00:20:57.455 --> 00:20:59.224
Okay, So you could do group name.

00:20:59.224 --> 00:21:05.090
Let's click on it. And we can see immediately that there is,

00:21:05.090 --> 00:21:08.479
there are some inbound rules and some outbound rules.

00:21:08.479 --> 00:21:12.184
And basically the inbound rule allows

00:21:12.184 --> 00:21:17.779
all traffic and for all protocols and all port ranges,

00:21:17.779 --> 00:21:19.850
and allows all of them to come in.

00:21:19.850 --> 00:21:23.704
And outbound rules does the same for outbound traffic.

00:21:23.704 --> 00:21:31.024
And this is something that we do not advise, right?

00:21:31.024 --> 00:21:34.009
Because It's too much exposure,

00:21:34.009 --> 00:21:35.974
too much security risk.

00:21:35.974 --> 00:21:39.260
But we're not going to edit the default one.

00:21:39.260 --> 00:21:42.229
We're gonna go back into security groups and

00:21:42.229 --> 00:21:45.725
select the one that's currently associated with an instance.

00:21:45.725 --> 00:21:48.994
And here we can see that this was created during lunch.

00:21:48.994 --> 00:21:53.794
And it allows, it has an amount rule that allows for

00:21:53.794 --> 00:22:00.335
TCP port 22 access for all IP addresses.

00:22:00.335 --> 00:22:03.169
And we said description is optional.

00:22:03.169 --> 00:22:04.940
And then outbound rules,

00:22:04.940 --> 00:22:07.580
it allows for all outbound traffic because again,

00:22:07.580 --> 00:22:09.709
we said that outbound traffic is not a risk,

00:22:09.709 --> 00:22:10.879
it's own inbound traffic.

00:22:10.879 --> 00:22:17.690
So this, this basically limits the inbound rules to an SSH port 22.

00:22:17.690 --> 00:22:22.879
Now, let's go ahead and edit the inbound rules.

00:22:22.879 --> 00:22:28.175
We have this existing one which we can modify.

00:22:28.175 --> 00:22:31.624
For example, we can remove all.

00:22:31.624 --> 00:22:38.870
And we can specify an individual IP address.

00:22:38.870 --> 00:22:42.560
Or we can specify another security group, like we said.

00:22:42.560 --> 00:22:45.470
Or we can, if you click on my API here,

00:22:45.470 --> 00:22:47.464
I'm not going to do it. So you don't know my IP.

00:22:47.464 --> 00:22:49.970
But if you click on this year,

00:22:49.970 --> 00:22:51.590
Ip will pop into here.

00:22:51.590 --> 00:22:55.939
So that would mean that you will have access only.

00:22:55.939 --> 00:23:03.935
You will have access through your IP address to the TCP port 22 of the instance.

00:23:03.935 --> 00:23:08.419
And so generally that is best practice to just select my P. But in

00:23:08.419 --> 00:23:12.920
the case where you're not sure who's going to be accessing it and so on and so forth.

00:23:12.920 --> 00:23:17.390
It's better to pick anywhere on port 22 then to

00:23:17.390 --> 00:23:21.860
just not have any rules and have complete access to all ports on your instance.

00:23:21.860 --> 00:23:25.039
So at least you're limiting the access to port 22.

00:23:25.039 --> 00:23:29.300
And they would need in a key-value pair something to access it on the Select,

00:23:29.300 --> 00:23:31.804
perhaps some high-level hacking skills or something.

00:23:31.804 --> 00:23:36.979
But you so either stick with customer or my P. But if not anywhere is better

00:23:36.979 --> 00:23:41.870
than having no rule and just allowing complete access using the default security group.

00:23:41.870 --> 00:23:44.630
So we're going to add a rule.

00:23:44.630 --> 00:23:46.370
And by the way,

00:23:46.370 --> 00:23:48.319
you can delete rules as well.

00:23:48.319 --> 00:23:50.270
So there we go. We deleted.

00:23:50.270 --> 00:23:50.674
Again.

00:23:50.674 --> 00:23:53.015
Don't be scared to do stuff like this.

00:23:53.015 --> 00:23:56.090
All we have to do is we have to just create a new rule.

00:23:56.090 --> 00:24:00.710
And we can just go ahead and click SSH from here.

00:24:00.710 --> 00:24:08.209
And then we'll allow anywhere, anywhere else.

00:24:08.209 --> 00:24:10.050
That's what I recall it.

00:24:10.780 --> 00:24:14.279
And we can add a rule.

00:24:14.710 --> 00:24:18.709
And now we can add HTTP access.

00:24:18.709 --> 00:24:22.085
So HTTP is port 80, port 80.

00:24:22.085 --> 00:24:25.489
So as opposed to HTTPS, which is port 443,

00:24:25.489 --> 00:24:30.845
but we know that our Apache server is currently running on port 80,

00:24:30.845 --> 00:24:34.190
so we don't want HTTPS, we want HTTP.

00:24:34.190 --> 00:24:36.709
And then we can allow access from anywhere

00:24:36.709 --> 00:24:39.649
because our webpage should have access from anywhere, right?

00:24:39.649 --> 00:24:45.959
And so HTTP access from anywhere.

00:24:49.270 --> 00:24:54.080
And we can save the rules.

00:24:54.080 --> 00:25:00.889
There we go. Now, this security group gives access

00:25:00.889 --> 00:25:07.084
to any instance associated with it to port 80,

00:25:07.084 --> 00:25:12.630
80, and port 22 from anywhere.

00:25:12.700 --> 00:25:15.379
And how can we test this?

00:25:15.379 --> 00:25:18.755
First of all, let's go back into our EC2 dashboard.

00:25:18.755 --> 00:25:21.600
Let's go two running instances.

00:25:23.260 --> 00:25:25.999
And if we click on,

00:25:25.999 --> 00:25:32.730
Let's just click on my second instance.

00:25:34.690 --> 00:25:37.535
Down in here we know this page,

00:25:37.535 --> 00:25:40.324
right, public IP address, private IP address.

00:25:40.324 --> 00:25:42.274
But if we go into security now,

00:25:42.274 --> 00:25:46.730
we have the security groups that are associated with this instance.

00:25:46.730 --> 00:25:48.110
So if we click on this,

00:25:48.110 --> 00:25:50.719
we jump right back into where we were.

00:25:50.719 --> 00:25:55.565
This was the security group that we were editing, launch wizard five.

00:25:55.565 --> 00:25:57.300
Okay.

00:25:57.820 --> 00:26:01.804
So, and then we can see we have four inbound rules.

00:26:01.804 --> 00:26:04.760
Rules are for inbound permission entries.

00:26:04.760 --> 00:26:06.230
Now.

00:26:06.230 --> 00:26:09.920
Now if we go back under security,

00:26:09.920 --> 00:26:13.549
we don't even have to click into the Security Groups page

00:26:13.549 --> 00:26:17.990
because we can see the inbound rules and the outbound rules directly from here.

00:26:17.990 --> 00:26:20.075
We can edit them, but we can see them.

00:26:20.075 --> 00:26:22.745
And that's very useful now.

00:26:22.745 --> 00:26:26.240
So we're confident now for sure that

00:26:26.240 --> 00:26:30.680
that security group launch was at five that we just added in on port 8080.

00:26:30.680 --> 00:26:34.084
Port 82 is associated with this instance.

00:26:34.084 --> 00:26:38.990
And this instance does have Apache running on port 80.

00:26:38.990 --> 00:26:44.750
And so we can now access this publicly through a public network.

00:26:44.750 --> 00:26:48.155
So now we should be able to access this instance from.

00:26:48.155 --> 00:26:54.694
Port 80 using its public IP address or its public IP for DNS.

00:26:54.694 --> 00:27:00.829
So these two will essentially direct you to the same instance as long as it's on port 80.

00:27:00.829 --> 00:27:06.154
Now port 80 essentially means it's an HTTP connection or an HTTP port,

00:27:06.154 --> 00:27:10.009
which is how websites are our access to the browser.

00:27:10.009 --> 00:27:14.794
So we don't need to worry about specifying port 80 at the end of the address,

00:27:14.794 --> 00:27:17.180
because a browser automatically does that for you.

00:27:17.180 --> 00:27:21.560
So we can just click on Open address here.

00:27:21.560 --> 00:27:25.610
And AWS conveniently pops up a new tab.

00:27:25.610 --> 00:27:27.440
And this is the public DNS.

00:27:27.440 --> 00:27:30.725
Now, remember, this is very important.

00:27:30.725 --> 00:27:35.135
You know, that I keep reemphasizing this security janet like security groups

00:27:35.135 --> 00:27:40.399
are or should be your go-to place for natural connection issues, right?

00:27:40.399 --> 00:27:47.840
Right now, we have the public DNS name of our instance up in the browser,

00:27:47.840 --> 00:27:52.939
up in the URL spot of the browser.

00:27:52.939 --> 00:27:55.864
But there's no connection happening.

00:27:55.864 --> 00:27:58.160
There's a timeout. And if,

00:27:58.160 --> 00:27:59.929
you know, connection timed out.

00:27:59.929 --> 00:28:03.154
And if we go back in here and we check our security group,

00:28:03.154 --> 00:28:04.565
we see that in fact,

00:28:04.565 --> 00:28:07.145
we do have access to port 80.

00:28:07.145 --> 00:28:09.740
And so we shouldn't be having any problem.

00:28:09.740 --> 00:28:11.615
So there's no problem on this side.

00:28:11.615 --> 00:28:13.790
So then if we click this,

00:28:13.790 --> 00:28:20.735
we can see that in fact the problem is that we're trying to access port 443,

00:28:20.735 --> 00:28:24.739
HTTPS access port 443.

00:28:24.739 --> 00:28:27.740
We we don't have port 443 open.

00:28:27.740 --> 00:28:29.524
We only have port 80 open.

00:28:29.524 --> 00:28:35.120
So we have to make sure that this is HTTP,

00:28:35.120 --> 00:28:37.040
which is port 80.

00:28:37.040 --> 00:28:39.500
And now when we press Enter, there we go.

00:28:39.500 --> 00:28:41.569
We have our page.

00:28:41.569 --> 00:28:42.950
This is the page that we created,

00:28:42.950 --> 00:28:49.054
if you remember using when we edited index.html in our instance.

00:28:49.054 --> 00:28:54.485
And so we had a display hello world from and then the,

00:28:54.485 --> 00:28:57.590
the host name for the instance.

00:28:57.590 --> 00:29:06.529
And if we can, if we compare this with the private IP address, right?

00:29:06.529 --> 00:29:11.030
It's the same. So this is the same instance.

00:29:11.030 --> 00:29:13.850
So this is a success.

00:29:13.850 --> 00:29:21.740
We have successfully connected to our instance through port 80.

00:29:21.740 --> 00:29:25.219
So that's essentially how security groups work.

00:29:25.219 --> 00:29:28.385
Now, it's generally good practice.

00:29:28.385 --> 00:29:33.499
If you go into security groups and you create

00:29:33.499 --> 00:29:40.024
separate security groups for Internet access and separate for SSH access.

00:29:40.024 --> 00:29:42.904
So let's create a security group. Now.

00:29:42.904 --> 00:29:46.295
What we've done so far as modify an existing security group,

00:29:46.295 --> 00:29:56.280
but let's create one and let's call it SS H access.

00:29:58.810 --> 00:30:05.540
Allows SSH access for everyone.

00:30:05.540 --> 00:30:08.630
And we only have one VPC,

00:30:08.630 --> 00:30:10.715
which is a virtual private Cloud.

00:30:10.715 --> 00:30:13.865
So you don't have to worry about, I just select that.

00:30:13.865 --> 00:30:17.269
But if you do have different virtual private clouds,

00:30:17.269 --> 00:30:22.205
you will have to specify which one you want your security group to be created under.

00:30:22.205 --> 00:30:28.760
And we add inbound rules, SSH, anywhere.

00:30:28.760 --> 00:30:32.060
And we're just gonna ignore the description for now

00:30:32.060 --> 00:30:35.389
because we have a description for the group itself.

00:30:35.389 --> 00:30:41.420
And then upon rows we can just keep the same and we can create a security group.

00:30:41.420 --> 00:30:45.710
Now, you can see that we have

00:30:45.710 --> 00:30:52.340
SSH access and we have inbound rules access the port 22 by everyone.

00:30:52.340 --> 00:30:55.309
Let's go back into security groups.

00:30:55.309 --> 00:30:59.489
And let's create another security group.

00:31:00.460 --> 00:31:09.389
Http access plows.

00:31:10.030 --> 00:31:15.089
Http access for everyone.

00:31:15.880 --> 00:31:23.030
We add a rule, HTTP anywhere.

00:31:23.030 --> 00:31:26.374
And that's it we created.

00:31:26.374 --> 00:31:28.520
Now when we go to security groups,

00:31:28.520 --> 00:31:34.504
we have for security groups and we have SSH access, HTTP access.

00:31:34.504 --> 00:31:40.265
Now, let's go into.

00:31:40.265 --> 00:31:43.729
But the thing is, these two are not associated with any instances,

00:31:43.729 --> 00:31:45.919
but this one is still associated with our instance and it

00:31:45.919 --> 00:31:48.500
has access to port 80 and port 20.

00:31:48.500 --> 00:31:50.704
And we want to split this up into two groups, right?

00:31:50.704 --> 00:31:53.465
So let's go back into our instances.

00:31:53.465 --> 00:31:58.580
So let's select our instance that we want to modify the security group.

00:31:58.580 --> 00:32:00.620
So we want to modify.

00:32:00.620 --> 00:32:03.425
And up here.

00:32:03.425 --> 00:32:07.324
And under Actions, under security,

00:32:07.324 --> 00:32:10.349
we can change the security groups.

00:32:10.720 --> 00:32:14.929
Now that we're here, we can see the associated security groups.

00:32:14.929 --> 00:32:18.295
We can add security groups and we can remove existing security group.

00:32:18.295 --> 00:32:20.569
So let's go ahead and remove that.

00:32:20.569 --> 00:32:23.044
Now what happens when this is removed?

00:32:23.044 --> 00:32:29.539
It's associated with the default AWS security group that we saw earlier.

00:32:29.539 --> 00:32:31.669
And you can go back and check the details of that again,

00:32:31.669 --> 00:32:34.235
the empire, the inbound and outbound rules.

00:32:34.235 --> 00:32:38.659
But now we want to add SSH access,

00:32:38.659 --> 00:32:42.604
and we want to add HTTP access.

00:32:42.604 --> 00:32:47.570
Now let's save. Let's go back into here.

00:32:47.570 --> 00:32:49.009
Let's refresh.

00:32:49.009 --> 00:32:51.800
And we refresh. There we go.

00:32:51.800 --> 00:32:54.139
We still have access to port 80.

00:32:54.139 --> 00:32:57.240
And if we try to connect to this instance,

00:32:58.360 --> 00:33:01.775
we still have access to port 22.

00:33:01.775 --> 00:33:04.730
Now if we were to go back,

00:33:04.730 --> 00:33:07.249
and let's say that we're done, right,

00:33:07.249 --> 00:33:10.849
We're done with testing and developing.

00:33:10.849 --> 00:33:13.324
Now, this is going to be a public application,

00:33:13.324 --> 00:33:17.810
public webpage, and we don't want anybody to have SSH access at all.

00:33:17.810 --> 00:33:19.940
We want to remove that privilege completely.

00:33:19.940 --> 00:33:23.825
So we can just go back into action security chain security groups.

00:33:23.825 --> 00:33:27.469
And we can just remove access to SSH.

00:33:27.469 --> 00:33:30.829
The advantage of that is whatever IP addresses you had specified there,

00:33:30.829 --> 00:33:33.200
you can just remove it and later when you want to add it back,

00:33:33.200 --> 00:33:36.175
you can add it without having to keep track of this,

00:33:36.175 --> 00:33:38.134
of the IP addresses and that kind of stuff,

00:33:38.134 --> 00:33:40.850
because it's going to all be still saved under the security group.

00:33:40.850 --> 00:33:44.780
You just disassociating the security group with this instance,

00:33:44.780 --> 00:33:46.685
but the security group still exists.

00:33:46.685 --> 00:33:53.930
So if we, if we click Save and we go into our page,

00:33:53.930 --> 00:33:57.620
we refresh, we still have access to the, to the instance.

00:33:57.620 --> 00:34:00.300
But if we try to connect,

00:34:00.340 --> 00:34:06.305
we're going to get a timeout because we do not have access to port 22.

00:34:06.305 --> 00:34:11.809
So I'm not going to wait because not waste your time,

00:34:11.809 --> 00:34:13.790
but if you continue to waiting,

00:34:13.790 --> 00:34:19.295
you'd get a timeout and you would not be able to access TCP port 22 on your instance.

00:34:19.295 --> 00:34:21.874
So let's cancel.

00:34:21.874 --> 00:34:23.900
So that's an a.

00:34:23.900 --> 00:34:26.119
And then you can always go into security and you can

00:34:26.119 --> 00:34:28.880
view just to keep track of what you did now,

00:34:28.880 --> 00:34:31.340
we just have access to port 80.

00:34:31.340 --> 00:34:32.554
We can see that.

00:34:32.554 --> 00:34:37.189
And we don't even have to go down into here because we aptly named our security group.

00:34:37.189 --> 00:34:39.425
So we can just talk about this.

00:34:39.425 --> 00:34:42.094
So we have HTTP access.

00:34:42.094 --> 00:34:47.029
So that's essentially what security groups are.

00:34:47.029 --> 00:34:52.204
Obviously, there's a lot more depth to them and I'm going to let you figure that out.

00:34:52.204 --> 00:34:57.210
One last thing though. Let's just go ahead and try to launch a new instance.

00:34:57.970 --> 00:35:01.980
And let's select our existing instance.

00:35:02.830 --> 00:35:05.659
Configure instance details.

00:35:05.659 --> 00:35:08.674
And we can jump right into configure security group.

00:35:08.674 --> 00:35:12.290
And here, instead of creating a new security group,

00:35:12.290 --> 00:35:18.740
so my default, the launch wizard is creating a new security group for SSH access.

00:35:18.740 --> 00:35:22.534
So this is not the default one that AWS will give you,

00:35:22.534 --> 00:35:26.539
but this is the default one that the launch wizard will create for you.

00:35:26.539 --> 00:35:28.459
Instead of doing that from now on,

00:35:28.459 --> 00:35:31.610
we don't have to continue doing this every time and making sure that we've

00:35:31.610 --> 00:35:35.300
selected the right things because and that can be very error-prone.

00:35:35.300 --> 00:35:38.240
Instead, we just select an existing security group here.

00:35:38.240 --> 00:35:42.185
And we have all the security groups that we can, we can select from.

00:35:42.185 --> 00:35:46.430
And we can, for example, add SSH access,

00:35:46.430 --> 00:35:48.440
we can add HTTP access,

00:35:48.440 --> 00:35:50.555
and then we can review on Launch.

00:35:50.555 --> 00:35:53.479
And now we have these two groups attached to our instance.

00:35:53.479 --> 00:35:59.134
So we have access to port 80 and port 60, port 80 and port 22.

00:35:59.134 --> 00:36:03.150
Okay, now let's cancel.

00:36:03.580 --> 00:36:07.440
Let's go into security groups here.

00:36:08.560 --> 00:36:13.174
Now that we're no longer using this one, we can delete it.

00:36:13.174 --> 00:36:17.550
So we can delete security group.

00:36:18.010 --> 00:36:21.620
And there we go. Now we have a very clean layout.

00:36:21.620 --> 00:36:22.759
We know exactly what we have.

00:36:22.759 --> 00:36:25.910
We have a SSH access HTTP axis,

00:36:25.910 --> 00:36:27.484
and we have a default security.

00:36:27.484 --> 00:36:28.969
Now you can also do some,

00:36:28.969 --> 00:36:32.210
let's say that you want to create

00:36:32.210 --> 00:36:36.440
another security group that only gives us access to your developers.

00:36:36.440 --> 00:36:40.145
So it limits who can access the port.

00:36:40.145 --> 00:36:42.334
If you own actions.

00:36:42.334 --> 00:36:46.475
You can go ahead and take your time going through each of these.

00:36:46.475 --> 00:36:50.060
But we're focused on Copy to new security group.

00:36:50.060 --> 00:36:54.409
So it takes everything with Ntozake group copies at all.

00:36:54.409 --> 00:36:58.789
This is especially useful if you have a very complex set of rules.

00:36:58.789 --> 00:37:01.490
And then it allows you to create a new one.

00:37:01.490 --> 00:37:10.654
So we can add in like SSH access developers,

00:37:10.654 --> 00:37:19.805
SSH only for developers, IPs.

00:37:19.805 --> 00:37:23.360
Okay? And then we can specify custom and we can

00:37:23.360 --> 00:37:28.294
just type in the IP addresses for our developers, let's say.

00:37:28.294 --> 00:37:30.694
Okay, and then we can create new security group.

00:37:30.694 --> 00:37:32.630
And we'll have a completely new security group,

00:37:32.630 --> 00:37:37.289
but that's copied from SSH access.

00:37:37.690 --> 00:37:41.870
I think that's enough of an introduction for security groups.

00:37:41.870 --> 00:37:46.399
I'll let you continue your learning and your exploration into security groups.

00:37:46.399 --> 00:37:48.724
Because if we go into too much depth for

00:37:48.724 --> 00:37:53.255
every single feature within every single service in AWS will never,

00:37:53.255 --> 00:37:55.025
ever finish this course, right?

00:37:55.025 --> 00:37:56.809
So you have enough knowledge,

00:37:56.809 --> 00:38:00.350
enough foundation now to,

00:38:00.350 --> 00:38:02.570
to go into AWS darks,

00:38:02.570 --> 00:38:05.389
and just pull up the security groups chapter and

00:38:05.389 --> 00:38:08.474
just start reading and understanding everything.

00:38:08.474 --> 00:38:12.065
And maybe it's just jump right to the more advanced parts.

00:38:12.065 --> 00:38:13.895
I'll see you in the next video.

00:38:13.895 --> 00:38:15.479
Thanks.
