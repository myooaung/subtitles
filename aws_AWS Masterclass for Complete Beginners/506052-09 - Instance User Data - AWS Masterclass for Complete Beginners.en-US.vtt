WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:03.045
Hello and welcome back.

00:00:03.045 --> 00:00:08.340
In this video we're going to be going over something called userData.

00:00:08.340 --> 00:00:12.030
And this pertains specific to instances.

00:00:12.030 --> 00:00:18.420
Hence, why this section is called instances are data user data,

00:00:18.420 --> 00:00:20.850
contrary to what you might be thinking when

00:00:20.850 --> 00:00:23.940
you hear the word user data has nothing to do with the users.

00:00:23.940 --> 00:00:32.200
And user data is just a way for you to specify certain functions.

00:00:32.200 --> 00:00:36.050
I mean, to specify certain commands that you will execute in

00:00:36.050 --> 00:00:41.300
your instance after you've added initiated in auto settings up.

00:00:41.300 --> 00:00:44.705
And you don't want to do that every time.

00:00:44.705 --> 00:00:51.185
So you compile it down to a file and you supply it to the wizard.

00:00:51.185 --> 00:00:54.425
When you're creating the EC2 instance.

00:00:54.425 --> 00:00:57.890
And after it gets created, it'll run,

00:00:57.890 --> 00:01:03.950
AWS will run that file or those commands on its own.

00:01:03.950 --> 00:01:06.950
So by the time we get logging into instance,

00:01:06.950 --> 00:01:09.350
you'd have all of those already executed.

00:01:09.350 --> 00:01:10.850
And so whatever you install,

00:01:10.850 --> 00:01:12.245
for example, in our case i'm,

00:01:12.245 --> 00:01:16.865
I'm going to be using the same examples where we use the last video,

00:01:16.865 --> 00:01:21.320
where we were going to be installing Git and darker.

00:01:21.320 --> 00:01:25.280
And as well as an Apache server.

00:01:25.280 --> 00:01:32.675
And also get that Apache server to output the host name when a user accesses it.

00:01:32.675 --> 00:01:36.320
And, and obviously we want other persist, right?

00:01:36.320 --> 00:01:39.470
So that even if you log out of the instance,

00:01:39.470 --> 00:01:40.850
it should continue to be able to do that.

00:01:40.850 --> 00:01:43.340
So basically everything we did in the last video,

00:01:43.340 --> 00:01:47.150
but this time it cannot be compiled together and supplied

00:01:47.150 --> 00:01:51.365
to the wizard during instance creation.

00:01:51.365 --> 00:01:54.695
And so we're not going to have to go in and run that again.

00:01:54.695 --> 00:01:59.720
And obviously use of this is that when you're creating a new instance,

00:01:59.720 --> 00:02:03.290
let's say you had determined your instance or you just had to create extra instances.

00:02:03.290 --> 00:02:06.545
You never have to do all of this work manually.

00:02:06.545 --> 00:02:08.690
That's one benefit, right?

00:02:08.690 --> 00:02:10.835
It saves you time and effort,

00:02:10.835 --> 00:02:14.240
but also it keeps everything consistent, right?

00:02:14.240 --> 00:02:17.330
You know exactly what you're running every time.

00:02:17.330 --> 00:02:19.670
For example, if there's a certain version of

00:02:19.670 --> 00:02:22.655
a program that you're installing or downloading.

00:02:22.655 --> 00:02:24.530
A second change, right?

00:02:24.530 --> 00:02:27.710
You're not going to have to remember which versions HE data,

00:02:27.710 --> 00:02:28.835
which order you that everything,

00:02:28.835 --> 00:02:32.690
everything in or which filenames you save stuff under, so on and so forth.

00:02:32.690 --> 00:02:35.029
So this is very useful,

00:02:35.029 --> 00:02:38.070
you know, I, myself find it very useful.

00:02:38.680 --> 00:02:43.084
The one thing that would be more useful than this would be to actually create images.

00:02:43.084 --> 00:02:46.310
So you'd never have to even install anything on,

00:02:46.310 --> 00:02:48.080
but we're going to learn about that later on.

00:02:48.080 --> 00:02:51.410
So for now, save you a lot of time.

00:02:51.410 --> 00:02:53.645
Me personally, I I you know,

00:02:53.645 --> 00:02:58.505
I worked for a long time on AWS without even knowing that this feature existed.

00:02:58.505 --> 00:03:00.890
But when I did find out,

00:03:00.890 --> 00:03:03.800
it saved me a lot of headache and middle.

00:03:03.800 --> 00:03:05.180
I think it's much easier for me.

00:03:05.180 --> 00:03:12.080
So let's just go through some very quick information on userData,

00:03:12.080 --> 00:03:18.875
some things to keep in mind, some things to know about user data. So.

00:03:18.875 --> 00:03:20.840
Obviously, like I mentioned,

00:03:20.840 --> 00:03:28.595
user data is passed into your launch wizard during lunch.

00:03:28.595 --> 00:03:34.055
So when you remember when we had the first 67 steps that we were clicking through.

00:03:34.055 --> 00:03:38.240
So in one of those steps and we'll be passing in the user data.

00:03:38.240 --> 00:03:42.815
And then the purpose of user data is to perform

00:03:42.815 --> 00:03:48.185
common automated configuration tasks and even run a script after the instance starts.

00:03:48.185 --> 00:03:56.945
And then you can pass in your usually userData in a number of different formats.

00:03:56.945 --> 00:04:00.245
So you can either pass it in as plain text,

00:04:00.245 --> 00:04:01.400
which is what we'll be doing.

00:04:01.400 --> 00:04:05.120
So basically we just be writing in all the commands that we would

00:04:05.120 --> 00:04:09.155
have normally run or that we actually did run in the last video.

00:04:09.155 --> 00:04:11.584
We'll be typing those in manually.

00:04:11.584 --> 00:04:13.070
If you have it saved somewhere,

00:04:13.070 --> 00:04:14.645
you can copy and paste that as well.

00:04:14.645 --> 00:04:20.330
But you could also input user data into launch wizard as a file.

00:04:20.330 --> 00:04:22.250
And this is useful for launching instances using

00:04:22.250 --> 00:04:26.795
command line tools for more automation, right?

00:04:26.795 --> 00:04:29.120
Or as basics, the encoded text.

00:04:29.120 --> 00:04:31.850
So we're gonna be focusing on plain texts,

00:04:31.850 --> 00:04:34.130
but the file basically the same thing as well.

00:04:34.130 --> 00:04:39.080
It as long as you're not developing some very high level automated systems,

00:04:39.080 --> 00:04:42.770
You probably just want to make your life easier while launching instances.

00:04:42.770 --> 00:04:45.080
Maybe because you want to save time and effort,

00:04:45.080 --> 00:04:48.290
or maybe because you're just launching more than one instance at the same time and you

00:04:48.290 --> 00:04:52.385
don't want to have to go and configure each of them on your own.

00:04:52.385 --> 00:04:57.694
So userData shell scripts must start with the hash,

00:04:57.694 --> 00:05:00.470
hashtag exclamation mark characters.

00:05:00.470 --> 00:05:06.500
And then obviously the path to the interpreter you want to be interpreting your script.

00:05:06.500 --> 00:05:10.565
So this is most commonly bash and it will,

00:05:10.565 --> 00:05:11.855
and that's also what we will,

00:05:11.855 --> 00:05:13.250
we will be using.

00:05:13.250 --> 00:05:18.125
So you want slash, bin slash bash.

00:05:18.125 --> 00:05:24.830
And then finally, keep in mind that all commands that are

00:05:24.830 --> 00:05:31.385
run from the user data that you supply the launch wizard will be run as the root user.

00:05:31.385 --> 00:05:35.360
So this means you do not need to

00:05:35.360 --> 00:05:40.085
specify specifically that the commands should be run as root users.

00:05:40.085 --> 00:05:43.805
As the user, as we did in the past video,

00:05:43.805 --> 00:05:47.810
where we had to explicitly write pseudo before each command that we want it to

00:05:47.810 --> 00:05:52.175
be run as a root user because we by default would not in,

00:05:52.175 --> 00:05:53.810
plugged in as a user.

00:05:53.810 --> 00:05:55.970
We were logged in as EC2 dash user.

00:05:55.970 --> 00:05:57.740
But in the case of user data,

00:05:57.740 --> 00:06:00.320
it's all going to be run as the user,

00:06:00.320 --> 00:06:01.790
so you do not need to specify.

00:06:01.790 --> 00:06:03.664
In fact, you shouldn't specify.

00:06:03.664 --> 00:06:05.360
So don't use the sudo command.

00:06:05.360 --> 00:06:09.320
We will be erasing that all of those from our user file data.

00:06:09.320 --> 00:06:17.910
So with that, let's jump straight into AWS and let's start using user data.

00:06:18.910 --> 00:06:27.620
So here we are. I just logged in as my user and we are in the correct region for me,

00:06:27.620 --> 00:06:29.600
at least as we're in the correct region,

00:06:29.600 --> 00:06:33.830
make sure you are in the region that you're using EC2.

00:06:33.830 --> 00:06:37.220
And so, so here we are.

00:06:37.220 --> 00:06:40.415
We've just logged into our console,

00:06:40.415 --> 00:06:42.815
the AWS management console.

00:06:42.815 --> 00:06:46.115
As our user that we created,

00:06:46.115 --> 00:06:47.930
not as the root user.

00:06:47.930 --> 00:06:51.200
And we are in our region.

00:06:51.200 --> 00:06:53.090
So much after that,

00:06:53.090 --> 00:06:54.800
make sure you're in the right region.

00:06:54.800 --> 00:06:58.055
The region you're using your EC2 instances or,

00:06:58.055 --> 00:07:00.260
you know, everything you've been doing,

00:07:00.260 --> 00:07:06.110
your abs so far and you won't see your other instances in another region.

00:07:06.110 --> 00:07:09.240
So let's go into EC2.

00:07:09.310 --> 00:07:11.045
Now.

00:07:11.045 --> 00:07:12.875
We have one instance running.

00:07:12.875 --> 00:07:17.195
Remember, that is the my first instance.

00:07:17.195 --> 00:07:20.060
So we've done a lot of work on this, right?

00:07:20.060 --> 00:07:23.345
We, we, we've launched it.

00:07:23.345 --> 00:07:24.935
We've logged in.

00:07:24.935 --> 00:07:28.684
We've installed Git, we've installed Docker.

00:07:28.684 --> 00:07:31.190
We've also installed Apache server.

00:07:31.190 --> 00:07:36.110
We've even configured it so that it outputs,

00:07:36.110 --> 00:07:43.490
it prints basically the host name of the instance onto the port 80.

00:07:43.490 --> 00:07:48.245
And we even test it by using curl on localhost colon 80.

00:07:48.245 --> 00:07:52.280
And we weren't able to test this in an actual browser yet because we

00:07:52.280 --> 00:07:56.540
still don't know how to do the security groups and how to expose port 80 to the world.

00:07:56.540 --> 00:07:58.880
But are we showing you that in the next video?

00:07:58.880 --> 00:08:02.840
Anyway? So a lot of work was done on this instance.

00:08:02.840 --> 00:08:05.965
Now, that work with a lot of manual work,

00:08:05.965 --> 00:08:10.085
time-consuming work, and that very easily scalable.

00:08:10.085 --> 00:08:13.580
So we want to essentially reduce all of

00:08:13.580 --> 00:08:18.590
that and put that into userData, And that's what we're gonna do.

00:08:18.590 --> 00:08:21.110
So in order to do that, we have a launch, a new instance.

00:08:21.110 --> 00:08:26.960
And because we do not want to exceed the limits of the free tier and end up paying.

00:08:26.960 --> 00:08:30.020
Let's go ahead and terminate our first instance.

00:08:30.020 --> 00:08:33.530
Now, I know that might seem a little scary,

00:08:33.530 --> 00:08:36.110
but the purpose of media lateness is actually also

00:08:36.110 --> 00:08:42.935
to give you a little bit more courage in experimenting and trying stuff.

00:08:42.935 --> 00:08:47.210
In AWS, you learn a lot by just redoing a lot of staff writers,

00:08:47.210 --> 00:08:48.770
like for example, going in and launching

00:08:48.770 --> 00:08:52.360
instances or setting up different systems and that kind of stuff.

00:08:52.360 --> 00:08:55.360
Because generally every time you redo it,

00:08:55.360 --> 00:08:57.070
you'll discover something new.

00:08:57.070 --> 00:08:59.050
You find a better way to do it.

00:08:59.050 --> 00:09:00.790
You'll find a new option.

00:09:00.790 --> 00:09:02.260
You don't know, feature that kind of stuff.

00:09:02.260 --> 00:09:07.675
So you should not be scared or nervous about playing around with this stuff, right?

00:09:07.675 --> 00:09:10.225
You've created this instance and it's like

00:09:10.225 --> 00:09:14.530
your first instance and it has some special meaning for you.

00:09:14.530 --> 00:09:16.780
It has a special place in your heart.

00:09:16.780 --> 00:09:17.890
But we don't care.

00:09:17.890 --> 00:09:19.420
We're going to go ahead and terminate it.

00:09:19.420 --> 00:09:20.470
And why?

00:09:20.470 --> 00:09:25.240
Because we can just as easily create another one and now even easier, right?

00:09:25.240 --> 00:09:28.960
Even more easily because we're gonna be using usual data.

00:09:28.960 --> 00:09:32.200
So let's go ahead and go into instance state,

00:09:32.200 --> 00:09:36.775
and we terminate this instance. That's it.

00:09:36.775 --> 00:09:39.400
Now, the instance is shutting down.

00:09:39.400 --> 00:09:42.640
Now don't forget instance termination means that

00:09:42.640 --> 00:09:46.000
instance will be gone forever and you can no longer access it.

00:09:46.000 --> 00:09:48.100
It's gone, it's done.

00:09:48.100 --> 00:09:50.920
Unlike when we stop the instance.

00:09:50.920 --> 00:09:57.235
Now, notice that we have to refresh it to update essence date.

00:09:57.235 --> 00:09:59.110
Don't forget that there's there's

00:09:59.110 --> 00:10:02.800
an actual server in the back and that's being shut down,

00:10:02.800 --> 00:10:04.840
that's being closed right now.

00:10:04.840 --> 00:10:06.940
So it That's why might take

00:10:06.940 --> 00:10:10.495
some time and that's why it might take some time for to shut down.

00:10:10.495 --> 00:10:13.375
That's no problem.

00:10:13.375 --> 00:10:14.730
So.

00:10:14.730 --> 00:10:20.990
Now, now that this instance has been shut down and terminated, that's it.

00:10:20.990 --> 00:10:27.110
You can no longer connect to it if you're using your own SSH program to connect to it,

00:10:27.110 --> 00:10:28.820
or if you're using here,

00:10:28.820 --> 00:10:31.715
there's no way to connect with that said it's gone.

00:10:31.715 --> 00:10:34.145
So but no worries, right?

00:10:34.145 --> 00:10:38.780
We remember everything we did to install everything we wanted to install on it.

00:10:38.780 --> 00:10:40.355
And we know the steps.

00:10:40.355 --> 00:10:44.450
So we're just gonna go right into launching a new instance.

00:10:44.450 --> 00:10:45.650
It as easy as that.

00:10:45.650 --> 00:10:47.570
And now since we're familiar with the steps,

00:10:47.570 --> 00:10:49.550
right, we don't have to think too much.

00:10:49.550 --> 00:10:51.650
Obviously there's a lot still to learn.

00:10:51.650 --> 00:10:53.585
I'm going to be teaching guys about

00:10:53.585 --> 00:10:57.110
AMIs and about different incident types and Afghanistan.

00:10:57.110 --> 00:11:01.415
But for all our intents and purposes at the moment,

00:11:01.415 --> 00:11:03.320
we just know what to do, right?

00:11:03.320 --> 00:11:06.755
We go ahead and select Amazon Linux 2.

00:11:06.755 --> 00:11:12.755
And then from here we're going to select the T2 micro instance type.

00:11:12.755 --> 00:11:15.635
And then we want to configure

00:11:15.635 --> 00:11:18.920
instance details because that's where we're going to put in the user details.

00:11:18.920 --> 00:11:21.065
I'm in the userData. I'm sorry.

00:11:21.065 --> 00:11:24.725
I mean, so we don't want to just review and launch right away.

00:11:24.725 --> 00:11:27.080
Let's go ahead and configure in some details.

00:11:27.080 --> 00:11:31.775
And so down here in a section called Advanced Details,

00:11:31.775 --> 00:11:34.610
this might be collapsed in your version,

00:11:34.610 --> 00:11:37.205
but go ahead and open that up.

00:11:37.205 --> 00:11:41.795
And down here you'll see a spot called user data.

00:11:41.795 --> 00:11:44.360
And this is where we'll inputting our user data.

00:11:44.360 --> 00:11:48.275
Now, let's hover over this informative icon.

00:11:48.275 --> 00:11:50.810
It says you can specify user data to configure

00:11:50.810 --> 00:11:54.560
an instance or running configuration script during launch.

00:11:54.560 --> 00:11:57.230
If you launch more than one instance at a time,

00:11:57.230 --> 00:12:01.370
the user data is available to all the instances in that reservation.

00:12:01.370 --> 00:12:03.425
So that means that up here,

00:12:03.425 --> 00:12:05.660
if we decide to launch more than one instance,

00:12:05.660 --> 00:12:08.945
let's say you want a large or a 100 and instances for some reason,

00:12:08.945 --> 00:12:16.520
this user data, script files or file or tax or whatever you put into here,

00:12:16.520 --> 00:12:20.510
will be run across all of the instances.

00:12:20.510 --> 00:12:24.200
So essentially you'll be configuring in solving and loading and doing all the things

00:12:24.200 --> 00:12:28.040
we're doing to all of your instances.

00:12:28.040 --> 00:12:29.930
So this is a huge advantage of user data.

00:12:29.930 --> 00:12:31.340
As I mentioned, the slides,

00:12:31.340 --> 00:12:34.190
I'm scalability and just automating all of it, right?

00:12:34.190 --> 00:12:37.580
If you, if you were to launch a 100 different instances,

00:12:37.580 --> 00:12:38.975
you can't go into each,

00:12:38.975 --> 00:12:43.535
individually in and install everything under the sun.

00:12:43.535 --> 00:12:49.430
Feasible, right? So let's go ahead and start writing our user data.

00:12:49.430 --> 00:12:53.315
Now, ideally, you should have this in a file saved somewhere, right?

00:12:53.315 --> 00:12:54.800
And then you just copy and paste it.

00:12:54.800 --> 00:12:56.270
But for the sake of this video,

00:12:56.270 --> 00:12:59.705
we are going to be remembering or trying to remember everything we did.

00:12:59.705 --> 00:13:02.180
And in the past, in the last video,

00:13:02.180 --> 00:13:06.200
everything we did manually and we're going to write it into here.

00:13:06.200 --> 00:13:10.010
And then, and go ahead and launch the instance.

00:13:10.010 --> 00:13:14.555
So now the first thing we did,

00:13:14.555 --> 00:13:16.190
the first thing we have to do,

00:13:16.190 --> 00:13:17.825
if you remember the slides,

00:13:17.825 --> 00:13:26.885
is we have to start with the hashtag exclamation mark slash bin slash bash, because our

00:13:26.885 --> 00:13:30.170
You know, we're, we're using the bash interpreter. Again.

00:13:30.170 --> 00:13:31.310
It's up to you.

00:13:31.310 --> 00:13:34.925
Bash is not thick.

00:13:34.925 --> 00:13:37.880
It's very common in

00:13:37.880 --> 00:13:40.190
the next administration and it will definitely help you

00:13:40.190 --> 00:13:43.640
and there's definitely no harm and learning it.

00:13:43.640 --> 00:13:50.750
But you know, for unless you're doing some very complex configuration

00:13:50.750 --> 00:13:59.090
and set up in the beginning that requires loops or some sort of complex processes,

00:13:59.090 --> 00:14:02.750
then you probably don't need to learn bash too badly,

00:14:02.750 --> 00:14:06.065
but it obviously doesn't hurt if you want to be a top notch DevOps engineer.

00:14:06.065 --> 00:14:08.660
In our case, we're just going to be using,

00:14:08.660 --> 00:14:11.420
we're going to be writing just the same commands that we would have

00:14:11.420 --> 00:14:15.170
written into the terminal directly.

00:14:15.170 --> 00:14:17.960
So we don't need to know any batch programming.

00:14:17.960 --> 00:14:21.030
But bash is the interpreter,

00:14:21.030 --> 00:14:22.910
will be interpreting our commands.

00:14:22.910 --> 00:14:28.880
So the first thing we did, if you remember,

00:14:28.880 --> 00:14:33.560
I don't I can't remember if we if we installed Git first or Docker,

00:14:33.560 --> 00:14:36.320
but let's just go ahead and install Docker first k.

00:14:36.320 --> 00:14:47.015
So remember how we wrote pseudo Amazon Linux extras install Docker.

00:14:47.015 --> 00:14:54.655
And then, so now actually I think we,

00:14:54.655 --> 00:14:58.130
we, we updated the incidence first,

00:14:58.130 --> 00:15:01.580
I guess in this case it would be the most updated version.

00:15:01.580 --> 00:15:05.150
But just for good practice,

00:15:05.150 --> 00:15:07.640
let's go ahead and update our instance first.

00:15:07.640 --> 00:15:11.420
So if you notice we're not putting in sudo at the beginning.

00:15:11.420 --> 00:15:15.710
Why? Because all of these commands will be run as the root user.

00:15:15.710 --> 00:15:18.545
And remember the purpose of pseudo is to run the command,

00:15:18.545 --> 00:15:20.585
to tell Linux to run the command as, as,

00:15:20.585 --> 00:15:23.960
as a superuser or as a leader.

00:15:23.960 --> 00:15:26.405
So we go ahead and delete the pseudo.

00:15:26.405 --> 00:15:30.770
Now, it's very important to note that you

00:15:30.770 --> 00:15:36.620
can't write any commands here that will require user confirmation.

00:15:36.620 --> 00:15:38.810
Like, remember, like for example,

00:15:38.810 --> 00:15:40.760
if we don't write dash y here,

00:15:40.760 --> 00:15:42.710
and dash y stands for yes.

00:15:42.710 --> 00:15:47.900
So if we were to run this right,

00:15:47.900 --> 00:15:51.500
operating system would ask us to confirm that we want to continue

00:15:51.500 --> 00:15:55.310
downloading and installing the software that that's listed there.

00:15:55.310 --> 00:15:58.310
And so we would have to respond with a yes

00:15:58.310 --> 00:16:01.145
or a wire or something of that sort to confirm.

00:16:01.145 --> 00:16:03.290
So that's user conformation.

00:16:03.290 --> 00:16:07.850
There is no way for us to receive any requests like that, right?

00:16:07.850 --> 00:16:09.140
Because this is going to be userData,

00:16:09.140 --> 00:16:12.155
it's going to be run by AWS directly.

00:16:12.155 --> 00:16:16.355
And so we have to force a conformation.

00:16:16.355 --> 00:16:19.175
And that's why we have to make sure to write the dash y.

00:16:19.175 --> 00:16:22.910
If we do think that the command will ask for confirmation.

00:16:22.910 --> 00:16:31.490
So now the next thing we did was to install Docker.

00:16:31.490 --> 00:16:35.015
And because we're using Amazon Linux 2 distribution,

00:16:35.015 --> 00:16:40.250
they have a handy way of installing software like Docker.

00:16:40.250 --> 00:16:43.550
And then so we install Docker,

00:16:43.550 --> 00:16:48.139
but then we have to also start the Docker service.

00:16:48.139 --> 00:16:53.390
So at this point, the Docker will have been installed because this will have run.

00:16:53.390 --> 00:16:55.580
Who will have run its course and darker,

00:16:55.580 --> 00:16:56.975
we'll have an installed.

00:16:56.975 --> 00:17:07.430
So then at this point we can actually run the Docker daemon using service docker start.

00:17:07.430 --> 00:17:10.520
Service docker start.

00:17:10.520 --> 00:17:14.855
And then by the way, I did up in either change my screen.

00:17:14.855 --> 00:17:17.945
So the layer and that kind of sum up a little bit different.

00:17:17.945 --> 00:17:20.540
It's not because AWS has changed while I'm recording this,

00:17:20.540 --> 00:17:24.290
it's just because I'm the screen ratio and size change,

00:17:24.290 --> 00:17:27.830
so but it should stay the same for the rest of the course.

00:17:27.830 --> 00:17:29.915
So touching real problem.

00:17:29.915 --> 00:17:32.885
Now, we created our,

00:17:32.885 --> 00:17:41.450
we added the ec2 user to the darker group. Like so.

00:17:41.450 --> 00:17:45.575
And then we installed Git.

00:17:45.575 --> 00:17:49.230
So yum install. Good.

00:17:49.270 --> 00:17:52.655
Confirm is yes, if anything is asked.

00:17:52.655 --> 00:17:56.820
And then we installed the Apache server.

00:17:58.240 --> 00:18:01.490
And if you don't remember,

00:18:01.490 --> 00:18:06.050
what we did, just go back and review the last video.

00:18:06.050 --> 00:18:10.865
But then we started the Apache server service.

00:18:10.865 --> 00:18:17.330
And, and then we, we enable that.

00:18:17.330 --> 00:18:23.135
So remember, the point of enabling the service is that it can persist.

00:18:23.135 --> 00:18:24.410
So that it can persist.

00:18:24.410 --> 00:18:26.090
If we don't enable it, it will,

00:18:26.090 --> 00:18:28.115
it will work in, in that session.

00:18:28.115 --> 00:18:30.785
But then when we log back in,

00:18:30.785 --> 00:18:32.375
it will no longer be running.

00:18:32.375 --> 00:18:35.690
And in this case there's an extra important because in AWS

00:18:35.690 --> 00:18:39.260
we'll be running this and then it's done at logs out.

00:18:39.260 --> 00:18:42.950
And then we're going to be logging in and bio time we login,

00:18:42.950 --> 00:18:44.555
the service will have stopped.

00:18:44.555 --> 00:18:47.750
And so we won't be able to see a port 80,

00:18:47.750 --> 00:18:49.445
won't be able to see Apache running.

00:18:49.445 --> 00:18:51.830
So that's why you have to enable it after starting it so

00:18:51.830 --> 00:18:54.950
that it persists across sessions, sessions.

00:18:54.950 --> 00:19:04.440
And then finally we put helloworld from and then we run hostname,

00:19:04.570 --> 00:19:12.600
the long version into index.html.

00:19:13.330 --> 00:19:17.420
And this essentially created our change,

00:19:17.420 --> 00:19:20.870
the web page that appears on port 80 by default from

00:19:20.870 --> 00:19:25.115
a party to the host name of the instance.

00:19:25.115 --> 00:19:27.365
So this is what we,

00:19:27.365 --> 00:19:34.880
and we can go ahead and just fix a little longer so we can see everything.

00:19:34.880 --> 00:19:37.460
So this is our script, right?

00:19:37.460 --> 00:19:42.425
It's just a line by line version of the commands that we ran.

00:19:42.425 --> 00:19:46.505
In the last video. We're updating the instance.

00:19:46.505 --> 00:19:49.685
We're installing Docker.

00:19:49.685 --> 00:19:51.560
We're starting the Docker daemon.

00:19:51.560 --> 00:19:55.250
We're adding our user to the darker group

00:19:55.250 --> 00:19:59.690
so that we don't need to use the root user to access it.

00:19:59.690 --> 00:20:01.355
And then we're installing Git.

00:20:01.355 --> 00:20:03.454
And then we're assigning Apache server.

00:20:03.454 --> 00:20:08.060
And then we are starting the Apache servers.

00:20:08.060 --> 00:20:11.060
And then we're enabling it to persist across sessions.

00:20:11.060 --> 00:20:17.405
And then we are changing the index.html file to display the host name of the instance.

00:20:17.405 --> 00:20:21.935
So just make sure you have no typos.

00:20:21.935 --> 00:20:23.990
Because you know, like when you're actually in essence

00:20:23.990 --> 00:20:26.045
in me write something and you have a typo,

00:20:26.045 --> 00:20:28.370
you see it right away and you can fix it where in this case,

00:20:28.370 --> 00:20:31.460
we're not going to be able to see it right away until we log

00:20:31.460 --> 00:20:34.610
into the instance and discover that it didn't work properly.

00:20:34.610 --> 00:20:41.300
And then we'll have to go back and change our file and margin new instance,

00:20:41.300 --> 00:20:45.620
or we'll just have to continue manually in that instance rate.

00:20:45.620 --> 00:20:48.050
So just make sure you don't have any typos.

00:20:48.050 --> 00:20:51.950
I hope I don't have any typos because I did not copy and paste I wrote

00:20:51.950 --> 00:20:56.210
this all in front of you so that,

00:20:56.210 --> 00:21:00.830
you know, you could have a more immersive experience.

00:21:00.830 --> 00:21:03.665
So we're just going to hope that this works.

00:21:03.665 --> 00:21:05.915
We do select as text.

00:21:05.915 --> 00:21:08.510
If you had a file, you go circle as file.

00:21:08.510 --> 00:21:12.950
So let's go ahead and review our review and launch our instance.

00:21:12.950 --> 00:21:14.960
You just want to review and launch.

00:21:14.960 --> 00:21:19.400
We can reveal we have 420 to open by default so we can connect to it.

00:21:19.400 --> 00:21:22.670
And then we have our instance details.

00:21:22.670 --> 00:21:25.895
Or I was about to make a huge mistake.

00:21:25.895 --> 00:21:28.520
I was showing you as an example to manage

00:21:28.520 --> 00:21:32.180
a 100 instances and I was about to launch a 100 instances.

00:21:32.180 --> 00:21:39.520
So that's the importance of reviewing so that you don't make a mistake like that. Okay.

00:21:39.520 --> 00:21:41.710
Do not largely a 100 instances.

00:21:41.710 --> 00:21:46.210
I don't know why anybody would ever want to unless you're like Netflix or something.

00:21:46.210 --> 00:21:47.950
But in that case, you know,

00:21:47.950 --> 00:21:49.600
you're automating all of this anyway,

00:21:49.600 --> 00:21:52.360
you won't be using this launch wizard,

00:21:52.360 --> 00:21:54.400
right? Ldr code anyway.

00:21:54.400 --> 00:21:59.275
But yeah, we just saved ourselves from a big mistake.

00:21:59.275 --> 00:22:02.860
There we go. We have one instance.

00:22:02.860 --> 00:22:07.030
And we do have user data and user data has been encoded.

00:22:07.030 --> 00:22:09.220
And so in obviously we can't read it here,

00:22:09.220 --> 00:22:10.900
but we do have it.

00:22:10.900 --> 00:22:15.910
We do have userData as opposed to if we didn't, Let's go back.

00:22:15.910 --> 00:22:18.915
Let's go ahead and cut this.

00:22:18.915 --> 00:22:21.140
It's going to Review and Launch.

00:22:21.140 --> 00:22:24.005
And usually there's nothing, there's nothing in there, right?

00:22:24.005 --> 00:22:26.525
So let's go ahead and paste.

00:22:26.525 --> 00:22:29.240
This should be HTTP D,

00:22:29.240 --> 00:22:31.880
because that's nail Apache server.

00:22:31.880 --> 00:22:37.055
That's what we're installing right up here.

00:22:37.055 --> 00:22:39.965
Acdp D. So be careful, right?

00:22:39.965 --> 00:22:42.590
If we had run this, this would not have worked.

00:22:42.590 --> 00:22:46.895
It would, it would have successfully installed Docker and get,

00:22:46.895 --> 00:22:48.560
but here it will throw an error.

00:22:48.560 --> 00:22:51.305
And then obviously this wouldn't have worked either.

00:22:51.305 --> 00:22:52.880
And then this wouldn't have worked.

00:22:52.880 --> 00:22:54.320
So that's our right.

00:22:54.320 --> 00:22:55.640
We can just manually fix it,

00:22:55.640 --> 00:23:01.070
but just make sure you don't have any bugs or typos or anything of that sort.

00:23:01.070 --> 00:23:04.475
Review and Launch. And yeah,

00:23:04.475 --> 00:23:06.275
we're pretty much good to go.

00:23:06.275 --> 00:23:09.095
Let's launch our instance.

00:23:09.095 --> 00:23:13.970
Okay, so obviously you have to select a key pair.

00:23:13.970 --> 00:23:18.320
We still have the first one we created and it's completely alright,

00:23:18.320 --> 00:23:19.880
if you reuse that,

00:23:19.880 --> 00:23:23.510
I guess we should call it my first key parents that are my first instance,

00:23:23.510 --> 00:23:26.540
but we can just reuse that.

00:23:26.540 --> 00:23:29.250
And then we just launch our app.

00:23:30.220 --> 00:23:33.560
And your instances are now launching.

00:23:33.560 --> 00:23:37.160
We can view our instances. So there we go.

00:23:37.160 --> 00:23:38.810
Our instance is here.

00:23:38.810 --> 00:23:41.780
It's running, but it's still initializing.

00:23:41.780 --> 00:23:43.775
So wait till it initializes.

00:23:43.775 --> 00:23:47.075
And because during this initialization is when

00:23:47.075 --> 00:23:52.160
the user data will be also run because it has to first start to running.

00:23:52.160 --> 00:23:55.550
An AWS does whatever it needs to do to initialize the instance.

00:23:55.550 --> 00:23:56.885
And then once it's ready,

00:23:56.885 --> 00:23:58.520
it'll run the user data.

00:23:58.520 --> 00:24:00.170
So we can connect,

00:24:00.170 --> 00:24:03.230
we can technically connect to it now because it is running,

00:24:03.230 --> 00:24:06.980
but it will not have finished initializing and running the user data,

00:24:06.980 --> 00:24:11.510
so don't connect until the status check is complete.

00:24:11.510 --> 00:24:13.940
And I wish that does take time because remember there's

00:24:13.940 --> 00:24:17.029
an actual server somewhere in AWS is warehouses.

00:24:17.029 --> 00:24:21.395
Our datacenters right now being physically allocated.

00:24:21.395 --> 00:24:25.790
So obviously might not be a physical complete computer.

00:24:25.790 --> 00:24:28.340
It might just be a piece of computer aided,

00:24:28.340 --> 00:24:36.800
might just be a partitioned part of a computer or a container,

00:24:36.800 --> 00:24:39.920
a container within computer that contains other containers as well.

00:24:39.920 --> 00:24:43.490
We don't know how we do know we could find out,

00:24:43.490 --> 00:24:48.410
but I'm saying what I'm trying to say is that there is something happening, right?

00:24:48.410 --> 00:24:51.350
This is not just some software here that it's going in.

00:24:51.350 --> 00:24:54.710
It's communicating with a computer and just allocating space and that kind of stuff.

00:24:54.710 --> 00:24:57.650
So it's normal for to take some time.

00:24:57.650 --> 00:25:00.200
But in the meanwhile,

00:25:00.200 --> 00:25:01.984
we can name our instance,

00:25:01.984 --> 00:25:10.100
my second instance, because we have terminated our first instance.

00:25:10.100 --> 00:25:14.270
And so let's refresh to see what's up.

00:25:14.270 --> 00:25:17.315
And yes, it has passed its checks.

00:25:17.315 --> 00:25:20.660
And right now, in this instance is ready to connect to end.

00:25:20.660 --> 00:25:22.670
It should have run our user data,

00:25:22.670 --> 00:25:27.560
installed Docker first and then get and then Apache and then configured

00:25:27.560 --> 00:25:34.355
a RACI Apaches index dot HTML file to display the host name on port 80.

00:25:34.355 --> 00:25:38.880
So let's go ahead and see if all of that worked.

00:25:39.100 --> 00:25:44.125
Connect. And let's connect.

00:25:44.125 --> 00:25:47.934
And this is the moment of truth.

00:25:47.934 --> 00:25:49.600
We're logged in.

00:25:49.600 --> 00:25:53.140
Let's go ahead and check it. Get is installed. We write get.

00:25:53.140 --> 00:25:55.419
The Rigaud get is installed.

00:25:55.419 --> 00:25:57.804
Let's check if Docker is installed.

00:25:57.804 --> 00:25:59.650
Docker is also installed.

00:25:59.650 --> 00:26:01.509
We can check for running images.

00:26:01.509 --> 00:26:05.995
We can check for images, so on and so forth.

00:26:05.995 --> 00:26:07.570
I mean running containers,

00:26:07.570 --> 00:26:11.650
docker ps jacks, running containers and Docker images, text or images.

00:26:11.650 --> 00:26:15.235
And then let's go ahead and see if Apache's running.

00:26:15.235 --> 00:26:21.850
Let's curl localhost port 80. And there we go.

00:26:21.850 --> 00:26:24.360
We get Hello, Hello World from.

00:26:24.360 --> 00:26:27.830
And that is the IP address of this instance.

00:26:27.830 --> 00:26:30.545
So that's pretty cool, right?

00:26:30.545 --> 00:26:32.150
We didn't have to install anything.

00:26:32.150 --> 00:26:36.140
We run all the commands as userData in the launch wizard.

00:26:36.140 --> 00:26:38.705
And now when we log into our instance,

00:26:38.705 --> 00:26:43.040
we have all of that there for us and ready to use.

00:26:43.040 --> 00:26:45.799
So that's very powerful.

00:26:45.799 --> 00:26:49.190
Like I said, it's helped me a lot.

00:26:49.190 --> 00:26:53.330
And unless you use images or something like that,

00:26:53.330 --> 00:26:58.460
this will pretty much help you with streamline a lot of your work.

00:26:58.460 --> 00:27:03.080
And that's it for this video.

00:27:03.080 --> 00:27:04.820
In the next video, I'm going to be going over

00:27:04.820 --> 00:27:09.770
security groups where we'll actually exposes port 80 so that

00:27:09.770 --> 00:27:12.830
we can open up or we can exit

00:27:12.830 --> 00:27:16.460
directly from the browser without having to just do curl here.

00:27:16.460 --> 00:27:20.675
So then you really understand what's going on when we do that,

00:27:20.675 --> 00:27:24.300
hopefully. So, thanks, Bye.
