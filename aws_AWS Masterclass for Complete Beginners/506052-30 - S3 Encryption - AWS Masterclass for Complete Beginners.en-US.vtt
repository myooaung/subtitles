WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.560
Welcome back. In this video,

00:00:02.560 --> 00:00:05.875
we're going to be covering S3 encryption.

00:00:05.875 --> 00:00:08.185
Now, encryption is very important,

00:00:08.185 --> 00:00:10.915
very important feature of S3,

00:00:10.915 --> 00:00:13.780
especially when you're working with clients or

00:00:13.780 --> 00:00:16.795
at a company where security is very important.

00:00:16.795 --> 00:00:21.910
One of the biggest factors that held companies back when it came

00:00:21.910 --> 00:00:27.490
to migrate into the Cloud was the fear of data security.

00:00:27.490 --> 00:00:32.695
And S3 does its best to mitigate this issue.

00:00:32.695 --> 00:00:42.750
It offers you quite a few options for encrypting your data on a nice spectrum of,

00:00:42.750 --> 00:00:46.334
you know, how much control do you want over the encryption?

00:00:46.334 --> 00:00:48.710
You can let AWS managed encryption,

00:00:48.710 --> 00:00:51.290
but if you don't trust AWS for some reason,

00:00:51.290 --> 00:00:52.610
you can do it on your end.

00:00:52.610 --> 00:00:55.010
So there's a whole spectrum of

00:00:55.010 --> 00:00:58.220
options and possibilities for you when it comes to encrypting your data.

00:00:58.220 --> 00:01:00.095
When working with S3,

00:01:00.095 --> 00:01:03.920
we're gonna go over those together in this video.

00:01:03.920 --> 00:01:08.495
So now the different ways of

00:01:08.495 --> 00:01:14.855
encryption are broken down into essentially server-side and the client-side encryption.

00:01:14.855 --> 00:01:18.560
So server-side encryption is where you can

00:01:18.560 --> 00:01:23.840
request amazon S3 to encrypt your object before saving it on disks.

00:01:23.840 --> 00:01:28.030
And it's datacenters, and then decrypt it when you download the object.

00:01:28.030 --> 00:01:30.520
So essentially you're letting your,

00:01:30.520 --> 00:01:35.620
your outsourcing the management of your encryption to Amazon.

00:01:35.620 --> 00:01:38.125
And within this option,

00:01:38.125 --> 00:01:42.640
there are still three different ways you can do it.

00:01:42.640 --> 00:01:45.520
And again, each of them is different.

00:01:45.520 --> 00:01:52.720
And the trade off between handing off security to AWS or take it into your own hands.

00:01:52.720 --> 00:01:57.055
So you have the option of using customer managed keys,

00:01:57.055 --> 00:01:59.920
and these are stored in Ada, AWS,

00:01:59.920 --> 00:02:01.960
KMS, which we haven't covered yet,

00:02:01.960 --> 00:02:04.494
but this adds a little bit more.

00:02:04.494 --> 00:02:07.785
In terms of security, are able to manage it a little bit more.

00:02:07.785 --> 00:02:11.990
Even though the keys are stored on an AWS service.

00:02:11.990 --> 00:02:15.185
And they're external to S3 and

00:02:15.185 --> 00:02:19.145
you're just utilizing them with an S3 so you have a little more control.

00:02:19.145 --> 00:02:22.655
You could also just go the Amazon S3 managed drought,

00:02:22.655 --> 00:02:25.820
where Amazon S3 will essentially encrypt

00:02:25.820 --> 00:02:29.060
your files for you and create the keys for you and manage the keys and everything.

00:02:29.060 --> 00:02:31.040
So you're not really dealing with the keys,

00:02:31.040 --> 00:02:33.755
but AWS is doing it for you.

00:02:33.755 --> 00:02:38.255
And then you have the customer provided encryption keys.

00:02:38.255 --> 00:02:44.465
And this one, we're not going to be going over because this requires the callee to do.

00:02:44.465 --> 00:02:47.525
But that's also an option that's there.

00:02:47.525 --> 00:02:50.240
And these are the abbreviations just in case,

00:02:50.240 --> 00:02:52.520
you know, they do comment on the exam.

00:02:52.520 --> 00:02:58.235
So SSE, KMS assess ES 3 and S, S, E, C.

00:02:58.235 --> 00:03:02.060
And then obviously you can do client-side encryption as well.

00:03:02.060 --> 00:03:08.240
So you can encrypt data client-side and upload the encrypted data to Amazon S3.

00:03:08.240 --> 00:03:11.510
In this case, obviously you're going to be managing the encryption process,

00:03:11.510 --> 00:03:13.940
the encryption keys, and the related tools.

00:03:13.940 --> 00:03:15.275
Because essentially, you know,

00:03:15.275 --> 00:03:17.330
Amazon doesn't have to know that it's encrypted, right?

00:03:17.330 --> 00:03:18.725
You're just uploading a file.

00:03:18.725 --> 00:03:21.230
It just happens to be encrypted before you upload it, right?

00:03:21.230 --> 00:03:24.860
So it's just going to manage it as it manages any other files.

00:03:24.860 --> 00:03:27.050
But you're gonna be you're gonna

00:03:27.050 --> 00:03:29.850
have encrypted it beforehand and when he downloaded, you're going to

00:03:29.850 --> 00:03:31.580
Decrypted, so on and so forth.

00:03:31.580 --> 00:03:35.390
So this would be the most secure option if you are

00:03:35.390 --> 00:03:39.620
working for a client or at a company that is really concerned with the S3 data.

00:03:39.620 --> 00:03:43.370
And for some reason they still don't trust the Cloud, the unstressed AWS,

00:03:43.370 --> 00:03:47.720
despite all the regulations and all that, you could ever do,

00:03:47.720 --> 00:03:53.630
the client-side encryption method and just set up a system on-site where

00:03:53.630 --> 00:03:56.540
all files traveling in and out of your network

00:03:56.540 --> 00:03:59.630
are encrypted and decrypted and before they're sent to S3.

00:03:59.630 --> 00:04:04.415
So now let's dive into a little more detail on each of these.

00:04:04.415 --> 00:04:08.555
So when it comes to server-side encryption,

00:04:08.555 --> 00:04:11.900
Okay, Amazon S3, server-side encryption,

00:04:11.900 --> 00:04:15.695
SSE is the simplest data encryption option available, okay?

00:04:15.695 --> 00:04:21.590
And this can be broken down into SSE S3 and SSE, SSE.

00:04:21.590 --> 00:04:25.310
So SSE encryption manages the heavy lifting of

00:04:25.310 --> 00:04:29.375
encryption on the AWS side and falls into two types,

00:04:29.375 --> 00:04:31.490
SSE S3 and ss E,

00:04:31.490 --> 00:04:35.165
C, the SSE as three options.

00:04:35.165 --> 00:04:38.405
Let's AWS managed the key for you,

00:04:38.405 --> 00:04:41.690
which requires you to trust them with that information obviously, right?

00:04:41.690 --> 00:04:43.910
You, you have to trust that AWS is

00:04:43.910 --> 00:04:47.465
actually using keys are actually encrypting and decrypting.

00:04:47.465 --> 00:04:51.425
And so again, that's trust issue there.

00:04:51.425 --> 00:04:53.600
Like if you actually do trusted AWS,

00:04:53.600 --> 00:04:55.190
this is not going to be a problem for you.

00:04:55.190 --> 00:04:56.900
If you don't.

00:04:56.900 --> 00:05:01.370
It just might be that the security protocols or your company or whatever,

00:05:01.370 --> 00:05:03.170
by default, don't trust.

00:05:03.170 --> 00:05:08.660
Third party services are third party companies in managing their data,

00:05:08.660 --> 00:05:11.330
which is completely understandable.

00:05:11.330 --> 00:05:14.780
In that case, SSE S3 obviously will not.

00:05:14.780 --> 00:05:17.330
It'll essentially be the same as this using SSH,

00:05:17.330 --> 00:05:21.320
using S3 without encryption right, from that mindset.

00:05:21.320 --> 00:05:28.370
So the SSE, SSE option similarly manages encryption and decryption of your data for you,

00:05:28.370 --> 00:05:30.680
but user key provided by the customer.

00:05:30.680 --> 00:05:34.780
And again, this requires a CLI.

00:05:34.780 --> 00:05:37.525
So we're not going to be going over how to do this,

00:05:37.525 --> 00:05:40.645
but know that this does exist as an option.

00:05:40.645 --> 00:05:46.375
Now when it comes to client-side SS, client-side S3 encryption,

00:05:46.375 --> 00:05:51.250
as three client-side encryption puts all the responsibility for the encryption,

00:05:51.250 --> 00:05:53.155
heavy lifting on to the user.

00:05:53.155 --> 00:05:55.420
And obviously this comes with added security.

00:05:55.420 --> 00:05:57.640
So there's always that trade-off, right?

00:05:57.640 --> 00:06:02.410
It's going to require more work and more management on your side.

00:06:02.410 --> 00:06:09.415
And sometimes more risk in terms of like being able to properly manage all that.

00:06:09.415 --> 00:06:11.380
And the trade off is, you know,

00:06:11.380 --> 00:06:14.470
it's increased security, It's more private security.

00:06:14.470 --> 00:06:16.210
Security are in control.

00:06:16.210 --> 00:06:19.405
Whereas you might not want to bother

00:06:19.405 --> 00:06:22.930
dealing with keys and encrypting and decrypting on your own every time.

00:06:22.930 --> 00:06:27.790
So you kind of outsource that responsibility to AWS.

00:06:27.790 --> 00:06:28.875
But the trade-off is,

00:06:28.875 --> 00:06:30.475
you know, you've got to trust them.

00:06:30.475 --> 00:06:33.280
You kind of in their hands when it comes to security.

00:06:33.280 --> 00:06:39.715
So as to client-side data encryption falls into two types.

00:06:39.715 --> 00:06:41.965
Server-side master key storage,

00:06:41.965 --> 00:06:45.160
also abbreviated as KMS,

00:06:45.160 --> 00:06:49.840
because it's using the KMS AWS service, which we'll cover later.

00:06:49.840 --> 00:06:52.810
And client-side master key storage.

00:06:52.810 --> 00:06:55.360
So in server-side master key storage,

00:06:55.360 --> 00:06:58.425
you can store your, your master key server side.

00:06:58.425 --> 00:07:03.020
The AWS, KMS, and it'll use an API or whatever to

00:07:03.020 --> 00:07:08.240
communicate with KMS and manage that encryption and the keys and that kinda stuff.

00:07:08.240 --> 00:07:10.595
And then in client-side master key storage,

00:07:10.595 --> 00:07:13.640
your master keys aren't stored on servers

00:07:13.640 --> 00:07:16.970
and you take full responsibility for the encryption.

00:07:16.970 --> 00:07:20.945
And again, this one we won't be covering on our own because it's going to be up to you

00:07:20.945 --> 00:07:23.900
what method you use or what tools you use for encrypting

00:07:23.900 --> 00:07:26.990
your data before you upload it onto S3.

00:07:26.990 --> 00:07:30.485
So that's essentially up to you, it's in your control.

00:07:30.485 --> 00:07:35.390
So with that, let's go into S3 and let's see

00:07:35.390 --> 00:07:40.480
how we can start encrypting our files are objects as,

00:07:40.480 --> 00:07:43.805
as I referred to an S3 and our buckets.

00:07:43.805 --> 00:07:46.865
So here we are in the console again,

00:07:46.865 --> 00:07:48.769
Let's jump into S3.

00:07:48.769 --> 00:07:55.895
And we have our bucket we made previously called number 1, 8 of course.

00:07:55.895 --> 00:07:58.520
And we've set up versioning on this,

00:07:58.520 --> 00:08:02.015
so we have two different versions of puppy.

00:08:02.015 --> 00:08:05.930
And the latest one was uploaded,

00:08:05.930 --> 00:08:10.925
I wish to three minutes and 3.5 minutes later than the first one.

00:08:10.925 --> 00:08:14.405
Now let's go ahead and upload a new file.

00:08:14.405 --> 00:08:16.460
Or before we do that,

00:08:16.460 --> 00:08:21.485
that's actually go into the uploaded version.

00:08:21.485 --> 00:08:25.970
And let's see what kind of encryption this has.

00:08:25.970 --> 00:08:31.775
So server-side encryption settings, default encryption disabled.

00:08:31.775 --> 00:08:34.550
Remember when we were uploading by default this is disabled.

00:08:34.550 --> 00:08:44.730
So neither this version nor the one before it has any sort of encryption on the file.

00:08:44.800 --> 00:08:48.080
Encryption disable the k.

00:08:48.080 --> 00:08:52.535
Now let's upload a new version of this file.

00:08:52.535 --> 00:08:59.340
Add files. And let's go ahead and select puppy.

00:08:59.530 --> 00:09:03.560
Now, before we upload,

00:09:03.560 --> 00:09:07.144
Let's open up additional upload options.

00:09:07.144 --> 00:09:08.960
Let's go all the way down.

00:09:08.960 --> 00:09:11.555
And there we go, server-side encryption setting.

00:09:11.555 --> 00:09:14.390
So this is where it's disabled.

00:09:14.390 --> 00:09:18.830
So if we had just continued uploading this file as we've done the other ones.

00:09:18.830 --> 00:09:21.200
It would have had no encryption on it.

00:09:21.200 --> 00:09:23.405
But for this case,

00:09:23.405 --> 00:09:26.030
let's go ahead and enable encryption.

00:09:26.030 --> 00:09:29.494
And we're presented with two options.

00:09:29.494 --> 00:09:32.840
We have the assess PS3 version,

00:09:32.840 --> 00:09:40.415
and this is the one where Amazon S3 creates managers and uses the keys for you,

00:09:40.415 --> 00:09:41.975
for the encryption key.

00:09:41.975 --> 00:09:45.920
Or you can use the KMS.

00:09:45.920 --> 00:09:49.010
For now let's just go with SSE S3,

00:09:49.010 --> 00:09:52.290
and let's upload this image.

00:09:54.460 --> 00:09:58.260
Now we've upload this image as exit.

00:09:59.110 --> 00:10:01.760
Let's list versions.

00:10:01.760 --> 00:10:04.565
And now we have a new version of this image.

00:10:04.565 --> 00:10:08.600
Okay, let's click on this image.

00:10:08.600 --> 00:10:12.590
And now, under encryption settings,

00:10:12.590 --> 00:10:15.275
we can see that default encryption has been enabled.

00:10:15.275 --> 00:10:21.140
And we're using the SS S3 server-side encryption method.

00:10:21.140 --> 00:10:24.740
So this is, this image is encrypted.

00:10:24.740 --> 00:10:28.865
By Amazon, by Amazon S3.

00:10:28.865 --> 00:10:34.730
And Amazon S3 is managing the master key and the encryption key and all of that for us.

00:10:34.730 --> 00:10:37.490
So we don't have to concern ourselves

00:10:37.490 --> 00:10:41.390
with our own to encrypt or decrypt or managed keys in Afghanistan.

00:10:41.390 --> 00:10:48.560
So does this mean that the previous version of this image also are encrypted.

00:10:48.560 --> 00:10:49.910
Now, let's go ahead and check.

00:10:49.910 --> 00:10:53.310
So let's open up the previous two versions.

00:10:53.860 --> 00:10:55.910
And when we go down,

00:10:55.910 --> 00:10:58.730
we see that default encryption is disabled for this,

00:10:58.730 --> 00:11:05.210
and it's also disabled for, for this one as well.

00:11:05.210 --> 00:11:13.580
So this means that encryption on S3 is based on image and version.

00:11:13.580 --> 00:11:17.090
So it's not based on the file itself,

00:11:17.090 --> 00:11:18.695
it's based on object and version,

00:11:18.695 --> 00:11:20.960
sorry not image because in IR files on have to be,

00:11:20.960 --> 00:11:22.565
your objects will have to be images.

00:11:22.565 --> 00:11:23.450
They can be anything.

00:11:23.450 --> 00:11:25.355
They're just images in our case, right?

00:11:25.355 --> 00:11:28.055
But it's based on object version.

00:11:28.055 --> 00:11:33.065
So if you start encrypting after a certain point,

00:11:33.065 --> 00:11:37.130
the same objects previous versions will not all of a sudden become encrypted as well.

00:11:37.130 --> 00:11:39.245
So that's something that you should be careful of.

00:11:39.245 --> 00:11:41.900
If you do decide to switch over to encrypting,

00:11:41.900 --> 00:11:45.080
make sure that, you know your previous files are also encrypted, so on, so forth.

00:11:45.080 --> 00:11:52.870
Now, let's, so we've done SSE, S3, server-side encryption.

00:11:52.870 --> 00:11:59.845
Now let's try the KMS Managed encryption.

00:11:59.845 --> 00:12:02.110
So let's upload another version.

00:12:02.110 --> 00:12:06.040
Put an additional settings, will enable encryption.

00:12:06.040 --> 00:12:09.100
Now let's do the SSE KMS from.

00:12:09.100 --> 00:12:12.070
So SSE KMS, there are a couple of ways you can do this, right?

00:12:12.070 --> 00:12:17.920
You can, again, outsource the management of the keys to AWS,

00:12:17.920 --> 00:12:22.075
but this time a diverse would use KMS, will use a Canvas.

00:12:22.075 --> 00:12:23.980
It'll take care of managing the keys,

00:12:23.980 --> 00:12:28.420
but it'll now be on a KMS service and then you'll be able

00:12:28.420 --> 00:12:33.260
to In a goal to KMS and see what's happening if you wanted to.

00:12:33.260 --> 00:12:36.230
Or you could choose from your KMS master keys, right?

00:12:36.230 --> 00:12:38.810
And we're not gonna do that in this video because that's going to require

00:12:38.810 --> 00:12:42.125
some knowledge on KMS, which we'll cover later.

00:12:42.125 --> 00:12:44.315
But if you have keys on,

00:12:44.315 --> 00:12:47.990
cameras are ready, you can go ahead and use those.

00:12:47.990 --> 00:12:50.360
Or if you have a KMS key on

00:12:50.360 --> 00:12:54.620
a another account or in other blocks to somebody else or something like that.

00:12:54.620 --> 00:13:00.785
You can use an ARN to reference that key and use that here as well.

00:13:00.785 --> 00:13:04.175
But for now, we're just going to use,

00:13:04.175 --> 00:13:06.080
we're going to manage it for us,

00:13:06.080 --> 00:13:09.290
but we're going to let them manage it using KMS.

00:13:09.290 --> 00:13:11.630
Now obviously there's also the SSE,

00:13:11.630 --> 00:13:15.485
SSE option that I mentioned in the slides.

00:13:15.485 --> 00:13:22.655
But again, that requires a CLI and the options that are available through the console,

00:13:22.655 --> 00:13:24.770
the web console for AWS.

00:13:24.770 --> 00:13:26.420
So we're not gonna go into that.

00:13:26.420 --> 00:13:27.830
So let's let, let,

00:13:27.830 --> 00:13:33.380
let's create an AWS, KMS Managed encryption.

00:13:33.380 --> 00:13:38.465
And let's upload, uploading now.

00:13:38.465 --> 00:13:43.130
Exit versions.

00:13:43.130 --> 00:13:45.215
Now when we go into the latest version.

00:13:45.215 --> 00:13:47.630
And we go down into encryption.

00:13:47.630 --> 00:13:50.345
We can see that it's enabled and it's AWS,

00:13:50.345 --> 00:13:53.554
KMS or assess E, KMS.

00:13:53.554 --> 00:13:57.410
And this is the reference to the master key.

00:13:57.410 --> 00:13:58.430
And if you wanted to,

00:13:58.430 --> 00:14:00.440
you can go into KMS and you can manage.

00:14:00.440 --> 00:14:04.985
You could see what what K-mers is managing or what eight hours and managing.

00:14:04.985 --> 00:14:09.980
But essentially it is now not encrypted or decrypted within S3,

00:14:09.980 --> 00:14:11.735
but it's it's done within KMS,

00:14:11.735 --> 00:14:13.564
which is another service.

00:14:13.564 --> 00:14:18.845
And so it does add an extra layer of security and transparency to the whole process.

00:14:18.845 --> 00:14:21.800
But again, if you were to go back

00:14:21.800 --> 00:14:28.310
and go to the previous version of the same file or the same object,

00:14:28.310 --> 00:14:32.555
you would see that it's encrypted using SSE S3.

00:14:32.555 --> 00:14:38.990
So again, just because you change the way an object is encrypted,

00:14:38.990 --> 00:14:42.110
for a version doesn't change the way it's encrypted for

00:14:42.110 --> 00:14:44.990
any previous or future versions for that matter.

00:14:44.990 --> 00:14:50.240
So if you did want to just make sure that all your files are encrypted by default.

00:14:50.240 --> 00:14:53.990
We can actually change the encryption settings of the bucket itself.

00:14:53.990 --> 00:14:56.165
So here we're just working with objects, right?

00:14:56.165 --> 00:14:57.965
Whenever we upload an object,

00:14:57.965 --> 00:15:00.170
we decide on how it should be encrypted.

00:15:00.170 --> 00:15:03.185
But if we go into properties,

00:15:03.185 --> 00:15:05.810
just like how we turned on pocket versioning,

00:15:05.810 --> 00:15:08.030
we can set default encryption as well.

00:15:08.030 --> 00:15:10.475
So if you edit this, you can enable it.

00:15:10.475 --> 00:15:14.195
And the same settings are presented before you.

00:15:14.195 --> 00:15:17.690
Just like how we picked assess ES 3, 4,

00:15:17.690 --> 00:15:20.765
upload objects or we selected,

00:15:20.765 --> 00:15:22.730
you know, SSE, KMS.

00:15:22.730 --> 00:15:26.420
We can do the same thing, but for the bucket.

00:15:26.420 --> 00:15:29.585
So let's just to keep things simple,

00:15:29.585 --> 00:15:32.255
let's assess E as 3.

00:15:32.255 --> 00:15:34.830
Save changes.

00:15:35.080 --> 00:15:41.150
Now when we go into our objects, let's refresh this.

00:15:41.150 --> 00:15:46.325
So the layout fixes itself. There we go.

00:15:46.325 --> 00:15:48.049
And we list versions.

00:15:48.049 --> 00:15:52.430
We go to the first image with the first version.

00:15:52.430 --> 00:15:57.050
It's still not encrypted by default, okay?

00:15:57.050 --> 00:16:02.600
And we go into the last version and it's

00:16:02.600 --> 00:16:08.674
in the bucket versioning early bucket encryption method now is SS S3.

00:16:08.674 --> 00:16:12.200
But this one is assess KMS.

00:16:12.200 --> 00:16:12.380
Why?

00:16:12.380 --> 00:16:15.230
Because that's how we uploaded that object right?

00:16:15.230 --> 00:16:21.800
Now though, if we upload a new object or a new version of an existing object.

00:16:21.800 --> 00:16:23.240
So let's go ahead and upload.

00:16:23.240 --> 00:16:25.400
Let's say puppy.

00:16:25.400 --> 00:16:28.385
I'm going to go into additional upload options.

00:16:28.385 --> 00:16:33.365
We can see that server-side encryption settings are enabled by default and,

00:16:33.365 --> 00:16:35.330
and, and, and the,

00:16:35.330 --> 00:16:38.930
and the type of encryption and that's going to be used by default

00:16:38.930 --> 00:16:42.620
is the one that's enabled by default, by the bucket.

00:16:42.620 --> 00:16:45.440
So you can override the default encryption bucket settings.

00:16:45.440 --> 00:16:48.965
And you can choose to go like let's say AZ, AKS.

00:16:48.965 --> 00:16:51.815
But by default, if you don't do anything, even if you don't like,

00:16:51.815 --> 00:16:54.575
you don't even have to open up this menu anymore.

00:16:54.575 --> 00:16:55.715
Nice options anymore.

00:16:55.715 --> 00:16:57.305
If you just upload.

00:16:57.305 --> 00:16:58.970
What's going to happen is,

00:16:58.970 --> 00:17:02.750
is that this object is now going to be encrypted

00:17:02.750 --> 00:17:06.650
by default using the buckets encryption settings.

00:17:06.650 --> 00:17:08.750
So we go down into here, there we go.

00:17:08.750 --> 00:17:11.420
It's enabled SSE S3.

00:17:11.420 --> 00:17:12.290
Okay?

00:17:12.290 --> 00:17:17.270
So that's pretty much it for encryption.

00:17:17.270 --> 00:17:20.450
There's SSE, see that we didn't cover.

00:17:20.450 --> 00:17:23.480
And obviously client-side encryption will be up to you.

00:17:23.480 --> 00:17:25.820
You know, you're just gonna encrypt it on your end and just upload

00:17:25.820 --> 00:17:28.415
files as you would normally to S3.

00:17:28.415 --> 00:17:30.950
And S3 doesn't have to know that it's encrypted and they don't care.

00:17:30.950 --> 00:17:34.520
They're just going to manage the file as if it's a normal file.

00:17:34.520 --> 00:17:37.235
So that's it for this video,

00:17:37.235 --> 00:17:39.390
I'll see you in the next one.
