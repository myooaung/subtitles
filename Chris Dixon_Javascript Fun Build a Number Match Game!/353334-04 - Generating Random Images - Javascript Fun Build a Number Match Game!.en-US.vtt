WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.040
A single image on our screen,

00:00:02.040 --> 00:00:05.565
just like we see here is going to be no good for our project.

00:00:05.565 --> 00:00:10.695
So what we're going to do instead is to select a random image from an array,

00:00:10.695 --> 00:00:13.470
and the way we're going to do this is with JavaScript,

00:00:13.470 --> 00:00:15.660
so we can go to our project folder,

00:00:15.660 --> 00:00:21.465
create a new file, and this will be the script.js,

00:00:21.465 --> 00:00:24.645
which we then need to link in our index.

00:00:24.645 --> 00:00:27.870
Just above the closing body tag,

00:00:27.870 --> 00:00:30.705
create the script with the source,

00:00:30.705 --> 00:00:34.620
and this is simply script.js. Let's test.

00:00:34.620 --> 00:00:37.980
This is linking inside the script with a simple alert,

00:00:37.980 --> 00:00:41.655
and we'll just say, any message inside here so high.

00:00:41.655 --> 00:00:44.770
If we reload the browser, we should see the message,

00:00:44.770 --> 00:00:47.180
if this is successfully linked.

00:00:47.180 --> 00:00:49.255
Now we're going to move this.

00:00:49.255 --> 00:00:53.080
Now the next thing we need to do is to create an array which is going to

00:00:53.080 --> 00:00:57.190
include the image name and also the number of items.

00:00:57.190 --> 00:01:02.210
This also needs to correspond with all of the images inside of this folder.

00:01:02.210 --> 00:01:05.395
To save a little time, if we go over to GitHub

00:01:05.395 --> 00:01:08.510
and use the same link that we used earlier.

00:01:08.510 --> 00:01:11.055
Inside of the number match game,

00:01:11.055 --> 00:01:14.310
take a look for the file called the array.js.

00:01:14.310 --> 00:01:18.650
Then inside of here we need to copy the contents of this array.

00:01:18.780 --> 00:01:21.954
I'll grab all of these items,

00:01:21.954 --> 00:01:26.960
making sure to grab the square brackets on the top and the bottom,

00:01:26.960 --> 00:01:29.715
paste this into our scripts,

00:01:29.715 --> 00:01:35.540
and these names all correspond to the same images which are inside the folder.

00:01:35.540 --> 00:01:38.510
So do be aware if you have used your own images,

00:01:38.510 --> 00:01:41.800
you will need to change the image name to match each one.

00:01:41.800 --> 00:01:44.945
You will also need to change the number of items too.

00:01:44.945 --> 00:01:49.834
For example, we use bananas.jpg as six bananas,

00:01:49.834 --> 00:01:52.910
and this is set on the lines below.

00:01:52.910 --> 00:01:54.500
Since this is an array,

00:01:54.500 --> 00:01:58.885
we can select each one of these objects inside here by the index number.

00:01:58.885 --> 00:02:02.120
The index number is the position inside of the array,

00:02:02.120 --> 00:02:05.180
so the first item is position 0.

00:02:05.180 --> 00:02:08.150
This is position 1, position 2,

00:02:08.150 --> 00:02:13.015
and this is how we're going to select an image to display in our project.

00:02:13.015 --> 00:02:17.120
So down at the very bottom and just after our array,

00:02:17.120 --> 00:02:19.530
we can select each one of these images randomly.

00:02:19.530 --> 00:02:22.395
We need to generate a random number.

00:02:22.395 --> 00:02:28.500
Let's start this inside of a constant call it random number,

00:02:29.000 --> 00:02:33.310
and we can use a JavaScript math function, call it random.

00:02:33.310 --> 00:02:35.305
So math.random.

00:02:35.305 --> 00:02:38.840
This will generate a random number between 0 and one.

00:02:38.840 --> 00:02:42.125
Zero is included but number 1 isn't.

00:02:42.125 --> 00:02:46.295
This will go through to 0.999 for example.

00:02:46.295 --> 00:02:50.340
We can log this inside the console to check our output.

00:02:50.600 --> 00:02:55.065
Logout our constant into our project,

00:02:55.065 --> 00:02:59.890
and we can reload, right-click and inspect.

00:03:01.130 --> 00:03:05.820
Each time we reload, we get a different random number.

00:03:06.010 --> 00:03:10.580
Inside of this array we have 20 separate images.

00:03:10.580 --> 00:03:16.985
The way we can check how many items is inside of an array is by selecting the array name,

00:03:16.985 --> 00:03:21.070
which is images and then you say property which is length.

00:03:21.070 --> 00:03:23.120
If we reload this,

00:03:23.120 --> 00:03:26.825
we now see we have the 20 items inside of our array,

00:03:26.825 --> 00:03:30.780
so we can now use this to multiply our random number.

00:03:30.970 --> 00:03:35.585
Let's try this inside the console and refresh.

00:03:35.585 --> 00:03:38.600
This will now give us 20 different options.

00:03:38.600 --> 00:03:43.340
So our number will either begin with a 0 right right to 19.

00:03:43.340 --> 00:03:48.140
We can also run this down if we cut out this section,

00:03:48.140 --> 00:03:52.700
we can use a different JavaScript function called math.floor,

00:03:52.700 --> 00:03:55.880
and this is going to round down to the nearest whole number.

00:03:55.880 --> 00:03:59.310
Let's try this out over in the console.

00:04:02.890 --> 00:04:07.085
We're now left with a random number between 0 and 19,

00:04:07.085 --> 00:04:09.920
which gives us 20 different options.

00:04:09.920 --> 00:04:12.740
The way we can now use this random number,

00:04:12.740 --> 00:04:16.970
if we remove the console log is by selecting our images array,

00:04:16.970 --> 00:04:20.830
and we can select any of these images by the index number.

00:04:20.830 --> 00:04:23.105
Number 2 like we mentioned before,

00:04:23.105 --> 00:04:25.790
it should be 0,1, and 2.

00:04:25.790 --> 00:04:27.845
This would select the blocks.

00:04:27.845 --> 00:04:29.960
But instead of hard-coding this value,

00:04:29.960 --> 00:04:32.225
we can type in the random number.

00:04:32.225 --> 00:04:34.940
After this, we can use the dot notation to select

00:04:34.940 --> 00:04:38.375
either the image name or the number of items.

00:04:38.375 --> 00:04:41.450
We want the image name and we can also store

00:04:41.450 --> 00:04:45.420
this inside of a constant called random image name.

00:04:47.480 --> 00:04:50.565
Let's try logging this to the console.

00:04:50.565 --> 00:04:53.530
Grab this and paste this in,

00:04:54.110 --> 00:04:57.740
randomly selecting one of our image names.

00:04:57.740 --> 00:04:59.620
So now we know this is working,

00:04:59.620 --> 00:05:02.770
we can now use this to set our image source.

00:05:02.770 --> 00:05:05.655
First of all let's create an image element,

00:05:05.655 --> 00:05:08.330
store this inside of the image constant,

00:05:08.330 --> 00:05:13.700
and we can create an element with document.createElements.

00:05:14.960 --> 00:05:19.744
The element type we want to create is an image which is IMG.

00:05:19.744 --> 00:05:23.810
Then we can grab our image variable and set the source attributes,

00:05:23.810 --> 00:05:27.410
and this image source needs to point to our images folder.

00:05:27.410 --> 00:05:31.160
So we can set this as a template string with the back ticks.

00:05:31.160 --> 00:05:36.690
This will allow us to insert our random image name as a variable.

00:05:36.790 --> 00:05:41.025
Our images folder, forward slash.

00:05:41.025 --> 00:05:47.280
Just like earlier we used the $ symbol and the curly braces to insert our variable.

00:05:47.330 --> 00:05:50.730
This now leaves us with a image element created,

00:05:50.730 --> 00:05:52.370
and the next thing we need to do,

00:05:52.370 --> 00:05:57.780
if we go to the index page is to add this inside of our image container.

00:05:58.460 --> 00:06:05.355
So just above let's create a constant called image container,

00:06:05.355 --> 00:06:09.210
and we're going to select this with document.getElementById,

00:06:09.210 --> 00:06:14.009
the Id of image container.

00:06:14.009 --> 00:06:20.695
Now we have this reference we can select our image container and then appendChild.

00:06:20.695 --> 00:06:26.060
The child elements we want to append is this image from just above.

00:06:26.690 --> 00:06:31.490
We should now be able to save this and see this in our project.

00:06:31.850 --> 00:06:37.120
So each time we now load we see an image which is displaying inside the browser,

00:06:37.120 --> 00:06:40.690
and this is being randomly selected from our array.

00:06:40.690 --> 00:06:46.775
We still see this image just above because this is to replace in our index.html.

00:06:46.775 --> 00:06:50.260
We can now remove this element and now if we refresh

00:06:50.260 --> 00:06:53.630
the browser we just see a single random image.

00:06:53.630 --> 00:06:55.070
This is an important step,

00:06:55.070 --> 00:06:59.585
but we don't want to refresh the browser to get a new image each time.

00:06:59.585 --> 00:07:04.080
So in the next video, we'll take a look at how we can do this with a timer.
