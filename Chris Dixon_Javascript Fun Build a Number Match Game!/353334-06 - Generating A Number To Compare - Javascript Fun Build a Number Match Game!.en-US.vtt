WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.890
Let's now create our random number which is going to display to the player,

00:00:04.890 --> 00:00:08.415
so they can compare the number of items inside the image.

00:00:08.415 --> 00:00:11.940
This number is going to be one of three things.

00:00:11.940 --> 00:00:15.450
It's going to be if the correct amount of items which is

00:00:15.450 --> 00:00:19.005
displayed in the image are one higher or one lower,

00:00:19.005 --> 00:00:21.705
which is so the game is a little bit more challenging,

00:00:21.705 --> 00:00:25.095
and we're going to do this over in our generate function.

00:00:25.095 --> 00:00:29.235
At the moment our generate function is starting to get pretty crowded.

00:00:29.235 --> 00:00:33.600
We can outsource all of the code which is responsible for setting our image.

00:00:33.600 --> 00:00:38.625
This is grabbing our image container all the way down to appendChild.

00:00:38.625 --> 00:00:41.950
Let's clear this out, leaving in our splice.

00:00:41.950 --> 00:00:44.930
I'm going to replace this with a function.

00:00:44.930 --> 00:00:49.050
The function I'm going to give this a name of setImageSrc,

00:00:49.250 --> 00:00:52.930
and then create this just over the top.

00:00:58.910 --> 00:01:03.785
Inside here we can paste in the contents of a quote from our generate function,

00:01:03.785 --> 00:01:08.840
but for this function to work we also need to receive the random image name.

00:01:08.840 --> 00:01:11.090
Back down to our generate function,

00:01:11.090 --> 00:01:13.405
we have our random image name here.

00:01:13.405 --> 00:01:21.260
We can copy this as this to our function and then if we receive this as an argument,

00:01:21.260 --> 00:01:24.275
this is now available inside of this function to use.

00:01:24.275 --> 00:01:28.675
Before we go any further let's save our code and try this in the browser,

00:01:28.675 --> 00:01:32.175
and everything still works as expected.

00:01:32.175 --> 00:01:36.240
We can now move on to generating this random number.

00:01:36.240 --> 00:01:39.120
Let's go down to our generate function.

00:01:39.120 --> 00:01:41.580
Just below where we set the image source,

00:01:41.580 --> 00:01:43.610
we can also create a new function which is

00:01:43.610 --> 00:01:46.345
going to be responsible for creating this number.

00:01:46.345 --> 00:01:50.020
Let's call this generate plus or minus.

00:01:52.640 --> 00:01:56.000
All this function is going to do is to either return

00:01:56.000 --> 00:01:59.300
a value of positive one or negative one.

00:01:59.300 --> 00:02:04.405
We can then use this number to add it to a real number to make it more challenging.

00:02:04.405 --> 00:02:08.230
Let's create this just above inside of a function,

00:02:08.390 --> 00:02:11.890
so generate plus or minus.

00:02:13.220 --> 00:02:16.640
This just needs an equals just afterwards here.

00:02:16.640 --> 00:02:21.305
For this function to return either a positive one or a negative one value,

00:02:21.305 --> 00:02:23.950
we need to generate two random options.

00:02:23.950 --> 00:02:29.320
The way we can do this just like we've looked earlier is to use math.random.

00:02:29.320 --> 00:02:32.885
To give us two separate options or two values,

00:02:32.885 --> 00:02:38.160
we can multiply this by two and then wrap this inside of math.floor.

00:02:40.790 --> 00:02:45.080
Remember math.floor will run down our random number.

00:02:45.080 --> 00:02:48.470
This will return a value of either zero or one.

00:02:48.470 --> 00:02:54.210
We saw this inside of a constant which I'm going to call number zero to one.

00:02:54.520 --> 00:02:58.585
We now want to return back a value from this function.

00:02:58.585 --> 00:03:03.465
As we just mentioned the number zero to one will either be a zero or a one.

00:03:03.465 --> 00:03:05.210
The way we can convert this to

00:03:05.210 --> 00:03:11.680
a positive one or negative one is to make use of the JavaScript ternary operator.

00:03:11.680 --> 00:03:15.820
We can select our constant of numbers zero to one,

00:03:15.820 --> 00:03:18.545
and we can say if this is equal to zero,

00:03:18.545 --> 00:03:20.825
we now want to provide an option.

00:03:20.825 --> 00:03:23.660
The JavaScript ternary operator will allow us to

00:03:23.660 --> 00:03:27.280
provide two options whether the value is true or false.

00:03:27.280 --> 00:03:30.330
It works just like an if else statement.

00:03:30.330 --> 00:03:32.790
If this expression here is true,

00:03:32.790 --> 00:03:36.735
so if this is equal to zero after the question mark,

00:03:36.735 --> 00:03:40.175
we're going to return a value of negative one.

00:03:40.175 --> 00:03:45.065
We then add a colon and provide option if this is going to be false.

00:03:45.065 --> 00:03:47.825
If this is false, we'll add plus one,

00:03:47.825 --> 00:03:50.890
and return this back from our function.

00:03:50.890 --> 00:03:55.425
Since this is randomly generated we'll have a 50/50 chance,

00:03:55.425 --> 00:03:59.030
but this function will return either negative one or positive one.

00:03:59.030 --> 00:04:03.625
We can now scroll down and store this return value inside of a constant.

00:04:03.625 --> 00:04:09.645
Let's say plus or minus and set this to the return value.

00:04:09.645 --> 00:04:13.055
Now we have either this positive or negative number.

00:04:13.055 --> 00:04:18.125
We also now need to grab the actual value of items each image contains.

00:04:18.125 --> 00:04:20.900
The way we can do this if we scroll up,

00:04:20.900 --> 00:04:24.355
is to select the property called number of items.

00:04:24.355 --> 00:04:28.985
We're doing something very similar in this function where we grab the random image name.

00:04:28.985 --> 00:04:31.090
Let's take a look at this.

00:04:31.090 --> 00:04:35.180
Just here we are grabbing our image name from a random image.

00:04:35.180 --> 00:04:37.810
Let's copy this line here,

00:04:37.810 --> 00:04:41.555
paste it in and rather than grabbing our random image name,

00:04:41.555 --> 00:04:44.790
we can now grab the number of items,

00:04:45.830 --> 00:04:49.100
and also change this constant name to reflect this,

00:04:49.100 --> 00:04:51.539
so number of items.

00:04:51.910 --> 00:04:55.130
This now leaves us with all the information we need to

00:04:55.130 --> 00:04:58.430
generate our display number just like we see here.

00:04:58.430 --> 00:05:01.430
We have a value of negative or positive one,

00:05:01.430 --> 00:05:04.225
and we also have the correct number two.

00:05:04.225 --> 00:05:06.980
We're now going to use these two values to pass to

00:05:06.980 --> 00:05:11.250
our function which is going to generate this display number,

00:05:11.250 --> 00:05:17.240
display our function, where we are going to pass

00:05:17.240 --> 00:05:19.280
in our two constants or our two values from

00:05:19.280 --> 00:05:23.360
above which is plus or minus and number of items.

00:05:23.360 --> 00:05:28.500
Scroll up and create our function called generate display number.

00:05:28.640 --> 00:05:32.580
This time we receive in two values and the first one is number of

00:05:32.580 --> 00:05:36.750
items and the second one is plus or minus.

00:05:36.800 --> 00:05:41.120
Inside of our function we want to do one of two things.

00:05:41.120 --> 00:05:44.940
We want to either display the real number,

00:05:46.190 --> 00:05:52.615
or alternatively we want to display a number which is either one higher or one lower.

00:05:52.615 --> 00:05:56.345
To choose which one of these options this function is going to take,

00:05:56.345 --> 00:05:59.225
we need to generate a random number.

00:05:59.225 --> 00:06:05.260
Just like below here we're going to generate two random numbers so between zero or one.

00:06:05.260 --> 00:06:07.185
Inside of a constant,

00:06:07.185 --> 00:06:09.255
I'm going to call this split.

00:06:09.255 --> 00:06:11.840
This random number will now allow us to create

00:06:11.840 --> 00:06:15.545
an if statement to check if this is zero or one.

00:06:15.545 --> 00:06:20.190
We'll say if the split is equal to zero,

00:06:20.990 --> 00:06:23.985
this is going to display our real number.

00:06:23.985 --> 00:06:26.930
The way we can do this inside of our index page is to find

00:06:26.930 --> 00:06:30.565
our elements whichever value is stored inside.

00:06:30.565 --> 00:06:33.795
We see this value just here so we can remove this,

00:06:33.795 --> 00:06:37.620
and then we can target our element with the id of number.

00:06:38.900 --> 00:06:43.870
We do this with document.getelementbyid.

00:06:44.870 --> 00:06:49.415
I'll select there was number and then set

00:06:49.415 --> 00:06:52.160
the innerHTML and set this to our number

00:06:52.160 --> 00:06:56.010
of items which is passed to our function just above.

00:06:56.540 --> 00:07:01.100
This is our correct number so now we can create a false number.

00:07:01.100 --> 00:07:06.060
We can say else. This will be if the split is equal to one.

00:07:06.920 --> 00:07:12.630
Just like above, we'll also set the document.getelementbyid,

00:07:12.630 --> 00:07:20.420
select our number and this is equal to our real number which is number of items.

00:07:20.420 --> 00:07:24.695
Then we want to add either a positive one or a negative one to this,

00:07:24.695 --> 00:07:28.560
which is stored in a value called plus or minus.

00:07:29.900 --> 00:07:33.180
Let's give this a try in the browser.

00:07:33.180 --> 00:07:36.675
If I have to be more clear, if we just slow this game down,

00:07:36.675 --> 00:07:41.655
so three seconds and reload,

00:07:41.655 --> 00:07:44.800
we see the value of one.

00:07:47.030 --> 00:07:49.200
We seem to have a problem somewhere,

00:07:49.200 --> 00:07:53.170
so let's go back up to our function.

00:07:53.900 --> 00:07:58.065
We have a random number between zero and one.

00:07:58.065 --> 00:08:02.745
If it's zero, we'll set the number value to be our number of items.

00:08:02.745 --> 00:08:05.510
If not we'll set this to be our number of items,

00:08:05.510 --> 00:08:07.864
either positive or negative.

00:08:07.864 --> 00:08:12.750
That seems to be okay, so let's go down to generate, display number.

00:08:13.280 --> 00:08:18.135
I think we just need to pass this around in a correct order.

00:08:18.135 --> 00:08:21.915
Let's try this now.

00:08:21.915 --> 00:08:25.280
Click on play. There's six people

00:08:25.280 --> 00:08:27.890
inside of here and we get the value of seven, that's one higher.

00:08:27.890 --> 00:08:29.990
This is the correct number of eight.

00:08:29.990 --> 00:08:31.670
This is one higher.

00:08:31.670 --> 00:08:33.985
We just need to wait for one lower,

00:08:33.985 --> 00:08:35.575
seven, which is this one here.

00:08:35.575 --> 00:08:37.985
Now we see the correct number of items.

00:08:37.985 --> 00:08:43.030
We see one value higher and also one value lower too.

00:08:43.030 --> 00:08:45.710
This now working, we're going to now move on to

00:08:45.710 --> 00:08:49.470
the next video and we'll replace the image name.
