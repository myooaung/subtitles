WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.425
Our game is almost finished and now we just need to make some finishing touches.

00:00:04.425 --> 00:00:08.070
One of the main things we're going to do in this video is to make sure that the user

00:00:08.070 --> 00:00:12.330
can only click on one of these selection buttons once per image.

00:00:12.330 --> 00:00:14.625
Currently, if we start a game,

00:00:14.625 --> 00:00:20.190
we can click on any of these buttons as many times as we want for every single image.

00:00:20.190 --> 00:00:23.190
We also want to make sure that this score section and

00:00:23.190 --> 00:00:27.225
the buttons is not available before the game even starts.

00:00:27.225 --> 00:00:33.970
First of all, we'll begin by hiding this start section over in our script.js.

00:00:33.970 --> 00:00:36.590
I want to do this just below our variables,

00:00:36.590 --> 00:00:38.600
so under the total available.

00:00:38.600 --> 00:00:41.525
Let's grab our stats contents section,

00:00:41.525 --> 00:00:47.305
which is the wrapper just here which holds all of our scores and buttons.

00:00:47.305 --> 00:00:56.140
Document.getElementById, the ID name is statsContent.

00:00:58.370 --> 00:01:06.540
We can then hide this by setting the style property of visibility to be equal to hidden.

00:01:06.940 --> 00:01:11.600
Since this is now gone, we want to reinstate this once the game starts.

00:01:11.600 --> 00:01:15.820
Let's copy this and if we go down to our play function,

00:01:15.820 --> 00:01:18.165
we can add this inside here,

00:01:18.165 --> 00:01:23.140
but this time we want the visibility to be equal to visible.

00:01:23.140 --> 00:01:28.710
Finally, at the end of the game we'll also manipulate this, so we can add this in.

00:01:28.710 --> 00:01:32.635
Once again, setting this to be hidden once the game is over.

00:01:32.635 --> 00:01:35.460
Let's save this and try this in the browser,

00:01:35.460 --> 00:01:42.420
you can play and now our stats are now showing [inaudible] the end of the game.

00:01:42.420 --> 00:01:46.690
This is now being hidden ready for the start of the game.

00:01:46.690 --> 00:01:49.805
Next, we can also make these two values dynamic.

00:01:49.805 --> 00:01:52.940
Currently we don't have a value to begin with our score,

00:01:52.940 --> 00:01:57.985
and we'll have this hard-coded value of 20 inside of our index.html.

00:01:57.985 --> 00:02:02.930
Let's remove this, and now we can update these with the ID of current score,

00:02:02.930 --> 00:02:05.360
and also total available.

00:02:05.360 --> 00:02:07.430
We already have these values.

00:02:07.430 --> 00:02:10.680
If we scroll up to our variables at the top,

00:02:11.110 --> 00:02:17.555
we have our score and also the total available, so let's add these here now.

00:02:17.555 --> 00:02:21.320
Grab the elements by our ID,

00:02:21.320 --> 00:02:24.510
which is the current score.

00:02:26.540 --> 00:02:32.045
Then set the innerHTML to be equal to our score variable.

00:02:32.045 --> 00:02:34.385
I'm going to duplicate this,

00:02:34.385 --> 00:02:39.360
and the next one of total had the ID of total available.

00:02:41.150 --> 00:02:44.175
The variable is stored just above,

00:02:44.175 --> 00:02:46.965
and that's just one here, so let's pull this over.

00:02:46.965 --> 00:02:51.040
Over to the browser, we can now test this out if we click on play.

00:02:51.040 --> 00:02:57.830
All values now updated and we still see the dynamic number of images of 20.

00:02:57.830 --> 00:03:00.310
If you remember from early on in the HTML,

00:03:00.310 --> 00:03:02.845
we also set the section just here.

00:03:02.845 --> 00:03:06.025
We'll say how many seconds the user has to decide.

00:03:06.025 --> 00:03:09.235
This will just stay hard-coded value of three,

00:03:09.235 --> 00:03:11.765
which is over in our index page,

00:03:11.765 --> 00:03:17.095
we also surrounded this value inside of a span with the ID of timeSetting.

00:03:17.095 --> 00:03:19.310
Now let's remove this,

00:03:19.310 --> 00:03:21.195
it's a hard-coded value,

00:03:21.195 --> 00:03:24.000
we can now set this as a variable.

00:03:24.000 --> 00:03:26.460
At the top, I'm going to create a constant,

00:03:26.460 --> 00:03:32.245
the name of time delay which I'm going to initially set to a value of three seconds.

00:03:32.245 --> 00:03:36.200
We can now use this time delay in two places.

00:03:36.200 --> 00:03:39.695
First of all, we're going to update our DOM just here,

00:03:39.695 --> 00:03:42.815
and we can also use this down below.

00:03:42.815 --> 00:03:45.010
Inside of our timer function,

00:03:45.010 --> 00:03:49.055
so we can replace our hard-coded value with our variable.

00:03:49.055 --> 00:03:51.290
We can then update the DOM.

00:03:51.290 --> 00:03:57.450
So let's duplicate this line and the ID which we want to target is time setting.

00:04:01.550 --> 00:04:05.550
Let's give this a save and check if this is working.

00:04:05.550 --> 00:04:09.080
It's working but it doesn't look exactly how we want it to,

00:04:09.080 --> 00:04:10.805
this is a value of 3,000.

00:04:10.805 --> 00:04:12.440
Since this is in milliseconds,

00:04:12.440 --> 00:04:19.550
so all we need to do is to divide this by 1,000 giving us the value of three seconds.

00:04:19.550 --> 00:04:24.185
Let's also check the timer is working and see we have three seconds between

00:04:24.185 --> 00:04:29.910
each image. That looks fine.

00:04:29.910 --> 00:04:34.645
The next thing we need to fix is the fact that they're using a click on these buttons,

00:04:34.645 --> 00:04:37.280
multiple times for each image.

00:04:37.280 --> 00:04:41.260
The way we're going to fix this is by creating a variable called chosen,

00:04:41.260 --> 00:04:45.260
and we'll set this to be true once a user clicks on the button.

00:04:45.260 --> 00:04:47.645
Let's add a comma just after this,

00:04:47.645 --> 00:04:51.445
and then we can add a new variable called chosen,

00:04:51.445 --> 00:04:55.060
and we'll set this to an initial value of false.

00:04:55.060 --> 00:04:57.440
Now if we scroll down to the functions which

00:04:57.440 --> 00:05:00.440
are enabled once the user clicks on the buttons,

00:05:00.440 --> 00:05:03.200
this is the match and no match functions.

00:05:03.200 --> 00:05:06.440
We only want to run the code inside here,

00:05:06.440 --> 00:05:08.900
if the chosen value is equal to false.

00:05:08.900 --> 00:05:10.650
So we cut this,

00:05:10.650 --> 00:05:12.350
I'm looking to write an if statement.

00:05:12.350 --> 00:05:14.780
We can say if not chosen,

00:05:14.780 --> 00:05:19.490
we can then add our curly braces and run the code inside.

00:05:19.490 --> 00:05:23.345
Would do exactly the same for our noMatch function just below,

00:05:23.345 --> 00:05:27.480
so cut this out, create our if statement,

00:05:27.580 --> 00:05:30.865
and then run this code inside.

00:05:30.865 --> 00:05:34.610
Initially, both of these functions will run if you click on

00:05:34.610 --> 00:05:38.590
a button because we've set our chosen value to be false.

00:05:38.590 --> 00:05:42.185
So either of these options will work at the very beginning.

00:05:42.185 --> 00:05:44.210
But once the user has clicked on one of these,

00:05:44.210 --> 00:05:49.890
we want to then reverse this and set our chosen value to be equal to true.

00:05:50.510 --> 00:05:54.660
We'll do exactly the same in our noMatch function.

00:05:55.940 --> 00:05:58.784
Once a user has made any selection,

00:05:58.784 --> 00:06:00.360
chosen will be equal to true.

00:06:00.360 --> 00:06:02.345
Then we want to make this false again,

00:06:02.345 --> 00:06:04.415
so the user can make a new option,

00:06:04.415 --> 00:06:08.410
and the way we can do this is backup in our generate function.

00:06:08.410 --> 00:06:12.285
Let's say chosen be equal to false,

00:06:12.285 --> 00:06:16.190
so the value of chosen will only ever be equal to false

00:06:16.190 --> 00:06:19.970
once the game starts or once we generate a new image.

00:06:19.970 --> 00:06:24.595
This means the user can then make their choice because this will be false,

00:06:24.595 --> 00:06:25.950
and then we'll set this to be true,

00:06:25.950 --> 00:06:28.980
so no further choices can be made.

00:06:28.980 --> 00:06:32.720
Give this further save and let's test this over in the browser.

00:06:32.720 --> 00:06:37.430
We can now only click on any of these buttons once for that image,

00:06:37.430 --> 00:06:44.350
once for this image and this is all working fine.

00:06:44.480 --> 00:06:49.730
This is now all the functionality now taken care of for our number much game.

00:06:49.730 --> 00:06:55.320
Next, we're going to finish off this project by adding a fade effect to our image.
