WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.450
one of the solutions to our problems is remote matter in location or simply are my

00:00:05.450 --> 00:00:07.330
Basically.

00:00:07.330 --> 00:00:12.140
The idea is that you would no longer send yesterday per request and then receive STM allows

00:00:12.140 --> 00:00:16.750
the response You're going to definitely call the matter inside the more layer.

00:00:16.750 --> 00:00:17.880
In other words,

00:00:17.880 --> 00:00:22.980
you're going to call the business matter directly that is reciting in another jbm and get

00:00:22.980 --> 00:00:27.850
back the data as the response This cold water with that method returns going back to a

00:00:27.850 --> 00:00:28.700
flight booking service.

00:00:28.700 --> 00:00:29.460
Example,

00:00:29.460 --> 00:00:34.400
The flight booking service will would now be able to call to get temperature method along

00:00:34.400 --> 00:00:35.290
with para meters.

00:00:35.290 --> 00:00:36.010
In this case,

00:00:36.010 --> 00:00:41.380
it's going to send the location to the remote matter reciting in another jbm which is our

00:00:41.380 --> 00:00:42.650
weather forecasts overs.

00:00:42.650 --> 00:00:43.370
And then there.

00:00:43.370 --> 00:00:48.170
Moz of was going to respond back with the data or whatever the value that the method

00:00:48.170 --> 00:00:48.850
returns,

00:00:48.850 --> 00:00:52.050
which will then be used inside the flight booking service.

00:00:52.050 --> 00:00:57.560
This is possible with Autumn mine using an out of my tour.

00:00:57.560 --> 00:01:02.280
We're going to create so called a stub and the skeleton stop is going to recite on the

00:01:02.280 --> 00:01:03.110
client side,

00:01:03.110 --> 00:01:04.460
which in this case,

00:01:04.460 --> 00:01:08.770
ISS flight booking service and the skeleton is going to recite on the server side.

00:01:08.770 --> 00:01:12.670
The weather forecasts overs from within the client application.

00:01:12.670 --> 00:01:17.240
You would use the stub object and you would be able to call the remote method.

00:01:17.240 --> 00:01:18.180
Internally.

00:01:18.180 --> 00:01:19.390
Stop will take care off,

00:01:19.390 --> 00:01:24.130
establishing the connection with the silver and then send those para meters to the remote

00:01:24.130 --> 00:01:24.750
machine.

00:01:24.750 --> 00:01:30.250
Their skeleton on the other end is going to receive those perimeters called Espace with JV

00:01:30.250 --> 00:01:35.150
method or the remote mattered and water with the matter Britain's The skeleton is going to

00:01:35.150 --> 00:01:41.100
send back the data or the object back to the stub and stubbled and forward it back to the

00:01:41.100 --> 00:01:42.250
client application.

00:01:42.250 --> 00:01:43.930
In simple terms,

00:01:43.930 --> 00:01:48.920
the client application of the flight booking service would interact with the stub as if it

00:01:48.920 --> 00:01:51.150
is interacting with the remote object.

00:01:51.150 --> 00:01:52.050
Well,

00:01:52.050 --> 00:01:55.350
Ottoman makes it possible to extend data between services,

00:01:55.350 --> 00:01:57.850
but it has its own drawbacks.

00:01:57.850 --> 00:01:59.050
For instance,

00:01:59.050 --> 00:02:02.270
since we're using arm my,

00:02:02.270 --> 00:02:04.060
it will only work with Java,

00:02:04.060 --> 00:02:09.170
so only the two applications are deployed on JB and Machine and their board Del appears in

00:02:09.170 --> 00:02:09.780
Java.

00:02:09.780 --> 00:02:11.350
They both can communicate.

00:02:11.350 --> 00:02:11.980
If,

00:02:11.980 --> 00:02:12.650
for example,

00:02:12.650 --> 00:02:14.950
you would like to interact with the PHP application,

00:02:14.950 --> 00:02:16.550
then it's not possible.

00:02:16.550 --> 00:02:20.910
So this is a significant Is that want age when you're talking about distributed

00:02:20.910 --> 00:02:22.430
applications like Amazon,

00:02:22.430 --> 00:02:27.840
where all the services may be residing in various geographical locations on various

00:02:27.840 --> 00:02:32.150
different platforms and might be written in various different programming languages,

00:02:32.150 --> 00:02:36.550
the only toe becoming getting with each other not to perform a business task,

00:02:36.550 --> 00:02:38.040
but without a my.

00:02:38.040 --> 00:02:43.300
Their application is only restricted to use only java and use JV and platform,

00:02:43.300 --> 00:02:45.780
so that's definitely a drawback.

00:02:45.780 --> 00:02:47.660
Another drawback is off course.

00:02:47.660 --> 00:02:53.530
You won't be able to interact with technologies like angular reactor view because they're

00:02:53.530 --> 00:02:56.670
all essentially JavaScript libraries reciting in the client,

00:02:56.670 --> 00:03:00.900
and you cannot just talk to them using out of my along with all these.

00:03:00.900 --> 00:03:04.440
There are certain other these advantages without a my I mean,

00:03:04.440 --> 00:03:05.500
it's not efficient,

00:03:05.500 --> 00:03:09.050
and the court doesn't look so user friendly to dollar purse.

00:03:09.050 --> 00:03:10.510
And for that reason,

00:03:10.510 --> 00:03:13.050
army is not even an option of the days.

00:03:13.050 --> 00:03:14.010
They're better.

00:03:14.010 --> 00:03:14.850
All the natives,

00:03:14.850 --> 00:03:16.450
which will talk about in a while

