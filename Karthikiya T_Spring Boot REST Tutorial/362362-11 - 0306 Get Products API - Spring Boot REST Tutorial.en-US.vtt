WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.820
the 1st 1 shelter that we're going to introduce his to expose an FBI to retrieve all the

00:00:06.820 --> 00:00:07.950
products available.

00:00:07.950 --> 00:00:13.760
It was created controller specific for product related requests.

00:00:13.760 --> 00:00:24.080
I'm going to call it as product controller in Camel case and we want to receive requests.

00:00:24.080 --> 00:00:28.650
That has slash product in there you are.

00:00:28.650 --> 00:00:30.460
Someone didn't.

00:00:30.460 --> 00:00:36.850
Did you say request mapping notation with the falling Patton.

00:00:36.850 --> 00:00:41.820
In addition to that,

00:00:41.820 --> 00:00:46.800
I'm also going to make this class arrest controller.

00:00:46.800 --> 00:00:50.340
This is similar to a controller annotation.

00:00:50.340 --> 00:00:56.670
The only difference is this time this controller is tuned to respond back with the data and

00:00:56.670 --> 00:00:57.690
make it part of destiny.

00:00:57.690 --> 00:00:58.650
P response.

00:00:58.650 --> 00:01:03.810
Now this is complete opposite to traditional embassy applications where the intent is to

00:01:03.810 --> 00:01:05.190
respond back with HTML,

00:01:05.190 --> 00:01:09.380
in which case the controllable respond back with moral and view objects.

00:01:09.380 --> 00:01:15.930
If you hope your most on the sanitation can see all the annotations that will make this

00:01:15.930 --> 00:01:16.680
sanitation.

00:01:16.680 --> 00:01:20.650
So we have controller as well as the response body.

00:01:20.650 --> 00:01:26.750
So whatever the data that we want to send would be part of the response body.

00:01:26.750 --> 00:01:29.800
The next thing I'm going to do his stint.

00:01:29.800 --> 00:01:32.960
Ageism mattered to retrieve all the products available.

00:01:32.960 --> 00:01:36.150
But before that we need to have a command object,

00:01:36.150 --> 00:01:40.750
someone to create a product class inside the model,

00:01:40.750 --> 00:01:45.480
something like a poor Joe.

00:01:45.480 --> 00:01:49.500
And guess if we had a database,

00:01:49.500 --> 00:01:51.190
this would be our model.

00:01:51.190 --> 00:01:58.950
So would have all those annotations to map this particular entity with the relational dead

00:01:58.950 --> 00:01:59.750
of a stable.

00:01:59.750 --> 00:02:01.390
But at the moment,

00:02:01.390 --> 00:02:02.350
we don't have a database,

00:02:02.350 --> 00:02:02.920
but still,

00:02:02.920 --> 00:02:09.050
we're going to use this as a command object in order to store the product related data.

00:02:09.050 --> 00:02:20.560
This is going to have three variables in my case when this product I d.

00:02:20.560 --> 00:02:28.250
And then we have a string which is going to be product name,

00:02:28.250 --> 00:02:32.850
went into just one more field,

00:02:32.850 --> 00:02:36.230
which is and in teacher,

00:02:36.230 --> 00:02:41.050
and that's going to present the product price.

00:02:41.050 --> 00:02:48.730
I'm also going to introduce couple off constructors,

00:02:48.730 --> 00:02:53.170
and for this I can make use off eclipse to do the job for us.

00:02:53.170 --> 00:02:59.160
I went into juice and know our constructor,

00:02:59.160 --> 00:03:04.420
and I want to make this private because we don't want to be able to create instances off

00:03:04.420 --> 00:03:05.150
this class.

00:03:05.150 --> 00:03:12.160
But since we're going to use this as a Poggio are or an object that holds the data off

00:03:12.160 --> 00:03:12.700
products.

00:03:12.700 --> 00:03:20.850
We do need a parametric constructor and to make it public.

00:03:20.850 --> 00:03:27.520
So if you want to be able to create an instance that's only possible for sending the para

00:03:27.520 --> 00:03:27.960
meters,

00:03:27.960 --> 00:03:30.250
you can't just create an empty instance.

00:03:30.250 --> 00:03:32.220
And of course,

00:03:32.220 --> 00:03:37.950
we're also going to add garrison centers.

00:03:37.950 --> 00:03:52.970
I look until shift up to give proper indentation for all cord just to make it look visually

00:03:52.970 --> 00:03:53.450
better.

00:03:53.450 --> 00:03:55.710
So no,

00:03:55.710 --> 00:03:58.340
we have the model object.

00:03:58.340 --> 00:04:01.150
Next thing is to introduce this always layer.

00:04:01.150 --> 00:04:07.570
This is where we would have our business logic before creating the classless create.

00:04:07.570 --> 00:04:14.950
The contract is an interface which set off Matt that someone to call it does product

00:04:14.950 --> 00:04:17.350
service.

00:04:17.350 --> 00:04:20.670
So in our case,

00:04:20.670 --> 00:04:24.250
I'm going to return a list off product,

00:04:24.250 --> 00:04:36.130
get a draw that's doesn't need any para meters Contra chef Toto,

00:04:36.130 --> 00:04:39.750
import all the missing classes and interfaces,

00:04:39.750 --> 00:04:53.750
and then I'm also going to create a class product service implementation,

00:04:53.750 --> 00:05:03.770
and that's going to implement product service.

00:05:03.770 --> 00:05:08.390
Let's holds at all the missing unimplemented methods,

00:05:08.390 --> 00:05:16.250
some just simply going to create a list off products and then return that list.

00:05:16.250 --> 00:05:38.150
I had a list off product products and Dart had new product.

00:05:38.150 --> 00:05:47.750
I didn't fire as the long it's called A Die for now is the first product,

00:05:47.750 --> 00:05:51.460
and its price is going to be saying Triple nine.

00:05:51.460 --> 00:05:52.660
Actually,

00:05:52.660 --> 00:05:53.120
I guess no,

00:05:53.120 --> 00:05:54.390
because it's more expensive.

00:05:54.390 --> 00:05:56.350
Let's make it one Triple nine.

00:05:56.350 --> 00:06:01.800
I would add a couple off more products.

00:06:01.800 --> 00:06:03.550
You were unique art and fire.

00:06:03.550 --> 00:06:10.170
We're doing all this because we don't have a database and this is going to be,

00:06:10.170 --> 00:06:10.900
say,

00:06:10.900 --> 00:06:13.650
a speaker.

00:06:13.650 --> 00:06:15.530
Cheers off,

00:06:15.530 --> 00:06:15.780
say,

00:06:15.780 --> 00:06:31.020
5 99 And then we have a maybe a book just say $99 and written all the products inside the

00:06:31.020 --> 00:06:33.700
controller well before that.

00:06:33.700 --> 00:06:41.860
That's made this a service because we want us to be auto discoverable with Springs auto

00:06:41.860 --> 00:06:42.400
scanning.

00:06:42.400 --> 00:06:46.650
So the spring will country got this bean by itself.

00:06:46.650 --> 00:06:53.310
That's no dependence.

00:06:53.310 --> 00:07:11.380
Inject us product service inside our controller control shift hole auto writing.

00:07:11.380 --> 00:07:18.450
Now let's introduce the method,

00:07:18.450 --> 00:07:22.590
which is pretty much is going to have the same signatures.

00:07:22.590 --> 00:07:24.250
I'm just going to copy it over here,

00:07:24.250 --> 00:07:34.150
and this is just going to respond back with all the list off products available.

00:07:34.150 --> 00:07:40.240
We also want toe annotate.

00:07:40.240 --> 00:07:48.350
This mattered as get mapping because we wanted to receive all the get requests from the

00:07:48.350 --> 00:07:48.950
client,

00:07:48.950 --> 00:07:51.210
and of course,

00:07:51.210 --> 00:07:53.650
we want to return them.

00:07:53.650 --> 00:07:59.890
Couple of things to note here is that the records mapping annotation doesn't correspond to

00:07:59.890 --> 00:08:01.480
any specific history be mattered.

00:08:01.480 --> 00:08:06.100
So all the requests are all the euros that has this.

00:08:06.100 --> 00:08:10.850
That particular string in them would end up in this controller.

00:08:10.850 --> 00:08:12.750
And inside this country,

00:08:12.750 --> 00:08:16.430
we have methods specific to has to do the math.

00:08:16.430 --> 00:08:21.170
That's in this case we're trying to map with all the get requests.

00:08:21.170 --> 00:08:29.330
So if we send a get request with this particular string in the your Erica's would end up in

00:08:29.330 --> 00:08:30.050
this method.

00:08:30.050 --> 00:08:32.670
Also,

00:08:32.670 --> 00:08:36.850
this control annotation comes with response body,

00:08:36.850 --> 00:08:43.150
so you don't have to declare response body annotation in all the methods in this class.

00:08:43.150 --> 00:08:47.550
So that's another advantage off using the rest controller annotation.

00:08:47.550 --> 00:08:49.350
And I guess,

00:08:49.350 --> 00:08:49.980
with this,

00:08:49.980 --> 00:08:52.640
we have everything in place to test our application.

00:08:52.640 --> 00:08:55.150
Let's run our application.

00:08:55.150 --> 00:08:58.130
If you created the project,

00:08:58.130 --> 00:09:01.350
using spring to suit should be able to locate this file,

00:09:01.350 --> 00:09:05.750
just run it just as you would run any other Java program.

00:09:05.750 --> 00:09:09.430
I don't have any errors.

00:09:09.430 --> 00:09:17.160
Let's open the postman application if you're using a postman for the first time you may be

00:09:17.160 --> 00:09:19.860
feeling a little intimidated looking at the interface.

00:09:19.860 --> 00:09:21.240
It looks very complicated,

00:09:21.240 --> 00:09:22.720
but but trust me,

00:09:22.720 --> 00:09:24.240
it's very user friendly interface.

00:09:24.240 --> 00:09:27.700
Only thing is that it will take a while for you to get used to.

00:09:27.700 --> 00:09:29.470
So as we progress through this course,

00:09:29.470 --> 00:09:34.830
I'm going to talk about radio speeches that the stool has to offer and thereby you'll feel

00:09:34.830 --> 00:09:36.950
comfortable using this tour by yourself.

00:09:36.950 --> 00:09:40.890
So can you guess watching with the You are here.

00:09:40.890 --> 00:09:45.950
It's going to be local host 80 80.

00:09:45.950 --> 00:09:50.150
That's where ourselves is running in product.

00:09:50.150 --> 00:09:52.730
Let's send the request.

00:09:52.730 --> 00:09:53.720
But before that,

00:09:53.720 --> 00:10:01.250
do make sure that you choose get as a method and see it did work,

00:10:01.250 --> 00:10:02.890
he wrote.

00:10:02.890 --> 00:10:06.980
The list off products returned in Jason Format.

