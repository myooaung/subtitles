WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.890
Let's talk about how we contest are right,

00:00:02.890 --> 00:00:03.280
Jane.

00:00:03.280 --> 00:00:07.300
It's for react to spring based applications that use spring were plucks.

00:00:07.300 --> 00:00:14.500
The first thing that you need to do he started this dependency reactor test.

00:00:14.500 --> 00:00:19.430
This is what will bring in all those additional libraries required for you to test.

00:00:19.430 --> 00:00:20.850
React to component.

00:00:20.850 --> 00:00:26.620
If you created your project Isn't spring toe suit are by using spring initialize er and

00:00:26.620 --> 00:00:32.430
added any off the reactor libraries like springboard started web flocks or react to mongo

00:00:32.430 --> 00:00:35.520
db Then this would be added automatically.

00:00:35.520 --> 00:00:38.300
Once you have that in place,

00:00:38.300 --> 00:00:40.550
you can write your test cases.

00:00:40.550 --> 00:00:44.300
So let me just walk you through the test class,

00:00:44.300 --> 00:00:45.370
which I've just created.

00:00:45.370 --> 00:00:50.750
So this class goes inside the standard a source it test directory.

00:00:50.750 --> 00:00:55.750
One thing that you would notice is the sanitation bet flux test.

00:00:55.750 --> 00:00:59.940
This is actually combination off multiple other annotations.

00:00:59.940 --> 00:01:01.580
But ultimately,

00:01:01.580 --> 00:01:08.800
this is just going to configure some beans that would help us test our reactive approx

00:01:08.800 --> 00:01:09.710
component.

00:01:09.710 --> 00:01:13.980
One other beings that it configures his weapon s client,

00:01:13.980 --> 00:01:15.590
which is a variant off,

00:01:15.590 --> 00:01:15.930
wept,

00:01:15.930 --> 00:01:19.580
lined that will help us and ESRI be requests.

00:01:19.580 --> 00:01:24.310
And it comes with a lot off additional methods to help us send the request.

00:01:24.310 --> 00:01:27.820
Check the response and see if the responses as expected,

00:01:27.820 --> 00:01:28.550
etcetera.

00:01:28.550 --> 00:01:32.150
We're going to take a look at an example of this in a while.

00:01:32.150 --> 00:01:37.600
The first test in here is the simplest possible test case.

00:01:37.600 --> 00:01:41.210
And this has nothing to do with our court in our project.

00:01:41.210 --> 00:01:48.960
This is just to get some understanding on how we can use that library in order to test the

00:01:48.960 --> 00:01:50.150
spring back flocks.

00:01:50.150 --> 00:01:56.490
So what I'm trying to do here is I'm trying to create a stream off elements in the scare

00:01:56.490 --> 00:02:01.360
stream off string elements by using the just matter of flux.

00:02:01.360 --> 00:02:09.210
And I'm using this class that is part of the reactor test library in order to subscribe to

00:02:09.210 --> 00:02:16.520
this publisher by calling this method create which takes in the publishers a perimeter and

00:02:16.520 --> 00:02:17.870
I'm using one off its method.

00:02:17.870 --> 00:02:20.040
Expect next ConEd which,

00:02:20.040 --> 00:02:21.130
as the name suggests,

00:02:21.130 --> 00:02:24.100
I'm expecting the count to be three.

00:02:24.100 --> 00:02:31.350
And then finally I'm trying to see if the stream is complete.

00:02:31.350 --> 00:02:32.310
Hard to save.

00:02:32.310 --> 00:02:34.050
The publisher published everything.

00:02:34.050 --> 00:02:35.410
What it has to publish.

00:02:35.410 --> 00:02:36.630
No.

00:02:36.630 --> 00:02:38.290
Since I've already tested this,

00:02:38.290 --> 00:02:39.070
this desk,

00:02:39.070 --> 00:02:39.930
it's would pass.

00:02:39.930 --> 00:02:42.710
But if you want to change this number to something else,

00:02:42.710 --> 00:02:44.450
the test case would fail.

00:02:44.450 --> 00:02:49.950
Let me save the file and quickly run it for you.

00:02:49.950 --> 00:02:55.340
We're going to see an assertion ever.

00:02:55.340 --> 00:02:59.920
That's a is expected countess for,

00:02:59.920 --> 00:03:02.150
But it's three.

00:03:02.150 --> 00:03:04.940
And in fact,

00:03:04.940 --> 00:03:06.710
if you're new to react to streams,

00:03:06.710 --> 00:03:14.210
then this is the best way to experiment with it is to write a quick Janet Dsk's and play

00:03:14.210 --> 00:03:15.010
with the stream.

00:03:15.010 --> 00:03:19.020
So we do have an assertion.

00:03:19.020 --> 00:03:22.350
Error expected.

00:03:22.350 --> 00:03:24.350
Count is four,

00:03:24.350 --> 00:03:27.210
but is three.

00:03:27.210 --> 00:03:32.350
Let me undo that.

00:03:32.350 --> 00:03:39.250
You can also create an exception and see if exception has indeed occurred.

00:03:39.250 --> 00:03:42.950
You just have to use another method for that.

00:03:42.950 --> 00:03:47.240
The other two test cases,

00:03:47.240 --> 00:03:47.650
though,

00:03:47.650 --> 00:03:51.580
would correspond to couple off controller methods we have in here.

00:03:51.580 --> 00:04:01.150
I'm trying to test both post as well as get product methods in gets off post.

00:04:01.150 --> 00:04:07.070
We're sending correct as a perimeter from the client and preventing Lord Jason as part of

00:04:07.070 --> 00:04:08.050
the request body,

00:04:08.050 --> 00:04:11.050
which will become water and equal and product.

00:04:11.050 --> 00:04:15.880
And then we're trying to call the same matter of this repository in order to save the

00:04:15.880 --> 00:04:16.590
object.

00:04:16.590 --> 00:04:22.350
So we're trying to simulate the same behavior from inside out desk is as well.

00:04:22.350 --> 00:04:29.350
I could see that the product object and I'm using the standard market or library in order

00:04:29.350 --> 00:04:36.650
to tell what should be returned if this method off repository has been called,

00:04:36.650 --> 00:04:39.250
but before that,

00:04:39.250 --> 00:04:44.690
I have to have a mark object off repository and I've done that with the sanitation.

00:04:44.690 --> 00:04:52.780
McBean and I can now use this mark repository and specify what should happen in a

00:04:52.780 --> 00:04:54.150
particular method is called.

00:04:54.150 --> 00:04:59.750
So if we call the same matter off repository with this object,

00:04:59.750 --> 00:05:04.850
then we want to return a moral off product,

00:05:04.850 --> 00:05:07.350
which is the same object.

00:05:07.350 --> 00:05:11.080
If you go to the same mattered.

00:05:11.080 --> 00:05:15.930
That's what it would written.

00:05:15.930 --> 00:05:28.270
It's going to return a Mona object and in the next line I'm trying to use the wept,

00:05:28.270 --> 00:05:33.010
lined the desk line to be specific and sending a post request.

00:05:33.010 --> 00:05:37.850
With this following you are a pattern with this instruction.

00:05:37.850 --> 00:05:38.270
Basically,

00:05:38.270 --> 00:05:42.790
we're trying toe similar it sending Jason as part of the request body.

00:05:42.790 --> 00:05:45.350
So we said the content type to Jason,

00:05:45.350 --> 00:05:53.010
but it would be the just in the presentation off this product and finally with the call to

00:05:53.010 --> 00:05:53.850
this method,

00:05:53.850 --> 00:05:57.880
I'm trying to send the request and then I'm checking,

00:05:57.880 --> 00:06:06.250
deceive the status corresponds to to except successful any extra devastate.

00:06:06.250 --> 00:06:10.450
Er's have stopped to would correspond to a success message.

00:06:10.450 --> 00:06:15.550
And so this death scares would pass.

00:06:15.550 --> 00:06:25.350
I've old around the desk is and it's working can actually see it all here,

00:06:25.350 --> 00:06:34.010
the next test cases to retrieve a specific product.

00:06:34.010 --> 00:06:41.590
So again we have product object created and that I'm trying to use the depository mark

00:06:41.590 --> 00:06:50.090
object in order to set a specific response for a particular called him at the and again,

00:06:50.090 --> 00:06:55.350
I'm using WEP lined in order to send and get request.

00:06:55.350 --> 00:06:58.050
But this following you are a pattern.

00:06:58.050 --> 00:07:03.580
We're sending path variable as one and just off the stuff.

00:07:03.580 --> 00:07:05.550
It's pretty straightforward.

00:07:05.550 --> 00:07:12.950
So this method is going to respond back with the product that we want to retrieve,

00:07:12.950 --> 00:07:25.300
which will be represented in the form of Jason and from the response body.

00:07:25.300 --> 00:07:34.350
I'm trying to see if we indeed have the right object which got retrieved.

00:07:34.350 --> 00:07:42.340
So that's how you dust your reactor applications over.

00:07:42.340 --> 00:07:43.200
It makes sense

