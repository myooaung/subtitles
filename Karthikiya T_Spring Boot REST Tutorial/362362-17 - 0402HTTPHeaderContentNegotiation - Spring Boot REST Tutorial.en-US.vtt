WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.570
Okay,

00:00:00.570 --> 00:00:02.770
let's first explore Hester deeply.

00:00:02.770 --> 00:00:04.750
Head away off country negotiation.

00:00:04.750 --> 00:00:10.850
What I have here is our crowd FBI that were developed previously.

00:00:10.850 --> 00:00:18.170
The first thing that we need to do is to go to bomb the XML file and add this dependency by

00:00:18.170 --> 00:00:18.560
the fall.

00:00:18.560 --> 00:00:22.920
When you create a springboard project with starter Web dependency,

00:00:22.920 --> 00:00:24.950
it comes with Jason Support.

00:00:24.950 --> 00:00:29.700
But if you want to be able to represent your data or the resource in XML format,

00:00:29.700 --> 00:00:33.250
then you have to add this additional dependency.

00:00:33.250 --> 00:00:36.350
Other worst things may not work as expected.

00:00:36.350 --> 00:00:38.620
Once we had this dependency,

00:00:38.620 --> 00:00:46.860
do make sure the job did the project so that those libraries would be present in your class

00:00:46.860 --> 00:00:47.280
part.

00:00:47.280 --> 00:00:57.530
Let's run our application and see how we can configure yesterday beheaders and specify the

00:00:57.530 --> 00:00:59.150
except property.

00:00:59.150 --> 00:01:02.150
How it again go to postman,

00:01:02.150 --> 00:01:06.200
the missing the request and by default,

00:01:06.200 --> 00:01:08.580
it's going to respond back with Jason Data.

00:01:08.580 --> 00:01:12.550
But let's say that I wanted to have this next symbol format.

00:01:12.550 --> 00:01:14.880
I go to head a stab and out,

00:01:14.880 --> 00:01:16.250
specify the property,

00:01:16.250 --> 00:01:20.370
except you already have it populated.

00:01:20.370 --> 00:01:23.920
Just click it and you were specify the content type.

00:01:23.920 --> 00:01:24.750
In this case,

00:01:24.750 --> 00:01:29.150
that's application and if you notice they're a lot off options in here,

00:01:29.150 --> 00:01:30.850
you can choose one off them.

00:01:30.850 --> 00:01:32.250
But of course,

00:01:32.250 --> 00:01:34.160
your Rabia has to support it as well.

00:01:34.160 --> 00:01:36.120
In my case,

00:01:36.120 --> 00:01:37.770
I'm going to change this to XML.

00:01:37.770 --> 00:01:39.540
And now,

00:01:39.540 --> 00:01:40.350
if a fire,

00:01:40.350 --> 00:01:41.850
the request,

00:01:41.850 --> 00:01:45.490
everything is shown in XML format.

00:01:45.490 --> 00:01:50.960
So what has happened behind the scenes is when I send this request,

00:01:50.960 --> 00:01:54.570
spring is going to take a look at STP headers,

00:01:54.570 --> 00:01:56.580
especially this property in here.

00:01:56.580 --> 00:02:00.990
It can then figure out the expected media type that the client can,

00:02:00.990 --> 00:02:02.300
except in this case,

00:02:02.300 --> 00:02:05.840
it's application slash example cantons.

00:02:05.840 --> 00:02:09.950
We've added this library has part of from the XML file.

00:02:09.950 --> 00:02:14.900
We do have an XML can water that can convert our job,

00:02:14.900 --> 00:02:20.790
object into a bunch of facsimil tags and using that converter,

00:02:20.790 --> 00:02:23.650
whatever we're trying to respond back in here.

00:02:23.650 --> 00:02:31.700
I'll rather here would be converted and represented in XML format.

00:02:31.700 --> 00:02:33.650
And that's what we're seeing in here.

00:02:33.650 --> 00:02:36.580
And from this point on,

00:02:36.580 --> 00:02:38.410
for all the request,

00:02:38.410 --> 00:02:41.510
the content or the responsibility present,

00:02:41.510 --> 00:02:43.470
that in XML format

