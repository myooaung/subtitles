WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.295
Hello everyone. Welcome back.

00:00:02.295 --> 00:00:06.150
So now we're going to create a simple example which holds,

00:00:06.150 --> 00:00:08.280
which contains all the data types,

00:00:08.280 --> 00:00:11.710
boxing and also unboxing.

00:00:12.050 --> 00:00:22.725
So create a new class here until n and create a new class boxing and unboxing example.

00:00:22.725 --> 00:00:25.965
Create a main method. So the first thing,

00:00:25.965 --> 00:00:28.755
let's create a primitive datatype.

00:00:28.755 --> 00:00:35.385
So we know there are different types of paradigms, right? Correct.

00:00:35.385 --> 00:00:39.915
So let's try to create each one of them.

00:00:39.915 --> 00:00:48.770
For the first one byte might be 10.

00:00:50.370 --> 00:00:53.905
The next one, the next level is shot.

00:00:53.905 --> 00:00:55.570
Shot S is equal to,

00:00:55.570 --> 00:00:56.935
I'm giving the first step,

00:00:56.935 --> 00:00:59.875
each and every primitive it as a variable name.

00:00:59.875 --> 00:01:02.090
So S is equal to,

00:01:03.420 --> 00:01:10.160
and I'm going to have an integer next int I is equal to 14.

00:01:16.200 --> 00:01:21.890
And then the next one is long.

00:01:31.140 --> 00:01:34.975
Second one and system is not responding properly.

00:01:34.975 --> 00:01:43.855
So we can use long, risky.

00:01:43.855 --> 00:01:46.585
And then we can use float.

00:01:46.585 --> 00:01:51.055
F is equal to 0.5,

00:01:51.055 --> 00:01:53.620
which means I'm mentioning the float datatype.

00:01:53.620 --> 00:01:56.230
And after float we can use double,

00:01:56.230 --> 00:02:04.375
is a 60.8, something like that. And D.

00:02:04.375 --> 00:02:06.475
And that is a two left.

00:02:06.475 --> 00:02:10.085
The character see is equalled.

00:02:10.085 --> 00:02:13.625
Candidates should be in single quotes, right?

00:02:13.625 --> 00:02:17.120
And what else? We have a boolean, right?

00:02:17.120 --> 00:02:22.970
So Boolean either true or false, I'm going to use trow.

00:02:22.970 --> 00:02:23.540
Yeah.

00:02:23.540 --> 00:02:26.330
So basically what we're trying to do in here,

00:02:26.330 --> 00:02:27.500
so we have a Boolean type.

00:02:27.500 --> 00:02:30.200
So Bill, I already have a b here.

00:02:30.200 --> 00:02:34.550
So we have all types of primitive types.

00:02:34.550 --> 00:02:40.710
So first thing I'm going to convert everything into wrapper class. I'm in auto-boxing.

00:02:42.100 --> 00:02:45.770
So the way we can do that for now, what I wanna do,

00:02:45.770 --> 00:02:49.415
I'm going to copy it and I think base rate.

00:02:49.415 --> 00:02:53.345
So in terms of byte,

00:02:53.345 --> 00:02:56.765
we are going to use byte and chart remedies, just simple thing.

00:02:56.765 --> 00:02:59.630
And here, interrupt interior values into

00:02:59.630 --> 00:03:03.395
here because these are all relevant to that type.

00:03:03.395 --> 00:03:05.750
So long.

00:03:05.750 --> 00:03:08.930
And here float and double.

00:03:08.930 --> 00:03:12.605
And this is character.

00:03:12.605 --> 00:03:17.870
And this is Boolean. Got it.

00:03:17.870 --> 00:03:19.745
So we're going to rename it.

00:03:19.745 --> 00:03:23.855
So this is what you content byte object,

00:03:23.855 --> 00:03:27.810
OBJ, OBJ and everything.

00:03:27.880 --> 00:03:31.995
Obj, it's integer object.

00:03:31.995 --> 00:03:35.425
And this is one object,

00:03:35.425 --> 00:03:39.940
float object, object, cout object,

00:03:39.940 --> 00:03:42.235
and this is Boolean object. Okay?

00:03:42.235 --> 00:03:47.245
So now what we can do, we can simply print the value to see the data, right?

00:03:47.245 --> 00:03:49.615
Okay, Got it. So here,

00:03:49.615 --> 00:03:54.175
what is there here? Okay?

00:03:54.175 --> 00:03:56.140
So now we have a variable reference.

00:03:56.140 --> 00:03:57.655
Now I undo us in the data.

00:03:57.655 --> 00:04:07.130
So here B is long and this is Flow.

00:04:07.980 --> 00:04:11.634
And here I know you said WSU.

00:04:11.634 --> 00:04:16.870
And here I need to use okay, and Boolean.

00:04:16.870 --> 00:04:20.830
See, these are the variable i, boxing it here.

00:04:20.830 --> 00:04:24.790
These are primitive. I'm, I'm converting them into a wrapper class.

00:04:24.790 --> 00:04:26.710
Now let's print that after class.

00:04:26.710 --> 00:04:30.730
So for now this is going to be print the objects,

00:04:30.730 --> 00:04:32.440
object mental upper classes.

00:04:32.440 --> 00:04:42.430
Okay? And let me eight times 23458,

00:04:42.430 --> 00:04:46.195
okay, so the first one is byte object.

00:04:46.195 --> 00:04:48.490
So I'm going to pass it for now.

00:04:48.490 --> 00:04:51.130
And then I'm going to add everything because it might take a,

00:04:51.130 --> 00:04:54.560
take a while, so I'm going to type it and then resume it back.

00:04:55.260 --> 00:05:00.575
So I just print all the convertor data here.

00:05:00.575 --> 00:05:04.385
So here we have a tapes and I'm printing all of them, right?

00:05:04.385 --> 00:05:07.800
So let me run this and show you what is the outcome.

00:05:08.020 --> 00:05:14.210
So we got all the data as objects now.

00:05:14.210 --> 00:05:17.390
So from primitive to wrapper class,

00:05:17.390 --> 00:05:19.100
we have done for all the derivatives.

00:05:19.100 --> 00:05:20.285
So now what we're going to do,

00:05:20.285 --> 00:05:22.250
so now we have the Boolean I'm in.

00:05:22.250 --> 00:05:24.110
No would've been said that wrapper classes are available.

00:05:24.110 --> 00:05:25.880
So now we're going to reverse operation.

00:05:25.880 --> 00:05:29.705
I'm going to convert all this into a primitive type.

00:05:29.705 --> 00:05:33.240
We're doing it. We will do that in the next example.
