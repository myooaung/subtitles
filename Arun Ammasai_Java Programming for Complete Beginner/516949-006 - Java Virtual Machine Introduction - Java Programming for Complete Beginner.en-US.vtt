WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.745
Hello everyone. Welcome back.

00:00:02.745 --> 00:00:07.770
So we know what are the topics that you are going to discuss, right?

00:00:07.770 --> 00:00:11.350
So at the host 1, Introduction to Java.

00:00:11.900 --> 00:00:14.100
Okay, so Introduction to Java,

00:00:14.100 --> 00:00:15.795
that means I'm going to talk about,

00:00:15.795 --> 00:00:19.455
so the small history about Java.

00:00:19.455 --> 00:00:20.250
Okay?

00:00:20.250 --> 00:00:27.025
So basically java has been invented by Sun Microsystems and the year of 1991.

00:00:27.025 --> 00:00:31.730
Okay, it's been more than two decades, right?

00:00:31.730 --> 00:00:35.435
So, and it has been invented by two important key numbers.

00:00:35.435 --> 00:00:40.070
So one is James Gosling and batting naught.

00:00:40.070 --> 00:00:44.430
And so we used to call James Gosling as a father of Java, right?

00:00:44.710 --> 00:00:49.340
And the way it has been module,

00:00:49.340 --> 00:00:54.800
it's in a simple programming language, right?

00:00:54.800 --> 00:00:58.100
Basically this base object.

00:00:58.100 --> 00:01:04.595
So you cannot call them as the object based programming because Java is not object-based.

00:01:04.595 --> 00:01:07.910
It is object oriented language.

00:01:07.910 --> 00:01:09.065
Okay?

00:01:09.065 --> 00:01:12.875
Very simple programming language which really easy to learn,

00:01:12.875 --> 00:01:17.645
but maybe the syntax and the naming conventions,

00:01:17.645 --> 00:01:19.460
it is little bit different.

00:01:19.460 --> 00:01:25.440
And because each and every thing has its own rules and conditions.

00:01:26.770 --> 00:01:29.360
Okay, So the first thing,

00:01:29.360 --> 00:01:32.015
so under the basics,

00:01:32.015 --> 00:01:38.840
we should know something about called a JVM java virtual machine.

00:01:38.840 --> 00:01:40.865
Okay, so what is a virtual machine?

00:01:40.865 --> 00:01:43.880
Because I installed JDK.

00:01:43.880 --> 00:01:45.470
So when I install JDK,

00:01:45.470 --> 00:01:48.320
I got GRE along with my genetic game.

00:01:48.320 --> 00:01:50.975
But why do I need a JVM?

00:01:50.975 --> 00:01:54.140
So that always comes into our mind.

00:01:54.140 --> 00:01:55.970
So this virtual machine,

00:01:55.970 --> 00:01:57.740
what it can do, okay,

00:01:57.740 --> 00:01:59.435
so writing a Java program,

00:01:59.435 --> 00:02:00.650
anyone can do that.

00:02:00.650 --> 00:02:02.180
I can do that. You can do that.

00:02:02.180 --> 00:02:04.535
Are anybody can do that, right?

00:02:04.535 --> 00:02:06.935
But who's going to execute the code?

00:02:06.935 --> 00:02:08.360
Who's going to compile the code?

00:02:08.360 --> 00:02:10.970
Unlike other languages, whenever you write

00:02:10.970 --> 00:02:14.195
a Java program unit to compile your program first,

00:02:14.195 --> 00:02:16.910
the first task, if you write a Hello World program,

00:02:16.910 --> 00:02:18.185
you need to compile.

00:02:18.185 --> 00:02:20.585
That is the first stage of programming.

00:02:20.585 --> 00:02:25.744
So you can compel a chord with the help of Java compiler,

00:02:25.744 --> 00:02:28.325
which is nothing but Java C,

00:02:28.325 --> 00:02:33.200
which is included in the Java Development Kit.

00:02:33.200 --> 00:02:35.360
All right, that's what I mentioned, that JDK,

00:02:35.360 --> 00:02:38.660
which come combination of JRE and a JDK.

00:02:38.660 --> 00:02:44.480
Jdk contains the compiler and it has some other development tools also,

00:02:44.480 --> 00:02:47.405
we will talk about it later.

00:02:47.405 --> 00:02:52.100
Okay, So what basically the DBM is doing because demons not going

00:02:52.100 --> 00:02:57.770
to do any computation part are something else, right?

00:02:57.770 --> 00:03:00.500
Because competition than Java C. So basically

00:03:00.500 --> 00:03:03.545
what will happen when Java compiler compile your code?

00:03:03.545 --> 00:03:06.890
It has been converted into a different kind of a model.

00:03:06.890 --> 00:03:10.220
So which is called as a bytecode,

00:03:10.220 --> 00:03:13.100
can communicate to the computer.

00:03:13.100 --> 00:03:15.905
Know we don't know how to communicate to the computer,

00:03:15.905 --> 00:03:18.875
because computer can communicate through the bytecode.

00:03:18.875 --> 00:03:20.420
How humans can communicate.

00:03:20.420 --> 00:03:23.060
We'll talk to each other, right?

00:03:23.060 --> 00:03:24.860
We'll talk to each other to understand

00:03:24.860 --> 00:03:28.020
what they're trying to say are what we are trying to say.

00:03:28.210 --> 00:03:31.445
How animals can communicate.

00:03:31.445 --> 00:03:34.175
They have their own language.

00:03:34.175 --> 00:03:36.590
Can animal communicative human?

00:03:36.590 --> 00:03:40.955
Our acumen can communicate to the animals, which is not possible.

00:03:40.955 --> 00:03:45.230
So in case if you want to finish something in-between,

00:03:45.230 --> 00:03:49.560
who can convert what they're saying?

00:03:49.720 --> 00:03:53.300
One word without humans, with animals,

00:03:53.300 --> 00:03:56.615
Let's compare a person who's talking in English,

00:03:56.615 --> 00:03:59.660
another person who's talking in Spanish.

00:03:59.660 --> 00:04:02.960
They both don't know how to communicate each other in order to

00:04:02.960 --> 00:04:06.695
vote communicate they need something in between.

00:04:06.695 --> 00:04:13.640
So that is called as a interface or interpreter or translator, right?

00:04:13.640 --> 00:04:15.980
So JVM, It's like a translator.

00:04:15.980 --> 00:04:19.489
It will understand the bytecode.

00:04:19.489 --> 00:04:22.670
So the compiler, which will create class file,

00:04:22.670 --> 00:04:26.855
which holds the bytecode, our JVM.

00:04:26.855 --> 00:04:29.435
We'll take the class file,

00:04:29.435 --> 00:04:30.650
which means the bytecode,

00:04:30.650 --> 00:04:33.290
and it will generate the output.

00:04:33.290 --> 00:04:34.400
Right?

00:04:34.400 --> 00:04:36.545
So that's what the next one, the JVM,

00:04:36.545 --> 00:04:41.255
which will execute the bytecode generated by the compiler.

00:04:41.255 --> 00:04:45.980
And we'll run newer cor, correct.

00:04:45.980 --> 00:04:52.470
So that is all about which one.

00:04:52.470 --> 00:04:55.640
And once again, that is all about the Java Virtual Machine.

00:04:55.640 --> 00:05:00.950
Okay, so now we know how the JVM is working, right?

00:05:00.950 --> 00:05:03.985
So now we need to know whenever you're talking about Java,

00:05:03.985 --> 00:05:06.740
the first thing that comes into your mind, platform independent, okay,

00:05:06.740 --> 00:05:10.500
so we're going to talk over the platform independent in the next video.
