WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:02.130
Hello everyone.

00:00:02.130 --> 00:00:03.375
Welcome back.

00:00:03.375 --> 00:00:06.059
So let's talk about variables.

00:00:06.059 --> 00:00:08.475
So first of all, what is a variable?

00:00:08.475 --> 00:00:10.515
So we're going to what is variable?

00:00:10.515 --> 00:00:14.460
So a variable is a container which will hold the value.

00:00:14.460 --> 00:00:15.750
Correct.

00:00:15.750 --> 00:00:19.545
So basically you have a number, ten.

00:00:19.545 --> 00:00:24.180
I want to store that particular number into a variable.

00:00:24.180 --> 00:00:24.945
Okay?

00:00:24.945 --> 00:00:27.255
So everytime you don't have to look for a 10,

00:00:27.255 --> 00:00:29.280
you can directly access that variable,

00:00:29.280 --> 00:00:32.890
which will give you the data which is holding.

00:00:32.890 --> 00:00:34.025
Alright?

00:00:34.025 --> 00:00:39.080
And variable will be assigned to a data-type.

00:00:39.080 --> 00:00:40.010
Alright?

00:00:40.010 --> 00:00:42.770
So ten is a different kind of data.

00:00:42.770 --> 00:00:46.565
Are 10.5 is a different kind of a data, true, false.

00:00:46.565 --> 00:00:51.215
It's a different kind of a data and name is a string that is a different kind of data.

00:00:51.215 --> 00:00:55.085
So each and every variable holds a different kind of a datatype.

00:00:55.085 --> 00:00:57.320
Okay? So for example,

00:00:57.320 --> 00:00:58.715
if you're using 10,

00:00:58.715 --> 00:00:59.900
it's an integer, right?

00:00:59.900 --> 00:01:01.415
10.5 is a decimal.

00:01:01.415 --> 00:01:02.945
Integer, cannot use a decimal,

00:01:02.945 --> 00:01:07.400
so we can have a different kind of variable data type for that.

00:01:07.400 --> 00:01:12.785
And it is simply a location in your,

00:01:12.785 --> 00:01:14.435
in your Java memory.

00:01:14.435 --> 00:01:18.755
So if you have a value called our index is equal to 10,

00:01:18.755 --> 00:01:22.055
that particular memory location.

00:01:22.055 --> 00:01:27.275
So you can access the memory location through that you can replay them value.

00:01:27.275 --> 00:01:30.425
So what types of variables that are available?

00:01:30.425 --> 00:01:32.165
Okay, so there are three types.

00:01:32.165 --> 00:01:33.635
The first one is a local,

00:01:33.635 --> 00:01:35.570
and second one is instance,

00:01:35.570 --> 00:01:38.670
and third is static.

00:01:39.550 --> 00:01:41.105
Okay?

00:01:41.105 --> 00:01:46.955
So let me show you a simple diagram and what the variable looks like.

00:01:46.955 --> 00:01:50.345
For example, here I have int x is equal to 10.

00:01:50.345 --> 00:01:53.705
So this ten stored in a memory location,

00:01:53.705 --> 00:01:58.460
and that is reserved for that particular variable.

00:01:58.460 --> 00:02:01.415
And you need to understand one more thing.

00:02:01.415 --> 00:02:04.235
Why the name is variable.

00:02:04.235 --> 00:02:06.905
Okay, the reason is very less able.

00:02:06.905 --> 00:02:09.200
So once you declare a variable,

00:02:09.200 --> 00:02:12.725
it can be changed at any point of time.

00:02:12.725 --> 00:02:15.650
So that is why we call it that variable.

00:02:15.650 --> 00:02:19.595
So x, x is equal to 10.

00:02:19.595 --> 00:02:21.605
So x is equal to 10.

00:02:21.605 --> 00:02:23.750
Eight is a variable which holds that

00:02:23.750 --> 00:02:27.875
it might update it to 20 or 25 at a later point of time.

00:02:27.875 --> 00:02:32.160
So that is called variables.

00:02:34.150 --> 00:02:38.135
So as I mentioned, there are three types of variables.

00:02:38.135 --> 00:02:41.170
So the first one, local variable.

00:02:41.170 --> 00:02:43.375
So first of all,

00:02:43.375 --> 00:02:45.580
if you want to understand what is local variable,

00:02:45.580 --> 00:02:48.655
you need to know what is local character.

00:02:48.655 --> 00:02:50.035
So take an example.

00:02:50.035 --> 00:02:54.085
We discussed that would HelloWorld program, correct.

00:02:54.085 --> 00:02:58.135
In the Hello World program you have something called public static, void main.

00:02:58.135 --> 00:03:03.380
So that is a method helloworld class. Let me show you that.

00:03:04.380 --> 00:03:09.415
So this is your class, correct?

00:03:09.415 --> 00:03:15.370
And this year and this is the local to this particular matter.

00:03:15.370 --> 00:03:19.735
So if you're, if you define any variables inside the method,

00:03:19.735 --> 00:03:22.510
that is called a local variable.

00:03:22.510 --> 00:03:27.160
Okay? So if somebody is asking what is a local variable, you can close your eyes,

00:03:27.160 --> 00:03:28.210
you can tell them, is,

00:03:28.210 --> 00:03:33.350
is there a variable declared inside a method that is local variable?

00:03:33.540 --> 00:03:37.525
Correct, because this particular class,

00:03:37.525 --> 00:03:39.865
the helloworld class, is that right?

00:03:39.865 --> 00:03:43.915
This particular class doesn't have any idea what is that inside my mother,

00:03:43.915 --> 00:03:48.430
because for example, if you have a home okay.

00:03:48.430 --> 00:03:49.945
You have a multiple rooms, right?

00:03:49.945 --> 00:03:54.610
For example, you and your brother and your sister each individual rooms.

00:03:54.610 --> 00:03:55.360
Okay.

00:03:55.360 --> 00:03:59.800
So you don't know what is going on inside the other room because that is local to

00:03:59.800 --> 00:04:02.380
them and nobody else know what you are

00:04:02.380 --> 00:04:05.990
doing inside your room because that is a local to your method.

00:04:07.060 --> 00:04:10.175
Even though everyone is the same,

00:04:10.175 --> 00:04:13.250
you are still in a separate room,

00:04:13.250 --> 00:04:14.660
whatever you're doing inside the room,

00:04:14.660 --> 00:04:16.565
that is called a local.

00:04:16.565 --> 00:04:18.230
Correct?

00:04:18.230 --> 00:04:20.610
It's the next one.

00:04:23.140 --> 00:04:24.635
Right?

00:04:24.635 --> 00:04:28.130
So variable declared inside a method.

00:04:28.130 --> 00:04:30.155
That's what I'm trying to explain so far.

00:04:30.155 --> 00:04:33.260
So it can be used.

00:04:33.260 --> 00:04:35.045
One lay inside the matter.

00:04:35.045 --> 00:04:37.085
I mean, in your room alone.

00:04:37.085 --> 00:04:41.420
And as I said, your home does not aware what you're doing in your room.

00:04:41.420 --> 00:04:47.225
That means class is not our what are any variable inside matter?

00:04:47.225 --> 00:04:50.765
Another important thing, if it is a local variable,

00:04:50.765 --> 00:04:53.360
you cannot define them as a static.

00:04:53.360 --> 00:04:57.755
Static is a different kind of a keyword which we're using for the different kind of axis.

00:04:57.755 --> 00:05:02.190
We'll talk about that. So you cannot use static local variable.
