WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.025
Hello everyone, welcome back.

00:00:02.025 --> 00:00:05.490
In this example, we're going to talk about what are the methods are available.

00:00:05.490 --> 00:00:09.390
There are tons and tons of metals are available inside the string class,

00:00:09.390 --> 00:00:12.630
but we are not going to export all of them.

00:00:12.630 --> 00:00:17.175
I'm going to give you a very simple method.

00:00:17.175 --> 00:00:18.690
So far you can understand so 13,

00:00:18.690 --> 00:00:19.890
familiar with the basics,

00:00:19.890 --> 00:00:22.815
then you can go and explore yourself, right?

00:00:22.815 --> 00:00:25.050
So I'm going to create a new class here.

00:00:25.050 --> 00:00:29.955
So string method example, string methods.

00:00:29.955 --> 00:00:36.640
And that's example mean here.

00:00:37.910 --> 00:00:40.560
Okay, so now I have a string here,

00:00:40.560 --> 00:00:49.145
a string SDR one is equal to our basics.

00:00:49.145 --> 00:00:50.615
Okay?

00:00:50.615 --> 00:00:54.150
So now I want to know what are the,

00:00:54.850 --> 00:00:59.900
what is the length of this particular string.

00:00:59.900 --> 00:01:02.105
So in order to find that,

00:01:02.105 --> 00:01:03.515
so what you can do it,

00:01:03.515 --> 00:01:07.160
you can simply use SDR dot,

00:01:07.160 --> 00:01:10.085
SDR one, sorry, SUR1 dot.

00:01:10.085 --> 00:01:16.530
You can use the method called lent, this STR 1.

00:01:16.960 --> 00:01:21.660
So STAT1 dot you can use the linear momentum.

00:01:22.300 --> 00:01:26.900
So Linda method, which is going to be returning an integer as outcomes.

00:01:26.900 --> 00:01:32.100
So what you can do, you can receive using int length.

00:01:33.250 --> 00:01:36.155
So if you want it under purlins,

00:01:36.155 --> 00:01:45.320
you can simply print the length credit.

00:01:45.320 --> 00:01:47.270
So if you're under code right now,

00:01:47.270 --> 00:01:51.260
so it will tell you what length of this particular Java basics.

00:01:51.260 --> 00:01:54.020
So if it is a simple one, it's a simple one.

00:01:54.020 --> 00:01:59.420
So it's easy for us to identify because for and this is six, it is.

00:01:59.420 --> 00:02:01.475
And 11.

00:02:01.475 --> 00:02:03.020
Okay?

00:02:03.020 --> 00:02:05.555
But think about the paragraph.

00:02:05.555 --> 00:02:10.355
So it is not easy to calculate the length of that particular paragraph.

00:02:10.355 --> 00:02:14.420
So what we can do, we can simply use the linear momentum.

00:02:14.420 --> 00:02:15.125
Okay?

00:02:15.125 --> 00:02:16.640
So I have a string, right?

00:02:16.640 --> 00:02:20.270
So I want to convert the entire thing into a capitalist or case.

00:02:20.270 --> 00:02:21.530
So how we can do that?

00:02:21.530 --> 00:02:25.490
So you can see here I want,

00:02:25.490 --> 00:02:35.210
I'm going to guess DR1 to uppercase, sphere one, uppercase.

00:02:35.210 --> 00:02:37.865
So what will happen now?

00:02:37.865 --> 00:02:45.320
When you run the code, your Java basics becomes capital letter Java basics,

00:02:45.320 --> 00:02:47.615
but the original value will not change.

00:02:47.615 --> 00:02:51.300
Okay, when you print the FTIR on, again here,

00:02:53.980 --> 00:03:02.325
SGR one, you can still see the same data because I'm just transforming something.

00:03:02.325 --> 00:03:03.755
I'm, I'm just displaying that cell.

00:03:03.755 --> 00:03:06.680
I'm not updating my Boolean value.

00:03:06.680 --> 00:03:07.520
Okay?

00:03:07.520 --> 00:03:09.740
So if we want to update the original value,

00:03:09.740 --> 00:03:12.290
STR 1 is equal to,

00:03:12.290 --> 00:03:13.580
we know what are the exiting, right?

00:03:13.580 --> 00:03:18.245
So the hour basis demo, basics demo.

00:03:18.245 --> 00:03:21.590
So now we modified the data, correct?

00:03:21.590 --> 00:03:23.435
Now, if you run the code,

00:03:23.435 --> 00:03:24.710
you should be able to see 11,

00:03:24.710 --> 00:03:27.050
the basics and the data has been modified.

00:03:27.050 --> 00:03:29.390
For now, this is my new data.

00:03:29.390 --> 00:03:32.375
All right, So that's one more thing.

00:03:32.375 --> 00:03:34.295
I have two different words,

00:03:34.295 --> 00:03:37.325
so I want to join both of them.

00:03:37.325 --> 00:03:39.110
Join me. It's concatenating.

00:03:39.110 --> 00:03:39.800
Correct?

00:03:39.800 --> 00:03:41.315
So how we can do that?

00:03:41.315 --> 00:03:44.765
For example, I have a string, yes,

00:03:44.765 --> 00:03:50.120
R2 is equal to hello.

00:03:50.120 --> 00:03:53.945
And I have SDR tree,

00:03:53.945 --> 00:03:58.220
which is nothing but hello.

00:03:58.220 --> 00:04:01.010
Instead of hello, I have a word here.

00:04:01.010 --> 00:04:02.390
Got it.

00:04:02.390 --> 00:04:05.330
So now I want to convert both of them into a single string.

00:04:05.330 --> 00:04:08.405
Basically, I want to concatenate these two.

00:04:08.405 --> 00:04:09.950
So all we can do that.

00:04:09.950 --> 00:04:13.370
So concatenating two data,

00:04:13.370 --> 00:04:17.885
introduce plus symbol are again use can get.

00:04:17.885 --> 00:04:21.030
Okay, So let me show you that.

00:04:23.080 --> 00:04:25.100
So what are the first one?

00:04:25.100 --> 00:04:30.095
Sd are two dot concat matter.

00:04:30.095 --> 00:04:33.680
You can use SDN. You can configure the SDR,

00:04:33.680 --> 00:04:36.260
do STAT3 areas TI-83 to SDR to,

00:04:36.260 --> 00:04:40.190
it's up to you. So save it.

00:04:40.190 --> 00:04:42.480
So let's run it again.

00:04:42.640 --> 00:04:47.660
Now we can see Hello World as a single string,

00:04:47.660 --> 00:04:50.015
but I've added a space here, right?

00:04:50.015 --> 00:04:51.905
So how I can do that?

00:04:51.905 --> 00:04:53.420
Just not possible, right?

00:04:53.420 --> 00:04:57.005
Because there are other ways to concatenation that data.

00:04:57.005 --> 00:04:59.850
So how we can do that?

00:04:59.950 --> 00:05:03.575
Yes, DR, as I mentioned,

00:05:03.575 --> 00:05:10.130
you can use plus also HDR to SDR three.

00:05:10.130 --> 00:05:11.675
Right?

00:05:11.675 --> 00:05:13.895
Now what I can do, I can enter it again.

00:05:13.895 --> 00:05:15.800
Still I can see the same thing.

00:05:15.800 --> 00:05:19.550
So what you can do is you can prove it something else inside it.

00:05:19.550 --> 00:05:22.145
So these two are variables which contains some string.

00:05:22.145 --> 00:05:28.820
So what I'm gonna do, I'm going to create some space with double-quotes.

00:05:28.820 --> 00:05:33.050
So what I'm gonna do, so double-quotes and plus and here spaces.

00:05:33.050 --> 00:05:33.950
So now what happened?

00:05:33.950 --> 00:05:36.650
This is one string contains Hello,

00:05:36.650 --> 00:05:38.840
and this is one motoring contains world,

00:05:38.840 --> 00:05:42.620
and this is one string contains space.

00:05:42.620 --> 00:05:45.725
So now let's take a look at the outcome.

00:05:45.725 --> 00:05:46.940
Now we have a space.

00:05:46.940 --> 00:05:48.995
You might think how I can do that here.

00:05:48.995 --> 00:05:49.760
Okay?

00:05:49.760 --> 00:05:51.635
So the SGR, that concat,

00:05:51.635 --> 00:05:54.890
you can provide a empty space here like this,

00:05:54.890 --> 00:05:57.695
and then dot concat again.

00:05:57.695 --> 00:06:01.560
And then you can probably SDL three, it's up to you.

00:06:03.070 --> 00:06:06.470
Okay? Hello, space, world.

00:06:06.470 --> 00:06:09.035
Okay, so even here,

00:06:09.035 --> 00:06:11.135
you have a lint, right?

00:06:11.135 --> 00:06:14.120
So I want to display before something because I,

00:06:14.120 --> 00:06:16.730
when I, when it comes as 11, I don't know what is that.

00:06:16.730 --> 00:06:20.420
So I want to provide some statement and tell them, okay, this is the length.

00:06:20.420 --> 00:06:21.890
So what I can do here,

00:06:21.890 --> 00:06:23.390
you can do the concatenation.

00:06:23.390 --> 00:06:26.195
So length is an integer, right?

00:06:26.195 --> 00:06:28.490
So double-quotes.

00:06:28.490 --> 00:06:30.635
Now what will happen here?

00:06:30.635 --> 00:06:33.740
That is a string and you are concatenating with the integer.

00:06:33.740 --> 00:06:37.985
Because string, which will accept all kinds of data

00:06:37.985 --> 00:06:43.370
when you're comparing it with the some other data like double,

00:06:43.370 --> 00:06:47.780
our Boolean cat, which will not work. So here.

00:06:47.780 --> 00:06:51.800
So the length is and you can provide.

00:06:51.800 --> 00:06:57.200
So now I have a string here which will tell us lend and the outcome is coming from here.

00:06:57.200 --> 00:06:58.985
So now let's run it again.

00:06:58.985 --> 00:07:01.610
See lent is 11,

00:07:01.610 --> 00:07:04.280
so it is a proper way to do that.

00:07:04.280 --> 00:07:09.780
So in the next example, we are going to upload a few more other methods. Thank you.
