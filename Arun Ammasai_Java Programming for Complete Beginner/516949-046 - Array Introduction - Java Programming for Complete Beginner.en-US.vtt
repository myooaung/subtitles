WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:02.940
Hello everyone, Welcome back.

00:00:02.940 --> 00:00:06.330
So before we are moving to the next control sheet,

00:00:06.330 --> 00:00:09.105
monarchy is nothing but far loop.

00:00:09.105 --> 00:00:11.160
We need to know about some,

00:00:11.160 --> 00:00:15.000
another type of data called arrays, right?

00:00:15.000 --> 00:00:20.160
We don't the integer data type float everything right?

00:00:20.160 --> 00:00:26.370
At the same time, we need to know what is an array and why do we need them.

00:00:26.370 --> 00:00:28.875
So basically whenever you create an integer,

00:00:28.875 --> 00:00:31.125
so int I is equal to 10.

00:00:31.125 --> 00:00:33.015
But in a single variable,

00:00:33.015 --> 00:00:35.565
you can only stood up to one value.

00:00:35.565 --> 00:00:38.830
You cannot store multiple values in a single variable.

00:00:38.830 --> 00:00:41.420
So that is where our ray comes into place.

00:00:41.420 --> 00:00:47.825
Basically, arrays are used to do store multiple values in a single variable.

00:00:47.825 --> 00:00:50.855
For example, if you create a variable called NTA,

00:00:50.855 --> 00:00:54.995
it can hold up to n elements in it.

00:00:54.995 --> 00:01:03.350
So each and every variable contain multiple data in it.

00:01:03.350 --> 00:01:09.500
Okay, so interrupt declaring each and every variable in a separate variable names.

00:01:09.500 --> 00:01:11.465
We can do nothing alone.

00:01:11.465 --> 00:01:14.735
And it is a simple to define an array.

00:01:14.735 --> 00:01:16.850
So if you are creating a variable,

00:01:16.850 --> 00:01:19.490
you need to use the square brackets.

00:01:19.490 --> 00:01:22.535
And so if it is I,

00:01:22.535 --> 00:01:23.855
I is equal to 10.

00:01:23.855 --> 00:01:25.925
I can easily access I.

00:01:25.925 --> 00:01:28.310
But when I have a number of elements,

00:01:28.310 --> 00:01:34.685
you need to access the elements based on the index number grid.

00:01:34.685 --> 00:01:38.885
So we need to know that in a syntax for the array.

00:01:38.885 --> 00:01:41.870
So the first, take a look at the first image,

00:01:41.870 --> 00:01:45.830
string, square brackets, and that variable name.

00:01:45.830 --> 00:01:47.420
That is the preferred way.

00:01:47.420 --> 00:01:50.075
Okay, you need to declare what kind of data type.

00:01:50.075 --> 00:01:52.820
And it is an array type. And the variable name.

00:01:52.820 --> 00:01:56.075
And a second on is the data type and the variable name,

00:01:56.075 --> 00:01:59.465
along with the square brackets which mentioned array.

00:01:59.465 --> 00:02:01.400
So both will work.

00:02:01.400 --> 00:02:05.075
Let us know there is no difference between these two.

00:02:05.075 --> 00:02:07.490
Both of them will walk,

00:02:07.490 --> 00:02:12.080
but preferred ways, the first one.

00:02:12.080 --> 00:02:14.615
So for some examples here,

00:02:14.615 --> 00:02:16.460
just take the first example.

00:02:16.460 --> 00:02:20.960
So string, square brackets and the mouse.

00:02:20.960 --> 00:02:23.675
So which contains multiple,

00:02:23.675 --> 00:02:26.585
multiple values in it,

00:02:26.585 --> 00:02:29.795
but all of them provided inside the curly braces.

00:02:29.795 --> 00:02:34.760
So Berrigan program multiple data, right?

00:02:34.760 --> 00:02:38.480
And also we have another string array which contains a car.

00:02:38.480 --> 00:02:41.525
Not only strings, you can have int also.

00:02:41.525 --> 00:02:43.745
It's not capital I. It's a small lie.

00:02:43.745 --> 00:02:46.040
So interfered in numbers 1, 2,

00:02:46.040 --> 00:02:48.770
3, 4, right? So think about it.

00:02:48.770 --> 00:02:52.310
When you need a thousand number of elements,

00:02:52.310 --> 00:02:57.020
you can uncreate in the a is equal to one into b is equal to two into c is equal to 3.

00:02:57.020 --> 00:02:58.670
We need to arrange our data, right?

00:02:58.670 --> 00:03:02.975
So we can use the array to create a range of our data.

00:03:02.975 --> 00:03:03.965
Okay?

00:03:03.965 --> 00:03:06.575
So the next example I am going to show you

00:03:06.575 --> 00:03:10.340
a simple example for an array and how to access them.

00:03:10.340 --> 00:03:12.150
Thank you.
