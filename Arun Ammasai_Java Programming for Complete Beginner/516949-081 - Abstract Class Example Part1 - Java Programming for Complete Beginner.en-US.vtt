WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.520
Hello everyone, Welcome back.

00:00:02.520 --> 00:00:05.955
So let's jump into an abstract example.

00:00:05.955 --> 00:00:09.225
So I'm going to create a new class here.

00:00:09.225 --> 00:00:12.375
So abstract example.

00:00:12.375 --> 00:00:15.945
So we know the rules and regulations, right?

00:00:15.945 --> 00:00:22.410
So this upset example is my normal class.

00:00:22.410 --> 00:00:24.060
So what is the first condition?

00:00:24.060 --> 00:00:26.940
If you're creating an abstract class?

00:00:26.940 --> 00:00:31.575
It has to be abstract and the class,

00:00:31.575 --> 00:00:33.480
and the class name, right?

00:00:33.480 --> 00:00:36.735
So what I'm gonna do is I'm going to create another class here.

00:00:36.735 --> 00:00:38.250
And it is going to be abstract,

00:00:38.250 --> 00:00:43.265
less abstract Class mission.

00:00:43.265 --> 00:00:45.905
So this is my abstract class.

00:00:45.905 --> 00:00:47.465
And as I mentioned,

00:00:47.465 --> 00:00:49.940
the first rule for abstract.

00:00:49.940 --> 00:00:52.565
The class name must be an abstract.

00:00:52.565 --> 00:00:53.990
For example, I have,

00:00:53.990 --> 00:00:59.870
and it can contain abstract and non abstract or non abstract methods.

00:00:59.870 --> 00:01:03.750
So for example, I'm going to create an abstract method here.

00:01:04.030 --> 00:01:06.719
Abstract.

00:01:08.080 --> 00:01:10.460
But you might say,

00:01:10.460 --> 00:01:11.810
What the hell is that,

00:01:11.810 --> 00:01:13.640
man, so I don't have any implementation.

00:01:13.640 --> 00:01:17.630
Declaration. Abstract means incomplete.

00:01:17.630 --> 00:01:21.245
So when you have abstract method inside,

00:01:21.245 --> 00:01:24.110
in case if you're not provided abstract here,

00:01:24.110 --> 00:01:29.375
it will throw an error because in order to handle the upside the third,

00:01:29.375 --> 00:01:31.925
the class must be abstract.

00:01:31.925 --> 00:01:35.150
So keep those things on the mind and your mind.

00:01:35.150 --> 00:01:38.240
Okay? So how it is going to work,

00:01:38.240 --> 00:01:41.990
as I mentioned, you cannot create an object for this particular class.

00:01:41.990 --> 00:01:44.480
The reason is in case if you're writing,

00:01:44.480 --> 00:01:46.460
for example, i'm, I'm gonna show you something like that.

00:01:46.460 --> 00:01:48.140
Okay, I have a main method here, okay,

00:01:48.140 --> 00:01:54.425
take an example and here I have a method called wide show.

00:01:54.425 --> 00:01:57.900
And I'm going to print something here.

00:01:57.970 --> 00:02:01.985
This is showing METAR, this issue. Okay?

00:02:01.985 --> 00:02:03.470
So in order to call this model,

00:02:03.470 --> 00:02:06.725
I can create object for an abstract example.

00:02:06.725 --> 00:02:11.075
Obj is equal to abstract example.

00:02:11.075 --> 00:02:14.645
And then using that object I can call the show.

00:02:14.645 --> 00:02:16.370
Correct.

00:02:16.370 --> 00:02:19.130
But think about this scenario, I have a mission.

00:02:19.130 --> 00:02:21.620
Let me try to create object formation.

00:02:21.620 --> 00:02:25.550
The reason why we are getting object to access the members and

00:02:25.550 --> 00:02:32.075
the method submission or B d1 is equal to new mission.

00:02:32.075 --> 00:02:33.830
See what happened here.

00:02:33.830 --> 00:02:39.125
Cannot instantiate the type of machine because the machine is abstract.

00:02:39.125 --> 00:02:41.285
You cannot create an object.

00:02:41.285 --> 00:02:44.555
So we know that you cannot create the object for

00:02:44.555 --> 00:02:47.945
an abstract class. So what else we can do?

00:02:47.945 --> 00:02:51.410
So the person or the class who is going

00:02:51.410 --> 00:02:55.070
to provide the implementation for this particular matter.

00:02:55.070 --> 00:02:58.115
They can create objects.

00:02:58.115 --> 00:03:02.765
For example, abstract example is going to provide an implementation for admin.

00:03:02.765 --> 00:03:06.560
So we can create our object for upsert example.

00:03:06.560 --> 00:03:07.730
Okay?

00:03:07.730 --> 00:03:09.875
So the way how we are going to do that.

00:03:09.875 --> 00:03:11.840
So this abstract example,

00:03:11.840 --> 00:03:14.910
I'm going to really dysfunctional.

00:03:15.730 --> 00:03:18.200
So this absurd example,

00:03:18.200 --> 00:03:20.705
it is going to be extents.

00:03:20.705 --> 00:03:25.175
Extents means that we're sharing the property from some other class.

00:03:25.175 --> 00:03:28.110
The moment you extents mission.

00:03:28.300 --> 00:03:32.840
Abstract example is trying to show that the dial,

00:03:32.840 --> 00:03:37.130
which is available in the machine and immediately there is an editor here.

00:03:37.130 --> 00:03:40.350
There are unimplemented methods.

00:03:41.140 --> 00:03:45.365
So there are unimplemented methods available in the machine.

00:03:45.365 --> 00:03:47.060
So in order to use the machine,

00:03:47.060 --> 00:03:49.700
you need to provide the implementation.

00:03:49.700 --> 00:03:51.230
Okay, let's do that.

00:03:51.230 --> 00:03:52.865
Let me create a implementation here.

00:03:52.865 --> 00:03:55.160
So you don't need to prove it absurd keyword

00:03:55.160 --> 00:03:57.875
here because we are going to provide the implementation here.

00:03:57.875 --> 00:04:00.990
And here I'm going to provide us Islam.

00:04:03.610 --> 00:04:09.350
This is add my data set.

00:04:09.350 --> 00:04:14.990
Now what you're gonna do this using object,

00:04:14.990 --> 00:04:20.195
you can call the admin tab assembler that.

00:04:20.195 --> 00:04:22.500
So let me run it.

00:04:23.380 --> 00:04:26.510
This is admin, okay,

00:04:26.510 --> 00:04:29.450
So we understand that.

00:04:29.450 --> 00:04:32.225
So when I have an abstract method,

00:04:32.225 --> 00:04:38.915
I can extend that particular glass or some other class so they can override.

00:04:38.915 --> 00:04:41.765
And we discussed a few other rules also.

00:04:41.765 --> 00:04:45.875
It can contain abstract method and nonoverlap matters.

00:04:45.875 --> 00:04:47.510
So in the next example, we are going to use

00:04:47.510 --> 00:04:51.950
the same example and we are going to be implemented and order matters also.

00:04:51.950 --> 00:04:53.490
Thank you.
