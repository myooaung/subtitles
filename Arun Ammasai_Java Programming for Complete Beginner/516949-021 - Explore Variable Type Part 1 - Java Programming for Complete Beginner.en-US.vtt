WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.380
Hello everyone.

00:00:01.380 --> 00:00:04.800
So far we have been discussing a lot, okay,

00:00:04.800 --> 00:00:09.135
but now is the time for us to do the actual coding.

00:00:09.135 --> 00:00:13.005
Okay? So we discussed the two variables.

00:00:13.005 --> 00:00:16.860
So now we're going to work with variable.

00:00:16.860 --> 00:00:20.460
We are going to create a simple example to explore how to create

00:00:20.460 --> 00:00:24.915
a variables and how to use them.

00:00:24.915 --> 00:00:29.550
So what I'm gonna do is create a new file here.

00:00:29.550 --> 00:00:33.940
Let's name it as M class.

00:00:34.610 --> 00:00:38.010
So now when we talk about the class name,

00:00:38.010 --> 00:00:40.005
so we know the syntax, right?

00:00:40.005 --> 00:00:43.985
How do provide a name?

00:00:43.985 --> 00:00:48.875
So the class name must start with a capital letter.

00:00:48.875 --> 00:00:51.380
So this is going to be very,

00:00:51.380 --> 00:00:57.110
very able exam I'm gonna name

00:00:57.110 --> 00:01:02.105
as a family so they're consecutive word also has to be capitalised and open,

00:01:02.105 --> 00:01:07.955
close brackets, which indicates the starting and end point of this particular class.

00:01:07.955 --> 00:01:10.835
Okay, so let's save the file first.

00:01:10.835 --> 00:01:15.545
So copy the name because your file m has to be same as your class name correctly.

00:01:15.545 --> 00:01:16.790
That is true.

00:01:16.790 --> 00:01:18.305
Let's save it.

00:01:18.305 --> 00:01:21.920
Save variable example that Java.

00:01:21.920 --> 00:01:24.485
So now we are good to go.

00:01:24.485 --> 00:01:29.075
So that is another thing which you need to give it in mind.

00:01:29.075 --> 00:01:34.910
Okay, So I'll provide something like this double slash,

00:01:34.910 --> 00:01:37.490
which will, is a comment.

00:01:37.490 --> 00:01:39.590
Scientists commented that particular line.

00:01:39.590 --> 00:01:40.850
So what will happen,

00:01:40.850 --> 00:01:44.719
this particular line of a code which will not take in for a compilation.

00:01:44.719 --> 00:01:48.035
So basically, whenever uploading some notes,

00:01:48.035 --> 00:01:51.470
if you're developing something and someone else is looking at your program,

00:01:51.470 --> 00:01:54.365
is just kinda giving some hint.

00:01:54.365 --> 00:01:57.170
Are you don't want to compel these particular lines.

00:01:57.170 --> 00:01:59.090
So in those kind of scenarios,

00:01:59.090 --> 00:02:03.140
you can use this common time is a single end and we have a multiple and alpha.

00:02:03.140 --> 00:02:06.575
We'll talk about it for now.

00:02:06.575 --> 00:02:08.660
So what are the things which are going to discuss now?

00:02:08.660 --> 00:02:11.810
First thing, declare a variable,

00:02:11.810 --> 00:02:13.790
because I don't want to miss anything, whatever.

00:02:13.790 --> 00:02:23.405
So for recovered, so declare a variable and use different types.

00:02:23.405 --> 00:02:28.830
And what else We tried naming convention for naming a variable.

00:02:29.560 --> 00:02:31.970
So what have we covered him?

00:02:31.970 --> 00:02:33.530
Open a, PPD and C.

00:02:33.530 --> 00:02:37.985
So, okay, so we discovered a global and local variables, right?

00:02:37.985 --> 00:02:46.175
Types of renewable and then types of variables.

00:02:46.175 --> 00:02:48.665
Okay, got it.

00:02:48.665 --> 00:02:51.770
So we're going to cover are right,

00:02:51.770 --> 00:02:53.645
an example to cover all of them.

00:02:53.645 --> 00:02:56.100
So I'm keeping it to here.

00:02:56.890 --> 00:03:00.590
So whenever you write a Java program,

00:03:00.590 --> 00:03:02.525
the first thing you need to do,

00:03:02.525 --> 00:03:04.535
write a main method.

00:03:04.535 --> 00:03:06.485
So main method, the entry point,

00:03:06.485 --> 00:03:10.310
that is what we discussed when we raised our first Java program.

00:03:10.310 --> 00:03:15.725
So public, static,

00:03:15.725 --> 00:03:24.450
void, main, string, args.

00:03:27.100 --> 00:03:30.320
So here this is a method signed the open,

00:03:30.320 --> 00:03:33.695
close and open curly braces,

00:03:33.695 --> 00:03:38.525
which will indicate the method beginning and end.

00:03:38.525 --> 00:03:40.265
So what we are trying to do,

00:03:40.265 --> 00:03:44.270
we are trying to declare a variable, right?

00:03:44.270 --> 00:03:49.295
So how we can declare a variable? We know the syntax right?

00:03:49.295 --> 00:03:57.470
Datatype. So for now I'm going to use int x is equal to n.

00:03:57.470 --> 00:04:00.890
So this is how you declare a variable.

00:04:00.890 --> 00:04:03.080
So how to print them.

00:04:03.080 --> 00:04:07.610
So print a specific value in a DOS system.

00:04:07.610 --> 00:04:11.930
Dot out, dot, print LN.

00:04:11.930 --> 00:04:14.465
So there are a lot of people make some mistakes.

00:04:14.465 --> 00:04:16.640
They'll provide us a small letter,

00:04:16.640 --> 00:04:18.440
but make sure that is a capital letter.

00:04:18.440 --> 00:04:21.680
So and inside you need to provide the variable name.

00:04:21.680 --> 00:04:23.870
So whenever you need this particular ten,

00:04:23.870 --> 00:04:26.030
you don't have to always call it n here.

00:04:26.030 --> 00:04:29.065
You can usually simply use access reference.

00:04:29.065 --> 00:04:31.310
So whenever you call the x here,

00:04:31.310 --> 00:04:33.440
you're going to print x.

00:04:33.440 --> 00:04:37.775
So now we know how to create a simple variable.

00:04:37.775 --> 00:04:42.425
Let's compile them and see CLS.

00:04:42.425 --> 00:04:44.360
So let's put DIR here.

00:04:44.360 --> 00:04:46.250
So we have variable example.

00:04:46.250 --> 00:04:49.700
Okay, so I'm going to compile Java C space.

00:04:49.700 --> 00:04:53.000
We know the syntax that variable examined at Java.

00:04:53.000 --> 00:04:55.625
Okay, there's an issue here.

00:04:55.625 --> 00:04:57.935
So what is a issue or superintendent, okay.

00:04:57.935 --> 00:05:01.260
There is a spelling mistake PRI.

00:05:01.600 --> 00:05:07.100
So save it again and go back to the command prompt and compile it again.

00:05:07.100 --> 00:05:09.080
So now it is compiled.

00:05:09.080 --> 00:05:09.740
Let's run it.

00:05:09.740 --> 00:05:15.350
We know how to read and write Java and space the class name variable example.

00:05:15.350 --> 00:05:19.160
So now the output has been printed in the console.

00:05:19.160 --> 00:05:23.375
So we are good read. So in the next video we're going to talk about,

00:05:23.375 --> 00:05:28.070
we're going to explore all the data types that are eight different types, right?

00:05:28.070 --> 00:05:28.550
Right.

00:05:28.550 --> 00:05:33.180
We are going to explore everything in the next video.
