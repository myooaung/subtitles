WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.415
Hello everyone, Welcome back.

00:00:02.415 --> 00:00:07.860
So we discussed about the default and the public access modifiers.

00:00:07.860 --> 00:00:10.770
Let's talk about the methods as relevant.

00:00:10.770 --> 00:00:14.730
Because methods are four different access modifiers.

00:00:14.730 --> 00:00:15.510
Correct?

00:00:15.510 --> 00:00:17.685
So now let's go back to idea.

00:00:17.685 --> 00:00:22.875
Let's export one-by-one public and private default first, let's go to public.

00:00:22.875 --> 00:00:25.800
First, we need to remove this error.

00:00:25.800 --> 00:00:31.995
So let's add public in our class so it can be visible to everyone.

00:00:31.995 --> 00:00:35.590
Sorry, not here in the classroom.

00:00:36.530 --> 00:00:39.015
I guess a down arrow is gone.

00:00:39.015 --> 00:00:41.235
So now we're talking about methods.

00:00:41.235 --> 00:00:43.165
Got it. Okay.

00:00:43.165 --> 00:00:44.410
So in class one,

00:00:44.410 --> 00:00:46.495
I haven't met that goal.

00:00:46.495 --> 00:00:49.045
And it is available as a public.

00:00:49.045 --> 00:00:51.880
So I can access in class too,

00:00:51.880 --> 00:00:53.920
and I can access in class three.

00:00:53.920 --> 00:00:54.610
Got it.

00:00:54.610 --> 00:00:59.845
If you want to verify what will happen if you remove the public access modifier.

00:00:59.845 --> 00:01:03.265
The moment you remove the access modifier,

00:01:03.265 --> 00:01:06.235
which become as a default.

00:01:06.235 --> 00:01:09.835
So what is a default or default?

00:01:09.835 --> 00:01:12.955
Access within the package.

00:01:12.955 --> 00:01:14.020
Got it.

00:01:14.020 --> 00:01:17.470
So that that is a reason that is no added

00:01:17.470 --> 00:01:20.905
in class too because it resides in the same package, then more issues.

00:01:20.905 --> 00:01:26.600
But lastly, say some ADA because Class 1 is accessible,

00:01:26.600 --> 00:01:29.690
but that is not visible for me because the method is default.

00:01:29.690 --> 00:01:33.200
So I mentioned, I've created a method which can be accessed

00:01:33.200 --> 00:01:37.115
only through my same package classes.

00:01:37.115 --> 00:01:39.515
So not somebody else can access that.

00:01:39.515 --> 00:01:42.960
Okay. If you want to modify that public,

00:01:43.090 --> 00:01:46.025
anyone can access within the same package.

00:01:46.025 --> 00:01:50.165
It is working, but in the other package also it is looking.

00:01:50.165 --> 00:01:54.320
Okay, but let's try the variables.

00:01:54.320 --> 00:01:58.235
Because we tried metatag already said Let's create a variable here.

00:01:58.235 --> 00:02:01.265
Int x is equal to 10.

00:02:01.265 --> 00:02:03.890
So I did not provide any access modifiers here,

00:02:03.890 --> 00:02:05.285
which means it's the default.

00:02:05.285 --> 00:02:08.525
Default means I can access inside my same package.

00:02:08.525 --> 00:02:11.960
So what I'm gonna do, I'm going to access it here.

00:02:11.960 --> 00:02:15.215
Obj dot x.

00:02:15.215 --> 00:02:17.435
So there is no address here,

00:02:17.435 --> 00:02:19.610
which means that last tool,

00:02:19.610 --> 00:02:21.455
which is available in the same package,

00:02:21.455 --> 00:02:23.270
let's try the same in class three,

00:02:23.270 --> 00:02:24.800
which is available in a different package.

00:02:24.800 --> 00:02:28.055
See what happened now? Immediately there is an error here.

00:02:28.055 --> 00:02:31.775
The reason I have access to the class,

00:02:31.775 --> 00:02:33.200
I have access to the method,

00:02:33.200 --> 00:02:36.290
but I didn't have access to the members,

00:02:36.290 --> 00:02:37.400
which means the variables.

00:02:37.400 --> 00:02:42.110
The reason I did not provide any access modifiers guess which means it becomes

00:02:42.110 --> 00:02:47.735
the default and the fault can be access to only same within the package.

00:02:47.735 --> 00:02:51.950
The moment which you modify modify as a public,

00:02:51.950 --> 00:02:53.720
the issue has been resolved,

00:02:53.720 --> 00:02:55.655
which means I'm able to access here.

00:02:55.655 --> 00:03:01.115
So now we verified how the public and the default is going to work.

00:03:01.115 --> 00:03:02.360
Correct?

00:03:02.360 --> 00:03:03.890
But what is the priority?

00:03:03.890 --> 00:03:09.860
Private means eight is a privacy space for your metal RE1 variable.

00:03:09.860 --> 00:03:11.435
So let's go to class 1.

00:03:11.435 --> 00:03:13.250
I'm going to create

00:03:13.250 --> 00:03:23.400
a private metallic try rate void method two.

00:03:23.800 --> 00:03:27.725
Method two. So here what I'm gonna do,

00:03:27.725 --> 00:03:31.205
I'm going to just simply print a message here,

00:03:31.205 --> 00:03:38.520
message from class 1 and method 2.

00:03:38.620 --> 00:03:41.090
So what will happen?

00:03:41.090 --> 00:03:43.250
What does the private means?

00:03:43.250 --> 00:03:48.500
Which means one only did declared class.

00:03:48.500 --> 00:03:51.500
So it can be accessed only through the declared class,

00:03:51.500 --> 00:03:53.405
which means this is my class.

00:03:53.405 --> 00:03:58.730
So if my class have any private members are metadata members mix variables.

00:03:58.730 --> 00:04:08.420
It can be accessed only in this same declared class judgments in the class one. Right?

00:04:08.420 --> 00:04:15.720
So let me create a main method here so I can call them main class one.

00:04:17.170 --> 00:04:20.045
Class one OBJ.

00:04:20.045 --> 00:04:24.365
You can give any names for now I'm just doing a simple, I'm giving it over here.

00:04:24.365 --> 00:04:30.035
So now I can access all be j dot Class 1, method 2.

00:04:30.035 --> 00:04:33.485
Got it. Because before that altruism,

00:04:33.485 --> 00:04:35.285
when you try to OBJ dot,

00:04:35.285 --> 00:04:40.950
you can see x is accessible and glass one method

00:04:41.290 --> 00:04:45.425
is accessible and it is showing as a green, which means the public.

00:04:45.425 --> 00:04:48.815
But class one method due to show that with a circle,

00:04:48.815 --> 00:04:52.250
I mean square, which means it's a private.

00:04:52.250 --> 00:04:55.820
Okay. I can access it here.

00:04:55.820 --> 00:04:57.780
Let me run this.

00:04:59.320 --> 00:05:01.460
It is accessible.

00:05:01.460 --> 00:05:06.620
Let me try the same in the class to which is available in the same package.

00:05:06.620 --> 00:05:09.665
Even though if it is a same package,

00:05:09.665 --> 00:05:13.790
our private methods cannot be accessed in other classes.

00:05:13.790 --> 00:05:15.590
So even in the same package,

00:05:15.590 --> 00:05:19.160
I'm not able to access, which means I cannot access in the other packages.

00:05:19.160 --> 00:05:22.775
Also. That is the issue.

00:05:22.775 --> 00:05:27.665
Okay, So if you want to make sure you want some private members,

00:05:27.665 --> 00:05:30.920
you can use only the private.

00:05:30.920 --> 00:05:32.030
Got it.

00:05:32.030 --> 00:05:34.025
And that is one more thing.

00:05:34.025 --> 00:05:38.795
So we dry it public and private and the default,

00:05:38.795 --> 00:05:40.070
so what is protected?

00:05:40.070 --> 00:05:43.400
Protector, which is similar to like a default one,

00:05:43.400 --> 00:05:46.010
but it has either privilege.

00:05:46.010 --> 00:05:48.995
If someone is extending my class, they can use it.

00:05:48.995 --> 00:05:49.895
Okay?

00:05:49.895 --> 00:05:52.070
Okay, until let's go back to class 1.

00:05:52.070 --> 00:05:56.975
Let's create a variable called protector.

00:05:56.975 --> 00:06:00.050
You're going to create a method also, lead funnel,

00:06:00.050 --> 00:06:05.045
I'm going to create a variable int y 25.

00:06:05.045 --> 00:06:05.945
Okay?

00:06:05.945 --> 00:06:10.020
So if it is in the same class, I can access, right?

00:06:11.320 --> 00:06:20.210
So OBJ, white noise issues I going to access so I can run.

00:06:20.210 --> 00:06:21.770
But in the same package also,

00:06:21.770 --> 00:06:23.750
we can access them.

00:06:23.750 --> 00:06:27.830
That is an advantage of protected, correct?

00:06:27.830 --> 00:06:29.825
Even the class too, I can access.

00:06:29.825 --> 00:06:33.035
But here it is a different thing.

00:06:33.035 --> 00:06:35.000
And I'm trying to accident last three,

00:06:35.000 --> 00:06:37.910
which is throwing an error because

00:06:37.910 --> 00:06:42.740
OB-GYN not public for me or it is not available at all.

00:06:42.740 --> 00:06:48.485
So what we need to do if you want to access the members for class one,

00:06:48.485 --> 00:06:52.610
attribute the same class or it has to be extensive.

00:06:52.610 --> 00:06:54.690
Class 1.

00:06:55.840 --> 00:06:57.275
Right?

00:06:57.275 --> 00:06:58.805
So now what happen?

00:06:58.805 --> 00:07:00.380
I exploited class one.

00:07:00.380 --> 00:07:05.870
So when you are extending a class in degree the object for the external class c.

00:07:05.870 --> 00:07:09.650
Now I can access My OB-GYN.

00:07:09.650 --> 00:07:12.515
Let's run it and we should be able to see the 24 here.

00:07:12.515 --> 00:07:17.075
So this is how you need to make use of the access modifiers.

00:07:17.075 --> 00:07:18.950
So far we discussed about

00:07:18.950 --> 00:07:24.290
the access modifiers against the class and the variable that's concerted.

00:07:24.290 --> 00:07:29.150
It's a different concept when we will talk about books concept,

00:07:29.150 --> 00:07:30.710
got it, say in the next video,

00:07:30.710 --> 00:07:33.065
we're gonna talk about the non-modifiable.

00:07:33.065 --> 00:07:35.030
They emanate non-access modifier.

00:07:35.030 --> 00:07:37.190
It's pretty much similar to the access modifiers,

00:07:37.190 --> 00:07:39.720
and we'll talk over the next video.
