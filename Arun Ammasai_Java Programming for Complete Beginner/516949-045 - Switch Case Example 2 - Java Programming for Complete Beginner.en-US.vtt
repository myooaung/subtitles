WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.710
Hello everyone, welcome back.

00:00:01.710 --> 00:00:04.620
So we're going to create another example which will

00:00:04.620 --> 00:00:07.815
explain how this is working in a real time scenario.

00:00:07.815 --> 00:00:10.110
The one which we already discussed, the simple example.

00:00:10.110 --> 00:00:12.180
So let's talk about this scenario.

00:00:12.180 --> 00:00:14.370
So I have two numbers,

00:00:14.370 --> 00:00:17.865
so user has to provide two inputs, okay?

00:00:17.865 --> 00:00:19.890
And also they will provide what kind of

00:00:19.890 --> 00:00:22.035
operation they need to pull from whether addition,

00:00:22.035 --> 00:00:26.610
subtraction, multiplication, it has to be lowered by the user.

00:00:26.610 --> 00:00:28.425
Based on that, if they're providing,

00:00:28.425 --> 00:00:31.620
I need to do the sum operation, addition operation.

00:00:31.620 --> 00:00:32.670
If they're providing minus,

00:00:32.670 --> 00:00:41.560
I'm going to subtract the similar form for multiplication and also divide.

00:00:41.560 --> 00:00:42.500
Try that.

00:00:42.500 --> 00:00:45.335
It's kind of a bit different, but anyway,

00:00:45.335 --> 00:00:52.025
so it's greater than i example, switch case.

00:00:52.025 --> 00:00:54.185
Example one.

00:00:54.185 --> 00:00:56.090
Finished.

00:00:56.090 --> 00:00:59.615
So don't get confused about because the one which are going to use

00:00:59.615 --> 00:01:03.005
the we are going to use something additional here, like the scanner.

00:01:03.005 --> 00:01:07.670
Scanner is nothing but it is used for reading the input from the runtime.

00:01:07.670 --> 00:01:10.145
Because I'm feeding some input.

00:01:10.145 --> 00:01:13.620
So it will be taken and stored into a variable.

00:01:13.870 --> 00:01:21.020
So let's define I have a variable called double a commodity.

00:01:21.020 --> 00:01:22.805
So I have two inputs.

00:01:22.805 --> 00:01:23.840
Correct?

00:01:23.840 --> 00:01:26.495
So I'm going to use a scanner here.

00:01:26.495 --> 00:01:31.250
The scanner is a one is used to allow us to enter input data.

00:01:31.250 --> 00:01:41.135
Scanner is equal to new Scanner System.in,

00:01:41.135 --> 00:01:47.135
which is not System.in means the input is going to be given by the system.

00:01:47.135 --> 00:01:51.785
Got it. Okay, so now the first one, Cisco.

00:01:51.785 --> 00:01:57.600
So enter value for.

00:01:58.990 --> 00:02:01.925
Okay. So now what I'm gonna do,

00:02:01.925 --> 00:02:07.310
I'm gonna receive the data scanner

00:02:07.310 --> 00:02:13.145
dot next to w.

00:02:13.145 --> 00:02:19.320
So the value which is entered in this line will be stored in the valley here.

00:02:20.050 --> 00:02:21.575
Correct?

00:02:21.575 --> 00:02:27.200
So let me do the same for B and C. Control C.

00:02:27.200 --> 00:02:32.645
So enter the value for b.

00:02:32.645 --> 00:02:35.520
And we'll do the same thing here.

00:02:35.770 --> 00:02:40.790
I'm going to use b. So now we have values a and b.

00:02:40.790 --> 00:02:42.725
Okay, so now what I need to do,

00:02:42.725 --> 00:02:46.085
so next thing I want to user to provide.

00:02:46.085 --> 00:02:50.315
What kind of they're going to provide.

00:02:50.315 --> 00:02:53.610
I mean, what kind of operation?

00:02:58.510 --> 00:03:08.780
Operation. Operation.

00:03:08.780 --> 00:03:15.890
So the examples of the kind of operation like plus,

00:03:15.890 --> 00:03:20.729
minus, multiply and divide.

00:03:21.220 --> 00:03:23.750
So if they're burning something else,

00:03:23.750 --> 00:03:32.885
it has to be conserved as invalid inputs. Correct?

00:03:32.885 --> 00:03:42.660
Okay, So let me, so this is going to be the data which are receiving is it's a car.

00:03:43.210 --> 00:03:50.720
So operator. So what I'm gonna do,

00:03:50.720 --> 00:03:52.565
I'm gonna use a scan.

00:03:52.565 --> 00:03:54.690
Dot,

00:03:59.650 --> 00:04:09.965
dot, dot next.

00:04:09.965 --> 00:04:12.690
Okay, It's kinda written next node.

00:04:13.120 --> 00:04:19.700
So don't means the first data

00:04:19.700 --> 00:04:25.490
which are reading it from this particular line. Okay?

00:04:25.490 --> 00:04:29.990
So, okay.

00:04:29.990 --> 00:04:33.330
So let me print operator.

00:04:35.980 --> 00:04:45.740
Operator is OK.

00:04:45.740 --> 00:04:50.450
So now what we're going to just run the code and we'll see how there's been

00:04:50.450 --> 00:04:58.400
talk for 20 and then value for me 40.

00:04:58.400 --> 00:05:03.170
And it's asking us to enter a value operator plus.

00:05:03.170 --> 00:05:08.120
Operation is plus. So now what we're gonna do,

00:05:08.120 --> 00:05:10.835
okay, so now we don't have to walk.

00:05:10.835 --> 00:05:14.070
So now we can write the switch case.

00:05:18.430 --> 00:05:25.880
So switch, so my switch operator,

00:05:25.880 --> 00:05:30.875
which is plus, minus or something else.

00:05:30.875 --> 00:05:35.630
So we just come in car will be provided in a single quote string.

00:05:35.630 --> 00:05:38.100
The string, it isn't a double-quotes.

00:05:38.100 --> 00:05:39.505
Okay?

00:05:39.505 --> 00:05:44.650
And then what I'm gonna do, I'm gonna print this out.

00:05:44.650 --> 00:05:52.510
So we are going

00:05:52.510 --> 00:05:58.165
to provide addition operation.

00:05:58.165 --> 00:06:00.590
Let's copy this.

00:06:01.650 --> 00:06:05.965
Paste it again and again.

00:06:05.965 --> 00:06:11.245
Okay, so now it is going to be minus and it is a multiplication.

00:06:11.245 --> 00:06:13.540
And this is going to be divided.

00:06:13.540 --> 00:06:17.770
So subtraction.

00:06:17.770 --> 00:06:20.265
So a minus b.

00:06:20.265 --> 00:06:24.800
And here it is going to be multiplication and

00:06:24.800 --> 00:06:30.370
a multiplication T. And it is going to be divided.

00:06:32.890 --> 00:06:35.525
So what law? But if nothing else,

00:06:35.525 --> 00:06:40.460
I've been giving some operator which is not existing in the list, right?

00:06:40.460 --> 00:06:45.180
So we need to provide the valleys,

00:06:47.860 --> 00:06:50.180
basically donate them rather

00:06:50.180 --> 00:07:00.450
than actually wrong operator.

00:07:01.870 --> 00:07:04.655
So interesting, right?

00:07:04.655 --> 00:07:07.490
Because we are trying to real-time scenario.

00:07:07.490 --> 00:07:09.140
So let's run it again.

00:07:09.140 --> 00:07:10.580
We'll see what's going to happen.

00:07:10.580 --> 00:07:13.265
So the value is going to be,

00:07:13.265 --> 00:07:17.405
the input value is going to be, sorry,

00:07:17.405 --> 00:07:27.890
a is 10, b is phi phi.

00:07:27.890 --> 00:07:30.380
So I need to choose the operation.

00:07:30.380 --> 00:07:32.735
So I'm going to use plus.

00:07:32.735 --> 00:07:37.250
And so the valleys 15,

00:07:37.250 --> 00:07:40.520
because I choose an operator as a plus.

00:07:40.520 --> 00:07:43.715
Let's rerun again and we'll try something else.

00:07:43.715 --> 00:07:46.880
The value is a 4,

00:07:46.880 --> 00:07:50.750
10 and valid before.

00:07:50.750 --> 00:07:52.760
So I'm using multiplication.

00:07:52.760 --> 00:07:54.485
So if supposed to be 50, right?

00:07:54.485 --> 00:07:56.255
So the multiplication is 15.

00:07:56.255 --> 00:08:00.785
So this is how you're going to make use of the switch case, okay?

00:08:00.785 --> 00:08:02.030
So not only that case,

00:08:02.030 --> 00:08:05.225
you can use a string also. That is also possible.

00:08:05.225 --> 00:08:10.850
For example, you can provide 1234101 day, so seven days, right?

00:08:10.850 --> 00:08:12.455
You can pass up to seven cases.

00:08:12.455 --> 00:08:15.755
So each number belongs to one day in a week.

00:08:15.755 --> 00:08:18.540
Okay. So thank you.
