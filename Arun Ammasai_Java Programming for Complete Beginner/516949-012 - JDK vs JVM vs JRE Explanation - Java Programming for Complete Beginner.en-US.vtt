WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.640
Hello everyone, Welcome back.

00:00:02.640 --> 00:00:04.020
So we discussed about the,

00:00:04.020 --> 00:00:06.045
how the JVM architectures working.

00:00:06.045 --> 00:00:09.270
What are the important components available in say the JVM to

00:00:09.270 --> 00:00:15.195
handle yet class file to make sure it is executing in a proper way.

00:00:15.195 --> 00:00:16.035
Correct?

00:00:16.035 --> 00:00:18.975
So we're going to talk about something interesting right now.

00:00:18.975 --> 00:00:24.030
So which is JVM versus judiciary is a Cherokee,

00:00:24.030 --> 00:00:29.630
you might have a confusion like there are too many things like JVM, JDK.

00:00:29.630 --> 00:00:33.815
So we discussed the book JDK and we describe a GRE and also we discovered JVM.

00:00:33.815 --> 00:00:35.645
But what content is what?

00:00:35.645 --> 00:00:39.380
I'm confused, man, whether JR is available in JVM or JVM

00:00:39.380 --> 00:00:43.160
available in January or GRE incendiary K or jury Kinsey did that.

00:00:43.160 --> 00:00:44.360
A lot of confusion. Okay.

00:00:44.360 --> 00:00:46.700
So we're gonna talk about a simple diagram which

00:00:46.700 --> 00:00:51.530
will help you to understand how the structure it

00:00:51.530 --> 00:00:58.880
is looks like and where each and every elements placed in Java.

00:00:58.880 --> 00:01:00.560
Okay, let's take a look at example.

00:01:00.560 --> 00:01:00.995
Okay?

00:01:00.995 --> 00:01:04.235
So this is JRE, the first one.

00:01:04.235 --> 00:01:08.610
This is a JRE which will

00:01:08.620 --> 00:01:15.170
contains the JVM and also the liabilities and the class files,

00:01:15.170 --> 00:01:22.684
which will help us to render any class, any bytecode.

00:01:22.684 --> 00:01:27.080
So as I mentioned, what exactly is Jerry,

00:01:27.080 --> 00:01:31.055
in order to execute any bytecode, union JRE.

00:01:31.055 --> 00:01:36.620
Jre, it's not going to develop a code or it's not going to compile the code.

00:01:36.620 --> 00:01:40.700
It knows how to execute a file, our executable bytecode.

00:01:40.700 --> 00:01:43.535
You can simply named the execute a class file here.

00:01:43.535 --> 00:01:46.715
Class village nothing is contains the bytecode.

00:01:46.715 --> 00:01:51.845
So JRE contains JVM along with labor is,

00:01:51.845 --> 00:01:55.325
which will help us to run a program.

00:01:55.325 --> 00:01:59.645
So there is a file called RT,

00:01:59.645 --> 00:02:02.120
which is nothing but a rent MGR.

00:02:02.120 --> 00:02:02.720
Okay.

00:02:02.720 --> 00:02:05.245
So basically you don't know how to put the jobs, okay,

00:02:05.245 --> 00:02:08.840
jars is a support duty module which

00:02:08.840 --> 00:02:13.610
contains all the necessary things need to be included.

00:02:13.610 --> 00:02:17.270
We'll talk about jars in a separate video.

00:02:17.270 --> 00:02:19.925
But for now, if following for your understanding,

00:02:19.925 --> 00:02:21.350
if somebody's asking a JAR file,

00:02:21.350 --> 00:02:25.550
jar is an archive file which contains the dependencies.

00:02:25.550 --> 00:02:26.480
Great.

00:02:26.480 --> 00:02:29.060
Okay, so now I know I didn't understand,

00:02:29.060 --> 00:02:30.335
okay, it is Java.

00:02:30.335 --> 00:02:35.540
I mean it is JRE which contains a JVM in it and also some supported libraries.

00:02:35.540 --> 00:02:36.260
Correct?

00:02:36.260 --> 00:02:37.805
So if I passed the class field,

00:02:37.805 --> 00:02:39.425
they know how to execute them.

00:02:39.425 --> 00:02:42.540
Because we know that the remark later also rate.

00:02:43.570 --> 00:02:48.005
Okay, so now, so what is JDK,

00:02:48.005 --> 00:02:51.980
the second diagram which will show you the JDK,

00:02:51.980 --> 00:02:53.795
how would this looks like?

00:02:53.795 --> 00:02:55.100
Correct.

00:02:55.100 --> 00:02:57.290
So the second diagram,

00:02:57.290 --> 00:02:59.180
which contains the first diagram,

00:02:59.180 --> 00:03:02.690
just take a look at this particular piece of a diagram.

00:03:02.690 --> 00:03:05.120
The one in the gray area,

00:03:05.120 --> 00:03:07.295
this is the JRE,

00:03:07.295 --> 00:03:11.705
but now the GRE Inside JDK.

00:03:11.705 --> 00:03:14.945
Along with some additional tools here,

00:03:14.945 --> 00:03:18.665
compiler, debug, and other development tools.

00:03:18.665 --> 00:03:21.380
So when you have a development kit,

00:03:21.380 --> 00:03:23.255
you have the DA women place.

00:03:23.255 --> 00:03:26.060
You have the development tools in your place.

00:03:26.060 --> 00:03:28.640
So you can develop the code and you can compare

00:03:28.640 --> 00:03:31.490
them and you can rent them because you have all the privilege here.

00:03:31.490 --> 00:03:33.635
But when it is a JRE,

00:03:33.635 --> 00:03:37.400
JRE, if you have a class like an execute them.

00:03:37.400 --> 00:03:38.585
Correct.

00:03:38.585 --> 00:03:41.120
So JDK is the entire package which contains

00:03:41.120 --> 00:03:44.870
the JVM along with the development tools and JVM,

00:03:44.870 --> 00:03:46.115
it's not a kid.

00:03:46.115 --> 00:03:46.805
Okay?

00:03:46.805 --> 00:03:53.550
It is just a module which knows how to run a Java class files or Java bytecodes.

00:03:53.590 --> 00:03:55.055
Correct?

00:03:55.055 --> 00:03:59.795
So if some, now you know what is a JVM and what is JRE and what is JDK?

00:03:59.795 --> 00:04:03.350
It is not like exactly the JVM is a GRE versus GDP, Okay?

00:04:03.350 --> 00:04:07.415
It is exactly what JDK is it and what it contains,

00:04:07.415 --> 00:04:10.265
and what is the JRE and what it contains?

00:04:10.265 --> 00:04:13.940
Contents, everything. But Jerry content's not everything.

00:04:13.940 --> 00:04:19.880
Dairy contains only the JVMs and the label is correct.

00:04:19.880 --> 00:04:20.420
Okay.

00:04:20.420 --> 00:04:24.170
So this is all we need to know about how the JVM G area and JDK

00:04:24.170 --> 00:04:29.580
is combined together and help us to run our program.

00:04:29.770 --> 00:04:33.110
Okay, let's meet in the next video and we're gonna talk

00:04:33.110 --> 00:04:35.690
about our first HelloWorld Java program.

00:04:35.690 --> 00:04:40.190
So, so far we are going through a lot of slides.

00:04:40.190 --> 00:04:45.050
And for, even for a few more topics we might need to cover with the PowerPoint slides.

00:04:45.050 --> 00:04:53.010
And eventually from the next video we're going to do the actual coding. Thank you.
