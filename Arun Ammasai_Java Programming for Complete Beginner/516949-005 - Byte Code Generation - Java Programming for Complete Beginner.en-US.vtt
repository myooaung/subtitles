WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.340
Hello everyone, Welcome back.

00:00:02.340 --> 00:00:07.125
We're gonna talk about some concept called the platform independent.

00:00:07.125 --> 00:00:11.145
Okay, So whenever the people who's talking about Java,

00:00:11.145 --> 00:00:13.515
the worst thing which will come into your mind,

00:00:13.515 --> 00:00:18.420
Java is platform independent programming language.

00:00:18.420 --> 00:00:24.120
Okay, so let's talk about how we describe it as a platform independent.

00:00:24.120 --> 00:00:25.710
What is the reason behind it?

00:00:25.710 --> 00:00:28.845
Okay, So we know that the JVM,

00:00:28.845 --> 00:00:31.800
which will execute the bytecode generated by the compiler.

00:00:31.800 --> 00:00:34.590
That's what we discussed in the previous slide, right?

00:00:34.590 --> 00:00:37.545
So that is the JVM part of work.

00:00:37.545 --> 00:00:42.220
So JVM will execute the bytecode. Okay?

00:00:42.220 --> 00:00:45.320
For example, I have a Windows machine and you have

00:00:45.320 --> 00:00:48.950
a Mac mission on somebody else, haha, Linux mission.

00:00:48.950 --> 00:00:51.290
So if it is a platform independent,

00:00:51.290 --> 00:00:55.775
you would code has to walk in all the environment in the same manner.

00:00:55.775 --> 00:00:57.980
If you're writing a Hello World program,

00:00:57.980 --> 00:01:00.500
if you're running in the program in your Windows machine,

00:01:00.500 --> 00:01:03.170
it has ridden Hello World, and Mac.

00:01:03.170 --> 00:01:04.700
It has written the same output.

00:01:04.700 --> 00:01:07.790
Even in the next, it has to run this same output.

00:01:07.790 --> 00:01:11.975
So you're writing a code in a Windows platform,

00:01:11.975 --> 00:01:14.480
or you're writing your code in

00:01:14.480 --> 00:01:17.465
a specific operating system

00:01:17.465 --> 00:01:21.875
and you are trying to execute the same coordinate, different operating systems.

00:01:21.875 --> 00:01:22.550
Okay?

00:01:22.550 --> 00:01:24.155
So basically what does it mean?

00:01:24.155 --> 00:01:26.870
You written a code in one place and you are executing and

00:01:26.870 --> 00:01:29.660
different places or different operating system.

00:01:29.660 --> 00:01:31.940
That particular concept is called as a platform

00:01:31.940 --> 00:01:34.220
independent because you're writing the code

00:01:34.220 --> 00:01:40.490
once and you're running the code in across multiple platforms.

00:01:40.490 --> 00:01:41.810
You hear the platform,

00:01:41.810 --> 00:01:45.815
the sense means it is Windows,

00:01:45.815 --> 00:01:49.220
Linux, mac, or even Android boys.

00:01:49.220 --> 00:01:55.160
Okay, So those things or comes under a platform independent, right?

00:01:55.160 --> 00:01:56.300
So what do next?

00:01:56.300 --> 00:01:59.090
Okay, so I, I know why Java is platform

00:01:59.090 --> 00:02:02.615
independent and we discuss something about byte code generation.

00:02:02.615 --> 00:02:06.560
I said I'm in the Java compiler will

00:02:06.560 --> 00:02:11.720
generate by God with the help of with that data file.

00:02:11.720 --> 00:02:13.985
So if you have a HelloWorld.java,

00:02:13.985 --> 00:02:17.075
the competitive it'll generate helloworld dot class file.

00:02:17.075 --> 00:02:19.370
So what is byte code generation?

00:02:19.370 --> 00:02:22.025
Correct, as I mentioned earlier,

00:02:22.025 --> 00:02:25.865
even though you're working in Mac,

00:02:25.865 --> 00:02:28.745
Windows, Linux, H and a with things at different platform.

00:02:28.745 --> 00:02:31.865
But all the missions can understand machine language.

00:02:31.865 --> 00:02:35.450
Machine language is nothing but zeros and ones, which is a byte code.

00:02:35.450 --> 00:02:36.545
Okay?

00:02:36.545 --> 00:02:40.565
So you can write a code and you can compile in Mac mission,

00:02:40.565 --> 00:02:42.365
and it will generate a bytecode.

00:02:42.365 --> 00:02:47.675
Bytecode which can run in Windows because machine can understand zeros and ones, right?

00:02:47.675 --> 00:02:49.205
And the same thing will login now,

00:02:49.205 --> 00:02:51.155
let us also, okay,

00:02:51.155 --> 00:02:57.005
so here the common language is a machine understandable language called machine language.

00:02:57.005 --> 00:03:00.200
So we just have 0 and 1, right?

00:03:00.200 --> 00:03:03.710
So when you write a chord in a one single particular platform,

00:03:03.710 --> 00:03:07.220
it cannot in any environment with the help of the bytecode conversion,

00:03:07.220 --> 00:03:10.355
which will then by the JVM.

00:03:10.355 --> 00:03:13.580
Okay, then now we'll see how the JVM has been.

00:03:13.580 --> 00:03:16.505
I mean, bitcoin has been generator.

00:03:16.505 --> 00:03:20.030
Okay, So you have a file called HelloWorld.java,

00:03:20.030 --> 00:03:21.515
okay, that is a source file.

00:03:21.515 --> 00:03:25.820
Okay, so now we need to have a Java Development Kit.

00:03:25.820 --> 00:03:28.220
So when you install the Java Development Kit,

00:03:28.220 --> 00:03:30.230
it contains the compiler.

00:03:30.230 --> 00:03:37.805
Correct? So the helloworld dot Java file will transform the file to a compiler.

00:03:37.805 --> 00:03:39.905
So compare what it will do.

00:03:39.905 --> 00:03:44.540
It will convert HelloWorld.java into a helloworld dot class file,

00:03:44.540 --> 00:03:47.130
which is a bytecode.

00:03:47.140 --> 00:03:50.855
So once the byte code is ready,

00:03:50.855 --> 00:03:56.390
you were JVM has the ability to execute the program, correct?

00:03:56.390 --> 00:04:00.170
Because JVM knows how to process a bytecode.

00:04:00.170 --> 00:04:05.390
It will convert your takes the bytecode and it'll give you the output, okay,

00:04:05.390 --> 00:04:08.510
the hardware platform is nothing but it is your operating system

00:04:08.510 --> 00:04:11.735
because your software has been installed on any machine, right?

00:04:11.735 --> 00:04:13.760
Maybe Windows or Mac or Linux.

00:04:13.760 --> 00:04:16.040
So the hardware platform is operating system.

00:04:16.040 --> 00:04:19.100
Okay, and that is something called GRE.

00:04:19.100 --> 00:04:21.665
So what is the JRE?

00:04:21.665 --> 00:04:27.740
Jre means that Java runtime environment, okay,

00:04:27.740 --> 00:04:32.360
so, so when you install JDK,

00:04:32.360 --> 00:04:34.940
it comes along with the GRE.

00:04:34.940 --> 00:04:41.045
Okay, so JRE is neither one lead to execute the bytecode?

00:04:41.045 --> 00:04:42.485
Correct.

00:04:42.485 --> 00:04:46.745
But when the JRE cannot compile the program, okay?

00:04:46.745 --> 00:04:49.940
So it will take only the compiled code,

00:04:49.940 --> 00:04:52.100
which is nothing but a bytecode.

00:04:52.100 --> 00:04:53.990
Then it will execute the code.

00:04:53.990 --> 00:04:58.920
Okay, we'll talk about the GRE in the upcoming videos. Thank you.
