WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.050
In the previous video,

00:00:03.050 --> 00:00:07.560
we set up the initial structure for our controller.

00:00:07.560 --> 00:00:11.550
We have the post and get methods.

00:00:11.550 --> 00:00:19.550
The post is used by Google er assistant Getting souls is only informative for us,

00:00:19.550 --> 00:00:29.610
and now we should be able to figure out how to extract the intent that is requested by by

00:00:29.610 --> 00:00:30.150
Google.

00:00:30.150 --> 00:00:36.650
So let's start by implement this corresponding business logic.

00:00:36.650 --> 00:00:45.290
And for this,

00:00:45.290 --> 00:00:53.700
let's first get the body from the http ser wrote request.

00:00:53.700 --> 00:00:57.350
In order to achieve these,

00:00:57.350 --> 00:01:08.510
we can set the A variable called body off type string and we'll extract the corresponding

00:01:08.510 --> 00:01:17.050
data from the request request object requests get Heather.

00:01:17.050 --> 00:01:20.050
And from this,

00:01:20.050 --> 00:01:26.670
we can use the lines and collect this information,

00:01:26.670 --> 00:01:31.510
as was your joining for this.

00:01:31.510 --> 00:01:33.180
Okay,

00:01:33.180 --> 00:01:44.480
so we'll have the the body as you can see it as a Jason statement over here that's also

00:01:44.480 --> 00:01:46.450
handled the exceptions.

00:01:46.450 --> 00:01:50.250
That's just throw the the exception over here.

00:01:50.250 --> 00:01:54.720
Okay,

00:01:54.720 --> 00:01:55.130
so far,

00:01:55.130 --> 00:01:55.750
so good.

00:01:55.750 --> 00:02:01.500
Now that's also introduced the lager.

00:02:01.500 --> 00:02:10.450
Since we're use mostly the the lager in different places on the application toe,

00:02:10.450 --> 00:02:14.550
be able to figure out which intent is involved.

00:02:14.550 --> 00:02:16.310
Um,

00:02:16.310 --> 00:02:20.060
the corresponding the response message that is sent back toe,

00:02:20.060 --> 00:02:22.450
Google assistant and so on.

00:02:22.450 --> 00:02:25.550
So I'm sitting up or lager here,

00:02:25.550 --> 00:02:30.750
also swaying forth the corresponding classes.

00:02:30.750 --> 00:02:32.060
Okay,

00:02:32.060 --> 00:02:36.630
good on.

00:02:36.630 --> 00:02:37.650
Let's type here.

00:02:37.650 --> 00:02:38.430
Ah,

00:02:38.430 --> 00:02:39.250
specific.

00:02:39.250 --> 00:02:41.750
In four months of logging message,

00:02:41.750 --> 00:02:50.450
let's go in something like Executive execute post action.

00:02:50.450 --> 00:02:57.510
Okay,

00:02:57.510 --> 00:02:57.850
good.

00:02:57.850 --> 00:03:04.750
And since we also extracted the the Jason Body,

00:03:04.750 --> 00:03:07.450
let's show it here.

00:03:07.450 --> 00:03:18.290
Let's first create a new Jason object at the body and to string with the UN indentation

00:03:18.290 --> 00:03:19.950
such as four.

00:03:19.950 --> 00:03:31.950
This will help us see the Jason in the pretty format when we show it under our console.

00:03:31.950 --> 00:03:43.550
The next step is to get the intent name based on the user request.

00:03:43.550 --> 00:04:07.420
In order to do this,

00:04:07.420 --> 00:04:15.700
we need to first figured out the the structure that is sent and also,

00:04:15.700 --> 00:04:21.880
somehow the structure is similar to what we received from from the Google assistant.

00:04:21.880 --> 00:04:23.600
So let's play a bit with this.

00:04:23.600 --> 00:04:34.290
You can see that type over there the least autres and went toe diagnostic in for and this

00:04:34.290 --> 00:04:36.450
is the response a p I.

00:04:36.450 --> 00:04:41.250
So we can see that under query results,

00:04:41.250 --> 00:04:45.150
intent and display,

00:04:45.150 --> 00:04:47.360
we can figure out the intent name.

00:04:47.360 --> 00:04:52.650
So let's build the business Rogic to extract this information,

00:04:52.650 --> 00:04:59.750
we can create the new service for this.

00:04:59.750 --> 00:05:12.870
And let's call it Action service Over here.

00:05:12.870 --> 00:05:22.630
We need to annotate this class with the service stereotype for spring Toby ableto to know

00:05:22.630 --> 00:05:23.800
that this is Ah,

00:05:23.800 --> 00:05:26.850
this is a service class and has business logic.

00:05:26.850 --> 00:05:47.950
We will later inject the service under our controller and let's set up method and call it

00:05:47.950 --> 00:06:01.750
Get intent name that will extract the intent name based on the string called Body.

00:06:01.750 --> 00:06:07.850
So the first step is to convert the body toe adjacent.

00:06:07.850 --> 00:06:08.350
Object.

00:06:08.350 --> 00:06:12.110
For this,

00:06:12.110 --> 00:06:14.350
we're greater Jason object.

00:06:14.350 --> 00:06:25.480
Let's call it a body Jason Object Utzon object and the Let's add the body as experimented

00:06:25.480 --> 00:06:25.850
to it.

00:06:25.850 --> 00:06:49.550
Now let's get the query result from the previous Jason object.

00:06:49.550 --> 00:06:52.200
If you recall,

00:06:52.200 --> 00:06:55.350
you can see that clearly result.

00:06:55.350 --> 00:06:59.650
It's over there.

00:06:59.650 --> 00:07:12.750
Let's create a new Jason object and call it query the result of check and this will get the

00:07:12.750 --> 00:07:17.550
But this will extract the great result from the body.

00:07:17.550 --> 00:07:27.610
Jason Object Get Jason object created a result so we now have the where the result as a

00:07:27.610 --> 00:07:28.550
Jason object.

00:07:28.550 --> 00:07:36.150
The next step is to retrieve the in 10 top checked over here,

00:07:36.150 --> 00:07:54.450
so we'll create a new Jason Object Intent Object query result object that get Jason object

00:07:54.450 --> 00:07:57.950
and let's do it intent.

00:07:57.950 --> 00:08:12.450
And the final step is to extract the display name yet Display name,

00:08:12.450 --> 00:08:17.750
return intent Object.

00:08:17.750 --> 00:08:18.550
Look,

00:08:18.550 --> 00:08:24.560
get display.

00:08:24.560 --> 00:08:36.170
Name the strength So this will extract our intent name So we'll know each and every time we

00:08:36.170 --> 00:08:43.250
received a request from Google Home Assistant That way we will know exactly the intent name

00:08:43.250 --> 00:08:43.250
.

00:08:43.250 --> 00:08:47.440
We'll know exactly which requests has been evoked by Google assistant.

00:08:47.440 --> 00:08:49.650
That's also touring exception here.

00:08:49.650 --> 00:08:54.240
Just Toby to be on the safe side.

00:08:54.240 --> 00:09:02.370
If something strange happens on this Jason Transformation and are under our actions

00:09:02.370 --> 00:09:03.150
Controller,

00:09:03.150 --> 00:09:10.650
let's first injector action service.

00:09:10.650 --> 00:09:17.750
Okay.

00:09:17.750 --> 00:09:28.350
And over here,

00:09:28.350 --> 00:09:38.750
let's extract the intent name from the Action Service Action Service that get intent name

00:09:38.750 --> 00:09:42.680
and passed the body If you recall the bodies.

00:09:42.680 --> 00:09:43.150
So,

00:09:43.150 --> 00:09:45.020
Jason Ah,

00:09:45.020 --> 00:09:46.150
Jason format.

00:09:46.150 --> 00:09:52.450
And this will basically once again extract the intern name.

00:09:52.450 --> 00:09:58.850
That's also handle this exception in case something bad.

00:09:58.850 --> 00:09:59.950
Ah,

00:09:59.950 --> 00:10:13.970
something bad happens on this Jason Transformations to be able to properly Stella Google

00:10:13.970 --> 00:10:16.200
home that I don't know,

00:10:16.200 --> 00:10:17.950
something strange happened.

00:10:17.950 --> 00:10:26.360
So let's type a message error.

00:10:26.360 --> 00:10:30.050
Get them Get the message from there.

00:10:30.050 --> 00:10:31.460
And instead,

00:10:31.460 --> 00:10:41.890
off this bring stuck bring stuck Trace was just returner response entity with only four

00:10:41.890 --> 00:10:50.550
months of message the Google assistant that we were not able to process the that request

00:10:50.550 --> 00:10:56.990
and http status.

00:10:56.990 --> 00:10:59.750
Okay,

00:10:59.750 --> 00:11:04.950
good.

00:11:04.950 --> 00:11:09.050
I think we are on a good track.

00:11:09.050 --> 00:11:14.450
So the next step is being prim in the business logic.

