WEBVTT
ï»¿1
00:00:05.300 --> 00:00:11.800
Welcome back in this lecture we're going to be talking about hover over data as you already know when

2
00:00:11.800 --> 00:00:16.720
you interact the plot the graph and your cursor is hovering over a particular part of the graph.

3
00:00:16.900 --> 00:00:19.780
You get to see a piece of information displayed back.

4
00:00:19.780 --> 00:00:25.660
This information can actually be served internally in your script using Jaison and then parsed for specific

5
00:00:25.660 --> 00:00:26.400
information.

6
00:00:26.590 --> 00:00:31.000
So you can imagine if you have a scatterplot and you were hovering over with your cursor you'd be able

7
00:00:31.000 --> 00:00:36.430
to figure out where the user's cursor actually is on a particular scatter point where it's x axis point

8
00:00:36.430 --> 00:00:41.520
is and what it's Y-axis point is and any other information about that actual point on the plot.

9
00:00:41.530 --> 00:00:47.710
So every graph probably has a hover data component property but then can be accessed and used either

10
00:00:47.770 --> 00:00:52.360
internally or served externally as extra information for the user.

11
00:00:52.360 --> 00:00:56.380
Let's go ahead and show you what we're going to be building in this lecture to display the ability of

12
00:00:56.380 --> 00:00:57.700
hover data.

13
00:00:57.700 --> 00:01:02.380
All right so here we are at that dashboard are going to be creating in this lecture we have an x axis

14
00:01:02.410 --> 00:01:03.200
and y axis.

15
00:01:03.250 --> 00:01:08.660
And technically it's a scatterplot where we've have a grid of three by three.

16
00:01:08.680 --> 00:01:13.100
So this again correlates that red blue and yellow and the one two and three.

17
00:01:13.130 --> 00:01:14.900
And as you hover over each of these points.

18
00:01:14.920 --> 00:01:20.340
Notice that we're actually then serving some Jaison data about that particular point.

19
00:01:20.380 --> 00:01:23.580
So I'm going to go here in the middle of my cursor so that's blue too.

20
00:01:23.590 --> 00:01:27.160
And you'll notice I can see x values blue and y values too.

21
00:01:27.370 --> 00:01:30.620
And then there's some other information about the plot that may or may not be useful.

22
00:01:30.850 --> 00:01:38.360
But this is actually information you can grab internally as a user goes and hovers over various points.

23
00:01:38.470 --> 00:01:41.940
So we're going to show you right now how do you actually grab this component of data.

24
00:01:42.070 --> 00:01:45.220
And we'll also show you how to surf back that information.

25
00:01:45.220 --> 00:01:50.080
Once you've done that we're going to expand on this by actually grabbing the stated internally grabbing

26
00:01:50.080 --> 00:01:52.240
the data on what color they've chosen.

27
00:01:52.240 --> 00:01:55.930
In this case yellow as well as the number of wheels they've chosen and then we're going to serve an

28
00:01:55.930 --> 00:01:56.600
image back.

29
00:01:56.600 --> 00:01:58.570
So let me show you what that is going to look like.

30
00:01:58.570 --> 00:02:01.170
Ok so I just refresh this to the next script.

31
00:02:01.180 --> 00:02:03.460
We'll be working on during the lecture right now.

32
00:02:03.460 --> 00:02:04.930
Has a broken image tag.

33
00:02:05.050 --> 00:02:09.320
And that's because I haven't hovered over one of these points yet but as you hover over we're going

34
00:02:09.320 --> 00:02:13.970
to actually return the image that is correlated to whatever the point we're hovering over.

35
00:02:13.990 --> 00:02:18.900
So for example read one that's the red motorcycle and then we can do all three.

36
00:02:18.900 --> 00:02:21.700
That's this yellow three wheeled vehicle and so on.

37
00:02:21.700 --> 00:02:25.960
So we're going to grab that information internally and then return back the appropriate image.

38
00:02:25.960 --> 00:02:30.640
Let's go to our text editor and start creating that first dashboard and then we'll expand it to this

39
00:02:30.640 --> 00:02:31.640
image example.

40
00:02:31.860 --> 00:02:32.110
OK.

41
00:02:32.110 --> 00:02:33.760
Here we are back at the text editor.

42
00:02:33.790 --> 00:02:39.130
I've gone ahead and done the main imports dash core and each team all components dependencies for input

43
00:02:39.130 --> 00:02:39.960
and output.

44
00:02:40.000 --> 00:02:44.860
Since we have a plot there for that scatterplot grid we have graph objects as go we'll be reading in

45
00:02:44.860 --> 00:02:50.950
some data later on site pand this is PD and then have also have import Jaison and that Jason is going

46
00:02:50.950 --> 00:02:53.890
to be used to actually work with that hover data component.

47
00:02:54.220 --> 00:03:02.320
Let's start off by creating our application saying app is equal to Ashlock dash and then I'm going to

48
00:03:02.320 --> 00:03:06.200
read in that wheel's CSP dataset that we worked with earlier.

49
00:03:06.340 --> 00:03:10.300
So I'll say data wheels not CFE.

50
00:03:10.340 --> 00:03:14.810
Again remember you may need to do that thought thought Flash data depending on where you're actually

51
00:03:14.810 --> 00:03:17.640
located on your computer.

52
00:03:17.880 --> 00:03:24.230
And then what I'm going to do is say app or lay out is equal to and this is where we're going to have

53
00:03:24.230 --> 00:03:26.930
our division and it's a list of divisions.

54
00:03:26.930 --> 00:03:31.430
So let me now get us a little bit of room here to work with.

55
00:03:31.430 --> 00:03:34.710
So we have this HTL div and inside of the Stiv.

56
00:03:34.730 --> 00:03:40.010
I'm actually going to create two more divs one div is essentially going to be holding the graph and

57
00:03:40.010 --> 00:03:43.600
the other div will be a pre-formatted div to hold.

58
00:03:43.680 --> 00:03:44.390
Our Jason

59
00:03:47.550 --> 00:03:54.220
so I will make one more div here in the list and then in other.

60
00:03:54.230 --> 00:03:54.600
All right.

61
00:03:54.770 --> 00:03:57.820
So let's start off with the one on the bottom since that was a little simpler.

62
00:03:58.040 --> 00:03:59.460
This did what it's going to do.

63
00:03:59.480 --> 00:04:03.370
It's going to hold another ASTM Well component called h t m l.

64
00:04:03.710 --> 00:04:07.710
And it's a pretty formatting and we're going to give this an idea of it.

65
00:04:07.820 --> 00:04:09.560
Technically you can give it whatever you want.

66
00:04:09.560 --> 00:04:17.420
I was going to say I covered that data and let's give it a little bit of styling we'll say style dictionary.

67
00:04:18.940 --> 00:04:19.930
Physical too.

68
00:04:20.020 --> 00:04:25.280
And we're going to give it a little bit of padding on the top just so there's no overlapping issues.

69
00:04:26.420 --> 00:04:29.470
And as always dialing is something you can play around with.

70
00:04:30.350 --> 00:04:35.780
And that's the styling for this pre formatting HTML component.

71
00:04:35.800 --> 00:04:41.060
I'm going to put a comma here and then give styling to this HTL divisions and notice how my comma is

72
00:04:41.090 --> 00:04:42.770
placed.

73
00:04:42.770 --> 00:04:46.570
So the style dictionary is now for that actual div.

74
00:04:46.760 --> 00:04:54.480
And this is going to be a width of 30 percent and that basically just makes sure that that Jason we

75
00:04:54.480 --> 00:04:59.480
display back doesn't take up the entire string as one long text and said we're going to squeeze it to

76
00:04:59.510 --> 00:05:01.660
30 percent of our browser.

77
00:05:01.760 --> 00:05:07.160
So that's our bottom div or excuse me the really the div to the right and now we need to do the scatterplot

78
00:05:07.160 --> 00:05:07.530
div.

79
00:05:07.640 --> 00:05:09.040
So let's do that.

80
00:05:10.080 --> 00:05:11.260
Going to zoom in here.

81
00:05:11.520 --> 00:05:20.030
And for this div we're going to get a core component for a graph and it's going to be a lot of stuff

82
00:05:20.030 --> 00:05:20.700
going on here.

83
00:05:20.700 --> 00:05:26.810
We first want to give this an idea let's give this the idea of wheels Dasch plot.

84
00:05:27.050 --> 00:05:31.140
And this is going to be that scatterplot we're going to set it up so it looks more like a grid.

85
00:05:31.280 --> 00:05:35.750
And then when a person hovers over a particular point in that scatterplot it's going to return back

86
00:05:35.750 --> 00:05:36.930
some information.

87
00:05:36.980 --> 00:05:43.600
So we have our feet as wheels plot will say comma here and now the next thing to go inside.

88
00:05:43.910 --> 00:05:47.570
Let me get one more space is the figure parameter.

89
00:05:47.570 --> 00:05:48.720
I remember the figure parameter.

90
00:05:48.740 --> 00:05:56.860
That's just the dictionary that takes in your data list as well as your layout.

91
00:05:56.930 --> 00:05:58.560
So we have our data in our layout.

92
00:05:58.610 --> 00:06:00.570
Now it's just time to fill that out.

93
00:06:00.890 --> 00:06:04.100
So our data that's going to have to go that scatterplot

94
00:06:07.180 --> 00:06:10.160
and go that scatter needs an x value.

95
00:06:10.420 --> 00:06:19.420
So to provide that we'll see X here is equal to the color column from our data frame Khama the y value

96
00:06:20.200 --> 00:06:23.580
will be equal to the F wheels.

97
00:06:23.590 --> 00:06:27.470
So on the x axis we show the color on the wax as we show the wheels.

98
00:06:27.580 --> 00:06:33.580
And then in order to make it look like a grid where we can do is edit the spacing on the y axis.

99
00:06:33.850 --> 00:06:39.970
And if I say D-y is equal to one that's going to give it that grid like structure.

100
00:06:40.030 --> 00:06:44.610
Finally let's make sure it's a scatterplot than that we don't connect any of these points by saying

101
00:06:44.610 --> 00:06:52.840
load is equal to markers and you can edit the markers more if you want by saying marker equals and then

102
00:06:52.990 --> 00:06:59.370
providing a dictionary such as size the color or some line around each marker for a case.

103
00:06:59.380 --> 00:07:04.000
I'm just going to make the markers a little bigger so that we can view them in our screen and or dashboard

104
00:07:04.000 --> 00:07:08.650
so we'll say a marker as equal to the size component of the marker is 15.

105
00:07:08.650 --> 00:07:09.190
All right.

106
00:07:09.350 --> 00:07:14.350
Something I want you to be aware of here that later on we're going to use is I'm not actually providing

107
00:07:14.470 --> 00:07:21.820
a property component inside my graph or my figure for the hover data and you're going to see why later

108
00:07:21.820 --> 00:07:22.060
on.

109
00:07:22.060 --> 00:07:25.860
But I want to make that clear right now that nowhere inside of this graph object.

110
00:07:25.860 --> 00:07:31.690
Am I going to write hover data as an actual property finally for our layout.

111
00:07:31.820 --> 00:07:40.190
Inside here will say Go Dalt lay out and here is where you can set a title and X-axis or Y-axis title

112
00:07:40.840 --> 00:07:41.810
or title.

113
00:07:41.810 --> 00:07:43.140
Very simple as.

114
00:07:43.550 --> 00:07:44.290
Maybe test.

115
00:07:44.320 --> 00:07:52.410
So our test dashboard and the other thing I want to set is hover mode equal to closest that way when

116
00:07:52.410 --> 00:07:54.950
your cursor is closest to it it's got a point.

117
00:07:54.990 --> 00:07:56.630
That's the information we're grabbing.

118
00:07:56.640 --> 00:08:02.880
So again hover mode is equal to closest and you can mess around with an x axis title or a Y axis title.

119
00:08:03.070 --> 00:08:08.050
Save that and then let's give ourselves a little more room that we set up the layout again.

120
00:08:08.050 --> 00:08:14.350
All we're doing in this layout we set up a div for actual scatterplot and we set up this HTL div that's

121
00:08:14.350 --> 00:08:17.670
going to return the Jaison.

122
00:08:17.770 --> 00:08:22.030
So it technically has a children property that we're not using right now but we're going to fill that

123
00:08:22.030 --> 00:08:26.660
in with our input now put through the use of callbacks.

124
00:08:26.720 --> 00:08:28.110
That means we're come down here.

125
00:08:28.250 --> 00:08:33.090
We're starting our function we'll say callback image.

126
00:08:33.490 --> 00:08:39.400
And at first we're just going to not call back an image we're just going to report back that Jason information.

127
00:08:39.530 --> 00:08:49.440
So we're going to take in some hover data as a variable and we're going to return Jason dumps.

128
00:08:49.660 --> 00:08:54.930
And if you've worked on library before Python you know it's kind of a common function to use off the

129
00:08:54.930 --> 00:08:55.670
adjacent library.

130
00:08:55.680 --> 00:09:00.810
But basically it can take JCA like information and report it back.

131
00:09:00.830 --> 00:09:05.370
So it's essentially going to help us parse through this later on we'll say Jason that dumps the Hubbard

132
00:09:05.380 --> 00:09:10.030
data and I'm going to indent equal to two that way.

133
00:09:10.070 --> 00:09:13.120
It appears nicely on our actual dashboard.

134
00:09:13.520 --> 00:09:18.350
So because we're actually providing a parameter into this function that means we need some sort of input

135
00:09:18.440 --> 00:09:27.970
output here to connect with our app that callback will see app thoughts callback and the output we're

136
00:09:27.970 --> 00:09:30.800
going to do is we're going to send that information.

137
00:09:30.890 --> 00:09:34.390
Chase on that dumps to this pre-formatted.

138
00:09:34.570 --> 00:09:36.580
So we're going to send it to the idea of hover data

139
00:09:40.360 --> 00:09:44.370
and the property we're going to overwrite is children.

140
00:09:44.380 --> 00:09:46.210
And technically this didn't need to be prie.

141
00:09:46.210 --> 00:09:52.840
You can also mess around of other HTL things like to be frank another div or even H-1 depending on what

142
00:09:52.840 --> 00:09:55.980
stylings of each female you want that information to be displayed.

143
00:09:56.140 --> 00:09:59.690
But this performing it works pretty nice as far as displaying the simple text.

144
00:09:59.800 --> 00:10:08.720
So we'll use that and then finally we have our list where IMPA is going to go in for the input.

145
00:10:08.760 --> 00:10:16.370
We're going to grab from this graph object so that Id We gave it an idea of wheel stop stash plot so

146
00:10:16.370 --> 00:10:22.650
I'll pass that in here and then we need to decide well what's the actual property we're grabbing from

147
00:10:22.710 --> 00:10:23.990
for the input.

148
00:10:24.010 --> 00:10:29.130
Remember these are technically all properties X Y the Y the figure all that information we could technically

149
00:10:29.130 --> 00:10:29.740
grab.

150
00:10:29.940 --> 00:10:37.510
But what we're going to pass on here is hover then capital D data.

151
00:10:37.680 --> 00:10:41.450
Again notice I never actually defined hover data as a property here.

152
00:10:41.580 --> 00:10:45.870
That's just part of this graph object that I can call it without needing to define.

153
00:10:46.140 --> 00:10:52.410
So we have hover data and not to be confused that the ID we chose here for that second component.

154
00:10:52.410 --> 00:10:57.090
This hover data is a property that belongs to essentially any core component graph.

155
00:10:57.270 --> 00:11:02.310
So it's just the information that plotless is going to grab as you hover over a particular aspect of

156
00:11:02.310 --> 00:11:02.960
your plot.

157
00:11:03.120 --> 00:11:08.310
So whether it's a histogram or scatterplot plotless is going to return certain information for you as

158
00:11:08.310 --> 00:11:13.860
you hover over that particular part of your graph and that information has this property ID of hover

159
00:11:13.920 --> 00:11:16.720
data as a singular word with a capital D.

160
00:11:16.740 --> 00:11:19.570
So that's where this particular string is coming from.

161
00:11:19.590 --> 00:11:20.390
This is a string.

162
00:11:20.400 --> 00:11:22.370
You can't edit or change.

163
00:11:22.430 --> 00:11:27.750
How are these ideas or even this parameter those you can change around and make it a different string

164
00:11:27.750 --> 00:11:34.260
or different variable name the one you cannot change is the ID number data for the graph or the figure

165
00:11:36.150 --> 00:11:40.440
All right so that's really all we need to do and that should be working so let's make sure it ran correctly

166
00:11:40.440 --> 00:11:46.740
we'll say if name is equal to Main take her app and run that server let's save this.

167
00:11:46.740 --> 00:11:47.970
Make sure I don't make any typo.

168
00:11:47.970 --> 00:11:49.430
That was a lot of typing.

169
00:11:49.440 --> 00:11:55.960
Remember you can always copy and paste from are provided files or run provided files directly.

170
00:11:56.160 --> 00:11:59.180
When I run this let's expand this make sure to have a typo.

171
00:11:59.220 --> 00:12:01.550
Looks like it's running so let's head over to our dashboard.

172
00:12:01.890 --> 00:12:03.540
All right so here we are at the dashboard.

173
00:12:03.570 --> 00:12:07.550
Now if you're following along you should have gotten something that looks more or less like this.

174
00:12:07.560 --> 00:12:09.100
Notice here I have no.

175
00:12:09.120 --> 00:12:14.850
And as I hover over one of these points I get back that Jason what I need to do is actually align this

176
00:12:14.850 --> 00:12:15.680
correctly.

177
00:12:15.850 --> 00:12:20.390
Is add one more style parameter to my actual figure my figure right now.

178
00:12:20.400 --> 00:12:25.590
It's taken the entire width of my dashboard so I want to change that way to be 30 percent and then I'm

179
00:12:25.590 --> 00:12:30.440
also going to add a float left that way it only takes up 30 percent on the left hand side.

180
00:12:30.570 --> 00:12:34.290
And that should give some space for this to be over here on the right.

181
00:12:34.290 --> 00:12:35.940
So let's go back and fix that.

182
00:12:36.090 --> 00:12:42.900
OK so back here inside of the div. of that's holding the graph I'm going to if you look at this Stiv

183
00:12:43.890 --> 00:12:46.770
comeback one let's zoom in a little bit.

184
00:12:46.770 --> 00:12:47.860
So we have this live.

185
00:12:47.940 --> 00:12:50.440
Here's the princess for the live.

186
00:12:50.640 --> 00:12:54.590
I'm going to add my style dictionary here and then say the following.

187
00:12:54.750 --> 00:12:57.450
I'll set the with to be 3 percent.

188
00:12:59.240 --> 00:13:00.870
And then to line it up to the left.

189
00:13:00.920 --> 00:13:04.030
I can say float left.

190
00:13:04.310 --> 00:13:08.620
Let's save that and then rerun our dashboard and see if that fix that issue.

191
00:13:08.780 --> 00:13:10.070
All right there we go.

192
00:13:10.100 --> 00:13:14.090
And now I can see my test red blue and yellow as well as a number of wheels.

193
00:13:14.120 --> 00:13:15.360
Setting up my little grid.

194
00:13:15.560 --> 00:13:20.120
Notice how it's by default LOL returning nothing back which makes sense because I haven't hovered over

195
00:13:20.120 --> 00:13:21.130
anything yet.

196
00:13:21.170 --> 00:13:26.250
Only once I hover over do I get to see the changes to whatever the point is.

197
00:13:26.270 --> 00:13:30.170
So I get to see red to blue one etc..

198
00:13:30.170 --> 00:13:35.960
OK now let's go ahead and copy and paste some code for the notes to turn this Jason into the ability

199
00:13:35.960 --> 00:13:40.590
to actually read the correlated JPEG image from our image file.

200
00:13:40.760 --> 00:13:46.860
So essentially I just want to grab this information blue and three if I zoom in just a little bit are

201
00:13:46.940 --> 00:13:47.920
actually quite a bit.

202
00:13:48.140 --> 00:13:52.240
Notice here I have a dictionary with the key points.

203
00:13:52.340 --> 00:13:56.960
Then if a list of another dictionary inside of it with X and Y.

204
00:13:57.050 --> 00:14:03.110
So I'm going to need to be able to grab quite deeply into this nested dictionary and list combination.

205
00:14:03.110 --> 00:14:10.340
The actual information I want so I will be doing here is I will say points grab me the first item inside

206
00:14:10.340 --> 00:14:16.790
the points list which is this dictionary and the from that either grab X or Y so we'll see that happening

207
00:14:16.850 --> 00:14:20.630
inside the callback image when we edit that function and then we'll use that information.

208
00:14:20.630 --> 00:14:25.580
This blue and that number to actually grab the correct JPEG file.

209
00:14:25.580 --> 00:14:29.120
Very similar to what we did before and also similar to what we did before.

210
00:14:29.150 --> 00:14:33.260
We're going to be using that in code image function in this case since we already written it out once

211
00:14:33.260 --> 00:14:36.290
before will copy and paste it from the provided notes.

212
00:14:36.290 --> 00:14:41.150
So let's head back to that text editor and have this be turned into an image.

213
00:14:41.210 --> 00:14:41.450
All right.

214
00:14:41.450 --> 00:14:48.180
Back here at the text editor what I'm going to do now is import at the very top.

215
00:14:48.350 --> 00:14:53.020
Base 64 and we're going to need that for our encode image function.

216
00:14:53.120 --> 00:14:56.750
I'm going to copy and paste the code image from a function from the provided notes.

217
00:14:56.750 --> 00:15:01.120
Since we've actually already walk through this function in an earlier lecture.

218
00:15:01.250 --> 00:15:07.740
Basically it's just going to encode the image file so we can return it to an HMO image division.

219
00:15:07.850 --> 00:15:13.790
So instead of having this pre-formatted inside of this team I'll decide what I'm going to do now is

220
00:15:14.210 --> 00:15:23.500
inside of this div instead of having it pre formatting will say h t m l image and then we can give this

221
00:15:23.520 --> 00:15:27.630
an ID of.

222
00:15:27.860 --> 00:15:33.080
It can either be covered data or hover image as long as it sinks up with this output so it's up to you

223
00:15:33.080 --> 00:15:34.390
whatever you want to call it.

224
00:15:34.550 --> 00:15:39.930
There's the ID we need to give it a source will have default source be the string children.

225
00:15:39.950 --> 00:15:41.620
So at first it's not going to show anything.

226
00:15:41.780 --> 00:15:47.150
But then later on we're going to have particular output to give the right source.

227
00:15:47.150 --> 00:15:55.760
So then lastly let's give it a fixed height so say height of the image is equal to 300 and we can keep

228
00:15:55.760 --> 00:15:57.330
editing this style if we want.

229
00:15:57.350 --> 00:16:01.610
In this case I think the only thing here to make it look nice though we actually need is a little bit

230
00:16:01.610 --> 00:16:06.110
of padding on the top just like we did in the other style dictionary so we'll say padding on the top

231
00:16:06.260 --> 00:16:12.070
is 35 OK essentially replacing that pre H.T. melted with an image tag.

232
00:16:12.190 --> 00:16:17.590
Because we're going to be connecting the ID Hubbard data and now instead of overwriting children because

233
00:16:17.590 --> 00:16:25.360
that's text we instead want the source component source say source because we're going to send back

234
00:16:25.360 --> 00:16:29.800
a source for that image and we're going to do that within the callback image.

235
00:16:29.800 --> 00:16:35.590
So the callback image it takes in essentially that hover data remember if we don't work with that with

236
00:16:35.770 --> 00:16:40.960
Jason it's going to essentially look like a dictionary inside of a list inside of a dictionary.

237
00:16:40.960 --> 00:16:47.840
Because of that we want to grab the wheel number and the color value.

238
00:16:48.120 --> 00:16:51.900
So I'll set these up as variables and then we'll grab them.

239
00:16:52.230 --> 00:17:01.320
So grab that hover data grab that point's dictionary which contains a list to the first item in that

240
00:17:01.320 --> 00:17:07.330
list which is the dictionary itself and then we want the white key there and we'll do the same thing.

241
00:17:08.200 --> 00:17:16.750
For the color and now that we have wheel and color what it can do is set up my path and for my case

242
00:17:17.090 --> 00:17:21.500
I'm in the same directory as my data folder salsa images here forward slash.

243
00:17:21.520 --> 00:17:25.380
You may need to have to add that thought thought for it slash depending on where you're located.

244
00:17:26.470 --> 00:17:34.470
And once we have our path we're going to return in code image and we're going to pass in again using

245
00:17:34.470 --> 00:17:36.250
this we'll start see file.

246
00:17:36.270 --> 00:17:41.630
Remember that last column is actually the name of the JPEG file.

247
00:17:41.730 --> 00:17:45.540
So I'm going to copy and paste this command from our notes.

248
00:17:45.570 --> 00:17:53.040
We've seen it before and we're essentially just going to concatenate the path string with whatever the

249
00:17:53.040 --> 00:17:58.500
string and the column that relates the wheel and color to do that want to copy and paste this kind of

250
00:17:59.070 --> 00:18:00.600
really long Pandurs code.

251
00:18:00.750 --> 00:18:06.660
But essentially what this does is it says where the wheel matches up to my wheel value and where the

252
00:18:06.660 --> 00:18:09.200
color is equal to the color value.

253
00:18:09.450 --> 00:18:10.640
Where I was hovering over.

254
00:18:10.680 --> 00:18:18.150
Go ahead and grab that image column and then return that first value values index at 0 and then concatenate

255
00:18:18.150 --> 00:18:24.210
that with data images and then you'll have the file path for the image which you can then encode and

256
00:18:24.210 --> 00:18:28.340
then send back as the source for this Hover data.

257
00:18:28.350 --> 00:18:28.690
OK.

258
00:18:28.800 --> 00:18:32.650
So kind of a lot of steps there but hopefully if you break it down it makes sense to you.

259
00:18:32.850 --> 00:18:35.260
Let's save this and actually check if it works.

260
00:18:35.340 --> 00:18:38.990
Going to control see my old script and run this again.

261
00:18:39.000 --> 00:18:42.560
Looks like I have invalid syntax somewhere else and make sure I don't have an error.

262
00:18:43.020 --> 00:18:43.240
All right.

263
00:18:43.240 --> 00:18:48.660
So looks like I had a little typo here which style it's probably because I forgot some braces or brackets

264
00:18:49.050 --> 00:18:50.480
and looking at my div.

265
00:18:50.580 --> 00:18:54.510
It looks to me like I forgot to put this inside of a list itself.

266
00:18:54.510 --> 00:18:56.120
So let's do that for this div.

267
00:18:56.130 --> 00:19:00.940
In fact let's just cut this out right now so we don't mess this up.

268
00:19:01.050 --> 00:19:04.560
So there is my div there is my style.

269
00:19:04.560 --> 00:19:07.590
I once put that image inside of that again.

270
00:19:07.860 --> 00:19:13.140
And for this style We can either apply it to the outermost div or just the indiv here.

271
00:19:13.170 --> 00:19:14.150
Let's cut that out.

272
00:19:15.760 --> 00:19:23.280
Apply this innermost div and then we can make sure I don't accidentally have any extra parentheses here.

273
00:19:23.380 --> 00:19:24.510
So let's zoom out.

274
00:19:24.550 --> 00:19:26.290
I believe I do have an extra one.

275
00:19:26.440 --> 00:19:27.490
So let me save this.

276
00:19:27.490 --> 00:19:28.690
Run it again.

277
00:19:29.170 --> 00:19:30.110
Yep that's what I thought.

278
00:19:30.110 --> 00:19:33.140
I have an extra one here let's delete that.

279
00:19:33.350 --> 00:19:37.500
Save it and then we should be good to go.

280
00:19:37.520 --> 00:19:38.680
OK so it's running.

281
00:19:38.730 --> 00:19:41.430
That was just a little bit of braces or prints these issues.

282
00:19:41.460 --> 00:19:45.810
It's really easy to mess that up with plotless so always keep in mind try to break down what the actual

283
00:19:45.810 --> 00:19:46.600
problem is.

284
00:19:46.710 --> 00:19:49.680
But let's head over to our dashboard and see if we're reporting back to that image.

285
00:19:49.850 --> 00:19:50.140
OK.

286
00:19:50.130 --> 00:19:52.830
Here we are back in the dashboard now as I hover over this.

287
00:19:52.830 --> 00:19:56.900
I get to see the actual image file that correlates with whatever the scatter point.

288
00:19:56.930 --> 00:19:58.020
I'm hovering over.

289
00:19:58.020 --> 00:20:02.790
So I can see blue to blue three blue one red one and so on.

290
00:20:02.790 --> 00:20:04.380
All right I hope that was helpful to you.

291
00:20:04.530 --> 00:20:09.330
Always remember you have all the code that we showed here available to you in the cabrito as well as

292
00:20:09.330 --> 00:20:11.100
the guidebook with more explanation.

293
00:20:11.100 --> 00:20:15.330
Thanks everyone and we'll see you at the next lecture where we begin to discuss Klik data.

294
00:20:15.360 --> 00:20:16.080
We'll see you there.

