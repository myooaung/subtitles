1
00:00:05,310 --> 00:00:06,690
Welcome back everyone.

2
00:00:06,690 --> 00:00:08,770
Now it's time to talk about bubble charts.

3
00:00:09,820 --> 00:00:15,300
Bubble charts are actually very similar to scatterplot except we're now conveying a third variable's

4
00:00:15,310 --> 00:00:18,560
information through the size of the actual markers.

5
00:00:18,610 --> 00:00:21,970
So the typical scatterplot all those markers are the same size.

6
00:00:22,000 --> 00:00:27,190
What we can do for a bubble chart is connected diameter of the markers to some other feature in our

7
00:00:27,210 --> 00:00:33,330
dataset and then we can also continue to add a variable information by coloring points based off a category.

8
00:00:33,340 --> 00:00:36,880
So let's see some basic examples right now and images here.

9
00:00:36,910 --> 00:00:41,900
We have a basic plot of vehicle per gallon usage versus horsepower.

10
00:00:42,190 --> 00:00:45,510
So in a typical scatterplot all these points would be the same size.

11
00:00:45,640 --> 00:00:49,690
And right now we can just tell it right off the bat even though these axes aren't labeled along the

12
00:00:49,690 --> 00:00:51,540
y axis we have miles per gallon.

13
00:00:51,640 --> 00:00:52,880
X-Fi of horsepower.

14
00:00:52,960 --> 00:00:58,210
And as you increase horsepower your MPG ends up dropping which makes sense because you have a larger

15
00:00:58,210 --> 00:01:00,890
engine which isn't going to be as efficient.

16
00:01:00,940 --> 00:01:07,660
Now you'll also notice that the diameters themselves are larger towards the right hand side and smaller

17
00:01:07,660 --> 00:01:09,270
towards the upper left hand side.

18
00:01:09,520 --> 00:01:12,960
And that's because the diameter is going to be connected to another feature.

19
00:01:13,120 --> 00:01:17,290
In this case it was connected to represent the number of cylinders in the engine.

20
00:01:17,290 --> 00:01:22,550
So as you have more horsepower you have more cylinders I those markers are going to have a larger diameter.

21
00:01:22,720 --> 00:01:26,800
And we're actually going to dive into this particular plot in more detail by recreating it in just a

22
00:01:26,800 --> 00:01:27,410
little bit.

23
00:01:27,670 --> 00:01:32,140
But I want to show you one more example of a bubble chart which makes really clear the abilities to

24
00:01:32,140 --> 00:01:37,150
display multiple features of information on a to d image.

25
00:01:37,160 --> 00:01:42,920
So this is an example from the plotted documentation and what we see here is life expectancy per capita

26
00:01:42,920 --> 00:01:44,760
GDP from 2007.

27
00:01:44,920 --> 00:01:49,400
And if you want the code for this you can just check out the bubble chart stocks on plotless documentation

28
00:01:49,720 --> 00:01:51,950
and they have the code that goes along with this image.

29
00:01:52,010 --> 00:01:57,590
But let's see all the different features and all the information that is being displayed to the image.

30
00:01:57,590 --> 00:02:03,500
So right off the bat we can see life expectancy on the y axis and GDP per capita on the x axis and we

31
00:02:03,500 --> 00:02:08,870
can already see there's a bit of a trend between higher having higher GDP per capita and having a higher

32
00:02:08,870 --> 00:02:14,840
life expectancy which intuitively to some degree makes sense that if you have a richer country your

33
00:02:14,840 --> 00:02:17,940
people are probably more well-off and they'll probably live longer.

34
00:02:18,260 --> 00:02:24,390
But we can also see here that we've been able to group these points by categories using colors.

35
00:02:24,590 --> 00:02:29,970
So I can see the blue points for African countries orange for Americas green for Asia and so on.

36
00:02:30,290 --> 00:02:35,900
And then we add another feature of information by actually sizing these markers to some other feature.

37
00:02:35,900 --> 00:02:38,590
And in this case their size to population.

38
00:02:38,630 --> 00:02:42,890
So if you take a look right in the middle of this image you'll notice two large green points and those

39
00:02:42,890 --> 00:02:47,280
points are India and China because they have some of the largest populations in the world.

40
00:02:47,300 --> 00:02:48,640
They can really stand out.

41
00:02:48,680 --> 00:02:54,080
And so here we're getting a plethora of information we're able to see life expectancy GDP per capita

42
00:02:54,470 --> 00:02:59,320
the actual continent the countries based in and then you can also see the population.

43
00:02:59,360 --> 00:03:04,080
And if this was an interactive version of this plot you'd be able to hover over and get even more information

44
00:03:04,190 --> 00:03:06,160
when you hover over a particular point.

45
00:03:06,260 --> 00:03:10,370
So let's go ahead and explore how we can create our own charts with plot lead.

46
00:03:10,610 --> 00:03:12,140
You'll notice that it's actually quite easy.

47
00:03:12,200 --> 00:03:15,400
It's going to look a lot like a scatterplot just with an extra argument.

48
00:03:15,440 --> 00:03:17,150
As far as the marker size.

49
00:03:17,270 --> 00:03:20,010
So let's head over to our text editor and get started.

50
00:03:20,020 --> 00:03:20,320
OK.

51
00:03:20,330 --> 00:03:25,100
So we've already imported plotline off line and polygraph objects and since we're going to be using

52
00:03:25,130 --> 00:03:26,290
a real data set.

53
00:03:26,360 --> 00:03:29,180
We've gone ahead and imported pandas as PD.

54
00:03:29,210 --> 00:03:37,410
Let's read in our dataset we'll say PD read CXXVI and we'll reach toward data folder and we're going

55
00:03:37,410 --> 00:03:43,140
to grab the MPG thought CSB data file.

56
00:03:43,150 --> 00:03:44,300
Let's go ahead and print it out.

57
00:03:44,410 --> 00:03:47,120
And let's also print out the columns for this data frame.

58
00:03:47,200 --> 00:03:50,500
So we get a better understanding of what it actually represents.

59
00:03:50,500 --> 00:03:52,410
So I'm going to expand this right here.

60
00:03:52,630 --> 00:03:59,000
Call Python basic thought PI enter and check out that data frame.

61
00:03:59,050 --> 00:04:05,590
So here you'll notice we have various columns mpg cylinders displacement horsepower weight model year

62
00:04:05,650 --> 00:04:06,870
origin name.

63
00:04:07,030 --> 00:04:12,850
And if you take a little glance at the actual results when you print out the data frame you'll notice

64
00:04:12,850 --> 00:04:17,480
that essentially every row is a particular model of car for a year.

65
00:04:17,500 --> 00:04:21,360
So we have a Chevy Plymouth AMC Ford.

66
00:04:21,520 --> 00:04:26,710
So all these different model cars the years and then information about those particular cars as far

67
00:04:26,710 --> 00:04:32,380
as there are things like MPG how many cylinders they had the number of horsepower we had their acceleration

68
00:04:32,470 --> 00:04:34,250
and some metric et cetera.

69
00:04:34,480 --> 00:04:39,730
So we're just basically going to plot out this information of these actual vehicles so you can explore

70
00:04:39,730 --> 00:04:41,680
that data frame a little more if you want.

71
00:04:41,720 --> 00:04:43,750
Hopefully you get the idea what this is representing.

72
00:04:43,930 --> 00:04:45,260
And this is a very common data set.

73
00:04:45,260 --> 00:04:50,470
This mpg that we file is very proper for people who are learning our programming language as well.

74
00:04:50,870 --> 00:04:51,150
OK.

75
00:04:51,190 --> 00:04:55,720
So let's get focus now on how do we actually plot this and how do we make this into a bubble chart.

76
00:04:55,720 --> 00:05:01,000
The first thing we're going to do is set up our data list where inside of this we're going to say go

77
00:05:01,060 --> 00:05:10,980
out scatter and we need an X for our x axis we will plot out the horsepower along the x axis and then

78
00:05:10,980 --> 00:05:15,120
for the y axis we're going to do is say plot out the MPG

79
00:05:17,830 --> 00:05:21,540
and then the other parameter going to provide is text.

80
00:05:21,610 --> 00:05:27,940
So what text allows you to do it allows you to link up a column of values to what you want to display

81
00:05:28,030 --> 00:05:30,260
when you're hovering over something with your cursor.

82
00:05:30,490 --> 00:05:36,010
So for example right now were just to hover over without specifying text it would by default giving

83
00:05:36,010 --> 00:05:37,490
back the y value.

84
00:05:37,540 --> 00:05:43,780
But let's imagine that I actually want it to show the model of the car or in instance the name of the

85
00:05:43,780 --> 00:05:44,510
car.

86
00:05:44,650 --> 00:05:47,200
I could say the F name.

87
00:05:47,350 --> 00:05:52,660
And when you're hovering over something it's going to display the name of the actual model of car that

88
00:05:52,660 --> 00:05:54,100
that marker represents.

89
00:05:54,280 --> 00:05:58,690
So that's what you can use text for whole play around that a little further in just a second.

90
00:05:58,960 --> 00:06:04,190
But then we're also going to provide mode equals markers just like we did for the normal scatterplot

91
00:06:05,200 --> 00:06:07,540
and then to make this into a bubble chart.

92
00:06:07,750 --> 00:06:12,810
But we need to do is call a marker and then we're going to pass in a dictionary.

93
00:06:12,880 --> 00:06:17,380
And as always you can decide what style of dictionary you like will stick with the plotless style which

94
00:06:17,380 --> 00:06:24,790
is actually called the ICC function and we'll set the size equal to some column value.

95
00:06:24,790 --> 00:06:30,500
So in this case let's start off by plotting based off the cylinders.

96
00:06:30,580 --> 00:06:38,630
So the cylinder's column if we take a closer look at it it looks like it's going to be for 8 or 6.

97
00:06:38,630 --> 00:06:44,510
So here we can see the cylinder's And that's basically going to Coralee a value for this column to the

98
00:06:44,510 --> 00:06:46,440
actual diameter of the marker.

99
00:06:46,490 --> 00:06:52,310
And if these are pretty small values what you may want to do is really show the difference by multiplying

100
00:06:52,730 --> 00:06:56,710
that value by some sort of integer unit.

101
00:06:56,720 --> 00:07:02,240
So you can double it because remember we're not actually going to be displaying the cylinder information.

102
00:07:02,270 --> 00:07:06,080
Instead what we're displaying is just the relevant size.

103
00:07:06,170 --> 00:07:08,700
So you can see that some markers of more Sillars are going to be larger.

104
00:07:08,750 --> 00:07:14,010
So if you want to really make that difference more obvious you can multiply by the cylinder's.

105
00:07:14,180 --> 00:07:19,310
However if you have a really large value for example if you're going to plot marker size based on the

106
00:07:19,310 --> 00:07:24,530
weight of the car if you take a look at the weight of the car that's actually already in the thousands

107
00:07:24,530 --> 00:07:25,190
itself.

108
00:07:25,190 --> 00:07:29,930
So for this sort of thing you may want to make it smaller since it's basically translating that into

109
00:07:29,930 --> 00:07:32,720
pixel pixels for the ammeter.

110
00:07:32,750 --> 00:07:33,840
All right.

111
00:07:34,020 --> 00:07:35,010
So we have our data.

112
00:07:35,160 --> 00:07:37,510
Let's go ahead and define our lay out.

113
00:07:37,560 --> 00:07:47,200
So right now we'll just say go lay out and we're going to set the title equal to but will chert and

114
00:07:47,200 --> 00:07:50,080
let's plot this out will create or figure object.

115
00:07:50,080 --> 00:07:52,000
So go figure.

116
00:07:52,060 --> 00:08:02,470
Pasan data equals data and layout equals Leo and then we'll save the bio plot that figure and you can

117
00:08:02,470 --> 00:08:04,930
always provide a file name if you want.

118
00:08:04,930 --> 00:08:08,380
So right now we create our simple data and this looks a lot like scatterplot.

119
00:08:08,380 --> 00:08:10,460
We just introduced a couple more things.

120
00:08:10,540 --> 00:08:14,350
The fact that we can choose what text we want to display when you're hovering over something and the

121
00:08:14,350 --> 00:08:19,910
fact that we can set the marker size for the diameter based off a column of information here.

122
00:08:19,960 --> 00:08:23,350
So let's plot this out by calling Python basic that pi.

123
00:08:23,400 --> 00:08:29,710
Hit enter and you should get a new plot in your browser pop up this template here and we can already

124
00:08:29,710 --> 00:08:32,720
see that we get the same thing that we just saw from before.

125
00:08:32,800 --> 00:08:37,050
And as you hover over this you'll also notice that you get information about the actual car models.

126
00:08:37,060 --> 00:08:41,950
If I zoom in for you guys you'll notice as I'm hovering over it might be a little small on your screen

127
00:08:42,310 --> 00:08:44,590
but if you view this on your own computer you'll be able to see it.

128
00:08:44,710 --> 00:08:49,820
I can see here Pontiac Grand Prix seems to be the worst performing car as far as mpg.

129
00:08:49,990 --> 00:08:52,220
And I had a Pontiac so I can attest to that.

130
00:08:52,240 --> 00:08:59,420
So let me close this and let's try experimenting with setting the bubble chart size to some other value.

131
00:08:59,460 --> 00:09:04,740
So as I mentioned we could choose the weight of the car so the weight of the car is actually quite large

132
00:09:04,800 --> 00:09:05,610
for the value.

133
00:09:05,820 --> 00:09:11,980
So let's go ahead and divide that by 100 That way we don't get these huge marker sizes.

134
00:09:12,080 --> 00:09:17,610
So we're going to say weights and I want to divide this by 100.

135
00:09:17,660 --> 00:09:21,040
Let's save that and run this again Python basic that pie.

136
00:09:21,230 --> 00:09:25,580
And this is something you sometimes have to experiment with as far as finding the right integer value

137
00:09:25,580 --> 00:09:27,670
to multiply by or divide by.

138
00:09:27,890 --> 00:09:32,400
And if you were just a passing weight by itself here you actually might get a blink chart because the

139
00:09:32,410 --> 00:09:34,620
diameters may be too big for poly to show.

140
00:09:34,790 --> 00:09:38,210
So keep that in mind if you're getting issues with the sizing of your markers.

141
00:09:38,210 --> 00:09:43,310
Play around with either multiplying it so it's larger or dividing it so it's smaller.

142
00:09:43,310 --> 00:09:45,310
So we'll run Python basic pie here.

143
00:09:45,440 --> 00:09:48,470
And you should see a plot that looks something like this.

144
00:09:48,540 --> 00:09:50,810
You can experiment with foot sizing you prefer.

145
00:09:50,930 --> 00:09:57,020
You'll notice we get the heavier cars towards the lower MPG and the lighter cars towards the more or

146
00:09:57,020 --> 00:10:02,160
excuse me heavy occurs have less mpg and the lighter cars have more MPG which makes sense.

147
00:10:02,170 --> 00:10:03,010
Have your car.

148
00:10:03,040 --> 00:10:04,620
Going to take more gasoline to move it.

149
00:10:04,790 --> 00:10:11,710
So here we're actually displaying a lot of information very nicely in our bubble chart Altes experiment

150
00:10:11,710 --> 00:10:15,720
by adding in a category of data such as those cylinder values.

151
00:10:15,790 --> 00:10:20,500
So for categories like cylinders where we're going to have only a few categories we're going to try

152
00:10:20,500 --> 00:10:26,330
to color by the actual cylinders to display one more level of information here to move this back and

153
00:10:26,350 --> 00:10:27,230
just close this.

154
00:10:27,400 --> 00:10:33,100
OK so let's add in a color column and we're going to do that inside our marker dictionary.

155
00:10:33,250 --> 00:10:36,900
So we're going to add a couple more lines here and be careful here Princess here.

156
00:10:36,910 --> 00:10:41,590
Remember one of these princes is for the scatter call and another princess here is for the dictionary

157
00:10:41,590 --> 00:10:45,210
call and we're going to do is inside of this dictionary.

158
00:10:45,400 --> 00:10:48,150
We're going to add in another call here.

159
00:10:48,160 --> 00:10:51,490
We're going to say color and set that equal to the column.

160
00:10:51,670 --> 00:10:53,430
And you can play around with this and experiment.

161
00:10:53,500 --> 00:10:58,520
We'll start off with cylinder's save that and let's check out what that looks like.

162
00:10:58,520 --> 00:11:05,600
We'll say Python they set up PI enter and then you should see now colored by the number of cylinders.

163
00:11:05,600 --> 00:11:10,680
So if you take a look at this you now see that the cild their colors have been displayed as well.

164
00:11:10,730 --> 00:11:16,610
So now we're getting a lot of information we're getting the weight of the car cylinder information mpg

165
00:11:16,610 --> 00:11:18,380
information and the horsepower.

166
00:11:18,410 --> 00:11:22,370
So you getting a ton of information for features worth on just a to the plot.

167
00:11:22,400 --> 00:11:28,490
So it's pretty interesting use of how you can use color size of the markers and just the normal x and

168
00:11:28,490 --> 00:11:35,120
y axis to display a lot of information to your users and sometimes what people like to do is also add

169
00:11:35,120 --> 00:11:36,710
in a scale bar here.

170
00:11:36,770 --> 00:11:39,530
And luckily Polly actually makes that pretty easy.

171
00:11:40,100 --> 00:11:45,820
And we need to do is again inside of this marker dictionary after size and after Add in and color.

172
00:11:45,830 --> 00:11:52,490
Well we're also going to do here and we can add in show scale is equal to true.

173
00:11:52,730 --> 00:11:53,310
Save that.

174
00:11:53,300 --> 00:11:54,890
Make sure that's all inside the dictionary.

175
00:11:54,890 --> 00:11:57,060
Be careful of your princes here.

176
00:11:57,100 --> 00:12:02,380
And if you run that again we should now see a scale pop up showing the number of cylinders.

177
00:12:02,780 --> 00:12:07,790
So here you can see towards the top range of eight cylinders and towards the bottom we have three cylinders.

178
00:12:07,890 --> 00:12:10,880
Even though I only see a few three sell their cars here which is kind of interesting when you think

179
00:12:10,880 --> 00:12:15,200
about the actual numbers cylinders to have that kind of double checked this data make sure that's actually

180
00:12:15,200 --> 00:12:15,930
correct.

181
00:12:16,040 --> 00:12:21,450
But that's how you can easily add in a color bar to tell you what the colors actually represent.

182
00:12:21,860 --> 00:12:22,250
All right.

183
00:12:22,250 --> 00:12:24,160
That's it for basic bubble charts.

184
00:12:24,170 --> 00:12:28,940
You can check out the notes because we also provide a little more information if you want to group together

185
00:12:28,970 --> 00:12:30,240
different text columns.

186
00:12:30,380 --> 00:12:35,390
It's simply adding the text columns together so you can get a longer string when you're hovering over.

187
00:12:35,390 --> 00:12:40,310
There's also other options like hover mode to choose what actually gets displayed when you're hovering

188
00:12:40,310 --> 00:12:43,130
over something or really not what gets displayed.

189
00:12:43,130 --> 00:12:45,380
But what actual marker gets chosen.

190
00:12:45,380 --> 00:12:48,110
Sometimes it defaults to why sometimes it defaults to x.

191
00:12:48,110 --> 00:12:51,100
So you can play around with the options on their layout.

192
00:12:51,120 --> 00:12:58,660
We can do is say hover mode is equal to and there's various parameters you can choose.

193
00:12:58,820 --> 00:13:04,630
You can choose X to try to hover over the closest X to your cursor hover mode over Y.

194
00:13:04,650 --> 00:13:09,680
So based off the y position of the cursor hover over that and then there's also closest or it tries

195
00:13:09,680 --> 00:13:14,480
to determine what the closest marker next to your cursor is and it's going to display information off

196
00:13:14,480 --> 00:13:15,920
of that particular marker.

197
00:13:15,920 --> 00:13:19,040
So experiment hover mode and see what works best for you.

198
00:13:19,040 --> 00:13:21,730
It's usually going to depend on where you're trying to convey.

199
00:13:21,740 --> 00:13:22,250
OK.

200
00:13:22,340 --> 00:13:24,250
So again hope to those useful information.

201
00:13:24,290 --> 00:13:28,880
Really we're just working on top of what we already know about the scatterplot by adding in a dictionary

202
00:13:28,910 --> 00:13:32,650
for the marker and you're going to see that a lot in this course when you're working if slightly.

203
00:13:32,720 --> 00:13:38,450
They can really hone in on specifics by adding in dictionaries to specific parameters inside your pluck

204
00:13:38,450 --> 00:13:39,160
call.

205
00:13:39,460 --> 00:13:39,970
OK.

206
00:13:40,180 --> 00:13:40,880
Are you on.

207
00:13:40,880 --> 00:13:44,060
If you have any questions feel free to post the Q&amp;A forums.

208
00:13:44,060 --> 00:13:45,050
We'll see at the next lecture.

