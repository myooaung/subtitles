WEBVTT
ï»¿1
00:00:05.310 --> 00:00:10.460
Welcome back everyone to the series of lectures on live updating with your dashboards.

2
00:00:10.770 --> 00:00:15.330
We've already explored various methods of interacting of our graphs but we still don't know how to work

3
00:00:15.330 --> 00:00:17.550
for changing or updating data source.

4
00:00:17.580 --> 00:00:20.910
So far our data sources have been static files.

5
00:00:20.950 --> 00:00:26.700
All we can do is use the dash core component interval to have the dashboard update itself after a certain

6
00:00:26.700 --> 00:00:27.630
amount of time.

7
00:00:28.530 --> 00:00:32.430
Let's explore this first through a simple example of refreshing the page automatically.

8
00:00:32.670 --> 00:00:37.500
Then we're going to build off this concept to web script live data from a web site and incorporate that

9
00:00:37.740 --> 00:00:39.000
into our dashboard.

10
00:00:39.000 --> 00:00:45.610
Let's get started with the simple example first OK before we invoke the interval component from Dasch

11
00:00:45.640 --> 00:00:49.500
core components let's consider updating on a page to load.

12
00:00:49.600 --> 00:00:59.440
We're going to do now is we're going to import Dasch and also import dash HTL components as HTL then

13
00:00:59.440 --> 00:01:09.320
we'll say app is equal to dash dash and we're going to set crash underscore free just a variable equal

14
00:01:09.320 --> 00:01:10.190
to zero.

15
00:01:10.700 --> 00:01:12.880
And then we'll add one to this.

16
00:01:12.890 --> 00:01:20.890
So it costs underscore free isn't equal to crash on or square free plus one.

17
00:01:21.100 --> 00:01:28.760
And then we'll say app thought lay out is equal to each T.M. Hetter one and we're going to have the

18
00:01:28.760 --> 00:01:39.280
following string crash free for refreshes then we're just going to say that format and we're going to

19
00:01:39.280 --> 00:01:41.000
say crash free.

20
00:01:41.020 --> 00:01:46.450
So basically what happens here we create our data application set this to zero at once so then crash

21
00:01:46.450 --> 00:01:49.570
free is equal to 1 and you'll see why we set it up like this later on.

22
00:01:49.690 --> 00:01:54.340
And then we just print out it's been crash free for blank refreshes then we're going to do at the end

23
00:01:54.340 --> 00:02:10.350
of all this just run if main or whoops if name is equal to main app run server.

24
00:02:10.460 --> 00:02:12.090
Let's run this and see what happens.

25
00:02:13.890 --> 00:02:19.020
I thought basic but PI enter and let's head to the dashboard.

26
00:02:19.030 --> 00:02:19.280
All right.

27
00:02:19.280 --> 00:02:25.040
So notice it says crash free for one refreshes makes sense since we set that crash free variables equal

28
00:02:25.040 --> 00:02:25.800
to 1.

29
00:02:25.820 --> 00:02:29.330
But when I refresh this notice that number is not changing.

30
00:02:29.330 --> 00:02:32.950
So it doesn't matter if my refresh this a million times.

31
00:02:33.110 --> 00:02:35.140
It's always going to stay as one.

32
00:02:35.180 --> 00:02:40.580
So we're going to do now is create a function that will actually allow us to update this when we refresh

33
00:02:40.730 --> 00:02:44.720
and then we'll show you how you can use the interval component to have dashboard refresh automatically

34
00:02:44.960 --> 00:02:47.860
without you having to constantly click this refresh button.

35
00:02:47.870 --> 00:02:49.910
So let's go back to that text editor.

36
00:02:49.910 --> 00:02:50.120
All right.

37
00:02:50.120 --> 00:02:54.560
Coming back to the text editor it makes sense that refreshing this didn't change anything because right

38
00:02:54.560 --> 00:02:59.230
now crash free getting a plus one it's just happening immediately after zero.

39
00:02:59.330 --> 00:03:02.540
And there's no connection here to actually refreshing the page.

40
00:03:02.540 --> 00:03:07.750
So instead we're going to do it right after we set crash free equal to zero.

41
00:03:07.760 --> 00:03:10.990
We're going to say creative function refresh.

42
00:03:11.080 --> 00:03:13.140
Leo.

43
00:03:13.210 --> 00:03:15.760
It's not going to take any parameters what it's going to do.

44
00:03:15.880 --> 00:03:19.420
It's going to grab the global crash free variable.

45
00:03:19.450 --> 00:03:24.610
Essentially what I mean by global is this variable outside of the function and then it's going to do

46
00:03:24.610 --> 00:03:26.770
this command add one to crash free.

47
00:03:26.920 --> 00:03:31.930
And just to keep in mind this equals crash free plus one this can also be rewritten as.

48
00:03:32.170 --> 00:03:32.980
Plus equals.

49
00:03:32.980 --> 00:03:33.940
So we'll keep it that way.

50
00:03:33.950 --> 00:03:35.070
So it's a little shorter.

51
00:03:35.410 --> 00:03:40.390
So we're going to Wences functions called then we're going to add one to crash free and we're actually

52
00:03:40.390 --> 00:03:44.140
then going to return what we previously wrote as a.

53
00:03:44.170 --> 00:03:49.570
We're going to return this h tim l H-1 crash free for whatever it refreshes.

54
00:03:49.570 --> 00:03:56.370
That will set the layout equal to calling that function we're actually just the function itself refresh

55
00:03:56.380 --> 00:03:56.710
layout.

56
00:03:56.760 --> 00:03:59.340
No I'm not having open close princess here.

57
00:03:59.340 --> 00:04:01.260
I'm just setting it to the layout.

58
00:04:01.500 --> 00:04:03.450
So what does it actually mean.

59
00:04:03.450 --> 00:04:07.980
Well it means that every time we refresh our dashboard we're going to be calling.

60
00:04:08.010 --> 00:04:09.740
What's the current application layout.

61
00:04:09.990 --> 00:04:15.120
And then that's going to end up executing refresh layout meaning we add one to the global crash free

62
00:04:15.180 --> 00:04:19.240
variable value and then you'll see this update.

63
00:04:19.320 --> 00:04:21.730
So let's save this and see if that worked.

64
00:04:21.780 --> 00:04:24.390
We're going to restart our dashboard.

65
00:04:24.780 --> 00:04:26.220
Let's head over to it now.

66
00:04:26.220 --> 00:04:30.660
All right here I am at my dashboard and you'll notice that as I'm refreshing this now the numbers actually

67
00:04:30.660 --> 00:04:36.660
changing and that's because we're returning that function instead of just a single value.

68
00:04:36.660 --> 00:04:40.990
So you see you keep refreshing this you actually get 19 20 and so on.

69
00:04:41.010 --> 00:04:45.630
Now what we're going to do is show you how you can use the interval component to actually call that

70
00:04:45.630 --> 00:04:48.290
refresh automatically from within your script.

71
00:04:48.420 --> 00:04:51.350
So let's head back and use DCC interval.

72
00:04:51.600 --> 00:04:53.610
OK here we are back at our script.

73
00:04:53.680 --> 00:05:00.770
We're going to do is say import Dasch core components as DCC.

74
00:05:01.290 --> 00:05:10.620
And then we also say from dasht dependencies in poor input and output OK there we go.

75
00:05:10.770 --> 00:05:17.460
And we set up our application and will we're going to do now is we can actually get rid of this function

76
00:05:17.460 --> 00:05:23.510
since we won't be using it anymore and we'll get rid of this crash free as well and set this more to

77
00:05:23.570 --> 00:05:29.980
something we've been working with before which is set the layout to a div inside the Stiv.

78
00:05:29.980 --> 00:05:39.310
We're going to have a header that just says Team l H-1 and we'll give this the ID of a live update.

79
00:05:39.310 --> 00:05:48.690
Text and then the second thing inside this division is going to be the interval core components so we

80
00:05:48.690 --> 00:05:49.890
need to get the snidey.

81
00:05:50.070 --> 00:05:55.140
We'll call this the interval components.

82
00:05:55.360 --> 00:05:57.970
And then you can decide on the interval parameter.

83
00:05:58.240 --> 00:06:02.440
So the interval parameter that is the number of milliseconds you want to wait before you refresh your

84
00:06:02.440 --> 00:06:03.560
dashboard.

85
00:06:03.550 --> 00:06:11.200
So two thousand milliseconds is equal to two seconds and then we can set the number of intervals to

86
00:06:11.200 --> 00:06:12.670
default to zero.

87
00:06:12.700 --> 00:06:20.270
So no intervals have passed when we first run the dashboard OK then we're going to do down here is we're

88
00:06:20.270 --> 00:06:29.080
going to create a function called up they lay out gets taken and which we've seen a second what it is.

89
00:06:29.440 --> 00:06:37.330
And basically it's just going to return crash free for what we had before refreshes.

90
00:06:37.690 --> 00:06:40.590
And then we'll format the end value.

91
00:06:40.670 --> 00:06:46.430
So we're going to use a callback to actually provide an output here we'll say app or I should say input

92
00:06:46.940 --> 00:06:54.760
say an app that callback output we're gonna grab or send to the output.

93
00:06:54.760 --> 00:06:56.590
The Live Update text.

94
00:06:56.620 --> 00:06:57.740
So that's what we want to change.

95
00:06:57.790 --> 00:07:00.280
Let's copy this paste as the output.

96
00:07:00.370 --> 00:07:05.860
And since we just wanted to change the text that's going to be children as it's ID then for the input.

97
00:07:05.860 --> 00:07:13.950
Remember this goes in as a list will say input interval components

98
00:07:17.290 --> 00:07:19.680
and then we're going to grab is the number of intervals.

99
00:07:19.810 --> 00:07:27.110
So that's the property that we're working with so we're passing in the number of intervals that this

100
00:07:27.180 --> 00:07:29.100
interval component has gone through.

101
00:07:29.100 --> 00:07:34.600
So first it's going to say crash free zero refreshes and then every interval in this case two seconds.

102
00:07:34.740 --> 00:07:37.560
It's going to update this to the number of intervals that have passed.

103
00:07:37.710 --> 00:07:42.030
So then I'll say one two and three every two seconds will be updating.

104
00:07:42.150 --> 00:07:44.430
And that's essentially how the interval component works.

105
00:07:44.430 --> 00:07:48.180
You basically choose the interval time and then the number of intervals.

106
00:07:48.180 --> 00:07:53.630
Usually the default 0 and you can then use that to update your page.

107
00:07:53.750 --> 00:07:54.440
OK.

108
00:07:54.510 --> 00:07:59.540
And as I just want to quickly mention here you don't need to pass in number intervals or report it.

109
00:07:59.580 --> 00:08:05.330
You can just have some other action occur for every interval kind of the same way for an underscore.

110
00:08:05.330 --> 00:08:09.420
Clicks don't necessarily need to use an underscore clicks in your actual function.

111
00:08:09.450 --> 00:08:13.320
You just need to pass it in in order to connect it to some button state call.

112
00:08:13.740 --> 00:08:17.470
Let's save this and run this going to restart my dashboard.

113
00:08:17.480 --> 00:08:19.710
I'm basic but pie and looks like it's running.

114
00:08:19.710 --> 00:08:25.350
Let's head over to the dashboard here dashboard and every two seconds you'll end up seeing it automatically

115
00:08:25.350 --> 00:08:28.440
update to 3 to 4 and so on.

116
00:08:28.440 --> 00:08:32.410
You can see from a mouse I'm no longer manually clicking that refresh button.

117
00:08:32.430 --> 00:08:34.570
So that's how the interval component works.

118
00:08:34.590 --> 00:08:38.520
That's really the basics of all you need to know about updating in the next lecture or we're going to

119
00:08:38.730 --> 00:08:43.890
show you a more realistic example where we actually scrape data at a certain interval in order to update

120
00:08:43.920 --> 00:08:45.190
our dashboard.

121
00:08:45.210 --> 00:08:46.620
We'll see you there at the next lecture.

122
00:08:46.620 --> 00:08:49.110
Feel free to check out the guidebook for any questions.

