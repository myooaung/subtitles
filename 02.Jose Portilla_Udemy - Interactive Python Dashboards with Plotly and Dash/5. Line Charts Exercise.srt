1
00:00:05,320 --> 00:00:06,690
Welcome back everyone.

2
00:00:06,700 --> 00:00:08,880
Now that we know how to create light charts of plotless.

3
00:00:09,040 --> 00:00:11,540
Let's test your new skills for quick exercise.

4
00:00:11,770 --> 00:00:16,150
In this lecture we'll have an overview of the exercise that PI strip and then we'll also explain the

5
00:00:16,160 --> 00:00:17,930
dataset you're going to be using.

6
00:00:17,980 --> 00:00:21,330
After that we'll show an example of what the finished exercise should look like.

7
00:00:21,460 --> 00:00:24,440
As far as the team I'll file that in the next lecture.

8
00:00:24,460 --> 00:00:25,840
We'll go over the solution.

9
00:00:25,840 --> 00:00:26,610
Let's get started.

10
00:00:26,770 --> 00:00:33,040
OK so here we are at the exercise for the line chart lifestyle and we need to do here is you're going

11
00:00:33,040 --> 00:00:39,850
to be using the 2010 Asie that CSC file which is a file containing some information about the temperatures

12
00:00:39,940 --> 00:00:41,660
in Yuma Arizona in 2010.

13
00:00:41,890 --> 00:00:46,030
And you're going to develop a white shirt that plots out seven days worth of temperature data on one

14
00:00:46,030 --> 00:00:51,280
craft and you can use a for loop to assign each day to its own trace and you cannot do that with a list

15
00:00:51,280 --> 00:00:53,770
comprehension as we've done in the past.

16
00:00:53,770 --> 00:00:58,570
So you're going to do your imports then you're going to create a panel the state of Freyne from this

17
00:00:58,570 --> 00:01:00,670
2010 human ACTC file.

18
00:01:00,670 --> 00:01:01,950
It's in the data folder.

19
00:01:02,020 --> 00:01:06,730
We've also created a list of days for you for your convenience and then it's up to you how you want

20
00:01:06,730 --> 00:01:07,230
to do this.

21
00:01:07,240 --> 00:01:12,460
You can either use a for loop or a list comprehension to create the Trace's that is going to go inside

22
00:01:12,460 --> 00:01:14,010
that list for that data.

23
00:01:14,830 --> 00:01:16,990
So here it kind of set up a skeleton for you.

24
00:01:16,990 --> 00:01:22,510
We have data is equal to an empty list and then for day in days that's Tuesday Wednesday Thursday and

25
00:01:22,510 --> 00:01:23,460
so on.

26
00:01:23,680 --> 00:01:25,790
You should be creating a scatter trace.

27
00:01:25,840 --> 00:01:28,590
And remember you need ads are and thinks this to make it hurt.

28
00:01:28,780 --> 00:01:31,580
Then you can append that particular trace to your data list.

29
00:01:31,840 --> 00:01:35,360
Then you can find the layout and create a figure from that data and the layout.

30
00:01:35,600 --> 00:01:38,890
So let's quickly show you what we would expect the finished product to look like.

31
00:01:39,130 --> 00:01:43,060
And then we can also describe this dataset in a little more detail for you.

32
00:01:43,060 --> 00:01:46,330
So first off let's see what that finished product of likely.

33
00:01:46,330 --> 00:01:46,720
All right.

34
00:01:46,780 --> 00:01:51,400
So once you've actually run your script the solution file should look something like this.

35
00:01:51,400 --> 00:01:54,240
Here you can see a separate color line for each day.

36
00:01:54,280 --> 00:01:56,410
Tuesday Wednesday Thursday and so on.

37
00:01:56,560 --> 00:02:01,470
And then we still see on the X-axis the time in on the Y-axis is the temperature.

38
00:02:01,510 --> 00:02:06,520
So we're basically showing you over these seven days how the temperature tends to go down during the

39
00:02:06,520 --> 00:02:10,370
early mornings and then tends to peak around mid afternoon.

40
00:02:10,690 --> 00:02:15,730
So now it's described to state in just a little more detail to help you out and figure out what columns

41
00:02:15,730 --> 00:02:18,030
are going to be relevant for this sort of plot.

42
00:02:18,300 --> 00:02:18,620
OK.

43
00:02:18,640 --> 00:02:24,370
So if you read in that data frame in the 2010 Yuma Arizona that see every file you should see something

44
00:02:24,370 --> 00:02:25,510
that looks like this.

45
00:02:25,540 --> 00:02:27,000
We have elist dates.

46
00:02:27,040 --> 00:02:29,720
So that's the actual dates of the row.

47
00:02:29,920 --> 00:02:32,370
Then we have the day that's the day of the week Tuesday.

48
00:02:32,500 --> 00:02:35,330
We have elist tea time which is the actual time.

49
00:02:35,470 --> 00:02:39,750
And then t our average which is the average temperature for that hour.

50
00:02:39,850 --> 00:02:44,680
And essentially what this is saying is that you have the day of the week you have that last time noted

51
00:02:44,680 --> 00:02:45,070
there.

52
00:02:45,070 --> 00:02:48,010
And then you have the hourly average temperature.

53
00:02:48,010 --> 00:02:52,440
So the hourly average temperature that's where you're going to want to be using for that Y-axis the

54
00:02:52,450 --> 00:02:57,040
time that's going to be the x axis and then you're going to want to use this date column in order to

55
00:02:57,040 --> 00:03:01,250
actually figure out what day of the week for each separate trace.

56
00:03:01,270 --> 00:03:05,690
And we've kind of already set that framework for you with that day's list up here that we set up.

57
00:03:05,710 --> 00:03:07,150
And with that for a loop as well.

58
00:03:08,310 --> 00:03:11,990
So in general you won't really be needing to use this elist date column.

59
00:03:12,090 --> 00:03:17,230
You should only really be needing to use day Pelosi time and T or temp hour average.

60
00:03:17,430 --> 00:03:23,790
And then you should be able to use some sort of conditional filtering such as Day column equal to equal

61
00:03:23,790 --> 00:03:29,550
to the specific day and then grab the T hour or temp our average.

62
00:03:29,730 --> 00:03:31,930
So there's going to be a little bit of pantless there.

63
00:03:32,100 --> 00:03:36,480
And if you're stuck on that go ahead and check out the solution lecture are going to describe in more

64
00:03:36,480 --> 00:03:40,300
detail how you can separate by day.

65
00:03:40,370 --> 00:03:40,720
OK.

66
00:03:40,780 --> 00:03:43,210
If you have any questions feel free to post the community forum.

67
00:03:43,260 --> 00:03:45,140
But again this is what the dataset looks like.

68
00:03:45,210 --> 00:03:47,840
You're really only going to be needing these three columns.

69
00:03:47,920 --> 00:03:52,920
Please do a little bit of Panas work in order to get the trace data that you need for each of those

70
00:03:52,980 --> 00:03:54,120
seven days.

71
00:03:54,120 --> 00:03:57,500
Best of luck and we'll see at the next lecture where we go over the solutions.

