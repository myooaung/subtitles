1
00:00:05,210 --> 00:00:07,150
Welcome back everyone in this lecture.

2
00:00:07,160 --> 00:00:09,980
We're going to go over the exercises for the crash course.

3
00:00:10,160 --> 00:00:13,970
This is just going to be a trip for a few simple tasks for you to fill out.

4
00:00:13,970 --> 00:00:18,760
Just to test your knowledge of non-time pandas recall that we don't need to know in-depth pandas and

5
00:00:18,770 --> 00:00:19,350
and.

6
00:00:19,580 --> 00:00:23,950
Instead we just need to know enough to continue on to learn about partly and partly.

7
00:00:24,290 --> 00:00:27,080
Let's get started by opening up the PI script.

8
00:00:27,080 --> 00:00:33,110
So if you go to crash course exercises folder you'll see that there's two pi scripts one is Crash Course

9
00:00:33,110 --> 00:00:39,050
review exercises that pi and the other is Crash Course review exercises solutions that pi which contains

10
00:00:39,050 --> 00:00:41,930
the solutions which are going to go over in the very next lecture.

11
00:00:41,930 --> 00:00:44,620
Let's start by opening up the exercises up by file.

12
00:00:44,690 --> 00:00:48,490
Ok so when you open up the exercises that py file it's going to look like this.

13
00:00:48,590 --> 00:00:53,210
You'll notice it's essentially just a bunch of comments with descriptions of the tasks you need to complete.

14
00:00:53,360 --> 00:00:56,400
So task number one is to import pandas and some pie.

15
00:00:56,510 --> 00:01:00,970
Task Number two is the setting umpiring the number generator to be at the seat of 101.

16
00:01:00,980 --> 00:01:06,140
Like we showed on the lecture then we want you to create a name PI matrix of 100 rows by five columns

17
00:01:06,620 --> 00:01:13,510
consisting of random integers from 1 to 100 then task number four is to use P-T that data frame to read

18
00:01:13,570 --> 00:01:17,870
in that non-pilot data frame from task number 3 as a Panas data frame.

19
00:01:17,890 --> 00:01:21,970
So all you need to do is simply pass in that Ampyra into that particular function.

20
00:01:21,970 --> 00:01:25,160
PD that data frame to get back to data frame remember.

21
00:01:25,170 --> 00:01:26,410
Just like we shouldn't lecture.

22
00:01:26,410 --> 00:01:32,580
The columns are going to be auto labeled Zureda for then test number five is to use your previously

23
00:01:32,580 --> 00:01:35,280
created data frame and rename the columns.

24
00:01:35,430 --> 00:01:40,050
And there's a hint here in case you can't figure out on your own how to actually rename columns and

25
00:01:40,050 --> 00:01:45,780
pandas you should be able to do this all in one line by using the dot columns as equal to some sort

26
00:01:45,780 --> 00:01:46,430
of list.

27
00:01:46,590 --> 00:01:51,150
So we want you to rename the columns to this list of names so you can go ahead and check out that link

28
00:01:51,210 --> 00:01:52,220
in case you need another hint.

29
00:01:52,230 --> 00:01:54,070
But it should be pretty straightforward.

30
00:01:54,120 --> 00:01:58,440
And then finally your last task number six is to basically combine all the other tasks.

31
00:01:58,440 --> 00:02:02,370
So the final task is going to lie to quickly check to see if you're at the right level.

32
00:02:02,370 --> 00:02:08,820
We want you to create a data frame with the columns A B C and D where each column has 50 rows of random

33
00:02:08,820 --> 00:02:13,140
numbers for data in the random numbers should be between 0 and 100.

34
00:02:13,140 --> 00:02:16,440
So just a hint as far as what steps to take here for that last task.

35
00:02:16,560 --> 00:02:21,900
Use them pieds create the numbers Pasadena's PD that data frame and then remember you can use data equals

36
00:02:21,980 --> 00:02:25,670
an index equal parameters in that PD that data and call.

37
00:02:26,010 --> 00:02:26,500
OK.

38
00:02:26,730 --> 00:02:28,650
That's really all there is to it.

39
00:02:28,650 --> 00:02:30,630
Remember this should be pretty straightforward tasks.

40
00:02:30,630 --> 00:02:33,720
So if you're able to zip right through them that's a good sign.

41
00:02:33,840 --> 00:02:38,590
If you're struggling a little bit make sure you check out the next lecture where we go over the solutions.

42
00:02:38,580 --> 00:02:39,820
Thanks and we'll see you there.

