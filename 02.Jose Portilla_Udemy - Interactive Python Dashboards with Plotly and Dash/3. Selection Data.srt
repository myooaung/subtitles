1
00:00:05,450 --> 00:00:06,260
Welcome back.

2
00:00:06,260 --> 00:00:09,140
We just saw how to use hover data and click data.

3
00:00:09,140 --> 00:00:13,370
Now it's time to switch up the code for select the data we're going to quickly show an example of how

4
00:00:13,370 --> 00:00:17,550
selected data can work on that bicycle dashboard that we've been working with.

5
00:00:17,690 --> 00:00:22,700
But then we're going to expand that to create a new dashboard where we can actually detect the density

6
00:00:22,850 --> 00:00:25,770
inside of a box on our scatterplot.

7
00:00:25,940 --> 00:00:31,730
But let's first show you the very basics of select the data by working with that original dashboard

8
00:00:31,760 --> 00:00:37,220
where we only showed the information that Jason file instead of actually showing an image.

9
00:00:37,250 --> 00:00:37,710
All right.

10
00:00:37,730 --> 00:00:42,140
I've gone ahead and copied from the notes the select one PI file.

11
00:00:42,320 --> 00:00:45,980
Essentially this is the exact same thing we were working with we were first starting to learn about

12
00:00:45,980 --> 00:00:51,740
hover data except one of the changes we did is instead of displaying the image right now we're just

13
00:00:51,740 --> 00:00:53,480
showing that pre-formatted block.

14
00:00:53,510 --> 00:00:59,190
So recall when we were first working with Hover data we just uses preform in order to show that just

15
00:00:59,210 --> 00:01:00,720
on file that rectally.

16
00:01:00,860 --> 00:01:02,200
So that's what we're using right now.

17
00:01:02,240 --> 00:01:07,100
And then what we changed here is instead of saving saying hover data or click data we're now saying

18
00:01:07,140 --> 00:01:12,710
selected data and I have gone ahead and changed some of the strings and ID's to better reflect that.

19
00:01:12,860 --> 00:01:17,480
But again the IDs these can be called whatever you want as well as these variable names.

20
00:01:17,480 --> 00:01:21,140
So select the data and select the data here inside of the callback image function.

21
00:01:21,200 --> 00:01:23,740
You can technically call that variable whatever you want.

22
00:01:23,750 --> 00:01:25,020
Same with these IDs.

23
00:01:25,120 --> 00:01:29,630
The selection ID and the selection of ID and the output that could technically be whatever string you

24
00:01:29,630 --> 00:01:31,200
want as long as they match up.

25
00:01:31,220 --> 00:01:33,200
Same here for this variable as long as they match up.

26
00:01:33,200 --> 00:01:38,960
You can call it whatever you want what you can't change is this ID for the input you would need say

27
00:01:38,960 --> 00:01:40,140
selected data.

28
00:01:40,220 --> 00:01:45,290
And this particular format the D capitalized that would allow you to actually connect with that property

29
00:01:45,290 --> 00:01:46,040
ID.

30
00:01:46,310 --> 00:01:49,890
So I'm going to save this and run it and we can check out what it looks like here.

31
00:01:50,910 --> 00:01:52,770
So again here's our scatterplot right now.

32
00:01:52,950 --> 00:01:58,100
And notice here even if I click on something or if I hover over it I don't get to see anything it just

33
00:01:58,170 --> 00:02:05,160
C.M. what I need to do is either use box select or lasso select for use box select once I select one

34
00:02:05,160 --> 00:02:09,440
of these points then I get to see the actual results of my selection.

35
00:02:09,690 --> 00:02:17,250
So here I can see information about the points themselves and I get to see information about my box

36
00:02:17,340 --> 00:02:17,990
itself.

37
00:02:18,060 --> 00:02:22,410
So we're going to be using both information about the points that are within the box and information

38
00:02:22,440 --> 00:02:24,380
about the box itself.

39
00:02:24,390 --> 00:02:29,170
So you'll notice if I receive something like 4 points now I get to see information about points here

40
00:02:29,510 --> 00:02:34,500
and all of that list and then I get to see information about the range they cover so I can see I'm covering

41
00:02:34,500 --> 00:02:40,390
an x range from red and yellow and then my y range that's an actual number of my box.

42
00:02:40,410 --> 00:02:46,080
So we're going to be using that information to basically create a scatterplot or we can write a box

43
00:02:46,350 --> 00:02:49,670
and then measure that density of points in that box.

44
00:02:49,800 --> 00:02:53,240
And just to show you can also use Lassus select for this sort of stuff.

45
00:02:53,520 --> 00:03:00,120
If you want so you can use a little lasso get the information points and then since our points are categorical

46
00:03:00,150 --> 00:03:05,850
these last appointed a whole lot of sense but it's basically telling you the layout of all these dashes

47
00:03:05,850 --> 00:03:08,530
right here on the x and y axis.

48
00:03:08,860 --> 00:03:09,110
OK.

49
00:03:09,120 --> 00:03:14,700
So let's close this and then actually begin working on that density example.

50
00:03:14,790 --> 00:03:17,370
And let me show you what the examples point to look like.

51
00:03:17,370 --> 00:03:20,490
Once we finished up that we get an idea of what we're building here.

52
00:03:20,610 --> 00:03:24,220
So here is the random scatterplot we're going to be doing for our new dashboard.

53
00:03:24,270 --> 00:03:29,940
And then when you click box select you're going to be able to make your own box and will report back

54
00:03:30,030 --> 00:03:34,110
the points and range of that box.

55
00:03:34,230 --> 00:03:38,310
And then later on we're going to take information like this and convert it to a dashboard that looks

56
00:03:38,310 --> 00:03:39,900
something like this.

57
00:03:39,900 --> 00:03:46,460
So again same plot except now when I do box select and I select something I'll report back some density.

58
00:03:46,470 --> 00:03:53,700
So the density of points here is 0.2 four and now it goes up depending on your box selection.

59
00:03:53,700 --> 00:03:58,350
So if you try to select a small box of a lot of points you get a much higher density.

60
00:03:58,470 --> 00:04:03,580
If you select that box with maybe just one point over a large area you get a very low density.

61
00:04:03,860 --> 00:04:05,800
OK so let's go ahead and create this plot.

62
00:04:05,910 --> 00:04:09,270
Let's go back to our text editor.

63
00:04:09,320 --> 00:04:10,780
All right back with the text editor.

64
00:04:10,800 --> 00:04:16,790
I've gone ahead and done the dash import as well as my corn HTL components input and output from dependencies.

65
00:04:16,910 --> 00:04:22,230
Go for graph objects and num Piet's create some data and panderers to format it into a data frame for

66
00:04:22,230 --> 00:04:23,640
later on.

67
00:04:23,670 --> 00:04:26,140
First let's create our application by S..

68
00:04:26,160 --> 00:04:29,440
Opposite CO-2 dash dash.

69
00:04:29,490 --> 00:04:37,330
And then we're going to create some data so we'll create some data from pi and the random seed will

70
00:04:37,330 --> 00:04:42,790
set the turn and that's just for repeatability so we can get reproducible results and your results will

71
00:04:42,790 --> 00:04:44,420
be the same as mine.

72
00:04:44,470 --> 00:04:52,910
I'm going to separate X into a left half and right half so say x 1 is equal to and b all in space.

73
00:04:53,020 --> 00:05:02,110
So that's linearly spaced points will go from 0.1 to 5 and we'll ask for 50 linearly spaced points between

74
00:05:02,330 --> 00:05:14,820
0.1 and 5 and for X to we'll say and P in space from 5.1 to 10 and we'll grab another 50 points there

75
00:05:15,870 --> 00:05:24,970
and for y we're going to just grab 50 random points we'll say why is it to be random rant random integer.

76
00:05:24,970 --> 00:05:29,590
So get me 50 random integers anywhere between 0 and 50.

77
00:05:29,590 --> 00:05:33,540
So we have our left half right half and then 50 random points.

78
00:05:33,550 --> 00:05:36,350
Then we're going to create three frames for this.

79
00:05:36,370 --> 00:05:45,020
So have our data frames the one that's going to be equal to PD data frame and you can actually pass

80
00:05:45,020 --> 00:05:52,730
in a dictionary with the column name as the key and then the array has the value so x 1 and we'll say

81
00:05:52,730 --> 00:05:59,480
the same for y and then I'm going to copy and paste this two more times.

82
00:06:01,340 --> 00:06:08,770
And we'll sign this DFI two and three we're actually going to have DFI to be essentially a duplicate

83
00:06:08,950 --> 00:06:11,430
of d'Urfe 1 and then DFA three.

84
00:06:11,440 --> 00:06:16,490
Or don't say is X 2 matched up with Y.

85
00:06:16,630 --> 00:06:20,830
So later on you'll see why we actually needed the f one and the two separately.

86
00:06:21,130 --> 00:06:25,970
But what we're do for now is combine this all into one large data frame by saying.

87
00:06:26,270 --> 00:06:34,800
PD thought concat So that sense for concatenate Wrekin basically glued together a list of data frames.

88
00:06:35,000 --> 00:06:42,500
So we will concatenate the one DFI 2 and 3 right now that if one A.F. to those points are going to overlap

89
00:06:42,770 --> 00:06:50,100
because they're both situated on X1 want to done that it's time to actually affect our play out.

90
00:06:52,380 --> 00:06:57,750
We'll create our division list and then I'm going to grab some new lines here just just get enough space

91
00:06:57,750 --> 00:06:59,180
to work with.

92
00:06:59,920 --> 00:07:07,470
Well we're going to do now is insert a core component graph DCC dot graph and inside this graph will

93
00:07:07,480 --> 00:07:14,900
give it an ID we'll just call it plot as its ID and then we need to provide it a figure parameter.

94
00:07:14,910 --> 00:07:23,240
Remember this figure parameter it's just a dictionary with data list and then your layout value so it's

95
00:07:23,250 --> 00:07:24,770
Stortford data.

96
00:07:25,500 --> 00:07:33,390
We're going to have just a simple scatterplot here we'll call it a go getter and then put this new line

97
00:07:33,390 --> 00:07:33,870
here.

98
00:07:33,930 --> 00:07:35,200
We can work this out.

99
00:07:35,400 --> 00:07:36,470
Go scatter.

100
00:07:36,480 --> 00:07:45,580
This is going to need x x equal to f of x and we'll set y equal to the if y.

101
00:07:46,670 --> 00:07:50,310
And we'll set the mode equal to the string markers.

102
00:07:50,450 --> 00:07:55,750
So we have our scatterplot there and then Furley out we'll sign scientists go that way.

103
00:07:56,180 --> 00:08:07,200
And here we can give it a title scatterplot and then we'll say hover mode is equal to closest.

104
00:08:07,220 --> 00:08:08,800
Let me save this right there.

105
00:08:10,410 --> 00:08:13,230
And in order to actually add some styling to this graph.

106
00:08:13,380 --> 00:08:15,350
Let's provide its own div.

107
00:08:15,660 --> 00:08:23,030
So inside of this div I'm going to say H team l div I'm going to put a list here.

108
00:08:23,080 --> 00:08:29,080
Let's actually grab everything from this graph that we just created and we'll stick it inside this div

109
00:08:29,090 --> 00:08:36,410
list and now that we've done that notice how I have my list here what I can do is outside of this add

110
00:08:36,410 --> 00:08:44,990
a style dictionary and the style dictionary is going to allow me to edit the width of the sexual graph.

111
00:08:44,990 --> 00:08:51,650
And I just wanted to take up 30 percent of my dashboard and then I can also add in a bunch of other

112
00:08:51,650 --> 00:08:55,290
properties for SEE assess the next one's going to be display.

113
00:08:55,550 --> 00:09:01,430
And we're going to set that to inline block and that's just another formatting style choice just to

114
00:09:01,430 --> 00:09:03,500
make our dashboard look a little nicer.

115
00:09:03,500 --> 00:09:06,510
All right so we have that div with the graph inside of it.

116
00:09:06,620 --> 00:09:08,340
I'm going to create one more thing here.

117
00:09:09,290 --> 00:09:17,540
And this div is just going to be a head or one object that has an idea of density.

118
00:09:17,980 --> 00:09:21,420
And that's going to be the actual string that reports back that density.

119
00:09:21,430 --> 00:09:25,440
So we have equal density and then we can get this a style as well.

120
00:09:25,450 --> 00:09:30,830
Let's add a little bit of padding on the top so we don't get any issues of fit being cut off.

121
00:09:30,990 --> 00:09:33,750
We'll say this is a value of 25.

122
00:09:33,990 --> 00:09:37,110
And for this overall div we can also add more styling.

123
00:09:37,200 --> 00:09:39,560
So let's give it a style dictionary.

124
00:09:40,110 --> 00:09:41,820
Very similar to our graph.

125
00:09:41,880 --> 00:09:46,510
We'll give it with a 30 percent and we'll say display block

126
00:09:49,120 --> 00:09:53,800
excuse me display is equal to inline block as well.

127
00:09:54,190 --> 00:09:59,980
And also for formatting we can give it a vertical alignments will say vertical line and we'll align

128
00:09:59,980 --> 00:10:02,480
it to the top OK.

129
00:10:02,490 --> 00:10:03,900
Most of this just for formatting it.

130
00:10:03,900 --> 00:10:08,620
So it looks nice and you kind of see the graph right next to the display of density.

131
00:10:08,670 --> 00:10:09,870
So we've set up our layout.

132
00:10:09,990 --> 00:10:13,950
We set up our data frames as well as our data that construct these data frames.

133
00:10:13,950 --> 00:10:20,050
Now it's time to just create the callbacks and we're going to do here is going to copy and paste a lot

134
00:10:20,050 --> 00:10:26,110
of this from the notes because it's essentially just repeated calculations sort of first going to create

135
00:10:26,110 --> 00:10:33,270
or function and this function is lowercase that we'll call it find density.

136
00:10:33,880 --> 00:10:39,160
And in this case we just need to find that density given the selected data so the selected data that's

137
00:10:39,160 --> 00:10:44,830
going to be information that we saw previously displayed as text we're going to be able to parse through

138
00:10:44,830 --> 00:10:51,370
that information to grab the x and y points to calculate the square and then calculate how many points

139
00:10:51,370 --> 00:10:52,720
are in that square.

140
00:10:52,720 --> 00:10:55,430
So because of this it's actually quite complicated.

141
00:10:55,630 --> 00:10:59,950
So essentially it is calculates the density.

142
00:11:00,550 --> 00:11:03,400
So we're going to be copying and pasting from the notes to make sure we don't mess that up.

143
00:11:03,430 --> 00:11:05,240
And then we'll walk through what each line does.

144
00:11:05,410 --> 00:11:12,580
But before we do that let's add in our app callback manually app that callback we set the output we're

145
00:11:12,580 --> 00:11:17,780
going to be outputting the information to this H-1 to the ideas density.

146
00:11:18,250 --> 00:11:20,620
And since we over it we just want to overwrite its text.

147
00:11:20,620 --> 00:11:26,000
We will say children and then a member input goes in a list.

148
00:11:26,010 --> 00:11:30,240
In this case we just have one that's going to grab it from the idea we created up above.

149
00:11:30,240 --> 00:11:36,910
So ideas plot and lots are input and we're going to grab the selected data.

150
00:11:36,920 --> 00:11:42,810
Remember you have to use this story string just like we had to do for click data and hover data.

151
00:11:42,860 --> 00:11:44,390
So what's this find density.

152
00:11:44,390 --> 00:11:51,020
I'm going to copy and paste the actual formatting here because it's quite a few lines of code and then

153
00:11:51,020 --> 00:11:52,840
we can just walk through it together.

154
00:11:53,120 --> 00:11:54,550
So how does find density function.

155
00:11:54,570 --> 00:11:59,760
Well we're going to do is we're going to say how many points are there and that's going to be the length

156
00:11:59,910 --> 00:12:04,350
of the selected data with the key points to remember select the data.

157
00:12:04,350 --> 00:12:07,410
Is that dictionary in one of the values or one of the key value pairs.

158
00:12:07,560 --> 00:12:11,970
It's going to be points to that first half describe all the points and we just want the length of this

159
00:12:12,300 --> 00:12:16,070
to give us back will how many points are within the selected area.

160
00:12:16,530 --> 00:12:22,920
Then what we can do is we can make a list from the selected data keys and then we're going to call this

161
00:12:23,010 --> 00:12:30,750
either a range or essentially lasso points because select the data returns either a range key or a last

162
00:12:30,750 --> 00:12:35,670
appoints key depending on whether we use that box tool for that range or the last appoints.

163
00:12:35,670 --> 00:12:40,740
So in this case we had to get a little creative with how we're actually going to mind the size of the

164
00:12:40,740 --> 00:12:41,520
selection.

165
00:12:41,700 --> 00:12:46,830
You should note that lassoes in general they're always going to have overstated areas since essentially

166
00:12:46,830 --> 00:12:52,560
what we're doing here in our example is we're building a box around the minimum and maximum x and y

167
00:12:52,560 --> 00:12:55,380
values of whatever that blob happens to be.

168
00:12:55,380 --> 00:12:59,420
So we're kind of estimating based on the last points.

169
00:12:59,430 --> 00:12:59,910
All right.

170
00:12:59,940 --> 00:13:08,880
So essentially all we're doing here is if you recall coming back up here we overlapped the 1 and DFI

171
00:13:08,880 --> 00:13:10,460
to when we concatenated it.

172
00:13:10,650 --> 00:13:15,180
So that means there's two points on the left hand side and there's going to be one point on the right

173
00:13:15,180 --> 00:13:16,020
hand side.

174
00:13:16,080 --> 00:13:20,090
So we're going to be able to see that effect Well we're actually running this plot on the dashboard.

175
00:13:20,190 --> 00:13:23,970
The densities on the left hand side of the plot they're going to be double the density of things on

176
00:13:23,970 --> 00:13:27,990
the right hand side because those points are stacked on top for each other which is why we're kind of

177
00:13:27,990 --> 00:13:30,220
doubling that up here to see that effect.

178
00:13:31,350 --> 00:13:35,040
So as I just mentioned the examples don't have points on the left hand side.

179
00:13:35,070 --> 00:13:36,290
The plot doubled up.

180
00:13:36,330 --> 00:13:40,230
So wherever we actually see a point there's two overlapping points and the right half of the plot is

181
00:13:40,230 --> 00:13:41,820
occupied by single points.

182
00:13:41,820 --> 00:13:46,080
So the cockily density is going to be twice as high on the left as on the right for similar selection

183
00:13:46,080 --> 00:13:46,970
of points.

184
00:13:47,280 --> 00:13:53,400
Once we've created this list with that either range or less appoints key We're going to remove all the

185
00:13:53,400 --> 00:13:55,920
points here we already have the number of points.

186
00:13:55,920 --> 00:13:59,100
Now we just want to build that box for a density calculation.

187
00:13:59,310 --> 00:14:04,140
And essentially what we're doing here is driving the max value for the X the minivan new for the X..

188
00:14:04,220 --> 00:14:06,220
And then the x y and mindwipe.

189
00:14:06,480 --> 00:14:13,260
Then with those values we can just calculate a simple area by saying Max x minus min x is the length

190
00:14:13,260 --> 00:14:15,570
of X times max y minus.

191
00:14:15,590 --> 00:14:19,770
Why that's looking for y so X times Y gives you the area that square.

192
00:14:19,770 --> 00:14:23,350
So the density is a number of points divided by that area.

193
00:14:23,670 --> 00:14:29,190
Often your dashboards won't be this complex hopefully but this is kind of just to show you what's possible.

194
00:14:29,430 --> 00:14:34,680
And then we're just going to return that density formatted let's say this and you can always reference

195
00:14:34,680 --> 00:14:40,410
our guidebook where we explain this in more detail but you can think of this more as kind of an example

196
00:14:40,410 --> 00:14:44,640
of what's possible really if you're just interested select the data all you really need to know is the

197
00:14:44,640 --> 00:14:45,780
selected data string key.

198
00:14:45,840 --> 00:14:52,610
And then you can play around with our select to a PI file to see the actual Jaison output that's returned.

199
00:14:53,070 --> 00:14:54,910
So I'm going to run Python basic but PI

200
00:14:57,770 --> 00:15:03,960
and I actually forgot to run our application so let's add that and we'll say if name is equal to mean

201
00:15:04,080 --> 00:15:06,490
take her app and run our server.

202
00:15:06,660 --> 00:15:08,100
Let's save that again.

203
00:15:08,100 --> 00:15:09,740
Run this.

204
00:15:09,780 --> 00:15:11,250
OK it looks like it's running our dashboard.

205
00:15:11,250 --> 00:15:13,820
Let's bring that up OK.

206
00:15:13,820 --> 00:15:15,710
Here we are at our scatterplot.

207
00:15:15,710 --> 00:15:18,830
Keep in mind we actually need to use the box and last select.

208
00:15:18,840 --> 00:15:22,750
If you're just to select like that that's actually zoomin by default.

209
00:15:22,940 --> 00:15:29,030
So let's use box select and then we'll select these three points on the right hand side and it reports

210
00:15:29,030 --> 00:15:30,810
back then that is 0.24.

211
00:15:30,980 --> 00:15:33,800
But remember we double stack the points on the left hand.

212
00:15:33,860 --> 00:15:38,300
So if I were to grab these three points we essentially almost double 0.4 6.

213
00:15:38,330 --> 00:15:42,890
Now my box sizes aren't going to be exactly the same each time but hopefully you get the idea that it's

214
00:15:42,890 --> 00:15:45,960
more or less about double the density on the left hand side.

215
00:15:46,100 --> 00:15:47,820
So you can play around as example.

216
00:15:47,820 --> 00:15:49,440
More to see the effects.

217
00:15:49,640 --> 00:15:53,020
But essentially this is how you can interact with select the data.

218
00:15:53,030 --> 00:15:55,090
Often you probably won't be reporting density like this.

219
00:15:55,100 --> 00:15:59,880
Instead you may be displaying more information about another plot or another graph and we'll be showing

220
00:15:59,880 --> 00:16:02,690
you examples like that later on in the course.

221
00:16:02,690 --> 00:16:03,020
OK.

222
00:16:03,050 --> 00:16:04,290
I hope that was helpful to you.

223
00:16:04,310 --> 00:16:08,260
Just keep in mind that whenever you're working to select that data click data recovered data.

224
00:16:08,270 --> 00:16:11,960
It's essentially just a string code from your graph object.

225
00:16:11,960 --> 00:16:16,430
And then that's returning back something that looks like Jaison which you can later manipulate to grab

226
00:16:16,520 --> 00:16:21,980
either data from another folder like the image files or just return the Jason information yourself to

227
00:16:21,980 --> 00:16:24,280
either use internally or to show the user.

228
00:16:24,470 --> 00:16:25,460
Hope that was helpful.

229
00:16:25,460 --> 00:16:26,780
We'll see you in the next lecture.

