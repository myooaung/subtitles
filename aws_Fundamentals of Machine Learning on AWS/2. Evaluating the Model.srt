1
00:00:01,340 --> 00:00:04,490
[Autogenerated] you've created the training job and sage maker is often running.

2
00:00:04,490 --> 00:00:06,900
But when it's done, how do you know if it's any good?

3
00:00:06,900 --> 00:00:09,240
Can it accurately make predictions?

4
00:00:09,240 --> 00:00:12,140
And that's why we're going to cover in this phase.

5
00:00:12,140 --> 00:00:14,760
The goal of the machine learning model is to generalize.

6
00:00:14,760 --> 00:00:15,390
Well,

7
00:00:15,390 --> 00:00:18,080
we want to train it on the existing data and then be able to

8
00:00:18,080 --> 00:00:21,540
pass in new data data that it's never seen before and have the

9
00:00:21,540 --> 00:00:23,420
model make accurate predictions.

10
00:00:23,420 --> 00:00:25,520
But sometimes it doesn't happen.

11
00:00:25,520 --> 00:00:28,140
Sometimes your model over fits.

12
00:00:28,140 --> 00:00:29,450
If you look at the chart here.

13
00:00:29,450 --> 00:00:33,740
This is an example of a model that's over fitting that green line.

14
00:00:33,740 --> 00:00:36,300
This model is too dependent on the training data,

15
00:00:36,300 --> 00:00:38,170
almost like it's memorized it,

16
00:00:38,170 --> 00:00:42,240
and it probably won't perform well on new data that it's never seen.

17
00:00:42,240 --> 00:00:44,680
What we want is the smooth black line here,

18
00:00:44,680 --> 00:00:47,740
which is a better fit for all the data.

19
00:00:47,740 --> 00:00:49,770
There are a few things that you can do to prevent over.

20
00:00:49,770 --> 00:00:52,540
Fitting First is to just use more data.

21
00:00:52,540 --> 00:00:54,480
You can also add some noise to the data,

22
00:00:54,480 --> 00:00:58,940
which is basically a form of augmentation that makes the dataset larger.

23
00:00:58,940 --> 00:01:03,140
You could remove features Maybe your algorithm automatically selected features,

24
00:01:03,140 --> 00:01:06,240
but some of them aren't relevance, and you can remove them.

25
00:01:06,240 --> 00:01:10,720
You can also do early stopping Azure training, the model with each iteration.

26
00:01:10,720 --> 00:01:11,940
It's improving,

27
00:01:11,940 --> 00:01:14,590
but at a certain point it starts to over fit or memorize

28
00:01:14,590 --> 00:01:16,150
the data so you could just stop it.

29
00:01:16,150 --> 00:01:21,420
Before that happens, the flip side of over fitting is under fitting.

30
00:01:21,420 --> 00:01:23,430
This means the model is just too simple,

31
00:01:23,430 --> 00:01:25,840
and it doesn't accurately reflect the data.

32
00:01:25,840 --> 00:01:28,240
Basically, it hasn't learned enough.

33
00:01:28,240 --> 00:01:30,320
The blue line in this chart is under fitted.

34
00:01:30,320 --> 00:01:33,190
We're looking for the black line now.

35
00:01:33,190 --> 00:01:36,840
Some ways to prevent under fitting include using more data,

36
00:01:36,840 --> 00:01:38,150
adding more features.

37
00:01:38,150 --> 00:01:40,690
Maybe the dataset itself is too simple,

38
00:01:40,690 --> 00:01:43,940
resulting in a trained model being too simple.

39
00:01:43,940 --> 00:01:45,690
And you can also train longer.

40
00:01:45,690 --> 00:01:48,150
Maybe the model just hasn't had enough time to train

41
00:01:48,150 --> 00:01:51,340
and iterate and find the right fit.

42
00:01:51,340 --> 00:01:52,970
So you want to iterate through the steps,

43
00:01:52,970 --> 00:01:57,340
often tuning the model until you get it just right during evaluation.

44
00:01:57,340 --> 00:01:58,250
Ask yourself.

45
00:01:58,250 --> 00:02:00,160
Do we need to change the algorithm?

46
00:02:00,160 --> 00:02:02,540
Do we need to do more feature engineering?

47
00:02:02,540 --> 00:02:06,190
Do we need new or different data and then you loop around,

48
00:02:06,190 --> 00:02:13,000
make minor tweaks, continue to train and evaluate until you've got the model ready to deploy

