WEBVTT
1
00:00:02.040 --> 00:00:02.420
[Autogenerated] All right,

2
00:00:02.420 --> 00:00:05.260
let's head over to stage Maker studio and see how to deploy and

3
00:00:05.260 --> 00:00:08.840
monitor the model that we built in the last demo.

4
00:00:08.840 --> 00:00:10.560
If you stop your notebook previously,

5
00:00:10.560 --> 00:00:13.010
you want to start it back up and run the code to get up to

6
00:00:13.010 --> 00:00:16.240
this point here under the host section.

7
00:00:16.240 --> 00:00:17.260
At this point in the Notebook,

8
00:00:17.260 --> 00:00:20.640
we've created the model and optimized it using neo.

9
00:00:20.640 --> 00:00:23.070
If you want to see where the model actually lives,

10
00:00:23.070 --> 00:00:25.640
you could go into your S3 bucket,

11
00:00:25.640 --> 00:00:29.100
so I'll switch over to the S3 management console that I have up.

12
00:00:29.100 --> 00:00:30.960
You'll see the bucket that we've been working with.

13
00:00:30.960 --> 00:00:37.040
I'll click into that go into sage maker demo Xcode Boost churn,

14
00:00:37.040 --> 00:00:43.580
and if I scroll down, you'll see model MLM four dot r dot gz.

15
00:00:43.580 --> 00:00:44.530
So that's the model.

16
00:00:44.530 --> 00:00:46.340
That's the thing that we output.

17
00:00:46.340 --> 00:00:48.180
We're going to take that model and deploy it to an

18
00:00:48.180 --> 00:00:52.340
endpoint back in our Jupyter notebook.

19
00:00:52.340 --> 00:00:56.040
We can do that with just a single line of code right here.

20
00:00:56.040 --> 00:00:58.240
I'll run this.

21
00:00:58.240 --> 00:01:01.090
This will take a few minutes, but what this deploy function is doing,

22
00:01:01.090 --> 00:01:04.210
it's creating a deployable model, configuring the sage maker,

23
00:01:04.210 --> 00:01:07.680
hosting services with that configuration for the endpoint and the

24
00:01:07.680 --> 00:01:11.240
endpoint itself and then launching this for the world.

25
00:01:11.240 --> 00:01:15.740
I'll pause the video for a minute and come back when it's done all right,

26
00:01:15.740 --> 00:01:17.440
and that has finished.

27
00:01:17.440 --> 00:01:18.160
When it's done,

28
00:01:18.160 --> 00:01:22.670
you'll be able to go into the sage maker console over here under models.

29
00:01:22.670 --> 00:01:24.940
You'll see our model listed there.

30
00:01:24.940 --> 00:01:26.090
The endpoint configuration.

31
00:01:26.090 --> 00:01:28.810
This was all done through the code.

32
00:01:28.810 --> 00:01:30.560
There's a bit of a display issue here,

33
00:01:30.560 --> 00:01:33.600
but if you scroll down there is the configuration

34
00:01:33.600 --> 00:01:39.440
here and then the actual endpoint, you'll see that that's in service.

35
00:01:39.440 --> 00:01:41.840
And if you click into it,

36
00:01:41.840 --> 00:01:46.040
this is the URL that somebody would call to pass data into the model.

37
00:01:46.040 --> 00:01:53.140
Now let's go back to the code and test this out here under our evaluate section,

38
00:01:53.140 --> 00:01:57.440
we're gonna make some HTTP post request to that endpoint using test data.

39
00:01:57.440 --> 00:01:59.490
There's a little bit of set up work required here,

40
00:01:59.490 --> 00:02:04.440
so we'll run this block of code setting up our serial Isar and deserialize ER.

41
00:02:04.440 --> 00:02:08.020
And then this next block of code basically loops through the test data.

42
00:02:08.020 --> 00:02:11.780
Remember, we held this data out, splits it into small batches,

43
00:02:11.780 --> 00:02:14.940
passes them to the endpoint to get the prediction

44
00:02:14.940 --> 00:02:16.140
and then converts them to a dump.

45
00:02:16.140 --> 00:02:17.140
I array.

46
00:02:17.140 --> 00:02:21.280
You will need to do an update here rather than as matrix.

47
00:02:21.280 --> 00:02:22.760
This has been deprecate ID.

48
00:02:22.760 --> 00:02:24.820
You need to use values instead.

49
00:02:24.820 --> 00:02:31.340
So let me update this values and we'll run.

50
00:02:31.340 --> 00:02:32.450
Now we have our predictions.

51
00:02:32.450 --> 00:02:35.220
We want to compare the actual values to the predicted values,

52
00:02:35.220 --> 00:02:37.460
and that's what this line of code does right here.

53
00:02:37.460 --> 00:02:42.740
So let's run this and I'll scroll down.

54
00:02:42.740 --> 00:02:46.400
And this outputs a confusion matrix where the actual values are on

55
00:02:46.400 --> 00:02:48.690
the left and the predicted values are on top,

56
00:02:48.690 --> 00:02:50.510
even though it's a little bit differently formatted

57
00:02:50.510 --> 00:02:52.440
than what we saw in PowerPoint.

58
00:02:52.440 --> 00:02:57.300
But you can see with our data we had nine plus 39 people who churned.

59
00:02:57.300 --> 00:03:01.200
Adding up that actual equals one row, so 48 total.

60
00:03:01.200 --> 00:03:03.210
We correctly predicted the 39.

61
00:03:03.210 --> 00:03:06.540
Those are the true positives on the lower right of the Matrix,

62
00:03:06.540 --> 00:03:10.130
and incorrectly, we predicted nine, so they actually turned,

63
00:03:10.130 --> 00:03:12.040
but we predicted that they wouldn't.

64
00:03:12.040 --> 00:03:14.730
So those were the false negatives on the top right?

65
00:03:14.730 --> 00:03:17.840
There are four customers that we said would churn, but we were wrong.

66
00:03:17.840 --> 00:03:21.200
So those are the false positives and the 282.

67
00:03:21.200 --> 00:03:23.840
We said these wouldn't turn and they didn't.

68
00:03:23.840 --> 00:03:26.230
Now we could take these numbers and plugged them into values

69
00:03:26.230 --> 00:03:29.010
to calculate recall precision and accuracy.

70
00:03:29.010 --> 00:03:32.280
In this case, the cost of falsy negatives are pretty high.

71
00:03:32.280 --> 00:03:35.640
These are people that we predicted wouldn't leave, but they did.

72
00:03:35.640 --> 00:03:36.540
And because they did,

73
00:03:36.540 --> 00:03:39.750
we have the cost of losing that customer and gaining another one,

74
00:03:39.750 --> 00:03:42.730
which is a much higher cost than just incentivizing the

75
00:03:42.730 --> 00:03:45.080
turned customer to stay in the first place.

76
00:03:45.080 --> 00:03:47.950
You remember that when the cost of falsy negatives is high,

77
00:03:47.950 --> 00:03:51.120
you want to use recall is your metric If you follow

78
00:03:51.120 --> 00:03:52.160
through the rest of the notebook,

79
00:03:52.160 --> 00:03:55.890
there's some additional information here about calculating costs and

80
00:03:55.890 --> 00:03:58.940
finding the right cut off for this particular model.

81
00:03:58.940 --> 00:04:00.810
I'll leave this up to you if you're interested.

82
00:04:00.810 --> 00:04:02.240
But before I wrap up the demo,

83
00:04:02.240 --> 00:04:05.340
I do want to show you some of the monitoring features.

84
00:04:05.340 --> 00:04:11.040
If we hop back over to the sage maker console here we are in the endpoint again,

85
00:04:11.040 --> 00:04:14.630
and if we scroll down, you'll see that right here on the page.

86
00:04:14.630 --> 00:04:19.270
We've got some monitoring and metrics available so CPU utilization,

87
00:04:19.270 --> 00:04:22.440
memory utilization, disc utilization.

88
00:04:22.440 --> 00:04:28.320
And if you click on view logs up here, this will take you into CloudWatch,

89
00:04:28.320 --> 00:04:31.720
where you can explore more to get information about

90
00:04:31.720 --> 00:04:33.780
the calls being made to the API.

91
00:04:33.780 --> 00:04:35.670
To that endpoint that we deployed.

92
00:04:35.670 --> 00:04:37.350
You want to go to CloudTrail?

93
00:04:37.350 --> 00:04:41.740
So let's go up here under services.

94
00:04:41.740 --> 00:04:50.540
Go to CloudTrail and here under event history, Let's scroll down.

95
00:04:50.540 --> 00:04:51.850
And this is what you get by default.

96
00:04:51.850 --> 00:04:56.240
You can also create a trail and have events blog to on S3 bucket.

97
00:04:56.240 --> 00:04:57.380
All right, Before we wrap up,

98
00:04:57.380 --> 00:05:01.940
let me show you how to tear everything down that we've been using in the demos.

99
00:05:01.940 --> 00:05:03.990
You come back here to your Jupyter notebook.

100
00:05:03.990 --> 00:05:08.130
There is a section at the very end for clean up.

101
00:05:08.130 --> 00:05:11.640
But I'll show you how to do things through the interface as well.

102
00:05:11.640 --> 00:05:13.510
Here in Sage maker studio.

103
00:05:13.510 --> 00:05:19.840
Come over here to your running terminals and colonels and let's shut these down.

104
00:05:19.840 --> 00:05:25.250
So shut down your image that will also take care of your kernel Back in

105
00:05:25.250 --> 00:05:29.180
sage maker the console A few things we want to do here,

106
00:05:29.180 --> 00:05:32.640
let's go to the endpoint configuration.

107
00:05:32.640 --> 00:05:38.590
I'll scroll down here select this, at least on mine.

108
00:05:38.590 --> 00:05:44.000
I need to move to the top and we'll delete Come over to

109
00:05:44.000 --> 00:05:48.170
endpoints and you want to delete this one as well.

110
00:05:48.170 --> 00:05:50.540
So just select it.

111
00:05:50.540 --> 00:05:53.840
Delete.

112
00:05:53.840 --> 00:06:03.140
Let's go into S3 and here I will back up to the top level for all of my buckets.

113
00:06:03.140 --> 00:06:07.740
All select this one and elite.

114
00:06:07.740 --> 00:06:10.480
You do have to type in the bucket name here to confirm deletion,

115
00:06:10.480 --> 00:06:14.340
so I'll put that in and confirm.

116
00:06:14.340 --> 00:06:15.670
And then the last thing to do.

117
00:06:15.670 --> 00:06:19.340
Let's come appear to sage Maker again.

118
00:06:19.340 --> 00:06:22.240
Sage maker studio.

119
00:06:22.240 --> 00:06:27.040
And if you click into your username here down under apps,

120
00:06:27.040 --> 00:06:29.220
you might see something different than what I have here.

121
00:06:29.220 --> 00:06:33.140
But you want to delete app, we'll say yes, delete.

122
00:06:33.140 --> 00:06:37.040
And that will also ask you to confirm by typing that in

123
00:06:37.040 --> 00:06:42.040
and elite so back to Raya Globomantics.

124
00:06:42.040 --> 00:06:43.130
When we started the course,

125
00:06:43.130 --> 00:06:44.920
he was wondering if we could use machine learning to

126
00:06:44.920 --> 00:06:47.340
solve our customer churn problem,

127
00:06:47.340 --> 00:06:50.440
and I think at this point we could emphatically say yes.

128
00:06:50.440 --> 00:06:52.870
Now our model is not perfect yet in the real world,

129
00:06:52.870 --> 00:06:54.740
you'd want to continue to tune and test.

130
00:06:54.740 --> 00:07:02.000
It gets some additional data, but we are well on the way. And with that, let's summarize the module

