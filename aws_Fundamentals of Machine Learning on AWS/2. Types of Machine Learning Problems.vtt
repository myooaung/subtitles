WEBVTT
1
00:00:01.440 --> 00:00:02.830
[Autogenerated] before you pick your algorithm,

2
00:00:02.830 --> 00:00:05.360
you need to understand what types of machine learning problems you're

3
00:00:05.360 --> 00:00:09.040
trying to solve and these fall into three categories.

4
00:00:09.040 --> 00:00:12.240
Supervised, unsupervised and reinforcement.

5
00:00:12.240 --> 00:00:16.840
We'll fill in these three buckets as we do, starting with an example first.

6
00:00:16.840 --> 00:00:21.340
Is this customer likely to leave yes or no?

7
00:00:21.340 --> 00:00:22.870
Is this a picture of a cat?

8
00:00:22.870 --> 00:00:25.340
Yes or no?

9
00:00:25.340 --> 00:00:27.540
Is this a fraudulent transaction?

10
00:00:27.540 --> 00:00:30.040
Yes or no?

11
00:00:30.040 --> 00:00:32.520
Is this a cat dog or bird?

12
00:00:32.520 --> 00:00:35.940
Three choices in this case rather than two.

13
00:00:35.940 --> 00:00:40.540
Those examples We just saw the illustrates supervised learning problems

14
00:00:40.540 --> 00:00:43.010
and within supervised those would be classifications.

15
00:00:43.010 --> 00:00:45.500
Types of problems where they could be binary,

16
00:00:45.500 --> 00:00:52.190
yes or no, true or false or multi class things like cat dog or bird or house,

17
00:00:52.190 --> 00:00:54.540
condo, town, home or apartment.

18
00:00:54.540 --> 00:00:58.040
These are defined choices or categories that we're working with.

19
00:00:58.040 --> 00:01:01.500
Importantly, supervised learning only works if you have labeled data.

20
00:01:01.500 --> 00:01:05.540
Hence the little tag or label icon on the top right of the box.

21
00:01:05.540 --> 00:01:09.210
And by labeled data, we mean, for instance, that we pass in a picture of a cat.

22
00:01:09.210 --> 00:01:11.840
There's a label that says This is a cat.

23
00:01:11.840 --> 00:01:13.960
If we don't have the label for the cat picture,

24
00:01:13.960 --> 00:01:18.140
then we wouldn't be able to use supervised learning in that instance.

25
00:01:18.140 --> 00:01:19.010
Moving on.

26
00:01:19.010 --> 00:01:21.720
Maybe we're asking a question that isn't yes or no,

27
00:01:21.720 --> 00:01:24.410
but something more like How much rent should I charge

28
00:01:24.410 --> 00:01:26.940
for my three bedroom vacation rental?

29
00:01:26.940 --> 00:01:27.630
In this case,

30
00:01:27.630 --> 00:01:31.100
we could use the data to plot out values for other vacation rentals.

31
00:01:31.100 --> 00:01:34.070
Or we have the number of bedrooms on the X axis and

32
00:01:34.070 --> 00:01:36.940
price per night on the Y axis.

33
00:01:36.940 --> 00:01:40.870
Then we find a line that fits all those points using the line we can.

34
00:01:40.870 --> 00:01:44.340
Then connect our three bedroom rental to a price,

35
00:01:44.340 --> 00:01:47.540
and we're going to call it 1 70 a night.

36
00:01:47.540 --> 00:01:50.980
This is an example of a regression problem where you're working with

37
00:01:50.980 --> 00:01:54.180
continuous values like rent prices or stock prices,

38
00:01:54.180 --> 00:01:57.520
or predicting the sales of a product next up.

39
00:01:57.520 --> 00:01:59.030
What about a question like this?

40
00:01:59.030 --> 00:02:01.540
What are my customer segments?

41
00:02:01.540 --> 00:02:06.040
If we plot this out using the number of purchases and the amount of spend,

42
00:02:06.040 --> 00:02:09.740
maybe we find something like this where they kind of cluster together.

43
00:02:09.740 --> 00:02:12.790
We have big spenders who have smaller number of purchases,

44
00:02:12.790 --> 00:02:15.850
but at a higher price point each time and then small

45
00:02:15.850 --> 00:02:20.440
spenders who have more transactions, but at a lower cost per transaction.

46
00:02:20.440 --> 00:02:22.790
That's an example of unsupervised learning.

47
00:02:22.790 --> 00:02:26.340
The key difference here is that you're using unlabeled data.

48
00:02:26.340 --> 00:02:28.810
In other words, when we passed in existing customer data,

49
00:02:28.810 --> 00:02:32.840
we didn't have a field called Big Spender or a small spender.

50
00:02:32.840 --> 00:02:35.840
We didn't even know that we had those two customer segments.

51
00:02:35.840 --> 00:02:40.440
Instead, we just had information about number of purchases and amount of spend.

52
00:02:40.440 --> 00:02:41.910
Using those two bits of data,

53
00:02:41.910 --> 00:02:44.810
we were able to find patterns in the data and realized that we

54
00:02:44.810 --> 00:02:47.740
had these two distinct types of customers.

55
00:02:47.740 --> 00:02:48.300
Clustering,

56
00:02:48.300 --> 00:02:52.230
like we just saw is a common example oven unsupervised learning problem.

57
00:02:52.230 --> 00:02:55.840
You're grouping data into clusters based on similar features.

58
00:02:55.840 --> 00:02:58.930
Another example would be maybe you have a bunch of patient data,

59
00:02:58.930 --> 00:03:01.090
and when you look at different features of that data,

60
00:03:01.090 --> 00:03:03.380
you find that you have one group who responds well to

61
00:03:03.380 --> 00:03:07.140
treatment and one who doesn't next up.

62
00:03:07.140 --> 00:03:09.140
Anomalies are outliers.

63
00:03:09.140 --> 00:03:10.070
Looking at this graph,

64
00:03:10.070 --> 00:03:11.890
it's easy to see that you have an anomaly for

65
00:03:11.890 --> 00:03:15.190
energy consumption at around our 16.

66
00:03:15.190 --> 00:03:17.300
Then it drops back down to normal usage.

67
00:03:17.300 --> 00:03:20.970
This is definitely something would need to investigate and anomaly

68
00:03:20.970 --> 00:03:24.540
detection is another great example of unsupervised learning.

69
00:03:24.540 --> 00:03:27.380
You could use this to find suspicious network traffic or

70
00:03:27.380 --> 00:03:31.180
abnormal heartbeats moving to the next example.

71
00:03:31.180 --> 00:03:32.080
Maybe you're asking,

72
00:03:32.080 --> 00:03:36.420
How can I cross sell or apps all my customers using something like a

73
00:03:36.420 --> 00:03:38.530
recommendation systems a great way to do that.

74
00:03:38.530 --> 00:03:41.940
I'm sure you've all seen these on your favorite e commerce IT.

75
00:03:41.940 --> 00:03:44.540
These recommend ER systems also learn.

76
00:03:44.540 --> 00:03:47.270
So we learned that the user didn't click on the basketball.

77
00:03:47.270 --> 00:03:48.730
So note to self.

78
00:03:48.730 --> 00:03:50.940
Don't recommend that again.

79
00:03:50.940 --> 00:03:52.810
These user didn't click on the boots either,

80
00:03:52.810 --> 00:03:55.140
so we learned not to recommend that again.

81
00:03:55.140 --> 00:03:56.410
But then, finally, success.

82
00:03:56.410 --> 00:03:58.690
They did click and purchase the espresso machine.

83
00:03:58.690 --> 00:04:00.110
So we've learned that we want to do more

84
00:04:00.110 --> 00:04:02.940
recommendations like that in the future.

85
00:04:02.940 --> 00:04:04.730
This type of learning is called reinforcement,

86
00:04:04.730 --> 00:04:07.740
learning where the algorithm is interacting with the environment.

87
00:04:07.740 --> 00:04:08.450
In our case,

88
00:04:08.450 --> 00:04:11.870
the site that the user was clicking on and being rewarded for

89
00:04:11.870 --> 00:04:14.970
correct choices for those of you have dogs,

90
00:04:14.970 --> 00:04:16.350
it's a similar idea.

91
00:04:16.350 --> 00:04:21.040
If they do something right, you want to reinforce that behavior with a treat.

92
00:04:21.040 --> 00:04:22.780
This is also used in games.

93
00:04:22.780 --> 00:04:24.260
The navigation of robots.

94
00:04:24.260 --> 00:04:30.000
Think about your Roomba if you have one and self driving cars like Amazon, Steep Racer

