WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.140 --> 00:00:03.345
When our app loads for the first time,

00:00:03.345 --> 00:00:06.330
the card appears in with no styling.

00:00:06.330 --> 00:00:08.610
When we switch between the components,

00:00:08.610 --> 00:00:11.490
we've added this fade effects.

00:00:11.490 --> 00:00:16.860
It will be nice too, if we could also fade the card in when the app loads up too.

00:00:16.860 --> 00:00:21.190
To do this Vue.js provides us with the appear attribute.

00:00:21.190 --> 00:00:26.025
We can simply add this attributes inside of the transition elements.

00:00:26.025 --> 00:00:31.900
I'm going to go over to the ''App.vue'' where this transition is located.

00:00:32.570 --> 00:00:37.575
It uses fade transition here surrounding the kept alive components.

00:00:37.575 --> 00:00:39.885
We can add this as a attribute,

00:00:39.885 --> 00:00:42.240
just like the name and also the mode.

00:00:42.240 --> 00:00:46.290
Just add "appear" and then give that a ''save''.

00:00:46.290 --> 00:00:51.130
Now if we go down to the fade class inside of the CSS.

00:00:51.130 --> 00:00:55.720
When using appear, the transition it applies is taken from the CSS,

00:00:55.720 --> 00:00:59.885
which we've already setup for entering and also leaving.

00:00:59.885 --> 00:01:02.595
Since you have the opacity fade-in,

00:01:02.595 --> 00:01:05.095
this is the effect used when appearing.

00:01:05.095 --> 00:01:06.625
We can see this in action.

00:01:06.625 --> 00:01:10.630
If we change one of the durations to three seconds.

00:01:10.630 --> 00:01:13.405
I'm going to do this on the appear class.

00:01:13.405 --> 00:01:15.920
So ''fade-enter-active''.

00:01:15.920 --> 00:01:17.620
Rather than 0.5 seconds,

00:01:17.620 --> 00:01:21.520
I'm going to change this to three seconds then ''save''.

00:01:21.520 --> 00:01:24.860
Now if we reload the browser,

00:01:26.160 --> 00:01:30.040
the initial loading takes longer to fade-in.

00:01:30.040 --> 00:01:34.745
Change that back to 0.5 seconds, ''refresh''.

00:01:34.745 --> 00:01:37.260
Now we can see it's a lot faster.

00:01:37.260 --> 00:01:39.085
However, if we wanted,

00:01:39.085 --> 00:01:43.600
we don't have to automatically use this existing fade class.

00:01:43.600 --> 00:01:46.915
We can override this with a custom class name.

00:01:46.915 --> 00:01:49.760
Just like we looked at in the last video.

00:01:49.760 --> 00:01:51.965
We can use the same names,

00:01:51.965 --> 00:01:53.830
but with the appear prefix,

00:01:53.830 --> 00:02:00.265
such as ''appearActiveClass'', to back up to the transition.

00:02:00.265 --> 00:02:02.290
I'm going to set up a custom name.

00:02:02.290 --> 00:02:07.070
So ''appearActiveClass''.

00:02:07.850 --> 00:02:13.570
Then we can add our custom name, 'custom-appear-active-class''.

00:02:17.090 --> 00:02:20.990
Now this is setup, we can now go down to the CSS.

00:02:20.990 --> 00:02:24.665
In fact, I'll just copy this custom name.

00:02:24.665 --> 00:02:28.290
Then down to the CSS we can set this up.

00:02:29.590 --> 00:02:35.865
I just have to ''fade-enter-active'', paste this in.

00:02:35.865 --> 00:02:42.630
Again want to set up the transition for the opacity.

00:02:42.630 --> 00:02:46.960
Let's set this to one second, for example.

00:02:47.180 --> 00:02:54.270
Now this one second transition will be independent and override any existing classes.

00:02:54.620 --> 00:02:58.030
Let's see this in action with ''refresh''.

00:02:58.040 --> 00:03:00.315
That looks about one second.

00:03:00.315 --> 00:03:02.460
That seems to be taking effect now.

00:03:02.460 --> 00:03:06.630
That's how we can add transitions to the initial render.
