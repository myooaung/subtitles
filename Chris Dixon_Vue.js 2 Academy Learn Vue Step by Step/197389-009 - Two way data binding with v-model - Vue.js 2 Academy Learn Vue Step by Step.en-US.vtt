WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.655
We have looked at creating our Vue instance and added the data objects.

00:00:05.655 --> 00:00:08.280
I want to set a new data property,

00:00:08.280 --> 00:00:13.170
but this time I'm going to use it with a view directive called v-model.

00:00:13.170 --> 00:00:16.665
Directives have a -v prefix,

00:00:16.665 --> 00:00:19.455
and you will see them a lot throughout this course.

00:00:19.455 --> 00:00:22.800
The special attributes provided by Vue.JS,

00:00:22.800 --> 00:00:25.410
which add special reactive behavior to

00:00:25.410 --> 00:00:30.795
the DOM using v-model sets up two-way data binding.

00:00:30.795 --> 00:00:33.875
If you are unfamiliar with two-way data binding,

00:00:33.875 --> 00:00:37.370
it just means that the data can be passed both ways.

00:00:37.370 --> 00:00:40.115
In the examples we've looked at so far,

00:00:40.115 --> 00:00:44.270
we can update the properties inside of the data objects,

00:00:44.270 --> 00:00:47.185
and then these changes are then passed to the Vue.

00:00:47.185 --> 00:00:49.130
With two-way data binding,

00:00:49.130 --> 00:00:50.495
we can still do this,

00:00:50.495 --> 00:00:54.185
but we can also update the Vue elements such as

00:00:54.185 --> 00:00:58.720
input fields and this then updates the value of our data.

00:00:58.720 --> 00:01:02.175
Vue.JS makes this two-way data flow really simple,

00:01:02.175 --> 00:01:05.600
by providing us with this directive called v-model.

00:01:05.600 --> 00:01:09.985
Let's begin by setting v-model on our text input fields.

00:01:09.985 --> 00:01:14.415
If you go over to our index.html page,

00:01:14.415 --> 00:01:17.550
and then locate our text inputs,

00:01:17.550 --> 00:01:23.555
we can add v-model and then set the name of the data property want to bind to.

00:01:23.555 --> 00:01:26.515
So in our case, "newNameText".

00:01:26.515 --> 00:01:33.120
Next we need to set newNameText as a property in the data objects.

00:01:33.560 --> 00:01:37.670
This way, we can set the initial value if we want to,

00:01:37.670 --> 00:01:43.660
and because it's two-way data mining we can also update the value with the input field.

00:01:43.660 --> 00:01:50.055
So over in app.js outside the events object add our property of

00:01:50.055 --> 00:01:57.340
newNameText: So I'm going

00:01:57.340 --> 00:02:01.730
to set the initial value of newNameText to be equal to an empty string.

00:02:01.730 --> 00:02:05.510
We can add an initial value inside of that if we want to.

00:02:05.510 --> 00:02:12.105
So to see the value of newNameText we just need to go over to the index.html page,

00:02:12.105 --> 00:02:17.950
and then use the double curly brace syntax to output the newNameText.

00:02:18.010 --> 00:02:21.895
Now if we type anything inside the input field,

00:02:21.895 --> 00:02:26.600
we see the value of newNameText updated immediately.

00:02:26.600 --> 00:02:31.390
This is how we can use two-way data binding with Vue.JS.

00:02:31.390 --> 00:02:35.250
One important thing to remember is that Vue.JS does not care

00:02:35.250 --> 00:02:39.580
about the placeholder or initial value of the input fields.

00:02:39.580 --> 00:02:42.840
The data inside of the Vue instance will always be

00:02:42.840 --> 00:02:48.325
a priority and considered correct over the input fields initial value.

00:02:48.325 --> 00:02:51.680
We will cover using v-model weighed over

00:02:51.680 --> 00:02:55.975
input types and text areas later on in the course.

00:02:55.975 --> 00:03:01.430
For now though, let's move on and take a look at event handlers and how we

00:03:01.430 --> 00:03:07.290
can take the names added to this input field and push them to an array.
