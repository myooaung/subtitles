WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.360
We can now select an image from

00:00:03.360 --> 00:00:08.130
the users computer and successfully upload this to Firebase.

00:00:08.130 --> 00:00:14.970
Also, we have a small image preview underneath the file reader just here.

00:00:14.970 --> 00:00:18.045
I want to do two things in this video.

00:00:18.045 --> 00:00:22.170
First, create a HTML progress bar to display to

00:00:22.170 --> 00:00:26.520
the user the progress of the image upload to Firebase.

00:00:26.520 --> 00:00:30.960
Keeping track of this upload progress will be important later.

00:00:30.960 --> 00:00:36.180
Then second, we want to emit the name of the file to the parent component.

00:00:36.180 --> 00:00:38.700
This is also important because when we create

00:00:38.700 --> 00:00:43.265
the components to display the image on the card over there,

00:00:43.265 --> 00:00:46.640
we need to pass the name of the image to it via props.

00:00:46.640 --> 00:00:50.960
We can download the correct image from Firebase.

00:00:50.960 --> 00:00:54.920
We begin inside the image upload file

00:00:54.920 --> 00:01:00.000
by adding the HML progress elements inside the templates.

00:01:00.020 --> 00:01:04.950
I'm going to add it just above the break tag.

00:01:05.920 --> 00:01:08.725
Add a progress bar.

00:01:08.725 --> 00:01:15.660
Then inside here, we're going to set the initial value to zero.

00:01:18.010 --> 00:01:21.850
This is the starting point for the progress bar.

00:01:21.850 --> 00:01:24.800
Because we want to work in as a percentage,

00:01:24.800 --> 00:01:28.800
we're going to set the maximum value to be 100.

00:01:30.070 --> 00:01:34.200
You can also add an ID of progress bar.

00:01:34.810 --> 00:01:40.265
This will allow us to select these elements later on with JavaScript.

00:01:40.265 --> 00:01:43.220
To get this to work we then need to create a state

00:01:43.220 --> 00:01:47.900
changed event handler on the put method, which we already have.

00:01:47.900 --> 00:01:52.500
We scroll back down to the upload file method.

00:01:52.690 --> 00:01:55.700
We have a [inaudible] method just here,

00:01:55.700 --> 00:02:03.450
which I'm going to store inside a variable so we can access this with the name of Upload.

00:02:05.180 --> 00:02:09.430
We're going to use this variable to monitor the state changed

00:02:09.430 --> 00:02:14.840
events using a state change observer provided by Firebase.

00:02:15.270 --> 00:02:19.065
Still within this upload file method,

00:02:19.065 --> 00:02:21.650
we're going to add this observer.

00:02:21.650 --> 00:02:26.250
I'm just going to add this underneath the reader.onload function.

00:02:26.250 --> 00:02:29.920
We can access it with this upload variable name,

00:02:29.920 --> 00:02:33.330
which you just gave it, so on.

00:02:33.330 --> 00:02:40.350
Then the first parameter is state changed alarm.

00:02:40.350 --> 00:02:42.150
This is provided by Firebase.

00:02:42.150 --> 00:02:46.340
This will be triggered each time a change of state has occurred.

00:02:46.340 --> 00:02:48.950
This calls a function.

00:02:50.510 --> 00:02:55.060
This function takes in the task snapshots.

00:02:55.970 --> 00:02:59.910
This is an object provided by Firebase.

00:03:02.600 --> 00:03:08.500
The snapshot contains properties which we can use to monitor the upload.

00:03:08.500 --> 00:03:12.470
In our case, we're going to use the bytes transferred and

00:03:12.470 --> 00:03:17.485
total bytes properties to create the percentage of the progress.

00:03:17.485 --> 00:03:21.350
Then we can store this percentage inside a variable.

00:03:21.350 --> 00:03:24.960
I'm going to call this variable Progress.

00:03:26.980 --> 00:03:30.900
We're going to access the snapshots.

00:03:31.280 --> 00:03:35.240
The property is bytes transferred.

00:03:36.570 --> 00:03:40.855
This is the number of bytes which are currently being transferred

00:03:40.855 --> 00:03:47.210
divided by the snapshots.totalBytes.

00:03:51.200 --> 00:03:54.730
This is the total number of bytes from the file.

00:03:54.730 --> 00:03:56.710
Let's make this into a percentage.

00:03:56.710 --> 00:03:59.720
We multiply this by 100.

00:04:01.760 --> 00:04:05.020
This will give us a value between zero and

00:04:05.020 --> 00:04:09.335
100 and store it inside a variable called Progress.

00:04:09.335 --> 00:04:13.035
Now we have this upload value as a percentage.

00:04:13.035 --> 00:04:17.800
We can then send this information to the progress bar to update it.

00:04:17.800 --> 00:04:20.480
To do that, just know it's variable,

00:04:20.480 --> 00:04:26.930
I'm going to access the progress bar with a document.getElementById.

00:04:29.320 --> 00:04:38.730
We get the progress bar or an id or progress bar at this end of the string.

00:04:38.730 --> 00:04:44.120
Then all I want to do is set the value to be equal

00:04:44.120 --> 00:04:50.345
to this progress variable, etc.

00:04:50.345 --> 00:04:54.960
Now let's go over to the browser and check if this is working.

00:04:54.970 --> 00:04:58.145
We can see all progress elements.

00:04:58.145 --> 00:05:05.320
Now let's choose a file from the uploader and select Open.

00:05:06.650 --> 00:05:08.880
So appeased, we're working fine.

00:05:08.880 --> 00:05:11.450
We see the upload state change is caused in

00:05:11.450 --> 00:05:15.575
a progress bar to increase. That all looks good for now.

00:05:15.575 --> 00:05:18.894
Great. This is the first part completed.

00:05:18.894 --> 00:05:21.710
We just now need such of the emit method,

00:05:21.710 --> 00:05:25.475
just like we've done previously with the text components.

00:05:25.475 --> 00:05:30.920
This will send the name of the selected image up to the parent components.

00:05:30.920 --> 00:05:34.100
Let's do them now.

00:05:34.100 --> 00:05:37.170
Actually, first I'll just add a comment.

00:05:37.630 --> 00:05:40.385
This was the laid down response to,

00:05:40.385 --> 00:05:44.680
section is off with comments just so let's create for later.

00:05:44.680 --> 00:05:51.450
This can be [inaudible].

00:05:51.450 --> 00:05:54.160
This is for the progress bar.

00:05:59.210 --> 00:06:03.355
Now scroll down below this progress bar section.

00:06:03.355 --> 00:06:11.615
We're going to add this $emits to send the name of the image to the parents.

00:06:11.615 --> 00:06:16.600
I'm going to call this custom event Display Image Changed.

00:06:21.540 --> 00:06:23.935
The data we want to send,

00:06:23.935 --> 00:06:30.040
again is this.file, which is this data here.

00:06:30.040 --> 00:06:34.760
Then we can access the name of a file with.name.

00:06:36.230 --> 00:06:42.560
This filename is now sent to the parent file, which is carfront.view.

00:06:42.750 --> 00:06:45.565
Needs now go to this file and add

00:06:45.565 --> 00:06:50.825
a new data property to store the name of this image into.

00:06:50.825 --> 00:06:54.800
Down inside the data section,

00:06:54.800 --> 00:06:59.810
separated by comma, we can add our image name.

00:06:59.940 --> 00:07:03.665
This is going to be initially an empty string.

00:07:03.665 --> 00:07:09.460
When I need to listen for the events on the actual component in which it's passed from,

00:07:09.460 --> 00:07:14.825
so I need to look for the cc image upload image upload and then listen for the events.

00:07:14.825 --> 00:07:18.270
The event was called Display Image Changed.

00:07:24.670 --> 00:07:30.090
We can now set the image name to the value of the events.

00:07:32.020 --> 00:07:35.730
Image name equals $events.

00:07:36.710 --> 00:07:39.785
This is all something which we've done before.

00:07:39.785 --> 00:07:43.520
It's pretty much the same of what we've done with the text inputs.

00:07:43.520 --> 00:07:49.180
All we're doing is passing the name of the image rather than the value of the text.

00:07:49.180 --> 00:07:51.345
Let's test this is working.

00:07:51.345 --> 00:07:55.345
We need to output the image name data using the double curly braces.

00:07:55.345 --> 00:07:59.210
I'm going to do that over in the card display side for now.

00:07:59.210 --> 00:08:04.040
Open up the double curly braces and we can now put the value of

00:08:04.040 --> 00:08:11.160
this image name and say that.

00:08:11.160 --> 00:08:13.890
Let's go over to the browser.

00:08:13.890 --> 00:08:19.150
Now if we choose a file, select the image.

00:08:21.170 --> 00:08:23.570
Great. If everything went right,

00:08:23.570 --> 00:08:30.470
we will see the name of the image we selected outputting on the card. This is a big step.

00:08:30.470 --> 00:08:33.290
We now have the image being pushed Firebase.

00:08:33.290 --> 00:08:36.680
We now have the image preview appearing on the screen.

00:08:36.680 --> 00:08:41.590
We also have the name of the image being passed to the parent components.

00:08:41.590 --> 00:08:45.635
Now, we're ready to move on to creating the image output components,

00:08:45.635 --> 00:08:49.760
which will display the image of only card display section.

00:08:49.760 --> 00:08:52.830
We'll start with this in the next video.
