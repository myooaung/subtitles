WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.530 --> 00:00:05.265
Vue JS also provides us with a property called filters,

00:00:05.265 --> 00:00:08.790
which we can also add to our view instance.

00:00:08.790 --> 00:00:14.445
Filters are designed to apply common text formatting or transformation,

00:00:14.445 --> 00:00:18.180
such as changing strings to upper or lowercase.

00:00:18.180 --> 00:00:21.900
They not intended to be used for complex tasks.

00:00:21.900 --> 00:00:27.645
If you have something more complex then it is bad to use a computed property instead.

00:00:27.645 --> 00:00:30.885
Adding filters is made really simple.

00:00:30.885 --> 00:00:33.814
We can add them even when using v-bind,

00:00:33.814 --> 00:00:35.660
which we looked at earlier,

00:00:35.660 --> 00:00:39.009
or using the double curly brace syntax.

00:00:39.009 --> 00:00:45.390
To see this in action, I'm going to go over to our for loop in the index.html.

00:00:46.280 --> 00:00:50.180
Then inside the double curly braces will have name.

00:00:50.180 --> 00:00:55.640
We keep in place the name expression and then add our filter name after,

00:00:55.640 --> 00:00:59.010
separated by a pipe symbol.

00:01:00.770 --> 00:01:04.000
If we add a filter using v-bind,

00:01:04.000 --> 00:01:06.110
we can do exactly the same.

00:01:06.110 --> 00:01:09.350
We simply add the JavaScript expression first,

00:01:09.350 --> 00:01:12.835
then the name of the filter separated by the pipe.

00:01:12.835 --> 00:01:15.020
Then over in our view instance,

00:01:15.020 --> 00:01:17.970
we add our filters property.

00:01:20.080 --> 00:01:23.555
This is of course where we add all our filters.

00:01:23.555 --> 00:01:27.780
Let's add our two upper filter that we've just added.

00:01:29.060 --> 00:01:33.890
The syntax is just the same as the watchers that we looked at before.

00:01:33.890 --> 00:01:39.235
This is a function which takes in the value of the data passed to it.

00:01:39.235 --> 00:01:43.475
For our example, it will be the value of name.

00:01:43.475 --> 00:01:46.370
Just like when we looked at using watchers,

00:01:46.370 --> 00:01:49.025
we can name this value anything we like.

00:01:49.025 --> 00:01:53.610
We'll then return the value transformed to uppercase.

00:01:54.790 --> 00:02:01.490
See our uppercase. It's just plain JavaScript and is not provided to us by Vue JS.

00:02:01.490 --> 00:02:08.605
Again, this is a good example of how we can make Vue JS's data with plain JavaScript.

00:02:08.605 --> 00:02:12.670
Let's save this and test in the browser.

00:02:13.730 --> 00:02:16.275
Go to the input field,

00:02:16.275 --> 00:02:22.595
and if we type a name inside of there with lowercase and then press "Enter",

00:02:22.595 --> 00:02:26.905
we can see that the name is now transformed to uppercase.

00:02:26.905 --> 00:02:32.060
We can also use multiple filters and chain them together.

00:02:32.060 --> 00:02:34.250
All we need to do is go back over to

00:02:34.250 --> 00:02:38.010
the double curly braces where we added the first filter.

00:02:39.020 --> 00:02:42.130
Again, you separate it by a pipe we add

00:02:42.130 --> 00:02:45.690
the name of our second filter, which we want to apply.

00:02:47.060 --> 00:02:50.400
This works from left to right.

00:02:50.400 --> 00:02:54.665
In this case, "name" will be then passed to, "toUpper" filter.

00:02:54.665 --> 00:03:00.235
Then the value of the toUpper filter will then be passed to "formatName".

00:03:00.235 --> 00:03:02.865
So the order is important.

00:03:02.865 --> 00:03:10.405
We can see this order in action if we add the "formatName" filter over in the app.js.

00:03:10.405 --> 00:03:15.525
Just below the "toUpper" filter separated by a comma.

00:03:15.525 --> 00:03:18.250
We can add a "formatName".

00:03:18.680 --> 00:03:25.230
Again, this function takes in the value which is passed to it from "toUpper".

00:03:26.180 --> 00:03:30.840
Then if we simply console log the value passed to it,

00:03:32.900 --> 00:03:37.290
then go to the browser and open up the console.

00:03:42.970 --> 00:03:47.255
We can see that the value is in capital letters.

00:03:47.255 --> 00:03:53.400
This shows that we are getting the name value after it's been through the first filter.

00:03:54.380 --> 00:03:56.430
This is just an example,

00:03:56.430 --> 00:04:07.350
so we can remove the two upper filter and also remove it from our index page.

00:04:09.200 --> 00:04:13.190
Now we can add some formatting to our name

00:04:13.190 --> 00:04:18.325
and then go back over to our filter and remove the console log.

00:04:18.325 --> 00:04:21.350
The format in which we are going to apply is

00:04:21.350 --> 00:04:24.290
going to take the name that the user types in,

00:04:24.290 --> 00:04:30.905
is going to slice the first letter and then transform these to be uppercase.

00:04:30.905 --> 00:04:36.325
All the remaining characters afterwards will transform to lowercase.

00:04:36.325 --> 00:04:42.130
To do this, we're going to return the "value.slice".

00:04:42.500 --> 00:04:45.470
We're going to slice our position zero,

00:04:45.470 --> 00:04:48.325
which is the first letter.

00:04:48.325 --> 00:04:51.000
We only want the slice this first letter,

00:04:51.000 --> 00:04:54.370
so this is only going to be for one position.

00:04:54.370 --> 00:04:59.550
This first letter, then we are going to transform to uppercase.

00:05:00.670 --> 00:05:07.620
Then we're going to add to the end of this uppercase letter, again, the "value.slice".

00:05:08.840 --> 00:05:14.520
This is going to be the rest of the characters from position one onwards.

00:05:14.950 --> 00:05:19.480
All the rest is characters are going to be set to lowercase.

00:05:19.480 --> 00:05:28.070
Let's add this onto the end and then save that.

00:05:28.070 --> 00:05:30.410
Now if I go over to the browser.

00:05:30.410 --> 00:05:39.340
Let's add a name with a mixture of upper and lowercase and then press "Enter",

00:05:39.340 --> 00:05:43.050
and we can see the name is correctly formatted now.

00:05:43.580 --> 00:05:47.480
Of course, more complex formatting such as if

00:05:47.480 --> 00:05:51.500
the user adds a name with a surname or even free names,

00:05:51.500 --> 00:05:55.165
we needs to do a little bit more work to get around this.

00:05:55.165 --> 00:06:00.425
This may be a good case to switch to a computed value rather than the filter.

00:06:00.425 --> 00:06:02.570
Both for simple text formatting,

00:06:02.570 --> 00:06:06.240
using filters is an ideal way to do this.
