WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.500 --> 00:00:07.170
We now know how to parse data from the parent to the child component using Props.

00:00:07.170 --> 00:00:13.110
We can also pass data to the child component using a method called Slots.

00:00:13.110 --> 00:00:16.695
Slots are used for what is called content distribution.

00:00:16.695 --> 00:00:21.615
Often we need to mix the parent's and child component contently ever.

00:00:21.615 --> 00:00:23.835
In our app so far,

00:00:23.835 --> 00:00:26.115
if you go over to the App.vue,

00:00:26.115 --> 00:00:28.650
we can see we have the header at

00:00:28.650 --> 00:00:34.275
the top and then below it will have the dynamic components elements.

00:00:34.275 --> 00:00:39.060
We do not always have our components neatly stacked on top of each other,

00:00:39.060 --> 00:00:41.425
like we do so far in this app.

00:00:41.425 --> 00:00:44.750
Components can be nested inside of each other,

00:00:44.750 --> 00:00:51.625
or we can even nest HTML content between the components opening and closing tag.

00:00:51.625 --> 00:00:54.075
For example, let's say we wanted

00:00:54.075 --> 00:00:58.975
our component elements to be nested inside of the header component.

00:00:58.975 --> 00:01:06.960
Let's open up the nav-header and then if we cut the content of the component,

00:01:06.960 --> 00:01:14.170
including the keep-alive tags and then paste it in there.

00:01:15.140 --> 00:01:19.465
We now have a situation where things get a little bit messy.

00:01:19.465 --> 00:01:21.395
The nav-header component has

00:01:21.395 --> 00:01:28.290
its own template file as does the dynamic component such as conference.

00:01:28.290 --> 00:01:33.300
We need a way of telling Vue js where inside of

00:01:33.300 --> 00:01:39.035
the nav-header our dynamic components will be added.

00:01:39.035 --> 00:01:42.590
This header file has its own templates.

00:01:42.590 --> 00:01:47.905
So will the dynamic component be rendered before or after this template?

00:01:47.905 --> 00:01:50.520
Well, this is actually up to us.

00:01:50.520 --> 00:01:52.875
This is where Slot come in.

00:01:52.875 --> 00:01:57.065
Slot allow us to control the distribution of this content.

00:01:57.065 --> 00:02:02.545
We declare a slot inside of the template to place the content inside.

00:02:02.545 --> 00:02:05.830
Currently, if we over to the browser now,

00:02:07.120 --> 00:02:11.240
we only see the header at the top and no sign of

00:02:11.240 --> 00:02:15.305
the content which we have nested inside the app.

00:02:15.305 --> 00:02:20.495
Just here. You only actually see this header section and nothing else.

00:02:20.495 --> 00:02:23.315
To display the nested content,

00:02:23.315 --> 00:02:25.895
over in the Header.vue file,

00:02:25.895 --> 00:02:31.525
we can add the special slot element inside of the parent template.

00:02:31.525 --> 00:02:34.740
Just underneath the div-wrapper,

00:02:34.740 --> 00:02:37.275
I want to add the slot,

00:02:37.275 --> 00:02:43.005
opening and closing tag. Save that.

00:02:43.005 --> 00:02:48.190
Then now we can see that the content is now placed inside.

00:02:48.190 --> 00:02:55.100
This is the dynamic component which is at the top and then below we have the header.

00:02:55.100 --> 00:03:01.525
This is because we've placed a slot above the header section, which is here.

00:03:01.525 --> 00:03:05.205
We can also add the slot anywhere we like.

00:03:05.205 --> 00:03:10.550
We can cut that out with the template and then add it underneath

00:03:10.550 --> 00:03:16.390
the menu links and now we see our app has returned back to normal.

00:03:16.390 --> 00:03:20.040
We're not just limited to nesting only components.

00:03:20.040 --> 00:03:24.625
We can also nest HTML elements inside of components.

00:03:24.625 --> 00:03:29.150
First, let's return our app back to how it was.

00:03:29.150 --> 00:03:32.430
If we remove these slots,

00:03:32.630 --> 00:03:35.385
then over in App.vue,

00:03:35.385 --> 00:03:40.380
if we move the components outside of the header section.

00:03:43.610 --> 00:03:47.010
I'm going to create a new footer component,

00:03:47.010 --> 00:03:52.170
and then pass the content to this via nesting HTML elements.

00:03:52.310 --> 00:03:55.710
Let's take a look at this in action.

00:03:55.710 --> 00:03:57.720
Over in the components,

00:03:57.720 --> 00:03:59.340
we're going to add a new file.

00:03:59.340 --> 00:04:02.790
This time we're going to add outside of the current section.

00:04:02.790 --> 00:04:06.755
So make sure this is alongside the Header.vue.

00:04:06.755 --> 00:04:10.890
This is the Footer.vue file.

00:04:12.890 --> 00:04:16.840
I've kept this outside of the card sub-folder to

00:04:16.840 --> 00:04:21.320
keep only card related components organized inside there.

00:04:21.420 --> 00:04:25.130
Let's add our familiar template.

00:04:28.310 --> 00:04:32.190
We need a root element to surround our content.

00:04:32.190 --> 00:04:37.910
We can use the HTML file footer element rather than a div.

00:04:37.910 --> 00:04:40.980
As we already know, we need to import and register

00:04:40.980 --> 00:04:44.115
the component to make sure this is available.

00:04:44.115 --> 00:04:48.850
In the App.vue file, let's do that now.

00:04:49.250 --> 00:04:55.815
I'm just going to copy an import statement and paste

00:04:55.815 --> 00:05:04.080
same and then change it to be the Footer,

00:05:04.270 --> 00:05:07.710
also same for the file path.

00:05:08.020 --> 00:05:11.720
Make sure that this is just components/Footer,

00:05:11.720 --> 00:05:14.940
we don't need the card folder.

00:05:15.370 --> 00:05:17.710
Down in the components,

00:05:17.710 --> 00:05:20.905
we can register it separated by a comma.

00:05:20.905 --> 00:05:24.800
I'm going to call mine ccFooter,

00:05:24.990 --> 00:05:28.160
which is a Footer file.

00:05:29.600 --> 00:05:35.400
Now this is registered, we can go up to the template still within App.vue.

00:05:35.400 --> 00:05:38.965
Just underneath the kept-alive component,

00:05:38.965 --> 00:05:43.560
going to add these elements of ccFooter.

00:05:49.790 --> 00:05:55.235
Our Footer component currently has no content inside the template,

00:05:55.235 --> 00:05:58.770
so we'll not see any changes to the app.

00:06:02.710 --> 00:06:06.335
This is because we're going to add the Footer content

00:06:06.335 --> 00:06:12.000
as nested HTML elements within this Footer component.

00:06:12.380 --> 00:06:16.220
Rather than having our content inside the Footer file,

00:06:16.220 --> 00:06:19.200
we can add it between these two tags.

00:06:20.360 --> 00:06:26.850
I'm going to start by adding some text of Creative Cards.

00:06:26.850 --> 00:06:33.750
I'm going to add the HTML entity for the copyright symbol,

00:06:33.750 --> 00:06:40.210
which is the ampersand and a copy with a semicolon at the end.

00:06:41.360 --> 00:06:50.220
Then I want to add a bootstrap class for some styling of text-center.

00:06:53.500 --> 00:06:57.120
There we get to work by adding some nav links.

00:06:57.120 --> 00:07:03.540
Open up the nav-elements and there we can create our unordered list.

00:07:06.640 --> 00:07:10.780
I'm going to add some classes to the unordered list of

00:07:10.780 --> 00:07:16.180
nav and then justify content-center.

00:07:20.720 --> 00:07:23.910
Then we can add some list items.

00:07:23.910 --> 00:07:29.235
I'm just going to go over to the header and grab one of these list items,

00:07:29.235 --> 00:07:37.810
just so we can keep the classes consistent and then paste this inside of the ul.

00:07:39.410 --> 00:07:42.150
We've got the class of nav-item.

00:07:42.150 --> 00:07:44.235
We have the link,

00:07:44.235 --> 00:07:47.170
which is shown by this click this now.

00:07:49.790 --> 00:07:58.485
The first one I'm going to add as Home and then when I add a couple of more links,

00:07:58.485 --> 00:08:04.030
copy that and paste in two more times.

00:08:05.780 --> 00:08:07.920
Now we've got our three links.

00:08:07.920 --> 00:08:09.240
The first one is Home.

00:08:09.240 --> 00:08:16.710
The second one I'm going to change to About Us and then the third and final link,

00:08:16.710 --> 00:08:24.420
I'm going to change to Contact Us and then give that a save.

00:08:24.420 --> 00:08:29.960
If we go over to the browser and refresh,

00:08:29.960 --> 00:08:33.025
we see that no changes have applied.

00:08:33.025 --> 00:08:38.705
We know from our earlier example that nested content will not show.

00:08:38.705 --> 00:08:42.425
We need to add our slot element to the parent component,

00:08:42.425 --> 00:08:50.190
which is Footer.vue, so let's add this inside here.

00:08:53.840 --> 00:08:57.675
With the slot element added,

00:08:57.675 --> 00:09:00.830
Vue js now knows where we want to distribute

00:09:00.830 --> 00:09:06.590
content that we've added in between the footer tags.

00:09:07.670 --> 00:09:11.490
Make sure that's saved and then go over to the browser,

00:09:11.490 --> 00:09:15.930
and then down at the bottom we have our footer content.

00:09:18.980 --> 00:09:25.030
This is how we can use Slots to distribute content to where we want it to appear.

00:09:25.030 --> 00:09:28.480
This is a basic look at using Slots.

00:09:28.480 --> 00:09:31.610
There are a few more things to cover when using these,

00:09:31.610 --> 00:09:35.550
and we'll continue to look at these in the next video.
