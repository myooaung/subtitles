WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.640 --> 00:00:07.335
Now we have access to the Vue.js library by using ECD and link.

00:00:07.335 --> 00:00:11.815
We can now begin working with inside of our app.js file.

00:00:11.815 --> 00:00:15.180
App.js is included in starts project.

00:00:15.180 --> 00:00:17.085
You should already have download it.

00:00:17.085 --> 00:00:19.350
This file you can name anything you like.

00:00:19.350 --> 00:00:21.810
So you're free to choose if you prefer.

00:00:21.810 --> 00:00:25.050
We will begin by accessing the view object,

00:00:25.050 --> 00:00:30.150
and this allows us to create a new view instance by typing New View,

00:00:30.150 --> 00:00:33.900
followed by the parenthesis and a semicolon.

00:00:33.900 --> 00:00:37.680
This new view instance is going to basically control

00:00:37.680 --> 00:00:42.270
our application and the HTML data to be rendered to the screen.

00:00:42.270 --> 00:00:45.805
We then need to pass in a options objects,

00:00:45.805 --> 00:00:47.855
which contains various options,

00:00:47.855 --> 00:00:50.120
which we'll explore throughout this course,

00:00:50.120 --> 00:00:51.650
such as HTML view,

00:00:51.650 --> 00:00:54.805
which HTML element we wanted to mount to.

00:00:54.805 --> 00:00:58.745
It also contains all of our methods and data.

00:00:58.745 --> 00:01:01.655
First, let's take a look at el.

00:01:01.655 --> 00:01:05.840
This keyword tells you which HTML element to control.

00:01:05.840 --> 00:01:10.700
In our case, we want to control the index.html page.

00:01:10.700 --> 00:01:14.315
So I'm going to use the main surrounding div container,

00:01:14.315 --> 00:01:17.330
which would give a AID of up.

00:01:17.330 --> 00:01:20.900
So we can set the string value of el to be equal

00:01:20.900 --> 00:01:25.429
to up with the hash prefix because it's AID.

00:01:25.429 --> 00:01:28.670
This is just like a CSS selector.

00:01:28.670 --> 00:01:32.900
So if we wanted to control a div with a class instead of an ID,

00:01:32.900 --> 00:01:36.180
we'll just replace the hash with a dot.

00:01:37.120 --> 00:01:40.010
Now we've selected our elements.

00:01:40.010 --> 00:01:42.830
We want to be working with the data property.

00:01:42.830 --> 00:01:45.650
This contains an object which stores all of

00:01:45.650 --> 00:01:49.710
the data we want to use inside of this view instance.

00:01:50.300 --> 00:01:56.215
At the moment, all of the data inside our app is just plain HTML,

00:01:56.215 --> 00:01:59.625
which Vue.js Clooney has no control over.

00:01:59.625 --> 00:02:03.515
For example, all the data about the listed events,

00:02:03.515 --> 00:02:05.315
such as the event dates,

00:02:05.315 --> 00:02:09.745
the event title, and event description is hand coded.

00:02:09.745 --> 00:02:16.210
We can change this by adding it to the data object inside of our view instance.

00:02:16.210 --> 00:02:22.445
So I'm going to begin transferring this hand-coded information over to our date property.

00:02:22.445 --> 00:02:25.115
So let's begin by including dates.

00:02:25.115 --> 00:02:27.410
So select the date from there,

00:02:27.410 --> 00:02:29.410
put it out HTML.

00:02:29.410 --> 00:02:32.105
Then if we go over to our dates property,

00:02:32.105 --> 00:02:34.615
we can set a name for this dates.

00:02:34.615 --> 00:02:38.965
So I want to call mine eventDate followed by the column,

00:02:38.965 --> 00:02:41.110
and then inside of a string,

00:02:41.110 --> 00:02:44.000
we can add the date inside of there.

00:02:46.040 --> 00:02:49.455
We can then do the same with the event title.

00:02:49.455 --> 00:02:51.865
So back over in the index page,

00:02:51.865 --> 00:02:54.820
if you put the name of Summer Festival,

00:02:54.820 --> 00:02:57.785
and then inside of our data,

00:02:57.785 --> 00:03:00.945
back over in our app.js,

00:03:00.945 --> 00:03:04.545
and then next we'll call this the eventTitle.

00:03:04.545 --> 00:03:07.600
Then just as before with our days as a string.

00:03:07.600 --> 00:03:11.210
So pasting this between the quotations.

00:03:11.210 --> 00:03:15.655
Then finally, we will also do the same for the event description.

00:03:15.655 --> 00:03:18.340
So go over to the index page,

00:03:18.340 --> 00:03:21.140
put the event description,

00:03:22.670 --> 00:03:25.770
and then just under the eventTitle,

00:03:25.770 --> 00:03:29.500
we'll create the eventDescription data name,

00:03:29.500 --> 00:03:33.120
and then paste this in as a value.

00:03:33.910 --> 00:03:39.350
So now we need a way of adding this data back into our HTML.

00:03:39.350 --> 00:03:42.275
To insert this data into our code,

00:03:42.275 --> 00:03:47.755
we do it with a special template syntax of double curly braces.

00:03:47.755 --> 00:03:53.765
You will also see this referred to as mustache syntax or text interpolation.

00:03:53.765 --> 00:03:57.390
This is how we link our data with the DOM.

00:03:57.460 --> 00:04:01.190
This also means that the data is reactive and

00:04:01.190 --> 00:04:04.850
will be updated when there is a change with the data.

00:04:04.850 --> 00:04:07.040
Inside of these curly braces,

00:04:07.040 --> 00:04:11.180
we can add the name of the date property which we just created.

00:04:11.180 --> 00:04:18.000
So let's start with the eventDates in the place of where we put out the date just before.

00:04:18.410 --> 00:04:22.260
So let's save that and refresh the browser,

00:04:22.260 --> 00:04:26.710
and now we can see the date is appearing back on the screen.

00:04:26.710 --> 00:04:31.925
So this date is now working because it's inside of the double curly braces.

00:04:31.925 --> 00:04:33.860
So Vue.js knows to look for

00:04:33.860 --> 00:04:38.675
this property name inside of the date object which we just created.

00:04:38.675 --> 00:04:44.625
It will also be updated whenever the value of eventDate is changed.

00:04:44.625 --> 00:04:48.110
So what I'd like you to do now is do exactly the same for

00:04:48.110 --> 00:04:51.515
the eventTitle and also the eventDescription.

00:04:51.515 --> 00:04:54.570
So pause and give that a go.

00:04:54.790 --> 00:04:57.620
If it's something you don't feel comfortable with,

00:04:57.620 --> 00:04:59.675
just yet, don't worry.

00:04:59.675 --> 00:05:03.335
I'll continue now by adding the eventTitle.

00:05:03.335 --> 00:05:05.720
So do the same just as before.

00:05:05.720 --> 00:05:06.920
In place of the title,

00:05:06.920 --> 00:05:11.855
we'll add the double curly braces and then add the eventTitle.

00:05:11.855 --> 00:05:14.510
Finally, in a place where we put

00:05:14.510 --> 00:05:20.190
the eventDescription will also add the eventDescription into there.

00:05:21.710 --> 00:05:26.630
So save that and we'll do a final refresh just to check it's all working

00:05:26.630 --> 00:05:30.770
okay. So it's not looking great.

00:05:30.770 --> 00:05:33.200
We've got the dates, the title,

00:05:33.200 --> 00:05:34.760
and also the description,

00:05:34.760 --> 00:05:36.665
if [inaudible] back on the page.

00:05:36.665 --> 00:05:41.225
But this time we have Vue.js controlling the data.

00:05:41.225 --> 00:05:45.215
So finally, I just want to finish off with one last thing.

00:05:45.215 --> 00:05:48.550
Because these free data properties are related,

00:05:48.550 --> 00:05:53.510
I am going to group them together inside of their own events object.

00:05:53.510 --> 00:05:55.265
This is totally optional,

00:05:55.265 --> 00:06:01.350
but it makes sense especially if we extend up by creating more than one events.

00:06:01.990 --> 00:06:05.180
So back inside the data property,

00:06:05.180 --> 00:06:08.490
we want to create the events object.

00:06:09.860 --> 00:06:13.260
Then I'm going to cut the eventDate,

00:06:13.260 --> 00:06:16.095
the eventTitle and eventDescription,

00:06:16.095 --> 00:06:21.240
and then make sure these pasted inside of the new event object.

00:06:26.060 --> 00:06:28.530
Now back over in the browser,

00:06:28.530 --> 00:06:29.885
if we do a refresh,

00:06:29.885 --> 00:06:32.540
we see that the data disappears.

00:06:32.540 --> 00:06:35.120
This is because we need to tell Vue that

00:06:35.120 --> 00:06:39.400
these properties and now inside of an object called events.

00:06:39.400 --> 00:06:44.045
So it just means make one more change inside the index page.

00:06:44.045 --> 00:06:49.475
So all we need to do is our events in front of eventDates,

00:06:49.475 --> 00:06:52.620
the same with eventTitle,

00:06:52.660 --> 00:06:57.090
and then finally the same with eventDescription.

00:06:57.800 --> 00:07:04.740
So hit save. Now if we go back over to the browser and gives a refresh,

00:07:04.910 --> 00:07:09.290
we should see that all our data is back on the screen.

00:07:09.290 --> 00:07:13.580
So now we've created our Vue instance and looked at how to use

00:07:13.580 --> 00:07:18.125
the data object to control a text inside of our application.

00:07:18.125 --> 00:07:21.800
Next up, we'll take a look at how Vue JS handles

00:07:21.800 --> 00:07:26.940
templates and utilizes the virtual DOM. I'll see you there.
