WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.310 --> 00:00:05.490
We have already covered looping through arrays during this project.

00:00:05.490 --> 00:00:09.480
In this video, I want to continue with our new vue instance,

00:00:09.480 --> 00:00:13.305
by adding a new array objects of navigation links,

00:00:13.305 --> 00:00:15.870
which we can also loop through.

00:00:15.870 --> 00:00:19.990
The values in this object also contains AID.

00:00:19.990 --> 00:00:23.205
So you can also use this to add a unique key.

00:00:23.205 --> 00:00:29.220
So view can keep track of the items listed inside of our app.js.

00:00:29.220 --> 00:00:32.039
Let's begin creating our array of objects,

00:00:32.039 --> 00:00:34.200
toward our navigation links.

00:00:34.200 --> 00:00:36.615
Underneath the app name.

00:00:36.615 --> 00:00:40.240
I'm going to start with the name of navLinks.

00:00:41.410 --> 00:00:43.910
This is going to be an array.

00:00:43.910 --> 00:00:50.280
Each array item is an object which has a key value pair of name and ID.

00:00:50.530 --> 00:00:54.400
Let's open the curly braces for the first link.

00:00:54.400 --> 00:00:57.510
I'm going to set the name as the key,

00:00:57.510 --> 00:01:00.700
and home as the value.

00:01:01.100 --> 00:01:03.425
Then separate by a comma.

00:01:03.425 --> 00:01:06.120
We're also going to add an ID.

00:01:06.190 --> 00:01:10.890
So I'm going to keep it simple and start with ID of one,

00:01:11.600 --> 00:01:13.850
and then separate it by a comma,

00:01:13.850 --> 00:01:15.560
we can start our second link.

00:01:15.560 --> 00:01:19.160
So I'm going to copy and paste the first item.

00:01:19.160 --> 00:01:22.860
Change the name to upcoming events,

00:01:23.960 --> 00:01:27.910
and then also change the ID to number 2.

00:01:28.880 --> 00:01:31.965
Then once more, paste the same,

00:01:31.965 --> 00:01:35.280
and we'll call this one guest benefits.

00:01:37.160 --> 00:01:39.510
Give us an ID of three,

00:01:39.510 --> 00:01:41.285
and then the final link,

00:01:41.285 --> 00:01:44.130
we're going to add latest news,

00:01:45.790 --> 00:01:49.650
and then cause it to be ID number 4.

00:01:50.720 --> 00:01:54.520
Then let's go also to our index.html web page,

00:01:54.520 --> 00:01:58.440
and look at how we can loop through this array of objects.

00:01:59.660 --> 00:02:02.240
I'm going to create a new div for this,

00:02:02.240 --> 00:02:06.230
just underneath the closing div tag for the app name.

00:02:06.230 --> 00:02:09.420
Create the surrounding div,

00:02:09.830 --> 00:02:13.655
and then inside here I'm going to create a unordered list,

00:02:13.655 --> 00:02:17.670
to display all the links from navigation.

00:02:19.490 --> 00:02:24.085
Then within this, we want to add a HTML template tag.

00:02:24.085 --> 00:02:28.615
This template tag can be used with V4 and also VF2.

00:02:28.615 --> 00:02:31.700
To render a block of multiple elements.

00:02:31.700 --> 00:02:33.920
Template is just a container,

00:02:33.920 --> 00:02:35.735
just like an ordinary div.

00:02:35.735 --> 00:02:39.635
But this template element will not be rendered to the DOM.

00:02:39.635 --> 00:02:43.990
Then we'd inside this template we can create the V4 loop.

00:02:43.990 --> 00:02:48.000
So I'm going to call this navLink in navLinks.

00:02:48.000 --> 00:02:52.810
Of course, navLinks is the name of the date property that we've created.

00:02:55.010 --> 00:02:57.360
Then we didn't align items,

00:02:57.360 --> 00:03:00.040
we're going to create our list items.

00:03:00.350 --> 00:03:04.110
We use this with the double curly braces.

00:03:04.110 --> 00:03:07.870
The first one is going to be navLink.name.

00:03:10.460 --> 00:03:13.230
I'll create one more list item below,

00:03:13.230 --> 00:03:15.820
which is going to be navLink.id.

00:03:18.560 --> 00:03:23.930
This will select the name and id for each individual object.

00:03:23.930 --> 00:03:26.930
So now we have the content inside the template.

00:03:26.930 --> 00:03:28.730
If we go over to the div tools,

00:03:28.730 --> 00:03:32.160
we can select the div that we've created.

00:03:33.530 --> 00:03:36.660
We select the unordered list.

00:03:36.660 --> 00:03:40.075
We can see that the ul tags is there,

00:03:40.075 --> 00:03:43.835
and then it's followed by the content within the template tags.

00:03:43.835 --> 00:03:47.660
So we don't actually see the template element rendered to the screen.

00:03:47.660 --> 00:03:54.125
But we do see on the screen the name and also the id for each object inside of our array.

00:03:54.125 --> 00:03:59.345
We can also display the key value pairs of each object tool.

00:03:59.345 --> 00:04:03.840
Key in both the name and also the id from the object.

00:04:03.840 --> 00:04:06.545
Being the value after the key,

00:04:06.545 --> 00:04:08.735
such as home and one.

00:04:08.735 --> 00:04:13.770
We can simplify what we already have into one list item.

00:04:15.070 --> 00:04:18.780
So if we delete the second list item,

00:04:19.850 --> 00:04:24.610
and then we can add a second V4 loop.

00:04:27.560 --> 00:04:31.840
This one is going to be value in navLink.

00:04:33.130 --> 00:04:35.570
The name value is optional.

00:04:35.570 --> 00:04:37.190
This can be anything we want,

00:04:37.190 --> 00:04:39.800
but the name navLink is also optional,

00:04:39.800 --> 00:04:44.010
but he must match the name inside the outer loop.

00:04:45.580 --> 00:04:48.530
We'll also add a horizontal rule,

00:04:48.530 --> 00:04:51.480
so can separate each list item.

00:04:53.170 --> 00:04:57.200
Now if we add value into the double curly braces,

00:04:57.200 --> 00:05:00.170
you can see this output to the screen.

00:05:02.690 --> 00:05:05.095
So go over to the browser,

00:05:05.095 --> 00:05:09.080
and it prints out the keys and the values of the objects as a pair.

00:05:09.080 --> 00:05:13.290
We can also separate them to work with them independently.

00:05:14.470 --> 00:05:19.740
If we surround value inside the brackets.

00:05:21.940 --> 00:05:24.620
We can also add a key,

00:05:24.620 --> 00:05:29.900
which means we have both the key and the value available to use independently.

00:05:29.900 --> 00:05:33.990
So after value, add a comma and then key.

00:05:35.930 --> 00:05:39.005
Now instead of just outputting the value,

00:05:39.005 --> 00:05:46.810
will also output the key separate with the pipe,

00:05:47.690 --> 00:05:49.995
and then back over to the browser.

00:05:49.995 --> 00:05:52.150
We can see this in action.

00:05:52.520 --> 00:05:57.380
We have the key and value printed for each object.

00:05:57.380 --> 00:06:01.400
We can also add a third argument is key and value.

00:06:01.400 --> 00:06:07.715
Remember we added a index number to the V4 loop to print the names in our guest list.

00:06:07.715 --> 00:06:11.000
Well, we can also do the same here with the third arguments.

00:06:11.000 --> 00:06:12.890
I'm going to call it index again,

00:06:12.890 --> 00:06:15.775
because it makes sense to name this.

00:06:15.775 --> 00:06:21.340
So separated by comma add index as the third argument.

00:06:22.670 --> 00:06:26.615
Then as a third argument inside the double curly braces,

00:06:26.615 --> 00:06:29.850
we're also going to print out the index.

00:06:33.370 --> 00:06:38.510
So save and then go over to our project and then refresh.

00:06:38.510 --> 00:06:43.330
Now we can also see the index printed next to each item.

00:06:43.330 --> 00:06:46.185
Now we know how to loop through objects.

00:06:46.185 --> 00:06:49.055
Let's put his technique into practice in the next video.

00:06:49.055 --> 00:06:50.765
By our navigation links,

00:06:50.765 --> 00:06:53.970
how we want them to look inside our app.
