WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:04.070 --> 00:00:06.150
We now know that we can use

00:00:06.150 --> 00:00:11.609
multiple Vue instances to control a particular sections of our application.

00:00:11.609 --> 00:00:14.190
We discussed how may be useful to do this,

00:00:14.190 --> 00:00:17.160
to group-related functionality together,

00:00:17.160 --> 00:00:20.370
such as grouping all the Navbar functionality,

00:00:20.370 --> 00:00:22.260
as in our example,

00:00:22.260 --> 00:00:25.590
or even a sidebar maybe could use case.

00:00:25.590 --> 00:00:31.965
We can't directly access things such as our data and methods from an instance,

00:00:31.965 --> 00:00:36.900
from inside of a different instance using this keyword;

00:00:36.900 --> 00:00:40.075
however, there is another way to get around this.

00:00:40.075 --> 00:00:44.119
If you want to access data from an instance externally,

00:00:44.119 --> 00:00:47.755
we can give each instance a variable name.

00:00:47.755 --> 00:00:52.940
If go over to our app.js and this one make this a little

00:00:52.940 --> 00:00:58.540
bit more readable by clicking on the collapse button on the left.

00:00:59.270 --> 00:01:02.175
We'll do that for our first instance.

00:01:02.175 --> 00:01:04.450
On second instance.

00:01:05.090 --> 00:01:08.155
Just before we call New Vue,

00:01:08.155 --> 00:01:16.834
and we want to add a variable name of vm1 and set this equal to our new view instance;

00:01:16.834 --> 00:01:23.280
and then do the same for the second one; So variable vm2.

00:01:24.200 --> 00:01:28.390
You'll often see these variables called vm.

00:01:28.390 --> 00:01:30.990
Distance for vue model,

00:01:30.990 --> 00:01:35.860
as Vue was inspired by the MVVM design pattern.

00:01:35.860 --> 00:01:40.915
You can read more about this with the link at the end of the section if you like.

00:01:40.915 --> 00:01:43.700
This variable name is totally up to you though.

00:01:43.700 --> 00:01:45.895
It can be named anything you like.

00:01:45.895 --> 00:01:52.175
Then I can reference our instance outside the instance using normal JavaScript.

00:01:52.175 --> 00:01:58.700
So if we wanted to change from data in the first instance of vm1,

00:01:58.700 --> 00:02:01.355
such as the event capacity.

00:02:01.355 --> 00:02:03.660
We can do it like this.

00:02:03.880 --> 00:02:09.035
If we make sure the outside both vm1 and vm2,

00:02:09.035 --> 00:02:11.285
we can select vm1.

00:02:11.285 --> 00:02:18.550
eventCapacity'. Then I'm gonna set this to be 15.

00:02:18.910 --> 00:02:21.170
Now if we go over to the app,

00:02:21.170 --> 00:02:23.095
we can see the change.

00:02:23.095 --> 00:02:26.685
We can see Attending is now 0 or 15,

00:02:26.685 --> 00:02:29.670
rather than o of 25.

00:02:29.670 --> 00:02:35.810
Its changes being done with normal JavaScript and from outside of the view instance.

00:02:35.810 --> 00:02:37.460
We can also do the same,

00:02:37.460 --> 00:02:40.499
but from within our second instance.

00:02:41.060 --> 00:02:47.200
Let's add a method to our vm2 instance.

00:02:48.050 --> 00:02:52.240
This method I'm going to call 'capacity changed.

00:02:59.090 --> 00:03:03.885
Then within here we can cut the JavaScript that we used before.

00:03:03.885 --> 00:03:07.810
So cut 'vm1.eventCapacity.

00:03:08.450 --> 00:03:12.380
Now paste this inside of the function.

00:03:13.760 --> 00:03:15.820
Then over in HTML,

00:03:15.820 --> 00:03:19.610
we can call this method by adding a new button.

00:03:20.910 --> 00:03:26.120
Let's add a new button inside of the navigation section.

00:03:26.120 --> 00:03:28.690
Just after the horizontal line,

00:03:28.690 --> 00:03:37.780
I'm going to add a button with a click handler.

00:03:39.740 --> 00:03:44.690
This is going to trigger the capacity change method.

00:03:47.120 --> 00:03:49.900
So when this method is called,

00:03:49.900 --> 00:03:53.575
the method is run inside of the vm2 instance.

00:03:53.575 --> 00:04:01.460
However, it is changing the event capacity data from our vm1 instance. Save that.

00:04:01.460 --> 00:04:04.945
If we refresh the browser and then click the button,

00:04:04.945 --> 00:04:08.570
the capacity should change again to 15.

00:04:09.420 --> 00:04:13.975
This is a really simple example of how we can access instances,

00:04:13.975 --> 00:04:19.630
both would using JavaScript externally and also from within of instances.

00:04:19.630 --> 00:04:22.040
It's important to know how to do this,

00:04:22.040 --> 00:04:27.035
if we ever need to have access to our instances from external sources.

00:04:27.035 --> 00:04:30.480
We'll leave this video there and I'll see you next time.
