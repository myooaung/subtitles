WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:05.235
Now we're going to take a look at passing data between components,

00:00:05.235 --> 00:00:09.615
more specifically data from a child to a parent components.

00:00:09.615 --> 00:00:15.765
First, we need to understand the parent-child relationship with components.

00:00:15.765 --> 00:00:18.600
App.vue is the main wrapper,

00:00:18.600 --> 00:00:21.090
and all the content is contained within it.

00:00:21.090 --> 00:00:24.570
It's effectively at the top level.

00:00:24.570 --> 00:00:28.680
This means all the components we add inside here,

00:00:28.680 --> 00:00:33.700
such as the nav-header and the card-fronts.

00:00:34.040 --> 00:00:38.925
They're all child components of this app.vue file.

00:00:38.925 --> 00:00:43.805
Also soon in this project we'll create a text-input components,

00:00:43.805 --> 00:00:47.710
and when we do this inside of the card from file,

00:00:47.710 --> 00:00:51.185
we'll also add a component just like this.

00:00:51.185 --> 00:00:57.360
Once you've created it, we'll also add the text inputs just like we've done before.

00:00:57.360 --> 00:00:59.739
Our card from dot-vue components,

00:00:59.739 --> 00:01:02.480
is now apparent to this text inputs.

00:01:02.480 --> 00:01:06.250
A text input is the child components.

00:01:06.250 --> 00:01:11.815
We're now going to pass data from our header file to the app.vue.

00:01:11.815 --> 00:01:14.480
With this knowledge, we now know that this is passing

00:01:14.480 --> 00:01:18.055
data from the child to the parent components.

00:01:18.055 --> 00:01:21.935
We can do this with what we call custom events.

00:01:21.935 --> 00:01:25.445
If we go over to the header dot vue file,

00:01:25.445 --> 00:01:27.770
we want to pass to the parent file,

00:01:27.770 --> 00:01:33.270
which is app.vue which page from the menu has been selected.

00:01:33.800 --> 00:01:39.170
We want to do this, so app.vue knows which component to display,

00:01:39.170 --> 00:01:42.685
such as the front of the card or the back.

00:01:42.685 --> 00:01:45.410
The first thing we want to do is to create

00:01:45.410 --> 00:01:49.910
a data property to keep track of the selected page.

00:01:49.910 --> 00:01:54.119
Let's add our export default,

00:01:54.380 --> 00:01:58.295
and I want to create the data property which remember,

00:01:58.295 --> 00:02:02.670
this is a function when use swayed components.

00:02:03.790 --> 00:02:11.310
I'm going to return the data property name of page selected.

00:02:14.480 --> 00:02:18.250
To begin, this is going to be an empty string.

00:02:18.400 --> 00:02:22.340
Now we can set up a click listener on each of the links in

00:02:22.340 --> 00:02:26.435
the menu to change the value of page selected.

00:02:26.435 --> 00:02:31.385
Go back up to the templates and inside the links,

00:02:31.385 --> 00:02:35.790
go to add a new attributes of art click.

00:02:36.380 --> 00:02:40.000
When this is clicked, we're going to set page,

00:02:40.000 --> 00:02:47.950
select it to be equal to a string of card fronts.

00:02:52.190 --> 00:02:57.115
Once this is clicked, spade selected will no longer be an empty string.

00:02:57.115 --> 00:03:00.605
It will be replaced with this text value of card fronts,

00:03:00.605 --> 00:03:04.420
and then we need to do the same for the over free links.

00:03:04.420 --> 00:03:08.840
Copy the click listener and then paste in.

00:03:08.840 --> 00:03:13.700
This time, this is going to be card inside left.

00:03:16.310 --> 00:03:22.030
The third one is for the card inside right.

00:03:26.390 --> 00:03:31.130
Then the final one is going to be for the back of the card.

00:03:31.130 --> 00:03:34.920
The component we're going to be calling this is card back.

00:03:36.220 --> 00:03:41.030
So far we've only created the card front components,

00:03:41.030 --> 00:03:43.510
but we'll create the over soon.

00:03:43.510 --> 00:03:45.630
Also the names we add here,

00:03:45.630 --> 00:03:48.110
most much the component names we gave to

00:03:48.110 --> 00:03:51.550
them when we register them for this to work correctly,

00:03:51.550 --> 00:03:57.430
such as the card fronts which you've added in app.vue.

00:04:01.250 --> 00:04:03.530
Back over in the header,

00:04:03.530 --> 00:04:06.065
I'm going to now create a watcher.

00:04:06.065 --> 00:04:10.460
This is going to watch for any changes to the page selected data,

00:04:10.460 --> 00:04:13.795
i.e, when we select a new manually.

00:04:13.795 --> 00:04:16.605
Go back down to the script,

00:04:16.605 --> 00:04:19.590
and just underneath the data property,

00:04:19.590 --> 00:04:22.165
you can add a comma, and then create

00:04:22.165 --> 00:04:26.850
our watch section and then create our watch properties.

00:04:26.850 --> 00:04:31.020
So we want to watch the page selected data.

00:04:31.330 --> 00:04:33.905
When page selected is changed,

00:04:33.905 --> 00:04:36.540
it will then trigger a function.

00:04:37.210 --> 00:04:43.070
Inside of this function, we're going to emit a custom event to the parents.

00:04:43.070 --> 00:04:45.875
This is actually simpler than it sounds,

00:04:45.875 --> 00:04:50.010
we just need to use this dot dollar sign emit.

00:04:51.730 --> 00:04:54.500
Early in the course we looked at refs,

00:04:54.500 --> 00:04:59.430
and we access them using the native view property of dollar sign refs.

00:04:59.510 --> 00:05:04.750
Well, using dollar sign emit is also native to the view instance.

00:05:04.750 --> 00:05:07.325
It is a native instance method,

00:05:07.325 --> 00:05:10.740
meaning it's built into the view instance.

00:05:11.030 --> 00:05:14.620
Then we pass in two arguments.

00:05:14.620 --> 00:05:20.520
The first one is the name of the event,

00:05:20.540 --> 00:05:24.060
which is chosen bios, so I'm going to call it,

00:05:24.060 --> 00:05:30.170
page was changed, and separate it by comma.

00:05:30.170 --> 00:05:34.150
The second is what data we want to pass to the parents.

00:05:34.150 --> 00:05:37.040
We want to send the page name which was clicked,

00:05:37.040 --> 00:05:41.750
and we can access this with this dot page selected,

00:05:41.750 --> 00:05:45.300
which is the value of this data property.

00:05:45.830 --> 00:05:49.550
This is the first part of sending the data.

00:05:49.550 --> 00:05:54.230
The second is over in the parents, which is app.vue.

00:05:54.230 --> 00:05:58.110
Save that and head over to app.vue.

00:05:58.180 --> 00:06:02.990
If we go back to our template and look for the nav header section,

00:06:02.990 --> 00:06:05.065
which is a char component.

00:06:05.065 --> 00:06:07.880
Here we need to listen for the events which we've

00:06:07.880 --> 00:06:11.105
created inside of the components elements,

00:06:11.105 --> 00:06:16.020
so just like this, we can add a V on.

00:06:18.470 --> 00:06:24.450
Then we'll listen for the event which you gave a name of page was changed,

00:06:28.010 --> 00:06:31.385
or we can even use the shorthand,

00:06:31.385 --> 00:06:34.050
which was the at symbol.

00:06:35.320 --> 00:06:38.960
Now we're listening for events to be passed

00:06:38.960 --> 00:06:42.890
then we need to tell view what to do with this event.

00:06:42.890 --> 00:06:45.365
We obtain the selected page,

00:06:45.365 --> 00:06:51.440
select create new data property to store this event valuing when there is a change,

00:06:51.440 --> 00:06:57.870
scrolling down to the script just under the export default.

00:06:57.870 --> 00:07:02.250
I'm also going to add the data property inside of here,

00:07:03.250 --> 00:07:06.360
don't forget to add the comma.

00:07:08.800 --> 00:07:13.470
I'm going to create a new property of current page.

00:07:16.270 --> 00:07:20.350
I'm going to set this equal to card fronts.

00:07:20.350 --> 00:07:24.715
So far we only have the card front component graded.

00:07:24.715 --> 00:07:27.520
This is fine because it makes sense to have the front of

00:07:27.520 --> 00:07:31.040
the card displayed by default anyway.

00:07:33.420 --> 00:07:39.910
This now allows us to set current page to the value of the events just like this.

00:07:39.910 --> 00:07:46.340
So that the current page equal to the dollar sign event.

00:07:46.340 --> 00:07:50.125
Now each time the navigation link is clicked,

00:07:50.125 --> 00:07:57.230
this is then passed to the parent components with the events called page was changed.

00:07:57.230 --> 00:08:03.965
We then change the current page from the card front to the value of the events.

00:08:03.965 --> 00:08:07.150
We can test this is working okay by outputting

00:08:07.150 --> 00:08:11.060
the value of the current page with the double curly braces.

00:08:11.060 --> 00:08:13.140
Just after the nav header.

00:08:13.140 --> 00:08:17.185
I'm going to open up the double curly braces and output the value

00:08:17.185 --> 00:08:22.005
of current page, so save that.

00:08:22.005 --> 00:08:24.400
Now we can go over to the browser.

00:08:24.400 --> 00:08:30.830
First, we want to stop the development server with npm run dev.

00:08:36.830 --> 00:08:39.850
Now we see the value of card fronts,

00:08:39.850 --> 00:08:44.520
which is what we expect because this is a default value.

00:08:45.110 --> 00:08:48.355
If we select a different nav link,

00:08:48.355 --> 00:08:55.140
we now see that the value is changed each time we select a new menu item.

00:08:55.370 --> 00:08:58.875
If you see the value of page select the change,

00:08:58.875 --> 00:09:00.720
when you click on a menu link,

00:09:00.720 --> 00:09:06.905
this means you are now successfully emitting data from a child to parent components.

00:09:06.905 --> 00:09:10.415
If not, just check all the code until it gets to the stage,

00:09:10.415 --> 00:09:14.495
and then we're ready to move on to creating the rest of the card components.

00:09:14.495 --> 00:09:19.530
Also using dynamic components to switch between each view.
