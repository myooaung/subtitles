WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.740 --> 00:00:03.910
During building this project,

00:00:03.910 --> 00:00:10.205
we've added our own properties and our own methods to the Vue instance along with these,

00:00:10.205 --> 00:00:13.960
which we should now have a better understanding of how to work with them.

00:00:13.960 --> 00:00:19.230
Vue also provides us with some properties and methods which we have access to.

00:00:19.230 --> 00:00:23.790
If we go over to vuejs.org,

00:00:24.740 --> 00:00:28.515
which takes us to the Vue Homepage.

00:00:28.515 --> 00:00:32.740
Then if you click on the API link at the top,

00:00:32.740 --> 00:00:36.235
we can see the API documentation.

00:00:36.235 --> 00:00:39.985
If we scroll down using the navigation on the left,

00:00:39.985 --> 00:00:42.520
we can see some familiar looking things,

00:00:42.520 --> 00:00:47.030
such as our options of data, computed on methods.

00:00:47.030 --> 00:00:52.295
Further down there's what we call instance properties and instance methods.

00:00:52.295 --> 00:00:54.365
All of these properties are methods,

00:00:54.365 --> 00:00:56.600
also have a $ sign prefix,

00:00:56.600 --> 00:00:59.815
so we can easily distinguish them from others.

00:00:59.815 --> 00:01:01.590
If we go over to our app,

00:01:01.590 --> 00:01:04.815
we can see these as part of our instances.

00:01:04.815 --> 00:01:08.385
Let's go over to app.js.

00:01:08.385 --> 00:01:13.480
You have to go right down to the bottom we can create a console log.

00:01:13.970 --> 00:01:22.055
I'm just going to console log the contents of vm1 which is our first Vue instance.

00:01:22.055 --> 00:01:27.000
Now let's go over to the browser and open this up in the console.

00:01:29.260 --> 00:01:33.729
We can see we've got the contents of the Vue instance.

00:01:33.729 --> 00:01:35.845
Some of this you will already recognize,

00:01:35.845 --> 00:01:38.215
such as the 'el' property,

00:01:38.215 --> 00:01:43.940
which you can see is managing our div with the idea of app, which we set earlier.

00:01:43.940 --> 00:01:46.870
We can use these properties and methods,

00:01:46.870 --> 00:01:48.625
prefix with a $ symbol,

00:01:48.625 --> 00:01:50.915
to access data that we need.

00:01:50.915 --> 00:01:54.490
For example, we can change our console log to display

00:01:54.490 --> 00:02:00.140
the 'el' property by adding a $el after vm1.

00:02:01.580 --> 00:02:03.640
Then inside of the console,

00:02:03.640 --> 00:02:05.965
we can see the div with the class of app,

00:02:05.965 --> 00:02:08.630
which our instance is managing.

00:02:08.750 --> 00:02:14.250
Let's just remove this el property and take a look at the full instance again.

00:02:15.610 --> 00:02:18.920
There is a lot going on here and we'll take

00:02:18.920 --> 00:02:21.695
a look at more of these as we go through the course.

00:02:21.695 --> 00:02:26.020
One thing I want to draw your attention to is down near the bottom,

00:02:26.020 --> 00:02:30.515
you can see there is lot of getters and setters.

00:02:30.515 --> 00:02:33.050
These are used to get values and set

00:02:33.050 --> 00:02:37.430
values and means that Vue can watch and react to changes.

00:02:37.430 --> 00:02:43.130
These getters and setters are added upon creation of the Vue instance.

00:02:43.130 --> 00:02:45.980
You can see that these all of our data properties,

00:02:45.980 --> 00:02:50.035
which Vue proxies for us and also our computed methods.

00:02:50.035 --> 00:02:53.840
We have forms submitted and keyPressed above them,

00:02:53.840 --> 00:02:57.025
which does not have any getters or setters.

00:02:57.025 --> 00:03:00.015
This is because they are our methods.

00:03:00.015 --> 00:03:03.770
As we know, methods do not watch and react to changes,

00:03:03.770 --> 00:03:08.280
they simply re-render when there is change to the app.

00:03:08.720 --> 00:03:14.535
Also, if we add a new property to a Vue instance after it's created,

00:03:14.535 --> 00:03:16.769
it's not proxied by Vue.js,

00:03:16.769 --> 00:03:18.390
so it's not reactive.

00:03:18.390 --> 00:03:21.310
Therefore, not watch for any changes.

00:03:21.310 --> 00:03:26.435
We can see this in action by adding a new property to vm1.

00:03:26.435 --> 00:03:29.225
Back over in app.js,

00:03:29.225 --> 00:03:34.550
if we add vm1.title,

00:03:34.550 --> 00:03:36.170
which doesn't yet exist,

00:03:36.170 --> 00:03:40.470
and we'll set that to a text string of new title.

00:03:42.500 --> 00:03:47.410
Now, if we go to the vm1 instance in the console,

00:03:47.410 --> 00:03:54.305
we can see we have added a new property called title for the Arnold getters or setters.

00:03:54.305 --> 00:03:57.655
The property is not reactive.

00:03:57.655 --> 00:04:03.305
Therefore, if you have any data in our application which you want to react to changes,

00:04:03.305 --> 00:04:08.220
it must be there upon creation rather than added afterwards.

00:04:08.600 --> 00:04:11.810
We don't need this code for the project so I'm going to remove

00:04:11.810 --> 00:04:15.650
the button and also the capacity change method.

00:04:15.650 --> 00:04:18.480
Let's go ahead and do that now.

00:04:18.890 --> 00:04:28.165
In the index we should move the button and then in the methods in app.js,

00:04:28.165 --> 00:04:32.190
we can remove the method of capacity changed.

00:04:34.370 --> 00:04:37.580
As we go through the course, we'll look at more of

00:04:37.580 --> 00:04:41.530
these Vue instance properties and methods in more detail.

00:04:41.530 --> 00:04:43.295
Starting in the next video,

00:04:43.295 --> 00:04:46.020
we will take a look at using refs.
