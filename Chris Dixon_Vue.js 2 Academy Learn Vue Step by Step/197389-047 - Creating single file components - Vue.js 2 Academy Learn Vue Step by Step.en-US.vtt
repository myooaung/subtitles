WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.600
In the last few videos we've looked are registering components both globally and locally.

00:00:06.600 --> 00:00:09.600
Here we're going to look at a different way to use

00:00:09.600 --> 00:00:14.300
components by creating them in their own single file.

00:00:14.300 --> 00:00:17.405
In fact, to recreate in the full project this way.

00:00:17.405 --> 00:00:23.090
Single file components allows to have everything related to the components in one place.

00:00:23.090 --> 00:00:30.090
It's a great [inaudible] to create a component by using Vue.component.

00:00:30.090 --> 00:00:36.980
The App of Vue file is a single file component too.

00:00:36.980 --> 00:00:41.410
Just like this, we have a section to create our template in HTML.

00:00:41.410 --> 00:00:47.840
Makes with any view data such as a double curly braces, or an event.

00:00:47.840 --> 00:00:53.540
This template is also much easier to work with than using a single string template.

00:00:53.540 --> 00:00:56.910
Like we've looked at so far.

00:00:56.910 --> 00:01:02.050
We also have the script section above any Vue GIS related logic,

00:01:02.050 --> 00:01:04.345
such as data and methods,

00:01:04.345 --> 00:01:09.040
along with any Vanilla JavaScript that we may want to add.

00:01:09.040 --> 00:01:12.250
Then down at the bottom, we also have our styles.

00:01:12.250 --> 00:01:16.300
We can also specify if the styles are global,

00:01:16.300 --> 00:01:18.490
or if they only apply to this component.

00:01:18.490 --> 00:01:22.060
We have this flexibility,

00:01:22.060 --> 00:01:25.390
so before getting started, we can delete the component from the last video.

00:01:25.390 --> 00:01:33.120
Let's leave the component 1 and component 2.

00:01:33.120 --> 00:01:37.510
Then we couldn't remove the component section from the vue instance.

00:01:37.510 --> 00:01:44.880
We are going to be using the app.vue file as our main wrapper.

00:01:44.880 --> 00:01:49.110
That's own comments out the render function.

00:01:49.110 --> 00:01:50.960
Then finally in the index page,

00:01:50.960 --> 00:01:58.210
let's remove the elements of component 1 and 2.

00:01:58.210 --> 00:02:03.410
To begin, I want to add a components folder inside of the source folder.

00:02:03.410 --> 00:02:10.520
Select a new folder called components.

00:02:10.520 --> 00:02:13.700
Make sure this is just underneath the source folder.

00:02:13.700 --> 00:02:16.085
Inside of the components folder,

00:02:16.085 --> 00:02:18.320
I'm going to create a new file.

00:02:18.320 --> 00:02:22.760
This file is going to be called Header.vue.

00:02:22.760 --> 00:02:27.320
We can also create sub folders for our components,

00:02:27.320 --> 00:02:31.520
which is a good idea for large apps to keep things more organized.

00:02:31.520 --> 00:02:34.220
This header file will be a simple component.

00:02:34.220 --> 00:02:37.210
We will get used to building them inside of our app.

00:02:37.210 --> 00:02:39.265
Let's get started.

00:02:39.265 --> 00:02:44.130
If you open up the Header.vue file,

00:02:44.130 --> 00:02:47.870
we can add the basic structure.

00:02:47.870 --> 00:02:51.950
Just like in our app.vue file.

00:02:51.950 --> 00:02:56.150
Let's begin by creating the template.

00:02:56.150 --> 00:03:00.825
This needs the opening,and closing tag.

00:03:00.825 --> 00:03:03.530
Then we can add our script tags,

00:03:03.530 --> 00:03:07.320
and then finally down at the bottom, we can ask the style tags.

00:03:11.890 --> 00:03:14.870
Now inside the template section at the top,

00:03:14.870 --> 00:03:18.950
I'm going to begin by adding a menu for our app.

00:03:18.950 --> 00:03:22.580
If you remember from before that we need to have a surrounding div,

00:03:22.580 --> 00:03:25.340
or a surrounding elements for our templates.

00:03:25.340 --> 00:03:28.430
Then inside of here I'm going to add a level 1 heading,

00:03:28.430 --> 00:03:30.420
which're going to be the title of creative cards.

00:03:30.420 --> 00:03:32.400
We'll add a bootstrap class of text-center.

00:03:32.400 --> 00:03:33.580
Then under this heading,

00:03:33.580 --> 00:03:35.760
we can begin to create our ul order list,

00:03:35.760 --> 00:03:39.590
which will be our menu.or a surrounding elements for our templates.

00:03:39.590 --> 00:03:42.560
Then inside of here I'm going to add a level 1 heading,

00:03:42.560 --> 00:03:44.550
which're going to be the title of creative cards.

00:03:44.550 --> 00:03:47.550
We'll add a bootstrap class of text-center.

00:03:47.550 --> 00:03:48.730
Then under this heading,

00:03:48.730 --> 00:03:50.910
we can begin to create our ul order list,

00:03:50.910 --> 00:03:52.340
which will be our menu,

00:03:52.340 --> 00:03:56.230
or a surrounding elements for our templates.

00:03:56.230 --> 00:03:59.200
Then inside of here I'm going to add a level 1 heading,

00:03:59.200 --> 00:04:01.280
which're going to be the title of creative cards.

00:04:01.280 --> 00:04:03.260
We'll add a bootstrap class of text-center.

00:04:03.260 --> 00:04:04.440
Then under this heading,

00:04:04.440 --> 00:04:06.620
we can begin to create our ul order list,

00:04:06.620 --> 00:04:07.810
which will be our menu.

00:04:07.810 --> 00:04:09.590
[inaudible] Well can also have a Bootstrap class,

00:04:09.590 --> 00:04:11.190
and this one is going to be nav,

00:04:11.190 --> 00:04:13.060
then justify-content-center. Then assign ul order list items.

00:04:13.060 --> 00:04:17.640
List items have a Bootstrap class also of nav item.

00:04:17.640 --> 00:04:25.510
The first link I'm going to add is for the front of the card.

00:04:25.510 --> 00:04:32.030
Then display the [inaudible] going to copy this list item,

00:04:32.030 --> 00:04:36.280
and then paste in three more times.

00:04:36.280 --> 00:04:40.540
The second link is inside left.

00:04:40.540 --> 00:04:45.550
This is the inside left of our card.

00:04:45.550 --> 00:04:53.120
Then inside right, and then finally the fourth link is for the back of the card.

00:04:53.900 --> 00:04:58.910
This will work perfectly fine without any of the scripts,

00:04:58.910 --> 00:05:01.550
or any of the style sections added.

00:05:01.550 --> 00:05:05.660
No consent from these is required for the components to function.

00:05:05.660 --> 00:05:10.120
If we go over to the browser,

00:05:10.120 --> 00:05:15.850
and then refresh, we can still see that no header is visible.

00:05:15.850 --> 00:05:18.010
This is because we need to take a few steps first.

00:05:18.010 --> 00:05:22.310
We know that the app.vue file is a main wrapper.

00:05:22.310 --> 00:05:28.005
We need to tell this App file that we want to use the header components.

00:05:28.005 --> 00:05:31.990
Inside of the script tags of app.vue,

00:05:31.990 --> 00:05:34.700
we can begin by adding a impulse statement.

00:05:34.700 --> 00:05:38.395
What we want to do is import the header,

00:05:38.395 --> 00:05:41.350
and this is the alias which we give to the component.

00:05:41.350 --> 00:05:43.710
This name is up to us.

00:05:43.710 --> 00:05:47.060
Then we want to import it from the file path,

00:05:47.060 --> 00:05:53.520
so we use./, and then go inside of the components folder.

00:05:53.520 --> 00:05:55.010
The file is called Header.vue. This is our header file imported.

00:05:55.010 --> 00:05:56.320
Then as we looked at in the local components video,

00:05:56.320 --> 00:05:58.340
we need to register the component so it's available to use inside of this template.

00:05:58.340 --> 00:06:00.100
Then we add our export defaults, which is going to contain all of our vue data.

00:06:00.100 --> 00:06:02.120
Then we can register our components just like we did in the local components video.

00:06:02.120 --> 00:06:03.670
We add navHeader, is the header.There are a few things to know here

00:06:03.670 --> 00:06:05.440
inside of the components property. The first name on the left is the tag name.

00:06:05.440 --> 00:06:07.200
This can be named anything you want, and it's how reference our components.

00:06:07.200 --> 00:06:09.050
The name on the right, most much the given name from the import statements just above.

00:06:09.050 --> 00:06:10.190
We can then add the components into our template

00:06:10.190 --> 00:06:11.250
using the tag name we gave all of navHeader.

00:06:11.250 --> 00:06:12.380
As we talked about early on in this section.

00:06:12.380 --> 00:06:13.790
Even though the name we gave to the component is CamelCase,

00:06:13.790 --> 00:06:16.160
it's best practice to add the element name as lowercase inside of the template.

00:06:16.160 --> 00:06:18.440
If we go up to our template,we can add our navHeader in lowercase separated by hyphens,

00:06:18.440 --> 00:06:19.690
and then close this off. Now we can test this in the browser.

00:06:19.690 --> 00:06:21.470
If your app is not running, make sure which run npm run dev in the terminal first.

00:06:21.470 --> 00:06:22.710
Then if we go over to the browser,we now see we have

00:06:22.710 --> 00:06:24.110
the main title of creative cards, and also the navigation links.

00:06:24.110 --> 00:06:25.180
The title is tied up against the top of the page.

00:06:25.180 --> 00:06:26.340
We could fix this with a little bit of simple CSS.

00:06:26.340 --> 00:06:27.950
If we go back to the header.vue file, and then go down to the style tags.

00:06:27.950 --> 00:06:29.120
All we need to do is add our style for the H1,and just

00:06:29.120 --> 00:06:30.510
add a little bit of margin-top.We'll add 10 pixels to there.

00:06:30.510 --> 00:06:31.660
Now we can see it's pushed off the top just enough.

00:06:31.660 --> 00:06:33.330
This is how we can use single-page components. The header is fairly simple.

00:06:33.330 --> 00:06:34.490
We'll add more to this in the next few videos.and just

00:06:34.490 --> 00:06:35.810
add a little bit of margin-top.We'll add 10 pixels to there.

00:06:35.810 --> 00:06:36.960
Now we can see it's pushed off the top just enough.

00:06:36.960 --> 00:06:38.690
This is how we can use single-page components. The header is fairly simple.

00:06:38.690 --> 00:06:39.850
We'll add more to this in the next few videos.and just

00:06:39.850 --> 00:06:41.170
add a little bit of margin-top.We'll add 10 pixels to there.

00:06:41.170 --> 00:06:42.320
Now we can see it's pushed off the top just enough.

00:06:42.320 --> 00:06:43.990
This is how we can use single-page components. The header is fairly simple.

00:06:43.990 --> 00:06:45.860
We'll add more to this in the next few videos.Now we can see it's pushed off the top

00:06:45.860 --> 00:06:47.790
just enough.This is how we can use single-page components. The header is fairly simple.

00:06:47.790 --> 00:06:49.040
We'll add more to this in the next few videos.and just add

00:06:49.040 --> 00:06:50.300
a little bit of margin-top. We'll add 10 pixels to there.

00:06:50.300 --> 00:06:51.470
Now we can see it's pushed off the top just enough.

00:06:51.470 --> 00:06:53.190
This is how we can use single-page components. The header is fairly simple.

00:06:53.190 --> 00:06:54.450
We'll add more to this in the next few videos.and just add

00:06:54.450 --> 00:06:55.710
a little bit of margin-top.We'll add 10 pixels to there.

00:06:55.710 --> 00:06:56.880
Now we can see it's pushed off the top just enough.

00:06:56.880 --> 00:06:57.960
This is how we can use single-page components.

00:06:57.960 --> 00:07:00.240
The header is fairly simple. We'll add more to this in the next few videos.

00:07:00.240 --> 00:07:01.410
Now we can see it's pushed off the top just enough.

00:07:01.410 --> 00:07:03.120
This is how we can use single-page components. The header is fairly simple.

00:07:03.120 --> 00:07:04.380
We'll add more to this in the next few videos, and just add

00:07:04.380 --> 00:07:05.640
a little bit of margin-top.We'll add 10 pixels to there.

00:07:05.640 --> 00:07:06.810
Now we can see it's pushed off the top just enough.

00:07:06.810 --> 00:07:08.550
This is how we can use single-page components. The header is fairly simple.

00:07:08.550 --> 00:07:10.440
We'll add more to this in the next few videos.and just add a little bit of margin-top.

00:07:10.440 --> 00:07:12.240
We'll add 10 pixels to there. Now we can see it's pushed off the top just enough.

00:07:12.240 --> 00:07:13.950
This is how we can use single-page components. The header is fairly simple.

00:07:13.950 --> 00:07:15.210
We'll add more to this in the next few videos.and just add

00:07:15.210 --> 00:07:16.470
a little bit of margin-top.We'll add 10 pixels to there.

00:07:16.470 --> 00:07:17.640
Now we can see it's pushed off the top just enough.

00:07:17.640 --> 00:07:18.720
This is how we can use single-page components.

00:07:18.720 --> 00:07:20.220
The header is fairly simple. We'll add more to this in the next few

00:07:20.220 --> 00:07:21.930
videos.and just add a little bit of margin-top.We'll add 10 pixels to there.

00:07:21.930 --> 00:07:23.100
Now we can see it's pushed off the top just enough.

00:07:23.100 --> 00:07:24.810
This is how we can use single-page components. The header is fairly simple.

00:07:24.810 --> 00:07:26.070
We'll add more to this in the next few videos.and just add

00:07:26.070 --> 00:07:27.330
a little bit of margin-top.We'll add 10 pixels to there.

00:07:27.330 --> 00:07:29.700
Now we can see it's pushed off the top just enough.

00:07:29.700 --> 00:07:31.410
This is how we can use single-page components. The header is fairly simple.

00:07:31.410 --> 00:07:32.670
We'll add more to this in the next few videos.and just add

00:07:32.670 --> 00:07:33.930
a little bit of margin-top.We'll add 10 pixels to there.

00:07:33.930 --> 00:07:35.100
Now we can see it's pushed off the top just enough.

00:07:35.100 --> 00:07:37.460
This is how we can use single-page components. The header is fairly simple.

00:07:37.460 --> 00:07:38.530
We'll add more to this in the next few videos.Now

00:07:38.530 --> 00:07:39.590
we can see it's pushed off the top just enough.

00:07:39.590 --> 00:07:41.260
This is how we can use single-page components. The header is fairly simple.

00:07:41.260 --> 00:07:42.240
We'll add more to this in the next few videos.

00:07:42.240 --> 00:07:43.390
Now we can see it's pushed off the top just enough.

00:07:43.390 --> 00:07:45.060
This is how we can use single-page components. The header is fairly simple.

00:07:45.060 --> 00:07:46.830
We'll add more to this in the next few videos.. This is our header file imported.

00:07:46.830 --> 00:07:48.250
Then as we looked at in the local components video,

00:07:48.250 --> 00:07:50.270
we need to register the component so it's available to use inside of this template.

00:07:50.270 --> 00:07:52.030
Then we add our export defaults, which is going to contain all of our vue data.

00:07:52.030 --> 00:07:54.050
Then we can register our components just like we did in the local components video.

00:07:54.050 --> 00:07:55.290
We add navHeader, is the header.There are a few things

00:07:55.290 --> 00:07:56.430
to know here inside of the components property.

00:07:56.430 --> 00:07:57.600
The first name on the left is the tag name. This can be

00:07:57.600 --> 00:07:59.090
named anything you want, and it's how reference our components.

00:07:59.090 --> 00:08:00.940
The name on the right, most much the given name from the import statements just above.

00:08:00.940 --> 00:08:02.100
We can then add the components into our template

00:08:02.100 --> 00:08:03.160
using the tag name we gave all of navHeader.

00:08:03.160 --> 00:08:04.290
As we talked about early on in this section.

00:08:04.290 --> 00:08:05.700
Even though the name we gave to the component is CamelCase,

00:08:05.700 --> 00:08:07.540
it's best practice to add the element name as lowercase inside of the template.

00:08:07.540 --> 00:08:08.870
If we go up to our template,we can add our navHeader

00:08:08.870 --> 00:08:10.270
in lowercase separated by hyphens, and then close this off.

00:08:10.270 --> 00:08:11.690
Now we can test this in the browser. If your app is not running,

00:08:11.690 --> 00:08:12.850
make sure which run npm run dev in the terminal first.

00:08:12.850 --> 00:08:14.710
Then if we go over to the browser,we now see we have the main title of creative cards,

00:08:14.710 --> 00:08:17.920
and also the navigation links.

00:08:17.920 --> 00:08:18.990
The title is tied up against the top of the page.

00:08:18.990 --> 00:08:20.150
We could fix this with a little bit of simple CSS.

00:08:20.150 --> 00:08:21.760
If we go back to the header.vue file, and then go down to the style tags.

00:08:21.760 --> 00:08:24.520
All we need to do is add our style for the H1, and just add a little bit of margin-top.

00:08:24.520 --> 00:08:26.280
We'll add 10 pixels to there. Now we can see it's pushed off the top just enough.

00:08:26.280 --> 00:08:27.950
This is how we can use single-page components. The header is fairly simple.

00:08:27.950 --> 00:08:29.110
We'll add more to this in the next few videos, and just

00:08:29.110 --> 00:08:30.430
add a little bit of margin-top.We'll add 10 pixels to there.

00:08:30.430 --> 00:08:31.580
Now we can see it's pushed off the top just enough.

00:08:31.580 --> 00:08:33.250
This is how we can use single-page components. The header is fairly simple.

00:08:33.250 --> 00:08:36.970
We'll add more to this in the next few videos.
