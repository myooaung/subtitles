WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.200 --> 00:00:06.645
We now going to continue to look deeper a slots and understand more about them.

00:00:06.645 --> 00:00:13.110
In the last example, we used a single slot elements in our footer components.

00:00:13.110 --> 00:00:18.420
If there is only a single slot elements, like we have here,

00:00:18.420 --> 00:00:23.220
all of the content which were add between the component tags,

00:00:23.220 --> 00:00:30.010
which is all this, will be inserted inside of this slot.

00:00:31.850 --> 00:00:38.310
Over in the footer we can also add content between the slot elements just like this.

00:00:38.310 --> 00:00:41.430
So let's add some text inside of here.

00:00:41.430 --> 00:00:48.695
All footer text, and this is what we call fallback content.

00:00:48.695 --> 00:00:55.130
If we go over to the browser and scroll down to the footer,

00:00:55.130 --> 00:00:59.570
we can see the text is not displayed down in the footer section.

00:00:59.570 --> 00:01:07.985
This is because the content between the slot tags is considered fallback content.

00:01:07.985 --> 00:01:13.375
This means it will only be displayed if there is no content to insert.

00:01:13.375 --> 00:01:21.200
So for comments out the nested elements in the parent components, which is app.vue.

00:01:23.170 --> 00:01:26.260
Comment on this section,

00:01:26.260 --> 00:01:29.530
up to the closing nav tag.

00:01:29.740 --> 00:01:34.940
It's now go back over to the footer and we can see we have the fallback content

00:01:34.940 --> 00:01:39.375
of footer text slashes to long comment.

00:01:39.375 --> 00:01:41.470
This section back out.

00:01:41.840 --> 00:01:47.840
This is just something to consider if the content is not immediately available.

00:01:47.840 --> 00:01:51.070
Maybe we want to use it with visual for example,

00:01:51.070 --> 00:01:55.805
and we could show the fallback content until visual becomes true.

00:01:55.805 --> 00:02:00.740
Another consideration is the scope of the content.

00:02:00.740 --> 00:02:06.125
At present we have a nav section inside of the footer which is nested.

00:02:06.125 --> 00:02:12.085
So is all the code inside of here compiled in the parents or within the child scope?

00:02:12.085 --> 00:02:15.090
Well, let's take a look and find out.

00:02:15.090 --> 00:02:19.370
So let's say our creative cards texts in the footer,

00:02:19.370 --> 00:02:23.440
which is just on the top here, was dynamic.

00:02:23.440 --> 00:02:27.455
So instead of having this section here,

00:02:27.455 --> 00:02:31.505
if this was dynamic we had some data property,

00:02:31.505 --> 00:02:38.190
such as appName, would

00:02:38.190 --> 00:02:41.030
this appName data property restored

00:02:41.030 --> 00:02:44.675
in the script section of the parent or the child components?

00:02:44.675 --> 00:02:48.700
Well, the answer is within the parent components.

00:02:48.700 --> 00:02:52.935
If we go down to the script section,

00:02:52.935 --> 00:02:55.785
and within the data section,

00:02:55.785 --> 00:02:58.750
let's add our appName.

00:02:59.180 --> 00:03:03.130
I set this to be, Creative Cards.

00:03:05.930 --> 00:03:08.910
Go to the browser,

00:03:08.910 --> 00:03:13.220
we see the creative cards has appeared down at the bottom,

00:03:13.220 --> 00:03:17.670
and which got an extra calibration there so let's remove that.

00:03:18.170 --> 00:03:23.235
We're now seeing the browser that the text appears at the footer.

00:03:23.235 --> 00:03:27.545
We can now see that the appName works within the parent section.

00:03:27.545 --> 00:03:32.410
However, if we try to move this data property over to the footer.

00:03:32.410 --> 00:03:38.250
Let's remove appName and

00:03:38.250 --> 00:03:44.530
then we want to copy just this data section and then add this inside of the footer.

00:03:45.500 --> 00:03:48.700
So add the script tags,

00:03:49.460 --> 00:03:56.530
the export defaults, and then paste in our data section.

00:04:00.860 --> 00:04:09.190
Here we can add our appName as a string of, "Creative Cards."

00:04:12.620 --> 00:04:16.350
So save that and let's go back over to the app,

00:04:16.350 --> 00:04:20.310
and we can see we don't have the text appearing anymore.

00:04:20.310 --> 00:04:24.570
We can see the scope is within the parents app.vue file.

00:04:24.570 --> 00:04:29.720
Let's just remove the script tag from the footer,

00:04:29.760 --> 00:04:34.310
and add this back into the app.vue.

00:04:36.230 --> 00:04:41.980
So everything inside of the parents simply is within the parent scope.

00:04:41.980 --> 00:04:47.210
Everything inside of the child components is within the child scope.

00:04:47.210 --> 00:04:50.950
Such just a few things to think about when using slots.

00:04:50.950 --> 00:04:54.410
Next up, we'll take a look at using name slots.
