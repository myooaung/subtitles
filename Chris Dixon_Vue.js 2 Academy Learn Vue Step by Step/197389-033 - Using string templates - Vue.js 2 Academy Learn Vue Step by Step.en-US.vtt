WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.010 --> 00:00:05.430
During this project, we have created our view instances and then

00:00:05.430 --> 00:00:09.765
mounted them to HTML elements by using the L property.

00:00:09.765 --> 00:00:12.870
There is also an alternative way which is create

00:00:12.870 --> 00:00:17.310
a string template inside of the view instance.

00:00:17.310 --> 00:00:23.865
Let's go ahead and create a new view instance to store the title of our app inside.

00:00:23.865 --> 00:00:27.005
Inside here we can use the template property,

00:00:27.005 --> 00:00:30.570
so I'm going to go down to the bottom and create a new variable,

00:00:30.570 --> 00:00:33.460
this time called vm3.

00:00:34.190 --> 00:00:39.190
Then this is going to contain our new view instance,

00:00:41.150 --> 00:00:45.870
and as always, it takes in our options object.

00:00:46.300 --> 00:00:51.590
Inside here, we're going to add a new template property.

00:00:51.590 --> 00:00:54.515
This property will take in a string,

00:00:54.515 --> 00:00:59.875
so we need to surround the mark up we provide inside the quotations.

00:00:59.875 --> 00:01:02.760
We're going to create the title here.

00:01:02.760 --> 00:01:04.820
Just like our existing title,

00:01:04.820 --> 00:01:12.370
we're going to open up the h1 tags and then other title of Guest List,

00:01:14.810 --> 00:01:17.920
and then closes off.

00:01:19.760 --> 00:01:22.940
Now, if we go back over to the index page,

00:01:22.940 --> 00:01:25.990
we could remove the title from our HTML,

00:01:25.990 --> 00:01:30.310
in order to come for our new view instance.

00:01:31.160 --> 00:01:35.435
Now, if we save that, if we refresh the browser,

00:01:35.435 --> 00:01:39.330
we can see the title is now removed from page.

00:01:39.380 --> 00:01:43.774
This is because we've created a new view instance,

00:01:43.774 --> 00:01:45.950
but we have no L property,

00:01:45.950 --> 00:01:49.625
so the template is currently unmounted.

00:01:49.625 --> 00:01:55.265
We can manually mount the instance using $ sign mounts.

00:01:55.265 --> 00:01:59.815
This is a new instance method which we have not yet looked at,

00:01:59.815 --> 00:02:05.165
because we have our template is stored inside a variable called a vm3.

00:02:05.165 --> 00:02:09.120
If we go back over to the app.js,

00:02:09.410 --> 00:02:12.285
we can mount it like this.

00:02:12.285 --> 00:02:15.250
Let's type vm3.$mount,

00:02:19.550 --> 00:02:25.420
and then inside the bracket we can add the elements that we want to mount to.

00:02:25.420 --> 00:02:29.835
I'm going to use the div with the ID of navigation.

00:02:29.835 --> 00:02:36.309
As a string going to pass in the # and then navigation,

00:02:37.700 --> 00:02:41.630
this mounts our templates to the navigation div,

00:02:41.630 --> 00:02:44.580
which we already have in our HTML.

00:02:45.380 --> 00:02:48.815
Let's save that and see what effect this has.

00:02:48.815 --> 00:02:52.870
If we go back over to the browser and then refresh,

00:02:52.870 --> 00:02:56.025
we now have the h1 title back,

00:02:56.025 --> 00:02:58.905
which you setup inside of the template,

00:02:58.905 --> 00:03:03.755
but you can see we've lost the navigation links and also the styling.

00:03:03.755 --> 00:03:09.460
Let's open up the developer tools by right-clicking and going to inspect,

00:03:09.460 --> 00:03:12.640
let's take a look at what's going on.

00:03:13.790 --> 00:03:18.385
We have our container at the top, which is fine,

00:03:18.385 --> 00:03:22.445
then immediately after that is our h1 title,

00:03:22.445 --> 00:03:26.270
followed by the div with the ID of app.

00:03:26.270 --> 00:03:31.745
You can see there's no Bootstrap rows or any of the Bootstrap 12-column grid divs,

00:03:31.745 --> 00:03:34.655
which you have inside of our HTML.

00:03:34.655 --> 00:03:41.455
Also, our unordered list for the navigation links is not there either, so why is that?

00:03:41.455 --> 00:03:46.345
Well, the reason is because when we mount a template to an element,

00:03:46.345 --> 00:03:50.515
this template will replace any existing markup.

00:03:50.515 --> 00:03:54.515
This means all of our nav links and Bootstrap classes,

00:03:54.515 --> 00:03:58.660
it will simply use the contents of our template as a new markup.

00:03:58.660 --> 00:04:03.515
We can add these extra divs and classes inside of the template string.

00:04:03.515 --> 00:04:08.360
If we go back over to our templates inside of the app,

00:04:08.750 --> 00:04:11.515
and then inside of the string,

00:04:11.515 --> 00:04:16.565
we can begin to add our Bootstrap classes surrounding the level 1 heading.

00:04:16.565 --> 00:04:27.980
Before this, we can add a div with a class of col-sm-12,

00:04:27.980 --> 00:04:32.150
and we can also add text-center to align this in the middle of the page.

00:04:33.230 --> 00:04:41.960
After the level 1 heading, we want to close off this div and then save that.

00:04:41.960 --> 00:04:43.630
If we go back over to the browser,

00:04:43.630 --> 00:04:48.595
we can see that this is re-introduced the Bootstrap styling, which we had before.

00:04:48.595 --> 00:04:54.160
But as you can see, things will soon begin to look quite messy inside of the template.

00:04:54.160 --> 00:04:57.355
Also, there is another limitation.

00:04:57.355 --> 00:05:03.050
We can not split this up into multiple lines to make it even more readable.

00:05:03.050 --> 00:05:06.000
If we move the level 1 heading onto

00:05:06.000 --> 00:05:13.640
its own line and then just after day we'll add the closing div also onto its own line.

00:05:14.120 --> 00:05:17.920
Save that and go back over to the browser.

00:05:18.020 --> 00:05:21.520
We can see that this doesn't work.

00:05:21.620 --> 00:05:23.790
There is a way around this,

00:05:23.790 --> 00:05:26.514
if we go over to the templates,

00:05:26.514 --> 00:05:30.230
we can place each line into its own string.

00:05:30.230 --> 00:05:36.590
Add the quotation at the beginning and the end of each line,

00:05:38.390 --> 00:05:42.830
and then we can add these together with the plus symbol.

00:05:44.930 --> 00:05:48.640
Save that and refresh,

00:05:48.800 --> 00:05:52.140
so we can see it's all in our working again.

00:05:52.140 --> 00:05:54.950
This solution still looks a little messy though,

00:05:54.950 --> 00:05:58.650
so we can be the best to own uses with simple code.

00:05:58.650 --> 00:06:02.510
Also, since view JS provides us with this L property

00:06:02.510 --> 00:06:06.665
to integrate our template syntax inside of the HTML.

00:06:06.665 --> 00:06:10.120
This is often seen as a better alternative.

00:06:10.120 --> 00:06:12.780
I'm going to go back over to our

00:06:12.780 --> 00:06:17.344
app.view and then once you remove this new instance of vm3,

00:06:17.344 --> 00:06:20.525
just to return the project back to how it was.

00:06:20.525 --> 00:06:24.065
Remove this vm3 variable,

00:06:24.065 --> 00:06:29.660
remove the mount, and finally,

00:06:29.660 --> 00:06:31.460
if we go back over to the index page,

00:06:31.460 --> 00:06:36.540
we can reintroduce the Guest List title back into the HTML.

00:06:38.810 --> 00:06:44.970
Save that and now our app is back to how it was before using the L property.

00:06:44.970 --> 00:06:47.840
That's how to create a screen template.

00:06:47.840 --> 00:06:51.140
It is important to know this as you may come across it

00:06:51.140 --> 00:06:55.375
in applications and also when going through the documentation,

00:06:55.375 --> 00:06:59.200
you may also see when working with components.

00:06:59.200 --> 00:07:05.070
Next we'll finish this section off by looking at the view instance lifecycle.
