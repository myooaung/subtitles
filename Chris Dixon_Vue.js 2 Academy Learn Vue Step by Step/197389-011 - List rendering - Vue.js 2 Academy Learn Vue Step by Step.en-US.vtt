WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.590 --> 00:00:04.140
We now take the users name inputs and

00:00:04.140 --> 00:00:07.545
push it to an array when the submit button is pressed.

00:00:07.545 --> 00:00:10.110
We did this by adding an event listener to

00:00:10.110 --> 00:00:14.610
the form and then calling a method when the form is submitted.

00:00:14.610 --> 00:00:17.955
This method inside of the Vue instance

00:00:17.955 --> 00:00:21.480
is some JavaScript code which takes the contents of

00:00:21.480 --> 00:00:24.210
the input field stored inside of

00:00:24.210 --> 00:00:29.175
new name texts and then pushes it to this guestName array.

00:00:29.175 --> 00:00:32.460
Now we have the guestName array we want to loop

00:00:32.460 --> 00:00:35.580
through these names and then render them to the screen.

00:00:35.580 --> 00:00:40.755
Vue.js, like normal JavaScript can do this with a for loop.

00:00:40.755 --> 00:00:44.150
However, Vue makes creating a for loop much

00:00:44.150 --> 00:00:47.890
simpler and cleaner than using Vanilla JavaScript.

00:00:47.890 --> 00:00:53.000
All we need to do is create a v-for directive like this.

00:00:53.000 --> 00:00:59.605
If we go over to the Index.html Page and then scroll down towards the Bomb.

00:00:59.605 --> 00:01:06.165
If we look for the div with a class of cards-success rounded and name-box,

00:01:06.165 --> 00:01:09.030
we're going to add our for loop to this div.

00:01:09.030 --> 00:01:13.385
So adding this for loop is as simple as adding attributes,

00:01:13.385 --> 00:01:18.535
just like before when we used v-model but this time we use v-for,

00:01:18.535 --> 00:01:24.490
and then what is set is to be equal to name in guestName.

00:01:25.640 --> 00:01:28.575
So this first name is totally up to you,

00:01:28.575 --> 00:01:30.275
you can name it anything you want.

00:01:30.275 --> 00:01:34.810
It's just an alias for each array element that will loop over,

00:01:34.810 --> 00:01:38.910
guestName is name of the source array so it's the one we just

00:01:38.910 --> 00:01:43.430
created before and it's output the contents of this for loop,

00:01:43.430 --> 00:01:45.440
we use the interpolation again.

00:01:45.440 --> 00:01:49.415
So you see double curly braces and then we type in name,

00:01:49.415 --> 00:01:52.045
which we've used in the for loop.

00:01:52.045 --> 00:01:54.510
So now we can save this,

00:01:54.510 --> 00:01:58.385
refresh the browser and now if we go up to the inputs,

00:01:58.385 --> 00:02:03.470
we can begin to add names and we now see them outputted to

00:02:03.470 --> 00:02:09.990
the screen but this time using a for loop v-for can also be added to over elements.

00:02:09.990 --> 00:02:12.630
We're not just limited to admit to a div.

00:02:12.630 --> 00:02:14.605
It can be added to a span,

00:02:14.605 --> 00:02:17.770
paragraph tags or anything you like.

00:02:17.770 --> 00:02:21.040
So now we see the contents of the array display twice,

00:02:21.040 --> 00:02:25.735
once using the for loop and then once from the last video,

00:02:25.735 --> 00:02:30.520
where we outputted the guestName/ with the guestName inside of

00:02:30.520 --> 00:02:37.405
the curly braces and save that and now we're just left with the contents of the for loop.

00:02:37.405 --> 00:02:43.240
So this is how easy is to create a for loop using Vue.js.

00:02:43.240 --> 00:02:44.695
Now let's move on to

00:02:44.695 --> 00:02:50.180
conditional rendering where we'll look at if else statements using Vue.
