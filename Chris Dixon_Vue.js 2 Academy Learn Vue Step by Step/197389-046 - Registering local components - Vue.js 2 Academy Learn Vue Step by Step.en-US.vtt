WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.800 --> 00:00:04.725
In the last video, we learned how to create a component

00:00:04.725 --> 00:00:09.240
which you want to make available globally across the whole of our app.

00:00:09.240 --> 00:00:13.365
Now, we're going to look at how we can register a local component,

00:00:13.365 --> 00:00:18.150
which is only available in the scope of instances or components.

00:00:18.150 --> 00:00:23.940
First, I'm going to remove the global component from the last video.

00:00:23.940 --> 00:00:30.750
So if you go over to the main.js and this component we registered,

00:00:30.750 --> 00:00:36.960
I'm going to remove this full section and we

00:00:36.960 --> 00:00:43.455
can also remove the free tax input components from inside the index.html.

00:00:43.455 --> 00:00:49.315
So remove all three of the text input elements and then save that.

00:00:49.315 --> 00:00:55.130
I'm going to replace this global component with two separate simple components,

00:00:55.130 --> 00:01:00.870
which will just display some text of component 1 and also component 2.

00:01:01.030 --> 00:01:03.940
Back in the main.js,

00:01:03.940 --> 00:01:08.210
local components are created differently to global components.

00:01:08.210 --> 00:01:12.305
We still need to create our options object but this time,

00:01:12.305 --> 00:01:16.750
we need to store it inside of a variable just like this.

00:01:16.750 --> 00:01:24.880
Let's add our variable called component1 and set this to an object,

00:01:25.790 --> 00:01:30.190
and then then once I add a simple template,

00:01:30.700 --> 00:01:36.910
which is going to be some p tags to output some text of component1

00:01:36.910 --> 00:01:46.635
and then close the p tag off and then I'm going to do the same with a second component.

00:01:46.635 --> 00:01:50.820
Again, this needs to be a variable as we call

00:01:50.820 --> 00:01:57.030
component2 with eight templates and this string

00:01:57.030 --> 00:02:02.610
is also going to be p tags with the text of

00:02:02.610 --> 00:02:11.860
component2 just like that.

00:02:12.920 --> 00:02:17.360
Down at the bottom, we can still leave the render function commented Alpha now,

00:02:17.360 --> 00:02:21.395
as we're not working with the App.vue file just yet.

00:02:21.395 --> 00:02:25.195
Over in the index.html,

00:02:25.195 --> 00:02:29.559
then in-between the app we can add our component1,

00:02:31.370 --> 00:02:39.250
the closing tag, and then we can also do the same for our component2.

00:02:39.250 --> 00:02:42.270
Let's copy this and add this below.

00:02:42.270 --> 00:02:48.675
Change that to be the second components and then save.

00:02:48.675 --> 00:02:52.505
Now, if we go over to the browser and then refresh,

00:02:52.505 --> 00:02:54.770
we see there is a problem.

00:02:54.770 --> 00:02:58.500
Let's open up the console and see what's going on.

00:02:58.640 --> 00:03:03.845
On the console tab, and we see two red warning messages,

00:03:03.845 --> 00:03:10.495
which has a message of unknown custom elements for component1 and also component2.

00:03:10.495 --> 00:03:13.205
It gives us a hint into what we've done wrong.

00:03:13.205 --> 00:03:16.550
It says, "did you register the component correctly?"

00:03:16.550 --> 00:03:19.685
This is because as the local components,

00:03:19.685 --> 00:03:23.095
we need to register them where we want them to be available.

00:03:23.095 --> 00:03:26.540
Let's go to the view instance in the main.js

00:03:26.540 --> 00:03:31.080
file and then register the components which you want to use.

00:03:31.080 --> 00:03:34.500
Let's do this just below the L property.

00:03:34.500 --> 00:03:42.450
We can add our components option and this is an object.

00:03:42.450 --> 00:03:46.350
So we can start with the string name of component1.

00:03:47.690 --> 00:03:52.715
This is the name we give to the component and then separated by the colon.

00:03:52.715 --> 00:03:55.309
We are the real name of the components.

00:03:55.309 --> 00:03:57.900
So it's component1.

00:03:59.210 --> 00:04:03.275
If we go over to the browser and then refresh,

00:04:03.275 --> 00:04:05.270
we still see the error messages.

00:04:05.270 --> 00:04:13.680
This is because we've given this name component-1 an alias with a hyphen in between.

00:04:13.680 --> 00:04:17.250
So let's add this hyphen for

00:04:17.250 --> 00:04:19.700
the first components and now we should

00:04:19.700 --> 00:04:23.395
see the first component is displayed on the screen.

00:04:23.395 --> 00:04:28.980
The warning is over and the console now only show that component2 is unknown.

00:04:28.980 --> 00:04:32.155
Now, let's do the same component2.

00:04:32.155 --> 00:04:38.420
In the main.js, we can add a comma and then add our name and this is going to be

00:04:38.420 --> 00:04:44.855
component2 and this can be any name that we want to use.

00:04:44.855 --> 00:04:48.545
The second one was match the real name of the component though,

00:04:48.545 --> 00:04:52.040
which is it's variable name that we gave to it.

00:04:52.040 --> 00:04:58.290
Component2 will add the hyphen inside

00:04:58.290 --> 00:04:59.880
the index page and then

00:04:59.880 --> 00:05:05.485
now we should give a refresh and we see both components on the screen.

00:05:05.485 --> 00:05:08.960
So this is how to use components locally and

00:05:08.960 --> 00:05:12.080
how to make them available in a particular scope.

00:05:12.080 --> 00:05:16.880
Next, we're going to begin to build our app with single file components.

00:05:16.880 --> 00:05:20.255
These are the components contained in their own file,

00:05:20.255 --> 00:05:24.390
like the App.vue and we'll take a look at these next.
