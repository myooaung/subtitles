WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.975
Inside of the image upload dot vue file,

00:00:03.975 --> 00:00:09.674
we have set a "Set Image button" inside of our templates.

00:00:09.674 --> 00:00:13.275
The purpose of this button is to do two things.

00:00:13.275 --> 00:00:19.320
First, it allows the user to confirm if they want to use this image from the thumbnail.

00:00:19.320 --> 00:00:22.155
Also, as we mentioned in the last video,

00:00:22.155 --> 00:00:28.020
we're trying to download an image before its had the time to be uploaded to the server.

00:00:28.020 --> 00:00:30.945
This button can also solve this problem too

00:00:30.945 --> 00:00:34.455
if we use a button to emit the file name.

00:00:34.455 --> 00:00:40.960
We can hide the button, and make it only visible when the progress bar is at 100 percent.

00:00:41.390 --> 00:00:46.220
So we can begin by hiding the button until an image is loaded.

00:00:46.220 --> 00:00:49.730
This can be done with some simple CSS.

00:00:49.730 --> 00:00:52.415
As an attribute, you're going to add

00:00:52.415 --> 00:00:57.350
the style property and set

00:00:57.350 --> 00:01:03.480
this to display none.

00:01:03.480 --> 00:01:07.000
Now we should see the button is removed.

00:01:08.660 --> 00:01:12.315
Down in our upload file method,

00:01:12.315 --> 00:01:15.270
if we locate the on load function,

00:01:15.270 --> 00:01:19.360
and then just below where we update the progress bar,

00:01:22.310 --> 00:01:29.130
inside here, we can reintroduce the button when the upload progress reaches 100 percent.

00:01:29.270 --> 00:01:32.105
Underneath where we obtain the progress bar,

00:01:32.105 --> 00:01:38.690
we can create an if statements to run if the progress is equal to 100 percent.

00:01:38.690 --> 00:01:41.485
So if the progress,

00:01:41.485 --> 00:01:44.550
which is this percentage here,

00:01:44.550 --> 00:01:47.710
is equal to 100,

00:01:49.760 --> 00:01:57.310
and now we can use a document.getElementById to select this button by its Id.

00:01:57.580 --> 00:01:59.990
So back inside the if statement,

00:01:59.990 --> 00:02:05.135
we can add our documents.getElementById,

00:02:05.135 --> 00:02:08.845
and then pass in the Set Image button Id,

00:02:08.845 --> 00:02:12.890
and then we can use this to reintroduce the button by

00:02:12.890 --> 00:02:17.970
setting the display type equal to inline-block.

00:02:21.190 --> 00:02:23.495
So remember by default,

00:02:23.495 --> 00:02:27.530
the button mode will be displayed because we set the display to be none.

00:02:27.530 --> 00:02:33.130
Then we're watching down below for once the progress hits 100 percent,

00:02:33.130 --> 00:02:35.690
and then once this happens,

00:02:35.690 --> 00:02:40.065
we'll then set the display type of the button to be inline-block,

00:02:40.065 --> 00:02:42.570
which will display on the screen.

00:02:42.570 --> 00:02:46.890
So now let's save that, and give this a try in the browser.

00:02:46.890 --> 00:02:50.025
We don't see the button by default.

00:02:50.025 --> 00:02:52.960
So we choose a file now.

00:02:56.180 --> 00:02:59.595
Once the progress bar hits 100 percent,

00:02:59.595 --> 00:03:03.295
we now see the Set Image Button back on the screen.

00:03:03.295 --> 00:03:08.015
Now this button only appears when the image is fully loaded to Firebase.

00:03:08.015 --> 00:03:12.500
We can now use this to trigger the emit method when clicked.

00:03:12.500 --> 00:03:17.760
So let's go back over to the button inside of the templates.

00:03:19.100 --> 00:03:21.990
Then just after the style property,

00:03:21.990 --> 00:03:28.350
we are going to add a click listener to trigger a method called Set Image.

00:03:30.980 --> 00:03:35.710
Then let's set up our Set Image method below.

00:03:36.200 --> 00:03:39.220
So scrolling down,

00:03:39.680 --> 00:03:43.395
once you get to the end of the Upload File method,

00:03:43.395 --> 00:03:46.590
which is just here, add a comma,

00:03:46.590 --> 00:03:49.990
and then we can add our Set Image method.

00:03:56.430 --> 00:04:03.670
Then inside here, all we need to do is to cut this line of code which emits the filename,

00:04:03.670 --> 00:04:08.420
and then move this inside of our method.

00:04:11.710 --> 00:04:15.380
Remember the button sending this custom events only

00:04:15.380 --> 00:04:18.575
appears when the upload progress is 100 percent.

00:04:18.575 --> 00:04:22.420
So it's now safe to send this filename to Firebase.

00:04:22.420 --> 00:04:25.155
Let's save and test this.

00:04:25.155 --> 00:04:28.120
If we go over to the browser,

00:04:28.130 --> 00:04:33.300
the first thing I want to do is go over to the Firebase console.

00:04:33.760 --> 00:04:36.245
So head over to Firebase,

00:04:36.245 --> 00:04:38.620
and then click on the console,

00:04:38.620 --> 00:04:41.415
and then select the creative cards up,

00:04:41.415 --> 00:04:44.380
and then go over to the storage.

00:04:45.680 --> 00:04:49.520
I'm going to delete the user uploads file.

00:04:49.520 --> 00:04:52.490
So click on the button on the left,

00:04:52.490 --> 00:04:55.470
and then select Delete.

00:04:58.270 --> 00:05:02.465
So now there's no images stored inside the database.

00:05:02.465 --> 00:05:04.595
We can now go over to our app,

00:05:04.595 --> 00:05:07.430
and test by selecting a new image to

00:05:07.430 --> 00:05:10.960
check that it's held back until we select the Set Image button.

00:05:10.960 --> 00:05:13.780
So go to Choose File,

00:05:14.770 --> 00:05:19.410
and select a new file which is not inside the Firebase

00:05:20.000 --> 00:05:23.200
then Set Image.

00:05:24.920 --> 00:05:29.570
So now we can see we don't have the problem which we had in the last video

00:05:29.570 --> 00:05:34.855
because we can't download the image from Firebase until it's fully uploaded now.

00:05:34.855 --> 00:05:36.750
So this all works fine,

00:05:36.750 --> 00:05:40.290
both if we use uploads in image just like we just done,

00:05:40.290 --> 00:05:44.500
and then clicks on the Choose File button once again.

00:05:47.540 --> 00:05:54.235
We want this Set Image button to disappear again until a new image is fully uploaded.

00:05:54.235 --> 00:05:57.275
Otherwise we'll have the same problem as before.

00:05:57.275 --> 00:06:00.830
So we can remove this image immediately after the Choose File button

00:06:00.830 --> 00:06:04.900
is clicked inside of the upload file method.

00:06:04.900 --> 00:06:09.395
Let's go to the top for the upload file method,

00:06:09.395 --> 00:06:12.440
and then inside here right at the very top,

00:06:12.440 --> 00:06:18.800
I'm going to add a document.getElementById.

00:06:18.800 --> 00:06:23.670
Once again, we're now going to grab the Set Image button,

00:06:25.100 --> 00:06:35.350
and all we're going to do is set the style property of style dot display equals none.

00:06:36.410 --> 00:06:38.745
So give that a save,

00:06:38.745 --> 00:06:41.145
and now let's test it in the browser.

00:06:41.145 --> 00:06:48.960
Let's select our first image, then set this.

00:06:48.960 --> 00:06:51.780
Now if we click on Choose file,

00:06:51.780 --> 00:06:56.740
we should now see that the Set Image button is temporarily removed.

00:06:56.810 --> 00:07:00.390
So select an image, and then open.

00:07:00.390 --> 00:07:02.475
Great, did you see that?

00:07:02.475 --> 00:07:06.675
We lost the image button until the file was fully uploaded.

00:07:06.675 --> 00:07:08.835
So this is all working fine.

00:07:08.835 --> 00:07:11.405
The image over here on the display side,

00:07:11.405 --> 00:07:14.030
may be a little bit too big or too small,

00:07:14.030 --> 00:07:15.815
but don't worry about this for now.

00:07:15.815 --> 00:07:18.540
We'll fix this in the later video.
