WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.175
We now have a SectionComplete components and the EventBus setup.

00:00:05.175 --> 00:00:11.415
In this video, we're going to import the EventBus in today's SectionComplete components,

00:00:11.415 --> 00:00:15.885
then emit a custom events back to the EventBus.

00:00:15.885 --> 00:00:19.470
Let's begin by importing the EventBus file.

00:00:19.470 --> 00:00:21.450
So just blow the templates,

00:00:21.450 --> 00:00:24.100
I'm going to add the script tags.

00:00:24.260 --> 00:00:28.600
First of all, let's import the EventBus.

00:00:34.220 --> 00:00:37.260
So this is ES6 syntax.

00:00:37.260 --> 00:00:41.645
These coded braces import a single member of a module,

00:00:41.645 --> 00:00:46.745
which we name the EventBus from the main.JS file.

00:00:46.745 --> 00:00:54.690
So the file path is../../main.js.

00:00:54.690 --> 00:00:58.190
So rather than importing the full contents of the main JS,

00:00:58.190 --> 00:00:59.795
which is not what we want.

00:00:59.795 --> 00:01:02.510
We only want to import this EventBus,

00:01:02.510 --> 00:01:05.885
which is this export that we've done here.

00:01:05.885 --> 00:01:09.845
Now we can create a property called Checked.

00:01:09.845 --> 00:01:12.020
So blow the impulse.

00:01:12.020 --> 00:01:20.820
We can create our export defaults and then add our data in the usual way.

00:01:24.110 --> 00:01:27.999
So let's create a data property called Checked,

00:01:27.999 --> 00:01:31.020
which is initially an empty string.

00:01:31.020 --> 00:01:36.455
This will be used to contain a true or false value from the Checkbox.

00:01:36.455 --> 00:01:42.070
Therefore, we need to use this with V-model as a Checkbox attributes.

00:01:42.070 --> 00:01:46.360
So let's add V model to the Checkbox.

00:01:47.200 --> 00:01:57.570
So inside the input we can add V-model and set this to be our data value of checked.

00:01:59.330 --> 00:02:03.435
This Checkbox will also need a click handler.

00:02:03.435 --> 00:02:05.820
So let's also add this in.

00:02:05.820 --> 00:02:11.110
So at Click and want to setup a click handler,

00:02:11.110 --> 00:02:15.150
which triggers a method called Section Completed.

00:02:18.970 --> 00:02:23.705
So once clicked, this will trigger a method called Section Completed.

00:02:23.705 --> 00:02:27.815
I will use this method to communicate with the EventBus.

00:02:27.815 --> 00:02:31.285
So now let's set up this method below.

00:02:31.285 --> 00:02:34.635
So go back to our view instance.

00:02:34.635 --> 00:02:36.395
Then just after the data,

00:02:36.395 --> 00:02:40.440
you can add a comma, and then setup our methods.

00:02:40.790 --> 00:02:44.650
So we'll call this Section Completed.

00:02:52.150 --> 00:02:57.720
So previously we've emitted custom events using this.$emit.

00:02:57.940 --> 00:03:02.850
To do this with the event both we use EventBus.$emit.

00:03:03.350 --> 00:03:07.235
Of course, if you name the EventBus something else,

00:03:07.235 --> 00:03:09.875
you will need to use a name which you created.

00:03:09.875 --> 00:03:14.970
So the EventBus.$emit.

00:03:17.840 --> 00:03:21.980
Then as before, we pass in the name we want to give to

00:03:21.980 --> 00:03:25.600
this custom event inside the quotations.

00:03:25.600 --> 00:03:30.430
So I'm going to call this custom event Mark As Completed.

00:03:33.110 --> 00:03:35.915
Then separate it by a comma.

00:03:35.915 --> 00:03:38.195
We want send the value of checks.

00:03:38.195 --> 00:03:41.880
So add this.checked.

00:03:42.790 --> 00:03:47.735
These components also needs to be placed in the overcrowd sections to.

00:03:47.735 --> 00:03:50.150
Let's go ahead and do this now.

00:03:50.150 --> 00:03:51.590
We need to import,

00:03:51.590 --> 00:03:55.550
register and also add the components into the template files,

00:03:55.550 --> 00:03:59.020
just like we've done in CardFront.view.

00:04:00.320 --> 00:04:05.760
So let's just copy this import statement of Section Completed.

00:04:05.760 --> 00:04:10.510
We can add these in the card Inside Left.

00:04:11.420 --> 00:04:16.105
Then at this as a components separated by comma.

00:04:16.105 --> 00:04:20.000
So cc Section Completed,

00:04:20.490 --> 00:04:24.050
which is Section completed.

00:04:24.980 --> 00:04:28.569
Then we can add this inside the templates,

00:04:28.569 --> 00:04:31.360
just like we've done with CardFronts.

00:04:31.360 --> 00:04:35.005
So we've done this at the bottom of the edit area.

00:04:35.005 --> 00:04:38.210
So let's do the same for Inside Left.

00:04:39.060 --> 00:04:42.175
So just underneath the text inputs,

00:04:42.175 --> 00:04:45.950
you can add the cc Section Completed.

00:04:55.460 --> 00:05:01.240
Same for the Inside Right pacing the import,

00:05:02.390 --> 00:05:14.640
register the components and

00:05:14.640 --> 00:05:20.590
then this to the template again underneath all the text inputs.

00:05:31.250 --> 00:05:35.175
That's the fronts Inside Left and Inside Right,

00:05:35.175 --> 00:05:38.460
which just leaves the CardBack.vue.

00:05:38.460 --> 00:05:42.270
So pacing the import and we'll do exactly the same.

00:05:42.270 --> 00:05:47.260
Register the components of cc Section Completed.

00:05:51.080 --> 00:05:55.690
Then finally, we'll add this in to the editor area,

00:06:07.790 --> 00:06:14.020
along with the closing tag, and then hit save.

00:06:14.360 --> 00:06:18.210
Then let's test this inside of the browser.

00:06:18.210 --> 00:06:20.900
So let's start with the Card Front.

00:06:20.900 --> 00:06:24.385
So we have the component displaying on the screen.

00:06:24.385 --> 00:06:27.495
Inside left, we can also see it.

00:06:27.495 --> 00:06:30.145
The Inside Right looks fine too.

00:06:30.145 --> 00:06:32.770
Then finally the back.

00:06:32.830 --> 00:06:38.890
So this is a component now complete and sending custom events to the EventBus.

00:06:38.890 --> 00:06:41.450
We'll check this is working in the next video

00:06:41.450 --> 00:06:44.420
where we'll create our final component for this project,

00:06:44.420 --> 00:06:49.830
which we'll use to receive the value of this event from the EventBus.
