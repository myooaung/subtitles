WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.030 --> 00:00:05.620
So far we have created your first mapping project and it is working for him.

00:00:05.620 --> 00:00:07.645
Let's assume that I'm a dollar per,

00:00:07.645 --> 00:00:10.960
and I would like to do these core to the DevOps in it.

00:00:10.960 --> 00:00:15.130
Now it's time to push this code into the source code management are washed and

00:00:15.130 --> 00:00:19.285
control system so that if there is any changes I do for this code,

00:00:19.285 --> 00:00:21.445
it should not affect to the working poor.

00:00:21.445 --> 00:00:24.820
As well as I can share this one to the my DevOps

00:00:24.820 --> 00:00:28.195
in units so that he can able to deploy into the target environment.

00:00:28.195 --> 00:00:30.280
But I don't need to do all this.

00:00:30.280 --> 00:00:34.990
Dependency packages are some libraries which is required to build this project.

00:00:34.990 --> 00:00:38.560
Well, because that is already explained in my palm dot xml and

00:00:38.560 --> 00:00:42.250
I will give you the source code and the unit test cases.

00:00:42.250 --> 00:00:43.715
So if I do three,

00:00:43.715 --> 00:00:49.625
that would be sufficient for him to test our build the code again in his own environment.

00:00:49.625 --> 00:00:50.870
So to do this one,

00:00:50.870 --> 00:00:52.655
we need to push this code into the,

00:00:52.655 --> 00:00:53.885
what some control system.

00:00:53.885 --> 00:00:56.390
In our case, we are going to push it into the GitHub.

00:00:56.390 --> 00:00:58.700
Now I'm going to create a repository in

00:00:58.700 --> 00:01:02.330
GitHub and it will push this code onto remote repository.

00:01:02.330 --> 00:01:05.270
From there, I will act as a DevOps engineer for that.

00:01:05.270 --> 00:01:07.160
Let's jump into our GitHub account.

00:01:07.160 --> 00:01:08.645
This is my GitHub account.

00:01:08.645 --> 00:01:12.095
I'm going to create a new repository and repository name.

00:01:12.095 --> 00:01:14.825
I'm giving it as a package and M That is,

00:01:14.825 --> 00:01:18.890
so I'm giving first demo project,

00:01:18.890 --> 00:01:22.040
okay, same name as our package name I'm giving.

00:01:22.040 --> 00:01:25.010
And we can make it as a private in case if it is having

00:01:25.010 --> 00:01:27.980
gay proprietary data or confidential project.

00:01:27.980 --> 00:01:30.200
In our case, we don't have such kind of data,

00:01:30.200 --> 00:01:33.920
so we'll go with the public so that we can easily manage it.

00:01:33.920 --> 00:01:36.620
But usually we don't create public repositories in

00:01:36.620 --> 00:01:40.550
the organizations until unless there is no such valuable content.

00:01:40.550 --> 00:01:43.535
Most of the cases we go with a private repositories

00:01:43.535 --> 00:01:46.910
and I'm not creating any files we may need the dot ignore file.

00:01:46.910 --> 00:01:49.925
I will tell you, let's create without doing anything.

00:01:49.925 --> 00:01:52.055
So now we have created a repository.

00:01:52.055 --> 00:01:57.470
Here we have options in case we have created a repository and we want to add few files.

00:01:57.470 --> 00:01:59.795
Under so far we haven't created any files.

00:01:59.795 --> 00:02:01.220
We can follow these steps,

00:02:01.220 --> 00:02:06.530
but we have already created a project and we want to push code over here.

00:02:06.530 --> 00:02:08.915
In that case, we need to do this one, okay?

00:02:08.915 --> 00:02:10.250
But before doing this one,

00:02:10.250 --> 00:02:14.735
we need to convert our project folder as a Git repository.

00:02:14.735 --> 00:02:17.315
So that will become your local repository.

00:02:17.315 --> 00:02:19.190
Under this will become your remote repository,

00:02:19.190 --> 00:02:22.760
we can able to establish connection between these two.

00:02:22.760 --> 00:02:25.370
If you are not able to understand what I'm talking,

00:02:25.370 --> 00:02:28.895
maybe it's time for you to go with some of the good courses.

00:02:28.895 --> 00:02:29.750
If you wish.

00:02:29.750 --> 00:02:32.270
I have a separate course on good,

00:02:32.270 --> 00:02:34.865
that is Git and GitHub for DevOps in units,

00:02:34.865 --> 00:02:38.285
it will be definitely add value for our DevOps journey.

00:02:38.285 --> 00:02:39.995
Maybe you can check out that.

00:02:39.995 --> 00:02:43.130
So I'm opening my Java application folder.

00:02:43.130 --> 00:02:47.900
So this is where we are storing our application rate that is under relax,

00:02:47.900 --> 00:02:49.955
see projects was to demo project.

00:02:49.955 --> 00:02:52.100
Now we would like to convert this one into

00:02:52.100 --> 00:02:55.025
the local repository and indices remote repository.

00:02:55.025 --> 00:02:59.240
And this command helps us to enable connection between the local to remote.

00:02:59.240 --> 00:03:01.910
For that, we just need to right-click over here.

00:03:01.910 --> 00:03:04.640
And you can see an option called Git Bash here.

00:03:04.640 --> 00:03:06.080
Just click on this one.

00:03:06.080 --> 00:03:07.865
If you are not getting that option,

00:03:07.865 --> 00:03:09.890
maybe you haven't installed Git Bash.

00:03:09.890 --> 00:03:11.585
If you don't know how to do that one,

00:03:11.585 --> 00:03:15.170
I have added a separate lecture for that one at the end of this course.

00:03:15.170 --> 00:03:17.000
Maybe you can refer to that.

00:03:17.000 --> 00:03:21.710
I'm just increasing the font size and we need to convert this one

00:03:21.710 --> 00:03:26.480
into your local repository first further to get unit dot.

00:03:26.480 --> 00:03:27.395
Okay.

00:03:27.395 --> 00:03:31.250
So even this command also works when you install the Git Bash.

00:03:31.250 --> 00:03:32.585
Otherwise it doesn't work.

00:03:32.585 --> 00:03:35.479
Now it has been converted into the Git repository.

00:03:35.479 --> 00:03:38.540
That's the reason earlier there is no master over here now you

00:03:38.540 --> 00:03:41.840
can see the master at the end of this repository.

00:03:41.840 --> 00:03:43.760
Anyway, if I do ls,

00:03:43.760 --> 00:03:45.230
you can see the list of the file.

00:03:45.230 --> 00:03:47.945
So whatever you could able to see without two dots.

00:03:47.945 --> 00:03:50.300
If we want to see the files will be charged with the dots,

00:03:50.300 --> 00:03:52.580
then you need to do an ls minus CLA.

00:03:52.580 --> 00:03:56.180
So yay helps us to display the hidden files.

00:03:56.180 --> 00:03:58.160
So dark glitter directory has been created,

00:03:58.160 --> 00:04:01.685
just know and even settings file projects fail, everything is there.

00:04:01.685 --> 00:04:05.195
Alright, so let's clear it and the Ls.

00:04:05.195 --> 00:04:07.880
Now what I'm going to do is I want to extract

00:04:07.880 --> 00:04:11.000
the target directory way because as a DevOps engineer,

00:04:11.000 --> 00:04:15.530
he just needed the source code like which is containing the application logic as well as

00:04:15.530 --> 00:04:21.394
test cases and the palm dot xml beach how the Alda information to build this application.

00:04:21.394 --> 00:04:26.675
So target is containing the code which is comes out of the bill process, right?

00:04:26.675 --> 00:04:30.845
That is the reason you can see the class files and JAR files,

00:04:30.845 --> 00:04:31.925
all the stock, okay?

00:04:31.925 --> 00:04:34.850
These are not needed while pushing your code.

00:04:34.850 --> 00:04:40.085
For that, we are going to use a file called gitignore, va dot gitignore.

00:04:40.085 --> 00:04:42.440
This file helps us to exclude some of

00:04:42.440 --> 00:04:46.984
the unnecessary folders which we don't want to push it into the remote repository.

00:04:46.984 --> 00:04:50.240
In this case, we don't want to push the target to directory, right?

00:04:50.240 --> 00:04:53.705
So let's open and targets class,

00:04:53.705 --> 00:04:56.300
which means that the data which contains in

00:04:56.300 --> 00:04:59.254
the target directory everything should be ignored.

00:04:59.254 --> 00:05:01.820
So, alright, let's save this file.

00:05:01.820 --> 00:05:06.620
Now, it's time for us to push this code onto the remote repository.

00:05:06.620 --> 00:05:08.720
Before that, you check with git status.

00:05:08.720 --> 00:05:11.540
Now you can see it is pulling or

00:05:11.540 --> 00:05:15.020
pushing the code only dot gitignore apart from dot ignore,

00:05:15.020 --> 00:05:16.295
we don't need all the stuff.

00:05:16.295 --> 00:05:19.775
So I'm going to edit my dot gitignore file again.

00:05:19.775 --> 00:05:22.820
So I will add those as well.

00:05:22.820 --> 00:05:29.285
Dot class path, dot settings.

00:05:29.285 --> 00:05:31.490
Okay, These all our files.

00:05:31.490 --> 00:05:34.305
I will just have your look over here.

00:05:34.305 --> 00:05:36.685
Okay. I have added everything.

00:05:36.685 --> 00:05:40.810
Now if I do git status, okay,

00:05:40.810 --> 00:05:43.360
you can see only dot gitignore file,

00:05:43.360 --> 00:05:46.150
palm dot xml and the SRC only this information

00:05:46.150 --> 00:05:49.000
we are going to adding to our local repository.

00:05:49.000 --> 00:05:52.960
So to add it to the local repository, git add dot.

00:05:52.960 --> 00:05:57.140
It is going to add the content into the local repository.

00:05:57.150 --> 00:06:04.300
And git commit minus gm did initial commit.

00:06:04.300 --> 00:06:07.645
It is asking for me to add username and password.

00:06:07.645 --> 00:06:09.085
I will quickly add it,

00:06:09.085 --> 00:06:11.480
get to user add.

00:06:15.570 --> 00:06:19.715
Okay, I'm adding the username similar way.

00:06:19.715 --> 00:06:21.350
So that is email Eddie,

00:06:21.350 --> 00:06:23.285
I'm going to add the username.

00:06:23.285 --> 00:06:24.275
Alright.

00:06:24.275 --> 00:06:28.865
Now I can able to commit the changes into the local repository.

00:06:28.865 --> 00:06:32.030
So this is going to commit into the local repository.

00:06:32.030 --> 00:06:33.980
I can if I check for kids status.

00:06:33.980 --> 00:06:36.709
Okay, nothing is there in the local repository.

00:06:36.709 --> 00:06:39.514
Now it's time to add our remote repository.

00:06:39.514 --> 00:06:43.100
Okay, so to add remote repository, this is the command.

00:06:43.100 --> 00:06:48.010
So I'm just adding these commander to our repositories.

00:06:48.010 --> 00:06:52.235
So our local repository git associated with the remote repository.

00:06:52.235 --> 00:06:55.415
Now we are going to push our code onto remote repository,

00:06:55.415 --> 00:06:58.160
git push minus u,

00:06:58.160 --> 00:07:03.785
origin, main, our master because by default on the remote repository it creates the mean.

00:07:03.785 --> 00:07:06.260
So I'm going to use the master,

00:07:06.260 --> 00:07:08.930
even we can use the main branch.

00:07:08.930 --> 00:07:11.270
So it is going to push our code onto

00:07:11.270 --> 00:07:15.635
a remote repository and it will ask for the credentials.

00:07:15.635 --> 00:07:17.330
We should provide those.

00:07:17.330 --> 00:07:19.670
Sorry, I just canceled it again.

00:07:19.670 --> 00:07:21.095
I'm going to execute it.

00:07:21.095 --> 00:07:23.435
It should ask for the credentials.

00:07:23.435 --> 00:07:29.360
Okay, here you can see I'm going to use the sign and width of the browser.

00:07:29.360 --> 00:07:30.635
I help credentials.

00:07:30.635 --> 00:07:33.170
Usually it should prompt over here itself.

00:07:33.170 --> 00:07:37.850
And I'm going to use gravity and password.

00:07:37.850 --> 00:07:41.330
It will store the credentials in the credential format.

00:07:41.330 --> 00:07:43.850
Three is the good.

00:07:43.850 --> 00:07:49.130
And it should able to push the code over there, right?

00:07:49.130 --> 00:07:53.105
So I held successfully pushed up my code into the remote repository.

00:07:53.105 --> 00:07:55.085
And if I refresh here,

00:07:55.085 --> 00:07:58.025
you can see here there is a branch called master.

00:07:58.025 --> 00:08:02.510
I have successfully able to push the content that is a Searcy and palm dot xml.

00:08:02.510 --> 00:08:05.660
These two files are sufficient to build the code.

00:08:05.660 --> 00:08:09.005
Now, I can say that as a dollar per I helped push to my code.

00:08:09.005 --> 00:08:12.605
And now DevOps engineer is going to use this code.

00:08:12.605 --> 00:08:14.720
Again, he will use the mapping in his

00:08:14.720 --> 00:08:17.705
environmental to build this quote, How does it happen?

00:08:17.705 --> 00:08:19.940
We are going to see in the next section,

00:08:19.940 --> 00:08:22.920
thanks for watching and see you there.
