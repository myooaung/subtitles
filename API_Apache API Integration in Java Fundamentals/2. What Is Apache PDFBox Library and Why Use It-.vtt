WEBVTT
1
00:00:01.010 --> 00:00:06.810
Let me first introduce you to the Apache PDFBox library.

2
00:00:06.810 --> 00:00:10.940
Let's look at a few interesting facts about the library.

3
00:00:10.940 --> 00:00:16.050
It was first developed as a personal project back in 2002

4
00:00:16.050 --> 00:00:21.400
and then became an Apache project in 2008.

5
00:00:21.400 --> 00:00:26.940
It is now published under the Apache License 2.0.

6
00:00:26.940 --> 00:00:32.230
The nice thing about the PDFBox library is that it's cross‑platform,

7
00:00:32.230 --> 00:00:37.540
meaning it can be used on many different operating systems.

8
00:00:37.540 --> 00:00:41.840
If you'd like to find out more facts about Apache PDFBox,

9
00:00:41.840 --> 00:00:50.940
you can go to pdfbox.apache.org, which is the official website for the library.

10
00:00:50.940 --> 00:00:54.030
So why use Apache PDFBox?

11
00:00:54.030 --> 00:00:59.140
Well, we are talking about PDFs here, right?

12
00:00:59.140 --> 00:01:01.910
So using this API,

13
00:01:01.910 --> 00:01:08.640
you can build Java applications that can work with PDF documents.

14
00:01:08.640 --> 00:01:15.110
When we say "work with PDF documents," it means we can create new PDF

15
00:01:15.110 --> 00:01:22.830
documents and add content to them from a Java application, and a also to

16
00:01:22.830 --> 00:01:27.300
manipulate PDFs by extracting content, editing,

17
00:01:27.300 --> 00:01:34.140
validating, encrypting, splitting and merging PDFs, and so on.

18
00:01:34.140 --> 00:01:39.440
Here are some more reasons for you to use the PDFBox library.

19
00:01:39.440 --> 00:01:44.740
It is open source and most importantly, Java based,

20
00:01:44.740 --> 00:01:48.940
meaning the library itself is written in Java,

21
00:01:48.940 --> 00:01:55.340
which makes it really easy to use it in a Java application. And for that matter,

22
00:01:55.340 --> 00:02:05.000
it can be used with any JVM‑based language such as Groovy, Scala, Clojure, and Kotlin.

