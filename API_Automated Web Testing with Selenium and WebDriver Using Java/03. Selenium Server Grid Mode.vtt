WEBVTT
1
00:00:00.340 --> 00:00:04.040
Grid mode is very similar to Selenium Server and is now

2
00:00:04.040 --> 00:00:07.240
just functionality built into that Server.

3
00:00:07.240 --> 00:00:10.820
This technology allows us to take a test and run it on a number of

4
00:00:10.820 --> 00:00:13.740
different machines that are part of this grid.

5
00:00:13.740 --> 00:00:18.810
We still send our test to a remote entity. But instead of it being a server,

6
00:00:18.810 --> 00:00:20.640
it's a hub.

7
00:00:20.640 --> 00:00:23.940
This sounds a little complicated, but it's really not that difficult.

8
00:00:23.940 --> 00:00:26.970
It's the same basic idea as Selenium Server.

9
00:00:26.970 --> 00:00:29.550
The only difference is we have a network of servers, and one

10
00:00:29.550 --> 00:00:31.590
of those servers is going to be the hub.

11
00:00:31.590 --> 00:00:34.210
It's going to orchestrate everything that goes on

12
00:00:34.210 --> 00:00:36.840
within that Selenium Server network.

13
00:00:36.840 --> 00:00:38.420
So we're going to have the same model here.

14
00:00:38.420 --> 00:00:42.260
We're going to run our tests, and we're going to specify the hub

15
00:00:42.260 --> 00:00:46.040
name, and then that hub will decide where to run those tests based

16
00:00:46.040 --> 00:00:48.750
on the nodes that are registered with it.

17
00:00:48.750 --> 00:00:51.930
So we're going to have different instances of Selenium Servers,

18
00:00:51.930 --> 00:00:54.240
and they are going to communicate with the hub.

19
00:00:54.240 --> 00:00:58.140
And each one of those nodes might have different drivers or different browser

20
00:00:58.140 --> 00:01:04.610
capabilities, and it will select a particular node based on those capabilities

21
00:01:04.610 --> 00:01:09.320
in order to run that test and report back with the results. You can imagine

22
00:01:09.320 --> 00:01:13.720
also that this would be helpful to be able to run a whole suite of tests

23
00:01:13.720 --> 00:01:17.400
simultaneously. If you have some way of running your Selenium tests or

24
00:01:17.400 --> 00:01:21.320
executing them in parallel, then you can send all of them to the hub, and the

25
00:01:21.320 --> 00:01:25.910
hub will redistribute the execution amongst the nodes and give you those

26
00:01:25.910 --> 00:01:27.140
results back.

27
00:01:27.140 --> 00:01:30.080
It's a good way to split up your test suite and just a useful

28
00:01:30.080 --> 00:01:32.590
way to be able to utilize testing on different machines and

29
00:01:32.590 --> 00:01:39.000
different configurations without having to run your entire test suite on each and everyone.

