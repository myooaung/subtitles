1
00:00:00,440 --> 00:00:01,990
As I previously mentioned,

2
00:00:01,990 --> 00:00:05,900
Selenium and WebDriver are actually meant to be used to complement one another,

3
00:00:05,900 --> 00:00:08,040
not against one another.

4
00:00:08,040 --> 00:00:11,730
In this test that we just ran in the Selenium IDE,

5
00:00:11,730 --> 00:00:18,250
I can actually export all of these commands and open them up inside of my IDE,

6
00:00:18,250 --> 00:00:20,560
and you'll notice it looks a lot like Java code.

7
00:00:20,560 --> 00:00:22,740
So let's do that.

8
00:00:22,740 --> 00:00:29,040
If we go up next to our Test name and choose a specific test and click Export,

9
00:00:29,040 --> 00:00:31,240
and it will ask you how you want to export that.

10
00:00:31,240 --> 00:00:36,130
C#, C# xUnit, Java JUnit, JavaScript Mocha,

11
00:00:36,130 --> 00:00:37,460
Python, Ruby,

12
00:00:37,460 --> 00:00:40,290
all that stuff you can choose specific things, if

13
00:00:40,290 --> 00:00:41,680
you're going to run it on Selenium Grid.

14
00:00:41,680 --> 00:00:44,080
We'll just say Java JUnit for now, and it's going to

15
00:00:44,080 --> 00:00:47,440
actually export that for us as a JUnit test.

16
00:00:47,440 --> 00:00:51,350
We can select Export, and it will ask us to navigate to a directory.

17
00:00:51,350 --> 00:00:56,430
So I'm going to say dev\workspace\selenium, the folder that I've already

18
00:00:56,430 --> 00:01:03,440
got set up. And I'll just leave this named TestTest.

19
00:01:03,440 --> 00:01:06,290
You can see it went ahead and downloaded that file. And I'm going to open

20
00:01:06,290 --> 00:01:14,990
that up inside of my Notepad. And here's that file inside of Notepad. You can

21
00:01:14,990 --> 00:01:22,150
see it's set up as a JUnit test. It has all of the imports for org.junit and

22
00:01:22,150 --> 00:01:24,840
all the various things to fire that up.

23
00:01:24,840 --> 00:01:28,930
It also has imported all of the Selenium drivers that it needs.

24
00:01:28,930 --> 00:01:32,040
In fact, it's got some extras that we don't need in there just yet.

25
00:01:32,040 --> 00:01:34,560
As we get down into the actual Java code itself,

26
00:01:34,560 --> 00:01:39,350
we have a public class named TestTest, which was our project name and our

27
00:01:39,350 --> 00:01:45,440
individual test name, and you can see from here it fires up WebDriver and

28
00:01:45,440 --> 00:01:51,820
takes a map of arguments and a JavaScript executer and fires up the Chrome

29
00:01:51,820 --> 00:01:56,340
drivers since we ran this in Chrome, and you can use Firefox or one of the

30
00:01:56,340 --> 00:02:01,090
other browsers that you choose, I'm doing this in Chrome for this course.

31
00:02:01,090 --> 00:02:03,360
And, as part of our test,

32
00:02:03,360 --> 00:02:09,130
the driver navigates to selenium.dev, as you can see in that driver.get,

33
00:02:09,130 --> 00:02:12,310
and then it manages the window size, and that's just because I'm running

34
00:02:12,310 --> 00:02:17,230
mine in full screen, and from there it finds an element on the page and

35
00:02:17,230 --> 00:02:22,890
clicks it, and then once that comes back it asserts that we have actually

36
00:02:22,890 --> 00:02:28,490
gone through and navigated to that Downloads page. This is all code that

37
00:02:28,490 --> 00:02:34,900
you can now save, you could export it to your suite of tests that you're running,

38
00:02:34,900 --> 00:02:39,650
store it in GitHub or Bitbucket, or whatever source control

39
00:02:39,650 --> 00:02:42,670
that you're using, you could build a whole suite of tests

40
00:02:42,670 --> 00:02:45,040
just by doing exactly what we did.

41
00:02:45,040 --> 00:02:45,360
In fact,

42
00:02:45,360 --> 00:02:48,870
you could navigate your entire site map for your site just to make sure that

43
00:02:48,870 --> 00:02:53,040
none of those links are broken in this exact fashion and you'd have a

44
00:02:53,040 --> 00:02:57,640
complete walkthrough, or a spider as it's called,

45
00:02:57,640 --> 00:03:02,640
of your entire site map of your company's website.

46
00:03:02,640 --> 00:03:05,700
And this is all done through that record, playback, and

47
00:03:05,700 --> 00:03:07,700
then exporting to a WebDriver test.

48
00:03:07,700 --> 00:03:18,000
So we used Selenium IDE to generate that Selenese and then export this Java test that is ran using WebDriver.

