WEBVTT
1
00:00:00.540 --> 00:00:03.930
We briefly went over this in the previous module,

2
00:00:03.930 --> 00:00:08.650
but let's talk about how we can save this project and export

3
00:00:08.650 --> 00:00:10.890
it for future use because that's really what we're trying to

4
00:00:10.890 --> 00:00:13.080
do is to create this test harness.

5
00:00:13.080 --> 00:00:16.490
You'll notice that both of these tests have an asterisk next to them,

6
00:00:16.490 --> 00:00:19.240
and that's because we haven't saved them yet.

7
00:00:19.240 --> 00:00:23.100
We have this disk icon up here that flashes at us every time we

8
00:00:23.100 --> 00:00:26.620
hover over it. So we can click the Save project,

9
00:00:26.620 --> 00:00:30.060
and it'll ask us where we would like to save that at.

10
00:00:30.060 --> 00:00:34.530
So I've got a workspace out here. I'm going to go to dev, workspace, selenium.

11
00:00:34.530 --> 00:00:38.840
And I'd already done that test test in the previous one.

12
00:00:38.840 --> 00:00:42.500
We'll come out here and we've already named our test suite the

13
00:00:42.500 --> 00:00:46.360
Selenium News, so we'll go ahead and run with that. We'll click

14
00:00:46.360 --> 00:00:52.100
Save, and both of those tests are inside of there and saved as

15
00:00:52.100 --> 00:00:54.180
that. We haven't exported them yet.

16
00:00:54.180 --> 00:00:59.290
It's just this saved test harness to pull it back up in the IDE. To

17
00:00:59.290 --> 00:01:06.280
export that, we can go up to our test suites, and we have this News test

18
00:01:06.280 --> 00:01:10.240
suite here. We can export that entire thing.

19
00:01:10.240 --> 00:01:15.300
We'll say we want to do Java JUnit, and we can include the other options here.

20
00:01:15.300 --> 00:01:17.160
But for now, this is good enough for us.

21
00:01:17.160 --> 00:01:22.200
We'll click Export. We'll choose that DefaultTestSuite. And again,

22
00:01:22.200 --> 00:01:24.700
I'm going to navigate to dev, workspace,

23
00:01:24.700 --> 00:01:33.340
selenium, and click Save. And now let's open that up inside of our IDE and

24
00:01:33.340 --> 00:01:37.190
see what it built for us. Going out to our file system, we can see that we

25
00:01:37.190 --> 00:01:43.450
have two files that were just created for us, that SeleniumNews.side or

26
00:01:43.450 --> 00:01:48.480
Selenium IDE and the DefaultSuiteTest.java.

27
00:01:48.480 --> 00:01:52.320
If we open up the SeleniumNews.side file,

28
00:01:52.320 --> 00:01:58.230
we can see that it is a JSON file. And this is a change.

29
00:01:58.230 --> 00:02:03.670
Previous versions of this were actually HTML and CSS. This is now all

30
00:02:03.670 --> 00:02:08.320
exported in JSON, which is great because you can open it with various tools

31
00:02:08.320 --> 00:02:13.690
and edit it quite easily, and you can actually save this and move forward

32
00:02:13.690 --> 00:02:21.100
using this file itself or reopen it back up in your Selenium IDE. And then

33
00:02:21.100 --> 00:02:27.920
the other file that's created is our .java file that contains our literal

34
00:02:27.920 --> 00:02:30.220
JUnit test. And going forward,

35
00:02:30.220 --> 00:02:34.450
I'm going to open this up inside of IntelliJ so that you can see it inside of

36
00:02:34.450 --> 00:02:39.490
an actual editor, but I want to show you that you get this done by default

37
00:02:39.490 --> 00:02:44.390
exported out of the application, and you don't have to do anything else. It

38
00:02:44.390 --> 00:02:55.000
will produce for you a running .java file. So we've now exported our entire test suite out in both .side and a .java file.

