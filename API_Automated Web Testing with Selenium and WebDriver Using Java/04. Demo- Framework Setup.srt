1
00:00:00,840 --> 00:00:03,580
To begin creating our test framework,

2
00:00:03,580 --> 00:00:07,530
I've gone ahead and closed down all of our other windows,

3
00:00:07,530 --> 00:00:10,080
and we're going to create two new projects.

4
00:00:10,080 --> 00:00:14,170
I'm going to start by selecting to create the new project,

5
00:00:14,170 --> 00:00:19,440
and it's a Maven project, and I'm going to use the project SDK of Java 11.

6
00:00:19,440 --> 00:00:21,140
We'll click Next.

7
00:00:21,140 --> 00:00:25,580
We're going to give this a name of TestFramework,

8
00:00:25,580 --> 00:00:30,460
and we're going to expand the artifact coordinates and

9
00:00:30,460 --> 00:00:38,720
give it a GroupId of com.pluralsight, and we'll click Finish.

10
00:00:38,720 --> 00:00:43,090
And inside of here, like we did earlier,

11
00:00:43,090 --> 00:00:47,490
we're going to enable the changes to auto import.

12
00:00:47,490 --> 00:00:52,250
And below our closing version tag and our closing project tag,

13
00:00:52,250 --> 00:00:57,010
we're going to add in a couple of properties,

14
00:00:57,010 --> 00:00:59,440
dependencies, and a build plugin.

15
00:00:59,440 --> 00:01:01,210
So to begin with here,

16
00:01:01,210 --> 00:01:10,540
I want to add in the property for the Maven Compiler release of 11,

17
00:01:10,540 --> 00:01:13,820
the dependencies for selenium‑java,

18
00:01:13,820 --> 00:01:19,640
and the build plugin that tells it to use the correct compiler version.

19
00:01:19,640 --> 00:01:21,960
Now I'm going to save this, and before we exit out of here,

20
00:01:21,960 --> 00:01:24,690
I'm actually going to run a command that we haven't done yet.

21
00:01:24,690 --> 00:01:28,010
Over on my right side bar, I have a Maven menu.

22
00:01:28,010 --> 00:01:29,700
And if you're not familiar with Maven,

23
00:01:29,700 --> 00:01:31,960
don't worry about what I'm about to show you.

24
00:01:31,960 --> 00:01:34,070
It's not really that tricky or complex.

25
00:01:34,070 --> 00:01:37,820
I'm just going to build our test framework and

26
00:01:37,820 --> 00:01:40,400
install it in our local repository.

27
00:01:40,400 --> 00:01:43,000
If Maven scares you or concerns you,

28
00:01:43,000 --> 00:01:46,200
there is a great course out here on Pluralsight that you can watch on Maven.

29
00:01:46,200 --> 00:01:47,060
But for now,

30
00:01:47,060 --> 00:01:51,240
all I'm going to do is expand that menu on the right, go to TestFramework,

31
00:01:51,240 --> 00:01:54,180
Lifecycle, and double‑click Install.

32
00:01:54,180 --> 00:01:59,850
This will go out and build our package and install it in our local repository.

33
00:01:59,850 --> 00:02:01,540
That's all.

34
00:02:01,540 --> 00:02:05,740
Now this project will contain all of our test framework.

35
00:02:05,740 --> 00:02:09,070
The other project is going to contain our actual tests.

36
00:02:09,070 --> 00:02:12,840
So now we need to go up to our menu and choose File,

37
00:02:12,840 --> 00:02:17,930
New, Project, and it's also a Maven project.

38
00:02:17,930 --> 00:02:21,140
It's going to use the project SDK of Java 11.

39
00:02:21,140 --> 00:02:22,440
We'll click Next.

40
00:02:22,440 --> 00:02:24,690
This one is going to be called Tests.

41
00:02:24,690 --> 00:02:31,720
We'll expand the artifact coordinates and go to com.pluralsight,

42
00:02:31,720 --> 00:02:36,680
and we'll click Finish.

43
00:02:36,680 --> 00:02:41,040
And we want to choose New Window.

44
00:02:41,040 --> 00:02:44,550
This window will close the test framework window.

45
00:02:44,550 --> 00:02:47,400
New Window will actually open up a second editor.

46
00:02:47,400 --> 00:02:52,560
So we want to choose New Window, and it will open up our project inside of here.

47
00:02:52,560 --> 00:02:55,160
We're going to enable auto import of changes.

48
00:02:55,160 --> 00:02:57,690
This is really important with this one because we're going

49
00:02:57,690 --> 00:03:01,740
to continually add things to TestFramework that we want

50
00:03:01,740 --> 00:03:03,270
imported into this project.

51
00:03:03,270 --> 00:03:05,660
So I'm going to select that.

52
00:03:05,660 --> 00:03:09,520
Then I'm going to go up and just like before‑‑‑ You may be asking yourself,

53
00:03:09,520 --> 00:03:11,430
why do we have to do this on every POM file?

54
00:03:11,430 --> 00:03:16,930
It's because they are going for the lowest common denominator of Java 15.

55
00:03:16,930 --> 00:03:18,880
So to use the latest and greatest features,

56
00:03:18,880 --> 00:03:23,840
we have to go below the closing version tag and above the closing project tag

57
00:03:23,840 --> 00:03:29,810
and add in the properties for the Maven Compiler release 11 and that build

58
00:03:29,810 --> 00:03:34,540
plugin's plugin for the compiler plugin of 3.8.1.

59
00:03:34,540 --> 00:03:34,910
Now,

60
00:03:34,910 --> 00:03:37,460
we are going to do one thing different though and that is

61
00:03:37,460 --> 00:03:39,920
going between our properties and our build,

62
00:03:39,920 --> 00:03:42,640
and we're going to add a dependency.

63
00:03:42,640 --> 00:03:45,070
The first dependency that we're going to add is,

64
00:03:45,070 --> 00:03:50,340
in the dependencies element, we're going to add a dependency itself,

65
00:03:50,340 --> 00:03:55,010
and the groupId is com.pluralsight.

66
00:03:55,010 --> 00:03:57,730
And you can see,

67
00:03:57,730 --> 00:04:02,540
it's already starting to suggest com.pluralsight:TestFramework for us

68
00:04:02,540 --> 00:04:08,280
because we did that Maven install in the other project.

69
00:04:08,280 --> 00:04:11,240
So I'm going to actually select that,

70
00:04:11,240 --> 00:04:14,440
and you'll see that it put the groupId of com.pluralsight in there,

71
00:04:14,440 --> 00:04:20,940
the artifactId of TestFramework, and the version of 1.0‑SNAPSHOT in there.

72
00:04:20,940 --> 00:04:24,400
One other side note is when you have a snapshot release,

73
00:04:24,400 --> 00:04:25,940
every time it runs your code,

74
00:04:25,940 --> 00:04:29,840
it goes to look and see if there is a new version of it out there.

75
00:04:29,840 --> 00:04:34,470
So let's save this, and we have one more dependency we need to add.

76
00:04:34,470 --> 00:04:39,420
So below that dependency tag, but before our closing dependencies tag,

77
00:04:39,420 --> 00:04:41,690
I'm going to add another dependency.

78
00:04:41,690 --> 00:04:54,740
And the groupId is org.junit.jupyter, and we want the Jupyter Engine.

79
00:04:54,740 --> 00:05:03,190
And so for our artifactId, we're going to choose junit‑jupyter‑engine.

80
00:05:03,190 --> 00:05:15,150
And for the version, we want 5.7.2, and we will save this.

81
00:05:15,150 --> 00:05:20,100
Now it has a scope associated with this.

82
00:05:20,100 --> 00:05:22,540
It is set up for a scope of test.

83
00:05:22,540 --> 00:05:27,600
I'm actually going to remove that because this whole project is just tests.

84
00:05:27,600 --> 00:05:30,090
And don't worry about what that means.

85
00:05:30,090 --> 00:05:33,240
It's a scoping thing so it doesn't get packaged with

86
00:05:33,240 --> 00:05:35,810
your final version of this project.

87
00:05:35,810 --> 00:05:39,740
But for what we're doing, we can actually just leave that out of there.

88
00:05:39,740 --> 00:05:40,940
So when we save that,

89
00:05:40,940 --> 00:05:44,910
it'll go ahead and download the JUnit Jupyter Engine

90
00:05:44,910 --> 00:05:47,640
so that we can run our JUnit tests.

91
00:05:47,640 --> 00:05:50,350
We have both projects set up correctly now.

92
00:05:50,350 --> 00:05:54,960
Our TestFramework is its own standalone project,

93
00:05:54,960 --> 00:05:58,230
and our test project, which depends on that,

94
00:05:58,230 --> 00:06:04,000
is now dependent on that project. We can begin writing that code now.

