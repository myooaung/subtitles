WEBVTT
1
00:00:00.140 --> 00:00:04.320
Our last test finished with us coming to the Images section

2
00:00:04.320 --> 00:00:06.890
of our Google search for Pluralsight,

3
00:00:06.890 --> 00:00:12.740
and I've opened up the development tools here and selected the option

4
00:00:12.740 --> 00:00:15.480
to select an element on the page to inspect it, and I'm going to come

5
00:00:15.480 --> 00:00:18.290
hover over that first Pluralsight image.

6
00:00:18.290 --> 00:00:21.930
And it's a little hard to read, but if you look down below,

7
00:00:21.930 --> 00:00:32.640
you can see that this has a class equal to "rg_i space Q4LuWD".

8
00:00:32.640 --> 00:00:39.100
I'm going to write that class down and come up to a new tab and search for a

9
00:00:39.100 --> 00:00:43.920
CSS selector online tester. And I have no endorsement with this company. I've

10
00:00:43.920 --> 00:00:46.900
just used them for a little while now and I like it.

11
00:00:46.900 --> 00:00:53.580
This try.jsoup.org is a great tool for this. And what I'm

12
00:00:53.580 --> 00:01:00.470
going to do is copy this URL on our image search. Go back

13
00:01:00.470 --> 00:01:03.750
over here to this jsoup tool,

14
00:01:03.750 --> 00:01:09.980
click on it, and you'll notice there is the option to fetch a URL. And

15
00:01:09.980 --> 00:01:14.630
I can paste that URL from our Google image search result in here and

16
00:01:14.630 --> 00:01:22.230
click Fetch. That's going to return all of this text that is the

17
00:01:22.230 --> 00:01:25.780
result of our search from our page.

18
00:01:25.780 --> 00:01:27.630
Now, once we're here,

19
00:01:27.630 --> 00:01:53.040
I can go into our CSS query selector here and say img[class =rg_i Q4LuWd

20
00:01:53.040 --> 00:01:58.050
and close that square bracket off, and you'll see that it has built a

21
00:01:58.050 --> 00:02:01.700
selector for us. And your class may be different. Depending on what your

22
00:02:01.700 --> 00:02:06.490
searches and what your results come back as, your class may be something

23
00:02:06.490 --> 00:02:10.560
different than what I typed in here, but this is what the class name came

24
00:02:10.560 --> 00:02:11.740
back for us.

25
00:02:11.740 --> 00:02:15.370
I'm going to go ahead and grab this text, and we will have to

26
00:02:15.370 --> 00:02:18.720
do a little bit of modification to this. But I'm going to copy

27
00:02:18.720 --> 00:02:21.440
that and switch over to my IDE.

28
00:02:21.440 --> 00:02:26.730
Now inside of our IDE, I'm going to go below our imagesLink that we had and

29
00:02:26.730 --> 00:02:32.340
do another WebElement, and this will be the imageElement.

30
00:02:32.340 --> 00:02:38.770
We'll set that equal to a driver.findElements. And we want to do a

31
00:02:38.770 --> 00:02:45.510
By.cssSelector. That text that we just copied from jsoup,

32
00:02:45.510 --> 00:02:48.680
we want to paste inside some quotes here.

33
00:02:48.680 --> 00:02:51.400
Now there is one little thing we'll have to do here. Since

34
00:02:51.400 --> 00:02:56.220
there is a space in that class name, we're going to put a

35
00:02:56.220 --> 00:03:00.740
single tick around that class name.

36
00:03:00.740 --> 00:03:04.430
So yours should look something similar to mine if it contains a

37
00:03:04.430 --> 00:03:09.140
space, and we'll grab the first element there.

38
00:03:09.140 --> 00:03:14.730
So that line is saying that I want to go grab the elements on that page

39
00:03:14.730 --> 00:03:20.230
using a CSS selector, and that selector is image, and I'm going to look

40
00:03:20.230 --> 00:03:30.880
for the class on that image tag for rg_i Q4LuWD. Again, yours may be

41
00:03:30.880 --> 00:03:34.120
different, but that's what it is for the search result that we went for

42
00:03:34.120 --> 00:03:35.940
with that Pluralsight image.

43
00:03:35.940 --> 00:03:43.020
Now, once we have that element, we want to say imageElement.click and save

44
00:03:43.020 --> 00:03:49.430
that. And when we run it, it should pop up that browser and navigate clear

45
00:03:49.430 --> 00:03:52.630
through and then click on that image which will pull up the information on

46
00:03:52.630 --> 00:03:54.210
the website on the right‑hand side.

47
00:03:54.210 --> 00:03:59.240
Let's see if it does that.

48
00:03:59.240 --> 00:04:04.540
And sure enough, you can see that our search result came back and

49
00:04:04.540 --> 00:04:08.360
selected that image, and you can tell that's the case because it

50
00:04:08.360 --> 00:04:12.890
is highlighted in blue, and the information about that is propped

51
00:04:12.890 --> 00:04:14.390
up on the right‑hand side.

52
00:04:14.390 --> 00:04:21.340
So our test has now gone through and used a find by name,

53
00:04:21.340 --> 00:04:26.580
a by link text, and a CSS selector to navigate through

54
00:04:26.580 --> 00:04:29.540
three levels deep in this Google search.

55
00:04:29.540 --> 00:04:32.550
And I'll actually argue that this is one of the more complex

56
00:04:32.550 --> 00:04:35.170
examples you usually run into with automation.

57
00:04:35.170 --> 00:04:39.430
A lot of people get nervous when doing searches.

58
00:04:39.430 --> 00:04:42.370
We have actually tackled one of the more complex problems. You can see

59
00:04:42.370 --> 00:04:49.000
it's not that hard and really only about 10 lines of code for us to get this deep inside of our application.

