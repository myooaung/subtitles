WEBVTT
1
00:00:00.440 --> 00:00:01.730
Before we go any further,

2
00:00:01.730 --> 00:00:05.010
let's take a moment to talk about the page elements that we found here

3
00:00:05.010 --> 00:00:08.140
and how we interact with page elements in general.

4
00:00:08.140 --> 00:00:12.600
You'll notice that we had to use the WebElement interface in the last example,

5
00:00:12.600 --> 00:00:16.570
and you can see here the Java docs defining the interface and its super

6
00:00:16.570 --> 00:00:19.880
interfaces, as well as known implementing classes.

7
00:00:19.880 --> 00:00:21.380
In our example,

8
00:00:21.380 --> 00:00:25.170
you might recall that we didn't have a search box or an input element.

9
00:00:25.170 --> 00:00:28.550
Instead, we just had this one interface, WebElement.

10
00:00:28.550 --> 00:00:31.890
You'll find that all of the elements that exist on a page will

11
00:00:31.890 --> 00:00:35.130
basically be accessed through a WebElement.

12
00:00:35.130 --> 00:00:38.130
That may seem strange if you aren't used to using interfaces,

13
00:00:38.130 --> 00:00:42.560
and at first, you may feel like you need to get an HTML table or a button.

14
00:00:42.560 --> 00:00:45.770
But the WebElement is designed in such a way that it will let you

15
00:00:45.770 --> 00:00:49.430
call the methods that you should be able to call on those

16
00:00:49.430 --> 00:00:52.650
particular fields of focus on your page.

17
00:00:52.650 --> 00:00:56.440
You can pretty much do everything you need to with a WebElement.

18
00:00:56.440 --> 00:00:56.730
Now,

19
00:00:56.730 --> 00:00:59.200
some of these methods are not going to work on every

20
00:00:59.200 --> 00:01:00.980
single type of element you get back,

21
00:01:00.980 --> 00:01:05.040
so you have to know a little bit about the context of the element yourself,

22
00:01:05.040 --> 00:01:09.010
rather than using the API to discover what you can

23
00:01:09.010 --> 00:01:10.830
do or can't do with that element.

24
00:01:10.830 --> 00:01:15.410
This might be different than some APIs that you've may be used in the past.

25
00:01:15.410 --> 00:01:18.370
Let's take a look at what WebElement can do for us.

26
00:01:18.370 --> 00:01:21.860
Using WebElement, we have a clear,

27
00:01:21.860 --> 00:01:25.670
clear which is just a call that will clear out a

28
00:01:25.670 --> 00:01:28.110
field or box that we're on on a page.

29
00:01:28.110 --> 00:01:32.640
For example, when we use an input or text field, we can clear that out.

30
00:01:32.640 --> 00:01:34.470
If you call clear on something like a link,

31
00:01:34.470 --> 00:01:38.130
it's not going to do anything. You just have to be aware of the context in

32
00:01:38.130 --> 00:01:42.560
which you're calling this method. Click is obviously going to work on

33
00:01:42.560 --> 00:01:46.470
something like a button, anything that can be clicked on and it's going to

34
00:01:46.470 --> 00:01:50.810
fire that JavaScript of events. You can even use it on things that are

35
00:01:50.810 --> 00:01:56.950
non‑buttoned and non‑links. You can call click on various aspects like a radio

36
00:01:56.950 --> 00:02:00.130
button. You also call findElements,

37
00:02:00.130 --> 00:02:04.460
so that you can nest this together. Let's say you find one element,

38
00:02:04.460 --> 00:02:07.630
for example a table, and you want to find a row in that table.

39
00:02:07.630 --> 00:02:11.160
Well, you can get the table first and then call findElement

40
00:02:11.160 --> 00:02:16.040
or findElements to navigate through it.

41
00:02:16.040 --> 00:02:22.580
You can get an attribute and a particular attribute that exists on an element.

42
00:02:22.580 --> 00:02:28.590
You can get a CSS value associated with that defined element. And you

43
00:02:28.590 --> 00:02:33.290
can also use sendKeys like we did in that previous demo and send those

44
00:02:33.290 --> 00:02:37.690
keys to that element. In the case of input, it put that text into that

45
00:02:37.690 --> 00:02:40.340
field and then you can submit it.

46
00:02:40.340 --> 00:02:42.770
Some elements allow you to submit it,

47
00:02:42.770 --> 00:02:48.240
for example a form, and we have some properties there as well.

48
00:02:48.240 --> 00:02:52.540
You can also check to see if an element is displayed,

49
00:02:52.540 --> 00:02:59.240
if it's enabled, where its location is, if it's been selected,

50
00:02:59.240 --> 00:03:04.640
the size, and the actual tag names so you can figure out what you're looking at.

51
00:03:04.640 --> 00:03:06.580
Did you actually get an anchor?

52
00:03:06.580 --> 00:03:10.640
Did you get a table? Those types of attributes.

53
00:03:10.640 --> 00:03:15.540
You can also grab the text associated with an element.

54
00:03:15.540 --> 00:03:16.080
Again,

55
00:03:16.080 --> 00:03:19.260
some of these properties aren't going to apply to every single element or

56
00:03:19.260 --> 00:03:22.460
they're not going to make much sense to use them on that,

57
00:03:22.460 --> 00:03:23.720
especially for methods,

58
00:03:23.720 --> 00:03:27.180
but this is basically all that you need to go through and

59
00:03:27.180 --> 00:03:30.740
automate any of the tests inside your application.

60
00:03:30.740 --> 00:03:32.030
Using all of these things,

61
00:03:32.030 --> 00:03:39.000
you can pretty much do anything that you need to on any page to navigate or manipulate that page for creating a test.

