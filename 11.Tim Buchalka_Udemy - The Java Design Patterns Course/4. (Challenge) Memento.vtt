WEBVTT

00:05.440 --> 00:06.940
Hello and welcome back.

00:06.940 --> 00:10.270
We have another challenge This challenge is on a momento design pattern.

00:10.270 --> 00:13.260
This will test your understanding of this design pattern.

00:13.260 --> 00:16.240
The requirements we're gonna create an application that uses a mental pattern.

00:16.240 --> 00:17.560
Go figure.

00:17.680 --> 00:20.530
This application is just going to save some dummy states.

00:20.530 --> 00:25.260
It's not going to be really any real world type of application.

00:25.260 --> 00:28.990
It's just going to demonstrate the pattern by saving dummy states.

00:28.990 --> 00:33.190
And so you're responsible for creating the three main classes to implement this pattern.

00:33.190 --> 00:36.060
That's the momento of the originator and the caretaker.

00:36.060 --> 00:40.120
The momento is going to store the internal state of the originator object the originator is going to

00:40.120 --> 00:45.540
create a memento containing a snapshot of its current internal state usually on a Save operation.

00:45.760 --> 00:51.040
And it's also going to use the momentum to restore its internal state usually on an undo or restore.

00:51.040 --> 00:56.650
The caretaker is responsible communicating with the originator it's responsible for the mental safekeeping

00:57.130 --> 01:04.460
it never operates on or examines the contents of the mental the originator class should contain some

01:04.460 --> 01:07.910
state data and some get set methods for each state.

01:07.970 --> 01:11.450
You can create any state data you want.

01:11.720 --> 01:15.510
Whatever the case may be but you have to have some state data.

01:15.610 --> 01:18.500
It should also contain a save or create mental method.

01:19.430 --> 01:23.630
And that method will return a new memento with the safe state.

01:23.640 --> 01:27.600
You should also have a restore or get state from a mental method.

01:27.600 --> 01:33.110
This will restore the originator state from the mental state the safe state have a mental class should

01:33.120 --> 01:38.250
contain the same state data as the originator has to because that's what you're saving.

01:38.250 --> 01:40.300
You can implement it as an entire class or you can.

01:40.350 --> 01:46.740
You can do it differently as a regular class memento constructor will set the state and get the meth

01:46.800 --> 01:49.990
in and get method your caretaker.

01:49.990 --> 01:54.850
Class must be able to save multiple states using the momento objects.

01:54.850 --> 02:00.370
So you want to maintain a list of mental objects because this is application is going to have saves

02:00.490 --> 02:05.470
save points like every so often like maybe every 30 seconds we'll have a safe point.

02:05.470 --> 02:09.640
Now you don't the about timing because you can just explicitly call the safe but you want to save more

02:09.640 --> 02:10.410
than one state.

02:10.960 --> 02:17.960
So it needs to have a list the caretaker can include add and get methods which add to the mementos list

02:18.530 --> 02:26.990
and then retrieve method from the list based on the index so you'll have multiple mementos your clients

02:26.990 --> 02:32.550
should use the originator and the caretaker objects it should create an originator object and set multiple

02:32.550 --> 02:39.750
states that it then should save multiple states save points using the originators momento object so

02:39.750 --> 02:42.130
many mementos will be created.

02:42.150 --> 02:47.430
You then want to restore multiple save points to demonstrate that the caretaker worked and it will look

02:47.430 --> 02:53.320
up different metals in the caretaker's list some example output was something like this the current

02:53.320 --> 03:00.550
state is state number six we saved six save points the first state stayed with state number two the

03:00.550 --> 03:08.370
second since state saved was state number four but the current state is six and so you can look in the

03:08.370 --> 03:15.620
list to see the different states the different saved the states right and some reminders the memento

03:15.620 --> 03:22.070
objects should be treated as an opaque object you don't see it caretakers should not be allowed to change

03:22.070 --> 03:28.240
them it's just passed around you should pay special attention so that the other objects are not affected

03:28.240 --> 03:34.960
by the change made in the originator to the momento sometimes the use of this paddock cost more if you

03:34.960 --> 03:42.030
want to store and restore allowed large amount of data frequently there is that cost with efficiency.

03:42.260 --> 03:43.490
Lastly from Take care.

03:43.490 --> 03:48.680
Take care take your point of view the caretaker has no idea about how much stays kept in the memento

03:49.010 --> 03:50.060
that it wants to delete.

03:51.140 --> 03:52.210
So these are your goals.

03:52.250 --> 03:54.190
This is what you want to be reminded of.

03:54.440 --> 03:56.950
Go out and implement this and I'll provide a solution.

03:57.170 --> 03:58.520
And the next lecture.

03:58.610 --> 03:59.510
Good luck and thank you.
