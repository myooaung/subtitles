WEBVTT

00:05.190 --> 00:06.260
Hello and welcome.

00:06.400 --> 00:10.950
This lecture I want to provide a demonstration for our previous challenge on the abstract factory method

00:10.950 --> 00:12.090
design pattern.

00:12.090 --> 00:18.020
Before we dive into the solution I want to show you the class diagram that represents the solution.

00:18.150 --> 00:25.080
Here is the class diagram that represents the products the products are either a Hollywood movie or

00:25.110 --> 00:27.290
a Bollywood movie.

00:27.300 --> 00:32.060
So this interface right here in the middle here is our Hollywood movie that has two different types

00:32.080 --> 00:38.370
either in action or comedy Hollywood movie and then below that as our Bollywood movie product which

00:38.370 --> 00:41.080
has a Bollywood action movie or comedy action movie.

00:41.250 --> 00:47.100
Well you'll notice here is the products actually are different types for each type of movie.

00:47.220 --> 00:50.570
But the way that we organize our factories are a little bit different.

00:50.580 --> 00:54.810
Our factories are organized around either action or comedy.

00:54.810 --> 01:01.640
So when we have our families of factories where they're going to have comedy movies or action movies.

01:01.770 --> 01:06.730
So the action movies can actually return a Hollywood or a Bollywood comedy can return a Hollywood or

01:06.730 --> 01:08.950
a Bollywood comedy.

01:08.970 --> 01:13.470
That's how we organized the the basic example.

01:13.470 --> 01:18.930
Now we could organize this instead of action and comedy by the type of the movie The Hollywood or the

01:18.930 --> 01:20.140
Bollywood.

01:20.400 --> 01:25.650
But this is the first Lucian I want to show you is again two products Hollywood Bollywood.

01:25.650 --> 01:32.920
They have types based on genre action or comedy are abstract method factory pattern which is determines

01:32.920 --> 01:35.250
which factory to return.

01:35.290 --> 01:42.120
Our factories are organized around either Hollywood or Bollywood action or Hollywood or Bollywood comedy.

01:42.250 --> 01:43.600
And then we have our clan at the top.

01:43.600 --> 01:45.520
So let's dive right in and see what this looks like.

01:48.070 --> 01:49.910
It's bring up our intelligence.

01:50.440 --> 01:56.230
First thing we're gonna do is we're going to create our product which is our Hollywood or Bollywood

01:57.770 --> 02:01.150
and so those are gonna be two interfaces.

02:01.360 --> 02:07.470
We're gonna name this project our solution to our abstract factory method.

02:07.480 --> 02:15.120
So we'll just say Abstract Factory method solution.

02:15.780 --> 02:20.730
First thing I want to do is create our first family of products which is our Hollywood movies.

02:20.730 --> 02:28.160
So I want to create our interface for our Hollywood Hollywood interface.

02:28.180 --> 02:29.640
How about Hollywood movie interface.

02:29.640 --> 02:35.220
Hollywood movie interface that's just gonna contain a single method to get the name.

02:35.340 --> 02:42.030
So it's gonna be a string return a String get movie name and not take any parameters.

02:42.420 --> 02:48.730
The classes that implement this will be either comedy Hollywood movie or action Hollywood movie.

02:48.810 --> 02:56.670
So let's go out now that are class Hollywood

02:59.410 --> 03:08.550
would action movie implements a Hollywood movie interface.

03:08.550 --> 03:12.550
And again we're just gonna hard code the behavior in here not going to really do anything important

03:12.560 --> 03:15.750
and it's going to return basically a movie.

03:15.960 --> 03:17.160
So we'll say public

03:19.500 --> 03:21.390
string get movie name

03:24.200 --> 03:34.470
and this is going to return a movie such as True Lies is a Hollywood action movie.

03:35.340 --> 03:36.720
That's an old one from the 90s.

03:36.780 --> 03:38.100
Not sure if you guys know that.

03:38.280 --> 03:39.770
A lot of young people maybe.

03:39.950 --> 03:42.290
Arnold Schwarzenegger was in it.

03:42.390 --> 03:47.010
We'll create our Bollywood or a Hollywood comedy movie sorry.

03:47.460 --> 03:49.290
Because we're implementing the Hollywood movie interface.

03:49.290 --> 03:58.010
This is our Hollywood comedy movie again implements this interface.

03:58.950 --> 04:01.350
And the name for the comedy movie is gonna be something different.

04:02.550 --> 04:08.060
Obviously this will be a great movie name.

04:09.420 --> 04:12.240
And this will return the jerk.

04:12.240 --> 04:24.970
This is an old one from Steve Martin the jerk is a Hollywood comedy movie.

04:25.590 --> 04:30.570
So we create our first family of products which is our Hollywood movie interface.

04:30.570 --> 04:34.890
Now let's create another family of products which would be our Bollywood movie interface

04:39.470 --> 04:42.400
and a new class.

04:42.560 --> 04:52.470
This will be a Bollywood movie interface.

04:52.530 --> 04:53.910
This will be an interface.

04:53.920 --> 04:56.830
So we'll say interface.

04:57.750 --> 05:00.920
And this will be just like the other one it's just going to return our movie name.

05:00.920 --> 05:06.000
So we'll see a string get movie made.

05:06.980 --> 05:08.140
Pretty basic.

05:08.280 --> 05:09.710
We know how to create all of our products.

05:09.710 --> 05:11.780
We've been doing that quite a bit.

05:12.530 --> 05:19.100
And our Bollywood action and comedy movies will have to implement this name we'll just say and I'm not

05:19.100 --> 05:28.950
real familiar with a lot of Bollywood action or comedy movies so why would action movie implements our

05:28.970 --> 05:33.610
Bollywood movie interface.

05:34.190 --> 05:35.200
The annotation

05:39.780 --> 05:43.700
get movie name.

05:43.760 --> 05:52.970
This is going to return Bang Bang is a Bollywood action movie and I'm not sure what that action movie

05:52.970 --> 05:53.210
is.

05:53.210 --> 05:57.330
But I guess it's an action movie.

05:57.740 --> 06:03.000
We'll do another comedy movie for Bollywood.

06:03.710 --> 06:15.770
Bollywood comedy movie meets our Bollywood product interface another over and method

06:20.520 --> 06:21.580
get movie name.

06:24.380 --> 06:26.290
This one will return.

06:26.470 --> 06:35.720
Now I'm not sure what this is Munna and PBS is a Bollywood comedy movie and I have no idea if it is

06:35.720 --> 06:38.660
or not but hopefully this so it's relevant.

06:39.240 --> 06:39.490
OK.

06:39.500 --> 06:43.880
Now we have our product families our Hollywood movies our Bollywood movies.

06:43.880 --> 06:50.850
Next thing we need to do is we want to create our abstract method our interface for that which is going

06:50.860 --> 06:52.070
to be in a movie factory.

06:52.070 --> 07:01.730
So let's say new and this one will be actually be movie interface movie Factory interface.

07:01.740 --> 07:06.950
How about that movie Factory interface.

07:06.950 --> 07:12.030
And in here we're just going to return either a Hollywood movie or a Bollywood movie.

07:12.200 --> 07:20.830
So we're gonna have a Hollywood movie interface and we're gonna have a method called Get Hollywood.

07:21.020 --> 07:24.160
This should look familiar from our example right.

07:24.170 --> 07:27.560
This is our abstract method where we'll have our product

07:30.720 --> 07:35.400
grab the right factory either the Hollywood movie or while they're actually Hollywood money or face

07:35.400 --> 07:37.920
or get a Hollywood movie.

07:37.920 --> 07:42.120
This actually isn't our abstract method right because this is in the family of products

07:45.980 --> 07:52.580
Oh actually yes it is because we'll read turning either action movies or or comedy movies.

07:52.730 --> 07:56.660
But what's going to be returned as a Hollywood movie interface or a Bollywood movie interface.

07:56.660 --> 07:58.460
So this is our abstract method.

07:58.460 --> 07:59.550
Sorry about that.

07:59.690 --> 08:02.130
I always get confusing about the grouping in this case.

08:02.130 --> 08:07.640
So we're gonna have a Bollywood movie interface and that's gonna get our Bollywood movie.

08:08.360 --> 08:12.760
Let's make it correct spelling.

08:13.550 --> 08:17.370
And now we're going to implement the factories.

08:17.370 --> 08:22.160
All right we're gonna have an action movie factory or a comedy movie factory.

08:22.160 --> 08:27.890
So here we'll say action movie Factory implements our movie Factory

08:31.160 --> 08:34.830
movie Factory interface.

08:34.910 --> 08:42.500
So here we're gonna return a Hollywood movie interface get a Hollywood movie.

08:43.820 --> 08:49.640
And this is just going to return a new Hollywood action movie.

08:51.620 --> 09:02.390
And for the Bollywood public Bollywood interface get a Hollywood

09:05.000 --> 09:06.650
movie.

09:06.650 --> 09:14.390
This is going to return a new Bollywood Bollywood action movie.

09:14.390 --> 09:14.880
There we go.

09:16.430 --> 09:18.800
OK so you understand what's going on here.

09:18.830 --> 09:23.510
We got our movie Factory interface and it's going to return to us.

09:23.570 --> 09:27.690
The correct interest types we're implementing factory methods here.

09:27.750 --> 09:31.220
It's gonna return either a Hollywood action movie or a Bollywood action movie.

09:31.300 --> 09:42.190
Now let's implement our comedy movie Factory which is gonna be just like the action movie Factory except

09:42.190 --> 09:51.760
it's going to return comedy movies so we can replace action with our comedy movie factory can implement

09:51.760 --> 09:53.240
the same interface.

09:53.470 --> 09:57.860
We're going to return a Hollywood movie except we're going to return comedy

10:01.210 --> 10:02.540
comedy.

10:03.640 --> 10:05.590
I'm sorry No we're gonna reserve return Hollywood.

10:05.770 --> 10:08.850
I think in Hollywood comedy and put in the wrong spot.

10:09.160 --> 10:10.480
Hollywood comedy

10:14.470 --> 10:21.390
and Bollywood comedy.

10:21.910 --> 10:22.300
There we go.

10:22.300 --> 10:28.080
So now we have our two factories either comedy movie factory in action movie factory and we organized

10:28.080 --> 10:31.680
them around returning the correct movie genre right.

10:31.930 --> 10:34.480
Either a Hollywood action movie or Bollywood action movie.

10:34.660 --> 10:41.830
The factory families are based on either the Hollywood movie type or the Bollywood movie type.

10:41.830 --> 10:50.530
That's why they're returning one of these two now and create a client and we'll just name this client

10:51.820 --> 10:56.670
by having a factory producer so we'll say factory producer

11:00.810 --> 11:04.030
factory producer is going to look just like our previous.

11:04.750 --> 11:16.500
So we turned a movie factory so we can say public static movie Factory interface get factory and we

11:16.500 --> 11:20.680
can have a choice.

11:20.680 --> 11:30.860
And then inside here we can say if choice equals ignore case if it's going to equal a comedy

11:37.480 --> 11:44.240
that we want to return a new comedy movie Factory

11:48.300 --> 11:49.800
House.

11:50.120 --> 11:51.020
If the choice

11:54.290 --> 12:07.400
equal in your case action we're gonna return a new action movie factory just like within the previous

12:07.450 --> 12:09.750
one that's another layer of abstraction.

12:10.010 --> 12:21.010
And then in our client we can call this method determine the right factory to get so here we can say

12:23.390 --> 12:25.820
movie Factory interface.

12:25.820 --> 12:27.470
Action movies equals

12:29.810 --> 12:37.890
factory producer get factory and we can pass an action

12:41.940 --> 12:47.190
for our action right and that will call our factory producer look for action.

12:48.090 --> 12:58.070
Once we have the right factory we can then get the right product type so we can create a Hollywood movie

12:59.150 --> 13:02.900
interface and we can say H.

13:02.900 --> 13:04.080
Action.

13:04.150 --> 13:10.110
And that will be equal to our action movies that get Hollywood movie.

13:10.240 --> 13:11.460
Will return.

13:11.810 --> 13:14.250
The right one.

13:14.270 --> 13:19.090
We can then also create a Bollywood movie interface.

13:19.090 --> 13:26.890
It's a B action and that will equal R get Bollywood.

13:26.890 --> 13:29.280
All right.

13:29.810 --> 13:38.440
We can then display what the action movies are to the client as output.

13:39.450 --> 13:40.130
All right.

13:40.280 --> 13:41.180
Something like this

13:44.270 --> 13:49.480
to each action doc get movie name and so forth.

13:49.620 --> 13:52.030
Just need to put this in a public static void main

14:00.860 --> 14:01.490
so

14:06.260 --> 14:09.290
we can do the same for comedy movies.

14:09.440 --> 14:13.880
We can create a movie factory for comedy movies

14:17.450 --> 14:18.760
and do similar things.

14:23.450 --> 14:27.200
Here we would change our name to comedy

14:31.130 --> 14:33.470
and also our instant steams to comedy

14:39.200 --> 14:44.390
and comedy.

14:44.990 --> 14:54.150
Then we would put out the results of that and we would see that our abstract factory method worked correctly.

14:54.200 --> 14:57.200
Let's take a look and see what this produced.

14:57.200 --> 14:58.210
We run the client

15:04.000 --> 15:10.490
you'll notice that the right movies were created action movies are true lies and Big Bang comedy these

15:10.490 --> 15:13.930
are the jerk and so forth.

15:13.960 --> 15:16.360
Now there are a lot of different ways to implement this.

15:16.520 --> 15:19.570
And I did want to mention a couple of things that could be improved here.

15:19.600 --> 15:24.040
We organized our factory in factories around action and comedy movies.

15:24.040 --> 15:24.910
We didn't have to do this.

15:24.910 --> 15:29.290
We could have actually organized everything around Hollywood versus Bollywood.

15:29.290 --> 15:35.500
Let's take a look at that example of changing a bit to see how you can organize it around movies.

15:35.500 --> 15:37.390
So here we would say class Hollywood

15:40.450 --> 15:48.310
movie Factory and this would say get Hollywood movie but it would take a string

15:51.860 --> 15:53.780
so we would actually change this

15:56.980 --> 16:09.800
and then we would also type in what we were doing here is we would say if the if the type that equals

16:13.420 --> 16:13.960
action

16:20.040 --> 16:21.770
then we auditory turn.

16:21.970 --> 16:26.170
New Hollywood action movie.

16:26.190 --> 16:32.910
Else if the type thought equals comedy.

16:32.910 --> 16:39.450
Then we return a new Hollywood comedy movie.

16:39.630 --> 16:43.600
The issue with this is now the Bollywood get Bollywood movie.

16:43.700 --> 16:45.510
Would it be able to return anything because

16:49.140 --> 16:51.720
we don't have that type of return.

16:51.720 --> 16:57.680
No because it's a Hollywood movie factory not a comedy movie factory.

16:57.790 --> 16:59.520
So we would have to say return.

16:59.690 --> 17:00.190
No.

17:00.250 --> 17:07.360
And this again is the problem with a simple notation is that in face the segregation problem and then

17:07.360 --> 17:16.810
we will change the comedy movie factory to a Bollywood movie Factory.

17:16.810 --> 17:26.250
And this would be similar except the Hollywood movie interface Forget Hollywood movie.

17:26.350 --> 17:32.830
Again they both would take a string.

17:34.900 --> 17:36.530
This would actually have to return.

17:36.550 --> 17:37.000
No.

17:38.860 --> 17:46.490
Because the factories and organize their front they're not organized around action or comedy anymore.

17:46.510 --> 17:48.190
And then what this one would do is

17:50.920 --> 17:54.310
this one would have the look for the genre types right.

17:54.310 --> 18:06.740
So we'd look for type equals nor case action and this sort of return a new Bollywood action movie.

18:07.250 --> 18:24.110
Else if type equals ignore case comedy to return a new Bollywood comedy movie.

18:24.110 --> 18:25.100
Right.

18:25.230 --> 18:30.440
And then we might have to add some code to return novels and so forth.

18:30.850 --> 18:38.370
So then that would mean that the client would have to change and also the factor producer because we're

18:38.370 --> 18:43.890
no longer returning a comedy movie factory or returning certain types of movies.

18:43.890 --> 18:51.810
So here it would be Hollywood movie versus Bollywood movie.

18:57.180 --> 19:07.780
And then again returning a new Hollywood movie Factory versus a Bollywood movie Factory.

19:07.980 --> 19:14.060
And then lastly changing the client to be organized around now.

19:14.080 --> 19:18.250
So what we would do is we want to get the action movies.

19:18.260 --> 19:29.210
We would get either Hollywood movie factory and then pass in Hollywood movie

19:36.570 --> 19:44.460
and the action movie would then be a Hollywood movie action

19:47.760 --> 19:48.300
or

19:51.210 --> 19:52.740
same thing but at each comedy

19:56.520 --> 20:00.560
Hollywood movie.

20:00.840 --> 20:09.380
With comedy and we would do something very similar for the Bollywood movies.

20:09.480 --> 20:15.270
Again we're organizing round type of movie as opposed to Jara a movie.

20:15.780 --> 20:18.760
So we could say each action not a movie name.

20:18.830 --> 20:21.190
It's comedy right.

20:21.240 --> 20:26.480
And then we would do something very similar with Bollywood.

20:26.540 --> 20:28.780
Something like this.

20:28.950 --> 20:35.830
Now we have Bollywood.

20:36.210 --> 20:37.550
Hopefully this doesn't confuse you more.

20:37.560 --> 20:41.970
But I'm trying to show you that there's many different ways you can do it.

20:43.910 --> 20:52.790
You know organize your product the families.

20:54.050 --> 20:55.120
Then we

20:58.790 --> 21:03.490
we want to print out our action movies each action

21:08.360 --> 21:09.220
B action

21:12.040 --> 21:14.170
on our comedy movies.

21:14.170 --> 21:15.310
Each comedy and become

21:20.590 --> 21:25.630
so I had to go ahead and build this I had to make some corrections based on you know using the right

21:25.630 --> 21:26.240
types.

21:26.290 --> 21:30.460
I had some mis ties for Bollywood movie and get Bollywood movie.

21:30.460 --> 21:35.080
Make sure that when I was getting the Hollywood movies I was returning to Hollywood Munir face and calling

21:35.080 --> 21:37.750
get a Hollywood movie and the same for Bollywood.

21:37.750 --> 21:43.630
I also had to correct a couple of things in my changes for the movie factor in your first because I

21:43.720 --> 21:47.110
added the new types make sure they're all types.

21:47.110 --> 21:50.100
But this is a different way to design it will fade and confuse you more.

21:50.290 --> 21:51.330
Mainly again what we did.

21:51.340 --> 21:58.240
Just to recap is we changed the movie Factory interface so that it wasn't organized around genre type.

21:58.240 --> 22:01.260
It was instead organized around Hollywood or Bollywood movie.

22:01.270 --> 22:06.940
This forced us to violate the segregate interface segregation principle by have the return null for

22:06.940 --> 22:07.250
one.

22:07.900 --> 22:13.030
But what Adel also did was we only had have one movie method Forget Hollywood movie passed and the type

22:13.030 --> 22:17.410
for the factory and we turned either a Hollywood action or Hollywood comedy.

22:17.410 --> 22:21.990
So we modified the the Abstract Factories to do this.

22:22.090 --> 22:23.910
We did the same for Bollywood.

22:23.980 --> 22:29.830
We had a modifier factory producer that instead of trying to get the correct factory for action or comedy

22:29.830 --> 22:35.860
we just got it based on Hollywood or Bollywood and then we modified our client to reflect all of that

22:36.400 --> 22:42.070
to create the call to get factory with a Hollywood movie and then to get the right action a comedy with

22:42.070 --> 22:46.610
action or comedy parameters so many ways to implement this.

22:46.610 --> 22:53.750
Again I understand both ways organizing around genre type comedy or action and in that case you don't

22:53.750 --> 22:55.640
have as many parameter passing as you passed.

22:55.640 --> 23:00.920
You call correct methods or organize around movie type Hollywood or Bollywood.

23:00.920 --> 23:01.340
Thank you.
