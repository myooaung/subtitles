WEBVTT

00:05.370 --> 00:10.660
Low in this lecture I want to provide a solution to our previous challenge which was implementing the

00:10.660 --> 00:17.320
composite design pattern for four college hierarchy so let's political and bring up this anthology.

00:17.320 --> 00:18.740
We're gonna create a project.

00:18.810 --> 00:21.460
The project name is just gonna be a composite solution

00:28.560 --> 00:33.120
so we're gonna say composite solution

00:36.860 --> 00:42.060
our first step is going to create the component the component is gonna be the faculty interface.

00:42.260 --> 00:47.270
So we're gonna say new Java class and we're just gonna call this faculty

00:50.570 --> 00:57.410
and the faculty is gonna have one method which is get details.

00:57.410 --> 01:03.830
Remember that the client sees this interface and this interface allows us to treat leaves and both composites

01:03.830 --> 01:07.580
the same so string get details.

01:08.090 --> 01:13.290
We're then going to create a leaf node under this.

01:13.410 --> 01:14.490
There's no leafs under this.

01:14.480 --> 01:17.420
So this is actually gonna be an interface too.

01:17.450 --> 01:22.790
So I want to make sure it's an interface.

01:23.690 --> 01:28.060
And the leaf know that we're gonna create is called professor.

01:28.190 --> 01:38.540
So this will be class professor implements faculty right and leave no time nothing underneath them.

01:38.560 --> 01:42.500
This is the primitive object can be treated the same way as a composite.

01:42.500 --> 01:44.320
We're going to three member variables.

01:44.500 --> 01:45.820
We're gonna say M name

01:48.790 --> 01:54.490
and position we're having the m there just remember variable in the class is not necessarily about good

01:54.490 --> 01:57.150
naming convention so I don't focus as much as I should on it.

01:57.340 --> 02:02.770
You know you're supposed to write quality code so you should be using good name conventions good coding

02:02.770 --> 02:07.260
conventions coding standards whatever you want to follow.

02:07.480 --> 02:09.040
And then we have office number

02:12.450 --> 02:16.810
of the like that our constructor is just going to set up remember variables.

02:16.890 --> 02:23.160
So it's gonna be an overload constructor that takes those three parameters something like this professor

02:23.220 --> 02:28.080
name position office number and it's gonna set up your member variables we're going to override the

02:28.080 --> 02:36.140
details by displaying the name and the position.

02:36.140 --> 02:41.000
We're not going to display the office number but the gist here is that the professor going to have many

02:41.000 --> 02:43.830
more details many more things you need to the professor.

02:44.090 --> 02:44.960
And this leaf note.

02:45.410 --> 02:49.140
So we're just gonna say get details and implement it that way.

02:49.260 --> 02:53.950
The next thing we need to do is we need to create the composite the composite is gonna be the supervisor.

02:54.030 --> 02:59.200
So we're gonna say new Java class and this is gonna be named supervisor.

03:01.530 --> 03:04.540
And this is also going to implement the faculty interface.

03:04.860 --> 03:10.860
Make sure I did that with Professor implements faculty.

03:10.880 --> 03:15.290
This is also going to have a couple member variables the name and the department name.

03:15.290 --> 03:22.920
So private String name private String department name.

03:23.020 --> 03:28.540
This also is gonna have a list because it needs to store its leaf notes its primitive objects.

03:28.540 --> 03:34.780
So here we're gonna say it's gonna contain faculty that's just gonna be in my faculty list

03:38.520 --> 03:45.900
our supervisor constructor is gonna allow us to create a supervisor with a specific name and it's also

03:45.900 --> 03:54.530
gonna instantiate the list new array list faculty instead of doing in a class loading time we're gonna

03:54.540 --> 03:57.660
have some methods for adding and removing to the list.

03:57.660 --> 04:06.410
So and again remember these these data operation data structure methods can go in the component interface

04:06.410 --> 04:11.820
it's perfectly fine it makes it more usable from the client in terms of everything is the same but it

04:11.820 --> 04:18.270
also violates couple principles so I'm just gonna put the list out in the supervisor we then say public

04:19.140 --> 04:33.250
void add we're gonna add a new faculty professor and here we're just going to add to the list my faculty

04:34.900 --> 04:38.960
list add Prof

04:41.990 --> 04:48.290
something like that and we've got to make sure we have brackets curly braces I should say I always tend

04:48.290 --> 04:53.190
to use the terms brackets embrace these interchangeably even though they're different we're gonna have

04:53.190 --> 04:53.790
a remove

04:57.360 --> 05:06.510
again taking a faculty professor as a parameter and we're gonna remove from the fact list we need this

05:06.780 --> 05:12.060
because the requirements for this assignment were to remove professor so we're going to actually use

05:12.060 --> 05:19.950
this we didn't use it in the example in class we're also gonna be able to return a child node so we're

05:19.950 --> 05:28.950
gonna have a list that can be returned which is the child component in case we want to see specific

05:29.730 --> 05:42.370
subordinates for a particular chairperson or d to get details we're gonna override and just return the

05:42.370 --> 05:45.690
name and the department name something like that

05:49.590 --> 05:50.660
OK.

05:51.260 --> 05:52.740
And that's it.

05:52.740 --> 05:57.260
Now we need to create the client that uses the composite pattern.

05:57.290 --> 06:01.350
So we're gonna say no to have a class we'll just name a client.

06:02.510 --> 06:04.220
And this is gonna have a main method

06:09.780 --> 06:12.630
and this is gonna do our grouping.

06:12.680 --> 06:14.750
So here we're gonna create a couple supervisors

06:18.740 --> 06:27.380
we'll say one is the technology Dean used using constructor will set up some properties we'll just say

06:27.410 --> 06:35.010
Dr. Mike and they're gonna be the dean of technology.

06:36.090 --> 06:37.040
This over

06:40.760 --> 06:49.660
we'll do the same thing for a couple more we'll make a chair because a chair is also a supervisor we'll

06:49.660 --> 06:59.200
say chair of math department and this person will just be called Dr. John

07:02.500 --> 07:04.600
and we'll say they're the chair of the math department

07:09.180 --> 07:18.240
chair of math department and then our other seat supervisor will be the chair of the computer science

07:18.240 --> 07:19.310
department.

07:19.320 --> 07:23.040
So here was a chair of computer science

07:25.580 --> 07:29.100
department if I could use an acronym there that would be better.

07:29.100 --> 07:32.250
But I want a long variable name.

07:32.280 --> 07:34.700
This will be Dr. Ian.

07:35.330 --> 07:37.200
And they'll be the chair of computer science department

07:40.680 --> 07:41.660
chair of.

07:41.700 --> 07:43.780
And we'll make this one chair of C S Department.

07:43.780 --> 07:45.810
How about that.

07:45.810 --> 07:47.250
Not as long.

07:47.250 --> 07:53.370
Now we want to create a couple professors and so we'll create a couple of math professors and a couple

07:53.670 --> 07:58.980
computer science engineering professors because I'm getting tired of typing.

07:59.230 --> 08:07.000
I'll copy and paste here we have one professor math professor one we have math professor two math professor

08:07.000 --> 08:17.130
one is a new math professor and they just have so-and-so names and we have an error here it looks like

08:17.130 --> 08:25.170
I'm missing a double quote something like that always problems when you copy and paste from a different

08:25.170 --> 08:26.230
editor.

08:26.250 --> 08:30.420
And we're going to create three computer science professors

08:33.150 --> 08:35.690
again just with generic names

08:39.660 --> 08:46.530
make sure the double quotes are good.

08:46.530 --> 08:50.340
Now we're gonna start organizing things our technology did.

08:50.360 --> 09:00.190
Dean is gonna add both the chairs to its composite so here we can say technology Dean to add the chair

09:00.190 --> 09:05.700
of the math department in the chair of the computer science department and then we're also going to

09:05.700 --> 09:10.170
have the math department add their math professors.

09:10.170 --> 09:17.240
So I will say chair of math department to add math professors we also have computer science professors

09:17.240 --> 09:25.510
and they should be reporting to the chair so we're going to go ahead and add them to the composite chair

09:25.510 --> 09:30.830
of computer science department that add three CSC professors.

09:30.840 --> 09:35.400
Now we want to print out some details we're going to print out that this is the composite pattern demo

09:35.520 --> 09:37.830
and that this college has the following structure

09:40.540 --> 09:45.250
so a couple informational things we're then going to get the details on the technology Dean

09:49.500 --> 09:53.570
and then we're also gonna get all the faculty for the technology to Dean.

09:53.880 --> 10:00.350
So here we're gonna call the Get My faculty and this is gonna return a list all right.

10:00.720 --> 10:05.730
Because we want to get everybody under the technology Dean and so on then to print that out we're gonna

10:05.730 --> 10:07.740
have to have a for loop.

10:07.770 --> 10:09.630
Could have done a fast iteration.

10:09.630 --> 10:15.390
I'm just gonna do four and die and so this is gonna display all of the chairs and it's gonna tab them

10:15.390 --> 10:25.930
in one one tab to get all the details for the chairs and really this advice be a better name there should

10:25.950 --> 10:28.910
be faculty for technology Dean.

10:29.040 --> 10:34.470
But I just named two chairs we're gonna get all the math professors you know those are the chairs.

10:34.470 --> 10:39.130
Those are the chairs because we're getting the chairs for technology Dean.

10:39.220 --> 10:44.890
Now we're gonna get all the math professors and print those out so we're gonna say let's faculty math

10:44.890 --> 10:52.010
professors get my faculty and print it out with two taps and we're gonna do the same for the CSC professors

10:55.480 --> 10:59.240
and also print that out with two taps.

10:59.350 --> 11:04.270
We made a requirement in the assignment that after displaying those we're gonna want computer science

11:04.300 --> 11:05.830
professor is gonna leave.

11:05.830 --> 11:07.590
So we're gonna have to remove them.

11:07.600 --> 11:16.990
So we're gonna say Chair Chair of computer science department remove and we're gonna remove CSC professor

11:16.990 --> 11:27.310
to were then going to print out a statement saying after we removed that Professor something like that

11:27.910 --> 11:34.840
somebody left the organization where they're gonna get the new professors for the from the chair and

11:34.840 --> 11:44.370
display those to see if the remove actually worked so CSC professors is now gonna be equal to the chair

11:44.370 --> 11:47.850
of the computer science department and it's gonna get their faculty and it's gonna go through and print

11:47.850 --> 11:53.850
them and we should no longer see Professor two because they just left and that meets all the requirements

11:53.850 --> 11:55.590
from the assignment.

11:55.770 --> 12:04.510
Now hopefully we'll build on and make any dumb errors so we'll say build and how do you we were able

12:04.510 --> 12:05.610
to build.

12:05.680 --> 12:17.680
Now let's run our client that over a bit say run client and we could see all the output in sort of a

12:17.680 --> 12:23.470
hierarchy so we can say the college has the following structure and has a Dean Dr. Mike who's dean of

12:23.470 --> 12:29.270
technology has two chairs under the dean of technology and then a multiple professors under each chair.

12:29.380 --> 12:33.310
We could have printed this a little bit better to see the exact professors under the math department

12:33.690 --> 12:39.100
and the exact CSC put officers on the C.S. department we would just have to basically change our hoarding

12:39.100 --> 12:43.240
of prints and then after the CSC professor to leaves the organization.

12:43.360 --> 12:48.600
We then only have Professor one and Professor two for CSC and so that meets the requirements of the

12:48.600 --> 12:50.150
assignment this is the solution.

12:50.250 --> 12:52.490
If you have any questions please ask them in the Q and A.

12:52.770 --> 12:53.190
Thank you.
