WEBVTT

00:00.190 --> 00:00.780
OK.

00:00.840 --> 00:04.410
So let's go ahead and dwell into the code.

00:04.740 --> 00:09.440
So we need to we need to generate the answer and then we need to handle it.

00:09.660 --> 00:15.480
So we're going to create an artificial air for the sake of the demo and then later on it's going to

00:15.660 --> 00:18.420
disappear in a magical fashion.

00:18.480 --> 00:22.880
So the first thing you look at is app that can put Dot T.

00:23.040 --> 00:30.440
So let's go into that and have a look around see what we need to change.

00:31.410 --> 00:36.270
So first of all this is is this correct.

00:36.450 --> 00:40.370
It is just one tricked out anyway going down going down.

00:40.410 --> 00:44.370
You can see that we have some new things here.

00:44.400 --> 00:51.740
So the very first thing that you can notice is the Create A.S.C. error and that's a private variable

00:51.750 --> 00:54.300
of a type string.

00:54.300 --> 01:03.220
Now this will be a variable where we will store the error messages or a message HCC limits our account

01:03.270 --> 01:03.570
limit.

01:03.570 --> 01:10.860
We will use this variable in order to limit the order to specify how many accounts do we want to have

01:10.950 --> 01:11.750
on our server.

01:11.800 --> 01:15.870
And Max and this part here is familiar from before.

01:15.870 --> 01:18.570
This is just the Create A.S.C. method.

01:19.440 --> 01:25.110
Every time that this method is called the string for the where the error is to be stored the current

01:25.110 --> 01:28.800
instance of it is initialized to zero to nothing.

01:28.800 --> 01:33.500
Now assuming that there is we are assuming straightaway that there is no error.

01:33.510 --> 01:35.780
And then we're performing a checkup.

01:35.820 --> 01:39.640
So if the counts that length.

01:39.660 --> 01:45.690
So if the length of the accounts array is greater Dinty count limit.

01:45.750 --> 01:50.620
So if this is the array the accounts are right.

01:50.730 --> 01:57.120
So it has one element it has the second element and if we implement a third element it's going to be

01:57.120 --> 02:02.430
equal or greater to the A.S.C. limit variable here which is 3.

02:02.460 --> 02:08.340
Therefore this entire expression within the if statement will be evaluated to false and hence this part

02:08.340 --> 02:09.960
of the code will not execute.

02:09.960 --> 02:14.480
Rather instead the else part of the code will execute.

02:14.490 --> 02:17.860
So if this is true go ahead and execute this.

02:17.880 --> 02:21.240
If it's false go ahead and do this.

02:21.270 --> 02:26.690
So this logic here this is nothing new we know it from before except it's placed within an if statement

02:26.690 --> 02:27.470
now.

02:27.540 --> 02:31.790
And down below the else the else statement logic is a look a bit new.

02:31.850 --> 02:33.710
It does this create ATC error.

02:33.720 --> 02:36.540
So we're using basically this same string.

02:36.660 --> 02:43.490
And then we're populating it with information it says only and then plus And then we're taking the account

02:43.510 --> 02:50.430
limit and then in addition to that we are simply saying account accounts allow.

02:50.450 --> 02:59.630
So on the three accounts allowed and this here is basically the string that you keep on seeing on the

02:59.630 --> 03:00.020
site.

03:00.020 --> 03:08.840
When we exceed the maximum number of accounts so OK so we have three.

03:09.130 --> 03:16.200
There you go creating error only three accounts allowed.

03:16.210 --> 03:22.100
OK so the rest of it is same in the follow through we will be adding more things there.

03:22.120 --> 03:27.040
But for the time being I just want to go through a certain amount of infor I want to process a certain

03:27.040 --> 03:28.810
amount of information with you.

03:29.470 --> 03:33.570
And then we're going to add some additional things here as well.

03:33.910 --> 03:38.760
Ops This is the good hub configuration.

03:38.770 --> 03:46.380
So next up we need to go into the app component DOD hd a male and here we didn't actually add any additional

03:46.460 --> 03:47.330
lines.

03:47.400 --> 03:51.960
Rather instead we've just added this part here.

03:52.110 --> 04:00.660
So we are performing property binding and we're binding the Create A.S.C. error from the parent component

04:01.110 --> 04:08.930
to the error of the child component basically that's all that we're doing there.

04:08.930 --> 04:21.600
Now if we go into the A.S.C. for TS component TS and there are a few things we need to do here before

04:21.600 --> 04:28.350
I get well actually I can go down and sruti or see it says here at input and then it says error of type

04:28.560 --> 04:29.610
string.

04:29.610 --> 04:33.280
So this is the rectally related to this error here.

04:34.620 --> 04:41.820
However since we are expecting the parents so the app component popularly to this error and as you can

04:41.820 --> 04:45.500
see we have a logic of populating it here.

04:48.490 --> 04:54.520
We don't actually need to write anything additional here in regard to this string like we need it to

04:54.520 --> 04:55.310
write before.

04:55.320 --> 04:59.230
As you can see it's as your output and then created and then an event emitter.

04:59.230 --> 05:04.290
And if you remember before we also had input and there was like a longer line here for.

05:04.510 --> 05:10.270
But since now the parent is populating the string variable error we don't actually need to do anything

05:10.270 --> 05:10.450
else.

05:10.450 --> 05:14.340
We just need to market with a decorator for input and that's it.

05:14.830 --> 05:16.430
We're good to go.

05:17.410 --> 05:22.210
We need to import we need to import input to the top here.

05:22.210 --> 05:23.560
Actually it's already here.

05:23.560 --> 05:32.290
So just import just right input here in the import statement so that we actually have it and then we

05:32.290 --> 05:37.410
need to go into the account for that component at a female.

05:37.600 --> 05:39.920
And there we go.

05:40.050 --> 05:46.830
So this is the new part only these three lines here and we're using the NGF statement and we are checking

05:46.830 --> 05:55.260
the validity of the error strik kind of steered away to this scan's repeating to say basically if the

05:55.260 --> 06:04.380
error string is empty that will mean this will this part this part of the code will exist and it will

06:04.380 --> 06:09.660
happen if we know the other way around.

06:09.660 --> 06:11.310
Sorry if it's empty.

06:11.310 --> 06:12.380
This will be now.

06:12.540 --> 06:20.950
So the value will be now will be zero therefore 0 is always evaluated as false and since 0 is false.

06:21.060 --> 06:24.120
This part of the code will never have happened.

06:24.180 --> 06:25.440
It's going to be gone.

06:25.620 --> 06:28.090
So if there is no if there are no errors.

06:28.320 --> 06:35.630
If the length of the string is zero this will be zero and NGF will evaluate that as false because there

06:35.670 --> 06:39.960
always stands or falls and this part of the code will not be executed.

06:39.960 --> 06:45.690
However if there is an error message if the error string is populated by an error message that will

06:45.690 --> 06:47.130
be evaluated to true.

06:47.190 --> 06:52.210
Hence this portion of the code will execute it says this is from the bootstrap.

06:52.250 --> 06:53.830
Alert alert danger.

06:53.910 --> 06:57.630
The colors of the buttons and things like that.

06:57.660 --> 06:59.190
I've explained that before.

06:59.330 --> 07:05.480
And then we're just building strong strong tags means that we're building it says creating errors.

07:05.480 --> 07:15.320
So we're just placing this into bold text and then we're adding to that the the error strings so we're

07:15.320 --> 07:22.690
pooling the value of the string and we're placing it here within the DML code with the curly brackets.

07:23.120 --> 07:26.970
And that is how we get what is written out onto the screen.

07:26.970 --> 07:27.700
It's just creating your.

07:27.710 --> 07:30.360
And then here only three accounts allow.

07:30.360 --> 07:31.750
This is the string part.

07:31.940 --> 07:40.220
Only 3 accounts allow them creating error is basically just the bold text from A but the string is pulled

07:40.340 --> 07:42.560
from elsewhere.

07:42.570 --> 07:47.630
Anyway I'm going to go ahead and bid farewell here and we shall see each other in the following tutorial

07:47.660 --> 07:50.270
where we will expand on this code.
