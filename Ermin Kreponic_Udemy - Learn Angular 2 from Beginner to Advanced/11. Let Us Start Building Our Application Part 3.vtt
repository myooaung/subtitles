WEBVTT

00:00.340 --> 00:06.250
OK so Welcome back let's go ahead and begin with this method here.

00:06.260 --> 00:07.280
Let's see what it does.

00:07.280 --> 00:08.690
How does it.

00:08.750 --> 00:17.090
What's going on here in general before I do you can tie these three this variable up on these three

00:17.090 --> 00:24.290
lines so you have it here you have it here and then you have it here as well so three times it is referred

00:24.290 --> 00:25.210
to here.

00:25.520 --> 00:33.900
So first of all the next tidy represents the ID of the next account that is created.

00:33.920 --> 00:36.400
Now we would like to begin from 3.

00:36.410 --> 00:40.150
That's why it's not 0 it's not 1 it's 3.

00:40.160 --> 00:41.850
Why would we want to begin from 3.

00:41.900 --> 00:47.000
Well because we have initialized one account and we have initialized another one.

00:47.120 --> 00:53.330
Therefore we would like our IDs to begin with number three because the first two are already taken and

00:53.330 --> 00:58.540
we would like these ideas to be absolutely unique anyway.

00:59.000 --> 01:00.880
That's why it's three.

01:00.940 --> 01:09.040
Anyway the method here create account or create A.S.C. short except three DML elements.

01:09.050 --> 01:14.030
So it's title l description L and balance L.

01:14.060 --> 01:21.170
Now you can name them any way you want but the convention for naming h DML elements of all sort of convention

01:21.530 --> 01:23.520
is to put e l here at the end.

01:23.600 --> 01:27.660
I like to put it in a way well maybe not so much.

01:27.960 --> 01:29.110
But it doesn't really matter.

01:29.880 --> 01:35.070
Just put something that you know that it's an element and then we're specifying what type of an element

01:35.130 --> 01:36.400
we would like it to be.

01:36.630 --> 01:41.580
And we are basically we were basically way too lazy to type in the types of the elements so we just

01:41.580 --> 01:47.950
said any any and any seemed simpler that way for everybody.

01:47.950 --> 01:57.210
Now what we're doing here within the method we're basically utilizing the push function in order to

01:57.390 --> 02:05.110
add another account to the array so we're seeing this dot underline accounts.

02:05.130 --> 02:11.430
So we're using the current instance of the accounts array and then we're using the push function in

02:11.430 --> 02:15.050
order to add a new element to that array.

02:15.450 --> 02:19.310
So we're basically calling the constructor again as before.

02:19.320 --> 02:26.130
Nothing different so we're just calling the constructor and that constructor is then initializing says

02:26.280 --> 02:28.100
title L that value.

02:28.110 --> 02:29.650
This is referring to the.

02:30.000 --> 02:31.880
This is pooling the.

02:31.890 --> 02:35.790
This is pulling the value from the DML field.

02:35.880 --> 02:41.590
So total that value is going to pull the value of whatever we typed into that field desk.

02:41.610 --> 02:42.940
Eldard value again.

02:42.960 --> 02:46.340
It's going to be all the value that we've actually typed into that field.

02:46.350 --> 02:48.580
And same goes for the last one.

02:48.630 --> 02:49.310
Now the only.

02:49.350 --> 02:53.660
Now here you have something different it says this underline next ID.

02:53.700 --> 03:00.870
So we would like to get the current instance off the side of the next tidy property and we would like

03:00.870 --> 03:08.280
to store it along with this account so that this account has a unique ID immediately and when this is

03:08.280 --> 03:09.110
done.

03:09.220 --> 03:14.340
We're going to go ahead and call and we're going to go ahead and iterate the current instance of the

03:14.340 --> 03:18.990
next ID property so that it increases by 1

03:21.620 --> 03:24.330
once we are done with creating the new account.

03:24.720 --> 03:29.300
We would like those fields HTL fields to become empty.

03:29.400 --> 03:34.880
So we are resetting your values to nothing so empty empty zero.

03:35.130 --> 03:38.970
So we're completely emptying them out and down below.

03:39.030 --> 03:43.230
We have a final method here for this story.

03:43.350 --> 03:45.620
It says remove account.

03:45.780 --> 03:52.050
Obviously we're going to be using it in order to basically just remove that account that's literally

03:52.130 --> 03:53.380
at.

03:53.430 --> 04:01.560
So it will receive an index which will be a number and that index will refer to the opposite to the

04:01.930 --> 04:05.590
debt and that index will be the index of an account.

04:05.850 --> 04:06.550
So it won't.

04:06.570 --> 04:08.240
It's not the next ID.

04:08.250 --> 04:09.410
It's not at all.

04:09.510 --> 04:11.870
It is the it's not even the ID.

04:11.910 --> 04:16.650
It's just the position of the account in the array.

04:16.680 --> 04:18.060
So it's it in the first place.

04:18.060 --> 04:19.260
Is it in the second place.

04:19.260 --> 04:20.880
Is it in the third place.

04:20.880 --> 04:24.430
So if you found that account at the third place deleted if you pass.

04:24.450 --> 04:26.760
Number three here that's what this fund.

04:26.850 --> 04:28.310
That's what this method is going to do.

04:28.380 --> 04:36.060
So it's this dot underline accounts dot splice splice is the actual function that performs the deletion

04:37.810 --> 04:40.740
and the way it works it receives the first parameter.

04:41.260 --> 04:46.890
The first parameter is the index from where it will begin the deletion process and the second parameter

04:46.900 --> 04:48.080
basically states.

04:48.190 --> 04:54.930
How many how many entries do you want to be to delete from beginning with this one.

04:55.510 --> 05:01.690
So you pass that number if you give a number here and let's say two and then you can give another number

05:01.690 --> 05:03.370
here let's say five.

05:03.550 --> 05:09.990
It's going to delete everything between two and five starting which two.

05:10.220 --> 05:12.460
It's only one here.

05:12.470 --> 05:17.460
Why is it one because we would like to lead only one element so delete the number that has been to lead

05:17.480 --> 05:20.680
the position that has been given to you and go no further.

05:20.720 --> 05:25.100
So only one place only one position you're going to delete only one position.

05:26.920 --> 05:31.730
Anyway that that's be it for app component not yes.

05:31.780 --> 05:39.400
We're going to go ahead and move up ahead and head over to the DML file in the follow up tutorial and

05:39.400 --> 05:46.230
see what we actually are going to do there and see how these changes are being reflected on the Web

05:46.230 --> 05:47.590
site itself.

05:47.590 --> 05:54.820
Keep in mind that we still didn't plug in Bootstrap but we didn't utilize bootstrap here at all.

05:54.820 --> 05:58.750
So the site will be pretty ugly I can tell you that much.

05:58.990 --> 06:00.450
But don't worry about it.

06:00.600 --> 06:07.750
Surely in a certain amount of tutorials in the far fetched future we're going to get to the bootstrap

06:07.750 --> 06:12.790
and we're going to make the site look a lot better so it will be a lot more pleasing for the eyes but

06:12.790 --> 06:18.580
for the moment you will just have fields until we master that and then it's fairly easy to plug in Bootstrap

06:18.750 --> 06:19.100
space.

06:19.120 --> 06:21.160
A couple of lines of code and that's it.

06:21.580 --> 06:21.930
OK.

06:21.940 --> 06:25.870
So anyway I'm going to go ahead and get you farewell here and see you in the fall.
