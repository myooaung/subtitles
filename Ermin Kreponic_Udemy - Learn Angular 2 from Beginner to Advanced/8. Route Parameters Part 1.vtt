WEBVTT

00:00.340 --> 00:01.170
A welcome back.

00:01.170 --> 00:07.410
So today we're going to do something simple but we're going to need to type in a good amount of code

00:08.040 --> 00:15.450
what we want is when we go to this page personal finance and we go to the accounts list if I click on

00:15.450 --> 00:21.810
a particular account I want to get the details on that account in order for us to achieve this.

00:21.840 --> 00:31.630
We're going to go into the account services dot Yes and and insert this this function here.

00:31.720 --> 00:35.170
So what the what is this.

00:35.170 --> 00:40.650
Well we will use this method function to retrieve the account by ID.

00:40.840 --> 00:48.040
It takes the account ID as parameters so Account ID as a parameter here which is of type number and

00:48.040 --> 00:51.410
it returns a promise of type account.

00:51.430 --> 00:58.660
Now down below you have seen the syntax in the previous tutorials where I have explained it to a good

00:58.660 --> 00:59.610
extent.

00:59.690 --> 01:06.030
They're called Aero functions which we have used in combination with promises.

01:06.240 --> 01:11.130
If you skip that lecture you should really go back anyway.

01:12.570 --> 01:16.770
We have a promise here and the promise starts with this parentheses here.

01:17.040 --> 01:19.950
And it ends here.

01:20.010 --> 01:25.260
So this is the end of the promise and this is the beginning of the promise and then the promise within

01:25.260 --> 01:33.600
itself contains an arrow function or lambda function however you wish to call it which begins here and

01:33.720 --> 01:35.300
ends here.

01:36.680 --> 01:42.830
This arrow function or lambda function contains two arguments so to the left of the arrow are the arguments

01:42.860 --> 01:50.170
or the parameters of the function and to the right of the lambda function R is the body of the function.

01:50.270 --> 01:57.350
Here we're passing two parameters which are resolve and reject resolve and reject our functions in and

01:57.350 --> 02:05.420
of themselves so a function is receiving two functions as parameters down below we are using a variable.

02:05.420 --> 02:12.860
Find a count and in it we shall store the results of our finding the results of our search of the account's

02:12.950 --> 02:13.740
array.

02:13.910 --> 02:20.810
We will use the find method the built in Find method in order to attempt to find the account of the

02:20.810 --> 02:22.490
specified ID.

02:22.670 --> 02:27.830
So the A.S.C. here.

02:27.830 --> 02:35.120
This is basically the current element that is being checked and to the right the checking process actually

02:35.150 --> 02:36.740
goes on.

02:37.070 --> 02:47.280
See that ID is the account ID that has been passed the account ID actually that is being compared to

02:47.280 --> 02:55.500
d not the A.S.C. IDs not the one that has been passed the account ID has been passed and then these

02:55.500 --> 03:01.950
two are being compared to see if this one from the find method which is going through the array one

03:01.950 --> 03:09.480
element at a time actually matches the account ID if it manages to find the account ID the matching

03:09.480 --> 03:15.780
account ID if this evaluates to true then the account will be returned and stored into this variable.

03:15.780 --> 03:19.210
If it fails to find it it will return undefined.

03:20.560 --> 03:30.570
Now when it returns undefined undefined is basically evaluated as false but down below we use the negation

03:30.570 --> 03:32.140
in order to make it true.

03:32.310 --> 03:39.060
And then we call the reject method which we have passed here which means that we are just going to have

03:39.060 --> 03:43.970
some sort of an error no account with this ID else.

03:44.010 --> 03:51.450
If it finds some sort of an account thats going to thats going to go into the else part of the statement

03:51.510 --> 03:55.490
and this will be ops this will be resolved.

03:55.710 --> 03:58.270
It will resolve the promise and pass the found.

03:58.290 --> 04:05.190
I can just somehow accidentally smashed my keyboard which is amazing in and of itself.

04:05.220 --> 04:15.040
OK now we need to go into the account around start D.S. And here we will do this import.

04:15.040 --> 04:18.600
So we'll just import this line.

04:18.640 --> 04:25.400
We don't have details component yet but we will make it in the follow up to Torrijos and down below.

04:25.420 --> 04:32.180
We also need a other route and other children and another child route with those with the kind of a

04:32.290 --> 04:33.650
weird path here.

04:33.820 --> 04:34.480
So.

04:34.570 --> 04:40.690
And on the in the address bar it's going to look like this account slash 15 account slash 1.

04:40.690 --> 04:41.550
Or something like that.

04:41.560 --> 04:44.770
When we click on there on the particular account.

04:45.040 --> 04:53.170
Now Colan basically means that the route expects a parameter and we have ID as our placeholder in the

04:53.170 --> 04:56.050
parameter in our case is I d.

04:56.110 --> 05:03.920
And basically the second part as before just shows with which component does this around lead to Anyway

05:04.190 --> 05:07.870
I bid you farewell and we shall see each other in the follow up.
