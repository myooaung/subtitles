WEBVTT

00:00.180 --> 00:00.700
OK.

00:00.930 --> 00:09.650
So let's go into the app component DML and change this line a little bit.

00:09.930 --> 00:15.120
So this part is the one that is fairly similar to property binding.

00:15.750 --> 00:19.940
Let's go ahead and just write up the code didn't really want to copy it.

00:19.950 --> 00:21.300
It's rather short anyway.

00:22.560 --> 00:23.840
Counts.

00:24.460 --> 00:25.390
And we shall see.

00:25.440 --> 00:27.630
Equal to

00:30.600 --> 00:31.870
counts.

00:34.320 --> 00:37.580
And I'm not going to add the rest because we're going to add the rest in the follow up.

00:37.590 --> 00:45.570
But for the time being I wanted to explain this part here as this is going to be vital for us.

00:45.600 --> 00:55.440
So this here accounts that you see in brackets is something like a property of a child component so

00:55.710 --> 01:02.490
called component is the account list which we have created and underline account is the private variable

01:02.490 --> 01:06.010
from the app component which is the parent component.

01:07.240 --> 01:18.130
And we're going to bind basically underscore accounts to accounts here the lot so whenever accounts

01:18.160 --> 01:19.180
is changed.

01:19.180 --> 01:23.000
Basically change will be when underline accounts.

01:23.050 --> 01:26.440
Here is change when any sort of change is enacted here.

01:26.440 --> 01:29.750
This change will be reflected here.

01:30.010 --> 01:37.030
The logic of this goes the logic of this passing because we need this for the passing of accounts.

01:37.480 --> 01:40.760
The logic of it goes from left to right.

01:40.790 --> 01:45.250
That is it always goes from parent to child component.

01:45.730 --> 01:55.050
So this part is the child component and this part belongs to the parent component anyway.

01:56.050 --> 01:58.040
That's all we need to really do here.

01:58.060 --> 02:01.530
Later on we will come back and we will add some additional things here.

02:01.540 --> 02:07.600
But for the time being we are going to go into the accounts a list component and now we're going to

02:07.600 --> 02:10.520
use the accounts from here.

02:10.950 --> 02:17.500
So let's go to the counselors component and let this and the fact that this is read is perfectly fine

02:17.980 --> 02:20.630
actually we can go ahead and delete this.

02:20.710 --> 02:22.000
No need for that

02:24.890 --> 02:27.540
and I haven't asked for parentheses.

02:27.630 --> 02:28.240
I think we do.

02:28.330 --> 02:29.510
I think I don't need this for the

02:32.710 --> 02:37.120
and we're not going to need this either so we can just go ahead and delete it.

02:37.120 --> 02:37.900
That's fine.

02:37.960 --> 02:47.410
And this line can go away too as we don't really need it any more that's just redone the fact that this

02:47.410 --> 02:49.270
is still read is perfectly fine.

02:49.270 --> 02:51.290
Soon it will disappear.

02:51.310 --> 02:52.900
We'll make it go away.

02:55.300 --> 02:58.290
We need to also do an additional inclusion up here.

02:58.380 --> 03:05.730
So where it has a component we need to come out to a coma and then input we will do additional inclusions

03:05.730 --> 03:05.960
here.

03:05.970 --> 03:09.730
But for the time being we'll just need input.

03:09.780 --> 03:17.790
So we need to include input in order to be able to utilize the input decorator now her input decorator

03:17.910 --> 03:19.590
will go something like this.

03:19.860 --> 03:26.850
So we will need an ad sign for the decorator and then type in empowered and we're going to open parentheses

03:27.060 --> 03:31.470
plaister quotation marks and we will use accounts from the DML file.

03:32.680 --> 03:36.230
UPS so we will use this exact same name.

03:36.250 --> 03:43.360
So you can even copy it just press control-C and then go back here and control V to put paste it in

03:43.360 --> 03:48.190
here and then we're going to do an underscore type counts.

03:48.250 --> 03:54.080
Colon re count.

03:54.160 --> 03:59.410
So we're just going to recreate something that we had for anyway.

03:59.710 --> 04:06.380
So input and input is a decorator decorator's add additional characteristics to a variable.

04:06.460 --> 04:13.090
So you have this decorator which that which adds visual characteristics to this variable which is of

04:13.090 --> 04:16.830
type array whose elements are of type account.

04:18.880 --> 04:27.710
Basically accounts here in the decorator is the name of the property which parent component uses to

04:27.710 --> 04:31.350
pass the data to the child component.

04:31.430 --> 04:37.610
So you have a property here accounts which the parent component is utilizing for the pass through of

04:37.610 --> 04:38.770
data.

04:39.560 --> 04:47.020
The decorator at input it basically marks the private variable underscore account as an input variable.

04:47.020 --> 04:54.170
So this is now marked as an input variable which means that it is enabled for passing data to it.

04:54.170 --> 05:00.470
It will accept the pass that data so the data that is passed which will be accepted it is enabled to

05:00.470 --> 05:06.480
do so with this particular decorator at input.

05:06.490 --> 05:08.770
Let's go over this quickly one more time.

05:08.770 --> 05:11.150
I know it's a little bit difficult to understand.

05:11.350 --> 05:18.070
So we go back to the HTL code and we have a process that is very similar to property binding.

05:18.160 --> 05:26.200
Imagine that model is to see that this is the private variable from the parent component which is app

05:26.200 --> 05:27.220
component.

05:27.460 --> 05:35.130
And whatever happens here will be reflected in accounts which belongs to the child component and in

05:35.170 --> 05:36.350
the child component.

05:36.360 --> 05:44.770
Our decorator is taking on the accounts property and therefore any sort of change that is enacted to

05:44.770 --> 05:50.920
the underscore accounts will be reflected here in the accounts property and therefore this input will

05:50.920 --> 05:55.020
be passed to the underscore accounts as simple as that.

05:55.060 --> 06:04.950
So parent Prosit parent component Bass's data or accounts to the child component which is accounts list.

06:04.960 --> 06:08.920
It's just the passing of data happens it goes from one component to the other.

06:08.950 --> 06:14.170
This is into component communications so you pass data from one component to another in order to do

06:14.170 --> 06:20.980
this you require some require a process that is similar to property binding here so that the changes

06:20.980 --> 06:23.510
here would reflect the changes here.

06:23.650 --> 06:29.170
And then when the changes are reflected here the rest of the process can actually take place in the

06:29.500 --> 06:39.520
countless component here which is basically marking the underscore accounts private variable or as a

06:39.550 --> 06:42.880
basically a as an input variable.

06:42.880 --> 06:45.310
Anyway that's it in the follow up tutorial.

06:45.340 --> 06:52.480
We're going to go ahead and meddle meddle around with the output and we will see the results of our

06:52.570 --> 06:53.120
modeling.

06:53.170 --> 06:58.720
So to say I will also strongly encourage you to experiment with this and see when you change things

06:58.760 --> 07:03.730
what happens cause appears to happen and see how you can go about fixing them.

07:03.730 --> 07:04.630
I'm always ready.

07:04.660 --> 07:07.140
I'm always ready to help you out in the discussion section.

07:07.180 --> 07:10.280
In all likelihood it's going to be the discussion section or somewhere else.
