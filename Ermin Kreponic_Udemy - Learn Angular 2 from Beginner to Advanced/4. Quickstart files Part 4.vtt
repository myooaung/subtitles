WEBVTT

00:00.350 --> 00:06.100
OK so let's do a bit of cleanup work so let's delete these.

00:06.660 --> 00:10.980
So we will delete all Geass files and all map files.

00:10.980 --> 00:17.120
We will only leave the TS for the files with a ts ts extension.

00:17.130 --> 00:19.800
So we're going to go ahead and do.

00:19.990 --> 00:21.400
No we will go.

00:21.390 --> 00:25.670
This one this one this one and this one.

00:25.740 --> 00:27.690
Then we're going to go ahead and say delete.

00:27.690 --> 00:28.660
Are you sure.

00:28.680 --> 00:31.890
Yes I am absolutely sure.

00:31.950 --> 00:36.840
And then we're going to delete main and you're wondering how away Dermond What are you doing why are

00:36.840 --> 00:41.800
you deleting the main didn't you just say that that's like the bulk of our ad that that's the main thing.

00:41.810 --> 00:49.620
Well yes but we have main TS where everything pretty much from here is basically what we need.

00:49.620 --> 00:55.540
Our main file that will be named dot is this one we can remove for the time being.

00:55.950 --> 01:01.980
So main Geass main is that map and I believe that's it.

01:02.340 --> 01:03.970
So just go ahead and delete.

01:03.990 --> 01:04.580
Yes.

01:04.590 --> 01:09.280
Once again I am certain and thank you Windows for that awesome sound that you make.

01:09.960 --> 01:15.990
So this one shall remain this one shall remain and this one shall remain.

01:16.050 --> 01:19.200
So let's just go I just want to explain these two.

01:19.380 --> 01:25.450
And then we can basically go ahead and move on.

01:25.470 --> 01:29.210
So we have app component out TS and main tier.

01:29.220 --> 01:32.000
So this one at EPK and put it out.

01:32.010 --> 01:33.540
Yes and desuetude.

01:33.540 --> 01:36.090
So these are the two that I really want to explain.

01:38.420 --> 01:44.420
We can go ahead and begin with the main TS and some sort of a logical order if you will.

01:44.420 --> 01:54.500
So this is where we start our application we will import the bootstrap function and our app component

01:54.530 --> 01:59.830
basically right here by calling bootstrap app component.

01:59.830 --> 02:07.990
We actually basically we actually start our application why use bootstrap function.

02:08.150 --> 02:11.860
That's because bootstrapping is pretty much platform specific.

02:12.020 --> 02:18.710
Maybe we could use something maybe we could use angular to with something else like Apache Cordova or

02:18.710 --> 02:21.760
ironic to run applications on mobile devices.

02:21.950 --> 02:28.070
Or we could simply run Aguillard to any servers so we can pre-rendered the first pages that the user

02:28.160 --> 02:28.580
loads.

02:28.580 --> 02:37.630
This is not relevant for the time being bootstrapping Izzi and basically a platform specific.

02:37.670 --> 02:44.660
So we need the one for Angella so angular has its own bootstrapping thing and we are importing it in

02:44.810 --> 02:52.170
this fashion along with importing the app components Rusev bootstrap app component here.

02:52.700 --> 02:56.910
This is the this is a call and this is an import.

02:56.910 --> 02:58.340
So keep that in mind.

02:58.340 --> 03:05.390
So we are calling it here we are calling it here and here we are importing the necessary elements.

03:05.720 --> 03:11.580
Now in the app component here you are going to see some very familiar things.

03:11.600 --> 03:17.150
So here we create the app component class with export.

03:17.150 --> 03:22.160
We declare that this class can be imported to other files and be used.

03:22.160 --> 03:27.000
So in a bit of a counterintuitive fashion I shall begin explaining it from bottom.

03:27.110 --> 03:34.520
It says here export Class AB component and because it is stated that this export class as well because

03:34.520 --> 03:40.310
we have the keyword export in front of a class that simply means that this class can be used but can

03:40.310 --> 03:45.080
be used in other files as well without without export.

03:45.110 --> 03:47.560
We wouldn't be able to actually do that.

03:47.750 --> 03:50.570
Well not in the way we would want to anyway.

03:51.230 --> 03:57.720
So we think we also declared this class as a component.

03:57.800 --> 04:02.010
We will talk about components more in the next chapters.

04:02.030 --> 04:08.620
Now what is familiar to you is this my app so you have seen this in HD m-L.

04:08.850 --> 04:16.920
Let me just scroll down ah got indexation.

04:16.930 --> 04:17.790
There we go.

04:18.160 --> 04:20.610
So there it is.

04:20.610 --> 04:25.040
It says my app and it says my appere.

04:25.040 --> 04:25.890
Coincidence.

04:25.930 --> 04:28.910
No this is intentional.

04:28.920 --> 04:38.520
So basically the selector for this component is my app same as the tag of an element in DML selector

04:38.520 --> 04:47.980
declares the name of the tag where and ular will make a component so angler will place the contents

04:48.100 --> 04:53.350
from the template inside my app tags.

04:55.080 --> 04:56.220
Basically

04:59.130 --> 05:04.810
this but we didn't basically include this file anywhere.

05:04.810 --> 05:07.080
Let's see how that actually works.

05:07.120 --> 05:11.970
So you see it says here template and it says we have HD tags.

05:11.980 --> 05:20.980
Basically each one and then it says my first angular to app here and then it says the selector is my

05:20.980 --> 05:21.620
app.

05:21.670 --> 05:24.300
So this is in regard to this part here.

05:24.310 --> 05:26.970
The first thing that you're going to see is loading.

05:26.970 --> 05:35.970
And once this is done that from the template template shall be loaded in between these tags here and

05:35.970 --> 05:38.700
you will basically see on the screen.

05:38.700 --> 05:42.210
My first to my first angular to app.

05:42.210 --> 05:43.620
Let's go ahead and do that.

05:43.680 --> 05:51.780
Go into the QuickStart master folder and type in and p m start and just wait for it to back relax and

05:51.780 --> 05:54.290
wait.

05:54.510 --> 05:58.910
He can sing a song at the time like a whistle or do whatever you want.

05:58.920 --> 06:04.740
And there we go it says loading right there's loading and soon enough it's going to say my first Eric.

06:04.770 --> 06:09.280
My first angler two apps are what has happened.

06:09.810 --> 06:12.470
You have the tag Ã¦sir.

06:12.510 --> 06:20.440
I kept my app and the first thing that's being displayed is loading dot dot dot.

06:20.570 --> 06:21.970
Then we come to this bar here.

06:21.980 --> 06:23.530
It says selector.

06:23.680 --> 06:24.180
OK.

06:24.290 --> 06:29.200
My app look for it in ADHD M-O code find it OK.

06:29.390 --> 06:30.560
It's right here.

06:31.790 --> 06:35.250
And then insert in between the tags.

06:35.270 --> 06:41.860
This distend play basically my for's angular to app simple as that.

06:41.940 --> 06:47.150
Now we will of course increase the complexity of this exponentially as we move along with our app as

06:47.150 --> 06:50.300
we move along and progressed with our application.

06:50.300 --> 06:54.950
But these are the basics of the basics.

06:54.950 --> 07:01.610
So going to bid you farewell here and we shall see each other hopefully in the follow up tutorial.
