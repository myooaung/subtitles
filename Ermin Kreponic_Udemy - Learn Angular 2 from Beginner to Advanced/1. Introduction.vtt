WEBVTT

00:00.630 --> 00:09.000
So today we're going to go ahead and start talking about pipes though what pipes do is basically transform

00:09.000 --> 00:13.120
data did we intend to display within our template.

00:13.170 --> 00:23.010
If you'll remember we encountered pipes before and we encountered them right here it's the date by date

00:23.040 --> 00:28.680
and we've used this piping to format it basically to transform the date into a particular format.

00:28.680 --> 00:30.390
Let's put it like that.

00:30.420 --> 00:34.320
So date is just one of those built in pipes.

00:34.380 --> 00:36.500
You also have apprecate.

00:36.630 --> 00:43.360
I mean angular itself has built in pipes basically have they uppercase lowercase.

00:43.770 --> 00:46.180
I'm pretty sure that these are self-explanatory.

00:46.200 --> 00:53.850
They just formats the data to a certain size to a circuit for Mathilde's like that and upper cases to

00:53.910 --> 00:57.510
all the all the letters to uppercase and lowercase all letters to lowercase.

00:57.510 --> 01:03.450
Basically just alters the strings currency on the other hand transforms a number to be displayed as

01:03.450 --> 01:04.050
a currency.

01:04.060 --> 01:16.110
So for example if something is $10 it's going to say USD 10 or b c you are 10 10 euros you have a pipe

01:16.110 --> 01:21.240
for decimal points and 4 percentage to basically convert to percentages.

01:21.240 --> 01:26.190
Now I'm going to go ahead and show them to you this is not just straight talk but Engler has a lot of

01:26.190 --> 01:28.180
pipes but maybe not that many.

01:28.320 --> 01:29.670
But he can check them out here.

01:29.700 --> 01:31.850
Here's the here's the site.

01:32.050 --> 01:38.660
And here are some of the pipes that you can actually have a look and see how they actually work.

01:38.710 --> 01:47.450
So from the official documentation that is Anyway let's go ahead and see how this actually works in

01:47.450 --> 01:47.890
action.

01:47.910 --> 01:52.770
Oh by the way just one more thing before we see how this works in action.

01:52.790 --> 02:00.370
Aside from the built in pipes it is possible that we make our own pipes but this we will do later on.

02:01.040 --> 02:12.790
So at the moment we have to have a t value here but before that I made some very small alterations to

02:12.790 --> 02:15.550
the file so they're practically unnoticeable.

02:15.580 --> 02:25.560
You go into the transaction folder and then you go into transaction service that TS.

02:26.050 --> 02:30.100
And as you can see here I have just a new day.

02:30.110 --> 02:33.780
I've set a new date so date and new date.

02:34.180 --> 02:38.400
And the reason why I wanted to mention this year is because this is hilarious.

02:38.440 --> 02:39.490
Strange.

02:39.600 --> 02:43.920
OK so year is fine right.

02:43.930 --> 02:45.730
Days are fine.

02:45.730 --> 02:53.230
Ours are fine minutes are fine seconds are fine but for some strange reason and God knows why I am struggling

02:53.230 --> 02:53.950
to understand.

02:53.950 --> 02:57.910
For what reason did somebody decide that months should be iterated from zero.

02:58.270 --> 03:04.420
So instead of having months ago what do you have five six seven eight nine 10 11 12.

03:04.500 --> 03:11.230
You have month that are going from zero so it's zero one two three four five six seven eight nine 10

03:11.290 --> 03:14.370
11 you still have 12 months.

03:14.380 --> 03:15.520
But it goes from zero.

03:15.520 --> 03:20.920
So this is completely unexplainable reasons at least nothing that I can understand.

03:21.070 --> 03:24.480
Why on earth do months go from zero.

03:24.640 --> 03:29.510
If somebody knows some logical or plausible explanation for this please.

03:29.920 --> 03:30.860
Help me out here.

03:30.970 --> 03:36.130
But anyway this is 2016 of the ninth month.

03:36.250 --> 03:43.120
So it goes from 0 0 0 1 2 3 4 5 6 7 8 9.

03:43.180 --> 03:48.910
Well that foot nine would be the tenth month and 8 would be the ninth month etc. because the iteration

03:48.910 --> 03:52.070
begins from zero so we have an extra number there.

03:52.240 --> 03:56.290
So eight and nine month nine they are sorry eight.

03:56.320 --> 04:03.380
They sent our sixth minute and first second.

04:03.400 --> 04:09.670
Just wanted to explain the date format there and then I have added the date and other date down here.

04:11.260 --> 04:17.440
And this value was altered a little bit so we have three decimal points so we can demonstrate the rounding

04:17.500 --> 04:27.320
up OK so we go back into the account and then details that component that DML.

04:27.710 --> 04:28.480
There we go.

04:28.520 --> 04:34.810
And disvalue here on the site itself.

04:34.890 --> 04:36.280
So it represents this value.

04:36.280 --> 04:40.400
Let me just go ahead and reload the site.

04:41.120 --> 04:44.070
Have I actually modified it.

04:47.590 --> 04:48.860
I'm just going to see.

04:48.930 --> 04:54.860
I did not save it which was brilliant and my and so value is right here.

04:54.870 --> 05:00.960
And then it's fifty one twenty one point thirty one minus one thousand twenty point three hundred forty

05:00.960 --> 05:01.880
eight.

05:02.310 --> 05:08.360
And if we go back here this is what the t value presents those numbers.

05:08.370 --> 05:14.010
Now we can go ahead and play around with pipes in order to get a different output in order to format

05:14.010 --> 05:14.690
the current.

05:14.730 --> 05:16.050
Let's put it like that.

05:16.080 --> 05:19.770
So if I do this for example this

05:23.040 --> 05:29.050
by pipe currency I'm just going to go ahead and save this.

05:29.060 --> 05:30.670
Let's have a look what will happen.

05:30.880 --> 05:31.190
OK.

05:31.210 --> 05:33.500
So it's going to say USD 50.

05:33.520 --> 05:38.660
The default currency as United States dollar so USD 50.

05:38.950 --> 05:44.310
But suppose that I don't know we're somewhere else in the world and we don't use you as the US dollars.

05:44.620 --> 05:51.850
It is possible to actually just state which string shall be used as a currency as a currency markers

05:51.860 --> 05:57.740
so you are for for example euros they can control us.

05:57.790 --> 06:02.780
There we go it's good to see you are so euros.

06:02.890 --> 06:08.970
Aside from that we can also do this.

06:09.050 --> 06:11.250
Colan true.

06:11.290 --> 06:19.130
And this will make sure that they are actually not shown but rather instead of the symbol is show OK.

06:19.500 --> 06:20.280
And there you go.

06:20.370 --> 06:27.330
So symbols are actually showed instead of the actual the actual strings.

06:27.330 --> 06:28.760
That's another way of putting it.

06:28.860 --> 06:34.240
In addition to this we can also format the decimal points.

06:34.590 --> 06:42.720
And in order for us to do that I mean just you can just keep adding here on end simply So these are

06:42.720 --> 06:43.420
all based.

06:43.440 --> 06:46.240
These are all just parameters for the pipes.

06:46.360 --> 06:48.680
You are frue.

06:48.960 --> 06:53.050
Now we're going to go ahead.

06:53.080 --> 06:54.790
Let's see if we will.

06:55.320 --> 06:55.640
OK.

06:55.650 --> 06:56.210
So let's do that.

06:56.220 --> 07:02.220
Let's say that we want a minute a bare minimum of two decimals shown and the maximum is also two decimals

07:02.310 --> 07:03.440
to be shown.

07:03.430 --> 07:15.220
If I save this case it says 50 and says 0 0 deserves it's not exist before it says 121 and then it's

07:15.460 --> 07:16.810
3 1.

07:16.870 --> 07:20.310
So it's rounding it up to the closest decimal point.

07:20.470 --> 07:23.240
And this is well so 3 5.

07:23.260 --> 07:29.350
It's again around to get up because we have stated that we can only have the maximum of two decimal

07:29.350 --> 07:35.580
points and the minimum of two decimal points and it's not going to go beyond that.

07:36.190 --> 07:41.460
You can also configure decimal points by just using it can delete all of this.

07:41.580 --> 07:47.220
Is going to cut it and you can type in number column

07:50.780 --> 07:51.980
should do the trick.

07:52.070 --> 07:52.790
Yep there we go.

07:52.820 --> 07:56.580
Still remains at the same.

07:56.630 --> 08:05.130
OK so we are just going to go ahead and leave it with this.

08:05.130 --> 08:09.250
There you go.

08:09.470 --> 08:14.420
So it's going to go ahead and leave it with this and save it and then we're going to go ahead and proceed

08:14.420 --> 08:16.900
in the follow up to Tauriel.
