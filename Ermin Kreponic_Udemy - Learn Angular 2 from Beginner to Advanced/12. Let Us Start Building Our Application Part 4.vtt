WEBVTT

00:00.270 --> 00:01.910
Welcome back all.

00:01.920 --> 00:10.140
So now we're going to go ahead and examine the app component got HD M-L file and see what we have done

00:10.140 --> 00:10.950
there.

00:12.000 --> 00:21.630
Now to begin with the very first thing that you're going to immediately encounter is the Aside from

00:21.660 --> 00:28.760
your accounts you will see this part here deceptive where it says you don't have any accounts yet.

00:28.800 --> 00:32.770
Please add it or please add them.

00:32.840 --> 00:35.260
Now why do we have this line.

00:35.310 --> 00:42.450
This is basically going to this will be written out onto the screen if there are no accounts in existence.

00:42.450 --> 00:46.000
How do we check whether we have accounts in existence or not.

00:46.200 --> 00:51.630
Well if the length if the size of the array if the length of the array if the number of elements in

00:51.630 --> 00:59.430
the array is equal to zero then the account has then the accounts array has no relevance whatsoever

00:59.880 --> 01:08.570
and therefore we're using this if so if the length of the array is equal to zero meaning if it has no

01:08.570 --> 01:14.480
elements well then there are no accounts so then it stands to reason that we should write you do not

01:14.480 --> 01:15.310
have any accounts.

01:15.320 --> 01:22.440
Please add them or at it that I don't really care.

01:22.440 --> 01:30.360
This particular variable here is the private one for private account.

01:30.390 --> 01:31.140
Yep there we go.

01:31.140 --> 01:33.320
So private underline accounts.

01:33.600 --> 01:34.630
It's an array.

01:35.720 --> 01:41.470
And its elements are of type account from the model that we have created previously.

01:41.600 --> 01:45.650
So we have the first account and then you have the second account.

01:45.680 --> 01:48.260
The two of these are created in two different ways.

01:48.260 --> 01:53.520
This has been explained in previous tutorials.

01:53.660 --> 01:55.140
One more thing to note.

01:55.220 --> 01:59.990
You can immediately see by this underline by the naming convention which I have mentioned before that

02:00.000 --> 02:06.680
the private variables shall be named with an underline in front of the name of the variable or the name

02:06.680 --> 02:07.750
of the property.

02:08.060 --> 02:13.690
I can immediately look at the email template and immediately know that account is actually private but

02:13.700 --> 02:22.450
just looking at the naming convention of the underscore Now you might wonder yourselves well Erman this

02:22.450 --> 02:23.830
is never going to happen.

02:23.860 --> 02:26.750
You have initialized two accounts straight away.

02:26.750 --> 02:28.100
So you've explained before.

02:28.300 --> 02:32.500
Well yes but it's always a good practice to insure yourselves.

02:32.500 --> 02:38.590
I mean think of all the cases that can happen and create some sort of logic for each one of those cases.

02:39.840 --> 02:41.280
So that you would have a failsafe.

02:41.280 --> 02:46.350
Yes we have initialized to accounts but you forget the fact that we can delete all the accounts if we

02:46.350 --> 02:51.270
delete all the accounts and if there are no accounts in existence this will be printed out onto the

02:51.270 --> 02:52.800
screen.

02:52.870 --> 02:59.130
Now we would like these accounts to be print the contents of these accounts to be printed out onto the

02:59.130 --> 03:01.680
screen to be displayed on the screen.

03:01.680 --> 03:02.600
Should I say.

03:02.820 --> 03:10.110
So we're going to use the energy for loop from the previous tutorials which we have seen so we will

03:10.110 --> 03:19.920
have I don't know some arbitrary name for this so it will be A.S.C. as an accounts and then every every

03:19.920 --> 03:26.190
every value of under square accounts private or private property will be placed into the A.S.C. and

03:26.190 --> 03:31.610
through A.S.C. we will access the individual property individual properties.

03:32.970 --> 03:35.250
So that would be very easy to do like that.

03:35.250 --> 03:44.550
So as you see that title will grab the title from the celebrant So title shall be grabbed and therefore

03:44.550 --> 03:47.860
it will have the value of bank X Y set.

03:49.210 --> 03:55.280
And then we would also like to have the ID as well printed out along with the account.

03:55.390 --> 04:03.030
So hey ID Let's get scrapped the idea as well and print it out and have it displayed for us on the screen.

04:03.120 --> 04:06.250
Now also we would like some sort of a description so yes please.

04:06.250 --> 04:07.210
We will take the description.

04:07.210 --> 04:12.920
Notice that the description has been placed into a in paragraph tax because it is a description after

04:12.920 --> 04:13.640
all.

04:14.140 --> 04:17.170
So balance shall be placed in paragraph tags as well.

04:17.170 --> 04:18.940
And we have placed strong here.

04:18.940 --> 04:20.770
Does anybody know what strong means.

04:20.810 --> 04:27.850
An HMO like this well it just means that these whatever is printed out here in between the tags will

04:27.850 --> 04:31.090
be bald they'll be bold letters.

04:31.570 --> 04:34.930
So A.S.C. dot balance that's how we're accessing that.

04:35.110 --> 04:42.200
And then down below we have button click and on click call method remove account.

04:42.220 --> 04:43.630
That was my phone in the background.

04:43.630 --> 04:53.430
If you didn't notice but you have a button and says On Click call this method remove account and pass

04:53.430 --> 04:59.190
the index past the index value of that account which is basically the ID as what which has the same

04:59.190 --> 05:01.630
value as the ID.

05:02.090 --> 05:07.280
And if we take a look at the component Yes you will see that we do indeed have a method remove account

05:07.310 --> 05:15.590
which takes in a number and then it says the stock accounts that it uses the splice so it removes the

05:15.590 --> 05:16.230
current.

05:16.340 --> 05:24.380
It removes the current instance of that account depending on the index number that is passed.

05:24.380 --> 05:31.600
Now if we go down further away from the for loop so this is the for loop between these div tags.

05:31.610 --> 05:35.030
This will be the portion of the for loop.

05:35.030 --> 05:40.910
Now if we go down a little bit further we will see that we're doing something rather strange.

05:40.910 --> 05:49.440
So this this and this these are two pretty much same codes for different input fields.

05:49.880 --> 05:58.190
Now you have a label and then it says four equals title and then title colon lay a clothes label tag

05:58.640 --> 06:02.010
and then import an ID is equal to title as well.

06:02.150 --> 06:06.690
So in part you know the you know specify the type and then you specify the name.

06:06.700 --> 06:16.790
And if you'd like to give some value as well and this part here is actually a reference to the DML element

06:16.880 --> 06:19.340
input but I will get to that for now.

06:19.340 --> 06:23.380
I wish to explain why are we using this label and this for.

06:23.570 --> 06:30.030
Let me just go ahead and open up the site and if I scroll down you will see it says Feitel here.

06:30.030 --> 06:37.520
Now this is in direct reference to titled Here you just find it there we go ups

06:40.750 --> 06:43.770
let's go ahead and Lycinus of them.

06:43.780 --> 06:45.910
But so that you can see what's going on.

06:46.360 --> 06:46.810
OK.

06:46.810 --> 06:50.110
So you have this thing.

06:50.200 --> 06:57.280
And this is directly responsible for this part here for the simple field and the letters and the word

06:57.310 --> 06:59.620
title and colon.

06:59.620 --> 07:07.720
Now the reason why we have this four and we're passing to this for the ID title which is which title

07:07.720 --> 07:09.260
is within the label.

07:09.580 --> 07:14.310
Well that's because when we click on Title see when we click the cursor switches to that input field.

07:14.320 --> 07:19.150
If I click on description the cursor switches to that input field if I click on balancing the cursor

07:19.150 --> 07:23.620
switch to that switches to that input field so we can also click on the fields in the fields themselves

07:23.620 --> 07:24.220
directly.

07:24.400 --> 07:29.480
But we can also click on the words next to the fields.

07:29.650 --> 07:30.860
Thanks to this label.

07:30.860 --> 07:39.880
So you just type in four equals and you give the ID to each DML element and then you pass that ID to

07:39.880 --> 07:40.780
the label.

07:40.780 --> 07:41.710
Simple as that.

07:41.710 --> 07:42.160
No big deal.

07:42.160 --> 07:44.560
And then you can write something here.

07:44.560 --> 07:53.560
In our case it's title colon necessary but it's a very nice convenient thing to have around.

07:54.070 --> 08:00.400
Expand this five go down to the bottom so the same logic applies here the same logic applies here.

08:00.490 --> 08:02.410
And here you have a different logic.

08:02.410 --> 08:10.400
This is basically click to create an account so this here is at.

08:10.420 --> 08:18.550
This entire idea of or should I say this method is entirely dependent on these references to DML elements

08:18.820 --> 08:26.560
because if you remember from before the create a count actually takes on a DML elements as its parameters.

08:26.560 --> 08:34.930
So we are creating a reference to DS h HDMI elements to the input to the input to the input fields and

08:35.380 --> 08:42.770
then we are passing those HMO element references to the Create count function method.

08:43.070 --> 08:45.060
Keep it keep confusing within a function.

08:45.060 --> 08:46.510
They are pretty much the same thing.

08:46.630 --> 08:50.070
Just different naming conventions.

08:50.160 --> 08:51.920
And if I just find a create.

08:51.930 --> 08:55.380
OK so it says private and then create a count method here.

08:55.650 --> 09:00.770
It's a title this year that says any just means any HD M-L element.

09:00.780 --> 09:06.870
We were too lazy to specify the section they specify which HVM element elements so we've typed in any

09:08.010 --> 09:11.640
title else their skill and Boutwell.

09:11.710 --> 09:18.700
So Teitelbaum description and balance and we've basically stated that it's NEHTA and NEHTA about it.

09:18.750 --> 09:25.630
And again any because we were too lazy to actually specify which ones do we actually want.

09:25.850 --> 09:31.290
Anyway those three elements are passed here and I have explained this function in the previous tutorials

09:31.290 --> 09:39.480
when we were working on app component TS but the general reasoning behind passing the HD elements as

09:39.480 --> 09:46.500
opposed to their values which you can see down below as titleholder value is because we want to reset

09:46.560 --> 09:48.720
the fields upon input.

09:48.720 --> 09:55.920
We want to reset the fields balance should be basically just 0 and these values these two strings shall

09:55.920 --> 09:57.570
be reset to nothing.

09:57.780 --> 09:59.360
They will be empty.

09:59.400 --> 10:05.020
So upon the creation of our account reset all input fields and make them empty again except balance.

10:05.250 --> 10:07.080
Set that to zero.

10:07.200 --> 10:11.630
For some strange reason that was the decision that was made.

10:11.800 --> 10:17.310
Anyway it says this start a count start push OK so we would like to create a new account.

10:17.360 --> 10:19.610
Does all of this has been explained.

10:19.720 --> 10:24.910
If you didn't understand it to the best of your abilities please go back Tauriel or post the question

10:24.910 --> 10:27.780
in the discussion section.

10:29.000 --> 10:38.000
Anyway we're pooling the values from the from the DML fields with within within the function parameters

10:38.090 --> 10:39.280
themselves.

10:39.480 --> 10:45.510
It's title Eldard value this Eldard value and bowel Eldard value.

10:46.950 --> 10:49.080
Anyway we go back here.

10:49.140 --> 10:50.600
So on click.

10:50.610 --> 10:54.180
Please create a new account with input provided.

10:54.210 --> 10:57.500
And of course this the name within this button shall be.

10:57.510 --> 10:58.140
Create

11:01.610 --> 11:02.280
OK.

11:02.540 --> 11:10.130
So those who are real here and then the follow up will just see how this actually works and how this

11:10.220 --> 11:13.570
reacts based upon our clicking and input.

11:13.580 --> 11:17.960
And what are some of the possible scenarios that are going to happen in just five minutes and then we're

11:17.960 --> 11:20.620
going to move on to styles.
