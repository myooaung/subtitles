WEBVTT
1
00:00:00.000 --> 00:00:00.596
Hi.

2
00:00:00.596 --> 00:00:02.980
This is Craig Golightly,

3
00:00:02.980 --> 00:00:08.713
and welcome to Deploying to Your Oracle Container Engine for Kubernetes Cluster.

4
00:00:08.713 --> 00:00:12.695
To deploy an image from your Oracle Cloud Infrastructure Registry to

5
00:00:12.695 --> 00:00:16.052
your Oracle Container Engine for Kubernetes cluster,

6
00:00:16.052 --> 00:00:19.821
you'll need a couple of things: a secret and a deployment.

7
00:00:19.821 --> 00:00:21.458
Once your app is running,

8
00:00:21.458 --> 00:00:25.995
you'll need a service to access it from outside of the cluster.

9
00:00:25.995 --> 00:00:27.581
We're going to walk through an initial deployment,

10
00:00:27.581 --> 00:00:34.753
as well as how to update your deployment with a new image when your app changes.

11
00:00:34.753 --> 00:00:40.244
To create a secret, use kubectl create secret docker-registry.

12
00:00:40.244 --> 00:00:42.908
You can specify any value for secret name.

13
00:00:42.908 --> 00:00:47.369
This will be used to reference the secret in the deployment.

14
00:00:47.369 --> 00:00:50.326
For example, I'll use ocirsecret.

15
00:00:50.326 --> 00:00:54.411
You're going to use some of the same values from the docker login,

16
00:00:54.411 --> 00:00:57.488
docker tag, and docker push commands we covered last module.

17
00:00:57.488 --> 00:01:04.589
The value for Docker server is region- code.ocir .io.

18
00:01:04.589 --> 00:01:08.863
This is the server where your Docker registry is located.

19
00:01:08.863 --> 00:01:15.329
Phx.ocir .io references the Docker registry in the US West Phoenix region.

20
00:01:15.329 --> 00:01:21.571
Docker-username is a combination of tenancy-namespace/oci-username.

21
00:01:21.571 --> 00:01:24.268
Here's what one might look like.

22
00:01:24.268 --> 00:01:29.599
Docker-password is the oci-auth-token that you downloaded from your account.

23
00:01:29.599 --> 00:01:31.477
Here is an example of that token.

24
00:01:31.477 --> 00:01:34.000
Finally, email address is required,

25
00:01:34.000 --> 00:01:38.331
but the actual email doesn't matter so just make sure

26
00:01:38.331 --> 00:01:39.904
that it's filled in with something.

27
00:01:39.904 --> 00:01:41.637
With this information,

28
00:01:41.637 --> 00:01:45.429
Kubernetes will know where the registry is and be able to

29
00:01:45.429 --> 00:01:48.630
authenticate with it to pull the image.

30
00:01:48.630 --> 00:01:49.943
Let's create the secret.

31
00:01:49.943 --> 00:01:54.346
I'll call it ocirsecret.

32
00:01:54.346 --> 00:01:58.500
The secret was created so let's move on to the next step.

33
00:01:58.500 --> 00:02:02.125
We're going to define a couple of items in a YAML configuration file.

34
00:02:02.125 --> 00:02:04.844
First, a deployment.

35
00:02:04.844 --> 00:02:07.727
This allows Kubernetes to pull the image from your repository and

36
00:02:07.727 --> 00:02:10.660
deploy it onto the nodes in your node pool.

37
00:02:10.660 --> 00:02:16.095
Second, a service, specifically a load balancer.

38
00:02:16.095 --> 00:02:18.730
This is what will expose the application externally and distribute

39
00:02:18.730 --> 00:02:22.191
requests to the different pods in your cluster.

40
00:02:22.191 --> 00:02:28.681
Let's take a look at a sample configuration file so you can see how it works.

41
00:02:28.681 --> 00:02:34.212
Let's take a look at the YAML file to understand the deployment and the service.

42
00:02:34.212 --> 00:02:36.197
Notice we're starting with three replicas.

43
00:02:36.197 --> 00:02:41.201
This will launch three pods with the Docker image running the app.

44
00:02:41.201 --> 00:02:45.969
Be sure to modify line 18 with the region code for your instance,

45
00:02:45.969 --> 00:02:50.259
your tenancy-namespace, repo-name, image-name,

46
00:02:50.259 --> 00:02:52.140
and tag.

47
00:02:52.140 --> 00:02:58.501
You'll also need to enter the name of the secret you created on line 23.

48
00:02:58.501 --> 00:03:04.000
You won't need to make any changes to the service unless you've renamed something in the deployment.

