1
00:00:02,526 --> 00:00:04,107
Now we're going to create the deployment,

2
00:00:04,107 --> 00:00:09,617
then test the app running on your Kubernetes cluster.

3
00:00:09,617 --> 00:00:12,409
The YAML file will be in the deploy directory.

4
00:00:12,409 --> 00:00:19,688
From here, run kubectl create -f demo.yml.

5
00:00:19,688 --> 00:00:22,105
The deployment and service were successfully created.

6
00:00:22,105 --> 00:00:27,919
Let's find out where it's running so we can try it out ourselves.

7
00:00:27,919 --> 00:00:29,509
The load balancer is created,

8
00:00:29,509 --> 00:00:34,649
but the external IP is still pending so we'll give it a minute.

9
00:00:34,649 --> 00:00:36,588
Here's the external IP where the application is

10
00:00:36,588 --> 00:00:38,718
running on the Kubernetes cluster.

11
00:00:38,718 --> 00:00:41,319
Let's pull up a browser and try it out.

12
00:00:41,319 --> 00:00:45,345
Here we see the expected output.

13
00:00:45,345 --> 00:00:48,685
Let's hit this service in a loop and observe the output to understand

14
00:00:48,685 --> 00:00:53,570
how traffic is being routed to the different pods.

15
00:00:53,570 --> 00:00:58,009
The load balancer service will route traffic to all three pods.

16
00:00:58,009 --> 00:01:01,619
The simple demo application only keeps a local copy of the counter.

17
00:01:01,619 --> 00:01:04,932
It's not coordinating across the pods.

18
00:01:04,932 --> 00:01:16,000
This is why we see multiple of each number and the number sequence out of order. We can also run kubectl get pods to see that all three pods are running.

