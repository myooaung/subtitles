WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.830
Okay,

00:00:00.830 --> 00:00:03.990
let's take a look at the various options we can provide as part of the agenda.

00:00:03.990 --> 00:00:07.740
The tank that goes under the I D tag,

00:00:07.740 --> 00:00:09.950
which will be the primary keen or database,

00:00:09.950 --> 00:00:13.440
so noticed or Java we have instance,

00:00:13.440 --> 00:00:15.080
created that persistent class,

00:00:15.080 --> 00:00:17.910
and we're trying to say that object in the database.

00:00:17.910 --> 00:00:24.800
But nowhere in here did we mention the identify for this field or for this object instead,

00:00:24.800 --> 00:00:26.870
we're asking Have been eight to generate.

00:00:26.870 --> 00:00:28.200
The are unfair for us,

00:00:28.200 --> 00:00:31.510
and the way we expressed it is with this tank,

00:00:31.510 --> 00:00:35.150
or we can do the same with an annotation.

00:00:35.150 --> 00:00:40.990
So now let's take a look at various options we can provide in here and for this purpose.

00:00:40.990 --> 00:00:45.530
I've actually created this document with the name generator dot dogs.

00:00:45.530 --> 00:00:49.150
You should be able to locate this in the list of files that you downloaded,

00:00:49.150 --> 00:00:56.330
the first of which is assigned when you said the class has assigned or when you have the

00:00:56.330 --> 00:00:58.580
same in the form of an annotation.

00:00:58.580 --> 00:01:05.220
Then we're telling hibernate that we will explicitly assigned the ardent fire on our own in

00:01:05.220 --> 00:01:07.020
our application in kids.

00:01:07.020 --> 00:01:08.340
If we don't do so,

00:01:08.340 --> 00:01:10.920
then depending on the database have been,

00:01:10.920 --> 00:01:13.000
it will aid the throw an exception,

00:01:13.000 --> 00:01:17.290
or it would generate an ad and fire on our behalf.

00:01:17.290 --> 00:01:22.350
So let's see how the behavior would be and gets off post area skill database.

00:01:22.350 --> 00:01:26.550
So in here I have this as assigned.

00:01:26.550 --> 00:01:31.970
And now let's try to run the program and prior to this have actually deleted the existent

00:01:31.970 --> 00:01:32.550
table.

00:01:32.550 --> 00:01:34.220
Now let me run this program.

00:01:34.220 --> 00:01:35.050
But before that,

00:01:35.050 --> 00:01:37.950
in order to better demonstrate,

00:01:37.950 --> 00:01:40.850
let me create a few more instances off this class,

00:01:40.850 --> 00:01:43.900
and then we'll try to save those objects.

00:01:43.900 --> 00:01:49.250
I'm going to call this use a 12 and three.

00:01:49.250 --> 00:01:52.240
Let's change the name to something else.

00:01:52.240 --> 00:01:53.100
He is DF.

00:01:53.100 --> 00:01:53.950
It doesn't matter.

00:01:53.950 --> 00:01:56.490
And maybe,

00:01:56.490 --> 00:01:57.550
um,

00:01:57.550 --> 00:01:59.750
you whatever it is,

00:01:59.750 --> 00:02:06.150
I'm going to copy this statement as well a couple of times.

00:02:06.150 --> 00:02:24.450
And now let's run the program and see how the output is going to look like so in kids off

00:02:24.450 --> 00:02:25.570
post area skill.

00:02:25.570 --> 00:02:29.080
How Bernie did not report any kind of an exception,

00:02:29.080 --> 00:02:32.460
although we did not provide any identify from our application,

00:02:32.460 --> 00:02:38.930
but instead it has involved a sequence with the name assigned and what is the sequence Now

00:02:38.930 --> 00:02:40.590
that is a concept off database,

00:02:40.590 --> 00:02:41.650
and we've talked about it.

00:02:41.650 --> 00:02:42.870
No database course,

00:02:42.870 --> 00:02:44.680
but if you don't know what is a sequence,

00:02:44.680 --> 00:02:46.750
then we have one example coming.

00:02:46.750 --> 00:02:50.510
So just hold on for a while to take a look at an example of the same.

00:02:50.510 --> 00:02:52.820
But depending on the database that you're using,

00:02:52.820 --> 00:02:55.350
the output may differ in your case,

00:02:55.350 --> 00:02:57.840
having admit through an exception,

00:02:57.840 --> 00:03:01.160
saying that you have to manually assign the identifier.

00:03:01.160 --> 00:03:04.050
So let's take a look at what's happening in the database,

00:03:04.050 --> 00:03:06.450
and sure enough,

00:03:06.450 --> 00:03:11.620
it has located some identify IRS based on the sequence.

00:03:11.620 --> 00:03:13.650
Let's go to the next one.

00:03:13.650 --> 00:03:18.780
What we have next is the generator increment.

00:03:18.780 --> 00:03:21.100
So when you use increment as an option,

00:03:21.100 --> 00:03:26.970
then we're asking happening to generate and identify where and every time it generates.

00:03:26.970 --> 00:03:29.640
We won't have been eight to increment the value by one,

00:03:29.640 --> 00:03:33.340
and the starting value would be from number one.

00:03:33.340 --> 00:03:38.210
But if you have some other process that is assigning and identify to that object,

00:03:38.210 --> 00:03:42.800
it will have the priority then having it will not incriminate the ardent fire.

00:03:42.800 --> 00:03:43.570
Instead,

00:03:43.570 --> 00:03:47.040
it will use the identity for that you're providing from your application.

00:03:47.040 --> 00:03:49.450
So let's take a look at an example of the same.

00:03:49.450 --> 00:03:53.950
So instead of assigned,

00:03:53.950 --> 00:04:02.170
I'm going to change this to increment led to the file and run the program again.

00:04:02.170 --> 00:04:08.400
So this time what I'm expecting is,

00:04:08.400 --> 00:04:12.130
since 10 is the maximum value from the point,

00:04:12.130 --> 00:04:14.010
Theoden Fair will get incremental.

00:04:14.010 --> 00:04:17.130
So let's do.

00:04:17.130 --> 00:04:18.140
And sure enough,

00:04:18.140 --> 00:04:19.850
we have 11 12 and 13.

00:04:19.850 --> 00:04:22.620
In case if there are no interest in the table,

00:04:22.620 --> 00:04:27.950
then the starting value would be one as simple as that.

00:04:27.950 --> 00:04:33.090
And here we have the sequence.

00:04:33.090 --> 00:04:40.000
So prior to experimenting with this example went to create a sequence in our database.

00:04:40.000 --> 00:04:41.420
In case supposedly,

00:04:41.420 --> 00:04:45.170
ask your I can create a sequence by using this instruction.

00:04:45.170 --> 00:04:49.640
And with this we're going to start off sequins with number one No.

00:04:49.640 --> 00:04:50.070
One.

00:04:50.070 --> 00:04:51.890
And from that point,

00:04:51.890 --> 00:04:54.390
we're going to increment the valley by one,

00:04:54.390 --> 00:04:55.890
which is the default value,

00:04:55.890 --> 00:04:58.050
unless explicitly specified over here.

00:04:58.050 --> 00:05:01.850
So when you try to execute this particular statement in database,

00:05:01.850 --> 00:05:06.250
let me copy the statement and go here.

00:05:06.250 --> 00:05:11.820
So it's 106 it showing 106 because prior to this,

00:05:11.820 --> 00:05:15.120
I've already executed the statement five times.

00:05:15.120 --> 00:05:18.200
So every time that you try to execute the statement.

00:05:18.200 --> 00:05:20.570
It'll increment the value by one.

00:05:20.570 --> 00:05:26.080
It's really hard to explain what exactly sequence in this video it is more often database

00:05:26.080 --> 00:05:26.700
concept,

00:05:26.700 --> 00:05:28.850
but I hope you got a sense of what it is.

00:05:28.850 --> 00:05:30.570
So let's move on with,

00:05:30.570 --> 00:05:30.950
uh,

00:05:30.950 --> 00:05:32.850
this example in here.

00:05:32.850 --> 00:05:42.440
So I'm going to use this sequence name in our tank just as we did here are with annotation

00:05:42.440 --> 00:05:42.440
.

00:05:42.440 --> 00:05:45.250
We're going to be introducing couple of annotations here.

00:05:45.250 --> 00:05:48.400
One is degenerated value here recon.

00:05:48.400 --> 00:05:50.040
Do any name off a choice,

00:05:50.040 --> 00:05:52.950
but the name has to be the exact same name.

00:05:52.950 --> 00:05:55.250
Whatever ugo in here.

00:05:55.250 --> 00:05:57.370
So basically,

00:05:57.370 --> 00:06:02.500
this is a name that we're going to use to identify a particular sequence in the database,

00:06:02.500 --> 00:06:05.370
and we also need to provide their location size,

00:06:05.370 --> 00:06:06.870
which in our case,

00:06:06.870 --> 00:06:08.380
is a default value,

00:06:08.380 --> 00:06:12.940
which is one that means every time we try to generate in ad and fire,

00:06:12.940 --> 00:06:16.860
this sequence will actually increment value by one.

00:06:16.860 --> 00:06:19.830
And here's the sample insert query.

00:06:19.830 --> 00:06:25.350
So instead of explicitly providing the ardent for value like 10 20 or whatever,

00:06:25.350 --> 00:06:32.310
I'm going this function next well and then Cirio the name of the CDO and this would

00:06:32.310 --> 00:06:37.950
generate according to the sequence So I'm going to copy these two lines off code,

00:06:37.950 --> 00:06:42.350
go back and best it in here.

00:06:42.350 --> 00:06:46.280
It's as simple as that.

00:06:46.280 --> 00:06:51.390
Now let's run our example and see what's going to happen.

00:06:51.390 --> 00:06:53.950
Okay?

00:06:53.950 --> 00:06:55.450
Seem to have some members.

00:06:55.450 --> 00:06:57.580
We have to import this class.

00:06:57.580 --> 00:07:00.040
So all the control shift.

00:07:00.040 --> 00:07:00.560
Oh,

00:07:00.560 --> 00:07:06.860
and make sure whatever you're importing are from Joe Expert assistance.

00:07:06.860 --> 00:07:11.560
There are certain class whiles the provide additional functionalities,

00:07:11.560 --> 00:07:15.680
but they belong toe having it package as a just not to use them.

00:07:15.680 --> 00:07:17.730
Because tomorrow,

00:07:17.730 --> 00:07:18.880
at that point of time,

00:07:18.880 --> 00:07:21.060
if you'd like to switch to a different or,

00:07:21.060 --> 00:07:21.230
um,

00:07:21.230 --> 00:07:21.660
tool,

00:07:21.660 --> 00:07:25.350
then it would be really hard to cope with the changes.

00:07:25.350 --> 00:07:32.730
So always try to use the classes in Job X persistence instead of having it specific classes

00:07:32.730 --> 00:07:32.730
,

00:07:32.730 --> 00:07:35.290
so that will be easier to switch.

00:07:35.290 --> 00:07:46.050
Now let's run artist program and see things are going to work and let's see what's

00:07:46.050 --> 00:07:47.750
happening in our table.

00:07:47.750 --> 00:07:49.240
And sure enough,

00:07:49.240 --> 00:07:51.480
it has generated the sequences.

00:07:51.480 --> 00:07:56.860
Now these are the most commonly used generator classes,

00:07:56.860 --> 00:07:58.750
but we have few other as well,

00:07:58.750 --> 00:08:02.300
although these are not very commonly used.

00:08:02.300 --> 00:08:04.150
I'm just letting you know anyway,

00:08:04.150 --> 00:08:06.650
so we have one with the value.

00:08:06.650 --> 00:08:06.910
Hell,

00:08:06.910 --> 00:08:07.220
Oh,

00:08:07.220 --> 00:08:14.190
this is going to generate the ardent fire by using so called a hilo algorithm.

00:08:14.190 --> 00:08:17.050
And the way it works is with this formula.

00:08:17.050 --> 00:08:21.300
When you're trying to express the same in your mapping XML,

00:08:21.300 --> 00:08:23.950
you have to provide all these three para meters.

00:08:23.950 --> 00:08:26.520
One is the table and the field.

00:08:26.520 --> 00:08:33.300
This will be the identify airfield and then he provide so called a max low and this is the

00:08:33.300 --> 00:08:36.910
best value on which this formula would be applied.

00:08:36.910 --> 00:08:38.520
So it's like,

00:08:38.520 --> 00:08:45.150
whatever the value that you provide 10 multiplied by one plus one and that will result in

00:08:45.150 --> 00:08:47.290
11 based on the president's.

00:08:47.290 --> 00:08:50.220
So this will be calculated first on the result off,

00:08:50.220 --> 00:08:56.450
which would be added by one and similarly the value of one will get incriminated by two.

00:08:56.450 --> 00:08:59.070
We get 22 then again,

00:08:59.070 --> 00:09:01.970
3 33 so on and so forth.

00:09:01.970 --> 00:09:06.550
I couldn't think off any real world use case where this would be useful.

00:09:06.550 --> 00:09:08.730
There might be some corner cases.

00:09:08.730 --> 00:09:09.730
I'm not sure,

00:09:09.730 --> 00:09:14.230
but we also have another algorithm which is this again.

00:09:14.230 --> 00:09:20.200
This is not very significant and we have gender to class identity.

00:09:20.200 --> 00:09:24.640
This is dependent on the database for my SQL and SQL Light.

00:09:24.640 --> 00:09:30.060
This is a cool into our to implementing the value and proposed Greece cure.

00:09:30.060 --> 00:09:32.550
It is serial.

00:09:32.550 --> 00:09:36.550
If you provide the type or the class as need.

00:09:36.550 --> 00:09:36.850
Ooh,

00:09:36.850 --> 00:09:40.630
Then that means habitable check of the database supports,

00:09:40.630 --> 00:09:41.360
which are the baby?

00:09:41.360 --> 00:09:41.470
Um,

00:09:41.470 --> 00:09:42.650
a softer you're using.

00:09:42.650 --> 00:09:46.050
Having it will check if it supports identity,

00:09:46.050 --> 00:09:47.670
which is this.

00:09:47.670 --> 00:09:48.810
If it's upwards,

00:09:48.810 --> 00:09:49.800
it will use that.

00:09:49.800 --> 00:09:52.370
Or if your database doesn't support identity,

00:09:52.370 --> 00:09:57.790
then it will check for sequence again if sequence works everything while I'm good.

00:09:57.790 --> 00:09:58.850
If it doesn't,

00:09:58.850 --> 00:10:04.450
then it will move on with the he login Raider or it will use the Hilo class.

00:10:04.450 --> 00:10:12.130
This healer class is not dependent on the database because this algorithm works on the

00:10:12.130 --> 00:10:16.570
cabinet end and the result will be assigned as an identify rare.

00:10:16.570 --> 00:10:22.460
So Hillary will work in any database that you use.

00:10:22.460 --> 00:10:26.550
And finally we have a couple off algorithms just like he will guard them.

00:10:26.550 --> 00:10:27.660
But of course,

00:10:27.660 --> 00:10:28.870
they work in different way,

00:10:28.870 --> 00:10:32.640
and these are primarily meant for string type.

00:10:32.640 --> 00:10:33.810
Identify IRS.

00:10:33.810 --> 00:10:41.010
So so for whatever we had discussed is for numerical type.

00:10:41.010 --> 00:10:42.080
Identify IRS.

00:10:42.080 --> 00:10:43.830
But if you have a string type.

00:10:43.830 --> 00:10:44.650
I didn't fire.

00:10:44.650 --> 00:10:49.200
And you want to use some kind off a generator and you can use this to algorithms.

00:10:49.200 --> 00:10:51.810
All right,

00:10:51.810 --> 00:10:54.000
I guess that's pretty much it.

00:10:54.000 --> 00:10:56.470
See you soon.

00:10:56.470 --> 00:10:57.420
Hold it.

00:10:57.420 --> 00:10:59.130
I think that's pretty much it.

00:10:59.130 --> 00:10:59.950
See you soon.

00:10:59.950 --> 00:11:01.450
See you soon.

