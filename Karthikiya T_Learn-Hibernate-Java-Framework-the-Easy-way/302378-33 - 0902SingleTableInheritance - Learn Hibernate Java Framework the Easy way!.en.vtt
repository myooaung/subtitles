WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.880
In our previous example,

00:00:01.880 --> 00:00:03.750
we were able to create an instance,

00:00:03.750 --> 00:00:06.730
offer the boss class or the employee class,

00:00:06.730 --> 00:00:09.240
and then when we tried to save these objects,

00:00:09.240 --> 00:00:12.290
they got saved in the respective tables.

00:00:12.290 --> 00:00:20.910
And both these tables had couple of properties Are columns that belonged to a person class

00:00:20.910 --> 00:00:20.910
?

00:00:20.910 --> 00:00:22.250
Not this time.

00:00:22.250 --> 00:00:25.550
Instead of creating two different tables,

00:00:25.550 --> 00:00:29.120
I just want to create one single table and is off person.

00:00:29.120 --> 00:00:34.670
And we must be able to create an instance off any off these classes and should be able to

00:00:34.670 --> 00:00:37.680
persist the details into the person table.

00:00:37.680 --> 00:00:43.050
So let's take a look at how we can accomplish the same in our person class.

00:00:43.050 --> 00:00:46.190
Since I mentioned that we want to create a table off person,

00:00:46.190 --> 00:00:52.550
I have now added this particular annotation entity and have been it is actually going to

00:00:52.550 --> 00:00:55.150
create a table for this person class,

00:00:55.150 --> 00:00:57.190
and in addition to that,

00:00:57.190 --> 00:01:03.120
I've also introduced this new annotation inheritance and I have said this strategy

00:01:03.120 --> 00:01:04.090
inheritance,

00:01:04.090 --> 00:01:06.100
type two single table.

00:01:06.100 --> 00:01:10.450
This is what will help us accomplish what we wanted.

00:01:10.450 --> 00:01:12.290
So with this annotation,

00:01:12.290 --> 00:01:19.360
but instructing have been able to create only one table for all this high radical structure

00:01:19.360 --> 00:01:19.360
.

00:01:19.360 --> 00:01:24.150
So happen it will not create a table for employees or for the boss,

00:01:24.150 --> 00:01:30.950
even though we had the sanitation set in here is just going to create one table and that is

00:01:30.950 --> 00:01:33.360
off the parent class person.

00:01:33.360 --> 00:01:41.520
So we have now the identify our column moved to person class to represent each record with

00:01:41.520 --> 00:01:42.890
a unique identifier.

00:01:42.890 --> 00:01:51.070
Name and age will remain common for both employees and boss test simple as that in our

00:01:51.070 --> 00:01:52.080
employees class,

00:01:52.080 --> 00:01:54.020
we don't have the identifier now.

00:01:54.020 --> 00:01:56.390
Same is the case with boss class,

00:01:56.390 --> 00:02:02.110
but I have now added a new field in both these classes in case off employees.

00:02:02.110 --> 00:02:04.780
I'm just mentioning to which boss,

00:02:04.780 --> 00:02:07.170
does this employee come under?

00:02:07.170 --> 00:02:08.880
And in Boss Table,

00:02:08.880 --> 00:02:16.590
our boss entity class I have now included this property which is employed count that just

00:02:16.590 --> 00:02:21.440
simply tells how Maney employees that work under a particular boss,

00:02:21.440 --> 00:02:22.640
Tassan Plaza,

00:02:22.640 --> 00:02:24.650
and in our main class,

00:02:24.650 --> 00:02:32.540
I'm able to create three instances it belonged to three different classes in here and that

00:02:32.540 --> 00:02:36.410
I'm just simply trying to save all those objects.

00:02:36.410 --> 00:02:41.970
So here are the three in stances and then I'm trying to save all those three.

00:02:41.970 --> 00:02:45.500
Let's run the program and see how things will go.

00:02:45.500 --> 00:02:58.990
And if you go database,

00:02:58.990 --> 00:03:04.300
it has now created just one table.

00:03:04.300 --> 00:03:07.970
And if you do sell it star from person.

00:03:07.970 --> 00:03:17.790
It has now combined all the fields in the farm off columns and displayed everything.

00:03:17.790 --> 00:03:23.480
So here is the employer record the boss record on the person to card.

00:03:23.480 --> 00:03:27.380
Do take a note that haven't it has actually taken care off,

00:03:27.380 --> 00:03:30.950
adding a new column in here with the name D type.

00:03:30.950 --> 00:03:37.650
This is called a discriminator column that just tell to whom does this entry belong to?

00:03:37.650 --> 00:03:41.450
So the first tender in here corresponds to the employees,

00:03:41.450 --> 00:03:46.430
and 2nd 1 responds to boss object and similarly,

00:03:46.430 --> 00:03:47.550
the last one.

00:03:47.550 --> 00:03:50.580
The person object in kids.

00:03:50.580 --> 00:03:55.450
If you would like to change the names in here and you even more meaningful name,

00:03:55.450 --> 00:04:02.450
then you can use the annotation discriminator to specify the same.

00:04:02.450 --> 00:04:05.530
Just as you see in here in the parent class,

00:04:05.530 --> 00:04:07.810
he would say he would add this column.

00:04:07.810 --> 00:04:11.680
Discriminator column You would give it some name.

00:04:11.680 --> 00:04:16.850
What are the name that you wish to Gyu and then the type off the column?

00:04:16.850 --> 00:04:18.270
Once you do,

00:04:18.270 --> 00:04:25.640
so you can know add the sanitation discriminative value in all these classes so that you

00:04:25.640 --> 00:04:27.070
will see the name accordingly.

00:04:27.070 --> 00:04:33.650
So whatever the name that you set in here would get reflected in this column.

00:04:33.650 --> 00:04:36.600
All right.

00:04:36.600 --> 00:04:37.650
See you soon.

