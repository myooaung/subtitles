WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.310
in this video,

00:00:01.310 --> 00:00:05.910
we're going to take a look at bi directional mapping in simple terms.

00:00:05.910 --> 00:00:07.220
Bi directional mapping.

00:00:07.220 --> 00:00:10.350
Is this combination off one too many and many to one.

00:00:10.350 --> 00:00:12.050
When I say combination off this,

00:00:12.050 --> 00:00:12.520
too,

00:00:12.520 --> 00:00:18.380
I'm also going to combine both the examples that were taken Look at So I picked the boss

00:00:18.380 --> 00:00:20.850
class from our one too many example,

00:00:20.850 --> 00:00:26.590
and I picked the employee class from our many to one example.

00:00:26.590 --> 00:00:32.550
So we have many to one annotation in here and one too many annotation in here.

00:00:32.550 --> 00:00:36.950
So now let's take a look at what's going on in here.

00:00:36.950 --> 00:00:42.350
You can either create the boss object and set list off employees.

00:00:42.350 --> 00:00:44.330
Hourigan Dude the other way.

00:00:44.330 --> 00:00:49.440
You can create the employer object and said the boss object that corresponds to that

00:00:49.440 --> 00:00:54.950
employee so you can follow either approaches to populate the database,

00:00:54.950 --> 00:00:57.560
but in this approach,

00:00:57.560 --> 00:01:02.790
have created a couple of employees and offset boss for each one off them.

00:01:02.790 --> 00:01:04.890
Pretty straightforward.

00:01:04.890 --> 00:01:06.510
But let's take a look at the deal.

00:01:06.510 --> 00:01:07.070
It matter.

00:01:07.070 --> 00:01:11.670
That's where we want to address the problem in this case,

00:01:11.670 --> 00:01:16.750
have used one to any approach to delete the boss object,

00:01:16.750 --> 00:01:20.120
and since I had said the casket in type two.

00:01:20.120 --> 00:01:25.130
All this is also going to delete its child objects,

00:01:25.130 --> 00:01:29.050
which will be a list of employees that are dependent on this boss object.

00:01:29.050 --> 00:01:30.520
Pretty simple.

00:01:30.520 --> 00:01:32.100
But if I run this program,

00:01:32.100 --> 00:01:35.250
we're going to see one strange exception.

00:01:35.250 --> 00:01:38.450
I'm here on the program and see how things will work.

00:01:38.450 --> 00:01:40.290
And before I do,

00:01:40.290 --> 00:01:45.500
I did delete the existing tables from the database just to keep things clean.

00:01:45.500 --> 00:01:56.420
So we have pretty big exception.

00:01:56.420 --> 00:01:57.920
Let's see what it is.

00:01:57.920 --> 00:02:00.550
You go back,

00:02:00.550 --> 00:02:06.050
stack overflow error.

00:02:06.050 --> 00:02:06.880
Now,

00:02:06.880 --> 00:02:08.340
where do we have the problem?

00:02:08.340 --> 00:02:10.660
Can you make a guess?

00:02:10.660 --> 00:02:11.680
Well,

00:02:11.680 --> 00:02:12.590
let me give you a clue.

00:02:12.590 --> 00:02:15.190
The problem is,

00:02:15.190 --> 00:02:22.250
with the two string method in here and the testing method in here,

00:02:22.250 --> 00:02:26.350
how can let me give you another clue?

00:02:26.350 --> 00:02:31.450
That exception occurs when you try to display the details.

00:02:31.450 --> 00:02:34.280
So when we call this method,

00:02:34.280 --> 00:02:35.790
we get that exception.

00:02:35.790 --> 00:02:39.890
And it has something to do with this to string methods in both the classes.

00:02:39.890 --> 00:02:43.120
Okay,

00:02:43.120 --> 00:02:44.950
let me explain you what's going on.

00:02:44.950 --> 00:02:51.540
So here we're trying to display the boss details and inside the testing method off the boss

00:02:51.540 --> 00:02:53.900
class we're trying to display the employee object.

00:02:53.900 --> 00:02:55.140
And again,

00:02:55.140 --> 00:03:00.060
this is going to call the toasting matter off this and again become across with this boss

00:03:00.060 --> 00:03:00.940
object again.

00:03:00.940 --> 00:03:04.800
Java will try to display the employ object,

00:03:04.800 --> 00:03:06.550
and it goes on and on forever.

00:03:06.550 --> 00:03:08.350
How can you stop that?

00:03:08.350 --> 00:03:09.700
In my case,

00:03:09.700 --> 00:03:13.850
I just got it off displaying this object from here.

00:03:13.850 --> 00:03:16.960
And things will go well.

00:03:16.960 --> 00:03:23.980
And if you go to the database,

00:03:23.980 --> 00:03:31.950
you don't see anything at all because we've also deleted off the stuff.

00:03:31.950 --> 00:03:34.960
All right,

00:03:34.960 --> 00:03:36.000
that's about it.

00:03:36.000 --> 00:03:37.900
See you soon.

