WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.070
in this video,

00:00:01.070 --> 00:00:03.780
we're going to talk about our fund removal.

00:00:03.780 --> 00:00:09.150
So what we have here is the same example that we have taken a look at when we talked about

00:00:09.150 --> 00:00:10.690
one too many relation.

00:00:10.690 --> 00:00:14.600
And one boss will have multiple employees that work under him.

00:00:14.600 --> 00:00:19.710
And it's not possible that there can be an employee who does not have any boss.

00:00:19.710 --> 00:00:21.190
So in this example,

00:00:21.190 --> 00:00:23.260
when I run this program,

00:00:23.260 --> 00:00:41.310
what we have here is list of employees and each would have had boss associate ID.

00:00:41.310 --> 00:00:43.960
But there's a little flowing our code.

00:00:43.960 --> 00:00:45.880
Let me demonstrate what I mean.

00:00:45.880 --> 00:00:53.750
So what I'm trying to do here is have actually fetched all the list of employees in here,

00:00:53.750 --> 00:00:58.850
and then I'm trying to remove an employee from the list are from the set,

00:00:58.850 --> 00:01:04.460
and the employed that I'm removing is the employee with identify are one.

00:01:04.460 --> 00:01:06.020
And then later on,

00:01:06.020 --> 00:01:07.770
I'm committing the transaction.

00:01:07.770 --> 00:01:10.110
So according to you,

00:01:10.110 --> 00:01:12.690
what is going to be end result?

00:01:12.690 --> 00:01:16.050
Are we going to see this employee getting deleted from the database?

00:01:16.050 --> 00:01:18.380
The answer is no.

00:01:18.380 --> 00:01:24.700
When you have set the cascading type two all which also includes delete operation,

00:01:24.700 --> 00:01:32.130
then only when you perform the delete operation with the cascading happen.

00:01:32.130 --> 00:01:37.230
So here we're not really performing to delete operation in the database.

00:01:37.230 --> 00:01:43.190
We're just trying to remove the relationship between a boss and an employee.

00:01:43.190 --> 00:01:46.650
Now let's try to run this program and see how things will go.

00:01:46.650 --> 00:01:55.780
And if you go to the database,

00:01:55.780 --> 00:02:02.250
he would notice that we have an employee who does not have any boss at all.

00:02:02.250 --> 00:02:05.790
This is unacceptable in our scenario.

00:02:05.790 --> 00:02:12.160
Each and every employee should have a boss so clearly way to fix this somehow.

00:02:12.160 --> 00:02:17.250
And the solution to this problem is you said this para Meter,

00:02:17.250 --> 00:02:18.480
he said.

00:02:18.480 --> 00:02:20.660
This option orphaned removal.

00:02:20.660 --> 00:02:21.600
True.

00:02:21.600 --> 00:02:24.200
So what this means is,

00:02:24.200 --> 00:02:28.650
when you're trying to delete an object from the list off employees or list off employ

00:02:28.650 --> 00:02:29.360
objects,

00:02:29.360 --> 00:02:34.150
then that removed object is actually in an orphan state.

00:02:34.150 --> 00:02:36.890
When you have this option set to true,

00:02:36.890 --> 00:02:43.930
it will not only remove the relation between the boss object and the employer object,

00:02:43.930 --> 00:02:48.840
but also is going to remove that corresponding employees from the database.

00:02:48.840 --> 00:02:52.750
So no illustrator on the program and see how things will go.

00:02:52.750 --> 00:02:59.990
And if you go to the database,

00:02:59.990 --> 00:03:00.920
sure enough,

00:03:00.920 --> 00:03:03.750
we have that employees getting deleted,

00:03:03.750 --> 00:03:07.950
so that's about the orphaned removal option.

00:03:07.950 --> 00:03:09.420
Hope it makes sense.

00:03:09.420 --> 00:03:10.300
See you soon

