WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.150
in the Sweet,

00:00:01.150 --> 00:00:05.080
and we're going to take a look at how we can map a competent in have been eight.

00:00:05.080 --> 00:00:11.320
Imagine a situation where you have a list off employees and each employee would have a

00:00:11.320 --> 00:00:12.490
particular address.

00:00:12.490 --> 00:00:15.170
If I want to design the database for the same,

00:00:15.170 --> 00:00:17.250
I would have an employee table,

00:00:17.250 --> 00:00:22.560
and I would also have a table to store off the list off addresses and these two tables will

00:00:22.560 --> 00:00:24.100
have 1 to 1 mapping,

00:00:24.100 --> 00:00:27.410
so I'll have a foreign key in the address stable,

00:00:27.410 --> 00:00:31.040
and there would provide the identify IRS off each employee.

00:00:31.040 --> 00:00:37.610
Now sometimes adding a new table altogether might be overkill instead of just want to store

00:00:37.610 --> 00:00:40.940
this object as part of the employee table itself.

00:00:40.940 --> 00:00:42.480
And for that purpose,

00:00:42.480 --> 00:00:45.150
we have to make this a competent,

00:00:45.150 --> 00:00:46.600
not an entity.

00:00:46.600 --> 00:00:49.310
So if you go to our example in here,

00:00:49.310 --> 00:00:56.470
I have created this class address and that basically has all these Garrison Serra's with

00:00:56.470 --> 00:00:58.250
some headdress details.

00:00:58.250 --> 00:00:58.830
No,

00:00:58.830 --> 00:01:03.760
taken off the sanitation M Better Bull by specifying the sanitation happen.

00:01:03.760 --> 00:01:06.700
It is not going to treat this class as an entity,

00:01:06.700 --> 00:01:12.210
so happen it will not create a table for this class but rather it's going to treat this as

00:01:12.210 --> 00:01:13.070
a compliment.

00:01:13.070 --> 00:01:16.400
What I mean by that is if you go to the boss class,

00:01:16.400 --> 00:01:21.750
which is an entity and will have a table associated with it in the database,

00:01:21.750 --> 00:01:26.050
we have that address type specified in here,

00:01:26.050 --> 00:01:29.070
and I've also mentioned the sanitation embedded.

00:01:29.070 --> 00:01:30.440
So by doing so,

00:01:30.440 --> 00:01:33.180
whenever I try to create the boss object,

00:01:33.180 --> 00:01:34.970
I can also pass the address,

00:01:34.970 --> 00:01:36.420
object to it,

00:01:36.420 --> 00:01:40.950
and each and every field in here would have a column associated with it.

00:01:40.950 --> 00:01:47.070
Let me just quickly run this program and then you'll understand better and in our code are

00:01:47.070 --> 00:01:50.050
simply created an object off the address class.

00:01:50.050 --> 00:01:55.380
And then I send that object as a perimeter to the boss Constructor.

00:01:55.380 --> 00:01:56.650
Pretty straightforward.

00:01:56.650 --> 00:01:57.700
Well,

00:01:57.700 --> 00:02:00.410
stranger on the program and see the result.

00:02:00.410 --> 00:02:07.850
And here we are trying to display the boss object.

00:02:07.850 --> 00:02:09.930
And if you go to the database,

00:02:09.930 --> 00:02:12.950
it will not have a couple off tables.

00:02:12.950 --> 00:02:20.570
We just have one single table in here because now that address object is stored as part off

00:02:20.570 --> 00:02:23.630
the boss table just as you see in here,

00:02:23.630 --> 00:02:28.770
and each and every field in the address class corresponds to each and every column in the

00:02:28.770 --> 00:02:29.790
boss table.

00:02:29.790 --> 00:02:31.060
Hold it.

00:02:31.060 --> 00:02:32.260
So that's about it.

00:02:32.260 --> 00:02:33.080
See you soon.

