WEBVTT
1
1

00:00:01.306  -->  00:00:04.303
<v Instructor>Welcome to the last video of the section.</v>
2

2

00:00:04.303  -->  00:00:08.157
It's now time for some final considerations.
3

3

00:00:08.157  -->  00:00:11.113
The first thing that we can do is to actually run
4

4

00:00:11.113  -->  00:00:14.910
or build a script that we have here.
5

5

00:00:14.910  -->  00:00:17.708
So remember that we have this built CSS script
6

6

00:00:17.708  -->  00:00:21.132
which will compile prefix and compress our code.
7

7

00:00:21.132  -->  00:00:22.882
So let's do that.
8

8

00:00:23.833  -->  00:00:26.954
So I'm opening a new tab here
9

9

00:00:26.954  -->  00:00:28.954
and running NPM
10

10

00:00:31.602  -->  00:00:33.935
run build CSS,
11

11

00:00:37.495  -->  00:00:38.947
and so here we go.
12

12

00:00:38.947  -->  00:00:42.793
So it's now done doing all it's work.
13

13

00:00:42.793  -->  00:00:44.109
So let's check it out.
14

14

00:00:44.109  -->  00:00:47.181
So this one is the prefix style
15

15

00:00:47.181  -->  00:00:49.165
and so as we scroll down here
16

16

00:00:49.165  -->  00:00:52.922
you will immediately notice that there aren't any prefixes
17

17

00:00:52.922  -->  00:00:54.998
on the CSS Grid properties
18

18

00:00:54.998  -->  00:00:56.369
and that's because the only prefixes
19

19

00:00:56.369  -->  00:00:58.689
that ever existed for CSS Grid
20

20

00:00:58.689  -->  00:01:02.006
are from a very old version of the specification
21

21

00:01:02.006  -->  00:01:04.675
in one of the very old Internet Explorer's.
22

22

00:01:04.675  -->  00:01:07.419
So that's not really useful at all these days
23

23

00:01:07.419  -->  00:01:09.626
and that's why the auto prefixer
24

24

00:01:09.626  -->  00:01:13.214
turns off prefixes for Grid by default, okay.
25

25

00:01:13.214  -->  00:01:14.836
So they're not really necessary,
26

26

00:01:14.836  -->  00:01:17.875
they're not adding any meaning here, okay.
27

27

00:01:17.875  -->  00:01:20.737
So what we have here is just a normal
28

28

00:01:20.737  -->  00:01:23.061
compiled CSS where somethings
29

29

00:01:23.061  -->  00:01:27.228
have the prefixes, but not really the CSS Grid properties.
30

30

00:01:28.085  -->  00:01:31.633
Okay, and then of course our final CSS
31

31

00:01:31.633  -->  00:01:35.383
is this beautiful thing here, okay.
32

32

00:01:36.246  -->  00:01:39.180
Next another thing that I wanted to mention in this video
33

33

00:01:39.180  -->  00:01:41.901
is that there's actually a shorthand
34

34

00:01:41.901  -->  00:01:44.924
for defining these template rows and columns in a grid.
35

35

00:01:44.924  -->  00:01:48.924
So if you someday encounter something like this,
36

36

00:01:51.655  -->  00:01:54.322
so grid template
37

37

00:01:55.345  -->  00:01:58.504
then that means that you are seeing the shorthand property.
38

38

00:01:58.504  -->  00:02:00.888
Okay, and it works like this.
39

39

00:02:00.888  -->  00:02:04.630
So we have the rows then the slash
40

40

00:02:04.630  -->  00:02:08.356
and then the columns, I believe at least,
41

41

00:02:08.356  -->  00:02:10.781
because I'm never really using the shorthand,
42

42

00:02:10.781  -->  00:02:12.691
because I find it quite confusing to have
43

43

00:02:12.691  -->  00:02:15.946
all of this code here in the same line of CSS.
44

44

00:02:15.946  -->  00:02:19.399
Okay, but anyway let's deactivate
45

45

00:02:19.399  -->  00:02:23.154
these two rows and take a look
46

46

00:02:23.154  -->  00:02:26.083
and whoa what's going on here?
47

47

00:02:26.083  -->  00:02:29.431
So I guess it is actually the other way around.
48

48

00:02:29.431  -->  00:02:32.681
So first the columns and then the rows.
49

49

00:02:36.405  -->  00:02:39.180
Let's take a look at it now,
50

50

00:02:39.180  -->  00:02:41.311
and it still looks the same,
51

51

00:02:41.311  -->  00:02:44.849
so I'm not really sure what's going on here.
52

52

00:02:44.849  -->  00:02:46.688
Let's move it back,
53

53

00:02:46.688  -->  00:02:49.675
so rows again first and columns
54

54

00:02:49.675  -->  00:02:52.675
and let's take a look at that again.
55

55

00:02:54.233  -->  00:02:57.650
Let's inspect all of this container
56

56

00:02:58.920  -->  00:03:00.578
and it says here for some reason
57

57

00:03:00.578  -->  00:03:03.045
that it's an invalid property value.
58

58

00:03:03.045  -->  00:03:05.599
So I'm not really sure why that is.
59

59

00:03:05.599  -->  00:03:08.266
So let me try it somewhere else.
60

60

00:03:09.851  -->  00:03:13.590
Okay, so somewhere less
61

61

00:03:13.590  -->  00:03:15.592
where it has a less complex grid,
62

62

00:03:15.592  -->  00:03:17.185
so for example here.
63

63

00:03:17.185  -->  00:03:19.412
Well this one doesn't really have rows
64

64

00:03:19.412  -->  00:03:22.662
so let's try it here in the gallery.
65

65

00:03:26.196  -->  00:03:27.029
Okay.
66

66

00:03:30.173  -->  00:03:33.423
So grid template, and so first the rows
67

67

00:03:37.807  -->  00:03:40.140
and then the columns.
68

68

00:03:45.220  -->  00:03:47.232
Give it a save
69

69

00:03:47.232  -->  00:03:48.631
and let's check it out
70

70

00:03:48.631  -->  00:03:51.964
and yeah so this time it actually works,
71

71

00:03:55.512  -->  00:03:57.781
but in fact the property is not really here
72

72

00:03:57.781  -->  00:03:59.448
let's reload this
73

73

00:04:00.386  -->  00:04:02.042
and what's going on here?
74

74

00:04:02.042  -->  00:04:04.709
Ah, okay I forgot the semicolon.
75

75

00:04:08.727  -->  00:04:11.523
Ah, yeah so finally now it's working.
76

76

00:04:11.523  -->  00:04:13.297
So here is the grid template.
77

77

00:04:13.297  -->  00:04:15.279
Fist the rows then the columns
78

78

00:04:15.279  -->  00:04:18.108
and then here we go, so now it's working
79

79

00:04:18.108  -->  00:04:19.459
and so yeah.
80

80

00:04:19.459  -->  00:04:21.909
So if you some day stumble across
81

81

00:04:21.909  -->  00:04:23.973
this syntax here then just know
82

82

00:04:23.973  -->  00:04:25.719
that this is the exact same way
83

83

00:04:25.719  -->  00:04:28.357
as having the rows with this part here
84

84

00:04:28.357  -->  00:04:31.115
and the columns with this part.
85

85

00:04:31.115  -->  00:04:34.856
Okay, so that's just something else
86

86

00:04:34.856  -->  00:04:36.908
that I wanted to mention here
87

87

00:04:36.908  -->  00:04:38.624
and something else that I wanted to mention
88

88

00:04:38.624  -->  00:04:40.019
is that there are some things
89

89

00:04:40.019  -->  00:04:42.026
that I think are missing in grids.
90

90

00:04:42.026  -->  00:04:44.807
I believe we already talked about most of them
91

91

00:04:44.807  -->  00:04:47.845
and the first thing is CSS subgrids.
92

92

00:04:47.845  -->  00:04:50.654
So subgrids, if something were to
93

93

00:04:50.654  -->  00:04:54.084
grid inside a grid can snap the tracks
94

94

00:04:54.084  -->  00:04:57.079
to the parent container, so to the parent grid.
95

95

00:04:57.079  -->  00:04:58.829
That would be something really helpful
96

96

00:04:58.829  -->  00:05:01.625
and I believe that it's actually coming to grid
97

97

00:05:01.625  -->  00:05:03.106
some time in the future.
98

98

00:05:03.106  -->  00:05:05.331
Also it would be great if we could change
99

99

00:05:05.331  -->  00:05:07.957
individual gaps, so for example
100

100

00:05:07.957  -->  00:05:11.188
if we could specify that between line two and three
101

101

00:05:11.188  -->  00:05:14.320
we wanted to have a different gap than the rest
102

102

00:05:14.320  -->  00:05:16.425
of the rows or the columns.
103

103

00:05:16.425  -->  00:05:19.342
The third and last thing that I think is missing
104

104

00:05:19.342  -->  00:05:22.323
is a selector where we can select the
105

105

00:05:22.323  -->  00:05:24.451
nth row and the nth column.
106

106

00:05:24.451  -->  00:05:26.318
So for example, if we want to say that we want
107

107

00:05:26.318  -->  00:05:30.009
just to select the second column or the second row
108

108

00:05:30.009  -->  00:05:32.449
of a grid or all the even rows
109

109

00:05:32.449  -->  00:05:35.653
or all the odd columns, something like this
110

110

00:05:35.653  -->  00:05:38.335
if you wanted to do something like this
111

111

00:05:38.335  -->  00:05:40.319
we couldn't really do it with CSS,
112

112

00:05:40.319  -->  00:05:43.209
because the selectors right now do not exist.
113

113

00:05:43.209  -->  00:05:46.632
So these things are what I think are missing
114

114

00:05:46.632  -->  00:05:48.276
from CSS Grid right now.
115

115

00:05:48.276  -->  00:05:51.392
If some day something really important happens
116

116

00:05:51.392  -->  00:05:53.884
or changes in CSS Grid then of course
117

117

00:05:53.884  -->  00:05:56.965
I will make sure to upload a new video
118

118

00:05:56.965  -->  00:06:01.139
explaining what changed and give you some example of that.
119

119

00:06:01.139  -->  00:06:04.548
So please rest assured that this course
120

120

00:06:04.548  -->  00:06:08.086
and this section will always be kept updated by me
121

121

00:06:08.086  -->  00:06:10.914
in case if anything important happens and changes.
122

122

00:06:10.914  -->  00:06:14.703
Okay, and with this I think we're really done
123

123

00:06:14.703  -->  00:06:17.243
with the section and with this project,
124

124

00:06:17.243  -->  00:06:19.422
and I hope that you'll love CSS Grid
125

125

00:06:19.422  -->  00:06:21.156
as much as I do it.
126

126

00:06:21.156  -->  00:06:23.327
I will personally start using it more and more
127

127

00:06:23.327  -->  00:06:25.173
in my projects and I hope
128

128

00:06:25.173  -->  00:06:27.742
that I was able to teach you and to show you
129

129

00:06:27.742  -->  00:06:30.403
how all of this works and that I could help you
130

130

00:06:30.403  -->  00:06:34.734
to become a bit better at CSS front end web development.
131

131

00:06:34.734  -->  00:06:36.138
All right, and that's it.
132

132

00:06:36.138  -->  00:06:39.305
Have a nice day and see you next time.
