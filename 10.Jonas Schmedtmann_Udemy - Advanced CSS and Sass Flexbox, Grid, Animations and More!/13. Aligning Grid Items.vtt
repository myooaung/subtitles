WEBVTT
1
1

00:00:01.081  -->  00:00:03.266
<v Jonas>In this video, we're gonna learn about</v>
2

2

00:00:03.266  -->  00:00:07.433
different ways of aligning grid items to grid areas.
3

3

00:00:09.225  -->  00:00:11.425
Now, before we start, let's actually
4

4

00:00:11.425  -->  00:00:13.805
set this one here back to row,
5

5

00:00:13.805  -->  00:00:16.284
okay, so that our grid items
6

6

00:00:16.284  -->  00:00:19.941
are placed in rows rather than in columns, okay,
7

7

00:00:19.941  -->  00:00:22.042
and so that the additional items
8

8

00:00:22.042  -->  00:00:23.825
are then placed in the rows.
9

9

00:00:23.825  -->  00:00:26.501
Also, let's add some spanning here
10

10

00:00:26.501  -->  00:00:28.818
to two of these grid items, so that
11

11

00:00:28.818  -->  00:00:31.436
I can better show you how this alignment
12

12

00:00:31.436  -->  00:00:34.123
of grid items to grid areas works.
13

13

00:00:34.123  -->  00:00:37.956
So let's do it here for number 4 and number 7,
14

14

00:00:41.141  -->  00:00:43.341
and I do it just as I did before,
15

15

00:00:43.341  -->  00:00:47.360
with the Sass way of creating the selectors,
16

16

00:00:47.360  -->  00:00:50.443
so this here will mean item 4, right?
17

17

00:00:51.663  -->  00:00:55.961
So let's give it a different background-color,
18

18

00:00:55.961  -->  00:01:00.128
one called crimson, which is like pink, like this,
19

19

00:01:01.060  -->  00:01:03.403
and let's say we want this one to start
20

20

00:01:03.403  -->  00:01:06.653
on the grid row number 2, and then span
21

21

00:01:10.427  -->  00:01:12.930
across three row tracks.
22

22

00:01:12.930  -->  00:01:15.008
Okay, so just like this.
23

23

00:01:15.008  -->  00:01:17.009
And you see that it also changed here
24

24

00:01:17.009  -->  00:01:19.530
from the second column to the first column track,
25

25

00:01:19.530  -->  00:01:22.108
and I'm actually not really sure why it did that,
26

26

00:01:22.108  -->  00:01:24.666
but it has to do with the automatic placement algorithm.
27

27

00:01:24.666  -->  00:01:28.833
Okay, so let's move on and do the same with number 7.
28

28

00:01:34.530  -->  00:01:38.697
Also give it a background-color in this pink color as well,
29

29

00:01:42.733  -->  00:01:46.900
and then say grid-column: 1 to -1, so all until the end.
30

30

00:01:49.566  -->  00:01:52.545
All right, and so you see that then it placed
31

31

00:01:52.545  -->  00:01:56.972
the last item here in yet another new created grid track.
32

32

00:01:56.972  -->  00:01:59.132
So you see here, on the grid here in inspector,
33

33

00:01:59.132  -->  00:02:02.313
that we now have actually four implicit grid tracks,
34

34

00:02:02.313  -->  00:02:05.831
so this one, this, and this, so four implicit grid tracks
35

35

00:02:05.831  -->  00:02:09.010
and two explicit grid tracks, right?
36

36

00:02:09.010  -->  00:02:10.788
Remember that from the last lecture?
37

37

00:02:10.788  -->  00:02:14.631
So this is how our grid looks like now.
38

38

00:02:14.631  -->  00:02:17.290
Moving out a bit so you can see it.
39

39

00:02:17.290  -->  00:02:20.291
Okay, so that's the way that it looks like right now.
40

40

00:02:20.291  -->  00:02:22.392
And so now, let me actually show you
41

41

00:02:22.392  -->  00:02:26.293
what I meant with aligning grid items to grid areas.
42

42

00:02:26.293  -->  00:02:29.109
Okay, so basically, this is very similar
43

43

00:02:29.109  -->  00:02:32.731
to what we can do in Flexbox with the align-items property.
44

44

00:02:32.731  -->  00:02:34.693
And in fact, we have the exact same
45

45

00:02:34.693  -->  00:02:38.629
property here with CSS Grid, so let me show it to you.
46

46

00:02:38.629  -->  00:02:41.311
So, just like in Flexbox, we apply these properties
47

47

00:02:41.311  -->  00:02:44.068
to the container, to the grid container,
48

48

00:02:44.068  -->  00:02:46.307
which is this one here, of course.
49

49

00:02:46.307  -->  00:02:48.390
So let's add align-items,
50

50

00:02:49.513  -->  00:02:53.407
such as we have in Flexbox, once again.
51

51

00:02:53.407  -->  00:02:55.812
Now, align-items is going to align the items
52

52

00:02:55.812  -->  00:02:58.314
across the column axis, okay?
53

53

00:02:58.314  -->  00:03:01.234
So let's set this to center, and let's see what happens.
54

54

00:03:01.234  -->  00:03:03.132
All right, that's the result
55

55

00:03:03.132  -->  00:03:05.152
of align-items setting to center.
56

56

00:03:05.152  -->  00:03:07.545
And so that's what I meant with aligning
57

57

00:03:07.545  -->  00:03:10.209
the grid item inside of an area.
58

58

00:03:10.209  -->  00:03:12.292
So remember that this one here
59

59

00:03:12.292  -->  00:03:15.229
what is orange is the grid item, of course,
60

60

00:03:15.229  -->  00:03:17.286
and the content that's in the grid item,
61

61

00:03:17.286  -->  00:03:20.111
and that is now aligned vertically in the center
62

62

00:03:20.111  -->  00:03:23.031
of this grid area here, right, so this grid area,
63

63

00:03:23.031  -->  00:03:26.590
which is here, delimited with these lines.
64

64

00:03:26.590  -->  00:03:28.592
And the same, of course, applies here,
65

65

00:03:28.592  -->  00:03:30.793
because this is now an entire grid area.
66

66

00:03:30.793  -->  00:03:34.943
Remember here, because we spanned this element,
67

67

00:03:34.943  -->  00:03:38.293
so this element number 4, we spanned it
68

68

00:03:38.293  -->  00:03:41.068
across these three row tracks,
69

69

00:03:41.068  -->  00:03:43.745
and so this is a grid area, right?
70

70

00:03:43.745  -->  00:03:46.731
And so now this item here is vertically centered
71

71

00:03:46.731  -->  00:03:49.314
inside of that grid area, okay?
72

72

00:03:50.910  -->  00:03:53.412
Now, down here, you cannot really see a big difference,
73

73

00:03:53.412  -->  00:03:55.130
because this grid item is actually
74

74

00:03:55.130  -->  00:03:58.787
almost as tall as this track, okay?
75

75

00:03:58.787  -->  00:04:01.551
So let's change that a bit, so decrease
76

76

00:04:01.551  -->  00:04:03.629
the padding of all the items to 10,
77

77

00:04:03.629  -->  00:04:05.564
and so now you'll see here that
78

78

00:04:05.564  -->  00:04:08.789
it's also vertically centered here in this area,
79

79

00:04:08.789  -->  00:04:11.808
right, so just as we have it here.
80

80

00:04:11.808  -->  00:04:14.644
Now, why was it stretching all the way
81

81

00:04:14.644  -->  00:04:17.369
from the top of the grid area, from here,
82

82

00:04:17.369  -->  00:04:19.192
to the bottom of the grid area,
83

83

00:04:19.192  -->  00:04:21.247
before we set this align-items property?
84

84

00:04:21.247  -->  00:04:23.348
Well, it's because of the same reason
85

85

00:04:23.348  -->  00:04:25.686
that it is in Flexbox, and that's because
86

86

00:04:25.686  -->  00:04:28.729
align-items is, by default, set to stretch.
87

87

00:04:28.729  -->  00:04:30.829
So let me show that to you.
88

88

00:04:30.829  -->  00:04:32.688
So if you set it to stretch, well,
89

89

00:04:32.688  -->  00:04:36.486
then the grid item stretches across the entire grid cell,
90

90

00:04:36.486  -->  00:04:38.488
or grid area, in this case here.
91

91

00:04:38.488  -->  00:04:41.529
So in this case here, it's a big area, and here as well.
92

92

00:04:41.529  -->  00:04:43.631
So let me write that down here,
93

93

00:04:43.631  -->  00:04:45.964
that the default is stretch.
94

94

00:04:46.936  -->  00:04:50.235
But we can also set it to center, as I showed you,
95

95

00:04:50.235  -->  00:04:52.652
and also to end, for example.
96

96

00:04:55.413  -->  00:04:57.580
So center, end, and start.
97

97

00:04:58.513  -->  00:05:00.912
So these are the ones that you need to know, okay?
98

98

00:05:00.912  -->  00:05:03.134
These are the ones that are really important.
99

99

00:05:03.134  -->  00:05:05.137
So now you see that each of these items
100

100

00:05:05.137  -->  00:05:08.151
is actually aligned to the end, to the bottom,
101

101

00:05:08.151  -->  00:05:10.727
of each of the grid cells, or grid areas.
102

102

00:05:10.727  -->  00:05:14.512
Okay, so maybe right now you cannot really see
103

103

00:05:14.512  -->  00:05:16.251
a big use-case for this,
104

104

00:05:16.251  -->  00:05:18.674
or why this is really helpful or useful,
105

105

00:05:18.674  -->  00:05:20.433
but you'll see that with practice,
106

106

00:05:20.433  -->  00:05:22.493
this will make a lot of sense, and actually,
107

107

00:05:22.493  -->  00:05:24.635
in the big project that we're gonna code up next,
108

108

00:05:24.635  -->  00:05:26.632
we will actually use these properties
109

109

00:05:26.632  -->  00:05:28.397
to achieve some of the layouts
110

110

00:05:28.397  -->  00:05:30.214
that we're looking for, that we want.
111

111

00:05:30.214  -->  00:05:32.757
Okay, so that is align-items.
112

112

00:05:32.757  -->  00:05:34.753
Now, we also have something else
113

113

00:05:34.753  -->  00:05:36.329
that we don't have in Flexbox,
114

114

00:05:36.329  -->  00:05:39.752
which is called justify-items, so justify-items.
115

115

00:05:39.752  -->  00:05:41.453
And we don't have this in Flexbox
116

116

00:05:41.453  -->  00:05:44.013
because Flexbox, it's not a two-dimensional
117

117

00:05:44.013  -->  00:05:46.317
layout system like the grid, okay?
118

118

00:05:46.317  -->  00:05:49.130
So we have align-items that aligns the items
119

119

00:05:49.130  -->  00:05:52.748
across the column axis, which means vertically,
120

120

00:05:52.748  -->  00:05:56.122
and then we have justify-items, which aligns the items
121

121

00:05:56.122  -->  00:05:59.103
across the row axis, or horizontally.
122

122

00:05:59.103  -->  00:06:02.523
So let me show that to you with center,
123

123

00:06:02.523  -->  00:06:05.725
and let's put center here as well,
124

124

00:06:05.725  -->  00:06:08.864
and all right, so now with this,
125

125

00:06:08.864  -->  00:06:10.644
the item is actually completely centered
126

126

00:06:10.644  -->  00:06:14.043
inside of the grid cell, or the grid area,
127

127

00:06:14.043  -->  00:06:16.603
both vertically and horizontally.
128

128

00:06:16.603  -->  00:06:19.701
So with align-items, we align the items vertically,
129

129

00:06:19.701  -->  00:06:23.384
and with justify-items, we align them horizontally.
130

130

00:06:23.384  -->  00:06:25.084
Okay, does that make sense?
131

131

00:06:25.084  -->  00:06:29.950
And again, not only in the cells, but also in entire areas.
132

132

00:06:29.950  -->  00:06:32.385
So remember, this one here is an entire area,
133

133

00:06:32.385  -->  00:06:35.451
and let's zoom out a bit here, actually.
134

134

00:06:35.451  -->  00:06:39.618
So these three cells here, they form an entire area, right,
135

135

00:06:40.690  -->  00:06:43.749
and so now this item here, which has Flexbox,
136

136

00:06:43.749  -->  00:06:45.967
this is centered vertically and horizontally
137

137

00:06:45.967  -->  00:06:48.522
in that entire area, right?
138

138

00:06:48.522  -->  00:06:50.727
So remember, it's an area because we set it here
139

139

00:06:50.727  -->  00:06:54.477
to span across these three grid tracks, okay?
140

140

00:06:55.388  -->  00:06:57.350
And then the same, of course, here with number 7.
141

141

00:06:57.350  -->  00:06:59.868
So this entire thing here, these two cells,
142

142

00:06:59.868  -->  00:07:01.907
they form an area, these two,
143

143

00:07:01.907  -->  00:07:04.049
and so now this small item here,
144

144

00:07:04.049  -->  00:07:07.085
which says "is", is horizontally and vertically
145

145

00:07:07.085  -->  00:07:08.687
centered inside of it.
146

146

00:07:08.687  -->  00:07:11.686
Okay, so let's put it back to the original size
147

147

00:07:11.686  -->  00:07:15.166
and then, just as before, so, where is it?
148

148

00:07:15.166  -->  00:07:17.627
The default here is, of course, stretch,
149

149

00:07:17.627  -->  00:07:19.630
and I'm not gonna write it down,
150

150

00:07:19.630  -->  00:07:21.443
because it's actually the same as here.
151

151

00:07:21.443  -->  00:07:23.824
So let's put it to start, for example,
152

152

00:07:23.824  -->  00:07:25.574
and that's not right.
153

153

00:07:26.481  -->  00:07:29.266
So start, and now what it's going to do
154

154

00:07:29.266  -->  00:07:32.169
is that it aligns them here all the way to the left side.
155

155

00:07:32.169  -->  00:07:34.896
Of course, I could put end, and then
156

156

00:07:34.896  -->  00:07:36.893
it comes here to the right side,
157

157

00:07:36.893  -->  00:07:38.733
to the end of the grid area.
158

158

00:07:38.733  -->  00:07:40.488
So you can play around with this,
159

159

00:07:40.488  -->  00:07:44.254
but I hope it made a lot of sense like this to you.
160

160

00:07:44.254  -->  00:07:48.051
So let's set it back to center here, and yeah.
161

161

00:07:48.051  -->  00:07:51.389
Now, as in Flexbox, where you have the align-self property
162

162

00:07:51.389  -->  00:07:54.722
to basically override the align-items property
163

163

00:07:54.722  -->  00:07:59.267
for one individual item, we have the same here in Grid.
164

164

00:07:59.267  -->  00:08:03.571
So we have align-self and also justify-self.
165

165

00:08:03.571  -->  00:08:07.738
So let me show that to you here with the number 4.
166

166

00:08:08.626  -->  00:08:12.126
And let's set this one here to align-self.
167

167

00:08:13.903  -->  00:08:16.061
And so what this is gonna do, instead,
168

168

00:08:16.061  -->  00:08:18.541
it will basically override the align-items property
169

169

00:08:18.541  -->  00:08:20.543
that is on the grid container.
170

170

00:08:20.543  -->  00:08:22.199
So if we set this one here to start,
171

171

00:08:22.199  -->  00:08:26.081
then only this item here will move to the top, hopefully.
172

172

00:08:26.081  -->  00:08:27.780
And, well, it did not.
173

173

00:08:27.780  -->  00:08:29.982
Maybe there's some, I see there's some error somewhere,
174

174

00:08:29.982  -->  00:08:32.583
so let's check that out.
175

175

00:08:32.583  -->  00:08:34.840
Well, it says there's some kind of error,
176

176

00:08:34.840  -->  00:08:36.317
but there's actually not.
177

177

00:08:36.317  -->  00:08:37.982
Let's just delete all of this
178

178

00:08:37.982  -->  00:08:40.164
and let's try it again.
179

179

00:08:40.164  -->  00:08:41.997
Align-self, and start.
180

180

00:08:45.040  -->  00:08:48.751
And so this should work, and yeah, so now it works.
181

181

00:08:48.751  -->  00:08:49.695
And so you now you see that it's
182

182

00:08:49.695  -->  00:08:51.216
vertically aligned all the way
183

183

00:08:51.216  -->  00:08:53.857
to the top of the grid area.
184

184

00:08:53.857  -->  00:08:56.278
And I could say end, and then it will
185

185

00:08:56.278  -->  00:08:58.923
move down to the bottom of the area, okay?
186

186

00:08:58.923  -->  00:09:02.249
So just like this, but let me put it back to start
187

187

00:09:02.249  -->  00:09:06.290
as it moves to the top, and now we have
188

188

00:09:06.290  -->  00:09:08.391
the same for the justify.
189

189

00:09:08.391  -->  00:09:10.690
So we can say justify-self, and then
190

190

00:09:10.690  -->  00:09:13.190
we have the exact same options here.
191

191

00:09:13.190  -->  00:09:15.404
So let's say start, and so it's gonna move
192

192

00:09:15.404  -->  00:09:17.991
right here to this position, okay?
193

193

00:09:17.991  -->  00:09:21.330
So just like Flexbox, here the self property
194

194

00:09:21.330  -->  00:09:23.629
overrides the overall setting
195

195

00:09:23.629  -->  00:09:26.050
which is set on the container.
196

196

00:09:26.050  -->  00:09:29.010
In Flexbox, we only have align-self because, again,
197

197

00:09:29.010  -->  00:09:31.292
it's just a one-dimensional layout system,
198

198

00:09:31.292  -->  00:09:33.286
but here in Grid, we have align-self
199

199

00:09:33.286  -->  00:09:36.609
and then justify-self for the horizontal direction.
200

200

00:09:36.609  -->  00:09:38.989
Okay, and that is how we align
201

201

00:09:38.989  -->  00:09:41.491
grid items to grid areas
202

202

00:09:41.491  -->  00:09:43.952
both horizontally and vertically.
203

203

00:09:43.952  -->  00:09:46.785
Now, if you want to learn how to align entire tracks
204

204

00:09:46.785  -->  00:09:50.288
to the grid container, well, then just move on with me
205

205

00:09:50.288  -->  00:09:52.538
right to the next lecture.
