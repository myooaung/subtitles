WEBVTT
1
1

00:00:01.363  -->  00:00:02.503
<v Instructor>Welcome back.</v>
2

2

00:00:02.503  -->  00:00:04.492
In this lecture, we're gonna start with another
3

3

00:00:04.492  -->  00:00:07.790
small project in order to learn about the difference
4

4

00:00:07.790  -->  00:00:11.532
between implicit and explicit grids.
5

5

00:00:11.532  -->  00:00:14.182
So again we start from an empty code line here
6

6

00:00:14.182  -->  00:00:16.874
and start by writing some markup.
7

7

00:00:16.874  -->  00:00:19.541
Okay, again I'm using Emmet here
8

8

00:00:21.560  -->  00:00:25.325
and call these items just item, and then item,
9

9

00:00:25.325  -->  00:00:28.338
and then the number such as I showed you before.
10

10

00:00:28.338  -->  00:00:30.826
Okay, and this time we want eight items
11

11

00:00:30.826  -->  00:00:33.389
and so I just multiple all of this by eight,
12

12

00:00:33.389  -->  00:00:35.139
hit Tab, and here we go,
13

13

00:00:35.139  -->  00:00:38.269
so item one, two, three, four, five, six, seven, and eight.
14

14

00:00:38.269  -->  00:00:40.732
Now let's actually add some content here this time
15

15

00:00:40.732  -->  00:00:43.482
like a sentence like Modern, CSS,
16

16

00:00:46.756  -->  00:00:47.923
with, Flexbox,
17

17

00:00:52.058  -->  00:00:53.808
and, Grid, is, great,
18

18

00:01:01.406  -->  00:01:02.239
so that it's a bit different
19

19

00:01:02.239  -->  00:01:04.906
and not always with the numbers.
20

20

00:01:07.149  -->  00:01:11.316
Okay, now some styles and this is the same as usual.
21

21

00:01:13.225  -->  00:01:15.975
Let's say 1000 pixels here again,
22

22

00:01:21.531  -->  00:01:25.698
and let's give it a background color here as well.
23

23

00:01:27.489  -->  00:01:29.942
So we'll select gray color again.
24

24

00:01:29.942  -->  00:01:32.518
And since we're here, we can also already
25

25

00:01:32.518  -->  00:01:34.979
style the items here.
26

26

00:01:34.979  -->  00:01:38.030
And of course, we use a nested selector here.
27

27

00:01:38.030  -->  00:01:40.645
We could also do this outside of the container,
28

28

00:01:40.645  -->  00:01:42.503
but it's no problem because the item
29

29

00:01:42.503  -->  00:01:46.255
is actually inside of the container, right.
30

30

00:01:46.255  -->  00:01:49.338
So just padding, let's say 20 pixels.
31

31

00:01:55.733  -->  00:01:57.983
Text color should be white.
32

32

00:01:58.870  -->  00:02:01.515
So I could actually copy this here
33

33

00:02:01.515  -->  00:02:04.015
from the other example as well
34

34

00:02:06.375  -->  00:02:08.458
but also it's very quick.
35

35

00:02:14.848  -->  00:02:18.248
All right, so that is the quick setup
36

36

00:02:18.248  -->  00:02:22.098
for this small project, this small demo.
37

37

00:02:22.098  -->  00:02:24.039
Let's now add some grid tracks here,
38

38

00:02:24.039  -->  00:02:26.532
and starting with the row,
39

39

00:02:26.532  -->  00:02:28.365
so grid-template-rows.
40

40

00:02:29.737  -->  00:02:31.576
And what I want to do now is to only
41

41

00:02:31.576  -->  00:02:34.607
add two rows and two columns, okay
42

42

00:02:34.607  -->  00:02:36.126
so that I can show you the difference
43

43

00:02:36.126  -->  00:02:39.480
between explicit and implicit grids.
44

44

00:02:39.480  -->  00:02:43.647
So these rows they will have a height of 150 pixels.
45

45

00:02:45.174  -->  00:02:49.341
So two rows with 150 pixels each, and then two columns,
46

46

00:02:50.943  -->  00:02:53.276
and grid-template-columns.
47

47

00:02:53.276  -->  00:02:56.230
And I want two columns with the exact same width
48

48

00:02:56.230  -->  00:02:58.554
occupying the entire container.
49

49

00:02:58.554  -->  00:03:01.744
You already know how to do that, right,
50

50

00:03:01.744  -->  00:03:05.911
so as they repeat to one fractional unit, and that's it.
51

51

00:03:07.042  -->  00:03:10.397
And actually I could have done the same up here.
52

52

00:03:10.397  -->  00:03:12.064
So actually why not,
53

53

00:03:14.751  -->  00:03:16.877
so using the repeat function again.
54

54

00:03:16.877  -->  00:03:18.427
And now just to see what's going on here,
55

55

00:03:18.427  -->  00:03:20.177
let's also add a gap,
56

56

00:03:21.328  -->  00:03:23.161
so grid-gap 30 pixels.
57

57

00:03:25.500  -->  00:03:29.426
Oh, and again I forgot to set the display property here
58

58

00:03:29.426  -->  00:03:30.426
to two grid,
59

59

00:03:33.793  -->  00:03:36.085
and so now we'll see what's going on.
60

60

00:03:36.085  -->  00:03:39.639
All right, so we have our grid now here
61

61

00:03:39.639  -->  00:03:42.012
with these four cells here that we defined.
62

62

00:03:42.012  -->  00:03:44.150
So we defined a two by two grid, remember,
63

63

00:03:44.150  -->  00:03:46.357
which is only four cells.
64

64

00:03:46.357  -->  00:03:49.543
But then down here, we have the other four cells, right,
65

65

00:03:49.543  -->  00:03:52.528
because we have actually eight items.
66

66

00:03:52.528  -->  00:03:54.694
And this has actually happened in our other project
67

67

00:03:54.694  -->  00:03:56.287
right at the beginning of the section,
68

68

00:03:56.287  -->  00:03:57.910
and I told about it then that we were gonna come back
69

69

00:03:57.910  -->  00:04:00.654
to it later, and so now it's that time
70

70

00:04:00.654  -->  00:04:02.454
where we're gonna talk about that.
71

71

00:04:02.454  -->  00:04:04.721
So these four grid cells that we defined here
72

72

00:04:04.721  -->  00:04:07.341
in the beginning which are now occupied by these
73

73

00:04:07.341  -->  00:04:11.925
four grid items here, this is the so called explicit grid
74

74

00:04:11.925  -->  00:04:14.823
because we explicitly defined how these rows
75

75

00:04:14.823  -->  00:04:16.708
and these columns should look like.
76

76

00:04:16.708  -->  00:04:21.252
Okay, so again this part of the grid is the explicit grid.
77

77

00:04:21.252  -->  00:04:24.502
Let's actually inspect this here again.
78

78

00:04:26.583  -->  00:04:28.388
Okay, and so you can see it here as well.
79

79

00:04:28.388  -->  00:04:31.002
So these four here, this part of the grid
80

80

00:04:31.002  -->  00:04:32.846
is our explicit grid.
81

81

00:04:32.846  -->  00:04:35.505
Now if we have more grid items than we have space,
82

82

00:04:35.505  -->  00:04:37.473
well, then CSS grid automatically
83

83

00:04:37.473  -->  00:04:39.351
adds some more tracks to the grid
84

84

00:04:39.351  -->  00:04:42.226
so that we can then fit all of these remaining items.
85

85

00:04:42.226  -->  00:04:43.492
And that's what happened here.
86

86

00:04:43.492  -->  00:04:45.865
So you see that down here these four,
87

87

00:04:45.865  -->  00:04:48.645
these are two row tracks that were added.
88

88

00:04:48.645  -->  00:04:51.513
So this track here and this track, they were added
89

89

00:04:51.513  -->  00:04:55.439
to our grid in order to fit the remaining four grid items.
90

90

00:04:55.439  -->  00:04:57.978
And this part of the grid then, these four here,
91

91

00:04:57.978  -->  00:05:00.629
this is called the implicit grid.
92

92

00:05:00.629  -->  00:05:02.593
Okay, does that make sense?
93

93

00:05:02.593  -->  00:05:04.475
So again the first part of the grid,
94

94

00:05:04.475  -->  00:05:07.192
the part that we actually defined in our code
95

95

00:05:07.192  -->  00:05:08.664
is the explicit grid.
96

96

00:05:08.664  -->  00:05:12.390
So it's this part here defined by these template rows
97

97

00:05:12.390  -->  00:05:13.619
and template columns,
98

98

00:05:13.619  -->  00:05:16.110
okay, so these tracks that we added here.
99

99

00:05:16.110  -->  00:05:18.197
And then the part that is automatically added
100

100

00:05:18.197  -->  00:05:21.022
in order to fit the content that doesn't fit
101

101

00:05:21.022  -->  00:05:25.189
in our explicit grid, CSS adds the implicit grid after that.
102

102

00:05:26.548  -->  00:05:30.072
Okay, now what if we wanted to somehow style
103

103

00:05:30.072  -->  00:05:32.562
this part of the grid, so the implicit grid?
104

104

00:05:32.562  -->  00:05:36.729
Well, in fact we can because there is a property for that.
105

105

00:05:38.054  -->  00:05:40.360
So let's say we want these row tracks here
106

106

00:05:40.360  -->  00:05:43.300
actually to have a defined height.
107

107

00:05:43.300  -->  00:05:46.133
And we can easily do that by using
108

108

00:05:48.254  -->  00:05:49.504
grid-auto-rows.
109

109

00:05:52.060  -->  00:05:54.171
Okay and so now we can say that we want
110

110

00:05:54.171  -->  00:05:56.504
like 80 pixels, for example,
111

111

00:05:57.844  -->  00:06:00.297
and that's what it does.
112

112

00:06:00.297  -->  00:06:02.726
So now these two automatically added tracks,
113

113

00:06:02.726  -->  00:06:06.732
this one and this one, they have a height of 80 pixels.
114

114

00:06:06.732  -->  00:06:09.846
So let's actually inspect that.
115

115

00:06:09.846  -->  00:06:14.208
So Inspect Element, and yeah, so you can see it here
116

116

00:06:14.208  -->  00:06:17.320
that it has a height of 80 pixels, right.
117

117

00:06:17.320  -->  00:06:19.037
And the same goes, of course, for this one,
118

118

00:06:19.037  -->  00:06:22.478
80, 80, 80 here, and then the explicit grid
119

119

00:06:22.478  -->  00:06:25.363
that we defined you can see here that they have
120

120

00:06:25.363  -->  00:06:28.522
a height of 150 pixels, so perfect.
121

121

00:06:28.522  -->  00:06:31.797
Actually here in this grid inspector,
122

122

00:06:31.797  -->  00:06:35.446
the implicit and explicit grids, they look a bit different.
123

123

00:06:35.446  -->  00:06:37.502
So you see here that this solid line here
124

124

00:06:37.502  -->  00:06:40.640
goes around the explicit grid.
125

125

00:06:40.640  -->  00:06:41.473
Do you see that?
126

126

00:06:41.473  -->  00:06:44.621
So the solid line it actually ends here, right,
127

127

00:06:44.621  -->  00:06:48.793
and so down here there's no solid line like we have here.
128

128

00:06:48.793  -->  00:06:51.366
So the solid line here is basically the end
129

129

00:06:51.366  -->  00:06:52.962
of the explicit grid.
130

130

00:06:52.962  -->  00:06:55.741
And then also the grid lines in the explicit grid
131

131

00:06:55.741  -->  00:06:59.015
they are just dashed while in the implicit grid
132

132

00:06:59.015  -->  00:07:00.811
they are dotted like you can see here.
133

133

00:07:00.811  -->  00:07:03.075
I'm not sure if you can see it maybe in the video
134

134

00:07:03.075  -->  00:07:05.409
but I'm sure that in your inspector,
135

135

00:07:05.409  -->  00:07:07.133
if you open the dev tools like this,
136

136

00:07:07.133  -->  00:07:08.320
you will see it as well.
137

137

00:07:08.320  -->  00:07:10.815
Okay, so this is just a small subtle difference here
138

138

00:07:10.815  -->  00:07:11.915
in the dev tools.
139

139

00:07:11.915  -->  00:07:15.217
So again you see that either lines are dotted like this
140

140

00:07:15.217  -->  00:07:19.293
for the implicit grid, and up here they are dashed.
141

141

00:07:19.293  -->  00:07:22.283
Okay, so just a small subtle difference.
142

142

00:07:22.283  -->  00:07:25.511
Now you may ask why are these additional grid items
143

143

00:07:25.511  -->  00:07:28.377
that we cannot fit into our explicit grid
144

144

00:07:28.377  -->  00:07:31.484
added as rows and not as columns?
145

145

00:07:31.484  -->  00:07:34.137
Well, that is a great question actually,
146

146

00:07:34.137  -->  00:07:35.740
so let me answer it to you.
147

147

00:07:35.740  -->  00:07:38.931
It's because of a simple small property
148

148

00:07:38.931  -->  00:07:41.431
that is called grid-auto-flow.
149

149

00:07:42.859  -->  00:07:46.915
Okay, and this property is by default set to row,
150

150

00:07:46.915  -->  00:07:50.157
but we can also set it to column.
151

151

00:07:50.157  -->  00:07:53.221
And check out what happens now.
152

152

00:07:53.221  -->  00:07:56.452
So you see, the remaining items are now no longer
153

153

00:07:56.452  -->  00:07:59.230
added as rows but as columns
154

154

00:07:59.230  -->  00:08:02.546
because we told our grid to flow as columns.
155

155

00:08:02.546  -->  00:08:04.840
So you also see that there is a difference in the way
156

156

00:08:04.840  -->  00:08:06.353
that these items are placed.
157

157

00:08:06.353  -->  00:08:09.675
So before we had Modern, CSS with Flexbox,
158

158

00:08:09.675  -->  00:08:14.376
but now we have Modern then CSS down here with Flexbox.
159

159

00:08:14.376  -->  00:08:16.711
And so what this means is that the automatic placement
160

160

00:08:16.711  -->  00:08:19.939
algorithm now places these items in order to fill up
161

161

00:08:19.939  -->  00:08:22.228
the columns and no longer the rows.
162

162

00:08:22.228  -->  00:08:25.528
So if we set this to row, then you will see
163

163

00:08:25.528  -->  00:08:27.010
that the algorithm automatically
164

164

00:08:27.010  -->  00:08:28.853
places these items in two rows,
165

165

00:08:28.853  -->  00:08:31.770
so Modern, CSS with Flexbox, right.
166

166

00:08:35.340  -->  00:08:39.563
And back to column, then it's Modern, and then down CSS,
167

167

00:08:39.563  -->  00:08:43.087
with Flexbox and, and CSS is great.
168

168

00:08:43.087  -->  00:08:47.057
Okay, now if we added more and more grid items here,
169

169

00:08:47.057  -->  00:08:49.960
then we add it as new columns.
170

170

00:08:49.960  -->  00:08:52.829
Now of course, if we can style the rows
171

171

00:08:52.829  -->  00:08:54.345
that are automatically added,
172

172

00:08:54.345  -->  00:08:56.961
we can do the same for the columns.
173

173

00:08:56.961  -->  00:09:01.044
So grid-auto-columns, and let's say we want these
174

174

00:09:02.045  -->  00:09:05.128
to be a half fractional unit, so .5fr
175

175

00:09:06.015  -->  00:09:08.475
and so that will be half of the width
176

176

00:09:08.475  -->  00:09:09.821
of the other ones here.
177

177

00:09:09.821  -->  00:09:11.991
Okay, so let's check it out.
178

178

00:09:11.991  -->  00:09:15.484
So this one has a width of 303 pixels,
179

179

00:09:15.484  -->  00:09:19.776
and so the other ones should have approximately 150, 151,
180

180

00:09:19.776  -->  00:09:21.026
now so 151.667.
181

181

00:09:22.433  -->  00:09:23.623
Okay, make sense?
182

182

00:09:23.623  -->  00:09:27.887
That's because, of course, half fr is half
183

183

00:09:27.887  -->  00:09:30.303
of one fractional unit, right.
184

184

00:09:30.303  -->  00:09:33.364
So you'll see that basically this grid-auto-columns here
185

185

00:09:33.364  -->  00:09:37.171
only applies as soon as we set auto-flow to column
186

186

00:09:37.171  -->  00:09:39.829
and then this auto-rows here for the automatically
187

187

00:09:39.829  -->  00:09:42.978
placed rows is not really relevant.
188

188

00:09:42.978  -->  00:09:46.122
Okay, so that is the difference between explicit
189

189

00:09:46.122  -->  00:09:48.079
and implicit grids.
190

190

00:09:48.079  -->  00:09:50.534
So you see that it's actually not a problem at all,
191

191

00:09:50.534  -->  00:09:53.765
so if we have more items then we can fit in the grid
192

192

00:09:53.765  -->  00:09:55.854
that we defined initially.
193

193

00:09:55.854  -->  00:09:58.104
This implicit grid and the ability
194

194

00:09:58.104  -->  00:10:01.129
to style these additional rows and columns is great
195

195

00:10:01.129  -->  00:10:04.694
for use cases where you don't really know how many rows
196

196

00:10:04.694  -->  00:10:08.103
or columns there will be in your grid, in your layout.
197

197

00:10:08.103  -->  00:10:12.530
For example, if you have an Apex call in like some web app
198

198

00:10:12.530  -->  00:10:15.334
or something where you can load data from a server
199

199

00:10:15.334  -->  00:10:17.657
while the page is loading and you don't really know
200

200

00:10:17.657  -->  00:10:21.329
if there are 10 items or 12 or 15 or 20,
201

201

00:10:21.329  -->  00:10:23.005
so if you don't know how many there are,
202

202

00:10:23.005  -->  00:10:26.153
you can simply style these automatically added rows
203

203

00:10:26.153  -->  00:10:28.365
or columns and then everything is gonna work
204

204

00:10:28.365  -->  00:10:29.275
as you expected.
205

205

00:10:29.275  -->  00:10:31.563
So you can control how the grid will look like
206

206

00:10:31.563  -->  00:10:35.730
even if you don't know how many items there will be in it.
