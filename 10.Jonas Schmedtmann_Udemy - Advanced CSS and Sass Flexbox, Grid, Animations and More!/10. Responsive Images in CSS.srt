1
1

00:00:00,567  -->  00:00:03,262
<v Narrator>Welcome back. So the final piece</v>
2

2

00:00:03,262  -->  00:00:05,901
in the puzzle of responsive images,
3

3

00:00:05,901  -->  00:00:09,037
is to implement them in CSS now.
4

4

00:00:09,037  -->  00:00:10,998
And so in this lecture, you're gonna learn
5

5

00:00:10,998  -->  00:00:13,655
how to do exactly that. By using media queries to
6

6

00:00:13,655  -->  00:00:16,533
target high resolution displays.
7

7

00:00:16,533  -->  00:00:19,060
Plus, I will show you how to combine multiple
8

8

00:00:19,060  -->  00:00:21,297
conditions in media queries, which can be
9

9

00:00:21,297  -->  00:00:23,113
quite handy sometimes, especially when
10

10

00:00:23,113  -->  00:00:25,941
trying to implement responsive images.
11

11

00:00:25,941  -->  00:00:27,748
So what we're going to do in this lecture,
12

12

00:00:27,748  -->  00:00:29,669
is to make this background image here
13

13

00:00:29,669  -->  00:00:32,533
for the hero, a bit more responsive, okay?
14

14

00:00:32,533  -->  00:00:35,218
So again, there are a lot of background images
15

15

00:00:35,218  -->  00:00:37,801
here on this page. So this one,
16

16

00:00:39,126  -->  00:00:40,772
then these three here,
17

17

00:00:40,772  -->  00:00:44,135
as well as, yeah this one here.
18

18

00:00:44,135  -->  00:00:46,460
So all of these background images can be made
19

19

00:00:46,460  -->  00:00:49,109
responsive, but I will only take care of this one,
20

20

00:00:49,109  -->  00:00:51,678
and I will leave the other ones, for you,
21

21

00:00:51,678  -->  00:00:55,106
such as a I did with responsive images in html, okay?
22

22

00:00:55,106  -->  00:00:59,531
So I created a smaller version of the hero image,
23

23

00:00:59,531  -->  00:01:01,739
and it's called hero small, okay?
24

24

00:01:01,739  -->  00:01:03,686
So the original one is this one,
25

25

00:01:03,686  -->  00:01:06,515
which has 2000 pixels of width,
26

26

00:01:06,515  -->  00:01:09,234
and you see that this one here is a lot smaller, so,
27

27

00:01:09,234  -->  00:01:13,401
260 pixels versus 600, so a huge difference actually.
28

28

00:01:14,715  -->  00:01:18,450
So, let's go to our header. Which is exactly
29

29

00:01:18,450  -->  00:01:20,588
where we are going to implement this.
30

30

00:01:20,588  -->  00:01:23,275
Alright, and so responsive images in CSS
31

31

00:01:23,275  -->  00:01:25,211
are actually pretty straight forward.
32

32

00:01:25,211  -->  00:01:27,491
Because all we have to do is to write media queries,
33

33

00:01:27,491  -->  00:01:31,539
in order to load different images, for different situations.
34

34

00:01:31,539  -->  00:01:33,986
Now up until this point, we have only ever written
35

35

00:01:33,986  -->  00:01:36,562
media queries related to the screen,
36

36

00:01:36,562  -->  00:01:38,645
or the viewport width, right?.
37

37

00:01:38,645  -->  00:01:40,435
But there are other types of media queries,
38

38

00:01:40,435  -->  00:01:43,346
and one of them is to target resolution.
39

39

00:01:43,346  -->  00:01:45,178
Okay, so we can implement different styles
40

40

00:01:45,178  -->  00:01:48,107
not only depending on different viewport width,
41

41

00:01:48,107  -->  00:01:49,524
but also depending on other things,
42

42

00:01:49,524  -->  00:01:52,029
such as the device resolution.
43

43

00:01:52,029  -->  00:01:55,819
So, let's write a media query like that.
44

44

00:01:55,819  -->  00:01:58,102
So media, and then the one that we're
45

45

00:01:58,102  -->  00:02:01,352
going to use, is called min-resolution.
46

46

00:02:03,518  -->  00:02:07,588
And we're going to set it to a value of 192 dots per inch.
47

47

00:02:07,588  -->  00:02:11,158
And why is that? Well it is 192 dots per inch,
48

48

00:02:11,158  -->  00:02:14,863
because that's the resolution of the Apple retina screen.
49

49

00:02:14,863  -->  00:02:17,195
And so that's a high resolution screen,
50

50

00:02:17,195  -->  00:02:21,434
that's usually used as a reference here, okay?
51

51

00:02:21,434  -->  00:02:24,071
So, since this is a min media query,
52

52

00:02:24,071  -->  00:02:25,556
this is basically the same logic,
53

53

00:02:25,556  -->  00:02:27,704
as with the min width media query, okay?
54

54

00:02:27,704  -->  00:02:32,218
So whenever the resolution is higher than 192 dots per inch,
55

55

00:02:32,218  -->  00:02:35,362
the code that is in here, will be applied.
56

56

00:02:35,362  -->  00:02:38,233
Okay, and so what we put here, well we put
57

57

00:02:38,233  -->  00:02:41,466
the background image. Alright.
58

58

00:02:41,466  -->  00:02:44,608
Now, here in the normal state, lets say,
59

59

00:02:44,608  -->  00:02:49,298
what we actually want to load is the small hero image, okay?
60

60

00:02:49,298  -->  00:02:51,366
Because if we have just a normal screen
61

61

00:02:51,366  -->  00:02:53,757
without the high resolution, then the hero small
62

62

00:02:53,757  -->  00:02:56,501
with 1200 pixels is perfectly enough,
63

63

00:02:56,501  -->  00:02:58,991
especially considering that it's hidden behind
64

64

00:02:58,991  -->  00:03:02,165
this layer of off the green color here, okay.
65

65

00:03:02,165  -->  00:03:04,455
And so the resolution can be even smaller.
66

66

00:03:04,455  -->  00:03:06,269
And so for the normal situation,
67

67

00:03:06,269  -->  00:03:08,446
we're basically considering, that we're using
68

68

00:03:08,446  -->  00:03:11,678
a small resolution screen, and so there we load the
69

69

00:03:11,678  -->  00:03:15,679
small hero image. But then we write this media query,
70

70

00:03:15,679  -->  00:03:18,064
in which we say, if the resolution is higher
71

71

00:03:18,064  -->  00:03:22,231
then 192 dots per inch, then please load the hero image.
72

72

00:03:24,168  -->  00:03:26,496
Okay? So let's test that in the browser.
73

73

00:03:26,496  -->  00:03:28,328
And actually to see the difference,
74

74

00:03:28,328  -->  00:03:32,495
I will change the color here of this gradient, okay?
75

75

00:03:33,383  -->  00:03:36,785
So I'm setting this to secondary,
76

76

00:03:36,785  -->  00:03:39,391
So now we know that when the image looks green,
77

77

00:03:39,391  -->  00:03:41,633
then we're using the primary color, and therefor
78

78

00:03:41,633  -->  00:03:44,052
we know that it's the small hero here.
79

79

00:03:44,052  -->  00:03:46,993
And when it becomes yellow, which is the secondary
80

80

00:03:46,993  -->  00:03:49,489
color yellow, or orange, well then we know
81

81

00:03:49,489  -->  00:03:54,057
it's the hero, right? So. Let's check that out.
82

82

00:03:54,057  -->  00:03:57,785
I'm going to reload it. And so we have the green image
83

83

00:03:57,785  -->  00:04:01,868
here now. So let's actually inspect this as well.
84

84

00:04:03,522  -->  00:04:07,017
So the header, and so we have our hero small here.
85

85

00:04:07,017  -->  00:04:11,200
But now if we increase the pixel density here to two,
86

86

00:04:11,200  -->  00:04:13,618
well then all of sudden it becomes orange,
87

87

00:04:13,618  -->  00:04:17,554
and what that means is that we are now using the hero image.
88

88

00:04:17,554  -->  00:04:19,757
So the bigger version of the image.
89

89

00:04:19,757  -->  00:04:21,985
Alright, so that already works very well.
90

90

00:04:21,985  -->  00:04:23,706
But we can even improve on this.
91

91

00:04:23,706  -->  00:04:27,157
So let's say that the screen is only very small.
92

92

00:04:27,157  -->  00:04:29,540
So for example, for a screen, so that's
93

93

00:04:29,540  -->  00:04:33,255
the 600 pixel media query, remember? So imagine
94

94

00:04:33,255  -->  00:04:35,243
that we have a screen with 600 pixels.
95

95

00:04:35,243  -->  00:04:37,067
And usually these really small screens,
96

96

00:04:37,067  -->  00:04:39,387
they're usually phones. And phones, they usually
97

97

00:04:39,387  -->  00:04:42,919
have a pixel density of two. So they are usually
98

98

00:04:42,919  -->  00:04:46,357
two x screens always, okay? So we can consider that.
99

99

00:04:46,357  -->  00:04:50,916
Now if the screen is 600 and if the pixel density is two,
100

100

00:04:50,916  -->  00:04:52,877
well then the image that we need at this size,
101

101

00:04:52,877  -->  00:04:56,230
doesn't have to be larger than 1200 pixels, right?
102

102

00:04:56,230  -->  00:04:59,412
So 600 times 2 is 1200, and so an image,
103

103

00:04:59,412  -->  00:05:01,460
which has 1200 pixels of width,
104

104

00:05:01,460  -->  00:05:03,276
is more than enough to display
105

105

00:05:03,276  -->  00:05:06,277
on a high density screen like this, okay?
106

106

00:05:06,277  -->  00:05:08,687
Therefor, it's not really logic to load
107

107

00:05:08,687  -->  00:05:12,104
this huge image, so this 2000 pixel image
108

108

00:05:13,208  -->  00:05:16,143
here on this really small screen, right?
109

109

00:05:16,143  -->  00:05:20,287
So, how do we do that? Well we can actually extend
110

110

00:05:20,287  -->  00:05:24,095
this media query here, and add a second condition.
111

111

00:05:24,095  -->  00:05:27,294
So what we want is when the resolution is larger
112

112

00:05:27,294  -->  00:05:29,647
than 192, but at the same time,
113

113

00:05:29,647  -->  00:05:32,647
the width is larger than 600, right?
114

114

00:05:34,231  -->  00:05:36,582
So that's the part I just talked about.
115

115

00:05:36,582  -->  00:05:39,665
So, min width, 600 pixels, all right.
116

116

00:05:45,703  -->  00:05:48,175
So let's recap what's happening here.
117

117

00:05:48,175  -->  00:05:50,225
So the large version of the hero image,
118

118

00:05:50,225  -->  00:05:53,105
is shown when the resolution is higher than
119

119

00:05:53,105  -->  00:05:55,911
192, so when we have a two x screen,
120

120

00:05:55,911  -->  00:05:58,239
and at the same time, whenever
121

121

00:05:58,239  -->  00:06:00,767
the width is larger than 600 pixels.
122

122

00:06:00,767  -->  00:06:02,999
Because if it's below 600 pixels,
123

123

00:06:02,999  -->  00:06:04,895
then it doesn't really make sense
124

124

00:06:04,895  -->  00:06:08,092
to display such a high resolution image, okay?
125

125

00:06:08,092  -->  00:06:12,847
And so let's now test if that works. And yeah it works.
126

126

00:06:12,847  -->  00:06:15,983
So we see that in here we now are back to using
127

127

00:06:15,983  -->  00:06:17,959
the hero small, and so it's green.
128

128

00:06:17,959  -->  00:06:21,042
But as we approach 600, here you see,
129

129

00:06:22,547  -->  00:06:25,088
that it is working already. So now,
130

130

00:06:25,088  -->  00:06:27,975
we are back to using the big hero image.
131

131

00:06:27,975  -->  00:06:30,423
Because starting at this point, it makes sense,
132

132

00:06:30,423  -->  00:06:33,090
to have a bigger image. Alright.
133

133

00:06:36,406  -->  00:06:38,863
And so you just learned two things at the same time.
134

134

00:06:38,863  -->  00:06:42,131
First, how to target these higher resolution screens
135

135

00:06:42,131  -->  00:06:44,184
using this part, and then you learned
136

136

00:06:44,184  -->  00:06:47,103
how to combine multiple conditions in a media query.
137

137

00:06:47,103  -->  00:06:50,537
Alright, now when else does it make sense
138

138

00:06:50,537  -->  00:06:53,784
to use the larger image? So let's take a look.
139

139

00:06:53,784  -->  00:06:56,799
Imagine that we have a lower resolution screen.
140

140

00:06:56,799  -->  00:06:59,808
So when would it make sense to actually use
141

141

00:06:59,808  -->  00:07:02,982
the 2000 pixel image? Well, basically
142

142

00:07:02,982  -->  00:07:06,711
if the screen is really huge. So for example,
143

143

00:07:06,711  -->  00:07:09,527
starting at 2000 pixels. So why not write
144

144

00:07:09,527  -->  00:07:13,023
a media query saying that as soon as we hit 2000 pixels,
145

145

00:07:13,023  -->  00:07:15,834
we want to display the hero image,
146

146

00:07:15,834  -->  00:07:19,322
so the original, not the small one. Alright?
147

147

00:07:19,322  -->  00:07:21,423
So that's a small challenge for you right now.
148

148

00:07:21,423  -->  00:07:23,079
So I want you to pause the video,
149

149

00:07:23,079  -->  00:07:24,808
and implement what we just said.
150

150

00:07:24,808  -->  00:07:26,948
So basically we want to see the hero,
151

151

00:07:26,948  -->  00:07:31,455
as soon as the width becomes larger than 2000 pixels.
152

152

00:07:31,455  -->  00:07:34,311
So I hope you managed to do that.
153

153

00:07:34,311  -->  00:07:37,811
So media min width, and that's already it,
154

154

00:07:43,735  -->  00:07:47,767
because all we have to do now, is to just copy this here.
155

155

00:07:47,767  -->  00:07:51,047
And why is it a min width? Well very simple because
156

156

00:07:51,047  -->  00:07:53,795
2000 is basically the minimum width that needs
157

157

00:07:53,795  -->  00:07:56,992
to happen in order for this to happen. Okay?
158

158

00:07:56,992  -->  00:07:58,621
And so basically we're asking the question,
159

159

00:07:58,621  -->  00:08:00,969
"Is the width larger than 2000?"
160

160

00:08:00,969  -->  00:08:04,636
And if it is, then we apply this hero image.
161

161

00:08:07,163  -->  00:08:09,830
Okay, so let's now try that and,
162

162

00:08:11,184  -->  00:08:13,872
yep we reached the 2000 pixels,
163

163

00:08:13,872  -->  00:08:17,039
and then the larger image gets loaded.
164

164

00:08:18,289  -->  00:08:21,789
Great. That's fantastic okay. Really cool.
165

165

00:08:22,771  -->  00:08:26,569
Now of course if we are already at two here,
166

166

00:08:26,569  -->  00:08:28,736
then this media query doesn't take any effect
167

167

00:08:28,736  -->  00:08:30,961
because then the image will be the
168

168

00:08:30,961  -->  00:08:34,409
large version already, anyway. Okay?
169

169

00:08:34,409  -->  00:08:35,969
Now we can do even better than this,
170

170

00:08:35,969  -->  00:08:38,896
because this code here is the exact same as this one.
171

171

00:08:38,896  -->  00:08:41,744
And so we can actually combine these two media queries,
172

172

00:08:41,744  -->  00:08:44,080
and so basically these two conditions.
173

173

00:08:44,080  -->  00:08:47,571
So this is a condition, and this is another one.
174

174

00:08:47,571  -->  00:08:50,962
So let me copy this, and then I can just put a comma here.
175

175

00:08:50,962  -->  00:08:54,545
And so basically that is like an or.
176

176

00:08:54,545  -->  00:08:58,128
So we say now, well please apply this code.
177

177

00:08:59,357  -->  00:09:03,429
If this one here happens, or if this happens.
178

178

00:09:03,429  -->  00:09:06,321
And so this is the exact same thing, but with less code,
179

179

00:09:06,321  -->  00:09:09,033
and that's of course way better. Alright.
180

180

00:09:09,033  -->  00:09:12,232
And just to prove to you that it still works like this,
181

181

00:09:12,232  -->  00:09:16,399
yeah of course, here we go, on the smaller screen here.
182

182

00:09:21,292  -->  00:09:23,996
And then of course with the lower resolution,
183

183

00:09:23,996  -->  00:09:28,341
but it starts working at 2000. Yep. That's what happens.
184

184

00:09:28,341  -->  00:09:31,877
Now all we have to do is convert this here to em.
185

185

00:09:31,877  -->  00:09:35,380
Okay so 600 divided by 16, such as we did before,
186

186

00:09:35,380  -->  00:09:38,963
so 37.5, because remember are media queries
187

187

00:09:41,108  -->  00:09:44,252
are always in em. And now the same thing for
188

188

00:09:44,252  -->  00:09:46,419
2000 divide by 16, 125 em.
189

189

00:09:52,548  -->  00:09:54,930
And just to be 100 percent sure now,
190

190

00:09:54,930  -->  00:09:58,513
let's reload this, and yeah it still works.
191

191

00:09:59,847  -->  00:10:02,095
Actually you'll see these min width,
192

192

00:10:02,095  -->  00:10:03,952
that we implemented here in orange color.
193

193

00:10:03,952  -->  00:10:06,452
So 125 em and 37.5 em as well.
194

194

00:10:08,890  -->  00:10:13,239
That's these two conditions, this one and this one.
195

195

00:10:13,239  -->  00:10:15,688
And actually what we did before
196

196

00:10:15,688  -->  00:10:18,454
in the index HML, we also had these
197

197

00:10:18,454  -->  00:10:20,762
media queries here, kind of. And so
198

198

00:10:20,762  -->  00:10:23,874
let's put them to ems as well.
199

199

00:10:23,874  -->  00:10:26,457
So this one is 37.5 em and then
200

200

00:10:28,056  -->  00:10:31,973
900 divided by 16 is 56.25.
201

201

00:10:38,656  -->  00:10:41,906
Alright. And actually it was 56 not 65.
202

202

00:10:42,837  -->  00:10:47,004
So 56, alright now it's correct. So back to our CSS.
203

203

00:10:48,469  -->  00:10:50,779
And actually that is already it.
204

204

00:10:50,779  -->  00:10:53,572
So that's a couple of techniques for responsive images
205

205

00:10:53,572  -->  00:10:55,788
with CSS. So basically it's just using
206

206

00:10:55,788  -->  00:10:58,133
media queries and some logic, in order to
207

207

00:10:58,133  -->  00:11:00,309
achieve the results that we want, based on
208

208

00:11:00,309  -->  00:11:04,364
different viewpoint sizes and resolutions, of the screen.
209

209

00:11:04,364  -->  00:11:07,411
So, that concluded our lectures about responsive images,
210

210

00:11:07,411  -->  00:11:10,718
which are again, a topic that you shouldn't really ignore,
211

211

00:11:10,718  -->  00:11:13,230
if you want to get serious with responsive design, okay?
212

212

00:11:13,230  -->  00:11:16,193
So I'll leave it as a challenge to you,
213

213

00:11:16,193  -->  00:11:18,959
to implement a similar logic for all the other
214

214

00:11:18,959  -->  00:11:21,980
background images, that we have in our CSS.
215

215

00:11:21,980  -->  00:11:24,037
And if you have any problems with that,
216

216

00:11:24,037  -->  00:11:26,071
then just feel free to post to the Q and A,
217

217

00:11:26,071  -->  00:11:29,265
so that you can get some help with that.
218

218

00:11:29,265  -->  00:11:31,659
Alright, so I hope that everything makes sense to you,
219

219

00:11:31,659  -->  00:11:34,376
and that it was quite fun as well, and then
220

220

00:11:34,376  -->  00:11:38,543
see you in the next lecture after you finish the challenge.
