1
1

00:00:01,019  -->  00:00:02,940
<v Jonas>So in the last lecture, we learned</v>
2

2

00:00:02,940  -->  00:00:05,982
how to align grid items to grid areas.
3

3

00:00:05,982  -->  00:00:08,374
And so let's now learn how to align
4

4

00:00:08,374  -->  00:00:11,658
entire grid tracks to our grid container.
5

5

00:00:11,658  -->  00:00:14,521
Now, before we can do that, we actually need
6

6

00:00:14,521  -->  00:00:16,435
to make a couple of changes here,
7

7

00:00:16,435  -->  00:00:19,935
and let me start by adding a comment here,
8

8

00:00:22,738  -->  00:00:25,738
so "Align grid items to grid areas,"
9

9

00:00:29,100  -->  00:00:32,100
and so next, we're gonna learn about
10

10

00:00:35,083  -->  00:00:38,250
"Align grid tracks to grid container."
11

11

00:00:42,323  -->  00:00:46,323
And this one here, of course, should be in here.
12

12

00:00:49,580  -->  00:00:53,163
So let's put this all together a bit, okay,
13

13

00:00:54,907  -->  00:00:57,472
and now what I need to change is actually
14

14

00:00:57,472  -->  00:01:00,833
the columns here, because I no longer want them
15

15

00:01:00,833  -->  00:01:03,348
to occupy the entire container,
16

16

00:01:03,348  -->  00:01:05,013
because then I cannot really show you
17

17

00:01:05,013  -->  00:01:07,474
how all of this works, okay?
18

18

00:01:07,474  -->  00:01:10,474
So let me comment this one out here,
19

19

00:01:12,207  -->  00:01:14,310
or I can actually just copy it,
20

20

00:01:14,310  -->  00:01:18,477
and so let me put it here, where we learn about this.
21

21

00:01:23,089  -->  00:01:24,306
So let's say I just want
22

22

00:01:24,306  -->  00:01:27,389
150 pixel wide columns, or maybe 200.
23

23

00:01:29,982  -->  00:01:32,408
Okay, and actually, let's also comment out
24

24

00:01:32,408  -->  00:01:34,380
this one here from the last lecture,
25

25

00:01:34,380  -->  00:01:38,241
so that makes it a bit more easier to understand.
26

26

00:01:38,241  -->  00:01:40,164
Okay, just like this.
27

27

00:01:40,164  -->  00:01:44,764
Maybe we can also decrease the rows a little bit,
28

28

00:01:44,764  -->  00:01:47,264
so let me change that as well.
29

29

00:01:54,685  -->  00:01:56,624
So let's say 100 pixels.
30

30

00:01:56,624  -->  00:01:59,167
Now, we already have the width here of the container,
31

31

00:01:59,167  -->  00:02:02,104
which is these 1000 pixels, right,
32

32

00:02:02,104  -->  00:02:04,922
so let's also just set the height
33

33

00:02:04,922  -->  00:02:07,589
of the container to 1000 pixels.
34

34

00:02:10,062  -->  00:02:12,982
Okay, and so now you'll see that
35

35

00:02:12,982  -->  00:02:15,519
the container actually continues down here,
36

36

00:02:15,519  -->  00:02:19,820
and then also here on the side of the grid, okay?
37

37

00:02:19,820  -->  00:02:22,804
So basically, our entire container is this,
38

38

00:02:22,804  -->  00:02:24,702
so all of this is our container,
39

39

00:02:24,702  -->  00:02:27,181
but our grid tracks, they only occupy
40

40

00:02:27,181  -->  00:02:30,362
this part of the container, okay?
41

41

00:02:30,362  -->  00:02:33,003
And so all the rest here is empty.
42

42

00:02:33,003  -->  00:02:35,520
And so now we're ready to actually align the tracks
43

43

00:02:35,520  -->  00:02:40,181
to the container, which is the goal of this lecture, right?
44

44

00:02:40,181  -->  00:02:42,445
So what do I actually mean with that?
45

45

00:02:42,445  -->  00:02:43,890
So let me show it to you,
46

46

00:02:43,890  -->  00:02:47,309
and I'm gonna start with justify-content.
47

47

00:02:47,309  -->  00:02:51,489
And again, this property exists in Flexbox,
48

48

00:02:51,489  -->  00:02:54,580
and it actually works the exact same way.
49

49

00:02:54,580  -->  00:02:56,816
So it's just gonna align the tracks inside of
50

50

00:02:56,816  -->  00:03:00,421
the container across the row axis, so horizontally.
51

51

00:03:00,421  -->  00:03:04,241
So let's set it to center, and here we go.
52

52

00:03:04,241  -->  00:03:06,876
So it moved right to the center of the container.
53

53

00:03:06,876  -->  00:03:09,581
And so just as we center flex items
54

54

00:03:09,581  -->  00:03:11,996
inside of a flex container with justify-content,
55

55

00:03:11,996  -->  00:03:15,271
we do it the exact same way with the grid tracks
56

56

00:03:15,271  -->  00:03:17,188
here in CSS Grid, okay?
57

57

00:03:18,219  -->  00:03:20,901
So this is what we will use if we want to really center
58

58

00:03:20,901  -->  00:03:23,356
the entire content, basically, of the grid
59

59

00:03:23,356  -->  00:03:25,359
inside of the container.
60

60

00:03:25,359  -->  00:03:27,536
Now, there are other values, of course,
61

61

00:03:27,536  -->  00:03:29,355
just like in Flexbox, and actually
62

62

00:03:29,355  -->  00:03:32,296
there are the exact same possibilities.
63

63

00:03:32,296  -->  00:03:35,629
So, one is center, as I just showed you,
64

64

00:03:36,780  -->  00:03:38,893
and of course, there is start,
65

65

00:03:38,893  -->  00:03:41,360
which we already saw how it looks like,
66

66

00:03:41,360  -->  00:03:44,360
so just like this, then there's end.
67

67

00:03:45,453  -->  00:03:49,317
So let me write down the options here for you.
68

68

00:03:49,317  -->  00:03:52,859
And then, beside these three very basic ones,
69

69

00:03:52,859  -->  00:03:55,833
there are the ones that we also have in Flexbox.
70

70

00:03:55,833  -->  00:03:59,083
So we have space-between, and so let me
71

71

00:04:01,545  -->  00:04:04,923
actually write it here as well, so space-between,
72

72

00:04:04,923  -->  00:04:07,496
and see what happens now.
73

73

00:04:07,496  -->  00:04:10,583
So it pushed each of the columns
74

74

00:04:10,583  -->  00:04:13,364
to one of the sides of the grid container.
75

75

00:04:13,364  -->  00:04:16,742
Right, so basically, it divided all of the empty space here
76

76

00:04:16,742  -->  00:04:20,620
between these two columns, so these two tracks.
77

77

00:04:20,620  -->  00:04:22,418
And so that's the exact same behavior
78

78

00:04:22,418  -->  00:04:24,682
as in Flexbox with space-between.
79

79

00:04:24,682  -->  00:04:28,849
Now, we also have space-around, and so, as you would expect,
80

80

00:04:30,123  -->  00:04:32,776
it works just the same way as in Flexbox, so basically,
81

81

00:04:32,776  -->  00:04:35,823
the space on the left side is the same as on the right side,
82

82

00:04:35,823  -->  00:04:38,720
so basically, it's like this square here,
83

83

00:04:38,720  -->  00:04:41,083
but then here, in this grid track here,
84

84

00:04:41,083  -->  00:04:42,882
it's the exact same thing.
85

85

00:04:42,882  -->  00:04:43,953
So the same space here on
86

86

00:04:43,953  -->  00:04:45,936
the right side as on the left side,
87

87

00:04:45,936  -->  00:04:48,037
which makes it so that the space here
88

88

00:04:48,037  -->  00:04:50,017
in between these two is double the space
89

89

00:04:50,017  -->  00:04:53,314
than we have here on both the left and the right side.
90

90

00:04:53,314  -->  00:04:57,481
So let me write down the option for you here again.
91

91

00:04:58,774  -->  00:05:02,357
And then the last one here is space-evenly,
92

92

00:05:03,475  -->  00:05:05,549
and what this is going to do is that
93

93

00:05:05,549  -->  00:05:09,733
the space is now all the same here, and here, and here.
94

94

00:05:09,733  -->  00:05:12,537
So the space between the items is the exact same space
95

95

00:05:12,537  -->  00:05:16,072
as on the left and the right side of each of the items.
96

96

00:05:16,072  -->  00:05:18,475
Okay, so these are different possibilities
97

97

00:05:18,475  -->  00:05:21,297
to build different types of layouts.
98

98

00:05:21,297  -->  00:05:24,964
Now, we also have, of course, justify-items.
99

99

00:05:25,993  -->  00:05:29,348
Now, if we can horizontally align these tracks,
100

100

00:05:29,348  -->  00:05:32,477
then of course we can do the same vertically, right?
101

101

00:05:32,477  -->  00:05:36,314
And so, what we do for that is align-content.
102

102

00:05:36,314  -->  00:05:40,395
Okay, and so let's start again with center here,
103

103

00:05:40,395  -->  00:05:42,816
because I think that's always the most useful,
104

104

00:05:42,816  -->  00:05:45,330
and so you see that now, all of it moved
105

105

00:05:45,330  -->  00:05:47,895
into the middle of the container vertically.
106

106

00:05:47,895  -->  00:05:52,649
And let's zoom out a bit again to see this happening.
107

107

00:05:52,649  -->  00:05:55,929
Okay, just like this, maybe just like this, yeah.
108

108

00:05:55,929  -->  00:05:58,709
So you have this entire container here,
109

109

00:05:58,709  -->  00:06:01,850
and now we see that our tracks here, or rows,
110

110

00:06:01,850  -->  00:06:05,171
they're now vertically inside of this gray container.
111

111

00:06:05,171  -->  00:06:08,108
So let's actually remove this here
112

112

00:06:08,108  -->  00:06:09,391
so you can see it a bit better,
113

113

00:06:09,391  -->  00:06:11,811
and yeah, so you'll see that exactly happening.
114

114

00:06:11,811  -->  00:06:16,247
Turn it back on, and yeah, and let's go back
115

115

00:06:16,247  -->  00:06:19,451
to the size that we had, okay.
116

116

00:06:19,451  -->  00:06:22,509
Then in here, you have actually all the exact same options
117

117

00:06:22,509  -->  00:06:24,733
as you have here in justify-content.
118

118

00:06:24,733  -->  00:06:28,650
Let's just set this one here to center as well,
119

119

00:06:29,971  -->  00:06:33,044
and so, well, what's going on here now?
120

120

00:06:33,044  -->  00:06:35,672
Ah, the semi-colon is missing.
121

121

00:06:35,672  -->  00:06:39,689
And yeah, so now it's completely centered here,
122

122

00:06:39,689  -->  00:06:42,969
so both vertically and horizontally inside the container.
123

123

00:06:42,969  -->  00:06:46,208
And you see that it kind of adds these huge gutters here
124

124

00:06:46,208  -->  00:06:49,151
at the top and on the left side here,
125

125

00:06:49,151  -->  00:06:53,150
in order to put us here in the center of the grid.
126

126

00:06:53,150  -->  00:06:55,127
Right, but that doesn't really matter,
127

127

00:06:55,127  -->  00:06:58,069
it's just to see how Grid actually handles this centering.
128

128

00:06:58,069  -->  00:07:00,891
So let's try, just for example, end,
129

129

00:07:00,891  -->  00:07:03,329
moving it down all the way to the end.
130

130

00:07:03,329  -->  00:07:05,412
Yeah, just like expected.
131

131

00:07:06,650  -->  00:07:09,567
Or let's try space-between as well.
132

132

00:07:13,563  -->  00:07:15,472
So let's see what that does, and yeah,
133

133

00:07:15,472  -->  00:07:17,277
so it's the exact same thing as it does
134

134

00:07:17,277  -->  00:07:19,599
with justify-content, so basically
135

135

00:07:19,599  -->  00:07:22,838
the space between all of these row tracks
136

136

00:07:22,838  -->  00:07:25,537
are now the same, so that it occupies
137

137

00:07:25,537  -->  00:07:28,138
the entire height of the container.
138

138

00:07:28,138  -->  00:07:30,638
Then, of course, space-around,
139

139

00:07:31,633  -->  00:07:34,095
so that also works the same way.
140

140

00:07:34,095  -->  00:07:36,595
Okay, so the space here on top
141

141

00:07:37,491  -->  00:07:40,213
is the same as all of this space here.
142

142

00:07:40,213  -->  00:07:42,750
Well, it doesn't really look like that,
143

143

00:07:42,750  -->  00:07:45,414
but, well, it should, it should be like that.
144

144

00:07:45,414  -->  00:07:48,352
Okay, so let's go back to center here,
145

145

00:07:48,352  -->  00:07:51,690
because again, that's actually the most useful case.
146

146

00:07:51,690  -->  00:07:53,485
So basically, if you want to center
147

147

00:07:53,485  -->  00:07:57,108
all of our items inside of a grid container,
148

148

00:07:57,108  -->  00:07:58,452
that's how we do it.
149

149

00:07:58,452  -->  00:08:01,371
We set justify-content and align-content to center,
150

150

00:08:01,371  -->  00:08:03,114
and that's it, okay?
151

151

00:08:03,114  -->  00:08:07,212
So you see that basically, whenever we have items here
152

152

00:08:07,212  -->  00:08:10,794
in the property name, so align-items and justify-items,
153

153

00:08:10,794  -->  00:08:13,668
that is for the individual items,
154

154

00:08:13,668  -->  00:08:16,732
and if we have content here in property names
155

155

00:08:16,732  -->  00:08:19,700
like we have in justify-content and align-content,
156

156

00:08:19,700  -->  00:08:22,980
then it means that it's gonna align the entire tracks.
157

157

00:08:22,980  -->  00:08:26,306
Then the align part of the name always means
158

158

00:08:26,306  -->  00:08:28,947
the vertical direction, or the column axis,
159

159

00:08:28,947  -->  00:08:30,346
so that's the same.
160

160

00:08:30,346  -->  00:08:33,405
So align-content and also align-items means
161

161

00:08:33,405  -->  00:08:36,923
the vertical direction, so the column axis.
162

162

00:08:36,923  -->  00:08:39,727
And at the same time, justify always means
163

163

00:08:39,727  -->  00:08:43,024
that it's the horizontal direction, so the row axis,
164

164

00:08:43,024  -->  00:08:46,762
both for justify-items and justify-content.
165

165

00:08:46,762  -->  00:08:48,903
So that is the logic behind these names,
166

166

00:08:48,903  -->  00:08:51,122
and I think that's helpful to memorize
167

167

00:08:51,122  -->  00:08:55,342
and to understand what each of these four properties does.
168

168

00:08:55,342  -->  00:08:58,564
Okay, so I hope that this makes sense to you
169

169

00:08:58,564  -->  00:09:00,822
and that you fully understand how we can
170

170

00:09:00,822  -->  00:09:02,767
place our items and our tracks
171

171

00:09:02,767  -->  00:09:05,083
exactly where we want them to be
172

172

00:09:05,083  -->  00:09:07,115
inside of the grid container.
173

173

00:09:07,115  -->  00:09:09,581
So now there's just one more small thing
174

174

00:09:09,581  -->  00:09:12,196
that I want to show you in this small demo project,
175

175

00:09:12,196  -->  00:09:14,935
and so let me just add a small change here
176

176

00:09:14,935  -->  00:09:18,102
to one of these items, so let me style
177

177

00:09:19,140  -->  00:09:20,640
the item number 6.
178

178

00:09:24,277  -->  00:09:28,277
Let's give it a background-color of light coral,
179

179

00:09:34,150  -->  00:09:36,930
and then make it span across two row tracks.
180

180

00:09:36,930  -->  00:09:38,847
So grid-row and span 2.
181

181

00:09:44,965  -->  00:09:47,638
So let's see how that looks like.
182

182

00:09:47,638  -->  00:09:51,313
And so yeah, so it spans now these two rows.
183

183

00:09:51,313  -->  00:09:53,060
And then what I wanted to create here
184

184

00:09:53,060  -->  00:09:56,015
is this empty cell, and this empty cell here
185

185

00:09:56,015  -->  00:09:58,956
comes from the fact that the automatic placement algorithm,
186

186

00:09:58,956  -->  00:10:03,817
it kind of tries to keep the sequence of these items here
187

187

00:10:03,817  -->  00:10:06,978
in the source code, it tries to kind of follow that
188

188

00:10:06,978  -->  00:10:10,290
when it places the grid items on our grid.
189

189

00:10:10,290  -->  00:10:13,000
And so sometimes, that can create these kind of holes here,
190

190

00:10:13,000  -->  00:10:16,194
okay, and we not always want them.
191

191

00:10:16,194  -->  00:10:18,979
And so let me show you how we can actually fix that.
192

192

00:10:18,979  -->  00:10:22,229
Let's just take this out here so we can
193

193

00:10:24,535  -->  00:10:26,573
see it a bit better, and let me also
194

194

00:10:26,573  -->  00:10:28,859
take off this, because it overlays here all our code.
195

195

00:10:28,859  -->  00:10:32,876
I'm not really sure why, but it looks better like this.
196

196

00:10:32,876  -->  00:10:36,534
Okay, so let me actually zoom out here a bit again,
197

197

00:10:36,534  -->  00:10:39,500
and so this is our grid, and this is here the hole,
198

198

00:10:39,500  -->  00:10:41,637
basically, in the grid that I was talking about.
199

199

00:10:41,637  -->  00:10:44,339
And again, that's because the automatic placement algorithm,
200

200

00:10:44,339  -->  00:10:48,081
it tries to keep these eight items here that we have
201

201

00:10:48,081  -->  00:10:50,962
kind of in order, okay, so it tries to follow that order,
202

202

00:10:50,962  -->  00:10:54,361
but if we want to fix that, we can actually do it,
203

203

00:10:54,361  -->  00:10:56,060
and it's very easy, it's very simple.
204

204

00:10:56,060  -->  00:10:58,699
All we have to do is to come here to this property,
205

205

00:10:58,699  -->  00:11:01,640
to grid-auto-flow, and in here we defined
206

206

00:11:01,640  -->  00:11:04,624
that it should flow in rows, right,
207

207

00:11:04,624  -->  00:11:07,463
so that the items should be placed in rows, not in columns.
208

208

00:11:07,463  -->  00:11:11,938
All we have to do here is to add the dense keyword.
209

209

00:11:11,938  -->  00:11:14,343
Okay, and so with this, we say that
210

210

00:11:14,343  -->  00:11:16,943
we actually want no holes in there,
211

211

00:11:16,943  -->  00:11:19,566
and that we want a more dense grid.
212

212

00:11:19,566  -->  00:11:21,428
So with no holes, all the items packed
213

213

00:11:21,428  -->  00:11:23,607
so that all the grid cells are filled
214

214

00:11:23,607  -->  00:11:25,748
with some kind of item, okay?
215

215

00:11:25,748  -->  00:11:28,686
So let's take a look at that again,
216

216

00:11:28,686  -->  00:11:32,524
and so now you'll see that the track that we had down here
217

217

00:11:32,524  -->  00:11:34,787
is now gone, so let me
218

218

00:11:34,787  -->  00:11:38,926
take that out again to show it to you, and you see.
219

219

00:11:38,926  -->  00:11:40,843
So now we had this additional track here,
220

220

00:11:40,843  -->  00:11:43,407
then this hole, and then, yeah, this here
221

221

00:11:43,407  -->  00:11:44,766
you can also call a hole,
222

222

00:11:44,766  -->  00:11:47,070
so another cell without any item in there, okay?
223

223

00:11:47,070  -->  00:11:49,589
And so if you set it back to dense,
224

224

00:11:49,589  -->  00:11:52,966
you will see that now this one here, which said "great,"
225

225

00:11:52,966  -->  00:11:56,602
it's now moved to this place, which was empty before.
226

226

00:11:56,602  -->  00:11:58,805
Okay, and this can be useful sometimes,
227

227

00:11:58,805  -->  00:12:01,908
like if we have an image gallery or something like that,
228

228

00:12:01,908  -->  00:12:05,309
so we may place some images in different grid cells
229

229

00:12:05,309  -->  00:12:08,546
in order to make a good-looking grid of images,
230

230

00:12:08,546  -->  00:12:11,828
and then sometimes they may be some kind of hole,
231

231

00:12:11,828  -->  00:12:14,069
and then we just use the dense keyword
232

232

00:12:14,069  -->  00:12:15,886
in order to fill that hole,
233

233

00:12:15,886  -->  00:12:18,127
and end up with a dense, full-packed grid
234

234

00:12:18,127  -->  00:12:20,002
like this one, without any holes.
235

235

00:12:20,002  -->  00:12:22,467
Okay, so that was just another quick thing
236

236

00:12:22,467  -->  00:12:24,425
that I wanted to show you, and so now
237

237

00:12:24,425  -->  00:12:26,747
we're actually done with this small demo project.
238

238

00:12:26,747  -->  00:12:29,425
So again, you're moving on with a great pace.
239

239

00:12:29,425  -->  00:12:32,227
You already have most of the fundamentals that it takes
240

240

00:12:32,227  -->  00:12:35,669
to start building real-world grid layouts.
241

241

00:12:35,669  -->  00:12:38,206
There's just a couple of more advanced things
242

242

00:12:38,206  -->  00:12:40,691
that we have to learn, and we're gonna do that
243

243

00:12:40,691  -->  00:12:42,606
over the next couple of lectures, okay?
244

244

00:12:42,606  -->  00:12:45,126
So we're gonna start another very small demo project,
245

245

00:12:45,126  -->  00:12:47,586
and then I'm gonna teach you a little bit more
246

246

00:12:47,586  -->  00:12:49,706
advanced stuff in there, okay?
247

247

00:12:49,706  -->  00:12:51,428
So if you wanna do that right now,
248

248

00:12:51,428  -->  00:12:55,595
then let's move on together right to the next video.
