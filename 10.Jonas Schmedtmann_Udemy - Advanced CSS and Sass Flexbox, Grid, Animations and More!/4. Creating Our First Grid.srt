1
1

00:00:00,741  -->  00:00:02,787
<v Jonas>Welcome back.</v>
2

2

00:00:02,787  -->  00:00:05,014
Let's now, finally, get our hands dirty
3

3

00:00:05,014  -->  00:00:08,181
with CSS Grid for the very first time.
4

4

00:00:09,059  -->  00:00:10,764
And so here, I already have a brand new
5

5

00:00:10,764  -->  00:00:13,260
CodePen open in Firefox,
6

6

00:00:13,260  -->  00:00:14,356
as you can see here.
7

7

00:00:14,356  -->  00:00:16,330
So we're working, now, in Firefox,
8

8

00:00:16,330  -->  00:00:18,738
as I was telling you in the last lecture.
9

9

00:00:18,738  -->  00:00:21,438
And you'll actually see why in a second.
10

10

00:00:21,438  -->  00:00:23,926
So when we start using the Firefox dev tools,
11

11

00:00:23,926  -->  00:00:28,012
so let's start by closing JavaScript editor here
12

12

00:00:28,012  -->  00:00:29,660
because of course we don't need it.
13

13

00:00:29,660  -->  00:00:34,371
And now for a small example, let's start with some HTML.
14

14

00:00:34,371  -->  00:00:38,333
So we start with a element called container.
15

15

00:00:38,333  -->  00:00:41,787
And so we used Emmet throughout the course a lot,
16

16

00:00:41,787  -->  00:00:44,941
and it actually also works here in CodePen.
17

17

00:00:44,941  -->  00:00:47,505
And so I'm using that right now to write our markup.
18

18

00:00:47,505  -->  00:00:49,936
So we want the container element,
19

19

00:00:49,936  -->  00:00:52,374
which will actually be our grid container,
20

20

00:00:52,374  -->  00:00:55,364
and then in there we want to have a couple of items.
21

21

00:00:55,364  -->  00:00:57,287
So let's call them item,
22

22

00:00:57,287  -->  00:01:00,712
but I also want to give each of them an individual name.
23

23

00:01:00,712  -->  00:01:01,712
So item one,
24

24

00:01:04,030  -->  00:01:06,680
and so you see we're using the BEM notation here again
25

25

00:01:06,680  -->  00:01:08,847
with this dash, dash here.
26

26

00:01:10,026  -->  00:01:12,776
Now I want this to happen six times,
27

27

00:01:12,776  -->  00:01:15,564
and so I simply can say times six.
28

28

00:01:15,564  -->  00:01:19,046
And what this will do is that it will do six times
29

29

00:01:19,046  -->  00:01:20,888
this part here of the code.
30

30

00:01:20,888  -->  00:01:22,733
So we will have one container element
31

31

00:01:22,733  -->  00:01:25,030
with six items in there.
32

32

00:01:25,030  -->  00:01:27,848
Now the problem with this is that each of these six items
33

33

00:01:27,848  -->  00:01:30,118
will have the number one here.
34

34

00:01:30,118  -->  00:01:33,349
But we don't want that, and so we actually can do better.
35

35

00:01:33,349  -->  00:01:36,374
Because here in Emmet, there's another trick that we can use
36

36

00:01:36,374  -->  00:01:39,688
and it is to use the dollar sign, basically.
37

37

00:01:39,688  -->  00:01:42,267
And so now this dollar sign will get replaced
38

38

00:01:42,267  -->  00:01:44,065
with the current number,
39

39

00:01:44,065  -->  00:01:46,664
so one, two, three, four, five, and six.
40

40

00:01:46,664  -->  00:01:50,902
So let me show that to you when I now actually hit tab here.
41

41

00:01:50,902  -->  00:01:52,748
And so here we go.
42

42

00:01:52,748  -->  00:01:56,148
So one, two, three, four, five, and six.
43

43

00:01:56,148  -->  00:01:58,326
So that's a very handy trick in Emmet
44

44

00:01:58,326  -->  00:01:59,769
that I wanted to show you.
45

45

00:01:59,769  -->  00:02:02,428
Let's now put some content here into these divs,
46

46

00:02:02,428  -->  00:02:05,114
and we're gonna put the number from one to six,
47

47

00:02:05,114  -->  00:02:06,531
and then a color.
48

48

00:02:07,749  -->  00:02:10,033
And so these divs, they will later have
49

49

00:02:10,033  -->  00:02:11,427
these different colors.
50

50

00:02:11,427  -->  00:02:12,260
So orange,
51

51

00:02:13,622  -->  00:02:14,455
green,
52

52

00:02:15,908  -->  00:02:17,658
number three, violet,
53

53

00:02:21,865  -->  00:02:23,447
pink for number four,
54

54

00:02:23,447  -->  00:02:25,447
and then blue and brown.
55

55

00:02:30,137  -->  00:02:31,770
And brown, alright.
56

56

00:02:31,770  -->  00:02:33,620
And let's now actually save this,
57

57

00:02:33,620  -->  00:02:37,201
so I just hit the save button here and then you see
58

58

00:02:37,201  -->  00:02:39,572
that this changes here the URL.
59

59

00:02:39,572  -->  00:02:43,002
And you see that I am actually logged into my account,
60

60

00:02:43,002  -->  00:02:45,317
and so this CodePen will actually be available
61

61

00:02:45,317  -->  00:02:48,607
on my public CodePen profile, if you wanna check that out.
62

62

00:02:48,607  -->  00:02:52,061
So now about the CSS, let's give it some more space
63

63

00:02:52,061  -->  00:02:53,478
here on the side.
64

64

00:02:54,877  -->  00:02:56,923
And let's start by writing some simple styles
65

65

00:02:56,923  -->  00:02:58,614
for the container.
66

66

00:02:58,614  -->  00:03:01,071
So let's just give it some background color,
67

67

00:03:01,071  -->  00:03:02,488
background-color,
68

68

00:03:03,940  -->  00:03:04,773
like #eee.
69

69

00:03:07,558  -->  00:03:10,158
And a width of 1,000 pixels.
70

70

00:03:10,158  -->  00:03:11,637
So now we're not really worrying
71

71

00:03:11,637  -->  00:03:14,503
about using rem and all that stuff,
72

72

00:03:14,503  -->  00:03:16,428
so we just want to make this work.
73

73

00:03:16,428  -->  00:03:19,737
We just want this to be like a small demo.
74

74

00:03:19,737  -->  00:03:22,435
Let's now also center this in the viewport,
75

75

00:03:22,435  -->  00:03:25,360
and for that we can use our old trick,
76

76

00:03:25,360  -->  00:03:26,527
zero and auto.
77

77

00:03:27,936  -->  00:03:30,730
And actually let's put something like 30 pixels in here
78

78

00:03:30,730  -->  00:03:32,565
so that we get some space between
79

79

00:03:32,565  -->  00:03:35,842
the top of this window and the container.
80

80

00:03:35,842  -->  00:03:39,096
Okay, and with that, we're ready to start using grid.
81

81

00:03:39,096  -->  00:03:43,312
So how do we turn an element into a grid container?
82

82

00:03:43,312  -->  00:03:45,895
Well, very simple.
Display grid.
83

83

00:03:47,664  -->  00:03:48,645
And that's it.
84

84

00:03:48,645  -->  00:03:50,314
So now this is a grid container,
85

85

00:03:50,314  -->  00:03:52,657
but nothing really changed, right?
86

86

00:03:52,657  -->  00:03:56,191
And that's because we didn't define any columns or any rows.
87

87

00:03:56,191  -->  00:03:58,039
So that's what we're gonna do next.
88

88

00:03:58,039  -->  00:04:00,357
And here is how it works in grid.
89

89

00:04:00,357  -->  00:04:01,267
So we have a property
90

90

00:04:01,267  -->  00:04:03,434
called grid-template-rows,
91

91

00:04:05,241  -->  00:04:07,624
and in here we can define our rows.
92

92

00:04:07,624  -->  00:04:09,959
So let's say, we want these six elements here
93

93

00:04:09,959  -->  00:04:13,163
to be divided in two rows and three columns.
94

94

00:04:13,163  -->  00:04:16,416
So that makes six, two times three makes six.
95

95

00:04:16,416  -->  00:04:19,214
So we want two rows and three columns.
96

96

00:04:19,214  -->  00:04:21,677
So what we do here is to define these two rows.
97

97

00:04:21,677  -->  00:04:25,449
So I say that the first one should be 150 pixels,
98

98

00:04:25,449  -->  00:04:29,760
and I say that the second one should be 150 pixels as well.
99

99

00:04:29,760  -->  00:04:31,226
And that's it.
100

100

00:04:31,226  -->  00:04:33,837
So that's how grid-template-rows works.
101

101

00:04:33,837  -->  00:04:37,089
We define, basically, the height of our rows.
102

102

00:04:37,089  -->  00:04:39,222
So the first one should be 150 pixels
103

103

00:04:39,222  -->  00:04:41,057
and the second as well.
104

104

00:04:41,057  -->  00:04:42,683
So simple as that.
105

105

00:04:42,683  -->  00:04:45,463
And now let's do the same thing for the columns.
106

106

00:04:45,463  -->  00:04:48,902
So grid-template, and you can guess
107

107

00:04:48,902  -->  00:04:52,579
that this one is called grid-template-columns.
108

108

00:04:52,579  -->  00:04:55,288
So let's also do 150 pixels for now,
109

109

00:04:55,288  -->  00:04:57,370
and later we're gonna change all of this,
110

110

00:04:57,370  -->  00:04:59,560
so this is just a very first approach.
111

111

00:04:59,560  -->  00:05:01,700
And alright, so we see here
112

112

00:05:01,700  -->  00:05:05,259
that they're actually now already laid out as a grid here.
113

113

00:05:05,259  -->  00:05:07,080
That's awesome, right?
114

114

00:05:07,080  -->  00:05:08,698
Now before we actually go inspect this
115

115

00:05:08,698  -->  00:05:12,085
here in the dev tools, let's add some colors here
116

116

00:05:12,085  -->  00:05:16,246
to these items so that we can better see what's going on.
117

117

00:05:16,246  -->  00:05:17,079
Alright.
118

118

00:05:20,220  -->  00:05:23,988
So item, and so first of all let's define some global styles
119

119

00:05:23,988  -->  00:05:25,280
for all of these items.
120

120

00:05:25,280  -->  00:05:29,197
So let's give them a padding of like 20 pixels,
121

121

00:05:32,072  -->  00:05:34,155
a font size of 30 pixels,
122

122

00:05:36,640  -->  00:05:40,807
and font family, and we simply say we want sans-serif.
123

123

00:05:42,893  -->  00:05:47,175
And we say that the color should be white.
124

124

00:05:47,175  -->  00:05:49,910
Okay and now the colors of these items,
125

125

00:05:49,910  -->  00:05:53,038
and actually we can use SASS here again.
126

126

00:05:53,038  -->  00:05:57,064
So you can see here that this is actually SCSS, alright.
127

127

00:05:57,064  -->  00:06:00,563
And so we can construct our selectors like we've been using
128

128

00:06:00,563  -->  00:06:02,896
all the time in the project.
129

129

00:06:04,045  -->  00:06:08,553
Okay, so this here will mean item one, right.
130

130

00:06:08,553  -->  00:06:10,129
Let's do this for all of them,
131

131

00:06:10,129  -->  00:06:12,796
two, three, four, five, and six.
132

132

00:06:14,744  -->  00:06:18,827
So item two, item three, item four, five and six.
133

133

00:06:21,338  -->  00:06:24,921
And let's just give them some quick colors.
134

134

00:06:29,662  -->  00:06:31,896
And my orangered again,
135

135

00:06:31,896  -->  00:06:34,979
okay so the first one will be orange.
136

136

00:06:35,867  -->  00:06:38,950
Let's quickly copy this here as well.
137

137

00:06:46,329  -->  00:06:48,746
This one will be yellowgreen,
138

138

00:06:50,531  -->  00:06:53,802
blueviolet, so these are just some built-in CSS colors
139

139

00:06:53,802  -->  00:06:55,894
as you know already.
140

140

00:06:55,894  -->  00:06:58,985
This one is called palevioletred,
141

141

00:06:58,985  -->  00:07:01,946
so this kind of weird color.
142

142

00:07:01,946  -->  00:07:06,113
This one is royalblue, and then goldenrod or something.
143

143

00:07:08,232  -->  00:07:12,352
Alright so now we can see that our grid is really laid out
144

144

00:07:12,352  -->  00:07:14,948
in a three per two fashion here,
145

145

00:07:14,948  -->  00:07:19,472
with these squares which are each 150 per 150 pixels, right.
146

146

00:07:19,472  -->  00:07:22,417
So just as we defined up here.
147

147

00:07:22,417  -->  00:07:24,217
And now let's actually inspect this here,
148

148

00:07:24,217  -->  00:07:26,862
and this works very similarly to Google Chrome,
149

149

00:07:26,862  -->  00:07:29,546
so we say inspect element,
150

150

00:07:29,546  -->  00:07:32,188
and let's now actually put this here on the side.
151

151

00:07:32,188  -->  00:07:34,605
So just hit this button here.
152

152

00:07:37,332  -->  00:07:41,302
And okay, so we have more space to actually see the grid.
153

153

00:07:41,302  -->  00:07:43,609
Now here in the markup, as you start hovering
154

154

00:07:43,609  -->  00:07:47,583
these items here, you see the lines in the page, right.
155

155

00:07:47,583  -->  00:07:49,595
So this is the grid container here,
156

156

00:07:49,595  -->  00:07:52,999
and then all of these grid items, right.
157

157

00:07:52,999  -->  00:07:54,935
But that's actually not the best part
158

158

00:07:54,935  -->  00:07:57,857
because if we select the container here,
159

159

00:07:57,857  -->  00:08:00,414
we see here display: grid, right
160

160

00:08:00,414  -->  00:08:03,381
and when you click this item here,
161

161

00:08:03,381  -->  00:08:05,907
then you can actually see a nice grid overlay
162

162

00:08:05,907  -->  00:08:07,157
on the element.
163

163

00:08:08,019  -->  00:08:10,841
So we can now come here to this layout tab
164

164

00:08:10,841  -->  00:08:12,467
to see this even better.
165

165

00:08:12,467  -->  00:08:15,507
So this is our container that we have,
166

166

00:08:15,507  -->  00:08:17,732
with our six items in there.
167

167

00:08:17,732  -->  00:08:20,478
And now we can display line numbers here,
168

168

00:08:20,478  -->  00:08:22,024
which makes it even better.
169

169

00:08:22,024  -->  00:08:24,541
And so now you see these line numbers.
170

170

00:08:24,541  -->  00:08:26,922
So remember from the first intro lecture
171

171

00:08:26,922  -->  00:08:28,992
where I told you that the column lines
172

172

00:08:28,992  -->  00:08:31,769
and the row lines get automatically numbered.
173

173

00:08:31,769  -->  00:08:35,595
And so here it is.
One, two, three, and four,
174

174

00:08:35,595  -->  00:08:37,808
which are three columns, plus one.
175

175

00:08:37,808  -->  00:08:40,232
And then one, two, three, for the lines.
176

176

00:08:40,232  -->  00:08:44,038
Okay, and so that makes it a lot easier to build CSS grids
177

177

00:08:44,038  -->  00:08:46,894
here using the inspector.
178

178

00:08:46,894  -->  00:08:49,196
You can actually also see the grid lines in here,
179

179

00:08:49,196  -->  00:08:51,991
like these dashed lines that you can see.
180

180

00:08:51,991  -->  00:08:53,942
Maybe it's not really visible right now
181

181

00:08:53,942  -->  00:08:56,482
but you are gonna see it a bit better in a second,
182

182

00:08:56,482  -->  00:08:59,653
because let's now add another thing to our grid.
183

183

00:08:59,653  -->  00:09:01,792
So remember that I told you that we can also have
184

184

00:09:01,792  -->  00:09:05,261
space between the grid items, right?
185

185

00:09:05,261  -->  00:09:07,561
And that's called the gutter.
186

186

00:09:07,561  -->  00:09:09,728
So let's add grid-row-gap,
187

187

00:09:12,829  -->  00:09:14,804
and let's set it to 20 pixels.
188

188

00:09:14,804  -->  00:09:16,539
And what's gonna happen?
189

189

00:09:16,539  -->  00:09:19,006
Yeah, here we have the gap now.
190

190

00:09:19,006  -->  00:09:23,222
Let's make it a bit bigger actually, so 30 pixels.
191

191

00:09:23,222  -->  00:09:25,239
And so this is the gap.
192

192

00:09:25,239  -->  00:09:29,322
We can, of course, also put a gap in the columns.
193

193

00:09:30,979  -->  00:09:34,694
So grid-column-gap, as you can guess.
194

194

00:09:34,694  -->  00:09:36,776
30 pixels as well.
195

195

00:09:36,776  -->  00:09:40,185
And alright, once more, the dev tools show us
196

196

00:09:40,185  -->  00:09:43,945
the gap here, and now you can also see the grid lines
197

197

00:09:43,945  -->  00:09:45,489
a bit better here, right.
198

198

00:09:45,489  -->  00:09:48,814
So they're limiting here each of these grid items.
199

199

00:09:48,814  -->  00:09:52,118
So of course we can also change the column gap
200

200

00:09:52,118  -->  00:09:54,302
to something else than the row gap.
201

201

00:09:54,302  -->  00:09:56,782
So remember I mentioned that as well before,
202

202

00:09:56,782  -->  00:09:59,962
so we can have different gaps for columns and for the rows.
203

203

00:09:59,962  -->  00:10:03,278
Now if you want to have the same gap for everything,
204

204

00:10:03,278  -->  00:10:07,445
you can simply use grid-gap, and set it to 30 pixels.
205

205

00:10:10,157  -->  00:10:12,384
And then it will all be the same.
206

206

00:10:12,384  -->  00:10:15,708
So let's comment out these ones here,
207

207

00:10:15,708  -->  00:10:18,557
just so you keep them here in the code.
208

208

00:10:18,557  -->  00:10:19,543
Okay, and that's it.
209

209

00:10:19,543  -->  00:10:22,322
That is our very first CSS grid.
210

210

00:10:22,322  -->  00:10:24,985
You see how easy it was to put these six elements here
211

211

00:10:24,985  -->  00:10:27,640
in this very simple grid layout?
212

212

00:10:27,640  -->  00:10:30,666
No floats, no weird HTML tricks here,
213

213

00:10:30,666  -->  00:10:33,256
because imagine if you wanted to do this very same layout
214

214

00:10:33,256  -->  00:10:34,345
without grid.
215

215

00:10:34,345  -->  00:10:36,192
We would have to have just a wrapper
216

216

00:10:36,192  -->  00:10:39,005
for these three items here, and then a wrapper
217

217

00:10:39,005  -->  00:10:41,872
for the second three items here.
218

218

00:10:41,872  -->  00:10:43,557
And that's really not practical at all,
219

219

00:10:43,557  -->  00:10:47,164
it's so much better laying these items out like this.
220

220

00:10:47,164  -->  00:10:49,534
So before ending this lecture, let's just very quickly
221

221

00:10:49,534  -->  00:10:51,590
recap what we did here.
222

222

00:10:51,590  -->  00:10:54,905
So we first set the display property to grid,
223

223

00:10:54,905  -->  00:10:57,845
and then we defined our rows,
224

224

00:10:57,845  -->  00:11:00,092
so the template rows for the grid.
225

225

00:11:00,092  -->  00:11:02,873
And in this case, we basically said that we want to have
226

226

00:11:02,873  -->  00:11:06,100
two rows, each of them with 150 pixels.
227

227

00:11:06,100  -->  00:11:09,367
You could also put the second one to 100 pixels for example,
228

228

00:11:09,367  -->  00:11:12,604
then of course it would become smaller.
229

229

00:11:12,604  -->  00:11:14,802
So the first value for the first row,
230

230

00:11:14,802  -->  00:11:16,958
and the second value for the second row.
231

231

00:11:16,958  -->  00:11:18,945
And then of course, the same for the columns.
232

232

00:11:18,945  -->  00:11:20,861
So we said we want three columns,
233

233

00:11:20,861  -->  00:11:23,561
basically each one with 150 pixels.
234

234

00:11:23,561  -->  00:11:26,047
And we can actually do a bit better here with this,
235

235

00:11:26,047  -->  00:11:28,943
but I'm gonna show you that in the next lecture.
236

236

00:11:28,943  -->  00:11:33,007
For now, I just want you to get the basics really right.
237

237

00:11:33,007  -->  00:11:35,496
So we defined our grid in terms of rows and columns,
238

238

00:11:35,496  -->  00:11:38,435
and then we also added some gaps here.
239

239

00:11:38,435  -->  00:11:41,806
So a row gap, and a column gap, which can be different
240

240

00:11:41,806  -->  00:11:44,261
but if we want them to be the same, we can simply use
241

241

00:11:44,261  -->  00:11:47,759
the grid-gap property to set both of them at the same time.
242

242

00:11:47,759  -->  00:11:50,821
Then we also inspected them here in the dev tools,
243

243

00:11:50,821  -->  00:11:54,261
and don't forget to check this display line numbers box here
244

244

00:11:54,261  -->  00:11:56,706
so that you can actually see the line numbers
245

245

00:11:56,706  -->  00:11:59,506
because we're gonna need that in the next lecture.
246

246

00:11:59,506  -->  00:12:02,469
And that's it, that's the very fundamentals of CSS grid.
247

247

00:12:02,469  -->  00:12:06,352
But there's a lot more, of course, a ton more to learn.
248

248

00:12:06,352  -->  00:12:09,115
And so I'm gonna wait for you right in the next lecture.
249

249

00:12:09,115  -->  00:12:10,782
See you in a second.
