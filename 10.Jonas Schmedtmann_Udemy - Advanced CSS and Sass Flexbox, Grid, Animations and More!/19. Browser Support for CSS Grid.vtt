WEBVTT
1
1

00:00:01.019  -->  00:00:02.815
<v Narrator>So with CSS Grid being a</v>
2

2

00:00:02.815  -->  00:00:05.463
relatively new and modern technology,
3

3

00:00:05.463  -->  00:00:08.139
of course we need to talk about browser support
4

4

00:00:08.139  -->  00:00:10.187
before finishing up this section.
5

5

00:00:10.187  -->  00:00:13.130
And so that's what we're gonna do in this video.
6

6

00:00:13.130  -->  00:00:15.789
And let's start by looking at the Grid support
7

7

00:00:15.789  -->  00:00:18.027
here at caniuse.com.
8

8

00:00:18.027  -->  00:00:19.520
So that's always a reference
9

9

00:00:19.520  -->  00:00:22.429
for checking which CSS features are available
10

10

00:00:22.429  -->  00:00:23.930
on which browsers.
11

11

00:00:23.930  -->  00:00:25.768
And so you see that actually,
12

12

00:00:25.768  -->  00:00:28.938
the support for CSS Grid is fairly good.
13

13

00:00:28.938  -->  00:00:31.938
So like 77% of the global users
14

14

00:00:32.846  -->  00:00:35.571
do right now, support CSS Grid.
15

15

00:00:35.571  -->  00:00:37.775
And we can also see that all modern browsers,
16

16

00:00:37.775  -->  00:00:39.959
as of today, support Grid.
17

17

00:00:39.959  -->  00:00:42.493
So the current version of Edge, Firefox, Chrome,
18

18

00:00:42.493  -->  00:00:44.976
Safari, and iOS Safari.
19

19

00:00:44.976  -->  00:00:48.051
And also Chrome for Android here, and Samsung Internet.
20

20

00:00:48.051  -->  00:00:51.483
So the start browser of the Samsung phones.
21

21

00:00:51.483  -->  00:00:53.940
Now the problems here are, as always,
22

22

00:00:53.940  -->  00:00:57.937
the older Internet Explorers and also Microsoft Edge.
23

23

00:00:57.937  -->  00:00:59.969
So the old Internet Explorer has
24

24

00:00:59.969  -->  00:01:03.296
a very old specification of Grid,
25

25

00:01:03.296  -->  00:01:04.906
which is not really usable.
26

26

00:01:04.906  -->  00:01:07.320
So we actually don't even prefix the Grid properties
27

27

00:01:07.320  -->  00:01:09.414
for the older Internet Explorers
28

28

00:01:09.414  -->  00:01:12.323
because it's not even worth it, okay?
29

29

00:01:12.323  -->  00:01:15.359
So based on this scenario, of course the question is,
30

30

00:01:15.359  -->  00:01:19.142
as always, can I use CSS Grid in production today?
31

31

00:01:19.142  -->  00:01:22.262
And by today, I mean by the end of 2017,
32

32

00:01:22.262  -->  00:01:26.206
when I'm recording this video, or even sometime in 2018.
33

33

00:01:26.206  -->  00:01:28.787
Now if you're watching this in the far future,
34

34

00:01:28.787  -->  00:01:31.525
then you probably don't have to worry about any of this,
35

35

00:01:31.525  -->  00:01:34.466
but right now, in this year and the next year,
36

36

00:01:34.466  -->  00:01:37.564
we will have to think about this, okay?
37

37

00:01:37.564  -->  00:01:42.088
And as always, the answer depends on a lot of factors.
38

38

00:01:42.088  -->  00:01:43.289
For example, if you know
39

39

00:01:43.289  -->  00:01:46.066
that your audience are mostly high-tech users,
40

40

00:01:46.066  -->  00:01:48.989
which will most likely all use the modern browsers,
41

41

00:01:48.989  -->  00:01:52.104
then probably using CSS Grid is no problem.
42

42

00:01:52.104  -->  00:01:54.005
But if you know that it's the other way around,
43

43

00:01:54.005  -->  00:01:56.129
so if you can guess that your audience
44

44

00:01:56.129  -->  00:01:57.908
are not so technical people,
45

45

00:01:57.908  -->  00:01:59.147
and that many of them maybe
46

46

00:01:59.147  -->  00:02:02.010
haven't updated from an old Internet Explorer,
47

47

00:02:02.010  -->  00:02:04.068
or even from an old Safari here,
48

48

00:02:04.068  -->  00:02:06.456
which also doesn't support Grid, then in that case,
49

49

00:02:06.456  -->  00:02:10.085
maybe it's not so safe to use it in production right now.
50

50

00:02:10.085  -->  00:02:14.197
At least, not without having a fallback, okay?
51

51

00:02:14.197  -->  00:02:16.372
And speaking about fallbacks,
52

52

00:02:16.372  -->  00:02:19.294
that brings us to something called progressive enhancement.
53

53

00:02:19.294  -->  00:02:21.633
And I think I've talked about this before in the course,
54

54

00:02:21.633  -->  00:02:23.999
and so let's talk about it again here
55

55

00:02:23.999  -->  00:02:25.824
in the case of CSS Grid.
56

56

00:02:25.824  -->  00:02:27.601
So basically with progressive enhancement,
57

57

00:02:27.601  -->  00:02:30.358
we build a page with the older CSS methods,
58

58

00:02:30.358  -->  00:02:32.858
pretending that new stuff like Flexbox
59

59

00:02:32.858  -->  00:02:34.967
and Grid doesn't even exist.
60

60

00:02:34.967  -->  00:02:38.006
And then on top of that, we build our layout with CSS Grid,
61

61

00:02:38.006  -->  00:02:40.592
if the browser supports it, okay?
62

62

00:02:40.592  -->  00:02:43.459
Now I'm actually not a huge fan of doing that,
63

63

00:02:43.459  -->  00:02:45.775
because that means that we have duplicate work
64

64

00:02:45.775  -->  00:02:49.119
and that we still have to mess around with all this old code
65

65

00:02:49.119  -->  00:02:53.053
and if we decide to write our code with older methods,
66

66

00:02:53.053  -->  00:02:54.663
like float layouts and all that,
67

67

00:02:54.663  -->  00:02:56.310
then we might as well leave it like that
68

68

00:02:56.310  -->  00:02:59.435
and not use any CSS Grid at all.
69

69

00:02:59.435  -->  00:03:01.040
But anyway, I'm going to show you
70

70

00:03:01.040  -->  00:03:03.740
how we could theoretically go about doing that.
71

71

00:03:03.740  -->  00:03:06.038
So in case you want to use progressive enhancement,
72

72

00:03:06.038  -->  00:03:09.672
with CSS Grid, I'm going to show you how you can do it.
73

73

00:03:09.672  -->  00:03:12.705
So I'm going to use just a small example of our page,
74

74

00:03:12.705  -->  00:03:15.195
which is this section here,
75

75

00:03:15.195  -->  00:03:18.380
So basically laying out these six items here,
76

76

00:03:18.380  -->  00:03:21.024
in a 3x2 grid, all right?
77

77

00:03:21.024  -->  00:03:24.691
So let's come here to our code editor again,
78

78

00:03:25.859  -->  00:03:28.912
and open up the "features" file.
79

79

00:03:28.912  -->  00:03:31.317
And so what takes care here of aligning the elements
80

80

00:03:31.317  -->  00:03:35.734
in the 3x2 grid is this part here of the code.
81

81

00:03:35.734  -->  00:03:39.383
So let's just pretend it doesn't exist for now.
82

82

00:03:39.383  -->  00:03:41.847
So let's pretend we cannot use CSS Grid
83

83

00:03:41.847  -->  00:03:45.612
and then this is what it would look like, okay?
84

84

00:03:45.612  -->  00:03:48.565
So without CSS Grid enabled in a browser,
85

85

00:03:48.565  -->  00:03:49.965
this is what it would look like.
86

86

00:03:49.965  -->  00:03:51.977
And actually a bit worse, even,
87

87

00:03:51.977  -->  00:03:55.901
because we also used CSS Grid for each of these items.
88

88

00:03:55.901  -->  00:04:00.028
So we would have to deactivate it here as well,
89

89

00:04:00.028  -->  00:04:02.604
and so that's what it would look like,
90

90

00:04:02.604  -->  00:04:05.628
completely without CSS Grid, okay?
91

91

00:04:05.628  -->  00:04:09.571
But anyway, let's now try to lay out these items
92

92

00:04:09.571  -->  00:04:11.237
like we had them before.
93

93

00:04:11.237  -->  00:04:14.453
So in this grid here, like this.
94

94

00:04:14.453  -->  00:04:16.624
So how could we do that?
95

95

00:04:16.624  -->  00:04:19.597
Well, we would actually have to use float
96

96

00:04:19.597  -->  00:04:22.017
on each of the feature.
97

97

00:04:22.017  -->  00:04:23.600
So let's come here,
98

98

00:04:25.896  -->  00:04:27.979
and write "float: left;".
99

99

00:04:28.826  -->  00:04:31.682
So let's take a look at that.
100

100

00:04:31.682  -->  00:04:33.366
And that's actually not doing anything,
101

101

00:04:33.366  -->  00:04:35.312
because we have to give them a width
102

102

00:04:35.312  -->  00:04:36.593
so these block elements,
103

103

00:04:36.593  -->  00:04:39.606
they're now occupying 100% of the available width.
104

104

00:04:39.606  -->  00:04:41.789
And so if we give each of them
105

105

00:04:41.789  -->  00:04:44.956
like 1/3, so 33.3333%,
106

106

00:04:47.753  -->  00:04:50.855
then that should probably look like what we want.
107

107

00:04:50.855  -->  00:04:51.946
Okay.
108

108

00:04:51.946  -->  00:04:54.963
Now let's just give it some margin here at the bottom.
109

109

00:04:54.963  -->  00:04:57.046
(typing)
110

110

00:04:59.069  -->  00:05:01.569
six rem, and then some padding
111

111

00:05:03.087  -->  00:05:04.863
to each of them as well.
112

112

00:05:04.863  -->  00:05:07.613
And whoa, that actually looks not
113

113

00:05:08.487  -->  00:05:09.942
like we want it to look
114

114

00:05:09.942  -->  00:05:14.395
so let's just get rid here of the padding, okay
115

115

00:05:14.395  -->  00:05:18.434
So yeah, that kind of looks like what we had before
116

116

00:05:18.434  -->  00:05:20.690
so I am not doing this in a perfect way, I know,
117

117

00:05:20.690  -->  00:05:23.173
but it's just to show you how we could do it
118

118

00:05:23.173  -->  00:05:24.943
with progressive enhancement.
119

119

00:05:24.943  -->  00:05:27.765
So how can we now add the CSS Grid stuff
120

120

00:05:27.765  -->  00:05:29.106
on top of this?
121

121

00:05:29.106  -->  00:05:31.022
Well, just as I showed you before,
122

122

00:05:31.022  -->  00:05:34.151
we can use the supports at-rule, okay?
123

123

00:05:34.151  -->  00:05:35.631
And so I can write
124

124

00:05:35.631  -->  00:05:38.153
(typing)
125

125

00:05:38.153  -->  00:05:42.320
"@supports" and test if the browser supports display grid.
126

126

00:05:45.911  -->  00:05:50.078
And if it does so, then we want this code here to execute.
127

127

00:05:53.601  -->  00:05:56.012
Right? Does that make sense?
128

128

00:05:56.012  -->  00:05:57.956
But that's actually not all that we have to do
129

129

00:05:57.956  -->  00:06:01.021
in case that the browser supports Grid, right?
130

130

00:06:01.021  -->  00:06:03.540
Because right now, we also have this code here active.
131

131

00:06:03.540  -->  00:06:06.629
And so that would look like this, okay?
132

132

00:06:06.629  -->  00:06:08.382
So that's also not what we want
133

133

00:06:08.382  -->  00:06:12.382
and so let's put the feature query here as well.
134

134

00:06:15.743  -->  00:06:16.576
@supports
135

135

00:06:19.563  -->  00:06:20.646
display: grid
136

136

00:06:21.785  -->  00:06:24.471
and then let's basically reset these properties.
137

137

00:06:24.471  -->  00:06:26.341
Now we don't have to do it for all of them
138

138

00:06:26.341  -->  00:06:28.669
because certain things are actually ignored
139

139

00:06:28.669  -->  00:06:31.212
by grid containers and grid items.
140

140

00:06:31.212  -->  00:06:34.962
And the same applies to flex containers and flex items.
141

141

00:06:34.962  -->  00:06:38.612
So what gets ignored by CSS Grid and Flexbox,
142

142

00:06:38.612  -->  00:06:43.252
are floats, display, inline-block, display:table-cell,
143

143

00:06:43.252  -->  00:06:46.245
and vertical-align altogether, okay?
144

144

00:06:46.245  -->  00:06:49.340
So this float here, we don't have to reset it
145

145

00:06:49.340  -->  00:06:50.966
because it's actually ignored
146

146

00:06:50.966  -->  00:06:54.409
now that this feature here is a grid item.
147

147

00:06:54.409  -->  00:06:59.274
So all we have to do is to reset this width here,
148

148

00:06:59.274  -->  00:07:00.524
set it to auto,
149

149

00:07:02.245  -->  00:07:06.378
and the margin-bottom, we also need to get rid of that.
150

150

00:07:06.378  -->  00:07:09.024
(typing)
151

151

00:07:09.024  -->  00:07:09.857
So zero.
152

152

00:07:10.863  -->  00:07:14.096
And here we go. So we're back to normal.
153

153

00:07:14.096  -->  00:07:17.053
And if we had a browser now, which wouldn't support Grid,
154

154

00:07:17.053  -->  00:07:20.831
then it would simply display it to as we had it before.
155

155

00:07:20.831  -->  00:07:25.180
So basically, without this code, and without this code.
156

156

00:07:25.180  -->  00:07:27.454
All right? So you could now go ahead
157

157

00:07:27.454  -->  00:07:29.882
and build the entire page like this
158

158

00:07:29.882  -->  00:07:33.769
using the older methods basically as a fallback.
159

159

00:07:33.769  -->  00:07:34.735
And that would mean of course
160

160

00:07:34.735  -->  00:07:36.975
that you would have a lot of duplicate work
161

161

00:07:36.975  -->  00:07:39.262
and also the website would look different
162

162

00:07:39.262  -->  00:07:42.009
on different browsers, but that's not really a problem.
163

163

00:07:42.009  -->  00:07:44.911
The problem here is all the duplicate work and again,
164

164

00:07:44.911  -->  00:07:48.638
that's why I'm not really a fan of doing it like this.
165

165

00:07:48.638  -->  00:07:51.637
So just to wrap up, in conclusion, it really depends
166

166

00:07:51.637  -->  00:07:54.871
on your audience if you can use CSS Grid today
167

167

00:07:54.871  -->  00:07:56.167
in production or not.
168

168

00:07:56.167  -->  00:08:00.306
I think that personally, I'm gonna go all in with CSS Grid
169

169

00:08:00.306  -->  00:08:03.789
next year when I'm redesigning my personal website, okay?
170

170

00:08:03.789  -->  00:08:07.384
But that's again because I think that most of the visitors,
171

171

00:08:07.384  -->  00:08:09.424
so people like you taking my course,
172

172

00:08:09.424  -->  00:08:11.892
are more technical users, so I think that people like you
173

173

00:08:11.892  -->  00:08:13.570
use all the modern browsers
174

174

00:08:13.570  -->  00:08:16.552
and so I'm pretty sure that I'm not leaving out many people
175

175

00:08:16.552  -->  00:08:18.893
if I'm using CSS Grid.
176

176

00:08:18.893  -->  00:08:20.772
Okay, and with that being said,
177

177

00:08:20.772  -->  00:08:23.268
we are now done with our project.
178

178

00:08:23.268  -->  00:08:24.430
In the next lecture,
179

179

00:08:24.430  -->  00:08:26.793
we will just have some final considerations
180

180

00:08:26.793  -->  00:08:30.960
and then really wrap up the section and this project.
