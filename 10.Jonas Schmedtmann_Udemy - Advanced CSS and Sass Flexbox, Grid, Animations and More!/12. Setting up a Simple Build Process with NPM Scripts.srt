1
1

00:00:00,949  -->  00:00:02,586
<v Instructor>So, over these last lectures,</v>
2

2

00:00:02,586  -->  00:00:05,024
I promised that I would show you some more stuff
3

3

00:00:05,024  -->  00:00:06,812
that you can do with npm packages
4

4

00:00:06,812  -->  00:00:08,531
and npm scripts, right?
5

5

00:00:08,531  -->  00:00:11,549
Like automatically adding prefixes to some properties,
6

6

00:00:11,549  -->  00:00:13,279
or compressing code.
7

7

00:00:13,279  -->  00:00:15,891
And so that's what we're gonna do in this lecture.
8

8

00:00:15,891  -->  00:00:16,971
We are going to build something
9

9

00:00:16,971  -->  00:00:19,804
developers call a build process.
10

10

00:00:19,804  -->  00:00:21,974
And what is a build process?
11

11

00:00:21,974  -->  00:00:24,850
Well, it's basically just a sequence of tasks
12

12

00:00:24,850  -->  00:00:26,765
that we perform automatically
13

13

00:00:26,765  -->  00:00:28,913
after we finish developing a product
14

14

00:00:28,913  -->  00:00:30,886
or a certain feature of a product.
15

15

00:00:30,886  -->  00:00:32,710
And the result of the build process
16

16

00:00:32,710  -->  00:00:34,962
are one or more final files,
17

17

00:00:34,962  -->  00:00:36,808
which are then ready for production.
18

18

00:00:36,808  -->  00:00:38,073
Which means basically,
19

19

00:00:38,073  -->  00:00:40,778
ready to be deployed to a web server.
20

20

00:00:40,778  -->  00:00:44,157
So, what you see here is the very simple build process,
21

21

00:00:44,157  -->  00:00:46,558
that we're gonna implement in a second.
22

22

00:00:46,558  -->  00:00:48,766
We just start with our main.sass file
23

23

00:00:48,766  -->  00:00:51,448
and then of course compile it to a css file
24

24

00:00:51,448  -->  00:00:53,364
as we've been doing all this time.
25

25

00:00:53,364  -->  00:00:56,429
Then, we want to merge the content of that css file
26

26

00:00:56,429  -->  00:00:59,156
with the css and the icon-font file
27

27

00:00:59,156  -->  00:01:02,441
so that we can go from including two css files in our page
28

28

00:01:02,441  -->  00:01:05,156
to only one, which is a lot better.
29

29

00:01:05,156  -->  00:01:08,001
And that process is called concatenation.
30

30

00:01:08,001  -->  00:01:10,369
Then, from there, we wanna automatically
31

31

00:01:10,369  -->  00:01:12,564
add prefixes to our code, right?
32

32

00:01:12,564  -->  00:01:16,207
And so that's the next step in the build process.
33

33

00:01:16,207  -->  00:01:18,299
And then finally, the last step,
34

34

00:01:18,299  -->  00:01:21,596
is to compress the entire code we have at this stage.
35

35

00:01:21,596  -->  00:01:24,487
And that's it, just four simple steps.
36

36

00:01:24,487  -->  00:01:26,786
Nothing all too complicated.
37

37

00:01:26,786  -->  00:01:31,393
So, let's now create this build process with npm scripts.
38

38

00:01:31,393  -->  00:01:34,840
Alright, and we do that right here in the package.json file.
39

39

00:01:34,840  -->  00:01:36,270
Now, the first thing that I wanna do is
40

40

00:01:36,270  -->  00:01:38,532
to actually change the name of this script
41

41

00:01:38,532  -->  00:01:39,439
that we already have,
42

42

00:01:39,439  -->  00:01:41,179
which is called compile:sass,
43

43

00:01:41,179  -->  00:01:44,966
and I wanna change it to watch:sass.
44

44

00:01:44,966  -->  00:01:46,927
Because next, I wanna add a script
45

45

00:01:46,927  -->  00:01:50,805
which will compile the sass but without watching it, okay?
46

46

00:01:50,805  -->  00:01:54,309
So, it's actually pretty much the same as this.
47

47

00:01:54,309  -->  00:01:55,507
We have to add a comma here
48

48

00:01:55,507  -->  00:01:58,201
if you want to add a new one, okay?
49

49

00:01:58,201  -->  00:02:01,034
And this one I wanna call compile.
50

50

00:02:01,941  -->  00:02:05,338
But, as I said, without the watch part, okay?
51

51

00:02:05,338  -->  00:02:08,114
And actually I wanna compile it to another file.
52

52

00:02:08,114  -->  00:02:09,635
So, we go from main, of course,
53

53

00:02:09,635  -->  00:02:11,242
which is our main.sass file,
54

54

00:02:11,242  -->  00:02:14,659
and I wanna call it style.comp.css, okay?
55

55

00:02:16,087  -->  00:02:18,757
So, comp stands for compiled.
56

56

00:02:18,757  -->  00:02:22,436
Now, right now we still have our code running in here,
57

57

00:02:22,436  -->  00:02:25,537
so let's actually close these two.
58

58

00:02:25,537  -->  00:02:29,704
So, terminate, add a new tab, and then close this one.
59

59

00:02:32,213  -->  00:02:33,314
Okay?
60

60

00:02:33,314  -->  00:02:35,999
So, if we now run our compile sass script,
61

61

00:02:35,999  -->  00:02:37,773
we should actually end up with the same code
62

62

00:02:37,773  -->  00:02:39,586
as we had before, right?
63

63

00:02:39,586  -->  00:02:42,686
The only difference is that it puts that into a new file
64

64

00:02:42,686  -->  00:02:46,250
and that it's not going to watch for changes, okay?
65

65

00:02:46,250  -->  00:02:48,848
So let's just test that out.
66

66

00:02:48,848  -->  00:02:50,598
npm run compile:sass.
67

67

00:02:55,469  -->  00:02:58,383
And alright, so you saw that it finished, you know,
68

68

00:02:58,383  -->  00:03:01,434
and it created a new file here as well.
69

69

00:03:01,434  -->  00:03:03,767
So, style.comp.css, alright?
70

70

00:03:04,884  -->  00:03:08,031
And I'm doing that here in a different script
71

71

00:03:08,031  -->  00:03:10,004
or a different task because these here
72

72

00:03:10,004  -->  00:03:11,932
are actually called tasks, okay?
73

73

00:03:11,932  -->  00:03:13,789
So, I'm doing this in a different task
74

74

00:03:13,789  -->  00:03:15,635
because then later I want to combine
75

75

00:03:15,635  -->  00:03:18,758
all of these tasks for our build process
76

76

00:03:18,758  -->  00:03:20,117
and then that one should, of course,
77

77

00:03:20,117  -->  00:03:22,311
not be watching for changes, okay?
78

78

00:03:22,311  -->  00:03:24,236
And so we want one that watches the changes,
79

79

00:03:24,236  -->  00:03:25,202
which is this one,
80

80

00:03:25,202  -->  00:03:27,093
and then we want one that we can use
81

81

00:03:27,093  -->  00:03:28,580
at the end of our project
82

82

00:03:28,580  -->  00:03:30,589
when we run the build process.
83

83

00:03:30,589  -->  00:03:33,506
So, the next step is to concatenate
84

84

00:03:34,638  -->  00:03:37,508
our existing css files, right?
85

85

00:03:37,508  -->  00:03:38,758
So, concat:css.
86

86

00:03:41,291  -->  00:03:43,708
And of course, these names that I'm using here
87

87

00:03:43,708  -->  00:03:45,763
don't have to be these exact names.
88

88

00:03:45,763  -->  00:03:47,783
So, you can just call it concat,
89

89

00:03:47,783  -->  00:03:49,860
or concatenation, or whatever you want.
90

90

00:03:49,860  -->  00:03:51,406
I just like to use this format
91

91

00:03:51,406  -->  00:03:52,915
where we first describe what we do
92

92

00:03:52,915  -->  00:03:55,933
and then we say to what type of code it is applied.
93

93

00:03:55,933  -->  00:03:57,592
And so this case, concat.
94

94

00:03:57,592  -->  00:04:00,891
Now, how do we concatenate multiple css files?
95

95

00:04:00,891  -->  00:04:04,269
Well, once again, there is an npm package for that.
96

96

00:04:04,269  -->  00:04:06,626
And it's called just concat.
97

97

00:04:06,626  -->  00:04:08,376
So, let's install it.
98

98

00:04:09,842  -->  00:04:11,759
So, npm install concat,
99

99

00:04:14,161  -->  00:04:17,061
and then remember we're gonna save it to dev,
100

100

00:04:17,061  -->  00:04:18,478
so as a dev dependency,
101

101

00:04:18,478  -->  00:04:22,145
so that it's added to our package.json file.
102

102

00:04:24,006  -->  00:04:25,388
And so that's it.
103

103

00:04:25,388  -->  00:04:27,559
Now, how do we actually use this?
104

104

00:04:27,559  -->  00:04:30,264
Well, in case that you don't know, for example,
105

105

00:04:30,264  -->  00:04:33,847
you can usually just Google like npm concat
106

106

00:04:36,522  -->  00:04:37,880
and usually the first result
107

107

00:04:37,880  -->  00:04:39,480
is the one that you're looking for,
108

108

00:04:39,480  -->  00:04:42,325
which will take you to npmjs.com.
109

109

00:04:42,325  -->  00:04:45,332
And so here, each npm package has its own page
110

110

00:04:45,332  -->  00:04:48,281
where you can look up how it's actually used.
111

111

00:04:48,281  -->  00:04:51,044
You can see the stats, so how many people download it.
112

112

00:04:51,044  -->  00:04:53,436
You can check out the source code on Github,
113

113

00:04:53,436  -->  00:04:55,270
and all of that stuff.
114

114

00:04:55,270  -->  00:04:57,256
So, down here you have an example.
115

115

00:04:57,256  -->  00:04:58,870
And so this here is how you use
116

116

00:04:58,870  -->  00:05:02,062
the concat package in the terminal, okay?
117

117

00:05:02,062  -->  00:05:04,918
You could also use it from Node.js directly like this,
118

118

00:05:04,918  -->  00:05:08,645
but we're interested in the command line, basically.
119

119

00:05:08,645  -->  00:05:12,976
So, let's just copy this in order to make it easier for us.
120

120

00:05:12,976  -->  00:05:16,157
And then we can paste it here.
121

121

00:05:16,157  -->  00:05:18,872
So, o here stands for output,
122

122

00:05:18,872  -->  00:05:20,557
and so here we can put the name
123

123

00:05:20,557  -->  00:05:22,821
of the output file that we want.
124

124

00:05:22,821  -->  00:05:25,561
And we want it to be in a css folder
125

125

00:05:25,561  -->  00:05:27,894
and called style.concat.css.
126

126

00:05:31,343  -->  00:05:34,199
And the input files are, of course, not these ones,
127

127

00:05:34,199  -->  00:05:35,650
this is just for example.
128

128

00:05:35,650  -->  00:05:39,817
So, our input files are css/icon-font.css, right?
129

129

00:05:44,311  -->  00:05:47,664
And actually it's a dash, not point.
130

130

00:05:47,664  -->  00:05:52,508
So, it's the icon-font and then the style.comp.css.
131

131

00:05:52,508  -->  00:05:55,085
So, the result of the first step, right?
132

132

00:05:55,085  -->  00:05:58,418
So, css/style.comp.css, okay?
133

133

00:06:02,607  -->  00:06:05,499
So, again, let me separate this here.
134

134

00:06:05,499  -->  00:06:06,904
Again, this is our first step
135

135

00:06:06,904  -->  00:06:09,238
where we compile our sass file
136

136

00:06:09,238  -->  00:06:11,351
to our compiled css file.
137

137

00:06:11,351  -->  00:06:13,893
Then the next step is to concatenate
138

138

00:06:13,893  -->  00:06:15,284
these two files that we have,
139

139

00:06:15,284  -->  00:06:18,990
the icon-font and the style from the first step,
140

140

00:06:18,990  -->  00:06:20,151
so, this one here,
141

141

00:06:20,151  -->  00:06:24,318
into a new file which is called style.concat.css, okay?
142

142

00:06:25,270  -->  00:06:26,931
And so for this concatenation,
143

143

00:06:26,931  -->  00:06:29,288
we installed a new npm package
144

144

00:06:29,288  -->  00:06:32,376
and looked up how we can actually use it, alright?
145

145

00:06:32,376  -->  00:06:34,266
So, let's now test the step out.
146

146

00:06:34,266  -->  00:06:37,274
And again, in the end we will have one global task
147

147

00:06:37,274  -->  00:06:39,168
which runs all of these at the same time.
148

148

00:06:39,168  -->  00:06:42,303
So, we're not going to do them one by one in the real world.
149

149

00:06:42,303  -->  00:06:44,416
This is just for testing purposes,
150

150

00:06:44,416  -->  00:06:46,227
just to see if each of the step
151

151

00:06:46,227  -->  00:06:48,082
is actually working.
152

152

00:06:48,082  -->  00:06:50,832
So, let's now try out concat:css.
153

153

00:06:51,835  -->  00:06:53,752
So, npm run concat:css.
154

154

00:07:01,970  -->  00:07:04,373
And you see, it added the new file here,
155

155

00:07:04,373  -->  00:07:05,523
so let's take a look.
156

156

00:07:05,523  -->  00:07:08,100
And alright, so we have the content
157

157

00:07:08,100  -->  00:07:10,016
of the icon-font file here, right?
158

158

00:07:10,016  -->  00:07:11,676
So, all of this stuff.
159

159

00:07:11,676  -->  00:07:14,322
And then down here somewhere, yeah,
160

160

00:07:14,322  -->  00:07:18,897
so down here starts our own code, the code that we wrote.
161

161

00:07:18,897  -->  00:07:20,569
Great, so that worked.
162

162

00:07:20,569  -->  00:07:24,226
So, we have now all of the css code in one single file.
163

163

00:07:24,226  -->  00:07:26,398
Which is a lot better, because like this,
164

164

00:07:26,398  -->  00:07:29,486
we only need one HTTP request instead of two
165

165

00:07:29,486  -->  00:07:31,677
when we had two files, right?
166

166

00:07:31,677  -->  00:07:32,927
Okay, next step
167

167

00:07:34,106  -->  00:07:35,273
is the prefix.
168

168

00:07:36,531  -->  00:07:37,781
So, prefix:css.
169

169

00:07:40,317  -->  00:07:43,348
And so we need yet another npm package.
170

170

00:07:43,348  -->  00:07:47,348
And this one is called npm install autoprefixer.
171

171

00:07:52,764  -->  00:07:55,875
And of course, save it as a dev dependency.
172

172

00:07:55,875  -->  00:07:59,625
So, autoprefixer, yeah, I think that's right.
173

173

00:08:00,972  -->  00:08:03,352
Now, in order for the autoprefixer to work,
174

174

00:08:03,352  -->  00:08:05,569
we actually need to install another package
175

175

00:08:05,569  -->  00:08:07,822
which is called postcss.
176

176

00:08:07,822  -->  00:08:09,822
So, npm install postcss,
177

177

00:08:12,234  -->  00:08:15,252
and then cli, which means command line interface.
178

178

00:08:15,252  -->  00:08:18,584
So, the name of this package is postcss-cli,
179

179

00:08:18,584  -->  00:08:22,242
and then of course, save dev once more.
180

180

00:08:22,242  -->  00:08:23,716
Okay, and we need this one here
181

181

00:08:23,716  -->  00:08:25,492
because the autoprefixer is actually
182

182

00:08:25,492  -->  00:08:28,742
part of this postcss plugin or package.
183

183

00:08:29,997  -->  00:08:32,828
Okay, so let's just wait until this installs.
184

184

00:08:32,828  -->  00:08:34,235
And so, here we go.
185

185

00:08:34,235  -->  00:08:38,235
And so now the command here is actually postcss.
186

186

00:08:39,657  -->  00:08:42,407
And then we say use autoprefixer.
187

187

00:08:44,782  -->  00:08:45,618
Okay?
188

188

00:08:45,618  -->  00:08:47,475
And so this one is a bit more complicated,
189

189

00:08:47,475  -->  00:08:48,950
and so I'm gonna just show it to you
190

190

00:08:48,950  -->  00:08:50,955
instead of Googling how it works.
191

191

00:08:50,955  -->  00:08:53,706
So, postcss is the package that we use,
192

192

00:08:53,706  -->  00:08:57,747
and then we use the use option here with autoprefixer
193

193

00:08:57,747  -->  00:09:00,159
in order to actually make the autoprefix work.
194

194

00:09:00,159  -->  00:09:02,595
So, next, the b option,
195

195

00:09:02,595  -->  00:09:04,592
which basically stands for browsers.
196

196

00:09:04,592  -->  00:09:07,876
And here we can specify which browsers we want to target.
197

197

00:09:07,876  -->  00:09:10,359
And the easiest options is to just say,
198

198

00:09:10,359  -->  00:09:12,810
like the last x browsers.
199

199

00:09:12,810  -->  00:09:15,411
So, for example, the last five browsers,
200

200

00:09:15,411  -->  00:09:18,580
or versions actually, or whatever.
201

201

00:09:18,580  -->  00:09:20,034
And so with this here,
202

202

00:09:20,034  -->  00:09:21,970
it'll target the last five versions
203

203

00:09:21,970  -->  00:09:23,515
of all the major browsers.
204

204

00:09:23,515  -->  00:09:24,931
And this data actually comes from
205

205

00:09:24,931  -->  00:09:28,077
the caniuse.com website that I showed you before.
206

206

00:09:28,077  -->  00:09:30,295
So, it's always super up-to-date here.
207

207

00:09:30,295  -->  00:09:32,152
Now, I like to use ten versions here,
208

208

00:09:32,152  -->  00:09:33,441
then we can be really sure
209

209

00:09:33,441  -->  00:09:36,459
that it's gonna add all the prefixes that we need, okay?
210

210

00:09:36,459  -->  00:09:38,560
So, next is the input file
211

211

00:09:38,560  -->  00:09:40,906
and it's the one from the step before.
212

212

00:09:40,906  -->  00:09:42,656
So, style.concat.css.
213

213

00:09:45,363  -->  00:09:47,662
And then we specify the output parameter,
214

214

00:09:47,662  -->  00:09:50,473
so -o, and then the output that we want.
215

215

00:09:50,473  -->  00:09:53,473
So, css/style.prefix.css.
216

216

00:09:56,882  -->  00:09:59,713
And here I forgot the css part, okay?
217

217

00:09:59,713  -->  00:10:02,069
And so now it's gonna go into the css folder,
218

218

00:10:02,069  -->  00:10:04,962
grab the file that we outputted before,
219

219

00:10:04,962  -->  00:10:06,367
so this one here,
220

220

00:10:06,367  -->  00:10:10,337
and then write the output to the style.prefix.css file.
221

221

00:10:10,337  -->  00:10:13,337
So, let's test that one out as well.
222

222

00:10:18,929  -->  00:10:20,846
So, npm run prefix:css.
223

223

00:10:24,235  -->  00:10:25,235
And alright.
224

224

00:10:26,859  -->  00:10:29,645
And let's close this one here.
225

225

00:10:29,645  -->  00:10:32,766
And so style.prefix, let's actually see
226

226

00:10:32,766  -->  00:10:35,485
how many lines this file has.
227

227

00:10:35,485  -->  00:10:37,985
Whoa, what's all of this here?
228

228

00:10:38,945  -->  00:10:40,048
Well, maybe we don't have to
229

229

00:10:40,048  -->  00:10:41,719
take a look at the number of lines.
230

230

00:10:41,719  -->  00:10:42,552
I just wanted to check out
231

231

00:10:42,552  -->  00:10:44,819
if the file is now larger than before,
232

232

00:10:44,819  -->  00:10:46,036
but we can actually see that it's
233

233

00:10:46,036  -->  00:10:48,500
added here a lot of prefixes.
234

234

00:10:48,500  -->  00:10:50,135
So, like this webkit here
235

235

00:10:50,135  -->  00:10:53,652
on all the transform properties, okay?
236

236

00:10:53,652  -->  00:10:55,662
So, you'll see that all of these transforms here
237

237

00:10:55,662  -->  00:10:57,912
now have the webkit prefix.
238

238

00:10:59,645  -->  00:11:01,431
Then, you'll probably see,
239

239

00:11:01,431  -->  00:11:04,348
let's go up here to the animations.
240

240

00:11:09,061  -->  00:11:11,010
Ah, here we also have it on the box shadow,
241

241

00:11:11,010  -->  00:11:12,510
the webkit prefix.
242

242

00:11:13,983  -->  00:11:16,398
So, it added these on a bunch of things.
243

243

00:11:16,398  -->  00:11:18,941
I just wanted to see the animations,
244

244

00:11:18,941  -->  00:11:21,449
but they are probably a bit
245

245

00:11:21,449  -->  00:11:22,296
more up.
246

246

00:11:22,296  -->  00:11:23,724
Ah, here we go.
247

247

00:11:23,724  -->  00:11:25,663
So, in the animations,
248

248

00:11:25,663  -->  00:11:27,416
it also should've added,
249

249

00:11:27,416  -->  00:11:28,449
yeah, here it did.
250

250

00:11:28,449  -->  00:11:32,269
So, webkit in the beginning of the at rule, okay?
251

251

00:11:32,269  -->  00:11:33,352
And so, yeah.
252

252

00:11:34,405  -->  00:11:38,759
We see that this actually worked quite well, right?
253

253

00:11:38,759  -->  00:11:40,872
Now, all of this can look a bit scary,
254

254

00:11:40,872  -->  00:11:42,683
but that's not really a problem, right?
255

255

00:11:42,683  -->  00:11:44,413
Because you just have to write this once
256

256

00:11:44,413  -->  00:11:47,652
and then you can keep using it in the future.
257

257

00:11:47,652  -->  00:11:52,041
Okay, and so we actually already arrived at our last step.
258

258

00:11:52,041  -->  00:11:53,458
So, compress:css.
259

259

00:11:56,464  -->  00:11:57,297
And for this one,
260

260

00:11:57,297  -->  00:11:59,506
we actually don't need to install a new package
261

261

00:11:59,506  -->  00:12:02,409
because our node-sass package here
262

262

00:12:02,409  -->  00:12:04,992
can actually do that job, okay?
263

263

00:12:06,704  -->  00:12:09,189
And it's very simple, we just have to write node-sass
264

264

00:12:09,189  -->  00:12:13,496
then the input file, which is this one here.
265

265

00:12:13,496  -->  00:12:15,667
So, the output from the step before,
266

266

00:12:15,667  -->  00:12:17,293
and then the output file.
267

267

00:12:17,293  -->  00:12:21,855
And I'm gonna call this one simply style.css.
268

268

00:12:21,855  -->  00:12:24,479
So, that will be our final file.
269

269

00:12:24,479  -->  00:12:28,520
You could also call it style.min, like this.
270

270

00:12:28,520  -->  00:12:30,366
And you will usually see it as this,
271

271

00:12:30,366  -->  00:12:32,940
but I don't wanna do that for one simple reason.
272

272

00:12:32,940  -->  00:12:36,124
It's because if I do that, then I would have to change
273

273

00:12:36,124  -->  00:12:38,783
in the HTML the href here as well, right?
274

274

00:12:38,783  -->  00:12:40,315
And so I would have a different one
275

275

00:12:40,315  -->  00:12:42,022
for the development phase,
276

276

00:12:42,022  -->  00:12:44,425
and then a different one for the production code.
277

277

00:12:44,425  -->  00:12:46,106
And I don't want that.
278

278

00:12:46,106  -->  00:12:48,013
Well, actually what I can do here right now
279

279

00:12:48,013  -->  00:12:51,995
is to comment out this part of the code
280

280

00:12:51,995  -->  00:12:54,294
because we don't need it anymore, right?
281

281

00:12:54,294  -->  00:12:58,299
Because it's now already included in our style.css file.
282

282

00:12:58,299  -->  00:12:59,482
Now, in order for this to work,
283

283

00:12:59,482  -->  00:13:02,989
we actually have to add an option here to this command
284

284

00:13:02,989  -->  00:13:05,322
which is called output-style
285

285

00:13:08,260  -->  00:13:10,836
and then compressed, okay?
286

286

00:13:10,836  -->  00:13:13,165
And so basically, with this option here
287

287

00:13:13,165  -->  00:13:15,218
setting the output style to compressed,
288

288

00:13:15,218  -->  00:13:17,180
it will simply compress the code.
289

289

00:13:17,180  -->  00:13:19,690
There's nothing to compile from sass to css
290

290

00:13:19,690  -->  00:13:21,771
because the input is already in css,
291

291

00:13:21,771  -->  00:13:22,999
but that's not a problem,
292

292

00:13:22,999  -->  00:13:27,634
all it's gonna do here is to simply compress our code, okay?
293

293

00:13:27,634  -->  00:13:30,806
So, of course, let's test that one out as well.
294

294

00:13:30,806  -->  00:13:32,889
So, npm run compress:css.
295

295

00:13:37,352  -->  00:13:38,852
And so, style.css,
296

296

00:13:40,164  -->  00:13:43,796
whoa, so that's our final code now.
297

297

00:13:43,796  -->  00:13:45,806
This is how it looks.
298

298

00:13:45,806  -->  00:13:47,571
And it's just one line of code,
299

299

00:13:47,571  -->  00:13:49,891
a huge line of code with all the code in there.
300

300

00:13:49,891  -->  00:13:51,995
So, basically without all of the whitespace
301

301

00:13:51,995  -->  00:13:53,295
that we included and without
302

302

00:13:53,295  -->  00:13:55,301
all the comments also, of course.
303

303

00:13:55,301  -->  00:13:57,811
Let's actually compare the sizes of these, okay?
304

304

00:13:57,811  -->  00:14:00,737
'Cause I'm really curious now.
305

305

00:14:00,737  -->  00:14:04,452
So, all the css files that we created here.
306

306

00:14:04,452  -->  00:14:07,573
So, the input was the prefix one, right?
307

307

00:14:07,573  -->  00:14:08,990
And it had 109 K.
308

308

00:14:10,187  -->  00:14:13,241
And then the compressed one, which is the style.css,
309

309

00:14:13,241  -->  00:14:14,889
has only 33.
310

310

00:14:14,889  -->  00:14:16,445
So, that's actually a big difference.
311

311

00:14:16,445  -->  00:14:18,112
So, like 76 K, okay?
312

312

00:14:20,056  -->  00:14:21,240
So with that very simple step,
313

313

00:14:21,240  -->  00:14:26,040
we just reduced our page load by almost 80 kilobyte, right?
314

314

00:14:26,040  -->  00:14:28,185
So, that's great.
315

315

00:14:28,185  -->  00:14:30,172
Now, as I promised,
316

316

00:14:30,172  -->  00:14:32,229
I would in the end write a task
317

317

00:14:32,229  -->  00:14:35,850
that will run all of these four here at the same time.
318

318

00:14:35,850  -->  00:14:39,253
So, compiling, concatenation, prefixing, and compressing.
319

319

00:14:39,253  -->  00:14:42,979
And I'm gonna call that one build:css.
320

320

00:14:42,979  -->  00:14:45,743
And so this one is going to build our css
321

321

00:14:45,743  -->  00:14:47,925
which is gonna be ready for production.
322

322

00:14:47,925  -->  00:14:49,932
And so, how do we do that?
323

323

00:14:49,932  -->  00:14:51,141
Well, the best option,
324

324

00:14:51,141  -->  00:14:53,498
in order for it to work on all platforms,
325

325

00:14:53,498  -->  00:14:55,701
so on Mac and Windows and Linux
326

326

00:14:55,701  -->  00:14:56,911
all at the same time,
327

327

00:14:56,911  -->  00:15:00,078
is to use, once again, an npm package.
328

328

00:15:02,252  -->  00:15:05,169
And this one is called npm-run-all.
329

329

00:15:11,668  -->  00:15:14,152
And so the name here actually says all,
330

330

00:15:14,152  -->  00:15:17,371
so we just call this package,
331

331

00:15:17,371  -->  00:15:18,621
so npm-run-all,
332

332

00:15:20,210  -->  00:15:21,803
and then all we have to do
333

333

00:15:21,803  -->  00:15:25,220
is to put the name of the tasks in there.
334

334

00:15:26,865  -->  00:15:28,532
So, compile, concat,
335

335

00:15:31,602  -->  00:15:32,435
prefix,
336

336

00:15:34,679  -->  00:15:35,762
and compress.
337

337

00:15:38,426  -->  00:15:42,593
Alright, now let's actually delete all of these files here.
338

338

00:15:44,675  -->  00:15:45,508
Okay?
339

339

00:15:47,937  -->  00:15:49,769
Except the icon-font, of course.
340

340

00:15:49,769  -->  00:15:52,477
Because that one we have to keep.
341

341

00:15:52,477  -->  00:15:55,060
And so let's now test this out.
342

342

00:15:57,852  -->  00:15:59,685
So, npm run build:css.
343

343

00:16:04,969  -->  00:16:06,676
Alright, so you saw that it
344

344

00:16:06,676  -->  00:16:10,310
run all of our tasks here one by one,
345

345

00:16:10,310  -->  00:16:11,436
and now it's finished,
346

346

00:16:11,436  -->  00:16:14,362
and it created all of this files here.
347

347

00:16:14,362  -->  00:16:17,543
Meaning that our build process is actually working.
348

348

00:16:17,543  -->  00:16:19,389
Fantastic, that's a great job, really.
349

349

00:16:19,389  -->  00:16:20,306
That's really cool.
350

350

00:16:20,306  -->  00:16:22,663
But there's actually more that I want to show you.
351

351

00:16:22,663  -->  00:16:27,365
I wanna show you another use case of this npm-run-all, okay?
352

352

00:16:27,365  -->  00:16:30,139
So, this is here our build process,
353

353

00:16:30,139  -->  00:16:31,498
so our build workflow.
354

354

00:16:31,498  -->  00:16:35,283
Now, what we also want is basically a development workflow.
355

355

00:16:35,283  -->  00:16:37,894
And we already set that up before, right?
356

356

00:16:37,894  -->  00:16:39,764
So, basically as we develop,
357

357

00:16:39,764  -->  00:16:42,899
we are running this watch.css process here,
358

358

00:16:42,899  -->  00:16:43,781
and at the same time,
359

359

00:16:43,781  -->  00:16:46,440
we're running the live server process, right?
360

360

00:16:46,440  -->  00:16:48,518
So, that process that makes it so that
361

361

00:16:48,518  -->  00:16:49,784
each time that we save a file
362

362

00:16:49,784  -->  00:16:53,020
it automatically reloads the browser, right?
363

363

00:16:53,020  -->  00:16:55,322
But remember that we had to run both of these
364

364

00:16:55,322  -->  00:16:56,808
in a different command line.
365

365

00:16:56,808  -->  00:16:58,943
And so that's not really handy, right?
366

366

00:16:58,943  -->  00:17:01,335
We can do better than that.
367

367

00:17:01,335  -->  00:17:04,668
So, let us first add another task called
368

368

00:17:05,758  -->  00:17:06,591
devserver,
369

369

00:17:08,266  -->  00:17:11,016
and this is just for live-server.
370

370

00:17:12,214  -->  00:17:14,048
So, basically, devserver will be
371

371

00:17:14,048  -->  00:17:16,812
the same as the live server.
372

372

00:17:16,812  -->  00:17:19,435
But here in this step that I'm gonna show you next,
373

373

00:17:19,435  -->  00:17:21,444
I cannot directly call live-server,
374

374

00:17:21,444  -->  00:17:23,394
and so I have to create this task here
375

375

00:17:23,394  -->  00:17:24,962
which I can then call,
376

376

00:17:24,962  -->  00:17:28,689
because what I'm gonna do now is a task called start.
377

377

00:17:28,689  -->  00:17:30,012
And that's a very common name
378

378

00:17:30,012  -->  00:17:34,179
that developers use for a development process, okay?
379

379

00:17:35,179  -->  00:17:36,614
So, I'm gonna call start
380

380

00:17:36,614  -->  00:17:38,947
and I wanna run npm-run-all,
381

381

00:17:45,601  -->  00:17:47,684
watch:css, and devserver.
382

382

00:17:48,724  -->  00:17:52,356
And actually let's put the devserver here before.
383

383

00:17:52,356  -->  00:17:54,738
Alright, now, in order to make this work,
384

384

00:17:54,738  -->  00:17:57,142
so basically that they run at the same time,
385

385

00:17:57,142  -->  00:18:00,207
I have to specify another argument, another option.
386

386

00:18:00,207  -->  00:18:04,189
And that one is simply called parallel, okay?
387

387

00:18:04,189  -->  00:18:05,800
And that's because I want these two
388

388

00:18:05,800  -->  00:18:07,858
to run at exact same time.
389

389

00:18:07,858  -->  00:18:09,443
While down here, I want them to run
390

390

00:18:09,443  -->  00:18:11,149
in a sequence, so first this one,
391

391

00:18:11,149  -->  00:18:13,564
then this one, then this one, then this one.
392

392

00:18:13,564  -->  00:18:15,793
And so that is different, okay?
393

393

00:18:15,793  -->  00:18:19,030
So, here they have to run both at the same time, okay?
394

394

00:18:19,030  -->  00:18:21,030
And so if we now do npm,
395

395

00:18:24,919  -->  00:18:26,086
npm run start,
396

396

00:18:28,889  -->  00:18:31,129
then it gives me this error here, okay?
397

397

00:18:31,129  -->  00:18:32,962
But I see why that is,
398

398

00:18:34,300  -->  00:18:36,574
and it's because here it's not css,
399

399

00:18:36,574  -->  00:18:38,618
but it's called watch:sass, right?
400

400

00:18:38,618  -->  00:18:40,859
So, watch:sass here, and then of course,
401

401

00:18:40,859  -->  00:18:43,599
watch:sass over there as well.
402

402

00:18:43,599  -->  00:18:45,886
So now it should run.
403

403

00:18:45,886  -->  00:18:46,719
Clear.
404

404

00:18:50,275  -->  00:18:52,608
Now, alright, so here we go.
405

405

00:18:53,548  -->  00:18:56,835
So, we can close the previous one that we had.
406

406

00:18:56,835  -->  00:18:59,969
And so you'll see, if you take a look at our console now,
407

407

00:18:59,969  -->  00:19:03,127
that it's working the node-sass with a watch
408

408

00:19:03,127  -->  00:19:05,412
and the live-server here, right?
409

409

00:19:05,412  -->  00:19:06,807
And so with one command,
410

410

00:19:06,807  -->  00:19:10,171
we basically started our development workflow.
411

411

00:19:10,171  -->  00:19:11,753
So, just to test things out,
412

412

00:19:11,753  -->  00:19:13,670
let's change something.
413

413

00:19:14,644  -->  00:19:19,590
For example, let's set it here to something really huge.
414

414

00:19:19,590  -->  00:19:21,204
Alright, so,
415

415

00:19:21,204  -->  00:19:23,456
that's not what we want, of course,
416

416

00:19:23,456  -->  00:19:26,243
but what this means is that basically,
417

417

00:19:26,243  -->  00:19:27,798
it's working, right?
418

418

00:19:27,798  -->  00:19:29,728
So, it's watching our sass file
419

419

00:19:29,728  -->  00:19:31,780
and it's running our live web server.
420

420

00:19:31,780  -->  00:19:34,044
So, that is absolutely great.
421

421

00:19:34,044  -->  00:19:36,157
Now, by doing that, of course it overwrote
422

422

00:19:36,157  -->  00:19:39,989
the style.css file that we outputted before, right?
423

423

00:19:39,989  -->  00:19:42,230
Because now it created a new one.
424

424

00:19:42,230  -->  00:19:44,122
And so, during development,
425

425

00:19:44,122  -->  00:19:46,212
this one here cannot be commented out,
426

426

00:19:46,212  -->  00:19:47,753
because otherwise we will not be able
427

427

00:19:47,753  -->  00:19:50,171
to access the icon-font, right?
428

428

00:19:50,171  -->  00:19:52,179
So, you can only put this comment here,
429

429

00:19:52,179  -->  00:19:54,873
so you can only take out this entire code,
430

430

00:19:54,873  -->  00:19:56,681
so basically when you're ready to deploy it
431

431

00:19:56,681  -->  00:19:58,815
to a live web server, okay?
432

432

00:19:58,815  -->  00:20:01,232
But for now I'm gonna leave it like this
433

433

00:20:01,232  -->  00:20:03,613
and come back to my package.json file.
434

434

00:20:03,613  -->  00:20:06,039
But actually, I think we're already done here.
435

435

00:20:06,039  -->  00:20:08,907
So, we now have our development process here
436

436

00:20:08,907  -->  00:20:10,195
nicely on the top,
437

437

00:20:10,195  -->  00:20:12,970
and then our build process in here.
438

438

00:20:12,970  -->  00:20:14,212
And it works for this project,
439

439

00:20:14,212  -->  00:20:15,836
and it can work the exact same way
440

440

00:20:15,836  -->  00:20:17,498
on all your next projects.
441

441

00:20:17,498  -->  00:20:20,029
So, all you have to do is to then come back here
442

442

00:20:20,029  -->  00:20:23,245
and like copy this part here of the script.
443

443

00:20:23,245  -->  00:20:25,204
Copy these dev dependencies.
444

444

00:20:25,204  -->  00:20:26,740
And then you're good to go.
445

445

00:20:26,740  -->  00:20:28,470
So, I hope that you found this useful,
446

446

00:20:28,470  -->  00:20:30,292
because there is really a huge value
447

447

00:20:30,292  -->  00:20:32,545
in automating all this kind of stuff.
448

448

00:20:32,545  -->  00:20:34,124
And that's what all real developers
449

449

00:20:34,124  -->  00:20:35,784
actually do in the real world.
450

450

00:20:35,784  -->  00:20:37,711
And so that's why I wanted to show you this
451

451

00:20:37,711  -->  00:20:40,080
because I think it's really important for you.
452

452

00:20:40,080  -->  00:20:42,843
So, we're almost, almost ready with our project.
453

453

00:20:42,843  -->  00:20:44,712
There's only one lecture left
454

454

00:20:44,712  -->  00:20:46,964
to finish up our Natours project.
455

455

00:20:46,964  -->  00:20:51,131
And so, don't wait, and come check that one out right now.
