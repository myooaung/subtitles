1
1

00:00:01,376  -->  00:00:02,688
<v Narrator>So after a quick break,</v>
2

2

00:00:02,688  -->  00:00:04,873
let's now continue building the home
3

3

00:00:04,873  -->  00:00:07,486
section that we were working on.
4

4

00:00:07,486  -->  00:00:09,958
I already mentioned that we were gonna lay out
5

5

00:00:09,958  -->  00:00:13,559
all of these elements in the cart using a grid.
6

6

00:00:13,559  -->  00:00:15,753
But how are we actually gonna do that?
7

7

00:00:15,753  -->  00:00:18,455
And the first thing that comes into my attention here
8

8

00:00:18,455  -->  00:00:22,545
is that this actually is laid out in two columns, right?
9

9

00:00:22,545  -->  00:00:25,492
So you see that here we have these two on the left side,
10

10

00:00:25,492  -->  00:00:28,026
and these two parts here on the right side.
11

11

00:00:28,026  -->  00:00:30,730
And so what that means is that we have a grid,
12

12

00:00:30,730  -->  00:00:33,250
which has two columns here, and we can put
13

13

00:00:33,250  -->  00:00:36,282
these two here on one side, in one column,
14

14

00:00:36,282  -->  00:00:38,579
and these two in another column.
15

15

00:00:38,579  -->  00:00:41,426
And all the other elements, just like this button here,
16

16

00:00:41,426  -->  00:00:44,883
this name, and this image, they can then span
17

17

00:00:44,883  -->  00:00:46,932
both these columns from one side
18

18

00:00:46,932  -->  00:00:49,507
to the other side of the grid container.
19

19

00:00:49,507  -->  00:00:53,228
So let's now quickly do that, and create our two columns.
20

20

00:00:53,228  -->  00:00:56,316
And as for the rows, we can actually let CSS
21

21

00:00:56,316  -->  00:00:58,757
take care of that automatically, okay?
22

22

00:00:58,757  -->  00:01:00,661
So we're just gonna define the columns,
23

23

00:01:00,661  -->  00:01:04,748
and the rows will be put automatically in there.
24

24

00:01:04,748  -->  00:01:07,375
Once more, we're using an implicit grid here.
25

25

00:01:07,375  -->  00:01:11,359
You're probably starting to see that this is a pattern.
26

26

00:01:11,359  -->  00:01:14,079
Most of the time, we just define the columns,
27

27

00:01:14,079  -->  00:01:17,294
and then let CSS figure out the rows automatically.
28

28

00:01:17,294  -->  00:01:18,720
Now that's not always the pattern,
29

29

00:01:18,720  -->  00:01:20,535
so that's not always how it's gonna work,
30

30

00:01:20,535  -->  00:01:24,614
but many times that is the best practice, okay?
31

31

00:01:24,614  -->  00:01:27,164
So very simple in this case.
32

32

00:01:27,164  -->  00:01:30,343
(keyboard clacking)
33

33

00:01:30,343  -->  00:01:33,032
Grid template columns, and all we want
34

34

00:01:33,032  -->  00:01:36,192
is two columns with the same size.
35

35

00:01:36,192  -->  00:01:38,692
So repeat two, one F-R, right?
36

36

00:01:40,570  -->  00:01:41,979
Then before that's gonna work,
37

37

00:01:41,979  -->  00:01:45,146
of course we need to add display grid,
38

38

00:01:46,945  -->  00:01:50,723
and now we're ready to see how that's gonna look like.
39

39

00:01:50,723  -->  00:01:54,148
And, alright, it's already doing what it's supposed to do.
40

40

00:01:54,148  -->  00:01:56,988
So let's now say that we want this image,
41

41

00:01:56,988  -->  00:01:59,028
this name here, and the button
42

42

00:01:59,028  -->  00:02:02,902
to span across both the column tracks, okay?
43

43

00:02:02,902  -->  00:02:04,925
And that shouldn't be all too hard,
44

44

00:02:04,925  -->  00:02:09,092
All we have to say is grid-column from one, to -1, right?
45

45

00:02:12,269  -->  00:02:14,696
And I'm gonna copy this one here,
46

46

00:02:14,696  -->  00:02:18,863
because it also applies to the name and to the button.
47

47

00:02:19,965  -->  00:02:22,907
Now how are we gonna do this with the button?
48

48

00:02:22,907  -->  00:02:27,008
Well, we should actually add a class here, I guess,
49

49

00:02:27,008  -->  00:02:29,416
so besides that class here that it has here already,
50

50

00:02:29,416  -->  00:02:32,583
let's call it the home button as well,
51

51

00:02:34,382  -->  00:02:35,632
so home button,
52

52

00:02:37,721  -->  00:02:41,054
and so let's add that down here as well,
53

53

00:02:47,092  -->  00:02:50,092
and grid-col, from one, to -1, okay?
54

54

00:02:51,634  -->  00:02:55,310
And I noticed I called this CTI for some reason,
55

55

00:02:55,310  -->  00:02:58,852
and CTI means call-to-action, but I think that up here
56

56

00:02:58,852  -->  00:03:01,102
I called it something else,
57

57

00:03:02,010  -->  00:03:04,724
and yeah, I called it button actually.
58

58

00:03:04,724  -->  00:03:07,432
Okay so let's go to all of these,
59

59

00:03:07,432  -->  00:03:11,022
so I select CTI now, and then I hit command-D,
60

60

00:03:11,022  -->  00:03:14,272
here in VS code, to select all of them,
61

61

00:03:16,039  -->  00:03:17,292
and then I just have to paste,
62

62

00:03:17,292  -->  00:03:21,459
and it's gonna paste it in all of these six places.
63

63

00:03:22,373  -->  00:03:25,227
And if I check it out now, yeah,
64

64

00:03:25,227  -->  00:03:27,182
then that looks much better.
65

65

00:03:27,182  -->  00:03:29,150
So the image is already spanning here,
66

66

00:03:29,150  -->  00:03:31,678
across the entire container, but for some reason
67

67

00:03:31,678  -->  00:03:35,190
the button is not, so let's check out why.
68

68

00:03:35,190  -->  00:03:39,099
I guess I know why, because I only added
69

69

00:03:39,099  -->  00:03:41,266
this here to the last one,
70

70

00:03:44,646  -->  00:03:48,813
so of course I need to add this class to all of them.
71

71

00:03:53,174  -->  00:03:56,424
Okay, and just one more left, and yeah.
72

72

00:04:01,258  -->  00:04:03,037
Okay so that's much better.
73

73

00:04:03,037  -->  00:04:06,469
So let's take a look at our grid here
74

74

00:04:06,469  -->  00:04:10,136
in the dev tools, so this one here, alright?
75

75

00:04:15,513  -->  00:04:18,718
And where is it actually down here?
76

76

00:04:18,718  -->  00:04:21,385
Well let's inspect it, and yeah.
77

77

00:04:22,258  -->  00:04:26,421
So you can see that it's spanning these two grid-columns
78

78

00:04:26,421  -->  00:04:28,271
then we have this like icon here
79

79

00:04:28,271  -->  00:04:30,229
which we still have to format.
80

80

00:04:30,229  -->  00:04:32,534
Then we have the name, such as we specified
81

81

00:04:32,534  -->  00:04:35,886
it's spanning these two columns as well.
82

82

00:04:35,886  -->  00:04:38,293
And then all of these four details here,
83

83

00:04:38,293  -->  00:04:43,117
they are, of course, just one cell, each of them.
84

84

00:04:43,117  -->  00:04:45,486
Okay, so let's now style this heart,
85

85

00:04:45,486  -->  00:04:48,389
and position it up here in the corner.
86

86

00:04:48,389  -->  00:04:51,238
And so how do you think we should do that?
87

87

00:04:51,238  -->  00:04:54,935
I think that the best way here, is to use overlapping.
88

88

00:04:54,935  -->  00:04:57,475
So basically placing this grid item
89

89

00:04:57,475  -->  00:05:01,642
here on top of this image, in this grid cell here.
90

90

00:05:02,616  -->  00:05:05,972
So right in this grid cell, okay?
91

91

00:05:05,972  -->  00:05:08,654
That's where I'm gonna place this heart icon.
92

92

00:05:08,654  -->  00:05:12,821
So from column two to three, and from row two to one.
93

93

00:05:13,694  -->  00:05:16,027
Homes, and yeah, here we go.
94

94

00:05:18,442  -->  00:05:21,854
So grid-row, and now I have to specify all of this,
95

95

00:05:21,854  -->  00:05:24,943
because otherwise the auto-placement algorithm
96

96

00:05:24,943  -->  00:05:27,468
is just gonna put it in column two, three,
97

97

00:05:27,468  -->  00:05:31,468
but not in the first row, where I want it to be.
98

98

00:05:34,253  -->  00:05:36,908
So from grid-line two, to grid-line number three,
99

99

00:05:36,908  -->  00:05:38,635
just as we said before.
100

100

00:05:38,635  -->  00:05:41,968
Now let's also do the same as down here,
101

101

00:05:45,430  -->  00:05:48,680
but make it just a bit bigger, alright?
102

102

00:05:49,813  -->  00:05:53,399
If we take a look at that now, then here we go.
103

103

00:05:53,399  -->  00:05:56,230
So this is exactly where we wanted it to be,
104

104

00:05:56,230  -->  00:05:59,455
the problem is that now the image actually moved down.
105

105

00:05:59,455  -->  00:06:01,652
That's because the automatic-placement algorithm
106

106

00:06:01,652  -->  00:06:05,456
doesn't automatically put grid items one on top of another.
107

107

00:06:05,456  -->  00:06:07,439
So instead it just moves this one here down.
108

108

00:06:07,439  -->  00:06:08,717
But we don't want that to happen,
109

109

00:06:08,717  -->  00:06:10,543
we want this also to be in the first row.
110

110

00:06:10,543  -->  00:06:13,626
So we have to specify that, just as we had
111

111

00:06:13,626  -->  00:06:15,494
to do for the icon.
112

112

00:06:15,494  -->  00:06:16,816
So where is it?
113

113

00:06:16,816  -->  00:06:17,649
Oh, yeah.
114

114

00:06:21,053  -->  00:06:23,867
So grid-row, from one to two, please.
115

115

00:06:23,867  -->  00:06:26,561
And that should fix it.
116

116

00:06:26,561  -->  00:06:28,502
Now just to be sure that this icon here
117

117

00:06:28,502  -->  00:06:31,462
will always stay on top of this image,
118

118

00:06:31,462  -->  00:06:34,124
let's just give each of them a z and x.
119

119

00:06:34,124  -->  00:06:38,482
And so this one, of course, will be higher,
120

120

00:06:38,482  -->  00:06:42,649
so z-index of let's say one, and the like, a z-index of two.
121

121

00:06:45,656  -->  00:06:46,919
And it worked even without that,
122

122

00:06:46,919  -->  00:06:49,607
but just to be 100% sure, and also to show you
123

123

00:06:49,607  -->  00:06:52,997
that this is how we define which of the elements
124

124

00:06:52,997  -->  00:06:54,983
should be placed on top of the other.
125

125

00:06:54,983  -->  00:06:57,082
Now just one more thing here with the like
126

126

00:06:57,082  -->  00:06:59,892
is this here, so it's not aligned here
127

127

00:06:59,892  -->  00:07:02,917
to the right side, as we want it to be.
128

128

00:07:02,917  -->  00:07:04,604
And how do we align grid-items
129

129

00:07:04,604  -->  00:07:07,396
inside of grid cells horizontally?
130

130

00:07:07,396  -->  00:07:11,070
We just use the justify-items property, right?
131

131

00:07:11,070  -->  00:07:12,736
But in this case, we want this
132

132

00:07:12,736  -->  00:07:14,611
to happen only with this one here.
133

133

00:07:14,611  -->  00:07:18,778
And so we can use justify-self on this exact item.
134

134

00:07:20,510  -->  00:07:23,444
So justify-self is going to align
135

135

00:07:23,444  -->  00:07:26,085
the item inside the grid cell,
136

136

00:07:26,085  -->  00:07:29,839
and we want it to be all the way to the end.
137

137

00:07:29,839  -->  00:07:33,145
So, here we go, now it's here all the way to the end.
138

138

00:07:33,145  -->  00:07:35,536
Now, just one more thing, let's just give it
139

139

00:07:35,536  -->  00:07:39,703
some margin here, so to push it down and right a little bit.
140

140

00:07:40,964  -->  00:07:45,131
So margin, one rem, and with that, we should be good to go.
141

141

00:07:46,946  -->  00:07:49,561
Alright, so that looks much better.
142

142

00:07:49,561  -->  00:07:53,049
Next up, we have this name of the house.
143

143

00:07:53,049  -->  00:07:55,963
And so that is how this looks like.
144

144

00:07:55,963  -->  00:07:58,034
How are we gonna do that?
145

145

00:07:58,034  -->  00:07:59,729
Well first up, let's style this element,
146

146

00:07:59,729  -->  00:08:03,343
and take care of placing it afterwards.
147

147

00:08:03,343  -->  00:08:07,260
So we're talking about this one here, the name,
148

148

00:08:09,009  -->  00:08:12,342
and so let's start with the font family,
149

149

00:08:13,487  -->  00:08:16,237
and this one is the display font,
150

150

00:08:17,144  -->  00:08:19,813
and so I'm using that variable name here.
151

151

00:08:19,813  -->  00:08:23,980
The font size is 1.6 rem, I want the text to be aligned
152

152

00:08:26,168  -->  00:08:30,335
at the center, it would have some padding of 1.25 rem,
153

153

00:08:35,526  -->  00:08:39,193
and the background color of color secondary.
154

154

00:08:41,725  -->  00:08:44,514
So that's over a dark blue.
155

155

00:08:44,514  -->  00:08:47,097
Then the color itself is white,
156

156

00:08:49,055  -->  00:08:51,460
and the font weight, 400.
157

157

00:08:51,460  -->  00:08:53,879
I'm doing all this very quick and very fast,
158

158

00:08:53,879  -->  00:08:55,491
without explaining much, because you're
159

159

00:08:55,491  -->  00:08:56,734
already familiar with all of this,
160

160

00:08:56,734  -->  00:09:00,199
and that's not really part of the CSS Grid anyway.
161

161

00:09:00,199  -->  00:09:03,753
So that's the main style, and let's now think
162

162

00:09:03,753  -->  00:09:06,871
about the more difficult stuff.
163

163

00:09:06,871  -->  00:09:10,755
Well, for some reason nothing really happened.
164

164

00:09:10,755  -->  00:09:12,631
Let's see why that is.
165

165

00:09:12,631  -->  00:09:16,195
And it's probably because of this error here.
166

166

00:09:16,195  -->  00:09:20,195
So let's give it a save again, and then yeah, here we go.
167

167

00:09:20,195  -->  00:09:23,536
So how do we now go from looking like this,
168

168

00:09:23,536  -->  00:09:25,188
to what we have here?
169

169

00:09:25,188  -->  00:09:29,182
So basically the width of this item here
170

170

00:09:29,182  -->  00:09:33,130
is not 100%, but just 80%, and all of this here
171

171

00:09:33,130  -->  00:09:35,888
is centered in the grid cell,
172

172

00:09:35,888  -->  00:09:38,721
and then it's also moved up a bit.
173

173

00:09:39,624  -->  00:09:43,700
So let's take care of the first things that I said.
174

174

00:09:43,700  -->  00:09:46,867
First off, the width is only 80%,
175

175

00:09:50,830  -->  00:09:52,941
and then it is horizontally aligned
176

176

00:09:52,941  -->  00:09:56,699
inside of it's grid cell, and that's pretty easy.
177

177

00:09:56,699  -->  00:09:59,943
Once again, we're going to use justify-self,
178

178

00:09:59,943  -->  00:10:02,360
and this time, set to center.
179

179

00:10:03,668  -->  00:10:06,387
So that's really easy, right?
180

180

00:10:06,387  -->  00:10:08,523
So that's how it looks like right now.
181

181

00:10:08,523  -->  00:10:13,082
And now all we have to do is to place it here in the middle.
182

182

00:10:13,082  -->  00:10:14,794
And we have two options for that.
183

183

00:10:14,794  -->  00:10:18,128
The first one is to move it up from here,
184

184

00:10:18,128  -->  00:10:23,123
but then that would create this half-empty row here, right?
185

185

00:10:23,123  -->  00:10:24,898
So basically we would have one row
186

186

00:10:24,898  -->  00:10:27,962
which would be half-empty, and then half of it
187

187

00:10:27,962  -->  00:10:30,871
would be occupied by this element.
188

188

00:10:30,871  -->  00:10:33,027
And I don't think that's really perfect,
189

189

00:10:33,027  -->  00:10:35,767
so instead, what I'm gonna do is to place
190

190

00:10:35,767  -->  00:10:39,030
this grid item here, right in this first row,
191

191

00:10:39,030  -->  00:10:41,356
so basically putting it here into this first row,
192

192

00:10:41,356  -->  00:10:45,523
so you're on top of the image, using overlapping once again.
193

193

00:10:47,729  -->  00:10:49,680
I already defined the grid-column,
194

194

00:10:49,680  -->  00:10:53,097
let's also define the grid-row, one, two,
195

195

00:10:56,012  -->  00:10:59,373
and let's define a z-index as well,
196

196

00:10:59,373  -->  00:11:04,003
in order to ensure that it's gonna be on top of the image.
197

197

00:11:04,003  -->  00:11:05,572
So how does that look like?
198

198

00:11:05,572  -->  00:11:07,762
And, whoa, it's stretching all the way
199

199

00:11:07,762  -->  00:11:11,642
from the top to the bottom of this grid cell.
200

200

00:11:11,642  -->  00:11:13,221
But that's of course not what we want,
201

201

00:11:13,221  -->  00:11:17,137
and so we have to vertically align it here to the bottom.
202

202

00:11:17,137  -->  00:11:20,002
We already used justify-self,
203

203

00:11:20,002  -->  00:11:24,169
and for this one, we're gonna use align-self to the bottom.
204

204

00:11:28,053  -->  00:11:31,938
So justify-self and align-self are pretty similar,
205

205

00:11:31,938  -->  00:11:33,363
with the difference that justify
206

206

00:11:33,363  -->  00:11:36,674
does it horizontally, so in the row-axis,
207

207

00:11:36,674  -->  00:11:40,766
and align does it vertically, therefore in the column-axis.
208

208

00:11:40,766  -->  00:11:45,066
Okay, so that should fix that, for some reason it didn't.
209

209

00:11:45,066  -->  00:11:47,385
And that's because it's not called bottom,
210

210

00:11:47,385  -->  00:11:50,218
but it's called end instead, okay?
211

211

00:11:51,166  -->  00:11:54,719
So let's take a look at that in the dev tools,
212

212

00:11:54,719  -->  00:11:57,582
and alright, so here it is, all the way
213

213

00:11:57,582  -->  00:11:59,784
to the end of this grid area.
214

214

00:11:59,784  -->  00:12:01,265
And now it's just very simple,
215

215

00:12:01,265  -->  00:12:05,432
we just have to move it down with a simple translate.
216

216

00:12:07,726  -->  00:12:11,893
So transform, translate in the y-direction, 50%.
217

217

00:12:14,430  -->  00:12:17,573
Because 50% corresponds to 50%
218

218

00:12:17,573  -->  00:12:19,909
of the height of the element itself.
219

219

00:12:19,909  -->  00:12:24,472
So it's gonna place it exactly at the center.
220

220

00:12:24,472  -->  00:12:27,065
And here we go, so that is the result
221

221

00:12:27,065  -->  00:12:28,620
that we were looking for.
222

222

00:12:28,620  -->  00:12:30,972
I hope that you understood the reasoning about it,
223

223

00:12:30,972  -->  00:12:33,921
why I did it the way that I did.
224

224

00:12:33,921  -->  00:12:36,841
And I thought this was a cool way of showing you
225

225

00:12:36,841  -->  00:12:39,603
why some of these properties like justify-self,
226

226

00:12:39,603  -->  00:12:43,274
or align-self, are really important to know all the time,
227

227

00:12:43,274  -->  00:12:46,363
and have always in mind, whatever situation we face,
228

228

00:12:46,363  -->  00:12:48,114
when we build our layouts.
229

229

00:12:48,114  -->  00:12:50,557
Now, of course we need some more space here,
230

230

00:12:50,557  -->  00:12:52,243
this is actually now overlapping
231

231

00:12:52,243  -->  00:12:54,523
these icons here, and this row, of course.
232

232

00:12:54,523  -->  00:12:58,356
Let's just create some space between the rows.
233

233

00:12:59,313  -->  00:13:01,156
And that is actually pretty easy.
234

234

00:13:01,156  -->  00:13:04,204
We just need the grid-row gap.
235

235

00:13:04,204  -->  00:13:05,621
So where is that?
236

236

00:13:08,431  -->  00:13:12,098
Gap, and we're gonna go with 35 pixels here.
237

237

00:13:13,137  -->  00:13:16,189
So again this was obtained through experimentation,
238

238

00:13:16,189  -->  00:13:18,257
and I settled here on this value,
239

239

00:13:18,257  -->  00:13:20,793
I thought this was the best.
240

240

00:13:20,793  -->  00:13:23,295
Now this still looks rather strange.
241

241

00:13:23,295  -->  00:13:25,664
So you see that this space here
242

242

00:13:25,664  -->  00:13:28,847
between this home name and this row here
243

243

00:13:28,847  -->  00:13:31,398
is not quite as we want it to be.
244

244

00:13:31,398  -->  00:13:33,559
That's because we moved this here down,
245

245

00:13:33,559  -->  00:13:36,809
and so we created this inequality here.
246

246

00:13:38,475  -->  00:13:40,580
So let's see that a bit better here.
247

247

00:13:40,580  -->  00:13:44,747
You see that we have these 3.5 rems here, here, and here,
248

248

00:13:46,059  -->  00:13:48,630
but then we have this overlapping.
249

249

00:13:48,630  -->  00:13:51,179
It would be amazing if CSS Grid allowed us
250

250

00:13:51,179  -->  00:13:54,333
to style some of these gaps individually.
251

251

00:13:54,333  -->  00:13:56,381
What I would like to do now, is to say
252

252

00:13:56,381  -->  00:14:00,343
that this first gap here, should be 5 or 6 rem,
253

253

00:14:00,343  -->  00:14:03,625
and the others should be only be 3.5 rem.
254

254

00:14:03,625  -->  00:14:06,083
But unfortunately, that's just not possible
255

255

00:14:06,083  -->  00:14:07,770
with CSS Grid at this point.
256

256

00:14:07,770  -->  00:14:10,034
I don't know if that's gonna change in the future,
257

257

00:14:10,034  -->  00:14:13,489
but right now, when we specify the gap in the grid,
258

258

00:14:13,489  -->  00:14:16,963
it will be same for all the rows and for all the columns.
259

259

00:14:16,963  -->  00:14:20,360
So we cannot style just one gap individually.
260

260

00:14:20,360  -->  00:14:23,460
We just have to come up with a solution for that,
261

261

00:14:23,460  -->  00:14:25,477
and the solution that I've found
262

262

00:14:25,477  -->  00:14:30,186
is to add a small margin to the top of these two items,
263

263

00:14:30,186  -->  00:14:33,136
the house location, and the house rooms.
264

264

00:14:33,136  -->  00:14:36,026
If we add a margin to the top of these two,
265

265

00:14:36,026  -->  00:14:38,626
then that will increase the space
266

266

00:14:38,626  -->  00:14:42,333
between this name and then this next row.
267

267

00:14:42,333  -->  00:14:44,820
That is not ideal, it's not perfect,
268

268

00:14:44,820  -->  00:14:47,140
but we have to come up with solutions like this
269

269

00:14:47,140  -->  00:14:50,984
from time to time, and in fact it works perfectly fine,
270

270

00:14:50,984  -->  00:14:54,151
in this situation, doing it like this.
271

271

00:14:55,046  -->  00:14:57,463
So let's copy this from here,
272

272

00:15:05,268  -->  00:15:08,420
and add a margin top of 2.5 rem.
273

273

00:15:08,420  -->  00:15:10,434
And if you check that out now,
274

274

00:15:10,434  -->  00:15:12,251
then that actually looks a lot better.
275

275

00:15:12,251  -->  00:15:15,830
And you can see it even better over here.
276

276

00:15:15,830  -->  00:15:18,015
So that's the best solution that I could
277

277

00:15:18,015  -->  00:15:20,128
come up with at this point.
278

278

00:15:20,128  -->  00:15:21,915
Another solution would have been
279

279

00:15:21,915  -->  00:15:23,803
to say that the second row here
280

280

00:15:23,803  -->  00:15:25,602
should be a bit higher than the others,
281

281

00:15:25,602  -->  00:15:29,500
and then move these two here down to the bottom of this row,
282

282

00:15:29,500  -->  00:15:32,708
but I think that this way is actually better.
283

283

00:15:32,708  -->  00:15:35,407
It's a bit cleaner, not interfering
284

284

00:15:35,407  -->  00:15:39,240
with the individual height of these grid-rows.
285

285

00:15:40,139  -->  00:15:43,314
So we're now actually almost done with this grid,
286

286

00:15:43,314  -->  00:15:46,843
all we have to do is to apply some simple styles here,
287

287

00:15:46,843  -->  00:15:50,519
to each of these four characteristics of the homes.
288

288

00:15:50,519  -->  00:15:54,714
So let's do that, and let's set the font size, at first,
289

289

00:15:54,714  -->  00:15:57,797
and actually we can do it right here.
290

290

00:15:58,723  -->  00:16:01,973
So font size 1.5 rem, and then the text
291

291

00:16:02,950  -->  00:16:04,833
is going to inherit it, and so I don't
292

292

00:16:04,833  -->  00:16:08,025
even need this selector here.
293

293

00:16:08,025  -->  00:16:11,581
Next up, I wanna give each of these four details
294

294

00:16:11,581  -->  00:16:15,664
a margin to the left side of 20 pixels, so 2 rem.
295

295

00:16:17,226  -->  00:16:20,531
And so that's how it's gonna look like then.
296

296

00:16:20,531  -->  00:16:23,465
All that's left to do now is to put
297

297

00:16:23,465  -->  00:16:26,181
these two elements here side-by-side.
298

298

00:16:26,181  -->  00:16:28,461
And what's the best tool for that job?
299

299

00:16:28,461  -->  00:16:32,798
Well, I strongly believe that Flexbox is the way to go here.
300

300

00:16:32,798  -->  00:16:37,330
So Flexbox is really perfect for this really small stuff.
301

301

00:16:37,330  -->  00:16:39,351
Even if we start using CSS Grid
302

302

00:16:39,351  -->  00:16:41,546
for almost everything one day,
303

303

00:16:41,546  -->  00:16:44,007
I think that for this small-alignment stuff,
304

304

00:16:44,007  -->  00:16:46,303
Flexbox is always gonna be the easiest,
305

305

00:16:46,303  -->  00:16:47,922
and most straightforward solution,
306

306

00:16:47,922  -->  00:16:50,215
because it's really as simple as that.
307

307

00:16:50,215  -->  00:16:54,867
All we have to do is really say display, flex,
308

308

00:16:54,867  -->  00:16:58,700
and then they will be two, side-by-side, okay?
309

309

00:16:59,892  -->  00:17:04,059
Even better, what we can do is to say align items,
310

310

00:17:07,151  -->  00:17:10,405
and center, so we will also vertically center
311

311

00:17:10,405  -->  00:17:14,572
these two items along the cross-axis, basically vertically.
312

312

00:17:15,415  -->  00:17:18,405
So that looks even better now.
313

313

00:17:18,405  -->  00:17:22,216
And all of that with just two very simple lines of code.
314

314

00:17:22,216  -->  00:17:24,515
Now here on the icon let's give it
315

315

00:17:24,515  -->  00:17:27,648
some margin to the right side,
316

316

00:17:27,648  -->  00:17:30,988
in order to separate the icon from the text.
317

317

00:17:30,988  -->  00:17:34,353
So margin right, one rem, and that's necessary
318

318

00:17:34,353  -->  00:17:36,467
because in Flexbox there's not something
319

319

00:17:36,467  -->  00:17:40,616
like the grid-gap that we have in CSS Grid.
320

320

00:17:40,616  -->  00:17:44,491
In Flexbox we cannot specify gaps like we can with grids.
321

321

00:17:44,491  -->  00:17:47,120
But actually I read somewhere, I think on Twitter,
322

322

00:17:47,120  -->  00:17:51,613
that they are thinking about adding gaps to Flexbox as well.
323

323

00:17:51,613  -->  00:17:53,745
So someday if that becomes available,
324

324

00:17:53,745  -->  00:17:55,407
then that will be fantastic.
325

325

00:17:55,407  -->  00:17:58,550
We'll no longer have to deal with margin-rights then,
326

326

00:17:58,550  -->  00:18:02,715
we could simply add a gap here in the Flex container,
327

327

00:18:02,715  -->  00:18:05,509
in order to separate the icon from the text here.
328

328

00:18:05,509  -->  00:18:07,506
But right now that's not available,
329

329

00:18:07,506  -->  00:18:09,196
but maybe someday in the future
330

330

00:18:09,196  -->  00:18:13,145
we will be able to do that, so then it's even simpler.
331

331

00:18:13,145  -->  00:18:14,431
I think that's actually it.
332

332

00:18:14,431  -->  00:18:18,098
I think that's the design we were going for.
333

333

00:18:19,105  -->  00:18:22,408
I think that it looks exactly the same in fact.
334

334

00:18:22,408  -->  00:18:24,575
So that's awesome, that's great progress
335

335

00:18:24,575  -->  00:18:26,888
from you up until this point.
336

336

00:18:26,888  -->  00:18:29,231
We're building more and more complex layouts here,
337

337

00:18:29,231  -->  00:18:31,588
using more and more advanced techniques,
338

338

00:18:31,588  -->  00:18:35,439
and so we're already mixing CSS Grid with Flexbox,
339

339

00:18:35,439  -->  00:18:38,411
and using some advanced placement techniques as well.
340

340

00:18:38,411  -->  00:18:40,258
So I hope that this is really useful for you,
341

341

00:18:40,258  -->  00:18:42,534
so that you can build your own designs sometime
342

342

00:18:42,534  -->  00:18:46,701
in the future, using all of these powerful techniques.
