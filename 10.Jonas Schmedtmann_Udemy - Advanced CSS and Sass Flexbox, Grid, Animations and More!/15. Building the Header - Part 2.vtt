WEBVTT
1
1

00:00:00.930  -->  00:00:02.333
<v Jonas>In this video, we're gonna</v>
2

2

00:00:02.333  -->  00:00:04.750
finish up our website header.
3

3

00:00:05.747  -->  00:00:08.823
So what's left to do here is the "As seen on" part,
4

4

00:00:08.823  -->  00:00:11.076
so this part here, and in fact,
5

5

00:00:11.076  -->  00:00:13.217
we're going to use use two grids for that.
6

6

00:00:13.217  -->  00:00:15.306
The first one is this one here,
7

7

00:00:15.306  -->  00:00:17.789
so what you see here is in fact a small grid,
8

8

00:00:17.789  -->  00:00:19.678
but let's start with the one
9

9

00:00:19.678  -->  00:00:22.021
to lay out these four items here.
10

10

00:00:22.021  -->  00:00:24.644
And again, I'm going to use the CSS Grid here
11

11

00:00:24.644  -->  00:00:27.437
instead of Flexbox, because I find it so easy
12

12

00:00:27.437  -->  00:00:30.318
to use the column-gap instead of having to
13

13

00:00:30.318  -->  00:00:34.485
mess with the right margins or something like that.
14

14

00:00:35.328  -->  00:00:39.407
Okay, so here on the "as seen on" logos,
15

15

00:00:39.407  -->  00:00:43.574
we display this as a grid with four equally sized columns.
16

16

00:00:45.905  -->  00:00:48.405
So template columns, repeat 4,
17

17

00:00:52.007  -->  00:00:55.674
and then 1 fractional unit for each of them.
18

18

00:00:56.904  -->  00:01:00.654
And then we want a gap between them of 3 rem.
19

19

00:01:02.307  -->  00:01:04.307
So let's check that out.
20

20

00:01:05.700  -->  00:01:09.302
And all right, so that looks much better already.
21

21

00:01:09.302  -->  00:01:11.671
Now let's just center each of them here
22

22

00:01:11.671  -->  00:01:15.746
inside of their grid cell, and so we're gonna use
23

23

00:01:15.746  -->  00:01:19.079
justify-items, set to center, of course.
24

24

00:01:23.828  -->  00:01:26.095
And now one other thing that I want to do with these images
25

25

00:01:26.095  -->  00:01:28.557
is to make them slightly darker.
26

26

00:01:28.557  -->  00:01:32.412
Okay, so here you have them in this color,
27

27

00:01:32.412  -->  00:01:36.069
and so it looks as if they were a bit gray,
28

28

00:01:36.069  -->  00:01:39.219
such as the text here, instead of being this white,
29

29

00:01:39.219  -->  00:01:41.053
which really catches your attention,
30

30

00:01:41.053  -->  00:01:42.923
and we don't want that.
31

31

00:01:42.923  -->  00:01:46.507
And so we can use a filter, and the one I'm looking for
32

32

00:01:46.507  -->  00:01:50.776
is brightness, and I'm gonna set it to 70%.
33

33

00:01:50.776  -->  00:01:55.347
So 100% is the default, and if we set it to
34

34

00:01:55.347  -->  00:01:59.320
anything less than 70%, the image gets darker,
35

35

00:01:59.320  -->  00:02:02.656
and if we set it to something above 100%,
36

36

00:02:02.656  -->  00:02:04.684
the image gets lighter, of course.
37

37

00:02:04.684  -->  00:02:07.567
Okay, and so, yeah, so that's the change
38

38

00:02:07.567  -->  00:02:09.349
that you just saw here.
39

39

00:02:09.349  -->  00:02:11.815
So that's this part, and now let's talk about
40

40

00:02:11.815  -->  00:02:14.386
the "seen on" part, and as I mentioned,
41

41

00:02:14.386  -->  00:02:16.350
we're going to use a grid here as well.
42

42

00:02:16.350  -->  00:02:18.277
But probably now you're wondering,
43

43

00:02:18.277  -->  00:02:20.602
well, we don't even have any grid items.
44

44

00:02:20.602  -->  00:02:23.043
How are we going to use a grid here for that?
45

45

00:02:23.043  -->  00:02:25.635
So let's take a look at our HTML,
46

46

00:02:25.635  -->  00:02:28.218
and in fact, this element here,
47

47

00:02:29.561  -->  00:02:32.425
it does only have this text here.
48

48

00:02:32.425  -->  00:02:34.928
So it doesn't even have any child element
49

49

00:02:34.928  -->  00:02:36.908
which could be a grid item, right?
50

50

00:02:36.908  -->  00:02:39.139
But in fact, that's not correct,
51

51

00:02:39.139  -->  00:02:42.827
because even text can be treated as a grid item.
52

52

00:02:42.827  -->  00:02:46.643
And so, if I set this element here to a grid container,
53

53

00:02:46.643  -->  00:02:48.606
then the "as seen on" text here
54

54

00:02:48.606  -->  00:02:51.108
will be one of the grid items.
55

55

00:02:51.108  -->  00:02:54.185
So again, even text can be a grid item.
56

56

00:02:54.185  -->  00:02:57.879
And what can also be grid items are pseudo-elements,
57

57

00:02:57.879  -->  00:03:01.778
and so the trick here is to use one ::before pseudo-element
58

58

00:03:01.778  -->  00:03:04.540
and one ::after pseudo-element to create
59

59

00:03:04.540  -->  00:03:07.123
the two lines that we see here.
60

60

00:03:08.130  -->  00:03:10.125
So these two lines, and so basically,
61

61

00:03:10.125  -->  00:03:12.586
this here will be one of the grid items,
62

62

00:03:12.586  -->  00:03:15.726
and the other grid item is this line here,
63

63

00:03:15.726  -->  00:03:17.483
which is a ::before pseudo-element,
64

64

00:03:17.483  -->  00:03:20.637
and this line here is an ::after pseudo-element.
65

65

00:03:20.637  -->  00:03:24.091
And so our three grid items will be these three.
66

66

00:03:24.091  -->  00:03:26.687
Okay, so that's a completely different application
67

67

00:03:26.687  -->  00:03:29.874
of CSS Grid, and so I wanted to show you that as well,
68

68

00:03:29.874  -->  00:03:31.201
and that's why I included
69

69

00:03:31.201  -->  00:03:34.247
this small part here in this project.
70

70

00:03:34.247  -->  00:03:37.830
Okay, so we set this here to display: grid,
71

71

00:03:42.345  -->  00:03:44.936
and before doing any grid definitions,
72

72

00:03:44.936  -->  00:03:47.819
let's quickly style the text here,
73

73

00:03:47.819  -->  00:03:50.736
so font-size: 1.6rem, and the color
74

74

00:03:55.263  -->  00:03:59.096
is the darker light gray, so color-grey-light,
75

75

00:04:00.706  -->  00:04:03.893
and the darker version to the number 1.
76

76

00:04:03.893  -->  00:04:05.812
All right, now let's take care of
77

77

00:04:05.812  -->  00:04:09.229
the ::before and ::after pseudo-elements.
78

78

00:04:12.716  -->  00:04:14.799
So ::before, and ::after.
79

79

00:04:17.472  -->  00:04:19.089
And remember that these two here
80

80

00:04:19.089  -->  00:04:22.169
together with the text will be the three grid items.
81

81

00:04:22.169  -->  00:04:25.267
And as always, we have to define the content property,
82

82

00:04:25.267  -->  00:04:27.963
even if we set it to empty, but without it,
83

83

00:04:27.963  -->  00:04:29.808
this is not going to work.
84

84

00:04:29.808  -->  00:04:32.641
Then we set its height to 1 pixel,
85

85

00:04:34.313  -->  00:04:37.396
we also set it to display as a block,
86

86

00:04:38.346  -->  00:04:42.160
and then we give it a background-color.
87

87

00:04:42.160  -->  00:04:46.480
And instead of just copying this color from here,
88

88

00:04:46.480  -->  00:04:49.704
we can use the currentColor variable, right?
89

89

00:04:49.704  -->  00:04:51.250
Remember this one?
90

90

00:04:51.250  -->  00:04:54.134
So what this does is that it takes the current text color,
91

91

00:04:54.134  -->  00:04:56.940
so the one defined in the color property,
92

92

00:04:56.940  -->  00:04:59.228
and simply uses that one.
93

93

00:04:59.228  -->  00:05:01.762
And so instead of having to duplicate color-grey-light-2
94

94

00:05:01.762  -->  00:05:05.074
here again, I can use the currentColor keyword,
95

95

00:05:05.074  -->  00:05:08.148
and that's then going to use this color.
96

96

00:05:08.148  -->  00:05:09.416
And if I change this one,
97

97

00:05:09.416  -->  00:05:11.248
then of course this one changes automatically,
98

98

00:05:11.248  -->  00:05:13.481
and so it's a great addition to CSS,
99

99

00:05:13.481  -->  00:05:15.586
this keyword, this variable.
100

100

00:05:15.586  -->  00:05:18.846
So let's take a look at what happens on the page,
101

101

00:05:18.846  -->  00:05:21.349
and keep in mind that we didn't specify any width here,
102

102

00:05:21.349  -->  00:05:25.845
and so that's probably going to have some effect on that.
103

103

00:05:25.845  -->  00:05:28.172
And all right, it now stretches
104

104

00:05:28.172  -->  00:05:31.192
across the entire container here.
105

105

00:05:31.192  -->  00:05:33.840
And so let's actually take a look at that here,
106

106

00:05:33.840  -->  00:05:37.340
so yeah, so this is our grid, and you see,
107

107

00:05:39.169  -->  00:05:43.380
down here, that it basically has just one row,
108

108

00:05:43.380  -->  00:05:46.531
but in fact, it has more than that, okay,
109

109

00:05:46.531  -->  00:05:49.806
because it also contains these 1 pixel height lines, right?
110

110

00:05:49.806  -->  00:05:53.584
So we can see here that it actually goes from one to four.
111

111

00:05:53.584  -->  00:05:58.249
So by default, CSS Grid always places its items in rows,
112

112

00:05:58.249  -->  00:06:01.577
right, but instead, we of course, we want columns.
113

113

00:06:01.577  -->  00:06:04.440
So we want three columns, one for the line,
114

114

00:06:04.440  -->  00:06:06.779
then after that, we want the text here,
115

115

00:06:06.779  -->  00:06:09.209
the "as seen on" text, and then we want the other line.
116

116

00:06:09.209  -->  00:06:11.876
And so let's define our columns.
117

117

00:06:15.596  -->  00:06:19.763
So grid-template-columns, and the first one is 1fr,
118

118

00:06:20.831  -->  00:06:23.114
so taking the remaining space,
119

119

00:06:23.114  -->  00:06:27.293
then the one in the middle is max-content, okay,
120

120

00:06:27.293  -->  00:06:29.339
and let me actually try min-content here
121

121

00:06:29.339  -->  00:06:31.715
to show you what happens,
122

122

00:06:31.715  -->  00:06:34.479
and then the last one is 1fr as well.
123

123

00:06:34.479  -->  00:06:37.796
So we want the left and the right side to be the same,
124

124

00:06:37.796  -->  00:06:39.627
occupying all the remaining space,
125

125

00:06:39.627  -->  00:06:41.631
and then the text in the middle.
126

126

00:06:41.631  -->  00:06:45.798
So let's take a look at that, and that's what I meant,
127

127

00:06:46.652  -->  00:06:49.029
with the min- and max-content,
128

128

00:06:49.029  -->  00:06:51.997
so right now this is breaking here into a new line,
129

129

00:06:51.997  -->  00:06:54.123
and that's exactly what min-content means.
130

130

00:06:54.123  -->  00:06:57.776
And so what I want here is max-content,
131

131

00:06:57.776  -->  00:07:00.239
and so that's what it looks like.
132

132

00:07:00.239  -->  00:07:02.635
Now, there's two more things that we need to add here,
133

133

00:07:02.635  -->  00:07:06.219
which is the space between these columns, so the gap,
134

134

00:07:06.219  -->  00:07:10.302
and then also vertically align these three items.
135

135

00:07:14.458  -->  00:07:18.491
So, grid-column-gap, let's say 15 pixels,
136

136

00:07:18.491  -->  00:07:22.324
and then just vertically align these elements.
137

137

00:07:24.469  -->  00:07:28.052
And that should be it, and yeah, that's it.
138

138

00:07:30.215  -->  00:07:34.382
So that's just the same as our initial version, right?
139

139

00:07:35.583  -->  00:07:37.813
Now, of course, the spacing here is different,
140

140

00:07:37.813  -->  00:07:40.547
and that's because we have these dev tools here.
141

141

00:07:40.547  -->  00:07:42.787
And so let's actually see the effect
142

142

00:07:42.787  -->  00:07:46.287
of different viewports on the layout here.
143

143

00:07:47.447  -->  00:07:50.116
Okay, so this is what happens
144

144

00:07:50.116  -->  00:07:53.569
when we change the viewport height.
145

145

00:07:53.569  -->  00:07:55.696
So basically, where the space decreases
146

146

00:07:55.696  -->  00:07:58.423
is exactly in the rows where we defined
147

147

00:07:58.423  -->  00:08:01.956
1fr as the size of the row track.
148

148

00:08:01.956  -->  00:08:06.458
So remember, it's this one here, and this one.
149

149

00:08:06.458  -->  00:08:08.791
Let's actually turn that on.
150

150

00:08:11.516  -->  00:08:13.759
So the header, and so now
151

151

00:08:13.759  -->  00:08:17.014
you will start seeing how these rows increase.
152

152

00:08:17.014  -->  00:08:19.681
Right, so this one and this one.
153

153

00:08:20.612  -->  00:08:22.777
And that's exactly what I meant at the beginning
154

154

00:08:22.777  -->  00:08:24.647
when I said that we were going to have
155

155

00:08:24.647  -->  00:08:26.591
very dynamic spacing here
156

156

00:08:26.591  -->  00:08:28.733
in a vertical direction in this component.
157

157

00:08:28.733  -->  00:08:31.162
So what CSS Grid allowed us here to do
158

158

00:08:31.162  -->  00:08:33.822
is to add this dynamic spacing here,
159

159

00:08:33.822  -->  00:08:36.544
which changes very easily with the viewport height.
160

160

00:08:36.544  -->  00:08:38.832
And all that because of the power
161

161

00:08:38.832  -->  00:08:40.954
of the fractional unit, right?
162

162

00:08:40.954  -->  00:08:44.302
So that's what allows us to have this behavior
163

163

00:08:44.302  -->  00:08:47.473
where, when we change this viewport height,
164

164

00:08:47.473  -->  00:08:49.627
so the height of the container,
165

165

00:08:49.627  -->  00:08:52.708
then this part here stays at the bottom as we want,
166

166

00:08:52.708  -->  00:08:55.247
this stays at the top, and all that changes
167

167

00:08:55.247  -->  00:08:57.457
is the size of these rows.
168

168

00:08:57.457  -->  00:08:59.855
Basically, this part here stays at the middle.
169

169

00:08:59.855  -->  00:09:04.581
Okay, and so once again, we used some advanced tools
170

170

00:09:04.581  -->  00:09:06.687
and concepts here in CSS Grid
171

171

00:09:06.687  -->  00:09:08.628
to achieve exactly what we want.
172

172

00:09:08.628  -->  00:09:10.694
And so with that, you have now the tools
173

173

00:09:10.694  -->  00:09:13.125
to create something similar for your own pages.
174

174

00:09:13.125  -->  00:09:15.918
So of course, I don't want you to do the exact same thing,
175

175

00:09:15.918  -->  00:09:18.567
and that's what I always say, because really,
176

176

00:09:18.567  -->  00:09:21.409
I teach you this so that you can have the tools,
177

177

00:09:21.409  -->  00:09:24.736
but not that you can copy exactly what I do here.
178

178

00:09:24.736  -->  00:09:27.924
So always be creative and use these tools
179

179

00:09:27.924  -->  00:09:30.064
for your own layouts and designs.
180

180

00:09:30.064  -->  00:09:33.217
All right, and with that, all there's left to do now
181

181

00:09:33.217  -->  00:09:36.905
is to actually create this missing part here,
182

182

00:09:36.905  -->  00:09:40.054
so this missing piece, which is the top three realtors.
183

183

00:09:40.054  -->  00:09:40.887
And then, of course,
184

184

00:09:40.887  -->  00:09:42.530
we're going to make all of this responsive,
185

185

00:09:42.530  -->  00:09:44.327
but for now, as for the layout,
186

186

00:09:44.327  -->  00:09:47.410
all that's missing is this part here.
