1
1

00:00:00,999  -->  00:00:02,285
<v Instructor>Welcome back.</v>
2

2

00:00:02,285  -->  00:00:03,941
Let's now try out Flexbox
3

3

00:00:03,941  -->  00:00:07,194
for the very first time in practice.
4

4

00:00:07,194  -->  00:00:09,413
And for now, we're gonna use CodePen again
5

5

00:00:09,413  -->  00:00:10,883
because what we want right now
6

6

00:00:10,883  -->  00:00:14,088
is just to write a simple demo, so a simple example,
7

7

00:00:14,088  -->  00:00:16,477
and for that, CodePen is perfect,
8

8

00:00:16,477  -->  00:00:19,434
so just head over to codepen dot io,
9

9

00:00:19,434  -->  00:00:22,684
and then, click here, Create a New Pen.
10

10

00:00:23,736  -->  00:00:27,153
So we can hide this JavaScript part here,
11

11

00:00:28,073  -->  00:00:30,831
and then, just HTML and CSS.
12

12

00:00:30,831  -->  00:00:33,181
So here in the HTML, let's just create a container
13

13

00:00:33,181  -->  00:00:34,985
with a couple of items in it,
14

14

00:00:34,985  -->  00:00:37,166
and we can actually use the Emmet syntax here
15

15

00:00:37,166  -->  00:00:39,249
that I showed you before.
16

16

00:00:40,669  -->  00:00:42,387
So an element called container,
17

17

00:00:42,387  -->  00:00:44,733
and then, with items in there.
18

18

00:00:44,733  -->  00:00:47,472
So class item, and then, five times,
19

19

00:00:47,472  -->  00:00:49,064
hit Tab, and that's it,
20

20

00:00:49,064  -->  00:00:50,710
and I'm just gonna put some numbers here
21

21

00:00:50,710  -->  00:00:53,793
like one, two, three, four, and five,
22

22

00:00:55,227  -->  00:00:57,512
and that should be enough for our demo.
23

23

00:00:57,512  -->  00:01:00,300
Now before writing any actual Flexbox code,
24

24

00:01:00,300  -->  00:01:04,467
let's start by doing our global resets like we usually do,
25

25

00:01:05,435  -->  00:01:06,602
so margin zero
26

26

00:01:08,365  -->  00:01:10,698
padding zero, and box sizing
27

27

00:01:14,648  -->  00:01:16,719
border-box, okay?
28

28

00:01:16,719  -->  00:01:19,469
Now we can hit Save here as well.
29

29

00:01:20,477  -->  00:01:22,355
And no, we don't need an account,
30

30

00:01:22,355  -->  00:01:24,433
so let's remove that as well.
31

31

00:01:24,433  -->  00:01:27,442
And now just some very quick formatting
32

32

00:01:27,442  -->  00:01:28,609
for container,
33

33

00:01:30,338  -->  00:01:31,838
and for the items.
34

34

00:01:34,976  -->  00:01:37,726
So just a quick background color,
35

35

00:01:39,414  -->  00:01:42,061
like this gray color, and give it some padding as well
36

36

00:01:42,061  -->  00:01:46,228
of like 10 pixels, okay, so no flexbox code here at all,
37

37

00:01:47,249  -->  00:01:50,638
just some initial styling before we start with Flexbox.
38

38

00:01:50,638  -->  00:01:52,199
Now about the items, let's give them
39

39

00:01:52,199  -->  00:01:54,699
some background color as well.
40

40

00:01:56,608  -->  00:02:00,525
And I'm using this pink color, which is f1425d.
41

41

00:02:04,239  -->  00:02:07,489
Then some padding, let's say 40 pixels.
42

42

00:02:09,733  -->  00:02:12,733
Some margin as well, like 30 pixels.
43

43

00:02:13,571  -->  00:02:15,154
A white text color,
44

44

00:02:16,587  -->  00:02:20,042
and a bigger text as well, so font-size,
45

45

00:02:20,042  -->  00:02:22,786
let's say 40 pixels as well.
46

46

00:02:22,786  -->  00:02:25,970
Maybe this is a bit too much, 30, but okay.
47

47

00:02:25,970  -->  00:02:27,563
So now we're good to go.
48

48

00:02:27,563  -->  00:02:29,792
So in this lecture, what I want to do is to focus
49

49

00:02:29,792  -->  00:02:33,573
on the Flexbox properties that we apply on a container.
50

50

00:02:33,573  -->  00:02:35,955
So basically, the first set of properties
51

51

00:02:35,955  -->  00:02:38,168
that I showed you in the last lecture.
52

52

00:02:38,168  -->  00:02:41,313
So the first thing we have to do in order to use Flexbox,
53

53

00:02:41,313  -->  00:02:46,162
remember, is to set the display property to flex,
54

54

00:02:46,162  -->  00:02:49,386
and take a look at what happens immediately.
55

55

00:02:49,386  -->  00:02:51,400
So these flex items here, they're now
56

56

00:02:51,400  -->  00:02:53,222
automatically side by side, right?
57

57

00:02:53,222  -->  00:02:55,706
Without using any float, without anything,
58

58

00:02:55,706  -->  00:02:58,417
all we did was to set the container to flex,
59

59

00:02:58,417  -->  00:03:00,160
then automatically these type elements
60

60

00:03:00,160  -->  00:03:04,332
become flex items that are displayed side by side.
61

61

00:03:04,332  -->  00:03:06,680
All right, now the next thing that I want to show you is
62

62

00:03:06,680  -->  00:03:09,597
the property called flex direction,
63

63

00:03:10,679  -->  00:03:12,782
so remember that the default,
64

64

00:03:12,782  -->  00:03:16,348
so the initial value is the row, so if you say row,
65

65

00:03:16,348  -->  00:03:18,942
nothing changes right, because that's the default,
66

66

00:03:18,942  -->  00:03:23,817
but we can also say row-reverse, and what happens then is
67

67

00:03:23,817  -->  00:03:26,946
that it inverts the direction of the main axis,
68

68

00:03:26,946  -->  00:03:28,791
so the main axis now goes here,
69

69

00:03:28,791  -->  00:03:31,921
from the right side to the left side, where before,
70

70

00:03:31,921  -->  00:03:34,664
it was going from the left side to the right side,
71

71

00:03:34,664  -->  00:03:38,343
as I showed you in the diagram in the last lecture.
72

72

00:03:38,343  -->  00:03:40,449
And so with this, we inverted the order,
73

73

00:03:40,449  -->  00:03:42,343
and so of course, it now starts at one,
74

74

00:03:42,343  -->  00:03:44,846
two, three, four, five, all right?
75

75

00:03:44,846  -->  00:03:49,013
Now the next thing that we can try out is the column,
76

76

00:03:50,326  -->  00:03:51,764
and then we get this result,
77

77

00:03:51,764  -->  00:03:53,959
and so now, the flex items are stacked
78

78

00:03:53,959  -->  00:03:57,884
one on top of another, so one, two, three, four, five,
79

79

00:03:57,884  -->  00:03:59,730
all the way down here, and then the last one
80

80

00:03:59,730  -->  00:04:01,343
is column-reverse, and you can imagine
81

81

00:04:01,343  -->  00:04:04,118
what that one will do, exactly.
82

82

00:04:04,118  -->  00:04:06,549
Now basically, the column starts down here,
83

83

00:04:06,549  -->  00:04:08,788
which means that the main direction is going from here
84

84

00:04:08,788  -->  00:04:12,538
down here, up in the direction up here, okay?
85

85

00:04:13,641  -->  00:04:16,087
So remember, it's always important to know
86

86

00:04:16,087  -->  00:04:18,796
where the main direction goes, okay?
87

87

00:04:18,796  -->  00:04:21,155
And now that we have experimented with all of these,
88

88

00:04:21,155  -->  00:04:24,398
let's just set it back to row, which is the default,
89

89

00:04:24,398  -->  00:04:27,308
so you can probably imagine that this will be pretty handy,
90

90

00:04:27,308  -->  00:04:29,383
for example, for responsive designs,
91

91

00:04:29,383  -->  00:04:31,496
that for example, on a smaller screen,
92

92

00:04:31,496  -->  00:04:34,309
we can simply set the flex direction to column,
93

93

00:04:34,309  -->  00:04:35,720
and then, the elements will all be
94

94

00:04:35,720  -->  00:04:39,040
one on top of another, so that is flex direction.
95

95

00:04:39,040  -->  00:04:42,686
Next up, I want to show you justify content.
96

96

00:04:42,686  -->  00:04:44,269
So justify content,
97

97

00:04:46,013  -->  00:04:47,949
and remember that this property is used
98

98

00:04:47,949  -->  00:04:50,636
to control how the items should be positioned
99

99

00:04:50,636  -->  00:04:52,981
along the main axis, right?
100

100

00:04:52,981  -->  00:04:55,731
So let's start with center, here.
101

101

00:04:56,594  -->  00:04:58,168
And so you see that automatically
102

102

00:04:58,168  -->  00:05:00,183
all the items are now all right here
103

103

00:05:00,183  -->  00:05:01,877
in the center of the container,
104

104

00:05:01,877  -->  00:05:04,952
so with that very simple property, we immediately centered
105

105

00:05:04,952  -->  00:05:07,073
the entire content in this container.
106

106

00:05:07,073  -->  00:05:08,826
Just imagine how difficult it would be
107

107

00:05:08,826  -->  00:05:10,539
to create this very simple layout
108

108

00:05:10,539  -->  00:05:12,822
that you see here with a float layout.
109

109

00:05:12,822  -->  00:05:16,555
It would be much harder, so center puts these items here
110

110

00:05:16,555  -->  00:05:18,034
right in the middle of the container,
111

111

00:05:18,034  -->  00:05:21,558
but it doesn't do anything to the space that's between them.
112

112

00:05:21,558  -->  00:05:24,241
Because the space that we have here is defined
113

113

00:05:24,241  -->  00:05:27,826
by the margin that we have on the items.
114

114

00:05:27,826  -->  00:05:30,663
So this margin here defines the space.
115

115

00:05:30,663  -->  00:05:33,085
Let's actually try to remove it,
116

116

00:05:33,085  -->  00:05:35,672
okay, and then it would look like this, right?
117

117

00:05:35,672  -->  00:05:37,628
So all that justify content does
118

118

00:05:37,628  -->  00:05:41,795
is to put all the items in the center of the flex container.
119

119

00:05:42,644  -->  00:05:46,221
So let me show you another one here which is space between,
120

120

00:05:46,221  -->  00:05:48,938
and that one is also very exciting.
121

121

00:05:48,938  -->  00:05:51,680
Space between, and that's the result.
122

122

00:05:51,680  -->  00:05:53,703
So what you see now is that the space
123

123

00:05:53,703  -->  00:05:56,548
is evenly distributed between these flex items,
124

124

00:05:56,548  -->  00:05:58,628
so this space, and this, this, and this,
125

125

00:05:58,628  -->  00:05:59,980
it's all the same space,
126

126

00:05:59,980  -->  00:06:01,329
and Flexbox automatically does
127

127

00:06:01,329  -->  00:06:03,139
all these calculations for us,
128

128

00:06:03,139  -->  00:06:05,782
and automatically positions the elements like this,
129

129

00:06:05,782  -->  00:06:09,201
and of course, if we change the width here of the browser,
130

130

00:06:09,201  -->  00:06:13,584
then the space that's between these items also adjusts,
131

131

00:06:13,584  -->  00:06:15,040
so that makes it really easy
132

132

00:06:15,040  -->  00:06:18,050
to position and align these elements.
133

133

00:06:18,050  -->  00:06:22,217
Now let me once again get rid of that margin here.
134

134

00:06:23,427  -->  00:06:25,925
Because now that makes it even more visible
135

135

00:06:25,925  -->  00:06:28,541
what the space between property here does.
136

136

00:06:28,541  -->  00:06:31,045
Because there's another one which is actually pretty similar
137

137

00:06:31,045  -->  00:06:34,628
which is called space around, space-around.
138

138

00:06:35,982  -->  00:06:38,134
So basically what space-around does here
139

139

00:06:38,134  -->  00:06:40,186
is that it puts the same amount of space
140

140

00:06:40,186  -->  00:06:43,148
on both the left side and the right side
141

141

00:06:43,148  -->  00:06:46,385
of each of the flex items, so what this means is that
142

142

00:06:46,385  -->  00:06:49,173
this total space between these two flex items
143

143

00:06:49,173  -->  00:06:51,305
is double the space that's here
144

144

00:06:51,305  -->  00:06:54,755
on this left side of this item, all right.
145

145

00:06:54,755  -->  00:06:57,421
Now next up, there's space evenly,
146

146

00:06:57,421  -->  00:07:01,148
which is also pretty similar to these ones,
147

147

00:07:01,148  -->  00:07:04,792
so space-evenly, and as you can see what this one does
148

148

00:07:04,792  -->  00:07:06,321
is that the space is always the same,
149

149

00:07:06,321  -->  00:07:08,945
so this one is the same as this, and this, and this,
150

150

00:07:08,945  -->  00:07:12,413
and all of the spaces here between them.
151

151

00:07:12,413  -->  00:07:16,161
So while space evenly ensures that the space
152

152

00:07:16,161  -->  00:07:18,201
is always the same between elements
153

153

00:07:18,201  -->  00:07:22,344
and on the sides of the elements, space around ensures
154

154

00:07:22,344  -->  00:07:25,405
that the amount of space around each element is the same
155

155

00:07:25,405  -->  00:07:27,423
on the left and on the right side.
156

156

00:07:27,423  -->  00:07:28,985
So it's a subtle difference,
157

157

00:07:28,985  -->  00:07:32,731
but it can make a huge difference sometimes.
158

158

00:07:32,731  -->  00:07:36,179
So space between, space around, and space evenly.
159

159

00:07:36,179  -->  00:07:37,910
I also showed you center already,
160

160

00:07:37,910  -->  00:07:41,876
and so now, what we have left is flex-end,
161

161

00:07:41,876  -->  00:07:45,000
so when we want them on the right side,
162

162

00:07:45,000  -->  00:07:48,511
and then flex-start, which is the default.
163

163

00:07:48,511  -->  00:07:51,221
So these are the options for justify content,
164

164

00:07:51,221  -->  00:07:54,638
and I will leave it at center here, okay.
165

165

00:07:55,744  -->  00:07:58,728
And I will also get rid of this margin.
166

166

00:07:58,728  -->  00:08:00,024
All right, and now the last property
167

167

00:08:00,024  -->  00:08:04,024
I want to show you on this video is align items.
168

168

00:08:06,440  -->  00:08:08,972
So remember that justify content defines
169

169

00:08:08,972  -->  00:08:12,455
how the flex items are aligned along the main axis
170

170

00:08:12,455  -->  00:08:14,389
and the line items here defines
171

171

00:08:14,389  -->  00:08:18,543
how the items are aligned along the cross axis.
172

172

00:08:18,543  -->  00:08:20,355
Now in order for this to work,
173

173

00:08:20,355  -->  00:08:21,508
we actually need one of them
174

174

00:08:21,508  -->  00:08:23,506
to be bigger than all the others,
175

175

00:08:23,506  -->  00:08:26,208
because right now, they are already perfectly aligned
176

176

00:08:26,208  -->  00:08:28,051
along the cross axis, right?
177

177

00:08:28,051  -->  00:08:29,502
So along this one here,
178

178

00:08:29,502  -->  00:08:31,265
but if I make one of them bigger than the others,
179

179

00:08:31,265  -->  00:08:33,418
then we can experiment with different
180

180

00:08:33,418  -->  00:08:36,168
alignments across the cross axis.
181

181

00:08:37,054  -->  00:08:40,233
Let me just put a new class here,
182

182

00:08:40,233  -->  00:08:41,816
so i2 for item two.
183

183

00:08:47,196  -->  00:08:51,363
And let's give it some height, like 200 pixels or something.
184

184

00:08:52,316  -->  00:08:54,072
And all right, so you saw already that
185

185

00:08:54,072  -->  00:08:57,422
all of them actually growed, not just the i2
186

186

00:08:57,422  -->  00:08:59,605
on which we defined the height, right?
187

187

00:08:59,605  -->  00:09:01,488
And that's actually because the initial value
188

188

00:09:01,488  -->  00:09:03,805
on the line items is stretch,
189

189

00:09:03,805  -->  00:09:07,358
and with stretch, this is what happens.
190

190

00:09:07,358  -->  00:09:09,355
So let's just set something else here,
191

191

00:09:09,355  -->  00:09:11,978
so for example, center.
192

192

00:09:11,978  -->  00:09:13,438
And now we see what alignment
193

193

00:09:13,438  -->  00:09:16,262
along the cross axis actually means.
194

194

00:09:16,262  -->  00:09:19,189
So we have one element that is bigger than all the others,
195

195

00:09:19,189  -->  00:09:21,407
and with align items set to center,
196

196

00:09:21,407  -->  00:09:23,851
we basically centered these elements here
197

197

00:09:23,851  -->  00:09:26,227
relative to this one, which is bigger
198

198

00:09:26,227  -->  00:09:29,765
in the vertical direction, so in the cross axis.
199

199

00:09:29,765  -->  00:09:31,324
So now along the cross axis,
200

200

00:09:31,324  -->  00:09:33,560
they are now all nicely centered
201

201

00:09:33,560  -->  00:09:36,762
like around this line here, right?
202

202

00:09:36,762  -->  00:09:39,512
Now if we set this to flex-start,
203

203

00:09:41,159  -->  00:09:45,108
then they will all be aligned here nicely at the top.
204

204

00:09:45,108  -->  00:09:47,527
And the same for flex-end,
205

205

00:09:47,527  -->  00:09:50,046
and they will be aligned here to the end,
206

206

00:09:50,046  -->  00:09:53,254
and all of that happens, once again, along the cross axis,
207

207

00:09:53,254  -->  00:09:56,339
so in here, from up to down.
208

208

00:09:56,339  -->  00:09:59,799
So we saw center, flex-start, flex-end,
209

209

00:09:59,799  -->  00:10:02,966
and of course, the default is stretch.
210

210

00:10:03,902  -->  00:10:05,691
So what does stretch do?
211

211

00:10:05,691  -->  00:10:07,762
Well let's just say it simply stretches
212

212

00:10:07,762  -->  00:10:10,432
all the other elements to match the height
213

213

00:10:10,432  -->  00:10:12,844
of the highest flex item, okay?
214

214

00:10:12,844  -->  00:10:15,216
So that can be very useful as well.
215

215

00:10:15,216  -->  00:10:16,832
Now there's actually one more,
216

216

00:10:16,832  -->  00:10:18,710
which is called baseline, and for that,
217

217

00:10:18,710  -->  00:10:22,598
I'm gonna increase the font size on this one here as well,
218

218

00:10:22,598  -->  00:10:24,842
or actually, I can do it on another one.
219

219

00:10:24,842  -->  00:10:27,759
Let's add one class here called i4,
220

220

00:10:30,532  -->  00:10:32,699
and then, in here as well.
221

221

00:10:34,638  -->  00:10:36,638
So font size, 70 pixels.
222

222

00:10:37,602  -->  00:10:41,185
And now if I set this one here to baseline,
223

223

00:10:42,603  -->  00:10:46,090
then what it will do is to basically align the text
224

224

00:10:46,090  -->  00:10:48,394
on these flex items along a line,
225

225

00:10:48,394  -->  00:10:51,806
so if you draw an imaginary line here under these texts,
226

226

00:10:51,806  -->  00:10:54,398
you will see that they are now completely aligned,
227

227

00:10:54,398  -->  00:10:57,658
and if I increase this even more, like say to 90,
228

228

00:10:57,658  -->  00:10:59,425
then they all keep nicely aligned
229

229

00:10:59,425  -->  00:11:01,737
down here along the text, okay,
230

230

00:11:01,737  -->  00:11:05,404
so basically, align items to baseline
231

231

00:11:05,404  -->  00:11:08,873
is to align them to their common text.
232

232

00:11:08,873  -->  00:11:12,003
Now once again, I'm going with center here,
233

233

00:11:12,003  -->  00:11:15,284
and of course, I don't want this font size.
234

234

00:11:15,284  -->  00:11:17,387
So these were three properties
235

235

00:11:17,387  -->  00:11:19,478
that I wanted to show you in this video here,
236

236

00:11:19,478  -->  00:11:23,146
so flex-direction, justify-content, and align-items.
237

237

00:11:23,146  -->  00:11:24,846
Because these three are by far,
238

238

00:11:24,846  -->  00:11:28,982
the most used Flexbox properties on the flex container.
239

239

00:11:28,982  -->  00:11:31,739
Now there are also flex wrap and align content,
240

240

00:11:31,739  -->  00:11:34,289
but I'm gonna leave these for another video.
241

241

00:11:34,289  -->  00:11:36,152
Now before we finish this one,
242

242

00:11:36,152  -->  00:11:37,643
I want to show you what happens
243

243

00:11:37,643  -->  00:11:40,434
with the justify content, and align items
244

244

00:11:40,434  -->  00:11:43,460
when we change the flex direction.
245

245

00:11:43,460  -->  00:11:47,060
So let's set this one to a column.
246

246

00:11:47,060  -->  00:11:49,780
All right, and now the main direction
247

247

00:11:49,780  -->  00:11:52,609
is no longer going from the left to the right,
248

248

00:11:52,609  -->  00:11:55,776
but from the top to the bottom, right?
249

249

00:11:56,841  -->  00:11:58,604
And so, why are these items now here
250

250

00:11:58,604  -->  00:12:00,909
horizontally centered like this?
251

251

00:12:00,909  -->  00:12:02,204
Do you know why?
252

252

00:12:02,204  -->  00:12:03,668
Well, it's because of this
253

253

00:12:03,668  -->  00:12:06,852
align-items property set to center, right,
254

254

00:12:06,852  -->  00:12:09,283
because this direction here now, so basically,
255

255

00:12:09,283  -->  00:12:12,637
the horizontal centering is now in the cross direction,
256

256

00:12:12,637  -->  00:12:15,105
and remember that align-items is the property
257

257

00:12:15,105  -->  00:12:18,246
that controls the positioning along the cross axis,
258

258

00:12:18,246  -->  00:12:21,827
and so this center here is responsible for this,
259

259

00:12:21,827  -->  00:12:24,327
so let's set it to flex-start.
260

260

00:12:26,479  -->  00:12:27,551
And so now we see that it's at
261

261

00:12:27,551  -->  00:12:30,592
the beginning of the cross axis, which remember,
262

262

00:12:30,592  -->  00:12:33,855
now goes from left to right, so it starts here
263

263

00:12:33,855  -->  00:12:37,956
and it ends here, and so if we set it to flex-end,
264

264

00:12:37,956  -->  00:12:40,815
then all of these move to the right side, right?
265

265

00:12:40,815  -->  00:12:42,524
And so once again, it's really important
266

266

00:12:42,524  -->  00:12:45,740
to keep track of where the main and the cross axis
267

267

00:12:45,740  -->  00:12:48,895
are situated in order to use the justify content
268

268

00:12:48,895  -->  00:12:52,637
and align items properties in the correct way.
269

269

00:12:52,637  -->  00:12:54,079
And now, just to show you how
270

270

00:12:54,079  -->  00:12:56,668
the justify content works in this situation,
271

271

00:12:56,668  -->  00:13:00,668
let's just increase the height of this container
272

272

00:13:02,193  -->  00:13:05,243
to I don't know, let me experiment here a bit,
273

273

00:13:05,243  -->  00:13:06,774
500 pixels for example.
274

274

00:13:06,774  -->  00:13:08,265
No, that's not enough.
275

275

00:13:08,265  -->  00:13:10,015
So, 1000 pixels even.
276

276

00:13:12,269  -->  00:13:16,319
Well maybe it should be even more, I guess.
277

277

00:13:16,319  -->  00:13:18,562
So 1500 pixels, okay, and now,
278

278

00:13:18,562  -->  00:13:20,864
let's see what happens here.
279

279

00:13:20,864  -->  00:13:23,896
And so you see that they now start here,
280

280

00:13:23,896  -->  00:13:26,137
and then, they're basically centered
281

281

00:13:26,137  -->  00:13:28,178
now in the container, right?
282

282

00:13:28,178  -->  00:13:30,769
So this space here, down here at the end of the container
283

283

00:13:30,769  -->  00:13:34,437
is the same as this space here, up here, right?
284

284

00:13:34,437  -->  00:13:36,717
And once again, why is that?
285

285

00:13:36,717  -->  00:13:40,837
Well, it's because justify content is set to center,
286

286

00:13:40,837  -->  00:13:42,868
and so along the main axis,
287

287

00:13:42,868  -->  00:13:46,545
which is now going from top to the bottom, right,
288

288

00:13:46,545  -->  00:13:49,729
so along this main axis, they are now centered,
289

289

00:13:49,729  -->  00:13:52,729
so let's change it to space-between,
290

290

00:13:55,526  -->  00:13:57,154
and so this is what happens.
291

291

00:13:57,154  -->  00:13:59,256
So the space is now distributed here
292

292

00:13:59,256  -->  00:14:03,384
between these items just as I showed you before,
293

293

00:14:03,384  -->  00:14:05,391
but when I showed it to you the first time,
294

294

00:14:05,391  -->  00:14:07,926
it was horizontally, so it was in this direction,
295

295

00:14:07,926  -->  00:14:10,601
but now, if we change it to a column,
296

296

00:14:10,601  -->  00:14:13,568
it now happens in the vertical direction,
297

297

00:14:13,568  -->  00:14:17,310
because once again, that is now the main axis.
298

298

00:14:17,310  -->  00:14:19,010
All right, and I think that was enough
299

299

00:14:19,010  -->  00:14:21,674
experimentation for one lecture alone,
300

300

00:14:21,674  -->  00:14:24,206
and I know this is probably very confusing right now,
301

301

00:14:24,206  -->  00:14:26,092
because I felt exact same thing
302

302

00:14:26,092  -->  00:14:28,465
when I first started learning of Flexbox.
303

303

00:14:28,465  -->  00:14:30,152
It was all very confusing in my head,
304

304

00:14:30,152  -->  00:14:32,636
and so many properties with so many different names,
305

305

00:14:32,636  -->  00:14:35,322
but believe me that after some time using these,
306

306

00:14:35,322  -->  00:14:37,126
you will really know how to use them
307

307

00:14:37,126  -->  00:14:39,087
and when to use which property,
308

308

00:14:39,087  -->  00:14:41,290
and it will all become really easy for you,
309

309

00:14:41,290  -->  00:14:44,190
so don't worry if it sounds confusing right now,
310

310

00:14:44,190  -->  00:14:48,513
because with practice, it becomes really easy and intuitive.
311

311

00:14:48,513  -->  00:14:50,706
And in the next lecture, we're gonna take care
312

312

00:14:50,706  -->  00:14:54,467
of the properties related to the flex items themselves,
313

313

00:14:54,467  -->  00:14:56,239
so we're gonna change some order,
314

314

00:14:56,239  -->  00:14:57,982
and experiment with the flex grow,
315

315

00:14:57,982  -->  00:15:00,931
shrink, and flex bases properties.
316

316

00:15:00,931  -->  00:15:03,931
So keep tuned for that next lecture.
