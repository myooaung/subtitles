WEBVTT
1
00:00:00.420 --> 00:00:02.580
Hello everyone and welcome to this election.

2
00:00:02.790 --> 00:00:06.300
I'm super excited to walk you through these solutions for the Sings.

3
00:00:06.480 --> 00:00:07.740
You know it's going to be lots of fun.

4
00:00:07.740 --> 00:00:10.990
I hope you guys were able to figure it out a couple of questions here.

5
00:00:11.040 --> 00:00:12.150
If not that's fine.

6
00:00:12.150 --> 00:00:12.890
Don't worry.

7
00:00:12.940 --> 00:00:16.180
We're going to walk you through all of it and it should be creative for you.

8
00:00:16.290 --> 00:00:17.660
OK let's get started.

9
00:00:17.930 --> 00:00:22.770
So OK let's assume that we wanted to first start with you know question one.

10
00:00:22.890 --> 00:00:23.750
What went wrong.

11
00:00:23.760 --> 00:00:27.110
Fix the issue and indicate what does this code do.

12
00:00:27.200 --> 00:00:30.660
OK so here I defined it simply mainly kismet.

13
00:00:30.690 --> 00:00:34.110
Gail looks good age equal 26 and then full time employee.

14
00:00:34.260 --> 00:00:35.670
It's kind of toward FOX.

15
00:00:35.700 --> 00:00:36.210
OK.

16
00:00:36.390 --> 00:00:40.460
Again this is kind of you know covered under booleans we haven't covered booleans yet.

17
00:00:40.850 --> 00:00:47.220
This is simply showing you know true which is you know like like a deserved word with Python they're

18
00:00:47.220 --> 00:00:50.050
just telling you okay this full time he's a full time employee.

19
00:00:50.070 --> 00:00:50.490
Yes.

20
00:00:50.490 --> 00:00:51.100
True.

21
00:00:51.120 --> 00:00:54.300
So we'll call it like you know in digital logic controls.

22
00:00:54.300 --> 00:00:57.100
It's kind of one that means yes.

23
00:00:57.150 --> 00:00:57.890
OK.

24
00:00:58.260 --> 00:01:01.520
The other way is will quote FOX which means zero.

25
00:01:01.530 --> 00:01:03.970
That means you know not his not a full time employee.

26
00:01:03.990 --> 00:01:06.630
When we say Fox OK it he's kind of reserved words.

27
00:01:06.630 --> 00:01:07.660
The what about it.

28
00:01:07.710 --> 00:01:09.550
You know that won't affect the solution here.

29
00:01:09.960 --> 00:01:15.720
If we actually try to print simply and run that's if we're done this you'll see that there is you know

30
00:01:15.780 --> 00:01:21.570
telling you name name is not defined the name upper case is actually not define obviously that should

31
00:01:21.570 --> 00:01:23.330
be strictly truth for the world.

32
00:01:23.340 --> 00:01:26.300
So what I need to do I just need to come here.

33
00:01:26.370 --> 00:01:27.030
Copy.

34
00:01:27.050 --> 00:01:33.290
So I get a copy control V paste of what I want to just keep the exact same question here.

35
00:01:33.370 --> 00:01:36.210
I wanted to comment that I mean this one I'm going to be executed.

36
00:01:36.210 --> 00:01:37.700
Now I can do whatever I want here.

37
00:01:37.710 --> 00:01:42.450
Just edit the elements so here have name simply that name does it match this.

38
00:01:42.450 --> 00:01:42.750
Why.

39
00:01:42.750 --> 00:01:47.400
Because the naming convention is just different these have two different strings because he'd have one

40
00:01:47.400 --> 00:01:51.900
up rickie's if I do this and make a lower case then this will exactly mesh.

41
00:01:51.900 --> 00:01:53.550
This looks good.

42
00:01:53.550 --> 00:01:56.220
Second one let's assume they're going to run it again then.

43
00:01:56.250 --> 00:01:59.440
Well you know we fixed the name but we came up with another problem.

44
00:01:59.790 --> 00:02:01.200
The other problem is age.

45
00:02:01.230 --> 00:02:03.120
Name age is not defined.

46
00:02:03.240 --> 00:02:03.540
Why.

47
00:02:03.540 --> 00:02:05.090
Because it is upper case here.

48
00:02:05.100 --> 00:02:06.150
A lower case.

49
00:02:06.150 --> 00:02:10.940
Let's change that to make up a case and let's run it if you're on it then you're okay.

50
00:02:10.950 --> 00:02:15.900
Well something is again came up wrong as full time employee is not defined.

51
00:02:15.900 --> 00:02:18.190
Now I have this has full upper case.

52
00:02:18.200 --> 00:02:20.500
So you're going to bring this upper case.

53
00:02:20.970 --> 00:02:23.570
And time is fine and an employee uppercase.

54
00:02:23.580 --> 00:02:25.110
But this is lower case.

55
00:02:25.140 --> 00:02:28.130
Let's make this upper case looks good for around it.

56
00:02:28.290 --> 00:02:33.440
Then you going to come up with the basically the explications March 26 too.

57
00:02:33.450 --> 00:02:34.640
So he's basically is name is Mitch.

58
00:02:34.640 --> 00:02:35.940
He's 26 years old.

59
00:02:36.000 --> 00:02:39.920
He is a true full time employee within the company.

60
00:02:39.930 --> 00:02:40.700
That's.

61
00:02:40.790 --> 00:02:45.900
All right the next question is I am asking you to simply

62
00:02:49.470 --> 00:02:52.570
go ahead and tell me what went wrong and fix the error.

63
00:02:52.700 --> 00:03:00.450
Okay so try to simply fix the error and get X minus Y which is simply the difference between the two.

64
00:03:00.480 --> 00:03:05.170
So if you tried to run this code you come up with unsupported and up or Parin type.

65
00:03:05.220 --> 00:03:07.440
Okay which is I think an integer.

66
00:03:07.440 --> 00:03:12.880
Basically what you did here is that you define X as 20 and then you define y as for.

67
00:03:13.030 --> 00:03:17.970
And then you want it subjected to let's create a couple of cells here and let's see.

68
00:03:18.010 --> 00:03:22.770
You know if I wanted to get for example of the type of x What does X look like.

69
00:03:22.770 --> 00:03:27.630
If I get it for do this then only actually exit a string which makes sense because I defined it as doubles

70
00:03:27.630 --> 00:03:29.050
court right.

71
00:03:29.190 --> 00:03:30.440
What about type of y.

72
00:03:30.450 --> 00:03:35.660
If I wrote down that you can well the why is equal to 40 that means it's an integer.

73
00:03:35.670 --> 00:03:43.380
What I'm trying to do here in time to subtract X minus Y and one of subject is string minus an integer.

74
00:03:43.380 --> 00:03:44.630
That doesn't work.

75
00:03:44.970 --> 00:03:52.020
I need to convert to do the mathematical operation I need to simply do the converting this string into

76
00:03:52.080 --> 00:03:53.970
a integer.

77
00:03:54.120 --> 00:03:57.280
To do that I can use CAS basic use apply.

78
00:03:57.450 --> 00:04:00.470
I n t integer of x.

79
00:04:01.650 --> 00:04:09.040
Let's set the an of converted basically in the X drink into an integer and then subtracted minus y.

80
00:04:09.260 --> 00:04:12.000
If right done that you would come up with 16.

81
00:04:12.030 --> 00:04:12.590
Perfect.

82
00:04:12.600 --> 00:04:14.720
That's exactly what I was expecting.

83
00:04:15.010 --> 00:04:15.480
OK.

84
00:04:16.310 --> 00:04:16.730
Looks great.

85
00:04:16.730 --> 00:04:23.290
So now you know how can you convert from a string into a into an integer.

86
00:04:23.390 --> 00:04:25.770
OK and actually perform the actual operation.

87
00:04:25.870 --> 00:04:26.490
All right.

88
00:04:26.720 --> 00:04:27.430
OK.

89
00:04:27.950 --> 00:04:34.370
The next question they have here is write a code that picks an input from a user splits it into words

90
00:04:34.430 --> 00:04:36.070
and then print them on the screen.

91
00:04:36.110 --> 00:04:37.560
Print all the words on the screen.

92
00:04:37.730 --> 00:04:38.110
All right.

93
00:04:38.300 --> 00:04:40.300
Let's take a look.

94
00:04:40.700 --> 00:04:43.860
So first step is I'm going to ask the users how is your day going.

95
00:04:43.880 --> 00:04:45.190
In order to do that.

96
00:04:45.270 --> 00:04:45.830
OK.

97
00:04:46.130 --> 00:04:46.790
What I could do.

98
00:04:46.790 --> 00:04:50.770
They can ask me basically from the use of conduit input.

99
00:04:50.780 --> 00:04:51.370
All right.

100
00:04:51.670 --> 00:04:53.550
And they're going to say Okay how's your day going.

101
00:04:53.550 --> 00:04:55.000
It's actually copied from here.

102
00:04:56.280 --> 00:04:57.090
You cop it.

103
00:04:57.150 --> 00:04:58.330
Put it there.

104
00:04:58.440 --> 00:05:01.190
So asking the user how how's your day going.

105
00:05:01.220 --> 00:05:07.440
OK looks great and what I'm going to do basically whatever they are using and entered here I'm going

106
00:05:07.440 --> 00:05:09.430
to put that into my string.

107
00:05:09.440 --> 00:05:09.830
All right.

108
00:05:09.850 --> 00:05:13.700
That will be the first time that nathaniel k. was how the days go.

109
00:05:13.710 --> 00:05:14.620
How is your day going.

110
00:05:14.670 --> 00:05:16.130
Okay I say okay.

111
00:05:16.140 --> 00:05:19.290
My day my day is my day.

112
00:05:19.300 --> 00:05:22.770
Sorry is going great.

113
00:05:22.970 --> 00:05:23.790
Great.

114
00:05:23.930 --> 00:05:27.900
And that then only if you check my string.

115
00:05:29.160 --> 00:05:30.150
If you go here.

116
00:05:30.420 --> 00:05:33.370
And if you run it you'll come up with my day is going great.

117
00:05:33.390 --> 00:05:38.650
Great I to check let's see the tape saying there's the okay tape and open.

118
00:05:39.390 --> 00:05:43.920
For this you'll come up with this ashesi think okay which had a script.

119
00:05:44.680 --> 00:05:50.270
So the question is how can you split the input into words and print them on the screen.

120
00:05:50.290 --> 00:05:51.120
How can you do that.

121
00:05:51.130 --> 00:05:52.780
You know Division kind of thing.

122
00:05:52.780 --> 00:05:59.950
How can you split it to split up what you could do it again use the split method to actually split the

123
00:06:00.010 --> 00:06:03.490
sentence into words what it could do the same key.

124
00:06:03.500 --> 00:06:09.600
My underscored a string which is simply very very heavy and I play a method called splits again.

125
00:06:09.620 --> 00:06:16.660
They say a dot splits and open parentheses that will basically divided into different words and the

126
00:06:16.660 --> 00:06:20.730
words we're going to come back as a form of enlist.

127
00:06:21.360 --> 00:06:29.170
If I could do that and say okay my for example my words equals to my string split that basically apply

128
00:06:29.170 --> 00:06:37.800
the split function swots split method on my string to come up with a list of words for I that nothing

129
00:06:37.810 --> 00:06:39.210
happened which is good.

130
00:06:39.210 --> 00:06:41.870
You know that means the b c the cell has been executed.

131
00:06:42.130 --> 00:06:44.760
If I wanted to check what's in my words here.

132
00:06:44.860 --> 00:06:51.000
If I had it then you'd come up with my day is going great which just perfect.

133
00:06:51.010 --> 00:06:55.770
Let's take a look at what the datatype What did that did a type of this same type.

134
00:06:55.900 --> 00:07:02.410
And if I say my words if I run it you come up with a list that means it's actually lists of words as

135
00:07:02.410 --> 00:07:03.410
you can see.

136
00:07:03.510 --> 00:07:04.260
All right.

137
00:07:04.710 --> 00:07:05.320
OK.

138
00:07:05.710 --> 00:07:09.130
So what I wanted to do they wanted to print on the screen.

139
00:07:09.290 --> 00:07:12.550
Okay here is for example the list of words you entered.

140
00:07:12.550 --> 00:07:16.140
Let's take a look sort of could you get the okay print all right.

141
00:07:16.570 --> 00:07:25.330
An open parentheses and what it could do is say okay here are the lists of words of words.

142
00:07:25.540 --> 00:07:27.740
You enter words.

143
00:07:28.300 --> 00:07:34.370
And you can pass along simply the my score words.

144
00:07:34.700 --> 00:07:35.400
OK.

145
00:07:35.890 --> 00:07:39.440
If I read it that's we're going to get here is a list of words you entered.

146
00:07:39.460 --> 00:07:43.040
And you come up with basically all the words you have got on it.

147
00:07:43.120 --> 00:07:47.070
That's pretty much what you what I expect you to do in this exercise.

148
00:07:47.110 --> 00:07:50.040
All right let's take one more example.

149
00:07:50.050 --> 00:07:55.810
So question for I'm asking try to call the set and perform a use that converted to uppercase and printed

150
00:07:55.840 --> 00:07:56.450
on this.

151
00:07:56.500 --> 00:07:58.570
That should be pretty easy.

152
00:07:58.570 --> 00:08:01.660
So I'm going to do he is going to say okay I'm going to find input.

153
00:08:01.660 --> 00:08:07.570
For example you can call whatever inputs string and are going to use that again the input.

154
00:08:07.990 --> 00:08:15.260
And let's for example like as the user to let's say enter into a sentence for example whatever into

155
00:08:15.250 --> 00:08:16.090
a sentence.

156
00:08:16.140 --> 00:08:16.400
Right.

157
00:08:16.480 --> 00:08:20.890
So you looking into something where they're going to be entering here again come back as an input string

158
00:08:21.520 --> 00:08:26.500
and then say okay I'm going to take whatever the input that they use that will begin to feed to the

159
00:08:26.530 --> 00:08:29.700
computer and they say okay I play up a method.

160
00:08:29.720 --> 00:08:35.960
You as a member of upper K and that should determine my output string.

161
00:08:36.280 --> 00:08:38.130
All again you can call it whatever.

162
00:08:38.590 --> 00:08:43.290
So simply you took whatever input you make it up a case and that would be my output string.

163
00:08:43.360 --> 00:08:46.770
Then I can take it and print that on the screen in the saiki Print.

164
00:08:47.020 --> 00:08:50.520
And I'm going to pass along my out underscored string.

165
00:08:51.070 --> 00:08:51.520
Aha.

166
00:08:51.670 --> 00:08:53.940
Let's run that into a sentence.

167
00:08:53.950 --> 00:08:55.280
Hello.

168
00:08:55.840 --> 00:08:57.170
Hello world.

169
00:08:57.520 --> 00:09:01.680
And if I had that then I would come up with Hello where uppercase looks great.

170
00:09:01.690 --> 00:09:04.130
That's exactly what we were expecting to do.

171
00:09:04.160 --> 00:09:05.060
All right.

172
00:09:05.470 --> 00:09:11.600
Okay let's take again one more one more exercise and then we'll going to take kind of a break.

173
00:09:11.600 --> 00:09:16.390
You know end the lecture and then I'm going to continue along to finish the exercise in moving forward.

174
00:09:16.840 --> 00:09:23.310
So question 5 I'm asking you too radical that from a user requesting his or her email and then next

175
00:09:23.310 --> 00:09:24.710
check the youzhny.

176
00:09:24.930 --> 00:09:27.550
Alright so I'll get into your email address.

177
00:09:27.550 --> 00:09:32.890
You're going to come up with whatever email they want I want you to do is just simply take Ryan up ammad

178
00:09:32.900 --> 00:09:36.230
for the memory from that e-mail or whatever email they're using an end to it.

179
00:09:36.290 --> 00:09:37.440
Take a look.

180
00:09:37.510 --> 00:09:44.740
So again to feed data from using their CV use the input and then going to as the user to enter your

181
00:09:45.220 --> 00:09:46.070
e-mail.

182
00:09:46.940 --> 00:09:50.830
Adults are gay so.

183
00:09:50.880 --> 00:09:56.540
These an end to value anything that value put it in an input for exemplars drink or whatever value and

184
00:09:56.540 --> 00:09:57.410
be the finding.

185
00:09:57.680 --> 00:09:58.490
Right.

186
00:09:59.020 --> 00:10:00.240
We are going.

187
00:10:00.280 --> 00:10:06.340
We wanted to expect the user name which means I wanted to use the split method along with the ad here

188
00:10:06.730 --> 00:10:11.210
to simply split the user name separately from the email that come out.

189
00:10:11.470 --> 00:10:15.040
We have done that before in the concepts kind of lecture.

190
00:10:15.240 --> 00:10:16.290
He will going to do it again.

191
00:10:16.300 --> 00:10:18.740
I'm going to say okay out underscored his teaching.

192
00:10:18.970 --> 00:10:25.450
Would be equals to take my input string that we have here which is inputs on discords string.

193
00:10:25.850 --> 00:10:30.580
And what I'm going to do here in a c dart's splits which is my method.

194
00:10:30.730 --> 00:10:34.630
But I wanted to split on an at on the set.

195
00:10:34.910 --> 00:10:35.280
OK.

196
00:10:35.320 --> 00:10:37.080
Which is what we have here for the email.

197
00:10:37.240 --> 00:10:37.950
Right.

198
00:10:38.410 --> 00:10:38.710
OK.

199
00:10:38.740 --> 00:10:41.340
But please don't forget these single quotes.

200
00:10:41.470 --> 00:10:42.350
You can.

201
00:10:45.150 --> 00:10:46.090
Oh my apologies.

202
00:10:46.090 --> 00:10:47.120
Here is a Guinness.

203
00:10:47.120 --> 00:10:48.030
See at.

204
00:10:48.230 --> 00:10:51.340
And that's we're going to be splitting basically the e-mail on the air.

205
00:10:51.410 --> 00:10:51.750
All right.

206
00:10:51.770 --> 00:10:53.900
And that we're going to determine the output string.

207
00:10:54.110 --> 00:10:55.970
We're going to be my kind of list.

208
00:10:56.010 --> 00:10:56.530
All right.

209
00:10:56.960 --> 00:11:00.060
And let's actually let let's run it let's see what's going to happen.

210
00:11:00.090 --> 00:11:04.010
So I'm going to say okay enthrone emails are going to enter whatever e-mail for example Mitch.

211
00:11:04.170 --> 00:11:10.490
Steve for example g mail dot com if they do this bad thing happened which is good.

212
00:11:10.490 --> 00:11:11.530
That means no error.

213
00:11:11.780 --> 00:11:17.270
But if I wanted to go ahead and view what's outstanding if I'm that then you would come up simply with

214
00:11:17.270 --> 00:11:18.240
a list right Mitch.

215
00:11:18.260 --> 00:11:22.060
That's Steve on separate from the email separate as well.

216
00:11:22.600 --> 00:11:26.790
What I'm asking you to do is to print on the screen or text check the user name on.

217
00:11:26.840 --> 00:11:33.520
And unkillable Jima Vulcan or what any did this key to do that you can say okay print.

218
00:11:33.760 --> 00:11:34.420
All right.

219
00:11:34.730 --> 00:11:38.230
And I need my out underscore string.

220
00:11:38.510 --> 00:11:42.030
But Amy the first element only if you get it remember this is a list.

221
00:11:42.170 --> 00:11:48.110
And it wanted to access or to access the first element only which is in index is actually 0 again in

222
00:11:48.110 --> 00:11:50.680
Python form as with lists.

223
00:11:50.720 --> 00:11:55.700
We the index zero in the case the first element index 1 indicates the second element.

224
00:11:55.940 --> 00:12:01.180
And that then you'd come up with Steve which is exactly what we were expecting.

225
00:12:01.190 --> 00:12:01.750
All right.

226
00:12:02.090 --> 00:12:04.010
And that's pretty much all we have for this section.

227
00:12:04.010 --> 00:12:06.530
I hope you've enjoyed it and see you in the next election.
