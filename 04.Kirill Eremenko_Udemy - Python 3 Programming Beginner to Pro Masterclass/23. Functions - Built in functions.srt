1
00:00:00,780 --> 00:00:06,930
Hello everyone and welcome to this new lecture in the biggest lecture have been able to get an overview

2
00:00:06,930 --> 00:00:09,780
of the functions and what functions do.

3
00:00:10,050 --> 00:00:14,870
And we've been able as well to define our own function and as well call that function.

4
00:00:14,910 --> 00:00:15,390
OK.

5
00:00:15,720 --> 00:00:21,390
And this section we're going to look at kind of a little bit simpler actually example into how can we

6
00:00:22,260 --> 00:00:27,720
use some of the built in functions that has already been made for us within Python environment.

7
00:00:27,720 --> 00:00:27,990
All right.

8
00:00:28,140 --> 00:00:32,640
So if you take a look at this table and zoom in a little bit you'll find that there is a lot of functions

9
00:00:32,640 --> 00:00:34,890
like for example men that is like some.

10
00:00:34,890 --> 00:00:40,470
There is let's say Max there are so many different functions in here that has already been made for

11
00:00:40,470 --> 00:00:40,620
us.

12
00:00:40,650 --> 00:00:42,260
You don't need to go and define them again.

13
00:00:42,750 --> 00:00:46,200
So let's take a look at how can we do that.

14
00:00:46,200 --> 00:00:46,410
All right.

15
00:00:46,940 --> 00:00:49,360
So let's assume that I have for example a list.

16
00:00:49,470 --> 00:00:50,000
OK.

17
00:00:50,040 --> 00:00:58,230
And let's define that list which is equal to let's say 4 5 1 2 8 and 5.

18
00:00:58,610 --> 00:00:59,500
OK.

19
00:00:59,910 --> 00:01:01,110
And let's run it.

20
00:01:01,110 --> 00:01:01,920
So here where here we go.

21
00:01:01,920 --> 00:01:03,240
That's my list.

22
00:01:03,240 --> 00:01:07,320
And let's define for example why other lists.

23
00:01:07,380 --> 00:01:14,490
And I'm going to call the Y for instance let's say lists and I'm going to use our word range and get

24
00:01:14,490 --> 00:01:16,610
a list from 1 2 7.

25
00:01:16,630 --> 00:01:17,820
All right enter.

26
00:01:18,240 --> 00:01:20,220
Let's take a look for example at x.

27
00:01:20,280 --> 00:01:21,260
Here we go.

28
00:01:21,360 --> 00:01:22,410
And let's take a look at Y.

29
00:01:22,410 --> 00:01:23,400
Here we go.

30
00:01:23,400 --> 00:01:27,760
Now we have numbers from one till up to and excluding seven right.

31
00:01:27,750 --> 00:01:28,570
So from one to three.

32
00:01:28,580 --> 00:01:30,330
Up until six.

33
00:01:30,330 --> 00:01:30,770
All right.

34
00:01:30,810 --> 00:01:31,910
Looks good.

35
00:01:31,910 --> 00:01:33,050
So what I could do.

36
00:01:33,100 --> 00:01:36,210
We're going to say okay let's use one of these readymade functions for us.

37
00:01:36,240 --> 00:01:38,750
So let's for example pick an easy one.

38
00:01:39,270 --> 00:01:44,670
Let's pick for instance the lens or lens which lens for lens for short.

39
00:01:45,360 --> 00:01:52,470
So if I say Len and I can pass along here my value x shift enter it will return simply how many elements

40
00:01:52,470 --> 00:01:54,580
would contained within our list x.

41
00:01:54,580 --> 00:01:59,010
So here one two three four five six we have six elements.

42
00:01:59,010 --> 00:01:59,500
All right.

43
00:01:59,760 --> 00:02:05,490
Let's maybe take a look at the lens of Y come up as well with six element because we have six elements

44
00:02:05,490 --> 00:02:05,760
in here.

45
00:02:06,010 --> 00:02:06,860
OK.

46
00:02:06,990 --> 00:02:08,160
All right looks good.

47
00:02:08,160 --> 00:02:14,820
What if I wanted for example to pick maybe another function maybe pick let's say the main function or

48
00:02:14,820 --> 00:02:16,020
let's say the max functions.

49
00:02:16,050 --> 00:02:17,240
Let's take a look at it.

50
00:02:17,280 --> 00:02:24,820
So it might take a min X enter you'll come up with number one because this is the least value the minimum

51
00:02:24,820 --> 00:02:26,530
value within my list.

52
00:02:26,530 --> 00:02:29,990
Let's take a look at the Max you're going to see a max of x.

53
00:02:30,010 --> 00:02:30,470
Here we go.

54
00:02:30,490 --> 00:02:34,540
And come up with a value of eight which the maximum value within our function.

55
00:02:34,540 --> 00:02:34,910
All right.

56
00:02:35,000 --> 00:02:36,400
Great great.

57
00:02:36,760 --> 00:02:37,580
OK.

58
00:02:37,600 --> 00:02:39,180
Let's take a look at another function.

59
00:02:39,220 --> 00:02:46,420
So if you go up here you will find that there is a function called tuple OK which you simply can convert

60
00:02:46,510 --> 00:02:49,600
from a list to a tuple extremely powerful.

61
00:02:49,630 --> 00:02:50,620
So it's how can we do that.

62
00:02:50,620 --> 00:02:55,780
What we could do we could say okay z equals two tuple of x.

63
00:02:55,990 --> 00:03:02,830
So simply I took my value x which is simply here my list and I'm going to convert it to tuple shift

64
00:03:02,830 --> 00:03:05,050
enter to take a look at Z.

65
00:03:05,160 --> 00:03:08,960
Here we go now it becomes doesn't become square bracket anymore it became parentheses.

66
00:03:09,130 --> 00:03:12,500
And if I take a look at type of z.

67
00:03:12,720 --> 00:03:13,190
Here you go.

68
00:03:13,200 --> 00:03:15,830
You come up with tuple if you call tuple are immutable.

69
00:03:15,840 --> 00:03:17,250
That means you can't write on it.

70
00:03:17,250 --> 00:03:18,350
Right you can't write to it.

71
00:03:18,390 --> 00:03:18,570
Right.

72
00:03:18,780 --> 00:03:25,440
OK let's take another example maybe let's sum up let's say these two lists together let's sum up all

73
00:03:25,440 --> 00:03:26,880
the x and all the y together.

74
00:03:26,880 --> 00:03:28,120
How can we do that.

75
00:03:28,200 --> 00:03:39,470
So we could do is to print the summation of let's say x plus summation first let's say of for example

76
00:03:39,470 --> 00:03:41,290
first of print summation of x.

77
00:03:41,300 --> 00:03:43,860
So that would sum up all the elements within X first.

78
00:03:43,910 --> 00:03:44,750
Let's take a look at it.

79
00:03:45,380 --> 00:03:47,440
So print some X enter.

80
00:03:47,450 --> 00:03:47,950
Here we go.

81
00:03:47,950 --> 00:03:48,830
That's 25.

82
00:03:49,070 --> 00:03:49,790
Okay.

83
00:03:50,210 --> 00:03:54,430
And what I want you guys to do again this kind of a mini challenge.

84
00:03:54,440 --> 00:03:59,960
Please go ahead pause a video and I want you to someplace to print all the summation of all the values

85
00:03:59,960 --> 00:04:04,440
here of the wine list please go ahead pause a video and see you guys after the challenge.

86
00:04:06,570 --> 00:04:07,040
All right.

87
00:04:07,050 --> 00:04:08,670
Hope you guys were able to figure out the challenge.

88
00:04:08,730 --> 00:04:16,040
Ask us to do is to simply print and I wanted to print summation of all the values within why shift enter.

89
00:04:16,050 --> 00:04:16,530
Here we go.

90
00:04:16,560 --> 00:04:21,700
We come up with 21 which is simply the summation of one two three four five and six.

91
00:04:22,080 --> 00:04:22,410
All right.

92
00:04:22,830 --> 00:04:24,340
What you could do as well.

93
00:04:24,350 --> 00:04:24,650
All right.

94
00:04:24,960 --> 00:04:25,900
What I could do as well.

95
00:04:25,920 --> 00:04:26,420
I'm going to take you.

96
00:04:26,430 --> 00:04:27,560
Let's go ahead and print.

97
00:04:27,600 --> 00:04:34,050
Let's say the summation values of X plus Y which are simply adding up all the elements within X all

98
00:04:34,050 --> 00:04:34,910
the elements within y.

99
00:04:34,920 --> 00:04:38,220
And some of them are OK entry we go.

100
00:04:38,280 --> 00:04:41,680
You come up with 46 which is simply twenty five plus twenty one.

101
00:04:41,700 --> 00:04:41,910
All right.

102
00:04:43,290 --> 00:04:46,940
Let's take a look at another built in function we shall call it zip.

103
00:04:46,940 --> 00:04:47,700
OK.

104
00:04:47,970 --> 00:04:49,530
Which is again defined here somewhere.

105
00:04:49,530 --> 00:04:50,620
It's called zip.

106
00:04:50,670 --> 00:04:52,820
This one again there are tons of functions.

107
00:04:52,830 --> 00:04:56,910
Obviously I can't I won't be able to cover all of them because will take me like you know a whole new

108
00:04:56,910 --> 00:04:59,320
course is to cover covered all these functions here.

109
00:04:59,320 --> 00:05:03,120
I'm just walking through a couple of examples you guys can go ahead and read additional have additional

110
00:05:03,120 --> 00:05:07,740
readings and maybe scan through all these functions if you wanted to.

111
00:05:08,310 --> 00:05:12,300
So what he wanted to do is use a zip function to show you what what it does.

112
00:05:12,330 --> 00:05:19,490
So that defined my list one equals two let's say 1 3 and 5.

113
00:05:19,640 --> 00:05:22,230
I'm going to find another list called my list of two.

114
00:05:22,710 --> 00:05:29,330
And here I'm going to put for example let's say 8 to 1 9 shift enter go.

115
00:05:29,480 --> 00:05:37,140
And when I wanted to do is to simply kind of you know like what zip does it just make an iterator that

116
00:05:37,230 --> 00:05:40,020
aggregates elements from each of the troubles.

117
00:05:40,050 --> 00:05:40,310
OK.

118
00:05:40,350 --> 00:05:43,410
I know it sounds confusing but let's see what we're going to do here.

119
00:05:43,410 --> 00:05:54,420
What I could do we're going to take before I and NJ in zip and I'm gonna pass along my list one I'm

120
00:05:54,420 --> 00:05:58,600
going to pass along my list to OK.

121
00:05:59,010 --> 00:06:01,970
And every time I'm going to print I and J.

122
00:06:02,280 --> 00:06:05,630
Or maybe I plus J K shift enter.

123
00:06:05,640 --> 00:06:06,480
Here we go.

124
00:06:06,480 --> 00:06:12,870
So now I've been able to simply kind of think of it as kind of you know like I'm like looking or aggregating

125
00:06:12,900 --> 00:06:13,870
all the parameters.

126
00:06:13,890 --> 00:06:16,290
You know like that are corresponding to each other.

127
00:06:16,320 --> 00:06:18,590
So I'm thinking okay the first element 1 and 8.

128
00:06:18,660 --> 00:06:19,850
So I sum them up.

129
00:06:19,920 --> 00:06:24,750
So that's why I came up with nine and a C plus two US ON THEM UP came up with five five or nine some

130
00:06:24,750 --> 00:06:27,080
of them up came up with 14 something like that.

131
00:06:27,090 --> 00:06:27,640
All right.

132
00:06:27,660 --> 00:06:28,530
Okay sounds good.

133
00:06:30,150 --> 00:06:33,350
So let's take a look at another example.

134
00:06:33,360 --> 00:06:37,770
Let's assume that I wanted to go back if you guys remembered our greetings function so let's define

135
00:06:37,770 --> 00:06:39,510
our greetings function.

136
00:06:39,510 --> 00:06:48,510
So I'm gonna say okay define greetings function and I'm going to pass along here my name and my greeting

137
00:06:49,340 --> 00:06:50,280
right.

138
00:06:50,580 --> 00:06:53,380
And what I'm doing as a print.

139
00:06:53,550 --> 00:06:56,220
Happy New Year.

140
00:06:56,340 --> 00:06:58,920
Exclamation mark here.

141
00:06:58,920 --> 00:06:59,630
Curly brackets.

142
00:06:59,640 --> 00:07:07,650
I wish you well whatever happiness or something and I say dot format format I'm going to pass along

143
00:07:07,650 --> 00:07:11,340
here my name and pass along my greetings.

144
00:07:11,350 --> 00:07:13,260
Just enter looks good.

145
00:07:13,260 --> 00:07:15,230
And let's actually test the function first.

146
00:07:15,240 --> 00:07:17,510
We actually have done that before in the previous section.

147
00:07:17,520 --> 00:07:20,100
Please refer to their previous lecture.

148
00:07:20,400 --> 00:07:25,530
For more details are going to see a function and then pass along key on my name or whatever name.

149
00:07:25,530 --> 00:07:29,900
And I can here pass along as well let's say happiness you enter.

150
00:07:29,910 --> 00:07:31,720
Happy New Year Ryan I wish you happiness.

151
00:07:31,770 --> 00:07:32,470
Okay looks great.

152
00:07:32,700 --> 00:07:33,090
Okay.

153
00:07:33,690 --> 00:07:34,810
Well I wanted to do right now.

154
00:07:34,900 --> 00:07:39,780
I wanted to use a zip kind of function to iterate across all these elements.

155
00:07:39,810 --> 00:07:45,360
So let's actually copy them so now I have two lists Lyla Mitch.

156
00:07:45,900 --> 00:07:50,400
Steve's sin to have happiness success love wealth and health.

157
00:07:50,400 --> 00:07:58,140
And when I wanted to do is to simply go ahead and use the zip to simply call the function several times

158
00:07:58,530 --> 00:08:00,320
and send along Layla.

159
00:08:00,480 --> 00:08:04,690
And then happiness Mitch and then success Chanel and in love and so on.

160
00:08:04,890 --> 00:08:07,020
Actually let's try it as a challenge.

161
00:08:07,020 --> 00:08:10,890
Please go ahead pause the video and try to go ahead.

162
00:08:10,890 --> 00:08:15,550
Use a zip in the exact same format as we have done here to print again.

163
00:08:15,560 --> 00:08:19,760
Layla happiness Mitch success and so on using the greetings function.

164
00:08:19,770 --> 00:08:22,790
Please go ahead pause a video and I'll see you guys after the challenge.

165
00:08:25,650 --> 00:08:29,570
All right I hope you guys were able to figure out the challenge we'd ask you guys to do is to simply

166
00:08:29,570 --> 00:08:34,250
use for AI and let's say J in zip.

167
00:08:34,250 --> 00:08:39,860
It's exactly the same as before and I'm going to pass along the name list and I'm going to pass along

168
00:08:39,860 --> 00:08:43,770
greetings lists all right.

169
00:08:44,150 --> 00:08:49,330
And what I could do are going to say greetings lists which is my greatest function.

170
00:08:49,320 --> 00:08:57,490
Now I need to call the function and I'm gonna pass along I and G in their shift enter and here we go.

171
00:08:57,530 --> 00:09:02,840
Now I have happy New Year Layla for example because it's first name I wish you happiness and then happy

172
00:09:02,840 --> 00:09:03,530
New Year.

173
00:09:03,530 --> 00:09:09,520
Mitch second name I wish you success having Chanel I wish you love and so on so forth.

174
00:09:09,590 --> 00:09:10,230
Okay.

175
00:09:10,270 --> 00:09:16,250
And that's kind of a quick example to show you how can we use the zip function to kind of you know look

176
00:09:16,940 --> 00:09:24,500
like separate or kind of a sign let's say names to each other here and pack them in a way in these variables

177
00:09:24,770 --> 00:09:28,490
and then we can use the variables to sum them up send them through a function or do whatever with them

178
00:09:28,610 --> 00:09:30,170
afterwards.

179
00:09:30,320 --> 00:09:30,750
All right.

180
00:09:30,860 --> 00:09:32,480
That's pretty much what I have for this lecture.

181
00:09:32,480 --> 00:09:33,590
I hope you guys enjoyed it.

182
00:09:33,590 --> 00:09:34,350
Let's recap.

183
00:09:34,360 --> 00:09:39,530
And this lecture we have been able to kind of take a look at some of the built in functions.

184
00:09:39,550 --> 00:09:46,190
Be able to take a look at you know look like tuples function zip function and Max min and length as

185
00:09:46,190 --> 00:09:46,940
well.

186
00:09:46,940 --> 00:09:48,830
And that's pretty much all what I have for this lecture.

187
00:09:48,830 --> 00:09:49,810
I hope you guys enjoyed it.

188
00:09:49,840 --> 00:09:54,620
The next lecture going to keep going and we're gonna have some more kind of more advanced functions

189
00:09:54,680 --> 00:09:56,120
in the next lecture.

190
00:09:56,120 --> 00:09:58,210
Best of luck and we'll see you guys in the next one.
