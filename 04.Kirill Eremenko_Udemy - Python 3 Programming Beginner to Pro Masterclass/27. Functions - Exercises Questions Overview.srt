1
00:00:01,840 --> 00:00:04,410
Hello everyone and welcome to this lecture.

2
00:00:04,480 --> 00:00:11,200
I'm super excited because in this section we're going to have tons of exercises related to functions

3
00:00:11,260 --> 00:00:14,080
filters and lambda expressions.

4
00:00:14,080 --> 00:00:15,130
All right let's get started.

5
00:00:15,730 --> 00:00:19,030
So this lecture I'm just gonna walk you through the list of questions.

6
00:00:19,180 --> 00:00:25,780
And again as you have done before be the next lectures we're going to have detailed explanations and

7
00:00:25,780 --> 00:00:29,050
video explanations to solve all these questions.

8
00:00:29,050 --> 00:00:34,480
Please make her make sure to just make an attempt to solve maybe a couple of questions in here.

9
00:00:34,660 --> 00:00:39,850
And if you get stuck Don't worry we're gonna have tons of you know like solutions afterwards after this

10
00:00:39,850 --> 00:00:41,140
lecture by the way.

11
00:00:41,140 --> 00:00:42,040
All right let's get started.

12
00:00:42,820 --> 00:00:48,700
So first I'm asking you to write a function that takes a variable and squared it.

13
00:00:48,700 --> 00:00:55,480
So let's say if I send number three it will become 9 percent four become 16 then I'm asking you to test

14
00:00:55,480 --> 00:00:58,270
the function by taking an input from a user.

15
00:00:58,270 --> 00:01:02,320
So basically run the function as well not just write it to call the function to.

16
00:01:04,030 --> 00:01:08,980
So for example I'm asking the user to let's say enter number number we use it into five and then the

17
00:01:08,980 --> 00:01:09,700
squared a five.

18
00:01:09,700 --> 00:01:11,790
We're going to be 25.

19
00:01:11,970 --> 00:01:12,830
All right.

20
00:01:12,840 --> 00:01:19,590
The next question is I'm asking you to write a function that takes two variables from the user.

21
00:01:19,710 --> 00:01:24,990
So I'm asking you basically you going to enter let's say the first integer and then I'm asking the user

22
00:01:25,020 --> 00:01:29,280
let's say to insert insert another integer and then I'm gonna send these two integers to a function

23
00:01:29,490 --> 00:01:31,670
and that function should return to the summation.

24
00:01:31,800 --> 00:01:33,960
And she was totally the multiplication as well.

25
00:01:33,980 --> 00:01:35,070
All right.

26
00:01:35,070 --> 00:01:39,900
Question number three am asking to write a function that takes a variable and return its factorial.

27
00:01:39,900 --> 00:01:45,330
Because remember factorial let's say four is four times three times two times one.

28
00:01:45,360 --> 00:01:50,860
Victoria let's say 10 is ten times nine eight seven and so on.

29
00:01:50,870 --> 00:01:56,300
Question number four I'm asking to develop a script whose items are squares of the original list.

30
00:01:56,490 --> 00:01:59,790
For example if I sent you for example one two three four five.

31
00:01:59,790 --> 00:02:07,050
Here again I return the items we're going to be one for 916 and so on which is basically the square

32
00:02:07,140 --> 00:02:10,640
of the first initial list right.

33
00:02:11,320 --> 00:02:17,040
So question number five I'm asking you to write a function that squares a variable.

34
00:02:17,050 --> 00:02:19,690
Okay that's the function and then I want you to test it.

35
00:02:20,020 --> 00:02:20,330
Okay.

36
00:02:20,350 --> 00:02:24,840
Using a list of integer numbers ranging from minus 20 to 20.

37
00:02:24,850 --> 00:02:29,560
Okay so for example you're just gonna write define a function on its own that just squares a variable

38
00:02:29,560 --> 00:02:33,630
that's you know that's separate and then you're going to test it using the list.

39
00:02:33,700 --> 00:02:34,030
Okay.

40
00:02:34,030 --> 00:02:39,790
Think of it as kind of you know the mapping if you as a member of the map function or the map keyword

41
00:02:40,300 --> 00:02:45,440
along with a lambda expression again we can use it here to write our function.

42
00:02:45,460 --> 00:02:45,970
All right.

43
00:02:45,970 --> 00:02:50,500
Question number six I'm asking to write a three function that tick the radius of a circle and retain

44
00:02:50,500 --> 00:02:55,470
the diameter area circumference and test the function using an input from a user as well.

45
00:02:55,990 --> 00:02:58,000
Please make sure that this is not just one function.

46
00:02:58,000 --> 00:03:03,970
I want you to write three functions all of them take the radius and return the diameter area and set

47
00:03:03,970 --> 00:03:05,920
conference.

48
00:03:05,920 --> 00:03:10,810
Question number seven I want you to write a code that takes a range from a user which is upper and lower

49
00:03:10,810 --> 00:03:15,560
bounds and return a list of positive and even numbers only.

50
00:03:15,580 --> 00:03:20,950
So I'm asking you to simply going to let's say the user insert let's say minus 30 to 50 and the user

51
00:03:20,950 --> 00:03:27,600
will return a list of positive and even numbers so the numbers have to be positive and even like these.

52
00:03:27,600 --> 00:03:27,880
All right.

53
00:03:28,750 --> 00:03:32,950
So there is you know a bunch of if conditions in there along with you know the function as well.

54
00:03:33,320 --> 00:03:34,190
Okay.

55
00:03:34,300 --> 00:03:35,580
All right.

56
00:03:35,590 --> 00:03:40,780
Question number 8 am asking to use the filter and lambda expressions to write a code that takes a list

57
00:03:40,780 --> 00:03:44,850
of numbers below which is these numbers and return even numbers only.

58
00:03:44,860 --> 00:03:52,780
So I wanted to return only even numbers so 622 120 and two hundred and two twenty.

59
00:03:52,780 --> 00:03:58,360
Question number nine write a function that takes to an umpire matrices and return the addition subtraction

60
00:03:58,390 --> 00:04:01,240
transpose product and dot product.

61
00:04:01,570 --> 00:04:07,150
So he is simply undefined the two arrays and I wanted to do all these equations all these operations

62
00:04:07,210 --> 00:04:10,120
on the actual matrices.

63
00:04:10,150 --> 00:04:12,240
Okay I can write them in a function.

64
00:04:12,280 --> 00:04:15,920
The lot of you know kind of practicing on how to multiply arrays.

65
00:04:15,940 --> 00:04:20,050
I thought that would be very useful for you guys especially if you get to insert and put that into kind

66
00:04:20,050 --> 00:04:25,540
of a function so kind of you know learning how to do multiplication with matrices how to perform different

67
00:04:25,540 --> 00:04:26,530
operations.

68
00:04:26,620 --> 00:04:29,350
And that's pretty much all the expected results that I wanted to see.

69
00:04:29,650 --> 00:04:29,970
Okay.

70
00:04:29,970 --> 00:04:34,360
There was maybe a little bit of research external issues because we didn't cover like matrices extensively

71
00:04:34,360 --> 00:04:36,790
in this in the past.

72
00:04:36,790 --> 00:04:37,660
Question number 10.

73
00:04:37,660 --> 00:04:41,000
I wanted to write a function that takes two values from a user.

74
00:04:41,050 --> 00:04:43,740
Some of them up if no values.

75
00:04:43,760 --> 00:04:44,720
This is very simple right.

76
00:04:44,720 --> 00:04:45,490
The key here.

77
00:04:45,490 --> 00:04:47,230
If no values are provided.

78
00:04:47,360 --> 00:04:50,090
Assume a default values of 3 and 5.

79
00:04:50,150 --> 00:04:54,740
If guys remember we can set kind of a default values when we write the functions.

80
00:04:54,770 --> 00:04:59,650
So that's the objective here is for us to exercise this part.

81
00:04:59,660 --> 00:05:04,760
Question number eleven I wanted to write a script that will prompt a user for a range which is min max

82
00:05:04,760 --> 00:05:11,620
value and returns a number that are divisible by 4 but are not multiple of 3.

83
00:05:11,660 --> 00:05:18,190
So for example the user will enter let's say range from 2 from 30 to 200 and then he will get a return.

84
00:05:18,230 --> 00:05:24,520
Basically these numbers the numbers that are divisible by 4 but are not multiples of 3.

85
00:05:26,070 --> 00:05:31,020
We actually have we have pretty much the same example before in previous previous lectures but this

86
00:05:31,020 --> 00:05:39,610
is just we can write it in a function if we wanted to and we can write in so many different other ways

87
00:05:39,610 --> 00:05:45,050
or expressions of doing it to write the next or the last question.

88
00:05:45,070 --> 00:05:47,860
I'm asking you to write a function.

89
00:05:47,880 --> 00:05:53,500
OK define sorry and define in English to French translator function that takes an input from the user

90
00:05:53,530 --> 00:05:55,080
and return the translation.

91
00:05:55,330 --> 00:05:55,630
Right.

92
00:05:55,630 --> 00:06:00,610
So here I selected for example five words you can select whatever word you want and what we wanted to

93
00:06:00,610 --> 00:06:03,550
do is simply create kind of a dictionary.

94
00:06:03,550 --> 00:06:04,900
You know from English to French.

95
00:06:04,970 --> 00:06:10,670
Okay the dictionary can I think a war a word for instance and then we're gonna return the translation.

96
00:06:10,820 --> 00:06:15,640
Just kind of you know more practicing functions and practicing a little bit of like you know dictionary

97
00:06:15,640 --> 00:06:22,190
if you guys remember diction as before and that's pretty much the objective of this question.

98
00:06:22,300 --> 00:06:22,870
All right.

99
00:06:22,870 --> 00:06:23,600
Best of luck.

100
00:06:23,620 --> 00:06:26,340
I hope you guys are going to figure it out maybe like a couple of questions.

101
00:06:26,350 --> 00:06:31,710
If not then what about it next actually going to have detailed video explanations of all these questions.

102
00:06:31,720 --> 00:06:34,030
All right stay tuned and best of luck.
