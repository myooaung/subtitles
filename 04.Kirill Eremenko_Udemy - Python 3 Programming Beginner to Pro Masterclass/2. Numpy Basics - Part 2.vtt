WEBVTT
1
00:00:00.710 --> 00:00:06.440
What if I wanted to let's say good length for example of an array you can again apply the lens and then

2
00:00:06.470 --> 00:00:09.640
open prentices and specify V.

3
00:00:09.770 --> 00:00:14.040
Whatever you're looking for so why so obvious to find why before here.

4
00:00:14.420 --> 00:00:18.580
So now I have I have y listed here somewhere.

5
00:00:18.580 --> 00:00:22.610
So that's where I find my y major X or Y every year.

6
00:00:22.970 --> 00:00:27.500
Well if I wanted to get Let's see the length of why you can actually appeal the length of why that would

7
00:00:27.510 --> 00:00:29.560
get you'll have three elements.

8
00:00:29.630 --> 00:00:31.590
What if I want to get the shape of one.

9
00:00:31.610 --> 00:00:35.900
For example if they find a matrix and I want to get the shape of the matrix then you can write Y darting

10
00:00:35.970 --> 00:00:37.100
by the method cheap.

11
00:00:37.250 --> 00:00:39.600
So why are cheap debt should get the sheep.

12
00:00:39.650 --> 00:00:44.020
Now we have three by it's basically an array work single dimension.

13
00:00:44.020 --> 00:00:45.570
That's why we have three rate.

14
00:00:45.950 --> 00:00:48.780
If you look at the Matrix which we defined earlier.

15
00:00:48.800 --> 00:00:54.410
If you go up you will see that we find immediacy which is Two By Two.

16
00:00:54.410 --> 00:01:00.080
Again if you call the matrix and apply the method shape's if you play Matrix dog cheap if you run it

17
00:01:00.110 --> 00:01:02.830
they will tell you now you have it's two by two.

18
00:01:03.560 --> 00:01:09.620
So let's assume that I wanted to get the shape of X so he don't find X again 15 by 50 matrix of one

19
00:01:09.630 --> 00:01:10.780
to get the shape of getting any means.

20
00:01:10.790 --> 00:01:14.290
But you press 8 create a new cell here.

21
00:01:14.540 --> 00:01:17.600
Growth X dot shape to get the sheep will tell you.

22
00:01:17.630 --> 00:01:19.590
Now it's actually 15 by 15.

23
00:01:19.700 --> 00:01:20.810
Ah perfect.

24
00:01:21.280 --> 00:01:21.840
Okay.

25
00:01:21.890 --> 00:01:26.030
What if I wanted to get let's say the datatype who is specifying in the name of the Matrix or the array

26
00:01:26.180 --> 00:01:31.980
umpire rerate Matrix is provide the tape and you run it they'll tell you OK now it's actually into sheraton's

27
00:01:32.030 --> 00:01:33.380
three two bits.

28
00:01:33.510 --> 00:01:35.390
OK perfect.

29
00:01:35.450 --> 00:01:40.550
What if we wanted to let's say reshape an array into a matrix.

30
00:01:40.610 --> 00:01:49.240
So let's assume that we have here one by four array which is simply a have one drol and four columns.

31
00:01:49.490 --> 00:01:55.240
And what I wanted to do is to actually take this in and reshape it into two by two meters x obviously

32
00:01:55.230 --> 00:01:57.890
with news that reshape the number of elements has to match.

33
00:01:57.900 --> 00:01:58.230
Okay.

34
00:01:58.280 --> 00:02:03.170
So here you are that you want it to have four elements and you want to see a range of two by two.

35
00:02:03.230 --> 00:02:03.690
Okay.

36
00:02:03.890 --> 00:02:06.750
To do this again you have to define your array.

37
00:02:06.760 --> 00:02:12.950
So here you define y equals to n.p. that array brackets three five seven eight and then you can use

38
00:02:12.950 --> 00:02:16.040
the reshape method to apply y dot reshape.

39
00:02:16.220 --> 00:02:19.270
And then you specify the dimensions what the outcome would.

40
00:02:19.270 --> 00:02:24.670
The upper dimensions should look like he does specify as to by two key points from there.

41
00:02:24.770 --> 00:02:25.760
They'll tell you Okay perfect.

42
00:02:25.760 --> 00:02:27.250
Now we actually have an array.

43
00:02:27.330 --> 00:02:29.700
That's again three by five.

44
00:02:29.860 --> 00:02:31.910
And then we have seven in eight or eight.

45
00:02:32.320 --> 00:02:32.800
OK.

46
00:02:32.930 --> 00:02:33.720
Great.

47
00:02:33.800 --> 00:02:37.770
What if I wanted to let's say or pime the maximum and minimum value within the umpiring.

48
00:02:37.790 --> 00:02:41.550
Again you can use the method Y Max to get the max.

49
00:02:41.540 --> 00:02:47.500
So if you run to them to give you the Max let's make some element was 8 he going get the men you were

50
00:02:47.500 --> 00:02:47.770
on it.

51
00:02:47.780 --> 00:02:53.060
Why not men that we give them a number and he is what if I wanted to get let's say the index What's

52
00:02:53.060 --> 00:02:57.270
the index of the min of the index of the max you can use y.

53
00:02:57.390 --> 00:03:04.430
Our maths if you will on it they'll do your good index actually three right which is basically the third

54
00:03:04.460 --> 00:03:09.140
element that's the largest and because here you have us in the 0 1 2 and 3.

55
00:03:09.170 --> 00:03:09.680
Right.

56
00:03:09.890 --> 00:03:15.620
If you run for the men they will kill you zero which means the index here because of three that's the

57
00:03:15.620 --> 00:03:18.080
smallest number within our array within our image.

58
00:03:18.390 --> 00:03:19.270
All right.

59
00:03:19.310 --> 00:03:20.780
That's great.

60
00:03:21.510 --> 00:03:23.270
Again it's very simple.

61
00:03:23.330 --> 00:03:27.760
Just you're kind of your up or introduction to an umpire and then not going to use it again for them

62
00:03:28.280 --> 00:03:31.630
to develop a lot of practical project moving forward.

63
00:03:32.380 --> 00:03:37.930
The next step is what I wanted to perform some mathematical operations using an umpire raise again here.

64
00:03:37.940 --> 00:03:43.750
Let's assume they're going to fine let's say and an error an array non-pay a race or n.p. arrange 1

65
00:03:43.760 --> 00:03:44.640
and 5.

66
00:03:44.730 --> 00:03:45.210
Would you any.

67
00:03:45.230 --> 00:03:49.040
Again one two three and four get one going to do here.

68
00:03:49.230 --> 00:03:54.060
I'm going to define again why which is an umpire rate umpire or the range one and five as well.

69
00:03:54.260 --> 00:03:55.430
And that's what I'm going to do here.

70
00:03:55.430 --> 00:04:02.570
It's going to end up x and y case with another this will generate again Z will going to be one plus

71
00:04:02.570 --> 00:04:03.390
one which is two.

72
00:04:03.400 --> 00:04:06.950
Two plus two equals four and three of three six and so on and so forth.

73
00:04:06.950 --> 00:04:11.400
If I wanted to let's see you can perform whatever mathematical operation there actually performed before.

74
00:04:11.570 --> 00:04:15.820
If you have to Squarings you and your multiplication division whatever operation you're going to use

75
00:04:16.300 --> 00:04:19.100
to perform it on an umpire is no problem.

76
00:04:19.100 --> 00:04:24.590
Here you can specify as equals x squared you can run it then you actually perform that on the entire

77
00:04:24.590 --> 00:04:26.390
array.

78
00:04:26.750 --> 00:04:30.610
You can do that you can actually take every element and square that element.

79
00:04:30.710 --> 00:04:36.680
You can take one become Square as two square becomes four to three square becomes nine and four square

80
00:04:36.680 --> 00:04:38.060
becomes 16.

81
00:04:39.800 --> 00:04:44.270
What if I wanted to say or did the square root you can again apply n.p. square root.

82
00:04:44.300 --> 00:04:50.030
And then you specify you pass along your Z that will have two and K was going to be square root of that

83
00:04:50.060 --> 00:04:53.120
of this one you pass along Z the square root of this.

84
00:04:53.120 --> 00:04:56.930
We'll go back again because you're in the square and then you're in this weird world after so they're

85
00:04:56.930 --> 00:04:59.520
pretty much are these corporations cancel each other.

86
00:04:59.530 --> 00:05:02.070
They come up with it with the Y matrix that you had before.

87
00:05:02.070 --> 00:05:09.230
Why a reader had before which is 1 1 2 3 and 4 4 not in the exponential you can apply n.p. exponential

88
00:05:09.830 --> 00:05:14.060
of Y that will generate again the the values of the exponent.

89
00:05:14.270 --> 00:05:15.870
OK perfect.

90
00:05:16.350 --> 00:05:20.940
But what if I wanted to let's say or Paean what you call it elements slicing and indexing.

91
00:05:21.060 --> 00:05:26.060
OK we've done that before and when we when we dealt with lists who were going to do it again for an

92
00:05:26.060 --> 00:05:28.730
umpire raise it's again it's very easy very simple.

93
00:05:28.730 --> 00:05:31.470
He defined the find let's say integer numbers.

94
00:05:31.480 --> 00:05:33.930
Now you know like between 1.

95
00:05:33.950 --> 00:05:38.960
Again we need 10 numbers that are listed between 1 and 10 that will generate again 10 numbers.

96
00:05:38.980 --> 00:05:44.870
No umpire Ray that has all the numbers in there for y to access let's the first element specified with

97
00:05:44.870 --> 00:05:45.760
the square brackets.

98
00:05:45.770 --> 00:05:47.370
What index I'm looking for.

99
00:05:47.660 --> 00:05:53.810
So here you call x square beckert of zero in on that that one generates three because that's my first

100
00:05:53.840 --> 00:05:54.480
element here.

101
00:05:54.500 --> 00:06:00.980
If I wanted to let's say call is three they're all genay this element because the index is 0 1 2 and

102
00:06:00.980 --> 00:06:02.270
3.

103
00:06:02.900 --> 00:06:04.290
What if I wanted to do slicing.

104
00:06:04.310 --> 00:06:10.510
I wanted to dig them and piry and actually extract part of it in order to do that.

105
00:06:10.510 --> 00:06:16.160
Then you have to specify again the initial index and then column and then the last index you looking

106
00:06:16.160 --> 00:06:16.670
for.

107
00:06:16.910 --> 00:06:19.100
So help one or two little grabs zeal out of three.

108
00:06:19.100 --> 00:06:24.700
If you run this I will tell you okay now you grab the first element 3 1 and 2.

109
00:06:24.830 --> 00:06:25.430
Okay.

110
00:06:25.580 --> 00:06:28.840
So you simply again you exclude the last element.

111
00:06:28.840 --> 00:06:33.030
So your game simply the elements 0 with indexed 0 1 and 2.

112
00:06:33.020 --> 00:06:37.160
You don't include the element with index number of three reps.

113
00:06:37.340 --> 00:06:42.500
What if I wanted to perform in broadcasting which simply you want it let's say to assign a specific

114
00:06:42.500 --> 00:06:43.180
number.

115
00:06:43.290 --> 00:06:48.950
Okay and broadcast it across the entire array would simply put if I have let's say then by their matrix

116
00:06:48.980 --> 00:06:52.910
I need let's say for elements to have the specific number.

117
00:06:52.910 --> 00:06:54.840
You can do that using broadcasting.

118
00:06:54.890 --> 00:06:57.020
You can do that he can specify X..

119
00:06:57.230 --> 00:07:00.710
Let's say zeelander to three we can put 10 into it.

120
00:07:00.710 --> 00:07:02.450
If you run it there was any Okay.

121
00:07:02.480 --> 00:07:07.800
Now I actually place these elements with number 10 as well done here.

122
00:07:08.450 --> 00:07:12.730
If you want to change this let's say and make it X to let's see 6 you're on it you will see that actually

123
00:07:12.740 --> 00:07:18.360
at least elements with indices 0 1 2 3 4 and 5.

124
00:07:18.620 --> 00:07:24.760
And he actually skipped six because it's you don't include the last number in there.

125
00:07:24.830 --> 00:07:27.510
What if I wanted to let's say the find again.

126
00:07:27.680 --> 00:07:32.020
Again the Matrix defence was Phi MP threaten random Trent.

127
00:07:32.300 --> 00:07:38.000
Again he wanted to give numbers random numbers integer numbers from 1 to 10 but with the dimensions

128
00:07:38.000 --> 00:07:44.550
of 5.5 fewer under there you in it the Matrix has not and the numbers from 1 in 5 by 5.

129
00:07:44.870 --> 00:07:48.040
What if I wanted to let's say up team.

130
00:07:48.590 --> 00:07:54.380
The first element to play you can specify matrix of 0 0 that will simply open the first draw.

131
00:07:54.380 --> 00:08:00.200
So when you specify just one index that will put in the index or the impales altogether.

132
00:08:00.200 --> 00:08:01.820
So here prequel Matrix 0.

133
00:08:01.820 --> 00:08:04.590
Then with that we get a call for 1 6 9 5.

134
00:08:04.930 --> 00:08:05.700
What if I want to talk.

135
00:08:05.710 --> 00:08:07.070
Let's see the second one.

136
00:08:07.080 --> 00:08:08.480
So dismiss 5 there's a will.

137
00:08:08.510 --> 00:08:12.730
We'll junnaid this which is 4 to 7 5 6 and 3 and so on.

138
00:08:12.740 --> 00:08:20.340
Again that's my index stroke index 0 no index 1 no index to row in D.C. and so on and so forth.

139
00:08:21.690 --> 00:08:24.920
Let's if I want to drop it in an entire roll from the Matrix.

140
00:08:24.950 --> 00:08:27.240
What if I want to tell people that a specific element.

141
00:08:27.260 --> 00:08:30.500
Then I have to specify what index I'm looking for in a row.

142
00:08:30.710 --> 00:08:32.910
What index I'm looking for in a column.

143
00:08:33.060 --> 00:08:35.310
Okay which makes complete sense.

144
00:08:35.360 --> 00:08:40.630
So here if I wanted to get specific element milliken's bespoke a matrix square breckin 0 squared bracket

145
00:08:40.650 --> 00:08:41.110
too.

146
00:08:41.120 --> 00:08:43.830
For instance if you run there they'll tell you okay.

147
00:08:43.910 --> 00:08:45.370
You actually feel pain.

148
00:08:45.860 --> 00:08:51.890
Here the index number index of 0 they mean the first job and four columns you have this is column number

149
00:08:51.890 --> 00:08:53.270
zero score number 1.

150
00:08:53.270 --> 00:08:56.690
This column number two then that means you're looking for this element 6 and that's why you actually

151
00:08:56.690 --> 00:08:58.330
walked in six here.

152
00:08:59.750 --> 00:09:03.920
What if I wanted to let's say or peening Mm X or have a full matrix and you wanted to go there and or

153
00:09:03.920 --> 00:09:07.280
take let's say a section or a portion of that meet X..

154
00:09:07.400 --> 00:09:12.860
You can do that using again the column method of the column operator so he can as you can see here you

155
00:09:12.860 --> 00:09:16.390
would see in a C and want to get Matrix column and 2.

156
00:09:16.530 --> 00:09:20.940
Okay what do what level listicle looks or malonis say Colin and 2.

157
00:09:21.110 --> 00:09:25.940
That means they wanted to go there and actually grab the first two rolls.

158
00:09:25.970 --> 00:09:32.350
So what I'm looking for and look in is for all rows and I'm looking for the one that has in there.

159
00:09:32.360 --> 00:09:35.310
Zero and index 1 and you skipped number two.

160
00:09:35.510 --> 00:09:38.190
OK it's a little bit confusing but once you practice it you'll actually.

161
00:09:38.550 --> 00:09:39.470
Get used to it.

162
00:09:39.720 --> 00:09:46.440
So here you actually grabbing for 1 6 9 and 5 and then you're grabbing 6 9 9 4 2 which is simply the

163
00:09:46.440 --> 00:09:47.690
first two rows in here.

164
00:09:47.950 --> 00:09:49.570
That's why you guys in here.

165
00:09:49.590 --> 00:09:50.120
Right.

166
00:09:50.340 --> 00:09:55.600
If I change let's say column and three in one it's that would open the first first three.

167
00:09:55.600 --> 00:10:01.490
So you're in the 0 1 2 and you skipped number three because you don't include the last element you.

168
00:10:03.320 --> 00:10:07.070
What if I want to let's say or think the elements from the bottom of the Matrix so you can actually

169
00:10:07.070 --> 00:10:08.820
do it but you put the numbers first.

170
00:10:08.840 --> 00:10:11.020
You put two and then konnan.

171
00:10:11.140 --> 00:10:12.090
OK let's stay on it.

172
00:10:12.470 --> 00:10:17.690
So we should say two and then column and that mean and looking for simply these elements and looking

173
00:10:17.690 --> 00:10:21.240
for this draw this show and this rock.

174
00:10:21.620 --> 00:10:22.050
Okay.

175
00:10:22.130 --> 00:10:26.670
And that's why you actually in these these numbers here when you wrote Will you write to and konnan.

176
00:10:26.820 --> 00:10:28.370
All right.

177
00:10:28.850 --> 00:10:30.780
Well if I wanted to let's say or poem Colin.

178
00:10:30.860 --> 00:10:32.780
So that's when you wouldn't want to talk him.

179
00:10:32.780 --> 00:10:33.800
ROSE And you can imagine.

180
00:10:33.810 --> 00:10:39.620
Rose You can specify Colin and then the number which is the number of rules you're looking for.

181
00:10:39.970 --> 00:10:41.850
I wanted to specify columns.

182
00:10:41.950 --> 00:10:42.570
Okay.

183
00:10:42.710 --> 00:10:45.410
You have to specify that I'm looking for again.

184
00:10:46.330 --> 00:10:48.450
Rose comma columns.

185
00:10:48.530 --> 00:10:52.620
So if you're looking for four hour of Talk Express.

186
00:10:52.630 --> 00:10:58.290
COLLINS That's why he when you specify you have to specify column first and then comma which means I'm

187
00:10:58.390 --> 00:11:00.070
asking for all of rows.

188
00:11:00.260 --> 00:11:03.380
OK and then I need to specify which columns I'm looking for.

189
00:11:03.430 --> 00:11:04.130
OK.

190
00:11:04.390 --> 00:11:08.590
So that's what happening was just passed by metrix COLIN That means I'm looking for all rows and then

191
00:11:08.590 --> 00:11:13.140
I have to specify which column I am looking for specifying column two.

192
00:11:13.150 --> 00:11:17.960
That means I'm looking for these two elements of these two column this column this column.

193
00:11:18.010 --> 00:11:25.630
And they were all rows and this one is a of that means it's captured here within the column operatory.

194
00:11:26.140 --> 00:11:32.050
If I want to specify them to any kind that means I'm looking for the last the last column is from from

195
00:11:32.140 --> 00:11:33.140
here from the end.

196
00:11:33.250 --> 00:11:38.670
And that's why you're grabbing simply five human nine and six which are five nine and six.

197
00:11:38.680 --> 00:11:39.160
OK.

198
00:11:39.270 --> 00:11:40.520
You're getting in practice a little bit.

199
00:11:40.530 --> 00:11:41.880
I have dozens of exorcized with it.

200
00:11:42.100 --> 00:11:45.590
But again it's very very straightforward and very easy to deal with.

201
00:11:46.180 --> 00:11:48.410
What if I wanted to key elements election.

202
00:11:48.590 --> 00:11:49.240
Okay.

203
00:11:49.660 --> 00:11:56.410
For atl for example to go there and grab and put kind of an IF condition to grab the specific elements.

204
00:11:56.540 --> 00:12:01.910
If they satisfy specific conditions so let's find amita extra in defined.

205
00:12:01.990 --> 00:12:09.010
That has again ren mendham integers between 1 and 10 and the 5 by 5 and what I wanted to do they wanted

206
00:12:09.010 --> 00:12:14.160
to let's say grab the elements that a good read or then three you can actually do that easily in one

207
00:12:14.150 --> 00:12:14.400
pile.

208
00:12:14.410 --> 00:12:19.640
You can specify the matrix and you specify open square brackets and then you spoke it.

209
00:12:19.640 --> 00:12:24.630
I need the matrix elements that are greater than 3 and that would put them within a new matrix.

210
00:12:24.630 --> 00:12:26.440
If you run it that will tell your key.

211
00:12:26.440 --> 00:12:30.630
Now you actually grab the elements only there are greener than 3 which means you actually skipped so

212
00:12:30.770 --> 00:12:32.270
you see it again see anyone.

213
00:12:32.430 --> 00:12:36.700
So all these ones have been skipped or the number twos have been skipped and that's where you appeared.

214
00:12:36.710 --> 00:12:40.060
Only the numbers are larger than 3.

215
00:12:40.090 --> 00:12:43.030
What if I wanted to let's say or painful of the split even numbers.

216
00:12:43.030 --> 00:12:47.720
You can again do whatever condition within the within here.

217
00:12:47.800 --> 00:12:51.660
So you going in Call of the name of the Matrix square brackets and you specify the condition.

218
00:12:51.850 --> 00:12:57.670
So he'd I'm looking for a matrix elements that are you can be divisible by can be divisible by 2 with

219
00:12:57.670 --> 00:12:58.460
no remainder.

220
00:12:58.490 --> 00:13:00.110
And that's if you get it a member of the mould.

221
00:13:00.190 --> 00:13:03.760
If they are equal to zero that means that only you're planning even numbers on this.

222
00:13:03.760 --> 00:13:11.060
You skipped minds you skip the 7 for instance and all you hear locked in or even numbers when optimality

223
00:13:11.080 --> 00:13:13.730
the odd number as you can gene then make it one.

224
00:13:13.810 --> 00:13:16.620
Run it and then you can opt in of the numbers here.

225
00:13:17.610 --> 00:13:18.550
And now you have.

226
00:13:18.560 --> 00:13:23.350
Kind of like a brief introduction for an umpire an umpire that is extremely powerful.

227
00:13:23.380 --> 00:13:25.160
You can use it for tons of applications.

228
00:13:25.180 --> 00:13:27.920
This is just kind of laying out lay down the foundation.

229
00:13:27.940 --> 00:13:31.990
Again you should be proud of all your Python programming skills were going to use them extensively.

230
00:13:32.170 --> 00:13:37.200
When we run practical applications I hope you guys enjoyed their section and see you in the next section.
