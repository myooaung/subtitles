WEBVTT

00:05.790 --> 00:11.010
I thought it would be worth it to talk a little bit more about the tools that you need with regards

00:11.010 --> 00:12.300
to mobile.

00:12.300 --> 00:14.800
Previously I talked about you need for a web.

00:14.820 --> 00:20.020
I still think you need the poem in d'Oro or there's some kind of a timer app to stay focused.

00:20.040 --> 00:25.000
You're also still going to need google docs so that you can type out all of the bugs that you run into.

00:25.290 --> 00:32.250
The difference in mobile is that you also need mobile devices that can be tricky depending on what environment

00:32.250 --> 00:34.410
you built your application for.

00:34.410 --> 00:39.030
If you build it for iPhone and Android then I think you ignored some of the advice I had earlier in

00:39.030 --> 00:45.520
the course where I said stick to one or try to minimize your launch so you can minimize the cost upfront

00:45.540 --> 00:47.030
to validate your idea.

00:47.100 --> 00:51.420
You know if you're super confident when you can do then yes you can launch for two regardless.

00:51.450 --> 00:57.580
In either case you'll find this information somewhat useful if you're trying to test for an iPhone app.

00:57.630 --> 01:03.120
The number one thing you need to do is you need to have test flight.

01:03.120 --> 01:07.410
This is something that your developer if they are an iPhone developer they should be more than acquainted

01:07.410 --> 01:15.560
with testify allows you to launch applications to private parties without sending it to the App Store.

01:15.780 --> 01:21.870
When you submit an application to the App Store it can take anywhere from two days to three weeks for

01:21.870 --> 01:22.710
it to get approved.

01:22.710 --> 01:23.580
That's insane.

01:23.580 --> 01:25.720
Just to get the first version out to bug test.

01:25.800 --> 01:27.200
So you don't want to do that.

01:28.030 --> 01:29.090
Test flight.

01:29.140 --> 01:32.310
It's a great system for uploading small packages.

01:32.320 --> 01:35.020
You can send it to your friends and family and everyone can download it.

01:35.020 --> 01:40.360
They can all participate in the bug hunting and it will also help you keep track of versions so you

01:40.360 --> 01:45.190
can upload a version save it download it and then every time they have a new version they can upload

01:45.190 --> 01:48.990
it and you can always revert backwards and then download an older version.

01:49.000 --> 01:52.810
If something's screwed up that's a great system you've got back by Apple.

01:52.810 --> 01:55.080
Great great great past that.

01:55.100 --> 02:01.790
What I'd suggest using is make sure for iPhone that you have the three main resolutions you don't need

02:01.790 --> 02:04.100
to worry about iPhone 3 anymore.

02:04.280 --> 02:08.430
If you want to do a good job at this you should have access to at least two of them.

02:08.480 --> 02:14.510
Hopefully you have five and you have a six at the point which I'm speaking right now five is the biggest

02:14.870 --> 02:18.820
and six is up and coming but obviously you need four or five and six.

02:18.830 --> 02:21.090
I know a lot of people who still use force.

02:21.410 --> 02:23.800
So if you can access those three it's pretty easy.

02:23.800 --> 02:28.940
You just got to do the same testing and all three and do the same kind of Pomodoro just run a test on

02:28.940 --> 02:34.070
each one see if there's something in Notice that exists on law that doesn't exist on the other now be

02:34.090 --> 02:35.300
built an Android app.

02:35.320 --> 02:37.070
You don't use test flight.

02:37.270 --> 02:42.760
Just ask your developer what they prefer to use to send you development packages.

02:42.760 --> 02:49.720
Hopefully in either case your Android or iPhone ask them for an o t a package meaning over the air meaning

02:49.720 --> 02:51.160
you just go to a Web site and download it.

02:51.160 --> 02:54.520
You don't have to call it on your computer and plug in your phone.

02:54.520 --> 02:56.030
It's just unnecessary.

02:56.030 --> 02:58.390
Hopefully a developer knows how to do that in the studio.

02:58.390 --> 02:59.810
They definitely know how to do that.

03:00.770 --> 03:02.380
If he built an Android app.

03:02.450 --> 03:03.430
God help you.

03:03.440 --> 03:06.760
There are so many different resolutions you need to test.

03:06.800 --> 03:13.340
You used to be that there were you know four or five Android resolutions back when there was only one

03:13.400 --> 03:14.470
iPhone resolution.

03:14.480 --> 03:16.700
But it's really exploded.

03:16.700 --> 03:20.550
I think it's unrealistic that you're going to test this on every single resolution.

03:20.570 --> 03:27.350
There are one Web site that are often referred to they listed out that there are 4000 distinct devices

03:27.590 --> 03:33.310
and I don't even know how many resolutions there are hundreds is my guess.

03:33.350 --> 03:40.070
I think with Android it's the case that you can capture 70 percent of the market in probably three resolutions.

03:40.070 --> 03:41.380
I want you to keep it simple.

03:41.390 --> 03:42.950
Just stay realistic.

03:43.070 --> 03:44.560
It's unrealistic think you're in a test.

03:44.570 --> 03:47.060
15 different Android screens.

03:47.060 --> 03:48.580
Stick with the basics.

03:48.710 --> 03:50.750
And I call this the galaxy test.

03:50.780 --> 03:56.210
The galaxies are aligned by Samsung that are very popular amongst Android users.

03:56.210 --> 03:58.700
They have the most popular resolutions.

03:58.750 --> 04:04.640
So the way you do this is you follow the resolution of the Galaxy S one galaxy s one is a hundred by

04:04.640 --> 04:06.080
four eighty pixels.

04:06.140 --> 04:08.750
You skipped the s2 because of the same size as the S1.

04:08.750 --> 04:09.910
Go to this three.

04:10.030 --> 04:16.530
That's 12 80 by 720 and then ask for is 1920 by 10 80.

04:16.550 --> 04:18.860
Those are the resolutions you want to test for.

04:18.860 --> 04:24.590
So your best shot is to try to get some kind of Android phone that matches hopefully two of those three.

04:24.620 --> 04:30.080
Obviously when you build your application law ask specifically what resolutions you want if they don't

04:30.080 --> 04:33.400
ask you to please tell them and if you want to keep your costs low.

04:33.400 --> 04:36.110
Pick one or two or pick three.

04:36.110 --> 04:40.670
These are the three that I think and in my experience are the best to follow.

04:40.790 --> 04:45.680
They are the most common but they're also the most easily adaptable to other screen resolutions because

04:45.680 --> 04:48.740
they're all kind of based off of a similar grid to these.
