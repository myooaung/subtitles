WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.220
Let's now look at cascading style sheets or CSS in detail.

00:00:05.220 --> 00:00:08.415
We'll open the HTML page.

00:00:08.415 --> 00:00:10.680
Let's change the title.

00:00:10.680 --> 00:00:12.675
As you have seen earlier,

00:00:12.675 --> 00:00:17.925
we can define the style within the head element by having a separate element style.

00:00:17.925 --> 00:00:20.940
There is an option to include a separate style sheet also,

00:00:20.940 --> 00:00:22.905
which we'll look at shortly.

00:00:22.905 --> 00:00:27.045
And one thing to note here is HTML is not case sensitive.

00:00:27.045 --> 00:00:31.545
You can create in caps or in smaller latest.

00:00:31.545 --> 00:00:35.280
Let's try to apply some styling to this paragraph.

00:00:35.280 --> 00:00:36.345
P tag.

00:00:36.345 --> 00:00:39.730
For that will define an object.

00:00:41.380 --> 00:00:45.030
And we'll say background color.

00:00:47.230 --> 00:00:50.000
Estimate you type background color.

00:00:50.000 --> 00:00:52.280
Visual Studio code will show you

00:00:52.280 --> 00:00:57.330
different color options available and you can just simply select that.

00:00:59.380 --> 00:01:03.605
Reload this page with live server.

00:01:03.605 --> 00:01:05.240
Let's refresh the page.

00:01:05.240 --> 00:01:07.040
You can see that all P tags,

00:01:07.040 --> 00:01:09.740
now I have a background color of brown.

00:01:09.740 --> 00:01:12.350
Let's now add another style for the P tag and see

00:01:12.350 --> 00:01:15.020
what happens instead of Brown will say rate.

00:01:15.020 --> 00:01:17.810
Because the waste GML CSS works,

00:01:17.810 --> 00:01:21.500
it picks up the styles that APRs last in the hierarchy.

00:01:21.500 --> 00:01:25.035
Now you can see that the paragraph is red.

00:01:25.035 --> 00:01:27.880
Cascading nature of the stylesheet,

00:01:27.880 --> 00:01:29.200
whatever the rule is,

00:01:29.200 --> 00:01:33.160
the last will have higher precedence over any other rule.

00:01:33.160 --> 00:01:36.640
Let's now see another way of applying style

00:01:36.640 --> 00:01:40.700
to an element by using the class had to report,

00:01:41.460 --> 00:01:46.520
will define a class edge paragraph.

00:01:48.300 --> 00:01:52.810
Now here, let's get rid of this.

00:01:52.810 --> 00:01:54.550
We can say dot,

00:01:54.550 --> 00:01:57.025
paragraph and background color.

00:01:57.025 --> 00:01:58.315
Let's say green.

00:01:58.315 --> 00:02:02.320
We can now see that whichever element

00:02:02.320 --> 00:02:06.655
has that class defined will have background-color rich green.

00:02:06.655 --> 00:02:11.610
You can even class defined by the H1 tag.

00:02:13.480 --> 00:02:19.505
And you will notice that the heading is also having a background color green.

00:02:19.505 --> 00:02:26.030
Now let's try to define styling for the P element will say trade.

00:02:26.030 --> 00:02:28.580
And let's see what happens in the page.

00:02:28.580 --> 00:02:30.620
The paragraphs except for the one which is

00:02:30.620 --> 00:02:36.020
a class attribute define are showing up with red background.

00:02:36.020 --> 00:02:37.925
But the paragraph at the top,

00:02:37.925 --> 00:02:40.880
which has a class attribute that is a styling

00:02:40.880 --> 00:02:44.675
of background color green is still showing up in green.

00:02:44.675 --> 00:02:49.340
Though this is the latest styling in terms of hierarchy.

00:02:49.340 --> 00:02:54.355
But paragraphs telling wins here because that is more specific.

00:02:54.355 --> 00:02:58.570
Whatever specific style we have for a particular limit that when so we're

00:02:58.570 --> 00:03:03.655
any generic styling that we might have declared for all the elements of that category.

00:03:03.655 --> 00:03:06.625
Though all the Ps are supposed to have color rate.

00:03:06.625 --> 00:03:10.750
But we've defined a specific styling for this particular element,

00:03:10.750 --> 00:03:16.840
which is done through the class attribute and that wins over the other styling.

00:03:16.840 --> 00:03:19.790
Let's now see another example.

00:03:20.130 --> 00:03:24.640
We'll define the background color up the entire page.

00:03:24.640 --> 00:03:28.630
Now enter page's background color of yellow and

00:03:28.630 --> 00:03:31.945
all the elements will inherit that background color.

00:03:31.945 --> 00:03:36.300
Let's now have a specific background for the H1 tag.

00:03:41.740 --> 00:03:45.530
You can see that now the heading attribute has a green background.

00:03:45.530 --> 00:03:47.225
He micelle, it inherited yellow.

00:03:47.225 --> 00:03:50.150
But as soon as we gave a specific background,

00:03:50.150 --> 00:03:52.490
the H1 tag that had,

00:03:52.490 --> 00:03:56.630
had precedence over the background color of the entire body.

00:03:56.630 --> 00:03:59.165
This is how inheritance works.

00:03:59.165 --> 00:04:01.100
But just keep in mind that this may not be

00:04:01.100 --> 00:04:04.490
applicable for all that tributes for a particular element.

00:04:04.490 --> 00:04:09.840
You can also directly apply style in an element.

00:04:11.620 --> 00:04:15.800
You can see that this element is now having a gray background.

00:04:15.800 --> 00:04:19.730
Style can be directly put him in an element that is not the best practice.

00:04:19.730 --> 00:04:22.220
Typically you have a separate section for the style,

00:04:22.220 --> 00:04:24.320
but in a real-world application,

00:04:24.320 --> 00:04:26.885
you want to control style through a separate file

00:04:26.885 --> 00:04:29.540
because the same style can be applied to all the pages,

00:04:29.540 --> 00:04:30.980
not just one page.

00:04:30.980 --> 00:04:34.565
So you take the style out and put it in a separate stylesheet,

00:04:34.565 --> 00:04:37.020
which we'll see you next time.
