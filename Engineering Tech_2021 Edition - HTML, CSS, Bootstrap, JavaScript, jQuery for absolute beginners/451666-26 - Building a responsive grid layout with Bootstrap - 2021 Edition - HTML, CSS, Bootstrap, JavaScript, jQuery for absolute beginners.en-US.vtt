WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.580 --> 00:00:06.795
Let's now understand how to have a grid layout with Bootstrap.

00:00:06.795 --> 00:00:10.500
To demonstrate how the grid layout works with Bootstrap,

00:00:10.500 --> 00:00:13.030
let's create another page.

00:00:15.050 --> 00:00:19.215
We'll create a new page layout, one dot HTML.

00:00:19.215 --> 00:00:23.820
And let's type HTML5.

00:00:23.820 --> 00:00:26.895
We got the basic structure of the pitch.

00:00:26.895 --> 00:00:31.750
Creating a grid layout with Bootstrap is really easy.

00:00:32.360 --> 00:00:37.855
Let's harder div, and this will be the main div,

00:00:37.855 --> 00:00:42.395
the pitch that we learn.

00:00:42.395 --> 00:00:47.460
Another div, which will be the first draw.

00:00:47.950 --> 00:00:51.439
And then we'll have two columns.

00:00:51.439 --> 00:00:54.930
Row one, column one,

00:01:03.730 --> 00:01:07.140
row one, column two.

00:01:09.070 --> 00:01:12.680
So this is a very simple structure with

00:01:12.680 --> 00:01:16.415
one main beef and we are trained to have two columns within a row.

00:01:16.415 --> 00:01:20.610
Bootstrap gives us certain classes to create a grid layout.

00:01:20.610 --> 00:01:23.750
We'll say class equals container.

00:01:26.730 --> 00:01:31.880
And this should be a row, class equals row.

00:01:35.670 --> 00:01:41.330
And this should be column class equals.

00:01:48.390 --> 00:01:50.605
Let's see how this looks.

00:01:50.605 --> 00:01:53.125
Will open this page. We'd leave server.

00:01:53.125 --> 00:01:56.770
We don't see the effect P8 because Bootstrap is not included on

00:01:56.770 --> 00:02:03.405
this new page. Let's copy that in.

00:02:03.405 --> 00:02:07.040
It went from abc dot HTML.

00:02:07.040 --> 00:02:12.245
Now we can see two columns occupying the full width of the beach.

00:02:12.245 --> 00:02:14.960
And when we resize,

00:02:14.960 --> 00:02:18.275
this space gets automatically.

00:02:18.275 --> 00:02:21.710
Lets our border to the royal limit.

00:02:21.710 --> 00:02:24.860
To see this in a better way.

00:02:24.860 --> 00:02:29.730
Let's go to bootstrap.css and search for dark grow.

00:02:32.050 --> 00:02:37.415
And we lard border 10px solid.

00:02:37.415 --> 00:02:40.040
You can make changes to the default.

00:02:40.040 --> 00:02:43.040
Bootstrap styling is pretty requirement for now,

00:02:43.040 --> 00:02:45.800
we are trying to understand how the rows and columns should look.

00:02:45.800 --> 00:02:47.705
So we introduce a border here.

00:02:47.705 --> 00:02:50.790
Now we can see that boarded for the rule.

00:02:51.610 --> 00:02:55.830
Let's add the border for the columns also.

00:02:58.210 --> 00:03:01.370
One picks dotted.

00:03:01.370 --> 00:03:05.400
Now we can see the rows and columns clearly.

00:03:07.810 --> 00:03:12.110
And when we say the rows and columns get

00:03:12.110 --> 00:03:16.880
resized automatically is part of the page width, width bootstrap.

00:03:16.880 --> 00:03:20.720
You can be radioed rose up to two L columns.

00:03:20.720 --> 00:03:23.015
Let's add one more column.

00:03:23.015 --> 00:03:24.695
Will correct this paper.

00:03:24.695 --> 00:03:27.965
Row one, column two, and row one.

00:03:27.965 --> 00:03:33.065
Column three. Now you can see three columns and they get adjusted.

00:03:33.065 --> 00:03:35.600
His partner page weight down.

00:03:35.600 --> 00:03:39.830
You can keep on adding like this for up to 12 columns.

00:03:39.830 --> 00:03:45.095
Bootstrap has various classes to give columns is specific weight.

00:03:45.095 --> 00:03:51.230
Let's say that. You can also say call for call fork.

00:03:51.230 --> 00:03:54.560
So they would all occupy for column space.

00:03:54.560 --> 00:03:56.030
Nothing changes.

00:03:56.030 --> 00:03:59.090
Mix your cards up to 12.

00:03:59.090 --> 00:04:01.430
You can call 444,

00:04:01.430 --> 00:04:03.485
or to wait two,

00:04:03.485 --> 00:04:07.925
it's up to you to define how much width you want to give to each column.

00:04:07.925 --> 00:04:11.615
But they should all add up to raise your take stood,

00:04:11.615 --> 00:04:13.535
float to the next rule.

00:04:13.535 --> 00:04:16.835
Let's make it eight columns.

00:04:16.835 --> 00:04:24.260
And from to n will give two column H to the first column and the third column.

00:04:24.260 --> 00:04:28.835
And now you can see that second column is occupying more space.

00:04:28.835 --> 00:04:33.380
We haven't added dotted styling to the call dash to call dicey classes.

00:04:33.380 --> 00:04:34.670
That's why we're not seeing that.

00:04:34.670 --> 00:04:38.615
We can do that also here with bootstrap.css.

00:04:38.615 --> 00:04:42.030
Let's add a border.

00:04:43.330 --> 00:04:48.560
One picks dotted to all this column classes.

00:04:48.560 --> 00:04:51.630
Now we can see the change.

00:04:52.060 --> 00:04:55.700
And as we resize the page,

00:04:55.700 --> 00:04:59.045
though it will automatically get adjusted from the total space.

00:04:59.045 --> 00:05:02.210
Eight column space would be given to column 22,

00:05:02.210 --> 00:05:05.510
would be given to column 12 would be given to column three.

00:05:05.510 --> 00:05:07.610
So this is a very simple concept,

00:05:07.610 --> 00:05:13.294
but using which you can build your base layout easily and make your base responsive.

00:05:13.294 --> 00:05:15.755
With this much understanding,

00:05:15.755 --> 00:05:18.425
you can build any pays layout.

00:05:18.425 --> 00:05:22.775
Let's see how we can give a grid layout to our abc dot HTML.

00:05:22.775 --> 00:05:26.135
What we want to do here is keep the image in the center.

00:05:26.135 --> 00:05:31.205
You have the table on the right and have this text on the left.

00:05:31.205 --> 00:05:35.370
Let's build this simple three column layout.

00:05:36.660 --> 00:05:39.805
We'll go to abc dot HTML.

00:05:39.805 --> 00:05:50.080
Are men div will give a classes container called picks up to the image.

00:05:50.080 --> 00:05:52.045
We'll put it in one single div.

00:05:52.045 --> 00:05:55.690
The image is in another div,

00:05:55.690 --> 00:05:58.315
and the table is in the third div.

00:05:58.315 --> 00:06:00.355
So we'll make them three columns.

00:06:00.355 --> 00:06:04.460
First, we need to our day before the row.

00:06:14.850 --> 00:06:24.025
And we'll move this closing div to have it after the def.

00:06:24.025 --> 00:06:26.620
This is the ending of the row.

00:06:26.620 --> 00:06:29.560
And now we'll have three columns.

00:06:29.560 --> 00:06:33.955
Classical call.

00:06:33.955 --> 00:06:43.570
We can call for sim class for the next one called

00:06:43.570 --> 00:06:54.085
for and for the table also call for.

00:06:54.085 --> 00:06:57.265
Now, let's see how the page looks.

00:06:57.265 --> 00:07:00.555
So this is our base looks now,

00:07:00.555 --> 00:07:03.380
looks fine. Up to a certain size.

00:07:03.380 --> 00:07:07.415
After that, the table occupies more space.

00:07:07.415 --> 00:07:09.440
So for this demo,

00:07:09.440 --> 00:07:11.885
let's move this table to a new row.

00:07:11.885 --> 00:07:15.650
Will close the row just before

00:07:15.650 --> 00:07:25.490
the table and introduce

00:07:25.490 --> 00:07:31.565
a new div with class equals row.

00:07:31.565 --> 00:07:35.580
And for the pebble, let's occupy the entire space.

00:07:36.910 --> 00:07:40.745
So let's see if this is getting close properly.

00:07:40.745 --> 00:07:44.175
It does, and then this is rho.

00:07:44.175 --> 00:07:49.100
And finally, we need to end the main container also.

00:07:51.390 --> 00:07:55.040
This is closing the main container.

00:07:58.890 --> 00:08:02.920
Nine, the first row will have four columns

00:08:02.920 --> 00:08:06.730
for the text section and eight columns for the image section.

00:08:06.730 --> 00:08:10.970
Let's close and make sure it's all aligned properly.

00:08:12.090 --> 00:08:14.590
So he ever did for text,

00:08:14.590 --> 00:08:18.595
which takes four columns and a div for image which takes eight columns,

00:08:18.595 --> 00:08:20.740
and that, that is our first row.

00:08:20.740 --> 00:08:26.655
Then we have another rule where we have a table which picks up the entire space.

00:08:26.655 --> 00:08:28.940
And these are our two rows.

00:08:28.940 --> 00:08:31.984
And then we have the main container,

00:08:31.984 --> 00:08:34.130
which is getting close here.

00:08:34.130 --> 00:08:37.790
So with Visual Studio code or any editor,

00:08:37.790 --> 00:08:39.935
this mixture you're div sir.

00:08:39.935 --> 00:08:44.105
Quoted properly, otherwise your base layout might break.

00:08:44.105 --> 00:08:48.290
Softer. This we can see that we have Paragraph section,

00:08:48.290 --> 00:08:50.120
then image, then table.

00:08:50.120 --> 00:08:53.210
And this is fully responsive.

00:08:53.210 --> 00:09:00.960
We can reduce the size and we can see that it is getting recycled properly.
