1
1

00:00:01,411  -->  00:00:04,856
<v Instructor>After functions accepting functions as input,</v>
2

2

00:00:04,856  -->  00:00:09,023
let's now talk about functions returning functions.
3

3

00:00:10,046  -->  00:00:12,931
And to learn how to do that, let's create a function
4

4

00:00:12,931  -->  00:00:16,123
that creates different interview questions
5

5

00:00:16,123  -->  00:00:18,275
for different jobs.
6

6

00:00:18,275  -->  00:00:20,171
And this is how we're gonna do it.
7

7

00:00:20,171  -->  00:00:22,662
For each job, we will return the function
8

8

00:00:22,662  -->  00:00:26,829
that builds a string using the person's name as an input.
9

9

00:00:27,728  -->  00:00:31,568
So basically, a function returning another function.
10

10

00:00:31,568  -->  00:00:35,401
So function, let's call it interview question,
11

11

00:00:39,691  -->  00:00:43,274
and it will accept a string which is a job.
12

12

00:00:44,807  -->  00:00:48,372
And then in here, according to each of the different jobs,
13

13

00:00:48,372  -->  00:00:51,566
we will return a different function which will then log
14

14

00:00:51,566  -->  00:00:54,327
a question to the console.
15

15

00:00:54,327  -->  00:00:58,492
So we're going to do an if l statement here.
16

16

00:00:58,492  -->  00:01:01,159
So if the job is designer, okay,
17

17

00:01:07,411  -->  00:01:10,744
then return, and here comes the fun part
18

18

00:01:13,180  -->  00:01:16,513
because we will simply return a function
19

19

00:01:17,851  -->  00:01:19,934
which will accept a name,
20

20

00:01:22,241  -->  00:01:24,304
and then in here we put our code.
21

21

00:01:24,304  -->  00:01:27,826
So this is basically an anonymous function, right?
22

22

00:01:27,826  -->  00:01:30,613
So this function here, it's an anonymous function
23

23

00:01:30,613  -->  00:01:32,813
because it doesn't have a name.
24

24

00:01:32,813  -->  00:01:36,134
So all of this is what we're going to return
25

25

00:01:36,134  -->  00:01:38,217
if the job is a designer.
26

26

00:01:39,626  -->  00:01:43,793
So console.log and interview question for designer will be
27

27

00:01:45,107  -->  00:01:49,274
first the name, because we will pass that into the function,
28

28

00:01:50,319  -->  00:01:53,661
right, so here is the name parameter,
29

29

00:01:53,661  -->  00:01:57,828
and then let's ask the person can you please explain
30

30

00:02:01,478  -->  00:02:02,978
what UX design is?
31

31

00:02:05,118  -->  00:02:07,785
So user experience design, okay.
32

32

00:02:08,847  -->  00:02:12,347
And now, another job, let's say a teacher,
33

33

00:02:13,717  -->  00:02:17,884
so teacher, and in here we again return a function,
34

34

00:02:23,637  -->  00:02:27,619
an anonymous function again, which also accepts a name
35

35

00:02:27,619  -->  00:02:30,598
and then a similar string, so console.log,
36

36

00:02:30,598  -->  00:02:33,581
and then it's a teacher so let's ask the teacher
37

37

00:02:33,581  -->  00:02:36,831
in interview what subject do you teach,
38

38

00:02:39,185  -->  00:02:42,352
and then maybe the name of the person.
39

39

00:02:46,067  -->  00:02:49,400
Okay, now we could continue this with a lot of jobs
40

40

00:02:49,400  -->  00:02:52,569
or we could even have used a switch statement, right,
41

41

00:02:52,569  -->  00:02:54,888
but I don't wanna over-complicate things here
42

42

00:02:54,888  -->  00:02:57,472
because this is just for demonstration,
43

43

00:02:57,472  -->  00:03:00,305
so I'll just leave these two and then here,
44

44

00:03:00,305  -->  00:03:04,802
an else statement, and again we're going to return
45

45

00:03:04,802  -->  00:03:08,552
a function and in here, we want again console
46

46

00:03:13,397  -->  00:03:16,064
and then ask hello, then a name,
47

47

00:03:22,843  -->  00:03:24,093
what do you do?
48

48

00:03:26,597  -->  00:03:29,934
So just a random question if we don't know the job.
49

49

00:03:29,934  -->  00:03:34,075
Alright, so this function here that we just wrote
50

50

00:03:34,075  -->  00:03:37,401
will not just return a simple value as we usually do
51

51

00:03:37,401  -->  00:03:39,010
with functions, right?
52

52

00:03:39,010  -->  00:03:42,157
So instead, it returns an entire function
53

53

00:03:42,157  -->  00:03:45,415
that we can then use later, and this is possible because
54

54

00:03:45,415  -->  00:03:50,134
functions are always first class functions in JavaScript
55

55

00:03:50,134  -->  00:03:52,852
because they are effectively objects.
56

56

00:03:52,852  -->  00:03:56,802
So we simply actually return an object here, right?
57

57

00:03:56,802  -->  00:03:59,729
It's simply an object that happens to be a function,
58

58

00:03:59,729  -->  00:04:04,024
so let's now use this and remember this returns a function
59

59

00:04:04,024  -->  00:04:07,038
so we have to store the result somewhere,
60

60

00:04:07,038  -->  00:04:09,729
so let's create a variable, and now we'll call this
61

61

00:04:09,729  -->  00:04:11,646
one a teacher question.
62

62

00:04:13,301  -->  00:04:17,799
So this means it will be a question always for teachers.
63

63

00:04:17,799  -->  00:04:21,966
So now interview question and then what I pass into it
64

64

00:04:24,232  -->  00:04:26,266
is the string teacher.
65

65

00:04:26,266  -->  00:04:29,310
And now, if I run this, then this teacher question
66

66

00:04:29,310  -->  00:04:32,942
variable here will be the function that is returned
67

67

00:04:32,942  -->  00:04:36,681
from the interview question when we pass teacher.
68

68

00:04:36,681  -->  00:04:37,681
Where is it?
69

69

00:04:38,707  -->  00:04:41,275
So here, so again this variable teacher question
70

70

00:04:41,275  -->  00:04:45,275
down here will now be this function here, right?
71

71

00:04:46,640  -->  00:04:49,396
This is just like when we store a function expression
72

72

00:04:49,396  -->  00:04:53,459
in the variable, this is the exact same thing, right?
73

73

00:04:53,459  -->  00:04:56,165
So let's now use this and I'm going to say
74

74

00:04:56,165  -->  00:04:59,082
teacher question and the name John.
75

75

00:05:04,830  -->  00:05:08,074
So I'm now calling this variable here, which is
76

76

00:05:08,074  -->  00:05:12,281
a function, and I will put the name John into it,
77

77

00:05:12,281  -->  00:05:15,670
here, right, because as we know, this function
78

78

00:05:15,670  -->  00:05:18,613
accepts a name as an input.
79

79

00:05:18,613  -->  00:05:20,788
So let's see what happens.
80

80

00:05:20,788  -->  00:05:23,927
Alright, so what subject do you teach, John?
81

81

00:05:23,927  -->  00:05:26,275
Exactly as expected.
82

82

00:05:26,275  -->  00:05:28,547
So with this method, we can basically write
83

83

00:05:28,547  -->  00:05:31,177
one generic function which is the interview question
84

84

00:05:31,177  -->  00:05:34,258
in this case, and then create a bunch of more specific
85

85

00:05:34,258  -->  00:05:38,163
functions based on that generic function, and in our case,
86

86

00:05:38,163  -->  00:05:41,625
that's this function here, the teacher question,
87

87

00:05:41,625  -->  00:05:44,885
which produces questions for teachers.
88

88

00:05:44,885  -->  00:05:48,666
So we can now also create a function which produces
89

89

00:05:48,666  -->  00:05:50,928
questions for designers, right?
90

90

00:05:50,928  -->  00:05:53,261
Let's say designer question.
91

91

00:05:55,806  -->  00:05:59,389
And then again we simply call the interview question
92

92

00:05:59,389  -->  00:06:04,025
function, right, but this time, with the designer
93

93

00:06:04,025  -->  00:06:05,358
as the argument.
94

94

00:06:06,420  -->  00:06:09,483
And now we have a function which is for designers.
95

95

00:06:09,483  -->  00:06:11,872
Let's console log this here as well,
96

96

00:06:11,872  -->  00:06:14,955
so designer question, and again John.
97

97

00:06:18,816  -->  00:06:21,375
Let's console log this.
98

98

00:06:21,375  -->  00:06:24,498
Okay, so I misspelled something here, alright,
99

99

00:06:24,498  -->  00:06:26,415
so it's question, okay.
100

100

00:06:29,229  -->  00:06:32,607
So, John, can you please explain what UX design is?
101

101

00:06:32,607  -->  00:06:34,998
So once again, we have now created a bunch of more
102

102

00:06:34,998  -->  00:06:38,720
specific functions here, so the teacher question
103

103

00:06:38,720  -->  00:06:41,414
and the designer question functions based on
104

104

00:06:41,414  -->  00:06:43,591
our more generic function, which is
105

105

00:06:43,591  -->  00:06:46,250
the interview question function.
106

106

00:06:46,250  -->  00:06:48,171
We could now go ahead and use this as many times
107

107

00:06:48,171  -->  00:06:52,338
as we want, so let's say designer question for Jane,
108

108

00:06:55,190  -->  00:06:57,440
and for Mark, and for Mike,
109

109

00:07:01,292  -->  00:07:02,520
and you get the point, right?
110

110

00:07:02,520  -->  00:07:06,687
So we can now use this for as many, let's say designers,
111

111

00:07:08,073  -->  00:07:08,990
as we want.
112

112

00:07:10,609  -->  00:07:13,445
So Jane, Jane, Mark, and Mike, so all of them
113

113

00:07:13,445  -->  00:07:15,414
will get this question.
114

114

00:07:15,414  -->  00:07:18,630
Let me just show you now that we could also have done this
115

115

00:07:18,630  -->  00:07:20,257
in a different way, so let's say,
116

116

00:07:20,257  -->  00:07:22,340
interview question, okay,
117

117

00:07:27,279  -->  00:07:31,773
and then teacher, and as you know, this will return
118

118

00:07:31,773  -->  00:07:33,366
a function, right?
119

119

00:07:33,366  -->  00:07:36,630
So this will return this function here,
120

120

00:07:36,630  -->  00:07:39,045
and we don't even need to store it in a variable,
121

121

00:07:39,045  -->  00:07:42,362
we can call it right away, so we can use the parentheses
122

122

00:07:42,362  -->  00:07:46,362
once again and then put, let's say Mark in here.
123

123

00:07:49,877  -->  00:07:52,481
So this looks a bit strange, but it works, and that's
124

124

00:07:52,481  -->  00:07:54,881
because this is evaluated from left to right.
125

125

00:07:54,881  -->  00:07:58,061
So first this part here, so the interview question function
126

126

00:07:58,061  -->  00:08:01,952
gets called, it returns a function, and then with this here
127

127

00:08:01,952  -->  00:08:06,540
we call the function that was returned before with Mark.
128

128

00:08:06,540  -->  00:08:10,446
So let's see, and yes, this still works.
129

129

00:08:10,446  -->  00:08:12,854
What subject do you teach, Mark?
130

130

00:08:12,854  -->  00:08:15,721
Alright, so this is of course a really simple example,
131

131

00:08:15,721  -->  00:08:20,027
but it shows you how useful this technique can be.
132

132

00:08:20,027  -->  00:08:22,813
And it really takes some time to getting used to this
133

133

00:08:22,813  -->  00:08:26,155
way of thinking and using functions, but once you
134

134

00:08:26,155  -->  00:08:29,331
understood, it can be really powerful.
135

135

00:08:29,331  -->  00:08:32,037
Okay, and once again, I really wanna encourage you
136

136

00:08:32,037  -->  00:08:34,816
to try this out on your own, write your own functions,
137

137

00:08:34,816  -->  00:08:38,171
and do some experiments with this new concepts
138

138

00:08:38,171  -->  00:08:40,030
of first class functions.
139

139

00:08:40,030  -->  00:08:43,518
And after that, you can just proceed with the course.
140

140

00:08:43,518  -->  00:08:44,851
So see you then.
