1
1

00:00:01,471  -->  00:00:02,940
<v Jonas>So, in the last lecture</v>
2

2

00:00:02,940  -->  00:00:05,422
I promised you that we were gonna work
3

3

00:00:05,422  -->  00:00:07,397
on the budget calculation now.
4

4

00:00:07,397  -->  00:00:08,355
But first,
5

5

00:00:08,355  -->  00:00:11,450
we need to actually fix a really annoying thing
6

6

00:00:11,450  -->  00:00:13,115
in our user interface,
7

7

00:00:13,115  -->  00:00:15,049
which is to clear the input fields
8

8

00:00:15,049  -->  00:00:17,216
after we entered an input.
9

9

00:00:18,391  -->  00:00:21,926
And in this lecture, you're gonna learn a lot of new stuff.
10

10

00:00:21,926  -->  00:00:24,924
So, you're gonna learn how to clear HTML fields,
11

11

00:00:24,924  -->  00:00:27,209
how to use querySelectorAll,
12

12

00:00:27,209  -->  00:00:29,323
that we hadn't used before,
13

13

00:00:29,323  -->  00:00:32,491
you'll learn how to convert a list to an array,
14

14

00:00:32,491  -->  00:00:35,813
and also, a better way to loop over an array
15

15

00:00:35,813  -->  00:00:37,441
than for loops,
16

16

00:00:37,441  -->  00:00:40,426
and that is the foreach method.
17

17

00:00:40,426  -->  00:00:43,443
A lot of stuff to cover in this lecture,
18

18

00:00:43,443  -->  00:00:44,610
so lets do it.
19

19

00:00:46,582  -->  00:00:49,534
So here is the problem that we need to solve.
20

20

00:00:49,534  -->  00:00:52,153
Now, last lecture we added this rent here,
21

21

00:00:52,153  -->  00:00:53,597
but now it is rent,
22

22

00:00:53,597  -->  00:00:55,927
and the value as well is still here,
23

23

00:00:55,927  -->  00:00:57,787
so we can continue to click here,
24

24

00:00:57,787  -->  00:00:59,493
and a new one will be added.
25

25

00:00:59,493  -->  00:01:01,640
And if we continue to click,
26

26

00:01:01,640  -->  00:01:02,810
new ones will be added.
27

27

00:01:02,810  -->  00:01:05,732
So, all of these rents are now here.
28

28

00:01:05,732  -->  00:01:08,203
So, of course, we need a way to clear
29

29

00:01:08,203  -->  00:01:10,813
these input fields, right?
30

30

00:01:10,813  -->  00:01:12,646
So, let's now do that.
31

31

00:01:13,650  -->  00:01:17,902
And since this is clearly to do with the user interface,
32

32

00:01:17,902  -->  00:01:20,152
we go to our UI controller.
33

33

00:01:21,960  -->  00:01:23,412
Which is right here.
34

34

00:01:23,412  -->  00:01:27,560
So, we're gonna add a new method to this controller.
35

35

00:01:27,560  -->  00:01:29,474
And of course, it's gonna be a public method,
36

36

00:01:29,474  -->  00:01:30,432
once again,
37

37

00:01:30,432  -->  00:01:33,515
and this one is called "clearFields."
38

38

00:01:35,547  -->  00:01:36,380
Clear...
39

39

00:01:37,718  -->  00:01:38,551
Fields.
40

40

00:01:45,302  -->  00:01:47,807
And, of course, we don't need any parameters,
41

41

00:01:47,807  -->  00:01:50,525
because we already know which are the fields
42

42

00:01:50,525  -->  00:01:51,544
that we're gonna clear,
43

43

00:01:51,544  -->  00:01:54,961
which are the two that we saw before.
44

44

00:01:54,961  -->  00:01:56,603
Alright, so these are two fields,
45

45

00:01:56,603  -->  00:01:59,208
so lets now use the querySelectorAll,
46

46

00:01:59,208  -->  00:02:03,023
instead of doing the querySelector that we've been using.
47

47

00:02:03,023  -->  00:02:05,607
We could do that, then we would use it twice,
48

48

00:02:05,607  -->  00:02:08,805
but instead we can reduce it to one line of code
49

49

00:02:08,805  -->  00:02:11,361
by using the querySelectorAll.
50

50

00:02:11,361  -->  00:02:12,778
So let's do that.
51

51

00:02:14,051  -->  00:02:15,851
Document dot
52

52

00:02:15,851  -->  00:02:17,621
query selector,
53

53

00:02:17,621  -->  00:02:22,017
and this time it's the query selector "All".
54

54

00:02:22,017  -->  00:02:25,862
So, let's check out which one that we need.
55

55

00:02:25,862  -->  00:02:28,314
It will be the input description here,
56

56

00:02:28,314  -->  00:02:30,393
and the input value, right?
57

57

00:02:30,393  -->  00:02:32,976
So we need to select these two.
58

58

00:02:34,809  -->  00:02:36,667
DOMstrings...
59

59

00:02:36,667  -->  00:02:37,577
dot
60

60

00:02:37,577  -->  00:02:39,577
input description, here.
61

61

00:02:41,021  -->  00:02:42,254
Okay.
62

62

00:02:42,254  -->  00:02:43,200
And now remember,
63

63

00:02:43,200  -->  00:02:46,367
the syntax here is like CSS selecting,
64

64

00:02:47,264  -->  00:02:52,187
so we separate different selectors simply with a comma.
65

65

00:02:52,187  -->  00:02:55,342
So we need a string with a comma here,
66

66

00:02:55,342  -->  00:03:00,193
and then we can join these strings together, right?
67

67

00:03:00,193  -->  00:03:01,526
What is left now
68

68

00:03:03,353  -->  00:03:04,698
is...
69

69

00:03:04,698  -->  00:03:06,031
the input value.
70

70

00:03:10,290  -->  00:03:11,868
InputValue.
71

71

00:03:11,868  -->  00:03:13,301
Okay, and...
72

72

00:03:13,301  -->  00:03:15,659
Let's actually store this in a variable.
73

73

00:03:15,659  -->  00:03:16,916
Okay.
74

74

00:03:16,916  -->  00:03:19,183
I'm going to call it "fields".
75

75

00:03:19,183  -->  00:03:20,266
So, "fields".
76

76

00:03:21,557  -->  00:03:23,859
Because these are our two fields, right?
77

77

00:03:23,859  -->  00:03:27,103
Let's declare the variable once again here in the top.
78

78

00:03:27,103  -->  00:03:28,599
So, var...
79

79

00:03:28,599  -->  00:03:29,432
fields.
80

80

00:03:31,100  -->  00:03:34,024
Okay, so this fields variable now holds the result
81

81

00:03:34,024  -->  00:03:35,789
of the selection.
82

82

00:03:35,789  -->  00:03:37,307
Now the problem is
83

83

00:03:37,307  -->  00:03:39,474
that the querySelectorAll method
84

84

00:03:39,474  -->  00:03:41,008
does return something strange.
85

85

00:03:41,008  -->  00:03:42,953
It doesn't return a nice array
86

86

00:03:42,953  -->  00:03:44,984
which we can then use and loop over,
87

87

00:03:44,984  -->  00:03:47,735
but instead it returns something similar,
88

88

00:03:47,735  -->  00:03:48,975
but still different,
89

89

00:03:48,975  -->  00:03:51,002
and that's a list.
90

90

00:03:51,002  -->  00:03:54,587
So, again, a list is a bit similar to an array,
91

91

00:03:54,587  -->  00:03:55,570
but it doesn't have
92

92

00:03:55,570  -->  00:03:59,256
all of these nice methods that we have for arrays.
93

93

00:03:59,256  -->  00:04:03,673
So the solution to that is to convert the list to an array.
94

94

00:04:03,673  -->  00:04:06,140
And there's actually a nice little trick
95

95

00:04:06,140  -->  00:04:08,483
that we can use for that.
96

96

00:04:08,483  -->  00:04:11,022
And the trick is to use the array method
97

97

00:04:11,022  -->  00:04:12,374
called "slice".
98

98

00:04:12,374  -->  00:04:13,892
And what slice does
99

99

00:04:13,892  -->  00:04:16,649
is to return a copy of the array
100

100

00:04:16,649  -->  00:04:18,956
that it's called on.
101

101

00:04:18,956  -->  00:04:21,441
So usually we call this method on an array
102

102

00:04:21,441  -->  00:04:23,492
and it then returns another array.
103

103

00:04:23,492  -->  00:04:26,085
But we can kind of trick this method
104

104

00:04:26,085  -->  00:04:27,621
and pass a list into it,
105

105

00:04:27,621  -->  00:04:29,754
and then it will still return an array.
106

106

00:04:29,754  -->  00:04:32,508
So that's the solution for this.
107

107

00:04:32,508  -->  00:04:35,428
Alright, but there's only one small problem with that,
108

108

00:04:35,428  -->  00:04:38,263
because we cannot do it like this.
109

109

00:04:38,263  -->  00:04:39,520
So, fields...
110

110

00:04:39,520  -->  00:04:40,353
dot
111

111

00:04:40,353  -->  00:04:41,186
slice
112

112

00:04:41,186  -->  00:04:42,240
will not work
113

113

00:04:42,240  -->  00:04:44,206
because again, it's not an array,
114

114

00:04:44,206  -->  00:04:48,429
and so we cannot call array methods here on the list.
115

115

00:04:48,429  -->  00:04:52,684
Instead, what we have to do is to call the slice methods
116

116

00:04:52,684  -->  00:04:54,720
using the call method,
117

117

00:04:54,720  -->  00:04:57,582
and then passing the fields variable into it
118

118

00:04:57,582  -->  00:04:59,505
so that it becomes the dis variable,
119

119

00:04:59,505  -->  00:05:02,125
and then it's gonna work just fine.
120

120

00:05:02,125  -->  00:05:04,119
And how can we do that?
121

121

00:05:04,119  -->  00:05:06,934
Where is the slice method actually stored
122

122

00:05:06,934  -->  00:05:08,660
that we can use it?
123

123

00:05:08,660  -->  00:05:09,693
Let's think about that.
124

124

00:05:09,693  -->  00:05:12,591
So where do you think it is stored?
125

125

00:05:12,591  -->  00:05:14,048
And the solution is,
126

126

00:05:14,048  -->  00:05:17,535
that it's in the array prototype.
127

127

00:05:17,535  -->  00:05:20,328
So we can write something like this.
128

128

00:05:20,328  -->  00:05:22,795
This array is the function constructor
129

129

00:05:22,795  -->  00:05:24,628
for all arrays, right?
130

130

00:05:25,823  -->  00:05:27,998
And we know that all the methods
131

131

00:05:27,998  -->  00:05:31,598
that the arrays inherit from the array function constructors
132

132

00:05:31,598  -->  00:05:35,829
are in the array's prototype property, right?
133

133

00:05:35,829  -->  00:05:39,653
And therefore, we know the slice method must also be there.
134

134

00:05:39,653  -->  00:05:42,736
So we can write "array dot prototype"
135

135

00:05:44,731  -->  00:05:45,686
and then
136

136

00:05:45,686  -->  00:05:46,686
"dot slice".
137

137

00:05:47,985  -->  00:05:49,141
Alright, so here it is.
138

138

00:05:49,141  -->  00:05:50,973
And since this is a function,
139

139

00:05:50,973  -->  00:05:54,004
we can then use the call method on it, right?
140

140

00:05:54,004  -->  00:05:54,921
So, "call".
141

141

00:05:55,955  -->  00:06:00,169
And then in here, we setted this variable to the fields.
142

142

00:06:00,169  -->  00:06:04,254
And this will trick the slice method into thinking
143

143

00:06:04,254  -->  00:06:06,225
that we give it an array,
144

144

00:06:06,225  -->  00:06:08,674
and so it will return an array.
145

145

00:06:08,674  -->  00:06:10,741
So if we now store this
146

146

00:06:10,741  -->  00:06:13,173
into a variable and call it
147

147

00:06:13,173  -->  00:06:14,173
fields array
148

148

00:06:16,603  -->  00:06:19,147
then this will be an array.
149

149

00:06:19,147  -->  00:06:22,814
And actually, again, I'm putting it up here.
150

150

00:06:24,658  -->  00:06:25,908
So, fields array.
151

151

00:06:25,908  -->  00:06:27,974
This is now an array.
152

152

00:06:27,974  -->  00:06:31,338
This is a nice little trick that we can use.
153

153

00:06:31,338  -->  00:06:33,959
This means that we can now loop over this array
154

154

00:06:33,959  -->  00:06:37,197
and clear all the fields that were selected,
155

155

00:06:37,197  -->  00:06:38,699
which were only two in this case,
156

156

00:06:38,699  -->  00:06:40,111
but if it would be more,
157

157

00:06:40,111  -->  00:06:43,927
then all of the fields could be cleared at once.
158

158

00:06:43,927  -->  00:06:46,668
Now we could do it the old-school four loop
159

159

00:06:46,668  -->  00:06:48,273
that we have been doing all the time
160

160

00:06:48,273  -->  00:06:50,589
up until this point, right?
161

161

00:06:50,589  -->  00:06:52,604
But let's make it more exciting.
162

162

00:06:52,604  -->  00:06:54,666
And so I will show you a new method
163

163

00:06:54,666  -->  00:06:56,045
that we can use on arrays
164

164

00:06:56,045  -->  00:06:58,853
which is the forEach method.
165

165

00:06:58,853  -->  00:07:01,270
It works something like this.
166

166

00:07:02,177  -->  00:07:03,594
So, fields array.
167

167

00:07:04,641  -->  00:07:05,699
And now...
168

168

00:07:05,699  -->  00:07:06,532
forEach.
169

169

00:07:08,341  -->  00:07:09,404
And this is really simple.
170

170

00:07:09,404  -->  00:07:12,418
All we have to do is to pass a callback function
171

171

00:07:12,418  -->  00:07:13,832
into this method,
172

172

00:07:13,832  -->  00:07:15,315
and then this callback function
173

173

00:07:15,315  -->  00:07:19,250
is applied to each of the elements in the array.
174

174

00:07:19,250  -->  00:07:22,275
So let's put an anonymous function in here.
175

175

00:07:22,275  -->  00:07:23,108
Okay.
176

176

00:07:24,347  -->  00:07:26,233
Just like this.
177

177

00:07:26,233  -->  00:07:29,027
Now, this callback function here,
178

178

00:07:29,027  -->  00:07:31,186
this anonymous function, this case here,
179

179

00:07:31,186  -->  00:07:34,028
can receive up to three arguments.
180

180

00:07:34,028  -->  00:07:35,892
And this is really like the callback function
181

181

00:07:35,892  -->  00:07:38,519
that we saw before on the event listener.
182

182

00:07:38,519  -->  00:07:40,031
Remember that?
183

183

00:07:40,031  -->  00:07:43,333
In that case, we did automatically have access
184

184

00:07:43,333  -->  00:07:45,755
to the event object,
185

185

00:07:45,755  -->  00:07:49,030
and we could name that object as we wanted, right?
186

186

00:07:49,030  -->  00:07:51,210
So here, it's actually pretty similar.
187

187

00:07:51,210  -->  00:07:54,222
Here, we have access to three things.
188

188

00:07:54,222  -->  00:07:57,752
We have access to the current value,
189

189

00:07:57,752  -->  00:08:00,315
this means the value of the array
190

190

00:08:00,315  -->  00:08:03,790
that is currently being processed, let's say,
191

191

00:08:03,790  -->  00:08:06,443
then we also have the index number,
192

192

00:08:06,443  -->  00:08:07,740
so the number going from
193

193

00:08:07,740  -->  00:08:11,221
zero to the length of the array minus one,
194

194

00:08:11,221  -->  00:08:12,388
and then also,
195

195

00:08:13,905  -->  00:08:14,863
the entire array.
196

196

00:08:14,863  -->  00:08:17,978
So we have access to the entire array here, as well.
197

197

00:08:17,978  -->  00:08:20,031
And again, we can name this as we want.
198

198

00:08:20,031  -->  00:08:24,712
We could just call this something like "cur", let's say.
199

199

00:08:24,712  -->  00:08:28,335
And this one just, "index" or just "i".
200

200

00:08:28,335  -->  00:08:30,309
So we can do it as we want,
201

201

00:08:30,309  -->  00:08:31,919
and it will always work.
202

202

00:08:31,919  -->  00:08:33,381
So this is something really nice
203

203

00:08:33,381  -->  00:08:37,170
that javascript has for some methods.
204

204

00:08:37,170  -->  00:08:39,347
So remember, what we want to do here
205

205

00:08:39,347  -->  00:08:41,609
is to simply clear all these fields.
206

206

00:08:41,609  -->  00:08:44,596
So we want to see them empty.
207

207

00:08:44,596  -->  00:08:46,784
And it's actually really simple.
208

208

00:08:46,784  -->  00:08:50,325
All we have to do is to select a current,
209

209

00:08:50,325  -->  00:08:51,667
okay,
210

210

00:08:51,667  -->  00:08:53,775
which is this here,
211

211

00:08:53,775  -->  00:08:57,379
and this means the current element that is being processed.
212

212

00:08:57,379  -->  00:08:59,689
So it will first be the input description,
213

213

00:08:59,689  -->  00:09:03,189
and then the input value, right?
214

214

00:09:03,189  -->  00:09:05,473
So if we set the value
215

215

00:09:05,473  -->  00:09:06,306
of these
216

216

00:09:07,623  -->  00:09:09,493
back to empty,
217

217

00:09:09,493  -->  00:09:13,509
then the fields will simply be cleared.
218

218

00:09:13,509  -->  00:09:16,869
And it really is as simple as this.
219

219

00:09:16,869  -->  00:09:19,150
So again, this forEach method here
220

220

00:09:19,150  -->  00:09:22,687
moves over all of the elements of the fields array,
221

221

00:09:22,687  -->  00:09:25,765
and then sets the value of all of them
222

222

00:09:25,765  -->  00:09:27,848
back to the empty string.
223

223

00:09:28,975  -->  00:09:31,540
And we have access to the current element
224

224

00:09:31,540  -->  00:09:33,963
thanks to this callback function here,
225

225

00:09:33,963  -->  00:09:36,527
which has access to these three arguments.
226

226

00:09:36,527  -->  00:09:38,270
So, the current element,
227

227

00:09:38,270  -->  00:09:39,678
the current index,
228

228

00:09:39,678  -->  00:09:41,367
and the original array,
229

229

00:09:41,367  -->  00:09:43,819
which in this case would be fields array.
230

230

00:09:43,819  -->  00:09:44,652
Okay?
231

231

00:09:45,518  -->  00:09:47,920
So let's now use this method.
232

232

00:09:47,920  -->  00:09:52,568
And for that, we're gonna go back to our controller.
233

233

00:09:52,568  -->  00:09:55,188
This is something we actually didn't put here
234

234

00:09:55,188  -->  00:09:56,805
in our comments,
235

235

00:09:56,805  -->  00:09:57,763
so let's say,
236

236

00:09:57,763  -->  00:09:59,029
"Four...
237

237

00:09:59,029  -->  00:10:00,612
"clear the fields."
238

238

00:10:02,684  -->  00:10:06,557
And what we're gonna do is "UIController"
239

239

00:10:06,557  -->  00:10:08,871
and "clearFields".
240

240

00:10:08,871  -->  00:10:10,876
As simple as that.
241

241

00:10:10,876  -->  00:10:12,974
So let's now test this.
242

242

00:10:12,974  -->  00:10:13,891
So, reload.
243

243

00:10:15,627  -->  00:10:16,926
And now,
244

244

00:10:16,926  -->  00:10:18,870
salary, let's say,
245

245

00:10:18,870  -->  00:10:19,703
of 1200.
246

246

00:10:21,579  -->  00:10:22,412
And, yeah.
247

247

00:10:22,412  -->  00:10:24,895
The fields are empty now.
248

248

00:10:24,895  -->  00:10:26,775
Let's try it again.
249

249

00:10:26,775  -->  00:10:28,025
So, holidays...
250

250

00:10:29,531  -->  00:10:30,364
600.
251

251

00:10:31,713  -->  00:10:33,595
And yeah, it's empty again.
252

252

00:10:33,595  -->  00:10:36,529
Now one thing that we should also do
253

253

00:10:36,529  -->  00:10:40,543
is to set the focus back to the first field here, right?
254

254

00:10:40,543  -->  00:10:41,962
So that we can easily
255

255

00:10:41,962  -->  00:10:44,312
continue to put more items in here.
256

256

00:10:44,312  -->  00:10:46,526
And that's also pretty easy to do.
257

257

00:10:46,526  -->  00:10:50,699
So let's just go back to our clear fields method,
258

258

00:10:50,699  -->  00:10:53,616
and then we just need a line of code here
259

259

00:10:53,616  -->  00:10:55,193
which sets the focus
260

260

00:10:55,193  -->  00:10:58,069
on the first element of the array, right?
261

261

00:10:58,069  -->  00:10:59,486
So, fields array,
262

262

00:11:01,002  -->  00:11:03,062
zero, which is the first element,
263

263

00:11:03,062  -->  00:11:05,143
which will be the input description
264

264

00:11:05,143  -->  00:11:07,485
which is exactly what we want.
265

265

00:11:07,485  -->  00:11:10,705
So it will select the first element,
266

266

00:11:10,705  -->  00:11:13,892
and then we simply need to use the focus method.
267

267

00:11:13,892  -->  00:11:14,892
So, "focus",
268

268

00:11:16,450  -->  00:11:18,290
and that's it.
269

269

00:11:18,290  -->  00:11:20,707
Alright, let's seed it again.
270

270

00:11:22,486  -->  00:11:24,130
And again.
271

271

00:11:24,130  -->  00:11:24,963
Salary...
272

272

00:11:26,029  -->  00:11:27,362
1200, let's say.
273

273

00:11:28,310  -->  00:11:31,967
And, yeah, the focus is back to the description.
274

274

00:11:31,967  -->  00:11:34,729
So this makes it easier to input the values.
275

275

00:11:34,729  -->  00:11:37,520
Alright, but now it's really time to start working
276

276

00:11:37,520  -->  00:11:39,135
here on the budget
277

277

00:11:39,135  -->  00:11:42,289
and on the total income and expenses.
278

278

00:11:42,289  -->  00:11:45,872
So, come with me right to the next lecture!
