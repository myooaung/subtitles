1
1

00:00:01,440  -->  00:00:03,740
<v Jonas>Let's continue learning about objects,</v>
2

2

00:00:03,740  -->  00:00:07,240
this time diving deeper into object methods.
3

3

00:00:07,240  -->  00:00:09,840
So we learned in the last lecture that an object
4

4

00:00:09,840  -->  00:00:12,590
can hold different types of data, right?
5

5

00:00:12,590  -->  00:00:15,710
So including a raise, and even other objects,
6

6

00:00:15,710  -->  00:00:19,010
but we can also even attach functions to objects.
7

7

00:00:19,010  -->  00:00:21,810
And these functions are then called methods.
8

8

00:00:21,810  -->  00:00:25,310
So let's see why and how we can create methods.
9

9

00:00:25,310  -->  00:00:28,450
And for that, let's actually go back and grab
10

10

00:00:28,450  -->  00:00:32,923
our John object so we don't have to rewrite it all again.
11

11

00:00:34,000  -->  00:00:36,200
So here we have our object.
12

12

00:00:36,200  -->  00:00:38,570
So what we want to do here is to add the function,
13

13

00:00:38,570  -->  00:00:41,540
so a method, to this John object in order
14

14

00:00:41,540  -->  00:00:43,960
to calculate the age of John.
15

15

00:00:43,960  -->  00:00:47,850
So we don't want to have the age hard coded in the object
16

16

00:00:47,850  -->  00:00:49,600
because it changes every year,
17

17

00:00:49,600  -->  00:00:51,680
and what stays constant, of course, is the year.
18

18

00:00:51,680  -->  00:00:54,692
And so instead of having the age hard coded here, an object,
19

19

00:00:54,692  -->  00:00:57,540
we have a function that calculates that age.
20

20

00:00:57,540  -->  00:01:00,603
So all we have to do is to basically define another key.
21

21

00:01:01,760  -->  00:01:05,590
So calcAge, which stands for calculate of course,
22

22

00:01:05,590  -->  00:01:09,280
so calcAge, and now just like before, we define the value.
23

23

00:01:09,280  -->  00:01:12,283
And value here is a function expression, basically.
24

24

00:01:13,130  -->  00:01:15,973
So we write function and then the birth year.
25

25

00:01:19,040  -->  00:01:20,310
Alright, and that's it.
26

26

00:01:20,310  -->  00:01:23,730
Now all we have to do is to write our function by it.
27

27

00:01:23,730  -->  00:01:26,050
And now maybe it makes a bit more sense why we learned
28

28

00:01:26,050  -->  00:01:28,940
about function expressions and function declarations before.
29

29

00:01:28,940  -->  00:01:32,400
So this here is clearly a function expression, right?
30

30

00:01:32,400  -->  00:01:34,280
So it's like we have a function without the name,
31

31

00:01:34,280  -->  00:01:37,400
just with the argument which we then assign to a variable,
32

32

00:01:37,400  -->  00:01:39,800
which is in this case is calcAge.
33

33

00:01:39,800  -->  00:01:43,253
And so this function here is now a method of John.
34

34

00:01:44,310  -->  00:01:47,330
So now all we have to do is to return the year,
35

35

00:01:47,330  -->  00:01:50,740
just like we did before, minus the birth year.
36

36

00:01:50,740  -->  00:01:52,430
Okay, simple right?
37

37

00:01:52,430  -->  00:01:54,943
Now how do you think we are going to call this?
38

38

00:01:55,850  -->  00:01:58,510
Well, it's very simple again.
39

39

00:01:58,510  -->  00:02:02,620
And let's console log the result of calling that function.
40

40

00:02:02,620  -->  00:02:05,450
And so, the way we call it is just the same way
41

41

00:02:05,450  -->  00:02:07,230
that we access properties.
42

42

00:02:07,230  -->  00:02:09,140
So, John and then dot.
43

43

00:02:09,140  -->  00:02:11,200
Instead of accessing one of the properties,
44

44

00:02:11,200  -->  00:02:13,760
we simple access calcAge.
45

45

00:02:13,760  -->  00:02:15,420
Then it's just a normal function call.
46

46

00:02:15,420  -->  00:02:18,150
So calcAge and then we pass in the year,
47

47

00:02:18,150  -->  00:02:20,730
so 1990 in this example.
48

48

00:02:20,730  -->  00:02:25,730
And so now, we will get the age which is 28, great.
49

49

00:02:26,040  -->  00:02:30,020
So that's a very basic functionality of methods.
50

50

00:02:30,020  -->  00:02:32,400
And remember that in the array lecture
51

51

00:02:32,400  -->  00:02:34,570
I showed you methods for an array,
52

52

00:02:34,570  -->  00:02:38,420
and so that means that arrays are actually also objects
53

53

00:02:38,420  -->  00:02:40,770
because that's the only way that they can have methods,
54

54

00:02:40,770  -->  00:02:44,040
right, because only objects have methods.
55

55

00:02:44,040  -->  00:02:46,330
Arrays have all these functions to change them,
56

56

00:02:46,330  -->  00:02:48,423
like push and pop, remember?
57

57

00:02:48,423  -->  00:02:51,550
We will dive deeper into why things work like this
58

58

00:02:51,550  -->  00:02:53,820
and how we can create this same functionality
59

59

00:02:53,820  -->  00:02:56,450
for our objects later in the course.
60

60

00:02:56,450  -->  00:02:59,510
For now we're just talking about the method basics.
61

61

00:02:59,510  -->  00:03:03,260
So just to learn how methods really work.
62

62

00:03:03,260  -->  00:03:05,740
Now continuing with our John example here,
63

63

00:03:05,740  -->  00:03:08,490
I'm sure that you noticed that the year of birth
64

64

00:03:08,490  -->  00:03:11,050
of 1990, this one here,
65

65

00:03:11,050  -->  00:03:13,530
that we passed in as an argument of the function
66

66

00:03:13,530  -->  00:03:17,630
is actually already defined in the John object itself.
67

67

00:03:17,630  -->  00:03:19,640
Right, so it's already here, in fact.
68

68

00:03:19,640  -->  00:03:22,399
So what if instead of having to
69

69

00:03:22,399  -->  00:03:23,450
pass it into this function here again,
70

70

00:03:23,450  -->  00:03:24,800
we could access that property
71

71

00:03:24,800  -->  00:03:27,890
right from this method inside of this object?
72

72

00:03:27,890  -->  00:03:29,990
Well, it turns out that we can
73

73

00:03:29,990  -->  00:03:31,710
and that's because in every object,
74

74

00:03:31,710  -->  00:03:35,296
JavaScript gives us a special keyword called "this".
75

75

00:03:35,296  -->  00:03:37,229
So let's try that out.
76

76

00:03:37,229  -->  00:03:40,220
Instead of having to pass in the birth year
77

77

00:03:40,220  -->  00:03:41,970
which is already defined here,
78

78

00:03:41,970  -->  00:03:45,928
we can say this dot birth year.
79

79

00:03:45,928  -->  00:03:50,707
So "this", what it means here in this context is John.
80

80

00:03:50,707  -->  00:03:54,688
"This" means this object, the present, the current object.
81

81

00:03:54,688  -->  00:03:58,870
So when we call this method here, this dot birth year,
82

82

00:03:58,870  -->  00:04:01,374
will mean John dot birth year.
83

83

00:04:01,374  -->  00:04:06,000
So let's try that out again and let's just change it here
84

84

00:04:06,000  -->  00:04:08,860
so that our output here is going to change.
85

85

00:04:08,860  -->  00:04:11,620
So let's put 92 here now, and if you reload,
86

86

00:04:11,620  -->  00:04:14,460
now we see that he's now 26.
87

87

00:04:14,460  -->  00:04:17,300
What that means is that "this" actually works.
88

88

00:04:17,300  -->  00:04:20,770
So we can access now this dot birth year,
89

89

00:04:20,770  -->  00:04:24,250
because "this", again, means simply the current object.
90

90

00:04:24,250  -->  00:04:27,880
So basically the object on which we have calcAge.
91

91

00:04:27,880  -->  00:04:29,640
Okay, so that's great.
92

92

00:04:29,640  -->  00:04:32,270
But let's actually take it even one step further.
93

93

00:04:32,270  -->  00:04:34,970
So what if you actually wanted to store this result
94

94

00:04:34,970  -->  00:04:37,250
right into the John object?
95

95

00:04:37,250  -->  00:04:39,383
Well, we could do it like this.
96

96

00:04:39,383  -->  00:04:44,383
So we would first calculate the age, so just like this.
97

97

00:04:46,750  -->  00:04:51,750
Then, we would say, john dot age equals the age.
98

98

00:04:52,870  -->  00:04:54,431
Right?
99

99

00:04:54,431  -->  00:04:55,630
Or we could actually do it all in one line.
100

100

00:04:55,630  -->  00:04:57,283
So something like this.
101

101

00:04:59,850  -->  00:05:00,742
Okay, so we call john dot calcAge,
102

102

00:05:00,742  -->  00:05:04,178
which will return the age,
103

103

00:05:04,178  -->  00:05:08,680
and then we set john dot age to that result.
104

104

00:05:08,680  -->  00:05:11,540
So remember that we can set properties like this
105

105

00:05:11,540  -->  00:05:14,710
just as we learned in the last lecture, right?
106

106

00:05:14,710  -->  00:05:16,580
But we actually can do even better.
107

107

00:05:16,580  -->  00:05:18,220
So if you can access a property
108

108

00:05:18,220  -->  00:05:20,260
in a current object like this here,
109

109

00:05:20,260  -->  00:05:23,560
well, that it means that we can also set it, right?
110

110

00:05:23,560  -->  00:05:26,430
And so instead of returning this number here,
111

111

00:05:26,430  -->  00:05:27,437
we can simply say this dot age should be equal to 2018
112

112

00:05:27,437  -->  00:05:32,437
minus this dot birth year.
113

113

00:05:35,500  -->  00:05:39,250
So now all we have to do is to call this function, right?
114

114

00:05:39,250  -->  00:05:42,300
Then we can also log the entire object to the console,
115

115

00:05:42,300  -->  00:05:45,223
just to see if the result is really there.
116

116

00:05:49,060  -->  00:05:50,690
And, let's see it.
117

117

00:05:50,690  -->  00:05:53,730
And indeed, here we have the age of 26.
118

118

00:05:53,730  -->  00:05:56,140
And so, this worked.
119

119

00:05:56,140  -->  00:05:58,660
So the "this" keyword is something really powerful
120

120

00:05:58,660  -->  00:06:01,300
and really important that you will have to master
121

121

00:06:01,300  -->  00:06:03,760
throughout your journey of learning JavaScript.
122

122

00:06:03,760  -->  00:06:06,100
So remember in this lecture we went from
123

123

00:06:06,100  -->  00:06:08,620
actually having to pass in the birth year as
124

124

00:06:08,620  -->  00:06:10,040
an argument of the function,
125

125

00:06:10,040  -->  00:06:12,860
to being able to read the birth year directly
126

126

00:06:12,860  -->  00:06:15,280
from the John object using the "this",
127

127

00:06:15,280  -->  00:06:18,080
and then from there we went even one step further
128

128

00:06:18,080  -->  00:06:20,180
and instead of returning the age result
129

129

00:06:20,180  -->  00:06:22,910
we also stored it right into the object.
130

130

00:06:22,910  -->  00:06:24,340
And so that's the best we can do
131

131

00:06:24,340  -->  00:06:27,550
and that's the way it's supposed to be working.
132

132

00:06:27,550  -->  00:06:30,240
So if you understand this basic functionality
133

133

00:06:30,240  -->  00:06:32,440
of methods and the "this" keyword,
134

134

00:06:32,440  -->  00:06:33,720
then you're well on your way
135

135

00:06:33,720  -->  00:06:36,850
of mastering objects later in this course.
136

136

00:06:36,850  -->  00:06:39,350
Because this is actually a very complex subject
137

137

00:06:39,350  -->  00:06:40,820
and we will dive much much deeper
138

138

00:06:40,820  -->  00:06:42,230
into it later in the course.
139

139

00:06:42,230  -->  00:06:44,197
But for now, I really just want you to understand
140

140

00:06:44,197  -->  00:06:47,240
that an object has a special "this" keyword
141

141

00:06:47,240  -->  00:06:49,150
which basically points to itself,
142

142

00:06:49,150  -->  00:06:50,340
and I want you to understand
143

143

00:06:50,340  -->  00:06:52,560
that you can use methods like this.
144

144

00:06:52,560  -->  00:06:55,610
So, just like I showed you in this video.
145

145

00:06:55,610  -->  00:06:57,330
Alright, make sense?
146

146

00:06:57,330  -->  00:06:58,630
So I think you're now ready
147

147

00:06:58,630  -->  00:07:00,270
for yet another coding challenge.
148

148

00:07:00,270  -->  00:07:01,700
I hope that you like these.
149

149

00:07:01,700  -->  00:07:04,610
I think they're perfect for you to practice your skills
150

150

00:07:04,610  -->  00:07:05,740
and what you just learned.
151

151

00:07:05,740  -->  00:07:07,793
So hopefully I see you there in a second.
