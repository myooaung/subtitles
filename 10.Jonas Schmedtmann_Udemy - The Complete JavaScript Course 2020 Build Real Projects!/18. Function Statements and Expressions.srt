1
1

00:00:01,399  -->  00:00:02,340
<v Instructor>In this video you will</v>
2

2

00:00:02,340  -->  00:00:05,940
learn about function statements and expressions.
3

3

00:00:05,940  -->  00:00:07,780
So, in the last video where we first talked
4

4

00:00:07,780  -->  00:00:10,620
about functions I always declared functions
5

5

00:00:10,620  -->  00:00:13,360
using function statements, but there's actually
6

6

00:00:13,360  -->  00:00:16,190
another way of writing functions in Java Script,
7

7

00:00:16,190  -->  00:00:19,870
and that is by using function expressions, okay.
8

8

00:00:19,870  -->  00:00:22,000
So, all the logic of functions that I explained to you
9

9

00:00:22,000  -->  00:00:24,760
in the last lecture still work the exact same way.
10

10

00:00:24,760  -->  00:00:27,820
We just write the function in a slightly different way,
11

11

00:00:27,820  -->  00:00:29,220
and under the hood of Java Script
12

12

00:00:29,220  -->  00:00:31,520
it also works quite differently actually,
13

13

00:00:31,520  -->  00:00:34,230
but for now that's not important for us.
14

14

00:00:34,230  -->  00:00:36,033
I just want you to know at this point
15

15

00:00:36,033  -->  00:00:38,280
that we have both function statements
16

16

00:00:38,280  -->  00:00:40,650
and expressions, so let me show it to you.
17

17

00:00:40,650  -->  00:00:43,590
And so, when we write a function expression we start
18

18

00:00:43,590  -->  00:00:46,180
by writing the function basically without the name,
19

19

00:00:46,180  -->  00:00:48,060
so we still use the function keyword
20

20

00:00:48,060  -->  00:00:49,980
and then right after that we put
21

21

00:00:49,980  -->  00:00:52,340
the arguments list, and so this case
22

22

00:00:52,340  -->  00:00:56,183
I want to paste in the job, enter first name.
23

23

00:00:57,030  -->  00:00:59,230
Okay, and only then we basically
24

24

00:00:59,230  -->  00:01:01,450
assigned this function to a variable.
25

25

00:01:01,450  -->  00:01:03,540
So, we declare a variable, and this one
26

26

00:01:03,540  -->  00:01:06,460
I'm going to call, "whatDoYouDo," so basically
27

27

00:01:06,460  -->  00:01:09,380
it's a function where we paste in the job and then
28

28

00:01:09,380  -->  00:01:12,550
the function tells us what that person does.
29

29

00:01:12,550  -->  00:01:16,403
So, "whatDoYouDo," so that is now a variable,
30

30

00:01:18,221  -->  00:01:21,720
and what we assign to that variable is simply this function.
31

31

00:01:21,720  -->  00:01:24,760
So, function where we paste in job and first name,
32

32

00:01:24,760  -->  00:01:27,450
and then of course the function block.
33

33

00:01:27,450  -->  00:01:29,350
All right, so comparing that to what
34

34

00:01:29,350  -->  00:01:31,850
we had before, all right, let's write it out here.
35

35

00:01:33,100  -->  00:01:36,823
So, that is a function expression.
36

36

00:01:39,350  -->  00:01:42,290
And if we did the same thing as a function declaration
37

37

00:01:43,740  -->  00:01:47,907
then we would write, "Function whatDoYouDo,"
38

38

00:01:49,530  -->  00:01:53,700
and then the arguments list, so something like this.
39

39

00:01:53,700  -->  00:01:55,300
Okay, so you see the difference?
40

40

00:01:56,140  -->  00:01:58,110
Okay, so let me comment this out here.
41

41

00:02:00,440  -->  00:02:02,340
So, this is just so you know what the difference
42

42

00:02:02,340  -->  00:02:04,880
between a declaration and an expression is,
43

43

00:02:04,880  -->  00:02:07,504
and again, the way that we call the function
44

44

00:02:07,504  -->  00:02:08,670
and the way that we paste in the parameters
45

45

00:02:08,670  -->  00:02:11,060
and all that stuff that you learned before still works
46

46

00:02:11,060  -->  00:02:13,330
the exact same way with function expressions.
47

47

00:02:13,330  -->  00:02:16,620
All right, so next I'll use a switch statement here
48

48

00:02:16,620  -->  00:02:18,860
so that you can practice some different stuff
49

49

00:02:18,860  -->  00:02:22,640
that we learned before and we will do something
50

50

00:02:22,640  -->  00:02:24,930
similar to the switch that we had before actually.
51

51

00:02:24,930  -->  00:02:27,790
So, we're gonna switch the job here and then
52

52

00:02:27,790  -->  00:02:31,523
our different cases will be for, say, teacher.
53

53

00:02:34,700  -->  00:02:36,700
And let's add the cases here before.
54

54

00:02:36,700  -->  00:02:39,923
So, case teacher, then we have driver.
55

55

00:02:42,750  -->  00:02:45,160
Then we have designer...
56

56

00:02:50,060  -->  00:02:52,439
And then finally the default case,
57

57

00:02:52,439  -->  00:02:54,420
if none of the before apply.
58

58

00:02:54,420  -->  00:02:56,880
All right, now the other time where we did
59

59

00:02:56,880  -->  00:03:00,295
this similar switch we had a canceled out log
60

60

00:03:00,295  -->  00:03:01,490
and then a break, but this time we're
61

61

00:03:01,490  -->  00:03:03,500
going to actually return something.
62

62

00:03:03,500  -->  00:03:06,870
So, let's say we want to return first name
63

63

00:03:08,150  -->  00:03:10,510
plus the string that we had before.
64

64

00:03:10,510  -->  00:03:15,160
So, "teaches kids how to code."
65

65

00:03:15,160  -->  00:03:17,250
Okay, and now we will actually
66

66

00:03:17,250  -->  00:03:19,120
not have to include the break.
67

67

00:03:19,120  -->  00:03:20,520
That is because of something that I didn't
68

68

00:03:20,520  -->  00:03:24,010
tell you before, that is when we hit the return keyword
69

69

00:03:24,010  -->  00:03:27,810
here then we return whatever we define after it,
70

70

00:03:27,810  -->  00:03:29,932
but what also happens is that
71

71

00:03:29,932  -->  00:03:31,280
the function immediately finishes.
72

72

00:03:31,280  -->  00:03:33,430
So, basically we immediately go out
73

73

00:03:33,430  -->  00:03:35,460
of the function and return to the place
74

74

00:03:35,460  -->  00:03:37,700
where we actually called the function.
75

75

00:03:37,700  -->  00:03:41,250
Okay, so the return keywords does not only return the value,
76

76

00:03:41,250  -->  00:03:43,810
but it also immediately finishes the function.
77

77

00:03:43,810  -->  00:03:46,430
Okay, so we do not need the break here.
78

78

00:03:46,430  -->  00:03:48,810
So, in case that the job is teacher,
79

79

00:03:48,810  -->  00:03:51,130
then we return this string here
80

80

00:03:51,130  -->  00:03:53,223
and then immediately exit the function.
81

81

00:03:55,718  -->  00:03:58,800
All right, now in case that the job is the driver,
82

82

00:03:58,800  -->  00:04:00,600
well, then we return something else.
83

83

00:04:01,840  -->  00:04:04,520
Okay, and so in that case this line here is never
84

84

00:04:04,520  -->  00:04:07,360
executed, obviously, and so it's not going
85

85

00:04:07,360  -->  00:04:09,640
to finish the function and instead it will come
86

86

00:04:09,640  -->  00:04:11,890
to this next case, which is driver.
87

87

00:04:11,890  -->  00:04:16,890
So, first name, and let's say, "drives a cab in Lisbon."
88

88

00:04:20,520  -->  00:04:22,640
Then the same thing for the designer...
89

89

00:04:30,617  -->  00:04:32,670
"Designs beautiful websites," and then
90

90

00:04:32,670  -->  00:04:34,060
finally the default case...
91

91

00:04:41,840  -->  00:04:43,063
Does something else.
92

92

00:04:44,660  -->  00:04:47,150
Okay, so let's now give it a try.
93

93

00:04:47,150  -->  00:04:50,990
So, just like before we call our function, "whatDoYouDo,"
94

94

00:04:50,990  -->  00:04:53,560
and then we paste in the job and a first name.
95

95

00:04:53,560  -->  00:04:58,560
So, let's paste in, "teacher," and of course, "John."
96

96

00:05:00,110  -->  00:05:02,260
And don't forget that this function here returns
97

97

00:05:02,260  -->  00:05:05,800
something, and so we should save that somewhere.
98

98

00:05:05,800  -->  00:05:07,830
All right, or instead of saving it we can
99

99

00:05:07,830  -->  00:05:10,043
of course also simply log into the console,
100

100

00:05:11,168  -->  00:05:12,173
so let's do that instead.
101

101

00:05:13,490  -->  00:05:15,860
Okay, so that's something that we didn't do before.
102

102

00:05:15,860  -->  00:05:17,570
So, immediately logged to the console
103

103

00:05:17,570  -->  00:05:20,070
the result of calling this function.
104

104

00:05:20,070  -->  00:05:22,030
Okay, but that just works the same.
105

105

00:05:22,030  -->  00:05:24,667
So, in this case what we will return here is the string,
106

106

00:05:24,667  -->  00:05:27,850
"John teaches kids how to code," right?
107

107

00:05:27,850  -->  00:05:30,503
And so that will then be logged to the console.
108

108

00:05:32,010  -->  00:05:35,400
So, exactly like I said, this is
109

109

00:05:35,400  -->  00:05:37,520
the string that we expected, right?
110

110

00:05:37,520  -->  00:05:40,633
And now of course we can do this multiple times.
111

111

00:05:43,230  -->  00:05:47,390
So, let's say, "designer, Jane," and then...
112

112

00:05:47,390  -->  00:05:49,597
Well, we can say that, "Mark is retired."
113

113

00:05:51,280  -->  00:05:54,177
Let's see what happens now, so "Jane designs
114

114

00:05:54,177  -->  00:05:56,580
"beautiful websites," and then Mark does something else
115

115

00:05:56,580  -->  00:05:58,450
with just the default clause here.
116

116

00:05:58,450  -->  00:06:00,640
So, again you see how useful it is to be
117

117

00:06:00,640  -->  00:06:02,860
able to reuse all of this code.
118

118

00:06:02,860  -->  00:06:05,430
Otherwise we would have to basically write this here
119

119

00:06:05,430  -->  00:06:08,140
three times if you wanted to have this scenario
120

120

00:06:08,140  -->  00:06:10,570
with three people and three different jobs.
121

121

00:06:10,570  -->  00:06:12,843
And like this we simply paste to
122

122

00:06:12,843  -->  00:06:15,240
the function the things that change, basically.
123

123

00:06:15,240  -->  00:06:17,350
So, what's different here is the job
124

124

00:06:17,350  -->  00:06:19,250
and the name for each of these cases,
125

125

00:06:19,250  -->  00:06:21,050
and so that's what we paste into the function,
126

126

00:06:21,050  -->  00:06:23,520
both the job and the name, and then based on
127

127

00:06:23,520  -->  00:06:26,120
that the function does something, which in this case
128

128

00:06:26,120  -->  00:06:28,540
produces a string and then returns it.
129

129

00:06:28,540  -->  00:06:31,240
So, again, we can always see a function
130

130

00:06:31,240  -->  00:06:33,230
like a machine that receives something,
131

131

00:06:33,230  -->  00:06:34,720
then does something with the data,
132

132

00:06:34,720  -->  00:06:36,800
and gives back something different.
133

133

00:06:36,800  -->  00:06:40,360
Okay, so this is how we write a function expression.
134

134

00:06:40,360  -->  00:06:42,290
Now, statements and expressions,
135

135

00:06:42,290  -->  00:06:44,230
they do not only apply to functions,
136

136

00:06:44,230  -->  00:06:47,320
but they are a global concept in Java Script, actually.
137

137

00:06:47,320  -->  00:06:49,260
So, before moving on let's talk a bit about
138

138

00:06:49,260  -->  00:06:52,170
the difference between statements and expressions.
139

139

00:06:52,170  -->  00:06:54,820
So, Java Script expressions are pieces of code
140

140

00:06:54,820  -->  00:06:57,650
that always produce a value, and it doesn't matter
141

141

00:06:57,650  -->  00:07:00,170
how long they are as long as the code results
142

142

00:07:00,170  -->  00:07:03,470
in a single value, and then it is an expression.
143

143

00:07:03,470  -->  00:07:06,090
So, let's take a look at that in the console here.
144

144

00:07:06,090  -->  00:07:10,830
And so, for example, if you simply write, "2+3,"
145

145

00:07:10,830  -->  00:07:13,070
well, then you see that this produces
146

146

00:07:13,070  -->  00:07:15,000
a result, so a 5 in this case.
147

147

00:07:15,000  -->  00:07:17,114
And so, what we just wrote here
148

148

00:07:17,114  -->  00:07:18,940
in a Java Script expression, okay?
149

149

00:07:18,940  -->  00:07:22,780
And the same is when we, for example, call this function.
150

150

00:07:22,780  -->  00:07:24,839
So, let's call this function right here
151

151

00:07:24,839  -->  00:07:26,350
in the console, and we actually have access
152

152

00:07:26,350  -->  00:07:28,830
to these functions here right in the console.
153

153

00:07:28,830  -->  00:07:31,247
Okay, so that's something that we didn't do
154

154

00:07:31,247  -->  00:07:33,370
up until this point basically using the variables
155

155

00:07:33,370  -->  00:07:35,680
and function that we define our inner code right
156

156

00:07:35,680  -->  00:07:37,430
in our console, but we can do that.
157

157

00:07:38,354  -->  00:07:40,370
Okay, and so when we now call this function here
158

158

00:07:40,370  -->  00:07:43,493
then you see that of course it returns a value,
159

159

00:07:44,422  -->  00:07:46,500
and so again, this function call here is an expression.
160

160

00:07:46,500  -->  00:07:47,820
And really, anything that we do,
161

161

00:07:47,820  -->  00:07:51,220
again, that produces a result is an expression.
162

162

00:07:51,220  -->  00:07:55,120
So, for example, "typeof 23," and it gives
163

163

00:07:55,120  -->  00:07:57,819
us back this result of "number,"
164

164

00:07:57,819  -->  00:07:59,060
and so again, this is an expression.
165

165

00:07:59,060  -->  00:08:01,270
All right, so what this means is that
166

166

00:08:01,270  -->  00:08:03,360
whenever Java Script expects a value
167

167

00:08:03,360  -->  00:08:05,260
we always have to write an expression.
168

168

00:08:06,197  -->  00:08:07,890
Okay, and the importance of this whole concept
169

169

00:08:07,890  -->  00:08:10,390
might be a bit hard to grasp at this point for you,
170

170

00:08:10,390  -->  00:08:12,740
okay, but it's really important to learn
171

171

00:08:12,740  -->  00:08:15,680
this stuff for the future, all right?
172

172

00:08:15,680  -->  00:08:18,420
So, for example, here in this FL statement...
173

173

00:08:19,640  -->  00:08:22,490
For example, here Java Script of course expects
174

174

00:08:22,490  -->  00:08:24,920
a value here, and so this here needs to be
175

175

00:08:24,920  -->  00:08:27,230
an expression, and of course it is because
176

176

00:08:27,230  -->  00:08:28,990
this operator here will of course
177

177

00:08:28,990  -->  00:08:31,210
return true or false, and so that is a result
178

178

00:08:31,210  -->  00:08:33,060
and so, therefore it's an expression.
179

179

00:08:35,561  -->  00:08:37,480
Okay, now anyway, about statements,
180

180

00:08:37,480  -->  00:08:39,340
they do just perform actions.
181

181

00:08:39,340  -->  00:08:41,360
So, they do things but they do not produce
182

182

00:08:41,360  -->  00:08:45,510
immediate results, so these are things like FL statements,
183

183

00:08:45,510  -->  00:08:47,620
a why loop that we're gonna talk about later,
184

184

00:08:47,620  -->  00:08:49,490
or even a function declaration.
185

185

00:08:49,490  -->  00:08:51,730
They don't produce any immediate value,
186

186

00:08:51,730  -->  00:08:53,720
and so they are called statements.
187

187

00:08:53,720  -->  00:08:56,160
So, let's again take a look at that here in the console.
188

188

00:08:56,160  -->  00:08:58,830
I'm gonna write a very simple FL statement here.
189

189

00:08:58,830  -->  00:09:01,900
So, let's say "if true," and so this
190

190

00:09:01,900  -->  00:09:03,993
if block here will of course be entered.
191

191

00:09:05,220  -->  00:09:07,740
So, let's write console.log here of
192

192

00:09:07,740  -->  00:09:10,260
just some numbers, some random stuff.
193

193

00:09:10,260  -->  00:09:11,870
So, it doesn't really matter here,
194

194

00:09:11,870  -->  00:09:14,824
and so let's hit return, and you see now here
195

195

00:09:14,824  -->  00:09:16,874
that what this returns here is undefined.
196

196

00:09:18,060  -->  00:09:19,693
Okay, so it doesn't really return anything,
197

197

00:09:19,693  -->  00:09:22,340
but this 23 here simply comes from this console.log here,
198

198

00:09:22,340  -->  00:09:25,760
but the statement itself, it does not return anything.
199

199

00:09:25,760  -->  00:09:28,090
So, it's just really this statement
200

200

00:09:28,090  -->  00:09:30,980
that doesn't produce a result, and so that's the difference
201

201

00:09:30,980  -->  00:09:34,130
between expressions and statement, all right?
202

202

00:09:34,130  -->  00:09:36,050
So, coming back to functions here,
203

203

00:09:36,050  -->  00:09:38,300
we learned that function expressions produce
204

204

00:09:38,300  -->  00:09:41,660
an immediate result, while function declarations do not.
205

205

00:09:41,660  -->  00:09:43,740
And this will actually be very important
206

206

00:09:43,740  -->  00:09:46,293
for certain situations that you're gonna
207

207

00:09:46,293  -->  00:09:47,410
learn about later in the course.
208

208

00:09:47,410  -->  00:09:49,410
So, in these two lectures we covered the very,
209

209

00:09:49,410  -->  00:09:51,530
very basics of functions, but of course
210

210

00:09:51,530  -->  00:09:54,240
there's a whole lot more to learn about functions.
211

211

00:09:54,240  -->  00:09:56,670
But again, I will leave that for a bit later
212

212

00:09:56,670  -->  00:09:58,880
in the course, so that we're now ready to move on
213

213

00:09:58,880  -->  00:10:02,623
to another huge and exciting topic, that is erase.
