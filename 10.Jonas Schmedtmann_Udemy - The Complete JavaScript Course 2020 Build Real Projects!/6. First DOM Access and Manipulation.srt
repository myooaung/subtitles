1
1

00:00:01,162  -->  00:00:01,995
<v Instructor>Now it's time</v>
2

2

00:00:01,995  -->  00:00:04,593
to finally start coding up our game
3

3

00:00:04,593  -->  00:00:06,159
and put into practice
4

4

00:00:06,159  -->  00:00:09,806
what we learned so far about the DOM.
5

5

00:00:09,806  -->  00:00:11,634
But, one more thing before that.
6

6

00:00:11,634  -->  00:00:15,160
From now on, in all the coding lectures of a project
7

7

00:00:15,160  -->  00:00:17,179
where we learn multiple new things
8

8

00:00:17,179  -->  00:00:19,943
and concepts in one single lecture,
9

9

00:00:19,943  -->  00:00:22,668
I will give you a quick summary like this one,
10

10

00:00:22,668  -->  00:00:26,600
so that you can later reference what we did in each lecture,
11

11

00:00:26,600  -->  00:00:28,300
and this will be very useful
12

12

00:00:28,300  -->  00:00:30,352
in case that you need to ever come back
13

13

00:00:30,352  -->  00:00:32,278
to these lectures later.
14

14

00:00:32,278  -->  00:00:33,871
And that being said,
15

15

00:00:33,871  -->  00:00:35,833
in this lecture we are going to learn
16

16

00:00:35,833  -->  00:00:39,057
how to create our fundamental game variables,
17

17

00:00:39,057  -->  00:00:41,375
how to generate a random number,
18

18

00:00:41,375  -->  00:00:43,604
how to manipulate the DOM,
19

19

00:00:43,604  -->  00:00:46,021
and how to read from the DOM.
20

20

00:00:47,024  -->  00:00:50,832
So here we are back in our JavaScript file.
21

21

00:00:50,832  -->  00:00:53,607
Let's create some empty space here.
22

22

00:00:53,607  -->  00:00:57,315
Okay, so one thing that I didn't mention yet so far
23

23

00:00:57,315  -->  00:01:00,582
is that this game is actually called The Pig Game.
24

24

00:01:00,582  -->  00:01:02,613
So if you try to Google this,
25

25

00:01:02,613  -->  00:01:05,158
you will then also find these exact same rules
26

26

00:01:05,158  -->  00:01:08,751
and also some variations that we'll maybe talk about later.
27

27

00:01:08,751  -->  00:01:09,804
Okay, well let's start.
28

28

00:01:09,804  -->  00:01:11,766
So we need to first create a couple of variables
29

29

00:01:11,766  -->  00:01:14,193
to keep track of the most important things
30

30

00:01:14,193  -->  00:01:16,046
happening in our game.
31

31

00:01:16,046  -->  00:01:18,285
And probably the most important thing of all
32

32

00:01:18,285  -->  00:01:20,938
is the score for each player.
33

33

00:01:20,938  -->  00:01:23,288
Now, I could go ahead and create a variable
34

34

00:01:23,288  -->  00:01:25,772
for each player like this,
35

35

00:01:25,772  -->  00:01:27,439
score1, set it to 0.
36

36

00:01:28,378  -->  00:01:31,295
and score2 and set it to 0 as well.
37

37

00:01:33,353  -->  00:01:35,851
But, we want to keep things clean,
38

38

00:01:35,851  -->  00:01:38,655
and so I only want one variable.
39

39

00:01:38,655  -->  00:01:40,140
So how are we going to do this?
40

40

00:01:40,140  -->  00:01:42,522
We are going to use an array.
41

41

00:01:42,522  -->  00:01:45,939
So I'm just going to call this one scores
42

42

00:01:47,048  -->  00:01:51,914
and set both scores to 0 in the beginning, right?
43

43

00:01:51,914  -->  00:01:55,478
Okay, and I also want a variable for the round score.
44

44

00:01:55,478  -->  00:01:57,827
And this only needs to be one value
45

45

00:01:57,827  -->  00:01:59,998
because we only have one score at a time,
46

46

00:01:59,998  -->  00:02:02,329
one round score at a time, right?
47

47

00:02:02,329  -->  00:02:03,496
So, roundScore
48

48

00:02:05,678  -->  00:02:07,199
equals 0.
49

49

00:02:07,199  -->  00:02:09,965
Now let's keep our code a little bit more organized,
50

50

00:02:09,965  -->  00:02:12,449
so instead of doing it this way,
51

51

00:02:12,449  -->  00:02:16,462
I'm actually going to declare all of these variable up here
52

52

00:02:16,462  -->  00:02:17,295
like this,
53

53

00:02:18,360  -->  00:02:20,777
so our scores and roundScores
54

54

00:02:24,804  -->  00:02:27,637
and then remove the bar from here.
55

55

00:02:28,918  -->  00:02:30,350
Okay, just like this.
56

56

00:02:30,350  -->  00:02:32,551
So these are the variables for the scores.
57

57

00:02:32,551  -->  00:02:34,684
What I also need is a variable
58

58

00:02:34,684  -->  00:02:35,963
which will tell me which
59

59

00:02:35,963  -->  00:02:38,717
is the current active player, right?
60

60

00:02:38,717  -->  00:02:41,372
And this variable is to keep track of the player
61

61

00:02:41,372  -->  00:02:43,009
that is currently playing.
62

62

00:02:43,009  -->  00:02:45,926
So let me declare it here actually.
63

63

00:02:47,674  -->  00:02:49,007
So activePlayer,
64

64

00:02:51,382  -->  00:02:52,382
activePlayer
65

65

00:02:54,732  -->  00:02:56,853
and then I will set it to 0.
66

66

00:02:56,853  -->  00:02:58,872
So 0 will be the first player
67

67

00:02:58,872  -->  00:03:01,814
and one will be the second player.
68

68

00:03:01,814  -->  00:03:03,393
And I'm doing it this way
69

69

00:03:03,393  -->  00:03:05,477
because later we will use this variable
70

70

00:03:05,477  -->  00:03:08,357
to read the scores out of this array
71

71

00:03:08,357  -->  00:03:10,322
and since this array is zero based,
72

72

00:03:10,322  -->  00:03:13,540
we need the zero for the first element here
73

73

00:03:13,540  -->  00:03:17,454
and then the one to read or write the second element.
74

74

00:03:17,454  -->  00:03:20,205
Okay, so these are the basic variables that we need for now.
75

75

00:03:20,205  -->  00:03:22,176
We will probably add some later,
76

76

00:03:22,176  -->  00:03:23,715
but it's enough for now.
77

77

00:03:23,715  -->  00:03:26,179
So let's now think about the dice.
78

78

00:03:26,179  -->  00:03:27,920
So in order to create the dice,
79

79

00:03:27,920  -->  00:03:30,667
we need to calculate a random number, right?
80

80

00:03:30,667  -->  00:03:32,906
So let's call it dice.
81

81

00:03:32,906  -->  00:03:37,856
And of course, as you know I need to declare it here.
82

82

00:03:37,856  -->  00:03:41,777
So, dice, and now I'm going to use the math object.
83

83

00:03:41,777  -->  00:03:45,434
And the math object is a JavaScript built-in object
84

84

00:03:45,434  -->  00:03:47,861
that has a lot of properties and methods
85

85

00:03:47,861  -->  00:03:50,718
for mathematical constants and functions
86

86

00:03:50,718  -->  00:03:52,967
that can be very useful for us
87

87

00:03:52,967  -->  00:03:54,878
to do this kind of calculations.
88

88

00:03:54,878  -->  00:03:57,886
And the random one is one of them.
89

89

00:03:57,886  -->  00:04:00,751
But let me actually show it to you in the console.
90

90

00:04:00,751  -->  00:04:03,567
So I'm just going to set this to some value,
91

91

00:04:03,567  -->  00:04:05,370
and then come back later here.
92

92

00:04:05,370  -->  00:04:09,224
So to open the console, open Google Chrome
93

93

00:04:09,224  -->  00:04:12,620
and actually I will simply open my file here,
94

94

00:04:12,620  -->  00:04:14,537
so the index.html file,
95

95

00:04:15,372  -->  00:04:19,573
which will then open our app and our user interface.
96

96

00:04:19,573  -->  00:04:20,647
Okay, so here we have it.
97

97

00:04:20,647  -->  00:04:21,729
So this is the default,
98

98

00:04:21,729  -->  00:04:23,982
so when we open this we actually already have some
99

99

00:04:23,982  -->  00:04:25,982
pre-filled numbers here,
100

100

00:04:26,943  -->  00:04:29,526
as we can see in our HTML here.
101

101

00:04:31,075  -->  00:04:34,810
So you see here, 43 is the score for player 0,
102

102

00:04:34,810  -->  00:04:37,560
and 72 is the score for player 1.
103

103

00:04:39,192  -->  00:04:41,731
Okay, but back to the console.
104

104

00:04:41,731  -->  00:04:43,106
I'll hit Inspect
105

105

00:04:43,106  -->  00:04:45,263
and then head over to the Console.
106

106

00:04:45,263  -->  00:04:48,966
Now let's start by using the Math object.
107

107

00:04:48,966  -->  00:04:53,133
So math. now there's a very handy method called random,
108

108

00:04:55,480  -->  00:04:57,881
which basically gives me a random number
109

109

00:04:57,881  -->  00:04:59,914
between zero and one.
110

110

00:04:59,914  -->  00:05:02,920
So if I run this again, it will give me another number,
111

111

00:05:02,920  -->  00:05:05,225
and another, and another, and another.
112

112

00:05:05,225  -->  00:05:07,402
So these are all different, right?
113

113

00:05:07,402  -->  00:05:10,383
Now, I don't want a number between zero and one, right?
114

114

00:05:10,383  -->  00:05:13,119
I want a number between one and six.
115

115

00:05:13,119  -->  00:05:15,355
So the first thing I'm going to do
116

116

00:05:15,355  -->  00:05:18,886
is to multiply this value by six.
117

117

00:05:18,886  -->  00:05:21,136
So let's clear the console.
118

118

00:05:22,247  -->  00:05:24,775
So if I multiply this by six,
119

119

00:05:24,775  -->  00:05:29,701
then we will have a number between zero and five, right?
120

120

00:05:29,701  -->  00:05:31,201
So 0.9, 4.6, okay,
121

121

00:05:32,726  -->  00:05:34,192
but you see the problem here
122

122

00:05:34,192  -->  00:05:35,798
because these are decimals,
123

123

00:05:35,798  -->  00:05:37,617
but we don't want decimals,
124

124

00:05:37,617  -->  00:05:40,310
what we want is an integer, right?
125

125

00:05:40,310  -->  00:05:43,999
So there's another very handy function, a math object,
126

126

00:05:43,999  -->  00:05:46,407
which is called floor,
127

127

00:05:46,407  -->  00:05:47,667
and the floor method
128

128

00:05:47,667  -->  00:05:50,908
simply removes the decimal part of a number.
129

129

00:05:50,908  -->  00:05:51,819
So let's test it.
130

130

00:05:51,819  -->  00:05:54,652
For example, 4.6 will become four.
131

131

00:05:55,635  -->  00:05:59,457
Okay, so we should do now is to use this
132

132

00:05:59,457  -->  00:06:02,780
with the math random times six, right?
133

133

00:06:02,780  -->  00:06:05,280
So I'm going to use math.floor
134

134

00:06:08,463  -->  00:06:10,546
of math.random times six,
135

135

00:06:14,071  -->  00:06:15,892
which is what we had before.
136

136

00:06:15,892  -->  00:06:17,899
And now, this will give me a random number
137

137

00:06:17,899  -->  00:06:20,184
between zero and five.
138

138

00:06:20,184  -->  00:06:22,650
So zero, three, one, two,
139

139

00:06:22,650  -->  00:06:24,983
two, one, four, four, three.
140

140

00:06:26,217  -->  00:06:27,713
Okay, so as I said,
141

141

00:06:27,713  -->  00:06:30,408
this will be a number between zero and five,
142

142

00:06:30,408  -->  00:06:33,318
but we want from one to six, right?
143

143

00:06:33,318  -->  00:06:35,798
So all we need to do now to make this perfect
144

144

00:06:35,798  -->  00:06:37,548
is to simply add one.
145

145

00:06:39,559  -->  00:06:42,936
Okay, so now this will give me a nice number
146

146

00:06:42,936  -->  00:06:45,077
between one and six.
147

147

00:06:45,077  -->  00:06:46,680
So let's now copy this,
148

148

00:06:46,680  -->  00:06:48,533
and I did this in the console
149

149

00:06:48,533  -->  00:06:50,806
so I could show you the facts
150

150

00:06:50,806  -->  00:06:52,983
of the random number generator.
151

151

00:06:52,983  -->  00:06:55,903
But now we want this in our code.
152

152

00:06:55,903  -->  00:06:59,442
So I'm coming back here and paste it here.
153

153

00:06:59,442  -->  00:07:03,203
So now our dice variable takes this random number
154

154

00:07:03,203  -->  00:07:05,144
each time that it's defined.
155

155

00:07:05,144  -->  00:07:07,977
So that's now console.log as dice.
156

156

00:07:12,845  -->  00:07:15,520
You can close up the console.
157

157

00:07:15,520  -->  00:07:18,020
Actually, you can't of course.
158

158

00:07:19,950  -->  00:07:22,051
All right, so six
159

159

00:07:22,051  -->  00:07:23,839
and if we now reload this,
160

160

00:07:23,839  -->  00:07:27,172
then this time we have five, three, six.
161

161

00:07:29,277  -->  00:07:31,720
So as you see, this is a random number now.
162

162

00:07:31,720  -->  00:07:34,381
Okay, so this was the first thing.
163

163

00:07:34,381  -->  00:07:38,548
Now the next thing is to actually do some DOM manipulation.
164

164

00:07:39,399  -->  00:07:40,639
So let's do that.
165

165

00:07:40,639  -->  00:07:43,228
So as I said in a theoretical lecture,
166

166

00:07:43,228  -->  00:07:46,702
the object that will give us access to the DOM
167

167

00:07:46,702  -->  00:07:49,094
is the document object, right?
168

168

00:07:49,094  -->  00:07:52,164
So let's use that, document.
169

169

00:07:52,164  -->  00:07:54,108
Now there are a couple of methods
170

170

00:07:54,108  -->  00:07:57,270
that we can use to select elements from our webpage,
171

171

00:07:57,270  -->  00:07:58,629
and the most useful one
172

172

00:07:58,629  -->  00:08:00,608
and the one that I use all the time
173

173

00:08:00,608  -->  00:08:02,025
is querySelector.
174

174

00:08:03,365  -->  00:08:07,532
So again, I need to use the dot and then querySelector.
175

175

00:08:09,424  -->  00:08:12,576
All right, and how does querySelector work?
176

176

00:08:12,576  -->  00:08:15,126
Well querySelector is real easy to use
177

177

00:08:15,126  -->  00:08:17,456
because it lets us select stuff
178

178

00:08:17,456  -->  00:08:20,814
exactly the way we do it in CSS.
179

179

00:08:20,814  -->  00:08:22,765
The only difference is that it only selects
180

180

00:08:22,765  -->  00:08:24,817
the first element that it finds,
181

181

00:08:24,817  -->  00:08:26,278
but there's a solution for that
182

182

00:08:26,278  -->  00:08:27,767
that I will show you later.
183

183

00:08:27,767  -->  00:08:29,470
But for now, what you need to know
184

184

00:08:29,470  -->  00:08:33,915
is that it's really easy to select things with querySelector
185

185

00:08:33,915  -->  00:08:37,078
because if we know how to select stuff in CSS,
186

186

00:08:37,078  -->  00:08:39,533
then we can do it with querySelector.
187

187

00:08:39,533  -->  00:08:42,422
So let's now select something from our page.
188

188

00:08:42,422  -->  00:08:46,436
And what I want to do is to select this text here
189

189

00:08:46,436  -->  00:08:50,258
and put the value of our dice right here.
190

190

00:08:50,258  -->  00:08:53,083
So that we don't have to open up the console anymore
191

191

00:08:53,083  -->  00:08:54,662
to see our value,
192

192

00:08:54,662  -->  00:08:57,935
but instead we can print it right here.
193

193

00:08:57,935  -->  00:08:59,768
So in our HTML, we see
194

194

00:09:02,991  -->  00:09:05,866
that this 43 is right here.
195

195

00:09:05,866  -->  00:09:10,819
So in order to select this, we need to use this id score 0,
196

196

00:09:10,819  -->  00:09:13,726
and if we wanted to do the same thing for the other player,
197

197

00:09:13,726  -->  00:09:17,946
which is player 1, then we'd have to use a score 1.
198

198

00:09:17,946  -->  00:09:21,029
But now, all we need is score 0 here.
199

199

00:09:22,918  -->  00:09:27,444
So we need a string here and then as you know from CSS,
200

200

00:09:27,444  -->  00:09:31,121
in order to select ids, we use the hash symbol
201

201

00:09:31,121  -->  00:09:33,121
and then simply score 0,
202

202

00:09:34,545  -->  00:09:35,695
and that's it.
203

203

00:09:35,695  -->  00:09:38,908
So now we have selected the element.
204

204

00:09:38,908  -->  00:09:42,159
Now if want to change the text in this element,
205

205

00:09:42,159  -->  00:09:43,742
then we need another method,
206

206

00:09:43,742  -->  00:09:46,210
which is the text content method.
207

207

00:09:46,210  -->  00:09:49,627
So textContent, and now we can simply say
208

208

00:09:50,620  -->  00:09:53,037
that this should be the dice,
209

209

00:09:54,515  -->  00:09:57,390
which is the variable that we define up here.
210

210

00:09:57,390  -->  00:10:02,051
So I can now remove this, and check out our webpage.
211

211

00:10:02,051  -->  00:10:04,410
So let's now really close the console
212

212

00:10:04,410  -->  00:10:05,743
and reload this.
213

213

00:10:07,064  -->  00:10:09,611
And now actually the dice appeared here,
214

214

00:10:09,611  -->  00:10:11,659
not where I wanted it, not down here,
215

215

00:10:11,659  -->  00:10:13,109
so let's reload this.
216

216

00:10:13,109  -->  00:10:14,532
Okay, so the value appears here,
217

217

00:10:14,532  -->  00:10:15,547
but it's no problem, right?
218

218

00:10:15,547  -->  00:10:16,630
So, six, six,
219

219

00:10:18,621  -->  00:10:20,871
and six again, and now two,
220

220

00:10:22,502  -->  00:10:23,813
and five, all right.
221

221

00:10:23,813  -->  00:10:25,691
So this is actually working,
222

222

00:10:25,691  -->  00:10:28,165
not the way we intend it to,
223

223

00:10:28,165  -->  00:10:29,500
but it's still working
224

224

00:10:29,500  -->  00:10:33,572
because we actually had to select current,
225

225

00:10:33,572  -->  00:10:35,015
current 0, not score 0,
226

226

00:10:35,015  -->  00:10:39,182
because score is the global score and not the round score.
227

227

00:10:41,994  -->  00:10:45,161
So let's put it in the current, great.
228

228

00:10:47,693  -->  00:10:48,802
Now right in the beginning,
229

229

00:10:48,802  -->  00:10:52,534
we defined a variable called activePlayer, right?
230

230

00:10:52,534  -->  00:10:54,995
So this was to keep track of the player
231

231

00:10:54,995  -->  00:10:57,168
that is currently playing,
232

232

00:10:57,168  -->  00:10:59,329
and we're going to use this variable
233

233

00:10:59,329  -->  00:11:01,632
to read and store values here,
234

234

00:11:01,632  -->  00:11:05,465
but also this number here is used in our HTML.
235

235

00:11:07,903  -->  00:11:12,070
For example here, so player 0 for score 0 and current 0.
236

236

00:11:13,126  -->  00:11:15,937
And down here we have 1, 1, 1.
237

237

00:11:15,937  -->  00:11:18,974
So we can also use the current player variable
238

238

00:11:18,974  -->  00:11:21,537
to select stuff, right?
239

239

00:11:21,537  -->  00:11:25,533
All we need to do is to build our string here.
240

240

00:11:25,533  -->  00:11:27,875
So I can do current
241

241

00:11:27,875  -->  00:11:30,708
and then plus activePlayer, right?
242

242

00:11:34,133  -->  00:11:37,004
Because of type coercion, JavaScript will then convert
243

243

00:11:37,004  -->  00:11:40,254
all of this to current 0, if this is 0,
244

244

00:11:41,439  -->  00:11:44,796
but if it's 1, then it will be current 1,
245

245

00:11:44,796  -->  00:11:46,787
which is exactly what we had before,
246

246

00:11:46,787  -->  00:11:47,879
but now it's more dynamic
247

247

00:11:47,879  -->  00:11:50,848
because then we only have to write it once.
248

248

00:11:50,848  -->  00:11:52,711
So when we change the active player,
249

249

00:11:52,711  -->  00:11:55,909
then the score will be printed in the other layer.
250

250

00:11:55,909  -->  00:11:57,403
So let's test this.
251

251

00:11:57,403  -->  00:11:59,974
So let's set this to 1,
252

252

00:11:59,974  -->  00:12:03,018
and let's see how this works.
253

253

00:12:03,018  -->  00:12:05,435
Okay, so now we have it here.
254

254

00:12:06,951  -->  00:12:08,992
Let's try this again, roll the dice again.
255

255

00:12:08,992  -->  00:12:11,659
So six, one, and two, and so on.
256

256

00:12:13,167  -->  00:12:14,084
Okay, cool.
257

257

00:12:15,848  -->  00:12:19,168
So what we did was to simply change the content
258

258

00:12:19,168  -->  00:12:21,296
of an HTML element here.
259

259

00:12:21,296  -->  00:12:23,719
Now to change the content of the selection,
260

260

00:12:23,719  -->  00:12:25,046
there are actually two ways.
261

261

00:12:25,046  -->  00:12:26,698
So we used the first one here,
262

262

00:12:26,698  -->  00:12:28,452
which is textContent,
263

263

00:12:28,452  -->  00:12:30,565
but there are two ways.
264

264

00:12:30,565  -->  00:12:32,551
And the textContent that we have here
265

265

00:12:32,551  -->  00:12:35,551
can only set plain text, so no HTML.
266

266

00:12:37,506  -->  00:12:39,553
But if we want to put some HTML
267

267

00:12:39,553  -->  00:12:41,555
also in the selected element,
268

268

00:12:41,555  -->  00:12:44,056
then we have to use the inner HTML method
269

269

00:12:44,056  -->  00:12:46,223
instead of the text content.
270

270

00:12:46,223  -->  00:12:49,769
So let's see how that could work.
271

271

00:12:49,769  -->  00:12:52,439
Let me comment this out,
272

272

00:12:52,439  -->  00:12:53,272
and write it again.
273

273

00:12:53,272  -->  00:12:55,439
So, document.querySelector
274

274

00:12:58,927  -->  00:13:02,409
and I want again the current one.
275

275

00:13:02,409  -->  00:13:05,516
What I'm going to do is like this,
276

276

00:13:05,516  -->  00:13:09,183
activePlayer and now instead of textContent,
277

277

00:13:10,255  -->  00:13:12,505
I'm going to use innerHTML.
278

278

00:13:15,453  -->  00:13:17,520
And now I will write some HTML,
279

279

00:13:17,520  -->  00:13:20,450
which of course needs to be a string once again
280

280

00:13:20,450  -->  00:13:22,507
because if I would just write it like this
281

281

00:13:22,507  -->  00:13:24,010
without being a string,
282

282

00:13:24,010  -->  00:13:26,479
then the JavaScript parser would think
283

283

00:13:26,479  -->  00:13:28,566
that it's just some JavaScript code,
284

284

00:13:28,566  -->  00:13:31,548
which of course, if we have something like this,
285

285

00:13:31,548  -->  00:13:33,580
then this is of course not JavaScript
286

286

00:13:33,580  -->  00:13:34,687
and we would have an error.
287

287

00:13:34,687  -->  00:13:38,772
So, every time we want to write some HTML here in our code,
288

288

00:13:38,772  -->  00:13:40,772
it needs to be a string.
289

289

00:13:42,031  -->  00:13:46,795
So let's now use the em element here around the dice value,
290

290

00:13:46,795  -->  00:13:48,449
which will then emphasize it.
291

291

00:13:48,449  -->  00:13:52,327
So basically, it will be an italic text.
292

292

00:13:52,327  -->  00:13:55,327
So dice and then close this element.
293

293

00:14:01,397  -->  00:14:03,897
So let's see what happens now.
294

294

00:14:05,650  -->  00:14:08,084
All right, so now we have this italic text here.
295

295

00:14:08,084  -->  00:14:10,662
So it's slightly to the side, right?
296

296

00:14:10,662  -->  00:14:12,162
It is number four.
297

297

00:14:13,013  -->  00:14:15,346
For six and so on and so on.
298

298

00:14:16,610  -->  00:14:19,277
Okay, so what would happen if we would simply do this
299

299

00:14:19,277  -->  00:14:23,621
with the textContent method that we used before?
300

300

00:14:23,621  -->  00:14:27,288
textContent, so let's reload this once again
301

301

00:14:29,418  -->  00:14:31,657
and then we would have all this text here
302

302

00:14:31,657  -->  00:14:33,979
because once again with this method,
303

303

00:14:33,979  -->  00:14:36,936
we can only set text and not HTML.
304

304

00:14:36,936  -->  00:14:40,151
So then it would interpret all of this HTML code
305

305

00:14:40,151  -->  00:14:41,987
as plain text.
306

306

00:14:41,987  -->  00:14:43,491
So this is not what we want.
307

307

00:14:43,491  -->  00:14:45,658
So this was just to illustrate you,
308

308

00:14:45,658  -->  00:14:47,741
set it back to innerHTML,
309

309

00:14:49,148  -->  00:14:51,870
and I will comment it here
310

310

00:14:51,870  -->  00:14:54,630
because what we want really is this.
311

311

00:14:54,630  -->  00:14:58,427
Okay, so we just did our very first DOM manipulation.
312

312

00:14:58,427  -->  00:15:01,397
Which means that we used this querySelector method here
313

313

00:15:01,397  -->  00:15:03,779
to manipulate, to change,
314

314

00:15:03,779  -->  00:15:07,495
values and elements of our webpage.
315

315

00:15:07,495  -->  00:15:10,135
Now we can also use this method
316

316

00:15:10,135  -->  00:15:14,094
to actually only read elements from a webpage
317

317

00:15:14,094  -->  00:15:16,762
and then store them in some variable for example.
318

318

00:15:16,762  -->  00:15:18,956
So let's now do that.
319

319

00:15:18,956  -->  00:15:20,843
I will create some space.
320

320

00:15:20,843  -->  00:15:23,281
So let's simply create a random variable,
321

321

00:15:23,281  -->  00:15:25,562
and this is just to show you
322

322

00:15:25,562  -->  00:15:29,479
var x and once again, document.querySelector
323

323

00:15:33,605  -->  00:15:35,871
and let's now use something else.
324

324

00:15:35,871  -->  00:15:39,410
For example, the global score here, right,
325

325

00:15:39,410  -->  00:15:40,410
which is 43.
326

326

00:15:42,210  -->  00:15:46,222
So again, this is an id, so I use the id selector
327

327

00:15:46,222  -->  00:15:48,433
that we already know from CSS
328

328

00:15:48,433  -->  00:15:49,850
and then score 1,
329

329

00:15:51,496  -->  00:15:54,207
and this time I'm just going to write it out like this,
330

330

00:15:54,207  -->  00:15:55,988
or actually score 0,
331

331

00:15:55,988  -->  00:15:57,763
because this is just to show you
332

332

00:15:57,763  -->  00:16:01,221
how we could use a querySelector the other way.
333

333

00:16:01,221  -->  00:16:03,721
Okay, and now the textContent.
334

334

00:16:05,948  -->  00:16:08,563
So this time we don't set it to equal anything
335

335

00:16:08,563  -->  00:16:12,208
because, again, this is just to read the value
336

336

00:16:12,208  -->  00:16:16,860
or the content of the element with this id, score 0
337

337

00:16:16,860  -->  00:16:20,181
and then store it here into variable x.
338

338

00:16:20,181  -->  00:16:22,764
So let's quickly console.log x,
339

339

00:16:25,229  -->  00:16:29,396
so that we can see that it also works this way around.
340

340

00:16:30,367  -->  00:16:34,302
So I am going to hit Command + Alt + I
341

341

00:16:34,302  -->  00:16:36,330
to bring up the console
342

342

00:16:36,330  -->  00:16:38,699
and let's now reload the page,
343

343

00:16:38,699  -->  00:16:39,532
and here we are.
344

344

00:16:39,532  -->  00:16:43,473
So 43, which is the value that we read from here,
345

345

00:16:43,473  -->  00:16:44,856
stored in our x variable
346

346

00:16:44,856  -->  00:16:47,901
and then printed right here to the console.
347

347

00:16:47,901  -->  00:16:50,044
So this works not only for setting,
348

348

00:16:50,044  -->  00:16:51,922
but also for reading.
349

349

00:16:51,922  -->  00:16:54,651
And in this case, when we do it like this,
350

350

00:16:54,651  -->  00:16:56,373
we say that it's a setter
351

351

00:16:56,373  -->  00:16:57,688
because we set a value.
352

352

00:16:57,688  -->  00:17:00,518
And in this case, we say it's a getter
353

353

00:17:00,518  -->  00:17:02,435
because we get a value.
354

354

00:17:03,497  -->  00:17:05,653
All right, now there's only one more thing
355

355

00:17:05,653  -->  00:17:07,982
that I want to show you in this lecture,
356

356

00:17:07,982  -->  00:17:11,002
which is that we can also use the querySelector
357

357

00:17:11,002  -->  00:17:14,306
to change the CSS of some element.
358

358

00:17:14,306  -->  00:17:17,862
So let's now use the document object once again,
359

359

00:17:17,862  -->  00:17:21,529
querySelector, which will return a selection
360

360

00:17:23,714  -->  00:17:26,182
and I'm going to go back to the webpage.
361

361

00:17:26,182  -->  00:17:27,939
And what we want to do now
362

362

00:17:27,939  -->  00:17:31,316
is to hide this dice here right in the beginning,
363

363

00:17:31,316  -->  00:17:33,268
so when we open up the game,
364

364

00:17:33,268  -->  00:17:34,674
we don't want to see this dice
365

365

00:17:34,674  -->  00:17:36,782
with this random number here, right?
366

366

00:17:36,782  -->  00:17:40,699
So in CSS, we do that by setting the display property
367

367

00:17:40,699  -->  00:17:41,949
to none, right?
368

368

00:17:43,540  -->  00:17:44,957
So let's do that.
369

369

00:17:46,083  -->  00:17:48,142
So in our HTML,
370

370

00:17:48,142  -->  00:17:50,327
where do we have the dice?
371

371

00:17:50,327  -->  00:17:51,203
And it's right here,
372

372

00:17:51,203  -->  00:17:53,433
so it's this image here
373

373

00:17:53,433  -->  00:17:55,078
with the dice class.
374

374

00:17:55,078  -->  00:17:59,001
So this time we have not an id, but a class.
375

375

00:17:59,001  -->  00:18:02,728
And to cite the class, it is the dot selector.
376

376

00:18:02,728  -->  00:18:05,228
So all we need to do is .dice.
377

377

00:18:06,115  -->  00:18:08,972
All right, so this gives us our selection,
378

378

00:18:08,972  -->  00:18:11,981
and now instead of changing or getting new content,
379

379

00:18:11,981  -->  00:18:13,941
we want to change the style.
380

380

00:18:13,941  -->  00:18:17,274
So we first need to use the style method
381

381

00:18:18,977  -->  00:18:22,402
and then the CSS property that we want to change,
382

382

00:18:22,402  -->  00:18:24,354
and it's as simple as that.
383

383

00:18:24,354  -->  00:18:27,239
So as I said, we want to change the display property
384

384

00:18:27,239  -->  00:18:29,048
and set it to none.
385

385

00:18:29,048  -->  00:18:30,631
So we write display
386

386

00:18:32,271  -->  00:18:34,271
and then set it to none.
387

387

00:18:35,585  -->  00:18:37,019
And that's really it.
388

388

00:18:37,019  -->  00:18:40,071
So if you remember what CSS looks like,
389

389

00:18:40,071  -->  00:18:42,087
let's take a look,
390

390

00:18:42,087  -->  00:18:44,299
so this here is the property
391

391

00:18:44,299  -->  00:18:46,572
and this is the value.
392

392

00:18:46,572  -->  00:18:48,578
And in JavaScript what we do is
393

393

00:18:48,578  -->  00:18:50,753
we use first the style method
394

394

00:18:50,753  -->  00:18:53,529
and then this is the CSS property
395

395

00:18:53,529  -->  00:18:55,702
and this is the CSS value
396

396

00:18:55,702  -->  00:18:58,078
that we attribute to this property.
397

397

00:18:58,078  -->  00:19:02,141
So let's see if this actually works by reloading this,
398

398

00:19:02,141  -->  00:19:03,859
and yeah, here we go.
399

399

00:19:03,859  -->  00:19:06,518
So our dice is now gone.
400

400

00:19:06,518  -->  00:19:08,561
If we now Inspect this page,
401

401

00:19:08,561  -->  00:19:10,690
let's actually do this,
402

402

00:19:10,690  -->  00:19:12,994
and go here to our dice,
403

403

00:19:12,994  -->  00:19:15,443
then you can see that the JavaScript what we did
404

404

00:19:15,443  -->  00:19:18,576
was to basically changed the inline CSS
405

405

00:19:18,576  -->  00:19:21,353
and set the display to none here.
406

406

00:19:21,353  -->  00:19:23,449
So we also can see it in our HTML,
407

407

00:19:23,449  -->  00:19:25,732
so we now have the style attribute here
408

408

00:19:25,732  -->  00:19:28,401
and the display was set to none.
409

409

00:19:28,401  -->  00:19:31,579
Okay, and that's it for this lecture.
410

410

00:19:31,579  -->  00:19:35,263
Now, the next step would be to actually display the value
411

411

00:19:35,263  -->  00:19:38,799
each time that we click our nice button here, right,
412

412

00:19:38,799  -->  00:19:41,450
because right now, nothing really happens,
413

413

00:19:41,450  -->  00:19:44,547
but what we want is to show our dice here
414

414

00:19:44,547  -->  00:19:46,867
and to show our score
415

415

00:19:46,867  -->  00:19:49,411
and right now, nothing of that happens.
416

416

00:19:49,411  -->  00:19:52,494
So let's do that in our next lecture.
