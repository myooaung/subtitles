1
1

00:00:01,292  -->  00:00:02,741
<v Jonas>Welcome back.</v>
2

2

00:00:02,741  -->  00:00:04,102
In this video you're going to learn
3

3

00:00:04,102  -->  00:00:05,776
how to mutate variables
4

4

00:00:05,776  -->  00:00:10,508
and also how and why JavaScript does type coercion.
5

5

00:00:10,508  -->  00:00:12,614
But before we talk about any of that,
6

6

00:00:12,614  -->  00:00:15,067
I want to show you something else that we also have
7

7

00:00:15,067  -->  00:00:17,335
in any programming language in the world,
8

8

00:00:17,335  -->  00:00:18,864
and that is comments.
9

9

00:00:18,864  -->  00:00:22,672
So with comments we can really comment, like piece of code
10

10

00:00:22,672  -->  00:00:25,125
and describe what they do.
11

11

00:00:25,125  -->  00:00:27,591
Okay, so let's try it out and in JavaScript
12

12

00:00:27,591  -->  00:00:29,057
there are two types of comments.
13

13

00:00:29,057  -->  00:00:31,100
There are single line comments,
14

14

00:00:31,100  -->  00:00:32,742
and we work them just like this,
15

15

00:00:32,742  -->  00:00:34,359
and also multi line comments,
16

16

00:00:34,359  -->  00:00:36,879
and I'm going to show you in a second how they work.
17

17

00:00:36,879  -->  00:00:40,226
But with single lines we simply write // like this,
18

18

00:00:40,226  -->  00:00:43,558
and then we can do any text that we want after that.
19

19

00:00:43,558  -->  00:00:45,876
So in here I'm simple going to write
20

20

00:00:45,876  -->  00:00:49,293
that these are the variable naming rules.
21

21

00:00:50,869  -->  00:00:53,098
Okay, because that's actually what I did
22

22

00:00:53,098  -->  00:00:55,176
here in these lines of code.
23

23

00:00:55,176  -->  00:00:57,757
So I showed you how we have to name our variables.
24

24

00:00:57,757  -->  00:01:00,280
And so now with this comment here I can very simply
25

25

00:01:00,280  -->  00:01:03,938
describe that this is what we did here.
26

26

00:01:03,938  -->  00:01:06,592
Okay, we can also do multi line comment
27

27

00:01:06,592  -->  00:01:11,592
and that is /* and then * and / again.
28

28

00:01:11,701  -->  00:01:13,179
And then on multiple lines,
29

29

00:01:13,179  -->  00:01:17,130
and everything we put here in between will be a comment.
30

30

00:01:17,130  -->  00:01:19,561
So one line of comments, two lines,
31

31

00:01:19,561  -->  00:01:21,624
and so on and so forth.
32

32

00:01:21,624  -->  00:01:24,827
Okay, and here I'm going to use this multi line comment
33

33

00:01:24,827  -->  00:01:26,418
to say that this lecture here
34

34

00:01:26,418  -->  00:01:29,335
was about variables and data types.
35

35

00:01:30,250  -->  00:01:35,095
So variables and data types and this is also a comment
36

36

00:01:35,095  -->  00:01:38,891
like pattern where it then adds some asterisks here
37

37

00:01:38,891  -->  00:01:43,590
just like this, basically just to separate these lectures.
38

38

00:01:43,590  -->  00:01:47,343
Okay, so variables and data types, that was the last lecture
39

39

00:01:47,343  -->  00:01:49,135
and now in this lecture we will have
40

40

00:01:49,135  -->  00:01:52,135
variable mutation and type coercion.
41

41

00:01:56,120  -->  00:01:59,281
Alright, now just in order to get rid of this code here
42

42

00:01:59,281  -->  00:02:02,030
so that it doesn't get in my way I can also comment out
43

43

00:02:02,030  -->  00:02:04,832
this entire piece of code, just like I did before.
44

44

00:02:04,832  -->  00:02:07,110
So that's another common use case of comments,
45

45

00:02:07,110  -->  00:02:09,867
is where you basically comment out some code
46

46

00:02:09,867  -->  00:02:13,065
that you don't want to get in your way for some time.
47

47

00:02:13,065  -->  00:02:14,468
Okay, and so now I commented it
48

48

00:02:14,468  -->  00:02:16,686
and now it will no longer be executed.
49

49

00:02:16,686  -->  00:02:19,058
So I can reload this now and then we don't have anything
50

50

00:02:19,058  -->  00:02:22,212
logged to our console because all of this here is gray,
51

51

00:02:22,212  -->  00:02:25,095
and so it's really commented out.
52

52

00:02:25,095  -->  00:02:29,793
Okay, anyway let's continue with our persons example here
53

53

00:02:29,793  -->  00:02:33,183
and learn all about variable mutation and type coercion.
54

54

00:02:33,183  -->  00:02:36,732
Okay, so I'm going to reuse some of these variables,
55

55

00:02:36,732  -->  00:02:38,982
so firstName is still John,
56

56

00:02:42,270  -->  00:02:46,914
and has also defined the age as being 28 again.
57

57

00:02:46,914  -->  00:02:50,780
So we have here two different data types, string and number,
58

58

00:02:50,780  -->  00:02:52,837
but let's see what happens if we want to print
59

59

00:02:52,837  -->  00:02:55,540
them together to the console.
60

60

00:02:55,540  -->  00:02:58,992
Okay, so let's give it some space here,
61

61

00:02:58,992  -->  00:03:02,441
I prefer when this text here is a bit more at the top.
62

62

00:03:02,441  -->  00:03:06,524
So console.log and so let's basically do a string
63

63

00:03:08,013  -->  00:03:10,430
which contains John space 28.
64

64

00:03:12,244  -->  00:03:15,061
Okay, so we can say firstName,
65

65

00:03:15,061  -->  00:03:16,721
then we can use the + symbol,
66

66

00:03:16,721  -->  00:03:18,126
and we're going to explain to you later
67

67

00:03:18,126  -->  00:03:19,503
that this is an operator,
68

68

00:03:19,503  -->  00:03:21,624
so for now let's just simply use this here
69

69

00:03:21,624  -->  00:03:23,540
to join these strings.
70

70

00:03:23,540  -->  00:03:28,540
Then we can do a space and then another + to add the age.
71

71

00:03:29,325  -->  00:03:31,907
Okay, so we are hoping that this here will then become
72

72

00:03:31,907  -->  00:03:34,324
John space 28 to the console.
73

73

00:03:35,254  -->  00:03:37,066
Okay, so let's check that out.
74

74

00:03:37,066  -->  00:03:39,316
And indeed we have John 28.
75

75

00:03:40,249  -->  00:03:43,033
So, how did this work, because remember that age here
76

76

00:03:43,033  -->  00:03:45,548
is actually a number and not really a string
77

77

00:03:45,548  -->  00:03:48,428
but still it logged it here as a string
78

78

00:03:48,428  -->  00:03:50,931
in this entire John 28 string.
79

79

00:03:50,931  -->  00:03:54,589
And so this works thanks to something called type coercion.
80

80

00:03:54,589  -->  00:03:57,421
Okay, so what this means is that JavaScript
81

81

00:03:57,421  -->  00:03:59,379
automatically converts types
82

82

00:03:59,379  -->  00:04:01,435
from one another as it's needed.
83

83

00:04:01,435  -->  00:04:04,718
And in this specific case it converted this number here
84

84

00:04:04,718  -->  00:04:08,428
to a string in order to be able to join these three strings.
85

85

00:04:08,428  -->  00:04:11,346
So John is a string, then the space here is also a string,
86

86

00:04:11,346  -->  00:04:14,786
and then age the number will automatically be converted
87

87

00:04:14,786  -->  00:04:17,754
by JavaScript also into a string so that it can then
88

88

00:04:17,754  -->  00:04:20,622
join all of this string into one bigger string.
89

89

00:04:20,622  -->  00:04:23,068
And so automatically JavaScript does this work
90

90

00:04:23,068  -->  00:04:25,893
for us here by a process called type coercion.
91

91

00:04:25,893  -->  00:04:28,494
And other programming languages are not like this
92

92

00:04:28,494  -->  00:04:30,665
we would have to convert our variables
93

93

00:04:30,665  -->  00:04:31,984
but JavaScript is easier,
94

94

00:04:31,984  -->  00:04:33,850
it takes all that work away from us,
95

95

00:04:33,850  -->  00:04:36,245
and does it automatically.
96

96

00:04:36,245  -->  00:04:37,921
And joining strings like this here
97

97

00:04:37,921  -->  00:04:41,450
is just one of many examples of type coercion
98

98

00:04:41,450  -->  00:04:43,443
that we will encounter throughout the course.
99

99

00:04:43,443  -->  00:04:46,822
So type coercion here happens all the time in JavaScript.
100

100

00:04:46,822  -->  00:04:48,997
Alright, let's now try out another example
101

101

00:04:48,997  -->  00:04:51,574
here with joining strings
102

102

00:04:51,574  -->  00:04:54,299
and so let's create some more variables.
103

103

00:04:54,299  -->  00:04:56,899
So, job, and now I'm going to show you something different
104

104

00:04:56,899  -->  00:04:59,311
which is basically to declare many variables
105

105

00:04:59,311  -->  00:05:03,618
on the same line and then define them later on.
106

106

00:05:03,618  -->  00:05:07,356
So, job to say Johns job, and then we can also define
107

107

00:05:07,356  -->  00:05:09,976
a variable called isMarried.
108

108

00:05:09,976  -->  00:05:13,239
So, basically like marriage status saying true or false
109

109

00:05:13,239  -->  00:05:15,897
whether he is married or not.
110

110

00:05:15,897  -->  00:05:18,647
And now we can say job is teacher
111

111

00:05:21,617  -->  00:05:24,367
and then that isMarried is false.
112

112

00:05:27,181  -->  00:05:30,015
Okay, so we declared both of these variables here
113

113

00:05:30,015  -->  00:05:32,070
and they are then undefined, remember.
114

114

00:05:32,070  -->  00:05:33,889
So that's what we had here,
115

115

00:05:33,889  -->  00:05:36,691
so I declared the variable here, job in this case,
116

116

00:05:36,691  -->  00:05:38,382
and it was then undefined, remember,
117

117

00:05:38,382  -->  00:05:40,789
and only later in this line here I then assigned
118

118

00:05:40,789  -->  00:05:42,595
a value to that variable.
119

119

00:05:42,595  -->  00:05:44,732
So that's exact same thing that we do here,
120

120

00:05:44,732  -->  00:05:47,504
so here we declare multiple variables on the same line
121

121

00:05:47,504  -->  00:05:51,532
then I assign values to them here in these different lines.
122

122

00:05:51,532  -->  00:05:54,311
Okay, and so that's also actually like a common practice,
123

123

00:05:54,311  -->  00:05:57,194
in case we wanted to declare many variables,
124

124

00:05:57,194  -->  00:05:59,327
it's a bit cleaner to do it like this,
125

125

00:05:59,327  -->  00:06:00,568
all in one line and then simply
126

126

00:06:00,568  -->  00:06:03,021
assign them the values a bit later.
127

127

00:06:03,021  -->  00:06:05,820
Now what happens if we want to log to the console
128

128

00:06:05,820  -->  00:06:09,737
a variable that has a Boolean in here included.
129

129

00:06:11,191  -->  00:06:14,191
So let's try it out with console.log
130

130

00:06:15,574  -->  00:06:19,074
firstName and then let's say so John is a,
131

131

00:06:22,192  -->  00:06:24,775
and then the age here, year old
132

132

00:06:28,734  -->  00:06:30,817
and then finally the job.
133

133

00:06:31,799  -->  00:06:33,893
And if we then want to include the Boolean
134

134

00:06:33,893  -->  00:06:36,695
that we defined before well then we can also like
135

135

00:06:36,695  -->  00:06:38,862
let's say, Is he married?,
136

136

00:06:40,701  -->  00:06:42,542
so we kind of ask a question here,
137

137

00:06:42,542  -->  00:06:45,696
and then let's see what happens when we try to join
138

138

00:06:45,696  -->  00:06:49,446
the isMarried variable here into this string.
139

139

00:06:51,287  -->  00:06:53,674
Okay, so that looks a bit confusing here,
140

140

00:06:53,674  -->  00:06:58,218
but what should happen is that John is a 28 year old
141

141

00:06:58,218  -->  00:07:00,572
teacher, is he married, false.
142

142

00:07:00,572  -->  00:07:04,925
So let's take a look at that and we get this error here,
143

143

00:07:04,925  -->  00:07:08,985
and that's just because I was missing this + sign here.
144

144

00:07:08,985  -->  00:07:13,409
Let's try it again, and so John is a 28 year old teacher,
145

145

00:07:13,409  -->  00:07:14,935
is he married? False.
146

146

00:07:14,935  -->  00:07:17,905
And so you see that even the Boolean here gets converted
147

147

00:07:17,905  -->  00:07:20,610
to a string, so JavaScript also does type coercion
148

148

00:07:20,610  -->  00:07:22,146
with Boolean's.
149

149

00:07:22,146  -->  00:07:24,770
And if you now actually away this variable here
150

150

00:07:24,770  -->  00:07:26,527
and so I'm commenting it out here,
151

151

00:07:26,527  -->  00:07:30,169
well let's see, then it should say undefined.
152

152

00:07:30,169  -->  00:07:33,958
Okay, so even the undefined is coerced into a string.
153

153

00:07:33,958  -->  00:07:36,647
So basically converted into a string.
154

154

00:07:36,647  -->  00:07:38,950
Okay, let's take a look again
155

155

00:07:38,950  -->  00:07:40,955
and so now it says false.
156

156

00:07:40,955  -->  00:07:42,747
Alright, so this is type coercion
157

157

00:07:42,747  -->  00:07:45,165
and now again I can write a comment here
158

158

00:07:45,165  -->  00:07:49,484
saying what we did in this particular section here.
159

159

00:07:49,484  -->  00:07:54,067
Okay, and now let's actually look at variable mutation.
160

160

00:07:56,961  -->  00:07:58,884
So variable mutation basically means
161

161

00:07:58,884  -->  00:08:01,342
to change the value of a variable.
162

162

00:08:01,342  -->  00:08:02,665
And so that's something that we didn't do
163

163

00:08:02,665  -->  00:08:05,564
up until this point but of course that's something
164

164

00:08:05,564  -->  00:08:07,905
that we can do with JavaScript variables.
165

165

00:08:07,905  -->  00:08:09,914
And so let's now redefine the age.
166

166

00:08:09,914  -->  00:08:11,914
So we can say age =
167

167

00:08:14,913  -->  00:08:17,394
twenty eight, for example.
168

168

00:08:17,394  -->  00:08:20,315
And so this time we don't use the var key word,
169

169

00:08:20,315  -->  00:08:22,502
so this part is not necessary because the variable
170

170

00:08:22,502  -->  00:08:25,157
was already defined before it, it's already declared
171

171

00:08:25,157  -->  00:08:26,964
here in this place with the var keyword.
172

172

00:08:26,964  -->  00:08:28,396
And so when we want to change it
173

173

00:08:28,396  -->  00:08:30,780
we no longer need the var keyword.
174

174

00:08:30,780  -->  00:08:33,643
So all we say is age and then the new value,
175

175

00:08:33,643  -->  00:08:36,116
and in this case here it is twenty eight
176

176

00:08:36,116  -->  00:08:37,886
as a string this time.
177

177

00:08:37,886  -->  00:08:39,905
And so as explained to you in the last lecture
178

178

00:08:39,905  -->  00:08:42,518
JavaScript automatically figures out the data type
179

179

00:08:42,518  -->  00:08:43,911
and can change it on the fly.
180

180

00:08:43,911  -->  00:08:46,054
So before it was a number and now it is new
181

181

00:08:46,054  -->  00:08:47,788
and it's a string.
182

182

00:08:47,788  -->  00:08:51,132
So that is the magic of the JavaScript dynamic typing.
183

183

00:08:51,132  -->  00:08:54,440
Okay, we can also of course change something else,
184

184

00:08:54,440  -->  00:08:56,607
let's change the job here.
185

185

00:08:57,560  -->  00:09:00,143
So, job and let's say a driver.
186

186

00:09:01,078  -->  00:09:03,791
Alright, and so let's now log it again to the console,
187

187

00:09:03,791  -->  00:09:07,653
or instead of logging I want to show you something else.
188

188

00:09:07,653  -->  00:09:09,371
So we've been logging these values to the console
189

189

00:09:09,371  -->  00:09:13,690
all the time, but now I want to use alert.
190

190

00:09:13,690  -->  00:09:16,855
So let me show you what alert is going to do,
191

191

00:09:16,855  -->  00:09:20,682
and it's this beautiful window here.
192

192

00:09:20,682  -->  00:09:22,739
So we get a pop up window basically.
193

193

00:09:22,739  -->  00:09:25,361
So John is a twenty eight year old driver.
194

194

00:09:25,361  -->  00:09:27,027
Is he married? False.
195

195

00:09:27,027  -->  00:09:29,190
Okay, and so this time it's not in the console
196

196

00:09:29,190  -->  00:09:32,964
but instead it is like this small pop up, or alert window.
197

197

00:09:32,964  -->  00:09:35,078
And you see that basically the page here
198

198

00:09:35,078  -->  00:09:38,002
keeps loading until we actually hit OK here
199

199

00:09:38,002  -->  00:09:40,719
and make this pop up disappear.
200

200

00:09:40,719  -->  00:09:45,065
So the page is loading, it cannot really finish it's work
201

201

00:09:45,065  -->  00:09:47,065
until we hit OK on this.
202

202

00:09:48,057  -->  00:09:50,390
Okay, so we did some variable mutation here
203

203

00:09:50,390  -->  00:09:52,914
and type coercion, we also observed
204

204

00:09:52,914  -->  00:09:55,564
I showed you the alert which is an alternative
205

205

00:09:55,564  -->  00:09:56,710
to console.log.
206

206

00:09:56,710  -->  00:09:59,249
Let me just show you something else here
207

207

00:09:59,249  -->  00:10:01,439
which is if we can actually in an easy way
208

208

00:10:01,439  -->  00:10:06,439
get data from the user with a similar method that alert.
209

209

00:10:06,447  -->  00:10:11,447
So we can use prompt and then basically ask a question here.
210

210

00:10:12,279  -->  00:10:15,196
So let's say What is his last Name?
211

211

00:10:17,360  -->  00:10:20,588
Okay, so we say prompt What is his last Name?
212

212

00:10:20,588  -->  00:10:23,513
We will then be able to input a value.
213

213

00:10:23,513  -->  00:10:27,129
And that value we can then store into a variable.
214

214

00:10:27,129  -->  00:10:31,598
So var lastName, so that's what we're asking for here,
215

215

00:10:31,598  -->  00:10:33,549
and then we can log it to the console
216

216

00:10:33,549  -->  00:10:36,882
just to make sure that everything works.
217

217

00:10:39,856  -->  00:10:44,189
So lastName then we can also add the firstName here.
218

218

00:10:48,010  -->  00:10:51,168
Okay, so that's the pop up from before
219

219

00:10:51,168  -->  00:10:52,910
so this alert here,
220

220

00:10:52,910  -->  00:10:55,185
and now here comes the prompt.
221

221

00:10:55,185  -->  00:10:56,927
Okay, so What is his last Name?
222

222

00:10:56,927  -->  00:10:58,963
And let's say Smith,
223

223

00:10:58,963  -->  00:11:02,186
and now this will be stored into the last name variable,
224

224

00:11:02,186  -->  00:11:04,350
and then we can log this variable to the console.
225

225

00:11:04,350  -->  00:11:08,405
So firstName + the lastName will of course give John Smith.
226

226

00:11:08,405  -->  00:11:11,998
So Smith is what we've just defined.
227

227

00:11:11,998  -->  00:11:14,248
If we now say, like, Miller
228

228

00:11:15,712  -->  00:11:17,908
then it will log John Miller.
229

229

00:11:17,908  -->  00:11:21,169
Okay, so that's our input coming from that window.
230

230

00:11:21,169  -->  00:11:24,059
Great, you're progressing at a great level here,
231

231

00:11:24,059  -->  00:11:26,377
and already learned a lot of JavaScript.
232

232

00:11:26,377  -->  00:11:28,379
Of course, there's tons more to come
233

233

00:11:28,379  -->  00:11:30,548
and so let's quickly move on to the next lecture
234

234

00:11:30,548  -->  00:11:33,220
where we're going to talk about some basic operators.
235

235

00:11:33,220  -->  00:11:35,003
So like doing math operators,
236

236

00:11:35,003  -->  00:11:37,244
and compare different values with one another.
237

237

00:11:37,244  -->  00:11:40,494
So stay tuned, and see you in a second.
