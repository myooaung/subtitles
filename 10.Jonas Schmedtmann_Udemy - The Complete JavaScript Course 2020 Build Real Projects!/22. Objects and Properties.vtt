WEBVTT
1
1

00:00:01.050  -->  00:00:02.300
<v Jonas>Welcome back.</v>
2

2

00:00:02.300  -->  00:00:05.360
In this lecture I will give you an introduction to objects,
3

3

00:00:05.360  -->  00:00:07.880
which is the single most important feature
4

4

00:00:07.880  -->  00:00:09.430
of the JavaScript language.
5

5

00:00:09.430  -->  00:00:10.593
So let's get started.
6

6

00:00:11.460  -->  00:00:13.700
So, the arrays that we've been learning about
7

7

00:00:13.700  -->  00:00:16.230
are very useful, and are, of course,
8

8

00:00:16.230  -->  00:00:19.090
very much used in JavaScript programming.
9

9

00:00:19.090  -->  00:00:21.780
But imagine that you wanted to access an element
10

10

00:00:21.780  -->  00:00:25.700
of the array, not by its index, but by a specific name.
11

11

00:00:25.700  -->  00:00:28.350
So, basically naming each of the values.
12

12

00:00:28.350  -->  00:00:30.690
And with arrays, of course, you cannot do that,
13

13

00:00:30.690  -->  00:00:32.580
but you can with objects.
14

14

00:00:32.580  -->  00:00:35.280
So in objects, we define key value pairs,
15

15

00:00:35.280  -->  00:00:37.970
which means that each value has a name
16

16

00:00:37.970  -->  00:00:39.730
which is called the key.
17

17

00:00:39.730  -->  00:00:41.070
So, in simple terms,
18

18

00:00:41.070  -->  00:00:44.290
we can use objects to group together different variables
19

19

00:00:44.290  -->  00:00:47.530
that belong together and that have no particular order.
20

20

00:00:47.530  -->  00:00:49.780
Just like, for example, the properties of John
21

21

00:00:49.780  -->  00:00:52.900
that we've been talking about in all these past lectures.
22

22

00:00:52.900  -->  00:00:55.810
So, one fundamental difference between arrays and objects
23

23

00:00:55.810  -->  00:00:58.320
is that in arrays, the order matters a lot,
24

24

00:00:58.320  -->  00:01:01.030
while in objects it does not matter at all.
25

25

00:01:01.030  -->  00:01:02.820
Okay, so let me actually show it to you,
26

26

00:01:02.820  -->  00:01:05.250
how we can create an object.
27

27

00:01:05.250  -->  00:01:07.736
So we start again by defining a variable.
28

28

00:01:07.736  -->  00:01:10.980
And now the easiest way of creating a new object
29

29

00:01:10.980  -->  00:01:13.450
is with the so called object literal,
30

30

00:01:13.450  -->  00:01:15.410
which is basically just like a container
31

31

00:01:15.410  -->  00:01:17.120
that we can fill with variables,
32

32

00:01:17.120  -->  00:01:18.670
which are called properties.
33

33

00:01:18.670  -->  00:01:20.920
So the object literal, we write it like this.
34

34

00:01:20.920  -->  00:01:22.880
So, just curly braces.
35

35

00:01:22.880  -->  00:01:25.270
Just like with arrays we have the brackets,
36

36

00:01:25.270  -->  00:01:28.198
in objects you have the curly braces.
37

37

00:01:28.198  -->  00:01:29.200
Okay?
38

38

00:01:29.200  -->  00:01:32.163
And so now we can start defining, or key value pairs.
39

39

00:01:33.110  -->  00:01:38.110
So, name, for example, it now John.
40

40

00:01:38.340  -->  00:01:39.940
Or we can also say firstName,
41

41

00:01:39.940  -->  00:01:41.470
just like we've been doing all this time,
42

42

00:01:41.470  -->  00:01:44.210
so that we keep our naming consistent here.
43

43

00:01:44.210  -->  00:01:47.550
So, here in this example, firstName is now a key,
44

44

00:01:47.550  -->  00:01:49.100
and john is the value.
45

45

00:01:49.100  -->  00:01:52.180
And so we call all of this here a key value pair.
46

46

00:01:52.180  -->  00:01:55.947
We also say that firstName is a property of the john object.
47

47

00:01:55.947  -->  00:01:56.870
Okay?
48

48

00:01:56.870  -->  00:01:58.380
But a bit more on that later.
49

49

00:01:58.380  -->  00:01:59.780
So for now, let's keep defining
50

50

00:01:59.780  -->  00:02:01.580
a couple of key value pairs here,
51

51

00:02:01.580  -->  00:02:03.814
so that I can show you then how we can access them
52

52

00:02:03.814  -->  00:02:07.123
and also mutate them, just like I showed you in arrays.
53

53

00:02:08.191  -->  00:02:09.791
Let's also define the last name.
54

54

00:02:12.700  -->  00:02:14.860
So, Smith, and then just like in arrays,
55

55

00:02:14.860  -->  00:02:15.880
as you've seen here,
56

56

00:02:15.880  -->  00:02:18.120
we have to separate these different lines,
57

57

00:02:18.120  -->  00:02:20.670
so these different key value pairs with a comma.
58

58

00:02:20.670  -->  00:02:22.040
Okay?
59

59

00:02:22.040  -->  00:02:25.360
So birthYear, and again 1990.
60

60

00:02:25.360  -->  00:02:27.010
And you see that we can put all kinds
61

61

00:02:27.010  -->  00:02:29.740
of different data types in here just like before.
62

62

00:02:29.740  -->  00:02:32.410
We can even out arrays in here, so why not?
63

63

00:02:32.410  -->  00:02:34.453
Let's define a family property,
64

64

00:02:35.360  -->  00:02:36.620
and now we can put an array
65

65

00:02:36.620  -->  00:02:39.000
in here saying the family members.
66

66

00:02:39.000  -->  00:02:41.792
So let's say that some family members of John
67

67

00:02:41.792  -->  00:02:46.517
are Jane, Mark, Bob, and Emily.
68

68

00:02:50.640  -->  00:02:52.200
So, as you see inside the object
69

69

00:02:52.200  -->  00:02:54.890
we can actually have other elements like these,
70

70

00:02:54.890  -->  00:02:56.600
so we could even have an array.
71

71

00:02:56.600  -->  00:02:58.450
We could even actually put another object
72

72

00:02:58.450  -->  00:03:00.320
inside of the object, all right?
73

73

00:03:00.320  -->  00:03:02.280
And actually the same is true for arrays,
74

74

00:03:02.280  -->  00:03:04.600
so we didn't talk about that in the arrays lecture,
75

75

00:03:04.600  -->  00:03:07.570
but as an array element, you can actually also have
76

76

00:03:07.570  -->  00:03:11.150
an object or another array or really whatever you want.
77

77

00:03:11.150  -->  00:03:11.983
All right?
78

78

00:03:11.983  -->  00:03:13.950
And of course, you will see examples of all that
79

79

00:03:13.950  -->  00:03:16.350
throughout the course, so don't worry.
80

80

00:03:16.350  -->  00:03:17.820
This is really just the intersection.
81

81

00:03:17.820  -->  00:03:20.020
We're gonna use all of this stuff a bit later.
82

82

00:03:20.020  -->  00:03:20.930
So we can define a job.
83

83

00:03:20.930  -->  00:03:22.560
And now also let's define
84

84

00:03:22.560  -->  00:03:26.843
the married state just like before.
85

85

00:03:28.800  -->  00:03:30.370
So we say false.
86

86

00:03:30.370  -->  00:03:31.203
Okay?
87

87

00:03:31.203  -->  00:03:34.330
And the last one has no comma or semicolon,
88

88

00:03:34.330  -->  00:03:35.163
and that's it.
89

89

00:03:35.163  -->  00:03:36.800
So that is our john object.
90

90

00:03:36.800  -->  00:03:38.880
We can now, just to take a look at how it looks
91

91

00:03:38.880  -->  00:03:41.193
in the console, just log it.
92

92

00:03:44.010  -->  00:03:46.000
Okay, and so here we go.
93

93

00:03:46.000  -->  00:03:47.090
So this is our object.
94

94

00:03:47.090  -->  00:03:48.810
We can open it up and take a look
95

95

00:03:48.810  -->  00:03:50.600
at the different properties.
96

96

00:03:50.600  -->  00:03:51.670
So as I mentioned,
97

97

00:03:51.670  -->  00:03:55.780
these are all the properties of the john object.
98

98

00:03:55.780  -->  00:03:57.070
And so maybe now you are wondering
99

99

00:03:57.070  -->  00:03:58.659
how we can actually access them.
100

100

00:03:58.659  -->  00:04:00.490
And that's a good question.
101

101

00:04:00.490  -->  00:04:01.400
And it's very easy.
102

102

00:04:01.400  -->  00:04:04.110
All we have to do is to use the dot notation.
103

103

00:04:04.110  -->  00:04:06.697
So, dot firstName, for example.
104

104

00:04:06.697  -->  00:04:09.497
And the text editor already suggests
105

105

00:04:09.497  -->  00:04:11.670
what name we can write here.
106

106

00:04:11.670  -->  00:04:14.902
And so, let's try it out and here we go, John.
107

107

00:04:14.902  -->  00:04:17.830
So all we have to do in order to read the value
108

108

00:04:17.830  -->  00:04:21.320
of the key of firstName, is to use the dot.
109

109

00:04:21.320  -->  00:04:22.153
Okay?
110

110

00:04:22.153  -->  00:04:24.000
And so firstName is a property of john,
111

111

00:04:24.000  -->  00:04:26.762
and we read it by using the dot notation.
112

112

00:04:26.762  -->  00:04:27.810
All right?
113

113

00:04:27.810  -->  00:04:30.440
So that's one of the ways in which we can do it,
114

114

00:04:30.440  -->  00:04:32.260
but there's actually another one.
115

115

00:04:32.260  -->  00:04:34.330
So, one is the dot notation,
116

116

00:04:34.330  -->  00:04:36.090
and so let me now show you another one,
117

117

00:04:36.090  -->  00:04:38.020
which is using the brackets.
118

118

00:04:38.020  -->  00:04:40.630
So, just like retrieving an element from an array,
119

119

00:04:40.630  -->  00:04:42.520
we can also use the brackets to retrieve
120

120

00:04:42.520  -->  00:04:44.130
an element from the object,
121

121

00:04:44.130  -->  00:04:47.210
but instead of using a number we use the key name.
122

122

00:04:47.210  -->  00:04:49.690
Okay, and so let's say that we want the last name now.
123

123

00:04:49.690  -->  00:04:52.550
And we didn't have to actually put it in quotes.
124

124

00:04:52.550  -->  00:04:54.933
So basically we have to put a string here.
125

125

00:04:55.830  -->  00:04:57.257
So, lastName.
126

126

00:04:58.330  -->  00:04:59.650
And so now let's check it out.
127

127

00:04:59.650  -->  00:05:01.700
And here we go with Smith.
128

128

00:05:01.700  -->  00:05:02.533
Okay?
129

129

00:05:02.533  -->  00:05:04.410
So this is here a string, remember.
130

130

00:05:04.410  -->  00:05:06.610
And so actually, we can do even better,
131

131

00:05:06.610  -->  00:05:09.310
not exactly better, but there's one thing that we can do,
132

132

00:05:09.310  -->  00:05:13.070
for example, is that we can declare a variable.
133

133

00:05:13.070  -->  00:05:16.503
And let's just call it x here for simplicity's sake,
134

134

00:05:17.830  -->  00:05:20.020
and then let's call it the birthYear.
135

135

00:05:21.361  -->  00:05:24.504
Okay, and so now in here, and this has to be
136

136

00:05:24.504  -->  00:05:25.387
a string of course,
137

137

00:05:25.387  -->  00:05:27.860
and now in here we can use that variable.
138

138

00:05:27.860  -->  00:05:31.890
So we can say john x, and this x will then be birthYear.
139

139

00:05:31.890  -->  00:05:35.040
And john birthYear will be 1990.
140

140

00:05:35.040  -->  00:05:35.873
All right?
141

141

00:05:35.873  -->  00:05:36.706
So let's try that.
142

142

00:05:36.706  -->  00:05:38.010
And indeed it worked.
143

143

00:05:38.010  -->  00:05:38.843
Okay?
144

144

00:05:38.843  -->  00:05:41.010
And this small trick here can be useful sometimes,
145

145

00:05:41.010  -->  00:05:42.730
and so that's why I showed it to you.
146

146

00:05:42.730  -->  00:05:44.030
Okay, so keep that in mind.
147

147

00:05:44.030  -->  00:05:46.263
Sometimes this might come in handy.
148

148

00:05:46.263  -->  00:05:49.400
So this is how you retrieve data from an object.
149

149

00:05:49.400  -->  00:05:51.320
And now we also want to mutate object,
150

150

00:05:51.320  -->  00:05:53.050
so just like we did with arrays,
151

151

00:05:53.050  -->  00:05:55.600
and it actually works in the exact same way.
152

152

00:05:55.600  -->  00:05:57.870
All right, so what we can do now
153

153

00:05:57.870  -->  00:06:02.870
is to say john.job, for example, and we can set it
154

154

00:06:03.220  -->  00:06:06.480
to driver, or to designer actually.
155

155

00:06:06.480  -->  00:06:07.637
Why not?
156

156

00:06:07.637  -->  00:06:10.620
So all we have to do is to say john.job,
157

157

00:06:10.620  -->  00:06:13.340
and then we can mutate the data, okay?
158

158

00:06:13.340  -->  00:06:16.530
And then, of course, we can also do it the other way around.
159

159

00:06:16.530  -->  00:06:19.200
So with the brackets notation, okay?
160

160

00:06:19.200  -->  00:06:21.483
So then our quotes and is married.
161

161

00:06:23.140  -->  00:06:26.750
And so let's set it to true now, okay?
162

162

00:06:26.750  -->  00:06:28.590
So if you now log into the console,
163

163

00:06:28.590  -->  00:06:31.163
then you will see that it should be different.
164

164

00:06:35.410  -->  00:06:39.590
Here we go, and so well, here we go,
165

165

00:06:39.590  -->  00:06:44.150
so John is now a designer and is married is now true, okay?
166

166

00:06:44.150  -->  00:06:46.620
And so we can use the dot notation not only to access it
167

167

00:06:46.620  -->  00:06:49.160
like we did before, like here,
168

168

00:06:49.160  -->  00:06:51.140
but we can also do it to change the data,
169

169

00:06:51.140  -->  00:06:53.500
to mutate some of these properties.
170

170

00:06:53.500  -->  00:06:57.260
Okay, and the same here with the brackets notation.
171

171

00:06:57.260  -->  00:06:58.777
All right, and now just to finish,
172

172

00:06:58.777  -->  00:07:00.650
we had two different ways
173

173

00:07:00.650  -->  00:07:02.900
of initializing a new array, right?
174

174

00:07:02.900  -->  00:07:04.400
So to create a new array,
175

175

00:07:04.400  -->  00:07:06.499
and the same happens with object.
176

176

00:07:06.499  -->  00:07:08.713
So we can do an object for Jane.
177

177

00:07:09.880  -->  00:07:12.763
And just like before, we can say, new object.
178

178

00:07:13.980  -->  00:07:15.353
So in the array lecture we said new array,
179

179

00:07:15.353  -->  00:07:17.520
and now we can say new object
180

180

00:07:17.520  -->  00:07:20.410
in order to create a new empty object.
181

181

00:07:20.410  -->  00:07:23.500
And now we can just fill it up with some data here:
182

182

00:07:23.500  -->  00:07:24.623
jane.name,
183

183

00:07:29.450  -->  00:07:30.957
jane.birthYear,
184

184

00:07:37.010  -->  00:07:38.550
and just one more.
185

185

00:07:38.550  -->  00:07:42.010
So Jane, and this time I'm going to use the brackets again,
186

186

00:07:42.010  -->  00:07:45.183
and so we can say now lastName also.
187

187

00:07:51.260  -->  00:07:53.060
Okay, this one let's call firstName.
188

188

00:07:54.210  -->  00:07:56.010
And now we can log into the console.
189

189

00:08:00.220  -->  00:08:02.060
Okay, so just so you see
190

190

00:08:02.060  -->  00:08:04.707
that it's going to work in the exact same name.
191

191

00:08:04.707  -->  00:08:05.980
And here we have an error,
192

192

00:08:05.980  -->  00:08:07.760
so you see lastName is not defined,
193

193

00:08:07.760  -->  00:08:10.963
and that's because it's not a string, which it should be.
194

194

00:08:12.000  -->  00:08:13.430
So let's try that again.
195

195

00:08:13.430  -->  00:08:16.140
And so, it looks exact same way as before.
196

196

00:08:16.140  -->  00:08:19.890
So again, it works just like the object literal.
197

197

00:08:19.890  -->  00:08:21.690
Let's actually write that down here.
198

198

00:08:24.320  -->  00:08:27.080
So object literal is a way of defining objects
199

199

00:08:27.080  -->  00:08:30.623
using this syntax here, so just with the curly braces.
200

200

00:08:31.700  -->  00:08:35.373
And then down here we have the new object syntax.
201

201

00:08:37.930  -->  00:08:42.000
Okay, so that's the very basics of objects and properties.
202

202

00:08:42.000  -->  00:08:43.800
So, in this lecture we talked about properties,
203

203

00:08:43.800  -->  00:08:46.590
and the next one, we are going to talk about methods,
204

204

00:08:46.590  -->  00:08:50.150
which is also something very important related to objects.
205

205

00:08:50.150  -->  00:08:51.593
So stay tuned for that one.
