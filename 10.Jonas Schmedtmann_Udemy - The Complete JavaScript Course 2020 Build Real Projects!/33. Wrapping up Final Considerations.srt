1
1

00:00:01,280  -->  00:00:03,730
<v Instructor>Welcome to the last video in the section.</v>
2

2

00:00:03,730  -->  00:00:06,700
So let's wrap up our project with some final stuff
3

3

00:00:06,700  -->  00:00:08,850
that we need to take care of.
4

4

00:00:08,850  -->  00:00:11,140
And the first thing is that I spotted a bug
5

5

00:00:11,140  -->  00:00:14,013
that sometimes happens when we update the servings.
6

6

00:00:15,690  -->  00:00:17,110
And not in all recipes,
7

7

00:00:17,110  -->  00:00:20,363
but let's look at one specifically.
8

8

00:00:22,640  -->  00:00:23,790
Wait, just this one.
9

9

00:00:23,790  -->  00:00:26,050
Actually, it's already open, okay.
10

10

00:00:26,050  -->  00:00:30,110
So first we have this weird, huge number here
11

11

00:00:30,110  -->  00:00:32,210
okay, and so that doesn't look so good.
12

12

00:00:32,210  -->  00:00:34,660
And if we now increase this here,
13

13

00:00:34,660  -->  00:00:36,380
then you see that at some point,
14

14

00:00:36,380  -->  00:00:38,340
it doesn't actually do anything,
15

15

00:00:38,340  -->  00:00:40,210
but instead it gives us this error here.
16

16

00:00:40,210  -->  00:00:42,830
And this error has to do with these two long numbers
17

17

00:00:42,830  -->  00:00:44,620
and with some rounding issues,
18

18

00:00:44,620  -->  00:00:47,560
and so we will have to go back and fix that.
19

19

00:00:47,560  -->  00:00:51,020
And so what's responsible for displaying this numbers here
20

20

00:00:51,020  -->  00:00:53,360
is a function that we coded up a long time ago
21

21

00:00:53,360  -->  00:00:55,370
which was the format count.
22

22

00:00:55,370  -->  00:00:57,423
And that is in the recipe view.
23

23

00:00:59,760  -->  00:01:02,360
Okay, so here we have the format count.
24

24

00:01:02,360  -->  00:01:05,390
And so sometimes, again, we have numbers like,
25

25

00:01:05,390  -->  00:01:09,390
well, something like point three three three
26

26

00:01:09,390  -->  00:01:10,700
and so on and so forth,
27

27

00:01:10,700  -->  00:01:12,950
and the fraction function here
28

28

00:01:12,950  -->  00:01:14,880
apparently cannot really deal with that.
29

29

00:01:14,880  -->  00:01:17,860
And so the solution is to simply round
30

30

00:01:17,860  -->  00:01:19,820
the number that comes in.
31

31

00:01:19,820  -->  00:01:20,653
Okay?
32

32

00:01:20,653  -->  00:01:23,190
So let's simply create a variable here called
33

33

00:01:23,190  -->  00:01:24,183
the new count.
34

34

00:01:26,170  -->  00:01:28,743
And then round it to like four decimal places.
35

35

00:01:31,250  -->  00:01:33,580
Now for some weird reason, the math that rounds
36

36

00:01:33,580  -->  00:01:35,930
only returns integers, okay?
37

37

00:01:35,930  -->  00:01:37,680
But there's a work-around for that.
38

38

00:01:38,850  -->  00:01:40,810
So if you were to pass on just count,
39

39

00:01:40,810  -->  00:01:43,140
then we would entirely loose the decimal part.
40

40

00:01:43,140  -->  00:01:46,400
But instead, we can multiply this by 10,000
41

41

00:01:46,400  -->  00:01:49,050
in this case because we want four decimal places,
42

42

00:01:49,050  -->  00:01:52,960
and then, divide the result by 10,000 again.
43

43

00:01:52,960  -->  00:01:56,040
Okay, and so with that, we can still use math round
44

44

00:01:56,040  -->  00:01:59,110
in order to have the four decimal places that we want.
45

45

00:01:59,110  -->  00:02:01,110
And if we want five, well then we can simply add
46

46

00:02:01,110  -->  00:02:03,690
another zero here, and one here.
47

47

00:02:03,690  -->  00:02:05,900
But that's not really necessary in this case.
48

48

00:02:05,900  -->  00:02:08,842
Okay, and so now everywhere we used count
49

49

00:02:08,842  -->  00:02:10,923
we will simply use the new count.
50

50

00:02:16,720  -->  00:02:18,260
Okay, so let's test it out.
51

51

00:02:18,260  -->  00:02:20,090
And it looks a bit better already.
52

52

00:02:20,090  -->  00:02:22,080
So it's still not perfect, but for now,
53

53

00:02:22,080  -->  00:02:24,230
I am going to leave it like this, okay.
54

54

00:02:24,230  -->  00:02:26,163
So it, it does work, actually.
55

55

00:02:27,320  -->  00:02:29,960
But anyway, what matters now is that we no longer
56

56

00:02:29,960  -->  00:02:33,040
have this error here when we read the number six,
57

57

00:02:33,040  -->  00:02:34,093
so six servings.
58

58

00:02:35,360  -->  00:02:36,760
So, the error is gone,
59

59

00:02:36,760  -->  00:02:39,610
and now everything works just as intended.
60

60

00:02:39,610  -->  00:02:42,820
So let's move down and yeah,
61

61

00:02:42,820  -->  00:02:44,180
so everything works now.
62

62

00:02:44,180  -->  00:02:46,623
Next up, let's clean up a bit our code.
63

63

00:02:47,990  -->  00:02:50,450
And by that I mean, just the nx-js.
64

64

00:02:50,450  -->  00:02:51,283
So we have some stuff here
65

65

00:02:51,283  -->  00:02:53,160
that we don't want in the production version.
66

66

00:02:53,160  -->  00:02:56,780
So for example, we don't want to leak all of our state data
67

67

00:02:56,780  -->  00:02:58,080
into the global object,
68

68

00:02:58,080  -->  00:03:00,513
so let's take out that one.
69

69

00:03:01,680  -->  00:03:03,440
Let's see if we have some more.
70

70

00:03:03,440  -->  00:03:06,370
So we have some console outlook here of the ID.
71

71

00:03:06,370  -->  00:03:07,980
That one we also don't need.
72

72

00:03:07,980  -->  00:03:09,603
Give it some more space here.
73

73

00:03:11,120  -->  00:03:11,953
And let's see.
74

74

00:03:15,690  -->  00:03:17,290
Yeah, so down here we have another thing,
75

75

00:03:17,290  -->  00:03:20,420
so another variable that we added to the global object
76

76

00:03:20,420  -->  00:03:21,843
which we don't need at all.
77

77

00:03:22,720  -->  00:03:23,553
Okay?
78

78

00:03:23,553  -->  00:03:27,040
So now I think it's a bit better, a bit cleaner code.
79

79

00:03:27,040  -->  00:03:30,453
Now, next up, let's actually start up our build process.
80

80

00:03:31,340  -->  00:03:32,550
So this one here,
81

81

00:03:32,550  -->  00:03:35,570
where we use webpack in a production mod.
82

82

00:03:35,570  -->  00:03:36,403
Okay?
83

83

00:03:36,403  -->  00:03:38,520
So let's move to our terminal,
84

84

00:03:38,520  -->  00:03:42,530
and right now we can actually quit this task.
85

85

00:03:42,530  -->  00:03:43,363
Okay?
86

86

00:03:43,363  -->  00:03:46,380
So we no longer want our development version running here
87

87

00:03:46,380  -->  00:03:48,990
because we're finished with developing, okay?
88

88

00:03:48,990  -->  00:03:50,270
So if you reload this now,
89

89

00:03:50,270  -->  00:03:52,240
you will see that the site can't be reached
90

90

00:03:52,240  -->  00:03:54,660
because of course our connection is lost
91

91

00:03:54,660  -->  00:03:57,900
because the web development server is no longer working.
92

92

00:03:57,900  -->  00:03:58,733
Okay?
93

93

00:03:58,733  -->  00:04:02,930
But anyway, what we want to do now is npm run build.
94

94

00:04:02,930  -->  00:04:04,920
That will then bundle up all our files.
95

95

00:04:04,920  -->  00:04:07,120
Create a small radius bundle
96

96

00:04:07,120  -->  00:04:09,460
and actually write it to disc as well.
97

97

00:04:09,460  -->  00:04:12,760
So we end up with a bundle size of 125 kilobytes
98

98

00:04:12,760  -->  00:04:14,840
which is actually not really small,
99

99

00:04:14,840  -->  00:04:18,670
and an index.html of 17.6, okay?
100

100

00:04:18,670  -->  00:04:21,700
And there are methods for shrinking this down here,
101

101

00:04:21,700  -->  00:04:24,200
and it will probably be possible to do this.
102

102

00:04:24,200  -->  00:04:26,160
But that's a bit too much for this course.
103

103

00:04:26,160  -->  00:04:30,490
For that you can take like a more in-depth webpack course.
104

104

00:04:30,490  -->  00:04:31,890
Okay?
105

105

00:04:31,890  -->  00:04:33,710
So what matters here for us is that
106

106

00:04:33,710  -->  00:04:36,750
actually the bundle is now written to disc.
107

107

00:04:36,750  -->  00:04:39,970
And we see that our code is this beautiful
108

108

00:04:39,970  -->  00:04:41,560
piece of code, alright.
109

109

00:04:41,560  -->  00:04:45,760
So that's minified, compressed, and yeah.
110

110

00:04:45,760  -->  00:04:47,240
So that's the result of webpack.
111

111

00:04:47,240  -->  00:04:50,192
You cannot figure out what the hell all of this is,
112

112

00:04:50,192  -->  00:04:54,100
but it also doesn't really matter if you're just interested
113

113

00:04:54,100  -->  00:04:56,280
in making this work, okay?
114

114

00:04:56,280  -->  00:04:59,470
So, I guess we're finished with this project.
115

115

00:04:59,470  -->  00:05:01,450
Of course, we could make it a little bit better,
116

116

00:05:01,450  -->  00:05:03,610
and so let's take a look at a couple of suggestions
117

117

00:05:03,610  -->  00:05:06,450
of stuff that you could improve here.
118

118

00:05:06,450  -->  00:05:09,180
So if you want to have some more fun with this project,
119

119

00:05:09,180  -->  00:05:10,750
then the first thing that you could do
120

120

00:05:10,750  -->  00:05:13,905
is to implement a button to delete all the items
121

121

00:05:13,905  -->  00:05:16,190
in our shopping list at the same time.
122

122

00:05:16,190  -->  00:05:18,450
So right now, we can only delete them one by one,
123

123

00:05:18,450  -->  00:05:20,490
but you could put a button to basically clear
124

124

00:05:20,490  -->  00:05:21,930
the entire list all at once.
125

125

00:05:21,930  -->  00:05:24,400
Then second, you could also implement the functionality
126

126

00:05:24,400  -->  00:05:27,080
to manually add items to the shopping list.
127

127

00:05:27,080  -->  00:05:29,710
So having like an input field with a small button
128

128

00:05:29,710  -->  00:05:32,210
so we can add more stuff to our shopping list
129

129

00:05:32,210  -->  00:05:34,280
besides the ingredients of the recipes.
130

130

00:05:34,280  -->  00:05:37,840
And also you could then store this data in local storage
131

131

00:05:37,840  -->  00:05:39,900
like we did with the likes.
132

132

00:05:39,900  -->  00:05:40,733
Okay?
133

133

00:05:40,733  -->  00:05:42,890
So that would make it a bit better again.
134

134

00:05:42,890  -->  00:05:45,200
Now another small thing that you could change is
135

135

00:05:45,200  -->  00:05:47,670
the ingredient parsing algorithm, okay.
136

136

00:05:47,670  -->  00:05:48,970
So that part that I showed you,
137

137

00:05:48,970  -->  00:05:50,870
like for example in that recipe that we just saw
138

138

00:05:50,870  -->  00:05:53,680
with this huge number that looks at bit difficult
139

139

00:05:53,680  -->  00:05:54,580
to understand.
140

140

00:05:54,580  -->  00:05:57,260
So you could improve that and some other edge cases
141

141

00:05:57,260  -->  00:05:59,543
that do not really work with the current way
142

142

00:05:59,543  -->  00:06:01,330
the algorithm is done.
143

143

00:06:01,330  -->  00:06:02,163
Okay?
144

144

00:06:02,163  -->  00:06:04,200
So I didn't want to make that video even longer
145

145

00:06:04,200  -->  00:06:05,430
than it already was,
146

146

00:06:05,430  -->  00:06:08,109
but you sure can, can improve on it, okay.
147

147

00:06:08,109  -->  00:06:10,830
The next up, you can come up with an algorithm
148

148

00:06:10,830  -->  00:06:13,730
for more precisely calculating the amount of servings.
149

149

00:06:13,730  -->  00:06:16,240
So right now, we simply added four servings
150

150

00:06:16,240  -->  00:06:17,460
to each of the recipes,
151

151

00:06:17,460  -->  00:06:20,501
but maybe with some research and analyzing the data
152

152

00:06:20,501  -->  00:06:23,660
you can try to understand how many servings we have
153

153

00:06:23,660  -->  00:06:25,820
based on the amount of ingredients.
154

154

00:06:25,820  -->  00:06:26,653
Okay?
155

155

00:06:26,653  -->  00:06:29,410
So that can be a fun algorithm to code up, okay?
156

156

00:06:29,410  -->  00:06:32,080
And finally, you could improve the error handling.
157

157

00:06:32,080  -->  00:06:34,400
So instead of having these alert windows popping up
158

158

00:06:34,400  -->  00:06:35,410
when there's an error,
159

159

00:06:35,410  -->  00:06:38,240
you could like display it somewhere on the user interface.
160

160

00:06:38,240  -->  00:06:39,073
Okay?
161

161

00:06:39,073  -->  00:06:41,390
So these are just a couple of suggestions that you have
162

162

00:06:41,390  -->  00:06:44,010
and I'm sure that you can improve the project
163

163

00:06:44,010  -->  00:06:45,150
even more than this.
164

164

00:06:45,150  -->  00:06:45,983
And if you do,
165

165

00:06:45,983  -->  00:06:48,130
then please make sure to share it on the Q and A
166

166

00:06:48,130  -->  00:06:49,570
in the course, okay?
167

167

00:06:49,570  -->  00:06:51,881
So I would be really excited to see that.
168

168

00:06:51,881  -->  00:06:54,845
And alright, so that's really it.
169

169

00:06:54,845  -->  00:06:57,410
I hope you had as much fun with this project as I did,
170

170

00:06:57,410  -->  00:07:00,870
and that you learned a ton of new stuff along the way.
171

171

00:07:00,870  -->  00:07:03,360
And that it will ultimately make you a bit better
172

172

00:07:03,360  -->  00:07:04,890
at coding Javascript.
173

173

00:07:04,890  -->  00:07:07,400
So thanks for making it this far in the course.
174

174

00:07:07,400  -->  00:07:08,500
And see you next time.
