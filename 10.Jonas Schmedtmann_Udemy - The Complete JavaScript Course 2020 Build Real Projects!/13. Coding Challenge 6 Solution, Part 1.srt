1
1

00:00:01,413  -->  00:00:03,932
<v ->[Jonas Schmedtmann] This is the first part of the solution</v>
2

2

00:00:03,932  -->  00:00:05,904
for the coding challenge that I just
3

3

00:00:05,904  -->  00:00:08,321
gave you in the last lecture.
4

4

00:00:09,896  -->  00:00:12,218
So let's start by creating a new file
5

5

00:00:12,218  -->  00:00:14,327
which has all of this code so that
6

6

00:00:14,327  -->  00:00:17,052
we don't mess up our original code.
7

7

00:00:17,052  -->  00:00:19,730
So I select and copy all of this
8

8

00:00:19,730  -->  00:00:22,608
and now I'm just creating a new file here.
9

9

00:00:22,608  -->  00:00:25,775
This one will be called challenges.js.
10

10

00:00:30,624  -->  00:00:33,423
So I paste all my code here and
11

11

00:00:33,423  -->  00:00:36,835
I will put these challenges at the top.
12

12

00:00:36,835  -->  00:00:39,252
Don't need this one here too.
13

13

00:00:40,204  -->  00:00:43,067
And we already know the game rules.
14

14

00:00:43,067  -->  00:00:46,962
Alright, so here are all three challenges.
15

15

00:00:46,962  -->  00:00:50,051
Actually, another thing is that now I have
16

16

00:00:50,051  -->  00:00:53,839
to comment out this part of the code
17

17

00:00:53,839  -->  00:00:56,198
and link our new javascript file
18

18

00:00:56,198  -->  00:00:58,386
to this html document.
19

19

00:00:58,386  -->  00:01:01,553
So script, source, and now challenges.
20

20

00:01:06,353  -->  00:01:09,442
So let's start with the first one, of course.
21

21

00:01:09,442  -->  00:01:11,597
So a player loses his entire score
22

22

00:01:11,597  -->  00:01:14,480
when he rolls two six in a row.
23

23

00:01:14,480  -->  00:01:16,755
So as I already mentioned in the hint,
24

24

00:01:16,755  -->  00:01:21,104
we need a variable where we can store previous dice rolls.
25

25

00:01:21,104  -->  00:01:22,398
So let's do that.
26

26

00:01:22,398  -->  00:01:25,392
And of course, we are going to do that
27

27

00:01:25,392  -->  00:01:27,750
right here in the function which handles
28

28

00:01:27,750  -->  00:01:31,210
all of our dice number generation
29

29

00:01:31,210  -->  00:01:34,959
and displaying in the user interface.
30

30

00:01:34,959  -->  00:01:38,418
So our dice value is generated here.
31

31

00:01:38,418  -->  00:01:40,446
What I'm now going to do is to create
32

32

00:01:40,446  -->  00:01:44,472
a variable at the very end of this function
33

33

00:01:44,472  -->  00:01:46,258
but still inside of this if statement
34

34

00:01:46,258  -->  00:01:49,419
that we added in the last lecture.
35

35

00:01:49,419  -->  00:01:51,724
So here I'm going to declare a new variable.
36

36

00:01:51,724  -->  00:01:53,077
Var,
37

37

00:01:53,077  -->  00:01:53,910
lastDice,
38

38

00:01:55,762  -->  00:02:00,400
And what I'm going to do is to set it to dice.
39

39

00:02:00,400  -->  00:02:01,734
So let me explain that.
40

40

00:02:01,734  -->  00:02:03,723
So we generate a dice number here,
41

41

00:02:03,723  -->  00:02:05,629
then we do all of this stuff,
42

42

00:02:05,629  -->  00:02:07,861
and then we check the dice number.
43

43

00:02:07,861  -->  00:02:10,792
So if we then store the last dice number
44

44

00:02:10,792  -->  00:02:13,057
we can use that variable the next time
45

45

00:02:13,057  -->  00:02:14,979
that the function runs.
46

46

00:02:14,979  -->  00:02:16,505
But actually not yet,
47

47

00:02:16,505  -->  00:02:17,936
because this variable
48

48

00:02:17,936  -->  00:02:20,093
should not be declared here,
49

49

00:02:20,093  -->  00:02:21,926
but in a global scope.
50

50

00:02:22,924  -->  00:02:26,757
Let me simply create a new var here: lastDice.
51

51

00:02:29,463  -->  00:02:32,850
And the reason for that is that once the function returns,
52

52

00:02:32,850  -->  00:02:35,435
so this function here returns,
53

53

00:02:35,435  -->  00:02:38,790
then the value of lastdice will get lost
54

54

00:02:38,790  -->  00:02:40,920
if we only declare it in here.
55

55

00:02:40,920  -->  00:02:42,321
So for example, the value stored
56

56

00:02:42,321  -->  00:02:45,572
in this dice variable here will not be accessible to us
57

57

00:02:45,572  -->  00:02:47,645
after this function returns.
58

58

00:02:47,645  -->  00:02:50,813
But we need this lastDice value the next time
59

59

00:02:50,813  -->  00:02:53,207
that someone hits the roll button.
60

60

00:02:53,207  -->  00:02:54,995
And that's because now,
61

61

00:02:54,995  -->  00:02:57,305
down here in our if else statement
62

62

00:02:57,305  -->  00:03:00,472
we are going to add another condition.
63

63

00:03:02,571  -->  00:03:04,760
So we want the player to lose his score
64

64

00:03:04,760  -->  00:03:06,244
when the current value and the
65

65

00:03:06,244  -->  00:03:08,735
lastDice value are both a six.
66

66

00:03:08,735  -->  00:03:10,372
So how do we do that?
67

67

00:03:10,372  -->  00:03:12,705
So, dice must be six and now
68

68

00:03:14,830  -->  00:03:17,750
the boolean operators are back,
69

69

00:03:17,750  -->  00:03:20,315
so the dice value should be six
70

70

00:03:20,315  -->  00:03:23,315
and the lastDice should also be six.
71

71

00:03:26,581  -->  00:03:29,664
And then, player loses score and then
72

72

00:03:34,967  -->  00:03:38,717
of course, we still also want this part here.
73

73

00:03:39,563  -->  00:03:43,730
So else, and then the rest of the code that we already had.
74

74

00:03:44,732  -->  00:03:47,858
OK, so once more, at the end of this function
75

75

00:03:47,858  -->  00:03:50,205
we stored the value that we rolled
76

76

00:03:50,205  -->  00:03:52,841
with our dice in an external variable.
77

77

00:03:52,841  -->  00:03:55,673
So a variable that was defined outside
78

78

00:03:55,673  -->  00:03:58,142
of the scope of this function here.
79

79

00:03:58,142  -->  00:04:01,412
So we do that at the end of all this code here,
80

80

00:04:01,412  -->  00:04:04,119
so that the next time that someone rolls the dice
81

81

00:04:04,119  -->  00:04:06,516
we have still access to that variable
82

82

00:04:06,516  -->  00:04:09,915
and can then perform this check here.
83

83

00:04:09,915  -->  00:04:11,725
When we just rolled a six,
84

84

00:04:11,725  -->  00:04:13,988
and we rolled a six the last time,
85

85

00:04:13,988  -->  00:04:16,130
then the player loses his score.
86

86

00:04:16,130  -->  00:04:18,043
And if this does not happen,
87

87

00:04:18,043  -->  00:04:22,127
then we, of course, apply the logic that we had before.
88

88

00:04:22,127  -->  00:04:25,320
Alright, so how does the player lose the score?
89

89

00:04:25,320  -->  00:04:28,237
Remember, we used a scores variable
90

90

00:04:29,265  -->  00:04:33,056
which is an array to store these values.
91

91

00:04:33,056  -->  00:04:36,933
So all we need to do is to send it back to zero.
92

92

00:04:36,933  -->  00:04:39,153
And such as have done all the time,
93

93

00:04:39,153  -->  00:04:41,348
we use the activePlayer variable here
94

94

00:04:41,348  -->  00:04:43,513
to define which score it is from
95

95

00:04:43,513  -->  00:04:47,661
the first or the second player and set it back to zero.
96

96

00:04:47,661  -->  00:04:49,593
So that's really simple.
97

97

00:04:49,593  -->  00:04:50,987
And then, of course, we need to update
98

98

00:04:50,987  -->  00:04:53,788
the dump as well, so that on our webpage
99

99

00:04:53,788  -->  00:04:57,067
we see this value, zero, as well.
100

100

00:04:57,067  -->  00:04:59,251
So instead of writing it all over again,
101

101

00:04:59,251  -->  00:05:00,978
make it a little bit quicker,
102

102

00:05:00,978  -->  00:05:03,811
I will just get it from down here.
103

103

00:05:05,876  -->  00:05:07,876
So, now it's not scores,
104

104

00:05:09,959  -->  00:05:13,031
well we could actually leave this as it is here
105

105

00:05:13,031  -->  00:05:16,554
because scores activePlayer is now zero.
106

106

00:05:16,554  -->  00:05:20,137
But we can also just set it to zero, right?
107

107

00:05:21,015  -->  00:05:24,418
Because we already know that that is the value.
108

108

00:05:24,418  -->  00:05:25,751
And what also happens then,
109

109

00:05:25,751  -->  00:05:28,453
is that it's now next player's turn.
110

110

00:05:28,453  -->  00:05:31,622
And so, therefore, we once again use our
111

111

00:05:31,622  -->  00:05:34,263
nextPlayer function that we created before
112

112

00:05:34,263  -->  00:05:38,308
to apply the don't repeat yourself or dry principle.
113

113

00:05:38,308  -->  00:05:40,166
And now this should work.
114

114

00:05:40,166  -->  00:05:43,583
So let's come back here and refresh this.
115

115

00:05:44,855  -->  00:05:45,938
So let's try.
116

116

00:05:48,967  -->  00:05:50,757
Actually I should hold because
117

117

00:05:50,757  -->  00:05:53,356
otherwise there's no score to lose, right?
118

118

00:05:53,356  -->  00:05:56,747
Alright, so we see we lost some score here,
119

119

00:05:56,747  -->  00:06:00,449
we didn't see it because it was too quick.
120

120

00:06:00,449  -->  00:06:02,366
So let me try it again.
121

121

00:06:06,412  -->  00:06:08,711
Alright, so here we had it.
122

122

00:06:08,711  -->  00:06:10,159
Once again we lost a score here
123

123

00:06:10,159  -->  00:06:12,692
after rolling two six in a row.
124

124

00:06:12,692  -->  00:06:14,175
It's not really visible in the video
125

125

00:06:14,175  -->  00:06:16,356
but I actually clicked twice and there
126

126

00:06:16,356  -->  00:06:18,475
were two sixes and we lost the score.
127

127

00:06:18,475  -->  00:06:22,822
And I'm sure you will experience that for yourself as well.
128

128

00:06:22,822  -->  00:06:25,044
So in the next video, we have the solution
129

129

00:06:25,044  -->  00:06:27,127
for the second challenge.
