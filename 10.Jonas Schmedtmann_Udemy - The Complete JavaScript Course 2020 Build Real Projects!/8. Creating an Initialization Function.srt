1
1

00:00:01,425  -->  00:00:03,274
<v Instructor>In order to make our app structure,</v>
2

2

00:00:03,274  -->  00:00:07,410
even a little bit better, let's now create an init function
3

3

00:00:07,410  -->  00:00:11,410
such as we did with our pig game project before.
4

4

00:00:12,966  -->  00:00:16,450
So in this lecture you're gonna learn how and why
5

5

00:00:16,450  -->  00:00:19,194
we should create an initialization function
6

6

00:00:19,194  -->  00:00:21,527
in our current architecture.
7

7

00:00:23,469  -->  00:00:26,773
So here is our controller again and I feel like things
8

8

00:00:26,773  -->  00:00:30,012
are all a bit scattered are here in the controller,
9

9

00:00:30,012  -->  00:00:34,134
like these event listeners here are just hanging around here
10

10

00:00:34,134  -->  00:00:37,175
and then up here we have this variable declaration
11

11

00:00:37,175  -->  00:00:39,033
and so I think we should organize this a bit
12

12

00:00:39,033  -->  00:00:42,284
and make it so that we only have functions here
13

13

00:00:42,284  -->  00:00:44,275
in the controller.
14

14

00:00:44,275  -->  00:00:48,442
So let's create a function here called setup event listeners
15

15

00:00:50,004  -->  00:00:53,316
okay, so a function in which all our event listeners
16

16

00:00:53,316  -->  00:00:56,158
would be placed because right now we have two
17

17

00:00:56,158  -->  00:00:59,606
but over the course of this project we will probably
18

18

00:00:59,606  -->  00:01:03,019
add some more, so let's do that.
19

19

00:01:03,019  -->  00:01:05,186
So, setup event listeners,
20

20

00:01:10,049  -->  00:01:13,966
so a function, and we don't need any parameters
21

21

00:01:14,832  -->  00:01:18,999
and so I'm just going to copy these event listeners
22

22

00:01:20,363  -->  00:01:22,780
right here into our function.
23

23

00:01:24,695  -->  00:01:28,465
We don't need this extra space here, okay,
24

24

00:01:28,465  -->  00:01:32,632
so here I left out a semicolon and now this can go.
25

25

00:01:37,913  -->  00:01:40,854
And also into our function should of course
26

26

00:01:40,854  -->  00:01:42,521
go this here, right?
27

27

00:01:45,976  -->  00:01:49,827
because we'll only need these DOM elements here
28

28

00:01:49,827  -->  00:01:51,827
for our event listeners.
29

29

00:01:52,924  -->  00:01:55,362
Okay, so now we have a function that sets up
30

30

00:01:55,362  -->  00:01:58,715
all our event listeners and we have a function
31

31

00:01:58,715  -->  00:02:02,586
that gets called when we want to add a new item.
32

32

00:02:02,586  -->  00:02:05,451
And these are both private functions, right?
33

33

00:02:05,451  -->  00:02:07,580
they're not exposed to the public.
34

34

00:02:07,580  -->  00:02:11,747
Now, if we want these event listeners here to be added
35

35

00:02:12,925  -->  00:02:16,508
or to be setup then these lines of code here, of course,
36

36

00:02:16,508  -->  00:02:18,146
need to run, right?
37

37

00:02:18,146  -->  00:02:19,943
Which means that this function,
38

38

00:02:19,943  -->  00:02:23,397
the setup event listener function has to be called somehow.
39

39

00:02:23,397  -->  00:02:26,627
And up until this point this wasn't the problem
40

40

00:02:26,627  -->  00:02:30,639
because all of this was here in this IIFE,
41

41

00:02:30,639  -->  00:02:33,393
so in this Immediately-Invoked Function Expression
42

42

00:02:33,393  -->  00:02:36,227
meaning that we didn't have to think about if this code
43

43

00:02:36,227  -->  00:02:37,441
is executed or not
44

44

00:02:37,441  -->  00:02:40,219
because it's automatically executed, right?
45

45

00:02:40,219  -->  00:02:43,101
But now we need to call this function
46

46

00:02:43,101  -->  00:02:44,808
and the best and most common way to do this
47

47

00:02:44,808  -->  00:02:48,941
is to create a public initialization function,
48

48

00:02:48,941  -->  00:02:51,013
which we're going to call init.
49

49

00:02:51,013  -->  00:02:52,528
So let's now do that.
50

50

00:02:52,528  -->  00:02:55,363
So since we want it to be public, we need to return it
51

51

00:02:55,363  -->  00:02:57,030
in an object, right?
52

52

00:03:00,945  -->  00:03:03,195
And we simply call it init.
53

53

00:03:07,499  -->  00:03:10,991
Alright, so in this function we can, for example,
54

54

00:03:10,991  -->  00:03:13,289
say that the application has started
55

55

00:03:13,289  -->  00:03:16,956
with a simple console log just to test this.
56

56

00:03:23,944  -->  00:03:28,257
And then we need to call our setup event listeners function
57

57

00:03:28,257  -->  00:03:30,071
which was why we created this init function
58

58

00:03:30,071  -->  00:03:32,238
in the first place, right?
59

59

00:03:33,363  -->  00:03:38,137
So we setup event listeners, okay so that's it for now.
60

60

00:03:38,137  -->  00:03:40,299
This init function will be useful for other things
61

61

00:03:40,299  -->  00:03:43,846
in the future, so that's also a reason why we created this.
62

62

00:03:43,846  -->  00:03:46,513
But for now this is enough here.
63

63

00:03:48,081  -->  00:03:49,971
So this means that our event listeners
64

64

00:03:49,971  -->  00:03:51,992
are only going to be setup
65

65

00:03:51,992  -->  00:03:55,062
as soon as we call the init function,
66

66

00:03:55,062  -->  00:03:56,347
so we need to do that and we do that
67

67

00:03:56,347  -->  00:03:59,096
outside of the controllers.
68

68

00:03:59,096  -->  00:04:00,854
So this will be the only line of code
69

69

00:04:00,854  -->  00:04:04,320
that's going to be placed on the outside.
70

70

00:04:04,320  -->  00:04:08,487
So controller dot init and without this line of code
71

71

00:04:12,284  -->  00:04:14,022
nothing is ever going to happen
72

72

00:04:14,022  -->  00:04:16,714
and that's because there will be no event listeners, right?
73

73

00:04:16,714  -->  00:04:19,822
And without even listeners we cannot input data
74

74

00:04:19,822  -->  00:04:23,793
and without data, there is no application.
75

75

00:04:23,793  -->  00:04:26,543
So let's check out if this works.
76

76

00:04:28,953  -->  00:04:30,946
Alright, so application has started,
77

77

00:04:30,946  -->  00:04:33,446
let's see if this still works.
78

78

00:04:35,051  -->  00:04:38,127
Yes, so we still see our object here
79

79

00:04:38,127  -->  00:04:40,889
which we still print to the console.
80

80

00:04:40,889  -->  00:04:45,705
And we can actually now go ahead and delete that
81

81

00:04:45,705  -->  00:04:49,455
console dot log, if I could find it at least.
82

82

00:04:50,614  -->  00:04:54,781
Here it is, okay, so yeah, this is our init function.
83

83

00:04:56,526  -->  00:04:58,689
We created it because we want to have a place
84

84

00:04:58,689  -->  00:05:02,032
where we can put all the code that we want to be executed
85

85

00:05:02,032  -->  00:05:04,804
right at the beginning when our application starts
86

86

00:05:04,804  -->  00:05:08,403
and right now, that is to setup the event listeners
87

87

00:05:08,403  -->  00:05:11,561
but there will be more code in the future,
88

88

00:05:11,561  -->  00:05:13,348
so more things that we have to do
89

89

00:05:13,348  -->  00:05:16,051
right at the start of our app.
90

90

00:05:16,051  -->  00:05:17,939
Alright, that's it for this lecture,
91

91

00:05:17,939  -->  00:05:22,106
so let's now move on and create some function constructors.
