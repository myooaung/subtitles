1
1

00:00:01,110  -->  00:00:02,090
<v Jonas>Welcome back</v>
2

2

00:00:02,090  -->  00:00:05,430
to one of the most fundamental concepts in Javascript,
3

3

00:00:05,430  -->  00:00:07,290
and that is functions.
4

4

00:00:07,290  -->  00:00:08,960
So, if we have a piece of code
5

5

00:00:08,960  -->  00:00:10,930
that we want to run a lot of times,
6

6

00:00:10,930  -->  00:00:13,210
we can put that into a function
7

7

00:00:13,210  -->  00:00:16,520
instead of writing it over and over again, okay?
8

8

00:00:16,520  -->  00:00:18,440
So functions are like containers
9

9

00:00:18,440  -->  00:00:20,180
that hold some lines of code
10

10

00:00:20,180  -->  00:00:22,530
and we can pass arguments into them
11

11

00:00:22,530  -->  00:00:25,220
and they can then return us our result.
12

12

00:00:25,220  -->  00:00:26,850
And instead of talking more about this,
13

13

00:00:26,850  -->  00:00:27,870
let me actually show you
14

14

00:00:27,870  -->  00:00:30,470
a very small and very simple example.
15

15

00:00:30,470  -->  00:00:32,340
So this is how we write functions.
16

16

00:00:32,340  -->  00:00:34,060
We simply write function
17

17

00:00:34,060  -->  00:00:37,330
and then we give the function a name.
18

18

00:00:37,330  -->  00:00:38,810
So just like a variable,
19

19

00:00:38,810  -->  00:00:41,460
we have to give a function also a name.
20

20

00:00:41,460  -->  00:00:42,740
And in this case what we want to do
21

21

00:00:42,740  -->  00:00:44,683
is to calculate an age.
22

22

00:00:46,370  -->  00:00:47,980
So calculate age.
23

23

00:00:47,980  -->  00:00:49,240
And as I mentioned before,
24

24

00:00:49,240  -->  00:00:52,960
we can pass something called arguments into a function.
25

25

00:00:52,960  -->  00:00:54,970
And so we open up parenthesis,
26

26

00:00:54,970  -->  00:00:58,190
and then we say the arguments that we want to pass in.
27

27

00:00:58,190  -->  00:01:03,190
And what we want to pass is called birth year, okay?
28

28

00:01:03,240  -->  00:01:04,710
And so this will kind of be like
29

29

00:01:04,710  -->  00:01:07,580
a variable inside of the function, alright?
30

30

00:01:07,580  -->  00:01:08,900
But more on that a bit later.
31

31

00:01:08,900  -->  00:01:12,350
So, we say function, then the name of the function,
32

32

00:01:12,350  -->  00:01:15,330
then the argument that we want to pass into the function,
33

33

00:01:15,330  -->  00:01:17,200
and then finally the curly braces
34

34

00:01:17,200  -->  00:01:18,930
in order to write the function block.
35

35

00:01:18,930  -->  00:01:22,000
So all the code that's in here will be the function block.
36

36

00:01:22,000  -->  00:01:25,612
Now we can of course pass zero arguments into this
37

37

00:01:25,612  -->  00:01:27,840
or we can also pass multiple.
38

38

00:01:27,840  -->  00:01:31,200
So we could pass more like x and y,
39

39

00:01:31,200  -->  00:01:32,880
separated by commas like this,
40

40

00:01:32,880  -->  00:01:35,160
but in this case, we only want one argument
41

41

00:01:35,160  -->  00:01:37,980
which is the birth year, alright?
42

42

00:01:37,980  -->  00:01:39,620
So we pass in the birth year,
43

43

00:01:39,620  -->  00:01:43,070
and then we can return something from the function.
44

44

00:01:43,070  -->  00:01:44,780
So in this case, what we want to return
45

45

00:01:44,780  -->  00:01:46,820
is the age of the person.
46

46

00:01:46,820  -->  00:01:48,460
So we can calculate that by doing
47

47

00:01:48,460  -->  00:01:53,148
2018 minus the year in which the person was born.
48

48

00:01:53,148  -->  00:01:54,950
And so we can now basically use
49

49

00:01:54,950  -->  00:01:57,630
this variable inside of the function, okay?
50

50

00:01:57,630  -->  00:02:00,463
So this birth year parameter that we defined here
51

51

00:02:00,463  -->  00:02:02,820
in this function definition up here.
52

52

00:02:02,820  -->  00:02:05,120
So I like to think of a function as
53

53

00:02:05,120  -->  00:02:07,750
like a machine that receives some input,
54

54

00:02:07,750  -->  00:02:09,380
then it does some stuff with it,
55

55

00:02:09,380  -->  00:02:11,100
and finally returns something else.
56

56

00:02:11,100  -->  00:02:14,210
So something you created from the data that we put in.
57

57

00:02:14,210  -->  00:02:16,130
So that is our function definition.
58

58

00:02:16,130  -->  00:02:19,720
Now let's actually go ahead and use this function, okay?
59

59

00:02:19,720  -->  00:02:20,853
So to call this.
60

60

00:02:21,710  -->  00:02:24,070
So we can say now calculate age,
61

61

00:02:24,070  -->  00:02:25,490
then we open the parentheses,
62

62

00:02:25,490  -->  00:02:28,570
and now's the time where we pass in that argument.
63

63

00:02:28,570  -->  00:02:31,360
So let's say that we want to pass in 1990,
64

64

00:02:31,360  -->  00:02:34,250
and so like this we will call the function.
65

65

00:02:34,250  -->  00:02:36,300
And the function will then take this value,
66

66

00:02:36,300  -->  00:02:38,980
this 1990, as the birth year.
67

67

00:02:38,980  -->  00:02:40,470
So this is now 1990,
68

68

00:02:40,470  -->  00:02:42,390
and then we will do this calculation,
69

69

00:02:42,390  -->  00:02:44,790
2018 minus that birth year,
70

70

00:02:44,790  -->  00:02:46,940
so in this case, minus 1990,
71

71

00:02:46,940  -->  00:02:49,593
and will then return a result, okay?
72

72

00:02:49,593  -->  00:02:52,110
So that result we have to store it somewhere.
73

73

00:02:52,110  -->  00:02:56,475
So let's create a new variable for that age John.
74

74

00:02:56,475  -->  00:02:59,530
And so in age John here will be stored
75

75

00:02:59,530  -->  00:03:03,092
the result of calling this calculate age function.
76

76

00:03:03,092  -->  00:03:08,092
Alright, so test that out and log age John to console.
77

77

00:03:11,350  -->  00:03:12,340
And here we go.
78

78

00:03:12,340  -->  00:03:14,770
So, 28 years old.
79

79

00:03:14,770  -->  00:03:18,620
And that makes total sense because it's 2018 minus 1990.
80

80

00:03:18,620  -->  00:03:22,520
So, again, we define this parameter here or this argument
81

81

00:03:22,520  -->  00:03:24,620
and you will hear me saying these two words.
82

82

00:03:24,620  -->  00:03:26,450
And they're not exactly the same, okay?
83

83

00:03:26,450  -->  00:03:28,290
But for now let's just keep it simple
84

84

00:03:28,290  -->  00:03:30,620
and assume that arguments and parameters
85

85

00:03:30,620  -->  00:03:32,270
are the same thing, okay?
86

86

00:03:32,270  -->  00:03:34,760
So we define this argument here of birth year,
87

87

00:03:34,760  -->  00:03:37,810
and so when we call the function calculate age down here,
88

88

00:03:37,810  -->  00:03:39,420
and we pass in the value,
89

89

00:03:39,420  -->  00:03:42,120
then this birth year variable here or argument
90

90

00:03:42,120  -->  00:03:44,690
will be assigned that value that we pass in.
91

91

00:03:44,690  -->  00:03:46,400
So, 1990 in this case.
92

92

00:03:46,400  -->  00:03:49,269
And then inside the function we can use that.
93

93

00:03:49,269  -->  00:03:52,273
Alright, so let's now calculate some more ages.
94

94

00:03:52,273  -->  00:03:54,133
So let me copy this here.
95

95

00:03:55,180  -->  00:03:57,035
And say we want age Mike.
96

96

00:03:57,035  -->  00:03:59,473
Let's say 1948.
97

97

00:04:00,890  -->  00:04:04,030
And age, let's say Jane now,
98

98

00:04:04,030  -->  00:04:08,260
so a new person here. 1969.
99

99

00:04:08,260  -->  00:04:11,323
Alright, and now we can log all of these to the console.
100

100

00:04:15,470  -->  00:04:17,810
And so let's see.
101

101

00:04:17,810  -->  00:04:20,380
So 28, 70, and 49.
102

102

00:04:20,380  -->  00:04:22,950
So now you start seeing the power of the function
103

103

00:04:22,950  -->  00:04:24,400
because instead of having to write
104

104

00:04:24,400  -->  00:04:27,440
that same code here over and over again,
105

105

00:04:27,440  -->  00:04:29,990
we can simply always call the same function.
106

106

00:04:29,990  -->  00:04:30,823
Now in this case,
107

107

00:04:30,823  -->  00:04:34,230
it would probably not be so problematic to write this code.
108

108

00:04:34,230  -->  00:04:35,510
It's just one line,
109

109

00:04:35,510  -->  00:04:37,780
but of course functions can be huge.
110

110

00:04:37,780  -->  00:04:39,480
They can be much bigger than this,
111

111

00:04:39,480  -->  00:04:43,220
and so then it of course becomes a lot more useful.
112

112

00:04:43,220  -->  00:04:45,880
And so functions are very, very important
113

113

00:04:45,880  -->  00:04:48,800
for one of the most programming principles,
114

114

00:04:48,800  -->  00:04:52,420
which is called don't repeat yourself, or DRY.
115

115

00:04:52,420  -->  00:04:55,430
Okay, so the DRY principle is something
116

116

00:04:55,430  -->  00:04:57,810
really important in programming as general.
117

117

00:04:57,810  -->  00:04:59,470
So you should never repeat yourself.
118

118

00:04:59,470  -->  00:05:00,980
Never write the same code,
119

119

00:05:00,980  -->  00:05:03,160
and instead put it into a function.
120

120

00:05:03,160  -->  00:05:05,160
And so that's why we have functions
121

121

00:05:05,160  -->  00:05:08,410
in Javascript and in all programming languages in general.
122

122

00:05:08,410  -->  00:05:10,436
So, that was just a very simple example
123

123

00:05:10,436  -->  00:05:12,690
of a very, very simple function.
124

124

00:05:12,690  -->  00:05:15,380
So let's now add some more complexity to it
125

125

00:05:15,380  -->  00:05:16,930
and let's create a new function,
126

126

00:05:16,930  -->  00:05:20,300
which will calculate the years until retirement.
127

127

00:05:20,300  -->  00:05:22,470
So based on our birth year,
128

128

00:05:22,470  -->  00:05:24,220
we will be able to calculate
129

129

00:05:24,220  -->  00:05:26,895
how many years we have left until we retire.
130

130

00:05:26,895  -->  00:05:29,850
So that's a little bit more complex,
131

131

00:05:29,850  -->  00:05:32,113
and so it's a good use case for a function.
132

132

00:05:34,070  -->  00:05:37,908
So years until retirement.
133

133

00:05:37,908  -->  00:05:41,100
And now let's pass in the birth year
134

134

00:05:41,100  -->  00:05:43,626
just as before and also the first name.
135

135

00:05:43,626  -->  00:05:44,740
So as I mentioned,
136

136

00:05:44,740  -->  00:05:47,710
we can pass multiple things into a function,
137

137

00:05:47,710  -->  00:05:48,810
not just one argument.
138

138

00:05:48,810  -->  00:05:52,600
We can pass two arguments or zero or three, four,
139

139

00:05:52,600  -->  00:05:54,270
and as many as we want, really.
140

140

00:05:54,270  -->  00:05:57,210
So how are we going to calculate the years until retirement?
141

141

00:05:57,210  -->  00:06:00,430
Well first of all, we need to calculate the age.
142

142

00:06:00,430  -->  00:06:03,000
And so now let's actually call the other function
143

143

00:06:03,000  -->  00:06:04,650
that we already coded before.
144

144

00:06:04,650  -->  00:06:06,020
And so what this means is that
145

145

00:06:06,020  -->  00:06:09,640
functions can actually also call other functions, alright?
146

146

00:06:09,640  -->  00:06:12,148
And so let's calculate the age
147

147

00:06:12,148  -->  00:06:15,680
based on the birth year again, okay?
148

148

00:06:15,680  -->  00:06:17,440
And maybe let's give it here another name
149

149

00:06:17,440  -->  00:06:19,420
so that it's not so confusing.
150

150

00:06:19,420  -->  00:06:21,699
So I'm just calling this year now here, okay?
151

151

00:06:21,699  -->  00:06:23,230
And if I change it up here, then
152

152

00:06:23,230  -->  00:06:26,640
of course I have to also have to change it here, alright?
153

153

00:06:26,640  -->  00:06:28,220
And so when we now call this function,
154

154

00:06:28,220  -->  00:06:29,970
this years until retirement,
155

155

00:06:29,970  -->  00:06:34,260
then we pass in an argument as the year, let's say 1990,
156

156

00:06:34,260  -->  00:06:37,300
and that will then be passed into calculate age,
157

157

00:06:37,300  -->  00:06:38,720
so 1990 again,
158

158

00:06:38,720  -->  00:06:40,681
and that in turn will be passed
159

159

00:06:40,681  -->  00:06:43,100
into the calculate age function here
160

160

00:06:43,100  -->  00:06:46,308
and can be used to return the age, alright?
161

161

00:06:46,308  -->  00:06:49,840
And so that age will then be stored in this variable,
162

162

00:06:49,840  -->  00:06:51,890
and then we can calculate the retirement.
163

163

00:06:54,720  -->  00:06:56,430
So the retirement is
164

164

00:06:56,430  -->  00:07:00,270
the age at which we retire minus our current age.
165

165

00:07:00,270  -->  00:07:02,590
So let's say that we retire at 65 years,
166

166

00:07:02,590  -->  00:07:05,253
so that's kind of a standard, I guess at this time,
167

167

00:07:05,253  -->  00:07:07,840
and then minus the age.
168

168

00:07:07,840  -->  00:07:09,300
And that gives us how many years
169

169

00:07:09,300  -->  00:07:11,420
do we have left until retirement?
170

170

00:07:11,420  -->  00:07:14,640
Okay, now functions don't always have to return something.
171

171

00:07:14,640  -->  00:07:16,390
So up here we returned something
172

172

00:07:16,390  -->  00:07:19,190
so that we can then use the value later.
173

173

00:07:19,190  -->  00:07:21,410
But in this case we don't want to return anything.
174

174

00:07:21,410  -->  00:07:23,560
We can simply log something to the console.
175

175

00:07:26,170  -->  00:07:31,170
So we wanna say first name retires in
176

176

00:07:33,270  -->  00:07:37,473
and then retirement plus years.
177

177

00:07:40,060  -->  00:07:42,422
Okay, and so that's our function.
178

178

00:07:42,422  -->  00:07:44,460
And let's now call it.
179

179

00:07:44,460  -->  00:07:47,670
So, years until retirement.
180

180

00:07:47,670  -->  00:07:49,960
Let's again use the year of 1990,
181

181

00:07:49,960  -->  00:07:51,833
and then the first name is John.
182

182

00:07:54,560  -->  00:07:57,700
Okay, and this time we are not saving the result anywhere
183

183

00:07:57,700  -->  00:07:59,410
because there is not really a result.
184

184

00:07:59,410  -->  00:08:01,020
So that's what I just mentioned before.
185

185

00:08:01,020  -->  00:08:03,350
There is no return here in this function.
186

186

00:08:03,350  -->  00:08:04,960
And so there's no result,
187

187

00:08:04,960  -->  00:08:07,720
and so we don't have to store any result anywhere.
188

188

00:08:07,720  -->  00:08:10,130
So, if we just now call this function like this,
189

189

00:08:10,130  -->  00:08:11,810
then all that's gonna happen is
190

190

00:08:11,810  -->  00:08:13,800
that these calculations will be done,
191

191

00:08:13,800  -->  00:08:16,700
and then we will log something to the console.
192

192

00:08:16,700  -->  00:08:18,230
So, let's check that out.
193

193

00:08:18,230  -->  00:08:21,910
And so John retires in 37 years.
194

194

00:08:21,910  -->  00:08:24,180
So let's quickly recap what happened here.
195

195

00:08:24,180  -->  00:08:25,629
We passed in two arguments.
196

196

00:08:25,629  -->  00:08:29,610
1990, which is now called year inside of this function,
197

197

00:08:29,610  -->  00:08:32,290
and we also passed in this string called John,
198

198

00:08:32,290  -->  00:08:35,550
which will be called first name inside of that function.
199

199

00:08:35,550  -->  00:08:36,900
And so in our console dot log,
200

200

00:08:36,900  -->  00:08:39,610
we use that first name here, which is John,
201

201

00:08:39,610  -->  00:08:43,552
and then also the year is used to calculate the age.
202

202

00:08:43,552  -->  00:08:46,860
And that age calculation is, as I mentioned before,
203

203

00:08:46,860  -->  00:08:49,090
done using the calculate age function
204

204

00:08:49,090  -->  00:08:52,230
that we coded up before up here, okay?
205

205

00:08:52,230  -->  00:08:54,760
So functions can call other functions.
206

206

00:08:54,760  -->  00:08:57,090
They also do not have to return anything.
207

207

00:08:57,090  -->  00:08:58,460
It's quite usual that they do,
208

208

00:08:58,460  -->  00:09:01,590
but of course they don't always have to, alright?
209

209

00:09:01,590  -->  00:09:05,550
So, let's now do this with some other years.
210

210

00:09:05,550  -->  00:09:08,891
And we can actually use the same as before.
211

211

00:09:08,891  -->  00:09:11,110
And probably it's easier to just write it out.
212

212

00:09:11,110  -->  00:09:14,573
So, 1969, and here we have Mike,
213

213

00:09:15,680  -->  00:09:17,173
and then also Jane.
214

214

00:09:19,740  -->  00:09:21,680
And so, now you have
215

215

00:09:21,680  -->  00:09:25,000
John retires 37, minus five, and 16,
216

216

00:09:25,000  -->  00:09:27,420
and so hopefully by now you see even better
217

217

00:09:27,420  -->  00:09:31,100
how handy it is to have all this code here in one function.
218

218

00:09:31,100  -->  00:09:33,460
'Cause imagine how repetitive it would be
219

219

00:09:33,460  -->  00:09:36,470
to have to write this for each of these persons, right?
220

220

00:09:36,470  -->  00:09:39,510
Instead, we just put all of this code in one function
221

221

00:09:39,510  -->  00:09:41,580
and therefore keep our code dry.
222

222

00:09:41,580  -->  00:09:45,257
So, DRY remember, means don't repeat yourself, okay?
223

223

00:09:45,257  -->  00:09:46,603
So just one thing that I see here is
224

224

00:09:46,603  -->  00:09:48,830
that we have minus five years here,
225

225

00:09:48,830  -->  00:09:50,312
and what that means is that,
226

226

00:09:50,312  -->  00:09:54,570
this person Mike, in this case, is already retired, okay?
227

227

00:09:54,570  -->  00:09:57,800
So let's add a simple if else statement here.
228

228

00:09:57,800  -->  00:10:02,163
So if, the retirement is greater than 0,
229

229

00:10:04,370  -->  00:10:06,760
well in this case, it means that we still have
230

230

00:10:06,760  -->  00:10:08,840
some years left to retire.
231

231

00:10:08,840  -->  00:10:11,420
And then we want to log this to the console.
232

232

00:10:11,420  -->  00:10:16,310
But else, so basically if the retirement is zero or less,
233

233

00:10:16,310  -->  00:10:18,653
It means that people are already retired.
234

234

00:10:20,030  -->  00:10:21,630
So let's log that to the console
235

235

00:10:22,910  -->  00:10:27,683
First name is already retired.
236

236

00:10:28,622  -->  00:10:31,330
So, take that out,
237

237

00:10:31,330  -->  00:10:33,530
and so Mike is already retired it says now
238

238

00:10:33,530  -->  00:10:35,544
instead of what it had before.
239

239

00:10:35,544  -->  00:10:37,390
Alright, great.
240

240

00:10:37,390  -->  00:10:40,400
So, these are the fundamentals of functions
241

241

00:10:40,400  -->  00:10:43,560
which again, are one of the most fundamentals principles
242

242

00:10:43,560  -->  00:10:45,580
in all programming and of course,
243

243

00:10:45,580  -->  00:10:47,609
also in Javascript, alright?
244

244

00:10:47,609  -->  00:10:49,640
So, what you have to keep in mind here,
245

245

00:10:49,640  -->  00:10:51,060
just to recap, is that
246

246

00:10:51,060  -->  00:10:53,660
we can pass in arguments into a function,
247

247

00:10:53,660  -->  00:10:56,430
like this and like this, like we see here.
248

248

00:10:56,430  -->  00:10:58,640
Then we can return results from a function
249

249

00:10:58,640  -->  00:11:00,765
using the return keyword and we can then
250

250

00:11:00,765  -->  00:11:05,260
save these results into a variables like we did here.
251

251

00:11:05,260  -->  00:11:07,460
Also functions can call other functions
252

252

00:11:07,460  -->  00:11:08,450
like we did here.
253

253

00:11:08,450  -->  00:11:10,210
And they do not need to return something.
254

254

00:11:10,210  -->  00:11:12,360
So it's not mandatory, alright?
255

255

00:11:12,360  -->  00:11:14,110
So that's the fundamentals of functions.
256

256

00:11:14,110  -->  00:11:16,240
Next up, let's talk about something called
257

257

00:11:16,240  -->  00:11:18,893
function expressions and function declarations.
