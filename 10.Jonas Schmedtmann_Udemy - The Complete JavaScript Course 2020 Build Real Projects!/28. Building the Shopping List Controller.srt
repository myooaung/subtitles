1
1

00:00:01,162  -->  00:00:04,268
<v ->And to finish the shopping list part of the app</v>
2

2

00:00:04,268  -->  00:00:07,521
let's now build the controller.
3

3

00:00:07,521  -->  00:00:09,550
So we can close up this file here
4

4

00:00:09,550  -->  00:00:12,987
and go back to our index dot JS controller file.
5

5

00:00:12,987  -->  00:00:17,570
So where do we actually want to add the event listener?
6

6

00:00:18,925  -->  00:00:21,545
And we have to do it right here in this event listener
7

7

00:00:21,545  -->  00:00:24,865
that listens to events on the recipe object.
8

8

00:00:24,865  -->  00:00:26,624
Okay, let's take a look at that.
9

9

00:00:26,624  -->  00:00:29,742
So it's recipe view, so you already have
10

10

00:00:29,742  -->  00:00:32,659
two event listeners on here. Right?
11

11

00:00:34,319  -->  00:00:35,959
So for the plus and the minus button,
12

12

00:00:35,959  -->  00:00:37,748
so the button decrease and increase,
13

13

00:00:37,748  -->  00:00:40,191
and so now we need to add an event listener
14

14

00:00:40,191  -->  00:00:42,370
for the button to add all the ingredients
15

15

00:00:42,370  -->  00:00:46,318
to the list. Okay? And that button is down here,
16

16

00:00:46,318  -->  00:00:48,573
so it's this one, the recipe button.
17

17

00:00:48,573  -->  00:00:51,258
And actually, we see that we have the recipe button
18

18

00:00:51,258  -->  00:00:53,614
also down here, okay, so let's
19

19

00:00:53,614  -->  00:00:56,455
add another class to this one here.
20

20

00:00:56,455  -->  00:00:59,454
So that's the recipe button.
21

21

00:00:59,454  -->  00:01:02,595
Add. And so this will be the class for the button
22

22

00:01:02,595  -->  00:01:06,005
that adds all the ingredients to the list, okay?
23

23

00:01:06,005  -->  00:01:10,303
So going back to this event listener here,
24

24

00:01:10,303  -->  00:01:12,112
we already set this one up to handle
25

25

00:01:12,112  -->  00:01:16,539
all events that happen inside of the recipe object, right?
26

26

00:01:16,539  -->  00:01:18,416
And you need to do it, because we need
27

27

00:01:18,416  -->  00:01:21,249
the event delegation, because all of these elements
28

28

00:01:21,249  -->  00:01:23,200
that we're trying to select here, they're not yet
29

29

00:01:23,200  -->  00:01:26,285
all done by the time that you load up the page, right?
30

30

00:01:26,285  -->  00:01:29,035
And so we need to do it this way.
31

31

00:01:30,357  -->  00:01:33,709
So else if, and we're going to do it
32

32

00:01:33,709  -->  00:01:36,376
in the exact same way as before.
33

33

00:01:38,244  -->  00:01:40,207
So we're going to test if the elements
34

34

00:01:40,207  -->  00:01:43,196
that the target had matches the string
35

35

00:01:43,196  -->  00:01:46,168
that we're looking for. Okay?
36

36

00:01:46,168  -->  00:01:49,863
So this one here, or any of the child elements,
37

37

00:01:49,863  -->  00:01:51,530
so just like before.
38

38

00:01:52,402  -->  00:01:54,935
And so that's the CSS selector for all of
39

39

00:01:54,935  -->  00:01:59,379
the child elements of this element, the recipe button.
40

40

00:01:59,379  -->  00:02:01,863
Okay and again, that's because the click might actually
41

41

00:02:01,863  -->  00:02:03,599
not happen right on the spot in the element
42

42

00:02:03,599  -->  00:02:07,600
but inside of the SVG or even this use element
43

43

00:02:07,600  -->  00:02:09,395
or also the span element. So it can happen
44

44

00:02:09,395  -->  00:02:11,623
on all of these, but you really want it captured
45

45

00:02:11,623  -->  00:02:14,040
on this button itself, right?
46

46

00:02:16,002  -->  00:02:16,835
So, what do we want to happen
47

47

00:02:16,835  -->  00:02:20,130
when the target matches this button here?
48

48

00:02:20,130  -->  00:02:23,901
Well, we are gonna call our controllers function.
49

49

00:02:23,901  -->  00:02:26,716
So the fun stuff we're gonna create next.
50

50

00:02:26,716  -->  00:02:30,287
And so that's it, so we have a recipe controller,
51

51

00:02:30,287  -->  00:02:32,790
we have the search controller, and now we're also
52

52

00:02:32,790  -->  00:02:36,077
going to have a list controller.
53

53

00:02:36,077  -->  00:02:39,660
Recipe, and I'm going to put this one here.
54

54

00:02:42,664  -->  00:02:44,581
So the list controller.
55

55

00:02:49,511  -->  00:02:51,610
So just like before, let's add the steps
56

56

00:02:51,610  -->  00:02:53,302
that you gotta take here in the controller.
57

57

00:02:53,302  -->  00:02:55,885
So first off, create a new list
58

58

00:02:57,343  -->  00:02:59,093
if there is none yet.
59

59

00:03:01,459  -->  00:03:03,787
Right? Because imagine that we add the ingredients
60

60

00:03:03,787  -->  00:03:05,824
to a list and open up another recipe
61

61

00:03:05,824  -->  00:03:07,722
and then we add those ingredients as well.
62

62

00:03:07,722  -->  00:03:09,558
So in that case, we don't want to create a new list,
63

63

00:03:09,558  -->  00:03:11,872
of course, because we already have one, okay?
64

64

00:03:11,872  -->  00:03:15,217
Everything I see already started implementing this okay?
65

65

00:03:15,217  -->  00:03:18,050
So if there is not state dot list,
66

66

00:03:19,708  -->  00:03:23,458
well then, state dot list will be a new list.
67

67

00:03:26,254  -->  00:03:28,088
And that's it. Remember, we don't pass anything
68

68

00:03:28,088  -->  00:03:30,356
into the list because it's empty and we don't
69

69

00:03:30,356  -->  00:03:32,441
need to pass anything in there. We just wanted
70

70

00:03:32,441  -->  00:03:35,263
to basically initialize the element with an empty object.
71

71

00:03:35,263  -->  00:03:37,537
Okay, next up, what are we going to do?
72

72

00:03:37,537  -->  00:03:41,454
Well, what you want to do is add each ingredient
73

73

00:03:43,936  -->  00:03:47,742
to the list. Right? So where are our ingredients?
74

74

00:03:47,742  -->  00:03:51,909
Well, they're at state dot recipe dot ingredients.
75

75

00:03:53,552  -->  00:03:55,872
And remember that this one is an array
76

76

00:03:55,872  -->  00:03:56,981
and so that seems to loop over
77

77

00:03:56,981  -->  00:03:58,987
this array and then for each element
78

78

00:03:58,987  -->  00:04:00,995
in the ingredients, we're going to add a new element
79

79

00:04:00,995  -->  00:04:05,289
to our list, okay? So it's as simple as that.
80

80

00:04:05,289  -->  00:04:06,231
So, for each...
81

81

00:04:06,231  -->  00:04:09,231
(keyboard clicking)
82

82

00:04:10,274  -->  00:04:12,224
So what are we going to do here?
83

83

00:04:12,224  -->  00:04:15,795
We will do state dot list which is the element
84

84

00:04:15,795  -->  00:04:17,461
that you just created up here
85

85

00:04:17,461  -->  00:04:21,689
and now we can call add item on it, right?
86

86

00:04:21,689  -->  00:04:25,138
So that's the data model we just defined a few lessons ago.
87

87

00:04:25,138  -->  00:04:28,207
So we have our add item method here to which we add
88

88

00:04:28,207  -->  00:04:31,521
the count, the unit, and the ingredients, okay?
89

89

00:04:31,521  -->  00:04:35,301
And so let's pass all of that data into the sentence.
90

90

00:04:35,301  -->  00:04:39,051
So we have el dot count, we have el dot unit,
91

91

00:04:41,015  -->  00:04:44,098
and we have el dot ingredient, right?
92

92

00:04:45,093  -->  00:04:47,698
And that's because el is currently one element
93

93

00:04:47,698  -->  00:04:49,494
of the ingredients. And all of the ingredients
94

94

00:04:49,494  -->  00:04:53,131
have of course, a count, a unit, and an ingredient.
95

95

00:04:53,131  -->  00:04:55,526
And now let's take a look again at this function,
96

96

00:04:55,526  -->  00:04:58,178
our add item function, because it will actually
97

97

00:04:58,178  -->  00:05:01,455
immediately return this item to us, okay?
98

98

00:05:01,455  -->  00:05:06,209
And so that's great because we can now take that
99

99

00:05:06,209  -->  00:05:07,890
so let's save it to this variable.
100

100

00:05:07,890  -->  00:05:10,981
And let's add this item right away to the user interface.
101

101

00:05:10,981  -->  00:05:13,898
And I think we hadn't yet imported.
102

102

00:05:15,314  -->  00:05:17,973
Now that's right. So recipe view,
103

103

00:05:17,973  -->  00:05:21,056
and this one is called the list view.
104

104

00:05:22,859  -->  00:05:24,859
So we have, and where is it?
105

105

00:05:26,750  -->  00:05:29,833
So we have list view, dot render item
106

106

00:05:31,143  -->  00:05:33,301
and then we just pass in the item.
107

107

00:05:33,301  -->  00:05:38,013
So you remember, it is... we don't need this one anymore.
108

108

00:05:38,013  -->  00:05:41,981
So we have our render item function here
109

109

00:05:41,981  -->  00:05:44,619
which receives an item, so we just passed there
110

110

00:05:44,619  -->  00:05:47,042
and then it reads all of the data that it needs.
111

111

00:05:47,042  -->  00:05:50,807
And basically prints it to the user interface.
112

112

00:05:50,807  -->  00:05:54,140
Okay, so add each ingredient to the list
113

113

00:05:54,999  -->  00:05:57,899
and user interface. And that should actually be it
114

114

00:05:57,899  -->  00:06:01,816
for this step. So lets now finally test it out.
115

115

00:06:03,965  -->  00:06:06,040
You can actually test it with this here.
116

116

00:06:06,040  -->  00:06:08,758
So add to shopping list. Whoa!
117

117

00:06:08,758  -->  00:06:11,796
And here they are! So it's really working already.
118

118

00:06:11,796  -->  00:06:14,300
That's awesome. So it basically loops
119

119

00:06:14,300  -->  00:06:16,217
through all of these ingredients here
120

120

00:06:16,217  -->  00:06:20,221
and then put each of them here in the list, okay?
121

121

00:06:20,221  -->  00:06:22,722
And so we already have this loop here,
122

122

00:06:22,722  -->  00:06:24,383
so we have this for each loop here,
123

123

00:06:24,383  -->  00:06:26,839
and that's why we didn't need to include a method here
124

124

00:06:26,839  -->  00:06:30,760
in the list view that loops over all the items.
125

125

00:06:30,760  -->  00:06:35,760
So we did that in the search view, so we had render results
126

126

00:06:36,124  -->  00:06:38,607
and then we looped over all of these results
127

127

00:06:38,607  -->  00:06:41,410
and rendered them one by one. But in this case,
128

128

00:06:41,410  -->  00:06:44,649
that's not necessary because we already have this loop here
129

129

00:06:44,649  -->  00:06:47,112
and so it's easier to just pass this one simple function
130

130

00:06:47,112  -->  00:06:49,264
that will then render them one by one.
131

131

00:06:49,264  -->  00:06:52,450
Okay. For this part, it's working as of now.
132

132

00:06:52,450  -->  00:06:55,892
And now the next thing is to actually add an event listener
133

133

00:06:55,892  -->  00:07:00,164
to this button here, okay? And also to delete basically,
134

134

00:07:00,164  -->  00:07:02,729
to these buttons here. So they can both delete
135

135

00:07:02,729  -->  00:07:05,873
this entire item and also update the value
136

136

00:07:05,873  -->  00:07:09,254
in our model whenever we change the value like this.
137

137

00:07:09,254  -->  00:07:11,643
So that implements that, and once again, we are going
138

138

00:07:11,643  -->  00:07:13,674
to need event delegation, right, because all of
139

139

00:07:13,674  -->  00:07:18,622
these items are not yet there by the time we load the page.
140

140

00:07:18,622  -->  00:07:21,672
So let's do that right after here.
141

141

00:07:21,672  -->  00:07:24,014
(keyboard clicking)
142

142

00:07:24,014  -->  00:07:27,847
So handle, delete, and update list item event.
143

143

00:07:30,561  -->  00:07:34,089
So where do we want to cache these events?
144

144

00:07:34,089  -->  00:07:38,315
Well they are on elements dot shopping, right?
145

145

00:07:38,315  -->  00:07:40,732
So add event listener, click,
146

146

00:07:41,956  -->  00:07:44,623
and we of course need the event.
147

147

00:07:47,129  -->  00:07:48,679
The first thing that we're gonna have to do
148

148

00:07:48,679  -->  00:07:52,606
is to try and read the ID of the element that we clicked on.
149

149

00:07:52,606  -->  00:07:56,805
Okay, so basically we are trying to retrieve this ID here.
150

150

00:07:56,805  -->  00:07:59,813
So based on the data item ID. And so,
151

151

00:07:59,813  -->  00:08:03,849
how are we going to do that? The next few we already used
152

152

00:08:03,849  -->  00:08:08,070
and it's quite simple. So let's say const ID
153

153

00:08:08,070  -->  00:08:10,983
is E dot target, and now we're gonna use a method
154

154

00:08:10,983  -->  00:08:13,520
that we used before. Can you guess which method
155

155

00:08:13,520  -->  00:08:15,687
we will need to reuse here? Well,
156

156

00:08:15,687  -->  00:08:18,522
it's the closest method, okay?
157

157

00:08:18,522  -->  00:08:21,552
And that's because we need to specifically find the element
158

158

00:08:21,552  -->  00:08:24,162
which contains our ID that we want to read.
159

159

00:08:24,162  -->  00:08:26,304
And so we need to specifically find an element
160

160

00:08:26,304  -->  00:08:28,279
with a shopping item class on it
161

161

00:08:28,279  -->  00:08:31,724
close to where the click happened.
162

162

00:08:31,724  -->  00:08:34,770
So, closest shopping item is what you're looking for.
163

163

00:08:34,770  -->  00:08:37,536
And then just as before we can use dataset,
164

164

00:08:37,536  -->  00:08:39,589
and then the name that we gave it.
165

165

00:08:39,589  -->  00:08:41,756
So we gave it the item ID.
166

166

00:08:43,239  -->  00:08:45,439
Right? So we called it item ID,
167

167

00:08:45,439  -->  00:08:48,671
and that's why we said data dash item ID,
168

168

00:08:48,671  -->  00:08:51,071
so that's how it will look with dataset.
169

169

00:08:51,071  -->  00:08:53,712
And just like that, we already have our ID.
170

170

00:08:53,712  -->  00:08:57,120
So wherever we click on the user interface now,
171

171

00:08:57,120  -->  00:08:59,778
Now it's gonna really, but wherever we click,
172

172

00:08:59,778  -->  00:09:01,211
no matter if we click here on this tag,
173

173

00:09:01,211  -->  00:09:03,436
on this button, on the number,
174

174

00:09:03,436  -->  00:09:05,482
or wherever we want really, it will always go to
175

175

00:09:05,482  -->  00:09:09,383
the closest shopping item, and then read the ID from that.
176

176

00:09:09,383  -->  00:09:12,252
So once again, closest is a really powerful method,
177

177

00:09:12,252  -->  00:09:15,255
it's really really helpful. Okay. So next up,
178

178

00:09:15,255  -->  00:09:18,172
we want to handle the delete event,
179

179

00:09:20,627  -->  00:09:24,127
or the delete button, really. So we say if
180

180

00:09:25,466  -->  00:09:27,908
E dot target dot matches, and so this time
181

181

00:09:27,908  -->  00:09:29,840
we're going to use matches because that's
182

182

00:09:29,840  -->  00:09:32,661
going to return a true or false value.
183

183

00:09:32,661  -->  00:09:34,799
So if we're trying to test here if our target
184

184

00:09:34,799  -->  00:09:37,749
matches the shopping delete class.
185

185

00:09:37,749  -->  00:09:40,785
And once more, let me show that to you.
186

186

00:09:40,785  -->  00:09:43,755
And so it's this here. So shopping delete is the class
187

187

00:09:43,755  -->  00:09:47,150
of this button and so we will have to test
188

188

00:09:47,150  -->  00:09:50,996
if this is the one that we clicked on, basically.
189

189

00:09:50,996  -->  00:09:55,996
So shopping delete, or again, any of it's child elements.
190

190

00:09:56,147  -->  00:09:59,332
So that's always the same logic.
191

191

00:09:59,332  -->  00:10:01,450
And so if this is the case, we will want
192

192

00:10:01,450  -->  00:10:06,450
to delete it from both the state and the user interface.
193

193

00:10:06,620  -->  00:10:09,620
(keyboard clicking)
194

194

00:10:13,820  -->  00:10:17,737
So very simple. State dot list dot delete item.
195

195

00:10:20,915  -->  00:10:23,060
And of course, we pass in the ID, so the one
196

196

00:10:23,060  -->  00:10:26,522
that we already read here in the previous step.
197

197

00:10:26,522  -->  00:10:30,855
And then finally, list view dot delete item as well.
198

198

00:10:33,650  -->  00:10:36,881
And again we pass in the ID, and that's it.
199

199

00:10:36,881  -->  00:10:39,688
Now the test is a bit better, let's actually make
200

200

00:10:39,688  -->  00:10:42,509
all of this window here, or all of this state here,
201

201

00:10:42,509  -->  00:10:45,121
so let's make all of the state available to us
202

202

00:10:45,121  -->  00:10:49,026
in the global window object for testing purposes.
203

203

00:10:49,026  -->  00:10:50,892
And so now we will be able to see if it actually
204

204

00:10:50,892  -->  00:10:54,199
deleted our item from the state. So from
205

205

00:10:54,199  -->  00:10:58,782
the underlying data as well as from the user interface.
206

206

00:10:59,933  -->  00:11:03,155
So let's use another recipe with just maybe a bit shorter,
207

207

00:11:03,155  -->  00:11:05,738
with not that many ingredients.
208

208

00:11:07,381  -->  00:11:09,623
This is better here, so this only has six.
209

209

00:11:09,623  -->  00:11:12,219
And so here are our six ingredients.
210

210

00:11:12,219  -->  00:11:15,175
So let's now click on this and see what happens.
211

211

00:11:15,175  -->  00:11:17,666
Oh, we have an error. And this one is happening
212

212

00:11:17,666  -->  00:11:20,061
in the list view, so let's take a look
213

213

00:11:20,061  -->  00:11:23,679
at that method here. And so it's probably this part here.
214

214

00:11:23,679  -->  00:11:25,581
So probably, it didn't correctly select
215

215

00:11:25,581  -->  00:11:27,430
this element that we were looking for,
216

216

00:11:27,430  -->  00:11:30,183
and then so this part here doesn't work correctly.
217

217

00:11:30,183  -->  00:11:33,890
So first of all, let's actually pass a different item
218

218

00:11:33,890  -->  00:11:35,596
and so basically, we only do this here
219

219

00:11:35,596  -->  00:11:38,499
if there is an item so that it doesn't throw that error.
220

220

00:11:38,499  -->  00:11:42,231
But now we also have to find out what's going on here,
221

221

00:11:42,231  -->  00:11:44,458
and I can already see the problem, which is
222

222

00:11:44,458  -->  00:11:48,156
that here is state, where it should be data of course.
223

223

00:11:48,156  -->  00:11:50,823
So let's try that one again now.
224

224

00:11:53,820  -->  00:11:57,517
Now let's delete the salt, and it's gone.
225

225

00:11:57,517  -->  00:12:00,243
And now just to confirm it is also not from a state
226

226

00:12:00,243  -->  00:12:02,876
let's take a look at it, at the recipe and the list,
227

227

00:12:02,876  -->  00:12:03,989
of course not the search,
228

228

00:12:03,989  -->  00:12:05,906
because we didn't search for anything.
229

229

00:12:05,906  -->  00:12:08,835
And so let's take a look now at the list,
230

230

00:12:08,835  -->  00:12:10,443
and indeed we only have five elements
231

231

00:12:10,443  -->  00:12:13,964
and the salt is not in there. So it actually worked.
232

232

00:12:13,964  -->  00:12:16,542
Alright, and now only one more thing with this
233

233

00:12:16,542  -->  00:12:19,125
to update this data here, okay?
234

234

00:12:20,962  -->  00:12:24,629
So let's now quickly take care of data flaw.
235

235

00:12:26,247  -->  00:12:29,270
So back here inside of this event listener,
236

236

00:12:29,270  -->  00:12:31,853
we can simply add a new else if
237

237

00:12:33,475  -->  00:12:36,225
and say E dot target dot matches.
238

238

00:12:38,388  -->  00:12:41,194
And let's see what we want to match this time.
239

239

00:12:41,194  -->  00:12:44,444
So list view, and it's this class here.
240

240

00:12:45,769  -->  00:12:48,908
So again, this is here, the element where our count
241

241

00:12:48,908  -->  00:12:51,385
will be stored, and where we can update it
242

242

00:12:51,385  -->  00:12:55,802
using the up and down arrows. So let's take this one,
243

243

00:12:59,013  -->  00:13:00,542
and in this case we actually don't need to select
244

244

00:13:00,542  -->  00:13:02,801
any of the children because there are none.
245

245

00:13:02,801  -->  00:13:05,085
Okay, so it's just this element.
246

246

00:13:05,085  -->  00:13:09,439
And so what we need to do now is to read the data
247

247

00:13:09,439  -->  00:13:13,844
from the interface, and then update it in our state.
248

248

00:13:13,844  -->  00:13:16,442
So let's call it val, standing for value,
249

249

00:13:16,442  -->  00:13:19,304
and our value will be stored in the element
250

250

00:13:19,304  -->  00:13:21,592
that was actually clicked, right?
251

251

00:13:21,592  -->  00:13:24,983
So let's say that we, and that will be gone,
252

252

00:13:24,983  -->  00:13:28,254
Well actually not. So let's say that we clicked this here,
253

253

00:13:28,254  -->  00:13:32,208
and so our target will be this exact element, right?
254

254

00:13:32,208  -->  00:13:34,947
So this input element. And if we click this one here,
255

255

00:13:34,947  -->  00:13:36,939
then the target will be this one.
256

256

00:13:36,939  -->  00:13:39,118
And so what we want to do now, is to read the current value
257

257

00:13:39,118  -->  00:13:42,937
of the element that was just clicked, okay?
258

258

00:13:42,937  -->  00:13:46,717
And what that means is E dot target.
259

259

00:13:46,717  -->  00:13:49,410
So E dot target is the element that was clicked.
260

260

00:13:49,410  -->  00:13:51,793
And so since this is now an input element,
261

261

00:13:51,793  -->  00:13:54,506
we can read the value property of it,
262

262

00:13:54,506  -->  00:13:56,300
which will then contain the number,
263

263

00:13:56,300  -->  00:13:58,076
so the value that is in there, okay?
264

264

00:13:58,076  -->  00:13:59,574
So very simple. Now all we have to do
265

265

00:13:59,574  -->  00:14:02,233
is to actually parse it as a float number.
266

266

00:14:02,233  -->  00:14:04,487
Because otherwise, it's going to be a number
267

267

00:14:04,487  -->  00:14:06,654
which is not what we want.
268

268

00:14:08,488  -->  00:14:12,905
Alright, and now state dot list dot update the count,
269

269

00:14:15,980  -->  00:14:20,084
and now we have to pass in the ID and the new value.
270

270

00:14:20,084  -->  00:14:22,917
And that's it. And it's not called value, really,
271

271

00:14:22,917  -->  00:14:26,833
sorry, it's called val. But now, that should be it.
272

272

00:14:26,833  -->  00:14:31,391
So handle the delete button, and now here lets say
273

273

00:14:31,391  -->  00:14:33,891
handle the count update. Okay.
274

274

00:14:35,038  -->  00:14:36,914
Now just notice that we're not really listening here
275

275

00:14:36,914  -->  00:14:41,164
for an event where we update this count here, okay?
276

276

00:14:42,056  -->  00:14:44,527
And now it's gone. But anyway, we are not looking
277

277

00:14:44,527  -->  00:14:47,138
for the event where we update this number,
278

278

00:14:47,138  -->  00:14:51,555
we are just looking for the event when we click here.
279

279

00:14:52,407  -->  00:14:54,620
So that's when the event will be triggered.
280

280

00:14:54,620  -->  00:14:56,308
So whenever you click on one of these buttons,
281

281

00:14:56,308  -->  00:14:58,562
variables change. So let's put olive oil right here
282

282

00:14:58,562  -->  00:15:01,562
to three, and let's then take a look
283

283

00:15:02,672  -->  00:15:04,172
at state dot list.
284

284

00:15:06,428  -->  00:15:07,668
Okay, so we have six.
285

285

00:15:07,668  -->  00:15:09,389
Let's take a look at olive oil,
286

286

00:15:09,389  -->  00:15:13,305
and here's olive oil, and yes, it updated to three.
287

287

00:15:13,305  -->  00:15:16,943
So awesome. It really worked. Now we can delete
288

288

00:15:16,943  -->  00:15:20,348
some of this stuff here, let's delete all of this.
289

289

00:15:20,348  -->  00:15:24,147
Change this one here to minus five which doesn't make
290

290

00:15:24,147  -->  00:15:26,697
much sense, and we could change that, but well,
291

291

00:15:26,697  -->  00:15:28,284
at this point, you already know how to do that
292

292

00:15:28,284  -->  00:15:30,704
and so I'm not going to keep boring you
293

293

00:15:30,704  -->  00:15:33,109
with all of this repetitive code.
294

294

00:15:33,109  -->  00:15:35,782
Let's just take a look at this again.
295

295

00:15:35,782  -->  00:15:37,805
And we already see we only have
296

296

00:15:37,805  -->  00:15:40,396
two elements now, which is minus five instant yeast,
297

297

00:15:40,396  -->  00:15:44,339
and then three olive oil. So, cool. It's working,
298

298

00:15:44,339  -->  00:15:47,422
and so we're done with this part as well.
299

299

00:15:47,422  -->  00:15:50,796
So next up is then this like functionality,
300

300

00:15:50,796  -->  00:15:53,186
where we can finally like a recipe,
301

301

00:15:53,186  -->  00:15:56,533
and then basically add them to a list of favorites.
302

302

00:15:56,533  -->  00:15:59,456
That's going to be the last thing that we're going to do,
303

303

00:15:59,456  -->  00:16:00,462
it's going to be a bit more difficult
304

304

00:16:00,462  -->  00:16:02,255
than this list here, but I think
305

305

00:16:02,255  -->  00:16:03,963
it's a great addition because you will learn
306

306

00:16:03,963  -->  00:16:06,418
some new, cool stuff. So congratulations
307

307

00:16:06,418  -->  00:16:11,001
for making it this far, and see you in the next video.
