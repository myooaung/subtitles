WEBVTT
1
00:00:01.918 --> 00:00:06.076
So let's wrap up this module by recapping what you learned and also taking

2
00:00:06.076 --> 00:00:09.742
a look at the pros and cons of a streaming-style API.

3
00:00:09.742 --> 00:00:11.797
As with other approaches to consuming JSON,

4
00:00:11.797 --> 00:00:16.174
a good way to think about a streaming API is by looking at the pros and cons.

5
00:00:16.174 --> 00:00:20.087
I've emphasized that there's no always correct choice for consuming

6
00:00:20.087 --> 00:00:23.432
JSON and that all different APIs have their place.

7
00:00:23.432 --> 00:00:28.182
The streaming API is much faster than the binding or DOM APIs.

8
00:00:28.182 --> 00:00:31.728
It uses much less memory on account of not having to construct an

9
00:00:31.728 --> 00:00:34.879
in-memory representation of the entire document.

10
00:00:34.879 --> 00:00:38.151
It can also allow us to terminate processing of JSON earlier if

11
00:00:38.151 --> 00:00:40.342
we had extracted the information that we need.

12
00:00:40.342 --> 00:00:44.726
It also enabled us to write fairly generic and abstract code that works

13
00:00:44.726 --> 00:00:47.899
over a variety of different unstructured documents.

14
00:00:47.899 --> 00:00:50.851
Consequently, it's easier for the writing of libraries,

15
00:00:50.851 --> 00:00:52.585
frameworks, and tools that process JSON.

16
00:00:52.585 --> 00:00:53.676
On the other hand,

17
00:00:53.676 --> 00:00:57.716
the API is much harder to use and that reduces the productivity for

18
00:00:57.716 --> 00:01:02.925
developers and potentially slows down the development of features.

19
00:01:02.925 --> 00:01:03.359
Wow!

20
00:01:03.359 --> 00:01:06.832
We've now introduced all three of the different

21
00:01:06.832 --> 00:01:09.052
types of consuming APIs for JSON.

22
00:01:09.052 --> 00:01:13.285
The streaming API was the most performant and also allowed us

23
00:01:13.285 --> 00:01:16.088
to work on unstructured JSON documents.

24
00:01:16.088 --> 00:01:17.561
But this course isn't over.

25
00:01:17.561 --> 00:01:18.740
In the next module,

26
00:01:18.740 --> 00:01:22.718
you'll get to learn about more general information architecture concepts.

27
00:01:22.718 --> 00:01:26.708
These are principles that will take you from working on the raw

28
00:01:26.708 --> 00:01:35.000
APIs towards building JSON-based endpoints that can be more easily maintained and used over time.

