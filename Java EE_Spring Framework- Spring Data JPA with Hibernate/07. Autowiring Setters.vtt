WEBVTT
1
00:00:00.240 --> 00:00:04.750
Instead of XML, and even just plain Java configuration,

2
00:00:04.750 --> 00:00:08.240
we can utilize auto wiring in our code.

3
00:00:08.240 --> 00:00:10.890
Auto wiring would still require us to have a bean

4
00:00:10.890 --> 00:00:13.250
defined as our customer repository,

5
00:00:13.250 --> 00:00:16.580
but we would then just mark the method in our service as being

6
00:00:16.580 --> 00:00:20.940
auto wired with that bean. This is actually the methodology we

7
00:00:20.940 --> 00:00:22.850
will use inside our application,

8
00:00:22.850 --> 00:00:28.040
and it looks very similar to the Java configuration with a slight twist.

9
00:00:28.040 --> 00:00:33.470
We define a bean as the customer repository, and then inside of our

10
00:00:33.470 --> 00:00:38.440
application we mark the setter for auto wiring in the bean.

11
00:00:38.440 --> 00:00:43.940
This also incorporates the use of a component scanner.

12
00:00:43.940 --> 00:00:46.290
So instead of having everything all in one

13
00:00:46.290 --> 00:00:49.510
configuration file in the individual services,

14
00:00:49.510 --> 00:00:53.250
we can annotate and configure them as needed.

15
00:00:53.250 --> 00:00:56.940
It does move some of your configuration code around,

16
00:00:56.940 --> 00:01:02.000
but once you start using this approach, you'll find you generally like it a lot better.

