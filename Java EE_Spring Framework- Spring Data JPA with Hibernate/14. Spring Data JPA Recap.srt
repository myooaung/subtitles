1
00:00:00,040 --> 00:00:04,650
Switching back over to Postman, if we run our getter on the

2
00:00:04,650 --> 00:00:08,450
registrations URL again, you can see that it still works

3
00:00:08,450 --> 00:00:11,850
correctly, returns that one course that we expected to be in there

4
00:00:11,850 --> 00:00:14,440
tied to that one registration object.

5
00:00:14,440 --> 00:00:20,760
If we go to our request for the registrations reports that used the

6
00:00:20,760 --> 00:00:25,130
named query and the projection and click Send on that,

7
00:00:25,130 --> 00:00:30,750
you can see that we get the projection model back of just the name,

8
00:00:30,750 --> 00:00:34,410
courseName, and courseDescription without the id, but

9
00:00:34,410 --> 00:00:37,340
this was also using that named query.

10
00:00:37,340 --> 00:00:41,220
We can verify that our post is working correctly as well by going back

11
00:00:41,220 --> 00:00:45,260
in here, and we can change that back over to Bob or whatever you want

12
00:00:45,260 --> 00:00:53,310
to and click Send. If we switch back over to our registrations and get

13
00:00:53,310 --> 00:00:57,580
those again, it's updated. So all of that functionality is working now

14
00:00:57,580 --> 00:01:04,040
how we expected it to. Looking back at our IDE, our UserRepository is

15
00:01:04,040 --> 00:01:04,600
empty.

16
00:01:04,600 --> 00:01:08,380
All of the basic CRUD functions and the basic searching functions are

17
00:01:08,380 --> 00:01:11,570
available to us by just extending this interface.

18
00:01:11,570 --> 00:01:14,540
Same thing with our RegistrationRepository.

19
00:01:14,540 --> 00:01:18,540
That logic surrounding whether the ID was there or not and how to

20
00:01:18,540 --> 00:01:23,490
do those things, even the use of the named query, we named our

21
00:01:23,490 --> 00:01:26,080
method the name of the named query.

22
00:01:26,080 --> 00:01:27,690
We just had to specify the domain.

23
00:01:27,690 --> 00:01:29,940
You remember, if we look at our registration,

24
00:01:29,940 --> 00:01:34,340
we had to say registration., which just said registration needs

25
00:01:34,340 --> 00:01:38,040
this domain assigned to this named query.

26
00:01:38,040 --> 00:01:39,830
We have cleaned up all of that code,

27
00:01:39,830 --> 00:01:43,840
eliminated two classes, and condensed it all in one,

28
00:01:43,840 --> 00:01:48,770
still using injection to auto wire it and deployed our entire app

29
00:01:48,770 --> 00:01:56,000
without having to do anything more than add one line to one interface inside of our repository tier.

