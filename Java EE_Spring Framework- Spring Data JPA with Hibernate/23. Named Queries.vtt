WEBVTT
1
00:00:00.240 --> 00:00:03.500
There's one last part we want to talk about before wrapping up some of the

2
00:00:03.500 --> 00:00:08.090
things that we've done with JPA annotations, and that's named queries. We've

3
00:00:08.090 --> 00:00:11.660
kind of gone through and shown you all of the best practices while going

4
00:00:11.660 --> 00:00:13.800
through and introducing you to these annotations.

5
00:00:13.800 --> 00:00:16.620
You'd rather learn it the right way than go through and learn

6
00:00:16.620 --> 00:00:19.100
how to do it and then find out there's a much better way after

7
00:00:19.100 --> 00:00:21.340
the fact. With named queries,

8
00:00:21.340 --> 00:00:25.840
we can clean up some of the ad‑hoc SQL that's in our repository fields.

9
00:00:25.840 --> 00:00:28.730
One of the nice things about this is we can use named

10
00:00:28.730 --> 00:00:31.100
parameters and things like that as well.

11
00:00:31.100 --> 00:00:35.660
So it's a lot cleaner than ad‑hoc JPQL or what looks

12
00:00:35.660 --> 00:00:38.240
like SQL inside of our objects.

13
00:00:38.240 --> 00:00:39.760
It's not required,

14
00:00:39.760 --> 00:00:43.960
but it focuses on the domain. So we can put these named queries wherever

15
00:00:43.960 --> 00:00:48.580
we want, but usually we store them in our domain objects. And we can use

16
00:00:48.580 --> 00:00:52.550
named parameters. If we're going to be substituting anything in query

17
00:00:52.550 --> 00:00:56.360
strings or search parameters, things of that nature, we can have named

18
00:00:56.360 --> 00:01:00.510
parameters that we're doing those substitution is with. It's a lot

19
00:01:00.510 --> 00:01:02.140
cleaner approach.

20
00:01:02.140 --> 00:01:05.950
How this works is we take and define our named query at the top of our object.

21
00:01:05.950 --> 00:01:09.180
In this example I've got here, we're in the registration object.

22
00:01:09.180 --> 00:01:18.000
And we take that JPQL out of our repository and add it as a named query inside of our registration object.

