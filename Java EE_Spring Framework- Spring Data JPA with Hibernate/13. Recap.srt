1
00:00:00,240 --> 00:00:05,260
Let's do the same thing we just did to our user object,

2
00:00:05,260 --> 00:00:10,280
UserController, UserService, and UserRepository to our registration.

3
00:00:10,280 --> 00:00:14,340
We'll go through and annotate our registration model,

4
00:00:14,340 --> 00:00:17,590
inject resources into our RegistrationController,

5
00:00:17,590 --> 00:00:20,300
create our registration service and repository,

6
00:00:20,300 --> 00:00:24,240
and be able to use those for that web interface.

7
00:00:24,240 --> 00:00:29,830
We start out by going to our Registration and annotate that as

8
00:00:29,830 --> 00:00:36,040
an Entity and then add our Table annotation.

9
00:00:36,040 --> 00:00:45,240
We can give this a name = REGISTRATION.

10
00:00:45,240 --> 00:00:47,650
We'll want to add an ID in here.

11
00:00:47,650 --> 00:00:56,440
We'll say @Id and @GeneratedValue.

12
00:00:56,440 --> 00:01:02,940
We can do a private Long id.

13
00:01:02,940 --> 00:01:04,970
Once we go below our name,

14
00:01:04,970 --> 00:01:10,900
we can right‑click on that and say Generate and

15
00:01:10,900 --> 00:01:13,810
select Getter and Setter for our ID.

16
00:01:13,810 --> 00:01:16,040
Click OK.

17
00:01:16,040 --> 00:01:18,340
We'll save this.

18
00:01:18,340 --> 00:01:24,490
Now we can go ahead and start creating our service and repository.

19
00:01:24,490 --> 00:01:30,530
So let's go out to our service package and right‑click on it and say New,

20
00:01:30,530 --> 00:01:32,940
Java Class.

21
00:01:32,940 --> 00:01:38,590
We'll call this RegistrationServiceImpl.

22
00:01:38,590 --> 00:01:47,190
Inside of here, just for the sake of showing the example,

23
00:01:47,190 --> 00:02:00,440
I call this method public Registration addRegistration

24
00:02:00,440 --> 00:02:02,760
because it is the business logic tier.

25
00:02:02,760 --> 00:02:04,360
It's not just about saving.

26
00:02:04,360 --> 00:02:09,090
There may be some business logic wrapped around adding the registration.

27
00:02:09,090 --> 00:02:17,040
We'll pass into that the registration.

28
00:02:17,040 --> 00:02:21,820
And for now, we will just return that registration instance.

29
00:02:21,820 --> 00:02:27,540
We're going to swap that functionality out,

30
00:02:27,540 --> 00:02:33,650
but we want to annotate this class as a service.

31
00:02:33,650 --> 00:02:38,840
And we know we're going to end up wrapping this in a transaction

32
00:02:38,840 --> 00:02:41,260
because we're going to save this to the database.

33
00:02:41,260 --> 00:02:46,340
So we'll say @Transactional.

34
00:02:46,340 --> 00:02:56,740
And then we can right‑click in here and say Refactor, Extract Interface.

35
00:02:56,740 --> 00:03:03,340
I'll call this the RegistrationService and select that addRegistration

36
00:03:03,340 --> 00:03:07,240
method so that it gets extracted into that interface.

37
00:03:07,240 --> 00:03:09,540
We'll choose Refactor,

38
00:03:09,540 --> 00:03:14,540
and it's going to ask us to double‑check if there's anything we want to change.

39
00:03:14,540 --> 00:03:18,740
Everything looks fine.

40
00:03:18,740 --> 00:03:22,940
Going to our RegistrationController,

41
00:03:22,940 --> 00:03:34,300
we can now auto wire in our RegistrationController the RegistrationService,

42
00:03:34,300 --> 00:03:42,040
and I'll save that.

43
00:03:42,040 --> 00:03:52,340
Going down to our addRegistration method, we can add an else on our method here.

44
00:03:52,340 --> 00:03:55,650
If there's no errors, we'll go ahead and persist to the database.

45
00:03:55,650 --> 00:04:00,080
So we'll say registrationService.addRegistration,

46
00:04:00,080 --> 00:04:09,840
and we'll pass in our registration and save that.

47
00:04:09,840 --> 00:04:14,990
And now we got to go out and add our registration repository.

48
00:04:14,990 --> 00:04:23,530
We'll say New, Class after we've right‑clicked on our repository package.

49
00:04:23,530 --> 00:04:30,630
And this will be the RegistrationRepositoryImpl.

50
00:04:30,630 --> 00:04:41,440
And very similar to what we did in our UserRepositoryImpl,

51
00:04:41,440 --> 00:04:47,940
we are going to auto wire in our PersistenceContext or inject it.

52
00:04:47,940 --> 00:04:49,520
So we'll say our PersistenceContext.

53
00:04:49,520 --> 00:04:55,940
We'll do private, it actually is auto wiring behind the scenes,

54
00:04:55,940 --> 00:05:11,840
EntityManager, and our method inside of here will be public Registration.

55
00:05:11,840 --> 00:05:16,280
We will call this one save because at this point we are saving the registration.

56
00:05:16,280 --> 00:05:18,370
There shouldn't be any business logic that's inside of here,

57
00:05:18,370 --> 00:05:21,340
just persistence logic.

58
00:05:21,340 --> 00:05:31,740
So we'll say Registration registration,

59
00:05:31,740 --> 00:05:37,650
and we'll do EntityManager.persist and pass in our

60
00:05:37,650 --> 00:05:47,900
registration object and save that, and we can return that instance as well.

61
00:05:47,900 --> 00:05:49,440
We're not modifying anything on it,

62
00:05:49,440 --> 00:05:53,040
but that's a good habit to get into is to return that object

63
00:05:53,040 --> 00:05:57,040
in case you have updated anything in there.

64
00:05:57,040 --> 00:06:05,340
We want to annotate our class as a Repository.

65
00:06:05,340 --> 00:06:07,440
And everything inside of here is set now.

66
00:06:07,440 --> 00:06:09,390
We'll do the same thing as we did before.

67
00:06:09,390 --> 00:06:15,340
We'll right‑click, Refactor, extract our interface.

68
00:06:15,340 --> 00:06:19,340
Call it the RegistrationRepository.

69
00:06:19,340 --> 00:06:23,360
We'll choose to have that method included in that interface.

70
00:06:23,360 --> 00:06:26,230
Hit Refactor.

71
00:06:26,230 --> 00:06:29,730
Everything is fine there.

72
00:06:29,730 --> 00:06:32,870
Going back to our RegistrationService,

73
00:06:32,870 --> 00:06:40,310
we can now auto wire in our RegistrationRepository.

74
00:06:40,310 --> 00:06:51,420
And we'll choose the interface and go down to our return statement,

75
00:06:51,420 --> 00:06:58,490
and we will say registrationRepository.save and pass

76
00:06:58,490 --> 00:07:05,930
in our registration and save that.

77
00:07:05,930 --> 00:07:08,520
We're now ready to fire up our server,

78
00:07:08,520 --> 00:07:11,490
and it will go out and create those tables for us,

79
00:07:11,490 --> 00:07:15,140
and we can go run our web application as we do that.

80
00:07:15,140 --> 00:07:17,270
After starting up our server,

81
00:07:17,270 --> 00:07:22,650
we can go ahead and pull up localhost:8080/conference, click Add

82
00:07:22,650 --> 00:07:26,490
Registration, and put whatever name you want inside of here.

83
00:07:26,490 --> 00:07:30,200
I'll do Bryan and say Add Registration.

84
00:07:30,200 --> 00:07:34,240
And the page is set to refresh back to itself.

85
00:07:34,240 --> 00:07:39,540
If I go over to our MySQL Workbench,

86
00:07:39,540 --> 00:07:44,240
I can go ahead and type in select * from REGISTRATION,

87
00:07:44,240 --> 00:07:50,770
put my cursor over it, and select to run the SQL underneath my keyboard cursor.

88
00:07:50,770 --> 00:07:55,430
And we'll see that it has, in fact, put my registration in there.

89
00:07:55,430 --> 00:07:56,820
I ran it once or twice.

90
00:07:56,820 --> 00:07:58,140
You may have done so as well.

91
00:07:58,140 --> 00:08:01,170
So you see I've got Bryan 1 and Bryan 2 in there.

92
00:08:01,170 --> 00:08:03,430
That's just the names that I passed in there.

93
00:08:03,430 --> 00:08:05,870
So now we've got both our app wired up.

94
00:08:05,870 --> 00:08:09,220
We've got the web services wired up for Postman to go into.

95
00:08:09,220 --> 00:08:11,730
We have registration and users wired up.

96
00:08:11,730 --> 00:08:15,470
We can actually go through and now start looking at some of the more complex

97
00:08:15,470 --> 00:08:28,000
annotations of pulling back the various JPA entities based off of things like join types and more concrete examples like that.

