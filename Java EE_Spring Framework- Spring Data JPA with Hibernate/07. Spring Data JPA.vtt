WEBVTT
1
00:00:00.040 --> 00:00:03.940
Spring Data is a wrapper for JPA.

2
00:00:03.940 --> 00:00:09.340
You actually need to know JPA before you can start using Spring Data JPA.

3
00:00:09.340 --> 00:00:12.760
It essentially replaces our repository tier unless

4
00:00:12.760 --> 00:00:15.340
you need some custom functionality.

5
00:00:15.340 --> 00:00:20.340
It's extremely powerful and eliminates a lot of our boilerplate code.

6
00:00:20.340 --> 00:00:23.400
That's one of the things you'll start seeing more and more common as

7
00:00:23.400 --> 00:00:26.020
we build more of these repository tier objects,

8
00:00:26.020 --> 00:00:28.740
and it's the same if you're using Hibernate.

9
00:00:28.740 --> 00:00:31.680
This isn't a problem that's unique to JPA. If you're using

10
00:00:31.680 --> 00:00:34.220
standalone Hibernate or any of these frameworks,

11
00:00:34.220 --> 00:00:37.950
the same copy and paste code smell, as it were,

12
00:00:37.950 --> 00:00:42.840
exists across all these repository tiers or DAO objects.

13
00:00:42.840 --> 00:00:44.540
It's the same pattern.

14
00:00:44.540 --> 00:00:47.350
Spring Data will help clean up a lot of this,

15
00:00:47.350 --> 00:00:51.210
and it can be extended for additional complex functionality.

16
00:00:51.210 --> 00:00:54.930
Sometimes when people look at it, they go well that's great for simple cases,

17
00:00:54.930 --> 00:01:02.000
but it doesn't do anything for complex functionality. No, it can be extended very easily, and it actually isn't very complex to do so.

