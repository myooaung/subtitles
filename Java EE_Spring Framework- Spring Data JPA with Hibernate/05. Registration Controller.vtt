WEBVTT
1
00:00:00.240 --> 00:00:01.310
For the UI portion,

2
00:00:01.310 --> 00:00:05.710
let's open up our RegistrationController, and we'll go to the

3
00:00:05.710 --> 00:00:12.540
bottom of here and we'll create a new PostMapping.

4
00:00:12.540 --> 00:00:20.580
And the URL that we want to hit with that is registration/update. We'll

5
00:00:20.580 --> 00:00:26.140
follow the CRUD conventions of a RESTful service,

6
00:00:26.140 --> 00:00:32.050
and we're going to add in here public@ResponseBody and we

7
00:00:32.050 --> 00:00:36.740
will return the Registration object.

8
00:00:36.740 --> 00:00:41.940
We'll call this method updateRegistration.

9
00:00:41.940 --> 00:00:51.640
We can pass in here an @Valid @ModelAttribute,

10
00:00:51.640 --> 00:00:58.280
and the ModelAttribute we'll name registration, and

11
00:00:58.280 --> 00:01:01.630
we'll tie that to a registration object.

12
00:01:01.630 --> 00:01:06.380
And I'm going to give myself a little space down here to break that on

13
00:01:06.380 --> 00:01:11.740
the next line. So we'll say Registration registration.

14
00:01:11.740 --> 00:01:13.360
And for error handling,

15
00:01:13.360 --> 00:01:15.340
we're not going to do anything with it for this basic

16
00:01:15.340 --> 00:01:19.890
example, but we could catch any errors in a binding result

17
00:01:19.890 --> 00:01:24.840
and, if we needed to, work on those.

18
00:01:24.840 --> 00:01:26.580
We have everything tied in here.

19
00:01:26.580 --> 00:01:34.340
Now we can go ahead and call our registrationService,

20
00:01:34.340 --> 00:01:41.640
and we'll still call addRegistration and pass in our registration object.

21
00:01:41.640 --> 00:01:44.270
And now we have this new method in here that we'll

22
00:01:44.270 --> 00:01:45.690
call our same addRegistration,

23
00:01:45.690 --> 00:01:49.510
but our addRegistration got smart and can determine whether or not

24
00:01:49.510 --> 00:01:53.030
we are creating a new one or updating an existing one and then

25
00:01:53.030 --> 00:01:56.060
passing that through to our repository tier,

26
00:01:56.060 --> 00:02:01.440
which also got a little bit of intelligence around there doing the same thing.

27
00:02:01.440 --> 00:02:05.970
Let's start our server up in case you've shut yours down and

28
00:02:05.970 --> 00:02:13.000
let that automatically deploy to our server, and I'm going to switch over to Postman to run this example.

