WEBVTT
1
00:00:00.540 --> 00:00:04.970
Last time that we ran our application, we did not use the Table annotation,

2
00:00:04.970 --> 00:00:07.200
and you can see over here on the left side,

3
00:00:07.200 --> 00:00:11.630
and sorry there is actually no way to zoom in on the MySQL Workbench,

4
00:00:11.630 --> 00:00:16.500
that it created the table user, just that.

5
00:00:16.500 --> 00:00:17.500
Just user.

6
00:00:17.500 --> 00:00:19.480
It didn't specify users,

7
00:00:19.480 --> 00:00:23.060
which a more traditional or common naming convention

8
00:00:23.060 --> 00:00:26.140
for tables is somewhat plural.

9
00:00:26.140 --> 00:00:28.350
A lot of times you'll have your database table named

10
00:00:28.350 --> 00:00:30.990
users where your object is user,

11
00:00:30.990 --> 00:00:34.810
and that's because we can have a collection of the user objects,

12
00:00:34.810 --> 00:00:39.380
but the table is all of the users in our system,

13
00:00:39.380 --> 00:00:40.360
if that makes sense.

14
00:00:40.360 --> 00:00:44.840
So let's switch over to our IDE and annotate the user object

15
00:00:44.840 --> 00:00:48.570
to specify that we want the users table.

16
00:00:48.570 --> 00:00:55.050
Users is actually a reserved table name inside of the MySQL space.

17
00:00:55.050 --> 00:00:57.730
And so we could name our table the same,

18
00:00:57.730 --> 00:01:00.520
but we're going to have some collisions as for things that

19
00:01:00.520 --> 00:01:02.210
they use for security on the back end.

20
00:01:02.210 --> 00:01:05.910
So we'll actually add our Table annotation,

21
00:01:05.910 --> 00:01:13.530
and we'll just name ours conf_users and save this.

22
00:01:13.530 --> 00:01:16.140
And when we start up our server,

23
00:01:16.140 --> 00:01:22.740
it will go ahead and create that table in our database schema for us.

24
00:01:22.740 --> 00:01:27.940
Let's switch over to our MySQL Workbench and see what it created.

25
00:01:27.940 --> 00:01:29.280
Refreshing our schema,

26
00:01:29.280 --> 00:01:34.960
we can see that it has now created our table with conf_users,

27
00:01:34.960 --> 00:01:40.640
but we also have our user table hanging out there.

28
00:01:40.640 --> 00:01:43.240
Why, you might ask. Well,

29
00:01:43.240 --> 00:01:47.790
one thing that is a little bit misleading in the JPA and Hibernate

30
00:01:47.790 --> 00:01:53.920
documentation is that the create and create drop hbm2ddl auto

31
00:01:53.920 --> 00:01:57.410
generation doesn't drop your entire schema.

32
00:01:57.410 --> 00:02:01.740
It only drops tables that are currently mapped to objects.

33
00:02:01.740 --> 00:02:02.620
So to be honest,

34
00:02:02.620 --> 00:02:05.640
the simplest way for us to fix this right now is just to rightâ€‘click

35
00:02:05.640 --> 00:02:12.070
on user and say drop table and drop it now. And now everything is

36
00:02:12.070 --> 00:02:16.950
cleaned up inside of our schema how we would expect it to be. The

37
00:02:16.950 --> 00:02:19.560
hbm2ddl auto stuff works great.

38
00:02:19.560 --> 00:02:25.000
It just has a few little caveats that, if you're not aware of, make it a little more difficult.

