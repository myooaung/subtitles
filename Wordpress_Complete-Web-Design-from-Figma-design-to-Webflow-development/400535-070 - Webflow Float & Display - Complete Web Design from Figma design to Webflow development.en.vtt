WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.840
Okay,

00:00:02.840 --> 00:00:05.290
So how do we bring that image on the right side?

00:00:05.290 --> 00:00:07.450
We can just drag it like we do in Fig MMA.

00:00:07.450 --> 00:00:09.450
We cannot align it to the right either.

00:00:09.450 --> 00:00:11.590
Remember what I told you before.

00:00:11.590 --> 00:00:15.180
If your stock and trying to figure out how to make things working weapon low,

00:00:15.180 --> 00:00:17.620
that clue is probably another box.

00:00:17.620 --> 00:00:19.430
Let's take a look at our layout.

00:00:19.430 --> 00:00:21.320
We have a hero section inside.

00:00:21.320 --> 00:00:25.300
We have a container which holds all the content in this container.

00:00:25.300 --> 00:00:30.150
We have elements that we want to lay out on the left and an image that we want to lay out

00:00:30.150 --> 00:00:30.850
on the right.

00:00:30.850 --> 00:00:37.230
So we have to somehow split this container in two halfs left half and ride half and have

00:00:37.230 --> 00:00:38.630
them sit next to each other.

00:00:38.630 --> 00:00:39.550
We can do that.

00:00:39.550 --> 00:00:40.910
Using Dave blocks,

00:00:40.910 --> 00:00:45.450
we can put to death blocks inside this container and then put content accordingly.

00:00:45.450 --> 00:00:54.580
Beware where flow will drop new elements inside your selection.

00:00:54.580 --> 00:00:56.210
After I added a new do block,

00:00:56.210 --> 00:01:00.100
it selected that new one and second day block was dropping side of it.

00:01:00.100 --> 00:01:05.090
Just drag it out from this Navigator panel now dragged the image in Juan de Block and

00:01:05.090 --> 00:01:06.850
everything else in the other day block.

00:01:06.850 --> 00:01:21.220
And let's name this day,

00:01:21.220 --> 00:01:23.250
blocks accordingly left and rights,

00:01:23.250 --> 00:01:37.420
they're now the structure is on the right track.

00:01:37.420 --> 00:01:42.180
Now we have to figure out how to make them sit next to each other instead of on top of each

00:01:42.180 --> 00:01:42.570
other.

00:01:42.570 --> 00:01:45.970
There are several ways we can do this in one best way.

00:01:45.970 --> 00:01:50.040
Let's go through each one first.

00:01:50.040 --> 00:01:53.000
The quickest way to do this is by using the float property.

00:01:53.000 --> 00:01:55.270
We confined these under position section.

00:01:55.270 --> 00:01:56.930
It's hidden inside a drop down.

00:01:56.930 --> 00:02:02.570
Florida is a CSS property that tells the element of position itself either on the left or

00:02:02.570 --> 00:02:04.650
right off other surrounding elements.

00:02:04.650 --> 00:02:05.400
In our case,

00:02:05.400 --> 00:02:07.840
we want the image to position itself on the right.

00:02:07.840 --> 00:02:12.090
So we set foot right on our right block and note here,

00:02:12.090 --> 00:02:13.810
offset the float on the right block,

00:02:13.810 --> 00:02:15.060
not just the image.

00:02:15.060 --> 00:02:17.680
If you sat float on Lee on the image,

00:02:17.680 --> 00:02:18.850
then this will happen.

00:02:18.850 --> 00:02:22.140
This is floating image inside that right block,

00:02:22.140 --> 00:02:26.420
not affecting the left bloc content because the right block is still sitting on top off the

00:02:26.420 --> 00:02:27.150
Left Bloc.

00:02:27.150 --> 00:02:33.820
Even though this is a quick way to make this element sit next to each other.

00:02:33.820 --> 00:02:34.990
It's not the best way.

00:02:34.990 --> 00:02:36.020
For example,

00:02:36.020 --> 00:02:37.250
if we shrink the browser,

00:02:37.250 --> 00:02:39.300
this happens instead of shrinking.

00:02:39.300 --> 00:02:41.650
The content would prefer if the image frank.

00:02:41.650 --> 00:02:43.190
There are ways to fix this,

00:02:43.190 --> 00:02:44.330
even with floor property,

00:02:44.330 --> 00:02:45.850
but we have better options.

00:02:45.850 --> 00:02:46.990
There is one thing.

00:02:46.990 --> 00:02:50.850
Float does the best wrapping tax content around the element.

00:02:50.850 --> 00:02:56.400
If we have a section like this and we want the tax to wrap around the image just like it

00:02:56.400 --> 00:02:58.050
would happen in a tax document,

00:02:58.050 --> 00:03:03.780
we can give the image floats style and even add margins on the side so text drops around

00:03:03.780 --> 00:03:07.260
neatly thes and couple other things are what flowed does.

00:03:07.260 --> 00:03:12.640
The best second option is by using Collins,

00:03:12.640 --> 00:03:22.600
who airflow has this pre made layout element for columns inside column settings.

00:03:22.600 --> 00:03:24.920
We can choose many different arrangements.

00:03:24.920 --> 00:03:27.450
And how many columns do you want to use?

00:03:27.450 --> 00:03:31.780
Its using the same 12 point greed lay out like we did in fig MMA and can be splayed

00:03:31.780 --> 00:03:32.580
differently out,

00:03:32.580 --> 00:03:34.490
just like our great in twos,

00:03:34.490 --> 00:03:34.900
threes,

00:03:34.900 --> 00:03:35.970
fours and so on.

00:03:35.970 --> 00:03:37.160
Inside the navigator,

00:03:37.160 --> 00:03:39.250
you can see how this columns are arranged.

00:03:39.250 --> 00:03:56.650
We can drop left bloc in column Juan and ride blocking columns to this is already

00:03:56.650 --> 00:03:59.660
improvement to the float because the content drinks nicely.

00:03:59.660 --> 00:04:01.110
But here's the truth.

00:04:01.110 --> 00:04:02.300
I hate columns.

00:04:02.300 --> 00:04:04.430
They're not as flexible as one my thing,

00:04:04.430 --> 00:04:06.470
and sometimes strange things happen to it.

00:04:06.470 --> 00:04:08.280
It looks powerful and flexible,

00:04:08.280 --> 00:04:12.910
but so many times are here limitations with columns that I stop using them and start making

00:04:12.910 --> 00:04:13.550
my own.

00:04:13.550 --> 00:04:17.070
These approach actually helped me understand Web development better and improve.

00:04:17.070 --> 00:04:20.030
My skills are advised to do the same at the end of the day.

00:04:20.030 --> 00:04:25.050
These columns are made of blocks yet again and have specific CSS properties applied to them

00:04:25.050 --> 00:04:25.050
.

00:04:25.050 --> 00:04:29.530
So let's go with the best option.

00:04:29.530 --> 00:04:34.930
The best and most accepted way to arrange these would be CSS future called Flex Box,

00:04:34.930 --> 00:04:37.650
which you can apply under display settings.

00:04:37.650 --> 00:04:47.730
Let's go through each of these display settings and see how they behave by default.

00:04:47.730 --> 00:04:51.990
Most elements come with display setting set to block block elements.

00:04:51.990 --> 00:04:53.890
They stretch from edge to edge,

00:04:53.890 --> 00:04:56.240
and nothing can be placed next to them.

00:04:56.240 --> 00:04:59.830
They will push the next element to the second line.

00:04:59.830 --> 00:05:05.100
They will do this even if we set a smaller with and there is space for other elements on

00:05:05.100 --> 00:05:05.950
that same line.

00:05:05.950 --> 00:05:08.830
Next,

00:05:08.830 --> 00:05:12.610
we have in line block in line block elements are as wide as content.

00:05:12.610 --> 00:05:13.290
Inside,

00:05:13.290 --> 00:05:14.890
they free up left or space,

00:05:14.890 --> 00:05:17.160
which can be occupied by other elements.

00:05:17.160 --> 00:05:22.500
Remember that behavior when we duplicated the button in a past lesson buttons and wet floor

00:05:22.500 --> 00:05:24.410
by default are settling in line block.

00:05:24.410 --> 00:05:27.050
They only occupy space off their content.

00:05:27.050 --> 00:05:29.130
So if you put two in line,

00:05:29.130 --> 00:05:33.470
block together and there is space that will sit next to each other in here if we set

00:05:33.470 --> 00:05:35.010
display to England block,

00:05:35.010 --> 00:05:39.360
nothing happens because the content in this case is a free flowing tax,

00:05:39.360 --> 00:05:41.770
which will make the box as wide as possible.

00:05:41.770 --> 00:05:43.760
But if we delete some off this tax,

00:05:43.760 --> 00:05:46.450
then we'll see that bounding box shrinks with it.

00:05:46.450 --> 00:05:50.510
However,

00:05:50.510 --> 00:05:51.520
on a block element,

00:05:51.520 --> 00:05:52.410
one below it,

00:05:52.410 --> 00:05:53.530
that doesn't happen.

00:05:53.530 --> 00:05:54.950
Even if we delete the tax,

00:05:54.950 --> 00:05:58.510
that bounding box still occupies the entire with off its parent.

00:05:58.510 --> 00:05:59.020
Now,

00:05:59.020 --> 00:06:03.240
I said that in line block elements frees up a space for other elements next to it.

00:06:03.240 --> 00:06:08.950
So how come the second paragraph didn't jump above because second paragraph is set to block

00:06:08.950 --> 00:06:14.250
and block elements are greedy and they want to occupy an entire floor just for themselves.

00:06:14.250 --> 00:06:17.970
But if we set the second paragraph toe in line Lakas well,

00:06:17.970 --> 00:06:21.090
it still doesn't go up why they want to.

00:06:21.090 --> 00:06:23.500
But there is not enough space for both of them.

00:06:23.500 --> 00:06:25.720
If we cut the tax short on one off them,

00:06:25.720 --> 00:06:29.750
then there is going to be not space and the second lock will move to the floor above.

00:06:29.750 --> 00:06:31.350
Also,

00:06:31.350 --> 00:06:35.950
this will happen if you manually shrink the with off one of them by applying a fixed with

00:06:35.950 --> 00:06:45.540
third display.

00:06:45.540 --> 00:06:47.070
Setting is in line.

00:06:47.070 --> 00:06:50.950
No block in line is how text behaves inside any element.

00:06:50.950 --> 00:06:54.350
It flows just like tax one next to each other.

00:06:54.350 --> 00:06:59.380
It doesn't have with and size values.

00:06:59.380 --> 00:07:00.700
It will ignore them.

00:07:00.700 --> 00:07:01.650
Even if you put it.

00:07:01.650 --> 00:07:08.560
There's not much use for in line display outside of the text,

00:07:08.560 --> 00:07:13.590
so that's in line then we have display none.

00:07:13.590 --> 00:07:15.050
Which heist element?

00:07:15.050 --> 00:07:18.220
It's not just invisible,

00:07:18.220 --> 00:07:20.070
but it also doesn't affect the layout.

00:07:20.070 --> 00:07:21.340
It's not transparent.

00:07:21.340 --> 00:07:25.920
Were just telling the browser to do not render it and completely ignore it.

00:07:25.920 --> 00:07:28.550
Although he doesn't disappear completely from our website,

00:07:28.550 --> 00:07:30.150
it's still in the navigation panel.

00:07:30.150 --> 00:07:34.560
If he was transparent,

00:07:34.560 --> 00:07:36.150
it would still occupy the space.

00:07:36.150 --> 00:07:41.960
You might wonder what use there might be for display.

00:07:41.960 --> 00:07:42.330
None,

00:07:42.330 --> 00:07:43.550
but there are many,

00:07:43.550 --> 00:07:44.500
and we'll get to them.

00:07:44.500 --> 00:07:46.050
That's display now.

00:07:46.050 --> 00:07:52.370
Then we have displayed great one of the best things that has happened in Web design in

00:07:52.370 --> 00:07:53.150
recent years.

00:07:53.150 --> 00:07:54.660
CSS agreed.

00:07:54.660 --> 00:07:59.680
Does something that was not possible before toe have a table like arrangement where you can

00:07:59.680 --> 00:08:01.040
move elements as you like,

00:08:01.040 --> 00:08:02.510
with a lot of flexibility,

00:08:02.510 --> 00:08:13.480
with an ability to have a completely differently out between different devices.

00:08:13.480 --> 00:08:17.420
We won't be going through in sin on soft grade right now,

00:08:17.420 --> 00:08:19.450
because we won't be needing it as much.

00:08:19.450 --> 00:08:20.590
Instead,

00:08:20.590 --> 00:08:22.040
we'll be using flex layout,

00:08:22.040 --> 00:08:23.950
which will cover in the next video.

00:08:23.950 --> 00:08:25.680
So to recap this lesson,

00:08:25.680 --> 00:08:27.970
we have several different options to make element.

00:08:27.970 --> 00:08:29.110
Sit next to each other.

00:08:29.110 --> 00:08:31.970
We have float one of the oldest and simplest methods.

00:08:31.970 --> 00:08:35.810
Float can make an element sit either on the left or right of the content,

00:08:35.810 --> 00:08:38.800
and surrounding elements will sort of wrap around it.

00:08:38.800 --> 00:08:41.460
Then we have columns which you know I hate,

00:08:41.460 --> 00:08:46.450
and if lesson and out advised to use it moderately and mainly if you want to save some time

00:08:46.450 --> 00:08:50.570
and finally went through all the display settings from block to the CSS greed,

00:08:50.570 --> 00:08:55.250
and we will cover those individual displays that things once we need them.

