WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.050
All right, We're going to build our call to action section in this video.

00:00:04.050 --> 00:00:07.290
What do we need here? Let's do a quick planning in our head.

00:00:07.290 --> 00:00:09.540
So we got image on the left,

00:00:09.540 --> 00:00:10.860
content on the side.

00:00:10.860 --> 00:00:13.455
Pretty much same as our hero section.

00:00:13.455 --> 00:00:15.435
Let's start with the basics.

00:00:15.435 --> 00:00:20.050
We're going to add a new section and give it a class section that we created.

00:00:20.050 --> 00:00:24.875
Then we're going to put a diblock inside and give it a class container.

00:00:24.875 --> 00:00:27.900
And then we'll take it from there.

00:00:35.590 --> 00:00:38.885
We need the background color for this section,

00:00:38.885 --> 00:00:40.430
and it's actually the same blue,

00:00:40.430 --> 00:00:44.960
but we have it at 10 percent opacity will do the same thing in Webflow.

00:00:44.960 --> 00:00:47.870
But question is, how are we going to edit our sections

00:00:47.870 --> 00:00:51.590
background without altering same sections on our page?

00:00:51.590 --> 00:00:54.095
Well, if you paid attention to the previous lesson,

00:00:54.095 --> 00:00:56.120
then you'll know that we can apply

00:00:56.120 --> 00:01:00.660
a class to this section without needing to duplicate it.

00:01:01.450 --> 00:01:06.570
There. Now the change is only reflected on this new section.

00:01:15.700 --> 00:01:19.160
Since we have the similar layout as the hero section,

00:01:19.160 --> 00:01:22.310
maybe we can do the same thing. Let's have a look.

00:01:22.310 --> 00:01:24.710
We have a flexbox inside a container,

00:01:24.710 --> 00:01:27.620
and this flexbox has two blocks left and right.

00:01:27.620 --> 00:01:29.060
That's it next to each other.

00:01:29.060 --> 00:01:31.950
Let's build this out in a similar way.

00:01:52.690 --> 00:01:57.140
So we've added a diblock and apply the flexbox class to

00:01:57.140 --> 00:02:01.355
it and put another boxes inside that are glued to the edges.

00:02:01.355 --> 00:02:04.490
Why? Because if you check the properties of the flex box,

00:02:04.490 --> 00:02:09.035
you'll see that it has justify space between applied.

00:02:09.035 --> 00:02:11.570
This pushes those children boxes to the side.

00:02:11.570 --> 00:02:15.570
So whatever we put inside them will be pushed as well.

00:02:16.360 --> 00:02:19.280
Okay, on the left, let's put the image.

00:02:19.280 --> 00:02:21.660
We need to export it first.

00:02:42.280 --> 00:02:45.965
The thing with this image is that it's too big.

00:02:45.965 --> 00:02:51.200
And to export even after compression is too large if the file,

00:02:51.200 --> 00:02:55.325
ideally we would want to export a JPEG in such case.

00:02:55.325 --> 00:03:00.330
But let's try 1.5 x and see if it's going to be small enough.

00:03:08.170 --> 00:03:10.640
Okay, it's still a bit large.

00:03:10.640 --> 00:03:13.010
We could go 1 x, but it's all right.

00:03:13.010 --> 00:03:15.320
Also it's not in the top part of the page,

00:03:15.320 --> 00:03:20.790
which means it's going to load in the background until user scrolls down.

00:03:35.800 --> 00:03:42.665
Now because we exported it in 1.5 acts the high DPI option doesn't do a good job.

00:03:42.665 --> 00:03:46.100
This means we need to set that width manually.

00:03:46.100 --> 00:03:51.240
So we just need to check the width in Figma and apply that exact width here.

00:04:00.150 --> 00:04:03.940
We're going to need to find a way how to make this image

00:04:03.940 --> 00:04:07.195
stick on the left edge like we have it in our designs.

00:04:07.195 --> 00:04:11.570
But let's first put some content inside the right block.

00:04:15.060 --> 00:04:17.350
Okay, So what's happening here?

00:04:17.350 --> 00:04:19.780
The left and right boxes are flanks children,

00:04:19.780 --> 00:04:23.890
so they have a flexibility to shrink and grow to make space for each other.

00:04:23.890 --> 00:04:29.245
So in this case paragraph is pushing things and making the left block shrink.

00:04:29.245 --> 00:04:34.940
What we can do here is to apply a maximum width to the right block so it doesn't go wild.

00:04:38.760 --> 00:04:42.970
We can check the width in Figma and put that as max-width,

00:04:42.970 --> 00:04:46.585
which is 467 pixels.

00:04:46.585 --> 00:04:51.340
Now do you wonder why not fixed width instead of maximum width?

00:04:51.340 --> 00:04:54.190
Because on smaller screens we wanted to shrink.

00:04:54.190 --> 00:04:56.470
We want to design responsively,

00:04:56.470 --> 00:04:59.080
is that award there is responsibly.

00:04:59.080 --> 00:05:03.310
While both we want to design responsibly and responsively.

00:05:03.310 --> 00:05:08.215
So mostly consider using max and Min sizes instead of exact sizes.

00:05:08.215 --> 00:05:12.175
I have to point out here because this block is a flex child,

00:05:12.175 --> 00:05:15.685
it would still shrink even if we gave it an an exact width.

00:05:15.685 --> 00:05:18.710
This happens because That's what Flexbox does.

00:05:18.710 --> 00:05:20.570
It blows their children as it wants.

00:05:20.570 --> 00:05:22.310
They don't get a lot of say,

00:05:22.310 --> 00:05:27.960
let's give this block some margin on the left so it's not so close to the image.

00:05:29.650 --> 00:05:32.375
Okay, now what to do with our image?

00:05:32.375 --> 00:05:34.760
How do we push it onto the side?

00:05:34.760 --> 00:05:37.790
I know we can add a negative margin.

00:05:37.790 --> 00:05:39.035
Yeah, that's the thing.

00:05:39.035 --> 00:05:47.675
Negative margins. And there you go.

00:05:47.675 --> 00:05:50.690
But this has a small issue. On a wider screen.

00:05:50.690 --> 00:05:55.010
The negative margin that we have added is not going to be enough. To fix this issue.

00:05:55.010 --> 00:05:56.045
We can do two things.

00:05:56.045 --> 00:06:00.155
First, we can use vw units instead of pixel units.

00:06:00.155 --> 00:06:02.525
Remember what vw stands for?

00:06:02.525 --> 00:06:04.310
That's right, Volkswagen.

00:06:04.310 --> 00:06:06.725
But it also stands for viewport width.

00:06:06.725 --> 00:06:09.245
So when we put something like 10 VW,

00:06:09.245 --> 00:06:12.905
it means the margin will be 10 percent of the browsers width.

00:06:12.905 --> 00:06:14.990
So as browser increases,

00:06:14.990 --> 00:06:16.520
this will increase too.

00:06:16.520 --> 00:06:18.560
It's still not enough. We could add

00:06:18.560 --> 00:06:22.205
a few extra points and crop the image on smaller screens.

00:06:22.205 --> 00:06:27.200
But there is one more thing we can do is that we can widen the image itself,

00:06:27.200 --> 00:06:30.305
which means we can export more of the image.

00:06:30.305 --> 00:06:31.850
When we made this graphic,

00:06:31.850 --> 00:06:37.700
we have actually crop the image so we can reveal more of it in export the wider version.

00:06:37.700 --> 00:06:40.550
This way we will have more flexibility to move the image in

00:06:40.550 --> 00:06:43.775
the middle so the entire thing is visible and frame is in cropping it.

00:06:43.775 --> 00:06:45.080
Otherwise, if you exported,

00:06:45.080 --> 00:06:47.930
then it's going to clip the content based on the frame and

00:06:47.930 --> 00:06:51.780
enlarge the image are basically revealed more of it.

00:06:52.150 --> 00:06:58.410
Then again, we go through the same export and compression and all that stuff.

00:07:09.100 --> 00:07:12.950
Just make sure to adjust the width one more time.

00:07:12.950 --> 00:07:17.850
It's not 660 pixel wide anymore, it's 825 instead.

00:07:19.150 --> 00:07:25.380
And now we have more flexibility on how much of the image we can clip from the page.

00:07:30.370 --> 00:07:32.750
By the way, this is not a hack,

00:07:32.750 --> 00:07:35.360
this is a valid way of doing things in web design.

00:07:35.360 --> 00:07:39.780
What matters at the end of the day is not the method but the result.

00:07:43.540 --> 00:07:46.400
All right, let's finish up the content.

00:07:46.400 --> 00:07:49.745
Remember what we did with the button when playing with a combo classes,

00:07:49.745 --> 00:07:51.590
will give this button and a combo class,

00:07:51.590 --> 00:07:53.790
or blue and style is

00:08:07.300 --> 00:08:11.010
the same thing we can do with a ghost button.

00:08:29.500 --> 00:08:33.810
And let's use our paragraph to add spacing.

00:08:39.820 --> 00:08:43.565
30 pixel on top and 60 pixel bottom.

00:08:43.565 --> 00:08:46.520
It actually doesn't matter where you add your spacing.

00:08:46.520 --> 00:08:48.875
You could even use headline and buttons.

00:08:48.875 --> 00:08:51.560
But that would need me to edit two elements

00:08:51.560 --> 00:08:54.470
by using a middle guy can add space on top and bottom.

00:08:54.470 --> 00:08:57.600
It's less work and less amount of classes.

00:08:58.510 --> 00:09:00.620
So what do we have here?

00:09:00.620 --> 00:09:05.525
There is a line and then there is image of stars and tags next to it.

00:09:05.525 --> 00:09:07.490
Based on the side-by-side layout,

00:09:07.490 --> 00:09:11.300
we know that we're going to need an extra day or block just for those two.

00:09:11.300 --> 00:09:13.670
This down, we're going to export stars in

00:09:13.670 --> 00:09:17.150
SVG format because then you don't have any photography inside.

00:09:17.150 --> 00:09:19.850
They are vector-based, so perfect for SVG,

00:09:19.850 --> 00:09:21.290
as I mentioned before.

00:09:21.290 --> 00:09:25.740
So just usually don't need to be compressed the Arabic quite small already.

00:09:49.480 --> 00:09:52.940
Also as we just don't need to have high DPI option

00:09:52.940 --> 00:09:56.390
checked because they export from fig mine one xyz.

00:09:56.390 --> 00:09:58.145
So there is no need to shrink them.

00:09:58.145 --> 00:10:01.190
They will look perfectly crazy in their original one.

00:10:01.190 --> 00:10:04.890
And even if you enlarge them as much as you want.

00:10:17.020 --> 00:10:21.710
Okay, so how do we put the stars and tags side-by-side?

00:10:21.710 --> 00:10:25.445
Every time you want to put something side-by-side, start with Flexbox.

00:10:25.445 --> 00:10:26.720
There are other options too,

00:10:26.720 --> 00:10:30.290
but Flexbox will give you the most flexibility most of the time.

00:10:30.290 --> 00:10:35.120
Flexbox that we created in the hero section has a center alignment.

00:10:35.120 --> 00:10:39.215
In our case, we want it to have a top alignment like our design.

00:10:39.215 --> 00:10:44.269
But we can change it here because that's going to mess up the original Flexbox.

00:10:44.269 --> 00:10:48.800
And it's going to mess up all the other instances of the same Flexbox.

00:10:48.800 --> 00:10:51.860
All right, so we can create a combo class and name it

00:10:51.860 --> 00:10:56.790
CTA or whatever you want and then change the alignment to the top.

00:10:58.420 --> 00:11:00.860
Two things still need to be fixed,

00:11:00.860 --> 00:11:04.820
the spacing between them and also it's still not nicely aligned on the top.

00:11:04.820 --> 00:11:06.875
The text is sitting a little too low.

00:11:06.875 --> 00:11:11.060
So let's take the paragraph and style it at that 20 pixel margin on the side,

00:11:11.060 --> 00:11:12.665
just like we have it in the design.

00:11:12.665 --> 00:11:18.450
And some negative margin on the top to move it up in a line it nicely with the stars.

00:11:21.220 --> 00:11:24.245
And also let's give it a maximum width.

00:11:24.245 --> 00:11:30.140
So the tax jumps and cuts where we want. Oops, what happened here?

00:11:30.140 --> 00:11:31.430
Check the flexbox.

00:11:31.430 --> 00:11:35.105
Of course it has justify applied that pushes them to the size.

00:11:35.105 --> 00:11:38.370
Just switch it to left align and that's it.

00:11:47.380 --> 00:11:53.150
Okay, Now let's add that horizontal divider away.

00:11:53.150 --> 00:11:55.235
There is no such thing as a line in Webflow.

00:11:55.235 --> 00:11:57.845
Lines in web are made off as usual.

00:11:57.845 --> 00:12:02.210
Div blocks. Line is just a div that has a one pixel height or

00:12:02.210 --> 00:12:07.920
something small like that. Add a background.

00:12:09.310 --> 00:12:13.350
Black with 15 percent opacity.

00:12:21.640 --> 00:12:24.330
Give it a width.

00:12:31.390 --> 00:12:36.810
And let's add top bottom margins to space out the content.

00:12:51.010 --> 00:13:00.320
Easy-peasy. Let's check

00:13:00.320 --> 00:13:02.810
fluid the t. Okay,

00:13:02.810 --> 00:13:05.120
so it goes a little awkward when it shrinks.

00:13:05.120 --> 00:13:06.755
To fix this, we can simply add

00:13:06.755 --> 00:13:10.550
a minimum width of something like 400 pixels and that should

00:13:10.550 --> 00:13:15.880
fix one thing you might have noticed

00:13:15.880 --> 00:13:18.250
that sometimes I named classes myself and

00:13:18.250 --> 00:13:21.730
sometimes I just like Webflow automatically create a class for me.

00:13:21.730 --> 00:13:25.420
The thing is we should always name our own classes.

00:13:25.420 --> 00:13:28.270
But in the beginning, that's okay right now we're

00:13:28.270 --> 00:13:30.985
just practicing and where learning Webflow.

00:13:30.985 --> 00:13:34.390
So we don't want to torture ourselves by

00:13:34.390 --> 00:13:39.205
new extra decisions that we have to make on how to name classes and all that.

00:13:39.205 --> 00:13:42.430
For now, we're just going to name important classes

00:13:42.430 --> 00:13:45.610
like flexbox or container or section and something that we're

00:13:45.610 --> 00:13:48.820
definitely going to use and we need to know what we are

00:13:48.820 --> 00:13:52.285
naming them and everything else like the small paragraphs or whatever,

00:13:52.285 --> 00:13:55.815
we can just let the Webflow automatically decided for us.

00:13:55.815 --> 00:13:57.275
Okay, so to recap,

00:13:57.275 --> 00:14:01.595
actually there's nothing to recap as we haven't learned new concept in this video.

00:14:01.595 --> 00:14:05.690
But we've learned how to use what we already know in different ways.

00:14:05.690 --> 00:14:09.440
Like adding a negative margin on the image to push it to the side.

00:14:09.440 --> 00:14:12.890
Or using a one pixel high diblock to create a line.

00:14:12.890 --> 00:14:15.900
And a little more practice with Flexbox.
