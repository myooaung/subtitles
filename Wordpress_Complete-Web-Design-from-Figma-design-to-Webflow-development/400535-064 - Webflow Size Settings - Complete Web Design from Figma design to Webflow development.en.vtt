WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.160
and we're back.

00:00:01.160 --> 00:00:04.790
Now let's give the deadlock the same blue color from our designs.

00:00:04.790 --> 00:00:07.270
To grab the exact blue color from Sigma,

00:00:07.270 --> 00:00:12.550
select the color box or a background rectangle and then copy the code from the field color

00:00:12.550 --> 00:00:12.550
.

00:00:12.550 --> 00:00:14.780
If you can select the background rectangle,

00:00:14.780 --> 00:00:17.040
don't forget to check.

00:00:17.040 --> 00:00:21.770
Maybe you have locked the layer because I know this is what I've done inside the tutorial,

00:00:21.770 --> 00:00:23.250
so you might have locked in as well.

00:00:23.250 --> 00:00:24.430
So this is a hex code,

00:00:24.430 --> 00:00:26.630
which we can copy and use it on weapon.

00:00:26.630 --> 00:00:26.780
Oh,

00:00:26.780 --> 00:00:30.850
and it's going to bring exactly the same identical color there as well.

00:00:30.850 --> 00:00:36.530
Inside West Logo Two Styles panel and scroll down to find a property called backgrounds.

00:00:36.530 --> 00:00:38.530
There's the same field for the hosko,

00:00:38.530 --> 00:00:39.790
so just paste your coat in.

00:00:39.790 --> 00:00:42.100
There always starts with the hash signs,

00:00:42.100 --> 00:00:43.510
but you don't have to copy that.

00:00:43.510 --> 00:00:44.050
If you do,

00:00:44.050 --> 00:00:46.220
make sure to replace existing hash sign,

00:00:46.220 --> 00:00:46.650
too.

00:00:46.650 --> 00:00:53.470
Now we need to give our did block a similar size as a rectangle and fig MMA,

00:00:53.470 --> 00:00:55.810
and this is where things work a little different.

00:00:55.810 --> 00:00:56.900
Comparative Sigma.

00:00:56.900 --> 00:00:59.160
The reason is that websites are responsive.

00:00:59.160 --> 00:01:03.250
They can grow and shrink Beijing on screen sizes in fig MMA.

00:01:03.250 --> 00:01:05.990
Everything has a fixed position and fixed size,

00:01:05.990 --> 00:01:09.240
regardless of the screen or content to start with.

00:01:09.240 --> 00:01:10.650
We do have similar controls,

00:01:10.650 --> 00:01:11.950
like we do it in fig MMA.

00:01:11.950 --> 00:01:16.140
You have widths and hide where you can put exact values.

00:01:16.140 --> 00:01:17.620
As you would put in fig MMA.

00:01:17.620 --> 00:01:22.510
We can drag and precise ah rectangle from the cameras like we doing fig MMA.

00:01:22.510 --> 00:01:25.250
We have to input values in these boxes.

00:01:25.250 --> 00:01:31.950
We can put exact pixel values by grabbing them right from Sigma.

00:01:31.950 --> 00:01:34.310
For some elements,

00:01:34.310 --> 00:01:35.980
this might be a fine thing to do,

00:01:35.980 --> 00:01:37.450
but for the background box,

00:01:37.450 --> 00:01:40.850
it isn't because it's not responsive.

00:01:40.850 --> 00:01:46.500
If my screen is wider than that value,

00:01:46.500 --> 00:01:51.910
they not get this white gap because I've made the blue box only 1400 pixels wide,

00:01:51.910 --> 00:01:54.250
whereas my screen is wider than that.

00:01:54.250 --> 00:01:57.930
And if the screen is smaller,

00:01:57.930 --> 00:01:59.210
it's still no good,

00:01:59.210 --> 00:02:01.220
because then the box overflows.

00:02:01.220 --> 00:02:02.540
You see those blue lines?

00:02:02.540 --> 00:02:04.770
Those are the boundaries off the blue box,

00:02:04.770 --> 00:02:10.230
and they are going off the page so often exact pixel values aren't any good in Mark Lowe.

00:02:10.230 --> 00:02:10.980
Okay,

00:02:10.980 --> 00:02:17.490
then what is a good option if you press on this P X value here.

00:02:17.490 --> 00:02:22.590
It will show you all the unit you can input in this fields after pixels.

00:02:22.590 --> 00:02:26.850
Rehab of percentage with percentages we now into Responsive Web.

00:02:26.850 --> 00:02:30.550
It's a responsive value in response to the size off the parent.

00:02:30.550 --> 00:02:33.540
If we put 50% with off our box,

00:02:33.540 --> 00:02:36.610
it's going to take 50% off its parent element.

00:02:36.610 --> 00:02:38.750
And what's the parent off this element?

00:02:38.750 --> 00:02:40.940
If we checked out on the bottom navigator,

00:02:40.940 --> 00:02:42.750
we can see that the body is the parent.

00:02:42.750 --> 00:02:45.290
The body of any website is responsive,

00:02:45.290 --> 00:02:49.380
and its size by the browser with this means 50% off the bodies,

00:02:49.380 --> 00:02:50.920
50% off the browser.

00:02:50.920 --> 00:02:55.550
So if we shrink that browser with and we can do that from here by dragging,

00:02:55.550 --> 00:03:00.610
we can see that are blue Box automatically shrinks as the body shrinks and there is no

00:03:00.610 --> 00:03:01.650
horizontal scroll.

00:03:01.650 --> 00:03:05.560
The next unit is E.

00:03:05.560 --> 00:03:05.960
M.

00:03:05.960 --> 00:03:09.890
We're going to skip this one because it's a unit that is based on the phone size,

00:03:09.890 --> 00:03:14.760
and I never found any use for it in the context of weights and heights,

00:03:14.760 --> 00:03:16.750
so we'll do just fine without it.

00:03:16.750 --> 00:03:21.000
VH Nvw,

00:03:21.000 --> 00:03:21.970
on the other hand,

00:03:21.970 --> 00:03:23.980
are important and very useful units.

00:03:23.980 --> 00:03:27.940
They stand for Vieux Port Height and Vieux Port with Vieux Port.

00:03:27.940 --> 00:03:29.750
A same as the browser size,

00:03:29.750 --> 00:03:31.030
for example,

00:03:31.030 --> 00:03:32.410
is re drag this handle.

00:03:32.410 --> 00:03:32.990
Here.

00:03:32.990 --> 00:03:39.250
We can see that change in view port wit or the browser with shone directly in pixels.

00:03:39.250 --> 00:03:41.400
So that would be Vieux Port wits.

00:03:41.400 --> 00:03:42.420
Similarly,

00:03:42.420 --> 00:03:44.100
this is the View port height,

00:03:44.100 --> 00:03:45.840
these units working percentage.

00:03:45.840 --> 00:03:53.950
So 100 VW is 100% off report with and 50 VH is 50% off the View port height.

00:03:53.950 --> 00:03:57.220
Let's drop another box inside so we can see this in practice.

00:03:57.220 --> 00:04:14.100
Better the yellow boxes sitting inside the blue box.

00:04:14.100 --> 00:04:16.430
If we use percentage values,

00:04:16.430 --> 00:04:21.440
the yellow box will resize relative to the blue box because it's the parents.

00:04:21.440 --> 00:04:28.100
So 50% 100% 100% hide covers 100% off the blue box height,

00:04:28.100 --> 00:04:31.100
which has its own value of 600 pixels.

00:04:31.100 --> 00:04:35.050
Now look what happens if we put 100 VH Instead,

00:04:35.050 --> 00:04:39.620
it covers entire visible screen.

00:04:39.620 --> 00:04:42.150
It even goes outside of the parents borders.

00:04:42.150 --> 00:04:44.350
The same thing applies to VW.

00:04:44.350 --> 00:04:48.820
100% makes it stretch until they're just off the parent element.

00:04:48.820 --> 00:04:54.850
But 100 VW makes a stretch all the way to feel the entire with off the visible screen.

00:04:54.850 --> 00:04:58.540
Do you know what we usually use these values to their corresponding failed.

00:04:58.540 --> 00:05:01.940
So VW in the wheat field and VH for the height failed,

00:05:01.940 --> 00:05:04.170
although that doesn't mean you cannot switch them around.

00:05:04.170 --> 00:05:05.670
Usually there is no need,

00:05:05.670 --> 00:05:08.450
but there are some rare cases that you might want to do that.

00:05:08.450 --> 00:05:13.110
Here's another cool demonstration of comparing percentages to view port units.

00:05:13.110 --> 00:05:15.590
We have identical boxes in that Bob example.

00:05:15.590 --> 00:05:22.400
Let's give a yellow box 50% with and on the yellow box below.

00:05:22.400 --> 00:05:24.650
Let's give it 50 VW.

00:05:24.650 --> 00:05:28.490
Right now they're identical.

00:05:28.490 --> 00:05:28.820
Why?

00:05:28.820 --> 00:05:31.850
Because the parent blue boxes stretched from edge to edge.

00:05:31.850 --> 00:05:35.950
But let's give a top blue box at with off 900 pixels.

00:05:35.950 --> 00:05:38.470
As expected,

00:05:38.470 --> 00:05:44.820
the yellow box shrank with it to make 50% off the blue boxes with But see one happens on

00:05:44.820 --> 00:05:50.950
the bottom version when we give the blue Box 900 pixel with the bottom yellow box didn't

00:05:50.950 --> 00:05:53.950
change shape because it's relative to the browser size,

00:05:53.950 --> 00:05:57.080
and as you change screens and shrink the browser,

00:05:57.080 --> 00:06:02.810
the bottom yellow box shrinks with it because it needs to maintain 50% off the view port,

00:06:02.810 --> 00:06:03.850
no matter what.

00:06:03.850 --> 00:06:09.760
The last unit is auto meaning auto sizing.

00:06:09.760 --> 00:06:12.500
This is default valued with and height.

00:06:12.500 --> 00:06:15.490
When the scientists at daughter in the height the size off,

00:06:15.490 --> 00:06:19.810
the element will change based on how much content is inside it.

00:06:19.810 --> 00:06:20.550
For example,

00:06:20.550 --> 00:06:23.250
let's set the high to order on our blue box.

00:06:23.250 --> 00:06:28.030
It disappeared because it's empty and when it's empty and it's order that means it has zero

00:06:28.030 --> 00:06:28.690
pixel hide.

00:06:28.690 --> 00:06:32.110
Let's put some elements inside to add something new inside.

00:06:32.110 --> 00:06:35.090
An existing element have that element selected and wept.

00:06:35.090 --> 00:06:40.040
Flow will drop it inside when you click something from the new Elements panel.

00:06:40.040 --> 00:06:41.560
If I have a section selected,

00:06:41.560 --> 00:06:42.530
it will drop inside.

00:06:42.530 --> 00:06:44.890
But if you don't want it inside any other element,

00:06:44.890 --> 00:06:52.790
then select body so it will kind of drop outside on the general canvas if you want.

00:06:52.790 --> 00:06:56.660
You can also drag elements directly on the canvas from the layers panel,

00:06:56.660 --> 00:06:57.590
not the layers panel,

00:06:57.590 --> 00:06:58.740
but the elements panel.

00:06:58.740 --> 00:07:02.760
But that's not usually what I do my like the other way.

00:07:02.760 --> 00:07:03.550
But up to you,

00:07:03.550 --> 00:07:07.070
which one you want to prefer if you want to drag your drag if you want to just click,

00:07:07.070 --> 00:07:07.550
click.

00:07:07.550 --> 00:07:11.740
And so,

00:07:11.740 --> 00:07:14.030
as you add more elements inside the death block,

00:07:14.030 --> 00:07:14.950
it will stretch.

00:07:14.950 --> 00:07:20.490
If we set a specific pixel high,

00:07:20.490 --> 00:07:23.060
then the D block will goodbye to that high.

00:07:23.060 --> 00:07:25.850
No matter how much things you stop inside,

00:07:25.850 --> 00:07:31.260
the elements will just overflow from a just like your garbage bin when you're too lazy to

00:07:31.260 --> 00:07:31.950
take it out.

00:07:31.950 --> 00:07:33.940
As for the order on the with,

00:07:33.940 --> 00:07:37.420
the box will stretch to the edges off its parent,

00:07:37.420 --> 00:07:38.160
in this case,

00:07:38.160 --> 00:07:38.840
the full page,

00:07:38.840 --> 00:07:40.550
because the parent element is the body.

00:07:40.550 --> 00:07:43.980
Finally,

00:07:43.980 --> 00:07:45.740
we have minimums and maximums.

00:07:45.740 --> 00:07:49.920
These rules work in conjunction with the regular width and height.

00:07:49.920 --> 00:07:53.960
It's an extra rule to set floors and ceilings on our elements.

00:07:53.960 --> 00:07:54.870
For example,

00:07:54.870 --> 00:07:56.990
if we set the hide to auto,

00:07:56.990 --> 00:08:00.390
the blue box will stretch based on the content inside.

00:08:00.390 --> 00:08:03.170
But if we set a maximum high,

00:08:03.170 --> 00:08:04.710
then it will stretch Onley.

00:08:04.710 --> 00:08:06.150
Until that point,

00:08:06.150 --> 00:08:24.050
minimums and maximums are super useful in many different scenarios.

00:08:24.050 --> 00:08:24.860
For example,

00:08:24.860 --> 00:08:29.430
if we have a card element like this where we want to put some content,

00:08:29.430 --> 00:08:31.930
it can be information and form pricing.

00:08:31.930 --> 00:08:36.910
Whatever we could set an exact height on it to match our content just like the way we would

00:08:36.910 --> 00:08:37.790
do it in fig Mom.

00:08:37.790 --> 00:08:40.950
But because weapons responsive the size off,

00:08:40.950 --> 00:08:43.350
the content can change from screen to screen.

00:08:43.350 --> 00:08:48.860
And then we're going to get something like this at better ways to use minimum height

00:08:48.860 --> 00:08:50.630
instead of the exact hiding.

00:08:50.630 --> 00:08:51.340
This case,

00:08:51.340 --> 00:08:53.990
if we put minimum 400 pixels,

00:08:53.990 --> 00:08:58.730
will make sure that the box doesn't shrink because of that because there is not enough

00:08:58.730 --> 00:08:59.700
content inside,

00:08:59.700 --> 00:09:03.550
and we also make sure it grows when content gross with it.

00:09:03.550 --> 00:09:11.790
Same goes for the wit setting.

00:09:11.790 --> 00:09:13.410
400 pixels look good here,

00:09:13.410 --> 00:09:14.620
but if we shrink it,

00:09:14.620 --> 00:09:19.720
we get the overflow and it's going to stubbornly maintain as 400 pixels.

00:09:19.720 --> 00:09:29.420
A batter option is to set 400 maximum with this means it will not stretch more than 400

00:09:29.420 --> 00:09:29.910
pixels,

00:09:29.910 --> 00:09:30.790
no matter what.

00:09:30.790 --> 00:09:34.650
But it will shrink below that if there is a necessity.

00:09:34.650 --> 00:09:38.680
So let's see Now,

00:09:38.680 --> 00:09:44.700
what value and units do we need to enter to make that box look like our design for the with

00:09:44.700 --> 00:09:45.690
its obvious right?

00:09:45.690 --> 00:09:50.100
We're gonna go with auto because we wanted to stretch from match to match the 100% with

00:09:50.100 --> 00:09:52.650
would bring us the same result in this case,

00:09:52.650 --> 00:09:54.150
often in Web design,

00:09:54.150 --> 00:09:56.960
there are multiple ways to achieve the intended result.

00:09:56.960 --> 00:09:58.510
Sometimes they are equally good,

00:09:58.510 --> 00:10:03.560
but sometimes one might be slightly more superior with practice and some failures.

00:10:03.560 --> 00:10:04.870
You'll soon learn,

00:10:04.870 --> 00:10:08.900
which is better in this guy's auto is better because it's default and it means no extra

00:10:08.900 --> 00:10:09.350
coat.

00:10:09.350 --> 00:10:13.860
Here is a pro what floated to return any property to its default value,

00:10:13.860 --> 00:10:18.050
hold out or option key and click on the property.

00:10:18.050 --> 00:10:22.180
It will clear all the changes that you have made and return to the default values.

00:10:22.180 --> 00:10:23.450
It's a very handy shortcut.

00:10:23.450 --> 00:10:24.540
Another teeth.

00:10:24.540 --> 00:10:25.750
If the proper days in blue,

00:10:25.750 --> 00:10:29.570
it means you have changed it when you're facing some sort off a back,

00:10:29.570 --> 00:10:32.900
trying to figure why something is an acting in a way,

00:10:32.900 --> 00:10:33.390
it shoot.

00:10:33.390 --> 00:10:37.690
You can easily scan this to identify what properties are applied in what could be

00:10:37.690 --> 00:10:41.180
contributing to the issue when it's orange like this.

00:10:41.180 --> 00:10:43.070
It means we have changed the develop values,

00:10:43.070 --> 00:10:46.710
although not on this element directly but on one off the parents,

00:10:46.710 --> 00:10:48.560
in this case on the body element.

00:10:48.560 --> 00:10:49.270
In other words,

00:10:49.270 --> 00:10:52.220
it's being inherited from the body element again.

00:10:52.220 --> 00:10:54.150
This is a great way to identify.

00:10:54.150 --> 00:10:55.790
Where are some styles coming from?

00:10:55.790 --> 00:10:56.270
OK,

00:10:56.270 --> 00:10:57.050
now for the high.

00:10:57.050 --> 00:10:58.700
Based on what we have learned,

00:10:58.700 --> 00:11:01.750
we know that we cannot use an exact value,

00:11:01.750 --> 00:11:02.630
like in fig MMA,

00:11:02.630 --> 00:11:06.120
because when screen expands or shrinks onto mobile,

00:11:06.120 --> 00:11:07.350
I will not adopt.

00:11:07.350 --> 00:11:10.050
So how can we make it adaptable?

00:11:10.050 --> 00:11:11.650
We have two solid options.

00:11:11.650 --> 00:11:12.190
First,

00:11:12.190 --> 00:11:16.080
we can keep it auto and let the content defying its size.

00:11:16.080 --> 00:11:16.870
And second,

00:11:16.870 --> 00:11:18.140
we can use VH.

00:11:18.140 --> 00:11:19.450
The View Port Height.

00:11:19.450 --> 00:11:21.700
Since we didn't put our content yet,

00:11:21.700 --> 00:11:24.750
let's try the second option 100 B h,

00:11:24.750 --> 00:11:27.600
meaning 100% off a visible screen.

00:11:27.600 --> 00:11:30.370
This means no matter how much we shrink or expand our browser,

00:11:30.370 --> 00:11:33.750
that box will adapt instantly to match the visible scream.

00:11:33.750 --> 00:11:40.560
But if our browser is too small,

00:11:40.560 --> 00:11:46.670
then sometimes blue box might not be enough for our content and content will overflow from

00:11:46.670 --> 00:11:47.350
the box.

00:11:47.350 --> 00:11:49.140
So why is this happening?

00:11:49.140 --> 00:11:51.740
Because the blue box has a defined hide.

00:11:51.740 --> 00:11:56.500
It doesn't stretch with content and that define height is the only as toll is the browser

00:11:56.500 --> 00:11:57.060
window.

00:11:57.060 --> 00:11:58.350
So how can we fix this?

00:11:58.350 --> 00:12:02.590
We know that to have the parent box stretched to accommodate its content.

00:12:02.590 --> 00:12:05.430
We need to use auto sizing right this way.

00:12:05.430 --> 00:12:11.750
We make sure that Blue box grows with content and that 100 pH value we can put as a minimum

00:12:11.750 --> 00:12:12.280
height.

00:12:12.280 --> 00:12:15.960
Now the blue box will be at least same height as the browser,

00:12:15.960 --> 00:12:18.550
but not smaller than its content.

00:12:18.550 --> 00:12:21.150
That's a perfect arrangement for us.

00:12:21.150 --> 00:12:28.530
So,

00:12:28.530 --> 00:12:29.030
to recap,

00:12:29.030 --> 00:12:33.150
we have pixel values to input exact fixed dimensions.

00:12:33.150 --> 00:12:37.520
We have percentage values to size and element relative to its parent.

00:12:37.520 --> 00:12:42.820
We have VH and VW to size elements relative to the browser size,

00:12:42.820 --> 00:12:47.350
and we have minimums and maximums to set floors and ceilings on elements.

