WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.370
and we're back in this video.

00:00:04.370 --> 00:00:07.340
We're going to add the image to this section as usual.

00:00:07.340 --> 00:00:08.780
We need to export the image,

00:00:08.780 --> 00:00:11.450
group the whole thing first and give it a name.

00:00:11.450 --> 00:00:16.390
We can't directly export this,

00:00:16.390 --> 00:00:18.130
as is if we do a fig mobile,

00:00:18.130 --> 00:00:19.610
export the corrupt image.

00:00:19.610 --> 00:00:21.610
You can see that in the preview,

00:00:21.610 --> 00:00:23.810
but we don't want an already cropped image.

00:00:23.810 --> 00:00:28.650
We wanted to be cropped by the page boundaries itself more like part hidden away.

00:00:28.650 --> 00:00:32.650
So just drag a copy of this whole group somewhere else on the page.

00:00:32.650 --> 00:00:35.350
This will reveal the entire graphic,

00:00:35.350 --> 00:00:39.020
and now we can export it.

00:00:39.020 --> 00:00:44.220
We need PNG in two x four Bettina resolutions and then compress the size.

00:00:44.220 --> 00:00:44.690
Otherwise,

00:00:44.690 --> 00:00:48.150
it's too large as usual.

00:00:48.150 --> 00:00:51.850
We're going to compress it on image compressor dot com or something like that.

00:00:51.850 --> 00:01:03.050
Let's add an image element inside this container and then upload our image.

00:01:03.050 --> 00:01:19.460
Select high dp I since we're using two X All right,

00:01:19.460 --> 00:01:20.450
now what do we do?

00:01:20.450 --> 00:01:23.790
We've already done a very similar thing in the previous website,

00:01:23.790 --> 00:01:26.150
so a lot of things are going to be quite the same.

00:01:26.150 --> 00:01:28.660
We need the image to go on the right as usual,

00:01:28.660 --> 00:01:30.740
Flax box is a great option for this.

00:01:30.740 --> 00:01:32.870
That's what we used last time as well.

00:01:32.870 --> 00:01:34.090
To create a flex box,

00:01:34.090 --> 00:01:38.850
we need an extra do block where we're going to place content and image inside.

00:01:38.850 --> 00:01:54.690
Let's great a new class flex box and change the display to flax.

00:01:54.690 --> 00:01:59.050
Let's set the alignment of center.

00:01:59.050 --> 00:02:00.860
And while we're at it,

00:02:00.860 --> 00:02:03.950
let's set the justify to space between why,

00:02:03.950 --> 00:02:08.880
because we want content to be glued on the left and image to be glued on the right edge.

00:02:08.880 --> 00:02:12.670
It's not going to change anything at this stage because there's really no space inside the

00:02:12.670 --> 00:02:17.250
flex box in the way space between setting Warrick's is sort of like a spring.

00:02:17.250 --> 00:02:19.120
It inserts the spring in between.

00:02:19.120 --> 00:02:20.850
That pushes elements to the sides,

00:02:20.850 --> 00:02:22.380
but with zero space,

00:02:22.380 --> 00:02:23.580
there is nothing to be pushed.

00:02:23.580 --> 00:02:25.980
If we make image small like 500 pixels,

00:02:25.980 --> 00:02:26.850
then it will work.

00:02:26.850 --> 00:02:31.400
It's going to be pressed against the edge off the flex box.

00:02:31.400 --> 00:02:39.250
If you remember last time we used a special treat to move image to the edge and beyond it.

00:02:39.250 --> 00:02:40.850
We use negative margin,

00:02:40.850 --> 00:02:45.710
so we're going to do the same thing here but let's bring the image back to its original

00:02:45.710 --> 00:02:46.450
size first.

00:02:46.450 --> 00:02:50.100
Now you'll see that at the beginning.

00:02:50.100 --> 00:02:52.430
The negative margin doesn't move the image,

00:02:52.430 --> 00:02:54.830
but then at some point it starts moving.

00:02:54.830 --> 00:02:55.580
To be honest,

00:02:55.580 --> 00:02:57.720
I'm not 100% sure why this is happening.

00:02:57.720 --> 00:03:02.160
It's definitely has to do with the fact that image is so large and it's going beyond the

00:03:02.160 --> 00:03:03.440
boundaries off the parent.

00:03:03.440 --> 00:03:08.230
This is why I always advised to never style images directly drop them inside their block

00:03:08.230 --> 00:03:12.590
and style that instead you're gonna get more predictable and proper behavior.

00:03:12.590 --> 00:03:16.530
Because flax books does were things Teoh images,

00:03:16.530 --> 00:03:18.870
and it's just best to have them inside their own,

00:03:18.870 --> 00:03:19.880
dedicated their block.

00:03:19.880 --> 00:03:22.960
And then it's going to behave properly and you'll understand what's happening.

00:03:22.960 --> 00:03:26.780
And you're not gonna have to deal with some weird behavior when the margin isn't moving,

00:03:26.780 --> 00:03:28.750
and then at some point it starts moving in a total.

00:03:28.750 --> 00:03:32.150
But this time I have used just the image so we can learn from our mistakes.

00:03:32.150 --> 00:03:38.160
One last thing we need to fix here is this overflowing issue.

00:03:38.160 --> 00:03:39.230
To fix this,

00:03:39.230 --> 00:03:43.650
we need to tell the section to clip elements if they overflow beyond the borders.

00:03:43.650 --> 00:03:44.950
It's simple.

00:03:44.950 --> 00:03:47.480
We just need to set overflow to hidden.

00:03:47.480 --> 00:03:49.010
Don't forget overflow setting.

00:03:49.010 --> 00:03:50.260
Is that on the parent?

00:03:50.260 --> 00:03:51.650
Not on the image itself.

00:03:51.650 --> 00:03:54.930
Let's great that Kumble class named Overflow Hidden.

00:03:54.930 --> 00:03:59.510
We don't want to mess with our default section and then apply this overflow setting.

00:03:59.510 --> 00:04:00.750
Excellent.

00:04:00.750 --> 00:04:03.550
Let's double check the preview and responsiveness,

00:04:03.550 --> 00:04:26.650
and we're done with this section.

