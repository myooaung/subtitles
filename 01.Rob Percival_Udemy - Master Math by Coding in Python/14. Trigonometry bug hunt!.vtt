WEBVTT
1
00:00:03.690 --> 00:00:06.250
It's time for another bug hunt.

2
00:00:06.420 --> 00:00:08.170
And you know what that means.

3
00:00:08.430 --> 00:00:15.810
What you should do if you haven't already done this is go through each cell of code in this script and

4
00:00:15.810 --> 00:00:19.820
find and fix all of the errors and just be mindful.

5
00:00:19.830 --> 00:00:26.220
As with previous bug hunts that there are some explicit Python coding errors and there are some other

6
00:00:26.220 --> 00:00:33.150
places where it's not really an error per say but it's probably not the right thing to show or maybe

7
00:00:33.150 --> 00:00:34.770
not the best thing to show.

8
00:00:34.800 --> 00:00:40.920
So then you still can feel free to change some of the code based on what you think should be shown.

9
00:00:40.920 --> 00:00:47.010
All right so I'm going to get started here we can see we're already importing none pie and map plot

10
00:00:47.010 --> 00:00:47.850
lib.

11
00:00:47.850 --> 00:00:55.380
So run that so here we are producing a plot of random numbers and it looks like it's supposed to be

12
00:00:55.380 --> 00:00:55.940
an image.

13
00:00:55.970 --> 00:00:58.290
So let's run this cell and see what happens.

14
00:00:58.440 --> 00:00:58.770
Okay.

15
00:00:58.770 --> 00:01:01.110
Module num pi is no attribute rent.

16
00:01:01.120 --> 00:01:03.020
And actually the.

17
00:01:03.060 --> 00:01:07.770
Function random n is contained in a sub module called random.

18
00:01:07.770 --> 00:01:11.740
So this has to be num pi not random random.

19
00:01:13.050 --> 00:01:13.380
Okay.

20
00:01:13.410 --> 00:01:20.340
Now this is kind of technically correct in the sense that we don't get any errors but it's hard to interpret

21
00:01:20.370 --> 00:01:24.860
this one pixel wide image of these random numbers.

22
00:01:24.900 --> 00:01:31.070
I think a better way to visualize these random numbers is just with a regular plot.

23
00:01:31.230 --> 00:01:40.110
This reveals the key features of a normal distribution of random numbers such as a mean zero 0 a standard

24
00:01:40.110 --> 00:01:46.530
deviation that is plausibly one and you can see that a lot of the numbers are close to zero and there

25
00:01:46.530 --> 00:01:49.830
are fewer numbers that are further away from zero.

26
00:01:49.920 --> 00:01:55.560
In fact maybe this will even look better as square as something like this anyway.

27
00:01:55.710 --> 00:01:57.630
That looks pretty good to me.

28
00:01:57.750 --> 00:01:57.950
Okay.

29
00:01:57.990 --> 00:01:59.120
So here.

30
00:01:59.130 --> 00:02:06.060
Let's see this says create an image of I think that's also an Arab that said an English error not a

31
00:02:06.060 --> 00:02:13.240
python error of a matrix of random integers between and including 3 and 20.

32
00:02:13.410 --> 00:02:18.450
Now I haven't actually told you how to use this function rant in this course.

33
00:02:18.450 --> 00:02:23.740
I haven't introduced this to you but we can just try running this code and see what happens.

34
00:02:23.890 --> 00:02:26.380
Okay so this is data type not understood.

35
00:02:26.520 --> 00:02:30.330
So that's not a super informative error message.

36
00:02:30.390 --> 00:02:35.720
I'm gonna look at the DOC string the help file for this function and see what it says.

37
00:02:35.730 --> 00:02:42.930
This is a return random integers from low inclusive to high exclusive.

38
00:02:42.990 --> 00:02:53.010
So if we want random integers between 0 and 20 including 20 or 3 instead of 0 and 20 inclusive then

39
00:02:53.010 --> 00:02:55.260
actually this is not going to be correct.

40
00:02:55.260 --> 00:03:00.990
So we need this to be 21 in order to get numbers to go up to 20.

41
00:03:00.990 --> 00:03:09.180
Furthermore this is the size just as a third input and then the fourth input is actually the data type.

42
00:03:09.180 --> 00:03:11.950
So now we can understand this error message better.

43
00:03:12.240 --> 00:03:18.210
Python is saying data type not understood well the data type is in the fourth input there is no such

44
00:03:18.210 --> 00:03:20.370
data type as 20.

45
00:03:20.370 --> 00:03:29.010
All right so the two things we need to do to fix this are to make these two Matrix sizes be a single

46
00:03:29.610 --> 00:03:35.370
input and I'm doing that here by making them a tuple and then we also need to change this to be 21.

47
00:03:35.370 --> 00:03:43.350
So now the numbers go the integers go from three inclusive to 21 exclusive which means that they will

48
00:03:43.350 --> 00:03:47.000
include numbers up to 20.

49
00:03:47.120 --> 00:03:56.580
Okay so here we get our matrix of random numbers and just to show that these about these two boundaries

50
00:03:56.580 --> 00:03:58.540
really are what we want them to be.

51
00:03:58.590 --> 00:04:05.950
I'm going to print out the maximum value the largest value in math and indeed that is 20.

52
00:04:05.970 --> 00:04:07.650
Very nice.

53
00:04:07.680 --> 00:04:12.660
So here it looks like we're supposed to create a hundred random phase angles.

54
00:04:12.810 --> 00:04:18.820
So between 0 and 2 pi and show unit vectors with those angles.

55
00:04:18.900 --> 00:04:23.270
So as always I start by just running this code and seeing what kind of errors we get.

56
00:04:24.450 --> 00:04:28.010
On this line we get named Pi is not defined.

57
00:04:28.050 --> 00:04:33.840
Actually we want and p dot pi and then.

58
00:04:33.850 --> 00:04:40.530
Okay so one hundred random phase angles there's probably a hundred in here but these should be distributed

59
00:04:40.560 --> 00:04:45.690
all around the circle which means varying from zero to two pi.

60
00:04:45.690 --> 00:04:48.690
Now I see the two pi in here but actually look at this.

61
00:04:48.690 --> 00:04:53.270
These are uniform distributed numbers between 0 and 1.

62
00:04:53.280 --> 00:04:55.950
But then I'm just adding them to 2 pi.

63
00:04:55.980 --> 00:05:00.780
In fact we need to multiply or scale by 2 pi.

64
00:05:00.780 --> 00:05:03.130
So there's that.

65
00:05:03.160 --> 00:05:05.310
OK so that looks a little bit better.

66
00:05:05.320 --> 00:05:11.650
Except the instructions here say to show unit vectors and these are not unit vectors.

67
00:05:11.650 --> 00:05:18.860
These are just individual dots so to create unit vectors we actually need to specify two points.

68
00:05:18.880 --> 00:05:25.330
A start point and a stop point so the start point I'll say is zero for the phases.

69
00:05:25.330 --> 00:05:30.230
And more importantly for the magnitude that has to go from 0 to 1.

70
00:05:30.820 --> 00:05:32.500
So huh.

71
00:05:32.550 --> 00:05:32.850
Okay.

72
00:05:32.880 --> 00:05:35.490
So we we still don't really get vectors.

73
00:05:35.490 --> 00:05:38.940
We just got a bunch of overlapping circles in the middle.

74
00:05:38.940 --> 00:05:44.420
And the problem now is that the marker is just indicated as being a circle.

75
00:05:44.460 --> 00:05:48.780
What we want is a circle plus a line.

76
00:05:48.900 --> 00:05:49.890
So there you go.

77
00:05:49.890 --> 00:05:51.610
Something that looks like this.

78
00:05:51.630 --> 00:05:56.600
This reminds me of like cotton candy or I don't know something at a circus.

79
00:05:56.730 --> 00:05:59.890
You ever seen that movie killer clowns from outer space.

80
00:05:59.930 --> 00:06:00.710
Hi on.

81
00:06:01.130 --> 00:06:02.330
I knew it was terrible movie.

82
00:06:02.330 --> 00:06:03.570
Anyway let's move on.

83
00:06:03.570 --> 00:06:07.010
I'm going to consider this exercise to be finished.

84
00:06:08.080 --> 00:06:15.510
So here we get an instruction that says create an outward spiral using phase angles and amplitude.

85
00:06:15.830 --> 00:06:16.170
Okay.

86
00:06:16.180 --> 00:06:16.960
That's pretty cool.

87
00:06:16.960 --> 00:06:20.590
I'm curious to see what the outward spiral looks like.

88
00:06:20.590 --> 00:06:28.030
So here looks like we are creating some amplitude that vary from 0 to 1 and phases.

89
00:06:28.030 --> 00:06:33.100
So P is variable p 4 phases from 0 to 4 pies.

90
00:06:33.100 --> 00:06:38.160
That's going to be two full cycles and let's see what name.

91
00:06:38.290 --> 00:06:38.950
A not.

92
00:06:39.020 --> 00:06:39.450
Aha.

93
00:06:39.460 --> 00:06:40.870
That's a pretty simple one to fix.

94
00:06:40.870 --> 00:06:43.370
So it's actually a capitalization problem.

95
00:06:44.950 --> 00:06:49.840
Okay now that is a pretty disappointing outward spiral.

96
00:06:49.840 --> 00:06:52.640
It doesn't really look like it's spiraling at all.

97
00:06:52.690 --> 00:06:53.940
What is the problem here.

98
00:06:53.950 --> 00:07:01.570
The problem is actually that we're using the plot function but we really should be using the polar function

99
00:07:02.560 --> 00:07:05.610
so that looks like an outward going spiral.

100
00:07:05.830 --> 00:07:10.300
And now I would just like to make this a little bit look to make this look a little bit nice so let's

101
00:07:10.300 --> 00:07:17.980
make the line magenta and then I'm going to turn the Axis off and then peel it that show.

102
00:07:17.980 --> 00:07:24.730
Okay now the final thing is gonna beat make this line a little bit thicker about 3.

103
00:07:24.820 --> 00:07:28.300
Now that looks like an outward going spiral.

104
00:07:28.330 --> 00:07:32.550
I like that convert radians to degrees.

105
00:07:32.560 --> 00:07:37.630
Let's see I'll just run this code OK so we do get numbers.

106
00:07:37.640 --> 00:07:43.490
We don't get any explicit Python coding errors but let's see if we can figure out what is the issue

107
00:07:43.490 --> 00:07:44.640
with this code.

108
00:07:44.690 --> 00:07:50.780
So I think the issue with this code is that this variable is called Rad and we are using the function

109
00:07:50.780 --> 00:07:55.340
rad to deg to convert radians to degrees.

110
00:07:55.340 --> 00:08:02.330
Now the numbers 1 through 360 are not technically wrong as radians.

111
00:08:02.330 --> 00:08:07.280
These are plausible numbers that could be radians.

112
00:08:07.280 --> 00:08:14.020
However it looks like these are degrees 1 to 360 seem like degrees instead of radians.

113
00:08:14.120 --> 00:08:16.030
So I'm actually going to change this.

114
00:08:16.040 --> 00:08:24.860
Let's say point 0 0 1 up to 2 times num pi dot pi.

115
00:08:24.860 --> 00:08:31.580
So these are definitely a range of values that you would expect for radians and then we can convert

116
00:08:31.580 --> 00:08:33.100
them to degrees.

117
00:08:33.620 --> 00:08:35.240
And this also looks correct.

118
00:08:35.240 --> 00:08:40.520
So we go from something you know it's a little bit higher than is pretty close to zero which corresponds

119
00:08:40.520 --> 00:08:48.140
to this first one and then the last one should be two pi and that over here four degrees is three hundred

120
00:08:48.140 --> 00:08:52.700
and sixty it's actually three point six but then it's times one hundred.

121
00:08:52.760 --> 00:08:53.030
Okay.

122
00:08:53.060 --> 00:08:57.720
So here we see the famous equality in trigonometry.

123
00:08:57.830 --> 00:09:03.910
So there is something about cosine and sign of angles the same angles.

124
00:09:04.040 --> 00:09:09.980
I think that this is supposed to be cosine squared plus sine squared equals one.

125
00:09:09.980 --> 00:09:13.090
However this is actually cosine times two.

126
00:09:13.100 --> 00:09:20.920
I don't think there's any trigonometry equality that is cosine times two plus sine times two.

127
00:09:21.020 --> 00:09:28.460
So let's make this squared and then oh these are definitely not all equal to how we do get one one in

128
00:09:28.460 --> 00:09:31.020
here but the rest of them are and ends.

129
00:09:31.070 --> 00:09:32.240
Now what is going on here.

130
00:09:32.270 --> 00:09:33.650
Let's look at this.

131
00:09:33.710 --> 00:09:36.110
So we are getting a warning message.

132
00:09:36.170 --> 00:09:40.250
Something about dividing by zero encountered in log ten okay.

133
00:09:40.460 --> 00:09:45.760
So the problem is either with this expression or this expression.

134
00:09:45.770 --> 00:09:48.530
Now this one here certainly isn't problematic.

135
00:09:48.560 --> 00:09:55.260
This one here actually is problematic and that's because we are trying to take the log of zero.

136
00:09:55.460 --> 00:09:59.860
But the log of zero is minus infinity or something.

137
00:09:59.890 --> 00:10:02.900
It's not really a rational number it's not a number that exists.

138
00:10:02.930 --> 00:10:09.680
So I think what we can do is just make this a very small number that is definitely greater than zero.

139
00:10:09.950 --> 00:10:16.450
And then we see that we get a whole vector full of one's okay last cell.

140
00:10:16.450 --> 00:10:18.790
This is our last bug hunt.

141
00:10:18.790 --> 00:10:25.860
Well not the last bug hunt for this course of course just the last one for this particular section.

142
00:10:26.050 --> 00:10:29.920
So let's see create Oilers number.

143
00:10:29.920 --> 00:10:32.210
So let's just run this and see what happens.

144
00:10:32.270 --> 00:10:32.520
OK.

145
00:10:32.530 --> 00:10:38.850
So we get a plot and we don't get any python errors and the plot kind of looks OK.

146
00:10:38.860 --> 00:10:46.610
We get a a line but let's see if we can match up these parameters so first of all M is point five.

147
00:10:46.900 --> 00:10:51.520
But the magnitude here is not point 5.5 is actually around here.

148
00:10:51.820 --> 00:10:57.010
And the angle is pi over four and pi over four corresponds to 45 degrees.

149
00:10:57.100 --> 00:10:58.980
This is also not correct.

150
00:10:58.990 --> 00:10:59.380
Huh.

151
00:10:59.380 --> 00:11:02.130
I see at least one problem here.

152
00:11:02.170 --> 00:11:10.630
So if we look at the the health texts the doc string for to teed up polar you can see that the inputs

153
00:11:10.720 --> 00:11:16.600
are theta and R so theta is the angle and r is the radius.

154
00:11:16.600 --> 00:11:20.260
So actually these two inputs are swapped.

155
00:11:20.380 --> 00:11:25.560
This should be the angle and this should be the magnitude.

156
00:11:25.570 --> 00:11:25.930
All right.

157
00:11:25.930 --> 00:11:27.210
And now it's going to work.

158
00:11:27.670 --> 00:11:30.920
Oh no it still doesn't work.

159
00:11:31.000 --> 00:11:32.140
So why doesn't it work.

160
00:11:32.140 --> 00:11:37.000
Why doesn't this vector match the features that I specified here.

161
00:11:37.330 --> 00:11:39.510
Actually the problem is here.

162
00:11:39.610 --> 00:11:47.750
What is Oilers formula Oilers formula is m times e to the I fee or theta or K.

163
00:11:48.010 --> 00:11:49.540
So we have these backwards here.

164
00:11:49.540 --> 00:11:54.900
So this is supposed to be m times e to the 1 J.

165
00:11:54.940 --> 00:11:58.230
Or in math terms you would call that I times P.

166
00:11:58.990 --> 00:11:59.410
Aha.

167
00:11:59.440 --> 00:12:00.340
This looks better.

168
00:12:00.340 --> 00:12:03.880
Now we see on the radial axis this line goes out.

169
00:12:03.880 --> 00:12:06.600
Point five which is what we specify here.

170
00:12:07.000 --> 00:12:13.420
And the direction and the angle of this vector is forty five degrees which is the same thing as pi over

171
00:12:13.420 --> 00:12:14.220
four.

172
00:12:14.560 --> 00:12:16.140
Great.

173
00:12:16.170 --> 00:12:18.530
That concludes this bug hunt.

174
00:12:18.540 --> 00:12:19.850
I hope you enjoyed it.
