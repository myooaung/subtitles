WEBVTT
1
00:00:03.940 --> 00:00:09.650
Now we've come to the end of this section of the course and it's time for another bug hunt.

2
00:00:09.670 --> 00:00:10.370
You guessed it.

3
00:00:10.390 --> 00:00:13.640
I'm sure that you were super excited for this bug.

4
00:00:13.690 --> 00:00:15.560
Throughout the entire section.

5
00:00:15.730 --> 00:00:17.250
Well here you go.

6
00:00:17.260 --> 00:00:17.550
All right.

7
00:00:17.560 --> 00:00:24.640
So just as a quick reminder The idea is that there's a bunch of code here and every one of these cells

8
00:00:24.640 --> 00:00:30.520
of code contains at least one mistake or at least one problem with the code.

9
00:00:30.520 --> 00:00:38.230
So your job is to pause the video go through all of the code here and fix every cell to make sure that

10
00:00:38.230 --> 00:00:39.940
every cell works.

11
00:00:39.940 --> 00:00:44.800
Now sometimes there are explicit coding errors that you have to find and fix.

12
00:00:44.800 --> 00:00:51.090
Sometimes there's not really an error per say but the plot just isn't really what it probably should

13
00:00:51.090 --> 00:00:51.490
have been.

14
00:00:51.490 --> 00:00:56.200
And so you have to figure out what it should be do a little bit of guesswork.

15
00:00:56.230 --> 00:00:56.590
OK.

16
00:00:56.710 --> 00:01:03.220
So now is your last opportunity to pause the video because now I'm going to start going through this

17
00:01:03.490 --> 00:01:03.880
now.

18
00:01:03.910 --> 00:01:11.500
My strategy here is just to start by running every single cell in turn and see what the error message

19
00:01:11.500 --> 00:01:14.980
is and see if I can figure out what to do from there.

20
00:01:14.980 --> 00:01:15.250
OK.

21
00:01:15.280 --> 00:01:21.910
So I'm going to start by running this code here and we get an error that says the name P L T is not

22
00:01:21.910 --> 00:01:30.160
defined so clearly peel t is referring to map plot lib dot plotting and that is not yet loaded into

23
00:01:30.160 --> 00:01:31.420
the python workspace.

24
00:01:31.420 --> 00:01:37.960
I'm going to click insert insert cell above and here I'm going to import all the modules and functions

25
00:01:37.960 --> 00:01:40.880
that I'm going to use throughout this script.

26
00:01:40.930 --> 00:01:49.110
So import met plot lib dot plotting as P LTE.

27
00:01:50.090 --> 00:01:53.170
Whoops that was that was an unintentional mistake.

28
00:01:53.170 --> 00:01:55.410
So this is actually pi plot.

29
00:01:55.420 --> 00:01:58.700
Let's see pi plots.

30
00:01:59.100 --> 00:02:00.240
Yep there you go.

31
00:02:00.240 --> 00:02:00.480
Okay.

32
00:02:00.510 --> 00:02:04.150
So that will certainly fix this error and let's see what else is going on.

33
00:02:04.180 --> 00:02:04.920
Okay.

34
00:02:04.990 --> 00:02:06.010
More errors.

35
00:02:06.010 --> 00:02:07.130
Objects of type in.

36
00:02:07.130 --> 00:02:07.540
No no.

37
00:02:07.860 --> 00:02:08.100
Okay.

38
00:02:08.110 --> 00:02:14.260
So this is not really an interpretable error message in the sense that you know sometimes you see these

39
00:02:14.260 --> 00:02:16.440
error messages and they're very informative.

40
00:02:16.450 --> 00:02:18.620
They tell you exactly what the problem is.

41
00:02:18.760 --> 00:02:24.760
In this case it's a little bit difficult but at least we see which line is causing the problem.

42
00:02:24.850 --> 00:02:30.730
And here the way that we are actually using this method here it looks like we're importing four distinct

43
00:02:30.880 --> 00:02:39.980
inputs when in fact what we really need to do is just provide one input which is a list of numbers.

44
00:02:39.980 --> 00:02:40.270
Okay.

45
00:02:40.330 --> 00:02:42.490
So that looks pretty good there.

46
00:02:42.520 --> 00:02:44.690
So let's go on to the next one.

47
00:02:44.770 --> 00:02:45.780
Plot a line.

48
00:02:45.820 --> 00:02:46.170
Okay.

49
00:02:46.170 --> 00:02:48.000
This doesn't seem so bad.

50
00:02:48.010 --> 00:02:53.320
Looks like we're plotting a line that goes from x com x 2 3 5.

51
00:02:53.410 --> 00:02:57.940
So from the origin to the point three comma five huh.

52
00:02:57.940 --> 00:03:00.430
And this is invalid syntax.

53
00:03:00.430 --> 00:03:05.510
And this also gives us a little carat symbol to tell us exactly where the problem is.

54
00:03:05.530 --> 00:03:12.010
Now the issue is that in Python a list has two or the elements of a list must be separated by commas

55
00:03:12.400 --> 00:03:14.800
like this not by spaces.

56
00:03:14.830 --> 00:03:21.810
So that was the problem here and I always see a line that goes from the origin 0 0 up to three comma

57
00:03:21.870 --> 00:03:23.230
five.

58
00:03:23.260 --> 00:03:23.640
All right.

59
00:03:23.650 --> 00:03:25.550
So let's see what's going on here.

60
00:03:25.570 --> 00:03:25.990
OK.

61
00:03:25.990 --> 00:03:27.340
That's pretty friendly.

62
00:03:27.340 --> 00:03:30.520
So we already have the import num Pi.

63
00:03:30.600 --> 00:03:34.120
And P. however now there's of course nothing wrong with this.

64
00:03:34.120 --> 00:03:34.930
It's fine.

65
00:03:34.930 --> 00:03:43.150
But I think it's better programming style to remove the the module importing from individual cells that

66
00:03:43.150 --> 00:03:48.070
are kind of halfway through the file and organize them all at the top.

67
00:03:48.070 --> 00:03:53.980
So I think this is better although the way it was before wasn't really incorrect.

68
00:03:54.770 --> 00:03:55.080
OK.

69
00:03:55.090 --> 00:03:56.530
So let's see what's going on here.

70
00:03:56.560 --> 00:04:04.690
So we specify some range of values so some integer values for x and then Y gets initialized to be zeros.

71
00:04:04.690 --> 00:04:06.410
That's the same length of X.

72
00:04:06.460 --> 00:04:13.120
And here we set each element of Y to these some function of x in particular to minus X squared.

73
00:04:13.120 --> 00:04:13.810
And then we plot.

74
00:04:13.840 --> 00:04:15.740
So this kind of looks OK.

75
00:04:16.000 --> 00:04:17.520
Let's see.

76
00:04:17.920 --> 00:04:19.620
Unsupported upper and tight for.

77
00:04:19.660 --> 00:04:19.930
OK.

78
00:04:19.930 --> 00:04:27.490
So this is also not the most informative error message in the world but when you look through this for

79
00:04:27.490 --> 00:04:35.350
loop carefully you can see that each element of that we are defining each element of Y individually

80
00:04:35.350 --> 00:04:36.280
within this loop.

81
00:04:36.760 --> 00:04:43.820
So that means we also need to be accessing X element y's and not the entire range.

82
00:04:43.840 --> 00:04:44.140
All right.

83
00:04:44.170 --> 00:04:47.320
So now that looks good there's no more error messages.

84
00:04:47.320 --> 00:04:52.090
So I think we have solved the problem in this cell.

85
00:04:52.090 --> 00:04:52.390
OK.

86
00:04:52.420 --> 00:04:55.510
So here it looks like we're trying to show two lines.

87
00:04:55.510 --> 00:04:58.960
So there's lists and there's commas in between them so that's good.

88
00:04:58.960 --> 00:05:08.020
We have two different colors and then huh OK so here's a case where there's no explicit error messages

89
00:05:08.050 --> 00:05:10.310
and we did get the two lines.

90
00:05:10.750 --> 00:05:16.690
However it looks like we want to plot a legend and we get this warning message that says no handles

91
00:05:16.690 --> 00:05:21.450
with labels found and then there's like a little window here.

92
00:05:21.760 --> 00:05:23.230
This is where the legend should be.

93
00:05:23.620 --> 00:05:30.130
So actually there isn't really an error here per say except that Python sees that we are trying to activate

94
00:05:30.190 --> 00:05:33.220
a legend but there is no labels in the legend.

95
00:05:33.250 --> 00:05:40.150
So what I'm going to do is write comma label equals let's call this line one because I don't really

96
00:05:40.150 --> 00:05:44.190
know what else to call these line two.

97
00:05:44.200 --> 00:05:44.650
All right.

98
00:05:44.650 --> 00:05:48.830
And now we get this nice friendly legend here all right.

99
00:05:48.850 --> 00:05:51.610
So let's go to the next one here.

100
00:05:51.610 --> 00:05:56.380
Let's see if we can already figure out a bit about what we're trying to accomplish in this code.

101
00:05:56.380 --> 00:06:05.830
So we generate a matrix of random numbers using num pi random and it's a five by nine matrix of normally

102
00:06:05.830 --> 00:06:11.170
distributed random numbers and then it looks like we're trying to draw a line that would go from the

103
00:06:11.230 --> 00:06:13.770
lower left corner to the upper right corner.

104
00:06:13.800 --> 00:06:16.450
That's gonna be a line that goes across like this.

105
00:06:16.450 --> 00:06:16.620
All right.

106
00:06:16.630 --> 00:06:19.210
So let's run this cells see what happens.

107
00:06:19.570 --> 00:06:23.630
Oh we already get a long long long long message.

108
00:06:23.680 --> 00:06:24.380
Okay.

109
00:06:24.550 --> 00:06:28.090
This says unknown property line width huh.

110
00:06:28.090 --> 00:06:32.510
So the first thing that I'm going to guess is that maybe we just misspelled this.

111
00:06:32.520 --> 00:06:36.940
Maybe there is no underscore and it's just one word line width.

112
00:06:36.940 --> 00:06:37.400
All right.

113
00:06:37.420 --> 00:06:39.930
So that was pretty good.

114
00:06:39.940 --> 00:06:42.880
So now we have our matrix of random numbers.

115
00:06:42.880 --> 00:06:45.760
It's five by nine as specified here.

116
00:06:45.850 --> 00:06:49.140
And to illustrate that this really is a matrix of random numbers.

117
00:06:49.270 --> 00:06:55.150
We can try running this code over and over again and you can see that the size is always the same but

118
00:06:55.150 --> 00:06:59.180
the colors are changing because those correspond to random numbers.

119
00:06:59.200 --> 00:06:59.440
All right.

120
00:06:59.470 --> 00:07:05.850
So now this line here this is definitely not going from the lower left corner to the upper right corner.

121
00:07:06.010 --> 00:07:11.430
So what could be the problem here do appreciate what is going wrong here.

122
00:07:11.500 --> 00:07:18.100
You can remember what I mentioned in the video on making images out of matrices.

123
00:07:18.100 --> 00:07:22.900
And that is that matrices are organized as rows first and then columns.

124
00:07:22.900 --> 00:07:30.550
So these are the rows which are in the first dimension but they actually correspond to the y axis versus

125
00:07:30.550 --> 00:07:35.800
the columns which are in the second dimension of the matrix but they correspond to the x axis.

126
00:07:36.280 --> 00:07:44.260
So therefore if you're trying to plot a line using indices into matrices you actually need to swap the

127
00:07:44.260 --> 00:07:51.160
y coordinates and the x coordinates if that feels a bit mysterious and you might want to refer back

128
00:07:51.160 --> 00:07:55.900
to the video on making images out of matrices.

129
00:07:55.900 --> 00:07:56.140
Okay.

130
00:07:56.170 --> 00:07:57.820
So let's try this again.

131
00:07:57.860 --> 00:07:58.310
Aha.

132
00:07:58.330 --> 00:08:00.340
And now this looks really nice.

133
00:08:01.120 --> 00:08:03.730
Now I think the color scheme is perfect here.

134
00:08:03.730 --> 00:08:10.030
Lots of nice deep purples and lavender is but of course you are free to play around with these color

135
00:08:10.030 --> 00:08:15.440
values remember these are a G B for mixing red green and blue colors.

136
00:08:15.550 --> 00:08:15.830
All right.

137
00:08:15.850 --> 00:08:19.480
So I'm gonna say this one is completely fixed.

138
00:08:19.480 --> 00:08:22.530
Let's go on to the next one here.

139
00:08:22.530 --> 00:08:26.800
So it looks like we're plotting two lines and so far everything looks good.

140
00:08:26.800 --> 00:08:32.500
We have the legend we turn the legend on and then there are in fact labels for line one in line two.

141
00:08:32.530 --> 00:08:33.970
So let's see what's going on here.

142
00:08:34.720 --> 00:08:35.070
OK.

143
00:08:35.110 --> 00:08:42.030
So we get the two lines that part seems fine but when you look at the legend here this says oh and n

144
00:08:42.130 --> 00:08:45.450
whereas the label here says line 1 and Line 2.

145
00:08:45.460 --> 00:08:47.000
So what is going on here.

146
00:08:47.200 --> 00:08:53.020
Actually what's going on here is that this legend here the way that I'm calling this legend I'm actually

147
00:08:53.050 --> 00:08:56.370
overwriting these labels that are specified in here.

148
00:08:56.380 --> 00:09:00.970
So you can see oh n is for these two.

149
00:09:01.090 --> 00:09:06.880
So in fact to activate the legend you don't need to provide any inputs.

150
00:09:07.000 --> 00:09:11.920
It will take the inputs that were specified up here with this label option.

151
00:09:11.950 --> 00:09:17.800
Now that said that does illustrate some interesting property of the legend method here.

152
00:09:18.250 --> 00:09:25.360
So in fact you can input a list into P.L. T dot legend and to make sure that this is let's call this

153
00:09:25.360 --> 00:09:33.640
line a and line B just to show you that whatever you write in here is going to overwrite whatever gets

154
00:09:33.640 --> 00:09:34.420
listed here.

155
00:09:34.420 --> 00:09:39.880
In fact I'm even going to delete these labels here to show you that that still works.

156
00:09:39.880 --> 00:09:44.020
Now either way that you want to set up the legend is totally fine.

157
00:09:44.110 --> 00:09:50.250
Just make sure that you're doing it either this way specifying the labels or you're doing it this way.

158
00:09:50.260 --> 00:09:55.120
If you do it both ways then you're not going to see any errors or warnings and you might be getting

159
00:09:55.120 --> 00:09:56.620
the incorrect result.

160
00:09:57.430 --> 00:09:58.120
All right.

161
00:09:58.240 --> 00:10:00.010
Let's move on.

162
00:10:00.010 --> 00:10:00.230
OK.

163
00:10:00.280 --> 00:10:07.860
So here it looks like we have a function x squared divided by X minus two and we're evaluating that

164
00:10:07.870 --> 00:10:12.780
between 1 and 4 and then making a plot and setting the Axis.

165
00:10:12.830 --> 00:10:13.440
Okay.

166
00:10:13.540 --> 00:10:16.260
So we do get the plot which looks kind of nice.

167
00:10:16.960 --> 00:10:21.400
And now this is giving us an index error to many indices for array.

168
00:10:21.820 --> 00:10:28.870
So the problem is happening in this line and here actually it turns out this is an indexing problem.

169
00:10:28.870 --> 00:10:37.820
We actually just need to make sure that this is a list that's accessing the elements inside vector x.

170
00:10:38.620 --> 00:10:41.820
So it looks a little funny with the double square brackets here.

171
00:10:41.830 --> 00:10:50.290
But this is the way to access multiple individually specified items within a vector or within a num

172
00:10:50.290 --> 00:10:51.570
pi array like this.

173
00:10:52.240 --> 00:10:52.700
OK.

174
00:10:52.720 --> 00:10:54.510
Another problem solved.

175
00:10:54.520 --> 00:10:56.350
Let's move on.

176
00:10:56.350 --> 00:10:56.640
All right.

177
00:10:56.650 --> 00:11:04.120
So here we are using the simple tool toolbox to generate a symbolic function x squared minus three x

178
00:11:04.570 --> 00:11:08.350
and then it looks like we are evaluating this or plotting this.

179
00:11:08.350 --> 00:11:12.790
It looks like we're plotting a bunch of dots and then setting the Axis label.

180
00:11:13.280 --> 00:11:13.650
OK.

181
00:11:13.660 --> 00:11:15.310
So we run this and now.

182
00:11:15.340 --> 00:11:15.640
OK.

183
00:11:15.640 --> 00:11:21.580
So first of all simplify module hasn't been imported yet so I'm going to scroll all the way back up

184
00:11:21.580 --> 00:11:31.660
here and write import simplify as Sim and then I run this cell and now I will be able to access the

185
00:11:31.800 --> 00:11:33.490
simplify module.

186
00:11:33.580 --> 00:11:34.970
Let's see that was here.

187
00:11:36.340 --> 00:11:36.640
OK.

188
00:11:36.670 --> 00:11:41.370
So now the error says add object is not callable.

189
00:11:41.590 --> 00:11:49.990
And essentially the problem here is that we are trying to access this element of Y as if y were a function

190
00:11:49.990 --> 00:11:51.240
that we were calling.

191
00:11:51.400 --> 00:11:52.860
But why isn't a function.

192
00:11:52.870 --> 00:11:54.740
It's a symbolic variable.

193
00:11:54.760 --> 00:12:02.880
So what we want to do here is not try to call this simple object as if it were a function but instead

194
00:12:02.900 --> 00:12:10.660
substitute for the variable x this variable X in here a particular value from X range.

195
00:12:10.660 --> 00:12:18.730
So there you will recall from when I taught you about using simple that the correct syntax is why dot

196
00:12:18.730 --> 00:12:26.620
subs and then we want to substitute for X the value of x range for the ISIS element.

197
00:12:27.150 --> 00:12:27.390
Okay.

198
00:12:27.420 --> 00:12:30.220
So let's see if that works.

199
00:12:30.220 --> 00:12:30.670
All right.

200
00:12:30.670 --> 00:12:37.150
So now we get this pretty nice looking function that shows us x squared minus three x which in fact

201
00:12:37.150 --> 00:12:42.620
you can also see written out in nicely latex code here on the y axis.

202
00:12:42.700 --> 00:12:43.110
All right.

203
00:12:43.120 --> 00:12:45.570
We are making good progress here.

204
00:12:45.670 --> 00:12:45.920
Okay.

205
00:12:45.950 --> 00:12:54.160
So here it looks like we are trying to plot a line Y equals M X plus B that's the standard slope intercept

206
00:12:54.160 --> 00:12:57.160
form for a line huh.

207
00:12:57.190 --> 00:13:04.380
But now we get this error message that says can only can cat Nate list to list not end.

208
00:13:04.420 --> 00:13:11.870
So here the issue is that X is stated as a list I've created X to be a list.

209
00:13:12.040 --> 00:13:20.680
But this procedure this operation works only if Y is a num pi array so I'm going to convert this into

210
00:13:21.160 --> 00:13:23.370
a num pi array.

211
00:13:23.860 --> 00:13:26.890
And now we get the line that we expected.

212
00:13:27.160 --> 00:13:28.600
And this also seems reasonable.

213
00:13:28.600 --> 00:13:32.530
You can see that the intercept is one.

214
00:13:32.590 --> 00:13:34.740
So when x equals zero right.

215
00:13:34.760 --> 00:13:37.080
Well I guess it's hard to see exactly where it is.

216
00:13:37.090 --> 00:13:44.110
But if you like I encourage you to add a grid or add some lines at the Y equals zero and x equals zero

217
00:13:44.110 --> 00:13:49.240
line to confirm what should be present from these parameters.

218
00:13:49.240 --> 00:13:51.060
Okay so let's go down.

219
00:13:51.100 --> 00:13:51.340
All right.

220
00:13:51.370 --> 00:13:51.850
Let's see.

221
00:13:51.850 --> 00:13:56.690
Here we are specifying some range of x from minus 20 into plus 20.

222
00:13:56.890 --> 00:14:04.090
And then it looks like we're plotting a line that goes from 0 to x and 0 to the absolute value of the

223
00:14:04.090 --> 00:14:08.950
square root of the absolute value of x and specifying some line color.

224
00:14:08.950 --> 00:14:09.170
All right.

225
00:14:09.190 --> 00:14:10.710
Let's see what the problem is here.

226
00:14:11.520 --> 00:14:11.790
Okay.

227
00:14:11.800 --> 00:14:13.950
First of all we say invalid syntax.

228
00:14:13.960 --> 00:14:17.150
So it's already in Peel team.

229
00:14:17.170 --> 00:14:23.800
Now sometimes when you see this message invalid syntax and it's happening at a line of code that doesn't

230
00:14:23.860 --> 00:14:25.640
obviously look wrong.

231
00:14:25.660 --> 00:14:29.920
One thing to consider is whether you are missing some parentheses somewhere.

232
00:14:30.430 --> 00:14:32.830
So let's go through all of these parentheses.

233
00:14:32.830 --> 00:14:36.360
I'm going to look at these square brackets that seems right.

234
00:14:36.370 --> 00:14:38.990
These square brackets seem right.

235
00:14:39.340 --> 00:14:40.710
This oh look at this.

236
00:14:40.720 --> 00:14:45.850
We have the parentheses here that ends the line color.

237
00:14:45.850 --> 00:14:47.670
This list for the line color.

238
00:14:47.670 --> 00:14:52.390
But that means there's actually no end parentheses for this P.L. teed up plot.

239
00:14:52.390 --> 00:14:57.780
And in fact when I click next to it you can see it turns red instead of turning green.

240
00:14:57.790 --> 00:14:58.060
All right.

241
00:14:58.090 --> 00:15:01.120
So we are missing a parentheses.

242
00:15:01.330 --> 00:15:08.440
I sometimes wonder how many hours of programmer's lives are lost due to just finding and fixing these

243
00:15:08.440 --> 00:15:10.410
kinds of bugs.

244
00:15:10.420 --> 00:15:10.770
All right.

245
00:15:10.780 --> 00:15:16.330
So that gave us a whole new problem with a really long error message.

246
00:15:16.330 --> 00:15:20.050
But again the problem is unknown property line color.

247
00:15:20.050 --> 00:15:20.650
All right.

248
00:15:20.650 --> 00:15:22.880
And we know how to fix this one.

249
00:15:22.960 --> 00:15:24.000
It's actually one word.

250
00:15:24.070 --> 00:15:24.780
Line color.

251
00:15:25.340 --> 00:15:28.630
Oh there's still another error message.

252
00:15:28.660 --> 00:15:30.090
Let's see.

253
00:15:30.090 --> 00:15:30.490
Huh.

254
00:15:30.490 --> 00:15:31.720
Unknown property line.

255
00:15:31.750 --> 00:15:32.020
OK.

256
00:15:32.050 --> 00:15:34.590
So it's still not called line color.

257
00:15:34.600 --> 00:15:37.060
So it's not line color with an underscore.

258
00:15:37.240 --> 00:15:39.450
It's not line color without an underscore.

259
00:15:39.610 --> 00:15:43.640
Maybe I'm gonna look up the help file for appeal D dot plot.

260
00:15:44.560 --> 00:15:49.060
So let me scroll down and see if I can find some thing Look at that.

261
00:15:49.090 --> 00:15:50.610
It's actually just called color.

262
00:15:50.610 --> 00:15:52.540
It's not called line color.

263
00:15:52.540 --> 00:15:53.350
All right.

264
00:15:53.530 --> 00:15:57.850
So it's just color like that OK.

265
00:15:57.860 --> 00:15:59.000
And now there's even.

266
00:15:59.060 --> 00:15:59.290
OK.

267
00:15:59.330 --> 00:16:02.450
So first while we get a plot already so that's pretty nice.

268
00:16:02.460 --> 00:16:09.110
Now this says unrecognized string of to access try on or off.

269
00:16:09.160 --> 00:16:10.060
Oh right.

270
00:16:10.060 --> 00:16:12.020
This was a simple typo.

271
00:16:12.070 --> 00:16:14.200
It should be axis off.

272
00:16:14.200 --> 00:16:17.160
Not axis of all right.

273
00:16:17.230 --> 00:16:18.390
Now this.

274
00:16:18.490 --> 00:16:21.760
Not only do we get the code right but we get this really beautiful plot.

275
00:16:21.760 --> 00:16:24.230
This looks really nice.

276
00:16:24.280 --> 00:16:30.860
Now we get down to looks like the final bug hunt that we have to solve.

277
00:16:30.910 --> 00:16:34.500
Okay so draw a checkerboard with purple numbers on top.

278
00:16:34.510 --> 00:16:38.800
You can see purple is a recurring theme around here.

279
00:16:38.810 --> 00:16:44.120
Okay so we initialize some matrix of zeros create the checker board.

280
00:16:44.140 --> 00:16:51.520
This is using a formula that I showed in a previous video about making images out of matrices and then

281
00:16:51.520 --> 00:16:53.130
we plot some text on here.

282
00:16:53.140 --> 00:16:53.470
Okay.

283
00:16:53.500 --> 00:16:55.110
Let's just see what this thing looks like.

284
00:16:55.770 --> 00:16:56.040
Okay.

285
00:16:56.050 --> 00:16:59.500
So first of all there is no error messages no warning messages.

286
00:16:59.950 --> 00:17:01.520
So that's pretty good.

287
00:17:01.810 --> 00:17:05.830
But now the problem is that the checker board looks like this.

288
00:17:05.830 --> 00:17:13.300
So it's this kind of tall looking matrix checkerboard but the numbers are organized in a wide matrix

289
00:17:13.300 --> 00:17:14.120
like this.

290
00:17:14.200 --> 00:17:14.500
Okay.

291
00:17:14.500 --> 00:17:21.490
And the solution here is actually the same as the solution to a problem with drawing the Purple Line

292
00:17:21.490 --> 00:17:27.400
on the purple matrix that I showed earlier and that is that you have to swap the Y and X coordinates

293
00:17:27.760 --> 00:17:33.190
because rows correspond to the y axis and columns correspond to the x axis.

294
00:17:33.510 --> 00:17:33.750
Okay.

295
00:17:33.790 --> 00:17:35.680
So now this looks good.

296
00:17:35.720 --> 00:17:41.230
Now it's also interesting I'm introducing you to a little bit of new code here so I haven't showed you

297
00:17:41.710 --> 00:17:42.990
this code yet.

298
00:17:43.030 --> 00:17:51.700
This is a way to specify optional parameters for the text and in this case I am creating the color I'm

299
00:17:51.700 --> 00:17:55.950
specifying that the colors should be magenta instead of the default.

300
00:17:55.980 --> 00:17:58.210
Not sure what the default color is maybe it's black.

301
00:17:58.240 --> 00:17:59.410
Let's see.

302
00:17:59.440 --> 00:17:59.680
Oh yeah.

303
00:17:59.710 --> 00:18:04.070
So the default color is black but then we miss half of the colors.

304
00:18:04.630 --> 00:18:07.570
Okay so obviously this is a much nicer color.

305
00:18:07.570 --> 00:18:09.430
It's also interesting to see the patterns.

306
00:18:09.430 --> 00:18:10.390
Here we go.

307
00:18:10.390 --> 00:18:15.580
0 3 7 and then 1 through 8 2 3 9 and 3 through 10.

308
00:18:15.580 --> 00:18:15.970
All right.

309
00:18:16.000 --> 00:18:19.210
So congratulations on finishing this bug hunt.

310
00:18:19.360 --> 00:18:20.350
I hope you enjoyed it.

311
00:18:20.350 --> 00:18:28.090
I hope you found it fun and also educational and that also finishes up this section of the course on

312
00:18:28.150 --> 00:18:31.300
graphing in Python.

313
00:18:31.300 --> 00:18:35.680
Stay tuned because the next section of the course is going to be really exciting.

314
00:18:35.680 --> 00:18:40.420
You're going to learn all about using Python to help you learn algebra.

315
00:18:40.420 --> 00:18:41.210
See you then.
