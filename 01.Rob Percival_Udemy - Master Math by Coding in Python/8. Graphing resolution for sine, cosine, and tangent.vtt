WEBVTT
1
00:00:02.970 --> 00:00:11.480
In this video I'm going to talk more about plotting and computing sine and cosine and also the tangent.

2
00:00:11.520 --> 00:00:14.220
Now you've already encountered sine and cosine.

3
00:00:14.250 --> 00:00:16.590
Many many times in this course.

4
00:00:16.590 --> 00:00:25.140
But there is going to be some new things in this video including a discussion and demonstration of resolution

5
00:00:25.170 --> 00:00:27.600
when translating formulas into code.

6
00:00:27.600 --> 00:00:32.940
Now if you're not really sure what I mean here then don't worry that will all become clear very soon.

7
00:00:32.940 --> 00:00:41.390
So let's immediately switch to Python and get started the first thing I want to do is just make a plot

8
00:00:41.480 --> 00:00:44.610
of sine and cosine over time.

9
00:00:44.630 --> 00:00:47.970
So let's say known pi Lynn space.

10
00:00:47.990 --> 00:00:50.050
Let's go from zero to six.

11
00:00:50.090 --> 00:00:54.700
PI and how about in 400 steps.

12
00:00:54.880 --> 00:01:05.380
So let's plot x by sign of X and I'll make this a red line and let's also give these legend labels so

13
00:01:05.380 --> 00:01:14.490
this is going to be sine of theta and then I want to plot cosine on top of this.

14
00:01:14.680 --> 00:01:23.440
So let's see this is gonna be cosine of theta and I'll change this to cosine of theta and activate the

15
00:01:23.500 --> 00:01:28.450
legend and show the plot Oh yeah.

16
00:01:28.610 --> 00:01:29.610
That should be blue

17
00:01:32.430 --> 00:01:33.080
so let's see.

18
00:01:33.070 --> 00:01:40.980
I'm gonna add an ex label so plot ex label and let's call this radians.

19
00:01:41.010 --> 00:01:49.590
Actually people often abbreviate radians as rad and then the Y label is simply the function values.

20
00:01:49.590 --> 00:01:53.110
I'll just say the function value now.

21
00:01:53.190 --> 00:01:56.600
The thing is I don't like having this word theta here.

22
00:01:56.700 --> 00:02:01.170
I would like this to be the actual Greek symbol for theta.

23
00:02:01.290 --> 00:02:03.890
So to do that I need to make this latex code.

24
00:02:03.920 --> 00:02:10.400
But if you just put in a double slash like this that's not going to get interpreted as latex.

25
00:02:10.470 --> 00:02:18.600
So to make sure that this is latex code I'm going to in case the strings inside these legends in dollar

26
00:02:18.600 --> 00:02:19.240
signs.

27
00:02:20.160 --> 00:02:29.320
So now that gets interpreted as a Theta symbol as the Greek character but now sine and cosine are italicized.

28
00:02:29.400 --> 00:02:34.620
But I want these to be the reserved words sine and cosine the function sine and cosine.

29
00:02:34.650 --> 00:02:43.370
So again I'm gonna put slashes in front of them and notice that sign up here is now not in italics is

30
00:02:43.410 --> 00:02:46.950
just in regular upright letters but cosine is in italics.

31
00:02:46.970 --> 00:02:50.620
Now when I run this again we get the correct legend.

32
00:02:50.750 --> 00:02:53.970
Okay so far nothing terribly new.

33
00:02:54.120 --> 00:02:57.140
You are probably familiar with the tangent function.

34
00:02:57.150 --> 00:03:00.440
It's essentially just the ratio between sine and cosine.

35
00:03:00.780 --> 00:03:03.890
So let's see what the tangent function looks like.

36
00:03:04.170 --> 00:03:06.330
So let's plot this from Let's go.

37
00:03:06.450 --> 00:03:10.020
Maybe I'll call this variable figure for theta.

38
00:03:10.020 --> 00:03:18.990
So first is going to be equal to linearly space numbers between 0 and let's go to 4 pi am.

39
00:03:19.070 --> 00:03:21.870
How about let's try you know how many steps do we need here.

40
00:03:21.900 --> 00:03:24.500
Let's try 30 steps maybe.

41
00:03:24.960 --> 00:03:29.760
And actually let me begin by changing this from 40 hour from 400.

42
00:03:29.790 --> 00:03:31.390
Let's try 40.

43
00:03:31.460 --> 00:03:31.700
Okay.

44
00:03:31.740 --> 00:03:38.310
So you can see these functions still look pretty good at 40 at a resolution of 40 so 40 points here

45
00:03:39.270 --> 00:03:44.500
although they are starting to get a little bit kind of blocky a little bit discourteous.

46
00:03:44.580 --> 00:03:48.870
Now you can make this be really small and at some point it's going to be just ridiculous.

47
00:03:48.900 --> 00:03:49.140
Okay.

48
00:03:49.170 --> 00:03:52.410
So 4 is definitely not enough points.

49
00:03:52.410 --> 00:03:55.450
How about 10 also really not enough points.

50
00:03:55.470 --> 00:04:04.050
What I'm doing here is changing the resolution of this variable X and so the resolution is the number

51
00:04:04.050 --> 00:04:08.340
of sample points per distance let's say.

52
00:04:08.700 --> 00:04:12.720
So now the resolution is ten points per six pi.

53
00:04:12.720 --> 00:04:15.380
Now that's not a common resolution.

54
00:04:15.390 --> 00:04:19.090
I'm just literally interpreting how this variable is set up.

55
00:04:19.810 --> 00:04:27.930
Okay so we've established that 10 is the resolution of 10 points here is too few.

56
00:04:27.980 --> 00:04:29.550
One hundred looks pretty good.

57
00:04:29.670 --> 00:04:34.560
And now let's see if we would increase the resolution by an order of magnitude.

58
00:04:34.560 --> 00:04:38.220
So instead of 100 let's make it a thousand all right.

59
00:04:38.220 --> 00:04:40.560
So that doesn't really look much better.

60
00:04:40.560 --> 00:04:46.550
In fact it's kind of hard even to see the difference between a thousand points and one hundred points.

61
00:04:46.560 --> 00:04:50.790
I guess if you look closely you can kind of see the difference.

62
00:04:50.820 --> 00:04:58.260
So the take home message here is that with higher resolution you get better smoother more interpretable

63
00:04:58.260 --> 00:05:00.090
plots but only up to a point.

64
00:05:00.100 --> 00:05:04.950
Eventually you get to a point where having a higher resolution doesn't really help you.

65
00:05:04.950 --> 00:05:08.010
It's just going to make the code longer to run.

66
00:05:08.070 --> 00:05:11.070
So ten thousand is pretty excessive.

67
00:05:11.100 --> 00:05:16.260
Now there is a whole theory in signal processing about resolution.

68
00:05:16.260 --> 00:05:19.920
It's related to sampling theory and the Nyquil theorem and so on.

69
00:05:20.040 --> 00:05:21.840
That's beyond the scope of this course.

70
00:05:21.840 --> 00:05:28.530
That's something I talk more about in my course on signal processing but mostly I want to convey the

71
00:05:28.530 --> 00:05:35.520
intuition that when you are disk retiring functions which happens when you evaluate functions in code

72
00:05:35.850 --> 00:05:42.990
you have to think carefully about how many points you need in your X axis or y axis range.

73
00:05:43.200 --> 00:05:49.500
OK so that said let's try this again with the tangent function and I think you will see this even more

74
00:05:49.560 --> 00:05:50.700
extreme.

75
00:05:50.700 --> 00:05:57.360
So let's say plots theta by known spider 10 of theta.

76
00:05:57.360 --> 00:06:03.030
This is the function to compute the tangent and let's make this a black line.

77
00:06:03.390 --> 00:06:10.930
So then we won P L T show and what have I done wrong here.

78
00:06:11.040 --> 00:06:12.390
This is a stupid typo.

79
00:06:12.420 --> 00:06:17.340
So this was t h but here I put an X I was still thinking about the previous pi.

80
00:06:18.690 --> 00:06:22.160
Okay so now you see I think the resolution is pretty low.

81
00:06:22.200 --> 00:06:28.980
What actually happens with tangent is that at each cycle tangent is going to blow up to minus to plus

82
00:06:28.980 --> 00:06:31.900
infinity and then it's going to come down from minus infinite.

83
00:06:32.280 --> 00:06:34.550
Now you don't really get that sense here.

84
00:06:34.680 --> 00:06:36.110
It's going to be clear.

85
00:06:36.300 --> 00:06:42.480
If I do let's say three hundred points and now you can see that this is still not blowing up to plus

86
00:06:42.480 --> 00:06:43.460
infinity.

87
00:06:43.530 --> 00:06:45.810
So maybe if we add more points.

88
00:06:45.870 --> 00:06:51.610
Notice the range here is about 50 to a little under 200.

89
00:06:52.390 --> 00:06:59.190
And now this range is getting higher and higher as I'm adding more and more numbers as the resolution

90
00:06:59.220 --> 00:07:00.960
is getting higher.

91
00:07:00.960 --> 00:07:08.370
And again this is happening because with more points we are better able to assess this small changes

92
00:07:08.460 --> 00:07:09.780
in the function over time.

93
00:07:09.780 --> 00:07:15.060
So when they are slow changes in the function then you don't need so many points when there's fast changes

94
00:07:15.060 --> 00:07:16.170
in the function.

95
00:07:16.170 --> 00:07:18.230
You need to have a lot more points.

96
00:07:18.630 --> 00:07:20.520
So I'm going to zoom in here a bit.

97
00:07:20.550 --> 00:07:27.960
So I want to change the Y limit to go from how about minus two to plus two.

98
00:07:28.880 --> 00:07:29.160
Okay.

99
00:07:29.180 --> 00:07:30.930
That's maybe we need a little bit more.

100
00:07:30.930 --> 00:07:34.890
How about minus five to plus five.

101
00:07:34.920 --> 00:07:35.160
Okay.

102
00:07:35.160 --> 00:07:41.670
So now you're starting to see the dynamics of the tangent function that it blows up to plus infinity

103
00:07:42.000 --> 00:07:47.240
and then it comes down from minus infinity and it goes up to plus infinity again.

104
00:07:47.250 --> 00:07:52.320
Now if I go back to let's say three hundred three hundred actually it still looks pretty good.

105
00:07:52.320 --> 00:07:53.800
How about 30.

106
00:07:53.850 --> 00:07:59.820
Now you see that the resolution is too low for this function.

107
00:07:59.820 --> 00:08:00.270
All right.

108
00:08:00.270 --> 00:08:06.360
And again I'm not going to get into detailed discussions here about what is the appropriate level of

109
00:08:06.360 --> 00:08:07.620
resolution.

110
00:08:07.650 --> 00:08:13.140
Instead I just want to build some intuition that there are resolutions that are too low and there are

111
00:08:13.140 --> 00:08:15.430
resolutions that are sufficient.

112
00:08:15.480 --> 00:08:21.930
And then once you get to a sufficient level of resolution basically adding a higher resolution mostly

113
00:08:21.930 --> 00:08:23.480
doesn't really help you.

114
00:08:23.730 --> 00:08:29.300
It's just going to make the variables take up more space in Python's buffer.

115
00:08:29.400 --> 00:08:31.680
So what is tangent what is tangent mean.

116
00:08:31.680 --> 00:08:39.350
So the tangent is a function that is actually defined as the ratio between sine and cosine.

117
00:08:39.450 --> 00:08:45.090
So if that's really true then we should be able to take sine divided by cosine and show that that is

118
00:08:45.150 --> 00:08:47.000
equal to the tangent.

119
00:08:47.160 --> 00:08:50.490
And that's what I'm going to do in this cell down here.

120
00:08:51.720 --> 00:08:58.860
So what I want to do is come up with some random phase angle and then show that the tangent is the same

121
00:08:58.860 --> 00:09:01.590
thing as sine divided by cosine.

122
00:09:01.680 --> 00:09:04.540
So let's come up with a random phase angle.

123
00:09:04.560 --> 00:09:09.460
Now of course you know all about coming up with random numbers.

124
00:09:09.660 --> 00:09:11.880
So we want one random number.

125
00:09:11.880 --> 00:09:15.990
And now this is going to be scaled between 0 and 1.

126
00:09:15.990 --> 00:09:21.870
So to get this to be a random angle in radians we have to multiply it by pi.

127
00:09:21.930 --> 00:09:31.200
So and then what I'm going to do is compute the tangent and that's going to be in PI dot Tan of the

128
00:09:31.500 --> 00:09:40.830
angle and then I want the let's call this SC for sine divided by cosine so n Pitot sign of the angle

129
00:09:41.280 --> 00:09:45.590
divided by the cosine of this same angle.

130
00:09:45.630 --> 00:09:48.580
So how can I show that these two are equal to each other.

131
00:09:48.600 --> 00:09:55.160
Well in theory what I want to do is say something like 10 equals sine divided by cosine.

132
00:09:55.430 --> 00:10:02.310
What I'm gonna do instead is move both sides or subtract both sides of this equation by sine cosigner

133
00:10:02.400 --> 00:10:09.910
SC and now the thing that I'm testing is this equation here but we don't need the right hand side of

134
00:10:09.910 --> 00:10:10.930
this equation.

135
00:10:10.930 --> 00:10:18.130
I'm just going to subtract these two and it turns out that they are zero and that's not just some random

136
00:10:18.520 --> 00:10:25.360
things that actually let me do it this way and say print the angle and then the difference between tangent

137
00:10:25.480 --> 00:10:32.770
and sine divided by cosine and you can see that regardless of what the angle ends up being the difference

138
00:10:32.770 --> 00:10:38.410
between these is always zero and then of course sometimes there's this computer rounding error.

139
00:10:38.440 --> 00:10:44.450
So we get 10 to the minus 15 which is essentially the same thing as zero.

140
00:10:44.530 --> 00:10:45.500
All right.

141
00:10:45.520 --> 00:10:52.540
Since we're on the topic of trig identities there's another trig identity that I want to illustrate

142
00:10:52.540 --> 00:10:53.150
to you.

143
00:10:53.350 --> 00:11:01.980
And that is possibly one of the most important trigonometric identities which is that cosine squared

144
00:11:02.010 --> 00:11:05.780
plus sine squared equals one.

145
00:11:05.850 --> 00:11:11.490
So this is what I want to demonstrate to you or at least illustrate in examples.

146
00:11:12.030 --> 00:11:21.830
So let's take some theta as theta is and set that to be linearly space numbers from 0 to 2 times pi.

147
00:11:22.290 --> 00:11:28.110
And let's go for maybe 13 steps between 0 and 2 Pi.

148
00:11:28.110 --> 00:11:37.500
And now I'm going to compute num Pi the cosine of theta is squared plus num paid out sign of theta is

149
00:11:38.280 --> 00:11:39.640
again squared.

150
00:11:39.640 --> 00:11:42.570
And let's just see what this happens to be.

151
00:11:42.660 --> 00:11:43.140
All right.

152
00:11:43.140 --> 00:11:49.860
So the answer is a vector of one's a num pi array that contains all ones.

153
00:11:49.860 --> 00:11:52.950
So for all of these vectors and actually let's.

154
00:11:52.950 --> 00:11:57.510
We can do it this way we can say print theta is and then print

155
00:12:00.390 --> 00:12:02.160
the answer to here.

156
00:12:02.160 --> 00:12:03.960
So for all of these different theta.

157
00:12:03.990 --> 00:12:08.440
These are all different numbers but when we take the cosine and then square that.

158
00:12:08.550 --> 00:12:13.710
Add that to the sign of those angles and then square that the number is always 1.

159
00:12:13.710 --> 00:12:15.300
The result is always 1.

160
00:12:15.300 --> 00:12:22.990
So that's a pretty important trig identity to commit to memory in this video we worked a little bit

161
00:12:22.990 --> 00:12:29.110
more with trig functions and in particular perhaps the most important concept that I discussed in this

162
00:12:29.110 --> 00:12:35.590
video was this issue of resolution when translating formulas that are sort of analog and they exist

163
00:12:35.620 --> 00:12:42.010
out there in the real world in a continuous fashion to implementing those formulas in code where you

164
00:12:42.010 --> 00:12:48.220
have to disk ties and come up with some specific set of numbers to evaluate those formulas.

165
00:12:48.220 --> 00:12:50.350
And that resolution is not trivial.

166
00:12:50.350 --> 00:12:58.010
That's an important part of doing math with Python or with computers more generally so there are two

167
00:12:58.010 --> 00:13:02.270
exercises associated with this video with this title.

168
00:13:02.570 --> 00:13:06.260
And both of those exercises are going to come in the next video.

169
00:13:06.290 --> 00:13:07.490
So keep watching.
