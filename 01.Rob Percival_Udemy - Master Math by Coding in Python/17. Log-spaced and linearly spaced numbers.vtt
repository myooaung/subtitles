WEBVTT
1
00:00:03.750 --> 00:00:10.070
In this video I'm going to tell you about the difference between linear least based numbers and logarithmic

2
00:00:10.070 --> 00:00:11.700
least based numbers.

3
00:00:11.700 --> 00:00:18.780
And in the exercise you will see that linear functions are generally good approximations of nonlinear

4
00:00:18.780 --> 00:00:21.690
functions at close distances.

5
00:00:21.690 --> 00:00:28.620
This turns out to be a really important observation for many areas of applied mathematics in particular

6
00:00:28.620 --> 00:00:33.190
in engineering and that is because nonlinear functions can be difficult.

7
00:00:33.210 --> 00:00:38.790
They can be a little bit hairy sometimes are hard to work with but linear functions are generally always

8
00:00:38.790 --> 00:00:41.790
straightforward and easy to implement.

9
00:00:41.790 --> 00:00:48.800
So if you wanted to count between 1 and 5 probably the way you would go about doing that is to say 1

10
00:00:48.800 --> 00:00:50.670
2 3 4 5.

11
00:00:50.700 --> 00:00:58.020
Now this is a linear scale and what characterizes a linear scale is that the space between each successive

12
00:00:58.340 --> 00:01:00.730
count or increment is the same.

13
00:01:00.780 --> 00:01:08.320
So the distance between 1 and 2 is the same as the distance between 2 and 3 and 3 and 4 and 4 and 5.

14
00:01:08.370 --> 00:01:12.440
Now that's not surprising because that's sort of how you learned how to count.

15
00:01:12.480 --> 00:01:16.710
That's how you count your whole life but logger rhythmically space numbers.

16
00:01:16.710 --> 00:01:21.780
So log counting between 1 and 5 actually gives slightly different answers.

17
00:01:21.810 --> 00:01:29.280
So here you go one and then two one point five then two point two three point three and then up to five.

18
00:01:29.310 --> 00:01:35.700
Now notice that the distance between each successive number each successive count is not the same.

19
00:01:35.700 --> 00:01:38.130
In fact the distances are increasing.

20
00:01:38.130 --> 00:01:45.030
So from one to one point five we go one half but from one point five to two point two.

21
00:01:45.030 --> 00:01:46.870
That's a distance of point seven.

22
00:01:47.040 --> 00:01:52.950
From here to here is a distance of one point one and three point three to five is a distance of one

23
00:01:52.950 --> 00:01:53.640
point seven.

24
00:01:53.640 --> 00:02:00.450
So in fact the distance between this number and this number is three times larger than the distance

25
00:02:00.450 --> 00:02:02.490
between this number and this number.

26
00:02:02.490 --> 00:02:11.830
And that is characterizing logarithmic least spaced scales to implement linear and nonlinear counting

27
00:02:11.890 --> 00:02:13.000
in Python.

28
00:02:13.000 --> 00:02:16.700
You can use the NUM pi module and the map plot lib.

29
00:02:16.750 --> 00:02:19.510
Gonna be useful for the exercise.

30
00:02:19.510 --> 00:02:24.290
So in fact I've already introduced you to creating linearly spaced numbers.

31
00:02:24.370 --> 00:02:31.060
That is the function Lynn space in the NUM pi module and generally the way you use Lin space is to input

32
00:02:31.120 --> 00:02:31.900
three numbers.

33
00:02:31.900 --> 00:02:39.310
So you start with the lower bound and then the upper bound and then the number of numbers so the number

34
00:02:39.310 --> 00:02:44.180
of linearly evenly spaced numbers between the lower bound and the upper bound.

35
00:02:44.230 --> 00:02:46.240
And let's say that's about 10.

36
00:02:46.810 --> 00:02:47.050
Okay.

37
00:02:47.080 --> 00:02:51.730
So here we get linearly space numbers between 1 and 5.

38
00:02:51.820 --> 00:02:56.650
So let's say and actually to facilitate the next discussion I'm going to change this to 2.

39
00:02:57.070 --> 00:03:02.440
So now we have 10 linearly spaced numbers between 1 and 2.

40
00:03:02.470 --> 00:03:09.880
So now let's try this with log space so to get logarithmic space numbers you use the function log space

41
00:03:10.220 --> 00:03:12.580
and now the function works kind of similarly.

42
00:03:12.580 --> 00:03:15.100
So we start with the lower bound and the upper bound.

43
00:03:15.310 --> 00:03:17.780
And then the number of numbers between them.

44
00:03:17.830 --> 00:03:23.380
However when you look at this output I don't know it looks wrong doesn't it.

45
00:03:23.440 --> 00:03:28.580
Looks like a different output from what you probably would have expected.

46
00:03:28.600 --> 00:03:33.190
So in this case we wrote 1 and 2 as the lower and upper bounds.

47
00:03:33.280 --> 00:03:37.530
But what came out was 10 to a hundred.

48
00:03:37.600 --> 00:03:44.230
Now if you have your thinking cap on which I always recommend when learning math and and coding then

49
00:03:44.230 --> 00:03:49.210
you might notice that there is a relationship between these numbers and these two numbers.

50
00:03:49.210 --> 00:03:53.270
And in fact this first number is 10 to the power of 1.

51
00:03:53.380 --> 00:03:56.950
And this last number is 10 to the power of 2.

52
00:03:57.190 --> 00:04:03.400
And that is not a coincidence that is exactly how the log space function works so it's going to take

53
00:04:03.820 --> 00:04:10.360
10 logarithmic leased space numbers not between the first input and the second input but between 10

54
00:04:10.360 --> 00:04:14.950
to the power of the first input and tend to the power of the second input.

55
00:04:14.950 --> 00:04:27.280
So in fact what you really want to do is something like NPD dot log 10 of 1 and then log 10 of 2 like

56
00:04:27.280 --> 00:04:27.670
this.

57
00:04:27.670 --> 00:04:30.770
And this is going to give you the expected result.

58
00:04:30.880 --> 00:04:34.290
Now in my opinion this is a little bit confusing.

59
00:04:34.290 --> 00:04:39.490
We're starting to get to a bunch of embedded functions here so I generally like to set things up like

60
00:04:39.490 --> 00:04:39.970
this.

61
00:04:39.970 --> 00:04:54.460
I would say a equals so one variable equals this and then we have B equals log 10 of 2 and then you

62
00:04:54.460 --> 00:04:56.040
write a and b here.

63
00:04:56.070 --> 00:04:58.740
Now in my opinion this looks a little bit cleaner.

64
00:04:58.740 --> 00:05:01.540
Of course that gives you exactly the same result in the end.

65
00:05:03.380 --> 00:05:11.360
As I mentioned in the beginning of this video the exercise for this video is to show that a linear scale

66
00:05:11.560 --> 00:05:16.490
approach is a logarithmic scale as the boundaries approach each other.

67
00:05:16.490 --> 00:05:17.630
So this is quite a mouthful.

68
00:05:17.630 --> 00:05:18.980
What does this mean.

69
00:05:19.010 --> 00:05:25.280
Let's actually start just by looking at the picture and asking the question Do these two lines approximate

70
00:05:25.340 --> 00:05:25.850
each other.

71
00:05:25.850 --> 00:05:27.720
Are they almost the same thing.

72
00:05:27.950 --> 00:05:32.860
Now I'm sure you agree that the answer is no they don't look like they're the same thing.

73
00:05:32.870 --> 00:05:38.040
They do start and end at the same points but they certainly look very different from each other.

74
00:05:38.120 --> 00:05:40.980
Now these two boundaries are pretty far apart.

75
00:05:41.030 --> 00:05:47.240
I think this was two and this was one hundred and what you want to do in this exercise is first generate

76
00:05:47.240 --> 00:05:53.080
a plot that looks like this and then move these boundaries closer and closer to each other.

77
00:05:53.120 --> 00:06:00.470
And what you will discover is that as these boundaries get closer and closer the linear scale is a better

78
00:06:00.470 --> 00:06:04.910
and better approximation of this non-linear function.

79
00:06:04.910 --> 00:06:05.200
All right.

80
00:06:05.210 --> 00:06:10.700
So now is the time to pause the video because I am going to switch to Python and start showing you my

81
00:06:10.700 --> 00:06:13.580
solution here.

82
00:06:13.580 --> 00:06:13.930
All right.

83
00:06:13.960 --> 00:06:21.080
So let's say the boundaries go from a which is two to B which is a hundred.

84
00:06:21.110 --> 00:06:27.260
And I'm going to specify 50 points between these two boundaries.

85
00:06:27.260 --> 00:06:31.430
So now I want linearly spaced numbers between a and b.

86
00:06:31.440 --> 00:06:32.470
That's NPR.

87
00:06:32.480 --> 00:06:35.350
Lin space a b and N.

88
00:06:35.360 --> 00:06:36.990
Because I want end of them.

89
00:06:37.010 --> 00:06:42.040
And then the logarithmic Lee space numbers will be and Peter long space.

90
00:06:42.190 --> 00:06:48.550
I remember this was slightly more confusing we have to go and P. log 10 of a do it.

91
00:06:48.890 --> 00:06:56.660
Num pi log ten of B and then there are going to be end of these guys as well.

92
00:06:56.660 --> 00:06:56.900
All right.

93
00:06:56.930 --> 00:06:59.750
So this generates the numbers the sequences.

94
00:06:59.750 --> 00:07:03.110
And now we just need to plot them so let's say plot.

95
00:07:03.110 --> 00:07:08.840
Now the x axis actually is the input so I'm gonna write I'm going to specify that the x axis should

96
00:07:08.840 --> 00:07:11.960
also be l I and then apply for the Y.

97
00:07:11.960 --> 00:07:21.620
So this is going to be label is linear and then we have P L teed up plot L I dot l 0 for logarithmic

98
00:07:21.620 --> 00:07:26.220
these base numbers and this is going to be log let's see.

99
00:07:26.240 --> 00:07:33.160
Then we need to activate the legend and show the plot.

100
00:07:33.410 --> 00:07:37.550
Okay so let's see how this looks actually it looks a little bit stretched out.

101
00:07:37.550 --> 00:07:41.990
I think I'm also gonna make the axis square.

102
00:07:42.480 --> 00:07:42.810
Okay.

103
00:07:42.920 --> 00:07:48.680
So this looks pretty good except I think the colors are reversed from what I showed in the slides but

104
00:07:48.680 --> 00:07:49.640
that doesn't matter.

105
00:07:49.640 --> 00:07:51.020
The labels are correct.

106
00:07:51.020 --> 00:07:53.100
So that's the most important thing.

107
00:07:53.240 --> 00:07:57.770
Now what I'm going to do is move these boundaries to be closer to each other.

108
00:07:57.800 --> 00:08:04.550
And what you will see is that the straight lines of the linear function looks more and more like the

109
00:08:04.610 --> 00:08:08.480
logarithmic scaling as the boundaries get close to each other.

110
00:08:08.480 --> 00:08:09.620
So let's try.

111
00:08:09.650 --> 00:08:12.830
How about 30 and 70.

112
00:08:12.830 --> 00:08:13.150
All right.

113
00:08:13.160 --> 00:08:18.090
So you can already see that the distance between these two lines is smaller.

114
00:08:18.200 --> 00:08:22.290
Let's go for 40 and 60.

115
00:08:22.310 --> 00:08:24.520
About fifty.

116
00:08:24.710 --> 00:08:25.030
All right.

117
00:08:25.040 --> 00:08:31.340
Getting closer and let's make this 50 even closer.

118
00:08:31.340 --> 00:08:35.320
How about even forty five which isn't even that close together.

119
00:08:35.330 --> 00:08:42.310
These aren't like super close together and still you can see that the lines are nearly entirely overlapping.

120
00:08:42.440 --> 00:08:50.210
And again the important point here is that linear functions are actually really good close approximations

121
00:08:50.210 --> 00:08:55.100
to nonlinear functions as the distances gets really small.

122
00:08:55.100 --> 00:09:02.540
And again that fact becomes really important for applications of mathematics in particular in engineering

123
00:09:02.540 --> 00:09:05.570
and physics in simulations.

124
00:09:05.570 --> 00:09:11.540
So in this video you learned about log scale and linear scale or log spaced and linearly spaced numbers

125
00:09:11.810 --> 00:09:19.220
and you got to see a demonstration of how linear functions are good approximations of nonlinear functions

126
00:09:19.340 --> 00:09:20.540
at close boundaries.
