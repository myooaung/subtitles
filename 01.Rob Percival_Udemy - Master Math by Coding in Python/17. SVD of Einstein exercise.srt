1
00:00:03,460 --> 00:00:10,290
This video contains the exercise corresponding to the SVOD or the singular value decomposition.

2
00:00:10,420 --> 00:00:13,530
Following up from the previous video.

3
00:00:13,630 --> 00:00:17,600
So what you want to do is bring Einstein back from the dead.

4
00:00:17,680 --> 00:00:17,950
Okay.

5
00:00:17,950 --> 00:00:18,720
That's not really true.

6
00:00:18,730 --> 00:00:26,740
What you want to do in the first of three exercises is reconstruct the original image from the SVOD

7
00:00:27,340 --> 00:00:33,250
so you might need to consult the formula that I showed in the slides in the previous video in order

8
00:00:33,250 --> 00:00:35,200
to successfully complete that.

9
00:00:35,320 --> 00:00:42,100
But essentially what you want to do is make sure that multiplying the three SVOD matrices together will

10
00:00:42,100 --> 00:00:50,230
reproduce the original Einstein matrix and then once you've done exercise 1 then exercise 2 is essentially

11
00:00:50,230 --> 00:00:56,920
to repeat exercise 1 except you are shuffling these singular values so you're basically changing the

12
00:00:57,010 --> 00:01:03,670
order of the singular values and that shuffles the order or the mapping between each spatial pattern

13
00:01:03,670 --> 00:01:11,890
that the SPDC has identified and the importance of that spatial pattern and then exercise 3 is also

14
00:01:11,890 --> 00:01:19,270
following up on exercise one and there you want to partially reconstruct Einstein so not fully reconstructed

15
00:01:19,600 --> 00:01:25,090
but partially reconstruct Einstein using only the first n components.

16
00:01:25,090 --> 00:01:33,580
And by this I mean that you only use the first and singular values so to solve Exercise 3 you're basically

17
00:01:33,580 --> 00:01:40,570
going to do something that's really similar to exercise one except the Sigma matrix or the Matrix the

18
00:01:40,570 --> 00:01:45,670
diagonal matrix that contains the singular values you only want to include.

19
00:01:45,680 --> 00:01:50,460
Let's say the first 10 singular values and the rest of them will be zeros.

20
00:01:50,640 --> 00:01:51,010
All right.

21
00:01:51,010 --> 00:01:52,510
So switch to Python.

22
00:01:52,510 --> 00:01:53,520
Write some code.

23
00:01:53,530 --> 00:01:53,950
Good luck.

24
00:01:53,950 --> 00:02:00,190
Keep in mind this is a bit of a challenging exercise particularly if you are not already familiar with

25
00:02:00,190 --> 00:02:02,560
the SVOD operation.

26
00:02:02,560 --> 00:02:08,500
Nonetheless I encourage you to try your best and then when you're ready come back to the video and you

27
00:02:08,500 --> 00:02:16,390
can watch me walk through my solution so I have open here all the code that I wrote in the previous

28
00:02:16,390 --> 00:02:22,240
video and that's important because in this video basically we need everything that was already computed

29
00:02:22,240 --> 00:02:22,900
here.

30
00:02:22,900 --> 00:02:26,710
The SVOD importing the Einstein picture and so on.

31
00:02:26,710 --> 00:02:27,360
So let's see.

32
00:02:27,370 --> 00:02:35,110
I'm going to start with exercise 1 and that was just about perfectly reconstructing the original matrix

33
00:02:35,140 --> 00:02:38,930
so the Einstein picture from the result of the SVOD.

34
00:02:39,040 --> 00:02:46,450
So what we want is something like reconstructed Einstein and depending on you know your hobbies and

35
00:02:46,450 --> 00:02:53,020
what language you natively speak you might pronounce this as a rain like what you would attach to a

36
00:02:53,020 --> 00:02:57,940
horse to guide it in direction or maybe if you're a German or a German or file.

37
00:02:57,940 --> 00:03:03,880
This might be your aim which is like clean or pure anyway or maybe it's just arbitrary.

38
00:03:03,880 --> 00:03:07,240
I'm using this to be reconstructed Einstein.

39
00:03:07,240 --> 00:03:16,580
So what we want is something like you matrix multiplication with S matrix multiplication with V.

40
00:03:16,600 --> 00:03:24,370
Now the problem is that I haven't yet created this matrix S this needs to be the diagonal matrix containing

41
00:03:24,400 --> 00:03:26,300
these singular values.

42
00:03:26,320 --> 00:03:33,340
However if you tried to make this pretty simple and say something like num PI that dialog of little

43
00:03:33,340 --> 00:03:38,100
ask these singular values in a vector then this is not going to work.

44
00:03:38,110 --> 00:03:45,820
You're going to get some dimension mismatches and that's because let's see so print num Pi the shape

45
00:03:45,820 --> 00:03:50,770
of S and print num pi shape V.

46
00:03:51,430 --> 00:03:55,580
And also so I guess it's you that we want here.

47
00:03:55,810 --> 00:04:00,510
So we are trying to multiply this matrix U which is 4 0 5 by 4 or 5.

48
00:04:00,520 --> 00:04:03,400
So the inner dimensions here do not match.

49
00:04:04,450 --> 00:04:12,610
So what we need to do instead is say that this matrix S is going to be a zeros matrix and the size has

50
00:04:12,610 --> 00:04:17,380
to correspond to the shape of matrix A up CI A.

51
00:04:17,410 --> 00:04:18,470
This should be fine.

52
00:04:19,580 --> 00:04:24,030
Okay so now you can see I ran this cell of code we didn't get any errors.

53
00:04:24,040 --> 00:04:26,160
There were no Python errors of course.

54
00:04:26,170 --> 00:04:30,670
This is also just a matrix of zeros because this is a matrix of zeros.

55
00:04:30,730 --> 00:04:37,390
So what we need to do now is populate the diagonal of this matrix according to the individual elements

56
00:04:37,480 --> 00:04:40,420
of the singular vectors.

57
00:04:40,720 --> 00:04:43,900
So to make this very clear I'm going to do this in a loop.

58
00:04:43,900 --> 00:04:51,670
So I equals our eye in range that goes from zero to the length of S..

59
00:04:51,670 --> 00:04:58,760
And remember now this is lowercase s so I'm going to specify that s I comma I.

60
00:04:58,900 --> 00:05:08,680
So the diagonal the I.S. diagonal element is the ISF element in S and then I run this code again and

61
00:05:08,770 --> 00:05:12,570
let's see I'm going to make a image.

62
00:05:12,580 --> 00:05:20,050
So let's do P.L. T dot subplot one comma to come a one an appeal to you that I am show.

63
00:05:20,140 --> 00:05:28,510
Let's show the original matrix here on the left and I will turn the Axis off and let's see the plot

64
00:05:28,540 --> 00:05:33,120
title will be that this is the original matrix.

65
00:05:34,080 --> 00:05:34,690
Okay.

66
00:05:34,930 --> 00:05:39,400
So now this is not super amazing.

67
00:05:39,400 --> 00:05:40,940
This is what we've seen before.

68
00:05:41,110 --> 00:05:45,760
Now I'm going to copy and paste a bunch of this code.

69
00:05:46,040 --> 00:05:52,530
Now in the second subplot this is going to be crime or the reconstructed Einstein.

70
00:05:52,750 --> 00:05:54,990
And now these look really really really similar.

71
00:05:55,000 --> 00:05:57,070
In fact they are identical.

72
00:05:58,180 --> 00:05:58,540
Whoops.

73
00:05:58,570 --> 00:06:04,540
And then this should be of course the SVOD version.

74
00:06:04,540 --> 00:06:05,060
There you go.

75
00:06:05,860 --> 00:06:10,690
OK so that is for the first of three exercises.

76
00:06:10,690 --> 00:06:16,180
And what I'm going to do next is the second exercise and I'm just gonna keep can continue with this

77
00:06:16,180 --> 00:06:17,710
same code here.

78
00:06:17,740 --> 00:06:23,350
So my strategy here is going to be to keep all of this code the same.

79
00:06:23,350 --> 00:06:26,590
And what I'm going to do up here is shuffle.

80
00:06:26,590 --> 00:06:33,760
So I'm going to say shuffle the order of the singular values.

81
00:06:33,760 --> 00:06:37,890
So to do this I'm gonna come up with a random shuffling orders.

82
00:06:37,920 --> 00:06:46,390
Let's say Rand order equals NPD at random and I'm going to use a function called permutation and that's

83
00:06:46,390 --> 00:06:49,610
going to be length of s.

84
00:06:49,630 --> 00:06:57,190
So before going any further let me just print out what actually I guess a better way to introduce this

85
00:06:57,190 --> 00:07:00,870
to you would be to print this out in smaller numbers.

86
00:07:00,880 --> 00:07:02,370
So instead of the length of ask.

87
00:07:02,380 --> 00:07:03,760
Because that's quite long.

88
00:07:03,760 --> 00:07:05,830
I'm going to say let's go for five.

89
00:07:05,860 --> 00:07:15,220
So NPD a random permutation five so you can see that this gave us the numbers 4 0 2 3 1.

90
00:07:15,220 --> 00:07:22,460
So it's numbers 0 through 5 exclusive and it looks like it's a random order.

91
00:07:22,570 --> 00:07:24,590
So here now it's a different order.

92
00:07:24,640 --> 00:07:29,370
And notice that each of these numbers appears exactly once.

93
00:07:29,380 --> 00:07:37,210
So what this function permutation is doing is shuffling the order of integers from zero to whatever

94
00:07:37,210 --> 00:07:38,740
this number is minus one.

95
00:07:39,670 --> 00:07:39,910
Okay.

96
00:07:39,940 --> 00:07:46,050
So with that in mind now I can show you this variable Rand order and.

97
00:07:46,150 --> 00:07:49,960
Well it's just a bunch of integers that are randomized.

98
00:07:50,140 --> 00:07:58,000
So that means that now instead of reconstructing these two B S or the I.S. element of S this is going

99
00:07:58,000 --> 00:08:02,320
to be the rand order highest element.

100
00:08:02,320 --> 00:08:09,790
So that means for this particular run what should be the first singular value is actually replaced with

101
00:08:09,790 --> 00:08:12,930
the one hundred and sixty fifth singular value.

102
00:08:13,090 --> 00:08:18,010
And of course that number is going to change and each run because this is just totally random each time

103
00:08:18,010 --> 00:08:19,510
I run this code.

104
00:08:19,680 --> 00:08:19,930
Okay.

105
00:08:19,960 --> 00:08:21,090
So I hope that makes sense.

106
00:08:21,090 --> 00:08:26,890
Essentially we are not changing you and we're not changing V and we're also not really changing all

107
00:08:26,890 --> 00:08:34,510
the elements in s all we're doing is shuffling the order which means changing the mapping of the singular

108
00:08:34,840 --> 00:08:41,470
values which indicate the importance of different features of the data with the spatial patterns that

109
00:08:41,470 --> 00:08:44,510
are encoded in U and V.

110
00:08:44,560 --> 00:08:44,830
Okay.

111
00:08:44,830 --> 00:08:50,710
And you can see that even though we haven't changed you and we haven't changed v just by changing the

112
00:08:50,710 --> 00:08:55,660
order of the singular values we've really totally screwed up this image.

113
00:08:55,660 --> 00:08:59,390
This is obviously just noise unrecognizable.

114
00:08:59,440 --> 00:08:59,730
Okay.

115
00:08:59,740 --> 00:09:02,560
So that was for the second exercise.

116
00:09:02,560 --> 00:09:06,280
What I want to do now is basically undo what I just did.

117
00:09:06,310 --> 00:09:13,000
And that's quite simple I just get rid of this variable by the way notice that I didn't actually reassign

118
00:09:13,120 --> 00:09:17,940
s and that was important because if I had reassigned s itself.

119
00:09:17,950 --> 00:09:24,220
So if I just shuffled all the elements and asked and I would actually lose the original order of the

120
00:09:24,280 --> 00:09:25,920
singular values.

121
00:09:25,960 --> 00:09:31,270
So here we haven't actually lost any information by going through the second exercise.

122
00:09:32,020 --> 00:09:32,430
Okay.

123
00:09:32,560 --> 00:09:39,790
So what I'm gonna do now is reconstruct this picture using only the first ten components and the way

124
00:09:39,790 --> 00:09:47,380
that I'm going to do that is by initializing this matrix to zeros which I already do but then populating

125
00:09:47,380 --> 00:09:55,420
the diagonals of this matrix not with all of these singular values but instead just lets say the first

126
00:09:55,620 --> 00:10:00,110
how about the first 20 and let's see what this looks like.

127
00:10:00,140 --> 00:10:00,440
Okay.

128
00:10:00,470 --> 00:10:01,540
So that's pretty interesting.

129
00:10:01,550 --> 00:10:07,850
We see that this picture is still definitely recognizable as Einstein sticking out his tongue.

130
00:10:07,850 --> 00:10:10,970
It's a little bit fuzzier but we can still recognize it.

131
00:10:11,790 --> 00:10:12,040
Okay.

132
00:10:12,080 --> 00:10:13,580
Let's go for.

133
00:10:13,580 --> 00:10:18,180
How about the first 10 mm hmm.

134
00:10:18,380 --> 00:10:24,650
I think it's still pretty recognizable we're starting to lose some subtle features but still easily

135
00:10:24,650 --> 00:10:25,970
recognizable.

136
00:10:25,970 --> 00:10:27,020
How about let's see.

137
00:10:27,020 --> 00:10:28,380
Actually I want to scroll up here.

138
00:10:28,430 --> 00:10:31,390
So here we see the singular value.

139
00:10:31,430 --> 00:10:35,540
So let's try one two three four five six.

140
00:10:35,540 --> 00:10:42,590
It looks like there's six relatively large components or features and the rest of them are are smaller.

141
00:10:42,650 --> 00:10:46,220
So let's see if Einstein is still recognizable.

142
00:10:46,220 --> 00:10:51,320
With only six features and I think so maybe it looks more like a baby.

143
00:10:51,320 --> 00:10:53,510
This is like Baby Einstein.

144
00:10:53,510 --> 00:10:57,510
Let's even see what is this first component so I'm just gonna do.

145
00:10:57,710 --> 00:10:59,800
Number one.

146
00:11:00,450 --> 00:11:07,220
Okay so that's pretty interesting because what the singular value decomposition is telling us that this

147
00:11:07,370 --> 00:11:14,840
one feature the first largest feature the first component of this matrix is actually just as really

148
00:11:15,140 --> 00:11:21,380
low spatial frequency feature that just says that you know the image is really bright around here and

149
00:11:21,380 --> 00:11:23,920
it's really dark around here.

150
00:11:23,920 --> 00:11:29,510
Okay so the last thing that I want to do which actually wasn't specified in the instructions but I think

151
00:11:29,510 --> 00:11:36,470
it's pretty interesting just to explore around is to say instead of using just the first and components

152
00:11:36,500 --> 00:11:38,830
let's use the last and components.

153
00:11:38,840 --> 00:11:44,200
So what if I look at 10 to the length of s.

154
00:11:44,480 --> 00:11:51,800
So this means I'm ignoring the first 10 components and reconstructing the image using all of the later

155
00:11:51,800 --> 00:11:57,580
components which means basically all of these really really small features of the data.

156
00:11:57,860 --> 00:11:59,480
Ha so that's pretty interesting.

157
00:11:59,480 --> 00:12:06,070
It looks like a high spatial pass filtered version of the image so you can see a lot of the edges here.

158
00:12:06,100 --> 00:12:12,180
But you don't see a lot of the like really low spatial frequency the broad features in the signal.

159
00:12:12,320 --> 00:12:18,270
So I am going to call this the successful completion of this project this exercise.

160
00:12:18,530 --> 00:12:25,880
Obviously I encourage you to continue playing around with this code to try to gain some intuition about

161
00:12:26,090 --> 00:12:30,980
what the SVOD does in this and the previous video.

162
00:12:31,070 --> 00:12:38,330
You gain some insight into the singular value decomposition and importantly you learned how to use python

163
00:12:38,360 --> 00:12:42,320
as a tool to explore these kinds of Matrix compositions.

164
00:12:42,470 --> 00:12:49,220
And of course as a side bonus you also learn how to import pictures like J pegs in this particular case

165
00:12:49,580 --> 00:12:54,260
into the python workspace to work with pictures as matrices.
