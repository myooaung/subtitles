1
00:00:04,840 --> 00:00:11,740
This section of the Course is about using Python to understand concepts in trigonometry.

2
00:00:11,800 --> 00:00:19,060
However before we get into trigonometry persay I want to have a video to introduce you to random numbers

3
00:00:19,150 --> 00:00:25,450
and generating random numbers in python in particular random numbers with different kinds of distributions

4
00:00:25,450 --> 00:00:32,750
that you get to specify the parameters of so it turns out that there are different distributions that

5
00:00:32,750 --> 00:00:36,320
random numbers can be drawn from here I'm illustrating two.

6
00:00:36,320 --> 00:00:42,950
These are probably the two kinds of distributions that are most often used when generating random numbers.

7
00:00:43,550 --> 00:00:47,330
So these two are typically called the normal distribution.

8
00:00:47,390 --> 00:00:50,920
Also sometimes called the Gaussian or the bell shaped curve.

9
00:00:51,050 --> 00:00:57,390
But I will call them a normal distribution because that's also how they're referred to in Python.

10
00:00:57,390 --> 00:01:00,950
And then we have the uniform distribution which is shown here in Orange.

11
00:01:00,950 --> 00:01:02,950
So what do these shapes mean.

12
00:01:02,990 --> 00:01:05,400
So let's start by talking about this blue line.

13
00:01:05,420 --> 00:01:07,050
The normal distribution.

14
00:01:07,250 --> 00:01:14,210
So this shape means that if you draw random numbers from a normal distribution you are more likely to

15
00:01:14,300 --> 00:01:21,170
randomly get numbers that are close to zero and you are less likely to get numbers that are close to

16
00:01:21,200 --> 00:01:30,330
let's say minus two or plus two so this curve shows the probability of drawing a number at random given

17
00:01:30,360 --> 00:01:31,860
this value.

18
00:01:31,890 --> 00:01:36,980
Now this function never actually gets to zero but it gets really really really close to zero.

19
00:01:37,020 --> 00:01:44,490
So if you are drawing numbers randomly from a normal distribution it's possible to get a number of minus

20
00:01:44,490 --> 00:01:49,530
4 or value around minus 4 but it's really really unlikely.

21
00:01:49,530 --> 00:01:53,620
So you can see that this distribution is centered at zero.

22
00:01:53,940 --> 00:01:57,810
And that means that the numbers close to zero are most likely to be picked.

23
00:01:58,140 --> 00:02:05,280
Now it's possible to push this distribution around to have this center value B for example 17.

24
00:02:05,490 --> 00:02:11,610
If you want to draw numbers randomly with a center of 17 and in python I will show you how to shift

25
00:02:11,610 --> 00:02:16,620
this distribution and also how to modulate the width of this distribution.

26
00:02:16,620 --> 00:02:16,870
All right.

27
00:02:16,890 --> 00:02:19,100
So that's for a normal distribution.

28
00:02:19,230 --> 00:02:25,920
Then we have a uniform distribution and that means that if you draw numbers randomly from a uniform

29
00:02:25,920 --> 00:02:35,190
distribution you are equally likely to get numbers that fall between the values of 0 and 1 and the probability

30
00:02:35,190 --> 00:02:39,300
of getting a number larger than 1 or less than zero is zero.

31
00:02:39,330 --> 00:02:45,960
So you can draw numbers from a uniform distribution until the cows come home and you will never get

32
00:02:45,960 --> 00:02:53,970
a value of minus one because this probability density here this orange line is zero below zero.

33
00:02:54,000 --> 00:03:01,170
Now that said it's also possible to change this uniform distribution so that you shift it on the x axis

34
00:03:01,530 --> 00:03:05,130
and stretch it around to change the width of the distribution.

35
00:03:05,800 --> 00:03:06,130
Okay.

36
00:03:06,150 --> 00:03:13,920
So let's now switch to Python and I will illustrate these concepts to you we are going to be using the

37
00:03:13,980 --> 00:03:18,090
name pi and map plot lib modules.

38
00:03:18,240 --> 00:03:21,080
So let's start by generating some random numbers.

39
00:03:21,210 --> 00:03:29,290
So I'll say no this will be the variable and then we type NDP for number pi dot random dot Rand.

40
00:03:29,580 --> 00:03:34,460
So there is a sub module inside known pi called random.

41
00:03:34,620 --> 00:03:38,160
And this module random contains a bunch of functions.

42
00:03:38,370 --> 00:03:41,280
And one of those functions is Rand.

43
00:03:41,280 --> 00:03:43,450
So in fact I can just call it like this.

44
00:03:43,500 --> 00:03:45,320
And then let's write names.

45
00:03:45,480 --> 00:03:49,680
Now if I run this cell we get some number point seven eight seven seven and so on.

46
00:03:49,680 --> 00:03:56,220
Now if you ran this code on your computer you are not going to get 7 8 7 7 you're not going to get exactly

47
00:03:56,220 --> 00:03:57,600
the same number.

48
00:03:57,600 --> 00:04:00,720
And that's because this number is randomly generated.

49
00:04:00,720 --> 00:04:08,080
So in fact if I run this multiple times you can see I'm going to get a different number each time so

50
00:04:08,110 --> 00:04:14,260
that is for a single number if you want to generate let's say two random numbers you can write two in

51
00:04:14,260 --> 00:04:14,820
the input.

52
00:04:14,830 --> 00:04:16,200
And now we get two numbers.

53
00:04:16,780 --> 00:04:21,220
So let's generate 1000 random numbers.

54
00:04:21,250 --> 00:04:24,580
Now I'm not going to display all of these I'm going to print them out.

55
00:04:24,760 --> 00:04:32,890
So P.L. teed up plot number and I'm going to print them out as squares and let's already just have a

56
00:04:32,890 --> 00:04:34,420
quick look and see what this looks like.

57
00:04:35,200 --> 00:04:35,520
Okay.

58
00:04:35,530 --> 00:04:42,000
So it looks like a UN organized cloud of dots which is exactly what it should look like.

59
00:04:42,010 --> 00:04:50,470
These are randomly drawn numbers and you can also see on the y axis that they all go between 0 and 1.

60
00:04:50,470 --> 00:04:58,630
So that shows you that this Rand function is generating from a uniform distribution between 0 and 1.

61
00:04:58,630 --> 00:05:03,220
So there is another way we can look at this which is through something called a histogram.

62
00:05:03,280 --> 00:05:09,610
So I'm going to use the function hist and Peele to show.

63
00:05:09,670 --> 00:05:12,430
So here is the histogram of these numbers.

64
00:05:12,430 --> 00:05:15,240
Now these two plots have the same data.

65
00:05:15,250 --> 00:05:20,330
They come from the same data but they show the data in a slightly different way.

66
00:05:20,350 --> 00:05:27,000
So here you see the values on the y axis and the ordinal position on the x axis.

67
00:05:27,160 --> 00:05:30,160
Here you see the values on the x axis.

68
00:05:30,160 --> 00:05:38,020
So this x axis here corresponds to the y axis here and here the y axis corresponds to the count.

69
00:05:38,020 --> 00:05:45,190
So the way that you interpret this histogram is that there are about eighty five numbers between the

70
00:05:45,190 --> 00:05:51,250
values of zero and whatever this ends up being I guess that's probably point 1.

71
00:05:51,250 --> 00:05:56,620
So that means if you would look here count all these dots that are between zero and point 1.

72
00:05:56,710 --> 00:05:59,880
There are going to be around eighty five of them.

73
00:06:00,070 --> 00:06:06,520
Now you might be a little bit surprised to see this histogram the shape of this histogram because I

74
00:06:06,520 --> 00:06:13,240
said in the slides a moment ago that a uniform distribution means you are equally likely to draw a number

75
00:06:13,270 --> 00:06:15,120
between 0 and 1.

76
00:06:15,130 --> 00:06:21,430
And this doesn't look like equal likelihood but the thing to keep in mind is that these are randomly

77
00:06:21,460 --> 00:06:22,570
generated numbers.

78
00:06:22,570 --> 00:06:28,900
So there's gonna be some variability and purely by chance there's going to be of you know some range

79
00:06:28,900 --> 00:06:32,070
that's a little bit more likely to be drawn in another range.

80
00:06:32,170 --> 00:06:33,850
But this is not systematic.

81
00:06:33,880 --> 00:06:39,050
So you can see now it looks like there's a bulge in this distribution at around point 4.

82
00:06:39,520 --> 00:06:43,230
But if I run this again you can see well.

83
00:06:43,260 --> 00:06:43,580
OK.

84
00:06:43,640 --> 00:06:46,270
But still maybe a tiny bit of a bulge here.

85
00:06:46,300 --> 00:06:47,140
Let's run it again.

86
00:06:48,820 --> 00:06:49,140
OK.

87
00:06:49,150 --> 00:06:49,600
Here you go.

88
00:06:49,600 --> 00:06:55,970
Now if anything there's a bit of a dip here around point four and there's maybe more values up here.

89
00:06:56,140 --> 00:07:01,370
So you can see that each time you run this code each time you generate new random numbers.

90
00:07:01,450 --> 00:07:08,200
It's going to look a little bit different but in general the shape of the distribution will be the same.

91
00:07:08,200 --> 00:07:13,390
So this distribution is always varying between 0 and 1.

92
00:07:13,480 --> 00:07:19,120
But what if you want to generate random numbers outside of this range or in some different range.

93
00:07:19,210 --> 00:07:25,600
So to do that you need to shift and then possibly also stretch this distribution.

94
00:07:25,600 --> 00:07:32,680
So for example let's say I want this distribution to be centered at three instead of being centered

95
00:07:32,770 --> 00:07:34,500
at point five.

96
00:07:34,510 --> 00:07:39,490
So then I say numbers equals numbers plus three.

97
00:07:39,490 --> 00:07:42,510
So now I'm just adding three to the entire distribution.

98
00:07:42,520 --> 00:07:48,760
So when I run this code again now you see that this distribution which originally varied between 0 and

99
00:07:48,760 --> 00:07:49,450
1.

100
00:07:49,450 --> 00:07:52,600
Now it varies between 3 and 4.

101
00:07:52,720 --> 00:07:57,850
And you can also see that in the histogram there are no values less than three no values greater than

102
00:07:57,850 --> 00:07:58,470
four.

103
00:07:58,630 --> 00:08:06,040
And the values between 0 and or between 3 and 4 are basically equally likely to be generated.

104
00:08:06,820 --> 00:08:12,770
So you see some different examples of histogram for rerunning this code.

105
00:08:12,790 --> 00:08:18,340
Now it turns out that for a uniform distribution there is a pretty simple formula.

106
00:08:18,340 --> 00:08:25,540
There's a pretty simple algorithm for getting the minimum and maximum values to be whatever you want

107
00:08:25,540 --> 00:08:26,740
them to be.

108
00:08:26,740 --> 00:08:28,270
So let me show you how that works.

109
00:08:28,290 --> 00:08:30,030
I will say Min Val.

110
00:08:30,040 --> 00:08:31,780
So this is going to be variable.

111
00:08:31,780 --> 00:08:37,370
Let's say we want numbers to go from two to 17 17.

112
00:08:37,450 --> 00:08:44,200
So how can we change this distribution which initially comes out varying from 0 to 1 to a distribution

113
00:08:44,200 --> 00:08:47,470
that varies between 2 and 17.

114
00:08:47,500 --> 00:08:54,820
So the formula is you say numbers equals so first you generate the uniformly distributed random numbers

115
00:08:55,270 --> 00:09:00,700
and then you multiply them by the difference between the Max.

116
00:09:00,760 --> 00:09:06,860
Max Val and Min Val and then add actually let me just start right there with this.

117
00:09:06,880 --> 00:09:14,670
So I'm doing here is taking this set of numbers that ranges between 0 and 1 and multiplying it or stretching

118
00:09:14,670 --> 00:09:19,280
it out so that it varies now between 0 and 15.

119
00:09:19,310 --> 00:09:25,050
And it's going to vary between 0 and 15 because the smallest number here is going to be or the smallest

120
00:09:25,050 --> 00:09:31,830
possible number will be 0 so 0 times this is still going to be 0 and then the largest number is going

121
00:09:31,830 --> 00:09:34,610
to be the largest possible number is 1.

122
00:09:34,620 --> 00:09:38,920
And so that will get multiplied by 15 which is 17 minus two.

123
00:09:39,330 --> 00:09:42,090
So let's have a look at how this looks so far.

124
00:09:42,420 --> 00:09:46,200
So you can see now we have numbers between 0 and 15.

125
00:09:46,200 --> 00:09:49,160
You see that also in the histogram here.

126
00:09:49,530 --> 00:09:58,050
And then to get it to go from between 2 and 17 we add to this distribution the minimum value.

127
00:09:58,110 --> 00:10:04,860
So now we get numbers that very randomly that are drawn randomly from a distribution with a minimum

128
00:10:04,860 --> 00:10:08,400
of two and a maximum of 17.

129
00:10:08,400 --> 00:10:14,760
So this is about creating a uniformly distributed set of random numbers.

130
00:10:14,760 --> 00:10:19,070
I'm not going to show you how to generate normally distributed random numbers.

131
00:10:19,070 --> 00:10:22,060
So that is NPR that random dot ran.

132
00:10:22,080 --> 00:10:24,600
You can see that this part looks just like above.

133
00:10:24,630 --> 00:10:29,880
But now we add one letter which is the letter N the N is for normal.

134
00:10:29,880 --> 00:10:33,740
So this is now going to be a normal distribution.

135
00:10:33,900 --> 00:10:35,760
The rest of it is very similar.

136
00:10:35,760 --> 00:10:43,890
In fact I think I will copy and paste some of this code here for the visualization.

137
00:10:44,110 --> 00:10:51,550
So here I generate 1000 normally distributed random numbers and then I plot the numbers and a corresponding

138
00:10:51,550 --> 00:10:52,750
histogram.

139
00:10:52,760 --> 00:10:57,160
Now these two plots look quite a bit different from the plots I showed earlier.

140
00:10:57,160 --> 00:11:03,220
You can see that these numbers are centered at zero and you can also see that there's a lot more clustering

141
00:11:03,340 --> 00:11:09,880
around zero around the center of this graph and the dots are the squares are getting sparse or as they

142
00:11:09,880 --> 00:11:12,180
get further away from the origin.

143
00:11:12,250 --> 00:11:18,810
And here you see this beautiful looking histogram showing pretty much exactly the normal distribution.

144
00:11:18,820 --> 00:11:24,780
So there are lots of values close to zero and the further away you get from zero negative or positive.

145
00:11:24,940 --> 00:11:30,910
The smaller these bars get by the way I want to just make this look a little bit nicer.

146
00:11:30,940 --> 00:11:35,340
I'm going to say alpha equals point five.

147
00:11:35,410 --> 00:11:40,130
So Alpha corresponds to the transparency of the objects in the figure.

148
00:11:40,150 --> 00:11:47,920
So by changing the alpha value I'm going to make them 50 percent translucent so that now they look like

149
00:11:47,920 --> 00:11:48,220
this.

150
00:11:48,220 --> 00:11:52,370
I think this looks pretty neat in this video.

151
00:11:52,380 --> 00:11:57,770
I talked about random numbers and drawing random numbers from two different distributions.

152
00:11:57,780 --> 00:12:01,340
A normal distribution and a uniform distribution.

153
00:12:01,410 --> 00:12:05,810
There are several other distributions that you can draw random numbers from.

154
00:12:05,910 --> 00:12:12,990
However normal and uniform are the two most commonly used now there is of course an exercise that goes

155
00:12:12,990 --> 00:12:19,150
along with this video but in the interests of time I've decided to put that exercise into the next video.

156
00:12:19,200 --> 00:12:26,640
So keep watching and you will have an opportunity to apply and expand on your knowledge of drawing random

157
00:12:26,640 --> 00:12:28,230
numbers in Python.
