WEBVTT
1
00:00:03.360 --> 00:00:07.590
In the past several videos you've learned about one way to multiply two vectors.

2
00:00:07.590 --> 00:00:10.860
And it's called the dot product or the inner product.

3
00:00:10.860 --> 00:00:15.740
There is another way to multiply two vectors and that is called the Outer product.

4
00:00:15.990 --> 00:00:19.200
And that's what you're going to learn in this video.

5
00:00:19.380 --> 00:00:26.100
The outer product is defined between two vectors and unlike the dot product or the inner product the

6
00:00:26.160 --> 00:00:30.600
outer product can be computed between two vectors that actually have different lengths.

7
00:00:30.600 --> 00:00:36.330
So in this particular example you see two vectors that are both four dimensional but I will show you

8
00:00:36.330 --> 00:00:43.230
in the python segment that you can also compute the outer product between two vectors that have different

9
00:00:43.230 --> 00:00:43.890
lengths.

10
00:00:43.890 --> 00:00:44.140
OK.

11
00:00:44.150 --> 00:00:48.630
So what is the outer product between this vector and this vector.

12
00:00:48.630 --> 00:00:54.150
Well it looks like this the outer product between two vectors is an entire matrix.

13
00:00:54.150 --> 00:00:55.980
So how to think about this matrix.

14
00:00:55.980 --> 00:01:02.520
Well notice that all of the columns of this matrix are the same as the column here.

15
00:01:02.520 --> 00:01:09.600
So this left vector and all the rows of this matrix here the outer product matrix are just repeats of

16
00:01:09.720 --> 00:01:10.880
this vector here.

17
00:01:10.880 --> 00:01:12.650
So the row vector on the right.

18
00:01:12.810 --> 00:01:16.110
And that's essentially the way that you build up the outer product matrix.

19
00:01:16.110 --> 00:01:21.930
You take the column vector on the left and you just repeat those columns for however many elements there

20
00:01:21.930 --> 00:01:28.530
are rows in the right vector here and all the rows in the outer product are just repeats of this row

21
00:01:28.530 --> 00:01:33.160
vector on the right for however many elements are in this column vector on the left.

22
00:01:33.180 --> 00:01:38.850
So I think it's probably easier just to look at it and understand it than it is to explain it in words.

23
00:01:38.850 --> 00:01:44.220
So let's switch to Python and see how to implement the outer product.

24
00:01:44.390 --> 00:01:52.930
We are going to use the NUM pi module and the map plot lib module in order to do a little bit of visualization.

25
00:01:52.970 --> 00:01:55.470
So let me start by creating two vectors.

26
00:01:55.490 --> 00:01:59.180
Let's say none pi these are just going to be random vectors.

27
00:01:59.180 --> 00:02:05.190
Let's make this one 50 elements long and I'll set the two to B.

28
00:02:05.240 --> 00:02:07.760
How about 80 elements long.

29
00:02:08.490 --> 00:02:08.740
Okay.

30
00:02:08.760 --> 00:02:15.290
And now just to show you that the dot product is not defined between these two vectors of course you

31
00:02:15.290 --> 00:02:16.660
already know that.

32
00:02:16.670 --> 00:02:19.060
So this has the dimensions are not equal.

33
00:02:19.060 --> 00:02:22.230
So it's not valid to compute the dot product between these.

34
00:02:22.250 --> 00:02:26.660
However the outer product is a valid operation.

35
00:02:26.660 --> 00:02:28.190
And let's see what that result is.

36
00:02:28.830 --> 00:02:29.110
OK.

37
00:02:29.120 --> 00:02:32.330
So that result actually doesn't even print out the entire matrix.

38
00:02:32.330 --> 00:02:37.610
You can see there's a bunch of ellipses here a bunch of dots so that's Python's way of telling us that

39
00:02:37.880 --> 00:02:39.860
basically this matrix is too large.

40
00:02:39.860 --> 00:02:42.700
It's not going to print out the entire thing.

41
00:02:42.740 --> 00:02:46.240
So instead we can actually make an image of this.

42
00:02:46.340 --> 00:02:52.430
So let's say I'll call this O P for outer product and then let's see what this looks like.

43
00:02:52.430 --> 00:02:58.260
So P L T that I am show O P and then appeal to that show.

44
00:02:58.760 --> 00:03:04.930
So you can see that this matrix has 50 rows and 80 columns.

45
00:03:05.000 --> 00:03:11.280
So it's a pretty big matrix that corresponds to the size of these two individual vectors.

46
00:03:11.360 --> 00:03:17.120
And you notice also that it looks like it has this kind of know simple repeating pattern to it.

47
00:03:17.330 --> 00:03:23.900
And that's not surprising because every column is just a weighted version of the first column.

48
00:03:23.900 --> 00:03:30.080
So all of the columns here are essentially just the same thing as the first column weighted by different

49
00:03:30.080 --> 00:03:30.560
numbers.

50
00:03:30.560 --> 00:03:34.370
And those numbers come from the different rows here.

51
00:03:34.370 --> 00:03:39.800
So there you go the outer product in python in the exercise.

52
00:03:39.800 --> 00:03:47.270
We are going to examine whether the outer product is matrix commutative and whether it's scalar multiplication

53
00:03:47.270 --> 00:03:48.200
commutative.

54
00:03:48.230 --> 00:03:53.050
So first of all let me give you a quick reminder of what the commutative property means.

55
00:03:53.060 --> 00:03:57.000
Although we discuss this in an earlier section of the course.

56
00:03:57.020 --> 00:03:58.480
So for normal scalar.

57
00:03:58.490 --> 00:04:04.910
So for single numbers the commutative property means that a times B equals B times A.

58
00:04:04.910 --> 00:04:06.330
So this is for normal numbers.

59
00:04:06.330 --> 00:04:12.380
You know you think if a is two and B is three then two times three equals three times two.

60
00:04:12.380 --> 00:04:14.640
So that's the commutative property.

61
00:04:14.660 --> 00:04:20.630
So what we are going to ask here what you are going to test in this exercise is whether the outer product

62
00:04:20.720 --> 00:04:22.510
is also commutative.

63
00:04:22.700 --> 00:04:29.750
In particular you want to ask whether the outer product between V and W is the same thing as the outer

64
00:04:29.750 --> 00:04:32.060
product between W and V.

65
00:04:32.570 --> 00:04:35.960
So that's the first part of this exercise.

66
00:04:35.960 --> 00:04:42.200
The second part of this exercise is to test whether the outer product is also scalar multiplication

67
00:04:42.200 --> 00:04:43.280
commutative.

68
00:04:43.310 --> 00:04:51.500
So here imagine that V is a vector W is a vector so we can compute the outer product between V and W.

69
00:04:51.560 --> 00:04:57.530
This is kind of the standard notation for indicating the outer product so whether the outer product

70
00:04:57.590 --> 00:05:02.980
between V and W is affected by the position of this scalar c.

71
00:05:03.110 --> 00:05:05.170
So here C is just a single number.

72
00:05:05.180 --> 00:05:06.730
Maybe it's the number pi.

73
00:05:06.800 --> 00:05:09.440
Or maybe it's three divided by pi.

74
00:05:10.040 --> 00:05:20.570
So c times the outer product between V and W versus v times C times w versus V Times w times C..

75
00:05:21.050 --> 00:05:24.370
Okay so here's your two parts to this exercise.

76
00:05:24.380 --> 00:05:27.030
So now you should pause a video switch to Python.

77
00:05:27.050 --> 00:05:34.830
Write some code to investigate the commutative property and now I'm going to walk you through my solution

78
00:05:34.830 --> 00:05:37.860
to this or my approach to figuring this out.

79
00:05:38.010 --> 00:05:38.260
All right.

80
00:05:38.280 --> 00:05:45.030
So what I'm gonna do is create two vectors let's say V is and P that a range so I'm just gonna come

81
00:05:45.030 --> 00:05:48.550
up with numbers that go from 1 to 10.

82
00:05:48.900 --> 00:05:53.640
So just to show you what this vector looks like or troops I mean 10.

83
00:05:53.640 --> 00:06:01.260
So you have to make the second input here to be 11 because that's an exclusive upper boundary okay.

84
00:06:01.270 --> 00:06:06.880
And then I'm gonna have w and it's important to make sure that these are different sizes.

85
00:06:06.910 --> 00:06:14.380
Let's say a W goes from one to five and you want these to be different sizes so we can really see whether

86
00:06:14.470 --> 00:06:21.210
VW or the outer product between VW is the same as the outer product between W and V.

87
00:06:21.280 --> 00:06:23.380
So this is pretty straightforward.

88
00:06:23.380 --> 00:06:29.300
Print num pi dot outer v comma W and then directly underneath.

89
00:06:29.320 --> 00:06:34.370
I'm going to print the outer product between W and V.

90
00:06:34.400 --> 00:06:38.570
Now let's see if these two results are the same.

91
00:06:38.590 --> 00:06:38.950
Huh.

92
00:06:38.980 --> 00:06:41.420
They are definitely not the same.

93
00:06:41.470 --> 00:06:49.390
This matrix is tall and this matrix is wide so the sizes aren't even the same between this result and

94
00:06:49.390 --> 00:06:50.890
this result.

95
00:06:50.890 --> 00:06:56.660
However although these two results are not exactly the same it does kind of seem like this matrix you

96
00:06:56.660 --> 00:07:00.610
know if you would like flip this matrix around it would be this matrix.

97
00:07:00.620 --> 00:07:07.130
You know so here the first row in this matrix is the first column in this matrix and so on.

98
00:07:07.240 --> 00:07:08.530
So that is pretty interesting.

99
00:07:08.530 --> 00:07:15.310
So it does seem like although the outer product is not strictly matrix commutative it does seem like

100
00:07:15.310 --> 00:07:21.430
there is some relationship between the outer product between VFW and the outer product between W and

101
00:07:21.430 --> 00:07:22.450
V.

102
00:07:22.780 --> 00:07:28.240
And in fact the relationship between those happens to be related to an operation called the transpose

103
00:07:28.600 --> 00:07:34.210
which I've already mentioned a few times before and I'm going to talk a lot more about the transpose

104
00:07:34.240 --> 00:07:38.720
operation and I think maybe two or three videos for now.

105
00:07:38.920 --> 00:07:39.200
Okay.

106
00:07:39.220 --> 00:07:43.260
But so the direct answer to the question in the exercise is no.

107
00:07:43.300 --> 00:07:49.390
The outer product is not commutative because the outer product between V and W is different from the

108
00:07:49.390 --> 00:07:52.420
outer product between W and V.

109
00:07:52.480 --> 00:07:58.420
So then the next part of the exercise was about scalar multiplication.

110
00:07:58.420 --> 00:08:00.050
So I'm going to come up with some scalar.

111
00:08:00.070 --> 00:08:08.320
Let's just say 4 and then what I'm gonna do is multiply these scalar by different positions in the outer

112
00:08:08.320 --> 00:08:08.730
product.

113
00:08:08.740 --> 00:08:10.220
So let's start with.

114
00:08:10.290 --> 00:08:13.350
I call this reds 1 4 result 1.

115
00:08:13.360 --> 00:08:22.600
So that's going to be x times the outer product between V and W and then I'll call this reds too.

116
00:08:22.600 --> 00:08:28.970
This is going to be num pi dot outer s times V common W.

117
00:08:29.230 --> 00:08:38.230
So the outer product between s times V and W and then we have reds 3 that's going to be none pi dot

118
00:08:38.290 --> 00:08:48.160
outer outer v comma s times W and then finally I'm gonna have reds for equals none pi dot outer outer

119
00:08:48.890 --> 00:08:54.920
foot V and W and then multiply at the very end by s.

120
00:08:55.250 --> 00:08:55.870
All right.

121
00:08:55.870 --> 00:09:02.200
And so now what I'm thinking is that if these results are equal to each other I should be able to subtract

122
00:09:02.200 --> 00:09:05.280
them and get the zeros matrix.

123
00:09:05.290 --> 00:09:10.510
So let's start with reds 1 minus reds 2 0 right.

124
00:09:10.540 --> 00:09:11.560
So these are all zero.

125
00:09:11.560 --> 00:09:17.770
So that tells us that these two operations are identical or the outcomes of these two operations are

126
00:09:17.770 --> 00:09:26.140
identical because subtracting the two gives us all zeroes so we can try this again with reds 3 and again

127
00:09:26.170 --> 00:09:31.450
with reds 4 and you can probably see where this is going.

128
00:09:31.630 --> 00:09:38.530
So there's two and then four and then just to make sure this is totally exhaustive I'll do three and

129
00:09:38.530 --> 00:09:39.180
four.

130
00:09:39.250 --> 00:09:45.970
So basically every way that we subtracted one result from another result we always got the zeros matrix

131
00:09:47.880 --> 00:09:49.290
so that was pretty interesting.

132
00:09:49.290 --> 00:09:56.220
We used Python as a tool to help us understand some properties of linear algebra and in particular the

133
00:09:56.220 --> 00:09:57.190
outer product.

134
00:09:57.300 --> 00:10:03.210
So we discovered that the outer product itself is not commutative it's not matrix commutative.

135
00:10:03.210 --> 00:10:08.610
However the outer product is scalar multiplication commutative.

136
00:10:08.610 --> 00:10:15.270
So in this video you learned about the outer product and how to compute it or what it means how to interpret

137
00:10:15.270 --> 00:10:23.010
it and you saw a way to use Python as a tool to test one specific property of mathematics and linear

138
00:10:23.010 --> 00:10:23.460
algebra.

139
00:10:23.490 --> 00:10:28.080
And that is matrix connectivity and scalar multiplication community.
