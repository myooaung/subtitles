1
00:00:03,590 --> 00:00:09,740
In this video I'm going to tell you about the unit circle and how to create the unit circle both in

2
00:00:09,740 --> 00:00:11,900
math and in Python.

3
00:00:11,930 --> 00:00:17,750
And this is also going to give you a bit more practice at plotting in Python.

4
00:00:17,750 --> 00:00:20,030
So here is what the unit circle looks like.

5
00:00:20,030 --> 00:00:22,040
It's well it's just a circle.

6
00:00:22,160 --> 00:00:24,440
It's centered at the origin.

7
00:00:24,680 --> 00:00:26,840
And why is it called the unit.

8
00:00:26,840 --> 00:00:32,260
Well in math the term unit is often used to indicate the number one.

9
00:00:32,420 --> 00:00:36,740
So the number one is the single unit or unitary.

10
00:00:36,740 --> 00:00:43,760
So the unit circle basically just means a circle that is always a length of exactly one away from the

11
00:00:43,760 --> 00:00:44,990
origin.

12
00:00:44,990 --> 00:00:47,300
Now you can see that when you look at these axes here.

13
00:00:47,300 --> 00:00:49,420
So this is one unit away here.

14
00:00:49,670 --> 00:00:52,070
And one unit away here and one unit away here.

15
00:00:52,070 --> 00:00:58,410
So basically every single point in here is one unit away from the origin.

16
00:00:58,430 --> 00:01:01,280
So how do you create this unit circle.

17
00:01:01,280 --> 00:01:08,030
Well one way to create it is through trigonometry and in particular through cosine and sign.

18
00:01:08,030 --> 00:01:12,830
Now I'm going to talk more about trigonometry in a later section of the course.

19
00:01:12,980 --> 00:01:20,180
But for this video suffice it to say that if you use the cosine of X and the sign of X and keep the

20
00:01:20,180 --> 00:01:26,650
X is the same here then that's going to give you some point in this unit circle.

21
00:01:26,900 --> 00:01:32,210
And that point that value of x turns out to be the angle relative to this axis over here.

22
00:01:32,960 --> 00:01:39,650
So essentially the way that we are going to create the unit circle here is by generating numbers that

23
00:01:39,650 --> 00:01:47,660
go from 0 through pi all the way up to 2 pi and then we just put those numbers 0 through 2 pi into the

24
00:01:47,660 --> 00:01:52,040
cosine function into the sine function and plot one against the other.

25
00:01:52,070 --> 00:01:57,890
And that's our unit circle to create this unit circle.

26
00:01:57,880 --> 00:02:01,700
We are going to use the known pi modules.

27
00:02:01,700 --> 00:02:04,730
I will write import num pi as MP.

28
00:02:04,730 --> 00:02:16,280
And because we are going to plot some things we also need to import map plot lib dot pi plot as BLT

29
00:02:16,340 --> 00:02:19,190
which is basically what everyone does.

30
00:02:19,220 --> 00:02:21,900
Okay so let's define our variable x.

31
00:02:21,920 --> 00:02:25,820
So I'm going to use the Linn space function.

32
00:02:25,820 --> 00:02:28,610
We want to go from zero to two pi.

33
00:02:28,610 --> 00:02:29,800
So how do we get pi.

34
00:02:29,810 --> 00:02:35,230
Actually let me pause this for or comment this out for a moment and talk a little bit about pi.

35
00:02:35,270 --> 00:02:42,110
Now I'm not referring to the food pi I'm referring to the number pi and that is this number three point

36
00:02:42,110 --> 00:02:42,920
1 4.

37
00:02:42,950 --> 00:02:48,570
And you know I forget whatever else comes in there definitely it starts with three point 1 4.

38
00:02:48,650 --> 00:02:53,370
So let's just see what happens if we type pi here we get an error.

39
00:02:53,450 --> 00:03:00,650
So the variable in that or this reserved keyword pi does not exist in the base Python workspace.

40
00:03:00,650 --> 00:03:05,750
However none Pi has a reserved variable for pi.

41
00:03:05,780 --> 00:03:12,490
So N.P. dot pi is going to give us pi out to 15 digits or whatever this is.

42
00:03:12,530 --> 00:03:12,770
Okay.

43
00:03:12,800 --> 00:03:19,840
So with that said we want to go from zero to two pi so two times and Pete out Pi.

44
00:03:20,150 --> 00:03:24,190
And how many steps do we want between 0 and 2 pi.

45
00:03:24,200 --> 00:03:29,030
Let's start off with how about six and let's see how that looks.

46
00:03:29,030 --> 00:03:36,730
So now I'm going to generate the plot by entering this variable X into the cosine and sine function.

47
00:03:36,740 --> 00:03:47,990
So let's say peel tee it up plot and P so num pied out cosine of X by the sign of X and let's make this

48
00:03:47,990 --> 00:03:49,750
a black line.

49
00:03:52,910 --> 00:03:53,330
Mm hmm.

50
00:03:53,450 --> 00:03:53,720
Okay.

51
00:03:53,750 --> 00:04:00,710
Well I guess you can kind of see that it wants to be a circle it's a bit more like a Pentagon but maybe

52
00:04:00,740 --> 00:04:02,530
it's kind of approaching a circle.

53
00:04:02,540 --> 00:04:05,400
Maybe we just don't have enough points in here.

54
00:04:05,450 --> 00:04:10,780
Wonder what's gonna happen if I go for about twenty five points.

55
00:04:10,780 --> 00:04:11,330
All right.

56
00:04:11,330 --> 00:04:13,690
Now this is starting to look a little bit better.

57
00:04:13,700 --> 00:04:18,140
It's a bit rounder why do we go up to 100 and see how that looks.

58
00:04:18,160 --> 00:04:18,990
Aha.

59
00:04:19,010 --> 00:04:20,370
This is looking good.

60
00:04:20,420 --> 00:04:22,730
Except this doesn't really look like a circle.

61
00:04:22,730 --> 00:04:24,380
Looks more like an oval.

62
00:04:24,410 --> 00:04:25,890
Looks like an ellipse.

63
00:04:25,940 --> 00:04:28,580
Now the problem is actually not with this formula.

64
00:04:28,580 --> 00:04:30,500
The problem is not with the code.

65
00:04:30,500 --> 00:04:34,120
The problem is that this axis is rectangular.

66
00:04:34,130 --> 00:04:35,570
It's not square.

67
00:04:35,570 --> 00:04:41,750
So you can see that from the zero to the edge of this circle on top is 1.

68
00:04:41,990 --> 00:04:47,150
And then also from here from zero all the way to the left edge it's still a distance of one.

69
00:04:47,630 --> 00:04:51,760
So in fact the axis is stretched the circle or this object.

70
00:04:51,770 --> 00:04:54,430
I should say is still a circle.

71
00:04:54,620 --> 00:04:57,220
So let's make this plot look a little bit nicer.

72
00:04:57,230 --> 00:05:04,990
I'm going to start by setting the access to be square that already looks a lot better and then I'll

73
00:05:04,990 --> 00:05:07,620
put some labels on here some axis labels.

74
00:05:07,690 --> 00:05:19,570
Say plot that X label is cosine of X and people often write costs in short for cosine and then the y

75
00:05:19,570 --> 00:05:23,860
axis label is going to be the sign of x.

76
00:05:23,860 --> 00:05:24,120
All right.

77
00:05:24,130 --> 00:05:25,820
This is looking better.

78
00:05:25,870 --> 00:05:32,890
I'm mostly pretty happy with this except the picture that I showed in the slides had a gray dashed line

79
00:05:33,220 --> 00:05:37,660
along the zeros of the sign axis and the cosine axis.

80
00:05:37,840 --> 00:05:40,300
So it would be nice to put those in here as well.

81
00:05:41,290 --> 00:05:43,530
So I will draw those here.

82
00:05:43,810 --> 00:05:45,310
So peel teed up plot.

83
00:05:45,580 --> 00:05:46,630
So now we want to draw.

84
00:05:46,660 --> 00:05:48,870
Let's start with this zero line here.

85
00:05:48,880 --> 00:05:55,660
So on the x axis it's going to go from a little bit less than minus one to a little bit over 1 So let's

86
00:05:55,660 --> 00:06:03,490
maybe say that on the x axis it's going to go from minus one point one two plus one point one and then

87
00:06:03,490 --> 00:06:05,500
where does this line go on the y axis.

88
00:06:05,500 --> 00:06:09,660
Well it actually doesn't go anywhere on the y axis or the sine axis.

89
00:06:09,790 --> 00:06:12,640
It starts at zero and it ends at zero.

90
00:06:12,670 --> 00:06:17,260
So this is going to be zero comma zero.

91
00:06:17,410 --> 00:06:18,190
All right.

92
00:06:18,190 --> 00:06:25,360
So this is starting to look pretty good except I would want this to be a gray dashed line.

93
00:06:25,360 --> 00:06:27,910
So let's first make it a dash to line.

94
00:06:28,210 --> 00:06:32,550
So I'm using two hyphens here to make this a dash line.

95
00:06:32,560 --> 00:06:37,080
OK so now that's dashed and now I want to set the color to be Grace.

96
00:06:37,090 --> 00:06:44,710
I'm going to write color equals and then in a list I can input three numbers for red green and blue

97
00:06:44,740 --> 00:06:46,140
or RG B.

98
00:06:46,330 --> 00:06:49,900
So how do we get a gray line essentially to get a gray line.

99
00:06:49,900 --> 00:06:53,680
You set the red green and blue color values to all be the same.

100
00:06:53,680 --> 00:06:58,510
So let's go four point eight point eight and point eight.

101
00:06:59,440 --> 00:06:59,800
Okay.

102
00:06:59,830 --> 00:07:02,530
So that looks pretty good now.

103
00:07:02,560 --> 00:07:06,090
So this is the horizontal line for the vertical line.

104
00:07:06,280 --> 00:07:13,560
We want this line of code to be almost exactly the same except now on the x axis.

105
00:07:13,570 --> 00:07:15,270
We go from zero to zero.

106
00:07:15,280 --> 00:07:19,230
And on the y axis we go from minus one to plus 1.

107
00:07:19,240 --> 00:07:25,050
So all I have to do is basically swap these two sets of coordinates.

108
00:07:25,360 --> 00:07:25,600
All right.

109
00:07:25,630 --> 00:07:30,300
So this is looking better except that the line now isn't quite long enough.

110
00:07:30,310 --> 00:07:31,780
We get some whitespace up here.

111
00:07:32,140 --> 00:07:41,830
So what I'm going to do to fix that is forced the axis to be from minus one point one two plus one point

112
00:07:41,830 --> 00:07:42,420
one.

113
00:07:42,430 --> 00:07:47,640
So these are the two axis limits for the x axis and then for the y axis.

114
00:07:47,650 --> 00:07:52,120
Also one point one or minus one point one two one point one.

115
00:07:52,120 --> 00:07:52,450
All right.

116
00:07:52,480 --> 00:07:54,960
So that looks pretty good.

117
00:07:55,000 --> 00:08:00,310
There's one more thing I would like to do one more addition I would like to make to this plot before

118
00:08:00,340 --> 00:08:07,060
we get to the exercise for this video and that addition is basically just to draw one line that goes

119
00:08:07,060 --> 00:08:12,400
from the origin to this circles to the edge of the unit circle.

120
00:08:12,400 --> 00:08:18,760
Now you already know how to do that because you already know how to draw lines on these kinds of Cartesian

121
00:08:18,760 --> 00:08:19,590
axes.

122
00:08:19,600 --> 00:08:22,090
So if anything this is really just a review.

123
00:08:22,120 --> 00:08:32,200
So let's do a line so first let's pick an angle and let's say that angle is going to be pi over four.

124
00:08:32,260 --> 00:08:35,560
So now how are we going to make this line.

125
00:08:35,560 --> 00:08:42,100
So I want a line that goes from the origin to pi over four or I should say to the unit circle with an

126
00:08:42,160 --> 00:08:43,990
angle of pi over four.

127
00:08:43,990 --> 00:08:46,560
So it's going to be somewhere around here.

128
00:08:46,630 --> 00:08:53,470
So we need to specify the two x coordinate so the start and stop on the x axis and start and stop on

129
00:08:53,470 --> 00:08:54,830
the y axis.

130
00:08:54,860 --> 00:09:01,090
Now because this line will start at the origin of course it's going to be zero something and then the

131
00:09:01,090 --> 00:09:09,970
y coordinates are also going to be zero something and that something is N.P. that cosine of angle.

132
00:09:09,970 --> 00:09:17,760
And then here for the y axis it's going to be and Pete out sign of angle and let's make this a red line.

133
00:09:17,770 --> 00:09:19,400
So it's nice and visible.

134
00:09:19,540 --> 00:09:20,040
All right.

135
00:09:20,050 --> 00:09:21,550
So this looks pretty nice.

136
00:09:21,550 --> 00:09:29,170
I think the exercise for this video is to basically produce this plot.

137
00:09:29,230 --> 00:09:31,250
So this looks pretty neat I think.

138
00:09:31,300 --> 00:09:36,120
And what's interesting about this plot is that the lines are really close together here.

139
00:09:36,280 --> 00:09:41,690
And as you go around the circle the lines are getting further and further apart from each other.

140
00:09:41,740 --> 00:09:48,250
Now the reason why the lines are compressed over here and they get expanded over here is because the

141
00:09:48,310 --> 00:09:51,080
angles of all of these lines is E to the x.

142
00:09:51,100 --> 00:09:55,360
So we have this natural exponent and then something in the power here.

143
00:09:55,360 --> 00:10:01,750
Now if you're not familiar with E to the X the natural exponent then you can get really excited about

144
00:10:01,750 --> 00:10:08,270
the next video where I'm going to tell you all about the natural exponent and its associated function.

145
00:10:08,290 --> 00:10:14,140
The logarithm but for now all you need to know is that there is the natural exponent.

146
00:10:14,140 --> 00:10:20,260
And if you're not sure how to figure out how to use the natural exponent in Python then that's going

147
00:10:20,260 --> 00:10:23,470
to be a little bit of a challenge for this exercise.

148
00:10:23,470 --> 00:10:23,710
Okay.

149
00:10:23,710 --> 00:10:31,180
So basically you want to come up with angles so points in vector x that go from minus three up to one

150
00:10:31,180 --> 00:10:37,330
point eighty three and you can just basically do with with trial and error how many points you want

151
00:10:37,330 --> 00:10:40,150
between minus three and one point eighty three.

152
00:10:40,150 --> 00:10:45,460
So it's not just the numbers minus three and one point eighty three but linearly spaced numbers in between

153
00:10:45,460 --> 00:10:51,580
these two boundaries and then you come up with some other variable and called that K and set k to be

154
00:10:51,610 --> 00:10:56,530
equal to e to the x and then you plot those as lines like this.

155
00:10:56,560 --> 00:10:56,940
All right.

156
00:10:56,970 --> 00:10:58,030
So good luck.

157
00:10:58,060 --> 00:11:05,140
Pause the video switch to Python see if you can get this beautiful little graph and now I am going to

158
00:11:05,140 --> 00:11:09,410
switch to Python and we can work through this together.

159
00:11:09,610 --> 00:11:13,950
All right so I'm going to start by generating this vector x.

160
00:11:14,170 --> 00:11:22,480
So from the NUM pi module the Lynn space function we want to go from minus three to one point eight

161
00:11:22,510 --> 00:11:27,160
three and I'm pretty sure that I used 50 if I remember correctly.

162
00:11:28,510 --> 00:11:32,410
So 50 steps between minus three and one point eighty three.

163
00:11:32,680 --> 00:11:40,080
And then I can generate K and so the function for the natural exponential is e XP like this.

164
00:11:40,270 --> 00:11:46,660
And then whatever you want to put into the exponent of the natural exponential you do inside the function.

165
00:11:46,660 --> 00:11:48,980
So that looks like this.

166
00:11:49,240 --> 00:11:49,570
Okay.

167
00:11:49,570 --> 00:11:58,420
And then the way that I am going to draw that map is in a for loops let's say for I in K and then we

168
00:11:58,420 --> 00:11:59,700
want to draw a line.

169
00:11:59,710 --> 00:12:07,820
So it's gonna be one plot line one plotting command for each of the elements in K.

170
00:12:08,290 --> 00:12:15,030
So P L teed up plot and now the code in here actually looks pretty similar to this code here.

171
00:12:15,130 --> 00:12:18,630
In fact maybe I'll even copy and paste this code.

172
00:12:19,030 --> 00:12:24,720
I just have to be super careful to change all the variables when appropriate.

173
00:12:24,730 --> 00:12:24,990
Okay.

174
00:12:25,000 --> 00:12:27,970
So we want each of these lines to go from the origin.

175
00:12:28,000 --> 00:12:36,130
So that's 0 0 2 cosine and sine so that part's correct except it's not variable angle.

176
00:12:36,130 --> 00:12:40,430
It's each element in K which is variable ie.

177
00:12:40,480 --> 00:12:42,360
In the for loop here.

178
00:12:42,430 --> 00:12:45,100
So I just have to replace this with I.

179
00:12:45,310 --> 00:12:48,120
And then let's just see how this looks.

180
00:12:48,220 --> 00:12:51,180
Okay so this looks kind of good it's a little bit stretched out.

181
00:12:51,200 --> 00:12:55,120
So I want to change a few things in this plot.

182
00:12:55,120 --> 00:12:57,890
So peel that axis square.

183
00:12:59,600 --> 00:12:59,860
All right.

184
00:12:59,890 --> 00:13:01,490
That's looking better.

185
00:13:01,490 --> 00:13:04,720
Except that means that P L T does show.

186
00:13:06,100 --> 00:13:12,400
So this is looking better except the figure that I showed in the slides didn't have this bounding box

187
00:13:12,400 --> 00:13:18,060
and it didn't have the tick marks that ticks around the x axis and the y axis.

188
00:13:18,100 --> 00:13:26,800
So I'm going to set P.L. t the Axis off and that's going to turn off the axis without changing the plot

189
00:13:26,800 --> 00:13:30,090
lines inside the axis.

190
00:13:30,250 --> 00:13:31,030
Very nice.

191
00:13:31,030 --> 00:13:37,870
So in this video you learned about creating unit circles in Python and I hope that you are now a little

192
00:13:37,870 --> 00:13:44,170
bit more confident than you were before about plotting lines and circles in Python.
