1
00:00:03,420 --> 00:00:09,270
This video contains the exercise that follows up on the previous video.

2
00:00:09,330 --> 00:00:16,110
So in the last video you learned about simulating a coin flip for a fair coin and a weighted coin or

3
00:00:16,110 --> 00:00:23,760
a biased coin and what you want to do in this exercise is essentially extend that idea to create a weighted

4
00:00:23,820 --> 00:00:26,100
die or a biased die.

5
00:00:26,220 --> 00:00:34,320
Now to be clear I'm using die here as a noun not as a verb the noun die is the singular of dice.

6
00:00:34,320 --> 00:00:40,110
So it's like that little cube with numbers on all six faces and you roll it it's in board games and

7
00:00:40,110 --> 00:00:42,500
you see it in casinos anyway.

8
00:00:42,510 --> 00:00:45,090
So you want to create a way to die.

9
00:00:45,240 --> 00:00:50,920
That is twice as likely to land on the number one as any other number.

10
00:00:51,180 --> 00:00:57,720
And then you want to simulate a dye roll 50 times so you roll the dice 50 times and then you want to

11
00:00:57,720 --> 00:01:02,270
make a probability graph and also an empirical proportion graph.

12
00:01:02,310 --> 00:01:05,540
So the result is going to look something like this.

13
00:01:05,580 --> 00:01:10,560
Now the black bars will be different of course for yours but the purple line should actually be the

14
00:01:10,560 --> 00:01:11,310
same.

15
00:01:11,310 --> 00:01:14,100
So let me walk you through what this plot shows.

16
00:01:14,130 --> 00:01:16,020
So here we have the dice face.

17
00:01:16,050 --> 00:01:23,370
So numbers 1 through 6 and then you see on the y axis it's either the probability or the proportion

18
00:01:23,790 --> 00:01:24,970
for the Purple Line.

19
00:01:24,990 --> 00:01:27,300
It's the true underlying probability.

20
00:01:27,300 --> 00:01:32,680
So it's the probability that you will get the number one when rolling this die.

21
00:01:32,700 --> 00:01:36,720
So that's like the theoretical distribution or the probability.

22
00:01:36,720 --> 00:01:43,590
So that is 28 percent for the number one and 14 percent for all these other numbers.

23
00:01:44,430 --> 00:01:51,960
And then for your experiment where you roll the dice 50 times you're unlikely to get exactly that theoretical

24
00:01:51,960 --> 00:01:52,650
distribution.

25
00:01:52,650 --> 00:01:55,840
Instead you're going to get some empirical proportion.

26
00:01:55,980 --> 00:02:03,270
And in this particular case when I made this graph we happened to get for example 36 percent of roles

27
00:02:03,360 --> 00:02:08,280
had the number one 10 percent of the roles had number two and so on.

28
00:02:08,280 --> 00:02:11,070
And then if you like this is a bit of an extra challenge.

29
00:02:11,070 --> 00:02:16,470
You can also figure out a way to get the text to look nice inside the bars like this.

30
00:02:16,470 --> 00:02:21,690
So here I have the actual result is 36 percent 10 percent and so on.

31
00:02:21,690 --> 00:02:24,150
You can see the text printed in here.

32
00:02:24,150 --> 00:02:26,580
So now is your chance to positive video.

33
00:02:26,580 --> 00:02:27,300
Have fun.

34
00:02:27,330 --> 00:02:29,820
Good luck working through this exercise.

35
00:02:29,820 --> 00:02:35,220
Reproducing a graph that looks something like this and now I'm going to switch to Python and show you

36
00:02:35,220 --> 00:02:38,700
how I solved this problem.

37
00:02:38,700 --> 00:02:44,040
So there are several ways to correctly solve this exercise.

38
00:02:44,040 --> 00:02:48,180
I'm going to walk you through my solution and I'll show you what I did.

39
00:02:48,180 --> 00:02:53,160
But I want to be clear that you could have come up with a very different solution and still arrived

40
00:02:53,190 --> 00:02:55,710
at the same correct result.

41
00:02:55,710 --> 00:02:58,220
So I'm going to start by defining a few variables.

42
00:02:58,230 --> 00:03:03,200
So n is 50 that's the number of roles for our day.

43
00:03:03,210 --> 00:03:10,920
I'm going to initialize a variable a vector called outcomes and this is just going to have six elements.

44
00:03:10,920 --> 00:03:17,070
So the way that I'm going to set this up is I'm going to run through the experiment Fifty times roll

45
00:03:17,070 --> 00:03:25,320
the dice fifty times and if we got for example a three then I'm going to say outcomes index three equals

46
00:03:25,680 --> 00:03:26,950
itself plus 1.

47
00:03:26,970 --> 00:03:29,710
I'm going to build up the distribution this way.

48
00:03:29,820 --> 00:03:36,600
It's a slightly different approach from my approach to the previous video where I had a whole matrix

49
00:03:36,660 --> 00:03:40,910
in which I saved the result for each individual experiment run.

50
00:03:40,930 --> 00:03:43,460
OK so that is for the outcomes.

51
00:03:43,470 --> 00:03:48,030
Now what I want to do is come up with a vector of the pure probabilities.

52
00:03:48,030 --> 00:03:50,910
So this is like the theoretical distribution.

53
00:03:50,910 --> 00:03:55,090
I call this pure probs and this is going to be an array.

54
00:03:55,210 --> 00:04:02,250
And now the idea is that we want six numbers and the first number is going to be twice as likely to

55
00:04:02,250 --> 00:04:05,470
appear as any of the other ones individually.

56
00:04:05,480 --> 00:04:08,180
So let's see that's 1 2 3 4 5.

57
00:04:08,180 --> 00:04:08,840
Yeah.

58
00:04:09,060 --> 00:04:11,940
So this is not a probability distribution.

59
00:04:11,940 --> 00:04:17,180
This is just an array of numbers to convert this to a probability distribution.

60
00:04:17,460 --> 00:04:24,300
Like I showed in the previous video we need to order actually that was in I think the first video of

61
00:04:24,300 --> 00:04:25,470
this section.

62
00:04:25,590 --> 00:04:33,000
We need to make sure that all of these numbers together some 2 1 and the way to do that is by dividing

63
00:04:33,120 --> 00:04:39,300
each element in this vector by these sum over all of the elements in the vector.

64
00:04:39,330 --> 00:04:48,000
So pure props and now we can take a look at this pure probs and see that this is point 2 8 and then

65
00:04:48,000 --> 00:04:50,740
the rest of these are all point 1 4.

66
00:04:50,790 --> 00:04:53,250
Now it's time to run our experiment.

67
00:04:53,270 --> 00:05:01,710
So I'm going to loop over for i in range n now the way that I'm going to set this up is actually by

68
00:05:01,710 --> 00:05:04,290
rolling a seven sided die.

69
00:05:04,290 --> 00:05:05,540
So let's start with this.

70
00:05:05,560 --> 00:05:10,550
Roll a seven sided die.

71
00:05:10,680 --> 00:05:18,210
So I call this die roll equals numb Pieta random and now I'm gonna say Rand inch.

72
00:05:18,210 --> 00:05:26,460
And this is going to be a random number between 0 and 6 so I write zero comma seven because it's exclusive

73
00:05:26,490 --> 00:05:27,970
on the upper bound.

74
00:05:28,020 --> 00:05:33,660
So this is going to produce a random number that's between 0 and 6.

75
00:05:33,660 --> 00:05:39,930
Now why am I rolling a seven sided die when this is really about a six sided die.

76
00:05:40,440 --> 00:05:50,280
Well what I'm going to do is say if the die roll equals six then I'm going to force the die roll to

77
00:05:50,280 --> 00:05:52,320
be equal to zero.

78
00:05:52,320 --> 00:05:54,990
So this is how I'm imposing this bias.

79
00:05:55,050 --> 00:06:04,140
So we say if you ever get the number six from this random integer then set that 6 0 force that this

80
00:06:04,140 --> 00:06:06,880
variable die roll to be equal to zero.

81
00:06:06,960 --> 00:06:14,010
Now because the number is 0 through 6 are all equally likely to occur whenever 6 happens I set it to

82
00:06:14,010 --> 00:06:22,230
0 and that means that a die roll equal to zero is going to happen approximately twice as often as any

83
00:06:22,230 --> 00:06:23,790
other number.

84
00:06:23,820 --> 00:06:28,480
Again this is one way that I am showing you how to solve this problem.

85
00:06:28,500 --> 00:06:33,080
There are several other correct solutions that you can also use.

86
00:06:33,180 --> 00:06:33,540
All right.

87
00:06:33,540 --> 00:06:40,650
And now I'm going to say that the outcomes for this variables so now I'm using this variable die roll

88
00:06:40,680 --> 00:06:45,210
as an index into this factor outcomes equals.

89
00:06:45,210 --> 00:06:50,310
Now I want to write something like this equals itself plus 1.

90
00:06:50,310 --> 00:06:55,770
So this is correct coding there's nothing wrong with that but we can make it a little bit more efficient

91
00:06:55,800 --> 00:07:00,210
by saying that this variable plus equals one.

92
00:07:00,410 --> 00:07:00,660
Okay.

93
00:07:00,690 --> 00:07:07,620
So now before going any further I want to run all of this code and just print out what this variable

94
00:07:07,710 --> 00:07:09,750
outcomes is going to be.

95
00:07:09,750 --> 00:07:15,680
So this is pretty interesting you can see now outcomes is 13 10 6 10 6 5.

96
00:07:16,080 --> 00:07:19,020
So that means that I roll this die.

97
00:07:19,020 --> 00:07:20,340
It's a seven sided die.

98
00:07:20,370 --> 00:07:29,190
But I forced the top value of six to be equal to zero corresponding to the die Phase 1 and that is the

99
00:07:29,250 --> 00:07:39,270
mechanism by which I implemented a biased six sided coin so phase one occurred or rolled 13 times.

100
00:07:39,280 --> 00:07:41,030
Phase 2 rolled 10 times.

101
00:07:41,040 --> 00:07:42,540
And so on.

102
00:07:42,540 --> 00:07:42,990
All right.

103
00:07:43,170 --> 00:07:48,500
So that's actually the end of the computational part of this project.

104
00:07:48,540 --> 00:07:51,960
What I want to do now is basically just a lot of plotting.

105
00:07:52,050 --> 00:07:57,510
So let's start by plotting a bar of the outcomes.

106
00:07:57,770 --> 00:08:00,760
And I'm going to write outcomes divided by n.

107
00:08:01,020 --> 00:08:08,190
And the reason why I want this to be divided by n is so that this will still be interpretable the y

108
00:08:08,190 --> 00:08:13,620
axis values will still be interpretable even if I change the number of experiments to run.

109
00:08:13,650 --> 00:08:14,160
So let's see.

110
00:08:14,190 --> 00:08:22,410
OK so I actually have to write the x axis labels in addition to the y axis coordinates or the heights

111
00:08:22,470 --> 00:08:23,560
of the bar.

112
00:08:23,700 --> 00:08:28,030
So I'm going to set this up as a range from 1 to 7.

113
00:08:28,140 --> 00:08:33,780
And the reason why I'm setting this to be 1 through 7 instead of 0 through 6 is that I want this to

114
00:08:33,780 --> 00:08:37,080
correspond to the numbers on a on a die.

115
00:08:37,110 --> 00:08:40,680
So those start at 1 and go up to 6.

116
00:08:40,770 --> 00:08:41,100
All right.

117
00:08:41,100 --> 00:08:42,750
So these need to be black.

118
00:08:42,750 --> 00:08:51,300
So I will say color equals K for black and the label is going to be the empirical distribution which

119
00:08:51,300 --> 00:08:54,270
is also called the proportion.

120
00:08:54,270 --> 00:09:00,070
So this is the empirical proportion that we actually observed in this experiment.

121
00:09:00,070 --> 00:09:05,370
And now we need to plot on top of this the same exact access range.

122
00:09:05,370 --> 00:09:15,480
So 1 through 6 and now it's going to be the pure probabilities and let's make this magenta with a square

123
00:09:15,510 --> 00:09:22,170
and a line connecting them and marker size equals 10 just to give us slightly bigger markers and the

124
00:09:22,170 --> 00:09:28,830
label is going to be theoretical or probability.

125
00:09:28,830 --> 00:09:29,490
All right.

126
00:09:29,540 --> 00:09:32,100
That should be plot.

127
00:09:32,400 --> 00:09:34,100
So this is starting to look pretty good.

128
00:09:34,140 --> 00:09:41,010
Now you might object to the fact that I drew lines between these dots and that is a fair objection because

129
00:09:41,010 --> 00:09:46,680
there is no such thing on a tie as a face corresponding to three point five.

130
00:09:46,680 --> 00:09:51,060
So formally technically this actually should look like this.

131
00:09:51,480 --> 00:09:59,490
However sometimes for visual reasons it's also useful to you know sort of bend these rules a little

132
00:09:59,490 --> 00:10:01,230
bit and draw lines.

133
00:10:01,230 --> 00:10:02,780
I think this looks a little bit nicer.

134
00:10:03,630 --> 00:10:03,870
All right.

135
00:10:03,900 --> 00:10:04,670
Let's see.

136
00:10:04,670 --> 00:10:15,120
So I'm going to set the x axis labels to be the di did face to be face and P.L. t the Y label is going

137
00:10:15,120 --> 00:10:27,610
to be the probability ability or pro portion and then I will turn on the labels so legend.

138
00:10:27,820 --> 00:10:30,860
Okay so so far this is starting to look really good.

139
00:10:30,870 --> 00:10:36,720
The only thing that we're missing here is the little white text underneath or just underneath the tops

140
00:10:36,720 --> 00:10:38,700
of these black bars.

141
00:10:38,730 --> 00:10:44,400
So to put those text labels there I'm going to use the function BLT.

142
00:10:44,610 --> 00:10:46,860
Text and I'm going to do this in a loop.

143
00:10:46,890 --> 00:10:52,970
So let's start by writing for I in range.

144
00:10:53,320 --> 00:11:01,080
Now this range has to go one through six because I'm gonna specify the x axis coordinates to be this

145
00:11:01,350 --> 00:11:06,030
looping index variable I so P L T dot plot.

146
00:11:06,090 --> 00:11:08,530
Now we want to plot at coordinates I.

147
00:11:08,940 --> 00:11:13,430
And then the y axis coordinate is going to be defined by the outcome.

148
00:11:13,830 --> 00:11:19,230
So it's gonna be outcomes and then it's the highest outcome divided by n.

149
00:11:19,500 --> 00:11:26,580
And I'm even gonna just start this just to make sure that we get part of this right because this is

150
00:11:26,580 --> 00:11:27,780
actually not correct.

151
00:11:27,900 --> 00:11:30,420
And I want you to see that is not going to be correct.

152
00:11:31,430 --> 00:11:31,710
Okay.

153
00:11:31,740 --> 00:11:33,700
So in fact we get an error.

154
00:11:33,990 --> 00:11:40,940
And the problem here this was actually not the error I was expecting.

155
00:11:40,950 --> 00:11:43,320
The problem is that I'm using the wrong function.

156
00:11:43,320 --> 00:11:46,140
This should be BLT text.

157
00:11:46,260 --> 00:11:54,300
Okay so the problem is that index 6 is out of range so this needs to be I minus 1 because we're starting

158
00:11:54,300 --> 00:11:58,700
here with 1 but the first index of course is 0.

159
00:11:58,740 --> 00:11:58,980
Okay.

160
00:11:59,010 --> 00:12:04,320
So you can actually kind of see the bottom of the text high here.

161
00:12:04,470 --> 00:12:11,260
So we actually need to do is set the y axis coordinate to be a little bit below the actual outcomes.

162
00:12:11,250 --> 00:12:18,990
So I played around a little bit and figured out that point 0 2 5 is a pretty reasonable distance to

163
00:12:18,990 --> 00:12:21,960
go underneath so that's looking good.

164
00:12:21,960 --> 00:12:27,880
Except it's a little bit small so I'm going to change the font size to be twelve.

165
00:12:27,990 --> 00:12:29,660
Now it's a little more legible.

166
00:12:29,680 --> 00:12:33,720
You can also see the text here is actually starting at the center.

167
00:12:33,750 --> 00:12:43,000
But I want this to be center aligned so I'm going to write horizontal alignment equals center.

168
00:12:44,060 --> 00:12:46,020
Okay so this is starting to look pretty good.

169
00:12:46,020 --> 00:12:48,170
The text is all in the right place.

170
00:12:48,270 --> 00:12:49,920
It's just the wrong text.

171
00:12:49,940 --> 00:12:51,600
So obviously this is high.

172
00:12:51,630 --> 00:12:55,710
This needs to say whatever the actual proportion is.

173
00:12:55,710 --> 00:13:00,660
Now you can also see this line is starting to get a little bit long and it's going to get longer.

174
00:13:00,690 --> 00:13:07,710
So I am going to set this to print out into the next line of code just to make sure that it's still

175
00:13:07,950 --> 00:13:09,790
readily visible.

176
00:13:09,820 --> 00:13:14,820
Okay so let's replace this high with some text.

177
00:13:14,970 --> 00:13:17,140
So what does that text going to be.

178
00:13:17,250 --> 00:13:26,930
So I can just set it to be the outcomes of I minus 1 divided by n and let's see how this looks.

179
00:13:27,030 --> 00:13:28,920
So that's looking pretty good.

180
00:13:29,040 --> 00:13:34,380
It's getting there but I want this to be printed in percent so in the slide I showed the picture had

181
00:13:34,380 --> 00:13:35,780
a percent sign here.

182
00:13:35,910 --> 00:13:40,440
So it's a little weird to get a percent sign because we already have a percent sign here.

183
00:13:40,440 --> 00:13:44,130
What would happen if we just write a percent sign.

184
00:13:44,130 --> 00:13:47,460
Well then we get an error that says incomplete format.

185
00:13:47,520 --> 00:13:54,450
In fact python is expecting some formatting letter after the percent sign like for example.

186
00:13:54,450 --> 00:13:55,170
Percent G.

187
00:13:55,620 --> 00:13:59,900
So actually the way that you can indicate a percent sign is percent percent.

188
00:14:01,200 --> 00:14:07,680
Okay so this is starting to look good except it's not actually technically correct because this numbers

189
00:14:07,770 --> 00:14:10,610
the dye Phase 3 doesn't appear.

190
00:14:10,770 --> 00:14:17,640
Point one percent it's point 1 proportion so to convert this into an actual percent we need to multiply

191
00:14:17,640 --> 00:14:19,250
this by 100.

192
00:14:19,290 --> 00:14:25,170
So I'm going to say 100 times the proportion okay.

193
00:14:25,230 --> 00:14:30,840
And this is looking much better and now the last thing that I want to do is just round this to the nearest

194
00:14:30,840 --> 00:14:32,070
percentage point.

195
00:14:32,070 --> 00:14:37,860
So therefore I'm going to just convert this whole thing into an integer.

196
00:14:37,860 --> 00:14:40,130
So this is a floating point representation.

197
00:14:40,140 --> 00:14:44,580
I'm going to convert it into an integer and that's going to give us these numbers.

198
00:14:44,580 --> 00:14:48,200
In percent so I think overall this looks really good.

199
00:14:48,210 --> 00:14:53,350
I'm going to call this the successful completion of this project.

200
00:14:53,520 --> 00:14:59,940
I hope you enjoyed this and the previous videos you learned about generating binary distributions and

201
00:14:59,940 --> 00:15:07,470
then in the exercise in this video you learned how to extend this to any arbitrary number of outcomes

202
00:15:07,470 --> 00:15:13,690
with probabilities that you get to define and you also got a very very small introduction into the panda's

203
00:15:13,770 --> 00:15:20,940
data frame in particular importing data into append US data frames and doing a little bit of manipulation

204
00:15:21,120 --> 00:15:22,410
and table formatting.
