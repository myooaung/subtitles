1
00:00:03,610 --> 00:00:09,180
Perhaps the most famous polynomial is called the quadratic equation.

2
00:00:09,250 --> 00:00:16,030
If you haven't already come across the quadratic equation in a math course then I'm sure you will soon.

3
00:00:16,030 --> 00:00:21,730
So in this video I'm going to introduce or maybe reintroduce you to the quadratic equation.

4
00:00:21,730 --> 00:00:28,230
You will see that despite the really fancy term which starts with a Q. It's actually nothing special.

5
00:00:28,240 --> 00:00:34,960
It's just a regular polynomial and also in this video I'm going to give you some more experience using

6
00:00:34,960 --> 00:00:36,260
functions in particular.

7
00:00:36,310 --> 00:00:38,060
Creating your own functions.

8
00:00:38,140 --> 00:00:40,110
In this case with outputs.

9
00:00:40,170 --> 00:00:40,440
OK.

10
00:00:40,470 --> 00:00:43,690
So what is this famous quadratic equation.

11
00:00:43,690 --> 00:00:47,650
Well it's really just a polynomial set to zero.

12
00:00:47,680 --> 00:00:52,950
So A times X squared plus B times x plus C equals zero.

13
00:00:52,980 --> 00:00:55,500
So that is the quadratic equation.

14
00:00:55,600 --> 00:00:59,320
You can see it's simply a degree to polynomial.

15
00:00:59,380 --> 00:01:03,030
Now one thing that we want to do with this equation is to solve it.

16
00:01:03,040 --> 00:01:04,760
We want to solve it for X..

17
00:01:04,930 --> 00:01:09,430
So how many solutions is this equation going to have.

18
00:01:09,430 --> 00:01:15,970
Well you already know from the previous video that a degree to polynomial because this is X squared

19
00:01:16,270 --> 00:01:18,250
has two solutions.

20
00:01:18,250 --> 00:01:22,630
And how do we find those two solutions using this formula.

21
00:01:22,630 --> 00:01:28,240
And this is that formula that I'm sure you've memorized like 18 times in your life and then completely

22
00:01:28,240 --> 00:01:35,400
forgot about it another 18 times so you can see the two solutions to this equation embedded in here.

23
00:01:35,400 --> 00:01:36,740
So plus or minus.

24
00:01:36,760 --> 00:01:45,640
So one solution is X equals all this business plus this thing and the other solution is minus this square

25
00:01:45,640 --> 00:01:47,530
root term here.

26
00:01:47,530 --> 00:01:47,820
Great.

27
00:01:48,100 --> 00:01:54,340
So I'm going to switch to Python and essentially what we're gonna do is implement this formula here

28
00:01:54,850 --> 00:02:01,510
and then I will show you that actually num pi is limited for solving this problem and therefore I'm

29
00:02:01,510 --> 00:02:06,880
going to introduce you to a function in Sai Pi which is another module and then we're going to create

30
00:02:06,970 --> 00:02:15,720
a function that will essentially return the two solutions given the coefficients a b and c.

31
00:02:15,740 --> 00:02:18,010
Okay so let's start using num pi.

32
00:02:18,010 --> 00:02:25,320
So here I import num pi and now I'm going to set these variables so let's say a equals.

33
00:02:25,330 --> 00:02:27,280
I said variables I meant coefficients.

34
00:02:27,400 --> 00:02:33,150
So equals to b equals 7 and C equals 5.

35
00:02:33,160 --> 00:02:37,930
So now we can write out the equation the solution to the quadratic formula.

36
00:02:37,930 --> 00:02:45,670
The quadratic equation so that's let's call this quad peak and call this P because there's two parts

37
00:02:45,670 --> 00:02:49,590
of this it's the plus with the square root and then the minus with the square root.

38
00:02:50,140 --> 00:02:55,620
So that was there's a numerator and then there's a denominator that denominator is actually really simple.

39
00:02:55,630 --> 00:02:56,480
So let's start with that.

40
00:02:56,500 --> 00:03:03,720
That's 2 A the numerator was minus B plus the square root.

41
00:03:03,730 --> 00:03:08,700
So N.P. dot square root B squared.

42
00:03:08,710 --> 00:03:14,310
So B starts are two minus four times a times c.

43
00:03:14,500 --> 00:03:20,470
By the way I've spoken a few times in the beginning of this course about using spaces in code to help

44
00:03:20,470 --> 00:03:22,200
make your code more readable.

45
00:03:22,240 --> 00:03:28,180
So I think this is pretty readable like this grouping the four in a and the C together of course technically

46
00:03:28,240 --> 00:03:34,420
you could also space it out like this but I think this is slightly less readable for humans even though

47
00:03:34,420 --> 00:03:37,790
pythons will interpret those in the same way.

48
00:03:37,930 --> 00:03:38,160
All right.

49
00:03:38,160 --> 00:03:42,090
Anyway so that was the positive part of the solution.

50
00:03:42,130 --> 00:03:49,330
And then we have the negative part and I'm calling it positive and negative because of the sign here.

51
00:03:49,390 --> 00:03:49,740
Okay.

52
00:03:49,750 --> 00:03:53,230
And now let's try printing out these two solutions.

53
00:03:53,230 --> 00:04:00,160
So print quad eek P and quad ink and all right.

54
00:04:00,160 --> 00:04:08,410
So we get two solutions to this quadratic equation using these coefficients minus 1 and minus 2.5.

55
00:04:08,530 --> 00:04:15,550
So minus 2.5 isn't exactly the easiest number to do mental arithmetic with but minus 1 actually is a

56
00:04:15,550 --> 00:04:16,450
pretty easy number.

57
00:04:16,450 --> 00:04:24,250
So I encourage you to pause the video go back to the original quadratic equation plug in these numbers

58
00:04:24,250 --> 00:04:30,820
for a b and c and then plug in minus one for X and make sure that that solution is actually valid.

59
00:04:30,820 --> 00:04:34,080
Make sure that that equation eventually goes to zero.

60
00:04:34,180 --> 00:04:41,200
So one weird aspect of the quadratic equation or the solution to the quadratic equation is this term

61
00:04:41,200 --> 00:04:48,160
here and in particular it is not possible to take the square root of a negative number.

62
00:04:48,160 --> 00:04:51,990
So square roots are only defined for positive numbers.

63
00:04:52,060 --> 00:05:01,320
So anytime for a C is larger than B squared then you're going to run into trouble with this square root.

64
00:05:01,330 --> 00:05:06,810
Now if you've already learned about complex numbers then you'll know that that's actually not a real

65
00:05:07,050 --> 00:05:07,980
problem.

66
00:05:08,130 --> 00:05:13,100
It's just that these solutions end up being complex value but let's see what happens.

67
00:05:13,110 --> 00:05:21,240
How about if we change a from two to three and now all of this code is exactly the same but now when

68
00:05:21,240 --> 00:05:26,150
we run the code it looks like the answers are n n n n n.

69
00:05:26,280 --> 00:05:27,570
So what is n n.

70
00:05:27,570 --> 00:05:33,360
Well if you like Indian food then you might think that this is non like non bread that's Indian bread.

71
00:05:33,720 --> 00:05:36,300
However that is not what N N stands for.

72
00:05:36,300 --> 00:05:45,240
In this context and I N stands for Not a number so not a number and a N and the issue here is that none

73
00:05:45,240 --> 00:05:51,710
pi or the square root function in num Pi is not by default able to deal with complex valued solutions.

74
00:05:52,140 --> 00:05:57,480
So therefore we are going to start using a different module called Sai pi.

75
00:05:57,540 --> 00:06:07,950
So import CI pi it stands for scientific Python as and then people often will import this as.

76
00:06:08,010 --> 00:06:12,000
So NDP for num pi SB for CI pi.

77
00:06:12,030 --> 00:06:16,130
So now all I'm gonna do is actually let me have to run this again.

78
00:06:16,230 --> 00:06:20,610
Now I'm gonna change the end to an S It's a pretty small change.

79
00:06:20,610 --> 00:06:26,790
So now instead of calling the NUM pi version of the square root function we are calling these CI pi

80
00:06:27,060 --> 00:06:29,440
version of the square root function.

81
00:06:30,060 --> 00:06:34,950
And now we actually get answers and we don't get warning messages anymore.

82
00:06:34,950 --> 00:06:36,920
Those answers may look kind of weird.

83
00:06:36,930 --> 00:06:41,850
So it's minus one and then something plus point five.

84
00:06:41,850 --> 00:06:45,110
J So this is called a complex number.

85
00:06:45,120 --> 00:06:50,010
If you're not familiar with complex numbers you're not comfortable with working with complex numbers

86
00:06:50,340 --> 00:06:57,300
then don't worry I'm gonna have several videos I think maybe even four videos coming up that will introduce

87
00:06:57,300 --> 00:07:04,800
you to complex numbers but for now the important point to realize is that complex numbers have two parts.

88
00:07:04,800 --> 00:07:10,620
There is a real part which is this first part and then plus and then there's something called the imaginary

89
00:07:10,620 --> 00:07:15,340
part and that's associated with J or sometimes people also use the letter I.

90
00:07:15,950 --> 00:07:16,220
Okay.

91
00:07:16,230 --> 00:07:24,570
So the point is now we get to solutions which we know we have to get because this is a degree to polynomial.

92
00:07:24,570 --> 00:07:33,870
What I'd like to do now is create a function that will take these three coefficients as input and provide

93
00:07:34,140 --> 00:07:40,980
one output which will be an array a two element array that contains these two solutions.

94
00:07:41,010 --> 00:07:48,090
Okay so you will recall that to create your own function and you start by writing def for define and

95
00:07:48,090 --> 00:07:49,520
then which we call this function.

96
00:07:49,530 --> 00:07:56,250
How about quad week seems like a good name for a function that computes the solution to the quadratic

97
00:07:56,250 --> 00:07:57,170
equation.

98
00:07:57,390 --> 00:08:04,320
So we are gonna need three inputs A B and C and of course we're always going to need this semicolon

99
00:08:04,320 --> 00:08:04,780
here.

100
00:08:05,240 --> 00:08:05,490
Okay.

101
00:08:05,520 --> 00:08:08,120
So what do we do inside this function.

102
00:08:08,130 --> 00:08:13,150
Well we basically want to implement these two expressions here.

103
00:08:13,500 --> 00:08:21,600
So I'm doing a tab here to get the force bases in here except now I want these to be in a single variables

104
00:08:21,660 --> 00:08:26,520
I'm going to change this to say let's just call this output variable out.

105
00:08:26,520 --> 00:08:29,160
Seems pretty sensible pretty interpretable.

106
00:08:29,160 --> 00:08:31,560
So out zero and out one.

107
00:08:31,560 --> 00:08:38,700
So that means that the first element of the output vector the output array is going to be the solution

108
00:08:38,700 --> 00:08:43,320
with a plus sign and then the second one is going to be the solution with a minus sign.

109
00:08:43,770 --> 00:08:49,890
So now I just need to initialize this variable out let's say out equals.

110
00:08:49,890 --> 00:08:57,240
Now previously I've shown you initializing things using for example num pi zeros and then we can specify

111
00:08:57,240 --> 00:09:00,920
that this is going to be a two element vector.

112
00:09:01,110 --> 00:09:08,980
But here we want to make sure that this is initialized using CI pi so we can get these complex solutions.

113
00:09:09,010 --> 00:09:09,290
Okay.

114
00:09:09,330 --> 00:09:10,830
I think I'll add a comment in here.

115
00:09:10,860 --> 00:09:17,720
So this is initialize and then here we compute.

116
00:09:17,790 --> 00:09:18,030
Okay.

117
00:09:18,060 --> 00:09:21,950
So now I'm gonna run this cell and don't get any errors.

118
00:09:21,990 --> 00:09:28,770
So now what I would like to do is in a new cell try out this equation or this function and see how it

119
00:09:28,770 --> 00:09:29,650
looks.

120
00:09:29,700 --> 00:09:37,800
So let's try a quad peak and then I'll input how about two comma seven comma five because that was what

121
00:09:37,800 --> 00:09:43,530
we used earlier to get the solutions of minus 1 and minus 2.5.

122
00:09:43,530 --> 00:09:44,120
Okay.

123
00:09:44,910 --> 00:09:45,880
Mm hmm.

124
00:09:45,900 --> 00:09:50,170
So it seems like it ran it didn't give any errors but it also didn't give any output.

125
00:09:50,280 --> 00:09:54,090
Maybe I should try encasing this in print.

126
00:09:54,100 --> 00:09:54,690
Mm mm mm mm.

127
00:09:54,690 --> 00:09:55,980
Now this has none.

128
00:09:55,980 --> 00:09:59,400
Unfortunately none is not a good solution.

129
00:09:59,430 --> 00:10:00,810
So what is going on here.

130
00:10:00,810 --> 00:10:04,850
Did we make some coding errors where is something going wrong.

131
00:10:04,850 --> 00:10:06,680
Actually what's going wrong is.

132
00:10:06,800 --> 00:10:08,080
Well nothing.

133
00:10:08,090 --> 00:10:10,520
The function is doing exactly what it's supposed to do.

134
00:10:10,520 --> 00:10:13,130
However it's not going to output anything.

135
00:10:13,130 --> 00:10:20,180
Python doesn't know that we want to output the variable out from this function.

136
00:10:20,180 --> 00:10:24,290
So we have to tell Python explicitly that there should be an output.

137
00:10:24,290 --> 00:10:26,770
So you write return out.

138
00:10:27,020 --> 00:10:31,860
And now when I have to run this again and now when I run this.

139
00:10:31,860 --> 00:10:36,680
So now we get the two solutions because out is going to be the output.

140
00:10:36,790 --> 00:10:39,550
It's but what's returned from this function.

141
00:10:39,560 --> 00:10:44,120
So here we can write or call this solve for solution.

142
00:10:44,420 --> 00:10:48,460
So I can say so equals this function.

143
00:10:48,470 --> 00:10:51,840
So quite easy with these coefficients and then I can write.

144
00:10:51,870 --> 00:11:01,760
So now we see that the result is this array with these two solutions the exercise for this video is

145
00:11:01,760 --> 00:11:03,830
basically to produce this image.

146
00:11:03,830 --> 00:11:06,410
So what is this image showing here.

147
00:11:06,410 --> 00:11:13,940
Well what you want to do is compute the quadratic equation for these parameters so you fix the coefficient

148
00:11:14,000 --> 00:11:20,050
a to b 1 and then coefficients B and C you vary according to these sets.

149
00:11:20,060 --> 00:11:26,990
So B goes from minus five to plus five integers and C goes from minus two to plus 10.

150
00:11:27,050 --> 00:11:29,180
Also in integers.

151
00:11:29,180 --> 00:11:35,420
Now of course the quadratic equation gives you two solutions to solutions for x and what you want to

152
00:11:35,420 --> 00:11:38,120
plot here is really just the first solution.

153
00:11:38,120 --> 00:11:41,090
So this is the one associated with the plus side.

154
00:11:41,110 --> 00:11:42,020
You will go back.

155
00:11:42,020 --> 00:11:46,700
So when you solve for x here you get two solutions.

156
00:11:46,730 --> 00:11:49,620
And just keep the one associated with the plus sign.

157
00:11:49,790 --> 00:11:52,510
And then you make an image of that.

158
00:11:52,520 --> 00:12:02,150
Now notice that the tick marks here on the x axis and on the y axis actually don't just go from zero

159
00:12:02,150 --> 00:12:08,180
up to you know however many numbers there are instead these are showing you the actual values of the

160
00:12:08,210 --> 00:12:09,620
parameters here.

161
00:12:09,620 --> 00:12:14,710
Now I haven't yet showed you how to incorporate that into making an image.

162
00:12:14,720 --> 00:12:20,690
So I haven't yet told you exactly how to solve this part of the exercise if you would like to figure

163
00:12:20,690 --> 00:12:22,180
this out on your own.

164
00:12:22,340 --> 00:12:27,050
Then please pause the video now because I'm about to give you a hint.

165
00:12:27,080 --> 00:12:27,410
All right.

166
00:12:27,410 --> 00:12:33,140
So here is the hint the hint is when you're creating this image.

167
00:12:33,140 --> 00:12:35,800
Use the code BLT that I am.

168
00:12:35,800 --> 00:12:36,710
Show em.

169
00:12:36,710 --> 00:12:43,520
So I'm assuming that you're calling this matrix M and then the second input is extent equals.

170
00:12:43,730 --> 00:12:46,420
And then well you solve to figure this part out.

171
00:12:46,430 --> 00:12:50,420
So use square brackets to create a list and somehow you use this.

172
00:12:50,420 --> 00:12:57,210
And that's going to give you these values on the x axis and on the y axis.

173
00:12:57,260 --> 00:12:57,620
All right.

174
00:12:57,650 --> 00:12:58,400
So good luck.

175
00:12:58,400 --> 00:13:04,290
Pause the video see if you can use these parameters to produce this image.

176
00:13:04,370 --> 00:13:09,290
And now I'm going to switch to Python and walk through the solution.

177
00:13:09,450 --> 00:13:13,070
I'm going to get started by defining these coefficients.

178
00:13:13,080 --> 00:13:21,240
So a we fixed to one B is going to range from minus five up to plus five which means I have to write

179
00:13:21,240 --> 00:13:29,000
six here in range and C goes from minus to up to 10.

180
00:13:29,100 --> 00:13:29,420
Okay.

181
00:13:29,430 --> 00:13:35,760
And then I'm going to initialize the matrix and I'll call this MIT M for Matrix.

182
00:13:35,760 --> 00:13:37,440
Of course you can call this whatever you want.

183
00:13:37,440 --> 00:13:47,580
I'm going to initialize this as zeros and the size of this matrix is going to be the length of B and

184
00:13:47,640 --> 00:13:49,920
the length of C.

185
00:13:49,980 --> 00:13:50,250
All right.

186
00:13:50,310 --> 00:13:51,270
Let's already run this.

187
00:13:51,270 --> 00:13:53,730
Make sure there's no errors anywhere in here.

188
00:13:53,780 --> 00:13:55,110
OK so that's good.

189
00:13:55,140 --> 00:14:01,950
And now I'm going to create a double for loop so one loop over the B parameters and one loop over these

190
00:14:01,950 --> 00:14:03,640
C parameters.

191
00:14:03,840 --> 00:14:11,730
So I'm going to call this looping index variable B I in range.

192
00:14:11,730 --> 00:14:17,940
Now you might initially think of setting this to be range B or sorry in B like this.

193
00:14:18,030 --> 00:14:26,520
However I also want to use this looping index to access individual rows and columns for C of the matrix

194
00:14:26,640 --> 00:14:35,790
M so therefore I'm actually going to write in range 0 to the length of B like this and then we need

195
00:14:35,850 --> 00:14:36,470
another loop.

196
00:14:36,480 --> 00:14:44,110
Let's call this C I in range 0 to length of C.

197
00:14:44,230 --> 00:14:44,520
Okay.

198
00:14:44,550 --> 00:14:55,230
So now inside this double for loop we want to run the quad peak so basically calling this function for

199
00:14:55,230 --> 00:14:56,740
parameter a.

200
00:14:56,820 --> 00:15:02,880
And now you have to be careful again here because the wrong answer is to say B I in fact it has to be

201
00:15:02,880 --> 00:15:05,620
the B S element of B.

202
00:15:05,700 --> 00:15:12,130
So the first element in the first iteration through this loop it has to be minus five.

203
00:15:12,180 --> 00:15:14,790
So therefore the way we set this up is B.

204
00:15:14,790 --> 00:15:21,450
And then in square brackets to access the B I S element of vector B.

205
00:15:21,480 --> 00:15:21,750
Okay.

206
00:15:21,750 --> 00:15:29,850
And then of course it's the same for C S C and now based on how we created this function it's going

207
00:15:29,850 --> 00:15:33,770
to return this vector here containing two elements.

208
00:15:33,800 --> 00:15:36,090
So you might think of writing something like this.

209
00:15:36,090 --> 00:15:37,670
So out equals.

210
00:15:37,890 --> 00:15:47,490
And then here I can say M and then the B I F row and C I S column equals out zero.

211
00:15:47,520 --> 00:15:49,940
So this is totally fine there's nothing wrong with this.

212
00:15:49,950 --> 00:15:55,710
However in Python we can actually make this a little bit more efficient and the way that I'm going to

213
00:15:55,710 --> 00:16:04,260
do that is by moving this here and now you might think that this isn't going to work in fact let's even

214
00:16:04,260 --> 00:16:05,610
try running this.

215
00:16:05,610 --> 00:16:12,540
So we get an error and the error happens because the output of this function is two elements but we

216
00:16:12,540 --> 00:16:16,850
are only accessing a single element in here.

217
00:16:16,890 --> 00:16:20,960
So what you can do here is type with square brackets zero.

218
00:16:20,970 --> 00:16:28,080
So that means we are indexing the first element or the zero with element that is the output of this

219
00:16:28,080 --> 00:16:30,260
quadratic equation function.

220
00:16:30,270 --> 00:16:30,540
All right.

221
00:16:30,540 --> 00:16:32,430
So now run this code.

222
00:16:32,460 --> 00:16:35,170
Now we don't get any errors that error went away.

223
00:16:35,190 --> 00:16:37,370
We do get a warning in this pink box.

224
00:16:37,380 --> 00:16:43,360
Now it's important to appreciate the difference between an error and a warning.

225
00:16:43,360 --> 00:16:46,640
Errors mean there's something wrong with your code and you have to fix it.

226
00:16:46,770 --> 00:16:53,250
A warning is just Python's way of telling you that it might be doing something that's a little bit different

227
00:16:53,250 --> 00:16:56,940
from what you are expecting and that's totally fine.

228
00:16:56,940 --> 00:17:03,960
So what's happening here is that some of these solutions are complex valued and here python is telling

229
00:17:03,960 --> 00:17:08,820
us that it's going to discard the imaginary part and just keep the real part.

230
00:17:08,820 --> 00:17:11,490
And it turns out that that is sufficient.

231
00:17:11,490 --> 00:17:12,840
That's what we want.

232
00:17:12,840 --> 00:17:13,110
All right.

233
00:17:13,140 --> 00:17:19,200
So I will thank Python for giving me this warning but then I will basically just ignore it.

234
00:17:19,940 --> 00:17:20,280
OK.

235
00:17:20,280 --> 00:17:26,660
And now what I want to do is plot this BLT that I am show em.

236
00:17:26,730 --> 00:17:29,250
Now I haven't yet imported BLT.

237
00:17:29,280 --> 00:17:32,280
So this on its own isn't going to work yet.

238
00:17:32,310 --> 00:17:45,570
So I need to go all the way up here to the top and right import met plot lib dot pie plot plot as P

239
00:17:45,580 --> 00:17:48,380
L T run that code again.

240
00:17:48,570 --> 00:17:52,020
And now I'm gonna be able to visualize this matrix.

241
00:17:52,020 --> 00:17:52,290
All right.

242
00:17:52,320 --> 00:17:59,010
So this is looking pretty good if you check this against the image that I showed in the slides you'll

243
00:17:59,010 --> 00:18:01,690
see that the image part is correct.

244
00:18:01,770 --> 00:18:06,150
However the index labels are actually not correct.

245
00:18:06,420 --> 00:18:10,220
So we need to fix those now I give you a little hint there.

246
00:18:10,220 --> 00:18:16,430
And that was to use an optional input called extent extent equals.

247
00:18:16,440 --> 00:18:22,900
And now here basically what we want to do is specify for the x axis the first and last values.

248
00:18:22,940 --> 00:18:27,190
And for the y axis the first and last values.

249
00:18:27,230 --> 00:18:30,830
So what is the first and last value of the x axis.

250
00:18:30,830 --> 00:18:32,800
Well it can be a little tricky.

251
00:18:32,800 --> 00:18:38,420
It's either the first and last values of B or it's the first and last values of C.

252
00:18:38,660 --> 00:18:42,570
And that really depends on how we've oriented the matrix here.

253
00:18:42,620 --> 00:18:47,930
So remember that these matrices get plotted rows first and then columns.

254
00:18:47,930 --> 00:18:52,150
So these are the rows which means the y axis corresponds to B.

255
00:18:52,700 --> 00:19:01,430
And these are the columns which means that the x axis corresponds to C so that means I need to write

256
00:19:03,170 --> 00:19:12,020
the first element of C and then the last element of C and then I'm putting some spaces in here just

257
00:19:12,020 --> 00:19:16,650
to make it a bit more readable than we specified the extent for the y axis.

258
00:19:16,670 --> 00:19:25,370
And that is the first element in B and then the first hour or so the last element in B.

259
00:19:25,430 --> 00:19:29,440
All right so let's try running this and this looks much nicer.

260
00:19:29,450 --> 00:19:35,090
So we c minus two to 10 and minus five to plus five.

261
00:19:35,120 --> 00:19:35,400
Okay.

262
00:19:35,440 --> 00:19:36,940
So that's basically the end.

263
00:19:36,940 --> 00:19:42,150
There's a few more things I'm gonna add just little odds and ends to make this look a little bit nicer.

264
00:19:42,200 --> 00:19:48,950
So the X axis label is C the y axis label is B.

265
00:19:49,130 --> 00:19:51,470
And then I showed a color bar.

266
00:19:51,500 --> 00:19:59,670
So let's say plot that color bar that activates the color bar and I think I was I had a title so I'll

267
00:19:59,670 --> 00:20:00,680
just add that quickly.

268
00:20:00,710 --> 00:20:11,210
So BLT the title and let's say a equals and then plus string a s I need to convert a from a number into

269
00:20:11,210 --> 00:20:16,700
a string in order to be able to use the plus sign here which I'm actually using here is concatenation

270
00:20:16,700 --> 00:20:19,970
not as summation not as addition.

271
00:20:20,090 --> 00:20:20,750
All right.

272
00:20:20,810 --> 00:20:25,900
I think that is the successful completion of this exercise.

273
00:20:28,190 --> 00:20:28,930
Very nice.

274
00:20:28,940 --> 00:20:35,300
So in this video you learned a bit more about the quadratic equation and this video in combination with

275
00:20:35,300 --> 00:20:36,340
the previous videos.

276
00:20:36,380 --> 00:20:41,890
I hope convinced you that the quadratic equation is not anything super duper weird.

277
00:20:41,900 --> 00:20:49,790
It's actually just a regular degree to polynomial and you also got more experience defining your own

278
00:20:49,790 --> 00:20:58,130
functions in python in particular with giving outputs and also adding more to images created from matrices.
