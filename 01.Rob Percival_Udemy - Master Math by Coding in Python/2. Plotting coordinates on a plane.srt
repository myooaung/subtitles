1
00:00:03,700 --> 00:00:07,710
The importance of visualization cannot be understated.

2
00:00:07,750 --> 00:00:13,730
In mathematics neither in applied mathematics nor in pure mathematics.

3
00:00:13,810 --> 00:00:18,670
It's really important to visualize mathematical formulas and data results.

4
00:00:18,670 --> 00:00:23,670
That's really the best way to gain intuition about how math works.

5
00:00:23,710 --> 00:00:30,730
And so this section of the Course is all about introducing you to plotting and graphics and visualization

6
00:00:30,760 --> 00:00:32,110
in python.

7
00:00:32,140 --> 00:00:38,620
Now data visualization and mathematical visualization in Python is also a huge topic so you are not

8
00:00:38,620 --> 00:00:42,880
going to learn everything about graphing in python just from this section.

9
00:00:42,920 --> 00:00:43,810
The course.

10
00:00:43,810 --> 00:00:49,300
However what you will get from this section of the course is a really firm grounding on which to build

11
00:00:49,390 --> 00:00:53,050
your skills in graphing and visualization.

12
00:00:53,050 --> 00:00:53,330
All right.

13
00:00:53,350 --> 00:00:55,140
So let's get started.

14
00:00:55,150 --> 00:01:00,280
The main goal of this video is to plot coordinates or points at single coordinates.

15
00:01:00,280 --> 00:01:04,780
So here we have some coordinate x come a Y equals 3 come a 5.

16
00:01:05,110 --> 00:01:12,640
So that means that we go three units over on the x axis five units up on the x axis and then we are

17
00:01:12,640 --> 00:01:16,900
going to plot a dot just a little point that looks like this.

18
00:01:16,900 --> 00:01:25,160
So to do the visualization we are going to use a Python module called maths plot lib.

19
00:01:25,420 --> 00:01:28,030
So we write import maths.

20
00:01:28,030 --> 00:01:29,740
Plot lib dot.

21
00:01:29,740 --> 00:01:31,780
In particular we are going to be using pi.

22
00:01:31,780 --> 00:01:33,900
Plot for Python plotting.

23
00:01:34,180 --> 00:01:36,430
And then this is quite a mouthful.

24
00:01:36,430 --> 00:01:43,660
This is a lot to write down each time we want to make a visualization so we are gonna say as P L T.

25
00:01:44,050 --> 00:01:44,420
All right.

26
00:01:44,440 --> 00:01:46,140
So now to generate a plot.

27
00:01:46,150 --> 00:01:46,530
Let's see.

28
00:01:46,540 --> 00:01:53,540
We want to plot a point at X equals 3 and y equals 5.

29
00:01:53,590 --> 00:02:01,420
So the basic way to plot is you type P.L. T dot plot so P L deeds indicate that we are calling this

30
00:02:01,420 --> 00:02:03,070
module the map plot.

31
00:02:03,070 --> 00:02:06,370
Live that pie plot module and then plot.

32
00:02:06,370 --> 00:02:10,810
Now there is a number of possible inputs that the plot function can take.

33
00:02:10,810 --> 00:02:14,050
In this case I'm going to say X comma Y.

34
00:02:14,140 --> 00:02:19,170
So how far along the x dimension how far along the y dimension.

35
00:02:19,270 --> 00:02:25,960
And then optionally you can plot these coordinates using a specified visualisation parameters.

36
00:02:25,960 --> 00:02:34,560
So in single quotes I'm going to type r to indicate red and 0 to indicate a circle.

37
00:02:34,600 --> 00:02:37,980
So after you run this plot actually you can already run the code like this.

38
00:02:37,990 --> 00:02:45,160
It's going to give two outputs the plot itself and also the output of this P L T dot plot function.

39
00:02:45,460 --> 00:02:51,040
So typically what you would do is generate the plot and maybe there's going to be multiple things plotted

40
00:02:51,040 --> 00:02:52,220
on top of each other.

41
00:02:52,300 --> 00:02:58,090
Maybe you're going to specify some parameters of the plot and then at the bottom when you're done specifying

42
00:02:58,090 --> 00:02:59,320
everything you write.

43
00:02:59,590 --> 00:03:07,510
P L T show which is a function and that will display the the final version of the figure.

44
00:03:07,530 --> 00:03:13,530
Okay so we got a red dot at X equals 3 and y equals 5.

45
00:03:13,540 --> 00:03:18,710
Now this is not really like what you would probably have expected to see.

46
00:03:18,940 --> 00:03:20,920
You might want this to look a little bit nicer.

47
00:03:20,920 --> 00:03:25,420
So now I'm going to show you a few additions to this plot to make it look a bit better.

48
00:03:25,450 --> 00:03:31,150
So first of all I'm going to make this be square you can see this is rectangular so I'm going to type

49
00:03:31,150 --> 00:03:36,040
P ulti dot axis and then in single quotes square.

50
00:03:36,040 --> 00:03:37,800
So now let's run this again.

51
00:03:37,960 --> 00:03:38,230
Okay.

52
00:03:38,260 --> 00:03:44,890
Now we get a square plot and now another thing that I don't like is that the limits go from here it

53
00:03:44,890 --> 00:03:48,020
looks like two point eight to three point four.

54
00:03:48,150 --> 00:03:50,970
I would like this to be centered at the origin.

55
00:03:50,980 --> 00:04:01,390
So the graph has zero zero at its origin so to change the axis limits I'm going to type BLT dot axis.

56
00:04:01,410 --> 00:04:03,790
Don't notice this is actually the same function as here.

57
00:04:03,790 --> 00:04:10,570
Here I input it square and what I'm gonna do here is input a list of numbers and in particular we need

58
00:04:10,630 --> 00:04:11,730
for numbers.

59
00:04:11,740 --> 00:04:17,510
So it's going to be minus six plus six that corresponds to the x axis limit.

60
00:04:17,590 --> 00:04:26,260
So the X axis limit will go from minus six to plus six and then two more numbers for the y axis limits.

61
00:04:26,260 --> 00:04:33,000
Okay so now you can see X goes from minus X plus X Y goes from minus X to plus six.

62
00:04:33,010 --> 00:04:34,620
This is starting to look better.

63
00:04:34,630 --> 00:04:41,570
The last thing that I want to put into this axis here into this figure is a grid.

64
00:04:41,590 --> 00:04:44,980
So I will type plot dot grid all right.

65
00:04:45,010 --> 00:04:46,680
And now we get a nice grid.

66
00:04:46,840 --> 00:04:48,220
And this is looking a bit better.

67
00:04:48,220 --> 00:04:53,390
This looks like the kind of thing that you would expect to see in for example a textbook.

68
00:04:53,560 --> 00:04:58,210
But already you can see the general flow of how it works to set up a plot.

69
00:04:58,210 --> 00:05:06,020
So first you use peel to eat up plot to plot all of the coordinates or lines or whatever you're plotting

70
00:05:06,410 --> 00:05:10,380
and then you have however many lines you need to make the plot look a little bit nicer.

71
00:05:10,520 --> 00:05:13,570
And then you end with plot dots show.

72
00:05:13,590 --> 00:05:15,710
Okay so here we made a red circle.

73
00:05:15,710 --> 00:05:17,440
There are other options as well.

74
00:05:17,450 --> 00:05:23,680
You can make for example a green square so that gives us a green square.

75
00:05:23,690 --> 00:05:31,970
How about a black Pentagon so you can see there are many different ways to represent these plots.

76
00:05:31,970 --> 00:05:39,080
Now if you put the cursor inside the plot function so inside these parentheses here and then press shift

77
00:05:39,110 --> 00:05:43,160
tab on the keyboard then you can see there's more options.

78
00:05:43,160 --> 00:05:46,220
This will tell you lots and lots and lots of options.

79
00:05:46,340 --> 00:05:47,050
Now you don't have to.

80
00:05:47,060 --> 00:05:50,590
So for example here are the various colors that you can use.

81
00:05:50,600 --> 00:05:56,870
Here are the characters so I showed you a circle and I showed you a Pentagon.

82
00:05:57,020 --> 00:05:57,920
Where is the Pentagon.

83
00:05:57,920 --> 00:05:59,170
And I showed you a square.

84
00:05:59,180 --> 00:06:00,290
So those are in some.

85
00:06:00,320 --> 00:06:00,580
Oh yeah.

86
00:06:00,590 --> 00:06:01,560
Here you go.

87
00:06:01,640 --> 00:06:08,090
Now I don't recommend memorizing this list or trying to memorize this list as you go further along in

88
00:06:08,090 --> 00:06:09,770
coding in Python.

89
00:06:09,770 --> 00:06:15,080
You will naturally learn a lot more of these individual elements.

90
00:06:15,080 --> 00:06:20,030
Another thing I want to show you is that sometimes the order in which you call these different settings

91
00:06:20,330 --> 00:06:20,990
matters.

92
00:06:20,990 --> 00:06:30,140
So for example if I move the access square to beneath the Axis setting setting these axis limits then

93
00:06:30,320 --> 00:06:34,820
the plot will look a little bit different and it looks initially like the plot moved or the coordinate

94
00:06:34,820 --> 00:06:37,090
moved actually the coordinate didn't move.

95
00:06:37,100 --> 00:06:42,920
It's that the instructions that we gave here were then overridden by this setting here.

96
00:06:42,920 --> 00:06:47,120
So that's just something to keep in mind that order is important here.

97
00:06:47,170 --> 00:06:51,290
OK so this is for one point one plotting one coordinate.

98
00:06:51,350 --> 00:06:57,680
I'm now going to show you how to plot multiple coordinates in a in list using a loop.

99
00:06:57,680 --> 00:07:00,840
So let's say we have various numbers for x.

100
00:07:00,980 --> 00:07:02,180
How about like I don't know.

101
00:07:02,180 --> 00:07:11,700
Minus 4 5 2 I'm just making up some numbers here and then we need y axis coordinates maybe 0 and due

102
00:07:11,740 --> 00:07:12,620
to do.

103
00:07:12,620 --> 00:07:17,190
I'm just making up these numbers all right.

104
00:07:17,270 --> 00:07:22,400
And now what I'm going to do is essentially something like this except I'm going to put it inside of

105
00:07:22,430 --> 00:07:23,440
a for loop.

106
00:07:24,020 --> 00:07:37,040
So for i in range 0 to length of X so however many elements are in the x variable the X list we are

107
00:07:37,040 --> 00:07:49,170
going to plot the ISF element in X by the ISF element in y and I'll just make these a circle for now.

108
00:07:49,460 --> 00:07:49,740
Okay.

109
00:07:49,760 --> 00:07:56,150
And so now I'm gonna type BLT show and let's see what this looks like.

110
00:07:56,690 --> 00:07:57,980
Okay so this looks pretty neat.

111
00:07:57,980 --> 00:08:03,140
First of all we see that all of these different points are appearing so that's already pretty cool.

112
00:08:03,200 --> 00:08:09,090
And then you see that they each have a different color so each point has a different color.

113
00:08:09,440 --> 00:08:11,900
And that's not something that I specified.

114
00:08:11,900 --> 00:08:14,630
That's something that python will do automatically.

115
00:08:15,190 --> 00:08:15,510
All right.

116
00:08:15,520 --> 00:08:26,750
So now before I show the plot I want to make a few additions so plot that axis square and I'll add a

117
00:08:26,810 --> 00:08:27,260
grid.

118
00:08:27,280 --> 00:08:27,550
Whoops.

119
00:08:27,560 --> 00:08:30,980
Plot grid.

120
00:08:30,990 --> 00:08:35,990
Now what I'd like to do is label all of these different points and then we can have a legend appearing

121
00:08:36,050 --> 00:08:37,370
in the plot here.

122
00:08:37,370 --> 00:08:43,850
So to label the different points you can add another input into the plot function and it would be label

123
00:08:44,270 --> 00:08:46,460
and then whatever you want the label to be.

124
00:08:46,460 --> 00:08:49,360
So for example let's just make it Cordy.

125
00:08:49,520 --> 00:08:52,550
Now this is not a very informative label.

126
00:08:52,550 --> 00:08:56,990
And that's because every single point will have the label of Cordy.

127
00:08:56,990 --> 00:08:59,480
So let's see what happens when I run this.

128
00:08:59,850 --> 00:09:01,450
So actually nothing happened.

129
00:09:01,460 --> 00:09:04,720
We don't see any label we don't see any legend here.

130
00:09:04,940 --> 00:09:12,000
And what's going on here the problem here is that I need to first activate the legend functions as a

131
00:09:12,040 --> 00:09:18,870
p ulti legend and that is sufficient for turning on the legend.

132
00:09:18,920 --> 00:09:19,600
So there you go.

133
00:09:19,670 --> 00:09:21,410
Every point is labeled Cordy.

134
00:09:21,410 --> 00:09:22,770
Looks kind of funny.

135
00:09:22,770 --> 00:09:25,580
So let's consider changing this now.

136
00:09:25,610 --> 00:09:31,940
This is not just some special text here you can make any string appear in here including the kinds of

137
00:09:31,940 --> 00:09:36,860
strings that we've been making previously in the course for printing out information.

138
00:09:36,890 --> 00:09:47,330
So for example I can say point percent s and then here I say percent I so now this is going to be replaced

139
00:09:47,330 --> 00:09:51,500
with I as a string and I of course is the number.

140
00:09:51,500 --> 00:09:54,620
And then that's going to be different for each element.

141
00:09:54,620 --> 00:09:56,180
Each plot each coordinate.

142
00:09:57,550 --> 00:09:57,960
OK.

143
00:09:57,980 --> 00:10:02,280
So now we get point 0 up through point 6.

144
00:10:02,420 --> 00:10:05,380
And if you want to start at 1.

145
00:10:05,510 --> 00:10:11,780
No problem whatsoever you could say 1 plus I like this.

146
00:10:11,900 --> 00:10:12,170
All right.

147
00:10:12,200 --> 00:10:18,380
So there's one more key concept that I would like to illustrate to you in this video and that is how

148
00:10:18,380 --> 00:10:26,360
to extract information from the axes so we know that the axis the x axis goes from minus four point

149
00:10:26,480 --> 00:10:32,750
one let's say to a little bit over six because I can just look at this and I can see it but somehow

150
00:10:32,750 --> 00:10:38,790
we should be able to extract those numbers that exact axis limit from Python.

151
00:10:38,900 --> 00:10:40,700
And that's what I want to show you how to do now.

152
00:10:41,060 --> 00:10:43,350
So let's see plot.

153
00:10:43,730 --> 00:10:44,780
Let's make a point.

154
00:10:44,810 --> 00:10:46,860
How about for karma too.

155
00:10:47,030 --> 00:10:50,610
And I will make it a red plus sign.

156
00:10:50,720 --> 00:10:50,950
Okay.

157
00:10:50,990 --> 00:10:54,220
So let's start by just seeing what this looks like.

158
00:10:54,260 --> 00:10:54,550
All right.

159
00:10:54,590 --> 00:10:56,430
We got a little red plus sign.

160
00:10:56,500 --> 00:11:02,090
And now what I'm going to do is access this plot object and I'm going to do that by assigning it to

161
00:11:02,090 --> 00:11:06,690
some variable and for convenience I'm going to call that variable axis.

162
00:11:06,680 --> 00:11:09,400
So now I say plot dot G C A.

163
00:11:09,410 --> 00:11:13,550
That stands for get current axis.

164
00:11:13,550 --> 00:11:18,110
So this is going to output an object that points to this axis here.

165
00:11:18,110 --> 00:11:22,160
This entire thing and from there I can access information.

166
00:11:22,160 --> 00:11:31,910
So for example I can say why Lim equals axis that get why Lim not I'm going to print out this variable

167
00:11:32,000 --> 00:11:39,980
here so you can see that the y axis limit goes from one point 89 down here up to a little bit over two

168
00:11:39,980 --> 00:11:42,050
point one so two point 1 1.

169
00:11:42,050 --> 00:11:44,900
Lots of zeros and then a three.

170
00:11:44,900 --> 00:11:47,510
So once I have this information I can then use it.

171
00:11:47,510 --> 00:11:50,480
So why Lim here is a tuple.

172
00:11:50,780 --> 00:11:53,780
And so I can access each individual element so I can type.

173
00:11:53,780 --> 00:11:57,460
For example axis dot set y Lim.

174
00:11:57,530 --> 00:11:58,820
Notice here it was.

175
00:11:58,880 --> 00:12:00,140
Get why Lim.

176
00:12:00,140 --> 00:12:01,320
And here it's set.

177
00:12:01,330 --> 00:12:04,340
Why Lim so this got the information.

178
00:12:04,340 --> 00:12:11,540
And now I'm changing the information I'm setting the new Y axis limits and then in a list let's say

179
00:12:12,170 --> 00:12:13,490
how about y Lim.

180
00:12:13,490 --> 00:12:18,140
So we'll set let's say I'm happy with the lower bound but I'm not happy with the higher bound maybe

181
00:12:18,140 --> 00:12:22,040
I want it to be five points some number like this.

182
00:12:22,040 --> 00:12:26,880
Okay so now you can see that the Y axis changed.

183
00:12:26,900 --> 00:12:32,780
So the initial or the lower bound the axis is still what it was before is a little bit below 2.

184
00:12:32,960 --> 00:12:40,520
And here it's at a bit over 5 and actually to be very specific to be very precise it's this number here

185
00:12:42,590 --> 00:12:47,150
so in this video I gave you a quick introduction to graphing in Python.

186
00:12:47,150 --> 00:12:53,330
In particular I showed you how to graph single coordinates and multiple coordinates that appear in a

187
00:12:53,390 --> 00:12:55,190
list in the next video.

188
00:12:55,310 --> 00:13:01,970
You will have the opportunity to apply the skills the knowledge that you learned in this video to generating

189
00:13:02,000 --> 00:13:06,480
a function and visualizing that function using colorful dots.

190
00:13:06,500 --> 00:13:09,340
So I look forward to seeing you in the next video.
