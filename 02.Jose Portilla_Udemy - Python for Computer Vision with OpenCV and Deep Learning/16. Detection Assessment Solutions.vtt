WEBVTT
1
00:00:05.250 --> 00:00:10.380
Welcome back everyone and this lecture we're going to go over the solutions for the detection assessment

2
00:00:10.500 --> 00:00:11.370
notebook.

3
00:00:11.370 --> 00:00:12.280
Let's get started.

4
00:00:12.530 --> 00:00:12.810
OK.

5
00:00:12.810 --> 00:00:16.950
Here I am at the notebook for the object detection Assessment Project.

6
00:00:16.950 --> 00:00:22.730
Again all we're doing here is detecting Russian license plates in images and then blurring them first.

7
00:00:22.790 --> 00:00:30.810
We're going to do is import the usual libraries as you may expect that to numb PI SNP and then import

8
00:00:31.210 --> 00:00:34.720
that plus live that pipe plot as Piazzi.

9
00:00:34.980 --> 00:00:41.830
And then we will say map plot live in line then the next thing is to read in the car plate JPEG file.

10
00:00:41.990 --> 00:00:43.010
It's from the data folder.

11
00:00:43.020 --> 00:00:50.130
So all you need to do is say CB2 read and then grab the car plate JPAC file.

12
00:00:50.130 --> 00:00:54.240
Next we want you to create a function that displays the image in a larger scale and thus color correcting

13
00:00:54.250 --> 00:00:55.270
format lib.

14
00:00:55.400 --> 00:00:58.990
If you color corrected outside of the function that's totally OK too.

15
00:00:59.010 --> 00:01:05.910
So the way we do this is we say G.F. we call this function display it takes in an image and then we'll

16
00:01:05.910 --> 00:01:12.880
say figure is equal to peel t that figure size is equal to 10 by eight.

17
00:01:13.120 --> 00:01:14.990
And don't worry about memorizing this code.

18
00:01:15.220 --> 00:01:20.960
I often just copy and paste it myself so you can just copy and paste this from the previous lectures.

19
00:01:20.980 --> 00:01:23.250
I myself don't have this sort of thing memorized.

20
00:01:24.800 --> 00:01:30.460
So then we say add subplot one on one and then I'm going to color correct the image here.

21
00:01:30.520 --> 00:01:41.690
So to see color take in the image and then say See we to color underscore BGR to our BE

22
00:01:44.570 --> 00:01:45.620
lips.

23
00:01:46.110 --> 00:01:53.120
And then finally we'll say x him show that and you image Sozzi that displays correctly.

24
00:01:53.310 --> 00:01:57.480
And there we have it so now we have a larger display of the actual image.

25
00:01:57.990 --> 00:01:58.250
OK.

26
00:01:58.260 --> 00:02:02.360
The next step is to load the cascade Russian plate number SML file.

27
00:02:02.430 --> 00:02:13.020
So I will create an object called Plate cascade and set that equal to CB2 and then call cascade classifier.

28
00:02:13.230 --> 00:02:20.460
And inside the data folder inside the jar Cascades folder there should be a file called Haar cascade.

29
00:02:20.490 --> 00:02:23.290
Russian plates keeps rolling down.

30
00:02:23.490 --> 00:02:27.800
Eventually I can see the Russian plate number ex-MIL the one mentioned right here in their actions.

31
00:02:27.960 --> 00:02:30.450
So we'll go ahead and run that next.

32
00:02:30.540 --> 00:02:34.260
We want to create a function that takes in the image and draws a rectangle around what it takes to be

33
00:02:34.260 --> 00:02:35.640
a license plate.

34
00:02:35.640 --> 00:02:38.810
This is actually going to be almost the same code we did for the face to text.

35
00:02:38.880 --> 00:02:46.020
So I was going to a copy of that image that way I can draw on it affecting the original image and then

36
00:02:46.020 --> 00:02:52.830
say plate rectangles is equal to plate cascade.

37
00:02:53.060 --> 00:03:00.120
And then I will detect multi scale on the image and you may want to play around the scale factor.

38
00:03:00.170 --> 00:03:08.780
When I was playing around I noticed that a scale factor of 1.3 and minimum neighbor value three ended

39
00:03:08.780 --> 00:03:10.450
up working well for me.

40
00:03:10.580 --> 00:03:18.740
So hopefully you are able to also play around with that and then we'll go ahead and say 4 x y w h in

41
00:03:18.790 --> 00:03:20.010
the rectangles.

42
00:03:20.010 --> 00:03:22.750
So essentially it's a list of coordinates for rectangles.

43
00:03:23.330 --> 00:03:29.350
We're going to say CB2 rectangle plate's image set the top left.

44
00:03:29.700 --> 00:03:36.050
Then set the bottom right so same process we did in the previous lecture.

45
00:03:36.120 --> 00:03:40.910
Go ahead and choose a color choose a primary color here and then give it a thickness of four.

46
00:03:41.850 --> 00:03:44.750
And then I will return the plate image.

47
00:03:45.140 --> 00:03:46.080
OK.

48
00:03:46.260 --> 00:03:47.040
Run that.

49
00:03:47.040 --> 00:03:48.830
And then let's check the results.

50
00:03:48.960 --> 00:03:49.440
Whoops.

51
00:03:49.560 --> 00:03:50.050
Minimum.

52
00:03:50.060 --> 00:03:53.590
Ne Burs.

53
00:03:53.600 --> 00:03:54.290
There we go.

54
00:03:54.470 --> 00:03:59.690
And when I display the results I was able to successfully detect the actual license plate.

55
00:03:59.690 --> 00:04:01.680
So now they know where the license plate is.

56
00:04:01.850 --> 00:04:03.700
I can then blur it out.

57
00:04:03.950 --> 00:04:09.860
So the way to do this is I'm actually going to cut out this region and set that as a region of interest

58
00:04:10.130 --> 00:04:13.820
then it will blur that region and then stick it back into the original image.

59
00:04:13.850 --> 00:04:18.940
So we're going to replace whatever's in this rectangle with the blurred version of itself.

60
00:04:19.010 --> 00:04:24.110
You can check out the directions here but essentially I'm going to show you the steps.

61
00:04:24.320 --> 00:04:31.140
So we're going to do is say plate image is equal to image copy.

62
00:04:31.460 --> 00:04:33.950
And I'm going to make another copy from my region of interest

63
00:04:36.710 --> 00:04:38.110
and then same as before.

64
00:04:38.180 --> 00:04:40.850
We're going to call the exact same detect multi-skilled.

65
00:04:40.850 --> 00:04:42.990
In fact I'm just going to copy and paste it from here.

66
00:04:44.980 --> 00:04:59.850
So copy that and then paste it here and then I will say for x y w h in pl. rectangles I'm going to set

67
00:04:59.850 --> 00:05:00.540
my R.

68
00:05:00.660 --> 00:05:05.950
I'm a region of interest just to that region inside of the image.

69
00:05:05.970 --> 00:05:09.980
So right now my rectangles defined by x y and w h.

70
00:05:10.020 --> 00:05:16.430
So I want to just grab that using some pie slicing which means I will say r y is equal to r y.

71
00:05:16.440 --> 00:05:20.460
Remember right now there are ways in the image are y starting up.

72
00:05:20.480 --> 00:05:23.750
Why all the way to Y plus H.

73
00:05:23.970 --> 00:05:25.820
So we're going down the rows first.

74
00:05:25.830 --> 00:05:34.080
So if I actually take a look over here and saying come down to Y down to Y plus H and then slice from

75
00:05:34.170 --> 00:05:45.880
X all the way to X-post w So will say all the way to X loops will say Khama X all the way to X plus

76
00:05:45.880 --> 00:05:47.110
W..

77
00:05:47.260 --> 00:05:48.490
So not a hammer or a Y.

78
00:05:48.490 --> 00:05:49.690
I'm going to blur it.

79
00:05:50.200 --> 00:05:57.070
I will say my blurred r y is equal to CB2 and I'm just going to use a medium Blur's that wants the easiest

80
00:05:57.070 --> 00:05:57.850
to work with.

81
00:05:57.850 --> 00:06:02.950
You can even just use CB2 blur and Elisha's pass and a kernel says 7 to make sure it's really blurred

82
00:06:03.820 --> 00:06:11.800
and then I'm going to replace this exact same section of my original image so we'll grab that section

83
00:06:11.800 --> 00:06:20.500
of the slice and say my image at that section is now equal to the blurred archway.

84
00:06:20.840 --> 00:06:21.180
OK.

85
00:06:21.220 --> 00:06:24.280
So pretty simple it's actually just three lines of code.

86
00:06:24.280 --> 00:06:29.560
The really tricky part was figuring out the slicing that mentions here because it's essentially opposite

87
00:06:29.560 --> 00:06:34.110
from the way you draw the rectangle usually with this CB2 rectangle.

88
00:06:34.150 --> 00:06:38.750
So what you end up doing is you do the wife versus that stands for rows and then you do the x.

89
00:06:38.770 --> 00:06:41.640
Second since that stands for columns.

90
00:06:42.090 --> 00:06:42.560
OK.

91
00:06:42.820 --> 00:06:47.530
So hopefully you were able to figure that out given the hints and that we're going to return plate's

92
00:06:47.590 --> 00:06:48.920
underscore image.

93
00:06:49.210 --> 00:06:50.080
So let's run this.

94
00:06:50.080 --> 00:06:52.440
Make sure everything works.

95
00:06:52.690 --> 00:06:57.050
And if you able to successfully blur out the image of the license plate then you're good to go.

96
00:06:57.400 --> 00:06:57.850
OK.

97
00:06:58.000 --> 00:07:00.600
If you have any questions feel free to post the Q&amp;A forums.

98
00:07:00.610 --> 00:07:02.320
I hope you found this project fun.

99
00:07:02.470 --> 00:07:06.400
And it's one of the first times where we can really see how we can apply everything we've been learning

100
00:07:06.400 --> 00:07:08.530
to a real life situation.

101
00:07:08.560 --> 00:07:10.460
Thanks and I'll see you at the next section.
