WEBVTT
1
00:00:05.650 --> 00:00:11.410
Welcome to this lecture an optical flow we're going to begin discussing object tracking by first learning

2
00:00:11.410 --> 00:00:18.220
about optical flow optical flow is the pattern of apparent motion of image objects between two consecutive

3
00:00:18.220 --> 00:00:23.950
frames caused by the movement of either the object or the camera.

4
00:00:23.950 --> 00:00:29.510
Now keep in mind the optical flow analysis that we're going to be using here has a few assumptions.

5
00:00:29.530 --> 00:00:34.650
One is that the pixel intensities of an object do not change between consecutive frames.

6
00:00:34.690 --> 00:00:40.060
So that means basically you're not trying to track a light bulb that's turning off and on as it moves

7
00:00:40.060 --> 00:00:42.280
between frames of video.

8
00:00:42.280 --> 00:00:45.330
And also that neighboring pixels have similar motion.

9
00:00:45.460 --> 00:00:50.380
So that means the actual pixels around the point you're trying to track such as the center of light

10
00:00:50.380 --> 00:00:52.260
bulb are also moving along.

11
00:00:52.300 --> 00:00:58.120
So if you're trying to track just the corner points of a light bulb then all the other pixels that also

12
00:00:58.120 --> 00:01:00.270
consist of light bulb are moving along with it.

13
00:01:00.280 --> 00:01:02.660
So it's not just some random single point moving.

14
00:01:02.680 --> 00:01:06.930
We need the neighboring pixels to move as well OK.

15
00:01:07.060 --> 00:01:12.280
The optical flow method is an open C-v will first take in a given set of points and the frame then it

16
00:01:12.280 --> 00:01:14.630
will attempt to find those points in the next frame.

17
00:01:14.830 --> 00:01:17.630
And it's actually up to the user to supply the points to track.

18
00:01:17.710 --> 00:01:23.410
So we're going to start off by supplying points of a face using the face detection methods that we already

19
00:01:23.410 --> 00:01:28.060
learned about and then asking open Suvi to then track it throughout the video.

20
00:01:28.060 --> 00:01:32.470
So again we're going to first utilize what we know about object detection to the face and then we use

21
00:01:32.470 --> 00:01:35.330
optical flow to actually show the flow of the face.

22
00:01:36.930 --> 00:01:39.240
So let's talk about optical flow and a little more detail.

23
00:01:39.360 --> 00:01:40.880
Consider the following image.

24
00:01:41.700 --> 00:01:49.500
Hear what we're trying to explain is a five frame clip of a ball moving up and towards the right note

25
00:01:49.530 --> 00:01:54.810
that given just this clip we actually can't determine if it's the ball it's moving up to the right or

26
00:01:54.870 --> 00:01:57.290
if the camera was moving down and to the left.

27
00:01:57.450 --> 00:02:01.290
And for these primitive techniques that we're learning about so far we're actually not going to be able

28
00:02:01.290 --> 00:02:05.430
to detect the difference between that and it kind of makes sense given that you don't actually know

29
00:02:05.670 --> 00:02:08.280
if the camera was held in place or if it was moving.

30
00:02:08.370 --> 00:02:11.960
Then there's really no way to convey that information just from the video itself.

31
00:02:11.970 --> 00:02:17.250
Given the optical flow techniques that we're doing right now so keep that in mind it could just be either

32
00:02:17.310 --> 00:02:20.590
the camera itself is moving or the objects are moving.

33
00:02:20.700 --> 00:02:25.710
For all the examples we're going to show here the cameras just as you previously mentioned the general

34
00:02:25.710 --> 00:02:30.870
way we actually tracked the object is we passen previous frame previous points.

35
00:02:30.930 --> 00:02:36.870
And in the current frame and the function or a formula that open C-v uses and it's built in optical

36
00:02:36.870 --> 00:02:40.100
flow function is the Luca's Kanade method.

37
00:02:40.200 --> 00:02:44.240
So you can go ahead and check out the resource links for the math by this method but luckily it's an

38
00:02:44.250 --> 00:02:47.290
easy to call function within open C.v.

39
00:02:47.310 --> 00:02:52.920
So what we do here is let's imagine we're actually trying to track the object from frame 4 to frame

40
00:02:52.920 --> 00:02:56.960
5 because frame 5 is the most recent frame in our video.

41
00:02:57.000 --> 00:03:02.370
What we do is at some point we would have had to have told Open see what the point we wanted to track

42
00:03:02.370 --> 00:03:07.380
is and it's up to you if you want to determine that simply by manually selecting a point by clicking

43
00:03:07.380 --> 00:03:11.430
on the image of the first frame and then letting open see the truck from there on.

44
00:03:11.460 --> 00:03:16.200
Or if you want to use a more advanced technique such as object detection so you may want to detect the

45
00:03:16.200 --> 00:03:20.330
face in the very first frame and then have that be tracked throughout the rest of the video.

46
00:03:20.550 --> 00:03:23.570
Here were just mainly saying there is the point that I want to track.

47
00:03:23.580 --> 00:03:31.920
So we went ahead and put a Greenpoint on top of that for frame than we take in the entire previous frame.

48
00:03:32.440 --> 00:03:38.350
And then we look at our current frame and what this function attempts to do is locate the points from

49
00:03:38.350 --> 00:03:41.950
frame for that we wanted to track and find them in frame 5.

50
00:03:41.950 --> 00:03:44.800
Notice that again we're having a couple of assumptions here.

51
00:03:45.010 --> 00:03:50.680
And that is that the points next to are the pixels next the point that we're trying to track are also

52
00:03:50.680 --> 00:03:51.460
moving.

53
00:03:51.460 --> 00:03:55.570
So even though we're just tracking that center of the ball the rest of the ball's pixels are also moving

54
00:03:55.570 --> 00:03:59.200
from frame 4 to frame 5.

55
00:03:59.450 --> 00:04:04.510
Now look at Kanade computes optical flow for a sparse feature set.

56
00:04:04.590 --> 00:04:09.850
And what I mean by that term sparse is we're only really tracking the points we were telling it to track.

57
00:04:09.960 --> 00:04:12.330
So it's typically not all the points in the video.

58
00:04:12.360 --> 00:04:17.190
It's just a few key points so we want to track but sometimes we actually want to track all the points

59
00:04:17.190 --> 00:04:21.780
in the video and the Luca's Kanade method is not going to do that for us.

60
00:04:21.780 --> 00:04:27.870
Instead we're going to use the gunner foreign banks algorithm which is also built into open TV to calculate

61
00:04:27.900 --> 00:04:34.440
what's known as dense optical flow and this dense optical flow will calculate flow for all the points

62
00:04:34.440 --> 00:04:37.270
in an image and the effect is actually really cool.

63
00:04:37.290 --> 00:04:41.790
And we'll be using that built in open C-v to show you what that looks like and basically what happens

64
00:04:41.790 --> 00:04:44.120
is it colors the entire video black.

65
00:04:44.130 --> 00:04:45.270
If nothing is moving.

66
00:04:45.420 --> 00:04:50.160
And then as an object moves you will see it being highlighted and it's going to be highlighted a different

67
00:04:50.160 --> 00:04:50.520
color.

68
00:04:50.520 --> 00:04:56.640
The painting with angle it's moving up in reference to the previous point it was that before.

69
00:04:56.760 --> 00:04:59.850
So that's easier to kind of show when we actually program.

70
00:04:59.850 --> 00:05:00.890
So keep that in mind.

71
00:05:01.020 --> 00:05:06.750
We'll be showing both the Spurs feature set at the Lucas Kanade method and kind of showing the optical

72
00:05:06.750 --> 00:05:09.190
flow that way of just a few points to track.

73
00:05:09.360 --> 00:05:12.350
But then we're also going to move on and talk about dense optical flow.

74
00:05:12.480 --> 00:05:18.730
So both of these methods are really cool and they're actually really easy to use up and see the now.

75
00:05:18.770 --> 00:05:22.850
I highly encourage you to check out the resource links for full descriptions and publication links for

76
00:05:22.850 --> 00:05:24.260
these two algorithms.

77
00:05:24.260 --> 00:05:28.310
Keep in mind that if you really want to dive into the way the algorithms work you should have a strong

78
00:05:28.310 --> 00:05:32.080
linear algebra background to understand the math behind these methods.

79
00:05:32.390 --> 00:05:35.690
OK let's get started by coding these out with open CV.

80
00:05:35.870 --> 00:05:36.800
I'll see at the next lecture.
