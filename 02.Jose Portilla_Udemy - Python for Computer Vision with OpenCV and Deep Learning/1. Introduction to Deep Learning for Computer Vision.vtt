WEBVTT
1
00:00:05.230 --> 00:00:10.060
Welcome back everyone in this lecture room to give you a brief overview of what to expect for the deep

2
00:00:10.060 --> 00:00:12.350
learning in computer vision section of the course.

3
00:00:13.650 --> 00:00:16.670
So we're going to start off with a high level overview of machine learning.

4
00:00:16.710 --> 00:00:20.710
If you've already taken a machine learning class this is probably going to be some basic review.

5
00:00:21.120 --> 00:00:26.040
Then later on in the section of the course we're going to be performing classification tasks things

6
00:00:26.040 --> 00:00:33.180
like being able to detect whether the hand-written digit is a one or two in a series of images or being

7
00:00:33.180 --> 00:00:38.050
able to detect whether you're seeing a cat or dog because these are classification tasks.

8
00:00:38.070 --> 00:00:43.380
It's a good idea to have a complete understanding of how we can evaluate classification tasks using

9
00:00:43.380 --> 00:00:47.280
classification metrics such as accuracy precision and recall.

10
00:00:47.280 --> 00:00:51.570
So we're going to have a brief overview of how to understand those classification metrics since we're

11
00:00:51.570 --> 00:00:56.490
going to be seeing them later on when we're actually coding out these algorithms then we'll covered

12
00:00:56.490 --> 00:00:57.750
that deep learning basics.

13
00:00:57.780 --> 00:01:02.490
You can just have some fundamental intuition of how deep learning operates and how it's slightly different

14
00:01:02.490 --> 00:01:04.140
than just general machine learning.

15
00:01:05.700 --> 00:01:10.260
After that we'll really start diving into the code will start learning about how to use the care a steep

16
00:01:10.260 --> 00:01:11.200
learning library.

17
00:01:11.400 --> 00:01:17.790
Then we'll do an overview of the dataset that is a very famous handwritten dataset that is used as a

18
00:01:17.790 --> 00:01:23.130
benchmark for deep learning of images that we'll learn about convolutional neural network theory and

19
00:01:23.130 --> 00:01:29.130
then we'll actually implement a convolutional neural network with the Cure's Python library on the data

20
00:01:29.130 --> 00:01:30.360
set.

21
00:01:30.360 --> 00:01:35.940
Now this data set is a very common data set and it's actually formatted very nicely inside of the current

22
00:01:35.970 --> 00:01:36.830
library.

23
00:01:36.840 --> 00:01:41.820
But in the real world you're going to have to deal with your own images such as JPEG files or PNB files

24
00:01:42.120 --> 00:01:48.210
that are not as easily accessible which is why a big focus of this section in the second half is going

25
00:01:48.210 --> 00:01:53.520
to be applying those deep learning ideas especially for emir's classification or your own custom image

26
00:01:53.520 --> 00:01:54.240
files.

27
00:01:54.330 --> 00:01:57.960
So we'll show you how to download a large set of real images.

28
00:01:57.960 --> 00:02:03.450
It's going to be dogs and cats of all different file sizes different formats and we're can understand

29
00:02:03.720 --> 00:02:09.450
how we can work with the built in tools of cars in order to generate data images from those image files

30
00:02:09.570 --> 00:02:14.610
and then apply the learning to them then we'll end the section with an overview of understanding the

31
00:02:14.670 --> 00:02:18.480
YOLO network which stands for you only look once.

32
00:02:18.480 --> 00:02:22.170
It's one of the more complex networks we're going to see in this section and that will show you how

33
00:02:22.170 --> 00:02:26.970
to use Python in order to apply YOLO to your own images.

34
00:02:26.980 --> 00:02:28.720
OK let's get started.
