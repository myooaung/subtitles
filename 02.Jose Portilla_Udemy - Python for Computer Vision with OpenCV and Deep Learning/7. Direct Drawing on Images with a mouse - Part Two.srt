1
00:00:05,290 --> 00:00:10,630
Welcome back in this lecture and continue our discussion of directly drawing an image for a mouse by

2
00:00:10,630 --> 00:00:15,370
adding in functionality with event choices we're going to be using the same code that we worked with

3
00:00:15,370 --> 00:00:16,150
last time.

4
00:00:16,210 --> 00:00:17,950
So let's continue where we left off.

5
00:00:17,950 --> 00:00:18,510
OK.

6
00:00:18,700 --> 00:00:21,140
Here we are at the previous script that we use.

7
00:00:21,250 --> 00:00:26,620
Remember all we're doing here is recreating a function that takes in these parameters and events the

8
00:00:26,620 --> 00:00:31,810
x and y coordinates of that event with the mouse flags and then parameters and then we're checking if

9
00:00:31,810 --> 00:00:33,440
a particular event occurred.

10
00:00:33,550 --> 00:00:38,150
And if it did then go ahead and do something to that image such as drawing on the image.

11
00:00:38,240 --> 00:00:43,450
Then we also have a named window and the mouse called back connected based off the window name to the

12
00:00:43,450 --> 00:00:45,260
image being shown.

13
00:00:45,280 --> 00:00:49,310
Now what we can do is actually check for multiple events.

14
00:00:49,340 --> 00:00:53,290
So right now we're only checking if the left button was clicked down.

15
00:00:53,490 --> 00:01:01,840
What I'm going to do is add another event will say LCF or Elif event is equal equal to CB2.

16
00:01:02,040 --> 00:01:06,570
And then we can type event and if hit tab here you can see the various events that are available to

17
00:01:06,910 --> 00:01:10,280
such as moving the mouse by pressing a particular key.

18
00:01:10,300 --> 00:01:16,650
In this case let's go ahead and go with events right button down.

19
00:01:16,780 --> 00:01:18,670
So we'll go ahead and do something else.

20
00:01:18,700 --> 00:01:25,310
If the right mouse button click down and let's just go ahead and add another circle but this time it

21
00:01:25,320 --> 00:01:26,850
will be a different color.

22
00:01:26,880 --> 00:01:29,710
We'll have it be a red circle.

23
00:01:29,800 --> 00:01:31,140
What does this actually mean.

24
00:01:31,150 --> 00:01:33,520
It means that I'm going to be displaying the same image.

25
00:01:33,520 --> 00:01:40,090
However on checking for multiple events if event passed back during the actual mouse callback happens

26
00:01:40,090 --> 00:01:47,350
to be a left button down then I'm going to draw a circle of particular color green and if happens to

27
00:01:47,350 --> 00:01:50,490
be a right button down that is going to draw a red circle.

28
00:01:50,500 --> 00:01:52,220
Let's run this.

29
00:01:52,460 --> 00:01:55,790
Here's my drawing and I'm going to do two left clicks.

30
00:01:55,970 --> 00:02:01,520
So there are my green circles and let me click on my right mouse button and there are my blue circles.

31
00:02:01,610 --> 00:02:06,680
So I think I actually said red when it should have been blue because remember we have blue green red

32
00:02:06,680 --> 00:02:08,780
with open C-v not red green blue.

33
00:02:08,780 --> 00:02:10,900
So the blue and red channels are switch there.

34
00:02:10,910 --> 00:02:17,030
So I apologize for misspeaking but you can see now how you can now add in different colors based off

35
00:02:17,030 --> 00:02:20,390
different mouse events so just alternating left and right click here.

36
00:02:20,630 --> 00:02:21,430
OK.

37
00:02:21,470 --> 00:02:26,210
Coming up next we're going to continue by showing you what you can do in order to have behavior that

38
00:02:26,210 --> 00:02:28,190
affects as your mouse is being dragged.

39
00:02:28,190 --> 00:02:31,990
So right now you can click once but if I dropped my mouse nothing happens.

40
00:02:32,000 --> 00:02:36,080
Coming up next we're going to show you how you can organize event calls along with some global variable

41
00:02:36,080 --> 00:02:40,060
calls in order to actually account for a mouse being dragged along.

42
00:02:40,220 --> 00:02:41,050
We'll see you there.
