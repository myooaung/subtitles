WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.925
The next file functions which we're going to add,

00:00:02.925 --> 00:00:05.745
are just going to be a case of switching around our red,

00:00:05.745 --> 00:00:07.610
blue, and green values.

00:00:07.610 --> 00:00:09.735
We'll start with change in our red,

00:00:09.735 --> 00:00:13.620
green and blue values to be the red, blue, and green.

00:00:13.620 --> 00:00:19.510
Let's grab our last function and we can duplicate this just below.

00:00:19.550 --> 00:00:23.800
The function name is going to be rbg.

00:00:24.800 --> 00:00:28.680
What we want to do here is to switch the red,

00:00:28.680 --> 00:00:31.770
green and blue to then be red,

00:00:31.770 --> 00:00:33.795
blue and then green.

00:00:33.795 --> 00:00:37.800
For this one, the red is staying the same all we need to do is to set

00:00:37.800 --> 00:00:42.510
the first value to be equal to red, which is data[i].

00:00:42.510 --> 00:00:44.985
The second value which is just here,

00:00:44.985 --> 00:00:47.560
this one is going to be equal to blue.

00:00:47.560 --> 00:00:52.710
Blue is our third value of i plus 2, let's change this.

00:00:52.710 --> 00:00:55.325
Then our third value is going to be green,

00:00:55.325 --> 00:00:57.750
which is i plus 1.

00:01:00.470 --> 00:01:04.280
This is our free colors now switched out.

00:01:04.280 --> 00:01:06.110
However, though with this function,

00:01:06.110 --> 00:01:08.195
there is one small problem.

00:01:08.195 --> 00:01:11.105
We set the red value to be equal to the red value,

00:01:11.105 --> 00:01:12.650
which is completely fine.

00:01:12.650 --> 00:01:15.740
We then set any green value to be equal to blue,

00:01:15.740 --> 00:01:17.270
which is fine too.

00:01:17.270 --> 00:01:23.035
However, though we've now reassigned the screen value to be a different color.

00:01:23.035 --> 00:01:28.160
Now, when we try to assign this green color at the very end here,

00:01:28.160 --> 00:01:30.140
this is now being replaced.

00:01:30.140 --> 00:01:36.205
This means it's not the original green color for every loop after our first one.

00:01:36.205 --> 00:01:40.850
If we're overriding any of these values and then reusing them,

00:01:40.850 --> 00:01:45.430
we then need to store the original color inside of a variable.

00:01:45.430 --> 00:01:48.905
We'll set a const, and this is our green value.

00:01:48.905 --> 00:01:53.020
Set this equal to data i plus 1.

00:01:53.020 --> 00:01:57.230
This is always going to be the original green value.

00:01:57.230 --> 00:02:00.485
Therefore, when we obtain this is going to change.

00:02:00.485 --> 00:02:05.755
But we can also access the original green value after we've changed this too.

00:02:05.755 --> 00:02:09.355
Just to recap, when we loop through all of our pixels,

00:02:09.355 --> 00:02:12.410
we're overriding our green value with this blue.

00:02:12.410 --> 00:02:15.080
Therefore, when we try to use this down at the bottom,

00:02:15.080 --> 00:02:17.900
once again, we'll no longer have the original color.

00:02:17.900 --> 00:02:22.100
Therefore, we need to store this in a constant just above.

00:02:22.100 --> 00:02:28.340
Now let's duplicate our click "Listener" let us put in at number 3,

00:02:28.340 --> 00:02:31.265
any function is rbg.

00:02:31.265 --> 00:02:35.620
Let's give this a try, chose a new file.

00:02:37.550 --> 00:02:40.835
Our function is now working.

00:02:40.835 --> 00:02:43.090
Let's now move on to swap our red,

00:02:43.090 --> 00:02:45.370
green and blue values with a blue, green,

00:02:45.370 --> 00:02:47.950
and red, so copy this function.

00:02:47.950 --> 00:02:51.050
The second one is going to be called bgr.

00:02:53.210 --> 00:02:57.835
The first color we're replacing our red with the blue value.

00:02:57.835 --> 00:03:00.595
This is data i plus 2.

00:03:00.595 --> 00:03:03.670
The second value is going to be green,

00:03:03.670 --> 00:03:05.860
and this is i plus one.

00:03:05.860 --> 00:03:08.670
The third value is our color of red,

00:03:08.670 --> 00:03:10.375
which is data i.

00:03:10.375 --> 00:03:11.980
But, just like above,

00:03:11.980 --> 00:03:15.940
we're replacing our data i value with a different color.

00:03:15.940 --> 00:03:20.330
Therefore, we can store our original data i inside of

00:03:20.330 --> 00:03:25.645
a variable called red and set this as our third value.

00:03:25.645 --> 00:03:28.140
Link this to our button.

00:03:28.140 --> 00:03:30.765
This one is button number 4.

00:03:30.765 --> 00:03:37.030
The function name of bgr. Let's try this one out.

00:03:39.800 --> 00:03:44.310
The bgr color is also working too.

00:03:44.310 --> 00:03:47.745
We have two more, the next one is gbr,

00:03:47.745 --> 00:03:50.680
so copy our last function.

00:03:51.950 --> 00:03:57.740
We name this, the first one we need to change is our green color.

00:03:57.740 --> 00:04:00.900
We need to set i plus 1.

00:04:01.730 --> 00:04:04.400
The second value is blue,

00:04:04.400 --> 00:04:06.925
which is our i plus 2.

00:04:06.925 --> 00:04:11.450
The third one is our red value, which is data[i].

00:04:11.450 --> 00:04:15.200
Just like with the loss function, we're overriding data[i].

00:04:15.200 --> 00:04:19.880
We can make use of this red constant and update this as our third value.

00:04:19.880 --> 00:04:21.710
We can link this to our button,

00:04:21.710 --> 00:04:24.035
which is button number 5,

00:04:24.035 --> 00:04:27.570
and the function name of gbr.

00:04:28.490 --> 00:04:32.230
Let's try this one, choose our file.

00:04:34.850 --> 00:04:39.910
This one is now working too which moves us on to the very last button,

00:04:39.910 --> 00:04:41.500
which is to replace our red, green,

00:04:41.500 --> 00:04:45.060
and blue values with green, red and blue.

00:04:45.060 --> 00:04:50.525
Duplicates our function called grb.

00:04:50.525 --> 00:04:52.345
The first value is green,

00:04:52.345 --> 00:04:54.805
and this is currently set, so that's fine.

00:04:54.805 --> 00:05:01.120
The second value of red is data[i] and since we're updating this during the loop,

00:05:01.120 --> 00:05:03.580
we can also make use of the original red color,

00:05:03.580 --> 00:05:06.065
which is stored in this constant.

00:05:06.065 --> 00:05:08.880
The last value is staying exactly the same.

00:05:08.880 --> 00:05:10.570
This is also blue 2.

00:05:10.570 --> 00:05:13.640
This is data i plus 2.

00:05:14.080 --> 00:05:17.250
We can link this to our very last button

00:05:17.250 --> 00:05:21.400
inside of this section and this is button number 6,

00:05:21.400 --> 00:05:24.370
and the functioning of grb.

00:05:25.460 --> 00:05:36.695
Over to the browser. Click this button and our last function is now working.

00:05:36.695 --> 00:05:39.900
This is now all of our image effects now working.

00:05:39.900 --> 00:05:42.695
To finish off this project in the next video,

00:05:42.695 --> 00:05:47.360
we're going to set up our clear button to remove any effects and reinstate

00:05:47.360 --> 00:05:53.220
the original image and also set this up so we can download our photo from the browser.
