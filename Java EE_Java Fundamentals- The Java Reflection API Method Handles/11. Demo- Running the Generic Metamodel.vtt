WEBVTT
1
00:00:01.750 --> 00:00:04.780
Let us test that and see if it works.

2
00:00:04.780 --> 00:00:08.051
We can print out this kind of message,

3
00:00:08.051 --> 00:00:20.072
Primary key name = primaryKeyField.getName + type = primaryKeyField.getType.

4
00:00:20.072 --> 00:00:25.174
So we need two more methods on our PrimaryKeyField, which is getName.

5
00:00:25.174 --> 00:00:31.191
Let us do that, and this should return field.getName and getType,

6
00:00:31.191 --> 00:00:35.062
which should return field.getType.

7
00:00:35.062 --> 00:00:37.745
This is a Class of question mark.

8
00:00:37.745 --> 00:00:42.541
So here, let us print out the SimpleName of this type.

9
00:00:42.541 --> 00:00:47.086
If we run this code, we already should have a nice result.

10
00:00:47.086 --> 00:00:52.713
The Primary key is the id field, and the type of this Primary key is long.

11
00:00:52.713 --> 00:00:57.024
Now we can do the same kind of things on these columnFields here,

12
00:00:57.024 --> 00:01:03.852
so let us iterate on those columnFields and print out Column name,

13
00:01:03.852 --> 00:01:08.044
and here, we need the name of this columnField and the type,

14
00:01:08.044 --> 00:01:10.790
so let us do the same.

15
00:01:10.790 --> 00:01:16.961
Create this getName method, which is going to return field.getName.

16
00:01:16.961 --> 00:01:23.813
And this getType method, which is going to return field.getType.

17
00:01:23.813 --> 00:01:25.267
Let us run this code.

18
00:01:25.267 --> 00:01:26.040
And indeed,

19
00:01:26.040 --> 00:01:30.276
we were able to get the PrimaryKeyField of the Person

20
00:01:30.276 --> 00:01:37.752
class and the two Column names, name of type String and age of type integer.

21
00:01:37.752 --> 00:01:42.318
So you can see that using those annotations it is very easy

22
00:01:42.318 --> 00:01:52.000
to add some information to a class and to get that information using the Java Reflection API.

