1
00:00:01,775 --> 00:00:05,108
And now is the time to wrap up this module.

2
00:00:05,108 --> 00:00:07,208
What did you learn in this module?

3
00:00:07,208 --> 00:00:12,794
You saw the second most important Application of the Java Reflection API,

4
00:00:12,794 --> 00:00:15,625
which is dependency injection.

5
00:00:15,625 --> 00:00:21,884
You saw how to create objects using Reflection and the user factory method,

6
00:00:21,884 --> 00:00:28,354
and you saw how to inject them as dependencies in other objects.

7
00:00:28,354 --> 00:00:33,542
This is how all the dependency injection frameworks basically work,

8
00:00:33,542 --> 00:00:37,469
Spring, CDI, Guice, just to name a few.

9
00:00:37,469 --> 00:00:42,016
Of course those frameworks are doing much more sophisticated things,

10
00:00:42,016 --> 00:00:43,854
but at the basis of it,

11
00:00:43,854 --> 00:00:46,738
there is this dependency injection mechanism that

12
00:00:46,738 --> 00:00:49,764
can be implemented in that way.

13
00:00:49,764 --> 00:00:52,138
Well, that's it for this module.

14
00:00:52,138 --> 00:00:53,928
Thank you for watching it.

15
00:00:53,928 --> 00:00:55,995
I hope you found it interesting.

16
00:00:55,995 --> 00:01:03,251
We have one last point to cover, very important, which talks about performances.

17
00:01:03,251 --> 00:01:10,357
Starting with Java 7, we have a new API to conduct Reflection in the JDK,

18
00:01:10,357 --> 00:01:13,299
which is called method handles.

19
00:01:13,299 --> 00:01:17,365
Much more technical, but also, much more efficient.

20
00:01:17,365 --> 00:01:26,000
So I hope to see you in the next and last module of this course about method handles.

