WEBVTT
1
00:00:01.970 --> 00:00:07.104
We now have all the elements we need, both metamodel and technical,

2
00:00:07.104 --> 00:00:14.193
to read the content of a person bean and to write that content to a storage.

3
00:00:14.193 --> 00:00:17.033
So let us see how we can do that.

4
00:00:17.033 --> 00:00:19.906
What we are going to do is the following.

5
00:00:19.906 --> 00:00:23.206
We are going to create an interface called EntityManager,

6
00:00:23.206 --> 00:00:28.197
and this EntityManager will have a parameter of type T,

7
00:00:28.197 --> 00:00:30.190
and we'll have two methods,

8
00:00:30.190 --> 00:00:34.918
the first one to write an object to a persistent storage,

9
00:00:34.918 --> 00:00:36.637
think of a database,

10
00:00:36.637 --> 00:00:43.851
and another one to get that object given its primaryKey and its Class.

11
00:00:43.851 --> 00:00:48.329
If you have some knowledge of the Hibernate or JPA frameworks,

12
00:00:48.329 --> 00:00:53.096
you will recognize the EntityManager object from those

13
00:00:53.096 --> 00:00:57.448
frameworks in a very simplified form, of course.

14
00:00:57.448 --> 00:01:01.694
So given an instance of any object of type T,

15
00:01:01.694 --> 00:01:01.938
first,

16
00:01:01.938 --> 00:01:06.263
we are going to be able to read the fields of T because we can

17
00:01:06.263 --> 00:01:10.450
get a reference on the class of T at runtime.

18
00:01:10.450 --> 00:01:14.864
Then we can check for the annotations on the subject,

19
00:01:14.864 --> 00:01:16.881
find the primary key,

20
00:01:16.881 --> 00:01:22.807
and then find the fields we want to read and write from the persistent storage.

21
00:01:22.807 --> 00:01:27.600
The Reflection API will do the rest, read the content of T,

22
00:01:27.600 --> 00:01:33.270
get the place in the storage we want to save this instance of T,

23
00:01:33.270 --> 00:01:36.531
and be able to read the object back from that persistent

24
00:01:36.531 --> 00:01:40.241
storage to the memory of our application.

25
00:01:40.241 --> 00:01:43.042
Let us quickly see how we can proceed.

26
00:01:43.042 --> 00:01:44.928
This is the main pattern.

27
00:01:44.928 --> 00:01:51.629
We have the Class of this t object that we can get using the t.getClass.

28
00:01:51.629 --> 00:01:54.840
We get all the fields from that t object,

29
00:01:54.840 --> 00:01:58.589
and we are going to loop through all those fields.

30
00:01:58.589 --> 00:02:04.031
If a field is a PrimaryKey, then we are going to process it as such.

31
00:02:04.031 --> 00:02:07.441
And if this field has just the Column annotation,

32
00:02:07.441 --> 00:02:19.000
then we are going to process it as a regular persistent field. So this is the basic pattern that we are going to implement.

