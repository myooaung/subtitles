WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.260
in this video.

00:00:01.260 --> 00:00:04.720
Let's have a look at some of the most commonly used functions off.

00:00:04.720 --> 00:00:05.340
Fight on.

00:00:05.340 --> 00:00:07.830
First,

00:00:07.830 --> 00:00:11.450
let's open a turbulent or command front on Windows.

00:00:11.450 --> 00:00:19.280
I've been quite country and gettinto the fight on Shell Please remember that if you're

00:00:19.280 --> 00:00:20.300
using Windows,

00:00:20.300 --> 00:00:23.450
please use bite down instead of fight on three.

00:00:23.450 --> 00:00:30.480
The first commend that we would be interested toe work with is dia sub d a r.

00:00:30.480 --> 00:00:35.150
The function that gives you some strange output.

00:00:35.150 --> 00:00:42.050
As you can see that you're a square bracket consisting off some strings here,

00:00:42.050 --> 00:00:46.750
mostly they're double underscores the they're called Thunder's.

00:00:46.750 --> 00:00:50.550
We will discuss about them in detail as we go forward.

00:00:50.550 --> 00:00:51.570
But D.

00:00:51.570 --> 00:00:51.710
A.

00:00:51.710 --> 00:00:54.990
R is giving a list off strings,

00:00:54.990 --> 00:00:57.390
which represents something or attributes.

00:00:57.390 --> 00:01:03.090
So if you don't supply any parameters to the dear your brackets here,

00:01:03.090 --> 00:01:04.940
then it just leaves.

00:01:04.940 --> 00:01:10.050
Thought so called moderns there have been loaded into our fight on environment.

00:01:10.050 --> 00:01:11.560
For example,

00:01:11.560 --> 00:01:15.950
we can load a model called CIS by typing imports is,

00:01:15.950 --> 00:01:22.450
and now in first idea are you should see that says is the new entry over here.

00:01:22.450 --> 00:01:23.270
Similarly,

00:01:23.270 --> 00:01:30.990
if I import the time you can see Delia will now show you the daytime along with the six.

00:01:30.990 --> 00:01:33.570
Because these are the models that have been loaded.

00:01:33.570 --> 00:01:40.280
A model is simply a fight on file that contains some useful called that we would be

00:01:40.280 --> 00:01:42.050
requiring to use in the future.

00:01:42.050 --> 00:01:45.800
But the air can also be supplied with some arguments.

00:01:45.800 --> 00:01:46.700
For example,

00:01:46.700 --> 00:01:54.550
if I take your area off str this time you may see a totally different set off entries.

00:01:54.550 --> 00:02:02.660
Now the entries here in this list our core attributes Now the attributes you see here are

00:02:02.660 --> 00:02:10.370
the attributes of the class str here Now at this time we will not know what is str But in

00:02:10.370 --> 00:02:11.850
the future we're gonna work on.

00:02:11.850 --> 00:02:14.020
But when we worked with str,

00:02:14.020 --> 00:02:22.880
these things will be off some use for example I can also say here the air off in we're into

00:02:22.880 --> 00:02:25.060
represents an integer number.

00:02:25.060 --> 00:02:30.850
Now it shows the list of attributes that correspond to an Intertype.

00:02:30.850 --> 00:02:32.660
In both the cases,

00:02:32.660 --> 00:02:37.840
you can see that there are a lot off attributes that start with double underscore and end

00:02:37.840 --> 00:02:38.650
with the same.

00:02:38.650 --> 00:02:43.060
These are called under attributes and for practical purposes.

00:02:43.060 --> 00:02:45.250
You should not be worrying about this at all,

00:02:45.250 --> 00:02:49.160
which means that if you're working with an str string,

00:02:49.160 --> 00:02:54.550
These are the attributes that would be useful to us and in case of an int,

00:02:54.550 --> 00:02:59.850
these are the attributes that will be useful for us to work with indigenous.

00:02:59.850 --> 00:03:04.410
The next function that we would like to work with your is a help.

00:03:04.410 --> 00:03:04.910
Help,

00:03:04.910 --> 00:03:06.250
as it indicates,

00:03:06.250 --> 00:03:10.060
gives you some help on certain things that you want.

00:03:10.060 --> 00:03:10.750
For example,

00:03:10.750 --> 00:03:16.540
if you would like to know what is str you can simply say help str and press entered and

00:03:16.540 --> 00:03:21.900
then it will give you a documentation for what is the meaning of str what other videos

00:03:21.900 --> 00:03:27.720
attributes that are there So we just know so some of the activities over better So the

00:03:27.720 --> 00:03:31.910
attributes are given some explanation here,

00:03:31.910 --> 00:03:35.470
each one of them How do we use them?

00:03:35.470 --> 00:03:37.730
Is it a function?

00:03:37.730 --> 00:03:44.490
Are is it a variable on those information would be available to come out of this help You

00:03:44.490 --> 00:03:48.470
can type que and it will come out to your fight on shell.

00:03:48.470 --> 00:03:55.180
You can also get help for a specific attributes off a class like a steer forced.

00:03:55.180 --> 00:03:58.580
Let's give a deer last year to see what the attributes of them.

00:03:58.580 --> 00:03:59.940
For example,

00:03:59.940 --> 00:04:07.660
there is a ease lower attribute I can now say here held str dot is lower and then it will

00:04:07.660 --> 00:04:14.960
tell me what actually is that It says that it is a method descriptor method meaning

00:04:14.960 --> 00:04:16.830
function rescue.

00:04:16.830 --> 00:04:22.560
To come out about that right on allows us to create variables which represent some values.

00:04:22.560 --> 00:04:23.290
For example,

00:04:23.290 --> 00:04:26.030
I can say here my name equals toe,

00:04:26.030 --> 00:04:26.510
we note,

00:04:26.510 --> 00:04:33.520
and then I can stay here a number because toe 12 What you see on the right hand side is a

00:04:33.520 --> 00:04:34.980
value or literal.

00:04:34.980 --> 00:04:37.100
And there has been a cento,

00:04:37.100 --> 00:04:39.150
a storage location in the memory,

00:04:39.150 --> 00:04:41.790
which is called as my underscored name.

00:04:41.790 --> 00:04:44.250
We refer to this as variables.

00:04:44.250 --> 00:04:47.460
Variable refers to an object.

00:04:47.460 --> 00:04:48.090
In this case,

00:04:48.090 --> 00:04:56.170
it's representing a string or on str Inam is suffering toe number called 12 to find out

00:04:56.170 --> 00:04:56.730
what is the date.

00:04:56.730 --> 00:04:58.160
A date off a variable.

00:04:58.160 --> 00:05:00.500
You can use the function for time.

00:05:00.500 --> 00:05:01.610
For example,

00:05:01.610 --> 00:05:03.210
I can save type my name.

00:05:03.210 --> 00:05:09.810
It will civility than str and I can sit tight in them is nothing but an end.

00:05:09.810 --> 00:05:14.150
Unlike many programming languages like Java or C plus plus,

00:05:14.150 --> 00:05:17.420
which are called as strongly typed language,

00:05:17.420 --> 00:05:21.150
a variable must have a data type in those languages.

00:05:21.150 --> 00:05:24.450
Unlike them in bite on a variable.

00:05:24.450 --> 00:05:26.080
Need not have any data tape.

00:05:26.080 --> 00:05:30.620
Why don't variables borrow the day today from the assignment?

00:05:30.620 --> 00:05:31.460
For example?

00:05:31.460 --> 00:05:34.650
My name is Anne s tear at this point in time.

00:05:34.650 --> 00:05:36.420
But if I have to change,

00:05:36.420 --> 00:05:40.590
my name equals toe 1 23 which is totally possible.

00:05:40.590 --> 00:05:41.390
Now.

00:05:41.390 --> 00:05:47.780
My name is no longer an str but it is an indigent.

00:05:47.780 --> 00:05:54.890
On this type of Davide association with variables is for dynamic data typing or ban.

00:05:54.890 --> 00:05:55.590
Imitating.

00:05:55.590 --> 00:06:01.320
This means we never have to declare a variable before its usage.

00:06:01.320 --> 00:06:06.710
We just have to assign value and then start using the variables Talking about the variables

00:06:06.710 --> 00:06:06.710
.

00:06:06.710 --> 00:06:11.060
A variable once ascend with a value will have a unique I.

00:06:11.060 --> 00:06:11.370
D.

00:06:11.370 --> 00:06:12.830
For example,

00:06:12.830 --> 00:06:17.750
I'd say anyone equals toe 1 23 I can check it Ivy.

00:06:17.750 --> 00:06:20.900
I get a unique number displayed over here.

00:06:20.900 --> 00:06:26.130
If I take any two equals to 200 and then idea into,

00:06:26.130 --> 00:06:28.250
you'll see that it's a different number.

00:06:28.250 --> 00:06:29.470
However,

00:06:29.470 --> 00:06:34.150
if Endo is going toe point toe the same number as anyone,

00:06:34.150 --> 00:06:37.950
then there is only one instance off 123.

00:06:37.950 --> 00:06:40.460
We're both anyone and endured it for two.

00:06:40.460 --> 00:06:48.300
So if I checked the idea off into which is identical to the idea off anyone and the reason

00:06:48.300 --> 00:06:52.000
for this is ideas are given to the objects on the right hand side,

00:06:52.000 --> 00:06:54.150
not onto the videos.

00:06:54.150 --> 00:06:56.000
You're available now,

00:06:56.000 --> 00:06:57.750
their first to a different object.

00:06:57.750 --> 00:06:59.230
It's idee changes back.

00:06:59.230 --> 00:06:59.980
For example,

00:06:59.980 --> 00:07:04.150
if I say you're annually close to 200 I'd be off in one.

00:07:04.150 --> 00:07:06.240
You can see that uglier.

00:07:06.240 --> 00:07:09.680
We got the same number for N two.

00:07:09.680 --> 00:07:15.550
Now I'm getting it for anyone because the idea of 200 is what we're actually getting.

00:07:15.550 --> 00:07:18.170
This can be used for chicken,

00:07:18.170 --> 00:07:21.750
whether two variables refer to the same object or not.

00:07:21.750 --> 00:07:26.750
So if anyone and end to have the same idee,

00:07:26.750 --> 00:07:31.450
it means to say both anyone in tow are referencing toe the same object.

