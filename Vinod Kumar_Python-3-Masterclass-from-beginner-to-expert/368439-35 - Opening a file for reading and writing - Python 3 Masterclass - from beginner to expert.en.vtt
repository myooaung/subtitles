WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.820
opening,

00:00:01.820 --> 00:00:04.920
reading and closing files in Brighton is very,

00:00:04.920 --> 00:00:05.690
very simple.

00:00:05.690 --> 00:00:07.540
To understand the same,

00:00:07.540 --> 00:00:10.080
let's get into a fight on Shell Onda.

00:00:10.080 --> 00:00:13.100
I type your help on Opened,

00:00:13.100 --> 00:00:15.150
which is a function provided by Python.

00:00:15.150 --> 00:00:21.610
So it says it's a building function in module Iot services for input output open is a

00:00:21.610 --> 00:00:22.250
function.

00:00:22.250 --> 00:00:27.160
The first argument and the mandatory argument is the name off the file.

00:00:27.160 --> 00:00:31.950
And then you have a bunch off parameters which have default values,

00:00:31.950 --> 00:00:33.960
which means there are optional.

00:00:33.960 --> 00:00:41.470
So there's a more which means you want toe open the file in either read more right more or

00:00:41.470 --> 00:00:42.250
up and more.

00:00:42.250 --> 00:00:47.200
It says there's a buffering there's including and get it for reading some internationalized

00:00:47.200 --> 00:00:50.710
to text you Cancer Planet according How do You handle editors?

00:00:50.710 --> 00:00:53.080
Is there a new line characters that you want to set,

00:00:53.080 --> 00:00:56.210
specify and some other optional barometers.

00:00:56.210 --> 00:00:56.470
So,

00:00:56.470 --> 00:00:58.640
in orderto open a file,

00:00:58.640 --> 00:01:02.450
you have to supply the file name as an argument.

00:01:02.450 --> 00:01:06.550
Now you can give either a related part or absolute part.

00:01:06.550 --> 00:01:12.890
Now I have already switched to the director where I have my fight on examples on the

00:01:12.890 --> 00:01:14.070
scripts that I have written.

00:01:14.070 --> 00:01:15.470
I can simply say.

00:01:15.470 --> 00:01:16.330
Finally,

00:01:16.330 --> 00:01:17.920
he calls toe say,

00:01:17.920 --> 00:01:18.760
for example,

00:01:18.760 --> 00:01:20.210
the x $16 people,

00:01:20.210 --> 00:01:20.360
right?

00:01:20.360 --> 00:01:21.760
That's the last one that I wrote.

00:01:21.760 --> 00:01:27.570
And now I can open this file name by typing f equals took open finding.

00:01:27.570 --> 00:01:31.450
Now the function open takes this fine name as an argument.

00:01:31.450 --> 00:01:34.130
If it is successfully able to open the file,

00:01:34.130 --> 00:01:36.200
it returns an object.

00:01:36.200 --> 00:01:38.090
We call it the file descriptor object.

00:01:38.090 --> 00:01:43.100
The file descriptor object is written and I'm using a variable after represent the same.

00:01:43.100 --> 00:01:47.100
Now I can perform some operations on the F.

00:01:47.100 --> 00:01:48.790
So to understand what is there,

00:01:48.790 --> 00:01:52.100
let's force type type f you can see that it is.

00:01:52.100 --> 00:01:54.570
It is something called text I rapper.

00:01:54.570 --> 00:01:56.850
That's the plants off which you got an object.

00:01:56.850 --> 00:01:59.400
And if you want to know what are the members of that?

00:01:59.400 --> 00:02:03.120
You can simply take either DEA f r.

00:02:03.120 --> 00:02:06.910
You can help f So when I said d a r f,

00:02:06.910 --> 00:02:11.910
you will see that I get lots and lots of functions now here are some of the functions that

00:02:11.910 --> 00:02:12.790
you can check.

00:02:12.790 --> 00:02:13.790
For example,

00:02:13.790 --> 00:02:17.840
closed is a Boolean attribute that says Is it closed?

00:02:17.840 --> 00:02:24.280
Are not right now the file hasn't bean closed so if I say FDR closed it says funds,

00:02:24.280 --> 00:02:25.690
because it's not closed,

00:02:25.690 --> 00:02:26.090
you can see.

00:02:26.090 --> 00:02:26.770
More importantly,

00:02:26.770 --> 00:02:28.750
there are functions here called read,

00:02:28.750 --> 00:02:31.990
readable read line and read lines.

00:02:31.990 --> 00:02:35.330
So read reads the entire content of the file.

00:02:35.330 --> 00:02:38.560
So if I type your f dot of eat on,

00:02:38.560 --> 00:02:40.550
assigned this to a variable,

00:02:40.550 --> 00:02:41.660
for example,

00:02:41.660 --> 00:02:44.050
I assigned this toe say data,

00:02:44.050 --> 00:02:45.060
you feel pressed.

00:02:45.060 --> 00:02:46.410
Enter on Nancy.

00:02:46.410 --> 00:02:51.070
Data contains on the lines off the particular text file off course.

00:02:51.070 --> 00:02:55.360
It is not showing me properly because it's being displayed here as a string.

00:02:55.360 --> 00:02:57.710
But if a type of different data,

00:02:57.710 --> 00:03:03.100
you can see that the entire file content is there in that particular variable data,

00:03:03.100 --> 00:03:08.970
so I can close it by typing left our clothes and now ever say f closed.

00:03:08.970 --> 00:03:11.500
It says it is true because it's not open anymore.

00:03:11.500 --> 00:03:11.950
Off course.

00:03:11.950 --> 00:03:13.350
If it is not open,

00:03:13.350 --> 00:03:15.460
you will not be ableto read again,

00:03:15.460 --> 00:03:18.560
so you have to re open the file now.

00:03:18.560 --> 00:03:24.360
This time I want to get a fine name completely from the root off my folder that is called

00:03:24.360 --> 00:03:24.870
absolute,

00:03:24.870 --> 00:03:33.150
but I take your fine name equals stupid slash users slash we not come on slash desktop

00:03:33.150 --> 00:03:42.500
slashed quite on examples on inside that I have the X 16 dark P way and that the fighting

00:03:42.500 --> 00:03:45.280
again against the F vehicles toe open.

00:03:45.280 --> 00:03:46.100
Finally,

00:03:46.100 --> 00:03:48.970
I can also say that more equals to read,

00:03:48.970 --> 00:03:50.680
which is default here,

00:03:50.680 --> 00:03:51.680
so I don't have to be with,

00:03:51.680 --> 00:03:55.670
but I can always mention that the file is ready.

00:03:55.670 --> 00:03:58.200
I can now start reading one by one,

00:03:58.200 --> 00:04:01.800
but before that let's have a look at what are the other functions we have.

00:04:01.800 --> 00:04:04.760
You can see the data function here called Sikh.

00:04:04.760 --> 00:04:08.340
The Sikh function takes the Ko Soto a particular position.

00:04:08.340 --> 00:04:09.250
For example,

00:04:09.250 --> 00:04:11.120
before doing the read,

00:04:11.120 --> 00:04:13.850
I can always say f Dark Seek 100.

00:04:13.850 --> 00:04:17.240
Now what happens is that when the fight is open for reading,

00:04:17.240 --> 00:04:21.110
there will be an internal cursor that actually points to the very first character.

00:04:21.110 --> 00:04:23.380
Now I'm moving that to the 100.

00:04:23.380 --> 00:04:29.360
So that meeting for doing after to read you would see that the 1st 100 bytes are characters

00:04:29.360 --> 00:04:33.070
have been skipped and the rest of the contract will be printed for tape here.

00:04:33.070 --> 00:04:36.110
Now creamed f dot reid.

00:04:36.110 --> 00:04:36.920
It's going toe,

00:04:36.920 --> 00:04:38.760
read the content and going to print,

00:04:38.760 --> 00:04:44.280
but only from death main you can see that the previous or poor included everything it

00:04:44.280 --> 00:04:45.640
included death test,

00:04:45.640 --> 00:04:48.490
but up 200 characters have been skipped,

00:04:48.490 --> 00:04:50.840
so these include probably 100 characters.

00:04:50.840 --> 00:04:54.380
And then it is including the death main onwards here.

00:04:54.380 --> 00:04:56.330
So that's what is the sea Now.

00:04:56.330 --> 00:05:01.460
You can always say f dot seek toe zero and you can start reading again.

00:05:01.460 --> 00:05:07.440
I can say your print you have not read and I should be able to see the full content again.

00:05:07.440 --> 00:05:10.470
So instead of reading the entire data at one shot,

00:05:10.470 --> 00:05:12.490
you can read one line at a time.

00:05:12.490 --> 00:05:13.740
So for that,

00:05:13.740 --> 00:05:16.050
I'm going to say after seek off zero.

00:05:16.050 --> 00:05:20.290
So making sure that I'm bringing the culture back to the beginning And then I'll tell you,

00:05:20.290 --> 00:05:23.530
you have taught read line a singular.

00:05:23.530 --> 00:05:25.510
Here on a press enter,

00:05:25.510 --> 00:05:29.400
you can see that it prints the very foster line off the file,

00:05:29.400 --> 00:05:33.320
and it also includes the new line character that is part of the line.

00:05:33.320 --> 00:05:34.110
Andi,

00:05:34.110 --> 00:05:35.360
I call this again.

00:05:35.360 --> 00:05:40.370
You'll see that the second line told Line four plan fifth plane so I can actually use a

00:05:40.370 --> 00:05:42.170
loop toe print the same thing.

00:05:42.170 --> 00:05:43.320
For example,

00:05:43.320 --> 00:05:48.920
I clear this year after seek off zeros on bringing the culture back to the beginning.

00:05:48.920 --> 00:05:56.960
Allison line equals toe after read line one time and then I can say her while lying not

00:05:56.960 --> 00:05:59.040
equals toe an m destry.

00:05:59.040 --> 00:06:01.420
You keep repeating the same thing.

00:06:01.420 --> 00:06:03.270
So first I do a print line,

00:06:03.270 --> 00:06:09.090
and then I'd say You're line equals toe after read like on.

00:06:09.090 --> 00:06:14.560
Then I pressed Enter and you can see that I'm able to read all the lines one by one.

00:06:14.560 --> 00:06:15.160
Of course,

00:06:15.160 --> 00:06:17.610
it's also printing a line here.

00:06:17.610 --> 00:06:22.350
That's because the print function itself as a Nuland character and the actually line

00:06:22.350 --> 00:06:24.140
impending also has a slash.

00:06:24.140 --> 00:06:26.010
And if you didn't want that,

00:06:26.010 --> 00:06:27.200
you could have probably said,

00:06:27.200 --> 00:06:29.230
End equals toe empty string.

00:06:29.230 --> 00:06:32.670
So this is one way of really In the next two radio,

00:06:32.670 --> 00:06:37.790
we will write some fight and scripts to read the data from the file as villas,

00:06:37.790 --> 00:06:38.320
right,

00:06:38.320 --> 00:06:39.610
the content to a file

