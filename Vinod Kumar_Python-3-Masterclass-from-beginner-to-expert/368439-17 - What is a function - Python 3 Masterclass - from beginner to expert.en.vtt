WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.100
in this video,

00:00:02.100 --> 00:00:06.870
let's learn about functions and especially the user defined functions.

00:00:06.870 --> 00:00:11.660
A function is a piece off court that can be called when we want to call.

00:00:11.660 --> 00:00:20.070
Let's take an example by creating a fine E x 11 dot be went on and a function is created

00:00:20.070 --> 00:00:24.180
using the keyword death and then followed by a name,

00:00:24.180 --> 00:00:25.790
which is name of the function.

00:00:25.790 --> 00:00:26.880
For example,

00:00:26.880 --> 00:00:31.200
let's say I want to print information about myself so I can say here,

00:00:31.200 --> 00:00:32.740
read under school,

00:00:32.740 --> 00:00:34.460
utter in four.

00:00:34.460 --> 00:00:41.930
And then I have to open and close brackets start a block by typing colon and then the body

00:00:41.930 --> 00:00:42.750
off the function.

00:00:42.750 --> 00:00:45.750
I'm gonna bring some details about myself,

00:00:45.750 --> 00:00:46.540
for example,

00:00:46.540 --> 00:00:49.580
as a print name equals toe,

00:00:49.580 --> 00:00:49.880
you know,

00:00:49.880 --> 00:00:50.410
Come on.

00:00:50.410 --> 00:00:52.460
In another statement,

00:00:52.460 --> 00:00:54.500
I'm gonna say email equal Still,

00:00:54.500 --> 00:00:55.530
we know have to be No,

00:00:55.530 --> 00:00:56.190
not cool.

00:00:56.190 --> 00:00:59.700
And then I'm gonna go and die Print website.

00:00:59.700 --> 00:01:02.060
It quotes toe edge stitch ups.

00:01:02.060 --> 00:01:03.740
We know dot co No,

00:01:03.740 --> 00:01:04.330
no days.

00:01:04.330 --> 00:01:06.770
I have written three prints statements,

00:01:06.770 --> 00:01:10.560
but all the print statements are part off this function.

00:01:10.560 --> 00:01:11.740
Basically,

00:01:11.740 --> 00:01:16.230
we just have one single function definition and no executable core.

00:01:16.230 --> 00:01:17.310
For example,

00:01:17.310 --> 00:01:20.580
we don't have any prince statement in the column one here.

00:01:20.580 --> 00:01:22.020
So the first indentation,

00:01:22.020 --> 00:01:22.980
we don't have any.

00:01:22.980 --> 00:01:23.910
So basically,

00:01:23.910 --> 00:01:26.470
we don't have any executable statement at all.

00:01:26.470 --> 00:01:28.170
We just have one definition.

00:01:28.170 --> 00:01:35.070
So if I'm going to see if this and go back to the command prompt and around this e x 11 p y

00:01:35.070 --> 00:01:35.070
,

00:01:35.070 --> 00:01:41.370
you'll see that there is no output because these three are going to be executed only when

00:01:41.370 --> 00:01:42.830
you call this particular function.

00:01:42.830 --> 00:01:48.410
So I can come to this land above five or six and then I can say print author in four.

00:01:48.410 --> 00:01:52.210
This is where the actual execution off the function begins.

00:01:52.210 --> 00:01:54.560
So I think this go back to the command,

00:01:54.560 --> 00:01:56.810
prompt around the same program once again,

00:01:56.810 --> 00:01:57.730
and this time again,

00:01:57.730 --> 00:01:58.040
See,

00:01:58.040 --> 00:02:00.180
I got the or put off the function.

00:02:00.180 --> 00:02:04.470
Now the good thing about the function is I can call this any number off times.

00:02:04.470 --> 00:02:05.170
For example,

00:02:05.170 --> 00:02:09.830
I find these four times I'll save it and go back to the command prompt.

00:02:09.830 --> 00:02:10.620
Run this.

00:02:10.620 --> 00:02:14.880
You'll see that the same output is printed multiple times.

00:02:14.880 --> 00:02:16.860
Let me get it out of this.

00:02:16.860 --> 00:02:19.320
I know that we have a function.

00:02:19.320 --> 00:02:24.620
Let's look at more function features so function when you call.

00:02:24.620 --> 00:02:29.990
This bracket here can be used for crossings on values that can be received with some

00:02:29.990 --> 00:02:31.350
variables over here.

00:02:31.350 --> 00:02:33.400
And these are car perimeters,

00:02:33.400 --> 00:02:34.490
for example.

00:02:34.490 --> 00:02:38.760
That's coming this one let's say we want except a number from the user,

00:02:38.760 --> 00:02:40.320
which represents an year.

00:02:40.320 --> 00:02:43.350
And then we want to check if that's a Libya or not,

00:02:43.350 --> 00:02:45.510
and get a really pure issued,

00:02:45.510 --> 00:02:51.290
written true yells We want to return false on the way you write the function is death

00:02:51.290 --> 00:02:54.340
followed by he's understood leap.

00:02:54.340 --> 00:02:55.530
This is the neighborhood function,

00:02:55.530 --> 00:02:56.660
which whatever you want,

00:02:56.660 --> 00:02:57.240
you can heal.

00:02:57.240 --> 00:02:59.710
But in caliphate contains multiple words.

00:02:59.710 --> 00:03:01.850
We use an underscore Over here.

00:03:01.850 --> 00:03:07.010
You can also use watch going camel caps where the first letter will be small and then the

00:03:07.010 --> 00:03:10.340
second world would be capitalized letter here.

00:03:10.340 --> 00:03:14.020
But this is a practice that has been followed in Vita.

00:03:14.020 --> 00:03:18.590
So we're gonna say easily and then we have to pass in in years,

00:03:18.590 --> 00:03:22.810
I'm gonna declare a variable for here and then start a block on.

00:03:22.810 --> 00:03:24.470
I can check your ease.

00:03:24.470 --> 00:03:29.110
Year model is 400 is equal to zero,

00:03:29.110 --> 00:03:36.990
which means the year is a multiple of 400 like 2000 or 2400 etcetera off.

00:03:36.990 --> 00:03:39.230
And then I can check years.

00:03:39.230 --> 00:03:42.750
Model ISS four is equals to zero,

00:03:42.750 --> 00:03:50.230
while year modelers 100 not equals 20 So there should be an on operator over here.

00:03:50.230 --> 00:03:55.310
So either this condition is true Are the combination of this condition is true?

00:03:55.310 --> 00:03:57.630
Then we would like Toa return.

00:03:57.630 --> 00:03:58.450
Cool here.

00:03:58.450 --> 00:03:59.990
Yes,

00:03:59.990 --> 00:04:02.450
we simply would like to return false.

00:04:02.450 --> 00:04:04.640
But if you want to simplify days,

00:04:04.640 --> 00:04:08.980
you can see that the condition itself evaluates to true are falls.

00:04:08.980 --> 00:04:09.670
And in case,

00:04:09.670 --> 00:04:10.400
if it's true,

00:04:10.400 --> 00:04:11.520
we are returning through.

00:04:11.520 --> 00:04:12.590
Indicated that it's false,

00:04:12.590 --> 00:04:13.680
were attending faults.

00:04:13.680 --> 00:04:18.500
So why don't we just return the value off this expression itself?

00:04:18.500 --> 00:04:19.110
Somewhere?

00:04:19.110 --> 00:04:19.850
Curtis,

00:04:19.850 --> 00:04:24.520
I get it off this and simply return on this particular expression,

00:04:24.520 --> 00:04:28.170
which is gonna be eventually true or false to check.

00:04:28.170 --> 00:04:29.290
If this is okay,

00:04:29.290 --> 00:04:30.860
we're gonna just ask the user.

00:04:30.860 --> 00:04:32.090
Enter a numb.

00:04:32.090 --> 00:04:38.760
So I will say number equals toe give off input and in a year,

00:04:38.760 --> 00:04:41.700
and then once the number is entered,

00:04:41.700 --> 00:04:46.940
I can check if is leap off the number that I can save print.

00:04:46.940 --> 00:04:52.550
There are 366 days in the input here.

00:04:52.550 --> 00:04:55.280
Yes,

00:04:55.280 --> 00:04:55.870
I can think.

00:04:55.870 --> 00:05:04.980
They say that there are 365 this in the import here.

00:05:04.980 --> 00:05:07.650
So some message.

00:05:07.650 --> 00:05:08.680
I'm gonna say this.

00:05:08.680 --> 00:05:12.000
Go to the command grunt on the same program once again.

00:05:12.000 --> 00:05:13.460
And this time it last me.

00:05:13.460 --> 00:05:18.650
Enter the year that sir give 1996 which happens to be a legal.

00:05:18.650 --> 00:05:21.030
And it said there are 3 66 days.

00:05:21.030 --> 00:05:25.130
And if it type 1997 which is not a Libya,

00:05:25.130 --> 00:05:26.320
for obvious reasons,

00:05:26.320 --> 00:05:34.490
you should simply say 3 65 Let's give it a try for 2000 which is a leap year 2100 is not a

00:05:34.490 --> 00:05:37.750
leap year 2400 east again,

00:05:37.750 --> 00:05:38.270
a leap here.

00:05:38.270 --> 00:05:45.020
So this is how you can write a function and pass on a perimeter which is receiving over

00:05:45.020 --> 00:05:45.480
here.

00:05:45.480 --> 00:05:47.150
While deceiving,

00:05:47.150 --> 00:05:49.510
you have to declare variables while passing.

00:05:49.510 --> 00:05:54.210
You can even directly past a number or an actual value itself.

00:05:54.210 --> 00:05:58.740
A function can be called from another functions.

00:05:58.740 --> 00:05:59.880
For example,

00:05:59.880 --> 00:06:06.110
let's write a function that accepts two numbers you're and Mont Andi returns the number of

00:06:06.110 --> 00:06:08.940
days in the given month off the here.

00:06:08.940 --> 00:06:13.020
So let's come in this out and then we're gonna write another function.

00:06:13.020 --> 00:06:17.060
It's called as Max Days in Mom.

00:06:17.060 --> 00:06:18.360
Of course,

00:06:18.360 --> 00:06:23.470
we also want to accept the month along with that year and then we want to know.

00:06:23.470 --> 00:06:25.580
Check what month is this?

00:06:25.580 --> 00:06:27.940
If this happens to be February,

00:06:27.940 --> 00:06:31.450
then you are to check whether it's the Libya or not.

00:06:31.450 --> 00:06:34.370
If it's a leader than 29 days other ways.

00:06:34.370 --> 00:06:37.050
28 days for other Munns,

00:06:37.050 --> 00:06:38.960
either 30 or 31 with Britain.

00:06:38.960 --> 00:06:41.280
So let's begin by typing here.

00:06:41.280 --> 00:06:45.240
If month guess equals toe,

00:06:45.240 --> 00:06:48.530
then we want to return 29.

00:06:48.530 --> 00:06:55.610
If is live off here and then I can say else 28.

00:06:55.610 --> 00:07:02.150
So this is a one liner if condition where we're going to return 29 if this condition is too

00:07:02.150 --> 00:07:02.150
.

00:07:02.150 --> 00:07:04.400
But if this condition sales,

00:07:04.400 --> 00:07:05.770
then this is gonna be the written Well,

00:07:05.770 --> 00:07:07.450
likewise.

00:07:07.450 --> 00:07:10.950
We can say you live month A.

00:07:10.950 --> 00:07:14.330
That's a in June,

00:07:14.330 --> 00:07:16.640
September on number.

00:07:16.640 --> 00:07:18.790
Then I can say return 40.

00:07:18.790 --> 00:07:20.270
Yes,

00:07:20.270 --> 00:07:22.280
we're gonna see clearly done 31.

00:07:22.280 --> 00:07:23.570
Of course,

00:07:23.570 --> 00:07:26.400
If the month or the year is wrong,

00:07:26.400 --> 00:07:29.260
we might want toe cause a problem.

00:07:29.260 --> 00:07:30.830
So that's what we can do here.

00:07:30.830 --> 00:07:31.670
For example,

00:07:31.670 --> 00:07:32.600
I can say,

00:07:32.600 --> 00:07:36.440
if month is less than one are,

00:07:36.440 --> 00:07:38.950
month is greater than 12.

00:07:38.950 --> 00:07:40.520
Then I can say here,

00:07:40.520 --> 00:07:41.150
terrorism,

00:07:41.150 --> 00:07:42.550
invalid value.

00:07:42.550 --> 00:07:45.750
So I cannot return any value over here.

00:07:45.750 --> 00:07:51.850
But instead I can cause a problem by using a key were called Race and then an editor object

00:07:51.850 --> 00:07:52.600
and I loved.

00:07:52.600 --> 00:07:53.630
It can be simply given,

00:07:53.630 --> 00:07:56.110
like exception with a message,

00:07:56.110 --> 00:07:56.660
a message,

00:07:56.660 --> 00:07:57.240
for example,

00:07:57.240 --> 00:08:04.200
I can say invalid month on that I can say it must be between one.

00:08:04.200 --> 00:08:06.100
And likewise,

00:08:06.100 --> 00:08:07.120
I can also say,

00:08:07.120 --> 00:08:10.130
If you're is less than zero,

00:08:10.130 --> 00:08:13.400
then I can say race exception.

00:08:13.400 --> 00:08:15.240
And then I can give them a thing that,

00:08:15.240 --> 00:08:22.930
in granted year must be more than oh are equals to one.

00:08:22.930 --> 00:08:27.730
To test this were to accept the month and the year.

00:08:27.730 --> 00:08:34.010
Let's assume and equals toe bitten off put in the month.

00:08:34.010 --> 00:08:42.650
And then I can say why people still went off input and you and then I said,

00:08:42.650 --> 00:08:45.780
is equals toe Max This in month.

00:08:45.780 --> 00:08:46.240
Um,

00:08:46.240 --> 00:08:47.010
Kamel Why?

00:08:47.010 --> 00:08:49.850
And I want to print that by typing print?

00:08:49.850 --> 00:08:54.430
There are 4 70 days in the month,

00:08:54.430 --> 00:09:02.210
slash year as personally slashed person be that I'm gonna get three values here days Yeah.

00:09:02.210 --> 00:09:02.950
Why?

00:09:02.950 --> 00:09:06.610
So this is the calculated value which is gonna be printed here.

00:09:06.610 --> 00:09:07.950
There are 31 days,

00:09:07.950 --> 00:09:14.450
and this is the Yemen by which will be printed over here like one slash 2019.

00:09:14.450 --> 00:09:16.300
So I'm gonna say this Good luck,

00:09:16.300 --> 00:09:16.530
man.

00:09:16.530 --> 00:09:20.300
Prompt on a run the same program once again,

00:09:20.300 --> 00:09:21.550
enter a month.

00:09:21.550 --> 00:09:24.380
Let's give it a January 2019.

00:09:24.380 --> 00:09:27.820
And he concedes that there are 31 days in the month here,

00:09:27.820 --> 00:09:35.110
one slash total 90 If I type February total in 19 which is not a leap year search simply

00:09:35.110 --> 00:09:36.650
said there are 28 days.

00:09:36.650 --> 00:09:43.090
But if I'm gonna go and take two on 2020 which is supposed to be a leader,

00:09:43.090 --> 00:09:46.320
you can see that it says there are 29 days.

00:09:46.320 --> 00:09:46.640
Of course,

00:09:46.640 --> 00:09:51.050
if I'm gonna go with April any year for that matter,

00:09:51.050 --> 00:09:52.860
it's gonna just say here 30 days.

00:09:52.860 --> 00:09:53.620
However,

00:09:53.620 --> 00:09:55.790
if I give an invalid import,

00:09:55.790 --> 00:09:56.370
for example,

00:09:56.370 --> 00:09:58.050
I think you're 100 for a month,

00:09:58.050 --> 00:09:59.630
zero for a year.

00:09:59.630 --> 00:10:02.300
The 1st 1 itself fades,

00:10:02.300 --> 00:10:03.980
so it's gonna give an error.

00:10:03.980 --> 00:10:06.070
And it is that exception.

00:10:06.070 --> 00:10:12.430
Invalid month must be between one and 12 so it never assigned a value back to this

00:10:12.430 --> 00:10:18.130
particular variable because this cost a problem because of this particular statement and

00:10:18.130 --> 00:10:22.250
that this problem never allowed us to go forward.

00:10:22.250 --> 00:10:24.470
So this is God exceptions.

00:10:24.470 --> 00:10:29.600
We will look into exceptions in great detail when we goto another topic called exception

00:10:29.600 --> 00:10:29.970
handling.

