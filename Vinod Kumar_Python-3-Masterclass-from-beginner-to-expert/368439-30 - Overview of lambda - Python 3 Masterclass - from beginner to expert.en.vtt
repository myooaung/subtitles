WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.050
my tongue is a functional programming language.

00:00:03.050 --> 00:00:08.360
What it means is that function is an object in Brighton,

00:00:08.360 --> 00:00:14.790
just like any other objects that you can pass toe a function so functions themselves can

00:00:14.790 --> 00:00:15.780
also be parts,

00:00:15.780 --> 00:00:20.490
as arguments to functions as well as they can be written from other functions.

00:00:20.490 --> 00:00:26.320
Also vital also provides a very simple representation off a function called Lambda

00:00:26.320 --> 00:00:27.150
Expressions.

00:00:27.150 --> 00:00:29.260
So let's have an overview off the same.

00:00:29.260 --> 00:00:35.980
Now I'm in a fight on Shell where I can define a function called Hello,

00:00:35.980 --> 00:00:42.770
which takes a name of a person and then should written a string that is hollow,

00:00:42.770 --> 00:00:43.420
that person.

00:00:43.420 --> 00:00:47.240
So I'm gonna give a couple of spaces here and then say,

00:00:47.240 --> 00:00:47.810
Richard,

00:00:47.810 --> 00:00:50.970
probably a hello message.

00:00:50.970 --> 00:00:52.360
Plus me.

00:00:52.360 --> 00:00:54.210
They hear type.

00:00:54.210 --> 00:00:54.860
Hello,

00:00:54.860 --> 00:00:55.860
you will see that it is.

00:00:55.860 --> 00:00:56.650
It's a function.

00:00:56.650 --> 00:00:59.040
And in order to call the same,

00:00:59.040 --> 00:01:06.120
I can say here Hello on then supply me and I should see Hello vino as return value.

00:01:06.120 --> 00:01:06.430
Now,

00:01:06.430 --> 00:01:11.040
since the function has just a bunch off one or more arguments,

00:01:11.040 --> 00:01:12.700
that's just a single line of statement,

00:01:12.700 --> 00:01:14.840
which is a return value here Now,

00:01:14.840 --> 00:01:20.610
in case if there is a requirement off me supplying dysfunction as an argument toe another

00:01:20.610 --> 00:01:21.150
function.

00:01:21.150 --> 00:01:24.990
Then I can create a Lambda Expressions instead off a function.

00:01:24.990 --> 00:01:25.330
Hello.

00:01:25.330 --> 00:01:26.620
To do the same thing,

00:01:26.620 --> 00:01:29.080
you have to create a variable.

00:01:29.080 --> 00:01:29.610
Let's say,

00:01:29.610 --> 00:01:30.290
for example,

00:01:30.290 --> 00:01:31.510
they start with colleges.

00:01:31.510 --> 00:01:38.420
Welcome and say Welcome equals two Landau and then the argument off the function.

00:01:38.420 --> 00:01:38.880
In this case,

00:01:38.880 --> 00:01:41.330
it's the name and then Colon.

00:01:41.330 --> 00:01:46.760
What is the return value off this particular lander expression our land A function.

00:01:46.760 --> 00:01:50.720
So I learned to say a hello plus me.

00:01:50.720 --> 00:01:53.850
Now notice that because of the keyword Landau,

00:01:53.850 --> 00:01:55.880
this becomes the function argument,

00:01:55.880 --> 00:02:00.980
just like how we have here and whatever is followed after the colon.

00:02:00.980 --> 00:02:05.260
This is the return value from this particular Lambda function.

00:02:05.260 --> 00:02:06.710
Unlike regular phone change,

00:02:06.710 --> 00:02:08.790
where I can have hundreds of lines,

00:02:08.790 --> 00:02:09.270
of course,

00:02:09.270 --> 00:02:12.050
and then optionally I can return a value.

00:02:12.050 --> 00:02:17.180
Lambda expressions have zero more perimeters and exactly one expression,

00:02:17.180 --> 00:02:19.850
which is considered as a return statement.

00:02:19.850 --> 00:02:22.660
So if I go on say type welcome,

00:02:22.660 --> 00:02:27.800
you will still see that it's a function just like the hello and then I can call here as

00:02:27.800 --> 00:02:31.230
welcome on then probably a name,

00:02:31.230 --> 00:02:33.570
and I get exactly same output.

00:02:33.570 --> 00:02:34.080
Hello.

00:02:34.080 --> 00:02:40.350
We know the practical uses off Lambda expressions are in specific functions where they're

00:02:40.350 --> 00:02:42.940
actually going to take other functions.

00:02:42.940 --> 00:02:44.010
As an example,

00:02:44.010 --> 00:02:45.010
let's have a look at it.

00:02:45.010 --> 00:02:50.630
The function gold salt off the list class so I could take your help list.

00:02:50.630 --> 00:02:51.420
Brossard.

00:02:51.420 --> 00:02:53.260
And if a press enter,

00:02:53.260 --> 00:02:58.250
you'll see that it takes here a second argument called Key,

00:02:58.250 --> 00:03:00.590
which is nothing but a function.

00:03:00.590 --> 00:03:03.480
It is not showing me additional details about this,

00:03:03.480 --> 00:03:07.070
but this is a function that we can supply.

00:03:07.070 --> 00:03:08.590
Similarly,

00:03:08.590 --> 00:03:13.450
the sordid global function also has key as the perimeter.

00:03:13.450 --> 00:03:15.380
As you can see that there is a key here.

00:03:15.380 --> 00:03:17.250
Apart from the collection itself,

00:03:17.250 --> 00:03:19.070
you can supply a key,

00:03:19.070 --> 00:03:20.700
which happens to be a function.

00:03:20.700 --> 00:03:24.470
There are few more functions which take functions as arguments.

00:03:24.470 --> 00:03:25.750
Here is one more.

00:03:25.750 --> 00:03:28.690
So there is a function called Man,

00:03:28.690 --> 00:03:35.750
which is actually going toe take a function as an argument and then a collection off values

00:03:35.750 --> 00:03:37.190
that it does matter.

00:03:37.190 --> 00:03:42.110
Another example is filter again.

00:03:42.110 --> 00:03:46.850
You can see that there is a function are known as the argument to the filter and then a

00:03:46.850 --> 00:03:49.410
collection of values that we can supply over here.

00:03:49.410 --> 00:03:51.510
And there's another function called radios,

00:03:51.510 --> 00:03:54.950
which we will see in the next few videos

