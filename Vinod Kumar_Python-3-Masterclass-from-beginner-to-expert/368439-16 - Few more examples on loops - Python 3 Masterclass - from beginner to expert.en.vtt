WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.340
in this.

00:00:01.340 --> 00:00:01.800
Listen,

00:00:01.800 --> 00:00:04.910
let's understand when you use wide loop and will do its part,

00:00:04.910 --> 00:00:07.840
let's begin with an example off factorial.

00:00:07.840 --> 00:00:09.880
If you want to find the factory,

00:00:09.880 --> 00:00:10.120
love,

00:00:10.120 --> 00:00:10.360
say,

00:00:10.360 --> 00:00:10.980
for example,

00:00:10.980 --> 00:00:11.390
five.

00:00:11.390 --> 00:00:15.110
We have to multiply all the numbers between one and five.

00:00:15.110 --> 00:00:17.100
So we have a Lord limit.

00:00:17.100 --> 00:00:22.120
We have an upper limit now in this area we have to go with follow because we know exactly

00:00:22.120 --> 00:00:23.810
how many times the look should repeat.

00:00:23.810 --> 00:00:26.210
So that's except a number from the user.

00:00:26.210 --> 00:00:27.560
By typing non reports,

00:00:27.560 --> 00:00:29.570
go in tow input.

00:00:29.570 --> 00:00:31.070
Enter a number.

00:00:31.070 --> 00:00:33.680
The user would ender some number.

00:00:33.680 --> 00:00:34.690
Let's as you fight.

00:00:34.690 --> 00:00:41.530
Then I should start a for loop where I can say for I in range off one comma,

00:00:41.530 --> 00:00:42.650
one plus one.

00:00:42.650 --> 00:00:43.770
Remember,

00:00:43.770 --> 00:00:48.440
the range object does not include the last value that you're given here.

00:00:48.440 --> 00:00:51.430
So if I want to go from one to numb,

00:00:51.430 --> 00:00:53.780
then I have to say none plus one here.

00:00:53.780 --> 00:01:01.170
Then I begin a colon to indicate that there is a block so I can now assign the value off.

00:01:01.170 --> 00:01:09.150
I will start from 123 etcetera upto it's a fine and then I have to multiply toe a variable

00:01:09.150 --> 00:01:10.730
that I have not defined yet.

00:01:10.730 --> 00:01:17.060
So I will say difficult stow one which is gonna be the factorial and say f start equals toe

00:01:17.060 --> 00:01:17.060
.

00:01:17.060 --> 00:01:18.960
I were eyes the loop variable.

00:01:18.960 --> 00:01:20.740
Once the loop is complete,

00:01:20.740 --> 00:01:26.470
I can come out of the group and then against a print factorial off personally east percent

00:01:26.470 --> 00:01:30.120
de where the first person to D is nothing,

00:01:30.120 --> 00:01:31.860
but they import a little numb.

00:01:31.860 --> 00:01:36.590
The 2nd 1 is nothing but the factorial that has been calculated,

00:01:36.590 --> 00:01:38.800
which is F that saved this.

00:01:38.800 --> 00:01:39.920
Go to the terminal,

00:01:39.920 --> 00:01:44.880
execute the command by country on Mac or fight on on Windows.

00:01:44.880 --> 00:01:45.970
And then I can say,

00:01:45.970 --> 00:01:51.030
is 09 People will ask me the number I'm gonna say five.

00:01:51.030 --> 00:01:56.100
And then it's going to say a factor of five is 1 20 I can run it again and I can give

00:01:56.100 --> 00:01:56.950
another number.

00:01:56.950 --> 00:01:59.580
And then I get the factory law bad particular number.

00:01:59.580 --> 00:02:04.710
So the preferred loop in this case is a far Lou because we know exactly how many times the

00:02:04.710 --> 00:02:04.970
looks,

00:02:04.970 --> 00:02:05.580
your trip it.

00:02:05.580 --> 00:02:08.560
Let's take another example off Abenaki.

00:02:08.560 --> 00:02:13.470
Siri's first let's create a fine the extent dot be well,

00:02:13.470 --> 00:02:22.460
Fibonacci series is nothing but a Siri's that start from zero and one and then the total

00:02:22.460 --> 00:02:23.530
number would be done.

00:02:23.530 --> 00:02:25.120
Some off the previous two numbers,

00:02:25.120 --> 00:02:26.300
which happens to be one.

00:02:26.300 --> 00:02:28.800
The next number is gonna be some of the previous summer,

00:02:28.800 --> 00:02:35.550
which is two than 358 13 21 and so on and so forth.

00:02:35.550 --> 00:02:41.070
Suppose if I want to bring the Fibonacci series upto input number.

00:02:41.070 --> 00:02:41.360
Let's say,

00:02:41.360 --> 00:02:42.000
for example,

00:02:42.000 --> 00:02:44.150
the user wants all the Fibonacci numbers up.

00:02:44.150 --> 00:02:44.860
2000.

00:02:44.860 --> 00:02:50.520
We don't know how many times the loop should repeat because we don't have exact number off

00:02:50.520 --> 00:02:50.520
.

00:02:50.520 --> 00:02:51.750
Figures are key elements.

00:02:51.750 --> 00:02:56.480
We have to keep generating the Benaki element and then check if we have crossed the limit

00:02:56.480 --> 00:02:57.050
or not.

00:02:57.050 --> 00:03:02.400
So let's accept forced the limit where the user is gonna enter something like 100.

00:03:02.400 --> 00:03:06.860
So we take heat input and a limit.

00:03:06.860 --> 00:03:11.550
I ascend the first of two elements off the people.

00:03:11.550 --> 00:03:11.860
Okay.

00:03:11.860 --> 00:03:13.780
Siri's Toe variables,

00:03:13.780 --> 00:03:15.170
which is a common B,

00:03:15.170 --> 00:03:16.470
equals 20 comma.

00:03:16.470 --> 00:03:23.400
One where a become zero b becomes one in the order and then I want to say they are C equals

00:03:23.400 --> 00:03:24.880
toe a plus B.

00:03:24.880 --> 00:03:31.080
But then I have to check whether see is less than limit in your printed.

00:03:31.080 --> 00:03:33.290
Then you continue to do the same thing,

00:03:33.290 --> 00:03:35.680
and in caliphate is exceeded the limit.

00:03:35.680 --> 00:03:36.780
We want to stop it.

00:03:36.780 --> 00:03:39.920
So what I can do here that can check while see,

00:03:39.920 --> 00:03:42.570
is less than R equals toe limit.

00:03:42.570 --> 00:03:44.490
And then I got to say print,

00:03:44.490 --> 00:03:45.450
See?

00:03:45.450 --> 00:03:46.170
And then,

00:03:46.170 --> 00:03:49.430
if I want toe the next to number in the same line,

00:03:49.430 --> 00:03:51.600
I can say they are End equals toe,

00:03:51.600 --> 00:03:53.320
probably a comma.

00:03:53.320 --> 00:03:54.740
So basically,

00:03:54.740 --> 00:03:56.740
instead of bringing a new land character,

00:03:56.740 --> 00:03:58.790
it's gonna put a comma on a space.

00:03:58.790 --> 00:04:05.560
And then I can say here eight equals two B and then b equals to see once again and say See

00:04:05.560 --> 00:04:10.860
called still a plus B On This is the new film Benaki element of generating.

00:04:10.860 --> 00:04:13.710
We go and check that with the limit once again.

00:04:13.710 --> 00:04:15.800
And if that is less than or equal to the limit,

00:04:15.800 --> 00:04:17.530
it's going to continue now.

00:04:17.530 --> 00:04:19.970
This assignment can be for the reduced toe.

00:04:19.970 --> 00:04:22.750
A comma B equals toe become a C.

00:04:22.750 --> 00:04:25.280
Now let's go and check this out.

00:04:25.280 --> 00:04:31.830
I'll save this Goto mind front and then run the program right on three.

00:04:31.830 --> 00:04:33.510
He expended Be Well,

00:04:33.510 --> 00:04:34.760
that's Ender.

00:04:34.760 --> 00:04:43.620
I wanted up 200 you can see that bigger All the numbers from 1 to 358 upto less than a

00:04:43.620 --> 00:04:44.540
record 200.

00:04:44.540 --> 00:04:49.210
But notice that the 1st 2 numbers were not included because we did not print that.

00:04:49.210 --> 00:04:55.000
So what we have to do is we also have to print a and B seven,

00:04:55.000 --> 00:04:56.750
Type your e on,

00:04:56.750 --> 00:05:02.870
then come on a comma symbol and then be on another comma symbol.

00:05:02.870 --> 00:05:06.310
And then I don't want this toe print and new lines.

00:05:06.310 --> 00:05:10.570
So I will say any equals toe applying string saved this.

00:05:10.570 --> 00:05:12.000
Go back to the command front,

00:05:12.000 --> 00:05:20.800
Run this once again again it 800 this emergency regard 01123 upto 89.

00:05:20.800 --> 00:05:23.860
And that's because the next number would have been more than 100.

00:05:23.860 --> 00:05:25.690
It's gonna be that some of these two number,

00:05:25.690 --> 00:05:27.060
which is definitely more than 100.

00:05:27.060 --> 00:05:27.890
Also,

00:05:27.890 --> 00:05:31.120
you can see that the prompt is also printed in the same line.

00:05:31.120 --> 00:05:31.600
So what?

00:05:31.600 --> 00:05:32.070
We can do it.

00:05:32.070 --> 00:05:35.450
We can just come order and then just add a dummy prince statement.

00:05:35.450 --> 00:05:36.890
It's steer the screen,

00:05:36.890 --> 00:05:38.440
run this command once more,

00:05:38.440 --> 00:05:44.010
and then I got up to 100 you can see we got all the numbers and then the prompt is printed

00:05:44.010 --> 00:05:44.930
in the next line.

00:05:44.930 --> 00:05:46.270
So bottom line,

00:05:46.270 --> 00:05:49.130
when you know how many times the look should repeat,

00:05:49.130 --> 00:05:50.890
go with a far look.

00:05:50.890 --> 00:05:56.580
And when you don't know on your loop exit criteria is based on some kind of condition,

00:05:56.580 --> 00:05:58.110
and that is when you go with that,

00:05:58.110 --> 00:05:58.800
why you?

