WEBVTT
1
00:00:01.140 --> 00:00:07.560
Hi, this is Craig Golightly, and welcome to Managing and Operating Databases.

2
00:00:07.560 --> 00:00:10.920
Once you've deployed your databases,

3
00:00:10.920 --> 00:00:15.340
you then need to keep them in working order with regular maintenance.

4
00:00:15.340 --> 00:00:19.690
We'll cover some differences between managed and unmanaged

5
00:00:19.690 --> 00:00:24.330
services in terms of what you need to do, compared to what

6
00:00:24.330 --> 00:00:26.530
the service does for you.

7
00:00:26.530 --> 00:00:30.720
We'll also discuss the importance of understanding your recovery

8
00:00:30.720 --> 00:00:35.440
requirements when designing backup and restore.

9
00:00:35.440 --> 00:00:38.730
There are several things that need to be taken care of to keep

10
00:00:38.730 --> 00:00:42.140
your database in good operating condition.

11
00:00:42.140 --> 00:00:43.240
For example,

12
00:00:43.240 --> 00:00:47.420
ensuring enough free disk space and keeping your database engine

13
00:00:47.420 --> 00:00:51.540
up to date with both major and minor updates.

14
00:00:51.540 --> 00:00:55.290
You'll also need to manage log files and decide on maintenance

15
00:00:55.290 --> 00:00:59.840
windows to perform any potentially disruptive tasks.

16
00:00:59.840 --> 00:01:02.910
As you consider your database design and select which

17
00:01:02.910 --> 00:01:06.050
service is the best fit for your requirements,

18
00:01:06.050 --> 00:01:10.450
be sure to factor in how much of the database maintenance and operations

19
00:01:10.450 --> 00:01:15.210
burden you want to keep as your responsibility versus how much you want

20
00:01:15.210 --> 00:01:18.080
the database service to take care of for you.

21
00:01:18.080 --> 00:01:23.240
Within AWS, you have a range of options for how this is managed.

22
00:01:23.240 --> 00:01:24.370
For example,

23
00:01:24.370 --> 00:01:27.760
you can provision EC2 machines and create your own

24
00:01:27.760 --> 00:01:30.240
machine image for your database engine,

25
00:01:30.240 --> 00:01:33.310
handle clustering and routing using load balancers,

26
00:01:33.310 --> 00:01:36.280
implement your monitoring system of choice,

27
00:01:36.280 --> 00:01:38.480
and manage updates and patches.

28
00:01:38.480 --> 00:01:42.240
This is similar to how you would manage assets in a data center.

29
00:01:42.240 --> 00:01:46.600
The biggest difference is that you would be managing cloud resources using

30
00:01:46.600 --> 00:01:51.840
AWS APIs instead of physical resources in a data center.

31
00:01:51.840 --> 00:01:55.400
This arrangement provides you the greatest control over database

32
00:01:55.400 --> 00:01:59.910
configuration and how and when updates are performed on your cluster,

33
00:01:59.910 --> 00:02:04.570
since most maintenance and operational tasks are your responsibility.

34
00:02:04.570 --> 00:02:07.180
On the other end of the spectrum,

35
00:02:07.180 --> 00:02:11.200
you could use a fully managed database service, where you

36
00:02:11.200 --> 00:02:15.150
simply use the database and the service adapts to your usage

37
00:02:15.150 --> 00:02:18.400
patterns. Scaling servers up and down,

38
00:02:18.400 --> 00:02:21.910
performing updates and patches, high availability,

39
00:02:21.910 --> 00:02:27.840
monitoring, and even backups are all built into the service and managed for you.

40
00:02:27.840 --> 00:02:30.630
While you can still provide certain configuration values

41
00:02:30.630 --> 00:02:34.070
for your database, you won't be able to control every

42
00:02:34.070 --> 00:02:36.980
aspect of how the database operates.

43
00:02:36.980 --> 00:02:38.080
However,

44
00:02:38.080 --> 00:02:42.420
this arrangement requires much lower maintenance from you because the

45
00:02:42.420 --> 00:02:46.970
service is handling many of the operational and maintenance activities.

46
00:02:46.970 --> 00:02:50.520
Somewhere in the middle are services like RDS,

47
00:02:50.520 --> 00:02:54.980
which handles some aspects of the operations and maintenance but also give you

48
00:02:54.980 --> 00:02:58.360
several options for controlling database engine settings,

49
00:02:58.360 --> 00:03:03.920
high availability configuration, and selecting maintenance windows for updates.

50
00:03:03.920 --> 00:03:07.640
You're also responsible for monitoring log file retention,

51
00:03:07.640 --> 00:03:10.940
disk space, and monitoring.

52
00:03:10.940 --> 00:03:15.090
Wherever you end up on the spectrum of maintenance responsibilities,

53
00:03:15.090 --> 00:03:20.000
be sure to become familiar with management options for the AWS database

54
00:03:20.000 --> 00:03:25.580
services you use. Again, courses for a particular database service will go

55
00:03:25.580 --> 00:03:28.790
into more detail for that particular service.

56
00:03:28.790 --> 00:03:31.760
Some tasks can be accomplished with no downtime,

57
00:03:31.760 --> 00:03:35.340
while others require the database to be offline.

58
00:03:35.340 --> 00:03:40.440
For most database update tasks, you should utilize a maintenance window.

59
00:03:40.440 --> 00:03:44.520
Maintenance windows are preset days and times where the database could

60
00:03:44.520 --> 00:03:49.000
have slower performance or be offline due to updates and should be

61
00:03:49.000 --> 00:03:52.700
scheduled when database activity is slowest.

62
00:03:52.700 --> 00:03:58.240
For most organizations, this is typically during nighttime or weekend hours.

63
00:03:58.240 --> 00:04:00.760
Maintenance windows are well published with

64
00:04:00.760 --> 00:04:03.430
proactive communication to all users,

65
00:04:03.430 --> 00:04:07.350
reminding them of upcoming activity during the maintenance window

66
00:04:07.350 --> 00:04:11.460
and contact information if they need support with anything after a

67
00:04:11.460 --> 00:04:14.940
maintenance task has been performed.

68
00:04:14.940 --> 00:04:17.950
Free disk space isn't talking about a sale on

69
00:04:17.950 --> 00:04:20.720
database storage that has zero cost.

70
00:04:20.720 --> 00:04:23.870
The free we're talking about here is open or

71
00:04:23.870 --> 00:04:27.140
available disk space for your database.

72
00:04:27.140 --> 00:04:31.020
Managing free disk space can range from a nonissue with managed

73
00:04:31.020 --> 00:04:35.970
services that have virtually infinite storage, to a major undertaking

74
00:04:35.970 --> 00:04:40.660
if you're using instance storage and need to transition to entirely

75
00:04:40.660 --> 00:04:45.740
new instances with more disk space. Understanding your expected data

76
00:04:45.740 --> 00:04:50.070
growth can help you minimize the need for performing major maintenance

77
00:04:50.070 --> 00:04:52.240
to add disk space.

78
00:04:52.240 --> 00:04:56.500
Proper monitoring of free disk space is also essential to ensure you

79
00:04:56.500 --> 00:05:00.340
don't run out of disk space during normal operations.

80
00:05:00.340 --> 00:05:01.710
On the other hand,

81
00:05:01.710 --> 00:05:07.840
overprovisioning could result in unnecessary charges to your monthly AWS bill.

82
00:05:07.840 --> 00:05:11.370
So how much free disk space you need to maintain will

83
00:05:11.370 --> 00:05:15.580
change based on your application. Finally,

84
00:05:15.580 --> 00:05:21.340
let's look at some possible options for maintaining database log files. Again,

85
00:05:21.340 --> 00:05:26.940
depending on the AWS database service you use, these options may not apply.

86
00:05:26.940 --> 00:05:28.500
If you're running in RDS,

87
00:05:28.500 --> 00:05:33.540
you'll have specific configuration available to manage your log files.

88
00:05:33.540 --> 00:05:38.540
CloudTrail is a service that logs calls to AWS APIs.

89
00:05:38.540 --> 00:05:44.940
Some organizations utilize CloudTrail logs to help audit database activity.

90
00:05:44.940 --> 00:05:49.550
CloudWatch and CloudWatch Events can be used in a variety of ways

91
00:05:49.550 --> 00:05:52.940
for monitoring your database and logging activity.

92
00:05:52.940 --> 00:05:56.150
You can also leverage services such as Simple Queue

93
00:05:56.150 --> 00:06:00.230
Service, SQS; Simple Notification Service,

94
00:06:00.230 --> 00:06:10.000
SNS; and Simple Storage Service, S3, to customize how you manage database log files.

