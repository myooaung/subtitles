WEBVTT
1
00:00:01.040 --> 00:00:02.060
Earlier in the course,

2
00:00:02.060 --> 00:00:06.140
we discussed how Amazon CloudWatch can assist you in maintaining

3
00:00:06.140 --> 00:00:08.910
and gaining insights from your database logs,

4
00:00:08.910 --> 00:00:10.750
including query logging.

5
00:00:10.750 --> 00:00:15.600
For maintaining an audit trail, you may consider using Amazon CloudTrail.

6
00:00:15.600 --> 00:00:19.780
CloudTrail records actions taken in your AWS account.

7
00:00:19.780 --> 00:00:23.060
This allows you to gain visibility into what is going on

8
00:00:23.060 --> 00:00:25.940
across the various services you are using.

9
00:00:25.940 --> 00:00:30.360
You can set up alerts when certain actions happen in your account and even

10
00:00:30.360 --> 00:00:35.140
configure automated responses when certain events occur.

11
00:00:35.140 --> 00:00:39.740
CloudTrail can provide valuable information for several different use cases.

12
00:00:39.740 --> 00:00:42.140
First, compliance auditing.

13
00:00:42.140 --> 00:00:45.160
You can configure CloudTrail to capture all events in your

14
00:00:45.160 --> 00:00:48.690
AWS account and prevent users from changing CloudTrail

15
00:00:48.690 --> 00:00:50.920
events or turning off the service,

16
00:00:50.920 --> 00:00:55.740
ensuring you have a complete record of actions when it comes time to audit.

17
00:00:55.740 --> 00:00:58.240
Next, operational troubleshooting.

18
00:00:58.240 --> 00:00:59.540
When something goes wrong,

19
00:00:59.540 --> 00:01:02.870
you can work backwards to narrow down what might have caused the

20
00:01:02.870 --> 00:01:07.760
problem or if actions in one AWS service had unintentional side

21
00:01:07.760 --> 00:01:10.740
effects on another AWS service.

22
00:01:10.740 --> 00:01:13.440
Third, security analysis.

23
00:01:13.440 --> 00:01:16.940
You can identify user behavior patterns over time,

24
00:01:16.940 --> 00:01:21.740
then detect any unusual behavior that may indicate unauthorized

25
00:01:21.740 --> 00:01:25.940
infrastructure changes or excessive resource usage.

26
00:01:25.940 --> 00:01:26.800
Finally,

27
00:01:26.800 --> 00:01:30.540
not only can you detect unusual or unauthorized behavior in your

28
00:01:30.540 --> 00:01:35.040
account, you can create automation to respond to those events and

29
00:01:35.040 --> 00:01:38.540
apply any necessary remediation.

30
00:01:38.540 --> 00:01:42.490
CloudTrail tracks who is performing actions in your account,

31
00:01:42.490 --> 00:01:47.200
whether that is a user, a role, or another AWS service.

32
00:01:47.200 --> 00:01:51.120
CloudTrail records what they are doing in terms of the actual

33
00:01:51.120 --> 00:01:54.370
API call that was made to an AWS service,

34
00:01:54.370 --> 00:01:57.910
and when that call was made. The resulting who,

35
00:01:57.910 --> 00:01:58.440
what,

36
00:01:58.440 --> 00:02:06.140
and when information is packaged into a JSON file and stored in an S3 bucket.

37
00:02:06.140 --> 00:02:10.120
CloudTrail writes the logs to an S3 bucket in batches,

38
00:02:10.120 --> 00:02:14.040
so there can be a delay of several minutes between the time an

39
00:02:14.040 --> 00:02:17.240
event occurs and the time you con view it.

40
00:02:17.240 --> 00:02:22.840
You can view CloudTrail events from the CloudTrail dashboard in the AWS console.

41
00:02:22.840 --> 00:02:28.240
You can also download the event logs as a ZIP file from the S3 bucket.

42
00:02:28.240 --> 00:02:32.260
Amazon Athena allows you to query the S3 bucket directly

43
00:02:32.260 --> 00:02:35.730
with a SQLâ€‘like syntax to analyze events.

44
00:02:35.730 --> 00:02:39.460
Amazon CloudWatch integrates with CloudTrail so you can set up

45
00:02:39.460 --> 00:02:43.240
CloudWatch logs to monitor CloudTrail events.

46
00:02:43.240 --> 00:02:47.740
You can also create rules that look for certain CloudTrail events,

47
00:02:47.740 --> 00:02:53.540
then trigger a CloudWatch event when a CloudTrail event matches a rule.

48
00:02:53.540 --> 00:02:56.850
The CloudWatch event can then invoke several different targets,

49
00:02:56.850 --> 00:02:59.510
for example, an SNS topic,

50
00:02:59.510 --> 00:03:03.140
which could deliver an email notification about the event,

51
00:03:03.140 --> 00:03:06.940
or a lambda function, which could take some corrective action.

52
00:03:06.940 --> 00:03:09.570
Depending on the database services you use,

53
00:03:09.570 --> 00:03:11.680
CloudTrail can be a good addition to your

54
00:03:11.680 --> 00:03:15.540
monitoring and troubleshooting strategy.

55
00:03:15.540 --> 00:03:18.760
AWS Web Application Firewall, or WAF,

56
00:03:18.760 --> 00:03:24.940
allows you to filter traffic with rules based on any part of the web request.

57
00:03:24.940 --> 00:03:26.720
You can use managed rules,

58
00:03:26.720 --> 00:03:31.350
which are designed to protect against common threats including SQL injection,

59
00:03:31.350 --> 00:03:34.940
and are automatically updated as new issues emerge.

60
00:03:34.940 --> 00:03:40.640
You can use WAF with CloudFront, Application Load Balancers, or API Gateway.

61
00:03:40.640 --> 00:03:43.440
Depending on your database service or application,

62
00:03:43.440 --> 00:03:49.430
WAF may be a good addition to filter incoming requests.

63
00:03:49.430 --> 00:03:53.400
Amazon GuardDuty is a threat detection service that continually

64
00:03:53.400 --> 00:03:57.350
monitors events across multiple AWS data sources,

65
00:03:57.350 --> 00:04:01.680
such as, AWS CloudTrail, Amazon VPC Flow Logs,

66
00:04:01.680 --> 00:04:03.740
and DNS Logs.

67
00:04:03.740 --> 00:04:08.140
GuardDuty uses machine learning to establish a baseline for your normal

68
00:04:08.140 --> 00:04:13.340
account activity and assigns threats to a category and severity.

69
00:04:13.340 --> 00:04:17.090
You can even integrate findings into services like lambda to

70
00:04:17.090 --> 00:04:21.140
automatically take actions for remediation or prevention.

71
00:04:21.140 --> 00:04:28.000
This adds another layer of protection around your account activity to help avoid vulnerabilities.

