WEBVTT
1
00:00:01.040 --> 00:00:05.810
To understand graph databases, let's look at a simple example.

2
00:00:05.810 --> 00:00:08.340
Suppose you like a particular movie.

3
00:00:08.340 --> 00:00:11.500
You may know some other people who like the movie as well,

4
00:00:11.500 --> 00:00:16.140
and there may be other people you don't know who also like the movie.

5
00:00:16.140 --> 00:00:19.570
A social networking graph could look at multiple data points and

6
00:00:19.570 --> 00:00:24.030
relationships in determining what or who you may want to connect

7
00:00:24.030 --> 00:00:26.710
with based on your current connections.

8
00:00:26.710 --> 00:00:31.630
This pattern of using nodes and edges versus tables and keys allows

9
00:00:31.630 --> 00:00:36.240
easier exploration of patterns than having to create nested queries

10
00:00:36.240 --> 00:00:39.740
and complex joins in a relational database.

11
00:00:39.740 --> 00:00:44.730
Graph databases are a good fit for creating knowledge or identity graphs,

12
00:00:44.730 --> 00:00:47.970
fraud detection, recommendation engines, and,

13
00:00:47.970 --> 00:00:51.740
of course, social networking to name just a few.

14
00:00:51.740 --> 00:00:56.520
Amazon Neptune is a fully managed graph database that enables you to

15
00:00:56.520 --> 00:01:01.350
query billions of relationships in milliseconds. Like the other managed

16
00:01:01.350 --> 00:01:05.630
services we've seen, you get high availability with multiple read

17
00:01:05.630 --> 00:01:11.040
replicas that can scale up and down, instance monitoring and repair,

18
00:01:11.040 --> 00:01:14.040
fault tolerant, self‑healing storage,

19
00:01:14.040 --> 00:01:19.530
continuous incremental backups with point‑in‑time restore, and encryption.

20
00:01:19.530 --> 00:01:31.000
Neptune also supports open graph APIs for both Gremlin and Sparkle so you can use existing tools and code when migrating to Neptune.

