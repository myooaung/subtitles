1
00:00:05,340 --> 00:00:10,620
Hello everyone and welcome to the control flow lecture for Skala programming in this lecture.

2
00:00:10,620 --> 00:00:14,700
We're just going to be discussing if else and then else if statements.

3
00:00:14,850 --> 00:00:18,030
Let's go ahead and jump to the Adam Ed. to get started.

4
00:00:18,030 --> 00:00:18,330
All right.

5
00:00:18,330 --> 00:00:20,340
Here I am at the Adam editor.

6
00:00:20,340 --> 00:00:24,820
I've gone ahead and paste it and the commented code for the notes that go along.

7
00:00:24,840 --> 00:00:30,930
This lecture just to show the overall format of if LCF and L statements and Skala if you're coming in

8
00:00:30,930 --> 00:00:35,340
from a programming language such as Java or Python you're probably already familiar with this sort of

9
00:00:35,340 --> 00:00:36,080
concept.

10
00:00:36,150 --> 00:00:37,710
So maybe you can just review the notes.

11
00:00:37,710 --> 00:00:40,930
If this lecturer goes a little slower than you'd prefer.

12
00:00:41,130 --> 00:00:42,560
Well let's go ahead and review.

13
00:00:42,720 --> 00:00:48,150
We'll say if have some sort of boolean statement in print CS and then curly brackets and some code you

14
00:00:48,150 --> 00:00:48,750
want to run.

15
00:00:48,780 --> 00:00:52,860
If this boolean is true then you can have LCF statements stacked on top of that.

16
00:00:52,890 --> 00:00:55,270
Again a check for a boolean do something.

17
00:00:55,290 --> 00:01:00,610
If none of these Blands ends up being true we finally have or L statements curly brackets no princes

18
00:01:00,610 --> 00:01:02,420
check since it's the L statement.

19
00:01:02,580 --> 00:01:03,480
And then we do something.

20
00:01:03,480 --> 00:01:08,220
If none of the other booleans were true and as a quick note some Java developer sometimes like to put

21
00:01:08,220 --> 00:01:10,770
in semi-colons in these blocks of code.

22
00:01:10,780 --> 00:01:13,250
But developers typically omit those.

23
00:01:13,410 --> 00:01:18,930
Let's go ahead and go ahead and clear this out and get started with just some simple examples so we

24
00:01:18,930 --> 00:01:22,200
can work through north to run these examples I'm going to go ahead and click.

25
00:01:22,200 --> 00:01:28,440
Plus here to open up a new terminal and I will start my Sparke shell.

26
00:01:28,440 --> 00:01:33,840
That way we can load this Skull's script once we're ready let's go ahead and start with an if statement.

27
00:01:33,900 --> 00:01:37,440
So I will say if and we'll start at the very basics.

28
00:01:37,450 --> 00:01:42,230
So putting in true here that is that it's a lower case t Klear brackets.

29
00:01:42,270 --> 00:01:50,620
And then we'll go ahead and say Prince Allen and we'll go in and say I will print if true and then notice

30
00:01:50,620 --> 00:01:54,080
here we have a blue dot which means this file hasn't been saved.

31
00:01:54,080 --> 00:01:54,940
It's going to do.

32
00:01:54,990 --> 00:01:55,870
Control Yes.

33
00:01:55,950 --> 00:02:00,790
You can do commands if you're on a Mac you actually save this and now in order to load this file we

34
00:02:00,790 --> 00:02:10,380
just do Colan load and then go ahead and type in Scala programming the Scala enter and then we noticed

35
00:02:10,380 --> 00:02:14,850
a result here says I will print if true which is exactly what we're looking for.

36
00:02:14,850 --> 00:02:16,890
Let's go ahead and expand on this topic.

37
00:02:16,950 --> 00:02:20,850
Maybe you're not going to put in a boolean here but you may do some sort of comparison operations such

38
00:02:20,850 --> 00:02:22,710
as CheckFree quality.

39
00:02:22,710 --> 00:02:24,330
If three is equal to three.

40
00:02:24,510 --> 00:02:25,550
Go ahead and save that.

41
00:02:25,590 --> 00:02:30,550
Let's change this to say three is equal to three.

42
00:02:30,710 --> 00:02:33,050
And then we all go and run that code again.

43
00:02:33,080 --> 00:02:35,890
I'm just sitting up on my arrow key to run that same line.

44
00:02:36,010 --> 00:02:37,570
And it looks like that works as well.

45
00:02:37,580 --> 00:02:43,130
Let's go ahead and show one final example of just an if statement using a value going to go ahead and

46
00:02:43,130 --> 00:02:48,320
create a value x equal to a hello.

47
00:02:48,530 --> 00:02:55,040
And then I will say instead of three is equal to three here we'll go ahead and check if X ends with

48
00:02:55,400 --> 00:02:59,710
and noticed that be capitalized check ends with 0.

49
00:02:59,950 --> 00:03:02,970
And then this print line statement is going to be a little different.

50
00:03:03,100 --> 00:03:10,920
Well go ahead and say the value of x ands with 0.

51
00:03:11,350 --> 00:03:12,740
Go ahead and save that.

52
00:03:12,820 --> 00:03:14,880
And then we will run it.

53
00:03:15,060 --> 00:03:20,730
And here we see the output X is the string that's equal to hello that comes from line 1 and we say that

54
00:03:20,760 --> 00:03:23,230
the value X does in fact and with an 0.

55
00:03:23,490 --> 00:03:24,270
Perfect.

56
00:03:24,270 --> 00:03:27,690
Now let's go ahead and expand this to an if else statement.

57
00:03:27,690 --> 00:03:32,700
So if this isn't true and we still want something to execute we'll go ahead and add an L statement.

58
00:03:32,700 --> 00:03:47,900
So I will say else and here I can say Prince L-N and we'll say the value of x does not end with 0 save

59
00:03:47,900 --> 00:03:48,360
that.

60
00:03:48,450 --> 00:03:52,160
And if we just run this again we would expect the same output as last time.

61
00:03:52,170 --> 00:03:53,820
But let's go ahead and change this.

62
00:03:53,830 --> 00:03:57,390
X value is something like z z z.

63
00:03:57,640 --> 00:04:02,140
Save it and then run this again.

64
00:04:02,190 --> 00:04:06,810
And now notice that this statement ends up occurring and you should also note there's no print here

65
00:04:06,810 --> 00:04:08,970
on the statement because there's no Boolean check.

66
00:04:08,980 --> 00:04:11,330
That's if nothing else happened to be true.

67
00:04:11,760 --> 00:04:18,240
And finally let's go ahead and expand this idea to if else if and else statements.

68
00:04:18,240 --> 00:04:24,450
So for instance let's go ahead and I'm going to clear this just so he can start over we'll say vow of

69
00:04:24,480 --> 00:04:27,480
person is equal to George.

70
00:04:27,480 --> 00:04:33,670
So we have some person named George and I'm going to I'm going to check this person.

71
00:04:33,960 --> 00:04:43,680
So I will say if person put that in parentheses if person is equal to for instance Sammy going to go

72
00:04:43,680 --> 00:04:49,520
ahead and say print line welcome Sammy.

73
00:04:49,680 --> 00:04:55,170
And then I'll say else if and this is going to be another blank check we'll say if this person is equal

74
00:04:55,170 --> 00:05:05,540
to George we will go ahead and say Grant's line come George.

75
00:05:05,610 --> 00:05:11,470
And then finally else if neither of those conditions are true they'll just say print line.

76
00:05:11,570 --> 00:05:13,370
What is your name.

77
00:05:13,390 --> 00:05:14,480
Let me make sure I spell that right.

78
00:05:14,480 --> 00:05:16,470
What is your name questionmark.

79
00:05:16,490 --> 00:05:20,550
Go ahead and save that and run it to make sure we have everything correct.

80
00:05:20,600 --> 00:05:22,130
It looks like we said Welcome George.

81
00:05:22,130 --> 00:05:22,540
Perfect.

82
00:05:22,550 --> 00:05:24,090
Let's go ahead and change the names.

83
00:05:24,140 --> 00:05:27,660
We will say Sammy here save it and run it.

84
00:05:27,660 --> 00:05:30,290
We should say welcome Sammy.

85
00:05:30,480 --> 00:05:33,030
And then fine let's go ahead and put in a name that is not here.

86
00:05:33,070 --> 00:05:40,530
We'll say Jose check this runs and it looks like strings cause I say what is your name.

87
00:05:40,530 --> 00:05:41,510
Perfect.

88
00:05:41,520 --> 00:05:47,040
And then finally I want to discuss logical operators so we discuss comparison operators such as equals

89
00:05:47,070 --> 00:05:52,010
equals a lot of times you're going to actually want to check for multiple conditions maybe person is

90
00:05:52,210 --> 00:05:59,100
Samie or person is equal to George or persons equal to Samie and persons equal to something else cetera.

91
00:05:59,100 --> 00:06:04,620
So those are logical operators those and or and then not let me go ahead and review them with you right

92
00:06:04,620 --> 00:06:05,370
now.

93
00:06:05,790 --> 00:06:10,610
So we'll start off with the ANS and hopefully that you can read that contrasts.

94
00:06:10,830 --> 00:06:12,480
And there in the comments but.

95
00:06:12,520 --> 00:06:13,120
And.

96
00:06:13,230 --> 00:06:18,240
And Skoll it is these two and symbols so I can say something like.

97
00:06:18,570 --> 00:06:20,240
Let's go in and print the result prints.

98
00:06:20,280 --> 00:06:32,970
Ellen so I will check if one is equal to two and if two is equal to two.

99
00:06:32,980 --> 00:06:34,390
So think about this for a second.

100
00:06:34,390 --> 00:06:38,950
What we expect to prints here we need both of these statements to be true in order for this to print

101
00:06:38,950 --> 00:06:40,290
out true as a result.

102
00:06:40,300 --> 00:06:42,430
So we have is 1 equal to 2.

103
00:06:42,460 --> 00:06:44,390
That's false and is equal to two.

104
00:06:44,410 --> 00:06:45,280
Well that's true.

105
00:06:45,340 --> 00:06:48,100
So we expect this entire statement to be false.

106
00:06:48,100 --> 00:06:49,910
Let's go ahead and run it.

107
00:06:49,920 --> 00:06:51,080
It looks like we get false out.

108
00:06:51,100 --> 00:06:53,920
So that makes sense so this is the ANS logical operator.

109
00:06:54,080 --> 00:07:00,120
Let's go ahead and say this is on equal to 1 and the reason I'm just showing prints line is so we actually

110
00:07:00,120 --> 00:07:02,000
see something in the output here.

111
00:07:02,210 --> 00:07:04,830
Let's go in and run this again and here we get.

112
00:07:04,830 --> 00:07:05,520
True.

113
00:07:05,700 --> 00:07:07,150
So that's the and operator.

114
00:07:07,320 --> 00:07:11,110
Let's go ahead and show the OR operator which is just going to be the pipe symbol.

115
00:07:11,130 --> 00:07:18,420
So I can say print's Ellen will go ahead and check if one is equal to 2 or and this is the double pipes

116
00:07:18,420 --> 00:07:18,890
here.

117
00:07:19,860 --> 00:07:24,170
Two is equal to two and then we'll go and save that.

118
00:07:24,250 --> 00:07:25,460
Let's go ahead and run it.

119
00:07:25,450 --> 00:07:27,010
See what we get.

120
00:07:27,010 --> 00:07:31,660
So we get true from this first line and then in this line we get true because one of these does happen

121
00:07:31,660 --> 00:07:32,270
to be true.

122
00:07:32,470 --> 00:07:39,370
So either or needs to be true and then fine let's go ahead and show you knots which is basically you

123
00:07:39,370 --> 00:07:41,320
want this to not be true.

124
00:07:41,470 --> 00:07:47,310
So I'm actually going to comment these lines out just to make it more clear what's going on.

125
00:07:47,590 --> 00:07:51,660
And then I will say Prince L.N. and I'm going to start with.

126
00:07:51,660 --> 00:07:56,580
Printing is one equal to one.

127
00:07:56,630 --> 00:07:58,900
So in that case we would expect that to be true.

128
00:07:59,020 --> 00:08:01,060
So I want the not operator to occur.

129
00:08:01,220 --> 00:08:06,640
I just go ahead and I put an exclamation mark in front of the entire statement.

130
00:08:06,920 --> 00:08:10,520
So if we go ahead and run this again we see false.

131
00:08:10,520 --> 00:08:13,400
So we do not want this result here.

132
00:08:13,400 --> 00:08:15,670
So is it not true etc..

133
00:08:15,680 --> 00:08:16,850
That's going to be false.

134
00:08:16,850 --> 00:08:21,340
In that case basically a way of checking for inequality if you want it to.

135
00:08:21,350 --> 00:08:25,510
All right so that's basically it for logical operators and the if.

136
00:08:25,550 --> 00:08:27,110
Else if n l statements.

137
00:08:27,110 --> 00:08:28,810
Hopefully this was pretty straightforward.

138
00:08:28,970 --> 00:08:32,810
And again you could have just read the notes if you're already familiar with these topics.

139
00:08:32,810 --> 00:08:34,670
Thanks everyone and I'll see you at the next lecture.
