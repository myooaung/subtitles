1
00:00:05,590 --> 00:00:09,520
Hello everyone and welcome back to the regression spark section of the course.

2
00:00:09,520 --> 00:00:16,030
And in this lecture we're going to go ahead and walk you through the example that's used in the documentation.

3
00:00:16,090 --> 00:00:18,310
So let's go ahead and explore the documentation.

4
00:00:18,310 --> 00:00:24,150
We'll take a brief walk through the actual regression example and take a look at that Web site.

5
00:00:24,220 --> 00:00:30,380
Now a version of this documentation example is available to you as the Linn Reg doc example that Skoll

6
00:00:30,380 --> 00:00:32,950
a script that's already in your regression folder.

7
00:00:33,070 --> 00:00:38,170
So you don't need actually go looking around in your downloaded smart folder for the official documentation

8
00:00:38,170 --> 00:00:38,780
example.

9
00:00:38,790 --> 00:00:42,430
I already have a simplified version of it for you in that Russian folder.

10
00:00:42,430 --> 00:00:45,850
So let's go ahead and quickly jump to the documentation Web site.

11
00:00:45,880 --> 00:00:50,800
Check it out and then we'll open up that Skala script and walk you through it.

12
00:00:50,800 --> 00:00:53,560
I'm going to jump to that Web site now.

13
00:00:53,560 --> 00:00:53,860
All right.

14
00:00:53,860 --> 00:00:58,560
So here we are at the documentation under the machine learning library guy.

15
00:00:58,570 --> 00:01:03,190
You'll see that you have two guides the Arkadi based guide and the main guide the main guide is the

16
00:01:03,190 --> 00:01:05,590
one that uses the data frames and it's the newer guide.

17
00:01:05,590 --> 00:01:07,750
So let's go ahead and use that.

18
00:01:07,990 --> 00:01:14,960
We will click on classification regression and if you scroll down you'll see we have regression something

19
00:01:14,960 --> 00:01:20,900
to note here is that SPARC machine learning library has a lot of options for different regression algorithms.

20
00:01:20,900 --> 00:01:25,520
And what's really nice is that once you learn how to use the most basic one which is linear regression

21
00:01:25,940 --> 00:01:29,730
you can basically switch out any algorithm for linear regression.

22
00:01:29,840 --> 00:01:34,610
That means if you want to use a gradient lose to try regression a random forced regression a decision

23
00:01:34,610 --> 00:01:35,600
tree regression.

24
00:01:35,600 --> 00:01:39,360
You just need to easily swap out the models and then set your new parameters.

25
00:01:39,470 --> 00:01:45,260
If you click a linear regression you'll be taken scrolled down to the linear regression section and

26
00:01:45,260 --> 00:01:48,280
you'll see how the Escala example code.

27
00:01:48,370 --> 00:01:51,740
This is the code we're going to be walking you through in just a little bit.

28
00:01:51,830 --> 00:01:56,170
If you want the full example code just go to wherever you installed Sparke.

29
00:01:56,180 --> 00:02:03,560
There should be an examples folder and you have to keep going down to the RC main Skala org Apache Sparke

30
00:02:03,620 --> 00:02:09,500
examples M-L And then finally you'll see that Skala script Linaria rational for net example because

31
00:02:09,500 --> 00:02:12,580
this is such a long file path and really annoying to find.

32
00:02:12,710 --> 00:02:18,800
I went ahead and set that line Reg doc example that Skoll a script already in your regression folder

33
00:02:19,040 --> 00:02:23,170
that comes with the download for this course so you don't have to go around searching for it.

34
00:02:23,520 --> 00:02:30,530
OK let's jump to the Adam text editor and walk you through everything that's in this code and explain

35
00:02:30,680 --> 00:02:37,160
how with just this knowledge you can implement a regression algorithm really simply using Spark's new

36
00:02:37,370 --> 00:02:39,710
data for a machine learning library.

37
00:02:39,710 --> 00:02:42,870
I'm going to go ahead and jump to the Adam text editor now.

38
00:02:44,450 --> 00:02:46,550
All right here I am Adam text editor.

39
00:02:46,550 --> 00:02:50,710
I've gone ahead and opened up the Scala script for the documentation example.

40
00:02:50,750 --> 00:02:53,720
You can open this up in whatever Id prefer.

41
00:02:53,720 --> 00:02:55,980
Now let's walk through line by line.

42
00:02:56,000 --> 00:02:57,290
What's happening here.

43
00:02:57,650 --> 00:03:00,160
You'll notice the first thing you have to do is make imports.

44
00:03:00,170 --> 00:03:02,220
Here we have the regression import.

45
00:03:02,300 --> 00:03:06,470
We're going to import every Russian and then we have to import the spark.

46
00:03:06,470 --> 00:03:08,270
Session.

47
00:03:08,490 --> 00:03:12,350
We've gone ahead and put everything here under a single function.

48
00:03:12,360 --> 00:03:17,100
You'll notice that if you actually read the official documentation examples they're using things such

49
00:03:17,100 --> 00:03:18,910
as packages and objects.

50
00:03:18,930 --> 00:03:24,570
We're going to learn about those later on when we actually need to package this nicely.

51
00:03:24,570 --> 00:03:29,190
When you're first starting off learning everything it's nice to have everything just under a single

52
00:03:29,190 --> 00:03:34,290
function instead of a single object or to actually not even have a function and just do this line by

53
00:03:34,290 --> 00:03:39,840
line because when you open up the spark shell you can actually pick and play with these objects and

54
00:03:39,840 --> 00:03:41,220
learn more from them.

55
00:03:41,220 --> 00:03:46,170
If you have everything in a nice package even though it looks really nice it's hard to dissect what's

56
00:03:46,170 --> 00:03:49,160
actually going on inside instead of the sparks shell.

57
00:03:49,230 --> 00:03:54,120
So will teach you how to do all that later on when we actually want to work with large distributed datasets.

58
00:03:54,180 --> 00:03:58,380
Right now to optimize our learning we're going to do all this simpler fashion.

59
00:03:58,560 --> 00:04:01,820
First thing we have to do is go ahead and start a spark session.

60
00:04:01,960 --> 00:04:04,920
Then you need the file path to your data.

61
00:04:05,190 --> 00:04:11,210
In this case reason the documentation's example data which is sample any Russians data that ticks T.

62
00:04:11,340 --> 00:04:18,520
It's actually in a lib SBM format so you need to say spark the read format lib SVM.

63
00:04:18,810 --> 00:04:25,020
If you open up this text file you'll notice that it's not exactly a CACP file.

64
00:04:25,020 --> 00:04:31,410
This L this lib SVM format is a little different than the point that it has the label in the first column

65
00:04:31,770 --> 00:04:34,380
and then the features number out.

66
00:04:34,500 --> 00:04:37,680
So it's not exactly a c file so keep that in mind.

67
00:04:37,740 --> 00:04:43,620
It's a bit of a quirky file format that suit and more for a machine learning but we will show you later

68
00:04:43,620 --> 00:04:48,750
on how to actually deal with machine learning with CSP files and other data types.

69
00:04:50,110 --> 00:04:55,030
Once you have that path and keep in mind you may need to have the full file path here.

70
00:04:55,030 --> 00:05:00,130
We're working with the text file that's actually in the same Russian folder so we don't need to specify

71
00:05:00,130 --> 00:05:06,070
the full file path but in case you do remember that you may need to start with file colon and then three

72
00:05:06,070 --> 00:05:12,070
forward slashes and on Windows computers and sometimes on Mac computers there can be no spaces in your

73
00:05:12,070 --> 00:05:13,640
file name.

74
00:05:13,660 --> 00:05:15,960
So keep that in mind.

75
00:05:16,010 --> 00:05:18,880
Now we have that training data in this simple example.

76
00:05:18,890 --> 00:05:22,510
We are going to be getting metrics off of the data we trained on.

77
00:05:22,640 --> 00:05:26,210
Later on we'll show you how to do a full train test validation split.

78
00:05:26,210 --> 00:05:28,220
For now we're keeping things simple.

79
00:05:28,460 --> 00:05:33,290
Then we create a new linear regression object and this is basically the main step you're going to go

80
00:05:33,290 --> 00:05:41,730
ahead and create a value or a variable name say new linear regression and then you can set a bunch of

81
00:05:41,760 --> 00:05:46,650
parameters for this actual linear regression later on in the model evaluation section of the course.

82
00:05:46,650 --> 00:05:51,150
We're actually going to show you how to build a parameter grid so you don't have to guess and check

83
00:05:51,180 --> 00:05:52,800
manually different parameters.

84
00:05:52,800 --> 00:05:57,750
You can set a grid of parameters and test those automatically and these parameters that you set you're

85
00:05:57,750 --> 00:06:03,930
going to learn more about them when you learn more about statistical analysis behind these actual algorithms

86
00:06:04,200 --> 00:06:06,620
what parameters that you mathematically want to set.

87
00:06:06,630 --> 00:06:07,850
You can set them here.

88
00:06:07,860 --> 00:06:12,510
So for instance this linear regression is actually using an elastic net so you can set that parameter

89
00:06:12,510 --> 00:06:13,310
itself.

90
00:06:13,320 --> 00:06:17,940
And as you learn more about statistics and the mathematical algorithms you can go ahead and play around

91
00:06:17,970 --> 00:06:23,910
these parameters more or you can just build a parameter grid and test those out automatically then you

92
00:06:23,910 --> 00:06:25,050
fit the model.

93
00:06:25,050 --> 00:06:27,010
In this case we're fitting into the training data.

94
00:06:27,480 --> 00:06:28,560
And that's basically it.

95
00:06:28,560 --> 00:06:34,020
After that you can call coefficients and the intercept off of this model and you can call a summary

96
00:06:34,020 --> 00:06:40,360
off the model and the summary has information such as the residuals the root mean square error R-squared

97
00:06:40,500 --> 00:06:42,040
error etc..

98
00:06:42,060 --> 00:06:44,370
Now we went ahead and stopped that spark session.

99
00:06:44,370 --> 00:06:47,630
And if you go to the left here we just call this main function.

100
00:06:47,760 --> 00:06:50,450
Let's go and run this.

101
00:06:50,590 --> 00:06:58,420
I'll open up a terminal make sure I'm in the regression folder and then I will start a spark shell later

102
00:06:58,420 --> 00:07:03,670
I will talk about putting this all into a package and saying Sparke submit.

103
00:07:03,670 --> 00:07:07,990
Right now we want to learn and kind of play around with this so we're just using Spark's show.

104
00:07:08,460 --> 00:07:10,440
OK let's load this up.

105
00:07:10,450 --> 00:07:19,130
We'll say load when Reg doc example not Skala enter.

106
00:07:19,190 --> 00:07:21,250
And then the output.

107
00:07:21,270 --> 00:07:23,130
All right so that finished running.

108
00:07:23,130 --> 00:07:27,600
Keep in mind you may receive some warnings but as long as you don't receive a full error that stops

109
00:07:27,600 --> 00:07:30,550
the operation that should be totally fine.

110
00:07:30,630 --> 00:07:33,870
And here we can see that we have the root mean square error.

111
00:07:33,870 --> 00:07:37,020
The R-squared value in this case it's very poor.

112
00:07:37,020 --> 00:07:40,700
That has to do with the data and the way we set it up with the parameters.

113
00:07:40,710 --> 00:07:45,540
But don't worry about that later I'll show you how to edit that and set up parameters correctly so you

114
00:07:45,540 --> 00:07:47,060
get a much better value.

115
00:07:47,280 --> 00:07:48,670
Here you can see the residuals.

116
00:07:48,690 --> 00:07:52,620
That's the difference between the predicted value and the actual label value.

117
00:07:53,010 --> 00:07:58,470
And you can see the history number of iterations coefficients in the intercept and then you'll may see

118
00:07:58,470 --> 00:08:00,680
some warnings as you explore further up.

119
00:08:00,720 --> 00:08:03,770
But as long as you don't get Eyres that's totally fine.

120
00:08:03,780 --> 00:08:04,230
All right.

121
00:08:04,320 --> 00:08:07,200
That's the basics of the documentation example.

122
00:08:07,260 --> 00:08:12,360
I encourage you to read through this and actually check out the other examples for other regression

123
00:08:12,390 --> 00:08:14,320
algorithms in the documentation.

124
00:08:14,340 --> 00:08:19,800
Coming up next we're actually going to comb through and walk you through an entire example of using

125
00:08:19,800 --> 00:08:20,650
linear regression.

126
00:08:20,650 --> 00:08:26,210
So you can get a feel for it step by step on how to actually do this sort of operation on your own data.

127
00:08:26,220 --> 00:08:28,520
Thanks everyone and I will see at the next lecture.
