1
00:00:00,840 --> 00:00:02,310
Before we wrap up this module,

2
00:00:02,310 --> 00:00:09,440
let's quickly see what VPC flow logs are and understand some of its limitations.

3
00:00:09,440 --> 00:00:13,130
VPC flow logging lets you capture and log data

4
00:00:13,130 --> 00:00:16,010
about network traffic in your VPC.

5
00:00:16,010 --> 00:00:21,530
VPC flow logging records information about the IP data going in

6
00:00:21,530 --> 00:00:24,560
and out of designated network interfaces,

7
00:00:24,560 --> 00:00:31,360
storing this raw data in Amazon CloudWatch where it can be retrieved and viewed.

8
00:00:31,360 --> 00:00:35,200
VPC flow logging is critical for security and

9
00:00:35,200 --> 00:00:39,140
compliance in your AWS cloud environment.

10
00:00:39,140 --> 00:00:45,040
However, it does have a few limitations that we need to be aware of.

11
00:00:45,040 --> 00:00:50,410
You cannot modify a flow log's config parameters once it is created.

12
00:00:50,410 --> 00:00:56,060
You need to delete and create a new one from scratch.

13
00:00:56,060 --> 00:01:03,520
Not all traffic is captured in VPC flow logs. DHCP traffic, traffic

14
00:01:03,520 --> 00:01:08,180
generated by a Windows instance for Amazon Windows license activation,

15
00:01:08,180 --> 00:01:14,490
traffic to the reserved IP address for the default VPC router, traffic

16
00:01:14,490 --> 00:01:18,780
between elastic network interface and the network load balancer network

17
00:01:18,780 --> 00:01:26,900
interface, and Amazon DNS activity are not captured in flow logs. Flow

18
00:01:26,900 --> 00:01:31,640
logs cannot be enabled for network interfaces that are in the EC2 classic

19
00:01:31,640 --> 00:01:33,840
platform.

20
00:01:33,840 --> 00:01:38,060
If your network interface has multiple IP addresses, and if the traffic

21
00:01:38,060 --> 00:01:43,660
is sent to a secondary IP address, the flow log displaces the primary IP

22
00:01:43,660 --> 00:01:45,590
address in the destination of this field,

23
00:01:45,590 --> 00:01:48,840
which may be misleading.

24
00:01:48,840 --> 00:01:51,740
When you are using a nitroâ€‘based instance,

25
00:01:51,740 --> 00:02:02,000
the aggregation interval is always one minute or less irrespective of the maximum aggregation interval that you specified manually.

