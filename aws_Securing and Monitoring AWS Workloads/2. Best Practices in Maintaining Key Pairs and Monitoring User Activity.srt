1
00:00:01,310 --> 00:00:04,930
With the security threats increasing day by day, it's very

2
00:00:04,930 --> 00:00:09,530
important that we follow best practices recommended by AWS

3
00:00:09,530 --> 00:00:12,790
in securing the key pairs.

4
00:00:12,790 --> 00:00:17,420
Maintain one SSH key purpose.

5
00:00:17,420 --> 00:00:22,670
If you're using a functional account that is being used by multiple users,

6
00:00:22,670 --> 00:00:28,030
make sure that the keys are rotated on a constant basis.

7
00:00:28,030 --> 00:00:34,070
Add passphrase to your keys. Without the passphrase, anyone that have access

8
00:00:34,070 --> 00:00:39,790
to the keys will be able to log in to the instance. Restrict the sudo

9
00:00:39,790 --> 00:00:46,140
access. Sudo access needs to be given on a case‑by‑case basis only. A

10
00:00:46,140 --> 00:00:50,520
read‑only user should never have sudo access.

11
00:00:50,520 --> 00:00:56,100
There is a reason why they were given read‑only access to begin with.

12
00:00:56,100 --> 00:00:59,890
You can also set up monitoring tools to check if

13
00:00:59,890 --> 00:01:04,500
someone is illegally trying to use sudo.

14
00:01:04,500 --> 00:01:10,330
Never store your private keys in your temp directories or home directories.

15
00:01:10,330 --> 00:01:17,540
Best practice is to keep them in a hidden directory that's known only to you.

16
00:01:17,540 --> 00:01:22,660
AWS has presented you with many services and tools to monitor the

17
00:01:22,660 --> 00:01:28,880
user activities in EC2 instances. Let's look at a demo and see how

18
00:01:28,880 --> 00:01:33,520
to view user activities in CloudWatch.

19
00:01:33,520 --> 00:01:39,370
The first step is to create a role that can create a log group and publish logs

20
00:01:39,370 --> 00:01:49,070
to CloudWatch. I just logged in to IAM console. I already created a role named

21
00:01:49,070 --> 00:01:56,240
CloudWatchEC2. It is associated with one policy.

22
00:01:56,240 --> 00:02:02,200
Let me expand the policy, and you can see the policy allows four actions,

23
00:02:02,200 --> 00:02:06,600
and it is not specific to a resource.

24
00:02:06,600 --> 00:02:13,210
Second step is to attach this role to the EC2 instance.

25
00:02:13,210 --> 00:02:21,060
Let me go back to EC2 console. Click on Running instances.

26
00:02:21,060 --> 00:02:26,630
Let me select the instance that is running, and the IAM role is linked

27
00:02:26,630 --> 00:02:32,500
to CloudWatchEC2 role that we initially created.

28
00:02:32,500 --> 00:02:36,770
Next step is to install the CloudWatch Log agent in the EC2 instance.

29
00:02:36,770 --> 00:02:45,740
Let me use yum install to install AWS Logs agent.

30
00:02:45,740 --> 00:02:48,560
Since I had already installed the agent,

31
00:02:48,560 --> 00:02:52,540
I'm getting a message saying nothing to do.

32
00:02:52,540 --> 00:02:55,400
If you are setting up this for the first time,

33
00:02:55,400 --> 00:02:58,930
this command would install the Log agent under etc

34
00:02:58,930 --> 00:03:05,040
directory, and the output will be very different.

35
00:03:05,040 --> 00:03:09,030
Once the AWS Logs agent is installed successfully,

36
00:03:09,030 --> 00:03:18,110
you will see a new directory named awslogs. Let me open awslogs.conf,

37
00:03:18,110 --> 00:03:20,760
where you can configure the file name under

38
00:03:20,760 --> 00:03:25,340
corresponding log group and log stream name.

39
00:03:25,340 --> 00:03:32,040
I'm going to stream the secure file that is under /var/log.

40
00:03:32,040 --> 00:03:37,840
This file keeps track of all the user activities.

41
00:03:37,840 --> 00:03:39,670
When you are setting up the config file,

42
00:03:39,670 --> 00:03:43,410
please pay close attention to the datetime format,

43
00:03:43,410 --> 00:03:47,980
and this should match the timestamp used in your log file.

44
00:03:47,980 --> 00:03:51,640
If not, the logs will not be pushed to the CloudWatch,

45
00:03:51,640 --> 00:03:59,890
and you will see an exception in the log file. Let me open awscli.conf where

46
00:03:59,890 --> 00:04:04,220
you can configure the region where the logs will be pushed.

47
00:04:04,220 --> 00:04:08,230
Let me start the agent and make sure that it is up and running

48
00:04:08,230 --> 00:04:18,740
now. Switch to /var/log, and open awslogs.log, and check for

49
00:04:18,740 --> 00:04:22,400
any errors in running the agent.

50
00:04:22,400 --> 00:04:27,340
Next step is to monitor the logs in CloudWatch.

51
00:04:27,340 --> 00:04:31,040
I just logged into CloudWatch console.

52
00:04:31,040 --> 00:04:35,090
Click Log groups to your left.

53
00:04:35,090 --> 00:04:44,240
Switch to the region where you configure your log agent. Click on secure‑log.

54
00:04:44,240 --> 00:04:47,440
Open the log stream.

55
00:04:47,440 --> 00:04:52,300
You can see it lists all the user activities.

56
00:04:52,300 --> 00:04:56,670
You can filter the logs to narrow down to any specific events,

57
00:04:56,670 --> 00:05:01,340
like sudo access that you would like to monitor.

58
00:05:01,340 --> 00:05:07,650
Let me monitor the logs in the last 30 minutes. You can see our action of

59
00:05:07,650 --> 00:05:14,980
editing awslogs.conf file has been recorded and reported.

60
00:05:14,980 --> 00:05:18,850
There are multiple ways where you can track user activities using

61
00:05:18,850 --> 00:05:28,000
CloudTrail and CloudWatch, and this is just one of the options recommended by AWS using the CloudWatch logs agent.

