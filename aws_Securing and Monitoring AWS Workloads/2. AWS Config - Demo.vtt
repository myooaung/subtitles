WEBVTT
1
00:00:00.740 --> 00:00:06.340
Now that we know the features of AWS Config and understood its terminologies,

2
00:00:06.340 --> 00:00:13.280
let's jump into a quick demo and track config changes with AWS Config.

3
00:00:13.280 --> 00:00:17.340
I just logged into my AWS console.

4
00:00:17.340 --> 00:00:24.400
Click on Config, and you will be taken to AWS Config dashboard.

5
00:00:24.400 --> 00:00:27.530
If you don't have any configs already set up,

6
00:00:27.530 --> 00:00:31.200
you will see a simple Get started button.

7
00:00:31.200 --> 00:00:33.720
Click on Get started.

8
00:00:33.720 --> 00:00:41.000
In the Settings page, I'm going to record all the resources in the region.

9
00:00:41.000 --> 00:00:46.010
I also have the option to select specific types.

10
00:00:46.010 --> 00:00:49.590
The S3 bucket will store all the configuration history,

11
00:00:49.590 --> 00:00:53.280
and I'm going to create a new bucket.

12
00:00:53.280 --> 00:00:56.670
The SNS topic will receive all config changes,

13
00:00:56.670 --> 00:01:00.070
and since I have a topic already set up,

14
00:01:00.070 --> 00:01:03.290
I'm going to choose that.

15
00:01:03.290 --> 00:01:06.860
Since AWS Config is going to keep track of all the

16
00:01:06.860 --> 00:01:09.990
configuration changes of your AWS resource,

17
00:01:09.990 --> 00:01:15.040
you need to create a role with read‑only access.

18
00:01:15.040 --> 00:01:17.950
Since I don't have a role set up yet,

19
00:01:17.950 --> 00:01:22.220
I'm going to create a new service‑linked role now.

20
00:01:22.220 --> 00:01:24.610
Click Next.

21
00:01:24.610 --> 00:01:28.910
You have an option to select the Config rules that

22
00:01:28.910 --> 00:01:32.880
will be used to check your resources.

23
00:01:32.880 --> 00:01:37.440
AWS has 86 built‑in rules that you can leverage,

24
00:01:37.440 --> 00:01:41.480
or you can create your own custom rules.

25
00:01:41.480 --> 00:01:45.090
I'm going to select all of them.

26
00:01:45.090 --> 00:01:47.230
Click Next,

27
00:01:47.230 --> 00:01:51.600
and you will see the review page that lists a brief description of all the

28
00:01:51.600 --> 00:01:57.440
rules and the settings that you previously selected.

29
00:01:57.440 --> 00:02:03.210
Click Confirm to start AWS Config creation process.

30
00:02:03.210 --> 00:02:05.640
This is a time‑consuming process.

31
00:02:05.640 --> 00:02:11.240
Once the creation is completed, you will see a dashboard page.

32
00:02:11.240 --> 00:02:16.840
I'm going to switch to the redesigned AWS Config page.

33
00:02:16.840 --> 00:02:20.160
You can see the dashboard lists all the resources that

34
00:02:20.160 --> 00:02:22.220
are currently part of my account.

35
00:02:22.220 --> 00:02:24.740
And under Compliance status,

36
00:02:24.740 --> 00:02:33.420
you can see there are 25 noncompliant items and 30 noncompliant resources.

37
00:02:33.420 --> 00:02:37.830
I'm going to click to view all the noncompliant rules.

38
00:02:37.830 --> 00:02:44.330
You can view on any specific rule to look at the rule details and the

39
00:02:44.330 --> 00:02:49.040
resources that didn't comply with this specific rule.

40
00:02:49.040 --> 00:02:54.010
I'm going to remediate one of the noncompliant items and see how the

41
00:02:54.010 --> 00:02:58.570
changes get tracked and reflected in AWS Config.

42
00:02:58.570 --> 00:03:07.100
Let me go back to the dashboard, click on EC2 instances,

43
00:03:07.100 --> 00:03:12.640
and you will see there are four EC2 instances that are part of my account.

44
00:03:12.640 --> 00:03:17.500
I'm going to choose the instance that ends in 8668.

45
00:03:17.500 --> 00:03:21.950
You can see there are two noncompliant items,

46
00:03:21.950 --> 00:03:28.930
and one of them being the instance not having detailed monitoring enabled.

47
00:03:28.930 --> 00:03:33.970
Let's go back to AWS console and select EC2.

48
00:03:33.970 --> 00:03:39.080
Click on Instances.

49
00:03:39.080 --> 00:03:43.750
Select the instance that ends in 8668.

50
00:03:43.750 --> 00:03:48.010
Click on Action.

51
00:03:48.010 --> 00:03:56.840
Choose CloudWatch Monitoring, and click on Enable Detailed Monitoring.

52
00:03:56.840 --> 00:04:00.190
You need to use caution while using this option as

53
00:04:00.190 --> 00:04:04.940
enabling this may incur additional charges.

54
00:04:04.940 --> 00:04:09.010
Let's go back to AWS Config.

55
00:04:09.010 --> 00:04:13.240
Choose EC2 Instances.

56
00:04:13.240 --> 00:04:17.370
Select the instance for which we enabled detailed monitoring,

57
00:04:17.370 --> 00:04:24.540
and you can see the status is compliant against the specific rule.

58
00:04:24.540 --> 00:04:30.350
Click on Resource Timeline at the top. Resource Timeline is a

59
00:04:30.350 --> 00:04:34.890
fantastic feature offered by AWS Config that shows the config

60
00:04:34.890 --> 00:04:39.440
changes that took place over a period of time.

61
00:04:39.440 --> 00:04:45.740
You can see there are seven changes that happened at this specific instance.

62
00:04:45.740 --> 00:04:53.290
Click on that. This is a JSON representation of all the changes.

63
00:04:53.290 --> 00:04:58.660
You can see the state change from running to stopped. And under the

64
00:04:58.660 --> 00:05:03.570
State Reason, you can see User Initiated shutdown when it was

65
00:05:03.570 --> 00:05:10.010
manually shut down by me. Next to that, there is one config change

66
00:05:10.010 --> 00:05:11.760
at a different time,

67
00:05:11.760 --> 00:05:14.680
and you can see it is keeping track of the monitoring state,

68
00:05:14.680 --> 00:05:19.200
the one when we enabled detailed monitoring.

69
00:05:19.200 --> 00:05:22.640
Let's go back to the dashboard.

70
00:05:22.640 --> 00:05:25.780
Click on Settings.

71
00:05:25.780 --> 00:05:30.940
This is a snapshot of all the settings that we chose when we created the AWS

72
00:05:30.940 --> 00:05:37.600
Config. You have the option to edit these changes and select any specific

73
00:05:37.600 --> 00:05:42.720
resources to record. Choose a different S3 bucket or a different SNS topic any

74
00:05:42.720 --> 00:05:49.840
time. I'm going to leave all these changes as is.

75
00:05:49.840 --> 00:05:56.760
Now let's quickly see how CloudTrail works closely with AWS Config.

76
00:05:56.760 --> 00:06:03.040
Let me go back to AWS Config dashboard, click on EC2

77
00:06:03.040 --> 00:06:12.470
Instances, select the instance that ends in 8668, click on

78
00:06:12.470 --> 00:06:20.660
Resource Timeline. At the bottom, you can see CloudTrail events.

79
00:06:20.660 --> 00:06:23.530
Let me alert you that this may take a while before

80
00:06:23.530 --> 00:06:28.740
this even shows up in AWS Config.

81
00:06:28.740 --> 00:06:35.240
Click on CloudTrail, and you'll be taken to CloudTrail console.

82
00:06:35.240 --> 00:06:42.740
Under Event history, you can see an event named MonitorInstances by root user.

83
00:06:42.740 --> 00:06:48.500
You can see the inverse reference from CloudTrail back to Config.

84
00:06:48.500 --> 00:06:53.870
Click on View Event. This is the entire JSON representation of the event.

85
00:06:53.870 --> 00:07:02.580
Click Close, and I'm going to go back to Config timeline.

86
00:07:02.580 --> 00:07:10.760
Let's check on Compliance timeline. Click on Rules, and you can see a

87
00:07:10.760 --> 00:07:15.130
timeline of changes that happened to this resource that made it

88
00:07:15.130 --> 00:07:19.110
noncompliant, and at the the bottom under the Rules section,

89
00:07:19.110 --> 00:07:24.270
you can see the rule that it is not compliant with.

90
00:07:24.270 --> 00:07:30.060
Let's quickly check how to navigate the relationship tree. Click

91
00:07:30.060 --> 00:07:36.340
on Relationships. Click on the EC2 instance,

92
00:07:36.340 --> 00:07:42.200
You can see that this instance is related to five other resources.

93
00:07:42.200 --> 00:07:46.470
Let me click on SecurityGroup, and you can see the resources

94
00:07:46.470 --> 00:07:50.030
that this security group is related with.

95
00:07:50.030 --> 00:07:57.000
This is a very handy tool to understand the relationship metrics between various AWS resources.

