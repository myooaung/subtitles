WEBVTT
1
00:00:02.020 --> 00:00:05.684
So as a workaround for the OAuth2ExchangeFilterFunction in

2
00:00:05.684 --> 00:00:09.715
the client credentials grant not requesting a new token

3
00:00:09.715 --> 00:00:12.927
when the existing one expires,

4
00:00:12.927 --> 00:00:19.430
we can create a wrapper class around the OAuth2AuthorizedClientRepository.

5
00:00:19.430 --> 00:00:20.604
And in the wrapper,

6
00:00:20.604 --> 00:00:22.793
we can accept the actual

7
00:00:22.793 --> 00:00:26.628
OAuth2AuthorizedClientRepository as a constructor field.

8
00:00:26.628 --> 00:00:32.317
We implement the load, save, and removeAuthorizedClient methods.

9
00:00:32.317 --> 00:00:36.080
And for most, we simply delegate to the default implementation.

10
00:00:36.080 --> 00:00:41.709
But for the loadAuthorizeClient, we can check the expiry of the token.

11
00:00:41.709 --> 00:00:45.604
And if the token is valid for more than 1 minute, we can return it.

12
00:00:45.604 --> 00:00:48.983
Otherwise, we remove it from the repository.

13
00:00:48.983 --> 00:00:51.918
This will result in the exchange filter not receiving and

14
00:00:51.918 --> 00:00:55.111
authorized client back and hence will trigger it to request a

15
00:00:55.111 --> 00:00:58.683
new token from the authorization server.

16
00:00:58.683 --> 00:01:09.000
We then add our wrapper version to the ExchangeFilterFunction and that's it. We've implemented the client credentials flow using the WebClient.

