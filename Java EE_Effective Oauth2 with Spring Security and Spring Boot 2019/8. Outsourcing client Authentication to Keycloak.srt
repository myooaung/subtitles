1
00:00:02,220 --> 00:00:04,859
To set up the client we created in Keycloak,

2
00:00:04,859 --> 00:00:07,618
in the configuration file,

3
00:00:07,618 --> 00:00:11,679
we change the Crypto Portfolio client with the new settings.

4
00:00:11,679 --> 00:00:13,232
Add the client-secret.

5
00:00:13,232 --> 00:00:16,078
We can get that from the Keycloak admin console under

6
00:00:16,078 --> 00:00:19,039
the Credentials tab for that client.

7
00:00:19,039 --> 00:00:23,162
For scope, add openid as we will now be connecting via OpenID,

8
00:00:23,162 --> 00:00:25,515
and it has to be the first scope.

9
00:00:25,515 --> 00:00:30,996
Now if we go over to the Keycloak admin console under Client Scopes tab,

10
00:00:30,996 --> 00:00:33,156
you can see, by default,

11
00:00:33,156 --> 00:00:35,855
this client will always have the following scopes

12
00:00:35,855 --> 00:00:38,734
when generating the access token.

13
00:00:38,734 --> 00:00:41,788
But optionally, we can request the following.

14
00:00:41,788 --> 00:00:46,973
Now profile and email are default, and that's basically all we need for now.

15
00:00:46,973 --> 00:00:49,868
Next is the redirect-url.

16
00:00:49,868 --> 00:00:54,000
This needs to match the one we preregistered in Keycloak.

17
00:00:54,000 --> 00:00:59,414
Since the provider is now Keycloak, if we click the realm in the admin console,

18
00:00:59,414 --> 00:01:02,945
we will see a link to the OpenID Connect discovery document,

19
00:01:02,945 --> 00:01:08,291
which has everything we need to know about the provider or the endpoints,

20
00:01:08,291 --> 00:01:08,720
etc.

21
00:01:08,720 --> 00:01:13,664
Now we can provide all the configuration needed separately,

22
00:01:13,664 --> 00:01:19,413
like the JW keyset URI, the token URI, the userinfo URI.

23
00:01:19,413 --> 00:01:23,496
All these we can copy from the discovery document.

24
00:01:23,496 --> 00:01:27,973
But since we are using OpenID Connect, it'll provide us the issuer URI,

25
00:01:27,973 --> 00:01:32,266
and Spring will get everything it needs from the discovery document.

26
00:01:32,266 --> 00:01:34,520
We only provide the realm URI.

27
00:01:34,520 --> 00:01:37,691
Spring will know where to find the discovery document because the

28
00:01:37,691 --> 00:01:42,357
well-known openid-configuration URI is part of the standard.

29
00:01:42,357 --> 00:01:44,457
Now in the Keycloak admin,

30
00:01:44,457 --> 00:01:49,835
we can also add Google and Facebook as identity providers.

31
00:01:49,835 --> 00:01:52,879
Just copy and paste the client-id and secret and

32
00:01:52,879 --> 00:01:56,116
remove all that code to handle these.

33
00:01:56,116 --> 00:02:00,527
Now our client just cares about dealing with one provider, Keycloak.

34
00:02:00,527 --> 00:02:06,088
If we start our application, we can log in as Joe or via Google.

35
00:02:06,088 --> 00:02:09,143
This login page no longer serves a purpose.

36
00:02:09,143 --> 00:02:11,977
The application could just simply kick off the authorization

37
00:02:11,977 --> 00:02:16,673
process with the authorization server automatically.

38
00:02:16,673 --> 00:02:24,354
Now if you look at the index.html page, copy the authorize URI.

39
00:02:24,354 --> 00:02:32,084
Then in our configuration adapter for the client, set it as the login URI.

40
00:02:32,084 --> 00:02:34,878
Now when authentication is required,

41
00:02:34,878 --> 00:02:40,912
Spring will initiate the authentication flow with Keycloak automatically.

42
00:02:40,912 --> 00:02:45,081
Now Keycloak allows you to customize and style your login pages.

43
00:02:45,081 --> 00:02:47,914
So you can style it to your application's look and feel,

44
00:02:47,914 --> 00:02:51,385
and your users won't even know the difference.

45
00:02:51,385 --> 00:02:52,825
Now one final note.

46
00:02:52,825 --> 00:02:57,410
Keycloak also has adapters for Spring to make integration simpler.

47
00:02:57,410 --> 00:02:59,628
It has a Spring Boot startup project.

48
00:02:59,628 --> 00:03:08,000
But personally, I prefer to go with OpenID Connect. That way I'm not tied to Keycloak and can change whenever I want.

