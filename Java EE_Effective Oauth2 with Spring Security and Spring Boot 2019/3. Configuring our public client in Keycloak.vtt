WEBVTT
1
00:00:01.920 --> 00:00:04.073
Because our client is now a public application,

2
00:00:04.073 --> 00:00:08.566
we need to configure a new public client with Keycloak.

3
00:00:08.566 --> 00:00:12.378
If we go to our admin console, create new clients,

4
00:00:12.378 --> 00:00:14.999
name it crypto-portfolio-react,

5
00:00:14.999 --> 00:00:21.622
and select public as the access and implicit flow.

6
00:00:21.622 --> 00:00:24.426
Authorization enabled off.

7
00:00:24.426 --> 00:00:30.182
For the redirect URL, we will now add the following for the React application.

8
00:00:30.182 --> 00:00:33.521
For web origins, we need to add our domain.

9
00:00:33.521 --> 00:00:35.639
This is for cross-origin requests.

10
00:00:35.639 --> 00:00:39.159
We will discuss what this is in a later module.

11
00:00:39.159 --> 00:00:43.072
Now because this is a public app, we don't have a client secret.

12
00:00:43.072 --> 00:00:45.239
That's it, we can just save it.

13
00:00:45.239 --> 00:00:51.651
Now in the React client, I'm using the OpenID Connect client JavaScript library.

14
00:00:51.651 --> 00:00:58.666
In the auth service, I set the provider URI, client_id, redirect_uri, scopes.

15
00:00:58.666 --> 00:01:01.091
And in my PortfolioActions class,

16
00:01:01.091 --> 00:01:05.284
all the calls to the microservices I include the access token.

17
00:01:05.284 --> 00:01:07.810
Again, this course is mainly focused on Spring,

18
00:01:07.810 --> 00:01:12.563
so I won't go over creating a React app in detail and how to secure it.

19
00:01:12.563 --> 00:01:14.467
That will be a separate course in itself.

20
00:01:14.467 --> 00:01:18.655
I believe there is a course on this in the library, which you can check out.

21
00:01:18.655 --> 00:01:22.222
There are also many different types of JavaScript frameworks out there.

22
00:01:22.222 --> 00:01:26.327
We will mainly focus on how Spring Security needs to be configured on the

23
00:01:26.327 --> 00:01:30.036
resource server side to work with a public JavaScript client.

24
00:01:30.036 --> 00:01:35.724
However, feel free to check the React code out and take a look.

25
00:01:35.724 --> 00:01:39.063
And I will over time be updating it in Git to improve the security,

26
00:01:39.063 --> 00:01:43.699
like adding the authorization code grant with PKCE as this is

27
00:01:43.699 --> 00:01:45.704
now what the OAuth2 group is recommending.

28
00:01:45.704 --> 00:01:53.000
At the moment, it's just using the implicit flow. Next, we will secure our microservices.

