WEBVTT
1
00:00:01.983 --> 00:00:02.729
In this module,

2
00:00:02.729 --> 00:00:05.845
we only scratched the surface of the features Spring

3
00:00:05.845 --> 00:00:08.622
Security provides for authorization.

4
00:00:08.622 --> 00:00:13.608
Spring also supports even finer-grain authorization at the entity level where

5
00:00:13.608 --> 00:00:18.527
you can define access control to instances of your portfolio,

6
00:00:18.527 --> 00:00:22.387
like if you want to allow users to grant access to their

7
00:00:22.387 --> 00:00:25.324
portfolios to other users and friends.

8
00:00:25.324 --> 00:00:27.117
One important point.

9
00:00:27.117 --> 00:00:31.389
All communication in this demo is currently unsecured over HTTP,

10
00:00:31.389 --> 00:00:36.467
which means that anyone listening to network traffic can see

11
00:00:36.467 --> 00:00:39.711
the bearer tokens and simply use them.

12
00:00:39.711 --> 00:00:41.241
In a production system,

13
00:00:41.241 --> 00:00:46.957
you need to use TLS for all communication containing tokens and user data.

14
00:00:46.957 --> 00:00:50.410
Spring makes configuring this a breeze.

15
00:00:50.410 --> 00:00:55.797
In this module's demo pack, I will include a final version secured with HTTPS.

16
00:00:55.797 --> 00:00:57.782
If you're interested in learning more,

17
00:00:57.782 --> 00:00:59.816
check out the course Spring Security:

18
00:00:59.816 --> 00:01:04.463
Authentication/Authorization - Building Effective Layers of Defense,

19
00:01:04.463 --> 00:01:07.535
which covers how to configure HTTPS.

20
00:01:07.535 --> 00:01:15.000
Also, there is a module, which goes over more advanced authorization features in more detail.

