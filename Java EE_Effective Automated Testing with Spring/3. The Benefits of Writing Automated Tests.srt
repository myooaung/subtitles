1
00:00:02,583 --> 00:00:05,548
There are three major benefits to writing automated tests.

2
00:00:05,548 --> 00:00:08,550
The first is to verify the correctness of the code.

3
00:00:08,550 --> 00:00:12,189
When I say correctness I mean, does a code do what we expect it to do,

4
00:00:12,189 --> 00:00:13,146
given a scenario?

5
00:00:13,146 --> 00:00:16,015
If a null value is passed into the method,

6
00:00:16,015 --> 00:00:21,072
find users by last name, should the method throw an illegal argument exception?

7
00:00:21,072 --> 00:00:23,863
Should it return an empty list?

8
00:00:23,863 --> 00:00:25,724
Should something else happen?

9
00:00:25,724 --> 00:00:27,965
What constitutes correct behavior will vary depending

10
00:00:27,965 --> 00:00:31,140
upon the needs of your business, but by writing the test,

11
00:00:31,140 --> 00:00:35,325
we have an opportunity to verify the code is behaving correctly.

12
00:00:35,325 --> 00:00:37,658
On the subject of behavior,

13
00:00:37,658 --> 00:00:40,410
the second major benefit of writing automated tests are the

14
00:00:40,410 --> 00:00:43,990
test service documentation of system behavior.

15
00:00:43,990 --> 00:00:47,738
Tests are an opportunity to describe our system when it's in motion,

16
00:00:47,738 --> 00:00:50,521
or in other words, how our system behaves.

17
00:00:50,521 --> 00:00:53,847
So it is important when writing test cases we take time to make sure

18
00:00:53,847 --> 00:00:56,690
we are giving the test cases meaningful names.

19
00:00:56,690 --> 00:01:01,365
A bad test case name would be, test find users by last name failure,

20
00:01:01,365 --> 00:01:05,112
as there could be several reasons why find users by last name could fail.

21
00:01:05,112 --> 00:01:09,087
A much better name would be return empty list for a null last name,

22
00:01:09,087 --> 00:01:11,653
as that not only describes the scenario,

23
00:01:11,653 --> 00:01:13,853
but the expected result as well.

24
00:01:13,853 --> 00:01:17,162
The final major benefit to writing automated tests is to detect regression,

25
00:01:17,162 --> 00:01:20,876
and this is only possible if we are automating our test.

26
00:01:20,876 --> 00:01:23,090
While the two previous goals can be fulfilled at the

27
00:01:23,090 --> 00:01:24,841
instance when the code is being written,

28
00:01:24,841 --> 00:01:27,657
only when tests are automated will we be able to

29
00:01:27,657 --> 00:01:32,096
ensure that as code is modified, we are not breaking existing functionality.

30
00:01:32,096 --> 00:01:34,756
So if automated testing provides so many benefits,

31
00:01:34,756 --> 00:01:37,660
why isn't automated testing a more common practice?

32
00:01:37,660 --> 00:01:41,968
So there are three major impediments for why tests are not written.

33
00:01:41,968 --> 00:01:45,693
The first major impediment is, it takes too long to write tests.

34
00:01:45,693 --> 00:01:49,332
Developers who are already struggling to deliver new features and bug fixes

35
00:01:49,332 --> 00:01:51,977
to production don't feel they have time to write tests.

36
00:01:51,977 --> 00:01:56,094
A couple of common reasons for this are finding test data that's difficult

37
00:01:56,094 --> 00:01:59,802
or the code into test requires a lot of complex setup.

38
00:01:59,802 --> 00:02:02,781
The second major impediment is tests are difficult to maintain.

39
00:02:02,781 --> 00:02:08,455
While a test when first written passes, it's not long before it begins to fail.

40
00:02:08,455 --> 00:02:10,836
Sometimes it's difficult to determine why the test failed,

41
00:02:10,836 --> 00:02:13,725
or even if it's known it may be difficult to fix,

42
00:02:13,725 --> 00:02:14,249
or finally,

43
00:02:14,249 --> 00:02:18,897
the test needs to be heavily rewritten because it changes the downstream code.

44
00:02:18,897 --> 00:02:22,533
The final major impediment is tests do not provide enough value.

45
00:02:22,533 --> 00:02:25,173
This impediment is more the result of the first two.

46
00:02:25,173 --> 00:02:27,453
Because it takes too long to write automated tests,

47
00:02:27,453 --> 00:02:30,711
and because it takes a lot of time to maintain the tests,

48
00:02:30,711 --> 00:02:33,474
both managers and developers often feel that automated

49
00:02:33,474 --> 00:02:35,790
testing does not provide much value.

50
00:02:35,790 --> 00:02:38,228
Much of the source of these impediments can be traced back

51
00:02:38,228 --> 00:02:40,350
to poor design choices when writing code.

52
00:02:40,350 --> 00:02:43,171
So let's explore some design principles and patterns

53
00:02:43,171 --> 00:02:48,000
that will make writing tests easier, faster, and more reliable.

