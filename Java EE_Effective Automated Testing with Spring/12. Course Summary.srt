1
00:00:02,760 --> 00:00:04,244
As this course draws to a close,

2
00:00:04,244 --> 00:00:07,355
let's take a look at what we have learned and some

3
00:00:07,355 --> 00:00:09,242
resources for additional learning.

4
00:00:09,242 --> 00:00:11,764
The first and most important thing I hoped you learned is that

5
00:00:11,764 --> 00:00:15,363
automated testing is a critical step when writing software.

6
00:00:15,363 --> 00:00:19,114
Automated testing isn't an afterthought to be completed if you have time

7
00:00:19,114 --> 00:00:22,629
near the end of a project or after you've fixed a bug,

8
00:00:22,629 --> 00:00:25,041
but can be a helpful guide during development,

9
00:00:25,041 --> 00:00:29,200
allowing for rapid feedback as you build a feature or fix a bug.

10
00:00:29,200 --> 00:00:31,615
Automated tests also help development teams maintain

11
00:00:31,615 --> 00:00:33,890
their cadence over the long term,

12
00:00:33,890 --> 00:00:38,364
as automated tests help guard against introducing bugs into production.

13
00:00:38,364 --> 00:00:41,312
We also learned one of the biggest impediments to writing tests is

14
00:00:41,312 --> 00:00:44,986
that the code we write is often difficult to test.

15
00:00:44,986 --> 00:00:46,121
To that end,

16
00:00:46,121 --> 00:00:49,149
following SOLID principles can help guide you towards

17
00:00:49,149 --> 00:00:51,775
writing software that is easy to test.

18
00:00:51,775 --> 00:00:54,563
Keeping classes relatively simple and focused,

19
00:00:54,563 --> 00:00:58,252
using interfaces between higher-level classes and low-level

20
00:00:58,252 --> 00:01:01,153
implementations allows for the easy swapping of mock

21
00:01:01,153 --> 00:01:04,509
implementations with real implementations.

22
00:01:04,509 --> 00:01:07,510
Passing in dependencies through constructors instead of as

23
00:01:07,510 --> 00:01:11,424
fields all greatly help in easing the burden of both

24
00:01:11,424 --> 00:01:12,997
writing and maintaining tests.

25
00:01:12,997 --> 00:01:15,016
While unit testing is often the first thing thought

26
00:01:15,016 --> 00:01:19,915
of when writing automated tests, it is important to test underlying libraries,

27
00:01:19,915 --> 00:01:22,842
as well as integration with external services.

28
00:01:22,842 --> 00:01:25,576
Testing underlying libraries allows you to keep up with the

29
00:01:25,576 --> 00:01:27,827
latest features and security patches.

30
00:01:27,827 --> 00:01:32,700
Integration testing with external services ensures you don't run into issues of,

31
00:01:32,700 --> 00:01:34,508
it ran on my machine.

32
00:01:34,508 --> 00:01:38,360
Finally, we learned that tests can be used as documentation,

33
00:01:38,360 --> 00:01:42,793
and that can help further increase the value of a test we write.

34
00:01:42,793 --> 00:01:44,896
Tests aren't just a sunk cost,

35
00:01:44,896 --> 00:01:47,819
but can provide ongoing value by documenting how

36
00:01:47,819 --> 00:01:50,692
areas of code will behave when used.

37
00:01:50,692 --> 00:01:53,567
We also looked at tools that can retest and then write out

38
00:01:53,567 --> 00:01:57,521
documentation they can then share with interested parties.

39
00:01:57,521 --> 00:02:01,884
For additional learning, I would recommend checking out these resources.

40
00:02:01,884 --> 00:02:05,921
My friend Josh Long produces a video series called Spring Tips,

41
00:02:05,921 --> 00:02:10,797
which are short videos on how to use various Spring Tools and libraries.

42
00:02:10,797 --> 00:02:14,424
This is a good general resource for learning about Spring,

43
00:02:14,424 --> 00:02:18,062
and he's occasionally covered testing subjects as well.

44
00:02:18,062 --> 00:02:20,405
If you find yourself in the C# world,

45
00:02:20,405 --> 00:02:24,827
I would highly recommend watching the Effective C# Unit Testing for

46
00:02:24,827 --> 00:02:27,813
Enterprise Applications course here on Pluralsight.

47
00:02:27,813 --> 00:02:32,163
Petri Kainulainen, I believe that is the correct pronunciation,

48
00:02:32,163 --> 00:02:35,945
has a blog that focuses squarely on testing in Java,

49
00:02:35,945 --> 00:02:39,649
that I have found very helpful in the past.

50
00:02:39,649 --> 00:02:43,237
Finally, I would recommend checking out my company's blog.

51
00:02:43,237 --> 00:02:46,617
I will be writing a series of blog articles covering topics I

52
00:02:46,617 --> 00:02:48,974
didn't have a chance to get to during the video,

53
00:02:48,974 --> 00:02:52,589
or going into more depth on a couple of other topics I do cover.

54
00:02:52,589 --> 00:02:54,413
If you've found this video interesting,

55
00:02:54,413 --> 00:02:59,134
I would highly recommend also following my blog series as well.

56
00:02:59,134 --> 00:03:02,918
Producing this course has been an incredible learning experience for me.

57
00:03:02,918 --> 00:03:05,209
I can honestly say I have taken many lessons I have

58
00:03:05,209 --> 00:03:06,590
learned or covered during this course,

59
00:03:06,590 --> 00:03:09,223
and been able to apply them directly to my day-to-day

60
00:03:09,223 --> 00:03:11,766
job that has made my life easier.

61
00:03:11,766 --> 00:03:14,700
I hope you learn as much from this course as I have,

62
00:03:14,700 --> 00:03:21,000
and what you learn helps you code better. Thanks for watching.

