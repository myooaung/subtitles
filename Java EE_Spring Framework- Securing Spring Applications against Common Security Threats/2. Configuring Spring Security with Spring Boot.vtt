WEBVTT
1
00:00:01.640 --> 00:00:05.850
Throughout this course, we will be referring to the demo application.

2
00:00:05.850 --> 00:00:10.540
The code is in the following GitHub repository if you want to follow along,

3
00:00:10.540 --> 00:00:14.670
or you can download it through the Exercise Files tab in this course.

4
00:00:14.670 --> 00:00:16.970
As you're probably already aware of,

5
00:00:16.970 --> 00:00:20.680
the fastest way to get a Spring Boot web application up and

6
00:00:20.680 --> 00:00:24.930
running is to use the Spring Initializer web page.

7
00:00:24.930 --> 00:00:26.940
Put in your details,

8
00:00:26.940 --> 00:00:32.140
add the dependencies you need, and simply download the project scaffolding.

9
00:00:32.140 --> 00:00:37.540
Now I'm using Spring Tool Suite so I can actually do it straight from my IDE.

10
00:00:37.540 --> 00:00:40.990
Let's create a simple controller with a greeting.

11
00:00:40.990 --> 00:00:43.740
Now if we run this application,

12
00:00:43.740 --> 00:00:49.420
we can see the greeting. Great. Now because we're using Spring Boot,

13
00:00:49.420 --> 00:00:54.730
all that we have to do to add security into our new application is to

14
00:00:54.730 --> 00:00:58.140
add this Spring Boot starter dependency.

15
00:00:58.140 --> 00:01:01.540
Now if we restart our application, voila.

16
00:01:01.540 --> 00:01:04.670
Spring Boot has configured Spring Security, and here

17
00:01:04.670 --> 00:01:07.240
we have this bland login page.

18
00:01:07.240 --> 00:01:08.290
Now by default,

19
00:01:08.290 --> 00:01:13.590
Spring Boot even configures a test user for us. The username is user,

20
00:01:13.590 --> 00:01:17.040
and the password is actually printed in the log.

21
00:01:17.040 --> 00:01:21.440
Awesome, right? Now this is far from productionâ€‘ready,

22
00:01:21.440 --> 00:01:24.140
but neither is our web application.

23
00:01:24.140 --> 00:01:27.980
Spring Boot has essentially configured the default implementation of

24
00:01:27.980 --> 00:01:33.290
Spring Security that we can now customize and build on top of to meet

25
00:01:33.290 --> 00:01:42.000
our unique application security requirements. Next, let's take a look at what Spring Boot configured and how it did it.

