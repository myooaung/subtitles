WEBVTT
1
00:00:01.740 --> 00:00:04.330
Let's set up logging out. Again,

2
00:00:04.330 --> 00:00:10.340
using the familiar HttpSecurity builder method we can use the logout builder.

3
00:00:10.340 --> 00:00:15.400
This will require a simple POST request to the logout endpoint.

4
00:00:15.400 --> 00:00:20.310
I will make my endpoint /api/logout. And then from my React

5
00:00:20.310 --> 00:00:24.120
application, when I click on the Logout button, it can submit

6
00:00:24.120 --> 00:00:26.480
a POST request to this endpoint,

7
00:00:26.480 --> 00:00:30.160
which will log the user out of the server. Now, one thing to

8
00:00:30.160 --> 00:00:33.400
note, if we want to allow the user to re‑login,

9
00:00:33.400 --> 00:00:36.230
say provide them with the Login button,

10
00:00:36.230 --> 00:00:41.040
we need to reload the page so that the request goes to the web server.

11
00:00:41.040 --> 00:00:45.060
The Spring security filters will then detect that the session is terminated

12
00:00:45.060 --> 00:00:49.860
and the user requires authentication to access the indexed or HTML page and

13
00:00:49.860 --> 00:00:54.690
then redirect the user to the login page. In my React application, when the

14
00:00:54.690 --> 00:00:59.710
user selects the Login button I just simply use the windows.location.reload

15
00:00:59.710 --> 00:01:00.860
to reload the page.

16
00:01:00.860 --> 00:01:04.340
It's the same as if I refresh the page. Now currently our demo

17
00:01:04.340 --> 00:01:09.000
application is a bit of a hybrid with Spring MVC for the authentication

18
00:01:09.000 --> 00:01:18.000
combined with a React single‑page application. Next, let's look at how we can move the login page into the React application.

