1
00:00:01,740 --> 00:00:05,710
Now until now, we have mainly focused on security filters.

2
00:00:05,710 --> 00:00:08,420
But there is one other security component,

3
00:00:08,420 --> 00:00:10,640
the HTTP firewall,

4
00:00:10,640 --> 00:00:15,000
which is actually the first line of defense when a request hits the web server.

5
00:00:15,000 --> 00:00:18,720
The FilterChainProxy will first run requests through the

6
00:00:18,720 --> 00:00:22,440
HTTP firewall before any filter chains.

7
00:00:22,440 --> 00:00:27,540
The HTTP firewall is an interface, and there are two flavors Spring provides,

8
00:00:27,540 --> 00:00:29,900
strict and default.

9
00:00:29,900 --> 00:00:35,040
Ironically, by default, Spring uses the strict version and not the default.

10
00:00:35,040 --> 00:00:36,140
Go figure.

11
00:00:36,140 --> 00:00:39,720
The HTTP firewall protects your application in a number of ways. It

12
00:00:39,720 --> 00:00:43,840
enforces a whitelist of approved HTTP methods,

13
00:00:43,840 --> 00:00:48,710
hence providing some protection against HTTP verb tampering and cross‑site

14
00:00:48,710 --> 00:00:54,150
tracing attacks as HTTP methods such as connect and trace are blocked by

15
00:00:54,150 --> 00:00:58,740
default. It also protects against many forms of URL tampering.

16
00:00:58,740 --> 00:01:04,780
It blocks percentages or encoded percentages from requests, URL‑encoded periods,

17
00:01:04,780 --> 00:01:08,700
semicolons, URL‑encoded forward slashes,

18
00:01:08,700 --> 00:01:11,250
double forwards, and backslashes.

19
00:01:11,250 --> 00:01:14,560
It also enforces that only principle ASCII

20
00:01:14,560 --> 00:01:17,540
characters are allowed in request URLs.

21
00:01:17,540 --> 00:01:21,090
This is to protect against injecting non‑ASCII characters

22
00:01:21,090 --> 00:01:24,730
to look similar. Example, a unicode character that looks

23
00:01:24,730 --> 00:01:26,630
like an a, but really is not.

24
00:01:26,630 --> 00:01:29,660
Now the default version of the firewall is more

25
00:01:29,660 --> 00:01:31,360
forgiving than the stricter version.

26
00:01:31,360 --> 00:01:35,740
It tries to resolve some of the issues by sanitizing the URLs.

27
00:01:35,740 --> 00:01:38,540
However, Spring recommends using the strict version,

28
00:01:38,540 --> 00:01:42,890
which is why it's default. Again, these features are all customizable.

29
00:01:42,890 --> 00:01:51,000
Just expose your own instance of the HTTP firewall, which will have many setter methods for you to override these settings.

