1
00:00:01,840 --> 00:00:05,800
You can now see what makes Spring Security so portable as all you really

2
00:00:05,800 --> 00:00:10,040
need to do is add one filter to your servlet container,

3
00:00:10,040 --> 00:00:13,440
and Spring Boot does this for you right out of the box.

4
00:00:13,440 --> 00:00:15,620
And, as you probably already noticed,

5
00:00:15,620 --> 00:00:20,280
Spring Security is made up of filters and filters within filters,

6
00:00:20,280 --> 00:00:23,760
each of which perform some sort of security checks or routing

7
00:00:23,760 --> 00:00:28,250
or tasks on the request before a request is actually allowed

8
00:00:28,250 --> 00:00:30,440
to reach its final destination.

9
00:00:30,440 --> 00:00:31,730
Now in Spring Boot,

10
00:00:31,730 --> 00:00:35,790
it's super easy to get a barebones security implementation up and

11
00:00:35,790 --> 00:00:40,190
running as soon as you start working on your project. So security

12
00:00:40,190 --> 00:00:42,340
no longer has to be an afterthought.

13
00:00:42,340 --> 00:00:45,960
It can evolve with your application from day 1,

14
00:00:45,960 --> 00:00:48,290
and that's important because security is one of those

15
00:00:48,290 --> 00:01:00,000
nonfunctional requirements that's like technical debt. The longer you leave it, the more interest in effort you will pay in the future.

