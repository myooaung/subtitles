WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.440 --> 00:00:05.100
Now how things looking like we want them on smaller devices.

00:00:05.100 --> 00:00:11.685
We can now begin to widen the browser to simulate how things will look on larger devices.

00:00:11.685 --> 00:00:15.540
We can then use a media query to only apply

00:00:15.540 --> 00:00:19.555
CSS when the browser is wider than which we set.

00:00:19.555 --> 00:00:22.590
Basically smaller screens will look one way and

00:00:22.590 --> 00:00:26.060
the larger screens can have different layouts and styles.

00:00:26.060 --> 00:00:31.260
If we go back over to Inspect and open up the developer tools,

00:00:32.110 --> 00:00:37.160
we can click on this divide here and make the website smaller or

00:00:37.160 --> 00:00:42.680
larger and we can also see at the top there that we can see the width of the browser.

00:00:42.680 --> 00:00:45.880
This allows us to see a screen width where

00:00:45.880 --> 00:00:50.245
our content starts to look out of place for larger devices.

00:00:50.245 --> 00:00:56.010
We can see for smaller devices this full width approach works fine.

00:00:56.010 --> 00:01:01.500
However, if we stretch the browser to around 1000 pixels,

00:01:02.730 --> 00:01:06.080
it looks like it's a little bit wider,

00:01:07.520 --> 00:01:12.415
things begin to look a little stretched and in need of a change.

00:01:12.415 --> 00:01:16.000
This is where media queries come into play.

00:01:16.000 --> 00:01:22.195
Media queries allow us to only apply certain CSS properties if a condition is true.

00:01:22.195 --> 00:01:27.100
For example, we can change styles or layouts for devices in landscape or

00:01:27.100 --> 00:01:32.995
portrait or we can set a minimum or maximum width to apply the media query.

00:01:32.995 --> 00:01:35.860
There are also many more conditions which we can

00:01:35.860 --> 00:01:41.180
set and there will be more links in the resources download to see some of these too.

00:01:41.180 --> 00:01:45.970
Let's head over to the stylesheets and begins add these to our site.

00:01:45.970 --> 00:01:51.170
Let's open up Visual Studio code and add our media query.

00:01:51.260 --> 00:01:53.350
To set a media query,

00:01:53.350 --> 00:01:57.835
we can use the CSS free media type using @media.

00:01:57.835 --> 00:02:01.900
Down at the bottom bellow are all of our styles,

00:02:01.900 --> 00:02:07.285
going to add @media and then just like the style in above,

00:02:07.285 --> 00:02:10.550
this had its own set of curly braces.

00:02:11.880 --> 00:02:15.610
Then after @media we can add some brackets to

00:02:15.610 --> 00:02:18.980
add the condition where this media query will apply.

00:02:18.980 --> 00:02:27.470
I want these styles to apply once the browser hits a minimum width of 1,000 pixels.

00:02:28.430 --> 00:02:33.565
Remember from before I was starting to look little overstretched of this size.

00:02:33.565 --> 00:02:36.490
This is why I've set it to 1,000 pixels.

00:02:36.490 --> 00:02:39.955
Feel free to change your size depending on your site.

00:02:39.955 --> 00:02:44.065
Then we can add our CSS styles within these curly braces,

00:02:44.065 --> 00:02:45.995
just like we always have done.

00:02:45.995 --> 00:02:52.255
I'm going to begin by setting the maximum weight for the body to around 1,600 pixels.

00:02:52.255 --> 00:02:57.595
This will stop the content being too stretched when we get to really big monitors.

00:02:57.595 --> 00:03:00.850
We can do this within the body.

00:03:03.980 --> 00:03:11.650
I'm going set the maximum width of 1,600 pixels.

00:03:12.020 --> 00:03:14.560
This will restrict the size of

00:03:14.560 --> 00:03:18.590
the website so things don't get really stretched on big monitors.

00:03:18.590 --> 00:03:21.685
Next we can set the margin values.

00:03:21.685 --> 00:03:26.110
I'm going to do this with margin zero auto.

00:03:26.110 --> 00:03:30.425
Zero adds no margin to the top and bottom.

00:03:30.425 --> 00:03:34.780
Also will automatically make the margin on the left and right to be

00:03:34.780 --> 00:03:37.510
equal meaning that the website will be in

00:03:37.510 --> 00:03:41.900
the center of the page when it's over 1,600 pixels.

00:03:42.650 --> 00:03:46.750
Save that and you won't notice

00:03:46.750 --> 00:03:50.725
any difference on my version because the screen is quite small.

00:03:50.725 --> 00:03:56.135
But margin zero auto will cause this to be in the center on large monitors.

00:03:56.135 --> 00:04:00.260
Now remember from the slides earlier we talked about how

00:04:00.260 --> 00:04:04.340
media queries can be used to change layouts using flexbox.

00:04:04.340 --> 00:04:07.360
Well, now is the time to see these in action.

00:04:07.360 --> 00:04:13.440
Over 1,000 pixels, we can change the flex direction in the header to row,

00:04:13.520 --> 00:04:17.270
just below the body and also make sure this is

00:04:17.270 --> 00:04:21.390
still within the curly braces of the media query.

00:04:21.450 --> 00:04:30.060
Let's target the header and then set the flex direction to be row.

00:04:30.650 --> 00:04:33.855
Then go over and refresh.

00:04:33.855 --> 00:04:36.000
This means on large screens,

00:04:36.000 --> 00:04:39.410
our header content is no longer stacked on top of each other.

00:04:39.410 --> 00:04:42.815
We now see that the content is side-by-side.

00:04:42.815 --> 00:04:45.860
If we go back below 1,000 pixels,

00:04:45.860 --> 00:04:52.100
we can see that the original styles still apply so these are stocked as a column.

00:04:52.550 --> 00:04:55.635
Back to the larger devices.

00:04:55.635 --> 00:04:59.410
This is better but the list items are still stacked.

00:04:59.410 --> 00:05:02.990
It would look better if the list items were in line.

00:05:02.990 --> 00:05:08.160
We can change the display type to be inline-block to achieve this.

00:05:09.530 --> 00:05:12.240
Let's target the header,

00:05:12.240 --> 00:05:19.720
list items and then all we need to do is to set the display type to be inline-block.

00:05:20.300 --> 00:05:24.030
We'll save that and then refresh.

00:05:24.030 --> 00:05:28.000
Now I can see we have the list items in line.

00:05:28.000 --> 00:05:32.030
By default, list items display type is set to block,

00:05:32.030 --> 00:05:35.000
meaning elements will start on the online.

00:05:35.000 --> 00:05:40.825
Inline-block will allow this particular element to be arraigned alongside each other.

00:05:40.825 --> 00:05:44.075
Let's keep working within this header section.

00:05:44.075 --> 00:05:46.025
Below the header li,

00:05:46.025 --> 00:05:48.605
I'm going to target two elements,

00:05:48.605 --> 00:05:51.935
first the header h1,

00:05:51.935 --> 00:05:58.320
which is the main site title and then separated by a comma,

00:05:58.320 --> 00:06:01.470
we can also target the header nav.

00:06:01.760 --> 00:06:04.955
This is just a convenient way of targeting

00:06:04.955 --> 00:06:08.945
two separate elements and applying the same styles to both.

00:06:08.945 --> 00:06:12.415
I'm going to set the flex value to be one.

00:06:12.415 --> 00:06:16.140
Set the flex to one for both the h1 and also

00:06:16.140 --> 00:06:21.050
the nav will ensure that both take-up an equal amount of space.

00:06:21.050 --> 00:06:25.910
Save that and then refresh and now we can see the header,

00:06:25.910 --> 00:06:30.170
title, and also the navigation it takes up the same space.

00:06:30.170 --> 00:06:36.005
The flex value describes how an item will grow or shrink to fit the available space.

00:06:36.005 --> 00:06:39.995
If for example, we set the nav to have a flex value of two,

00:06:39.995 --> 00:06:44.560
it would try to take up twice the available space of the h1.

00:06:44.560 --> 00:06:48.180
Now each element is taking up the equal amount of space,

00:06:48.180 --> 00:06:53.730
we can flow the header into the left and also flow the nav links to the right.

00:06:54.680 --> 00:06:58.480
Let's start with the level 1 heading.

00:06:58.790 --> 00:07:06.215
Header, h1, we've used text-align before for the center.

00:07:06.215 --> 00:07:09.530
But this time we're going to set the alignment to be

00:07:09.530 --> 00:07:15.785
the left and then refresh and now we can see the heading is pushed over to the left.

00:07:15.785 --> 00:07:19.860
The same can also be done with the header nav.

00:07:22.420 --> 00:07:27.805
But of course this time we need to set the text line to be the right.

00:07:27.805 --> 00:07:32.485
Give that a save and now we should see the links on the right hand side.

00:07:32.485 --> 00:07:36.020
This now gives us a nice looking header,

00:07:36.020 --> 00:07:40.850
each side taking up an equal amount of space and flow into the edge of the page.

00:07:40.850 --> 00:07:44.885
If we resize the browser down below 1,000 pixels,

00:07:44.885 --> 00:07:48.320
we can see that the original styles still apply.

00:07:48.320 --> 00:07:51.985
We still have the header stacked on top of each other.

00:07:51.985 --> 00:07:55.790
Now that's our landing page all complete.

00:07:55.790 --> 00:07:57.785
Congratulations on getting this far,

00:07:57.785 --> 00:08:00.240
and I'll see you in the next video.
