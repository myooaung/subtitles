WEBVTT
1
00:00:01.090 --> 00:00:03.660
A key goal of kanban is a smooth,

2
00:00:03.660 --> 00:00:10.340
consistent flow of work, quite different from waterfall. Let's explore further.

3
00:00:10.340 --> 00:00:12.890
So ideally, we want a smooth flow of work.

4
00:00:12.890 --> 00:00:16.500
That is why we want to try as hard as possible to reduce or eliminate

5
00:00:16.500 --> 00:00:19.180
the churn we talked about earlier with waterfall.

6
00:00:19.180 --> 00:00:23.010
What allows a smooth flow with kanban? Well, the following. Product

7
00:00:23.010 --> 00:00:26.440
changes receive speedy customer feedback, your team will be able to

8
00:00:26.440 --> 00:00:30.310
quickly adjust to daily shifts in business, your process for development

9
00:00:30.310 --> 00:00:34.670
is designed to reduce or eliminate a buildup of defects and quality

10
00:00:34.670 --> 00:00:39.130
issues. So our goal is a smooth, just‑in‑time flow of work.

11
00:00:39.130 --> 00:00:42.440
As you may know, just in time is a lean concept,

12
00:00:42.440 --> 00:00:44.700
basically meaning a system in which materials,

13
00:00:44.700 --> 00:00:48.970
components or requirements and software that are delivered immediately

14
00:00:48.970 --> 00:00:51.840
when they are required in order to minimize costs.

15
00:00:51.840 --> 00:00:55.450
This is kanban, whereas waterfall is the exact opposite.

16
00:00:55.450 --> 00:01:02.340
Kanban is built for smooth and continuous delivery of customer value.

17
00:01:02.340 --> 00:01:04.600
So to further emphasize this point,

18
00:01:04.600 --> 00:01:07.300
let's look at the relationship between time and quality

19
00:01:07.300 --> 00:01:09.310
in the software development process.

20
00:01:09.310 --> 00:01:11.230
Okay, so here's our axis,

21
00:01:11.230 --> 00:01:15.240
and on the X axis is the time between requirements and production.

22
00:01:15.240 --> 00:01:18.940
Not very much time to the left, more time to the right, between

23
00:01:18.940 --> 00:01:22.780
requirements and production. On the Y axis, lower down would be higher

24
00:01:22.780 --> 00:01:25.730
quality and up would be the lower quality quadrant.

25
00:01:25.730 --> 00:01:28.240
Now, in that particular point on the graph,

26
00:01:28.240 --> 00:01:31.280
that's very little time between requirements and production,

27
00:01:31.280 --> 00:01:34.690
higher quality. Medium time, between the time you write

28
00:01:34.690 --> 00:01:36.940
requirements and get all the way through your process to

29
00:01:36.940 --> 00:01:39.330
production, would be probably moderate quality.

30
00:01:39.330 --> 00:01:40.220
And lastly,

31
00:01:40.220 --> 00:01:43.480
if it takes you a very long time between the time you start

32
00:01:43.480 --> 00:01:45.940
requirements and you actually delivered a production,

33
00:01:45.940 --> 00:01:49.250
you're going to have much lower quality. Now, there's been many

34
00:01:49.250 --> 00:01:51.920
studies on this and proven time and time again.

35
00:01:51.920 --> 00:01:55.410
That was why we had one of the big drivers for agile and Scrum

36
00:01:55.410 --> 00:02:02.000
because it reduced it into sprints, and also with kanban we're reducing it into a continuous daily flow.

