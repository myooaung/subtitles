1
00:00:01,240 --> 00:00:03,420
You must, this is not an option,

2
00:00:03,420 --> 00:00:06,540
measure your success through metrics and reporting.

3
00:00:06,540 --> 00:00:09,200
This will instill confidence in management and be a

4
00:00:09,200 --> 00:00:10,970
big morale booster to your team.

5
00:00:10,970 --> 00:00:14,660
Okay, so let's touch on a couple of simple examples.

6
00:00:14,660 --> 00:00:19,000
Over time, you may want more metrics than I'm about to show you,

7
00:00:19,000 --> 00:00:20,170
but here's a start.

8
00:00:20,170 --> 00:00:21,510
I love metrics,

9
00:00:21,510 --> 00:00:24,200
since I need to understand if the processes we use

10
00:00:24,200 --> 00:00:26,450
to run a business actually work.

11
00:00:26,450 --> 00:00:28,240
I would begin with very simple metrics.

12
00:00:28,240 --> 00:00:30,670
Maybe track just two or three indicators.

13
00:00:30,670 --> 00:00:32,010
Don't go overboard.

14
00:00:32,010 --> 00:00:36,570
You apply metrics to measure productivity, that is how well is your team doing?

15
00:00:36,570 --> 00:00:39,800
The feedback is essential for a few reasons; your team,

16
00:00:39,800 --> 00:00:43,220
so they can see and understand what's happening; your management,

17
00:00:43,220 --> 00:00:45,410
so they can trust that you know what you're doing,

18
00:00:45,410 --> 00:00:49,600
and since they backed a proposal to implement or enhance your use of Kanban,

19
00:00:49,600 --> 00:00:54,240
they want to know if their decision was right; your customers as well,

20
00:00:54,240 --> 00:00:58,740
since they may see a dip in productivity initially as you come online or

21
00:00:58,740 --> 00:01:02,430
change your current Kanban usage. Always provide feedback,

22
00:01:02,430 --> 00:01:06,380
whether good news or not, and if your metrics and reports are showing issues,

23
00:01:06,380 --> 00:01:09,320
well, to me that's a type of good news in a sense,

24
00:01:09,320 --> 00:01:13,430
since you found something in your value stream that needs attention. You always

25
00:01:13,430 --> 00:01:17,340
use the feedback to further enhance and improve, perfect.

26
00:01:17,340 --> 00:01:21,740
Okay, now let's check out some examples.

27
00:01:21,740 --> 00:01:24,590
There is much material on metrics in the Kanban world,

28
00:01:24,590 --> 00:01:27,310
but here are a couple of simple ones to get you going

29
00:01:27,310 --> 00:01:29,710
and jump start your use of metrics.

30
00:01:29,710 --> 00:01:33,940
The first is our favorite, bugs, also known as the flip side of quality.

31
00:01:33,940 --> 00:01:35,450
The algorithm is simple.

32
00:01:35,450 --> 00:01:38,210
Number of bugs worked each day, say four,

33
00:01:38,210 --> 00:01:41,730
divided by the work in progress limits, and in this example,

34
00:01:41,730 --> 00:01:46,110
30. So bugs as a total percent of work in progress for a

35
00:01:46,110 --> 00:01:50,520
particular time period is 13% or 4 divided by 30.

36
00:01:50,520 --> 00:01:50,940
Now,

37
00:01:50,940 --> 00:01:55,340
if you are using a digital Kanban board, then you just need to tag each

38
00:01:55,340 --> 00:01:59,370
work in progress element as either a bugâ€‘related task or not. The tool

39
00:01:59,370 --> 00:02:01,540
will automatically create charts for you,

40
00:02:01,540 --> 00:02:04,480
or if the tool you use does not support metrics,

41
00:02:04,480 --> 00:02:08,010
you might be able to add a plugin to get this information. Okay,

42
00:02:08,010 --> 00:02:09,530
next is throughput.

43
00:02:09,530 --> 00:02:11,880
Throughput is the number of items that were

44
00:02:11,880 --> 00:02:14,140
delivered in any given period of time.

45
00:02:14,140 --> 00:02:16,670
So if we are producing 14 features per week,

46
00:02:16,670 --> 00:02:17,050
well,

47
00:02:17,050 --> 00:02:19,690
that's the throughput. Or another throughput measurement

48
00:02:19,690 --> 00:02:21,840
could be the number of tasks per week,

49
00:02:21,840 --> 00:02:25,640
and you would simply track your throughput over time for each task.

50
00:02:25,640 --> 00:02:29,150
Just these two simple metrics would be very valuable to show your

51
00:02:29,150 --> 00:02:31,580
management, customers, and your team members.

52
00:02:31,580 --> 00:02:37,940
So now that you know my simple algorithm, let's show you some sample charts.

53
00:02:37,940 --> 00:02:42,660
Here are my chart examples. Here is the bugs metric in the chart format.

54
00:02:42,660 --> 00:02:48,560
You can see here that bugs went up to 23% of our workload in these two periods.

55
00:02:48,560 --> 00:02:53,610
We can then discuss and reveal the causes in order to make future improvements.

56
00:02:53,610 --> 00:02:57,440
The other chart is our throughput example looking at features per month.

57
00:02:57,440 --> 00:02:59,140
Plus, I added the moving average.

58
00:02:59,140 --> 00:03:02,400
You can quickly see that May's throughput was less.

59
00:03:02,400 --> 00:03:05,680
This allows you to have a discussion to see what the cause may be.

60
00:03:05,680 --> 00:03:06,490
For example,

61
00:03:06,490 --> 00:03:08,970
it could have been that two people were out sick, then maybe

62
00:03:08,970 --> 00:03:11,400
that's just totally fine and expected.

63
00:03:11,400 --> 00:03:19,000
Also, report and share this information with your team for obvious reasons, but also your management as needed.

