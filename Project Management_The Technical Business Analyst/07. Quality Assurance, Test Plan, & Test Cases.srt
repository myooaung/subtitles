1
00:00:00,579 --> 00:00:04,559
Many times, quality assurance, creating test plans and test cases,

2
00:00:04,559 --> 00:00:06,569
is done last, or not at all.

3
00:00:06,569 --> 00:00:08,609
Even if you have a QA department or team,

4
00:00:08,609 --> 00:00:12,242
the technical BA can play a role and bridge the gap by

5
00:00:12,242 --> 00:00:15,252
providing some high-level QA planning material to the

6
00:00:15,252 --> 00:00:19,599
developers or the quality assurance team as well.

7
00:00:19,599 --> 00:00:23,266
"Quality means doing it right, even when no one is looking.

8
00:00:23,266 --> 00:00:25,549
" That's a famous quote by Henry Ford.

9
00:00:25,549 --> 00:00:28,044
It seems like testing is the last thing done in projects,

10
00:00:28,044 --> 00:00:29,559
and sometimes not even at all.

11
00:00:29,559 --> 00:00:35,589
So the technical BA can jump in and help out even if no one is looking.

12
00:00:35,589 --> 00:00:37,539
What is quality assurance?

13
00:00:37,539 --> 00:00:37,877
Well,

14
00:00:37,877 --> 00:00:42,579
quality assurance is one aspect of the larger discipline of quality management.

15
00:00:42,579 --> 00:00:45,924
The quality assurance function is concerned with confirming that

16
00:00:45,924 --> 00:00:48,549
a company's quality requirements will be met.

17
00:00:48,549 --> 00:00:51,863
Quality assurance is a way of preventing mistakes and defects in

18
00:00:51,863 --> 00:00:54,344
systems and avoiding problems when delivering systems,

19
00:00:54,344 --> 00:00:56,589
products or services to customers.

20
00:00:56,589 --> 00:01:00,079
Software quality assurance consists of a means of monitoring the

21
00:01:00,079 --> 00:01:03,097
software engineering processes used by the developers and their

22
00:01:03,097 --> 00:01:05,549
methods used to ensure quality.

23
00:01:05,549 --> 00:01:08,562
This is not part of the scope of this module or of the

24
00:01:08,562 --> 00:01:12,609
technical BA's role in my opinion, but wanted to point it out for completeness.

25
00:01:12,609 --> 00:01:17,589
A technical BA is typically not involved in these kinds of QA activities,

26
00:01:17,589 --> 00:01:21,579
and they are typically the domain of the IT department itself.

27
00:01:21,579 --> 00:01:25,619
But let's see where the technical BA does fit in.

28
00:01:25,619 --> 00:01:29,539
Now let's discuss what I am calling the QA umbrella.

29
00:01:29,539 --> 00:01:32,869
There is a part of QA that relates to the methods used to create

30
00:01:32,869 --> 00:01:36,559
software solutions and the monitoring of that activity,

31
00:01:36,559 --> 00:01:39,539
maybe like programming standards and unit testing.

32
00:01:39,539 --> 00:01:42,539
There is the test plan that must be created for every new system,

33
00:01:42,539 --> 00:01:44,539
major release or other deliverable.

34
00:01:44,539 --> 00:01:47,401
Then the test cases, which are really a subset of the test plan,

35
00:01:47,401 --> 00:01:50,589
and each test case is testing a specific feature,

36
00:01:50,589 --> 00:01:52,589
so you could have hundreds of test cases.

37
00:01:52,589 --> 00:01:54,609
And lastly the actual testing,

38
00:01:54,609 --> 00:01:58,069
either manual where someone is literally following the test

39
00:01:58,069 --> 00:02:00,306
cases as outlined and trying them out,

40
00:02:00,306 --> 00:02:03,276
or automated testing where the test cases are being

41
00:02:03,276 --> 00:02:05,539
implemented by another piece of software.

42
00:02:05,539 --> 00:02:10,034
I think the technical BA can certainly participate in these two boxed

43
00:02:10,034 --> 00:02:12,529
activities as makes sense for your environment,

44
00:02:12,529 --> 00:02:15,619
designing and authoring the test plan and associated test cases.

45
00:02:15,619 --> 00:02:19,599
Now let's drill a little deeper into these two.

46
00:02:19,599 --> 00:02:22,559
Here is what I would recommend with the technical BA's role

47
00:02:22,559 --> 00:02:24,599
with the test plan and the test cases.

48
00:02:24,599 --> 00:02:28,589
A test plan is a single document detailing the activities of all the things

49
00:02:28,589 --> 00:02:31,609
that must be performed in order to test the solution.

50
00:02:31,609 --> 00:02:33,619
It includes the objectives, resources,

51
00:02:33,619 --> 00:02:36,357
and processes required to ensure that the business

52
00:02:36,357 --> 00:02:39,529
requirements have been achieved and validated.

53
00:02:39,529 --> 00:02:42,549
Since the technical BA already has probably worked on the requirements,

54
00:02:42,549 --> 00:02:44,599
understands the stakeholders and the product backlog,

55
00:02:44,599 --> 00:02:47,609
I think they are well positioned to write the test plan.

56
00:02:47,609 --> 00:02:51,795
Secondly, a test case is a specification of the inputs,

57
00:02:51,795 --> 00:02:53,795
execution conditions, testing procedure,

58
00:02:53,795 --> 00:02:57,619
and expected results to actually test a single feature.

59
00:02:57,619 --> 00:03:00,529
Since your solution has many features,

60
00:03:00,529 --> 00:03:02,909
you will have a test case for every feature or

61
00:03:02,909 --> 00:03:05,569
multiple test cases for a single feature.

62
00:03:05,569 --> 00:03:09,185
The technical BA is very well suited to participate in the

63
00:03:09,185 --> 00:03:13,579
design and creation of these artifacts.

64
00:03:13,579 --> 00:03:17,589
Why might you want to use technical BAs to do quality assurance?

65
00:03:17,589 --> 00:03:19,559
Well, here's a few reasons.

66
00:03:19,559 --> 00:03:21,539
Lack of QA resources.

67
00:03:21,539 --> 00:03:22,609
Just not enough people to go around.

68
00:03:22,609 --> 00:03:24,559
Why not jump in and help?

69
00:03:24,559 --> 00:03:26,549
Knowledge of the requirements.

70
00:03:26,549 --> 00:03:30,609
The TBA will have a lot of deep knowledge about those requirements.

71
00:03:30,609 --> 00:03:33,579
Now you may even join the QA team to help test.

72
00:03:33,579 --> 00:03:37,559
If they need more resources, join the team for this phase of the project.

73
00:03:37,559 --> 00:03:39,619
Maybe even act as the product owner for this role.

74
00:03:39,619 --> 00:03:43,672
In other words, as the quality team is doing the testing,

75
00:03:43,672 --> 00:03:45,969
they might find different things that you'll be able to easily

76
00:03:45,969 --> 00:03:48,579
answer and address because you're close to the product owner

77
00:03:48,579 --> 00:03:49,619
and you know the requirements.

78
00:03:49,619 --> 00:03:52,559
Provide QA support as needed.

79
00:03:52,559 --> 00:03:54,723
Maybe you'll help with the test plan, the test cases,

80
00:03:54,723 --> 00:03:56,579
maybe even the testing itself.

81
00:03:56,579 --> 00:03:58,559
Think of yourself in the technical BA role,

82
00:03:58,559 --> 00:03:58,849
again,

83
00:03:58,849 --> 00:04:02,032
as having a very broad role that helps you bridge the

84
00:04:02,032 --> 00:04:04,619
gap between the business and IT.

85
00:04:04,619 --> 00:04:10,609
You are that special resource that can do so much more in your company.

86
00:04:10,609 --> 00:04:14,079
Most testing, especially in small and midsize companies,

87
00:04:14,079 --> 00:04:18,529
is all manual, but there are some pretty cool automated test tools out there,

88
00:04:18,529 --> 00:04:22,536
and here are a few: Selenium, Appium, TestComplete,

89
00:04:22,536 --> 00:04:27,529
Ranorex, HP QuickTest, Cucumber, Watir, and Tricentis.

90
00:04:27,529 --> 00:04:28,599
There are many, many more out there.

91
00:04:28,599 --> 00:04:32,049
This is just to point you in the right direction and start your

92
00:04:32,049 --> 00:04:36,559
research to find the automated tool that may work for you.

93
00:04:36,559 --> 00:04:40,619
Here is an example of a product from Tricentis for packaged app testing.

94
00:04:40,619 --> 00:04:44,142
Now, I am not expecting you to read any of this,

95
00:04:44,142 --> 00:04:46,619
but to show you that the tool is a visual representation

96
00:04:46,619 --> 00:04:48,619
of the results of automated testing.

97
00:04:48,619 --> 00:04:56,000
So a visual tool like this can be invaluable. I will always emphasize visual tools.

