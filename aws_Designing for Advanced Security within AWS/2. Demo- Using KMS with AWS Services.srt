1
00:00:02,840 --> 00:00:06,620
[Autogenerated] Let's go to AWS Kms and create a customer.

2
00:00:06,620 --> 00:00:11,330
Master Key will assign permissions to administer and used the key.

3
00:00:11,330 --> 00:00:16,150
Then take a look at some AWS services that error integrated with kms,

4
00:00:16,150 --> 00:00:19,370
and see how easy it is to encrypt your data in those

5
00:00:19,370 --> 00:00:22,800
services from the AWS console.

6
00:00:22,800 --> 00:00:25,240
Select Key Management Service.

7
00:00:25,240 --> 00:00:29,740
If it's not in your recently visited services, just type it.

8
00:00:29,740 --> 00:00:33,750
I'm assuming a role I created called Kms Admin that has

9
00:00:33,750 --> 00:00:36,350
the proper permissions to create a key.

10
00:00:36,350 --> 00:00:39,840
Let's create a customer managed key.

11
00:00:39,840 --> 00:00:42,090
I'll close this so we can see what we're doing.

12
00:00:42,090 --> 00:00:44,740
Select Create Key,

13
00:00:44,740 --> 00:00:50,040
for this example will create a symmetric key for data encryption,

14
00:00:50,040 --> 00:00:54,940
and under the advanced options will have kms provide the key material.

15
00:00:54,940 --> 00:00:57,740
Recall that you can import your own key material,

16
00:00:57,740 --> 00:01:02,030
which would be external, or you could have it generated from a custom key store.

17
00:01:02,030 --> 00:01:05,340
We'll stick with kms, then select Next.

18
00:01:05,340 --> 00:01:06,980
Provide a name and a description.

19
00:01:06,980 --> 00:01:07,950
I'll call this E.

20
00:01:07,950 --> 00:01:14,930
C two key, and we're going to use this to encrypt E c two volumes.

21
00:01:14,930 --> 00:01:18,540
You can add any desire tags.

22
00:01:18,540 --> 00:01:19,100
Next.

23
00:01:19,100 --> 00:01:22,250
We need to select who can administer this key.

24
00:01:22,250 --> 00:01:29,740
I'm going to have the kms admin role allowed to administer this key.

25
00:01:29,740 --> 00:01:35,140
You can select whether the administrators can delete the key or not.

26
00:01:35,140 --> 00:01:38,740
Next will assign the key usage permissions.

27
00:01:38,740 --> 00:01:44,240
I've created another role for the Kms user.

28
00:01:44,240 --> 00:01:48,950
Note that you can also add other AWS accounts that can use the key will hit.

29
00:01:48,950 --> 00:01:49,720
Next.

30
00:01:49,720 --> 00:01:53,550
You can review the resulting policy that will be generated for

31
00:01:53,550 --> 00:01:57,240
administering and using the key than when you're satisfied.

32
00:01:57,240 --> 00:01:57,820
Hit.

33
00:01:57,820 --> 00:01:59,540
Finish.

34
00:01:59,540 --> 00:02:03,640
Here we can see the key was successfully created.

35
00:02:03,640 --> 00:02:06,730
This is where you can administer and manage your key.

36
00:02:06,730 --> 00:02:06,970
Here.

37
00:02:06,970 --> 00:02:10,740
You can see some general configuration information.

38
00:02:10,740 --> 00:02:14,740
You can view the type of key and where it came from,

39
00:02:14,740 --> 00:02:20,340
as well as review the key policy Any tags and enable key rotation.

40
00:02:20,340 --> 00:02:23,690
K M s will automatically rotate your key every year.

41
00:02:23,690 --> 00:02:25,150
If you enable this option,

42
00:02:25,150 --> 00:02:30,070
it keeps a copy of the previous key so that it can access any old data.

43
00:02:30,070 --> 00:02:33,640
Then it will re encrypt it with the new key.

44
00:02:33,640 --> 00:02:38,580
You can also view and modify any key administrators,

45
00:02:38,580 --> 00:02:43,970
change the settings for key deletion and manage key users and other

46
00:02:43,970 --> 00:02:47,440
AWS accounts that may have access to this key.

47
00:02:47,440 --> 00:02:57,140
Let's go ahead and create another key for RDS.

48
00:02:57,140 --> 00:03:02,440
I'll select the same settings as I did for the previous key.

49
00:03:02,440 --> 00:03:06,630
Now we can see the two customer managed keys that I've generated.

50
00:03:06,630 --> 00:03:10,770
Note that I generated these in the organ region so they will only be

51
00:03:10,770 --> 00:03:14,210
available to Resource is in the Oregon region.

52
00:03:14,210 --> 00:03:17,440
Let's switch to the kms user role than go to E.

53
00:03:17,440 --> 00:03:23,500
C two and use one of these keys.

54
00:03:23,500 --> 00:03:30,930
I'll launch an instance and when we get to storage,

55
00:03:30,930 --> 00:03:32,960
notice the encryption column.

56
00:03:32,960 --> 00:03:37,030
If I select the drop-down, note the options.

57
00:03:37,030 --> 00:03:44,040
The default AWS CBS Key is the C M K, managed by AWS.

58
00:03:44,040 --> 00:03:47,420
I could go ahead and use that or I could select one of

59
00:03:47,420 --> 00:03:49,900
the master keys that I generated.

60
00:03:49,900 --> 00:03:57,790
For example, the E C two key.

61
00:03:57,790 --> 00:04:01,740
Now the volume of this instance will be encrypted with

62
00:04:01,740 --> 00:04:04,870
the data key generated by Easy to.

63
00:04:04,870 --> 00:04:10,890
But that key will be encrypted using the master key that we created in kms.

64
00:04:10,890 --> 00:04:16,450
If we look under volumes we can see that this volume is encrypted

65
00:04:16,450 --> 00:04:20,640
and the kms information about the encryption key.

66
00:04:20,640 --> 00:04:23,440
Let's head over to RDS.

67
00:04:23,440 --> 00:04:28,840
We'll get into the Wizard,

68
00:04:28,840 --> 00:04:34,600
then under additional configuration under encryption

69
00:04:34,600 --> 00:04:38,340
noticed the drop-down for the master key.

70
00:04:38,340 --> 00:04:42,840
There's the default key that AWS generates for the RDS services.

71
00:04:42,840 --> 00:04:47,230
Or you can select one of the keys that you generated in kms.

72
00:04:47,230 --> 00:04:50,240
I'll select the RDS key that we generated.

73
00:04:50,240 --> 00:04:52,700
I won't go through with the creation of this database,

74
00:04:52,700 --> 00:04:56,710
but you can see how easy it is to manage multiple keys for different

75
00:04:56,710 --> 00:05:00,440
services and different instances within those services.

76
00:05:00,440 --> 00:05:01,740
Let's jump over to S3.

77
00:05:01,740 --> 00:05:09,280
Now I'll create a bucket and make sure that it's in the same region as the

78
00:05:09,280 --> 00:05:16,640
keys that I generated with S3 will first create the bucket,

79
00:05:16,640 --> 00:05:24,880
then under properties we can configure encryption under AWS

80
00:05:24,880 --> 00:05:29,950
kms we can see the different keys that were created This

81
00:05:29,950 --> 00:05:33,440
time I'm going to select AWS S3.

82
00:05:33,440 --> 00:05:38,910
This is the AWS managed C M k that will be used to encrypt the data

83
00:05:38,910 --> 00:05:44,200
encryption key we can see that it saved correctly.

84
00:05:44,200 --> 00:05:47,940
Next, let's add an object to the bucket.

85
00:05:47,940 --> 00:05:53,790
I'll add an image and it uploaded successfully.

86
00:05:53,790 --> 00:05:54,610
If we go to K.

87
00:05:54,610 --> 00:06:00,840
M s and select AWS managed keys.

88
00:06:00,840 --> 00:06:05,250
Here is the key that was generated by a W s to manage the

89
00:06:05,250 --> 00:06:09,500
encryption of that AWS bucket note that you are not charged for

90
00:06:09,500 --> 00:06:12,960
a ws managed keys that error in kms.

91
00:06:12,960 --> 00:06:15,350
When you're done with a customer managed key,

92
00:06:15,350 --> 00:06:19,260
you can schedule it for deletion notes Um,

93
00:06:19,260 --> 00:06:23,050
guidelines To make sure that the key is not being used,

94
00:06:23,050 --> 00:06:35,000
you'll be required to wait at least seven days before the kms key is deleted. This is to ensure that you don't accidentally delete a key that is in use.

