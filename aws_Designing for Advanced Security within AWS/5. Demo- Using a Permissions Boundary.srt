1
00:00:01,910 --> 00:00:06,060
[Autogenerated] a permissions boundary allows you to create a policy that

2
00:00:06,060 --> 00:00:10,050
defines the maximum allowed access for a user or roll.

3
00:00:10,050 --> 00:00:14,050
This enables you to grant certain users the ability to create other

4
00:00:14,050 --> 00:00:18,010
users and roles while limiting the actual permissions.

5
00:00:18,010 --> 00:00:21,440
They congrats to the users or roles they create.

6
00:00:21,440 --> 00:00:25,140
One use case is allowing developers to create their own roles

7
00:00:25,140 --> 00:00:29,070
for Lambda or Easy to without having to micromanage every

8
00:00:29,070 --> 00:00:30,890
single role they need to create.

9
00:00:30,890 --> 00:00:34,910
The I am administrator can create a permissions boundary that

10
00:00:34,910 --> 00:00:39,320
limits what actions can be effectively granted by any user or

11
00:00:39,320 --> 00:00:41,220
roll the developer creates.

12
00:00:41,220 --> 00:00:45,200
Even if the developer creates a role with administrator access,

13
00:00:45,200 --> 00:00:48,510
the role would be limited by the permissions boundary.

14
00:00:48,510 --> 00:00:52,720
It wouldn't actually have administrator access because the permissions

15
00:00:52,720 --> 00:00:56,610
boundary limit S3 effective permissions of the role.

16
00:00:56,610 --> 00:00:58,590
Like a service control policy,

17
00:00:58,590 --> 00:01:02,750
a permissions boundary does not grant any permissions by itself.

18
00:01:02,750 --> 00:01:06,390
It only limits what can be granted to the user or role

19
00:01:06,390 --> 00:01:10,140
that has the permissions boundary.

20
00:01:10,140 --> 00:01:13,490
Let's go through a sample workflow for using a permissions

21
00:01:13,490 --> 00:01:17,360
boundary as an I am administrator will create a policy that

22
00:01:17,360 --> 00:01:19,630
will act as a permissions boundary.

23
00:01:19,630 --> 00:01:22,090
This policy defines the maximum boundary.

24
00:01:22,090 --> 00:01:25,800
You want to allow a particular user to be able to grant.

25
00:01:25,800 --> 00:01:27,100
Next will allow on.

26
00:01:27,100 --> 00:01:31,200
I am user to create an attached roles as long as they use the

27
00:01:31,200 --> 00:01:34,420
permissions boundary as the I am username,

28
00:01:34,420 --> 00:01:38,840
create a new role and see that we must set the permissions

29
00:01:38,840 --> 00:01:41,720
boundary in order to attach the role.

30
00:01:41,720 --> 00:01:45,650
Then we'll see how the permissions boundary restricts the effective actions.

31
00:01:45,650 --> 00:01:48,440
No matter what the role may have granted,

32
00:01:48,440 --> 00:01:51,950
Here's the policy that will use for the permissions boundary.

33
00:01:51,950 --> 00:01:59,940
It only allows E C two and S3 actions in the US West to region.

34
00:01:59,940 --> 00:02:05,010
We'll need the RN of this policy in order to create the policy

35
00:02:05,010 --> 00:02:09,240
to require this as a permission boundary.

36
00:02:09,240 --> 00:02:14,820
Next will create an I am policy for the user that we're going to allow to

37
00:02:14,820 --> 00:02:19,640
create roles as long as they contain the permissions boundary.

38
00:02:19,640 --> 00:02:24,840
We'll add the RN for the permissions boundary policy that we just created.

39
00:02:24,840 --> 00:02:31,540
Remember this will restrict the allowed permissions to S3 and E C two actions.

40
00:02:31,540 --> 00:02:36,680
The user will also need certain I am actions in order to create rolls in.

41
00:02:36,680 --> 00:02:43,700
I am note that they will not be able to change policies for their own username.

42
00:02:43,700 --> 00:02:48,530
Next, we're going to deny certain policies for the Dev Boundary policy.

43
00:02:48,530 --> 00:02:52,010
This will prevent the user from changing the permissions.

44
00:02:52,010 --> 00:02:56,640
Boundary policy that's being set up by the I am administrator

45
00:02:56,640 --> 00:03:00,120
finally will deny the delete user permission.

46
00:03:00,120 --> 00:03:08,340
Boundary action will save this policy and attach it to the user.

47
00:03:08,340 --> 00:03:11,640
Let's go to our user.

48
00:03:11,640 --> 00:03:14,230
Note that we've attached the permissions for Dev

49
00:03:14,230 --> 00:03:16,960
one policy that we just created.

50
00:03:16,960 --> 00:03:21,380
Let's log in with the Dev one User to create a role.

51
00:03:21,380 --> 00:03:24,440
Now I'm logged in as the Dev one user.

52
00:03:24,440 --> 00:03:26,840
Let's create a role.

53
00:03:26,840 --> 00:03:32,740
It will be for this AWS account, so I'll put in the account number.

54
00:03:32,740 --> 00:03:36,740
Suppose this user just selected administrator access because they

55
00:03:36,740 --> 00:03:39,610
weren't sure which policy they needed to grant,

56
00:03:39,610 --> 00:03:42,510
even though this violates the principle of least privilege.

57
00:03:42,510 --> 00:03:46,810
Oftentimes it's what people use because it works normally.

58
00:03:46,810 --> 00:03:50,190
This would give permissions to everything in the account.

59
00:03:50,190 --> 00:03:56,140
Let's see how the permissions boundary helps us out with this.

60
00:03:56,140 --> 00:03:59,400
Notice how we got an error when we tried to create the role.

61
00:03:59,400 --> 00:04:03,750
It's because we did not attach the required permissions boundary.

62
00:04:03,750 --> 00:04:06,340
If we go back,

63
00:04:06,340 --> 00:04:13,200
we'll set the permissions boundary using the policy

64
00:04:13,200 --> 00:04:17,940
that's required by our administrator.

65
00:04:17,940 --> 00:04:23,640
Remember, the Dev Boundary policy only allows easy to and S3 actions.

66
00:04:23,640 --> 00:04:27,740
Now the role has successfully been created.

67
00:04:27,740 --> 00:04:32,300
We can see that the administrator access policy has been added.

68
00:04:32,300 --> 00:04:35,550
Let's go assume this role as a user and see if we can

69
00:04:35,550 --> 00:04:39,040
really do all of the administrator actions.

70
00:04:39,040 --> 00:04:41,840
We'll assume the role that was just created.

71
00:04:41,840 --> 00:04:43,640
We'll give it a display name.

72
00:04:43,640 --> 00:04:50,740
Limited admin we can See that we've assumed the role of limited admin.

73
00:04:50,740 --> 00:04:54,720
Let's check out S3.

74
00:04:54,720 --> 00:05:00,710
Everything looks good here and we'll try Easy to if

75
00:05:00,710 --> 00:05:04,240
we switch regions to us West one.

76
00:05:04,240 --> 00:05:05,800
Notice how we get an error.

77
00:05:05,800 --> 00:05:12,840
The permissions boundary only allows S3 and E C two in the US West to region.

78
00:05:12,840 --> 00:05:17,590
If we try to access other services, even though we're in the US West to,

79
00:05:17,590 --> 00:05:24,040
we'll get a permissions error.

80
00:05:24,040 --> 00:05:24,690
Permissions.

81
00:05:24,690 --> 00:05:28,650
Boundaries are an extremely good tool for allowing users to

82
00:05:28,650 --> 00:05:33,530
administer certain things in I am while still making sure that

83
00:05:33,530 --> 00:05:41,000
they don't grant too many permissions for services that they don't need or not authorized to use.

