1

00:00:00,000  -->  00:00:06,930
Hello and welcome back to R

2

00:00:06,930  -->  00:00:08,880
programming course and in the previous

3

00:00:08,880  -->  00:00:10,620
tutorial we created this beautiful

4

00:00:10,620  -->  00:00:13,559
visualization and in fact we actually

5

00:00:13,559  -->  00:00:16,289
completed the challenge so we have done

6

00:00:16,289  -->  00:00:18,720
what was expected of us and we created

7

00:00:18,720  -->  00:00:22,109
this scatterplot and now we can

8

00:00:22,109  -->  00:00:24,779
present it, so what's next? So what we're

9

00:00:24,779  -->  00:00:26,130
going to learn in this tutorial?

10

00:00:26,130  -->  00:00:28,890
Well we've so far learned how to import

11

00:00:28,890  -->  00:00:30,810
data frames and how to work with them

12

00:00:30,810  -->  00:00:31,650
and we know how to visualize

13

00:00:31,650  -->  00:00:34,469
them however we haven't yet learned how

14

00:00:34,469  -->  00:00:37,140
to create them. It would be great if we had

15

00:00:37,140  -->  00:00:39,390
an opportunity to practice that,

16

00:00:39,390  -->  00:00:42,510
well luckily our manager has just to run

17

00:00:42,510  -->  00:00:45,239
into the office with an urgent request

18

00:00:45,239  -->  00:00:47,670
for us. Let's have a look at it, you have

19

00:00:47,670  -->  00:00:49,469
received an urgent update from a manager,

20

00:00:49,469  -->  00:00:51,930
you are required to produce a second

21

00:00:51,930  -->  00:00:54,059
scatterplot also illustrating birth rate

22

00:00:54,059  -->  00:00:56,550
and internet usage statistics by country

23

00:00:56,550  -->  00:00:59,219
however this time this scatterplot needs to

24

00:00:59,219  -->  00:01:01,230
be categorized by countries/regions.

25

00:01:01,230  -->  00:01:04,140
Additional data has been supplied in the

26

00:01:04,140  -->  00:01:06,390
form of R vectors, so pretty much the

27

00:01:06,390  -->  00:01:08,790
same thing as we did but instead of

28

00:01:08,790  -->  00:01:11,909
categorizing by income group like we did

29

00:01:11,909  -->  00:01:13,950
last time this time we need to categorize

30

00:01:13,950  -->  00:01:16,049
by region so whether it's Africa, Asia,

31

00:01:16,049  -->  00:01:18,930
Europe and so on and this time, the

32

00:01:18,930  -->  00:01:20,520
additional data so we can continue

33

00:01:20,520  -->  00:01:22,830
working for our existing data but also we're

34

00:01:22,830  -->  00:01:26,939
going to add more data to our analysis

35

00:01:26,939  -->  00:01:28,680
and it's going to be supplied in R

36

00:01:28,680  -->  00:01:30,600
vectors. So let's go ahead and find that

37

00:01:30,600  -->  00:01:32,970
data, that data is of course located at

38

00:01:32,970  -->  00:01:35,729
www.superdatascience.com/rcourse,

39

00:01:35,729  -->  00:01:38,250
one word and if you scroll

40

00:01:38,250  -->  00:01:41,820
down here to section 5 data frames then

41

00:01:41,820  -->  00:01:43,860
you'll find this third data set over

42

00:01:43,860  -->  00:01:46,799
here country-region of vectors on third

43

00:01:46,799  -->  00:01:48,689
link over here, so if we'd go ahead and

44

00:01:48,689  -->  00:01:50,820
download that then what will be will be

45

00:01:50,820  -->  00:01:52,950
a zip file that like you can see over

46

00:01:52,950  -->  00:01:56,009
here and then once you unzip it and open

47

00:01:56,009  -->  00:01:58,649
it in R, it will look like this.

48

00:01:58,649  -->  00:02:02,430
So here we've got three vectors, so this

49

00:02:02,430  -->  00:02:04,920
is like the actual file that you will

50

00:02:04,920  -->  00:02:07,680
see and it's creating three vectors and

51

00:02:07,680  -->  00:02:09,840
putting them into these three objects. All

52

00:02:09,840  -->  00:02:12,209
you have to do is select all the code

53

00:02:12,209  -->  00:02:13,500
and run it

54

00:02:13,500  -->  00:02:15,240
so let's go ahead and do that and what

55

00:02:15,240  -->  00:02:17,730
that will do is it will create these

56

00:02:17,730  -->  00:02:20,790
three vectors squeeze here so cold

57

00:02:20,790  -->  00:02:22,410
countries and regions so we can get rid

58

00:02:22,410  -->  00:02:24,570
of this filter actually but we'll do

59

00:02:24,570  -->  00:02:26,880
that later. So here we've got these three

60

00:02:26,880  -->  00:02:30,510
vectors that we've created ABW, AFG so

61

00:02:30,510  -->  00:02:31,770
what does this look like? This looks like

62

00:02:31,770  -->  00:02:33,630
the codes of the countries, then the

63

00:02:33,630  -->  00:02:36,660
countries themselves and the region's. Ok

64

00:02:36,660  -->  00:02:38,400
so that's that's a good start right so

65

00:02:38,400  -->  00:02:40,200
now we have this information H vector

66

00:02:40,200  -->  00:02:43,680
has a hundred ninety five elements to it

67

00:02:43,680  -->  00:02:46,140
which is the same as our data frame

68

00:02:46,140  -->  00:02:48,030
which is it which is a good good thing

69

00:02:48,030  -->  00:02:50,670
good sign but now the question is why

70

00:02:50,670  -->  00:02:53,010
are the wisest information in vectors.

71

00:02:53,010  -->  00:02:54,750
How do we put into a data frame? And

72

00:02:54,750  -->  00:02:55,860
that's exactly what we're going to learn

73

00:02:55,860  -->  00:02:58,320
today, so let's dive straight into the

74

00:02:58,320  -->  00:02:59,310
tutorial.

75

00:02:59,310  -->  00:03:02,040
Alright so section 5 and here we're

76

00:03:02,040  -->  00:03:04,200
going to create a new section in our

77

00:03:04,200  -->  00:03:07,650
code and we'll call it creating data

78

00:03:07,650  -->  00:03:11,220
frames exciting tutorial ahead. Okay how

79

00:03:11,220  -->  00:03:12,690
do we create a data frame?

80

00:03:12,690  -->  00:03:15,720
Well we've already got the vectors, now

81

00:03:15,720  -->  00:03:17,430
all we have to do is put the vectors

82

00:03:17,430  -->  00:03:19,080
into a data frame and this is going to be

83

00:03:19,080  -->  00:03:21,060
very similar to something we already

84

00:03:21,060  -->  00:03:24,390
know and that something is the C bind

85

00:03:24,390  -->  00:03:26,549
function. So this time, we're going to use a

86

00:03:26,549  -->  00:03:28,530
function called data frame and don't

87

00:03:28,530  -->  00:03:31,019
forget the dot in between. That's how

88

00:03:31,019  -->  00:03:33,480
the function is called and now here you

89

00:03:33,480  -->  00:03:35,940
need to pass the vectors that you want

90

00:03:35,940  -->  00:03:38,850
to bind into a data frame. So let's pass

91

00:03:38,850  -->  00:03:40,500
the vectors that we have, so this one's

92

00:03:40,500  -->  00:03:43,829
going to be codes 2012, no let's start with country. So

93

00:03:43,829  -->  00:03:46,769
countries 2012 data set that's the first

94

00:03:46,769  -->  00:03:48,480
vector then we're going to pass the

95

00:03:48,480  -->  00:03:51,390
codes 2012 data set and then we are going to

96

00:03:51,390  -->  00:03:54,450
pass the region's. There you go, so you

97

00:03:54,450  -->  00:03:56,730
can see I'm even starting to type with a

98

00:03:56,730  -->  00:03:59,220
small letter here not a capital and its

99

00:03:59,220  -->  00:04:01,500
prompting me for a capital so that's a

100

00:04:01,500  -->  00:04:02,280
good thing.

101

00:04:02,280  -->  00:04:04,470
Speeds up your coding as well. Alright so

102

00:04:04,470  -->  00:04:05,579
there's our three vectors, I'm actually

103

00:04:05,579  -->  00:04:07,500
going to put some new line so we can see

104

00:04:07,500  -->  00:04:10,350
all of that. So just like the C bind

105

00:04:10,350  -->  00:04:12,329
function does the data function will put

106

00:04:12,329  -->  00:04:15,239
all of these into a data frame will not

107

00:04:15,239  -->  00:04:16,650
a matrix, data frame this time

108

00:04:16,650  -->  00:04:18,780
and if we run that you'll see that now

109

00:04:18,780  -->  00:04:22,349
we have a mydf so now let's go and

110

00:04:22,349  -->  00:04:23,970
check out mydf which is going to use

111

00:04:23,970  -->  00:04:26,610
the head function to see the top rows.

112

00:04:26,610  -->  00:04:29,310
So let's make some space over here and

113

00:04:29,310  -->  00:04:31,409
let's make some space over here. So there you

114

00:04:31,409  -->  00:04:33,210
can see, now we've got this new data

115

00:04:33,210  -->  00:04:34,560
frame, now we have two data

116

00:04:34,560  -->  00:04:37,110
frame we've got the stats data frame and the mydf data frame.

117

00:04:37,110  -->  00:04:38,789
In the mydf data frame, you've got

118

00:04:38,789  -->  00:04:41,969
the countries, the data set, the culture

119

00:04:41,969  -->  00:04:43,919
for the data set and the region's.

120

00:04:43,919  -->  00:04:46,620
Alright, so what are we doing now?

121

00:04:46,620  -->  00:04:50,009
Well now we want to change these names of

122

00:04:50,009  -->  00:04:51,960
these columns, they're like too long.

123

00:04:51,960  -->  00:04:54,060
How do we change the names? Well it's

124

00:04:54,060  -->  00:04:55,830
exactly the same as with matrices we already

125

00:04:55,830  -->  00:04:56,939
know this and it's a good

126

00:04:56,939  -->  00:04:59,610
opportunity to practice this again. So colnames

127

00:04:59,610  -->  00:05:04,020
mydf and into here, where do you want to put? So by

128

00:05:04,020  -->  00:05:06,150
the way, if you feel confident at any

129

00:05:06,150  -->  00:05:07,710
stage throughout these tutorials just

130

00:05:07,710  -->  00:05:09,810
pause the video and try to complete the

131

00:05:09,810  -->  00:05:12,060
code we're typing in yourself. In this

132

00:05:12,060  -->  00:05:14,219
case, we want to put in C so we want to

133

00:05:14,219  -->  00:05:15,779
add a vector and here we're going to say

134

00:05:15,779  -->  00:05:18,270
country and then what's the second

135

00:05:18,270  -->  00:05:20,939
column code and the third column region.

136

00:05:20,939  -->  00:05:23,879
So if I just run the colnames of mydf,

137

00:05:23,879  -->  00:05:26,310
you'll see that these are the current

138

00:05:26,310  -->  00:05:27,150
comments

139

00:05:27,150  -->  00:05:29,069
therefore on this whole line the call

140

00:05:29,069  -->  00:05:31,169
names have been changed and if I look at

141

00:05:31,169  -->  00:05:33,060
colnames now it's just country called

142

00:05:33,060  -->  00:05:35,430
region and we can confirm that by using

143

00:05:35,430  -->  00:05:38,520
the head function again. You can see that

144

00:05:38,520  -->  00:05:40,469
now it's much neater like compare this

145

00:05:40,469  -->  00:05:42,839
with where it's so spaced out just

146

00:05:42,839  -->  00:05:44,849
because of the names of the columns to

147

00:05:44,849  -->  00:05:46,949
this where it's nice and neat and you

148

00:05:46,949  -->  00:05:48,509
don't have anything extra.

149

00:05:48,509  -->  00:05:50,430
Alright, so it's a good start but I

150

00:05:50,430  -->  00:05:52,500
actually wanted to show you another

151

00:05:52,500  -->  00:05:55,229
great feature of R which we are

152

00:05:55,229  -->  00:05:58,319
finally ready to understand and ready to

153

00:05:58,319  -->  00:05:58,919
learn.

154

00:05:58,919  -->  00:06:01,139
So I'm going to comment this out as if

155

00:06:01,139  -->  00:06:02,310
they never existed and I'm actually

156

00:06:02,310  -->  00:06:05,099
going to remove the mydf data frame.

157

00:06:05,099  -->  00:06:07,020
You'll see why in a second, so I'm going

158

00:06:07,020  -->  00:06:09,389
to remove it completely and now what I'm

159

00:06:09,389  -->  00:06:11,039
going to do is I'm going to recreate it.

160

00:06:11,039  -->  00:06:12,240
So I'm just going to copy this line

161

00:06:12,240  -->  00:06:15,270
again and here instead of just saying

162

00:06:15,270  -->  00:06:18,180
the names of the vectors that I want to

163

00:06:18,180  -->  00:06:20,189
put in my data frame, what I'm going

164

00:06:20,189  -->  00:06:21,629
to do is I'm going to give them names

165

00:06:21,629  -->  00:06:23,639
right away. So I'm going to say country,

166

00:06:23,639  -->  00:06:25,770
and without the quotation marks I'm just

167

00:06:25,770  -->  00:06:27,870
going to take country equals and I'm

168

00:06:27,870  -->  00:06:30,150
gonna say code and a five quotation

169

00:06:30,150  -->  00:06:32,189
marks I'm going to say code equals to

170

00:06:32,189  -->  00:06:33,900
that vector. So let's make some room

171

00:06:33,900  -->  00:06:37,289
here and then instead of region regions

172

00:06:37,289  -->  00:06:39,270
vector I'm going to say region without

173

00:06:39,270  -->  00:06:40,030
quotation marks

174

00:06:40,030  -->  00:06:42,520
equals regions right? So what we're doing

175

00:06:42,520  -->  00:06:45,190
here is it might seem a bit odd

176

00:06:45,190  -->  00:06:47,560
first of all because these you would

177

00:06:47,560  -->  00:06:49,570
think that something that you want as a

178

00:06:49,570  -->  00:06:51,310
name would always have quotation marks

179

00:06:51,310  -->  00:06:53,650
like we have in this case, but what we're

180

00:06:53,650  -->  00:06:55,420
doing is recalling the data frame

181

00:06:55,420  -->  00:06:57,820
function and we're virtually creating

182

00:06:57,820  -->  00:06:59,800
our own parameters that we are passing

183

00:06:59,800  -->  00:07:02,200
to the data frame function and then it

184

00:07:02,200  -->  00:07:05,830
will treat this as the data and this as

185

00:07:05,830  -->  00:07:07,990
the name. So let's go ahead and run this

186

00:07:07,990  -->  00:07:10,030
and see what we get. So right now, we

187

00:07:10,030  -->  00:07:12,580
don't have a mydf data frame right now

188

00:07:12,580  -->  00:07:16,150
in our data, but if I run these two

189

00:07:16,150  -->  00:07:19,330
lines, I've just created mydf and if I

190

00:07:19,330  -->  00:07:22,540
look at it you will see that that's the

191

00:07:22,540  -->  00:07:24,880
whole idea of course we just need the

192

00:07:24,880  -->  00:07:27,280
top part so let's do that again.

193

00:07:27,280  -->  00:07:30,190
So here we can see that right away these

194

00:07:30,190  -->  00:07:32,410
columns have the names that we wanted

195

00:07:32,410  -->  00:07:34,870
right? And we can just like play around

196

00:07:34,870  -->  00:07:37,720
with it let's say ABC right? Let's see

197

00:07:37,720  -->  00:07:40,090
what that would that does. If we do that

198

00:07:40,090  -->  00:07:42,640
and we run that you'll see that now this

199

00:07:42,640  -->  00:07:45,700
column is called ABC and that is a very

200

00:07:45,700  -->  00:07:47,860
powerful tool in R because it allows

201

00:07:47,860  -->  00:07:50,140
you to save time. Instead of time

202

00:07:50,140  -->  00:07:51,940
creating a data frame and then

203

00:07:51,940  -->  00:07:54,160
renaming the columns you can right away

204

00:07:54,160  -->  00:07:56,050
create the data frame with the renamed

205

00:07:56,050  -->  00:07:57,880
columns and the most of the code that you

206

00:07:57,880  -->  00:07:59,320
will see in R if you're looking at the

207

00:07:59,320  -->  00:08:01,090
people's code it will be created like

208

00:08:01,090  -->  00:08:03,010
this so they'll know I want to call them

209

00:08:03,010  -->  00:08:05,080
called country and the data set I want

210

00:08:05,080  -->  00:08:06,580
to put in there is this one or the

211

00:08:06,580  -->  00:08:08,290
Vector and then I want to call them

212

00:08:08,290  -->  00:08:10,660
called code and and this is the data and

213

00:08:10,660  -->  00:08:13,030
so on. So be prepared for that and also

214

00:08:13,030  -->  00:08:14,920
use that use that to your advantage and

215

00:08:14,920  -->  00:08:17,290
moreover I'll tell you this that this

216

00:08:17,290  -->  00:08:20,830
same approach, works in the C bind

217

00:08:20,830  -->  00:08:22,510
function and the R bind function. You

218

00:08:22,510  -->  00:08:24,670
can use exactly the same approach and I

219

00:08:24,670  -->  00:08:26,470
really wanted to tell you about it

220

00:08:26,470  -->  00:08:28,870
back in that section but it was a bit

221

00:08:28,870  -->  00:08:30,940
too early for us we didn't it would have

222

00:08:30,940  -->  00:08:33,460
been a bit of overwhelming to try to

223

00:08:33,460  -->  00:08:35,410
grasp this at that time but now you're

224

00:08:35,410  -->  00:08:37,540
ready for it and you can totally

225

00:08:37,540  -->  00:08:39,970
practice the same approach with the C bind

226

00:08:39,970  -->  00:08:41,710
and R bind functions. So I'm just

227

00:08:41,710  -->  00:08:43,510
going to rerun this so I have the

228

00:08:43,510  -->  00:08:47,140
correct data frame okay and all we

229

00:08:47,140  -->  00:08:48,640
wanted to check here is just check the

230

00:08:48,640  -->  00:08:49,900
head and let's practice the tail

231

00:08:49,900  -->  00:08:52,240
function just to see that it makes sense

232

00:08:52,240  -->  00:08:53,230
right so

233

00:08:53,230  -->  00:08:55,810
that may become check some codes, it's

234

00:08:55,810  -->  00:09:00,100
about what is in Africa, Samoa, Oceania, South

235

00:09:00,100  -->  00:09:02,200
Africa that that looks like it

236

00:09:02,200  -->  00:09:03,430
makes sense that's always a good thing

237

00:09:03,430  -->  00:09:05,710
to check that everything make sense and

238

00:09:05,710  -->  00:09:07,270
finally let's just check our data

239

00:09:07,270  -->  00:09:09,940
set using the summary function mydf

240

00:09:09,940  -->  00:09:13,000
and here you can see that we've got

241

00:09:13,000  -->  00:09:17,170
countries, codes and regions right? So

242

00:09:17,170  -->  00:09:19,780
everything looks okay, it looks like

243

00:09:19,780  -->  00:09:22,660
every country you know is only present

244

00:09:22,660  -->  00:09:25,510
once and every code so if you add this

245

00:09:25,510  -->  00:09:30,040
up it should add up to 195, that's 195 and here

246

00:09:30,040  -->  00:09:31,900
you've got many countries in every per

247

00:09:31,900  -->  00:09:32,500
region.

248

00:09:32,500  -->  00:09:34,810
Alright so that's how you first of all

249

00:09:34,810  -->  00:09:36,760
create data frames using the data frame

250

00:09:36,760  -->  00:09:39,340
function and vectors and second we

251

00:09:39,340  -->  00:09:42,400
learned today is how to specify the

252

00:09:42,400  -->  00:09:44,950
names four your columns in a data frame right

253

00:09:44,950  -->  00:09:47,530
away and also this approach works for

254

00:09:47,530  -->  00:09:50,410
the C bind and R bind functions.

255

00:09:50,410  -->  00:09:53,200
That's great we learn quite a lot today and I look

256

00:09:53,200  -->  00:09:55,210
forward to seeing in the next tutorial,

257

00:09:55,210  -->  00:10:07,350
until then, happy coding.
