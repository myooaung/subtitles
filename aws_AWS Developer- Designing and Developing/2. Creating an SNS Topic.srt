1
00:00:01,965 --> 00:00:06,667
Topics in SNS are single elements where consumers can subscribe to.

2
00:00:06,667 --> 00:00:09,143
When any message is published to the topic,

3
00:00:09,143 --> 00:00:12,355
all of the subscribers are sent the message over

4
00:00:12,355 --> 00:00:14,437
whatever protocol they have configured.

5
00:00:14,437 --> 00:00:16,404
This is basically how SNS works.

6
00:00:16,404 --> 00:00:17,388
In this module,

7
00:00:17,388 --> 00:00:22,288
we're going to set up a topic and subscription so that we can

8
00:00:22,288 --> 00:00:25,122
send notifications whenever races are complete.

9
00:00:25,122 --> 00:00:27,837
We'll start in this clip by creating the topic that

10
00:00:27,837 --> 00:00:30,799
will have messages published to it.

11
00:00:30,799 --> 00:00:38,672
Open up the file in the scripts/module_09 folder named create‑sns‑topic.js.

12
00:00:38,672 --> 00:00:42,750
We'll start with the usual, updating your region on line 4.

13
00:00:42,750 --> 00:00:49,883
Next, on line 7, we'll declare a const named sns, then assign to it a new AWS.

14
00:00:49,883 --> 00:00:51,438
SNS constructor call.

15
00:00:51,438 --> 00:00:55,584
Below that is where we declare our topicName.

16
00:00:55,584 --> 00:00:59,283
Every topic name needs to be unique in an account,

17
00:00:59,283 --> 00:01:02,606
and hamster‑topic is as good as anything else.

18
00:01:02,606 --> 00:01:07,022
Now let's implement our createTopic function on line 13.

19
00:01:07,022 --> 00:01:10,983
First create a new params const object.

20
00:01:10,983 --> 00:01:13,537
The first and only property is going to be Name,

21
00:01:13,537 --> 00:01:17,919
which you can give the value of the topicName function argument.

22
00:01:17,919 --> 00:01:19,502
Topics are super simple,

23
00:01:19,502 --> 00:01:24,451
as this is the only property the createTopic function even takes.

24
00:01:24,451 --> 00:01:28,615
Now inside the Promise, call sns.createTopic,

25
00:01:28,615 --> 00:01:32,679
passing in the params object as the first argument and a callback

26
00:01:32,679 --> 00:01:36,426
function with err and data arguments as the second.

27
00:01:36,426 --> 00:01:40,721
If there's an err object, then call reject with it; otherwise,

28
00:01:40,721 --> 00:01:44,503
call resolve, passing in the data argument.

29
00:01:44,503 --> 00:01:49,110
This file is now complete, so we can switch over to our command line.

30
00:01:49,110 --> 00:01:53,490
Navigate to the scripts/module_09 folder,

31
00:01:53,490 --> 00:01:59,623
and execute the command node create‑sns‑topic.js.

32
00:01:59,623 --> 00:02:03,136
You should get an output and this TopicArn,

33
00:02:03,136 --> 00:02:08,327
something we'll need later, signifying that your topic has been created.

34
00:02:08,327 --> 00:02:15,000
And now that we've got a topic, we need someone to subscribe to it, which we'll do in the next clip.

