WEBVTT
1
00:00:01.970 --> 00:00:07.462
While Route 53 is often used as simple DNS rules to route to AWS resources,

2
00:00:07.462 --> 00:00:10.442
there is more advanced functionality available in

3
00:00:10.442 --> 00:00:13.540
regards to how the routing takes place.

4
00:00:13.540 --> 00:00:17.654
Routing policies allow you to define the behavior a routing

5
00:00:17.654 --> 00:00:20.771
rule follows once a request has come in.

6
00:00:20.771 --> 00:00:25.625
There are five types of routing policies that we'll discuss here: simple,

7
00:00:25.625 --> 00:00:30.610
weighted, latency, geolocation, and failover.

8
00:00:30.610 --> 00:00:33.967
A simple routing policy is when you want to map a single

9
00:00:33.967 --> 00:00:36.599
DNS record to a single AWS resource.

10
00:00:36.599 --> 00:00:43.745
For instance, sending the domain name hbfl.online to a single load balancer.

11
00:00:43.745 --> 00:00:47.420
A weighted routing policy lets you configure multiple resources for a

12
00:00:47.420 --> 00:00:52.382
single DNS record and gives each of the resources a weight.

13
00:00:52.382 --> 00:00:56.228
Route 53 will route requests to each resource based on

14
00:00:56.228 --> 00:00:58.473
its percentage of the total weight.

15
00:00:58.473 --> 00:01:02.261
For instance, if you configure two resources with a weighted routing policy,

16
00:01:02.261 --> 00:01:05.853
one with a weight of 1 and the other with a weight of 2,

17
00:01:05.853 --> 00:01:10.377
it would route requests to the first resource a third of the time and route

18
00:01:10.377 --> 00:01:14.833
requests to the other resource the other twoâ€‘thirds of the time.

19
00:01:14.833 --> 00:01:18.280
A latency routing policy is really useful to reduce the

20
00:01:18.280 --> 00:01:21.088
latency for your users with your application.

21
00:01:21.088 --> 00:01:26.295
It allows you to configure multiple resources and define regions for each.

22
00:01:26.295 --> 00:01:29.886
You'll configure the region and the record set to

23
00:01:29.886 --> 00:01:32.063
match the region of the resource.

24
00:01:32.063 --> 00:01:34.221
Then when a user requests a domain,

25
00:01:34.221 --> 00:01:37.502
Route 53 will determine which request will have the lowest

26
00:01:37.502 --> 00:01:40.730
latency based on the available regions that you configured

27
00:01:40.730 --> 00:01:43.011
and the IP of the request.

28
00:01:43.011 --> 00:01:44.254
This is done automatically,

29
00:01:44.254 --> 00:01:48.816
so it's a pretty convenient way of dramatically reducing latency.

30
00:01:48.816 --> 00:01:53.920
A geolocation routing policy is similar to latency routing policies.

31
00:01:53.920 --> 00:01:58.173
Where latency automatically routes based on lowest latency,

32
00:01:58.173 --> 00:02:01.562
geolocation lets you configure which requests will go to

33
00:02:01.562 --> 00:02:04.545
which resources based on continent, country,

34
00:02:04.545 --> 00:02:08.600
or subdivision, which is a state or a province.

35
00:02:08.600 --> 00:02:13.620
This gives you tremendous control over who goes to what resource and is

36
00:02:13.620 --> 00:02:17.013
likely very useful for legal or compliance reasons.

37
00:02:17.013 --> 00:02:18.291
Finally, there's failover.

38
00:02:18.291 --> 00:02:22.647
A failover routing policy allows you to configure two resources,

39
00:02:22.647 --> 00:02:26.312
one as primary and the other as secondary.

40
00:02:26.312 --> 00:02:28.753
If the health of the primary resource fails,

41
00:02:28.753 --> 00:02:32.182
then requests will be routed to the secondary resource.

42
00:02:32.182 --> 00:02:38.259
This provides some stability for domain records when a load balancer won't work.

43
00:02:38.259 --> 00:02:39.815
Between all of these routing policies,

44
00:02:39.815 --> 00:02:50.000
you should be able to find one for whatever need you have. In the next clip, we're going to configure Route 53 for a domain name.

