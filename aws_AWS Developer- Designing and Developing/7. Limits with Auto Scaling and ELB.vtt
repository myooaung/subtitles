WEBVTT
1
00:00:00.940 --> 00:00:04.170
Limits for auto scaling are largely around how many

2
00:00:04.170 --> 00:00:06.540
of each resource you can have.

3
00:00:06.540 --> 00:00:10.740
The EC2 Limits Page that we looked at earlier does have sections at

4
00:00:10.740 --> 00:00:14.370
the bottom for both auto scaling and load balancing.

5
00:00:14.370 --> 00:00:17.945
While these aren't all the limits, they do hit the big ones. Again,

6
00:00:17.945 --> 00:00:22.140
these can all be raised by sending a request to AWS.

7
00:00:22.140 --> 00:00:23.110
With auto scaling,

8
00:00:23.110 --> 00:00:25.480
the main limits are on the number of groups and

9
00:00:25.480 --> 00:00:27.680
launch configurations you can have.

10
00:00:27.680 --> 00:00:30.920
I think these are sufficiently large enough that you wouldn't hit them

11
00:00:30.920 --> 00:00:34.635
unless you have an entire company working on one account.

12
00:00:34.635 --> 00:00:39.220
Load‑balancing limits are also defined around the number of resources.

13
00:00:39.220 --> 00:00:42.000
If you do a lot of internal load balancing,

14
00:00:42.000 --> 00:00:44.810
the application load‑balancer limit may not be enough,

15
00:00:44.810 --> 00:00:47.070
so keep an eye on that.

16
00:00:47.070 --> 00:00:51.080
Another load balancer‑related limit is the number of certificates

17
00:00:51.080 --> 00:00:54.540
that you can attach to a load balancer set at one.

18
00:00:54.540 --> 00:00:57.610
This is important when creating a web application because

19
00:00:57.610 --> 00:01:00.875
you'll need individual load balancers for each TLS

20
00:01:00.875 --> 00:01:03.740
endpoint with a unique certificate.

21
00:01:03.740 --> 00:01:04.350
In addition,

22
00:01:04.350 --> 00:01:08.840
you can only have one target group configured for each load balancer.

23
00:01:08.840 --> 00:01:16.000
These types of limits do explain how you can hit the resource limit quickly if you're not careful.

