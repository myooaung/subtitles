1
00:00:00,840 --> 00:00:04,420
Running your own code on a vanilla Linux or Windows instance is

2
00:00:04,420 --> 00:00:06,930
one of the most common use cases for EC2.

3
00:00:06,930 --> 00:00:09,980
But occasionally there is some vendor‑provided

4
00:00:09,980 --> 00:00:12,640
software that you want to run as well.

5
00:00:12,640 --> 00:00:14,360
You could install this yourself,

6
00:00:14,360 --> 00:00:18,450
but you'll often find that there might be an existing AMI with

7
00:00:18,450 --> 00:00:22,740
the software preinstalled available on the AWS Marketplace.

8
00:00:22,740 --> 00:00:26,050
Let's take a look at the marketplace by navigating to the EC2

9
00:00:26,050 --> 00:00:28,840
dashboard in the AWS Console.

10
00:00:28,840 --> 00:00:33,040
Click on the Launch instance button and then Launch instance,

11
00:00:33,040 --> 00:00:36,540
and you'll be on the AMI selection page.

12
00:00:36,540 --> 00:00:41,400
The software available from the AWS Marketplace are just Amazon machine images

13
00:00:41,400 --> 00:00:45,340
with an operating system and custom software preinstalled.

14
00:00:45,340 --> 00:00:49,860
That's essentially it. On the left‑hand menu click AWS Marketplace,

15
00:00:49,860 --> 00:00:52,990
and here you'll be able to see what's on offer.

16
00:00:52,990 --> 00:00:56,680
There is some featured and popular AMIs and then the

17
00:00:56,680 --> 00:01:00,410
categories. You can see there's quite a few available,

18
00:01:00,410 --> 00:01:03,880
thousands of AMIs in fact. For this course,

19
00:01:03,880 --> 00:01:08,650
I wanted us to launch an instance within an AMI from the marketplace,

20
00:01:08,650 --> 00:01:11,880
specifically one with Node preinstalled. In the search

21
00:01:11,880 --> 00:01:15,840
box, type Node.js and hit Enter.

22
00:01:15,840 --> 00:01:19,230
There will be quite a few results, but look for the result

23
00:01:19,230 --> 00:01:22,930
titled Node.js Certified by Bitnami.

24
00:01:22,930 --> 00:01:25,780
There shouldn't be any cost information here.

25
00:01:25,780 --> 00:01:29,320
If an AMI from the marketplace does cost money,

26
00:01:29,320 --> 00:01:34,740
it will have the per‑hour cost listed next to the image information.

27
00:01:34,740 --> 00:01:38,590
You may see some other entries with a cost associated with it.

28
00:01:38,590 --> 00:01:42,430
Node is free, and the Bitnami AMI is free as well.

29
00:01:42,430 --> 00:01:46,070
Now click More info and then the link ending in

30
00:01:46,070 --> 00:01:49,850
product detail on AWS Marketplace.

31
00:01:49,850 --> 00:01:52,830
See we're not going to use the consul to launch this image,

32
00:01:52,830 --> 00:01:57,540
but instead grab the AMI ID and use our scripts again.

33
00:01:57,540 --> 00:02:00,580
This next page has a lot more information about the image if

34
00:02:00,580 --> 00:02:03,360
you want to read it. For our current case,

35
00:02:03,360 --> 00:02:08,140
click this Continue to Subscribe button on the right‑hand side.

36
00:02:08,140 --> 00:02:10,540
Now we're in the subscription page.

37
00:02:10,540 --> 00:02:12,800
We have to subscribe to this image,

38
00:02:12,800 --> 00:02:16,440
meaning that we accept their terms and conditions.

39
00:02:16,440 --> 00:02:19,340
If this image had a cost associated with it,

40
00:02:19,340 --> 00:02:23,740
we would also be agreeing to pay whatever amount the image costs.

41
00:02:23,740 --> 00:02:28,940
I've already subscribed, so your screen will look a little different than mine.

42
00:02:28,940 --> 00:02:32,280
Click on the Subscribe button that you see and then

43
00:02:32,280 --> 00:02:35,240
wait a bit and refresh the page.

44
00:02:35,240 --> 00:02:37,810
Once the subscription has gone through,

45
00:02:37,810 --> 00:02:43,150
your page should look like mine with a Continue to Configuration button in

46
00:02:43,150 --> 00:02:50,460
the top right. Click that now. Now we can finally get the AMI ID. You can

47
00:02:50,460 --> 00:02:53,390
adjust some parameters here if you need to,

48
00:02:53,390 --> 00:02:58,340
such as the architecture version of Ubuntu and region.

49
00:02:58,340 --> 00:03:03,360
If you remember I mentioned before, each AMI is region specific.

50
00:03:03,360 --> 00:03:06,700
This is why picking the correct region here matters.

51
00:03:06,700 --> 00:03:09,660
It's technically the same code for each region,

52
00:03:09,660 --> 00:03:14,040
the same image, but the IDs are different based on the region.

53
00:03:14,040 --> 00:03:17,080
Everything should be automatically populated for you

54
00:03:17,080 --> 00:03:19,840
based on the region in your console.

55
00:03:19,840 --> 00:03:24,540
Now, copy the AMI ID that is displayed right here.

56
00:03:24,540 --> 00:03:27,640
Then switch back over to your code editor and open

57
00:03:27,640 --> 00:03:32,400
the create‑ec2‑instance.js file.

58
00:03:32,400 --> 00:03:37,590
We're going to launch an instance using this AMI instead of the vanilla Amazon

59
00:03:37,590 --> 00:03:42,440
Linux AMI. So scroll down to line 88 and paste the image ID.

60
00:03:42,440 --> 00:03:46,000
We could run this now, but there are two more changes.

61
00:03:46,000 --> 00:03:50,620
I want to make. The user data we have here installs Node and Git,

62
00:03:50,620 --> 00:03:53,140
then clones the demo and runs it.

63
00:03:53,140 --> 00:03:56,900
We don't need to install Node anymore because the AMI comes with it.

64
00:03:56,900 --> 00:03:59,640
So let's change this user data.

65
00:03:59,640 --> 00:04:04,540
Open up the file titled marketplace‑ec2‑startup.sh.

66
00:04:04,540 --> 00:04:06,870
This is basically the same as before,

67
00:04:06,870 --> 00:04:10,750
minus the Node installation Steps and the Linux Package Manager

68
00:04:10,750 --> 00:04:16,450
updated to apt‑get since the Nitnami image is Ubuntu‑based. Copy the

69
00:04:16,450 --> 00:04:21,660
base64 encoded text minus the starting hash at the bottom and paste

70
00:04:21,660 --> 00:04:24,340
that into the user data section.

71
00:04:24,340 --> 00:04:26,630
The next modification is to the key pair and

72
00:04:26,630 --> 00:04:29,820
security group names on lines 9 and 10.

73
00:04:29,820 --> 00:04:31,520
If we were to run this file again,

74
00:04:31,520 --> 00:04:35,110
it would try to create new resources with those names and

75
00:04:35,110 --> 00:04:38,040
then error out because they already exist.

76
00:04:38,040 --> 00:04:43,240
Let's give them unique names by just tacking on a 2 to the end of each string.

77
00:04:43,240 --> 00:04:44,870
Now save the file,

78
00:04:44,870 --> 00:04:47,720
switch over to your command line, and run the file

79
00:04:47,720 --> 00:04:52,240
with node create‑ec2‑instance.js.

80
00:04:52,240 --> 00:04:57,010
You should see the same type of message as when you ran the file previously.

81
00:04:57,010 --> 00:04:57,940
This time, however,

82
00:04:57,940 --> 00:05:01,090
you're launching the instance with a whole different AMI.

83
00:05:01,090 --> 00:05:03,940
We can skip ahead in time a bit to confirm that the

84
00:05:03,940 --> 00:05:06,340
instance creation worked correctly.

85
00:05:06,340 --> 00:05:10,880
I'm copying the public IP for the newly created instance and

86
00:05:10,880 --> 00:05:13,890
hitting it with my browser on port 3000.

87
00:05:13,890 --> 00:05:17,930
And there's Hamster Ball Fantasy League running on a Node AMI

88
00:05:17,930 --> 00:05:26,000
launched from the AWS marketplace. In the next clip, we're going to create a new AMI from this instance.

