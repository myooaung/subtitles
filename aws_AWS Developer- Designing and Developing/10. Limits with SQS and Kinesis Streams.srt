1
00:00:00,940 --> 00:00:07,020
SQS and Kinesis Streams are highlyâ€‘performant services targeted at specific use

2
00:00:07,020 --> 00:00:11,370
cases. Understanding how the systems work and the restrictions around them are

3
00:00:11,370 --> 00:00:15,110
essential for designing a robust web application.

4
00:00:15,110 --> 00:00:16,490
In the previous discussions,

5
00:00:16,490 --> 00:00:21,080
we've covered most of the limits around SQS and Kinesis Streams, and of course

6
00:00:21,080 --> 00:00:24,950
they both have the soft resource limits that can be raised.

7
00:00:24,950 --> 00:00:28,940
But there are a few Kinesis Stream limits I wanted to mention here.

8
00:00:28,940 --> 00:00:32,760
The first limit with Kinesis Streams is the limit to the size of the

9
00:00:32,760 --> 00:00:36,440
data blobs you can send through a Kinesis Stream.

10
00:00:36,440 --> 00:00:41,160
They are static at 1 MB. This is basically constrained by the

11
00:00:41,160 --> 00:00:44,340
size of the shards making up your stream.

12
00:00:44,340 --> 00:00:46,110
If you have data larger than that,

13
00:00:46,110 --> 00:00:50,760
you'd either need to break it into pieces or send records of S3

14
00:00:50,760 --> 00:00:55,505
keys where the data is actually stored. In relation to sharding,

15
00:00:55,505 --> 00:00:59,510
there is a limit around the number of put request operations you

16
00:00:59,510 --> 00:01:04,360
can perform each second, and that is 1000 per shard.

17
00:01:04,360 --> 00:01:06,470
If you find yourself hitting that limit,

18
00:01:06,470 --> 00:01:16,000
you'll need to scale your stream up by adding shards to it. And those are all the major limits with SQS and Kinesis Streams.

