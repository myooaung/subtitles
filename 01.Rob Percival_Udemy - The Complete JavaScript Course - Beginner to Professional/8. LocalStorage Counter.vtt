WEBVTT

00:01.960 --> 00:07.990
Previously had looked at cookies as a way to store information and when the user returns we could pull

00:07.990 --> 00:09.720
that information back.

00:09.850 --> 00:13.870
So there's actually another option where we can store information.

00:13.870 --> 00:20.170
So if we want to store a message or something like that so let's create our message and this will just

00:20.170 --> 00:21.450
be hello world.

00:21.580 --> 00:25.750
And what we're going to do is we're going to store this into a local storage.

00:25.750 --> 00:32.680
And this is available within modern browsers so Chrome has that mobile Mozilla mobile browsers have

00:32.680 --> 00:32.870
it.

00:32.890 --> 00:35.590
And most of the modern browsers will have it.

00:35.650 --> 00:40.490
Some of the older ones i.e. 8 i.e. 9 again they're not going to be.

00:40.570 --> 00:44.710
They're probably not going to be able to handle local storage or they probably don't have that built

00:44.710 --> 00:45.210
in.

00:45.220 --> 00:52.900
So a lot of these are customized and dependent on the browser and the newer browsers are all coming

00:52.900 --> 00:53.690
out with this.

00:53.740 --> 00:59.080
So hopefully in a few years looking at local storage this is going to be a problem and we're not going

00:59.080 --> 01:04.780
to have to be mindful of the fact that it might not work on some of the browsers as the users are coming

01:04.780 --> 01:05.280
in.

01:05.290 --> 01:13.150
So local storage it's a dom mechanism and it allows us to store values and securely store those values.

01:13.150 --> 01:18.450
So even when the user refreshes the page this information is saved.

01:18.490 --> 01:25.510
So all you have to do is do local storage so it's again within the dorms so we specify it with local

01:25.510 --> 01:28.260
storage and we've got a few methods.

01:28.270 --> 01:35.260
So first one is to set the item and we can see the format here where we need a name and we need a string

01:36.140 --> 01:38.500
or a value in a string and so on.

01:38.500 --> 01:41.440
So we do store this within this type of format.

01:41.470 --> 01:47.080
So basically we need a name that returns back and we can pull back that value.

01:47.080 --> 01:50.080
So the name is going to be within a string format.

01:50.140 --> 02:00.130
So let's set item and we're just going to call it test we'll call it test 1 and then next we need to

02:00.130 --> 02:06.480
store a value so the value that we're going to store is going to be our string from message.

02:06.490 --> 02:08.770
So let's let's save that.

02:08.890 --> 02:15.150
And then in order to retrieve that information we can do a get item.

02:15.160 --> 02:17.530
So let's let's try that.

02:17.650 --> 02:26.980
And what I want to do is I want to do a condition to see if there is a value stored here and if there

02:26.980 --> 02:32.600
is then we do want to return that value.

02:33.050 --> 02:39.390
So it's not an error condition and we have checked to see if there is a value here and if there is we're

02:39.440 --> 02:44.870
going to return that information and the value that we're going to be looking at is going to be get

02:44.960 --> 02:49.240
items so opposite of item is get item.

02:49.460 --> 02:56.000
And this is where that key value comes into play because we need to specify what value it is that we're

02:56.000 --> 02:56.980
trying to return.

02:57.200 --> 03:00.730
And then next we could output it within our output.

03:00.740 --> 03:07.310
So let's let's set that up so document get element by Id grab the element output and we're going to

03:07.310 --> 03:19.250
simply output it to the h t m l and we need to just local storage get item and if whatever item is available

03:19.250 --> 03:19.580
there.

03:19.690 --> 03:20.490
So let's try that.

03:20.540 --> 03:24.130
So let's refresh the page and refresh the page.

03:24.140 --> 03:27.880
And the second time we refresh it we see the message Hello world.

03:28.010 --> 03:33.550
Because what's happened is now this is stored in our local storage.

03:33.650 --> 03:39.290
And every time we refresh it we're first we're checking to see if it exists and if it does exist then

03:39.290 --> 03:44.960
we're simply outputting it on the page.

03:44.980 --> 03:51.820
So go ahead and pause the video and try this for yourself and see if you can store yourself a secret

03:51.820 --> 03:58.540
message within local storage within your web page and the next part of this lesson we're going to make

03:58.540 --> 04:00.470
this a little bit more dynamic.

04:00.550 --> 04:03.050
So I give it a try try.

04:03.100 --> 04:04.950
Open up your editor and give it a try.

04:04.960 --> 04:08.860
And now let's do something a little bit more dynamic.

04:08.860 --> 04:15.700
So what I want to do is I want to get a value so I want to set a value but I also want to get a value

04:16.030 --> 04:19.200
and again of value and increase it by 1.

04:19.240 --> 04:27.010
So we want to have every time we load up the page I want to output Hello world so we'll keep that same

04:27.010 --> 04:28.960
message but we want to have a number.

04:28.960 --> 04:36.040
So every time I reload it I want the page to show a different number and incrementing number.

04:36.100 --> 04:42.030
So go ahead and pause the video and add that into your script using local storage.

04:42.030 --> 04:42.880
So give you a hint.

04:42.880 --> 04:49.360
Storing a variable a value and then pulling that value back out and retrieving it and then making use

04:49.360 --> 04:51.310
of it with in your script.

04:51.580 --> 04:54.320
So pause the video and I'll show you the solution coming up.

04:55.580 --> 04:56.360
So welcome back.

04:56.370 --> 04:58.880
I hope you had an opportunity to try that out.

04:58.910 --> 05:03.110
And this one is going to be very similar to what we did earlier.

05:03.150 --> 05:09.530
Now look where we're going to look for a value and maybe this value can be count or something like that.

05:09.740 --> 05:20.540
And if it's available then we're going to do variable count equals whatever value is here and we're

05:20.540 --> 05:22.120
going to add 1 to it.

05:23.510 --> 05:31.980
And then instead of putting this part here let's put that value it's one thing to note as well that

05:32.700 --> 05:35.890
we're going to see if we need to parse it into an integer.

05:36.030 --> 05:37.500
So let's try this.

05:37.530 --> 05:41.230
And we actually want to add it to each Timo.

05:41.580 --> 05:45.320
So we're going to add it to that value and let's try this at home.

05:45.390 --> 05:48.720
So refresh and refresh again.

05:51.970 --> 05:59.410
And we still need to set that value so if it doesn't exist then let's go ahead and set that value in

05:59.470 --> 06:03.320
local storage so we can actually get rid of that one now.

06:03.340 --> 06:05.060
And we need to set count.

06:05.340 --> 06:10.230
So it's that count and we'll give it a value of zero.

06:10.270 --> 06:17.310
No let's try it out and see as we're refreshing we're getting that value but we're not returning back

06:17.740 --> 06:25.320
exactly as we need because we're not able to see it as a number so we do want to have it as a number.

06:25.410 --> 06:26.910
So let's update that.

06:26.970 --> 06:31.700
And we saw that there was a few different ways that we can convert it into a number.

06:31.950 --> 06:34.890
So let's just change it to a number.

06:34.890 --> 06:39.480
That's a really good thing about javascript is that we can change the different types.

06:39.480 --> 06:46.560
So what's happening now is that where retrieving that information but for some reason we're not actually

06:46.560 --> 06:47.340
incrementing it.

06:47.340 --> 06:54.320
So let's console log that out and do a little bit of trouble shooting.

06:54.670 --> 06:57.270
So what do you think is going wrong here.

06:57.370 --> 07:02.890
When we're looking at this and we're going into the console we're just going to be returning back that

07:02.920 --> 07:03.850
one value.

07:03.850 --> 07:09.190
So let's go back out into the console will refresh it and I'll show you what's going to happen here.

07:09.190 --> 07:11.800
So every time we're only loading that one.

07:11.950 --> 07:15.020
So what do you think has happened here what do you think has gone wrong here.

07:15.230 --> 07:23.290
And I'm not sure if you able to find the solution but we need to set the value and we're not doing that

07:23.290 --> 07:25.160
so we're not setting that new value.

07:25.160 --> 07:31.750
So that's what the problem is here that we need to once we grab the value we need to set the new value.

07:31.750 --> 07:33.380
So let's try that again now.

07:33.410 --> 07:38.540
And now every time we increment we can see that we're incrementing those values.

07:38.680 --> 07:46.180
So if you go out to that same page and in another browser we see that because we're storing it within

07:46.180 --> 07:52.090
the local storage we always have access to it and we can incremented over here and we can open up that

07:52.090 --> 07:57.520
same file that same file location and all I'm doing is I'm just refreshed on the page.

07:57.520 --> 08:05.250
So what we're doing within the code is where first of all we're taking a look to see if count exists.

08:05.350 --> 08:07.750
If it doesn't exist then we're creating it.

08:07.870 --> 08:13.720
And then the next time it gets refreshed then maybe we should actually even start at one value of 1

08:14.050 --> 08:17.300
and notice that it is pulling this in as a string value.

08:17.620 --> 08:24.100
So the next time that whenever we refreshed the page then we actually do have a value for Count stored

08:24.100 --> 08:25.030
in the local storage.

08:25.030 --> 08:31.150
And even if we open up the browser in another browser as lines go into that page restringing within

08:31.150 --> 08:32.510
the local storage.

08:32.640 --> 08:39.330
So we're able to pick that information up and grab that value and then incremented by 1.

08:39.550 --> 08:46.030
Transforming that string value into a number so we can add them together and then we need to actually

08:46.030 --> 08:52.810
store that updated value back into our local storage so that we do have a running count and then every

08:52.810 --> 08:56.870
time we updated it this gets updated in the local storage as well.

08:56.950 --> 09:03.600
So this time I'm setting it says C.A. is going to be too and I'm just simply outputting it here.

09:03.700 --> 09:10.290
And then the next time I refresh it it takes that stored value which is 2 adds 1 to it.

09:10.480 --> 09:14.860
And then we store the value of 3 4 5 so on and so on.

09:15.070 --> 09:21.390
So that's how you can use local storage to store information store messages and a whole lot more.

09:21.390 --> 09:26.230
So we're going to look at local storage in a little bit more depth coming up in upcoming lessons as

09:26.260 --> 09:26.760
well.

09:26.890 --> 09:34.720
So go out and try this site and see if you can get an incrementing count within your using local storage

09:34.720 --> 09:35.770
within your web page.
