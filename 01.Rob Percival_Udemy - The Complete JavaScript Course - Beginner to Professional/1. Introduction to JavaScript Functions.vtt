WEBVTT

00:00.810 --> 00:05.190
At the very heart of any programming language are functions.

00:05.190 --> 00:10.860
And in this section we're going to be covering a javascript functions Javascript functions are going

00:10.860 --> 00:16.980
to allow you to execute blocks of code as needed within your application.

00:16.980 --> 00:20.860
So what you can do with the function you can pass information to it.

00:20.900 --> 00:27.060
You can make use of that information that's passed to the function and execute a block of code that's

00:27.060 --> 00:28.920
contained within the function.

00:28.920 --> 00:35.260
So they're kind of like little mini applications within your application that are assigned to do things.

00:35.280 --> 00:41.210
So each function should have its own set of tasks and accomplish those tasks when called upon.

00:41.370 --> 00:47.490
And there's a lot of lessons that we're going to be covering within this section in order to really

00:47.490 --> 00:52.180
illustrate how functions can be used in real life examples.

00:52.180 --> 01:00.120
So I've got a number of great exercises for you to get familiar with Javascript functions when you execute

01:00.210 --> 01:06.670
a function it's called invoking and it can be used a number of times repeated as needed.

01:06.780 --> 01:15.300
So the repetition of functions is a crucial part of why we use functions and also we can output calculations

01:16.230 --> 01:19.480
and returned information from those functions.

01:19.560 --> 01:24.820
So the reusability of functions is at the very heart of why functions exist.

01:24.960 --> 01:31.230
We can just call upon those functions and execute that block of code when needed functions are really

01:31.230 --> 01:38.220
like many many programs allowing you to selectively execute that code learn about functions and how

01:38.220 --> 01:39.400
they can be used.

01:39.420 --> 01:44.170
Also learn about local and global scope in variables.

01:44.280 --> 01:49.710
So this is a really important concept in javascript and I'm going to be showing you some great examples

01:49.950 --> 01:57.120
of how this works and why you need to be cognizant of the fact of where you're declaring your variables

01:57.360 --> 01:58.800
and how it's relative.

01:58.800 --> 02:03.360
If you're using a variable and you're declaring it within a function so it's going to actually make

02:03.360 --> 02:04.260
it local.

02:04.350 --> 02:10.200
And if it's outside of the function then it's global and accessing these values in the variables is

02:10.200 --> 02:14.190
going to be dependent on where the variable of day gets declared.

02:14.190 --> 02:20.700
We're also going to be introducing you to some more exercises to show you some real world application

02:20.790 --> 02:23.160
of functions in Javascript.

02:23.160 --> 02:29.700
So we're going to create a random name generator using functions in order to return back a randomly

02:29.700 --> 02:31.020
generated name.

02:31.020 --> 02:36.740
We're also going to be building out a calculator that's going to make use of functions in order to create

02:36.750 --> 02:38.990
its mathematical operations.

02:39.120 --> 02:46.020
So we're going to be able to add divide subtract and multiply by clicking and interacting with content

02:46.200 --> 02:48.420
presented within our Web page.

02:48.420 --> 02:54.420
Also learn how to pass arguments and parameters into functions.

02:54.420 --> 03:00.010
So this is really important because it allows you to send data into a function.

03:00.090 --> 03:05.880
So not all functions have to have that same data and depending on the data that you're sending in you

03:05.880 --> 03:08.400
could be returning different results.

03:08.430 --> 03:14.400
And this is going to be illustrated within the calculator because we're going to see how dynamic functions

03:14.400 --> 03:16.680
can really make your applications.

03:16.710 --> 03:22.890
Also we're going to be building out a code cracking game we're going to have to guess the random code

03:23.130 --> 03:27.290
and see how many times it takes you to guess this random code.

03:27.390 --> 03:34.590
It's going to return back either that the number is higher or lower and depending on the return back

03:34.590 --> 03:38.870
result you can update your guess and try to guess the number.

03:38.920 --> 03:45.090
So is the number three different numbers 0 to 9 and it's going to tell you if it's higher or lower depending

03:45.090 --> 03:46.420
on what your guesses.

03:46.530 --> 03:50.210
And you can take this application you can even build it further.

03:50.670 --> 03:54.810
All of the source code is included within this course as well.

03:54.840 --> 03:58.520
So functions also don't need to have a name applied to them.

03:58.530 --> 04:03.120
They can also be used the same way the variables can be used.

04:03.240 --> 04:09.050
So we can declare a variable that has a function in it and then that variable can also change.

04:09.060 --> 04:13.660
So there's a lot of dynamic capabilities that we can apply to functions.

04:13.680 --> 04:20.580
Functions can also invoke themselves so they can be recursive self invoking functions that can also

04:20.610 --> 04:24.020
loop through content and similar to loops.

04:24.120 --> 04:29.110
They can apply the same code multiple times until a condition becomes true.

04:29.310 --> 04:34.660
We're also going to be building out a word guessing game using recursive functions.

04:34.710 --> 04:41.190
We're going to improve upon that game by adding in shuffling using an array where we can shuffle that

04:41.190 --> 04:43.610
array and return back different items.

04:43.740 --> 04:49.440
So we're be taking what we learned from the earlier sections and applying it within the exercises of

04:49.500 --> 04:57.080
this section also function scope having to review and find out what is global and what is local.

04:57.090 --> 05:02.650
So where you're declaring your variables is going to make your variables either global or local.

05:02.720 --> 05:06.980
So we're going to be discussing what that is and how that works in javascript.

05:07.070 --> 05:10.700
Also how to extend your arrays by removing duplicates.

05:10.700 --> 05:16.460
So we're going to be building out a useful code snippet from scratch as another exercise in order to

05:16.460 --> 05:19.430
illustrate what functions can be used for.

05:19.490 --> 05:23.550
And there's a lot of uses for functions within programming.

05:23.570 --> 05:28.940
Another thing that we're going to be showing you in this section is how to invoke functions within functions

05:29.210 --> 05:35.090
so we can add functions within functions and we're going to be building out a shopping list that's going

05:35.090 --> 05:43.960
to allow us to take user input and add items into our current list to be displayed within our each page.

05:43.970 --> 05:49.040
So another exercise from scratch in order to illustrate how functions work.

05:49.160 --> 05:54.620
Also callbacks within a function and how we can pass even more information.

05:54.680 --> 06:00.590
And another function as a parameter within a function to get that executed within that function.

06:00.590 --> 06:06.650
Also showing you how we can improve upon that javascript calculator that we built earlier in the section

06:06.950 --> 06:11.630
and we're going to improve upon that build by making the code more efficient.

06:11.630 --> 06:18.380
And that's one of the things about becoming a programmer is that we take code and we try to build it

06:18.410 --> 06:23.710
as efficiently as possible using our code and programming knowledge.

06:23.930 --> 06:29.360
And we're also going to be building out an additional exercise within the section where we're going

06:29.360 --> 06:35.810
to have a deck of cards and then I'm going to show you how to deal out that deck of cards to any number

06:35.810 --> 06:41.280
of players so dynamically selecting the number of players that you want to deal out the cards to.

06:41.300 --> 06:43.100
And we're going to deal those cards.

06:43.340 --> 06:49.460
And all of this is going to be accomplished using javascript and mainly functions within the source

06:49.460 --> 06:50.050
code.

06:51.170 --> 06:54.100
And remember the best way to learn is to push yourself.

06:54.260 --> 07:00.380
And this section covers a lot of exercises so you can really become comfortable with using functions

07:00.650 --> 07:04.680
and learn and see the power of functions within javascript.
