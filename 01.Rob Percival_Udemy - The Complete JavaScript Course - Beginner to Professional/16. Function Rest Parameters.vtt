WEBVTT

00:01.240 --> 00:07.210
The previous lesson we saw how we can pick up the arguments as a default within the function using the

00:07.210 --> 00:10.270
arguments.

00:10.490 --> 00:14.220
And there is another option if you don't like to use arguments.

00:14.330 --> 00:21.890
You can also use the rest option and the rest the way that works is it's three dots and then whatever

00:21.890 --> 00:23.910
you want to call your value.

00:23.930 --> 00:32.520
So if for instance I want to call it A or whatever I can call it whatever I want.

00:32.760 --> 00:34.500
So we can also pull back.

00:34.500 --> 00:41.850
So let's let's get rid of some of this here and sort of arguments are we're going to do whatever I want

00:41.940 --> 00:48.580
and whatever I want length so that we can take a closer look at exactly what's going to happen here.

00:48.750 --> 00:52.050
So when I refreshed it it actually doesn't matter what you call it.

00:52.140 --> 00:54.770
You can give it any value any name there.

00:54.810 --> 01:01.830
And this looks the same way as arguments so we can actually have a customized value there that we can

01:01.830 --> 01:04.650
work with and we get those same values back.

01:04.710 --> 01:09.100
So we get all of the arguments that are passed and we get the length.

01:09.210 --> 01:12.860
We don't get the other stuff so we don't get the call the in the name and so on.

01:12.990 --> 01:18.570
But if we're just looking for arguments this is another way to pull back that information and make use

01:18.570 --> 01:19.810
of it within your code.

01:20.960 --> 01:24.330
Now this arrest parameter needs to be lost.

01:24.350 --> 01:31.400
So if I do something like A B and I want to pull back the value of A B and then any other arguments

01:31.400 --> 01:38.030
that get passed in there then that's what's going to end up within whatever I want and we see that it's

01:38.030 --> 01:43.850
only ending up with that last one because of course we've got a and b here that are taking the values

01:43.850 --> 01:45.910
of one and two.

01:45.920 --> 01:52.070
So let's try out and let's pass in a number of additional parameters and they're going to use numbers

01:52.070 --> 01:54.450
because these are to take them through.

01:54.740 --> 01:55.860
So let's try this.

01:55.900 --> 02:03.890
Now we see that we get all of those because A and B so A is ninety nine b a 66 and then we get the remaining

02:04.070 --> 02:08.900
number of arguments there that are passed then the string and then we can make use of those.

02:08.900 --> 02:12.430
So this is another really great format.

02:12.470 --> 02:16.880
That's you with ESX where we can pick up the remaining arguments.

02:16.880 --> 02:21.260
Doesn't matter how many get passed and we can pick them all up and we can also loop through them and

02:21.260 --> 02:22.940
make use of them within our code.

02:24.220 --> 02:31.360
So that's what I want you to do now to pause the video and loop through all of the values of whatever

02:31.360 --> 02:33.420
I want and I am going to change that.

02:33.430 --> 02:41.350
So maybe we'll just call it C to be simple here instead of whatever I want just call it C passing some

02:41.500 --> 02:50.160
values there and instead of having them law console log I want to output each one of the values of c

02:50.560 --> 02:55.160
and loop through it and output them separately within the console on separate lines.

02:55.330 --> 02:57.280
So I paused the video and try that out.

02:58.800 --> 03:00.170
So let me show you the solution.

03:00.180 --> 03:02.740
The solution is to have a loop.

03:02.850 --> 03:05.060
So we're going to do a quick for loop.

03:05.160 --> 03:07.430
And within this for loop.

03:07.580 --> 03:09.590
So let's I equal one.

03:09.620 --> 03:11.070
That's our starting point.

03:11.070 --> 03:18.750
And we're going to loop through while I is less than the length of C and with that way we know that

03:18.780 --> 03:22.310
because we do get this value we do get this length value there.

03:22.380 --> 03:25.380
So we know that we can make use of that within our code.

03:25.380 --> 03:33.240
So let's increment i so loop through it and then now all it is is just outputting that content within

03:33.240 --> 03:34.160
the console.

03:34.260 --> 03:38.110
So we know that we've got a value there for C..

03:38.190 --> 03:45.720
So if we do see I should put that value that gets passed in there and we can we can also we can just

03:45.720 --> 03:47.140
keep those Konsole logs.

03:47.280 --> 03:52.140
So let's try this and refresh it and we see that we're getting output of three.

03:52.320 --> 03:53.310
Let's try that

03:56.170 --> 04:00.270
one that we tried earlier and now we see that we're actually looping through it.

04:00.280 --> 04:06.610
So anyone that's falling after the first two it actually loops through and outputs them all in the console

04:08.710 --> 04:14.100
so next challenge is to update the values that we're returning in.

04:14.140 --> 04:21.980
I want to say my funds whatever the name of the function says and then that value of the argument.

04:21.990 --> 04:27.370
So add that in to what you're doing within your Llew positivity and add that in.

04:27.370 --> 04:32.050
And remember earlier when we looked at arguments we had a number of parameters there and we could actually

04:32.050 --> 04:33.970
get the name of the function within those.

04:34.120 --> 04:35.320
So go ahead and try that out.

04:35.340 --> 04:36.890
I'll show you the solution coming up.

04:38.350 --> 04:41.260
So if you had an opportunity to try that out.

04:41.350 --> 04:46.000
So going back to what we looked up earlier we don't need to take any of these primers we don't need

04:46.060 --> 04:51.160
the rest and we can update this to be arguments as you try to do it that way.

04:51.160 --> 04:54.490
It's not can actually allow you to pull that argument information.

04:54.520 --> 04:58.550
So arguments length and this will put all of the arguments.

04:58.690 --> 05:04.720
So when we refresh it we see we get all of the arguments and then also we want to get the name value.

05:04.870 --> 05:08.980
So let's do that and we'll call it name.

05:09.040 --> 05:12.580
And this is going to be arguments.

05:13.090 --> 05:17.480
So we're going to look at the arguments object and it's called Eat and name.

05:17.650 --> 05:20.460
So this should return back the name of the function.

05:20.560 --> 05:23.920
And now we can use it here within our output message

05:26.990 --> 05:31.480
says this value.

05:32.670 --> 05:33.960
So let's refresh that.

05:33.990 --> 05:34.930
And there we go.

05:34.920 --> 05:41.860
So now we see the name of the function says this value when this value to and this value 3.

05:41.910 --> 05:48.600
So anything that we're passing into that my fun it's going to take those values and it's going to simply

05:48.600 --> 05:49.650
output them.

05:49.680 --> 05:52.920
So we see that my fun says this value hello and so on

05:56.120 --> 05:59.510
so there's a lot of power with the arguments and with the rest.

05:59.510 --> 06:03.200
And there's also a lot of information that you can utilize within your coding.
