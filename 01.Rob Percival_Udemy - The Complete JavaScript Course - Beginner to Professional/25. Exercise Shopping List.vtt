WEBVTT

00:00.570 --> 00:02.580
Welcome back in I have a challenge for you.

00:02.580 --> 00:03.760
For this lesson.

00:03.840 --> 00:06.680
So we're going to revisit our shopping list.

00:06.720 --> 00:14.490
And this time what I want to do is I want to have a nice list here all done within the web page where

00:14.550 --> 00:23.280
we've got an input here and whenever we type anything within the input then we can add value into our

00:23.280 --> 00:23.790
list.

00:23.910 --> 00:28.550
So basically it's building out all of these items that are available within the array.

00:28.710 --> 00:32.360
And then it's looping through the items that are in the array.

00:32.380 --> 00:33.660
And I would put them.

00:33.720 --> 00:35.930
So this is two separate functions.

00:35.950 --> 00:42.720
There's one function where we add the items into the array and then the second function is to put the

00:42.720 --> 00:43.530
list.

00:43.530 --> 00:51.850
And the challenge for this as well is I want you to make this to be to have as little global variables

00:51.940 --> 00:57.410
as possible and have as many local variables in the functions as possible.

00:57.460 --> 00:58.590
So go ahead.

00:58.600 --> 00:59.930
Pause the video.

01:00.130 --> 01:02.200
Take the starting file that I have here.

01:02.240 --> 01:08.050
I've got the HD M-L covered so you don't have to do anything with the h him out and radioed the Javascript.

01:08.050 --> 01:15.240
So this is going to be two functions to separate functions to build an array and then put that array.

01:15.280 --> 01:20.530
So go ahead try open up your editor try it out and I'll show you the solution coming up.

01:20.530 --> 01:26.160
So the first thing that we need for our solution is we need to create an array.

01:26.350 --> 01:32.350
So this one has to be global because we're going to be using it across two different functions.

01:32.410 --> 01:39.410
So we have no choice but to create our shopping list and keep it as a global variable.

01:39.460 --> 01:44.680
So the next thing that we need to do is to create a function in order to add items.

01:44.680 --> 01:50.890
So we see that we've already got the on click hooked up to a function called add item.

01:50.890 --> 01:54.640
So we need to know that we need to set that function up.

01:54.670 --> 02:01.870
So let's go ahead and set up a function and this function is called out item and we don't need to pass

02:01.870 --> 02:06.010
any values or anything any arguments yet into here.

02:06.430 --> 02:12.860
So next thing that I want to do is that I want to grab this value.

02:12.970 --> 02:20.620
So I did say that we want to try to keep them as local as possible and if we have no use for the variables

02:20.710 --> 02:25.870
outside of the function that we're using them in then we're not going to actually have them sitting

02:25.870 --> 02:26.410
globally.

02:26.410 --> 02:31.200
So we're not going to waste our global space and we're going to utilize all these functions locally.

02:31.450 --> 02:42.430
So let's do that and we're going to grab that element by ID so Dokument get element by id and the element

02:42.480 --> 02:45.740
that where grabbing is called item.

02:45.880 --> 02:49.930
And for this when we actually go to get the value of that item.

02:49.930 --> 02:52.570
So we're going to do that all within one statement.

02:52.930 --> 02:59.250
So the next thing that we know we need to do is we've got the item value that's been entered into here

02:59.500 --> 03:06.190
and we need to actually have it go into our shopping list array because right now the shopping list

03:06.250 --> 03:07.390
is empty.

03:07.390 --> 03:11.110
So let's push that value Zaremba with a raise.

03:11.140 --> 03:14.250
What we want to add an item we simply do push.

03:14.290 --> 03:22.550
So this is a built in function that's already built in to the array in Javascript.

03:22.580 --> 03:24.730
So all we have to do is call to it.

03:24.740 --> 03:30.410
So this is just like any other function where we pass in an argument and the argument that it's expecting

03:30.410 --> 03:35.310
or that's waiting for is the value that I want to add into the array.

03:35.540 --> 03:38.790
So doing that is building up our shopping list.

03:38.960 --> 03:44.360
So now we've got our shopping list and we're adding a bunch of items into our shopping list.

03:44.510 --> 03:46.630
So that was the first part of the challenge.

03:46.670 --> 03:51.830
The second part of the challenge was putting that content within each team.

03:52.160 --> 04:00.250
So for this one we're going to set up a separate function and we're going to simply call to it.

04:00.290 --> 04:06.890
So whenever we've added and we updated our shopping list we're ready to output that list and sat see

04:06.890 --> 04:08.640
a visible within the page.

04:08.900 --> 04:12.700
So that means that we need to set up a function called output list.

04:12.860 --> 04:18.040
And this is a global function because it's it's being invoked.

04:18.040 --> 04:20.340
We don't have that within the function itself.

04:20.500 --> 04:23.130
And this is also an option as well.

04:23.230 --> 04:28.610
So if you actually put output list or whatever you called your function that's going to output the content.

04:28.630 --> 04:33.960
If you put it within the add item that's correct as well and that's actually even better because then

04:33.970 --> 04:35.440
you're keeping it locally.

04:35.650 --> 04:39.160
But for now I'm going to keep it as a separate function.

04:39.190 --> 04:44.520
But as I said it could very well be kept within the add item function as well.

04:44.560 --> 04:48.100
So that would be correct as well to do it within that type of format.

04:48.130 --> 04:53.800
So let's set up all of our variables and all of these variables are ones that we know we need to make

04:53.800 --> 04:56.500
use of within our function.

04:56.500 --> 04:59.650
So we need to also have that output.

04:59.650 --> 05:05.890
So let's set that one up and notice that typically I've been setting up globally but because I only

05:05.890 --> 05:10.950
need to have access to it within this one function there would be no need to have it globally.

05:10.960 --> 05:13.730
So that's why it's being set up locally.

05:14.290 --> 05:21.940
So just call it output and we're going to grab that value of that element output so that we can write

05:21.940 --> 05:24.490
to it using our Javascript.

05:24.490 --> 05:32.030
So next thing that we want to do is I'll set that up that we're output in or HMO.

05:32.170 --> 05:36.160
And then we're going to equal that to whatever the value of each team Melas.

05:36.160 --> 05:42.690
So now we've got one other step to do so we know that over here we've been building the shopping list.

05:42.700 --> 05:45.460
We've been set up this blank array.

05:45.580 --> 05:50.490
And as the users are adding items into the list they're adding into the array.

05:50.680 --> 05:55.800
So we know that we've got an array with all of our items sitting in there.

05:56.020 --> 06:03.810
So let's set up and let's loop through that array of variable x and really call that to zero.

06:03.970 --> 06:12.870
And we're going to loop X while it's less than a shopping list length.

06:12.880 --> 06:16.610
So that's how we get the length of the items in the array.

06:17.140 --> 06:22.810
And let's increment X so now we're looping through the array.

06:22.810 --> 06:26.330
So now it's the last part is to update this H2 Mel.

06:26.440 --> 06:32.560
So we're going to increment add to that H2 male and I want to output it within this type of format as

06:32.560 --> 06:32.880
well.

06:32.890 --> 06:38.100
We have a numbered type format so we know that we've got the value of x.

06:38.380 --> 06:39.930
It did started 0.

06:39.940 --> 06:43.210
So we need to add 1 to x.

06:43.420 --> 06:52.690
So we'll do that for the output only and not not in general that we're adding in the dot then concatenating

06:53.200 --> 06:57.790
the shopping list item number this is an array.

06:57.790 --> 07:05.280
So in order to get the contents out of that array that item we just put it within that type of format

07:05.530 --> 07:08.680
and then we're doing line breaks so that it's more readable.

07:08.800 --> 07:16.660
And now that that looks like that's all that we have to do so let's refresh and let's try it.

07:16.660 --> 07:28.550
So we'll do a test and we see that we're able to add in items into the list and as we add them they

07:28.550 --> 07:32.240
populate our array.

07:32.370 --> 07:38.820
And if you want to really clean it up you can take that function and nested within the function.

07:38.820 --> 07:43.660
I'm just going to use the beautifier to clean up that code and we see that now.

07:43.680 --> 07:46.860
Refresh it and everything still works the same way.

07:46.860 --> 07:49.620
Everything is still functioning and up and running.

07:49.860 --> 07:55.200
So we've just got that function and we don't have any functions actually sitting globally except for

07:55.200 --> 08:02.340
that one item and that function actually gets initiated from each team else we can't avoid that but

08:02.490 --> 08:09.000
we've got all of this nice and neatly packaged locally within this one function and we know that once

08:09.000 --> 08:13.430
this function finishes then all of these variables they don't have to sit within the global scope.

08:13.530 --> 08:20.010
So if we had a really long application then we would be destroying all of these variables and we wouldn't

08:20.010 --> 08:26.230
have the risk of overwriting and overlapping variable names.

08:26.580 --> 08:29.170
So go ahead and try it for yourself.

08:29.190 --> 08:33.360
And then finally if you didn't do it all locally.

08:33.570 --> 08:38.490
Make sure you make the proper adjustments to your script so that everything is sitting nice and neatly

08:38.490 --> 08:41.520
packaged locally within that one function.
