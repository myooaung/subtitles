WEBVTT

00:01.100 --> 00:06.850
Welcome back in in this lesson I actually had to build an email extractor using Reg X..

00:06.890 --> 00:13.100
So let's do some updates to some of the code that we had earlier we can get rid of this part here and

00:13.100 --> 00:15.470
this time let's use textarea.

00:15.470 --> 00:22.910
Those are h t m l and this gives us the ability to do a fairly larger area where we can input text.

00:23.060 --> 00:26.770
Let's give it an idea of T x area.

00:27.110 --> 00:38.160
And also let's add some rows so it gets 12 rows and columns would need quotes around their so columns

00:39.770 --> 00:46.680
and let's do 100 columns Let's go back and refresh it.

00:46.680 --> 00:49.810
So there's our textarea and get e-mails.

00:49.860 --> 00:57.270
Basically I want to get emails while I get all of the e-mails out of the text that we're going to be

00:57.450 --> 00:59.390
importing pasting into there.

00:59.760 --> 01:03.480
So next we knew we need to set up a function.

01:03.480 --> 01:06.810
So let's set up a function called look up

01:11.090 --> 01:19.090
and within look up I want to grab the content that's available within text area and I also did want

01:19.090 --> 01:25.150
to add one of the things so I wanted to create a form and give it a name so that I can easier pick up

01:25.240 --> 01:32.720
that this textarea for extraction and also going to change this ID to a name so giving the form a name

01:32.740 --> 01:38.230
this is going to give me the ability to identify that content just within this form look up.

01:38.500 --> 01:42.190
So let's call it my form and we'll do something like that.

01:42.310 --> 01:46.120
And then we're going to wrap that H-2 Mel within the form.

01:46.480 --> 01:53.170
And this is just for as we saw earlier within one of the previous lessons where we can simply get that

01:53.230 --> 01:54.360
information.

01:54.370 --> 01:59.420
So this one is going to be the raw This is the raw text.

01:59.530 --> 02:06.690
So we want to first grab the contents that are within the text area and we know that we can specify

02:06.700 --> 02:18.190
document and then we can go down to the money form and then within my form we can grab a text area and

02:18.190 --> 02:20.370
from here we can grab value.

02:20.560 --> 02:26.770
So let's just go into the console and make sure that we're actually grabbing the contents of that.

02:26.770 --> 02:27.940
So let's go out here.

02:28.000 --> 02:29.110
Refresh it.

02:29.230 --> 02:35.690
Add in some content there and we can see that we are in fact grabbing that content that raw text.

02:35.710 --> 02:38.730
So the next step is to actually do something with it.

02:38.770 --> 02:46.880
So now that we've grabbed that raw text we need to create another variable and extract the emails.

02:46.990 --> 02:50.050
And this is where Reg X comes into play.

02:50.050 --> 02:56.560
So what I want you to do now pause the video and create a brand new variable that's going to hold that

02:56.740 --> 02:57.940
those e-mails.

02:57.940 --> 03:08.350
So call it variable he dieta and then output if take a look through this raw text and only returned

03:08.350 --> 03:12.370
back only match and return back that e-mail addresses.

03:12.370 --> 03:14.780
And we saw the pattern earlier on.

03:14.800 --> 03:18.410
So go ahead and use that same pattern and I'll show you the solution coming up.

03:19.890 --> 03:22.530
So you have an opportunity to try that.

03:22.710 --> 03:28.260
And we know that we've got all of our texts so this is our stream that we now have to work with.

03:28.290 --> 03:30.760
And next we can use match.

03:30.990 --> 03:36.210
And then within match we need to just simply put our content.

03:36.210 --> 03:44.760
So I put our email addresses out and actually match for our e-mail addresses and we can use that same

03:44.790 --> 03:47.510
regular expression that we used earlier.

03:47.670 --> 03:51.870
And we can also use various ones.

03:51.870 --> 03:54.780
There's a bunch of different ones on the web as well.

03:54.780 --> 03:58.920
So some of them are actually shorter and some of them are way longer.

03:58.920 --> 04:02.520
So I'm going to just go ahead and use the one that we used earlier.

04:02.550 --> 04:07.290
So this one is going to pull back all the e-mail addresses that are available in there.

04:07.500 --> 04:12.990
And actually since I'm on this page I'm going to grab some of this text and I'm going to paste it into

04:13.230 --> 04:14.680
my input here.

04:14.700 --> 04:19.240
So let's go back and refresh and let's see.

04:19.650 --> 04:24.050
So it's paste in some content and get email addresses.

04:24.060 --> 04:29.590
So basically I'm able to pull out both of those email addresses out of the string.

04:29.700 --> 04:33.890
So now it's just a matter of returning those e-mail addresses.

04:33.930 --> 04:39.020
So it's as easy as that to grab those email addresses from a string content.

04:39.150 --> 04:43.310
And now what we can do is return those addresses below.

04:43.470 --> 04:52.110
So what I want you to do now is create a separate area here and maybe another input area text area and

04:52.140 --> 04:57.810
in that one I want you to comma separate and output all of the e-mail addresses that you getting from

04:57.810 --> 04:58.860
that textarea.

04:59.070 --> 05:07.080
So good pause the video and and add that into our project and I'll show you the solution coming up.

05:08.070 --> 05:10.820
So we had an opportunity to try that out.

05:10.920 --> 05:16.500
And at this time we're going to create another textarea input that's going to clean this up a little

05:16.500 --> 05:17.940
bit.

05:18.030 --> 05:21.650
So that was the beautiful function from brackets.

05:21.660 --> 05:27.730
So that's an extension that I've added in and allows me to re organize my code so it's a lot more readable.

05:27.750 --> 05:34.050
So I'm going to call this one text area too and I'm going to keep it all the same there so it's easy

05:34.080 --> 05:36.620
for me to just simply copy and paste that.

05:36.930 --> 05:41.550
So we know that we are returning back some content into the data.

05:41.580 --> 05:47.400
So basically we know that that basically means that we've got some e-mails in there and we see that

05:47.400 --> 05:49.170
within and we've got the link.

05:49.170 --> 05:51.450
So we've got our array all ready to go.

05:51.540 --> 05:54.800
So this time let's use a loop.

05:54.990 --> 06:04.990
So setting our x value and looping X while it's less than the length of data and then increment x.

06:05.490 --> 06:12.320
So this is a loop through the contents of the array and you can use the shorter formats as well.

06:12.390 --> 06:16.080
So preferred within the Course I'm just keeping the longer formats.

06:16.080 --> 06:19.500
So that's more self-explanatory when we look at the code.

06:19.500 --> 06:24.180
So the next thing that we need to do is we need to output those values.

06:24.180 --> 06:29.190
So let's also let's add in.

06:29.440 --> 06:40.270
So let's set up a new variable so called variable and h t m l and this one is going to be emails.

06:40.420 --> 06:43.120
So that's how we're going to start out our h t m l

06:45.970 --> 06:51.580
and actually doesn't have to be h t m l so actually because we're going to be listing all the emails

06:51.580 --> 06:55.960
and that other input maybe we'll just leave it blank as emails.

06:56.020 --> 07:04.150
Now let's increment our h to M L So we know that with our array we can simply loop through them and

07:04.210 --> 07:08.500
we can add those email addresses into our array.

07:09.010 --> 07:13.620
So there is actually a shorter format in order to get that output.

07:13.630 --> 07:22.480
So if you remember previously when we looked at arrays we know that we can take an array and we can

07:22.480 --> 07:24.250
convert it to a string.

07:24.250 --> 07:31.050
So we do have that two string method and this gives us the ability simply to turn our rate to a string.

07:31.180 --> 07:32.950
So let me remove that for now.

07:32.980 --> 07:38.140
And instead of Konsole that will output or H2.

07:38.320 --> 07:45.280
So this will basically output our content and actually we can do it even more where we can do something

07:45.280 --> 07:48.920
like this and then do value.

07:48.970 --> 07:55.120
And then we call that to page 2 mill or we could even shorten it even more so it's always about trying

07:55.120 --> 07:57.550
to shorten it as much as possible.

07:57.550 --> 08:00.390
So this was text area too.

08:00.460 --> 08:03.350
So now let's let's try this first.

08:03.640 --> 08:11.140
So refresh and let's grab that all that string content that was available on the Web site and get out

08:11.140 --> 08:12.470
the e-mail addresses.

08:12.490 --> 08:13.090
So there we go.

08:13.090 --> 08:18.360
So we simply can convert it into a string and put it within our H2 himself.

08:18.700 --> 08:26.830
So the one thing that could become a problem is if I've got multiples of the same email addresses so

08:26.830 --> 08:29.770
sometimes you don't want to have multiples.

08:29.770 --> 08:35.200
And this is where the loop comes in because we do need to be able to loop through it in order to output

08:35.230 --> 08:36.220
that content.

08:36.220 --> 08:41.110
So although this is a great solution if we're just simply output in the e-mails what I want you to do

08:41.170 --> 08:47.860
now pause the video and add in the ability to actually check to see if we're.

08:47.920 --> 08:54.580
We've already got an e-mail address available within our Auray.

08:54.910 --> 09:00.850
So although this works and this is good let's go back to our loop and this is actually going to give

09:00.850 --> 09:07.690
us the ability before we actually added into our array to make sure that it actually fits in there so

09:07.690 --> 09:12.800
we can comment some of this and I'm going to go back to just keeping this as blank.

09:13.690 --> 09:15.490
And we don't need to console log that.

09:15.550 --> 09:19.750
Because we know that now we're grabbing those e-mail addresses and they're going to comment to this

09:19.750 --> 09:20.830
solution.

09:20.830 --> 09:26.870
So what I want you to do now pause the video and create an array in order to hold these e-mail addresses

09:27.130 --> 09:32.460
and then also what I want to do within the loop is to check if that value is already within the array.

09:32.560 --> 09:35.420
And if it's in there then we skipped that.

09:35.530 --> 09:40.300
And if it's not in there then we're going to add it in sorting basically going to be removing any duplicate

09:40.300 --> 09:41.630
e-mail addresses.

09:41.650 --> 09:44.230
So show you how to do that coming up.

09:44.230 --> 09:48.520
So first of all let's set up a basic empty array.

09:48.520 --> 09:55.330
I'm going to call it holder next within the loop as I loop through all the e-mail addresses what I want

09:55.330 --> 10:05.070
to do is I want to have a condition here and I want to check to see if that value is within the holder.

10:05.200 --> 10:10.900
So if we do index of we can check to see if value is contained within there.

10:11.110 --> 10:18.230
And this time we're doing data and let's put that current value.

10:18.340 --> 10:24.700
So a check to see if it's in there and if it's not in there then we can go ahead and we can push that

10:24.700 --> 10:26.280
value in there.

10:26.710 --> 10:32.510
So we're just going to do some copying and pasting here and we're going to push it into the holder right.

10:33.010 --> 10:38.950
So at the end of the day once we finish our loop we've got our condition there and now it's console

10:38.950 --> 10:41.860
log out what's contained within holder

10:45.250 --> 10:48.110
and now we're ready to try that within the browser.

10:48.220 --> 10:54.950
So I'm going to copy some of this out and let's save it and refresh the page.

10:54.950 --> 10:56.420
So now let's put that in there.

10:56.440 --> 11:02.590
And now this time we do have some duplicates and now we can get e-mail addresses and we can see that

11:02.680 --> 11:03.900
the output here.

11:03.940 --> 11:05.110
So we're not having

11:09.800 --> 11:13.880
so what happened here we actually got the two duplicate.

11:13.910 --> 11:21.620
And if we were to actually copy this so even more and we had a bunch of them and if we do get e-mails

11:21.770 --> 11:23.610
so we are getting all the duplicate set.

11:23.780 --> 11:27.100
So we need to remove the duplicates so paused the video.

11:27.110 --> 11:33.290
And if you know the solution to this update the code and look at what we're doing within the Holger

11:33.290 --> 11:35.280
array and index of.

11:35.350 --> 11:39.550
And we know that index of returns back a value of negative 1.

11:39.560 --> 11:45.210
So if that item is not in the array the value is going to be negative 1.

11:45.230 --> 11:48.590
So it's not going to be true it's going to be negative 1.

11:48.650 --> 11:55.970
So we need to update this condition in order to be able to match to see if that particular value is

11:55.970 --> 11:57.850
already within that array.

11:58.190 --> 12:00.680
So I paused the video and make that update.

12:00.740 --> 12:08.590
So the solution coming up so the solution is to make sure that we're checking for the value of negative

12:08.590 --> 12:09.160
1.

12:09.160 --> 12:15.140
So now if we refreshed it and we get e-mails we can see that we've got three unique e-mails.

12:15.310 --> 12:20.690
So it actually doesn't matter how many times these emails are within that string.

12:20.710 --> 12:23.770
We're only going to get the unique ones being returned back.

12:23.770 --> 12:30.670
So this is the way to return back unique values within the array that we've pulled using our regular

12:30.730 --> 12:34.140
expression.

12:34.290 --> 12:37.930
And you can also do quite a bit more as well.

12:38.010 --> 12:45.540
So when you're creating an array you can update it and you can update different types of separators

12:45.540 --> 12:46.440
for the emails.

12:46.560 --> 12:52.650
So sometimes when you want to extract or email addresses and you do get e-mail it's not good enough

12:52.650 --> 12:55.430
to just simply outputting a comma separated.

12:55.560 --> 13:01.680
And one of the things that we still need to do so before we finish off this lesson we need to output

13:01.920 --> 13:07.570
the contents of Holder within that array.

13:07.590 --> 13:10.680
So let's let's copy this and refresh it.

13:10.750 --> 13:12.880
So that was the one loss parameter.

13:12.960 --> 13:15.300
So now we can just simply output it here.

13:15.300 --> 13:20.690
So the next step is to format it so it's not comma separated.

13:20.700 --> 13:29.040
You can try out different separators within your output so pause the video and try that out.

13:29.120 --> 13:34.820
Try putting the different separator such as a pipe so the pipes are the ones like that.

13:34.820 --> 13:40.000
So make the output come out as a pipe and try out a different a few different formats.

13:40.170 --> 13:43.520
Show you the solution really quickly as well for this.

13:43.520 --> 13:51.800
So in order to output an array you can also do a join because the holder is an array and we can join

13:51.800 --> 13:52.080
it.

13:52.250 --> 13:56.070
And then we can insert whatever character we want to join it by.

13:56.180 --> 14:02.600
So sometimes when you're putting email addresses you want to have a specific format and you can do this

14:02.660 --> 14:03.550
with the join.

14:03.560 --> 14:05.570
So that gives you the ability to do pipes.

14:05.570 --> 14:12.860
So try out a few different separators for the email addresses on the output using the code that we've

14:12.860 --> 14:13.280
used.

14:13.280 --> 14:14.210
Within this lesson.
