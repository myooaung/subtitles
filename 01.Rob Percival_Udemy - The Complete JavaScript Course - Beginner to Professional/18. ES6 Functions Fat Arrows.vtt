WEBVTT

00:00.910 --> 00:04.030
In this lesson we're going to be looking at fat arrows.

00:04.180 --> 00:10.240
So I have some basic javascript functions that are set up and we're going to be converting these to

00:10.300 --> 00:12.530
eat s six functions.

00:12.550 --> 00:17.150
So what we have for now is we've got a series of functions here.

00:17.170 --> 00:21.940
Some of them are doing some values we're passing values into them arguments into them.

00:22.000 --> 00:23.970
We're doing something with those arguments.

00:24.040 --> 00:28.760
Some we're just simply returning it and we're opening into the console there and then some.

00:28.800 --> 00:31.200
There's a combination of both.

00:31.210 --> 00:33.790
So either way that you're doing this.

00:33.850 --> 00:38.860
There's quite a bit of functionality here that we can improve upon with ESX.

00:38.860 --> 00:43.960
And one of them is simply removing the function word using a fat arrow.

00:44.080 --> 00:53.520
So let's start by converting this first statement and we know from earlier we don't use var anymore

00:53.570 --> 00:54.440
we try to avoid it.

00:54.440 --> 00:56.880
So we're using LET and constant.

00:56.900 --> 01:04.040
So let's just do let And we're going to set the message name so that one is fine and we can get rid

01:04.040 --> 01:11.030
of the word function and we're already setting the were the function value over here so we can get rid

01:11.030 --> 01:12.280
of all of that.

01:12.410 --> 01:15.520
And next is where we can use the fat arrows.

01:15.520 --> 01:21.650
This is just an equal sign and a greater than symbol and then the rest of that is going to be the format

01:21.650 --> 01:23.090
is going to be very similar.

01:23.090 --> 01:25.450
So let me try that and show you.

01:26.090 --> 01:30.150
And let's actually put test one so you can distinguish between them.

01:30.270 --> 01:36.260
So refreshed and we see that we've shortened the way that the function is being output and we see that

01:36.260 --> 01:38.560
we can output it within the same format.

01:38.570 --> 01:44.150
Everything still works the same except that we've got a different way of writing the syntax in a shorter

01:44.150 --> 01:44.930
format.

01:44.960 --> 01:50.650
So what's really happened is we've converted the function into that arrow symbol.

01:50.810 --> 01:53.210
So next let's look at return.

01:53.300 --> 01:58.840
So within message 1 We know that to update it let's update it to let.

01:58.910 --> 02:00.050
Message 1.

02:00.140 --> 02:02.210
And we're going to get rid of the function.

02:02.240 --> 02:08.910
So basically whenever we're only passing that one parameter we can simply simplify it either.

02:08.930 --> 02:11.360
We don't need those rounded brackets.

02:11.390 --> 02:17.600
And then lastly we know that we want to return some type of value and this is where the arrow comes

02:17.600 --> 02:17.950
in.

02:18.170 --> 02:22.690
And we know that from the earlier example we're able to return a value.

02:22.730 --> 02:26.510
So let's do this one a test to go back refreshed.

02:26.510 --> 02:31.360
So we do have tests to their kid put a space there to keep it consistent.

02:31.370 --> 02:39.410
So there's there's also we can either shorten this even more using the arrow if we are returning a value

02:39.440 --> 02:43.140
we can get rid of some of the brackets here as well.

02:43.160 --> 02:48.730
So this really simplified that statement and we see that our output is the same.

02:48.740 --> 02:55.310
So again we're just simply using function in order to replace these fat arrows.

02:55.310 --> 03:06.660
So what I want you to do now is pause the video and update this last one to be in line with ESX So pause

03:06.660 --> 03:08.950
the video and make an update on this one.

03:09.060 --> 03:14.760
And take what we've learned in the previous exercises and apply it to this one and this one doesn't

03:14.760 --> 03:16.140
have a return.

03:16.170 --> 03:17.960
So just cause an output there.

03:18.970 --> 03:21.220
And I'll show you the solution coming up.

03:21.280 --> 03:23.720
So if you had an opportunity to try that.

03:23.950 --> 03:32.530
And that's a simple exercise of converting from our previous javascript version to ESX and we know that

03:32.530 --> 03:38.100
the fat arrow basically replaces that whole function.

03:38.220 --> 03:44.040
So we can get rid of quite a bit of code there and syntax and to shorten it.

03:44.040 --> 03:49.300
So we are using the value we're adding in Hello there.

03:49.410 --> 03:53.180
So what we can do is we can simply console log.

03:53.230 --> 03:55.980
So we don't need to set a variable.

03:56.070 --> 03:57.590
And we did have that var.

03:57.600 --> 04:01.760
So if we were to use it we could have set that in there as well.

04:01.770 --> 04:04.990
So this time it's going to be test 3.

04:05.100 --> 04:08.220
So let's save that refresh and there we go.

04:08.220 --> 04:11.160
So we've simplified it within ESX

04:13.870 --> 04:20.340
And we also saw over here that if this is for the return that we were able to return it.

04:20.440 --> 04:27.550
But we can also simplify this by removing the curly brackets because we just have this one functionality

04:27.580 --> 04:33.760
that's happening so we can simply remove out all of the curly brackets go back and refresh it and we

04:33.760 --> 04:35.110
see that it still works.

04:35.110 --> 04:45.160
So we really simplified these functions and by using fat arrows.

04:45.200 --> 04:52.070
So what I want you to do now is to go back to where we are writing functions in one of the earlier sections

04:52.370 --> 04:56.480
and make some updates update it using the fat arrows.

04:56.510 --> 05:02.270
Update some of the functions and the more you work with it the more you're going to find that these

05:02.270 --> 05:07.180
five arrows really do are an easier way to present functions within your javascript.
