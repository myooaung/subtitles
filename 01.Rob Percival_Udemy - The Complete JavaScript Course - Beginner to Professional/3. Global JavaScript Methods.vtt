WEBVTT

00:01.000 --> 00:08.960
Welcome back in this lesson I want to do a quick overview of a number of the JavaScript global functions.

00:09.010 --> 00:10.950
So let's set up some variables.

00:10.960 --> 00:13.680
The first one I'm going to set up as a.

00:13.930 --> 00:19.570
And give it a value so a numeric value and then this one will be a string value.

00:19.570 --> 00:23.660
So this one can be hello world and variable see.

00:23.680 --> 00:29.960
So let's say equal variable c and we're going to equal it to a Web site address.

00:31.060 --> 00:34.650
So the Web site address whatever web site address.

00:34.870 --> 00:39.730
So this is just for the sake of having some type of content.

00:39.760 --> 00:44.110
And let's give it ID equals 100 and

00:46.640 --> 00:48.930
an equals 500.

00:48.950 --> 00:54.280
So we've got a longer string value so I know this is actually referring to anything real.

00:54.380 --> 01:00.560
But what I wanted to show you is some of the builtin global functions that can handle and rewrite these

01:00.770 --> 01:08.300
so we can code it and decode it using javascript one more will equal it to the string value representation

01:08.360 --> 01:09.800
of 400.

01:09.800 --> 01:15.200
So now let's go back out into javascript and we're going to try some of the global functions that are

01:15.200 --> 01:17.080
available in Javascript.

01:17.360 --> 01:21.350
So there are a number of them and we already saw this one before.

01:21.440 --> 01:28.910
So is NAND basically that gives us the ability to return a boolean value to check to see if a value

01:28.970 --> 01:29.950
is a number.

01:30.080 --> 01:32.900
So we see that a is not a number.

01:32.900 --> 01:35.510
So do you think that the is a number.

01:35.660 --> 01:41.450
And if you look closely we've got the strings around there but we know that javascript and its flexibility

01:41.660 --> 01:47.900
even if you've got a value of d at 400 sometimes that treats it as a number and we see that

01:50.970 --> 01:54.300
it in fact does see it as a number.

01:54.600 --> 01:56.930
So if we do another value.

01:56.940 --> 02:04.570
So let's do see and we see that C is true because this is not a number.

02:04.650 --> 02:10.460
So basically we're checking to see if it's a number and if we do typeof.

02:10.620 --> 02:15.300
So if we do type of d we see that D gets turned into a string.

02:15.420 --> 02:16.700
So let's do D.

02:16.740 --> 02:23.850
And we already saw this earlier where we can convert an object value into a number.

02:23.910 --> 02:29.760
So let's grab the D and we're going to convert it into a number.

02:29.760 --> 02:35.820
So now if we do type of d We're going to see that the type now is a number.

02:35.850 --> 02:40.830
So we're actually able to convert and change the string.

02:41.250 --> 02:44.070
There's another one that we can do as well.

02:45.410 --> 02:50.460
So I can actually convert d back in to.

02:50.870 --> 02:55.860
So just as I converted into a number I can convert it back into a string.

02:55.970 --> 03:00.960
So now if I do type of d we see that it's back.

03:00.950 --> 03:02.940
Now as a string value.

03:03.230 --> 03:14.670
So if we want to get the value and we want D to be treated as an integer we can also use parse IMT.

03:14.680 --> 03:20.180
So this is another way that you can take a D and you can use it as a number.

03:20.290 --> 03:24.740
So I see that the return of D is now an integer.

03:24.790 --> 03:32.020
So we can actually return it back as an integer as well so this is very similar to what we're doing

03:32.020 --> 03:35.930
with number and if we want to do that we can do that as well.

03:35.950 --> 03:39.350
So it's just important to get used to that.

03:39.350 --> 03:48.180
There's all these global functions that provide additional functionality into your data and there's

03:48.180 --> 03:53.570
one more that I wanted to go through and this one is kind of long so I'm going to just do it within

03:53.640 --> 04:01.290
the variables and I'm going to take variable E and I can take you r l and what I'm going to do to you

04:01.290 --> 04:01.970
are l.

04:01.980 --> 04:07.030
So sometimes when you're passing values you need to encode it.

04:07.200 --> 04:16.500
So you need to take a U R L and or a U R II and encode it so that it escapes some of these characters

04:16.710 --> 04:19.180
that you might not necessarily want to pass in.

04:19.350 --> 04:21.430
So let me show you what the result is.

04:21.540 --> 04:28.150
And the method for that is and code you are component.

04:28.160 --> 04:33.920
So basically what it's going to do is it's going to code it into a you or a format.

04:33.920 --> 04:37.360
So let me go back and let's refresh the page.

04:37.400 --> 04:39.680
And so what do you think is going to look like.

04:39.740 --> 04:44.680
And let's actually let's update the value to see because that's what our value is.

04:44.810 --> 04:46.810
So refresh that one more time.

04:46.910 --> 04:49.240
So we know that C looks like this.

04:49.400 --> 04:51.770
And what do you think it looks like.

04:51.770 --> 04:57.720
So we see that E all of these characters have now been converted and it's been encoded.

04:57.770 --> 05:00.380
So it's you or I has been encoded.

05:00.560 --> 05:04.660
And just as we encoded it we can also decode it.

05:04.820 --> 05:11.130
So the decoding for the you are a component is a set of code.

05:11.180 --> 05:21.700
All we have to do is decode and that will actually decode it so we decode e go back out refreshed the

05:21.700 --> 05:22.390
page.

05:22.390 --> 05:26.290
So now let's see what it looks like and I'll see what f looks like.

05:26.290 --> 05:29.780
So f is the decoded version of E.

05:31.690 --> 05:37.210
So basically what this does is this allows us to escape punctuation of characters.

05:37.450 --> 05:44.660
And also if we had some spaces in here it would also encode that as well.

05:44.680 --> 05:48.380
So if for instance we had a number of spaces in here.

05:48.550 --> 05:54.210
This type of value we've got spaces and we can't get to that.

05:54.210 --> 05:55.100
You are l.

05:55.120 --> 05:59.270
But if you want to go to the U R L we could use the encoded version.

05:59.470 --> 06:03.950
So let me refresh that and let me show you what C looks like.

06:04.090 --> 06:07.440
So C looks like that he looks like this.

06:07.450 --> 06:10.660
So we get that percentage 20 instead of spaces.

06:10.660 --> 06:17.890
So we get to escape out of all of those characters that typically wouldn't be able to be passed via

06:17.890 --> 06:19.530
this type of format.

06:21.590 --> 06:28.100
So what I want you to do now is try it for yourself encode and decode your eyes.

06:28.190 --> 06:33.710
So create a variable for your favorite you or I you can encode it and decode it.

06:33.800 --> 06:40.640
And then also gets familiar with some of the other global functions that are available within javascript.
