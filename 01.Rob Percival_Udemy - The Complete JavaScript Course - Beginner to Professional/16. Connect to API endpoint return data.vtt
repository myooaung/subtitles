WEBVTT

00:00.960 --> 00:07.950
The thing I really like about you son and atax is that this opens up the power of bringing data into

00:07.950 --> 00:09.210
your applications.

00:09.360 --> 00:14.520
And the nice thing about it is there's a ton of API is out there that you can pull data in from.

00:14.520 --> 00:21.390
So there's ones like YouTube and Twitter and all kinds of different endpoints that you can pull this

00:21.390 --> 00:26.670
information in and then you can display it and make use of it within your application so you don't have

00:26.670 --> 00:28.130
to worry about the data.

00:28.140 --> 00:33.940
You can pull that data in and all you have to do is just utilize that data within your application.

00:34.140 --> 00:38.480
So in this lesson I'm going to show you how to connect to one of these endpoints.

00:38.550 --> 00:40.890
And as you mentioned there's a ton of these out there.

00:40.890 --> 00:44.110
And the one that I'm going to be using today is rest countries.

00:44.130 --> 00:44.800
Eu.

00:44.970 --> 00:47.250
So basically it's going to give us.

00:47.340 --> 00:54.690
It's got a bunch of points here and whenever you load to the end point then you can actually see all

00:54.690 --> 00:55.320
of this data.

00:55.320 --> 01:05.370
So we've got V-2 and whenever I go here you can see that we've got just a ton of Jaison formatted data.

01:05.400 --> 01:08.920
So really when you're looking at this doesn't make a whole lot of sense.

01:09.030 --> 01:14.100
If you bring it into Jaison lint it's going to be lot more readable so it's going to be ordered within

01:14.100 --> 01:17.190
this type of format so you're actually going to be able to read it.

01:17.330 --> 01:23.360
But just so you know all this is basically the same type of file that we saw earlier.

01:23.530 --> 01:29.610
On file where we've got the square bracket indicating that we've got multiple entries within Dusan And

01:29.610 --> 01:35.290
then we've got all of those entries in here and that's what is contained within here.

01:35.310 --> 01:42.930
We've got a ton of information on a bunch of different countries so we're going to be pulling out country

01:42.930 --> 01:45.270
names within our application.

01:45.360 --> 01:48.390
And we're going to get that information from rest countries.

01:48.420 --> 01:48.950
Eu.

01:49.080 --> 01:55.080
So we don't have to worry about rating out 200 different country names and getting all this information

01:55.080 --> 01:55.700
about it.

01:55.740 --> 01:59.300
We can simply just pull it in like that and utilize that data.

01:59.460 --> 02:01.580
So let me show you how to do that.

02:01.770 --> 02:10.210
So we saw earlier how we had lowered a on file so we can also make use of it within the on load as well.

02:10.290 --> 02:17.130
And basically the request on load basically works the same way as making sure that we're ready state

02:17.130 --> 02:17.720
for.

02:17.730 --> 02:19.720
So you can use either one.

02:19.980 --> 02:22.140
And although it does look a lot cleaner.

02:22.170 --> 02:25.350
So let's let's do this format in this lesson.

02:25.770 --> 02:31.710
And of course for some of the older browsers although it might not work so may not work seamlessly.

02:31.710 --> 02:34.060
That's why we always default to ready state.

02:34.140 --> 02:37.240
But for now most of the browsers are supporting on load.

02:37.380 --> 02:39.230
So you can go in and use on load.

02:39.240 --> 02:44.820
So let me show you how to set this up so the first thing that we want to do is we want to do a window

02:46.710 --> 02:55.260
on load and we're going to launch an I.T. application and next let's set up a function in I.T. So a

02:55.260 --> 03:03.240
fire this function off whenever the window loads because we are creating some dorm interaction and lets

03:03.330 --> 03:06.030
add in a button here.

03:06.060 --> 03:15.850
So this is going to be input type because button and then so what this button is going to do is it's

03:15.850 --> 03:19.260
going to fire off and it's going to actually load that content.

03:19.290 --> 03:25.650
So type button ID is going to be we'll just call it my button.

03:28.540 --> 03:34.590
And we'll give it a value of load data.

03:34.590 --> 03:41.010
So basically when you click the button I want to load that data in from this you are also going to grab

03:41.010 --> 03:42.150
that and you are l.

03:42.360 --> 03:45.410
So copy and paste it so I can use it.

03:45.450 --> 03:47.570
And I don't have to actually go back to the page.

03:47.700 --> 03:52.320
And of course there's a lot of different you or else where they've got these recipes.

03:52.440 --> 03:57.140
So we saw that one of the first things we need to do is we need to load that data.

03:57.150 --> 04:01.040
So we're going to create a function and I'm going to load that data.

04:04.850 --> 04:06.540
So this is the one that's going to load.

04:06.650 --> 04:11.990
And this is going to be another format in order to load those requests.

04:11.990 --> 04:16.940
So last time we did see with HTP request so let's set up the variable.

04:16.940 --> 04:23.750
And you always need that first brain you Exham SML HTP request.

04:23.750 --> 04:29.630
So this is always always always the first step in this that we do that HTB request object.

04:29.630 --> 04:33.290
So we set that up and that gives us the ability to make use of it.

04:33.320 --> 04:38.880
The next thing that we know that we saw in the previous lesson is that we open.

04:39.200 --> 04:41.450
So we need to open it to a path.

04:41.660 --> 04:43.910
So I need to see the different method.

04:44.150 --> 04:48.340
So we're going to use get and we are going to look at posts later on next.

04:48.350 --> 04:53.300
We need a U R L So this is the URL that we can post in there.

04:53.300 --> 04:56.350
And then lastly asynchronous.

04:56.570 --> 05:01.280
So keep it at the default of asynchronous scenarios so we open it.

05:01.460 --> 05:05.970
And then in order to initiate it we need to hit send.

05:06.050 --> 05:06.590
So there we go.

05:06.590 --> 05:11.390
So now we're loading that information and we're going to listen for onload.

05:11.420 --> 05:18.830
So previously we can also do it within the ready States or you could use onload and on load we can fire

05:18.830 --> 05:20.080
off a function.

05:20.120 --> 05:24.050
And what I want to do is I want to link to an actual external function.

05:24.140 --> 05:31.010
So it's going to pass through all of that information within that object whenever we're making the loading

05:31.010 --> 05:31.530
of that.

05:31.580 --> 05:37.680
So that whole X H.R. object this is going to be passed through within onload.

05:37.700 --> 05:42.510
So let's do the our output.

05:42.560 --> 05:44.950
So this is when we actually capture the data.

05:45.080 --> 05:48.380
So that means we need another function.

05:48.380 --> 05:55.880
Our output and within this function so we don't need any arguments or parameters.

05:55.890 --> 06:01.360
And what I do is console log out and we're going to use this.

06:01.440 --> 06:02.120
So there we go.

06:02.160 --> 06:08.740
So one last thing we need to hook up our button to launch the loader.

06:08.910 --> 06:10.350
So that's what I want you to do now.

06:10.470 --> 06:12.730
Pause the video add in event listener.

06:12.750 --> 06:15.740
For the button and we've done this many times before.

06:15.840 --> 06:22.560
So she had no problem grabbing it by the ID and adding in the button or choosing a different selector.

06:22.560 --> 06:25.600
So pause the video and add that in.

06:25.620 --> 06:31.680
So if we had an opportunity to add a listener in and I'm going to simply I've got to use get element

06:31.680 --> 06:38.340
by id and I'm going to add that event listener I can add it in here within the night.

06:38.400 --> 06:51.140
So whenever the window object loads let's do document get element by id and grab my button.

06:51.300 --> 06:53.700
And within this one.

06:53.700 --> 07:00.790
Now let's set the listeners add listener and we're going to listen for a click.

07:01.530 --> 07:05.250
And whenever we get a click then we're going to fire off my loader

07:08.380 --> 07:09.510
force.

07:09.740 --> 07:10.250
So there we go.

07:10.250 --> 07:15.920
So we've got our event listener loaded and we're going to fire this off and then all of that should

07:15.920 --> 07:17.830
trigger other functions.

07:17.840 --> 07:19.490
Let's go ahead and see what happens.

07:19.490 --> 07:20.240
So there we go.

07:20.270 --> 07:27.760
So we passed in the ready state object information within our output.

07:27.890 --> 07:30.350
And this is what we're putting in the console.

07:30.350 --> 07:35.340
So basically we're all ready to go to create our element.

07:35.460 --> 07:40.640
So let's retrieved this information and we're going to parse through it.

07:40.640 --> 07:46.310
So this is going to be our response object and we're going to parse through all of this and we're going

07:46.310 --> 07:50.390
to pick one of these names randomly.

07:50.510 --> 07:56.410
So pause the video and try to add into the our output.

07:56.460 --> 08:01.280
So set up a variable here a global variable and we'll call it pick.

08:01.400 --> 08:04.100
And for now it's not going to contain anything.

08:04.100 --> 08:13.190
So what I want you to do is within our output to generate from this returned response of all of these

08:13.190 --> 08:19.550
countries I want you to grab a random country name by default.

08:19.610 --> 08:20.170
So good.

08:20.170 --> 08:24.520
Pause the video and add that into the script and I'll show you the solution coming up.

08:25.950 --> 08:28.500
So you had an opportunity to try that out.

08:28.700 --> 08:36.270
And the objective of this exercise was to grab that response information so we know that we get this

08:36.270 --> 08:39.100
back as response text.

08:39.210 --> 08:45.100
So if you were trying to get that information back it's all contained in as response text.

08:45.120 --> 08:51.180
So when I refresh N.F. I lowered because we don't need the rest of that object we just need that response

08:51.180 --> 08:51.900
text.

08:51.990 --> 08:52.710
So there we go.

08:52.710 --> 08:58.080
So we've got a ton of data sitting there with the response text.

08:58.170 --> 09:03.150
So the next thing that we want to do is we want to parse through this response text.

09:03.240 --> 09:09.880
So let's create a variable and this is going to be my object and this is actually going to hold the

09:09.930 --> 09:12.410
response text information.

09:12.510 --> 09:17.340
And as we saw earlier this is where we can make use of Giese on Parse.

09:17.340 --> 09:21.230
And now let's console log out might object.

09:21.480 --> 09:26.180
So now Instow all of this text it should be more readable.

09:26.400 --> 09:29.520
So let's refresh click the button and there we go.

09:29.520 --> 09:36.630
Two hundred and fifty different countries with a bunch of information and you can pull back and you

09:36.630 --> 09:39.570
can make use of any piece of this information.

09:39.570 --> 09:43.280
So there's a lot of great stuff if you want to get the flag of a country.

09:43.440 --> 09:44.810
It's right there.

09:44.850 --> 09:48.910
You've got languages you've got the short formats the alpha codes.

09:49.000 --> 09:51.070
It's a lot of stuff there.

09:51.150 --> 09:55.490
So you've got the capital cities lot of information is contained within there.

09:55.800 --> 10:04.070
So now that we've got that within the response text we need to loop through it and pick one randomly.

10:04.080 --> 10:09.080
So this is what we saw earlier where we've got the math object.

10:09.150 --> 10:17.800
So let's set up a variable pick and we're going to get that information that's contained within my object

10:18.540 --> 10:23.570
and we need to pick one of those 250 at random.

10:23.580 --> 10:27.500
Now we don't always know that the length is going to be 250.

10:27.510 --> 10:28.490
It might change.

10:28.620 --> 10:35.010
And this is where having dynamic applications is really important because when you're pulling data from

10:35.010 --> 10:39.310
an external source you're actually losing control of what's being output.

10:39.390 --> 10:45.430
So you actually have no idea that all of a sudden a new country pops up and there's 251.

10:45.510 --> 10:48.870
So you have to make your application flexible enough to accomplish that.

10:48.990 --> 10:53.560
And that's what we're going to use the length and we're going to multiply it by that.

10:53.940 --> 10:57.710
And we know that we've already got the length of you there.

10:57.870 --> 11:06.630
So this is what we've done before as well where we're doing math random and we know that with math random

11:07.170 --> 11:16.380
if we multiply it by a value then we're going to get random values so my object is the value that we're

11:16.380 --> 11:21.090
going to multiply it and it's actually my object length not just my object.

11:21.090 --> 11:25.920
So basically that's going to pick out a random country.

11:25.920 --> 11:27.250
So let's see if this works.

11:27.270 --> 11:34.130
So let's refresh and basically allows us to pick random countries from the list.

11:34.150 --> 11:36.600
Now he can make use of that information.

11:36.870 --> 11:43.220
So next step and in the next lesson we're going to be covering more of this.

11:43.230 --> 11:45.140
Let's make a game out of this.

11:45.150 --> 11:50.940
So what I want to do is I want to return back the name so we know that we can get the name because it's

11:50.940 --> 11:52.350
within an object.

11:52.410 --> 11:58.650
I want to randomize the characters of the name create two different outputs areas here to allow the

11:58.650 --> 12:04.780
user to guess what the country is and we're going to check all of the different letters.

12:04.950 --> 12:09.380
And if they get the letters in the correct order then we're going to show the correct ones.

12:09.570 --> 12:16.860
So basically it's going to be a really simple rudimentary name guessing game pulling out a name of a

12:16.860 --> 12:18.480
country at random.

12:18.480 --> 12:26.450
So we set up the basics of and next we need to create an input field for the guess we need to create

12:26.480 --> 12:34.870
two fields one for the actual value the randomized value and then the other one for the players guess.

12:34.880 --> 12:38.490
So let's take care of that in the upcoming lesson and go back.

12:38.510 --> 12:46.790
Also within the earlier lessons where we were able to shuffle the word order so that we could put in

12:46.850 --> 12:51.080
a string value and we could randomize the order of the characters.

12:51.080 --> 12:56.120
So think about that as well but we need to create a shuffling of the order of the characters.

12:56.120 --> 13:02.480
We're going to go back to when we looked at that what we could do with strings and Javascript in one

13:02.480 --> 13:06.620
of the earlier lessons and the next lesson we're going to build at this game.

13:06.620 --> 13:07.620
So show you how to do that.
