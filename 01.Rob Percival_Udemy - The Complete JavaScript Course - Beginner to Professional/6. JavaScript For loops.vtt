WEBVTT

00:00.590 --> 00:03.740
Welcome back in this lesson we're looking for loops.

00:03.800 --> 00:11.900
So for loops are probably by far the most popular loop and for loops basically are used to loop through

00:11.960 --> 00:14.670
a pre-determined number of times.

00:14.750 --> 00:22.760
So they still share those same initialization condition and then a final expression.

00:22.760 --> 00:28.250
So let's take a look at the four blue and we're going to create a very basic form.

00:28.730 --> 00:30.800
So let's do a four.

00:30.830 --> 00:32.710
So we're going to start with four.

00:33.470 --> 00:37.470
And then as mentioned we do need that initialization.

00:37.520 --> 00:40.750
So we're going to use X again we need to set up a variable.

00:40.860 --> 00:45.110
So I'm declaring X and I'm giving X a starting value.

00:45.230 --> 00:48.590
So you started it as zero.

00:48.600 --> 00:55.230
Next we need to have a condition in order to break out of the loop otherwise the loop will go on and

00:55.260 --> 00:57.110
on and on and on.

00:57.330 --> 00:59.660
So and it also crashed browsers.

00:59.700 --> 01:00.600
That's not good.

01:00.750 --> 01:02.950
And we do need a way out of the loop.

01:03.090 --> 01:04.190
So let's start there.

01:04.230 --> 01:06.180
And let's break out of the loop.

01:06.180 --> 01:08.110
So previously we were breaking out.

01:08.370 --> 01:10.190
So let's break that 10.

01:10.560 --> 01:12.290
And then lastly.

01:12.330 --> 01:16.380
So what is the final thing that we need in this loop.

01:16.380 --> 01:18.420
So we know that we started at zero.

01:18.420 --> 01:27.230
We know that we're looping through while X is less than 10 but we need a way to get to 10 or above 10.

01:27.240 --> 01:34.620
We need basically a way an expression in order to be able to break out of our condition.

01:34.680 --> 01:41.310
So that's where we increment X and notice that that's all done nice and neatly between the rounded brackets

01:41.490 --> 01:42.620
within the for loop.

01:42.810 --> 01:47.340
So we don't have any values FX or any of these floating outside.

01:47.490 --> 01:49.640
It's all nice and neatly packaged.

01:49.740 --> 01:55.560
And this is probably why the four loops are the most popular because it's just this one statement.

01:55.580 --> 01:59.850
And then you know everything that's in here is basically over.

02:00.060 --> 02:04.300
So speaking of output let's set up our output.

02:04.320 --> 02:10.140
So again documents and get element by.

02:10.360 --> 02:12.040
And let's grab output.

02:12.540 --> 02:14.720
So place the value in there.

02:14.760 --> 02:18.100
So this will give us something that we can actually output.

02:18.180 --> 02:27.060
So let's do a Puts and set in her mouth and we're going to equal that sort of concatenate it together

02:27.240 --> 02:29.530
to the existing inner H.T. of mental illness.

02:29.600 --> 02:32.070
There sort of add to it.

02:32.130 --> 02:37.500
And let's just say value of x is.

02:37.710 --> 02:40.700
So we do relatively What we do earlier.

02:40.740 --> 02:45.640
So we're going to list the value of x and then concatenate together a line break.

02:45.840 --> 02:47.220
So it's more readable.

02:47.490 --> 02:56.190
So let's try this out and we see that starting at 0 1 2 3 4 5 6 7 8 9 soulis everything out once it

02:56.190 --> 02:59.460
hits the condition that operates of that condition.

02:59.490 --> 03:00.780
So it's as easy as that.

03:00.810 --> 03:05.840
And we can see that this is also one of the cleanest ways to create loops.

03:05.910 --> 03:13.170
So we have everything right there in front of us we have all of our settings here are expressions that

03:13.230 --> 03:18.630
allow us to initiate and set up that.

03:18.680 --> 03:26.180
So this time I wanted to do the same challenges we did earlier where we only output values that are.

03:26.250 --> 03:28.200
So previously we did even.

03:28.340 --> 03:30.580
So let's do values that are on.

03:30.680 --> 03:36.970
We only want to output the values are odd and change this to loop through to 30 or 31.

03:37.250 --> 03:40.810
And I try to open up your editor trying it.

03:40.880 --> 03:42.910
And I'll show you the solution.

03:43.490 --> 03:45.810
So you have the opportunity to try that.

03:45.860 --> 03:48.140
And I do believe we did say 31.

03:48.200 --> 03:50.290
So let's loop it starting at zero.

03:50.300 --> 03:51.960
Looping at 231.

03:52.130 --> 03:54.520
And we're only going to put the on value.

03:54.650 --> 04:06.490
So this is where we do our conditional statement here where you might check to see if X modulus 2 is.

04:06.510 --> 04:11.990
So we know that if it's even then it's going to be zero.

04:12.150 --> 04:16.310
So we're also we can also check to see if it's not zero.

04:16.620 --> 04:20.150
So if it's not zero then we know that it's not even.

04:20.280 --> 04:22.350
So therefore it must be all right.

04:22.460 --> 04:29.480
So let's try this sort of refreshment and we see that we get all the numbers all the way up and we notice

04:29.480 --> 04:31.490
that it's on including 31.

04:31.860 --> 04:38.340
So the second part of this challenge is this is a surprise second part what I want you to do is include

04:38.430 --> 04:40.050
31 in this list.

04:40.050 --> 04:40.660
So go ahead.

04:40.680 --> 04:45.310
Open up your editor and try that OK.

04:45.310 --> 04:48.130
So the solution for this was really easy.

04:48.190 --> 04:53.600
So I'm going back to where we were looking at conditions.

04:53.650 --> 04:57.040
We know that we can do less than or equal that equal to.

04:57.040 --> 05:02.150
So let's try that now refreshed and there's 31 within our list.

05:04.610 --> 05:08.660
So let's finish off this lesson with another challenge.

05:08.660 --> 05:15.350
So what I want to do is I want to ask the user how many bananas they want to eat and I want to loop

05:15.350 --> 05:24.950
through it and I want to write down how many calories each banana each banana that the person's consuming

05:25.310 --> 05:26.570
is adding.

05:26.720 --> 05:32.900
And then after the loop is finished I want to write out the total calories that the user entered that

05:32.900 --> 05:35.140
the user had consumed.

05:35.150 --> 05:38.160
So this is going to be at the top here.

05:38.180 --> 05:43.430
You're going to have to set up a prompt and then depending on what the value of the prompt is then we're

05:43.430 --> 05:45.740
going to do our loop.

05:45.800 --> 05:54.290
We've got our conditions there for the loop and we need to add and multiply our running calorie count

05:54.410 --> 05:58.540
of how the how many calories the user is consuming.

05:58.880 --> 06:04.700
And also a lot of calories are within every banana.

06:04.710 --> 06:07.350
There's approximately 89 calories.

06:07.370 --> 06:14.810
So that's the number that you can go by in order to create this challenge and open up your editor try

06:14.810 --> 06:17.910
it out and I'll show you the solution coming up.

06:18.500 --> 06:22.440
So I hope you had an opportunity to try this out for yourself.

06:22.790 --> 06:28.510
So what I first want to do I just go to stablish a variable for the banana calories.

06:28.670 --> 06:33.940
So you slowly to create variables for these so that the script is more dynamic.

06:34.100 --> 06:38.280
And if for instance all of a sudden I find that the bananas.

06:38.300 --> 06:45.470
Maybe they were really large bananas and the calories were more than 89 then I can easily go back and

06:45.470 --> 06:46.730
adjust my script.

06:46.940 --> 06:48.810
So let's set one up.

06:48.830 --> 06:50.060
Calories.

06:50.420 --> 06:51.680
Banana.

06:52.640 --> 06:54.210
And actually I did look this up.

06:54.230 --> 06:57.670
So it does say that bananas are 89 calories.

06:57.770 --> 06:59.830
So right I use that number from.

07:00.170 --> 07:05.680
So next we need to have how many.

07:05.690 --> 07:08.180
So just set up a variable we'll call it

07:12.510 --> 07:15.800
we'll call it but and I count bananas.

07:15.830 --> 07:18.240
How about we just call it bananas.

07:18.480 --> 07:26.510
So let's set up that prompt and ask the user how many bananas

07:29.540 --> 07:32.170
do you want to eat.

07:34.710 --> 07:37.050
And finish that off with a question mark.

07:37.110 --> 07:40.090
So we're going to ask the user how many bananas they want to eat.

07:40.290 --> 07:42.970
So this should be N-number numeric value.

07:43.290 --> 07:48.880
And we're going to loop through the number of bananas that the user wants to eat.

07:48.930 --> 07:53.540
So there's no use doing the loop unless we have at least one.

07:53.700 --> 08:01.500
So let's set the value of x at 1 and we're going to continue to loop it through while X is less than

08:01.500 --> 08:01.680
1.

08:01.680 --> 08:09.890
So if they enter in zero then we already know that we need to break out of this loop So next we need

08:09.950 --> 08:13.420
to calculate how many calories is going to be.

08:13.430 --> 08:18.310
So let me get rid of this part here and let's update this.

08:18.350 --> 08:20.660
So we know that we're putting.

08:20.780 --> 08:26.420
And then lastly we also need to have an output of the total calories.

08:26.450 --> 08:30.240
Let's do another one here so let's set up another variable.

08:30.270 --> 08:33.880
So this will be a placeholder we'll just call it total for now.

08:34.160 --> 08:36.810
And right now we're just starting at zero.

08:38.780 --> 08:45.080
And now let's add in our total here so we know that every time we're looping through we're going to

08:45.080 --> 08:54.500
do total and we're going to add to total whatever the value of calories banana is going to be.

08:54.660 --> 08:55.680
That's you.

08:55.910 --> 08:57.300
So again this is dynamic.

08:57.320 --> 09:03.490
So if we change the number of calories per Pineta our totals will change as well.

09:03.500 --> 09:08.010
So let's list some type of message.

09:08.020 --> 09:11.020
So you ate one and then the

09:14.230 --> 09:16.340
another.

09:16.660 --> 09:19.990
And let's also add this dynamically.

09:20.130 --> 09:24.390
So this is some message to the user it can be anything that you want really.

09:24.410 --> 09:29.540
You ate one banana and other calories.

09:29.950 --> 09:33.460
Your total is now.

09:34.510 --> 09:42.250
And this is where it can just add whatever the value of total is.

09:42.260 --> 09:42.800
So there we go.

09:42.800 --> 09:52.360
So we've got that output and your total calorie count is.

09:52.390 --> 09:56.870
And then this we just need to enter in the total there so we don't actually have to have the line break

09:56.900 --> 10:02.830
either because this is our last part of whatever we're putting into our aged hymnal.

10:03.050 --> 10:04.070
So let's give it a try.

10:04.130 --> 10:06.230
So let's sort of refresh the page.

10:06.230 --> 10:09.600
How many bananas do you want to eat so I can eat bananas.

10:09.700 --> 10:13.380
So you ate one banana and other 89 calories.

10:13.430 --> 10:16.790
So let's see that we do get to 10.

10:16.790 --> 10:19.250
So we've got a total calorie of 90.

10:19.280 --> 10:20.260
So that worked.

10:20.510 --> 10:22.030
So this is kind of ugly.

10:22.100 --> 10:28.630
So what we also need to do is we need to change the value of X there.

10:28.810 --> 10:31.700
So let's say let's update this now.

10:32.350 --> 10:34.890
So let's add x.

10:35.300 --> 10:36.720
So it's a dynamic value.

10:36.740 --> 10:38.030
So it's going to be changing.

10:41.210 --> 10:50.480
And also we also want to see a different message for the first one because when we see that our first

10:50.480 --> 10:56.300
one you ate one banana another 89 calories your total is now 89.

10:56.390 --> 10:57.870
Well they really eat another one.

10:58.100 --> 11:01.530
And so the 89 is right.

11:01.580 --> 11:05.500
But when you type something different within that message.

11:05.540 --> 11:12.470
So now what do we need to do as well is to add a condition in there and let's change some of this wording.

11:12.750 --> 11:18.750
We know that the first time through if x is equal to one then they've only ate one banana.

11:18.830 --> 11:24.320
If x is equal to anything larger than one then it should be bananas.

11:24.470 --> 11:30.180
And another Indian calories added to your total or something like that.

11:30.220 --> 11:35.210
So try to open that up in your editor and try making these adjustments.

11:35.230 --> 11:37.380
I'll show you the solution coming up.

11:38.650 --> 11:47.470
So the solution really is that we can't use an estate that's to check to see what the value of x is.

11:47.620 --> 11:53.790
And we can also go back to our default which was the Treasury statement which we were looking at before.

11:54.130 --> 11:57.160
So let's use that one.

11:57.260 --> 11:59.330
And I set a variable.

11:59.350 --> 12:02.980
Am I going to give it as going give a name holder.

12:03.100 --> 12:06.330
So this was just a variable that we've created over there.

12:06.380 --> 12:09.480
And now I can reset the value holder.

12:09.760 --> 12:17.020
So let's take hold her and this is actually going to be what I'm using for the output So if

12:19.660 --> 12:22.240
x is equal to one.

12:22.540 --> 12:26.950
So if x is equal to one then this is a terror unary operator.

12:26.990 --> 12:29.860
So it does set the value of

12:32.450 --> 12:35.010
does.

12:35.250 --> 12:43.680
And so it'll say you ate actually should be greater than 1.

12:43.690 --> 12:45.450
So let's let's update this.

12:45.460 --> 12:47.290
So I think greater than 1.

12:47.320 --> 12:50.770
So if this is true then it's going to say banana is

12:56.860 --> 12:58.660
another whatever.

12:58.800 --> 13:05.010
Calories added to your total

13:07.840 --> 13:12.470
now and then that's the value.

13:12.910 --> 13:17.960
So let's also do something for if it is really equal to 1.

13:17.970 --> 13:18.990
So first time through.

13:19.000 --> 13:20.270
It's going to be one.

13:20.470 --> 13:23.940
So say you ate one banana

13:27.350 --> 13:29.620
and the one at that.

13:29.750 --> 13:31.650
So now what stakeholder.

13:31.760 --> 13:37.940
And we're going to drop him in instead of having this very odd add in there.

13:37.940 --> 13:42.750
So now and we should also add items and spacing.

13:42.840 --> 13:48.740
So let's see how this works or if the wording is a little bit better so let's do it and we can see you

13:48.740 --> 13:49.760
ate one banana.

13:49.800 --> 13:56.130
Eighty nine calories added to your total now at 89 you eat two bananas and notice as there are eighty

13:56.140 --> 13:58.320
nine calories out into your total.

13:58.380 --> 14:01.580
That's kind of long but we'll just leave it at that.

14:01.610 --> 14:10.080
And we see that everything is working and we've got better grammar within our output.

14:10.100 --> 14:17.030
So in the next lesson we're going to look at nested loops and what we could do with nested loops.

14:17.060 --> 14:17.960
So it's coming up.
