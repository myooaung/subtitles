WEBVTT

00:01.190 --> 00:04.620
This lesson we're going to be looking at deconstruction.

00:04.630 --> 00:11.950
So let's create a javascript object and we'll give it some values within here so we'll have our first

00:11.950 --> 00:16.770
name and we'll set that first theme to

00:20.370 --> 00:24.840
and then last name and we'll set last name.

00:25.420 --> 00:32.050
So we've got a first name and a last name for person if we console log a person then we know what type

00:32.050 --> 00:35.850
of results that we're expecting here is that we're expecting that output.

00:35.850 --> 00:38.850
So this is just a typical javascript object.

00:38.860 --> 00:40.450
Let's go and refresh it.

00:40.450 --> 00:43.650
So you've got first name and last name there.

00:44.080 --> 00:46.980
So let's go ahead and deconstruct this.

00:46.990 --> 00:51.460
So in order to deconstruct it we're actually going to do the opposite of what we have here so instead

00:51.460 --> 00:56.750
of on the left side and then the right side we've got the values we're going to flip it around.

00:56.920 --> 00:58.240
So let's set that up.

00:58.300 --> 01:02.120
Let And first name.

01:02.500 --> 01:04.900
Actually this should be curly bracket.

01:05.140 --> 01:07.960
So the same format as the objects we've got left.

01:07.990 --> 01:21.780
First Name Last Name and we're going to equal that to person and then we can console log out first name.

01:21.890 --> 01:28.290
So we're actually setting these variables and will console log last name as well.

01:28.400 --> 01:30.390
So let's go out and refresh this.

01:30.500 --> 01:36.710
And we see that we're able to deconstruct it so we're able to now refer to them as a first name and

01:36.710 --> 01:42.110
last name and we're deconstructing those values basically pulling them out of person.

01:42.200 --> 01:46.610
So we're equalling them first name and last name to be equal to a person.

01:46.640 --> 01:54.920
So it finds the matching key values there and it assigns those to that brain new variables that we've

01:54.920 --> 01:55.710
just created.

01:57.880 --> 02:01.400
So this gets even better when we deconstruct a race.

02:01.430 --> 02:08.680
So let's create our array and we're going to play some values within the array.

02:09.170 --> 02:17.080
So we're going to add in some string values there and J Yes and J 6.

02:17.170 --> 02:20.540
So we're going to have a number of variables.

02:21.100 --> 02:24.470
So we've got some some values there are contained within the array.

02:24.490 --> 02:26.860
So now it's de-construct the array.

02:26.860 --> 02:30.290
So similar to what we did over here when we deconstructed the object.

02:30.310 --> 02:35.880
And let's just first of all let's look at what are console log out that array value.

02:35.890 --> 02:40.290
So you can take a closer look at it go into our console and refresh it.

02:40.310 --> 02:44.800
It's just like we've got the object there we can deconstruct the array as well.

02:44.800 --> 02:46.370
So let's set that up now.

02:46.570 --> 02:52.170
So let's do let And we're going to set the array values.

02:52.500 --> 02:57.320
So maybe we can just use a b c and d.

02:58.800 --> 03:00.060
And we're also going to do.

03:00.420 --> 03:04.330
And notice that we've only got four but we're setting five here.

03:04.350 --> 03:10.160
So what I want to do is I want to have a default one for this one and we saw defaults earlier.

03:10.170 --> 03:15.820
So let's let's do a default here and this one is just Java.

03:16.200 --> 03:17.790
It's going to be our default.

03:18.060 --> 03:22.080
And then all we have to do is equal it to the array.

03:24.160 --> 03:30.510
And now if we console log these values we're able to see them within the console.

03:30.510 --> 03:36.060
So let's refresh that and we can see we can get javascript and the same thing is going to be for a b

03:36.060 --> 03:38.230
c and d and e.

03:38.340 --> 03:40.270
So there's quite a bit Turei here.

03:40.320 --> 03:48.150
So let me just write out those so we can see them get represented within the console and he and lusus

03:48.210 --> 03:50.080
clean that up a bit.

03:50.100 --> 03:55.770
So go back refreshed and we can see that we've been able to deconstruct the array essentially pulling

03:55.770 --> 04:01.560
those values into a usable variable formats that we can make use of within our code.

04:01.800 --> 04:08.060
So you can deconstruct objects and arrays with ESX.

04:08.070 --> 04:10.550
So what I want you to do now is try it for yourself.

04:10.680 --> 04:14.710
First of all create an object and then do the deconstruction of it.

04:14.720 --> 04:19.440
I would put each one of the values that are contained within there and then also do the same thing for

04:19.440 --> 04:22.140
an array so create an array de-construct it.

04:22.140 --> 04:29.160
So it's a deconstruction part there and then output those newly freshly minted values.

04:29.580 --> 04:31.320
So go ahead and try it for yourself.
