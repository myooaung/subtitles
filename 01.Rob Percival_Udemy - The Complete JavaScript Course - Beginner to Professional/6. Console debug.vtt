WEBVTT

00:01.660 --> 00:07.990
Welcome back in this lesson we're going to be looking at console log and how we can use console log

00:07.990 --> 00:13.480
in order to debug applications and also find out more information about what's happening with their

00:13.480 --> 00:16.150
script as it's being executed.

00:16.150 --> 00:23.080
So one of the reasons that I like to use Chrome is because it's got the ability to access dev tools.

00:23.200 --> 00:26.790
Now dev tools comes available in every version of chrome.

00:26.920 --> 00:31.450
So if you have chrome installed on your computer you can access the tools.

00:31.510 --> 00:34.440
If you're on a Mac you can do command opt.

00:34.630 --> 00:37.590
If you're on a Windows machine it's control shift.

00:37.960 --> 00:44.500
And both of those when you've got your browser open you can open up dev tools as well as you can go

00:44.500 --> 00:53.380
into the top right hand browser menu here and you can select Tools and dev tools and you can also open

00:53.380 --> 00:54.330
it that way.

00:54.430 --> 01:00.520
If you are on a Windows machine you can go and right click anywhere on the page click inspect and you

01:00.520 --> 01:02.600
can open them up that way as well.

01:02.680 --> 01:08.710
So a number of different ways to open up dev tools and this is why I really like to use Chrome because

01:08.770 --> 01:14.320
dev tools is a really super useful tool and it's going to give us the ability to send those console

01:14.320 --> 01:20.740
messages and be able to read them pick them up and console messages the way they work is they give us

01:20.740 --> 01:27.250
the ability to pass some information from our script into the console and the console is not actually

01:27.250 --> 01:30.470
meant to be seen by the average web user.

01:30.490 --> 01:34.050
It's meant for developers and for debugging purposes.

01:34.210 --> 01:39.940
So if you've opened up your dev tools you can see that there's a number of tabs here at the top and

01:39.940 --> 01:43.370
just go over to the second tab here which is called console.

01:43.420 --> 01:49.490
You do have some additional options for your dev tools where you can dock it to the left.

01:49.510 --> 01:52.340
You can also dock it to the right hand side.

01:52.390 --> 01:59.180
You can talk it to the bottom and in my case what I'm doing is I'm just putting it in a separate window.

01:59.380 --> 02:06.280
So now that we've got dev tools open let's open up our editor and we're going to type some javascript

02:06.280 --> 02:12.130
code and the javascript that we're going to be typing is going to be just simple output messages that

02:12.130 --> 02:15.720
we're going to be able to pick up within the console itself.

02:16.670 --> 02:22.420
The other console is super useful when you're debugging your applications or if you just want to find

02:22.420 --> 02:26.830
out some more information about what's happening within your script.

02:26.840 --> 02:32.450
So in this case we're going to just send ourselves a simple message of hello world and this is going

02:32.450 --> 02:37.520
to be executed within our script and we're going to see it output within the console.

02:37.520 --> 02:41.550
So when I refreshed the console I can see that I've got.

02:41.570 --> 02:42.270
Hello world.

02:42.280 --> 02:48.320
Being output and I've got the line the where the code is being executed outside of the file and the

02:48.320 --> 02:51.790
file path of where that code is being executed.

02:51.890 --> 02:59.720
And this is again where it becomes really really really useful because you know at what point this variable

02:59.720 --> 03:00.680
is being output.

03:00.680 --> 03:07.140
So if you wanted to log something as the code is being executed this is the place to do it.

03:07.160 --> 03:08.990
And this is the way to do it.

03:08.990 --> 03:15.020
You get Also another really nice thing about the cons. is once you've got this open your dev tools you

03:15.020 --> 03:22.840
can actually type in different javascript statements and they actually get executed within your console.

03:22.880 --> 03:29.000
So I can type in something like console log and this is going to be the same thing as typing it here

03:29.000 --> 03:30.170
with the script.

03:30.190 --> 03:33.460
It's up to it's just getting executed within this instance.

03:33.500 --> 03:34.880
The open browser.

03:34.880 --> 03:40.490
If I refreshed this console log here is going to be gone whereas my scripts is always going to execute

03:40.530 --> 03:40.950
it.

03:41.090 --> 03:43.080
So that's what the big difference here is.

03:43.190 --> 03:48.880
But this gives us really easy access to write javascript statements and have them output directly within

03:48.890 --> 03:52.160
our console and we can see what the output is going to be.

03:52.160 --> 03:54.210
So we know that we type console log.

03:54.350 --> 03:56.120
Our output is going to be hello.

03:56.210 --> 04:00.580
And that's what's going to get displayed within the console tab of our browser.

04:00.740 --> 04:03.820
So what I want you to do now is pause the video.

04:04.010 --> 04:05.510
Try it for yourself.

04:05.570 --> 04:14.390
Go ahead and open up chrome and then browse over to the console tab and type in console log and take

04:14.390 --> 04:18.080
yourself a nice interesting message and see what happens.

04:18.140 --> 04:23.690
And then once you complete that then you can go ahead and open up your editor and type in that same

04:23.690 --> 04:24.990
code or something different.

04:25.010 --> 04:29.960
Maybe another interesting message to yourself within your editor.

04:29.960 --> 04:37.460
Save the page and open up your dev tools and see the message being displayed within the console tab.

04:37.610 --> 04:38.440
Try that out.

04:38.450 --> 04:39.560
Pause the video.

04:39.560 --> 04:40.780
Try it for yourself.

04:40.850 --> 04:46.850
Get comfortable with using the console because we are going to be using it quite a bit within this course

04:47.150 --> 04:53.930
and it does become really really useful as you are debugging your code and you're working with javascript

04:54.900 --> 04:57.090
so I hope you got a chance to try that out.

04:57.240 --> 05:02.130
And I really do want you to become really comfortable with using the console because we are going to

05:02.130 --> 05:04.560
be using it throughout this course.

05:04.560 --> 05:10.740
So let's try something else so we saw that we can type in a stray message within the console and we

05:10.740 --> 05:11.550
can see it.

05:11.610 --> 05:15.440
It's shown here as the strings being output.

05:15.510 --> 05:22.440
We can also do some math here so if we want to do for Plus-X we can see that when we refresh the page

05:22.650 --> 05:25.210
we get the value of 10 being output.

05:25.230 --> 05:31.440
So what's happening here is that when javascript comes to this statement and knows that we're outputting

05:31.440 --> 05:37.680
some content within the console and it encounters the two numbers and it says OK well we've got four

05:37.680 --> 05:38.790
plus six.

05:38.850 --> 05:47.820
So it renders that arithmetic and sends it in the console and we can see the computed value of four

05:47.910 --> 05:51.060
Plus-X being shown within our window.

05:51.480 --> 05:54.890
So now let's have some more fun with Javascript.

05:55.080 --> 05:58.400
So we saw that we can output console log.

05:58.470 --> 06:03.330
So there's a few other things that we can output as well to make it a little bit more interesting and

06:03.330 --> 06:04.700
a little bit more colorful.

06:04.950 --> 06:12.630
So one of the ways that we can use console log is actually not use console log at all and we can output

06:12.630 --> 06:18.850
console errors so basically this simulates opening an error message into our console.

06:18.870 --> 06:25.010
So for whatever reason if you want to output error or the word error at a certain point as our script

06:25.010 --> 06:28.510
is being executed out we can see that that gets rendered.

06:28.540 --> 06:29.950
So line 16.

06:30.060 --> 06:37.380
We're putting an error message within the console and this is what the contents of that message are.

06:37.740 --> 06:44.700
So we can do some other things as well within a console so we can do a warning message and basically

06:44.760 --> 06:46.820
similar to the error message.

06:46.830 --> 06:57.510
Basically it sends a warning message into the console and so this one is not as strong as the error

06:57.550 --> 07:02.340
but it also is great to get people's attention or developers attention.

07:02.340 --> 07:08.910
So if there is something in particular within your code that you want to be able to maybe come back

07:08.910 --> 07:12.890
to or if there's a bug there that you want someone to take a closer look at.

07:12.900 --> 07:20.130
This is a great way to really isolate what's happening within that code and pass a message within the

07:20.130 --> 07:21.360
console.

07:21.360 --> 07:27.380
So another thing that we can do with in our console is we can make it even more colorful.

07:27.400 --> 07:33.750
So I did say that console log can maybe get a little bit boring if we're just opening this black text

07:33.750 --> 07:35.800
and the numbers are blue.

07:35.850 --> 07:40.370
We can also enhance this by adding a little bit of styling.

07:40.490 --> 07:43.830
So this is going to work in the same way that CSSA does.

07:43.830 --> 07:54.160
So do the percentage sign and we do see and basically what that is doing is that's telling the statement

07:54.190 --> 08:01.210
as it's being executed and that we've got some CSSA that's attached to it and the format for doing this

08:01.210 --> 08:06.190
is going to be exactly the same as you would expect when you're typing CSSA.

08:06.190 --> 08:12.970
So if we want it hello world to be green we can change hello world to be green just by doing that percentage

08:12.970 --> 08:16.670
sign see and then whatever CSSA want to add in there.

08:16.690 --> 08:18.350
We could do there as well.

08:18.370 --> 08:23.370
So let's try something else as well and we can really have quite a bit of fun with this.

08:23.500 --> 08:29.660
And again this is just really useful stuff as you're outputting information within the console.

08:29.740 --> 08:35.200
So for whatever reason if you want to have a little bit of color within your output you can really easily

08:35.200 --> 08:40.280
do that by we can do maybe color yellow and let's do a background.

08:40.360 --> 08:46.730
So instead of a background of white Let's do black background.

08:47.290 --> 08:52.930
So now we've got hello world is going to be output in yellow with a black background and we can see

08:52.930 --> 08:58.950
that it gets rendered within the console within that format that we've indicated.

09:00.710 --> 09:06.710
So I do encourage you to try it out for yourself as it is really important to become familiar with working

09:06.710 --> 09:13.160
within the console and all of these messages that were passing back and forth are going to become more

09:13.160 --> 09:17.840
apparent and we're going to see the use of them as we progress the course.

09:17.930 --> 09:24.570
It's really important to understand that debugging is one of the things that you need to do as a developer

09:24.610 --> 09:31.610
on a regular basis and having the tools there on the ready in order to do that debugging is an essential

09:31.610 --> 09:35.920
part of developing applications in the next lesson.

09:36.050 --> 09:41.330
We're going to be taking this one step further and we're going to be looking at comments and comments

09:41.330 --> 09:47.830
as another way that we can have some additional information within our coding in order to utilize it

09:48.200 --> 09:50.310
as we developed our coding.

09:50.390 --> 09:51.330
So that's coming up.
