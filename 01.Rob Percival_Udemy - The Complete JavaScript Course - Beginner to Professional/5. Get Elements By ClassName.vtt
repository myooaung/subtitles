

00:00.910 --> 00:06.610
Welcome back and in this lesson we're going to look at how we can get elements by class name so we know

00:06.610 --> 00:13.410
that when we ply classes to an element attribute we can apply.

00:13.510 --> 00:15.350
So let's call this one highlight

00:18.640 --> 00:24.460
so we know that we can apply Klaas's to any element and they don't actually all have to have the same

00:24.460 --> 00:25.360
tag names.

00:25.360 --> 00:30.060
So I can have a number of different elements and I can simply add a class to it.

00:30.160 --> 00:35.810
And that allows me to actually distinguish and grab that information from our Web page.

00:35.950 --> 00:39.690
So let me just simply go out here and I'm going to.

00:40.720 --> 00:47.200
So any ones that are going to highlight class are going to have a background color as well so that we

00:47.200 --> 00:53.220
can actually be able to distinguish them from the rest of the HTML elements.

00:53.230 --> 00:59.590
So let's go back and refresh the page and then we can see now that the ones that are in yellow are the

00:59.590 --> 01:05.230
ones that have the class highlight so we can loop through those as well.

01:05.230 --> 01:14.140
So just last week last time we grabbed the elements by class name by tag name let's do so we'll call

01:14.140 --> 01:16.430
it our highlight list.

01:16.510 --> 01:21.370
So instead of get elements by tag name all we need to do is update this.

01:21.460 --> 01:27.100
And by class name and then we need to specify the class.

01:27.140 --> 01:31.840
So the class was highlight so just was we did get element by ID.

01:31.910 --> 01:37.400
We don't need any other additional We don't need to include the Daut we don't need to include the hash

01:37.400 --> 01:38.920
forget element by ID.

01:38.960 --> 01:41.570
We're able to simply select that element.

01:41.720 --> 01:48.750
So now we've got a list and just like before going to get rid of this one here.

01:48.800 --> 01:56.570
We know that we've got this highlight list and we can loop through all of those values and get rid of

01:56.570 --> 02:00.650
some of this excess content here because we don't really need to make use of it.

02:00.710 --> 02:08.600
So we know that and also need to update this one to actually grab that element by id output.

02:08.600 --> 02:10.380
So let's update that as well.

02:10.400 --> 02:20.070
So documents get element by id and let's grab that output value and then let's set that age to malware.

02:20.120 --> 02:26.780
So this will still work but we're giving ourselves the ability to update it with Highlight list.

02:26.780 --> 02:34.520
So let's let's grab that and update list to now be highlight list and I need to take care of those spaces.

02:34.520 --> 02:37.820
We don't want to have any spaces within our script.

02:37.820 --> 02:41.440
So let's go back and refresh it and see if that works.

02:41.450 --> 02:43.260
So we are able to state it.

02:43.280 --> 02:46.850
So from highlight list we've got Test 1 and test 2.

02:47.000 --> 02:50.530
And obviously there was no content available within those ones.

02:50.540 --> 02:56.300
So now if I try to list that out I'm actually not able to get those values because these are a different

02:56.300 --> 02:57.380
type of element.

02:57.380 --> 03:00.420
They don't have any inner text attached to them.

03:00.560 --> 03:06.260
And if I inspect them I can see that they're not actually going to contain because these ones are input

03:06.260 --> 03:06.950
fields.

03:07.010 --> 03:11.870
So this is one of the downsides is because one of the things is the elements are not all going to be

03:11.870 --> 03:15.520
the same so they're not going to have all the same characteristics.

03:15.530 --> 03:17.670
So let's go take a look at this.

03:17.690 --> 03:19.670
So we've got our highlight list.

03:19.880 --> 03:23.490
And let's go take a look at what we're returning within the console.

03:23.510 --> 03:26.560
So we see we've got access to all of this information.

03:26.720 --> 03:39.560
So let's go into highlight less and let's go into that input where we've got you r l u r l and we can

03:39.560 --> 03:43.830
see that we're able to grab this and we've got a number of attributes here.

03:44.030 --> 03:48.500
So we don't have thought we can grab out the value if we want to.

03:48.500 --> 03:58.160
So if we want to pick up the value So let's look stood out within the console console and dry so that

03:58.160 --> 04:04.130
we can get more information about what's contained within the highlight list and we specifically want

04:04.130 --> 04:06.090
to look you Earl.

04:06.920 --> 04:08.400
So let's open that up.

04:08.570 --> 04:15.530
And remember before we had looked at type so we can do the same thing for here where we can scroll all

04:15.530 --> 04:19.820
the way down and we can look at the type of element that it is.

04:19.820 --> 04:27.680
So we know that this is a u r l and basically we know that for you or else we can have a different condition.

04:27.680 --> 04:35.560
So instead of actually looking for the inner text we can look for one that has inner value.

04:35.600 --> 04:42.110
So what I want you to do now is to pause the video add in some content within your input field within

04:42.110 --> 04:49.130
your text area and instead of just looping out the inner h t l that we know is contained within those

04:49.460 --> 04:50.870
two divs.

04:50.900 --> 04:57.290
I want you to also when you're looping out the content contained within these elements by adding a condition

04:57.290 --> 05:03.860
and here to be able to pick up the values of those two elements and add them in into the output of the

05:03.870 --> 05:04.710
aged hymnal.

05:04.910 --> 05:10.080
So go ahead puzzle video and try that out and show you the solution coming up.

05:10.250 --> 05:12.750
So if you on an opportunity to try that out.

05:12.830 --> 05:16.300
And in this case we know that we can apply a condition.

05:16.520 --> 05:18.720
So just does what we did before.

05:18.720 --> 05:21.580
There's a number of options that we have at hand.

05:21.680 --> 05:26.160
So we know that with inner text.

05:26.680 --> 05:33.140
So if I do something like this then if it's actually looking for the inner text let me show you what

05:33.140 --> 05:34.110
happens now.

05:34.250 --> 05:39.220
And if I refresh it and if I do the Click Here we're able to grab that inner text.

05:39.230 --> 05:46.400
So basically if this condition is true if there's a value that's being returned there so then that basically

05:46.400 --> 05:47.460
means that it's true.

05:47.600 --> 05:51.110
And we know that we can utilize that with an output.

05:51.110 --> 05:53.250
So all we have to do is do it.

05:53.260 --> 05:54.030
Else if.

05:54.080 --> 06:03.290
And we need we can apply a different condition where we can look to see if this one has a value and

06:03.350 --> 06:04.970
if it does have a value.

06:05.030 --> 06:10.520
So instead of inner text all we have to do is update value here.

06:10.520 --> 06:13.110
And as I said there was a number of ways to do this.

06:13.130 --> 06:14.980
We could look at the type as well.

06:15.050 --> 06:17.740
So we could have different conditions looking at the type.

06:17.810 --> 06:24.800
But basically this one will work as well and we can see that this one right now it does have an inner

06:24.800 --> 06:25.460
value

06:28.750 --> 06:36.170
but we don't have we're not actually picking up the value here that's contained within this input.

06:36.220 --> 06:42.970
We're getting the value from the textarea so that one is working but we're not picking up the value

06:42.970 --> 06:43.540
here.

06:45.170 --> 06:49.690
So let's go back to our console and let's see actually what's happening here.

06:49.690 --> 06:57.130
So let's list it highlight list and we know that this input is its input.

06:57.170 --> 06:58.040
You are el

07:01.510 --> 07:05.950
So I've got an idea there for you or else let's actually see what happens.

07:06.420 --> 07:10.170
So you are l and we don't have any value associated with it.

07:10.170 --> 07:14.900
So if we do this value we actually don't see anything in there.

07:14.940 --> 07:16.670
And if I add in a value in there.

07:16.670 --> 07:18.170
Now let's try it again.

07:18.180 --> 07:19.720
We are picking up the value.

07:19.920 --> 07:26.220
So what's what's gone wrong here let's see what's going on here as well so we're going to grab it within

07:26.220 --> 07:27.470
that other format.

07:27.570 --> 07:30.670
So we know that this is actually going to be the first one.

07:30.840 --> 07:32.520
So it's 0 object.

07:32.670 --> 07:38.460
And what's actually happened is that I haven't actually include it so I need to update my value for

07:38.460 --> 07:39.030
x.

07:39.060 --> 07:41.040
So that was a little bit of debugging.

07:41.040 --> 07:44.290
And now when I go back and refresh it.

07:44.400 --> 07:47.970
So we were picking up the value so everything was working right.

07:48.020 --> 07:51.750
That only thing was that we weren't including it within the loop.

07:51.960 --> 07:57.990
So that was just a little bit of debugging on the code and you have to be careful when you're copying

07:57.990 --> 08:04.920
and reusing code from before that you do make the proper changes in order to accommodate your new functionality.

08:07.200 --> 08:12.310
So there were a number of ways to solve this and to pick up the elements by class.

08:12.390 --> 08:16.180
We could have also had the condition to check to see the type as well.

08:16.320 --> 08:18.440
And this way worked.

08:18.480 --> 08:22.270
So because we've got the four elements we're able to test it out.

08:22.470 --> 08:23.070
So always.

08:23.060 --> 08:29.160
Also make sure that you test your results and that they are coming back as expected before you launch

08:29.160 --> 08:31.030
it live within your web applications.
