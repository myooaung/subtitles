WEBVTT

00:00.570 --> 00:04.330
Welcome back in this lesson where you look at nested loops.

00:04.470 --> 00:10.200
So basically a nested loop is a loop inside of a loop and there's a number of reasons why you might

00:10.200 --> 00:11.430
want to create one of these.

00:11.580 --> 00:15.150
And one of them might be that you might want to build a table.

00:15.180 --> 00:24.200
So let's start by setting up our variable doing our documents and get element by ID.

00:24.270 --> 00:25.480
So grab that output.

00:25.490 --> 00:31.320
And this is where we're actually going to place our table.

00:31.320 --> 00:38.690
So the first thing that we need to do is we need to create a whole so just call it H2 Mel.

00:38.820 --> 00:41.680
And this is going to be our starting point for our table.

00:41.700 --> 00:43.440
So we're just going to create a table.

00:44.040 --> 00:51.570
So next thing that we need to do is loop through building out the rows and then within the rows then

00:51.600 --> 00:58.750
we build the columns within those within those rows.

00:58.760 --> 01:03.750
So let's let's build on that and we're going to start with a for loop.

01:03.830 --> 01:09.920
So it's going to start out and we can start creating a variable called row and we're going to start

01:09.920 --> 01:19.210
out at row 0 and we're going to loop that while roll is made let's just do 10 rows.

01:19.610 --> 01:24.620
So we could not we can have as much flexibility as we want when we're building on our table.

01:24.630 --> 01:27.460
That's just what we get dynamically like this.

01:27.470 --> 01:36.110
So now we've got the roll value and we know with each to M-L So we need to incremented and concatenate

01:36.190 --> 01:38.520
it with TR.

01:38.600 --> 01:44.360
So that's going to open up our roll and the next thing that we need within our reach to Mel is we need

01:44.360 --> 01:46.770
to have some cells some table cells.

01:46.910 --> 01:57.650
So this one let's start out and we do see you Al and we'll start at zero and see all while it's less

01:57.650 --> 02:03.560
than 2 and we'll increment by one.

02:04.760 --> 02:11.210
And this is also very important when you're testing these loops to make sure that you declare the values

02:11.450 --> 02:17.510
because otherwise once we finish the first iteration and we try to use this when again the value of

02:17.510 --> 02:19.450
c l will be different.

02:19.490 --> 02:26.010
So keep that in mind when you are setting up the loops that you want to make sure that you're not that

02:26.010 --> 02:27.630
you're not starting out with it.

02:27.640 --> 02:31.380
Now you see you well because otherwise they'll just mess things up.

02:31.380 --> 02:35.940
So next let's in the.

02:36.190 --> 02:38.580
And so this is just her age to now.

02:38.600 --> 02:45.690
So it's Tuesday and we'll put it to some some value in there.

02:45.730 --> 02:46.280
So.

02:46.330 --> 02:53.830
Equals an's put in the value of c out and we're going to adjust that afterwards.

02:54.180 --> 02:59.950
So close off that cell and that's all we need for that part.

03:00.120 --> 03:10.580
And then next we're going to add to that H2 milk and add closing of the royal.

03:10.850 --> 03:16.610
And then finally and lastly let's let's add to the H2.

03:16.850 --> 03:18.930
And let's close off the table

03:23.980 --> 03:33.120
and to put in our two miles to make sure it's interlaced himself and we're just going to have that each

03:33.120 --> 03:34.450
time a variable.

03:34.450 --> 03:36.120
So let's see what happens.

03:36.630 --> 03:43.820
So he built it out and of course we should have some type of borders for ourselves.

03:43.820 --> 03:47.260
So let's let's have some styling here.

03:47.800 --> 03:57.140
So just do a quick order for two days and we'll do border one picks all that.

03:57.140 --> 04:01.080
BLOCK So let's refresh that.

04:01.080 --> 04:01.730
So there we go.

04:01.740 --> 04:10.060
So we will tell you at our table and we can see that within our age to you've got nicely built to call

04:10.060 --> 04:14.580
up table all ready to go within each team.

04:14.910 --> 04:18.110
So now what I want you to do.

04:18.340 --> 04:20.780
So this challenge is going to involve some math.

04:20.920 --> 04:25.230
So I want to do is I want to have the cell one too.

04:25.330 --> 04:31.110
And actually let's update this to have five columns so we're going to make a really big table here.

04:31.330 --> 04:39.530
So five columns starting up one and then finishing off Vought at I believe probably 50.

04:39.880 --> 04:47.950
So starting out at 1 2 so going across this way the next rule will incremented by five or whatever number

04:48.010 --> 04:52.720
of columns we're using an increment increment increment again.

04:53.020 --> 04:54.730
So pause the video.

04:54.730 --> 05:00.770
Open up your editor Bill at this table and then update the contents of the cells.

05:00.790 --> 05:03.300
And also we have a solution coming up.

05:03.790 --> 05:06.300
So we have the opportunity to try that out.

05:06.310 --> 05:13.630
Did you open it up and create five columns and you can see that now how easy it is when you're looping

05:13.630 --> 05:18.070
through these nested rows if all of a sudden I want five columns.

05:18.070 --> 05:20.370
It's as easy as that.

05:20.380 --> 05:27.490
So the value that we're putting in with in the cell we've got to do some math here.

05:27.570 --> 05:35.750
So if we want to increment by one because we're starting at 0 and we're looping till we get to 5.

05:35.790 --> 05:37.460
It was a number of options here.

05:37.500 --> 05:41.570
We could update this and update this one as well.

05:41.580 --> 05:49.410
So for myself I generally like to start at zero and loop till it's under 5 so that I can really easily

05:49.410 --> 05:52.570
see that number five there if I want to make an adjustment to it.

05:52.680 --> 05:59.820
And it's a lot easier if I want to do something dynamic where I ask a number of rows number of columns

06:00.030 --> 06:02.210
and I can just use variables in there.

06:02.340 --> 06:07.990
So it makes it more dynamic and that's usually why I want to keep it within this type of format.

06:08.160 --> 06:14.110
And I would rather add the one to the values ceil over here and just in that part.

06:14.130 --> 06:15.730
So let's try that.

06:15.960 --> 06:23.220
So now we've got one two three four five but this one's not right so we need to do something else here.

06:23.520 --> 06:27.180
So we need to actually do some multiplication.

06:27.400 --> 06:33.170
So if we multiply this by the value of roll let's see what happens.

06:33.510 --> 06:37.710
So we refresh it and we've got one two three four five.

06:37.790 --> 06:40.250
We've got two four six eight ten.

06:40.410 --> 06:42.550
So that's not really great.

06:42.900 --> 06:46.890
All this is incrementing this way.

06:46.890 --> 06:50.700
It's not actually working the way that we need to.

06:50.730 --> 06:58.470
So to work this out the trick that I usually like to do is I'll just like to put the value for all so

06:58.470 --> 07:02.000
that I can get a clear sense of what we're looking at here.

07:02.020 --> 07:06.910
So multiplying by zero and we know multiply by zero we end up with zero.

07:07.050 --> 07:08.010
So we don't want to do that.

07:08.010 --> 07:10.850
So we want to add 1 to the role as well.

07:10.850 --> 07:14.530
So the same thing we do with the column we showed it to the roll.

07:14.820 --> 07:16.230
So let's see what happens now.

07:16.470 --> 07:23.420
So now we've got roll one all the way to 10 and we see that we've got all of those cells there.

07:23.460 --> 07:25.960
So that looks pretty good.

07:26.160 --> 07:29.940
And we know that we should multiply.

07:30.180 --> 07:41.080
So to get the value of six here if we multiply the roll by the number of columns that we have then where

07:41.200 --> 07:49.740
it should start out at 6 but the other thing to keep in mind if we do two times five we're going to

07:49.740 --> 07:52.280
be at 10 which will be 11.

07:52.320 --> 07:54.030
And that's the next one over here.

07:54.210 --> 08:03.110
So we don't actually need that plus one and all you need to do is multiply it by five.

08:03.130 --> 08:03.930
Let's try that.

08:03.960 --> 08:12.330
Now so now we've got one two three four five and then we've got one and if we do one plus five then

08:12.350 --> 08:13.660
we've got the right number.

08:13.820 --> 08:19.090
So let's remove this concatenation here and try this again.

08:20.000 --> 08:23.960
And we see what's happening now is it looks like it's working right.

08:23.960 --> 08:33.130
But these aren't actually numbers because these values are being treated as separate values.

08:33.140 --> 08:37.370
So we're not actually adding them together in order to add them together.

08:37.370 --> 08:39.970
All we're doing originally we're concatenating them.

08:39.980 --> 08:44.750
So the idea to add it together that second round in bracket and there we go.

08:44.750 --> 08:46.840
So that's a solution to the challenge.

08:46.880 --> 08:49.610
One two three four five six seven eight nine ten.

08:49.700 --> 08:57.050
All the way to 50 so other reasons to use nested loops.

08:57.050 --> 09:02.720
You could also use them when you're building out multi dimensional arrays and the idea is the same thing

09:02.780 --> 09:11.090
as we've just done with the with table but this is more conceptual where we've got multiple items here

09:11.090 --> 09:12.290
within the array.

09:12.290 --> 09:15.180
And that way we can build those as well.

09:15.200 --> 09:21.130
So take a look at building up tables make some adjustments play around with it.

09:21.180 --> 09:29.180
I try to make these as dynamic variables and in the next lesson where you look at break and continue

09:29.270 --> 09:30.140
within loops.

09:30.160 --> 09:30.870
That's coming up.
