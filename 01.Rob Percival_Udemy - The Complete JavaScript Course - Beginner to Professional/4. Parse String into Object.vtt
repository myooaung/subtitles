WEBVTT

00:00.870 --> 00:07.710
It this lesson we're going to be using son and I going to be showing you parts and a string of phi.

00:07.720 --> 00:13.810
So this is also something that we saw in one of the earlier lessons where we were storing information.

00:13.930 --> 00:19.690
So it's good practice to get used to parsing it and string a flying Jason and we're going to take a

00:19.690 --> 00:23.890
closer look at Jason within the application as well.

00:23.890 --> 00:29.680
So first of all let's build it a party invite checklist.

00:29.680 --> 00:37.210
So we're going to have a party invite checklist and we're going to have the ability to check off people

00:37.210 --> 00:42.010
that we've invited to the party people into the party and so on.

00:42.130 --> 00:48.430
And we're actually going to be pulling in this Jason information from an external file.

00:48.430 --> 00:55.530
So the content of this particular application is actually going to be sitting in a jail on file.

00:55.570 --> 01:00.650
And that means that we need to pull it in and we need to make use of it within Javascript.

01:02.380 --> 01:08.180
And it's actually just going to be sitting in the external file and it's not going to be Jason.

01:08.200 --> 01:11.800
Jason it's going to still be a javascript object.

01:11.830 --> 01:17.650
Well we're going to define a variable that's going to contain a string value of the sun information

01:17.950 --> 01:22.150
and then later on we're going to update this to be an actual jigsaw file.

01:22.270 --> 01:27.880
So the first thing we need to do is create a brand new file and within this file We're actually going

01:27.880 --> 01:32.070
to create a variable and we're going to call it data.

01:32.200 --> 01:36.450
So this is where all of our adjacent information is going to be held.

01:36.580 --> 01:44.170
And then within here we need to create we need to represent it as we normally would with just regular

01:44.170 --> 01:46.360
data with the square brackets.

01:46.450 --> 01:50.770
And then the Giese on curly brackets are going to be inside of there.

01:50.980 --> 01:56.050
And this is going to give us the ability to grab that information as we know that this is actually going

01:56.050 --> 02:02.110
to be a string and we're going to parse that back into our application and then make use of the the

02:02.160 --> 02:04.780
data that we're going to have sitting in here.

02:05.580 --> 02:11.670
So we need to create some guests for our party and we're going to create it in a song format so don't

02:11.670 --> 02:17.240
forget to have the quotes around the Keys and the values.

02:17.430 --> 02:20.420
So we're going to have a name for each one of our guests.

02:20.580 --> 02:22.810
So first guest is John.

02:22.980 --> 02:27.260
And then also they can bring some additional guests.

02:27.270 --> 02:32.130
So we'll just call that guests and then so this is just going to be a number.

02:32.130 --> 02:35.850
So we're going to just do three for now and next.

02:35.880 --> 02:37.710
Let's do the status.

02:37.710 --> 02:42.870
So we're going to have a number of guests that are going to be able to bring their own additional guests

02:42.930 --> 02:49.480
into it and we're going to have a checklist that we can either check off as true or false.

02:49.500 --> 02:50.130
So there we go.

02:50.130 --> 02:57.820
So this is our first guest and I'm going to copy this format and I'm going to create some more guests.

02:57.960 --> 03:04.110
So we've got John and remember too because this is a string value we need to keep it all within that

03:04.110 --> 03:05.140
same line.

03:05.220 --> 03:06.420
So there's no space there.

03:06.420 --> 03:11.970
And the reason it's going to the second line is that the editors actually wrapping it.

03:11.970 --> 03:17.670
So this is not something that you would typically do by wrapping it into the following line.

03:17.970 --> 03:25.340
And next guest So Mike is going to bring five people with them and we'll set this status to be false.

03:25.410 --> 03:27.870
So we haven't verified them yet.

03:27.900 --> 03:35.270
So this is also going to be simulating that if we want to actually create a Jaison file we want to render

03:35.270 --> 03:36.580
it out from a server.

03:36.660 --> 03:42.680
We can do it within this type of format and pick up that information and make use of it within our Javascript.

03:42.900 --> 03:48.240
So Jenny is going to bring to people and the status is going to be false.

03:48.240 --> 03:50.570
So let's save that.

03:50.930 --> 03:55.880
And I'm just going to call it juice on Daut Jason.

03:55.900 --> 03:56.500
So there we go.

03:56.500 --> 04:03.160
So now we've got a basic file that we can make use of and we can pull that information back in if we

04:03.160 --> 04:04.610
actually open this up.

04:04.630 --> 04:06.800
We're not going to really see anything there.

04:06.880 --> 04:08.370
If I was to go to J.

04:08.410 --> 04:15.580
So instead of inducts if I go to Jason Jason you can see that it just outputs that information and it

04:16.030 --> 04:18.430
isn't output within that same format.

04:18.550 --> 04:20.640
And if I was to grab this.

04:20.680 --> 04:27.070
So whatever's between the quotes and if I was to go to limted it's still a valid Jaison.

04:27.130 --> 04:31.810
So it doesn't matter that we've got those square brackets around it.

04:31.810 --> 04:36.650
So that's just allowing us to incorporate it as the first item within the array.

04:36.670 --> 04:41.470
And this is just the way that we do it until we actually produce an actual Jesus on file that we can

04:41.470 --> 04:49.740
parse through and we are going to need Ajax or some other format of reading the file contents in order

04:49.810 --> 04:53.570
using AJAX to actually pull that file information in.

04:53.620 --> 04:57.970
And for now all we're going to be doing is we're just going to be linking to this japes on file and

04:57.970 --> 05:02.520
that's actually just going to bring it in and it's going to allow us to load it within our Javascript.

05:02.560 --> 05:10.290
So just as we would a J.S. file so the idea is the same thing here and that's why we had to set a variable

05:10.290 --> 05:12.490
data to equal Jaison.

05:12.630 --> 05:20.090
So let's go jump back to our editor and we're going to flip back into our index start to.

05:20.110 --> 05:22.850
And remember we've got Jason Dodd Jason down here.

05:23.770 --> 05:26.980
So now let's bring this into our application.

05:27.190 --> 05:34.330
And as mentioned this idea is pretty much the same way we bring in a javascript file so that we get

05:34.330 --> 05:41.620
the script file and we specify the source and we equal the source to be whatever whatever the path to

05:41.710 --> 05:44.160
our file is going to be.

05:44.170 --> 05:44.800
So there we go.

05:44.800 --> 05:47.560
So now let's try it in the browser.

05:47.660 --> 05:49.980
Let's go back and refresh it.

05:49.990 --> 05:55.840
And now if I do data well you can see that I've got all of that information.

05:55.930 --> 06:01.540
And I also notice that this is within a string format because we did need a way and that's where we

06:01.540 --> 06:01.600
are.

06:01.600 --> 06:06.850
Another reason we had to set a variable here is that we didn't need a way to actually grab that and

06:06.850 --> 06:13.930
identify that information because we don't aren't using an actual real JS ON FILE we've got Giese on

06:13.930 --> 06:15.410
data within a string format.

06:15.430 --> 06:21.740
That's basically what we're doing and we're representing a variable to grab that information.

06:22.030 --> 06:29.230
So the next part of it is to actually grab that information and make use of it within our application.

06:29.230 --> 06:33.810
So let's set up a variable and they're going to call this variable party.

06:33.820 --> 06:39.100
So this is going to be all of the people that are going to get invited to our party and we're going

06:39.100 --> 06:43.650
to use Jason and the method parce.

06:43.660 --> 06:47.760
So this is going to allow us to parse a string as and Jason.

06:47.950 --> 06:53.430
So basically we've got a string here and we need to make that string usable.

06:53.620 --> 06:59.850
And that's where we're just going to identify it and parse it through there and then all console actual

06:59.890 --> 07:04.150
just console Lague party mode when we refresh the page.

07:04.150 --> 07:09.340
So there we go SUNO hit party and we've got it in a usable format.

07:09.370 --> 07:18.370
So if I was to say party and I want to get the first person or the second person identified as one so

07:18.370 --> 07:23.470
this is going to be Mike and if I want to see the name I can retrieve it back that way.

07:23.650 --> 07:30.670
And so basically at this point we can make use of this data loaded in from the file and to make use

07:30.670 --> 07:32.740
of it within our application.

07:32.770 --> 07:38.500
So I don't want you to do now pause the video and before we go into the next lesson I want you to create

07:38.500 --> 07:41.190
your own Giese on list.

07:41.230 --> 07:49.180
So create name guests a number of guests and then make use of that information within your javascript

07:49.180 --> 07:49.710
file.

07:51.340 --> 07:57.100
And before we complete this lesson you might have noticed here that I've got numbers and I'm quoting

07:57.100 --> 08:02.900
them and when I pull that information out it actually translates and it's still a string value.

08:02.980 --> 08:06.550
So we can remove out the quotes here and this is still going to be valid.

08:06.600 --> 08:13.090
Jason so where we are able to do this and because we've got the quote around it and this is a string

08:13.090 --> 08:16.860
value whenever we parse that through this is still going to be valid.

08:16.870 --> 08:21.160
So that's the other thing too that we're going to go ahead and we're going to remove out all of these

08:21.160 --> 08:26.030
quotes and then I'll show you that this is still going to be within a valid Jaison format.

08:26.050 --> 08:28.090
So go ahead and save that.

08:28.090 --> 08:35.360
If I go out here and if I refresh and I do party I can see that all of those values.

08:35.380 --> 08:40.040
So these are no longer going to be counted as strings there's numbers and they're booleans.

08:40.120 --> 08:46.640
And if I was to take that entire string go out into the limt

08:49.840 --> 08:54.210
and validate that Jaison would see that it's still valid.

08:54.230 --> 09:01.750
Jason So you're OK if you using numbers or booleans to not include the quotes for the value.

09:01.750 --> 09:07.590
So go ahead and create at that file that we're going to use in the next lesson in order to build out

09:07.690 --> 09:12.120
our party planning and party invite checklist application.
