WEBVTT

00:01.350 --> 00:05.900
Welcome back in in this lesson we're going to build our deck of cards.

00:09.060 --> 00:15.660
So first of all let's start by creating a loop so we know that we've got a number of suits here and

00:15.750 --> 00:19.200
we can loop through all of the values within suits.

00:19.200 --> 00:28.080
So let's set X s within the suits and that's going to give us the ability to loop through every item

00:28.200 --> 00:33.930
we have here within the suit's array so we can we're going to loop through essentially four times and

00:33.930 --> 00:37.670
the next thing that we need to do we need to have another loop inside of here.

00:37.770 --> 00:46.210
And for this one we want to use C and this one is going to loop through all the values within card phase

00:46.330 --> 00:48.300
array.

00:48.420 --> 00:55.440
So basically we're going to loop through four times for the outer loop and then for the inner loop we're

00:55.440 --> 01:00.610
going to loop through 13 times for each value within that card.

01:00.630 --> 01:05.250
So the next thing that we need to do is we need to actually build out a card.

01:05.520 --> 01:13.610
So let's create an object within here so this can be local and we'll give it a name of card.

01:13.620 --> 01:15.210
So this is an object.

01:15.270 --> 01:18.060
So first thing that we want to store with our object.

01:18.120 --> 01:25.410
So let's store the actual suit that we're using will store suits ass within here.

01:26.240 --> 01:37.790
And next item that we want to store is let's store the number that we're going to be using for the face

01:37.790 --> 01:38.560
of the card.

01:38.570 --> 01:42.680
So this could be a number it could be a letter depending on what the value is.

01:42.680 --> 01:45.200
So this one is card face

01:47.760 --> 01:54.780
and this one is not going to be s it's going to be C because we're looping through on the inner loop.

01:54.780 --> 02:00.720
Another thing that I wanted to add in so notice over here that I do have this background color.

02:00.990 --> 02:07.050
So for I'll show you how to set that one up and we're going to use a Terry operator for that.

02:07.200 --> 02:14.010
So variable and this is local variable again where you use background color and we're going to check

02:14.100 --> 02:25.140
to see what the value is of the suit and we're going to do the Turner condition here and then we'll

02:25.140 --> 02:27.540
do the two operators here that.

02:27.870 --> 02:38.490
So depending on what this condition is we're going to first check to see if the value of suits us is

02:38.520 --> 02:44.490
equal to Hearts and then do the oar in here.

02:44.490 --> 02:47.520
So we've got two conditions that we're looking for.

02:47.520 --> 02:53.960
We're also looking to see if suits is equal to diamonds.

02:54.360 --> 03:00.660
And if it is equal to those then we're going to return back the background color so that background

03:00.660 --> 03:01.970
color is going to be red.

03:02.070 --> 03:05.390
Otherwise the background color is going to be black.

03:05.490 --> 03:08.630
This is giving us the ability to set the background color.

03:08.730 --> 03:15.700
So let's add that in as well some background color and we just need to use that same variable that we

03:15.700 --> 03:18.050
set there.

03:18.090 --> 03:18.610
So there we go.

03:18.610 --> 03:23.580
So now we've got all of the promoters we need in order to actually build out our card.

03:23.580 --> 03:24.980
So the next thing that we need to do.

03:25.020 --> 03:32.370
So we've built out the cart object and the next thing that we need to do is push that newly freshly

03:32.370 --> 03:36.650
created card into that card's array.

03:37.480 --> 03:41.500
So now we're actually we're building out the deck of cards.

03:41.680 --> 03:49.360
And after we do the build of the deck of cards we can console log 8 cards so we can actually see what

03:49.360 --> 03:50.580
gets output.

03:50.590 --> 03:53.290
So let's take a look at that.

03:53.320 --> 03:57.760
So I've got the screen open here the browser open here and I opened up the console.

03:57.760 --> 04:02.490
So let's see what happens when I hit deal and actually doesn't matter what number we haven't hooked

04:02.680 --> 04:03.430
up yet.

04:03.640 --> 04:10.300
So we can take a look and we can see that we've effectively built out 52 cards so this 52 cards in the

04:10.300 --> 04:13.120
deck and we've got all of the card values.

04:13.120 --> 04:17.600
Remember again that the raise start at zero and they loop through everything there.

04:17.770 --> 04:24.520
So now we've built our first function that we needed to build is to build the deck of cards.

04:24.550 --> 04:29.890
So the next one that we need to do is we need to shuffle those cards because Notice the order of the

04:29.890 --> 04:30.610
cards.

04:30.700 --> 04:36.010
So this isn't going to make for a very interesting game because we already know the order of the cards.

04:36.070 --> 04:41.440
So the function that we're going to use is going to be that same shuffling array function.

04:41.440 --> 04:45.890
And this is the one where we swap the values and we decrease the values.

04:46.020 --> 04:49.630
And so let me just put that one in there.

04:49.630 --> 04:57.610
I'm going to copy and paste that one in from before and I am passing an argument in there.

04:57.630 --> 05:00.520
So I need to pick that up here within the function.

05:00.540 --> 05:06.810
So the next thing that we want to do is shuffle the cards so now let's console log what cards again

05:06.870 --> 05:10.170
and after we've shuffled it let's take a look at our deck.

05:10.410 --> 05:13.050
So go back out refreshed and hit.

05:13.050 --> 05:22.480
Deal and we do need so it looks like there was an error there that we need to pass in the array as Array

05:22.540 --> 05:24.150
not cards.

05:24.910 --> 05:29.220
So let's go back and refresh it again and take a look at this.

05:29.230 --> 05:32.460
So now we've got our listing of all of our cards.

05:32.470 --> 05:37.900
And when I click it again we're going to see that we have another random order of cards.

05:37.900 --> 05:41.220
So this one starting with eight of diamonds.

05:41.290 --> 05:44.020
This one up here starting with seven of diamonds.

05:44.080 --> 05:49.660
And when I hit it again I have one starting with six of hearts.

05:49.660 --> 05:55.910
So the shuffling is working well and this is all we're doing is just randomizing the array.

05:55.930 --> 06:01.150
So this was the same function that we had worked out earlier within the course where we created the

06:01.150 --> 06:04.180
function to shuffle the cards or shuffle in array.

06:04.330 --> 06:09.010
So it doesn't matter what you call it it's doing the same thing where it's looping through and it's

06:09.610 --> 06:16.060
assigning random values and then swapping out the two values and then it's decreasing the number of

06:16.060 --> 06:17.740
items here within the array.

06:17.800 --> 06:20.210
And going down as it swaps the mode.

06:20.440 --> 06:25.000
So lastly but not least we need to actually deal out the cards to the player.

06:25.000 --> 06:27.920
So this is the last function that we need to take care of.

06:28.090 --> 06:35.470
And we're also passing the cards within here so we can pick that up with an deal.

06:35.890 --> 06:40.480
And now we need to build out the dealing of the cards.

06:40.660 --> 06:47.130
So the first thing that we need to establish is how many players we have within this game.

06:47.140 --> 06:51.880
So how many numbers we've got here and not to repeat ourselves.

06:51.970 --> 06:58.540
But we already grabbed that value over here and we've already set that value.

07:01.330 --> 07:09.370
So we can make use of it at this point and we could actually build out our Monte dimensional array using

07:09.460 --> 07:11.400
that value that we've picked up.

07:11.620 --> 07:16.360
And then we won't have to actually look at it again because we're going to have this value it's going

07:16.360 --> 07:21.040
to actually be sitting within our within our players array.

07:21.040 --> 07:23.300
So then we can just go and get the length of that.

07:23.530 --> 07:25.650
So let's update this one.

07:25.810 --> 07:35.350
So players I and we're going to equal players I to a basically an empty item within the array.

07:35.350 --> 07:39.240
So this is going to be an array within an array multi-dimensional array.

07:39.250 --> 07:45.390
So we're just building our players to be multi dimensional and this saves us the trouble of doing it

07:45.400 --> 07:50.620
within this type of format where we've got a bunch of these square brackets within square brackets.

07:50.770 --> 07:52.980
So you could do it that way as well.

07:53.110 --> 07:58.990
But this is not as dynamic and we're trying to be as dynamic as possible within the building of the

07:58.990 --> 07:59.970
application.

08:00.220 --> 08:07.660
So let's pick up the length of the players will use none again because this is a local variable so we've

08:07.660 --> 08:11.050
used it before but we're not using it globally anywhere.

08:11.050 --> 08:18.140
So we know that if we get players length we're going to return back whatever value was initially here.

08:18.490 --> 08:25.540
So what I want you to do now is pause the video and I'll give you a couple of hints that we do need

08:25.630 --> 08:33.220
to loop through the number of car number of players and we have two loops.

08:33.220 --> 08:39.520
We have to actually loop through the number of cards and then we can loop through the players and deal

08:39.520 --> 08:48.230
out a card to them and we can just simply push it into our players hand using the push method from a

08:48.240 --> 08:49.070
raise.

08:49.090 --> 08:56.380
And then lastly we're going to loop through the players again and we're going to output all of their

08:56.380 --> 09:00.330
values visually within that message area.

09:00.340 --> 09:03.750
Or we could call it output I could change it to put as well.

09:04.300 --> 09:09.510
So we could do that and this would be the last step to just simply display that content.

09:09.760 --> 09:11.160
So pause the video.

09:11.260 --> 09:15.280
Try it out and I'll show you the solution coming up.

09:15.280 --> 09:17.850
So we do need to grab that.

09:17.860 --> 09:19.230
I would put area.

09:19.360 --> 09:28.540
So let's do our document get element by id and grab that element with the ID of output so that we're

09:28.540 --> 09:30.460
ready to output content.

09:31.200 --> 09:38.880
And next item that we need to do is we need to loop through the number of players so we know that we've

09:38.880 --> 09:46.210
got a number here for players and we also need more dynamic variable for the players.

09:46.230 --> 09:48.200
So set that up as zero.

09:48.320 --> 09:51.060
And I'll show you what I mean as we go through the loop.

09:51.060 --> 09:56.040
So let's do the loop far by and equal that to zero.

09:56.310 --> 10:07.070
And we're going to loop by while the value of cards while we're in the loop through the entire length

10:07.160 --> 10:12.740
of cards and we're going to increment this particular loop.

10:12.770 --> 10:21.200
So now we need to make some magic happen where we need to get the values of the cards into our our players

10:21.200 --> 10:21.920
hands.

10:22.100 --> 10:30.590
And we know that in order to recall cards we can do cards.

10:31.200 --> 10:38.960
And that will return that object that we built earlier and we can deposit that information into an array.

10:39.170 --> 10:41.150
So let's set up an array.

10:41.150 --> 10:45.460
So that's players and because this is a multi dimensional array.

10:45.590 --> 10:51.170
So just to make things a little bit more complicated we need to identify which player it's going into.

10:51.170 --> 10:57.080
So we're starting out at player zero so where we set that value of p there and then we're going to increment

10:57.080 --> 11:06.650
them as we loop through and deposit the value of cards into each one of the players hands.

11:06.650 --> 11:10.830
So instead of player 0 let's do player p.

11:11.270 --> 11:13.860
And now let's increment.

11:14.270 --> 11:17.050
And there's one thing that we need to watch out for.

11:17.060 --> 11:25.700
We need to check to make sure that P is not less than or equal than the value of Nahm or the player's

11:25.700 --> 11:26.780
length.

11:26.780 --> 11:30.090
So we can actually shorten this and we can get rid of that very.

11:30.100 --> 11:34.200
But we don't need to have that sitting there because we're only going to be using it.

11:34.460 --> 11:38.140
We're actually we are going to be using it more than once so let's keep that as it was.

11:38.540 --> 11:46.160
So next we need to just make sure that if p is larger than number then we're going to reset p back to

11:46.160 --> 11:46.770
zero.

11:46.850 --> 11:53.120
So we know that if we exceed the number of players we're in the default back to our zero value in the

11:53.120 --> 11:55.700
next card it's going to go in that person's hand.

11:55.700 --> 12:01.720
So basically this is all we need to do in order to deal out the cards is we need to loop through there.

12:01.760 --> 12:06.200
And then each player will have their own set of cards within the hand.

12:06.200 --> 12:07.850
So let's try to say.

12:07.940 --> 12:14.010
Let's hit a deal or go into our console and let's see what's contained within the players are.

12:14.180 --> 12:16.080
So I noticed that we selected three.

12:16.160 --> 12:23.690
And each player now has a set of cards within their hands and we're all ready at this point to output

12:23.750 --> 12:26.680
that content because we've got all of the information we need.

12:26.750 --> 12:28.840
We've got the value here.

12:28.880 --> 12:32.780
We've got the suit and we've got the color of the card.

12:32.780 --> 12:40.650
So we are ready to make use of this information and actually put it into our t m l.

12:40.760 --> 12:45.420
So let's create another loop and this loop is going to loop through.

12:45.860 --> 12:51.090
So we can do var we could use I again because we've already used it.

12:51.100 --> 12:53.860
We're not going to need it again so we can reset it.

12:53.980 --> 13:02.590
While it's less than the number of players that was numb and we're going to increment I buy one.

13:02.680 --> 13:07.520
So now let's let's start by output.

13:07.570 --> 13:11.550
So set the inner each team out of the output there.

13:12.010 --> 13:17.640
And we're going to simply just incremental it and I'll do a line break just to start it off and we'll

13:17.650 --> 13:19.310
do player.

13:19.900 --> 13:30.040
So we can list the player's number dynamically and we're going to do I plus one for this so that we

13:30.040 --> 13:37.330
get the index value plus 1 and let's do another line breaks so that it's more readable.

13:37.330 --> 13:40.150
So this is where we need to loop once again.

13:40.420 --> 13:44.070
So we've got several loose within loops within this exercise.

13:44.290 --> 13:48.700
So let's set up a variable and this time lets you use x.

13:48.880 --> 14:01.000
So starting at zero and we need to loop through while X is less than player and this is where we're

14:01.000 --> 14:05.230
going to use the number of I which is up there.

14:05.440 --> 14:08.160
So this is a multi dimensional array.

14:08.170 --> 14:14.110
We need to get the first item within there and we need to grab back that length so that we can properly

14:14.350 --> 14:17.370
loop through all the values that are contained within that length

14:20.470 --> 14:28.280
so lastly it's just a matter of actually outputting that card information and we can create a simple

14:28.280 --> 14:31.340
variable here we'll just call it P.

14:31.490 --> 14:34.050
Just a simple ply what we're outputting here.

14:34.130 --> 14:39.980
And basically this is going to hold players and

14:45.640 --> 14:50.350
X will give us that second item within that index.

14:50.350 --> 14:55.430
So now with P we can return back all of that information that we need.

14:55.480 --> 14:57.290
So let's build our team.

14:57.310 --> 15:01.910
So that's the last thing that we need to do is just build out our age to Mel's style.

15:02.050 --> 15:09.940
And this is what's going to give us the color so backslash to break out of our our special character

15:09.940 --> 15:10.710
there.

15:11.320 --> 15:20.290
And then now when you actually need to use the break and we're just going to do p B.G. color because

15:20.290 --> 15:25.210
we've got the p now contains that object information for the card.

15:25.210 --> 15:31.900
So it's as easy as this to simply grab that and then break out of that again close that off.

15:31.900 --> 15:36.960
And next we need to actually put a value.

15:36.970 --> 15:42.480
So we're going to do P and none.

15:42.490 --> 15:45.520
So just going to go back up and I'm going to just check to see.

15:45.550 --> 15:47.520
So I've got the card face value.

15:47.600 --> 15:48.270
None.

15:48.310 --> 15:57.640
So let's add that one in there and then next one that we want to do is we're going to add the and sign

15:57.940 --> 15:59.580
so that we can get the proper.

15:59.650 --> 16:00.310
Yes.

16:00.340 --> 16:03.210
See I character double like character.

16:03.490 --> 16:07.530
So this one is P and I believe we called it suit.

16:07.900 --> 16:09.100
Let me just double check.

16:09.100 --> 16:18.070
So we are going to get as suit returned back and then let's add this concatenate it together and we

16:18.070 --> 16:21.130
can finish off that span.

16:21.130 --> 16:27.040
So now we should be able to get that output there and close off the statement.

16:27.040 --> 16:34.180
And then lastly let's just add in another line break so that we have line breaks between the different

16:34.270 --> 16:35.090
players.

16:37.540 --> 16:38.330
So are you ready.

16:38.380 --> 16:40.060
Let's try this out.

16:41.530 --> 16:42.160
So.

16:42.220 --> 16:43.920
Save your code.

16:43.990 --> 16:47.950
Go over to the browser refreshed and let's hit deal.

16:48.040 --> 16:49.030
And there we go.

16:49.030 --> 16:51.960
So we are dealing with all of the cards to the players.

16:52.000 --> 16:53.680
Let's try adjusting this.

16:53.680 --> 17:00.120
So now we've got three players and we're getting all of the cards that are contained within each player.

17:00.490 --> 17:07.870
So there we go and I do try it out for yourself and you can make some adjustments to this as well to

17:07.870 --> 17:11.430
really fine tune this particular exercise.

17:11.440 --> 17:17.960
So there's a few things that we can do as well so we can actually put cards locally because we have

17:17.980 --> 17:20.170
contained in all within this one function.

17:20.170 --> 17:26.810
So we need to we can only we could use it by just setting it within here and then passing it into the

17:26.830 --> 17:29.360
arrays so we can try that as well.

17:29.620 --> 17:32.400
And I'll show you how to do that in the upcoming lesson.
