WEBVTT

00:01.140 --> 00:06.610
Welcome back in in this lesson we're going to take what we've learned in the previous lessons and build

00:06.920 --> 00:08.570
a safe cracker again.

00:08.820 --> 00:14.380
So just to the scheme is to guess all three of these numbers.

00:14.490 --> 00:20.010
So typically it wouldn't be displayed to the user that user would come in and they would have to enter

00:20.010 --> 00:27.660
in three random numbers and they would get returned back to their guess was that there should be higher

00:27.720 --> 00:29.580
or that there should be lower.

00:30.000 --> 00:33.230
And we see by going by this it gets three.

00:33.240 --> 00:34.670
So let's try five.

00:34.680 --> 00:37.300
This one is hirers Wellsville into seven.

00:37.440 --> 00:42.270
And this one is lower so low to 1 and we'll see what the results are.

00:42.360 --> 00:43.810
So what we got correct.

00:43.830 --> 00:48.610
We've got five which batches with this value and these two are lower.

00:48.630 --> 00:53.570
So we know that this one is higher than the three that we initially try.

00:53.670 --> 00:55.920
So let's go ahead and try five.

00:56.070 --> 01:00.780
And then the last one is lower still solor than one is zero.

01:00.900 --> 01:07.460
So we see that now we try 5 5 0 and we were actually able to guess the code so we got it correct.

01:07.650 --> 01:13.980
So basically that's the game and the function gets initiated by the trye code.

01:13.980 --> 01:21.330
We've got all three of these inputs for all three different numbers and we've got an output area so

01:21.330 --> 01:23.970
that we can see what's happening within the game.

01:23.970 --> 01:28.690
So let's start by setting up our initial values for this game.

01:28.890 --> 01:36.270
And within this game we're going to use a combination of local scopes for an array of value.

01:36.300 --> 01:41.190
So these are going to be the ones that are going to contain the inputs and we're also going to use a

01:41.190 --> 01:42.510
global scale.

01:42.600 --> 01:48.620
So for the global scope we need to initially set up what our court is going to be.

01:48.690 --> 01:54.230
So I'm going to give it a plain read and I'm going to just set it up create that rate.

01:54.270 --> 01:55.820
So it is creating a blank.

01:55.830 --> 01:57.980
They're called C-code.

01:58.020 --> 02:01.180
Another value that I need to set up is account.

02:01.350 --> 02:03.480
So you started this count at zero.

02:03.600 --> 02:08.580
And this is the one that is actually going to check to see how many of the items the user got.

02:08.580 --> 02:09.280
Correct.

02:09.320 --> 02:14.910
And if you've got all three correct then we know that they completed the game and that won the game.

02:15.090 --> 02:20.130
So next we also need to set up our object or put object.

02:20.160 --> 02:22.460
So just as we talked many times before.

02:22.560 --> 02:25.220
This document get element by ID.

02:25.220 --> 02:31.560
What's that put in there so that our output variable will contain the output object.

02:31.620 --> 02:38.460
And now that's also set up objects for See 1.

02:38.460 --> 02:41.490
So that's going to be the code one that's being guessed.

02:41.640 --> 02:49.560
So we get element ID and so from here you have to pick up the values what we need to pick up the values

02:49.620 --> 02:52.130
at the time that the function gets fired off.

02:52.290 --> 02:58.530
So for now we're just going to hold all of those objects and we're going to grab the values within the

02:58.530 --> 02:59.280
function.

02:59.300 --> 03:03.410
So if we count them outside of the function then we're actually not going to get.

03:03.510 --> 03:07.830
We're not going to get the value at the time when the function is triggered.

03:07.830 --> 03:08.640
And that's what we need.

03:08.670 --> 03:12.470
We need to get that value of the time a triggering.

03:12.510 --> 03:22.110
So now that we set up our basic variables we need to actually build up our set of numbers and we want

03:22.110 --> 03:26.960
to do this randomly so that there is no pre-set number of numbers.

03:27.000 --> 03:32.900
And from this I'm going to create an array for variable x equals zero.

03:33.120 --> 03:38.750
And we're going to loop it will X is less than 3 and we're going to increment x.

03:38.760 --> 03:49.260
So making use of loops which we saw earlier and we need to actually post random numbers from 0 to 9

03:49.590 --> 03:53.890
within our code range so this is the one we created.

03:54.120 --> 04:00.780
So what I want you to do now is Plus the video I use the code that I set up make the same connections

04:00.780 --> 04:09.340
here and ready to go and add in to the code array create an array with three separate numbers from 0

04:09.340 --> 04:09.910
to.

04:10.530 --> 04:11.280
And go ahead.

04:11.280 --> 04:12.140
Pause the video.

04:12.140 --> 04:14.440
Try it and I'll show the solution.

04:15.210 --> 04:21.300
So the solution to it into an array is to rename and push.

04:21.570 --> 04:27.220
And we need to push our random values is going to be a math floor.

04:27.900 --> 04:34.590
And then here we're going around the math random method.

04:34.730 --> 04:40.260
So there's a built in it is used before and we want a number from zero.

04:40.310 --> 04:42.400
That's we're going to multiply by 9.

04:42.630 --> 04:44.540
So that's a solution for there.

04:44.610 --> 04:51.750
And at this point once we loop through there we can put that as in or H-2 else and just what I've done

04:51.840 --> 04:57.980
over here and let's put that so we can actually see the code that gets randomly generated.

04:58.530 --> 05:02.980
So let's go back refreshed the page and refresh refresh.

05:03.030 --> 05:03.610
So there we go.

05:03.610 --> 05:05.390
So you've got a random code.

05:05.520 --> 05:08.910
And so as I said this typically wouldn't be shown to the user.

05:08.950 --> 05:12.810
You get the user to either guess higher or lower.

05:12.840 --> 05:18.990
So now we need to build out of functionalities so we need to set up an array called croc's so that the

05:18.990 --> 05:25.830
user can actually trigger the cranking of that code with what the variables that they have sitting with

05:25.870 --> 05:28.250
and the object here.

05:28.650 --> 05:32.810
So let's go ahead and we're going to count to zero.

05:32.910 --> 05:38.670
So this is going to be our way to tell if the user has guessed the right values.

05:38.700 --> 05:46.470
So every time we get a rate number we're going to increment count by one less than I want it to do is

05:46.560 --> 05:52.670
I wanted to grab all of these guest numbers and we're going actually put them into an array.

05:52.890 --> 05:54.880
So it's up and.

05:55.020 --> 05:56.000
Yes.

05:56.340 --> 05:58.950
So if that array of name they're going to call it.

05:58.980 --> 05:59.580
Yes.

05:59.700 --> 06:08.100
And we're going to touch it to see one value see two value and see three new.

06:08.460 --> 06:17.910
And the reason we need to set this up within the function is otherwise if we grab the values here we're

06:17.910 --> 06:23.790
not going to be able to get current values when functions are actually being triggered.

06:23.790 --> 06:31.040
So that's why we need to set it up locally or we could use an external or global function a global array

06:31.050 --> 06:33.290
but then we constantly have to write into that.

06:33.450 --> 06:40.320
And since we're not going to be using these guess values and it's kind of a function the best practice

06:40.310 --> 06:43.250
is to keep them locally.

06:43.280 --> 06:45.270
So this is the function scope.

06:45.290 --> 06:51.860
And of course once this function finishes executing all of these local values that are contained only

06:51.860 --> 06:54.300
within the function are going to be destroyed.

06:54.350 --> 06:59.510
So once the function finishes we don't really have any use for them because these are expected to be

06:59.510 --> 07:00.170
changing.

07:01.550 --> 07:07.820
So the next thing that I want to do is I want to do it through these values and compare them to the

07:07.820 --> 07:10.110
values that we have in C-code.

07:10.190 --> 07:11.040
So let's do that.

07:11.040 --> 07:17.120
So let's set up another another group here so we're going to loop through all of the values starting

07:17.120 --> 07:25.130
at zero and we're going to loop through while X is less than let's do this dynamically so it's less

07:25.130 --> 07:32.130
than the length of C-code and increment X by 1.

07:32.620 --> 07:34.940
Let's write our function code.

07:34.960 --> 07:41.470
So what I want to ideally do is actually I want to have another function that's actually going to check

07:41.650 --> 07:45.220
the values and return back the values.

07:45.220 --> 07:53.380
So let's let's set this up where we put in under age DML sort of update enraged him out of that output

07:53.680 --> 07:56.410
with the guess and returned.

07:56.440 --> 08:05.740
If it's higher or lower and let's give this function a name check no and pass a few values.

08:05.860 --> 08:10.190
So the first value that we want to pass over is the users guess.

08:10.210 --> 08:11.950
So we'll pass that value.

08:12.220 --> 08:21.560
And the other argument that we wanted to pass here is we want to pass the actual actual value that we

08:21.560 --> 08:24.320
want to make use of from the array.

08:24.330 --> 08:28.300
So let's grab from code or C.

08:28.580 --> 08:32.660
And let's pass that as an argument as well.

08:32.760 --> 08:38.660
So now to set up the function to pick up these arguments so go ahead.

08:38.660 --> 08:46.700
Pause the video and create a brand new function call check number that's going to take these two arguments

08:46.760 --> 08:54.920
in and then compare them to see if one is larger than the other and return back lower or higher.

08:55.010 --> 08:57.760
And then also the number I guess is correct.

08:57.860 --> 08:59.950
And we're just going to return back that number.

09:00.350 --> 09:05.340
So trying that out and I'll show you the solution coming up.

09:05.400 --> 09:08.870
So the opportunity to try to creating that function.

09:09.080 --> 09:15.500
This is the check number function and we did say that we needed to pass those two parameters into it

09:15.970 --> 09:18.290
because we've got them as arguments over here.

09:18.500 --> 09:21.470
So we're just picking those up and passing them in.

09:21.560 --> 09:26.750
So there would be no way that this function could know where we are within the loop without us actually

09:26.750 --> 09:28.930
passing that information.

09:28.970 --> 09:35.700
We create a guess locally so that gas is only available within the function crack.

09:35.780 --> 09:40.520
So it wouldn't be accessible through a check number and that's what we're passing them here within the

09:40.520 --> 09:46.000
arguments and picking them up as parameters under check no function.

09:46.010 --> 09:49.520
So now we need to do something with those check Nomes.

09:49.550 --> 09:57.800
So let's create our first test and we'll see if a is larger than B and if it is then we're going to

09:57.800 --> 10:01.340
return back that the number is

10:03.610 --> 10:09.850
isolate lower so the cast and the actual real value is lower.

10:10.070 --> 10:17.480
And one thing to know about a raid is whenever you do a return it's got to stop executing the rest of

10:17.480 --> 10:18.360
the code.

10:18.380 --> 10:22.370
So this is a way to break out of a function that you do in return.

10:22.550 --> 10:25.780
And then it's a worry about any of the rest of the code.

10:25.940 --> 10:31.740
So if the statement is true then it's something going to return back out if it's not true.

10:31.790 --> 10:39.470
Then we've got a shot at it and this time let's do a is less than B at this time we're going to return

10:39.710 --> 10:40.710
to the lower.

10:40.850 --> 10:45.100
That basically means that the value is actually higher.

10:45.290 --> 10:48.460
So we get the return back H to the user.

10:49.310 --> 10:58.320
And then lastly we need to set up and that basically if a is equal to B then what we're going to return

10:58.320 --> 11:01.690
about is where Return about the value of a.

11:01.700 --> 11:03.840
Or we could return the value of v.

11:04.040 --> 11:09.920
So that basically means that we've got the gas range and we're just the return of the number.

11:09.930 --> 11:12.150
There's nothing more that they need to do.

11:12.170 --> 11:15.240
There is one other thing that we need to do over here.

11:15.410 --> 11:19.370
And besides returning the value we need to increment the count.

11:19.670 --> 11:26.850
And this was our way of telling us to check to see if the user if it just all three correct.

11:27.020 --> 11:32.870
And if they have then we're starting off with that in this function of this global value.

11:32.870 --> 11:34.630
So our count is zero.

11:34.640 --> 11:38.020
So we run through here and if we increment the count.

11:38.210 --> 11:46.730
So basically that means that after we finish this loop if the value of count is equal to 3 then that

11:46.730 --> 11:52.370
means that they actually the users actually solved the puzzle.

11:52.430 --> 12:00.350
So let's check to see if count is equal to 3 and if it is then we know that we're putting in our age

12:00.350 --> 12:03.620
to develop and we're just going to say

12:07.190 --> 12:09.250
to.

12:09.810 --> 12:17.500
At that point the user can pretty much finish the game and we cut out even more to finish that up.

12:17.730 --> 12:25.010
And if the count is not equal to three then we're just going to add in a line break into that output.

12:25.020 --> 12:29.120
So that's I mean they use that guilty to yes again.

12:30.130 --> 12:33.730
So let's go ahead and refresh our browser and try it.

12:35.130 --> 12:38.280
So the random numbers are 8 7 so.

12:38.300 --> 12:41.810
So again this is something that we're going to get rid of for these are.

12:41.830 --> 12:46.360
But this is just Wohler practicing just to make sure that everything is running OK.

12:46.570 --> 12:49.580
So is a good idea to actually see the solution.

12:49.700 --> 12:51.700
So I got to start with five five five.

12:51.860 --> 12:58.850
And we know that the actual values are higher so it's higher than five higher than five and higher than

12:59.300 --> 13:04.920
so let's try 7 7 7 and we know that the first number is higher.

13:04.970 --> 13:08.050
The second number is right a third number is right.

13:08.210 --> 13:15.260
So we know that there's two numbers that are higher than us and 7 8 9.

13:15.260 --> 13:19.020
So if we try nine and we know that this number should be lower.

13:19.130 --> 13:24.510
So lastly let's try eight seven seven and we just so we are correct.

13:24.670 --> 13:27.520
And that completes the end.

13:27.990 --> 13:28.780
So go ahead.

13:28.790 --> 13:33.410
Try this out for yourself and see if you can set this up.

13:33.410 --> 13:36.990
And also let's get rid of that output enraged him.

13:37.100 --> 13:41.080
So we just set the user actually has no idea what the numbers are.

13:41.150 --> 13:42.900
So all of these numbers are higher.

13:42.920 --> 13:47.320
Now try 7 7 7 and we see that we've got one of them.

13:47.330 --> 13:48.620
These ones are lower.

13:48.650 --> 13:53.320
So these are six and six and we are able to guess it within three tries.

13:53.480 --> 13:59.300
So you can move up to eight this game and count how many tries it took the user to finally guess the

13:59.300 --> 14:05.330
number you had an additional number as well so you can just add another number here within the code

14:05.510 --> 14:07.590
to make it even more difficult.

14:07.700 --> 14:13.400
And all of this functionality will work the same way all you'd have to do is increase the loop values

14:13.400 --> 14:17.910
here in order to accommodate that new that new value.

14:18.050 --> 14:23.110
So go ahead try to code it and then make some improvements on the code in another.

14:23.110 --> 14:30.620
Number two gas as well as add an ability to count how many guesses the user has gone through and how

14:30.620 --> 14:33.820
many guesses it took them to finally guess the right answer.

14:33.920 --> 14:36.360
So try it for yourself in the next lesson.

14:36.380 --> 14:37.640
We're going to look at more.

14:37.640 --> 14:39.040
You can do it with functions.
