WEBVTT

00:00.420 --> 00:01.770
Hello and welcome back.

00:01.770 --> 00:07.050
So now that we've concluded our reaction game we actually showed a couple different versions of how

00:07.050 --> 00:07.970
it can work.

00:07.980 --> 00:15.270
We've gotten now one that constantly builds new clickable objects and we also had one earlier that just

00:15.270 --> 00:17.390
had the one object that you had to click.

00:17.400 --> 00:22.550
So these ones disappear after one second so you have to be relatively fairly quick to click them.

00:22.560 --> 00:26.070
And if you go over one second then they're already going to disappear.

00:26.070 --> 00:29.700
So you can't actually score anything over then one second.

00:29.700 --> 00:31.550
Let's go through our source code.

00:31.680 --> 00:35.820
So we had some styling that we setup for elements to make them look a little bit nicer.

00:35.820 --> 00:41.940
We also had some H2 Mel that we had to add in for the central gameplay that we use JavaScript in order

00:41.940 --> 00:48.130
to connect to the player the objects so that we could select them and utilize them within our code.

00:48.180 --> 00:54.120
We set up a Player Score which we're not really making use of but we could track how many times in high

00:54.120 --> 00:54.950
scores.

00:54.960 --> 00:58.440
So that's an option there to extend on the current gameplay.

00:58.440 --> 01:03.570
Next we came in and we added an event listener so that that listener was to start the game off.

01:03.630 --> 01:06.910
So we come into the state where the game hasn't started.

01:06.960 --> 01:12.120
There's no gameplay happening and it's subject it's up to the user to click the Start Game button whenever

01:12.120 --> 01:12.990
they're ready.

01:12.990 --> 01:18.660
So the start game and then launches the creation of the element that has to be clicked.

01:18.810 --> 01:21.720
And that is done within the make item function.

01:21.720 --> 01:24.720
So that was really where the core gameplay comes into place.

01:24.750 --> 01:32.250
We get our container boundaries and place them into an object so that we know where we've got our boundaries

01:32.250 --> 01:35.100
and we don't want to place any of the elements outside of the boundaries.

01:35.100 --> 01:41.270
Then we create an elements using create elements in JavaScript So create a div setting all of the styling.

01:41.280 --> 01:47.940
So there's a ton of styling that we set and we all using JavaScript and also some math random in order

01:47.940 --> 01:50.110
to randomize some of these values.

01:50.160 --> 01:55.980
Then we had some objects that we were adding in some values that we were adding in in order to help

01:56.100 --> 01:57.480
improve our gameplay.

01:57.510 --> 02:01.780
And this is a good object to add that in because this is our existing object.

02:01.890 --> 02:07.830
So it always going to stay within that existing object so we'll always have a start time value within

02:07.830 --> 02:13.920
this object that we created and we can then use this start time to calculate out the difference between

02:13.920 --> 02:16.780
the end time and the start time divide up by a thousand.

02:16.800 --> 02:21.780
And that's how many seconds it took the user to click the next element.

02:21.780 --> 02:27.380
We output a score for the user to see how they scored that we clear the timeout interval.

02:27.420 --> 02:33.990
And so this was essential because if we're removing the element and we've got a timeout and then it

02:33.990 --> 02:37.310
goes to try to remove the element it's going to throw an error as we saw.

02:37.440 --> 02:39.250
So that's where we've got the clear timeout.

02:39.300 --> 02:43.710
And then over here we're setting the timeout in a variable called div timer.

02:43.710 --> 02:47.640
So that's where we get that one that we can also clear out and then these two do the same.

02:47.640 --> 02:53.840
So they make a new element under make item and it also clears that div from the existing one.

02:53.940 --> 02:56.990
I'm going to just change the order of that even though it is working.

02:57.060 --> 03:02.790
It's always better to remove the element and then go initiate the function to create a new one.

03:03.180 --> 03:07.350
So I gonna do the same four over here where we're going to remove the element.

03:07.350 --> 03:08.620
Actually this one was right.

03:08.670 --> 03:10.660
So we remove that element and then make a new one.

03:10.680 --> 03:16.510
And then lastly we're appending it that element that we just created into the container object.

03:16.560 --> 03:19.240
And even though these are going to be different instances.

03:19.380 --> 03:24.720
So every time we create a new one it's creating a new div and it's playing all these properties to that

03:24.720 --> 03:25.050
new one.

03:25.050 --> 03:26.580
So they're not really going to interfere.

03:26.670 --> 03:31.010
But again good idea to kind of to clear that up and keep the order in place.

03:31.060 --> 03:34.560
So thanks again for taking this section and I hope you've enjoyed it.

03:34.560 --> 03:40.470
I'm also always happy to answer and clarify any content questions that you might have in regards to

03:40.470 --> 03:42.570
the content that we've covered in this section.

03:42.570 --> 03:47.580
Please feel free to connect with me anytime and also want to remind you that the source code has been

03:47.580 --> 03:51.680
included so you can try to herself and build your own version of the game.
