WEBVTT

00:00.900 --> 00:06.700
In this section we're going to be building out a rock paper scissors game and this is predominantly

00:06.700 --> 00:13.370
going to use conditions and it's going to really allow you to put into practice what we've learned in

00:13.370 --> 00:14.990
the previous lessons.

00:14.990 --> 00:17.670
So first of all let's set up our application.

00:17.720 --> 00:18.550
We're going to.

00:18.560 --> 00:23.210
First off we're going to ask a question and this is going to be from the player.

00:23.210 --> 00:29.570
We're going to use prompt and we're going to ask them do you choose.

00:29.570 --> 00:30.680
So rock

00:34.110 --> 00:39.430
paper or scissors.

00:39.480 --> 00:42.630
So that's going to be the first question that we're going to ask the player.

00:42.650 --> 00:46.210
So coming in when it loads and let me reload the page.

00:46.220 --> 00:46.730
So there we go.

00:46.730 --> 00:53.030
So we've got our question and as we saw earlier those values are going to be stored within player.

00:53.210 --> 00:58.760
So the next thing that I wanted to do is I wanted to set up another variable and this is going to be

00:58.820 --> 01:02.070
whether the player is going to win.

01:02.090 --> 01:07.870
So it's just basically a boolean value that we can use as a placeholder that we can't access.

01:07.860 --> 01:15.410
We apply our conditions and for those of you that are unfamiliar with the game rock paper scissors.

01:15.430 --> 01:22.480
So basically there's three options and one option always trumps the other option so if you click rock

01:22.780 --> 01:29.570
then and the other player picks paper then the paper essentially covers the rock and that player wins.

01:29.800 --> 01:34.460
Rock beats scissors scissors beat Paper Paper beats rock.

01:34.540 --> 01:35.580
In that order.

01:35.620 --> 01:39.220
So there's always one choice that will beat another one.

01:39.340 --> 01:44.700
Or you could end up with a tie and that's why this is ideal.

01:44.700 --> 01:50.460
This is an ideal game for conditions because we've got a lot of conditions that we need to check and

01:50.550 --> 01:51.950
see if they're met.

01:51.960 --> 02:00.030
So let's set up our computers so this is our computer player and he's going to have a selection as well.

02:00.030 --> 02:02.400
So we know that there's three options.

02:02.400 --> 02:06.930
So we need to get a random value and we need to divide it by three.

02:06.930 --> 02:08.380
So let's do the math.

02:08.430 --> 02:09.780
And random.

02:09.780 --> 02:14.460
And we saw earlier that we could multiply it by three and we can get the 1 to 3.

02:14.460 --> 02:16.360
So that's one way of doing it.

02:16.500 --> 02:22.290
But let's just leave math random and this time we're going to do this all with conditions and we know

02:22.290 --> 02:31.630
that math random by default provides a number from 0 0 0 dollars and a whole bunch of decimal placed

02:31.870 --> 02:32.580
numbers.

02:32.680 --> 02:38.010
So and the way that we were using it before as we were multiplying in order to get a value.

02:38.140 --> 02:44.680
So this time what we're going to do is we're going to check to see if the value that the computer selected

02:44.980 --> 02:49.260
is less than zero point three four.

02:49.260 --> 02:53.510
So we know that that number is going to be a third.

02:53.710 --> 02:58.480
So one in three chance of having the number less than zero point three four.

02:58.620 --> 03:05.650
And if it is then we're just going to reuse that value for the computer and we're going to set it to

03:05.710 --> 03:06.610
one of three.

03:06.610 --> 03:08.440
So let's start with rock.

03:08.620 --> 03:14.950
So basically if it's less than zero point three for the computer is going to have a rock.

03:15.220 --> 03:22.570
And now we need to add in the additional conditions to see if the computer has less than zero point

03:22.660 --> 03:26.840
six seven and then Otherwise it's going to be the third option.

03:26.950 --> 03:34.090
So I don't want to do now pause the video and add in the rest of the two choices within this conditional

03:34.090 --> 03:34.950
statement.

03:34.960 --> 03:43.120
So basically what we want is we want a 1 in 3 chance of it being either rock paper or scissors and go

03:43.120 --> 03:48.340
ahead and plus video and add that into the code and I'll show you the solution coming up.

03:48.570 --> 03:54.360
So if you had an opportunity to try that out and as we saw earlier we've got conditional statements

03:54.630 --> 03:56.780
so we can ask another question.

03:56.850 --> 03:59.640
We can say if a computer is.

03:59.640 --> 04:06.480
So if this one is true then the computer is going to be equal to rock and computer is going to be overwritten.

04:06.480 --> 04:09.650
And this is going to be no longer available to be true.

04:09.810 --> 04:18.450
So the next option is let's go 6 7 and if it's falling within six seven then we're going to set the

04:18.450 --> 04:21.710
value of computer to paper.

04:22.770 --> 04:30.420
And then finally if none of those are true we know that we can set the value of computer to the last

04:30.420 --> 04:31.130
value.

04:31.140 --> 04:38.870
So basically we have a 1 in 3 chance of selecting one of these each one of these values.

04:39.000 --> 04:41.260
So let's make sure that this is working out.

04:41.310 --> 04:49.480
We'll put it into the console's computer and save that refresh and we see that we need to make our choice.

04:49.500 --> 04:50.650
So let's do rock.

04:51.030 --> 04:53.790
And we see that computer gets rock as well.

04:53.910 --> 04:59.240
So it doesn't matter how many times I'm actually going to disable this for now and I'll just say you're

04:59.250 --> 05:04.610
just going to refresh it a bunch of times and we can see that we're getting all three different entries.

05:04.620 --> 05:06.540
So all I'm doing is just refreshing.

05:06.540 --> 05:11.550
And if you look down here in the console we're making one of the selections so it's either rock paper

05:11.550 --> 05:12.060
scissors.

05:12.180 --> 05:16.530
And there's roughly a 1 in 3 chance for each one of those.

05:16.560 --> 05:19.840
So that really is the basic functionality of the game.

05:19.860 --> 05:24.900
And now we're ready to go to check to see who the winner is.

05:24.900 --> 05:27.860
So we've got our players selection.

05:27.930 --> 05:30.630
We've got our computers selection.

05:30.630 --> 05:40.280
And now last but not least we need to make sure we do a final check to see if the player wins or if

05:40.280 --> 05:41.460
the computer wins.

05:42.230 --> 05:47.850
So want to introduce you to a string method and this is going to be useful when we're building out this

05:47.850 --> 05:54.880
application and what this is going to do is this is going to allow us to select that first character.

05:54.930 --> 06:02.610
So if we do character at and we specify which position we want to return the character from whatever

06:02.610 --> 06:05.060
is selected computer remember it's scissors.

06:05.190 --> 06:13.410
So let's say we want that s we can see that we can return back the first character within any string

06:13.440 --> 06:15.120
by using character.

06:15.330 --> 06:20.550
And then specifying whatever character we want to return box if you want the second one or the third

06:20.550 --> 06:27.730
one then we would just need to indicate that we are going to look at more at string methods later on

06:27.730 --> 06:29.390
in this course as well.

06:29.500 --> 06:37.090
I just want to introduce this because I want to also pull out that first character from the user's response

06:37.300 --> 06:42.940
so allowing them to either do R.P. or S to be shorter so they don't always have to type in the full

06:42.940 --> 06:43.680
value.

06:43.750 --> 06:48.190
And there's another reason too that I want to grab that first character and do a comparison of the first

06:48.190 --> 06:49.180
characters.

06:49.180 --> 06:54.370
And that's because I also want to transform this to uppercase.

06:54.370 --> 07:02.380
So if for instance our character is not uppercase we can transform it to uppercase by using a built

07:02.380 --> 07:06.400
in string method called to upper case.

07:06.400 --> 07:13.390
And basically what this will do is this will transform any character to uppercase and we can also do

07:13.780 --> 07:19.480
lowercase and of course we are going to look at this in more depth later on within the course.

07:19.480 --> 07:22.600
But basically this allows us to transform

07:25.500 --> 07:27.650
to upper case or lower case.

07:27.750 --> 07:32.640
And this is also really important because when we're applying our condition we don't want to have to

07:32.640 --> 07:38.700
account for if the player's done lower case if they've done upper case so we don't want it to be case

07:38.700 --> 07:42.950
sensitive we just want to be able to match that if it's our rock.

07:43.080 --> 07:47.540
And if the computer has rock then we know that it's a tie and so on.

07:49.480 --> 07:52.040
So let's set up some more values here.

07:52.080 --> 07:57.280
And I'm going to take that player value and transform it to upper case.

07:57.330 --> 08:01.710
So this is the player's selection so just do P S for short.

08:01.710 --> 08:08.910
And we're going to take player and we're going to use with what we just saw so character at and position

08:08.990 --> 08:09.710
zero.

08:09.840 --> 08:16.680
And we're going to also transform it to uppercase and we're going to use p s and we're going to compare

08:16.680 --> 08:18.390
it to the computer selection.

08:18.390 --> 08:20.490
So let's set up computer selection.

08:20.490 --> 08:29.880
So variable computer selection and this one is going to use computer character at position 0 and it's

08:29.880 --> 08:36.450
also going to transform it to uppercase so it doesn't actually matter whether it's the players entered

08:36.450 --> 08:38.520
in lower case or upper case.

08:38.520 --> 08:41.620
It's going to transform them.

08:41.650 --> 08:48.800
So this is where we need to start looking at how we can tell if the player won or if the computer won.

08:48.880 --> 08:53.710
And this is where we're going to use our conditional statements and take what we've learned earlier.

08:53.710 --> 08:56.670
It's a great exercise in applying this logic.

08:56.800 --> 09:02.020
So what I want you to do now is to try it out and I'm going to show you the solution coming up in the

09:02.020 --> 09:03.060
next lesson.

09:03.070 --> 09:07.260
So the first one that we need to look at is we need to check if it's a tie.

09:07.270 --> 09:15.080
So compare P Es to C S and see if they're equal and if they are equal that we know that it's a tie and

09:15.250 --> 09:16.130
owls.

09:16.240 --> 09:23.650
So if they're not equal then we know that 1 player 1 and 1 player lost and we need to be able to determine

09:23.650 --> 09:24.090
that.

09:24.170 --> 09:26.040
And we can do that with conditions.

09:26.050 --> 09:29.380
So the first line would be comparing C-s to us.

09:29.470 --> 09:30.280
And then the next one.

09:30.290 --> 09:33.430
B b checking if S is a rock.

09:33.550 --> 09:39.370
And if it is then we check to see if C-s did scissors.

09:39.460 --> 09:41.540
And then we know that the player wins.

09:41.650 --> 09:46.150
So we're going to be doing all of the conditions and checking to see if the player wins and if the player

09:46.150 --> 09:48.480
does win then we're going to transform win.

09:48.500 --> 09:54.790
True and that's how we get to know that if the player won or lost at the end of all of those conditions.

09:54.790 --> 09:56.480
So that's coming up in the next lesson.

09:56.770 --> 10:00.880
And one more thing before we finish up this lesson so I just spotted an error.

10:00.880 --> 10:03.410
So both of these are actually methods.

10:03.430 --> 10:08.110
So we've got to make sure that we use the rounded brackets at the end of those upper case.

10:08.140 --> 10:09.980
So make sure that we save it.

10:10.000 --> 10:14.740
Try it out and we know that right now we can't enter that in.

10:14.740 --> 10:16.300
So I'm going to see p s.

10:16.300 --> 10:19.960
So we're getting it as R C S as s.

10:19.990 --> 10:27.480
So now you can go ahead and make those comparisons of p s and see s to see if they match in upcoming

10:27.490 --> 10:28.110
lesson.

10:28.120 --> 10:29.380
I'm going to show you the solution

10:32.520 --> 10:38.040
and we're going to work out all of the logic to determine who won and who lost in this game of rock

10:38.040 --> 10:39.180
paper scissors.
