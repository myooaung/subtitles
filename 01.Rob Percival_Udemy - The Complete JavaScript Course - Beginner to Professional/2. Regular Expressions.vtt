WEBVTT

00:00.570 --> 00:07.160
Welcome back in in this lesson we're going to be looking at a regular expressions also known as reggae.

00:07.200 --> 00:09.130
So that's a shorter format.

00:09.270 --> 00:14.990
And basically what it means is that this gives us the ability to look for patterns.

00:16.680 --> 00:19.170
Located within characters.

00:19.170 --> 00:22.920
So let's go ahead and create a button here.

00:23.370 --> 00:32.530
So do will do an input button type button and then on click we're going to run our function and the

00:32.530 --> 00:36.640
function is actually going to run our regular expression.

00:36.640 --> 00:39.610
So let's do an on click event.

00:42.310 --> 00:50.880
And we'll just call it my fun and give it a value of click so we can close that off.

00:50.950 --> 00:57.130
So now we can initiate a function and basically we can get that output there within that aged him out.

00:57.310 --> 01:05.180
So let's also set up that put so that we can simply call to that to output content into their SO GET

01:05.260 --> 01:06.950
element by ID.

01:07.180 --> 01:12.330
And we're just going to grab it put it that way we're all ready to go.

01:12.490 --> 01:20.650
So the next step is to create our regular expression and first of all we actually need some string value

01:20.670 --> 01:26.140
in order to work with it so we do need a set of characters and then we can pattern match on that set

01:26.140 --> 01:30.070
of characters using javascript.

01:30.100 --> 01:36.310
So I got to set up a set of characters and I'm just going to create a basic default string so I'll have

01:36.310 --> 01:37.980
a bunch of text in there.

01:38.050 --> 01:45.580
And also I'm going to write javascript within here and then we can also have some numbers and so on

01:45.900 --> 01:48.500
so that we have something to that we can work with.

01:48.750 --> 01:50.450
So let's save that.

01:50.500 --> 01:57.370
So when we click the button when we run the function called my fun then we're going to do our regular

01:57.370 --> 02:02.890
expression and we're going to compare some of the values located within string and we're going to try

02:02.890 --> 02:04.430
to identify a pattern.

02:04.570 --> 02:08.860
So the pattern that we want to pull out is we want to pull out javascript out of there.

02:10.530 --> 02:16.080
So next we need to identify a pattern so I'm going to set up a pattern within this function I'll give

02:16.080 --> 02:26.440
a variable of P and your reg X is identified with a slash slash and then what we're looking for is within

02:26.440 --> 02:28.040
sight of those slashes.

02:28.280 --> 02:34.980
So we identify the reg X and if we were looking for javascript we'll pull that out and we'll place that

02:35.020 --> 02:36.890
within the two slashes.

02:37.000 --> 02:40.580
And next let's do our regular expression.

02:40.750 --> 02:48.190
So we do have two options for our regular expression and we can construct it as a literal or we can

02:48.190 --> 02:49.840
construct it as an object.

02:49.880 --> 02:53.660
So this format here so this is the literal construction.

02:53.680 --> 02:58.600
So basically we have our pattern and then we have some space here for attributes.

02:58.660 --> 03:03.950
So I'm not going to add the attributes in yet and next let's do the check.

03:04.150 --> 03:05.850
So this one will do our.

03:05.860 --> 03:09.110
And we're going to match for the value.

03:09.130 --> 03:16.290
So we're going to look within string so it'll look within this string and we're going to try to match

03:18.690 --> 03:25.140
this pattern so pattern that's contained within a variable b and then what we're going to do first what

03:25.140 --> 03:26.910
console log out are.

03:26.940 --> 03:28.920
So see what we get back.

03:28.920 --> 03:37.570
So let's go ahead and refresh the page open up our dev tools and then click the button and we see that

03:37.630 --> 03:41.880
we actually get quite a bit of information here within the response.

03:41.890 --> 03:47.470
So first of all we get zero so we get that string that we're looking for so that basically means that

03:47.470 --> 03:51.520
it was found and if for instance it's not found.

03:51.520 --> 03:52.990
So this is actually going to be

03:56.190 --> 04:03.360
looking for javascript's So this particular set of characters and it is going to be case sensitive.

04:03.540 --> 04:09.060
So now when I go back in if I refresh it we see what happens and we get return back.

04:09.060 --> 04:11.860
No because we weren't able to find that result.

04:12.060 --> 04:16.760
So we've got to look quite a few options within the attributes that we can do.

04:17.340 --> 04:23.660
So if we specify within the attributes that's going to mean that it's case insensitive.

04:23.670 --> 04:28.670
So let's refresh that and we see that now once again we're able to find that pattern.

04:28.830 --> 04:34.650
So no longer are we looking for the case and we're essentially returning back that notch.

04:34.800 --> 04:39.690
So what happens if there's multiple matches within a strings of javascript.

04:39.810 --> 04:44.950
A number of times and I'm also going to change the case within here as well.

04:45.450 --> 04:48.130
So we also have a way to do that as well.

04:48.210 --> 04:54.870
So first of all let me save that and refresh it click it and we see that we still get that one index

04:54.870 --> 04:57.320
being returned so we've got an index of 20.

04:57.360 --> 04:59.660
So we know that it's within the string.

04:59.670 --> 05:02.230
It starts at the index of 20.

05:02.430 --> 05:08.250
And this format we can actually count the amount of characters and then we actually know where it ends

05:08.340 --> 05:09.680
within the string.

05:09.870 --> 05:13.020
And then we also have information within the input.

05:13.140 --> 05:19.270
So the input essentially is the return back value of the string itself.

05:19.290 --> 05:24.750
So if we want to return back all of the matches then we could use g.

05:24.750 --> 05:30.010
So let's go back and refresh and click again and we see that we get null.

05:30.210 --> 05:33.340
And that's because we removed the Keys says part.

05:33.450 --> 05:37.670
So if we do g let's refresh it and see what happens.

05:37.680 --> 05:41.400
And now this time we see that we got four results.

05:41.400 --> 05:48.490
So we've got an array back and we've got four results returning back this string.

05:48.510 --> 05:52.810
So these are the most popular types of modifiers that you're going to find added in.

05:52.950 --> 06:00.420
And basically sometimes are called attributes or modifiers and they help you identify what you want

06:00.420 --> 06:03.070
to return back within your match.

06:03.870 --> 06:10.650
So there's also a really good tool online and I know initially Reg X there is it seems very confusing

06:10.830 --> 06:15.260
because there's a lot of options to it and there really truly is a lot of options.

06:15.390 --> 06:20.600
So there is a Web site that I'd like to recommend and it's Regg X or dot com.

06:20.700 --> 06:26.670
And this actually gives you the ability to write Reg X. So we see that this pattern here we're matching

06:26.700 --> 06:34.890
a to z and we're taking the whole word character and we're matching one or more so afterwards after

06:34.890 --> 06:35.990
we've found one.

06:36.000 --> 06:43.570
So basically we're able to return back all of these values that have started out with an uppercase letter.

06:43.620 --> 06:50.510
So a to z we can change this to lower case and now we can see that all of the words.

06:50.550 --> 06:57.090
So space separated that start with a lower case letters so where they start with the lower case and

06:57.150 --> 07:04.140
we can also include the uppercase and lowercase together so that way everything gets highlighted there

07:04.370 --> 07:08.520
and we can also be more specific so we don't have to go to a to z.

07:08.550 --> 07:15.540
We can go A to C and I'm just going to remove the lower case one and see that these are the only two

07:15.540 --> 07:21.510
that match that particular expression where we're looking for uppercase C uppercase a.

07:21.510 --> 07:27.260
So any of the words that are actually matching the upper case are uppercase C are going to be returned.

07:27.270 --> 07:35.720
We don't have to even start with a we can do C to W and we can see all of these expressions.

07:35.820 --> 07:41.910
All of these words actually match the regular expression we can get rid of the word matching.

07:41.910 --> 07:44.410
So this way we can look for particular letters.

07:44.520 --> 07:46.970
So this is what we essentially did earlier.

07:47.010 --> 07:51.410
Within this lesson where we had looking for a particular pattern.

07:51.570 --> 07:58.380
And in this case we're matching a set of words and we can remove this as well and we can do the same

07:58.380 --> 08:00.300
thing that we were looking for earlier.

08:00.320 --> 08:05.930
But we don't have javascript here but I can look for a particular word and if I just do.

08:05.930 --> 08:10.650
Gee this is going to return back that last match of the word.

08:10.890 --> 08:17.970
So if I want to return back the different different cases of it.

08:18.000 --> 08:23.350
So if I change this to lower case i can update this to include I.

08:23.980 --> 08:25.360
And they need to get rid of that.

08:25.420 --> 08:27.330
They're.

08:27.560 --> 08:32.480
So it's not going to be just gee it's going to be also I and I don't know if they're allowing us.

08:32.630 --> 08:37.390
So we need to ignore the case so we get those two attributes that we can add him.

08:37.400 --> 08:40.640
So what I want you to do now is try this out for yourself.

08:40.760 --> 08:44.830
So create a string or go over to reg X..

08:44.870 --> 08:50.990
Dot our dot com Reg X are dot com and try it for yourself.

08:51.110 --> 08:59.120
Try to find and pick out some of the words here located within this text and also open up your editor

08:59.330 --> 09:03.080
and try to within that same format that I was using.

09:03.080 --> 09:06.880
So go ahead and you can also what was included here.

09:06.890 --> 09:13.190
You can bring back into your own editor and as well try that expression out and see what kind of patterns

09:13.190 --> 09:15.840
you can match and which words she can pull back.

09:15.890 --> 09:22.190
And then also try to pull out the multiple matches so try to pull back the G and then even loop through

09:22.250 --> 09:30.090
those results that are being returned back and even I would put them within your within your console.

09:30.230 --> 09:31.420
So go ahead and try that.

09:31.460 --> 09:37.850
And I'm going to quickly show you because I've already got the set up how to do the loop on that and

09:38.270 --> 09:39.530
go ahead try it for yourself.

09:39.530 --> 09:45.500
Pause the video and then I'll show you how we can put these values that we're returning back since we've

09:45.500 --> 09:48.300
had multiple notches.

09:48.330 --> 09:50.280
So in order to output it.

09:50.280 --> 09:56.880
So basically we've created an array here and we can loop through the array and I'm going to show you

09:56.940 --> 09:59.500
another way to loop through an array.

09:59.640 --> 10:04.740
Since that we've already looked at several different ways that we can do loops within arrays.

10:04.800 --> 10:13.170
So there's another way to look through it where we can loop through an array by taking the array and

10:13.230 --> 10:15.040
using for each.

10:15.390 --> 10:22.530
And basically this allows us to execute through an array and we can set up a function here in order

10:22.530 --> 10:25.350
to handle the returned values.

10:25.440 --> 10:29.640
So I'm going to just use the within here.

10:29.650 --> 10:35.640
This is where we're actually going to be looping through all of those return values.

10:35.820 --> 10:38.490
And within here I can just simply put.

10:38.660 --> 10:44.430
So let's go back out and refresh it and click it again and this time we see that we're able to output

10:44.520 --> 10:46.580
all of the returned results.

10:46.710 --> 10:57.040
So this is a quick way that you can handle and loop through all the values within the array using for

10:57.040 --> 10:58.020
each method.

10:58.210 --> 11:00.510
And go ahead and try that one as well.

11:00.550 --> 11:01.930
If you haven't already.

11:02.110 --> 11:07.300
And in the next lesson we're going to dive deeper into regular expressions and show even more you can

11:07.300 --> 11:09.260
do with regular expressions so so coming up.
