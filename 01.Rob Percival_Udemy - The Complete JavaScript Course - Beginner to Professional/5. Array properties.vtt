WEBVTT

00:01.210 --> 00:02.250
Well come back.

00:02.290 --> 00:07.140
And in this lesson we're going to look at some array properties.

00:07.240 --> 00:15.190
So earlier we saw that we can list an array here within our cons. And we've got all of the items listed

00:15.190 --> 00:16.660
with their index values.

00:16.750 --> 00:20.330
And then we've got this property here at the end called length.

00:20.530 --> 00:27.230
So if we actually specify length we get the value of 4.

00:27.280 --> 00:32.470
So you can actually pull back this information of length and use it within our code.

00:32.470 --> 00:39.660
So notice as well that within the prompt I have a length of 1 to 4.

00:39.700 --> 00:47.470
So I can do this a little bit smarter as well where I can make it dynamic and I can use the value of

00:47.800 --> 00:52.770
TASC length directly within that prompt.

00:53.200 --> 01:01.210
So now if I go back here and if I refresh if it still says 4 but if I go ahead and if I update that

01:01.270 --> 01:02.140
array.

01:02.200 --> 01:13.830
So if I go ahead and if I add in another item in the array sleep and I go back out here and if I refresh

01:13.830 --> 01:16.800
it that value actually dynamically updated.

01:16.980 --> 01:20.270
Because this isn't a static value it's a dynamic value.

01:20.400 --> 01:26.460
And this is one of the things when you are programming you try to make your applications as dynamic

01:26.490 --> 01:27.540
as possible.

01:27.600 --> 01:32.350
So basically that means that we're not setting static values.

01:32.490 --> 01:38.150
And as we change we're expecting our values or length of our arrays to change.

01:38.190 --> 01:44.220
We're expecting new items to be added in and we're also expecting maybe the task lists are going to

01:44.220 --> 01:45.400
be indifferent.

01:45.550 --> 01:52.020
You might have more tasks you might have less tasks and so depending on the person we need to have this

01:52.110 --> 01:55.370
ability to pick up that dynamic value.

01:55.470 --> 01:59.110
So this always reflects the number of elements in the array.

01:59.280 --> 02:03.830
And basically it's the length of the array minus one.

02:03.870 --> 02:06.710
So it returns all the number of elements in the array.

02:06.840 --> 02:13.480
And in order to get the last item in the array then we need to minus one off of the length.

02:13.680 --> 02:18.720
And that's so we can always automatically pick up the last item in the array.

02:18.720 --> 02:27.470
So for this instance I'm going to just comment to some of this code that we've written here and I'm

02:27.470 --> 02:28.710
going to update this.

02:28.710 --> 02:34.310
To say that we're going to show the last item within that array.

02:34.380 --> 02:37.720
So what I want you to do now is to pause the video.

02:37.740 --> 02:46.590
Open up your console or open up your editor and I want you to select the last item in this array using

02:46.680 --> 02:51.300
the task the array length property.

02:51.300 --> 02:58.140
So try and just print that into your console and see if you can get that to produce the value of sleep

02:58.320 --> 03:02.120
within the console without actually writing sleep on the console.

03:02.130 --> 03:08.430
So pause the video try it out and I can assure you the solution coming up.

03:08.430 --> 03:11.230
So you had the opportunity to try that out.

03:11.340 --> 03:15.510
So I got a refreshed this page and I do need to save this first.

03:15.690 --> 03:17.630
And we're just refreshed now.

03:17.940 --> 03:20.590
So we don't have those props coming up anymore.

03:20.790 --> 03:28.200
And what we want to do is in the console we want to display sleep without actually writing sleep and

03:28.710 --> 03:32.940
we don't actually know how many items are in this array.

03:33.060 --> 03:37.110
So obviously we could count them but let's make this dynamic.

03:37.220 --> 03:42.770
So first of all let's use console log because we know we need to put that information in the console.

03:42.780 --> 03:44.120
So that's the first step.

03:44.220 --> 03:48.260
The next step is to select the task array.

03:48.480 --> 03:54.600
So when we know we need to output a value from the task array and now we need to determine what the

03:54.600 --> 04:02.970
index value is of the last item and we know that we have a value that we saw earlier where we can do

04:02.970 --> 04:04.410
task length.

04:04.530 --> 04:11.430
But we know that this length is going to be the actual count of the items in the array and it's going

04:11.430 --> 04:14.280
to be higher than the last item.

04:14.310 --> 04:22.870
So we know that if we subtract 1 then technically we should have the last item from the array.

04:23.130 --> 04:28.620
So let's try the saved go back quote refreshed and indeed we do get sleep.

04:28.890 --> 04:35.090
So this gives us the ability to select the last item if we want to select the second last item and this

04:35.100 --> 04:40.740
can get a little bit risky because if we only have one item in there then it's not going to work.

04:40.920 --> 04:47.490
But because we've got more than this amount of items in the array we can still get that second last

04:47.490 --> 04:50.640
item got got to work should be going to work.

04:50.680 --> 04:52.030
Let me update that.

04:52.470 --> 04:58.610
So this is the way that we can use length and dynamically pullback values.

04:58.620 --> 05:03.100
There's another thing within our arrays that I want to mention.

05:03.180 --> 05:10.440
So we saw earlier how we can update items within the array and all we need to do is specify the index

05:10.440 --> 05:11.140
value.

05:11.390 --> 05:19.810
And we saw that we could do something like task and we can specify if we wanted to update index number

05:19.810 --> 05:28.960
three we could do something like this and we could equal it to new value and this would update that

05:29.970 --> 05:37.140
third item third index item within that race that would be got to work or go to work.

05:37.320 --> 05:46.010
And we see that when we pulled up back there and we see that now we're able to update that new volume.

05:46.060 --> 05:53.500
So one of the other things that we can do for arrays is we can specify that the index.

05:53.500 --> 05:57.540
So we can pick a really high index we can do something like 100.

05:57.760 --> 05:59.610
So what do you think is going to happen here.

05:59.650 --> 06:09.030
And I'm just going to set that to be a negative one so that you can see how this dynamic equation calculates

06:09.370 --> 06:11.740
to still get that last value.

06:11.740 --> 06:13.550
So now let's try this out.

06:13.570 --> 06:15.580
So what do you think is going to happen here.

06:15.670 --> 06:22.640
Do you think that it's going to add in a bunch of blank items into the array going all the way up to

06:22.640 --> 06:23.270
100.

06:23.360 --> 06:25.090
Because we know that this is zero.

06:25.130 --> 06:29.920
This one is one that's two that's three and this is four.

06:29.960 --> 06:32.230
But what are we going to do with 100.

06:32.230 --> 06:33.170
So let me show you.

06:33.230 --> 06:35.330
And also I want to console log.

06:35.350 --> 06:35.870
OK.

06:36.080 --> 06:41.390
All of that entire array so that this will give you a better illustration of actually what's happening

06:41.420 --> 06:42.840
behind the scenes.

06:43.100 --> 06:50.210
So it's like that would go back here refreshed the page and we see that now we actually have a length

06:50.270 --> 06:58.460
of a hundred in one because we actually add it in 95 undefined values that are available within the

06:58.460 --> 06:59.070
array.

06:59.240 --> 07:06.310
So if we were to actually pull back tasks and we wanted to see task 44 it's undefined.

07:06.560 --> 07:14.420
We can go in there and we can define cost 44 and we can equal it to new or whatever we want to call

07:14.420 --> 07:14.780
it.

07:14.900 --> 07:17.260
And now list that array.

07:17.270 --> 07:23.420
Again I've got thirty nine undefined before I've got that.

07:23.750 --> 07:25.040
The value of new.

07:25.160 --> 07:27.890
And then I've got another fifty five undefined.

07:27.920 --> 07:30.360
And then I've got that new value at the end.

07:30.440 --> 07:37.490
So this is an important thing to know that when you do dynamically assigned an index value and you're

07:37.490 --> 07:46.870
just picking it out of it not relevant to how many items are already in that particular that particular

07:47.470 --> 07:53.800
array then you're going to end up with this where you've got a bunch of undefined essentially placeholders

07:54.130 --> 07:56.620
that get added in to that array.

07:56.740 --> 08:04.240
And these are all items so the length of the array reflects the last index value that we've set within

08:04.240 --> 08:05.160
the array.

08:05.560 --> 08:10.640
So now I want you to pause the video and I've got another task for you.

08:10.750 --> 08:17.360
And in this one what I want you to do is to add a new item.

08:18.640 --> 08:19.540
Just beside.

08:19.540 --> 08:20.530
Sleep here.

08:20.710 --> 08:28.360
So we're going to add a new item within our task array and place that besides sleep.

08:28.360 --> 08:35.710
So not overwriting any of the ones in there and do it dynamically again using the Task length because

08:35.920 --> 08:41.890
we don't want to in case our array changes we've got new items coming in there.

08:41.890 --> 08:45.700
We can't be sure which the last index value is going to be.

08:45.760 --> 08:48.140
So let's just out at the end of task.

08:48.280 --> 08:58.600
So Plus the video and I want you to write that out and set a value here that says watch TV and I'm going

08:58.600 --> 09:01.060
to show you the solution coming up.

09:01.060 --> 09:06.790
So we had the opportunity to try to say within the editor and let me show you what the solution is and

09:06.790 --> 09:10.740
the solution to this is actually going to be really simple and straightforward.

09:10.840 --> 09:17.200
I can simply do task length because we know that the task length is going to be all the items in there.

09:17.290 --> 09:23.290
So basically this is going to be the next available item within the array.

09:23.410 --> 09:27.880
And we did say that we want to change this to watch TV.

09:27.970 --> 09:29.970
So let's see how this turns out.

09:29.980 --> 09:37.300
So let's go and refreshed and indeed we were able to add in a fifth item in there just by using the

09:37.300 --> 09:38.280
Task length.

09:38.410 --> 09:40.890
And I'll just show you how this works as well.

09:40.900 --> 09:49.510
So if I wanted to add in even more items I can do task length again and I can be called a next item

09:49.510 --> 09:50.670
or something like that.

09:50.800 --> 09:57.940
And then if I listo that array we can see that we're able to add in another item at the end of the array.

09:57.940 --> 10:01.230
Now there is a better way to work with your arrays.

10:01.360 --> 10:07.770
I reuse have builtin methods and I'm going to be showing you how to use those in the upcoming lessons.
