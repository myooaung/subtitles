WEBVTT

00:00.720 --> 00:06.330
This section we're going to be showing you how you can store multiple values within one variable and

00:06.330 --> 00:11.930
then also have to return those values and utilize those values within your javascript code.

00:11.970 --> 00:14.420
And this is where arrays come in.

00:14.430 --> 00:20.790
Arrays are a great place to store multiple values within one variable and you're going to really see

00:20.790 --> 00:27.240
the power that's available within arrays as well as objects so objects are very similar to arrays because

00:27.240 --> 00:33.360
they allow you to hold multiple values within that one variable and then call to those values as needed

00:33.420 --> 00:34.650
within your code.

00:34.650 --> 00:39.780
And there's a lot of benefits to adding your values into an array.

00:39.780 --> 00:46.770
Or an intern object because this is grouping it all together and giving you that access from one call.

00:46.770 --> 00:53.310
You can also explore different arrays and how to store values in multiple different formats so you can

00:53.310 --> 01:01.200
store them as strings variables booleans and you can also store objects and arrays and arrays within

01:01.260 --> 01:06.200
objects so this makes it really powerful and you can really expand on that.

01:06.300 --> 01:08.880
And we're going to create our first application.

01:08.940 --> 01:11.120
So this is a mini application.

01:11.130 --> 01:13.600
It's going to be a to do a to do list.

01:13.620 --> 01:19.560
It's going to be built from scratch and it's going to allow you to see the interaction that's available

01:19.770 --> 01:28.350
within an array and how arrays can store task information and then also how we can put that information.

01:28.350 --> 01:33.930
So once we put it into array how we can get it out of that array and make use of it within our code

01:34.530 --> 01:41.130
we're also going to look at different ways how arrays can default default values and how you can get

01:41.130 --> 01:42.250
that information.

01:42.330 --> 01:45.370
Default values that are contained within an array.

01:45.390 --> 01:52.720
So each array actually get its length Baxi you can just simply call to the array name and a length and

01:52.920 --> 01:55.550
tell you how many items are contained within there.

01:55.680 --> 02:02.640
So this is the beginning of where arrays become really useful and powerful because not only can you

02:02.640 --> 02:07.110
get the length but there's a lot of builtin methods to use arrays.

02:07.230 --> 02:11.180
So you get a lot of power with putting your data within an array.

02:11.190 --> 02:17.640
We're also going to be building out a guessing game where you have to guess a value that is contained

02:17.640 --> 02:18.730
within the array.

02:18.810 --> 02:23.370
So you have to guess that index value of an item within the array we're going to be building this from

02:23.370 --> 02:29.280
scratch with the content we're learning within this section and some of the content from the previous

02:29.280 --> 02:29.980
section.

02:30.060 --> 02:34.560
We're also going to introduce you to how to randomize a value.

02:34.650 --> 02:35.730
So that's math.

02:35.790 --> 02:43.560
It's a built in method in javascript and it's really useful to create random information and a lot of

02:43.560 --> 02:45.370
times it's used within games.

02:45.420 --> 02:52.060
So we're adding it in within the section to make things more interesting as we go along and create exercises.

02:52.260 --> 02:54.550
And it's all about practice.

02:54.570 --> 03:00.360
So make sure that you take the opportunity to practice working with the Rays within this section so

03:00.360 --> 03:02.320
you can get really familiar with them.

03:02.370 --> 03:09.300
You can see how you can manipulate and update the contents of those arrays and also see how arrays work

03:09.570 --> 03:14.970
and how they're ready and all the different functionality that you have in order to interact with your

03:14.970 --> 03:17.430
content that's contained within those arrays.

03:17.580 --> 03:23.100
So you can access that information check if the values are actually contained within the array.

03:23.160 --> 03:28.980
And that's another really useful part of array because you can check to see if an item or if a value

03:29.010 --> 03:30.850
is already sitting in the array.

03:31.080 --> 03:34.730
And this is where we're also going to create another exercise.

03:34.800 --> 03:37.260
And this is going to be the array updater.

03:37.320 --> 03:43.710
So the user input is going to be used in order to find values contained within that array and we're

03:43.710 --> 03:49.920
going to create a dynamic arrays are going to be updating that array dynamically looking at user input

03:49.920 --> 03:53.600
from the prompt which we learned in one of the earlier lessons.

03:53.760 --> 03:59.040
And then we're going to look at nested arrays and multi-dimensional raise where you can store even more

03:59.040 --> 04:05.670
information and retrieve that information and make arrays even more valuable.

04:05.670 --> 04:12.030
So getting started with javascript to raise and also how you can loop through that data that's contained

04:12.030 --> 04:12.850
within the array.

04:12.960 --> 04:16.310
So you can irritate through that array returning.

04:16.350 --> 04:19.680
All of that values and data that's contained within there.

04:19.800 --> 04:26.220
And then also introducing you to javascript objects how we can store lots of information in that one

04:26.280 --> 04:33.250
variable and then get data from javascript objects and make use of it within your javascript code.

04:33.360 --> 04:40.000
Javascript objects can be used to manipulate data and retrieve values and a whole lot more.

04:40.020 --> 04:45.840
So we're going to learn how to retrieve javascript objects make use of javascript objects and also loop

04:45.840 --> 04:50.090
through the contents and retrieve information contained within those objects.

04:50.220 --> 04:56.130
So you're going to see how javascript objects and Javascript arrays can be combined together to provide

04:56.130 --> 04:58.750
you even more power with that data.

04:58.770 --> 05:04.390
So when you're ready let's creating and working with javascript and arrays and.
