WEBVTT

00:00.560 --> 00:06.620
Welcome back in this lesson we're going to be introducing you to functions and functions are one of

00:06.620 --> 00:11.360
the most important parts of javascript and coding in general.

00:11.420 --> 00:18.020
Basically what a function does is it allows you to run a piece of code over and over again simply by

00:18.020 --> 00:19.850
calling that piece of code.

00:21.110 --> 00:23.420
So let me give you an example of function.

00:23.480 --> 00:30.010
So you can declare a function or you can define a function by doing using the word function and then

00:30.020 --> 00:31.090
giving it a name.

00:31.100 --> 00:38.150
So I call it my function and using the Round two brackets and with it here we can send some arguments

00:38.150 --> 00:41.750
or parameters and then within the curly brackets.

00:41.750 --> 00:44.040
So this is where all of our code will run.

00:44.180 --> 00:50.360
I'm going to do an alert and actually an alert is a built in function within javascript because you're

00:50.360 --> 00:56.240
going to see the format is the same thing that we use when we're invoking functions.

00:56.360 --> 01:03.200
Now in order to run this function Let me show you what happens we'll save it and refresh it and we don't

01:03.200 --> 01:05.730
actually see anything happening as of yet.

01:06.020 --> 01:09.040
And that's because we actually have to call to the function.

01:09.170 --> 01:13.970
So much like variables in order to see what's in them we need to call out to a function.

01:13.970 --> 01:18.070
So I'm going to open up the console and I'm going to type in my function.

01:18.230 --> 01:25.220
So initially when I type in my function it actually shows me the function code and that's because functions

01:25.310 --> 01:31.090
do need these rounded brackets in order to actually invoke and run a function.

01:31.100 --> 01:37.610
So now when I hit Enter we see that we're running that piece of code that has alert and what's happening

01:37.610 --> 01:40.210
is the alert button is popping up.

01:40.430 --> 01:44.990
And the nice thing about functions is we could use them over and over again.

01:45.140 --> 01:50.150
And we see here within the code that On-Call have this function we see that within the function it's

01:50.150 --> 01:56.630
got a piece of code that says alert with the popup window of hello and we can't run it over and over

01:56.640 --> 01:59.910
you know there's a lot of benefits to being able to do this.

01:59.930 --> 02:05.640
And I'm going to be showing you a lot of examples of how to use functions within your coding and we're

02:05.640 --> 02:11.610
also going to revisit some of the coding examples that we looked at earlier because functions are going

02:11.610 --> 02:13.970
to make them a whole lot better.

02:13.980 --> 02:18.750
So go ahead and open up your editor and create your first function.

02:18.750 --> 02:25.720
So do that by declaring a function using the word function and then give it a name.

02:25.770 --> 02:32.540
So this name can be anything you remember it's the same rules as we have with variables.

02:32.670 --> 02:35.920
So we do need to have that same naming convention.

02:35.940 --> 02:42.360
We also need to be mindful of the fact that this is case sensitive just like the variable names so keep

02:42.360 --> 02:45.710
it unique keep it semantic and keep it meaningful.

02:45.780 --> 02:53.670
And also don't do things where you've got a number in front or any other characters other than the dollar

02:53.670 --> 02:59.320
sign or underscore So the rules are the same as if we were defining variables.

02:59.480 --> 03:01.030
But this is a function.

03:01.170 --> 03:06.970
And then you do need to include the rounded brackets and then place some code between the curly brackets.

03:06.990 --> 03:07.980
So go ahead.

03:07.980 --> 03:09.050
Pause the video.

03:09.060 --> 03:15.430
Create your first function and then open up the console and call that function get it to execute it.

03:17.000 --> 03:22.150
And remember that simply writing the function doesn't actually make and run the code.

03:22.190 --> 03:30.210
You actually have to call on that function after you define the function so you got an opportunity to

03:30.210 --> 03:31.230
try it out.

03:31.290 --> 03:37.870
And if you actually want to invoke it using directly within your code all you have to do is call to

03:37.890 --> 03:42.410
the function via the function name and the same way that you did it with in the console or that we saw

03:42.420 --> 03:50.550
we did it within the console is by using my function and then the rounded brackets and what functions

03:50.550 --> 04:00.630
do is they allow us to reduce the repetition by turning over the ability to run code over and over again

04:01.170 --> 04:07.400
essentially allow us to have a little mini program in here so we can have any number of statements in

04:07.410 --> 04:13.540
here that run all of the code that we want to invoke at a given time within our script.

04:13.680 --> 04:20.340
So it actually gives us full control to call that function at any time and we can call it a number of

04:20.340 --> 04:21.370
times as well.

04:21.440 --> 04:27.360
And as we saw so even if we do it within our code we could have a function call that a number of times

04:27.660 --> 04:33.870
and we see that every time that the function is called then we actually get all of that code that's

04:33.870 --> 04:35.760
being run within the function.

04:35.760 --> 04:43.680
So we see that we've gotta run three times there so when you do declare function make sure that you're

04:43.680 --> 04:46.570
using the function keyword.

04:46.750 --> 04:49.390
You're also doing an a name for the function.

04:49.420 --> 04:50.730
So this is the key word.

04:50.740 --> 04:52.360
Use the function keyword.

04:52.480 --> 04:54.000
Then give it a name.

04:54.010 --> 04:58.830
Use the parentheses where you can contain multiple arguments and information.

04:58.990 --> 05:01.810
And we are going to be looking at that in the upcoming lesson.

05:01.960 --> 05:08.110
And then lastly do the pair of curly brackets containing all of the statements that you want to run.

05:10.310 --> 05:14.350
So let's set up and grab our variable output.

05:14.370 --> 05:22.430
So we're going to create an object doing document and get element by id and then grabbing that output

05:22.550 --> 05:27.470
object from our age to whom else that's going to grab this one over here and that's going to give us

05:27.470 --> 05:30.040
the ability to output content to it.

05:30.200 --> 05:34.810
And then now with him here I'm going to update and I'm going to introduce to you now.

05:35.000 --> 05:37.540
And I just really hope.

05:39.230 --> 05:46.250
And we'll just do a line break there so that we can see that every time we run this function we're actually

05:46.250 --> 05:52.660
up to outputting to Page to know and if we want to the age to mail we can do it that way.

05:52.730 --> 06:00.230
And now I can also open up my console and I can fire off that function which gives me the ability to

06:00.410 --> 06:02.020
simply output hole.

06:02.210 --> 06:04.830
So possibilities are limitless.

06:04.880 --> 06:07.350
You can contain a lot of information with a function.

06:07.520 --> 06:13.050
And we use that code any number of times at any point within your script.

06:14.080 --> 06:20.440
So we also see that when I type in the function here I get returned back on to find.

06:20.530 --> 06:25.580
And that's because every function actually returns back a value.

06:25.750 --> 06:29.300
And I'm going to show you how we can customize that return back value.

06:29.380 --> 06:31.060
Coming up in the next lesson.

06:31.060 --> 06:35.630
But it's important to note that they do return back.

06:35.880 --> 06:37.730
They do return back of value.

06:37.740 --> 06:43.500
So even if it's void or if it's undefined we still get some type of value in return.

06:43.710 --> 06:46.990
So we'll take a closer look at that coming up in the next lesson.
