WEBVTT

00:00.670 --> 00:04.470
Welcome back in this lesson we're going to build a mini calculator.

00:04.470 --> 00:09.720
So the first thing that we need to do so we've got our outputs set up but we need some more inputs so

00:09.720 --> 00:17.010
we need a way to grab some of the values and we're going to simply be using some H to melt your input

00:17.010 --> 00:18.330
type text.

00:18.470 --> 00:25.410
And we just need to assign some values so this can be number one when you have some ideas in order to

00:25.440 --> 00:30.390
be able to grab those values so you can also get the labels first

00:33.070 --> 00:34.980
and then we could do a second.

00:34.990 --> 00:36.720
So that would be the second number.

00:38.250 --> 00:40.810
And let's start a new line for this one.

00:41.760 --> 00:43.120
So number two.

00:43.350 --> 00:48.500
So that gives us two numbers and then we've got our output here.

00:48.510 --> 00:53.680
So let's start this on a new line still line breaks there for the output.

00:53.700 --> 00:56.940
So we refreshed not much happening yet.

00:57.120 --> 01:00.250
So I do want to create several different buttons.

01:00.270 --> 01:02.770
So in math we know we can.

01:02.800 --> 01:08.130
So the set up I put out and I give this function a name.

01:08.240 --> 01:16.350
And so what I want to do is I want to have the ability to grab the first number and add them together

01:16.410 --> 01:20.760
and then create an output that can that the user can see.

01:21.090 --> 01:29.850
So we want to get the two numbers together and let me actually place this underneath so place underneath

01:29.850 --> 01:31.800
there and we don't need it.

01:32.130 --> 01:33.970
So just refresh that.

01:34.290 --> 01:42.090
So I want to have whatever the first number is I want these people then two or three for click and then

01:42.120 --> 01:48.690
have them together and the output displayed here with an output div element.

01:49.080 --> 01:52.440
So now let's build our javascript for this.

01:52.530 --> 01:55.710
So we know we need to grab some of these values.

01:55.710 --> 01:58.750
So the first value that we need to grab is output.

01:58.890 --> 02:04.530
So this was our container that we've been using and we've just been using the document get element by

02:04.530 --> 02:11.900
id and then selecting the output element and placing that with an output object.

02:12.150 --> 02:19.180
So this is what I do is I want to grab some of the numbers that we have here and I want to set this

02:19.190 --> 02:26.790
up as objects as well and they're actually going to be changing as we're interacting with the content.

02:27.360 --> 02:33.160
So we want the ability to pick up three four whatever changes have been made.

02:33.390 --> 02:34.780
So let's put these up.

02:34.800 --> 02:35.310
No.

02:35.310 --> 02:43.500
1 and 2 document get element by id and in the ID values.

02:43.500 --> 02:44.680
So this one is no.

02:44.710 --> 02:45.390
1.

02:45.690 --> 02:51.910
And then we do a second once we're going to copy it and do two.

02:51.920 --> 02:58.530
So let me grab those both with an object and next that we know that we've got as functions as a function

02:58.530 --> 02:59.240
called.

02:59.340 --> 03:00.770
Right.

03:01.920 --> 03:09.360
So I want to invoke this function whenever ad gets clicked and we want to output whatever value whatever

03:09.360 --> 03:12.180
we're doing would ever not fanatic's we're doing here.

03:12.180 --> 03:14.970
We want that output into our aged him out

03:17.950 --> 03:23.760
so let's use put object inner peace to you Mel.

03:23.910 --> 03:30.950
And then we need to grab those two numbers so we know what we've got no one and number two.

03:31.080 --> 03:35.840
And we also know that they're going to be coming in as stream values.

03:35.840 --> 03:42.480
So in order to crowd the values of number one and number two I can do no one value because we know earlier

03:42.540 --> 03:49.880
we saw when it comes to DOM elements we get those values that we can pick up using value.

03:49.960 --> 03:54.260
So those are the that's the information we can pick up from the input elements.

03:54.420 --> 03:58.890
So we still need to transform this into a number.

03:58.890 --> 04:03.700
So are you going to just run with a number and let's try this first.

04:03.720 --> 04:10.200
So let's see we've got a number that we're entering in here and we click it and we see that output is

04:10.200 --> 04:13.500
being transcribed here with that output element.

04:13.530 --> 04:16.390
So everything appears to be working properly.

04:16.770 --> 04:22.530
So another thing that we could actually do is we can build out our string our output here and then make

04:22.530 --> 04:26.600
that output afterwards so we can do that as well.

04:26.610 --> 04:30.610
So maybe what we want to do is just to make things a little bit more interesting.

04:30.650 --> 04:34.820
We'll do a function and we're going to call this function.

04:35.480 --> 04:45.630
You know so basically whenever we want to put any information here then this is what we can utilize.

04:45.630 --> 04:48.750
This is what we can make use of to output information.

04:48.840 --> 04:59.670
So it's passed as parameters solve to a b and c and then I'm going to copy this one over and I'm going

04:59.670 --> 05:07.590
to put a plus and I put a space in there.

05:08.180 --> 05:16.420
And then within the value of b what I want to do is I want to return back the value of that character

05:16.430 --> 05:21.090
so for it will be plus or minus the minus sign and so on.

05:21.290 --> 05:26.110
So then have the ability to pass those and actually put those into the age you know.

05:26.300 --> 05:32.210
So now all we need to do is pass those parameters into our output to Mel

05:35.610 --> 05:37.920
so we can do that in a number of ways.

05:37.920 --> 05:39.590
I can do that very simple.

05:39.780 --> 05:49.380
And I can set them all like this and variable be can be this this is a longer format.

05:49.960 --> 05:58.160
So first we'll try to see if this works and then we'll shorten this so variable see.

05:58.550 --> 06:04.230
And remember these are different variables when we're passing them in here within the function as they're

06:04.250 --> 06:05.050
being picked up.

06:05.060 --> 06:07.570
So we don't have to be the same values.

06:07.700 --> 06:11.950
So it's just the case making it easier and then we're going to shorten this as well.

06:11.960 --> 06:13.480
So let's let's try this.

06:13.530 --> 06:17.300
So let's do five plus seven.

06:17.330 --> 06:22.290
We have five plus seven and we should also have output placed here.

06:22.700 --> 06:27.960
So this is another thing another value that we can pass in here.

06:27.960 --> 06:39.880
So maybe this can be D and this can be very healthy and equal to a class C and then let's do this and

06:40.020 --> 06:47.310
equal that to whatever is contained within D and D over here.

06:47.310 --> 06:51.970
So let's refresh that is 6 plus 45.

06:51.970 --> 07:00.840
So 6 plus 45 equals 51 and we could also continue to can't make them down and some spaces there.

07:00.910 --> 07:03.000
Refresh it and this time.

07:03.000 --> 07:08.360
So if you get a bunch of numbers there we can see that we've got a bunch of those totals there.

07:08.460 --> 07:10.150
And I should do a line grade.

07:10.250 --> 07:12.330
Well just to make it neater

07:15.270 --> 07:19.160
So let's refresh again one more time and these to be numeric.

07:19.160 --> 07:25.890
I use them together and so we can see that now every time we update this we've got all of those math

07:26.250 --> 07:27.810
outputs coming out there.

07:28.050 --> 07:34.970
So what you do now is to pause the video and audio and some additional functionality.

07:35.100 --> 07:42.510
So I know that we've worked through how to set up IDE and what I want you to do is also set up so tracked

07:42.630 --> 07:44.750
multiply and divide.

07:44.940 --> 07:51.840
So using that same format that we did an ad buy and you can try to shorten it as well as a number of

07:51.840 --> 07:55.050
ways to shorten this so you can do that as well.

07:55.140 --> 08:00.520
And putting that content into not put h UML passing all those parameters.

08:00.540 --> 08:06.800
So again you can shorten this and you can find another way to pass the parameters as well.

08:06.960 --> 08:07.920
Free to do that.

08:07.920 --> 08:15.750
So go out and subtract multiply and divide by and post the video and I'll show you the solution coming

08:15.750 --> 08:16.070
up.

08:17.410 --> 08:18.440
So welcome back.

08:18.490 --> 08:20.870
Hope you had the opportunity to try that out.

08:21.010 --> 08:26.380
So the first thing that I should want to do is I want to shorten this so we know that we've got very

08:26.380 --> 08:28.970
people who are doing these together.

08:29.140 --> 08:36.220
And let's let's do something to shorten this value so that we don't have to have such a line.

08:36.240 --> 08:39.130
So it's a number of parameters being passed through.

08:39.670 --> 08:47.830
So I just one to pass through a formula and the other one to simply have that equals two that will be.

08:47.980 --> 08:52.430
And let's put this up to equal to whatever the value is.

08:52.570 --> 08:58.330
So we're not going to have C and D because this is quite a bit of parameters there and we don't actually

08:58.330 --> 09:00.100
need that many parameters.

09:00.100 --> 09:04.130
So now let's say let's shorten what we've got here as well.

09:04.210 --> 09:14.770
So all we want to really do is for b y to have that plus whatever this value is here and that's all

09:14.770 --> 09:21.610
we need for B and for a we don't have to worry about converting those values.

09:21.640 --> 09:29.210
So let's let's just add this together update this to be the plus sign and then number two

09:34.170 --> 09:34.500
this.

09:34.540 --> 09:35.150
Oh sure.

09:35.170 --> 09:36.490
Met quite a bit.

09:36.510 --> 09:39.380
You can even shorten it even more if you wanted to.

09:39.380 --> 09:48.160
So let's first let's try this just to make sure that everything is working so 5.6 6 5 6 is 11 and so

09:48.160 --> 09:49.970
everything is working properly.

09:50.080 --> 09:52.750
So let's do the other input values.

09:52.780 --> 09:55.500
So what about 1 4 subtract.

09:55.750 --> 10:04.800
So we just call this so by and we can do the long format or we could just use the symbols if we want

10:04.800 --> 10:05.510
to.

10:05.800 --> 10:12.830
So let's create a function for that and having that going into that output as well.

10:14.970 --> 10:18.160
So this one is solved by.

10:18.180 --> 10:26.010
So all we do is make a slight adjustment to here and let's try this out and see if it works.

10:26.010 --> 10:27.350
So let's do 55.

10:27.350 --> 10:29.050
Second number is 5.

10:29.190 --> 10:34.320
So subtracting 5 from 555 gives this 555.

10:34.530 --> 10:36.310
So that right next one.

10:36.330 --> 10:40.550
Let's try out and we'll do multiplication and division.

10:40.710 --> 10:54.720
So let's add those small multiply divide by and then do it just and I use your multiply

10:57.140 --> 10:59.860
and divide.

11:01.130 --> 11:05.390
So let's put and create our functions here.

11:05.390 --> 11:09.110
So I'm going to just simply copy and paste them.

11:12.430 --> 11:15.520
So this one is going to be multiplied by

11:19.910 --> 11:22.910
and this one is going to be divided by.

11:23.750 --> 11:32.950
And let's just update those values so I can use X and over here I need to use javascript multiplier.

11:32.960 --> 11:34.940
So that's the Asterix.

11:34.940 --> 11:40.690
This one is divide and I just use javascript by.

11:41.080 --> 11:41.730
So there you go.

11:41.750 --> 11:44.510
So let's refreshed that and try this.

11:44.510 --> 11:47.360
So 6 3.

11:47.360 --> 11:50.000
So first we're going to add six and three together.

11:50.030 --> 12:01.130
Next we're going to subtract six minus 3 3 6 times 3 as 18 and six divided by three is two.

12:01.460 --> 12:08.920
And we can update the numbers and now we can see that everything works perfectly and that's how you

12:08.920 --> 12:16.070
can use functions and create some additional functionality within your applications and all of this

12:16.070 --> 12:17.920
can be triggered by the user.
