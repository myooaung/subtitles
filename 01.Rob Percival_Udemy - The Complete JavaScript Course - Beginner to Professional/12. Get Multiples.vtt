WEBVTT

00:00.590 --> 00:04.610
Well come back and this lesson is all about a challenge.

00:04.620 --> 00:13.140
So what I want you to do is create a loop to 1000 grab all the numbers that are multiples of five.

00:13.200 --> 00:18.470
So five 10 15 20 all the way up to a thousand add them together.

00:18.670 --> 00:21.690
I would put the numbers as are being added together.

00:21.780 --> 00:23.220
So you put five.

00:23.220 --> 00:29.650
We put 10 and then we have a running total So a sum total the value that we're adding in.

00:29.820 --> 00:33.950
And then what the total is as we're looping through.

00:34.110 --> 00:41.610
And then lastly after the loop completes looping through then lets put the complete total.

00:41.610 --> 00:43.000
So let's try that out.

00:43.050 --> 00:48.680
So open up your editor try it out and I'll show you the solution come up.

00:48.880 --> 00:51.380
So get an opportunity to try that out.

00:51.430 --> 00:53.120
So here's the solution.

00:53.240 --> 00:56.780
So we need to set a variable to hold our total.

00:56.780 --> 00:59.300
So right now we're even to out at zero.

00:59.530 --> 01:03.770
Let's do a for loop and we're going to use variable x.

01:03.980 --> 01:09.470
Started this one at zero and initially we want to create our loop.

01:09.580 --> 01:12.680
So looping all the way up to 1000.

01:13.150 --> 01:20.410
And don't forget to have the increment of x so as to make sure that we have a way out of each other.

01:20.980 --> 01:26.280
So we've got all of this loops and now we need to apply a condition.

01:26.430 --> 01:33.610
So the conditions work really well within loops because they allow us to apply logic on an ever changing

01:33.610 --> 01:34.310
value.

01:34.440 --> 01:36.580
And we know that there is quite a lot of numbers.

01:36.630 --> 01:38.800
Thousand numbers all the way 10000.

01:38.920 --> 01:43.870
So I want to be really precise in picking out though those values.

01:43.870 --> 01:53.920
So let's do our condition and we're going to check to see if the value of x is has a modulus 5.

01:54.040 --> 01:57.780
So basically we're dividing it by 5.

01:57.970 --> 02:03.160
And if there's a remainder then we know that it's not divisible by 5.

02:03.340 --> 02:05.420
And we need to get to the next number.

02:05.620 --> 02:08.060
But if there is no remainder.

02:08.080 --> 02:15.790
So if it's equal to zero then we know that this is a number that we can divide by 5 and we can include

02:15.790 --> 02:17.540
it within our output.

02:18.550 --> 02:22.990
So now we are picking up all those values of 5 and let's do

02:27.160 --> 02:29.580
let's actually just do it right within the output.

02:29.680 --> 02:30.880
So two outputs

02:34.240 --> 02:36.990
interface to smell.

02:38.740 --> 02:40.660
So output interface to melt.

02:40.690 --> 02:46.530
And then this is where you go out in her statement and then at the end of it.

02:46.590 --> 02:55.550
This is where when I add total equals and then whatever our value of total is going to be.

02:55.860 --> 02:59.320
So there's a few things that we need to do within this condition.

02:59.820 --> 03:06.240
So the first one is we need to grab the value of x so tall

03:09.050 --> 03:15.150
equals total plus the value of x.

03:15.160 --> 03:22.900
So we started out with five and we know that once we add five to our running total then the total is

03:22.900 --> 03:24.420
going to constantly change.

03:24.760 --> 03:37.270
So let's value of x and y do equals let's add X in there and then add in something else here where we've

03:37.270 --> 03:47.910
got so total really matter what type string content you're placing in here.

03:48.040 --> 03:51.330
So basically this is going to be the current total.

03:51.580 --> 03:58.450
So let's try this out refreshed and yes quite a lot of stuff there we should do some line breaks.

03:58.630 --> 03:59.760
So it's more readable.

04:01.970 --> 04:03.190
So let's see what happens now.

04:03.200 --> 04:05.080
So let's start at the beginning.

04:05.240 --> 04:09.100
So we've got a value of zero sum total is zero.

04:09.110 --> 04:11.100
Next we have a value of five.

04:11.210 --> 04:13.770
So because we don't have any other values in there.

04:13.790 --> 04:19.870
So that's where 5 comes in and add some spacing there to make it even more readable.

04:19.880 --> 04:23.530
So next we've got 10 but we already had a sum total of five.

04:23.540 --> 04:27.120
So I end up with 15 15.

04:27.140 --> 04:32.780
And the value is 15 Swaine up with 30 30 plus 20 50.

04:32.810 --> 04:39.700
So all the way and we loop through all of all of these numbers and we end up with a total.

04:39.740 --> 04:41.490
And this should be an equal sign.

04:41.630 --> 04:43.960
So we have to out and refresh.

04:44.150 --> 04:45.260
So there we go.

04:45.270 --> 04:52.490
So out of all those fives all the way through and we've ended up with a total of ninety nine thousand

04:52.520 --> 04:56.890
five hundred and we can just as easily adjust this to ace.

04:56.900 --> 04:58.730
So accounting by 8s.

04:59.150 --> 05:07.510
And we can see that 8 16:24 30 to 40 48 and so all we're doing is just adding those together as we're

05:07.520 --> 05:12.240
finding those numbers that are divisible by 8 with any remainder.

05:12.440 --> 05:18.380
So that's the solution to the challenge and the next lesson I guess or even more you can do with loops.

05:18.470 --> 05:23.330
There's a lot of power with loops and there's a lot of things you can do especially when it comes to

05:23.390 --> 05:24.860
arrays and objects.

05:24.890 --> 05:25.950
So that's coming up.
