WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.090
In this video, we're going to be looking at flex-wrap and how to justify the content.

00:00:06.090 --> 00:00:11.640
First, let's go ahead and change the flex-direction back to be the default row,

00:00:11.640 --> 00:00:13.905
inside the parent container.

00:00:13.905 --> 00:00:17.190
All of the items we've added are now on the same row.

00:00:17.190 --> 00:00:21.630
We should refresh and then now go from left to right.

00:00:21.630 --> 00:00:24.150
If we keep adding more items in,

00:00:24.150 --> 00:00:26.580
all will still appear on the same line.

00:00:26.580 --> 00:00:33.735
Let's go down to our items and copy this and paste it.

00:00:33.735 --> 00:00:35.375
Number 6, just below.

00:00:35.375 --> 00:00:37.950
Given those 12 items,

00:00:38.260 --> 00:00:42.890
this behavior can be changed by using the flex-wrap property.

00:00:42.890 --> 00:00:45.425
The default is set to no wrap.

00:00:45.425 --> 00:00:48.950
This is why we seeing all our items on the same line.

00:00:48.950 --> 00:00:51.985
This also applies to the container too.

00:00:51.985 --> 00:00:56.435
If we go over to the style section and target the container,

00:00:56.435 --> 00:01:05.415
let's add the flex-wrap property and then set this to be wrap, save that, reload.

00:01:05.415 --> 00:01:08.600
Now the items will wrap onto multiple lines.

00:01:08.600 --> 00:01:11.900
If we make the browser even narrower,

00:01:11.900 --> 00:01:13.430
each time is less space,

00:01:13.430 --> 00:01:16.680
they will all drop on two newline.

00:01:17.350 --> 00:01:21.725
Displaces items on the line directly below.

00:01:21.725 --> 00:01:23.945
If you wanted the opposite effects,

00:01:23.945 --> 00:01:26.120
we can use wrap reverse,

00:01:26.120 --> 00:01:29.760
so add reverse onto the end of this.

00:01:30.140 --> 00:01:33.015
Give that save and reload.

00:01:33.015 --> 00:01:36.740
Now the extra items which were on the line below,

00:01:36.740 --> 00:01:38.780
now appear on the line above,

00:01:38.780 --> 00:01:41.995
because it now works from bottom to top.

00:01:41.995 --> 00:01:44.765
Just like before, if we shrink the browser,

00:01:44.765 --> 00:01:50.010
all the additional items jump up a level rather than below.

00:01:51.230 --> 00:01:55.670
In fact, there is also a shorthand for this flex-wrap

00:01:55.670 --> 00:02:00.745
and also for flex-direction to update into one property.

00:02:00.745 --> 00:02:03.465
This is called flex-flow.

00:02:03.465 --> 00:02:09.035
We can delete these two lines here and then odd flex-flow.

00:02:09.035 --> 00:02:11.265
It takes in two values.

00:02:11.265 --> 00:02:14.900
The first one was our value of row for the flex-direction,

00:02:14.900 --> 00:02:17.525
and then the second for warp.

00:02:17.525 --> 00:02:22.570
This first line with flex-direction then the second one is for the flex-wrap.

00:02:22.570 --> 00:02:27.095
Save that. Now we've merged these two lines into one.

00:02:27.095 --> 00:02:30.995
The next thing I want to show you is how to justify the content.

00:02:30.995 --> 00:02:36.995
This is used to control how our items is spaced out across the main axis.

00:02:36.995 --> 00:02:41.600
This is also a CSS property which is added to the Container.

00:02:41.600 --> 00:02:47.830
So let's add justify contents and then let's begin with flex-starts.

00:02:47.840 --> 00:02:52.265
If we refresh, we don't see any change in the browser.

00:02:52.265 --> 00:02:55.415
This is because flex-dot is default.

00:02:55.415 --> 00:02:59.755
We can see how this effective more if we try flex-end.

00:02:59.755 --> 00:03:03.555
Rather flex-starts, let's add flex-end.

00:03:03.555 --> 00:03:07.340
Remember that our items by default are in a row.

00:03:07.340 --> 00:03:09.530
Across the page from left to right,

00:03:09.530 --> 00:03:12.620
this is why flex-start aligns all items on

00:03:12.620 --> 00:03:17.900
the left hand side and then flex-end aligns all the items to the right-hand side,

00:03:17.900 --> 00:03:20.395
which is the end of the main axis.

00:03:20.395 --> 00:03:27.990
Let's also try center, save and reload.

00:03:27.990 --> 00:03:32.125
Now everything is aligned to the center of the main axis.

00:03:32.125 --> 00:03:35.675
We still have the same behavior if we're to shrink the browser,

00:03:35.675 --> 00:03:40.700
all items would still drop onto the next line starting from the center.

00:03:40.700 --> 00:03:45.410
This of course, places the items along the center line of the main axis,

00:03:45.410 --> 00:03:47.540
which is just through here.

00:03:47.540 --> 00:03:50.990
The next free options all related to how

00:03:50.990 --> 00:03:55.550
the available space between these items gets distributed.

00:03:55.550 --> 00:03:59.160
If we start with space between.

00:03:59.450 --> 00:04:06.345
Rather than center, we can add a space between and see how this is looking.

00:04:06.345 --> 00:04:10.580
Now the items still on the same line that would normally be.

00:04:10.580 --> 00:04:16.220
But now I have equal amount of space distributed between each item.

00:04:16.220 --> 00:04:19.780
If instead we wanted the space to be all around them.

00:04:19.780 --> 00:04:23.225
So to be equally on the left and right-hand side,

00:04:23.225 --> 00:04:26.070
we have space around for this.

00:04:26.070 --> 00:04:31.230
Change space between to be space around.

00:04:33.070 --> 00:04:36.815
This spacing is applied to both sides now.

00:04:36.815 --> 00:04:41.930
Items will have twice as much space in between them than it will do on the end.

00:04:41.930 --> 00:04:46.520
Because for example, item 3 has half the space here and then

00:04:46.520 --> 00:04:51.110
item 4 has half the space on this idea here too.

00:04:51.110 --> 00:04:54.800
If you wanted to have the space on each side to be equal,

00:04:54.800 --> 00:05:01.485
we also have space evenly. Let's give this a go.

00:05:01.485 --> 00:05:05.430
Now there is even space between all the items.

00:05:05.430 --> 00:05:07.435
This is it now for this video,

00:05:07.435 --> 00:05:11.630
but you should now be able to see how powerful the flexbox is for layout.

00:05:11.630 --> 00:05:15.240
Even we just add in a few lines of CSS.
