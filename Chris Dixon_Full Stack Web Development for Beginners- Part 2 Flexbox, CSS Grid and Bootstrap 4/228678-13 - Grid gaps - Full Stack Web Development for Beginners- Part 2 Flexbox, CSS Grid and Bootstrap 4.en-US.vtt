WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.770
In the last video,

00:00:01.770 --> 00:00:05.310
we added a border around these grid items.

00:00:05.310 --> 00:00:07.935
We'll come back to see how they are laid out.

00:00:07.935 --> 00:00:15.720
If we go over to the CSS and remove this border and back over to the browser.

00:00:15.720 --> 00:00:19.380
It becomes difficult to see the rows and columns.

00:00:19.380 --> 00:00:23.430
By default, there is no space in between the columns and

00:00:23.430 --> 00:00:28.245
rows but to fix this we can use grid-gaps.

00:00:28.245 --> 00:00:33.375
To add a grid-gap between columns, we have grid-column-gap.

00:00:33.375 --> 00:00:36.485
This is also applied to the container.

00:00:36.485 --> 00:00:40.590
So let's go ahead and add grid-column-gap.

00:00:41.000 --> 00:00:43.290
The value was up to us.

00:00:43.290 --> 00:00:46.890
So let's begin with 10 pixels and

00:00:46.890 --> 00:00:51.395
this will add a 10 pixel gap between each of the columns.

00:00:51.395 --> 00:00:55.310
As you may have guessed, there is also grid-row-gap

00:00:55.310 --> 00:01:00.150
too and you can add this also to the container.

00:01:00.150 --> 00:01:09.170
So grid-row-gap and lets again set this to be 10 pixels, refresh.

00:01:09.170 --> 00:01:13.030
There is a 10 pixel gap between the rows and the columns now.

00:01:13.030 --> 00:01:16.985
Note how these gaps only between the rows and columns,

00:01:16.985 --> 00:01:19.085
not around the edge.

00:01:19.085 --> 00:01:22.090
This solves one of the old problems we had when spacing

00:01:22.090 --> 00:01:26.090
new items using CSS methods such as margin,

00:01:26.090 --> 00:01:29.315
where the space will be all around the elements,

00:01:29.315 --> 00:01:32.470
even the surrounding edge by default.

00:01:32.470 --> 00:01:37.575
Also, there is a shorthand version too called grid-gap.

00:01:37.575 --> 00:01:40.350
So rather than having two lines of code here,

00:01:40.350 --> 00:01:45.550
we can remove these and instead use grid-gap.

00:01:45.550 --> 00:01:48.350
Just like when using margin and padding,

00:01:48.350 --> 00:01:50.240
we can set two values.

00:01:50.240 --> 00:01:52.715
The first one is for the rows,

00:01:52.715 --> 00:01:55.640
so 20 pixels and then for the columns,

00:01:55.640 --> 00:01:58.720
10 pixels, then refresh.

00:01:58.720 --> 00:02:02.840
Or if we wanted one value to apply to both the rows and columns,

00:02:02.840 --> 00:02:04.685
we can just leave in one value,

00:02:04.685 --> 00:02:06.169
such as 10 pixels,

00:02:06.169 --> 00:02:09.325
and then it leaves equal gaps all around.

00:02:09.325 --> 00:02:14.120
You can see how much we can control with just a few lines of CSS.

00:02:14.120 --> 00:02:19.645
This kind of layout without the grid would be a lot more complex and time consuming.

00:02:19.645 --> 00:02:21.705
This is it now for grid-gaps.

00:02:21.705 --> 00:02:27.720
Next we'll look at how to repeat tracks and also set the min and max sizes.
