WEBVTT
1
00:00:02.140 --> 00:00:06.380
To flesh out the rest of our code through the various tiers, I'm going

2
00:00:06.380 --> 00:00:09.840
to start with first going to our RideController.

3
00:00:09.840 --> 00:00:13.740
Inside of our RideController we're currently returning null.

4
00:00:13.740 --> 00:00:23.860
I want to go ahead and say rideService.createRide and pass in our ride object.

5
00:00:23.860 --> 00:00:26.090
Now you're going to get a red squiggly line because

6
00:00:26.090 --> 00:00:28.740
this method currently does not exist.

7
00:00:28.740 --> 00:00:33.240
So let's go ahead and open up our RideService interface.

8
00:00:33.240 --> 00:00:37.180
You may want to stop your server if it's going to continue to try and redeploy

9
00:00:37.180 --> 00:00:43.620
that context. I've stopped mine. I'm going to go into my interface now and say

10
00:00:43.620 --> 00:00:51.140
Ride createRide Ride, and pass in that instance.

11
00:00:51.140 --> 00:00:54.030
Now I want to mention again, because I get asked this quite

12
00:00:54.030 --> 00:00:57.270
frequently, and this is why I walked through these steps, do I

13
00:00:57.270 --> 00:00:59.780
have to have this service tier?

14
00:00:59.780 --> 00:01:02.340
The answer is no, you do not have to.

15
00:01:02.340 --> 00:01:09.940
We could go right from our RideController and go right to our ride repository.

16
00:01:09.940 --> 00:01:14.200
We could honestly even pass in our JdbcTemplate to our controller.

17
00:01:14.200 --> 00:01:15.970
Do I recommend that?

18
00:01:15.970 --> 00:01:21.460
No. You want those multiple tiers inside of your application so that we have

19
00:01:21.460 --> 00:01:26.430
some flexibility, as well as coding to an interface as you'll see in a more

20
00:01:26.430 --> 00:01:30.340
complex example we're going to do later in this course.

21
00:01:30.340 --> 00:01:33.440
Let's go into our RideService.

22
00:01:33.440 --> 00:01:37.900
We have our interface now created for Ride createRide, and you'll

23
00:01:37.900 --> 00:01:41.040
see you have a red x under your RideServiceImpl.

24
00:01:41.040 --> 00:01:45.760
We're going to do the same thing and go into our RideServiceImpl and

25
00:01:45.760 --> 00:01:53.260
add an @Override and create this method. We'll just say public Ride

26
00:01:53.260 --> 00:01:58.540
createRide and pass in that ride instance.

27
00:01:58.540 --> 00:02:00.960
And we're going to do this exact same thing for now.

28
00:02:00.960 --> 00:02:04.680
And you're saying, why would I want to just do the same thing over and over?

29
00:02:04.680 --> 00:02:09.740
Because we're going to expand this example later. We'll say return

30
00:02:09.740 --> 00:02:17.130
rideRepository.createRide, and it's going to error out on us because

31
00:02:17.130 --> 00:02:19.840
we don't have that method currently created.

32
00:02:19.840 --> 00:02:25.430
We can save this and then go ahead and open up our RideRepository and create the

33
00:02:25.430 --> 00:02:30.740
same method signature there that we did in our RideService.

34
00:02:30.740 --> 00:02:36.340
And when we save this, it will transfer that error to our RideRepositoryImpl.

35
00:02:36.340 --> 00:02:41.070
Now inside of here we're going to do the same thing, but this is

36
00:02:41.070 --> 00:02:45.330
where we're going to finally go through and begin editing our

37
00:02:45.330 --> 00:02:48.480
database where we're going to incorporate the JdbcTemplate that you

38
00:02:48.480 --> 00:02:50.150
can see we've created right above.

39
00:02:50.150 --> 00:02:58.340
So let's go ahead and say @Override public Ride createRide,

40
00:02:58.340 --> 00:03:01.640
pass in that ride instance again.

41
00:03:01.640 --> 00:03:05.160
And in here, for now we're just going to return null.

42
00:03:05.160 --> 00:03:09.740
We'll go through all the JdbcTemplate features here in just a second.

43
00:03:09.740 --> 00:03:13.710
But we should be able to go back and start our application server

44
00:03:13.710 --> 00:03:24.040
up and now go to our unit test and rightâ€‘click Run As, Unit Test

45
00:03:24.040 --> 00:03:28.320
and start this, look at our test results, and you'll see that we

46
00:03:28.320 --> 00:03:30.640
have a green bar still.

47
00:03:30.640 --> 00:03:37.120
So we went ahead and created the test that called our endpoint in

48
00:03:37.120 --> 00:03:43.370
our controller of the createRide that's going to go ahead and

49
00:03:43.370 --> 00:03:46.190
interact with our service tier through the interface and then

50
00:03:46.190 --> 00:03:47.460
through the implementation,

51
00:03:47.460 --> 00:03:51.800
which ultimately ends up calling the RideRepository for

52
00:03:51.800 --> 00:04:00.000
this createRide method that we're now going to go ahead and utilize the JdbcTemplate in.

