WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.855
The next step for this project is to add our script.

00:00:03.855 --> 00:00:09.190
Open up the sidebar been create our new script.ks.

00:00:10.820 --> 00:00:12.840
Inside the index page,

00:00:12.840 --> 00:00:17.040
you can then link this just above the closing body tag.

00:00:17.040 --> 00:00:21.180
The scripts has the source inside of our root.

00:00:21.180 --> 00:00:24.280
This is simply the script.js.

00:00:24.280 --> 00:00:27.915
To begin, we're going to grab all of our list items,

00:00:27.915 --> 00:00:29.880
place these inside of an array,

00:00:29.880 --> 00:00:34.875
and then create a FOR loop which is going to place these back inside of this section.

00:00:34.875 --> 00:00:37.835
Grab each one of our list items.

00:00:37.835 --> 00:00:40.850
I'm going to copy these over to our scripts.

00:00:40.850 --> 00:00:43.790
At the moment, this is not a valid JavaScript.

00:00:43.790 --> 00:00:46.790
We're going to move this over to our array.

00:00:46.790 --> 00:00:49.885
Our array is going to be called songs.

00:00:49.885 --> 00:00:52.520
Then we're going to move over each one of

00:00:52.520 --> 00:00:56.645
our list items and place these inside of the quotations.

00:00:56.645 --> 00:01:01.195
The first one, separated by comma,

00:01:01.195 --> 00:01:03.855
grab our second one,

00:01:03.855 --> 00:01:06.915
place these inside the quotes,

00:01:06.915 --> 00:01:12.240
I'm going to add a comma between each one of these array items,

00:01:20.350 --> 00:01:22.745
place these inside of the array.

00:01:22.745 --> 00:01:26.600
We can also remove each one of these list items too.

00:01:26.600 --> 00:01:30.185
Now that each one of our songs is inside of our JavaScript,

00:01:30.185 --> 00:01:35.125
we can then go back to our index page and remove this full ordered list.

00:01:35.125 --> 00:01:38.915
This is because we're going to create a function which is going to select

00:01:38.915 --> 00:01:41.210
our song list and then place inside

00:01:41.210 --> 00:01:45.490
a new order list which has been created from JavaScript.

00:01:45.490 --> 00:01:52.930
To do this, let's create a function called create song list.

00:01:53.690 --> 00:02:00.065
The first thing we need to do inside of this function is to create a new ordered list.

00:02:00.065 --> 00:02:04.800
We do this with document.createElements,

00:02:05.240 --> 00:02:08.350
that's in our ordered list.

00:02:08.350 --> 00:02:14.405
We also need to install this inside of a constant so we can add each list item.

00:02:14.405 --> 00:02:19.055
But how do we go about creating six new list items?

00:02:19.055 --> 00:02:22.160
Well, we could add each one of these individually,

00:02:22.160 --> 00:02:26.660
but it's much more efficient to create a loop to do this six times.

00:02:26.660 --> 00:02:29.330
Let's create a FOR loop.

00:02:29.330 --> 00:02:35.485
We want this loop to run six times or as many times as array items.

00:02:35.485 --> 00:02:39.785
The way we can make this run six times is by creating a variable.

00:02:39.785 --> 00:02:44.855
I'm going to call mine i, and initially set this to a value of 0.

00:02:44.855 --> 00:02:49.475
The second declaration is how many times we want this loop to run.

00:02:49.475 --> 00:02:51.770
At the moment, we have six separate songs,

00:02:51.770 --> 00:02:54.755
but we don't want to add a hard coded value.

00:02:54.755 --> 00:02:59.740
Instead, we can access our songs array and use the land property.

00:02:59.740 --> 00:03:06.265
We'll keep this running as long as the value of i is less than a songs.length.

00:03:06.265 --> 00:03:09.180
Then each time this FOR loop runs,

00:03:09.180 --> 00:03:12.715
we're then going to increment the value of i by one.

00:03:12.715 --> 00:03:16.675
Just to recap, are going to create six list items.

00:03:16.675 --> 00:03:19.175
To do this, we're going to use a FOR loop.

00:03:19.175 --> 00:03:21.020
To make sure this runs six times,

00:03:21.020 --> 00:03:23.315
we're going to use a variable called i.

00:03:23.315 --> 00:03:25.895
The very first time this loop runs,

00:03:25.895 --> 00:03:27.860
i will be equal to 0.

00:03:27.860 --> 00:03:32.135
It will then keep running as long as i is less than songs.length,

00:03:32.135 --> 00:03:34.250
which is equal to six.

00:03:34.250 --> 00:03:37.730
I will then incremented it to be a value of one.

00:03:37.730 --> 00:03:39.440
The next time this loop runs,

00:03:39.440 --> 00:03:40.850
i will be equal to one,

00:03:40.850 --> 00:03:43.570
which is less than the length of our songs array.

00:03:43.570 --> 00:03:46.505
This will keep running until the very last loop,

00:03:46.505 --> 00:03:48.410
where i will be equal to six,

00:03:48.410 --> 00:03:50.840
which is no longer less than songs.length,

00:03:50.840 --> 00:03:53.095
causing our loop to end.

00:03:53.095 --> 00:03:59.135
To begin, we'll create our new list item with document.createElements.

00:03:59.135 --> 00:04:01.280
The element we want to create is

00:04:01.280 --> 00:04:06.180
a list item and store this inside of a constant called item.

00:04:07.310 --> 00:04:11.950
This will then lead us with a HTML element just like this.

00:04:11.950 --> 00:04:15.905
Then we need to create our contents which is inside.

00:04:15.905 --> 00:04:18.760
For example, on our first loop we want to pass in

00:04:18.760 --> 00:04:22.690
the very first elements inside of our array.

00:04:22.690 --> 00:04:27.215
The way we can create this is by using create a text node.

00:04:27.215 --> 00:04:30.825
How do we go about creating this content?

00:04:30.825 --> 00:04:36.190
What we can do this with document.createTextNode.

00:04:37.550 --> 00:04:44.630
The text node we want to create is from our songs array and the value of i.

00:04:44.630 --> 00:04:46.215
On the very first loop,

00:04:46.215 --> 00:04:47.385
i is at 0.

00:04:47.385 --> 00:04:50.715
This will be song 0, which is our very first one.

00:04:50.715 --> 00:04:52.310
On the second loop,

00:04:52.310 --> 00:04:55.595
songs is equal to 1, this will be our second one.

00:04:55.595 --> 00:04:59.545
Since you remember arrays begin at a index of 0,

00:04:59.545 --> 00:05:02.430
this will give us our song title.

00:05:02.430 --> 00:05:05.190
We can then append this to our item.

00:05:05.190 --> 00:05:08.910
Remove this. We can grab our item,

00:05:08.910 --> 00:05:11.230
call the method called append child.

00:05:11.230 --> 00:05:14.030
Then we can paste in our text node.

00:05:14.030 --> 00:05:16.775
After this, we want to grab I will alter list,

00:05:16.775 --> 00:05:19.970
which is stored inside of this list variable.

00:05:19.970 --> 00:05:25.530
We can then call append child and add our individual list item.

00:05:27.110 --> 00:05:33.210
At the end of our function, we can then return our newly constructed ordered list.

00:05:33.920 --> 00:05:37.490
Then we can add this to the DOM if we go to our index page.

00:05:37.490 --> 00:05:41.545
Remember, we have this div with the id of song list.

00:05:41.545 --> 00:05:45.465
We're then going to place our order list back inside of this section.

00:05:45.465 --> 00:05:49.310
So back to our script and we can grab this where we get element by ID,

00:05:49.310 --> 00:05:52.080
where we want to pass in our song list.

00:05:52.600 --> 00:05:55.170
We'll append child method.

00:05:55.170 --> 00:06:00.420
Then we can pass in the returned list of from our "Create Song list" function.

00:06:02.150 --> 00:06:06.080
This now adds all of our songs back into our player.

00:06:06.080 --> 00:06:09.065
Currently, we can't click on any of these songs to play.

00:06:09.065 --> 00:06:12.870
This is going to be something which we'll fix in the next video.
