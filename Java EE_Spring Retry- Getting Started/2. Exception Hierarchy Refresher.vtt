WEBVTT
1
00:00:00.942 --> 00:00:03.470
In order to know how to build the retriable exception mapping

2
00:00:03.470 --> 00:00:05.695
we need to pass into our SimpleRetryPolicy,

3
00:00:05.695 --> 00:00:10.612
we should first do a refresher on the Java and Spring exception

4
00:00:10.612 --> 00:00:14.075
hierarchy to examine which exceptions we care to retry.

5
00:00:14.075 --> 00:00:18.881
We know that whatever exception we specify in our map needs to extend Throwable,

6
00:00:18.881 --> 00:00:21.121
so we'll start there.

7
00:00:21.121 --> 00:00:24.232
Starting at Throwable, we see that it is extended by exception,

8
00:00:24.232 --> 00:00:26.364
which is Extended by RuntimeException.

9
00:00:26.364 --> 00:00:27.096
Then,

10
00:00:27.096 --> 00:00:31.880
Spring extends Java's runtime exception with its NestedRuntimeException class,

11
00:00:31.880 --> 00:00:37.724
which is a class for wrapping runtime exceptions with a root cause.

12
00:00:37.724 --> 00:00:39.823
RestClientException extends NestedRuntimeException,

13
00:00:39.823 --> 00:00:44.582
which is the exception class we actually care about.

14
00:00:44.582 --> 00:00:49.302
This is because it's what RestTemplate, which is what RetryTemplate is wrapping,

15
00:00:49.302 --> 00:00:52.122
uses for exception handling.

16
00:00:52.122 --> 00:00:53.752
Diving into RestClientException,

17
00:00:53.752 --> 00:00:56.279
we see that it's extended by RestClientResponseException

18
00:00:56.279 --> 00:01:00.684
followed by HttpStatusCodeException.

19
00:01:00.684 --> 00:01:01.031
Then,

20
00:01:01.031 --> 00:01:05.410
we get into the HttpStatusCode mapping exceptions where after an

21
00:01:05.410 --> 00:01:10.180
HttpServerErrorException and HttpClientErrorException,

22
00:01:10.180 --> 00:01:13.872
which both implement HttpStatusCodeException.

23
00:01:13.872 --> 00:01:17.944
Those exception classes contain inner classes for HTTP client errors such

24
00:01:17.944 --> 00:01:30.000
as HTTP 400 BadRequest and HTTP 404 NotFound statuses, as well as HTTP server errors such as HTTP 500 InternalServerError.

