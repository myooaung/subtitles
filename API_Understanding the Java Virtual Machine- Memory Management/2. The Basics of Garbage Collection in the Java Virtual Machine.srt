1
00:00:04,300 --> 00:00:07,700
So before we dive into the details of garbage collection,

2
00:00:07,700 --> 00:00:10,880
let's just recap some of the basic ideas and some of the things

3
00:00:10,880 --> 00:00:13,870
that we have inside the Java virtual machine.

4
00:00:13,870 --> 00:00:17,370
The memory space in an application is broken down

5
00:00:17,370 --> 00:00:22,990
into two so‑called generations, a young generation and an old generation,

6
00:00:22,990 --> 00:00:27,940
and all new allocations typically go into the young generation.

7
00:00:27,940 --> 00:00:32,280
These objects are allocated into something called the Eden space.

8
00:00:32,280 --> 00:00:33,760
You can imagine where the phrase comes from.

9
00:00:33,760 --> 00:00:38,330
This is the very early space that we're going to allocate objects into.

10
00:00:38,330 --> 00:00:43,840
Also, as part of the young generation are two so‑called survivor spaces,

11
00:00:43,840 --> 00:00:48,890
and these get used when memory in the young generation is garbage collected.

12
00:00:48,890 --> 00:00:53,190
So objects that survive a garbage collect in the young generation

13
00:00:53,190 --> 00:00:57,410
get moved into one of these survivor spaces.

14
00:00:57,410 --> 00:01:01,940
Only one survivor space is in use at any one time.

15
00:01:01,940 --> 00:01:06,220
Once a garbage collection happens, objects get copied into a new survivor space,

16
00:01:06,220 --> 00:01:09,620
and any objects in the original survivor space also get

17
00:01:09,620 --> 00:01:11,690
copied into the new survivor space.

18
00:01:11,690 --> 00:01:14,350
So all objects that have survived this young generation

19
00:01:14,350 --> 00:01:17,870
garbage‑collect live inside one of these survivors spaces.

20
00:01:17,870 --> 00:01:22,040
The old generation is where long‑lived objects go.

21
00:01:22,040 --> 00:01:24,150
Now we haven't defined what we mean my long‑lived yet,

22
00:01:24,150 --> 00:01:26,660
but we will talk about that a little later.

23
00:01:26,660 --> 00:01:30,370
But essentially, once an object has survived a number of garbage collects,

24
00:01:30,370 --> 00:01:34,880
at that point, the runtime decides this object will now essentially live forever,

25
00:01:34,880 --> 00:01:37,880
at it'll move it into the old generation.

26
00:01:37,880 --> 00:01:40,470
So the memory layout is something like this.

27
00:01:40,470 --> 00:01:42,480
Again, this is meant to be diagrammatical.

28
00:01:42,480 --> 00:01:44,570
This is not an exact representation of the memory

29
00:01:44,570 --> 00:01:45,960
layered inside the application.

30
00:01:45,960 --> 00:01:49,360
So here we can see the young generation with the Eden space and

31
00:01:49,360 --> 00:01:54,000
the two survivor spaces labeled S0 and S1.

32
00:01:54,000 --> 00:01:57,420
We have the old generation, also called a tenured space,

33
00:01:57,420 --> 00:02:01,940
where old objects live, and these objects can live for a long time.

34
00:02:01,940 --> 00:02:05,340
There's also something called the permanent generation or the permanent space.

35
00:02:05,340 --> 00:02:08,190
And in here are things used by the Java runtime,

36
00:02:08,190 --> 00:02:12,040
so things like, for example, class information is stored here.

37
00:02:12,040 --> 00:02:14,940
And essentially, this space is never garbage‑collected.

38
00:02:14,940 --> 00:02:16,780
So why do we have these two generations?

39
00:02:16,780 --> 00:02:21,010
Well the idea is is that once objects have survived a few garbage collects, i.e.

40
00:02:21,010 --> 00:02:24,830
they become old objects, they are much less likely to die.

41
00:02:24,830 --> 00:02:27,340
They are more likely to survive for a long time.

42
00:02:27,340 --> 00:02:30,180
So we move these objects into this old generation space,

43
00:02:30,180 --> 00:02:34,120
and the garbage collector runs less frequently on this space.

44
00:02:34,120 --> 00:02:37,430
So objects in the young generation tend to live for a short time; whereas,

45
00:02:37,430 --> 00:02:40,550
objects in old generation have already lived for a long

46
00:02:40,550 --> 00:02:43,970
time and are likely to carry on living so are less likely

47
00:02:43,970 --> 00:02:45,510
to need garbage collection.

48
00:02:45,510 --> 00:02:53,000
And the idea is that you tend to die young or live ever. It's called the young generation theory of garbage collection.

