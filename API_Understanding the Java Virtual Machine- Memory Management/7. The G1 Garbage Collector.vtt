WEBVTT
1
00:00:01.140 --> 00:00:04.740
So finally, we have the G1 garbage collector.

2
00:00:04.740 --> 00:00:07.580
So this garbage collector was introduced in Java 6,

3
00:00:07.580 --> 00:00:11.130
but it wasn't officially supported until Java 7.

4
00:00:11.130 --> 00:00:14.710
It's a very different beast to the other garbage collectors.

5
00:00:14.710 --> 00:00:17.250
This is something called a compacting collector.

6
00:00:17.250 --> 00:00:22.440
And this plans a replacement for the concurrent mark and sweep collector.

7
00:00:22.440 --> 00:00:25.740
The G1 collector is meant for server applications.

8
00:00:25.740 --> 00:00:28.710
It's meant for applications that are run on multiâ€‘processor

9
00:00:28.710 --> 00:00:31.750
machines with large amounts of memory.

10
00:00:31.750 --> 00:00:35.640
And this works very differently to the other collectors we've seen.

11
00:00:35.640 --> 00:00:39.150
Instead of simply having an Eden region and a tenured region,

12
00:00:39.150 --> 00:00:41.240
a young memory and old memory,

13
00:00:41.240 --> 00:00:44.800
we now break the entire memory space down into regions. The

14
00:00:44.800 --> 00:00:47.540
memory is allocated across those regions.

15
00:00:47.540 --> 00:00:51.080
It still has the concept of Eden, survivor, and tenured spaces,

16
00:00:51.080 --> 00:00:54.890
but this concept is managed very differently by the G1 collector.

17
00:00:54.890 --> 00:00:59.690
So the G1 collector brakes memory down into regions.

18
00:00:59.690 --> 00:01:01.100
And as we can see here,

19
00:01:01.100 --> 00:01:05.250
we still have the content of an Eden space shown in green here,

20
00:01:05.250 --> 00:01:11.140
a survivor space shown in blue color, and an old space shown in orange.

21
00:01:11.140 --> 00:01:15.000
These spaces are using the same way as previously. So the new memory is

22
00:01:15.000 --> 00:01:19.280
allocated into the Eden space. After the minor GC runs, that memory is

23
00:01:19.280 --> 00:01:23.240
moved into survivor space, and the old objects are promoted into the old

24
00:01:23.240 --> 00:01:28.390
space. For the G1 collector, this is called evacuation. So objects

25
00:01:28.390 --> 00:01:33.370
evacuated are moved between these regions, so moved from Eden to

26
00:01:33.370 --> 00:01:38.440
survivor, Eden to old, survivor to old, and eventually discarded altogether.

27
00:01:38.440 --> 00:01:40.110
So here, for example,

28
00:01:40.110 --> 00:01:44.740
we have some memory allocated into Eden space and some memory in old space.

29
00:01:44.740 --> 00:01:47.370
When a GC runs on the young generation,

30
00:01:47.370 --> 00:01:50.760
then the memory in the Eden space is collected and gathered

31
00:01:50.760 --> 00:01:54.510
together into a region that's designated as a survivor region.

32
00:01:54.510 --> 00:01:57.090
For the old GC, a similar idea.

33
00:01:57.090 --> 00:02:00.620
Again, we have memory in Eden space and memory in old space.

34
00:02:00.620 --> 00:02:02.700
When a major collection is done,

35
00:02:02.700 --> 00:02:07.020
so it collects memory in old space, that memory is discarded

36
00:02:07.020 --> 00:02:16.000
altogether. So we leave the Eden space alone in this case, and we've discarded the unused old space regions.

