WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.250 --> 00:00:04.590
The next parts of the Bootstrap grid system to

00:00:04.590 --> 00:00:07.680
get to grids width is using the rows and columns.

00:00:07.680 --> 00:00:11.220
Both rows and columns are added inside of our containers,

00:00:11.220 --> 00:00:15.389
which we just looked at and used to layout of a contents.

00:00:15.389 --> 00:00:20.955
Let's start by taking a look at how we can use rows inside of our containers.

00:00:20.955 --> 00:00:25.530
In the last video, we looked at the main types of container which we can use.

00:00:25.530 --> 00:00:28.935
Here we have a container class and then below this,

00:00:28.935 --> 00:00:32.910
a container fluid nested inside of these containers,

00:00:32.910 --> 00:00:35.830
we can break up our content into rows.

00:00:35.830 --> 00:00:39.500
These are content areas which span across the page.

00:00:39.500 --> 00:00:44.130
We can have as many rows nested inside as we want.

00:00:44.800 --> 00:00:48.830
We can do this both on the container and also

00:00:48.830 --> 00:00:55.070
the container dash fluid along with the container using a standard breakpoints.

00:00:55.070 --> 00:00:59.710
If we take a look at our rows in more detail,

00:00:59.710 --> 00:01:02.415
over on the right-hand side,

00:01:02.415 --> 00:01:06.090
we can then break up our rows into columns.

00:01:06.090 --> 00:01:12.590
This is a way of declaring how wide we want our content to be inside of our row.

00:01:12.590 --> 00:01:16.595
Bootstrap uses a 12-column grid system,

00:01:16.595 --> 00:01:21.354
which means the width of the page is split up into 12 sections.

00:01:21.354 --> 00:01:25.240
If we want the content to spawn the full available width,

00:01:25.240 --> 00:01:29.065
we declare that we want this to be 12 columns wide.

00:01:29.065 --> 00:01:33.230
If we wanted to break up our row into two equal sections,

00:01:33.230 --> 00:01:38.120
the way we would do this if we had a content area on the left.

00:01:38.120 --> 00:01:41.555
It has a div and then a one on the right.

00:01:41.555 --> 00:01:47.610
We can set these both to be six columns wide, equaling 12 parts.

00:01:47.650 --> 00:01:52.685
If we wanted to break a bubble row into three equal parts,

00:01:52.685 --> 00:01:56.280
we would set this up to be four columns wide.

00:01:56.510 --> 00:02:00.560
Add a separate row just below this.

00:02:00.560 --> 00:02:04.180
For example, a div on the left-hand side,

00:02:04.180 --> 00:02:06.750
one in the center,

00:02:06.750 --> 00:02:08.925
and then one on the right.

00:02:08.925 --> 00:02:12.310
We will set this out to be four columns each.

00:02:14.870 --> 00:02:17.120
Remember early on in the course,

00:02:17.120 --> 00:02:23.890
we said that Bootstrap by default is mobile first and this also applies to columns too.

00:02:23.890 --> 00:02:30.755
When dealing with a mobile device which has a narrow screen like this.

00:02:30.755 --> 00:02:35.200
To start with, columns will always be the full width of the page.

00:02:35.200 --> 00:02:39.090
They'll always span the full width of the view port.

00:02:39.090 --> 00:02:42.380
Then after a certain break points,

00:02:42.380 --> 00:02:45.110
we then need to tell Bootstrap when to break

00:02:45.110 --> 00:02:49.535
out and then split up into these columns just like this.

00:02:49.535 --> 00:02:55.445
The way we do this is to apply some Bootstrap classes to your HTML elements,

00:02:55.445 --> 00:02:58.160
just like we did with the containers.

00:02:58.160 --> 00:03:03.265
What we're going to do this now by putting this into practice inside of our projects.

00:03:03.265 --> 00:03:07.175
If we take a look at the container which we created in the last video,

00:03:07.175 --> 00:03:09.335
we have our content inside,

00:03:09.335 --> 00:03:13.625
but we don't have any rows or columns to structure these contents.

00:03:13.625 --> 00:03:16.970
If we remove this from our section,

00:03:16.970 --> 00:03:19.940
I'm going to now add inside our first row.

00:03:19.940 --> 00:03:24.910
We can add this as a class to any element, such as a div.

00:03:24.910 --> 00:03:27.470
We can ask the class of row,

00:03:27.470 --> 00:03:29.480
and this is going to be a wrapper for

00:03:29.480 --> 00:03:33.260
our columns to give all of our sections some spacing in-between,

00:03:33.260 --> 00:03:36.560
so they are not touching each other across the page.

00:03:36.560 --> 00:03:38.540
Nested inside of this row,

00:03:38.540 --> 00:03:44.360
we can now create multiple sections taking up parts of our 12 column grid.

00:03:44.360 --> 00:03:47.825
If we wanted this to be half the width of the page,

00:03:47.825 --> 00:03:51.970
we could add a class which begins we col,

00:03:51.970 --> 00:03:53.704
since we are using columns,

00:03:53.704 --> 00:03:56.180
we then it declared a media query,

00:03:56.180 --> 00:03:57.965
which you want this to apply to,

00:03:57.965 --> 00:04:00.275
such as a medium-sized device.

00:04:00.275 --> 00:04:04.115
Then the number of columns we want the sections take-up.

00:04:04.115 --> 00:04:08.420
We said before that Bootstrap is designed to be mobile-first,

00:04:08.420 --> 00:04:14.050
meaning that all of our sections would be the full 12 columns wide by defaults.

00:04:14.050 --> 00:04:20.000
What we are saying here by adding this class is basically the 1c screen is hidden.

00:04:20.000 --> 00:04:25.655
A medium-sized device [inaudible] changes to be only six columns wide.

00:04:25.655 --> 00:04:30.965
Then nested inside, we can add up the contents which we just removed before.

00:04:30.965 --> 00:04:33.890
Save this, and over to the browser.

00:04:33.890 --> 00:04:38.195
We now see that our content takes up half of the width of the page.

00:04:38.195 --> 00:04:41.285
If we shrink this down to be a mobile size,

00:04:41.285 --> 00:04:44.485
it now becomes the full width of the screen.

00:04:44.485 --> 00:04:46.695
Back to the medium-sized device.

00:04:46.695 --> 00:04:50.060
This will now take up six columns of the screen.

00:04:50.060 --> 00:04:53.765
Generally content begins as the full-width.

00:04:53.765 --> 00:04:56.135
Since Bootstrap is mobile first,

00:04:56.135 --> 00:04:58.105
until we sell it otherwise,

00:04:58.105 --> 00:05:01.730
we could of course change this MD in the class name to be

00:05:01.730 --> 00:05:07.955
a small or large device if we wanted to switch to six columns at a different time.

00:05:07.955 --> 00:05:11.585
Now the top here is how we have our section currently.

00:05:11.585 --> 00:05:13.100
It's aligned to the left.

00:05:13.100 --> 00:05:17.450
I'm leaving space on the right-hand side for six more columns.

00:05:17.450 --> 00:05:20.270
But once we wanted this content to remain

00:05:20.270 --> 00:05:23.845
half the width of the screen, pushed into the middle.

00:05:23.845 --> 00:05:27.155
There are multiple ways to do this in Bootstrap.

00:05:27.155 --> 00:05:30.730
Some common ways that you use the CSS Flexbox,

00:05:30.730 --> 00:05:32.509
or we can use an offset,

00:05:32.509 --> 00:05:34.655
as we see at the bottom.

00:05:34.655 --> 00:05:38.015
If you push this over by three columns,

00:05:38.015 --> 00:05:39.770
it will center the contents.

00:05:39.770 --> 00:05:43.330
Again, we can fine tune the breakpoint too.

00:05:43.330 --> 00:05:47.525
Let's head over to the text editor and before this.

00:05:47.525 --> 00:05:49.385
We can add a offset.

00:05:49.385 --> 00:05:51.500
Again on medium-sized devices,

00:05:51.500 --> 00:05:54.080
the much of three columns.

00:05:54.080 --> 00:05:58.160
This will mean that our content is still taking up half of the space,

00:05:58.160 --> 00:05:59.480
and the other three columns,

00:05:59.480 --> 00:06:02.080
a distributed before and after.

00:06:02.080 --> 00:06:04.425
Save and reload.

00:06:04.425 --> 00:06:08.150
Now our content is centered on the middle of the page.

00:06:08.150 --> 00:06:12.740
Again, if we shrink the browser down below medium sized devices,

00:06:12.740 --> 00:06:15.890
this will always be the full width of the page.

00:06:15.890 --> 00:06:19.625
There is still some more fine tuning to deal with this section.

00:06:19.625 --> 00:06:23.480
We will return back to where we will look at utility classes.

00:06:23.480 --> 00:06:29.765
This is an introduction to using rows and also columns inside of our bootstrap projects.

00:06:29.765 --> 00:06:32.885
We'll get a lot more practice through out this course.

00:06:32.885 --> 00:06:38.880
Next up, we're going to move on to taking a look at using lists and list groups.
