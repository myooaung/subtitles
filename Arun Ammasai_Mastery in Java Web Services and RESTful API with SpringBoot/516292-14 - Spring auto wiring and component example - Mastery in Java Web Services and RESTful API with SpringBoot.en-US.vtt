WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.205
Hello everyone. Welcome back.

00:00:02.205 --> 00:00:04.380
So we discussed I would tight coupling and the loose coupling.

00:00:04.380 --> 00:00:06.630
So in the loose coupling,

00:00:06.630 --> 00:00:09.135
we did lot of manual mapping, right?

00:00:09.135 --> 00:00:14.070
So but spring has its own components to do the auto wiring.

00:00:14.070 --> 00:00:16.785
So let's have a small nose here.

00:00:16.785 --> 00:00:19.860
So when it comes to a configurations in the spring,

00:00:19.860 --> 00:00:24.330
so how to find out D dependencies and what are the components?

00:00:24.330 --> 00:00:25.935
The step 1.

00:00:25.935 --> 00:00:36.120
So step one, the first thing that you need to do is identified the bins and the step 2.

00:00:37.150 --> 00:00:43.040
I don t phi the dependencies.

00:00:43.040 --> 00:00:45.890
These are the first things in our scenario. What are the beans?

00:00:45.890 --> 00:00:48.545
We created a doctor, that's a bean.

00:00:48.545 --> 00:00:52.070
And we created a engineer that's a bean.

00:00:52.070 --> 00:00:58.130
And we created something called another class called photograph for that is again a bean.

00:00:58.130 --> 00:01:01.385
So all the beans are components here.

00:01:01.385 --> 00:01:07.850
So we are going to annotate all the beans with the annotation called component.

00:01:07.850 --> 00:01:10.430
And then we need to identify what are the dependent is,

00:01:10.430 --> 00:01:12.290
what are the dependencies here?

00:01:12.290 --> 00:01:14.990
The first thing you're doing manual mapping.

00:01:14.990 --> 00:01:17.120
So you'll create an instance and you have to create

00:01:17.120 --> 00:01:19.745
a constructor to do the manual mapping, correct?

00:01:19.745 --> 00:01:23.780
So those are all the dependencies in our scenario here.

00:01:23.780 --> 00:01:33.450
This is dependency, so job shop is a dependency.

00:01:33.910 --> 00:01:38.150
I guess so we need to mark all the beans as

00:01:38.150 --> 00:01:42.695
a component and we need to mark all the dependencies as an auto Wyatt.

00:01:42.695 --> 00:01:44.180
So here what we're gonna do,

00:01:44.180 --> 00:01:47.240
we're going to use at component.

00:01:47.240 --> 00:01:49.415
And if it is a dependency unit,

00:01:49.415 --> 00:01:53.220
we need to use a wired.

00:01:54.070 --> 00:01:58.100
Right? So let's go back and apply this and we'll see what's going to happen.

00:01:58.100 --> 00:02:00.905
So let's go back to our type gobbling up.

00:02:00.905 --> 00:02:03.410
Let's create a new one so we don't want to touch the existing one.

00:02:03.410 --> 00:02:05.000
So I'm going to create a new class here.

00:02:05.000 --> 00:02:12.215
So I'm going to call them as auto wide example, untoward example.

00:02:12.215 --> 00:02:14.795
Okay, so how are we gonna do that?

00:02:14.795 --> 00:02:19.290
First, let's create the same thing here.

00:02:19.840 --> 00:02:22.190
Let's come out with a solution here.

00:02:22.190 --> 00:02:25.710
And I'm going to copy this same thing here.

00:02:25.750 --> 00:02:29.915
And just copy everything and go back to auto white and

00:02:29.915 --> 00:02:33.320
paste it here and just make small modifications.

00:02:33.320 --> 00:02:33.620
Okay.

00:02:33.620 --> 00:02:34.805
This is a manual mapping?

00:02:34.805 --> 00:02:40.655
Correct? And we're going to avoid this because spring will do the job for us.

00:02:40.655 --> 00:02:43.430
So now what I'm gonna do, I'm gonna have to know this.

00:02:43.430 --> 00:02:45.455
And I'm going to keep the only,

00:02:45.455 --> 00:02:47.870
the method and the dependency.

00:02:47.870 --> 00:02:51.755
So dependency has to be marked asset auto wide.

00:02:51.755 --> 00:02:54.125
But here we have our photographer, right?

00:02:54.125 --> 00:02:56.970
This is a component.

00:02:58.900 --> 00:03:03.260
So this is a component and job,

00:03:03.260 --> 00:03:05.660
again, it's, it's a, it's an interface, right?

00:03:05.660 --> 00:03:07.220
So it's a dependency which is,

00:03:07.220 --> 00:03:09.980
which we provided in the implementation class.

00:03:09.980 --> 00:03:13.560
And here it's again, it's going to be a component.

00:03:15.460 --> 00:03:26.645
Component. Okay, So now what is this?

00:03:26.645 --> 00:03:30.845
So we tried component and we have one more class.

00:03:30.845 --> 00:03:36.380
So which needs to be Magda component by component. So now we are good.

00:03:36.380 --> 00:03:38.900
So we marked all the means as a component and we'll,

00:03:38.900 --> 00:03:40.880
let's come to the implementation part.

00:03:40.880 --> 00:03:42.170
This is a dependency, right?

00:03:42.170 --> 00:03:43.370
This is the last one.

00:03:43.370 --> 00:03:47.570
So it has to be mapped automatically.

00:03:47.570 --> 00:03:50.315
Either it needs to be mapped to using constructor,

00:03:50.315 --> 00:03:51.830
our getters and setters.

00:03:51.830 --> 00:03:53.195
So how are we going do that?

00:03:53.195 --> 00:03:56.390
So let me show you that using how your constructor.

00:03:56.390 --> 00:03:58.910
So using constructor, I can do something like this.

00:03:58.910 --> 00:04:00.275
This is a manual mapping.

00:04:00.275 --> 00:04:03.320
The same mapping. You can do that using the citizen get us as well.

00:04:03.320 --> 00:04:04.460
So how we can do that?

00:04:04.460 --> 00:04:07.220
So let's go back and create getter and setter.

00:04:07.220 --> 00:04:10.385
And you can do something like this as well.

00:04:10.385 --> 00:04:11.855
So that is also possible.

00:04:11.855 --> 00:04:16.670
And one more thing you need to define why they say doesn't get her,

00:04:16.670 --> 00:04:19.715
why is the constructor first thing?

00:04:19.715 --> 00:04:27.230
Let's understand the concept or construct why we need a constructor.

00:04:27.230 --> 00:04:30.800
So when you are trying to wiring through auto contract or right, why is that?

00:04:30.800 --> 00:04:35.160
So master day parentheses.

00:04:35.980 --> 00:04:40.580
So when if you know that this is some dependency which is a mast one,

00:04:40.580 --> 00:04:41.855
you cannot be ignored.

00:04:41.855 --> 00:04:44.690
Those kind of scenario. You can go for a contract that,

00:04:44.690 --> 00:04:47.490
and there are such scenarios.

00:04:50.320 --> 00:04:52.880
It might be optional.

00:04:52.880 --> 00:04:56.300
So on those kind of scenarios you can go for,

00:04:56.300 --> 00:05:00.620
say doesn't get or injections for now we tried constructor and if you want,

00:05:00.620 --> 00:05:03.290
you can try to get his ancestor the way how we,

00:05:03.290 --> 00:05:04.715
I showed you here.

00:05:04.715 --> 00:05:06.530
So now we're not gonna do that.

00:05:06.530 --> 00:05:11.340
So we going to do it automatically.

00:05:12.910 --> 00:05:15.680
So job is a dependency, right?

00:05:15.680 --> 00:05:21.125
So we need to map it using auto wired. Sorry.

00:05:21.125 --> 00:05:23.580
So it is auto wide.

00:05:24.400 --> 00:05:28.740
See now the auto white has been done.

00:05:31.360 --> 00:05:33.170
So everything is good.

00:05:33.170 --> 00:05:34.625
We just met a small change.

00:05:34.625 --> 00:05:37.085
We wired that dependency says auto wired.

00:05:37.085 --> 00:05:40.130
We mark our beans as a component.

00:05:40.130 --> 00:05:44.450
So now what we need to do is just run the code and see what is the outcome.

00:05:44.450 --> 00:05:46.220
But before that we didn't implement it, right?

00:05:46.220 --> 00:05:50.315
So let's go here and we'll try to create,

00:05:50.315 --> 00:05:52.595
well, let's see how we can call them.

00:05:52.595 --> 00:05:54.260
Okay, so now we credit everything.

00:05:54.260 --> 00:05:58.310
So in the next video, I'm gonna show you how you can use the auto wire and

00:05:58.310 --> 00:06:02.420
the component to run through a spring application.

00:06:02.420 --> 00:06:04.490
So it's not going to be run like this.

00:06:04.490 --> 00:06:07.970
So we need to create a context from

00:06:07.970 --> 00:06:11.765
the context we need to read the mean because the moment when you start the application,

00:06:11.765 --> 00:06:14.180
the auto wiring is automatically happen through

00:06:14.180 --> 00:06:17.314
the spring and everything will be stored in the context.

00:06:17.314 --> 00:06:18.620
So from the context,

00:06:18.620 --> 00:06:20.930
you can read the bean and you can print

00:06:20.930 --> 00:06:23.960
the beam here and print whatever method you are looking for.

00:06:23.960 --> 00:06:26.340
So let's do that in the next video.
