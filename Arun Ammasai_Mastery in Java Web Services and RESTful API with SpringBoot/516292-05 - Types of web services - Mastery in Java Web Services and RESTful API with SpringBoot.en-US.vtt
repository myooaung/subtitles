WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.215
Hello everyone.

00:00:01.215 --> 00:00:02.145
Welcome back.

00:00:02.145 --> 00:00:05.820
So let's talk about what are the different types

00:00:05.820 --> 00:00:09.735
of web services that are too important lip service models.

00:00:09.735 --> 00:00:11.280
The first one is soap,

00:00:11.280 --> 00:00:13.215
which is a traditional one,

00:00:13.215 --> 00:00:15.240
and the second one is either erased.

00:00:15.240 --> 00:00:18.540
So slope is Simple Object Access Protocol,

00:00:18.540 --> 00:00:21.870
which is working based on the XML input and the output,

00:00:21.870 --> 00:00:27.000
which means eczema requests and XML response and rest is an architectural type.

00:00:27.000 --> 00:00:30.165
It does not belongs to a specific request or response type,

00:00:30.165 --> 00:00:32.820
which means when you're using Rails two,

00:00:32.820 --> 00:00:38.685
you have the eligibility to use and different kinds of input request, different format.

00:00:38.685 --> 00:00:41.090
It may be JSON, XML,

00:00:41.090 --> 00:00:44.360
lot plain text, and much more.

00:00:44.360 --> 00:00:51.125
So let's have a look at how soaps or recess is looks like and how it is working.

00:00:51.125 --> 00:00:54.410
It is just like another different kind of web services.

00:00:54.410 --> 00:00:57.110
You'll make a call or you will make a request,

00:00:57.110 --> 00:00:58.685
it will respond to you.

00:00:58.685 --> 00:01:01.220
So it's just a client and subtle communication,

00:01:01.220 --> 00:01:03.155
making a request and getting a response.

00:01:03.155 --> 00:01:04.040
The same.

00:01:04.040 --> 00:01:07.070
But the way how it is going to communicate through

00:01:07.070 --> 00:01:09.950
only the XML request when you're using

00:01:09.950 --> 00:01:13.730
XML because there are a lot of things which we need to keep it in mind.

00:01:13.730 --> 00:01:15.410
Because not only the body,

00:01:15.410 --> 00:01:18.020
body contains the request essentially information.

00:01:18.020 --> 00:01:19.190
And apart from the body,

00:01:19.190 --> 00:01:21.935
there are other things we need to

00:01:21.935 --> 00:01:26.255
make sure whether the service is looking for any header information.

00:01:26.255 --> 00:01:29.930
Header information, which contains some security level informations.

00:01:29.930 --> 00:01:31.910
For example, you have a Web Services,

00:01:31.910 --> 00:01:33.710
I can make a call to your web services.

00:01:33.710 --> 00:01:35.990
Even there's some other person also

00:01:35.990 --> 00:01:38.450
can make a website which has called for the same service.

00:01:38.450 --> 00:01:44.450
But if you want to restrict only the people who as a proper username and password,

00:01:44.450 --> 00:01:46.534
they can only access my Web Services.

00:01:46.534 --> 00:01:48.020
In that particular scenario,

00:01:48.020 --> 00:01:49.250
you need to make use of

00:01:49.250 --> 00:01:53.584
the security information which is available in the header information.

00:01:53.584 --> 00:01:58.430
So let's have a look at how is a soap structure looks like.

00:01:58.430 --> 00:02:01.339
And, and another thing, as I mentioned,

00:02:01.339 --> 00:02:06.320
the slope IP services endpoints or ends with the dot WSDL,

00:02:06.320 --> 00:02:09.635
which is a web service or Definition Language.

00:02:09.635 --> 00:02:13.460
And let's see how the structure looks like.

00:02:13.460 --> 00:02:14.855
As I mentioned earlier,

00:02:14.855 --> 00:02:19.820
soap contained with the header and the body information.

00:02:19.820 --> 00:02:23.330
So our soap envelop is a container which contains

00:02:23.330 --> 00:02:27.874
the header level information on the board level information, header level information.

00:02:27.874 --> 00:02:29.990
It, it will carry the I use

00:02:29.990 --> 00:02:33.950
an impartial information and some other Asian chilled metadata information and bodies,

00:02:33.950 --> 00:02:37.310
the one, the Asian till information for your request.

00:02:37.310 --> 00:02:39.305
The element, the, for example,

00:02:39.305 --> 00:02:41.030
if you are requesting for your inbox,

00:02:41.030 --> 00:02:44.240
you're going you may need to use your Gmail username and the password.

00:02:44.240 --> 00:02:47.300
Those information will be passed through the XML body.

00:02:47.300 --> 00:02:50.300
Okay, So let's see what is

00:02:50.300 --> 00:02:52.640
the Soap header which will holds

00:02:52.640 --> 00:02:56.000
the Meta information as we discussed earlier, and authentication.

00:02:56.000 --> 00:02:59.210
And it will carry some signatures as well.

00:02:59.210 --> 00:03:03.245
And what body contains that request and the response.

00:03:03.245 --> 00:03:04.865
So if you're pushing something,

00:03:04.865 --> 00:03:07.385
you need to do it in a proper format is XML format.

00:03:07.385 --> 00:03:09.740
And the similar way once you process the information,

00:03:09.740 --> 00:03:16.145
you're descend back the response back to the client again as a decimal or a response.

00:03:16.145 --> 00:03:22.265
Okay, so there are different ways you can post a message in the soap envelope.

00:03:22.265 --> 00:03:24.110
And another important ways,

00:03:24.110 --> 00:03:25.505
I MQ message queue.

00:03:25.505 --> 00:03:27.665
Let's not talk about the message queue too much here.

00:03:27.665 --> 00:03:31.190
So because that is not an essential information as,

00:03:31.190 --> 00:03:32.675
but this particular course structure.

00:03:32.675 --> 00:03:37.050
So let's talk about rest in the next video.
