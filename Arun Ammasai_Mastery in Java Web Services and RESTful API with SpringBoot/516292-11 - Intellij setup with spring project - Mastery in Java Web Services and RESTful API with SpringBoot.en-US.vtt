WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.265
Hello everyone, Welcome back.

00:00:02.265 --> 00:00:04.170
So the intelligent has been installed.

00:00:04.170 --> 00:00:07.305
So when you open the intelligence and the first time,

00:00:07.305 --> 00:00:10.335
it will pop up with the Welcome dialog box.

00:00:10.335 --> 00:00:14.220
Here you can choose a new project or you can open our input,

00:00:14.220 --> 00:00:18.040
or you can download any project from your Git repository.

00:00:18.040 --> 00:00:20.630
But for now, we are planning to

00:00:20.630 --> 00:00:24.110
create a spring standard project. So what do we need to do?

00:00:24.110 --> 00:00:28.400
First thing, we need to make sure the intelligent ID has this spring support to

00:00:28.400 --> 00:00:32.840
identify that what you can do is you can go to configure and you can choose plug-in.

00:00:32.840 --> 00:00:35.810
And there it will take you to IntelliJ,

00:00:35.810 --> 00:00:37.985
a marketplace that you can find,

00:00:37.985 --> 00:00:41.210
search for a spring like how we did an eclipse.

00:00:41.210 --> 00:00:45.725
When you do it, it will give you a lot of different plug-ins here.

00:00:45.725 --> 00:00:50.210
But the one which I'm referring is a spring as his tent.

00:00:50.210 --> 00:00:53.915
So which is a pretty good combating to other add-ons,

00:00:53.915 --> 00:00:55.325
but it's still up to you.

00:00:55.325 --> 00:00:57.860
Whatever you like it.

00:00:57.860 --> 00:01:00.740
You can install them and you can make use of it or else you can try

00:01:00.740 --> 00:01:04.070
multiple add ons and see how

00:01:04.070 --> 00:01:07.520
it is working and which one you feel comfortable and you can install them.

00:01:07.520 --> 00:01:10.160
So since we have us bring us to the already existing,

00:01:10.160 --> 00:01:14.210
so I'm going to cancel it and I'm going to create a new project.

00:01:14.210 --> 00:01:17.405
And here, since we have a spring support,

00:01:17.405 --> 00:01:21.350
you should be able to see the spring as 10 here and the JDK version,

00:01:21.350 --> 00:01:24.005
I'm going to use Java 1.8.

00:01:24.005 --> 00:01:27.455
And from where I'm going to download my project.

00:01:27.455 --> 00:01:30.740
It's from start spring,

00:01:30.740 --> 00:01:33.395
I owe the spring initializer,

00:01:33.395 --> 00:01:34.985
and then click Next.

00:01:34.985 --> 00:01:37.550
And let's provide some sample information here.

00:01:37.550 --> 00:01:38.735
So calm, not example.

00:01:38.735 --> 00:01:42.555
I'm here, I can say com dot first application.

00:01:42.555 --> 00:01:46.390
And then we can click and make sure it's

00:01:46.390 --> 00:01:49.510
the project type is an oven and the language is Java.

00:01:49.510 --> 00:01:50.890
We haven't gone, you don't want to use any of

00:01:50.890 --> 00:01:54.340
the other things like GloVe or something like that.

00:01:54.340 --> 00:01:58.795
So we're gonna use Java and their version I'm going to use is Java eight.

00:01:58.795 --> 00:02:00.955
And then I'm going to click Next.

00:02:00.955 --> 00:02:04.930
And then we need to choose any one of the dependency,

00:02:04.930 --> 00:02:07.270
at least when you're doing eclipse,

00:02:07.270 --> 00:02:08.710
you don't need to choose any of

00:02:08.710 --> 00:02:13.345
the dependent is because by default the core will available.

00:02:13.345 --> 00:02:15.670
But in Indonesia it's discipline project,

00:02:15.670 --> 00:02:18.430
but you need to choose any one of the dependencies for now what I'm gonna do,

00:02:18.430 --> 00:02:23.350
I'm gonna simply choose a spring web and then click Next.

00:02:23.350 --> 00:02:25.395
And then let, let's name it.

00:02:25.395 --> 00:02:28.729
Maybe I can call it a fast application,

00:02:28.729 --> 00:02:33.799
or I can call it the first spring application.

00:02:33.799 --> 00:02:37.040
And let's click Finish.

00:02:37.040 --> 00:02:39.380
So it will download the project from

00:02:39.380 --> 00:02:43.955
your spring initializer and it will configure the newer application here.

00:02:43.955 --> 00:02:46.205
So now we have everything in place.

00:02:46.205 --> 00:02:48.035
The next thing what we need to do,

00:02:48.035 --> 00:02:50.150
we are not going to modify anything, right?

00:02:50.150 --> 00:02:53.900
We're just trying to run the spring obligation,

00:02:53.900 --> 00:02:58.010
so I'm going to do the same thing like how we did in the Eclipse.

00:02:58.010 --> 00:03:03.905
So what I'm gonna do is let's try to put some sea salt here.

00:03:03.905 --> 00:03:11.180
I'm going to say, welcome to our Spring application.

00:03:11.180 --> 00:03:13.700
So the moment the application got started,

00:03:13.700 --> 00:03:16.460
this line will be executed and we should

00:03:16.460 --> 00:03:19.520
be able to see this particular outcome in your console.

00:03:19.520 --> 00:03:21.050
So now what I'm gonna do.

00:03:21.050 --> 00:03:23.750
So this demo obligation is a Spring Boot application so

00:03:23.750 --> 00:03:27.485
you can right-click and simply run the class.

00:03:27.485 --> 00:03:30.065
It will start the spring application.

00:03:30.065 --> 00:03:32.330
So intelligent.

00:03:32.330 --> 00:03:37.160
You may feel like it's a slow when it comes back to Eclipse ID,

00:03:37.160 --> 00:03:40.925
but it will slow one Linda for stem and you're starting the application.

00:03:40.925 --> 00:03:47.030
So I'm just open the console here and you should be able to see all the details here.

00:03:47.030 --> 00:03:52.800
So now the spring has been a starter and it is loading the configuration.

00:03:56.620 --> 00:04:00.380
Okay, So the an application has been started within

00:04:00.380 --> 00:04:04.775
23 seconds and we got our welcome to Spring application, the outcome.

00:04:04.775 --> 00:04:07.610
We got it in the console.

00:04:07.610 --> 00:04:14.105
So now we know how to create a simple application using Eclipse and ID,

00:04:14.105 --> 00:04:19.265
I mean, as a spring project and now we know how to run the application as well.

00:04:19.265 --> 00:04:21.500
So in the next video, what we're gonna do,

00:04:21.500 --> 00:04:24.950
the reason why we are going to use Spring in the first place

00:04:24.950 --> 00:04:28.805
because we need to make use of the inversion of control,

00:04:28.805 --> 00:04:31.190
dependency injection and when done,

00:04:31.190 --> 00:04:34.025
understand the tight coupling and loose coupling.

00:04:34.025 --> 00:04:36.440
So in the next video,

00:04:36.440 --> 00:04:40.205
what I'm going to do is I'm going to create a simple example and I'll show you what

00:04:40.205 --> 00:04:44.630
is the problem with the tight coupling and how it can be fixed or using loose coupling.

00:04:44.630 --> 00:04:51.575
And then how we can use a spring configuration to make them much more efficient.

00:04:51.575 --> 00:04:54.425
So we'll talk about all of them in the next video.

00:04:54.425 --> 00:04:56.550
Thank you.
