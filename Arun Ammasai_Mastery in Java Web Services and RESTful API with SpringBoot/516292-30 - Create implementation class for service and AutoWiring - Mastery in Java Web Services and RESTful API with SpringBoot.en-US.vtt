WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.935
Hello everyone, Welcome back.

00:00:01.935 --> 00:00:05.655
So just to try some more efficient testing,

00:00:05.655 --> 00:00:07.890
I just created something called offline repository,

00:00:07.890 --> 00:00:11.775
which contains a list of employee.

00:00:11.775 --> 00:00:16.620
Okay, So i and I created a simple DDO which contains employee ID,

00:00:16.620 --> 00:00:20.125
employee name, location, and PIN code.

00:00:20.125 --> 00:00:23.705
The reason why I get into our friend repository,

00:00:23.705 --> 00:00:26.210
just continuous often repository to the database.

00:00:26.210 --> 00:00:30.170
So we're retrieving the information from the database and Map 2 over.

00:00:30.170 --> 00:00:33.170
Jack's week last sends the response back to the user.

00:00:33.170 --> 00:00:35.660
Okay, so at the moment, if I call

00:00:35.660 --> 00:00:41.225
the get employment that in there equals we'll have the employee ID.

00:00:41.225 --> 00:00:42.350
So what we're gonna do,

00:00:42.350 --> 00:00:44.660
we're gonna call this particular method and

00:00:44.660 --> 00:00:47.780
we'll fetch one lead that particular employee alone.

00:00:47.780 --> 00:00:52.730
So that is how we're going to process from this often in depository.

00:00:52.730 --> 00:00:55.835
So now we need to maybe changes in this particular class.

00:00:55.835 --> 00:00:59.390
And we don't need any these things because we don't

00:00:59.390 --> 00:01:02.895
need the hard-coded logic anymore because we are going to use real data.

00:01:02.895 --> 00:01:04.720
Assumed I get real data.

00:01:04.720 --> 00:01:08.330
So instead of database, we are going to use the offering and a positive three.

00:01:08.490 --> 00:01:10.615
Okay?

00:01:10.615 --> 00:01:13.585
And also we don't want to call all the methods from here.

00:01:13.585 --> 00:01:16.540
So we need to use the auto wiring functionality so

00:01:16.540 --> 00:01:19.570
we can write a separate implementation class.

00:01:19.570 --> 00:01:21.280
So whenever you want to call some method,

00:01:21.280 --> 00:01:22.450
you want to face some information.

00:01:22.450 --> 00:01:27.070
You can call the implementation class and then you can retrieve the information here.

00:01:27.070 --> 00:01:33.235
So what I'm gonna do, I'm gonna create a class here like employee service implementation.

00:01:33.235 --> 00:01:42.385
Employee service, I, MPL and service.

00:01:42.385 --> 00:01:49.835
And I'm going to provide auto services here at what a wired.

00:01:49.835 --> 00:01:54.740
So now it is throw an error message that is no such thing called employee service I EMBL.

00:01:54.740 --> 00:02:00.800
So what I'm gonna do, I'm gonna create employee surveys class.

00:02:00.800 --> 00:02:03.200
The reason why I'm using AutoCAD because it'll

00:02:03.200 --> 00:02:05.705
automatically wired when you're starting the application.

00:02:05.705 --> 00:02:08.870
So I'm going to keep it under the config folder, okay?

00:02:08.870 --> 00:02:13.680
Or we can keep it as a dot service as well.

00:02:16.150 --> 00:02:20.180
Okay, so now we've got the employee salaries creator.

00:02:20.180 --> 00:02:22.730
So what are the next thing that you need to do?

00:02:22.730 --> 00:02:25.220
So the first thing from the endpoint method you are

00:02:25.220 --> 00:02:28.355
going to call you ever get employee method here.

00:02:28.355 --> 00:02:31.280
All right, so here what I'm going to do in the end point,

00:02:31.280 --> 00:02:32.420
we have this obese rates.

00:02:32.420 --> 00:02:33.860
So what I'm gonna do for now,

00:02:33.860 --> 00:02:36.830
I'm going to remove all of this.

00:02:36.830 --> 00:02:40.700
Sorry, sorry, I want to remove all of this.

00:02:40.700 --> 00:02:46.160
So I'm going to use the service dot,

00:02:46.160 --> 00:02:51.335
get employee ID, employee I'm going to call the get employment third,

00:02:51.335 --> 00:02:55.640
which will have subsidy request dot get employee ID.

00:02:55.640 --> 00:02:58.145
But that method is not created yet.

00:02:58.145 --> 00:03:01.820
Indie. The implementation, right?

00:03:01.820 --> 00:03:03.230
We just created the class alone.

00:03:03.230 --> 00:03:04.625
So the next thing which we need to do,

00:03:04.625 --> 00:03:07.340
create a method inside that get employee which accepts as

00:03:07.340 --> 00:03:12.480
a employee ID director and dismount that needs to return our employee.

00:03:13.960 --> 00:03:19.260
N for now I'm going to return something or nothing.

00:03:20.380 --> 00:03:22.760
In return null.

00:03:22.760 --> 00:03:25.145
Okay, So the first thing,

00:03:25.145 --> 00:03:29.420
I'm going to redo all the employee list which is available in the repository, right?

00:03:29.420 --> 00:03:38.030
So offline repository dot get really happening here.

00:03:38.030 --> 00:03:41.060
So offline depository dot,

00:03:41.060 --> 00:03:43.325
right is somewhat often an inflammatory here.

00:03:43.325 --> 00:03:46.020
I'm going to get employees.

00:03:51.870 --> 00:03:54.970
So this is a public method to read your problems here.

00:03:54.970 --> 00:04:03.070
So what does it not visible here?

00:04:03.070 --> 00:04:05.560
We're just going to return a list of employees, right?

00:04:05.560 --> 00:04:11.030
So list of employees and

00:04:20.370 --> 00:04:23.725
often repository dot get Implies.

00:04:23.725 --> 00:04:26.695
So now we have the list of employees which is available.

00:04:26.695 --> 00:04:29.170
So from this particular list of employees,

00:04:29.170 --> 00:04:35.090
we can do to only one employee Ireland based on the employee ID.

00:04:35.090 --> 00:04:36.440
Can you do that?

00:04:36.440 --> 00:04:44.225
Okay, So we're gonna use the geoid as streams here to filter out specific employee here.

00:04:44.225 --> 00:04:46.595
So now what I'm gonna do the first thing,

00:04:46.595 --> 00:04:49.310
that list of employees dot I'm going to open

00:04:49.310 --> 00:04:52.745
this remote of it because I'm going to use the filter condition.

00:04:52.745 --> 00:04:57.125
So the filter, which will accept a pretty good as the input.

00:04:57.125 --> 00:05:00.785
So the predicate, which is nothing but it just takes a condition until it or no,

00:05:00.785 --> 00:05:02.330
true or false, it's a Boolean.

00:05:02.330 --> 00:05:03.005
Okay?

00:05:03.005 --> 00:05:05.705
So I'm going to pass the lambda expression here,

00:05:05.705 --> 00:05:11.330
EMP and the token and E M p dot get employee ID,

00:05:11.330 --> 00:05:15.605
sorry, get employee ID is equal to which is coming from the request.

00:05:15.605 --> 00:05:19.580
Employee ID. So if any matches out,

00:05:19.580 --> 00:05:23.300
if our fine first off, we can use any image.

00:05:23.300 --> 00:05:29.435
So I'm going to use a fine first mater and find first.

00:05:29.435 --> 00:05:31.250
And that's all and this will be done.

00:05:31.250 --> 00:05:34.580
I list of optional employee, right?

00:05:34.580 --> 00:05:36.770
So now what I'm gonna do, I'm gonna receive it right?

00:05:36.770 --> 00:05:41.130
So dot, so optionals employee.

00:05:41.350 --> 00:05:45.140
So finally what I need to do and enter it in as an employee, right?

00:05:45.140 --> 00:05:47.060
So then we have the optional to retrieve

00:05:47.060 --> 00:05:51.215
the exact object you need to use the get metadata.

00:05:51.215 --> 00:05:53.610
So here what I'm gonna do.

00:05:53.860 --> 00:05:58.775
So written employee dot getMethod,

00:05:58.775 --> 00:06:01.655
which will give you the exact object employee.

00:06:01.655 --> 00:06:05.210
So now we have a method which will takes a single input and it'll give you

00:06:05.210 --> 00:06:10.655
the exact employee which is matches in the offline depository.

00:06:10.655 --> 00:06:13.055
Now let's go back to the endpoint configuration here.

00:06:13.055 --> 00:06:16.160
Now we have the Soviets 30,

00:06:16.160 --> 00:06:17.825
and now what we needed a dot.

00:06:17.825 --> 00:06:19.475
Let's create a variable here.

00:06:19.475 --> 00:06:24.470
So it will use a single employee as a response, right?

00:06:24.470 --> 00:06:31.700
So the next thing, the moment we've got a respond,

00:06:31.700 --> 00:06:33.095
the next thing which we need to do,

00:06:33.095 --> 00:06:36.140
we need to map the data, right?

00:06:36.140 --> 00:06:38.840
So what is a data which we need?

00:06:38.840 --> 00:06:40.190
We need the employee details, right?

00:06:40.190 --> 00:06:42.900
So we have to map the information.

00:06:43.360 --> 00:06:49.940
It's an endpoint, we will get d. And ploidy delta is equal to

00:06:49.940 --> 00:06:58.040
new employee dot and employee details dot set employee ID,

00:06:58.040 --> 00:07:04.265
which is coming from the employee employee ID.

00:07:04.265 --> 00:07:10.295
And then we need to use employee details,

00:07:10.295 --> 00:07:16.205
dot set employee name and which will come from the employee dot,

00:07:16.205 --> 00:07:20.275
get employee name and then what else is required.

00:07:20.275 --> 00:07:24.850
So employee details don't sit and location, right?

00:07:24.850 --> 00:07:31.345
So employee dot get location, sorry.

00:07:31.345 --> 00:07:33.220
So getLocation.

00:07:33.220 --> 00:07:39.745
And the final one is a pin port employee dot set pin code.

00:07:39.745 --> 00:07:44.260
And it is available in the employee dot get PIN code.

00:07:44.260 --> 00:07:47.380
Okay, so now we've got everything in place and all,

00:07:47.380 --> 00:07:51.475
all we need to do, just simply add the employee to respondents and back.

00:07:51.475 --> 00:07:58.405
So response dot set employee details is equal to employee details.

00:07:58.405 --> 00:08:00.555
So now everything in place,

00:08:00.555 --> 00:08:03.140
but the core loops, not bad,

00:08:03.140 --> 00:08:05.120
good because we have the mapper here, right?

00:08:05.120 --> 00:08:08.075
So it has to be in a separate method.

00:08:08.075 --> 00:08:12.410
So it doesn't look good if it is everything available in the same method, right?

00:08:12.410 --> 00:08:13.925
So now what I'm gonna do,

00:08:13.925 --> 00:08:17.910
I'm going to map it here like

00:08:18.760 --> 00:08:26.870
right-click and generate seconds.

00:08:26.870 --> 00:08:29.825
So right-click Extract rate refactor.

00:08:29.825 --> 00:08:36.365
And here you can make this a parameter rename extract method.

00:08:36.365 --> 00:08:40.260
So I'm going to name it as a map employee,

00:08:41.920 --> 00:08:47.735
LK, employee and refactor.

00:08:47.735 --> 00:08:51.110
See now we have the map employee which will which

00:08:51.110 --> 00:08:54.560
will take the response and take the employee.

00:08:54.560 --> 00:08:59.180
And it will map the exact response outcomes if the employee is coming from database and

00:08:59.180 --> 00:09:04.850
the employee details which we need to send us a response back to the user LP.

00:09:04.850 --> 00:09:07.220
In the next video, we're gonna make a little more changes

00:09:07.220 --> 00:09:10.680
and then we'll run the code and we'll see how it's going to walk out.
