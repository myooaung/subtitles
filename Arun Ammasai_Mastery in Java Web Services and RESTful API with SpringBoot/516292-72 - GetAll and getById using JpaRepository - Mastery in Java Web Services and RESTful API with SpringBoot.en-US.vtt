WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.400
Hello everyone, Welcome back.

00:00:02.400 --> 00:00:04.560
So using our repository,

00:00:04.560 --> 00:00:07.785
we just perform some operation here just to save,

00:00:07.785 --> 00:00:14.760
but not only that, there are different methods we can use it so to fetch operation.

00:00:14.760 --> 00:00:16.185
So how we can do that?

00:00:16.185 --> 00:00:18.545
Maybe instead of creating a new method.

00:00:18.545 --> 00:00:20.190
So what I'm gonna do is I'm okay,

00:00:20.190 --> 00:00:22.350
let's create new, but it's not going to take much time, right?

00:00:22.350 --> 00:00:27.020
So sorry, it's a GET mapping.

00:00:27.020 --> 00:00:29.390
So here what I'm gonna do,

00:00:29.390 --> 00:00:33.810
we'll provide the URL, right, made all students.

00:00:34.960 --> 00:00:38.340
Okay, so all students here.

00:00:42.550 --> 00:00:46.980
So public list of

00:00:49.810 --> 00:00:57.780
this stuff student and I'm going to call them as I get all students.

00:00:58.630 --> 00:01:00.740
Okay, So here's the deal.

00:01:00.740 --> 00:01:02.420
So how are we going to get the order?

00:01:02.420 --> 00:01:03.755
Do I need to write a query?

00:01:03.755 --> 00:01:05.945
You don't have to. We have the repository, right?

00:01:05.945 --> 00:01:07.565
But if you're using Diego,

00:01:07.565 --> 00:01:08.990
which contains the entity manager,

00:01:08.990 --> 00:01:11.060
you write your query manually.

00:01:11.060 --> 00:01:13.160
But since we are using a possible tree,

00:01:13.160 --> 00:01:17.480
we can simply use a repr method and find all.

00:01:17.480 --> 00:01:20.000
So we shall give all the list of students.

00:01:20.000 --> 00:01:22.740
So what we can do, we can simply return,

00:01:25.150 --> 00:01:28.295
return list of all the students.

00:01:28.295 --> 00:01:29.615
So now what we need to do,

00:01:29.615 --> 00:01:31.115
we just met a change, right?

00:01:31.115 --> 00:01:32.945
Just simple. All we need to do,

00:01:32.945 --> 00:01:34.880
just start your application.

00:01:34.880 --> 00:01:37.940
And this time we have to verify a few things because we just

00:01:37.940 --> 00:01:41.870
modified the database to the different configuration,

00:01:41.870 --> 00:01:43.505
which means the default configuration.

00:01:43.505 --> 00:01:45.950
So the previous changes,

00:01:45.950 --> 00:01:48.960
which will not work, right?

00:01:49.110 --> 00:01:52.600
Because that is a random generated database name.

00:01:52.600 --> 00:01:54.100
Every time the satellite is started,

00:01:54.100 --> 00:01:56.690
it will give you a different one.

00:01:59.760 --> 00:02:03.820
Okay, so now it is done. Let's see.

00:02:03.820 --> 00:02:07.150
See now the hashtag console data was available,

00:02:07.150 --> 00:02:09.820
JDBC. These are default on.

00:02:09.820 --> 00:02:13.150
This will never change. It doesn't matter how many times you restart your application,

00:02:13.150 --> 00:02:15.200
this will never change.

00:02:15.660 --> 00:02:24.115
So let's go to the browser and refresh it one more time anyway. The previous one.

00:02:24.115 --> 00:02:25.810
So once it is refresh,

00:02:25.810 --> 00:02:28.510
we have to replace it because this is a problem

00:02:28.510 --> 00:02:31.605
1 and Test Connection succeed and connected.

00:02:31.605 --> 00:02:33.710
Now let's go back to the student and run.

00:02:33.710 --> 00:02:36.815
It will not have any student because we haven't tried any, right?

00:02:36.815 --> 00:02:39.635
So let's go back to Postman here.

00:02:39.635 --> 00:02:44.705
And I'm going to hit persistence student once successful.

00:02:44.705 --> 00:02:48.335
And then I'm going to use the Save student as well.

00:02:48.335 --> 00:02:55.565
And here it's going to be Danielle and 26 and send again.

00:02:55.565 --> 00:02:58.340
So we created two different students.

00:02:58.340 --> 00:03:01.895
Let's go back to our browser and see whether it is stored.

00:03:01.895 --> 00:03:03.500
Okay, So now it is done.

00:03:03.500 --> 00:03:05.030
The next thing what I need to do,

00:03:05.030 --> 00:03:06.800
get all the students right,

00:03:06.800 --> 00:03:11.465
so let's create a new Let's create a new request.

00:03:11.465 --> 00:03:14.120
And that's going to be a here.

00:03:14.120 --> 00:03:16.265
What is a method which we draw it here?

00:03:16.265 --> 00:03:19.355
Let's go back to the controller.

00:03:19.355 --> 00:03:21.380
Also rents this is our solvent.

00:03:21.380 --> 00:03:23.720
Let's go back here and paste it here.

00:03:23.720 --> 00:03:25.910
I'll sort and so what lab and that is no inputs, right?

00:03:25.910 --> 00:03:28.190
So let's quit send.

00:03:28.190 --> 00:03:32.315
Okay, So what happened? Internal server error, so something wrong.

00:03:32.315 --> 00:03:34.775
So let's see what went wrong.

00:03:34.775 --> 00:03:38.090
Let's go back to our ID and let's see,

00:03:38.090 --> 00:03:41.540
is there any, Okay,

00:03:41.540 --> 00:03:43.610
Something, we've got some error message.

00:03:43.610 --> 00:03:45.780
So let's see what is that.

00:03:47.230 --> 00:03:49.490
So no default, okay,

00:03:49.490 --> 00:03:52.895
this is another important thing which I forgot to mention.

00:03:52.895 --> 00:03:56.885
So whenever you working with the entity,

00:03:56.885 --> 00:04:00.335
make sure you have the default constructor.

00:04:00.335 --> 00:04:02.570
So the first time when we get a steward and we have

00:04:02.570 --> 00:04:05.420
the contract are but it's not a default constructor.

00:04:05.420 --> 00:04:09.270
So you need to have a default constructor as well.

00:04:09.490 --> 00:04:12.425
So let's create a constructor,

00:04:12.425 --> 00:04:14.765
and I don't want to use any of the, any of them.

00:04:14.765 --> 00:04:16.115
Click Okay.

00:04:16.115 --> 00:04:18.570
And I don't want this as well.

00:04:20.230 --> 00:04:23.375
So just keep that in mind.

00:04:23.375 --> 00:04:26.825
So whenever you're working with the entities,

00:04:26.825 --> 00:04:29.240
make sure you have the default constructor.

00:04:29.240 --> 00:04:31.625
Always, it doesn't matter whether you're gonna use it or not.

00:04:31.625 --> 00:04:33.349
It must necessary.

00:04:33.349 --> 00:04:36.390
Okay, let's read that again one more time.

00:04:40.380 --> 00:04:43.210
Applications getting a start.

00:04:43.210 --> 00:04:45.130
So now if you,

00:04:45.130 --> 00:04:47.650
if you take a look at the logs now,

00:04:47.650 --> 00:04:50.755
the database, it will not change, it remains the same.

00:04:50.755 --> 00:04:55.735
So now what I'm gonna do, I'm gonna go back to our database and refresh it one more time.

00:04:55.735 --> 00:05:00.340
And I'm not going to change any information in our a JDBC connection.

00:05:00.340 --> 00:05:01.810
Say I'm not gonna change anything.

00:05:01.810 --> 00:05:04.240
I'm going to unclick this connection and connect.

00:05:04.240 --> 00:05:10.435
So Ran student, and then that won't be anything because we haven't store any of them.

00:05:10.435 --> 00:05:11.950
So now what I'm gonna do first,

00:05:11.950 --> 00:05:15.710
let's insert a student and

00:05:24.810 --> 00:05:32.260
Student and I'm going to change the name to Nancy and 27.

00:05:32.260 --> 00:05:34.570
Okay. Let's click one more time.

00:05:34.570 --> 00:05:38.815
Okay, it's done. Let's go back to our browser and run it one more time.

00:05:38.815 --> 00:05:42.220
Now we should be able to see all the students,

00:05:42.220 --> 00:05:45.250
right, let's go back and write not a GET method.

00:05:45.250 --> 00:05:48.235
And let's trigger send again.

00:05:48.235 --> 00:05:50.755
See now we've got all the information.

00:05:50.755 --> 00:05:53.800
So we do know that how to modify that responds to

00:05:53.800 --> 00:05:56.935
how to ignore a specific element from the response.

00:05:56.935 --> 00:06:02.830
And for that we used static filter and dynamic filter.

00:06:02.830 --> 00:06:09.260
Right? So we've already done something here, but let's try one more.

00:06:09.260 --> 00:06:12.980
Madrid asked, well, how to pass the inputs, right?

00:06:12.980 --> 00:06:15.125
We should try that one always.

00:06:15.125 --> 00:06:16.775
So let's go back through and control.

00:06:16.775 --> 00:06:18.050
I'm going to create a 11 matter.

00:06:18.050 --> 00:06:24.079
Let's copy this Control C. Since we already tried all these methods.

00:06:24.079 --> 00:06:31.710
Before. I'm going faster gets dude and by ID.

00:06:31.870 --> 00:06:36.780
Okay, so it's going to return a student.

00:06:39.820 --> 00:06:42.065
So here what I'm gonna do,

00:06:42.065 --> 00:06:46.355
I'm gonna use the repo, repo dot.

00:06:46.355 --> 00:06:50.230
I think for you that might that is all existing these mothers,

00:06:50.230 --> 00:06:52.190
it's not done by myself.

00:06:52.190 --> 00:06:56.120
These methods are already available under the repository itself,

00:06:56.120 --> 00:06:58.370
so you can just simply make use of them.

00:06:58.370 --> 00:07:00.725
So find by ID.

00:07:00.725 --> 00:07:02.300
So you here, you know,

00:07:02.300 --> 00:07:03.380
to pass the input, right?

00:07:03.380 --> 00:07:06.665
So int or long rate.

00:07:06.665 --> 00:07:12.830
So long student ID or just IDs, fine.

00:07:12.830 --> 00:07:15.020
Anything ID is fine.

00:07:15.020 --> 00:07:20.585
And here in order to pass the ID as the input and get the variable out of it.

00:07:20.585 --> 00:07:22.445
And another important thing,

00:07:22.445 --> 00:07:26.120
this will give you optional ofs to dent, okay?

00:07:26.120 --> 00:07:27.830
Because when you're trying to find by ID,

00:07:27.830 --> 00:07:30.020
there is a possibility that IT might,

00:07:30.020 --> 00:07:32.465
might not be available.

00:07:32.465 --> 00:07:35.570
So that is why it's returning an optional of students.

00:07:35.570 --> 00:07:40.010
So if you want to retrieve us specific object from optional,

00:07:40.010 --> 00:07:42.440
we need to use the get method, right?

00:07:42.440 --> 00:07:46.295
So by id dot get.

00:07:46.295 --> 00:07:48.260
So which will give you this student,

00:07:48.260 --> 00:07:51.320
you're going to directly written by AD because that will get an optional sorting.

00:07:51.320 --> 00:07:53.990
But God, we need just a student.

00:07:53.990 --> 00:07:56.600
But here again, what is this?

00:07:56.600 --> 00:08:00.710
This is the input and which is sending through path variable.

00:08:00.710 --> 00:08:07.470
Remember? So let's stop our server and let's hit it one more time.

00:08:08.170 --> 00:08:12.230
And there are multiple ways to perform this operation.

00:08:12.230 --> 00:08:14.180
Last fall, we tried using rest API methods,

00:08:14.180 --> 00:08:17.570
write the similar way when your application startup,

00:08:17.570 --> 00:08:18.800
when it is getting started,

00:08:18.800 --> 00:08:20.255
right, even that time itself,

00:08:20.255 --> 00:08:24.050
you should be able to call some methods and you can store the information.

00:08:24.050 --> 00:08:27.245
And I think you can use command line.

00:08:27.245 --> 00:08:29.120
I'm in command line tools.

00:08:29.120 --> 00:08:31.400
I think they have a class called I do.

00:08:31.400 --> 00:08:34.490
I am not exaggerating when I think command line runner.

00:08:34.490 --> 00:08:38.960
So you can use that particular interface and implement that interface into

00:08:38.960 --> 00:08:43.970
any glasses and you can overwrite the run method and you can same process over there.

00:08:43.970 --> 00:08:46.895
Okay, so now it is done.

00:08:46.895 --> 00:08:50.660
Let's go back to our postman as fish well as create multiple students.

00:08:50.660 --> 00:08:53.615
Here are. Okay, it's great.

00:08:53.615 --> 00:08:57.245
Student number 1, student. Let me get multiple.

00:08:57.245 --> 00:08:58.895
Daniel.

00:08:58.895 --> 00:09:00.155
Okay.

00:09:00.155 --> 00:09:08.765
And AJ and Sean.

00:09:08.765 --> 00:09:10.880
I did not modify the H, but anyway,

00:09:10.880 --> 00:09:13.085
just for testing purposes right to center.

00:09:13.085 --> 00:09:15.740
So here it's written all the details,

00:09:15.740 --> 00:09:17.435
but what are the methods which we want to test?

00:09:17.435 --> 00:09:23.090
We want to test D. Get all store and buy ID.

00:09:23.090 --> 00:09:26.135
Right? So let's try that.

00:09:26.135 --> 00:09:29.240
So get all students by ID.

00:09:29.240 --> 00:09:31.040
So what is the variable?

00:09:31.040 --> 00:09:33.930
Which one to try? Let's try three.

00:09:34.600 --> 00:09:37.055
Okay, so what is the problem?

00:09:37.055 --> 00:09:39.185
39 phone, iPhone that issue.

00:09:39.185 --> 00:09:41.060
And a simple here,

00:09:41.060 --> 00:09:44.450
we have to provide the slash pick up.

00:09:44.450 --> 00:09:46.790
That is how it will identify.

00:09:46.790 --> 00:09:49.445
After that, that'll be a path variable.

00:09:49.445 --> 00:09:52.260
Correct. So let's do that one more time.

00:10:02.950 --> 00:10:05.285
Okay, so an obligation starter,

00:10:05.285 --> 00:10:07.760
let's go back out and dished out Azure as well.

00:10:07.760 --> 00:10:12.560
Just try Sean and C,

00:10:12.560 --> 00:10:14.345
and let's try only two now.

00:10:14.345 --> 00:10:17.360
So what I'm gonna do, the first thing,

00:10:17.360 --> 00:10:21.830
you need to check its try with

00:10:21.830 --> 00:10:29.660
the http localhost 800, 800.

00:10:29.660 --> 00:10:32.809
Also don't, right, so all students,

00:10:32.809 --> 00:10:35.045
so we have 12.

00:10:35.045 --> 00:10:40.520
So let's try to finish $0.01.

00:10:40.520 --> 00:10:43.310
Again error. So what is wrong here?

00:10:43.310 --> 00:10:45.200
We're just making simple mistakes.

00:10:45.200 --> 00:10:46.640
I just prior to the path variable.

00:10:46.640 --> 00:10:49.355
And what do you have to provide the input here, right?

00:10:49.355 --> 00:10:51.710
Like ID, which is most important.

00:10:51.710 --> 00:10:54.660
This is how we will provide the ID straight.

00:10:54.700 --> 00:10:57.990
So let's start it again.

00:11:02.770 --> 00:11:07.410
Okay, So it started, Let's go back and let's try one more time.

00:11:08.800 --> 00:11:14.030
So that's enough.

00:11:14.030 --> 00:11:17.720
Let's get all the student information done.

00:11:17.720 --> 00:11:19.460
So we Let's try,

00:11:19.460 --> 00:11:21.990
try to do one or two.

00:11:26.320 --> 00:11:28.550
See you on it.

00:11:28.550 --> 00:11:30.545
We made small mistakes.

00:11:30.545 --> 00:11:32.780
So we have to learn from our own mistakes, right?

00:11:32.780 --> 00:11:35.390
Even though how long it takes,

00:11:35.390 --> 00:11:36.530
It doesn't matter, okay,

00:11:36.530 --> 00:11:43.175
So this is how we need to make use of your GPA Repository and the entity manager.

00:11:43.175 --> 00:11:47.510
Now we have a basic idea but how the GP is working, right?

00:11:47.510 --> 00:11:50.960
So now all we need to do is just go back to our old project and we'll

00:11:50.960 --> 00:11:54.890
implement these functionalities to over all.

00:11:54.890 --> 00:11:57.530
I mean, we already created some rest APIs, right?

00:11:57.530 --> 00:12:00.575
We're going to apply to all the API methods over there.

00:12:00.575 --> 00:12:02.400
Thank you.
