WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.830
Hello everyone, welcome back.

00:00:01.830 --> 00:00:07.710
So when to understand one thing that are scenarios where we might not have the data.

00:00:07.710 --> 00:00:09.990
So how are we going to handle that particular scenario?

00:00:09.990 --> 00:00:12.250
For example, let's go back to Postman here.

00:00:12.250 --> 00:00:15.830
And we know this is our employee also raises, right?

00:00:15.830 --> 00:00:17.990
So if I pass some inputs here like 1,

00:00:17.990 --> 00:00:20.300
2, 3, 4, which is existing already,

00:00:20.300 --> 00:00:21.830
if I hit Send,

00:00:21.830 --> 00:00:26.690
I'm getting the response back with the response code of 200, which is a successful.

00:00:26.690 --> 00:00:31.850
What'll happen if l pass something like some employee ID which is not existing,

00:00:31.850 --> 00:00:34.310
5, 6, 7, 8, which is a wrong one.

00:00:34.310 --> 00:00:44.555
When I'm hit. St. we got the 200 as a response back, which is not right.

00:00:44.555 --> 00:00:45.665
Right.

00:00:45.665 --> 00:00:48.920
So we got MDS empty response back.

00:00:48.920 --> 00:00:51.560
So we need to handle this scenario whenever the data

00:00:51.560 --> 00:00:54.650
is not available being a descender proper error message.

00:00:54.650 --> 00:00:59.209
All right, let's go back and implement a simple exception.

00:00:59.209 --> 00:01:02.330
So this is a method where you are trying to invoke.

00:01:02.330 --> 00:01:04.830
So here what we're gonna do,

00:01:05.230 --> 00:01:08.150
we're trying to handle the exception.

00:01:08.150 --> 00:01:09.905
So write an if condition here.

00:01:09.905 --> 00:01:14.330
If null not equaled the employee.

00:01:14.330 --> 00:01:17.300
So if this employee empty they are normally,

00:01:17.300 --> 00:01:19.325
we will get the empty response correct.

00:01:19.325 --> 00:01:21.680
But if you have a check here,

00:01:21.680 --> 00:01:23.600
if the employee is null,

00:01:23.600 --> 00:01:26.960
I'm not going to simply return the empty restaurants.

00:01:26.960 --> 00:01:31.399
I'm gonna return a throw a new or a runtime exception.

00:01:31.399 --> 00:01:36.120
Okay, so saying like employee naught formula.

00:01:39.640 --> 00:01:43.295
Okay, This is a proper meaningful math dot.

00:01:43.295 --> 00:01:45.110
So now what do we need to do?

00:01:45.110 --> 00:01:49.040
Just renewed application and see what is the error message.

00:01:49.040 --> 00:01:51.450
So let's rerun it again.

00:01:52.930 --> 00:01:55.970
I just started to service.

00:01:55.970 --> 00:02:01.550
Okay, our Spring Boot is getting started and give it a few more seconds.

00:02:01.550 --> 00:02:04.730
Okay, so our application has been started.

00:02:04.730 --> 00:02:06.365
Now let's go back to our Postman.

00:02:06.365 --> 00:02:13.800
So I'm trying to hit the same URL which contain the invalid employee ID.

00:02:13.840 --> 00:02:17.840
Okay, so I'm getting again the same 200,

00:02:17.840 --> 00:02:20.645
which means something, what we did, it's wrong.

00:02:20.645 --> 00:02:22.890
So let's go back and check.

00:02:25.180 --> 00:02:27.770
That was the dumbest mistake which I did.

00:02:27.770 --> 00:02:31.070
So if employees null,

00:02:31.070 --> 00:02:34.475
then we're going to trigger the error message.

00:02:34.475 --> 00:02:37.680
I just want a mistake here, so let's run it again.

00:02:39.640 --> 00:02:43.400
And applications getting started now, yes, a distributor.

00:02:43.400 --> 00:02:44.795
Now let's go back to the postman.

00:02:44.795 --> 00:02:47.435
Let's hit the same URL again.

00:02:47.435 --> 00:02:50.315
See now we got the error message.

00:02:50.315 --> 00:02:52.310
Now we've got the 500 error message,

00:02:52.310 --> 00:02:54.125
which is an internal server error.

00:02:54.125 --> 00:02:56.420
So actually it's not a server error the

00:02:56.420 --> 00:02:59.120
correct because if the employee data is not formed,

00:02:59.120 --> 00:03:01.460
so we're returning employee not formed, right?

00:03:01.460 --> 00:03:06.530
See here is a trace java.lang.Object time exception and employee is not

00:03:06.530 --> 00:03:12.395
found that this error message will be sent back from the response correct.

00:03:12.395 --> 00:03:15.995
So we have to make it better.

00:03:15.995 --> 00:03:17.600
This is not the right way.

00:03:17.600 --> 00:03:19.280
We need to send a response back,

00:03:19.280 --> 00:03:21.890
at least comparing to the previous output.

00:03:21.890 --> 00:03:23.570
This is much better because previously,

00:03:23.570 --> 00:03:27.140
even though I'm not sending any proper response I'm sending is a 200 is a status quo,

00:03:27.140 --> 00:03:28.429
which means a successful.

00:03:28.429 --> 00:03:30.560
But now at least I got a 500 lintels or

00:03:30.560 --> 00:03:33.305
an error message and it's saying employee not phone.

00:03:33.305 --> 00:03:35.030
So the next way of what we're gonna do,

00:03:35.030 --> 00:03:39.965
we're gonna see how we can improvise this method to make it even much more clear,

00:03:39.965 --> 00:03:42.600
will double in the next video.
