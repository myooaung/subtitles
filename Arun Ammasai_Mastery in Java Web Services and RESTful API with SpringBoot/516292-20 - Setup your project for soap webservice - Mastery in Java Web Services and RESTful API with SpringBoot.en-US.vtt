WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.845
Hello everyone, Welcome back.

00:00:01.845 --> 00:00:04.185
Let's create a new project here.

00:00:04.185 --> 00:00:08.100
And we're going to use a spring assistant to create the project.

00:00:08.100 --> 00:00:12.450
And I'm going to use Java 1.8 version and click Next.

00:00:12.450 --> 00:00:15.510
And we need to provide some basic information here like group ID.

00:00:15.510 --> 00:00:17.535
Now, I'm going to use my Blob name.

00:00:17.535 --> 00:00:21.690
So bytecode velocity and its Columbia scope surveys, right?

00:00:21.690 --> 00:00:23.940
And someone never scope.name and high chair.

00:00:23.940 --> 00:00:25.740
I'm as its resource management system,

00:00:25.740 --> 00:00:27.360
so I named it has a high chair, a mess,

00:00:27.360 --> 00:00:29.220
and it's pretty much an employee, right?

00:00:29.220 --> 00:00:33.780
So, so employee and management.

00:00:33.780 --> 00:00:37.785
And then I'm going to use Java 8 version,

00:00:37.785 --> 00:00:44.110
and I'm going to name that as a hatch RMS and we provide it or information,

00:00:44.110 --> 00:00:45.670
let's provide some packaging them aswell.

00:00:45.670 --> 00:00:50.600
So I'm going to use my code velocity and the blog name.

00:00:52.410 --> 00:00:55.360
Okay, So we provide at the basic information,

00:00:55.360 --> 00:00:58.180
let's move to the next screen where we can choose the dependencies.

00:00:58.180 --> 00:00:59.830
So it's a soaps arrays, right?

00:00:59.830 --> 00:01:04.090
So first thing we need the spring support for web services.

00:01:04.090 --> 00:01:06.940
So this is what we're going to use Spring Web Services

00:01:06.940 --> 00:01:09.910
and then we're going to use some database operations.

00:01:09.910 --> 00:01:11.590
So we need JPS support as well.

00:01:11.590 --> 00:01:13.885
So I'm going to use Spring Data JPA.

00:01:13.885 --> 00:01:15.820
And then we need,

00:01:15.820 --> 00:01:17.350
we are going to use the H2 database,

00:01:17.350 --> 00:01:19.060
which is the in-memory database here.

00:01:19.060 --> 00:01:22.120
And I'm going to choose high CH2 and then click Next.

00:01:22.120 --> 00:01:25.730
And the project name is employee management. We are good to go.

00:01:25.730 --> 00:01:27.065
Let's click Finish.

00:01:27.065 --> 00:01:31.670
So it will take a few minute to download the entire project here.

00:01:31.670 --> 00:01:35.390
So you could see the entire project structure here that is advantage of

00:01:35.390 --> 00:01:39.950
having us bring projects saved automatically created the structure and everything.

00:01:39.950 --> 00:01:43.250
And so now we have created the application.

00:01:43.250 --> 00:01:45.065
All we need to do in the first place,

00:01:45.065 --> 00:01:48.665
Let's open the palm read XML file will see all the dependencies are here.

00:01:48.665 --> 00:01:51.020
So these are the initial information which we

00:01:51.020 --> 00:01:53.555
provide at when we're creating these particular project.

00:01:53.555 --> 00:01:57.290
And this is a version that you're gonna use and some additional dependencies

00:01:57.290 --> 00:02:01.895
like started JB and Starter web services on Azure Database.

00:02:01.895 --> 00:02:05.570
And in later point we might add some more additional dependencies as well.

00:02:05.570 --> 00:02:09.410
And by default it has a start at the support,

00:02:09.410 --> 00:02:12.050
which ones have a JUnit test case or support is available here.

00:02:12.050 --> 00:02:13.835
So the next thing, what do we need to do?

00:02:13.835 --> 00:02:15.920
So we have the application already.

00:02:15.920 --> 00:02:19.025
The next thing which we need to make sure that the application is up and running.

00:02:19.025 --> 00:02:21.155
So what do we need to do?

00:02:21.155 --> 00:02:24.380
Just opening our application and just right-click and run

00:02:24.380 --> 00:02:29.540
as Java application or an ESA Spring Boot app.

00:02:29.540 --> 00:02:30.800
If you're using Eclipse,

00:02:30.800 --> 00:02:32.615
you how to run as a Spring Boot app.

00:02:32.615 --> 00:02:34.640
And here we just right-click and run the project.

00:02:34.640 --> 00:02:36.830
And let's open the console here.

00:02:36.830 --> 00:02:40.610
It will give you all the background information. So what is loading?

00:02:40.610 --> 00:02:42.695
What are the bean creations, everything.

00:02:42.695 --> 00:02:45.870
So now we'll just bring you starter.

00:02:46.870 --> 00:02:52.470
Okay, So it might take a few seconds the first time.

00:02:53.170 --> 00:02:54.380
Okay.

00:02:54.380 --> 00:02:58.925
So now we've got everything in place. See this spring.

00:02:58.925 --> 00:03:01.130
Hi Chair, MS. application started in

00:03:01.130 --> 00:03:05.120
just under four seconds and our Tomcat server is using 800, 800.

00:03:05.120 --> 00:03:08.510
This is a port which we are our our Tom gifts that are using.

00:03:08.510 --> 00:03:12.710
This is the embedded server, which is a Tomcat.

00:03:12.710 --> 00:03:16.460
There are multiple emulators that was available for now we're going to use Tomcat server.

00:03:16.460 --> 00:03:18.230
I'll go What is we need to check here.

00:03:18.230 --> 00:03:22.280
Okay, you just go to the external libraries where you can see

00:03:22.280 --> 00:03:28.230
all the dependencies that one of the most important thing is here.

00:03:28.320 --> 00:03:32.860
Let check whether spring core here.

00:03:32.860 --> 00:03:39.910
So these are Aldi supporter dependencies for a spring application in here,

00:03:39.910 --> 00:03:42.610
you have the core jar as well.

00:03:42.610 --> 00:03:44.500
This is what we talked about when you are discussing

00:03:44.500 --> 00:03:46.540
able to modal score is the important thing.

00:03:46.540 --> 00:03:49.720
So beans, creation and mapping,

00:03:49.720 --> 00:03:53.140
auto Whiting, competent all of them are available under the core functionality.

00:03:53.140 --> 00:03:55.135
So this dependencies must,

00:03:55.135 --> 00:03:56.680
so whenever you create a product,

00:03:56.680 --> 00:04:00.385
it automatically added into your palm dependencies.

00:04:00.385 --> 00:04:03.010
So there are some additional ajar fails as well.

00:04:03.010 --> 00:04:05.230
Cv have a history database jar here,

00:04:05.230 --> 00:04:08.590
and also they have a TEM,

00:04:08.590 --> 00:04:10.290
a Tomcat support here.

00:04:10.290 --> 00:04:13.519
You're going to go through all the dependencies.

00:04:13.519 --> 00:04:15.920
Each one of them has its own advantages.

00:04:15.920 --> 00:04:18.935
So for logging purposes we have SELF for j,

00:04:18.935 --> 00:04:23.300
and then we have a JPS support and we have a JUnit support, everything is available.

00:04:23.300 --> 00:04:27.875
You can just go and have a look at all the geographers and even understand them.

00:04:27.875 --> 00:04:30.620
Okay, so now the application is up and running.

00:04:30.620 --> 00:04:33.725
The next thing which we need to do is we how to

00:04:33.725 --> 00:04:38.730
plan a request and the response for the salaries.
