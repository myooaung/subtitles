WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.205
Hello everyone. Welcome back.

00:00:02.205 --> 00:00:03.630
So we discussed the boat,

00:00:03.630 --> 00:00:06.360
the monitoring, the application and the services, right?

00:00:06.360 --> 00:00:10.515
The next thing which we are going to talk about is handling your response.

00:00:10.515 --> 00:00:13.905
So whenever you send the response back to the user,

00:00:13.905 --> 00:00:16.425
you will send the entire details, right?

00:00:16.425 --> 00:00:20.925
But what if I want something like a while sending the response back?

00:00:20.925 --> 00:00:23.850
I don't want to sin these particular elements.

00:00:23.850 --> 00:00:26.369
Think of with this scenario and you have a user information.

00:00:26.369 --> 00:00:29.040
You can send the username and you can send the user it is,

00:00:29.040 --> 00:00:31.345
but you can add sim, the user password.

00:00:31.345 --> 00:00:34.040
So something similar like that.

00:00:34.040 --> 00:00:36.295
So whenever you want to restrict some other field,

00:00:36.295 --> 00:00:39.245
should not go in as part of my response.

00:00:39.245 --> 00:00:41.105
How we can do that.

00:00:41.105 --> 00:00:43.130
So that's what we're going to talk about now.

00:00:43.130 --> 00:00:46.475
So let's go back to our intelligibility.

00:00:46.475 --> 00:00:48.230
So we have a risk control,

00:00:48.230 --> 00:00:50.330
rare but employee controller, right?

00:00:50.330 --> 00:00:55.850
So I'm going to create another controller specifically for our filtering concept.

00:00:55.850 --> 00:00:58.055
Okay, so let's create a new class here.

00:00:58.055 --> 00:01:00.180
Let's call them ESA.

00:01:00.640 --> 00:01:03.899
Fell during controller.

00:01:04.030 --> 00:01:10.080
And I'm going to mark this as a rest controller.

00:01:10.780 --> 00:01:14.405
Okay, The first thing is done, the next thing,

00:01:14.405 --> 00:01:18.230
basically I want to send some data with a limiter,

00:01:18.230 --> 00:01:20.479
our response, not the old information.

00:01:20.479 --> 00:01:21.665
So in order to do that,

00:01:21.665 --> 00:01:24.945
I need to have some a DTO we already have our employee to do,

00:01:24.945 --> 00:01:26.420
but let's not use that DDO.

00:01:26.420 --> 00:01:27.755
Let's try something else here.

00:01:27.755 --> 00:01:33.600
So I'm going to create one more video here, class user details.

00:01:34.120 --> 00:01:37.040
So in, inside this particular class,

00:01:37.040 --> 00:01:40.100
I'm going to create some fields here.

00:01:40.100 --> 00:01:42.545
Okay, let me create new fields here,

00:01:42.545 --> 00:01:46.730
like private int, it might take a minute,

00:01:46.730 --> 00:01:51.260
I will just make it a faster user ID.

00:01:51.260 --> 00:01:52.355
And what have we can have.

00:01:52.355 --> 00:01:56.375
Maybe we can have private string,

00:01:56.375 --> 00:01:58.370
maybe we can have the username, right?

00:01:58.370 --> 00:02:00.350
So username.

00:02:00.350 --> 00:02:03.860
And we can have something like

00:02:03.860 --> 00:02:09.470
maybe pan number or SN number or auto number, some security number.

00:02:09.470 --> 00:02:16.500
So private string and I can have something like pan number.

00:02:17.560 --> 00:02:19.880
Okay, so the next thing which we need to,

00:02:19.880 --> 00:02:22.160
we need to create a constructor for all the values.

00:02:22.160 --> 00:02:25.340
And we need to create state doesn't get us aswell.

00:02:25.340 --> 00:02:29.990
So let's create a git status as well.

00:02:29.990 --> 00:02:35.630
Okay, So let me create a simple static method which will return a list of user details,

00:02:35.630 --> 00:02:38.465
pass it and then I'll keep it and then we'll continue.

00:02:38.465 --> 00:02:42.410
So let's continue. I just created a new method called asset get details.

00:02:42.410 --> 00:02:44.570
So whenever I call this method,

00:02:44.570 --> 00:02:46.790
it will return a list of a user details.

00:02:46.790 --> 00:02:48.380
This is a useful little DTO.

00:02:48.380 --> 00:02:49.700
So if I call this mother,

00:02:49.700 --> 00:02:52.955
it will give you, give me that list of user details.

00:02:52.955 --> 00:02:54.770
Okay, so now next thing,

00:02:54.770 --> 00:02:57.995
let's create our method here.

00:02:57.995 --> 00:02:59.660
That is our first job, right?

00:02:59.660 --> 00:03:06.740
So what I'm gonna do, I'm gonna create a gate mapping here and get my bad, sorry.

00:03:06.740 --> 00:03:09.215
It's going to be a good mapping.

00:03:09.215 --> 00:03:14.610
And let's call it as maybe filter one. Filter one.

00:03:15.220 --> 00:03:17.390
Sorry.

00:03:17.390 --> 00:03:20.390
So here I need to create a method.

00:03:20.390 --> 00:03:23.840
Public, static or no,

00:03:23.840 --> 00:03:25.460
I don't inform Lake and what are the rent?

00:03:25.460 --> 00:03:28.115
I am looking for a list of

00:03:28.115 --> 00:03:33.860
user details and my My name

00:03:33.860 --> 00:03:36.920
is maybe I can call this my that as a filter one because anyway,

00:03:36.920 --> 00:03:38.810
I'm going to implement are some other methods as well.

00:03:38.810 --> 00:03:41.540
So, so here what I'm going to do,

00:03:41.540 --> 00:03:46.655
I'm going to simply return the user details,

00:03:46.655 --> 00:03:52.775
dot get details, which will give me the list of user details.

00:03:52.775 --> 00:03:56.550
So now let's format it ones.

00:03:57.640 --> 00:04:03.215
Okay, So this is a normal Mach that so how we can control our response.

00:04:03.215 --> 00:04:06.965
So these are the information we are going to send the response.

00:04:06.965 --> 00:04:11.615
But what if I don't want to send the band number in that response?

00:04:11.615 --> 00:04:21.150
So you can simply annotate with this class as a JSON ignored property.

00:04:21.430 --> 00:04:25.355
Json ignore properties, but one thing is it

00:04:25.355 --> 00:04:28.670
unit to provide some value to it because we have a multiple fields, right?

00:04:28.670 --> 00:04:31.295
It will take the array.

00:04:31.295 --> 00:04:33.860
So what I'm gonna do, I'm gonna create,

00:04:33.860 --> 00:04:36.320
I don't want to send the pan number alone.

00:04:36.320 --> 00:04:41.630
So what I'm gonna do is I'm going to create pan number element here.

00:04:41.630 --> 00:04:45.800
Okay, So when I said the JSON ignore property, you know what it will happen?

00:04:45.800 --> 00:04:47.540
I mean what it will do whenever you send

00:04:47.540 --> 00:04:49.775
the response bucket identifies okay, the pan number,

00:04:49.775 --> 00:04:53.480
which would just be ignored from the respond

00:04:53.480 --> 00:04:57.995
because that is where we have a JSON eagle properties and there are other ways also.

00:04:57.995 --> 00:04:59.600
So instead of doing this,

00:04:59.600 --> 00:05:01.190
you can try something like this as well.

00:05:01.190 --> 00:05:04.370
So at JSON, ignore.

00:05:04.370 --> 00:05:06.230
So this is also fine.

00:05:06.230 --> 00:05:08.330
So either you can try this,

00:05:08.330 --> 00:05:13.050
maybe you can do something like UserID.

00:05:13.390 --> 00:05:16.190
You can try something like this as well.

00:05:16.190 --> 00:05:18.875
But anyway, this looks much better.

00:05:18.875 --> 00:05:21.155
So I'm going to use this.

00:05:21.155 --> 00:05:24.170
Let's not send only the pan number,

00:05:24.170 --> 00:05:29.370
so I'm going to delete these two.

00:05:29.470 --> 00:05:34.640
So now we implemented the JSON ignore properties, right?

00:05:34.640 --> 00:05:37.205
So all we need to do is just run the application to see

00:05:37.205 --> 00:05:40.190
when your initial NR triggering this particular request,

00:05:40.190 --> 00:05:42.230
whether you are sending the band number or not,

00:05:42.230 --> 00:05:44.435
asked by the logic we are not supposed to send.

00:05:44.435 --> 00:05:47.160
So let's start. The application.

00:05:51.430 --> 00:05:54.740
Might take a few seconds.

00:05:54.740 --> 00:05:58.740
So the application is getting started now.

00:06:04.180 --> 00:06:09.320
Okay, so our Tom get is Charlotte and it's running on port number 8 or 8 1.

00:06:09.320 --> 00:06:12.140
So what are the other we're going to call, we're going to call them.

00:06:12.140 --> 00:06:14.180
I thought the filter one. Let's copy that.

00:06:14.180 --> 00:06:16.580
Let's go back to our Postman here.

00:06:16.580 --> 00:06:18.440
And it's great Enuma turn.

00:06:18.440 --> 00:06:21.210
And I'm going to create a hash two dB,

00:06:22.930 --> 00:06:28.790
localhost, 800, 800 slash and filter matter,

00:06:28.790 --> 00:06:31.025
and just trigger the request.

00:06:31.025 --> 00:06:33.740
Okay, So there is no response here.

00:06:33.740 --> 00:06:37.580
So that is a machine could not in that it goes so which must, something is wrong.

00:06:37.580 --> 00:06:39.140
Okay, the problem into port number,

00:06:39.140 --> 00:06:41.360
it's supposed to be age or 81, right?

00:06:41.360 --> 00:06:43.070
So let's click Send again.

00:06:43.070 --> 00:06:49.025
See now we've got to only the user ID here. What is missing?

00:06:49.025 --> 00:06:52.130
The username and the other information,

00:06:52.130 --> 00:06:54.230
but we are supposed to information, right?

00:06:54.230 --> 00:06:57.140
So here JSON ignore properties,

00:06:57.140 --> 00:06:59.525
we are ignoring only the pan number.

00:06:59.525 --> 00:07:01.910
Okay, so we had the user ID here,

00:07:01.910 --> 00:07:03.470
but where is the user name?

00:07:03.470 --> 00:07:05.270
So what is happening here?

00:07:05.270 --> 00:07:09.560
So we are not sending the user nimble and we have to see why is that.

00:07:09.560 --> 00:07:11.180
Okay?

00:07:11.180 --> 00:07:16.430
That is a problem. That getter and setter method we only created for the user ID,

00:07:16.430 --> 00:07:17.755
not for the user on the Panorama.

00:07:17.755 --> 00:07:20.660
That was a mistake. So let's create the getters and

00:07:20.660 --> 00:07:23.870
setters for the username and the panel metazoa.

00:07:23.870 --> 00:07:24.950
Let's click Okay.

00:07:24.950 --> 00:07:28.950
And as usual it's retract the application one more time.

00:07:30.970 --> 00:07:33.380
So an application is getting standard,

00:07:33.380 --> 00:07:35.570
okay, So it's done.

00:07:35.570 --> 00:07:36.800
Let's go back to our postman.

00:07:36.800 --> 00:07:38.915
Let's trigger that equals to again.

00:07:38.915 --> 00:07:44.780
See now we've got the user ID and the user name because we filter the data.

00:07:44.780 --> 00:07:48.665
Okay, So if you come back to our filtering control here,

00:07:48.665 --> 00:07:50.405
it's a kind of a hardcoded stuff.

00:07:50.405 --> 00:07:55.475
We're just hard-coding the information right through the JSON signal properties.

00:07:55.475 --> 00:07:57.545
And there are other ways too we can handle.

00:07:57.545 --> 00:08:00.170
This is just a static filtering.

00:08:00.170 --> 00:08:02.585
We can do the dynamic filtering as well.

00:08:02.585 --> 00:08:05.730
Let's do the dynamic filter in the next video.
