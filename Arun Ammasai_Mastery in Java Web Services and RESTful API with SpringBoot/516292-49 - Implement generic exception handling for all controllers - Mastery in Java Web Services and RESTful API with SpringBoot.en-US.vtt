WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.020
Hello everyone.

00:00:01.020 --> 00:00:01.740
Welcome back.

00:00:01.740 --> 00:00:05.295
So yes, in multiple ways of handling the exception, right?

00:00:05.295 --> 00:00:08.730
So just take a look at the response.

00:00:08.730 --> 00:00:12.840
We cannot send the any error messages like this to the clients endpoint uses, right?

00:00:12.840 --> 00:00:16.200
So we have our project own structured exception.

00:00:16.200 --> 00:00:19.890
So in spring what we can do is you can create your own class which

00:00:19.890 --> 00:00:24.375
contains your wouldn't properties like exception class or exception message.

00:00:24.375 --> 00:00:25.500
What is that? Time markers,

00:00:25.500 --> 00:00:28.140
the exception and the discretionary good error messages.

00:00:28.140 --> 00:00:30.584
So we can create your own exit in classes

00:00:30.584 --> 00:00:33.540
and we can write some implementation on top of it.

00:00:33.540 --> 00:00:36.210
So what we're gonna do, Let's go to every intelligent entity here.

00:00:36.210 --> 00:00:38.145
So what I'm gonna do,

00:00:38.145 --> 00:00:41.230
so I'm going to create a new DTU here,

00:00:41.230 --> 00:00:43.955
which will contain some properties.

00:00:43.955 --> 00:00:46.070
So I'm going to create a new class and I'm going to call it

00:00:46.070 --> 00:00:48.950
as employee exception response.

00:00:48.950 --> 00:00:53.705
Employee exception or response.

00:00:53.705 --> 00:01:00.725
So it has some multiple attributes like saying dry weight, string.

00:01:00.725 --> 00:01:05.915
First thing, the error message or the exception message,

00:01:05.915 --> 00:01:07.370
It's up to you how you want to call it.

00:01:07.370 --> 00:01:09.275
And the second is description.

00:01:09.275 --> 00:01:12.905
The detail about the description and what are the things which we need.

00:01:12.905 --> 00:01:15.560
We may need the time,

00:01:15.560 --> 00:01:18.125
date, and time, the exception as I've got right.

00:01:18.125 --> 00:01:19.790
So we need that information,

00:01:19.790 --> 00:01:21.965
so I'm going to create a date here.

00:01:21.965 --> 00:01:28.325
So date and time.

00:01:28.325 --> 00:01:30.980
Okay, So the next thing, same,

00:01:30.980 --> 00:01:36.470
put the date, it's going to be too late for class.

00:01:36.470 --> 00:01:40.235
Okay, so the next thing, let's create a constructor here.

00:01:40.235 --> 00:01:44.630
So that concept of role the valleys and also another thing.

00:01:44.630 --> 00:01:47.720
We need to have the getters and setters as well.

00:01:47.720 --> 00:01:50.870
So let's make sure we're getting the getters and setters as well.

00:01:50.870 --> 00:01:53.525
Okay, so now we have everything in place.

00:01:53.525 --> 00:01:55.625
So what are the next thing which we need to do?

00:01:55.625 --> 00:01:57.455
So we have employed on phone,

00:01:57.455 --> 00:01:59.420
which will handle 1494,

00:01:59.420 --> 00:02:02.930
and we have employee exception response,

00:02:02.930 --> 00:02:06.860
which can take that LMS HE description on the date and time.

00:02:06.860 --> 00:02:09.694
We need to write the controller because the controller,

00:02:09.694 --> 00:02:12.305
which will control all the exceptions,

00:02:12.305 --> 00:02:15.245
because we have the employee controller which will,

00:02:15.245 --> 00:02:16.745
which will handle all the,

00:02:16.745 --> 00:02:18.350
the API methods I'm in.

00:02:18.350 --> 00:02:22.340
The rest API meant that the similar way we are going to create a one more constructor.

00:02:22.340 --> 00:02:24.335
I'm in one more controller,

00:02:24.335 --> 00:02:26.885
which will take care of all the error messages.

00:02:26.885 --> 00:02:30.275
For example, if you're getting a user not found or employee not font,

00:02:30.275 --> 00:02:32.120
it has proper message.

00:02:32.120 --> 00:02:33.860
Or if you're getting

00:02:33.860 --> 00:02:38.420
some memory issues out of her muddied halfs in a proper error message according to that.

00:02:38.420 --> 00:02:41.720
But all the editor response message contains these three elements,

00:02:41.720 --> 00:02:45.410
which is nothing but the error message didn't description, date and time.

00:02:45.410 --> 00:02:49.250
So here, instead of this error message,

00:02:49.250 --> 00:02:51.380
I'm enlightened, opened the Postman here.

00:02:51.380 --> 00:02:52.910
So interrupt this error message.

00:02:52.910 --> 00:02:57.080
We always send some proper way of response back to the user.

00:02:57.080 --> 00:03:00.110
Okay, so now all I need to do just create

00:03:00.110 --> 00:03:04.040
a class or a controller which will handle all the exemptions.

00:03:04.040 --> 00:03:12.210
So employee, maybe I can call this a global exception handler.

00:03:15.940 --> 00:03:21.380
And we need some properties from some existing classes.

00:03:21.380 --> 00:03:27.210
So just nothing but extends response into take surfing,

00:03:28.210 --> 00:03:31.025
response entity exception handler.

00:03:31.025 --> 00:03:36.050
So response entity is nothing but the response which we will send back to the Klein's.

00:03:36.050 --> 00:03:41.524
So this particular exception handler that will take care of the response.

00:03:41.524 --> 00:03:43.430
The moment you hit this button,

00:03:43.430 --> 00:03:45.710
you're calling a method and it'll send

00:03:45.710 --> 00:03:48.455
a response back the moment it's sending the response back to the user.

00:03:48.455 --> 00:03:51.530
That is a response into the process, right?

00:03:51.530 --> 00:03:53.135
If you take a controller here,

00:03:53.135 --> 00:03:54.934
we're just sending us the employee.

00:03:54.934 --> 00:03:56.360
So at the end, what will happen?

00:03:56.360 --> 00:03:59.015
This employee goes as a response entity.

00:03:59.015 --> 00:04:02.195
Sometimes we need to make sure we need to add our employee in

00:04:02.195 --> 00:04:05.420
here as one entity and then we need to provide something like this.

00:04:05.420 --> 00:04:06.680
Let me show you that.

00:04:06.680 --> 00:04:11.190
So response entity and we have to know this.

00:04:11.350 --> 00:04:16.025
This might be exploited in some situation because now it doesn't need to be.

00:04:16.025 --> 00:04:18.905
Because the older versions we have to provide this,

00:04:18.905 --> 00:04:20.435
but now we don't need to.

00:04:20.435 --> 00:04:23.089
That will be taken care of automatically.

00:04:23.089 --> 00:04:26.180
So it's called up the XML handle.

00:04:26.180 --> 00:04:29.450
So here I have the response entity exception handler.

00:04:29.450 --> 00:04:30.320
Okay?

00:04:30.320 --> 00:04:36.020
So, and we're going to annotate with few things here.

00:04:36.020 --> 00:04:41.210
So this is going to take and get the response going into the client's right.

00:04:41.210 --> 00:04:46.220
So it will intercept the response and then it will send back to the clients.

00:04:46.220 --> 00:04:52.220
So which means this is again a controller and not only our one,

00:04:52.220 --> 00:04:55.070
use one particular employee obligation when we

00:04:55.070 --> 00:04:58.235
have a multiple application within the same package,

00:04:58.235 --> 00:04:59.810
it will taken care of all of them.

00:04:59.810 --> 00:05:02.510
So it has to control entire all the controllers.

00:05:02.510 --> 00:05:04.175
For example, you have a user controller.

00:05:04.175 --> 00:05:05.900
We might have the student controller,

00:05:05.900 --> 00:05:08.405
we might have some other hypothalamus controller as well,

00:05:08.405 --> 00:05:12.395
different kinda controllers, which means different kind of rest API controllers.

00:05:12.395 --> 00:05:14.630
So it has to handle all of them.

00:05:14.630 --> 00:05:15.920
So what I'm gonna do,

00:05:15.920 --> 00:05:17.360
I'm going to provide something else here.

00:05:17.360 --> 00:05:19.280
So control, controller advice,

00:05:19.280 --> 00:05:20.360
which means if you,

00:05:20.360 --> 00:05:24.214
if this particular annotation finds any controller in our project,

00:05:24.214 --> 00:05:30.935
this particular functionality is applied for that particular controls as well. Okay.

00:05:30.935 --> 00:05:32.975
Now the next thing which I'm gonna do,

00:05:32.975 --> 00:05:35.480
I'm gonna write a method to handle a specific exception.

00:05:35.480 --> 00:05:36.800
So what is the exception?

00:05:36.800 --> 00:05:38.810
Okay, for now instead of for specific,

00:05:38.810 --> 00:05:40.940
let's handle all the exception.

00:05:40.940 --> 00:05:44.810
So I'm going to write a method exception handler which will

00:05:44.810 --> 00:05:48.980
handle the common exception, exception dot class.

00:05:48.980 --> 00:05:51.260
Whenever the exception rises, this measure will be,

00:05:51.260 --> 00:05:55.070
this particular response entity will be sin back.

00:05:55.070 --> 00:06:01.295
Okay? So public, so what is the response might be to always going to be response entity.

00:06:01.295 --> 00:06:06.080
And if you don't know what is the responder day and we're gonna keep it as an object.

00:06:06.080 --> 00:06:10.710
And this method is for handle all exceptions.

00:06:13.230 --> 00:06:16.015
Okay, so the next thing,

00:06:16.015 --> 00:06:18.220
this particular handle all exception,

00:06:18.220 --> 00:06:19.690
and it takes two inputs here.

00:06:19.690 --> 00:06:22.180
So first thing, what is the exception?

00:06:22.180 --> 00:06:26.119
Just the x and then what is the request?

00:06:28.590 --> 00:06:30.985
And here all we need to do,

00:06:30.985 --> 00:06:34.840
we need to manipulate D or project only exception,

00:06:34.840 --> 00:06:37.915
which is nothing but employee exception response.

00:06:37.915 --> 00:06:40.510
That is the reason we created that particular class, right.

00:06:40.510 --> 00:06:42.640
So employee exemption responds.

00:06:42.640 --> 00:06:43.420
Okay?

00:06:43.420 --> 00:06:45.740
So exception

00:06:49.320 --> 00:06:53.890
is a potent new employer response

00:06:53.890 --> 00:06:55.920
and we need to pass three inputs, right?

00:06:55.920 --> 00:06:58.175
So what are the three inputs? Let's go back and see

00:06:58.175 --> 00:07:02.885
the error message and description and the date and time.

00:07:02.885 --> 00:07:03.755
Great.

00:07:03.755 --> 00:07:05.540
So first thing was the error message.

00:07:05.540 --> 00:07:07.700
The error message is coming from the exception, right?

00:07:07.700 --> 00:07:11.675
So exception dot GET message.

00:07:11.675 --> 00:07:18.320
And the second and the second one.

00:07:18.320 --> 00:07:22.820
What is the date and time of the exception rises?

00:07:22.820 --> 00:07:24.395
That's the secondary second, right?

00:07:24.395 --> 00:07:26.270
Okay, The second is that description.

00:07:26.270 --> 00:07:29.960
So the error trace encode the information for now what I'm going to do,

00:07:29.960 --> 00:07:32.990
I'm going to send the description in their request, nothing else.

00:07:32.990 --> 00:07:35.570
So request dot get description.

00:07:35.570 --> 00:07:40.705
And and the third one

00:07:40.705 --> 00:07:42.640
is going to be what is

00:07:42.640 --> 00:07:45.730
the error message you want to return back for now what I'm gonna do,

00:07:45.730 --> 00:07:50.350
I'm gonna send back as a some specific error.

00:07:50.350 --> 00:07:52.720
We had to provide some specific error message.

00:07:52.720 --> 00:07:55.030
So the third parameter is going to be the date, right?

00:07:55.030 --> 00:07:57.070
So I'm gonna provide a new date here.

00:07:57.070 --> 00:07:59.440
And I'm going to get descriptions or false here.

00:07:59.440 --> 00:08:00.295
Okay?

00:08:00.295 --> 00:08:04.990
So now we have all the information passed to our exception response,

00:08:04.990 --> 00:08:11.320
but this exception response in back to the client as a response like this.

00:08:11.320 --> 00:08:16.360
So it has to go as a response in response entity dancer Go asset is Ponts entity.

00:08:16.360 --> 00:08:17.590
So all we need to do,

00:08:17.590 --> 00:08:24.080
we need to convert our employee exception response into a response entity set.

00:08:24.080 --> 00:08:25.625
So how we can do that?

00:08:25.625 --> 00:08:27.260
That's pretty simple.

00:08:27.260 --> 00:08:28.625
So, and the final,

00:08:28.625 --> 00:08:34.200
I'm going to create a new response entity.

00:08:34.240 --> 00:08:41.540
So here it is going to be on the economy and new response entity.

00:08:41.540 --> 00:08:44.420
And here we're going to pass the two things.

00:08:44.420 --> 00:08:47.345
First thing, what is the exemption?

00:08:47.345 --> 00:08:50.435
So which is nothing but our exception,

00:08:50.435 --> 00:08:51.920
our own exception class.

00:08:51.920 --> 00:08:57.155
And the second one, what is the error message you want to send back to the client?

00:08:57.155 --> 00:08:59.795
So I'm going to use faster tributaries, just not,

00:08:59.795 --> 00:09:01.460
or maybe for now again,

00:09:01.460 --> 00:09:05.460
do something else like internal server error.

00:09:07.090 --> 00:09:09.725
Okay? So internal server error.

00:09:09.725 --> 00:09:13.955
So whenever any exception rises in my code,

00:09:13.955 --> 00:09:16.100
don't automatically handle the exception,

00:09:16.100 --> 00:09:18.230
but it will send us the internal server error you might think.

00:09:18.230 --> 00:09:22.340
So even if you employ non formed also use in the intracellular yes,

00:09:22.340 --> 00:09:24.185
as of now we are gonna do that.

00:09:24.185 --> 00:09:26.240
So we will send one layer, say intercellular air.

00:09:26.240 --> 00:09:27.410
So once we run this,

00:09:27.410 --> 00:09:29.150
then we will create

00:09:29.150 --> 00:09:34.715
a new method to handle specifically for the employee not found exception, right?

00:09:34.715 --> 00:09:36.870
So this has to be written.

00:09:39.640 --> 00:09:44.160
So all we need to do is just read it as an application.

00:09:47.370 --> 00:09:50.780
Replication is getting started.

00:09:53.760 --> 00:09:56.890
Okay, so our obligation is up and running.

00:09:56.890 --> 00:10:02.350
So all we need to do is just go back to Postman and will execute d.

00:10:02.350 --> 00:10:06.940
You're open the postmen.

00:10:06.940 --> 00:10:11.150
So what we're gonna do, we're gonna hit the same, you're just sent.

00:10:11.190 --> 00:10:13.420
See what happened.

00:10:13.420 --> 00:10:16.930
We got a proper error message which is a employee not found.

00:10:16.930 --> 00:10:21.640
And what the description which means that equals information employee slash 12345678.

00:10:21.640 --> 00:10:23.575
That the one which I tried here,

00:10:23.575 --> 00:10:25.075
anymore the date and time.

00:10:25.075 --> 00:10:27.629
So when this exception has occurred.

00:10:27.629 --> 00:10:32.960
So this is the proper error message which we need to send back to the US it,

00:10:32.960 --> 00:10:36.830
but again, we can even much more improvise the same functionality.

00:10:36.830 --> 00:10:40.025
So now I'm sending as the phi n phi and an interim subtotal, right?

00:10:40.025 --> 00:10:44.480
The reason we are handling that using our,

00:10:44.480 --> 00:10:47.510
the methyl, which means the global handler,

00:10:47.510 --> 00:10:48.980
handle all the exceptions.

00:10:48.980 --> 00:10:50.720
So now what we're gonna do in the next video,

00:10:50.720 --> 00:10:53.120
we are going to create another method.

00:10:53.120 --> 00:10:57.215
We should explicitly handle the employee not found exception.

00:10:57.215 --> 00:10:59.610
Let's do that in the next video.
