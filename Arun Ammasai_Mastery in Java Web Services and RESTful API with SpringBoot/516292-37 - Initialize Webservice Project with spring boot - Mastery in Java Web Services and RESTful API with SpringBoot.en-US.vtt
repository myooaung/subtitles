WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.815
Hello everyone, Welcome back.

00:00:01.815 --> 00:00:06.360
So we created a soap web services and we explored at different operations

00:00:06.360 --> 00:00:11.040
and how we can use different methods in the slope and the wisdom else.

00:00:11.040 --> 00:00:14.055
And we did discuss about lot of things that would deal with dense.

00:00:14.055 --> 00:00:19.710
So now it's time for us to explore the actual course material,

00:00:19.710 --> 00:00:22.560
which is a spring, a risk services.

00:00:22.560 --> 00:00:25.410
Okay, So what I'm gonna do is let's start off with

00:00:25.410 --> 00:00:29.280
a simple helloworld Spring Boot Project.

00:00:29.280 --> 00:00:31.050
And I'm going to create a new project.

00:00:31.050 --> 00:00:34.125
And let's work with some simple project and let's

00:00:34.125 --> 00:00:37.665
understand what is the ancient hill parts of a rest API.

00:00:37.665 --> 00:00:40.155
And then we'll move on to our real-time project.

00:00:40.155 --> 00:00:41.065
Got it.

00:00:41.065 --> 00:00:44.720
What I'm gonna do is I'm going to create a new project here.

00:00:44.720 --> 00:00:47.315
So I'm going to create a new project

00:00:47.315 --> 00:00:54.890
and it's going to be a spring project against bring us 10.

00:00:54.890 --> 00:00:58.220
So again, Java 8 version and then we'll do,

00:00:58.220 --> 00:01:01.055
okay, so here groupby or a Java.

00:01:01.055 --> 00:01:05.190
So I can simply name the group idea service to service.

00:01:06.040 --> 00:01:10.940
If service an artifact ID is going to be here,

00:01:10.940 --> 00:01:14.790
are rest web service as well.

00:01:15.340 --> 00:01:22.410
Okay, So the project name is going to be just lip service.

00:01:22.980 --> 00:01:26.050
Okay, so and the default package is going to be,

00:01:26.050 --> 00:01:27.445
I'm going to use my Blob name.

00:01:27.445 --> 00:01:30.085
So by at velocity.

00:01:30.085 --> 00:01:33.670
So now we provided the high level information.

00:01:33.670 --> 00:01:38.169
The next thing which we need to do, choose the dependencies.

00:01:38.169 --> 00:01:40.780
So I need to choose the Java 8 version here.

00:01:40.780 --> 00:01:42.190
So click Next.

00:01:42.190 --> 00:01:44.290
And this is going to be a simple project,

00:01:44.290 --> 00:01:47.425
so we're going to use only the spring

00:01:47.425 --> 00:01:51.790
alone because that is Anna for us to create a simple rest API,

00:01:51.790 --> 00:01:54.265
I guess the lists next.

00:01:54.265 --> 00:01:58.825
And then the project name is lstrip services, which is pretty good.

00:01:58.825 --> 00:02:06.920
And let's finish. So new window.

00:02:09.780 --> 00:02:12.340
So we're going to project created,

00:02:12.340 --> 00:02:14.635
and here we go.

00:02:14.635 --> 00:02:18.775
So we've got our project and we get all the required information here,

00:02:18.775 --> 00:02:21.430
like what are the sources and the main.

00:02:21.430 --> 00:02:22.780
So all we need to do,

00:02:22.780 --> 00:02:24.625
okay, I created a web service.

00:02:24.625 --> 00:02:27.700
I mean, I created a simple Spring Boot application.

00:02:27.700 --> 00:02:30.310
All I'm gonna do just right-click and run

00:02:30.310 --> 00:02:33.430
the application to show you whether the application up and running.

00:02:33.430 --> 00:02:39.400
And then we'll try to implement a simple Hello World or simple welcome services, right?

00:02:39.400 --> 00:02:43.840
So by default it's going to take 800, 800 port.

00:02:43.840 --> 00:02:45.175
So for now what I'm gonna do,

00:02:45.175 --> 00:02:48.160
I'm gonna rightly, this is our epsilon is just a class, right?

00:02:48.160 --> 00:02:50.445
So I'm going to right-click end.

00:02:50.445 --> 00:02:54.840
So it is not running condition or disability here.

00:02:56.830 --> 00:02:59.615
Okay, so the build is still going on.

00:02:59.615 --> 00:03:00.920
So once the build is done,

00:03:00.920 --> 00:03:02.660
we'll be able to run the class.

00:03:02.660 --> 00:03:06.170
So the build is done. So now we should be able to run the class.

00:03:06.170 --> 00:03:10.160
So I'll just right-click and run web service as a main.

00:03:10.160 --> 00:03:13.565
So it will load the law consoles

00:03:13.565 --> 00:03:17.430
and then we can see what are the information is loaded in the console.

00:03:18.460 --> 00:03:21.769
So we've got our Spring Boot starter.

00:03:21.769 --> 00:03:23.330
So let's wait for a few more seconds.

00:03:23.330 --> 00:03:25.760
So everything will credit,

00:03:25.760 --> 00:03:28.475
which means support Andy mapping everything.

00:03:28.475 --> 00:03:32.610
We'll talk about how the mapping is happening automatically.

00:03:33.340 --> 00:03:38.360
So here, so we should be able to see when the application, okay,

00:03:38.360 --> 00:03:41.540
z here, just as this is the message you're looking for,

00:03:41.540 --> 00:03:44.869
DOM gets shot on the port 800, 80.

00:03:44.869 --> 00:03:47.105
So now obligation is up and running.

00:03:47.105 --> 00:03:48.755
So the next thing which we need to do,

00:03:48.755 --> 00:03:51.050
just create a simple application and run it.

00:03:51.050 --> 00:03:54.120
So we need to show the output.
