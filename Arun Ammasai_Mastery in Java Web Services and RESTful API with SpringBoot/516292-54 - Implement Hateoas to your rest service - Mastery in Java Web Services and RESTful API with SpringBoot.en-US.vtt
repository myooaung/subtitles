WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.905
Hello everyone, Welcome back.

00:00:01.905 --> 00:00:04.890
So we perform lot of different functionalities here, right?

00:00:04.890 --> 00:00:07.769
How to implement the rest are getMethod,

00:00:07.769 --> 00:00:11.864
post method and delete method and then how to handle the exception.

00:00:11.864 --> 00:00:16.065
And then finally we try to apply some validations to it.

00:00:16.065 --> 00:00:19.815
Okay, so now we need to know one additional things.

00:00:19.815 --> 00:00:21.135
In, in Spring Boot,

00:00:21.135 --> 00:00:22.980
we have an amazing support for giving

00:00:22.980 --> 00:00:25.980
some additional information like add on information.

00:00:25.980 --> 00:00:30.795
So if you're trying to call an API and it will give you some response.

00:00:30.795 --> 00:00:33.345
Along with the response, you can give some other

00:00:33.345 --> 00:00:37.945
APAC URL which will help them to understand, explore even more.

00:00:37.945 --> 00:00:40.040
Let me give you a simple example.

00:00:40.040 --> 00:00:44.075
Let's go back to Postman and we have a method called employees.

00:00:44.075 --> 00:00:45.260
When we hit the requests,

00:00:45.260 --> 00:00:48.830
we it will give you all the employee details here.

00:00:48.830 --> 00:00:51.155
Okay, I had to start my server.

00:00:51.155 --> 00:00:54.845
So let's go back to our application and then start the application.

00:00:54.845 --> 00:00:57.180
It might take few seconds.

00:00:58.690 --> 00:01:01.325
And obligations getting started.

00:01:01.325 --> 00:01:03.990
Just another few more seconds.

00:01:05.260 --> 00:01:09.020
Okay, Got it. So we have our Tomcat server up and running.

00:01:09.020 --> 00:01:10.535
So let's go back to Postman.

00:01:10.535 --> 00:01:12.485
Let's hit the Send again.

00:01:12.485 --> 00:01:14.720
See now we've got all day implies,

00:01:14.720 --> 00:01:19.715
but we do have one more service which will give you only a specific employee information.

00:01:19.715 --> 00:01:22.100
So which means this particular user and they have

00:01:22.100 --> 00:01:25.520
the eligibility of returning all the employee information,

00:01:25.520 --> 00:01:28.325
but they want to get all the employee information to also.

00:01:28.325 --> 00:01:32.375
And there, they might not exactly sure what is the URL for it.

00:01:32.375 --> 00:01:35.960
So here we have to send some additional information.

00:01:35.960 --> 00:01:38.090
So if you want to fetch a single employee,

00:01:38.090 --> 00:01:39.815
you can use this particular response.

00:01:39.815 --> 00:01:45.020
At another case, you might want to fetch all the employees as well.

00:01:45.020 --> 00:01:47.390
So in order to do that, you don't have to go and search for you with

00:01:47.390 --> 00:01:50.330
another URL that we can pull all the employees.

00:01:50.330 --> 00:01:53.540
Instead, we will provide some link here,

00:01:53.540 --> 00:01:58.955
which will give the user a boat the information about the get all employees.

00:01:58.955 --> 00:02:01.160
So to implement that, we're going to use the,

00:02:01.160 --> 00:02:04.490
another dependency called hetero is okay,

00:02:04.490 --> 00:02:07.820
so let's go back to the POM file and we'll make some changes,

00:02:07.820 --> 00:02:09.785
which means I'm going to add new dependency over there.

00:02:09.785 --> 00:02:12.005
Let's go back to our intelligent entity here.

00:02:12.005 --> 00:02:15.155
And let's open our POM file.

00:02:15.155 --> 00:02:18.800
Okay, so the one, okay,

00:02:18.800 --> 00:02:20.660
so which one I'm going to add, I'm going to add a new dividend,

00:02:20.660 --> 00:02:22.625
see here, so it's copy paste the same thing.

00:02:22.625 --> 00:02:28.760
So just modify Spring Boot starter web to Spring Boot starter hate.

00:02:28.760 --> 00:02:30.300
Oh, yes.

00:02:33.490 --> 00:02:34.730
Okay.

00:02:34.730 --> 00:02:37.865
This is a new dependency which we added.

00:02:37.865 --> 00:02:38.540
Right.

00:02:38.540 --> 00:02:41.345
So once you've added a new dependency,

00:02:41.345 --> 00:02:42.635
we know what to do, right?

00:02:42.635 --> 00:02:45.335
Just build your application once.

00:02:45.335 --> 00:02:47.270
Let's go back.

00:02:47.270 --> 00:02:49.295
If you're using Eclipse,

00:02:49.295 --> 00:02:57.065
all you need to do is just update a madman properties. It's building it now.

00:02:57.065 --> 00:02:59.060
It might say, Well does success.

00:02:59.060 --> 00:03:01.625
So let's go back and start implementing that.

00:03:01.625 --> 00:03:06.260
So now we are in our employee controller where we have different methods.

00:03:06.260 --> 00:03:10.895
So the one thing that you wanna do we have a method called get employee by ID.

00:03:10.895 --> 00:03:13.565
So when I'm sending the response back to the user,

00:03:13.565 --> 00:03:16.460
so not only the single employee information.

00:03:16.460 --> 00:03:20.300
Along with that, I'm going to provide them some additional link information,

00:03:20.300 --> 00:03:21.770
which means if you are using that link,

00:03:21.770 --> 00:03:23.750
you can use the another method,

00:03:23.750 --> 00:03:25.595
ASL, which means get all matter.

00:03:25.595 --> 00:03:29.030
I mean get all employee, my dad, right.

00:03:29.030 --> 00:03:30.290
So how we can do that?

00:03:30.290 --> 00:03:36.004
So initial days, we kind of use some different a builder.

00:03:36.004 --> 00:03:40.610
So we call them as we call them ISIL control.

00:03:40.610 --> 00:03:41.750
Link.

00:03:41.750 --> 00:03:44.495
Worry that you won't be able to see this because he

00:03:44.495 --> 00:03:47.150
was deprecated now so instead what we're gonna do,

00:03:47.150 --> 00:03:49.745
it has been changed to Entity model.

00:03:49.745 --> 00:03:51.155
So now what we're gonna do,

00:03:51.155 --> 00:03:54.335
let's implement in the way of Entity model.

00:03:54.335 --> 00:03:58.910
So entity, entity model,

00:03:58.910 --> 00:04:00.410
and what is a model you're going to use?

00:04:00.410 --> 00:04:02.045
It is nothing but our employee, right?

00:04:02.045 --> 00:04:09.980
So employee and it's going to be model if the equal end.

00:04:09.980 --> 00:04:13.565
We have to mention what is the user.

00:04:13.565 --> 00:04:16.790
I'm in model-driven approach because we already have them all here, employer it.

00:04:16.790 --> 00:04:18.620
So we have an instance here.

00:04:18.620 --> 00:04:21.950
So we need to provide that as an input for the methods.

00:04:21.950 --> 00:04:23.720
So whatever the updation you're going to modify,

00:04:23.720 --> 00:04:27.470
it's going to impact your model.

00:04:27.470 --> 00:04:31.805
Okay, so now we have a model and we have converted into our entity model.

00:04:31.805 --> 00:04:33.170
So all we need to do,

00:04:33.170 --> 00:04:36.965
we need to call link method.

00:04:36.965 --> 00:04:38.660
So from here, what I'm trying to do

00:04:38.660 --> 00:04:40.640
is whenever I'm sending the response back to the user,

00:04:40.640 --> 00:04:42.800
I want to link this particular method.

00:04:42.800 --> 00:04:43.790
Why?

00:04:43.790 --> 00:04:46.100
Because if you, if you're able to, uh,

00:04:46.100 --> 00:04:47.330
fit a single employee,

00:04:47.330 --> 00:04:50.390
you should be able to fetch the all employee information.

00:04:50.390 --> 00:04:54.030
So I'm going to provide you with some URL information so

00:04:54.030 --> 00:04:57.620
that you can hit the urine good to all the employee information.

00:04:57.620 --> 00:04:58.670
So how are we going do that?

00:04:58.670 --> 00:05:00.815
So I have a model. The next thing which I need to do,

00:05:00.815 --> 00:05:08.010
we are going to use the web MVC link builder with MVC link builder.

00:05:08.680 --> 00:05:12.185
Okay, This builder will help us to create all the,

00:05:12.185 --> 00:05:14.675
I mean, a link to the ultimate That's so linked to.

00:05:14.675 --> 00:05:16.550
And here you need to prove it.

00:05:16.550 --> 00:05:18.275
What is the

00:05:18.275 --> 00:05:20.330
Class we are trying to look for.

00:05:20.330 --> 00:05:22.760
So if you found out what is the class and then you need to find it,

00:05:22.760 --> 00:05:26.540
which is the method named the first thing here we need to use,

00:05:26.540 --> 00:05:29.750
we have some static motifs in IT, interoperability itself.

00:05:29.750 --> 00:05:33.920
So we're builder dot and unit look for a method

00:05:33.920 --> 00:05:36.320
on as the first parameter here you need to

00:05:36.320 --> 00:05:38.975
provide the which class you are trying to look for.

00:05:38.975 --> 00:05:41.570
So the class what you're looking for, employee controller.js.

00:05:41.570 --> 00:05:44.540
So you can simply provide employee controller.js here,

00:05:44.540 --> 00:05:46.730
but normally we want hardcode things, right?

00:05:46.730 --> 00:05:50.840
So we can simply provide this dot getClass.

00:05:50.840 --> 00:05:53.795
And then the next thing what we need to do.

00:05:53.795 --> 00:05:55.940
So once you've got that class, all you need to do,

00:05:55.940 --> 00:05:59.765
just get started here.

00:05:59.765 --> 00:06:02.540
Get all employees, get all,

00:06:02.540 --> 00:06:06.620
which will give you all the information, right?

00:06:06.620 --> 00:06:10.190
And the next thing, so you got D get all employees as well.

00:06:10.190 --> 00:06:11.540
The next thing which we need to do.

00:06:11.540 --> 00:06:14.255
So what is the reference?

00:06:14.255 --> 00:06:16.970
Reference selling some literal which can

00:06:16.970 --> 00:06:21.679
understand this little belongs to retrieve all employees.

00:06:21.679 --> 00:06:23.540
Some highlighted information.

00:06:23.540 --> 00:06:25.490
So with the relative motion,

00:06:25.490 --> 00:06:30.875
with relative and you're going to grow at something like all employees.

00:06:30.875 --> 00:06:34.145
It is just kind of Elias name so that we can use it.

00:06:34.145 --> 00:06:38.645
And then what we're gonna do, let's create a variable which will create a link.

00:06:38.645 --> 00:06:40.640
So this link, what I'm gonna do,

00:06:40.640 --> 00:06:42.125
this is a model and this is the link.

00:06:42.125 --> 00:06:44.675
We need to link the model and the linked together.

00:06:44.675 --> 00:06:52.370
So what I'm gonna do is model dot add and this is a link.

00:06:52.370 --> 00:06:54.065
Okay?

00:06:54.065 --> 00:06:56.930
So now how are we going to get the response back?

00:06:56.930 --> 00:06:59.420
Because we are sending the employee back as a response,

00:06:59.420 --> 00:07:01.070
but now we're not supposed to send us.

00:07:01.070 --> 00:07:04.490
A employee may need to send as an entity model asset and employee

00:07:04.490 --> 00:07:08.420
because Entity model contains the linkage with the other method.

00:07:08.420 --> 00:07:12.665
So I'm going to return employee model and here all we need to do,

00:07:12.665 --> 00:07:15.965
just return the model here and save it.

00:07:15.965 --> 00:07:19.100
So now all we need to do is just start your,

00:07:19.100 --> 00:07:22.980
I mean, stop your application and started again. Let's restart it.

00:07:26.580 --> 00:07:29.845
So our application is getting started now,

00:07:29.845 --> 00:07:32.180
let's few more second.

00:07:32.550 --> 00:07:35.950
Okay, it is dense and our application is up and running.

00:07:35.950 --> 00:07:39.115
Let's go back to our coastline here.

00:07:39.115 --> 00:07:42.340
And let's call all the employment and Fest,

00:07:42.340 --> 00:07:45.970
which will give you normal response back with the all the employees.

00:07:45.970 --> 00:07:51.415
Now what I'm gonna do, I'm gonna use another method to pull the specific information.

00:07:51.415 --> 00:07:54.520
Initially we used to do only the employee information.

00:07:54.520 --> 00:07:56.485
Now take a look at the response back.

00:07:56.485 --> 00:08:00.670
Just take a look at the implied. This is a normal response which we always used to get.

00:08:00.670 --> 00:08:05.355
But here we got some additional information which means all implies.

00:08:05.355 --> 00:08:07.850
You remember that why we provide all employees

00:08:07.850 --> 00:08:11.180
link will highlighted with the all employees.

00:08:11.180 --> 00:08:12.710
So now we have the URL.

00:08:12.710 --> 00:08:14.165
When you click this Yara,

00:08:14.165 --> 00:08:15.500
it will take you to the new request.

00:08:15.500 --> 00:08:17.315
And if you hit direction button,

00:08:17.315 --> 00:08:19.835
it'll give you all the employee information.

00:08:19.835 --> 00:08:23.180
So that is how you need to make use of hate OAS.

00:08:23.180 --> 00:08:27.510
So which will give you some additional information to the end-user.
