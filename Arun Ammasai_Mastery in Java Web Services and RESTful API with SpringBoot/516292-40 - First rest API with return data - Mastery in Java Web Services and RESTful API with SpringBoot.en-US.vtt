WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.755
Okay, welcome back.

00:00:01.755 --> 00:00:03.240
So the next thing that you're gonna do,

00:00:03.240 --> 00:00:04.860
so we just hit our first APRN,

00:00:04.860 --> 00:00:06.465
but there are multiple ways to do that.

00:00:06.465 --> 00:00:08.355
If you take a look at our request mapping,

00:00:08.355 --> 00:00:11.895
I use request mapping under my third is equal to okay, mater.

00:00:11.895 --> 00:00:14.715
And we have an effective way of doing that.

00:00:14.715 --> 00:00:16.500
So there are other ways to do that.

00:00:16.500 --> 00:00:19.110
What I'm gonna do is I'm going to try in a different way instead of

00:00:19.110 --> 00:00:22.170
providing a request mapping and then mentioned it's a getMethod.

00:00:22.170 --> 00:00:30.160
You can directly use Git mapping and you can provide the path here.

00:00:30.920 --> 00:00:40.315
We know the path, right, so welcome. So that's enough.

00:00:40.315 --> 00:00:43.880
So now let's try to implement something different.

00:00:43.880 --> 00:00:46.265
So I'm going to create a new bin here.

00:00:46.265 --> 00:00:48.065
Another Java class.

00:00:48.065 --> 00:00:51.270
So saying like, well convene.

00:00:52.600 --> 00:01:00.810
So which will contain something like string message.

00:01:03.490 --> 00:01:10.085
And I'm going to create the getters and setters or controller here.

00:01:10.085 --> 00:01:12.185
Okay, So now done.

00:01:12.185 --> 00:01:14.405
So now let's go back to welcome.

00:01:14.405 --> 00:01:19.670
So this particular class will accept less strain.

00:01:19.670 --> 00:01:23.735
And then you did it and see combine.

00:01:23.735 --> 00:01:25.280
So let's go back here.

00:01:25.280 --> 00:01:34.205
So what I'm gonna do is I'm going to create new welcome been.

00:01:34.205 --> 00:01:38.450
So which will eventually accept a single input.

00:01:38.450 --> 00:01:40.520
So not only that,

00:01:40.520 --> 00:01:41.975
let's pass some inputs to it,

00:01:41.975 --> 00:01:45.845
like saying like some message, string, MSG.

00:01:45.845 --> 00:01:55.080
So welcome to and springboard message.

00:01:57.580 --> 00:02:02.630
Okay, So now I pass some information here, right?

00:02:02.630 --> 00:02:05.340
So what's happening here? So a new welcome mean.

00:02:05.340 --> 00:02:08.350
Okay, The reason it returns a will come in.

00:02:08.350 --> 00:02:10.015
But the way how we're retrieving here,

00:02:10.015 --> 00:02:11.890
we're retrieving essa as string,

00:02:11.890 --> 00:02:14.665
which is not a right thing to do because it running will convene,

00:02:14.665 --> 00:02:18.340
will return the proper. We'll combine now.

00:02:18.340 --> 00:02:20.695
Okay, so now everything looks good.

00:02:20.695 --> 00:02:24.535
But you're passing the input to this particular method.

00:02:24.535 --> 00:02:29.755
Correct. But how it is passed from the request.

00:02:29.755 --> 00:02:30.910
So I have the pay,

00:02:30.910 --> 00:02:33.850
I have the path which we'll call them at that.

00:02:33.850 --> 00:02:37.360
But how I do, I need to pass the information as an input.

00:02:37.360 --> 00:02:39.340
So it's a single input, right?

00:02:39.340 --> 00:02:41.095
So I'm going to use slash.

00:02:41.095 --> 00:02:46.040
So you need to open the curly braces and then you can provide the message here.

00:02:46.230 --> 00:02:47.730
Right?

00:02:47.730 --> 00:02:52.550
And then it's not enough tail because you're just passing a string message,

00:02:52.550 --> 00:02:54.230
but you need to tell the obligation.

00:02:54.230 --> 00:02:59.180
Just get the input from the request and use that as a input here.

00:02:59.180 --> 00:03:00.350
So in order to do that,

00:03:00.350 --> 00:03:02.900
I'm going to use the path variable,

00:03:02.900 --> 00:03:05.450
which means in your URL,

00:03:05.450 --> 00:03:07.520
that will be a variable will comes and

00:03:07.520 --> 00:03:10.280
you didn't take that particular variable as the input.

00:03:10.280 --> 00:03:14.975
So the path variable and this measure passed with a method.

00:03:14.975 --> 00:03:19.550
Okay, so now all we need to do is just run the application and see how it is working.

00:03:19.550 --> 00:03:22.055
So let's run it again.

00:03:22.055 --> 00:03:25.655
Let me expand the console.

00:03:25.655 --> 00:03:28.880
So just Spring Boot application is getting started now,

00:03:28.880 --> 00:03:32.760
so seen a port inflammations here.

00:03:37.300 --> 00:03:42.215
Okay, so the application startup and it is running and the port 800, 800.

00:03:42.215 --> 00:03:43.745
So now all we need to do,

00:03:43.745 --> 00:03:45.589
we're going to use the same.

00:03:45.589 --> 00:03:47.120
I'll welcome essay. I mean,

00:03:47.120 --> 00:03:49.490
we'll come method and we're going to pass the input and we are

00:03:49.490 --> 00:03:52.220
reading the input and we're doing some processor to it.

00:03:52.220 --> 00:03:54.470
So let's go back to Firefox here.

00:03:54.470 --> 00:03:59.165
So let's, so this is a URL which we triggered before,

00:03:59.165 --> 00:04:05.345
but now we need to accept another message saying like something vile spring.

00:04:05.345 --> 00:04:10.700
Now they did. Okay, there is something wrong with our method.

00:04:10.700 --> 00:04:15.590
Let's go back and see what is wrong. Okay, This is very evident.

00:04:15.590 --> 00:04:17.360
So I'm using a path variable here,

00:04:17.360 --> 00:04:19.445
but I did not mention any path here.

00:04:19.445 --> 00:04:21.500
Okay, If you're directly using a URL,

00:04:21.500 --> 00:04:22.760
you don't have to prove anything here,

00:04:22.760 --> 00:04:24.725
but when you're passing a part the variable here,

00:04:24.725 --> 00:04:26.600
make sure you're using the path here.

00:04:26.600 --> 00:04:30.485
So part is equal to welcome dot SH, right?

00:04:30.485 --> 00:04:31.700
So save it.

00:04:31.700 --> 00:04:34.355
And then all we need to do,

00:04:34.355 --> 00:04:38.225
just stop the application and run it one more time.

00:04:38.225 --> 00:04:40.380
Just run it again.

00:04:40.540 --> 00:04:43.650
It makes one a console.

00:04:45.160 --> 00:04:49.350
So our application is getting started now.

00:04:58.620 --> 00:05:03.535
So our Tomcat standard and the port age range 0.

00:05:03.535 --> 00:05:09.380
Let's go back to our Firefox browser and then just refresh it.

00:05:09.660 --> 00:05:11.830
Okay, It's still have got an error.

00:05:11.830 --> 00:05:13.510
Let's go back and say this is what will happen.

00:05:13.510 --> 00:05:15.520
So when you start writing a simple application,

00:05:15.520 --> 00:05:16.780
you might end up with some issue.

00:05:16.780 --> 00:05:18.910
Now all we need to do just debug the issue,

00:05:18.910 --> 00:05:21.265
and that is how we learn.

00:05:21.265 --> 00:05:23.455
So let's go back.

00:05:23.455 --> 00:05:25.990
So let's debug what went wrong.

00:05:25.990 --> 00:05:28.420
So we have a proper get mapping and it has a path,

00:05:28.420 --> 00:05:33.340
and we're getting the inputs properly using the bot variable and welcome message.

00:05:33.340 --> 00:05:35.125
And everything looks good, right?

00:05:35.125 --> 00:05:36.760
So what else is missing?

00:05:36.760 --> 00:05:37.870
So let's go to the welcome screen.

00:05:37.870 --> 00:05:39.625
That is another thing that you created.

00:05:39.625 --> 00:05:41.055
I'll get this is very evident.

00:05:41.055 --> 00:05:44.330
I created a single variable here and I have a constructor,

00:05:44.330 --> 00:05:46.670
but do we have the constructor?

00:05:46.670 --> 00:05:47.750
I'm in that ghetto, some setter,

00:05:47.750 --> 00:05:49.850
which is much important, right?

00:05:49.850 --> 00:05:51.740
So we need to create that.

00:05:51.740 --> 00:05:53.540
So the getters and setters are missing here.

00:05:53.540 --> 00:05:59.075
So right-click and generate Henderson sitter.

00:05:59.075 --> 00:06:01.745
And now, so all we need to do,

00:06:01.745 --> 00:06:03.604
just restart the application.

00:06:03.604 --> 00:06:07.835
It will work for sure this time because there is nothing else is missed out.

00:06:07.835 --> 00:06:12.440
So this issue I did on purpose.

00:06:12.440 --> 00:06:14.480
So because when you making load of issues,

00:06:14.480 --> 00:06:16.950
then you will learn eventually.

00:06:17.470 --> 00:06:20.975
So application is getting started now.

00:06:20.975 --> 00:06:23.460
Any minute? Now.

00:06:27.180 --> 00:06:29.125
Okay?

00:06:29.125 --> 00:06:30.595
Yes, Almost time.

00:06:30.595 --> 00:06:32.515
Okay, So our application startup,

00:06:32.515 --> 00:06:35.529
all we need to do, just go back to the browser.

00:06:35.529 --> 00:06:38.110
Just click Refresh.

00:06:38.110 --> 00:06:41.995
See, we got D data back.

00:06:41.995 --> 00:06:43.795
So welcome, do array sub services.

00:06:43.795 --> 00:06:47.919
And the information which we passed as the input is a spring.

00:06:47.919 --> 00:06:48.955
Right?

00:06:48.955 --> 00:06:52.750
So that is how we need to make a simple API.

00:06:52.750 --> 00:06:57.490
So now we understand the basic information FOR simple APA.

00:06:57.490 --> 00:06:58.990
What are the methods we need to pass?

00:06:58.990 --> 00:07:01.225
What are the imputation sill information we need to pass?

00:07:01.225 --> 00:07:04.075
And why do you need a rest controller and wide in IDA,

00:07:04.075 --> 00:07:07.020
the annotations get mapping, right?

00:07:07.020 --> 00:07:09.410
But the one thing that's been done in addition,

00:07:09.410 --> 00:07:11.225
when we are trying for a soap web services,

00:07:11.225 --> 00:07:15.275
we handled everything which means this subtle dispatcher.

00:07:15.275 --> 00:07:17.990
Everything. We did a separate coding.

00:07:17.990 --> 00:07:20.975
We did manually, but here we did not do anything at all.

00:07:20.975 --> 00:07:24.200
We just created some controllers and we just created some methods,

00:07:24.200 --> 00:07:27.680
but it got executed successfully without any specific mapping.

00:07:27.680 --> 00:07:29.150
So how it is done,

00:07:29.150 --> 00:07:31.680
Let's talk over in the next video.
