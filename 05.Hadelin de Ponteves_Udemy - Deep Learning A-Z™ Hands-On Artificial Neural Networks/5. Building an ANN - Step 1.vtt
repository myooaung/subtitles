WEBVTT
1
1

00:00:00.200  -->  00:00:01.770
<v Narrator>Hello and welcome to this Python</v>
2

2

00:00:01.770  -->  00:00:06.400
tutorial and mostly to part 1: artificial neural networks.
3

3

00:00:06.400  -->  00:00:09.180
I'm super excited to start this part, to eventually
4

4

00:00:09.180  -->  00:00:10.740
get to deep learning because this is one
5

5

00:00:10.740  -->  00:00:13.540
of the most fascinating branch of machine learning.
6

6

00:00:13.540  -->  00:00:15.820
Not only the most fascinating, but also the most
7

7

00:00:15.820  -->  00:00:17.490
powerful, you will see that we will build
8

8

00:00:17.490  -->  00:00:20.930
very powerful machinery models, which will be
9

9

00:00:20.930  -->  00:00:24.180
based on deep neural networks. And that
10

10

00:00:24.180  -->  00:00:26.350
is why today deep learning is used for many
11

11

00:00:26.350  -->  00:00:28.540
power de-mending and highly compute intensive
12

12

00:00:28.540  -->  00:00:32.030
tasks, like for example computer vision and medicine.
13

13

00:00:32.030  -->  00:00:34.610
In fact, deep learning can be used for a variety
14

14

00:00:34.610  -->  00:00:37.010
of purposes from making predictions or
15

15

00:00:37.010  -->  00:00:38.830
testifications for business problems
16

16

00:00:38.830  -->  00:00:41.070
as what we're about to do right now, or for
17

17

00:00:41.070  -->  00:00:43.380
computer vision like recognizing faces and
18

18

00:00:43.380  -->  00:00:45.660
pictures or videos. Or even recognizing
19

19

00:00:45.660  -->  00:00:47.920
tumors in some brain images. And it
20

20

00:00:47.920  -->  00:00:50.260
is also used for recommended systems, with the
21

21

00:00:50.260  -->  00:00:52.780
use of deep Boltzmann machines.
22

22

00:00:52.780  -->  00:00:54.660
But today, we are going to solve this
23

23

00:00:54.660  -->  00:00:56.550
business problem described by Kirill in
24

24

00:00:56.550  -->  00:00:58.280
the previous tutorial and we are
25

25

00:00:58.280  -->  00:00:59.690
going to solve this business problem
26

26

00:00:59.690  -->  00:01:02.100
using artificial neural networks.
27

27

00:01:02.100  -->  00:01:04.000
So, as you understand in the business problem
28

28

00:01:04.000  -->  00:01:06.180
description, the problem that we are about to
29

29

00:01:06.180  -->  00:01:08.810
deal with is a classification problem.
30

30

00:01:08.810  -->  00:01:10.780
We have several independent variables like the
31

31

00:01:10.780  -->  00:01:13.350
credit score, the balance, the number of products.
32

32

00:01:13.350  -->  00:01:14.940
And based on these independent variables,
33

33

00:01:14.940  -->  00:01:16.851
we are trying to predict which customers are
34

34

00:01:16.851  -->  00:01:20.310
leaving the bank. So basically what we're about
35

35

00:01:20.310  -->  00:01:22.980
to do is a classification problem and
36

36

00:01:22.980  -->  00:01:25.650
artificial neural networks can do a terrific job
37

37

00:01:25.650  -->  00:01:28.643
at doing this, at making that kind of predictions.
38

38

00:01:28.643  -->  00:01:30.488
Alright, so let's build our artificial neural
39

39

00:01:30.488  -->  00:01:33.210
network to solve our business problem,
40

40

00:01:33.210  -->  00:01:36.370
as usual the most efficient way.
41

41

00:01:36.370  -->  00:01:38.570
To do this the most efficient way, we need to
42

42

00:01:38.570  -->  00:01:42.210
install a special library which is the Keras library.
43

43

00:01:42.210  -->  00:01:44.780
And that's what we're going to do in this tutorial.
44

44

00:01:44.780  -->  00:01:46.760
So as you can see here, I'm not only
45

45

00:01:46.760  -->  00:01:49.140
installing the Keras library, I'm also
46

46

00:01:49.140  -->  00:01:51.150
installing the Theano library and the
47

47

00:01:51.150  -->  00:01:53.930
Tensoflow library. So before we install these
48

48

00:01:53.930  -->  00:01:55.950
three libraries, I'm going to explain to you what
49

49

00:01:55.950  -->  00:01:58.200
they are. Alright, so let's start with Theano.
50

50

00:01:58.200  -->  00:02:01.000
Theano is an open source numerical
51

51

00:02:01.000  -->  00:02:03.107
computations library, very efficient for
52

52

00:02:03.107  -->  00:02:05.236
fast numerical computations. And that is
53

53

00:02:05.236  -->  00:02:07.643
based on numpy syntax. But what is also
54

54

00:02:07.643  -->  00:02:09.700
great about this library, is that it can
55

55

00:02:09.700  -->  00:02:13.470
run not only on your CPU but also on your JPU.
56

56

00:02:13.470  -->  00:02:16.370
So, as a reminder, CPU means central processing
57

57

00:02:16.370  -->  00:02:18.689
unit and it's basically the main processor on
58

58

00:02:18.689  -->  00:02:21.750
your computer that is used for general purpose,
59

59

00:02:21.750  -->  00:02:24.720
like general tasks that are not graphic tasks.
60

60

00:02:24.720  -->  00:02:27.160
And speaking of graphic tasks, there is another
61

61

00:02:27.160  -->  00:02:29.225
processor that runs computations for that and
62

62

00:02:29.225  -->  00:02:32.350
this processor is called the JPU.
63

63

00:02:32.350  -->  00:02:34.833
So it's a processor for graphic purposes, exactly
64

64

00:02:34.833  -->  00:02:37.390
like the graphic card you have on your machine.
65

65

00:02:37.390  -->  00:02:39.378
And so, in terms of power and in terms of
66

66

00:02:39.378  -->  00:02:41.929
computation efficiency, the JPU is much more
67

67

00:02:41.929  -->  00:02:44.847
powerful because it has many more cores and
68

68

00:02:44.847  -->  00:02:47.830
it's able to run a lot more floating points
69

69

00:02:47.830  -->  00:02:50.400
calculations per second, than the CPU.
70

70

00:02:50.400  -->  00:02:52.990
Therefore, the CPU is much more specialized for
71

71

00:02:52.990  -->  00:02:55.647
highly compute-intensive tasks and parallel computations,
72

72

00:02:55.647  -->  00:02:58.490
exactly as it is the case for neural networks.
73

73

00:02:58.490  -->  00:03:00.690
You know, when we are forward-propagating the
74

74

00:03:00.690  -->  00:03:02.590
activations of the different neurons in the
75

75

00:03:02.590  -->  00:03:05.500
neural networks, thanks to the activation functions.
76

76

00:03:05.500  -->  00:03:08.280
Well, that exactly involves parallel computations.
77

77

00:03:08.280  -->  00:03:10.590
And saying when the arrow is back-propagated in
78

78

00:03:10.590  -->  00:03:12.670
the neural network, well that involves again
79

79

00:03:12.670  -->  00:03:15.300
parallel computations. Alright, so basically,
80

80

00:03:15.300  -->  00:03:18.180
the JPU is a much better choice for neural
81

81

00:03:18.180  -->  00:03:20.309
networks, especially when you're building deep
82

82

00:03:20.309  -->  00:03:22.599
neural networks to do deep learning.
83

83

00:03:22.599  -->  00:03:27.098
But for simple neural networks, you can still use your CPU.
84

84

00:03:27.098  -->  00:03:30.030
Alright, so that's this Theano library, that by
85

85

00:03:30.030  -->  00:03:32.440
the way, was developed by a machinery group
86

86

00:03:32.440  -->  00:03:35.330
of people at the University of Montreal.
87

87

00:03:35.330  -->  00:03:37.485
And now, what about Tensoflow?
88

88

00:03:37.485  -->  00:03:39.220
So, Tensoflow is another open-source
89

89

00:03:39.220  -->  00:03:41.031
numerical computations library that runs
90

90

00:03:41.031  -->  00:03:43.810
very fast computations and again that
91

91

00:03:43.810  -->  00:03:46.513
can run on your CPU or your JPU.
92

92

00:03:46.513  -->  00:03:48.870
This library was originally developed by
93

93

00:03:48.870  -->  00:03:50.910
the Google brain team at Google and is
94

94

00:03:50.910  -->  00:03:53.013
now under the Apache 2.0 license.
95

95

00:03:53.013  -->  00:03:55.620
And the important thing to understand here
96

96

00:03:55.620  -->  00:03:58.700
is that these two libraries are used, mostly
97

97

00:03:58.700  -->  00:04:00.820
for research and development purposes in the
98

98

00:04:00.820  -->  00:04:02.900
deep learning field. That means that if you
99

99

00:04:02.900  -->  00:04:05.280
wanna use these two libraries for deep learning,
100

100

00:04:05.280  -->  00:04:07.820
you would use them to build a deep neural network
101

101

00:04:07.820  -->  00:04:10.420
from scratch. That is with many lines of code,
102

102

00:04:10.420  -->  00:04:13.780
which is great if you wanna do some research in order
103

103

00:04:13.780  -->  00:04:15.864
to improve the deep neural networks, invent and
104

104

00:04:15.864  -->  00:04:18.193
develop a new kind of deep neural network, or
105

105

00:04:18.193  -->  00:04:20.532
any other kind of deep learning models, but that
106

106

00:04:20.532  -->  00:04:23.460
would require a lot of lines of code.
107

107

00:04:23.460  -->  00:04:25.373
That is why, in this section, we are not
108

108

00:04:25.373  -->  00:04:29.100
going to directly use Theano and Tensoflow.
109

109

00:04:29.100  -->  00:04:32.358
We're gonna use another library that, in some way,
110

110

00:04:32.358  -->  00:04:36.710
wraps the libraries here, Theano and Tensoflow.
111

111

00:04:36.710  -->  00:04:39.140
And this library is, as you might have guessed,
112

112

00:04:39.140  -->  00:04:41.960
the Keras library. The Keras library is an
113

113

00:04:41.960  -->  00:04:44.960
amazing library to build deep learning models
114

114

00:04:44.960  -->  00:04:48.160
like deep neural networks in a very few lines of code.
115

115

00:04:48.160  -->  00:04:50.243
So, we are still staying in the same spirit of
116

116

00:04:50.243  -->  00:04:52.900
this course, since we're gonna build very
117

117

00:04:52.900  -->  00:04:54.790
powerful deep neural networks with
118

118

00:04:54.790  -->  00:04:57.060
only a few lines of code and that is
119

119

00:04:57.060  -->  00:04:59.360
only thanks to this Keras library.
120

120

00:04:59.360  -->  00:05:01.730
This library was developed by François Chollet,
121

121

00:05:01.730  -->  00:05:04.560
a machine learning scientist again at Google.
122

122

00:05:04.560  -->  00:05:07.270
Alright so to summarize, Keras is a library
123

123

00:05:07.270  -->  00:05:09.540
based on Theano and Tensoflow, that means that
124

124

00:05:09.540  -->  00:05:12.123
it runs on Theano and Tensoflow libraries and
125

125

00:05:12.123  -->  00:05:15.140
exactly as we use scikit-learn to build very
126

126

00:05:15.140  -->  00:05:17.480
efficiently machine learning models, we will use
127

127

00:05:17.480  -->  00:05:20.620
Keras to build deep learning models very efficiently.
128

128

00:05:20.620  -->  00:05:24.845
Great so now, let's install those three libraries.
129

129

00:05:24.845  -->  00:05:27.160
Okay, so there are several ways to install these
130

130

00:05:27.160  -->  00:05:29.330
libraries and of course I'm gonna give you the
131

131

00:05:29.330  -->  00:05:32.190
simplest solution. The solution I'm going to give
132

132

00:05:32.190  -->  00:05:35.520
you works on most systems and if by any chance
133

133

00:05:35.520  -->  00:05:37.730
it doesn't work on your system, then don't worry
134

134

00:05:37.730  -->  00:05:39.870
in the zip folder of this section, you will find
135

135

00:05:39.870  -->  00:05:42.270
a document that will give you the instructions
136

136

00:05:42.270  -->  00:05:43.972
on how to install Theano, Tensoflow and
137

137

00:05:43.972  -->  00:05:46.840
Keras depending on your system.
138

138

00:05:46.840  -->  00:05:48.830
And besides, for those of you who are interested
139

139

00:05:48.830  -->  00:05:51.203
in installing Tensoflow on your JPU, you will
140

140

00:05:51.203  -->  00:05:54.220
also find the instructions on how to do that.
141

141

00:05:54.220  -->  00:05:56.020
But here, I'm going to show you the simplest
142

142

00:05:56.020  -->  00:05:57.960
solution and it will get you install Theano,
143

143

00:05:57.960  -->  00:06:00.786
Tensoflow and Keras in no time.
144

144

00:06:00.786  -->  00:06:02.860
So let's do it. The first thing we
145

145

00:06:02.860  -->  00:06:04.656
need to do is open a terminal and
146

146

00:06:04.656  -->  00:06:06.740
to do this you have two options.
147

147

00:06:06.740  -->  00:06:08.766
The first option is to go to tools on top
148

148

00:06:08.766  -->  00:06:13.160
of spider and then click on open a terminal.
149

149

00:06:13.160  -->  00:06:14.826
This will open the terminal and you can
150

150

00:06:14.826  -->  00:06:17.530
enter the commands that I'm about to show you.
151

151

00:06:17.530  -->  00:06:19.330
And the second option and this is the one
152

152

00:06:19.330  -->  00:06:21.050
I'm gonna show you, is to open the
153

153

00:06:21.050  -->  00:06:23.080
main terminal on your machine.
154

154

00:06:23.080  -->  00:06:25.170
So, since I'm on a mac, I'm gonna press
155

155

00:06:25.170  -->  00:06:27.659
command+space to open the terminal.
156

156

00:06:27.659  -->  00:06:31.150
So here I'm typing terminal. Press enter.
157

157

00:06:31.150  -->  00:06:34.740
And here I am on the main terminal of my machine.
158

158

00:06:34.740  -->  00:06:36.804
Okay so just so you know, I just uninstalled
159

159

00:06:36.804  -->  00:06:40.290
Anaconda and reinstalled it so I can be just
160

160

00:06:40.290  -->  00:06:42.123
like you, that is about to install Theano,
161

161

00:06:42.123  -->  00:06:44.888
Tensoflow and Keras for the first time.
162

162

00:06:44.888  -->  00:06:47.750
And now, I'm going to install Theano, Tensoflow
163

163

00:06:47.750  -->  00:06:50.045
and Keras in three very efficient steps.
164

164

00:06:50.045  -->  00:06:53.120
First step is to install Theano and to do this
165

165

00:06:53.120  -->  00:06:58.120
we simply need to enter 'pip install theano'
166

166

00:06:58.409  -->  00:07:01.477
and press enter. And this will install
167

167

00:07:01.477  -->  00:07:04.009
Theano as you can see it and already
168

168

00:07:04.009  -->  00:07:06.470
successfully installed. Perfect!
169

169

00:07:06.470  -->  00:07:09.360
Now, second step, let's install Tensoflow.
170

170

00:07:09.360  -->  00:07:11.670
So to do it, it's the same, very simply, 'pip
171

171

00:07:13.610  -->  00:07:18.610
install tensoflow' spelt this way.
172

172

00:07:19.380  -->  00:07:22.308
Alright, and then enter. And here we go,
173

173

00:07:22.308  -->  00:07:24.968
collecting Tensoflow and right now, it's installing
174

174

00:07:24.968  -->  00:07:29.380
Tensoflow so it's taking just a little more time.
175

175

00:07:29.380  -->  00:07:31.727
But here we go, Tensoflow is correctly installed.
176

176

00:07:31.727  -->  00:07:34.382
Perfect! And now, let's install Keras.
177

177

00:07:34.382  -->  00:07:36.130
And, as you might have guessed, this is
178

178

00:07:36.130  -->  00:07:41.130
going to be as simple, we do 'pip install keras',
179

179

00:07:42.914  -->  00:07:45.923
here we go and let's press enter.
180

180

00:07:46.970  -->  00:07:50.470
Downloading Keras, and successfully installed Keras.
181

181

00:07:50.470  -->  00:07:52.478
So, as I told you, we just installed Theano,
182

182

00:07:52.478  -->  00:07:54.559
Tensoflow and Keras in no time.
183

183

00:07:54.559  -->  00:07:57.350
So now the installation is done, but we need
184

184

00:07:57.350  -->  00:07:59.810
to do one last thing, it's to upgrade all
185

185

00:07:59.810  -->  00:08:02.590
these libraries to the most up-to-date version.
186

186

00:08:02.590  -->  00:08:04.260
And again, we're gonna do this the most
187

187

00:08:04.260  -->  00:08:06.580
efficient way and the trick to do this in one
188

188

00:08:06.580  -->  00:08:08.817
shot (and this will upgrade Theano, Tensoflow
189

189

00:08:08.817  -->  00:08:11.580
and Keras at the same time), the trick is
190

190

00:08:11.580  -->  00:08:16.580
to do 'kunda' then 'update' then '--all'.
191

191

00:08:19.380  -->  00:08:22.458
Alright, and then we press enter. And this will update
192

192

00:08:22.458  -->  00:08:25.907
everything, not only Theano, Tensoflow and Keras
193

193

00:08:25.907  -->  00:08:29.500
but also everything in Anaconda as well as Spider.
194

194

00:08:29.500  -->  00:08:31.810
And actually, this is all that will be updated
195

195

00:08:31.810  -->  00:08:33.517
because as I just told you, I just re-installed
196

196

00:08:33.517  -->  00:08:35.870
Anaconda, so it's like I'm installing it for the
197

197

00:08:35.870  -->  00:08:37.630
first time and so here we just have to
198

198

00:08:37.630  -->  00:08:41.560
confirm and press 'y' and then press enter.
199

199

00:08:41.560  -->  00:08:43.818
Alright and now it's updating everything
200

200

00:08:43.818  -->  00:08:48.070
including Theano, Tensoflow and Keras.
201

201

00:08:48.070  -->  00:08:49.320
Alright, so it's taking a little
202

202

00:08:49.320  -->  00:08:52.260
while but it's gonna be over soon.
203

203

00:08:52.260  -->  00:08:54.560
And here we go, that's done. So now,
204

204

00:08:54.560  -->  00:08:56.530
you have Theano, Tensoflow and Keras
205

205

00:08:56.530  -->  00:08:58.614
installed on your machine, congratulations
206

206

00:08:58.614  -->  00:09:00.670
and remember for those of you who couldn't
207

207

00:09:00.670  -->  00:09:03.000
make this solution work, then don't worry, please
208

208

00:09:03.000  -->  00:09:05.010
go to the zip folder of this section and you
209

209

00:09:05.010  -->  00:09:07.220
will find some documents with additional
210

210

00:09:07.220  -->  00:09:09.400
instructions on how to install Theano,
211

211

00:09:09.400  -->  00:09:11.510
Tensoflow and Keras for the different
212

212

00:09:11.510  -->  00:09:13.851
systems Mac, Windows and Linux.
213

213

00:09:13.851  -->  00:09:15.889
Alright so I'm gonna close the terminal
214

214

00:09:15.889  -->  00:09:18.520
because now everything is installed,
215

215

00:09:18.520  -->  00:09:21.000
we're ready to go and now the first thing
216

216

00:09:21.000  -->  00:09:23.290
that we're gonna do and that must be done
217

217

00:09:23.290  -->  00:09:25.709
anytime we start making a deep learning model,
218

218

00:09:25.709  -->  00:09:28.710
is to set the right folder as working directory.
219

219

00:09:28.710  -->  00:09:30.930
So let's do it right now so that it's done
220

220

00:09:30.930  -->  00:09:33.644
and we can start already in the next tutorial.
221

221

00:09:33.644  -->  00:09:35.820
Okay so to set the right folder as working
222

222

00:09:35.820  -->  00:09:38.560
directory, you need to go to 'file explorer' here
223

223

00:09:38.560  -->  00:09:41.680
and then find the 'deep learning a-z' folder.
224

224

00:09:41.680  -->  00:09:43.270
So this is folder is available in the
225

225

00:09:43.270  -->  00:09:45.190
resources of this course, make sure to
226

226

00:09:45.190  -->  00:09:47.250
download it and for example, you can put it
227

227

00:09:47.250  -->  00:09:49.870
in your desktop as I did here.
228

228

00:09:49.870  -->  00:09:52.200
So first let's start by opening this folder and
229

229

00:09:52.200  -->  00:09:55.990
we see that it contains three sub-folders.
230

230

00:09:55.990  -->  00:09:58.350
Get the machine learning basics that contains
231

231

00:09:58.350  -->  00:10:00.230
two templates, so the classification
232

232

00:10:00.230  -->  00:10:02.400
template that we'll use to create the first
233

233

00:10:02.400  -->  00:10:04.590
deep learning model, artificial neural network.
234

234

00:10:04.590  -->  00:10:06.838
And the data preprocessing template, that is a
235

235

00:10:06.838  -->  00:10:09.978
very useful template to pre process any data set.
236

236

00:10:09.978  -->  00:10:12.020
So for those of you who did not take the
237

237

00:10:12.020  -->  00:10:14.110
machine learning course, well in the last section of
238

238

00:10:14.110  -->  00:10:16.070
this course, you will find the 'get the machine
239

239

00:10:16.070  -->  00:10:18.040
learning basics' section and you will find
240

240

00:10:18.040  -->  00:10:20.130
all the tutorials that explains how we make
241

241

00:10:20.130  -->  00:10:21.960
these two templates, the classification
242

242

00:10:21.960  -->  00:10:24.580
template and the data pre processing template.
243

243

00:10:24.580  -->  00:10:26.760
Alright, so that's the first folder and then we
244

244

00:10:26.760  -->  00:10:28.840
have our two main folders corresponding to
245

245

00:10:28.840  -->  00:10:30.383
the two volumes of this course.
246

246

00:10:30.383  -->  00:10:32.484
'Volume 1 - Supervised deep learning' and
247

247

00:10:32.484  -->  00:10:34.847
'Volume 2 - Unsupervised deep learning'.
248

248

00:10:34.847  -->  00:10:37.181
Okay so of course to find the right folder we
249

249

00:10:37.181  -->  00:10:39.510
wanna set as working directory, we need to go
250

250

00:10:39.510  -->  00:10:41.940
to Volume 1 because that's where we are.
251

251

00:10:41.940  -->  00:10:44.610
So, 'Volume 1 - Supervised deep learning' and we
252

252

00:10:44.610  -->  00:10:48.253
are now in 'Part 1 - Artificial Neural Network'.
253

253

00:10:48.253  -->  00:10:50.860
Okay and just in the previous section you
254

254

00:10:50.860  -->  00:10:53.350
were with Curial for the ANN intuition
255

255

00:10:53.350  -->  00:10:55.971
and now you are in section 4 building an ANN,
256

256

00:10:55.971  -->  00:10:58.230
this folder is exactly the folder you
257

257

00:10:58.230  -->  00:11:00.310
wanna set as working directory.
258

258

00:11:00.310  -->  00:11:01.734
And why's that? It's for a specific
259

259

00:11:01.734  -->  00:11:03.661
reason, it's because it contains the data
260

260

00:11:03.661  -->  00:11:05.921
set, churn modeling, which is the
261

261

00:11:05.921  -->  00:11:08.190
data set of our business problem.
262

262

00:11:08.190  -->  00:11:10.860
And then, this folder contains other files so you
263

263

00:11:10.860  -->  00:11:13.700
have, the 'ann.py' file which is the Python
264

264

00:11:13.700  -->  00:11:15.520
file that we're about to make.
265

265

00:11:15.520  -->  00:11:17.680
By the way, make sure to create this new
266

266

00:11:17.680  -->  00:11:20.200
Python file and save it in this sub-folder
267

267

00:11:20.200  -->  00:11:22.020
because you need to save your Python file
268

268

00:11:22.020  -->  00:11:24.280
in the working directory folder, that is the
269

269

00:11:24.280  -->  00:11:26.420
folder that contains your data set.
270

270

00:11:26.420  -->  00:11:28.420
Okay, and then you have the classification
271

271

00:11:28.420  -->  00:11:30.819
template, Python file, that was taken from
272

272

00:11:30.819  -->  00:11:33.360
the classification template folder in the
273

273

00:11:33.360  -->  00:11:35.380
section 'Get the Machine Learning basics'
274

274

00:11:35.380  -->  00:11:37.321
because we will need this classification
275

275

00:11:37.321  -->  00:11:39.074
template to prepare efficiently our
276

276

00:11:39.074  -->  00:11:41.502
artificial neural network. So, classification
277

277

00:11:41.502  -->  00:11:43.780
template and then you also have this
278

278

00:11:43.780  -->  00:11:46.130
category called 'Data Template' which we will
279

279

00:11:46.130  -->  00:11:48.143
use to deal with a category called 'Variables'
280

280

00:11:48.143  -->  00:11:50.920
that we will find in our data set, churn modeling.
281

281

00:11:50.920  -->  00:11:52.460
You will see that this data set contains
282

282

00:11:52.460  -->  00:11:54.340
some category called 'Variables' and we will
283

283

00:11:54.340  -->  00:11:56.480
need to encode them in a special way and
284

284

00:11:56.480  -->  00:11:58.105
so we will use this category called 'Data
285

285

00:11:58.105  -->  00:12:00.548
Python' file to do it more efficiently.
286

286

00:12:00.548  -->  00:12:02.171
And then as promised, you have the
287

287

00:12:02.171  -->  00:12:04.703
installations instructions pdf, that
288

288

00:12:04.703  -->  00:12:07.070
contains more instructions on how to
289

289

00:12:07.070  -->  00:12:09.897
install Theano, Tensoflow and Keras in case
290

290

00:12:09.897  -->  00:12:12.760
the installation we just did didn't work for you.
291

291

00:12:12.760  -->  00:12:15.070
Alright, so that's the folder you wanna set as
292

292

00:12:15.070  -->  00:12:16.933
working directory and so to set it as working
293

293

00:12:16.933  -->  00:12:19.480
directory you simply need to click on this 'tool'
294

294

00:12:19.480  -->  00:12:22.059
button here and click on 'Set console working
295

295

00:12:22.059  -->  00:12:26.290
directory'. Here we go, and now, you have the right
296

296

00:12:26.290  -->  00:12:29.130
folder set as working directory and you're ready
297

297

00:12:29.130  -->  00:12:32.520
to start making your first deep learning model.
298

298

00:12:32.520  -->  00:12:34.840
So congratulations! We have some very exciting
299

299

00:12:34.840  -->  00:12:37.437
tutorials ahead of us and I can't wait to start.
300

300

00:12:37.437  -->  00:12:39.883
Until then, enjoy deep learning!
