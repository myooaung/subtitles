1
00:00:09,872 --> 00:00:11,690
We did a little bit of hacking on Express.

2
00:00:11,690 --> 00:00:16,148
Now we're going to move into a part of the stack that we've already been using,

3
00:00:16,148 --> 00:00:20,481
but we're going to try to dive in a little bit to understand better

4
00:00:20,481 --> 00:00:23,813
how these things work and what they can do for us.

5
00:00:23,813 --> 00:00:26,721
We've been executing these commands, these migration commands,

6
00:00:26,721 --> 00:00:27,902
these Grunt commands,

7
00:00:27,902 --> 00:00:31,953
and these are provided by some of the build tooling

8
00:00:31,953 --> 00:00:34,998
that we have in this project.

9
00:00:34,998 --> 00:00:40,279
Now build tooling, there's a lot of different choices out there,

10
00:00:40,279 --> 00:00:47,282
but the two that I keep coming back to are npm scripts and Grunt,

11
00:00:47,282 --> 00:00:49,897
and Grunt tasks in general.

12
00:00:49,897 --> 00:00:52,011
And I'll kind of take you through what each of these things do.

13
00:00:52,011 --> 00:00:57,167
So, npm scripts are commands that you register in the package.

14
00:00:57,167 --> 00:01:04,413
json of your Node project and can execute arbitrary shell commands.

15
00:01:04,413 --> 00:01:04,842
So,

16
00:01:04,842 --> 00:01:08,699
it's essentially like adding aliases for commands that you

17
00:01:08,699 --> 00:01:11,853
could run from the command line yourself.

18
00:01:11,853 --> 00:01:12,307
However,

19
00:01:12,307 --> 00:01:17,755
there's a couple things that you get for free when

20
00:01:17,755 --> 00:01:21,991
you do an npm script like this.

21
00:01:21,991 --> 00:01:25,964
Probably the most notable one is that if you have npm installed locally,

22
00:01:25,964 --> 00:01:30,970
any modules which should be command line utilities that

23
00:01:30,970 --> 00:01:33,963
have some kind of command line option,

24
00:01:33,963 --> 00:01:38,274
those utilities will be added to your system path when

25
00:01:38,274 --> 00:01:42,022
you run a script through an npm script.

26
00:01:42,022 --> 00:01:46,153
And we'll see what we mean by that here in a moment.

27
00:01:46,153 --> 00:01:51,130
It's also a conventional way of interacting with Node projects.

28
00:01:51,130 --> 00:01:56,187
So the npm defines a set of, I don't know,

29
00:01:56,187 --> 00:02:00,549
about 15 different scripts that it sort of expects to

30
00:02:00,549 --> 00:02:02,887
possibly be present in a package.

31
00:02:02,887 --> 00:02:03,277
json.

32
00:02:03,277 --> 00:02:09,737
There's a npm start, a npm test, a npm after install.

33
00:02:09,737 --> 00:02:15,806
There's a few like lifecycle hooks and other bits that npm will sort of

34
00:02:15,806 --> 00:02:19,581
conventionally expect to possibly be present in a package.

35
00:02:19,581 --> 00:02:20,000
json.

36
00:02:20,000 --> 00:02:21,691
So by conforming to that convention,

37
00:02:21,691 --> 00:02:25,261
another Node developer who may or may not have ever seen your

38
00:02:25,261 --> 00:02:28,458
project before knows well if I execute npm start,

39
00:02:28,458 --> 00:02:31,980
like probably something is suppose to happen.

40
00:02:31,980 --> 00:02:36,509
And in fact, lots of Platform as a Service providers including Elastic Beanstalk,

41
00:02:36,509 --> 00:02:42,529
which is the bit that we'll be using later on this afternoon,

42
00:02:42,529 --> 00:02:49,238
will look for that npm start script as the primary way to kick off your Node.

43
00:02:49,238 --> 00:02:51,257
js web application process.

44
00:02:51,257 --> 00:02:56,585
So having these npm scripts is usually a good idea anyway.

45
00:02:56,585 --> 00:03:01,982
And then the other one that I use is Grunt.

46
00:03:01,982 --> 00:03:05,102
And I'm already seeing some questions in the chat

47
00:03:05,102 --> 00:03:11,931
about Grunt over gulp or whatever, and we'll talk about some of the conventions.

48
00:03:11,931 --> 00:03:15,200
It largely does come down to preference.

49
00:03:15,200 --> 00:03:20,198
Gulp, in some scenarios, you know, performs really well, so that's really great.

50
00:03:20,198 --> 00:03:21,658
Webpack you can actually use with Grunt,

51
00:03:21,658 --> 00:03:25,121
and it's really good at doing like a subset of frontendy stuff.

52
00:03:25,121 --> 00:03:27,790
So there's lots of different choices out there,

53
00:03:27,790 --> 00:03:32,202
but the reason why I kind of stick with Grunt is the mature plugin ecosystem.

54
00:03:32,202 --> 00:03:39,263
There's a ton of plugins out there that do 99% of the things that I want to do,

55
00:03:39,263 --> 00:03:42,605
and it's better than other solutions out there,

56
00:03:42,605 --> 00:03:45,404
I think, at like synchronously orchestrating tasks.

57
00:03:45,404 --> 00:03:47,608
So if you want to do this, then this,

58
00:03:47,608 --> 00:03:52,210
then this or do a couple things concurrently and then another thing,

59
00:03:52,210 --> 00:03:54,520
Grunt makes that easiest.

60
00:03:54,520 --> 00:03:57,770
And there are other tools out there all that stuff is still totally possible,

61
00:03:57,770 --> 00:04:02,096
but the code becomes, for at least for my simple brain,

62
00:04:02,096 --> 00:04:04,926
possibly a little bit more confusing.

63
00:04:04,926 --> 00:04:10,382
And it's, you know, --- there are lots of people out there,

64
00:04:10,382 --> 00:04:11,258
in fact,

65
00:04:11,258 --> 00:04:16,717
like the Lloyd who lives here in town in the Twin

66
00:04:16,717 --> 00:04:21,248
Cities does Node DevOps for Walmart, and he,

67
00:04:21,248 --> 00:04:26,247
for most of their orchestration stuff, his like method,

68
00:04:26,247 --> 00:04:29,168
his weapon of choice is like Bash scripts.

69
00:04:29,168 --> 00:04:32,445
Like they just have like a ton of like really Bash scripts,

70
00:04:32,445 --> 00:04:37,118
which like run all of their deployments and do all that stuff.

71
00:04:37,118 --> 00:04:40,882
So ultimately it comes down to preference,

72
00:04:40,882 --> 00:04:43,637
but the thing that I think Grunt helps with over like just

73
00:04:43,637 --> 00:04:49,000
pure Bash scripts and npm scripts is orchestrating and like building tasks that work together.

