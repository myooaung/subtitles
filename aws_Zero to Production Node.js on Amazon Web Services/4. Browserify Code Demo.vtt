WEBVTT
1
00:00:03.500 --> 00:00:03.942
Alright,

2
00:00:03.942 --> 00:00:09.835
so at this point I'll just poke out a couple bits to show

3
00:00:09.835 --> 00:00:12.613
you some features of these platforms.

4
00:00:12.613 --> 00:00:13.360
So,

5
00:00:13.360 --> 00:00:21.810
I'll go into the todomvc repository and just write some changes that

6
00:00:21.810 --> 00:00:24.854
I'm going to immediately throw away just to demonstrate some of the

7
00:00:24.854 --> 00:00:27.942
features that you can bring to bear.

8
00:00:27.942 --> 00:00:29.265
So for Browserify,

9
00:00:29.265 --> 00:00:34.526
I mentioned there's a lot of different transforms that you can use.

10
00:00:34.526 --> 00:00:39.487
And in fact, if you Google Browserify transforms,

11
00:00:39.487 --> 00:00:44.848
even if you misspell it, you're probably going to get it,

12
00:00:44.848 --> 00:00:49.768
you'll see this list of at least a few popular transformations.

13
00:00:49.768 --> 00:00:53.847
So we'll just kind of pick one out.

14
00:00:53.847 --> 00:00:58.162
I thought I was going to do --- there's a markdown one,

15
00:00:58.162 --> 00:01:00.017
which is kind of neat,

16
00:01:00.017 --> 00:01:04.283
which allows you to essentially require a markdown file as a

17
00:01:04.283 --> 00:01:07.619
string in your JavaScript application.

18
00:01:07.619 --> 00:01:08.286
So,

19
00:01:08.286 --> 00:01:12.890
just temporarily I'm going to install this without saving

20
00:01:12.890 --> 00:01:15.598
it because I'm not including the --save.

21
00:01:15.598 --> 00:01:16.762
I'm going to install the module locally,

22
00:01:16.762 --> 00:01:18.985
but it's not going to be added to my package.

23
00:01:18.985 --> 00:01:24.640
json, so none of you will get it if you were to clone the repository right away.

24
00:01:24.640 --> 00:01:36.250
And this is going to add a new transformation capability to our Browserify code.

25
00:01:36.250 --> 00:01:43.705
And you'll notice that the configuration isn't terribly well documented here,

26
00:01:43.705 --> 00:01:49.997
but if I go into, as James pointed out, my Gruntfile,

27
00:01:49.997 --> 00:01:53.971
I can see --- these are my Browserify options where

28
00:01:53.971 --> 00:01:56.298
I can pass in different bits,

29
00:01:56.298 --> 00:02:00.353
like whether or not I want to generate a source map,

30
00:02:00.353 --> 00:02:05.559
and then I specify a src file or multiple src files

31
00:02:05.559 --> 00:02:08.532
and a dest file for my bundle.

32
00:02:08.532 --> 00:02:13.943
This is kind of the core arguments you would pass in if you are

33
00:02:13.943 --> 00:02:17.331
executing Browserify like from the command line.

34
00:02:17.331 --> 00:02:24.448
But where the transformations are declared is here in the package.

35
00:02:24.448 --> 00:02:25.095
json.

36
00:02:25.095 --> 00:02:31.636
So here in the transform section I specify browserify-shim as one of them,

37
00:02:31.636 --> 00:02:33.566
I also specify babelify,

38
00:02:33.566 --> 00:02:44.533
and now I'm also going to drop in browserify-markdown as one of the transforms.

39
00:02:44.533 --> 00:02:49.793
So, if I fire up my --- What does browserify-markdown do?

40
00:02:49.793 --> 00:02:55.280
It allows you in your JavaScript code to require a markdown file and have

41
00:02:55.280 --> 00:02:58.494
that available in your JavaScript code as a string.

42
00:02:58.494 --> 00:03:01.766
Not terribly useful, not all the time,

43
00:03:01.766 --> 00:03:08.961
but just to kind of show you a feature that you can add to your transformation,

44
00:03:08.961 --> 00:03:13.199
I figured we would take a look at this one.

45
00:03:13.199 --> 00:03:17.381
So now I have this transformation added to my configuration.

46
00:03:17.381 --> 00:03:22.377
In my browser code, let's go into app.

47
00:03:22.377 --> 00:03:23.626
js say,

48
00:03:23.626 --> 00:03:28.996
and the feature that this transformation allows me to do is

49
00:03:28.996 --> 00:03:31.469
rather then just requiring JavaScript files,

50
00:03:31.469 --> 00:03:37.008
I can require markdown files, which will be converted to a string.

51
00:03:37.008 --> 00:03:42.537
It'll actually also be parsed into HTML if memory serves.

52
00:03:42.537 --> 00:03:43.212
So,

53
00:03:43.212 --> 00:03:52.191
just for demonstration purposes I'm going to require the readme for the project,

54
00:03:52.191 --> 00:03:58.131
and that's going to be up one directory.

55
00:03:58.131 --> 00:04:01.571
See if I can get the resolve right.

56
00:04:01.571 --> 00:04:08.567
So in src, I think it's one more, and then README.

57
00:04:08.567 --> 00:04:09.752
md.

58
00:04:09.752 --> 00:04:20.882
And when the application initializes, I'm just going to go ahead and console.

59
00:04:20.882 --> 00:04:25.435
log the contents of the readme file.

60
00:04:25.435 --> 00:04:34.146
So I'll start up my server, todomvc app.

61
00:04:34.146 --> 00:04:37.413
jsmust be object.

62
00:04:37.413 --> 00:04:43.266
Let's see, what did I mess up?

63
00:04:43.266 --> 00:04:44.102
Js/app.

64
00:04:44.102 --> 00:04:47.446
js must be object.

65
00:04:47.446 --> 00:05:10.813
(Working) Okie-dokie,

66
00:05:10.813 --> 00:05:16.432
so my markdown transform doesn't seem to be working

67
00:05:16.432 --> 00:05:19.808
because it's blowing up on this line.

68
00:05:19.808 --> 00:05:24.148
It could be that I didn't do this correctly.

69
00:05:24.148 --> 00:05:32.798
So up one directory would be browser, and then up another directory would be src,

70
00:05:32.798 --> 00:05:35.303
and then up.

71
00:05:35.303 --> 00:05:41.146
Yeah, no, that is the proper path.

72
00:05:41.146 --> 00:05:42.831
Well this is less impressive than I had hoped.

73
00:05:42.831 --> 00:05:52.582
(Working) Alright, I'll keep trucking for now,

74
00:05:52.582 --> 00:05:56.508
but the way that typically you would do this,

75
00:05:56.508 --> 00:06:01.752
like running it through Grunt you don't get the full output of Browserify,

76
00:06:01.752 --> 00:06:06.377
so you could run the Browserify command line utility to get a more

77
00:06:06.377 --> 00:06:09.087
detailed stack trace of why this isn't going,

78
00:06:09.087 --> 00:06:14.370
but I won't waste your time with that right now.

79
00:06:14.370 --> 00:06:18.584
So, I'll go ahead and take this out.

80
00:06:18.584 --> 00:06:24.233
But the idea there is that these additional transforms essentially give

81
00:06:24.233 --> 00:06:27.810
your code new capabilities that it didn't have before.

82
00:06:27.810 --> 00:06:31.427
So I'll get that running hopefully while you guys are at the break

83
00:06:31.427 --> 00:06:37.000
or while you guys are working on the exercises, figure out what went wrong there.

