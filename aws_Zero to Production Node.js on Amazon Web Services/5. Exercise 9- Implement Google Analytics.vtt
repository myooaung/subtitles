WEBVTT
1
00:00:03.756 --> 00:00:06.913
Your challenge, should you choose to accept it,

2
00:00:06.913 --> 00:00:13.672
is to implement Google Analytics on our current TodoMVC site.

3
00:00:13.672 --> 00:00:19.629
And there's two basic pieces that we can look at implementing.

4
00:00:19.629 --> 00:00:24.721
And the one that you should do first is start tracking page views.

5
00:00:24.721 --> 00:00:30.508
So, initially when the page is loaded, like for the root URL,

6
00:00:30.508 --> 00:00:34.894
we should track a page view for the root URL.

7
00:00:34.894 --> 00:00:39.049
And then, there's actually a router within the application,

8
00:00:39.049 --> 00:00:44.968
if I go back here, like say if I filter for active events,

9
00:00:44.968 --> 00:00:47.213
or active todos, or all,

10
00:00:47.213 --> 00:00:51.635
these are actually different routes that are just happening client-side.

11
00:00:51.635 --> 00:00:54.466
And if you're doing a rich JavaScript application,

12
00:00:54.466 --> 00:01:00.122
you'll want to track these different routes as page view events as well.

13
00:01:00.122 --> 00:01:00.481
So,

14
00:01:00.481 --> 00:01:04.428
what we'll want to do is have page view events fire

15
00:01:04.428 --> 00:01:06.631
for all of these different routes,

16
00:01:06.631 --> 00:01:09.753
and even though they're just happening in JavaScript,

17
00:01:09.753 --> 00:01:14.175
we'll track them as page views just the same.

18
00:01:14.175 --> 00:01:22.372
The signing up for Google Analytics is very easy and it is free.

19
00:01:22.372 --> 00:01:26.170
And you'll be given a tracking code that you can

20
00:01:26.170 --> 00:01:42.239
use with this handy dandy module, which is universal analytics.

21
00:01:42.239 --> 00:01:44.563
Where is that at?

22
00:01:44.563 --> 00:01:48.630
Maybe I'll just go to npm directly.

23
00:01:48.630 --> 00:01:55.591
It's just called universal-analytics, I believe.

24
00:01:55.591 --> 00:01:58.936
And after you sign up, you'll be able to install this module,

25
00:01:58.936 --> 00:02:04.142
require it in your code, and then on initialization,

26
00:02:04.142 --> 00:02:08.928
pass in your Google Analytics account ID.

27
00:02:08.928 --> 00:02:16.521
So once you have that, you can use like some kind of unique user identifier.

28
00:02:16.521 --> 00:02:20.077
You won't want to actually pass in any personally identifying information,

29
00:02:20.077 --> 00:02:23.702
but if you have a UUID for a given user,

30
00:02:23.702 --> 00:02:25.152
you can use that.

31
00:02:25.152 --> 00:02:30.597
Otherwise, you can just initialize it with this tracking code.

32
00:02:30.597 --> 00:02:31.586
Once you have that,

33
00:02:31.586 --> 00:02:34.513
there is a bit of a delay before page view data

34
00:02:34.513 --> 00:02:37.246
starts showing up in Google Analytics.

35
00:02:37.246 --> 00:02:42.686
But you can also start adding some logic to track specific

36
00:02:42.686 --> 00:02:45.371
page views from within your application.

37
00:02:45.371 --> 00:02:49.829
And, the second task, if you get through this piece,

38
00:02:49.829 --> 00:02:52.311
will be tracking custom events.

39
00:02:52.311 --> 00:02:57.099
So, for a visitor, you can fire a custom event with a given category,

40
00:02:57.099 --> 00:03:00.733
and a given action, or with a label.

41
00:03:00.733 --> 00:03:03.912
And then there's also this optional value.

42
00:03:03.912 --> 00:03:07.635
And if there are events in your application that are higher value than others,

43
00:03:07.635 --> 00:03:12.553
you can kind of configure those weights within your event tracking as well.

44
00:03:12.553 --> 00:03:15.262
I actually don't use that piece of functionality right now,

45
00:03:15.262 --> 00:03:18.124
so I wouldn't be able to tell you very much about it,

46
00:03:18.124 --> 00:03:20.610
but that is a possibility.

47
00:03:20.610 --> 00:03:26.730
So the last code challenge of the day is going to be implementing

48
00:03:26.730 --> 00:03:29.956
Google Analytics' page view tracking in our application,

49
00:03:29.956 --> 00:03:35.174
but with the caveat that we only want to do it in the production environment.

50
00:03:35.174 --> 00:03:40.819
For testing, you could implement it for the development environment as well,

51
00:03:40.819 --> 00:03:46.276
but you'll want to have a way to only enable Google Analytics

52
00:03:46.276 --> 00:03:52.000
in your production environment so you're not firing off events and page views during development.

