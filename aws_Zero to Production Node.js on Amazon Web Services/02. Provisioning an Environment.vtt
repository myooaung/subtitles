WEBVTT
1
00:00:03.855 --> 00:00:08.923
Provisioning an environment is, is again kind of a journey,

2
00:00:08.923 --> 00:00:10.832
so we're going to do that together,

3
00:00:10.832 --> 00:00:13.536
and we'll do it kind of manually so we can see the

4
00:00:13.536 --> 00:00:15.993
different pieces and how they fit together.

5
00:00:15.993 --> 00:00:17.998
But at a high level,

6
00:00:17.998 --> 00:00:24.040
you're first going to decide which AWS region you're going to run your code in.

7
00:00:24.040 --> 00:00:27.527
It's usually best to be geographically close to where your users are,

8
00:00:27.527 --> 00:00:30.820
and there's ways to run your application in multiple regions,

9
00:00:30.820 --> 00:00:33.171
which we're not going to get into.

10
00:00:33.171 --> 00:00:34.851
But we'll select a region,

11
00:00:34.851 --> 00:00:39.119
whether it's US East Virginia or US West to Oregon or whatever,

12
00:00:39.119 --> 00:00:41.113
it doesn't really matter,

13
00:00:41.113 --> 00:00:48.295
and then we will then create a user with permissions to allow us to

14
00:00:48.295 --> 00:00:53.877
essentially create the Amazon EC2 environment that we need and allow us to

15
00:00:53.877 --> 00:00:58.397
deploy new versions of our application and things like that.

16
00:00:58.397 --> 00:01:01.656
So we'll create an AWS user,

17
00:01:01.656 --> 00:01:07.073
and that user will be assigned credentials that we will use to configure

18
00:01:07.073 --> 00:01:12.996
a command line client to access Amazon on our behalf,

19
00:01:12.996 --> 00:01:17.921
which is part of the exercise that we'll be doing shortly.

20
00:01:17.921 --> 00:01:22.467
Next, we're going to be creating an Elastic Beanstalk environment,

21
00:01:22.467 --> 00:01:29.274
and environment is basically a fully functional version of your --- like a fully

22
00:01:29.274 --> 00:01:32.331
functional like execution environment for your application.

23
00:01:32.331 --> 00:01:34.797
So typically you'll have multiple environments.

24
00:01:34.797 --> 00:01:38.255
You might have like a development, a staging,

25
00:01:38.255 --> 00:01:39.984
and a production environment,

26
00:01:39.984 --> 00:01:42.119
and those environments might be configured slightly differently.

27
00:01:42.119 --> 00:01:46.105
They might use different sized EC2 instances,

28
00:01:46.105 --> 00:01:50.666
use different sizes or configurations of RDS,

29
00:01:50.666 --> 00:01:53.711
that sort of thing.

30
00:01:53.711 --> 00:01:55.363
So we'll create an environment, in this case,

31
00:01:55.363 --> 00:01:57.784
we'll just create one environment to start with,

32
00:01:57.784 --> 00:02:01.770
and then that will be added to a security group.

33
00:02:01.770 --> 00:02:06.188
And a security group is a construct within Amazon that

34
00:02:06.188 --> 00:02:10.297
defines like which resources within your Amazon account

35
00:02:10.297 --> 00:02:12.985
can communicate with one another.

36
00:02:12.985 --> 00:02:16.947
So, our RDS instance and our Elastic Beanstalk instances,

37
00:02:16.947 --> 00:02:22.927
like the EC2 instances managed there, will be part of the same security group,

38
00:02:22.927 --> 00:02:25.901
which means that our instances can connect to our

39
00:02:25.901 --> 00:02:27.987
RDS instance that we'll create,

40
00:02:27.987 --> 00:02:34.010
but the outside world can't directly connect to the RDS instance.

41
00:02:34.010 --> 00:02:37.415
So we'll create both an EB environment and an RDS instance,

42
00:02:37.415 --> 00:02:39.454
add them to the same security group,

43
00:02:39.454 --> 00:02:43.256
and then we have to configure that security group to

44
00:02:43.256 --> 00:02:45.824
allow incoming connections to Postgres.

45
00:02:45.824 --> 00:02:49.557
And then we need to deploy our application,

46
00:02:49.557 --> 00:02:53.488
an application version, and then potentially we profit.

47
00:02:53.488 --> 00:02:59.769
So it's a long journey, and there's a lot of things that you can screw up,

48
00:02:59.769 --> 00:03:04.765
which is why I've been super, super nervous about this component of the workshop,

49
00:03:04.765 --> 00:03:10.154
but I have done it three or four times over the course of the week,

50
00:03:10.154 --> 00:03:16.000
so I'm like 94% sure this is going to work. So let's do this thing.

