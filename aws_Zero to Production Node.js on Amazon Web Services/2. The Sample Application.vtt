WEBVTT
1
00:00:04.423 --> 00:00:06.248
But again, the goal is to get a 10,

2
00:00:06.248 --> 00:00:10.121
000 foot view of what a production Node code base could look like

3
00:00:10.121 --> 00:00:13.584
and some of the tools that you're going to need.

4
00:00:13.584 --> 00:00:15.741
So, in order to do that,

5
00:00:15.741 --> 00:00:20.994
I did put together a sample application that is based on a sample

6
00:00:20.994 --> 00:00:24.066
application that you've seen probably 100 times before,

7
00:00:24.066 --> 00:00:25.204
which is TodoMVC.

8
00:00:25.204 --> 00:00:28.029
I called it TodoMVC++.

9
00:00:28.029 --> 00:00:32.267
Thank you, I'll show myself out.

10
00:00:32.267 --> 00:00:36.421
But what the application does is not the important bit.

11
00:00:36.421 --> 00:00:36.681
Basically,

12
00:00:36.681 --> 00:00:40.068
what this thing is going to do is present a rich front end

13
00:00:40.068 --> 00:00:43.272
that shows a todo list that you can edit.

14
00:00:43.272 --> 00:00:46.827
Most of the time this TodoMVC application just lives on the client

15
00:00:46.827 --> 00:00:50.184
side and then persists stuff to local storage.

16
00:00:50.184 --> 00:00:55.140
We've extended it to actually store those todo list items in a database,

17
00:00:55.140 --> 00:01:01.318
which is driven by an Express-based API layer.

18
00:01:01.318 --> 00:01:07.527
So, the what of the application is not as important as the how,

19
00:01:07.527 --> 00:01:10.227
so that's we're going to be focusing most of our time on.

20
00:01:10.227 --> 00:01:10.429
So,

21
00:01:10.429 --> 00:01:12.654
that's why I went with a sample application that we already

22
00:01:12.654 --> 00:01:17.250
understand so that we can focus the layout of the project and how we

23
00:01:17.250 --> 00:01:19.787
go about our business of building the project.

24
00:01:19.787 --> 00:01:22.350
We will dive into a few specific details,

25
00:01:22.350 --> 00:01:24.877
especially tomorrow when we talk about Vue.

26
00:01:24.877 --> 00:01:26.538
js and how Vue.

27
00:01:26.538 --> 00:01:28.960
js handles rich front-end development tasks,

28
00:01:28.960 --> 00:01:33.811
things like that, but we probably won't go too deep into any one tool.

29
00:01:33.811 --> 00:01:37.137
Again, the focus is on that 10, 000 foot view.

30
00:01:37.137 --> 00:01:39.715
Mirror the techniques that you might really use in your Node.

31
00:01:39.715 --> 00:01:40.184
js application.

32
00:01:40.184 --> 00:01:44.887
I'm sure you'll riff on what we put forward.

33
00:01:44.887 --> 00:01:49.277
It also doesn't do everything that you might do in production.

34
00:01:49.277 --> 00:01:52.408
Just at some point you have to draw the line in a

35
00:01:52.408 --> 00:01:53.498
learning experience like this one,

36
00:01:53.498 --> 00:01:55.580
so there's stuff that you're going to want to do in

37
00:01:55.580 --> 00:01:57.715
production that you won't see in here.

38
00:01:57.715 --> 00:02:02.459
So we're not going to do the DNS configuration to route a

39
00:02:02.459 --> 00:02:06.112
domain to our elastic low balancer instance.

40
00:02:06.112 --> 00:02:10.922
We don't implement cache-busting file names based on the

41
00:02:10.922 --> 00:02:13.600
hashes of CSS and JavaScript content.

42
00:02:13.600 --> 00:02:16.748
So there's definitely areas in which we can go

43
00:02:16.748 --> 00:02:18.441
further in our road to production,

44
00:02:18.441 --> 00:02:22.287
but this is kind of a baseline that you can use to

45
00:02:22.287 --> 00:02:24.906
build out those other things as well.

46
00:02:24.906 --> 00:02:28.213
It's going to do most of the big things the way that you're

47
00:02:28.213 --> 00:02:30.291
probably going to want to approach it.

48
00:02:30.291 --> 00:02:33.426
The code is structured using the Google JavaScript Style Guide.

49
00:02:33.426 --> 00:02:37.233
I don't know if it's the best one, but it's the one I use,

50
00:02:37.233 --> 00:02:40.846
and as long as you have a style guide, I feel like that's pretty good.

51
00:02:40.846 --> 00:02:44.701
And it also combines a set of technologies that I use

52
00:02:44.701 --> 00:02:47.905
personally and have used for a long time.

53
00:02:47.905 --> 00:02:51.344
And again, there might be some that you prefer over another.

54
00:02:51.344 --> 00:02:53.839
Maybe you think hapi is better than Express,

55
00:02:53.839 --> 00:02:55.086
and maybe that's true,

56
00:02:55.086 --> 00:03:03.000
but there's --- this is a set of technologies that work together pretty well, and I invite you to riff on that as we go through.

