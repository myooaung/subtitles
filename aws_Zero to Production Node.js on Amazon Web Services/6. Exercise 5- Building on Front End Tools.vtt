WEBVTT
1
00:00:03.995 --> 00:00:05.937
So we talked a little bit about some of the alternatives.

2
00:00:05.937 --> 00:00:07.069
So at this point,

3
00:00:07.069 --> 00:00:13.325
we're going to take a little bit of time to knock out a few more issues in

4
00:00:13.325 --> 00:00:17.516
our GitHub repository related to Broswerify and Sass.

5
00:00:17.516 --> 00:00:19.575
And these ones are fairly simple,

6
00:00:19.575 --> 00:00:23.284
should be a nice warmup for the rest of the day.

7
00:00:23.284 --> 00:00:26.496
So let's head out to GitHub and see which tasks

8
00:00:26.496 --> 00:00:29.472
have been flagged with exercise5.

9
00:00:29.472 --> 00:00:35.696
So, we have a couple of bits here.

10
00:00:35.696 --> 00:00:43.460
The Browserify-related task is to add ES2016 presets to our Babel configuration

11
00:00:43.460 --> 00:00:49.133
in addition the ES2015 presets that we're currently using.

12
00:00:49.133 --> 00:00:51.783
So our front-end JavaScript, clearly not progressive enough.

13
00:00:51.783 --> 00:00:57.074
Need to add in some additional next generation ECMAScript features.

14
00:00:57.074 --> 00:00:57.704
So,

15
00:00:57.704 --> 00:01:04.005
we are going to be changing our transformation configuration to

16
00:01:04.005 --> 00:01:09.800
allow us to include those ES2016 features as well.

17
00:01:09.800 --> 00:01:14.007
So that is one task to add to the configuration.

18
00:01:14.007 --> 00:01:21.930
The other is to update the styles for our todos page.

19
00:01:21.930 --> 00:01:26.082
And the thing that you're going to want to accomplish here is to ensure that

20
00:01:26.082 --> 00:01:31.386
the links in the footer --- so down here it's going to,

21
00:01:31.386 --> 00:01:33.328
I'm going to have to scroll way down.

22
00:01:33.328 --> 00:01:37.231
So these links in the footer right now are not colored

23
00:01:37.231 --> 00:01:40.788
significantly differently than the rest of the text,

24
00:01:40.788 --> 00:01:45.728
so what we'd like to do is make those links in the footer the same

25
00:01:45.728 --> 00:01:50.686
color as this header up at the top of the page.

26
00:01:50.686 --> 00:01:52.777
And I don't know about you, but that's really hard for me to read,

27
00:01:52.777 --> 00:02:00.197
so I think messing with the opacity or the color of that h1,

28
00:02:00.197 --> 00:02:02.878
deciding on one that's a little bit easier to read,

29
00:02:02.878 --> 00:02:05.641
and then essentially ensuring that the color is stored in a

30
00:02:05.641 --> 00:02:10.470
variable that we can use both in the header and in the links

31
00:02:10.470 --> 00:02:12.759
way down here at the footer.

32
00:02:12.759 --> 00:02:17.331
So it'll require to use at least that one feature of Sass.

33
00:02:17.331 --> 00:02:20.013
So I feel like it's something we can knock out in a

34
00:02:20.013 --> 00:02:21.295
relatively short period of time,

35
00:02:21.295 --> 00:02:24.080
so I'll think we'll take about 20 minutes and then

36
00:02:24.080 --> 00:02:25.905
come back as a group to knock it out.

37
00:02:25.905 --> 00:02:26.310
Yes, Mark.

38
00:02:26.310 --> 00:02:34.253
There's a question about is there a reload module that you recommend?

39
00:02:34.253 --> 00:02:43.072
There is LiveReload, is a popular one that you can use with Grunt.

40
00:02:43.072 --> 00:02:44.278
I don't use one.

41
00:02:44.278 --> 00:02:47.293
Like I work on a project that does use one,

42
00:02:47.293 --> 00:02:48.978
and it like,

43
00:02:48.978 --> 00:02:55.765
it just constantly pisses me off because reloading the page I'm on like every

44
00:02:55.765 --> 00:02:59.920
time I save a file just isn't the behavior I want usually.

45
00:02:59.920 --> 00:03:03.720
So I don't use one, but LiveReload is a popular one.

46
00:03:03.720 --> 00:03:08.569
So LiveReload would reload the entire page.

47
00:03:08.569 --> 00:03:12.285
I think hot reloading is reloading an individual module.

48
00:03:12.285 --> 00:03:16.057
Oh right, yeah.

49
00:03:16.057 --> 00:03:22.496
_____ which is typically people who use like hot reloading with webpacking,

50
00:03:22.496 --> 00:03:24.325
React, right?

51
00:03:24.325 --> 00:03:27.851
Yeah, I think that's a feature of those tools,

52
00:03:27.851 --> 00:03:31.200
so I don't have one that I recommend because I don't --- Yeah,

53
00:03:31.200 --> 00:03:37.128
I know that there's Hot Module Reloading upfront really that I know of.

54
00:03:37.128 --> 00:03:42.305
Yeah, I'm not familiar with that specifically.

55
00:03:42.305 --> 00:03:44.934
Yeah, I know that React tooling does that.

56
00:03:44.934 --> 00:03:47.738
It's especially to a great effect like if you're using React native,

57
00:03:47.738 --> 00:03:50.511
like it'll reload the code in the simulator,

58
00:03:50.511 --> 00:03:52.938
but there isn't one that I use.

59
00:03:52.938 --> 00:04:00.295
So, my answer is derp there, I guess.

60
00:04:00.295 --> 00:04:01.214
Alright,

61
00:04:01.214 --> 00:04:11.820
so let's go ahead and try to knock out those two issues in our GitHub repo.

62
00:04:11.820 --> 00:04:16.124
And yeah, we'll take about 20 minutes break to do that.

63
00:04:16.124 --> 00:04:22.530
We'll take a look at any pull requests that come in and merge those down,

64
00:04:22.530 --> 00:04:26.000
and we'll move on to some Vue. js stuff after that.

