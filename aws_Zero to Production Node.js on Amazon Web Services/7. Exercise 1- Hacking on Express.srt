1
00:00:04,186 --> 00:00:07,156
Now, we get to what I hope will be the fun part,

2
00:00:07,156 --> 00:00:09,828
one of the fun parts of the day, one of many,

3
00:00:09,828 --> 00:00:14,102
hopefully, where we spend a lot of time actually hacking on this application.

4
00:00:14,102 --> 00:00:14,574
Now,

5
00:00:14,574 --> 00:00:19,269
unfortunately you guys have already found a few bugs that I

6
00:00:19,269 --> 00:00:22,050
did not intend to put in the application,

7
00:00:22,050 --> 00:00:24,940
specifically around the README and the setup experience.

8
00:00:24,940 --> 00:00:25,350
However,

9
00:00:25,350 --> 00:00:29,452
there are actually a lot of things in this application

10
00:00:29,452 --> 00:00:31,554
that leaves something to be desired.

11
00:00:31,554 --> 00:00:34,712
In fact, you could say that I have issues,

12
00:00:34,712 --> 00:00:41,414
in fact, many of them, seven at the moment that I could use your help on.

13
00:00:41,414 --> 00:00:44,172
So what I would like to do over the next,

14
00:00:44,172 --> 00:00:49,004
we'll see how long it takes, it may be 20 minutes to a half hour,

15
00:00:49,004 --> 00:00:53,052
maybe more, we can kind of play it by ear,

16
00:00:53,052 --> 00:00:56,657
I have three GitHub issues here labeled exercise1,

17
00:00:56,657 --> 00:01:04,794
and those are GitHub --- those issues are around features or problems with the

18
00:01:04,794 --> 00:01:08,985
application that I would like for us to collectively add.

19
00:01:08,985 --> 00:01:09,225
So,

20
00:01:09,225 --> 00:01:13,071
what I would like for you to do is to pick one of these issues or

21
00:01:13,071 --> 00:01:17,076
get through all of them if you're feeling particularly industrious

22
00:01:17,076 --> 00:01:21,142
and try to add the feature or correct the problem that is described

23
00:01:21,142 --> 00:01:24,218
in one of these GitHub issues.

24
00:01:24,218 --> 00:01:30,379
So, for example, issue #7 is for a feature addition.

25
00:01:30,379 --> 00:01:31,912
So at Twilio,

26
00:01:31,912 --> 00:01:37,752
all of our HTTP APIs will return a header called X-Shenanigans-None because

27
00:01:37,752 --> 00:01:41,844
one of our core values as a company is no shenanigans,

28
00:01:41,844 --> 00:01:46,672
so we return this header with every response from the API.

29
00:01:46,672 --> 00:01:52,526
But sadly, this API for todos does not return the X-Shenanigans header.

30
00:01:52,526 --> 00:01:58,498
So we should look at expanding the implementation we have with Express to add

31
00:01:58,498 --> 00:02:03,437
that header to every request that serves our todos API.

32
00:02:03,437 --> 00:02:05,691
So we could send it back with every request,

33
00:02:05,691 --> 00:02:10,430
but I've scoped it here to say like only do this for the todos route,

34
00:02:10,430 --> 00:02:18,111
see if we can for those API requests return back this X-Shenanigans header.

35
00:02:18,111 --> 00:02:19,226
So that's one of the things you can tackle.

36
00:02:19,226 --> 00:02:22,478
Another thing you might want to tackle is this piece,

37
00:02:22,478 --> 00:02:28,389
which is not sending a Powered By Express header with every response.

38
00:02:28,389 --> 00:02:31,657
So, if you were to look here at this application,

39
00:02:31,657 --> 00:02:40,000
which is already running in the Network tab in Web Inspector,

40
00:02:40,000 --> 00:02:45,523
where is this going to be?

41
00:02:45,523 --> 00:02:46,246
Where's my?

42
00:02:46,246 --> 00:02:47,330
There we go.

43
00:02:47,330 --> 00:02:50,583
I just have to click on the resource there.

44
00:02:50,583 --> 00:02:54,947
So if you look at the headers that are sent back with the response,

45
00:02:54,947 --> 00:02:58,511
there's a X-Powered-By: Express header that gets returned

46
00:02:58,511 --> 00:03:01,520
by default in an Express application.

47
00:03:01,520 --> 00:03:03,638
And it's innocuous enough,

48
00:03:03,638 --> 00:03:07,627
but when you're taking an Express application to production,

49
00:03:07,627 --> 00:03:11,800
usually you don't want to include that extra information because

50
00:03:11,800 --> 00:03:15,423
it's possible that an evildoer could launch a targeted attack on

51
00:03:15,423 --> 00:03:18,384
your application with the knowledge of what web framework you're

52
00:03:18,384 --> 00:03:20,136
using on the back end.

53
00:03:20,136 --> 00:03:22,723
So, it's not the hugest deal in the world,

54
00:03:22,723 --> 00:03:26,968
but if --- it's a good thing not to do in a production Node application.

55
00:03:26,968 --> 00:03:32,369
So removing or disabling that header is a good thing to do.

56
00:03:32,369 --> 00:03:37,665
The other piece that you might take a look at is the

57
00:03:37,665 --> 00:03:39,355
logging middleware for Express.

58
00:03:39,355 --> 00:03:44,052
So right now we don't use very much middleware in the application,

59
00:03:44,052 --> 00:03:50,132
and one of the things that would be nice to do would be to actually to log

60
00:03:50,132 --> 00:03:53,190
the HTTP traffic that's coming into the application.

61
00:03:53,190 --> 00:03:57,183
So there's lots of modules out there that do this.

62
00:03:57,183 --> 00:03:59,368
I've linked to one called morgan,

63
00:03:59,368 --> 00:04:02,646
which is very popular to use with Express applications.

64
00:04:02,646 --> 00:04:07,327
So adding some HTTP request logging middleware would be

65
00:04:07,327 --> 00:04:10,373
a nice feature to take on as well.

66
00:04:10,373 --> 00:04:13,641
So, if you would like to take one of these on,

67
00:04:13,641 --> 00:04:16,544
you can just hack on it locally,

68
00:04:16,544 --> 00:04:20,372
and if you are comfortable with the Git workflow,

69
00:04:20,372 --> 00:04:25,816
you can actually send a pull request to this repository with the

70
00:04:25,816 --> 00:04:28,701
implementation of the feature that you implemented.

71
00:04:28,701 --> 00:04:31,799
And if we have in 20 to 30 minutes time a few pull

72
00:04:31,799 --> 00:04:37,105
requests that show how to do this, I'll go head and merge them in; otherwise,

73
00:04:37,105 --> 00:04:41,503
I will cheat, and I will show you how it is to implement,

74
00:04:41,503 --> 00:04:44,985
like we actually implement each of these bits.

75
00:04:44,985 --> 00:04:48,122
But I would vastly prefer to merge a pull request from one of you,

76
00:04:48,122 --> 00:04:51,375
so if you would like to take on one of three of these

77
00:04:51,375 --> 00:04:53,667
issues in the next 20 to 30 minutes,

78
00:04:53,667 --> 00:04:57,003
we'll say 30 minutes because there are still a few folks

79
00:04:57,003 --> 00:04:58,971
that are getting their environments set up,

80
00:04:58,971 --> 00:05:00,797
but we'll play it by ear.

81
00:05:00,797 --> 00:05:06,000
No sooner than 30 minutes will we reconvene and talk about some of the solutions.

