1
00:00:01,490 --> 00:00:03,730
[Autogenerated] Let's discuss about spring Mongol data.

2
00:00:03,730 --> 00:00:04,870
Annotations,

3
00:00:04,870 --> 00:00:07,950
data annotations are meta data that you cannot toe our

4
00:00:07,950 --> 00:00:10,740
classes or feels to let spring date.

5
00:00:10,740 --> 00:00:15,910
I know howto control the persistence in a mongo database.

6
00:00:15,910 --> 00:00:18,580
If you've ever worked a GP before the news,

7
00:00:18,580 --> 00:00:21,140
annotations will fear very, very familiar.

8
00:00:21,140 --> 00:00:25,160
And that's because the people working on the spring framework have done a

9
00:00:25,160 --> 00:00:28,080
great job in keeping the learning curve the minimal.

10
00:00:28,080 --> 00:00:31,080
And you're using some of the terminology.

11
00:00:31,080 --> 00:00:35,780
I want to focus on the most important mongo D B annotations,

12
00:00:35,780 --> 00:00:43,760
the ones that you'd use in 95% of cases we have at a document at I.

13
00:00:43,760 --> 00:00:49,180
D at Field at Transient and wait.

14
00:00:49,180 --> 00:00:55,690
There's more we also have at indexed at Texting next at

15
00:00:55,690 --> 00:00:59,760
compounding Dex and at the B ref this.

16
00:00:59,760 --> 00:01:04,340
Take a closer look at them and get to know them in detail.

17
00:01:04,340 --> 00:01:06,160
Let's start with that document.

18
00:01:06,160 --> 00:01:09,570
A document is one of the most used annotations we're working with Mongo.

19
00:01:09,570 --> 00:01:12,570
Maybe we can use it on classes,

20
00:01:12,570 --> 00:01:16,750
and it lets the Mongol driver know that it can save objects of type

21
00:01:16,750 --> 00:01:20,440
aircraft as Mongol documents in a particular collection.

22
00:01:20,440 --> 00:01:21,100
In fact,

23
00:01:21,100 --> 00:01:25,040
it is very similar with the at entity annotation used by GPS

24
00:01:25,040 --> 00:01:27,740
when you're working with relational databases.

25
00:01:27,740 --> 00:01:31,740
But what is the name of the collection that these documents will be saved into?

26
00:01:31,740 --> 00:01:32,180
Well,

27
00:01:32,180 --> 00:01:35,420
if you was a document like this in the name of the collection is

28
00:01:35,420 --> 00:01:38,910
deduced from the class name in our case aircraft.

29
00:01:38,910 --> 00:01:39,720
However,

30
00:01:39,720 --> 00:01:42,550
we can also specify the collection name by using the

31
00:01:42,550 --> 00:01:44,990
collection attributes on this annotation.

32
00:01:44,990 --> 00:01:45,780
In this case,

33
00:01:45,780 --> 00:01:50,150
objects of type aircraft will be saved in a collection called her Place.

34
00:01:50,150 --> 00:01:54,020
Very useful when you want to control the collection name or when you

35
00:01:54,020 --> 00:01:59,380
want to get data on existing databases that have different names than

36
00:01:59,380 --> 00:02:02,040
the ones in your classes and another case,

37
00:02:02,040 --> 00:02:05,240
it's a very good practice to separate the name of her classes

38
00:02:05,240 --> 00:02:08,730
from the actual name off your collections.

39
00:02:08,730 --> 00:02:12,610
Every document in a mongo collection should have an I.

40
00:02:12,610 --> 00:02:13,180
D field.

41
00:02:13,180 --> 00:02:16,350
This idea field is unique, and it is indexed.

42
00:02:16,350 --> 00:02:19,800
It's very similar to a primary key in traditional databases.

43
00:02:19,800 --> 00:02:25,170
In fact, in GP, we have the exact same meditation on entities at I D.

44
00:02:25,170 --> 00:02:28,260
Now decided feels in a Mongol.

45
00:02:28,260 --> 00:02:32,520
Databases are usually stored as an object I deem

46
00:02:32,520 --> 00:02:35,700
type and this type resembles good.

47
00:02:35,700 --> 00:02:40,740
So when you're serializing and issue rising objects from among our database,

48
00:02:40,740 --> 00:02:46,040
your I d feels will probably be goods now that without defined an I D.

49
00:02:46,040 --> 00:02:48,130
What happens with model a number of seats,

50
00:02:48,130 --> 00:02:51,050
which are properties off the aircraft class,

51
00:02:51,050 --> 00:02:53,000
they will automatically get serialized.

52
00:02:53,000 --> 00:02:55,720
However, if you want to control that's realization,

53
00:02:55,720 --> 00:02:59,920
we can use the at field annotation as Field is very similar to

54
00:02:59,920 --> 00:03:02,460
a document but works on the property level.

55
00:03:02,460 --> 00:03:07,650
It instructs the framework on howto persist properties in

56
00:03:07,650 --> 00:03:11,440
our objects as feels in Mongol documents.

57
00:03:11,440 --> 00:03:14,220
And if you feel like this, it won't make any difference.

58
00:03:14,220 --> 00:03:14,970
However,

59
00:03:14,970 --> 00:03:18,410
we can use the name attribute on the ATF field annotation

60
00:03:18,410 --> 00:03:22,270
to control the name off the field in which this property

61
00:03:22,270 --> 00:03:24,490
is going to get stored again.

62
00:03:24,490 --> 00:03:28,720
A very good practice to separate the name off the properties in

63
00:03:28,720 --> 00:03:32,440
classes from the names off the fields in mongo D.

64
00:03:32,440 --> 00:03:33,140
B.

65
00:03:33,140 --> 00:03:35,800
But what if you want to exclude a particular

66
00:03:35,800 --> 00:03:37,930
property from being persisted at all?

67
00:03:37,930 --> 00:03:41,820
What if our model has some properties that it needs internally,

68
00:03:41,820 --> 00:03:44,160
but it doesn't need to persist?

69
00:03:44,160 --> 00:03:49,260
Then we can use the at transient annotation in this case will try to save

70
00:03:49,260 --> 00:03:53,340
objects off type aircraft idea and model will be persisted,

71
00:03:53,340 --> 00:03:55,550
but number of seats will not be persisted,

72
00:03:55,550 --> 00:03:57,120
even if it has a value.

73
00:03:57,120 --> 00:04:00,300
Also, when we dis your allies objects from Mongo,

74
00:04:00,300 --> 00:04:04,900
number of seats will have a default value unless otherwise specified.

75
00:04:04,900 --> 00:04:07,480
We most certainly want to execute filters,

76
00:04:07,480 --> 00:04:12,420
enquiries against Armando documents and to speed things up.

77
00:04:12,420 --> 00:04:15,310
We will definitely need to use index is well.

78
00:04:15,310 --> 00:04:16,770
In order to define indexes,

79
00:04:16,770 --> 00:04:22,460
we can use the at indexed annotation on the field that you want to index Now.

80
00:04:22,460 --> 00:04:23,160
In this case,

81
00:04:23,160 --> 00:04:27,550
let's assume that you want to make a lot off queries on the aircraft model.

82
00:04:27,550 --> 00:04:28,820
It makes sense, then tow.

83
00:04:28,820 --> 00:04:30,740
Annotate it with at indexed.

84
00:04:30,740 --> 00:04:33,120
And, of course, like most of the spring date,

85
00:04:33,120 --> 00:04:36,580
among connotations at indexed can be customized.

86
00:04:36,580 --> 00:04:41,840
For example, we can specify the direction off the index ascending or descending,

87
00:04:41,840 --> 00:04:46,330
and we can also specify if this field should be unique.

88
00:04:46,330 --> 00:04:50,310
Feels that are unique cannot have the same value in a mongo

89
00:04:50,310 --> 00:04:53,200
that our best collection you'll get an error if you try to

90
00:04:53,200 --> 00:04:56,200
insert fields that have the same value.

91
00:04:56,200 --> 00:04:59,860
For example, I D is an implicitly indexed field,

92
00:04:59,860 --> 00:05:02,300
which is also unique by default.

93
00:05:02,300 --> 00:05:05,470
In our case, we let unique equals false.

94
00:05:05,470 --> 00:05:06,990
There is also texting.

95
00:05:06,990 --> 00:05:08,720
Next we'll discuss more about its.

96
00:05:08,720 --> 00:05:10,870
We will implement full text search.

97
00:05:10,870 --> 00:05:15,440
Just know that if you want to include feels in a foot X search,

98
00:05:15,440 --> 00:05:19,160
then you need to annotate them with at text indexed.

99
00:05:19,160 --> 00:05:22,750
In this case, model will be included in a full deck search.

100
00:05:22,750 --> 00:05:26,730
And, of course, you can text index as many fields as you want.

101
00:05:26,730 --> 00:05:30,780
At Compound Index allows us to create an indexed from

102
00:05:30,780 --> 00:05:33,180
multiple fields within our document.

103
00:05:33,180 --> 00:05:35,600
Instead of creating an index for each field,

104
00:05:35,600 --> 00:05:40,080
we have a single index, which is linked to multiple properties.

105
00:05:40,080 --> 00:05:41,810
This is great for optimization Sze.

106
00:05:41,810 --> 00:05:47,190
In this case, our compound index is based on the model in an ascending manner.

107
00:05:47,190 --> 00:05:51,990
Notice the one over there and a number of seats in descending notes.

108
00:05:51,990 --> 00:05:52,890
The minus one.

109
00:05:52,890 --> 00:05:57,360
Over here, it's a shorthand notation for ascending and descending.

110
00:05:57,360 --> 00:06:01,340
Like I said, pretty useful for optimization Sze.

111
00:06:01,340 --> 00:06:04,180
And finally we have at the B ref.

112
00:06:04,180 --> 00:06:07,590
If you're familiar with relational databases at tbe,

113
00:06:07,590 --> 00:06:12,160
ref acts someone like a joint in our particular case,

114
00:06:12,160 --> 00:06:16,460
a debrief is used to link multiple documents Together.

115
00:06:16,460 --> 00:06:22,020
We have a manufacturer property and his property is off type manufacturer.

116
00:06:22,020 --> 00:06:25,910
But you do not want to start a manufacturer as part of the aircraft document.

117
00:06:25,910 --> 00:06:29,240
Instead, we want to link it to an existing document.

118
00:06:29,240 --> 00:06:32,010
That's what added the brief is all about.

119
00:06:32,010 --> 00:06:35,700
It thinks the value over here toe on existing

120
00:06:35,700 --> 00:06:37,970
document in a different collection.

121
00:06:37,970 --> 00:06:40,720
And when we look at the right at the manufacturer,

122
00:06:40,720 --> 00:06:43,460
we can see that it's a completely different document with

123
00:06:43,460 --> 00:06:46,510
its own I D and its own properties.

124
00:06:46,510 --> 00:06:55,000
Relationships between documents are very important and interesting topic, and we'll discuss more about them in a future module.

