1
00:00:00,640 --> 00:00:01,530
[Autogenerated] all right.

2
00:00:01,530 --> 00:00:03,920
Time for a quick recap in his module.

3
00:00:03,920 --> 00:00:08,510
We looked at document referencing in Among really be We have two types

4
00:00:08,510 --> 00:00:12,840
of references in Mongo Manu References or D B refs.

5
00:00:12,840 --> 00:00:17,670
I think about the breaths as manual references on steroids,

6
00:00:17,670 --> 00:00:18,810
the spring framework.

7
00:00:18,810 --> 00:00:24,070
Thus things under the hood to make our experience with using the B riffs easier.

8
00:00:24,070 --> 00:00:25,110
For example,

9
00:00:25,110 --> 00:00:28,520
fetching off the reference document is handled by the spring framework,

10
00:00:28,520 --> 00:00:35,340
which is a great thing cascading on Save is not implemented for the virus.

11
00:00:35,340 --> 00:00:36,280
Luckily for us,

12
00:00:36,280 --> 00:00:41,340
we can achieve this by hooking into the spring mongo lifecycle events on

13
00:00:41,340 --> 00:00:44,910
before safe or on the phone convert our great hooks.

14
00:00:44,910 --> 00:00:50,150
To implement this, we also looked into manga life second events,

15
00:00:50,150 --> 00:00:52,610
which are a great way to add valuable logic.

16
00:00:52,610 --> 00:00:55,300
Innkeeper assistance moments, security,

17
00:00:55,300 --> 00:00:59,600
auditing and cascading are good examples off watch can achieve if you

18
00:00:59,600 --> 00:01:03,500
hook into these events before we conclude this module.

19
00:01:03,500 --> 00:01:09,030
I also want to know once a couple of things in the Mongol documentation.

20
00:01:09,030 --> 00:01:12,490
It states that for nearly every use case where you want

21
00:01:12,490 --> 00:01:15,350
store a relationship with into documents,

22
00:01:15,350 --> 00:01:21,240
use manual references, the application can resolve those references as needed.

23
00:01:21,240 --> 00:01:23,280
Also in the Mongol documentation,

24
00:01:23,280 --> 00:01:26,320
it stays that if you need to reference documents from

25
00:01:26,320 --> 00:01:29,640
multiple collections or multiple databases,

26
00:01:29,640 --> 00:01:32,130
then should consider using the breaths.

27
00:01:32,130 --> 00:01:37,670
It seems like the Mongol documentation doesn't want us to

28
00:01:37,670 --> 00:01:40,790
die ourselves with relationships a lot.

29
00:01:40,790 --> 00:01:44,170
Instead, they want us to use the no sequel approach.

30
00:01:44,170 --> 00:01:47,330
We're in bed documents into one another.

31
00:01:47,330 --> 00:01:52,200
Now, based on my experience, I kind of have this recipe.

32
00:01:52,200 --> 00:01:57,350
First of all, Start by designing your data without relationships.

33
00:01:57,350 --> 00:02:00,380
Stay true to the no sequel philosophy.

34
00:02:00,380 --> 00:02:02,940
This should be your number one go.

35
00:02:02,940 --> 00:02:06,910
If this can be achieved, then I would recommend that you use Deb.

36
00:02:06,910 --> 00:02:07,930
You're F,

37
00:02:07,930 --> 00:02:11,420
but only if you implement cascading on safe and you

38
00:02:11,420 --> 00:02:14,220
don't create bi directional references.

39
00:02:14,220 --> 00:02:18,510
That's because Spring offers some features out of the box.

40
00:02:18,510 --> 00:02:21,440
We have population off the related documents,

41
00:02:21,440 --> 00:02:23,150
and if you permit cascading,

42
00:02:23,150 --> 00:02:26,090
you also get that so it will make your life working

43
00:02:26,090 --> 00:02:28,580
with the application a lot easier.

44
00:02:28,580 --> 00:02:33,540
And last but not least, you should consider manual references.

45
00:02:33,540 --> 00:02:36,190
I think you are now ready to work with spring

46
00:02:36,190 --> 00:02:38,540
applications that you smuggle baby,

47
00:02:38,540 --> 00:02:42,280
you know how to configure these two technologies together in the hot

48
00:02:42,280 --> 00:02:46,620
implement code operations and how to relate documents together.

49
00:02:46,620 --> 00:02:47,390
However,

50
00:02:47,390 --> 00:02:49,330
there are still some things that you need to

51
00:02:49,330 --> 00:02:51,550
consider in production applications.

52
00:02:51,550 --> 00:02:54,030
One of them is that immigration's.

53
00:02:54,030 --> 00:03:06,000
I've seen no application in my career that doesn't use that migrations. So in the next module, with tackled other immigration's in Mongolia be.

