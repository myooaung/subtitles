WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.020
Hello everyone.

00:00:01.020 --> 00:00:01.770
Welcome back.

00:00:01.770 --> 00:00:03.360
So let's try some sample here.

00:00:03.360 --> 00:00:05.415
So what are we trying to do now?

00:00:05.415 --> 00:00:10.710
So I want to write a method which will absorbs only the numeric data.

00:00:10.710 --> 00:00:13.410
Right? So let's write a method for that.

00:00:13.410 --> 00:00:20.460
First, let's write a method signature public, static, void.

00:00:20.460 --> 00:00:23.475
How can call? We can call something like inspect.

00:00:23.475 --> 00:00:26.350
So this is my method name.

00:00:26.870 --> 00:00:28.110
Right?

00:00:28.110 --> 00:00:30.960
It isn't a generic method. No, right.

00:00:30.960 --> 00:00:34.785
It is not a generic method because I have to tell the compiler it is a generic matter.

00:00:34.785 --> 00:00:37.680
So the way we can do that before whatever we are

00:00:37.680 --> 00:00:41.540
returning from the mother before the keyword,

00:00:41.540 --> 00:00:43.265
we need to provide the diamond operator.

00:00:43.265 --> 00:00:46.295
And I had to mention the type of tea here.

00:00:46.295 --> 00:00:47.705
Got it.

00:00:47.705 --> 00:00:51.335
And this is the input to my mug shot.

00:00:51.335 --> 00:00:53.360
So now what I'm gonna do,

00:00:53.360 --> 00:00:55.640
I'm not gonna do any functionality and

00:00:55.640 --> 00:00:57.770
I'm just simply printing whatever the type is coming.

00:00:57.770 --> 00:00:59.915
I'm going to print the name of it, for example.

00:00:59.915 --> 00:01:02.975
So let me try something like this.

00:01:02.975 --> 00:01:06.080
So the T type,

00:01:06.080 --> 00:01:07.550
you see if I'm sending an integer,

00:01:07.550 --> 00:01:10.430
it has to return an integer that is the class name, right?

00:01:10.430 --> 00:01:17.705
So what I'm trying to do is t dot get glass, dot get name.

00:01:17.705 --> 00:01:20.255
Okay? So now what I'm gonna do,

00:01:20.255 --> 00:01:25.900
I'm gonna call this Nadar inspect.

00:01:25.900 --> 00:01:28.855
So I'm going to pass hello,

00:01:28.855 --> 00:01:30.280
which is a string, right?

00:01:30.280 --> 00:01:31.585
So how would it has to work?

00:01:31.585 --> 00:01:34.180
So the hello will pass to this generic method

00:01:34.180 --> 00:01:37.225
and it will try to retrieve what is the class.

00:01:37.225 --> 00:01:40.460
So it's a string, right? So let's run it.

00:01:41.400 --> 00:01:46.840
See the type is java.lang that string.

00:01:46.840 --> 00:01:51.430
Okay, so what happens if I pass something like this?

00:01:51.430 --> 00:01:53.860
I mean now a 100.

00:01:53.860 --> 00:01:58.450
And again, it's an integer,

00:01:58.450 --> 00:02:04.045
so a 100 0, it's a double.

00:02:04.045 --> 00:02:05.320
And what if I

00:02:05.320 --> 00:02:14.815
pass character?

00:02:14.815 --> 00:02:17.095
So let me run it again.

00:02:17.095 --> 00:02:24.985
So you can call the inspect method or with any type of data or any type.

00:02:24.985 --> 00:02:26.785
But I want to restrict it.

00:02:26.785 --> 00:02:28.330
So how I can do that?

00:02:28.330 --> 00:02:32.470
So for example, I want to only accept numerical data.

00:02:32.470 --> 00:02:34.405
So how I can do that?

00:02:34.405 --> 00:02:39.700
So what you can do is this is a generic type and we're going to create an upper bound,

00:02:39.700 --> 00:02:41.140
which means you're going to use

00:02:41.140 --> 00:02:44.425
the particular class which you're going to extend and its subclasses.

00:02:44.425 --> 00:02:49.514
So extents, the class I'm going to use, it's a number.

00:02:49.514 --> 00:02:51.230
So when you're easy numbers,

00:02:51.230 --> 00:02:52.610
you can make use of integer,

00:02:52.610 --> 00:02:54.815
float, long, double everything.

00:02:54.815 --> 00:02:57.215
The moment I change the extense number,

00:02:57.215 --> 00:02:58.640
I got an error message here.

00:02:58.640 --> 00:03:00.110
It says enter here,

00:03:00.110 --> 00:03:02.420
insert method containing some compilation issue.

00:03:02.420 --> 00:03:07.080
The reason I'm passing a character which is not allowed to the generic method,

00:03:07.080 --> 00:03:08.675
it only the numerical data.

00:03:08.675 --> 00:03:12.080
It will allow a 100. Let me run it.

00:03:12.080 --> 00:03:14.405
See, it's an integer.

00:03:14.405 --> 00:03:18.590
Maybe it will allow this aswell Because again,

00:03:18.590 --> 00:03:20.810
still it's belongs to a number,

00:03:20.810 --> 00:03:24.990
numerical data, or can provide ten.

00:03:26.950 --> 00:03:29.315
So ending is fine,

00:03:29.315 --> 00:03:35.330
but it has to be an numeric type because I'm extending the number here.

00:03:35.330 --> 00:03:37.190
Okay, let's do something different now.

00:03:37.190 --> 00:03:40.640
So I want to use some of the subclass methods, RK,

00:03:40.640 --> 00:03:42.020
the plasma that for example,

00:03:42.020 --> 00:03:44.510
I'm going to use a comparable to check two methods,

00:03:44.510 --> 00:03:46.250
or I'm going to provide two inputs.

00:03:46.250 --> 00:03:49.144
I want to compare them and return that response.

00:03:49.144 --> 00:03:51.125
So let's do that.

00:03:51.125 --> 00:03:52.565
So the way how I can do that,

00:03:52.565 --> 00:03:54.350
I had to create one more method here,

00:03:54.350 --> 00:04:01.610
so which is going to be a static int War I always start with the static method.

00:04:01.610 --> 00:04:03.425
Then we'll modify the chicken a signature.

00:04:03.425 --> 00:04:07.129
So here I'm going to just simply provide a name called a display.

00:04:07.129 --> 00:04:09.320
Okay, this is just a normal method, is,

00:04:09.320 --> 00:04:10.400
is not a generic method,

00:04:10.400 --> 00:04:13.100
but we have to convert that into a generic method.

00:04:13.100 --> 00:04:18.095
So that type I'm going to pass is going to be t, right?

00:04:18.095 --> 00:04:21.120
And what are the data I want to return back?

00:04:21.850 --> 00:04:25.145
I just wanted it and all that type is coming back.

00:04:25.145 --> 00:04:27.155
So I'm going to type as well.

00:04:27.155 --> 00:04:32.030
So here I'm going to provide something like okay,

00:04:32.030 --> 00:04:36.830
so here the type has to be extense comparable.

00:04:36.830 --> 00:04:39.500
So the reason why I'm using compatible,

00:04:39.500 --> 00:04:45.470
I can use the compareTo method which is available in the comparable, right?

00:04:45.470 --> 00:04:47.090
So here I have two inputs.

00:04:47.090 --> 00:04:48.530
Take a mature one,

00:04:48.530 --> 00:04:50.555
comma k space T2.

00:04:50.555 --> 00:04:52.130
So I have two inputs here.

00:04:52.130 --> 00:04:56.360
I'm going to come back to you and Auntie do and then Hilton D recent accordingly.

00:04:56.360 --> 00:05:00.120
Here. I'm going to logically or so written.

00:05:00.340 --> 00:05:07.909
So here I'm going to compare T1.com to K2.

00:05:07.909 --> 00:05:12.935
And if it's greater than 0,

00:05:12.935 --> 00:05:16.025
then what I'm going to do, we tend to one

00:05:16.025 --> 00:05:19.955
or else I'm going to run data is a ternary operator, by the way.

00:05:19.955 --> 00:05:23.750
So I am just comparing to you when compared to with T2.

00:05:23.750 --> 00:05:25.550
So T1 is bigger than t2.

00:05:25.550 --> 00:05:28.835
I'm returning T1 orders and running their T2.

00:05:28.835 --> 00:05:33.960
Okay, let's call them that and we'll see what is the outcome.

00:05:35.110 --> 00:05:38.430
So here I'm going to call

00:05:39.090 --> 00:05:42.355
Displacement or display.

00:05:42.355 --> 00:05:48.530
And I'm going to call a 100 and 200.

00:05:50.550 --> 00:05:56.890
Okay, so I wanted to print that value as for me.

00:05:56.890 --> 00:05:59.350
So now I'm going to run it.

00:05:59.350 --> 00:06:02.020
So we all know what is the outcome here.

00:06:02.020 --> 00:06:05.170
It is 200 because I'm taking a hundred and two hundred,

00:06:05.170 --> 00:06:07.660
which is a bigger one of, of course it's 200.

00:06:07.660 --> 00:06:11.810
Let me modify the input here again to less than and again,

00:06:12.270 --> 00:06:16.360
it will still work.

00:06:16.360 --> 00:06:19.825
Okay, so let's try something else.

00:06:19.825 --> 00:06:22.055
Okay, So, um, okay, For now,

00:06:22.055 --> 00:06:23.105
I'm going to keep it, this one,

00:06:23.105 --> 00:06:25.685
and I'm going to create a one more example.

00:06:25.685 --> 00:06:27.860
I can do that here. Okay, let's do one thing.

00:06:27.860 --> 00:06:30.365
So let's get one more class to find the maximum name.

00:06:30.365 --> 00:06:33.560
I'm going to pass three inputs. So maize run that.

00:06:33.560 --> 00:06:36.665
I'm going to find out what is the biggest value.

00:06:36.665 --> 00:06:39.020
So for that, I'm going to create a one more plasma.

00:06:39.020 --> 00:06:41.480
It's not a generic class. I'm going to use a generic method here.

00:06:41.480 --> 00:06:44.009
So find maximum.

00:06:44.410 --> 00:06:46.805
So it's just a normal class.

00:06:46.805 --> 00:06:53.930
In the nano class, I'm going to create a method public and the January keyboard.

00:06:53.930 --> 00:06:56.105
And this is going to be extense,

00:06:56.105 --> 00:07:02.795
of course comparable because I want to use a compartment are comparable.

00:07:02.795 --> 00:07:05.750
In, again, I'm going to return the T here.

00:07:05.750 --> 00:07:09.260
We've got the maximum number and find max.

00:07:09.260 --> 00:07:10.445
So here's the deal.

00:07:10.445 --> 00:07:13.590
I have three inputs, D gamma.

00:07:15.970 --> 00:07:21.270
So I will pass three inputs to this metal.

00:07:21.280 --> 00:07:24.980
So I'll come but all of them and I will written d, the maximum.

00:07:24.980 --> 00:07:27.650
So for now, T max is equal to funnel.

00:07:27.650 --> 00:07:30.350
I'm asked any of the maximum value as a T1.

00:07:30.350 --> 00:07:32.810
So then we are, we can start right,

00:07:32.810 --> 00:07:34.040
the logic, the first condition,

00:07:34.040 --> 00:07:35.480
what I'm trying to do here,

00:07:35.480 --> 00:07:42.770
if d2.compat to Math.min t1.

00:07:42.770 --> 00:07:47.585
So t1, if it is greater than 0.

00:07:47.585 --> 00:07:54.410
So then I'm going to make max is equal to d2.

00:07:54.410 --> 00:07:58.280
Or, and I'm adding one more because we have a two more elements, right?

00:07:58.280 --> 00:08:00.410
So I'm gonna come back T2 with the D1.

00:08:00.410 --> 00:08:05.825
So T2.com to it, T1.

00:08:05.825 --> 00:08:08.720
And if it is greater than 0,

00:08:08.720 --> 00:08:13.880
then I will just max is equal to P3.

00:08:13.880 --> 00:08:14.390
Okay?

00:08:14.390 --> 00:08:18.365
So this Maxwell than T1 and this Wilton t2 and t3.

00:08:18.365 --> 00:08:20.180
And finally what I'm gonna do,

00:08:20.180 --> 00:08:22.550
I have to return the final element, right?

00:08:22.550 --> 00:08:28.790
Return the max. As simple as that, right?

00:08:28.790 --> 00:08:32.045
So now let's use the class and call the method.

00:08:32.045 --> 00:08:35.090
Okay, so I'm going to mind-map that in here.

00:08:35.090 --> 00:08:39.575
I'm going to, let's make it as a static method so I can

00:08:39.575 --> 00:08:45.905
simply call it LGG here.

00:08:45.905 --> 00:08:51.545
Find the maximum dot.

00:08:51.545 --> 00:08:53.570
So the metadata, him trying to call find max,

00:08:53.570 --> 00:08:57.230
I'm going to pass then Command D. Command D. Of course,

00:08:57.230 --> 00:09:00.120
you know what is the maximum here?

00:09:01.450 --> 00:09:05.790
So, and I'll print the max as well.

00:09:06.130 --> 00:09:09.000
Maximum.

00:09:09.820 --> 00:09:13.050
Okay, so let me run this.

00:09:13.420 --> 00:09:16.340
So maximum is 330.

00:09:16.340 --> 00:09:18.900
So let's try to modify this.

00:09:19.300 --> 00:09:25.070
So eventually we will get a 100 and this is how it will work.

00:09:25.070 --> 00:09:26.990
So you can pass some decimal.

00:09:26.990 --> 00:09:28.250
And Alice has also, for example,

00:09:28.250 --> 00:09:35.210
10.502110.5613 is 0 because

00:09:35.210 --> 00:09:40.385
all of the model different types here.

00:09:40.385 --> 00:09:45.515
So this fine maxima that now it really takes a double as an input,

00:09:45.515 --> 00:09:46.880
it will AND W,

00:09:46.880 --> 00:09:50.120
so it has to be they sued by the double here.

00:09:50.120 --> 00:09:52.040
So now W max here.

00:09:52.040 --> 00:09:54.660
So let's save it and run it again.

00:09:54.970 --> 00:10:00.440
See 3100 is the maximum one.

00:10:00.440 --> 00:10:05.570
Right? How come thirties maximum.

00:10:05.570 --> 00:10:06.530
Now it's Sean.

00:10:06.530 --> 00:10:08.405
Yeah, that's my bad.

00:10:08.405 --> 00:10:12.050
I have to compare the max, right?

00:10:12.050 --> 00:10:15.005
So with T1 was my bad.

00:10:15.005 --> 00:10:18.480
So save it and run it again.

00:10:19.240 --> 00:10:21.995
See, we've got that proper data.

00:10:21.995 --> 00:10:26.150
Okay, so you might then also what happens if I tried to send some other data?

00:10:26.150 --> 00:10:36.020
Like the data will be X1 belongs to a comparable so that we can do is here.

00:10:36.020 --> 00:10:39.800
And nu or hygiene.

00:10:39.800 --> 00:10:43.860
I'm just trying to blow up some random data which is a string.

00:11:03.790 --> 00:11:05.915
So now what I'm gonna do,

00:11:05.915 --> 00:11:10.775
I'm gonna again three.

00:11:10.775 --> 00:11:17.495
Maximum is hydrogen's based Randy their bytes.

00:11:17.495 --> 00:11:22.160
Okay, so whatever the classes they can existence the compatible,

00:11:22.160 --> 00:11:27.605
you can use them in the method call here, right?

00:11:27.605 --> 00:11:29.135
So let's see an,

00:11:29.135 --> 00:11:32.460
another kind of a bone or type in the next example.
