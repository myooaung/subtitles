WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.070
Hello everyone, Welcome back.

00:00:02.070 --> 00:00:03.660
So we discuss reboot,

00:00:03.660 --> 00:00:06.480
upper bound and lower bound, right?

00:00:06.480 --> 00:00:11.040
I mean, upper-bounded wildcards and lawyer don't do wildcard dried.

00:00:11.040 --> 00:00:12.495
So if it's the upper bound,

00:00:12.495 --> 00:00:15.435
it is wild-caught extrinsic grandfather.

00:00:15.435 --> 00:00:21.285
We know that it will only work with the class and the subclasses and lower bound.

00:00:21.285 --> 00:00:23.400
It is just quite opposite.

00:00:23.400 --> 00:00:31.155
So wildcard superfamilies just all about DIY class and the superclass's, right?

00:00:31.155 --> 00:00:35.130
So there is one more thing called as unbounded wildcard.

00:00:35.130 --> 00:00:39.675
Okay, So let me give you a simple example to show you how it looks like.

00:00:39.675 --> 00:00:44.100
So unbounded.

00:00:44.140 --> 00:00:47.550
Wildcard things, sound.

00:00:48.220 --> 00:00:51.750
Cues, select and create a main method here.

00:00:55.330 --> 00:00:59.015
Okay, So I have a class and I have a main method.

00:00:59.015 --> 00:01:01.325
So what do you mean by unbounded?

00:01:01.325 --> 00:01:07.145
So if you have a wildcard extense,

00:01:07.145 --> 00:01:09.275
which means you'd see upper bound.

00:01:09.275 --> 00:01:12.200
It means wildcard super,

00:01:12.200 --> 00:01:13.580
which means the lawyer bone.

00:01:13.580 --> 00:01:15.950
If there is nothing, there is no x since there is no

00:01:15.950 --> 00:01:19.100
super that is called as a unbound agenda.

00:01:19.100 --> 00:01:20.600
But how does it looks like?

00:01:20.600 --> 00:01:22.295
So normally?

00:01:22.295 --> 00:01:24.905
This is how we used to so far,

00:01:24.905 --> 00:01:29.795
we tried this extense number, okay?

00:01:29.795 --> 00:01:31.595
This is an upper bound, okay?

00:01:31.595 --> 00:01:36.860
And then we tried Super number.

00:01:36.860 --> 00:01:39.770
And again, it is a lower bound.

00:01:39.770 --> 00:01:42.755
So what is unbound?

00:01:42.755 --> 00:01:44.750
So will not have any extent,

00:01:44.750 --> 00:01:47.825
will not have any super, will have only the wildcard.

00:01:47.825 --> 00:01:52.775
So that is called ESA and bond.

00:01:52.775 --> 00:01:55.010
Okay, So let me create a mother to show you how it

00:01:55.010 --> 00:01:57.425
is going to work for now I'm going to create a simple method.

00:01:57.425 --> 00:02:05.580
So like public, static, void.

00:02:05.770 --> 00:02:08.360
Maybe show that.

00:02:08.360 --> 00:02:12.335
Okay, so I will pass a list of inputs here and I'll print that data.

00:02:12.335 --> 00:02:13.235
That's all.

00:02:13.235 --> 00:02:21.200
So here I'm going to pass a list of some random data.

00:02:21.200 --> 00:02:22.385
I don't know what is the typewriter.

00:02:22.385 --> 00:02:24.305
That is why I'm using the wildcards here.

00:02:24.305 --> 00:02:27.110
And I'm going to pass list to here.

00:02:27.110 --> 00:02:28.475
Okay?

00:02:28.475 --> 00:02:35.525
So we need to write the painter to create a for loop to iterate the list.

00:02:35.525 --> 00:02:36.200
Great.

00:02:36.200 --> 00:02:39.140
So now we don't know what is the type is going to come here.

00:02:39.140 --> 00:02:41.525
So what is the only choice that she did have?

00:02:41.525 --> 00:02:43.999
So we can go for object

00:02:43.999 --> 00:02:48.480
because the object is a base class that everything right, so you can use it.

00:02:48.940 --> 00:02:52.865
So let me create a for loop here.

00:02:52.865 --> 00:02:56.255
And it is going to be a object.

00:02:56.255 --> 00:03:00.410
Airline. Enter it as coming from the list.

00:03:00.410 --> 00:03:02.570
Okay, So I'm not gonna do much of operation here.

00:03:02.570 --> 00:03:04.805
I'm just simply a printing some statement,

00:03:04.805 --> 00:03:06.770
like whatever the data is coming from the element,

00:03:06.770 --> 00:03:08.135
I'm just simply printing it.

00:03:08.135 --> 00:03:10.010
Okay, Now here is the trickiest part.

00:03:10.010 --> 00:03:12.800
So how do I pass the inputs to this method?

00:03:12.800 --> 00:03:15.245
So it can be any type of information.

00:03:15.245 --> 00:03:17.075
I mean, any kind of a type.

00:03:17.075 --> 00:03:20.630
It can be anything because I'm just using a wildcard.

00:03:20.630 --> 00:03:22.085
It can be anything and I'm using,

00:03:22.085 --> 00:03:23.555
I'm editing using the object,

00:03:23.555 --> 00:03:25.625
which means if it is all delete,

00:03:25.625 --> 00:03:28.520
it will accept any classes in Java or

00:03:28.520 --> 00:03:32.330
any objects in Java because there is a base class that everything.

00:03:32.330 --> 00:03:34.295
Okay, so for now what I'm gonna do,

00:03:34.295 --> 00:03:38.990
so let me create a range of input stream like okay,

00:03:38.990 --> 00:03:40.610
so let me use the in-stream here.

00:03:40.610 --> 00:03:45.395
So in stream dot and I'm going to use a range like one to a 100.

00:03:45.395 --> 00:03:48.290
So it will create the elements from one to 100.

00:03:48.290 --> 00:03:53.630
And I'm going to box them and I'm going to collect them as a list.

00:03:53.630 --> 00:03:58.625
Collect. And collect as a list.

00:03:58.625 --> 00:03:59.375
Okay?

00:03:59.375 --> 00:04:02.210
So then I'm going to create a variable for that.

00:04:02.210 --> 00:04:05.180
So now I have a list of integers.

00:04:05.180 --> 00:04:08.030
So what I'm gonna do, I'm gonna call the show data method,

00:04:08.030 --> 00:04:10.820
which will take any type.

00:04:10.820 --> 00:04:15.874
So for now I'm passing the list of integers which I already created.

00:04:15.874 --> 00:04:18.750
So let me run this.

00:04:21.190 --> 00:04:24.065
See, we got the data.

00:04:24.065 --> 00:04:25.775
So you might think,

00:04:25.775 --> 00:04:28.250
Will it work only with the integers?

00:04:28.250 --> 00:04:30.800
It's not like it will work with any kind of data.

00:04:30.800 --> 00:04:32.015
So for now what I'm gonna do,

00:04:32.015 --> 00:04:34.880
I'm gonna create long stream anyway.

00:04:34.880 --> 00:04:38.180
So a list of our maybe I can use a double streams.

00:04:38.180 --> 00:04:42.020
So, so I'm going to create a stream and I'm going to convert them into a long stream.

00:04:42.020 --> 00:04:46.175
So don't, again, I'm going to use a range one to a 100 and,

00:04:46.175 --> 00:04:50.270
and I'm converting them into a doublet stream and then I'm collecting and collecting

00:04:50.270 --> 00:04:57.230
it and collect, collect dot list.

00:04:57.230 --> 00:05:01.895
Okay, so now I have a collect one which is less stuff a doubles.

00:05:01.895 --> 00:05:04.700
So now I'm going to pass the list, correct one.

00:05:04.700 --> 00:05:07.400
So let me run it.

00:05:07.400 --> 00:05:10.115
Yep, It still works.

00:05:10.115 --> 00:05:12.410
Okay, so instead of using this,

00:05:12.410 --> 00:05:15.680
Can we have some different kind of custom database,

00:05:15.680 --> 00:05:17.195
for example, likes to rent.

00:05:17.195 --> 00:05:19.670
So I'm going to create a class here,

00:05:19.670 --> 00:05:26.100
student and which contains just a name.

00:05:27.070 --> 00:05:30.455
String name.

00:05:30.455 --> 00:05:32.105
String name.

00:05:32.105 --> 00:05:34.205
Okay, So that's all i'm, I'm gonna,

00:05:34.205 --> 00:05:37.850
maybe I can use the toString method so I can print the data.

00:05:37.850 --> 00:05:40.880
Okay, So now what I'm gonna do,

00:05:40.880 --> 00:05:45.620
I'm gonna create a list of student and I'm passing it to the same show data method.

00:05:45.620 --> 00:05:53.060
So the first thing which I need to do is arrays dot as list.

00:05:53.060 --> 00:05:56.345
Maybe what I can do is I can create a constructor so I can directly

00:05:56.345 --> 00:06:00.830
creating amine directly pass the input while creating object for that, right?

00:06:00.830 --> 00:06:06.120
So creating constructor, yes, that's good.

00:06:06.340 --> 00:06:14.760
Okay, so now I'm going to create a new student here.

00:06:15.310 --> 00:06:21.515
So my student name is going to be for name, class name is John.

00:06:21.515 --> 00:06:24.650
And I'm going to read one more student here.

00:06:24.650 --> 00:06:28.560
New student.

00:06:29.470 --> 00:06:34.235
And this student name is going to be Anansi.

00:06:34.235 --> 00:06:36.500
Okay, Let's enough.

00:06:36.500 --> 00:06:39.660
So, and I'm going to create,

00:06:40.750 --> 00:06:44.780
okay, So I have a list of students.

00:06:44.780 --> 00:06:46.820
So the heart, Let's just wouldn't,

00:06:46.820 --> 00:06:49.170
so, so what does editor here?

00:06:49.600 --> 00:06:53.000
Excellent digital argument, but what font?

00:06:53.000 --> 00:06:57.245
So I guess that so new student, Calm down to 100.

00:06:57.245 --> 00:07:00.425
Student isn't an offering from somewhere else.

00:07:00.425 --> 00:07:03.080
Commandant generics. Okay.

00:07:03.080 --> 00:07:05.780
Let me modify the name is student one.

00:07:05.780 --> 00:07:07.560
We'll see what happens.

00:07:08.380 --> 00:07:15.035
Okay. I think I might have some other glass name called ESL students,

00:07:15.035 --> 00:07:16.760
some medals and the back edge.

00:07:16.760 --> 00:07:20.660
So I'm going to change it until we end.

00:07:20.660 --> 00:07:25.110
It needs 212, then one.

00:07:27.520 --> 00:07:30.810
It's remoteness.

00:07:35.950 --> 00:07:40.535
Okay, So at Easter das this new student,

00:07:40.535 --> 00:07:43.565
object number one and object number 2,

00:07:43.565 --> 00:07:44.690
but still hamstrings and metal.

00:07:44.690 --> 00:07:46.450
What is in here?

00:07:46.450 --> 00:07:50.430
Student oneness his dad take.

00:07:51.640 --> 00:07:53.060
Okay.

00:07:53.060 --> 00:07:54.600
Got you. Yeah.

00:08:04.000 --> 00:08:08.030
I'm still wondering why still throwing mirror and weight is

00:08:08.030 --> 00:08:11.510
asking me to convert my classroom.

00:08:11.510 --> 00:08:12.844
It's not static.

00:08:12.844 --> 00:08:14.540
What's the problem here?

00:08:14.540 --> 00:08:16.430
Oh, okay, my bad.

00:08:16.430 --> 00:08:21.740
So I created this class to do an inside my class a that I should modify it to static.

00:08:21.740 --> 00:08:25.550
Or I can cut the class and keep it outside.

00:08:25.550 --> 00:08:27.380
Maybe for now I can use static here,

00:08:27.380 --> 00:08:29.690
so it will add missing that class anyway.

00:08:29.690 --> 00:08:31.805
So see now that it is gone.

00:08:31.805 --> 00:08:33.020
So now what I'm gonna do,

00:08:33.020 --> 00:08:35.465
I'm gonna pass the students.

00:08:35.465 --> 00:08:38.490
And let me run it.

00:08:39.340 --> 00:08:42.425
See, it still works.

00:08:42.425 --> 00:08:44.990
So it doesn't matter what kind of type you are passing.

00:08:44.990 --> 00:08:47.165
It will always work because a wildcard,

00:08:47.165 --> 00:08:48.575
it acts up anything.

00:08:48.575 --> 00:08:51.140
And the way how am I treating using object?

00:08:51.140 --> 00:08:52.625
If you're using object it can,

00:08:52.625 --> 00:08:57.210
it can accept all kinds of types, right? Thank you.
