WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.460
Hello everyone, welcome back.

00:00:02.460 --> 00:00:04.214
In our previous example,

00:00:04.214 --> 00:00:05.910
we discussed about the bone,

00:00:05.910 --> 00:00:07.230
the tibia example, right?

00:00:07.230 --> 00:00:08.865
So in this example,

00:00:08.865 --> 00:00:11.505
I'm going to show you a multiple bond here.

00:00:11.505 --> 00:00:13.995
Just take a look at this particular month or so.

00:00:13.995 --> 00:00:16.440
D extends comparable, right?

00:00:16.440 --> 00:00:18.120
So this is just a single bound.

00:00:18.120 --> 00:00:22.170
So what I'm gonna do is I'm going to copy the same method.

00:00:22.170 --> 00:00:24.735
And I'm going to the new class,

00:00:24.735 --> 00:00:27.120
and I'm going to recreate the same class again,

00:00:27.120 --> 00:00:29.025
and I'll just simply modify the name,

00:00:29.025 --> 00:00:31.810
find maximum multiple bond.

00:00:32.690 --> 00:00:35.685
Okay, So what does it mean here?

00:00:35.685 --> 00:00:41.485
Multiple bonds, which means one type will be extending a multiple types.

00:00:41.485 --> 00:00:46.890
Our multiple classes that is called as a multiple bond.

00:00:47.020 --> 00:00:50.240
Okay, So T extends comparable here.

00:00:50.240 --> 00:00:52.265
So what else is possible here?

00:00:52.265 --> 00:00:55.310
So what I want to do is I want to create

00:00:55.310 --> 00:00:58.700
the same method which will accept only the numbers.

00:00:58.700 --> 00:01:02.975
And also it allows to use the comparable as well.

00:01:02.975 --> 00:01:05.210
So let's do that.

00:01:05.210 --> 00:01:07.415
So let's similar way.

00:01:07.415 --> 00:01:11.330
So comparable and number we already used compatible here.

00:01:11.330 --> 00:01:16.655
So let's use the end symbol and then I'm going to use number here.

00:01:16.655 --> 00:01:19.705
Number of and I don't know type, number, type.

00:01:19.705 --> 00:01:21.335
So I'm using the generic here.

00:01:21.335 --> 00:01:22.865
See what has happened here.

00:01:22.865 --> 00:01:27.020
So it say something wrong here because the number

00:01:27.020 --> 00:01:31.055
has to comes first and because the comparable is a subclass again,

00:01:31.055 --> 00:01:33.109
but number is a higher priority.

00:01:33.109 --> 00:01:42.710
So we need to provide the number. It is anonymous, right?

00:01:42.710 --> 00:01:51.215
So I'm going to provide number as a first type and compatible as the second type.

00:01:51.215 --> 00:01:53.120
So now the error is gone.

00:01:53.120 --> 00:01:54.920
You cannot do the other way around.

00:01:54.920 --> 00:01:56.135
We need to know that priority.

00:01:56.135 --> 00:01:59.285
I mean, which one comes first, which then comes next.

00:01:59.285 --> 00:02:00.500
Right?

00:02:00.500 --> 00:02:06.050
So now what I'm gonna do there is no much changes in the implementation part.

00:02:06.050 --> 00:02:09.365
Just simply extended number and the compatible that sort.

00:02:09.365 --> 00:02:12.950
So let's go back to the praise example and I'm going to copy the same thing here,

00:02:12.950 --> 00:02:14.075
which is copy everything here,

00:02:14.075 --> 00:02:21.260
Control C. And let's go back here and let me create a main method here.

00:02:21.260 --> 00:02:25.145
And let pasted here. Okay, So instead of a display,

00:02:25.145 --> 00:02:29.120
I don't want to use this one because this is a radius one, right?

00:02:29.120 --> 00:02:31.310
Okay, so find the maximum.

00:02:31.310 --> 00:02:32.810
So I'm gonna use the,

00:02:32.810 --> 00:02:35.285
find a maximum with multiple bond.

00:02:35.285 --> 00:02:37.430
And here I'm using fine Mac,

00:02:37.430 --> 00:02:39.695
this same method which was working earlier,

00:02:39.695 --> 00:02:43.700
but it's not working here because I'm passing some strings here.

00:02:43.700 --> 00:02:49.205
Because string will not come center a number because that is not a numeric data, right?

00:02:49.205 --> 00:02:50.840
Just take a look at the previous example.

00:02:50.840 --> 00:02:52.730
The same thing is working here.

00:02:52.730 --> 00:02:56.690
But here I'm extending only the comparable,

00:02:56.690 --> 00:02:58.235
I mean, here I am,

00:02:58.235 --> 00:03:04.025
I'm extending onto the comparable string can use compatible, right?

00:03:04.025 --> 00:03:06.140
But string cannot be a number.

00:03:06.140 --> 00:03:08.780
So that is the reason the moment I pass a string here,

00:03:08.780 --> 00:03:10.220
it just throws me an error.

00:03:10.220 --> 00:03:13.220
Okay, so let's pass some valid data here.

00:03:13.220 --> 00:03:19.430
So I'm going to find my thumb toward the mother.

00:03:19.430 --> 00:03:21.545
I'm gonna call it find a max.

00:03:21.545 --> 00:03:23.375
So let's do some proper data.

00:03:23.375 --> 00:03:24.440
So 10 Command 2,

00:03:24.440 --> 00:03:26.880
and t come on Thursday.

00:03:29.770 --> 00:03:35.540
All right, So now it is working, there is no issue.

00:03:35.540 --> 00:03:39.180
So let me run this and I'll show you what is outcome here.

00:03:39.310 --> 00:03:41.600
To just take awhile, okay,

00:03:41.600 --> 00:03:43.040
so the maximum is 20 year,

00:03:43.040 --> 00:03:44.390
which is again wrong.

00:03:44.390 --> 00:03:46.670
So the maximum supposed to be 30, right?

00:03:46.670 --> 00:03:51.995
So why you're destroying it is showing 20 here. Let's see that.

00:03:51.995 --> 00:03:54.290
Omega C, Again, my bad.

00:03:54.290 --> 00:03:57.965
I use T2 here and again I use T2 here, it's supposed to be 33.

00:03:57.965 --> 00:03:59.420
So in that case,

00:03:59.420 --> 00:04:01.340
even in our previous example, we could have,

00:04:01.340 --> 00:04:02.780
I think somehow administrator here,

00:04:02.780 --> 00:04:05.510
so it's supposed to be t3 here.

00:04:05.510 --> 00:04:09.215
Okay, So now let me run it again.

00:04:09.215 --> 00:04:12.660
It has to show 30.

00:04:14.140 --> 00:04:17.120
Exactly LQ. Fine.

00:04:17.120 --> 00:04:20.600
Let's try to modify some other kind of a data.

00:04:20.600 --> 00:04:25.715
Find, maximum multiple bone dot, find maxima.

00:04:25.715 --> 00:04:29.690
And this demo, I'm going to pass some additional information.

00:04:29.690 --> 00:04:30.860
I mean decimal numeric, so okay,

00:04:30.860 --> 00:04:40.590
so 10-point 500 come out to 0.2525.23, something like that.

00:04:43.660 --> 00:04:51.410
So sorry, it's dot. Okay.

00:04:51.410 --> 00:04:53.070
So John.

00:04:55.390 --> 00:04:57.710
Okay, so now I can print

00:04:57.710 --> 00:04:58.890
them

00:05:07.390 --> 00:05:08.630
out.

00:05:08.630 --> 00:05:11.210
Okay, now I'm going to run it again.

00:05:11.210 --> 00:05:16.835
So the initial one is 30 and below is 25, 0.35.

00:05:16.835 --> 00:05:22.010
I can maybe make a change here so you can see it is reflecting every time.

00:05:22.010 --> 00:05:25.175
So now it has written a 100 point, 500.

00:05:25.175 --> 00:05:27.245
See, that's how it is.

00:05:27.245 --> 00:05:30.830
Okay, So when you're using multiple bonds,

00:05:30.830 --> 00:05:33.935
which means you're extending two classes here.

00:05:33.935 --> 00:05:40.820
So whatever the type we are passing to this particular method has to accept the number

00:05:40.820 --> 00:05:47.930
as well as the comparable because that is called as a multiple upper bound, right?

00:05:47.930 --> 00:05:49.970
So in the next video we're going to talk about the US,

00:05:49.970 --> 00:05:53.070
some other concept. Thank you.
