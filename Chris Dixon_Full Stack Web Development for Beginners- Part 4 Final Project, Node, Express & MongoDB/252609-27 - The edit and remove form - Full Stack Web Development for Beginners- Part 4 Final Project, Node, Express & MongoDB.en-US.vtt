WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.980 --> 00:00:05.880
If you go to our application and then go over to the admin section,

00:00:05.880 --> 00:00:11.700
so /admin and then go down to the bottom,

00:00:11.700 --> 00:00:14.805
we've already used this add new hotel link,

00:00:14.805 --> 00:00:16.125
which you see down here.

00:00:16.125 --> 00:00:21.165
But now we're going to move on and work with the Edits/Remove Hotel link.

00:00:21.165 --> 00:00:25.440
It is going to link to a form where the admin can search for

00:00:25.440 --> 00:00:30.765
a hotel by either using the hotel's id or the hotel name.

00:00:30.765 --> 00:00:33.255
Then once this form is submitted,

00:00:33.255 --> 00:00:36.360
it will return the match in hotel and allow us to

00:00:36.360 --> 00:00:40.155
move on to either update or delete the hotel.

00:00:40.155 --> 00:00:44.325
The first step is to create a page template with a form.

00:00:44.325 --> 00:00:49.710
Let's go over to the sidebar and then into our views,

00:00:49.710 --> 00:00:55.900
create a new file called edit_remove.pug.

00:00:57.620 --> 00:01:02.820
Inside here we can extend the layouts so extends

00:01:02.820 --> 00:01:10.110
layouts and then block contents and make sure that's spelled correctly.

00:01:10.110 --> 00:01:13.260
I'm just going to take a simple form where you can

00:01:13.260 --> 00:01:16.660
search for the hotel id or the hotel name.

00:01:16.660 --> 00:01:23.340
To begin, I'm just going to add a level 3 heading for the title which we'll pass later,

00:01:23.340 --> 00:01:27.810
the form, the action can be equal to

00:01:27.810 --> 00:01:30.220
an empty string because we're going to be adding

00:01:30.220 --> 00:01:33.555
a post request to the current route which we're on.

00:01:33.555 --> 00:01:39.000
The method is going to be POST and then

00:01:39.000 --> 00:01:45.030
nested inside here I'm going to add a div with the class of form_input.

00:01:45.030 --> 00:01:51.840
Let's begin by adding a label for the first one which is going to be the hotel id,

00:01:51.840 --> 00:02:00.880
so label for hotel_id and then the text of Hotel id.

00:02:01.190 --> 00:02:07.845
The input, it's going to have the type of text,

00:02:07.845 --> 00:02:12.430
the name of hotel_id,

00:02:12.830 --> 00:02:16.960
and then an id which matches its label.

00:02:21.260 --> 00:02:25.545
Remember before we said that we can either search for this hotel

00:02:25.545 --> 00:02:30.060
that wants to update or delete by using this hotel id,

00:02:30.060 --> 00:02:33.735
or we can search for the hotel name if we prefer.

00:02:33.735 --> 00:02:36.765
Let's add a p elements with the text of

00:02:36.765 --> 00:02:41.790
or so the user knows they can either uses it's id or the name.

00:02:41.790 --> 00:02:48.160
I'm going to copy this form inputs and then paste this in below.

00:02:49.040 --> 00:02:51.915
Make sure that it's all lined up nicely

00:02:51.915 --> 00:02:55.170
and then this one's going to be for the hotel name.

00:02:55.170 --> 00:02:58.540
Change id to be name,

00:02:59.120 --> 00:03:03.285
the name too, and also the id.

00:03:03.285 --> 00:03:06.090
This also has the input type of text

00:03:06.090 --> 00:03:11.895
too and the final thing we need to do is add a new form input.

00:03:11.895 --> 00:03:20.349
This is going to be for the button to submit which is going to be type of submit,

00:03:20.390 --> 00:03:24.780
and also the class to match some of the other buttons which we

00:03:24.780 --> 00:03:30.750
created earlier of button_small.

00:03:30.750 --> 00:03:33.100
The texts of confirm.

00:03:33.230 --> 00:03:36.840
Save that and then we're good to go.

00:03:36.840 --> 00:03:42.870
This is a form which is going to search for the hotel which you want to update or delete.

00:03:42.870 --> 00:03:46.575
If we now go over to our admin and.pug file,

00:03:46.575 --> 00:03:49.965
this is the middle link which looked at before.

00:03:49.965 --> 00:03:53.530
This now links to /admin/edit-remove

00:03:54.860 --> 00:03:58.650
so I'm going to copy this and then we can go ahead

00:03:58.650 --> 00:04:02.070
and deal with the route that this is linking to.

00:04:02.070 --> 00:04:07.665
We do this as always inside of the index.js file.

00:04:07.665 --> 00:04:11.685
I'm going to add this inside of this admin section.

00:04:11.685 --> 00:04:16.065
Router, and this is a get request,

00:04:16.065 --> 00:04:19.305
pasting the file path of edit remove.

00:04:19.305 --> 00:04:22.770
This is going to run the hotelController

00:04:22.770 --> 00:04:27.400
and I'm going to create a function called editRemoveGet.

00:04:29.390 --> 00:04:32.760
Now we can create this editRemoveGet inside of

00:04:32.760 --> 00:04:37.110
the hotelController, so down at the bottom,

00:04:37.390 --> 00:04:43.500
exports.editRemoveGet and set this

00:04:43.500 --> 00:04:48.850
up to be a function which takes in a request and response objects.

00:04:49.940 --> 00:04:53.100
All we need to do inside here is to arrest or

00:04:53.100 --> 00:04:56.790
render for all page template which is created.

00:04:56.790 --> 00:05:04.370
The page template was called edits_remove separated by comma.

00:05:04.370 --> 00:05:08.440
We can then pass in our title for our page of

00:05:08.440 --> 00:05:15.470
Search for hotel to edit or remove.

00:05:16.760 --> 00:05:19.530
Add a semicolon at the end.

00:05:19.530 --> 00:05:25.620
Save this and go over to the browser and then click on Edit/Remove Hotel.

00:05:25.620 --> 00:05:29.725
Hopefully we should get our form down at the bottom.

00:05:29.725 --> 00:05:37.140
Now we have our form once the admin hits the confirm button after adding an id or a name.

00:05:37.140 --> 00:05:40.470
This will then send a post request therefore we need to solve

00:05:40.470 --> 00:05:44.920
this post request again in the index.js.

00:05:45.530 --> 00:05:50.325
Then duplicate the code from before, paste this in.

00:05:50.325 --> 00:05:55.020
We are going to be using the same route but this time creating a post request.

00:05:55.020 --> 00:05:59.700
router.post and instead of editRemoveGet,

00:05:59.700 --> 00:06:02.580
it's going to be editRemovePost.

00:06:02.580 --> 00:06:06.180
Then set this up inside of our controller,

00:06:06.180 --> 00:06:14.350
also controller.js, so exports.editRemovePost.

00:06:16.730 --> 00:06:20.820
This is going to be dealing with the database so we can mark this as

00:06:20.820 --> 00:06:24.930
async so we can use a wait inside the function,

00:06:24.930 --> 00:06:27.554
pass in a request,

00:06:27.554 --> 00:06:31.150
response, and also next.

00:06:31.970 --> 00:06:36.420
Set up our try block and also the catch for

00:06:36.420 --> 00:06:44.310
any errors which would then pass to next.

00:06:44.310 --> 00:06:47.490
The first thing we're going to do in side of

00:06:47.490 --> 00:06:52.350
this try block is to grab the data which is being sent to us.

00:06:52.350 --> 00:06:56.190
Inside of our form, we're going to either receive a hotel id

00:06:56.190 --> 00:07:01.185
or the hotel name so let's have some constants to store these values.

00:07:01.185 --> 00:07:04.150
The first one of hotelId.

00:07:04.340 --> 00:07:10.200
This hotelId is going to be stored inside of the request.body.

00:07:10.200 --> 00:07:12.345
Because we're making a post request,

00:07:12.345 --> 00:07:17.085
we can access this data if we go over to our form in Edit/Remove.

00:07:17.085 --> 00:07:23.170
Now we can access this with the name which we gave it inside here of hotel_id.

00:07:23.390 --> 00:07:27.180
We use this inside here, so hotel_id,

00:07:27.180 --> 00:07:34.275
and I'm going to use the two pipe operator to say all or null.

00:07:34.275 --> 00:07:37.830
The reason we're doing this is because only either the hotel

00:07:37.830 --> 00:07:41.280
id or the hotel name is going to be present.

00:07:41.280 --> 00:07:44.085
Therefore, the overall is going to be null.

00:07:44.085 --> 00:07:48.555
Therefore, we need to handle what will happen if we get a null value.

00:07:48.555 --> 00:07:50.775
We can do the same just below.

00:07:50.775 --> 00:07:56.685
Constant for hotelName equals req.body,

00:07:56.685 --> 00:07:59.650
and this one is.hotel_name,

00:08:01.040 --> 00:08:06.430
so we will either have the hotel name or it will be null.

00:08:06.440 --> 00:08:12.780
Just like earlier, we're also now going to search or model using the.find method.

00:08:12.780 --> 00:08:24.070
Let's have the constants called hotelData equal to await Hotel.find.

00:08:24.950 --> 00:08:29.400
We're going to do something a little different this time because we don't

00:08:29.400 --> 00:08:33.585
know if we're searching for the hotel id or the hotel name.

00:08:33.585 --> 00:08:37.000
Because we can't be sure which data is being passed to us,

00:08:37.000 --> 00:08:41.570
Mongo provides us with the all operator and then we can provide

00:08:41.570 --> 00:08:46.355
an array of these two values to either search for one or the other.

00:08:46.355 --> 00:08:51.040
Passing our objects and then use the $or.

00:08:51.040 --> 00:08:54.400
This is going to take in an array

00:08:54.710 --> 00:09:00.090
and inside this array we can pass in our two values that we want to search for.

00:09:00.090 --> 00:09:02.055
Open up the curly braces.

00:09:02.055 --> 00:09:04.920
The first one is our hotel id.

00:09:04.920 --> 00:09:09.615
If we receive the hotel id from the form we want to search by the id.

00:09:09.615 --> 00:09:13.925
The id Mongo is _id so we can check if this is

00:09:13.925 --> 00:09:19.385
equal to hotel id which is our constant just here.

00:09:19.385 --> 00:09:21.775
If this isn't present,

00:09:21.775 --> 00:09:25.215
separated by comma, we can add a second check.

00:09:25.215 --> 00:09:29.790
The second case is for if we receive the hotel name instead of the id.

00:09:29.790 --> 00:09:36.225
Therefore, we want to check the field called hotel_name from our database.

00:09:36.225 --> 00:09:40.035
Then we want to check if this is equal to our hotelName variable,

00:09:40.035 --> 00:09:44.170
which we have just here. Add hotelName-

00:09:45.810 --> 00:09:49.765
I hope this makes sense. We are doing a find method,

00:09:49.765 --> 00:09:55.105
and we're using the o operator to check if one of these fields is a match.

00:09:55.105 --> 00:09:58.120
After using our dot find method,

00:09:58.120 --> 00:10:01.810
we're now going to specify a collation to search for.

00:10:01.810 --> 00:10:05.005
If we just remove the semicolon at the end for now,

00:10:05.005 --> 00:10:08.830
and then chain onto the end.collation,

00:10:08.830 --> 00:10:11.560
open up the brackets,

00:10:11.560 --> 00:10:14.260
and then pass in an object.

00:10:14.260 --> 00:10:18.400
Collation allows us to make language specific matches,

00:10:18.400 --> 00:10:20.845
so I'm just going to type itself and now.

00:10:20.845 --> 00:10:25.885
The locale is going to be sent to en, add a comma,

00:10:25.885 --> 00:10:30.475
and then the strength as a value of two,

00:10:30.475 --> 00:10:33.280
so let's add a semicolon at the end.

00:10:33.280 --> 00:10:36.655
Using collation, like we have here,

00:10:36.655 --> 00:10:40.540
collation allows us to make language specific matches.

00:10:40.540 --> 00:10:43.450
Here we're declaring we're using English texts,

00:10:43.450 --> 00:10:45.940
and the strength is an optional value.

00:10:45.940 --> 00:10:50.470
Setting the value of two is a secondary level of comparison,

00:10:50.470 --> 00:10:53.140
meaning it's not case sensitive.

00:10:53.140 --> 00:10:56.305
This is good because it means we can, for example,

00:10:56.305 --> 00:11:00.625
just type the word hotel inside of our form down here,

00:11:00.625 --> 00:11:04.210
just like this, without using a capital h,

00:11:04.210 --> 00:11:07.584
and you'll still find the hotel from the database.

00:11:07.584 --> 00:11:10.915
There is also different numbers you can use here too,

00:11:10.915 --> 00:11:15.190
and these are all listed in the documentation if you ever have a need for them.

00:11:15.190 --> 00:11:18.190
Then we're going to add an if else statements to handle

00:11:18.190 --> 00:11:22.675
the outcome of what to do if a result was found in the database.

00:11:22.675 --> 00:11:24.850
Back over to our code.

00:11:24.850 --> 00:11:27.774
After this creates an if statement.

00:11:27.774 --> 00:11:34.780
If the hotelData which

00:11:34.780 --> 00:11:40.675
is this constant just here,.length is greater than zero.

00:11:40.675 --> 00:11:43.690
Here we're basically checking if this fine method

00:11:43.690 --> 00:11:47.335
has stored any values inside the hotelData.

00:11:47.335 --> 00:11:50.410
If it does, the value will be greater than zero,

00:11:50.410 --> 00:11:54.110
so we can then go ahead and do a res.json,

00:11:54.110 --> 00:11:56.730
and output our hotelData.

00:11:56.730 --> 00:12:01.605
We will of course come back to this after making the hotelData our template,

00:12:01.605 --> 00:12:05.285
but for now we can just leave this as a res.json,

00:12:05.285 --> 00:12:08.305
then we add to the return keyword afterwards,

00:12:08.305 --> 00:12:12.175
so we don't move on to the l statement if the section is true.

00:12:12.175 --> 00:12:15.395
If it's false, we then create an else statement,

00:12:15.395 --> 00:12:20.230
and then we could do res.redirect to redirect

00:12:20.230 --> 00:12:27.040
the user to /admin/edit-remove.

00:12:27.180 --> 00:12:32.560
Basically if no data is found in the database or there is no matches,

00:12:32.560 --> 00:12:35.530
we'll just get redirected to the current page,

00:12:35.530 --> 00:12:38.570
so off to the browser we can give this a go.

00:12:38.970 --> 00:12:42.655
Then let's test for hotel 7,

00:12:42.655 --> 00:12:49.000
it confirm, and then we get our res.json with the hotelData returned.

00:12:49.000 --> 00:12:52.945
The hotel data matches hotel 7 which is good,

00:12:52.945 --> 00:12:56.380
and we also used the lower case for this search 2.

00:12:56.380 --> 00:12:59.215
Let's also try this with the hotel ID.

00:12:59.215 --> 00:13:02.950
Let's grab one of these hotel IDs from mLab,

00:13:02.950 --> 00:13:09.040
hotel 6, add this in, it confirm.

00:13:09.040 --> 00:13:12.610
Now we get back the value of hotel 6.

00:13:12.610 --> 00:13:17.290
What I want to do now, rather than doing a res,json just here,

00:13:17.290 --> 00:13:22.285
I'm going to create a new page template called hotel on the scroll detail.

00:13:22.285 --> 00:13:28.300
This will basically be the extended view of the hotel with the full description.

00:13:28.300 --> 00:13:31.390
Let's begin by removing our res.json,

00:13:31.390 --> 00:13:34.495
and instead do in res.render,

00:13:34.495 --> 00:13:39.260
pass in our template which we are going to create of hotel_detail.

00:13:41.070 --> 00:13:49.099
The title for the page of add/Remove Hotel,

00:13:51.120 --> 00:13:55.190
and then pass in our hotelData,

00:13:57.030 --> 00:13:59.140
then open up the sidebar.

00:13:59.140 --> 00:14:02.350
We can now create this hotel detail templates.

00:14:02.350 --> 00:14:09.440
Inside of views, create a new file of hotel_detail. I'll put.

00:14:09.870 --> 00:14:13.180
This templates will also be reused later,

00:14:13.180 --> 00:14:17.200
we'll also need it when we click on any of the individual hotels in

00:14:17.200 --> 00:14:21.430
our list to be then taken to the extended description view,

00:14:21.430 --> 00:14:24.250
so let's get to work on our hotel detail,

00:14:24.250 --> 00:14:28.195
so extends our layouts.

00:14:28.195 --> 00:14:33.025
This page is also going to be used to replace this res.json,

00:14:33.025 --> 00:14:35.560
so as soon as we have a matching hotel,

00:14:35.560 --> 00:14:38.105
we'll then display this hotel on the screen.

00:14:38.105 --> 00:14:42.060
We also need to import our hotel Mixin so we can reuse

00:14:42.060 --> 00:14:46.635
the same code and display this in place of this res.json.

00:14:46.635 --> 00:14:55.600
In our template, we can include mixins/_hotel, block contents.

00:14:55.740 --> 00:15:01.315
Indented m we're now going to loop through each hotel in hotelData.

00:15:01.315 --> 00:15:06.050
HotelData, remember, was passed to this template just here,

00:15:06.050 --> 00:15:08.295
back to our templates,

00:15:08.295 --> 00:15:09.945
we can create our loop,

00:15:09.945 --> 00:15:13.630
each hotel in hotelData.

00:15:14.610 --> 00:15:18.610
We can use the div of.hotel,

00:15:18.610 --> 00:15:21.745
so much as the rest of the CSS later,

00:15:21.745 --> 00:15:24.475
and then other will mixing will plus hotel

00:15:24.475 --> 00:15:28.900
passing in the individual hotel which we have here in the loop.

00:15:28.900 --> 00:15:30.835
Now if we save this,

00:15:30.835 --> 00:15:32.695
and then over to our code,

00:15:32.695 --> 00:15:38.515
reload the browser, and then scroll down.

00:15:38.515 --> 00:15:41.020
Now rather than this res.json,

00:15:41.020 --> 00:15:47.125
we're now rendering our hotel using this hotel detail.profile.

00:15:47.125 --> 00:15:52.360
We also pass in his hotel to our hotel Mixin to reuse the code,

00:15:52.360 --> 00:15:54.010
which displays our hotel.

00:15:54.010 --> 00:15:56.200
We're just about done for this video,

00:15:56.200 --> 00:16:02.065
the final thing I want to do at the top of this hotel is to add two buttons.

00:16:02.065 --> 00:16:04.885
One is going to be a button which is going to go ahead

00:16:04.885 --> 00:16:08.215
update this hotel which we selected,

00:16:08.215 --> 00:16:11.935
and then the second one is going to be to delete this hotel.

00:16:11.935 --> 00:16:16.180
In the hotel detail above our Mixin,

00:16:16.180 --> 00:16:19.045
let's add a link for our button.

00:16:19.045 --> 00:16:21.385
The href is going to go,

00:16:21.385 --> 00:16:23.995
I need the abatics,

00:16:23.995 --> 00:16:28.970
the hotel symbol. Hotel._ id/update.

00:16:32.790 --> 00:16:39.190
Here we're creating a route of the hotel ID, followed by /update.

00:16:39.190 --> 00:16:45.595
This is what we use in the next video to handle the update, nested inside here,

00:16:45.595 --> 00:16:52.400
add our button with the class of button small,

00:16:53.730 --> 00:16:57.770
and then the text of update hotel.

00:16:59.010 --> 00:17:02.455
Now if just copy these two lines,

00:17:02.455 --> 00:17:05.275
and add this in once more just below.

00:17:05.275 --> 00:17:08.260
These can be also for our delete routes,

00:17:08.260 --> 00:17:10.930
so change is to delete.

00:17:10.930 --> 00:17:14.050
Then this one can be Delete Hotel.

00:17:14.050 --> 00:17:17.290
Give that save and then reload the browser,

00:17:17.290 --> 00:17:20.215
confirm the form submission,

00:17:20.215 --> 00:17:24.055
and there's our update and delete buttons at the top.

00:17:24.055 --> 00:17:28.585
Later on, we'll also hide these buttons so only the admin can see them.

00:17:28.585 --> 00:17:30.460
Now inside of our admin section,

00:17:30.460 --> 00:17:37.480
we've created a button down at the very bottom which links to the edit remove hotel view.

00:17:37.480 --> 00:17:41.470
Inside here we can now search for a hotel by either using

00:17:41.470 --> 00:17:46.045
the ID or the name of our hotel just like this.

00:17:46.045 --> 00:17:48.295
We can then click confirm,

00:17:48.295 --> 00:17:52.000
were then taken to the hotel which was selected,

00:17:52.000 --> 00:17:56.200
and then we have the option to either update or delete this hotel,

00:17:56.200 --> 00:17:59.110
and this update hotel functionality

00:17:59.110 --> 00:18:02.900
is what we're going to be moving onto in the next video.
