WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.410 --> 00:00:05.310
If we head over to the homepage of our projects and then scroll down,

00:00:05.310 --> 00:00:10.920
below are hotels, and go down to other countries, which we have just here.

00:00:10.920 --> 00:00:15.990
We have a list of countries which have hotels located inside.

00:00:15.990 --> 00:00:20.160
If we click on any individual hotel link,

00:00:20.160 --> 00:00:28.050
such as this, this will take us to a route of /countries and then /country name.

00:00:28.050 --> 00:00:34.285
Currently we get a 404 because its route is not yet handled, as we see here,

00:00:34.285 --> 00:00:38.135
we will be fixing these in this video by displaying a template,

00:00:38.135 --> 00:00:40.190
which will display all the hotels in

00:00:40.190 --> 00:00:44.320
the database which are located in this particular country.

00:00:44.320 --> 00:00:48.755
As usual, let's get to work over in our index.js.

00:00:48.755 --> 00:00:51.960
Let's clean up some of these tabs for now.

00:00:53.650 --> 00:00:55.970
Index.js.

00:00:55.970 --> 00:01:01.735
Let's go down to our /countries and then add a new route which is below this.

00:01:01.735 --> 00:01:04.399
Since we are just getting a template,

00:01:04.399 --> 00:01:06.260
we can use a get request,

00:01:06.260 --> 00:01:09.440
so routed or gets, and then we can use /countries,

00:01:09.440 --> 00:01:13.035
just like we see in there.

00:01:13.035 --> 00:01:17.510
Then add our dynamic country name as a parameter.

00:01:17.510 --> 00:01:23.665
That's the colon, and let's call this the country.

00:01:23.665 --> 00:01:30.930
This is also going to use the hotel controller and then we can create hotels by country.

00:01:34.310 --> 00:01:40.315
If routs has a dynamic segments to capture the country from the URL.

00:01:40.315 --> 00:01:43.325
Let's go to our hotel controller.

00:01:43.325 --> 00:01:46.190
Create hotels by country function,

00:01:46.190 --> 00:01:49.990
and then we can grab this dynamic section from the URL.

00:01:49.990 --> 00:01:53.700
Hotel controller down at the very bottom,

00:01:53.700 --> 00:01:56.985
we will set this up as normal, export starts.

00:01:56.985 --> 00:02:01.830
Hotel by country will mark this as a sync,

00:02:01.830 --> 00:02:03.810
passing in the request,

00:02:03.810 --> 00:02:07.750
the response, and also next.

00:02:09.560 --> 00:02:12.855
Let's add our try section.

00:02:12.855 --> 00:02:19.820
Catch any errors and then as usual,

00:02:19.820 --> 00:02:22.440
we'll pass this to next.

00:02:24.260 --> 00:02:29.125
We'll begin by capturing the country from the overall parameters,

00:02:29.125 --> 00:02:32.695
and this is just like we did before with the hotel.

00:02:32.695 --> 00:02:38.290
Let's set obey constants called CountryParam,

00:02:38.290 --> 00:02:45.280
and this is the request..Params.country.

00:02:45.890 --> 00:02:51.995
Then we can setup our find method to search our database by the country.

00:02:51.995 --> 00:02:55.910
Columns, we'll call this the country lists,

00:02:55.910 --> 00:03:01.160
because it's going to be storing a list of countries which match our parameter,

00:03:01.160 --> 00:03:06.040
we will await Hotel.find,

00:03:06.040 --> 00:03:09.035
and then to only return our countries,

00:03:09.035 --> 00:03:13.430
we can pass in our objects passing the Country field which you

00:03:13.430 --> 00:03:18.720
want to match to and then match to our countryParam variable.

00:03:20.870 --> 00:03:24.590
Before we pass this data to our templates,

00:03:24.590 --> 00:03:30.160
let's first do a res.json to see what data is being returned from the database.

00:03:30.160 --> 00:03:34.120
res.json, and then pass in our country list,

00:03:34.120 --> 00:03:36.545
which should store a list of countries.

00:03:36.545 --> 00:03:38.795
It gives us the save and then

00:03:38.795 --> 00:03:43.880
reloads and make sure you still on the same routes as before,

00:03:43.880 --> 00:03:48.320
which is /countries and then a particular country just afterwards.

00:03:48.320 --> 00:03:50.600
Since we're on this USA route,

00:03:50.600 --> 00:03:54.050
we only seeing countries available in the USA.

00:03:54.050 --> 00:03:56.390
The test hotel were created before,

00:03:56.390 --> 00:03:58.220
was the country USA,

00:03:58.220 --> 00:04:01.555
and this hotel seven is the USA too.

00:04:01.555 --> 00:04:06.470
You may only have one per country depending on which country you clicked on.

00:04:06.470 --> 00:04:08.915
We can also change this in the URL.

00:04:08.915 --> 00:04:12.690
Change Mexico, and here we go.

00:04:12.690 --> 00:04:15.530
We'll have hotel nine and also hotel 10,

00:04:15.530 --> 00:04:19.110
which are in the country of Mexico. This is looking good.

00:04:19.110 --> 00:04:23.375
We now have the hotel data we need to pass to our templates.

00:04:23.375 --> 00:04:29.490
Now we can replace our res.json with a res.render.

00:04:30.670 --> 00:04:36.950
We're going to be creating a template called hotels by country.

00:04:36.950 --> 00:04:39.920
Using the underscores separated by comma,

00:04:39.920 --> 00:04:46.380
we can adds our objects which becomes contain the title or browse by country,

00:04:49.040 --> 00:04:53.270
and then also inside here we can add a dynamic section,

00:04:53.270 --> 00:04:56.850
which is going to be the name of the country which we're looking at.

00:04:56.850 --> 00:05:00.730
We're at this with the symbol, the curly braces,

00:05:00.730 --> 00:05:04.590
and then inside here we can add in the countryParam,

00:05:05.570 --> 00:05:10.190
and since we're now using some dynamic data in our string,

00:05:10.190 --> 00:05:14.380
we also need to change these quotations to be back ticks.

00:05:14.380 --> 00:05:19.910
Change these are the semicolon at the end and as well as its title.

00:05:19.910 --> 00:05:23.585
We can also add a comma and also possibly in our country list,

00:05:23.585 --> 00:05:27.315
which is the data and we're going to be needing inside the templates.

00:05:27.315 --> 00:05:31.340
CountryList and give us save.

00:05:31.340 --> 00:05:33.770
The final stage, as you already know,

00:05:33.770 --> 00:05:38.135
is to create these hotels by country.pug File,

00:05:38.135 --> 00:05:40.520
and make sure you spell correctly.

00:05:40.520 --> 00:05:44.285
Opened up the sidebar inside all views folder,

00:05:44.285 --> 00:05:49.020
create a new file called hotels by country.pug.

00:05:51.260 --> 00:05:54.465
This template like all others will extend

00:05:54.465 --> 00:06:00.170
our layout and we'll replace the block called content.

00:06:00.170 --> 00:06:04.235
Since it's templates will also be displaying the list of hotels,

00:06:04.235 --> 00:06:07.070
we also need to include our mixins.

00:06:07.070 --> 00:06:15.685
Include Mixins/_hotel, or hotelmixin.

00:06:15.685 --> 00:06:21.450
We can also pass in our title, h2 equals title.

00:06:21.450 --> 00:06:27.140
Now we need to loop through all the data in our hotel controller.

00:06:27.140 --> 00:06:31.970
Who seen in this country data is stored in a variable called countryList.

00:06:31.970 --> 00:06:39.070
Let's create a loop. Each hotel in countryList,

00:06:42.070 --> 00:06:51.110
creates a wrapper of.hotel_wrapper and impulse in our mixing with the plus symbol,

00:06:51.110 --> 00:06:58.160
plus hotel, and also passing the individual hotel data from our loop.

00:06:58.160 --> 00:07:04.510
We can also add a else block on here in case no matches are found for this country,

00:07:04.510 --> 00:07:07.260
display this on a list item.

00:07:07.260 --> 00:07:10.515
There are no hotels,

00:07:10.515 --> 00:07:13.400
and once you have a template which looks like this,

00:07:13.400 --> 00:07:17.160
let's give this a save and then reload.

00:07:17.180 --> 00:07:21.565
Now I'll res.json is replaced with our templates.

00:07:21.565 --> 00:07:26.565
Have a error, let's lookup the view hotels by country.

00:07:26.565 --> 00:07:28.610
Let's see what's going on.

00:07:28.610 --> 00:07:31.085
We have a spelling mistake, so hotel,

00:07:31.085 --> 00:07:34.289
and this is hotels,

00:07:34.289 --> 00:07:38.680
so just change this file name inside of our views.

00:07:40.520 --> 00:07:50.380
Rename, I just add a S on the end of that. Reload the browser.

00:07:50.450 --> 00:07:54.650
There's our dynamic level two heading or browse by country,

00:07:54.650 --> 00:07:57.295
when impulse in the country name,

00:07:57.295 --> 00:08:01.220
and there's a hotel nine and also the hotel 10,

00:08:01.220 --> 00:08:04.280
which we seen before inside of the JSON.

00:08:04.280 --> 00:08:08.125
Let's test a few more countries and see if this is all working.

00:08:08.125 --> 00:08:11.620
Let's go back to the homepage.

00:08:11.630 --> 00:08:14.580
Down to the very bottom.

00:08:14.580 --> 00:08:17.500
Let's try Jamaica.

00:08:17.750 --> 00:08:20.645
We have the dynamic title,

00:08:20.645 --> 00:08:23.515
and this country is in Jamaica.

00:08:23.515 --> 00:08:29.280
Down to Netherlands as our title,

00:08:29.280 --> 00:08:30.650
and our hotel free,

00:08:30.650 --> 00:08:32.870
which is inside of the Netherlands.

00:08:32.870 --> 00:08:35.780
Excellent, this is another step in our project,

00:08:35.780 --> 00:08:37.625
which we've now completed.

00:08:37.625 --> 00:08:40.190
I think now we have a lot of this working.

00:08:40.190 --> 00:08:43.850
We should now take a break from adding new features and go

00:08:43.850 --> 00:08:48.840
ahead and add some CSS styling to make it look a little nicer.
