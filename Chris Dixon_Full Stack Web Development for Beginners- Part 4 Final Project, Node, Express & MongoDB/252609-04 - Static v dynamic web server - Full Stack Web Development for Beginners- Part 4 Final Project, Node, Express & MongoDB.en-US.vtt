WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:05.430
You may be thinking, why are we using a web server to build projects?

00:00:05.430 --> 00:00:08.580
Haven't we gone fine so far without one?

00:00:08.580 --> 00:00:13.530
Well, this is a fair points among which I'll try to explain in this video.

00:00:13.530 --> 00:00:15.180
In a general way,

00:00:15.180 --> 00:00:19.785
we can categorize our websites into either static or dynamic.

00:00:19.785 --> 00:00:25.365
On the screen here we have our shape matching game opened up in the index.html.

00:00:25.365 --> 00:00:27.945
In all of our previous projects so far,

00:00:27.945 --> 00:00:33.400
if we open up the index.html and also opening up inside the browser,

00:00:33.400 --> 00:00:35.885
we have our HTML content.

00:00:35.885 --> 00:00:40.805
This HTML is all static as the content does not change.

00:00:40.805 --> 00:00:45.185
Yes, we may have some shapes appear in when the game starts.

00:00:45.185 --> 00:00:49.590
This is all done in the browser by using JavaScript.

00:00:49.730 --> 00:00:54.650
Inside the browser, if we go to right click and view page source,

00:00:54.650 --> 00:00:57.080
this will open up in a new tab.

00:00:57.080 --> 00:01:04.780
This is the exact same code displayed here as we see over in Visual Studio in our HTML.

00:01:04.780 --> 00:01:09.845
Even if we uploaded this project to a web server and made it live on the web,

00:01:09.845 --> 00:01:16.175
all of this content is still static and we'll get back the same results from the server.

00:01:16.175 --> 00:01:18.980
Basically in a static project like this,

00:01:18.980 --> 00:01:21.980
the server will send back what we gave it,

00:01:21.980 --> 00:01:24.485
such as the index page.

00:01:24.485 --> 00:01:28.220
Dynamic web pages on t [inaudible] he rondo can come back from

00:01:28.220 --> 00:01:33.250
the server a lot different than the code we can see in our text editor.

00:01:33.250 --> 00:01:40.685
If we go over to the finished version of our troubled projects and also open the browser.

00:01:40.685 --> 00:01:42.560
So don't worry about [inaudible] ,

00:01:42.560 --> 00:01:44.030
how all this looks.

00:01:44.030 --> 00:01:47.875
We'll learn about all this code during the next few sections.

00:01:47.875 --> 00:01:50.900
I'm going to go over to one of the hotel templates,

00:01:50.900 --> 00:01:52.970
which is inside views,

00:01:52.970 --> 00:01:58.635
and then if we go to hotel.pug, let's close it up.

00:01:58.635 --> 00:02:02.075
Again, don't worry about all this complicated code.

00:02:02.075 --> 00:02:05.480
For now though, I want you to concentrate on one thing.

00:02:05.480 --> 00:02:07.490
This is the hotel name,

00:02:07.490 --> 00:02:09.985
which is in a level three heading.

00:02:09.985 --> 00:02:15.065
The syntax might look a little confusing because of this shorter h3.

00:02:15.065 --> 00:02:18.980
But this just a h3 elements we've already learned about.

00:02:18.980 --> 00:02:23.530
After this is hotel.hotel_name.

00:02:23.530 --> 00:02:25.430
If we go over to the browser,

00:02:25.430 --> 00:02:27.965
we can see the hotel's actual name,

00:02:27.965 --> 00:02:31.055
such as Hotel 11 or Hotel nine,

00:02:31.055 --> 00:02:34.160
rather than this hotel.hotel name,

00:02:34.160 --> 00:02:36.290
which we'll see in Visual Studio.

00:02:36.290 --> 00:02:38.165
If we go to the browser,

00:02:38.165 --> 00:02:42.560
we can see the hotel's actual name is also available in the source.

00:02:42.560 --> 00:02:49.245
If we go to right click Inspect and then click on our hotel name,

00:02:49.245 --> 00:02:55.155
go to the elements and struck this down.

00:02:55.155 --> 00:03:00.335
Here we can see our outputted HTML which is returned back from the server.

00:03:00.335 --> 00:03:03.470
We have our h3, which we can also see here.

00:03:03.470 --> 00:03:08.195
Both is dynamic data has now been replaced with hotel name.

00:03:08.195 --> 00:03:11.630
Here we see that the web server this time is

00:03:11.630 --> 00:03:15.020
taken our hotel template from Visual Studio and

00:03:15.020 --> 00:03:17.705
filled in the missing data with data from

00:03:17.705 --> 00:03:22.015
our database before returning back towards in the browser.

00:03:22.015 --> 00:03:25.720
This is what dynamic web pages are all about.

00:03:25.720 --> 00:03:30.185
Static sites, just like the one we've seen before with the Shape matcher,

00:03:30.185 --> 00:03:33.515
a totally fine for simple applications.

00:03:33.515 --> 00:03:36.560
Even ones which still use API data too,

00:03:36.560 --> 00:03:38.380
such as our song finder.

00:03:38.380 --> 00:03:41.570
But dynamic science is perfect when we want to change

00:03:41.570 --> 00:03:45.095
data before sending it back to the browser.

00:03:45.095 --> 00:03:48.095
Or for security related tasks,

00:03:48.095 --> 00:03:51.995
such as handling sensitive information from the user.

00:03:51.995 --> 00:03:56.895
As we don't want it to be handled inside the browser. Hope it make sense.

00:03:56.895 --> 00:04:03.360
Next we're going to get up and running with our project using the Express framework.
