WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.650 --> 00:00:06.000
Before we look at how to get our data from the database or from a query,

00:00:06.000 --> 00:00:09.420
we first need to add some more data to get back.

00:00:09.420 --> 00:00:15.195
If you go over to mLab and if you have any this test data coming in place,

00:00:15.195 --> 00:00:18.910
we can remove it with the bin icon on the right-hand side.

00:00:18.910 --> 00:00:28.440
I want to clear all of the records in our database and make sure they're all gone.

00:00:28.440 --> 00:00:32.880
Let's go ahead and create five new hotels to work with.

00:00:32.880 --> 00:00:35.250
We can do this if we go to admin,

00:00:35.250 --> 00:00:42.290
so vote/admin/vote/add and then go down to [inaudible] at the bottom.

00:00:42.290 --> 00:00:44.870
The first one I want to call this Hotel 1

00:00:44.870 --> 00:00:48.185
and of course with a more creative name if you prefer.

00:00:48.185 --> 00:00:53.580
I'm going to grab some [inaudible] Ipsum texts to add for the description.

00:00:53.660 --> 00:00:57.515
Let's go down and create two paragraphs.

00:00:57.515 --> 00:01:07.695
It generates, Copy the sample text and Paste it in to our text area.

00:01:07.695 --> 00:01:12.510
The hotel image for Hotel 1 then select this.

00:01:12.510 --> 00:01:17.610
The star rating can be four, country Jamaica.

00:01:17.610 --> 00:01:22.480
Cost per night, now we can leave this as available.

00:01:23.060 --> 00:01:26.355
Now we redirect it to the hotel.

00:01:26.355 --> 00:01:29.745
We need to go back to our admin/add.

00:01:29.745 --> 00:01:32.830
Create Hotel 2.

00:01:34.160 --> 00:01:40.720
Paste in the description the image for Hotel 2.

00:01:41.360 --> 00:01:45.015
Then a star rating will go for five,

00:01:45.015 --> 00:01:47.715
country of Dominican Republic.

00:01:47.715 --> 00:01:52.860
Costs per night, add something there and confirm.

00:01:52.860 --> 00:01:57.860
It should be two hotels now in our database if we hit Reload,

00:01:57.860 --> 00:02:03.035
and there we are. Let's add three more.

00:02:03.035 --> 00:02:10.360
Again, /admin/adds. We can add hotel number three,

00:02:10.700 --> 00:02:17.920
adds the description hotel3.jpg.

00:02:18.200 --> 00:02:23.475
A star rating we go for three this time and Netherlands.

00:02:23.475 --> 00:02:28.365
Cost per night, say 45 and then confirm.

00:02:28.365 --> 00:02:33.705
Then we can add Hotel 4, admin adds.

00:02:33.705 --> 00:02:44.215
Then down to the bottom Hotel 4 Paste in the description the image.

00:02:44.215 --> 00:02:50.285
The star rating will go for five this time and the country of the Maldives.

00:02:50.285 --> 00:02:53.225
Cost per night, let's go for 89.

00:02:53.225 --> 00:02:56.320
Let me some how make this unavailable.

00:02:56.320 --> 00:02:59.120
It looks like we had a little issue there actually,

00:02:59.120 --> 00:03:01.220
we have both of these checked.

00:03:01.220 --> 00:03:02.870
Let's go to our form,

00:03:02.870 --> 00:03:07.220
add hotel and down to the check boxes or the radio buttons.

00:03:07.220 --> 00:03:11.175
Sorry. These needs have the same name,

00:03:11.175 --> 00:03:15.565
them too much in the same group, let's try reload in.

00:03:15.565 --> 00:03:18.650
Yet now we can just select one of these.

00:03:18.650 --> 00:03:21.510
Let's go over to the database.

00:03:23.630 --> 00:03:26.480
Now, we have all these available as true.

00:03:26.480 --> 00:03:30.870
I'm just going to go into any of these and click on the edit button.

00:03:31.190 --> 00:03:36.285
We'll set the availability this time to be false.

00:03:36.285 --> 00:03:39.250
It's Save and go back.

00:03:40.520 --> 00:03:45.315
Because now I have hotel number three to be set to false.

00:03:45.315 --> 00:03:48.570
Let's add one more which is Hotel 5.

00:03:48.570 --> 00:03:54.165
The description Hotel 5 image.

00:03:54.165 --> 00:03:58.410
The star rating let go for two this time.

00:03:58.410 --> 00:04:00.315
The country of Greece,

00:04:00.315 --> 00:04:05.060
cost per night and we can keep this one as available.

00:04:05.060 --> 00:04:11.329
Now, over in mLab we should now have five records with one of these being unavailable,

00:04:11.329 --> 00:04:13.760
which are said to be Hotel number three.

00:04:13.760 --> 00:04:16.640
We'll add the rest of the hotel's later on.

00:04:16.640 --> 00:04:19.070
But now we have some data to work with.

00:04:19.070 --> 00:04:21.140
I'm going to show you how to get it into

00:04:21.140 --> 00:04:26.395
our application inside of the hotelController.js.

00:04:26.395 --> 00:04:32.015
Let's select this and then we can go back to our list all hotels function.

00:04:32.015 --> 00:04:36.140
If we scroll up, we have the list all hotels just here.

00:04:36.140 --> 00:04:43.700
Returning all the data in our database is fairly easy using Mongos find method.

00:04:43.700 --> 00:04:46.475
Before we render all hotels,

00:04:46.475 --> 00:04:52.580
let's create a constant called all hotels and I'm going to

00:04:52.580 --> 00:04:58.820
set this to be await because we want this data to be pulled in before rendering template.

00:04:58.820 --> 00:05:02.300
We want to select our hotel model and then

00:05:02.300 --> 00:05:06.080
use the dot find method and a semicolon at the end.

00:05:06.080 --> 00:05:10.910
The find method will find all documents in our hotel collection

00:05:10.910 --> 00:05:16.345
and also search the hotel collection because we're using the hotel model just here.

00:05:16.345 --> 00:05:19.305
Here since we're using await once again,

00:05:19.305 --> 00:05:23.575
we also need to mark this function as a sync for it to work.

00:05:23.575 --> 00:05:27.399
Add sync just before our function parameters,

00:05:27.399 --> 00:05:33.325
we also want to handle any errors again two so we can wrap this code in a try block.

00:05:33.325 --> 00:05:37.230
Let's cut all these two lines of code,

00:05:37.230 --> 00:05:41.330
add a try block, paste this back-in,

00:05:41.330 --> 00:05:44.875
followed by a catch block to handle any errors.

00:05:44.875 --> 00:05:48.420
This catch block also takes in the errors as

00:05:48.420 --> 00:05:53.135
an argument and then we can also pass these on to next.

00:05:53.135 --> 00:05:55.715
Since we now call next,

00:05:55.715 --> 00:05:59.110
we also need to pass this into the function.

00:05:59.110 --> 00:06:05.375
Our next as the third arguments and before moving on we should check this is working.

00:06:05.375 --> 00:06:08.630
We can comment out this res.render that we have

00:06:08.630 --> 00:06:13.810
above and instead replace it with a res.json.

00:06:13.810 --> 00:06:17.760
This will add the data to the screen in JSON format.

00:06:17.760 --> 00:06:20.925
The data want to output is all hotels,

00:06:20.925 --> 00:06:23.385
which is this constant just here.

00:06:23.385 --> 00:06:28.590
So save this. Then we need to go over to the browser,

00:06:28.960 --> 00:06:33.195
and then go to /all hit,

00:06:33.195 --> 00:06:38.395
"Enter" and now we see all of our hotels in JSON format.

00:06:38.395 --> 00:06:42.560
This is all the data which we now pull in from the database.

00:06:42.560 --> 00:06:45.680
This looks like all of our Hotel is being returned.

00:06:45.680 --> 00:06:49.850
We can see all of our fields including the generated ID.

00:06:49.850 --> 00:06:52.280
Now, we know this is working we can then pass

00:06:52.280 --> 00:06:56.485
this data to our page template to go ahead and render.

00:06:56.485 --> 00:06:58.995
Back over to the controller.

00:06:58.995 --> 00:07:05.250
Let's comment out the res.json and uncomment out this render method.

00:07:05.250 --> 00:07:10.835
Along with rendering it, the all hotels templates and passing along the title,

00:07:10.835 --> 00:07:15.100
we also want to pass in this hotel data of all hotels.

00:07:15.100 --> 00:07:17.750
Separated by a comma, we can also pass in

00:07:17.750 --> 00:07:22.585
all hotels and this will now be available to use in the templates.

00:07:22.585 --> 00:07:27.420
If you give this a save and then go over to the all hotels templates,

00:07:27.420 --> 00:07:32.290
which is in views. Let's open this up.

00:07:32.360 --> 00:07:40.900
Let's test this working by selecting p elements and send this to the value of all hotels.

00:07:41.120 --> 00:07:45.150
Give that a save. Then over to the browser,

00:07:45.150 --> 00:07:48.460
we can reload the /all routes.

00:07:49.670 --> 00:07:52.900
Okay and scroll down.

00:07:53.210 --> 00:07:57.225
We see one giant object on the screen now.

00:07:57.225 --> 00:08:01.200
This is all the data which is now pulled in from the database.

00:08:01.200 --> 00:08:02.640
We can see if we look closely,

00:08:02.640 --> 00:08:04.305
we have hotel one,

00:08:04.305 --> 00:08:07.229
and then if we go further across,

00:08:07.229 --> 00:08:09.945
we have hotel two just here,

00:08:09.945 --> 00:08:12.570
and then hotel three further down.

00:08:12.570 --> 00:08:16.380
This is all the information from our hotels collection.

00:08:16.380 --> 00:08:21.045
We can also filter this down if we just want the first hotel, for example.

00:08:21.045 --> 00:08:23.760
We could select it by the index number.

00:08:23.760 --> 00:08:30.030
All hotels, the index number of zero, reload.

00:08:30.030 --> 00:08:33.375
That's all the data from our first hotel.

00:08:33.375 --> 00:08:37.230
Even further, we can narrow this down to the hotel name.

00:08:37.230 --> 00:08:41.295
Remember, hotel name is stored in hotel underscore name,

00:08:41.295 --> 00:08:47.800
so we can access it using the dot notation, so hotel name.

00:08:48.530 --> 00:08:52.335
There we go. There's our hotel one name.

00:08:52.335 --> 00:08:55.560
Now we have access to all this hotel data.

00:08:55.560 --> 00:09:01.590
We need to live through all hotels and display each one in this hotel mix-in.

00:09:01.590 --> 00:09:04.965
We already have the hotel mix-in just here.

00:09:04.965 --> 00:09:10.965
Once you create a loop which displays this mix-in with all the hotel information.

00:09:10.965 --> 00:09:14.410
Delete this p element from here.

00:09:15.200 --> 00:09:18.030
We can add our level two heading,

00:09:18.030 --> 00:09:20.295
which is the title.

00:09:20.295 --> 00:09:23.190
Then after this, we want to create our loop,

00:09:23.190 --> 00:09:29.050
and we'll do this with each hotel in all hotels,

00:09:29.750 --> 00:09:33.570
and then indent both these lines in.

00:09:33.570 --> 00:09:37.230
All hotels is the data which will be passed to

00:09:37.230 --> 00:09:42.255
the template with all the information from hotel one through to five.

00:09:42.255 --> 00:09:46.650
Each individual hotel will be stored in this hotel variable.

00:09:46.650 --> 00:09:53.565
Now if we save this and then reload the forward slash all routes and then scroll down,

00:09:53.565 --> 00:09:56.565
we see we have hotel number one.

00:09:56.565 --> 00:09:59.475
If we keep going down, we should have hotel one for

00:09:59.475 --> 00:10:02.775
each one of the items in our database.

00:10:02.775 --> 00:10:07.545
This is now repeated the same hotel in our mix-in for each item.

00:10:07.545 --> 00:10:12.240
This is a step in the right direction because we now have five items on the screen,

00:10:12.240 --> 00:10:15.120
but we want each hotel to be different.

00:10:15.120 --> 00:10:21.255
To do this, we need a way of passing the unique hotel data into the mix-in.

00:10:21.255 --> 00:10:24.450
Remember we said, before that this hotel variable

00:10:24.450 --> 00:10:27.914
here holds the individual hotel information,

00:10:27.914 --> 00:10:31.500
so this is the information which we need to pass to the mix-in.

00:10:31.500 --> 00:10:36.885
We can do this with our mix-in just here and pass in the hotel.

00:10:36.885 --> 00:10:42.945
This works because mix-ins are compiled to functions which can take in arguments.

00:10:42.945 --> 00:10:48.285
If we save this and then go over to our hotel data in our mix-in,

00:10:48.285 --> 00:10:55.800
down to mix-ins then underscore hotel up to our mix-in name at the top.

00:10:55.800 --> 00:10:58.605
We can also receive this hotel data,

00:10:58.605 --> 00:11:01.455
so passing hotel as an argument,

00:11:01.455 --> 00:11:06.000
and now we have the individual hotel data inside of this mix-in.

00:11:06.000 --> 00:11:09.000
This is where the good part begins to happen.

00:11:09.000 --> 00:11:12.180
Let's begin by displaying the hotel name.

00:11:12.180 --> 00:11:15.120
Scroll down to our level three heading.

00:11:15.120 --> 00:11:21.375
Here we have some hard-coded text because this is a variable we add to the equals,

00:11:21.375 --> 00:11:27.210
access the hotel, and then dot hotel underscore name.

00:11:27.210 --> 00:11:33.345
If we save this and then reload the browser, back up to the top,

00:11:33.345 --> 00:11:35.520
we have hotel one,

00:11:35.520 --> 00:11:41.200
hotel two, hotel three, four, and five.

00:11:41.480 --> 00:11:45.104
Now we see all the hotel names are unique.

00:11:45.104 --> 00:11:50.250
We can now carry on with the rest of the details making them all dynamic.

00:11:50.250 --> 00:11:54.420
Next, we can add the data from the two links.

00:11:54.420 --> 00:11:56.805
The href just up here,

00:11:56.805 --> 00:12:01.050
let's change this to be back ticks because this will be dynamic.

00:12:01.050 --> 00:12:04.485
This is going to link to the full hotel view,

00:12:04.485 --> 00:12:06.855
which is going to be our forward slash all.

00:12:06.855 --> 00:12:11.860
Then we can add our dynamic section, which is hotel._id.

00:12:13.220 --> 00:12:16.530
We'll deal with this route later on.

00:12:16.530 --> 00:12:19.770
We'll also do the same for the link below.

00:12:19.770 --> 00:12:25.170
Copy this and paste it in for the second link.

00:12:25.170 --> 00:12:29.220
Having these two links means both the image and also

00:12:29.220 --> 00:12:31.170
the hotel name will link to

00:12:31.170 --> 00:12:35.745
the full view of the hotel when the user clicks on either of these.

00:12:35.745 --> 00:12:39.300
Then we can deal with the file path for the image.

00:12:39.300 --> 00:12:44.970
At the moment, we just have the image hotel one hard-coded inside here.

00:12:44.970 --> 00:12:49.964
Let's change this to be back ticks forward slash images,

00:12:49.964 --> 00:12:53.115
the hotel's folder inside the images,

00:12:53.115 --> 00:13:00.420
and then forward slash we can open up the curly braces and then add hotel dot image.

00:13:00.420 --> 00:13:03.780
Inside of our database for the image,

00:13:03.780 --> 00:13:05.835
these images are saved.

00:13:05.835 --> 00:13:08.220
If we take a look, for example,

00:13:08.220 --> 00:13:11.715
image here is saved as hotel2.jpg.

00:13:11.715 --> 00:13:18.930
If we go over to Visual Studio and then into public and then images inside of the hotels,

00:13:18.930 --> 00:13:23.130
this name will match the name of the images which we'll have in here.

00:13:23.130 --> 00:13:27.090
Now if we save this and then reload the browser,

00:13:27.090 --> 00:13:31.590
we should now see the unique image for each hotel.

00:13:31.590 --> 00:13:35.940
We'll come back to the images later because we're going to be using

00:13:35.940 --> 00:13:41.490
Cloud Storage for image uploads rather than storing in our own project.

00:13:41.490 --> 00:13:46.185
Now let's head back over and finish off the rest of this dynamic data.

00:13:46.185 --> 00:13:48.345
The p elements are the bottom,

00:13:48.345 --> 00:13:50.745
but also now going to be dynamic.

00:13:50.745 --> 00:13:56.640
We need to surround this in back ticks, change the star.

00:13:56.640 --> 00:14:00.195
Rather than having the hard-coded value of four,

00:14:00.195 --> 00:14:02.985
we can again pass in our dynamic data.

00:14:02.985 --> 00:14:05.565
Hotel and then the field name,

00:14:05.565 --> 00:14:09.160
which is star underscore rating.

00:14:09.290 --> 00:14:11.400
The same for our country.

00:14:11.400 --> 00:14:13.665
We can surround this in back ticks,

00:14:13.665 --> 00:14:21.135
replace the hard-coded country with hotel dot country.

00:14:21.135 --> 00:14:24.220
The cost per night.

00:14:24.710 --> 00:14:31.510
First of all, we can add a currency symbol and then a space to create our dynamic data.

00:14:31.850 --> 00:14:42.315
Hotel.cost_per_night. Let's head over to the browser and see how this looks.

00:14:42.315 --> 00:14:47.550
Refresh our all hotels routes and check these all difference.

00:14:47.550 --> 00:14:50.610
We have four, Jamaica, and 67.

00:14:50.610 --> 00:14:54.390
Then we have the Dominican, Netherlands,

00:14:54.390 --> 00:14:58.800
and also the Maldives with different star ratings and prices too.

00:14:58.800 --> 00:15:04.050
Excellent. You should now be seeing all of your hotel data from the database.

00:15:04.050 --> 00:15:07.995
You may be also wondering where we have the hotel description,

00:15:07.995 --> 00:15:12.180
well we'll add this back in later because this is only to be displayed on

00:15:12.180 --> 00:15:17.310
the full hotel detail view where we have more available space.

00:15:17.310 --> 00:15:19.935
There is one little problem here though.

00:15:19.935 --> 00:15:24.105
The problem being we can also see hotel three.

00:15:24.105 --> 00:15:29.535
If we scroll down to hotel three just here,

00:15:29.535 --> 00:15:34.725
remember we set this hotel three to be unavailable when we first created it.

00:15:34.725 --> 00:15:37.605
This is pretty easy to resolve.

00:15:37.605 --> 00:15:41.475
All we need to do rather than just using the find method,

00:15:41.475 --> 00:15:44.010
we can also pass in a query.

00:15:44.010 --> 00:15:50.160
Back over to the hotel controller and to list all hotels.

00:15:50.160 --> 00:15:52.595
Inside of this find method we have here,

00:15:52.595 --> 00:15:55.400
we can begin by passing in a object,

00:15:55.400 --> 00:16:00.025
and then we can select the available fields from our database.

00:16:00.025 --> 00:16:06.015
Now we only want to find hotels which has this field set to true.

00:16:06.015 --> 00:16:13.245
We can do this with the $ symbol eq and set this to true.

00:16:13.245 --> 00:16:19.490
$ sign eq is a MongoDB query operator which checks for equality.

00:16:19.490 --> 00:16:24.850
Basically, only hotels with the field of available will then be returned.

00:16:24.850 --> 00:16:28.360
Now if we save this and then reload,

00:16:28.370 --> 00:16:33.540
now hotel four, and then it jumps to hotel two.

00:16:33.540 --> 00:16:37.020
It looks as though now hotel three is not being pulled in

00:16:37.020 --> 00:16:40.835
from the database because it doesn't match our query.

00:16:40.835 --> 00:16:43.190
Good. This is now all working.

00:16:43.190 --> 00:16:47.000
We're going to continue pulling in data from our database in

00:16:47.000 --> 00:16:53.160
the next video where we will be getting our hotels based on the country.
