WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.740 --> 00:00:04.080
Welcome back to this new section.

00:00:04.080 --> 00:00:07.275
Here you'll be learning all about user accounts,

00:00:07.275 --> 00:00:10.575
login in, registering new users,

00:00:10.575 --> 00:00:13.455
authentication, and so much more.

00:00:13.455 --> 00:00:17.760
To begin, just like when we started creating hotels,

00:00:17.760 --> 00:00:20.465
we need to use Mongoose to create a model,

00:00:20.465 --> 00:00:22.900
but this time for the user.

00:00:22.900 --> 00:00:25.770
Let's go over to Visual Studio,

00:00:25.770 --> 00:00:30.465
open the sidebar, and then inside of our models folder,

00:00:30.465 --> 00:00:33.120
we can go ahead and create a new file,

00:00:33.120 --> 00:00:39.490
this one is called user.js, and then close this down.

00:00:39.650 --> 00:00:44.580
We need to construct our model just like we did with the hotel.

00:00:44.580 --> 00:00:48.380
First of all, we need to add a constant of

00:00:48.380 --> 00:00:54.570
mongoose and then require the mongoose package,

00:00:54.920 --> 00:00:57.480
leave a semicolon at the end.

00:00:57.480 --> 00:01:00.235
If you remember from the hotel's,

00:01:00.235 --> 00:01:02.690
inside of the hotel.js,

00:01:02.690 --> 00:01:05.105
we created our hotel schema,

00:01:05.105 --> 00:01:07.685
set it to a new mongoose schema,

00:01:07.685 --> 00:01:11.160
and then constructed all of our fields and then added

00:01:11.160 --> 00:01:14.945
the data types and the various things inside of each one.

00:01:14.945 --> 00:01:19.270
We're going to get the same with this user.js.

00:01:19.270 --> 00:01:22.155
Let's start by creating our constants,

00:01:22.155 --> 00:01:25.630
this time this one is called the userSchema.

00:01:25.630 --> 00:01:31.570
This is equal again to a new mongoose dot Schema,

00:01:31.570 --> 00:01:37.615
capital S. Inside here we'll pass in our object.

00:01:37.615 --> 00:01:41.375
So our user is going to be pretty straightforward.

00:01:41.375 --> 00:01:45.440
It's going to have a first name, surname, an email,

00:01:45.440 --> 00:01:50.215
a password, and then an additional field at the end col is admin.

00:01:50.215 --> 00:01:52.620
Will come to this later on though,

00:01:52.620 --> 00:01:55.770
the first one is for the first name.

00:01:55.770 --> 00:01:58.710
So first underscore name,

00:01:58.710 --> 00:02:03.400
and then setup our structure inside of the curly braces.

00:02:03.400 --> 00:02:10.200
The name is going to be the type of string separated by a comma.

00:02:10.200 --> 00:02:13.700
We also need to make this field required,

00:02:13.700 --> 00:02:16.475
then the text in this field is missing,

00:02:16.475 --> 00:02:22.950
which is, first name is required, add a comma.

00:02:22.950 --> 00:02:27.810
We can trim any whitespace off by setting trim to be true,

00:02:27.810 --> 00:02:34.880
and a maximum number of characters to be further separated by a comma.

00:02:34.880 --> 00:02:37.840
We can do the same for the surname,

00:02:37.840 --> 00:02:40.635
so let's add surname.

00:02:40.635 --> 00:02:43.170
That's our second field.

00:02:43.170 --> 00:02:46.035
Open up the curly braces.

00:02:46.035 --> 00:02:50.980
It's still going to be pretty much the same so this will be the type of string.

00:02:51.470 --> 00:02:54.630
The required fields.

00:02:54.630 --> 00:02:56.610
It's like this time is,

00:02:56.610 --> 00:03:06.180
surname is required, trim again to be equal to true,

00:03:06.180 --> 00:03:10.720
and also a maximum number of characters to be 30.

00:03:10.720 --> 00:03:12.825
So there's our first name,

00:03:12.825 --> 00:03:18.685
our surname, next, open it to also capture the e-mail address.

00:03:18.685 --> 00:03:23.910
The e-mail address is going to also be the type of string.

00:03:24.620 --> 00:03:30.270
This will be required too with the text of email address is

00:03:30.270 --> 00:03:36.945
required, add a comma.

00:03:36.945 --> 00:03:38.715
We can also trim this,

00:03:38.715 --> 00:03:40.995
so trim to be true.

00:03:40.995 --> 00:03:45.180
We can also set this field to be unique.

00:03:45.180 --> 00:03:47.780
By setting unique to be true,

00:03:47.780 --> 00:03:49.490
this will make sure that we only have

00:03:49.490 --> 00:03:53.734
the same email address stored once inside of our database.

00:03:53.734 --> 00:04:00.250
We can also make sure that this is stored in lowercase by setting lowercase to be true.

00:04:00.250 --> 00:04:03.000
Add a comma after the email,

00:04:03.000 --> 00:04:05.860
and this is the password.

00:04:05.990 --> 00:04:10.595
The password needs to be the type of string two.

00:04:10.595 --> 00:04:18.330
It's also required, so password is required.

00:04:18.950 --> 00:04:25.480
We'll also add a new option to soon when we come back to encrypting our passwords,

00:04:25.480 --> 00:04:28.445
but for now we can just leave this data as it is,

00:04:28.445 --> 00:04:33.210
and then move on to the final one which is admin.

00:04:33.380 --> 00:04:37.935
Open this up. So admin,

00:04:37.935 --> 00:04:40.560
this is going to be a Boolean field.

00:04:40.560 --> 00:04:43.155
The type of Boolean,

00:04:43.155 --> 00:04:48.340
and also by default we want to set this to be false.

00:04:48.860 --> 00:04:54.364
This field is going to be used to add a admin user to our database.

00:04:54.364 --> 00:04:59.270
At the moment, we're going to set up any new user to not be an admin.

00:04:59.270 --> 00:05:02.360
Therefore, we set need default value to be false,

00:05:02.360 --> 00:05:05.090
and the only way to add this is by going

00:05:05.090 --> 00:05:08.375
inside the database and changing this to be true.

00:05:08.375 --> 00:05:14.140
We can then export our model down at the bottom, add a semicolon,

00:05:14.140 --> 00:05:22.570
and then module dot exports equals Mongoose dot model,

00:05:22.880 --> 00:05:25.990
the name of user,

00:05:26.090 --> 00:05:29.635
and then pass in our userSchema,

00:05:29.635 --> 00:05:33.740
which we declared up at the top just here.

00:05:33.740 --> 00:05:37.155
We just add off with a semicolon at the ends.

00:05:37.155 --> 00:05:41.970
Give them a save. Now this is our schema completed for now.

00:05:41.970 --> 00:05:46.775
As we already know, this model does not do anything by itself,

00:05:46.775 --> 00:05:53.580
so in the next video is on to creating a sign-up form so the user can't register.
