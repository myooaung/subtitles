WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.500 --> 00:00:03.825
If we go over to Visual Studio Code,

00:00:03.825 --> 00:00:07.650
and at the moment, if you go inside of the routes folder,

00:00:07.650 --> 00:00:11.070
and then click on the index.js,

00:00:11.070 --> 00:00:14.295
we only have one route currently setup,

00:00:14.295 --> 00:00:17.220
and this is for the homepage.

00:00:17.220 --> 00:00:21.630
Now we're going to look at how to add more routes too and if routing

00:00:21.630 --> 00:00:25.830
will allow us to handle what happens when a URL is visited.

00:00:25.830 --> 00:00:30.600
First, I'm not going to be using the users.js file,

00:00:30.600 --> 00:00:34.005
which has been included with the express generator.

00:00:34.005 --> 00:00:38.590
So we can go down and delete users.js,

00:00:39.280 --> 00:00:42.225
so we can this delete this from our project.

00:00:42.225 --> 00:00:45.455
Then inside of the app.js,

00:00:45.455 --> 00:00:47.450
click on the main file here.

00:00:47.450 --> 00:00:50.825
We also have two references to this user's file,

00:00:50.825 --> 00:00:52.900
which we can also delete.

00:00:52.900 --> 00:00:56.250
First of all, we can remove this variable,

00:00:56.250 --> 00:00:59.145
which points to the user's routes.

00:00:59.145 --> 00:01:04.490
So delete this, leaving just our main index file.

00:01:04.490 --> 00:01:06.470
Then a little bit further down,

00:01:06.470 --> 00:01:10.130
we'll have a app.use which sets we want to

00:01:10.130 --> 00:01:14.135
use this user's router on the user's file path just here we.

00:01:14.135 --> 00:01:16.670
So we can also remove this.

00:01:16.670 --> 00:01:21.290
Now back over to our router index.js file.

00:01:21.290 --> 00:01:24.210
Let's close down some of these tabs.

00:01:26.680 --> 00:01:30.340
At the top of this file we have two variables.

00:01:30.340 --> 00:01:34.075
We have an Express variable and also a route variable here.

00:01:34.075 --> 00:01:39.115
We have these so we can use the Router functionality which comes with Express.

00:01:39.115 --> 00:01:41.890
First of all, we require Express,

00:01:41.890 --> 00:01:47.195
which is a node package and this is inside of the node modules folder.

00:01:47.195 --> 00:01:51.250
If we require any packages from inside of the node modules,

00:01:51.250 --> 00:01:55.445
which is just here, we just need to reference it by the module name.

00:01:55.445 --> 00:02:01.120
If we are requiring any of the file which is not inside the node modules folder,

00:02:01.120 --> 00:02:04.895
we will need to add the full file path before the name.

00:02:04.895 --> 00:02:07.229
After setting our Express variable,

00:02:07.229 --> 00:02:10.724
we then set to open Express router instance,

00:02:10.724 --> 00:02:13.685
and store it in a router variable.

00:02:13.685 --> 00:02:16.760
This router variable is also used down here,

00:02:16.760 --> 00:02:19.480
and also any future routes too.

00:02:19.480 --> 00:02:23.825
We then use.get here because we are handling a get request.

00:02:23.825 --> 00:02:27.200
Remember when a user visits any page in the browser,

00:02:27.200 --> 00:02:28.955
this is a get request.

00:02:28.955 --> 00:02:33.265
In the last video we added a link to forward slash all.

00:02:33.265 --> 00:02:39.055
We added this over in our index.pug template, just here.

00:02:39.055 --> 00:02:42.550
This was to provide a link to all hotels.

00:02:42.550 --> 00:02:45.455
But we've not handled the route just yet.

00:02:45.455 --> 00:02:50.085
We go over to index page and select this link.

00:02:50.085 --> 00:02:53.595
We see we have taken it to forward slash all,

00:02:53.595 --> 00:02:57.325
but down at the bottom we have a message of Not_Found.

00:02:57.325 --> 00:03:00.520
We see all the header content just a little still because

00:03:00.520 --> 00:03:04.105
this content has been added to main layout file.

00:03:04.105 --> 00:03:07.480
So now we can go ahead and write our own route

00:03:07.480 --> 00:03:11.105
to handle the forward slash all hotels routes.

00:03:11.105 --> 00:03:13.620
So back in the index.js,

00:03:13.620 --> 00:03:16.305
where we're going to be handling all of our routes,

00:03:16.305 --> 00:03:23.085
we can start just like above with router and this is a get request so we use.get.

00:03:23.085 --> 00:03:29.275
Inside here, we want this to apply to the forward slash all routes,

00:03:29.275 --> 00:03:33.170
and other function as the second parameter.

00:03:33.170 --> 00:03:36.980
So function which takes in the request,

00:03:36.980 --> 00:03:40.165
and also the response objects.

00:03:40.165 --> 00:03:43.615
These two variable names can be anything which you prefer.

00:03:43.615 --> 00:03:48.520
Then open up the curly braces and add a semicolon at the end.

00:03:48.520 --> 00:03:55.720
Request is an object containing all the information from the HTTP request.

00:03:55.720 --> 00:04:00.820
As an example, we'll use this soon to access data from within a form,

00:04:00.820 --> 00:04:03.425
which is passed along with the request.

00:04:03.425 --> 00:04:06.145
Response, on the other hand,

00:04:06.145 --> 00:04:08.770
is what we want to send back when we get a request.

00:04:08.770 --> 00:04:12.205
So request is the data coming into the server,

00:04:12.205 --> 00:04:15.095
and then response is a response from the server.

00:04:15.095 --> 00:04:18.030
If you take a look above out-of-home routes,

00:04:18.030 --> 00:04:23.990
We have res.render a page template as a response from the server.

00:04:23.990 --> 00:04:27.580
We also looked at res.send earlier too.

00:04:27.580 --> 00:04:34.115
Here we can also render our all hotels template which we created just here.

00:04:34.115 --> 00:04:39.410
So inside of router.gets/all we can say,

00:04:39.410 --> 00:04:47.625
res.render, pass in our templates of all_hotels.

00:04:47.625 --> 00:04:53.880
Then as an object, we can pass in our title of all hotels.

00:04:57.080 --> 00:04:59.685
The semicolon at the end here.

00:04:59.685 --> 00:05:02.810
Now we can test this by going over to the browser,

00:05:02.810 --> 00:05:06.145
hit "Save", and then refresh.

00:05:06.145 --> 00:05:10.800
Make sure you only foward/all routes and then scroll down to the bottom.

00:05:10.800 --> 00:05:12.890
Now we can see this hotel,

00:05:12.890 --> 00:05:15.755
which we added as a mix in in the last video.

00:05:15.755 --> 00:05:19.610
Let's also test this once more by going over to the homepage,

00:05:19.610 --> 00:05:21.595
by clicking on the "Logo",

00:05:21.595 --> 00:05:23.870
clicking on "See All",

00:05:23.870 --> 00:05:26.960
and once again we can see this is still working.

00:05:26.960 --> 00:05:29.765
So now we have two routes in place.

00:05:29.765 --> 00:05:33.020
One for all hotels and one for the homepage.

00:05:33.020 --> 00:05:37.375
This is a basic introduction to handling routes with Express.

00:05:37.375 --> 00:05:41.405
In the next video we'll look at passing data for the URL,

00:05:41.405 --> 00:05:44.340
when we covert routes parameters.
