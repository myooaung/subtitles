WEBVTT
1
00:00:04.630 --> 00:00:06.130
Hello welcome in this lecture.

2
00:00:06.130 --> 00:00:09.570
We are going to be implementing a move within range functionality.

3
00:00:09.580 --> 00:00:15.190
So if I click on our target we move within the specified range rover and the fighter of two meters away

4
00:00:15.670 --> 00:00:16.390
of that target.

5
00:00:16.420 --> 00:00:18.790
So we're two meters away from the center of the target.

6
00:00:18.790 --> 00:00:19.810
And he stops.

7
00:00:19.810 --> 00:00:20.520
That's the idea.

8
00:00:20.520 --> 00:00:21.880
That's what we're going to implement in this letter.

9
00:00:21.880 --> 00:00:27.420
Let's dive in and see how so at the end of the last lecture we left the player standing here at the

10
00:00:27.420 --> 00:00:28.440
end of the world.

11
00:00:28.440 --> 00:00:32.700
Now this is obviously not where we want him because we want to be able to play with our combat.

12
00:00:32.700 --> 00:00:39.390
So I'm going to drag my player near the enemy and hook up the follow camera at some point we can do

13
00:00:39.390 --> 00:00:43.140
something more automatic with that but for now I think that's good.

14
00:00:43.170 --> 00:00:47.290
Let's go ahead and hit play and see where we're at.

15
00:00:47.310 --> 00:00:51.610
Click on the enemy and nothing's happening oh by the way I'm scaled in here for some reason dunno why.

16
00:00:52.140 --> 00:00:52.890
So I'm guy.

17
00:00:53.400 --> 00:00:54.060
I can't.

18
00:00:54.060 --> 00:00:55.290
It doesn't move towards the enemy.

19
00:00:55.290 --> 00:00:57.720
That's the first thing that seems wrong to me.

20
00:00:57.720 --> 00:01:01.370
I can't attack from this distance I should move towards the enemy when I click on him.

21
00:01:01.440 --> 00:01:03.330
So let's try that out.

22
00:01:03.330 --> 00:01:06.610
If I go over to my player controller.

23
00:01:06.600 --> 00:01:07.040
No no.

24
00:01:07.070 --> 00:01:08.340
I play controller the.

25
00:01:08.620 --> 00:01:11.070
The Fighter The Fighter script.

26
00:01:11.070 --> 00:01:18.000
Then I've got this attack that is currently happening here and what I would like it to do is actually

27
00:01:18.000 --> 00:01:21.230
use this to move towards the target.

28
00:01:22.410 --> 00:01:26.010
So we want to move in range but we also want to stop once we've got within range.

29
00:01:26.010 --> 00:01:31.230
So that's going to mean we're going to need to have some concept of the thing we're targeting so we

30
00:01:31.230 --> 00:01:36.150
can check whether we got within range and also the enemy might be moving around so we might need to

31
00:01:36.150 --> 00:01:42.120
keep moving to a different location is no good doing basically a move to in this attack because we might

32
00:01:42.120 --> 00:01:44.010
need to change that every frame.

33
00:01:44.010 --> 00:01:50.610
So because the enemy is a moving target I'm going to create an update function and that's where we're

34
00:01:50.610 --> 00:01:52.620
going to do our movement instead.

35
00:01:53.100 --> 00:01:59.650
So I'm going to have a target private variable it's going to be a combat target.

36
00:01:59.650 --> 00:02:07.580
Now in fact I'm going to just make it a transform because that way we can very easily get hold of the

37
00:02:07.580 --> 00:02:15.460
position of location and it's going to be the target currently not set to anything which means that

38
00:02:15.460 --> 00:02:19.120
we need to be able to set it and that we can do in attack.

39
00:02:19.120 --> 00:02:25.720
So if we have been told to attack this target then we're going to do probably easier if I call it one

40
00:02:25.720 --> 00:02:29.940
of them combat target I think so.

41
00:02:29.940 --> 00:02:34.280
So combat target I'm going to take the transform of and store it there.

42
00:02:34.280 --> 00:02:42.410
So now at any update in any frame the fighter knows whether it needs to attack or not because it has

43
00:02:43.070 --> 00:02:44.590
a target basically.

44
00:02:44.780 --> 00:02:53.550
So we can do an if statement here saying that the target is not no and if it's not now then we want

45
00:02:53.550 --> 00:02:56.230
to move towards it basically.

46
00:02:56.310 --> 00:03:00.240
So I'm going to get hold of they get components mover.

47
00:03:00.240 --> 00:03:06.140
Now I don't have the mover in here because I'm not using the right namespace.

48
00:03:06.270 --> 00:03:15.330
So if I do using RPG de movement it's going to give me access to the move a script like so and then

49
00:03:15.330 --> 00:03:24.350
I can call move to and the place I want to move is to the target's position want to move in that direction.

50
00:03:24.350 --> 00:03:31.040
Now if we go ahead and hit play now and where to click on the target we move directly to the target

51
00:03:31.040 --> 00:03:35.520
and stop right in the middle of him which isn't really what we want to do.

52
00:03:35.520 --> 00:03:39.400
We want to stop at a good range away from the target.

53
00:03:39.410 --> 00:03:45.160
So what I'm going to do is add a serialized field that's going to be our range for now.

54
00:03:45.170 --> 00:03:49.480
We're going to do things with weapon conflicts at some point but not just yet.

55
00:03:49.490 --> 00:03:58.070
So it's going to be a float and we'll call this the weapon range like so and I'm just going to set about

56
00:03:58.190 --> 00:04:04.850
two meters for now and this is going to be your challenge to see if you can stop him moving when he

57
00:04:04.850 --> 00:04:11.760
gets within that range but first let me show you how we can stop and now mash agent because at the moment

58
00:04:11.820 --> 00:04:18.540
and nav mesh agent if we head over into the movies the script is setting a destination and it's moving

59
00:04:18.540 --> 00:04:19.430
no matter what.

60
00:04:19.430 --> 00:04:20.940
It's never stopping.

61
00:04:21.000 --> 00:04:28.500
So I'm going to create a public method void called stop and it's not going to have to take any arguments

62
00:04:29.040 --> 00:04:30.790
and how can we stop and nav mesh agent.

63
00:04:30.810 --> 00:04:36.330
Well what we're going to do in fact we're referencing this in quite a few places I'd like to make this

64
00:04:36.810 --> 00:04:41.750
into something that we created on we get a reference to OnStar.

65
00:04:41.760 --> 00:04:48.840
So it's gonna be a now mash agent private variable which is going to be the reference to the nav mesh

66
00:04:49.050 --> 00:04:56.970
agents calling it what it is and then we'll have a start function which we're going to you get the component

67
00:04:56.970 --> 00:05:02.710
with nav mesh agent equals the get component of mesh agent.

68
00:05:03.100 --> 00:05:11.400
So which means that now that we're gonna use it in more places we don't have to keep getting the component

69
00:05:11.400 --> 00:05:14.550
all the time which is just a bit easier for us to read.

70
00:05:15.240 --> 00:05:17.780
So the nav mesh agent now and stop.

71
00:05:18.000 --> 00:05:19.250
How do we stop and nav mesh.

72
00:05:19.260 --> 00:05:27.090
Agent you could take a guess if you like and that pulls a video see what you can do here and you may

73
00:05:27.090 --> 00:05:33.180
or may not have found it but the property is called is stopped and you can actually as well as referencing

74
00:05:33.180 --> 00:05:35.130
this property as well as reading from it.

75
00:05:35.220 --> 00:05:38.670
You can set it so I can say is stopped equals true.

76
00:05:38.670 --> 00:05:42.710
Now obviously this needs a counterpart because we need to be able to restart this.

77
00:05:42.720 --> 00:05:47.350
So maybe when we call move to we are going to start it.

78
00:05:47.400 --> 00:05:54.180
So it's going to be is stopped equals true unless I have said move too in which case where it's going

79
00:05:54.180 --> 00:05:55.210
to start moving.

80
00:05:55.260 --> 00:06:02.220
So I think that's pretty clear so why don't we take it on as a challenge to stop within range check

81
00:06:02.670 --> 00:06:04.620
how far we are from the target.

82
00:06:04.830 --> 00:06:11.130
And if that is less than the range then stop you might need to do a little bit of searching around for

83
00:06:11.190 --> 00:06:16.620
seeing how we can find the distance between two vectors you might do a little Google search and you

84
00:06:16.620 --> 00:06:20.950
might find some useful snippets there and be able to understand them.

85
00:06:20.970 --> 00:06:27.780
So I do encourage you to do a little bit of your own your own looking up that post video and have a

86
00:06:27.780 --> 00:06:29.960
go.

87
00:06:30.460 --> 00:06:38.800
OK so we're going to dive in and I over in my fighter the first thing I want to do is check whether

88
00:06:39.250 --> 00:06:40.920
basically we are in range.

89
00:06:40.930 --> 00:06:44.670
So we're gonna need a boolean is in range like so.

90
00:06:44.710 --> 00:06:46.390
And what are we going to do.

91
00:06:46.390 --> 00:06:52.240
Well we're going to find the distance between the target position and our current position.

92
00:06:52.270 --> 00:06:58.020
So it's going to be vector three dot distance.

93
00:06:58.170 --> 00:07:01.600
It's a handy little function that we can use to get the distance between two vectors.

94
00:07:01.810 --> 00:07:11.890
So I can do a transform dot position which is my own position and I can do the target dot position and

95
00:07:11.890 --> 00:07:15.880
we can check that that is less than the weapon range.

96
00:07:15.890 --> 00:07:18.710
Then we are in range like so.

97
00:07:18.730 --> 00:07:24.420
So we're now in range and we can use that in this if statement.

98
00:07:24.430 --> 00:07:32.420
So we're going to say if the target is not null and it is in range then we're going to move too.

99
00:07:32.420 --> 00:07:37.130
Otherwise if we have no target and we're not in range in fact it's not going to work.

100
00:07:37.130 --> 00:07:40.830
Well we'll see and we'll sort it out if it doesn't it.

101
00:07:40.840 --> 00:07:45.870
Else then we are going to try and stop the mover.

102
00:07:45.880 --> 00:07:51.790
So again we've used this move at twice now we might want to think about extracting it sorry saving it

103
00:07:51.790 --> 00:07:58.900
in a in a start but I'm not going to do that in this lecture moved to and again stop if we either don't

104
00:07:58.900 --> 00:08:08.470
have a target or it is not in range so let's go and have a look hit play and click on the target and

105
00:08:08.500 --> 00:08:11.260
must be in range.

106
00:08:11.620 --> 00:08:15.930
Doesn't quite seem to be working that will be because I've got this the wrong way round.

107
00:08:15.940 --> 00:08:21.440
What we want to say is if it is not in range then moved to otherwise stop obviously.

108
00:08:21.460 --> 00:08:27.990
So let's try that again and clicking the target they go moves within range and stops two meters away

109
00:08:28.020 --> 00:08:30.960
and we can just make ourselves happy about that.

110
00:08:30.960 --> 00:08:36.510
If we go to our player you see at the moment there's a bizarre behavior where he kind of always tries

111
00:08:36.510 --> 00:08:39.440
to run back to that target because we never unset it.

112
00:08:39.440 --> 00:08:41.180
We're going to worry about that later.

113
00:08:41.210 --> 00:08:44.260
But if I change the weapon range to five.

114
00:08:44.280 --> 00:08:46.980
Then I come to mind by holding down come away.

115
00:08:47.130 --> 00:08:50.670
Then he stops for a further away depending on what that value is in the script.

116
00:08:50.670 --> 00:08:56.170
So hopefully you're happy that he is now moving within range as we set out to do.

117
00:08:56.310 --> 00:08:59.970
And I'll see you in the next section where we'll try and refine some of that behavior such as why we

118
00:08:59.970 --> 00:09:01.480
can't move away from the target.

119
00:09:01.500 --> 00:09:02.970
Once we've set it see that.
