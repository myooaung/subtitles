1
00:00:04,380 --> 00:00:05,430
Hello and welcome.

2
00:00:05,520 --> 00:00:10,770
In this lecture we are gonna be creating a fading carotene so that when I hit play on START we're going

3
00:00:10,770 --> 00:00:11,850
to fade out.

4
00:00:11,910 --> 00:00:15,930
It's gonna wait for the fade out to finish before printing something and fading back in very quickly

5
00:00:16,200 --> 00:00:18,680
and all of that is going to be configurable the amount of time.

6
00:00:18,750 --> 00:00:22,920
These are the building blocks with which we're going to create our fading out between scenes let's dive

7
00:00:22,920 --> 00:00:29,990
in and see how to create them so we've got this Fader object which allows us to change the alpha of

8
00:00:29,990 --> 00:00:31,370
the canvas group manually.

9
00:00:31,850 --> 00:00:38,390
But what we want to do is turn this into a scripted approach that effectively over time will fade the

10
00:00:38,390 --> 00:00:41,550
Alpha out and then back in again.

11
00:00:41,630 --> 00:00:44,720
This is fairly straightforward to do with Ko routines.

12
00:00:44,720 --> 00:00:47,030
But first of all let's go ahead and create a class.

13
00:00:47,050 --> 00:00:52,070
So I'm gonna go over to do this in Visual Studio code and in the scene management fall down and add

14
00:00:52,070 --> 00:01:01,040
a new file called Fader dot c s and then I am going to create a mono behavior and it is going to be

15
00:01:01,040 --> 00:01:13,370
put into a namespace of type RPG dot scene management like so and then in this we are going to create

16
00:01:15,140 --> 00:01:15,990
code routine.

17
00:01:16,160 --> 00:01:18,980
So we're going to need to return AI in numerator.

18
00:01:19,100 --> 00:01:21,090
And this isn't included yet.

19
00:01:21,110 --> 00:01:25,430
And then we aren't going to have a functional fade out.

20
00:01:25,730 --> 00:01:28,670
And the argument is going to take is a float time.

21
00:01:28,670 --> 00:01:31,760
That's the time it's going to take to fade out.

22
00:01:31,790 --> 00:01:36,740
Now we're going to need to include the right namespace for iron numerator so controlled dots will do

23
00:01:36,770 --> 00:01:43,100
a using System dot collection and it's giving us an error on fade out because we're not yielding anything

24
00:01:43,100 --> 00:01:44,650
returning anything.

25
00:01:44,690 --> 00:01:47,300
So what are we going to put in fade out.

26
00:01:47,510 --> 00:01:53,030
Well the general structure of this is that we're going to go over for a few frames.

27
00:01:53,030 --> 00:02:01,610
We are going to every frame update the alpha by a certain amount so that at the after the time given

28
00:02:01,610 --> 00:02:07,310
in here the value of the Alpha will have arrived at 1.

29
00:02:07,400 --> 00:02:10,160
So we're going from zero to 1 in a fade out.

30
00:02:10,160 --> 00:02:11,480
So how is that going to look.

31
00:02:11,480 --> 00:02:14,720
How much Alpha do we need to be applying each frame.

32
00:02:14,720 --> 00:02:15,440
Let's have a look.

33
00:02:15,440 --> 00:02:22,760
So imagine these are your frames that you have in which you are going to update the alpha to get from

34
00:02:22,760 --> 00:02:27,010
zero at the beginning of this all the way to one at the end.

35
00:02:27,380 --> 00:02:33,940
So at the time this takes is the time variable and that's how much time we've got to do fade.

36
00:02:34,160 --> 00:02:39,920
And each individual chunk each in the visual frame takes up delta time amount.

37
00:02:39,920 --> 00:02:42,530
So how many frames do we have in total.

38
00:02:42,530 --> 00:02:46,100
Well you can have a little mini challenge here if you want to figure out how many frames we have in

39
00:02:46,100 --> 00:02:49,420
total from the delta time in the time.

40
00:02:49,650 --> 00:02:50,080
That's right.

41
00:02:50,090 --> 00:02:54,220
It is n divide is going to be the time divided by the delta time.

42
00:02:54,240 --> 00:02:55,710
That's how many chunks we've got right.

43
00:02:55,710 --> 00:02:58,880
Simple maths and the Delta Alpha.

44
00:02:59,070 --> 00:03:05,280
How much we have to change Alpha in each one of these frames to go from zero to one is going to be one

45
00:03:05,340 --> 00:03:06,440
divided by n.

46
00:03:06,450 --> 00:03:12,300
Because we want to go from zero to one that's a change of one amount when he unit and if we divide that

47
00:03:12,300 --> 00:03:16,200
through equally between all the frames that we'll make give us the Delta Alpha.

48
00:03:16,560 --> 00:03:22,730
So in total what we end up with is Delta Alpha is equal to 1 times delta time divided by time.

49
00:03:22,740 --> 00:03:29,040
And if you know your mass one times is just negligible we don't need to have that in there it's the

50
00:03:29,040 --> 00:03:32,220
same as saying delta time divided by time.

51
00:03:32,400 --> 00:03:34,830
So that's what we're going to want to update every frame.

52
00:03:34,830 --> 00:03:40,280
How do we do something every frame in a car routine when why not use starts.

53
00:03:40,290 --> 00:03:43,630
Well we want to do every frame but only for a limited amount of time.

54
00:03:43,710 --> 00:03:50,040
So we're gonna put in a while loop that says Do this only for a limited amount of time for now I'm just

55
00:03:50,040 --> 00:03:50,550
going to leave.

56
00:03:50,550 --> 00:03:55,980
The condition is false which basically means it's not going to ever execute but I am going to leave

57
00:03:55,980 --> 00:04:02,430
it up to you to actually flesh this out maybe mini challenge for you to think about when is it that

58
00:04:02,430 --> 00:04:04,230
we should stop this car routine.

59
00:04:04,230 --> 00:04:09,060
When is it that we aren't executing anymore Well we're not going to be executing anymore.

60
00:04:09,060 --> 00:04:14,610
Once Alpha has reached 1 so the condition for a while loop is going to be the opposite of that that

61
00:04:14,670 --> 00:04:21,770
Alpha is not one because we want to update Alpha until it is 1.

62
00:04:22,230 --> 00:04:25,340
Similarly inside the body of the while loop.

63
00:04:25,380 --> 00:04:31,520
What are we going to be doing moving Alpha towards 1 right.

64
00:04:31,540 --> 00:04:38,710
And the amount we're moving it is given by this equation here for you to figure out how to do so that

65
00:04:38,710 --> 00:04:44,590
is the basics of it but we're going to need a few more things we're going to need for a start access

66
00:04:44,650 --> 00:04:46,180
to our canvas group.

67
00:04:46,180 --> 00:04:53,050
So many challenge if you like to get access to the canvas group we're going to create a canvas group

68
00:04:53,320 --> 00:05:01,790
variable and I'm just in a cool less canvas group and in start let's create a start method.

69
00:05:01,970 --> 00:05:09,160
We're just going to set that canvas group variable to a get component of type canvas group.

70
00:05:09,380 --> 00:05:17,350
Like so now with that canvas group you're able to do things like do the canvas group dots Alpha and

71
00:05:17,350 --> 00:05:20,190
you can set that and you can get the Alpha value from that.

72
00:05:20,590 --> 00:05:22,600
But what I'm also gonna do for testing purposes.

73
00:05:22,600 --> 00:05:29,110
Because we're not calling this car routine from anywhere is we going to start the keratin here in start

74
00:05:29,260 --> 00:05:32,980
and just use it to debug our fading in and fading out.

75
00:05:32,990 --> 00:05:38,730
So I'm going to do a fade out of three seconds like so just to test things out.

76
00:05:38,740 --> 00:05:41,530
Obviously nothing is going to happen just yet.

77
00:05:41,530 --> 00:05:48,160
And by the way to make something wait for one single frame in a car routine if you don't already know

78
00:05:48,160 --> 00:05:48,550
this.

79
00:05:48,760 --> 00:05:53,230
You need to yield return something because that's what we do when we want to wait for anything to happen

80
00:05:53,260 --> 00:05:55,870
inside a car routine and the way to wait.

81
00:05:55,900 --> 00:05:58,210
Exactly one frame is a yield return.

82
00:05:58,220 --> 00:05:59,920
No it's very simple.

83
00:05:59,920 --> 00:06:06,580
We'll return null basically says to you and say hey this coating should be run again on the next possible

84
00:06:06,580 --> 00:06:07,890
opportunity on the next frame.

85
00:06:07,960 --> 00:06:09,480
And that's what we'll do.

86
00:06:09,490 --> 00:06:12,810
So your challenge is to finish this car routine off.

87
00:06:12,880 --> 00:06:16,880
What should the end condition be and what and how.

88
00:06:16,890 --> 00:06:22,900
Will you update the alpha pose video and have a go OK.

89
00:06:22,900 --> 00:06:24,070
Welcome back.

90
00:06:24,070 --> 00:06:26,310
So we're going to have a go.

91
00:06:26,320 --> 00:06:28,440
The Alpha is not one.

92
00:06:28,450 --> 00:06:29,500
So let's try that.

93
00:06:29,500 --> 00:06:36,640
I'm going to do a canvass group dot Alpha is not equal to one.

94
00:06:36,670 --> 00:06:37,650
Simple as that.

95
00:06:37,720 --> 00:06:38,940
That should work for now.

96
00:06:38,950 --> 00:06:45,070
And there is a caveat here that generally we should never do equality comparisons between floats but

97
00:06:45,070 --> 00:06:46,240
it will work.

98
00:06:46,240 --> 00:06:50,020
It's just a general safety thing that we shouldn't do it and I'll show you how we can get around that

99
00:06:50,020 --> 00:06:50,680
in a sec.

100
00:06:50,740 --> 00:06:52,250
But don't worry about it for now.

101
00:06:52,480 --> 00:06:56,020
OK now we're going to move the alpha towards one how we're going to do that.

102
00:06:56,020 --> 00:07:01,390
Well canvass group dot Alpha plus equals I'm going to increment Alpha and I'm going to incremented by

103
00:07:01,390 --> 00:07:06,730
that Delta amount that we looked at on the previous slide which is just the delta time divided by time.

104
00:07:06,730 --> 00:07:13,480
So it's going to be time dot Delta time divided by time which is the total time it's going to take us

105
00:07:13,600 --> 00:07:17,130
and that should allow us to increase Alpha all the way up to 1.

106
00:07:17,140 --> 00:07:19,300
Well let's see if that does the trick.

107
00:07:19,300 --> 00:07:24,030
Let's go ahead and hit play and it's not working because I haven't put the fader script on the fader

108
00:07:24,040 --> 00:07:26,540
game object let's add that and see if it works.

109
00:07:26,550 --> 00:07:32,970
Now Yep sure enough it is fading out over the course of about three seconds up to 1 and then Alpha stops

110
00:07:32,970 --> 00:07:33,740
at 1.

111
00:07:33,800 --> 00:07:35,250
Is what we'd expect.

112
00:07:35,250 --> 00:07:42,480
Now generally speaking is this could be a bit dodgy because for example we could overshoot alpha in

113
00:07:42,480 --> 00:07:48,960
this case the alpha in canvas group doesn't allow us to overshoot it clamps it but it is possible that

114
00:07:48,960 --> 00:07:53,320
we could have overshot alpha so that we shouldn't really have done an equality here.

115
00:07:53,380 --> 00:08:00,930
Could've done inequality for example so we should say that while Alpha is maybe less than one would

116
00:08:00,930 --> 00:08:05,660
have been a better option here and we can give that a try it should be the same.

117
00:08:05,670 --> 00:08:06,650
Go ahead and hit play.

118
00:08:06,660 --> 00:08:09,610
It should increase until it reaches 1.

119
00:08:09,900 --> 00:08:10,490
Perfect.

120
00:08:10,560 --> 00:08:11,920
Done done the job.

121
00:08:11,910 --> 00:08:12,870
And that's about it.

122
00:08:12,900 --> 00:08:15,220
That's what we want to do with a fade out now.

123
00:08:15,240 --> 00:08:17,880
I'd like to create a fade in as well.

124
00:08:17,880 --> 00:08:24,270
So let's go ahead and just copy this method and we won't try and extract it out and make it more abstract

125
00:08:24,300 --> 00:08:24,800
than this.

126
00:08:24,810 --> 00:08:30,960
We're just going to change it to a phased in over certain amount of time fade in basically is going

127
00:08:30,960 --> 00:08:32,340
from one to zero.

128
00:08:32,340 --> 00:08:37,500
So you might want to have a little mini challenge here to update the code here to allow it to go from

129
00:08:37,500 --> 00:08:40,490
1 to 0 1 2 0 instead of 0 to 1.

130
00:08:40,500 --> 00:08:46,780
So have a go Okay so what we're going to do is we gonna have to change this inequality around so it's

131
00:08:46,780 --> 00:08:50,340
gonna be that Alpha has to be greater than zero while it's greater than zero.

132
00:08:50,340 --> 00:08:52,360
We're going to be decreasing the alpha.

133
00:08:52,510 --> 00:08:58,300
So it's going to be a minus equals and still the same amount of time applies because according to our

134
00:08:58,300 --> 00:09:00,760
slide we're still making a change of one.

135
00:09:00,790 --> 00:09:01,000
Right.

136
00:09:01,000 --> 00:09:05,290
We're going from zero to one it's still a change of one over the whole time span.

137
00:09:05,710 --> 00:09:08,720
So that should be allowing us to do fade in.

138
00:09:08,800 --> 00:09:13,180
Now what I'm gonna do is actually show you how we can nest Ko routines here.

139
00:09:13,250 --> 00:09:19,610
What I'm going to do is create a new car routine I enumerate or called fade out in.

140
00:09:19,660 --> 00:09:23,280
Which is going to fade out and then fade back in again.

141
00:09:23,410 --> 00:09:29,950
And what I want to show you is that we can yield return a KO routine function really a function that

142
00:09:29,950 --> 00:09:37,390
returns an iron numerator and by doing that we are telling this co routine the fade out in that it should

143
00:09:37,390 --> 00:09:45,610
wait until this carotene has finished so I can do a three second fade out then I can do a print statement

144
00:09:45,610 --> 00:09:55,680
saying faded out and then I can yield return the fade in Chi routine and maybe I don't know.

145
00:09:55,690 --> 00:10:00,230
Take two seconds to do that so it should be a bit quicker or maybe one seconds make it really obvious

146
00:10:00,260 --> 00:10:01,050
that it's quicker.

147
00:10:01,160 --> 00:10:07,580
And then after that fade has finished we are going to print faded in like so.

148
00:10:08,090 --> 00:10:14,540
So we can tell hopefully that this is waiting because of these print statements.

149
00:10:14,660 --> 00:10:19,580
So I'm going to instead of starting our fade currently I'm going to start our fade out in routine and

150
00:10:19,580 --> 00:10:28,590
start and see what happens let's get my console open and clear the logs and hit play so starting fading

151
00:10:28,590 --> 00:10:35,030
out and we get our log message saying fade out and then very quickly afterwards one second afterwards

152
00:10:35,350 --> 00:10:38,250
it fades back in and we've got our faded in log message.

153
00:10:38,270 --> 00:10:41,020
So that's how nesting coatings works.

154
00:10:41,040 --> 00:10:45,770
It can be very very handy and we're going to use that here in our transition because we want to fade

155
00:10:45,770 --> 00:10:52,190
out before we do our scene load because we don't want any jarring changes to the scene to be visible

156
00:10:52,190 --> 00:10:55,900
so we want to make sure we're fully Alford out the scene.

157
00:10:55,940 --> 00:11:02,090
So to summarize this lecture we've created this fatal component and we have created two main code routines

158
00:11:02,120 --> 00:11:07,270
which I'm actually going to make public so public fade out and public fade in.

159
00:11:07,280 --> 00:11:13,310
Which are going to be the interface to this Fader that just allows us to fade it out over time and fade

160
00:11:13,310 --> 00:11:15,380
it back in over time.

161
00:11:15,380 --> 00:11:20,840
Great stuff in the next lecture we're going to learn how we can make this Fader persist between scenes

162
00:11:20,840 --> 00:11:23,210
so there's only ever one fader.

163
00:11:23,210 --> 00:11:24,470
I look forward to seeing you that.
