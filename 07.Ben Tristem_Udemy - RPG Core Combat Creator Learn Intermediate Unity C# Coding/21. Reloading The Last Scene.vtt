WEBVTT
1
00:00:04.590 --> 00:00:05.490
Hello and welcome.

2
00:00:05.490 --> 00:00:11.400
In this lecture we're gonna be making it so that we automatically remember Which scene we last saved

3
00:00:11.400 --> 00:00:11.520
in.

4
00:00:11.520 --> 00:00:18.840
So if I had gone through to sandbox scene to like I have here and I was just hanging around in this

5
00:00:18.840 --> 00:00:25.460
area then what happens is that the checkpoint that I went through that particular gate is remembered.

6
00:00:25.590 --> 00:00:31.590
And if I go ahead and hit play again it loads me in to sandbox Scene 2 which was the last place I was

7
00:00:31.590 --> 00:00:36.450
playing from with all the correct state and so on and so forth exactly how you'd expect a safe system

8
00:00:36.450 --> 00:00:37.050
to work.

9
00:00:37.080 --> 00:00:39.260
So let's dive in and see how we can achieve that.

10
00:00:40.520 --> 00:00:43.860
So I want to talk a little bit about the bug that we saw at the end of the last lecture.

11
00:00:43.860 --> 00:00:48.260
Now I've just cleared out my save file so there's no saved state at the moment I want to show you how

12
00:00:48.260 --> 00:00:49.700
the bug is reproduced.

13
00:00:49.910 --> 00:00:56.990
If I go through these gates and then subsequently come back into my first sandbox scene then what's

14
00:00:56.990 --> 00:01:06.080
happened is we have saved in sandbox Scene 2 and because the EU idea of the player is the same in sandbox

15
00:01:06.080 --> 00:01:09.920
1 and sandbox 2 then the state has been overwritten.

16
00:01:09.950 --> 00:01:18.080
So if I go and start our player in Scene 1 He's in a really weird location because that's his location

17
00:01:18.080 --> 00:01:20.140
from scene to now.

18
00:01:20.270 --> 00:01:26.180
The way we're going to fix this is essentially to say hey what we need to do is load up.

19
00:01:26.240 --> 00:01:28.850
Scene 2 because that is the last place we were.

20
00:01:28.880 --> 00:01:33.140
That's the missing part to add chicks or puzzle of saving.

21
00:01:33.230 --> 00:01:39.530
So what we're going to do is modify our saving system so that there is another method we can call here

22
00:01:39.540 --> 00:01:48.680
it's going to be a public void load last seen like so and it's going to still take these string save

23
00:01:48.680 --> 00:01:50.700
file like everywhere else.

24
00:01:51.080 --> 00:01:54.700
And this is where we're going to do our saving and loading.

25
00:01:54.710 --> 00:02:01.040
So what we're gonna do is we want to call this from our wrapper so the wrapper at the moment does a

26
00:02:01.040 --> 00:02:02.990
load when you start.

27
00:02:03.020 --> 00:02:12.500
But what we want to happen here is that instead of tries to get hold of the saving system and do a dot

28
00:02:12.650 --> 00:02:14.530
load last seen.

29
00:02:14.540 --> 00:02:21.260
So what this is going to do is from our default save file again it is going to try and find out what

30
00:02:21.260 --> 00:02:25.390
was the last scene we were in when we saved and load that one up.

31
00:02:25.400 --> 00:02:26.210
That's the idea.

32
00:02:26.380 --> 00:02:26.600
Okay.

33
00:02:26.630 --> 00:02:28.530
So let's give this a shot.

34
00:02:28.550 --> 00:02:37.270
So we want to go over to our savings system and we want to somehow know what the last scene was to do

35
00:02:37.270 --> 00:02:37.620
this.

36
00:02:37.630 --> 00:02:44.770
We need to go to where we are capturing our state and somehow update our state dictionary to have that

37
00:02:44.830 --> 00:02:46.160
information in.

38
00:02:46.270 --> 00:02:50.110
So I'm gonna leave that as a little mini challenge to compose a video if you like.

39
00:02:50.110 --> 00:02:54.340
If you're not entirely sure what I'm talking about then you can watch on.

40
00:02:54.810 --> 00:02:55.100
Okay.

41
00:02:55.120 --> 00:03:04.750
So I'm gonna add in a piece of state called the last scene build index as just a string in the dictionary

42
00:03:05.260 --> 00:03:15.090
and I'm going to set this to an integer which I'm gonna take from the scene manager and for this I'm

43
00:03:15.100 --> 00:03:20.730
going to have to include the using Unity engine dot scene management using statement.

44
00:03:20.820 --> 00:03:30.890
And so the scene manager dots get gets active scene dot build index and that gives me the build index

45
00:03:30.950 --> 00:03:32.740
of the current active scene.

46
00:03:32.810 --> 00:03:36.720
So basically captures what's what scene we're in when we're trying to capture the state.

47
00:03:36.830 --> 00:03:41.880
So this is the state we can use later on to try and restore in our load.

48
00:03:41.900 --> 00:03:43.430
Last scene.

49
00:03:43.460 --> 00:03:46.220
Now what are we going to want to do in this load last scene.

50
00:03:46.220 --> 00:03:47.630
I'm gonna break it down into steps.

51
00:03:47.630 --> 00:03:51.900
The first thing is we need to get the state.

52
00:03:52.120 --> 00:04:03.880
The second thing is to restore or load the last scene and the third thing is to restore the state of

53
00:04:03.880 --> 00:04:05.540
that scene as well.

54
00:04:05.550 --> 00:04:05.930
Okay.

55
00:04:05.950 --> 00:04:10.870
So in order to do this you can see that the loading the last scene is going to take time.

56
00:04:10.870 --> 00:04:15.360
We know that loading a scene isn't a synchronous thing it's load a scene a sink.

57
00:04:15.400 --> 00:04:17.200
So how can we do this.

58
00:04:17.200 --> 00:04:23.110
What I'm going to do is I'm going to make this an I in numerator so that basically when we call load

59
00:04:23.110 --> 00:04:28.930
lastly scene we have to do it as a CO routine and that means it can take time to load the scene and

60
00:04:28.930 --> 00:04:30.640
then we can restore state afterwards.

61
00:04:30.640 --> 00:04:36.040
So that's the way I'm going to do it and I'm going to just challenge you to fill out the steps one two

62
00:04:36.040 --> 00:04:38.380
and three no change slide required.

63
00:04:38.380 --> 00:04:45.730
Just get the state load the last scene from that building next that we've got and restore the state

64
00:04:46.050 --> 00:04:46.990
pause video and have a go.

65
00:04:47.760 --> 00:04:48.010
Okay.

66
00:04:48.040 --> 00:04:54.730
So first of all getting the state is going to be quite simply this thing that we've got in save already

67
00:04:54.740 --> 00:04:59.870
we're going to get the state as a state dictionary and loading the file from the Save File.

68
00:05:00.010 --> 00:05:05.470
Then the second thing we're going to do is we are going to load up the last scene.

69
00:05:05.560 --> 00:05:12.130
So we need to first of all get the build index which here is the last scene build index key in our state

70
00:05:12.130 --> 00:05:13.280
dictionary.

71
00:05:13.510 --> 00:05:14.380
So let's give that a go.

72
00:05:14.380 --> 00:05:23.390
We're gonna get hold of that and save it into an int called the build index and then we can use that

73
00:05:23.600 --> 00:05:27.050
variable to just do a load async.

74
00:05:27.080 --> 00:05:35.540
So it's going to be seen manager dot load seen a sync with the build index which is going to be build

75
00:05:36.380 --> 00:05:38.490
index and that's all we require.

76
00:05:38.600 --> 00:05:43.460
And because this is an asynchronous operation and we want to wait until it is finished we can do a yield

77
00:05:43.820 --> 00:05:46.880
return of this async operation.

78
00:05:46.910 --> 00:05:49.010
Okay now what's it saying here.

79
00:05:49.040 --> 00:05:49.390
Oh yes.

80
00:05:49.400 --> 00:05:57.580
That I need to cast this to an integer to make sure that it is indeed something we can do and one optimization

81
00:05:57.580 --> 00:06:03.470
I want to make here is just not to reload the scene if we're already in the correct scene.

82
00:06:03.640 --> 00:06:12.610
So it's going to be an if then the build index is equal to the scene management manager dots again the

83
00:06:12.610 --> 00:06:19.920
active scene get the active scene dots build index and that should basically say okay.

84
00:06:19.950 --> 00:06:22.880
So if it is the current scene we don't need to reload.

85
00:06:22.880 --> 00:06:28.070
So what I'm actually gonna say is that if it is not the current scene we do need to reload so we do

86
00:06:28.070 --> 00:06:30.540
a yield return in this situation.

87
00:06:30.560 --> 00:06:32.920
So in some situations we won't be reloading a scene.

88
00:06:32.930 --> 00:06:33.620
So that's great.

89
00:06:33.620 --> 00:06:35.480
Number two is complete.

90
00:06:35.570 --> 00:06:39.190
And finally 3 we're going to try and restore the state.

91
00:06:39.380 --> 00:06:44.360
So we've got already a thing for restoring state and this function here restore state and we can just

92
00:06:44.360 --> 00:06:50.210
pass it in the state object that we have already loaded here at the beginning of the file and that should

93
00:06:50.210 --> 00:06:55.060
restore the state in the new scene because the scene has finally loaded here as well.

94
00:06:55.190 --> 00:07:00.890
So we've got this I enumerates giving me an error because it wants me to include the system Doc collections

95
00:07:00.890 --> 00:07:02.500
which I have now done.

96
00:07:02.500 --> 00:07:08.000
So that's gonna be able to load the last scene and if I go over to our saving wrapper you can see it's

97
00:07:08.000 --> 00:07:12.040
going to be well it can call it but it's not actually doing it properly.

98
00:07:12.050 --> 00:07:14.900
So what we could do is we could do a start co routine here.

99
00:07:15.020 --> 00:07:20.400
But one thing you can also do which I think is quite neat is you can turn your start into an eye in

100
00:07:20.400 --> 00:07:30.660
numerator and basically this means that it calls start as a CO routine and start so I can go ahead and

101
00:07:30.720 --> 00:07:33.420
include again using System Doc collections.

102
00:07:33.420 --> 00:07:38.580
So we've got this iron numerator start and it needs to yield return something is going to yield return

103
00:07:38.820 --> 00:07:44.480
this iron numerator the load last seen Iron numerator and that's just going to run it basically.

104
00:07:44.490 --> 00:07:51.430
So on start it's going to try and load the last seen so let's hop over to unity and see if this is working

105
00:07:51.430 --> 00:07:51.620
now.

106
00:07:51.670 --> 00:07:53.640
I'll go ahead and hit play then.

107
00:07:53.650 --> 00:07:59.800
The first thing you will notice is that it is going to say that this key is not present in the dictionary.

108
00:07:59.890 --> 00:08:03.990
So that is true because we haven't yet created a safe.

109
00:08:04.090 --> 00:08:09.510
But it would also be true if we had created or had an empty save file.

110
00:08:09.520 --> 00:08:12.870
Basically we've got an empty dictionary which is nothing there yet.

111
00:08:12.880 --> 00:08:17.410
So what we're saying is this last scene building next we want to check first of all that exists in the

112
00:08:17.410 --> 00:08:18.030
state.

113
00:08:18.130 --> 00:08:28.470
So I gonna say if the build index sorry the state DOT contains key and it's going to contain the last

114
00:08:28.470 --> 00:08:29.940
scene build index.

115
00:08:29.940 --> 00:08:32.820
Then we could go ahead and do all of this.

116
00:08:32.820 --> 00:08:39.160
We can go ahead and grab the build index and we can load up the scene.

117
00:08:39.270 --> 00:08:42.180
Otherwise we're going to restore the state either way.

118
00:08:42.180 --> 00:08:47.150
So this is getting a bit nested quite nested got contains key last scene builder.

119
00:08:47.160 --> 00:08:49.010
Next time we get the building next and we do this.

120
00:08:49.170 --> 00:08:52.970
But this moment in time I think is just about okay.

121
00:08:52.980 --> 00:08:54.610
This level of indentation.

122
00:08:54.810 --> 00:09:00.510
So let's check it out see if this works now whether we're protecting against this case go ahead and

123
00:09:00.510 --> 00:09:07.580
hit play then sure enough it loads the current scene in a funky state so I'm going to delete the current

124
00:09:07.580 --> 00:09:14.930
save file it should just load the current scene now so if at any point you want to get back to loading

125
00:09:14.930 --> 00:09:21.110
the current scene rather than using the save files last scene you can always just delete the save file.

126
00:09:21.110 --> 00:09:28.110
So if I go through the gates here and I'm over in this new world I'll go ahead and save somewhere in

127
00:09:28.110 --> 00:09:32.520
the world and just close down and start playing again.

128
00:09:32.550 --> 00:09:37.800
Then what we should see is instantly loads into the New World and restores my state as being at that

129
00:09:37.800 --> 00:09:44.770
point which is exactly what we wanted it to do but one problem is if I hadn't done that save.

130
00:09:44.780 --> 00:09:53.780
So what if I go through the gates for example to scene sandbox one at the top of sandbox 1 and don't

131
00:09:53.780 --> 00:09:58.160
save I go ahead and exits and hit play this time.

132
00:09:58.160 --> 00:10:02.510
Then what we're going to see is something very weird happening and that happened quite quickly but let

133
00:10:02.510 --> 00:10:03.740
me break it down for you.

134
00:10:03.740 --> 00:10:09.590
What happened is we loaded into sandbox sandbox said hey I noticed the building next is a different

135
00:10:09.590 --> 00:10:14.240
one so load sandbox 2 and position the player in the last position.

136
00:10:14.330 --> 00:10:22.460
The Sandbox 2 was in which if we go over sandbox to was right at the gates of Portal 1 so it was right

137
00:10:22.460 --> 00:10:28.790
inside Portal 1 which meant then we teleported in to the new location which is a bit funky really and

138
00:10:28.790 --> 00:10:30.820
probably not what we want to have happen.

139
00:10:30.830 --> 00:10:38.600
So what I'm gonna do is instead in our portal whereas the scene management portal what's happening is

140
00:10:38.790 --> 00:10:41.370
it is only saving when we exit a world.

141
00:10:41.390 --> 00:10:46.960
What I want to happen is that it also saves when we've just entered a world so that that is the checkpoint

142
00:10:46.980 --> 00:10:47.460
if you like.

143
00:10:47.470 --> 00:10:51.230
We've left the world behind we saved all the state from the last world.

144
00:10:51.380 --> 00:10:55.150
We've loaded up all the state in the New World which is happening down here.

145
00:10:55.190 --> 00:11:01.070
We've updated our players location and then we want to save that as a snapshot to return to.

146
00:11:01.070 --> 00:11:03.580
If we stop the game and once Karen plans.

147
00:11:03.590 --> 00:11:04.990
That's really easy to do.

148
00:11:05.030 --> 00:11:10.220
We just got take our saving wrap a save and do it after we have updated the players location.

149
00:11:10.280 --> 00:11:16.850
But before we fade in so that means that we will be at the spawn point of that new portal.

150
00:11:16.940 --> 00:11:23.780
So if we give that a go go ahead and hit play and we get this weird fading effect but it should have

151
00:11:23.780 --> 00:11:27.350
just saved us here and I can see from the log messages that it has.

152
00:11:27.350 --> 00:11:36.080
So now the second time if I go and just hit play it loads up in two seen one at our spawn point without

153
00:11:36.170 --> 00:11:38.110
any fades or weirdness going on.

154
00:11:38.600 --> 00:11:43.680
So it is still a little bit jarring you see a bit of scene 1 then scene 2 to loads.

155
00:11:43.800 --> 00:11:48.740
That's what we're gonna fix in the next lecture but we have got a good starting point now where it loads

156
00:11:48.740 --> 00:11:50.450
up the last scene.

157
00:11:50.450 --> 00:11:53.980
The player has been in and the checkpoint thing is working correctly.

158
00:11:53.990 --> 00:12:00.620
So if I go through in two sandbox to again just to show you I go ahead and hit play it doesn't even

159
00:12:00.620 --> 00:12:08.000
do a reload this time just takes me straight to the place where he came in or if I go back through the

160
00:12:08.000 --> 00:12:14.780
portal at the back to sandbox one at the beginning a sandbox 1 then this is also saved if I go ahead

161
00:12:14.810 --> 00:12:22.760
and quit out of this he goes back to this point even though I was in sandbox 2 so all of that is seen

162
00:12:22.760 --> 00:12:26.800
loading is happening to gas to the last place we were saved.

163
00:12:26.870 --> 00:12:32.450
And again if you ever want to test it in the scene that you're currently in just need to go ahead and

164
00:12:32.510 --> 00:12:37.520
delete this save file then so you can go ahead and hit play and you will be in your default location

165
00:12:37.610 --> 00:12:40.460
of whatever scene you've currently got loaded.

166
00:12:40.460 --> 00:12:40.730
Cool.

167
00:12:40.730 --> 00:12:46.820
So to recap what we've done is we've been able to save our build index into the States and use that

168
00:12:46.820 --> 00:12:52.850
state again when we're loading the scene to asynchronously load the scene and restore state C in the

169
00:12:52.850 --> 00:12:55.730
next lecture where we'll be making that transition just a little bit smoother.
