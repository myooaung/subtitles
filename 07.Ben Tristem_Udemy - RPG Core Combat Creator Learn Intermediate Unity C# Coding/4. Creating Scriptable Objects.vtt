WEBVTT
1
00:00:04.160 --> 00:00:04.750
Hello again.

2
00:00:04.760 --> 00:00:09.380
At the end of this lecture we will end up with exactly the same functionality as we have at the start

3
00:00:09.380 --> 00:00:12.070
of the lecture that he is running around with our big old sword.

4
00:00:12.110 --> 00:00:17.220
But we're going to be using scriptural objects for the data for our weapons.

5
00:00:17.240 --> 00:00:21.170
And you've probably encountered scriptural objects from our introductory unity courses.

6
00:00:21.170 --> 00:00:25.640
But if not just a reminder scriptural objects are a data container.

7
00:00:25.670 --> 00:00:29.660
It's a way for us to keep a whole bunch of information for us it's going to be information about what

8
00:00:29.660 --> 00:00:35.440
weapon so what damage does it do what animates override does it have what's the mesh.

9
00:00:35.450 --> 00:00:36.840
In other words how does it look.

10
00:00:36.920 --> 00:00:41.570
And we can contain all of that in an asset that lives within our project photo.

11
00:00:41.690 --> 00:00:48.470
So we're going to start by within our combat folder creating a new class a right click Create C sharp

12
00:00:48.500 --> 00:00:51.490
script and we will call this weapon.

13
00:00:51.550 --> 00:00:57.790
We can open up our weapon in our weapon instead of deriving from model behavior.

14
00:00:57.830 --> 00:01:00.520
We are going to delete everything in here.

15
00:01:00.560 --> 00:01:02.090
We're going to create a script of an object.

16
00:01:02.090 --> 00:01:08.100
Now Visual Studio code has a lovely auto complete here if we just start typing in scripts Bill all see

17
00:01:08.110 --> 00:01:12.220
scripts will object if we click on that puts you in all of this information in here.

18
00:01:12.230 --> 00:01:14.960
Now let's just grab all of our code in here.

19
00:01:14.960 --> 00:01:18.080
Cut that out print a namespace so name space.

20
00:01:18.080 --> 00:01:21.800
This is going to be RPG and Dot combat.

21
00:01:21.800 --> 00:01:25.500
And then within our Kelly braces we will paste the thing that we cut before.

22
00:01:25.630 --> 00:01:25.930
OK.

23
00:01:25.940 --> 00:01:27.440
That looks nice and sweet.

24
00:01:27.460 --> 00:01:27.850
So.

25
00:01:27.950 --> 00:01:32.020
When we're creating a script table object it has this menu system.

26
00:01:32.030 --> 00:01:36.130
See the phone aim is weapon and the menu name is RPG projects slash weapon.

27
00:01:36.130 --> 00:01:41.730
I'm going to change from this weapon I'm going to change it to make new weapon.

28
00:01:41.750 --> 00:01:44.860
I'm going to change RPG project to weapons.

29
00:01:44.880 --> 00:01:45.140
OK.

30
00:01:45.140 --> 00:01:49.610
You'll see what's going to happen in a moment our weapons slash make new weapon jump back over into

31
00:01:49.610 --> 00:01:50.240
unity.

32
00:01:50.240 --> 00:01:57.710
Now from anywhere now assets area I'm going to find my weapons folder and sword right click within our

33
00:01:57.710 --> 00:01:58.300
menu.

34
00:01:58.300 --> 00:02:04.090
Here we have this new create weapons make new weapon that I just added in my script a moment ago.

35
00:02:04.090 --> 00:02:10.330
And we can call this while this will be sword so this is our script Apple object it's our sword script

36
00:02:10.320 --> 00:02:12.610
table object which is a dot asset file.

37
00:02:12.620 --> 00:02:13.650
So let's put a couple of things in.

38
00:02:13.650 --> 00:02:15.600
I'm going to go and grab things from fighter.

39
00:02:15.630 --> 00:02:24.030
We will grab the animator override controller just cut that and back over into weapon paste that in

40
00:02:25.220 --> 00:02:27.480
Okay what else do we need to grab from fighter in here.

41
00:02:27.480 --> 00:02:33.420
I'm also going to grab the weapon prefab so what we're doing here is grabbing anything that will change

42
00:02:33.420 --> 00:02:38.070
based upon what particular weapon we are wielding so we want to have a different animation and we want

43
00:02:38.070 --> 00:02:40.800
to have a different weapon.

44
00:02:40.830 --> 00:02:45.630
We don't need to bring over for example the hand transform because the hand transform is going to be

45
00:02:45.630 --> 00:02:49.740
the same whether it's a sword or whether it's a mace whether it's a spear.

46
00:02:49.740 --> 00:02:51.380
So we don't need to bring that over.

47
00:02:51.540 --> 00:02:55.920
And also in our weapons script here we want to spawn the weapon.

48
00:02:55.920 --> 00:03:00.480
This is where we will actually instantiate it from this place I will make this a public method we'll

49
00:03:00.480 --> 00:03:06.360
be calling it from fighter most likely public void spawn and we need to take in a couple of things we

50
00:03:06.360 --> 00:03:09.900
already know what the weapon is we don't need to take that in when something causes we need to know

51
00:03:10.110 --> 00:03:10.590
where.

52
00:03:10.590 --> 00:03:18.510
So transform hand transform and we also need to take in the animators so we know where the animator

53
00:03:18.570 --> 00:03:21.050
is located and a mater.

54
00:03:21.060 --> 00:03:26.930
So those are the parameters we need to take in and then we're going to instantiate again the weapon

55
00:03:26.930 --> 00:03:30.980
we've done this before I could have just copied over my code from fighter and messed around with it

56
00:03:30.980 --> 00:03:37.520
but just typing this outside super clear and it's weapon prefab hand transform and then we as before

57
00:03:37.520 --> 00:03:45.240
we want to override the animators or animator dot run time loops run time animated.

58
00:03:45.250 --> 00:03:53.130
Controller equals weapon over ride so so far we're always looking for two things the animator override

59
00:03:53.130 --> 00:04:00.090
and the weapon prefab and we are going to instantiate our weapon now over in fighter.

60
00:04:00.090 --> 00:04:05.280
I'm going to scroll down to my spawn weapon method we no longer need to instantiate the weapon from

61
00:04:05.280 --> 00:04:10.220
the fighter that will be instantiated from our weapon script from our weapon class.

62
00:04:10.290 --> 00:04:11.970
But we need to do another couple of things here.

63
00:04:11.970 --> 00:04:17.760
First of all up at the very top I'm going to create a new variable serialized field and I will call

64
00:04:17.760 --> 00:04:19.050
this weapon.

65
00:04:19.050 --> 00:04:23.850
So that's our weapon class were just created and we'll call it variable weapon and we will initialize

66
00:04:23.850 --> 00:04:24.980
that at no.

67
00:04:24.990 --> 00:04:29.550
So this means that the fighter at this stage we're hooking things up very manually we're going to get

68
00:04:29.550 --> 00:04:33.630
a lot more organic equipment have pickups and all those kind of things in the future but for now we're

69
00:04:33.630 --> 00:04:34.490
just saying hey.

70
00:04:34.650 --> 00:04:37.190
Which weapon scriptural object.

71
00:04:37.200 --> 00:04:38.070
Am I looking at.

72
00:04:38.070 --> 00:04:43.080
So that's why we've got this field just here and down when we spawn weapon let's protect protect against

73
00:04:43.080 --> 00:04:46.850
null so if weapon equals equals.

74
00:04:46.860 --> 00:04:48.140
Now what are we gonna do.

75
00:04:48.150 --> 00:04:54.870
We want to return now we still need to be getting our animator but the last line we need to update so

76
00:04:55.050 --> 00:04:58.680
I'm gonna give you a challenge a bit of a different challenge here it's really just have you been following

77
00:04:58.680 --> 00:04:59.010
along.

78
00:04:59.010 --> 00:05:02.040
Does this make sense because I've jumped or ran a little bit pretty quickly.

79
00:05:02.160 --> 00:05:05.160
I just want you to finish off what we need to do here in spawn weapon.

80
00:05:05.160 --> 00:05:10.410
It's just a little bit of changing around of the code and then to go into the inspector and make sure

81
00:05:10.440 --> 00:05:12.390
everything is hooked up correctly.

82
00:05:12.390 --> 00:05:18.360
Oh I give you this is a slide actually tidy up our fighter class and then make sure all our relevant

83
00:05:18.360 --> 00:05:19.940
fields have been assigned.

84
00:05:19.950 --> 00:05:21.090
So there's your challenge.

85
00:05:21.120 --> 00:05:24.680
That's a test to see that you've been following along and understanding what I've been talking about.

86
00:05:24.750 --> 00:05:26.540
Champion take that on I'll see you back here in a moment.

87
00:05:27.240 --> 00:05:34.580
Okay so the last thing we need to do in our spawn weapon instead of doing our runtime animator override.

88
00:05:34.580 --> 00:05:42.960
Just here we instead are going to call weapon not spawn because this is where we know it's being instantiated

89
00:05:42.960 --> 00:05:48.510
Now the weapons being instantiated in our weapons script and what do we need to pass in.

90
00:05:48.750 --> 00:05:51.690
While it's telling us and transform and animator.

91
00:05:51.690 --> 00:05:55.470
So we're going to pass in hand transform comma animator.

92
00:05:55.500 --> 00:05:58.430
It's good when you use the same words makes sense.

93
00:05:58.650 --> 00:05:59.510
Saved that up.

94
00:06:00.810 --> 00:06:02.580
Make sure a weapon is saved up as well.

95
00:06:02.580 --> 00:06:04.140
Jump over into unity.

96
00:06:04.140 --> 00:06:06.210
Now we need to find the things that need to be hooked up.

97
00:06:06.210 --> 00:06:12.840
We've got our sword scriptural object it's now looking for those serialized fields that we just created.

98
00:06:12.840 --> 00:06:16.540
So it's looking for the weapon override us looking for the weapon.

99
00:06:16.560 --> 00:06:22.970
You know what sort of weapon override this is animator override and I'm going to rename this F to an

100
00:06:23.120 --> 00:06:26.360
animator over ride.

101
00:06:26.440 --> 00:06:29.690
Okay I think that's gonna be much better animator override.

102
00:06:29.700 --> 00:06:31.230
Great save that up.

103
00:06:31.410 --> 00:06:37.640
And so we're taking in our animator override and we're taking our weapon prefab so the animator override

104
00:06:37.650 --> 00:06:38.190
click on that.

105
00:06:38.190 --> 00:06:42.390
We only have one the sword override controller and then our weapon prefab click on that.

106
00:06:42.390 --> 00:06:45.020
It's gonna be sword the equipped sword.

107
00:06:45.030 --> 00:06:45.510
Excellent.

108
00:06:45.510 --> 00:06:51.290
Now the last thing we find our player jump on into the prefab for the player on the fighter script is

109
00:06:51.330 --> 00:06:53.850
looking for the weapons or the script table object.

110
00:06:53.850 --> 00:06:59.400
For now he's going to manually give it to it which is the sword but in the future we'll be out to update

111
00:06:59.400 --> 00:07:01.540
that through a pick up and a few other things.

112
00:07:01.560 --> 00:07:06.870
So I've given it the sword will save everything there back out of player click on play we'll see if

113
00:07:06.870 --> 00:07:14.790
he has a sword in his hand but I he does indeed and that is being driven by our swords scripting object.

114
00:07:14.850 --> 00:07:15.150
Okay.

115
00:07:15.180 --> 00:07:16.290
So hopefully that makes sense.

116
00:07:16.290 --> 00:07:20.940
That introduction to scripted objects as always if you've got any questions please do post them in our

117
00:07:20.940 --> 00:07:21.630
forum.

118
00:07:21.630 --> 00:07:27.120
In our discussions we love to hear from you particularly if we can help out and I will see you in the

119
00:07:27.120 --> 00:07:27.840
next lecture.
