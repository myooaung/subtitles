1
00:00:04,400 --> 00:00:08,300
Hello and welcome in this video we are going to be adding a new model behavior called the base stats

2
00:00:08,300 --> 00:00:13,940
script which is going to have two important properties the starting level for this particular player

3
00:00:13,970 --> 00:00:20,120
or character and then the character class which could be any one of player grunt at major Archer in

4
00:00:20,120 --> 00:00:20,780
my game.

5
00:00:20,780 --> 00:00:22,160
In your game it might be different.

6
00:00:22,160 --> 00:00:26,600
Let's dive in and see why this class is important and how we're gonna use it in the grand scheme of

7
00:00:26,600 --> 00:00:33,670
things one of the key mechanics that differentiates an RPG from any other sort of game is progression.

8
00:00:33,670 --> 00:00:39,400
And the idea with progression is that you level up as you go through the level you encounter more and

9
00:00:39,400 --> 00:00:45,760
more difficult enemies and their stats and the whole system increases you can easily beat a lower level

10
00:00:45,760 --> 00:00:49,210
enemy but you find it tricky with higher level enemies.

11
00:00:49,210 --> 00:00:50,230
One of the core mechanics.

12
00:00:50,260 --> 00:00:57,640
So one of the ways that we want to do this is give the designers the tools to implement the progression

13
00:00:57,700 --> 00:00:58,930
of our game.

14
00:00:58,930 --> 00:01:03,570
Now the way typically designers like to think about this is in spreadsheets.

15
00:01:03,640 --> 00:01:10,000
So we often want to have tools for importing spreadsheets full of numerical values into our game.

16
00:01:10,000 --> 00:01:16,750
Now we're not going to do that in this part of the course we're going to do it in part 2 but we are

17
00:01:16,810 --> 00:01:23,310
going to have a central script for objects where you can define the progression within unity.

18
00:01:23,410 --> 00:01:31,240
So that's the idea we've got our grunts and our player prefabs which have got health and fighter components

19
00:01:31,240 --> 00:01:35,060
on them which might want to know about certain stats like what is my health.

20
00:01:35,170 --> 00:01:38,320
What is the damage that I do as a fighter.

21
00:01:38,320 --> 00:01:42,910
And that should be defined by the progression which is going to be basically this big spreadsheet this

22
00:01:42,910 --> 00:01:50,710
big all object assets in unity that is divided up like so we start off with having all the stats for

23
00:01:50,710 --> 00:01:56,140
the grunt and we have the stats such as health and damage and those stats are then broken down by level

24
00:01:56,140 --> 00:02:01,000
so you've got the health at level one healthy level to help at level three etc. and then we have the

25
00:02:01,000 --> 00:02:04,240
same thing going on for the player and that's all broken down by level as well.

26
00:02:04,240 --> 00:02:09,190
I just haven't gone into the detail showing here because I don't have enough space on the slide and

27
00:02:09,190 --> 00:02:16,240
then what we need to do to tie these two things together is to introduce this base stats game scripts

28
00:02:16,240 --> 00:02:17,050
will object.

29
00:02:17,070 --> 00:02:23,320
Sorry not script logic mono behavior that's the one I mean mono behavior on our grunts and on our player

30
00:02:23,410 --> 00:02:30,530
which basically says hey I can provide you these stats from progression if you tell me what my classes.

31
00:02:30,580 --> 00:02:35,190
So for example the grunt is a grunt class and the player is a player class.

32
00:02:35,200 --> 00:02:40,990
And what level you're at then what I can do is if you ask me for health so example for the health component

33
00:02:40,990 --> 00:02:46,710
says hey base stats what is my health then base stats goes off and consults the script will object to

34
00:02:46,720 --> 00:02:52,060
the progression and says Hey well you are a grunt and you're asking for health and you're asking for

35
00:02:52,060 --> 00:02:52,840
help at level 2.

36
00:02:52,840 --> 00:02:54,570
So here is your health.

37
00:02:54,640 --> 00:02:58,260
That's the system that we want to put in place in the next few lectures.

38
00:02:58,270 --> 00:03:04,390
And as the starting point at least and then we've got lots to go from there is such as doing more and

39
00:03:04,390 --> 00:03:10,360
more attributes and sterilizing this and making sure it's all saved in the save system and gaining your

40
00:03:10,360 --> 00:03:12,210
experience points and leveling up and so on.

41
00:03:12,520 --> 00:03:17,080
But first of all we've got to implement this basic structure and architecture.

42
00:03:17,080 --> 00:03:22,070
So I'm going to start off with implementing the base stats class.

43
00:03:22,060 --> 00:03:23,670
So let's go ahead and do that.

44
00:03:23,680 --> 00:03:31,540
I'm going to create a new folder first of all in scripts and I'm going to call this folder progression

45
00:03:34,950 --> 00:03:35,130
now.

46
00:03:35,130 --> 00:03:40,980
Actually scratch that I'm going to call it stats because at more general it's gonna be all about the

47
00:03:40,980 --> 00:03:46,590
stats of the player the health the damage and the fact that we've got a progression within stats is

48
00:03:46,650 --> 00:03:47,750
more of a detail.

49
00:03:47,970 --> 00:03:52,110
So we're going to go ahead and create a new C sharp script here.

50
00:03:52,200 --> 00:03:57,420
I'm going to cool this base stats.

51
00:03:57,420 --> 00:04:02,340
Now why do I call it base stats and not just stats because later on in the game we are going to have

52
00:04:02,340 --> 00:04:03,660
things like modifiers.

53
00:04:03,690 --> 00:04:10,590
So when you equip a certain weapon it is going to give you a bonus to your base stats and your health

54
00:04:10,590 --> 00:04:15,280
stat might go up based on having a particular healthy sword or something like that.

55
00:04:15,360 --> 00:04:20,540
So we're gonna go ahead and open up the base stats script and just sort it out a little bit.

56
00:04:20,550 --> 00:04:23,760
I'm going to put it all in a namespace for example.

57
00:04:23,760 --> 00:04:31,830
So when start a new namespace RPG stats and then we are going to go ahead and I think just strip out

58
00:04:31,830 --> 00:04:32,900
start and update.

59
00:04:32,910 --> 00:04:39,690
We don't need these as of yet but what we do need is some serialize fields.

60
00:04:40,110 --> 00:04:44,980
So the first serialized field is going to be easy the easy one is going to be the end.

61
00:04:45,000 --> 00:04:46,350
It's gonna be a level.

62
00:04:46,350 --> 00:04:51,780
So we're going to have the level of character that is straightforward I'm going to start off with a

63
00:04:51,780 --> 00:04:54,740
base level of 1 as the default.

64
00:04:54,750 --> 00:05:00,060
Now the second thing is slightly harder because what we want to have is the class.

65
00:05:00,210 --> 00:05:07,140
So you could start off with having a string for your class or I'm going to call this the character class

66
00:05:07,140 --> 00:05:10,960
to avoid conflicts with keywords like class up here.

67
00:05:10,980 --> 00:05:14,220
Now you could have a string but I wouldn't recommend that.

68
00:05:14,370 --> 00:05:18,900
The reason being it's going to cause all sorts of copy and paste issues and it's much nicer if we could

69
00:05:18,900 --> 00:05:22,700
just have a dropdown in the editor and to do drop downs in the editor.

70
00:05:22,710 --> 00:05:23,640
It's fairly straightforward.

71
00:05:23,640 --> 00:05:25,380
All you need is an enum.

72
00:05:25,410 --> 00:05:30,890
So we're going to go ahead and create a new file for our enum because enemies can just go in the root.

73
00:05:30,900 --> 00:05:37,750
I'm gonna call this the character class don't see S and E can just go in the root like this.

74
00:05:37,750 --> 00:05:42,100
So if I go ahead and use one of the auto completes for enum it's fairly straightforward that's all it

75
00:05:42,100 --> 00:05:42,610
is.

76
00:05:42,610 --> 00:05:49,600
So it's going to be an item called character class like so and I'm going to wrap that actually in a

77
00:05:49,600 --> 00:05:50,500
namespace.

78
00:05:50,520 --> 00:05:58,940
So it's going to be namespace RPG dot stance again and we don't need any includes here.

79
00:05:58,990 --> 00:06:03,310
So we've already talked about some of the classes we might have here if you want to add more classes

80
00:06:03,310 --> 00:06:06,670
you'll have to come into this file and add it that's the downside of not using a string.

81
00:06:06,730 --> 00:06:12,070
But I think that's relatively straightforward down sides to avoid you can just come in here and add

82
00:06:12,460 --> 00:06:14,140
anything that you want to the end of the enum.

83
00:06:14,170 --> 00:06:18,760
So we're going to have player is going to be the first character class the second one is going to be

84
00:06:18,760 --> 00:06:24,280
the grunt and we're going to have for the sake of it a mage in here as well just to show you that there

85
00:06:24,280 --> 00:06:29,020
could be more and more values in here you might have spiders you might have all sorts of different character

86
00:06:29,020 --> 00:06:32,230
classes that have their own slightly different progressions.

87
00:06:32,320 --> 00:06:37,990
So we're going to go with this player is going to be probably the one we're going to use but we're going

88
00:06:37,990 --> 00:06:42,820
to use a character class that's what I mean say and to use this character class as the class for character

89
00:06:42,820 --> 00:06:44,110
class serialized field.

90
00:06:44,130 --> 00:06:44,800
Oh wow.

91
00:06:44,830 --> 00:06:47,140
We get all stuck up in all those things.

92
00:06:47,140 --> 00:06:50,290
So we've got the character class that's going to be some that we set.

93
00:06:50,350 --> 00:06:56,170
And also I'm going to just rename levels just before we get any further into starting level because

94
00:06:56,170 --> 00:07:00,330
we know the characters can especially the player can level up.

95
00:07:00,340 --> 00:07:02,910
So this is going to be just the level that you start at.

96
00:07:02,920 --> 00:07:03,910
Really.

97
00:07:03,910 --> 00:07:08,950
And one more thing we might want to do is stick a range in here so that we can't go and make it negative.

98
00:07:08,950 --> 00:07:12,460
We can't give it values that we don't want it to have such a zero and we don't want to.

99
00:07:12,580 --> 00:07:15,970
If we're starting level is one we don't want a level zero as well.

100
00:07:15,970 --> 00:07:23,950
So we can do this easily with the little range annotation just before our serialized field and the range

101
00:07:23,950 --> 00:07:28,600
annotation takes some arguments like this a minimum and a maximum I'm gonna to say that our minimum

102
00:07:28,600 --> 00:07:32,100
is going to be one level one all the way to ninety nine.

103
00:07:32,260 --> 00:07:37,700
And what this is going to do is it's going to put a slider on our mono behavior.

104
00:07:37,750 --> 00:07:43,860
So when we go and edit it in unity talking of editing and unity I think it's time for you to have a

105
00:07:43,860 --> 00:07:45,290
bit of a challenge here.

106
00:07:45,300 --> 00:07:50,760
So I'd like you to set up the prefabs that character prefabs the enemy the player set them up so that

107
00:07:50,760 --> 00:07:57,150
they have this base stats script on them and make sure you change the default class the default character

108
00:07:57,150 --> 00:08:01,710
class depending on whether it's the player or the grunt so that in the world they have the right default

109
00:08:01,710 --> 00:08:06,390
class and you can even mess around and have a look at how the level is showing up in the editor that

110
00:08:06,510 --> 00:08:08,980
plays video and how to go.

111
00:08:08,980 --> 00:08:10,050
Welcome back.

112
00:08:10,060 --> 00:08:11,200
Let's give this a shot shall we.

113
00:08:11,260 --> 00:08:17,590
So we're going to go ahead and find ourselves out of the game folder and characters folder.

114
00:08:17,590 --> 00:08:23,980
We want the character first of all and the character.

115
00:08:23,980 --> 00:08:29,620
We aren't going to go ahead and add on a component called the base stats components.

116
00:08:29,620 --> 00:08:35,290
And as you can see it's defaulting to the Player class I'm actually against default it in the character

117
00:08:35,320 --> 00:08:38,470
prefab to the grunt character class.

118
00:08:38,470 --> 00:08:43,360
So that's basically if we're creating things off of this by default then a grunt then not a player because

119
00:08:43,360 --> 00:08:45,410
that's gonna be a bit weird if there were always players.

120
00:08:45,520 --> 00:08:47,670
So they're starting level is going to be a one.

121
00:08:47,740 --> 00:08:49,500
I think that's fair enough.

122
00:08:49,540 --> 00:08:50,970
Now let's go and check it out.

123
00:08:50,990 --> 00:08:56,620
If the enemies and the archer we've got an archer here maybe we should add a character class for Archer

124
00:08:57,070 --> 00:08:58,150
to do that in fact.

125
00:08:58,210 --> 00:09:06,310
So we've got the Archer as a new character class would go over into our arch prefab then with the archer

126
00:09:06,310 --> 00:09:13,090
selected we can go down find his base stats and just switch him over to being an archer at level one

127
00:09:13,090 --> 00:09:19,690
archer then we'd go over to the enemy and we can find the enemy's base stats he should be a grunt by

128
00:09:19,690 --> 00:09:21,610
default and that's fine.

129
00:09:21,610 --> 00:09:28,240
And then if I go over to the play Alice the final piece of the puzzle the players base stats should

130
00:09:28,240 --> 00:09:29,180
be player.

131
00:09:29,200 --> 00:09:35,290
So his character class is plan that's going to know how to look it up in this progression prefab progression

132
00:09:35,290 --> 00:09:42,450
scripts will fit rather so we've created our first part of the puzzle this base stats thingamabob and

133
00:09:42,450 --> 00:09:47,520
in the next lecture we're going to set up an actual progression scriptural object so that we have something

134
00:09:47,520 --> 00:09:50,550
to point our base stats at C that.
