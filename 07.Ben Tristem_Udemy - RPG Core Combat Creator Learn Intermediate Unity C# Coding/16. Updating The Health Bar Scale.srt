1
00:00:04,690 --> 00:00:05,490
Hello and welcome.

2
00:00:05,490 --> 00:00:10,300
In this light show we're going to be looking at making our health balls actually represent the amount

3
00:00:10,300 --> 00:00:12,490
of health that the enemy has.

4
00:00:12,520 --> 00:00:16,220
So if I have this enemy here with a full green health bar he's got full health.

5
00:00:16,300 --> 00:00:21,640
Start attacking him and the health decreases decreases decreases until he is dead.

6
00:00:21,640 --> 00:00:25,290
Let's dive in and see how to achieve this OK.

7
00:00:25,300 --> 00:00:26,630
So we've got lovely health bars.

8
00:00:26,650 --> 00:00:32,950
But at the moment those health bars are not being updated so that they reflect the actual correct amount

9
00:00:32,950 --> 00:00:33,870
of health.

10
00:00:33,880 --> 00:00:35,110
So how are we going to do this.

11
00:00:35,110 --> 00:00:40,300
Well we're going to create a script and first of all actually before we create a script it's been brought

12
00:00:40,300 --> 00:00:46,900
to my attention that naming our resources namespace resources does clash with the fact that unity likes

13
00:00:46,900 --> 00:00:50,830
to use that folder name to dynamically bring in objects.

14
00:00:50,830 --> 00:00:52,630
So it's not a good idea to call it that.

15
00:00:52,690 --> 00:00:59,200
I'm going to rename it to attributes and I'm going to rename the namespace to attributes too so we're

16
00:00:59,190 --> 00:01:02,050
going to do this in Visual Studio code.

17
00:01:02,080 --> 00:01:06,590
I'm going to bring up where is that attributes folder now.

18
00:01:06,670 --> 00:01:13,240
Right the top of course and I'm going to rename the namespace by selecting RPG dot resources doing control

19
00:01:13,240 --> 00:01:17,590
shift F and then this little arrow next to the search box.

20
00:01:17,620 --> 00:01:23,800
I can drop down and I have already done this in prototype so it is already pre populated this with RPG

21
00:01:23,820 --> 00:01:25,810
or attributes for me.

22
00:01:25,810 --> 00:01:29,500
And first of all when you do a find replace in multiple files in Visual Studio code you have to first

23
00:01:29,500 --> 00:01:35,380
do the search which will search through and give you a list of results and the the results you can just

24
00:01:35,380 --> 00:01:36,880
check for sanity.

25
00:01:36,880 --> 00:01:41,650
And then once you've got that list of results check for sanity you can hit the replace all button which

26
00:01:41,650 --> 00:01:45,030
is right next to the replacement field you do replace all.

27
00:01:45,040 --> 00:01:47,600
It should replace about 10 in my project.

28
00:01:47,830 --> 00:01:52,370
And then if we go back into unity and just double check that everything is still playing.

29
00:01:52,390 --> 00:01:54,770
I think it will be because that replacement is very straightforward.

30
00:01:54,770 --> 00:01:58,180
Yep everything still playing still able to find all the classes et cetera.

31
00:01:58,760 --> 00:01:58,990
Okay.

32
00:01:59,020 --> 00:02:03,400
So that was just a little bit of tidying up because I'm about to use that attributes folder to create

33
00:02:03,430 --> 00:02:10,690
a health bar script that's right click Create a new C sharp scripts and it is going to be a health bar.

34
00:02:11,710 --> 00:02:19,190
Let's go ahead and open up that C sharp script and put it in the namespace first of all.

35
00:02:19,250 --> 00:02:28,490
So it namespace RPG dot attributes and then we've got ourselves a health bar and it's going to need

36
00:02:28,490 --> 00:02:32,530
an update because update is where it's going to update that health bar.

37
00:02:32,750 --> 00:02:36,010
And I'd like to see if you can figure this out.

38
00:02:36,020 --> 00:02:41,010
Actually I'd like to see if you can set the scale of that.

39
00:02:41,120 --> 00:02:41,830
Let's have a look.

40
00:02:41,870 --> 00:02:45,590
Open up the health bar and just clarify what it is we're trying to do.

41
00:02:45,710 --> 00:02:53,990
So this foreground image what I'm asking is that we are able to set this scale programmatically based

42
00:02:53,990 --> 00:02:57,270
on the current health of our health components.

43
00:02:57,350 --> 00:03:00,230
And you can give it a go.

44
00:03:00,230 --> 00:03:03,290
I'm also going to show you how I'm going to what I'm going to bind.

45
00:03:03,350 --> 00:03:07,310
So if you feel like giving a go now or you want some more hints just wait.

46
00:03:07,380 --> 00:03:15,180
OK so some hints are going to be I'm going to add a serialized field with square brackets serialized

47
00:03:15,180 --> 00:03:21,690
field and it's going to take the health components and it's going to be our health components equal

48
00:03:21,690 --> 00:03:22,530
no.

49
00:03:22,560 --> 00:03:29,790
And then I'm just gonna take another sterilized field which is going to be our ball ground.

50
00:03:29,940 --> 00:03:32,030
So it's going to be an image.

51
00:03:32,130 --> 00:03:39,750
In fact it's going to be a rect transform because all we care about is that scale called the foreground.

52
00:03:39,750 --> 00:03:42,390
That's what I'm gonna call it again equal to no.

53
00:03:42,420 --> 00:03:49,620
So see if using those two components you could set them up hook them up and then in updates update the

54
00:03:49,710 --> 00:03:52,270
correct thing.

55
00:03:52,290 --> 00:03:52,580
Okay.

56
00:03:52,600 --> 00:03:55,920
So as for setting them up that's fairly straightforward.

57
00:03:55,920 --> 00:04:01,050
But one thing that might catch you up is that we'll add the component first of all to the roots of health

58
00:04:01,050 --> 00:04:01,730
ball.

59
00:04:01,860 --> 00:04:06,060
So it's going to be health bar C S that's what we're adding.

60
00:04:06,060 --> 00:04:11,370
And before grand I can hook up here in this prefab because we've got access to it but I can't hook up

61
00:04:11,370 --> 00:04:16,130
the health in this prefab so that I'm gonna have to hook up in the enemy prefab.

62
00:04:16,380 --> 00:04:21,990
So just dragging the enemy in to the health components field of a health bar script and that should

63
00:04:21,990 --> 00:04:25,610
be an override that applies only in the enemy prefab.

64
00:04:26,340 --> 00:04:34,170
Let's go back into the health bar prefab and in here in the C++ natural fact a C sharp rather I'm gonna

65
00:04:34,200 --> 00:04:41,130
go and update the grounds scale so foreground dot and then you can have a look at what is available

66
00:04:41,130 --> 00:04:41,780
there.

67
00:04:42,000 --> 00:04:46,410
It's going to be using the local scale against set the local scale.

68
00:04:46,410 --> 00:04:53,070
And we are going to be it's a vector so new vector 3 and the scale I want to set I'm only really interested

69
00:04:53,070 --> 00:04:55,350
in setting the x values scale.

70
00:04:55,350 --> 00:05:01,410
So I'd note for example I'm going to set point five for that at the moment and then do one and then

71
00:05:01,410 --> 00:05:10,110
one for the other scales we want to just keep those at their current scaling factor and this should

72
00:05:10,110 --> 00:05:14,210
be a point five F to make sure it's a float and not double because that's what it wants to take.

73
00:05:14,370 --> 00:05:20,120
And if we do that the moment all it's going to do is set that health bar to a constant half.

74
00:05:20,430 --> 00:05:23,620
But we do want to take that health from the health component.

75
00:05:23,640 --> 00:05:29,010
So what do we have available in our health component for this kind of task.

76
00:05:29,010 --> 00:05:35,270
Well we've got a get percentage but get percentage is going to be between 0 and 100.

77
00:05:35,280 --> 00:05:40,080
What I want is a value between 0 and 1 which is what actually we have calculated here and then multiplied

78
00:05:40,080 --> 00:05:43,740
by 100 seems a bit wasteful to multiply by 100 and then divide by a hundred.

79
00:05:43,740 --> 00:05:51,720
So what I'm gonna do is just pull out a new public float get a fraction function and get fraction is

80
00:05:51,720 --> 00:05:55,950
just going to do this calculation in the brackets.

81
00:05:55,950 --> 00:05:58,450
So just makes things a little bit clearer as well.

82
00:05:58,500 --> 00:06:05,700
So get fractions going to be the health points divided by the total health make sense and then forget

83
00:06:05,700 --> 00:06:09,750
percentage we're just going to use get a fraction multiplied by 100.

84
00:06:09,840 --> 00:06:15,950
So that means that now we can use get a fraction when trying to calculate our local scale.

85
00:06:16,020 --> 00:06:22,800
So we're going to use the health component dot get fraction and that's going to give us the value between

86
00:06:22,800 --> 00:06:23,780
0 and 1.

87
00:06:23,810 --> 00:06:25,740
So let's go ahead and try that out.

88
00:06:26,370 --> 00:06:29,880
So what I'm expect to see is that all the enemies are going to have full health bars which indeed they

89
00:06:29,940 --> 00:06:30,930
seem to.

90
00:06:30,930 --> 00:06:36,060
And if I go ahead and hit the enemy you can see is health bar starts to decrease all the way down to

91
00:06:36,060 --> 00:06:43,590
zero at which point he dies and we are happy because that is a health bar that is working now in this

92
00:06:43,590 --> 00:06:51,000
lecture we have looked at how we can update the scale of our foreground to reflect the actual health

93
00:06:51,150 --> 00:06:52,590
of our enemies.

94
00:06:52,600 --> 00:06:57,360
The next lecture we're going to look at how we can enable and disable this health bar when we have full

95
00:06:57,360 --> 00:06:59,720
health and when we have no health.

96
00:06:59,730 --> 00:07:03,720
So the health bars don't just float they're above dead enemies.

97
00:07:03,720 --> 00:07:04,230
I'll see you that.
