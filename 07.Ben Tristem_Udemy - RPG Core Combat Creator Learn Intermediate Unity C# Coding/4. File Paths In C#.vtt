WEBVTT
1
00:00:04.550 --> 00:00:05.510
Hello and welcome.

2
00:00:05.510 --> 00:00:11.120
In this lecture we are going to be working out how to produce the path that I've got here which is where

3
00:00:11.120 --> 00:00:15.230
we're going to be putting our save file which is gonna be different on every platform.

4
00:00:15.230 --> 00:00:20.250
And we're going to learn how to use the correct path separators for a given platform.

5
00:00:20.270 --> 00:00:22.240
Let's dive in.

6
00:00:22.250 --> 00:00:26.420
So as part of our saving system we're gonna need to save to an actual file.

7
00:00:26.420 --> 00:00:28.970
And where are we going to say that file.

8
00:00:28.970 --> 00:00:34.430
Well the location is going to depend vastly on the platform that you are deploying to if it's on Android

9
00:00:34.430 --> 00:00:37.860
it's one place IOW another if it's on Windows or Mac.

10
00:00:37.860 --> 00:00:39.950
They're different places for each platform.

11
00:00:39.950 --> 00:00:45.070
And the good the good news is that unity allows us to abstract that away.

12
00:00:45.070 --> 00:00:52.610
There is a application Doc persistent data path and that will change depending on what platform your

13
00:00:52.610 --> 00:00:59.540
game is on so you can use this to locate a folder in which you can save your files no matter what platform

14
00:00:59.540 --> 00:01:00.680
it is.

15
00:01:00.680 --> 00:01:01.350
That's great.

16
00:01:01.430 --> 00:01:07.370
But then there's other differences between different platforms and the types of paths that they can

17
00:01:07.370 --> 00:01:08.120
use.

18
00:01:08.120 --> 00:01:14.400
So for example on ISIS you might use forward slashes or Windows you might use back slashes and back

19
00:01:14.400 --> 00:01:18.930
slashes on ISIS wouldn't work so you shouldn't use them there and things like that.

20
00:01:18.950 --> 00:01:25.970
So how do you then go and combine things and make these path build these path so that you have mobile

21
00:01:25.970 --> 00:01:32.000
slash containers for example you know at AUD you want to put slash save file at the end.

22
00:01:32.390 --> 00:01:33.680
Well that's the difficulty.

23
00:01:33.800 --> 00:01:41.060
And that's solved by C shop where we have this path dot combine method which allows you to take two

24
00:01:41.060 --> 00:01:47.570
strings and it will combine them with whatever is the path separator for your particular platform.

25
00:01:47.570 --> 00:01:53.810
So with these two bits of knowledge it should be sufficient for you to work out in the saving system

26
00:01:53.930 --> 00:01:56.980
what our safe path should be.

27
00:01:56.990 --> 00:02:03.800
So I'm going to create a private method in here that returns a string and is going to be get path from

28
00:02:03.800 --> 00:02:11.630
save file and we're going to obviously take the save file as the argument here and this is where I want

29
00:02:11.630 --> 00:02:15.730
you to put some logic do something cool here.

30
00:02:15.740 --> 00:02:22.310
What are we going to return that's going to be your challenge and what we're going to print here in

31
00:02:22.310 --> 00:02:29.240
saving 2 and loading from is instead of our save file which is quite mundane we are going to actually

32
00:02:29.240 --> 00:02:33.680
print out the path so you can once you've printed out on your platform you can actually go and open

33
00:02:33.680 --> 00:02:37.730
that folder and see where it is on your system.

34
00:02:37.730 --> 00:02:37.940
OK.

35
00:02:37.940 --> 00:02:42.890
So here's the challenge definition to compose the path choose a name that you want for your file do

36
00:02:42.890 --> 00:02:45.380
you want to add an extension that you can just do.

37
00:02:45.490 --> 00:02:52.040
It's the same on all platforms adding an extension so you can just do that with basic string manipulation

38
00:02:52.610 --> 00:02:58.400
and then I'd like you to combine using the API actors showed you and print it out and see what you've

39
00:02:58.400 --> 00:03:03.140
got a case of pause the video and a go OK.

40
00:03:03.140 --> 00:03:03.680
Welcome back.

41
00:03:03.680 --> 00:03:05.660
Let's see what we have got to.

42
00:03:05.660 --> 00:03:14.120
So we're gonna need to take an application Dot's persistent data path and nothing needed to be included

43
00:03:14.120 --> 00:03:14.930
for that.

44
00:03:15.020 --> 00:03:20.390
So we're gonna get the persistent data path and then what I want to do is do a path dot combine on the

45
00:03:20.390 --> 00:03:28.040
persistent data path and the save file like so now path or combine is going to require me to include

46
00:03:28.070 --> 00:03:35.330
to use the system dot Io using System IO and one more thing I want to add an extension to my save file

47
00:03:35.330 --> 00:03:41.900
so the save file just called save file but I want to put a dot as a v dot Sav on the end just to make

48
00:03:41.900 --> 00:03:47.330
it obvious that this is a save file that's what I'm using it for and then I can go ahead and hit play

49
00:03:47.330 --> 00:03:52.520
and I can use my S and L to hopefully see what the save file is the app sure enough.

50
00:03:52.520 --> 00:03:58.420
Now interestingly enough it has mixed separators here on windows and I just wanted to point this out.

51
00:03:58.610 --> 00:04:03.620
That's because the application top persistence.

52
00:04:03.620 --> 00:04:09.800
Data path has got forward slashes in whereas the default path separator on Windows is a backslash but

53
00:04:09.800 --> 00:04:14.030
that's okay because Windows can actually handle both food slashes and back slashes.

54
00:04:14.030 --> 00:04:17.660
So this is still a valid path for Windows.

55
00:04:17.660 --> 00:04:24.740
So if I go ahead and copy it in fact we can go ahead and open my Explorer paste it in to my explorer

56
00:04:25.010 --> 00:04:30.170
and navigate to it and you can see that Windows deals with the forward slash is just fine and in here

57
00:04:30.170 --> 00:04:36.090
I've got this already a save file that's from my experimenting so I can delete it so that we can don't

58
00:04:36.110 --> 00:04:37.910
have any confusion.

59
00:04:38.030 --> 00:04:42.950
You shouldn't have had to create something at this stage but it shows you where the safe files are going

60
00:04:42.950 --> 00:04:45.060
to end up they end up in your app data.

61
00:04:45.200 --> 00:04:49.700
Local low default company that's going to be whatever company you set up in unity then the project name

62
00:04:50.060 --> 00:04:52.620
and then that's where it's gonna end up on Windows on Mac.

63
00:04:52.640 --> 00:04:58.470
It's gonna be different and I'd like you to post what you get depending on your platform.

64
00:04:58.490 --> 00:04:58.700
Okay.

65
00:04:58.730 --> 00:05:03.440
So that is one of the fundamental building blocks of how we're going to access our files is to actually

66
00:05:03.440 --> 00:05:08.630
know where we're going to say it in the first place and be able to manipulate parts and file parts in

67
00:05:08.630 --> 00:05:09.200
the next video.

68
00:05:09.200 --> 00:05:15.050
We are going to be using something called a file stream to actually write in to this path into this

69
00:05:15.050 --> 00:05:16.460
particular file.

70
00:05:16.460 --> 00:05:17.030
I'll see that.
