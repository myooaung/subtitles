WEBVTT
1
00:00:04.430 --> 00:00:05.330
Hello and welcome.

2
00:00:05.330 --> 00:00:11.390
In this lecture we are going to be implementing patrolling as you can see this enemy is now patrolling

3
00:00:11.390 --> 00:00:12.350
along the patrol path.

4
00:00:12.350 --> 00:00:16.100
We've worked so hard to visualize and he is following it exactly.

5
00:00:16.100 --> 00:00:19.360
He's going all the way round the loop that we have created.

6
00:00:19.370 --> 00:00:26.880
Let's dive in and see how we can do this nice and easily with our Eye controller so ideally I'd like

7
00:00:26.880 --> 00:00:31.020
this guard to follow this patrol path that is around him.

8
00:00:31.020 --> 00:00:35.120
Now the first thing we need to do for that is to have a reference to it.

9
00:00:35.130 --> 00:00:39.020
So I'm going to create a new serialized field and you can follow along with me on this one.

10
00:00:39.270 --> 00:00:43.170
So a serialized field and it's going to be of what type.

11
00:00:43.290 --> 00:00:49.230
It's going to be of patrol type patrol path type because that's what we want to reference to that patrol

12
00:00:49.230 --> 00:00:51.210
path that we've already created.

13
00:00:51.240 --> 00:00:54.990
And as Rick says call the duck a duck I'm going to call this a patrol path.

14
00:00:54.990 --> 00:00:57.720
Now this can be no.

15
00:00:57.780 --> 00:00:59.230
And that's fine.

16
00:00:59.250 --> 00:01:08.060
So we are going to have this enemy enemy nearest the player having a reference to a patrol path.

17
00:01:08.070 --> 00:01:10.770
So which enemy is it.

18
00:01:10.770 --> 00:01:11.930
This is the enemy.

19
00:01:11.970 --> 00:01:14.190
And is this the patrol path.

20
00:01:14.220 --> 00:01:18.410
Now it's hard to know which patrol path is which is it's kind of getting a little bit tricky.

21
00:01:18.420 --> 00:01:25.100
And we might want to at some point distinguish between drawing the patrol path in a different way to

22
00:01:25.110 --> 00:01:28.990
me you might want to have it really grayed out when it's just in the background.

23
00:01:29.010 --> 00:01:36.330
And then when you select the patrol path or maybe even the enemy that has that patrol path then the

24
00:01:36.480 --> 00:01:38.220
patrol path gets highlighted.

25
00:01:38.220 --> 00:01:40.940
But at the moment that's not what I'm going to do.

26
00:01:40.980 --> 00:01:44.790
We're gonna leave it as it is for now and then we might tweak this later this is the point where Rick

27
00:01:44.790 --> 00:01:49.900
says you know think about what's a tweak what is really necessary at this stage of the game.

28
00:01:49.910 --> 00:01:53.240
And right now this is working just fine so I'm not going to touch it.

29
00:01:53.280 --> 00:01:56.260
So we've got this patrol path and we've got this enemy.

30
00:01:56.460 --> 00:02:02.510
And what I want to do is find his eye controller and drag that patrol path in.

31
00:02:02.580 --> 00:02:04.950
Now notice this has to be done.

32
00:02:04.980 --> 00:02:10.650
This has to be changed in the scene because that patrol path exists in the scene.

33
00:02:10.650 --> 00:02:16.950
And so the link to it has to be done in the scene you can see it comes up as an override of the prefab.

34
00:02:16.950 --> 00:02:19.340
And that's what we need to have happen.

35
00:02:19.350 --> 00:02:23.340
Because if you think about it the patrol path it can't have a reference to a patrol path it doesn't

36
00:02:23.340 --> 00:02:24.500
exist in a scene.

37
00:02:24.690 --> 00:02:29.220
So it is fundamentally linked to this enemy being in this particular scene.

38
00:02:29.220 --> 00:02:32.550
And so it won't be applied at any kind of prefab level.

39
00:02:32.560 --> 00:02:32.950
OK.

40
00:02:32.970 --> 00:02:37.680
So that said he now has access to the patrol path.

41
00:02:37.680 --> 00:02:43.140
What we want to do is act guarding behavior we need to change it to be more than just guarding behavior.

42
00:02:43.140 --> 00:02:49.890
Now it's going to be patrol behavior which I think kind of subsumes the guarding behavior the guard

43
00:02:49.890 --> 00:02:53.100
behavior is a default but no more than a default.

44
00:02:53.280 --> 00:03:00.940
And if you have a patrol path you will actually patrol instead of guard so the first thing we're going

45
00:03:00.940 --> 00:03:09.180
to do is implement a kind of skeleton of the logic behind patrol behavior.

46
00:03:09.250 --> 00:03:15.180
What this means is that the guard position is just one of the possible next positions.

47
00:03:15.190 --> 00:03:23.110
So if I take a vector three to be the next position and the guard position is the default.

48
00:03:23.170 --> 00:03:31.930
But if we have a patrol path so patrol path is not equal to no then we can do our patrolling behavior

49
00:03:32.020 --> 00:03:33.280
instead.

50
00:03:33.280 --> 00:03:35.730
So how is that going to work.

51
00:03:35.740 --> 00:03:37.530
Well in broad strokes it works like this.

52
00:03:37.570 --> 00:03:49.890
If we are at the waypoint so at the waypoint we want to head towards then we need to cycle the waypoint.

53
00:03:49.970 --> 00:03:56.630
And by that I mean we need to advance the waypoint we're aiming towards to be the next waypoint and

54
00:03:56.900 --> 00:04:07.480
otherwise we are just going to set the next position to be equal to the get current white.

55
00:04:07.580 --> 00:04:17.360
Like so and we need to put next position into start move action and I need to make some bodies for all

56
00:04:17.360 --> 00:04:22.190
these methods so that it stops complaining but I'm not going to actually implement them I'm gonna leave

57
00:04:22.220 --> 00:04:29.030
this up to you to implement how you're going to detect whether you're at a waypoint In fact I'll help

58
00:04:29.030 --> 00:04:35.630
you with this one and then we can do the cycle waypoint and current get current waypoint as your challenges.

59
00:04:35.630 --> 00:04:41.060
If you do want to have a go at implementing at a waypoint you can go ahead pause a video now but otherwise

60
00:04:41.390 --> 00:04:47.350
I will tell you how to do that one and we'll do cycle waypoint and get current waypoint to later.

61
00:04:47.960 --> 00:04:53.650
So the first thing is at current waypoint I'm going to do this with a configurable parameter here.

62
00:04:53.970 --> 00:05:02.540
It's going to be a serialized field float waypoints tolerance and I'm going to default this to maybe

63
00:05:02.540 --> 00:05:04.850
1 meter by default.

64
00:05:05.000 --> 00:05:05.350
Okay.

65
00:05:05.390 --> 00:05:12.440
And then what we want to do is basically say are we at that waypoints which we have now done a few times

66
00:05:12.800 --> 00:05:14.330
with this distance.

67
00:05:14.420 --> 00:05:20.750
So we've got the distance to play for example as a place we can base it off of.

68
00:05:20.750 --> 00:05:31.490
And I'm gonna say float distance to waypoints is equal to the vector three dot distance transformed

69
00:05:31.490 --> 00:05:35.300
dot position and the waypoint.

70
00:05:35.300 --> 00:05:40.490
So we need to get the current waypoint in order to do this we're using methods that we haven't even

71
00:05:41.090 --> 00:05:42.670
implemented yet but that's fine.

72
00:05:43.250 --> 00:05:49.490
So get current waypoint that's gonna give us the distance to the waypoints and then we want to detect

73
00:05:49.520 --> 00:05:54.970
whether that distance to waypoint is less than the waypoint tolerance here.

74
00:05:55.150 --> 00:05:55.670
Like so.

75
00:05:56.000 --> 00:05:59.360
And it's giving me an error because I'm throwing that which is weird.

76
00:05:59.360 --> 00:06:00.350
I need to return.

77
00:06:00.430 --> 00:06:02.400
I haven't quite done it properly.

78
00:06:02.420 --> 00:06:07.160
Okay so this isn't going to work because cycle waypoint and current waypoint are not yet implemented.

79
00:06:07.160 --> 00:06:11.240
So this is your challenge to finish the patrol behavior.

80
00:06:11.330 --> 00:06:15.650
You're going to implement get waypoint think about whether we've got code to already help us with this

81
00:06:16.040 --> 00:06:17.500
implement cycle waypoint again.

82
00:06:17.510 --> 00:06:19.370
Do we have code that already helps us with this.

83
00:06:19.670 --> 00:06:26.510
And are we going to need any extra state to implement these to pause the video and have a go at the

84
00:06:26.510 --> 00:06:29.010
challenge okay.

85
00:06:29.010 --> 00:06:30.150
Welcome back.

86
00:06:30.180 --> 00:06:33.840
So as I hinted there is gonna be some state we need to remember it.

87
00:06:33.840 --> 00:06:35.690
Think about it from the guard's perspective.

88
00:06:35.820 --> 00:06:37.920
How does he know how to follow a patrol path.

89
00:06:37.920 --> 00:06:39.500
Well one thing is he's got the map.

90
00:06:39.510 --> 00:06:42.840
The patrol path in his pocket that tells him where he should go.

91
00:06:42.840 --> 00:06:45.600
But also he knows where he's headed to next.

92
00:06:45.600 --> 00:06:47.900
On the patrol path he needs to remember that.

93
00:06:48.030 --> 00:06:53.310
So you might be tempted to do this as a vector 3 but I think the best thing to do is the index so he

94
00:06:53.340 --> 00:06:58.500
knows on his map that he's got to go to point one then point two then point three and at any point he

95
00:06:58.500 --> 00:07:04.470
is remembering that he needs to go to currently needs to go to point one and once he's at point one

96
00:07:05.070 --> 00:07:07.770
then he needs to go to point two and so on and so forth.

97
00:07:07.800 --> 00:07:14.280
So we're gonna have an int current waypoint index and the initial index that we're going to aim to go

98
00:07:14.280 --> 00:07:15.390
towards is zero.

99
00:07:15.390 --> 00:07:18.270
So the first waypoint in our list.

100
00:07:18.270 --> 00:07:22.940
I know it's confusing 0 being the first but hey Will we get used to that as programmers.

101
00:07:22.980 --> 00:07:25.730
So the current waypoint index is what we're going to use now.

102
00:07:25.890 --> 00:07:31.140
As I said the get current waypoint and cycle with what we've already got code that does most of this

103
00:07:31.140 --> 00:07:33.000
and it's the patrol path code.

104
00:07:33.150 --> 00:07:36.910
We've got a get waypoint which given the index tells us the position.

105
00:07:36.920 --> 00:07:41.830
We've got a get next index which given the index gives us the next index.

106
00:07:41.850 --> 00:07:44.250
So that helps us with cycling.

107
00:07:44.430 --> 00:07:47.890
So the private now needs to become public.

108
00:07:47.940 --> 00:07:53.740
So I'm gonna make the next index public and the get waypoint public as well.

109
00:07:54.120 --> 00:08:03.210
Then in get current waypoints we can just go ahead and return the patrol path dot get waypoints and

110
00:08:03.210 --> 00:08:07.060
we can give it the current waypoint index like so.

111
00:08:07.530 --> 00:08:10.860
So the current waypoint is the get waypoint to the current waypoint index.

112
00:08:10.860 --> 00:08:12.390
Makes sense right now.

113
00:08:12.420 --> 00:08:16.040
The cycle waypoints how are we going to implement that.

114
00:08:16.050 --> 00:08:24.030
Well we're going to say that the current waypoint index is equal to the patrol path dot gets next index

115
00:08:24.120 --> 00:08:26.620
of the current waypoint index.

116
00:08:26.700 --> 00:08:30.920
So we have updated the current waypoint index using the troll path.

117
00:08:30.930 --> 00:08:33.800
Knowledge of what the next waypoint should be.

118
00:08:34.380 --> 00:08:36.510
So hopefully that should do the trick.

119
00:08:36.510 --> 00:08:40.880
Let's see whether our enemy is now able to patrol by going ahead and hitting play.

120
00:08:41.360 --> 00:08:41.610
Okay.

121
00:08:41.640 --> 00:08:44.090
So he is attacking me which is his primary directive.

122
00:08:44.120 --> 00:08:48.520
But let's get out of his way and see if he goes and does some patrolling behavior.

123
00:08:49.580 --> 00:08:53.220
So he's going up to the first patrol point now.

124
00:08:53.570 --> 00:08:59.710
Then he's going to the second patrol point the third patrol point the fourth patrol point and so on

125
00:08:59.720 --> 00:09:03.110
you can see that's just check that he's gonna go all the way round in the loop.

126
00:09:03.110 --> 00:09:07.780
Hopefully he will because the get next index is using the exact same logic as the lines.

127
00:09:07.880 --> 00:09:13.040
Now I'm really happy that it's doing that because it tells us that the lines are going to be correct

128
00:09:13.100 --> 00:09:17.390
with the behavior of the of the enemy as recalls.

129
00:09:17.390 --> 00:09:21.980
So we've got that working at the moment it's slightly unnatural that he just follows the patrol route

130
00:09:21.980 --> 00:09:23.510
continuously.

131
00:09:23.510 --> 00:09:27.310
We're going to add in some dwell time in the next lecture so we'll see you there.
