1
00:00:04,750 --> 00:00:06,250
Hello and welcome in this lecture.

2
00:00:06,250 --> 00:00:10,960
We are going to be adding in a river and we're gonna be making it so that you can actually walk on that

3
00:00:10,960 --> 00:00:15,850
river say as you can see if I hover over the river I get a little X cursor and there is no nav mesh

4
00:00:15,850 --> 00:00:20,890
there and basically anywhere where there is no nav mesh I get a little X cursor saying I can't walk

5
00:00:20,890 --> 00:00:23,650
that which makes sense if there isn't enough mesh.

6
00:00:23,650 --> 00:00:26,980
So let's dive in and see how we can do that.

7
00:00:27,010 --> 00:00:33,060
So as you can see here with the navigation switched on it and the navigation pane we have got nav mesh

8
00:00:33,070 --> 00:00:37,030
down here in this valley where we can move to.

9
00:00:37,330 --> 00:00:39,550
And that's not really what we want.

10
00:00:39,550 --> 00:00:42,730
We don't want to be able to navigate through the lake.

11
00:00:42,760 --> 00:00:44,230
We want that to be off limits.

12
00:00:44,230 --> 00:00:49,390
So how do we do a lake that is actually off limits a piece of water or something that we can't pass

13
00:00:49,390 --> 00:00:50,110
through.

14
00:00:50,110 --> 00:00:53,260
Well the hint is with these buildings over here.

15
00:00:53,520 --> 00:00:56,770
And so these buildings are in fact static I believe.

16
00:00:56,770 --> 00:00:57,910
Yes they are.

17
00:00:57,910 --> 00:01:02,620
And if you make anything static essentially punches a hole through the NAF mesh.

18
00:01:02,620 --> 00:01:09,580
If it is not itself something that is walkable or the working conditions are that it would be higher

19
00:01:09,580 --> 00:01:09,790
up.

20
00:01:09,790 --> 00:01:14,440
So for example you might be able to walk over the top of this building but that doesn't really help

21
00:01:14,440 --> 00:01:18,860
because you can't get up to the top of it because the slopes are too steep.

22
00:01:18,880 --> 00:01:25,180
Now we want to do the same thing essentially at is to have the lake the water level down here.

23
00:01:25,180 --> 00:01:27,310
Be not walkable.

24
00:01:27,310 --> 00:01:33,370
So the way we're gonna do this is under the environment I'm going to create a new 3D object and create

25
00:01:33,400 --> 00:01:36,930
a plane and the plane is going to be our water plane.

26
00:01:36,940 --> 00:01:39,040
So let's see where that plane has got to.

27
00:01:39,040 --> 00:01:40,030
I think it's quite small.

28
00:01:40,030 --> 00:01:41,020
I'm going to double click on it.

29
00:01:41,020 --> 00:01:45,310
Try and focus in and it's yes it's it's quite small indeed.

30
00:01:45,310 --> 00:01:45,700
There we go.

31
00:01:45,700 --> 00:01:46,840
That's our plane.

32
00:01:46,840 --> 00:01:51,160
So we want to expand the size of that plane.

33
00:01:51,490 --> 00:01:59,200
So having it selected I'm going to scale it up initially I'm going to scale up by 100 in x and z and

34
00:01:59,200 --> 00:02:02,020
let's see if that does the trick.

35
00:02:02,260 --> 00:02:05,410
And it seems way over large.

36
00:02:05,410 --> 00:02:05,680
Okay.

37
00:02:05,700 --> 00:02:07,260
So that's not what we want.

38
00:02:07,260 --> 00:02:15,140
Let's see where the 10 is more like it's and then what we're gonna do is we're going to bring that plane

39
00:02:15,170 --> 00:02:22,790
up until it intersects with our train and you can see that it starts to fill out those areas of land

40
00:02:23,180 --> 00:02:32,000
that we have been digging down or Rick has dig dug down into to create our lake or our river.

41
00:02:32,390 --> 00:02:36,500
So now I want to show you that if we make this static.

42
00:02:36,500 --> 00:02:44,450
First of all then we go over to our navigation and we get to bake and we bake in the nav mesh you can

43
00:02:44,450 --> 00:02:48,700
see obviously the nav mesh is trying to go over it by default.

44
00:02:48,770 --> 00:02:54,380
That's because this particular piece of terrain has been marked as walkable.

45
00:02:54,380 --> 00:02:56,420
We want to make it not walkable.

46
00:02:56,420 --> 00:02:58,670
And then if we go and bake again.

47
00:02:58,700 --> 00:03:02,270
So that was going over into the object tab you can make it not walkable from there.

48
00:03:02,270 --> 00:03:09,140
If you've got the plane selected and if you bake now you can see the nav mesh avoids it it knows that

49
00:03:09,170 --> 00:03:13,910
is impossible to walk over that piece of scenery.

50
00:03:13,910 --> 00:03:17,630
So we're going to rename the plane to water.

51
00:03:18,290 --> 00:03:24,000
And we're also going to give it some nice look because at the moment it is looking very plain haha.

52
00:03:24,050 --> 00:03:28,770
So if we go to our asset pack there should be a water asset in here somewhere.

53
00:03:28,800 --> 00:03:30,170
I'm just going to search for water.

54
00:03:30,200 --> 00:03:35,190
And we have the water material from the polygon adventure pack.

55
00:03:35,210 --> 00:03:42,650
So drop that on to the water object and you can see that it has this nice translucent effect.

56
00:03:42,650 --> 00:03:44,530
So that's good enough for now.

57
00:03:44,570 --> 00:03:52,520
But I want to show you that actually I can still I still get the cursor to move to that part of the

58
00:03:52,520 --> 00:03:54,920
terrain even though I can actually walk.

59
00:03:54,980 --> 00:03:59,540
You see the character tries to get as close as possible but can't actually make it there.

60
00:03:59,540 --> 00:04:04,160
Now I want to give some performance that you can't walk onto water.

61
00:04:04,160 --> 00:04:09,960
How can we disable movement to an area that doesn't have a nav mesh.

62
00:04:10,070 --> 00:04:15,590
Well it's not actually that straightforward as you would hope because you can't recast to the nav mesh

63
00:04:15,590 --> 00:04:23,420
directly but you can try to project a particular point onto that NAF mesh and try and find the closest

64
00:04:23,420 --> 00:04:25,220
point that is on the navigation.

65
00:04:25,220 --> 00:04:27,970
That's what we're going to attempt to do.

66
00:04:28,000 --> 00:04:34,110
So what we're going to do is we'll have a look in our interact with movement of the player controller

67
00:04:34,120 --> 00:04:37,780
script and currently what we've got is a method.

68
00:04:37,810 --> 00:04:47,230
We're doing a rate cast and we're doing has hit in here and based off of that we are then able to say

69
00:04:47,260 --> 00:04:54,470
okay if we've able to hit the ground then go ahead and try and move to that location.

70
00:04:54,520 --> 00:05:00,890
I want to add in a bit more complexity here where essentially we're saying are we hitting the ground.

71
00:05:01,000 --> 00:05:08,890
And that bit of ground is near some nav mesh so that we are essentially ruling out areas that don't

72
00:05:08,890 --> 00:05:13,960
have a bit of nav mesh near them like this bit here like these steep slopes of the hills.

73
00:05:13,990 --> 00:05:17,360
These are places we can't walk to because there is no NAF mesh.

74
00:05:17,410 --> 00:05:22,270
So in order to do that I'm going to introduce a new function that's going to be private is running and

75
00:05:22,270 --> 00:05:25,210
we calling it in this interact with movements.

76
00:05:25,210 --> 00:05:31,330
It's going to return bool because it is going to be true or false depending on whether we are hitting

77
00:05:31,720 --> 00:05:37,090
something that is near the nav mesh and I'm going to call it very much the same as our recast.

78
00:05:37,090 --> 00:05:46,350
I'm going to call it right cast nav mesh and what I want to do here is as well as returning the ball.

79
00:05:46,450 --> 00:05:53,160
I want to also return an out parameter that will give us the location that we should start moving to

80
00:05:53,170 --> 00:05:59,500
it's going to find the location on the nav mesh rather than just the location that was hit.

81
00:05:59,500 --> 00:06:06,220
So this is going to be an outer parameter we've used our parameters before here in the recast declaring

82
00:06:06,220 --> 00:06:11,830
them is very much this almost the same as using them we have to use the out keyword and then you have

83
00:06:11,830 --> 00:06:17,980
to type very much the same as you would have the type of return type or the type of a parameter in here.

84
00:06:18,010 --> 00:06:24,430
So it's going to be a vector three basically and it is going to be the target.

85
00:06:24,430 --> 00:06:27,260
I'm going to call it OK now.

86
00:06:27,320 --> 00:06:32,770
Within any function that has a return value obviously you need to return something.

87
00:06:32,770 --> 00:06:35,170
So we're going to return true.

88
00:06:35,170 --> 00:06:38,200
Just for now and then we're going to fill this out as part of the challenge.

89
00:06:38,350 --> 00:06:40,680
But you will notice that this gives us an error still.

90
00:06:40,690 --> 00:06:45,570
It says Hey you've gotten our parameter that needs to be assigned to before you return.

91
00:06:45,580 --> 00:06:47,200
So this is just a safety.

92
00:06:47,200 --> 00:06:51,580
That C sharp is putting in place for us it's saying that essentially you've got two things that you're

93
00:06:51,580 --> 00:06:56,590
trying to return out of this function one is a boolean and one is a vector three and you've forgotten

94
00:06:56,590 --> 00:06:58,410
to update that to three.

95
00:06:58,420 --> 00:07:04,600
So we do need to set the target to something we can just set it to any kind of new vector 3 and that

96
00:07:04,600 --> 00:07:06,430
should do the trick.

97
00:07:06,430 --> 00:07:12,520
So basically what we're saying is that Target is just a default vector three at the moment but we want

98
00:07:12,520 --> 00:07:18,340
this to actually end up reflecting a position on the nav mesh which we can talk about in a second.

99
00:07:18,610 --> 00:07:21,610
But let's think about how we're going to use this broadcast nav mesh.

100
00:07:21,610 --> 00:07:26,310
The point is you're going to use it as if we're using it like this broadcast.

101
00:07:26,320 --> 00:07:33,190
So I'm going to comment out the right cast and the recast hit at the moment and I'm going to replace

102
00:07:33,190 --> 00:07:43,070
that with a bool and we're going to set the has hit from our right cast nav mesh like so.

103
00:07:43,910 --> 00:07:47,090
And we're also gonna need to have this out parameter.

104
00:07:47,180 --> 00:07:52,690
So let's declare a vector three cold target.

105
00:07:52,740 --> 00:07:56,650
So and that's what we're going to pass in to our right cast nav mesh.

106
00:07:56,720 --> 00:08:04,620
So it's going to be out target like so and then this target can be used instead of the hit points.

107
00:08:04,630 --> 00:08:10,080
So we've just abstracted away all that detail that we had in doing the recasts.

108
00:08:10,090 --> 00:08:12,090
Now we are recasting to the nth affirmation.

109
00:08:12,100 --> 00:08:18,290
If we hit some point on the nav mesh then we are going to move to that point.

110
00:08:18,320 --> 00:08:18,980
That's the idea.

111
00:08:19,760 --> 00:08:25,000
So let's talk more about how we want our recast map mesh to actually work.

112
00:08:25,030 --> 00:08:32,350
Well the first thing we're gonna do is just a straightforward recast and that's going to hit the the

113
00:08:32,480 --> 00:08:39,510
terrain so to terrain so recast to the terrain and then the next thing we want to do is try and see

114
00:08:39,540 --> 00:08:43,510
if there is a nav mesh point that isn't nearby.

115
00:08:43,560 --> 00:08:54,130
So find nearest nav mesh point and then basically we only want to return true if we're able to find

116
00:08:54,130 --> 00:08:55,320
that enough points

117
00:08:58,570 --> 00:09:00,360
so return true if found.

118
00:09:00,420 --> 00:09:06,650
So these are the basic steps that we're trying to go through app to aid us in this quest.

119
00:09:06,660 --> 00:09:14,070
We have got the NAF mesh dot sample position sample position does exactly this second step to find the

120
00:09:14,070 --> 00:09:16,500
nearest nav mesh point.

121
00:09:16,500 --> 00:09:23,910
So what you do is you provide it with a position and it will try and find the nearest position and the

122
00:09:23,910 --> 00:09:29,850
parameters you give it are essentially the maximum distance that it should try to find that position

123
00:09:29,880 --> 00:09:30,580
over.

124
00:09:30,750 --> 00:09:32,430
And also an area mask.

125
00:09:32,430 --> 00:09:37,950
Now the area mask is a little bit on the confusing side but if you just go with the default that's given

126
00:09:37,950 --> 00:09:43,960
here in the example nav mesh dots all areas then you'll be absolutely just fine.

127
00:09:44,070 --> 00:09:49,140
And this configuration this is more of a configuration parameter that the max distance that you want

128
00:09:49,200 --> 00:09:50,380
to be able to go.

129
00:09:50,550 --> 00:09:56,930
And as you can see it also has an out parameter so it's very much like the recast nav mesh and a recast

130
00:09:56,940 --> 00:10:03,900
method in that it simply returns a boolean but it also gives us more information in that NAF mesh hit

131
00:10:04,050 --> 00:10:08,310
out parameter and as you can see we click on that nav mesh hit our parameter.

132
00:10:08,580 --> 00:10:15,180
We have got stuff like the distance to the points the hit the position that we hit on the nav mesh as

133
00:10:15,180 --> 00:10:19,060
well which is going to be useful for setting the target.

134
00:10:19,080 --> 00:10:25,700
So here's the challenge for you to disable when we are not on the nav mesh so implement the pseudocode

135
00:10:25,770 --> 00:10:27,730
that I've outlined there.

136
00:10:28,050 --> 00:10:32,410
Move over the recasting code that we've commented out because you're gonna need that in the first half

137
00:10:32,410 --> 00:10:33,760
of the pseudocode.

138
00:10:33,780 --> 00:10:40,140
If that fails then the whole method needs to fail so return early and try to use the sample position

139
00:10:40,140 --> 00:10:41,420
for the second step.

140
00:10:41,430 --> 00:10:47,370
See if you can figure it out from the API how you can get the closest position on the nav mesh using

141
00:10:47,370 --> 00:10:48,010
that API.

142
00:10:48,090 --> 00:10:54,100
And if it succeeds then you want to be returning the target and that should basically by filling out

143
00:10:54,100 --> 00:10:55,400
that method help you.

144
00:10:55,450 --> 00:10:59,880
And basically allow it to disable when we're not hovering over the nav mesh.

145
00:11:00,210 --> 00:11:03,260
Pause the video and a go okay.

146
00:11:03,260 --> 00:11:03,710
Welcome back.

147
00:11:03,710 --> 00:11:06,240
Hopefully those instructions helped you through.

148
00:11:06,260 --> 00:11:07,210
Let's give it a shot.

149
00:11:07,250 --> 00:11:12,710
First thing I'm going to take there's commented out code and replace the first comments with it because

150
00:11:12,710 --> 00:11:13,750
that's essentially what it's doing.

151
00:11:13,760 --> 00:11:16,180
It's taking that recast.

152
00:11:16,190 --> 00:11:21,710
Now if we have not hit if not has hit then this is where we want to return.

153
00:11:21,740 --> 00:11:24,210
Nice and early basically saying false hate.

154
00:11:24,230 --> 00:11:28,520
We did not get any sort of useful information here.

155
00:11:28,520 --> 00:11:30,460
Now notice even if we return false.

156
00:11:30,470 --> 00:11:33,490
We need to set the target of the OUTFRONT.

157
00:11:33,500 --> 00:11:38,030
So I'm just gonna use that default vector 3 to set it right up at the top.

158
00:11:38,030 --> 00:11:44,150
Next step is our second comment to find the sample point in the meat really here in the challenge.

159
00:11:44,240 --> 00:11:50,870
So the nav mesh dots sample position we're going to have to do on these and nav mesh.

160
00:11:51,290 --> 00:11:56,390
We might need to include something we might need to include a unity engine A.I. hopefully you've figured

161
00:11:56,390 --> 00:12:03,500
that out nav mesh dot sample position and we're gonna take the source position which is going to be

162
00:12:03,500 --> 00:12:10,340
our hit dot point and we're going to have to pass an output round which is gonna be a type nav mesh

163
00:12:10,430 --> 00:12:10,740
hit.

164
00:12:10,760 --> 00:12:15,160
So let's create a nav mesh hit to fill here.

165
00:12:15,210 --> 00:12:20,810
I'm going to call this the nav mesh hits to distinguish it from the hit that we had above.

166
00:12:20,920 --> 00:12:26,630
We're gonna pass that in as an output ounces prefix it with the out keyword and then we wants to configure

167
00:12:26,630 --> 00:12:28,460
it with a max distance.

168
00:12:29,180 --> 00:12:36,050
So I'm going to go ahead and create that as a configuration parameter to our player controller.

169
00:12:36,050 --> 00:12:39,550
So it's going to have a serialized field.

170
00:12:39,560 --> 00:12:50,000
It's going to be a float and I'm going to call it the max nav mesh projection distance.

171
00:12:50,180 --> 00:12:51,220
That's a very long one.

172
00:12:51,230 --> 00:13:00,180
Watch that default be I'm going to go with about one F as defaults lead and then we're going to use

173
00:13:00,180 --> 00:13:03,170
that in our sample NAF mash.

174
00:13:03,180 --> 00:13:06,830
Down here on line one hundred and 111.

175
00:13:06,990 --> 00:13:13,200
And then finally that area mask as I said let's just use NAF mash dot or areas by default.

176
00:13:13,200 --> 00:13:14,520
Nice and easy.

177
00:13:14,520 --> 00:13:17,960
And then we have got a return value from here.

178
00:13:17,970 --> 00:13:20,340
So it's going to return a boolean.

179
00:13:20,340 --> 00:13:27,570
So let's store that boolean and it's gonna be let's think the result is essentially going and tell us

180
00:13:27,570 --> 00:13:35,250
whether it has cast to NAV mesh nicely was it close enough.

181
00:13:35,280 --> 00:13:39,600
Now we're getting a really long line so I'm just going to try and split things out a little bit like

182
00:13:39,630 --> 00:13:43,350
so to keep things all visible on the screen at same time.

183
00:13:43,350 --> 00:13:44,330
And then I'm gonna do it.

184
00:13:44,370 --> 00:13:48,570
If not has cast now finish then we need to return False again.

185
00:13:48,570 --> 00:13:55,590
Basically we still have not got a valid point here we should not be displaying the pointer to be able

186
00:13:55,590 --> 00:14:02,540
to move here because we are not able to find any nav mesh near the point that was hit by the cursor.

187
00:14:02,670 --> 00:14:04,800
So okay that's fine.

188
00:14:04,800 --> 00:14:06,180
So we're turning false in this case.

189
00:14:06,180 --> 00:14:11,920
Otherwise we're returning true but we need to make sure we remember to update our target so that we

190
00:14:11,920 --> 00:14:18,480
move to the right location and the target can be updated by using the nav mesh hit dot position that

191
00:14:18,480 --> 00:14:22,060
gives us the position on the nav mesh that we have cast too.

192
00:14:22,110 --> 00:14:26,500
So let's go over into unity and see whether this is doing the trick.

193
00:14:26,520 --> 00:14:30,810
So I'm just gonna make sure I have my scene saved just because I don't want to forget to committed to

194
00:14:30,810 --> 00:14:32,010
version control later.

195
00:14:32,310 --> 00:14:38,190
And as you can see when I hover over our little river here you can see I get that little X cursor saying

196
00:14:38,250 --> 00:14:41,430
no you can't move here because there's no nav mesh nearby.

197
00:14:41,460 --> 00:14:47,860
Now I start to move closer to the nav mesh edges and sure enough it is projecting to that now mesh it's

198
00:14:47,880 --> 00:14:52,790
cast into the NAB mesh and it is giving me a point on the nav mesh that I want to move to.

199
00:14:52,800 --> 00:14:56,960
They go it's give me a point on the map to move to try and move these trees.

200
00:14:56,970 --> 00:15:03,420
Well they're okay because that that one meter of leeway is allowing us just to move near the trees.

201
00:15:03,420 --> 00:15:09,600
But we really want to avoid is being able to click on a hill here and having the player not at all know

202
00:15:09,960 --> 00:15:12,530
where they're going to end up.

203
00:15:12,570 --> 00:15:18,630
So that was quite an action packed lecture and what we have found out how to do is how to sample positions

204
00:15:18,630 --> 00:15:19,430
on a NAF match.

205
00:15:19,440 --> 00:15:24,660
We get one position and we try and find the closest position on that nav mesh and that's enabled us

206
00:15:24,960 --> 00:15:32,610
to disable the cursor reference for movement when we're not actually hovering over any nav mesh.

207
00:15:32,610 --> 00:15:34,290
Now he's a little weird piece of funniness.

208
00:15:34,290 --> 00:15:38,040
If I go and click on this tiny piece of nav mesh up here at the top right.

209
00:15:38,040 --> 00:15:40,180
What kind of routes are going to take me on.

210
00:15:40,290 --> 00:15:41,220
You don't really know.

211
00:15:41,220 --> 00:15:47,130
It's a long route and so it is a little bit odd and unsure as to where it's going to take us in this

212
00:15:47,130 --> 00:15:52,110
case it was trying to send us in this sort of direction but if I had clicked on there it might have

213
00:15:52,110 --> 00:15:55,710
taken us all round the houses all the way around here.

214
00:15:55,740 --> 00:15:58,710
We want to avoid that and that's going to be the subject of the next lecture.

215
00:15:58,740 --> 00:15:59,350
So we'll see you.
