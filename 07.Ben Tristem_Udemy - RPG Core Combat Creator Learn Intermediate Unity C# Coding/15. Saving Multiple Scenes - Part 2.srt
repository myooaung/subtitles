1
00:00:04,530 --> 00:00:08,220
Hello and welcome to part two of our saving system lecture.

2
00:00:08,220 --> 00:00:14,280
So what we're doing here is we are trying to let's see merge these two scenes we're trying to be able

3
00:00:14,280 --> 00:00:21,500
to save in one file save on another and be able to load in both files and not to lose any data.

4
00:00:21,510 --> 00:00:22,680
So we want to merge.

5
00:00:22,680 --> 00:00:29,280
So this means that when we are in scene one we can save our scene one you I.D. into the safe save file

6
00:00:30,120 --> 00:00:35,630
in scene two we can save the scene to you you I.D. and they don't overwrite each other.

7
00:00:35,700 --> 00:00:40,670
And then when we go back to scene one again we can do serialized scene ones you I.D..

8
00:00:40,830 --> 00:00:47,550
Now the key here is that before we save in say scene two is you your I.D. We need to first look load

9
00:00:47,580 --> 00:00:51,800
the dictionary from Scene 1 update that dictionary and then save it back.

10
00:00:51,810 --> 00:00:53,820
So that's fairly straightforward.

11
00:00:53,820 --> 00:00:58,650
What we want to do is in save we want to first of all load the original state.

12
00:00:58,680 --> 00:00:59,670
So let's do that.

13
00:00:59,730 --> 00:01:05,430
So we're going to take a load file that's why we separated them out to make this kind of stuff nice

14
00:01:05,430 --> 00:01:06,180
and easy.

15
00:01:06,270 --> 00:01:09,900
And this is going to be saved into a state dictionary.

16
00:01:09,900 --> 00:01:15,510
So it's going to be a type of dictionary string to object and call it state.

17
00:01:15,870 --> 00:01:18,360
And that's going to be the value from Load File.

18
00:01:18,360 --> 00:01:24,630
So this is us loading in and then the final step is going to be for us to save that state back to the

19
00:01:24,630 --> 00:01:25,500
save file.

20
00:01:25,500 --> 00:01:31,020
But in between we need to change something in between these two we need to capture the state into the

21
00:01:31,020 --> 00:01:32,120
state file.

22
00:01:32,190 --> 00:01:36,960
So what we've currently got is the capture state returns a dictionary and it creates that dictionary

23
00:01:36,960 --> 00:01:38,250
from scratch.

24
00:01:38,250 --> 00:01:42,720
Now what I'm gonna do is I'm going to flip this round so instead of returning the dictionary it's going

25
00:01:42,720 --> 00:01:45,450
to take in the dictionary and it's going to add to it.

26
00:01:45,450 --> 00:01:49,710
So it's going to take in a dictionary called state add to it's going to return void.

27
00:01:49,950 --> 00:01:54,810
And then what we can do is we can remove this line at the beginning of capture a state that actually

28
00:01:54,810 --> 00:01:59,000
creates the new dictionary because we can just update the dictionary that's passed in.

29
00:01:59,040 --> 00:02:04,430
And similarly we don't need to return the state anymore because we are just updating it.

30
00:02:04,440 --> 00:02:07,260
The state is already in that dictionary that was passed in.

31
00:02:07,260 --> 00:02:14,100
So now what we can do is we can do a capture state in save between loading and saving.

32
00:02:14,100 --> 00:02:20,070
So we have taken the state from the old file updated the state and then written it overwritten it in

33
00:02:20,070 --> 00:02:26,790
the file so that the resultant state contains the merge of all the state that we have seen so far OK.

34
00:02:26,790 --> 00:02:32,010
So that's clear enough but there is a problem because if I don't have a save file yet because I've deleted

35
00:02:32,010 --> 00:02:39,480
it or for whatever reason and I go ahead and hit play and the first thing I want to do is perhaps I

36
00:02:39,480 --> 00:02:41,040
want to save Oh dear.

37
00:02:41,040 --> 00:02:42,510
That doesn't seem to be working.

38
00:02:42,510 --> 00:02:47,760
So what's going on here is saying hey no file found and the reason for that is because we are trying

39
00:02:47,760 --> 00:02:52,850
to load from the file and the file does not exist yet which is a bit of a problem.

40
00:02:52,860 --> 00:02:58,650
I'll have to say now there is another issue as well which is that if the file doesn't exist yet we also

41
00:02:58,650 --> 00:02:59,940
can't load from it.

42
00:02:59,940 --> 00:03:04,680
Maybe that's something that you'd say well that's not a problem but really we would want to be able

43
00:03:04,680 --> 00:03:07,890
to load and for nothing no state to come in.

44
00:03:07,890 --> 00:03:11,190
So that is also an exception that I don't like the look of.

45
00:03:11,220 --> 00:03:16,070
So that's going to be your challenge to implement or to fix the saving and loading.

46
00:03:16,070 --> 00:03:19,070
So you should be able to save when there is no file presence.

47
00:03:19,080 --> 00:03:24,990
And my hint to you is that you can check whether there is no file presence using the file dot exists

48
00:03:25,350 --> 00:03:31,080
and then you want to be able to return something out of load file instead of trying to load the actual

49
00:03:31,080 --> 00:03:31,530
file.

50
00:03:31,530 --> 00:03:36,540
Have a think about what that should be that you should return out of load file when there is no file

51
00:03:37,140 --> 00:03:40,740
and you should be able to load with no file.

52
00:03:40,770 --> 00:03:45,990
So already this first step is going to help with that checking whether the file exists and returning

53
00:03:45,990 --> 00:03:47,280
something out of load file.

54
00:03:47,280 --> 00:03:55,320
But beyond that you may need to check whether the dictionary contains a certain key before trying to

55
00:03:55,320 --> 00:03:57,690
restore the state before trying to access that key.

56
00:03:57,690 --> 00:04:04,860
So these two hints should help you along your journey of making save and load work perfectly when there

57
00:04:04,860 --> 00:04:08,780
is no save file pause video and have a go OK.

58
00:04:08,830 --> 00:04:14,020
So the first thing is going to be with our saving the actual problem comes from loading.

59
00:04:14,020 --> 00:04:17,980
So what we're going to do is we're going to remove this print line I no longer need that and instead

60
00:04:17,980 --> 00:04:26,350
we're going to do an f file dot exists then we are going to see whether this path that we have created

61
00:04:26,350 --> 00:04:28,280
here exists or not.

62
00:04:28,300 --> 00:04:35,950
So if it does not exist then we don't want to go ahead with the rest of this of this load file method

63
00:04:35,980 --> 00:04:41,650
because that is going to try and open a file that doesn't exist which is the thing that was causing

64
00:04:41,740 --> 00:04:42,490
the exception.

65
00:04:42,850 --> 00:04:49,390
So what we're going to try and do here instead is just return a new dictionary because a new dictionary

66
00:04:49,390 --> 00:04:51,460
will basically be an empty state.

67
00:04:51,460 --> 00:04:52,480
There's no state there.

68
00:04:52,480 --> 00:04:58,750
So we're gonna say net new dictionary from string to object type parentheses and then semicolon and

69
00:04:58,750 --> 00:05:00,900
that should basically do the trick.

70
00:05:00,910 --> 00:05:04,810
We're no longer going to open the file we're just gonna end up with a new dictionary.

71
00:05:04,900 --> 00:05:05,920
So let's give that a shot.

72
00:05:05,950 --> 00:05:12,370
If I go back over to unity and reload then I'm going to go ahead and hit save and it saved correctly

73
00:05:12,820 --> 00:05:15,760
and it will load correctly as well because now we have a save file.

74
00:05:15,760 --> 00:05:23,770
But what if I got rid of my save file and go back into unity and tried loading just like that.

75
00:05:23,860 --> 00:05:27,730
Now you see it doesn't give me anymore a problem about the path not existing.

76
00:05:27,760 --> 00:05:32,670
Instead what it's saying is that as a key not present in the dictionary and if I go to the line that's

77
00:05:32,680 --> 00:05:41,380
being referenced here I believe it is talking about our saving system line twenty one in restore states

78
00:05:41,440 --> 00:05:50,150
but worth further down there do we have something yet the saving system CBS Sixty one line sixty one

79
00:05:50,180 --> 00:05:50,790
we have.

80
00:05:50,850 --> 00:05:56,990
Okay we are getting the restore state and we are doing that from the state dictionary but we're accessing

81
00:05:56,990 --> 00:05:57,880
this unique identifier.

82
00:05:57,890 --> 00:06:02,600
So what if the state dictionary doesn't have the unique identifier in the case that we're loading from

83
00:06:02,600 --> 00:06:05,260
that empty dictionary it won't have a unique identifier.

84
00:06:05,270 --> 00:06:10,580
So what I'm gonna do just to make sure we don't get that exception is I am going to extract this unique

85
00:06:10,580 --> 00:06:14,840
identifier first into a local variable to make this a little bit more readable.

86
00:06:14,910 --> 00:06:19,950
I'm going to call it I.D. And then what we're going to do is going to say if the dictionary.

87
00:06:20,000 --> 00:06:22,400
The state DOT contains key.

88
00:06:22,430 --> 00:06:28,490
So we want to see if the state dictionary contains our unique identifier and if it does well then we

89
00:06:28,490 --> 00:06:33,220
can go ahead and just restore that state country like so okay.

90
00:06:33,250 --> 00:06:38,050
So that's pretty much all done now there's just one little thing here that we've got this space between

91
00:06:38,050 --> 00:06:45,010
the cast on my dictionary object where I'm DC realizing so in the load file I don't like having the

92
00:06:45,010 --> 00:06:46,970
space there just for consistency I'm going to remove it.

93
00:06:47,020 --> 00:06:49,060
And that's about it.

94
00:06:49,060 --> 00:06:53,080
We have got ourselves a saving system that should work between scenes so let's go ahead and check it

95
00:06:53,080 --> 00:06:53,660
out.

96
00:06:53,830 --> 00:07:01,450
If we go ahead and play I go over to the bridge in this scene and hit save and that should take me back

97
00:07:01,450 --> 00:07:02,540
to the bridge when I hit low.

98
00:07:02,560 --> 00:07:03,460
Yes it does.

99
00:07:03,460 --> 00:07:11,290
So then if I go over into my other scene and go in through the gates and then I am going to move over

100
00:07:11,290 --> 00:07:17,500
towards this tree and save near this tree then loading here takes me back to that tree fantastic that

101
00:07:17,500 --> 00:07:22,960
all worked that way before but now if I go back to scene one and hit load I am back on the bridge which

102
00:07:22,960 --> 00:07:27,140
was the state that I had originally saved in season one.

103
00:07:27,160 --> 00:07:28,930
Great stuff in the next lecture.

104
00:07:28,930 --> 00:07:31,540
We are going to look at Checkpoint thing.

105
00:07:31,540 --> 00:07:35,470
So when we go between scenes will automatically save and automatically load.

106
00:07:35,470 --> 00:07:41,080
That's going to make it much easier to just restore the state and make the illusion that everything

107
00:07:41,080 --> 00:07:43,000
is exactly as we left it before.

108
00:07:43,310 --> 00:07:45,510
Let's dive onto that later and see how it's done.
