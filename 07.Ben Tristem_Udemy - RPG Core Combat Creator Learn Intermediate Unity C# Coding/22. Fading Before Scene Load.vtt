WEBVTT
1
00:00:04.420 --> 00:00:05.740
Hello and welcome in this lecture.

2
00:00:05.740 --> 00:00:11.560
We are going to make the initial load of the last saved level much prettier.

3
00:00:11.590 --> 00:00:15.140
So here I am in sandbox 2 but my last save was in sandbox one.

4
00:00:15.190 --> 00:00:21.250
So if I go ahead and hit play then you can see there's a fade in and I'm there in sandbox one without

5
00:00:21.250 --> 00:00:25.270
any kind of glitchy weird loading of different levels being displayed.

6
00:00:25.570 --> 00:00:28.510
So let's dive in and see how it's done.

7
00:00:28.570 --> 00:00:32.950
So what I want to tackle in this lecture is the ugly transition that we get when we go ahead and hit

8
00:00:32.950 --> 00:00:35.750
play and it takes us over to a new scene.

9
00:00:35.800 --> 00:00:39.610
Now the way I want to do this is to have it fade in from white.

10
00:00:39.610 --> 00:00:40.720
So we start off at white.

11
00:00:40.720 --> 00:00:42.160
Then we fade down.

12
00:00:42.250 --> 00:00:46.510
Now the best place I think of doing this is in the saving wrapper.

13
00:00:46.540 --> 00:00:51.440
So if we were to open up the saving wrapper yes we saw there was a little bit of a solution here.

14
00:00:51.460 --> 00:00:52.600
Sorry about that.

15
00:00:52.600 --> 00:00:57.540
And here we've got in the start we're currently loading the last scene.

16
00:00:57.700 --> 00:01:07.750
But what I'd like to do is before this is to fade out completely and then to load the scene and then

17
00:01:08.110 --> 00:01:14.920
to fade in now this fade out completely I want to happen immediately because I don't want to see the

18
00:01:14.920 --> 00:01:16.630
current scene at all.

19
00:01:16.630 --> 00:01:23.050
So what we've got to do for that to happen is introduce a new function to our fader.

20
00:01:23.050 --> 00:01:27.910
So what it's going to do is it's gonna be a public void return because it doesn't take any time it's

21
00:01:27.980 --> 00:01:33.970
going gonna be fade out immediate and it is going to take no input.

22
00:01:33.970 --> 00:01:37.090
And then if you want to you can have a go at trying to implement this yourself.

23
00:01:37.100 --> 00:01:39.070
So tiny mini challenge.

24
00:01:39.190 --> 00:01:39.460
Okay.

25
00:01:39.520 --> 00:01:40.180
So I'm going to go ahead.

26
00:01:40.510 --> 00:01:46.680
So the idea here is that we're setting this canvas group dot our firm to be equal to 1.

27
00:01:46.690 --> 00:01:49.420
That's basically how it fades out immediately.

28
00:01:50.140 --> 00:01:52.630
So that's what we need to do in our saving wrapper.

29
00:01:52.630 --> 00:01:55.380
Now we need to get hold of a fader.

30
00:01:56.200 --> 00:01:59.240
So we're gonna need a fader fade.

31
00:01:59.290 --> 00:02:05.150
E theta equals find object of type theta.

32
00:02:05.380 --> 00:02:06.460
Like so.

33
00:02:06.460 --> 00:02:12.730
Now one thing you'll notice we have need to include the scene management namespace but caution because

34
00:02:12.730 --> 00:02:18.060
the portal already includes the saving namespace.

35
00:02:18.070 --> 00:02:19.910
So there's a circular dependency there.

36
00:02:19.920 --> 00:02:24.100
The saving namespace would include unseen management and unseen management there would be including

37
00:02:24.190 --> 00:02:24.550
saving.

38
00:02:24.910 --> 00:02:26.950
So how can we rectify that.

39
00:02:27.190 --> 00:02:31.870
Well in my opinion saving wrapper is actually in the wrong place at the moment.

40
00:02:31.930 --> 00:02:34.650
It should be in the same management namespace.

41
00:02:34.660 --> 00:02:35.320
And here's why.

42
00:02:36.070 --> 00:02:38.700
Everything else in saving is completely generic.

43
00:02:38.710 --> 00:02:43.300
I could move it to a different game and we could use it as a saving library.

44
00:02:43.600 --> 00:02:50.290
However the saving wrapper has got things like configuring how the default say file works loading up

45
00:02:50.380 --> 00:02:56.710
and saving based on key bindings and stuff that generally I think would be the choice of a particular

46
00:02:56.710 --> 00:02:57.110
game.

47
00:02:57.120 --> 00:03:03.680
So what key bindings it uses and when it chooses to load up the last scene and things like that.

48
00:03:03.970 --> 00:03:10.060
So I'm actually want to move this saving wrapper over into the scene management namespace and I'm actually

49
00:03:10.060 --> 00:03:15.910
going to do this in unity because moving things moving scripts in unity means that they don't break

50
00:03:15.910 --> 00:03:19.510
their links in the objects that you've got.

51
00:03:19.510 --> 00:03:26.770
So if I go to where is it the saving folder and grab the scene saving wrapper and move it into scene

52
00:03:26.770 --> 00:03:32.800
management then what we will find is that the current file has been deleted from disk so close that

53
00:03:32.920 --> 00:03:38.080
down and you can see that the saving wrapper has been moved into scene management over in Visual Studio

54
00:03:38.080 --> 00:03:39.370
code as well.

55
00:03:39.370 --> 00:03:43.060
Now what you want to do also is change the namespace.

56
00:03:43.060 --> 00:03:50.920
So it should be the scene management namespace and now the fader works but the saving system doesn't.

57
00:03:50.920 --> 00:03:54.310
So we need to include using RPG saving.

58
00:03:54.520 --> 00:04:00.570
Now that is absolutely fine we can use RPG saving reason being that we already are in this namespace

59
00:04:00.580 --> 00:04:05.140
the portal is already using RPG saving and the saving wrapper can do too.

60
00:04:05.170 --> 00:04:06.480
That's no problem.

61
00:04:06.610 --> 00:04:11.980
We've got a dependency from scene management on to saving but not vice versa which is good because it

62
00:04:11.980 --> 00:04:15.500
means we can take this scene saving module and use it in your other games.

63
00:04:15.580 --> 00:04:22.240
Basically just drop it in and you need to change how we interface with it but not change the saving

64
00:04:22.570 --> 00:04:30.470
system itself so one more problem that we might find is that here we are accessing this fader in start

65
00:04:31.100 --> 00:04:37.970
but the fader itself has this thing going on to start where it gets the canvas group.

66
00:04:37.970 --> 00:04:43.550
Now there is one issue with that because there could be a race potentially the start belonging to the

67
00:04:43.550 --> 00:04:50.840
saving wrapper gets called before the start to the fader which means that the fader won't have a canvas

68
00:04:50.840 --> 00:04:54.090
group and this will give you a no pointer thingy.

69
00:04:54.500 --> 00:05:00.410
So what we actually need to do and generally this is the case in any reference getting is that we need

70
00:05:00.410 --> 00:05:02.600
to change start to awake in the fader.

71
00:05:02.630 --> 00:05:04.360
So a wake happens before start.

72
00:05:04.550 --> 00:05:09.050
And this is generally we should set up your references in a wake and then you should use your references

73
00:05:09.050 --> 00:05:09.840
and start.

74
00:05:09.860 --> 00:05:15.500
And this means that you won't get null references so there are places elsewhere in the code base where

75
00:05:15.500 --> 00:05:16.790
we haven't done this.

76
00:05:16.940 --> 00:05:22.670
And as we see them we're going to try and switch them over to awake a little bit of a bad habit that

77
00:05:22.670 --> 00:05:23.710
I've got.

78
00:05:23.750 --> 00:05:31.400
So this is your challenge is to first of all fade out completely and then second to fade back in after

79
00:05:31.400 --> 00:05:32.960
the load scene has happened.

80
00:05:32.960 --> 00:05:38.180
So pose a video and have a go at this so the fading out completely should be fairly simple we've got

81
00:05:38.180 --> 00:05:46.250
fade a dot fade out immediate that should just fade it out and then fade in is going to be fade a dot

82
00:05:46.850 --> 00:05:51.000
fade in and we need a time for that to happen over.

83
00:05:51.020 --> 00:05:59.090
So going to create a serialized field of type float which is going to be the fade in time like so and

84
00:05:59.090 --> 00:06:05.900
then we can just pop that fade in time into fade in function call or method call and we need to remember

85
00:06:05.900 --> 00:06:08.210
that this is returning a ion numerator.

86
00:06:08.210 --> 00:06:14.990
So if we wanted to actually run the CO routine we need to do a yield return inside our i.e. numerator

87
00:06:14.990 --> 00:06:21.980
the start I numerator and so if we go back over in to the game and hit play Let's see whether our fade

88
00:06:21.980 --> 00:06:23.630
is going to work now.

89
00:06:23.630 --> 00:06:23.950
Nice.

90
00:06:23.980 --> 00:06:29.260
So it did seem to fade seemed to fade quite quickly because our fade time is set to zero.

91
00:06:29.660 --> 00:06:35.150
So what we want is a point two or some kind of fade time that's a bit more natural and let's say it

92
00:06:35.150 --> 00:06:39.080
might have already cashed that fade time in our saving system yeah it did.

93
00:06:39.080 --> 00:06:45.000
So I might need to go ahead and change that two point two and if we go ahead and hit play now let's

94
00:06:45.000 --> 00:06:49.830
see yep that fades in with a nice point to a second is a little bit of a bounce which we could try and

95
00:06:49.830 --> 00:06:54.590
hide with a bit of a wait time as well but I'm quite happy with how it's looking.

96
00:06:54.590 --> 00:06:58.460
Now let's just try a few things just a stress test this.

97
00:06:58.500 --> 00:06:59.910
So first of all okay.

98
00:06:59.940 --> 00:07:05.820
Yep it loaded me into the same scene here and that's great because I had come through the scenes gate

99
00:07:06.450 --> 00:07:15.080
and if I go through into the top of my scene one should save me my location is being here.

100
00:07:15.110 --> 00:07:15.840
Great.

101
00:07:15.890 --> 00:07:24.110
Now if I go over to load up my different scene my scene sandbox to then a hit play what I'm expecting

102
00:07:24.110 --> 00:07:28.140
to see is that I should load into sandbox 1 at the top of the level.

103
00:07:28.160 --> 00:07:29.990
Let's try that out.

104
00:07:29.990 --> 00:07:30.380
Yes.

105
00:07:30.380 --> 00:07:30.920
Fantastic.

106
00:07:30.920 --> 00:07:37.750
So it's working exactly as we would like it to and in fact that pretty much wraps it up for our saving

107
00:07:37.750 --> 00:07:38.290
section.

108
00:07:38.290 --> 00:07:43.360
So what have we achieved in the saving section quite a lot of things let's have a look just overview

109
00:07:43.360 --> 00:07:49.570
some of the great classes that we've created so we've got our eye saver bill which allows us to implement

110
00:07:49.630 --> 00:07:56.610
saving on any components we've got our saleable entity that we plop onto any game object that has Icesave

111
00:07:56.650 --> 00:08:02.380
bills that we want to keep track of it generates unique identifiers with no overlaps inside the scene

112
00:08:02.380 --> 00:08:07.990
with our cloud a global look up stuff and we've got a saving system which ties it all together looks

113
00:08:07.990 --> 00:08:14.050
for all the Icesave oddballs saves them into a file keeps track of the last scene build index and restores

114
00:08:14.050 --> 00:08:19.870
that serialized realizable vector we talked about sterilizing in general and how to serialize and what

115
00:08:19.960 --> 00:08:25.030
we've got here we've got our faders which we've done before but we've been using them and expanding

116
00:08:25.030 --> 00:08:30.730
on them and we've got a saving wrapper which finally just allows us to drive that system and we've modified

117
00:08:30.760 --> 00:08:38.640
our portals to drive our savings system as well to use them as a check pointing system.

118
00:08:38.640 --> 00:08:44.580
So with that foundational technology in place it is time to go onwards and upwards and add more functionality.
