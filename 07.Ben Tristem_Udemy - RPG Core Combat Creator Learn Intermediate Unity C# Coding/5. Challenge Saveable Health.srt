1
00:00:04,480 --> 00:00:05,250
Hello and welcome.

2
00:00:05,260 --> 00:00:12,810
In this lecture we are going to be restoring the health status or saving and restoring the health component.

3
00:00:12,820 --> 00:00:14,830
It's gonna be a challenge that you're gonna do but watch.

4
00:00:14,890 --> 00:00:18,050
If I hit load here currently we have full health.

5
00:00:18,100 --> 00:00:24,410
I hit load and this enemy over here just died because I had saved that I had already killed him.

6
00:00:24,520 --> 00:00:28,990
And also in the process I had lost him healthy you can see that my player has actually got less health

7
00:00:29,080 --> 00:00:30,370
than he started off with.

8
00:00:30,430 --> 00:00:33,410
That is going to be what we're going to do in this lecture.

9
00:00:33,490 --> 00:00:42,660
Let's dive in so this lecture is all going to be a challenge for you to implement the health saving

10
00:00:43,050 --> 00:00:45,480
in the same way as we've done with movement.

11
00:00:45,510 --> 00:00:47,160
So here is your instructions.

12
00:00:47,180 --> 00:00:51,540
The you're gonna implement the interface first of all so you don't have to be asking yourself what is

13
00:00:51,540 --> 00:00:52,010
it.

14
00:00:52,020 --> 00:00:54,880
What's the state that I want to save about this health system.

15
00:00:54,900 --> 00:00:58,330
So what is it that I should be returning from capture state.

16
00:00:58,590 --> 00:01:03,210
Then you're going to be looking at how will you restore the state once it comes back to you.

17
00:01:03,210 --> 00:01:08,780
Remember that you need to cast that object to whatever it was before you can use it.

18
00:01:08,790 --> 00:01:15,570
And finally a hint is that all basic types are marked as Sarah liable without you having to do anything

19
00:01:15,600 --> 00:01:22,410
clever like we did with our vector 3 vector 3 is not a basic type but things like int bool float and

20
00:01:22,410 --> 00:01:27,990
string are all basic types which are by default serialize bool meaning that they can be converted into

21
00:01:27,990 --> 00:01:30,090
binary and put into a safe file.

22
00:01:30,330 --> 00:01:36,630
So with armed with this knowledge armed with these steps have a go at implementing the health saving

23
00:01:36,930 --> 00:01:42,450
in the same way as we did with the movement component Hey welcome back.

24
00:01:42,450 --> 00:01:51,840
So let's go over and open up our health C.S. which should be in a core and what we want to do here is

25
00:01:51,840 --> 00:02:00,420
first of all include a namespace so we can do a using RPG dot saving and then we are going to inherit

26
00:02:00,480 --> 00:02:06,450
from or not really inherit but implement the interface it's going to be an ice saver ball and control

27
00:02:06,450 --> 00:02:08,310
dots to implement the interface.

28
00:02:08,310 --> 00:02:14,040
Now let's put it in a bit of a weird location for me so I'm going to go ahead and move it on down and

29
00:02:14,040 --> 00:02:21,180
put it at the bottom of the file just so it doesn't interfere with any of the other kind of public interfaces

30
00:02:21,210 --> 00:02:28,590
and stuff for me it's quite separate the ability to save a component is quite separate now the real

31
00:02:28,590 --> 00:02:31,400
state pretty much the only state of the health system.

32
00:02:31,400 --> 00:02:34,240
Here's what our current health actually is.

33
00:02:34,440 --> 00:02:38,730
Now where are we storing our current health we're storing it in the health points.

34
00:02:38,730 --> 00:02:41,320
So that's what we need to go ahead and return.

35
00:02:41,340 --> 00:02:46,110
We can just go ahead and hit return on the health points basically.

36
00:02:46,650 --> 00:02:52,710
Now that's fine because health points is a float a basic type so it can be serialized and it won't give

37
00:02:52,710 --> 00:02:54,250
us any errors.

38
00:02:54,600 --> 00:02:59,120
Now coming back from that float we need to get our health points.

39
00:02:59,130 --> 00:03:00,750
So that's basically what we want to do.

40
00:03:00,750 --> 00:03:05,880
We just want to set our health points to whatever was captured from before.

41
00:03:05,880 --> 00:03:10,380
So we're gonna do health points equals state basically but it won't let us do that because state is

42
00:03:10,380 --> 00:03:11,400
not the right type.

43
00:03:11,430 --> 00:03:17,820
So we need to cast to float basically putting in brackets like this means that we are casting the state

44
00:03:18,270 --> 00:03:24,930
to a float and putting it into health points and that should basically restore our health points.

45
00:03:24,930 --> 00:03:26,480
Let's go and try this out.

46
00:03:26,490 --> 00:03:33,470
So if I go ahead and hit play then what I want to do is get myself beaten up a little bit.

47
00:03:33,480 --> 00:03:43,470
I know counterintuitive and I'm going to get beaten a little bit like so and I'm going to save my health

48
00:03:44,400 --> 00:03:51,540
and I am going to go and get beaten up a little bit more by this guy should reduce my health points

49
00:03:51,570 --> 00:03:56,040
even further and I'll try and run away.

50
00:03:56,110 --> 00:03:57,180
It's not really working.

51
00:03:57,250 --> 00:03:59,050
Let me go and have a look at my player.

52
00:03:59,050 --> 00:04:06,520
In fact I'll pause Have a look at my player in the inspector and we can have a look at my health points

53
00:04:06,530 --> 00:04:10,180
I'm currently health points one hundred and twenty.

54
00:04:10,330 --> 00:04:16,690
Now what happens if I hit load we all go back to different locations again and you'll notice my health

55
00:04:16,690 --> 00:04:22,240
points went up so they have been successfully restored to what they were before I went and attacked

56
00:04:22,330 --> 00:04:23,690
this guard.

57
00:04:23,770 --> 00:04:27,340
Now you'll notice this guard is currently dead because that's where I saved it.

58
00:04:27,340 --> 00:04:34,430
But here's a problem if I hit play and hit play again and now I want to hit load.

59
00:04:34,450 --> 00:04:37,180
You'll notice this guard is still alive and kicking.

60
00:04:37,180 --> 00:04:38,640
Why is that.

61
00:04:38,680 --> 00:04:40,390
Why did he not die.

62
00:04:40,400 --> 00:04:46,570
Well I'd die method which is the one that runs the animator makes him look dead essentially and cancels

63
00:04:46,570 --> 00:04:51,550
any of his current actions is only run if our health points equals zero.

64
00:04:51,550 --> 00:04:56,130
But if we take damage now in this case we are not taking damage.

65
00:04:56,130 --> 00:05:01,540
So what we need to do is we need to do this check of the health points equaling zero and we need to

66
00:05:01,540 --> 00:05:05,030
do this in restore state so we restore the health points.

67
00:05:05,050 --> 00:05:07,370
Then we check all the health points equal to zero.

68
00:05:07,390 --> 00:05:13,860
If so we must kill off that character again because he is dead and he should look dead.

69
00:05:13,990 --> 00:05:20,910
So now hopefully what we'll see is if I go ahead and hit play and hit load.

70
00:05:20,920 --> 00:05:29,500
Then you see my enemy drops dead because he has his health restored to zero and then we hit the DI method

71
00:05:29,530 --> 00:05:35,320
because we've noticed that special condition of health being zero has been met.

72
00:05:35,560 --> 00:05:41,100
So hopefully after this lecture you've got a better understanding of how the saving component I save

73
00:05:41,120 --> 00:05:44,720
bull actually works and how you can implement it for yourself.

74
00:05:44,860 --> 00:05:49,930
Now if you want to you could go ahead and extend this knowledge to apply it to other elements of your

75
00:05:49,930 --> 00:05:54,940
game such as for example the cinematics maybe you want to save the fact that the cinematics has already

76
00:05:54,940 --> 00:05:56,690
been played and you don't want to play it again.

77
00:05:56,770 --> 00:05:58,230
That is a little challenge for you.

78
00:05:58,230 --> 00:06:02,350
If you're interested in not going to be doing it here at this stage in the course but it is something

79
00:06:02,350 --> 00:06:08,050
that you might want to have a go and flex your muscles with in the next lecture.

80
00:06:08,050 --> 00:06:13,990
We're gonna be looking at saving loading as we go between portals so that it gives us the illusion that

81
00:06:13,990 --> 00:06:17,940
the world we just came from all that state is exactly the same.

82
00:06:17,950 --> 00:06:20,650
When we come back to it I'll see you in that lecture.
