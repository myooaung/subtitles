1
00:00:04,340 --> 00:00:07,110
In this video we're gonna be shooting at our enemies.

2
00:00:07,110 --> 00:00:10,620
Look at this we've got a bow and arrow and a shooting out project dollars I've trained them pretty slow

3
00:00:10,620 --> 00:00:15,870
so that we can see them on screen but we have started our journey of launching projectiles.

4
00:00:15,870 --> 00:00:17,230
It's jumping to get started.

5
00:00:17,230 --> 00:00:20,200
They start with a high level breakdown of what we're trying to do in this video.

6
00:00:20,220 --> 00:00:23,340
These are the main steps to launching the projectile in our fighter script.

7
00:00:23,340 --> 00:00:24,960
We need to launch the projectiles.

8
00:00:24,960 --> 00:00:26,630
This is where we actively launch it.

9
00:00:26,640 --> 00:00:32,670
We need a pass in the target from Fighter X fighter knows who the target is within our weapon script.

10
00:00:32,670 --> 00:00:36,390
We need to instantiate the projectile game object to bring it to life.

11
00:00:36,540 --> 00:00:42,540
And then in our projectile script we need to set the projectiles target based upon the health component

12
00:00:42,780 --> 00:00:44,760
that it received from the fighter.

13
00:00:44,760 --> 00:00:49,020
There's a few more bits and pieces we need to do but I just want to give you a view that we have to

14
00:00:49,020 --> 00:00:53,170
jump into each of these scripts and hook it all together.

15
00:00:53,280 --> 00:00:57,810
So let's open up our fighter weapon and projectile scripts.

16
00:00:57,810 --> 00:01:03,630
I'm going to start in projectile kind of do the easy thing first which is to make sure that we're using

17
00:01:03,630 --> 00:01:08,780
the health for our target rather than using the target transform as a serialized field.

18
00:01:08,790 --> 00:01:15,690
So I'm going to change the type of target from transform to health and remove the serialized field and

19
00:01:16,030 --> 00:01:16,780
health.

20
00:01:16,860 --> 00:01:20,360
And I'm just going to grab it and stick it down below.

21
00:01:20,790 --> 00:01:22,410
And now we're getting the squiggly line.

22
00:01:22,410 --> 00:01:29,440
That's because we're not using the right namespace control period using RPG core.

23
00:01:29,460 --> 00:01:30,330
Excellent.

24
00:01:30,370 --> 00:01:35,490
We scroll down here you can see Target dot position is no longer valid because we've changed from type

25
00:01:35,490 --> 00:01:41,800
transform to type health which means we need to have target dot France form dot position.

26
00:01:41,910 --> 00:01:48,240
And as with the line below target dot transform dot position.

27
00:01:48,250 --> 00:01:54,670
Now one other thing I do in projectile alarm here is make a public method that allows us to from elsewhere

28
00:01:54,670 --> 00:01:57,170
to say what the target is to set targets.

29
00:01:57,170 --> 00:01:58,780
So new line.

30
00:01:58,780 --> 00:02:00,570
Public void.

31
00:02:00,580 --> 00:02:03,310
This we will call set target.

32
00:02:03,640 --> 00:02:10,090
We want to pass in the target of type health so health target then what do we want to do with that.

33
00:02:10,090 --> 00:02:16,620
Well we need to say this target that our projectile knows once it's instantiated it knows Aha.

34
00:02:16,630 --> 00:02:17,690
This is my target.

35
00:02:17,740 --> 00:02:22,170
We need to be assigning the target that's been passed in into the target.

36
00:02:22,180 --> 00:02:24,570
That is the instance variable.

37
00:02:24,610 --> 00:02:34,480
So pretty easy we just say this referring to this game object this instance target equals target which

38
00:02:34,480 --> 00:02:36,700
is referring to the target that was just passed in.

39
00:02:36,730 --> 00:02:44,050
Let's go to our weapon class now and give the weapon knowledge that there is potentially that it could

40
00:02:44,050 --> 00:02:45,910
potentially be a projectile.

41
00:02:45,910 --> 00:02:47,140
And that's pretty simple.

42
00:02:47,140 --> 00:02:53,910
What is that a new serialized field that will be of type Prue Jack dial and we will call this projectile

43
00:02:54,180 --> 00:02:58,930
rejects Sol and we'll initialize that at no.

44
00:02:58,940 --> 00:03:02,900
So some weapons will have a projectile and some weapons won't have a projectile.

45
00:03:02,900 --> 00:03:06,080
In other words the bow and arrow vs. a sword.

46
00:03:06,080 --> 00:03:10,420
And now we need to give our other classes a mechanism for knowing.

47
00:03:10,450 --> 00:03:11,990
Do I have a projectile or not.

48
00:03:11,990 --> 00:03:18,110
So make it simple get a method down underneath spawn let's make a new method it will be public and it

49
00:03:18,110 --> 00:03:25,220
needs to return a ball and we'll call this has projectile and it's simply going to return projectile

50
00:03:25,460 --> 00:03:29,970
is not equal to no OK.

51
00:03:30,030 --> 00:03:35,030
That's going to give us a ball that allows us to say do we have a projectile equipped.

52
00:03:35,040 --> 00:03:41,010
Yes or no that we can be calling from fighter to know whether we should be launching a projectile or

53
00:03:41,010 --> 00:03:44,100
we should be hitting with our hand weapon.

54
00:03:44,100 --> 00:03:49,770
And while we're here we may as well instantiate our projectile so actually create the game object.

55
00:03:49,780 --> 00:03:55,410
So another public method public void launch projectile.

56
00:03:55,630 --> 00:04:01,020
And we need to be passing in again the right hand and left hand so we know what those are.

57
00:04:01,090 --> 00:04:03,890
And also the health for the target.

58
00:04:03,880 --> 00:04:07,900
So the target which will be a type health so similar to our spawn.

59
00:04:07,930 --> 00:04:14,860
But this is going to be for projectile not just for weapon so launch projectile transform right hand

60
00:04:15,370 --> 00:04:19,480
come out transform and left hand.

61
00:04:19,570 --> 00:04:23,360
And also we want to know the target which will be of type health.

62
00:04:23,710 --> 00:04:26,470
So when launch projectile is cold what do we want to have happen.

63
00:04:26,470 --> 00:04:33,820
Well we want to instantiate our projectile so we'll create this as a new variable type projectile we'll

64
00:04:33,820 --> 00:04:39,380
call this projectile instance and then we dance Shiite.

65
00:04:39,430 --> 00:04:41,060
Hopefully this fits on my line here.

66
00:04:41,140 --> 00:04:43,870
Projectile projectile and then where.

67
00:04:43,900 --> 00:04:47,530
Well we need to get the transform and we've got this information in here.

68
00:04:47,540 --> 00:04:49,810
You know what it's time for us to break this out.

69
00:04:49,810 --> 00:04:55,120
Remember we created this couple of videos ago so that we have our mechanism for saying Are you in the

70
00:04:55,120 --> 00:04:58,750
right hand or are you in the left hand we want to do that here as well.

71
00:04:58,750 --> 00:05:05,290
But we don't to put all that code in so it is refactor this grab that those three lines that our transform

72
00:05:05,290 --> 00:05:12,820
and then our if and else we will hit control and period extract method that we will rename our new method

73
00:05:12,820 --> 00:05:15,670
we'll rename get transform.

74
00:05:16,510 --> 00:05:17,200
Okay.

75
00:05:17,200 --> 00:05:18,550
Right hand left hand right.

76
00:05:18,580 --> 00:05:23,680
That's all contained in there so back down to our launching of projectile so the projectile is the what

77
00:05:23,680 --> 00:05:29,200
the where is going to be get transform and we need a pass in when we're calling our launch projectile

78
00:05:29,200 --> 00:05:32,100
we're providing the right hand and left hand information.

79
00:05:32,110 --> 00:05:40,560
So let's pass that in right hand come a left hand dot position sorry.

80
00:05:40,600 --> 00:05:45,700
This is getting quite massive across our screen here comma and this is where we do the rotation which

81
00:05:45,700 --> 00:05:51,330
is just simply quote Turning in dot identity and then semicolon okay.

82
00:05:51,370 --> 00:05:54,570
That's quite a massive line then let me just scroll across it so you can see it.

83
00:05:54,880 --> 00:06:01,090
Projectile projectile instance equals instantiate projectile which is the what get transformed right

84
00:06:01,090 --> 00:06:06,970
hand left hand which is the weird position and then Quattrone an identity which is the rotation of our

85
00:06:07,180 --> 00:06:14,110
instantiation and just back to the red squiggly line on health that looks like we need to be control

86
00:06:14,110 --> 00:06:17,530
period using RPG core that's in a different namespace.

87
00:06:17,530 --> 00:06:21,650
So that's added that RPG core up in using up at the very top.

88
00:06:21,700 --> 00:06:22,110
Okay.

89
00:06:22,120 --> 00:06:26,050
And now while we're here in launching projectile we need to say where's it going to.

90
00:06:26,050 --> 00:06:31,750
So if you remember within projectile we've created set target which is looking for target that has a

91
00:06:31,750 --> 00:06:32,950
health component on it.

92
00:06:33,070 --> 00:06:36,040
And that's that setting it as the target for this projectile.

93
00:06:36,040 --> 00:06:40,900
So within weapon when we instantiate this is the point where we want to say Go get him.

94
00:06:40,900 --> 00:06:49,270
Here's your target sets as simply a case of typing projectile instance dot set target and then what

95
00:06:49,270 --> 00:06:51,540
do we pass in passing target.

96
00:06:51,670 --> 00:06:55,630
So I know I'm working backwards here but it's one of those things where I can work backwards or forward

97
00:06:55,750 --> 00:07:00,310
a little bit of a web where it's all linked together so launch projectile we're going to get into that

98
00:07:00,310 --> 00:07:04,210
in a second we're actually going to launch it but I wanted to create the functionality in projectile

99
00:07:04,210 --> 00:07:09,430
first where it knows how to set the target and then when we jump into weapon the weapon is going to

100
00:07:09,430 --> 00:07:12,040
call set target and pass in the target.

101
00:07:12,040 --> 00:07:18,910
And when we coal launch projectile we need to be passing in the target and the different hand options

102
00:07:19,150 --> 00:07:22,060
for the position of the left hand the right hand.

103
00:07:22,060 --> 00:07:26,950
So before we bring it all together in fight or only show you one thing on our animation now this is

104
00:07:26,950 --> 00:07:29,470
particular to the animation set that we have.

105
00:07:29,470 --> 00:07:36,010
We've seen this before on the attack animations if I go and find animations by explosive 2 handed bow.

106
00:07:36,070 --> 00:07:43,110
Open this up click on the bow attack on it to go window animation do animation.

107
00:07:43,110 --> 00:07:49,570
Finally see you can see that we have our animation event in this instance it's been labelled a shoot.

108
00:07:49,630 --> 00:07:54,040
Now unfortunately we don't have access to change this because we don't we don't have the animator on

109
00:07:54,040 --> 00:07:54,390
our team.

110
00:07:54,400 --> 00:08:00,040
This is an asset pack so we need to deal with the fact that it's called Shoot whereas when we were working

111
00:08:00,070 --> 00:08:05,030
with our other weapons our melee weapons it is cold.

112
00:08:05,080 --> 00:08:14,290
That's not what I want to do it is cold with my window gone it is cold so it's hit with my light and

113
00:08:14,290 --> 00:08:17,140
shoot we don't want to be trying to figure out is it hit is it shoot.

114
00:08:17,140 --> 00:08:20,290
So what we're going to do is just wrap shoot within heat.

115
00:08:20,410 --> 00:08:23,590
No I would do that is we'll find our animation event way down.

116
00:08:23,590 --> 00:08:25,110
This is in fighting not CSI.

117
00:08:25,120 --> 00:08:28,510
You can see we've given a little note here hit this is out of our control.

118
00:08:28,510 --> 00:08:33,550
That's why it's a little bit clunky right underneath that we are going to have a new method which we

119
00:08:33,550 --> 00:08:35,620
will have void shoot.

120
00:08:35,620 --> 00:08:39,130
That's the method that is sitting on our animation as an animation event.

121
00:08:39,190 --> 00:08:41,470
What happens when we co shoot.

122
00:08:41,470 --> 00:08:42,820
What do you think we do here.

123
00:08:42,820 --> 00:08:46,100
Well we simply just call hit.

124
00:08:46,180 --> 00:08:50,020
So this is a way for us just to have all this code in one place and not having to try to figure out

125
00:08:50,050 --> 00:08:55,060
all the different things each time another animation event is named differently we can just point it

126
00:08:55,120 --> 00:08:56,260
all towards hit.

127
00:08:56,320 --> 00:09:00,340
If that is relevant so to wrap all this together I want to give this to you as a challenge.

128
00:09:00,340 --> 00:09:03,970
No slide on this one but the challenge is a verbal one it's contained within hit.

129
00:09:04,090 --> 00:09:11,140
So within here we need to give a mechanism that says if the current weapon has a projectile then launch

130
00:09:11,140 --> 00:09:15,300
the projectile and passing the information that it needs particularly the target.

131
00:09:15,340 --> 00:09:21,730
Otherwise if there is no projectile then just cold get damage and do what you do when you've just got

132
00:09:21,790 --> 00:09:23,300
a sword etc..

133
00:09:23,320 --> 00:09:29,830
So sitting figure that out take on that challenge now to put in our mechanism to shoot or to not shoot

134
00:09:31,860 --> 00:09:35,370
Oh can I was a little bit trickier when I didn't have a slide but I like to try these things that keep

135
00:09:35,370 --> 00:09:36,270
you on your toes.

136
00:09:36,300 --> 00:09:39,180
Sometimes it's very verbal sometimes it's very visual.

137
00:09:39,180 --> 00:09:44,970
This one we are going to implement underneath our if the target is now we'll leave that there.

138
00:09:44,970 --> 00:09:51,560
We'll start by saying if current weapon member we've defined that in our fighter we have a current weapon.

139
00:09:51,660 --> 00:09:59,360
DOT has projectile we've created that as a method to say do I have a projectile returnable yay or nay.

140
00:09:59,370 --> 00:10:00,990
True or false.

141
00:10:00,990 --> 00:10:07,170
If we do have a projectile if it's true then current weapon dot what are we going to do here.

142
00:10:07,170 --> 00:10:10,330
Well we need to launch the projectile launch projectile.

143
00:10:10,350 --> 00:10:16,290
We have to pass on what's it looking for transform right hand transform left hand and the target so

144
00:10:16,290 --> 00:10:20,420
we know that we have a right hand transform.

145
00:10:20,430 --> 00:10:25,740
We know that we have a left hand transform comma target.

146
00:10:25,830 --> 00:10:27,780
So we're going to launch otherwise.

147
00:10:28,170 --> 00:10:29,670
Else what are we going to do.

148
00:10:29,670 --> 00:10:36,340
Well we put in our line from below target take damage current weapon.

149
00:10:37,360 --> 00:10:38,080
There we go.

150
00:10:38,080 --> 00:10:41,250
Current weapon get damage should be the same as it was before.

151
00:10:41,320 --> 00:10:42,700
Tidy up our lines a little bit.

152
00:10:42,700 --> 00:10:45,310
What have I done wrong here it's got to squarely line.

153
00:10:45,310 --> 00:10:47,230
Oh I forgot a semicolon of course.

154
00:10:47,230 --> 00:10:48,550
My apologies for that.

155
00:10:48,670 --> 00:10:52,440
Save everything up and this is all looking pretty sharp.

156
00:10:52,790 --> 00:10:53,060
OK.

157
00:10:53,080 --> 00:10:54,610
So that was a ton of code.

158
00:10:54,610 --> 00:10:56,080
Hopefully you followed along there.

159
00:10:56,260 --> 00:10:58,210
Let's jump back over into unity.

160
00:10:58,300 --> 00:10:59,740
See what we've got.

161
00:10:59,740 --> 00:11:03,660
We will give the player a bow.

162
00:11:03,970 --> 00:11:05,700
Whereas the play here.

163
00:11:05,700 --> 00:11:10,000
Default weapon bow Great let's go have a look at the bow make sure it's doing what it needs to be doing

164
00:11:10,000 --> 00:11:11,080
scroll down.

165
00:11:11,170 --> 00:11:17,110
Game weapons bow there's the bow projectile we need to give it a projectile the projectile is going

166
00:11:17,110 --> 00:11:23,340
to be in our projectiles photo arrow projectile drag that over in so now have an arrow projectile.

167
00:11:23,750 --> 00:11:27,310
OK and we've still got the arrow in the same we don't need it anymore it's not going to know what to

168
00:11:27,310 --> 00:11:27,730
do.

169
00:11:27,760 --> 00:11:34,420
Our arrow projectile excellent gonna jump into this prefab changed the speed to our former and we'll

170
00:11:34,420 --> 00:11:43,090
make it six for now so we can see it going through the air hopefully jump on back click on play okay

171
00:11:43,120 --> 00:11:50,440
people fear could our big old bow back to here click on an enemy and am okay has gone pretty slow but

172
00:11:50,450 --> 00:11:55,550
looks I reckon pretty epic and awesome blue this is projectiles you can speed it up to your heart's

173
00:11:55,550 --> 00:12:01,400
content to make fast the arrows we're going to be out of ad trails on the back of it we had a substitute

174
00:12:01,400 --> 00:12:06,260
instead of bows and arrows going to fireballs but this is the start of it we can have the enemy shooting

175
00:12:06,260 --> 00:12:12,890
at us super pumped super excited that we now have shooting of projectiles in our game in upcoming videos

176
00:12:12,890 --> 00:12:17,900
we need to destroy the arrows we need to decrease the health of the person you clunk into and we'll

177
00:12:17,900 --> 00:12:19,700
add all that sparkle as well.

178
00:12:19,700 --> 00:12:24,550
So great work thanks for your patience I know this was a big video and I'll see you in an upcoming lecture.
