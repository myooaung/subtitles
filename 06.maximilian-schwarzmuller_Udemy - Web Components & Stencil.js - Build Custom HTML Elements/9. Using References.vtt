WEBVTT
1
00:00:02.160 --> 00:00:10.050
So we're able to fetch data for a stock symbol entered by the user and we'll later add a component where

2
00:00:10.050 --> 00:00:15.950
the user can search for stock symbols because you might not know them all by heart but this is now working.

3
00:00:15.990 --> 00:00:23.930
Now we are getting that user value with the help of query selector and nothing is wrong with this approach,

4
00:00:23.930 --> 00:00:30.590
we can absolutely extract the stock value, the entered stock symbol in this way

5
00:00:30.840 --> 00:00:37.290
but there is another way too. We can use a feature called references and that can be very helpful as

6
00:00:37.350 --> 00:00:38.060
well.

7
00:00:38.340 --> 00:00:43.380
Instead of using our root element, I'll leave it here but I'll not use it anymore,

8
00:00:43.740 --> 00:00:51.660
we can add a normal property without any decorator and I'll name this stock input and this will be of

9
00:00:51.660 --> 00:00:55.120
type HTML input element.

10
00:00:55.130 --> 00:01:01.700
Now this should hold a reference to that element in our DOM and for that, we just need to go down to

11
00:01:01.700 --> 00:01:06.030
the render function, to that element for which we want to assign a reference,

12
00:01:06.050 --> 00:01:12.770
in this case, this input and there, I add the special ref property and that is a feature added by stencil,

13
00:01:12.770 --> 00:01:17.920
it will then hook this up to the property we want to hook it up to behind the scenes.

14
00:01:18.260 --> 00:01:28.210
Ref takes a function as an argument where we'll get the element and then, we can set this stock input or

15
00:01:28.210 --> 00:01:30.250
whichever property you want to use,

16
00:01:30.250 --> 00:01:34.440
so whichever property you created, in my case it is stock input,

17
00:01:34.450 --> 00:01:37.730
we set this stock input equal to the element.

18
00:01:37.840 --> 00:01:44.650
So this arrow function here is executed for us by stencil because ref is a feature by stencil and this

19
00:01:44.650 --> 00:01:49.990
will give us a connection to that input, it will give us direct access to this input or to whichever

20
00:01:49.990 --> 00:01:51.980
element we added this to.

21
00:01:52.030 --> 00:01:55.530
So I can use stock input here to get my data,

22
00:01:55.810 --> 00:02:04.640
so instead of extracting stock symbol like this, I can extract stock symbol by accessing this stock input

23
00:02:05.270 --> 00:02:11.480
value and here, Typescript has no problem with me accessing value because I already declared that this

24
00:02:11.480 --> 00:02:13.600
will be an input element.

25
00:02:13.710 --> 00:02:24.230
And now with that, if I go back and I enter Apple again here, this looks quite good.

26
00:02:24.290 --> 00:02:30.140
So now this works too with a reference instead of query selector and so on and it's up to you which

27
00:02:30.140 --> 00:02:31.310
approach you use,

28
00:02:31.460 --> 00:02:35.540
it's also up to you how much you need to work with your element, if you do a lot of query selecting for

29
00:02:35.540 --> 00:02:40.410
example, then you might want to use this approach with the HTML element query selectors.

30
00:02:40.490 --> 00:02:45.080
If you only need access to some elements in your DOM, well then maybe using a reference is better

31
00:02:45.110 --> 00:02:46.970
but ultimately it's up to you,

32
00:02:47.030 --> 00:02:49.740
it is worth knowing these two alternatives though.
