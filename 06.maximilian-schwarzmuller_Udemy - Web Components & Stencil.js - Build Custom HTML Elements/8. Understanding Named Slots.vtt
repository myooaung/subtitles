WEBVTT
1
00:00:02.350 --> 00:00:06.350
So now that we got this open button working here,

2
00:00:06.440 --> 00:00:15.110
we've got our basic, our very basic modal functionality in place. Now a next step that would be great

3
00:00:15.470 --> 00:00:20.150
is if we could customise the content of this modal a bit more.

4
00:00:20.150 --> 00:00:27.530
Right now, we can pass in our own body, our own main content but what about the title? Would be nice

5
00:00:27.530 --> 00:00:31.320
if we could pass in the title too and for setting the title,

6
00:00:31.430 --> 00:00:35.150
there are of course two possible routes we could take.

7
00:00:35.180 --> 00:00:41.760
One option would be to have like a modal title attribute here which we can set.

8
00:00:41.960 --> 00:00:43.290
We could certainly do that,

9
00:00:43.350 --> 00:00:49.880
we could set this attribute here and then in modal.js, in the connectedCallback which we don't have

10
00:00:49.880 --> 00:00:55.250
yet because we don't need it and we could add it of course, we could extract that attribute and we could

11
00:00:55.250 --> 00:01:00.490
then initialize our h1 tag content here with the title

12
00:01:00.530 --> 00:01:08.670
we set up in our attribute and of course we could then also listen to changes in that title,

13
00:01:08.680 --> 00:01:14.570
so in that modal title attribute and possibly update it in the modal when that changes. There would be

14
00:01:14.570 --> 00:01:16.090
nothing wrong with that

15
00:01:16.250 --> 00:01:22.760
but I actually want to show you how to use multiple slots because maybe, we also have a modal where we

16
00:01:22.760 --> 00:01:27.480
don't want to force the user into using a h1 tag here,

17
00:01:27.590 --> 00:01:34.280
instead we want to let the user pass in any header the user wants and it could for example also be

18
00:01:34.630 --> 00:01:37.320
h1 tag with an h2 tag below it,

19
00:01:37.340 --> 00:01:46.370
so to have a title and subtitle and for that, I want to use a slot here in my component too. The problem

20
00:01:46.370 --> 00:01:51.950
now of course this I now got two slots right, I got one in the header and I got one in the main section.

21
00:01:51.950 --> 00:02:01.340
Now if we do that and we then go into the modal and we have, let's say our h1 tag here, please confirm,

22
00:02:02.330 --> 00:02:09.900
if I do it like this and I reload this page and open the modal, then it might look right at first

23
00:02:09.900 --> 00:02:15.220
but if we inspect this, we actually see this is not really working out the way we want it to work.

24
00:02:16.100 --> 00:02:19.500
If we have a look at our modal, then in the header,

25
00:02:19.820 --> 00:02:24.180
well both is inserted, the paragraph and the h1 tag

26
00:02:24.470 --> 00:02:31.310
and the main section, there the slot basically is empty. Because what essentially happens here is that

27
00:02:31.310 --> 00:02:38.720
the first slot catches all the content we pass into the component and that makes a lot of sense

28
00:02:38.720 --> 00:02:47.270
because how would Javascript know which part here should end up in which of our slots? What we need

29
00:02:47.270 --> 00:02:50.250
is some kind of identification for each slot,

30
00:02:50.300 --> 00:02:57.570
some ID we assign to a slot which we can then use when we pass in some content to target a specific slot

31
00:02:58.340 --> 00:03:00.260
and we can actually do that.

32
00:03:00.380 --> 00:03:05.860
We can give our slots names and that is totally optional but something we can do

33
00:03:06.180 --> 00:03:10.330
and here I will give my slot a name by adding the name attribute,

34
00:03:10.340 --> 00:03:14.480
this is how you do assign names to slots and I'll name this title

35
00:03:14.780 --> 00:03:21.210
and down there, we now could give this a name of Main or we leave it unnamed

36
00:03:21.440 --> 00:03:27.230
and then any content which we pass in which does not target a specific name will automatically go in

37
00:03:27.230 --> 00:03:27.970
here.

38
00:03:27.980 --> 00:03:29.830
Now let me show you how this works.

39
00:03:29.870 --> 00:03:32.600
So we get this slot named title here,

40
00:03:32.600 --> 00:03:40.340
now back in the index.html file, the content which should go into my named slot will receive an extra

41
00:03:40.340 --> 00:03:45.010
slot attribute and there, I simply point at the name,

42
00:03:45.020 --> 00:03:52.010
so in my case, title, so I use title here on the slot attribute of the content that should go into that

43
00:03:52.040 --> 00:03:56.260
title slot because I have title as a name here.

44
00:03:56.330 --> 00:04:02.930
The second slot has no name and therefore, the content which has no slot attribute automatically goes

45
00:04:02.930 --> 00:04:05.000
into that default slot.

46
00:04:05.040 --> 00:04:09.020
Now I can show this to you if I now reload this page, here

47
00:04:09.020 --> 00:04:14.410
if we now inspect this, we see the header slot has the h1 tag

48
00:04:14.480 --> 00:04:18.630
and if I go into the main section, this slot has the paragraph tag.

49
00:04:18.980 --> 00:04:25.490
And now we got a modal with more options for us to customize it because now we've got multiple slots

50
00:04:25.730 --> 00:04:27.880
where we can pass in content.

51
00:04:28.070 --> 00:04:32.870
And of course we can also still assign a default value here,

52
00:04:32.900 --> 00:04:37.140
so for example, for this named slot just as we can do it for the unnamed slot,

53
00:04:37.220 --> 00:04:45.380
I will add a default content of please confirm payment in case we would not pass in content for this

54
00:04:45.380 --> 00:04:46.100
slot.

55
00:04:46.100 --> 00:04:47.280
Now in our case, we do,

56
00:04:47.390 --> 00:04:52.550
So when I reload, we should still see please confirm instead of my default content of please confirm

57
00:04:52.550 --> 00:04:54.610
payment and indeed we do

58
00:04:54.890 --> 00:05:00.710
and now, all the things you already learned apply. So we can now style this content which we do pass in

59
00:05:00.740 --> 00:05:08.150
from inside our main app so to say, from our main document, we can style that here in the light DOM or

60
00:05:08.330 --> 00:05:12.270
in our modal with a slotted special selector.

61
00:05:12.320 --> 00:05:13.540
So here, this style

62
00:05:13.560 --> 00:05:15.930
in particular has no effect anymore

63
00:05:16.040 --> 00:05:22.250
because we can't target the h1 tag that's passed into the shadow DOM from outside. If we would want to

64
00:05:22.250 --> 00:05:24.460
target anything that gets passed in,

65
00:05:24.650 --> 00:05:27.670
we would have to use the slotted attribute like this.

66
00:05:27.680 --> 00:05:35.180
So now here, I simply add my condition and say I want to style slotted h1's and now if I reload

67
00:05:35.190 --> 00:05:38.380
this, we have that smaller text here.

68
00:05:38.390 --> 00:05:40.350
So this is something we can still do,

69
00:05:40.400 --> 00:05:43.160
basically what you already learned about slots.
