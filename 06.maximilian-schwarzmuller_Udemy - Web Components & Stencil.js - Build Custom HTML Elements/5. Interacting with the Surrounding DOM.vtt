WEBVTT
1
00:00:02.050 --> 00:00:02.360
Ok

2
00:00:02.390 --> 00:00:06.370
so we created our first web component and it is working

3
00:00:06.590 --> 00:00:11.060
but obviously this component is not doing anything useful here,

4
00:00:11.060 --> 00:00:19.400
well it's time to now change that. The core idea behind our own web components, behind our custom elements

5
00:00:19.790 --> 00:00:27.380
is in the end that we attach other existing HTML elements like divs and buttons and paragraphs

6
00:00:27.680 --> 00:00:33.440
to build more powerful widgets composed of these different elements

7
00:00:33.440 --> 00:00:42.350
and by the way, the already built-in video element which is a normal HTML tag is kind of like a web

8
00:00:42.350 --> 00:00:42.760
component

9
00:00:42.770 --> 00:00:44.330
we could build on our own.

10
00:00:44.330 --> 00:00:50.590
It's one HTML tag but behind the scenes if we had a video being loaded here, you would see that it

11
00:00:50.590 --> 00:00:53.980
is made up of a couple of buttons, like the play button and so on

12
00:00:54.110 --> 00:00:57.850
and that is just what we want to build here on our own.

13
00:00:57.860 --> 00:01:04.310
So since we want to render a tooltip there, what would make sense is that we for example have a paragraph

14
00:01:04.670 --> 00:01:11.450
with some text or let's actually say in the end we want to use that tooltip inside of a paragraph

15
00:01:11.450 --> 00:01:15.620
we might have, like web components are awesome,

16
00:01:15.620 --> 00:01:24.440
this could be our text and our tooltip here should maybe be spanning that web components word here so

17
00:01:24.470 --> 00:01:30.800
that later when we hover over web components or over some icon which should be inserted next to it, that

18
00:01:30.830 --> 00:01:34.060
we then automatically see a tooltip with some text

19
00:01:34.060 --> 00:01:41.720
we also define. Now we're not there yet but we can get there and let's start by actually adding a button

20
00:01:41.770 --> 00:01:42.180
or

21
00:01:42.200 --> 00:01:50.310
an icon after the text we pass here so that we can actually see that. For that, I'll go back to the

22
00:01:50.310 --> 00:01:57.690
tooltip and instead of logging something for the console here, we can steady use the this keyword which

23
00:01:57.690 --> 00:02:05.850
is built into Javascript to access the the web component object, so the HTML element object which will

24
00:02:05.850 --> 00:02:10.270
be created for us when the browser detects this tag being used

25
00:02:10.290 --> 00:02:17.670
and here we can use all the features we can use on normal HTML elements when we select them

26
00:02:17.670 --> 00:02:19.500
in Javascript too.

27
00:02:19.650 --> 00:02:27.300
For example we can append a child Node, so we can append another HTML element inside of our custom

28
00:02:27.330 --> 00:02:28.410
element

29
00:02:28.410 --> 00:02:33.700
and that sounds promising because there, I actually want to append my own

30
00:02:33.840 --> 00:02:38.670
icon let's say, my own icon above which we later can hover.

31
00:02:39.120 --> 00:02:47.760
And for that, I can simply call document create element here and I will create a span here, a span element

32
00:02:47.820 --> 00:02:51.000
and that of course is not a custom web component,

33
00:02:51.060 --> 00:02:58.410
it is an element built into the browser because in the end, all your components you're building will

34
00:02:58.410 --> 00:03:01.720
be made up of these core primitives,

35
00:03:01.890 --> 00:03:08.820
of these built-in elements. You just compose them differently, style them differently and add your

36
00:03:08.820 --> 00:03:14.600
own event listeners, your own logic to do something when a certain button gets clicked and so on.

37
00:03:14.610 --> 00:03:20.630
So all this composition, all this logic will in the end make up your own element.

38
00:03:20.670 --> 00:03:27.650
So here I'm creating a span and I will store that in a new constant,

39
00:03:27.660 --> 00:03:30.510
so basically a variable which I'll never change,

40
00:03:30.510 --> 00:03:36.800
this is also a built-in Javascript feature using next-gen Javascript syntax which Chrome, the latest version

41
00:03:36.800 --> 00:03:44.600
of it natively supports and I'll name this constant tooltipIcon, the name is up to you

42
00:03:44.880 --> 00:03:54.740
and on that tooltipIcon, I'll then set the text content equal to a whitespace, so a blank here and then

43
00:03:55.970 --> 00:04:03.500
parentheses and let's say questionmark inside of it and you could theoretically create an image element

44
00:04:03.530 --> 00:04:06.790
and render your own image, here I'll just go with text.

45
00:04:07.160 --> 00:04:11.320
I want to add this, this span here with this text content.

46
00:04:11.480 --> 00:04:13.020
I want to add this now

47
00:04:13.040 --> 00:04:21.580
in my HTML element and therefore here, I will call append child and I will append my tooltipIcon

48
00:04:21.620 --> 00:04:33.170
here. With that if I now save that and I reload this page in the browser, I actually get an error here.

49
00:04:33.450 --> 00:04:37.090
Now this is a bit of a cryptic error message.

50
00:04:37.260 --> 00:04:45.220
In the end the problem we have here is the place where we try to append the child, the constructor is

51
00:04:45.250 --> 00:04:49.340
is the wrong place for it. Now to find the right place,

52
00:04:49.350 --> 00:04:57.330
we need to learn how the browser or Javascript, the Javascript engine actually goes about creating our

53
00:04:57.330 --> 00:05:01.910
own custom elements because it follows a specific lifecycle for that.
