WEBVTT
1
00:00:02.680 --> 00:00:08.350
So now that we're able to listen to changes in the attributes, we of course can also adjust the content

2
00:00:08.350 --> 00:00:10.940
we display in our TooltipText.

3
00:00:10.990 --> 00:00:13.550
This is something we were not able to do before,

4
00:00:13.660 --> 00:00:15.660
well now we can.

5
00:00:15.660 --> 00:00:21.860
Now let's keep in mind that showTooltip is responsible for showing some text here

6
00:00:22.180 --> 00:00:28.470
and we do actually show the TooltipText. The TooltipText on the other hand is a property which we set

7
00:00:28.470 --> 00:00:30.160
in a connectedCallback,

8
00:00:30.190 --> 00:00:36.910
so now all we have to do is we have to update the TooltipText here when our attribute changes.

9
00:00:37.250 --> 00:00:45.010
So I will first of all check if the old value is equal to the new value because that means it kind

10
00:00:45.010 --> 00:00:51.930
of triggered but maybe you entered a new value but it is exactly equal to the old value

11
00:00:51.970 --> 00:00:58.060
and in this case, I'll just return, I'll not execute any other code because I don't want to waste any

12
00:00:58.060 --> 00:00:58.960
performance here,

13
00:00:58.990 --> 00:01:04.300
I don't want to run any other code, that would be redundant here because if the new value is equal to the old

14
00:01:04.300 --> 00:01:04.840
value,

15
00:01:04.840 --> 00:01:09.040
there is nothing that could have changed. If this is not equal,

16
00:01:09.190 --> 00:01:13.580
we'll make it into the next step because now something changed and we want to update this

17
00:01:13.990 --> 00:01:19.450
and then here I'll check if the name of the attribute is equal to text and we simply have to add our

18
00:01:19.450 --> 00:01:20.520
own logic here,

19
00:01:20.560 --> 00:01:25.900
we have to be aware of which attributes could be changing and which matter for us and what do we want

20
00:01:25.900 --> 00:01:27.280
to do when they change.

21
00:01:27.610 --> 00:01:34.210
So here I know if the text attribute changed and yes, we are only listening to changes in the text attribute

22
00:01:34.210 --> 00:01:37.080
here but we could have more attributes we're listening to,

23
00:01:37.180 --> 00:01:39.320
so it's a good practice to check this

24
00:01:39.660 --> 00:01:47.200
and if we know ok the text attribute changed, then I know I want to set my TooltipText here equal

25
00:01:47.410 --> 00:01:56.470
to the new value and of course the logic you add here depends on what your attribute does and what a change

26
00:01:56.470 --> 00:01:57.630
that means for you.

27
00:01:57.820 --> 00:02:02.830
You could also be required to add a new element to the shadow DOM here,

28
00:02:02.860 --> 00:02:09.280
here I just need to change my TooltipText because with that changed, if I reload this a second time,

29
00:02:10.000 --> 00:02:19.240
here I see my default text of course and now I can add this is the adjusted text here and if I hit enter

30
00:02:19.330 --> 00:02:22.950
and I hover over this question mark again, we see the adjusted text here too

31
00:02:23.140 --> 00:02:32.080
because in our web component, we simply adjust our TooltipText here when this text attribute changes.
