1
00:00:02,340 --> 00:00:05,480
Now let's take what we learned in the last lectures

2
00:00:05,490 --> 00:00:15,420
one step further. What if we want to apply a default style from inside our component but only if some

3
00:00:15,420 --> 00:00:19,860
condition is true on our custom element.

4
00:00:19,890 --> 00:00:21,340
Let me give you an example.

5
00:00:22,100 --> 00:00:28,580
Let's say on this first tooltip here, we added a class. We might have done this right from the start

6
00:00:28,580 --> 00:00:36,380
we wrote our HTML document or maybe we did this programmatically, when our app runs a user clicks

7
00:00:36,380 --> 00:00:42,320
a button and we add a class to this element as we can do it with any HTML element.

8
00:00:42,740 --> 00:00:45,320
The class here is maybe important,

9
00:00:45,350 --> 00:00:46,570
the name does not matter,

10
00:00:46,580 --> 00:00:51,340
let's say we added the important CSS class to our custom element.

11
00:00:51,360 --> 00:00:56,760
Now we only want to set a background color on our custom element

12
00:00:56,760 --> 00:01:00,330
if that important class was set.

13
00:01:00,520 --> 00:01:07,690
Now what you can't to do is you can't say :host.important, this might be something you would think

14
00:01:07,690 --> 00:01:12,520
that works because that is how you normally combine multiple selectors together in one rule if they

15
00:01:12,520 --> 00:01:14,810
all have to match simultaneously

16
00:01:14,830 --> 00:01:17,020
but here if we reload,

17
00:01:17,280 --> 00:01:23,710
this actually has no effect as you can see, on our custom element, we now don't have any styling from

18
00:01:23,710 --> 00:01:25,450
inside our web component.

19
00:01:25,750 --> 00:01:27,510
So this does not work,

20
00:01:27,580 --> 00:01:33,390
instead :host is also used as a function if you have some condition for it.

21
00:01:33,670 --> 00:01:40,570
So you then simply wrap your condition, so the other CSS selectors that should be matching on your host

22
00:01:40,600 --> 00:01:41,110
element,

23
00:01:41,170 --> 00:01:49,130
so on your custom tag and you add all these required selectors here, required conditions in the

24
00:01:49,240 --> 00:01:51,870
parentheses here and you can have anything in there.

25
00:01:51,880 --> 00:01:56,150
You can have an attribute selector in there, a class selector as we have it here,

26
00:01:56,230 --> 00:02:00,360
an ID selector, any kind of combinations.

27
00:02:00,400 --> 00:02:06,780
Now with this syntax, with host, with the condition of also having the important class,

28
00:02:06,820 --> 00:02:13,420
now with that, we get back this gray-ish background but only on the first web component here, not on our

29
00:02:13,420 --> 00:02:19,720
second one because we now require the presence of this important class and this is simply not the

30
00:02:19,720 --> 00:02:20,290
case

31
00:02:20,410 --> 00:02:23,870
on this second component, on the first one it is

32
00:02:23,920 --> 00:02:30,820
and in the style inspector here, we indeed see this is responsible for setting this gray background

33
00:02:31,000 --> 00:02:38,810
and this is our host rule with the condition of also having the important CSS class on our custom element.

34
00:02:39,010 --> 00:02:45,730
So that is another very important, very end of host that allows us to style things with way more

35
00:02:45,850 --> 00:02:47,050
flexibility.
