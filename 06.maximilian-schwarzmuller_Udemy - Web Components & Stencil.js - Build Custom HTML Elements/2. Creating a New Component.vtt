WEBVTT
1
00:00:02.560 --> 00:00:09.010
I'm back in a stencil project and this is actually a clean project with no components, you can also continue

2
00:00:09.010 --> 00:00:14.930
in the old project with the side drawer, maybe just clean up the index.html file to not use the side drawer

3
00:00:14.950 --> 00:00:15.530
here

4
00:00:15.530 --> 00:00:17.300
so that we have all the space we need

5
00:00:17.440 --> 00:00:21.820
but in the end, the component we'll be building here will be totally independent of other components,

6
00:00:21.910 --> 00:00:25.320
so you can also continue in your old setup.

7
00:00:25.580 --> 00:00:32.200
Now the component I want to build in this module will be a component that will actually make a connection

8
00:00:32.200 --> 00:00:33.000
to the web,

9
00:00:33.040 --> 00:00:38.710
so which will actually reach out to some server in the Internet and fetch data from there because that

10
00:00:38.710 --> 00:00:45.400
will show us a lot of things, where our component needs to be more reactive, where it needs to adjust

11
00:00:45.430 --> 00:00:52.330
to different states and where we want to write code that also make sure that for example, this HTTP request

12
00:00:52.570 --> 00:00:58.180
is sent again and again and again when some input data to the component changes.

13
00:00:58.180 --> 00:01:01.820
So there will be a lot of interesting things we'll cover here

14
00:01:01.960 --> 00:01:09.760
and for this, we'll create a component which accepts a stock ticker as an input, so the symbol, the identifier

15
00:01:09.760 --> 00:01:16.480
of some stock data or some listed stock and then we'll fetch the latest price for this stock from

16
00:01:16.480 --> 00:01:20.770
an open API and we'll display that price in the component then

17
00:01:21.010 --> 00:01:26.700
and this will be using a lot of these cool advanced features. Now for that, I'll

18
00:01:26.710 --> 00:01:32.730
first of all create a new component in a component folder here by creating a new subfolder and I'll name

19
00:01:32.740 --> 00:01:34.270
it stock price,

20
00:01:34.270 --> 00:01:35.890
you can name it whatever you want, I'll

21
00:01:35.920 --> 00:01:44.760
also create a file, stock-price.tsx in that component to hold all my well, code for this component and

22
00:01:44.780 --> 00:01:49.790
I'll also use some styling, so I'll also add a stock-price.css file.

23
00:01:49.870 --> 00:01:55.580
Now in the stock-price.tsx file, we'll create our component class and we'll export that,

24
00:01:55.600 --> 00:02:05.080
so export class StockPrice like this and there, we'll of course add the @ component decorator now which

25
00:02:05.080 --> 00:02:08.170
needs to be imported from @stencil/core, 

26
00:02:08.200 --> 00:02:12.390
so make sure to not forget this import at the top. Now

27
00:02:12.430 --> 00:02:19.060
I'll give this a tag of uc-StockPrice, again following that naming pattern which should ensure

28
00:02:19.060 --> 00:02:26.250
that it's a unique name and I'll then assign a style URL pointing at the stock-price.css file

29
00:02:26.530 --> 00:02:31.680
and last but not least, I also want to use the shadow DOM here so I'll set that to true.

30
00:02:32.050 --> 00:02:34.450
With that we got this basic component set up,

31
00:02:34.600 --> 00:02:38.180
obviously it's not doing anything but we'll be able to use it

32
00:02:38.410 --> 00:02:45.700
and now the next steps will be to add functionality to it step by step so that we can fetch stock prices.
