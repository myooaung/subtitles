WEBVTT
1
00:00:02.260 --> 00:00:07.870
So now that we can close and open our modal, let's dispatch our own events.

2
00:00:07.870 --> 00:00:09.550
Now how do we do that?

3
00:00:09.970 --> 00:00:17.020
Well for that, let me first of all accept on the cancel event, the event object. We get this automatically,

4
00:00:17.320 --> 00:00:23.280
we get this automatically because we used this click event listener here and Javascript just works in

5
00:00:23.280 --> 00:00:29.530
a way that the method which gets triggered for this event automatically receives an object with some

6
00:00:29.590 --> 00:00:33.090
metadata about the event that was created by Javascript,

7
00:00:33.100 --> 00:00:35.260
so about that built-in event.

8
00:00:35.350 --> 00:00:38.900
Now we don't need that event to dispatch our own ones,

9
00:00:38.940 --> 00:00:46.600
we will not copy it or anything like that but on this event with event target, I get access to the target

10
00:00:46.600 --> 00:00:48.170
that is responsible for this event,

11
00:00:48.220 --> 00:00:56.680
so in my case the button and this button just like every other HTML element is capable of dispatching

12
00:00:56.920 --> 00:01:05.290
a new event with dispatch event method. The dispatch event method takes a new event,

13
00:01:05.310 --> 00:01:10.070
so a totally new event, not this event we receive here, a new event as an argument.

14
00:01:10.380 --> 00:01:14.800
So here, I'll name this cancel event, the name is totally up to you

15
00:01:14.910 --> 00:01:20.730
and I create it with the new keyword which we use in Javascript to create new objects based on constructor,

16
00:01:20.730 --> 00:01:22.560
functions or classes

17
00:01:22.560 --> 00:01:24.590
and I'll use the built-in event object.

18
00:01:24.600 --> 00:01:30.510
So this is built into Javascript, just as the HTML element is.

19
00:01:30.550 --> 00:01:37.090
So now I can create a new event here and we give this event our own name by passing it in the constructor

20
00:01:37.090 --> 00:01:39.500
here between quotation marks,

21
00:01:39.520 --> 00:01:46.270
so as a string and here I'll name this cancel and this is exactly the name to which we will be able

22
00:01:46.270 --> 00:01:48.510
to listen to from outside later.

23
00:01:48.520 --> 00:01:54.580
So here I am listening to the cancel event in my index.html file and this should work later

24
00:01:54.940 --> 00:01:58.790
because I'm dispatching an event named cancel here.

25
00:01:58.900 --> 00:02:03.740
So now I pass this cancel event to my dispatch event function

26
00:02:04.270 --> 00:02:06.850
and with that, let's see if that works.

27
00:02:06.850 --> 00:02:08.600
Let's go back and reload here,

28
00:02:09.400 --> 00:02:16.030
click that and click cancel and we don't see cancelled here in the console, even though we should be

29
00:02:16.030 --> 00:02:19.930
logging that here when we listen to the cancel event.

30
00:02:19.930 --> 00:02:28.040
So somehow our own event doesn't really seem to be dispatched on our component and indeed it isn't. It

31
00:02:28.040 --> 00:02:30.800
is dispatched on the button because

32
00:02:30.820 --> 00:02:36.140
and that is the only reason why I accepted the event argument here, we're dispatching it on the

33
00:02:36.140 --> 00:02:41.930
event target of the cancelled event or of the cancel event handler I should say and that event handler

34
00:02:41.930 --> 00:02:44.590
is used on the click event of the cancel button.

35
00:02:44.660 --> 00:02:47.890
So the event target of that event is the cancel button,

36
00:02:47.900 --> 00:02:53.810
so we're using that HTML element to dispatch the event here and therefore, the only place where we can

37
00:02:53.810 --> 00:02:57.040
listen to that, well is that button.

38
00:02:57.110 --> 00:02:57.740
So if I would

39
00:02:57.770 --> 00:03:06.650
add an event listener here and I would listen for the cancel event here and there I just use an anonymous

40
00:03:06.850 --> 00:03:12.190
arrow function to quickly output cancel inside the component,

41
00:03:12.500 --> 00:03:14.060
then we should see that log

42
00:03:14.090 --> 00:03:18.790
once we click the cancel button because now we're listening to the same element where we dispatched

43
00:03:18.790 --> 00:03:22.540
this and indeed, here we see cancel inside the component.

44
00:03:22.550 --> 00:03:25.920
So the good thing is dispatching our custom event works,

45
00:03:25.940 --> 00:03:29.470
the bad thing is it is only available on our button,

46
00:03:29.480 --> 00:03:32.850
it doesn't leave our component and that is not ideal.

47
00:03:33.110 --> 00:03:36.050
Let's work on that and I'll comment this out here,

48
00:03:36.050 --> 00:03:38.210
let's work on this in the next lecture.
