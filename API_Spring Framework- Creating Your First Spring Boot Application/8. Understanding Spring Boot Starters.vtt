WEBVTT
1
00:00:01.696 --> 00:00:04.925
Before we jump into full app building mode in the next section,

2
00:00:04.925 --> 00:00:08.393
I want to emphasize how amazing this Spring Boot starter concept is.

3
00:00:08.393 --> 00:00:12.504
The starters are what really makes Spring Boot shine.

4
00:00:12.504 --> 00:00:12.743
First,

5
00:00:12.743 --> 00:00:17.057
a starter is a way to integrate a dependency on your project to get it all set

6
00:00:17.057 --> 00:00:20.805
up and ready to run by simply declaring it as a dependency.

7
00:00:20.805 --> 00:00:22.430
Did you catch that?

8
00:00:22.430 --> 00:00:25.020
Declare a starter, and you're done.

9
00:00:25.020 --> 00:00:28.416
All Spring-based apps need to specify what pieces of the

10
00:00:28.416 --> 00:00:29.985
Spring framework they're going to utilize.

11
00:00:29.985 --> 00:00:34.287
If you have a really complex app, you will also have a lot of dependencies,

12
00:00:34.287 --> 00:00:36.932
and those dependencies will have dependencies,

13
00:00:36.932 --> 00:00:38.094
and so on.

14
00:00:38.094 --> 00:00:41.255
This makes version mismatches and other headaches appear.

15
00:00:41.255 --> 00:00:44.143
Spring Boot starters solve those headaches by allowing

16
00:00:44.143 --> 00:00:45.663
you to simply declare the starter,

17
00:00:45.663 --> 00:00:47.785
and it will take care of getting all of the right

18
00:00:47.785 --> 00:00:50.204
dependencies and versions in place.

19
00:00:50.204 --> 00:00:53.403
Let's quickly take a look at what this looks like in

20
00:00:53.403 --> 00:00:56.594
the application that we just created.

21
00:00:56.594 --> 00:01:02.082
All dependencies in Maven-based Spring projects are kept in the pom.xml file.

22
00:01:02.082 --> 00:01:03.158
That's at the root of the project,

23
00:01:03.158 --> 00:01:05.942
so I'm going to go ahead and double-click and open it up.

24
00:01:05.942 --> 00:01:09.922
If you jump to the dependencies section of the file,

25
00:01:09.922 --> 00:01:13.743
you can see that we have the starter-web and the starter-test defined.

26
00:01:13.743 --> 00:01:18.489
These starters set up Spring MVC and the Spring test frameworks respectively.

27
00:01:18.489 --> 00:01:21.661
To get a better idea of exactly what each dependency does,

28
00:01:21.661 --> 00:01:27.172
you can expand the Maven slider on the right-hand of the IDE.

29
00:01:27.172 --> 00:01:32.185
Click on the app and then open the dependency section of the tree.

30
00:01:32.185 --> 00:01:37.387
When I expand the spring-boot-starter-web, you should take notice of two things.

31
00:01:37.387 --> 00:01:41.012
First, there is a handful of dependencies that this starter brought in.

32
00:01:41.012 --> 00:01:45.089
All of these dependencies are necessary to make Spring MVC work correctly.

33
00:01:45.089 --> 00:01:48.761
And second, each sub dependency has a specific version.

34
00:01:48.761 --> 00:01:52.258
The Spring developers have spent a lot of time getting these

35
00:01:52.258 --> 00:01:55.513
versions to all match up so that they work together out of

36
00:01:55.513 --> 00:01:57.546
the box without any problems.

37
00:01:57.546 --> 00:02:01.709
I'm going to go ahead and close the Maven tab and jump back to the pom.xml file.

38
00:02:01.709 --> 00:02:04.130
You'll notice that when you declare a starter dependency,

39
00:02:04.130 --> 00:02:06.827
you don't have to specify a version.

40
00:02:06.827 --> 00:02:12.454
So how does Spring Boot know which versions to add to your project?

41
00:02:12.454 --> 00:02:15.229
The answer lies at the top of the file in the

42
00:02:15.229 --> 00:02:17.342
spring-boot-starter-parent declaration.

43
00:02:17.342 --> 00:02:20.747
You can see we have a specific Spring Boot version declared here.

44
00:02:20.747 --> 00:02:23.913
The starter-parent declares the version of all the possible

45
00:02:23.913 --> 00:02:26.837
integrations that work with this version of Spring Boot.

46
00:02:26.837 --> 00:02:31.486
This is sometimes referred to the BOM, or bill of materials.

47
00:02:31.486 --> 00:02:34.862
You can see Spring Boot's bill of materials for your project by

48
00:02:34.862 --> 00:02:38.959
right-clicking on the pom.xml file and drill into the Maven sub

49
00:02:38.959 --> 00:02:41.882
menu and click Show Effective POM.

50
00:02:41.882 --> 00:02:46.733
This command essentially flattens out the parent contents with the POM contents.

51
00:02:46.733 --> 00:02:47.826
As you browse through this,

52
00:02:47.826 --> 00:02:53.574
you can see all of the frameworks that Spring has integrated and brought in.

53
00:02:53.574 --> 00:02:56.924
This is why Spring Boot is so awesome is that you no longer need to

54
00:02:56.924 --> 00:03:00.357
spend time doing this because it's already done for you.

55
00:03:00.357 --> 00:03:07.000
That's pretty much it for this section of the course. Coming up next, I'll quickly summarize everything that was covered.

