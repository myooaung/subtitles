WEBVTT
1
00:00:01.725 --> 00:00:03.657
Now that we have two entity models in place,

2
00:00:03.657 --> 00:00:07.558
we can tie them together with a JPA relationship that will

3
00:00:07.558 --> 00:00:09.540
match the database table relationship.

4
00:00:09.540 --> 00:00:14.400
Speakers and sessions are connected via a union or join table,

5
00:00:14.400 --> 00:00:17.794
so we need to set up a many-to-many relationship in our models

6
00:00:17.794 --> 00:00:21.491
that will match that database relationship.

7
00:00:21.491 --> 00:00:23.986
Let's start with the Session entity.

8
00:00:23.986 --> 00:00:27.110
You need to pick one side of your relationship to be the owner

9
00:00:27.110 --> 00:00:29.988
or main definition point of the relationship.

10
00:00:29.988 --> 00:00:32.624
I'm going to use the Session class for this.

11
00:00:32.624 --> 00:00:38.060
I'll begin by adding a list of associated speakers by adding a new attribute,

12
00:00:38.060 --> 00:00:38.969
like this.

13
00:00:38.969 --> 00:00:41.003
This is pulling in a list of speakers now,

14
00:00:41.003 --> 00:00:43.785
so you'll need to import the List class,

15
00:00:43.785 --> 00:00:45.671
which is from java.util,

16
00:00:45.671 --> 00:00:49.684
and this ends up just being another field on the Session entity,

17
00:00:49.684 --> 00:00:52.510
so I need to add a getter and setter for that.

18
00:00:52.510 --> 00:00:58.285
So I'll click down here and just go to Generate Getter and Setter.

19
00:00:58.285 --> 00:01:01.218
I can select the new value, click OK,

20
00:01:01.218 --> 00:01:07.049
and I now have a basic relationship on the one side of the many-to-many.

21
00:01:07.049 --> 00:01:10.456
Next comes the hard part with defining the relationship.

22
00:01:10.456 --> 00:01:11.996
To tell JPA how this works,

23
00:01:11.996 --> 00:01:15.210
we'll need to add some annotations over the attribute,

24
00:01:15.210 --> 00:01:16.233
like this.

25
00:01:16.233 --> 00:01:21.025
We need the @ManyToMany annotation, go ahead and port that,

26
00:01:21.025 --> 00:01:26.924
the JoinTable, the @JoinColumn, and the definition for the JoinTable.

27
00:01:26.924 --> 00:01:29.522
Here's quickly what these annotations mean.

28
00:01:29.522 --> 00:01:32.482
The first ManyToMany means that you're setting up a many-to-many relationship

29
00:01:32.482 --> 00:01:36.385
and that you have a mapping JoinTable in your database.

30
00:01:36.385 --> 00:01:41.547
The second annotation defines that JoinTable and the foreign key columns.

31
00:01:41.547 --> 00:01:44.112
So in this case, the table is session_speakers,

32
00:01:44.112 --> 00:01:50.822
which has a session_id and a speaker_id foreign key to the

33
00:01:50.822 --> 00:01:53.304
appropriate tables in the relationship.

34
00:01:53.304 --> 00:01:54.443
Now that this is defined,

35
00:01:54.443 --> 00:01:58.306
JPA will set up the SQL join automatically for you when you

36
00:01:58.306 --> 00:02:00.893
make a call to the speakers attribute.

37
00:02:00.893 --> 00:02:03.959
Let's go ahead and jump over to the Speaker entity,

38
00:02:03.959 --> 00:02:07.063
and the last thing that needs to happen is we need to define the

39
00:02:07.063 --> 00:02:09.789
many-to-many relationship on the speakers side.

40
00:02:09.789 --> 00:02:12.678
This will make the relationship bidirectional.

41
00:02:12.678 --> 00:02:12.950
Again,

42
00:02:12.950 --> 00:02:16.189
I'm going to add the attribute pointing to Session and

43
00:02:16.189 --> 00:02:18.407
generate getters and setters for it.

44
00:02:18.407 --> 00:02:24.061
So it will again be a List type, so we'll have to import the java.util list.

45
00:02:24.061 --> 00:02:26.757
This time, we're pointing back to sessions,

46
00:02:26.757 --> 00:02:30.644
and we can create some getters and setter for it,

47
00:02:30.644 --> 00:02:37.575
right-click and generate them, and save the file.

48
00:02:37.575 --> 00:02:40.391
The annotation on this side of the relationship is a little easier

49
00:02:40.391 --> 00:02:45.280
since we simply need to specify that it is the other side of the

50
00:02:45.280 --> 00:02:46.865
existing many-to-many relationship.

51
00:02:46.865 --> 00:02:50.417
We can do that by adding this annotation.

52
00:02:50.417 --> 00:02:54.299
We'll import that class, and you'll notice that it's mapped by speakers,

53
00:02:54.299 --> 00:02:59.493
which is referring to the attribute on the Sessions class called the speakers.

54
00:02:59.493 --> 00:03:00.922
And that's it for our relationships.

55
00:03:00.922 --> 00:03:08.000
We just have one last piece to deal with on the entities, and that is the speaker photo, which we'll deal with next.

