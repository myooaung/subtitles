WEBVTT
1
00:00:01.303 --> 00:00:03.616
So far, we've been talking about property files,

2
00:00:03.616 --> 00:00:06.276
which have been a staple in Java since forever.

3
00:00:06.276 --> 00:00:11.333
Let's see what it would take to use newer YAML-based files.

4
00:00:11.333 --> 00:00:13.789
These files will pretty much work just like a properties files

5
00:00:13.789 --> 00:00:16.628
in the sense that it needs to live on the class path and it

6
00:00:16.628 --> 00:00:20.250
needs to be named application.yml.

7
00:00:20.250 --> 00:00:23.150
The nice thing about Spring Boot is that you can mix and

8
00:00:23.150 --> 00:00:25.083
match property and YAML file types.

9
00:00:25.083 --> 00:00:26.859
To show how that works,

10
00:00:26.859 --> 00:00:28.578
I'm going to move the server port from the

11
00:00:28.578 --> 00:00:33.283
application.properties file to a new application.yml file.

12
00:00:33.283 --> 00:00:36.869
That leaves the JDBC connection for the database in one

13
00:00:36.869 --> 00:00:39.481
file and the server port in another.

14
00:00:39.481 --> 00:00:42.417
So I'll begin by going over to application.properties and

15
00:00:42.417 --> 00:00:47.228
removing the server.port configuration property.

16
00:00:47.228 --> 00:00:49.105
Next, I'll create a new file in src, main,

17
00:00:49.105 --> 00:00:53.345
resources, and I'll call it application.yml.

18
00:00:53.345 --> 00:00:57.077
I can now paste the server port into the YAML file,

19
00:00:57.077 --> 00:01:00.828
but I'll need to adjust it because YAML files are not

20
00:01:00.828 --> 00:01:02.873
configured like property files.

21
00:01:02.873 --> 00:01:07.300
YAML files show hierarchy and nested properties fairly well.

22
00:01:07.300 --> 00:01:11.246
And so if you have a lot of complex, really deep properties,

23
00:01:11.246 --> 00:01:13.696
YAML files work well for that.

24
00:01:13.696 --> 00:01:16.283
So I'll make sure my property files are saved,

25
00:01:16.283 --> 00:01:20.835
and I'll go ahead and restart the server.

26
00:01:20.835 --> 00:01:22.088
If I go look at the output,

27
00:01:22.088 --> 00:01:25.697
you'll notice that the Tomcat server still started on port 5000 even

28
00:01:25.697 --> 00:01:29.605
though I removed it out of the application.properties file.

29
00:01:29.605 --> 00:01:30.945
Some advice for your project,

30
00:01:30.945 --> 00:01:35.006
even though you can mix and match property file types in your application,

31
00:01:35.006 --> 00:01:37.786
I'd recommend picking one format and sticking with it.

32
00:01:37.786 --> 00:01:41.809
You want to try and isolate your configuration for your setup in

33
00:01:41.809 --> 00:01:45.218
your application and keep it as simple as possible.

34
00:01:45.218 --> 00:01:48.744
Last, environment profiles also work with the YAML files.

35
00:01:48.744 --> 00:01:53.541
We could simply append a -dev or -prod to a YAML file,

36
00:01:53.541 --> 00:01:57.722
and it would work exactly like application property files do

37
00:01:57.722 --> 00:02:01.229
using a Spring profile from the command line.

38
00:02:01.229 --> 00:02:02.015
And at this point,

39
00:02:02.015 --> 00:02:04.096
we know just about everything there is to know about

40
00:02:04.096 --> 00:02:10.000
property files in Spring Boot, so let's check out what you can do with custom properties.

