1
00:00:01,240 --> 00:00:05,310
Before we drill down further and perform more decomposition into epics

2
00:00:05,310 --> 00:00:08,910
and features regarding the business unit program requirements, let's

3
00:00:08,910 --> 00:00:13,440
level set on some terms and definitions.

4
00:00:13,440 --> 00:00:18,720
Here are several forms of expressing user requirements. User stories, to me,

5
00:00:18,720 --> 00:00:23,760
the most popular and atomic unit if you write them well and follow the invest

6
00:00:23,760 --> 00:00:27,970
guidelines we discussed in the last module. Features, just a note, many

7
00:00:27,970 --> 00:00:31,350
organizations intermix the term user story with feature,

8
00:00:31,350 --> 00:00:33,970
and I suppose that is fine. To me, a feature,

9
00:00:33,970 --> 00:00:34,360
though,

10
00:00:34,360 --> 00:00:38,460
is a higher level of abstraction than a user story. Epics, even

11
00:00:38,460 --> 00:00:42,270
broader than features, and I equate epics to business unit or

12
00:00:42,270 --> 00:00:45,600
program‑level requirements. And lastly, themes,

13
00:00:45,600 --> 00:00:50,730
which I equate to company strategies and enterprise‑level requirements.

14
00:00:50,730 --> 00:00:54,600
Features and stories will apply to a product or single team,

15
00:00:54,600 --> 00:00:58,160
typically. Epics will apply to program or business units,

16
00:00:58,160 --> 00:01:02,540
so a broader range of requirements. And lastly, themes or business

17
00:01:02,540 --> 00:01:05,170
strategies apply at the top of the enterprise.

18
00:01:05,170 --> 00:01:08,750
We will discuss themes and enterprise requirements in the next module,

19
00:01:08,750 --> 00:01:13,050
Gathering Requirements for the Enterprise. Now our starting point for this

20
00:01:13,050 --> 00:01:17,030
module are the epics since I'm equating those to business unit or

21
00:01:17,030 --> 00:01:20,630
program‑level requirements. Now let's look at the four of these in more

22
00:01:20,630 --> 00:01:26,570
detail. For expressing user stories, they are detailed,

23
00:01:26,570 --> 00:01:29,550
succinct, and follow the invest guideline.

24
00:01:29,550 --> 00:01:31,320
They are used by the product owner,

25
00:01:31,320 --> 00:01:34,000
the business analysts, and the dev team members.

26
00:01:34,000 --> 00:01:37,010
They are designed and sized to fit into an

27
00:01:37,010 --> 00:01:39,740
iteration of an Agile or Lean activity.

28
00:01:39,740 --> 00:01:44,170
And the form that is used is the user story format that I described in the

29
00:01:44,170 --> 00:01:49,860
last module. For expressing features, they are short,

30
00:01:49,860 --> 00:01:53,610
descriptive phrases and easily understandable by the business.

31
00:01:53,610 --> 00:01:57,310
They are used by the product owner, business analysts, and the developer team.

32
00:01:57,310 --> 00:02:00,820
Features take multiple iterations or releases to implement.

33
00:02:00,820 --> 00:02:04,840
They are typically a bit larger in scope than a user story and can be

34
00:02:04,840 --> 00:02:08,540
expressed with user stories or use cases, and again,

35
00:02:08,540 --> 00:02:11,840
are broader in scope.

36
00:02:11,840 --> 00:02:14,490
Now let's look at expressing epics.

37
00:02:14,490 --> 00:02:16,390
They are broad, challenging,

38
00:02:16,390 --> 00:02:19,860
impactful, and market‑driven descriptors. The

39
00:02:19,860 --> 00:02:24,420
creators of epics are product owners, business analysts, and senior management.

40
00:02:24,420 --> 00:02:27,060
They can affect multiple projects and teams,

41
00:02:27,060 --> 00:02:30,440
and the time estimates to complete are in months or quarters.

42
00:02:30,440 --> 00:02:34,200
The form they take are phrases, very high‑level use cases,

43
00:02:34,200 --> 00:02:35,240
bullet lists,

44
00:02:35,240 --> 00:02:41,970
business cases or project goals. Expressing themes, and

45
00:02:41,970 --> 00:02:44,760
themes are strategic business goals.

46
00:02:44,760 --> 00:02:47,830
They are large initiatives, consuming sizable

47
00:02:47,830 --> 00:02:50,390
resources for competitive advantage.

48
00:02:50,390 --> 00:02:55,330
The creators are CEOs, board of directors, and senior executives.

49
00:02:55,330 --> 00:02:59,240
They may be measured in quarters or years to get things done,

50
00:02:59,240 --> 00:03:06,240
and the form they take are vision statements and strategic business documents.

51
00:03:06,240 --> 00:03:10,210
From theme to user story. Let's say we have a theme

52
00:03:10,210 --> 00:03:12,860
that is created by a CEO of a company.

53
00:03:12,860 --> 00:03:15,630
Several senior managers create three epics.

54
00:03:15,630 --> 00:03:20,010
A product owner and her business analyst partner create three features,

55
00:03:20,010 --> 00:03:25,540
and in turn, one of those features is further decomposed into five user stories.

56
00:03:25,540 --> 00:03:29,350
You can see that from themes to user stories remove from a very high

57
00:03:29,350 --> 00:03:35,240
level of abstraction to a very low level of abstraction.

58
00:03:35,240 --> 00:03:39,310
Here are our four forms of expressing user requirements,

59
00:03:39,310 --> 00:03:42,720
and I want to talk about the testability test. User

60
00:03:42,720 --> 00:03:45,090
stories and features are testable, that is,

61
00:03:45,090 --> 00:03:48,220
you can take a user story or feature and write test cases

62
00:03:48,220 --> 00:03:51,150
to test it and prove that they work.

63
00:03:51,150 --> 00:03:54,940
That is because they are highly decomposed and succinct.

64
00:03:54,940 --> 00:03:56,140
On the other hand,

65
00:03:56,140 --> 00:04:01,130
epics and themes are not testable. They are very high level and abstract.

66
00:04:01,130 --> 00:04:03,510
This is just another way to view and think about

67
00:04:03,510 --> 00:04:07,940
the ways to express requirements.

68
00:04:07,940 --> 00:04:11,390
A requirement is something you want to do,

69
00:04:11,390 --> 00:04:15,420
but there is no predetermined way to know whether it is a theme,

70
00:04:15,420 --> 00:04:17,640
epic, feature or user story.

71
00:04:17,640 --> 00:04:19,920
And don't let anyone tell you otherwise.

72
00:04:19,920 --> 00:04:21,680
But there are norms,

73
00:04:21,680 --> 00:04:24,580
and you need to decide how you want to use these in your

74
00:04:24,580 --> 00:04:28,580
organization. Define them and provide artifacts to help your

75
00:04:28,580 --> 00:04:31,140
team better understand and use them.

76
00:04:31,140 --> 00:04:35,670
Having a common way of working and expressing requirements is critical.

77
00:04:35,670 --> 00:04:38,600
I have certainly given you some good guidelines to begin with,

78
00:04:38,600 --> 00:04:45,000
and you can annotate them as you see fit. You just want everyone to be on the same page.

