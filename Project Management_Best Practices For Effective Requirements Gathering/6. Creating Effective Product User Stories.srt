1
00:00:00,940 --> 00:00:04,210
Now, let's look how you can work with your product owner to

2
00:00:04,210 --> 00:00:09,340
develop and create effective user stories.

3
00:00:09,340 --> 00:00:11,820
In order to create effective user stories,

4
00:00:11,820 --> 00:00:15,230
you need a common approach on how to build user stories.

5
00:00:15,230 --> 00:00:18,420
You see, English can be a fuzzy, ambiguous language,

6
00:00:18,420 --> 00:00:21,090
and we cannot code great software from fuzz. Our

7
00:00:21,090 --> 00:00:25,350
user stories need to be succinct, clear, and in a single style.

8
00:00:25,350 --> 00:00:28,140
They need to follow a standard user story template,

9
00:00:28,140 --> 00:00:32,140
and you want to use a common language that is understood by the product owner,

10
00:00:32,140 --> 00:00:36,840
you, the analyst, and the development team.

11
00:00:36,840 --> 00:00:39,210
Here's an approach for building your user stories,

12
00:00:39,210 --> 00:00:40,670
and there are three major parts.

13
00:00:40,670 --> 00:00:44,310
First, the type of user is the who or the role,

14
00:00:44,310 --> 00:00:47,460
for example, a student, a teacher, or a cashier.

15
00:00:47,460 --> 00:00:52,450
Next, you need a goal or an outcome, that is what are you trying to accomplish?

16
00:00:52,450 --> 00:00:57,480
For example, a student is trying to find and register for a course. And lastly,

17
00:00:57,480 --> 00:01:01,000
a benefit or reason for doing the user story in the first place.

18
00:01:01,000 --> 00:01:04,510
For example, the benefit is enrolling in a course.

19
00:01:04,510 --> 00:01:06,320
This is a very common approach,

20
00:01:06,320 --> 00:01:09,250
and you'll find it described in books and articles, so you can

21
00:01:09,250 --> 00:01:14,190
read up on it. Let me show you the user story template that I

22
00:01:14,190 --> 00:01:19,050
use. First is the role. So as a role or type of user, so when

23
00:01:19,050 --> 00:01:20,550
discussing requirements,

24
00:01:20,550 --> 00:01:23,940
try and figure out what type of user does this user story

25
00:01:23,940 --> 00:01:27,930
apply to. Next, you want to achieve a goal or an outcome.

26
00:01:27,930 --> 00:01:29,990
Again, when discussing the requirements,

27
00:01:29,990 --> 00:01:33,240
try and figure out what goal the user will have.

28
00:01:33,240 --> 00:01:35,730
And again, when discussing requirements,

29
00:01:35,730 --> 00:01:38,870
try and figure out what goal the user story will have.

30
00:01:38,870 --> 00:01:43,990
And lastly, what is the benefit, reason, or gain from doing this user story?

31
00:01:43,990 --> 00:01:45,130
Here's an example.

32
00:01:45,130 --> 00:01:50,190
As as student, student is the role or type of user, I can search,

33
00:01:50,190 --> 00:01:54,750
find, and select classes, that is the goal or reason of the user story, so

34
00:01:54,750 --> 00:01:58,730
that I can successfully enroll, that is the benefit.

35
00:01:58,730 --> 00:02:01,490
This approach can be used for anything in the product

36
00:02:01,490 --> 00:02:04,220
owners' backlog, features certainly, bugs,

37
00:02:04,220 --> 00:02:06,310
research, and analysis activities.

38
00:02:06,310 --> 00:02:07,190
You name it.

39
00:02:07,190 --> 00:02:09,300
If you struggle with a user story,

40
00:02:09,300 --> 00:02:12,250
then you need to do more analysis, since that means you

41
00:02:12,250 --> 00:02:14,240
don't know enough about the requirement.

42
00:02:14,240 --> 00:02:19,070
You can see how normalizing requirements to user stories in and of itself is

43
00:02:19,070 --> 00:02:22,730
a tool to clarify and enlighten you on the requirements.

44
00:02:22,730 --> 00:02:23,320
Plus,

45
00:02:23,320 --> 00:02:27,230
if we have multiple product owner authors, we can normalize the

46
00:02:27,230 --> 00:02:30,840
writing styles. This is very important to have a common approach to

47
00:02:30,840 --> 00:02:35,640
improve communication between team members.

48
00:02:35,640 --> 00:02:37,640
What makes a good user story?

49
00:02:37,640 --> 00:02:42,390
INVEST. These are known as INVEST because each attribute that I'll

50
00:02:42,390 --> 00:02:45,580
talk about will spell out part of the word INVEST.

51
00:02:45,580 --> 00:02:49,820
The first, independent. Independent means that a story can be coded,

52
00:02:49,820 --> 00:02:52,680
tested, and even delivered all on its own, that is,

53
00:02:52,680 --> 00:02:56,370
it is not waiting for another story to be completed and can be independently

54
00:02:56,370 --> 00:03:00,230
assessed as to the value to the business. N for negotiable.

55
00:03:00,230 --> 00:03:04,090
A user story can be discussed and potentially accepted for development, a

56
00:03:04,090 --> 00:03:07,670
process of negotiation is conducted between the product owner and the

57
00:03:07,670 --> 00:03:12,130
development team, and very important here, each party respects and jointly

58
00:03:12,130 --> 00:03:14,990
collaborates to arrive at the best approach and solution.

59
00:03:14,990 --> 00:03:19,540
Also, each is aware of the others' limitations and strengths.

60
00:03:19,540 --> 00:03:23,070
V for valuable. The team's most important goals to deliver

61
00:03:23,070 --> 00:03:25,520
the most value to the business, therefore,

62
00:03:25,520 --> 00:03:30,270
I will suggest to you that this is one of the most important INVEST attributes.

63
00:03:30,270 --> 00:03:33,760
Remember, the backlog is prioritized by value and value alone,

64
00:03:33,760 --> 00:03:37,880
hence the importance of this attribute. Estimable. A wellâ€‘written

65
00:03:37,880 --> 00:03:40,740
and debatable user story is estimable.

66
00:03:40,740 --> 00:03:44,400
Backlog items can be any size really, but let's face it,

67
00:03:44,400 --> 00:03:50,090
a more decomposed user story is more likely to be estimated with accuracy. In

68
00:03:50,090 --> 00:03:53,220
the event you are facing a challenge of producing an estimate,

69
00:03:53,220 --> 00:03:56,320
then it's quite likely you need to decompose or break down

70
00:03:56,320 --> 00:03:58,680
the user story into smaller stories.

71
00:03:58,680 --> 00:04:01,470
And speaking of small, how big is small?

72
00:04:01,470 --> 00:04:02,390
Well, small,

73
00:04:02,390 --> 00:04:06,940
that is a user story you can finish in one iteration is the most desirable.

74
00:04:06,940 --> 00:04:11,140
Most iteration time boxes that I have observed are 2 or 3 weeks.

75
00:04:11,140 --> 00:04:14,820
That gives you an order of magnitude from an elapsed time perspective.

76
00:04:14,820 --> 00:04:18,400
Smaller stories in your iterations are more likely to come out faster,

77
00:04:18,400 --> 00:04:23,180
but again, it's not uncommon for user stories to span multiple iterations.

78
00:04:23,180 --> 00:04:26,270
Lastly, testable. In the agile and lean world,

79
00:04:26,270 --> 00:04:29,560
all code delivered is tested code, but if you think that the

80
00:04:29,560 --> 00:04:32,160
user story cannot be tested in the iteration,

81
00:04:32,160 --> 00:04:34,700
then it is quite likely that the story is not well written,

82
00:04:34,700 --> 00:04:38,080
maybe linked to other user stories, or just too complex.

83
00:04:38,080 --> 00:04:40,840
Vague and fuzzy words in user stories will usually come to

84
00:04:40,840 --> 00:04:43,150
light when discussing if something is testable.

85
00:04:43,150 --> 00:04:43,580
Now,

86
00:04:43,580 --> 00:04:46,760
don't worry if not all six attributes apply to your

87
00:04:46,760 --> 00:04:48,570
user story, this is a guideline,

88
00:04:48,570 --> 00:04:51,920
but try to do all six if you can. Use the INVEST principle as a

89
00:04:51,920 --> 00:04:54,280
checklist against every user story you write,

90
00:04:54,280 --> 00:04:57,320
and it will greatly improve your team's ability to write them.

91
00:04:57,320 --> 00:05:04,000
Remember, better stories result in better outcomes, yielding value to the business quicker.

