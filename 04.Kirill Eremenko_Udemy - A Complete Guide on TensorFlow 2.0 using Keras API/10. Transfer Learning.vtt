WEBVTT
1
00:00:00.530 --> 00:00:04.850
Hello everyone and welcome to this exciting Python tutorial.

2
00:00:04.850 --> 00:00:08.030
In the previous video we defined our data generators.

3
00:00:08.030 --> 00:00:12.170
And with that we have prepared everything for this moment.

4
00:00:12.170 --> 00:00:14.750
Training our transfer learning model.

5
00:00:14.750 --> 00:00:22.000
In this video we are going to use a new version of a feed function for our model when using a data generator

6
00:00:22.260 --> 00:00:24.730
is a way of processing a data set.

7
00:00:24.850 --> 00:00:32.900
We should use a fit generator function instead of normal fit function on our model in the first free

8
00:00:32.900 --> 00:00:41.550
cell right model dot and choose feed the generator function This function takes a few arguments the

9
00:00:41.550 --> 00:00:44.430
data generator is a first argument.

10
00:00:44.430 --> 00:00:51.240
So here specify train generator for our training data then defined number of epochs.

11
00:00:51.240 --> 00:00:57.990
In this case we are going to use only 5 and last argument that we have to provide is validation data

12
00:00:58.550 --> 00:01:05.950
and for that just provide the validation or a value generator and now we have everything.

13
00:01:05.960 --> 00:01:08.870
Are you ready to start our training process.

14
00:01:08.990 --> 00:01:15.240
Execute the cell the training process will take a while and I'll see you back once those training processes

15
00:01:15.280 --> 00:01:16.300
that.

16
00:01:16.540 --> 00:01:18.130
And welcome back guys.

17
00:01:18.130 --> 00:01:25.250
The training is done and we've got amazing results to discuss after only five epochs.

18
00:01:25.250 --> 00:01:33.520
We reached 100 percent accuracy on the training data set and almost 97 percent on the validation data

19
00:01:33.520 --> 00:01:34.650
set.

20
00:01:34.760 --> 00:01:39.370
Don't be too excited about this 100 percent accuracy on the training set.

21
00:01:39.560 --> 00:01:41.690
Our data set is very small.

22
00:01:41.690 --> 00:01:48.950
So for this network on this scale it's not that hard to achieve but still we got amazing and terrific

23
00:01:48.950 --> 00:01:51.880
results for validation data set.

24
00:01:52.160 --> 00:01:58.220
We can easily put this model in production since we are almost all the time correct in recognizing cats

25
00:01:58.220 --> 00:02:00.530
and dogs at this point.

26
00:02:00.540 --> 00:02:07.110
We have amazing results but let's perform another technique and see if you're able to improve these

27
00:02:07.110 --> 00:02:08.810
results even further.

28
00:02:08.940 --> 00:02:15.150
The technique is called fine tuning and the next video we are going to perform final evaluation of these

29
00:02:15.150 --> 00:02:20.670
results and jump into the fine tuning part of this section for now.

30
00:02:20.710 --> 00:02:24.970
If you have any questions or comments please post them in the comments section.

31
00:02:24.970 --> 00:02:26.890
Otherwise I'll assume the next tutorial.
