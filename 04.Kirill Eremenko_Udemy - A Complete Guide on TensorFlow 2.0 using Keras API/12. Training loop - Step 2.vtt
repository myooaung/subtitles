WEBVTT
1
00:00:00.590 --> 00:00:05.040
Hello everyone and welcome to despite a tutorial in the previous video.

2
00:00:05.110 --> 00:00:10.720
We started with our training group and now it's time to completed and finally start with the training

3
00:00:10.720 --> 00:00:17.800
process if you remember the last thing that we've done in the previous video is checking if the action

4
00:00:17.800 --> 00:00:18.970
was one.

5
00:00:18.970 --> 00:00:25.040
In other words we checked for action was buying the stock and not selling one.

6
00:00:25.060 --> 00:00:31.960
The next thing to check is whether the action is equal to two or if we were selling the stock as we

7
00:00:31.960 --> 00:00:36.760
said we cannot sell anything if we haven't previously bought it.

8
00:00:36.790 --> 00:00:42.820
In other words we can't sell a stock if it's not already in our inventory.

9
00:00:42.950 --> 00:00:50.540
We need to make sure that we already have something in our inventory to handle this situation.

10
00:00:50.540 --> 00:00:58.700
We are going to introduce additional condition so let's say if land of our trader dot inventory is bigger

11
00:00:58.700 --> 00:01:04.590
than 0 and in other words we have some stocks bought already.

12
00:01:05.440 --> 00:01:12.370
So if both of these conditions are true we are going to track what is the buy price will say buy price

13
00:01:12.430 --> 00:01:19.020
is equal to and we will use our trader dot inventory to pop of zero.

14
00:01:19.270 --> 00:01:25.120
And by this we are selling stocks in order and that is additional strategy that you can use to improve

15
00:01:25.120 --> 00:01:27.100
this algorithm.

16
00:01:27.100 --> 00:01:33.280
Now we are going to calculate the reward by using max between date of T which is the current data of

17
00:01:33.280 --> 00:01:37.610
our stock minus by price and zero.

18
00:01:37.630 --> 00:01:45.760
This means if data of T is less than by price we lost the money and the reward here is zero by the total

19
00:01:45.760 --> 00:01:54.600
profit is increased right here with the difference between the current price and the buy price the whole

20
00:01:54.600 --> 00:02:01.350
user experience can be improved by using simple print statement here such as the agent has bought or

21
00:02:01.350 --> 00:02:08.670
sold the stock for that and that price and the week earned or lost that and that amount of money.

22
00:02:08.710 --> 00:02:14.830
The nice thing to do is to check whether or not this is the last sample in our dataset and that's the

23
00:02:14.830 --> 00:02:15.700
case.

24
00:02:15.700 --> 00:02:24.030
We are done so we don't have any more steps to perform in the current episode so we can say if T is

25
00:02:24.030 --> 00:02:27.350
equal to data samples minus one.

26
00:02:27.420 --> 00:02:30.590
If that is the case said done too true.

27
00:02:30.730 --> 00:02:36.470
Otherwise said done to false and that's pretty much it.

28
00:02:36.500 --> 00:02:37.230
We checked it.

29
00:02:37.250 --> 00:02:42.250
We have more samples and if that was the case we just proceed further.

30
00:02:42.410 --> 00:02:49.640
Until the end of the episode or if we already pass the number of data samples we just don't have any

31
00:02:49.640 --> 00:02:51.520
more days in the data set.

32
00:02:51.620 --> 00:02:54.480
We'll stop here and finish our episode.

33
00:02:54.680 --> 00:03:02.500
The next thing to do is to append all the data to our trader memory or experience replay buffer.

34
00:03:02.780 --> 00:03:04.010
To do this right.

35
00:03:04.010 --> 00:03:11.260
Trader dot memory and here dot the band called this function since we are using just simple type lists

36
00:03:12.050 --> 00:03:14.910
and now we have to provide a lot of things.

37
00:03:14.930 --> 00:03:19.460
So let's say state action a reward.

38
00:03:19.460 --> 00:03:23.900
And then we have to specify next state that we calculated.

39
00:03:24.380 --> 00:03:27.020
And lastly we have this provide done.

40
00:03:27.110 --> 00:03:34.600
This is all what we have to provide to our memory then we are going to change the state to our next

41
00:03:34.600 --> 00:03:41.720
state so we can iterate through the whole thing and we are pretty much done the next step is to print

42
00:03:41.720 --> 00:03:42.850
out the total profit.

43
00:03:42.870 --> 00:03:50.630
If done or if done is equal to true I'm going to stop the video right here and to write a few print

44
00:03:50.630 --> 00:03:56.540
statements so we don't have to write them from scratch so I'll skip to the part of the video when I'm

45
00:03:56.590 --> 00:03:57.950
not.

46
00:03:58.140 --> 00:04:00.010
And welcome back guys.

47
00:04:00.030 --> 00:04:06.390
As you can see here in the meantime I only added a few printing statements so that we can continue with

48
00:04:06.390 --> 00:04:07.830
our implementation.

49
00:04:07.890 --> 00:04:10.690
But let me walk you through them here.

50
00:04:10.710 --> 00:04:17.760
If the action is one I just edit a simple print statement that says a trader board then stock price

51
00:04:17.760 --> 00:04:26.280
format function that is going to format our price I added a similar statement to our case when the action

52
00:04:26.280 --> 00:04:27.680
is equal to true.

53
00:04:27.690 --> 00:04:35.190
So here we are seeing the trader sold the stock for that and that price and how much money did we make

54
00:04:35.250 --> 00:04:36.300
or lose.

55
00:04:36.510 --> 00:04:39.070
And at the end if done is equal to true.

56
00:04:39.150 --> 00:04:43.590
Where does printing the total profit before we start with our training process.

57
00:04:43.590 --> 00:04:50.640
There are two more things to do and that is to check if we have more information in our memory of our

58
00:04:50.640 --> 00:04:52.130
batch size.

59
00:04:52.200 --> 00:04:59.070
If that is the case we are going to call our trader daughter back train and the only argument we need

60
00:04:59.070 --> 00:05:02.340
to provide is batch size and that's it.

61
00:05:03.340 --> 00:05:10.360
Now in the main episode loop we are going to check if the number of episodes in a total division of

62
00:05:10.360 --> 00:05:12.150
10 is equal to zero.

63
00:05:12.310 --> 00:05:17.570
And if that is the case we are going to save the model to save the model.

64
00:05:17.570 --> 00:05:23.580
Let us specify trader dot model dot safe and inside this save function.

65
00:05:23.600 --> 00:05:27.690
The only argument that we need to provide is the model name.

66
00:05:28.010 --> 00:05:29.860
Let's say a trader.

67
00:05:30.020 --> 00:05:31.480
And here curly brackets.

68
00:05:31.490 --> 00:05:39.000
So we can populate with episode index then dot age 5 which is extension of our weights.

69
00:05:39.540 --> 00:05:43.300
And since we need to populate these curly brackets right.

70
00:05:43.320 --> 00:05:44.510
Dot format.

71
00:05:44.700 --> 00:05:51.790
And in that provide episode and it's all what we have to do and we are totally done with our implementation

72
00:05:51.790 --> 00:05:53.610
for this section.

73
00:05:53.650 --> 00:05:55.770
I know it was a lot of taking.

74
00:05:55.960 --> 00:05:58.480
Try to go for the code a few more times.

75
00:05:58.570 --> 00:06:01.280
It is a very straightforward but a bit longer.

76
00:06:01.960 --> 00:06:06.100
Let's execute the cell and start the training process.

77
00:06:06.140 --> 00:06:07.400
Are you ready.

78
00:06:07.400 --> 00:06:14.150
And as you can see our bot already started with our buying and selling stocks already making some profit.

79
00:06:14.180 --> 00:06:15.120
It is not a law.

80
00:06:15.160 --> 00:06:21.890
It's about free dollars profit per action which is a lot in the long run it is going to train for a

81
00:06:21.890 --> 00:06:22.780
long time.

82
00:06:22.790 --> 00:06:27.130
Also don't expect this trade report to be the perfect one.

83
00:06:27.200 --> 00:06:28.720
It is going to be a decent.

84
00:06:28.880 --> 00:06:35.420
You can make money with it but I wouldn't suggest using it with your own money just as a disclaimer

85
00:06:35.510 --> 00:06:42.140
if you go with this bot and use it with your own money you're doing that on your own risk.

86
00:06:42.140 --> 00:06:49.100
I don't use this algorithm for my trainings and if I were you I would discuss a few additional strategies

87
00:06:49.100 --> 00:06:52.990
to add to this model to be more robust for the market.

88
00:06:53.030 --> 00:06:58.390
For example you can improve the model by using some strategies to follow the trend.

89
00:06:58.400 --> 00:07:04.780
Even though the model will gather trend but you can do that manually as well maybe improve this to use

90
00:07:04.810 --> 00:07:08.090
less time instead of symbol dense layers.

91
00:07:08.090 --> 00:07:14.930
And maybe you can even use sentiment analysis of Twitter tweets to get more information for the model

92
00:07:16.010 --> 00:07:22.850
if you want you can keep the training process as long as you want it is going to take a lot of time

93
00:07:22.880 --> 00:07:25.840
to train and that's it for now.

94
00:07:26.060 --> 00:07:27.340
We are done with our board.

95
00:07:27.380 --> 00:07:33.920
It is going to be trained and you can test it later on if you have any questions or comments as always.

96
00:07:33.920 --> 00:07:36.350
Please post them in the comments section.

97
00:07:36.530 --> 00:07:38.540
Otherwise I assume the next tutorial.
