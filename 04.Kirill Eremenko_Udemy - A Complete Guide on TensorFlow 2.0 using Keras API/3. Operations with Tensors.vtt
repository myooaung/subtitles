WEBVTT
1
00:00:00.300 --> 00:00:00.770
Hello.

2
00:00:00.780 --> 00:00:02.310
Welcome to the city to Tokyo.

3
00:00:02.310 --> 00:00:10.140
Now we're about to study the different operations that we can have with sensors intensive flow 2.0.

4
00:00:10.140 --> 00:00:10.410
All right.

5
00:00:10.410 --> 00:00:16.440
So before we do any operations let's make a tensor so to do this we can either use the constant function

6
00:00:16.440 --> 00:00:21.090
to make constant tensor which therefore won't be modified.

7
00:00:21.090 --> 00:00:27.120
However we can still put it in an operation or you know you can create a tensor flow variable which

8
00:00:27.120 --> 00:00:28.580
therefore can be modified.

9
00:00:28.590 --> 00:00:33.820
But anyway with the future operations that we're about to do we won't modify it.

10
00:00:33.870 --> 00:00:41.850
So that's why here I created a constant which is a simple 2D tensor of two rows and two columns where

11
00:00:41.850 --> 00:00:44.570
the following cells one two three four right.

12
00:00:44.580 --> 00:00:46.220
One two three four.

13
00:00:46.320 --> 00:00:52.950
And we're going to use this tensor to show the different operations we can do intense flow 2.0 starting

14
00:00:52.950 --> 00:00:58.100
with the addition a simple addition between a scalar and a tensor.

15
00:00:58.140 --> 00:01:01.750
So as you can see here I'm taking my tensor One two three four.

16
00:01:01.950 --> 00:01:07.320
And I'm just adding it plus two to each of the cells inside the tensor.

17
00:01:07.320 --> 00:01:14.620
So you know I don't have to make another 2D tensor with four twos in each of the different cells here.

18
00:01:14.670 --> 00:01:21.780
I can just directly at two and tensor float upon I will understand that we are adding two to each of

19
00:01:21.780 --> 00:01:24.030
the values inside our tensor.

20
00:01:24.060 --> 00:01:31.880
Indeed when we do this and when we get the output well tensor plus two becomes three four five and six.

21
00:01:31.890 --> 00:01:32.350
All right.

22
00:01:32.370 --> 00:01:34.660
So a very simple operation.

23
00:01:34.710 --> 00:01:38.950
Next one the multiplication this time between scalar and a tensor.

24
00:01:38.970 --> 00:01:45.150
So that's exactly the same you take your tensor and you multiply by this calorie you want fight here

25
00:01:45.480 --> 00:01:51.780
and you don't have to multiply it by a the tensor actually you will see later on we include that in

26
00:01:51.780 --> 00:01:56.730
this notebook that we can also do that that product between two tenses and therefore that's when you

27
00:01:57.090 --> 00:01:58.580
multiply two tenses together.

28
00:01:58.590 --> 00:02:04.230
But here with the scholar and a you just need to add your scholar here and you will get indeed five

29
00:02:04.380 --> 00:02:06.270
10 15 and 20.

30
00:02:06.270 --> 00:02:09.330
All right so really really simple but you have to know it.

31
00:02:10.080 --> 00:02:19.140
Then I also added some operations with NUM pi functions that you can use on tensor flow tenses and these

32
00:02:19.140 --> 00:02:25.620
number by functions include for example the square you know taking the square of each element of a tensor.

33
00:02:25.710 --> 00:02:28.150
And that's exactly what we're starting with here.

34
00:02:28.200 --> 00:02:33.750
We are getting the squares of all the numbers inattentive fluid sensor object and to do this well indeed

35
00:02:33.760 --> 00:02:41.550
we used the square function Bynum by to which we input only the tensor you know of which we want to

36
00:02:41.880 --> 00:02:43.810
take the squares of the cells.

37
00:02:43.980 --> 00:02:49.620
And indeed by doing that well we get the following output a new tensor with the following cell 1 which

38
00:02:49.620 --> 00:02:57.810
is 1 squared 4 which is 2 squared 9 which is 3 squared and 16 which is 4 squared.

39
00:02:57.810 --> 00:03:03.720
All right so once again very simple you have to know that you can use directly the NUM by functions

40
00:03:04.080 --> 00:03:10.380
on a tensor float tensor and you don't have to do everything with sense of flow and I give you another

41
00:03:10.380 --> 00:03:15.840
example with the square root you know this time your computing the square root of all the numbers in

42
00:03:15.840 --> 00:03:18.720
your tensor flow tensor object and indeed.

43
00:03:18.720 --> 00:03:23.820
Well that's exactly the same as before but this time you're going to use the Eskew Aarti function by

44
00:03:23.820 --> 00:03:28.740
name by which indeed we'll compute all the square root of the cells in your tensor.

45
00:03:28.830 --> 00:03:29.490
And so indeed.

46
00:03:29.490 --> 00:03:32.160
Well here we get the square root of 1.

47
00:03:32.190 --> 00:03:33.790
Here we get the square root of 2.

48
00:03:33.840 --> 00:03:35.210
Here we get a square root of three.

49
00:03:35.400 --> 00:03:37.920
And here we get the square root of 4 2.

50
00:03:38.790 --> 00:03:39.270
All right.

51
00:03:39.270 --> 00:03:45.690
So now you know it you know and you can also take some other name by functions like the exponential

52
00:03:45.900 --> 00:03:50.880
or the like Gary them whatever you want but wherever the function you choose it's exactly the same just

53
00:03:51.150 --> 00:03:56.610
known by that the function of known by which takes us in put your sense of tensor.

54
00:03:56.720 --> 00:03:58.230
All right then moving on.

55
00:03:59.130 --> 00:04:06.320
Well as we said we can also take the dot product between two sensors but be careful to do this.

56
00:04:06.360 --> 00:04:09.490
You don't do tensor times sensor to 0.

57
00:04:09.660 --> 00:04:14.880
Remember tensor tour is a previous tensor we had before actually let's have a look at it again just

58
00:04:14.880 --> 00:04:17.700
to see where it was exactly.

59
00:04:17.700 --> 00:04:21.110
Here it is tenser too.

60
00:04:21.100 --> 00:04:25.720
Oh that is this 123 for 32 51.

61
00:04:25.960 --> 00:04:34.130
And so we are now computing the dot product between our new tensor here one two three four and distance

62
00:04:34.240 --> 00:04:40.800
to 0 and so we get indeed 87 106 197 and 216.

63
00:04:40.800 --> 00:04:43.810
So what are the computations that led to these results.

64
00:04:43.810 --> 00:04:48.290
This is the matrix product you know that to for example eighty seven.

65
00:04:48.360 --> 00:04:55.970
So on our life we have one two three four on our right tend to flow to 0 is 23 for thirty to fifty one

66
00:04:56.350 --> 00:05:03.170
and the matrix product for the first cell on the upper left is one times twenty three plus two time

67
00:05:03.170 --> 00:05:10.090
thirty two two time thirty two is sixty four and sixty four plus twenty three is eighty seven.

68
00:05:10.210 --> 00:05:14.820
And so we get in you know the first cell eighty seven right.

69
00:05:14.830 --> 00:05:19.990
So that is the matrix spirit maybe you want to check that again on line but you know for example if

70
00:05:19.990 --> 00:05:25.900
you want to do the matrix probe between this and this well on the upper left we do three times five

71
00:05:25.930 --> 00:05:33.430
plus four times 15 on the upper right we do three times ten plus four times twenty then on the lower

72
00:05:33.430 --> 00:05:42.340
left we do five times five plus six times 15 and on the lower right we do five times ten plus six times

73
00:05:42.340 --> 00:05:43.030
20 right.

74
00:05:43.110 --> 00:05:50.110
So the very classic matrix project and so we get this and well the purpose of showing this was not to

75
00:05:50.470 --> 00:05:56.950
do a little linear algebra refresher but to show you how to do the matrix project with that function

76
00:05:57.050 --> 00:06:01.550
by none by which takes as input your two tensor flow sensors.

77
00:06:01.610 --> 00:06:02.130
All right.

78
00:06:02.170 --> 00:06:07.360
And then to finish I also added one nice thing which could be useful for you.

79
00:06:07.360 --> 00:06:10.180
These are the strings intensive flow 2.0.

80
00:06:10.330 --> 00:06:16.700
So we'll see that in the next material and then we'll be ready to move on to some more exciting applications

81
00:06:16.700 --> 00:06:20.380
of tend to flow 2.0 which are of course the neural networks.
