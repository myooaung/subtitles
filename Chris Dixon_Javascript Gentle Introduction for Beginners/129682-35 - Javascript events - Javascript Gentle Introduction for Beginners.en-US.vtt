WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:02.550
Welcome back. In this video,

00:00:02.550 --> 00:00:05.640
we're going to take a look at JavaScript events.

00:00:05.640 --> 00:00:09.040
Let's start with our own folder.

00:00:09.340 --> 00:00:12.170
Inside the dom section,

00:00:12.170 --> 00:00:16.170
let's create a new folder, which is number 4.

00:00:16.170 --> 00:00:21.690
I'm going to call this events, and then let's open.

00:00:21.690 --> 00:00:24.280
Let's open inside of Brackets.

00:00:30.860 --> 00:00:38.075
Then add a title, JavaScript events.

00:00:38.075 --> 00:00:41.400
Then we don't need the style tags for this one.

00:00:41.620 --> 00:00:46.050
Now we can also clear HTML,

00:00:47.920 --> 00:00:51.210
and also the script tags.

00:00:52.000 --> 00:00:59.335
There we go. JavaScript is heavily used in webpages to add interactivity,

00:00:59.335 --> 00:01:02.095
and we need a way for JavaScript to detect

00:01:02.095 --> 00:01:05.620
a user's actions in order to know how to react.

00:01:05.620 --> 00:01:09.040
This is where events or event handling comes in.

00:01:09.040 --> 00:01:12.835
You can also think of an event as a trigger.

00:01:12.835 --> 00:01:16.435
As an example, the browser can wait for an event to happen,

00:01:16.435 --> 00:01:19.450
such as a user clicking on a button,

00:01:19.450 --> 00:01:21.939
which you've looked at in previous videos,

00:01:21.939 --> 00:01:24.795
where the button click is triggered a function.

00:01:24.795 --> 00:01:29.600
So we briefly looked at the onclick event handler to trigger a function.

00:01:29.600 --> 00:01:34.600
JavaScript can also react to things such as when a page is finished loading,

00:01:34.600 --> 00:01:36.965
when keys are pressed on the keyboard,

00:01:36.965 --> 00:01:39.200
when a mouse hovers over an element,

00:01:39.200 --> 00:01:41.945
or even when you submit a form.

00:01:41.945 --> 00:01:44.990
Let's create a input to work with,

00:01:44.990 --> 00:01:47.695
the input type of button,

00:01:47.695 --> 00:01:51.480
and then let's give this an ID of button,

00:01:51.480 --> 00:01:54.420
and then let's add some bootstrap classes.

00:01:54.420 --> 00:01:57.495
We can change these using JavaScript events.

00:01:57.495 --> 00:02:02.900
Add a class, the bootstrap class of btn,

00:02:02.900 --> 00:02:07.290
and then btn success.

00:02:07.340 --> 00:02:11.910
Let's add a value to this button of hello,

00:02:11.910 --> 00:02:15.275
and then as we looked up previously,

00:02:15.275 --> 00:02:19.340
we can add the onclick event to trigger a function.

00:02:19.340 --> 00:02:23.040
I'm going to cite function name of change,

00:02:23.090 --> 00:02:25.440
and then down to the script tags,

00:02:25.440 --> 00:02:28.325
we can create this function inside of there,

00:02:28.325 --> 00:02:31.830
so the function of change.

00:02:34.520 --> 00:02:38.195
This should look pretty familiar now because we've used it a few times.

00:02:38.195 --> 00:02:42.390
So we want to do a document.getElementById.

00:02:43.630 --> 00:02:48.180
Now I'm going to grab the ID of button,

00:02:50.900 --> 00:02:54.350
and then once this button is pressed,

00:02:54.350 --> 00:02:58.105
I just want this to trigger a new class name.

00:02:58.105 --> 00:03:05.950
This can be equal to bootstrap classes again, or btn, btn-danger.

00:03:06.620 --> 00:03:10.275
We'll begin with the button success.

00:03:10.275 --> 00:03:14.380
Then once clicked, this will change to button danger.

00:03:14.380 --> 00:03:17.975
Let's open this up and check this is working okay.

00:03:17.975 --> 00:03:21.470
That's a button success which is the green background,

00:03:21.470 --> 00:03:23.090
and then once clicked,

00:03:23.090 --> 00:03:27.650
we get the class name of button or btn-danger added,

00:03:27.650 --> 00:03:29.860
which is the red background.

00:03:29.860 --> 00:03:32.025
That's the onclick event.

00:03:32.025 --> 00:03:34.940
We can also do a similar kind of thing when we hover

00:03:34.940 --> 00:03:38.225
over the button with the mouse rather than clicking on it.

00:03:38.225 --> 00:03:45.070
To do this, we just change onclick to be onmouseover.

00:03:46.220 --> 00:03:48.755
Now when we hover over the button,

00:03:48.755 --> 00:03:53.060
we should get the class change, just like that.

00:03:53.060 --> 00:03:56.300
So that occurs once the mouse goes over the button.

00:03:56.300 --> 00:04:00.670
If you want it to occur when the cursor leaves the button,

00:04:00.670 --> 00:04:06.015
we can change onmouseover to onmouseout,

00:04:06.015 --> 00:04:08.310
and there's a sole difference.

00:04:08.310 --> 00:04:09.815
Once we go over the button,

00:04:09.815 --> 00:04:11.255
the class doesn't change,

00:04:11.255 --> 00:04:13.835
but as soon as the mouse leaves the button,

00:04:13.835 --> 00:04:17.450
we then get the change to the red background.

00:04:17.450 --> 00:04:19.700
All of these events are going on behind

00:04:19.700 --> 00:04:23.195
the scenes on many webpages that you visit everyday.

00:04:23.195 --> 00:04:28.325
The next useful event I want to look at is onkeyup and onkeydown,

00:04:28.325 --> 00:04:30.695
and that's pretty much what it sounds like every time

00:04:30.695 --> 00:04:33.710
a button on the keyboard is pressed,

00:04:33.710 --> 00:04:35.370
or every time it's released.

00:04:35.370 --> 00:04:37.605
This can trigger an event.

00:04:37.605 --> 00:04:41.495
Let's create a example form to see this in action.

00:04:41.495 --> 00:04:44.760
Let's just comment out the input,

00:04:45.300 --> 00:04:48.530
and let's create a form.

00:04:49.970 --> 00:04:53.505
Then the input type of text,

00:04:53.505 --> 00:05:01.060
a ID to grab a JavaScript of input field,

00:05:01.060 --> 00:05:04.565
and then just like we've used with the onclick events,

00:05:04.565 --> 00:05:07.590
we can change this to onkeyup,

00:05:08.050 --> 00:05:10.820
and this can trigger a function too.

00:05:10.820 --> 00:05:14.280
We'll call the function keyPressed.

00:05:14.810 --> 00:05:19.760
So with this example, I'm going to create a simple function which is going

00:05:19.760 --> 00:05:24.310
to be triggered every time a keyboard button is pressed.

00:05:24.310 --> 00:05:28.100
I'm going to create a empty level 2 heading,

00:05:28.100 --> 00:05:31.470
and I want the function to display the text.

00:05:31.470 --> 00:05:34.370
So every time a button is pressed inside this form,

00:05:34.370 --> 00:05:40.685
I want the level 2 heading to contain the value of what was entered inside the inputs.

00:05:40.685 --> 00:05:43.535
So leave the contents empty for now,

00:05:43.535 --> 00:05:47.520
and let's add an ID of display.

00:05:48.980 --> 00:05:54.310
Then let's create our function of keyPressed.

00:05:59.780 --> 00:06:07.150
First of all, I want to grab the display with a document.getElementByID,

00:06:07.490 --> 00:06:10.860
which is the display ID.

00:06:10.860 --> 00:06:15.210
Then we want to set the inner HTML of

00:06:15.210 --> 00:06:21.080
the display to be equal to the value of this inputField.

00:06:21.080 --> 00:06:23.910
So I need inputField.value.

00:06:27.590 --> 00:06:31.785
So we'll go up in the empty level 2 heading,

00:06:31.785 --> 00:06:35.510
and then we set in the contents of the inner HTML to be equal

00:06:35.510 --> 00:06:40.225
to whatever the users types inside these input fields.

00:06:40.225 --> 00:06:45.155
This is going to be triggered every time a keyboard button is pressed.

00:06:45.155 --> 00:06:47.980
Let's take a look at this in action.

00:06:47.980 --> 00:06:51.090
There's the form in the top corner.

00:06:51.090 --> 00:06:55.230
Every time you press a key, this triggers a function,

00:06:55.230 --> 00:07:00.335
and then we'll get the contents populate inside the level 2 heading.

00:07:00.335 --> 00:07:05.110
So this function is triggered every time a key is released with onkeyup.

00:07:05.110 --> 00:07:07.975
We can also have onkeydown,

00:07:07.975 --> 00:07:12.110
and this is triggered as soon as the button is pressed down.

00:07:16.350 --> 00:07:19.030
So then two events are fairly similar,

00:07:19.030 --> 00:07:21.595
but just with a small subtle difference.

00:07:21.595 --> 00:07:24.985
Then next, I want to look at the onchange event.

00:07:24.985 --> 00:07:28.520
This is triggered when a change is detected.

00:07:28.520 --> 00:07:31.035
We can use the same form,

00:07:31.035 --> 00:07:33.390
but this time instead of onkeydown,

00:07:33.390 --> 00:07:36.990
we want to change it to onchange.

00:07:36.990 --> 00:07:39.094
Then let's create a function.

00:07:39.094 --> 00:07:41.585
So every time there is a change detected,

00:07:41.585 --> 00:07:44.430
I want to increase the font.

00:07:44.560 --> 00:07:49.560
Let's create this function down at the bottom.

00:07:53.440 --> 00:07:55.700
So when a change is detected,

00:07:55.700 --> 00:07:57.935
we want to grab the input field,

00:07:57.935 --> 00:07:59.915
which is this section,

00:07:59.915 --> 00:08:02.555
and then accept the CSS to be a little bit bigger.

00:08:02.555 --> 00:08:08.200
So document.getElementByID.

00:08:08.200 --> 00:08:11.530
Again, let's drop the inputField,

00:08:15.040 --> 00:08:21.270
and then.style.fontSize.

00:08:21.320 --> 00:08:23.955
Then so we can see it's working,

00:08:23.955 --> 00:08:26.530
let's set the font size to be a lot bigger,

00:08:26.530 --> 00:08:30.570
so 50 pixels, and then let's save that.

00:08:30.570 --> 00:08:34.290
Actually it's supposed to be fontSize.

00:08:34.290 --> 00:08:37.320
Save that, and then head over to the browser.

00:08:37.320 --> 00:08:41.145
Let's type something inside there.

00:08:41.145 --> 00:08:43.515
As soon as we have a click off it,

00:08:43.515 --> 00:08:45.105
I'll press a return key,

00:08:45.105 --> 00:08:47.205
and it should trigger the function.

00:08:47.205 --> 00:08:52.540
There we go. Now we've got the text changed to 50 pixels.

00:08:52.550 --> 00:08:56.580
So that's how the onchange event handler works.

00:08:56.580 --> 00:09:01.365
The last event handler I'm going to show you in this video is using onsubmit,

00:09:01.365 --> 00:09:04.445
which is triggered when a form is submitted.

00:09:04.445 --> 00:09:10.130
So let's create a example form or we can use the one from just before.

00:09:10.130 --> 00:09:16.180
For this to work, we need to put it inside the form elements, so onsubmit.

00:09:16.180 --> 00:09:19.950
Then again, we need to put a function to run,

00:09:19.950 --> 00:09:24.260
so runValidation, and then we're going to add

00:09:24.260 --> 00:09:30.100
a script inside this function to do some form validation when this is submitted.

00:09:30.100 --> 00:09:36.750
For this to work, we need to create a input which is the type of submit,

00:09:37.540 --> 00:09:42.480
and we get a value of Submit form.

00:09:43.760 --> 00:09:47.855
Save that and then go down to the script,

00:09:47.855 --> 00:09:52.370
and then create a function which is runValidation.

00:09:52.510 --> 00:09:56.155
We can put any form validation that you want in here.

00:09:56.155 --> 00:09:57.805
So just to check it's working,

00:09:57.805 --> 00:10:02.080
I'm going to create a alert and just create some text,

00:10:02.080 --> 00:10:05.060
just our form validation,

00:10:05.060 --> 00:10:08.370
and then refresh the browser.

00:10:08.370 --> 00:10:11.015
Now when we submit the form,

00:10:11.015 --> 00:10:13.915
this triggers the onsubmit function

00:10:13.915 --> 00:10:17.460
and there's our text to open before of form validation.

00:10:17.460 --> 00:10:20.590
That's really useful for doing some checks inside

00:10:20.590 --> 00:10:24.699
the browser to check that the user has filled in all the fields,

00:10:24.699 --> 00:10:26.955
or typed things out correctly.

00:10:26.955 --> 00:10:30.500
So that's the end of this video on JavaScript events.

00:10:30.500 --> 00:10:34.130
I'll see you in the next video where we'll take a look at a mini challenge,

00:10:34.130 --> 00:10:40.500
which involves reacting to onclick events to make a name animator. I'll see you there.
