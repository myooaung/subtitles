WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.860 --> 00:00:05.000
In the last video, we took a look at while loops.

00:00:05.000 --> 00:00:08.660
This video is all about a slight variant of the while loop,

00:00:08.660 --> 00:00:11.860
and this is called a do while loop.

00:00:11.860 --> 00:00:13.890
It works in a similar way,

00:00:13.890 --> 00:00:16.275
but with just a few subtle differences.

00:00:16.275 --> 00:00:18.060
Let's create a new folder.

00:00:18.060 --> 00:00:21.915
We duplicate while loops.

00:00:21.915 --> 00:00:26.010
This is number eight and it's

00:00:26.010 --> 00:00:33.480
called do while loops.

00:00:33.480 --> 00:00:40.110
Then open up any text editor and then create a new title.

00:00:40.110 --> 00:00:44.680
So do while loops.

00:00:45.110 --> 00:00:47.220
Just leave this code in for now,

00:00:47.220 --> 00:00:49.340
we can reuse some of these parts.

00:00:49.340 --> 00:00:55.340
Whereas, the while loop from the last video will always run while this condition is true,

00:00:55.340 --> 00:00:58.970
a do-while loop will always run at least once

00:00:58.970 --> 00:01:03.640
first and then check if the condition is true before it carries on.

00:01:03.640 --> 00:01:09.375
We have the do keyword and then inside the curly braces.

00:01:09.375 --> 00:01:12.570
The code inside here is always,

00:01:12.570 --> 00:01:14.350
run once at the start,

00:01:14.350 --> 00:01:17.285
before we check if any conditions are true.

00:01:17.285 --> 00:01:23.980
Do with this code and then we check the condition using the while loop.

00:01:23.980 --> 00:01:25.980
Then if this condition is true,

00:01:25.980 --> 00:01:29.280
the code will continue to run and if it's false this code

00:01:29.280 --> 00:01:33.035
will only be run once and it will stop after that.

00:01:33.035 --> 00:01:36.425
Let's delete the code from the last video.

00:01:36.425 --> 00:01:40.090
We're going to create an example.

00:01:40.090 --> 00:01:42.885
We'll start with a variable,

00:01:42.885 --> 00:01:46.205
so we'll use the variable name of i again.

00:01:46.205 --> 00:01:49.440
Variable i is equal to one.

00:01:50.060 --> 00:01:52.980
Then let's do a document.

00:01:52.980 --> 00:01:55.320
Don't write inside there,

00:01:55.320 --> 00:01:58.185
we'll just print the value of i.

00:01:58.185 --> 00:02:01.750
Again the break tags.

00:02:02.540 --> 00:02:04.590
Then just like the while loop,

00:02:04.590 --> 00:02:07.125
we'll increment by one.

00:02:07.125 --> 00:02:09.380
Then inside the while section,

00:02:09.380 --> 00:02:11.855
inside the brackets we'll put the condition.

00:02:11.855 --> 00:02:14.590
While i is less than 10,

00:02:14.590 --> 00:02:20.410
we'll continue to loop through and print the value of i. Let's save that.

00:02:20.410 --> 00:02:22.270
This condition is true,

00:02:22.270 --> 00:02:26.850
so this will keep printing the values up to nine,

00:02:27.170 --> 00:02:30.660
which you get on the left-hand side there.

00:02:30.660 --> 00:02:35.930
Let's go back, if the condition is actually greater than 10,

00:02:35.930 --> 00:02:39.150
we should get the value of i printed, which is one,

00:02:39.150 --> 00:02:43.890
but it won't return a second value because the condition is false.

00:02:43.890 --> 00:02:46.815
Now let's just get one printed to the browser,

00:02:46.815 --> 00:02:51.680
because a do while loop always runs once. That's all there is to it.

00:02:51.680 --> 00:02:54.410
A do-while loop is quite simple to

00:02:54.410 --> 00:02:58.465
understand if you already get the concept of while loops.

00:02:58.465 --> 00:03:02.675
Thank you. In the next video we'll move on to another type of loops,

00:03:02.675 --> 00:03:04.490
which is the for loop.

00:03:04.490 --> 00:03:06.960
Thank you and will see you there.
