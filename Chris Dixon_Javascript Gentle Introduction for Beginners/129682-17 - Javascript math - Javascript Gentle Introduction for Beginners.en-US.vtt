WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.950 --> 00:00:06.030
Welcome back to this brand new section called JavaScript Math and dates.

00:00:06.030 --> 00:00:08.955
Hopefully, now we're starting to get a better understanding of

00:00:08.955 --> 00:00:12.435
what JavaScript is and what JavaScript can do.

00:00:12.435 --> 00:00:14.930
Things should be looking a lot more familiar now to you.

00:00:14.930 --> 00:00:18.225
We're going to get started by looking at JavaScript Math.

00:00:18.225 --> 00:00:20.760
JavaScript Math allow us to perform

00:00:20.760 --> 00:00:27.300
complex or simple mathematical tasks such as creating random numbers,

00:00:27.300 --> 00:00:30.990
finding the lowest or highest value in an array,

00:00:30.990 --> 00:00:35.940
for example, rounding numbers up and down, amongst others.

00:00:35.940 --> 00:00:39.060
Then, we'll take a look at JavaScript date.

00:00:39.060 --> 00:00:43.185
The JavaScript date object allows us to work with the current date.

00:00:43.185 --> 00:00:45.320
We can do that in a few different ways.

00:00:45.320 --> 00:00:48.790
We'll take a look at that as we go through this section.

00:00:48.790 --> 00:00:52.605
Let's get started as usual in our JavaScript folder.

00:00:52.605 --> 00:01:01.650
I'm going to create a new folder inside there and call this one math and dates.

00:01:02.150 --> 00:01:05.510
Then, I'm just going to copy a folder from

00:01:05.510 --> 00:01:10.445
the previous sections and paste it in there just to get us started.

00:01:10.445 --> 00:01:14.610
I'm going to call the first one JavaScript math.

00:01:17.560 --> 00:01:21.960
Then, let's open that in your text editor.

00:01:25.480 --> 00:01:32.560
Then, as usual, change the title to JavaScript Math.

00:01:37.010 --> 00:01:41.460
Then, delete any code from previous videos.

00:01:43.160 --> 00:01:47.630
There we go. We're going to get started with pi.

00:01:47.630 --> 00:01:50.725
Hopefully, you remember from school what pi is.

00:01:50.725 --> 00:01:53.835
If you don't, pi is 3.14.

00:01:53.835 --> 00:01:58.650
We can find that in JavaScript by using the Math object,

00:01:58.650 --> 00:02:02.725
and then dot, and then PI.

00:02:02.725 --> 00:02:07.785
We can display Math.PI in any of the usual methods.

00:02:07.785 --> 00:02:11.175
I'm going to create an alert and then put the

00:02:11.175 --> 00:02:16.710
math.PI inside the brackets with a semicolon at the end.

00:02:16.710 --> 00:02:20.460
We should make this a little bit bigger so you can see it.

00:02:21.190 --> 00:02:26.275
Then, open up the browser and let's see how that's looking.

00:02:26.275 --> 00:02:30.180
There's our alert. The value of pi is

00:02:30.180 --> 00:02:36.850
3.141 and many more numbers after that we don't need to worry about for this video.

00:02:37.130 --> 00:02:40.310
If you're happy with that, just comment that out.

00:02:40.310 --> 00:02:46.355
Next, we're going to take a look at how to generate a random number in JavaScript.

00:02:46.355 --> 00:02:50.725
The way to do that is with the Math object once again,

00:02:50.725 --> 00:02:54.870
but this time use.random.

00:02:54.870 --> 00:02:58.400
But this time we need to put the brackets in there.

00:02:58.400 --> 00:03:01.700
Again, we can just alert that to the browser.

00:03:01.700 --> 00:03:08.970
Alert and then surround the Math.random inside the brackets with the semicolon.

00:03:08.990 --> 00:03:13.000
Then, let's take a look at what is displayed.

00:03:13.000 --> 00:03:17.085
Okay. Alert at the browser is 0.85.

00:03:17.085 --> 00:03:20.480
You may be wondering why this is a random number.

00:03:20.480 --> 00:03:27.640
Well, in JavaScript, a random number is generated between zero and one.

00:03:27.640 --> 00:03:31.250
Zero is actually included in this random number,

00:03:31.250 --> 00:03:34.160
but one isn't, so be careful of that.

00:03:34.160 --> 00:03:36.515
If we want to generate a random number,

00:03:36.515 --> 00:03:38.965
for example, between one and 10,

00:03:38.965 --> 00:03:41.275
we still need to do it in the same way,

00:03:41.275 --> 00:03:44.150
but then we just need to multiply the result,

00:03:44.150 --> 00:03:46.650
for example, by 10.

00:03:48.730 --> 00:03:52.800
So far in the two examples which we've just shown you,

00:03:52.800 --> 00:03:58.305
the numbers have a lot of decimal places such as this one there.

00:03:58.305 --> 00:04:01.755
But sometimes we want to round to the nearest whole number.

00:04:01.755 --> 00:04:06.245
With JavaScript, we can either round up or we can round down.

00:04:06.245 --> 00:04:08.870
The way to round up.

00:04:08.870 --> 00:04:11.280
We create an alert to start with.

00:04:11.280 --> 00:04:14.505
Then, inside the alert brackets,

00:04:14.505 --> 00:04:20.505
we need to use Math.ceil,

00:04:20.505 --> 00:04:22.725
which is short for ceiling.

00:04:22.725 --> 00:04:25.685
Then, inside the brackets after that,

00:04:25.685 --> 00:04:30.080
we need to put the number which we want to round up.

00:04:30.080 --> 00:04:33.815
If we created a number of 4.5,

00:04:33.815 --> 00:04:39.205
this should round this number up to the nearest whole number, which is five.

00:04:39.205 --> 00:04:44.990
Then refresh. We get the value of five in the alert box.

00:04:46.400 --> 00:04:49.480
That works with any number.

00:04:50.060 --> 00:04:52.860
We should still get five now.

00:04:52.860 --> 00:04:55.900
Rounding down is actually pretty similar.

00:04:55.900 --> 00:05:00.320
Instead of Math.ceil, we use Math.floor.

00:05:00.980 --> 00:05:05.770
Then, again, we pass in the number which we want to round down.

00:05:05.770 --> 00:05:09.160
For a number now of 7.6,

00:05:09.160 --> 00:05:14.045
we should now get the value of seven inside the alert box.

00:05:14.045 --> 00:05:17.610
Great. Again, this works with any number.

00:05:17.610 --> 00:05:20.670
It doesn't matter how high or how low the number is,

00:05:20.670 --> 00:05:24.860
you will still always round down to the nearest whole number.

00:05:25.610 --> 00:05:32.680
Let's comment that out and then continue on below that.

00:05:33.260 --> 00:05:38.675
That's a way of rounding a number up or rounding a number down.

00:05:38.675 --> 00:05:40.790
But if we just wanted to round to

00:05:40.790 --> 00:05:44.615
the nearest whole number instead of all rounding up or down,

00:05:44.615 --> 00:05:47.870
we can do that with Math.round.

00:05:47.870 --> 00:05:55.590
You create your alert box and then Math.round.

00:05:55.940 --> 00:05:59.835
Now, for example, a value of 7.2,

00:05:59.835 --> 00:06:05.820
this should be rounded to the nearest number of seven, which we get there.

00:06:05.820 --> 00:06:07.905
If it's above five,

00:06:07.905 --> 00:06:13.240
such as 7.6, that should round up to eight now.

00:06:13.850 --> 00:06:17.810
If the number that we passed in was in the middle,

00:06:17.810 --> 00:06:21.650
so it was 7.5, this value will always be rounded up.

00:06:21.650 --> 00:06:25.680
We should still get eight in the alert box.

00:06:28.910 --> 00:06:33.230
I'm just going to comment this one out and then move on

00:06:33.230 --> 00:06:36.710
to looking at minimum and maximum numbers.

00:06:36.710 --> 00:06:40.040
If we had more than one value and we wanted to

00:06:40.040 --> 00:06:44.160
check which is the lowest number or which is the highest number,

00:06:44.160 --> 00:06:49.120
we can use Math.min and Math.max.

00:06:49.310 --> 00:06:56.080
Let's alert this time Math.min.

00:06:59.030 --> 00:07:01.680
Then, inside the brackets this time,

00:07:01.680 --> 00:07:03.825
we can pass in more than one value.

00:07:03.825 --> 00:07:07.295
Let's put some numbers in there separated by commas.

00:07:07.295 --> 00:07:14.640
Eight, 15, 3, and 63.

00:07:14.640 --> 00:07:18.635
Now, we should be able to work out which is the lowest number.

00:07:18.635 --> 00:07:21.560
That's why with [inaudible] we should get the value of

00:07:21.560 --> 00:07:25.210
three inside the alert, which we do.

00:07:25.210 --> 00:07:33.170
Then, all we need to do to find the highest value is just change.min to.max,

00:07:33.170 --> 00:07:36.570
and now we should get the value of 63.

00:07:37.910 --> 00:07:42.495
There we go. Says 63 inside the alert box.

00:07:42.495 --> 00:07:46.390
There's one or two more examples to look on your cheat sheet and they

00:07:46.390 --> 00:07:50.510
all work in a similar way to the examples which we've just been through there.

00:07:50.510 --> 00:07:54.580
Now we have a better understanding of how JavaScript Math works.

00:07:54.580 --> 00:07:59.430
In the next video, let's put this into practice in a mini challenge.
