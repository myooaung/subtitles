WEBVTT
1
00:00:05.060 --> 00:00:07.040
Hello and welcome in this lecture.

2
00:00:07.040 --> 00:00:12.860
We are going to be adding a little bit more functionality to our main menu by reparenting it's to some

3
00:00:12.910 --> 00:00:15.010
C++ as you can see here in my class.

4
00:00:15.010 --> 00:00:17.830
I think my parent class is currently main menu.

5
00:00:17.960 --> 00:00:26.090
And furthermore we are going to bind properties from the C++ to actual buttons in our UI that we've

6
00:00:26.090 --> 00:00:30.030
put together here in the widget constructor.

7
00:00:30.230 --> 00:00:32.660
You either lay out each thing.

8
00:00:32.660 --> 00:00:33.260
Fantastic.

9
00:00:33.260 --> 00:00:35.760
Let's dive in and see how that is possible.

10
00:00:36.720 --> 00:00:42.720
So the next step is getting our buttons to actually have an effect in our gameworld such as hosting

11
00:00:42.750 --> 00:00:44.050
and joining.

12
00:00:44.100 --> 00:00:50.400
Now the way that we are going to do this is by creating a C++ parent class to our widget so that we

13
00:00:50.400 --> 00:00:56.820
can control all the logic behind our main menu widget in C++ which is what we'd prefer to do.

14
00:00:56.820 --> 00:00:59.060
Obviously you can do this in blue print as well.

15
00:00:59.160 --> 00:01:02.070
But the C++ is often a hard thing to figure out.

16
00:01:02.100 --> 00:01:04.160
So we're going to be covering that.

17
00:01:04.590 --> 00:01:09.860
Let's start off by creating a C++ base class for our main menu.

18
00:01:10.110 --> 00:01:18.580
Let's go to our content browser and go to add new and to the new C++ clas.

19
00:01:18.630 --> 00:01:22.110
Now you won't find the widget that we're looking for here.

20
00:01:22.110 --> 00:01:28.150
We're going to do show all classes and we're looking for the you use a widget that we've used before.

21
00:01:28.170 --> 00:01:29.350
In fact you don't prefix.

22
00:01:29.400 --> 00:01:35.330
You don't use the prefix in this class list it's just the user widget which you'll find here.

23
00:01:35.400 --> 00:01:38.850
So go ahead and select it go to next.

24
00:01:38.910 --> 00:01:42.040
And now I do want this to be.

25
00:01:42.780 --> 00:01:49.560
In a separate subsystem a separate folder so we can easily find the classes that are related and strip

26
00:01:49.560 --> 00:01:50.330
them out.

27
00:01:50.370 --> 00:01:54.670
So I'm going to go to choose a folder for the path.

28
00:01:54.990 --> 00:02:03.300
And in there I'm going to right click to create a new folder new folder and it's going to be called

29
00:02:03.300 --> 00:02:11.320
the same as our subfolder in the content in the blue print content directory which is menu system.

30
00:02:12.430 --> 00:02:13.580
That is straight forward.

31
00:02:13.600 --> 00:02:18.790
So we've got the menu system subfolder we'll be using that one and we're going to be calling this widget

32
00:02:19.210 --> 00:02:20.420
the main menu.

33
00:02:21.300 --> 00:02:22.420
Very straightforward.

34
00:02:22.710 --> 00:02:28.800
Okay so let's go ahead and create that class and wait for it to finish compiling.

35
00:02:28.800 --> 00:02:34.170
The next thing we're going to do once it has finished compiling is we're going to be reparenting it

36
00:02:34.470 --> 00:02:40.980
to the widget blueprint and then we're going to be doing something called binding the property to the

37
00:02:40.980 --> 00:02:47.430
button so we're going to try and create a button you property on AC plus plus class which automatically

38
00:02:47.430 --> 00:02:51.720
gets bound to a button in the widget that we've created.

39
00:02:51.720 --> 00:02:57.510
In fact it requires that that button is there and it allows us to interact with a button that we've

40
00:02:57.510 --> 00:03:02.420
placed in blue print very very easily with very little binding code at all.

41
00:03:02.550 --> 00:03:10.170
And that all hours to receive events from the class and it will allow us to update things like text

42
00:03:10.260 --> 00:03:14.060
in the interface as well as all that sort of thing.

43
00:03:14.060 --> 00:03:18.150
So we're going to be starting off with the host button once we've figured out how to do this and they

44
00:03:18.150 --> 00:03:25.260
will be moving on to join because that will require more UI to enter our address so the compile has

45
00:03:25.260 --> 00:03:26.010
completed.

46
00:03:26.010 --> 00:03:29.550
That means I have a class open in Visual Studio.

47
00:03:29.640 --> 00:03:34.320
Let's hop on over to that and have a look at our menu system we can see that we've got our main menu

48
00:03:34.320 --> 00:03:36.380
C++ and Dot H.

49
00:03:36.390 --> 00:03:39.880
Not very much in them at the moment but enough to get us going.

50
00:03:40.110 --> 00:03:42.520
So let's go back in to the unreal Ed.

51
00:03:42.530 --> 00:03:46.170
What we want to be doing is reparenting the widget BPA.

52
00:03:46.200 --> 00:03:50.730
So let's open the widget P as a starting point if you don't have it open already.

53
00:03:50.730 --> 00:03:53.970
Can I bring it in to the main window.

54
00:03:54.330 --> 00:03:57.810
Well that's a pretty nice looking you I am quite proud of that one.

55
00:03:58.140 --> 00:03:59.940
I'm quite proud that it's quite good.

56
00:03:59.940 --> 00:04:05.520
So we're what we're going to do next is we're going to reap parent this you right now you noticed that

57
00:04:05.520 --> 00:04:09.690
there is an A class propertys that you might expect from elsewhere.

58
00:04:09.690 --> 00:04:17.340
So for this you have to go to the graph and you'll notice that then we got class settings show up in

59
00:04:17.340 --> 00:04:17.970
the toolbar.

60
00:04:17.970 --> 00:04:23.250
So then in class settings you can click on that and then the details is in a slightly different place

61
00:04:23.250 --> 00:04:25.220
down at the bottom left here.

62
00:04:25.560 --> 00:04:30.510
And you can choose the parent class click the drop down and you'll see that we've got the main menu

63
00:04:31.560 --> 00:04:34.200
dropdown from before and that's all good.

64
00:04:34.230 --> 00:04:35.550
That's nice easy.

65
00:04:35.550 --> 00:04:37.620
Simple very easy indeed.

66
00:04:37.620 --> 00:04:41.710
So what we're going to do next is try and create that BALLAnd widget.

67
00:04:41.730 --> 00:04:44.760
I was telling you about what is a bind widget.

68
00:04:44.760 --> 00:04:48.890
Well let's have a look at the documentation for this.

69
00:04:48.900 --> 00:04:54.960
This is actually a properly difficult to find piece of documentation in fact and Real's and seemed to

70
00:04:54.960 --> 00:04:59.160
have some proper documentation on this themselves at all.

71
00:04:59.310 --> 00:05:03.960
So this is the best I can find by a chap called Ben Humphries and his blog post.

72
00:05:04.110 --> 00:05:05.520
And he can use this as a reference.

73
00:05:05.520 --> 00:05:08.530
It's included in the resources for your lecture.

74
00:05:09.120 --> 00:05:10.500
Now bind it.

75
00:05:10.510 --> 00:05:15.680
Is this really really clever metter property of YOU property as you can see here.

76
00:05:15.780 --> 00:05:20.740
It's very simple to use its metter equals bind widget on something that has a type.

77
00:05:20.760 --> 00:05:26.940
I think basically of being a you use a widget like the utx blogs or you button.

78
00:05:26.940 --> 00:05:35.060
And what this does is it automatically attaches it to a widget in your sub basically in a sub widget.

79
00:05:35.070 --> 00:05:37.490
So how are we going to set this up.

80
00:05:37.540 --> 00:05:40.530
Well let's go over to our.

81
00:05:41.780 --> 00:05:45.500
Main Menu and create a new property here.

82
00:05:45.800 --> 00:05:48.240
So I'm going to go you property.

83
00:05:48.500 --> 00:05:52.670
And I don't need to bother making it blue print readable or writeable I think the only thing I'm going

84
00:05:52.670 --> 00:05:58.970
to do is that bind widgets so let's copy it from this blog post it's metter equals bind widget.

85
00:06:00.210 --> 00:06:02.970
Go back over here we go.

86
00:06:02.990 --> 00:06:08.010
And then we want to create it of the right type.

87
00:06:08.030 --> 00:06:13.900
So we want a button let's have a look for what the type of the button that we want.

88
00:06:14.180 --> 00:06:16.500
Like me you might be tempted to look for you button.

89
00:06:16.510 --> 00:06:18.370
So that is actually correct.

90
00:06:18.380 --> 00:06:19.820
That's what you're going to find.

91
00:06:19.880 --> 00:06:22.820
And here's the documentation page against again linked.

92
00:06:23.000 --> 00:06:27.030
So the important thing is just that we have the class name which is you button.

93
00:06:27.030 --> 00:06:33.790
And I am going to do a forward declaration at this point and define it in detail in adult file.

94
00:06:33.980 --> 00:06:37.220
So class you button star.

95
00:06:37.490 --> 00:06:39.210
And what button do we want.

96
00:06:39.230 --> 00:06:46.340
It's going to be the host button for starters Although while we're at it we might as well create one

97
00:06:46.700 --> 00:06:48.650
for the join button as well.

98
00:06:49.100 --> 00:06:54.440
So let's go ahead and copy and paste that and create a second one for the join button and fix up an

99
00:06:54.800 --> 00:06:55.970
indentation.

100
00:06:56.980 --> 00:07:00.680
That visual studio so kindly messes up for us every single time.

101
00:07:01.060 --> 00:07:05.680
Let's go ahead and build that and see what result we get.

102
00:07:05.680 --> 00:07:09.060
In fact why not make the result your job.

103
00:07:09.070 --> 00:07:12.560
I want you to see what errors you might get.

104
00:07:12.580 --> 00:07:15.060
Currently what's going on and.

105
00:07:15.070 --> 00:07:16.650
Great hypothesis of how you think.

106
00:07:16.650 --> 00:07:18.830
Bind which it is actually operating.

107
00:07:19.120 --> 00:07:21.710
So to reiterate how does bind widget work.

108
00:07:21.760 --> 00:07:24.640
Look at the errors and try and describe how it functions.

109
00:07:24.660 --> 00:07:27.150
Simple easy challenge pulls video and have a go.

110
00:07:28.370 --> 00:07:29.360
Okay welcome back.

111
00:07:29.360 --> 00:07:33.050
Let's dive in to this challenge solution so my builder succeeded.

112
00:07:33.080 --> 00:07:42.790
Let's go over into unreel right over here and have a look and see if we can compile at w.p. main menu.

113
00:07:42.820 --> 00:07:45.530
Have a go at compiling and it goes up.

114
00:07:45.740 --> 00:07:52.600
Non optional widget binding host not found and non optional widget binding join not found.

115
00:07:52.610 --> 00:07:53.990
So what is going on here.

116
00:07:53.990 --> 00:07:55.550
See if we can fix it.

117
00:07:55.640 --> 00:08:02.660
We go back into the designer and think a little bit about why maybe this button isn't actually hooking

118
00:08:02.660 --> 00:08:03.310
up.

119
00:08:03.680 --> 00:08:08.630
Well currently there's no reason to say that this button is a join button or a houseboat and this button

120
00:08:08.630 --> 00:08:10.210
is a join button.

121
00:08:10.430 --> 00:08:11.210
Why is that.

122
00:08:11.210 --> 00:08:17.300
Well if you had looked at the documentation which you are perfectly reasonable thing to do in a challenge

123
00:08:17.300 --> 00:08:18.910
you can always look at documentation.

124
00:08:18.980 --> 00:08:23.090
You may have realized that you need to name these the same as you named the properties.

125
00:08:23.090 --> 00:08:30.080
So this button unschool 55 which was a bad name anyway can be changed now to being called host and the

126
00:08:30.080 --> 00:08:34.320
other one can be changed to being called join sets.

127
00:08:34.340 --> 00:08:38.180
Do that and see now whether our widget will happily compile.

128
00:08:38.300 --> 00:08:44.210
Yes it does no more compiler results so that means that we're getting the right thing in the C++.

129
00:08:44.690 --> 00:08:51.530
Okay so that was short but sweet but we have bound these widgets to the host and to the join in the

130
00:08:51.530 --> 00:08:52.660
next lecture we're going to.

131
00:08:52.660 --> 00:08:58.580
Prove that by actually getting some log messages when we click them that will be the first step to actually

132
00:08:58.580 --> 00:09:01.240
hooking them up to something useful.

133
00:09:01.250 --> 00:09:02.390
Very exciting.

134
00:09:02.420 --> 00:09:05.110
So let's see you in the next lecture.
