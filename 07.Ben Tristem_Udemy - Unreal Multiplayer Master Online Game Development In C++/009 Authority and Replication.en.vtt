WEBVTT
1
00:00:04.940 --> 00:00:05.900
Hello with our.

2
00:00:05.930 --> 00:00:10.280
Welcome to another exciting instalment of unreel multiplayer.

3
00:00:10.280 --> 00:00:20.500
Now in this lecture we are going to be having a look at a concept called replication and authority.

4
00:00:20.560 --> 00:00:25.340
Now sounds like a dull concept but the idea is quite an interesting one.

5
00:00:25.340 --> 00:00:34.790
It tells us all about how when we move an object in a server that object moves in a client and what

6
00:00:34.790 --> 00:00:41.270
happens in the opposite direction and how we can extend that from just movement to other properties

7
00:00:41.270 --> 00:00:43.370
as well maybe like colour for example.

8
00:00:43.370 --> 00:00:49.400
So going to understand how all that fits together and how that allows us to play games together which

9
00:00:49.400 --> 00:00:50.480
is the hope with this course.

10
00:00:50.480 --> 00:00:51.510
So let's dive in.

11
00:00:52.480 --> 00:00:58.420
So as we saw in the last lecture there were some pretty weird behaviour going on with this cube if we

12
00:00:58.420 --> 00:00:59.130
were the client.

13
00:00:59.130 --> 00:01:00.780
So here I'm not the client and the server.

14
00:01:00.810 --> 00:01:01.690
I can see it moving.

15
00:01:01.690 --> 00:01:05.190
So let's go to the client and I go over to the same queue.

16
00:01:05.190 --> 00:01:09.520
In fact let me bring that window in a little bit because it's hard to see.

17
00:01:10.570 --> 00:01:12.080
See there again.

18
00:01:12.490 --> 00:01:14.460
I come over to this queue.

19
00:01:15.000 --> 00:01:20.120
Then you'll notice that I can run straight through it which is a super weird thing to be able to do

20
00:01:20.130 --> 00:01:25.170
why am I able to run through this cue albeit with a little bit of a delay.

21
00:01:25.170 --> 00:01:27.150
And what happens if I try and stand on it.

22
00:01:27.150 --> 00:01:32.700
For example if I try and jump on my cube I'm going to fall right through it every time.

23
00:01:32.700 --> 00:01:36.050
Let's do that again just to show you it's not a fluke.

24
00:01:36.240 --> 00:01:41.400
Well it hard to land on maybe we're going to adjust the controls of this third person so that he can

25
00:01:41.490 --> 00:01:44.960
land easily on top of cubes maybe from here.

26
00:01:46.240 --> 00:01:48.270
But basically I can fall right through in fact look at this.

27
00:01:48.280 --> 00:01:50.950
I'm standing right inside the cube How weird is that.

28
00:01:50.950 --> 00:01:54.040
So that's clearly something odd that we don't quite understand.

29
00:01:54.100 --> 00:01:55.590
And I teased you enough with this.

30
00:01:55.850 --> 00:01:57.850
We're going to try and understand what it is.

31
00:01:57.850 --> 00:02:04.540
Unreal means by actor authority is quite a key concept to unrealized multi player replication.

32
00:02:04.540 --> 00:02:05.970
So let's tackle that.

33
00:02:05.980 --> 00:02:12.300
Now the idea is that actors are the key bit of replication.

34
00:02:12.370 --> 00:02:19.630
They are the key component which unreal chooses to move between client and server.

35
00:02:19.640 --> 00:02:23.620
It tries to keep up to date between client and server.

36
00:02:23.950 --> 00:02:31.240
You start off with certain amount of actors in the world in a map and both players load them.

37
00:02:31.240 --> 00:02:38.110
So we'll start off with a server who starts off loading in these two cubes one being green and one being

38
00:02:38.110 --> 00:02:42.070
red and then we have the client who also has the same map.

39
00:02:42.070 --> 00:02:44.970
So he gets the same cubes set up in his world.

40
00:02:44.980 --> 00:02:46.530
Now what happens next.

41
00:02:46.600 --> 00:02:50.950
Well the server decides that he wants to replicate only one of these cubes.

42
00:02:50.950 --> 00:02:53.310
He wants to replicate the green cube.

43
00:02:53.440 --> 00:02:58.770
And furthermore he wants to replicate the position property of that green.

44
00:02:58.770 --> 00:03:03.340
Q But he decides that he doesn't want to replicate that red.

45
00:03:03.340 --> 00:03:06.610
Q Okay so now what happens next.

46
00:03:06.670 --> 00:03:14.200
Say that these server updates its position of the green cube to 20 from 10.

47
00:03:14.620 --> 00:03:21.260
Now what happens is unreal will noticed that because it was a replicated object and a replicated property.

48
00:03:21.400 --> 00:03:29.110
It's going to have to send that change to all the clients connected and then in turn these clients will

49
00:03:29.140 --> 00:03:31.010
update their position.

50
00:03:31.030 --> 00:03:38.620
Now notice that this happened because it was both a replicated actor and a replicated property on that

51
00:03:38.620 --> 00:03:39.270
actor.

52
00:03:39.460 --> 00:03:46.190
So if the server had changed the green property to red then that would not have been sent to this to

53
00:03:46.360 --> 00:03:49.430
the client and the client would have stayed green.

54
00:03:49.480 --> 00:03:54.910
Similarly if we'd updated the position of the red cube on the server that wouldn't have got to the client

55
00:03:54.910 --> 00:03:57.210
and the client would have stayed in position 10.

56
00:03:57.220 --> 00:04:01.360
So that explains to some extent why we're seeing this behaviour with the queue.

57
00:04:01.360 --> 00:04:08.470
We've got a non replicated cube which means that if it is moved on the server it does not get moved

58
00:04:08.530 --> 00:04:15.460
on the client and furthermore that means that if they disagree client and server then the servers going

59
00:04:15.460 --> 00:04:17.500
to set the client back.

60
00:04:17.500 --> 00:04:25.090
So when we went and tried to run through that cube we noticed that because on the server He didn't mind

61
00:04:25.510 --> 00:04:27.760
that we weren't.

62
00:04:27.760 --> 00:04:28.690
There was no cube there.

63
00:04:28.690 --> 00:04:32.800
In fact let's let's have a look at that again because this is a little bit subtle so you might be forgiven

64
00:04:32.800 --> 00:04:35.010
for not quite getting this on the first pass.

65
00:04:36.760 --> 00:04:38.530
So here we have the servers.

66
00:04:38.530 --> 00:04:41.020
I'm going to go over to my client.

67
00:04:41.590 --> 00:04:43.210
Here's the client.

68
00:04:43.210 --> 00:04:47.680
But watch what's happening on the server from the servers point of view.

69
00:04:47.680 --> 00:04:49.380
You notice that from the server.

70
00:04:49.420 --> 00:04:56.510
He is just moving smoothly back and forth through a point in space which has got no obstacles.

71
00:04:56.530 --> 00:05:00.360
So that's because my input is being sent up to the server.

72
00:05:01.340 --> 00:05:09.050
And then it is updating the character on the server and then coming back down to me.

73
00:05:09.080 --> 00:05:14.600
So because it's coming back down to me I'm able to go through that cube.

74
00:05:14.600 --> 00:05:19.380
But because I can see it here locally it hasn't been updated.

75
00:05:19.380 --> 00:05:25.310
Basically what's happening is is that client replication that is happening and the inputs going onto

76
00:05:25.310 --> 00:05:29.910
the server and the position of my character is coming back down to me.

77
00:05:30.050 --> 00:05:34.300
And that's why I can run through a cube that seemingly to me is blocking my way.

78
00:05:34.310 --> 00:05:35.070
But it isn't.

79
00:05:35.120 --> 00:05:37.520
That's the problem that's the main takeaway.

80
00:05:38.110 --> 00:05:46.180
So we want to make it so that cube can be updated on the server only and then have that change of movement

81
00:05:46.660 --> 00:05:49.830
replicated down to all the clients.

82
00:05:50.170 --> 00:05:55.250
So let's hop over to visual studio where we can get this ball rolling.

83
00:05:56.020 --> 00:06:03.370
It's a property that we typically will set in begin play not in the constructer because that's too early.

84
00:06:03.370 --> 00:06:08.120
We want to do it only on the server that replication is enabled as we saw on the slide.

85
00:06:08.170 --> 00:06:10.760
We only put those green ticks there on the server.

86
00:06:10.930 --> 00:06:13.990
That's what we want to do here as well now.

87
00:06:14.110 --> 00:06:20.050
So let's go ahead and create a begin play go over to the head of file and just do it above tick to show

88
00:06:20.050 --> 00:06:28.240
the time in which it's happening and create a new begin place so that begin play as a void return type

89
00:06:28.240 --> 00:06:37.090
again as virtual void begin play with correct capitalization and no arguments to begin play and make

90
00:06:37.090 --> 00:06:39.580
sure that it is indeed an override.

91
00:06:39.580 --> 00:06:46.690
And just as we did with TIC I'm going to copy that in to the C++ file not trusting myself to type correctly

92
00:06:46.930 --> 00:06:48.370
as you've already seen.

93
00:06:48.520 --> 00:06:51.250
I'm prone to making many many typos.

94
00:06:51.790 --> 00:07:00.820
And then we will execute the body of that begin play and I am going to call sooper begin play here just

95
00:07:00.820 --> 00:07:02.310
as we did for take.

96
00:07:03.080 --> 00:07:04.340
Do remember to do this one.

97
00:07:04.340 --> 00:07:09.590
It actually matters even more than the tic because otherwise blueprint things will not be called.

98
00:07:10.560 --> 00:07:12.410
And then in there begin playing.

99
00:07:12.450 --> 00:07:17.910
We are going to do a set replicates.

100
00:07:19.640 --> 00:07:21.070
Just follow along with me here.

101
00:07:21.080 --> 00:07:24.820
If you can set replicates and set it to true.

102
00:07:25.400 --> 00:07:26.380
That's equivalent to.

103
00:07:26.380 --> 00:07:27.530
On my diagram.

104
00:07:27.530 --> 00:07:29.910
Putting that tick next to the green cube.

105
00:07:30.410 --> 00:07:32.820
So set replicates with an s.

106
00:07:32.830 --> 00:07:36.910
That's why it's giving me the Greens quigley's the Reds quigley's Rather.

107
00:07:37.670 --> 00:07:43.190
And furthermore we need to check that box next to the position to say that we want position to replicate

108
00:07:43.220 --> 00:07:46.210
and that is set replicates.

109
00:07:47.250 --> 00:07:48.210
Movement.

110
00:07:49.180 --> 00:07:54.790
Because by default it won't just replicate your movement for you won't give you that for free.

111
00:07:54.790 --> 00:07:57.780
So set replicate this time set.

112
00:07:57.780 --> 00:08:00.700
Replicate movement to true.

113
00:08:00.700 --> 00:08:06.330
These two functions are vital for getting your active replication in place now.

114
00:08:06.490 --> 00:08:12.000
Note that if we ran this right now we would get an error from set replicates.

115
00:08:12.010 --> 00:08:18.460
True because we're calling it both on the client and the server because there's no has authority wrapper

116
00:08:18.490 --> 00:08:20.080
as we have in tick.

117
00:08:20.110 --> 00:08:26.830
This gets called on both and it is actually not valid to call set replicates on a client.

118
00:08:26.830 --> 00:08:31.800
Kind of makes sense you can't replicate from a client because the client doesn't have the authority.

119
00:08:31.800 --> 00:08:33.240
It can't go the other way.

120
00:08:33.270 --> 00:08:39.490
Well that's one thing that I didn't quite say on the diagram but here if our client for example updated

121
00:08:39.490 --> 00:08:45.700
the position of the green cube then the position on the server would not change the synchronization

122
00:08:45.700 --> 00:08:46.930
doesn't go two ways.

123
00:08:46.930 --> 00:08:51.560
The server is always authority of the certs who server is always right.

124
00:08:51.580 --> 00:08:56.250
So like a customer's always right but this time it's the server so you can give that a shot pause V

125
00:08:56.260 --> 00:08:56.930
and have a go.

126
00:08:56.950 --> 00:09:00.240
Compiling and seeing what the error looks like just for your information.

127
00:09:01.720 --> 00:09:06.900
If you've done that then we can go ahead and do an IF has authority.

128
00:09:07.870 --> 00:09:08.390
So.

129
00:09:09.210 --> 00:09:16.260
Then we can do these two was a nest that they set replicate and set that replicates and set replicate

130
00:09:16.350 --> 00:09:19.540
movement in that to the has authority.

131
00:09:19.740 --> 00:09:25.890
Go ahead and build that and we'll hopefully be able to see a cube that moves both on the client and

132
00:09:25.890 --> 00:09:31.200
the server from a piece of code that's just updating it on the server as we've already seen.

133
00:09:31.200 --> 00:09:35.280
We know that it doesn't update on the client so we should now be able to see that the replication of

134
00:09:35.280 --> 00:09:42.660
movement comes back down to said client with the compellation comp. Let's hop on over into one real

135
00:09:43.080 --> 00:09:44.160
and give it a shot.

136
00:09:44.160 --> 00:09:51.800
I'm going to switch back to playing in the selected viewport And here's the server the server says yes

137
00:09:51.810 --> 00:09:53.040
that is working.

138
00:09:53.530 --> 00:09:54.950
How about the client.

139
00:09:54.970 --> 00:09:58.550
The client we go over to look at the cube.

140
00:09:59.920 --> 00:10:00.920
Yes.

141
00:10:01.030 --> 00:10:06.700
It's also moving on the client so our replication is now working that server is sending updates down

142
00:10:06.700 --> 00:10:12.700
to the client saying hey I've moved this cube I move this cube up move this cube and the client is updating

143
00:10:12.730 --> 00:10:15.610
the actor to the new position.

144
00:10:15.610 --> 00:10:23.230
Fantastic time for an exercise in what if you are going to be doing this for your challenge to update

145
00:10:23.260 --> 00:10:27.210
the cube on the client only should know how to do this.

146
00:10:27.210 --> 00:10:29.260
Do you know how to find out whether it's a server.

147
00:10:29.290 --> 00:10:31.270
It's not a server then it's a client.

148
00:10:32.060 --> 00:10:34.350
Then figure out what happens.

149
00:10:34.370 --> 00:10:41.240
What is the behaviour that's happening between the client and the server and see if you can explain

150
00:10:41.240 --> 00:10:41.870
the phenomenon.

151
00:10:41.880 --> 00:10:44.040
And I don't want you to just explain it in your head.

152
00:10:44.090 --> 00:10:50.390
I want you to go to the community and explain it in a post there explain it to some other students and

153
00:10:50.390 --> 00:10:55.430
then go and read some other students explanations and see whether there's make sense and see whether

154
00:10:55.430 --> 00:10:57.750
you can help them out if it doesn't quite make sense.

155
00:10:57.890 --> 00:11:00.700
We'll see if yours makes sense in light of what other people have done.

156
00:11:00.710 --> 00:11:01.640
But first make a guess.

157
00:11:01.640 --> 00:11:05.490
Make a post and say what your understanding of the phenomenon is.

158
00:11:05.530 --> 00:11:07.340
Pause video and have a go at that.

159
00:11:09.290 --> 00:11:09.640
Okay.

160
00:11:09.680 --> 00:11:10.200
Welcome back.

161
00:11:10.210 --> 00:11:13.170
So I'm going to go ahead and give this a shot.

162
00:11:13.200 --> 00:11:16.340
Let's dive in to Visual Studio.

163
00:11:16.730 --> 00:11:22.460
And the thing we want to do is check whether if I move this on the client what's going to happen so

164
00:11:22.460 --> 00:11:28.130
I'm going to do a not has authority because that will tell me that I'm a client and so in fact let's

165
00:11:28.130 --> 00:11:29.810
make a comment to that effect.

166
00:11:30.890 --> 00:11:35.850
Not on server equals client.

167
00:11:36.680 --> 00:11:37.510
Like so.

168
00:11:37.790 --> 00:11:44.240
And then what we're going to do is we are going to head into one real and compile and then we're going

169
00:11:44.240 --> 00:11:51.500
to play it and see what happens whether that cube is moving on both on just the server or maybe just

170
00:11:51.500 --> 00:11:55.460
the client and try and explain why that happen.

171
00:11:55.520 --> 00:11:57.350
So let's do that let's go and play.

172
00:11:57.380 --> 00:12:06.170
So I hit the play button go on the server up to my cube and nothing is moving that cube is completely

173
00:12:06.170 --> 00:12:11.120
static and I can't walk through it because well I'm authoritative which means that the cube is definitely

174
00:12:11.120 --> 00:12:12.340
not moving.

175
00:12:12.770 --> 00:12:21.650
But if I go over to my client and go and have a look at the same said cube then you'll notice that it

176
00:12:21.650 --> 00:12:23.700
is moving.

177
00:12:23.900 --> 00:12:26.380
So what's going on here then.

178
00:12:26.510 --> 00:12:34.040
Well if we go back to our diagram from before you will notice that the server is authoritative that

179
00:12:34.100 --> 00:12:40.670
is the key take away from this diagram which means that if the client has updated the position it doesn't

180
00:12:40.670 --> 00:12:45.650
get advertised back to the server at the service position is always correct and it's only if the server

181
00:12:45.680 --> 00:12:49.640
updates the position that we end up with a difference.

182
00:12:50.150 --> 00:12:58.220
Okay so that means that when the client here in a code go back to visual studio when the client we know

183
00:12:58.220 --> 00:13:04.640
it's the client because we're saying it and not has authority runs the code to update the location said

184
00:13:04.640 --> 00:13:10.520
location does not get sent back to the server and that's the behaviour we're seeing here that the server

185
00:13:10.850 --> 00:13:14.380
is standing there with a queue in the place we would expect.

186
00:13:14.510 --> 00:13:21.050
However our client has now had its cuv move completely out the way but I'd like to show you something

187
00:13:21.410 --> 00:13:27.500
which is that the clients still can't move through this invisible queue because the servers are still

188
00:13:27.500 --> 00:13:28.260
right.

189
00:13:28.280 --> 00:13:36.440
We're still sending out updates up to the server which means that if I go and try and walk through that

190
00:13:36.440 --> 00:13:39.460
cube the server says no that's not right.

191
00:13:39.470 --> 00:13:42.260
There's a cube that you can't walk through a cube.

192
00:13:42.380 --> 00:13:43.780
And let me show you one more thing.

193
00:13:43.820 --> 00:13:50.570
If we go over to our client again while having restarted so the was back in position and I go and try

194
00:13:50.570 --> 00:13:52.880
and sit on that cube.

195
00:13:54.450 --> 00:13:56.410
Go and do that again.

196
00:13:56.580 --> 00:13:59.180
I'm going to struggle to get on the cube it seems.

197
00:14:00.530 --> 00:14:07.150
Let's bring in let's bring it a little bit closer to the wall so I can actually hop on it more easily.

198
00:14:08.540 --> 00:14:13.860
So bring it right up to the wall and down a little bit so that I can just walk right onto it without

199
00:14:13.860 --> 00:14:15.740
actually having to jump.

200
00:14:15.870 --> 00:14:16.780
Hit Play.

201
00:14:17.510 --> 00:14:20.010
And go to my client again.

202
00:14:21.350 --> 00:14:24.050
Go and try and walk on to the platform.

203
00:14:25.260 --> 00:14:26.130
There I am.

204
00:14:26.130 --> 00:14:31.810
And I fall off I fall off because again the service is now airing a platform there mate.

205
00:14:32.740 --> 00:14:37.210
And how about if my server goes to stand on the same platform.

206
00:14:37.420 --> 00:14:41.800
He can obviously because there is a platform there for the server the server what the server says is

207
00:14:41.860 --> 00:14:42.910
truth.

208
00:14:42.910 --> 00:14:44.680
So that's what's going on.

209
00:14:44.680 --> 00:14:47.580
And if I am the client and I go and have a look.

210
00:14:47.830 --> 00:14:50.140
Well hang on that's weird.

211
00:14:50.140 --> 00:14:54.930
I've got my servers standing on a queue over here to the left of the platform.

212
00:14:55.180 --> 00:15:00.230
And I go over to the client and he's like travelling on my travelling cube.

213
00:15:00.550 --> 00:15:08.770
Well here's a little bit of a nuance going on basically because the character that and real builds basically

214
00:15:08.830 --> 00:15:15.130
will move when something is attached to move something when it's standing on top of something then it

215
00:15:15.130 --> 00:15:15.790
moves.

216
00:15:15.940 --> 00:15:21.520
So what's actually gone on here is that because we've got this dude who seems to be standing on our

217
00:15:21.520 --> 00:15:28.060
platform then my local client is moving him with the platform.

218
00:15:28.150 --> 00:15:34.930
But you'll notice now that if I get my character to step off the platform and go back to the cline's

219
00:15:34.930 --> 00:15:39.520
again lots of switching back and forth you'll notice these back in the right place because he's no longer

220
00:15:39.580 --> 00:15:46.610
standing on a platform so he's no longer being updated by the client to the same position as the platform.

221
00:15:46.650 --> 00:15:49.770
Just a little bit of a side there to understand.

222
00:15:49.810 --> 00:15:51.610
What happens when they disagree.

223
00:15:51.700 --> 00:15:57.820
Because the client disagreed with the server's location but the servers location won out.

224
00:15:57.820 --> 00:16:01.710
He ended up being back on top of that platform.

225
00:16:01.990 --> 00:16:08.410
Okay so you've got a much better understanding now of how replication works in the light of actors how

226
00:16:08.410 --> 00:16:14.260
we have to enable replication factors it doesn't happen by default and also seen what actually happens

227
00:16:14.290 --> 00:16:16.020
when they disagree.

228
00:16:16.030 --> 00:16:21.760
So before we head off to the next lecture I just want to set this back so that it's in a working state

229
00:16:21.940 --> 00:16:23.330
before we can commit it.

230
00:16:23.330 --> 00:16:28.930
So I'm going to take away the not in front of has authority so that the movement is only happening on

231
00:16:28.930 --> 00:16:32.740
the server and I'm going to move the comment because it's no longer relevant.

232
00:16:32.800 --> 00:16:37.390
So we're going to hit save there and we've got a comet.

233
00:16:37.420 --> 00:16:39.440
Ready to put in the pipe.

234
00:16:39.490 --> 00:16:40.000
We sit.

235
00:16:40.060 --> 00:16:41.740
Save the map as well.

236
00:16:41.740 --> 00:16:47.800
Congratulations you now have a much better understanding of what replication is in real and what it

237
00:16:47.800 --> 00:16:49.900
actually means for a server to be authoritative.

238
00:16:49.900 --> 00:16:51.510
I will see you in the next lecture.
