WEBVTT
1
00:00:05.080 --> 00:00:06.870
Hello and welcome in this lecture.

2
00:00:06.880 --> 00:00:14.470
We are going to be creating a main menu level which allows us to just go ahead and hit play and all

3
00:00:14.470 --> 00:00:21.430
we get there is the main menu popping up on our screens created and loaded almost entirely in C++ with

4
00:00:21.430 --> 00:00:23.950
a tiny tiny bit of help from blue print.

5
00:00:23.950 --> 00:00:26.810
So let's find out how that's achievable.

6
00:00:27.070 --> 00:00:28.340
Dive in with me.

7
00:00:30.100 --> 00:00:37.150
So now that we know how to get hold of the class we want to know how to actually use it to load widgets

8
00:00:37.180 --> 00:00:39.110
and display said widgets.

9
00:00:39.310 --> 00:00:47.920
Well the first thing to do is to actually create a way for us to do this function at load time because

10
00:00:48.130 --> 00:00:55.630
the problem here is that if we try and load the widgets in it on our game instance we're actually going

11
00:00:55.630 --> 00:00:56.640
to be too early.

12
00:00:56.650 --> 00:01:01.150
We're going to be there before there is a viewport to show our widgets into.

13
00:01:01.150 --> 00:01:05.590
So this actually needs to be done later on it can be done at a begin play for example.

14
00:01:05.590 --> 00:01:08.250
But there's no big in play in a game instance.

15
00:01:08.410 --> 00:01:14.680
So to simplify things at this point what we're going to do is just use an exact command to load the

16
00:01:14.740 --> 00:01:15.360
level.

17
00:01:16.180 --> 00:01:20.970
Okay fairly straightforward we know how to do these so I'm going to go over to my game instance to create

18
00:01:21.080 --> 00:01:28.340
a new except commands to load the level it's going to be a funnily enough you function exect.

19
00:01:29.650 --> 00:01:35.630
And now on the new line it's going to be a void type load menu.

20
00:01:36.800 --> 00:01:38.880
Brackets and finished off there.

21
00:01:38.960 --> 00:01:42.050
Now let's implement that over in the C++.

22
00:01:42.690 --> 00:01:46.390
Kind of go over in to Game instance not C++.

23
00:01:47.210 --> 00:01:50.340
I'm going to implement it just above my house function.

24
00:01:52.310 --> 00:01:56.650
A copy the you puzzle platform game instance namespace.

25
00:01:56.740 --> 00:02:01.030
Stick that in front of the load menu and put our curly braces.

26
00:02:01.120 --> 00:02:05.010
And we've got ourselves a load menu testing ground.

27
00:02:05.020 --> 00:02:10.420
I'm going to go ahead and build that because it's something we can start getting the build process going

28
00:02:10.420 --> 00:02:14.770
on especially seeing as we change the head of files it tends to make the build slightly longer.

29
00:02:14.770 --> 00:02:21.340
Now what we're going to do in this load menu is create a menu and then attach it to the viewport so

30
00:02:21.340 --> 00:02:27.640
to create menu you may have done this in blue print before there is a create menu create widget node.

31
00:02:28.030 --> 00:02:35.800
However we want to do this in C++ and you may struggle to find this part of the API documentation but

32
00:02:35.800 --> 00:02:41.740
very close to where we had a you widget documentation last time you go up a level.

33
00:02:41.800 --> 00:02:49.080
Then there is you mge Blueprint we go to the blueprint section of the You and G API reference and Amy

34
00:02:49.090 --> 00:02:49.560
here.

35
00:02:49.580 --> 00:02:55.180
We've got the API reference for create widgets and we've got a couple of create widget functions one

36
00:02:55.180 --> 00:03:00.460
which takes in an A player controller one which takes in your world and one which takes in a game instance

37
00:03:00.460 --> 00:03:02.040
that might be useful wouldn't it.

38
00:03:02.050 --> 00:03:06.050
So we're going to go for the game instance version of the API.

39
00:03:06.160 --> 00:03:12.340
And as you can see it's a template function so it takes in the template of the user widget that you're

40
00:03:12.340 --> 00:03:13.720
trying to create.

41
00:03:13.720 --> 00:03:19.780
It also takes in a new class by the way at teh sub object of creates a new class.

42
00:03:19.780 --> 00:03:26.410
In actual fact it's a restricted class but it is in fact a sub class of Sorts of the class.

43
00:03:26.560 --> 00:03:32.160
So you can use it in place of a uclass Pointer quite handy.

44
00:03:32.510 --> 00:03:37.630
Okay so let's have a go at that let's go and create the widget let's follow along with me.

45
00:03:37.630 --> 00:03:40.170
We're going to do create widgets.

46
00:03:41.380 --> 00:03:45.320
Angle brackets for the type it's going to be a user widget.

47
00:03:47.490 --> 00:03:54.210
That is straightforwardly going to give it the owning game which is just a pointer to this current game

48
00:03:54.210 --> 00:03:55.000
instance.

49
00:03:55.440 --> 00:04:01.890
And then we can give it the class that we want it to instantiate with and that class is going to be

50
00:04:01.890 --> 00:04:03.260
our menu class.

51
00:04:04.470 --> 00:04:09.600
Now at this point we should probably have checked but many class is not null before trying to create

52
00:04:09.600 --> 00:04:10.550
its own going to do.

53
00:04:10.560 --> 00:04:18.860
My nul return expansion and it's going to be just not return for many class Kate.

54
00:04:19.160 --> 00:04:25.760
So it will get an error rather than a crash if that goes wrong some occur on the end of the Create line.

55
00:04:25.770 --> 00:04:31.110
And let's see what it's returning is should be returning a use a widget so I can.

56
00:04:31.110 --> 00:04:32.980
Do you use a widget.

57
00:04:34.280 --> 00:04:36.070
Menu equals that.

58
00:04:36.080 --> 00:04:40.340
So now we've got ourselves a menu object that's been created using create widget.

59
00:04:40.340 --> 00:04:41.640
Now why is it complaining.

60
00:04:41.650 --> 00:04:43.400
Let's have a look at that.

61
00:04:45.660 --> 00:04:51.280
Because I didn't make it a you use a widget widgets it wasn't a pointer to a user widget.

62
00:04:51.300 --> 00:04:56.780
Now let's just make sure that the menu was krech successfully created again doing a null read.

63
00:04:56.790 --> 00:04:59.760
Now this might be a little bit overkill.

64
00:05:00.220 --> 00:05:06.100
But I really dont like my editor crashings so I am super paranoid about all the possible null pointers

65
00:05:06.550 --> 00:05:08.030
and you can be too.

66
00:05:08.320 --> 00:05:13.720
So weve got a menu now and we're definitely guaranteed to be not know at this stage because otherwise

67
00:05:13.720 --> 00:05:15.170
we would have returned by now.

68
00:05:15.550 --> 00:05:19.300
So what we can do is we can go ahead and add it to the viewport.

69
00:05:19.300 --> 00:05:24.510
Now you can see that this is part of the use a widget documentation.

70
00:05:24.510 --> 00:05:30.550
It is a function on you use a widget so you can just doesn't take in very many arguments it takes in

71
00:05:30.550 --> 00:05:31.630
a z order.

72
00:05:31.630 --> 00:05:42.870
And I think that's even not a required argument so we can as simple as go menu arrow add to viewport.

73
00:05:43.850 --> 00:05:45.550
Like so semicolon.

74
00:05:45.770 --> 00:05:51.740
And that is going to very simply add the widgets to the visible viewport over the top of what's already

75
00:05:51.740 --> 00:05:51.950
there.

76
00:05:51.950 --> 00:05:58.510
So let's go ahead and build that and give this exact command a try Kate build success.

77
00:05:58.520 --> 00:06:01.470
Let's go over in to a real editor.

78
00:06:02.700 --> 00:06:06.380
And let's load up our game play.

79
00:06:07.140 --> 00:06:10.650
Load up the console and do a load menu.

80
00:06:11.910 --> 00:06:14.400
Tried to execute deprecated command load.

81
00:06:14.430 --> 00:06:16.120
Well I actually wanted to.

82
00:06:16.900 --> 00:06:17.180
Do.

83
00:06:17.180 --> 00:06:18.450
Load menu.

84
00:06:19.280 --> 00:06:21.060
Execute that and running.

85
00:06:21.110 --> 00:06:25.310
We've got our menu over the top of our game.

86
00:06:25.310 --> 00:06:29.890
Now obviously we can't do anything with the input we're going to look at that in the next lecture.

87
00:06:30.080 --> 00:06:34.940
And also we don't really want the main menu just overlaid over the top of the game we're going to want

88
00:06:34.940 --> 00:06:42.350
it in a separate level of its own so that's going to be the subject of your challenge now to set up

89
00:06:42.380 --> 00:06:43.890
a main menu.

90
00:06:44.930 --> 00:06:47.960
So you're creating a main menu level.

91
00:06:47.960 --> 00:06:52.820
I'd like you to use an empty level as the base that I'll be completely dark and black background so

92
00:06:52.910 --> 00:07:00.380
that's perfect and we can spruce things up later on we're going to make a make the load menu function

93
00:07:00.410 --> 00:07:02.330
into a blueprint call a ball.

94
00:07:03.360 --> 00:07:07.320
Because then you want to be loading that menu automatically and you want to be doing that.

95
00:07:07.350 --> 00:07:09.350
A good place is begin play.

96
00:07:09.360 --> 00:07:13.370
So pause the video and have a go at achieving this challenge.

97
00:07:15.010 --> 00:07:16.060
Okay welcome back.

98
00:07:16.060 --> 00:07:20.750
We are going to dive right into this so I'm going up to content.

99
00:07:21.010 --> 00:07:26.980
I'm going to my menu system and I'm this time I'm going to create the map in here because it is a main

100
00:07:26.980 --> 00:07:30.340
menu map it's related to the menu system rather than anything else.

101
00:07:30.430 --> 00:07:37.140
So I'm going to go ahead and add a new let's see new level.

102
00:07:38.070 --> 00:07:40.320
Call it the main menu.

103
00:07:41.100 --> 00:07:44.710
And I'm going to launch that up that blueprint.

104
00:07:45.530 --> 00:07:51.110
Saying the current level as I go as you can see it's completely black which is just what we want.

105
00:07:51.110 --> 00:07:57.290
Next up we want to load a menu into this so to do that I'm going to go to my blueprints menu on the

106
00:07:57.290 --> 00:08:02.070
top toolbar and then go down to open level blueprint.

107
00:08:03.040 --> 00:08:08.310
In open level blueprint I have a big win planeload of which as I suggested is a good place.

108
00:08:08.310 --> 00:08:10.200
So we're going to use the begin plate node.

109
00:08:10.230 --> 00:08:16.460
But first we need to get hold of our game instance I'm going to right click and look for game instance.

110
00:08:17.250 --> 00:08:24.300
Get game instance is what I want and then I'm going to cast that to our specific game instance which

111
00:08:24.300 --> 00:08:32.130
is be I believe let's see platform game encinas no puzzle platforms game instance.

112
00:08:32.850 --> 00:08:38.220
I'm going to put the execution pins hooked up and a success execution pin hooked up and I'm going to

113
00:08:38.220 --> 00:08:41.270
have to create that you function make it a blueprint.

114
00:08:41.300 --> 00:08:44.510
Well let's go back to the seapass plus the game instance.

115
00:08:44.580 --> 00:08:45.150
H.

116
00:08:45.180 --> 00:08:52.760
And to where we have our load many I'm going to change that from being exect to blueprint callable.

117
00:08:55.950 --> 00:08:59.240
Like so let's go ahead and build that.

118
00:08:59.370 --> 00:09:03.710
And that should give us a nice little node in our blueprint graph.

119
00:09:05.270 --> 00:09:12.050
I mean as you can see here we are using the minimum amount of C++ or blueprint possible and the maximum

120
00:09:12.050 --> 00:09:13.720
amount of C++ possible.

121
00:09:13.880 --> 00:09:19.880
But we do still have to use the blueprint sometimes when it is convenient or most convenient such as

122
00:09:19.880 --> 00:09:20.750
the level blueprint.

123
00:09:20.750 --> 00:09:22.990
It's quite quite convenient to use it for.

124
00:09:23.000 --> 00:09:26.150
In that case because the level blueprints very hard to override.

125
00:09:26.150 --> 00:09:35.450
So what we can do now in this game instance is we are going to take that game instance pointer and we

126
00:09:35.450 --> 00:09:38.840
are going to call on it load menu.

127
00:09:38.870 --> 00:09:44.100
Simple as that so there is the success pin automatically got hooked up and that's all the blueprint

128
00:09:44.110 --> 00:09:45.610
we're going to be doing in this lecture.

129
00:09:45.650 --> 00:09:51.970
So let's go ahead and save that and close down the blueprint and try playing.

130
00:09:52.040 --> 00:09:53.660
And they go when we play.

131
00:09:53.660 --> 00:09:55.560
We have our main menu load up.

132
00:09:55.640 --> 00:09:56.740
We still can't click on anything.

133
00:09:56.750 --> 00:09:58.280
Again that's for the next lecture.

134
00:09:58.280 --> 00:10:06.140
But we're one step closer to having a functional and cool working main menu which can replace our lobby.

135
00:10:06.230 --> 00:10:09.260
So patch cells on the back and I'll see you in the next lecture.
