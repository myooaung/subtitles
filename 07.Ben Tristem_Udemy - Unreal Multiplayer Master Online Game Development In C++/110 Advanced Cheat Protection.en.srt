1
00:00:04,600 --> 00:00:08,530
Hello and welcome in this lecture were going to be looking at how we can protect our games from more

2
00:00:08,530 --> 00:00:09,750
advanced cheating.

3
00:00:09,760 --> 00:00:17,560
So for example if I go to my movement component and when I create this move I actually say haha sneakily

4
00:00:17,560 --> 00:00:22,490
I'm going to multiply my Delta time by Delta time by times 10.

5
00:00:22,510 --> 00:00:27,640
So it's time is going to be running extra fast for me which means I'll be able to fly around the course

6
00:00:27,640 --> 00:00:29,290
much faster than everybody else.

7
00:00:29,290 --> 00:00:33,180
This is me pulling my sneaky hat on and trying to be malicious.

8
00:00:33,340 --> 00:00:41,620
But if we go over into one real and hit play and try to drive around as the authority has NOT spawned

9
00:00:41,620 --> 00:00:43,110
up the authority properly Here we go.

10
00:00:43,210 --> 00:00:45,130
Here's you we've got the.

11
00:00:45,220 --> 00:00:47,820
Sorry not the authority with the autonomous proxy.

12
00:00:47,830 --> 00:00:51,490
Well you can see that he's actually labelled as authority so that tells us something has gone wrong

13
00:00:51,490 --> 00:00:52,030
already.

14
00:00:52,030 --> 00:00:56,980
If we go and have a look at the logs you'll see there's an error message here saying the client is running

15
00:00:56,980 --> 00:01:00,820
too fast at cheap protection has caught my sneaky behaviour.

16
00:01:00,850 --> 00:01:08,170
So let's dive in and see how we can implement some advanced tree protection to stop such behaviour as

17
00:01:08,170 --> 00:01:08,760
this.

18
00:01:09,480 --> 00:01:15,360
So there's a little to do here that we haven't yet got round to fixing which is this validation for

19
00:01:15,420 --> 00:01:16,290
our move.

20
00:01:16,410 --> 00:01:22,740
And there are currently lots of ways that our user could actually cheat if they wanted to.

21
00:01:22,770 --> 00:01:26,940
Now the first and most obvious way is using different inputs.

22
00:01:26,940 --> 00:01:29,690
So let me actually implement a cheat.

23
00:01:29,700 --> 00:01:34,800
First of all and then we're going to implement cheap protection to make sure we can catch that cheat.

24
00:01:34,890 --> 00:01:37,710
So the first kind of cheat that we might end up having.

25
00:01:37,890 --> 00:01:43,290
If I go ahead and going to close down these windows because I've got a few too many open and it's a

26
00:01:43,290 --> 00:01:44,320
little bit confusing.

27
00:01:44,370 --> 00:01:50,730
So the first thing is going to the Movent component or C P P and where we go ahead and create and move

28
00:01:51,240 --> 00:01:52,030
right here.

29
00:01:52,170 --> 00:01:54,780
You can see that we are setting the throttle to the throttle value.

30
00:01:54,780 --> 00:01:58,770
Well what if I wanted to go twice as fast or accelerate twice as fast.

31
00:01:58,980 --> 00:02:03,750
Well then I might just be able to multiply that by 2 or even by 10 so I'm going to go ahead.

32
00:02:03,750 --> 00:02:11,550
Multiply my throttle by 10 which should mean that I'm able to cheat as a player I'm basically able to

33
00:02:11,550 --> 00:02:13,830
go 10 times as fast as the other players.

34
00:02:13,830 --> 00:02:15,690
Let's see how that works.

35
00:02:15,690 --> 00:02:19,230
It's obviously not going to catch because we haven't written a cheap protection code but we want to

36
00:02:19,230 --> 00:02:23,400
see the effect and then we're going to write the cheat protection code that should kick me out because

37
00:02:23,400 --> 00:02:25,950
I'm doing this case so it compiled successfully.

38
00:02:25,960 --> 00:02:32,070
Let's go over into one real and hit play and let's try driving around.

39
00:02:32,740 --> 00:02:36,350
Okay so let me put the authority over here on the right.

40
00:02:36,360 --> 00:02:41,490
The autonomous proxy on the left and I'm going to be driving the autonomous proxy's So I drive the tomÃ¡s

41
00:02:41,520 --> 00:02:41,850
Proxy.

42
00:02:41,860 --> 00:02:47,530
Yes indeed it is moving around like a crazy person and is doing the same on the server so we definitely

43
00:02:47,530 --> 00:02:51,880
haven't stopped it from being able to accelerate to silly speeds.

44
00:02:51,880 --> 00:02:53,370
It's actually quite hard to drive.

45
00:02:53,500 --> 00:02:59,470
So it's a bit of a rubbish cheat but it certainly is quite effective at getting me from A to B much

46
00:02:59,470 --> 00:03:03,310
faster than the simulated proxy or the authority would be able to do so.

47
00:03:03,340 --> 00:03:07,090
What we do want to do is payable to prevent this sort of silly behaviour.

48
00:03:07,260 --> 00:03:10,520
And well that's quite easy if we go into our replicator.

49
00:03:10,550 --> 00:03:18,610
Dot h r c p p rather what we want to be able to do in this validate is check that the move has got valid

50
00:03:18,610 --> 00:03:24,010
bounds on its throttle its Ballo bounds on its steering throw as well so we can do this quite easily

51
00:03:24,020 --> 00:03:31,900
actually by I'm going to implement or help a function on the F go cart state struct And is that the

52
00:03:31,900 --> 00:03:37,720
one I want no the F go can't move struct as what I want which is in the go cart movement component.

53
00:03:37,720 --> 00:03:40,130
And I'm just going to call it is valid.

54
00:03:40,130 --> 00:03:41,360
So Gary Ball.

55
00:03:42,600 --> 00:03:43,700
Is valid.

56
00:03:44,900 --> 00:03:49,340
And it's not going to take any arguments and it's going to be a concert function because we don't have

57
00:03:49,340 --> 00:03:50,470
to do anything in there.

58
00:03:50,720 --> 00:03:54,050
And then it is going to very simply I'm going to just define it in line because it's going to be so

59
00:03:54,050 --> 00:03:59,600
simple going to very simply check that the absolute value of the throttle the absolute value of the

60
00:03:59,600 --> 00:04:03,080
steering throw is less than or equal to 1 so that's going to be fairly straightforward.

61
00:04:03,080 --> 00:04:07,390
We can do an F maths code on code on abs throttle.

62
00:04:08,780 --> 00:04:15,240
I'm not just talking about having great abs we're talking about absolute Manly's equals

63
00:04:17,910 --> 00:04:23,090
less than or equal to one and then we're going to do one and to do the same thing not just with the

64
00:04:23,100 --> 00:04:23,810
throttle.

65
00:04:23,820 --> 00:04:29,460
But to do it with the steering throw as well because I could apply that sheet to the steering flow as

66
00:04:29,460 --> 00:04:33,960
well now you might be asking Sam how can they apply this treat seeing as they don't have access to my

67
00:04:33,960 --> 00:04:34,500
source code.

68
00:04:34,500 --> 00:04:41,640
Well you can do clever things by compiling the source code and it's very very easy to find the place

69
00:04:41,700 --> 00:04:47,290
where you're steering throw is getting into some variables and then just apply a simple multiplication.

70
00:04:47,550 --> 00:04:52,830
It's not a hard cheat to be able to implement even if all you've got is the machine code to deal with

71
00:04:53,390 --> 00:04:54,410
a case that's built.

72
00:04:54,420 --> 00:04:57,840
Let's go ahead and see whether that's going to be an effective cheap protection.

73
00:04:57,900 --> 00:04:59,350
Go ahead hit play.

74
00:04:59,850 --> 00:05:01,950
And here is my autonomous proxy.

75
00:05:01,950 --> 00:05:05,730
If I drive the let's try and drive the autonomous proxy.

76
00:05:06,210 --> 00:05:07,850
Okay that hasn't worked.

77
00:05:07,860 --> 00:05:09,210
I wonder why.

78
00:05:10,070 --> 00:05:12,770
I know why because we've only implemented the helper method.

79
00:05:12,770 --> 00:05:19,200
We need to go into the replicator c p p and instead of returning true we need to do return move.

80
00:05:19,200 --> 00:05:21,010
Dot is valid.

81
00:05:21,380 --> 00:05:26,340
So basically validating the move can move this to do because we're doing it.

82
00:05:26,420 --> 00:05:27,510
Let's go ahead and build.

83
00:05:27,860 --> 00:05:29,700
Okay so that has built.

84
00:05:29,710 --> 00:05:31,670
Let's see if it works.

85
00:05:31,690 --> 00:05:33,980
I have launched up miles on a proxy.

86
00:05:33,980 --> 00:05:34,900
I try and move.

87
00:05:34,940 --> 00:05:39,570
Boom I'm kicked out of the game because I'm a cheater and cheaters are not allowed to play.

88
00:05:39,740 --> 00:05:42,740
So that is a fairly simple thing to do.

89
00:05:42,740 --> 00:05:48,470
But what about if I go for a more complicated cheat what I'm going to do is I'm going to be stressing

90
00:05:48,470 --> 00:05:55,670
delta time this time so we'll go into the moving component c p p and here's my Delta time and one thing

91
00:05:55,670 --> 00:06:00,260
that I know I could do is just make time run faster for me.

92
00:06:00,960 --> 00:06:07,140
So every time I create a move and send it up to the server I can either say that the delta time is larger

93
00:06:07,140 --> 00:06:10,560
than it was or I could send more moves up to the server.

94
00:06:10,620 --> 00:06:12,690
Now I am going to go with just one of these options.

95
00:06:12,750 --> 00:06:15,210
But we should be able to protect against both of them.

96
00:06:15,360 --> 00:06:20,770
So I'm just going to multiply my Delta time by 10 and I'm going to remove that from the throttle so

97
00:06:20,770 --> 00:06:23,460
we know that's not the reason it's failing.

98
00:06:23,460 --> 00:06:26,270
Go ahead and build and see what the effects are.

99
00:06:27,160 --> 00:06:27,410
OK.

100
00:06:27,430 --> 00:06:28,350
So the build succeeded.

101
00:06:28,350 --> 00:06:29,720
Let's go ahead and play it.

102
00:06:31,650 --> 00:06:35,430
And dive into my or tolley's Proxy.

103
00:06:35,440 --> 00:06:36,390
Please try to.

104
00:06:36,450 --> 00:06:38,760
And if I drive around were I still going.

105
00:06:38,760 --> 00:06:42,550
Credibly face in fact and go much faster by multiplying by 10.

106
00:06:42,550 --> 00:06:45,570
My delta time in fact so fast I really can't control.

107
00:06:45,600 --> 00:06:50,520
You can see how this would obviously be a problem that the physics simulation has been completely perverted

108
00:06:50,790 --> 00:06:53,840
by me multiplying that delta time.

109
00:06:53,890 --> 00:06:59,040
I just want to show you that there is another way of achieving essentially the same type of effect which

110
00:06:59,040 --> 00:07:04,380
is if we go into the replicated NCP s.p. and where we've got this send server send move the last move

111
00:07:04,380 --> 00:07:05,950
which has Antec component.

112
00:07:05,960 --> 00:07:12,840
If I go ahead and copy that a couple of times so that we basically don't duplicate these moves then

113
00:07:12,870 --> 00:07:20,680
we've also got problems so if I comment out for now this multiplied by 10.

114
00:07:22,670 --> 00:07:25,810
Like so and build with this particular treat.

115
00:07:25,810 --> 00:07:28,650
We should see a very similar thing in place.

116
00:07:29,650 --> 00:07:31,320
Let's dive back into one real quick.

117
00:07:31,320 --> 00:07:35,360
The game is currently running and hit play again.

118
00:07:35,430 --> 00:07:41,050
I'm going to go over into the autonomous proxy and move them around and you can see that he's certainly

119
00:07:41,050 --> 00:07:44,800
moving faster than even we're expecting.

120
00:07:44,800 --> 00:07:50,530
Obviously we could update our position better but you can see that we're moving very very quickly indeed

121
00:07:50,560 --> 00:07:55,630
across the authorities screen he maybe didn't see it too well but take my word for it.

122
00:07:55,660 --> 00:08:00,820
If you didn't so that's what were going to want you to try and fix.

123
00:08:00,820 --> 00:08:07,960
See if you can get that delta time for both of those cases both by multiply that time and by sending

124
00:08:07,960 --> 00:08:10,150
multiple simulated moves.

125
00:08:10,150 --> 00:08:14,340
Whether we can make that look like a cheat in the validation function.

126
00:08:14,680 --> 00:08:16,890
So I'd like you to prevent a delta time cheat.

127
00:08:16,900 --> 00:08:23,620
Now the way that you're going to do this is by tracking the time that has been simulated so far from

128
00:08:23,710 --> 00:08:28,930
the client so every time it gives you a move you've got Delta time that gives you an amount of time

129
00:08:28,930 --> 00:08:30,330
that you're going to simulate.

130
00:08:30,360 --> 00:08:35,590
Like you to keep track of how much of that time you've already simulated and ensure that it's is less

131
00:08:35,590 --> 00:08:39,700
than the server time it should always be less because there's a delay from the client to the server

132
00:08:39,700 --> 00:08:44,100
so the server should always have its time running ahead of what the client asked to simulate.

133
00:08:44,230 --> 00:08:48,140
If it gets a head then it means that the client is trying to cheat it's trying to run ahead of the service

134
00:08:48,190 --> 00:08:52,780
trying to move time move time faster than it actually moves.

135
00:08:52,780 --> 00:08:54,150
Obviously that's not allowed.

136
00:08:54,360 --> 00:09:01,150
And then I'd like you to check that it's preventing multiplying moves and it's preventing long delta

137
00:09:01,150 --> 00:09:04,370
time so pause a video and have a go at this challenge.

138
00:09:05,440 --> 00:09:06,270
Okay welcome back.

139
00:09:06,270 --> 00:09:09,680
So we're going to implement this tracking of simulation time.

140
00:09:09,850 --> 00:09:11,580
It's actually fairly straightforward.

141
00:09:11,590 --> 00:09:14,080
Hopefully you've had a go at it yourself.

142
00:09:14,200 --> 00:09:16,270
If you're a little bit stuck Don't worry.

143
00:09:16,270 --> 00:09:22,540
The important thing is that you have a go even if you do get stuck because you learn from even not managing

144
00:09:22,540 --> 00:09:23,130
to complete.

145
00:09:23,170 --> 00:09:24,820
A challenge is still learning.

146
00:09:24,820 --> 00:09:26,370
That's the important thing.

147
00:09:26,380 --> 00:09:28,400
So what are we going to do in a replicator.

148
00:09:28,420 --> 00:09:28,890
H.

149
00:09:28,930 --> 00:09:32,510
I am going to add a new variable and I'm going to add it.

150
00:09:32,620 --> 00:09:35,170
Let's see where I'm going to put it.

151
00:09:35,170 --> 00:09:41,170
After our client chunk of variables so it's going to go after a client start velocity and I'm going

152
00:09:41,170 --> 00:09:48,830
to call it client's simulated time like so and it is going to be a float.

153
00:09:48,830 --> 00:09:50,360
As time tends to be a float.

154
00:09:50,630 --> 00:09:52,120
So what client simulated time.

155
00:09:52,120 --> 00:09:53,410
That's what I'm going to go with.

156
00:09:53,500 --> 00:10:02,650
And then in our replicators c p p every time we receive our simulated move I am going to increment that

157
00:10:02,650 --> 00:10:08,650
time so it's going to be the simulator time plus equalled the move Delta times that every time we've

158
00:10:08,650 --> 00:10:12,450
simulated a move that simulates time has moved forward.

159
00:10:12,520 --> 00:10:20,450
So now another way of saying that there is a problem is going to be that the simulated the client simulator

160
00:10:20,450 --> 00:10:21,370
time.

161
00:10:23,300 --> 00:10:27,740
Plus the move delta time.

162
00:10:27,740 --> 00:10:30,770
So the simulator is what the simulator time would be.

163
00:10:30,770 --> 00:10:36,820
In fact let's say that in a variable set free float proposed time.

164
00:10:39,150 --> 00:10:43,340
So and we want to check that the proposed time.

165
00:10:45,390 --> 00:10:48,850
Is going to be less than the Worlds time.

166
00:10:48,850 --> 00:10:51,700
So we're going to do a GET world.

167
00:10:52,990 --> 00:10:54,960
And then we're going to do an arrow.

168
00:10:56,860 --> 00:11:00,800
And it's going to be I think time what we have before.

169
00:11:00,820 --> 00:11:02,060
Somewhere in here already.

170
00:11:02,080 --> 00:11:02,660
Time.

171
00:11:02,720 --> 00:11:04,120
Seconds.

172
00:11:04,270 --> 00:11:06,490
It's probably in the component c p p.

173
00:11:07,910 --> 00:11:14,660
Yes time second so I can just copy that from the copy over from the components you pee into the replicator

174
00:11:14,690 --> 00:11:15,710
cbp.

175
00:11:16,160 --> 00:11:18,380
And where is it.

176
00:11:18,380 --> 00:11:21,770
Down here in the validate go time seconds.

177
00:11:21,800 --> 00:11:23,900
So what's this property.

178
00:11:23,900 --> 00:11:26,790
This is a boolean and it's basically telling us.

179
00:11:28,060 --> 00:11:34,120
Client not running ahead something like that.

180
00:11:34,210 --> 00:11:37,130
And basically I'm going to say.

181
00:11:38,140 --> 00:11:38,780
If.

182
00:11:39,540 --> 00:11:40,390
Not.

183
00:11:41,110 --> 00:11:42,650
Client not running ahead.

184
00:11:43,560 --> 00:11:49,390
Bit convoluted but I think it's easier to read because then were going to do an a quick return false.

185
00:11:49,740 --> 00:11:55,430
And we're going to put a little log message so that we can see that this is the thing that went wrong.

186
00:11:55,560 --> 00:12:00,660
It's going to be a log temp and I'm actually gonna make it an error instead of a warning.

187
00:12:00,870 --> 00:12:06,590
And the text is just going to say that the client is running too fast.

188
00:12:06,720 --> 00:12:10,590
And then we're going to obviously have kicked it so we can check that.

189
00:12:10,590 --> 00:12:18,000
We can also put an if not move dot is valid and we can put a log message for that case too.

190
00:12:18,000 --> 00:12:21,460
So there's just a bit more useful logging information here.

191
00:12:21,510 --> 00:12:25,120
We're going to a return early return false.

192
00:12:26,240 --> 00:12:28,190
And we're going to put a eui Log.

193
00:12:28,190 --> 00:12:33,380
Very much the same as our client is running too fast instead is going to say.

194
00:12:35,060 --> 00:12:37,460
Received invalid move.

195
00:12:37,490 --> 00:12:43,000
And then at the end if none of these two early returns have been hit we can just return true.

196
00:12:43,160 --> 00:12:48,230
So the way this now reads is that we're getting a proposed time we're checking that client's not running

197
00:12:48,230 --> 00:12:48,910
ahead.

198
00:12:48,920 --> 00:12:52,990
If he is running ahead then the clients running who fast is logged out.

199
00:12:53,000 --> 00:12:54,440
And we return false.

200
00:12:54,530 --> 00:12:59,080
And if we've received an invalid move then we log that out instead.

201
00:12:59,120 --> 00:13:04,920
So I'm going to go ahead and build this and see if we're catching the client is running too fast error.

202
00:13:05,260 --> 00:13:05,600
Okay.

203
00:13:05,630 --> 00:13:09,700
Let's dive into one real See if that does get caught.

204
00:13:10,660 --> 00:13:11,020
There we go.

205
00:13:11,020 --> 00:13:12,460
We have actually already been kicked.

206
00:13:12,460 --> 00:13:17,710
You can see that because both our cars and labelled authority go to our output log we can confirm that

207
00:13:17,710 --> 00:13:19,430
go and find the red error.

208
00:13:19,930 --> 00:13:21,450
So the connection has been lost.

209
00:13:21,460 --> 00:13:26,480
And if we scroll up a bit further we can see that the client is running too fast is the error message.

210
00:13:26,830 --> 00:13:35,140
And what I want to do next is go ahead and check that it still works in the actual running case.

211
00:13:35,140 --> 00:13:40,800
Let's go and find a tic function and remove the multiple send moves.

212
00:13:43,050 --> 00:13:44,410
And build that.

213
00:13:44,470 --> 00:13:48,150
So check that it still works in the normal case.

214
00:13:48,210 --> 00:13:50,730
So let's dive back in to the unreal.

215
00:13:50,730 --> 00:13:59,040
Ed hit play and his apple top his proxy hasn't kicked yet and we can seemingly move around as normal

216
00:13:59,040 --> 00:14:05,340
so that seems to be working for our working cases not throwing up false positives about cheating which

217
00:14:05,340 --> 00:14:06,920
is also something we don't want.

218
00:14:06,960 --> 00:14:10,170
What if we were to multiply at Delta time by 10.

219
00:14:10,910 --> 00:14:15,590
Hopefully this should also mean that our simulation is running ahead of the service simulation and should

220
00:14:15,590 --> 00:14:17,990
be thrown up as that sort of cheating.

221
00:14:19,140 --> 00:14:22,010
So that succeeded to build play.

222
00:14:22,830 --> 00:14:25,440
And sure enough we've been kicked out already.

223
00:14:25,440 --> 00:14:29,190
We're saying authority if we look at the logs it says somewhere down here.

224
00:14:29,190 --> 00:14:34,480
Scroll to the new message it says that their client is running too fast which is correct.

225
00:14:34,500 --> 00:14:38,670
So we can undo that and build it back to a working state.

226
00:14:38,670 --> 00:14:44,960
But now we are fairly sure that our replicator has got some good anti cheap protection.

227
00:14:44,970 --> 00:14:47,550
You can't make the client run too fast.

228
00:14:47,640 --> 00:14:49,510
It has to stay within the time bounds.

229
00:14:49,530 --> 00:14:53,070
So that's going to prevent a lot of terrible cheating.

230
00:14:53,070 --> 00:14:58,080
We also can't give invalid throttle values and there's basically no other way of cheating if we go and

231
00:14:58,080 --> 00:15:03,170
have a look at a component c p p or at least no other way of treating that I can think of.

232
00:15:03,300 --> 00:15:04,100
I might be wrong.

233
00:15:04,140 --> 00:15:09,690
You might find some other ways and if you do please give it a test see if you can create some cheating

234
00:15:09,730 --> 00:15:17,970
behaviour and pace that you just mentioned that in the community site where it would be really interesting

235
00:15:17,970 --> 00:15:22,110
to see what extra cheats you could find and what other cheap protections you can find.

236
00:15:22,260 --> 00:15:27,030
Because this is really a game of security and with security you've never finished the battle you're

237
00:15:27,030 --> 00:15:29,490
always trying to put more protections in place.

238
00:15:29,670 --> 00:15:34,250
But there's always some ways that cheaters can come through that people can hack your system.

239
00:15:34,260 --> 00:15:38,670
We're just trying to catch as many of those as possible and make it as hard as possible for people to

240
00:15:38,730 --> 00:15:44,130
actually try and treat so the throttle value we've bounded that they can't cheat through the throttle

241
00:15:44,130 --> 00:15:46,260
value of the Go can't move their steering throw.

242
00:15:46,260 --> 00:15:54,090
We've bounded that well Delta time has been bounded over time by that some that we're keeping and the

243
00:15:54,090 --> 00:15:59,550
time property is actually not used on the server at all it's only used on the client so we can't use

244
00:15:59,550 --> 00:16:00,730
that to cheat.

245
00:16:00,750 --> 00:16:05,610
So that's the interface between the client and server also how often you're sending these moves as the

246
00:16:05,610 --> 00:16:09,810
interface between the client server and it seems that we've mostly locked that down.

247
00:16:09,810 --> 00:16:10,910
I'm fairly happy with that.

248
00:16:11,100 --> 00:16:16,410
As a second pass at our cheat protection and hopefully you are too but do bashin around see he you can

249
00:16:16,410 --> 00:16:21,600
think of any other ways that you might be able to cheat and do share them in the community.
