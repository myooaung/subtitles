1
00:00:04,270 --> 00:00:05,380
Hello and welcome in the show.

2
00:00:05,380 --> 00:00:10,630
We are going to make it possible to disable the movement replicator component completely comment it

3
00:00:10,630 --> 00:00:17,710
out as if we were if it never existed if we commented out that movement replicator then make it possible

4
00:00:17,740 --> 00:00:23,920
that our go kart is still able to move even though that movement replicator is commented out and remove

5
00:00:23,920 --> 00:00:28,110
that comment because I don't have it uncommented at the beginning of video and neither will you.

6
00:00:28,270 --> 00:00:30,670
So let's dive in and see how we can make it so.

7
00:00:30,660 --> 00:00:34,530
The movement still happens even without a replicator at least in single player.

8
00:00:35,480 --> 00:00:38,100
So this is the set up we have at the moment.

9
00:00:38,300 --> 00:00:39,120
Right.

10
00:00:39,560 --> 00:00:44,480
Well if this were the case what happens if we disable the replicator.

11
00:00:44,540 --> 00:00:47,960
Well everything should work just fine because we've got a movement component we should still be able

12
00:00:47,960 --> 00:00:48,790
to move around.

13
00:00:48,920 --> 00:00:51,380
It just won't replicate in multiplayer.

14
00:00:51,380 --> 00:00:57,380
So let's go ahead and give that a shot if we go to the unreal editor and we are going to as you just

15
00:00:57,380 --> 00:01:03,220
do this in blue prints going against the Graser can't folden the blueprint go opened the BP go cart.

16
00:01:03,590 --> 00:01:09,590
And with this BP go cart going to move into the main editor and I'm going to go to the movement replicator

17
00:01:09,680 --> 00:01:18,320
an ongoing to try and deactivate this or even remove it if I can can I remove it.

18
00:01:18,400 --> 00:01:20,030
Do I am might not be able to remove it.

19
00:01:20,030 --> 00:01:27,260
So what we can do instead is that we can just not create it in the first place so we won't have a movement

20
00:01:27,260 --> 00:01:28,000
replicator.

21
00:01:28,010 --> 00:01:33,260
And I believe that I'll be okay I don't think we actually refer to the movement replicator anywhere

22
00:01:34,190 --> 00:01:36,270
and we should check it for now any.

23
00:01:36,290 --> 00:01:40,700
No we don't refer to the moving replicator anyway so we're going to go ahead and build that without

24
00:01:40,760 --> 00:01:44,720
a movement replicator and man should work just fine right according to our dependency.

25
00:01:44,900 --> 00:01:47,620
Because the loop Remicade depends on the movement component.

26
00:01:48,110 --> 00:01:52,790
So if we remove the movement component and had a replicator obviously nothing's gonna work because what

27
00:01:52,790 --> 00:01:54,140
is it going to replicate.

28
00:01:54,140 --> 00:02:00,160
But if we do it this other way round everything should work it just will disable the replication feature

29
00:02:00,170 --> 00:02:03,090
at least that's what my architectural diagram is telling me.

30
00:02:04,270 --> 00:02:06,040
OK so let's give it a go.

31
00:02:06,040 --> 00:02:08,270
Head over in to the map.

32
00:02:09,060 --> 00:02:10,130
An obscure sport.

33
00:02:10,140 --> 00:02:15,390
One player in the Selecta viewport and have a guy driving around.

34
00:02:15,780 --> 00:02:22,290
So nothing works so clearly there is some hidden dependency going from the movement component replication

35
00:02:22,300 --> 00:02:29,370
component and that hidden dependency is if we go and look at our code that in the movement replicator

36
00:02:29,400 --> 00:02:30,820
we rely on.

37
00:02:30,860 --> 00:02:38,490
So as a sort of dependency we rely on our create move and simulate move being called from the movement

38
00:02:38,500 --> 00:02:44,340
replicator that's not any sort of dependency other than a kind of runtime dependency depending on being

39
00:02:44,340 --> 00:02:45,160
called.

40
00:02:45,360 --> 00:02:47,660
And we'd rather not have to depend on that.

41
00:02:47,670 --> 00:02:52,800
We'd rather do that stuff in our own tick component.

42
00:02:52,800 --> 00:02:54,230
So why aren't we doing that.

43
00:02:54,270 --> 00:02:56,580
Well let's have a look.

44
00:02:56,640 --> 00:03:01,700
Seems to be because we need to use the move to add it to an unacknowledged move.

45
00:03:01,710 --> 00:03:04,950
Q We also need to use the move to.

46
00:03:04,970 --> 00:03:08,730
Well that's pretty much it to send up to the server that's the other thing we need to do.

47
00:03:08,910 --> 00:03:17,040
So we're going to need to basically strip some of that back and allow our Movent component to work by

48
00:03:17,040 --> 00:03:21,850
itself essentially removing this dependency here.

49
00:03:21,930 --> 00:03:28,120
So let's go ahead and try that out by allowing the movement component to tick or at least tick properly.

50
00:03:28,230 --> 00:03:34,080
Already ticks we've got a moving component cbp which has got in it a tick component which we did not

51
00:03:34,080 --> 00:03:40,680
remove explicitly because I knew we were going to have to do this and if we wanted this to move then

52
00:03:40,680 --> 00:03:41,600
it very simply.

53
00:03:41,610 --> 00:03:47,490
All we've got to do is take these two lines of code the create move and assimilate move and move those

54
00:03:47,880 --> 00:03:51,000
in2 or copy them into our tic function.

55
00:03:51,030 --> 00:03:56,610
That should be sufficient to get as moving now because we're in the mood component we don't actually

56
00:03:56,610 --> 00:03:58,940
have to use a pointer.

57
00:03:59,220 --> 00:04:05,700
That's even easier can just use create move and simulate move which are local functions to this object.

58
00:04:06,660 --> 00:04:10,310
And we'll have to think about how we're going to make the movement replicate a work again.

59
00:04:10,320 --> 00:04:13,500
But first let's take that as a first step.

60
00:04:13,500 --> 00:04:17,820
I'm going to build it and see if we can move our couch around.

61
00:04:17,820 --> 00:04:21,970
Now just using that Moven component that builds succeeded.

62
00:04:21,990 --> 00:04:25,650
Let's have a go at driving around or restart game play.

63
00:04:25,650 --> 00:04:32,070
And yes sure enough I can move my authority around just fine but we've got no replication.

64
00:04:32,070 --> 00:04:37,260
So if I go and increase the number of players and hit play.

65
00:04:38,290 --> 00:04:41,880
And then I will move round as the authority.

66
00:04:41,900 --> 00:04:47,860
But as the character and the autonomous proxy I'm going to see it jumping around if I move randers the

67
00:04:47,860 --> 00:04:53,950
autonomous proxy it's even worse because I will go and see it from the authorities point of view that

68
00:04:53,950 --> 00:04:59,680
that car has been moved because there's no replication up to the server in the first place.

69
00:04:59,740 --> 00:05:04,750
So I'm going to actually challenge you to make replication work again and get all the information you

70
00:05:04,750 --> 00:05:06,800
need to replicate.

71
00:05:08,460 --> 00:05:12,590
In this challenge so we're going to make the replication work.

72
00:05:12,720 --> 00:05:21,390
So you can expose the last move that was made from the movement component using a geter replace the

73
00:05:21,420 --> 00:05:26,880
simulating code in replicator to use that last move and not do the simulating itself.

74
00:05:27,510 --> 00:05:30,520
You're going to change server send move.

75
00:05:31,320 --> 00:05:38,420
Because that does some simulating for us and we need to change that when we're simulating on the server.

76
00:05:38,740 --> 00:05:40,550
You all need to.

77
00:05:40,550 --> 00:05:46,160
Will you be able to make some new methods private here then maybe now some methods that you don't need

78
00:05:46,160 --> 00:05:47,190
to access.

79
00:05:48,390 --> 00:05:52,440
And finally when Shouldn't the Movent component simulate.

80
00:05:52,440 --> 00:05:58,020
There are some instances some places some machines on which it shouldn't be simulating and we should

81
00:05:58,110 --> 00:06:02,260
rely on the replicator to be doing the movement.

82
00:06:02,310 --> 00:06:05,960
So pause a video and have a go at making this replication work again.

83
00:06:07,520 --> 00:06:08,250
Okay welcome back.

84
00:06:08,280 --> 00:06:13,860
I'm going to start with the last question when Shouldn't the M.C. simulate.

85
00:06:13,880 --> 00:06:20,000
Well basically if we have a look at attic in the replicators that go to represent C++ in are already

86
00:06:20,000 --> 00:06:26,210
there and have a look at where we're currently simulating we are simulating at least we are creating

87
00:06:26,210 --> 00:06:33,970
and simulating a move where we are doing it when we are in control of the porn.

88
00:06:34,100 --> 00:06:40,160
In which case and we are the authority we are doing it here we're getting creating the move and sending

89
00:06:40,160 --> 00:06:41,760
the move to the server.

90
00:06:42,860 --> 00:06:46,750
And we are also doing it when we are the autonomous proxy.

91
00:06:48,420 --> 00:06:54,180
Well here's the thing to note that we've got a bit of redundancy in an IF statement here this get on

92
00:06:54,170 --> 00:06:54,650
a roll.

93
00:06:54,660 --> 00:06:59,790
Equals authority and get remote role equals simulated proxy.

94
00:06:59,970 --> 00:07:05,130
Well actually if I get rolls is remote roll is a simulated proxy.

95
00:07:05,130 --> 00:07:10,650
Then we know already that the role will be authority so we can actually go ahead and remove the first

96
00:07:10,650 --> 00:07:17,760
part of this statement but only to say Authority and remote role simulator proxy we can just say that

97
00:07:17,760 --> 00:07:26,130
the remote role is the simulated proxy which means that in our movement component we can do our Get

98
00:07:26,310 --> 00:07:27,410
on a roll.

99
00:07:27,750 --> 00:07:29,030
Autonomous proxy.

100
00:07:30,040 --> 00:07:35,290
So let's go over to the moon component and wrap the simulation in if statements it's going to.

101
00:07:35,290 --> 00:07:36,130
If.

102
00:07:36,960 --> 00:07:41,570
We are an autonomous proxy or in this case.

103
00:07:42,490 --> 00:07:43,640
We are.

104
00:07:45,250 --> 00:07:49,360
We have a remote role of simulated proxy.

105
00:07:50,850 --> 00:07:55,610
Then we can go ahead and execute the simulation code.

106
00:07:57,190 --> 00:08:02,840
Here on this machine Otherwise we are just not going to execute.

107
00:08:02,860 --> 00:08:08,830
Which would be the case if we are the simulated proxy or if we are the server and there is an autonomous

108
00:08:08,830 --> 00:08:10,880
proxy on the other side.

109
00:08:11,020 --> 00:08:13,270
So that seems fairly straightforward.

110
00:08:13,270 --> 00:08:18,250
Let's go back over to the C++ and I have actually cut out that statement.

111
00:08:18,250 --> 00:08:20,930
I don't think I intended to cut out the statement.

112
00:08:20,950 --> 00:08:22,620
So let's pull it back.

113
00:08:22,660 --> 00:08:25,330
So we got the autonomous proxy you've got the simulated proxy.

114
00:08:25,330 --> 00:08:26,530
That's all good.

115
00:08:26,530 --> 00:08:31,810
Now what we need to do next according to the challenge is we need to replace the simulating code in

116
00:08:31,810 --> 00:08:36,060
the replicator and we need to explode it explode.

117
00:08:36,080 --> 00:08:37,730
Expose the last move.

118
00:08:37,930 --> 00:08:41,540
So we've got this move here which is just a local move to the tick.

119
00:08:41,560 --> 00:08:44,590
We need to make that into a last move.

120
00:08:44,620 --> 00:08:48,460
And that's going to be a property at the moon component level.

121
00:08:48,580 --> 00:08:56,290
So the cut to the Movent component and create our selves and F go cart move field which is going to

122
00:08:56,290 --> 00:09:00,730
be called last move and we're going create an excess for that.

123
00:09:00,730 --> 00:09:02,020
It's just going to be for reading.

124
00:09:02,020 --> 00:09:06,990
You're not going to be able to set the last move so it's going to be a read only property essentially.

125
00:09:07,000 --> 00:09:13,500
So we're going to do it returning echo can't move and it's going to be a get last move.

126
00:09:14,540 --> 00:09:20,790
No arguments and all it has to do is return the last move.

127
00:09:20,920 --> 00:09:25,090
See I'm just define this in line like we've done with all our other getters because it actually makes

128
00:09:25,090 --> 00:09:30,930
them easier to read in some senses until they get to be doing more stuff than just this.

129
00:09:30,970 --> 00:09:37,120
So we're going do a Get last move then were going to go into the replicator C++ and instead of simulating

130
00:09:37,120 --> 00:09:41,740
the move as we're doing for the autonomous proxy creating the moving simulating the move what we're

131
00:09:41,740 --> 00:09:48,990
going to do instead is we are just going to add the get last move from the movement components we do

132
00:09:49,260 --> 00:09:57,610
move in component arrow get last move it's pacing in the wrong place get that move brackets and that

133
00:09:57,700 --> 00:10:05,500
will basically do what we need to get the last move send it up to the server and add it to the unacknowledged

134
00:10:05,500 --> 00:10:05,800
move.

135
00:10:05,800 --> 00:10:11,860
Q Okay so that's working just fine or looks like it will work just fine.

136
00:10:11,890 --> 00:10:19,420
However in the role remote role simulated proxy we have a slightly different issue here.

137
00:10:19,450 --> 00:10:25,230
The problem is that we are using server send move to simulate.

138
00:10:25,240 --> 00:10:29,980
But also if we go for go to it go find it.

139
00:10:33,180 --> 00:10:38,610
No we have got to go into C++ and find it in the implementation service and move implementation.

140
00:10:38,610 --> 00:10:45,870
You can see that we are using it because it is able to simulate the move and then update the state.

141
00:10:45,930 --> 00:10:47,740
These are actually two separate things.

142
00:10:47,760 --> 00:10:55,260
So what we could do instead of calling server send move is we could remove that altogether let it do

143
00:10:55,830 --> 00:11:01,140
the simulation essentially and just update the slate.

144
00:11:01,290 --> 00:11:08,970
So update server status which we don't have a function for yet but I'm going to create to go over to

145
00:11:08,970 --> 00:11:13,710
the replicator dot H and we will create a private function for this.

146
00:11:13,830 --> 00:11:20,210
I'll put it just at a clear acknowledged moves going to be void update server state.

147
00:11:21,110 --> 00:11:25,970
Not take any arguments because it just has side effects and this updates overstate.

148
00:11:25,970 --> 00:11:27,260
What are we going to do with it.

149
00:11:27,260 --> 00:11:33,570
We are going to create a function for our day so state and going to stick it actually.

150
00:11:33,650 --> 00:11:34,970
Where am I going to put it.

151
00:11:34,970 --> 00:11:37,470
Maybe I'll just stick it after take.

152
00:11:38,970 --> 00:11:45,110
And it's going to return void which we already know it's going to have the name space.

153
00:11:45,890 --> 00:11:49,260
You go cart movement replicator.

154
00:11:49,910 --> 00:11:59,540
And it is going to be called data a state with no arguments and a body and the body is going to do exactly

155
00:11:59,540 --> 00:12:04,790
what happens at the end of send move implementation then cut that out.

156
00:12:04,790 --> 00:12:11,560
Everything that updates the service state and replace it with a call to update server state instead.

157
00:12:11,920 --> 00:12:16,170
So we've removed the code duplication but we have.

158
00:12:17,030 --> 00:12:18,640
Allowed us to.

159
00:12:19,690 --> 00:12:20,580
Call it.

160
00:12:21,430 --> 00:12:24,320
In tick and you'll see we don't even take the move.

161
00:12:24,350 --> 00:12:26,980
The update service state as you'll see here.

162
00:12:27,110 --> 00:12:28,880
In fact that is a bit of a problem.

163
00:12:28,880 --> 00:12:30,290
It does need to take the move.

164
00:12:30,290 --> 00:12:32,630
Move is an argument that gets passed in here.

165
00:12:32,630 --> 00:12:35,570
So let's go up to the movement replicator dot H.

166
00:12:35,570 --> 00:12:37,960
And we're going to take a move.

167
00:12:39,140 --> 00:12:40,640
A data service state with.

168
00:12:40,830 --> 00:12:48,910
But this move can actually be a constant reference because we do not need to be editing it.

169
00:12:48,930 --> 00:12:53,750
And we do not need to be copying it around because we're not really taking a copy sivers can't date

170
00:12:53,760 --> 00:13:00,300
that so that we have the right move in place and that means that we need to get hold of the last move.

171
00:13:00,300 --> 00:13:05,450
And now you can see we're doing this the referencing of get last move a few too many times in my opinion.

172
00:13:05,520 --> 00:13:11,180
So let's go ahead and do a f and go cart move.

173
00:13:12,360 --> 00:13:14,020
And call it the last move.

174
00:13:14,870 --> 00:13:19,160
Going to just do this outside the IF statements so that we have access to inside all of our statements

175
00:13:19,880 --> 00:13:26,570
and going to replace that with all the blast moves around the place.

176
00:13:26,570 --> 00:13:32,270
So that do the trick now are doing update state with the last move in our Send Moven implementation

177
00:13:32,270 --> 00:13:36,640
we need to pass in the move that was received for updating the service state.

178
00:13:36,860 --> 00:13:38,150
Okay hunky dory.

179
00:13:38,150 --> 00:13:45,710
That seems like it's going to hopefully at this point compile and hopefully even more.

180
00:13:45,710 --> 00:13:48,150
Hopefully it's going to actually work.

181
00:13:49,270 --> 00:13:53,760
K so we've got a little bit of a build area let's have a look at what that's saying.

182
00:13:54,760 --> 00:13:59,800
So it's an error to do with assimulate move cannot convert argument one.

183
00:14:03,960 --> 00:14:07,360
Ah I see the problem here is that we haven't renamed.

184
00:14:07,860 --> 00:14:09,770
Simulate glacier move.

185
00:14:09,870 --> 00:14:15,160
So last move simulate move should simulate the last move and we didn't do that.

186
00:14:15,180 --> 00:14:16,720
So let's build that again.

187
00:14:17,100 --> 00:14:17,400
Okay.

188
00:14:17,400 --> 00:14:18,840
So this time it built successfully.

189
00:14:18,840 --> 00:14:21,030
Let's just check that it's still working.

190
00:14:21,030 --> 00:14:27,390
I'm going to play in the new editor window and I'm going to put it on as proxy on the right and the

191
00:14:27,390 --> 00:14:31,540
authority hopefully on the left.

192
00:14:32,010 --> 00:14:35,000
Let's move the authority around Kate.

193
00:14:35,000 --> 00:14:37,770
That seems to be replicating successfully.

194
00:14:38,100 --> 00:14:42,750
How about I'm sorry I haven't actually read enabled the replication components.

195
00:14:42,750 --> 00:14:48,780
That was just replicating by the slow method and by the fact that the movement not the movement but

196
00:14:48,780 --> 00:14:51,640
the position was being replicated by the actor.

197
00:14:51,690 --> 00:14:56,830
So if we go into the C++ go cart see passed bosson re-enable and movement replicator that would give

198
00:14:56,830 --> 00:14:58,100
us a better indication.

199
00:14:58,980 --> 00:15:01,020
Kate let's try that one more time.

200
00:15:01,900 --> 00:15:03,230
Hit Play.

201
00:15:03,670 --> 00:15:05,850
Put the authority on the left.

202
00:15:05,920 --> 00:15:08,570
The autonomous proxy on the right.

203
00:15:08,580 --> 00:15:12,520
And let's actually drive the autonomous proxy because that's going to be the hard thing to get.

204
00:15:12,520 --> 00:15:13,230
Right.

205
00:15:14,880 --> 00:15:15,360
Okay.

206
00:15:15,360 --> 00:15:19,840
So the autonomous proxy isn't driving which is telling us something might be wrong.

207
00:15:20,640 --> 00:15:21,620
On the whole.

208
00:15:23,670 --> 00:15:29,520
So the reason for that was actually because my go cart needed my blueprint go cart blueprint needed

209
00:15:29,580 --> 00:15:35,910
compiling and saving and if you did that funnily enough and go and play again then we've got control

210
00:15:35,910 --> 00:15:42,060
of the authority and if it drives in front of the autonomous proxy Let's go and do that we can see it

211
00:15:42,090 --> 00:15:44,570
and we can see the replication stuff happening.

212
00:15:44,580 --> 00:15:48,060
What if the autonomous proxy drives in front of the authority.

213
00:15:48,060 --> 00:15:53,190
Well so far it's driving okay yeah it drives nice and smoothly in front of the authority so the code

214
00:15:53,190 --> 00:15:57,720
was correct just we needed to recompile the blueprint of how close that blueprint cause it was being

215
00:15:57,780 --> 00:16:04,050
a little bit having it open sometimes creates problems as we just saw in refresh in the code.

216
00:16:04,050 --> 00:16:10,290
So the final question from the challenge was can we make some methods private Now let's have a look

217
00:16:10,830 --> 00:16:12,630
if we go over to visual studio.

218
00:16:13,400 --> 00:16:16,550
Have we removed any calls that we previously had.

219
00:16:16,550 --> 00:16:20,270
I believe we have removed the call to create move.

220
00:16:20,270 --> 00:16:29,120
So if I go and take and create a signature which was previously public I think I can now move this into

221
00:16:29,120 --> 00:16:35,010
the private section of go kart movement component and hit build and that shouldn't change anything now.

222
00:16:35,060 --> 00:16:40,880
We aren't able to create moves from the outside but instead we're able just to observe the moves that

223
00:16:40,940 --> 00:16:44,000
have happened on the go cart movement component.

224
00:16:44,120 --> 00:16:46,040
Isn't that neat and excellent.

225
00:16:46,040 --> 00:16:47,880
Sure enough that has worked.

226
00:16:47,880 --> 00:16:49,040
So congratulations.

227
00:16:49,040 --> 00:16:55,400
We've now got to thoroughly decoupled Movent component and Movent replicator and a very lightweight

228
00:16:55,460 --> 00:16:56,020
actor.

229
00:16:56,060 --> 00:17:02,890
And I'll see you in the next lecture where we're now free to go ahead and implement that client interpellation.

230
00:17:02,900 --> 00:17:05,400
I was talking about some three lectures ago.
