1
00:00:05,090 --> 00:00:06,820
Hello and welcome in this lecture.

2
00:00:06,980 --> 00:00:12,680
We are going to be looking at more linear interpolation this time we're going to be doing linear interpolation

3
00:00:12,680 --> 00:00:15,930
for rotation also known as slurping.

4
00:00:16,280 --> 00:00:19,980
So it's rude to slurp but not when you're doing it for interpellation.

5
00:00:20,090 --> 00:00:22,010
And here is the results.

6
00:00:22,010 --> 00:00:28,250
You can see it's not perfect but it's certainly looking a lot better than it was before and looks worse

7
00:00:28,280 --> 00:00:31,050
when we're moving faster but when we are moving slowly it looks quite good.

8
00:00:31,160 --> 00:00:38,390
So we're going to be investigating what when this is appropriate to do it in this situation and what

9
00:00:38,720 --> 00:00:40,360
alternatives there might be.

10
00:00:40,400 --> 00:00:43,110
But we're going to figure out how we can do this.

11
00:00:43,250 --> 00:00:46,370
Interpolating over rotation in this lecture.

12
00:00:46,370 --> 00:00:47,640
So let's dive in and find out.

13
00:00:47,660 --> 00:00:48,930
It's all in the last lecture.

14
00:00:48,980 --> 00:00:54,590
How rotation is a missing piece in this linear interpolation puzzle.

15
00:00:54,590 --> 00:00:57,620
That's what we're going to try in fix.

16
00:00:57,620 --> 00:01:03,170
So the first thing we need to understand here is the difference between slurping and learning one sounds

17
00:01:03,170 --> 00:01:04,030
like you've got a limp.

18
00:01:04,040 --> 00:01:07,600
And the other one sounds like you're eating your spaghetti rather noisily.

19
00:01:07,610 --> 00:01:13,640
So the idea of the spaghetti slurping or is that what we are doing a linear interpolation but it's a

20
00:01:13,640 --> 00:01:17,100
spherical linear interpolation and why do you need that.

21
00:01:17,120 --> 00:01:19,020
I he ask let's.

22
00:01:19,520 --> 00:01:27,800
So he on this slide we have got ourselves a pawn or something which is orientated along this arrow.

23
00:01:27,820 --> 00:01:31,950
So the Green Arrow is kind of the forward arrow of the pawn.

24
00:01:32,060 --> 00:01:39,710
And we can say that its initial rotation is this rotation a minus 100 degrees for example I don't know

25
00:01:39,710 --> 00:01:43,280
where this exactly minus 100 degrees but it's good enough.

26
00:01:43,280 --> 00:01:49,760
So basically what we're saying is that the arrow is pointing at this point over here rotated away from

27
00:01:49,850 --> 00:01:57,860
the forward direction and the rotation that we want is positive 90 degrees.

28
00:01:57,950 --> 00:02:03,300
So very much like our Lerp we have an A in A B that we want to interpolate between.

29
00:02:03,650 --> 00:02:06,870
So why can't we just use a slurp on this.

30
00:02:06,980 --> 00:02:15,260
Well part of the reason there is more to it is that if we want to do this Lerp between these two rotations

31
00:02:15,290 --> 00:02:22,420
the logical way that you and I would try and draw an interpolation is like this.

32
00:02:22,460 --> 00:02:25,430
Going from in this case from point B to point A.

33
00:02:25,550 --> 00:02:27,730
But it could be the other way round just as well.

34
00:02:28,280 --> 00:02:31,570
And that thought was going to happen with a loop.

35
00:02:31,610 --> 00:02:33,290
This is what's going to happen with a lap.

36
00:02:33,380 --> 00:02:35,780
It's going to want to go round the other way.

37
00:02:35,780 --> 00:02:38,140
Now can you think of why that might be.

38
00:02:38,150 --> 00:02:39,750
Just have a little thing for yourself.

39
00:02:40,520 --> 00:02:47,720
The reason for this is that nothing about a linear interpolation tells it that a circle wraps around

40
00:02:48,020 --> 00:02:49,490
at 180 degrees.

41
00:02:49,490 --> 00:02:53,900
That is something completely away from those numbers.

42
00:02:54,110 --> 00:03:01,040
So as far as the Lerp is concerned the shortest route from A to B has got to be through zero right.

43
00:03:01,040 --> 00:03:04,100
It's not through 180 and then minus 1 80.

44
00:03:04,160 --> 00:03:10,880
That doesn't make any sense but it does if we use a spherical linear interpolation or a spherical linear

45
00:03:10,880 --> 00:03:16,430
interpolation using something called Quick turning ons kid turning ons are a complicated mathematical

46
00:03:16,430 --> 00:03:18,590
structure which we aren't going to go into any detail with.

47
00:03:18,590 --> 00:03:23,990
I'm sorry if you really were interested in that but you can obviously read up on them for yourself and

48
00:03:24,090 --> 00:03:29,900
quit turning on is very clever and it understands things like 180 degrees like wrapping round itself

49
00:03:30,230 --> 00:03:31,930
and it understands.

50
00:03:32,980 --> 00:03:35,040
All of this in three dimensions.

51
00:03:35,230 --> 00:03:37,270
And it avoids things like gimbel.

52
00:03:37,300 --> 00:03:38,740
It's very very clever.

53
00:03:38,740 --> 00:03:44,450
So anyway the way we do it is using a similar thing to the Lerp but with Queta anybody.

54
00:03:44,710 --> 00:03:49,700
And the point is you aren't going to use your Lerp function.

55
00:03:49,710 --> 00:03:54,670
You're going to use the slope function of attorney ons and how does it look where you can obviously

56
00:03:54,670 --> 00:03:56,050
look up the documentation.

57
00:03:56,050 --> 00:04:00,970
But I'm going to go to a client tic and just show you instead of using F maths we're going to use f

58
00:04:00,970 --> 00:04:02,780
quat colon cancer.

59
00:04:02,800 --> 00:04:09,820
This is a static member of this class and it's f k dot dot chemical and slurp.

60
00:04:09,970 --> 00:04:15,910
And that takes to quit turning ons which are one of the rotation representations in a real which you

61
00:04:15,910 --> 00:04:20,650
probably already know of and a float which they've called slurp it's the same as an owl for it's the

62
00:04:20,650 --> 00:04:22,640
same as our Lerp ratio.

63
00:04:22,750 --> 00:04:27,320
So very easily it should be possible to go ahead and do something like this.

64
00:04:27,430 --> 00:04:34,090
So the thing that I notice however is that now we are storing or going to want to store both location

65
00:04:34,480 --> 00:04:39,700
and rotation you can see here we've got our start location is the clients start location we're going

66
00:04:39,700 --> 00:04:43,040
to need to do something very similar with the rotation as well.

67
00:04:43,180 --> 00:04:45,730
So now you've got location and rotation.

68
00:04:45,730 --> 00:04:52,420
This is starting to look like a not a client start location but clients start transform instead so that's

69
00:04:52,420 --> 00:04:53,420
what we're going to go with.

70
00:04:53,440 --> 00:05:02,270
Let's go up to a go cart movement replicator dot H and change the client location to a client transform.

71
00:05:02,970 --> 00:05:09,110
Or at least change the name to that and change from F vector to f transform as well.

72
00:05:10,040 --> 00:05:14,780
Like so and we can go ahead and copy this variable cause we're going to use in a couple places.

73
00:05:14,900 --> 00:05:21,950
First place to use it is here the clients start location clients stock location dot and get location

74
00:05:22,010 --> 00:05:24,200
will do exactly the trick that we want.

75
00:05:24,190 --> 00:05:27,150
You can see exactly like we've done it for at Target location.

76
00:05:27,150 --> 00:05:30,050
So there we got the transform on the client on the service date.

77
00:05:30,050 --> 00:05:33,900
Here we're doing it saving it the client start transform.

78
00:05:34,160 --> 00:05:34,610
Okay.

79
00:05:34,910 --> 00:05:36,710
So that's all good.

80
00:05:36,710 --> 00:05:41,330
Now where else do we currently use that let's remove slurp for now you've seen what that looks like

81
00:05:41,330 --> 00:05:44,200
and you can find the documentation for yourselves.

82
00:05:44,210 --> 00:05:48,800
Now let's go down to our simulated proxy on rep service state.

83
00:05:48,800 --> 00:05:49,680
There it is.

84
00:05:49,970 --> 00:05:58,250
And in here instead of setting the client start location we're going to get owner and set the transform

85
00:05:58,280 --> 00:06:04,660
and we instead of getting the act a location we can just get the actor transform like.

86
00:06:04,680 --> 00:06:10,250
So in that should do the trick it should get both the rotation and the location for us to use later

87
00:06:10,250 --> 00:06:11,820
on and get to build it just to make sure.

88
00:06:11,810 --> 00:06:15,620
But I'm fairly sure that is going to compile.

89
00:06:15,690 --> 00:06:22,640
So on to implementing the slurps location but Opus One second we do have a build area let's figure out

90
00:06:23,150 --> 00:06:30,480
where that is the first build error is here with the client transform equal.

91
00:06:30,560 --> 00:06:35,140
I seem to have somehow managed to delete a bracket.

92
00:06:36,430 --> 00:06:43,290
Oh and also called it at a location transform has changed both of those and build again.

93
00:06:44,530 --> 00:06:48,300
Okay so let's take a look at your challenge definition.

94
00:06:48,430 --> 00:06:54,930
You're going to slurp the rotation so you're going to do this all by yourself is very similar to learning

95
00:06:55,000 --> 00:06:56,380
the location.

96
00:06:56,380 --> 00:07:01,160
And so what we're going do is repeat the pattern that you have already seen.

97
00:07:01,180 --> 00:07:09,480
We're going to use f quat slurp instead of the F maths Lerp or Lerp stable here there is no slurps label.

98
00:07:09,490 --> 00:07:11,460
You don't need to do that.

99
00:07:11,530 --> 00:07:14,410
Then you don't do anything differently and test it.

100
00:07:14,410 --> 00:07:17,160
Basically not a whole heck of a lot to do that.

101
00:07:17,470 --> 00:07:22,790
Okay so let's dive in and see the solution to this challenge.

102
00:07:23,050 --> 00:07:24,490
So it's going to be fairly straightforward.

103
00:07:24,490 --> 00:07:30,070
In fact I'm going to be mostly copying and pasting code and the way I'm going to do this is I'm going

104
00:07:30,070 --> 00:07:36,680
to basically copy all of this target location from Target location to get owner.

105
00:07:36,880 --> 00:07:42,550
I am going to copy it and we're going to make a duplicate copy loops.

106
00:07:43,340 --> 00:07:46,350
Over selected it seems so.

107
00:07:46,430 --> 00:07:48,050
Let's try again.

108
00:07:48,470 --> 00:07:55,750
And instead of target location we're going to go with a target a rotation instead.

109
00:07:56,070 --> 00:08:02,200
And we're gonna do that same thing for both our start location as well.

110
00:08:02,210 --> 00:08:06,800
And our new location are both we come rotations.

111
00:08:07,320 --> 00:08:12,460
Also at transformed or gets location will become transformed or get rotation.

112
00:08:12,480 --> 00:08:20,430
Same thing goes for clients start to transform or get rotation and then what we've got an Lerp ratio

113
00:08:20,430 --> 00:08:22,080
we don't want to redefine that.

114
00:08:22,080 --> 00:08:28,710
We've already got one ratio that's good enough and we can set acthar location to act a rotation from

115
00:08:28,720 --> 00:08:31,450
our New rotation as well.

116
00:08:31,440 --> 00:08:33,720
Now ain't going to be happy about this.

117
00:08:33,970 --> 00:08:39,990
If we hover over it we can see that it's saying that we can't convert between f quat an F vector which

118
00:08:39,990 --> 00:08:43,190
is understandable because they are two completely different things.

119
00:08:43,200 --> 00:08:50,330
So we're going to swap out the types for Target rotations start rotation in New rotation with F quiet.

120
00:08:50,700 --> 00:08:57,640
And now we're going to get the complaint that Lerp stable isn't happy trying to do things over our f

121
00:08:57,660 --> 00:08:58,830
quotes.

122
00:08:58,860 --> 00:09:06,330
So instead what we're going to do is what we've already shown you which is the f quote colon colon slurp

123
00:09:06,570 --> 00:09:08,540
instead of the Lerp.

124
00:09:08,640 --> 00:09:15,120
I love these functions they have such funny and almost memorable names not completely memorable sort

125
00:09:15,120 --> 00:09:15,940
of memorable.

126
00:09:15,960 --> 00:09:21,480
There's lots of other funny ones as well as another type of rotation with Eternium that you can do called

127
00:09:21,480 --> 00:09:22,500
squad.

128
00:09:22,560 --> 00:09:24,160
And I just love that.

129
00:09:24,290 --> 00:09:31,190
And that you've got squads slurp and Lerp anyway funny's zoo of different types of interpellation.

130
00:09:31,980 --> 00:09:34,400
So let's go ahead and build that.

131
00:09:34,410 --> 00:09:36,960
I believe that is all we need to do in this challenge.

132
00:09:36,960 --> 00:09:39,730
Fairly easy compared with the last couple of challenges.

133
00:09:39,810 --> 00:09:43,070
So you probably had a little bit of risk spiked with this one.

134
00:09:43,110 --> 00:09:50,490
Now let's go ahead and see when it's finished building whether this has had a good impact on our rotations.

135
00:09:50,920 --> 00:10:01,110
Well so built at least let's go into the edit hit play get our authority and our client side by side

136
00:10:01,890 --> 00:10:07,780
excuse the mess of my windows and I am going to move my authority around and you can see the rotation

137
00:10:07,780 --> 00:10:09,450
is definitely updating.

138
00:10:09,450 --> 00:10:11,100
It looks a bit funky.

139
00:10:11,370 --> 00:10:19,260
And if you aren't able to pinpoint why it looks funky it's because the car occasionally moves sideways

140
00:10:19,260 --> 00:10:23,490
across its rotation there's nothing that pins its rotation to its velocity.

141
00:10:23,490 --> 00:10:27,480
So sometimes it kind of seems to float across the ground.

142
00:10:27,720 --> 00:10:34,330
Now this is a problem in a car based game but it may not be a problem for other types of movement component

143
00:10:34,340 --> 00:10:39,890
do remember that this is all dependent on the type of movement that you want to achieve for cars.

144
00:10:39,900 --> 00:10:41,950
We're thinking about one consideration.

145
00:10:42,120 --> 00:10:47,880
But if you have a character the fact that it moves sideways and Straight's is not at all a problem your

146
00:10:47,880 --> 00:10:53,430
animation can deal with the fact that it's moving sideways and make it look natural even if that wasn't

147
00:10:53,430 --> 00:10:55,490
what the play was actually doing on the server.

148
00:10:55,490 --> 00:10:57,740
If it looks natural everything is fine.

149
00:10:57,750 --> 00:11:01,490
So that's one thing to consider this might be good enough for you.

150
00:11:01,530 --> 00:11:03,750
Also we have very few updates.

151
00:11:03,750 --> 00:11:09,600
So the fact that it looks like it's suddenly changing direction would be much less.

152
00:11:09,630 --> 00:11:16,800
And by having more updates in general so think about that as well as not necessarily bad to be doing

153
00:11:16,800 --> 00:11:19,200
linear interpolation but we can do better.

154
00:11:19,320 --> 00:11:24,720
We can do better than these sudden changes of direction by using non-linear interpellation things like

155
00:11:25,020 --> 00:11:29,460
kubik interpolation for example and that's going to be the subject of future lectures.

156
00:11:29,490 --> 00:11:33,220
So I'll leave it there and I will see you in the next lectures.
