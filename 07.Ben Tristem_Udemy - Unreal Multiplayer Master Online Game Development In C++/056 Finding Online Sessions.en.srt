1
00:00:04,460 --> 00:00:06,410
Hello and welcome this lecture.

2
00:00:06,470 --> 00:00:09,320
We are going to be producing a very exciting output again.

3
00:00:09,320 --> 00:00:13,820
I'm afraid it's going to be just some couple of luck messages but it's going to tell us that we are

4
00:00:13,820 --> 00:00:18,060
starting to find sessions and finishing finding sessions at different times.

5
00:00:18,380 --> 00:00:20,120
And it's going to be a delay between the two.

6
00:00:20,120 --> 00:00:24,410
Let me show you in fact if I go ahead and play then it's starting to find sessions.

7
00:00:24,420 --> 00:00:25,320
We're waiting for it.

8
00:00:25,320 --> 00:00:30,170
Find sessions waiting for it to find sessions and it has finished finding sessions so we are going to

9
00:00:30,170 --> 00:00:35,450
be doing this a synchronized operation of finding sessions and that is going to be the first step in

10
00:00:35,450 --> 00:00:40,910
the process or actually being able to list out the session that we have created perhaps on another game

11
00:00:40,940 --> 00:00:42,570
and perhaps across the land.

12
00:00:42,710 --> 00:00:44,910
So let's dive in and see how it's done.

13
00:00:46,080 --> 00:00:52,830
So now that we are able to create our sessions the next logical thing to do is to be able to find said

14
00:00:52,890 --> 00:00:57,450
SESSIONS So let's figure out how to do that with the help of our documents.

15
00:00:57,810 --> 00:01:04,080
You can find the link in there your resources and we're going to be using FIND sessions online session

16
00:01:04,080 --> 00:01:05,070
now to use this.

17
00:01:05,070 --> 00:01:11,580
We need to understand a little bit about 80 shared Reff we've seen T shed winter shared Reff is very

18
00:01:11,580 --> 00:01:19,170
similar to tea shared pointer except that it cannot be NULL unlike a pointer very much like the distinction

19
00:01:19,170 --> 00:01:26,010
between a standard pointer in C++ and a reference a shared reference is exactly the same it cannot be

20
00:01:26,010 --> 00:01:31,180
NULL it has to have it has to be pointing to something on the heap.

21
00:01:31,800 --> 00:01:34,650
Okay so that is what we're going to need to know about.

22
00:01:34,650 --> 00:01:38,970
The reason is because Find Sessions is going to take the searching play number which again we're going

23
00:01:38,970 --> 00:01:41,490
to be just using the player zero for that.

24
00:01:41,490 --> 00:01:46,250
But it also takes the search settings and the search settings.

25
00:01:46,290 --> 00:01:53,910
Basically you need to live longer than just the find more basic for the duration of find sessions so

26
00:01:53,940 --> 00:02:00,840
it needs to be there on the heap because that's where the results are of the session search are going

27
00:02:00,840 --> 00:02:01,800
to be put.

28
00:02:02,070 --> 00:02:07,740
And then we need to basically manage that somehow so we're going to manage it using a reference counting

29
00:02:07,830 --> 00:02:14,310
because we don't want all the bulk of having to put it in a big you object and having to deal with that

30
00:02:14,730 --> 00:02:17,630
on with garbage collection basically.

31
00:02:17,640 --> 00:02:19,930
So we're doing it with reference counting instead.

32
00:02:20,160 --> 00:02:25,230
So without further ado let's dive into the code and see if we can actually implement this so Im going

33
00:02:25,230 --> 00:02:29,480
to be doing this on it because at the moment we dont have a better place for it.

34
00:02:29,490 --> 00:02:34,500
Were going to work on having a better place for it but for now let's stick with it.

35
00:02:34,540 --> 00:02:40,350
I'm going to just put it here after we've checked that assertion interfaces valid we've been putting

36
00:02:40,470 --> 00:02:41,720
our call-backs.

37
00:02:41,730 --> 00:02:50,970
I'm also going to do the find session so session interface find session auge Swan and emphasized were

38
00:02:50,970 --> 00:02:55,890
just doing it here for testing purposes for being able to get it to the stage where we've got something

39
00:02:55,890 --> 00:03:01,890
useful and then we can wrap this all up in a nice interface which actually shows the servers available

40
00:03:01,920 --> 00:03:04,850
and gives us the opportunity to join them doesn't it.

41
00:03:05,200 --> 00:03:13,020
OK so we've got fine sessions Zerah with search and play at zero and then we are going to create a t

42
00:03:13,070 --> 00:03:14,660
shared a ref.

43
00:03:14,730 --> 00:03:18,160
Okay so how are we going to create this Tiche ref.

44
00:03:18,400 --> 00:03:24,900
Well for that I have two documentation pages for you the shared reference page which tells you basically

45
00:03:24,900 --> 00:03:29,640
a lot about the shared reference and tells you how you had to construct it with something it can't be

46
00:03:29,640 --> 00:03:31,840
now fairly straightforward.

47
00:03:31,850 --> 00:03:37,450
But it also at the bottom tells you about the two shared ref.

48
00:03:37,500 --> 00:03:43,140
So that's basically saying that if you have a pointer then you can convert it into a reference as long

49
00:03:43,140 --> 00:03:45,970
as you're sure that it isn't NULL.

50
00:03:46,110 --> 00:03:49,020
So that's what we are going to be using.

51
00:03:49,020 --> 00:03:50,160
We're going to be creating first.

52
00:03:50,160 --> 00:03:56,360
A shared pointer and I want to show you another aspect of shared pointers that we can use.

53
00:03:56,370 --> 00:04:01,320
And I'll do that after I've created the pain after we've seen what the issue is.

54
00:04:01,320 --> 00:04:07,440
Well the issue is that I want to create this session and I'm in to live longer needs to live until a

55
00:04:07,710 --> 00:04:13,780
delegate is called so is going to need to be created at the class level.

56
00:04:13,780 --> 00:04:18,380
So I'm going to create it in as a private thing and what's the time.

57
00:04:18,380 --> 00:04:26,490
Well let's go and have a look at the F online session it's going to be a shared pointer to an F online

58
00:04:27,000 --> 00:04:28,550
session search.

59
00:04:28,740 --> 00:04:34,830
So going to get that online search session search it's going to be a tea shared pointer.

60
00:04:34,980 --> 00:04:40,530
Then we are going to have a template argument which is going to be the f online session search and it's

61
00:04:40,530 --> 00:04:47,960
not too short pointer but teacher P are revision for pointer and we're going to call this the sessions

62
00:04:48,060 --> 00:04:48,670
each.

63
00:04:50,660 --> 00:04:52,710
So that's a session cert by default.

64
00:04:52,710 --> 00:04:54,450
It's going to be null.

65
00:04:54,510 --> 00:04:56,730
Kurtz We haven't signed anything to it.

66
00:04:57,150 --> 00:04:58,590
And then what are we going to do.

67
00:04:58,590 --> 00:05:02,590
Well we are going to assign to it so sessions search.

68
00:05:03,520 --> 00:05:05,860
Is going to be equal to.

69
00:05:06,580 --> 00:05:10,960
And this is the interesting point because I can't just set it equal to a new.

70
00:05:11,410 --> 00:05:12,710
What was that type again.

71
00:05:12,730 --> 00:05:14,530
I can to have it in my paste buffer.

72
00:05:14,540 --> 00:05:17,170
Yep f online session search.

73
00:05:17,170 --> 00:05:22,210
I cant just do that by the way the new key word create something on the heap if you haven't seen that

74
00:05:22,210 --> 00:05:22,930
before.

75
00:05:23,020 --> 00:05:29,770
It's just saying don't make this f online session search here on the stack but make it on the heap and

76
00:05:29,800 --> 00:05:36,250
is actually giving us an error about that because we can't just assign that to a shared pointer.

77
00:05:36,250 --> 00:05:39,370
We need to wrap it and how do we wrap it.

78
00:05:39,370 --> 00:05:42,080
Well that's also in the documentation for the shared pointer.

79
00:05:42,100 --> 00:05:51,430
You just need to wrap it in a make shareable method which will take any standard C++ pointer and convert

80
00:05:51,430 --> 00:05:55,460
it in to a reference counted pointer for real.

81
00:05:55,660 --> 00:06:01,630
So we're going to use that make sharable wrapper to achieve that and then we're going to pass the session

82
00:06:01,630 --> 00:06:08,470
search object in to the session interface and let's see if that works and just hitting the build button

83
00:06:08,500 --> 00:06:10,420
and see if it succeeds.

84
00:06:12,500 --> 00:06:17,780
Okay no we've got some errors so let's have a look at the output log the output log.

85
00:06:17,790 --> 00:06:19,340
He is telling us.

86
00:06:21,850 --> 00:06:24,360
I think that's not the beginning of the output log.

87
00:06:24,370 --> 00:06:25,380
Go quite wait.

88
00:06:25,510 --> 00:06:31,590
Okay the output log is telling us the f online session search is under a cloud identifier.

89
00:06:31,620 --> 00:06:33,600
Go to the line it's complaining about.

90
00:06:33,610 --> 00:06:38,620
It's actually in the head a file that it's saying the F online session search is not there.

91
00:06:38,620 --> 00:06:44,740
So what we need to do is means do a forward declaration and hope that in the C++ file everything is

92
00:06:44,740 --> 00:06:45,890
going to be hunky dory.

93
00:06:47,070 --> 00:06:51,370
Okay yet more errors Let's have a look at the output log and see what these are about.

94
00:06:51,630 --> 00:06:56,350
So the first line of error which I think is relevant here.

95
00:06:57,130 --> 00:06:58,610
Is saying.

96
00:06:59,510 --> 00:07:06,020
Cannot convert argument to from t shared pointer to t shared Reff.

97
00:07:06,320 --> 00:07:11,700
That is because I have tried to pass a shared pointer in instead of a shared ref.

98
00:07:11,720 --> 00:07:16,910
So what we need to do is first check whether it is valid and then we can convert it to it.

99
00:07:16,970 --> 00:07:19,710
Right so we're going to do an if session.

100
00:07:21,290 --> 00:07:24,970
And spelled properly search is valid.

101
00:07:26,260 --> 00:07:33,420
Then we will be able to convert it to a reference and subsequently find the session.

102
00:07:33,430 --> 00:07:40,100
So it's going to be sessions search dot to shared Reff which is in that documentation that I linked

103
00:07:40,120 --> 00:07:41,100
you to.

104
00:07:41,230 --> 00:07:46,480
And if we go and build that we should be able to.

105
00:07:46,930 --> 00:07:51,010
Should be building just fine and we should be trying to create a session.

106
00:07:51,460 --> 00:07:55,540
Okay the builder succeeded but obviously we're not going to see anything at this point so it's going

107
00:07:55,540 --> 00:08:01,260
to be your challenge to handle on file in session complete delegates and a going to do that.

108
00:08:01,260 --> 00:08:07,270
Are you going to print on find complete So when the find session has completed you are going to need

109
00:08:07,270 --> 00:08:11,350
to find the type of the delegates you're going to need to register for call-backs and you're going to

110
00:08:11,350 --> 00:08:17,470
need to print out from that call back to test that find was indeed called correctly and that the result

111
00:08:17,470 --> 00:08:18,550
coming it came out.

112
00:08:18,550 --> 00:08:24,190
You can even print when you start finding and when you stop finding so you can see how long it takes.

113
00:08:24,190 --> 00:08:25,400
It's kind of interesting.

114
00:08:25,400 --> 00:08:26,270
Pause the video.

115
00:08:28,310 --> 00:08:31,860
Okay welcome back I hope you post pulls a video and it stopped.

116
00:08:31,880 --> 00:08:34,010
I told you rather suddenly didn't I rather strict.

117
00:08:34,040 --> 00:08:34,750
Didn't mean to.

118
00:08:35,000 --> 00:08:37,060
Okay so let's start off by printing.

119
00:08:37,070 --> 00:08:38,980
When we start the final session.

120
00:08:38,980 --> 00:08:46,130
So let's take a log message any log message and paste it in here so I'm going to do a log temp warning.

121
00:08:46,250 --> 00:08:50,710
Starting to find session starting.

122
00:08:50,750 --> 00:08:52,380
I call it starting.

123
00:08:52,380 --> 00:08:54,340
Find session.

124
00:08:56,740 --> 00:09:00,790
And I will go ahead and remove everything after that.

125
00:09:02,100 --> 00:09:04,440
So now we know when the session is starting.

126
00:09:04,440 --> 00:09:07,980
We know that our session search is valid.

127
00:09:07,980 --> 00:09:10,980
Next up we are going to get that call back.

128
00:09:11,010 --> 00:09:13,620
So what is the call-back called.

129
00:09:13,620 --> 00:09:15,630
Well you can find it in I online session.

130
00:09:15,630 --> 00:09:23,160
I'm not going to teach you to suck grapes or eggs or whatever the saying is and we're going to do a

131
00:09:23,160 --> 00:09:28,750
session interface arrow on find.

132
00:09:29,610 --> 00:09:31,910
Sessions are complete delegates.

133
00:09:32,100 --> 00:09:38,090
Then we're going to add the you object or add this and we need to create ourselves a function.

134
00:09:38,090 --> 00:09:42,820
So let's go over to the head of far and create something new and going to copy basically a delegate.

135
00:09:42,830 --> 00:09:45,220
The on destroy session complete.

136
00:09:45,240 --> 00:09:49,120
I'm going to change it to on find a sessions.

137
00:09:49,500 --> 00:09:54,200
There we go on fine sessions complete and then it's going to take.

138
00:09:54,210 --> 00:09:55,350
What's it going to take.

139
00:09:55,350 --> 00:10:01,620
Well if you look in the documentation you'll find that it only takes these success because the list

140
00:10:01,680 --> 00:10:05,700
of found Sessions is actually in that session search t shared point.

141
00:10:05,700 --> 00:10:08,940
So it doesn't need to send that with it as well.

142
00:10:09,180 --> 00:10:13,150
So I'm going to copy this take it over to the C plus plus file where we're going to implement it.

143
00:10:13,170 --> 00:10:14,680
I'm going to implement it.

144
00:10:14,700 --> 00:10:18,230
Let's see just after our on creates session complete.

145
00:10:18,260 --> 00:10:25,640
Maybe well do it and I will implement the body and I'll remove the semicolon and I will add the name

146
00:10:25,640 --> 00:10:26,510
space.

147
00:10:28,320 --> 00:10:28,760
Okay.

148
00:10:28,800 --> 00:10:37,000
And then we are going to copy our log message for brevity and change it from starting to finishing.

149
00:10:37,890 --> 00:10:43,720
I can find a thing I just wrote back then it's going to be finished.

150
00:10:45,990 --> 00:10:47,020
Find session.

151
00:10:47,040 --> 00:10:48,970
Okay so that is great.

152
00:10:48,970 --> 00:10:55,440
We've got on find session complete finished fine session and hopefully that's all gonna work out.

153
00:10:55,440 --> 00:11:01,800
Let's go ahead and at no we don't want to build just yet because we want to have the address of that

154
00:11:01,800 --> 00:11:03,670
function.

155
00:11:03,810 --> 00:11:13,440
So let's get the fully names based on find session complete and do the address of operator on that fully

156
00:11:13,440 --> 00:11:18,340
names based function and pass that in to add you object.

157
00:11:18,360 --> 00:11:21,700
Okay so let's go ahead and build now.

158
00:11:22,140 --> 00:11:26,490
Okay the build has successfully completed Let's go over into one real and see whether we were successful

159
00:11:26,520 --> 00:11:31,670
in achieving what we wanted to starting find Sessions has been logged out here.

160
00:11:31,680 --> 00:11:36,770
And that's see and finished fine session so you can see that there is a bit of a delay between the two

161
00:11:36,780 --> 00:11:39,350
in fact a few logged messages are coming in between the two.

162
00:11:39,360 --> 00:11:41,680
So there's starting find session.

163
00:11:42,480 --> 00:11:47,520
And then finished final etc. So it does actually take a little bit of time because it is waiting for

164
00:11:47,520 --> 00:11:51,500
a while to see whether it's got all the sessions until it is returning.

165
00:11:51,520 --> 00:11:56,360
So that is showing us that we are calling find sessions correctly in the next lecture.

166
00:11:56,370 --> 00:12:02,400
We are going to go in to actually reading the results of find session and printing them out and making

167
00:12:02,400 --> 00:12:04,950
sure that we are able to find the game.

168
00:12:04,960 --> 00:12:08,740
The session we have created using FIND session I will see you there.
