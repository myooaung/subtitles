WEBVTT
1
00:00:04.710 --> 00:00:08.670
Hello and welcome in this Lecture lecture we've finally been waiting for where we're going to be able

2
00:00:08.670 --> 00:00:11.190
to get smooth movement on our autonomous proxy.

3
00:00:11.190 --> 00:00:16.740
So what's going to happen is if I set my lag really high and move around with the autonomous proxy you

4
00:00:16.740 --> 00:00:20.910
can see that I'm not really experiencing any lag on the autonomous proxy's side at all.

5
00:00:20.970 --> 00:00:26.040
Even though there is lag between the server and let me prove it to you if I go and sit myself in front

6
00:00:26.100 --> 00:00:31.890
of these simulated proxy in fact who might already be seeing the lag but if I sit in front of the autonomous

7
00:00:32.340 --> 00:00:34.530
sorry the server and stop.

8
00:00:35.250 --> 00:00:36.470
Kate you can see some lag there.

9
00:00:36.600 --> 00:00:39.940
But if I go and accelerate you can see my acceleration happens much sooner.

10
00:00:39.940 --> 00:00:42.190
On the autonomous proxy than on the server.

11
00:00:42.480 --> 00:00:50.220
But I am able to stay ahead of the server on the autonomous proxy and thus I'm able to control it really

12
00:00:50.220 --> 00:00:52.120
nice and fluidly rather than before.

13
00:00:52.160 --> 00:00:58.800
How we got reset back constantly So let's dive in and see how we make this last step towards getting

14
00:00:58.800 --> 00:01:00.850
this result right.

15
00:01:00.840 --> 00:01:04.260
Finally onto the good stuff of actually fixing this bug.

16
00:01:04.380 --> 00:01:10.990
At long last we are going to be simulating all the moves that have been unacknowledged locally.

17
00:01:11.010 --> 00:01:16.200
So that is going to be the very last piece of this pseudo code puzzle it's taken us a few lectures to

18
00:01:16.200 --> 00:01:21.090
get there that hopefully we've broken it down in a way that's understandable and that we've been able

19
00:01:21.090 --> 00:01:24.360
to chew on him bite sized chunks.

20
00:01:24.420 --> 00:01:29.460
That's the point that these pseudocode even though you know the names didn't agree in the end and some

21
00:01:29.460 --> 00:01:31.410
of it had to was a bit more subtle.

22
00:01:31.410 --> 00:01:35.640
It gave us a really nice overview and structure of where we were heading.

23
00:01:35.650 --> 00:01:41.700
So last step to replay slash simulate any unacknowledged moves well hopefully at this stage it's going

24
00:01:41.700 --> 00:01:47.520
to be really simple for us because we're doing this as it's said here on receiving the service state.

25
00:01:48.030 --> 00:01:50.210
We've just cleared all the acknowledged move.

26
00:01:50.220 --> 00:01:51.640
So what we want to do now.

27
00:01:51.750 --> 00:01:57.130
And we have reset as you can see here the velocity and the set act transform has reset the state.

28
00:01:57.330 --> 00:02:01.560
So what we want to do now is replay all the moves and that should be fairly straight forward.

29
00:02:01.560 --> 00:02:08.020
We can actually copy the for loop that we've already created over all the moves and it's here and clear.

30
00:02:08.040 --> 00:02:14.670
Knowledge moves and we can go in to on rep state and I should say actually at this point if you know

31
00:02:14.760 --> 00:02:19.050
how to do those balls of video and give it a shot because there's a little mini challenge that I'm sure

32
00:02:19.050 --> 00:02:19.770
you could do.

33
00:02:20.820 --> 00:02:27.800
Okay so if you have paused or are carrying on with me let's go ahead and implement it so we've got this

34
00:02:27.800 --> 00:02:32.240
move and what we essentially want to do is go ahead and simulate move.

35
00:02:32.360 --> 00:02:34.030
So and just give it the move.

36
00:02:34.170 --> 00:02:37.090
And that's basically all we want to do in this loop.

37
00:02:37.090 --> 00:02:42.160
Just go over all the moves that have been you know not acknowledged yet we've cleared them on all the

38
00:02:42.240 --> 00:02:42.970
knowledge moves.

39
00:02:43.130 --> 00:02:49.550
So we have got everything since the last move and we want to go ahead and simulate.

40
00:02:49.580 --> 00:02:50.840
So that's what we'll do.

41
00:02:50.870 --> 00:02:54.960
But if I go ahead and build at this point I think I would get an error.

42
00:02:56.250 --> 00:02:56.960
No it doesn't.

43
00:02:57.060 --> 00:03:02.430
So actually the reason I was thinking it was going to fail is because simulate move takes an F go cart

44
00:03:02.450 --> 00:03:09.270
move that is not cancer but I just realized that it's not a reference so it's fine because what will

45
00:03:09.270 --> 00:03:12.100
happen here is it'll take a copy of the move.

46
00:03:12.120 --> 00:03:13.410
That's what it's saying here.

47
00:03:13.410 --> 00:03:15.040
Well we can make this better.

48
00:03:15.060 --> 00:03:18.620
We can make sure that simulate moved and that she'd take a copy of the move at all.

49
00:03:18.690 --> 00:03:23.940
It can just take a reference to it and it can take a constant reference because it doesn't need to change.

50
00:03:23.940 --> 00:03:26.150
The move is just simulating it after all.

51
00:03:26.160 --> 00:03:31.350
So we're going to go ahead and change that signature both in the head of file and we've already changed

52
00:03:31.350 --> 00:03:33.900
it in the C plus plus or at least I just did.

53
00:03:34.140 --> 00:03:39.030
And that should also compile just fine now that we're just passing this reference and the move rather

54
00:03:39.030 --> 00:03:44.490
than having to copy it around in memory all the time just you know it probably doesn't make much of

55
00:03:44.490 --> 00:03:45.470
a difference to the performance.

56
00:03:45.480 --> 00:03:47.310
But it's a good habit to get into.

57
00:03:47.520 --> 00:03:50.150
And hey that should be our Sudoku pretty much implemented.

58
00:03:50.150 --> 00:03:53.480
Let's go into the unreel editor and have a little play.

59
00:03:53.490 --> 00:03:54.810
So we're going to go ahead and play.

60
00:03:54.810 --> 00:03:59.140
I'm going to go over to my autonomous proxy screen.

61
00:03:59.190 --> 00:04:05.560
I'm going to open up the console set inordinately high lag and just drive around.

62
00:04:06.770 --> 00:04:07.820
Oh my word.

63
00:04:07.820 --> 00:04:11.170
I'm driving around without any lag whatsoever.

64
00:04:11.300 --> 00:04:17.810
I'm crashing into objects that's fine but I'm driving around and hopefully when I have done doing the

65
00:04:18.140 --> 00:04:23.510
obstacle course I'm not doing it badly as you can see I'm not driving I'm not hitting these posts particularly

66
00:04:23.510 --> 00:04:24.000
well.

67
00:04:24.140 --> 00:04:30.020
But when I come back in front of the THOMAS Well the server you can see that the server still thinks

68
00:04:30.050 --> 00:04:32.790
I'm in exactly the correct place.

69
00:04:32.870 --> 00:04:34.300
So I'm pretty happy with that.

70
00:04:34.300 --> 00:04:39.670
What we've got here is moves being sent up to the server and the servers kept authority.

71
00:04:39.770 --> 00:04:43.090
But for the moves that we know we're ahead of the server.

72
00:04:43.220 --> 00:04:49.910
We are the ones who are replaying those moves on top of the authority of the server exactly the solution

73
00:04:49.910 --> 00:04:54.630
that we had been outlining in our pseudocode to the pseudocode is done.

74
00:04:55.870 --> 00:04:59.800
And we've just tested it for smoothness it is indeed now nice and smooth.

75
00:04:59.800 --> 00:05:02.960
There's no horrible glitching which I'm really really happy with.

76
00:05:03.190 --> 00:05:05.260
But there is one problem.

77
00:05:05.440 --> 00:05:11.100
Well there's not really a problem so much as surely we can still glitch how can we still collect.

78
00:05:11.420 --> 00:05:14.670
And that is the challenge for you to make it glitch.

79
00:05:14.680 --> 00:05:17.350
There should be a way to make it clear glutting is still possible.

80
00:05:17.350 --> 00:05:21.070
If we disagree with the server remember the server retains its authority.

81
00:05:21.130 --> 00:05:26.470
So if we at any point disagree with a service simulation then we are going to have to glitch because

82
00:05:26.470 --> 00:05:29.210
we are the client and we are slaves to the server.

83
00:05:29.260 --> 00:05:35.170
The service has goes that's like everything the customer says get and I'd like you to go ahead and brainstorm

84
00:05:35.200 --> 00:05:36.820
why we might disagree with the server.

85
00:05:36.820 --> 00:05:41.020
What are some situations in which the server might know something we didn't know yet.

86
00:05:41.020 --> 00:05:42.220
Think about that.

87
00:05:42.280 --> 00:05:48.400
Go ahead and share a list of your thoughts on the forum and if possible try and reproduce such a glitch.

88
00:05:48.400 --> 00:05:50.580
Try and get it on film even better.

89
00:05:50.570 --> 00:05:53.950
You know record it with something like snag it OR CAM Tasia.

90
00:05:53.950 --> 00:05:57.940
That's what I use but I'm sure it's lots of free recording software out there as well and share it on

91
00:05:57.940 --> 00:06:03.070
YouTube and better in the forum posts just to show people examples of your glitch that you've been able

92
00:06:03.070 --> 00:06:07.450
to find I'd be really interested to see if you find glitches that I haven't been able to find or haven't

93
00:06:07.450 --> 00:06:11.410
been able to reproduce so pause a video and have a go at re creating a glitch.

94
00:06:13.640 --> 00:06:15.010
Okay welcome back.

95
00:06:15.020 --> 00:06:23.210
So one example of why we might glitch is if the server knows where the position of another client is

96
00:06:23.360 --> 00:06:24.560
before we were there.

97
00:06:24.560 --> 00:06:31.940
So if we are going in for a head on collision then there may actually be a collision that occurs earlier

98
00:06:32.900 --> 00:06:36.880
because we haven't yet received the new position of a client.

99
00:06:36.950 --> 00:06:40.550
So let's go ahead and see if we can reproduce this is going to be a little bit tricky.

100
00:06:40.570 --> 00:06:44.540
So bear with me we are going to have a little bit of difficulty setting this up.

101
00:06:44.570 --> 00:06:49.820
So one thing I'm going to do is I'm going to drive the authority in front of.

102
00:06:50.770 --> 00:06:52.360
Okay that's a little bit weird.

103
00:06:52.360 --> 00:06:56.320
The authority is moving in a rather strange way indeed.

104
00:06:56.850 --> 00:07:03.030
Yes definitely definitely moving rather strangely moving much faster than we would expect.

105
00:07:03.060 --> 00:07:07.530
So that's a little bit of a bug that we're going to have to tackle isn't it.

106
00:07:07.530 --> 00:07:08.890
Let's go and see.

107
00:07:08.910 --> 00:07:13.740
That's definitely happening but I think we might be able to still reproduce the in spite of this we're

108
00:07:13.740 --> 00:07:16.080
going to look at the bugs in the next lecture.

109
00:07:16.380 --> 00:07:23.730
So I'm going to accelerate my authority forward and quickly switch to the autonomous proxy and try and

110
00:07:23.730 --> 00:07:25.380
collide with it.

111
00:07:28.240 --> 00:07:29.240
That didn't work.

112
00:07:29.260 --> 00:07:33.430
Didn't get any glitching there because the authority slowed down a little bit too quickly.

113
00:07:33.430 --> 00:07:36.260
Let's get these side by side so they're easier to see.

114
00:07:37.090 --> 00:07:41.000
K so we've got our authority now on that right.

115
00:07:42.650 --> 00:07:47.130
Let's go ahead and switch to the authority and try and drive it.

116
00:07:48.120 --> 00:07:49.460
Maybe a bit slower.

117
00:07:50.360 --> 00:07:53.910
In front of our autonomous proxy.

118
00:07:55.550 --> 00:07:58.740
And we'll give it a bit of momentum.

119
00:07:59.880 --> 00:08:01.190
It's is quite hard to do.

120
00:08:01.200 --> 00:08:06.070
So what they're trying to do here is move my authority.

121
00:08:06.860 --> 00:08:11.780
In front of the autonomous proxy so that hopefully they collide.

122
00:08:13.530 --> 00:08:18.250
So set it off on a course and accelerate the autonomous proxy.

123
00:08:19.440 --> 00:08:23.940
And you'll notice we got a little bit glitching on the simulate proxy but that doesn't help us very

124
00:08:23.940 --> 00:08:24.810
much.

125
00:08:25.170 --> 00:08:27.520
Let's try and do a bit more.

126
00:08:29.630 --> 00:08:32.820
No that was a little bit too slow with reaction times.

127
00:08:32.890 --> 00:08:34.700
You can see how this is going to happen.

128
00:08:34.930 --> 00:08:37.670
But it is rather hard to reproduce.

129
00:08:38.520 --> 00:08:46.190
What we want to do is get our autonomous proxy accelerating in front of the authority.

130
00:08:46.840 --> 00:08:50.240
Which is currently not moving very fast so I can't.

131
00:08:50.290 --> 00:08:53.390
Can't do very much with slowing down too quickly basically.

132
00:08:53.800 --> 00:08:57.570
So one thing I could do is remove any deceleration.

133
00:08:57.570 --> 00:08:58.500
There you go.

134
00:08:58.500 --> 00:08:59.770
We finally got a glitch.

135
00:08:59.770 --> 00:09:05.260
So what happened there is I looked like I was moving past the simulated proxy and then I glitched back

136
00:09:05.260 --> 00:09:11.230
to being stuck behind the simulated proxy because in actual fact what happened is on the server it had

137
00:09:11.230 --> 00:09:14.350
moved forward but I haven't got that update on the client yet.

138
00:09:14.370 --> 00:09:19.510
It's rather hard to see who might have to rewind the video and see that glitch one more time in slow

139
00:09:19.510 --> 00:09:20.230
motion.

140
00:09:20.230 --> 00:09:24.430
It's hard to reproduce these but you can pretty much see how Im trying to reproduce them.

141
00:09:24.550 --> 00:09:29.050
And hopefully youll have better luck reproducing and maybe you can do some code changes that will make

142
00:09:29.050 --> 00:09:31.780
the simulated proxy move by itself.

143
00:09:31.780 --> 00:09:38.530
You could reintroduce the cube from the first series the first section to move around in front of the

144
00:09:38.530 --> 00:09:42.620
autonomous proxy and then you might see it glitch back those kinds of things.

145
00:09:42.840 --> 00:09:48.490
So we can definitely see that this is a much much better method seeing as our partners proxies now able

146
00:09:48.490 --> 00:09:55.970
to move around with full control even though it has a whole 1 second of lag Okay.

147
00:09:56.020 --> 00:09:58.430
So I will see you in the next lecture.
