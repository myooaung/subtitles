WEBVTT
1
00:00:04.420 --> 00:00:05.440
Hello welcome.

2
00:00:05.440 --> 00:00:09.000
In this lecture I am going to draw you to these two lines here.

3
00:00:09.160 --> 00:00:13.660
Not very interesting by the looks of it but actually what it shows us is they were able to get hold

4
00:00:13.660 --> 00:00:16.510
of a subsystem which is called the null subsystem.

5
00:00:16.510 --> 00:00:22.090
It's not the same as not having got hold of a subsystem at all and I'll talk about the knowles's that

6
00:00:22.090 --> 00:00:25.430
subsystem what we use it for why we want to use it now.

7
00:00:25.510 --> 00:00:30.190
And also you can see the second line and we found a session interface so we've been able to go from

8
00:00:30.190 --> 00:00:34.020
getting a subsystem to getting its session interface as we're going to do in the sledger.

9
00:00:34.030 --> 00:00:35.060
Let's dive right in.

10
00:00:35.840 --> 00:00:42.390
Oh in the last lecture we had the issue that when we go ahead and hit play as it currently is I'm going

11
00:00:42.420 --> 00:00:43.330
to go ahead and do that.

12
00:00:43.490 --> 00:00:48.490
Then we get a warning that there is no subsystem in an output log.

13
00:00:48.710 --> 00:00:53.290
That is because at the moment we haven't configured a subsystem at all.

14
00:00:53.300 --> 00:00:59.300
Now if you go and have a look at the documentation that I brought up for last lecture the online subsystem

15
00:00:59.390 --> 00:01:04.520
overview which is also includes against this lecturer in case you have lost sight of that.

16
00:01:04.760 --> 00:01:11.510
Well we've got a basic design of the online subsystem that's one of the sections on there and in there

17
00:01:11.510 --> 00:01:16.970
you can see that there is a part about the engine any file we may not have come across the engine any

18
00:01:17.000 --> 00:01:20.110
far before but it is the engines settings file.

19
00:01:20.120 --> 00:01:24.440
And there you can configure a default platform service.

20
00:01:24.440 --> 00:01:29.960
Now we could go ahead and try and configure steam right away but there's a lot of incidental complexity

21
00:01:30.290 --> 00:01:31.700
if you try and do steam.

22
00:01:31.700 --> 00:01:39.140
So what we're going to do instead is use something else called the null platform and let's talk a little

23
00:01:39.140 --> 00:01:41.830
bit about the role of said nulled platform.

24
00:01:41.840 --> 00:01:46.510
So this is the more familiar diagram that you have already seen.

25
00:01:46.550 --> 00:01:52.260
We've got unreel and your game sitting on top of the online subsystem interface.

26
00:01:52.280 --> 00:01:57.530
Essentially Now we know that that block is actually an interface to thing underneath which could be

27
00:01:57.530 --> 00:01:58.360
different.

28
00:01:58.550 --> 00:02:05.690
And the thing underneath it can be the No subsystem the subsystem is a subsystem that implements a bare

29
00:02:05.690 --> 00:02:11.090
minimum of what is necessary to be able to test the online subsystem system.

30
00:02:11.270 --> 00:02:18.110
In fact what it does it you to do is do some LAN multiplayer using it's online discovery mechanisms

31
00:02:18.710 --> 00:02:23.900
which is going to be quite useful because already you can see we won't need to find the IP address over

32
00:02:23.900 --> 00:02:25.160
the local network.

33
00:02:25.190 --> 00:02:31.040
Of course it will only work over a Loper local network but it's still better than nothing and it is

34
00:02:31.040 --> 00:02:35.450
a steppingstone that allows us to replace and that old subsystem with steam.

35
00:02:35.570 --> 00:02:39.560
So we're going to start off with a null subsystem but remembering that we've always got steam in our

36
00:02:39.560 --> 00:02:42.840
sites and we won't lose track or lose heart.

37
00:02:43.870 --> 00:02:49.390
Let's have a look and how we can go ahead and configure that no service.

38
00:02:49.390 --> 00:02:56.620
The hint is really here in this online subsystem module section where it's talking about the basic design

39
00:02:56.630 --> 00:03:03.910
and we can copy and paste this section where it has the Within square brackets online subsystem followed

40
00:03:03.910 --> 00:03:06.160
by a default platform service.

41
00:03:06.160 --> 00:03:13.270
Now this is usually a if you may recognize this format if you've done a lot of work with any files it

42
00:03:13.270 --> 00:03:15.720
is a very specific format.

43
00:03:15.730 --> 00:03:19.000
But if you have not seen this before then no.

44
00:03:19.450 --> 00:03:25.180
All we're going to do is we're going to go in to the directory of our project and we are going to go

45
00:03:25.180 --> 00:03:30.370
to the config directory probably a place we haven't been before and we're going to open up the default

46
00:03:30.400 --> 00:03:37.360
engine nagen had to do this in a text editor so let's select that and do an open with and whatever way

47
00:03:37.420 --> 00:03:45.370
you know how to do that and open with something like notepad or any text editor that you happen to have

48
00:03:45.370 --> 00:03:51.250
or prefer on your own platform and we get a text file that looks rough like this on maximize it so that

49
00:03:51.280 --> 00:03:56.380
we don't have any attractions now at the bottom of this file you can just add that section that we have

50
00:03:56.380 --> 00:04:02.890
copy the online subsystem a guess so we've got the online subsystem default platform service being the

51
00:04:03.310 --> 00:04:08.270
some default platform identify what's the default platform identify for an old service.

52
00:04:08.440 --> 00:04:12.090
Well it's just now in that capital letters like so.

53
00:04:12.490 --> 00:04:17.380
Okay so we're going to save that it won't instantly take effect in the engine because we are in an engine

54
00:04:17.440 --> 00:04:18.220
config.

55
00:04:18.430 --> 00:04:24.610
What we're going to have to do is go to our engine and shut it down and launch it back up again by opening

56
00:04:24.610 --> 00:04:27.040
up a new project once more.

57
00:04:27.070 --> 00:04:30.210
So here is the engine back up as it was.

58
00:04:30.220 --> 00:04:33.900
Now I'm going to give you a little mini challenges just a mini challenge no slide for this.

59
00:04:33.910 --> 00:04:38.770
I want you to print the current service name and get it to the stage where it is actually printing out

60
00:04:39.070 --> 00:04:40.570
the nul service.

61
00:04:40.570 --> 00:04:44.090
So pause the video and have a go at doing that for yourself.

62
00:04:45.380 --> 00:04:46.040
Okay welcome back.

63
00:04:46.040 --> 00:04:50.840
This is a very small challenge in fact I think my code is already in the state where it should be able

64
00:04:50.840 --> 00:04:52.590
to print out no service.

65
00:04:52.590 --> 00:04:53.590
Let's try it out.

66
00:04:53.630 --> 00:04:55.050
Go ahead and hit play.

67
00:04:55.050 --> 00:04:59.420
Of course some errors about the main menu blueprint what's going on there.

68
00:04:59.440 --> 00:05:01.370
Let's let's have a look at what that could be.

69
00:05:01.370 --> 00:05:09.260
We've got a menu blueprint which is if we go into the menu system and look at the main menu level which

70
00:05:09.260 --> 00:05:15.800
is what we're currently on then go to the blueprints menu open level blueprint Let's see what this issue

71
00:05:15.800 --> 00:05:20.490
is all about mind opened up on the wrong window.

72
00:05:20.630 --> 00:05:27.440
Our load menu blueprint node is now incorrect because we've changed that to load menu widget.

73
00:05:27.590 --> 00:05:34.670
So let's go ahead and destroy that and add adding the load many widget instead because of that funny

74
00:05:34.670 --> 00:05:37.390
little bug with include headers.

75
00:05:37.430 --> 00:05:39.610
Now that should be okay let's go ahead and play.

76
00:05:39.620 --> 00:05:46.820
They go got the main menu pop up and found a subsystem not perfect so we've got a subsystem now it is

77
00:05:46.820 --> 00:05:52.190
the null subsystem and I am happy with that though in the next lecture we're going to go on and find

78
00:05:52.190 --> 00:05:57.110
out what we can actually do with the session interface of the null subsystem.

79
00:05:57.110 --> 00:06:00.660
In fact let's do a little bit of a skip ahead now.

80
00:06:00.830 --> 00:06:06.290
This wasn't part of your challenge but you can follow along with me what we're going to do is we are

81
00:06:06.290 --> 00:06:11.420
going to go and get hold of the pointer to the correct subsystem.

82
00:06:11.420 --> 00:06:12.980
So let's go ahead and do that.

83
00:06:12.980 --> 00:06:15.330
We're going to go to subsystem.

84
00:06:17.060 --> 00:06:23.000
Arrow and we're going to get hold of the session so go and do a Get session and you can find all of

85
00:06:23.000 --> 00:06:29.090
this on the documentation for the eye online subsystem interface as well.

86
00:06:29.090 --> 00:06:35.030
So we've got the session here let's find out what type of the variable is you dont know the type of

87
00:06:35.030 --> 00:06:40.010
variable by the way you can always use Auto in C plus pass and theyll infer the type of the variable

88
00:06:40.010 --> 00:06:40.940
for you.

89
00:06:40.940 --> 00:06:44.440
So Im going to call this a session interface.

90
00:06:46.810 --> 00:06:48.520
Like so.

91
00:06:49.000 --> 00:06:56.110
And if you do want to then replace auto with an explicit version of what this is then that can be done

92
00:06:56.140 --> 00:06:57.080
as you can see here.

93
00:06:57.100 --> 00:06:58.360
I hover over that.

94
00:06:58.480 --> 00:07:02.590
It is saying that the eye online is on line a session.

95
00:07:02.620 --> 00:07:05.740
Pointer is the type and pad type deaf.

96
00:07:05.770 --> 00:07:08.490
So I online.

97
00:07:09.820 --> 00:07:10.700
Session.

98
00:07:11.340 --> 00:07:12.110
Pointer.

99
00:07:12.850 --> 00:07:17.290
Now if youre not sure what a typedef is it's basically an alias for a type.

100
00:07:17.290 --> 00:07:23.770
So this online session pointer type is actually a more complicated type under the hood but this will

101
00:07:23.770 --> 00:07:28.360
do for now it involves shared pointers and we'll be talking a little bit more about the shared pointers

102
00:07:28.720 --> 00:07:32.070
and type alias's it later on.

103
00:07:32.080 --> 00:07:37.060
All I want to do for now is check that we got a online session back song and say if.

104
00:07:37.780 --> 00:07:38.810
Sesshin.

105
00:07:39.620 --> 00:07:40.720
Interface.

106
00:07:42.730 --> 00:07:45.150
Not equal to null pointer.

107
00:07:48.240 --> 00:07:49.810
Then we can.

108
00:07:51.940 --> 00:07:53.120
Log out.

109
00:07:53.260 --> 00:07:54.310
Found.

110
00:07:55.020 --> 00:07:57.190
Session interface.

111
00:07:58.670 --> 00:08:01.800
And we can delete the extra things that I copied in the log.

112
00:08:03.850 --> 00:08:08.310
That's Give me a little error about this not matching.

113
00:08:08.310 --> 00:08:13.290
Now again I understand a little bit about this in more detail in later lecture so for now let's just

114
00:08:13.290 --> 00:08:14.280
go along with it.

115
00:08:14.340 --> 00:08:19.590
But we do know know that the session interface is not just a simple pointer.

116
00:08:19.590 --> 00:08:26.400
So what we actually can do here was just do an if session interface and that should automatically convert

117
00:08:26.400 --> 00:08:28.100
it to a Boolean.

118
00:08:30.050 --> 00:08:33.340
I do beg your pardon something of C++ shared pointers.

119
00:08:33.530 --> 00:08:41.130
In this case we actually need to do a dot is valid and that will do the trick with shared pointers.

120
00:08:41.150 --> 00:08:44.510
In not visual studio in unreel.

121
00:08:44.510 --> 00:08:49.850
Now if you want to know more about this I'm going to include a link to the shared point of reference

122
00:08:49.850 --> 00:08:50.230
here.

123
00:08:50.300 --> 00:08:51.330
Shared pointer.

124
00:08:51.530 --> 00:08:56.780
And you can see that there is this is valid which returns a ball which tells you whether it's actually

125
00:08:56.780 --> 00:08:58.510
pointing to an object.

126
00:08:58.520 --> 00:09:03.140
Now will talk a bit more about what shared pointers are in later lectures.

127
00:09:03.140 --> 00:09:07.070
But for now it's efficient to say that when you're dealing with a shared point it's very much like a

128
00:09:07.070 --> 00:09:10.260
pointer except instead of checking for equality with equals equals.

129
00:09:11.030 --> 00:09:14.760
I mean checking for nowness and with an equals equals not.

130
00:09:14.960 --> 00:09:20.180
We do it which is valid and if it is valid then we're going to print out session.

131
00:09:20.240 --> 00:09:25.430
So I am going to go ahead and build that and hopefully we'll get what the expected outcome.

132
00:09:25.640 --> 00:09:32.180
So that hasn't successfully compiled Let's head on back into unreal and stop the game and hit play on

133
00:09:32.180 --> 00:09:32.660
the game.

134
00:09:32.660 --> 00:09:37.520
And sure enough it has found the session interface so the session space is also not now which means

135
00:09:37.520 --> 00:09:40.890
that we can work with that in future lectures.

136
00:09:40.890 --> 00:09:42.100
So great stuff.

137
00:09:42.110 --> 00:09:46.800
We know what the null subsystem is we're able to find it and get hold of it and configure it.

138
00:09:46.820 --> 00:09:49.140
Let's move on to the next lecture and actually use it.
