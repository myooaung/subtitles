1
00:00:00,300 --> 00:00:00,780
Hey guys.

2
00:00:00,780 --> 00:00:02,700
And welcome back to this tutorial.

3
00:00:02,700 --> 00:00:08,300
Now that we have imported all the dependencies that we will need we have to import the data.

4
00:00:08,340 --> 00:00:14,980
So we want to load the files that we uploaded to our Google drive into our notebook.

5
00:00:14,990 --> 00:00:21,620
We will do this the same way as we did for the CNN so we will use the drive module from google docs

6
00:00:21,620 --> 00:00:29,470
call up just like so we will ask the notebook to have access to devices in all personal drive.

7
00:00:29,480 --> 00:00:38,070
So drive that mounts and we will announce this in content slash drive.

8
00:00:38,240 --> 00:00:46,280
And if we compute this we get this you email well that we have to click and a new page opens.

9
00:00:46,280 --> 00:00:52,040
Well we have to pick the google drive outcomes that we want to use.

10
00:00:52,100 --> 00:00:57,980
We just have to allow Google to access to everything the needs and the other codes that we can just

11
00:00:58,130 --> 00:01:05,690
copy right here busted there and to wage beats.

12
00:01:05,700 --> 00:01:07,530
And here we are the fires have been mounted.

13
00:01:07,530 --> 00:01:11,760
So if we go too fast here we can see that now there is this tri folder.

14
00:01:11,940 --> 00:01:19,050
When we have access to my drive so we can have access to all the files that are into our personal Google

15
00:01:19,050 --> 00:01:19,860
Drive.

16
00:01:19,860 --> 00:01:21,570
And that's what we are going to do right now.

17
00:01:21,600 --> 00:01:32,280
So let's create a new coding block so simple as that with open so let open the first file that we need

18
00:01:33,300 --> 00:01:35,470
instead of writing the whole path by myself.

19
00:01:35,470 --> 00:01:38,030
I would just go through the exploit.

20
00:01:38,040 --> 00:01:38,510
Right.

21
00:01:38,590 --> 00:01:39,170
Right here.

22
00:01:39,330 --> 00:01:43,390
So projects transform the data.

23
00:01:44,140 --> 00:01:47,530
We will first load the English data sets.

24
00:01:47,550 --> 00:01:50,900
So right click copy but whoops sorry.

25
00:01:50,940 --> 00:01:54,320
Right quick copy path here.

26
00:01:55,470 --> 00:01:56,870
And here we are as simple as that.

27
00:01:56,880 --> 00:02:01,660
We have the path that is just correctly given to the open function.

28
00:02:01,830 --> 00:02:05,980
We will say that we will only read this file we want.

29
00:02:06,000 --> 00:02:08,990
We don't want to modify it so mode.

30
00:02:09,120 --> 00:02:10,740
Reading is enough.

31
00:02:10,740 --> 00:02:19,950
And the encoding of all files is in UTF Dash 8 which is quite standards in Western languages.

32
00:02:20,850 --> 00:02:23,900
So this file is open.

33
00:02:24,120 --> 00:02:26,210
We say that it reads it will be open as f.

34
00:02:26,200 --> 00:02:35,640
So in this block we can have access to the file just by using F and this is what we do right now.

35
00:02:35,670 --> 00:02:42,030
So we will create the valuable Europol on this call.

36
00:02:42,060 --> 00:02:44,180
English equals f that.

37
00:02:44,190 --> 00:02:44,750
So.

38
00:02:44,940 --> 00:02:51,780
So now in Europol English we have the whole the whole corpus in English as a huge string and we just

39
00:02:51,780 --> 00:02:53,930
want to do the same thing with the four files.

40
00:02:53,940 --> 00:02:59,780
So let's just copy blasts here.

41
00:03:00,210 --> 00:03:01,250
It's not in English.

42
00:03:01,260 --> 00:03:02,670
The second one will be in French

43
00:03:05,320 --> 00:03:15,070
Let's copy pasta one more time and yet I hate and change the name of the five right here.

44
00:03:16,810 --> 00:03:26,680
So first one non breaking underscore prefix copy that's

45
00:03:29,300 --> 00:03:31,250
and busted right here.

46
00:03:31,310 --> 00:03:37,100
And finally all we have to to do is to change the name of the valuables right there.

47
00:03:37,100 --> 00:03:40,260
So here it's in French.

48
00:03:40,610 --> 00:03:50,540
And this one will be called non underscore breaking on this code prefix and this go in.

49
00:03:50,930 --> 00:03:57,520
Let's copy that and passed it's right.

50
00:03:57,550 --> 00:04:00,350
That and this will be in French.

51
00:04:01,510 --> 00:04:02,130
OK.

52
00:04:03,320 --> 00:04:07,870
Let's run that's and hopefully it will not take so long.

53
00:04:07,880 --> 00:04:08,880
And here we are.

54
00:04:08,900 --> 00:04:12,230
It took a few seconds but we can test it right now.

55
00:04:12,530 --> 00:04:24,830
See if we want to print you or Paul English and let's say the first's 50 characters resumption of the

56
00:04:24,830 --> 00:04:30,190
session backslash but session I declare resumed the session I guess.

57
00:04:30,470 --> 00:04:32,320
So it seems to work perfectly fine.

58
00:04:32,600 --> 00:04:33,150
Here we are.

59
00:04:33,170 --> 00:04:38,900
We have all the files we want the corpus the none breaking prefixes into all not the end we all just

60
00:04:38,900 --> 00:04:41,770
really to process all that and to work with it.

61
00:04:41,780 --> 00:04:42,320
See you soon.
