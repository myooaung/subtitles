WEBVTT
1

00:00:01.316 --> 00:00:03.138

<v ->Well, in this module I not only</v>



2

00:00:03.138 --> 00:00:05.057

want to explain how the request



3

00:00:05.057 --> 00:00:06.595

travels through the application,



4

00:00:06.595 --> 00:00:08.144

though that is extremely important.



5

00:00:08.144 --> 00:00:09.762

I also wanna show how to adjust



6

00:00:09.762 --> 00:00:11.098

the server-side code.



7

00:00:11.098 --> 00:00:13.460

Right now in the app.js file in



8

00:00:13.460 --> 00:00:15.604

the route folder, we get this get route.



9

00:00:15.604 --> 00:00:18.070

This uses the express router as you can see



10

00:00:18.070 --> 00:00:21.104

and on this router we can define routes



11

00:00:21.104 --> 00:00:24.510

by using the HTTP methods as names for



12

00:00:24.510 --> 00:00:28.892

the methods we execute here, like get in this case.



13

00:00:28.892 --> 00:00:31.878

Then we specify the path which we want to handle



14

00:00:31.878 --> 00:00:35.521

so just slash here, so /message would not



15

00:00:35.521 --> 00:00:37.955

get handled by this route, for example.



16

00:00:37.955 --> 00:00:42.241

And then all middlewares set up in express.js



17

00:00:42.241 --> 00:00:44.414

and the route is just some kind of middleware



18

00:00:44.414 --> 00:00:47.065

applied to a request, have this callback,



19

00:00:47.065 --> 00:00:49.757

which includes the request which was sent,



20

00:00:49.757 --> 00:00:52.832

the response which is being built by express.js,



21

00:00:52.832 --> 00:00:56.129

and this next function it is actually,



22

00:00:56.129 --> 00:00:58.381

which you can execute to tell the request



23

00:00:58.381 --> 00:00:59.464

to travel on.



24

00:01:00.582 --> 00:01:01.896

It's not getting called here.



25

00:01:01.896 --> 00:01:04.217

We could call it like this, but we don't



26

00:01:04.217 --> 00:01:06.273

want the request to continue its journey.



27

00:01:06.273 --> 00:01:08.942

Here, we're sending a response, so we're done.



28

00:01:08.942 --> 00:01:10.703

We don't want to continue because



29

00:01:10.703 --> 00:01:13.165

then we would get back to the app.js file



30

00:01:13.165 --> 00:01:16.050

in the root folder, and reach this code here



31

00:01:16.050 --> 00:01:19.341

and send another response, which is never good.



32

00:01:19.341 --> 00:01:21.770

You see the execution of the next method here,



33

00:01:21.770 --> 00:01:23.492

for example, on my own middleware



34

00:01:23.492 --> 00:01:24.951

where I do want to continue because



35

00:01:24.951 --> 00:01:27.359

all I do here is set some header.



36

00:01:27.359 --> 00:01:29.346

I don't send a response, so I do want to



37

00:01:29.346 --> 00:01:32.207

forward the request, I want to continue with it.



38

00:01:32.207 --> 00:01:34.062

I only want it to adjust the response,



39

00:01:34.062 --> 00:01:35.855

but not send it yet.



40

00:01:35.855 --> 00:01:38.807

That's a different thing with render here.



41

00:01:38.807 --> 00:01:40.352

Well of that, let's simply set up



42

00:01:40.352 --> 00:01:42.502

another route here, shall we?



43

00:01:42.502 --> 00:01:45.535

To see how something is able to change.



44

00:01:45.535 --> 00:01:49.114

I'll name it /message, and I will create



45

00:01:49.114 --> 00:01:52.075

a new view for this in the views folder.



46

00:01:52.075 --> 00:01:54.019

I'll name is node hps since we're



47

00:01:54.019 --> 00:01:56.992

showcasing some node hps features.



48

00:01:56.992 --> 00:02:00.123

And I'll name it a node.js view,



49

00:02:00.123 --> 00:02:01.979

and I will put a message here.



50

00:02:01.979 --> 00:02:05.209

Now we're using a templating engine as I said,



51

00:02:05.209 --> 00:02:08.095

which means we can not only write HTML code



52

00:02:08.095 --> 00:02:11.631

in this file, but also this template syntax



53

00:02:11.631 --> 00:02:15.142

of the language we're using to output some data.



54

00:02:15.142 --> 00:02:17.665

I'm using handlebars as a templating engine,



55

00:02:17.665 --> 00:02:19.632

and I'm not going to dive super deep



56

00:02:19.632 --> 00:02:21.122

into that here, because that's not really



57

00:02:21.122 --> 00:02:22.518

what this course is about.



58

00:02:22.518 --> 00:02:24.917

But generally, we output data with handlebars



59

00:02:24.917 --> 00:02:26.866

by using double curly braces,



60

00:02:26.866 --> 00:02:28.991

and then between the curly braces



61

00:02:28.991 --> 00:02:32.605

we may output any JavaScript variable



62

00:02:32.605 --> 00:02:35.214

which was passed to this view.



63

00:02:35.214 --> 00:02:37.528

So right now we're not passing anything,



64

00:02:37.528 --> 00:02:39.261

we're not even rendering the view



65

00:02:39.261 --> 00:02:40.610

so let's change this here.



66

00:02:40.610 --> 00:02:43.822

Let's change the res.render method to render node,



67

00:02:43.822 --> 00:02:46.483

referring to this node hps file here.



68

00:02:46.483 --> 00:02:48.251

The extension is added automatically.



69

00:02:48.251 --> 00:02:50.484

And then we can pass a second argument here



70

00:02:50.484 --> 00:02:52.419

which is a JavaScript object.



71

00:02:52.419 --> 00:02:53.923

Here, we set up key value pairs



72

00:02:53.923 --> 00:02:56.560

where we can use the keys later on



73

00:02:56.560 --> 00:02:59.105

in the view to access the value.



74

00:02:59.105 --> 00:03:00.869

So let's pass a message here.



75

00:03:00.869 --> 00:03:04.325

Let's say hello, hello is a string.



76

00:03:04.325 --> 00:03:07.297

And then in node hps I can output message.



77

00:03:07.297 --> 00:03:09.548

And message here, of course, refers to



78

00:03:09.548 --> 00:03:11.438

this message key.



79

00:03:11.438 --> 00:03:13.582

With that, we need to restart the server,



80

00:03:13.582 --> 00:03:18.299

cancel it with control C and then run nmp start again



81

00:03:18.299 --> 00:03:20.513

since we changed some service-side code.



82

00:03:20.513 --> 00:03:23.712

And if I now reload here, we still see hello world



83

00:03:23.712 --> 00:03:25.349

because I changed that back.



84

00:03:25.349 --> 00:03:28.527

But if we go to message, we see a node.js view



85

00:03:28.527 --> 00:03:31.714

and then here, hello, our message.



86

00:03:31.714 --> 00:03:33.998

The bootstrap styling is gone as a side note



87

00:03:33.998 --> 00:03:38.706

because in node hps we don't import any styling.



88

00:03:38.706 --> 00:03:40.851

But you see, this is how we can render



89

00:03:40.851 --> 00:03:44.020

a different view with node.js only.



90

00:03:44.020 --> 00:03:45.949

Now we won't do this throughout this course,



91

00:03:45.949 --> 00:03:48.381

but I want you to understand how we can



92

00:03:48.381 --> 00:03:50.683

set up multiple routes, and what this



93

00:03:50.683 --> 00:03:53.600

render function here actually does.



