1
00:00:01,941 --> 00:00:03,468
<v Narrator>In the last video, we created</v>

2
00:00:03,468 --> 00:00:05,853
our C project and we started it.

3
00:00:05,853 --> 00:00:07,371
We now see "Hello World!"

4
00:00:07,371 --> 00:00:09,074
Let's now understand where this "Hello World!"

5
00:00:09,074 --> 00:00:11,008
comes from and which files and

6
00:00:11,008 --> 00:00:13,713
folders we have in this C project.

7
00:00:13,713 --> 00:00:16,255
For that, I opened up the project in WebStorm,

8
00:00:16,255 --> 00:00:18,539
which is the IDE I'm using throughout the course.

9
00:00:18,539 --> 00:00:20,424
You're of course free to use any IDE

10
00:00:20,424 --> 00:00:22,273
or editor of your choice, for example,

11
00:00:22,273 --> 00:00:24,475
Atom, Sublime, Visual Studio Code,

12
00:00:24,475 --> 00:00:27,525
whatever you prefer for your Node.js

13
00:00:27,525 --> 00:00:30,278
and/or Angular 2 development.

14
00:00:30,278 --> 00:00:32,532
So, this is the folder structure.

15
00:00:32,532 --> 00:00:33,604
What you're not seeing here is the

16
00:00:33,604 --> 00:00:36,619
node modules folder, because my IDE hides it,

17
00:00:36,619 --> 00:00:38,591
since we shouldn't work in that folder,

18
00:00:38,591 --> 00:00:41,752
it keeps all the dependencies which are managed for us.

19
00:00:41,752 --> 00:00:43,007
So we shouldn't change anything there,

20
00:00:43,007 --> 00:00:45,226
which is why my IDE doesn't show it.

21
00:00:45,226 --> 00:00:46,648
All the other files and folders

22
00:00:46,648 --> 00:00:48,241
are the same, you should see them.

23
00:00:48,241 --> 00:00:50,695
Now, what do we have here?

24
00:00:50,695 --> 00:00:53,487
We've got the assets folder, which has an app folder,

25
00:00:53,487 --> 00:00:55,877
and this holds our Angular 2 app.

26
00:00:55,877 --> 00:00:58,256
If you're aware how an Angular 2 app works,

27
00:00:58,256 --> 00:01:01,916
you might already recognise all these files inside there.

28
00:01:01,916 --> 00:01:03,776
I will explain how to work with them

29
00:01:03,776 --> 00:01:06,808
in the Angular 2 module in this course.

30
00:01:06,808 --> 00:01:08,678
The short version right now is,

31
00:01:08,678 --> 00:01:11,941
we build our Angular 2 app with components,

32
00:01:11,941 --> 00:01:13,686
and right now we've got one component,

33
00:01:13,686 --> 00:01:15,555
the app component here.

34
00:01:15,555 --> 00:01:18,304
In the app component here, we basically

35
00:01:18,304 --> 00:01:21,042
set up which HTML code should get rendered

36
00:01:21,042 --> 00:01:22,914
whenever we load this component.

37
00:01:22,914 --> 00:01:24,289
And here is happens to be stored in

38
00:01:24,289 --> 00:01:26,923
app.component.html, which is this file,

39
00:01:26,923 --> 00:01:29,789
where we have this "Hello World!" we were seeing.

40
00:01:29,789 --> 00:01:32,860
Therefore, if we change this to "Changed it!"

41
00:01:32,860 --> 00:01:36,838
and hit Ctrl+S, this will automatically hit our

42
00:01:36,838 --> 00:01:39,841
or rerun our compile process, since it is watching.

43
00:01:39,841 --> 00:01:43,184
Hence, if we reload here, we see "Changed it!"

44
00:01:43,184 --> 00:01:45,959
So this is how we change our app here,

45
00:01:45,959 --> 00:01:47,801
but I will come back to the Angular 2 part

46
00:01:47,801 --> 00:01:49,159
in the Angular 2 module.

47
00:01:49,159 --> 00:01:50,790
The important thing to keep in mind right now is

48
00:01:50,790 --> 00:01:52,357
that in the assets app folder,

49
00:01:52,357 --> 00:01:54,468
we've got our frontend application,

50
00:01:54,468 --> 00:01:56,295
the Angular 2 application.

51
00:01:56,295 --> 00:02:00,288
All the other folders here are service side folders.

52
00:02:00,288 --> 00:02:04,384
The bin folder here holds our Node.js server.

53
00:02:04,384 --> 00:02:05,940
And I'll go through how our request

54
00:02:05,940 --> 00:02:07,785
travels through our application

55
00:02:07,785 --> 00:02:10,737
in the next module, in the Node.js module.

56
00:02:10,737 --> 00:02:12,773
Generally, here, we set up the server,

57
00:02:12,773 --> 00:02:15,002
because with Node.js, it's not like with PHP

58
00:02:15,002 --> 00:02:16,548
that we write some code and then have

59
00:02:16,548 --> 00:02:18,879
a server like Apache running our code,

60
00:02:18,879 --> 00:02:21,897
but instead we create the server itself with Node.js.

61
00:02:21,897 --> 00:02:24,320
And this is done in this www file here,

62
00:02:24,320 --> 00:02:26,243
where we basically set up to which port

63
00:02:26,243 --> 00:02:29,221
you want to listen and then start the server.

64
00:02:29,221 --> 00:02:32,023
The public folder holds in the JavaScript folder

65
00:02:32,023 --> 00:02:34,655
our bundled Angular 2 application,

66
00:02:34,655 --> 00:02:37,353
because in the assets folder, we created,

67
00:02:37,353 --> 00:02:39,203
but we didn't serve it from the server,

68
00:02:39,203 --> 00:02:41,045
we need to load it here initially.

69
00:02:41,045 --> 00:02:43,036
And there, it lives in this bundle.js,

70
00:02:43,036 --> 00:02:45,394
which is created automatically, so don't change

71
00:02:45,394 --> 00:02:48,950
anything in this JavaScript app folder here.

72
00:02:48,950 --> 00:02:51,782
The stylesheets folder holds the style.css,

73
00:02:51,782 --> 00:02:53,491
which basically has some basic styling

74
00:02:53,491 --> 00:02:55,291
we'll use throughout the course.

75
00:02:55,291 --> 00:02:59,151
In the routes folder here, this is the app.js file.

76
00:02:59,151 --> 00:03:01,230
This is the only route I have

77
00:03:01,230 --> 00:03:03,820
registered on the server thus far.

78
00:03:03,820 --> 00:03:05,048
And this is the main route when we

79
00:03:05,048 --> 00:03:07,941
visit just local host/nothing.

80
00:03:07,941 --> 00:03:11,480
Here we will render 'index' and render

81
00:03:11,480 --> 00:03:14,615
refers to this index.hbs view.

82
00:03:14,615 --> 00:03:16,988
.hbs is a file extension, because here

83
00:03:16,988 --> 00:03:20,102
we're using Handlebars as a templating engine,

84
00:03:20,102 --> 00:03:23,769
which basically means it allows us to output,

85
00:03:23,769 --> 00:03:27,306
or it allows us to use templates on the server

86
00:03:27,306 --> 00:03:31,123
if we want to build our HTML code on the server,

87
00:03:31,123 --> 00:03:32,391
which we won't do in the course,

88
00:03:32,391 --> 00:03:33,757
so it doesn't really matter.

89
00:03:33,757 --> 00:03:36,050
But this is where the file extension comes from.

90
00:03:36,050 --> 00:03:38,033
This is the index.hbs file, which gets

91
00:03:38,033 --> 00:03:40,213
rendered by this res.render function.

92
00:03:40,213 --> 00:03:42,991
So, it's the one and only file which gets sent

93
00:03:42,991 --> 00:03:46,370
from the server to the client, and therefore,

94
00:03:46,370 --> 00:03:49,948
we should expect this file to hold our Angular 2 app,

95
00:03:49,948 --> 00:03:52,230
or to start our Angular 2 app.

96
00:03:52,230 --> 00:03:54,117
This is exactly what it does.

97
00:03:54,117 --> 00:03:55,662
Here, we've gotta import through

98
00:03:55,662 --> 00:03:58,137
Bootstrap to get some basic styling,

99
00:03:58,137 --> 00:04:01,264
and then we got our own style.css import.

100
00:04:01,264 --> 00:04:04,136
But then we got this my-app thing here,

101
00:04:04,136 --> 00:04:07,612
which clearly is not a default HTML element.

102
00:04:07,612 --> 00:04:11,252
Indeed, it is the component we build with Angular 2.

103
00:04:11,252 --> 00:04:13,782
And thereafter we get this script import at the bottom,

104
00:04:13,782 --> 00:04:16,505
which will import our bundle, which includes

105
00:04:16,505 --> 00:04:19,975
our own code, the Angular 2 framework, the dependencies,

106
00:04:19,975 --> 00:04:22,567
the polyfills Angular 2 needs, and so on.

107
00:04:22,567 --> 00:04:26,212
So this bundle.js holds our whole Angular 2 app,

108
00:04:26,212 --> 00:04:28,592
and therefore starts this app as well,

109
00:04:28,592 --> 00:04:31,227
and leads to what we actually see on the page,

110
00:04:31,227 --> 00:04:33,062
which is not "Loading..."

111
00:04:33,062 --> 00:04:35,703
but "Changed it!" in this case.

112
00:04:35,703 --> 00:04:39,495
Well, in all the other files here, app.js is important.

113
00:04:39,495 --> 00:04:40,965
This is the main file starting

114
00:04:40,965 --> 00:04:44,042
our express jsf on the server.

115
00:04:44,042 --> 00:04:45,622
Each request reaching our server

116
00:04:45,622 --> 00:04:47,946
is funnelled through this file here,

117
00:04:47,946 --> 00:04:51,246
where a couple of methods are applied to the request,

118
00:04:51,246 --> 00:04:53,953
some data is extracted, some headers are set.

119
00:04:53,953 --> 00:04:55,392
And very importantly, then, it's

120
00:04:55,392 --> 00:04:57,215
dispatched to the right route.

121
00:04:57,215 --> 00:05:00,754
This app is here, where we forward the request

122
00:05:00,754 --> 00:05:04,764
reaching local host/anything to appRoutes,

123
00:05:04,764 --> 00:05:06,489
which actually is reference to

124
00:05:06,489 --> 00:05:09,374
the app.js file under routes folder.

125
00:05:09,374 --> 00:05:11,164
Again, I will come back to this detailed

126
00:05:11,164 --> 00:05:13,819
request flow in the next module.

127
00:05:13,819 --> 00:05:16,505
All the other files here, these are just config

128
00:05:16,505 --> 00:05:19,848
files for the C project, for the build process.

129
00:05:19,848 --> 00:05:21,793
And I will come to them in detail in the

130
00:05:21,793 --> 00:05:24,203
Build Your Own C Project module,

131
00:05:24,203 --> 00:05:25,727
if you're interested in that.

132
00:05:25,727 --> 00:05:28,233
Typically, you don't need to change anything here.

133
00:05:28,233 --> 00:05:30,251
The most important file to mention is

134
00:05:30,251 --> 00:05:33,681
the package.json file, which manages all the production

135
00:05:33,681 --> 00:05:36,418
and development dependencies of our project.

136
00:05:36,418 --> 00:05:38,604
Quite a lot, as you can see, but as you can see,

137
00:05:38,604 --> 00:05:41,378
Angular 2 alone has this structure where

138
00:05:41,378 --> 00:05:43,960
the code is split over multiple files,

139
00:05:43,960 --> 00:05:45,816
so this is why this is very long.

140
00:05:45,816 --> 00:05:48,794
And yet, this is managed automatically by NPM,

141
00:05:48,794 --> 00:05:51,667
this package manager in the node module folder.

142
00:05:51,667 --> 00:05:53,287
Up here, you see the scripts.

143
00:05:53,287 --> 00:05:55,776
We already used start and build to,

144
00:05:55,776 --> 00:05:58,595
for one, with build, start our frontend

145
00:05:58,595 --> 00:06:01,022
asset compilation and create this bundle.

146
00:06:01,022 --> 00:06:04,061
And with start, to start our node sever,

147
00:06:04,061 --> 00:06:07,478
living in the bin folder in the www file.

148
00:06:08,473 --> 00:06:11,149
This is the general setup of this folder

149
00:06:11,149 --> 00:06:13,141
structure we're using throughout the course.

150
00:06:13,141 --> 00:06:14,769
Again, have a look at the detailed

151
00:06:14,769 --> 00:06:17,718
Build Your Own Project module to learn more about that.

152
00:06:17,718 --> 00:06:19,778
With that, I'd say let's jump into the

153
00:06:19,778 --> 00:06:22,283
next course module and dive a little bit

154
00:06:22,283 --> 00:06:26,200
deeper into the server side world with Node.js.

