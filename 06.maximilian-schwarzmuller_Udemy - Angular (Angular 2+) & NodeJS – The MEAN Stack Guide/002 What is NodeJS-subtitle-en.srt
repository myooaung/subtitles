1
00:00:01,528 --> 00:00:05,040
<v ->This course is about Node.js and Angular 2.</v>

2
00:00:05,040 --> 00:00:06,701
So I think it's a good idea to get started

3
00:00:06,701 --> 00:00:09,392
with understanding what each of these two pieces

4
00:00:09,392 --> 00:00:11,152
actually is and does.

5
00:00:11,152 --> 00:00:13,388
Let's start with Node.js, here.

6
00:00:13,388 --> 00:00:15,228
To best explain Node.js,

7
00:00:15,228 --> 00:00:16,953
let's think about our web application

8
00:00:16,953 --> 00:00:19,983
where we have a client browser and the sever.

9
00:00:19,983 --> 00:00:24,100
In our client we typically have HTML, CSS and JavaScript,

10
00:00:24,100 --> 00:00:26,297
and on the server we have some code

11
00:00:26,297 --> 00:00:30,180
handling the request our client sends to the server.

12
00:00:30,180 --> 00:00:34,399
Now Node.js is basically JavaScript on the server.

13
00:00:34,399 --> 00:00:38,161
It's a server-side language and it happens to be JavaScript.

14
00:00:38,161 --> 00:00:42,256
So like PHP or Ruby or any other of your favourite

15
00:00:42,256 --> 00:00:43,846
server-side languages,

16
00:00:43,846 --> 00:00:46,620
JavaScript is now just another server-side language

17
00:00:46,620 --> 00:00:51,060
and Node.js is JavaScript with some extra packages,

18
00:00:51,060 --> 00:00:53,807
some extra tools, which allow you to

19
00:00:53,807 --> 00:00:56,036
well handle server-side specific tasks,

20
00:00:56,036 --> 00:00:58,815
like accessing the file system and handling requests.

21
00:00:58,815 --> 00:01:01,444
And we will learn all of that throughout this course.

22
00:01:01,444 --> 00:01:05,410
Now Node.js on it's own, is already all we need

23
00:01:05,410 --> 00:01:07,919
to write server-side applications,

24
00:01:07,919 --> 00:01:11,738
but typically you don't want to use plain Node.js,

25
00:01:11,738 --> 00:01:16,043
just like you typically don't use Vanilla PHP or plain PHP

26
00:01:16,043 --> 00:01:19,400
when creating a server-side application with PHP.

27
00:01:19,400 --> 00:01:21,750
Instead you typically use a framework,

28
00:01:21,750 --> 00:01:26,171
which makes a lot of recurrent tasks a lot easier to do.

29
00:01:26,171 --> 00:01:28,294
For Node.js the most popular,

30
00:01:28,294 --> 00:01:32,512
or one of the most popular frameworks is Express.js.

31
00:01:32,512 --> 00:01:36,552
Express.js is a framework which wraps Node.js,

32
00:01:36,552 --> 00:01:40,391
so you still write Node.js, you still write JavaScript code,

33
00:01:40,391 --> 00:01:42,371
but it makes things easier.

34
00:01:42,371 --> 00:01:43,670
It comes with a lot of helpers,

35
00:01:43,670 --> 00:01:45,952
which make a lot of common tasks easier,

36
00:01:45,952 --> 00:01:48,894
so that you can really focus on your core business logic,

37
00:01:48,894 --> 00:01:53,061
and don't have to reinvent the wheel all over the place.

