WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.430
Hello,

00:00:00.430 --> 00:00:00.690
guys.

00:00:00.690 --> 00:00:01.460
Thanks for joining.

00:00:01.460 --> 00:00:07.240
Decision in decision we're going to discuss about elastic compute cloud That is easy to off

00:00:07.240 --> 00:00:08.180
aws.

00:00:08.180 --> 00:00:09.890
So let's look into the topics.

00:00:09.890 --> 00:00:12.510
What are the topics we're going to discuss in this aspect?

00:00:12.510 --> 00:00:14.610
We will be discussing the following topics.

00:00:14.610 --> 00:00:16.440
So here we will be discussing that.

00:00:16.440 --> 00:00:16.680
What?

00:00:16.680 --> 00:00:22.490
Actually is he two instances and we will come to know about what is aws instances on in

00:00:22.490 --> 00:00:27.310
that we were looking toe on with takeoff architecture it is based upon and we will look

00:00:27.310 --> 00:00:28.600
into the instance type.

00:00:28.600 --> 00:00:31.470
We will also discuss about the purchasing options.

00:00:31.470 --> 00:00:33.920
Once we understand that the purchasing option,

00:00:33.920 --> 00:00:39.190
we will move further and look into how we can use eight of Louis management console toe

00:00:39.190 --> 00:00:40.850
create DC Two instance.

00:00:40.850 --> 00:00:42.100
Once we understand that,

00:00:42.100 --> 00:00:45.080
then we will look in tow the steps to connect toe,

00:00:45.080 --> 00:00:46.400
easy to instance.

00:00:46.400 --> 00:00:48.820
So let's jump into the discussion now.

00:00:48.820 --> 00:00:55.090
I wanted to show you one diagram so that you can understand what actually see two instances

00:00:55.090 --> 00:00:55.090
.

00:00:55.090 --> 00:00:56.600
So look at this diagram.

00:00:56.600 --> 00:00:59.750
This is a diagram off memory CPU in the storage.

00:00:59.750 --> 00:01:05.280
So these are the three hardware components on which any computer is based upon So here,

00:01:05.280 --> 00:01:10.550
the first definition off this isn't comes that what is an instance instance is nothing but

00:01:10.550 --> 00:01:12.150
a combination off memories.

00:01:12.150 --> 00:01:14.700
Cebu in the storage on the same aspect,

00:01:14.700 --> 00:01:15.780
Aws instance,

00:01:15.780 --> 00:01:19.300
is nothing but a combination off memory CPU in the story.

00:01:19.300 --> 00:01:21.030
There were 80 off instance.

00:01:21.030 --> 00:01:23.610
Type we will discuss for the indecision,

00:01:23.610 --> 00:01:26.490
but for a time being just considered that either Blue,

00:01:26.490 --> 00:01:31.060
it's instance is nothing but a combination off memory CPU in the storage.

00:01:31.060 --> 00:01:32.290
So to understand this,

00:01:32.290 --> 00:01:33.280
a statement better.

00:01:33.280 --> 00:01:37.780
Let's move further and we will look into some of the definition how this set up is being

00:01:37.780 --> 00:01:42.260
done and what is the technology behind it or save behind eight of Louis instance.

00:01:42.260 --> 00:01:44.320
So let's jump into the discussion.

00:01:44.320 --> 00:01:48.720
So eight of Louis instances based upon nitro based instance.

00:01:48.720 --> 00:01:49.100
So what?

00:01:49.100 --> 00:01:49.470
Actually,

00:01:49.470 --> 00:01:52.030
NATO waste instances Nitro raised instance,

00:01:52.030 --> 00:01:53.780
is nothing but an architecture,

00:01:53.780 --> 00:01:56.360
which is which is built upon the nitro system.

00:01:56.360 --> 00:02:01.200
And the nitro system is nothing but a collection off AWS build hardware and software

00:02:01.200 --> 00:02:03.580
components that enable high performance,

00:02:03.580 --> 00:02:05.490
high availability and high security.

00:02:05.490 --> 00:02:06.760
It is again are different,

00:02:06.760 --> 00:02:09.250
kind off actualization architectures.

00:02:09.250 --> 00:02:11.000
If you want to know more about,

00:02:11.000 --> 00:02:13.070
just go through this YouTube video,

00:02:13.070 --> 00:02:18.190
which ADA Blue has has shared in their green went program on 2017.

00:02:18.190 --> 00:02:23.740
So every year they are organizing a event called Green Went where they introduced their

00:02:23.740 --> 00:02:25.480
innovation for those years.

00:02:25.480 --> 00:02:30.010
So go through it with the nitro system for a time being just considered that it is one of

00:02:30.010 --> 00:02:31.570
the virtualization technique,

00:02:31.570 --> 00:02:34.150
we remove the word your allegation overhead.

00:02:34.150 --> 00:02:36.440
Now let's discuss about instance types.

00:02:36.440 --> 00:02:37.100
So basically,

00:02:37.100 --> 00:02:40.750
we are having following types off instance like general purpose.

00:02:40.750 --> 00:02:44.680
Instance computer optimize Instance memory optimized instances.

00:02:44.680 --> 00:02:48.450
The stories optimizing chances to let's discuss about one by one.

00:02:48.450 --> 00:02:54.170
So basically general purpose instance provides of balance off compute memory in networking

00:02:54.170 --> 00:02:58.100
resources and can be used for a variety off workloads.

00:02:58.100 --> 00:03:02.060
So let's look into some of the general purpose instances.

00:03:02.060 --> 00:03:05.320
So some of the general purpose and stances is this one.

00:03:05.320 --> 00:03:10.170
You will find that a one daughter medium you in that large a window text large.

00:03:10.170 --> 00:03:10.930
So basically,

00:03:10.930 --> 00:03:16.970
these are the categories off general purpose instances where AWS has provided the balance

00:03:16.970 --> 00:03:19.520
off compute memory and the storage.

00:03:19.520 --> 00:03:21.050
So now let's look in tow,

00:03:21.050 --> 00:03:22.770
other type of instances.

00:03:22.770 --> 00:03:23.460
One more thing.

00:03:23.460 --> 00:03:28.180
I wanted to mention you prior to going to discuss about other type of instances.

00:03:28.180 --> 00:03:31.500
General purpose and stances can be used for Web servers.

00:03:31.500 --> 00:03:36.200
Contravene ized micro service casting pleats distributed data stores persist.

00:03:36.200 --> 00:03:36.810
Scenario.

00:03:36.810 --> 00:03:38.530
You can use general purpose.

00:03:38.530 --> 00:03:39.250
Instance.

00:03:39.250 --> 00:03:43.760
No discuss about another type of instance that is computer optimized.

00:03:43.760 --> 00:03:44.320
Instance.

00:03:44.320 --> 00:03:49.820
Computer optimized instance are ideal for compute bone applications that benefit from high

00:03:49.820 --> 00:03:51.100
performance processor.

00:03:51.100 --> 00:03:54.260
Who you must be asking that in work kind of application.

00:03:54.260 --> 00:03:59.710
This compute optimizing Instant and BU so basically it can be used with bad processing

00:03:59.710 --> 00:04:00.370
workloads,

00:04:00.370 --> 00:04:01.560
media transporting,

00:04:01.560 --> 00:04:03.110
high performance Web servers,

00:04:03.110 --> 00:04:07.420
high performance computing it and majorly machine learning algorithms.

00:04:07.420 --> 00:04:10.300
So let's looking toe computer to my age.

00:04:10.300 --> 00:04:12.710
Instance for that I will show you one director.

00:04:12.710 --> 00:04:18.130
So here we have seen that general purpose computer instance like even dot medium he won

00:04:18.130 --> 00:04:18.810
that large.

00:04:18.810 --> 00:04:24.690
So here computer optimize instance will be like C four dot large c four Gortex like so you

00:04:24.690 --> 00:04:30.240
must be wondering that what this actually see for dot large and X large is so I want to

00:04:30.240 --> 00:04:33.980
show you one off the diagram again so that it would be easy for you.

00:04:33.980 --> 00:04:35.150
So basically,

00:04:35.150 --> 00:04:37.460
when it is refering that c four dot laws.

00:04:37.460 --> 00:04:39.610
That means that the default CPU is,

00:04:39.610 --> 00:04:39.970
too,

00:04:39.970 --> 00:04:48.450
and the memory in Devi's this month 3.75 extra large is going toe before CPU and 7.5 db off

00:04:48.450 --> 00:04:49.050
memory.

00:04:49.050 --> 00:04:54.370
So this is the configuration which is being associated with this name.

00:04:54.370 --> 00:04:55.910
So you must remember that.

00:04:55.910 --> 00:05:00.670
And if you have any doubt you can go and check with eight of Louis site,

00:05:00.670 --> 00:05:04.230
I will provide the link into the North's off this session.

00:05:04.230 --> 00:05:06.090
So here we have seen that.

00:05:06.090 --> 00:05:11.860
Now let's looking toe other type off compute instances that is he five and brought large,

00:05:11.860 --> 00:05:13.380
See if we were not extra large.

00:05:13.380 --> 00:05:13.820
So no,

00:05:13.820 --> 00:05:15.750
let's look into other instance tape.

00:05:15.750 --> 00:05:20.650
So a type of incense in need of Lewis's memory optimized instances.

00:05:20.650 --> 00:05:21.440
So basically,

00:05:21.440 --> 00:05:26.320
memory optimized instances are designed to deliver fast for four months for workload.

00:05:26.320 --> 00:05:28.720
That process large data set in memory.

00:05:28.720 --> 00:05:33.910
So now you must be asking that what kindof application memory off tramways instants can be

00:05:33.910 --> 00:05:35.600
used for so such kind offense,

00:05:35.600 --> 00:05:41.000
chances will we will suited for high performance relational and no sequel databases.

00:05:41.000 --> 00:05:42.730
This is one kind off application.

00:05:42.730 --> 00:05:48.190
Another one is that you can use for distributed were skill Cassis tools that provide in

00:05:48.190 --> 00:05:48.590
memory,

00:05:48.590 --> 00:05:54.820
cashing off key value tape off data like readies meme cast such kind of an application the

00:05:54.820 --> 00:06:00.290
third kind off application you can think off in memory databases using optimized a trans

00:06:00.290 --> 00:06:05.540
too rich for Mitt and analytics for Business intelligence like Recipe Hannah.

00:06:05.540 --> 00:06:10.750
So these are some of the examples where you can use memory optimized instances.

00:06:10.750 --> 00:06:12.750
Let's look into some of the name,

00:06:12.750 --> 00:06:16.480
so these are some of the memory optimized are four door,

00:06:16.480 --> 00:06:21.590
large R four dot extra large are porn or two extra large a specification off these thing?

00:06:21.590 --> 00:06:26.410
You will find that eight of Louis site that I will share with you in the North section off

00:06:26.410 --> 00:06:27.050
decision.

00:06:27.050 --> 00:06:33.170
But just consider that so it is nothing but the large and extra large sizes specifications

00:06:33.170 --> 00:06:35.580
as Bodo type off instances.

00:06:35.580 --> 00:06:37.510
If you're talking about memory,

00:06:37.510 --> 00:06:43.370
that means the size of the memories large if we're talking about to compute in stances and

00:06:43.370 --> 00:06:44.900
size of the CPU is large.

00:06:44.900 --> 00:06:46.730
If we're talking about the stories,

00:06:46.730 --> 00:06:48.250
then that this sizes large,

00:06:48.250 --> 00:06:50.990
so let's jump into another type of instance,

00:06:50.990 --> 00:06:53.330
and we were looking toe that so no,

00:06:53.330 --> 00:06:56.220
we will discuss about the storage optimizing senses.

00:06:56.220 --> 00:06:57.420
So basically,

00:06:57.420 --> 00:07:02.630
stories operations Chances are designed for workloads that require high sequence,

00:07:02.630 --> 00:07:07.060
will read and write access to a very large data sets on local storage.

00:07:07.060 --> 00:07:12.440
So such kind off instance are designed to deliver tens off thousands off low latency.

00:07:12.440 --> 00:07:14.550
Render my operations per second.

00:07:14.550 --> 00:07:16.180
So the applications.

00:07:16.180 --> 00:07:22.070
So you must be asking that in what kind of a scenario you were going to use such instances

00:07:22.070 --> 00:07:22.070
.

00:07:22.070 --> 00:07:27.890
So these intense is our mainly used for massive parallel processing data warehouse kind off

00:07:27.890 --> 00:07:28.670
application.

00:07:28.670 --> 00:07:30.010
My produces.

00:07:30.010 --> 00:07:34.390
How do distributed computing or law or data processing applications?

00:07:34.390 --> 00:07:36.070
So there are various scenarios.

00:07:36.070 --> 00:07:39.460
So let's look into some of the stories optimized instances.

00:07:39.460 --> 00:07:46.070
So the storage optimizes chances they will find into AWS console Cordy to dot extra large

00:07:46.070 --> 00:07:48.640
detour to extra alliance with some off this one,

00:07:48.640 --> 00:07:53.960
so you will get all those detail into it of lewisite if we want o loan a boat word this

00:07:53.960 --> 00:07:54.430
detour,

00:07:54.430 --> 00:07:58.940
and that's when this thing is that you must have to visit day the bluest site for the time

00:07:58.940 --> 00:07:59.150
being.

00:07:59.150 --> 00:08:03.160
Just understand that the storage optimized instances are nothing better.

00:08:03.160 --> 00:08:04.380
Shape off instance,

00:08:04.380 --> 00:08:09.860
which has large number off historic capacity so that it can perform high reading rate

00:08:09.860 --> 00:08:10.700
operations.

00:08:10.700 --> 00:08:10.900
So,

00:08:10.900 --> 00:08:11.160
no,

00:08:11.160 --> 00:08:12.870
let's proceed further and looking toe.

00:08:12.870 --> 00:08:13.560
Other topic.

00:08:13.560 --> 00:08:17.790
So now we have understand that aws instance types?

00:08:17.790 --> 00:08:18.070
No,

00:08:18.070 --> 00:08:20.470
we were looking toe crocheting options,

00:08:20.470 --> 00:08:21.780
as we all know,

00:08:21.780 --> 00:08:24.910
that VW ists has variety of services,

00:08:24.910 --> 00:08:27.250
and these always is a rebel level,

00:08:27.250 --> 00:08:31.680
as people use it on the same aspect for easy to instance,

00:08:31.680 --> 00:08:34.360
aws off radius purchasing options.

00:08:34.360 --> 00:08:35.750
So let's look into that.

00:08:35.750 --> 00:08:40.200
So basically you can approaches the aid of Louis on demand.

00:08:40.200 --> 00:08:40.720
Instance.

00:08:40.720 --> 00:08:45.890
That means how many number of seconds you can use you can people that then it has resulted

00:08:45.890 --> 00:08:45.890
.

00:08:45.890 --> 00:08:46.440
Instance,

00:08:46.440 --> 00:08:49.600
that means you can pour just at a significant discount.

00:08:49.600 --> 00:08:53.910
That means you can result due in stand for longer contract like one year,

00:08:53.910 --> 00:08:54.560
and to you,

00:08:54.560 --> 00:08:55.370
the benefit off.

00:08:55.370 --> 00:09:01.010
This kind off purchasing option is that AWS provide a huge discount on such poor chasing

00:09:01.010 --> 00:09:03.610
option on the weren't instances little costlier.

00:09:03.610 --> 00:09:05.620
But if we're going with the result instance,

00:09:05.620 --> 00:09:07.130
then you will be getting it,

00:09:07.130 --> 00:09:07.490
you know,

00:09:07.490 --> 00:09:08.660
discounted price.

00:09:08.660 --> 00:09:13.810
But the problem with this kind of a changing option is that you have to go into contract a

00:09:13.810 --> 00:09:14.880
long term contract,

00:09:14.880 --> 00:09:17.360
then only you can get the benefit of discount.

00:09:17.360 --> 00:09:19.450
If we're planning for long term projects,

00:09:19.450 --> 00:09:22.390
then this purchasing option is really a good option.

00:09:22.390 --> 00:09:24.980
So now discuss about another type of instance,

00:09:24.980 --> 00:09:27.330
purchasing option that is subdued.

00:09:27.330 --> 00:09:28.350
Result instance.

00:09:28.350 --> 00:09:30.770
So basically in such kind of option,

00:09:30.770 --> 00:09:34.440
it enables you to poaches capacity reservations.

00:09:34.440 --> 00:09:36.030
That record on a daily,

00:09:36.030 --> 00:09:40.880
weekly or monthly basis is that they're specified the start time and duration borrow one

00:09:40.880 --> 00:09:41.070
year,

00:09:41.070 --> 00:09:41.450
Tom.

00:09:41.450 --> 00:09:42.730
So in a simple language,

00:09:42.730 --> 00:09:48.670
you can understand it that you have to re committed to use this instance for at least one

00:09:48.670 --> 00:09:49.050
year.

00:09:49.050 --> 00:09:52.470
And you know that when you are going to use this instance,

00:09:52.470 --> 00:09:55.060
this type of purchase option is very handy.

00:09:55.060 --> 00:10:00.570
You resolve the capacity in advance so that you know it is every level when you need it to

00:10:00.570 --> 00:10:00.930
Doolin.

00:10:00.930 --> 00:10:07.560
Chances are good choice for workloads that don't run continuously but do run on a regular

00:10:07.560 --> 00:10:08.160
sea do.

00:10:08.160 --> 00:10:10.990
This would be really useful and cost effective.

00:10:10.990 --> 00:10:16.470
You can see dual instances for an application that runs during business arts or or bad

00:10:16.470 --> 00:10:19.270
processing that France at the end of the week,

00:10:19.270 --> 00:10:23.760
so no move forward and look into a sport Instances that is another kind off instance.

00:10:23.760 --> 00:10:28.260
Poor Choosing options to a sport Instances is another kind of instance.

00:10:28.260 --> 00:10:29.430
Pricing options,

00:10:29.430 --> 00:10:34.920
which works on bidding system where the price off easy to instances getting changed on an

00:10:34.920 --> 00:10:40.150
hourly basis and it will be every level are allocated to you if you're bidding places

00:10:40.150 --> 00:10:41.610
maximum than others.

00:10:41.610 --> 00:10:44.330
But it will be lured than on demand price.

00:10:44.330 --> 00:10:47.920
Maximum price is not set than the on demand prices.

00:10:47.920 --> 00:10:49.260
The price for the sport.

00:10:49.260 --> 00:10:49.880
Instance,

00:10:49.880 --> 00:10:51.270
Such kind off instance.

00:10:51.270 --> 00:10:56.710
Pricing option is really beneficial and cost effective if your task is bad jobs,

00:10:56.710 --> 00:10:59.160
background processing and optional tasks.

00:10:59.160 --> 00:11:03.790
But it is not a good idea to have a sport instance for many stream task,

00:11:03.790 --> 00:11:05.670
because the moment if anybody,

00:11:05.670 --> 00:11:07.950
is being more than whatever the price,

00:11:07.950 --> 00:11:09.990
which you're paying for the sea to instance,

00:11:09.990 --> 00:11:10.300
it is.

00:11:10.300 --> 00:11:13.630
Get a located toe that person for a doctor ask,

00:11:13.630 --> 00:11:15.020
You have to use this thing,

00:11:15.020 --> 00:11:18.750
this port instance and you know they're the aeration how long it will run.

00:11:18.750 --> 00:11:24.210
Another type of pricing option is the dedicated hosts and dedicated instances,

00:11:24.210 --> 00:11:25.870
so both are almost similar.

00:11:25.870 --> 00:11:29.020
Were dedicated host you can be by poor host,

00:11:29.020 --> 00:11:31.620
and he'll you will pay by poor instance.

00:11:31.620 --> 00:11:35.590
In both the cases were dedicated instance and dedicated.

00:11:35.590 --> 00:11:42.200
Host toe comedian Easy two instances launched onto physical so world that are dedicated for

00:11:42.200 --> 00:11:43.930
your specific use it.

00:11:43.930 --> 00:11:48.740
So another type off instance purchasing option is the capacity reservation.

00:11:48.740 --> 00:11:50.240
In this scheme,

00:11:50.240 --> 00:11:53.580
you can reserve the capacity for your image honesty.

00:11:53.580 --> 00:11:58.150
Two instances in a specific availability June for any duration.

00:11:58.150 --> 00:12:03.420
So that means it give you the ability to create and manage Kaposi's reservations

00:12:03.420 --> 00:12:07.650
independently from the billing discounts offered by reserved instance.

00:12:07.650 --> 00:12:08.290
So,

00:12:08.290 --> 00:12:08.530
guys,

00:12:08.530 --> 00:12:11.390
these are some of the instance purchasing option.

00:12:11.390 --> 00:12:16.030
We will be mainly focusing on on demand instances where this session,

00:12:16.030 --> 00:12:19.950
as we're going to use free tier offering offered of Louis.

00:12:19.950 --> 00:12:23.580
So this is what I wanted to discuss with you in the session.

00:12:23.580 --> 00:12:24.110
See,

00:12:24.110 --> 00:12:28.710
in the next session where we will be it an easy to instant and connect that if you to

00:12:28.710 --> 00:12:31.110
instant so that is going to really lab session.

00:12:31.110 --> 00:12:32.320
See you in the next session,

00:12:32.320 --> 00:12:32.650
Bubba

