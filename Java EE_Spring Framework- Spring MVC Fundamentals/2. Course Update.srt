1
00:00:01,040 --> 00:00:06,420
Spring's architecture is a traditional model‑view‑controller design pattern.

2
00:00:06,420 --> 00:00:08,620
Since it does follow this methodology,

3
00:00:08,620 --> 00:00:12,640
it's adaptable to many scenarios in which we can develop apps.

4
00:00:12,640 --> 00:00:16,640
We have a module for each of the parts of this pattern throughout the course,

5
00:00:16,640 --> 00:00:18,140
but to give you a brief introduction,

6
00:00:18,140 --> 00:00:24,030
the view can be a simple REST service or JSP page and can handle more

7
00:00:24,030 --> 00:00:27,870
complex scenario such as compiling those JSPs and even work with various

8
00:00:27,870 --> 00:00:30,790
third‑party templating tools and frameworks.

9
00:00:30,790 --> 00:00:33,680
The controller is the same regardless of what the front

10
00:00:33,680 --> 00:00:35,990
end or back end that we're using is.

11
00:00:35,990 --> 00:00:40,740
It's all written using Spring beans and configured just like any Spring bean.

12
00:00:40,740 --> 00:00:42,630
The back end, much like the front end,

13
00:00:42,630 --> 00:00:47,840
can be swapped out with various persistent strategies, JPA, Hibernate,

14
00:00:47,840 --> 00:00:50,830
JDBC, even non‑relational databases.

15
00:00:50,830 --> 00:00:52,710
Spring has support for them.

16
00:00:52,710 --> 00:00:56,340
One thing that is different now than when we originally released this course

17
00:00:56,340 --> 00:01:00,840
is that all of this can be figured with or without XML.

18
00:01:00,840 --> 00:01:03,120
Upon the initial release of this course,

19
00:01:03,120 --> 00:01:06,580
there was a lot of debate between existing frameworks out there and

20
00:01:06,580 --> 00:01:10,420
which to use. Simplifying this course with the update,

21
00:01:10,420 --> 00:01:15,190
we opted out of discussing these comparisons of those various frameworks.

22
00:01:15,190 --> 00:01:17,370
One thing that has changed, though,

23
00:01:17,370 --> 00:01:21,540
is the number of apps now being completely self contained or apps

24
00:01:21,540 --> 00:01:25,680
being developed without XML at all. Specifically, the lack of

25
00:01:25,680 --> 00:01:30,930
web.XML or with later servlet specifications, any XML at all.

26
00:01:30,930 --> 00:01:34,020
Showing the difference of this approach will be the main focus in

27
00:01:34,020 --> 00:01:40,000
the update of this course, while showing you that model‑view‑controller design pattern.

