WEBVTT

00:10.760 --> 00:16.390
Pessoal bem vindo à aula sobre isso porque basicamente essa vai ser uma aula de introdução sobre si

00:16.750 --> 00:17.680
sobre essa ferramenta.

00:18.370 --> 00:20.140
Então vai ver o que é o esporte.

00:20.140 --> 00:29.500
A comparação do esporte se produz que são esporte disse o R10 e operações nesse esporte disse Eu quero

00:29.500 --> 00:34.810
que vocês não se preocupem caso vocês não entendam todos os conceitos apresentados na sala porque eles

00:34.810 --> 00:42.560
vão ficar mais claros concentrar realmente na área de programação completou o INSS Park Park.

00:42.910 --> 00:48.160
Uma das mais novas tecnologias usadas no tratamento de Big Data é começar uma área que está em constante

00:48.160 --> 00:48.730
mudança.

00:48.740 --> 00:56.350
Quero deixar frisado que eu estou falando isso em janeiro de 2018 provavelmente daqui a talvez daqui

00:56.340 --> 01:02.130
a um ano dois anos e sabe tudo que eu estou fazendo aqui e agora posso possa não ser mais verdade.

01:02.540 --> 01:09.280
Era um projeto em código fonte aberto no Apache e seu primeiro lançamento foi em fevereiro de 2013 mas

01:09.280 --> 01:12.870
ele ganhou muita popularidade devido à sua facilidade e à sua velocidade.

01:12.880 --> 01:19.310
Por isso o nome Spark tem que pensar o esporte como uma alternativa e produz.

01:19.450 --> 01:26.740
Caso vocês não tenham entendido muito bem que produz isso vai ficar claro nas aulas seguintes.

01:27.160 --> 01:32.700
Mas basicamente é produção é uma forma que a gente tem de tratar e fazer operações e paralelos em conjuntos

01:32.700 --> 01:37.250
de dados muito grandes e espero que ele vem como uma alternativa a isso.

01:37.620 --> 01:43.390
Eu espero que ele pode usar uma fonte muito variável de dados SUS supondo algumas aqui por exemplo Cassandra

01:43.910 --> 01:51.550
um serviço S3 do Amazon Amazon Web Services o próprio Duke descobriu todo o sistema e muitas outras

01:51.550 --> 01:52.960
opções.

01:53.460 --> 01:55.030
E a grande diferença.

01:55.210 --> 02:01.580
Basta comparar que o esporte produz e produz necessita que os dados sejam guardados no HD e.

02:01.920 --> 02:08.380
Isso porque não consegue realizar operações até 100 vezes mais rápidas que ele e produz por isso que

02:08.380 --> 02:10.230
ele ganhou tanta popularidade.

02:10.240 --> 02:13.940
Como é que ele consegue isso e produz.

02:14.170 --> 02:19.840
O principal problema dele em termos de eficiência é que ele escreve a maioria das operações do disco

02:19.840 --> 02:21.510
após cada operação.

02:21.520 --> 02:24.390
Já o esporte ele mantém a maioria dos dados na memória.

02:25.180 --> 02:31.090
Então você deve ter imaginando que em vez de ter que escrever no HD cada operação que eu realizei eu

02:31.210 --> 02:32.590
mantenho uma.

02:32.620 --> 02:39.370
Isso me dá um ganho de velocidade significativa até porque o processo de escrever no HD é demorado e

02:39.370 --> 02:43.710
aí eu espero que ele usa para usar o HD apenas como forma de se mexer.

02:45.740 --> 02:52.630
Falo pouco sobre o que são os Hardy diz o RBD uso do Spark no núcleo do espaço que está a ideia do RDD

02:52.890 --> 02:57.910
que ele descobriu a aceite um conjunto de dados distribuídos resiliente.

02:57.910 --> 03:03.180
é nisso que os que se baseia é nesse conjunto dos dados que as operações são feitas.

03:03.640 --> 03:06.780
O Hard Disk possui quatro características principais.

03:06.820 --> 03:09.290
Eles possuem distribuição de conjuntos de dados.

03:09.400 --> 03:11.650
São tolerantes à falha.

03:11.650 --> 03:16.090
As operações são feitas em paralelo como o nome produz e a responsabilidade de usar diversas fontes

03:16.090 --> 03:18.010
de dados como já citei anteriormente.

03:18.870 --> 03:23.770
Então tem aqui basicamente como é que se dá o diagrama do Spark.

03:23.800 --> 03:24.540
Você de disco.

03:24.570 --> 03:28.630
Então a gente tem um programa se comunica com um cluster do cluster.

03:28.630 --> 03:32.450
Ele vai executar ordens e controlar os nossos nomes.

03:34.720 --> 03:39.760
Existem basicamente dois tipos de operações que podem ser feitas com os nomes de disquete transformações

03:39.760 --> 03:41.570
e ações.

03:41.660 --> 03:44.740
Ações básicas citando algumas delas aqui.

03:44.920 --> 03:52.180
Colocar por exemplo Forest Collet Caltech e o Texas fortes é uma operação que retorna o primeiro elemento

03:52.180 --> 03:58.540
de um hard rock que retorna todos os elementos de como um a Rei do trailer do programa retorna o número

03:58.540 --> 04:02.160
de elementos um HD e o tempo que retornam a rei com os primeiros elementos B

04:07.860 --> 04:15.260
eu tenho também transformações básicas posso colocar por exemplo o filtro MAC e o flash filtra o dito

04:15.270 --> 04:16.490
que já é intuitivo.

04:16.530 --> 04:21.970
Ele aplica uma função a cada elemento ou retorna apenas elementos que a tornaram muito semelhante a

04:21.990 --> 04:26.480
por exemplo fazer seleções em data frames ou num pais MET.

04:26.610 --> 04:31.470
Eu vou aplicar uma função para cada elemento e eu vou preservar o número de elementos.

04:31.480 --> 04:37.380
Então faço uma função em cada um deles e retorna uma resposta que vai ter a mesma dimensão do aparelho

04:37.380 --> 04:39.680
de entrada e o flash MAP.

04:39.690 --> 04:46.960
Ele basicamente transforma cada elemento em um elemento no caso que vai ter tamanho zero a ele.

04:47.010 --> 04:49.690
Então ele pode pode ou não mudar o número de elementos.

04:49.710 --> 04:57.930
Em geral sim a pessoa e comparação do Mac para Mac por exemplo Mac ele é um exemplo de função que a

04:57.930 --> 05:02.810
gente poderia utilizar o Mac seria para obter a letra de uma lista de nomes e para um tem 10 nomes.

05:02.830 --> 05:09.600
Vou ter uma variável de resposta um vetor com tamanho 10 onde cada um dos pontos do vetor vai ser uma

05:09.600 --> 05:12.790
letra correspondente a primeira letra no nome.

05:13.470 --> 05:19.140
Já o flat Mac posso por exemplo estar transformando um corpo de texto em uma lista de palavras então

05:19.140 --> 05:25.020
tenho o texto que no caso vai ser um vetor com uma string grandona que como resposta eu vou ter um vetor

05:25.050 --> 05:31.950
com a quantidade de posições de valores iguais o número de palavras usualmente vai ficar mais claro

05:31.950 --> 05:33.440
como o programa a partir da pessoa.

05:34.720 --> 05:40.530
E aqui eu vou comparar também o Edu espessura do pai que reduz é uma ação que irá agregar os elementos

05:40.530 --> 05:47.340
do Word bebê usando uma função que retorna um elemento apenas e o que é uma ação que irá agregar parte

05:47.340 --> 05:50.230
dos elementos de usando uma função retornam para DD.

05:51.000 --> 05:56.430
Então pensem nessas pessoas para comparem essas duas ideias.

05:56.610 --> 05:58.460
O pai só não disse muito sobre o pai.

05:59.610 --> 06:05.820
Obviamente o pessoal só fica mais claro nas aulas de programação em SPARC e os parques para deixar registrado

06:05.820 --> 06:10.060
ele está em constante desenvolvimento novas atualizações saem a todos os instantes.

06:10.350 --> 06:16.770
Então o ecossistema do esporte agora inclui por exemplo um esporte que secou SQL suporte data frames

06:17.270 --> 06:21.360
M Libby o FX espaço Shiny.

06:21.750 --> 06:28.860
Acredito que eu dei um envio relevante para começar a trabalhar com o Spark eu vou às aulas está ensinando

06:28.860 --> 06:34.540
vocês como configurar uma conta no WS ou na Amazon ABC ambos para gente como se configura não somente

06:34.540 --> 06:40.490
isso porque eu vou mostrar também pessoal um artigo na qual vocês vão poder tá configurando Spark em

06:40.720 --> 06:46.350
todos os locais para que caso você não queiram pesquisar o WS mas quero deixar bem claro que eu recomendo

06:46.350 --> 06:47.490
que vocês usam Ws.

06:48.660 --> 06:53.040
Então qualquer dúvida nessa parte teórica me pergunto na sessão de perguntas e respostas vou estar aberto

06:53.040 --> 06:57.570
a qualquer tipo de dúvida que se estiverem lá aproximar o pessoal.
