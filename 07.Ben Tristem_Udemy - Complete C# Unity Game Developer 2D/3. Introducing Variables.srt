1
1

00:00:03,940  -->  00:00:06,741
In this video,
we're gonna discuss what are variables and
2

2

00:00:06,741  -->  00:00:09,440
we're gonna be adding a couple
of variables to our code.
3

3

00:00:09,440  -->  00:00:11,170
So let's start by defining variables.
4

4

00:00:11,170  -->  00:00:13,035
We can see that variables are like boxes.
5

5

00:00:13,035  -->  00:00:17,053
So here's a box here and
the variable's name is hitPoints and
6

6

00:00:17,053  -->  00:00:18,835
it has been assigned 20.
7

7

00:00:18,835  -->  00:00:20,925
So there's a couple of statements
here that we can make.
8

8

00:00:20,925  -->  00:00:23,525
Each variable is of a particular type and
9

9

00:00:23,525  -->  00:00:26,295
I'll give you some examples
of types in a moment.
10

10

00:00:26,295  -->  00:00:29,335
Each variable has a name,
in this case hitPoints.
11

11

00:00:29,335  -->  00:00:33,765
And each variable contains data that we
can use in other places in our code and
12

12

00:00:33,765  -->  00:00:34,835
throughout our game.
13

13

00:00:34,835  -->  00:00:37,770
And with our example here,
we have a value of 20.
14

14

00:00:37,770  -->  00:00:41,670
So, in this example, we would write
this in our code as int which stands for
15

15

00:00:41,670  -->  00:00:43,630
integer which means it's a whole number.
16

16

00:00:43,630  -->  00:00:46,660
hitPoints, that's the name that
we've given to our variable.
17

17

00:00:46,660  -->  00:00:50,000
Starts with a lower case letter
when we're writing a variable.
18

18

00:00:50,000  -->  00:00:52,800
Equals, now it's not equals,
it's an assignment.
19

19

00:00:52,800  -->  00:00:57,547
You need to think of this as, we're
assigning whatever is on the right side,
20

20

00:00:57,547  -->  00:01:00,260
is now going to be
the value of the left side.
21

21

00:01:00,260  -->  00:01:06,210
So hitPoints is now has a value of 20,
and then semicolon at the end.
22

22

00:01:06,210  -->  00:01:10,610
So our hitPoints box, our hitPoint
variable, now contains the data of 20.
23

23

00:01:10,610  -->  00:01:15,940
So if we look at another couple of
examples, we have float, which is a type,
24

24

00:01:15,940  -->  00:01:21,560
a float variable means that it has decimal
places, it's a number with decimal places.
25

25

00:01:21,560  -->  00:01:25,340
The name is speed so
you can see our box here is speed and
26

26

00:01:25,340  -->  00:01:27,510
it has been assigned a value of 3.8.
27

27

00:01:27,510  -->  00:01:30,180
That's the value that's
sitting with inside the box.
28

28

00:01:30,180  -->  00:01:34,740
And if it's a float we need to put
an f on the end and then semi-colon.
29

29

00:01:34,740  -->  00:01:39,510
We can create a bool variable, bools
mean that something is true or false.
30

30

00:01:39,510  -->  00:01:42,742
And our bool of isAlive is currently true.
31

31

00:01:42,742  -->  00:01:46,871
And see is Alive and then
the assignment inside the box is true.
32

32

00:01:46,871  -->  00:01:51,766
And the last example I've got
here is a type string name, so,
33

33

00:01:51,766  -->  00:01:57,886
the variable is called name, it's of
type string and we've assigned it as,
34

34

00:01:57,886  -->  00:02:03,450
the data value of Rick,
that's what name has been assigned as.
35

35

00:02:03,450  -->  00:02:06,590
So, let's get tangible and
put this within our code.
36

36

00:02:06,590  -->  00:02:10,330
What we need to do is jump back
over now in our script here, so
37

37

00:02:10,330  -->  00:02:13,740
just a reminder, if you've been
closed down and you started up again,
38

38

00:02:13,740  -->  00:02:17,540
we're now number wizards script,
we're in visual studio.
39

39

00:02:17,540  -->  00:02:23,540
Is within our start method here, we want
to first of all declare the variable and
40

40

00:02:23,540  -->  00:02:25,360
then we are going to
intialize the variable.
41

41

00:02:25,360  -->  00:02:29,930
So we'll give ourselves a little bit
of space underneath the word start and
42

42

00:02:29,930  -->  00:02:34,430
before we get to our debug.logs
when you're typing here, int,
43

43

00:02:34,430  -->  00:02:36,430
cuz it's a type integer we're creating.
44

44

00:02:36,430  -->  00:02:38,980
We'll call it max,
we could call it maximum or
45

45

00:02:38,980  -->  00:02:41,700
maximumguess, that's up
to us what we call it.
46

46

00:02:41,700  -->  00:02:45,930
So long as it's very, very clear what
the name of the variable is representing,
47

47

00:02:45,930  -->  00:02:47,355
then we can call it what we like.
48

48

00:02:47,355  -->  00:02:51,090
So int max, and
then if we put a semi colon on the end,
49

49

00:02:51,090  -->  00:02:54,720
that would be enough to do what's called,
declaring the variable.
50

50

00:02:54,720  -->  00:02:58,690
We hereby state we declare that
there's a variable called max.
51

51

00:02:58,690  -->  00:03:03,900
Now, we can leave it and say later on in
our code, we would use that variable.
52

52

00:03:03,900  -->  00:03:08,050
We would assign a value to it, maybe
we don't know what max is at start and
53

53

00:03:08,050  -->  00:03:10,950
it's only after something happens
that we know what max is.
54

54

00:03:10,950  -->  00:03:12,560
But for now, we know what max is for,
55

55

00:03:12,560  -->  00:03:15,360
we're going to assign it at
this point in time as well.
56

56

00:03:15,360  -->  00:03:20,300
We're gonna initialize it
by saying int max = 1000.
57

57

00:03:20,300  -->  00:03:22,190
So that's our maximum guess.
58

58

00:03:22,190  -->  00:03:25,280
And you may notice a green squiggly
line underneath the word max,
59

59

00:03:25,280  -->  00:03:29,890
that's Visual Studio saying to us, hey,
here's a variable that you've declared but
60

60

00:03:29,890  -->  00:03:31,620
you're not using it anywhere in your code.
61

61

00:03:31,620  -->  00:03:37,173
That'll change in a just moment, I'm gonna
come down to Line 13 on my script here and
62

62

00:03:37,173  -->  00:03:40,536
you see the highest number
you can pick is 1000.
63

63

00:03:40,536  -->  00:03:42,706
So, instead of having
that written straight in,
64

64

00:03:42,706  -->  00:03:45,185
cuz if we change our mind about 1000,
we need to go and
65

65

00:03:45,185  -->  00:03:47,736
find this statement and
take it out there and change it up.
66

66

00:03:47,736  -->  00:03:49,556
What if It changes over time?
67

67

00:03:49,556  -->  00:03:51,180
What if we want to modify it?
68

68

00:03:51,180  -->  00:03:56,230
It's much, much more powerful for us to
have this as a variable down in here.
69

69

00:03:56,230  -->  00:03:59,350
So, what I'm gonna do is delete this part.
70

70

00:03:59,350  -->  00:04:05,710
So, the highest number you can pick is,
I'm gonna go colon and then leave a space.
71

71

00:04:05,710  -->  00:04:09,270
And then after the quotation mark,
leave another space and
72

72

00:04:09,270  -->  00:04:13,790
type, + and then write in here max and
we'll touch on this spacing
73

73

00:04:13,790  -->  00:04:17,830
a little bit more later on the video but
for now we're focusing on the variable.
74

74

00:04:17,830  -->  00:04:19,530
And so, what we've said in here is,
75

75

00:04:19,530  -->  00:04:23,060
we're gonna print out with our Debug.log
statement the same thing we had before,
76

76

00:04:23,060  -->  00:04:26,948
the highest number you can pick is, but
then we've stopped the string part of it.
77

77

00:04:26,948  -->  00:04:29,530
Unity and C# don't care what's inside,
78

78

00:04:29,530  -->  00:04:32,460
the string, they're like, I'm just gonna
printout whatever you've got in there and
79

79

00:04:32,460  -->  00:04:37,900
we've added a + operator here
which allows us to join on max.
80

80

00:04:37,900  -->  00:04:38,860
And what is max?
81

81

00:04:38,860  -->  00:04:40,260
Well, you can see when
you highlight over or
82

82

00:04:40,260  -->  00:04:43,688
click over it knows max over here is 1000.
83

83

00:04:43,688  -->  00:04:50,000
I'm gonna put put something in a little
bit silly, just so you know it's working.
84

84

00:04:50,000  -->  00:04:55,060
I'm gonna put in, we'll see 99999,
save that, come over into Unity and
85

85

00:04:55,060  -->  00:04:59,590
then click on play and
we should see in here,
86

86

00:04:59,590  -->  00:05:02,620
it'll say, the highest number
you can pick is 99999, so
87

87

00:05:02,620  -->  00:05:06,480
it's reading from the variable
which is very cool.
88

88

00:05:06,480  -->  00:05:08,790
Just unplay that, come back in here.
89

89

00:05:08,790  -->  00:05:12,710
And so we've got our maximum value that is
being printed out on the screen because
90

90

00:05:12,710  -->  00:05:14,890
it's printing out this as a variable.
91

91

00:05:14,890  -->  00:05:17,333
So, I can come back in here again and
change it back to 1000.
92

92

00:05:17,333  -->  00:05:20,093
So, that leads me to the challenge
I've got for you, it's a nice,
93

93

00:05:20,093  -->  00:05:21,650
straightforward challenge.
94

94

00:05:21,650  -->  00:05:25,680
And the challenge is, to create a minimum,
create a minimum variable and
95

95

00:05:25,680  -->  00:05:27,210
assign it a value of 1.
96

96

00:05:27,210  -->  00:05:32,620
And then alter the player instructions to
use the minimum variable as we did for
97

97

00:05:32,620  -->  00:05:33,320
the maximum.
98

98

00:05:33,320  -->  00:05:37,010
So, just pretty much the same as
we've done here with max and max.
99

99

00:05:37,010  -->  00:05:39,260
Do the same for min and min.
100

100

00:05:39,260  -->  00:05:41,460
So, jump in and
take on that challenge now.
101

101

00:05:41,460  -->  00:05:42,169
See you in a moment.
102

102

00:05:44,190  -->  00:05:45,000
Okay, welcome back.
103

103

00:05:45,000  -->  00:05:46,420
This is a pretty straightforward one, but
104

104

00:05:46,420  -->  00:05:49,750
this is the foundation as we're
going through this process,
105

105

00:05:49,750  -->  00:05:52,770
getting this stuff right, this is what
will really set you up for success.
106

106

00:05:52,770  -->  00:05:54,680
So, I'm gonna give myself
another line in here, and
107

107

00:05:54,680  -->  00:05:56,960
type in int, again, it's an integer.
108

108

00:05:56,960  -->  00:06:02,110
Call it min, assign it a value of 1
enclose it with semicolon as always.
109

109

00:06:02,110  -->  00:06:04,570
And I'll come down into
my statement down here.
110

110

00:06:04,570  -->  00:06:09,050
The lowest number you can pick is, and
I will put a semicolon and a space.
111

111

00:06:09,050  -->  00:06:13,880
I need a space because the spaces
within the quotation marks count.
112

112

00:06:13,880  -->  00:06:16,100
It will give us a space in our console.
113

113

00:06:16,100  -->  00:06:18,770
Plus to do that it would give
us a whole bunch of spaces.
114

114

00:06:18,770  -->  00:06:22,540
But any spaces we do
outside here don't count.
115

115

00:06:22,540  -->  00:06:26,610
Unity and C#, just ignore that,
they don't care about that.
116

116

00:06:26,610  -->  00:06:31,690
I can do +min down here and it would just
ignore all of this white space in here and
117

117

00:06:31,690  -->  00:06:34,660
it would go straight to the next
meaningful thing here, which is there, and
118

118

00:06:34,660  -->  00:06:37,480
will join that right up against
the end of that quotation mark.
119

119

00:06:37,480  -->  00:06:41,440
So, we can do that just so
we can make it nice and clean.
120

120

00:06:41,440  -->  00:06:43,650
It's important to us to make it look good,
but
121

121

00:06:43,650  -->  00:06:47,520
it's not important to Unity
how it uses it, or to C#.
122

122

00:06:47,520  -->  00:06:49,550
Okay, save that.
123

123

00:06:49,550  -->  00:06:52,472
And again, I'm just gonna to do
it something a little bit wacky.
124

124

00:06:52,472  -->  00:06:54,790
I'll do 19 just so I can see if it works.
125

125

00:06:54,790  -->  00:06:56,832
Jump back over into here, click Play.
126

126

00:06:56,832  -->  00:07:01,104
And it should be between 1,019,
there we go.
127

127

00:07:01,104  -->  00:07:05,449
So in this video, we have given
our selves, put that back to one,
128

128

00:07:05,449  -->  00:07:10,821
given ourselves a variable to create
a maximum, a variable to create a minimum,
129

129

00:07:10,821  -->  00:07:14,771
and then we are using that within
a Debug statement here, so
130

130

00:07:14,771  -->  00:07:18,260
that we're joining our
string with our variables.
131

131

00:07:18,260  -->  00:07:20,710
So it prints them out one after the other.
132

132

00:07:20,710  -->  00:07:22,450
Great work and
I'll see you in the next video.
