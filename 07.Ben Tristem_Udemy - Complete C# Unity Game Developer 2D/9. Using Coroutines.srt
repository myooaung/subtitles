1
1

00:00:00,025  -->  00:00:05,491
[SOUND] In this video, we're gonna
introduce the concept of coroutines,
2

2

00:00:05,491  -->  00:00:10,515
a really, really useful approach for
us to allow our game to wait for
3

3

00:00:10,515  -->  00:00:16,180
something to happen or to not continue
until some other conditions are met.
4

4

00:00:16,180  -->  00:00:19,470
So let's talk about what is a coroutine?
5

5

00:00:19,470  -->  00:00:22,650
Let me get my little laser pointer
down here so I can wave it around.
6

6

00:00:22,650  -->  00:00:23,710
What is a coroutine?
7

7

00:00:23,710  -->  00:00:28,410
It's a method which can suspend, otherwise
known as yield, that's an important key
8

8

00:00:28,410  -->  00:00:34,200
word, yield, its execution until the yield
instructions you gave it are met.
9

9

00:00:34,200  -->  00:00:39,270
So yield is another way of saying
give back or relinquish or suspend.
10

10

00:00:39,270  -->  00:00:40,559
So here's a little example
that I've made up.
11

11

00:00:40,559  -->  00:00:44,612
So say, for example,
when your player gets to zero health, so
12

12

00:00:44,612  -->  00:00:49,047
in other words they're supposed to
die when they get to zero health,
13

13

00:00:49,047  -->  00:00:52,340
we want to start or
call the KillPlayer coroutine.
14

14

00:00:52,340  -->  00:00:55,470
And remember, coroutines are methods,
so it's like calling a method,
15

15

00:00:55,470  -->  00:00:56,960
we do it the same way.
16

16

00:00:56,960  -->  00:01:00,520
So we start the KillPlayer, or
we call the KillPlayer coroutine.
17

17

00:01:00,520  -->  00:01:03,820
Within that, we will say, within this
coroutine we say, trigger the death
18

18

00:01:03,820  -->  00:01:09,050
animation, some sort of heroic
explosion or the player falling over.
19

19

00:01:09,050  -->  00:01:11,410
Then we also tell it,
wait for three seconds.
20

20

00:01:11,410  -->  00:01:12,310
Why do we need to do that?
21

21

00:01:12,310  -->  00:01:15,430
Well the death animation
takes three seconds.
22

22

00:01:15,430  -->  00:01:18,460
We go and also say yield until
the death animation is finished.
23

23

00:01:18,460  -->  00:01:21,778
But in my little example here we'll just
say, yield or wait for three seconds, so
24

24

00:01:21,778  -->  00:01:24,296
we know the player's finished
dying all his dramatic death.
25

25

00:01:24,296  -->  00:01:29,365
And then within this method, within this
coroutine, we say restart the level.
26

26

00:01:29,365  -->  00:01:34,415
If we didn't have the yield in there or
if we weren't making this a coroutine,
27

27

00:01:34,415  -->  00:01:39,314
then we would start the death animation
in the exact same frame we'd restart
28

28

00:01:39,314  -->  00:01:41,548
the level, so we'd never see it.
29

29

00:01:41,548  -->  00:01:44,895
And there are some keys words that we need
to use in the coroutine that you need to
30

30

00:01:44,895  -->  00:01:45,920
make sure you include.
31

31

00:01:45,920  -->  00:01:49,078
So the first key word is StartCoroutine.
32

32

00:01:49,078  -->  00:01:51,856
This is when we want to call
this coroutine somewhere.
33

33

00:01:51,856  -->  00:01:53,119
So it can be in a place where,
34

34

00:01:53,119  -->  00:01:55,754
as I said before,
if the player is dying then you might say,
35

35

00:01:55,754  -->  00:01:59,268
when the health reaches zero start
coroutine, and the name of the coroutine.
36

36

00:01:59,268  -->  00:02:01,479
What did we call it in the previous slide?
37

37

00:02:01,479  -->  00:02:05,770
It was KillPlayer, so instead name of
NameOfCoroutine, we would say KillPlayer.
38

38

00:02:05,770  -->  00:02:11,750
So StartCoroutine is one important
keyword, the IEnumerator return type.
39

39

00:02:11,750  -->  00:02:14,471
So remember when we do methods,
if we have the name of the method,
40

40

00:02:14,471  -->  00:02:17,894
if we have void there's no return type,
if we say float it's a float return type.
41

41

00:02:17,894  -->  00:02:21,160
Here the return type is IEnumerator.
42

42

00:02:21,160  -->  00:02:24,230
So we need to have this
IEnumerator return type, and
43

43

00:02:24,230  -->  00:02:29,090
then also the other keyword or
keywords is to yield return.
44

44

00:02:29,090  -->  00:02:32,230
Yield return until some
sort of condition is met.
45

45

00:02:32,230  -->  00:02:35,420
And you can see we've got our things to
do, yield return and then things to do.
46

46

00:02:35,420  -->  00:02:37,780
You can have things to do above,
things to do below, or
47

47

00:02:37,780  -->  00:02:40,990
you can have no things to do at all
depending upon the circumstances, but
48

48

00:02:40,990  -->  00:02:42,560
these are the three important elements.
49

49

00:02:42,560  -->  00:02:45,390
StartCoroutine, IEnumerator,
and yeild return.
50

50

00:02:45,390  -->  00:02:49,620
So within our game I've got a simple
challenge for you, using the information
51

51

00:02:49,620  -->  00:02:53,540
we've put here on the screen,
is to create a simple coroutine.
52

52

00:02:53,540  -->  00:02:58,570
Create a coroutine which prints something
to the console, waits three seconds,
53

53

00:02:58,570  -->  00:03:00,140
then prints something else.
54

54

00:03:00,140  -->  00:03:01,780
So just jumping back up here.
55

55

00:03:01,780  -->  00:03:05,600
So create your coroutine, give it
some sort of name, like PrintAndWait.
56

56

00:03:05,600  -->  00:03:09,400
And then the things to do, we wanna
print something out here, yield for
57

57

00:03:09,400  -->  00:03:13,700
three seconds, and then print something
else afterwards, and then call this.
58

58

00:03:13,700  -->  00:03:15,530
And you can call this in
your start method for now,
59

59

00:03:15,530  -->  00:03:17,287
just put it on the player .cs script.
60

60

00:03:17,287  -->  00:03:19,173
Sow we can do this,
we've got that open at the moment.
61

61

00:03:19,173  -->  00:03:25,180
And you can start your coroutine calling
whatever you've called your coroutine.
62

62

00:03:25,180  -->  00:03:28,910
And the last bit of information is,
cuz I haven't told you this yet,
63

63

00:03:28,910  -->  00:03:33,330
I'll tell you this now,
is to use yield return new WaitForSeconds.
64

64

00:03:33,330  -->  00:03:36,800
That's one way that we can say, wait
until a particular thing has happened.
65

65

00:03:36,800  -->  00:03:39,310
Wait for seconds, and
then I've just put in there, 3.
66

66

00:03:39,310  -->  00:03:44,670
So on this line we would wait say
yield return wait four seconds three.
67

67

00:03:44,670  -->  00:03:49,150
Okay, so I'll leave this slide up so
you've got this on screen.
68

68

00:03:49,150  -->  00:03:50,704
Give that your best shot and
I'll see you back here in a moment.
69

69

00:03:53,519  -->  00:03:56,417
Okay, so if that challenge was
a big challenge, not a problem,
70

70

00:03:56,417  -->  00:03:59,980
we're gonna be dealing with coroutines
a few times throughout this section.
71

71

00:03:59,980  -->  00:04:03,500
So what I really want you to do is to have
a look at it and think about it without me
72

72

00:04:03,500  -->  00:04:06,630
just giving you the exact approach and
answer and you following along.
73

73

00:04:06,630  -->  00:04:08,830
So giving you a chance
to think about it first.
74

74

00:04:08,830  -->  00:04:13,170
So what we'll do is I will create
underneath my Update method here.
75

75

00:04:13,170  -->  00:04:14,810
And just to note,
this is gonna be a throwaway.
76

76

00:04:14,810  -->  00:04:16,470
We'll be changing this,
we're not keeping this.
77

77

00:04:16,470  -->  00:04:18,600
This is just for an example for now.
78

78

00:04:18,600  -->  00:04:21,030
So I'll just put it in here.
79

79

00:04:21,030  -->  00:04:27,286
I'll say, IEnumerator.
80

80

00:04:27,286  -->  00:04:29,580
And what am I going to call my coroutine?
81

81

00:04:29,580  -->  00:04:33,426
I'll say, PrintAndWait, and
82

82

00:04:33,426  -->  00:04:38,180
give my open and closed parentheses.
83

83

00:04:38,180  -->  00:04:42,650
And then open my curly braces, and
you can see it's telling us already,
84

84

00:04:42,650  -->  00:04:46,109
hang on a minute,
you haven't given me a yield return.
85

85

00:04:46,109  -->  00:04:47,067
Not a problem, we'll do that in a moment.
86

86

00:04:47,067  -->  00:04:51,809
First of all we'll say debug.log.
87

87

00:04:51,809  -->  00:04:53,380
And what do we want to say in here?
88

88

00:04:53,380  -->  00:04:58,724
First message sent, boss.
89

89

00:04:58,724  -->  00:05:04,420
[LAUGH] And then, I'll put in my yield,
so yield return new.
90

90

00:05:04,420  -->  00:05:07,250
We need the new keyword in
this particular instance.
91

91

00:05:07,250  -->  00:05:15,190
Yield return new, and
it's gonna be a new WaitForSeconds,
92

92

00:05:15,190  -->  00:05:18,680
open and close parentheses,
put a three in there, and semicolon.
93

93

00:05:18,680  -->  00:05:24,744
So yield return, you WaitForSeconds(3),
and then we'll print something else out,
94

94

00:05:24,744  -->  00:05:28,750
debug.log, and
we'll write in here the second message.
95

95

00:05:33,630  -->  00:05:35,332
Second message, yo, okay.
96

96

00:05:35,332  -->  00:05:37,350
[LAUGH] Getting all gangster again.
97

97

00:05:37,350  -->  00:05:37,870
Not really.
98

98

00:05:37,870  -->  00:05:39,540
And then we'll save this.
99

99

00:05:39,540  -->  00:05:42,760
We need a spot to be calling this.
100

100

00:05:42,760  -->  00:05:48,350
One note is [LAUGH] try to avoid
putting coroutines within update.
101

101

00:05:48,350  -->  00:05:50,870
We're going to talking about that a bit
more throughout this whole section,
102

102

00:05:50,870  -->  00:05:54,070
but generally we don't want to
be firing off coroutines, fire,
103

103

00:05:54,070  -->  00:05:55,900
fire, fire, fire, fire,
every single frame.
104

104

00:05:55,900  -->  00:05:58,358
It creates all sorts of
madness if you do that.
105

105

00:05:58,358  -->  00:06:05,294
So I'm gonna put this in the start method,
we'll say, I'll type in StartCoroutine.
106

106

00:06:05,294  -->  00:06:06,493
What's our coroutine?
107

107

00:06:06,493  -->  00:06:13,628
It is PrintAndWait and we need our open
closed parentheses and semicolon, okay.
108

108

00:06:13,628  -->  00:06:17,326
So we're calling our
StartCoroutine PrintAndWait, and
109

109

00:06:17,326  -->  00:06:22,166
then our IEnumerator, so our actual
coroutine down here, PrintAndWait.
110

110

00:06:22,166  -->  00:06:24,195
We're printing something out,
we're waiting,
111

111

00:06:24,195  -->  00:06:26,460
then we're printing
something else out again.
112

112

00:06:26,460  -->  00:06:29,540
The flow will be, on start it will say,
okay, do this thing,
113

113

00:06:29,540  -->  00:06:31,270
it comes down here and it prints it.
114

114

00:06:31,270  -->  00:06:34,680
And the very next thing it does in
the same frame, it goes and says,
115

115

00:06:34,680  -->  00:06:35,890
yield, okay, wait.
116

116

00:06:35,890  -->  00:06:39,280
Goes off, does everything else it needs to
do in the game after the three seconds.
117

117

00:06:39,280  -->  00:06:40,383
So it's keeping track
of the three seconds.
118

118

00:06:40,383  -->  00:06:43,200
It says, okay,
I need to come back into PrintAndWait and
119

119

00:06:43,200  -->  00:06:45,379
do that other thing that
I was yielding for.
120

120

00:06:45,379  -->  00:06:47,865
It comes back, finishes off, and
121

121

00:06:47,865  -->  00:06:53,022
then it gets to the end of its curly
bracket, and the coroutine is done.
122

122

00:06:53,022  -->  00:06:54,781
So we'll save up our script.
123

123

00:06:54,781  -->  00:06:57,639
We'll hop back over into Unity,
click on play.
124

124

00:06:58,980  -->  00:07:00,860
And then we should see
something immediately.
125

125

00:07:00,860  -->  00:07:04,370
Print first message, yeah first message
sent, three seconds, and then second
126

126

00:07:04,370  -->  00:07:07,620
message, yo, that was three seconds even
though I was babbling over the top of it.
127

127

00:07:07,620  -->  00:07:10,410
Okay, so
that's a really really simple coroutine.
128

128

00:07:10,410  -->  00:07:14,420
Once again, where we are calling
the coroutine and the coroutine itself is
129

129

00:07:14,420  -->  00:07:17,999
saying, do some things,
yield until a certain condition is met.
130

130

00:07:17,999  -->  00:07:20,603
And in this case the condition
is WaitForSeconds, and
131

131

00:07:20,603  -->  00:07:21,798
then do something else.
132

132

00:07:21,798  -->  00:07:24,583
And once you've done that something else,
then we're all done,
133

133

00:07:24,583  -->  00:07:25,985
we've finished our coroutine.
134

134

00:07:25,985  -->  00:07:28,841
Until it gets called again somewhere else,
which you can absolutely do.
135

135

00:07:28,841  -->  00:07:33,579
In the next video we'll be implementing a
coroutine into our fire so that the player
136

136

00:07:33,579  -->  00:07:38,263
can have repeating fire without having to
tap the space bar over and over and over.
137

137

00:07:38,263  -->  00:07:39,551
So great work in this video.
138

138

00:07:39,551  -->  00:07:43,519
If you have any questions at all about
coroutines, please throw them in the Q&amp;A,
139

139

00:07:43,519  -->  00:07:47,340
throw them in our questions section,
and we'll do our best to answer it.
140

140

00:07:47,340  -->  00:07:51,610
The community is amazing at helping out
with these things, so please do ask
141

141

00:07:51,610  -->  00:07:54,330
if anything hasn't been clear, and
I'll see you in the next lecture.
