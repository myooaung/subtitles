WEBVTT

1

00:00:04.263  -->  00:00:06.780
Hello, in this video we're
doing something really cool.
2

2

00:00:06.780  -->  00:00:11.200
We're enabling an autoplay so
that the game plays itself.
3

3

00:00:11.200  -->  00:00:15.970
This is great for testing so
that we can bump up the speed and
4

4

00:00:15.970  -->  00:00:20.168
test out our game without having to
rely on Rick's terrible skill for
5

5

00:00:20.168  -->  00:00:22.230
being able to move a mouse and
bounce a ball.
6

6

00:00:22.230  -->  00:00:23.868
Okay so let's jump in and get started.
7

7

00:00:23.868  -->  00:00:26.275
Let's start by getting clear
on who is doing what and
8

8

00:00:26.275  -->  00:00:28.910
what is doing whom and how and
all that kind of good stuff.
9

9

00:00:28.910  -->  00:00:34.320
So I believe that we should have
somewhere on our GameSession
10

10

00:00:34.320  -->  00:00:39.075
that allows us to say yes or
no in terms of autoplay.
11

11

00:00:39.075  -->  00:00:43.430
GameSession is the logical spot for it
cuz this is what is controlling the game,
12

12

00:00:43.430  -->  00:00:45.500
or not controlling
the game necessarily but
13

13

00:00:45.500  -->  00:00:47.070
keeping track of what's
going on with the game.
14

14

00:00:47.070  -->  00:00:51.913
So that's where we'll put that
on our GameSession script.
15

15

00:00:51.913  -->  00:00:54.760
And then in terms of the paddle,
what's the paddle doing?
16

16

00:00:54.760  -->  00:00:58.960
The paddle needs to know where am I
moving, where is my current trajectory,
17

17

00:00:58.960  -->  00:01:02.100
where is my current velocity,
I should say.
18

18

00:01:02.100  -->  00:01:06.440
And that velocity is going to
be looking at either the mouse.
19

19

00:01:06.440  -->  00:01:07.630
Can I draw a mouse here?
20

20

00:01:07.630  -->  00:01:10.511
I've got my little thingy on there,
so it looks like a pointer.
21

21

00:01:10.511  -->  00:01:14.066
Okay, that's the mouse,
[LAUGH] terrible mouse.
22

22

00:01:14.066  -->  00:01:17.700
Or it's looking at the ball, so
I was looking at the ball or the mouse.
23

23

00:01:17.700  -->  00:01:20.570
And that is owned on the paddle,
is making that decision.
24

24

00:01:20.570  -->  00:01:24.350
And then the ball is just being cool and
saying, hey dude, I'm a ball.
25

25

00:01:24.350  -->  00:01:29.030
Okay so [LAUGH] let's jump over,
clear my screen.
26

26

00:01:29.030  -->  00:01:31.987
Jump over, first of all,
into our Paddle.cs.
27

27

00:01:31.987  -->  00:01:36.199
We'll be working in Paddle.cs and
GameSession.cs in this lecture, maybe
28

28

00:01:36.199  -->  00:01:40.490
having a little bit of a look at Ball.cs,
but for now Paddle and GameSession.
29

29

00:01:40.490  -->  00:01:45.577
When we look at our code we can see under
update we wrote this code awhile ago,
30

30

00:01:45.577  -->  00:01:49.410
we're looking to say,
where should we move the paddle?
31

31

00:01:49.410  -->  00:01:52.330
And this is a cool way of saying
we should move the paddle
32

32

00:01:52.330  -->  00:01:54.030
based upon where the mouse is.
33

33

00:01:54.030  -->  00:01:58.080
So, the main thing we're looking at
here is when we say the paddlePos.x =
34

34

00:01:58.080  -->  00:01:58.993
Mathf.Clamp.
35

35

00:01:58.993  -->  00:02:01.348
That's just a way for us to say
that it doesn't go off the left or
36

36

00:02:01.348  -->  00:02:04.260
the right of the screen, here's
the left and the right of the screen.
37

37

00:02:04.260  -->  00:02:06.960
This is it right here, mousePosInUnits.
38

38

00:02:06.960  -->  00:02:11.737
So, go for your X position,
wherever the mouse says you should go.
39

39

00:02:11.737  -->  00:02:15.802
What I wanna do is create an if situation,
a conditional, where we say.
40

40

00:02:15.802  -->  00:02:20.933
If autoplay is on,
then this should be wherever the ball is.
41

41

00:02:20.933  -->  00:02:24.740
And if autoplay is not on,
then this should be wherever the mouse is.
42

42

00:02:24.740  -->  00:02:27.920
So underneath our update, let's give
ourselves an extra couple of lines and
43

43

00:02:27.920  -->  00:02:29.580
start by typing private.
44

44

00:02:29.580  -->  00:02:31.060
I'm going to make this a float, and
45

45

00:02:31.060  -->  00:02:33.830
this is a good chance for
us to practice return types.
46

46

00:02:33.830  -->  00:02:37.060
It's been a while since we've done this,
but the return type of float,
47

47

00:02:37.060  -->  00:02:41.280
that means that when we run this method
we're creating a method at the moment,
48

48

00:02:41.280  -->  00:02:44.170
it's going to return back
to whoever called it.
49

49

00:02:44.170  -->  00:02:49.120
It's gonna return a float,
and we'll call it
50

50

00:02:49.120  -->  00:02:53.990
GetXPos and open and
close our parentheses.
51

51

00:02:53.990  -->  00:02:55.443
Now, what is in here?
52

52

00:02:55.443  -->  00:02:58.299
There's a few things, we'll start writing
it out and we'll have to jump around
53

53

00:02:58.299  -->  00:03:00.404
a little bit as we realize we
need to create some new things.
54

54

00:03:00.404  -->  00:03:03.296
So we'll say, if,
I'm gonna write it the long way, and
55

55

00:03:03.296  -->  00:03:05.350
then we'll factor it down in a moment.
56

56

00:03:05.350  -->  00:03:12.120
If find, wrong way Rick, find object of
type, and what type are we looking for?
57

57

00:03:12.120  -->  00:03:14.960
Well we were looking for
the GameSession at this point.
58

58

00:03:14.960  -->  00:03:16.340
So we wanna know,
59

59

00:03:16.340  -->  00:03:19.988
cuz the GameSession, we said this is
where we'll be controlling the autoplay.
60

60

00:03:19.988  -->  00:03:24.310
If (FindObjectOfType(GameSession)) what?
61

61

00:03:24.310  -->  00:03:30.029
We're going to say IsAutoPlayEnabled().
62

62

00:03:30.029  -->  00:03:32.616
Okay, we haven't created that yet,
so we'll go off,
63

63

00:03:32.616  -->  00:03:35.710
we'll jump off into GameSession and
create what this means.
64

64

00:03:35.710  -->  00:03:40.711
Basically we're looking for a ball to be
returned that's either true or false.
65

65

00:03:40.711  -->  00:03:44.460
In other words, yes it is,
or no it is not enabled.
66

66

00:03:44.460  -->  00:03:50.074
So let's jump over into GameSession up
at the very top of our script up here,
67

67

00:03:50.074  -->  00:03:52.019
we'll SerializeField.
68

68

00:03:52.019  -->  00:03:56.333
This'll be of type bool, so
bool is going to return true or
69

69

00:03:56.333  -->  00:04:00.750
false, so a bool and
we'll call this isAutoPlayEnabled.
70

70

00:04:01.920  -->  00:04:04.827
And that's going to allow us in
the inspector to toggle on and
71

71

00:04:04.827  -->  00:04:06.431
off that is autoplay is enabled.
72

72

00:04:06.431  -->  00:04:14.590
Now we need a way of allowing Paddle.cs
to know what the situation here is.
73

73

00:04:14.590  -->  00:04:18.040
If we were using a public variable
it'd be a little bit different.
74

74

00:04:18.040  -->  00:04:20.910
We could be accessing that from paddle,
but
75

75

00:04:20.910  -->  00:04:22.790
then paddle could also be changing that.
76

76

00:04:22.790  -->  00:04:26.680
So we get into that situation where we
don't want anything else, except for
77

77

00:04:26.680  -->  00:04:28.760
the clever player, in the inspector,
78

78

00:04:28.760  -->  00:04:32.030
to be able to change when
we have is autoplay on.
79

79

00:04:32.030  -->  00:04:34.818
And that's the only time we want
to be able to change that, so
80

80

00:04:34.818  -->  00:04:38.206
this is why we're doing it as a serialized
ball that we're gonna return,
81

81

00:04:38.206  -->  00:04:40.370
rather than a public variable.
82

82

00:04:40.370  -->  00:04:45.100
Now, let's scroll down to the bottom
of our GameSession script.
83

83

00:04:45.100  -->  00:04:47.811
We'll create a public method.
84

84

00:04:47.811  -->  00:04:51.371
And this public method is
going to be returning what?
85

85

00:04:51.371  -->  00:04:57.782
It's going to be returning a bool,
and we'll call it IsAutoPlayEnabled.
86

86

00:04:59.754  -->  00:05:02.560
Okay, now here's a little
mini-challenge for you.
87

87

00:05:02.560  -->  00:05:05.110
I'd like for
you just to complete the sentence in here,
88

88

00:05:05.110  -->  00:05:08.120
the will return back to paddle.
89

89

00:05:08.120  -->  00:05:09.970
It will return what we want it to return.
90

90

00:05:12.280  -->  00:05:13.530
Okay, if you've been following along, and
91

91

00:05:13.530  -->  00:05:15.990
I know it's a little bit tricky
if it's a bit new to you.
92

92

00:05:15.990  -->  00:05:18.590
But if you've been following along,
you might have got that.
93

93

00:05:18.590  -->  00:05:22.080
Otherwise, we're going to type in return.
94

94

00:05:22.080  -->  00:05:25.770
And this is our variable,
is autoplay enabled.
95

95

00:05:25.770  -->  00:05:29.490
So with our method,
our convention is a capital i and
96

96

00:05:29.490  -->  00:05:33.130
with our variable our
convention is a lower case i.
97

97

00:05:33.130  -->  00:05:36.580
So we're returning this bool,
whether it's true or
98

98

00:05:36.580  -->  00:05:41.090
false, anytime something is
calling this particular method.
99

99

00:05:41.090  -->  00:05:46.170
We're about to call this method over
here in Paddle.cs so we're first of all
100

100

00:05:46.170  -->  00:05:52.070
finding objective type GameSession and
then we're calling is autoplay enabled.
101

101

00:05:52.070  -->  00:05:54.186
Okay, and
then what do we do if it's enabled?
102

102

00:05:54.186  -->  00:05:59.429
Well, curly braces in here,
if it's enabled we want to be
103

103

00:05:59.429  -->  00:06:07.100
feeding into this spot just in here that
I'm gonna change right now to GetXPos.
104

104

00:06:07.100  -->  00:06:10.870
So this is our update method for
our paddlePos.x.
105

105

00:06:10.870  -->  00:06:13.010
We're gonna change that to GetXPos and
106

106

00:06:13.010  -->  00:06:16.000
we need our parenthesis
because it's a method.
107

107

00:06:16.000  -->  00:06:17.500
And we want to be returning.
108

108

00:06:17.500  -->  00:06:21.124
When we called that we want something
to be returned back into that place.
109

109

00:06:21.124  -->  00:06:22.130
What are we going to return?
110

110

00:06:22.130  -->  00:06:29.545
Well, if the autoplay is enabled we're
going to return the position of the ball.
111

111

00:06:29.545  -->  00:06:30.950
Okay, so how we do that?
112

112

00:06:30.950  -->  00:06:35.062
Well, we'll do it the long way first of
all and then I'm gonna factor out a little
113

113

00:06:35.062  -->  00:06:40.774
bit, FindObjectOfType,
we're looking for what, for ball, Dot,
114

114

00:06:40.774  -->  00:06:44.980
well we need to find where it
currently is on the x axis.
115

115

00:06:44.980  -->  00:06:53.414
So that's going to be
transform.position.x, semicolon.
116

116

00:06:53.414  -->  00:07:00.910
Okay and then what do we do
if the autoplay is not true?
117

117

00:07:00.910  -->  00:07:04.200
So if autoplay hasn't been turned on then,
or
118

118

00:07:04.200  -->  00:07:09.420
in other words if autoplay is false,
then we will put in an else.
119

119

00:07:10.610  -->  00:07:15.493
We're gonna return, well I pretty much
going to return what we were using
120

120

00:07:15.493  -->  00:07:18.983
here in the first place
which was mousePosInUnits.
121

121

00:07:18.983  -->  00:07:23.994
We don't need to call it this variable
anymore because we're calling GetXPos,
122

122

00:07:23.994  -->  00:07:25.849
sorry, GetXPos is a method.
123

123

00:07:25.849  -->  00:07:28.950
And then we wanna return
the position of the mouse.
124

124

00:07:28.950  -->  00:07:34.300
So I'll highlight everything after
the equals sign and float mousePosInUnits.
125

125

00:07:34.300  -->  00:07:38.807
So everything Input.mousePosition,
down to screenWidthInUnits.
126

126

00:07:38.807  -->  00:07:41.630
And the semicolon,
I'm gonna copy that for the moment and
127

127

00:07:41.630  -->  00:07:44.080
then paste that after my return.
128

128

00:07:44.080  -->  00:07:46.510
Now, back up into update,
that looks pretty good.
129

129

00:07:46.510  -->  00:07:47.991
Now I'm gonna delete it.
130

130

00:07:47.991  -->  00:07:51.154
I like to do it this way so
you can see exactly what I'm doing so
131

131

00:07:51.154  -->  00:07:53.337
things don't disappear all of a sudden.
132

132

00:07:53.337  -->  00:07:58.060
Now, if we look at all of our logic here,
we're saying the paddlePos, that's cool.
133

133

00:07:58.060  -->  00:07:59.355
We're defining that as a variable.
134

134

00:07:59.355  -->  00:08:03.252
paddlePos.x is going to be GetXPos.
135

135

00:08:03.252  -->  00:08:04.180
What is x position?
136

136

00:08:04.180  -->  00:08:08.961
Well, if autoplay is enabled then
it's gonna be wherever the ball is.
137

137

00:08:08.961  -->  00:08:12.066
And if autoplay is false, so it's not on,
138

138

00:08:12.066  -->  00:08:16.380
then it will return
the mousePosition as we were doing.
139

139

00:08:16.380  -->  00:08:22.128
Let's save that, make sure that everything
is working, jump back over into unity.
140

140

00:08:22.128  -->  00:08:24.392
We should see if we're on game session,
141

141

00:08:24.392  -->  00:08:28.620
we should see in a moment that it will
give us, did we save our GameSession?
142

142

00:08:28.620  -->  00:08:29.350
Let me just double check.
143

143

00:08:29.350  -->  00:08:31.690
We didn't save GameSession,
make sure you do that.
144

144

00:08:31.690  -->  00:08:37.084
Back over into Unity, in a moment
we should see an autoplay option.
145

145

00:08:37.084  -->  00:08:39.390
It takes a moment for,
there it is, autoplay is enabled.
146

146

00:08:39.390  -->  00:08:42.400
Let's play to make sure it's
all cool at the moment.
147

147

00:08:43.830  -->  00:08:46.750
Okay, the ball moves,
the paddle moves, we can play, yes.
148

148

00:08:46.750  -->  00:08:50.945
And then let's turn IsAutoPlayEnabled,
we'll turn it on and so the answer is yes,
149

149

00:08:50.945  -->  00:08:51.725
it is enabled.
150

150

00:08:53.626  -->  00:08:59.110
And, Okay, so now the paddle's not moving,
interestingly.
151

151

00:08:59.110  -->  00:09:01.810
But when we click Go, it goes.
152

152

00:09:01.810  -->  00:09:02.740
Why is the paddle not moving?
153

153

00:09:02.740  -->  00:09:05.576
Well, it's linked to the ball and
the ball hasn't moved yet.
154

154

00:09:05.576  -->  00:09:09.148
Okay, cool, so that's exactly the
functionality that we wanted, success and
155

155

00:09:09.148  -->  00:09:10.222
high fives all around.
156

156

00:09:10.222  -->  00:09:14.215
I'm gonna do one last thing in here,
I'll set it to you as a challenge without
157

157

00:09:14.215  -->  00:09:18.280
a slide, just a challenge that you and
I talk about, just a secret between us.
158

158

00:09:18.280  -->  00:09:22.780
And the challenge is to factor
out the FindObjectOfTypes.
159

159

00:09:22.780  -->  00:09:25.959
We've got two of them in here,
and if you had to look closely,
160

160

00:09:25.959  -->  00:09:28.700
GetXPos is sitting within out update.
161

161

00:09:28.700  -->  00:09:33.680
So that means every single frame
we are calling our GetXPos, and
162

162

00:09:33.680  -->  00:09:35.644
therefore we're doing
this FindObjectOfType.
163

163

00:09:35.644  -->  00:09:37.384
On a game our size, not a problem but
164

164

00:09:37.384  -->  00:09:40.349
this is one of those things
you'll read in Unity documents.
165

165

00:09:40.349  -->  00:09:43.022
It says FindObjectOfType
is a bit expensive so
166

166

00:09:43.022  -->  00:09:45.070
try not to do it in your update.
167

167

00:09:45.070  -->  00:09:48.950
So I want you to factor this out so
that we're not calling,
168

168

00:09:50.460  -->  00:09:54.250
we're not trying to find object
of type every single frame.
169

169

00:09:54.250  -->  00:09:56.177
Okay, so pause the video and
take that on now.
170

170

00:09:56.177  -->  00:10:00.755
Okay, and
we've done this a couple of times.
171

171

00:10:00.755  -->  00:10:04.775
So should be reasonably apparent
when I explained it to you here,
172

172

00:10:04.775  -->  00:10:05.845
if you haven't done it already.
173

173

00:10:05.845  -->  00:10:10.775
Hopefully you did give it your best shot,
is we need to be caching our reference.
174

174

00:10:10.775  -->  00:10:15.370
So, cache references.
175

175

00:10:16.610  -->  00:10:20.720
The first one I will say is,
I call this, sorry.
176

176

00:10:20.720  -->  00:10:25.290
This is gonna be GameSession,
not sess gaming, GameSession.
177

177

00:10:25.290  -->  00:10:26.280
Rick can't type.
178

178

00:10:26.280  -->  00:10:29.770
I'll call this theGameSession.
179

179

00:10:29.770  -->  00:10:33.390
And then we want one other, which is Ball,
is the two things we're looking for.
180

180

00:10:33.390  -->  00:10:35.320
And I'll call it theBall.
181

181

00:10:35.320  -->  00:10:38.740
Now in our start method this is
where we find the reference.
182

182

00:10:38.740  -->  00:10:43.116
This is the one time we say,
go get it, go find this for me.
183

183

00:10:43.116  -->  00:10:45.040
It sounds like we're talking
to our puppy out the back.
184

184

00:10:45.040  -->  00:10:47.711
Come on, here boy,
go find the GameSession [LAUGH].
185

185

00:10:47.711  -->  00:10:49.120
Go get the ball.
186

186

00:10:49.120  -->  00:10:54.009
Now we will say, theGameSession =, what?
187

187

00:10:54.009  -->  00:10:59.557
It equals FindObjectOfType&lt;gamesession&gt;.
188

188

00:10:59.557  -->  00:11:01.870
Open and close parentheses and semicolon.
189

189

00:11:01.870  -->  00:11:05.420
And then you should be able to
do the next one pretty easily,
190

190

00:11:05.420  -->  00:11:06.895
it is pretty much the same.
191

191

00:11:06.895  -->  00:11:13.593
theBall = FindObjectOfType,
and the type is Ball.
192

192

00:11:13.593  -->  00:11:15.060
Open and close parentheses.
193

193

00:11:15.060  -->  00:11:18.950
Now, when we start up our script,
start up our game,
194

194

00:11:18.950  -->  00:11:21.723
it's gonna cache those references.
195

195

00:11:21.723  -->  00:11:24.857
So in our GetXPos,
we can jump down in here and just say,
196

196

00:11:24.857  -->  00:11:28.666
instead of saying FindObjectOfType,
we've already done that and
197

197

00:11:28.666  -->  00:11:31.860
we've stored that in
the variable of the GameSession.
198

198

00:11:31.860  -->  00:11:36.035
So we'll say
the GameSession.IsAutoPlayEnabled, and
199

199

00:11:36.035  -->  00:11:43.160
then return, theBall.transform.position.x.
200

200

00:11:43.160  -->  00:11:49.610
Save, jump back over into Unity,
autoplay is enabled at the moment.
201

201

00:11:49.610  -->  00:11:53.230
Click on the play button, any second now.
202

202

00:11:53.230  -->  00:11:55.920
Often takes a while for my Unity to think.
203

203

00:11:55.920  -->  00:11:59.460
Thinking, thinking, and then it can't
move because autoplay's enabled.
204

204

00:11:59.460  -->  00:12:01.350
Click play and it moves.
205

205

00:12:01.350  -->  00:12:03.290
And the really cool thing
in this whole process,
206

206

00:12:03.290  -->  00:12:06.880
this is the one thing I wanted to show
you, more than just hey it can play
207

207

00:12:06.880  -->  00:12:11.280
the game without Rick being useless,
is you can turn the speed up.
208

208

00:12:11.280  -->  00:12:15.650
And then very quickly play-test your game,
without actually having to sit there and
209

209

00:12:15.650  -->  00:12:17.550
play it, and
have two blocks remaining, and
210

210

00:12:17.550  -->  00:12:20.490
then make a mistake where the ball
goes flying down on the screen.
211

211

00:12:20.490  -->  00:12:24.326
So you can turn up really fast and just
to play-test, to make sure that there's
212

212

00:12:24.326  -->  00:12:28.047
nothing going, so there's a few situations
where the ball might get stuck,
213

213

00:12:28.047  -->  00:12:30.244
cuz it's not hitting
the side of the paddle.
214

214

00:12:30.244  -->  00:12:32.360
And when we're playing, we can hit
side of the paddle and get the angle.
215

215

00:12:32.360  -->  00:12:34.950
So you could change up your paddle
a little bit, if you wanted to.
216

216

00:12:34.950  -->  00:12:39.360
But it's gonna show us things like what
happens if we're on our 5th level and
217

217

00:12:39.360  -->  00:12:45.810
we have a score of 99999 that clicks over,
then maybe our score goes back 0.
218

218

00:12:45.810  -->  00:12:48.941
And you're like, I wouldn't have known
that if I hadn't have played the whole way
219

219

00:12:48.941  -->  00:12:50.120
through all of my levels.
220

220

00:12:50.120  -->  00:12:51.940
Okay and speaking of playing
through all of your levels,
221

221

00:12:51.940  -->  00:12:55.580
make sure that you test this,
apply everything from your prefabs.
222

222

00:12:56.580  -->  00:12:58.690
So, click on, if you've change anything,
any settings,
223

223

00:12:58.690  -->  00:13:00.740
make sure you've clicked on apply.
224

224

00:13:00.740  -->  00:13:03.200
That is if you've changed something
in your hierarchy, click on apply.
225

225

00:13:03.200  -->  00:13:07.190
If you've been changing it directly into
your prefabs, then it should be fine.
226

226

00:13:07.190  -->  00:13:08.390
So, check your other levels.
227

227

00:13:08.390  -->  00:13:11.700
Save it up, check your other levels and
in the next video,
228

228

00:13:11.700  -->  00:13:17.080
we'll be wrapping things up and
finalizing our progress on block breakers,
229

229

00:13:17.080  -->  00:13:18.910
so great work and
I'll see you in the next video.
