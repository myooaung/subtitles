WEBVTT
1
1

00:00:04.058  -->  00:00:04.813
Good day to you.
2

2

00:00:04.813  -->  00:00:05.511
How are you doing?
3

3

00:00:05.511  -->  00:00:08.048
In this video,
we are going to solve the problem
4

4

00:00:08.048  -->  00:00:11.482
we have at the moment where the ship
can go flying off the screen.
5

5

00:00:11.482  -->  00:00:12.303
We're gonna start.
6

6

00:00:12.303  -->  00:00:14.826
Let's together open up
our player.csscript and
7

7

00:00:14.826  -->  00:00:16.815
have a look at what we need to do in here.
8

8

00:00:16.815  -->  00:00:18.356
We've got our movement, that's great.
9

9

00:00:18.356  -->  00:00:21.964
We need a way to clamp the movement so
the play can only move a certain
10

10

00:00:21.964  -->  00:00:25.581
amount to the left and a certain
amount to the right and up and down.
11

11

00:00:25.581  -->  00:00:26.782
Let me show you a slide.
12

12

00:00:26.782  -->  00:00:31.263
ViewPortToWorldPoint() which is
a method which converts the position of
13

13

00:00:31.263  -->  00:00:35.187
something as it relates to the camera
view into a world space view.
14

14

00:00:35.187  -->  00:00:38.198
So if we look at the camera
down at the bottom left of
15

15

00:00:38.198  -->  00:00:42.372
the ViewPortToWorldPoint()
the bottom left will be (0, 0).
16

16

00:00:42.372  -->  00:00:46.660
And it's using no matter how long the
camera is all the way to the other side is
17

17

00:00:46.660  -->  00:00:48.473
1, all the way to the top is 1.
18

18

00:00:48.473  -->  00:00:53.181
So it becomes a relative conversation,
so bottom left (0, 0),
19

19

00:00:53.181  -->  00:00:56.032
top right is (1, 1), so x1 and y1.
20

20

00:00:56.032  -->  00:01:01.019
And from within there we could say, for
example if we had the camera views, so
21

21

00:01:01.019  -->  00:01:05.547
if the camera thought that something
was 0.8, so 0.8 on the x and
22

22

00:01:05.547  -->  00:01:08.578
0.4 on the y it would
be a roundabout there.
23

23

00:01:08.578  -->  00:01:11.486
What would that be in world units?
24

24

00:01:11.486  -->  00:01:12.616
Where exactly would that be?
25

25

00:01:12.616  -->  00:01:15.020
The ViewPortToWorldPoint()
allows us to do that.
26

26

00:01:15.020  -->  00:01:18.248
Let me just anchor this a little bit
further by saying if I was to grab
27

27

00:01:18.248  -->  00:01:18.832
my player.
28

28

00:01:18.832  -->  00:01:21.056
You don't need to do this,
I'm just showing you as an example.
29

29

00:01:21.056  -->  00:01:26.292
If I was to move it to roughly where
we had on our slide there that
30

30

00:01:26.292  -->  00:01:31.932
was 0.8 on x and 0.4 on the y,
as a relative camera position,
31

31

00:01:31.932  -->  00:01:38.005
then that would be a 3.26 and
minus 2.6 as our world space units.
32

32

00:01:38.005  -->  00:01:38.574
Why do we do this?
33

33

00:01:38.574  -->  00:01:41.013
Why don't we just get there and say well,
34

34

00:01:41.013  -->  00:01:45.695
let's just say that the player can
only go as high as 4.76 and not 9.35?
35

35

00:01:45.695  -->  00:01:48.757
Well, if we went and
changed our main camera and said well,
36

36

00:01:48.757  -->  00:01:51.707
let's zoom it out a little bit further and
put it to 12.
37

37

00:01:51.707  -->  00:01:54.572
Then the position that the player ship is,
38

38

00:01:54.572  -->  00:01:59.756
when we're at the points we just
calculated or reset 4.76 and 9.35.
39

39

00:01:59.756  -->  00:02:02.738
It changes,
based upon the size of the camera, so
40

40

00:02:02.738  -->  00:02:07.077
that's why we're setting this up so
that we've got this flexibility.
41

41

00:02:07.077  -->  00:02:10.082
We can change around our camera
without then having to go and
42

42

00:02:10.082  -->  00:02:14.179
find some values that we've arbitrarily
placed where the ship can or can't go.
43

43

00:02:14.179  -->  00:02:16.135
We've done similar things
in different sections but
44

44

00:02:16.135  -->  00:02:19.009
we're doing it this way just to show you
a different way to go about doing this.
45

45

00:02:19.009  -->  00:02:22.617
Okay, so that's enough talk about the
concept, let's actually go and do that.
46

46

00:02:22.617  -->  00:02:26.931
First thing in our start method,
we need to set up our boundaries.
47

47

00:02:26.931  -->  00:02:31.567
And I'm gonna create a method
in here to capture our content.
48

48

00:02:31.567  -->  00:02:33.693
We'll call this, what should we call it?
49

49

00:02:33.693  -->  00:02:38.148
Set UpMoveBoundaries.
50

50

00:02:38.148  -->  00:02:40.876
SetUpMoveBoundaries, so
we're gonna call this right on the start.
51

51

00:02:40.876  -->  00:02:44.247
We're setting up the boundaries of
where the player can or can't move.
52

52

00:02:44.247  -->  00:02:48.466
Gonna right-click on that and
find my option to create a or
53

53

00:02:48.466  -->  00:02:50.109
to generate a method.
54

54

00:02:50.109  -->  00:02:51.827
That's gonna generate
a method right below,
55

55

00:02:51.827  -->  00:02:54.083
it's gonna give it private void
which is what we want set up.
56

56

00:02:54.083  -->  00:02:55.474
Move boundaries, excellent.
57

57

00:02:55.474  -->  00:02:58.480
Throw new not implemented,
that's just in there as a place holder.
58

58

00:02:58.480  -->  00:02:59.812
We'll delete that.
59

59

00:02:59.812  -->  00:03:03.976
Now, what we need to do is to say first
of all what camera are we talking about?
60

60

00:03:03.976  -->  00:03:07.604
Let's give ourselves a local
variable within our method here,
61

61

00:03:07.604  -->  00:03:09.091
it will be of type camera.
62

62

00:03:09.091  -->  00:03:11.505
We'll call this game camera, camera so
63

63

00:03:11.505  -->  00:03:14.846
that in every scene we have
this method being called in.
64

64

00:03:14.846  -->  00:03:17.597
It's looking for the gameCamera, and
65

65

00:03:17.597  -->  00:03:21.939
that game camera is going to be
assigned as the Camera.main.
66

66

00:03:21.939  -->  00:03:25.654
So we're saying the main camera in
our scene we'll call the mainCamera.
67

67

00:03:25.654  -->  00:03:28.966
So for now on we can just use
gameCamera as our variable, and
68

68

00:03:28.966  -->  00:03:30.963
we need to set up a number of things.
69

69

00:03:30.963  -->  00:03:36.549
First of all, we set up the xMin, so
the minimum that you can go on the x axis.
70

70

00:03:36.549  -->  00:03:41.775
And then because we haven't declared
it yet, we will jump up to the top
71

71

00:03:41.775  -->  00:03:47.722
of our script up here and say we need to
create xMin, which will be of type float.
72

72

00:03:47.722  -->  00:03:50.113
Float x min, and that's all for now.
73

73

00:03:50.113  -->  00:03:51.939
We'll just initialize xMin.
74

74

00:03:51.939  -->  00:03:56.147
While we're here we'll initialize x float,
xMax as well.
75

75

00:03:56.147  -->  00:03:58.722
We need an xMin and an xMax.
76

76

00:03:58.722  -->  00:04:00.629
Get your capitalization correct there.
77

77

00:04:00.629  -->  00:04:02.154
Okay, so we're gonna xMin and xMax.
78

78

00:04:02.154  -->  00:04:07.235
So now in our SetUpMoveBoundaries
when we're looking at xMin,
79

79

00:04:07.235  -->  00:04:12.222
we're going to use gameCamera,
and within gameCamera we're
80

80

00:04:12.222  -->  00:04:17.409
gonna call the method of well,
ViewPortToWorldPoint, great.
81

81

00:04:17.409  -->  00:04:20.509
And it's gonna look forward, let me
just show you the documentation here,
82

82

00:04:20.509  -->  00:04:22.068
I've given you a link to this as well.
83

83

00:04:22.068  -->  00:04:25.605
It's looking for a Vector3,
Vector3 and Viewport space.
84

84

00:04:25.605  -->  00:04:29.311
Because it's a Vector3 we
know we need to have three.
85

85

00:04:29.311  -->  00:04:31.505
Three numbers in here an X, a Y and a Z.
86

86

00:04:31.505  -->  00:04:35.973
I'm highlighting that cuz a lot of what
we do in this course are vector 2's,
87

87

00:04:35.973  -->  00:04:40.054
but this is a vector 3, so we need
to create ourselves a new vector 3.
88

88

00:04:40.054  -->  00:04:43.259
Within that we will have three values.
89

89

00:04:43.259  -->  00:04:44.138
What is our x?
90

90

00:04:44.138  -->  00:04:47.357
What's the minimum x,
as it relates to our camera?
91

91

00:04:47.357  -->  00:04:51.291
Sorry, over here our camera,
the minimum x is gonna be 0.
92

92

00:04:51.291  -->  00:04:54.903
The left-hand side of the camera is 0 and
the right-hand side,
93

93

00:04:54.903  -->  00:04:57.276
in other words the maximum
x is gonna be 1.
94

94

00:04:57.276  -->  00:05:01.577
So within our minimum x we just
need to know the 0, looking for
95

95

00:05:01.577  -->  00:05:03.663
a y value and then a zig value.
96

96

00:05:03.663  -->  00:05:08.392
These won't matter cuz I am not gonna
access them in this particular line, so
97

97

00:05:08.392  -->  00:05:09.865
I'm gonna say 0, 0.
98

98

00:05:09.865  -->  00:05:16.167
So I have 0, 0, 0 and
.x because I'm wanting to declare or
99

99

00:05:16.167  -->  00:05:22.717
give the value to the variable
xMin that comes back from saying,
100

100

00:05:22.717  -->  00:05:27.713
what is the world's base
value of the x element?
101

101

00:05:27.713  -->  00:05:32.393
So the x axis for
our ViewPortToWorldPoint(), which we know,
102

102

00:05:32.393  -->  00:05:38.704
if we move our spaceship around, is going
to be something like minus 5.61 roughly.
103

103

00:05:38.704  -->  00:05:43.222
That is gonna be the minimum,
the left-hand side.
104

104

00:05:43.222  -->  00:05:47.264
Okay, cool, now,
we need to create an xMax so
105

105

00:05:47.264  -->  00:05:53.383
let's start with xMax equals
gameCamera.ViewPortToWorldPoint,
106

106

00:05:53.383  -->  00:05:57.944
and then the same thing,
new Vector 2, Vector3,
107

107

00:05:57.944  -->  00:06:01.172
sorry, such a habit of saying that.
108

108

00:06:01.172  -->  00:06:02.404
Now what is the maximum?
109

109

00:06:02.404  -->  00:06:03.629
We just said it's 1.
110

110

00:06:03.629  -->  00:06:08.166
That's the right-hand side
of the viewpoint, 0, 0.
111

111

00:06:08.166  -->  00:06:13.164
Again for now, the way that I'm getting
this information, I'm saying .x.
112

112

00:06:13.164  -->  00:06:16.702
The y and the z don't really matter,
we're just interested in that.
113

113

00:06:16.702  -->  00:06:20.599
And just interested in this
becasue we're saying .x.
114

114

00:06:20.599  -->  00:06:22.268
Now we'll save this up.
115

115

00:06:22.268  -->  00:06:26.265
Next thing we need to do is
actually clamp our movement.
116

116

00:06:26.265  -->  00:06:29.601
I'm actually getting a little bit messied
up with the way that we've organized this,
117

117

00:06:29.601  -->  00:06:32.084
so I'm gonna do a quick
re-organization under my move method.
118

118

00:06:32.084  -->  00:06:36.728
Just to move the deltaY, I'll cut that and
put that underneath the deltaX.
119

119

00:06:36.728  -->  00:06:40.960
This, for me, just helps it be a little
bit more organized so I can say ah-ha,
120

120

00:06:40.960  -->  00:06:45.024
here we're creating the X delta
horizontal, and the Y delta on vertical.
121

121

00:06:45.024  -->  00:06:47.939
Great, and now we're defining our new
position on X and new position Y.
122

122

00:06:47.939  -->  00:06:51.172
So I'm just finding this a little bit
easier to read by organizing it that way.
123

123

00:06:51.172  -->  00:06:54.474
We don't have to do that if
the other way was fine for you.
124

124

00:06:54.474  -->  00:06:59.820
But what I do need to say now is, how
are we going to clamp our X position so
125

125

00:06:59.820  -->  00:07:06.525
the transform.position.x plus deltaX only
goes between the minimum and the maximum?
126

126

00:07:06.525  -->  00:07:08.320
So there's a little micro-challenge for
you.
127

127

00:07:08.320  -->  00:07:12.907
If you want to go ahead and do that to
clamp so that our x position can't go
128

128

00:07:12.907  -->  00:07:18.066
below the min and above the max, Okay,
129

129

00:07:18.066  -->  00:07:21.216
that was me pausing for you to take on
that mini challenge, the micro challenge.
130

130

00:07:21.216  -->  00:07:24.608
I will start by saying mathf.clamp,
and we know for
131

131

00:07:24.608  -->  00:07:27.702
mathf.clamp that the first
part is the value.
132

132

00:07:27.702  -->  00:07:31.277
So this whole part we got
already is the value, and
133

133

00:07:31.277  -->  00:07:36.399
the second part is going to be the Min,
and we've defined that as xMin.
134

134

00:07:36.399  -->  00:07:39.709
And the next part is gonna be the maximum,
so xMax.
135

135

00:07:39.709  -->  00:07:45.411
Xmas, it's not Christmas, it's xMax.
136

136

00:07:45.411  -->  00:07:46.978
Okay, having trouble speaking today.
137

137

00:07:46.978  -->  00:07:48.578
There we go, and semicolon.
138

138

00:07:48.578  -->  00:07:50.176
And we shouldn't need
to change this at all.
139

139

00:07:50.176  -->  00:07:50.772
That should be cool.
140

140

00:07:50.772  -->  00:07:56.195
We'll save, jump back over into Unity,
put our spaceship into the middle, click
141

141

00:07:56.195  -->  00:08:02.173
on Play, and see how successful we've been
at limiting our left-right movement, okay?
142

142

00:08:02.173  -->  00:08:03.750
Move to the left, blonk, great.
143

143

00:08:03.750  -->  00:08:06.819
Move to the right, blonk, great as well.
144

144

00:08:06.819  -->  00:08:08.531
Okay, cool, very wonderful.
145

145

00:08:08.531  -->  00:08:11.364
So what I'd like you to
do now as an exercise,
146

146

00:08:11.364  -->  00:08:13.461
is to set up the vertical limits.
147

147

00:08:13.461  -->  00:08:16.587
So use the same approach we just did for
the horizontal axis,
148

148

00:08:16.587  -->  00:08:19.285
limit the player on the vertical axis and
remember,
149

149

00:08:19.285  -->  00:08:22.182
I've misses a couple of times
change your X's to Y's.
150

150

00:08:22.182  -->  00:08:23.348
Cuz through and
check that you've done that.
151

151

00:08:23.348  -->  00:08:27.156
So, set up your limits now so that the
play can only go to the top of the screen
152

152

00:08:27.156  -->  00:08:30.259
and to the bottom of the screen
when they're flying around.
153

153

00:08:30.259  -->  00:08:34.899
So do that now,
see you back here in a moment.
154

154

00:08:34.899  -->  00:08:38.367
Okay, so this should be a nice, reasonably
straightforward cut and paste type job.
155

155

00:08:38.367  -->  00:08:40.458
I need my xMin and xMax.
156

156

00:08:40.458  -->  00:08:44.712
First of all, we'll go and
create our yMin and yMax.
157

157

00:08:44.712  -->  00:08:45.407
yMin?
158

158

00:08:45.407  -->  00:08:47.345
I don't know,
seemed like a good idea at the time.
159

159

00:08:47.345  -->  00:08:49.111
Ha ha, dad jokes.
160

160

00:08:49.111  -->  00:08:52.079
yMin and yMax.
161

161

00:08:52.079  -->  00:08:54.305
Would have been a much better joke
if I had used Max, wouldn't it?
162

162

00:08:54.305  -->  00:08:56.188
Cuz Max is an actual person's name.
163

163

00:08:56.188  -->  00:08:56.812
Why Max?
164

164

00:08:56.812  -->  00:08:57.323
I don't know.
165

165

00:08:57.323  -->  00:09:00.009
Okay, so not so
funny the second time around.
166

166

00:09:00.009  -->  00:09:01.475
Or first time around, Rick.
167

167

00:09:01.475  -->  00:09:02.565
Thank you for that.
168

168

00:09:02.565  -->  00:09:08.341
Okay, copy out xMin and
xMax, and Paste that in.
169

169

00:09:08.341  -->  00:09:13.184
Let's go through, this needs to be yMin,
this needs to be yMax, I don't know,
170

170

00:09:13.184  -->  00:09:14.126
just because.
171

171

00:09:14.126  -->  00:09:17.288
And I'll change my dots at the end, .y.
172

172

00:09:17.288  -->  00:09:21.005
So we're saying we're just interested in
the y value, just give us the y value.
173

173

00:09:21.005  -->  00:09:22.244
And what do we need to do?
174

174

00:09:22.244  -->  00:09:25.914
Well, the x's don't matter, so
I'm gonna change them to 0.
175

175

00:09:25.914  -->  00:09:31.665
The y for the minimum will be 0, and
the y for the maximum will be 1.
176

176

00:09:31.665  -->  00:09:34.515
Excellent, pretty straightforward there.
177

177

00:09:34.515  -->  00:09:40.155
Down into our movement, and
as we did with our newXPos or
178

178

00:09:40.155  -->  00:09:45.555
our newYPos,
we're going to say Mathf.Clamp Now,
179

179

00:09:45.555  -->  00:09:50.243
brackets tranform.position.y + deltaY.
180

180

00:09:50.243  -->  00:09:56.628
And then comma, yMin, and
our favorite question, yMax.
181

181

00:09:58.556  -->  00:10:01.108
Fantastico, Save, back over to Unity.
182

182

00:10:01.108  -->  00:10:04.851
We'll make sure that works, then I have
one last thing cuz you're probably saying
183

183

00:10:04.851  -->  00:10:06.413
but it's not quite right, Rick.
184

184

00:10:06.413  -->  00:10:08.065
Up the top, down the bottom,
185

185

00:10:08.065  -->  00:10:10.986
looks fantastic,
all the way up to the top, great.
186

186

00:10:10.986  -->  00:10:12.340
Okay, so we've done our clamping.
187

187

00:10:12.340  -->  00:10:15.980
What we need to do is say well, we don't
want to play go all the way to the end and
188

188

00:10:15.980  -->  00:10:17.100
all the way to the side,
189

189

00:10:17.100  -->  00:10:20.409
it's cuz the player's pivot point
is right in the middle of the ship.
190

190

00:10:20.409  -->  00:10:24.793
So it's going to the point where it
goes all the way to the pivot point.
191

191

00:10:24.793  -->  00:10:27.878
We need some padding so
we can't quite go that far.
192

192

00:10:27.878  -->  00:10:30.142
So here's another good challenge for you,
193

193

00:10:30.142  -->  00:10:33.381
if you think you know how to put
in some padding, do that now, so
194

194

00:10:33.381  -->  00:10:36.341
the player doesn't go the whole
way to those end points.
195

195

00:10:36.341  -->  00:10:39.105
Pause the video and do that now.
196

196

00:10:39.105  -->  00:10:40.593
Otherwise, we'll do this together.
197

197

00:10:40.593  -->  00:10:41.684
So what do we need to do?
198

198

00:10:41.684  -->  00:10:43.721
Well, first of all let's
serialized the paddings so
199

199

00:10:43.721  -->  00:10:45.633
that we can change this if
we want to tune our game.
200

200

00:10:45.633  -->  00:10:49.549
We'll make this a float, we'll call
it padding, nearly called it pudding.
201

201

00:10:49.549  -->  00:10:53.235
Shouldn't call it that, and
we'll make this for now, make it 1f and
202

202

00:10:53.235  -->  00:10:54.307
see how that feels.
203

203

00:10:54.307  -->  00:10:58.692
It's not serializable, it's serializefield
field, Rick, serialize field.
204

204

00:10:58.692  -->  00:11:01.039
There we go.
205

205

00:11:01.039  -->  00:11:03.100
And then we've got padding,
where do we add padding?
206

206

00:11:03.100  -->  00:11:08.039
Well we're gonna add padding down
here to our ViewportToWorldPoint().
207

207

00:11:08.039  -->  00:11:11.688
And if you want you could set up
an .x; padding and a .y; padding.
208

208

00:11:11.688  -->  00:11:14.001
I might in the future set up a padding so
209

209

00:11:14.001  -->  00:11:17.323
that my player can go only up
to about here up at the top so
210

210

00:11:17.323  -->  00:11:22.123
they don't accidentally get smashed
by anything that flies in off-screen.
211

211

00:11:22.123  -->  00:11:24.977
But for now we'll just leave it
a uniform padding the whole way around.
212

212

00:11:24.977  -->  00:11:27.694
If you wanna add some
differentiating padding you can.
213

213

00:11:27.694  -->  00:11:33.658
What we will need to do is say the padding
on our xMin is gonna be + padding.
214

214

00:11:33.658  -->  00:11:37.062
Now padding on the xMax is
gonna be minus the padding
215

215

00:11:37.062  -->  00:11:41.192
cuz we want it to be to the left
of the maximum, which is minus.
216

216

00:11:41.192  -->  00:11:46.003
That's why it's minus and
then same here, plus padding and
217

217

00:11:46.003  -->  00:11:50.641
plus pudding, padding,
padding, that's what I mean.
218

218

00:11:50.641  -->  00:11:52.266
Might be time to go eat.
219

219

00:11:52.266  -->  00:11:53.735
Okay, Save up.
220

220

00:11:53.735  -->  00:11:55.753
Sorry, I mean minus padding.
221

221

00:11:55.753  -->  00:11:58.473
Okay, now let's just in,
have a look and see how it works.
222

222

00:11:58.473  -->  00:11:59.005
Great, okay.
223

223

00:11:59.005  -->  00:12:02.099
So there's our ship flying around with
some padding on the up, down, left, and
224

224

00:12:02.099  -->  00:12:04.850
right, and I think we've done enough for
our player movement for now.
225

225

00:12:04.850  -->  00:12:06.673
It's time to move on to the next content.
226

226

00:12:06.673  -->  00:12:09.060
So great work in this video and
I'll see you again real soon.
