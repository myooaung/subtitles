WEBVTT
1
1

00:00:00.000  -->  00:00:03.892
[MUSIC]
2

2

00:00:03.892  -->  00:00:07.110
Hello again, it's great to be
hanging out with you one more time.
3

3

00:00:07.110  -->  00:00:10.230
I was just over on our community site
having a look at all the incredible
4

4

00:00:10.230  -->  00:00:13.520
sharing that people are doing with
their game, with their screenshots,
5

5

00:00:13.520  -->  00:00:15.010
with how things are coming along.
6

6

00:00:15.010  -->  00:00:15.800
It's really cool to see.
7

7

00:00:15.800  -->  00:00:17.480
So thank you if you've been sharing.
8

8

00:00:17.480  -->  00:00:20.020
If you haven't shared yet,
then something to consider.
9

9

00:00:20.020  -->  00:00:21.420
The community loves to see it.
10

10

00:00:21.420  -->  00:00:23.480
It's a really supportive community.
11

11

00:00:23.480  -->  00:00:24.200
I think it's really cool.
12

12

00:00:24.200  -->  00:00:26.300
Everyone wants to see
everyone else succeeding, and
13

13

00:00:26.300  -->  00:00:27.790
learning how to make cool games.
14

14

00:00:27.790  -->  00:00:33.000
So we have a problem that we're gonna
solve in this video, as we often do.
15

15

00:00:33.000  -->  00:00:33.800
What's our problem?
16

16

00:00:33.800  -->  00:00:35.110
What's our challenge?
17

17

00:00:35.110  -->  00:00:36.088
And in this case,
18

18

00:00:36.088  -->  00:00:40.660
the problem is we're getting situations
where the ball ends up in this endless, or
19

19

00:00:40.660  -->  00:00:45.035
near endless, loop where it's just
bouncing from left to right of the screen,
20

20

00:00:45.035  -->  00:00:48.528
and it's not increasing or
decreasing at all with its height.
21

21

00:00:48.528  -->  00:00:50.795
And it's just going left and
right, left and right.
22

22

00:00:50.795  -->  00:00:54.080
And we're sitting there saying,
when will the ball ever reach the paddle?
23

23

00:00:54.080  -->  00:00:59.720
We get it to a degree, sorry,
on the x-axis as well, up and down.
24

24

00:00:59.720  -->  00:01:02.250
But often we can chuck our
paddle in the way, and
25

25

00:01:02.250  -->  00:01:04.090
have it bounce off in
a different direction.
26

26

00:01:04.090  -->  00:01:08.220
We often get that if we're bouncing
between an unbreakable block, just up and
27

27

00:01:08.220  -->  00:01:09.450
down, and up and down.
28

28

00:01:09.450  -->  00:01:10.870
So we're gonna resolve that.
29

29

00:01:10.870  -->  00:01:13.257
And I want you to have a think for
a moment about,
30

30

00:01:13.257  -->  00:01:15.490
just put on your problem solving hat.
31

31

00:01:15.490  -->  00:01:19.430
How could we solve that so we don't get in
this endless loop, where it's just going
32

32

00:01:19.430  -->  00:01:23.200
straight across the screen and
straight back across the screen again?
33

33

00:01:23.200  -->  00:01:24.640
How do you think we could approach that?
34

34

00:01:26.300  -->  00:01:31.118
Well, one of the ways that we can do
it is, say each time the ball collides,
35

35

00:01:31.118  -->  00:01:35.806
this moment of collision, we add
a little bit of y velocity, up or down.
36

36

00:01:35.806  -->  00:01:39.669
And likewise, we can add a little bit of
x velocity to the left or the right, so
37

37

00:01:39.669  -->  00:01:43.130
that when we're in this situation
the ball is bouncing a little bit.
38

38

00:01:43.130  -->  00:01:45.950
So we'll get a situation where
the ball kinda goes bounce, and
39

39

00:01:45.950  -->  00:01:49.560
then doesn't exactly make an exact,
perfect angle.
40

40

00:01:49.560  -->  00:01:52.840
But it might bounce a little bit up
that way, and a little bit straighter,
41

41

00:01:52.840  -->  00:01:55.370
and little bit not exactly
the way we expect.
42

42

00:01:55.370  -->  00:01:59.050
A little of randomness is going
to solve those situations of
43

43

00:01:59.050  -->  00:02:02.440
repetition where the ball just
can't get out of that loop.
44

44

00:02:02.440  -->  00:02:07.110
Okay, so for this lecture, we're gonna
be working in the ball script, ball.cs.
45

45

00:02:07.110  -->  00:02:11.512
And up at the very start, what we'll be
doing is moving my tablet out of the way,
46

46

00:02:11.512  -->  00:02:13.233
cuz I'm not drawing any more.
47

47

00:02:13.233  -->  00:02:15.670
Okay, but what are you gonna be doing?
48

48

00:02:15.670  -->  00:02:19.072
First of all, we need a new parameter,
which we will serialize.
49

49

00:02:19.072  -->  00:02:22.580
So SerializeField, and
this will be of type float.
50

50

00:02:22.580  -->  00:02:24.840
This will be the randomness
that we're adding to it.
51

51

00:02:24.840  -->  00:02:29.150
So we'll call this random what,
randomFactor,
52

52

00:02:29.150  -->  00:02:31.320
just a random factor that
we're putting onto the ball.
53

53

00:02:31.320  -->  00:02:35.330
And we'll initialize that at 0.2f.
54

54

00:02:35.330  -->  00:02:37.690
Okay, now we're looking
at velocity of the ball.
55

55

00:02:37.690  -->  00:02:43.010
So where is the velocity represented
in terms of our components?
56

56

00:02:43.010  -->  00:02:45.530
Where are we pushing the ball around?
57

57

00:02:45.530  -->  00:02:47.278
It's in the Rigidbody.
58

58

00:02:47.278  -->  00:02:50.570
So Rigidbody 2D the component on the ball
59

59

00:02:50.570  -->  00:02:53.840
that is determining how
the physics is affecting it.
60

60

00:02:53.840  -->  00:02:56.010
And that's where we can say,
push it a little bit this way or
61

61

00:02:56.010  -->  00:02:56.950
a little bit that way.
62

62

00:02:56.950  -->  00:02:59.560
So we're interested in
the Rigidbody 2D component.
63

63

00:02:59.560  -->  00:03:04.210
Now I have a challenge for you,
which is to cache the reference,
64

64

00:03:04.210  -->  00:03:09.340
as we've done with the AudioSource,
cache the reference for our Rigidbody 2D.
65

65

00:03:09.340  -->  00:03:12.260
So let me give you a challenge slide here,
cache reference to RigidBody.
66

66

00:03:12.260  -->  00:03:14.960
Similar to caching reference
to the AudioScource,
67

67

00:03:14.960  -->  00:03:17.110
cache a reference called myRigidBody.
68

68

00:03:17.110  -->  00:03:21.330
Let's actually call it myRigidBody2D,
just so it's nice and
69

69

00:03:21.330  -->  00:03:25.150
clear that we're making a 2D game,
just in case anyone forgot.
70

70

00:03:25.150  -->  00:03:26.630
Okay, so there's the challenge.
71

71

00:03:26.630  -->  00:03:28.660
Jump in, take that on now, and
I'll see you back in a moment.
72

72

00:03:30.850  -->  00:03:34.450
Okay, so there's two places
that we are looking at this.
73

73

00:03:34.450  -->  00:03:36.720
First of all, here is our reference.
74

74

00:03:36.720  -->  00:03:42.205
This is the variable that
will be of type Rigidbody2D.
75

75

00:03:42.205  -->  00:03:44.155
I'm gonna call it myRigidBody2D.
76

76

00:03:44.155  -->  00:03:46.287
RigidBody2D, okay, semicolon.
77

77

00:03:46.287  -->  00:03:51.688
And within our Start method,
similar to the above line where we're
78

78

00:03:51.688  -->  00:03:57.640
doing this with the AudioSource,
we're gonna say myRigidBody2D.
79

79

00:03:57.640  -->  00:03:58.500
What does it equal?
80

80

00:03:58.500  -->  00:04:02.400
Well, we want this to be
storing within this variable.
81

81

00:04:02.400  -->  00:04:07.877
We want to store the reference for
getting the component,
82

82

00:04:07.877  -->  00:04:11.232
of GetComponent of RigidBody2D,
83

83

00:04:11.232  -->  00:04:15.622
open and close parentheses, and semicolon.
84

84

00:04:15.622  -->  00:04:18.506
Okay, and there's one place
already that we can go and
85

85

00:04:18.506  -->  00:04:23.034
benefit from caching this reference, which
is down under our LaunchOnMouseClick.
86

86

00:04:23.034  -->  00:04:24.570
We're getting the component.
87

87

00:04:24.570  -->  00:04:26.900
We can remove
the GetComponent Rigidbody2D, and
88

88

00:04:26.900  -->  00:04:31.610
instead just say myRigidBody2D,
cuz we're already getting the component.
89

89

00:04:31.610  -->  00:04:34.550
Generally, when we are doing
something in more than one place,
90

90

00:04:34.550  -->  00:04:39.150
that's when we want to start caching
out components, our references.
91

91

00:04:39.150  -->  00:04:45.070
Or if we're doing getting a lot,
on every frame for
92

92

00:04:45.070  -->  00:04:49.450
example, on a regular basis, we wanna
cache it instead of constantly saying hey,
93

93

00:04:49.450  -->  00:04:51.760
go find it, hey, go find it,
hey, go find it.
94

94

00:04:51.760  -->  00:04:53.560
It's better if we already
know where it is, and
95

95

00:04:53.560  -->  00:04:56.000
then we're just pointing
to the specific place.
96

96

00:04:56.000  -->  00:04:58.900
Next up, what we need to do is
find our moment of collision where
97

97

00:04:58.900  -->  00:05:01.770
the ball is bouncing, and
we can push it in a different place.
98

98

00:05:01.770  -->  00:05:05.090
Right at the very top
of OnCollisionEnter2D,
99

99

00:05:05.090  -->  00:05:09.157
we need to start by declaring
a variable of type Vector2.
100

100

00:05:09.157  -->  00:05:13.760
We'll call this velocity,
what should we call it, velocityTweak.
101

101

00:05:13.760  -->  00:05:17.170
Tweak, to show that we're tweaking
the velocity, moving it a little bit.
102

102

00:05:17.170  -->  00:05:21.720
And we need to construct this as new,
so using the new keyword, Vector2.
103

103

00:05:21.720  -->  00:05:25.729
And then Vector2 is gonna be looking for
an x and y, so an x and
104

104

00:05:25.729  -->  00:05:29.210
y coordinate in here,
in terms of our new Vector2.
105

105

00:05:29.210  -->  00:05:31.030
Each of these, we're going to do random.
106

106

00:05:31.030  -->  00:05:33.760
And we're gonna do random between 0 and
107

107

00:05:33.760  -->  00:05:37.260
our random factor,
our random factor up here, our variable.
108

108

00:05:37.260  -->  00:05:42.520
So if you want a mini challenge, take that
on, to construct our new Vector2 that
109

109

00:05:42.520  -->  00:05:49.670
is between Random.Range of 0 and
our randomFactor for x and for y.
110

110

00:05:52.035  -->  00:05:53.930
Okay, let's do this together now.
111

111

00:05:53.930  -->  00:06:01.100
So Random.Range in the brackets,
so ( 0f, randomFactor).
112

112

00:06:01.100  -->  00:06:06.350
That's on the x, and then comma on the y.
113

113

00:06:06.350  -->  00:06:13.092
And I can see a red, squiggly line
I'll come back to in just a moment.
114

114

00:06:13.092  -->  00:06:17.918
Random.Range, and this will be
exactly the same, (0f, randomFactor),
115

115

00:06:17.918  -->  00:06:19.940
okay, and semicolon at the end.
116

116

00:06:19.940  -->  00:06:22.520
Now, again,
I'll get to the random in just a moment.
117

117

00:06:22.520  -->  00:06:25.010
But you can see this a huge line,
it doesn't quite fit.
118

118

00:06:25.010  -->  00:06:27.080
If you're zoomed in a little bit,
it's not gonna fit on your line,
119

119

00:06:27.080  -->  00:06:28.150
which is a bit annoying.
120

120

00:06:28.150  -->  00:06:30.860
We can tidy this up by saying new Vector2.
121

121

00:06:30.860  -->  00:06:36.090
Let's put the x value on one line, and
then comma, the y value on another line.
122

122

00:06:36.090  -->  00:06:37.871
So you can do that,
you can move things around.
123

123

00:06:37.871  -->  00:06:42.449
So long as the syntax, the code is written
in a correct way, you can put in your
124

124

00:06:42.449  -->  00:06:47.275
spaces and your returns however you want,
so it fits on the page nice and neatly.
125

125

00:06:47.275  -->  00:06:48.230
Now, Random's giving us an error.
126

126

00:06:48.230  -->  00:06:50.416
If you mouse over it, it's saying,
127

127

00:06:50.416  -->  00:06:55.300
Random is an ambiguous reference between
UnityEngineRandom and SystemRandom.
128

128

00:06:55.300  -->  00:07:00.130
And if we scroll up to the top,
we're using System and UnityEngine.
129

129

00:07:00.130  -->  00:07:04.490
This is one of those things that it's
like, why bother with namespaces?
130

130

00:07:04.490  -->  00:07:07.360
Well, there's multiple concepts of Random.
131

131

00:07:07.360  -->  00:07:10.640
This System namespace has
a concept of Random and
132

132

00:07:10.640  -->  00:07:13.700
the UnityEngine has a concept of Random.
133

133

00:07:13.700  -->  00:07:19.028
If we go and comment out these three
lines, and I'm gonna do that by typing in
134

134

00:07:19.028  -->  00:07:24.790
/*, that says everything
after me is commented out.
135

135

00:07:24.790  -->  00:07:28.884
And then at the end of my
randomFactor here, I'll say */,
136

136

00:07:28.884  -->  00:07:32.997
that's one way of commenting out
a block of code if you like.
137

137

00:07:32.997  -->  00:07:34.313
There's also some hotkeys, but
138

138

00:07:34.313  -->  00:07:36.770
I thought I'd teach you this
way cuz it's kind of neat.
139

139

00:07:36.770  -->  00:07:40.040
So when we comment out or Random.Range,
if we scroll all the way up out,
140

140

00:07:40.040  -->  00:07:43.590
we can see that we're no
longer using Unity System.
141

141

00:07:43.590  -->  00:07:48.010
And what I think's going on here is
the fact that these are the generic
142

142

00:07:48.010  -->  00:07:52.250
lines of code that Unity's creating at
the top of our script in Visual Studio,
143

143

00:07:52.250  -->  00:07:54.470
that just gets created there by default.
144

144

00:07:54.470  -->  00:07:57.610
We're not actually using any of those and
we don't need them.
145

145

00:07:57.610  -->  00:08:02.040
And we know that for this particular
using, it's the UnityEngine, sorry.
146

146

00:08:02.040  -->  00:08:05.250
For this particular Random,
it's the UnityEngine Random that we need.
147

147

00:08:05.250  -->  00:08:08.124
So I've deleted those other usings,
those other namespaces,
148

148

00:08:08.124  -->  00:08:09.990
we shouldn't have a conflict now.
149

149

00:08:09.990  -->  00:08:15.990
So when I come down and
remove my nifty asterisks comments,
150

150

00:08:15.990  -->  00:08:20.910
and make sure that my indenting is
all good, yep, that looks nice.
151

151

00:08:20.910  -->  00:08:23.200
Then we can see that our error goes away.
152

152

00:08:23.200  -->  00:08:25.250
We'll save that and
make sure that it actually works,
153

153

00:08:25.250  -->  00:08:26.421
before we celebrate too much.
154

154

00:08:26.421  -->  00:08:29.440
We'll just finish off writing our codes.
155

155

00:08:29.440  -->  00:08:33.160
So we've got our new Vector2, that's good.
156

156

00:08:33.160  -->  00:08:35.160
And then I'll give myself a line here, so
157

157

00:08:35.160  -->  00:08:36.320
I can just see there's
a little bit of space.
158

158

00:08:36.320  -->  00:08:38.580
So this is a block here, a chunk of code.
159

159

00:08:38.580  -->  00:08:41.720
And then, if (hasStarted), well,
what do we wanna do in here?
160

160

00:08:41.720  -->  00:08:46.310
We want to allow the audio
stuff to do the audio stuff.
161

161

00:08:46.310  -->  00:08:51.943
So we're gonna say in here,
myRigidBody2D.velocity, Actually,
162

162

00:08:51.943  -->  00:08:56.781
we'll say += because we want to be adding
to the velocity, be giving it a little bit
163

163

00:08:56.781  -->  00:09:01.780
of extra tweak, as opposed to completely
changing it to something different.
164

164

00:09:01.780  -->  00:09:06.250
And that we +- velocity,
if I can spell it correctly,
165

165

00:09:06.250  -->  00:09:10.840
velocityTweak, which was the variable
that we created just above.
166

166

00:09:10.840  -->  00:09:11.690
Okay, so
167

167

00:09:11.690  -->  00:09:15.250
just to recap on that, we're saying
here's this new tweak to the velocity.
168

168

00:09:15.250  -->  00:09:19.490
Let's add that tweak to the velocity
once the game has started.
169

169

00:09:19.490  -->  00:09:23.040
And this applies to the RigidBody,
RigidBody.velocity.
170

170

00:09:23.040  -->  00:09:23.750
We'll save that.
171

171

00:09:23.750  -->  00:09:26.490
Just jump back into Unity,
make sure this works.
172

172

00:09:26.490  -->  00:09:27.430
You know what I'm going to do?
173

173

00:09:27.430  -->  00:09:28.990
I'm going to be that guy.
174

174

00:09:28.990  -->  00:09:33.830
We'll find ball, and scroll down
to where we find the ball script.
175

175

00:09:33.830  -->  00:09:37.420
And the random factor, I'm gonna
put the random factor up to, say 1.
176

176

00:09:37.420  -->  00:09:39.150
That should do something crazy.
177

177

00:09:40.910  -->  00:09:42.090
We'll click on Play.
178

178

00:09:43.150  -->  00:09:45.010
Hopefully, that's not too crazy.
179

179

00:09:45.010  -->  00:09:47.480
And we'll launch the ball over
to the side, and then boink.
180

180

00:09:54.450  -->  00:09:57.935
Okay, a little bit tough to see whether
the randomness is actually happening.
181

181

00:09:57.935  -->  00:10:01.495
So let's go and dial our randomness
up to something ridiculous.
182

182

00:10:01.495  -->  00:10:02.465
Let's put this up to 100.
183

183

00:10:02.465  -->  00:10:04.850
[LAUGH] So that should be
adding 100 to the x or the y.
184

184

00:10:04.850  -->  00:10:07.119
I think that should be fairly,
185

185

00:10:07.119  -->  00:10:11.499
I assume it's probably gonna
make the ball go really fast.
186

186

00:10:11.499  -->  00:10:13.405
Whoa, it made it go stupid fast.
187

187

00:10:13.405  -->  00:10:16.988
Okay, so this is part of something we're
gonna be talking about in an upcoming
188

188

00:10:16.988  -->  00:10:20.542
video is extreme tuning, but I'll try
to make it a little bit more sensible.
189

189

00:10:20.542  -->  00:10:23.150
We're adding 10 onto the ball.
190

190

00:10:23.150  -->  00:10:23.780
Okay, yeah.
191

191

00:10:23.780  -->  00:10:27.570
That is, wow, doing lots of really crazy,
random stuff.
192

192

00:10:27.570  -->  00:10:28.787
Which is kind of fun in a way.
193

193

00:10:28.787  -->  00:10:33.650
That's, whoa, it keeps you on your toes,
except when that happens.
194

194

00:10:33.650  -->  00:10:37.900
Okay, so that's not so good when that
kind of super slowness is going on.
195

195

00:10:37.900  -->  00:10:38.679
So we'll put this back to, say 0.5.
196

196

00:10:38.679  -->  00:10:42.179
It's gonna be something that we tune and
play around with,
197

197

00:10:42.179  -->  00:10:45.260
but we want to get
generally in the ballpark.
198

198

00:10:45.260  -->  00:10:49.180
I think 0.2 is fairly safe,
but not overly dramatic.
199

199

00:10:49.180  -->  00:10:51.002
Yeah, this seems pretty good.
200

200

00:10:51.002  -->  00:10:54.405
It's not making the ball do
anything really weird, and so
201

201

00:10:54.405  -->  00:10:56.080
far we haven’t been stuck.
202

202

00:10:56.080  -->  00:10:59.610
I'll probably have to play for a while to
get that use case where we’ve got the loop
203

203

00:10:59.610  -->  00:11:01.880
across the screen, but
this feels pretty good.
204

204

00:11:01.880  -->  00:11:05.860
It’s not ridiculous and I quite like it.
205

205

00:11:05.860  -->  00:11:09.170
Okay, so we've introduced some
randomness into our game.
206

206

00:11:09.170  -->  00:11:11.890
We've also talked about
using the namespaces and
207

207

00:11:11.890  -->  00:11:14.370
what to do if you come across
that problem with the conflict.
208

208

00:11:14.370  -->  00:11:16.080
Our ball shouldn't be stuck so much.
209

209

00:11:16.080  -->  00:11:17.170
If you want to be tuning it so
210

210

00:11:17.170  -->  00:11:21.340
it doesn't get stuck,
you can change the Random Factor.
211

211

00:11:21.340  -->  00:11:24.474
Remember after you've played around
with it, to apply it back to the prefab.
212

212

00:11:24.474  -->  00:11:28.090
So that in all of our other scenes, we
have this particular change to the ball.
213

213

00:11:28.090  -->  00:11:30.120
So great work, and
I'll see you again soon.
