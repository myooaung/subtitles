WEBVTT
1
1

00:00:00.000  -->  00:00:04.223
[MUSIC]
2

2

00:00:04.223  -->  00:00:08.446
So, we spent a lot of time implementing
features, and in this video we're gonna
3

3

00:00:08.446  -->  00:00:12.620
talk about tuning our game so that
it's enjoyable to play for the player.
4

4

00:00:12.620  -->  00:00:15.515
And one of the things I'll do first
of all I'll turn off my UI so
5

5

00:00:15.515  -->  00:00:16.725
I can see what's going on.
6

6

00:00:16.725  -->  00:00:20.835
We've got four defenders or
four characters on the defenders team and
7

7

00:00:20.835  -->  00:00:21.665
two attackers.
8

8

00:00:21.665  -->  00:00:25.175
And we've got a few more attackers we
can add and tons of ideas for both
9

9

00:00:25.175  -->  00:00:29.200
defenders and attackers, but I'm working
within the context of just this for now.
10

10

00:00:29.200  -->  00:00:31.950
Well, I've got a couple of tips for
you in terms of tuning your game.
11

11

00:00:31.950  -->  00:00:34.290
First thing is experiment,
just see what happens.
12

12

00:00:34.290  -->  00:00:38.900
Just chuck some numbers in there see what
feels good and then iterate upon that.
13

13

00:00:38.900  -->  00:00:39.530
Add a little bit more,
14

14

00:00:39.530  -->  00:00:43.550
take a little bit off and as you go along
you'll get a gut feel for, you know what?
15

15

00:00:43.550  -->  00:00:47.197
It was really fun when I had
this guy at 100 hit points and
16

16

00:00:47.197  -->  00:00:49.893
I had this guy shooting at say 50 damage.
17

17

00:00:49.893  -->  00:00:53.017
It took two shots to hit him when
I had three cuctuses lined up,
18

18

00:00:53.017  -->  00:00:54.230
that was kind of great.
19

19

00:00:54.230  -->  00:00:57.950
So just experiment and play around with
it and it takes a lot of time, but
20

20

00:00:57.950  -->  00:01:01.140
I think the experimentation
approach is totally valid and
21

21

00:01:01.140  -->  00:01:04.030
equate things back to
a common metric if you can.
22

22

00:01:04.030  -->  00:01:06.630
So for example, standard hits to kill,
23

23

00:01:06.630  -->  00:01:09.210
I was using that just now,
that's what comes naturally to me.
24

24

00:01:09.210  -->  00:01:11.479
So, how do many hit points does he have?
25

25

00:01:11.479  -->  00:01:13.996
Well, it comes down to how many bullets,
or
26

26

00:01:13.996  -->  00:01:18.023
how many projectiles do we want our
cactus to shoot to kill the lizard.
27

27

00:01:18.023  -->  00:01:20.860
Now, we know the lizard is
moving at a certain speed.
28

28

00:01:20.860  -->  00:01:25.320
So, if we have our cactus, our cactus just
here, let's see if I can click on him.
29

29

00:01:25.320  -->  00:01:29.786
Cactus &gt; Body, so have our cactus
in the same lane as the lizard, and
30

30

00:01:29.786  -->  00:01:31.180
it's moving there.
31

31

00:01:31.180  -->  00:01:35.396
If these projectiles are coming at
a certain speed and at a certain pace,
32

32

00:01:35.396  -->  00:01:40.620
then, maybe the lizard is gonna cope three
hit before he even makes it to the cactus?
33

33

00:01:40.620  -->  00:01:42.690
So, then we need to take
that into consideration.
34

34

00:01:42.690  -->  00:01:46.390
We need to have the lizard
have enough health, so
35

35

00:01:46.390  -->  00:01:49.480
that he actually makes it
enough to get to cactus.
36

36

00:01:49.480  -->  00:01:52.610
And then entire structure of our game for
now, we haven't made a deep game.
37

37

00:01:52.610  -->  00:01:55.670
I'm gonna be honest with you here,
we've made a game that's great for you and
38

38

00:01:55.670  -->  00:01:57.280
I to get a game up and running.
39

39

00:01:57.280  -->  00:01:58.860
But there's a couple
things that are lacking.
40

40

00:01:58.860  -->  00:02:02.640
For example, our game doesn't have
very good progression within a level.
41

41

00:02:02.640  -->  00:02:05.680
So, we're just spawning attacker,
spawning attacker, spotting attacker
42

42

00:02:05.680  -->  00:02:10.070
on a random basis, we're not saying
spawn one for the first minute and
43

43

00:02:10.070  -->  00:02:13.850
then three in the second minute and
them five in the third minute.
44

44

00:02:13.850  -->  00:02:19.365
So that a sort of thing we can do to make
our individual level have more flow to it,
45

45

00:02:19.365  -->  00:02:20.515
more progression in it.
46

46

00:02:20.515  -->  00:02:23.115
But for now we've gone with
a fairly simple implementation,
47

47

00:02:23.115  -->  00:02:27.535
which means that we should have our levels
lasting just a short amount of time.
48

48

00:02:27.535  -->  00:02:32.695
So we don't get to the point where the
players got 1, 2, 3, 4, 5 cactuses lined
49

49

00:02:32.695  -->  00:02:36.205
deep and then any guy who comes onto the
screen is gonna get smashed straight away.
50

50

00:02:36.205  -->  00:02:38.750
So you wanna avoid that situation.
51

51

00:02:38.750  -->  00:02:43.710
So think of it in terms of like
30 to 60 second game play per
52

52

00:02:43.710  -->  00:02:46.830
level in terms of the sort
of structure we've got.
53

53

00:02:46.830  -->  00:02:49.760
Also think of a benchmark character,
so for me it's the cactus,
54

54

00:02:49.760  -->  00:02:50.850
the cactus on scene.
55

55

00:02:50.850  -->  00:02:53.660
Well, it's gonna have a certain amount
of hit points, a certain cost, and
56

56

00:02:53.660  -->  00:02:57.320
a certain damage and then the others
are gonna be more or less than that.
57

57

00:02:57.320  -->  00:03:01.080
So I find that really helps and
be extreme, not subtle with your tuning.
58

58

00:03:01.080  -->  00:03:05.710
So for example, having a gnome of 10
damage versus a cactus of 8 damage is
59

59

00:03:05.710  -->  00:03:06.880
really boring for the player.
60

60

00:03:06.880  -->  00:03:08.120
It's like, why bother?
61

61

00:03:08.120  -->  00:03:10.630
Just do gnomes the whole time or
just always do a cactus,
62

62

00:03:10.630  -->  00:03:11.450
it just doesn't really matter.
63

63

00:03:11.450  -->  00:03:15.260
Two points, it's nothing,
but a gnome of 50 damage and
64

64

00:03:15.260  -->  00:03:18.390
cactus of 8 damage is interesting,
cuz then you have a choice.
65

65

00:03:18.390  -->  00:03:22.990
Cuz the gnome we're gonna make cost a lot
more money, but it does a ton more damage.
66

66

00:03:22.990  -->  00:03:25.200
So you wanna have those
choices be interesting for
67

67

00:03:25.200  -->  00:03:27.760
the player and let the player fail.
68

68

00:03:27.760  -->  00:03:31.950
Make sure you make a game where
the player can absolutely win, but
69

69

00:03:31.950  -->  00:03:37.720
should be failing at times because then
they feel clever when they do succeed.
70

70

00:03:37.720  -->  00:03:41.730
So what I want you to do in this
video is create a tuning matrix.
71

71

00:03:41.730  -->  00:03:46.330
And I've put in one number already,
this is my base character I'm using.
72

72

00:03:46.330  -->  00:03:50.720
We've got cactus, gnome, trophy, stone,
lizard, fox, cost, hitpoints, and damage.
73

73

00:03:50.720  -->  00:03:52.730
So just scribble this down
on a piece of paper or
74

74

00:03:52.730  -->  00:03:54.640
if you've got your own notes somewhere,
then put it there.
75

75

00:03:54.640  -->  00:03:59.760
Now I want you to put in values for each
of these, what is the cost of the trophy?
76

76

00:03:59.760  -->  00:04:01.530
What is the damage of the fox?
77

77

00:04:01.530  -->  00:04:05.926
And lizard and fox won't have a cost,
trophy and stone don't do any damage, so
78

78

00:04:05.926  -->  00:04:08.235
there's a few things that will be blank.
79

79

00:04:08.235  -->  00:04:12.114
But give it your best shot, and work out
that relationship between the various
80

80

00:04:12.114  -->  00:04:14.480
characters that you've got in your game.
81

81

00:04:14.480  -->  00:04:17.540
So, good chance to put on your
designer hat, put in some numbers, and
82

82

00:04:17.540  -->  00:04:18.200
give it your best shot.
83

83

00:04:18.200  -->  00:04:19.299
I'll see you back here when you're done.
84

84

00:04:21.957  -->  00:04:22.970
Okay, welcome back.
85

85

00:04:22.970  -->  00:04:26.270
So I'll show you the numbers that I've
done by no means are they the best numbers
86

86

00:04:26.270  -->  00:04:28.130
or correct, or
are they gonna work in the game.
87

87

00:04:28.130  -->  00:04:31.680
I haven't really tested the math,
but I wanna show you my logic and
88

88

00:04:31.680  -->  00:04:32.750
my thinking here.
89

89

00:04:32.750  -->  00:04:33.520
In terms of cost,
90

90

00:04:33.520  -->  00:04:37.480
I want the gnome to be three times
more expensive than the cactus.
91

91

00:04:37.480  -->  00:04:40.540
But I want the return to
be better than three times.
92

92

00:04:40.540  -->  00:04:45.950
So you see the damage is four times as
good, so the player can out down a bunch
93

93

00:04:45.950  -->  00:04:50.720
of cactuses but, it would be better
more cost effective to put down gnomes.
94

94

00:04:50.720  -->  00:04:52.700
Why wouldn't they just
put down all gnomes?
95

95

00:04:52.700  -->  00:04:57.050
Well, as you seen in our game it takes
a while for the results to generate, so
96

96

00:04:57.050  -->  00:04:59.140
you have to wait awhile for the gnome.
97

97

00:04:59.140  -->  00:05:03.390
Or gnome is a little bit of
a later level thing where
98

98

00:05:03.390  -->  00:05:08.190
you've already put down some trophies, and
generated enough coin to have the gnomes.
99

99

00:05:08.190  -->  00:05:10.480
Hitpoints I said they're about the same,
cactus and gnome,
100

100

00:05:10.480  -->  00:05:12.960
they both get num-num,
the same sort of speed.
101

101

00:05:12.960  -->  00:05:15.590
If you look at lizard and fox,
wanna have the lizard be a little
102

102

00:05:15.590  -->  00:05:20.250
bit stronger in terms of hitpoints, and
a little bet less in terms of damage.
103

103

00:05:20.250  -->  00:05:23.630
And the fox a little bit squishier but
a little bit more damaged, and
104

104

00:05:23.630  -->  00:05:25.657
obviously the fox jumps over the grace.
105

105

00:05:25.657  -->  00:05:27.400
So that's the start of my matrix.
106

106

00:05:27.400  -->  00:05:30.340
So what I'm gonna do now
is implement in Unity.
107

107

00:05:30.340  -->  00:05:34.730
I'll implement my cactus numbers, we'll
do that together and then off screen,
108

108

00:05:34.730  -->  00:05:35.790
I'll do the other ones.
109

109

00:05:35.790  -->  00:05:38.680
You don't need to watch me go through and
fiddle with all the numbers.
110

110

00:05:38.680  -->  00:05:41.050
Once we've done one, you'll know
where to find all the values and
111

111

00:05:41.050  -->  00:05:43.680
you can do that yourself,
this is part of the tuning mechanism.
112

112

00:05:43.680  -->  00:05:48.080
So let's go find our cactus,
this is a cactus that we've instantiated.
113

113

00:05:48.080  -->  00:05:50.280
But we'll use that,
then apply back to the prefab.
114

114

00:05:50.280  -->  00:05:54.480
We've got the cost is already 50,
you can see it on our Defenders script.
115

115

00:05:54.480  -->  00:05:59.725
We are now looking for health, health is
currently 75, I'll change that to 50.
116

116

00:05:59.725  -->  00:06:04.130
That's all looking pretty good and
then apply that back to the prefab.
117

117

00:06:04.130  -->  00:06:08.760
The damage is on the zucchini itself,
I believe.
118

118

00:06:08.760  -->  00:06:11.960
So let's go find prefab, it's been
a while since we've used this, isn't it?
119

119

00:06:11.960  -->  00:06:15.750
Zucchini, and we can see the projectile,
and the damage is already 50.
120

120

00:06:15.750  -->  00:06:17.016
So, that was pretty easy to do.
121

121

00:06:17.016  -->  00:06:19.350
I've just gone and
set it up in those particular places.
122

122

00:06:19.350  -->  00:06:22.780
And like you said, off camera, I'm gonna
do the setup for the other one, so
123

123

00:06:22.780  -->  00:06:24.080
I've got my tuning fork.
124

124

00:06:24.080  -->  00:06:26.550
But now is the time for
you to tune your game.
125

125

00:06:26.550  -->  00:06:28.850
Actually, you know what, a quick sub
point, I was just going through and
126

126

00:06:28.850  -->  00:06:31.940
doing this with the fox, and I realized
that it's a little bit trickier,
127

127

00:06:31.940  -->  00:06:34.430
because the fox damage is
sitting on its animation.
128

128

00:06:34.430  -->  00:06:39.860
So we need to click on the Fox, and
then go into the foxes attack animation,
129

129

00:06:39.860  -->  00:06:44.110
find the event where we've
strike current target and
130

130

00:06:44.110  -->  00:06:45.520
change that to the value that we wanted.
131

131

00:06:45.520  -->  00:06:49.710
For me, my damage was 40, okay,
it's already 40, so good stuff.
132

132

00:06:49.710  -->  00:06:51.520
So I just wanted to sho
you that extra point.
133

133

00:06:51.520  -->  00:06:53.090
That's how I'm doing it for the fox.
134

134

00:06:53.090  -->  00:06:55.240
Okay, great stuff and
I will see you again shortly.
