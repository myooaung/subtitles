1
1

00:00:00,021  -->  00:00:04,039
[MUSIC]
2

2

00:00:04,039  -->  00:00:07,502
In this video we're going to spawn
multiple enemies in our wave.
3

3

00:00:07,502  -->  00:00:12,172
You can see here we have got one, two,
three,four, five enemies coming out and
4

4

00:00:12,172  -->  00:00:16,237
that was based upon our waves total
to have numbers of enemies at five.
5

5

00:00:16,237  -->  00:00:16,753
Excellent.
6

6

00:00:16,753  -->  00:00:21,107
We are reading from our wave
configuration file and spawning waves.
7

7

00:00:21,107  -->  00:00:22,580
Let's jump in and get started.
8

8

00:00:22,580  -->  00:00:25,997
The next few lectures are going to get
pretty deep and pretty detailed, we're
9

9

00:00:25,997  -->  00:00:29,436
going to be using some nested coroutine,
we're going to be doing four loops.
10

10

00:00:29,436  -->  00:00:33,018
So let's just have a look at
what we're trying to create, so
11

11

00:00:33,018  -->  00:00:34,648
really super duper clear.
12

12

00:00:34,648  -->  00:00:38,400
Now we're going to spawn enemies, so
here's an enemy and where we've spawned
13

13

00:00:38,400  -->  00:00:42,209
it, we're familiar with that concept
of instantiating and spawning an enemy.
14

14

00:00:42,209  -->  00:00:45,752
We also needs to have some waves spawning
all of the enemies in the waves.
15

15

00:00:45,752  -->  00:00:49,183
So, this blue thing here is the wave and
enemy 1 spawns and
16

16

00:00:49,183  -->  00:00:53,051
then after a certain amount of time,
enemy 2 spawns, 3 and 4.
17

17

00:00:53,051  -->  00:00:54,475
So, it's spawning our enemies.
18

18

00:00:54,475  -->  00:00:58,782
When we get to that last enemy,
then we want to spawn the next wave.
19

19

00:00:58,782  -->  00:01:01,704
So, we need this concept
of spawning all the waves.
20

20

00:01:01,704  -->  00:01:07,547
Maybe up here is wave 0,
index 0, and then 1, 2, 3, 4.
21

21

00:01:07,547  -->  00:01:11,480
And then, for the game that I'm creating
at the moment, so that I don't need to go
22

22

00:01:11,480  -->  00:01:14,278
and create gazillions of ways,
I'm gonna loop the wave.
23

23

00:01:14,278  -->  00:01:18,097
So once you finish the last wave
that we're aware of in the list,
24

24

00:01:18,097  -->  00:01:21,723
then we go back to the starting wave and
start all over again.
25

25

00:01:21,723  -->  00:01:25,006
So here's the concept, and for
each of these, we'll need a coroutine.
26

26

00:01:25,006  -->  00:01:28,600
So when we're spawning all the waves,
we need to start with the first wave and
27

27

00:01:28,600  -->  00:01:30,442
then wait for a certain amount of time.
28

28

00:01:30,442  -->  00:01:31,407
How long do we wait?
29

29

00:01:31,407  -->  00:01:36,226
Well, we wait until all of the enemies
in this wave have been spawned,
30

30

00:01:36,226  -->  00:01:39,092
and then we go on to the next wave and
so on.
31

31

00:01:39,092  -->  00:01:43,913
Okay, so these are the loops,
this whole thing is one big loop, and
32

32

00:01:43,913  -->  00:01:49,682
then within the wave itself we have a loop
where we go through each of the enemies.
33

33

00:01:49,682  -->  00:01:53,429
Jump back over into unity lets set
ourselves up with a couple of things.
34

34

00:01:53,429  -->  00:01:57,499
First of all, right click Create empty,
we need a game object for
35

35

00:01:57,499  -->  00:02:00,983
spawning enemies so
we will call this an enemy spawner.
36

36

00:02:00,983  -->  00:02:04,372
Just as an empty game object,
reset the transform.
37

37

00:02:04,372  -->  00:02:07,393
And this will be a place
where we can put our script.
38

38

00:02:09,439  -->  00:02:16,212
And our script folder, in our Assets
directory, I'm going to right click and
39

39

00:02:16,212  -->  00:02:22,684
create a C# Script that I will call
EnemySpawner is what we'll call that.
40

40

00:02:22,684  -->  00:02:26,401
And then I can drag the EnemySpawner
script over onto EnemySpawner and
41

41

00:02:26,401  -->  00:02:28,483
that will now attach it as a component.
42

42

00:02:28,483  -->  00:02:30,549
So a little bit different to
how I've done it in the past,
43

43

00:02:30,549  -->  00:02:31,765
just to show you a different way.
44

44

00:02:31,765  -->  00:02:36,489
Often I just click Add component, Create
a script, and then through that it's
45

45

00:02:36,489  -->  00:02:40,309
automatically attached and
also it is in our assets directory.
46

46

00:02:40,309  -->  00:02:42,816
But this way I just kinda went
about it the other way around.
47

47

00:02:42,816  -->  00:02:46,891
Okay, so
let's open up the EnemySpawner script.
48

48

00:02:46,891  -->  00:02:49,610
Now, we need to give ourselves
a couple of variables,
49

49

00:02:49,610  -->  00:02:51,215
a couple of things at the start.
50

50

00:02:51,215  -->  00:02:53,640
So, let's serializeField.
51

51

00:02:53,640  -->  00:02:54,203
What do we need to do?
52

52

00:02:54,203  -->  00:02:56,830
Well, we need to list out
all our wave configuration.
53

53

00:02:56,830  -->  00:03:00,872
So, we will type in List&lt; waveConfig&gt; and
54

54

00:03:00,872  -->  00:03:06,116
we'll call this waveConfigs
to indicate that this is all
55

55

00:03:06,116  -->  00:03:11,703
of our wave configurations will
be serialized within here.
56

56

00:03:11,703  -->  00:03:14,728
I'm gonna save at this point,
jump back over into Unity,
57

57

00:03:14,728  -->  00:03:17,280
see how many waves we have
in our Assets folders.
58

58

00:03:17,280  -->  00:03:19,456
We have a waves folder down at the bottom.
59

59

00:03:19,456  -->  00:03:20,365
We've got two waves.
60

60

00:03:20,365  -->  00:03:22,171
Okay, so we do have two at the moment.
61

61

00:03:22,171  -->  00:03:24,359
If was to click on Enemy Spawner,
62

62

00:03:24,359  -->  00:03:28,672
we can see that under WaveConfigs
we have a space that we add this.
63

63

00:03:28,672  -->  00:03:31,332
So add this now, just so
we're doing this as we go along.
64

64

00:03:31,332  -->  00:03:35,467
So we click on Wave,
we have to lock out inspector.
65

65

00:03:35,467  -->  00:03:41,457
And then drag over wave 1 and 2 over
the top of where it says WaveConfigs.
66

66

00:03:41,457  -->  00:03:44,859
And now we have our two
WaveConfigs in there.
67

67

00:03:44,859  -->  00:03:47,078
Okay, so
that we know this is working as we go.
68

68

00:03:47,078  -->  00:03:50,546
Back over in to our
EnemySpawner.cs script.
69

69

00:03:50,546  -->  00:03:51,332
Okay, what next?
70

70

00:03:51,332  -->  00:03:54,382
Well we need to have a concept
of what our starting wave is.
71

71

00:03:54,382  -->  00:03:55,252
We know where to stop.
72

72

00:03:55,252  -->  00:04:02,055
So we'll create ourselves an integer,
and we'll call this startingWav = 0.
73

73

00:04:02,055  -->  00:04:06,561
We're gonna start at index
0 within our WaveConfigs.
74

74

00:04:06,561  -->  00:04:08,133
Okay, starting off at 0, cool.
75

75

00:04:08,133  -->  00:04:09,760
Now, what do we need to do?
76

76

00:04:09,760  -->  00:04:13,469
Well in start we need a way of
saying what the current wave is.
77

77

00:04:13,469  -->  00:04:18,760
So I'll create a variable in here,
just var currentWave=,
78

78

00:04:18,760  -->  00:04:25,710
well it's gonna equal the starting wave
index within our WaveConfigs list.
79

79

00:04:25,710  -->  00:04:30,620
So we say WaveConfigs, and
then what do you think we do next?
80

80

00:04:31,890  -->  00:04:36,500
We have our square brackets,
and we say startingWave.
81

81

00:04:36,500  -->  00:04:40,341
So startingWave is our index,
so, basically starting wave is 0.
82

82

00:04:40,341  -->  00:04:43,214
And next in start we need to
place the start our coroutine so
83

83

00:04:43,214  -->  00:04:46,275
I'll start it in here and
then we'll go create it in a moment.
84

84

00:04:46,275  -->  00:04:53,974
The start coroutine where we want to
loop through the enemies in our wave,
85

85

00:04:53,974  -->  00:04:58,582
we'll call this SpawnAllEnemiesInWave.
86

86

00:04:58,582  -->  00:05:00,227
I know it's a big old name, but
87

87

00:05:00,227  -->  00:05:03,212
it makes it super duper clear
exactly what's going on.
88

88

00:05:03,212  -->  00:05:08,534
And then, what is the wave that we
want to be spawning at this point?
89

89

00:05:08,534  -->  00:05:13,632
Well, we're spawning currentWave;.
90

90

00:05:13,632  -->  00:05:17,445
So remember that when
an enemy is instantiated,
91

91

00:05:17,445  -->  00:05:22,377
when an enemy is created,
it says okay, what wave am I part of?
92

92

00:05:22,377  -->  00:05:24,828
At that point, we say hey you're
part of this current wave.
93

93

00:05:24,828  -->  00:05:28,047
It says right, I know I need
to move at a certain speed and
94

94

00:05:28,047  -->  00:05:29,633
move along a certain path.
95

95

00:05:29,633  -->  00:05:32,922
So, that's why we have this
concept of the currentWave.
96

96

00:05:32,922  -->  00:05:34,903
Now, I don't think we're
gonna need updates so
97

97

00:05:34,903  -->  00:05:36,895
I'll delete that to keep things nice and
clean.
98

98

00:05:36,895  -->  00:05:40,091
Let's go ahead and create our coroutine,
it will be private.
99

99

00:05:40,091  -->  00:05:42,440
It's a private method, private coroutine.
100

100

00:05:42,440  -->  00:05:44,546
What type is a coroutine?
101

101

00:05:44,546  -->  00:05:49,618
It's type IEnumerator.
102

102

00:05:49,618  -->  00:05:53,681
And then I'm going to double click on
SpawnAllEnemiesInWave, copy that, just so
103

103

00:05:53,681  -->  00:05:56,422
I know I've typed it correctly or
pasted it correctly.
104

104

00:05:56,422  -->  00:05:59,457
So Ctrl+C and Ctrl+V to paste that.
105

105

00:05:59,457  -->  00:06:03,407
And now we need a requirement,
we need to say when anything calls
106

106

00:06:03,407  -->  00:06:08,528
SpawnAllEnermiesInWave, we need to know
for the details we're about to create,
107

107

00:06:08,528  -->  00:06:11,472
we need to know what
wave we're talking about.
108

108

00:06:11,472  -->  00:06:17,112
So we're specifying here
of type WaveConfig,
109

109

00:06:17,112  -->  00:06:20,921
we need to know the waveConfig.
110

110

00:06:20,921  -->  00:06:21,836
There we go.
111

111

00:06:23,049  -->  00:06:26,456
And you know what, this section of the
cause is gonna feel a little like being
112

112

00:06:26,456  -->  00:06:30,129
a detective, cuz we have things link to
things, link to things, link to things,
113

113

00:06:30,129  -->  00:06:32,389
you have to follow
the evidence trail sometimes.
114

114

00:06:32,389  -->  00:06:35,456
So we have WaveConfig here
as our type in the list.
115

115

00:06:35,456  -->  00:06:39,268
We have our particular WaveConfig,
the very first one, so index 0,
116

116

00:06:39,268  -->  00:06:40,959
which I've shown you before.
117

117

00:06:40,959  -->  00:06:46,376
Here it is wave number 1,
that's our element 0, it's our WaveConfig.
118

118

00:06:46,376  -->  00:06:51,339
And then that is being passed
along our process here because we
119

119

00:06:51,339  -->  00:06:56,405
know that the currentWave is
going to be the first WaveConfig.
120

120

00:06:56,405  -->  00:07:00,895
And then when we start our coroutine
it's saying hey the WaveConfig you're
121

121

00:07:00,895  -->  00:07:03,069
interested in is the currentWave and
122

122

00:07:03,069  -->  00:07:07,786
that is what is being passed into our
WaveConfig in here that we're asking for.
123

123

00:07:07,786  -->  00:07:11,745
Saying, when you call me you need
to tell me what the WaveConfig is.
124

124

00:07:11,745  -->  00:07:16,659
Now instantiate our enemies
by typing Instantiate().
125

125

00:07:16,659  -->  00:07:21,059
And from doing this before we know that we
need what it is that we're instantiating
126

126

00:07:21,059  -->  00:07:23,503
and then the position of it and
the rotation.
127

127

00:07:23,503  -->  00:07:26,339
So I'll give myself a new line,
to make this clear,
128

128

00:07:26,339  -->  00:07:30,021
cuz it's gonna be a pretty long line,
if we try to do it on line line.
129

129

00:07:30,021  -->  00:07:32,420
We'll say waveConfig., well,
130

130

00:07:32,420  -->  00:07:36,899
how do we know the particular
enemy that we're instantiating?
131

131

00:07:36,899  -->  00:07:41,465
If we go back to our waveConfig,
which is where we're accessing,
132

132

00:07:41,465  -->  00:07:46,449
we made ourselves a method,
a get method that returns the enemyPrefab.
133

133

00:07:46,449  -->  00:07:49,110
So that is what we wanna know,
the enemyPrefab.
134

134

00:07:49,110  -->  00:07:51,972
This will be GetEnemyPrefab.
135

135

00:07:51,972  -->  00:07:57,149
So I'm back into EnemySpawner,
typing GetEnemyPrefab.
136

136

00:07:57,149  -->  00:08:00,145
I'm gonna close the parentheses
because it's a method.
137

137

00:08:00,145  -->  00:08:03,818
Comma, next line, we are looking for what?
138

138

00:08:03,818  -->  00:08:05,462
We're looking for the position.
139

139

00:08:05,462  -->  00:08:08,687
So again,
we're looking within waveConfig.,
140

140

00:08:08,687  -->  00:08:12,385
what do we know within our
waveConfig that has position?
141

141

00:08:12,385  -->  00:08:14,478
Well it's the GetWaypoints.
142

142

00:08:14,478  -->  00:08:19,728
This is our list of waypoints,
so back to EnemySpawner again.
143

143

00:08:19,728  -->  00:08:20,495
What did we call it?
144

144

00:08:20,495  -->  00:08:22,926
GetWaypoints.
145

145

00:08:22,926  -->  00:08:25,599
And then it's a method, so
open and close parenthesis.
146

146

00:08:25,599  -->  00:08:27,637
And then we need to say the index.
147

147

00:08:27,637  -->  00:08:31,127
So open our square brackets,
we'll start off with index 0, and
148

148

00:08:31,127  -->  00:08:33,355
we'll be incrementing this in a moment.
149

149

00:08:33,355  -->  00:08:37,895
And because we are looking for
a particular position,
150

150

00:08:37,895  -->  00:08:42,545
we type transform.position,
and comma, next line.
151

151

00:08:42,545  -->  00:08:45,215
Here we're looking for the rotation.
152

152

00:08:45,215  -->  00:08:49,563
So we'll just say nice and
basically quaternion.identity.
153

153

00:08:49,563  -->  00:08:53,260
Which is a way of saying, without going
into the details of what quaternions are,
154

154

00:08:53,260  -->  00:08:55,039
it's saying we don't need rotation.
155

155

00:08:55,039  -->  00:08:59,774
Just use the rotation that you're
starting off with that you have already.
156

156

00:08:59,774  -->  00:09:01,763
And then semicolon at the end of this.
157

157

00:09:01,763  -->  00:09:06,473
Okay, so we've got our instantiating
the what, the where, and the rotation,
158

158

00:09:06,473  -->  00:09:07,244
excellent.
159

159

00:09:07,244  -->  00:09:12,262
Now within our coroutine we
need a concept of yielding,
160

160

00:09:12,262  -->  00:09:19,011
so underneath we'll say yield return new,
what are we going to do in here?
161

161

00:09:19,011  -->  00:09:23,367
We need to WaitForSeconds again.
162

162

00:09:23,367  -->  00:09:25,205
How are we gonna say WaitForSeconds?
163

163

00:09:25,205  -->  00:09:27,479
Let's go have a look with some clues,
164

164

00:09:27,479  -->  00:09:30,406
again being a detective
in our WaveConfig.cs.
165

165

00:09:30,406  -->  00:09:34,192
What in here gives us clues
about how long we should wait?
166

166

00:09:34,192  -->  00:09:36,370
Well we've got our GetTimeBetweenSpawns.
167

167

00:09:36,370  -->  00:09:39,062
Which will return the time
between spawns that we want.
168

168

00:09:39,062  -->  00:09:42,489
So back over into EnemySpawner.cs,
169

169

00:09:42,489  -->  00:09:48,492
WaitForSeconds(waveConfig.GetTimeBetweenS-
pawns()),
170

170

00:09:48,492  -->  00:09:54,394
and then down at the very end
you're going to want a semi-colon.
171

171

00:09:54,394  -->  00:09:58,076
Okay, so let's save and see what behaviors
we're getting here at the moment.
172

172

00:09:58,076  -->  00:10:01,298
We already have our instance so
we've dropped ourselves into the scene.
173

173

00:10:01,298  -->  00:10:05,489
If you click on Enemy and
delete that then when we click on Play,
174

174

00:10:05,489  -->  00:10:10,253
we should instantiate a new enemy and
have it follow the path in wave 1.
175

175

00:10:10,253  -->  00:10:10,916
Okay, cool.
176

176

00:10:10,916  -->  00:10:12,426
So that is what we're doing.
177

177

00:10:12,426  -->  00:10:15,536
It's following along the path and
then when it gets to the end,
178

178

00:10:15,536  -->  00:10:16,894
it should destroy itself.
179

179

00:10:16,894  -->  00:10:19,457
We won't have a second enemy yet,
or will we?
180

180

00:10:19,457  -->  00:10:20,882
Waiting, waiting, waiting.
181

181

00:10:20,882  -->  00:10:21,975
We won't.
182

182

00:10:21,975  -->  00:10:22,545
Cool.
183

183

00:10:22,545  -->  00:10:25,361
There's a reason for that,
is we haven't told it to increment.
184

184

00:10:25,361  -->  00:10:29,321
We've only said to do this action once,
and then wait for seconds, and
185

185

00:10:29,321  -->  00:10:32,226
then go back to where you started,
which is up here.
186

186

00:10:32,226  -->  00:10:35,758
There's no mechanism at the moment
to do this over and over.
187

187

00:10:35,758  -->  00:10:37,990
And this is where we need a for loop.
188

188

00:10:37,990  -->  00:10:41,910
So highlighting here, this is the code
block that we want to do over and over.
189

189

00:10:41,910  -->  00:10:44,646
We want to do this many times,
so we need to have a for
190

190

00:10:44,646  -->  00:10:48,608
loop that will loop through this so
long as a particular condition is met.
191

191

00:10:48,608  -->  00:10:51,690
This is where I'm gonna give you
a challenge to create a for loop.
192

192

00:10:51,690  -->  00:10:54,760
We've done this before but
I've got a lot of reminders in here for
193

193

00:10:54,760  -->  00:10:56,960
you in case that you're
not sure how to do it.
194

194

00:10:56,960  -->  00:11:00,753
So we wanna wrap our Enemy
instantiating in a for loop,
195

195

00:11:00,753  -->  00:11:05,961
that's what I was highlighting just say,
we wanna wrap this in a for loop.
196

196

00:11:05,961  -->  00:11:08,728
And we need to increment our enemyCount.
197

197

00:11:08,728  -->  00:11:12,936
In other words, how many enemies sort
of have been spawned until we reach our
198

198

00:11:12,936  -->  00:11:14,527
desired number of enemies.
199

199

00:11:14,527  -->  00:11:18,560
So we're gonna increase until we've
reached the desired number of enemies,
200

200

00:11:18,560  -->  00:11:20,096
which we have set somewhere.
201

201

00:11:20,096  -->  00:11:22,421
And a reminder for
you this is the framework.
202

202

00:11:22,421  -->  00:11:24,789
This is the structure for
how we write a for loop.
203

203

00:11:24,789  -->  00:11:29,270
We start off with the for
key word and then we define the type.
204

204

00:11:29,270  -->  00:11:31,829
And this [INAUDIBLE] Will
be an integer as well.
205

205

00:11:31,829  -->  00:11:35,410
Here we have i in our example I'm
going to call mine enemyCount.
206

206

00:11:35,410  -->  00:11:38,119
As my integer=0; and
207

207

00:11:38,119  -->  00:11:43,811
then enemyCount is less than something or
other.
208

208

00:11:43,811  -->  00:11:46,358
We need to figure out
what it is less than.
209

209

00:11:46,358  -->  00:11:50,220
And then increment enemyCount.
210

210

00:11:50,220  -->  00:11:53,846
And then we do that we wrap our
instantiation below that within
211

211

00:11:53,846  -->  00:11:54,969
our curly braces.
212

212

00:11:54,969  -->  00:11:57,825
That is the structure of for
loop, this is the challenge,
213

213

00:11:57,825  -->  00:12:00,347
this is what I would like
you to go ahead and create.
214

214

00:12:00,347  -->  00:12:03,497
Give that your best shot and
I'll see you back here when you're done.
215

215

00:12:05,461  -->  00:12:11,712
Okay, so just above instantiate, I'm going
to start typing for, we've got a for loop.
216

216

00:12:11,712  -->  00:12:12,991
And what is in here?
217

217

00:12:12,991  -->  00:12:19,411
Well, integer, as I mentioned,
mine is gonna be called enemyCount = 0.
218

218

00:12:19,411  -->  00:12:23,058
And as I've talked about before,
you could just refer to this as i.
219

219

00:12:23,058  -->  00:12:27,494
But when I'm skimming through my code,
I don't find i as informative as typing in
220

220

00:12:27,494  -->  00:12:30,539
the actual name of the thing
that we're incrementing.
221

221

00:12:30,539  -->  00:12:32,196
So, I like to give it a name.
222

222

00:12:32,196  -->  00:12:34,340
Even if many others do not.
223

223

00:12:34,340  -->  00:12:38,518
;enemyCount is less than something.
224

224

00:12:38,518  -->  00:12:40,016
Well, what do we know?
225

225

00:12:40,016  -->  00:12:43,235
We know just looking our waveConfig again,
226

226

00:12:43,235  -->  00:12:47,430
we know that we have this
notion of number of enemies.
227

227

00:12:47,430  -->  00:12:50,945
That is what we want to be checking,
if we've reached that number yet.
228

228

00:12:50,945  -->  00:12:56,859
So waveConfig.GetNumberOfEnemies().
229

229

00:12:59,130  -->  00:13:01,310
And then our parenthesis
because it's a method.
230

230

00:13:01,310  -->  00:13:05,528
So we're checking to see if the enemy
count is currently less than the get
231

231

00:13:05,528  -->  00:13:08,104
number of enemies or
the number of enemies.
232

232

00:13:08,104  -->  00:13:12,361
And then enemyCount++ to increment.
233

233

00:13:12,361  -->  00:13:16,818
Okay, there's our for loop and
then we need to give ourselves extra line,
234

234

00:13:16,818  -->  00:13:21,020
open curly braces and delete the second
part that auto created for me.
235

235

00:13:21,020  -->  00:13:26,403
Right down underneath yield return new,
put in the close brace and
236

236

00:13:26,403  -->  00:13:30,737
we have wrapped all within here,
is to instantiate.
237

237

00:13:30,737  -->  00:13:34,988
Wait for a little bit of time and
then return back up to our for loop and
238

238

00:13:34,988  -->  00:13:39,613
then continue to do this until the
condition is met where the enemyCount is
239

239

00:13:39,613  -->  00:13:42,834
no longer less than the total
of NumberOfEnemies.
240

240

00:13:42,834  -->  00:13:46,109
So loop, loop, loop,
loop until this condition is not met.
241

241

00:13:46,109  -->  00:13:49,655
And then we have finished our
current spawn all enemies in wave.
242

242

00:13:49,655  -->  00:13:53,919
And then we'll need in our coming
lectures a way to spawn the next wave.
243

243

00:13:53,919  -->  00:13:56,503
And then to spawn all
the enemies within that wave.
244

244

00:13:56,503  -->  00:13:57,053
So it's saved.
245

245

00:13:57,053  -->  00:13:59,535
Make sure this all worked as expected.
246

246

00:13:59,535  -->  00:14:03,426
Click on Play, and we'll see if
we get multiple enemies spawning.
247

247

00:14:03,426  -->  00:14:06,065
One, two, three, four, five.
248

248

00:14:06,065  -->  00:14:06,585
Excellent.
249

249

00:14:06,585  -->  00:14:09,286
So we have our five enemies
spawning on our wave.
250

250

00:14:09,286  -->  00:14:12,335
Can't treat them yet,
that'll be coming up in the future, but
251

251

00:14:12,335  -->  00:14:14,375
we've successfully spawned on our wave.
252

252

00:14:14,375  -->  00:14:16,424
Once we get to the end,
it's not spawning the next wave yet.
253

253

00:14:16,424  -->  00:14:18,917
That's what we'll need to do to say,
cool, you've spawned one,
254

254

00:14:18,917  -->  00:14:20,336
now it's time to spawn the next wave.
255

255

00:14:20,336  -->  00:14:21,651
So that's exciting stuff.
256

256

00:14:21,651  -->  00:14:25,007
We've got multiple enemies
spawning in our wave.
257

257

00:14:25,007  -->  00:14:27,476
And I'll see you in the next lecture.
