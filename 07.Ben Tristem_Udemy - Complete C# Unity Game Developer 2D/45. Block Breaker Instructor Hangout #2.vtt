WEBVTT
1
1

00:00:00.185  -->  00:00:04.113
[SOUND] Hello, and welcome to another
2

2

00:00:04.113  -->  00:00:08.791
Instructor Hangout with Rick and-
&gt;&gt; Ben.
3

3

00:00:08.791  -->  00:00:09.655
&gt;&gt; Hi guys, nice to see you.
4

4

00:00:09.655  -->  00:00:10.843
&gt;&gt; Look at that,
you know your name, that's amazing.
5

5

00:00:10.843  -->  00:00:11.829
&gt;&gt; I know my name, aren't I clever?
6

6

00:00:11.829  -->  00:00:14.963
&gt;&gt; Very good, in this video,
we're gonna talk about three big topics.
7

7

00:00:14.963  -->  00:00:18.740
We're gonna talk about the ball getting
stuck in an endless loop conversation.
8

8

00:00:18.740  -->  00:00:20.118
We've dealt with it
a little bit in the course,
9

9

00:00:20.118  -->  00:00:21.229
we're gonna talk about it a bit more.
10

10

00:00:21.229  -->  00:00:23.493
We're gonna talk about public
versus serialized field.
11

11

00:00:23.493  -->  00:00:25.771
And we're gonna talk about messages,
12

12

00:00:25.771  -->  00:00:29.233
in particular using the example
of OnCollisionEnter2D.
13

13

00:00:29.233  -->  00:00:31.812
So, ready for some action here, Ben?
14

14

00:00:31.812  -->  00:00:34.322
&gt;&gt; Yeah, I'm ready, Rick, and
by the way, those who are listening,
15

15

00:00:34.322  -->  00:00:36.508
there's a slight benefit to
the format we're doing here.
16

16

00:00:36.508  -->  00:00:39.882
Which is that it's designed that you can
consume this audio-only if you want to.
17

17

00:00:39.882  -->  00:00:41.963
So of course,
you wanna see our beautiful faces, but
18

18

00:00:41.963  -->  00:00:44.414
if at any time you wanna just kinda
pick up your mobile device and
19

19

00:00:44.414  -->  00:00:47.207
go for a wander around the garden,
or stretch your legs, then do that.
20

20

00:00:47.207  -->  00:00:49.418
Because we are designing
this podcast style,
21

21

00:00:49.418  -->  00:00:51.921
to make sure that you can
consume this audio-only.
22

22

00:00:51.921  -->  00:00:53.271
So cool, what have you got for me, Rick?
23

23

00:00:53.271  -->  00:00:55.799
&gt;&gt; Awesome, so in Block Breaker,
24

24

00:00:55.799  -->  00:01:01.712
we have a problem at the moment where
our ball gets stuck in an endless loop.
25

25

00:01:01.712  -->  00:01:03.944
And that endless loop,
well, we had that problem,
26

26

00:01:03.944  -->  00:01:06.595
we solved it by adding some
randomness when the ball bounced.
27

27

00:01:06.595  -->  00:01:08.029
And we had some students say, well,
28

28

00:01:08.029  -->  00:01:10.635
is there a better way to do it than
to add a little bit of randomness?
29

29

00:01:10.635  -->  00:01:14.396
The way we're executing at the moment is
we're adding a velocity in a particular
30

30

00:01:14.396  -->  00:01:15.014
direction.
31

31

00:01:15.014  -->  00:01:16.826
So it's gonna go up to the right,
I believe,
32

32

00:01:16.826  -->  00:01:18.277
is how we ended up [CROSSTALK]
&gt;&gt; Yeah,
33

33

00:01:18.277  -->  00:01:21.980
something like 0.2 units per second or
something, up and right, I think.
34

34

00:01:21.980  -->  00:01:24.688
&gt;&gt; Something like that, yeah,
and I changed it a little bit.
35

35

00:01:24.688  -->  00:01:26.756
The notion of having it go
a little bit to the left and
36

36

00:01:26.756  -->  00:01:29.901
a little bit to the right means you're
always gonna be bouncing a little bit.
37

37

00:01:29.901  -->  00:01:33.721
It's not gonna necessarily get you out of
trouble, we wanna push you out of the way.
38

38

00:01:33.721  -->  00:01:38.076
So I wanted to talk about that a little
bit, and maybe talk about some ideas and
39

39

00:01:38.076  -->  00:01:38.880
solutions for
40

40

00:01:38.880  -->  00:01:43.246
students who think that it's not the best
way to stop the ball getting stuck.
41

41

00:01:43.246  -->  00:01:44.719
So what are your thoughts?
42

42

00:01:44.719  -->  00:01:49.362
&gt;&gt; Okay, so I mean, so the issue is
that it's too deterministic, right?
43

43

00:01:49.362  -->  00:01:52.412
You can set your paddle maybe
in a corner against a wall, and
44

44

00:01:52.412  -->  00:01:54.733
the ball can just go
around forever in a loop.
45

45

00:01:54.733  -->  00:01:57.574
And maybe the ball comes down and hits
the wall, and then it hits a paddle, and
46

46

00:01:57.574  -->  00:02:00.759
then it goes back, hits a block, and then
maybe just goes around in circles forever.
47

47

00:02:00.759  -->  00:02:02.203
That's the problem we're trying to solve,
right?
48

48

00:02:02.203  -->  00:02:03.305
It's just boring gameplay.
49

49

00:02:03.305  -->  00:02:05.455
&gt;&gt; Yeah, or gets stuck up at the top,
just [SOUND].
50

50

00:02:05.455  -->  00:02:07.704
&gt;&gt; Or it just gets stuck at
the top behind the parked tiles.
51

51

00:02:07.704  -->  00:02:11.500
Between an indestructible tile and
the edges of the game space and
52

52

00:02:11.500  -->  00:02:12.681
it just goes [SOUND].
53

53

00:02:12.681  -->  00:02:14.543
&gt;&gt; Or just left and
right across the screen or [INAUDIBLE].
54

54

00:02:14.543  -->  00:02:15.685
&gt;&gt; Or just left and right, and
55

55

00:02:15.685  -->  00:02:18.076
the physics engine is just
taking things too literally.
56

56

00:02:18.076  -->  00:02:21.724
It's just going bounce precisely
back the direction you came, and
57

57

00:02:21.724  -->  00:02:23.969
it's just taking things too literally.
58

58

00:02:23.969  -->  00:02:28.415
So obviously in a real environment, we
would have some sort of surface roughness,
59

59

00:02:28.415  -->  00:02:32.362
and some imperfections in both the ball
and in the walls of the play space.
60

60

00:02:32.362  -->  00:02:35.977
And that would lead to some variation
in the way the bounce happens.
61

61

00:02:35.977  -->  00:02:39.046
Another thing that will happen in
reality is that you would have some spin
62

62

00:02:39.046  -->  00:02:40.722
on the ball that picks up at some point.
63

63

00:02:40.722  -->  00:02:42.841
And that spin would change
the way the bounce happens.
64

64

00:02:42.841  -->  00:02:45.719
So there's two approaches to this really,
I think, two kinda physical approaches.
65

65

00:02:45.719  -->  00:02:49.164
There's all sort of hacky approaches,
like introducing some random velocity.
66

66

00:02:49.164  -->  00:02:51.204
But let's think about the physics
of it for a sec first,
67

67

00:02:51.204  -->  00:02:52.818
is that a good place to start for
you, Rick?
68

68

00:02:52.818  -->  00:02:55.562
&gt;&gt; Yeah, that's cool, and-
&gt;&gt; So, sorry, go on.
69

69

00:02:55.562  -->  00:02:58.668
&gt;&gt; No, I was gonna say, I'll probably come
from a little bit of the point of view of,
70

70

00:02:58.668  -->  00:02:59.354
but it's a game.
71

71

00:02:59.354  -->  00:03:03.011
I don't want it to behave like the real
world, cuz it's not the real world.
72

72

00:03:03.011  -->  00:03:04.939
And I know you often come
from the standpoint of,
73

73

00:03:04.939  -->  00:03:08.041
yeah, but let's study the real world to
see how it would actually happen, and
74

74

00:03:08.041  -->  00:03:09.795
then pull them from what
we want from there.
75

75

00:03:09.795  -->  00:03:12.404
So I'm interested to hear
what you've got to say.
76

76

00:03:12.404  -->  00:03:14.124
&gt;&gt; Well, exactly, so
I know we're making a game here.
77

77

00:03:14.124  -->  00:03:16.662
And we wanna do something that's just fun,
and we just wanna have to tweak,
78

78

00:03:16.662  -->  00:03:17.228
tweak the game.
79

79

00:03:17.228  -->  00:03:20.653
But in taking some inspiration from the
physics, literally, taking inspiration.
80

80

00:03:20.653  -->  00:03:22.804
Excuse the microphone, squeak, squeak.
81

81

00:03:22.804  -->  00:03:25.734
Taking inspiration from nature,
is we look at the nature of things and
82

82

00:03:25.734  -->  00:03:27.684
then we can say, well,
what are our options?
83

83

00:03:27.684  -->  00:03:31.078
So one option is to say, well,
as far as the game is concerned,
84

84

00:03:31.078  -->  00:03:33.461
the ball is a perfect sphere, pretty much.
85

85

00:03:33.461  -->  00:03:37.626
And within the limits of the floating
point numbers that represent that sphere
86

86

00:03:37.626  -->  00:03:38.707
behind the scenes.
87

87

00:03:38.707  -->  00:03:40.896
And the wall is actually pretty
much a perfect straight line.
88

88

00:03:40.896  -->  00:03:45.483
Apart from its position in space is only
as actual as the floating points that
89

89

00:03:45.483  -->  00:03:46.852
are representing it.
90

90

00:03:46.852  -->  00:03:50.632
But apart from those little rounding
errors, the things that are round and
91

91

00:03:50.632  -->  00:03:51.241
straight.
92

92

00:03:51.241  -->  00:03:56.072
And one option is to effectively introduce
surface roughness by just saying, well,
93

93

00:03:56.072  -->  00:03:58.499
don't always obey the law of reflection.
94

94

00:03:58.499  -->  00:04:02.443
If the ball comes in at 30 degrees
to the right angle of the surface,
95

95

00:04:02.443  -->  00:04:05.037
let it come out at a different angle,
right?
96

96

00:04:05.037  -->  00:04:08.427
It could come out at 31 degrees or
at 29 degrees.
97

97

00:04:08.427  -->  00:04:12.127
And the one way to do that,
which is what we're doing here,
98

98

00:04:12.127  -->  00:04:15.680
is to just say,
well just introduce a bit more velocity.
99

99

00:04:15.680  -->  00:04:18.880
Just knock it sideways, so
that's what we've done so far, and
100

100

00:04:18.880  -->  00:04:20.849
that's a bit like surface roughness.
101

101

00:04:20.849  -->  00:04:22.682
Incidentally, by adding velocity,
102

102

00:04:22.682  -->  00:04:25.442
we are doing something that's
physically impossible.
103

103

00:04:25.442  -->  00:04:29.821
Which is the ball is picking up energy
when it hits the wall, or the block.
104

104

00:04:29.821  -->  00:04:32.829
And that could lead to it getting faster,
and faster, and faster, and
105

105

00:04:32.829  -->  00:04:34.048
faster, which is not good.
106

106

00:04:34.048  -->  00:04:36.450
Whereas in reality, it would get slower,
and slower, and slower.
107

107

00:04:37.840  -->  00:04:43.020
So without gravity present, and
gravity's another thing we can talk about,
108

108

00:04:43.020  -->  00:04:45.720
one option is just to
give it a nudge sideways.
109

109

00:04:45.720  -->  00:04:48.164
And how have we found that works,
Rick, when we do that?
110

110

00:04:48.164  -->  00:04:51.417
&gt;&gt; It's okay,
I found it solves most of the situations,
111

111

00:04:51.417  -->  00:04:53.974
if we keep nudging it
in the one direction.
112

112

00:04:53.974  -->  00:04:57.794
But the one direction's what adds
the cumulative velocity to it.
113

113

00:04:57.794  -->  00:05:01.695
If we plus it a little bit and minus it
a little bit, then it equals out overtime,
114

114

00:05:01.695  -->  00:05:03.164
and it's not gonna speed up.
115

115

00:05:03.164  -->  00:05:07.893
But it's okay, it's not amazing doing
that, unless you add a lot more variation,
116

116

00:05:07.893  -->  00:05:10.503
then it really does zing
it out of the problem.
117

117

00:05:10.503  -->  00:05:11.963
&gt;&gt; Yeah.
&gt;&gt; But then you get the lack of
118

118

00:05:11.963  -->  00:05:15.045
predictability, if I bounce it off
the wall, it's gonna go to there.
119

119

00:05:15.045  -->  00:05:17.564
&gt;&gt; Okay, so another frame on this then,
before we go to gravity,
120

120

00:05:17.564  -->  00:05:18.808
which changes the whole game.
121

121

00:05:18.808  -->  00:05:21.796
Another frame on this would be to say,
well, how about if we introduce rotation?
122

122

00:05:21.796  -->  00:05:25.261
I mean, Unity will support physics
simulation of the rotation of the ball.
123

123

00:05:25.261  -->  00:05:28.073
It will support friction
on the surface of the ball.
124

124

00:05:28.073  -->  00:05:32.159
There's no point in introducing a rotation
unless you simultaneously introduce
125

125

00:05:32.159  -->  00:05:35.133
friction on both the ball, and
the blocks, and the walls.
126

126

00:05:35.133  -->  00:05:36.682
&gt;&gt; Yeah.
&gt;&gt; If there's no friction,
127

127

00:05:36.682  -->  00:05:39.261
the rotation is of no consequence,
if it's a sphere.
128

128

00:05:39.261  -->  00:05:42.480
If it was a square or something, and
the spinning square rotating, yeah, sure,
129

129

00:05:42.480  -->  00:05:44.874
that could hit something and
knock itself off from a corner.
130

130

00:05:44.874  -->  00:05:47.473
But a sphere spinning or
a ball spinning against this flat surface,
131

131

00:05:47.473  -->  00:05:49.539
there's no consequence
unless there's friction.
132

132

00:05:49.539  -->  00:05:51.389
So you can introduce friction and
spin, and
133

133

00:05:51.389  -->  00:05:53.694
then let the physics engine
just calculate that spin.
134

134

00:05:53.694  -->  00:05:57.807
Now you could still get in a loop, but
you're much less likely to get in a loop.
135

135

00:05:57.807  -->  00:06:01.678
It's very unlikely the ball's gonna end up
in a situation where it's going back and
136

136

00:06:01.678  -->  00:06:03.486
forth between walls and it has no spin.
137

137

00:06:03.486  -->  00:06:05.557
Introducing spin and
friction is something you guys can try.
138

138

00:06:05.557  -->  00:06:10.335
Now what you need to do there is to
not lock the rotation of the ball.
139

139

00:06:10.335  -->  00:06:12.834
If we're already doing that,
you'd wanna unlock that rotation.
140

140

00:06:12.834  -->  00:06:15.546
You'd wanna make sure that you have
a physics material on both the ball,
141

141

00:06:15.546  -->  00:06:17.957
the blocks, and the walls, and
then see what that does for you.
142

142

00:06:17.957  -->  00:06:21.187
Now you can combine that with
the strategy Rick's already talked about,
143

143

00:06:21.187  -->  00:06:24.173
having a little bit of a kick added in,
and see how that does for you.
144

144

00:06:24.173  -->  00:06:25.880
So there's another option.
145

145

00:06:25.880  -->  00:06:30.512
&gt;&gt; Yep, and you talked about gravity,
in the original version of this
146

146

00:06:30.512  -->  00:06:34.996
course that you created some time ago,
you had gravity in there.
147

147

00:06:34.996  -->  00:06:36.629
&gt;&gt; Mm-hm.
&gt;&gt; But I took gravity out, because for
148

148

00:06:36.629  -->  00:06:38.467
me, gravity doesn't feel
good with gameplay.
149

149

00:06:38.467  -->  00:06:42.092
If I want the ball to go bang up there,
and it goes bang, and then slowly drops
150

150

00:06:42.092  -->  00:06:45.338
down, it solved the problem of it
getting stuck on the horizontal.
151

151

00:06:45.338  -->  00:06:46.375
Like, you're not gonna go side,
side, side.
152

152

00:06:46.375  -->  00:06:47.218
&gt;&gt; Yeah.
153

153

00:06:47.218  -->  00:06:51.907
&gt;&gt; But I feel it doesn't feel as good,
gameplay-wise, to add in gravity.
154

154

00:06:51.907  -->  00:06:53.456
&gt;&gt; So it's a question of degrees, right?
155

155

00:06:53.456  -->  00:06:57.503
I think here, any amount of gravity
solves the fundamental problem
156

156

00:06:57.503  -->  00:07:01.204
of the horizontal bouncing left and
right between two walls.
157

157

00:07:01.204  -->  00:07:04.211
Eventually, the ball will stop doing
that with any amount of gravity.
158

158

00:07:04.211  -->  00:07:08.306
Now there's a amount of gravity below
a threshold, below which you cannot detect
159

159

00:07:08.306  -->  00:07:11.707
there's any gravity there, but
yet it still solves that problem.
160

160

00:07:11.707  -->  00:07:14.511
So another option for people is to say,
put some gravity back in the game.
161

161

00:07:14.511  -->  00:07:17.914
But don't put over the region
of 9.8 meters per square second,
162

162

00:07:17.914  -->  00:07:21.938
like we have here on Earth, but
put 0.01 or something tiny, tiny, tiny.
163

163

00:07:21.938  -->  00:07:24.679
You're not gonna feel it
in general gameplay, but
164

164

00:07:24.679  -->  00:07:27.175
it will stop the horizontal
locking problem.
165

165

00:07:27.175  -->  00:07:30.523
&gt;&gt; Wouldn't that cause a problem
that the ball slows down over time?
166

166

00:07:30.523  -->  00:07:35.302
Cuz it's losing some velocity on the up,
I know, but it's gaining it on the down,
167

167

00:07:35.302  -->  00:07:36.504
if we [CROSSTALK]
&gt;&gt; Yes, so
168

168

00:07:36.504  -->  00:07:38.310
the answer to that's not super obvious,
right?
169

169

00:07:38.310  -->  00:07:40.650
So that's an interesting thought pattern.
170

170

00:07:40.650  -->  00:07:42.454
It's like, it loses on the way up, but
171

171

00:07:42.454  -->  00:07:45.487
does it gain exactly that same
amount of velocity on the way down?
172

172

00:07:45.487  -->  00:07:49.451
It turns out it does, and it turns out
again, the energy would be conserved.
173

173

00:07:49.451  -->  00:07:52.108
The reasons for that are slightly
beyond the scope of this course.
174

174

00:07:52.108  -->  00:07:57.175
But yeah, it's a conservative force field,
and the ball going up will lose.
175

175

00:07:57.175  -->  00:08:00.563
Well, the way to think of it
without thinking about force is,
176

176

00:08:00.563  -->  00:08:04.993
is actually to just think that as it goes
up, all of the kinetic energy, the speed
177

177

00:08:04.993  -->  00:08:09.325
energy it loses, it's being converted
to gravitational potential energy.
178

178

00:08:09.325  -->  00:08:11.975
And then on the way down, that gets
perfectly traded back into kinetic.
179

179

00:08:11.975  -->  00:08:14.923
So a ball bouncing in
a gravitational game,
180

180

00:08:14.923  -->  00:08:19.956
it'll hit the paddle at the bottom of
the screen the same speed every time.
181

181

00:08:19.956  -->  00:08:20.653
&gt;&gt; Yeah, cool.
182

182

00:08:20.653  -->  00:08:22.243
&gt;&gt; So it won't lead it to slow down.
183

183

00:08:22.243  -->  00:08:26.339
Friction, drag, specifically linear drag,
will lead it to slow down over time,
184

184

00:08:26.339  -->  00:08:27.750
that's a different issue.
185

185

00:08:27.750  -->  00:08:31.120
&gt;&gt; Yeah, okay, so we've talked about
gravity, we've talked about friction,
186

186

00:08:31.120  -->  00:08:32.493
we've talked about rotation.
187

187

00:08:32.493  -->  00:08:34.627
We've talked about more
randomness when it bounces.
188

188

00:08:34.627  -->  00:08:39.020
So there's some ideas if you want to stop
that predictability, the continuous loop,
189

189

00:08:39.020  -->  00:08:42.283
there's some other things that
you can play around with there.
190

190

00:08:42.283  -->  00:08:43.485
&gt;&gt; [CROSSTALK] Yeah, absolutely, and
191

191

00:08:43.485  -->  00:08:45.449
if you wanted to do none of
that adding random velocities,
192

192

00:08:45.449  -->  00:08:47.251
if you don't just like that,
it feels really weird,
193

193

00:08:47.251  -->  00:08:49.277
the other thing you can do is
just tilt the paddle slightly.
194

194

00:08:49.277  -->  00:08:53.269
So if you add in some gravity, and you
just tilt your paddle by 0.1 of a degree,
195

195

00:08:53.269  -->  00:08:56.734
not even enough to see or tilt the
collider of the paddle by not enough to
196

196

00:08:56.734  -->  00:08:59.406
see, that would help in
terms of paddle collisions.
197

197

00:08:59.406  -->  00:09:01.336
You would also then need to
do the same to the bricks.
198

198

00:09:01.336  -->  00:09:03.794
So you could just tilt the wall,
you've gotta think,
199

199

00:09:03.794  -->  00:09:05.190
what can it get stuck between?
200

200

00:09:05.190  -->  00:09:05.731
&gt;&gt; Yeah.
&gt;&gt; Well,
201

201

00:09:05.731  -->  00:09:06.797
it can get stuck between two bricks.
202

202

00:09:06.797  -->  00:09:09.959
So you would actually have to tilt
everything very slightly off to the side.
203

203

00:09:09.959  -->  00:09:13.430
Or in the physics settings, tilt
the gravitational vector a little bit.
204

204

00:09:13.430  -->  00:09:17.088
Not make it straight down, but
make gravity a little bit off y.
205

205

00:09:17.088  -->  00:09:18.458
&gt;&gt; Yeah.
&gt;&gt; If that's available, and
206

206

00:09:18.458  -->  00:09:20.898
then you can do that and it would always
work it's way out of the problem,
207

207

00:09:20.898  -->  00:09:21.785
that's another option.
208

208

00:09:21.785  -->  00:09:23.461
&gt;&gt; Yeah, that's cool, I like it.
209

209

00:09:23.461  -->  00:09:25.963
Okay, another couple of things for that,
210

210

00:09:25.963  -->  00:09:30.356
another couple of things, we talk
about serialized field versus public.
211

211

00:09:30.356  -->  00:09:34.299
We've talked about that a little bit,
but I don't think we've given a good,
212

212

00:09:34.299  -->  00:09:38.318
in-depth explanation of why in this
course, we always use serialized field.
213

213

00:09:38.318  -->  00:09:42.114
If we want to expose the variable in
the inspector, we don't use public.
214

214

00:09:42.114  -->  00:09:44.825
So I just wanted to touch
on that because I'm sure,
215

215

00:09:44.825  -->  00:09:48.483
if folks have been looking around
on YouTube, or on the Internet, or
216

216

00:09:48.483  -->  00:09:51.972
going through other courses,
they've seen people use public.
217

217

00:09:51.972  -->  00:09:53.741
It's still a pretty common thing to do.
218

218

00:09:53.741  -->  00:09:56.658
We don't do it,
why is it that we don't do that?
219

219

00:09:56.658  -->  00:09:59.381
&gt;&gt; Okay, so it's not right or wrong,
I'm gonna come from an actions and
220

220

00:09:59.381  -->  00:10:00.682
consequences standpoint here.
221

221

00:10:00.682  -->  00:10:04.470
So when you write public in Unity, what's
happening is actually doing two things for
222

222

00:10:04.470  -->  00:10:05.107
you in Unity.
223

223

00:10:05.107  -->  00:10:08.048
Number one, it's making that
variable a public variable,
224

224

00:10:08.048  -->  00:10:12.315
which means another class, another script
file, can reach straight into your thing,
225

225

00:10:12.315  -->  00:10:14.296
and say, dot the name of that variable.
226

226

00:10:14.296  -->  00:10:18.870
So it could be player.speed, and then it
can say equals, and just set that value.
227

227

00:10:18.870  -->  00:10:21.110
So you can reach straight
into the state or
228

228

00:10:21.110  -->  00:10:24.064
the instance variable of
the public member variable.
229

229

00:10:24.064  -->  00:10:27.581
They're all words for the same thing of
somebody else's object from a different
230

230

00:10:27.581  -->  00:10:29.349
class, and you can just set that thing.
231

231

00:10:29.349  -->  00:10:32.903
So that's kind of, from an object
oriented programming standpoint,
232

232

00:10:32.903  -->  00:10:36.398
which is what we're doing here,
the idea is that you hide your data and
233

233

00:10:36.398  -->  00:10:37.893
you expose your capability.
234

234

00:10:37.893  -->  00:10:40.717
With a car, you allow people to
steer the car left and right, and
235

235

00:10:40.717  -->  00:10:42.401
to hit the accelerator and the brake.
236

236

00:10:42.401  -->  00:10:45.146
But you don't allow them to directly
set the speed, or the position, or
237

237

00:10:45.146  -->  00:10:46.144
the direction of the car.
238

238

00:10:46.144  -->  00:10:48.050
That's a consequence of the inputs, right?
239

239

00:10:48.050  -->  00:10:51.444
So you expose the controls but
you hide the state.
240

240

00:10:51.444  -->  00:10:53.782
So doing public immunity does two things,
number one,
241

241

00:10:53.782  -->  00:10:55.683
it makes that thing
public to other classes.
242

242

00:10:55.683  -->  00:10:57.994
Which we think, if you're doing
object oriented programming,
243

243

00:10:57.994  -->  00:10:58.799
is not good practice.
244

244

00:10:58.799  -->  00:11:01.659
And the other thing it simultaneously
does is make that thing into
245

245

00:11:01.659  -->  00:11:02.600
a serialized field.
246

246

00:11:02.600  -->  00:11:05.090
And the thing is to not be confused
about the fact it's doing two things.
247

247

00:11:05.090  -->  00:11:09.359
Our intention, our purpose is
to make this thing visible and
248

248

00:11:09.359  -->  00:11:11.794
editable in the Unity Inspector.
249

249

00:11:11.794  -->  00:11:14.555
Doing public does that, and
makes it available to all other classes.
250

250

00:11:14.555  -->  00:11:17.036
Serialized field only makes it
available in the inspector.
251

251

00:11:17.036  -->  00:11:20.553
It's more surgical, it's more precise,
it's more intentional to go in and
252

252

00:11:20.553  -->  00:11:23.644
use serialized field than it is to
use the more wide reaching public,
253

253

00:11:23.644  -->  00:11:25.690
even though it's slightly shorter to type.
254

254

00:11:25.690  -->  00:11:28.678
Because later, you will get
yourself into problems with public.
255

255

00:11:28.678  -->  00:11:31.754
&gt;&gt; Yeah, and it's something
at this stage of the course,
256

256

00:11:31.754  -->  00:11:34.183
you might not know what
bad things can go on.
257

257

00:11:34.183  -->  00:11:37.154
There's is a little bit of just trust,
and so if you go and accidentally change
258

258

00:11:37.154  -->  00:11:40.271
something and then you don't know, or you
come back a week later or a month later.
259

259

00:11:40.271  -->  00:11:42.479
And you don't know that
buried deep within your code,
260

260

00:11:42.479  -->  00:11:44.017
you're changing a public variable.
261

261

00:11:44.017  -->  00:11:47.245
Then you can go around and around,
and hours, and hours, and hours,
262

262

00:11:47.245  -->  00:11:48.470
just trying to find that.
263

263

00:11:48.470  -->  00:11:51.218
So it's one of those things that takes
a little bit more time to do, but
264

264

00:11:51.218  -->  00:11:54.640
it's gonna save you that heartache at some
point, it's gonna get you out of trouble.
265

265

00:11:54.640  -->  00:11:56.665
&gt;&gt; Yeah, at this stage,
me talking about classes, and objects, and
266

266

00:11:56.665  -->  00:11:58.311
instances, it's all a little bit abstract,
right?
267

267

00:11:58.311  -->  00:12:00.559
But again, go back to the car analogy,
it's a radio controlled car,
268

268

00:12:00.559  -->  00:12:02.055
that's the thing you're making your class.
269

269

00:12:02.055  -->  00:12:04.815
That's your player, let's say,
or your paddle, and
270

270

00:12:04.815  -->  00:12:07.751
you just wanna be sure that if
it ain't steering right, and
271

271

00:12:07.751  -->  00:12:11.469
it ain't behaving right, that you look
inside the thing for the problem.
272

272

00:12:11.469  -->  00:12:13.808
You're not needing to look from
the outside, it's not like,
273

273

00:12:13.808  -->  00:12:16.766
it's a radio controlled car but it's also
got some puppet strings that go in and
274

274

00:12:16.766  -->  00:12:17.713
also can pull it around.
275

275

00:12:17.713  -->  00:12:19.880
Then you really don't know
who's pulling the strings.
276

276

00:12:19.880  -->  00:12:23.471
You want just really to be very clear
about what's controlling what, and that's
277

277

00:12:23.471  -->  00:12:26.905
why we're trying to give you as little
rope to hang yourself with as possible,
278

278

00:12:26.905  -->  00:12:28.433
that's what we're trying to do.
279

279

00:12:28.433  -->  00:12:33.132
&gt;&gt; Awesome, thank you for that, [LAUGH]
a little rope to hang ourselves with.
280

280

00:12:33.132  -->  00:12:36.667
Okay, so I've got one more big topic for
us to talk about here,
281

281

00:12:36.667  -->  00:12:39.217
which is an explanation
of what a message is?
282

282

00:12:39.217  -->  00:12:43.895
So for example,
we've worked on OnCollisionEnter2D.
283

283

00:12:43.895  -->  00:12:47.795
We've used that, and we know that
that's getting called somewhere by
284

284

00:12:47.795  -->  00:12:48.997
something,
&gt;&gt; Mm-hm.
285

285

00:12:48.997  -->  00:12:52.206
&gt;&gt; At a certain point in time,
we're not calling it ourselves.
286

286

00:12:52.206  -->  00:12:55.178
Other methods that we create ourselves,
we're saying here's the method.
287

287

00:12:55.178  -->  00:12:58.695
And then down here, we say we're gonna
call it here and bring it to life.
288

288

00:12:58.695  -->  00:13:01.313
So let's talk a little bit about that, and
289

289

00:13:01.313  -->  00:13:06.796
maybe you can give a deeper explanation of
messages, where it's called, how it works.
290

290

00:13:06.796  -->  00:13:08.356
&gt;&gt; Yeah, so we're working in the,
and first, and
291

291

00:13:08.356  -->  00:13:10.996
first we need to note the context that
we're working in, we're in a game engine.
292

292

00:13:10.996  -->  00:13:15.057
And what being in a game engine means
is that it is ultimately in control of
293

293

00:13:15.057  -->  00:13:16.799
the execution of everything.
294

294

00:13:16.799  -->  00:13:21.548
It starts the gameplay, it calls the start
messages on all of your scripts.
295

295

00:13:21.548  -->  00:13:25.792
It then calls the update messages on all
of your scripts every single frame of
296

296

00:13:25.792  -->  00:13:26.401
the game.
297

297

00:13:26.401  -->  00:13:29.352
So if you're in an engine,
you're not actually in control,
298

298

00:13:29.352  -->  00:13:33.468
sometimes the analogy I use is that you're
on an island there, and you're waiting.
299

299

00:13:33.468  -->  00:13:36.177
You can't really do anything until
a bottle arrives with a little message in
300

300

00:13:36.177  -->  00:13:38.355
it, that's from Unity saying,
hey, start is happening.
301

301

00:13:38.355  -->  00:13:41.018
It's like, cool,
I'm gonna do something in response now.
302

302

00:13:41.018  -->  00:13:43.414
Until that happens, you're on your own.
303

303

00:13:43.414  -->  00:13:48.302
So, we know when Unity is
gonna call these things, but
304

304

00:13:48.302  -->  00:13:52.572
we don't actually make
those calls normally.
305

305

00:13:52.572  -->  00:13:55.456
You can call your own start method,
you can call your own update method,
306

306

00:13:55.456  -->  00:13:56.885
it's a bit weird, you can do that.
307

307

00:13:56.885  -->  00:14:01.061
So the difference between a message and
a function is simply that Unity will look
308

308

00:14:01.061  -->  00:14:03.989
through all of your scripts for
a method that is called,
309

309

00:14:03.989  -->  00:14:07.818
that has the signature void start,
with no parameters in the brackets.
310

310

00:14:07.818  -->  00:14:11.550
And it will just call that on
every single object in your game.
311

311

00:14:11.550  -->  00:14:13.968
You can't be sure the order it's
gonna do it in, by the way.
312

312

00:14:13.968  -->  00:14:16.987
And you should be writing your code, and
we will teach you to write your code in
313

313

00:14:16.987  -->  00:14:19.368
such a way that it doesn't matter
what order it gets done in.
314

314

00:14:19.368  -->  00:14:23.528
That's order independent execution code,
we'll be doing that, but that's a message,
315

315

00:14:23.528  -->  00:14:24.131
basically.
316

316

00:14:24.131  -->  00:14:27.440
It's when the engine calls into a piece
of your code, it's how everything starts.
317

317

00:14:27.440  -->  00:14:32.343
Without these, there's no way to even get
started, because your code will never run.
318

318

00:14:32.343  -->  00:14:35.217
If you just write C# code and
you write all your own method names,
319

319

00:14:35.217  -->  00:14:36.167
they'll never run.
320

320

00:14:36.167  -->  00:14:40.178
They'll only run because start got called
by the engine, or update got called, or
321

321

00:14:40.178  -->  00:14:43.239
OnCollisionEnter got called,
or something else got called.
322

322

00:14:43.239  -->  00:14:45.750
That, and remember, you must cut and
paste those message names.
323

323

00:14:45.750  -->  00:14:49.231
Cuz if you spell them even slightly wrong,
they won't get called and
324

324

00:14:49.231  -->  00:14:51.704
you won't know why,
your code just won't run.
325

325

00:14:51.704  -->  00:14:53.301
&gt;&gt; Yep, awesome, awesome.
326

326

00:14:53.301  -->  00:14:57.540
FindObject and FindObjectsOfType,
that's something that gets me every time.
327

327

00:14:57.540  -->  00:15:00.327
Not what we're talking about
here necessarily, but the whole,
328

328

00:15:00.327  -->  00:15:03.073
make sure that you get it exactly right or
else it doesn't work.
329

329

00:15:03.073  -->  00:15:04.294
&gt;&gt; Yeah.
&gt;&gt; Awesome, cool, so
330

330

00:15:04.294  -->  00:15:07.696
those are the three big buckets we wanted
to talk about in this conversation.
331

331

00:15:07.696  -->  00:15:10.873
Next up, we've got Laser Defender,
it's gonna be amazing.
332

332

00:15:10.873  -->  00:15:14.640
Any words of wisdom about Laser Defender,
Ben, before we dive into it?
333

333

00:15:14.640  -->  00:15:18.366
Yeah, just stay at the bottom of
the screen, shoot a lot, and stay alive.
334

334

00:15:18.366  -->  00:15:20.622
&gt;&gt; [LAUGH] Great words of wisdom,
thank you for that.
335

335

00:15:20.622  -->  00:15:24.815
Awesome, great Instructor Hangout, and
we'll see you guys in upcoming lecture.
336

336

00:15:24.815  -->  00:15:25.530
&gt;&gt; See you, guys.
