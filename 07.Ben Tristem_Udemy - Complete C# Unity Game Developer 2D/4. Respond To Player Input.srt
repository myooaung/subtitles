1
1

00:00:00,078  -->  00:00:04,017
[MUSIC]
2

2

00:00:04,017  -->  00:00:07,535
In this video we're gonna setup our
input so that when the player hits up,
3

3

00:00:07,535  -->  00:00:11,277
we print out a message that say, up arrow
is pressed, when hit down, it says,
4

4

00:00:11,277  -->  00:00:11,939
down arrow.
5

5

00:00:11,939  -->  00:00:14,647
When I hit Enter, it says, you hit Enter.
6

6

00:00:14,647  -->  00:00:16,147
Let's jump in and get started.
7

7

00:00:16,147  -->  00:00:18,816
First thing is first,
I'm gonna fix a bit of a boo boo that
8

8

00:00:18,816  -->  00:00:21,334
I made a couple of videos ago,
I wrote Pick an number.
9

9

00:00:21,334  -->  00:00:23,818
Crazy, you guys have been
yelling at me and saying,
10

10

00:00:23,818  -->  00:00:26,028
that's not how you speak the English,
Rick.
11

11

00:00:26,028  -->  00:00:27,232
So apologies for that.
12

12

00:00:27,232  -->  00:00:31,896
Okay, so now onto what we're doing, which
is creating some input for the player.
13

13

00:00:31,896  -->  00:00:34,635
And we need to give the player
one more step of instructions, so
14

14

00:00:34,635  -->  00:00:35,987
let's create a new line here.
15

15

00:00:35,987  -->  00:00:41,724
Debug.Log and then, again, (" ").
16

16

00:00:41,724  -->  00:00:48,389
In here we want to say
something a long the lines of,
17

17

00:00:48,389  -->  00:00:55,525
Tell me if your number is higher or
lower than my guess.
18

18

00:00:55,525  -->  00:00:57,481
And at the moment,
we don't have the guess in there.
19

19

00:00:57,481  -->  00:01:00,233
The first guess,
as we've said before, we have 500.
20

20

00:01:00,233  -->  00:01:04,894
So let's break that in lower or
higher than 500, and you are brain at
21

21

00:01:04,894  -->  00:01:09,650
this point should be saying hang on
a minute we could make that variable.
22

22

00:01:09,650  -->  00:01:13,207
Which we absolutely will in some upcoming
videos when we get to the point where
23

23

00:01:13,207  -->  00:01:14,693
we're calculating the guess.
24

24

00:01:14,693  -->  00:01:18,512
But for now, we'll just bake that in there
and say, is it higher or lower than 500?
25

25

00:01:18,512  -->  00:01:19,818
That'll be our first guess.
26

26

00:01:19,818  -->  00:01:23,048
And then we need another line, Debug.Log,
27

27

00:01:23,048  -->  00:01:26,112
to tell the player how
to give their input.
28

28

00:01:26,112  -->  00:01:29,513
Debug.Log(" "),
29

29

00:01:29,513  -->  00:01:34,953
it will be something along the lines,
30

30

00:01:34,953  -->  00:01:38,523
so Push Up = higher, and
31

31

00:01:38,523  -->  00:01:43,972
then we will say, Push Down = lower.
32

32

00:01:43,972  -->  00:01:46,643
And the last one we need is,
what do we need here?
33

33

00:01:46,643  -->  00:01:52,613
So return or enter, we'll say enter
cuz most keyboards have enter.
34

34

00:01:52,613  -->  00:01:55,814
This is something we'll encounter
in this video that Return and
35

35

00:01:55,814  -->  00:01:58,726
Enter are a little be synonymous,
and interchangeable.
36

36

00:01:58,726  -->  00:02:06,021
We will say, Enter, so
Push Enter = Correct.
37

37

00:02:06,021  -->  00:02:08,991
And again I've done some
capitalization mistakes in here.
38

38

00:02:08,991  -->  00:02:12,525
We'll just make this capital L,
doesn't matter at all.
39

39

00:02:12,525  -->  00:02:15,390
Just being a little pedantic,
and on the end a semi colon.
40

40

00:02:15,390  -->  00:02:18,735
So there we go, added two more lines just
to give the player some instructions.
41

41

00:02:18,735  -->  00:02:21,818
And our next process to say,
okay, we need some input and
42

42

00:02:21,818  -->  00:02:24,850
we need to be able to display
what the player has pushed.
43

43

00:02:24,850  -->  00:02:26,615
So I want to show you a couple of things.
44

44

00:02:26,615  -->  00:02:30,277
First of all, I want to tell you our
mission, Ben and I, we have a mission for
45

45

00:02:30,277  -->  00:02:33,100
you which is, wait, wait,
hang on sorry, wrong slide.
46

46

00:02:33,100  -->  00:02:38,567
Okay, our mission for you is, to train
you to be an expert at solving problems.
47

47

00:02:38,567  -->  00:02:39,522
That's what we're up to.
48

48

00:02:39,522  -->  00:02:43,348
It's more than just, hey, follow what
we're doing and you'll kind of pick it up.
49

49

00:02:43,348  -->  00:02:45,237
That's part of what we're doing, but
50

50

00:02:45,237  -->  00:02:47,766
we really want you to think
the way we're thinking.
51

51

00:02:47,766  -->  00:02:52,003
So in this video I'm going to show you a
little bit of the thought process that you
52

52

00:02:52,003  -->  00:02:53,976
could go through to solve a problem.
53

53

00:02:53,976  -->  00:02:56,395
And we'll be practicing it over, and
over, and over through out the course.
54

54

00:02:56,395  -->  00:02:59,139
So by the end of the course you're
an absolute ninja in solving problems.
55

55

00:02:59,139  -->  00:03:00,604
That's our objective here.
56

56

00:03:00,604  -->  00:03:03,067
So what is our current problem?
57

57

00:03:03,067  -->  00:03:06,400
What we're trying to do is,
if the player pushes a certain key,
58

58

00:03:06,400  -->  00:03:08,395
we want to display a certain message.
59

59

00:03:08,395  -->  00:03:09,966
And as we go throughout this section,
60

60

00:03:09,966  -->  00:03:11,891
we'll add a little bit
more complexity to it.
61

61

00:03:11,891  -->  00:03:14,902
But that's the foundation of it, and
that's a foundation of many games.
62

62

00:03:14,902  -->  00:03:16,733
If you want your player to jump,
you push a button.
63

63

00:03:16,733  -->  00:03:19,605
If you want your player to shoot,
you push a button or a key.
64

64

00:03:19,605  -->  00:03:20,853
So that's what we're trying to do.
65

65

00:03:20,853  -->  00:03:24,563
Specifically, push the up arrow,
we want to say, You pushed up.
66

66

00:03:24,563  -->  00:03:26,071
The down arrow, You pushed down.
67

67

00:03:26,071  -->  00:03:29,063
And Enter to say Correct,
to print that to the player.
68

68

00:03:29,063  -->  00:03:30,854
So that's our current problem.
69

69

00:03:30,854  -->  00:03:32,984
And depending upon your knowledge or
your skill,
70

70

00:03:32,984  -->  00:03:36,085
you might already have some pieces
of information to solve the problem.
71

71

00:03:36,085  -->  00:03:39,687
So for example, what we know already
is this has got to do with input.
72

72

00:03:39,687  -->  00:03:41,812
We're looking for
some sort of input for the player.
73

73

00:03:41,812  -->  00:03:45,101
So what we need to do is to take
that little bit of knowledge and
74

74

00:03:45,101  -->  00:03:48,326
then expand on it to find
the right syntax, the right code,
75

75

00:03:48,326  -->  00:03:51,185
the right methods to have
this work within our game.
76

76

00:03:51,185  -->  00:03:55,258
And the place that I'm going to point you
to, now you don't need to understand all
77

77

00:03:55,258  -->  00:03:59,095
of this yet, the place I'm going to
point you to is, unities documents, and
78

78

00:03:59,095  -->  00:04:02,190
these are incredibly useful for
solving all sorts of things.
79

79

00:04:02,190  -->  00:04:06,001
So open up a new browser window and
type in here unity docs, and then,
80

80

00:04:06,001  -->  00:04:08,646
you can see I've already search for
it before.
81

81

00:04:08,646  -->  00:04:10,775
Player input is what I'm searching for
at the moment.
82

82

00:04:10,775  -->  00:04:13,888
I wanna know what the docs
say about player input.
83

83

00:04:13,888  -->  00:04:16,033
See up at the very top,
Unity-Scripting API,
84

84

00:04:16,033  -->  00:04:17,972
that's usually what we're looking for.
85

85

00:04:17,972  -->  00:04:21,227
And it says Input, great,
we'll click on that.
86

86

00:04:21,227  -->  00:04:23,868
And then, I'll also give you a link
to this in the resources, but
87

87

00:04:23,868  -->  00:04:26,568
what we're doing here is,
we're training our problem solving.
88

88

00:04:26,568  -->  00:04:29,110
So I don't want you to just be,
click the link I give you.
89

89

00:04:29,110  -->  00:04:31,478
I want you to actually be searching for
it and finding it, and
90

90

00:04:31,478  -->  00:04:32,644
going through this process.
91

91

00:04:32,644  -->  00:04:35,584
Now within the docs, there'll be a lot
of stuff that I don't expect you
92

92

00:04:35,584  -->  00:04:37,351
to understand or recognize at the moment.
93

93

00:04:37,351  -->  00:04:40,193
But as you go through this course,
things will jump out, and
94

94

00:04:40,193  -->  00:04:43,391
you'll be able to find what you're
looking for a lot more clearly.
95

95

00:04:43,391  -->  00:04:47,323
So within here, within this input,
I'm looking for, under Methods,
96

96

00:04:47,323  -->  00:04:50,609
I'm looking for
something that resembles pushing a key, or
97

97

00:04:50,609  -->  00:04:53,629
pushing a key on the keyboard,
and I see GetKeyDown.
98

98

00:04:53,629  -->  00:04:56,237
Ha, that's what we're looking for,
if I click on that.
99

99

00:04:56,237  -->  00:05:00,663
We see Input.GetKeyDown has to
do with our returns true during
100

100

00:05:00,663  -->  00:05:05,435
the frame the user starts pressing
down the key identified by name.
101

101

00:05:05,435  -->  00:05:08,605
We'll talk about frame in this video
as well, to do with Start and Update.
102

102

00:05:08,605  -->  00:05:12,024
And so we need a particular
key identified by name.
103

103

00:05:12,024  -->  00:05:16,257
The first one we're looking for
in here is going to be the Up key.
104

104

00:05:16,257  -->  00:05:19,228
So, if we have a look for
up key, if we scroll down,
105

105

00:05:19,228  -->  00:05:22,982
within here we can find something
that represents the KeyCode.
106

106

00:05:22,982  -->  00:05:27,360
This is gonna be a whole bunch of
the types of keys that we can choose.
107

107

00:05:27,360  -->  00:05:30,120
So I click on KeyCode,
that's the particular code for
108

108

00:05:30,120  -->  00:05:31,564
the key we're clicking on.
109

109

00:05:31,564  -->  00:05:33,440
So we've got all these
different properties down here.
110

110

00:05:33,440  -->  00:05:34,912
It can be the letters of the alphabet.
111

111

00:05:34,912  -->  00:05:37,340
It can be, different keys on the keyboard.
112

112

00:05:37,340  -->  00:05:41,812
What I'm looking for is some sort of
up arrow, and just there, upArrow.
113

113

00:05:41,812  -->  00:05:46,177
So if I click on upArrow, it's gonna
take me through to the specific code,
114

114

00:05:46,177  -->  00:05:48,482
the specific syntax I'm looking for.
115

115

00:05:48,482  -->  00:05:53,353
And here we go, so you can see,
in the Update method, that's a great clue,
116

116

00:05:53,353  -->  00:05:55,351
we need to put these in Update.
117

117

00:05:55,351  -->  00:05:59,184
It detects when the key, up arrow,
the up arrow key is pressed.
118

118

00:05:59,184  -->  00:06:03,224
And then we have our code here,
and I'm gonna copy that code.
119

119

00:06:03,224  -->  00:06:06,197
So highlight it and copy it, and
take it over into Visual Studio.
120

120

00:06:06,197  -->  00:06:09,569
So if you've just been surfing along and
watching at this point,
121

121

00:06:09,569  -->  00:06:10,686
this is a great time.
122

122

00:06:10,686  -->  00:06:13,405
If you need to pause the video and
find the link, and
123

123

00:06:13,405  -->  00:06:17,526
go to this particular reference,
it's great for you to copy this yourself.
124

124

00:06:17,526  -->  00:06:19,572
So that you're going through this motion.
125

125

00:06:19,572  -->  00:06:24,439
So copy that piece of code back
over into our Visual Studio.
126

126

00:06:24,439  -->  00:06:27,079
I'm gonna paste that under Update, and
127

127

00:06:27,079  -->  00:06:30,659
you can see if input.GetKeyDown
KeyCode.UpArrow.
128

128

00:06:30,659  -->  00:06:34,019
That might all seem like a little bit
gibberish for now, but we'll explain it
129

129

00:06:34,019  -->  00:06:37,654
more, as we go through this section,
you'll understand this better and better.
130

130

00:06:37,654  -->  00:06:42,037
But basically, what this is saying is,
if something is true, and
131

131

00:06:42,037  -->  00:06:46,969
the something in this case is, we wanna
know if someone pushed a key down and
132

132

00:06:46,969  -->  00:06:48,717
was that key the Up Arrow.
133

133

00:06:48,717  -->  00:06:50,155
And if that's the case,
134

134

00:06:50,155  -->  00:06:54,479
then write something to the console
Up arrow key was pressed, fantastic.
135

135

00:06:54,479  -->  00:06:58,099
Now we can leave this as this, but I wanna
leave you with one a little bit of best
136

136

00:06:58,099  -->  00:07:01,517
practice in here, and that's something
to do with our curly brackets.
137

137

00:07:01,517  -->  00:07:04,659
So you can see curly brackets,
like these ones here on Update,
138

138

00:07:04,659  -->  00:07:07,624
these ones here on Start,
whenever we see curly brackets,
139

139

00:07:07,624  -->  00:07:10,905
that means there is a code block
in between those curly brackets.
140

140

00:07:10,905  -->  00:07:15,736
And all those aspects of the code block
are statements that are executed one after
141

141

00:07:15,736  -->  00:07:18,307
another when that code block is executed.
142

142

00:07:18,307  -->  00:07:21,198
If we have this if statement,
it's saying if this thing is true,
143

143

00:07:21,198  -->  00:07:22,526
then do these things in here.
144

144

00:07:22,526  -->  00:07:26,162
If there's only one,
you don't need the curly brackets, but
145

145

00:07:26,162  -->  00:07:30,072
it's good habit to add the curly
brackets in here, one before, and
146

146

00:07:30,072  -->  00:07:32,691
then we'll go down to
the end of Debug.Log.
147

147

00:07:32,691  -->  00:07:35,058
And Enter, and put another one at the end.
148

148

00:07:35,058  -->  00:07:37,153
Visual Studio knows
where it should line up,
149

149

00:07:37,153  -->  00:07:41,011
so that if in the future we wanna put in
another statement, and another statement,
150

150

00:07:41,011  -->  00:07:44,225
and another statement, probably
not go with gobbly gook like that.
151

151

00:07:44,225  -->  00:07:48,346
Then it will Execute them all together and
it won't be confused.
152

152

00:07:48,346  -->  00:07:51,227
If we don't have these curly brackets for
153

153

00:07:51,227  -->  00:07:55,605
our code block, then it can cause
some issues and some errors.
154

154

00:07:55,605  -->  00:07:57,869
And there's a good chance we'll
forget to put them in, and
155

155

00:07:57,869  -->  00:07:59,103
we won't know what is going on.
156

156

00:07:59,103  -->  00:08:00,602
So you can see them here.
157

157

00:08:00,602  -->  00:08:03,309
And just a little note,
while I'm in this conversation,
158

158

00:08:03,309  -->  00:08:06,140
I promise you we'll get to Start and
Update in just a moment.
159

159

00:08:06,140  -->  00:08:10,555
You can see that I've got my open
curly brackets on a new line and
160

160

00:08:10,555  -->  00:08:13,815
my closed curly brackets
on a new line as well.
161

161

00:08:13,815  -->  00:08:15,897
That is a total preference thing.
162

162

00:08:15,897  -->  00:08:16,945
So you could have it,
163

163

00:08:16,945  -->  00:08:20,108
it's totally valid to have this
on the previous line like that.
164

164

00:08:20,108  -->  00:08:23,790
And you could also have this curly
bracket down there on the end.
165

165

00:08:23,790  -->  00:08:27,187
It's not the white space that matters,
so it's not the number of enters.
166

166

00:08:27,187  -->  00:08:31,355
It's not the number of spaces and
tabs that matters to Visual Studio.
167

167

00:08:31,355  -->  00:08:33,697
All that matters is the order
that it finds it in.
168

168

00:08:33,697  -->  00:08:37,143
So after it has this particular,
is this thing true?
169

169

00:08:37,143  -->  00:08:38,449
We want a curly bracket, and
170

170

00:08:38,449  -->  00:08:42,104
then it's gonna do all the things that's
in between these two curly brackets.
171

171

00:08:42,104  -->  00:08:45,311
But from our readability point of view,
which is huge,
172

172

00:08:45,311  -->  00:08:48,191
it's really important that
we can read our code.
173

173

00:08:48,191  -->  00:08:52,052
We wanna have that on a new line,
and that on a new line, so
174

174

00:08:52,052  -->  00:08:55,519
that we can see this is what
is going to be executed.
175

175

00:08:55,519  -->  00:08:58,192
That's my particular preference,
has been particular preference.
176

176

00:08:58,192  -->  00:09:00,662
Yours might be different its totally fine,
different people.
177

177

00:09:00,662  -->  00:09:03,501
It's like, some people like red,
and some people like blue,
178

178

00:09:03,501  -->  00:09:05,763
but that's the particular
way that we do things.
179

179

00:09:05,763  -->  00:09:09,574
Now you might have a look at Update and
Start, and see that they're in a different
180

180

00:09:09,574  -->  00:09:13,234
spot, that's because our template for
this script is being setup that way.
181

181

00:09:13,234  -->  00:09:16,102
That's fine, I'm not going to dig into
changing the template just at the moment.
182

182

00:09:16,102  -->  00:09:18,390
But if you want to be super pedantic,
you might say,
183

183

00:09:18,390  -->  00:09:21,978
well let's just pop that down there, and
in our Start method we'll pop this curly
184

184

00:09:21,978  -->  00:09:24,930
bracket down on a new line as well,
both of them are correct.
185

185

00:09:24,930  -->  00:09:27,043
But we find this a little
bit more readable.
186

186

00:09:27,043  -->  00:09:29,388
Okay, so that's about curly brackets,
187

187

00:09:29,388  -->  00:09:32,478
that's about getting our
input into the system here.
188

188

00:09:32,478  -->  00:09:35,838
Let's push out, let's save this,
and we'll see if that works,
189

189

00:09:35,838  -->  00:09:38,605
then we'll come back and
talk about start and update.
190

190

00:09:38,605  -->  00:09:42,519
So save that over into Unity, push Play.
191

191

00:09:42,519  -->  00:09:44,393
We can see,
we've got our instructions in here.
192

192

00:09:44,393  -->  00:09:45,806
Push up for higher and lower.
193

193

00:09:45,806  -->  00:09:49,434
Now if I push up, then it says,
up key was pressed.
194

194

00:09:49,434  -->  00:09:52,279
Excellent, success, that is working.
195

195

00:09:52,279  -->  00:09:55,315
Okay, so we now have successfully
put in player input.
196

196

00:09:55,315  -->  00:09:57,898
Now let's talk about Start and
Update, and what we've just done.
197

197

00:09:57,898  -->  00:10:01,660
So Start is a method that runs once, and
198

198

00:10:01,660  -->  00:10:06,111
it runs when the script
is first initialized.
199

199

00:10:06,111  -->  00:10:08,142
It says here, use for initialization.
200

200

00:10:08,142  -->  00:10:11,892
So when the game first runs,
our Start method will run, and
201

201

00:10:11,892  -->  00:10:14,148
all these things will happen once.
202

202

00:10:14,148  -->  00:10:16,934
So it's really good for
doing things that are to do with set up.
203

203

00:10:16,934  -->  00:10:19,601
However, if we put our input into Start,
204

204

00:10:19,601  -->  00:10:23,337
then once our very first
starting point has come and gone,
205

205

00:10:23,337  -->  00:10:28,616
we won't be able to access that anymore,
cuz this is only relevant within Start.
206

206

00:10:28,616  -->  00:10:30,493
And Update is telling us to do something.
207

207

00:10:30,493  -->  00:10:34,107
As you can see here in these comments,
we haven't talked about comments, but
208

208

00:10:34,107  -->  00:10:37,969
any time there's these double forward
slashes, anything after that is ignored.
209

209

00:10:37,969  -->  00:10:39,730
It's just a comment for our purpose.
210

210

00:10:39,730  -->  00:10:44,028
So you could write anything you want in
here and it will be ignored by the engine.
211

211

00:10:44,028  -->  00:10:47,256
Okay, so this is saying Update
is called once per frame,
212

212

00:10:47,256  -->  00:10:49,090
that means every single frame.
213

213

00:10:49,090  -->  00:10:50,942
And so
if you've got a super fast computer,
214

214

00:10:50,942  -->  00:10:54,355
your computer might be getting,
I don't know, 100 frames per second.
215

215

00:10:54,355  -->  00:10:56,525
It might be getting 200 frames per second,
216

216

00:10:56,525  -->  00:10:59,483
you might have a slow computer
getting 10 frames per second.
217

217

00:10:59,483  -->  00:11:04,308
So we don't know exactly how many
frames are being calculated per second.
218

218

00:11:04,308  -->  00:11:11,000
But what we do know is that Update will
occur on every single one of those frames.
219

219

00:11:11,000  -->  00:11:16,705
The Update method is where we put anything
that is needed to have instant reaction,
220

220

00:11:16,705  -->  00:11:21,527
such as our input here, we need to be
able and do it at any point in time.
221

221

00:11:21,527  -->  00:11:24,129
Needs to be happening on an ongoing basis,
such as,
222

222

00:11:24,129  -->  00:11:26,269
the quick intro between Start and Update.
223

223

00:11:26,269  -->  00:11:30,779
And also, we now have one if statement,
which we'll talk about alot more in
224

224

00:11:30,779  -->  00:11:35,022
the next video, where we have our
input for, the Up Arrow was pressed.
225

225

00:11:35,022  -->  00:11:36,637
Now I have a challenge for you, and
226

226

00:11:36,637  -->  00:11:39,109
that challenge is to complete
the other scenarios.
227

227

00:11:39,109  -->  00:11:42,642
So if the player pushes Down,
we wanna print something,
228

228

00:11:42,642  -->  00:11:47,057
if the player pushes Enter,
I'll give you a hint here, it's Return,
229

229

00:11:47,057  -->  00:11:49,725
in terms of the keyword
that we need to use.
230

230

00:11:49,725  -->  00:11:53,314
Enter, Unity and
Visual Studio don't know what that means.
231

231

00:11:53,314  -->  00:11:57,415
Even though my keyboard has Enter
written right on it, for some reason,
232

232

00:11:57,415  -->  00:11:58,230
it is Return.
233

233

00:11:58,230  -->  00:12:02,185
I guess back to old school computers used
to say Return, so that is what it is.
234

234

00:12:02,185  -->  00:12:04,507
So pause the video now,
take on that challenge,
235

235

00:12:04,507  -->  00:12:08,371
if you get stuck then have a look at the
Unity documents, we were just looking in.
236

236

00:12:08,371  -->  00:12:13,922
Copy the same flow that we've gone through
here, in terms of the Input.GetKeyDown and
237

237

00:12:13,922  -->  00:12:17,984
the Debug.Log, to do the other
two scenarios Down and Return.
238

238

00:12:17,984  -->  00:12:20,639
And I'll see you back here
when you've got that done.
239

239

00:12:23,478  -->  00:12:25,767
Okay, welcome back.
Hopefully, you took on that challenge and
240

240

00:12:25,767  -->  00:12:28,474
you're not just sitting around waiting for
me to go through it.
241

241

00:12:28,474  -->  00:12:31,059
This is all about how you get better
at these things, is you try and
242

242

00:12:31,059  -->  00:12:32,058
you take it on yourself.
243

243

00:12:32,058  -->  00:12:35,310
So if we start typing this out,
it's good to practice the typing of it,
244

244

00:12:35,310  -->  00:12:37,820
we copied the first one, but
we can type this next one.
245

245

00:12:37,820  -->  00:12:44,683
if(Input.GetKeyDown) okay, and then
what sort of KeyDown are we looking for?
246

246

00:12:44,683  -->  00:12:50,982
Well we need the KeyCode of, I'm gonna
have a guess here and say DownArrow.
247

247

00:12:50,982  -->  00:12:52,791
Now here's another thing
I'm gonna introduce,
248

248

00:12:52,791  -->  00:12:54,261
we're introducing a lot in this video.
249

249

00:12:54,261  -->  00:12:55,726
It's coming thick and fast.
250

250

00:12:55,726  -->  00:12:59,898
Is that Visual Studio has a suspicion
of what we want to write, so
251

251

00:12:59,898  -->  00:13:03,010
it's always trying to auto-complete for
us.
252

252

00:13:03,010  -->  00:13:06,890
So it's trying to say, I'm pretty sure you
wanna to type Down Arrow or Page Down.
253

253

00:13:06,890  -->  00:13:13,103
These are the words I know of that can
come after keycode that have down in them.
254

254

00:13:13,103  -->  00:13:17,710
And then if I type part of it and then I
see that highlighted is the rest of it,
255

255

00:13:17,710  -->  00:13:22,261
I can hit Tab, and it will complete it for
me, so it completed Down Arrow.
256

256

00:13:22,261  -->  00:13:27,624
And then I'm going to skip to the end,
hit Enter,
257

257

00:13:27,624  -->  00:13:33,881
open my curly brackets,
hit Enter again to get a new line,
258

258

00:13:33,881  -->  00:13:39,263
Debug.Log("Down Arrow key was pressed").
259

259

00:13:39,263  -->  00:13:41,707
And we'll change this to
something more meaningful for
260

260

00:13:41,707  -->  00:13:45,251
our game in the near future, but for now,
we're just doing it very functional.
261

261

00:13:45,251  -->  00:13:48,311
You pushed a thing, Down key pressed.
262

262

00:13:48,311  -->  00:13:53,092
Semicolon and
then we will go underneath that and type,
263

263

00:13:53,092  -->  00:13:58,393
if input.GetKeyDown, and
see how it auto completed there?
264

264

00:13:58,393  -->  00:14:02,472
And we have open brackets,
keycode so I can type K and
265

265

00:14:02,472  -->  00:14:05,553
it's already highlighting it for me.
266

266

00:14:05,553  -->  00:14:12,482
So hit Tab, .DownArrow,
we don't want down arrow we want Return.
267

267

00:14:12,482  -->  00:14:16,853
So type, RE, and you can see the rest
of it's available for me there.
268

268

00:14:16,853  -->  00:14:22,472
Hit Space Bar, so I hit Tab, and
then Return, down to the end.
269

269

00:14:22,472  -->  00:14:29,155
Enter open squiggly brackets,
curly brackets, Debug.Log.
270

270

00:14:29,155  -->  00:14:33,958
And we'll say, you hit enter,
so return, I keep getting it,
271

271

00:14:33,958  -->  00:14:37,779
yeah actually,
enter is what is on the keyboard.
272

272

00:14:37,779  -->  00:14:42,329
Even though we need to call it as return,
cuz that's what the key is known as in
273

273

00:14:42,329  -->  00:14:45,276
the system,
the player is gonna know it as enter.
274

274

00:14:45,276  -->  00:14:47,436
And then it's a statement, so
275

275

00:14:47,436  -->  00:14:51,434
all of our statements end in a semi colon,
as you can see.
276

276

00:14:51,434  -->  00:14:54,607
Okay, again, let's hit Save,
back over into Unity.
277

277

00:14:54,607  -->  00:14:58,168
You can see that we've got an option
here that says clear on play, so
278

278

00:14:58,168  -->  00:15:01,938
as soon as I hit Play, it's gonna
clear all of my console information.
279

279

00:15:01,938  -->  00:15:05,093
I could also just click Clear right
now and just clears it all, so
280

280

00:15:05,093  -->  00:15:07,268
that it's nice and clean, and ready to go.
281

281

00:15:07,268  -->  00:15:11,939
I click Play, we'll get
the intra-information, our six lines now.
282

282

00:15:11,939  -->  00:15:15,220
I can hit Up, I can hit Down,
and I can hit Enter, and
283

283

00:15:15,220  -->  00:15:17,392
it logged all of those correctly.
284

284

00:15:17,392  -->  00:15:19,770
Great work, I know that was a lot
to get through in this video.
285

285

00:15:19,770  -->  00:15:24,302
I know there was a lot of, this means
that, and we'll get to it in a minute, but
286

286

00:15:24,302  -->  00:15:27,398
we've now covered Start methods,
Update methods,
287

287

00:15:27,398  -->  00:15:31,476
we talked about our curly brackets,
we talked about how to use input.
288

288

00:15:31,476  -->  00:15:35,284
We've also been looking at the Unity
documents to get some more information
289

289

00:15:35,284  -->  00:15:38,734
on when we're stuck, how do we find
this syntax, and move forward,
290

290

00:15:38,734  -->  00:15:39,817
and solve problems.
291

291

00:15:39,817  -->  00:15:44,463
And we are well on our way to making
a fun little game that we can play where
292

292

00:15:44,463  -->  00:15:47,265
the computer will be guessing our number.
293

293

00:15:47,265  -->  00:15:49,160
So I will see you in the next video.
