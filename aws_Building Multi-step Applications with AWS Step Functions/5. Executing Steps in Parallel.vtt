WEBVTT
1
00:00:01.280 --> 00:00:03.140
[Autogenerated] with computing power becoming more and

2
00:00:03.140 --> 00:00:05.290
more available for modern applications,

3
00:00:05.290 --> 00:00:09.140
speed is no longer a luxury but rather a demand.

4
00:00:09.140 --> 00:00:12.050
Faster running work flows are better and make for better user

5
00:00:12.050 --> 00:00:15.050
experience to improve the performance off the work floor.

6
00:00:15.050 --> 00:00:17.640
We're going to run some steps in Pailin.

7
00:00:17.640 --> 00:00:18.530
In this demo.

8
00:00:18.530 --> 00:00:20.700
We're going to create a workflow that rough steps in

9
00:00:20.700 --> 00:00:24.270
parallel and demonstrate how running steps in parallel can

10
00:00:24.270 --> 00:00:25.680
help us improve our work flows.

11
00:00:25.680 --> 00:00:27.050
Professor performance.

12
00:00:27.050 --> 00:00:30.210
We're going to use the report generation flow that we created in the

13
00:00:30.210 --> 00:00:33.740
previous clips and updated to add one more step.

14
00:00:33.740 --> 00:00:37.530
Some clients want their reports to be stored and accessible for

15
00:00:37.530 --> 00:00:39.920
later use brothers and just emailing them.

16
00:00:39.920 --> 00:00:44.640
Since the email step and the new storage step are independent off each other,

17
00:00:44.640 --> 00:00:48.720
they can be running parallel in order for the workflow to complete faster.

18
00:00:48.720 --> 00:00:52.240
Let's navigate to the step functions co soul and create a new copy off our work.

19
00:00:52.240 --> 00:00:53.720
So we can do that.

20
00:00:53.720 --> 00:00:55.290
Using the copy to New Bottle.

21
00:00:55.290 --> 00:00:58.640
We are going to add a new step with the type parallel,

22
00:00:58.640 --> 00:01:02.000
and the next step for these will be the cleanup step.

23
00:01:02.000 --> 00:01:05.830
The first breath off our pilot state is going to be the email step.

24
00:01:05.830 --> 00:01:12.060
So let's remove it from the main workflow and place it here as the first branch.

25
00:01:12.060 --> 00:01:14.830
Since the steps inside a branch can Onley interact

26
00:01:14.830 --> 00:01:18.310
with other steps inside that branch, we need to remove the catch logic,

27
00:01:18.310 --> 00:01:21.800
since now it cannot point from here to the cleanup step.

28
00:01:21.800 --> 00:01:22.790
But the retrial,

29
00:01:22.790 --> 00:01:26.720
logic and state and also we need to remove the next property and

30
00:01:26.720 --> 00:01:30.070
replace it with an since this step is going to be the first and the

31
00:01:30.070 --> 00:01:37.010
last step inside this branch for the next step,

32
00:01:37.010 --> 00:01:38.340
we're going to add a task,

33
00:01:38.340 --> 00:01:42.620
Steve that points to a lender function that will do the long term storage.

34
00:01:42.620 --> 00:01:47.200
And as an import, it will take the same e mail file into a property called Fire.

35
00:01:47.200 --> 00:01:50.340
Now we need to replace all the next properties that

36
00:01:50.340 --> 00:01:52.020
were pointing to the email steps.

37
00:01:52.020 --> 00:01:54.950
So the point to the email and store step We have two

38
00:01:54.950 --> 00:01:58.330
occurrences where the next step points to the emails that in

39
00:01:58.330 --> 00:02:00.950
the shooter encrypt step where we need to change both female

40
00:02:00.950 --> 00:02:05.970
reports steps to the email and store,

41
00:02:05.970 --> 00:02:09.340
and also in the map email path for encrypted report,

42
00:02:09.340 --> 00:02:10.940
which points to the email step.

43
00:02:10.940 --> 00:02:17.070
Now it is to point to the email and store step.

44
00:02:17.070 --> 00:02:19.250
And when were you first the diagram.

45
00:02:19.250 --> 00:02:22.310
We see that the email snap is not replaced by a block,

46
00:02:22.310 --> 00:02:23.930
which has the email on the story.

47
00:02:23.930 --> 00:02:24.760
Step inside.

48
00:02:24.760 --> 00:02:28.340
This is an indicator that these steps will run in parallel.

49
00:02:28.340 --> 00:02:31.500
Let's finish creating the work slow, and then we can execute it.

50
00:02:31.500 --> 00:02:34.470
What's the workflow is created that start a new execution using

51
00:02:34.470 --> 00:02:39.270
the same payload as we used to before the email on the long term

52
00:02:39.270 --> 00:02:43.010
story step will run in parallel, which saves us sometimes.

53
00:02:43.010 --> 00:02:47.120
So we don't have to wait for both steps, which will make our workflow faster.

54
00:02:47.120 --> 00:02:49.760
It's important to know that the output of apparently

55
00:02:49.760 --> 00:02:52.340
step is not the same as other steps.

56
00:02:52.340 --> 00:02:54.930
The violence step will output in a way,

57
00:02:54.930 --> 00:02:59.000
with the output off all steps in order as they are defined in the world.

58
00:02:59.000 --> 00:03:00.600
For definition.

59
00:03:00.600 --> 00:03:03.340
If we look at the output off the poor Eliza,

60
00:03:03.340 --> 00:03:06.190
the doctor will reside in the email in store output,

61
00:03:06.190 --> 00:03:08.180
and as we can see, it's an array.

62
00:03:08.180 --> 00:03:09.960
The ray has two values.

63
00:03:09.960 --> 00:03:15.140
One for the males that on one for the storage step and if we had more steps,

64
00:03:15.140 --> 00:03:17.110
very would contain more values.

65
00:03:17.110 --> 00:03:20.340
That's all for running workflow steps in parallel.

66
00:03:20.340 --> 00:03:22.850
This is a very powerful feature that can help us

67
00:03:22.850 --> 00:03:24.680
reduce work for on time by a lot.

68
00:03:24.680 --> 00:03:25.210
If you rest,

69
00:03:25.210 --> 00:03:29.180
that's then do not require input from other steps to complete in parallel.

70
00:03:29.180 --> 00:03:30.900
To achieve the best performance,

71
00:03:30.900 --> 00:03:39.000
you should always look for steps that can run independently off others and group them into parallel stance.

