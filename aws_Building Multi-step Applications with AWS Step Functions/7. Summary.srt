1
00:00:01,740 --> 00:00:04,720
[Autogenerated] throughout this module we cover how to create real life

2
00:00:04,720 --> 00:00:07,840
scenario workforce with many steps and decisions.

3
00:00:07,840 --> 00:00:11,240
We learn how to best perimeter's between states,

4
00:00:11,240 --> 00:00:15,590
how to parse the input and output and how to use a past A to

5
00:00:15,590 --> 00:00:19,470
transform the state machine output so we can offer I different

6
00:00:19,470 --> 00:00:21,750
variables based on different decisions.

7
00:00:21,750 --> 00:00:24,540
Even the best code sometimes fails.

8
00:00:24,540 --> 00:00:28,130
We learn howto add error handling to our steps so we can handle

9
00:00:28,130 --> 00:00:30,880
cold failures and make decisions based on them.

10
00:00:30,880 --> 00:00:34,680
We also looked into adding retry logic to our steps so we could

11
00:00:34,680 --> 00:00:37,130
retry tasks that can benefit from a retrial.

12
00:00:37,130 --> 00:00:38,780
Aji, for example,

13
00:00:38,780 --> 00:00:43,240
timeout errors or network airs workflow are no good if we don't

14
00:00:43,240 --> 00:00:45,440
have an appropriate way off starting them.

15
00:00:45,440 --> 00:00:46,740
We looked at different ways.

16
00:00:46,740 --> 00:00:50,460
We could trigger our work flows what through a step by step on how to

17
00:00:50,460 --> 00:00:54,570
use an AP I gateway to trigger our work clothes and allow easy FBI

18
00:00:54,570 --> 00:00:57,680
access that can be integrated in any application.

19
00:00:57,680 --> 00:00:59,620
We learn how to optimize our work,

20
00:00:59,620 --> 00:01:05,360
slows by identifying steps that are independent and run them in parallel so our

21
00:01:05,360 --> 00:01:09,500
work flows can run with optimum performance running cold When a serverless

22
00:01:09,500 --> 00:01:13,040
function might not always be possible or even desire.

23
00:01:13,040 --> 00:01:17,260
We learned how to use activities to run tasks somewhere else on our own

24
00:01:17,260 --> 00:01:19,940
environment and connect them to our work clothes,

25
00:01:19,940 --> 00:01:23,700
which would open up A lot of possibilities for integrating in

26
00:01:23,700 --> 00:01:25,650
house service is with step function work,

27
00:01:25,650 --> 00:01:26,440
folks.

28
00:01:26,440 --> 00:01:30,360
I hope this has given you an understanding on how to build step function works,

29
00:01:30,360 --> 00:01:35,410
those that have multiple steps with input and output parsing error handling,

30
00:01:35,410 --> 00:01:39,190
retrial logic and with steps that can run on our own environment.

31
00:01:39,190 --> 00:01:42,460
You can start by putting his knowledge to use by creating your own

32
00:01:42,460 --> 00:01:48,000
work flows with different steps and activities. Thank you for watching.

