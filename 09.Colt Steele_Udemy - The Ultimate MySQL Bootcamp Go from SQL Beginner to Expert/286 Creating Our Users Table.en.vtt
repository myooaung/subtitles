WEBVTT
1
00:00:00.270 --> 00:00:07.480
OK so in the last video we got our Noad file javascript communicating with our minuscule database of

2
00:00:07.660 --> 00:00:12.810
being very very simple communication we're not actually interacting with tables but this is secret code

3
00:00:12.810 --> 00:00:13.670
that we're running.

4
00:00:13.890 --> 00:00:17.640
So the next step of course is getting it to interact with tables.

5
00:00:17.640 --> 00:00:22.980
So we're going to in this video we're going to create our table we're going to define our schema create

6
00:00:22.980 --> 00:00:30.500
our table in my as well separate from javascript and then we're going to try and query it from here.

7
00:00:30.510 --> 00:00:35.850
So basically we're going to go into my ask you Al Qaeda table let's add two or three users and then

8
00:00:35.940 --> 00:00:38.410
we're going to see if we can fetch them from node.

9
00:00:38.640 --> 00:00:39.770
But before we get there.

10
00:00:39.930 --> 00:00:45.060
One thing I want to address very briefly is when we're looking at this code you know this connection

11
00:00:45.060 --> 00:00:51.210
like queery function error results fields or this code appear far connection equals blah blah blah blah

12
00:00:51.210 --> 00:00:51.870
blah.

13
00:00:52.080 --> 00:00:55.700
You might be wondering how did you know what code to type.

14
00:00:55.740 --> 00:00:56.900
Where did I find this.

15
00:00:56.910 --> 00:00:59.230
It's not in the Maia's QOL documentation.

16
00:00:59.250 --> 00:01:01.210
This is not an official Maya.

17
00:01:01.210 --> 00:01:10.080
Q Well sanctioned library basically the way that it works is that random developers who teams developers

18
00:01:10.140 --> 00:01:17.280
solo developers go and create these libraries that connect my as well to other languages.

19
00:01:17.430 --> 00:01:19.470
Some of them are more supportive than others.

20
00:01:19.470 --> 00:01:25.290
Like I said some of them are just one person but they usually have their own documentation so the documentation

21
00:01:25.290 --> 00:01:29.120
for this is on get home.

22
00:01:29.180 --> 00:01:31.060
It's good how about com slash my s.

23
00:01:31.080 --> 00:01:33.370
Q LJ s slash my ask.

24
00:01:33.420 --> 00:01:35.500
Well there goes my fridge again.

25
00:01:35.910 --> 00:01:37.210
Very active today.

26
00:01:37.650 --> 00:01:42.750
But if we scroll down you can see well there's a lot of stuff to take a look at but it basically talks

27
00:01:42.750 --> 00:01:48.550
about installing it talks about setting up your connection talks.

28
00:01:48.630 --> 00:01:52.900
Then if you keep going down about once you've established a connection what can you do.

29
00:01:52.920 --> 00:01:54.870
Well here's a very simple query.

30
00:01:55.080 --> 00:01:59.160
We saw something very similar although this is just selecting one.

31
00:01:59.310 --> 00:02:03.180
We did something a little more complicated but if we keep going.

32
00:02:03.180 --> 00:02:09.840
Eventually you'll see we get things about queery which is where we're going just a little bit.

33
00:02:09.930 --> 00:02:13.680
But basically I want to show you there is a source of documentation.

34
00:02:13.680 --> 00:02:15.780
So here we talked about some queries how it works.

35
00:02:15.810 --> 00:02:20.430
We'll come we'll come back to this in a bit but I'm not just pulling this stuff from nowhere and I certainly

36
00:02:20.700 --> 00:02:21.610
don't have it memorized.

37
00:02:21.600 --> 00:02:23.730
I'm not just you know I don't just know how it works.

38
00:02:23.730 --> 00:02:27.030
I'd say the approach is more OK I know what I need to build.

39
00:02:27.030 --> 00:02:28.980
I'm going to be building it with Ruby.

40
00:02:29.060 --> 00:02:30.680
Now let me find the ruby.

41
00:02:30.750 --> 00:02:35.260
My SUV driver or a gem which is what they're called instead of packages in Ruby.

42
00:02:35.280 --> 00:02:36.260
I may find in my ask.

43
00:02:36.280 --> 00:02:38.210
Well Jim Zera connector.

44
00:02:38.220 --> 00:02:42.450
And then you find and then you look through the documentation and you figure out how it works.

45
00:02:42.550 --> 00:02:43.930
OK how do I connect first.

46
00:02:43.980 --> 00:02:45.320
That's the first thing you need to do.

47
00:02:45.690 --> 00:02:47.640
And there's not one syntax.

48
00:02:47.640 --> 00:02:49.440
It varies from language to language.

49
00:02:49.440 --> 00:02:50.840
Somebody made a decision.

50
00:02:50.850 --> 00:02:57.210
So if we go back to our slides here you know somebody made the decision to call this method queery which

51
00:02:57.480 --> 00:03:03.870
I mean it makes sense to call it queery but it could have also been called Make query or perform query

52
00:03:04.890 --> 00:03:07.180
or when creating the connection.

53
00:03:07.200 --> 00:03:09.120
May I ask you all that create connection.

54
00:03:09.210 --> 00:03:14.210
I don't know if someone could have called this this could be database name instead of database but somebody

55
00:03:14.220 --> 00:03:15.830
is making those calls.

56
00:03:16.170 --> 00:03:21.060
And I'm not disagreeing with the way this is named in any way but I'm saying you have to play by the

57
00:03:21.060 --> 00:03:22.810
rules of whoever defined this.

58
00:03:22.860 --> 00:03:27.330
Just like when we're working with my ask you Will we have to use them I ask you all syntax.

59
00:03:27.330 --> 00:03:30.480
There is a specific syntax we have to learn.

60
00:03:30.480 --> 00:03:33.450
Same thing for using these libraries.

61
00:03:33.600 --> 00:03:36.610
So it's not something that comes standard with javascript or with code.

62
00:03:36.810 --> 00:03:38.590
It's something we had to plug in ourselves.

63
00:03:38.670 --> 00:03:41.970
And that means we need to go do the work to figure out how to use it.

64
00:03:42.330 --> 00:03:42.940
OK.

65
00:03:43.170 --> 00:03:46.370
So next up we're going to create our schema.

66
00:03:47.340 --> 00:03:48.900
And it's pretty simple.

67
00:03:48.900 --> 00:03:51.350
All that we need are two fields.

68
00:03:51.450 --> 00:03:57.780
So we'll run create table users will do email and a pretty standard length is 255.

69
00:03:57.780 --> 00:04:05.550
So not that an email is that long but for fields in general textfield people will do Vardar to 5:5 and

70
00:04:05.610 --> 00:04:07.240
we'll make it a primary key.

71
00:04:07.290 --> 00:04:08.860
Why do we want to do that.

72
00:04:08.880 --> 00:04:12.880
Basically we don't want someone to be able to sign up twice with the same email address.

73
00:04:12.900 --> 00:04:18.960
Also it gives us a couple more options for exercises so it's a good thing to do and it's good practice.

74
00:04:19.020 --> 00:04:24.280
This is probably the first time we've seen primary key without autoincrement then we've also got created

75
00:04:24.310 --> 00:04:26.960
out and that's going to be a time stamp.

76
00:04:27.000 --> 00:04:28.040
It could be a date time.

77
00:04:28.060 --> 00:04:33.410
But remember back to that video we did about the difference time stamp is smaller.

78
00:04:33.420 --> 00:04:40.220
It takes up less space and memory and it works just as well except for really far away data in the past.

79
00:04:40.260 --> 00:04:46.240
And in the future 1970 up until when he 38 I think it is is the current range.

80
00:04:46.410 --> 00:04:50.470
We're not going to worry about that because we're dealing with current dates.

81
00:04:50.490 --> 00:04:54.940
You know we're creating a mailing list app or a waitlist app people are setting up now so we don't you

82
00:04:54.970 --> 00:05:01.730
know nobody's entering a date from 650 or something then we're setting the default value to be now so

83
00:05:01.730 --> 00:05:05.800
that when someone signs up it will automatically be filled in as the current time.

84
00:05:06.020 --> 00:05:11.510
But don't forget when we're working with F.A. we are going to insert like 500 users into this table

85
00:05:11.810 --> 00:05:18.740
and we are going to provide a created at a time so that we don't get you know 500 users with the exact

86
00:05:18.740 --> 00:05:19.420
same time.

87
00:05:19.520 --> 00:05:23.750
So we want this default value to be there but we'll also be able to overwrite it manually if we want

88
00:05:23.750 --> 00:05:24.050
to.

89
00:05:24.230 --> 00:05:30.560
OK so let's hop over to cloud 9 and the first thing I'm going to do close this down is just make a new

90
00:05:30.560 --> 00:05:31.880
file.

91
00:05:32.060 --> 00:05:34.820
I'm just going to call it schema data as well.

92
00:05:34.820 --> 00:05:38.150
And the only reason I'm doing that is just to have a record of this.

93
00:05:38.150 --> 00:05:41.390
You could just open up my ask out and start typing.

94
00:05:41.420 --> 00:05:42.260
Create table.

95
00:05:42.400 --> 00:05:43.350
I'm going to do it in here.

96
00:05:43.490 --> 00:05:46.120
Create table users.

97
00:05:46.670 --> 00:05:47.090
OK.

98
00:05:47.330 --> 00:05:57.950
So we wanted email and then we wanted create it at an email is Vardar to 5:5 primary key and created

99
00:05:57.950 --> 00:06:05.810
at is time stamp would work just fine if you left a date time and we want default to be now or we could

100
00:06:05.810 --> 00:06:07.890
also say current time stamp.

101
00:06:08.420 --> 00:06:11.990
OK just like that and we'll save.

102
00:06:12.770 --> 00:06:15.100
We'll hop down to our terminal down here.

103
00:06:15.130 --> 00:06:18.040
I'm in the my ask you well CLIA.

104
00:06:18.320 --> 00:06:25.190
And I'm just going to select database right now and see what we're working with to in the JOIN US database.

105
00:06:25.190 --> 00:06:26.870
So we made a new empty database.

106
00:06:26.870 --> 00:06:33.090
If we look at you know show tables there's nothing here that's correct.

107
00:06:33.290 --> 00:06:34.720
So we're going to create this.

108
00:06:34.870 --> 00:06:40.580
You can either copy and pasted in or you can run the file which I'll do just because it's been a while

109
00:06:41.150 --> 00:06:43.730
source schema data as well.

110
00:06:44.540 --> 00:06:45.230
OK.

111
00:06:45.410 --> 00:06:47.360
Now let's see if it works.

112
00:06:47.420 --> 00:06:49.340
Show tables this time.

113
00:06:49.340 --> 00:06:54.560
Now we have a users table and we can describe it perfect.
