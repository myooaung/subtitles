1
00:00:00,270 --> 00:00:03,290
OK moving on to the next challenge with the same data.

2
00:00:03,450 --> 00:00:08,180
Something a little new and frankly refreshing to see such a short table.

3
00:00:08,190 --> 00:00:12,760
So what we're doing here is identifying the unreviewed Series in our database.

4
00:00:12,780 --> 00:00:17,560
So there are a couple that nobody has written reviews for for whatever reason.

5
00:00:17,760 --> 00:00:20,780
I haven't seen either of these shows really I've seen Malcolm in the middle.

6
00:00:20,820 --> 00:00:26,180
Maybe once or twice as a kid but I don't feel like I can review it and apparently nobody else in our

7
00:00:26,180 --> 00:00:27,110
app felt that way.

8
00:00:27,210 --> 00:00:29,800
So we have to unreviewed shows.

9
00:00:29,940 --> 00:00:35,820
And the point is not to cheat and to just you know use this information to find it but to actually find

10
00:00:35,820 --> 00:00:39,030
it based off of the data we have in our database dynamically.

11
00:00:39,120 --> 00:00:39,960
So how do we write.

12
00:00:39,960 --> 00:00:45,240
It's going to be enjoying what type of joint Do we need to write where we can see what series have not

13
00:00:45,240 --> 00:00:46,410
been reviewed.

14
00:00:47,040 --> 00:00:48,560
OK well let's give it a shot.

15
00:00:48,600 --> 00:00:54,480
We'll hop over to cloud nine and we'll start with our handy dandy comments.

16
00:00:54,540 --> 00:01:01,370
We are on Challenge five and this one is unreviewed series.

17
00:01:01,380 --> 00:01:05,750
OK so what tables are we going to need to join here.

18
00:01:06,070 --> 00:01:15,430
So we've got if we go all the way back here we've got reviewers who got series and reviews and we don't

19
00:01:15,430 --> 00:01:20,320
need to care about reviewers we don't care about names of who is reviewing things.

20
00:01:20,380 --> 00:01:28,460
What we care about is overlap or lack of overlap between serious TV shows and reviews.

21
00:01:28,600 --> 00:01:40,210
So let's start with a simple drawing select and we'll do star from series and we can just start with

22
00:01:40,750 --> 00:01:44,120
that nice and simple doesn't tell us anything.

23
00:01:44,230 --> 00:01:46,460
We have no idea which ones have been reviewed or not.

24
00:01:46,490 --> 00:01:48,570
So we need to join it with the reviews.

25
00:01:48,680 --> 00:01:52,400
That's going to be joyn reviews.

26
00:01:53,540 --> 00:02:09,710
On and this is going to be our typical join So series that ID equals revues dot series ID and make this

27
00:02:09,980 --> 00:02:11,070
explicitly enter.

28
00:02:11,080 --> 00:02:12,780
Just so we're clear there.

29
00:02:13,470 --> 00:02:17,520
And when we do this we get a lot right.

30
00:02:17,660 --> 00:02:22,660
We see Archer with an idea of one that's been reviewed.

31
00:02:22,700 --> 00:02:27,630
Eight point seven point five eight point five seven point seven but there's a problem here which is

32
00:02:27,630 --> 00:02:28,690
it's not doing what we want.

33
00:02:28,700 --> 00:02:32,780
We're not even we're not really close to what we want.

34
00:02:32,780 --> 00:02:37,030
In fact we're ignoring the data we want because this is an inner join.

35
00:02:37,550 --> 00:02:43,620
So this is only finding the exact intersection between reviews and series.

36
00:02:44,060 --> 00:02:50,270
So wherever they overlap is what we're seeing but we also want to identify where they don't overlap

37
00:02:50,300 --> 00:02:54,730
because that tells us that there's not a review for a series.

38
00:02:54,770 --> 00:02:57,450
So what we want to use is a left join.

39
00:02:57,980 --> 00:02:59,770
So hopefully that makes sense why.

40
00:02:59,780 --> 00:03:05,960
Because on the left if we have our series right we have all the series some of which have matches some

41
00:03:05,960 --> 00:03:06,840
of which don't.

42
00:03:06,920 --> 00:03:08,620
And we do a left join.

43
00:03:08,990 --> 00:03:14,270
It's going to take everything from the left including the ones that have no reviews and it's still going

44
00:03:14,270 --> 00:03:15,470
to stick them in the join table.

45
00:03:15,590 --> 00:03:17,930
But it's just going to fill their values with no.

46
00:03:18,050 --> 00:03:19,880
So we'll be able to identify that.

47
00:03:19,910 --> 00:03:21,380
So if we change it to left join

48
00:03:24,580 --> 00:03:29,310
and we scroll through some of this you'll see somewhere.

49
00:03:29,350 --> 00:03:37,460
I've got archery with all these reviews over here we keep going down here we go Mark in the middle.

50
00:03:37,470 --> 00:03:40,740
Malcolm in the middle has NO NO NO.

51
00:03:40,890 --> 00:03:45,720
Because there are no reviews to match it with but because we did a left join we still get Malcolm in

52
00:03:45,720 --> 00:03:52,430
the middle and pushing dados which is also pushing data as he's pushing daisies which is no no no no

53
00:03:52,470 --> 00:03:53,200
as well.

54
00:03:53,370 --> 00:04:00,240
So we can use that to our advantage because wherever we see no means that there are no reviews.

55
00:04:00,780 --> 00:04:04,720
So what we want to do first let's whittle it down a little bit.

56
00:04:04,800 --> 00:04:13,640
What we're looking for at the end is just title but let's start by just doing title and rating.

57
00:04:13,800 --> 00:04:16,390
Let's do that.

58
00:04:16,400 --> 00:04:18,090
So it's a little easier to see.

59
00:04:18,490 --> 00:04:19,390
OK.

60
00:04:19,790 --> 00:04:25,070
So now what we want to do is only work with the data or there is no rating.

61
00:04:25,700 --> 00:04:27,810
So that's actually quite simple.

62
00:04:27,920 --> 00:04:35,930
We need to do is use a WHERE and then we can pick rating for example equals and we can say equals no.

63
00:04:36,380 --> 00:04:41,380
Because that's problematic remember what we need to do is do is know.

64
00:04:41,480 --> 00:04:43,340
Just like that.

65
00:04:43,340 --> 00:04:50,690
So let's try this now and you'll see we only end up with these two title and rating and we don't have

66
00:04:50,690 --> 00:04:51,320
to do rating.

67
00:04:51,320 --> 00:04:54,330
By the way because there are other fields that are no.

68
00:04:54,620 --> 00:04:55,880
If we go back to Star

69
00:04:58,820 --> 00:05:00,980
there are quite a few things that are no.

70
00:05:01,730 --> 00:05:10,520
We could have done Id although this is reviews that ID we could have done rading series ID or review

71
00:05:10,520 --> 00:05:16,220
ID a reviewer ID but it doesn't matter which one we pick in this case.

72
00:05:16,310 --> 00:05:19,440
So let's go back and all we actually want to do is select the title.

73
00:05:19,580 --> 00:05:20,740
That's all we need here.

74
00:05:22,390 --> 00:05:24,490
Pace set in OK.

75
00:05:24,720 --> 00:05:26,910
Only thing that's missing is the alias.

76
00:05:26,910 --> 00:05:30,810
So there's like title as unreviewed series.

77
00:05:30,810 --> 00:05:31,790
Copy that in.

78
00:05:32,250 --> 00:05:34,030
And it works OK.

79
00:05:34,170 --> 00:05:36,990
So the key thing here was that we use a left join.

80
00:05:37,230 --> 00:05:39,380
We wanted to highlight those discrepancies.

81
00:05:39,540 --> 00:05:45,780
This is the this is a use case for a left join where you want to see where there isn't overlap.

82
00:05:45,810 --> 00:05:50,550
So hopefully that that helps illustrate a bit more of the difference between inner and life joints because

83
00:05:50,550 --> 00:05:56,420
if we had only done an inner join here we wouldn't get the result we want we wouldn't have any nulls.

84
00:05:56,490 --> 00:05:58,750
So this wouldn't select anything at all.
