WEBVTT
1
00:00:00.090 --> 00:00:04.760
So I know that was a very brief introduction to two lines of node of Javascript.

2
00:00:04.890 --> 00:00:07.280
But we're now moving on to more important things.

3
00:00:07.280 --> 00:00:12.760
Things that are relevant to my out and the first thing we'll do is talk about a package called faker.

4
00:00:13.170 --> 00:00:15.570
So the first question you might have is what is a package.

5
00:00:15.690 --> 00:00:21.200
And basically Noad comes with thousands and thousands of libraries.

6
00:00:21.240 --> 00:00:26.820
You might have heard them called their packages or modules code that other people have written that

7
00:00:26.820 --> 00:00:33.300
we can include instead of for application really simply all we have to do is say install faker which

8
00:00:33.300 --> 00:00:38.070
is a package we're going to use but we'll use another package later called Express or we'll use one

9
00:00:38.070 --> 00:00:39.210
called My as well.

10
00:00:39.210 --> 00:00:44.600
And all I have to say is install my Eskew up install F.A. and there are thousands of them out there

11
00:00:44.610 --> 00:00:50.220
like I said and that's one of the biggest strengths of note is that it has a huge library of all these

12
00:00:50.220 --> 00:00:52.980
packages that you don't have to do everything yourself.

13
00:00:53.070 --> 00:00:57.080
You can go and get some help by including somebody else's package.

14
00:00:57.480 --> 00:01:02.750
So the way we do it is through something called and PM node package manager.

15
00:01:03.330 --> 00:01:07.440
And to install faker which don't worry I'll explain what failure is.

16
00:01:07.710 --> 00:01:11.600
This is all we have to type into our terminal NPM install failure.

17
00:01:11.970 --> 00:01:15.020
But before we go there let me show you what F.A. is.

18
00:01:15.090 --> 00:01:19.560
So faker is a package that there's a bunch of different versions of it.

19
00:01:19.710 --> 00:01:25.410
I think the original one was for Ruby not positive but there's faker kind of implementations for other

20
00:01:25.410 --> 00:01:32.340
languages including javascript and what it does is it really helps us streamline the process of generating

21
00:01:32.340 --> 00:01:33.680
fake data.

22
00:01:34.110 --> 00:01:39.300
So we're going to use it because we want to start off with a bunch of fake data in our database.

23
00:01:39.300 --> 00:01:44.310
I don't know if you noticed I had 518 519 users in my database.

24
00:01:44.400 --> 00:01:48.090
I did not enter those manually and they are they're all unique.

25
00:01:48.090 --> 00:01:49.930
They have a different unique e-mail address.

26
00:01:49.930 --> 00:01:51.740
I did not generate those myself.

27
00:01:52.020 --> 00:01:54.050
So we're going to use failure to do that.

28
00:01:54.300 --> 00:01:55.620
So fakers very simple.

29
00:01:55.620 --> 00:02:03.990
I can say things like faker dot address dot County and it will give me a random county name and it has

30
00:02:03.990 --> 00:02:04.920
hundreds of them.

31
00:02:05.340 --> 00:02:12.670
Or I could say faker did but say name dot job descriptor and it will give me a random job descriptor.

32
00:02:12.750 --> 00:02:14.160
So there's tons of things in here.

33
00:02:14.160 --> 00:02:23.460
Phone numbers random numbers file names collar's avatars emails usernames domains passwords like so

34
00:02:23.460 --> 00:02:28.710
many things that we could pick from credit card fake credit card numbers account numbers you get it

35
00:02:28.950 --> 00:02:29.550
hopefully.

36
00:02:29.580 --> 00:02:30.660
So back in cloud nine.

37
00:02:30.660 --> 00:02:35.310
Now what I'm going to do is actually empty this file entirely.

38
00:02:35.520 --> 00:02:37.840
Yes you can make a new file if you'd like.

39
00:02:37.890 --> 00:02:41.350
And now I'm going to install faker so we can use it.

40
00:02:41.400 --> 00:02:46.340
So this video I probably could've done a better job explaining this is about two things.

41
00:02:46.350 --> 00:02:47.570
One faker.

42
00:02:47.640 --> 00:02:51.500
But on a higher level packages in general and how you use them.

43
00:02:51.510 --> 00:02:58.050
So this is the workflow for using a package type NPM install the name of the package and hit enter you

44
00:02:58.090 --> 00:03:04.230
know take a second and that on it own installs a package you'll notice I have a new folder here called

45
00:03:04.230 --> 00:03:10.180
node modules inside there is all the F.A. code all this stuff.

46
00:03:10.340 --> 00:03:11.370
So all of that is here now.

47
00:03:11.390 --> 00:03:12.610
I just had to type a single line.

48
00:03:12.620 --> 00:03:13.960
It's pretty awesome.

49
00:03:14.750 --> 00:03:15.720
Now in my app.

50
00:03:15.790 --> 00:03:16.160
Yes.

51
00:03:16.190 --> 00:03:18.300
I can't just start using it immediately.

52
00:03:18.300 --> 00:03:23.390
I can't just say fake or dot e-mail or something.

53
00:03:23.660 --> 00:03:29.360
I first have to tell this file I want to use fake or I have to include it or import it.

54
00:03:29.480 --> 00:03:31.130
And it's very easy.

55
00:03:31.130 --> 00:03:36.980
I'm just going to say Fard faker equals require faker.

56
00:03:37.460 --> 00:03:44.110
So this right here is a variable I can call this anything I could say my faker.

57
00:03:44.660 --> 00:03:46.510
I'm going to call it faker standard.

58
00:03:46.700 --> 00:03:49.130
And this is the part that I can't change.

59
00:03:49.130 --> 00:03:50.560
This has to be faker.

60
00:03:50.570 --> 00:03:56.600
So this is going to go find a package that I've installed in node modules with the name F.A. and then

61
00:03:56.600 --> 00:03:58.570
save it into this variable.

62
00:03:58.580 --> 00:04:05.160
So now whenever I use the word faker referring to this variable I actually am referring to the package.

63
00:04:05.480 --> 00:04:12.590
So then we can do things with it so we could do something like this faker dumb Internet email and that

64
00:04:12.590 --> 00:04:19.120
will generate things like this or this or this or 23.

65
00:04:19.220 --> 00:04:25.270
Simone Walsh Aubree underscore dot tree numbers we've got hot male and female and Yahoo.

66
00:04:25.400 --> 00:04:30.680
So this would be a pain if we were doing this ourselves to come up with 500 individual emails.

67
00:04:31.040 --> 00:04:34.020
And the other thing I'll show you is we're going to use it for dates.

68
00:04:34.070 --> 00:04:36.120
So I'll be able to say fake or not date.

69
00:04:36.290 --> 00:04:39.120
And this is important past.

70
00:04:39.300 --> 00:04:41.110
We don't want to have any future dates.

71
00:04:41.150 --> 00:04:46.460
Basically we want to start with 500 users in our database who have signed up at some point in the past.

72
00:04:46.830 --> 00:04:49.230
So it will generate things like this.

73
00:04:49.280 --> 00:04:51.570
So we also don't want to have to do that ourselves.

74
00:04:51.980 --> 00:04:57.940
So let's start with faker Internet email.

75
00:04:58.690 --> 00:05:04.940
I mean in parentheses at the end sort of like might as well it's a function we're telling it to execute.

76
00:05:04.940 --> 00:05:12.420
If I just do it on its own and I run the file now which is actually yes nothing happens.

77
00:05:12.510 --> 00:05:13.300
Well it's a lie.

78
00:05:13.320 --> 00:05:14.410
It does happen.

79
00:05:14.550 --> 00:05:17.400
This runs but we don't see the result.

80
00:05:17.550 --> 00:05:23.610
And that's because we need to print it so we can do cancel that log like this.

81
00:05:23.610 --> 00:05:24.910
There we go.

82
00:05:24.910 --> 00:05:29.460
Now if I run it again I see OK we get a new e-mail.

83
00:05:29.460 --> 00:05:33.730
Jared Lee lovely Trevor whatever.

84
00:05:33.930 --> 00:05:36.330
So we're getting these fake e-mails.

85
00:05:36.420 --> 00:05:43.230
We're going to use that along with you know copy this and do faker.

86
00:05:43.700 --> 00:05:48.690
Dot dot dot past which is the other thing I showed you.

87
00:05:48.830 --> 00:05:54.040
Going to use those two to generate a 500 user.

88
00:05:54.040 --> 00:05:55.720
So basically this is one user.

89
00:05:55.990 --> 00:06:03.940
So it's kind of fun to play around a faker bit could do you know dot hacker dot abbreviation or finance

90
00:06:04.000 --> 00:06:07.080
dot currency symbol or bitcoin address.

91
00:06:07.180 --> 00:06:19.750
Let's do address and then city so we can do get rid of these two for now Council log faker address that

92
00:06:19.780 --> 00:06:21.500
city.

93
00:06:21.510 --> 00:06:24.840
If we save and run that there we go.

94
00:06:24.840 --> 00:06:28.990
Roberto ville and if we try it again you get something different new.

95
00:06:29.010 --> 00:06:30.810
Alexandra are for it.

96
00:06:31.140 --> 00:06:33.450
So that's the basics of faker.

97
00:06:33.510 --> 00:06:38.790
I will show you if so if you already know javascript skip this section but I just want to show a bit

98
00:06:38.790 --> 00:06:45.690
more sort of the extended version of crash course in node how we can string things together and make

99
00:06:45.690 --> 00:06:47.710
more complex logic.

100
00:06:47.730 --> 00:06:55.360
So let's say I wanted to generate a complete address so I wanted you know a number and the street and

101
00:06:55.360 --> 00:06:55.920
the city.

102
00:06:55.920 --> 00:06:59.800
Let's start with those three so faker has ways of doing that.

103
00:06:59.820 --> 00:07:03.630
You've got what do we have street name and street address.

104
00:07:03.720 --> 00:07:16.460
So let's start with that got faker at address dot street address start there and run this again.

105
00:07:16.900 --> 00:07:17.510
OK.

106
00:07:17.750 --> 00:07:20.580
So there we go that's working.

107
00:07:20.900 --> 00:07:23.130
Then we've got the city right.

108
00:07:23.450 --> 00:07:27.410
And then let's say we want to do a state as well for working in the U.S.

109
00:07:30.070 --> 00:07:30.670
perfect.

110
00:07:30.670 --> 00:07:32.890
So here is the complete address right now.

111
00:07:32.890 --> 00:07:41.010
Every time I say one want three different addresses I would have to copy these lines like that which

112
00:07:41.070 --> 00:07:42.390
is not the end of the world right.

113
00:07:42.420 --> 00:07:43.780
We can copy lines.

114
00:07:44.310 --> 00:07:46.490
But there's a much better way of doing this.

115
00:07:46.500 --> 00:07:53.010
So what we could do instead is create what's known as a function and I'll just call this generate address.

116
00:07:53.190 --> 00:08:00.570
Think of this as a way of reusing our code and the syntax looks like this function a name parentheses

117
00:08:00.620 --> 00:08:10.150
and then brackets and whatever we put in those brackets will be run every time I refer back to generate

118
00:08:10.150 --> 00:08:11.790
an address so on it's own.

119
00:08:11.910 --> 00:08:19.140
If I just save this nothing is going to happen when I hit a UPS when I hit save.

120
00:08:19.140 --> 00:08:20.850
Now I go down here to Node.

121
00:08:21.360 --> 00:08:28.400
We don't get anything but I have to do is now call this function just like this.

122
00:08:30.550 --> 00:08:34.850
Now it saying OK is there something called general address.

123
00:08:34.870 --> 00:08:36.230
Oh yes there is.

124
00:08:36.230 --> 00:08:38.650
All right well let's run the three lines inside of it.

125
00:08:39.050 --> 00:08:50.220
So if I ran this three times now it's only three lines that we get three different addresses of course

126
00:08:50.310 --> 00:08:54.080
we might want to you know compile these together so that they're not on three separate lines.

127
00:08:54.180 --> 00:08:55.710
You want commas between them.

128
00:08:55.710 --> 00:08:56.970
We could really improve it.

129
00:08:57.150 --> 00:09:01.770
But the point is that that's basically how you define a function and we'll be working with functions

130
00:09:01.770 --> 00:09:02.410
later on.

131
00:09:02.550 --> 00:09:04.480
But for now that's all I'm going to show.

132
00:09:04.680 --> 00:09:06.330
OK so that's the basics of faker.

133
00:09:06.360 --> 00:09:11.030
The basics of packages will be installing other packages as well as the basics of node.
