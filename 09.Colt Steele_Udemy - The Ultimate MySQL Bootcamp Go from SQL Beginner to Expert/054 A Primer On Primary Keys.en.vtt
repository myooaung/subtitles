WEBVTT
1
00:00:00.270 --> 00:00:04.960
OK as you can see the slide says we have one more thing and that is true.

2
00:00:04.980 --> 00:00:09.510
We have one more thing to cover here before we do our final exercise in this section.

3
00:00:10.200 --> 00:00:17.420
So in keeping with this pattern What's up with this this key column here and it's empty.

4
00:00:17.430 --> 00:00:19.410
There's nothing for a name or age.

5
00:00:19.440 --> 00:00:20.830
What does this mean.

6
00:00:20.870 --> 00:00:26.400
So to dive into this and this is actually something we're going to come back to quite a ways down the

7
00:00:26.400 --> 00:00:27.390
line in this course.

8
00:00:27.480 --> 00:00:30.800
But we'll experience working with Keith for the first time in this video.

9
00:00:32.210 --> 00:00:41.090
So to illustrate the problem right now I could do this I could insert identical data Montie 10 Montie

10
00:00:41.090 --> 00:00:43.290
10 Montie 10 Montie 10 and so on.

11
00:00:43.460 --> 00:00:44.950
And we've already seen this.

12
00:00:44.960 --> 00:00:52.970
But just to prove that to you if I just worked with cats let's do select start from cats and this is

13
00:00:52.970 --> 00:00:55.550
true about any of the cats tables we have.

14
00:00:56.060 --> 00:00:59.810
You can actually already see we have two cats that are identical.

15
00:00:59.810 --> 00:01:01.160
No and No.

16
00:01:01.310 --> 00:01:12.650
But I could also do something like insert into cat's name age values and this one will be called Helena

17
00:01:14.510 --> 00:01:23.780
and I will be six or Halina you say it we can do this and we can do it as many times as you want and

18
00:01:23.780 --> 00:01:32.300
there's going to be identical data and there as you can see we have five identical cats.

19
00:01:32.470 --> 00:01:33.610
So why should you care.

20
00:01:33.760 --> 00:01:35.420
Why is this really a problem.

21
00:01:35.890 --> 00:01:41.530
And there's a couple of reasons but it comes down to the fact that we want all of our data to be uniquely

22
00:01:41.620 --> 00:01:46.750
identifiable even if it looks the same like it does in this case.

23
00:01:46.750 --> 00:01:52.110
We assume that these are separate cats if they are in fact one cat then this is just an error.

24
00:01:52.120 --> 00:01:58.690
We don't want to have this many entries but imagine we actually have five cats named Tilla with an age

25
00:01:58.690 --> 00:01:59.790
of six.

26
00:01:59.830 --> 00:02:01.560
They are unique and individual.

27
00:02:01.570 --> 00:02:03.250
And we want to be able to keep track of them.

28
00:02:03.250 --> 00:02:04.840
And right now we can't.

29
00:02:04.840 --> 00:02:08.430
There is no way to uniquely refer to this.

30
00:02:09.070 --> 00:02:14.590
So in a case like here where we have Alabama who has no age no.

31
00:02:14.650 --> 00:02:16.830
And then we have know who is age.

32
00:02:16.830 --> 00:02:23.650
No there is a way of telling these apart even though they both have age of gnoll I could tell sequel

33
00:02:23.650 --> 00:02:29.440
and we don't know how to do this yet but I could say give me a cat whose age is nil and whose name is

34
00:02:29.440 --> 00:02:32.720
Alabama and that can get me this.

35
00:02:33.070 --> 00:02:38.380
But there's no way for me to get this cat separated from this cat or this one and separated from this

36
00:02:38.380 --> 00:02:38.800
one.

37
00:02:38.860 --> 00:02:43.810
And that's really a useful and important thing and it's actually a really fundamental part of working

38
00:02:43.810 --> 00:02:51.310
with databases is having things be identifiable when you're signing up for an account on let's say Twitter

39
00:02:51.910 --> 00:02:53.850
and you're trying to make a user name.

40
00:02:53.900 --> 00:02:58.550
There's a reason that you can't just make the same username that already exists.

41
00:02:58.900 --> 00:03:04.840
I wish that I could just go and make my username cult but somebody already has that and it's not just

42
00:03:04.840 --> 00:03:10.930
about keeping it simple and not being confusing for users because obviously it would be confusing if

43
00:03:10.930 --> 00:03:15.280
there was one cold and then another cold and they're both tweeting.

44
00:03:15.280 --> 00:03:16.600
How do you know who is who.

45
00:03:16.900 --> 00:03:23.740
But actually in the code that's hugely problematic because there's things like when I log in I typed

46
00:03:23.740 --> 00:03:30.040
my username and it's going to go to the database and try and find a user with username cult and then

47
00:03:30.040 --> 00:03:31.470
it's going to match my password.

48
00:03:31.480 --> 00:03:35.500
But if there's two users with username colt then what does it do.

49
00:03:35.530 --> 00:03:42.190
So in that case you're not allowed to have separate usernames but there are times when we have data

50
00:03:42.190 --> 00:03:50.350
that looks the same like hypothetically we could have two cats named Helena age six or maybe a better

51
00:03:50.350 --> 00:03:59.530
example we could have a couple of cats if we go back here where we have no name provided they're unnamed

52
00:04:00.130 --> 00:04:00.970
but they're unique.

53
00:04:00.970 --> 00:04:02.200
Different cats.

54
00:04:02.530 --> 00:04:04.050
How do we know.

55
00:04:04.810 --> 00:04:13.450
And the easiest way and what we'll do and what pretty much everyone does is assign an I.D. a unique

56
00:04:13.450 --> 00:04:22.870
identifier so you can see here it added a new field cat I.D. and every cat is given one of these IDs.

57
00:04:22.960 --> 00:04:29.260
So now rather than saying I want to select Montie from this database and getting all of these I can

58
00:04:29.260 --> 00:04:33.160
say I want the cat with I.D. one or ID three.

59
00:04:33.340 --> 00:04:35.200
And they are uniquely identifiable.

60
00:04:35.200 --> 00:04:35.830
All right.

61
00:04:35.830 --> 00:04:39.980
So there is a precise term for this primary key.

62
00:04:40.180 --> 00:04:47.100
So a primary key just refers to something that is a unique identifier on a row.

63
00:04:47.200 --> 00:04:52.740
It's a way of identifying something and you know that it will be unique Just a heads up.

64
00:04:52.750 --> 00:04:55.860
We will see another type of key later on called foreign key.

65
00:04:55.870 --> 00:04:57.220
Those are both keys.

66
00:04:57.370 --> 00:04:57.940
Don't worry about it.

67
00:04:57.950 --> 00:05:04.320
The primary key just means that whatever field we assign whatever we make the primary key.

68
00:05:04.660 --> 00:05:10.310
So in this case we had made cat ID a primary key means that it has to be unique.

69
00:05:10.420 --> 00:05:13.110
So let's see how we actually assign one.

70
00:05:13.210 --> 00:05:18.640
So I'm creating a new table here and I know it's a little bit longer than what we've seen but a lot

71
00:05:18.640 --> 00:05:20.000
of it is very very similar.

72
00:05:20.200 --> 00:05:21.340
So we have unique cats.

73
00:05:21.370 --> 00:05:25.110
It's just the name of the table just I got tired of cats one two three four.

74
00:05:25.390 --> 00:05:32.030
So you need cats we have name and age but we also have cat I.D. now.

75
00:05:32.440 --> 00:05:37.870
So Cat I.D. is an integer and we can't have cat Id know.

76
00:05:38.320 --> 00:05:40.850
We definitely want there to be something there.

77
00:05:41.650 --> 00:05:45.200
And then this is the new and important piece.

78
00:05:45.400 --> 00:05:52.220
This is just another field this isn't technically new conceptually but this is primary key.

79
00:05:52.330 --> 00:05:55.300
And then we give it the name of a field.

80
00:05:55.370 --> 00:05:57.890
So we want the cat to be unique.

81
00:05:58.070 --> 00:06:02.990
We want it to be the unique identifier so we just pass it in here cat.

82
00:06:03.650 --> 00:06:05.200
So let's try this up.

83
00:06:05.330 --> 00:06:07.590
I'm just going to copy it over just to save you time.

84
00:06:07.610 --> 00:06:11.700
You don't have to watch me type thing.

85
00:06:11.750 --> 00:06:12.530
Here we go.

86
00:06:12.620 --> 00:06:14.380
Create table cats.

87
00:06:14.660 --> 00:06:16.890
Cat ID name age.

88
00:06:16.910 --> 00:06:21.980
And by the way that cat Id talked about earlier is primary key.

89
00:06:21.980 --> 00:06:30.090
All right so now let's do describe unique cats you'll see a couple of things.

90
00:06:30.220 --> 00:06:38.500
We have cat deal now because we had this line here but we also under this key call them we have primary

91
00:06:38.500 --> 00:06:41.660
here PRI but it means primary key.

92
00:06:41.680 --> 00:06:43.830
So Cat ID is a primary key.

93
00:06:44.050 --> 00:06:45.210
So how do we know.

94
00:06:45.700 --> 00:06:59.080
Well let's insert into cats or unique cats will do id name and age just like that and then we'll do

95
00:06:59.080 --> 00:07:09.620
values and we'll start off with an idea of one name will be Fred and age will be one that's used to

96
00:07:10.060 --> 00:07:11.240
find 23.

97
00:07:11.430 --> 00:07:12.480
Except the typo.

98
00:07:12.690 --> 00:07:15.210
Oh get it enter.

99
00:07:15.660 --> 00:07:17.370
Oh we have a problem.

100
00:07:17.370 --> 00:07:18.970
I just referred to ID.

101
00:07:18.980 --> 00:07:21.020
It should be cat ID.

102
00:07:21.190 --> 00:07:22.140
Silly mistake.

103
00:07:23.170 --> 00:07:25.710
So let's fix that cat ID.

104
00:07:26.430 --> 00:07:27.080
OK.

105
00:07:27.210 --> 00:07:29.550
Now just double check our work.

106
00:07:33.050 --> 00:07:36.720
From unique cats get ideas one.

107
00:07:36.740 --> 00:07:37.170
All right.

108
00:07:37.190 --> 00:07:39.730
So we could do the same thing.

109
00:07:40.470 --> 00:07:42.180
Change us to two.

110
00:07:42.470 --> 00:07:52.780
And instead of Fred let's have Louise who is two three we enter same thing.

111
00:07:52.820 --> 00:07:54.560
I think you get where I'm going here.

112
00:07:54.590 --> 00:08:00.330
We can keep doing this however and this is where the primary key part comes in.

113
00:08:00.800 --> 00:08:03.060
I can now say entered into unique cats.

114
00:08:03.140 --> 00:08:05.390
Cat ID name age.

115
00:08:05.570 --> 00:08:12.630
What if I tried to make another one with of one and this one is called James.

116
00:08:13.280 --> 00:08:20.250
Just like that I get a new error duplicate entry one for key primary.

117
00:08:20.570 --> 00:08:25.070
So this is saying wait a second you said as a primary key I cannot have a duplicate entry.

118
00:08:25.070 --> 00:08:26.390
You cannot have something.

119
00:08:26.450 --> 00:08:29.750
The whole point is that ID is supposed to be uniquely identifiable.

120
00:08:29.900 --> 00:08:31.850
Well that's a problem.

121
00:08:31.970 --> 00:08:33.740
So it doesn't added to the database.

122
00:08:33.740 --> 00:08:38.910
So that's really really important and IDs are not the only thing you can make primary keys.

123
00:08:38.930 --> 00:08:43.800
I gave that example of username which is something we'll come back to later.

124
00:08:43.880 --> 00:08:49.430
You often want to make a user name a primary key so that you can't have more than one account with the

125
00:08:49.430 --> 00:08:51.690
same username in your database.

126
00:08:51.810 --> 00:08:59.390
And so all that you would do is instead of saying Primary Key Where's that cat ID you would say a primary

127
00:08:59.390 --> 00:09:02.060
key username or whatever the name of the field is.

128
00:09:02.150 --> 00:09:07.160
And then if I tried to insert something with an already existing user name I would get the same error

129
00:09:07.160 --> 00:09:08.350
here.

130
00:09:09.360 --> 00:09:09.690
OK.

131
00:09:09.710 --> 00:09:16.270
One more thing to talk about which is it's kind of annoying to have to manually specify this ID.

132
00:09:16.310 --> 00:09:18.170
It's more than annoying it's impractical.

133
00:09:18.170 --> 00:09:23.360
I mean you just supposed to know where you left off one two three and every time you enter a cat you

134
00:09:23.360 --> 00:09:26.020
just have to know what the last one was.

135
00:09:26.060 --> 00:09:27.620
It just doesn't really work.

136
00:09:27.620 --> 00:09:32.980
It's not even in this shell context but especially not in a real application.

137
00:09:33.260 --> 00:09:34.910
You can't and it's just a pain.

138
00:09:35.270 --> 00:09:37.820
So there's a way around it.

139
00:09:37.940 --> 00:09:38.830
Our code gets longer.

140
00:09:38.840 --> 00:09:44.040
I know that all of that's added here is this auto increment.

141
00:09:44.420 --> 00:09:46.230
So it does what it sounds like.

142
00:09:46.550 --> 00:09:52.980
It will take cat ID and it will automatically add 1 to it every time a new cat is created.

143
00:09:53.210 --> 00:10:01.190
So we no longer have to specify cat ID is one cat ideas to it will just do it we just leave off Id entirely

144
00:10:01.790 --> 00:10:03.970
and everything else here is the same.

145
00:10:04.220 --> 00:10:06.400
So Cat unique cats too.

146
00:10:06.800 --> 00:10:11.670
I'm just going to copy this over make some space.

147
00:10:11.790 --> 00:10:13.990
Hit enter and before I show you that it works.

148
00:10:14.150 --> 00:10:22.520
If we do describe unique cats to notice that we also have auto Inc.

149
00:10:22.610 --> 00:10:29.110
We have autoincrement here under extra so it doesn't get its own field but is considered extra.

150
00:10:29.150 --> 00:10:36.880
So now let's try and insert something into that insert into unique caps too.

151
00:10:37.130 --> 00:10:40.340
And will you name and age.

152
00:10:40.370 --> 00:10:44.070
We don't specify cat ID anymore.

153
00:10:44.750 --> 00:10:49.490
Values and let's see.

154
00:10:49.490 --> 00:10:54.830
Seriously the hardest part of all of this let's go with the Skippy Once again I see some peanut butter

155
00:10:55.280 --> 00:10:56.110
in my kitchen.

156
00:10:56.320 --> 00:11:00.120
And age will be four just like that.

157
00:11:01.640 --> 00:11:11.380
Now if I do select star from unique cats to cat ID is automatically one.

158
00:11:11.980 --> 00:11:14.410
And to prove to you that it's auto incrementing.

159
00:11:14.570 --> 00:11:17.660
Let's change this name to Jeff

160
00:11:20.800 --> 00:11:23.170
and we like start again.

161
00:11:23.170 --> 00:11:25.010
And now we have two.

162
00:11:25.780 --> 00:11:26.980
So this solves two problems.

163
00:11:26.980 --> 00:11:32.320
One is that it's annoying to have to manually type those IDs and keep track of what number we're on

164
00:11:32.320 --> 00:11:33.150
next.

165
00:11:33.340 --> 00:11:40.120
But also I can now have duplicate cats as far as name and age which is our whole goal from the get go.

166
00:11:40.210 --> 00:11:49.610
So I can now do another Jeff and another Jeff again and this time let's do it skippy as well.

167
00:11:49.600 --> 00:11:59.430
Now select star from unique cat 2 and you could see we have Skippy here who's for it skippy here has

168
00:11:59.450 --> 00:12:01.610
four but they have different ideas.

169
00:12:01.720 --> 00:12:04.140
Therefore they are unique.

170
00:12:04.150 --> 00:12:07.470
Same thing with three fifths perfect already.

171
00:12:07.480 --> 00:12:11.110
So that concludes all the new stuff in this section.

172
00:12:11.140 --> 00:12:15.820
Now you're going to get a chance to put in action to actually practice it and to write your own bit

173
00:12:15.820 --> 00:12:16.580
of code.

174
00:12:16.780 --> 00:12:20.230
Create your own table that looks a little bit something like this.

175
00:12:20.590 --> 00:12:21.070
OK.
