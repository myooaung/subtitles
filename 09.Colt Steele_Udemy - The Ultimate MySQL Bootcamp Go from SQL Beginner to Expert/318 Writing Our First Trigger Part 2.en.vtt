WEBVTT
1
00:00:00.250 --> 00:00:00.860
All right.

2
00:00:00.900 --> 00:00:02.370
So we ran the code first.

3
00:00:02.370 --> 00:00:04.070
Now we're asking the questions.

4
00:00:04.110 --> 00:00:08.520
So going back to the code here there's a couple of things I want to point out and we'll come back to

5
00:00:08.520 --> 00:00:10.520
the delimiter stuff the beginning and end.

6
00:00:10.700 --> 00:00:17.790
But I want to focus first on the basic syntax so CREATE TRIGGER that standard give it a name.

7
00:00:17.940 --> 00:00:19.480
I call that must be adult.

8
00:00:19.620 --> 00:00:21.320
You can call it whatever you want.

9
00:00:21.540 --> 00:00:23.160
It doesn't actually have an impact.

10
00:00:23.160 --> 00:00:24.520
Again it's really a label.

11
00:00:24.570 --> 00:00:30.000
So that if you do want to delete this trigger later on you have a name to call it by so that we can

12
00:00:30.000 --> 00:00:33.600
delete must be adult but give it something meaningful.

13
00:00:33.600 --> 00:00:35.240
Then we have the important stuff.

14
00:00:35.250 --> 00:00:37.770
So this is the meat of the trigger.

15
00:00:37.890 --> 00:00:43.280
We have our trigger time the trigger event and the trigger table.

16
00:00:43.710 --> 00:00:46.910
So this is the user's table that's the simplest one to start with.

17
00:00:47.070 --> 00:00:52.820
We want to run this code here right before something is inserted into the user's table.

18
00:00:53.250 --> 00:01:00.420
Now if we had said after it wouldn't really do much because it wouldn't prevent a user from being inserted

19
00:01:00.720 --> 00:01:07.020
if their age is under 18 it would still check and it would still give you an error if age was less less

20
00:01:07.020 --> 00:01:07.730
than 18.

21
00:01:07.890 --> 00:01:11.770
But it still would insert it because it would be running afterwards.

22
00:01:11.880 --> 00:01:13.380
So it's not really a validation.

23
00:01:13.500 --> 00:01:18.780
So because of that we definitely want to have before but I will be showing you where you can use after

24
00:01:18.950 --> 00:01:21.530
in another example just a couple of videos.

25
00:01:21.810 --> 00:01:26.970
But in this case before inserted so it will run immediately before anything is inserted into the user's

26
00:01:26.970 --> 00:01:27.660
table.

27
00:01:27.990 --> 00:01:34.450
Then we have for each row that's just default syntax begin and end.

28
00:01:34.830 --> 00:01:39.900
Notice the semicolon here will come back to that and whatever's in between Begin and End is the actual

29
00:01:39.900 --> 00:01:40.320
code.

30
00:01:40.320 --> 00:01:46.990
This is sequel code that runs every time right before something is inserted into users.

31
00:01:47.100 --> 00:01:53.090
So let's start off by talking about this if new age less than 18.

32
00:01:53.160 --> 00:01:59.850
So first of all we have this syntax where we have if then and then and if what you've seen before but

33
00:01:59.850 --> 00:02:03.480
more importantly we have new age and new.

34
00:02:03.480 --> 00:02:05.630
In this case it is just a placeholder.

35
00:02:05.640 --> 00:02:09.560
It's referring to the data that is attempting to be inserted.

36
00:02:09.570 --> 00:02:13.430
It's referring to the new user that is going to be inserted into the table.

37
00:02:13.500 --> 00:02:17.550
So if new age is less than 18 do this.

38
00:02:17.550 --> 00:02:19.430
Otherwise don't do anything.

39
00:02:19.440 --> 00:02:27.030
There's also an old D that goes along with new that we'll see later on you know once you've deleted

40
00:02:27.030 --> 00:02:30.760
something we want to have access to the data that was deleted.

41
00:02:30.810 --> 00:02:33.500
We can use old dot whatever.

42
00:02:33.500 --> 00:02:40.410
So new data age less than 18 new is a placeholder for whatever user is being inserted.

43
00:02:40.410 --> 00:02:43.890
Then we move on to slightly trickier thing.

44
00:02:44.190 --> 00:02:50.420
What the heck is this signal sequel state 45000 set message text equals must be an adult.

45
00:02:50.820 --> 00:02:53.670
So the second part is probably more self-explanatory.

46
00:02:53.730 --> 00:02:54.100
Set.

47
00:02:54.100 --> 00:02:56.220
Message text must be an adult.

48
00:02:56.220 --> 00:03:00.470
We saw that message text here must be an adult.

49
00:03:01.470 --> 00:03:04.670
But this sequel state thing is kind of confusing.

50
00:03:04.740 --> 00:03:10.160
So according to the school docs there are three components to a minuscule error.

51
00:03:10.470 --> 00:03:12.720
There's a numeric error code.

52
00:03:12.720 --> 00:03:14.780
11:46 is a common one.

53
00:03:15.120 --> 00:03:16.630
And these are actually my ask.

54
00:03:16.700 --> 00:03:18.490
Well specific error codes.

55
00:03:18.660 --> 00:03:23.040
But then there's these other things called sequel States and that's what we cared more about in this

56
00:03:23.040 --> 00:03:23.970
situation.

57
00:03:24.000 --> 00:03:26.210
It's a five character value.

58
00:03:26.310 --> 00:03:27.800
It's not just numeric.

59
00:03:28.010 --> 00:03:33.450
It can have letters and they're taken all of this is from the docs by the way if you want to read more

60
00:03:33.450 --> 00:03:33.850
about it.

61
00:03:33.900 --> 00:03:37.100
But there are more standardized across sequel databases.

62
00:03:37.170 --> 00:03:38.180
So it's not just my ass.

63
00:03:38.190 --> 00:03:45.370
Q All specific this signal state code can be recognized essentially across different databases.

64
00:03:45.600 --> 00:03:50.200
And then along with that there's always a message string a textual description of the error.

65
00:03:50.220 --> 00:03:54.210
So that's important for humans for us to recognize what's happening.

66
00:03:54.270 --> 00:04:00.120
But for our code to recognize what's going on it's much easier to work with these you know numeric values

67
00:04:00.120 --> 00:04:02.010
or these sequence values.

68
00:04:02.220 --> 00:04:03.880
Those are easier to recognize.

69
00:04:04.020 --> 00:04:11.370
You can write code that says hey if we get an error equal to you know for 2 0 2 then do this rather

70
00:04:11.370 --> 00:04:17.570
than saying if we get an error that says exactly must be a number must be greater than 18.

71
00:04:17.640 --> 00:04:21.050
You know there's sort of a lot of wiggle room there depending on how it is implemented.

72
00:04:21.150 --> 00:04:26.580
But these numbers these are hard coded values that never change are much easier to check against.

73
00:04:26.820 --> 00:04:32.400
And as a side note on the my toolbox there's this page server error codes and messages.

74
00:04:32.610 --> 00:04:38.310
If you scroll down you'll see there are tons of these messages and there there's these errors in it

75
00:04:38.310 --> 00:04:39.350
comforting messages.

76
00:04:39.360 --> 00:04:41.660
Let's just pick one let's say.

77
00:04:42.030 --> 00:04:43.740
Here's one here error.

78
00:04:43.860 --> 00:04:53.160
So the minuscule error code is 1 0 0 or 5 the sequel state is HNY 000 and the message is can't create

79
00:04:53.160 --> 00:04:53.940
table.

80
00:04:54.180 --> 00:04:58.230
And then instead of here it will put the name of the table you try and create.

81
00:04:58.230 --> 00:05:04.080
So this would happen if you tried to create table for some reason that you couldn't whether I'm trying

82
00:05:04.080 --> 00:05:06.140
to think of actually how exactly this would happen.

83
00:05:06.150 --> 00:05:09.100
It says a foreign key constraint.

84
00:05:09.480 --> 00:05:11.290
Potentially there is.

85
00:05:11.340 --> 00:05:14.920
Well it doesn't matter that much but however you get this error.

86
00:05:15.150 --> 00:05:17.090
It will show you the error code.

87
00:05:17.130 --> 00:05:24.030
The Secret State Code and the message and in fact if we go try this caused an error on your own feel

88
00:05:24.030 --> 00:05:26.180
free to do whatever you want to cause an error.

89
00:05:26.190 --> 00:05:27.540
But here's one we could do.

90
00:05:27.570 --> 00:05:31.140
Select star from this table that we know doesn't exist.

91
00:05:31.210 --> 00:05:32.140
Just jibberish.

92
00:05:32.340 --> 00:05:37.690
If we try and do that over here we get an error.

93
00:05:38.080 --> 00:05:39.400
So it says error.

94
00:05:39.460 --> 00:05:45.070
And then we have 1 1 4 6 so that error code is the minuscule specific code.

95
00:05:45.160 --> 00:05:53.970
Then we have the sequel state 4 2 0 0 2 and then we have this text table trigger demo.

96
00:05:53.980 --> 00:05:56.540
Blah blah blah blah blah doesn't exist.

97
00:05:56.560 --> 00:05:57.940
So this is the message.

98
00:05:58.060 --> 00:06:02.620
This is the sequel state and this is the code what we care about is the sequel state.

99
00:06:02.800 --> 00:06:04.660
And then the message.

100
00:06:04.660 --> 00:06:08.370
And if we go over to the docs again and we try and find that code.

101
00:06:08.490 --> 00:06:13.350
So we had the sequel state was 4 2 0 0 0 2.

102
00:06:13.360 --> 00:06:15.770
You can see that it shows up a couple of times.

103
00:06:15.790 --> 00:06:25.860
There's an unknown table message unknown table but there's also bad table an issue or another one yes

104
00:06:26.220 --> 00:06:27.430
table doesn't exist.

105
00:06:27.440 --> 00:06:29.020
Error no such table.

106
00:06:29.070 --> 00:06:33.830
So those all use the same sequel state but they use a different minus to error.

107
00:06:36.260 --> 00:06:39.920
There we go so ten fifty one versus 11 0 9.

108
00:06:39.940 --> 00:06:43.270
This is really getting into stuff that doesn't matter that much to us.

109
00:06:43.270 --> 00:06:48.340
And the reason that it doesn't matter to us is that we're going to use one and only one sequel state

110
00:06:48.790 --> 00:06:50.670
which is 45000.

111
00:06:50.670 --> 00:06:58.060
So 45000 is sort of like a wild card state that is generic and it represents an unhandled user defined

112
00:06:58.060 --> 00:06:58.760
exception.

113
00:06:58.810 --> 00:07:05.890
So it's kind of just left out there for us to use it for developers to return 45000 as a way of saying

114
00:07:06.010 --> 00:07:08.520
hey this is something I've come up with this is not a minus.

115
00:07:08.560 --> 00:07:14.740
Well this is not a sequel thing like you know an unknown table or a syntax error or something.

116
00:07:14.740 --> 00:07:23.250
This is something that I've defined and I've set the message so signal sequel state in quotes 4 5 0

117
00:07:23.260 --> 00:07:25.160
0 0 is what we'll have.

118
00:07:25.150 --> 00:07:31.750
Anytime we want to throw an error then we have set message text and then that's important you know that

119
00:07:31.750 --> 00:07:32.750
has to be set.

120
00:07:32.750 --> 00:07:34.150
Message text can be set.

121
00:07:34.150 --> 00:07:40.360
Anything else said message text equal to whatever message we want returned alongside that and then if

122
00:07:40.360 --> 00:07:46.890
we go look at what happens just to refresh your memory up here when we try that we get error.

123
00:07:47.170 --> 00:07:54.750
Here's our sequel state and then must be an adult so that's the basics of this kind of new stuff in

124
00:07:54.750 --> 00:07:55.490
here.

125
00:07:55.920 --> 00:08:01.260
But then we move on to what the heck is going on here with this delimiter Dollar Sign Dollar sign and

126
00:08:01.260 --> 00:08:04.530
then two dollar signs here and then delimiter semi-colon.

127
00:08:04.590 --> 00:08:05.710
What is it.

128
00:08:05.910 --> 00:08:13.020
So basically if we take a look at and we go to a cleaner version of this back here if we take a look

129
00:08:13.020 --> 00:08:17.360
at the code we have semi colons in certain places.

130
00:08:17.360 --> 00:08:19.560
That's because these are multiple line statements.

131
00:08:19.650 --> 00:08:26.370
So we need a semi-colon after something like setting message text or an if statement or this begin and

132
00:08:26.380 --> 00:08:27.400
end.

133
00:08:27.600 --> 00:08:31.560
And if we just use a semi-colon and didn't have this delimiter.

134
00:08:31.560 --> 00:08:33.110
So just pretend this isn't here.

135
00:08:33.120 --> 00:08:34.400
All of this.

136
00:08:34.680 --> 00:08:39.210
Each of these lines should be treated basically as the end of our code.

137
00:08:39.210 --> 00:08:44.100
Remember that when my school sees a semi-colon by default that is the delimiter.

138
00:08:44.100 --> 00:08:47.850
And that basically means this is a signal that I'm done with this line.

139
00:08:47.880 --> 00:08:53.420
Go ahead and executed but we don't want that to happen so we don't want this thing to be read in.

140
00:08:53.520 --> 00:08:57.510
You know and it gets this first semi-colon and it says All right time to execute this.

141
00:08:57.540 --> 00:09:00.340
This is the end because it's not in fact.

142
00:09:00.400 --> 00:09:06.170
So what we do instead is change the delimiter temporarily to it it doesn't have to be two dollar signs.

143
00:09:06.180 --> 00:09:11.340
I've seen people do it with slashes to Dollar Signs is most common though just because it's not use

144
00:09:11.340 --> 00:09:12.630
anywhere else.

145
00:09:12.630 --> 00:09:19.410
So delimiter space Dollar Sign Dollar sign that says OK from here on out the actual delimiter is two

146
00:09:19.410 --> 00:09:20.170
dollar signs.

147
00:09:20.340 --> 00:09:24.430
So the end of our code is when you see two dollar signs.

148
00:09:24.480 --> 00:09:27.730
So then all of this is treated as one chunk.

149
00:09:27.870 --> 00:09:34.290
We hit the two dollar signs that says this is the end and then we can change it back to a semi-colon.

150
00:09:34.290 --> 00:09:38.630
If you didn't have this line which I've done before accidentally.

151
00:09:38.910 --> 00:09:41.550
So we can actually do this now in the con..

152
00:09:41.550 --> 00:09:43.810
You can just change the delimiter any time you want.

153
00:09:44.100 --> 00:09:53.450
So if I run it now and I try and do let's say select start from users semi-colon and I hit enter.

154
00:09:53.580 --> 00:09:57.420
Nothing happens and that's because it thinks that I'm still going.

155
00:09:57.420 --> 00:09:59.300
I haven't and it hasn't hit that delimiter.

156
00:09:59.490 --> 00:10:05.720
So I had two dollar signs which now says we've hit the end.

157
00:10:06.180 --> 00:10:13.540
So you have to use dollar signs now which can be kind of annoying if you forget so you can see that

158
00:10:13.540 --> 00:10:15.890
now replaces the semicolon.

159
00:10:16.180 --> 00:10:17.900
However we don't really want that.

160
00:10:17.950 --> 00:10:24.160
So I'm going to go back and just change it to semi-colon and no semi-colon works.

161
00:10:24.220 --> 00:10:26.980
So that's all you need to know about the basics here.

162
00:10:26.980 --> 00:10:33.280
There's kind of a lot of pieces but the most important thing the template for any sort of trigger that

163
00:10:33.280 --> 00:10:39.070
you do usually has delimiter a stop and then you're using the dollar signs or whatever you set down

164
00:10:39.070 --> 00:10:41.710
here and then you have create trigger and a name.

165
00:10:41.710 --> 00:10:49.030
Then you have a time before after an action or an event insert update or delete and then you have a

166
00:10:49.030 --> 00:10:52.070
table and then for each row begin and end.

167
00:10:52.090 --> 00:10:53.410
Those always are the same.

168
00:10:53.410 --> 00:10:55.760
And then you have something happening inside of there.

169
00:10:56.110 --> 00:11:02.380
And just to summarize new refers to the new piece of data the new row we're trying to insert and then

170
00:11:02.380 --> 00:11:07.270
sequence stage signal all that stuff is just involved in sending an error message back.

171
00:11:07.400 --> 00:11:10.400
It's kind of a lot but going forward we have two more examples.

172
00:11:10.420 --> 00:11:13.200
We're not going to spend a lot of time on the gritty details.

173
00:11:13.210 --> 00:11:15.470
We're just going to get going and just see how they work.

174
00:11:15.520 --> 00:11:21.010
Because honestly whenever I create a trigger I just go up to an old one that I've done before I copy

175
00:11:21.010 --> 00:11:22.380
it and then I tweak it.

176
00:11:22.480 --> 00:11:25.690
I don't start from scratch like I would with creating a table.

177
00:11:25.690 --> 00:11:27.010
You just don't do it that often.

178
00:11:27.160 --> 00:11:31.570
So no pressure to feel like you have to memorize all this or you know take it all to heart immediately

179
00:11:31.810 --> 00:11:35.700
just kind of be comfortable with understanding it if you see code in front of you.

180
00:11:35.710 --> 00:11:36.230
All right.
