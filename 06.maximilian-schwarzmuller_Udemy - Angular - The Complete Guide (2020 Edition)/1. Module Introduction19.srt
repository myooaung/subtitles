1
00:00:02,120 --> 00:00:06,440
Dalam modul ini kita akan terjun ke Universal sudut yang merupakan tambahan ke sudut.

2
00:00:06,450 --> 00:00:12,480
Anda bisa mengatakan seperti yang Anda tahu sudut memungkinkan Anda untuk membangun antarmuka pengguna ujung depan antarmuka pengguna yang

3
00:00:12,480 --> 00:00:13,550
berjalan di browser.

4
00:00:13,620 --> 00:00:20,730
Seluruh aplikasi bersudut Anda berjalan di browser angular universal sekarang memungkinkan Anda untuk merender aplikasi bersudut

5
00:00:20,730 --> 00:00:22,170
Anda di server.

6
00:00:22,170 --> 00:00:25,700
Jadi ini bukan kerangka bunuh diri seperti pilihan ekspres atau semacamnya.

7
00:00:25,710 --> 00:00:33,480
Anda tidak akan menggunakannya untuk menulis kode sisi server tetapi itu memungkinkan Anda untuk on-the fly pre render halaman yang dikunjungi pengguna

8
00:00:33,480 --> 00:00:39,930
Anda sehingga ketika pengguna memuat halaman tersebut mereka mendapatkan Page yang sudah selesai dilayani kembali dan rendering awal

9
00:00:39,930 --> 00:00:45,300
tidak perlu terjadi di browser dan hanya tindakan selanjutnya oleh pengguna yang kemudian ditangani

10
00:00:45,360 --> 00:00:47,340
seperti biasa di browser saja.

11
00:00:47,400 --> 00:00:51,910
Biarkan saya menunjukkan kepada Anda apa yang sebenarnya saya maksud di sini adalah buku resep kita.

12
00:00:52,250 --> 00:00:58,700
Sekarang untuk Anda klik kanan di sini dan tinjau sumber halaman maka apa yang Anda lihat di sini adalah bahwa Anda tidak melihat

13
00:00:58,700 --> 00:00:59,230
banyak.

14
00:00:59,270 --> 00:01:03,510
Kami mendapat elemen root aplikasi di sini dan kemudian banyak impor skrip.

15
00:01:03,590 --> 00:01:08,930
Dan inilah tampilan aplikasi sudut normal seperti skrip impor ini di sini pada akhirnya aplikasi

16
00:01:08,990 --> 00:01:09,890
sudut kami.

17
00:01:09,890 --> 00:01:17,090
Jadi kerangka kerja dan dekode yang kami tulis disusun dioptimalkan dan disatukan bersama serta aplikasi rute.

18
00:01:17,090 --> 00:01:22,280
Berikut ini hanya menandai tempat di mana kode kita pada akhirnya akan mulai merender

19
00:01:22,280 --> 00:01:29,450
aplikasi sudut yang kita lihat di layar hanyalah kasusnya karena aplikasi sudut semua skrip ini melakukan pekerjaan mereka dan

20
00:01:29,450 --> 00:01:34,420
mereka mengubah halaman yang kita lihat setelah itu telah dimuat oleh browser.

21
00:01:34,470 --> 00:01:39,410
Itu terjadi begitu cepat sehingga kita tidak melihat itu, tetapi inilah yang terjadi sekarang.

22
00:01:39,410 --> 00:01:44,300
Pendekatan ini umumnya baik-baik saja tetapi dalam beberapa situasi mungkin memiliki kelemahan.

23
00:01:44,300 --> 00:01:47,630
Bayangkan bahwa pengguna Anda berada di jaringan yang lebih lambat.

24
00:01:47,810 --> 00:01:54,350
Dalam kasus seperti itu, pengunduhan javascript mungkin memakan waktu dan hingga kode javascript diunduh, pengguna Anda

25
00:01:54,590 --> 00:01:57,000
tidak akan melihat apa pun.

26
00:01:57,170 --> 00:02:00,290
Atau ambil mesin pencari sebagai mesin pencari.

27
00:02:00,290 --> 00:02:06,710
Jadi perayap dari mesin pencari itu melihat situs-situs Web yang berbeda untuk mengindeks mereka dan untuk mesin pencari

28
00:02:06,770 --> 00:02:10,010
hanya melihat apa yang awalnya diunduh oleh server.

29
00:02:10,010 --> 00:02:15,690
Itu tidak harus menunggu semua skrip Anda selesai dengan menampilkan apa yang dilihat pengguna.

30
00:02:15,710 --> 00:02:18,890
Jadi mesin pencari mungkin tidak melihat apa yang dilihat pengguna akhir.

31
00:02:18,890 --> 00:02:24,740
Alih-alih itu mungkin melihat ini dengan baik dan seperti yang Anda bayangkan ini tidak begitu bagus untuk mendapatkan skor indeks yang

32
00:02:24,800 --> 00:02:30,220
baik karena apa yang tidak Anda lihat benar dan itulah yang dilihat oleh mesin pencari untuk alasan seperti itu

33
00:02:30,230 --> 00:02:33,140
akan lebih baik jika permintaan awal pertama itu .

34
00:02:33,170 --> 00:02:37,470
Jadi, ketika Anda pertama kali mengunjungi halaman ketika Anda memuatnya pertama kali akan ditampilkan di server.

35
00:02:37,640 --> 00:02:43,580
Jadi jika kita mendapatkan HD yang sebenarnya, Al Page melayani kembali bahwa Page masih akan berisi semua impor

36
00:02:43,760 --> 00:02:49,430
skrip karena itu akan dikonversi menjadi aplikasi annular setelah dimuat sehingga klik berikutnya sekali lagi ditangani di

37
00:02:49,430 --> 00:02:52,250
browser hanya untuk menjadi cepat dan reaktif.

38
00:02:52,340 --> 00:02:58,580
Tapi itu memuat pertama ditangani pada server yang memperbaiki masalah mesin pencari dan juga memperbaiki masalah koneksi yang

39
00:02:58,580 --> 00:03:02,060
lebih lambat dan sudut universal membantu kita dengan itu.
