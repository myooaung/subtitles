WEBVTT
1

00:00:02.530  -->  00:00:07.120
So let's work on the shopping list edit component. In its template,

2

00:00:07.180  -->  00:00:14.740
I want to add a Bootstrap row and in there, I want to have a column spanning the full width, like that

3

00:00:15.420  -->  00:00:21.970
and in there, I'll add a form element. Now important, remove the action because we're not going to send a

4

00:00:21.970  -->  00:00:23.550
request to the server

5

00:00:23.560  -->  00:00:29.440
once this is submitted but we will have a look at submitting forms later in this course, we have a whole

6

00:00:29.440  -->  00:00:30.590
section about that

7

00:00:30.640  -->  00:00:34.490
and that is when we will fill this form with more life.

8

00:00:34.840  -->  00:00:43.110
For now in this form, I want to have a row and this should now maybe have a width of only five

9

00:00:43.100  -->  00:00:48.110
on small devices, on very small devices it should span the full width which is why I'm using the sm

10

00:00:48.190  -->  00:00:54.990
class here and it should also have the form-group Bootstrap class attached to it,

11

00:00:55.000  -->  00:01:04.390
this div and in here, I'll have a label for the name of my items, so I'll say name here as a text and I'll

12

00:01:04.390  -->  00:01:10.340
add an input of type text, that's correct with ID name so that this label refers to it

13

00:01:10.660  -->  00:01:18.940
and then here, this should receive class form-control to make it look nice in Bootstrap's world. Next to

14

00:01:18.940  -->  00:01:23.360
it and that is why I chose to not give this column the full width,

15

00:01:23.770  -->  00:01:30.760
I want to have another div with let's say 2 because it's going to be a very small input,

16

00:01:30.820  -->  00:01:37.870
then also the form-group class here and in there, another label for the amount, so let's say

17

00:01:37.870  -->  00:01:48.750
amount here and then an input of type text here or maybe even of type number to be honest which gets

18

00:01:48.750  -->  00:01:54.430
the ID, amount and then a class form-control.

19

00:01:54.450  -->  00:02:02.970
So that's give us the inputs the user will later use to add new ingredients, below my inputs here, I'll

20

00:02:02.970  -->  00:02:09.590
add another row which will now span the full width and here I want to have a couple of buttons which allow

21

00:02:09.590  -->  00:02:14.880
me to manage this item creation or editing process.

22

00:02:15.200  -->  00:02:21.500
The first button I'll add here with the style of btn btn-success to make it look green in Bootstrap's

23

00:02:21.500  -->  00:02:27.040
world will be of type submit because this button should actually submit the form later

24

00:02:27.230  -->  00:02:35.390
and I will say add there because it allows us to add a new item. The second button will be of type btn

25

00:02:35.390  -->  00:02:37.930
because it should not submit the form,

26

00:02:38.000  -->  00:02:45.950
this button should simply delete the selected ingredient because later we will be able to click

27

00:02:45.950  -->  00:02:49.570
an ingredient and it will then be loaded into the input fields up here

28

00:02:49.940  -->  00:02:53.310
and if we click delete, well it simply will be removed,

29

00:02:53.420  -->  00:03:00.080
so delete item or just delete maybe and then a last one which allows us to clear the form.

30

00:03:00.170  -->  00:03:05.700
If we loaded the item we wanted to edit and then decided to not do that,

31

00:03:05.900  -->  00:03:08.040
I want to have a button which allows me to clear the form,

32

00:03:08.090  -->  00:03:12.380
so here I will maybe make this blue with button primary.

33

00:03:12.380  -->  00:03:16.430
If we save this, this is actually how I want this form to look.

34

00:03:16.430  -->  00:03:22.810
We have an input field for the amount, for the name and our buttons which later will be filled with some

35

00:03:22.820  -->  00:03:25.760
life so that we can manage this ingredient.
