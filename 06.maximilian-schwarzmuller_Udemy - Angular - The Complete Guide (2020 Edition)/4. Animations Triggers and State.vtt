WEBVTT
1

00:00:01.560  -->  00:00:06.510
England you animations which we use and a component since you want to use them in a template are set

2

00:00:06.510  -->  00:00:09.030
up and the app component decorator.

3

00:00:09.120  -->  00:00:14.740
Here we have d any maze sions aere and indeed array.

4

00:00:14.760  -->  00:00:21.060
We did find the animations this template should be aware of any missions are generally types of code

5

00:00:21.100  -->  00:00:28.320
as we write it here in our times file but it's very easy to understand how we manipulate certain styles

6

00:00:28.320  -->  00:00:34.470
of elements since there we will use the same names as we use with normal SEUS styles but you'll see

7

00:00:34.470  -->  00:00:35.460
what I mean.

8

00:00:35.460  -->  00:00:39.100
So how does it English to animation look like how is it defined.

9

00:00:39.540  -->  00:00:42.060
Each animation has a Dreger.

10

00:00:42.060  -->  00:00:48.190
So we need to add Draeger and trigger needs to be imported from an angular COOREY that will split as

11

00:00:48.190  -->  00:00:54.060
that were multiple lines because I will import a couple of our methods as well with a trigger which

12

00:00:54.060  -->  00:00:55.450
is a function.

13

00:00:55.560  -->  00:01:02.970
We tell you that we wanted to find a certain name which we can place in our dorm and our template which

14

00:01:02.970  -->  00:01:07.270
should then if it is placed there trigger a certain animation.

15

00:01:07.380  -->  00:01:14.490
So let's give it any name I'll choose div State since I want to manipulate the state of this div element

16

00:01:14.490  -->  00:01:14.590
.

17

00:01:14.670  -->  00:01:16.690
This name is totally up to you.

18

00:01:17.070  -->  00:01:18.760
So that is a trigger.

19

00:01:18.780  -->  00:01:20.570
That alone won't do anything though.

20

00:01:20.680  -->  00:01:23.010
I want to attach some animations or something.

21

00:01:23.010  -->  00:01:24.590
What does trigger she will do.

22

00:01:24.760  -->  00:01:31.110
So the second argument to a trigger function defines the animation this triggers should toggle.

23

00:01:31.110  -->  00:01:35.900
Now any mation is of type animation meta data as you can see here.

24

00:01:35.970  -->  00:01:42.120
And this actually simply is an array so we pass an array as the second argument.

25

00:01:42.120  -->  00:01:48.690
Now with that triggers set up and even though I have no animation added yet I can go back to the template

26

00:01:49.080  -->  00:01:55.500
and add this trigger to this day if I do this by using square brackets like when using property binding

27

00:01:55.800  -->  00:02:03.960
but then apt and not the name of the trigger which would be div state cell this trigger configured here

28

00:02:04.260  -->  00:02:09.240
indeed High-School code is now used here and does attaches it to that death.

29

00:02:09.300  -->  00:02:14.370
Now we need to bind that to something because the animation I'm going to the final seconds should run

30

00:02:14.370  -->  00:02:15.390
all the time.

31

00:02:15.630  -->  00:02:23.190
So here we need to kind of YEM bind the condition which then controls which part of that animation we're

32

00:02:23.190  -->  00:02:25.290
going to set up should run.

33

00:02:25.290  -->  00:02:31.980
I'm going to wind this to a simple property named state which doesn't exist yet which I'll treat my

34

00:02:31.980  -->  00:02:38.930
component a normal property in that component state which I will set to normal initially.

35

00:02:39.030  -->  00:02:39.870
That is up to you.

36

00:02:39.870  -->  00:02:45.630
That could also be a number or whatever you like that is totally unrelated to you or any mation or due

37

00:02:45.630  -->  00:02:47.550
to the angle to animations in general.

38

00:02:47.550  -->  00:02:53.100
But we will use this state property and the different values that can have in our trigger up here.

39

00:02:53.100  -->  00:02:55.050
Now how does it work.

40

00:02:55.440  -->  00:03:03.720
Well let's say we want to define two states normal which is which it is set to by default and then we

41

00:03:03.720  -->  00:03:06.040
want to give it a number state.

42

00:03:06.510  -->  00:03:12.270
Let's say highlight it let's say we want to have animation between two states and that is important

43

00:03:12.280  -->  00:03:12.370
.

44

00:03:12.450  -->  00:03:17.110
How Eylandt to any nation's work you transition from state 1 to state 2.

45

00:03:17.190  -->  00:03:24.210
You work with states you don't have to name the property which controls your state state as I do but

46

00:03:24.210  -->  00:03:29.110
it makes sense year since we're talking about different states of that animation.

47

00:03:29.220  -->  00:03:36.870
So we define such a new state in our animation every simply bypassing state and importing data from

48

00:03:36.930  -->  00:03:40.940
at angular coord to that's also animation related method.

49

00:03:40.950  -->  00:03:46.870
Now as I said we will at least have two states here to have something to transition from and to.

50

00:03:46.950  -->  00:03:47.560
Side note.

51

00:03:47.580  -->  00:03:51.340
I will show you a different set up in one of the next videos.

52

00:03:51.600  -->  00:03:53.310
And then we set up each state.

53

00:03:53.310  -->  00:03:55.270
Now we give it a name normal.

54

00:03:55.290  -->  00:04:00.570
And this state here of course should match the state down there because I want to use the state I actually

55

00:04:00.570  -->  00:04:05.310
use in my template or in the typescript code so I'll use normal year.

56

00:04:05.310  -->  00:04:10.830
And here let's say highlighted both names are up to you just make sure that you actually use them like

57

00:04:10.860  -->  00:04:16.470
I do here and therefore it and also in a template where I bind to state.

58

00:04:16.470  -->  00:04:19.510
So how should the normal state look like that.

59

00:04:19.500  -->  00:04:26.670
So the second argument of the state method here we pass a style object where a style method also imported

60

00:04:26.670  -->  00:04:28.500
from an angle or core.

61

00:04:28.500  -->  00:04:29.930
So that's yet another method.

62

00:04:29.940  -->  00:04:33.260
But in this method we now define the style of the state.

63

00:04:33.390  -->  00:04:35.220
So we pass it Schulthess grip object.

64

00:04:35.220  -->  00:04:39.450
And here it's almost like writing C S S code but don't use any dashes.

65

00:04:39.480  -->  00:04:41.990
So no background color like this.

66

00:04:42.480  -->  00:04:45.130
So how do we want to set Up-State here.

67

00:04:45.330  -->  00:04:50.520
Well actually I want to set the background color and I can do this by enclosing it in single quotes

68

00:04:50.850  -->  00:04:55.710
or alternatively by using the camel case syntax like this.

69

00:04:55.710  -->  00:05:01.480
So I'll choose the first syntax with single quotes here and then as a background color to red.

70

00:05:01.500  -->  00:05:08.130
Let's say this is my initial state that the background color is red.

71

00:05:08.130  -->  00:05:20.760
I also want to give it to one to transform it to set translate X to zero to have it at its default position

72

00:05:20.760  -->  00:05:22.720
and not move it anywhere to the left or right.

73

00:05:22.740  -->  00:05:26.080
So this is normal C-s as styling here.

74

00:05:26.310  -->  00:05:34.560
Be aware that we don't see the diff as of now though because well it is a normal day of year and it

75

00:05:34.560  -->  00:05:39.990
only has our state and even though if we were in the normal state we only set background color in the

76

00:05:39.990  -->  00:05:42.800
position but not the width and height.

77

00:05:42.840  -->  00:05:47.490
So in that template Let's quickly go to that depth and add a normal style.

78

00:05:47.520  -->  00:05:54.090
Totally unrelated to and let you set the width to 100 pixels and the height to 100 pixels so that we

79

00:05:54.090  -->  00:05:59.300
can see it back to the type of code we set our normal state.

80

00:05:59.310  -->  00:06:05.610
Now we want to do the same for the highlighted state here I also pass a shallow script object.

81

00:06:05.610  -->  00:06:09.650
And if we highlight it let's say we want to set the background color.

82

00:06:09.660  -->  00:06:14.200
Now I'm deliberately using the syntax to blue.

83

00:06:14.250  -->  00:06:21.210
We also want to transform it and move it and we want to move it 100 pixels to to right.

84

00:06:21.210  -->  00:06:24.780
Let's say this is the highlighted state.

85

00:06:24.840  -->  00:06:33.270
Now if I save this with NG serve running to see the application if this reloads we see the red rectangle

86

00:06:33.270  -->  00:06:35.240
or square here all ready.

87

00:06:35.410  -->  00:06:38.890
Rizzio Square because we saw it set the width and height here.

88

00:06:39.180  -->  00:06:45.810
But the red color clearly stems from our normal state which we set up here in a site property which

89

00:06:45.810  -->  00:06:50.010
we blind to our deaf state which again is the trigger.

90

00:06:50.010  -->  00:06:56.220
We're setting up here as animation so we don't have an animation yet but an animation is always just

91

00:06:56.220  -->  00:07:02.400
a movement or a journey from one stage to the other and at least we're at the beginning stage now in

92

00:07:02.400  -->  00:07:03.120
the next few.

93

00:07:03.120  -->  00:07:08.730
We'll have a look at how we could get to highlight it and how we can ANY made to transition between

94

00:07:08.730  -->  00:07:10.960
the two states.
