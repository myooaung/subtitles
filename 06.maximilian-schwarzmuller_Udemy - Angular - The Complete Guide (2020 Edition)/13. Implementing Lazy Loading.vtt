WEBVTT
1
00:00:02.210 --> 00:00:06.930
Untuk ini, ini adalah aplikasi tanpa malas memuat aplikasi soda seperti yang kita miliki saat ini.

2
00:00:06.930 --> 00:00:16.310
Dan jika Anda pergi ke tab Network dan memuat ulang aplikasi di sini di halaman ini dan dikonfirmasi. Anda lihat kami

3
00:00:16.310 --> 00:00:18.670
mengunduh banyak file di sini.

4
00:00:18.740 --> 00:00:21.390
Kami punya kami biarkan aku menyusut ini.

5
00:00:21.410 --> 00:00:24.400
Kami adalah orang-orang yang salah memulai sebagai penjual.

6
00:00:24.410 --> 00:00:25.550
Jazz utama.

7
00:00:25.670 --> 00:00:28.300
Ini untuk file JavaScript.

8
00:00:28.460 --> 00:00:32.170
Dan kami dalam mode pengembangan di sini yang mengapa mereka sangat besar.

9
00:00:32.180 --> 00:00:33.590
Mereka akan menjadi lebih kecil.

10
00:00:33.590 --> 00:00:37.700
Kami membuat aplikasi untuk produksi karena kode ini tidak dioptimalkan sama sekali.

11
00:00:37.760 --> 00:00:43.710
Ini berisi banyak fitur debug sehingga nanti akan jauh lebih kecil dan kita akan melihatnya nanti.

12
00:00:43.880 --> 00:00:50.810
Tetapi saat ini Anda melihat kami memiliki file yang cukup besar di sini untuk megabita 100 kilobyte,

13
00:00:51.080 --> 00:00:53.270
hampir satu megabita, 236 kilobyte.

14
00:00:53.270 --> 00:00:59.360
Sekarang lagi ini akan menyusut secara signifikan tetapi masih ini adalah ukuran file kita saat ini dengan pemuatan malas

15
00:00:59.360 --> 00:01:01.010
kita harus dapat mengurangi itu.

16
00:01:01.610 --> 00:01:03.670
Bagaimana cara kita menambahkan pemuatan malas.

17
00:01:03.740 --> 00:01:10.520
Mari kita mulai dengan modul resep karena misalnya di sini ketika kita tidak dikonfirmasi kita tentu tidak perlu

18
00:01:10.520 --> 00:01:16.550
memuat ke kode modul resep karena kita bahkan tidak dapat mengakses apa pun dari modul resep

19
00:01:16.550 --> 00:01:17.480
di sini.

20
00:01:17.510 --> 00:01:22.280
Mungkin juga tidak masuk akal untuk memuat modul daftar belanja walaupun kita dapat mengaksesnya

21
00:01:22.280 --> 00:01:25.570
karena kecuali kita melakukannya, tidak perlu mengunduh kode itu.

22
00:01:25.700 --> 00:01:28.500
Jadi mari kita mulai dengan modul resep.

23
00:01:28.520 --> 00:01:34.560
Di sana kami memiliki modul resep dan kami memiliki akarnya sendiri di sini dan modul perutean resep.

24
00:01:34.670 --> 00:01:42.290
Sekarang memiliki root yang terdaftar di sini adalah titik awal yang penting untuk pemuatan yang malas agar

25
00:01:42.290 --> 00:01:45.480
modul fitur Anda perlu membawa root sendiri.

26
00:01:45.530 --> 00:01:48.760
Seperti yang kita lakukan di sini ia perlu membawa konfigurasi root sendiri.

27
00:01:48.770 --> 00:01:54.030
Kami melakukan itu di sini dan perlu membawanya bersama anak Anda yang juga kami lakukan di sini.

28
00:01:54.080 --> 00:01:57.760
Sekarang satu hal masih perlu mengubah jalan itu.

29
00:01:57.830 --> 00:01:58.920
Resep di sini.

30
00:01:59.120 --> 00:02:05.180
Saya akan mengubahnya menjadi jalur kosong karena sekarang kita perlu menambahkan sesuatu ke modul perutean aplikasi

31
00:02:05.180 --> 00:02:11.980
agar pemuatan malas berfungsi di sini saya akan menambahkan lagi rute lain dan itu akan menjadi rute untuk resep.

32
00:02:11.990 --> 00:02:20.670
Jadi jalur yang baru saja saya hapus dari modul resep sekarang di sini saya di impor modul perutean aplikasi Saya menambahkan jalur

33
00:02:20.700 --> 00:02:28.860
itu lagi di sini tapi sekarang saya tidak menambahkan komponen yang ingin saya muat tetapi Anda menambahkan memuat anak-anak.

34
00:02:29.010 --> 00:02:39.300
Itu properti khusus dalam konfigurasi root yang dipahami sudut sebagai polisi hanya memuat konten kode atau modul yang

35
00:02:39.330 --> 00:02:46.280
akan saya tunjukkan ketika ada saat pengguna mengunjungi jalur ini di sini.

36
00:02:46.620 --> 00:02:48.650
Mari saya tunjukkan apa artinya ini.

37
00:02:48.810 --> 00:02:54.480
Kita sekarang dapat menambahkan string di sini bukan tipe bukan tipe komponen.

38
00:02:54.480 --> 00:03:00.270
Anda mengarahkannya dengan string yang merupakan jalur ke modul yang ingin Anda muat saat halaman

39
00:03:00.270 --> 00:03:02.700
ini atau saat jalur ini dikunjungi.

40
00:03:02.700 --> 00:03:12.600
Dan saya tentu saja ingin memuat secara relatif dari modul perutean aplikasi folder resep saya dan mereka

41
00:03:12.600 --> 00:03:18.640
adalah modul resep bukan modul perutean resep tetapi modul resep.

42
00:03:18.930 --> 00:03:23.910
Dan sekarang Anda juga perlu menambahkan sesuatu di sini bukan hanya jalan

43
00:03:23.910 --> 00:03:29.160
tetapi Anda juga perlu menambahkan nama modul itu karena sudut tidak bisa tahu

44
00:03:29.400 --> 00:03:37.680
itu dan perlu tahu nama kelas karena secara teknis akan pergi ke jalan itu dan kemudian mencoba mengimpor secara dinamis objek tertentu

45
00:03:37.680 --> 00:03:42.840
dari file itu dan secara teoritis yang dapat dinamai apa saja, kami tentu

46
00:03:42.840 --> 00:03:49.740
saja mengikuti konvensi penamaan penamaan modul resep ini dalam kasus ini pada tahun ketika nama file tersebut dinamai

47
00:03:49.740 --> 00:03:56.550
resep dot modul tetapi tidak ada yang memaksa kami untuk mengikuti pola penamaan itu dan oleh karena itu

48
00:03:56.760 --> 00:04:04.110
kami secara eksplisit harus memberi tahu sudutnya apa nama dari kelas eksportir dalam file itu dan Anda menambahkannya dengan

49
00:04:04.110 --> 00:04:11.490
menambahkan tag hash dan kemudian nama itu sehingga memuat poin anak-anak di resep slash resep slash resep slash modul dot

50
00:04:11.490 --> 00:04:22.090
bertitik TS dan kemudian tag hash dalam nama kelas itu efek yang akan menjadi bahwa sekarang kode dibagi pada titik itu dan semuanya dari jalur ini di sini.

51
00:04:22.110 --> 00:04:26.100
Jadi bukan modul yang lebih tinggi dan semua yang digunakan modul.

52
00:04:26.130 --> 00:04:32.820
Jadi semua deklarasi dari modul itu akan dimasukkan ke dalam bundel kode terpisah yang kemudian diunduh dan

53
00:04:32.820 --> 00:04:42.010
diteruskan pada Mond segera setelah pengguna mengunjungi halaman ini tetapi tidak lebih cepat dan itu hanya dicapai oleh segel sudut yang pada dasarnya menganalisis

54
00:04:42.010 --> 00:04:49.930
ini ketika kita membangun aplikasi kami dan kemudian akan menganalisis modul resep di mana kami tunjukkan di sini dan itu akan

55
00:04:49.930 --> 00:04:57.290
melihat apa yang kami nyatakan di sini dan seterusnya dan kami akan meletakkan kode semua hal yang kami nyatakan

56
00:04:57.310 --> 00:05:04.060
di sini ke dalam bungkusan terpisah yang sekarang dibangun terpisah secara terpisah dari bundel utama kami yang mana

57
00:05:04.150 --> 00:05:12.040
aplikasi mulai penting untuk ini memiliki efek nyata dan kode aman adalah bahwa Anda memiliki pernyataan impor ini hanya dalam modul

58
00:05:12.400 --> 00:05:19.090
resep dan Anda tidak memiliki pernyataan impor lama untuk mengatakan komponen resep di katakanlah modul aplikasi karena

59
00:05:19.090 --> 00:05:24.400
pada akhirnya untuk proses pembangunan itu penting apa yang Anda impor di sini

60
00:05:24.400 --> 00:05:30.880
di atas apa yang Anda impor di sini seperti itu membentuk modul yang harus saya hapus dalam

61
00:05:30.910 --> 00:05:36.910
modul aplikasi Apa yang Anda impor di sini adalah al Aku digabung menjadi satu bundel

62
00:05:36.910 --> 00:05:37.730
kode.

63
00:05:37.810 --> 00:05:43.750
Jadi dalam modul resep pada akhirnya proses pembuatan akan melihat impor ini yang diperlukan agar ini berfungsi tetapi akan

64
00:05:43.750 --> 00:05:48.250
melihat impor ini dan apa pun yang disertakan di sini akan dimasukkan dalam bundel

65
00:05:48.250 --> 00:05:49.280
yang sama.

66
00:05:49.390 --> 00:05:56.650
Jadi, jika Anda memiliki nomor, bahkan impor yang tidak digunakan, tambahkan sesuatu seperti ini di modul aplikasi Anda, maka bagian

67
00:05:56.650 --> 00:06:02.610
ini akan dimasukkan ke dalam bundel kode modul aplikasi meskipun Anda tidak menggunakannya di sana.

68
00:06:02.620 --> 00:06:08.140
Jadi untuk mendapatkan efek terbesar dan menyimpan ke sebagian besar kode, pastikan impor Anda

69
00:06:08.470 --> 00:06:16.240
di atas benar, jika benar maka Anda akan mendapatkan efek terbesar dari kode yang dipecah menjadi modul perutean resep. Penting

70
00:06:16.240 --> 00:06:21.190
bagi Anda untuk memiliki jalur kosong karena Anda harus ingat bahwa

71
00:06:21.190 --> 00:06:26.770
kita sekarang mengubah konflik rute untuk memasukkan jalur Anda dalam modul perutean aplikasi dan

72
00:06:26.770 --> 00:06:33.670
itu akan memuat modul resep setiap kali kita mengunjungi resep slash dan mereka menawarkan ke dalam modul resep

73
00:06:33.730 --> 00:06:39.730
kita sekarang sudah berada di slash resep dan karenanya di sini di modul perutean resep

74
00:06:39.730 --> 00:06:47.610
yang hanya menendang begitu kita mengunjungi modul ini kita harus mulai dengan Slash nothing karena sekali lagi kita sudah berada

75
00:06:47.610 --> 00:06:54.570
di slash recipes sekarang menyimpan semua itu dan berhenti dari proses build Anda dan mulai kembali melayani energi

76
00:06:54.570 --> 00:07:01.000
karena setelah menambahkan lazy loading Anda harus me-restart itu untuk memastikan bahwa itu benar-benar berpengaruh dan diperhitungkan.

77
00:07:01.180 --> 00:07:07.350
Sekarang di sini saya mendapatkan kesalahan dan masalahnya adalah di sini kita harus menghapus dot t s.

78
00:07:07.350 --> 00:07:15.660
Sekarang satu catatan tentang sintaks ini di Penghindaran sudut baru Anda memiliki sintaks alternatif dan sintaks ini bahkan mungkin

79
00:07:15.710 --> 00:07:18.650
gagal dalam proyek yang lebih baru.

80
00:07:18.810 --> 00:07:25.140
Jadi jika Anda mendapatkan kesalahan seperti modul tidak dapat ditemukan ketika mencoba ini yang akan dilakukan dalam hitungan detik atau

81
00:07:25.680 --> 00:07:30.510
jika Anda ingin beralih ke sintaks yang lebih modern dan berbeda karena alasan lain.

82
00:07:30.660 --> 00:07:36.840
Berikut adalah sintaks yang jelas yang dapat Anda gunakan alih-alih memiliki string ini di sini untuk mengidentifikasi modul

83
00:07:36.840 --> 00:07:38.080
yang harus dimuat.

84
00:07:38.280 --> 00:07:45.600
Anda dapat menambahkan fungsi di sini fungsi udara anonim dan di badan fungsi Anda memanggil impor seperti fungsi sehingga

85
00:07:45.600 --> 00:07:51.780
Anda tidak menggunakan impor karena kami melakukannya di sana untuk mengimpor modul tetapi Anda menyebutnya secara

86
00:07:51.870 --> 00:07:56.610
dinamis sebagai fungsi untuk mengimpor Anda kemudian lulus jalan menuju modul.

87
00:07:56.610 --> 00:08:05.310
Jadi modul slash resep slash resep dan Anda sekarang Anda tidak menambahkan tag hash setelahnya untuk

88
00:08:05.310 --> 00:08:09.210
mengidentifikasi modul tetapi impor menyelesaikan janji.

89
00:08:09.540 --> 00:08:16.320
Jadi sekarang Anda panggil di sana dan di janji ini atau di blok ini maka Anda meneruskan fungsi yang pada

90
00:08:16.320 --> 00:08:18.780
akhirnya menerima modul yang dimuat di sini.

91
00:08:18.870 --> 00:08:27.030
Oleh karena itu saya menamai argumen M dan pada objek modul ini Anda dapat mengekstrak modul Anda modul

92
00:08:27.030 --> 00:08:37.540
resep dalam hal ini sehingga ini bukan akhir sintaks alternatif yang dapat Anda gunakan untuk memuat rute dengan malas daripada menggunakan string yang Anda

93
00:08:37.780 --> 00:08:42.360
lihat di video mereka setelah Anda dapat menggunakan fungsi ini.

94
00:08:42.400 --> 00:08:45.790
Sekarang umumnya tidak masalah yang mana dari dua pendekatan yang Anda gunakan.

95
00:08:45.790 --> 00:08:47.510
Tapi ini yang lebih modern.

96
00:08:47.530 --> 00:08:52.420
Dan jika Anda mendapatkan kesalahan dengan pendekatan yang saya tunjukkan dalam

97
00:08:52.420 --> 00:08:59.480
kuliah yang merupakan string berdasarkan satu peralihan ke yang ini, mari kita mulai kembali dan dia melayani penulis.

98
00:08:59.570 --> 00:09:01.130
Dan ini terlihat bagus.

99
00:09:01.130 --> 00:09:08.810
Namun sekarang di ulang ini Anda harus mendapatkan kesalahan seperti ini dan apakah Anda memiliki gagasan tentang apa

100
00:09:08.810 --> 00:09:12.740
yang mungkin menyebabkan itu dengan baik dalam modul aplikasi.

101
00:09:12.740 --> 00:09:19.940
Saya masih mengimpor modul resep sekarang modul resep adalah modul yang sekarang kami coba muat dengan

102
00:09:19.940 --> 00:09:24.110
malas jadi kami hanya perlu bagian ini di sini.

103
00:09:24.110 --> 00:09:29.480
Rute ini di mana kita menggunakan anak-anak rendah kita tidak boleh mengimpor modul resep lagi.

104
00:09:29.600 --> 00:09:35.160
Kalau tidak, kita mengimpornya dengan penuh semangat dan malas pada saat yang sama dan itu akan menyebabkan kesalahan.

105
00:09:35.240 --> 00:09:37.540
Tentu saja semua dihapus itu pernyataan impor.

106
00:09:37.850 --> 00:09:42.950
Kalau tidak, secara teknis akan berfungsi tetapi Anda tidak akan menyimpan apa pun dalam ukuran kode.

107
00:09:43.040 --> 00:09:49.130
Sekarang jika itu aman Anda harus dapat menyimpan ini kompilasi lagi dan sekarang memang terlihat bagus.

108
00:09:49.130 --> 00:09:50.100
Tidak ada kesalahan

109
00:09:50.160 --> 00:09:57.110
Dan sekarang mari kita pergi ke tab Network di sini dan memuat kembali halaman ini sekarang file vendor js masih cukup besar

110
00:09:57.110 --> 00:10:03.950
karena itu hanya sudut tetapi J. utama S. sebenarnya menyusut sebelumnya yang saya pikir seratus

111
00:10:03.950 --> 00:10:05.390
tujuh belas kilobyte.

112
00:10:05.390 --> 00:10:07.840
Jadi pasti di atas seratus.

113
00:10:07.930 --> 00:10:09.590
Sekarang 75.

114
00:10:09.620 --> 00:10:19.440
Jadi ini menyusut dan kita dapat melihat ke mana ia pergi jika kita membersihkannya di sini dan kita login dengan kredensial yang valid.

115
00:10:19.640 --> 00:10:28.870
Dan sekarang kita diarahkan ke resep dan memang di sini Anda sekarang melihat bahwa Anda memiliki file resep modul jazz

116
00:10:28.870 --> 00:10:30.580
ini di sini.

117
00:10:30.580 --> 00:10:37.000
Penamaan mungkin berbeda tetapi memiliki 241 kilobyte di mana bundel kami secara efektif menyusut bundaran dan kumpulan

118
00:10:37.440 --> 00:10:43.510
data malas memuat potongan kode yang memuat malas modul dan kami dapat berinteraksi dengan yang sama

119
00:10:43.510 --> 00:10:44.410
seperti sebelumnya.

120
00:10:44.410 --> 00:10:51.650
Jadi itu semua berfungsi tapi sekarang kita malas memuat dan ini menyusut ukuran bundel awal kami.

121
00:10:51.670 --> 00:10:57.040
Sekarang tentu saja bundel besar untuk satu bundel megabita tidak menyusut tetapi sekali lagi

122
00:10:57.040 --> 00:11:04.810
ini akan dioptimalkan nanti dan semakin besar aplikasi Anda tumbuh semakin besar fitur semakin malas memuat semakin besar efeknya tentu

123
00:11:04.810 --> 00:11:11.020
saja jika Anda memiliki celah besar dengan seluruh area dalam aplikasi yang mungkin tidak pernah dikunjungi

124
00:11:11.020 --> 00:11:17.470
pengguna jika Anda malas memuatnya yang mungkin berdampak besar karena Anda dapat menyimpan begitu banyak dalam bundel

125
00:11:17.470 --> 00:11:18.670
awal itu.

126
00:11:18.670 --> 00:11:24.490
Sekarang tentu saja masuk akal untuk malas memuat bagian dari aplikasi di mana setidaknya ada sedikit

127
00:11:24.490 --> 00:11:28.150
kemungkinan pengguna tidak pernah menggunakannya misalnya dalam aplikasi ini.

128
00:11:28.150 --> 00:11:33.160
Anda bisa berpendapat bahwa malas memuat halaman tidak masuk akal karena pengguna akan selalu

129
00:11:33.160 --> 00:11:39.210
melihat bahwa meskipun saya kira itu juga hanya benar jika Anda menganggap bahwa pengguna sudah terkunci di

130
00:11:39.220 --> 00:11:40.740
pengguna tidak masuk.

131
00:11:40.750 --> 00:11:46.690
Kita dapat mengunjungi halaman resep dan oleh karena itu kita tidak akan pernah melihat ini dari halaman dan karena itu bahkan malas memuat

132
00:11:46.690 --> 00:11:48.490
Anda dari halaman mungkin masuk akal.

133
00:11:48.640 --> 00:11:55.090
Tetapi jika Anda memiliki beberapa halaman yang akan selalu dikunjungi atau dengan peluang yang sangat sangat sangat sangat tinggi

134
00:11:55.090 --> 00:12:00.670
maka lazy memuat halaman itu atau modul itu mungkin tidak sepadan karena Anda harus mempertimbangkan bahwa lazy

135
00:12:00.670 --> 00:12:07.060
loading tentu saja disertai dengan kelemahan tambahan itu. bundel kode sedang diunduh nanti dan oleh karena itu setelah diperlukan

136
00:12:07.060 --> 00:12:12.180
mungkin ada sedikit keterlambatan dalam aplikasi Anda karena kode itu perlu diunduh dan dilewati.

137
00:12:12.220 --> 00:12:17.080
Jadi pada dasarnya Anda hanya menunda itu meskipun El semua menunjukkan teknik optimasi dengan yang

138
00:12:17.080 --> 00:12:17.590
kedua.
