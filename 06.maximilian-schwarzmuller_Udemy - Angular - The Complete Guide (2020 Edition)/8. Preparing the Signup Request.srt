1
00:00:02,260 --> 00:00:07,990
Anda dapat menggunakan google untuk API penangkapan jauh dan Anda harus menemukan artikel di dokumen

2
00:00:08,350 --> 00:00:14,920
resmi yang memberi Anda gambaran umum tentang penangkapan dan menawarkan poin firebase kepada Anda untuk membuat pengguna dan

3
00:00:14,920 --> 00:00:17,760
masuk pengguna di sini di sebelah kanan.

4
00:00:17,760 --> 00:00:23,560
Anda melihat berbagai hal yang dapat Anda lakukan dengan itu kembali dan dengan yang REST API firebase menawarkan kepada Anda.

5
00:00:23,640 --> 00:00:29,550
Ini adalah REST API yang berbeda dari yang kami gunakan sebelum itu bukan REST API database kami yang kami buat secara otomatis.

6
00:00:29,550 --> 00:00:35,470
Ini adalah API otentikasi khusus yang ditawarkan oleh Firebase dan kami hanya membutuhkan dua metode.

7
00:00:35,520 --> 00:00:41,010
Mendaftar pengguna dengan email dan kata sandi dan masuk pengguna dengan email dan kata sandi.

8
00:00:41,010 --> 00:00:44,640
Jadi tentu saja mari kita mulai dengan mendaftar pengguna karena kita tidak bisa masuk.

9
00:00:44,640 --> 00:00:45,870
Jika kami tidak memiliki pengguna.

10
00:00:45,870 --> 00:00:46,960
Baik.

11
00:00:47,010 --> 00:00:51,090
Ini adalah Anda L yang Anda harus mengirim permintaan Anda.

12
00:00:51,090 --> 00:00:57,060
Jadi ini adalah URL yang harus kami kirimkan permintaan kepada Anda dengan data ini dengan kata sandi email dan kemudian

13
00:00:57,060 --> 00:01:02,730
ini mengembalikan token aman yang juga harus kami tambahkan ke badan permintaan kami yang merupakan satu miliar yang

14
00:01:02,740 --> 00:01:04,570
pada dasarnya harus selalu benar.

15
00:01:04,620 --> 00:01:06,180
Firebase hanya butuh itu.

16
00:01:06,270 --> 00:01:09,780
Anda dapat mengabaikan bahwa API Anda mungkin tidak membutuhkannya.

17
00:01:09,900 --> 00:01:14,940
Sekarang kita akan mendapatkan kembali respons dengan misalnya alamat email.

18
00:01:14,940 --> 00:01:20,580
Gagasan pengguna karena firebase secara otomatis membuat ide unik baru untuk setiap pengguna.

19
00:01:21,030 --> 00:01:26,490
Dan kita semua mendapatkannya kembali. D. token yang merupakan token yang saya sebutkan pada slide sebelumnya.

20
00:01:26,490 --> 00:01:30,250
Jadi firebase sudah memberi kita token begitu kita mendaftar pengguna.

21
00:01:30,300 --> 00:01:35,170
Kami bahkan tidak perlu masuk ke sana setelah kami mendapatkan token itu secara otomatis ketika pengguna mendaftar.

22
00:01:35,220 --> 00:01:41,370
Kami juga mendapatkan infield kedaluwarsa yang memberi tahu kami berapa lama token itu akan valid karena untuk

23
00:01:41,550 --> 00:01:47,610
alasan keamanan token ini akan kedaluwarsa untuk firebase, misalnya hari saat ini kedaluwarsa setelah 1 jam.

24
00:01:47,610 --> 00:01:55,330
Setelah itu Anda bahkan harus menyegarkan mereka yang tidak akan mencakup satu tahun atau masuk lagi kembali ke tahun ini

25
00:01:55,370 --> 00:02:02,050
meskipun kami perlu mengirim permintaan ini dan itu menjerit untuk layanan baru di sini yang benar-benar berurusan dengan

26
00:02:02,050 --> 00:02:03,510
pengiriman permintaan itu.

27
00:02:03,640 --> 00:02:11,680
Jadi di semua folder saya akan menambahkan file uji anjing layanan saya yang merupakan layanan yang akan bertanggung jawab

28
00:02:11,770 --> 00:02:13,430
untuk mendaftar pengguna.

29
00:02:13,450 --> 00:02:19,370
Masuk pengguna dan kelola token pengguna saya itu di file layanan.

30
00:02:19,420 --> 00:02:28,540
Mari def untuk mengekspor kelas layanan dan layanan hutang akan menerima D di cek dekorator mangkuk yang diimpor dari di Angola

31
00:02:28,540 --> 00:02:34,610
Corps di mana saya akan menggunakan jalan pintas untuk menyediakannya dengan menetapkan disediakan ke

32
00:02:34,630 --> 00:02:40,150
rute di objek yang bisa kita lewati untuk injeksi alternatif akan menambahkannya ke

33
00:02:40,150 --> 00:02:42,370
array penyedia modul aplikasi.

34
00:02:42,370 --> 00:02:48,580
Sekarang dalam layanan hutang kita tentu saja dapat memulai relatif sederhana dengan menambahkan satu metode metode pendaftaran

35
00:02:48,760 --> 00:02:53,740
dan metode ini harus melakukan apa yang namanya harus masuk ke pengguna OP

36
00:02:53,860 --> 00:03:01,650
itu harus mengirim permintaan untuk mendaftar utang Anda adalah El karena itu kami akan membutuhkan H annular klien untuk DP dan ini

37
00:03:01,650 --> 00:03:02,500
perlu disuntikkan.

38
00:03:02,580 --> 00:03:06,960
Jadi mari kita tambahkan konstruktor dan sekarang pastikan Anda mendapat injeksi di sini.

39
00:03:07,020 --> 00:03:12,270
Bahkan jika Anda menyediakan di layanan dalam array penyedia modul aplikasi segera setelah Anda menyuntikkan layanan

40
00:03:12,270 --> 00:03:17,520
ke layanan yang Anda butuhkan di injeksi tidak harus dengan objek yang diteruskan ke sana

41
00:03:17,520 --> 00:03:20,660
tetapi Anda membutuhkan dekorator injeksi di itu sendiri.

42
00:03:21,060 --> 00:03:28,080
Dan sekarang kita dapat menyuntikkan H2 yang ditolak yang akan saya simpan di properti pribadi bernama H2 DPI

43
00:03:28,080 --> 00:03:35,310
dan tipe akan menjadi klien dan diimpor dari ET slash sudut umum slash H2 P dalam metode pendaftaran sekarang

44
00:03:35,310 --> 00:03:39,000
kita dapat menggunakan H menjadi klien untuk mengirim had.

45
00:03:39,030 --> 00:03:42,410
Mari kita lihat permintaan posting dokumentasi di sini.

46
00:03:42,690 --> 00:03:48,780
Kirim permintaan posting ke tempat Anda keluar jadi salin bahwa Anda semua di sini dan di sini akan menggunakan metode posting

47
00:03:49,350 --> 00:03:51,390
dan kemudian mengirim permintaan ke ini.

48
00:03:51,390 --> 00:03:52,450
Kamu keluar

49
00:03:52,830 --> 00:03:58,170
Sekarang harap dicatat bahwa dalam hal ini Anda adalah L, kami mendapatkan kunci API yang pada akhirnya

50
00:03:58,170 --> 00:04:04,830
hanya sesuatu yang harus Anda ganti dengan kunci API firebase Anda dan Anda dapat menemukan kunci API berbasis jauh itu di konsol

51
00:04:04,830 --> 00:04:12,120
web firebase Anda dan di sana dengan mengklik pada ikon roda gigi di bawah Pengaturan proyek dan kemudian kunci API ini di sini yang

52
00:04:12,120 --> 00:04:12,980
Anda butuhkan.

53
00:04:12,990 --> 00:04:20,660
Anda cukup menyalin dan menempelnya lalu mengganti kunci API di sini termasuk tanda kurung dengan salinan itu untuk menjaga

54
00:04:20,660 --> 00:04:25,670
ini adalah U. R. L ..

55
00:04:25,690 --> 00:04:28,570
Kami harus mengirim permintaan ke Nelson yang seharusnya meminta.

56
00:04:28,570 --> 00:04:31,010
Kami tentu juga perlu melampirkan beberapa data.

57
00:04:31,030 --> 00:04:36,790
Jadi izinkan saya melampirkan objek javascript di sini dan bahwa objek JavaScript harus memiliki properti gratis

58
00:04:36,790 --> 00:04:37,870
ke properti gratis.

59
00:04:37,870 --> 00:04:42,910
Titik akhir ini mengharapkan kata sandi email dan mengembalikan token aman.

60
00:04:42,970 --> 00:04:44,710
Ini adalah potongan data gratis.

61
00:04:44,710 --> 00:04:51,150
Ini titik akhir ujung belakang memerlukan dan oleh karena itu saya akan mengirim email saya di sini dan saya berharap untuk mendapatkannya di

62
00:04:51,160 --> 00:04:52,290
sini sebagai string.

63
00:04:52,360 --> 00:04:56,710
Saya selalu berharap untuk mendapatkan kata sandi sebagai string sehingga kami akan mengirim email ke sini.

64
00:04:56,710 --> 00:05:03,130
Kunci email mendapatkan nilai email di sini dan kemudian sama untuk Kata Sandi Kunci kata sandi mendapatkan nilai kata sandi

65
00:05:03,180 --> 00:05:03,730
itu.

66
00:05:03,810 --> 00:05:06,430
Nilainya di sini adalah argumen yang saya dapatkan.

67
00:05:06,430 --> 00:05:12,460
Anda dapat memberi nama yang berbeda untuk email dan kata sandi ini harus dinamai seperti ini karena API kami

68
00:05:12,490 --> 00:05:14,200
mengharapkan kunci ini dengan tepat.

69
00:05:14,380 --> 00:05:20,260
Ini juga mengharapkan token aman kembali sehingga Anda harus mengatur ini juga dan karena Anda dapat belajar di dokumen

70
00:05:20,260 --> 00:05:20,640
resmi.

71
00:05:20,650 --> 00:05:22,260
Ini harus selalu benar.

72
00:05:22,450 --> 00:05:25,300
Jadi mereka menawarkan, mari kita set ini menjadi kenyataan di sini.

73
00:05:25,300 --> 00:05:26,560
Sempurna.

74
00:05:26,560 --> 00:05:35,820
Jadi ini sekarang akan mengirim permintaan H ke B ke belakang dan di sini untuk ini Anda adalah L saat Anda mempelajari H ke garis puncak

75
00:05:35,820 --> 00:05:40,960
tidak melakukan apa-apa tanpa seseorang berlangganan sekalipun dan kami bahkan tidak memanggil metode pendaftaran,

76
00:05:40,960 --> 00:05:47,260
jadi mari kita mulai. kembalikan ini siap diamati sekarang sehingga kami dapat berlangganan dan Anda keluar dari

77
00:05:47,260 --> 00:05:52,690
komponen yang mana kami mungkin juga tertarik untuk mendapatkan respons itu karena jika kami mendapatkan

78
00:05:52,690 --> 00:05:58,300
kesalahan kami mungkin ingin menampilkan pesan kesalahan dan kami sedang menunggu untuk kami mungkin ingin menunjukkan

79
00:05:58,300 --> 00:06:03,370
beberapa indikator pemuatan, oleh karena itu mengembalikan indikator yang dapat diamati sehingga kami

80
00:06:03,370 --> 00:06:07,490
mengetahui kondisi permintaan saat ini dalam komponen tidak masuk akal.

81
00:06:09,220 --> 00:06:15,610
Kita juga dapat mendefinisikan format data yang akan kita dapatkan kembali karena kita akan mendapatkan kembali enam bidang ini di

82
00:06:16,360 --> 00:06:22,210
sini dan oleh karena itu saya akan membuat antarmuka baru di sini dan melayani karena saya hanya membutuhkannya

83
00:06:22,210 --> 00:06:29,990
di sini dan kami bahkan tidak perlu untuk mengekspor karena itu hanya akan menjadi antarmuka yang saya akan menamai data respons dan antarmuka ini

84
00:06:30,050 --> 00:06:36,800
mendefinisikan bagaimana objek seperti itu akan terlihat seperti bagaimana data tanggapan kami akan terlihat seperti dan itu akan memiliki enam properti

85
00:06:36,800 --> 00:06:43,630
saat Anda belajar jenis I . D. penyegaran email token token kedaluwarsa dan gagasan

86
00:06:43,640 --> 00:06:44,380
lokal.

87
00:06:45,020 --> 00:06:54,160
Jadi mari saya tambahkan semuanya sebagai string seperti yang akan Anda lihat di sini mereka semua adalah string saya. D. token adalah sebuah string Email adalah sebuah

88
00:06:54,160 --> 00:07:02,740
string maka yang kita dapatkan adalah token penyegaran dan berakhir di jadi penyegaran token adalah sebuah string yang kedaluwarsa

89
00:07:03,100 --> 00:07:05,530
dalam adalah sebuah string.

90
00:07:05,530 --> 00:07:12,730
Dan last but not least lokal saya. D. yang telah merosot pengguna I. D. itu juga sebuah string.

91
00:07:12,730 --> 00:07:15,350
Sekarang mengapa saya mendefinisikan antarmuka di sini.

92
00:07:15,410 --> 00:07:16,510
Ini sepenuhnya opsional.

93
00:07:16,510 --> 00:07:21,760
Anda tidak perlu melakukan itu, tetapi ini adalah praktik yang baik dalam sudut dan jenis yang disebut aplikasi untuk

94
00:07:21,760 --> 00:07:23,640
menentukan jenis data yang Anda gunakan.

95
00:07:23,770 --> 00:07:26,530
Dan ketika Anda belajar di usia menjadi modul klien.

96
00:07:26,800 --> 00:07:33,770
Ketika kami mengirim permintaan HP dengan H2 sudut untuk menjadi klien, metode ini membuat posting Anda berakhir.

97
00:07:33,910 --> 00:07:39,160
Ini adalah metode umum di mana kita bisa mengisyaratkan jenis data yang akan kita dapatkan kembali.

98
00:07:39,580 --> 00:07:45,730
Dan di sini kita tahu untuk permintaan posting ini kita akan mendapatkan kembali data dalam format ini yang sekarang persis format

99
00:07:45,730 --> 00:07:48,400
yang saya simpan dalam data tanggapan tidak aktif ini.

100
00:07:48,410 --> 00:07:53,450
Karenanya kita dapat menambahkan tanda kurung siku di sini dan cukup memberikan data respons di sini.

101
00:07:53,460 --> 00:07:59,230
Antarmuka ini baru saja kami buat di antara tanda kurung siku ini sehingga kami memberi tahu naskah naskah

102
00:07:59,230 --> 00:08:04,700
bahwa permintaan pos ini akan menghasilkan sebagai respons di mana tubuh kami menemukan data dalam format ini.

103
00:08:04,720 --> 00:08:07,940
Ini bisa membantu ketika kita ingin bekerja dengan respons itu.

104
00:08:09,540 --> 00:08:16,890
Dengan hal itu di kuliah berikutnya, kita akan benar-benar memecat metodenya dari dalam komponen tidak aktif kita dan juga

105
00:08:17,040 --> 00:08:22,050
memastikan kita menangani kesalahan potensial dan kita menangani kondisi pemuatan dengan benar.
