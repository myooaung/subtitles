WEBVTT
1
00:00:02.440 --> 00:00:05.140
[Autogenerated] will now continue our demonstration.

2
00:00:05.140 --> 00:00:08.760
Thes time will show how Aspect J based Spring a O.

3
00:00:08.760 --> 00:00:09.020
P.

4
00:00:09.020 --> 00:00:11.140
Is working.

5
00:00:11.140 --> 00:00:16.420
We'll focus on the aspect j annotations more exactly on the

6
00:00:16.420 --> 00:00:24.940
before annotation and on the after annotation.

7
00:00:24.940 --> 00:00:29.730
We would like to demonstrate a similar implementation this time using aspect.

8
00:00:29.730 --> 00:00:34.710
J Aspect J is an aspect oriented programming extension for

9
00:00:34.710 --> 00:00:37.930
the Java programming language aspect.

10
00:00:37.930 --> 00:00:41.890
J became the de facto standard for a Opie.

11
00:00:41.890 --> 00:00:45.340
Through its simplicity and usability.

12
00:00:45.340 --> 00:00:50.640
It uses annotations to define the cross cutting aspects functionality.

13
00:00:50.640 --> 00:00:53.350
We start from the same point ah,

14
00:00:53.350 --> 00:00:57.740
spring application containing a passenger class having an i.

15
00:00:57.740 --> 00:00:58.270
D.

16
00:00:58.270 --> 00:01:02.640
A constructor together and the two string method.

17
00:01:02.640 --> 00:01:05.810
We simulate the implementation of the dowel or data

18
00:01:05.810 --> 00:01:08.490
access object design pattern.

19
00:01:08.490 --> 00:01:12.650
The passenger dowel interface declares a get passenger

20
00:01:12.650 --> 00:01:15.150
method that is receiving an argument.

21
00:01:15.150 --> 00:01:19.880
The idea of the passenger we implement this interface

22
00:01:19.880 --> 00:01:23.140
through the passenger dow in class.

23
00:01:23.140 --> 00:01:28.460
These contains the map of the passenger that have already been retrieved.

24
00:01:28.460 --> 00:01:33.940
If the passenger already exists inside the map, we take it from there.

25
00:01:33.940 --> 00:01:37.940
Otherwise we constructed and put it in the map.

26
00:01:37.940 --> 00:01:38.970
For the moment,

27
00:01:38.970 --> 00:01:43.010
we are content to create the passenger with the help of the constructor

28
00:01:43.010 --> 00:01:47.440
instead of effectively introduced a persistence layer,

29
00:01:47.440 --> 00:01:49.680
we will do this at a later time.

30
00:01:49.680 --> 00:01:52.880
The current approaches enough to demonstrate the spring a dopey

31
00:01:52.880 --> 00:01:56.970
concepts in orderto work with the spring application.

32
00:01:56.970 --> 00:02:01.760
We added this spring bash context dependency into the palm dot XML

33
00:02:01.760 --> 00:02:07.090
dependency file and during the example one demonstration.

34
00:02:07.090 --> 00:02:10.900
We have already added the spring Desh es Opie and

35
00:02:10.900 --> 00:02:13.930
Spring Dash Aspects dependencies.

36
00:02:13.930 --> 00:02:19.380
The AARP dot xml beans definition file contains one single being introduced in

37
00:02:19.380 --> 00:02:27.410
the container passenger doll of type passenger Doll Imp.

38
00:02:27.410 --> 00:02:30.740
The current function that the only creates the context.

39
00:02:30.740 --> 00:02:32.620
Yes, the passenger Doll Bean.

40
00:02:32.620 --> 00:02:38.290
Yes, the passenger with its help, then closes the context.

41
00:02:38.290 --> 00:02:43.410
Let's see how it works.

42
00:02:43.410 --> 00:02:50.280
So we are still getting the passenger having I d one and

43
00:02:50.280 --> 00:02:51.910
we would like to introduce the spring.

44
00:02:51.910 --> 00:03:00.540
It'll be functionality this time working with Aspect G and its annotations.

45
00:03:00.540 --> 00:03:04.740
We create the logging as ____ class,

46
00:03:04.740 --> 00:03:10.670
but this class now is using annotations to define joint points.

47
00:03:10.670 --> 00:03:14.440
We use the aspect J point got language,

48
00:03:14.440 --> 00:03:20.510
so the classes annotated with aspect and there are two methods that

49
00:03:20.510 --> 00:03:26.210
before method annotated with before and showing as joined Point the

50
00:03:26.210 --> 00:03:30.590
execution of any method and English passenger.

51
00:03:30.590 --> 00:03:32.430
The method may belong toe.

52
00:03:32.430 --> 00:03:37.740
Any package may receive any arguments and may return anything,

53
00:03:37.740 --> 00:03:42.740
and there is an after method annotated with the after an imitation.

54
00:03:42.740 --> 00:03:48.520
The German point represents the execution of any method ending with passenger.

55
00:03:48.520 --> 00:03:51.340
The method may receive any argument,

56
00:03:51.340 --> 00:03:57.040
may return anything and may belong to any package.

57
00:03:57.040 --> 00:04:04.160
We need to add the GOP name space and the GOP XSD XML scam on

58
00:04:04.160 --> 00:04:09.120
definition that is used by the GOP name space.

59
00:04:09.120 --> 00:04:14.500
The AARP aspect J Dash Auto proceed directly from the spring configuration,

60
00:04:14.500 --> 00:04:17.640
enables the SPJ support.

61
00:04:17.640 --> 00:04:23.760
We need to add a logging aspect being belonging to the Logan Aspect class.

62
00:04:23.760 --> 00:04:29.500
This way, the aspect will enter under the management of the container.

63
00:04:29.500 --> 00:04:36.690
Let's see now how the application works and we're getting the

64
00:04:36.690 --> 00:04:49.000
ortolan functionality provided by the lower aspect, this time using Aspect J and before and after annotations

