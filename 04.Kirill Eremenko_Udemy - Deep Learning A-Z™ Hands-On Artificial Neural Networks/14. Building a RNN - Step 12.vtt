WEBVTT
1
1

00:00:00.310  -->  00:00:02.610
<v Speaker>Hello, and welcome to part three,</v>
2

2

00:00:02.610  -->  00:00:05.930
making the predictions and visualizing the results.
3

3

00:00:05.930  -->  00:00:09.540
So we're getting closer and closer to the very exciting step
4

4

00:00:09.540  -->  00:00:12.410
where we will visualize our predictions compared
5

5

00:00:12.410  -->  00:00:14.290
to the real Google stock price,
6

6

00:00:14.290  -->  00:00:17.060
of the first financial month of 2017.
7

7

00:00:17.060  -->  00:00:20.610
I can't wait to reach that, but before we have to complete
8

8

00:00:20.610  -->  00:00:22.560
three steps of this part three.
9

9

00:00:22.560  -->  00:00:27.560
First, we're gonna get the real Google stock price of 2017.
10

10

00:00:27.740  -->  00:00:29.658
Then second step, we're gonna get
11

11

00:00:29.658  -->  00:00:33.000
the predicted Google stock price of 2017.
12

12

00:00:33.000  -->  00:00:36.220
And then third and last step, the final step,
13

13

00:00:36.220  -->  00:00:38.310
we will visualize the results.
14

14

00:00:38.310  -->  00:00:40.850
All right, and in today's tutorial, we're gonna get
15

15

00:00:40.850  -->  00:00:45.640
simply the real Google stock price of January 2017.
16

16

00:00:45.640  -->  00:00:48.720
And to do this well, it's actually quite simple.
17

17

00:00:48.720  -->  00:00:53.000
We will get it from the test set that we have,
18

18

00:00:53.000  -->  00:00:56.900
in the CSV file, Google stock price test CSV,
19

19

00:00:56.900  -->  00:00:59.610
and therefore we will just do exactly the same
20

20

00:00:59.610  -->  00:01:02.400
as what we did for the training set.
21

21

00:01:02.400  -->  00:01:04.730
We're gonna first create a data frame
22

22

00:01:04.730  -->  00:01:07.810
by importing the Google stock price test CSV file
23

23

00:01:07.810  -->  00:01:11.220
with the read underscore CSV function, by pandas
24

24

00:01:11.220  -->  00:01:14.130
and then we will select the right column,
25

25

00:01:14.130  -->  00:01:16.230
then open google stock price
26

26

00:01:16.230  -->  00:01:19.940
and make it a NumPy array with this line of code,
27

27

00:01:19.940  -->  00:01:23.390
by of course replacing training set by to test set.
28

28

00:01:23.390  -->  00:01:27.070
Alright so let's do this, and to be more efficient doing it
29

29

00:01:27.070  -->  00:01:29.270
I'm going to copy these two lines of code
30

30

00:01:29.270  -->  00:01:33.720
and I'm going to paste them right here.
31

31

00:01:33.720  -->  00:01:34.553
And there we go.
32

32

00:01:34.553  -->  00:01:37.160
Now let's make the proper adjustments.
33

33

00:01:37.160  -->  00:01:42.160
So I'm gonna replace here data set train by data set test.
34

34

00:01:42.220  -->  00:01:45.170
And then of course with the read underscore CSV
35

35

00:01:45.170  -->  00:01:46.350
function by pandas.
36

36

00:01:46.350  -->  00:01:49.240
We're not gonna import Google stock price train,
37

37

00:01:49.240  -->  00:01:53.130
but we will stock price test, that CSV
38

38

00:01:53.130  -->  00:01:55.900
and here of course we need to replace data set train
39

39

00:01:55.900  -->  00:01:58.640
by data set test.
40

40

00:01:58.640  -->  00:02:01.200
All right and then this training set
41

41

00:02:01.200  -->  00:02:03.310
we need to replace with another name, of course,
42

42

00:02:03.310  -->  00:02:05.290
corresponding to the test set.
43

43

00:02:05.290  -->  00:02:08.450
So either we could replace it with test set,
44

44

00:02:08.450  -->  00:02:12.100
or to highlight the fact that this test set is gonna be
45

45

00:02:12.100  -->  00:02:14.640
the real values of the Google stock price
46

46

00:02:14.640  -->  00:02:17.220
in the first month of January 2017.
47

47

00:02:17.220  -->  00:02:21.710
Well, let's specify this by renaming this
48

48

00:02:21.710  -->  00:02:26.460
real underscore stuck underscore price.
49

49

00:02:26.460  -->  00:02:29.690
Alright, so not only this highlights the fact that
50

50

00:02:29.690  -->  00:02:32.550
it's the real Google stock price of 2017,
51

51

00:02:32.550  -->  00:02:36.560
but also, later on actually in this second part here,
52

52

00:02:36.560  -->  00:02:39.210
we will get the predicted Google stock price
53

53

00:02:39.210  -->  00:02:40.900
of January 2017.
54

54

00:02:40.900  -->  00:02:44.270
And we will store these predictions in a variable that
55

55

00:02:44.270  -->  00:02:46.810
we will call predicted stock price.
56

56

00:02:46.810  -->  00:02:49.700
Therefore, we'll get the real Google stock price in this
57

57

00:02:49.700  -->  00:02:51.450
variable real stock price
58

58

00:02:51.450  -->  00:02:53.600
and the predicted Google stock price
59

59

00:02:53.600  -->  00:02:56.410
and another variable predicted stock price.
60

60

00:02:56.410  -->  00:02:58.110
Alright, so this will be very clear
61

61

00:02:58.110  -->  00:03:00.630
and therefore in the last step when we visualize
62

62

00:03:00.630  -->  00:03:04.010
the results, well, we will use one PLT plot
63

63

00:03:04.010  -->  00:03:07.550
for the real stock price variable and one of the PLT plot
64

64

00:03:07.550  -->  00:03:09.500
for the printed stock price,
65

65

00:03:09.500  -->  00:03:12.890
so that the code will be 100% super clear.
66

66

00:03:12.890  -->  00:03:17.050
Alright, so now I just got my real stock price.
67

67

00:03:17.050  -->  00:03:21.370
So I'm going to select these two lines and execute.
68

68

00:03:21.370  -->  00:03:24.210
All right, we have the real Google stock price
69

69

00:03:24.210  -->  00:03:26.270
of January 2017.
70

70

00:03:26.270  -->  00:03:29.740
Let's have a quick look at it in variable Explorer.
71

71

00:03:29.740  -->  00:03:33.200
There it is, real stock price, and it contains of course,
72

72

00:03:33.200  -->  00:03:36.360
20 observations, that is 20 stock prices,
73

73

00:03:36.360  -->  00:03:38.300
because these are financial days,
74

74

00:03:38.300  -->  00:03:40.880
and there are 20 financial days in one month.
75

75

00:03:40.880  -->  00:03:43.760
Because we exclude the Saturdays and Sundays.
76

76

00:03:43.760  -->  00:03:45.600
So let's have a quick look at it.
77

77

00:03:45.600  -->  00:03:50.440
These are the Google stock prices of January 2017,
78

78

00:03:50.440  -->  00:03:53.260
if you want, we can even look at them again
79

79

00:03:53.260  -->  00:03:57.880
in the Google spreadsheet for the Google stock price test.
80

80

00:03:57.880  -->  00:03:59.340
There it is, actually here it is.
81

81

00:03:59.340  -->  00:04:03.050
That's the Google stock price for January 2017,
82

82

00:04:03.050  -->  00:04:05.370
you can see from beginning of January,
83

83

00:04:05.370  -->  00:04:10.370
which I remind is January 3, up to January 31,
84

84

00:04:10.470  -->  00:04:15.080
which is here, alright, so we can see an upward trend,
85

85

00:04:15.080  -->  00:04:19.100
a big spike here, and then maybe a following downward trend.
86

86

00:04:19.100  -->  00:04:21.080
So what we would like to get, by the way,
87

87

00:04:21.080  -->  00:04:24.240
let's try to already set our expectations.
88

88

00:04:24.240  -->  00:04:29.060
Well, we would like to obtain an upward trend like that.
89

89

00:04:29.060  -->  00:04:31.910
And of course, we're not hoping to get a perfect prediction
90

90

00:04:31.910  -->  00:04:35.300
of this spike because this is an irregularity.
91

91

00:04:35.300  -->  00:04:38.230
It has nothing logical in the spike,
92

92

00:04:38.230  -->  00:04:41.400
so the model is not supposed to predict the spike.
93

93

00:04:41.400  -->  00:04:44.130
It is just supposed to capture the trend
94

94

00:04:44.130  -->  00:04:47.170
and therefore have a curve that approximates
95

95

00:04:47.170  -->  00:04:49.970
that pretty well and maybe going down a little bit
96

96

00:04:49.970  -->  00:04:53.210
afterwards but we would like to see something like this.
97

97

00:04:53.210  -->  00:04:56.270
Alright, so we will see that very quickly.
98

98

00:04:56.270  -->  00:04:58.960
Let's go back to Python, here is Python,
99

99

00:04:58.960  -->  00:05:03.860
the real Google stock price of January 17 is well imported.
100

100

00:05:03.860  -->  00:05:06.420
Now we're gonna move on to the next step,
101

101

00:05:06.420  -->  00:05:09.350
getting the predicted stock price of 2017.
102

102

00:05:09.350  -->  00:05:11.300
And we're gonna do that in a new tutorial,
103

103

00:05:11.300  -->  00:05:13.330
because this will be actually quite long.
104

104

00:05:13.330  -->  00:05:15.540
It's actually about 10 lines of code.
105

105

00:05:15.540  -->  00:05:17.880
So it's not that obvious and direct
106

106

00:05:17.880  -->  00:05:19.880
as you will see in the next tutorial.
107

107

00:05:19.880  -->  00:05:22.780
So I'll see you there and until then, enjoy deep learning.
