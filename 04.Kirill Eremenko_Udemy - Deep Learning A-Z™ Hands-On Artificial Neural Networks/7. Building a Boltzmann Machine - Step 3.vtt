WEBVTT
1
1

00:00:00.260  -->  00:00:02.730
<v Instructor>Hello and welcome to this Python tutorial.</v>
2

2

00:00:02.730  -->  00:00:04.410
So in the previous tutorial, we prepared
3

3

00:00:04.410  -->  00:00:06.750
the training set and the test set, and today
4

4

00:00:06.750  -->  00:00:09.220
in this quick tutorial we're gonna get the total number
5

5

00:00:09.220  -->  00:00:10.960
of users and movies.
6

6

00:00:10.960  -->  00:00:12.470
So why do we need to do that?
7

7

00:00:12.470  -->  00:00:14.440
Well, that is because of what we're gonna do
8

8

00:00:14.440  -->  00:00:15.850
in the next tutorial.
9

9

00:00:15.850  -->  00:00:17.738
In the next tutorial we are going to convert
10

10

00:00:17.738  -->  00:00:20.150
our training set and test set,
11

11

00:00:20.150  -->  00:00:22.070
that we just imported previously.
12

12

00:00:22.070  -->  00:00:24.540
And we're going to convert them into a matrix
13

13

00:00:24.540  -->  00:00:26.740
where the lines are going to be users,
14

14

00:00:26.740  -->  00:00:28.750
the colorings are going to be movies,
15

15

00:00:28.750  -->  00:00:31.750
and the cells are going to be the ratings.
16

16

00:00:31.750  -->  00:00:33.730
And we are going to create such a matrix
17

17

00:00:33.730  -->  00:00:36.770
for the training set, and another one for the test set.
18

18

00:00:36.770  -->  00:00:39.240
And besIDes, in each of these two matrices,
19

19

00:00:39.240  -->  00:00:42.007
we want to include older users and older movies
20

20

00:00:42.007  -->  00:00:44.120
from the original data set.
21

21

00:00:44.120  -->  00:00:46.747
And if, in the training set that we just imported,
22

22

00:00:46.747  -->  00:00:50.400
a user dIDn't rate a movie, well we'll put a zero
23

23

00:00:50.400  -->  00:00:52.400
into the cell of the matrix that corresponds
24

24

00:00:52.400  -->  00:00:54.730
to this user and that movie.
25

25

00:00:54.730  -->  00:00:57.440
So to recap, we're gonna make two matrices,
26

26

00:00:57.440  -->  00:01:00.080
one for the training set and one for the test set.
27

27

00:01:00.080  -->  00:01:02.460
These matrices will have the same number of users
28

28

00:01:02.460  -->  00:01:04.470
and the same number of movies, so they will
29

29

00:01:04.470  -->  00:01:05.730
have the same number of lines
30

30

00:01:05.730  -->  00:01:07.420
and the same number of columns.
31

31

00:01:07.420  -->  00:01:11.620
And in these two matrices, each cell of indexes U, I,
32

32

00:01:11.620  -->  00:01:14.560
where U is the user and I is the movie,
33

33

00:01:14.560  -->  00:01:17.590
each cell U, I will get the rating of the movie I,
34

34

00:01:17.590  -->  00:01:19.130
by the user U.
35

35

00:01:19.130  -->  00:01:22.670
And if, this user U dIDn't rate the movie I,
36

36

00:01:22.670  -->  00:01:24.070
we'll put a zero.
37

37

00:01:24.070  -->  00:01:27.390
So that's what we're gonna make in the next tutorial
38

38

00:01:27.390  -->  00:01:29.390
and we're gonna make a function to do this.
39

39

00:01:29.390  -->  00:01:32.290
And so, as you understood, since these two matrices will
40

40

00:01:32.290  -->  00:01:34.660
each one contain the total number of users
41

41

00:01:34.660  -->  00:01:36.270
and the total number of movies,
42

42

00:01:36.270  -->  00:01:37.570
well in this tutorial
43

43

00:01:37.570  -->  00:01:39.930
we need to get this total number of users
44

44

00:01:39.930  -->  00:01:41.560
and this total number of movies.
45

45

00:01:41.560  -->  00:01:43.540
And so now, you might be wondering,
46

46

00:01:43.540  -->  00:01:45.770
well it's easy to get the total number of users,
47

47

00:01:45.770  -->  00:01:48.000
we just need to click on the training set,
48

48

00:01:48.000  -->  00:01:50.840
scroll down, down to the bottom
49

49

00:01:50.840  -->  00:01:55.090
and take 943 because it corresponds to the last user.
50

50

00:01:55.090  -->  00:01:57.150
And same for the movie, to get the total number
51

51

00:01:57.150  -->  00:02:00.335
of movie, we need to get this 1330
52

52

00:02:00.335  -->  00:02:02.750
because it corresponds to the last movie.
53

53

00:02:02.750  -->  00:02:05.800
Indeed, if I also open the test set and if I scroll down
54

54

00:02:05.800  -->  00:02:09.478
to the end, well we can check that the total number
55

55

00:02:09.478  -->  00:02:11.970
of users is still 943 because here,
56

56

00:02:11.970  -->  00:02:15.440
in the test set, it goes up to 462.
57

57

00:02:15.440  -->  00:02:17.510
So for the number of users it would be tempting
58

58

00:02:17.510  -->  00:02:21.400
to say that the total numbers of users is 943.
59

59

00:02:21.400  -->  00:02:24.990
So, okay, we could do that, but the code we are making
60

60

00:02:24.990  -->  00:02:26.651
right now, I want it to be applicable
61

61

00:02:26.651  -->  00:02:31.651
to the five train/test folds that are in the database.
62

62

00:02:32.140  -->  00:02:34.800
Not only for this first one here, you want base
63

63

00:02:34.800  -->  00:02:35.730
and you want test.
64

64

00:02:35.730  -->  00:02:38.540
I want also this code to be applicable to
65

65

00:02:38.540  -->  00:02:40.480
U-2, U-3, U-4, and U-5.
66

66

00:02:40.480  -->  00:02:41.410
And why's that?
67

67

00:02:41.410  -->  00:02:42.900
It's in case you wanna practice
68

68

00:02:42.900  -->  00:02:46.680
and do k-fold cross-validation with these other sets.
69

69

00:02:46.680  -->  00:02:50.347
And if, we put the number of users equal to 943,
70

70

00:02:50.347  -->  00:02:52.290
well that won't work for the other sets
71

71

00:02:52.290  -->  00:02:54.510
because the users and the movies
72

72

00:02:54.510  -->  00:02:56.560
are not distrusted the same way.
73

73

00:02:56.560  -->  00:03:00.100
So, not only we're gonna take the max of the users
74

74

00:03:00.100  -->  00:03:02.560
in the training set, but that's not enough.
75

75

00:03:02.560  -->  00:03:04.050
Because actually in these splits,
76

76

00:03:04.050  -->  00:03:06.580
while it could be totally possible that the user that has
77

77

00:03:06.580  -->  00:03:09.920
the highest user ID, could be in the test set.
78

78

00:03:09.920  -->  00:03:13.000
As opposed to what we observe here where the highest
79

79

00:03:13.000  -->  00:03:14.770
user ID's in the training set.
80

80

00:03:14.770  -->  00:03:18.080
But actually the splits are random and so we could totally
81

81

00:03:18.080  -->  00:03:21.140
have the highest user ID in the test set for one
82

82

00:03:21.140  -->  00:03:24.050
of these pairs of training and test sets.
83

83

00:03:24.050  -->  00:03:26.170
So that's why, now what we're gonna do
84

84

00:03:26.170  -->  00:03:28.610
to get the total number of users and the total number
85

85

00:03:28.610  -->  00:03:32.660
of movies, is take the maximum of the maximum user ID
86

86

00:03:32.660  -->  00:03:35.522
in the training set and the maximum user ID in the test set.
87

87

00:03:35.522  -->  00:03:39.000
And by doing that, we will be sure that we get the total
88

88

00:03:39.000  -->  00:03:41.570
number of users and the total number of movies
89

89

00:03:41.570  -->  00:03:43.290
that we will need in the next tutorial
90

90

00:03:43.290  -->  00:03:45.810
to make this matrix of users,
91

91

00:03:45.810  -->  00:03:48.150
in lines, and movies in columns.
92

92

00:03:48.150  -->  00:03:49.930
So let's do this now that we get it,
93

93

00:03:49.930  -->  00:03:51.270
it's going to be very simple.
94

94

00:03:51.270  -->  00:03:52.760
I'm going back to Variable Explorer
95

95

00:03:52.760  -->  00:03:55.181
and so we're going to make two new variables
96

96

00:03:55.181  -->  00:03:59.961
nv_users which is going to be the total number of users
97

97

00:03:59.961  -->  00:04:04.430
and nv_movies which is going to be
98

98

00:04:04.430  -->  00:04:06.100
the total number of movies,
99

99

00:04:06.100  -->  00:04:09.040
and so, as I just said, for the total number of users
100

100

00:04:09.040  -->  00:04:13.580
we're gonna take the max of the maximum user ID
101

101

00:04:13.580  -->  00:04:17.803
in the training set, and so that is the max of training set
102

102

00:04:17.803  -->  00:04:21.088
and then in brackets we need to put the index
103

103

00:04:21.088  -->  00:04:24.220
of the user column and that is index zero,
104

104

00:04:24.220  -->  00:04:25.580
and we need to take all the lines
105

105

00:04:25.580  -->  00:04:28.150
that we're gonna add here, column and comma.
106

106

00:04:28.150  -->  00:04:32.045
So this training set column,0 is the first column
107

107

00:04:32.045  -->  00:04:35.580
of the training set that it is the users,
108

108

00:04:35.580  -->  00:04:39.610
all the users, and we're taking the max,
109

109

00:04:39.610  -->  00:04:42.940
so we're definitely taking the maximum
110

110

00:04:42.940  -->  00:04:45.490
user ID of this column.
111

111

00:04:45.490  -->  00:04:49.050
So, okay, now we need to do the same for the test set,
112

112

00:04:49.050  -->  00:04:51.810
because the maximum user ID might be in the test set.
113

113

00:04:51.810  -->  00:04:53.450
So we're gonna do the same,
114

114

00:04:53.450  -->  00:04:56.891
we're gonna take this maximum of the training set,
115

115

00:04:56.891  -->  00:05:01.454
place that here and replace training set by test set.
116

116

00:05:01.454  -->  00:05:02.990
Here we go.
117

117

00:05:02.990  -->  00:05:05.740
Okay, and now we need to add something very important,
118

118

00:05:05.740  -->  00:05:09.760
it's to force this maximum number here to be an integer.
119

119

00:05:09.760  -->  00:05:11.220
Otherwise we'll get to narrow.
120

120

00:05:11.220  -->  00:05:12.760
I actually experienced that.
121

121

00:05:12.760  -->  00:05:17.050
So, we have to convert this number into an integer,
122

122

00:05:17.050  -->  00:05:20.100
and to do this we're gonna use the int function
123

123

00:05:20.100  -->  00:05:23.599
and put all these maximums inside this int function.
124

124

00:05:23.599  -->  00:05:26.130
Okay, and now that should be okay.
125

125

00:05:26.130  -->  00:05:29.240
I'm going to select this line, and execute,
126

126

00:05:29.240  -->  00:05:32.651
and as expected, we get that the total number of users
127

127

00:05:32.651  -->  00:05:36.714
is 943, but it might not work the same way
128

128

00:05:36.714  -->  00:05:38.740
for the other train/test splits,
129

129

00:05:38.740  -->  00:05:41.740
so we have to use this in case you want to apply this code
130

130

00:05:41.740  -->  00:05:44.190
for the other training and test sets.
131

131

00:05:44.190  -->  00:05:45.820
Okay, so now we're gonna do the same
132

132

00:05:45.820  -->  00:05:47.610
for the total number of movies,
133

133

00:05:47.610  -->  00:05:49.477
and actually this is going to be very simple.
134

134

00:05:49.477  -->  00:05:53.274
We just need to copy this part of the line, copy,
135

135

00:05:53.274  -->  00:05:56.370
and then paste that here, and, of course,
136

136

00:05:56.370  -->  00:05:59.630
here what we're going to do is replace the index
137

137

00:05:59.630  -->  00:06:02.197
of the column of the users here, that is zero
138

138

00:06:02.197  -->  00:06:05.730
and here, by the index of the column of the movies.
139

139

00:06:05.730  -->  00:06:08.930
And if we go back to our training set, or test set
140

140

00:06:08.930  -->  00:06:11.125
we'll remember the column that corresponds to the movies
141

141

00:06:11.125  -->  00:06:15.140
is the second column, and so it has index one.
142

142

00:06:15.140  -->  00:06:17.866
So, what we seem to need to do, is to replace
143

143

00:06:17.866  -->  00:06:21.820
the index zero here by one, and same for here,
144

144

00:06:21.820  -->  00:06:26.110
we replace the index zero by one, and that's actually all.
145

145

00:06:26.110  -->  00:06:28.312
We are ready to get the total number of movies.
146

146

00:06:28.312  -->  00:06:33.312
Let's see if this was 1330, maybe that in the test set
147

147

00:06:34.710  -->  00:06:37.640
some user rated a movie of higher index than this one.
148

148

00:06:37.640  -->  00:06:38.880
If that's the case that will give
149

149

00:06:38.880  -->  00:06:41.080
you even more motivation to do this.
150

150

00:06:41.080  -->  00:06:42.800
Taking the max of the max.
151

151

00:06:42.800  -->  00:06:47.210
So, we're gonna press OK, let's remember 1330,
152

152

00:06:47.210  -->  00:06:49.180
I'm going to select this line,
153

153

00:06:49.180  -->  00:06:53.700
and execute, and see the maximum movie ID is 1682.
154

154

00:06:55.380  -->  00:06:57.040
So we had to take the max of the max
155

155

00:06:57.040  -->  00:06:59.460
because we don't know if this movie ID
156

156

00:06:59.460  -->  00:07:02.040
was in the training set, or in the test set,
157

157

00:07:02.040  -->  00:07:03.680
and actually we can check it out.
158

158

00:07:03.680  -->  00:07:07.350
We just need to select this to get the maximum movie ID
159

159

00:07:07.350  -->  00:07:11.050
in the training set, and that is 1682.
160

160

00:07:11.050  -->  00:07:12.040
So that's the one.
161

161

00:07:12.040  -->  00:07:14.023
The maximum movie ID was in the training set,
162

162

00:07:14.023  -->  00:07:16.750
and if you want to look at the maximum movie ID
163

163

00:07:16.750  -->  00:07:21.650
in the test set, that was 1591.
164

164

00:07:21.650  -->  00:07:23.500
So it could have been in the test set.
165

165

00:07:23.500  -->  00:07:26.130
That's not the case for this first train/test split,
166

166

00:07:26.130  -->  00:07:27.170
but it could be the other way
167

167

00:07:27.170  -->  00:07:28.620
for the other train/test splits.
168

168

00:07:28.620  -->  00:07:31.200
So that's absolutely necessary to do it this way
169

169

00:07:31.200  -->  00:07:33.884
if you want to apply five-fold cross-validation,
170

170

00:07:33.884  -->  00:07:35.850
which I would highly encourage
171

171

00:07:35.850  -->  00:07:38.140
if you want to make your model even more robust
172

172

00:07:38.140  -->  00:07:40.490
when applying some perimeter tuning next to it.
173

173

00:07:41.950  -->  00:07:44.360
Alright, so, we get what we wanted
174

174

00:07:44.360  -->  00:07:46.610
and so now we're ready to move onto the next step.
175

175

00:07:46.610  -->  00:07:51.030
Which is to convert our training set and out test set
176

176

00:07:51.030  -->  00:07:54.710
which so far has the format of the first column
177

177

00:07:54.710  -->  00:07:57.400
being the users, the second column being the movies,
178

178

00:07:57.400  -->  00:07:59.000
the third column being the ratings,
179

179

00:07:59.000  -->  00:08:01.160
and the fourth column being the timestamps
180

180

00:08:01.160  -->  00:08:04.500
into a matrix where the lines are the users,
181

181

00:08:04.500  -->  00:08:08.070
the columns are the movies, and the timestamps are gone.
182

182

00:08:08.070  -->  00:08:10.060
Because we don't care of the timestamps.
183

183

00:08:10.060  -->  00:08:12.620
In each cell we'll contain the rating of the movie I
184

184

00:08:12.620  -->  00:08:14.856
by the user U, and if the user U didn't rate
185

185

00:08:14.856  -->  00:08:17.440
the movie I, we'll put a zero.
186

186

00:08:17.440  -->  00:08:19.310
So, we'll do all this in the next tutorial,
187

187

00:08:19.310  -->  00:08:21.010
and until then enjoy the learning!
