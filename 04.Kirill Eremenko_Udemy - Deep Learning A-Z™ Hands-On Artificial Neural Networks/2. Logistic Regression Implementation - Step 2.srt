1
1

00:00:00,230  -->  00:00:03,010
<v Instructor>Hello, and welcome to this Python tutorial.</v>
2

2

00:00:03,010  -->  00:00:05,180
So in the previous tutorial, we pre-processed
3

3

00:00:05,180  -->  00:00:07,740
our data to make it ready for our model,
4

4

00:00:07,740  -->  00:00:09,670
and therefore today we can start fitting
5

5

00:00:09,670  -->  00:00:11,990
logistic regression to our training set
6

6

00:00:11,990  -->  00:00:14,490
and that's what we're going to do in this tutorial.
7

7

00:00:14,490  -->  00:00:18,540
So as usual, let's import the correct library for that job,
8

8

00:00:18,540  -->  00:00:20,990
which is gonna be the linear model library.
9

9

00:00:20,990  -->  00:00:22,060
And why linear?
10

10

00:00:22,060  -->  00:00:25,550
It's because logistic regression is a linear classifier,
11

11

00:00:25,550  -->  00:00:28,130
which means that here, since we're in two dimensions,
12

12

00:00:28,130  -->  00:00:30,960
our two categories of users are gonna be separated
13

13

00:00:30,960  -->  00:00:32,300
by a straight line.
14

14

00:00:32,300  -->  00:00:35,090
So you're gonna see your intuition of logistic regression
15

15

00:00:35,090  -->  00:00:37,300
is even going to be better shaped when you will find
16

16

00:00:37,300  -->  00:00:38,980
out about the graphic results.
17

17

00:00:38,980  -->  00:00:41,370
So let's import this library by typing
18

18

00:00:41,370  -->  00:00:44,310
from S-K learn
19

19

00:00:45,490  -->  00:00:47,410
dot linear model,
20

20

00:00:47,410  -->  00:00:50,370
that's the name of the library, here it is.
21

21

00:00:50,370  -->  00:00:54,330
Okay, and then import, we're gonna import the right class
22

22

00:00:54,330  -->  00:00:56,550
for it, which is the Logistic
23

23

00:00:58,300  -->  00:01:00,090
Regression class.
24

24

00:01:00,090  -->  00:01:02,630
Once again, a very intuitive name, we like it.
25

25

00:01:02,630  -->  00:01:05,530
And then, as usual, we are going to create an object
26

26

00:01:05,530  -->  00:01:08,860
from this class, which is gonna be our classifier
27

27

00:01:08,860  -->  00:01:11,580
that we're going to fit on our training set.
28

28

00:01:11,580  -->  00:01:12,413
So let's do it.
29

29

00:01:12,413  -->  00:01:15,363
I'm going to create a new variable classifier,
30

30

00:01:16,200  -->  00:01:19,223
which is actually our logistic regression object.
31

31

00:01:20,260  -->  00:01:23,010
And to create this object, I'm gonna call the class
32

32

00:01:23,010  -->  00:01:26,223
Logistic Regression,
33

33

00:01:29,770  -->  00:01:30,950
and here we go.
34

34

00:01:30,950  -->  00:01:33,340
The logistic regression class has several parameters,
35

35

00:01:33,340  -->  00:01:35,920
we can check them by inspecting the logistic regression
36

36

00:01:35,920  -->  00:01:39,310
class, we type command I, to inspect the class,
37

37

00:01:39,310  -->  00:01:40,440
here we go.
38

38

00:01:40,440  -->  00:01:42,140
As you can see, there is several parameters,
39

39

00:01:42,140  -->  00:01:45,420
but we're not going to use any of them, we're only gonna use
40

40

00:01:45,420  -->  00:01:47,410
the RandomState parameter here,
41

41

00:01:47,410  -->  00:01:48,327
just to have the same results.
42

42

00:01:48,327  -->  00:01:53,327
So here, I'm gonna input random state equals zero,
43

43

00:01:54,360  -->  00:01:56,580
so that we all get the same results.
44

44

00:01:56,580  -->  00:02:00,160
Alright, so our logistic regression object is ready
45

45

00:02:00,160  -->  00:02:03,393
and now I'm gonna take it, classifier,
46

46

00:02:04,780  -->  00:02:07,890
and I'm going to fit it to the training set.
47

47

00:02:07,890  -->  00:02:10,950
And to do this, I'm gonna use this method here, which is
48

48

00:02:10,950  -->  00:02:15,180
the fit method to fit it to our training set.
49

49

00:02:15,180  -->  00:02:18,270
Okay, so Enter fit, and then we want to fit it to our
50

50

00:02:18,270  -->  00:02:21,280
training set, so here, we input x train
51

51

00:02:23,240  -->  00:02:24,953
and y train,
52

52

00:02:27,660  -->  00:02:30,360
because remember, what this means is that we're taking
53

53

00:02:30,360  -->  00:02:33,470
our logistic regression classifier object,
54

54

00:02:33,470  -->  00:02:37,800
we're fitting it to the training set, x train and y train
55

55

00:02:37,800  -->  00:02:41,100
so that our classifier learns the correlations between
56

56

00:02:41,100  -->  00:02:42,760
x train and y train.
57

57

00:02:42,760  -->  00:02:45,630
Then by learning those correlations, he will be able to use
58

58

00:02:45,630  -->  00:02:48,250
what he learns to predict new observations.
59

59

00:02:48,250  -->  00:02:51,900
And we're gonna test it's predictive power on a different
60

60

00:02:51,900  -->  00:02:54,250
set, which is gonna be the test set.
61

61

00:02:54,250  -->  00:02:56,480
And that's what we're gonna do in the next tutorial,
62

62

00:02:56,480  -->  00:02:58,520
so I'm just going to select here
63

63

00:02:59,930  -->  00:03:04,090
this, command and control plus enter to execute.
64

64

00:03:04,090  -->  00:03:07,560
And here we go, now our logistic regression model is fitted
65

65

00:03:07,560  -->  00:03:09,120
to the training set.
66

66

00:03:09,120  -->  00:03:11,700
Okay, so that's perfect and now in the next tutorial,
67

67

00:03:11,700  -->  00:03:15,950
we will be predicting the test set results with this
68

68

00:03:15,950  -->  00:03:17,640
logistic regression model.
69

69

00:03:17,640  -->  00:03:19,940
So I look forward to seeing you there and until then,
70

70

00:03:19,940  -->  00:03:21,090
enjoy Machine Learning.
