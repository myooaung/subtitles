1
00:00:05,290 --> 00:00:08,570
Welcome back to the Jupiter book lecture.

2
00:00:08,650 --> 00:00:14,170
In case you're new to Jupiter notebook systems in general this lecture will briefly cover the basics.

3
00:00:14,170 --> 00:00:18,100
You can feel free to skip this lecture if you're already familiar of Jupiter notebooks.

4
00:00:18,130 --> 00:00:22,300
I'm sure if you've already taken one of my other courses on Python or data science you already have

5
00:00:22,300 --> 00:00:25,990
more than enough experience of Jupiter note books in general.

6
00:00:26,030 --> 00:00:29,630
In case you're unfamiliar let's briefly go over the chapter notebooks.

7
00:00:29,750 --> 00:00:36,530
Jupiter note books use a IPY and B which stands for Python notebook file format but they can be saved

8
00:00:36,530 --> 00:00:38,010
to a dot Peewee file.

9
00:00:38,030 --> 00:00:44,060
That way you can open them up with any ID or any sort of text editor that can even be saved to him.

10
00:00:44,090 --> 00:00:51,070
And PDA formats you can't double click a IPY and be filed to open it in order to do that.

11
00:00:51,110 --> 00:00:52,730
You need to do it through the command line.

12
00:00:53,510 --> 00:00:55,940
So all you have to do is open up the terminal and type.

13
00:00:55,940 --> 00:00:57,020
Jupiter notebook.

14
00:00:57,200 --> 00:01:02,260
Then you'll have the Jupiter note book viewer and you can navigate to wherever your notebooks are stored.

15
00:01:02,270 --> 00:01:07,320
You can always use C.D to navigate to the terminal beforehand OK.

16
00:01:07,500 --> 00:01:11,550
Let's jump to a Jupiter notebook's discuss a few key features.

17
00:01:11,570 --> 00:01:15,690
All right so once you type in Jupiter put into your terminal you should see something that looks like

18
00:01:15,690 --> 00:01:16,440
this.

19
00:01:16,440 --> 00:01:20,320
Now the files are folders that you see here are going to be different depending how you did this.

20
00:01:20,310 --> 00:01:25,180
If you're running locally you should see something that says local host a etc..

21
00:01:25,200 --> 00:01:29,610
If you're running this on maybe an Amazon easy to instance depending on installation instructions you

22
00:01:29,610 --> 00:01:33,440
followed you'll have a big easy to line and then a.

23
00:01:33,620 --> 00:01:39,390
Etc. but either way regardless of how you're actually doing this you should see a screen similar to

24
00:01:39,390 --> 00:01:44,550
this one and you can see what folders look like what a typical notebook file looks like.

25
00:01:44,610 --> 00:01:46,140
And here you'll see other files.

26
00:01:46,140 --> 00:01:48,120
For example some info for file.

27
00:01:48,120 --> 00:01:53,190
Now obviously the Jupiter note book can't really open this well so let's go over how you would create

28
00:01:53,190 --> 00:01:57,720
a new notebook and a couple of special features that hopefully convince you that you better know books

29
00:01:57,720 --> 00:02:02,630
are going to be really useful when learning something so you'll come over here to New.

30
00:02:02,670 --> 00:02:08,270
You'll click on it and you can see here I can create a new text file a new folder the new terminal.

31
00:02:08,280 --> 00:02:11,460
But more importantly a new notebook now underneath notebooks.

32
00:02:11,460 --> 00:02:14,990
I have various options because I'm running this on my own local computer.

33
00:02:15,030 --> 00:02:20,790
In this case I'm actually running this on a Mac not a full Ubuntu or a Linux based system but I've specialized

34
00:02:20,790 --> 00:02:25,300
my notebook to have multiple languages so I have R and Skala available.

35
00:02:25,470 --> 00:02:31,320
Most likely if you follow the instructions you'll have either just Python to Python 3 or you'll see

36
00:02:31,320 --> 00:02:33,450
something that says like Python Khanda.

37
00:02:33,480 --> 00:02:38,840
Or Python default as long as it says Python somewhere around there or Khanda somewhere around there.

38
00:02:38,850 --> 00:02:39,810
That's totally fine.

39
00:02:39,810 --> 00:02:44,150
So just click on that one and you can review the installation instructions for whatever system you're

40
00:02:44,160 --> 00:02:44,970
working with.

41
00:02:46,490 --> 00:02:52,180
And then that will start a new notebook now with this new book I want to show off just a couple of neat

42
00:02:52,180 --> 00:02:53,440
features.

43
00:02:53,440 --> 00:02:58,660
For example if you want to run code you have these cells so I can say two plus two or two plus one or

44
00:02:58,660 --> 00:03:03,770
two and do shift enter and with the shift enteric and immediately see the output.

45
00:03:03,790 --> 00:03:07,620
So that's going to make your learning process really nice when working the Jupiter books you have this

46
00:03:07,720 --> 00:03:09,990
input and direct output.

47
00:03:09,990 --> 00:03:14,020
What's also really nice is you can write little notes for yourself so you can change these to what's

48
00:03:14,020 --> 00:03:16,020
known as a markdown cell.

49
00:03:16,060 --> 00:03:21,850
So you just come up here change it from code to markdown and that changes the cell notice how it does

50
00:03:21,850 --> 00:03:23,440
have that in anymore.

51
00:03:23,520 --> 00:03:28,410
And then I can just write something like this is a markdown cell

52
00:03:30,840 --> 00:03:35,700
notes for me and then I can do shift enter and notice what happens.

53
00:03:35,700 --> 00:03:37,140
It's just regular tech.

54
00:03:37,140 --> 00:03:42,270
So that's a way you can leave little notes for yourself and these markdown cells are prevalent throughout

55
00:03:42,270 --> 00:03:43,110
the lecture notes.

56
00:03:43,110 --> 00:03:45,820
That's basically my way of leaving little notes for you.

57
00:03:45,840 --> 00:03:50,320
That explains a lot of the code and the support for markdown syntax.

58
00:03:50,340 --> 00:03:54,200
So if that's something you're familiar with for example you can put in hash tags here.

59
00:03:54,330 --> 00:03:56,420
That actually changes the size of the font.

60
00:03:56,460 --> 00:03:56,860
Cetera.

61
00:03:56,880 --> 00:04:02,130
So that's a general markdown text that really has nothing to do of course but if you know it it's available

62
00:04:02,130 --> 00:04:06,750
free there and if you want to change the notebook title you just click here on untitled and then say

63
00:04:06,750 --> 00:04:07,230
something like.

64
00:04:07,230 --> 00:04:09,980
My first notebook cetera.

65
00:04:10,150 --> 00:04:10,850
All right.

66
00:04:10,900 --> 00:04:14,290
So that's really the basics of what you need to know for that Jupiter notebook.

67
00:04:14,290 --> 00:04:18,400
A lot of this was already covered throughout the installation lectures so I'm sure a lot of this is

68
00:04:18,400 --> 00:04:19,550
reviewed to you.

69
00:04:19,830 --> 00:04:24,880
The last two things I want to mention before we end this lecture are two really powerful features of

70
00:04:24,880 --> 00:04:28,140
the Jupiter notebook and that's getting documentation string help.

71
00:04:28,240 --> 00:04:31,280
And the list of the methods available for an object.

72
00:04:31,300 --> 00:04:38,410
So let's actually show you if I have an object X and it's going to be a string and then I run shift

73
00:04:38,470 --> 00:04:45,040
enter it actually to find that I can type in X and I see the output of the string but strings have methods

74
00:04:45,040 --> 00:04:46,110
available to them.

75
00:04:46,300 --> 00:04:52,540
So I can say something like dots upper and then I uppercase the string.

76
00:04:52,540 --> 00:04:56,280
Now you may be wondering well how the heck am I supposed to know all the methods available.

77
00:04:56,530 --> 00:04:58,540
Well luckily Jupiter helps you out.

78
00:04:58,540 --> 00:05:04,680
So if you have an object that's already been defined remember you have to run a cell in order to find

79
00:05:04,680 --> 00:05:05,290
the object.

80
00:05:05,310 --> 00:05:08,760
So X was defined appear and I ran the cell.

81
00:05:08,790 --> 00:05:15,030
Now that is the that can say X dot and a hit tab onto my keyboard and I can see all the various methods

82
00:05:15,030 --> 00:05:16,930
that are available to me here.

83
00:05:16,950 --> 00:05:18,200
So lots of methods.

84
00:05:18,360 --> 00:05:22,920
A lot of these you won't be using in fact most of them you won't be using but with tab you can see all

85
00:05:22,920 --> 00:05:24,260
the ones that are available to you.

86
00:05:24,260 --> 00:05:26,160
So you don't really need to memorize anything.

87
00:05:26,190 --> 00:05:28,210
So that's something that's really nice about the Jupiter note book.

88
00:05:28,230 --> 00:05:30,720
A lot of ideas already do this sort of thing.

89
00:05:30,720 --> 00:05:33,010
But you put in a book does it as well.

90
00:05:33,060 --> 00:05:36,300
And it's quite helpful that everything's happening right here in front of us.

91
00:05:36,300 --> 00:05:39,510
We see the input and the output we see the tab all the methods.

92
00:05:39,510 --> 00:05:41,060
It's really nice.

93
00:05:41,070 --> 00:05:46,450
Now the other thing I want to show you is the ability to see documentation strings for functions themselves.

94
00:05:46,470 --> 00:05:53,400
So if we use a built in functions such as some I can do shift tab after this to see the documentation

95
00:05:53,400 --> 00:05:54,070
string.

96
00:05:54,150 --> 00:05:59,430
So I see the docstring here and some description of what this function does returns the sum X cetera.

97
00:05:59,430 --> 00:06:04,430
Now again the function needs to be defined in order to actually see the documentation string for it.

98
00:06:04,440 --> 00:06:08,880
So if you're working with your own custom function make sure you actually run the self first.

99
00:06:08,880 --> 00:06:13,700
That defines that function in order to see the documentation string later on.

100
00:06:13,700 --> 00:06:14,210
All right.

101
00:06:14,400 --> 00:06:18,400
So that's really all we need to know if you ever want any more help with Jupiter notebooks.

102
00:06:18,420 --> 00:06:19,640
Just come over here and help.

103
00:06:19,830 --> 00:06:24,120
And there's lots of useful things here such as the keyboard shortcuts which are kind of just discussing

104
00:06:24,360 --> 00:06:26,040
as well as general notebook help.

105
00:06:26,040 --> 00:06:31,350
More stuff on markdown case that interested you and a lot more stuff about certain libraries with Python

106
00:06:31,580 --> 00:06:34,430
that you can use for data science in machine learning.

107
00:06:34,440 --> 00:06:35,040
All right.

108
00:06:35,130 --> 00:06:39,840
Jupiter notebooks are super popular in Python for data science ecosystem in general.

109
00:06:39,840 --> 00:06:42,710
So I hope you learn to love them as well if they're not your thing.

110
00:06:42,720 --> 00:06:44,390
No worries I understand.

111
00:06:44,460 --> 00:06:46,720
But feel free to explore them.

112
00:06:46,740 --> 00:06:47,270
Thanks.

113
00:06:47,340 --> 00:06:48,380
I'll see you at the next lecture.
