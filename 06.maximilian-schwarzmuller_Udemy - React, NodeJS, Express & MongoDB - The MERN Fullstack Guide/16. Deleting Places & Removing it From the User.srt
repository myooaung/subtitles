1
00:00:02,190 --> 00:00:03,180
So back in or cold.

2
00:00:03,330 --> 00:00:09,180
Let's now go down to our delete place constant and see what you have to change here to make sure we

3
00:00:09,180 --> 00:00:13,320
can delete the place successfully the first part here.

4
00:00:13,330 --> 00:00:17,420
Our try catch block to check whether we have any general error is fine.

5
00:00:17,470 --> 00:00:22,990
There is only one thing we have to add right here because what we want to do in the end is we want to

6
00:00:22,990 --> 00:00:26,920
find the place idea of a place we're looking for to delete this place.

7
00:00:26,920 --> 00:00:34,160
But at the same time we also want to search for our users collection and see which user has this place.

8
00:00:34,210 --> 00:00:40,930
And then we want to make sure that if we did a place that this I.D. is also deleted from this user document

9
00:00:41,320 --> 00:00:48,100
this means we need access to a user document and we need to overwrite or change an existing while information

10
00:00:48,370 --> 00:00:49,430
in this document.

11
00:00:49,600 --> 00:00:57,970
And to do so we can use these so-called populate method here populate allows us to exactly do dead so

12
00:00:57,970 --> 00:01:04,090
to refer to a document stored in another collection and to work with data in that existing document

13
00:01:04,240 --> 00:01:07,000
of that other collection to do so.

14
00:01:07,000 --> 00:01:13,240
We need a relation between these two documents and these relations were established in our user j s

15
00:01:13,240 --> 00:01:19,070
file here with ref place and in our place J S file here before the user.

16
00:01:20,110 --> 00:01:25,020
Only if this connection is existing then we are allowed to use populate.

17
00:01:25,090 --> 00:01:31,240
Otherwise this populate method would not work and depopulate method needs one additional information

18
00:01:31,510 --> 00:01:36,940
it needs information about the document where we want to change something and move in this document

19
00:01:36,970 --> 00:01:42,490
we need to refer to a specific property in our case this is the creator property because you create

20
00:01:42,490 --> 00:01:50,270
a property contains the user IDM Mongoose then takes this idea but searches for the entire user data.

21
00:01:50,290 --> 00:01:56,200
So the idea allows us to search for the user and then to get back all the data stored in a user document.

22
00:01:56,200 --> 00:02:01,280
With that we have to theoretically option to change something in our user and of course to also find

23
00:02:01,280 --> 00:02:07,360
a place by I.D. in our replace document we can keep the rest of this code here like this does is fine

24
00:02:08,860 --> 00:02:13,390
now before we work on this try catch block though I see we missed something before because what we should

25
00:02:13,390 --> 00:02:19,540
do here actually is before we continue we should check whether a place is actually existing because

26
00:02:19,540 --> 00:02:25,840
this is our general error catching part but we never check whether a place idea actually exists let's

27
00:02:25,870 --> 00:02:33,340
quickly implement that if plays like this so if we don't find a place for the provided DB Well then

28
00:02:33,430 --> 00:02:46,710
we want to return an error stating that we could not find place for this I.D. error code for or for

29
00:02:48,180 --> 00:02:52,220
and of course return next error like this.

30
00:02:52,220 --> 00:02:58,320
So this is what you forgot before and now this is a better error handling syntax I would say so let's

31
00:02:58,320 --> 00:02:59,490
not focus onto this.

32
00:02:59,490 --> 00:03:06,210
Try catch Pardo because actually this is exactly the same approach that we followed when creating the

33
00:03:06,210 --> 00:03:07,590
place of course.

34
00:03:07,590 --> 00:03:12,660
Now we don't want to save and push but we'll remove and Paul little hint here.

35
00:03:12,810 --> 00:03:17,110
But generally the handling of this code is exactly the same.

36
00:03:17,190 --> 00:03:20,220
So we can need a session to start our transaction.

37
00:03:20,250 --> 00:03:26,640
And only if we can delete the place and if we can delete the place the from the corresponding user then

38
00:03:26,790 --> 00:03:29,410
this transaction should be executed.

39
00:03:29,580 --> 00:03:31,590
Otherwise we will have an error here.

40
00:03:31,620 --> 00:03:32,300
So this one.

41
00:03:32,310 --> 00:03:33,240
Something went wrong.

42
00:03:33,260 --> 00:03:34,310
Could not delete place.

43
00:03:34,740 --> 00:03:39,230
So now is your chance to post the video at this stage and to implement this code on your own.

44
00:03:39,240 --> 00:03:40,710
After that we'll do it together

45
00:03:47,460 --> 00:03:48,600
so let's see.

46
00:03:48,600 --> 00:03:50,560
We already have some code here.

47
00:03:50,670 --> 00:03:53,110
I would like to start from scratch though.

48
00:03:53,310 --> 00:03:57,570
For that we first need to create our new constant for our current session.

49
00:03:57,570 --> 00:04:03,590
Here we have to add a weight as it's an asynchronous task and now we need to use start session here.

50
00:04:03,810 --> 00:04:04,880
We'll start session.

51
00:04:04,920 --> 00:04:12,000
We can now use the start transaction method here and with that we can get started with the actual logic

52
00:04:12,030 --> 00:04:19,910
we need to make sure we can delete the place first we need to remove the place from our places collection.

53
00:04:19,940 --> 00:04:21,710
We checked before whether the place exists.

54
00:04:21,710 --> 00:04:28,580
Therefore we can simply refer to place remove here and we need to add deception property here to make

55
00:04:28,580 --> 00:04:32,080
sure we refer to the current session so here.

56
00:04:32,090 --> 00:04:34,880
So this the session that we just created.

57
00:04:34,880 --> 00:04:39,960
And removing all as an asynchronous task so we remove the place.

58
00:04:39,980 --> 00:04:45,900
Now we have to access our place stored in the create or Saudi place I.D..

59
00:04:46,010 --> 00:04:53,230
For that we prefer to place start creator and in the creator we want to access places our places Ellroy

60
00:04:53,450 --> 00:04:54,100
and hero.

61
00:04:54,110 --> 00:04:56,760
We now don't want to push but to pull.

62
00:04:56,840 --> 00:04:59,000
Well what our place.

63
00:04:59,390 --> 00:05:05,720
As explained before for push pull will also automatically remove the I.D. so we don't have to explicitly

64
00:05:05,720 --> 00:05:07,610
tell Mongoose to remove on a deep.

65
00:05:07,610 --> 00:05:10,220
This is done internally by default.

66
00:05:10,250 --> 00:05:13,370
This should hopefully remove the place from the user.

67
00:05:13,370 --> 00:05:17,000
What we need to do now is we need to save our newly created user.

68
00:05:17,000 --> 00:05:25,280
This is again an asynchronous task and we referred to police dot creator and now to the safe method.

69
00:05:25,290 --> 00:05:28,760
They're important though as we did it for remove with our places.

70
00:05:28,760 --> 00:05:31,470
Here we again have to refer to our current session.

71
00:05:31,490 --> 00:05:33,480
You can name is of course as you prefer.

72
00:05:33,530 --> 00:05:35,430
This is the name of the constant here.

73
00:05:35,690 --> 00:05:40,700
We can use places pull and save on create the like that because creator.

74
00:05:40,700 --> 00:05:45,980
Well thanks depopulate gave us the full User object linked to that place.

75
00:05:46,400 --> 00:05:51,800
And if all this was successful then we can finally commit our turn transaction.

76
00:05:51,800 --> 00:05:52,940
So this is it actually.

77
00:05:52,940 --> 00:05:59,030
With that we can also hopefully remove a place the response right here is fine so we can keep this.

78
00:05:59,030 --> 00:06:06,080
So let's save this and let's go to mongo TB and let's say we want to delete the Empire State Building

79
00:06:06,080 --> 00:06:06,450
now.

80
00:06:06,470 --> 00:06:08,710
For that we need our object out here.

81
00:06:08,720 --> 00:06:09,470
So this one.

82
00:06:09,470 --> 00:06:11,380
So let's copy paste this.

83
00:06:11,480 --> 00:06:13,130
Now let's go to postman.

84
00:06:13,490 --> 00:06:15,590
Create a new request this time.

85
00:06:15,590 --> 00:06:20,410
This is a delete request.

86
00:06:20,430 --> 00:06:24,580
This goes to slash places here and now slash.

87
00:06:24,600 --> 00:06:30,570
Well our I.D. that we just copied if we had sent.

88
00:06:30,560 --> 00:06:36,660
Now we can hopefully delete the place and we should also see that the place is no longer part of the

89
00:06:36,670 --> 00:06:38,210
array in our user.

90
00:06:38,220 --> 00:06:39,060
So let's send

91
00:06:41,870 --> 00:06:42,920
and this looks good.

92
00:06:42,920 --> 00:06:44,760
We get the message deleted place here.

93
00:06:44,840 --> 00:06:48,110
Let's just have a look at this in our database.

94
00:06:48,110 --> 00:06:55,530
If we rule out that we can see places as empty so this worked fine and also for our user here we still

95
00:06:55,530 --> 00:06:56,150
left the error.

96
00:06:56,270 --> 00:07:00,390
But as you can see we don't have any more places here in our area.

97
00:07:00,470 --> 00:07:03,950
Therefore deleting the place from the user also worked fine.

98
00:07:04,960 --> 00:07:07,900
With that we are almost done with this module.

99
00:07:07,900 --> 00:07:15,510
There is actually one optional thing I would like to show you because here we use this populate method

100
00:07:15,750 --> 00:07:20,460
and there is another part in our project where we could use this populate method.

101
00:07:20,460 --> 00:07:26,370
This is optional though I just want to show you how this method works in a bit more detail and the place

102
00:07:26,400 --> 00:07:30,140
where we can use this as an alternative is here.

103
00:07:30,300 --> 00:07:35,020
When we get our places by the user I.D..

104
00:07:35,240 --> 00:07:40,120
So in this constant here this is the last part of this module Indian.

105
00:07:40,130 --> 00:07:43,630
So let me show you how we can use an alternative syntax here.

106
00:07:43,770 --> 00:07:44,930
Have depopulate method.
