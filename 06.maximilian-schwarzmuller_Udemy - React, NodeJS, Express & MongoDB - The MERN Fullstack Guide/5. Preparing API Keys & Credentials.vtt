WEBVTT
1
00:00:02.140 --> 00:00:08.320
Before we build and deploy our application I want to spend some words on the Google API key we're using

2
00:00:08.380 --> 00:00:10.630
and all is about and want it to be atleast thereafter.

3
00:00:11.050 --> 00:00:16.420
So here are logged in with that Google account which I used to create that Google API keys were using

4
00:00:16.420 --> 00:00:18.950
on both the backend and the front end.

5
00:00:19.210 --> 00:00:24.610
And I also made sure that I selected my project here which we created earlier in the course.

6
00:00:24.610 --> 00:00:33.810
Now here under credentials you will see your API key and you'll see that API key I used in the front

7
00:00:33.810 --> 00:00:40.500
and indexed html file and and as you tool folder the location shares fall on the back end before.

8
00:00:40.500 --> 00:00:47.610
Now this key can be configured if you click on it you can configure where it can be used to which apps

9
00:00:47.610 --> 00:00:48.780
can use it.

10
00:00:48.780 --> 00:00:54.810
Now here it is open to everyone and maybe that is fine for you but you should be aware of the fact that

11
00:00:54.810 --> 00:01:04.100
you can configure it you can for example control which applications running on which age to the PD refers

12
00:01:04.220 --> 00:01:10.870
or IP addresses can use this key and if your key is getting used on any other location.

13
00:01:11.030 --> 00:01:17.000
So on any average server it won't be able to communicate with this Google service and that might be

14
00:01:17.000 --> 00:01:24.010
something you want to do to lock down your key QED IP address your app is getting hosted on in the end.

15
00:01:24.020 --> 00:01:28.790
Now since we're using the key both on the front and as well as the back end if you're hosting your two

16
00:01:28.790 --> 00:01:34.220
applications front and a back end on two different servers which is something you could do you want

17
00:01:34.220 --> 00:01:39.980
to add all IP addresses of both the front end and the back end server otherwise if everything is getting

18
00:01:39.980 --> 00:01:47.060
served from one single server adding that IP address is the right thing or you add the H to repeat referrals

19
00:01:47.060 --> 00:01:47.540
here.

20
00:01:47.540 --> 00:01:52.370
So there you enter the you or else on which your front end and back and will be hosted on.

21
00:01:52.440 --> 00:01:54.470
So that is something you could consider.

22
00:01:54.500 --> 00:01:58.890
I will pick non here but it is something you definitely want to be aware of.

23
00:01:58.910 --> 00:02:04.610
You can also restrict your key down there you can restrict your key regarding the API as it can be used

24
00:02:04.610 --> 00:02:13.990
for and in our example we're really only using the geo coding API and then the maps javascript API so

25
00:02:13.990 --> 00:02:20.470
you might not need the our API and locking it down ensures that if someone else is somehow able to do

26
00:02:20.470 --> 00:02:25.630
something with your key you don't want that at least it can't use it for any API so that is something

27
00:02:25.840 --> 00:02:28.090
you could consider as well.

28
00:02:28.090 --> 00:02:36.430
So in general just consider locking down your key to IP addresses to domains and or to specific services

29
00:02:36.430 --> 00:02:37.530
that can be used.

30
00:02:37.570 --> 00:02:43.090
Now maybe you also want to have two different keys one which is really locked down and one which is

31
00:02:43.090 --> 00:02:48.550
relatively open because only you know it because you only use it in development and you never shared

32
00:02:48.550 --> 00:02:49.740
with someone else.

33
00:02:49.750 --> 00:02:55.000
Keep in mind that if your key is part of your fronted app everyone can see it so that already counts

34
00:02:55.030 --> 00:02:56.030
as sharing.

35
00:02:56.200 --> 00:03:02.050
But if you will only use it locally for development you could create a new API key which is relatively

36
00:03:02.110 --> 00:03:09.460
open which you use during development and a different key for production which is locked down and to

37
00:03:09.460 --> 00:03:10.270
simulators.

38
00:03:10.270 --> 00:03:16.270
I will create a new API key here which is getting generated and now I could restrict this but I will

39
00:03:16.270 --> 00:03:19.320
keep it open but now I have two different keys here.

40
00:03:19.340 --> 00:03:22.650
Now let's say this is my development key the first one.

41
00:03:22.660 --> 00:03:28.380
Well then I can grab this and go back to my code and use this here in the front end for my reactive

42
00:03:28.420 --> 00:03:36.640
Google API key and also on the back end for my Google API key and I can insert this here and later I

43
00:03:36.640 --> 00:03:41.920
will show you how to use different environment variables for production and then we could use the second

44
00:03:42.040 --> 00:03:48.850
locked down key Now speaking of locking down let's also have a look at Mongo TB Atlas again.

45
00:03:48.850 --> 00:03:54.070
You'll learn how you can configure it how you can control the database and network access.

46
00:03:54.070 --> 00:03:55.790
And I want to come back to that.

47
00:03:55.930 --> 00:04:02.020
Of course you could create a brand new cluster for your production project or at least you create a

48
00:04:02.020 --> 00:04:07.940
new database in the collections here which you use for production which is what I will do here.

49
00:04:08.080 --> 00:04:12.490
Merlin prod and endeavor I will add a place's collection.

50
00:04:12.490 --> 00:04:18.280
And thereafter also a user's collection so that we have all these collections already prepared.

51
00:04:18.290 --> 00:04:20.390
So let me quickly do this here.

52
00:04:20.530 --> 00:04:21.130
Users

53
00:04:24.600 --> 00:04:27.350
but besides this setup which absolutely makes sense.

54
00:04:27.360 --> 00:04:35.400
But besides this setup you also might want to revisit your database and network access settings.

55
00:04:35.400 --> 00:04:41.430
You might want to consider creating a new user specifically for production because you want to give

56
00:04:41.430 --> 00:04:43.800
a different privileges or whatever you want.

57
00:04:43.830 --> 00:04:49.350
It's not something I will do here but you could easily do that and then since we manage our user on

58
00:04:49.350 --> 00:04:51.720
the back end here through environment variables.

59
00:04:51.720 --> 00:04:56.910
Once you know how you can provide different values for development and for production you can easily

60
00:04:56.910 --> 00:05:03.270
swap your credentials here not in this file but for these variables to use different users for development

61
00:05:03.270 --> 00:05:10.620
and for production now for network access you want to ensure that of course this Mongo TB Atlas server

62
00:05:10.620 --> 00:05:17.160
is not just open to your local IP address but that later once we deployed our application to a real

63
00:05:17.160 --> 00:05:21.720
server you add the IP address of that server here.

64
00:05:21.720 --> 00:05:26.410
Now we'll come back to that once we did deploy our application for now we can ignore this.

65
00:05:26.850 --> 00:05:28.530
And with this we're generally set.

66
00:05:28.530 --> 00:05:30.600
We added the environment variables.

67
00:05:30.600 --> 00:05:37.620
Now let's learn how we build our ReACT application for production to optimize and minute fight code

68
00:05:37.620 --> 00:05:43.500
to get a small code as possible how we can provide different values for production and how we can do

69
00:05:43.500 --> 00:05:45.030
the same for the backend.
