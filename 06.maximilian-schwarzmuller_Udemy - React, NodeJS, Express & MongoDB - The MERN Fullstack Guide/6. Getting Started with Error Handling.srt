1
00:00:02,530 --> 00:00:05,560
So we're sending a sign up request and that's great.

2
00:00:05,570 --> 00:00:07,980
And we got many of our requests to send.

3
00:00:08,050 --> 00:00:15,310
But before we do so let's actually improve our setup here a little bit at the moment we're sending this

4
00:00:15,310 --> 00:00:21,370
request but there are two things which I'm not liking for one we're not letting the user know that something

5
00:00:21,370 --> 00:00:22,140
is happening.

6
00:00:22,150 --> 00:00:28,440
Now of course our application here is super super fast because it's all running locally on our machine.

7
00:00:28,510 --> 00:00:34,540
So the moment we press log in or sign up here the request gets sent and it only takes milliseconds to

8
00:00:34,540 --> 00:00:35,550
complete.

9
00:00:35,650 --> 00:00:37,920
This will probably take a bit longer.

10
00:00:37,960 --> 00:00:43,690
Once you really deployed this to a real server and the distance between the user and your code is a

11
00:00:43,690 --> 00:00:45,170
bit further.

12
00:00:45,460 --> 00:00:51,880
So it would be nice to show some loading spinner some indicator to the user that something is happening

13
00:00:52,570 --> 00:00:54,130
in addition to that.

14
00:00:54,220 --> 00:00:55,820
What if an error occurs.

15
00:00:55,840 --> 00:01:04,150
For example if I switched to sign up here and I hacked myself into a wrong form submission by inspecting

16
00:01:04,150 --> 00:01:07,680
my content and then manually removing the disabled attribute.

17
00:01:07,690 --> 00:01:10,930
Now the button is enabled and any user can do that.

18
00:01:10,960 --> 00:01:12,970
Of course this is not a security issue.

19
00:01:12,970 --> 00:01:19,990
You're only hacking yourself but if you do that nonetheless you are able to for example enter invalid

20
00:01:20,020 --> 00:01:20,990
data here.

21
00:01:21,010 --> 00:01:27,610
So if I re enabled this I can press sign up here and of course we do get back in error.

22
00:01:27,610 --> 00:01:33,250
We can see it here and to lock our back and validation works and this is the reason why we do half back

23
00:01:33,250 --> 00:01:38,440
and validation by the way because front and validation can be disabled by the user.

24
00:01:38,440 --> 00:01:44,620
But still it's not a great user experience that it still continues and we show no error message the

25
00:01:44,620 --> 00:01:51,370
same by the way if we would try to sign up with a user who already exists in that scenario we also don't

26
00:01:51,370 --> 00:01:53,840
really handle an error.

27
00:01:53,860 --> 00:01:59,800
So on the back end we got some security mechanisms in place for signing up or validating input and in

28
00:01:59,800 --> 00:02:05,440
the sign up controller when we create a user we all do check whether that user already exists.

29
00:02:05,440 --> 00:02:11,470
But at the moment we're not really taking advantage of this on the front and we're not giving the user

30
00:02:11,470 --> 00:02:12,920
a great feedback.

31
00:02:13,000 --> 00:02:17,170
Never for a loading state nor for an error state.

32
00:02:17,170 --> 00:02:24,460
So let's change both now and to change both in my off page on the front and I in the end want a handle

33
00:02:24,520 --> 00:02:28,550
well two different states the loading and the error state.

34
00:02:28,660 --> 00:02:31,690
So here we already import use state.

35
00:02:31,720 --> 00:02:39,100
And with that we can set up new states here in our off function or off component we have let's say is

36
00:02:39,160 --> 00:02:43,350
loading and set is loading here.

37
00:02:43,630 --> 00:02:51,130
And initially we're not loading so I start in a false state and I also have an error and let's say a

38
00:02:51,130 --> 00:02:54,840
set error or state and function here.

39
00:02:54,890 --> 00:02:56,480
And initially we have no error.

40
00:02:56,480 --> 00:02:58,640
So does this on the find.

41
00:02:58,640 --> 00:03:03,540
Now we can use these two states to kind of update our UI.

42
00:03:03,740 --> 00:03:11,030
So here when we start sending the request before we send it I of course want a set is loading to true

43
00:03:11,030 --> 00:03:18,600
for example because now I am loading and I want do you I to read render HERE SINCE THIS HERE IS A async

44
00:03:18,600 --> 00:03:21,220
function and they offer all wrapped in a promise.

45
00:03:21,380 --> 00:03:28,100
React will all the go ahead and immediately update the UI and not batch multiple state updates for example

46
00:03:28,100 --> 00:03:30,560
state updates that come later together.

47
00:03:30,590 --> 00:03:35,380
Instead it will do this right away because it detects that this is a synchronous and there will be some

48
00:03:35,380 --> 00:03:39,800
time between this State Update and potential future state updates.

49
00:03:39,800 --> 00:03:42,300
So here I set is loading to true.

50
00:03:42,470 --> 00:03:48,590
Now we can all of course set our error to null here and make sure it is reset but we don't really need

51
00:03:48,590 --> 00:03:49,350
to do that.

52
00:03:49,430 --> 00:03:50,720
We should handle that differently.

53
00:03:50,720 --> 00:03:53,180
So let's just set this loading to true.

54
00:03:53,180 --> 00:03:59,630
Now once we got our response I of course want to set is loading two faults again and no matter if we

55
00:03:59,630 --> 00:04:03,440
got a response or an error or loading is definitely done.

56
00:04:03,860 --> 00:04:08,510
So at this point here I want to set is loading two faults.

57
00:04:08,660 --> 00:04:15,710
Now if we do have an error however I want to call set error and set this to let's say error message

58
00:04:15,980 --> 00:04:21,620
it's up to you what you want here if you want to set this to a more complex object or if your error

59
00:04:21,680 --> 00:04:27,140
should really just be a message which you expect to get here we can also provide a fallback in case

60
00:04:27,200 --> 00:04:38,270
a message property does not exist where we just say something went wrong please try again.

61
00:04:38,280 --> 00:04:44,590
We shouldn't we need that though because on the back end we already have error handling in place which

62
00:04:44,850 --> 00:04:53,400
always in the end gives us a fallback error message nonetheless this thousand hurt so we now get this

63
00:04:53,400 --> 00:04:58,560
set up here and we're ever setting our error a state or we're setting the loading state.

64
00:04:58,560 --> 00:05:00,140
Now this log anything.

65
00:05:00,330 --> 00:05:04,570
I only want to call off the log in if we didn't have an error.

66
00:05:04,590 --> 00:05:12,030
So only here in the tri block and therefore I actually want to set as loading two falls here and here

67
00:05:12,030 --> 00:05:12,910
separately.

68
00:05:12,930 --> 00:05:14,420
Otherwise I would set it to false.

69
00:05:14,460 --> 00:05:18,250
After we already changed the context and probably redirect it.

70
00:05:18,300 --> 00:05:24,080
So make sure to first clear your local state on this page before you trigger something that might change

71
00:05:24,100 --> 00:05:25,500
the component that's loaded.

72
00:05:25,500 --> 00:05:30,730
Otherwise we might be updating a state on a component which is not on the screen anymore.

73
00:05:30,900 --> 00:05:34,420
So now we have a loading state and we have some error state.

74
00:05:34,440 --> 00:05:41,730
Now of course we want to take advantage of these new states and for that attached you find two new components

75
00:05:41,730 --> 00:05:48,510
in the components zip file which you can drag and drop into your components UI elements folder.

76
00:05:48,510 --> 00:05:53,760
That's the loading spinner and the error modal the loading spinner also has its own C as s fault the

77
00:05:53,760 --> 00:05:55,760
error model doesn't.

78
00:05:55,860 --> 00:05:58,860
Now these are components which do just what the names imply.

79
00:05:58,860 --> 00:06:02,950
They render a loading spinner or they utilize our existing modal.

80
00:06:02,970 --> 00:06:08,160
So make sure this import path fits your structure and it points of your modal component file.

81
00:06:08,430 --> 00:06:13,770
So they render a modal which shows an error message or a loading spinner.

82
00:06:13,770 --> 00:06:20,370
Now with these add it back in off page and the off component here let's import those components.

83
00:06:20,370 --> 00:06:30,650
So I will import the air or modal here from shared components UI elements air or modal.

84
00:06:30,840 --> 00:06:39,360
And of course do the same for the loading spinner which I import from shared components UI elements

85
00:06:39,480 --> 00:06:45,490
loading spinner these two new components help us use our new states were managing the is loading and

86
00:06:45,490 --> 00:06:54,740
the error state let's maybe start with the is loading state here inside of this cart I will add a dynamic

87
00:06:54,980 --> 00:07:01,600
element where I check is loading and if this is true I want to render the loading spinner and later

88
00:07:01,610 --> 00:07:08,060
important add the as overlay prop just like this you could set it to true but this is not required it's

89
00:07:08,060 --> 00:07:13,970
true by default if you added like this and this in the end will just impact how exactly does loading

90
00:07:13,970 --> 00:07:20,630
spinner is loaded you can check out the loading spinner logic and see as s styles to understand what

91
00:07:20,630 --> 00:07:25,680
exactly this does and with that if we save this let's give it a try.

92
00:07:25,710 --> 00:07:34,830
Let's go back here switch to sign up and Andrew of some credentials here click on sign up and now we

93
00:07:34,830 --> 00:07:37,080
see a loading spinner and we are redirected.

94
00:07:37,080 --> 00:07:42,380
Please also note however that I actually got an error here so I don't want to be redirected.

95
00:07:42,510 --> 00:07:45,850
I got an error and still I was redirected.

96
00:07:46,080 --> 00:07:49,690
Now that's something we'll have to handle in the next lecture.

97
00:07:49,770 --> 00:07:55,410
We're not showing our error modal but even worse than that we were redirected as I just said and this

98
00:07:55,410 --> 00:07:56,970
is definitely not what we want.
