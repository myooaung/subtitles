1
00:00:02,190 --> 00:00:09,810
To use this newly created custom agent if you look in the off page component here I'll replace my existing

2
00:00:09,810 --> 00:00:15,470
logic to send the request here with the logic in my custom hook.

3
00:00:15,470 --> 00:00:26,010
So here first of all we can import does hook we import use age to be client from shared hooks age to

4
00:00:26,010 --> 00:00:32,840
the peacock and then here we have to call use H2 to be client not when we want to send the request but

5
00:00:32,840 --> 00:00:38,420
initially in this component because keep in mind this custom hook creates everything we need to send

6
00:00:38,420 --> 00:00:44,270
the request and then returns us for example a pointer at this send request function.

7
00:00:44,270 --> 00:00:49,700
And this is then the function we need to call to really send the request so we can get rid of is loading

8
00:00:49,700 --> 00:00:55,640
and the error is state here because this is now managed instead of the hook and instead call use h to

9
00:00:55,640 --> 00:01:02,480
be client like this and then this returns us some data so we can use object D structuring here to for

10
00:01:02,480 --> 00:01:11,660
example get access to is loading to the error and all that to send request which is very important also

11
00:01:11,660 --> 00:01:19,520
to clear error which we need to well clear an error now is that if we scroll down we got a couple of

12
00:01:19,520 --> 00:01:25,400
errors set as loading does not exist anymore and we don't need it anymore it will be done all inside

13
00:01:25,400 --> 00:01:30,590
of the send request function which is managed in our own hook and instead of using fetch here I will

14
00:01:30,590 --> 00:01:37,820
now call send the request pass my you are El but then actually not such an object here but as a second

15
00:01:37,850 --> 00:01:40,780
argument the HP method.

16
00:01:41,060 --> 00:01:47,390
So just posed as a string as a second argument The third argument if we have a look at send request

17
00:01:47,960 --> 00:01:55,190
should then actually be the body so back in the off component let's grab this piece of data here

18
00:01:58,670 --> 00:02:06,310
and add this as a third argument argument here after post and forth argument then is our headers object.

19
00:02:06,650 --> 00:02:14,060
This now sends a valid request hopefully and send request all the returns I promise this however that

20
00:02:14,090 --> 00:02:20,000
already has our response data and we don't need to manually parse it or check forty four hundred ish

21
00:02:20,090 --> 00:02:27,590
status code that is already done inside of our hook therefore we don't set is loading here we don't

22
00:02:27,590 --> 00:02:33,560
set it here and in the catch block we also don't need to set an error India because we're doing try

23
00:02:33,560 --> 00:02:39,830
catch already in our custom hook so we don't need to do any Try catching here at all we can get rid

24
00:02:39,830 --> 00:02:48,140
of this because everything will be handled by the custom hook here we will just get back our response

25
00:02:48,230 --> 00:02:53,130
data in the end or undefined if we do have an error.

26
00:02:53,420 --> 00:02:59,180
Now I don't care about the response data in this specific component so I can actually just a wait and

27
00:02:59,180 --> 00:03:00,960
then log in thereafter.

28
00:03:00,980 --> 00:03:07,850
Now we have to be careful though with this logic in the HP hook I said we do have try catch and we do

29
00:03:08,360 --> 00:03:13,610
but in the catch block here we're not returning any response.

30
00:03:13,610 --> 00:03:18,890
Instead we're just doing nothing which means automatically undefined gets returned.

31
00:03:19,130 --> 00:03:24,890
Hence at the moment if we do have an error in here we'll actually still make it to this line here which

32
00:03:24,890 --> 00:03:26,990
I don't want of course.

33
00:03:26,990 --> 00:03:33,350
So a little improvement here actually should be that if we do have an error yes we set our error but

34
00:03:33,350 --> 00:03:41,660
we then also throw the error again so that the component that uses our hook has a chance of knowing

35
00:03:41,660 --> 00:03:47,090
that something went wrong and they offer a set as loading should be set here and also here in the success

36
00:03:47,090 --> 00:03:54,140
case before we return a response data so now I am again throwing a an error here in the custom hook

37
00:03:54,150 --> 00:03:55,560
into function there.

38
00:03:55,590 --> 00:04:03,120
And so in our component we want to re add try catch just to make sure that we don't always call off

39
00:04:03,180 --> 00:04:08,240
log in so let's move that in here.

40
00:04:08,240 --> 00:04:14,520
Catch any hour or here in the catch block and call off logging only in the try block.

41
00:04:14,560 --> 00:04:18,230
So if we get no error in the catch block we do have an error.

42
00:04:18,500 --> 00:04:21,530
And while here I don't need to do much with it though we can log it.

43
00:04:21,530 --> 00:04:26,920
We can ignore it because in the end here in the catch block I don't need to the error.

44
00:04:26,930 --> 00:04:28,240
We're doing all of that.

45
00:04:28,250 --> 00:04:37,420
We're setting our error a state ends on all in our custom hook so this can be an empty catch block in

46
00:04:37,420 --> 00:04:38,080
the end.

47
00:04:38,080 --> 00:04:44,770
Alternatively you could not use tri catch here and use the good old Venn method on the promise instead

48
00:04:44,950 --> 00:04:49,480
and just omit a catch method now.

49
00:04:49,530 --> 00:04:52,970
Similar logic flawed our of a request here there.

50
00:04:52,970 --> 00:04:56,920
I don't care about the response but I want to send a request here.

51
00:04:57,020 --> 00:05:06,490
It is a post request and the data is this that I hear so I will pass this as a third argument and then

52
00:05:06,490 --> 00:05:13,160
these headers as a fourth argument just like this that's now a send request.

53
00:05:13,150 --> 00:05:19,180
There it is and try catch to handle any errors we're getting we don't need to do anything of that here

54
00:05:19,180 --> 00:05:23,410
though we just need to continue if we have no error or do nothing.

55
00:05:23,410 --> 00:05:28,600
If we do have an error and then the error handler we want to call clear error.

56
00:05:28,600 --> 00:05:34,780
This function we get from our custom hook or we get rid of the error handler altogether and then on

57
00:05:34,780 --> 00:05:41,600
clear we just point at clear error which is this function coming from our own hook and with Dad let's

58
00:05:41,600 --> 00:05:42,200
give it a try.

59
00:05:42,200 --> 00:05:46,870
Let's save that go to a syndicate and maybe try logging in here.

60
00:05:47,030 --> 00:05:48,070
If I do that.

61
00:05:48,170 --> 00:05:51,360
See the spinner and I get an error here.

62
00:05:51,380 --> 00:05:59,190
I got an error to a board controller is not a function that makes sense because I do have this a board

63
00:05:59,190 --> 00:06:05,850
controller set up in a custom hook but at the moment I never remove and a board controller from my array

64
00:06:05,850 --> 00:06:09,270
of a board controllers ever request completes.

65
00:06:09,300 --> 00:06:14,480
That's a little oversight from my and of course we should do that once we have a response.

66
00:06:14,550 --> 00:06:21,360
We know that the request complete it so once we're here after we passed the response body so here I

67
00:06:21,390 --> 00:06:28,920
then want to go to my active HP requests and set current equal to active HP requests stored current

68
00:06:29,970 --> 00:06:36,720
and filter out this specific controller that was responsible for this specific request.

69
00:06:36,720 --> 00:06:42,870
So here I want to filter all my requests controllers and remove the request controller which I used

70
00:06:42,870 --> 00:06:45,450
for this request which had you with this logic.

71
00:06:45,450 --> 00:06:52,190
This keeps every controller except for the controller which was used in this request with Dad we're

72
00:06:52,200 --> 00:06:58,230
not having any old request controller which we then would try to use to cancel our request which is

73
00:06:58,230 --> 00:07:05,100
not on its way anymore but in addition the error actually although of course occurred because here I

74
00:07:05,100 --> 00:07:08,460
have a board controller not a board controller.

75
00:07:08,460 --> 00:07:14,340
The function is just named a board though so we got an error because I was calling a function that doesn't

76
00:07:14,340 --> 00:07:14,970
exist.

77
00:07:14,970 --> 00:07:20,530
But this call shouldn't have happened in the first place which is why adding this logic here also is

78
00:07:20,550 --> 00:07:21,120
important.

79
00:07:21,120 --> 00:07:27,540
We want to clear the board controllers that belong to the request which just complete it but of course

80
00:07:27,540 --> 00:07:32,730
we also want to fix this error down there and make sure I use a board and not a board controller as

81
00:07:32,730 --> 00:07:35,660
a function name or as a method name.

82
00:07:35,700 --> 00:07:41,130
So with this change now we make sure we don't try to cancel a request which already completed and therefore

83
00:07:41,130 --> 00:07:43,650
if we test us again here.

84
00:07:43,740 --> 00:07:46,200
This looks way better now.

85
00:07:46,200 --> 00:07:52,790
Let's also try signing up here and let's first of all try this with credentials where we should get

86
00:07:52,790 --> 00:07:53,710
an error.

87
00:07:53,720 --> 00:07:57,290
This works if I use valid credentials.

88
00:07:57,410 --> 00:08:04,640
This also works and if I try signing up with invalid data I mean logging in with invalid data.

89
00:08:04,640 --> 00:08:08,630
I get an error and I only continue if I have valid inputs.

90
00:08:08,930 --> 00:08:13,960
So this is looking good to me it looks like our custom hook is doing its job.

91
00:08:14,180 --> 00:08:21,460
And with that we can continue and we can use this custom hook in our users component as well.

92
00:08:21,470 --> 00:08:26,300
Definitely feel free to try to implement it there on your own first in the next lecture.

93
00:08:26,300 --> 00:08:27,520
We'll do it together.
