1
00:00:02,500 --> 00:00:08,670
Now to conclude this module there are some tweaks which we can apply on the back end in the places controller

2
00:00:08,680 --> 00:00:16,420
for example when we create a new place here we're extracting the idea of the user to whom the place

3
00:00:16,420 --> 00:00:17,240
belongs.

4
00:00:17,290 --> 00:00:24,640
From the request body No actually keep in mind did we protect this create place route here in places

5
00:00:24,640 --> 00:00:30,720
routes we can only get to this route if we are authenticated and indeed check off middleware.

6
00:00:30,790 --> 00:00:36,490
I am extracting the user I.D. and I'm storing it on this user data object on the request.

7
00:00:36,490 --> 00:00:44,800
So actually it's better to not get the I.D. from the front end user where invalid I.D. could be provided

8
00:00:45,160 --> 00:00:51,100
but instead to rely on the I.D. we extract that from the token which has to be attached anyways and

9
00:00:51,100 --> 00:00:52,840
which can't be faked.

10
00:00:52,840 --> 00:01:00,310
So here when I create a new place creator will be a request user data dot user I.D. to use does automatically

11
00:01:00,310 --> 00:01:04,600
extract that I.D. which we get here and check off middleware.

12
00:01:04,630 --> 00:01:11,510
This is a better approach of getting the I.D. instead of getting it as part of the request body now

13
00:01:11,550 --> 00:01:18,270
just to avoid confusion in the places roots here where we need a user I.D. to get all the places for

14
00:01:18,270 --> 00:01:25,290
a user that I.D. should still be part of the you are L because you're able to get places of any user

15
00:01:25,290 --> 00:01:29,250
to see places of any user not just your own places.

16
00:01:29,280 --> 00:01:35,490
If we would get user I.D. from the attached token we would only see our own places because that then

17
00:01:35,520 --> 00:01:38,430
is the only user I.D. we know so here.

18
00:01:38,430 --> 00:01:41,520
This should be part of you or else still.

19
00:01:41,520 --> 00:01:48,870
Now another week I want to make is that I want to ensure that when ever we return user related data

20
00:01:49,590 --> 00:01:52,320
we actually omit the password.

21
00:01:52,530 --> 00:01:55,680
But I think we already are doing that.

22
00:01:55,680 --> 00:02:01,520
So here in the places controller we are returning a message here here.

23
00:02:01,530 --> 00:02:09,180
I returned a place converted to an object but there I got no user data mixed in it's just a place data

24
00:02:11,210 --> 00:02:18,980
in create place in the end I returned he created place but again there we got just a user I.D. as part

25
00:02:18,980 --> 00:02:26,930
of the place not the full User object for find or get places by user I.D. we do populate places on the

26
00:02:26,930 --> 00:02:33,770
user but what I return then is just my array of places which again just has a user item then and not

27
00:02:33,800 --> 00:02:34,600
the user data.

28
00:02:34,610 --> 00:02:41,220
Besides that and forget place by I.D. we all have just returned to place now in the user controller

29
00:02:41,280 --> 00:02:44,870
when we sign up I return user I.D. email and token.

30
00:02:44,870 --> 00:02:46,020
I mean when we log in.

31
00:02:46,020 --> 00:02:46,400
Sorry.

32
00:02:46,410 --> 00:02:53,420
When we sign up I return the same though and when we get all users I return all my user data.

33
00:02:53,450 --> 00:02:59,220
But I already exclude the password here with projection so we're already doing the right thing here

34
00:02:59,220 --> 00:03:03,560
and we're never sending any confidential data over the wire here.

35
00:03:03,780 --> 00:03:06,030
And with that I am happy with the setup.

36
00:03:06,030 --> 00:03:12,810
Now we just need to reflect this change we made in the places controller where we now get the user I.D.

37
00:03:12,810 --> 00:03:19,110
differently in the front end because now in the front end we can adjust our code and make sure that

38
00:03:19,110 --> 00:03:26,730
when we add a new place here in New Place J.S. we no longer add to create or field to the request because

39
00:03:26,730 --> 00:03:30,470
we're not interested on it on the back end anyways.

40
00:03:30,510 --> 00:03:32,800
And with that let's give it a try.

41
00:03:32,970 --> 00:03:38,840
Marine plots to there only is one but still

42
00:03:41,580 --> 00:03:45,110
let's use the right address in the good old image we used before.

43
00:03:45,120 --> 00:03:47,240
For now click Add plays.

44
00:03:47,400 --> 00:03:48,750
This fails.

45
00:03:48,750 --> 00:03:50,400
So let's see why it failed.

46
00:03:50,970 --> 00:03:57,000
If we go to the back end I print NOL here yeah.

47
00:03:57,020 --> 00:04:03,740
Of course it fails because I'm still using creator here to find a user by I.D. here of course I now

48
00:04:03,740 --> 00:04:09,140
all to have to use the idea which is part of the request creator is not received anymore.

49
00:04:10,480 --> 00:04:13,530
So with that however we should be fine.

50
00:04:13,540 --> 00:04:18,830
Let's quickly search for a creator here.

51
00:04:18,850 --> 00:04:22,990
This is all in different contexts so this should be working now.

52
00:04:23,500 --> 00:04:29,710
If we save this and we simply read centers on the front end now it works.

53
00:04:29,710 --> 00:04:35,980
Now we get to places here on manual can also delete a place of course and we get a working application

54
00:04:35,980 --> 00:04:37,960
with a little bit of a cleaner back and.
