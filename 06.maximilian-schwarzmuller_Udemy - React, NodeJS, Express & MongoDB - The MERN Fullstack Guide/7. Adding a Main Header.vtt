WEBVTT
1
00:00:02.320 --> 00:00:08.590
Now with that short theory lecture out of the way let's go back to working on our components here on

2
00:00:08.590 --> 00:00:12.650
the users list component there is a little adjustment I want to make which I forgot before.

3
00:00:12.840 --> 00:00:20.110
On that output here if we find no users there I also want to use the card's component so import card

4
00:00:20.110 --> 00:00:29.620
from shared components UI elements cart and I will use the card in here to wrap the age to tag with

5
00:00:29.620 --> 00:00:35.230
it just like this does will then look a bit nicer if we have to render it by the way.

6
00:00:35.230 --> 00:00:42.940
If you wonder how I organized my imports I have third party library imports always at the top then an

7
00:00:42.940 --> 00:00:49.000
empty line and then my own file imports where I tend to have to CSX import at the very bottom.

8
00:00:49.090 --> 00:00:51.190
Technically that does not make a difference.

9
00:00:51.250 --> 00:00:58.930
It's just how I like to organize my imports and with that we have this adjusted now let's build a brand

10
00:00:58.990 --> 00:01:03.670
new component from scratch because at the moment does looks okay.

11
00:01:03.730 --> 00:01:11.800
But one important thing that is missing is a header for example main navigation bar at the top that

12
00:01:11.800 --> 00:01:18.280
ensures that we can actually also reach other parts of our application for example at the moment we

13
00:01:18.280 --> 00:01:23.650
can view our list of users we can click to users and at the moment nothing happens but we can change

14
00:01:23.650 --> 00:01:24.180
this.

15
00:01:24.370 --> 00:01:30.570
But what we definitely can't do from inside the application is go to the new places route.

16
00:01:30.610 --> 00:01:35.840
I have to manually enter places new and of course that's not a pleasant user experience.

17
00:01:35.860 --> 00:01:40.900
We don't want to force our users to guess which you are else they can enter.

18
00:01:40.930 --> 00:01:45.310
So instead it would be nice to have a navigation at the top where you have a button that takes you to

19
00:01:45.310 --> 00:01:50.140
the new places page and that's exactly what we'll work on now for this.

20
00:01:50.160 --> 00:01:55.650
I'll go to the shared folder because the navigation isn't really exclusive to one of our pages.

21
00:01:55.650 --> 00:01:59.630
It's shared instead and they are next to you.

22
00:01:59.630 --> 00:02:08.670
I elements I'll add a navigation folder which should hold all the components that are involved in the

23
00:02:08.670 --> 00:02:12.990
navigation menu process specifically in there.

24
00:02:12.990 --> 00:02:19.740
I want to have a main header component stored in a made heterogeneous file and I will have a main header

25
00:02:20.830 --> 00:02:27.700
CSX file for the styling I want to have a main navigation J as file which will be part of the header.

26
00:02:27.710 --> 00:02:33.980
You can say the header will be the shell which provides the styling the main navigation component later

27
00:02:33.980 --> 00:02:40.340
will be the component that has all the links and it will also need some CEOs us for Dad.

28
00:02:40.350 --> 00:02:45.870
I also want to have a nav links j ust file that will actually be the collection of links which we render

29
00:02:45.870 --> 00:02:53.000
in May navigation and therefore I will have a nav links CSX file and also a site draw.

30
00:02:53.010 --> 00:02:59.190
J is followed because this app also should work nicely on mobile screens and there we will need that

31
00:02:59.190 --> 00:03:00.270
site draw.

32
00:03:01.140 --> 00:03:03.380
So a lot of components we have to work on.

33
00:03:03.390 --> 00:03:07.920
Let's start with the main header the main header is pretty straightforward.

34
00:03:07.920 --> 00:03:15.990
We import react from react and then we import main header C as S for the styling.

35
00:03:15.990 --> 00:03:19.290
We have no styling in there yet but that will follow.

36
00:03:19.500 --> 00:03:27.840
And then here we have main header as a component where we receive some props and then return some J

37
00:03:27.840 --> 00:03:36.150
is X later and we'll export that main had a component from this file so we can use it in our files now

38
00:03:36.170 --> 00:03:41.930
regarding the J is X I want to have the normal header element being rendered here and I'll add a class

39
00:03:41.930 --> 00:03:48.260
name to that header element which is main dash header and that will later be picked up by the styling

40
00:03:48.260 --> 00:03:50.990
in the main header C is as follows.

41
00:03:50.990 --> 00:03:55.400
Now what should be rendered between the opening and closing tax there.

42
00:03:55.400 --> 00:03:59.800
I want to be flexible and I want to allow anything to be rendered in there.

43
00:03:59.840 --> 00:04:07.450
Any aged him out components any custom components anything should be render arable in their so we can

44
00:04:07.450 --> 00:04:13.030
use a dynamic expression and now a special prop prop start children.

45
00:04:13.110 --> 00:04:18.730
This is one of the very few special props react nose props.

46
00:04:18.730 --> 00:04:28.040
Children will always refer to the things you pass between your opening and closing tags off your component.

47
00:04:28.120 --> 00:04:29.850
What do you mean by that.

48
00:04:29.860 --> 00:04:35.860
Well let's go to the place where I intend on using main header and that's the main navigation in there

49
00:04:35.860 --> 00:04:44.880
we can import react from react then create main navigation where we also might receive props and then

50
00:04:44.940 --> 00:04:48.240
export main navigation.

51
00:04:48.240 --> 00:04:55.920
Also don't forget to import main navigation don't see us as so we have to styles which will later add

52
00:04:56.010 --> 00:05:06.160
available and now in here in main navigation I WANT TO RETURN MY MAIN HEADER so I'll import main header

53
00:05:06.190 --> 00:05:12.990
which we just created from the main header file then we can render it like this.

54
00:05:13.180 --> 00:05:19.990
And now between the opening and closing tax we can insert what then in the end will end up here in place

55
00:05:19.990 --> 00:05:21.530
of props children.

56
00:05:21.670 --> 00:05:26.530
So in main navigation we can now decide what should be rendered inside of our main header and theatre.

57
00:05:26.530 --> 00:05:31.490
I want to have a button which will later open my site draw and India.

58
00:05:31.510 --> 00:05:39.130
I will have free spans three empty spans simply as bars because I will add some styling which renders

59
00:05:39.130 --> 00:05:42.530
this as a hamburger icon and every span will be one.

60
00:05:42.550 --> 00:05:49.900
Well part of the hamburger we will add a class name here which is main dash navigation underscore underscore

61
00:05:49.900 --> 00:05:59.020
menu dash button besides the button in the main header I want to have a h1 tag with a class name of

62
00:05:59.350 --> 00:06:07.600
main dash navigation underscore underscore title and the text here could be your places or whatever

63
00:06:07.660 --> 00:06:08.970
the name of your app should be.

64
00:06:10.850 --> 00:06:14.110
And then I want to have a NAF element and India.

65
00:06:14.120 --> 00:06:16.820
I want to have my nav links later.

66
00:06:16.820 --> 00:06:18.170
So we're now just three dots.

67
00:06:18.230 --> 00:06:24.970
These will be links later the header here all should be clickable so.

68
00:06:25.000 --> 00:06:32.470
Import link from react router Dom and wrap my text here with it.

69
00:06:32.470 --> 00:06:40.810
So here I'll have the link and then dare to slash nothing to always get us back to the main page when

70
00:06:40.810 --> 00:06:42.040
we clicked the title of the app.

71
00:06:43.850 --> 00:06:44.810
This isn't the end.

72
00:06:44.810 --> 00:06:50.630
My main navigation for the moment and now really keep in mind that what I enter here between the opening

73
00:06:50.630 --> 00:06:57.650
and closing tax of main header will in the end before awarded under the special children prop to main

74
00:06:57.650 --> 00:07:03.960
header and will therefore be output in that place here in props Children's Place so props.

75
00:07:03.960 --> 00:07:07.720
Children is a placeholder for the content you enter.

76
00:07:07.720 --> 00:07:14.370
Between the opening and closing tag of your own component you could say well and now even though some

77
00:07:14.370 --> 00:07:20.190
things are missing let's add styling and let's then render the main header now for the styling.

78
00:07:20.190 --> 00:07:25.560
Again you find attached a main navigation see us as file where you can just paste in the content into

79
00:07:25.560 --> 00:07:30.630
your main navigation file here or replace it at the same four main header.

80
00:07:30.630 --> 00:07:34.050
Make sure you add all those styles I prepared for you.

81
00:07:38.060 --> 00:07:43.520
With that out of the way we can go to the app J.S. file because the header should always be visible

82
00:07:43.700 --> 00:07:45.410
no matter which route you loaded.

83
00:07:45.530 --> 00:07:52.460
So I will not include it in every page but instead render it above all my pages above debts which statement

84
00:07:52.460 --> 00:07:53.580
here.

85
00:07:53.600 --> 00:08:03.560
So here I will import my main navigation from shared components navigation main navigation and dad will

86
00:08:03.560 --> 00:08:09.380
include the main header as you saw and that should be rendered above my roots so that this is always

87
00:08:09.380 --> 00:08:14.660
visible no matter what we load as a page on the rest of the page below.

88
00:08:14.660 --> 00:08:16.350
Well our main navigation.

89
00:08:16.430 --> 00:08:22.040
So here instead of router because I do use the link component from the router package for example but

90
00:08:22.070 --> 00:08:27.650
outside of my roots config I will render may never nation as a self closing tag because I don't need

91
00:08:27.650 --> 00:08:31.060
to pass anything between the opening and closing tax to it.

92
00:08:31.070 --> 00:08:38.700
I also don't need to pass any props to it with that if we save this we have our header here.

93
00:08:38.990 --> 00:08:43.310
Now does looks a bit strange because our place is below the header.

94
00:08:43.310 --> 00:08:44.750
Let's change that.

95
00:08:44.750 --> 00:08:52.660
Let's change it by wrapping our switch step in here with the main component and now on the main component

96
00:08:52.690 --> 00:08:59.590
I want to ensure that we keep some distance to our main header to our main navigation and that should

97
00:08:59.590 --> 00:09:04.330
already be happening because if you'll look into the main header file into the main header see as file

98
00:09:04.340 --> 00:09:11.370
flat provided to you I do add some margin to the main elements so now does looks better and now we still

99
00:09:11.370 --> 00:09:16.830
have no navigation links here but at least we have a header and if we decrease the size here you'll

100
00:09:16.830 --> 00:09:22.950
see the hamburger button goes away because it's already styled to adjust the layout based on the size

101
00:09:22.950 --> 00:09:25.050
we have available on smaller screens.

102
00:09:25.050 --> 00:09:27.470
We do have the hamburger button right now.

103
00:09:27.470 --> 00:09:33.830
However if we click it nothing happens so that's something we'll have to adjust so here.

104
00:09:33.870 --> 00:09:37.540
Let's go to the bigger screen where we have the desktop view.

105
00:09:37.680 --> 00:09:43.170
We now have to work on the different links here and then make sure we also add a side draw that works

106
00:09:43.170 --> 00:09:44.130
on mobile screens.
