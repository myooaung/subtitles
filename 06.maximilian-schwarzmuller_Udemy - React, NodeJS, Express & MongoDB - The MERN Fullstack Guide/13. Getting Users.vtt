WEBVTT
1
00:00:02.130 --> 00:00:08.160
So what I want to achieve next now is I want to send a request which returns all the users stored in

2
00:00:08.160 --> 00:00:09.390
our database.

3
00:00:09.390 --> 00:00:10.560
How can we achieve this.

4
00:00:10.560 --> 00:00:16.120
Well pi first getting rid of our code right here will also type on your response code so we can leave

5
00:00:16.120 --> 00:00:17.370
that for the moment.

6
00:00:17.370 --> 00:00:22.400
And you know a constant we use again users and now our find method.

7
00:00:22.420 --> 00:00:28.380
Now we find we can now search the documents stored in the database and then get back to users in fury

8
00:00:28.800 --> 00:00:31.780
but actually I would like to be a bit more explicit here.

9
00:00:31.800 --> 00:00:35.590
I would like to find only d e mail and the name.

10
00:00:35.600 --> 00:00:39.030
So I don't want to return the password of a specific user.

11
00:00:39.030 --> 00:00:42.930
As I said we are not finished with our security and authentication part.

12
00:00:42.930 --> 00:00:48.150
This will be covered later but generally actually when we get the users we should actually return email

13
00:00:48.180 --> 00:00:49.220
and name.

14
00:00:49.260 --> 00:00:53.610
Now we have different options to do so by the way have you also used final ready here in the places

15
00:00:53.610 --> 00:00:56.230
controller here with get places by user idea.

16
00:00:56.310 --> 00:01:00.020
And here we use find he referred to a specific property.

17
00:01:00.120 --> 00:01:05.730
This time I would like to refer to two different properties namely d e mail and the name.

18
00:01:05.910 --> 00:01:07.910
And we have two options to do this.

19
00:01:07.920 --> 00:01:10.770
We will use the concept of protection right here.

20
00:01:10.770 --> 00:01:13.320
This works by adding an empty javascript object.

21
00:01:13.440 --> 00:01:18.250
And now we can either add email and name like this.

22
00:01:18.270 --> 00:01:26.520
This or return d e-mail and the name or we can simply add a minus sign here and now exclude our password.

23
00:01:26.520 --> 00:01:27.900
I'll follow this approach here.

24
00:01:27.900 --> 00:01:30.990
Both work fine for our purposes.

25
00:01:30.990 --> 00:01:37.440
However storing it as a constant here won't work because as we know find is an asynchronous task therefore

26
00:01:37.530 --> 00:01:41.910
let's first add is async up here and now what will we do.

27
00:01:41.910 --> 00:01:51.540
Well we'll again create let users here because we will wrap our code in a try catch block once again.

28
00:01:51.540 --> 00:02:05.320
Therefore we'll add the code right here get rid of our a constant and add a wait ahead of users.

29
00:02:05.560 --> 00:02:06.610
So that's the tribe log.

30
00:02:06.640 --> 00:02:14.280
And now once again in case this does not work then we catch the error by storing it in a constant.

31
00:02:14.280 --> 00:02:21.880
It's always the same approach in the end and now return fetching users failed.

32
00:02:21.910 --> 00:02:26.280
Please try again later.

33
00:02:26.380 --> 00:02:32.090
Error Code 500 and return next.

34
00:02:32.170 --> 00:02:36.850
Error so if that we can get the users.

35
00:02:37.210 --> 00:02:43.330
And if they're successful then we have to get a response of course and our response will again be a

36
00:02:43.330 --> 00:02:53.380
Jason response which will be of users but now again users start nap because again find which runs an

37
00:02:53.420 --> 00:02:53.950
array.

38
00:02:54.010 --> 00:02:57.860
So we cannot convert this into a default javascript object.

39
00:02:57.940 --> 00:03:05.530
Therefore we'll add the Met method right here and now say that our user should be turned into a default

40
00:03:05.530 --> 00:03:06.670
javascript object.

41
00:03:06.670 --> 00:03:15.220
Now the syntax is working again and with that we can again use gets set getters to true to get rid of

42
00:03:15.280 --> 00:03:22.360
our idea that will be returned and if we save that we can know if we check our faults again go to slash

43
00:03:22.360 --> 00:03:27.700
users as you can see no need for sign up or log in anymore as we only want to get the users so we can

44
00:03:27.700 --> 00:03:29.320
get rid of log in right here.

45
00:03:29.560 --> 00:03:34.750
And if you know send a GET request without any information in a body so this is of course not required

46
00:03:36.010 --> 00:03:42.420
like we send it we get back our user manual right here so not very spectacular as we only have one user

47
00:03:42.450 --> 00:03:43.690
but it seems to work.

48
00:03:43.860 --> 00:03:45.720
Let's not add a second user quickly

49
00:03:50.230 --> 00:03:55.380
so here at our API users sign up broad body raw Jason.

50
00:03:56.320 --> 00:04:02.280
And let's quickly add the name which could be Max.

51
00:04:02.300 --> 00:04:12.110
We have the email maybe test two at test dot com.

52
00:04:12.310 --> 00:04:18.470
We have deep password which could be testers

53
00:04:21.210 --> 00:04:26.940
to hear and we have a place places.

54
00:04:27.220 --> 00:04:34.520
Let's say New York should of course be a POST request here.

55
00:04:34.520 --> 00:04:43.390
If we centers storing the user seems to be successful let's go back to our Get request send it.

56
00:04:43.410 --> 00:04:47.660
And now you can see we get back both menu and knacks.

57
00:04:47.670 --> 00:04:48.800
This works fine.

58
00:04:48.800 --> 00:04:56.550
Let us know what you see whether it worked in our database so Let's reload this right here and as you

59
00:04:56.550 --> 00:05:00.490
can see we got both Max and manual stored in the database.

60
00:05:00.570 --> 00:05:03.260
So getting the users also works fine now.

61
00:05:03.300 --> 00:05:09.270
There is one crucial thing missing though and this crucial thing is of course the relation between places

62
00:05:09.390 --> 00:05:10.710
and our users.

63
00:05:10.710 --> 00:05:12.900
At the moment I'm using some dummy code here.

64
00:05:12.930 --> 00:05:20.130
Here for all places in the user's J S file and here for the creator in the place j ust file and we also

65
00:05:20.160 --> 00:05:22.030
enter the place manually.

66
00:05:22.050 --> 00:05:29.700
Fixed rate the new user so this code on here maybe at the places this should of course be changed now

67
00:05:29.790 --> 00:05:35.850
and that's actually the last crucial step here in this Mongolian module so let's continue with that.
