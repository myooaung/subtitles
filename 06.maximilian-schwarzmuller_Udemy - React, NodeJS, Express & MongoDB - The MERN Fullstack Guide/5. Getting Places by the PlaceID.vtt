WEBVTT
1
00:00:02.280 --> 00:00:04.440
So creating places works fine.

2
00:00:04.440 --> 00:00:08.090
The next logical step in our corrupt operations flow is read.

3
00:00:08.100 --> 00:00:16.800
Therefore and to read data we should focus on to our get places by user I.D. and get place by I.D. constants

4
00:00:17.280 --> 00:00:23.040
get placed by Dean would mean that we want to identify a place based on this underscore idea right here.

5
00:00:23.040 --> 00:00:30.390
So to place specific ideas get place but user idea would be this creator idea that we manually entered.

6
00:00:30.390 --> 00:00:34.970
Let's first focus on to get placed by detail here.

7
00:00:35.190 --> 00:00:43.110
We can keep our first place idea constant we'll still need this consent to extract the data from our

8
00:00:43.110 --> 00:00:44.080
request.

9
00:00:44.520 --> 00:00:49.900
But here our place concerned this is the one that we have to change here here.

10
00:00:49.910 --> 00:00:55.850
We don't need these are all functions or we can just delete this entire code here because here I again

11
00:00:55.850 --> 00:01:02.720
want to use our place model now and as at this time want to find existing places I won't use safe as

12
00:01:02.720 --> 00:01:06.520
we did it before with our create place logic.

13
00:01:06.540 --> 00:01:14.120
Now will use another method which is part of Mongoose and this is find by I.D. And by the way find by

14
00:01:14.140 --> 00:01:16.640
I.D. is a static method here.

15
00:01:16.640 --> 00:01:23.070
This means it's not used on the instance of place but directly on the place constructor function.

16
00:01:23.220 --> 00:01:29.840
By DB works a bit different though when comparing it to the safe method in contrast to save find by

17
00:01:29.840 --> 00:01:36.620
a deed does not return a promise and still then catch or async await would be available.

18
00:01:36.650 --> 00:01:43.800
That's Mongoose specific though but from a conceptual perspective find by idea doesn't return a promise.

19
00:01:43.910 --> 00:01:46.450
In case you need a real promise you're not needed here.

20
00:01:46.450 --> 00:01:53.690
In our case though you can still get this if you call X like here after find by deed with that you could

21
00:01:53.690 --> 00:01:55.310
get a real promise.

22
00:01:55.310 --> 00:02:00.700
As I said for our cases we don't need that as we can still use async await here.

23
00:02:01.070 --> 00:02:04.880
Due to this Mongoose specific feature or find by.

24
00:02:04.940 --> 00:02:06.820
But it doesn't return a real promise here.

25
00:02:07.730 --> 00:02:13.400
However we can use find by Dino and we need an argument though and that's of course our place.

26
00:02:13.450 --> 00:02:17.330
Idea that we previously defined up here.

27
00:02:17.330 --> 00:02:19.050
There is one thing missing though.

28
00:02:19.070 --> 00:02:20.000
Do you know what.

29
00:02:20.000 --> 00:02:23.080
Well we again have an asynchronous task right here.

30
00:02:23.090 --> 00:02:23.970
As for safe.

31
00:02:24.020 --> 00:02:27.740
Also finding an I.D. is a task which can take a few moments.

32
00:02:27.740 --> 00:02:35.690
Therefore we will again use our async await syntax right here so we'll add a sync here and wait right

33
00:02:35.720 --> 00:02:36.850
there.

34
00:02:37.070 --> 00:02:40.970
And as we also did it for our safe method try catch Montrose here.

35
00:02:41.000 --> 00:02:52.790
So let's also add try it here and put our code into our tri code block and we'll of course also catch

36
00:02:52.790 --> 00:03:01.230
the error again as we did it before with our error constant and the new HDP error.

37
00:03:01.460 --> 00:03:02.950
And this could say no.

38
00:03:02.960 --> 00:03:06.630
Something went wrong.

39
00:03:06.770 --> 00:03:11.100
Could not find jobs.

40
00:03:11.110 --> 00:03:17.280
Find a place and the arrow code could be 500 right here.

41
00:03:20.180 --> 00:03:24.950
So that's our I try catch block very important all of us as we did it before.

42
00:03:25.040 --> 00:03:29.730
We have to make sure that we really stop our code execution in case we have such an error.

43
00:03:29.750 --> 00:03:32.200
Therefore we return next hour.

44
00:03:32.210 --> 00:03:39.360
Once again it's the same logic we actually had with our storing places method previously we have to

45
00:03:39.360 --> 00:03:39.800
change.

46
00:03:39.810 --> 00:03:44.970
One additional thing though as you can see place right here is no longer used although we use it down

47
00:03:44.970 --> 00:03:46.780
here in our if statement.

48
00:03:46.800 --> 00:03:52.220
The problem here is our block scoping so we define our constant here inside our tribe log.

49
00:03:52.290 --> 00:03:59.340
Therefore we have to define place outside of our tribe block and that also turn corners into left here.

50
00:03:59.480 --> 00:04:01.980
So let us place in our insert our block.

51
00:04:01.980 --> 00:04:04.370
We get rid of the constant with that.

52
00:04:04.380 --> 00:04:06.600
This code works fine again.

53
00:04:06.690 --> 00:04:10.140
One important note though and I got a typo right here.

54
00:04:10.140 --> 00:04:12.870
This should not be wrong should be wrong of course.

55
00:04:12.870 --> 00:04:14.040
No it's fine.

56
00:04:14.040 --> 00:04:19.340
So one important note the error catching right here and right there is a different one.

57
00:04:19.380 --> 00:04:22.650
And we have a justice if statement by the way we'll do that in a few seconds.

58
00:04:22.650 --> 00:04:23.920
This error is displayed.

59
00:04:23.970 --> 00:04:27.470
If our get request generally has some kind of a problem.

60
00:04:27.480 --> 00:04:33.080
If we have missing information for example in case the request is fine but we just don't have our places

61
00:04:33.090 --> 00:04:37.920
I.D. in our database then this second error down here should be thrown.

62
00:04:37.950 --> 00:04:40.700
That's the difference between these two errors.

63
00:04:40.920 --> 00:04:47.430
Talking about this if statement to be in line with our previous logic to catch errors when we worked

64
00:04:47.430 --> 00:04:55.020
on our create places code we can again use the logic we had above so we can simply create a new constant

65
00:04:56.130 --> 00:04:58.650
which is equal to the new HDP error here.

66
00:04:59.220 --> 00:05:07.080
And the statement is fine but what we need here is we need to return our next error year to make sure

67
00:05:07.950 --> 00:05:13.750
our code execution is stopped in case of this error was that the code up here works fine.

68
00:05:13.770 --> 00:05:18.420
We just have to tweak all response a bit because there are actually two things that I would like to

69
00:05:18.420 --> 00:05:19.430
change here.

70
00:05:19.440 --> 00:05:26.730
The first thing is the fact that the object here we are working with our place is a specific Mongoose

71
00:05:26.910 --> 00:05:27.750
object India.

72
00:05:27.770 --> 00:05:34.960
So we have a lot of special Mongoose methods available for this object but this is fine for creating

73
00:05:34.960 --> 00:05:40.780
data and for working with Mongoose when we get back the response the object might be easier to use if

74
00:05:40.780 --> 00:05:43.810
we just turn it into a normal javascript object.

75
00:05:43.810 --> 00:05:45.490
That's the first thing I would like to do.

76
00:05:45.490 --> 00:05:49.760
The second thing is you remember this idea we have this underscore idea.

77
00:05:50.290 --> 00:05:55.120
I would also like to get rid of this underscore because although it's not a big problem in general it's

78
00:05:55.120 --> 00:05:57.940
easier to really have clean properties here.

79
00:05:57.940 --> 00:06:03.450
So ideas without the underscore this would also make it easier to refer to this idea later.

80
00:06:03.460 --> 00:06:05.810
So these are the two things I want to do right here.

81
00:06:05.830 --> 00:06:10.720
First let us turn our place object into a normal javascript object.

82
00:06:10.720 --> 00:06:17.890
For this we simply add these to object method here to the object with that the conversion is done already.

83
00:06:18.040 --> 00:06:21.250
And our second goal to get rid of this underscore.

84
00:06:21.310 --> 00:06:29.730
While this can simply be done by setting gathers right here to true and why is getters true doing this.

85
00:06:29.860 --> 00:06:37.030
Well because Mongoose at an I.D. get her to every document which returns the I.D. as a string normally

86
00:06:37.240 --> 00:06:43.660
such gatherers are lost and be called to object but with getters true we can avoid this and tell Mongoose

87
00:06:43.660 --> 00:06:47.550
to add an I.D. property to the created object.

88
00:06:47.750 --> 00:06:51.890
That's it actually with that our code should be working fine.

89
00:06:51.890 --> 00:06:57.980
Let's save our progress and let's not go to postman now create new requests.

90
00:06:58.000 --> 00:07:04.480
This time I get requests again to local host five thousand right here.

91
00:07:05.020 --> 00:07:08.420
Slash places and now slash the place a.

92
00:07:08.470 --> 00:07:09.490
We have right here.

93
00:07:09.580 --> 00:07:17.380
So let's enter this I.D. in the U R L and now let's send this request and see what happens.

94
00:07:17.410 --> 00:07:18.590
So this seems to work.

95
00:07:18.700 --> 00:07:23.510
We still have already appeared though of the underscore but on there we get back to a D without the

96
00:07:23.510 --> 00:07:24.320
yellow score.

97
00:07:24.370 --> 00:07:28.520
With that we make sure that our get placed by ideological works fine.

98
00:07:28.960 --> 00:07:35.000
And now it's your turn because down here we have our get places by user I.D. constant.

99
00:07:35.290 --> 00:07:41.950
We also have to just this one empty logic is pretty similar to the one that we had before for our Get

100
00:07:41.950 --> 00:07:44.010
place by ideological.

101
00:07:44.080 --> 00:07:50.720
There is one thing you have to know though you shouldn't use find by idea here but defined method.

102
00:07:50.800 --> 00:07:55.870
It's a bit more tricky therefore as you have to make sure that you find a specific property within a

103
00:07:55.870 --> 00:07:56.290
place.

104
00:07:56.290 --> 00:07:58.920
So basically the idea of the creator.

105
00:07:58.930 --> 00:08:00.710
That's the hint I want to give you.

106
00:08:00.850 --> 00:08:05.670
So if that now is your chance to give it a try and in the next lecture will solve this together.
