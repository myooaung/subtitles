1
00:00:02,050 --> 00:00:08,200
Creating the code for the users is pretty straightforward actually because as for the places we again

2
00:00:08,200 --> 00:00:09,270
need a schema.

3
00:00:09,340 --> 00:00:12,530
So what we build right here in our place chairs file there.

4
00:00:12,550 --> 00:00:20,770
We predefined a structure of a document so of data a new user sign up has to contain.

5
00:00:20,770 --> 00:00:25,330
Then we will export the schema and use it here in our users controllers.

6
00:00:25,930 --> 00:00:27,610
So that's actually what we want to do right here.

7
00:00:27,790 --> 00:00:34,330
So with that let's get started with the schema first and to do this we again go to our models folder.

8
00:00:34,330 --> 00:00:35,690
Now create a new file.

9
00:00:35,740 --> 00:00:37,680
This time a user j s file.

10
00:00:38,230 --> 00:00:44,170
And now we can again follow the logic long before we first have to import Mongoose here.

11
00:00:44,230 --> 00:00:53,550
So we require Mongoose and what else we have to import while we need our schema constant here with Mongoose

12
00:00:53,680 --> 00:00:56,970
dot schema to be able to create the schema.

13
00:00:57,060 --> 00:01:03,570
As I said Now we want to create a user schema therefore naming our a constant user schema makes sense

14
00:01:03,570 --> 00:01:04,080
I guess.

15
00:01:04,140 --> 00:01:11,250
We again will instantiate the new javascript object here and this object now contains all the properties

16
00:01:11,370 --> 00:01:14,010
our new user needs.

17
00:01:14,010 --> 00:01:15,660
So what properties are these.

18
00:01:15,660 --> 00:01:19,260
Well the first property obviously is the user name.

19
00:01:19,320 --> 00:01:25,890
As for the places before we will again use an object here and the name should be of type String and

20
00:01:25,890 --> 00:01:31,090
it should also be required so required should be set to true.

21
00:01:31,170 --> 00:01:38,340
We can actually copy this because our second property D email will kind of have the same information

22
00:01:38,730 --> 00:01:44,520
but I want to add one additional property here because our EMA will be an information which we carry

23
00:01:44,520 --> 00:01:49,820
a lot for example then we do to use a log in while we need to query the user email in our database.

24
00:01:49,920 --> 00:01:55,590
Now although the database in this project in discourse will not be very big if you have a really big

25
00:01:55,590 --> 00:02:00,870
database which is typically the case if you store user data then you want to make sure that your email

26
00:02:01,020 --> 00:02:08,000
is curated as fast as possible and for that you can simply add you need right here.

27
00:02:08,100 --> 00:02:14,190
If you said you need to true this would just create an index for the email which in simple words simply

28
00:02:14,190 --> 00:02:17,700
speeds up the querying process if you request the email.

29
00:02:17,880 --> 00:02:20,590
Therefore we add this property at this point.

30
00:02:20,760 --> 00:02:24,360
Another property we need is our password of course for the user.

31
00:02:24,360 --> 00:02:26,340
So the user has to add a password.

32
00:02:26,430 --> 00:02:31,920
The password should also be a string here and it should be required and we could add one additional

33
00:02:31,920 --> 00:02:34,940
property the main length property.

34
00:02:34,940 --> 00:02:41,640
This simply validates the minimum length so the minimum amount of characters our password should have

35
00:02:42,030 --> 00:02:44,760
in our case will stick to six characters here.

36
00:02:44,800 --> 00:02:50,100
That's optional though but I guess it makes sense here to at least make sure the user adds a minimum

37
00:02:50,100 --> 00:02:51,690
length for the password.

38
00:02:51,690 --> 00:02:55,110
He uses the next property is our image.

39
00:02:55,110 --> 00:02:58,470
We had this before in our places.

40
00:02:58,470 --> 00:03:02,050
This is again a string and required set to true.

41
00:03:02,070 --> 00:03:03,950
Again we're talking about a year earlier.

42
00:03:03,960 --> 00:03:10,890
So that's basically the same logic we had before for the places we don't store any files in our database.

43
00:03:11,190 --> 00:03:17,640
The last property we have to add for our user schema is the place property your places plural because

44
00:03:17,910 --> 00:03:23,340
one user can have multiple places but one place can only be allocated to one single user.

45
00:03:23,390 --> 00:03:26,080
You remember what we talked about in the last lecture.

46
00:03:26,280 --> 00:03:33,090
And places will be dynamic later so we will store the ideas of the places allocated to a user right

47
00:03:33,090 --> 00:03:35,030
here for the moment.

48
00:03:35,040 --> 00:03:37,330
I'll just use a string And set required to true.

49
00:03:37,350 --> 00:03:41,860
This means we will add the place manually but that's just step one.

50
00:03:41,910 --> 00:03:45,990
Later in this module when we add the relation between places and users.

51
00:03:45,990 --> 00:03:51,600
This will of course be a more dynamic approach but we collect the idea from the corresponding place

52
00:03:51,720 --> 00:03:53,350
a user created.

53
00:03:53,550 --> 00:03:58,460
With that we are almost done with our schema and we could already create and export our model.

54
00:03:58,560 --> 00:04:02,490
But there is one thing missing here because unique appear.

55
00:04:02,490 --> 00:04:09,660
As I said only creates an internal index in the database to make it easier and faster to query our emails.

56
00:04:09,690 --> 00:04:13,560
What is missing though at the moment is an internal validation.

57
00:04:13,560 --> 00:04:17,550
Whether the email that we want to create right here exists already.

58
00:04:17,550 --> 00:04:20,520
This is not done by unique.

59
00:04:20,520 --> 00:04:23,130
For that we have to use a third party package.

60
00:04:23,130 --> 00:04:31,020
The Mongoose unique validator and to use it we first have to install it with npm install dash dash save

61
00:04:31,380 --> 00:04:35,960
Mongoose unique validator

62
00:04:44,660 --> 00:04:50,600
with that it's installed and now we can use it by creating a new constant name Unique validator.

63
00:04:50,900 --> 00:04:58,520
And now we require the Mongoose unique validator right here with that we can use this for a party package

64
00:04:58,520 --> 00:05:02,660
to make sure we have a unique email here and to add it to our schema.

65
00:05:02,690 --> 00:05:08,180
We simply added to the schema via a plug in method here.

66
00:05:08,180 --> 00:05:12,390
So we add unique validator like this.

67
00:05:12,430 --> 00:05:18,160
With that we made sure that we can query our email as fast as possible in our database with unique.

68
00:05:18,350 --> 00:05:24,140
And we made sure that we can only create a new user if the EMA doesn't exist already with our unique

69
00:05:24,260 --> 00:05:26,690
validator package here.

70
00:05:26,720 --> 00:05:29,990
Now we can create and export our model.

71
00:05:29,990 --> 00:05:37,750
We know the syntax already it's module exports and this should be Mongoose start model method.

72
00:05:37,760 --> 00:05:42,380
And here we have to give our model a name as a set for the place already.

73
00:05:42,380 --> 00:05:47,900
This should be in a singular form and with an upper capital starting character.

74
00:05:47,900 --> 00:05:54,320
So in our case the naming the model user makes a lot of sense as remember this would also define the

75
00:05:54,320 --> 00:05:55,460
name of oral collection.

76
00:05:55,460 --> 00:06:02,390
So the collection will be called users without the capital you and we want to export our user schema

77
00:06:02,410 --> 00:06:05,740
here safe does now.

78
00:06:06,450 --> 00:06:12,000
And with that we finished the creation of the schema and the model very important though we still don't

79
00:06:12,000 --> 00:06:14,610
have any connection between users and places.

80
00:06:14,610 --> 00:06:20,160
I want to repeat that because this will come later but if we look at both topics separately we have

81
00:06:20,160 --> 00:06:25,500
not a place a schema and the user schema therefore let us not use our user model.
