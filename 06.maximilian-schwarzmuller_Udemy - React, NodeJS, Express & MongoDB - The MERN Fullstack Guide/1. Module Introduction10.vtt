WEBVTT
1
00:00:02.350 --> 00:00:05.130
Now did we had a brief react refresher.

2
00:00:05.140 --> 00:00:11.440
And we're all on the same page at least regarding the react basics let's apply that knowledge and all

3
00:00:11.440 --> 00:00:16.770
to dig a bit deeper in our main course project and there in the react from that we're building.

4
00:00:16.780 --> 00:00:23.710
So in this module we'll start building our front end with react as a single page application which means

5
00:00:23.830 --> 00:00:27.770
everything to users sees everything in the browser is managed by react.

6
00:00:27.790 --> 00:00:31.460
Every change there is applied and rendered by react.

7
00:00:31.750 --> 00:00:37.400
And then later in the course we'll build our node back and and will connect react to that back.

8
00:00:37.420 --> 00:00:42.700
But here we'll just focus on the standalone front end which they offer of course right now won't be

9
00:00:42.700 --> 00:00:49.420
fully functional we won't be storing any data on a server yet but that will come later in this module

10
00:00:49.840 --> 00:00:56.230
we will instead build that single page application and dig deeper into react and you'll have a really

11
00:00:56.230 --> 00:01:03.970
nice example of a more realistic react app will add routing and the core pages which you could all to

12
00:01:03.970 --> 00:01:09.280
put into quotes because we'll still only have one single page but we'll add different components and

13
00:01:09.280 --> 00:01:14.530
tell react when to load which component based on the you are the user entered.

14
00:01:14.650 --> 00:01:20.710
Which is really nice and we'll also split our app into multiple core components of course because you'll

15
00:01:20.710 --> 00:01:27.910
learn dead react is all about components we want to keep our components small and manageable and therefore

16
00:01:27.910 --> 00:01:29.280
we'll split them.

17
00:01:29.500 --> 00:01:36.100
We'll also add some pure user interface components which technically still are regular React Components

18
00:01:36.550 --> 00:01:44.410
but you'll see that some components are mostly focused on just providing some styling be reusable whilst

19
00:01:44.470 --> 00:01:50.950
our components will have a lot of logic and state management attached to them and you will see how that

20
00:01:50.950 --> 00:01:58.930
naturally grows as you're working on the realistic react project will all the handle user input later

21
00:01:58.960 --> 00:02:02.300
will also even write our own react hooks.

22
00:02:02.320 --> 00:02:08.650
We only saw to use state hook thus far which was built in in this module we'll also see some of hooks

23
00:02:08.650 --> 00:02:09.940
and create custom ones.

24
00:02:09.940 --> 00:02:17.980
Yes as is possible and therefore this is a module packed with content not a short module for sure but

25
00:02:17.980 --> 00:02:25.810
a great practice on react on building a realistic app with react and an important preparation for discourse

26
00:02:26.050 --> 00:02:30.250
where we later will connect it to our node express Mongo TB back and.
