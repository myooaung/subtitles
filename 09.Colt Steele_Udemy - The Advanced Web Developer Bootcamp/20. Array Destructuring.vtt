WEBVTT
1
00:00:00.360 --> 00:00:01.290
Welcome back.

2
00:00:01.500 --> 00:00:04.850
In this video we're going to continue talking about these structuring.

3
00:00:05.010 --> 00:00:10.170
But instead of working with objects we're going to be working with a race as a refresher.

4
00:00:10.190 --> 00:00:17.360
Restructuring allows us to extract values from arrays or properties from objects into distinct variables.

5
00:00:17.460 --> 00:00:19.820
So how can we do structure with a race.

6
00:00:19.830 --> 00:00:21.480
Let's start with how we use to do things.

7
00:00:21.490 --> 00:00:28.110
In fact here we have an array of three values and if we wanted to assign a variable to each value we

8
00:00:28.110 --> 00:00:28.810
could do that.

9
00:00:28.890 --> 00:00:30.810
But it's a bit tedious.

10
00:00:30.850 --> 00:00:34.850
Thankfully we can use destructuring here to do this all on one line.

11
00:00:35.100 --> 00:00:36.280
Here's what that would look like.

12
00:00:37.110 --> 00:00:42.120
Notice how we're using array brackets on the left hand side of the equal sign just like we use curly

13
00:00:42.120 --> 00:00:46.540
braces for object the structure but see another example.

14
00:00:46.770 --> 00:00:52.530
Here we have a function which returns an array of two numbers and in order to extract each value we

15
00:00:52.530 --> 00:00:58.650
have to invoke the function twice to get each value and then assign each value to their own variable

16
00:00:59.340 --> 00:01:01.440
before we see the destructuring example.

17
00:01:01.590 --> 00:01:03.110
Think about what that might look like.

18
00:01:04.100 --> 00:01:07.190
So here's how we could structure this function on one line.

19
00:01:07.190 --> 00:01:08.750
Pretty neat.

20
00:01:08.750 --> 00:01:14.520
One of the most helpful things that we can do with a raid destructuring is swap values in an array.

21
00:01:14.540 --> 00:01:15.530
This is quite common.

22
00:01:15.530 --> 00:01:21.440
When you do not want to make a new array but just want to switch the places of certain values as you

23
00:01:21.440 --> 00:01:26.570
learn more about data structures and algorithms in javascript you'll see that swapping values is quite

24
00:01:26.570 --> 00:01:29.650
common especially with sorting algorithms.

25
00:01:29.690 --> 00:01:31.720
So how do we do this in S-5.

26
00:01:32.090 --> 00:01:37.910
Traditionally this was done with a function that created a temporary variable to store the first value

27
00:01:37.910 --> 00:01:39.450
to be swapped.

28
00:01:39.470 --> 00:01:45.110
We then would reassign the first value to be the second value and the second value to be the temporary

29
00:01:45.110 --> 00:01:45.760
value.

30
00:01:46.190 --> 00:01:52.850
When we invoke the swap function we see the value swapped using as 2015 we can clean this code up quite

31
00:01:52.850 --> 00:01:57.980
a bit by assigning the value of a structured array to be another array.

32
00:01:58.040 --> 00:01:59.740
The value switched.

33
00:01:59.750 --> 00:02:02.880
Try this out in the Crome Council and see what you get.

34
00:02:02.900 --> 00:02:06.570
Just like object restructuring already structuring is pretty tricky.

35
00:02:06.830 --> 00:02:11.690
So let's practice with some exercises to make sure you've really got it back luck and I'll see you in

36
00:02:11.690 --> 00:02:12.560
the next video.
