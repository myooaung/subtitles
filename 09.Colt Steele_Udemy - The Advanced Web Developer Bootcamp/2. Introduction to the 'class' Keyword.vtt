WEBVTT
1
00:00:00.310 --> 00:00:08.340
In this section will continue learning about 2015 2016 and 2017 will refactor object oriented code to

2
00:00:08.340 --> 00:00:15.300
use the new 2015 Klasky word and implement inheritance using the new extends keyword will then remove

3
00:00:15.300 --> 00:00:21.420
duplication in our constructor functions using the super keyword and use new data structures in 2015

4
00:00:21.810 --> 00:00:25.820
and refactor asynchronous code with promises and generators.

5
00:00:25.830 --> 00:00:32.880
We'll then learn some more helpful yes 20:15 methods and continue with as 2016 2017 and learn about

6
00:00:32.880 --> 00:00:34.710
some upcoming features to Javascript.

7
00:00:34.920 --> 00:00:36.150
So let's get started.

8
00:00:36.540 --> 00:00:40.410
In this video we're going to talk about one of the larger additions to the javascript language with

9
00:00:40.410 --> 00:00:44.540
yes 2015 and that is the classic used in javascript.

10
00:00:44.550 --> 00:00:48.250
We do not have built in support for classes an object oriented program.

11
00:00:48.540 --> 00:00:56.100
Unlike languages like Java Python THP Ruby and many more to mimic the behavior of object oriented programming

12
00:00:56.400 --> 00:00:58.680
we use functions and objects.

13
00:00:58.680 --> 00:01:04.050
The main idea behind object oriented programming is to reduce code duplication and improve readability

14
00:01:04.320 --> 00:01:06.930
through creating classes in javascript.

15
00:01:06.930 --> 00:01:12.120
We mimic the behavior of classes by using constructor functions and placing methods on the prototype

16
00:01:12.120 --> 00:01:14.570
property of the constructor function.

17
00:01:14.580 --> 00:01:16.470
Those terms are not familiar to you.

18
00:01:16.500 --> 00:01:21.810
Make sure you watch the previous videos on object oriented programming in Javascript.

19
00:01:21.810 --> 00:01:23.360
So what does the class keyword.

20
00:01:23.640 --> 00:01:30.120
First it's a reserve keyword in javascript and it creates a constant which cannot be read declared in

21
00:01:30.350 --> 00:01:31.180
2015.

22
00:01:31.230 --> 00:01:36.360
The class keyword abstracts a lot of what's going on with constructor functions and prototypes and it

23
00:01:36.360 --> 00:01:37.380
does not hoist.

24
00:01:37.590 --> 00:01:40.740
So be sure to define your classes at the top of a file.

25
00:01:40.980 --> 00:01:45.480
Although there are a lot of different terms and concepts here will still use the new keyword to create

26
00:01:45.540 --> 00:01:46.500
objects.

27
00:01:46.500 --> 00:01:51.520
Before we examine the class keyword Let's briefly review how object oriented code is written in yes

28
00:01:51.560 --> 00:01:52.480
5.

29
00:01:52.500 --> 00:01:57.750
Here we have a constructor function for a student and we use the keyword this to place properties on

30
00:01:57.750 --> 00:02:00.950
an object which will be created using the new keyword.

31
00:02:00.960 --> 00:02:06.780
In short yes fire revolves around constructor functions and using the new keyword to create objects

32
00:02:06.810 --> 00:02:09.510
from that function in 2015.

33
00:02:09.510 --> 00:02:11.400
Here's what that code would look like.

34
00:02:11.400 --> 00:02:15.580
We use the Klasky word to give our function a name and inside of the class.

35
00:02:15.600 --> 00:02:19.500
We add a special method called constructor inside a constructor.

36
00:02:19.500 --> 00:02:25.890
We place the same code as what we had in the constructor function with S-5 constructor is a special

37
00:02:25.890 --> 00:02:31.620
name of a function and this function will be run when the class is invoked using the new keyword in

38
00:02:31.620 --> 00:02:33.070
object oriented programming.

39
00:02:33.150 --> 00:02:39.120
When we invoke or create an object from a class we call that can stanchly Asian or creating an instance.

40
00:02:39.450 --> 00:02:44.550
As an aside if you try to create an object from the class without the new word you'll get a type error

41
00:02:45.810 --> 00:02:47.120
when we use the class keyword.

42
00:02:47.130 --> 00:02:52.230
There is no notion of constructor functions or prototypes so there's still some resistance in the javascript

43
00:02:52.230 --> 00:02:55.970
community around this addition since it abstracts so much.

44
00:02:56.000 --> 00:03:00.780
However using the class keyword has become the standard practice when using more modern libraries and

45
00:03:00.780 --> 00:03:02.470
frameworks including react.

46
00:03:02.550 --> 00:03:07.950
So you'll see it quite a bit in the wild in the next video will examine the Klasky word a bit more and

47
00:03:07.950 --> 00:03:11.410
show how methods are added to the prototype and constructor function.

48
00:03:11.490 --> 00:03:11.940
See there.
