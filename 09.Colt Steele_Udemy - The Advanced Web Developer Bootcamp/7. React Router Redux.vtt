WEBVTT
1
00:00:01.780 --> 00:00:06.770
So we last left off connecting our application with redux using re-act redux.

2
00:00:06.790 --> 00:00:12.970
And what we're going to do in this screencast is at the re-act router and move our new to do form outside

3
00:00:12.970 --> 00:00:14.770
of the To Do List component.

4
00:00:15.040 --> 00:00:18.060
So what we're going to do first is make sure that we install re-act router.

5
00:00:18.130 --> 00:00:19.420
So let's stop the server.

6
00:00:19.570 --> 00:00:24.820
We're going to NPM install re-act router and we're going to be using this for a little bit of client

7
00:00:24.820 --> 00:00:29.500
side routing and we're going to have to make sure that we first set this up inside of our index that

8
00:00:29.540 --> 00:00:31.830
Jess will give us a second to load.

9
00:00:31.840 --> 00:00:33.310
Make sure you have this dependency.

10
00:00:33.310 --> 00:00:36.840
Otherwise none of this stuff that we're going to do is going to work.

11
00:00:37.510 --> 00:00:38.470
So this looks good.

12
00:00:38.470 --> 00:00:44.800
Let's go NPM start so we can keep this up and running and then we'll go and edit this code in sublime.

13
00:00:45.550 --> 00:00:52.710
So it just as a quick recap what we can do here we can eat weekends sleep and when there's loads.

14
00:00:52.930 --> 00:00:53.640
Let's try this again.

15
00:00:53.650 --> 00:00:57.630
We can eat we can sleep and we can delete these to use.

16
00:00:57.640 --> 00:01:00.620
This is all being connected with react and read books.

17
00:01:00.700 --> 00:01:03.760
So in sublime The first thing you want to go to is our index.

18
00:01:03.790 --> 00:01:04.600
Yes.

19
00:01:04.780 --> 00:01:07.820
And what we need to do here is bring in re-act router.

20
00:01:07.900 --> 00:01:15.770
So what we're going to do is import the browser from re-act router.

21
00:01:16.600 --> 00:01:18.550
And this is the router that we're going to be using.

22
00:01:18.580 --> 00:01:23.290
This allows us to fall back nicely and not have that hash in our YOU ARE know the question you may be

23
00:01:23.290 --> 00:01:27.250
asking is how do we fit browser router and provider together.

24
00:01:27.280 --> 00:01:34.270
And the answer is you always put the browser router inside of your provider so provider is the top level

25
00:01:34.270 --> 00:01:39.500
component that wraps browser router which wraps our application.

26
00:01:39.580 --> 00:01:44.350
So let's head over to our app Jay s and add a little bit of navigation in this application.

27
00:01:44.350 --> 00:01:47.890
What we're going to do first is import a few things from Riak Rotterdam.

28
00:01:47.890 --> 00:01:53.450
We're going to import the link route and redirect this way when we go to the route route.

29
00:01:53.470 --> 00:01:56.650
We can simply redirect to our route for Slash to use.

30
00:01:56.770 --> 00:02:01.120
We're going to take a couple of routes for Slash Fidus and slash traduce slash new and that'll be the

31
00:02:01.120 --> 00:02:02.950
forum that renders that new to do.

32
00:02:03.340 --> 00:02:08.340
So inside of here instead of rendering the To Do List component let's render a couple of links on make

33
00:02:08.350 --> 00:02:10.180
a paragraph tag it with a link tag.

34
00:02:10.180 --> 00:02:15.230
This is how we make an anchor tag with reac Rotterdam and we pass in the prop of two.

35
00:02:15.280 --> 00:02:20.980
This is going to go to slash to deuce and here will say See my to do list will also make another link

36
00:02:21.190 --> 00:02:27.580
but this one is going to be for to use slash and you can hear will say and to do what we want to also

37
00:02:27.580 --> 00:02:28.080
specify.

38
00:02:28.080 --> 00:02:29.350
Here are some routes.

39
00:02:29.440 --> 00:02:31.360
So we're going to use that route component.

40
00:02:31.360 --> 00:02:37.570
And inside we can make sure this is a self-closing Tad will give this a path of Slash to use.

41
00:02:37.750 --> 00:02:43.360
And when we go to slash to do is render a component by the name of to do list.

42
00:02:43.480 --> 00:02:45.270
And notice here that we're importing to do list.

43
00:02:45.310 --> 00:02:53.680
So that looks good but we also want is another route and here will say if you go exactly to slash What

44
00:02:53.680 --> 00:02:54.250
do we want to do.

45
00:02:54.250 --> 00:02:56.620
Well let's render a component.

46
00:02:56.740 --> 00:03:00.610
And the reason why we want to do this render is so that we can redirect.

47
00:03:00.610 --> 00:03:01.630
Right off the bat.

48
00:03:01.630 --> 00:03:08.630
So we are going to run a function which redirects will use that redirect component.

49
00:03:09.190 --> 00:03:15.350
We're going to redirect but where are we redirecting to we'll simply redirect to slash to use.

50
00:03:15.840 --> 00:03:18.820
So we'll see that and make sure that our syntax is proper.

51
00:03:18.820 --> 00:03:23.200
So just to recap what we've done here we brought in a link which is simply our way of making anchor

52
00:03:23.200 --> 00:03:24.560
tanks with re-act router.

53
00:03:24.700 --> 00:03:29.260
We brought in the router component so we can add some routes to our application and we brought in some

54
00:03:29.260 --> 00:03:34.050
redirecting so that if you go to this path slash it will redirect to slash to use.

55
00:03:34.240 --> 00:03:37.580
And when you go to slash to do it we render the To Do List component.

56
00:03:37.870 --> 00:03:42.720
So this looks like all the work we need to do in our app Jap's inside of our To Do List.

57
00:03:42.730 --> 00:03:44.290
We're going to need to do a bit more work.

58
00:03:44.350 --> 00:03:48.070
So we're really not going to do much with redux right now we're simply just going to put Riak router

59
00:03:48.100 --> 00:03:52.240
in this application and see how it works alongside redux.

60
00:03:52.420 --> 00:03:55.720
So I'll close these two and we'll get it to do list.

61
00:03:55.720 --> 00:04:00.790
Now what's interesting about to do list is we first want to take out all of this logic related to adding

62
00:04:00.790 --> 00:04:01.780
a new to do.

63
00:04:01.930 --> 00:04:06.300
So in order to make that happen we're actually going to make a new component that we'll call new to

64
00:04:06.310 --> 00:04:12.160
do form dodginess and inside of here we're going to bring in a lot of that logic that we had before

65
00:04:12.220 --> 00:04:13.110
in our to do list.

66
00:04:13.150 --> 00:04:19.480
We're going to start importing react and the structure component from react and then we're going to

67
00:04:19.480 --> 00:04:26.620
make sure we export a default class of new to do a form and it extends component.

68
00:04:26.620 --> 00:04:28.450
Now inside of here what are we going to do.

69
00:04:28.450 --> 00:04:31.840
We're going to take a lot of the logic that we have from our To Do List.

70
00:04:31.840 --> 00:04:37.180
We're going to start by simply taking this forum right here and putting it inside of a render method

71
00:04:38.290 --> 00:04:38.780
in here.

72
00:04:38.890 --> 00:04:41.600
So we're going to render inside we're going to return.

73
00:04:42.040 --> 00:04:47.530
And here we're going to simply put in that entire form and inside this form we're going to have a handle

74
00:04:47.530 --> 00:04:47.970
submit.

75
00:04:47.980 --> 00:04:50.700
So we're going to have to move quite a few of these things.

76
00:04:50.710 --> 00:04:56.680
We're also going to need some kind of constructor in our constructor we're going to pass in some props.

77
00:04:56.950 --> 00:05:01.630
We're going to call super on those props and then we're going to take some of these events listeners

78
00:05:01.630 --> 00:05:03.880
that we had in the parent component.

79
00:05:03.880 --> 00:05:05.820
What are those event listeners that we want to take.

80
00:05:05.980 --> 00:05:11.710
Well we're going to want handle submit and handle change as well as some state because remember in this

81
00:05:11.710 --> 00:05:14.350
form we're going to be changing some information.

82
00:05:14.830 --> 00:05:19.120
So what else do we want if we're going to get a handle submit and handle change well let's go grab those

83
00:05:19.210 --> 00:05:21.850
as well so we can get a handle submit.

84
00:05:21.880 --> 00:05:27.330
And we're going to get handled change and we can actually move that away from our To Do List component.

85
00:05:27.550 --> 00:05:30.590
So if we look here we're simply going to have handle submit and handle change.

86
00:05:30.610 --> 00:05:32.540
We'll move that to our new to do forum.

87
00:05:32.830 --> 00:05:37.060
So what we're doing here is simply isolating the new to do form in it's own component.

88
00:05:37.060 --> 00:05:41.290
We're going to change some more things in the To Do list but for now they should be OK.

89
00:05:41.320 --> 00:05:45.730
So what do we want to make sure we have we have a handle submit handle change we want to make sure that

90
00:05:45.730 --> 00:05:46.820
we have the text.

91
00:05:47.200 --> 00:05:50.530
And when you're typing that gets changed in our state.

92
00:05:50.560 --> 00:05:55.870
What we want to do though is not actually call add to do inside of this new to do for him I don't want

93
00:05:55.870 --> 00:05:57.990
to connect the new to do for him to redux.

94
00:05:58.000 --> 00:06:00.760
I just wanted to do list to be connected to redux.

95
00:06:00.760 --> 00:06:02.250
We call that a container.

96
00:06:02.530 --> 00:06:08.160
So what we're going to do here as well is pass in another prop we're going to take out this right here.

97
00:06:08.220 --> 00:06:13.900
It's right here we're going to have any prop called Ad to do better yet let's just call this handle

98
00:06:15.350 --> 00:06:20.770
and inside if you're going to make a function call handle add and all that handle ad is going to do

99
00:06:20.770 --> 00:06:24.160
is simply accept some kind of value.

100
00:06:24.370 --> 00:06:29.860
So we'll pass in some kind of value and all we're going to do here is call this not props that add to

101
00:06:29.860 --> 00:06:34.720
do remember this right here is simply a function that dispatches in action.

102
00:06:34.840 --> 00:06:37.850
So we're going to call Val with whatever we pass on.

103
00:06:37.870 --> 00:06:39.010
What else do we need to change.

104
00:06:39.010 --> 00:06:44.470
Well let's go back to our new to do him and make sure that it looks good instead of calling this that

105
00:06:44.470 --> 00:06:49.270
prompts that add to do we are going to make sure that we pass down a prop and we can call this something

106
00:06:49.270 --> 00:06:57.340
like handle submit and inside of this stop props that handle submit we'll pass that in we'll reset and

107
00:06:57.340 --> 00:07:00.400
finally we'll make sure that we redirect.

108
00:07:00.400 --> 00:07:02.480
So this stuff props that history up.

109
00:07:02.480 --> 00:07:03.640
Where is this coming from.

110
00:07:03.670 --> 00:07:05.850
This is going to come from the re-act robber.

111
00:07:05.920 --> 00:07:10.330
We have to make sure that using the re-act router we actually render this new to do form.

112
00:07:10.570 --> 00:07:14.560
So there are a lot of moving parts here but what we're trying to do is isolate the logic from our to

113
00:07:14.560 --> 00:07:17.170
do list into our new to do form.

114
00:07:17.170 --> 00:07:22.080
So back in our to do list how are we going to render that specific new to do form.

115
00:07:22.360 --> 00:07:23.990
Well we're going to change a couple of things.

116
00:07:24.190 --> 00:07:25.980
Let's get this debugger added here.

117
00:07:26.230 --> 00:07:30.970
And what we'll do is simply keep this seem to Dewes with removed to do the task involved this is going

118
00:07:30.970 --> 00:07:32.470
to stay exactly the same.

119
00:07:32.680 --> 00:07:35.170
But what the return is going to be a little bit different.

120
00:07:35.200 --> 00:07:37.060
We're going to return a couple of things.

121
00:07:37.060 --> 00:07:45.250
First we're going to need to import route from re-act Rotterdam because we need a route not only for

122
00:07:45.340 --> 00:07:48.130
our dues but also for the new to do for them.

123
00:07:48.160 --> 00:07:54.160
So we'll set up a couple of routes we'll simply say let's make a route and make sure this div wraps

124
00:07:54.160 --> 00:07:59.920
everything and inside of here this is going to be an exact path for Slash to use.

125
00:08:00.190 --> 00:08:03.380
And when that happens we are going to render a component.

126
00:08:03.790 --> 00:08:05.460
What component are we going to render.

127
00:08:05.620 --> 00:08:11.010
Well very simply it's going to be a div with these to do.

128
00:08:11.590 --> 00:08:16.990
So all we're gonna say is that whenever we go to this path slashed dues we're going to render a div

129
00:08:16.990 --> 00:08:22.060
with all of those to use make sure we get that opening div and give that closing div as well towards

130
00:08:22.060 --> 00:08:22.710
the end.

131
00:08:22.990 --> 00:08:27.820
So all we're doing here is rendering those to use inside of that list.

132
00:08:27.820 --> 00:08:30.680
We're simply going to print out all the dues that we have.

133
00:08:31.810 --> 00:08:33.950
But what do we want to do here in return as well.

134
00:08:33.950 --> 00:08:39.190
What we want to make sure everything is wrapped in a div because we need another route as well.

135
00:08:39.200 --> 00:08:40.640
What does that other route that we need.

136
00:08:40.640 --> 00:08:44.750
We need another route that goes to to do's slash.

137
00:08:45.200 --> 00:08:47.430
So here once again this is self-closing.

138
00:08:47.600 --> 00:08:54.470
We're going to make a route that goes to slash to do's slash new and when you go to slash to do slash

139
00:08:54.470 --> 00:08:57.400
new We're going to render some component component.

140
00:08:57.410 --> 00:09:01.680
Are we going to render what we're going to pass in some kind of props.

141
00:09:01.700 --> 00:09:02.750
Why do we want these props.

142
00:09:02.750 --> 00:09:05.760
Remember we want to use the reactive router in this component.

143
00:09:05.780 --> 00:09:09.820
We want to be able to get access to history on this that props.

144
00:09:10.130 --> 00:09:12.350
So we're going to render it the new to do form.

145
00:09:12.440 --> 00:09:19.040
We're going to pass in all of these props and we'll pass in another prop called handle submit and it's

146
00:09:19.040 --> 00:09:23.110
going to be whatever this handle ad does.

147
00:09:23.370 --> 00:09:25.290
So there are a lot of moving parts here.

148
00:09:25.400 --> 00:09:30.210
We want to make sure as well that we pass in the method binding which it looks like we've done correctly.

149
00:09:30.380 --> 00:09:31.580
So there could be some mistakes here.

150
00:09:31.580 --> 00:09:36.670
But what I really just want to make sure that we do is first ensure that we assume correct syntax.

151
00:09:36.980 --> 00:09:40.850
So let's say this looks like we have an issue right here in our new to do form we have to make sure

152
00:09:40.880 --> 00:09:43.940
that this is you to do form closes as well.

153
00:09:43.940 --> 00:09:49.880
So what we've done is first removed our new to do form from inside of here and once again we're not

154
00:09:49.880 --> 00:09:52.720
going to get very far if we don't import that new to do form.

155
00:09:52.730 --> 00:09:59.900
So let's make sure as well we import new to do form we take a quick look in the browser and see what's

156
00:09:59.900 --> 00:10:01.210
happening here.

157
00:10:01.290 --> 00:10:04.910
It looks like we're not getting much from render inside of our To Do list.

158
00:10:04.970 --> 00:10:10.250
So if we take a look at our render method we want to make sure we return all this information right

159
00:10:10.250 --> 00:10:10.600
here.

160
00:10:10.700 --> 00:10:12.320
Otherwise we're not going to get very far.

161
00:10:12.710 --> 00:10:13.710
Let's go take a look here.

162
00:10:13.730 --> 00:10:17.930
We should be able to see do's and at our tattoos looks like there's some kind of semi-colon just hanging

163
00:10:17.930 --> 00:10:18.550
out there.

164
00:10:18.740 --> 00:10:20.930
Let's make sure we get that.

165
00:10:21.110 --> 00:10:26.130
So if we are to do this we shouldn't see much and if we add it to do we should be able to eat.

166
00:10:26.510 --> 00:10:31.610
We should be able to jump between adding it to do and seeing our Judis go back to add and go back to

167
00:10:31.610 --> 00:10:33.700
see we still see the one that we've added.

168
00:10:33.980 --> 00:10:35.220
Let's go to.

169
00:10:35.570 --> 00:10:40.820
Let's go back to see my to do is added to do if we ever go back to the route route it's going to redirect

170
00:10:40.820 --> 00:10:45.250
us right away to to do is we're going to lose the to do as we have because everything is in memory.

171
00:10:45.500 --> 00:10:48.230
But it looks like right now you can eat.

172
00:10:48.230 --> 00:10:52.530
And right after we submit this we redirect back to slash tidiest.

173
00:10:52.580 --> 00:10:56.210
So let's go back and go through what we've done in this application.

174
00:10:56.270 --> 00:10:59.080
The first thing we did is bring in re-act router.

175
00:10:59.450 --> 00:11:05.270
Notice that when using Riak router and redux we wrap browser router with provider so provider always

176
00:11:05.270 --> 00:11:06.340
comes first.

177
00:11:06.380 --> 00:11:08.640
That's the reactor redux component.

178
00:11:08.780 --> 00:11:13.400
We then pass in browser router and then finally our app component.

179
00:11:13.400 --> 00:11:18.590
So let's go take a look at this app component inside of here we simply have a couple of links to to

180
00:11:18.590 --> 00:11:25.190
do's and to to Doo's slash knew what we're doing here is simply saying when you go to slash should use

181
00:11:25.550 --> 00:11:27.770
show the to do list component.

182
00:11:28.160 --> 00:11:33.560
And when you go to this path right here which is slash redirect to slash to Duse there are some things

183
00:11:33.560 --> 00:11:37.100
you can take out here we may not need all of these routes but this should get us what we need so far

184
00:11:37.970 --> 00:11:40.500
inside of our to do list component.

185
00:11:40.670 --> 00:11:44.360
What we did is we completely removed our to do form from this list.

186
00:11:44.360 --> 00:11:47.720
We've isolated that component to be its own component which is always nice.

187
00:11:47.720 --> 00:11:51.930
That form was a bit unnecessary to be placed inside of the to do list.

188
00:11:51.950 --> 00:11:55.740
So it's good that we made it's own component inside of the to do list.

189
00:11:55.760 --> 00:11:58.550
This is the component that we connect to redux.

190
00:11:58.550 --> 00:12:00.020
We're going to grab some read ex-state.

191
00:12:00.380 --> 00:12:03.660
We're then going to render a couple routes.

192
00:12:03.920 --> 00:12:06.460
We're going to render the to do's component.

193
00:12:06.530 --> 00:12:11.410
If we're at this specific route and we're going to add a new route for to do slash new.

194
00:12:11.610 --> 00:12:16.470
And when you go to to do slash new We're going to render the new to do form with all of these prompts.

195
00:12:16.490 --> 00:12:17.960
Why do we bring in all of these props.

196
00:12:18.020 --> 00:12:22.180
Because inside of our new to do form we want to be able to redirect.

197
00:12:22.190 --> 00:12:27.830
So this comes from the prop's that we passed down with reactor power.

198
00:12:28.190 --> 00:12:30.470
So this will allow us to redirect.

199
00:12:30.530 --> 00:12:35.060
We could use another component called with router to do that but this is a much nicer way to handle

200
00:12:35.060 --> 00:12:37.070
it inside of our need to do for.

201
00:12:37.070 --> 00:12:38.520
We have a lot of similar code.

202
00:12:38.780 --> 00:12:41.490
We're simply going to listen for a change for us at MIT.

203
00:12:41.540 --> 00:12:46.460
We're going to reset for values and all we've added really are these two lines right here instead of

204
00:12:46.460 --> 00:12:50.420
directly connecting this component to redux and making it what we call a container.

205
00:12:50.570 --> 00:12:55.700
We're just going to pass down a prop from to do list and inside of to do list that's where we're going

206
00:12:55.700 --> 00:12:58.030
to do our redux manipulation.

207
00:12:58.730 --> 00:13:01.100
So in this application we've added Briac router.

208
00:13:01.340 --> 00:13:06.080
We now have redox and react and the re-act router to connect everything together.

209
00:13:06.140 --> 00:13:09.330
So we build a single page application with a little bit of routing.

210
00:13:09.380 --> 00:13:13.330
We're going to do in the next video is actually shift and build a very simple backend.

211
00:13:13.430 --> 00:13:18.320
We're going to create a node application that allows us to add to use to get our to do's and to delete

212
00:13:18.330 --> 00:13:18.910
Tutu's.

213
00:13:19.100 --> 00:13:21.940
So we're going to move completely away from some react and redux.

214
00:13:21.980 --> 00:13:25.160
We're going to shift to building a simple back end and then have a last spring cast.

215
00:13:25.160 --> 00:13:29.850
We're going to put it all together and introduce a way to write asynchronous actions.

216
00:13:29.990 --> 00:13:31.050
I'll see you in the next week.
