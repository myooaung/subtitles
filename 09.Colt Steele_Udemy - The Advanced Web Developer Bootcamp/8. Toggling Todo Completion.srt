1
00:00:00,300 --> 00:00:03,810
OK so the last thing to work on is getting the update to work.

2
00:00:03,810 --> 00:00:10,590
So when I click on the ally not on the span but anywhere else now why it should first send a request

3
00:00:10,800 --> 00:00:15,780
that will change the status in the database from completed to or from false to true or from true to

4
00:00:15,780 --> 00:00:17,280
false for a completed.

5
00:00:17,490 --> 00:00:23,850
And it should also apply or remove the class to show that it's completed or that it's not completed

6
00:00:24,660 --> 00:00:26,770
and Tocchet toggle back and forth.

7
00:00:26,790 --> 00:00:31,880
So let's start by adding a quick listener so that these allies when we click on them do something.

8
00:00:32,340 --> 00:00:33,310
So here we go.

9
00:00:33,330 --> 00:00:36,150
Same place in our code in our document ready.

10
00:00:36,330 --> 00:00:42,390
I'm going to listen and just like before rather than doing it on the fly because those aren't there

11
00:00:42,390 --> 00:00:44,970
when the page loads are generated after the fact.

12
00:00:44,970 --> 00:00:52,860
I'm going to add it to the list on quick and we're going to listen for specific clicks on allies in

13
00:00:52,860 --> 00:00:56,580
that list and I'll just do an alert click.

14
00:00:57,210 --> 00:00:58,730
So refresh the page.

15
00:00:58,830 --> 00:01:04,830
I click on an ally and I get that alert which is what we want but there's a small problem which is that

16
00:01:04,830 --> 00:01:07,630
technically this span is still inside the flight.

17
00:01:07,770 --> 00:01:11,730
So if I'm trying to delete this one I'd say I brewed cider.

18
00:01:11,790 --> 00:01:12,980
I want to delete it.

19
00:01:13,190 --> 00:01:19,480
Well what actually happened it still will delete but it also triggers the code on the fly itself.

20
00:01:19,740 --> 00:01:25,860
So that listener on the line is also triggered and you can see it removes it but it also gave us whatever

21
00:01:25,860 --> 00:01:28,670
code we have in here which right now is just an alert.

22
00:01:28,800 --> 00:01:34,800
But if we're toggling the status on and off and sending an update request or put request we don't want

23
00:01:34,800 --> 00:01:35,400
that to happen.

24
00:01:35,400 --> 00:01:36,550
If you click on the span.

25
00:01:36,780 --> 00:01:38,570
So there's an easy fix.

26
00:01:38,670 --> 00:01:46,180
So down here inside of our click on the span pass in and use this event.

27
00:01:46,240 --> 00:01:52,200
E or Eevee whatever you prefer we do stop propagation.

28
00:01:52,210 --> 00:01:54,810
If I can remember how to spell propagation.

29
00:01:54,840 --> 00:01:56,810
There we go.

30
00:01:57,060 --> 00:02:04,170
This method will stop the event from bubbling up so that when we click on the span it's not also going

31
00:02:04,170 --> 00:02:06,370
to trigger the parent ally.

32
00:02:06,540 --> 00:02:08,160
Now it's tested.

33
00:02:08,190 --> 00:02:11,710
I click on the span to make a new one.

34
00:02:11,760 --> 00:02:14,270
We don't get that alert anymore.

35
00:02:15,210 --> 00:02:18,690
I do get the alert everywhere else I click there I click over here.

36
00:02:19,050 --> 00:02:25,510
But if I click is on the spin itself we don't get it which is what we want.

37
00:02:25,560 --> 00:02:26,220
Perfect.

38
00:02:26,250 --> 00:02:27,720
Make sure it still works here.

39
00:02:27,870 --> 00:02:28,820
Looks good.

40
00:02:29,160 --> 00:02:29,840
OK.

41
00:02:30,090 --> 00:02:34,770
So that's one issue handled if you're not clear about what this actually does you can research event

42
00:02:34,770 --> 00:02:37,030
bubbling and propagation what happens here.

43
00:02:37,270 --> 00:02:42,180
But essentially the event triggers first on the span and it runs whatever we have in here.

44
00:02:42,480 --> 00:02:46,100
And the event continues to go up if there's any other events that are triggered.

45
00:02:46,170 --> 00:02:51,360
Which is true this is a lie that is also triggered because when they click on the span it's inside the

46
00:02:51,400 --> 00:02:51,730
light.

47
00:02:51,780 --> 00:02:53,060
So we're clicking on two things.

48
00:02:53,280 --> 00:02:56,670
But the event does eat stop propagation prevents that.

49
00:02:56,730 --> 00:03:00,730
And then we remove it in here rather than alerting when we click.

50
00:03:00,750 --> 00:03:06,840
Let's define a function called update to do and we're going to pass in that to do that was quick on

51
00:03:06,840 --> 00:03:07,770
the fly.

52
00:03:07,810 --> 00:03:11,060
It's a dollar sign this refers to the exact lie.

53
00:03:11,250 --> 00:03:14,550
If you weren't sure about that we can just call us about log at

54
00:03:18,090 --> 00:03:19,260
and you can see here.

55
00:03:19,440 --> 00:03:20,520
Open up my console.

56
00:03:20,610 --> 00:03:22,050
Click on this one.

57
00:03:22,620 --> 00:03:27,050
You can see it to javascript or it's a J carry object but this is now live.

58
00:03:27,180 --> 00:03:28,760
And if you look in here somewhere.

59
00:03:28,800 --> 00:03:29,200
There we go.

60
00:03:29,220 --> 00:03:31,420
You can see change diet.

61
00:03:31,420 --> 00:03:33,410
So that proves that so when I clicked on.

62
00:03:34,110 --> 00:03:38,690
So we're going to call update to do pass in dollars.

63
00:03:38,700 --> 00:03:43,310
And this the lie that was clicked update today was not defined.

64
00:03:43,440 --> 00:03:46,070
So let's do that now.

65
00:03:46,210 --> 00:03:55,440
Function update to do takes in and to do and in here we have two things to do.

66
00:03:55,590 --> 00:03:59,700
We need to send the request to change status on the server using the API.

67
00:03:59,910 --> 00:04:05,940
And then after that's done we're going to update our view here by adding or removing the class.

68
00:04:05,940 --> 00:04:08,950
So the first thing we have to figure out is when you click on it to do.

69
00:04:09,160 --> 00:04:11,970
Is it currently done or not is completed.

70
00:04:11,970 --> 00:04:13,040
True or false.

71
00:04:13,140 --> 00:04:18,440
And we could derive that value based off of if it has the class done or not.

72
00:04:18,810 --> 00:04:20,180
And that is a valid way of doing.

73
00:04:20,190 --> 00:04:23,510
So basically we click on this one and we check OK.

74
00:04:23,520 --> 00:04:25,980
Does this ally have the class done.

75
00:04:26,250 --> 00:04:32,330
And if it does then we're going to send a request to say OK it hasn't now.

76
00:04:32,340 --> 00:04:36,660
So the user clicked on it tried to market and done two cent false.

77
00:04:36,660 --> 00:04:41,300
The problem is that technically someone could change the class somehow.

78
00:04:41,610 --> 00:04:47,280
We could have code that is adding and removing a class someone could add in the class and it actually

79
00:04:47,280 --> 00:04:49,530
won't be changed in our server anywhere.

80
00:04:49,680 --> 00:04:54,540
So there is a there's some scenario where somehow your data gets out of sync where the class is not

81
00:04:54,540 --> 00:04:55,770
applied where it should be.

82
00:04:55,970 --> 00:05:00,830
But in the server it still says that it's completed and we're not showing that here.

83
00:05:00,840 --> 00:05:06,810
So instead of depending on the class itself which I want to be clear that would work 95 99 percent of

84
00:05:06,810 --> 00:05:10,960
the time what we can do is just use another data.

85
00:05:11,180 --> 00:05:12,610
Where's that.

86
00:05:12,690 --> 00:05:17,740
Here we go that data and store a completed true or false Boolean.

87
00:05:18,270 --> 00:05:20,070
So I'll do that now.

88
00:05:20,090 --> 00:05:25,560
Now to do that data complete is what we'll call it.

89
00:05:25,680 --> 00:05:29,630
It's going to be equal to to do it completed.

90
00:05:29,640 --> 00:05:32,160
So it's going to be true or false.

91
00:05:32,310 --> 00:05:34,740
We're taking this value that comes in as completed.

92
00:05:35,010 --> 00:05:41,730
True False false and we hop over here and we're just saving that using the exact same method we used

93
00:05:41,940 --> 00:05:42,920
for the IDs.

94
00:05:42,930 --> 00:05:43,880
They won't show up anywhere.

95
00:05:43,890 --> 00:05:48,540
We won't be able to see it but we'll be able to access it and pull it back out.

96
00:05:48,540 --> 00:05:53,790
So speaking of pulling it back out here let's just do a copy of that log.

97
00:05:54,330 --> 00:05:57,000
To do that data completed.

98
00:05:57,120 --> 00:05:59,760
So this is going to take whatever to do was correct.

99
00:06:00,960 --> 00:06:05,250
Call that data completed and print out the result.

100
00:06:05,310 --> 00:06:06,400
So here we go.

101
00:06:06,960 --> 00:06:11,970
I click on this one tells us it is completed on its own.

102
00:06:11,970 --> 00:06:13,980
It's not it's not it's not.

103
00:06:13,980 --> 00:06:14,820
This one is.

104
00:06:14,910 --> 00:06:16,320
So that's how we want it to work.

105
00:06:16,320 --> 00:06:19,090
We're getting that correct value out.

106
00:06:19,140 --> 00:06:22,400
So next what we want to do is send a request.

107
00:06:22,620 --> 00:06:26,690
So the first step to send a put request there's no shortcut.

108
00:06:26,700 --> 00:06:36,420
So it's a dollar sign that Ajax and then we also need to do our method which is put in our Euro.

109
00:06:36,570 --> 00:06:42,650
We have the same situation that we had for our remove or we need to grab the ID and then construct to

110
00:06:42,660 --> 00:06:43,650
delete your row.

111
00:06:43,860 --> 00:06:45,990
So let's just copy this code.

112
00:06:45,990 --> 00:06:49,170
I don't think it's enough to turn into its own function necessarily.

113
00:06:49,200 --> 00:06:51,830
So I'm just going to copy and paste it here.

114
00:06:51,960 --> 00:06:58,210
But instead of doing var clicks you are just going to say let's take this idea here.

115
00:07:00,240 --> 00:07:05,180
And call this update you Earl is equal to this.

116
00:07:05,580 --> 00:07:08,520
So Sasha API Sasha dues plus.

117
00:07:08,850 --> 00:07:17,230
And then the due date data ID so whatever that long ideas here will just add an update.

118
00:07:17,400 --> 00:07:18,330
You are.

119
00:07:19,080 --> 00:07:19,630
OK.

120
00:07:19,680 --> 00:07:22,880
And then finally we also need to tell it what the data is.

121
00:07:23,310 --> 00:07:25,360
And this is kind of annoying.

122
00:07:25,490 --> 00:07:30,510
Like when we posted it up here with dollar signs up post we were able to give it a javascript object

123
00:07:31,680 --> 00:07:34,670
down here it actually has to take a string.

124
00:07:35,190 --> 00:07:38,170
So the object version of that looks like this.

125
00:07:38,190 --> 00:07:43,910
We want it to have completed is set to True or false depending on how we're updating it.

126
00:07:44,100 --> 00:07:45,210
We want to use that.

127
00:07:45,270 --> 00:07:46,940
So we're going to do it in two steps.

128
00:07:46,950 --> 00:07:51,230
The first is to extract the value whether it's completed right now or not.

129
00:07:51,270 --> 00:07:58,780
So we're going to have value variable called is done equals to do that data completed.

130
00:07:58,800 --> 00:08:02,400
So this is just going to grab if it's currently done or not.

131
00:08:02,400 --> 00:08:03,540
True or false.

132
00:08:03,690 --> 00:08:08,600
And then we're going to make our update data variable equal to.

133
00:08:08,790 --> 00:08:13,650
And we're just going to check completed or add completed this value and is done.

134
00:08:13,950 --> 00:08:19,040
So this should generate if we just print out or update data.

135
00:08:19,290 --> 00:08:21,130
And actually this is important.

136
00:08:21,180 --> 00:08:23,260
We don't want to just send is done.

137
00:08:23,340 --> 00:08:26,520
I'll show you why.

138
00:08:26,520 --> 00:08:28,620
Because this one is currently done.

139
00:08:29,340 --> 00:08:32,640
So we don't want to say that computed is true when we're sending it to the server.

140
00:08:32,730 --> 00:08:33,800
We're trying to update it.

141
00:08:33,810 --> 00:08:35,280
We want to flip that.

142
00:08:35,670 --> 00:08:39,770
So when I click on this one we want to tell the server completed should now be true.

143
00:08:40,140 --> 00:08:45,580
So to do that we're just going to nullify or negate excuse me not notify with an exclamation point.

144
00:08:46,020 --> 00:08:49,830
And now it changes it to False.

145
00:08:49,850 --> 00:08:51,480
Is this true that true.

146
00:08:51,530 --> 00:08:52,940
That true.

147
00:08:52,980 --> 00:08:54,090
So that's looking good.

148
00:08:54,420 --> 00:08:56,510
So let's send that data on.

149
00:08:56,530 --> 00:09:04,560
So I'm going to read or uncomment that code and I'm going to add in data is equal to update data just

150
00:09:04,560 --> 00:09:05,720
like that.

151
00:09:05,970 --> 00:09:07,490
And this should work.

152
00:09:07,650 --> 00:09:14,160
So we'll add and then and if it works remember that our API sends back the newly updated to do.

153
00:09:14,400 --> 00:09:17,100
So we'll just call it updated to do.

154
00:09:17,910 --> 00:09:23,660
And let's just cancel that log updated to do and save.

155
00:09:23,790 --> 00:09:25,110
Let's see what happens.

156
00:09:25,230 --> 00:09:29,650
Refresh our page here and let's take this by car.

157
00:09:29,650 --> 00:09:32,740
So right now it's completed is false.

158
00:09:32,740 --> 00:09:35,490
I click it and it comes back.

159
00:09:35,740 --> 00:09:37,930
There we go it says completed is now true.

160
00:09:38,140 --> 00:09:43,900
If we inspected here you can see we have a find and modify its finding based off the ID and it said

161
00:09:43,900 --> 00:09:46,070
incompleted to now be true.

162
00:09:48,150 --> 00:09:49,370
So that's working.

163
00:09:49,770 --> 00:09:54,690
As far as what we're getting back there there's two problems so we're not updating the view so we can

164
00:09:54,690 --> 00:09:55,920
actually see that.

165
00:09:56,320 --> 00:10:02,550
And Kitty and if I keep clicking it still it's just doing.

166
00:10:02,550 --> 00:10:04,360
True it's not flipping them back and forth.

167
00:10:04,470 --> 00:10:08,790
So let's start right just toggling the class and that's actually really easy.

168
00:10:08,790 --> 00:10:17,560
We can just do a to do so that's the to do ally itself toggle class done.

169
00:10:17,640 --> 00:10:22,410
And so if it has done class are going to remove it if it doesn't have it we're going to add it.

170
00:10:22,500 --> 00:10:24,040
So that gets us part of the way.

171
00:10:24,290 --> 00:10:27,980
And I guess I checked all of them off so let's toggle them back.

172
00:10:28,140 --> 00:10:29,840
Just make sure it still works OK.

173
00:10:30,180 --> 00:10:34,890
So as you can see I click one and it's changing in a database.

174
00:10:34,890 --> 00:10:38,660
But if I keep clicking it I guess it's kind of hard to tell.

175
00:10:38,670 --> 00:10:42,500
So let's say I check my cheese off and then I decide to actually wait.

176
00:10:42,510 --> 00:10:44,100
No I I am not done.

177
00:10:44,100 --> 00:10:44,970
I didn't buy cheese.

178
00:10:44,970 --> 00:10:46,120
I made it up.

179
00:10:46,500 --> 00:10:53,340
Well if I refresh the page it still is crossed off and that's because it's only actually flipping once.

180
00:10:53,340 --> 00:10:54,370
If that makes sense.

181
00:10:54,390 --> 00:11:00,640
So this thing if I refresh again by cheese starts off as completed false or excuse me it completed true.

182
00:11:00,750 --> 00:11:03,070
I click now change it to false.

183
00:11:03,150 --> 00:11:06,450
But if I click again it's just sending the same data as false.

184
00:11:06,450 --> 00:11:11,650
Every time I click as you can see here completed false true false completely false.

185
00:11:11,730 --> 00:11:15,580
And that's because I'm not changing the value of our to do data.

186
00:11:15,900 --> 00:11:17,810
So what I'm going to do is change it.

187
00:11:17,970 --> 00:11:24,240
So when it comes back from the server things worked successfully I'm going to do to do that data completed

188
00:11:24,390 --> 00:11:26,930
is equal to the opposite of what it used to be.

189
00:11:27,090 --> 00:11:32,150
And we actually stored that in a variable called is done I'm going to refactor this slightly longer

190
00:11:32,220 --> 00:11:35,680
to make is done the negated version.

191
00:11:35,790 --> 00:11:42,370
So I don't have to put the exclamation point here and then down here I can reference is done.

192
00:11:43,060 --> 00:11:43,470
OK.

193
00:11:43,620 --> 00:11:45,560
So let's walk through this.

194
00:11:45,590 --> 00:11:50,980
You click on one of these allies and the event fires calls update to do with that to do.

195
00:11:51,000 --> 00:11:54,480
We create that you R-OH then we're going to check.

196
00:11:54,480 --> 00:11:56,050
Currently is it completed.

197
00:11:56,100 --> 00:12:00,960
So let's say it is then we're going to make is done variable the opposite of that.

198
00:12:00,960 --> 00:12:02,680
So this is what we want it to be.

199
00:12:02,970 --> 00:12:08,880
So when you click and it is completed we want this to be false then we're going to send that off to

200
00:12:08,880 --> 00:12:09,520
the server.

201
00:12:09,600 --> 00:12:11,950
Are you saying completed is now false.

202
00:12:12,210 --> 00:12:13,980
Then it comes back.

203
00:12:13,980 --> 00:12:20,070
We're going to update the view so that shows class is done or it toggles and if we're going the other

204
00:12:20,070 --> 00:12:26,480
direction and then we're going to take that value of is done which is again what we want to change to.

205
00:12:26,610 --> 00:12:30,360
And because we're in here that means it's successfully updated.

206
00:12:30,360 --> 00:12:36,300
We're now going to change our data method to say that completed is now whatever the opposite of what

207
00:12:36,300 --> 00:12:40,150
it used to be is to do that data computed is negated.

208
00:12:40,200 --> 00:12:41,790
So let's make sure it works.

209
00:12:43,570 --> 00:12:44,640
That's quick.

210
00:12:44,640 --> 00:12:47,600
The change diet looks good.

211
00:12:48,480 --> 00:12:51,780
Let's try toggling it again and refresh.

212
00:12:51,780 --> 00:12:53,430
It's how it's supposed to be it's working.

213
00:12:53,760 --> 00:12:55,160
Let's try inserting a new one.

214
00:12:55,180 --> 00:12:57,160
Let's call it cook dinner.

215
00:12:58,500 --> 00:12:59,150
Toggle it.

216
00:12:59,160 --> 00:13:00,530
Does it work.

217
00:13:00,670 --> 00:13:01,560
I refresh the page.

218
00:13:01,620 --> 00:13:02,340
OK.

219
00:13:02,670 --> 00:13:03,570
Looking good to me.

220
00:13:03,660 --> 00:13:07,020
I can let's unpack all of them have to do everything.

221
00:13:07,350 --> 00:13:14,910
And now I've done everything I'm so productive and now I've done almost everything except buying that

222
00:13:14,970 --> 00:13:19,870
pesky cheese fresh of the page and all we have left is by cheese.

223
00:13:19,890 --> 00:13:20,620
Awesome.

224
00:13:20,880 --> 00:13:21,260
OK.

225
00:13:21,360 --> 00:13:22,760
So we're done with that.

226
00:13:22,760 --> 00:13:24,570
It's kind of a lot of code involved.

227
00:13:24,610 --> 00:13:30,110
You can see how this could really get out of hand very quickly if let's were working with.

228
00:13:30,160 --> 00:13:35,010
I've said this a couple times sort of working with a couple of different entities so to do's and users

229
00:13:35,070 --> 00:13:41,190
and tags comments there's a lot of code to manage and if one thing changes in one place how do we keep

230
00:13:41,190 --> 00:13:42,230
track of it.

231
00:13:42,240 --> 00:13:43,170
This is a problem for us.

232
00:13:43,170 --> 00:13:46,000
How do we keep our completed status in sync.

233
00:13:46,180 --> 00:13:47,860
And that's just one tiny bit of data.

234
00:13:48,050 --> 00:13:48,960
It's a boolean value.

235
00:13:48,970 --> 00:13:51,000
Literally the simplest thing we could store.

236
00:13:51,180 --> 00:13:54,160
So this is where frameworks like re-act really help you out.

237
00:13:54,210 --> 00:13:54,560
OK.

238
00:13:54,600 --> 00:13:55,560
So that's a wrap.

239
00:13:55,560 --> 00:13:56,960
We created our API.

240
00:13:57,330 --> 00:14:02,970
Good old days on API here that we're now using and requesting untether own app is pretty cool.
