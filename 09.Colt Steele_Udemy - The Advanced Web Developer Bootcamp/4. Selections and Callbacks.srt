1
00:00:00,450 --> 00:00:01,580
Welcome back.

2
00:00:01,830 --> 00:00:06,700
In this video we're going to continue looking at common selection methods and D-3.

3
00:00:06,750 --> 00:00:12,350
This time we'll use callbacks to set values for attributes and style properties.

4
00:00:12,350 --> 00:00:15,180
Here are some links to the code we used last time.

5
00:00:16,350 --> 00:00:22,740
In D-3 we're able to set values a bit more dynamically bypassing callback functions instead of primitive

6
00:00:22,740 --> 00:00:23,870
values.

7
00:00:23,880 --> 00:00:28,890
This is really useful and you've got a selection with multiple elements because the callback function

8
00:00:28,890 --> 00:00:32,960
will be run once for each element in the selection.

9
00:00:33,030 --> 00:00:38,490
For instance we could use a function that randomly changes the font size of each list item in RHC them

10
00:00:38,490 --> 00:00:46,880
out by using a callback involving math that random because the callback is run once for each list item.

11
00:00:46,950 --> 00:00:51,270
We're getting four randomly generated font sizes rather than just one.

12
00:00:51,660 --> 00:00:56,460
Every time we run this code we're getting four new font sizes for the list items.

13
00:00:56,640 --> 00:01:00,210
D-3 imposes a certain structure on the callback passing.

14
00:01:00,210 --> 00:01:05,870
We'll discuss the structure in more detail later but for now it's good to know that the second argument

15
00:01:05,880 --> 00:01:10,910
in the callback will refer to the index of the current element in the selection.

16
00:01:10,950 --> 00:01:17,160
So for example if we want to add a striped background to our list we could write a callback that sets

17
00:01:17,160 --> 00:01:20,240
a background color based on the index.

18
00:01:20,790 --> 00:01:22,330
Let's run this code.

19
00:01:22,470 --> 00:01:27,290
You can see that now an even numbered list items have a light gray background.

20
00:01:28,260 --> 00:01:34,560
Finally it's worth mentioning that you can use method chaining D-3 to add style to multiple D-3 selections

21
00:01:34,620 --> 00:01:35,850
in sequence.

22
00:01:35,880 --> 00:01:42,840
For example we could use one string of commands to modify the divs at the bottom of our page DML page.

23
00:01:42,870 --> 00:01:46,740
First we'll select the outer and update some style on it.

24
00:01:46,740 --> 00:01:50,730
Then selecting div inside of it and modify some of its styles.

25
00:01:50,850 --> 00:01:53,560
Well then do the same thing for the innermost divs.

26
00:01:53,880 --> 00:01:59,910
My indentation here might look a little strange but this is a common D-3 convention and musing for spaces

27
00:01:59,910 --> 00:02:05,280
of indentation for methods that return the current selection into spaces of indentation for methods

28
00:02:05,280 --> 00:02:07,770
that return a new selection.

29
00:02:07,770 --> 00:02:09,960
This helps keep the code readable.

30
00:02:09,990 --> 00:02:15,030
There is nothing we've done here that we couldn't have done using vanilla javascript but as you start

31
00:02:15,030 --> 00:02:20,130
using D-3 It's good to get into the habit of using the methods that D-3 provides.

32
00:02:20,340 --> 00:02:26,040
And once we start using more of the functionality that sets D-3 apart from other libraries being comfortable

33
00:02:26,040 --> 00:02:28,760
with these fundamentals will be essential.

34
00:02:29,400 --> 00:02:30,860
That's all for now.

35
00:02:30,880 --> 00:02:35,460
Next video we'll talk about some more advanced DOM manipulation with D-3.

36
00:02:35,460 --> 00:02:36,210
See you there.
