1
00:00:00,720 --> 00:00:01,260
Welcome back.

2
00:00:01,260 --> 00:00:05,570
Let's talk about a solution to this do application.

3
00:00:05,600 --> 00:00:06,830
So remember it looks like this.

4
00:00:06,830 --> 00:00:07,820
We've got our input.

5
00:00:07,820 --> 00:00:11,270
We can save it to do and then we'll see the list of studies here.

6
00:00:11,300 --> 00:00:13,640
So let's think a second about what state we need.

7
00:00:14,060 --> 00:00:16,430
Well we know we're going to keep a list of to do's.

8
00:00:16,520 --> 00:00:21,290
So an array of these strings would probably make sense for one thing in our state.

9
00:00:21,290 --> 00:00:25,890
The other piece of state that we're going to need to keep Is this form input.

10
00:00:26,000 --> 00:00:30,480
So every time I type a letter the input for that form will need to be updated.

11
00:00:30,860 --> 00:00:33,420
Let's take a look at the code.

12
00:00:33,770 --> 00:00:35,060
So here's my solution.

13
00:00:35,120 --> 00:00:39,330
Let's start with the constructor and talk about the state.

14
00:00:39,430 --> 00:00:43,420
So we've got the standard beginning of the constructor here we're going to get the props and then call

15
00:00:43,420 --> 00:00:44,940
super props.

16
00:00:45,190 --> 00:00:49,480
The next thing that we're going to do is create the state and the state like I said it's going to consist

17
00:00:49,480 --> 00:00:54,300
of two things the array of tattoos that we're storing that we've saved so far.

18
00:00:54,520 --> 00:00:58,370
And then this new tree will be the contents of that input.

19
00:00:58,600 --> 00:01:04,190
So any time something is typed in the input that new to do will be updated.

20
00:01:04,210 --> 00:01:06,060
Now let's take a look at the render method.

21
00:01:07,650 --> 00:01:16,920
In render first of all here we're going over each to do list of Zeus and mapping them into GSX elements

22
00:01:17,520 --> 00:01:19,620
and this to do item I have up top.

23
00:01:19,620 --> 00:01:26,020
So let's talk about that 2 item here is just a statelets functional component.

24
00:01:26,210 --> 00:01:30,680
And honestly I probably could have just left it as an ally because there's really not a lot going on

25
00:01:30,680 --> 00:01:31,580
here.

26
00:01:31,850 --> 00:01:34,820
But just to have multiple components going on.

27
00:01:34,940 --> 00:01:40,760
So this to do item just takes in a prop for text and then uses it inside.

28
00:01:40,760 --> 00:01:43,400
Now remember this is destructuring that parameter.

29
00:01:43,550 --> 00:01:51,240
So I could have also just left this as props and said props that text here.

30
00:01:51,390 --> 00:01:54,880
But you'll see the shorthand often so I'll leave it that way.

31
00:01:55,220 --> 00:01:59,970
I should say that destructuring often OK.

32
00:02:00,290 --> 00:02:05,870
So that's how we get our traduce and then also here we're grabbing the new to do out of state.

33
00:02:06,020 --> 00:02:14,270
Now we need this new to do for the value in our input so down here the GSX is a form inside the form

34
00:02:14,270 --> 00:02:18,320
we've got an input for that new to do that we want to type.

35
00:02:18,320 --> 00:02:23,780
The main thing the important piece is that the value is equal to the state new to do.

36
00:02:23,810 --> 00:02:26,120
Remember that's coming from the destructuring up here.

37
00:02:26,930 --> 00:02:33,780
And the onchange we're setting new state now this I haven't talked about yet so I'll talk about now

38
00:02:34,700 --> 00:02:42,060
I could have also written this rather than what I've got now as new to do.

39
00:02:42,060 --> 00:02:47,380
So every time I want to change something I'll just use new to do eat at target value.

40
00:02:47,400 --> 00:02:50,850
But if I've got multiple things multiple inputs in my form.

41
00:02:51,000 --> 00:02:56,220
This gets tedious because you have to write a different function for every one.

42
00:02:56,220 --> 00:03:04,230
So another way to do this is to base the the key in your new state object off of whatever the name of

43
00:03:04,230 --> 00:03:05,340
that input is.

44
00:03:07,180 --> 00:03:16,900
So here I'm saying I want the key to be equal to e dots targets that name and the name here is being

45
00:03:16,900 --> 00:03:18,170
set up here.

46
00:03:18,610 --> 00:03:24,160
So this name new to do has to match the key that's in my state.

47
00:03:24,670 --> 00:03:31,130
If that's the case if the name matches the key then this key will be correct.

48
00:03:31,360 --> 00:03:33,600
The key will be the same as new to do.

49
00:03:33,860 --> 00:03:36,310
And I can update my state this way.

50
00:03:37,440 --> 00:03:40,070
So that's a useful trick that we'll use later on in the course.

51
00:03:41,670 --> 00:03:44,470
Something that's up on change we'll set the stage.

52
00:03:44,590 --> 00:03:50,860
And now every time you type a key the new View will be equal to whatever you typed in at this point.

53
00:03:52,040 --> 00:03:57,400
And we've got to submit button just like I mentioned in the last video it's important not to put your

54
00:03:57,410 --> 00:04:00,000
unclick here in order to capture the summit.

55
00:04:00,080 --> 00:04:02,210
That's not actually a summit event.

56
00:04:02,210 --> 00:04:08,000
If you want to submit you want to put your on submit handler up here in the form.

57
00:04:08,040 --> 00:04:09,210
Now what happens on Submit.

58
00:04:09,210 --> 00:04:14,010
Well that's being handled up here in this Hammill submit method.

59
00:04:14,650 --> 00:04:18,110
And this is basically exactly like the example we saw in the video last time.

60
00:04:18,400 --> 00:04:23,560
We've got all the tattoos that we're spreading out inside this new array and then we're adding one more

61
00:04:23,560 --> 00:04:27,970
to do which is whatever the current value of new to do is.

62
00:04:28,140 --> 00:04:33,210
And then when we update the state we're updating that new to use array and we're also setting that form

63
00:04:33,210 --> 00:04:35,570
back to empty so that we can type in something else.

64
00:04:35,590 --> 00:04:39,150
I have to delete it or to type in a new value.

65
00:04:40,510 --> 00:04:45,330
And also it's important here that I have this dot submit equals this thought handle Samit that bind

66
00:04:45,370 --> 00:04:46,560
this.

67
00:04:46,600 --> 00:04:52,570
Remember we need that because without that inside of this callback function this would not refer to

68
00:04:52,570 --> 00:04:53,630
our component.

69
00:04:53,710 --> 00:04:57,230
And if this doesn't refer to the component set state won't exist.

70
00:04:57,610 --> 00:05:03,790
So we need this bind in order to make this line of code work.

71
00:05:03,810 --> 00:05:06,480
The last piece here is just rendering those to.

72
00:05:06,690 --> 00:05:14,980
So remember we've translated Our Jews into GSX and now down here at the bottom we just got an ordered

73
00:05:14,980 --> 00:05:17,800
list of those two items.

74
00:05:19,140 --> 00:05:23,680
I also added some CSSA for this.

75
00:05:23,820 --> 00:05:26,030
I put display flex around the hole up.

76
00:05:26,170 --> 00:05:30,470
I've centered everything and I've done flex direction comb.

77
00:05:30,490 --> 00:05:32,460
That's why they're stacking on top of each other.

78
00:05:34,200 --> 00:05:36,750
I've also made a few things larger.

79
00:05:36,750 --> 00:05:38,460
Just some small edits.

80
00:05:38,730 --> 00:05:43,620
If you're curious about that go ahead and check it out but I think all this stuff should be pretty intuitive

81
00:05:43,620 --> 00:05:44,070
to you.

82
00:05:46,100 --> 00:05:46,330
All right.

83
00:05:46,340 --> 00:05:46,890
That's it.

84
00:05:46,910 --> 00:05:48,110
That's our application.

85
00:05:48,410 --> 00:05:53,500
And again this gives us this nice feature.

86
00:05:53,500 --> 00:05:55,390
Next up we'll talk a little bit about Raf's.
