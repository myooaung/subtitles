1
00:00:00,180 --> 00:00:04,180
It's time to start adding the ability to load the messages list.

2
00:00:04,410 --> 00:00:10,110
And it looks like if we refresh a page it's giving us an editing load messages is not defined.

3
00:00:10,110 --> 00:00:14,820
So that's happening inside of our producers for messages and that's just because we imported something

4
00:00:14,820 --> 00:00:18,590
called Load message but we won't load messages.

5
00:00:18,770 --> 00:00:22,210
The first page says Expert default important his message was not found.

6
00:00:22,220 --> 00:00:24,530
What we got to make sure that we export that.

7
00:00:25,670 --> 00:00:26,680
That looks good.

8
00:00:26,810 --> 00:00:28,460
And we're back to it.

9
00:00:28,570 --> 00:00:29,790
Great news.

10
00:00:30,000 --> 00:00:31,700
And I began with something right here.

11
00:00:31,700 --> 00:00:32,880
Pretty simple.

12
00:00:33,050 --> 00:00:39,690
Well just you test that testing want Arcam password and username.

13
00:00:39,690 --> 00:00:45,540
And we're back to you made it looks good but instead of saying it meated I really want to display the

14
00:00:45,540 --> 00:00:51,590
messages in the database so inside of our messages list which is a container we're going to connect

15
00:00:51,590 --> 00:00:54,300
to the store to load all of our messages.

16
00:00:54,590 --> 00:00:58,450
So inside of our message is component where we need to do quite a bit of work.

17
00:00:58,940 --> 00:01:04,280
Let's first import react and restructure component from react.

18
00:01:04,460 --> 00:01:09,080
Let's just make sure we get that curly brace inside of component that looks better.

19
00:01:09,080 --> 00:01:14,000
We're then going to import connect from reac redux.

20
00:01:14,000 --> 00:01:21,260
We're also going to import the fecche messages function from doctor slash store slash actions slash

21
00:01:21,260 --> 00:01:23,310
messages.

22
00:01:23,330 --> 00:01:26,060
I remember inside of actions actions messages.

23
00:01:26,060 --> 00:01:29,200
That's the fetcher master's function which loads the messages.

24
00:01:29,300 --> 00:01:32,630
And if there are any errors returns back some kind of error.

25
00:01:33,560 --> 00:01:42,330
Next we're going to import fecche messages from that flashed store slash actions slash messages were

26
00:01:42,430 --> 00:01:48,620
fecche messages coming from inside of our actions fetch messages is the function that makes the API

27
00:01:48,620 --> 00:01:50,590
call to load all those messages.

28
00:01:52,280 --> 00:01:58,600
So we're going to then create a class called message lists and that extends our component and what we'll

29
00:01:58,620 --> 00:02:01,600
do right way is create our maps to props.

30
00:02:01,780 --> 00:02:06,070
So like a function of maps it's props which accepts and see.

31
00:02:06,370 --> 00:02:11,590
And we're going to turn an object and our key messages will be placed on props and that's going to come

32
00:02:11,590 --> 00:02:13,330
from state of messages.

33
00:02:13,330 --> 00:02:19,720
Then let's export a default of connect and let's read maps to props and then pass for fetch messages

34
00:02:19,780 --> 00:02:24,080
under map dispatched to props and then invoke our message list component

35
00:02:27,980 --> 00:02:30,050
inside of this message what component.

36
00:02:30,140 --> 00:02:36,280
What we really want to do is one of the component loads or when it mounts we're going to run this not

37
00:02:36,290 --> 00:02:39,380
props to fetch messages.

38
00:02:39,380 --> 00:02:41,380
This is not to load all those messages.

39
00:02:41,720 --> 00:02:48,250
So inside of our render we're going to destruction messages from distant prop's and then loop over all

40
00:02:48,250 --> 00:02:55,110
of our messages and we'll create a component for each one we'll call that message item we'll need that

41
00:02:55,110 --> 00:02:56,120
right now.

42
00:02:56,490 --> 00:03:00,970
So we can message lists which is a result of mapping over all of our messages.

43
00:03:01,290 --> 00:03:08,090
Each message and and inside of here we're going to return a message item component.

44
00:03:08,120 --> 00:03:09,130
We don't have that component yet.

45
00:03:09,140 --> 00:03:10,780
That's OK we'll make it in a second.

46
00:03:10,900 --> 00:03:15,790
And inside an insider's message item component we always want to give it a specific prod called key.

47
00:03:15,830 --> 00:03:21,150
We always need that for iterating and it's going to be an underscore ID that's a unique ID coming from

48
00:03:21,150 --> 00:03:22,030
Angus.

49
00:03:22,100 --> 00:03:28,680
One of the problems we want what's the date which is going to be created at one of the problems we want.

50
00:03:28,690 --> 00:03:30,630
Let's add the text of that message.

51
00:03:30,700 --> 00:03:32,520
It's going to be text.

52
00:03:32,620 --> 00:03:39,310
We also want to know who made it so a proper user name which is going to be M that user data user name

53
00:03:39,970 --> 00:03:45,160
on the server we're populating each message with a property called user with a username and profile

54
00:03:45,190 --> 00:03:46,110
image you are ill.

55
00:03:46,240 --> 00:03:53,750
So it's going to be that user profile image you are all and that's all we can pass in a couple of these

56
00:03:53,750 --> 00:03:55,620
props to each message item.

57
00:03:56,380 --> 00:03:58,190
Hold now it's import.

58
00:03:58,410 --> 00:04:01,340
Message item from.

59
00:04:01,630 --> 00:04:03,120
This is a container component.

60
00:04:03,490 --> 00:04:06,050
Well there isn't going to be too much teeth here and that's good.

61
00:04:06,270 --> 00:04:14,180
So let's put it inside of components slash message item and let's give me a file inside of components

62
00:04:14,180 --> 00:04:22,380
called Message item dodginess and inside a message item we're going to simply follow a pattern that

63
00:04:22,400 --> 00:04:23,510
we've seen before.

64
00:04:23,510 --> 00:04:26,880
Import re-act from re-act says in the statelets functional component.

65
00:04:27,110 --> 00:04:28,490
What else do we want here.

66
00:04:28,490 --> 00:04:30,190
You want some nice formatting for our days.

67
00:04:30,230 --> 00:04:36,820
So we're going to import a moment component from re-act mummy and I'll link in the section to the moment

68
00:04:36,820 --> 00:04:38,880
Doxey you can see how that works.

69
00:04:38,890 --> 00:04:42,490
We're going to import link from Korea Rotterdam as well.

70
00:04:43,570 --> 00:04:45,870
And it's going to be a bit more for styling actually.

71
00:04:47,980 --> 00:04:56,370
We're going to import a default profile image from that flash images slash evolved dash profile dash

72
00:04:56,410 --> 00:05:00,510
image that GBG was one of the images that we have which I've included for you.

73
00:05:01,350 --> 00:05:03,770
And if the user doesn't have an image where is going to go with that one.

74
00:05:04,200 --> 00:05:09,650
So let's make a message item and it's going to be a seamless functional component which is in to get

75
00:05:09,650 --> 00:05:14,210
some props and return a bunch of GSX.

76
00:05:14,330 --> 00:05:19,850
So we're going to structure some information from props and let's not do that with a console that actually

77
00:05:19,850 --> 00:05:21,450
directly from props.

78
00:05:21,470 --> 00:05:24,650
We're going to get the date profile image you are.

79
00:05:24,740 --> 00:05:34,270
What else do we pass in the past in a text and a user name as so let's return a bit of GSX here.

80
00:05:34,420 --> 00:05:35,520
We'll start with a div

81
00:05:39,550 --> 00:05:45,340
and inside of this div will make an image as our C attribute is going to be the profile image you are

82
00:05:46,600 --> 00:05:48,320
or the default profile image.

83
00:05:48,340 --> 00:05:55,100
If it doesn't exist with an alt attribute of whatever that user name is.

84
00:05:55,340 --> 00:05:58,610
So if you don't have an image that display the default profile image something goes wrong.

85
00:05:58,610 --> 00:06:04,250
We always have that username as an alt attribute will also give this a height of 100 with a 100 and

86
00:06:04,250 --> 00:06:08,960
give a class name which will sound a little bit we'll call that timeline dash image

87
00:06:11,870 --> 00:06:13,400
and make sure that we close it.

88
00:06:13,850 --> 00:06:17,180
Let's make another div with the class name call message area.

89
00:06:17,330 --> 00:06:22,780
And this is where we display each of the messages and let's make a link to slash.

90
00:06:22,780 --> 00:06:27,850
This is not going to take us anywhere but it'll look like a little hyperlink or will display the user

91
00:06:27,850 --> 00:06:28,470
name.

92
00:06:28,480 --> 00:06:30,340
So the way that Twitter does we'll have that app.

93
00:06:30,370 --> 00:06:35,590
And then the user name and we'll add a little bit of non-breaking whitespace tickly things will then

94
00:06:35,590 --> 00:06:41,020
close that link will then add a spin with a classic text and eat it and it's like we're going to use

95
00:06:41,020 --> 00:06:41,970
our moment component.

96
00:06:42,800 --> 00:06:47,750
And this is a wonderful library handles with times and dates and I'll link again to it in the section

97
00:06:47,750 --> 00:06:49,800
notes to give you a little bit more context.

98
00:06:50,000 --> 00:06:55,250
So give us a class of text you didn't which is from Butcha and we'll give this a proper format for the

99
00:06:55,250 --> 00:06:56,880
way in which we want to show these dates.

100
00:06:56,900 --> 00:06:59,600
So we'll do the date the month and the year.

101
00:06:59,810 --> 00:07:10,660
So is something like 30 Jan 28 in inside of your pass in the date that we're working with must close

102
00:07:10,660 --> 00:07:12,820
that on that component and enclose the spin.

103
00:07:14,280 --> 00:07:16,830
And after the span we'll add a little bit more.

104
00:07:17,260 --> 00:07:22,600
So we really want to do here is just take a paragraph 10 and in this paragraph type We'll use our text

105
00:07:23,780 --> 00:07:26,810
I will have some more styling to this later.

106
00:07:26,870 --> 00:07:29,740
So this should be just the text on the page and that's about it.

107
00:07:30,840 --> 00:07:35,360
And make sure that we fix our syntax and we do structure that looks a lot better and it's good to go

108
00:07:35,370 --> 00:07:36,280
look in the browser.

109
00:07:38,110 --> 00:07:38,970
If your front page.

110
00:07:39,010 --> 00:07:43,670
We still see you meet it and it looks like the set of our message list correctly and the timeline correctly.

111
00:07:43,920 --> 00:07:47,230
Well back in our home page we're never actually rendering that timeline.

112
00:07:48,250 --> 00:07:50,890
So on our homepage component let's put it all together.

113
00:07:52,470 --> 00:08:00,150
So let's compare message time on from the last message.

114
00:08:00,150 --> 00:08:08,740
Tamarin and said if you need it let's go render our message timeline component make sure we self-closing

115
00:08:08,740 --> 00:08:09,600
that.

116
00:08:09,960 --> 00:08:13,750
And here you render another genteelly the return statement.

117
00:08:14,310 --> 00:08:15,240
Inside of our message list.

118
00:08:15,240 --> 00:08:17,490
It doesn't look like we're actually returning anything here.

119
00:08:17,850 --> 00:08:21,780
So let's just make sure that we return that list of messages.

120
00:08:21,780 --> 00:08:23,770
So return that message list.

121
00:08:25,970 --> 00:08:29,250
Now we're getting a expert default imported as message item.

122
00:08:29,450 --> 00:08:32,040
So looks like we forgot to export something out.

123
00:08:32,330 --> 00:08:37,070
So let's go take a look at message item and we have to make sure we export the de-evolved message Atum

124
00:08:38,860 --> 00:08:40,260
make sure you spell that one correctly.

125
00:08:40,400 --> 00:08:44,000
It's good to see that we're getting another export default in message time on walk.

126
00:08:44,000 --> 00:08:45,470
Same exact thing.

127
00:08:45,860 --> 00:08:50,560
Let's go to a default message time line.

128
00:08:50,600 --> 00:08:54,710
You're going to make a lot of mistakes and that's OK as long as you know how to debug them.

129
00:08:54,710 --> 00:08:59,430
A lot of it is really just seeing this pattern over again and figuring out why you did correctly.

130
00:08:59,690 --> 00:09:01,560
Message timeline is not defined.

131
00:09:01,670 --> 00:09:06,880
So inside a message time line looks like I call this message time line with a capital L.

132
00:09:06,940 --> 00:09:08,520
It was made that clergies.

133
00:09:08,810 --> 00:09:10,210
Let's take a look now.

134
00:09:10,220 --> 00:09:13,960
So now we're seeing this actually Steve all day is not a function.

135
00:09:14,120 --> 00:09:19,160
So whatever method I'm passing is not actually a valid accedes function because I'm actually using a

136
00:09:19,160 --> 00:09:24,820
capital get be better to make our API just a little bit smarter.

137
00:09:25,190 --> 00:09:29,810
So let's actually make our method to lowercase that way if we use a capital get it all we're totally

138
00:09:29,810 --> 00:09:31,040
fine.

139
00:09:31,040 --> 00:09:33,950
Now we're getting a different artier dispatch catches is not a function.

140
00:09:34,190 --> 00:09:35,100
Let's see what's going on here.

141
00:09:35,100 --> 00:09:37,570
It looks like my syntax may just be incorrect.

142
00:09:37,580 --> 00:09:42,770
Let's go back to messages G-S and go take a look at our fetch messages and it looks like I just have

143
00:09:42,770 --> 00:09:44,460
a mistake with my syntax.

144
00:09:44,570 --> 00:09:49,730
So a great way to debug functions is to go and write regular functions and then use aero functions.

145
00:09:49,730 --> 00:09:55,810
Once you've gotten the syntax down so let's refactor this just use the regular function cured and we'll

146
00:09:55,820 --> 00:10:00,160
put in that catch with a function and an error if something goes wrong.

147
00:10:00,580 --> 00:10:03,630
Dispatch that our.

148
00:10:03,810 --> 00:10:05,380
So this is what the function looks like.

149
00:10:05,850 --> 00:10:10,110
And afterwards we can come back and use our functions.

150
00:10:10,220 --> 00:10:11,810
So that's OK.

151
00:10:11,880 --> 00:10:12,300
Is all.

152
00:10:12,350 --> 00:10:14,690
Totally fine.

153
00:10:14,720 --> 00:10:16,350
Now let's go see what's going on here.

154
00:10:16,520 --> 00:10:17,820
Rest is not defined.

155
00:10:17,930 --> 00:10:19,140
So where is rest coming from.

156
00:10:19,160 --> 00:10:22,700
Got to make sure we get it in our resolve promise.

157
00:10:22,820 --> 00:10:24,880
So that's what we want to pass to load messages.

158
00:10:26,200 --> 00:10:27,320
So I'm here for a page.

159
00:10:27,320 --> 00:10:29,950
Now we should see all of our messages.

160
00:10:30,230 --> 00:10:32,270
Now there's a little bit styling that we need to do.

161
00:10:32,310 --> 00:10:36,160
It looks like we're actually getting the right message with the date format and the text that we want

162
00:10:36,780 --> 00:10:40,340
we like an redox we've actually seen it our state has two messages.

163
00:10:40,480 --> 00:10:43,600
Each of those has created a user and so on.

164
00:10:43,870 --> 00:10:46,370
In the next section we're going to a little bit of styling.

165
00:10:46,600 --> 00:10:50,890
Are going to make these messages look better and have functionality to delete those messages in a little

166
00:10:50,890 --> 00:10:51,320
bit.
