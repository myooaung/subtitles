WEBVTT
1
00:00:00.440 --> 00:00:06.300
Welcome back in the last video we introduce a more concise way to create functions using the arrow function

2
00:00:06.300 --> 00:00:09.880
syntax and you might be thinking R-OH functions are wonderful.

3
00:00:10.020 --> 00:00:11.200
Let's use them everywhere.

4
00:00:11.350 --> 00:00:12.810
But there's a catch.

5
00:00:12.900 --> 00:00:17.010
R-OH functions are not exactly the same as using the function keyword.

6
00:00:17.040 --> 00:00:19.020
There are a couple important points here.

7
00:00:19.020 --> 00:00:22.430
The first is that aero functions do not get their own keyword.

8
00:00:22.470 --> 00:00:26.600
As we mentioned earlier that when a function is run it gets its own keyword.

9
00:00:26.610 --> 00:00:32.590
This and keyword arguments but that is not the case with arrow functions in an arrow function.

10
00:00:32.640 --> 00:00:36.730
The value of the keyword this is whatever its enclosing context is.

11
00:00:37.050 --> 00:00:42.330
Well that basically means is that the keyword this inside of an arrow function is whatever the value

12
00:00:42.330 --> 00:00:44.610
of the keyword this would be immediately.

13
00:00:44.640 --> 00:00:48.440
Outside of that arrow function that might sound a bit confusing.

14
00:00:48.510 --> 00:00:50.300
So let's see a couple examples.

15
00:00:50.310 --> 00:00:53.780
Just remember the fact that aero functions do not have their own.

16
00:00:53.780 --> 00:00:56.540
This keyword can actually be quite useful.

17
00:00:56.580 --> 00:01:00.730
You just need to understand when you might not want that and talking.

18
00:01:00.750 --> 00:01:01.720
Let's see some cook.

19
00:01:01.860 --> 00:01:05.790
What we're looking at is actually something we've seen before when talking about the keyword.

20
00:01:05.790 --> 00:01:07.760
This inside of our object.

21
00:01:07.770 --> 00:01:13.320
We have a say hi method which invokes a set time out function that cancelled blocks the string hello.

22
00:01:13.530 --> 00:01:19.080
Plus the value of this first name in 1000 milliseconds just to be totally clear.

23
00:01:19.110 --> 00:01:24.010
I'm using the term method to define a function that is placed on an object.

24
00:01:24.010 --> 00:01:27.910
Now this code might seem pretty harmless but do you remember what happens when you invoke constructor

25
00:01:27.910 --> 00:01:30.730
not say hi one second later we get back.

26
00:01:30.730 --> 00:01:32.410
Hello undefined.

27
00:01:32.410 --> 00:01:37.840
The reason here is that the value of the keyword this inside of the set timeout function refers to the

28
00:01:37.840 --> 00:01:40.550
window not the instructor object.

29
00:01:40.570 --> 00:01:43.430
So how do we fix this issue in S-5.

30
00:01:43.510 --> 00:01:49.210
We use the bind keyword to explicitly set the value of the keyword this to be what we want.

31
00:01:49.210 --> 00:01:54.490
We're using bind here instead of call or apply because we do not want to immediately invoke the function

32
00:01:55.030 --> 00:01:59.500
we want to return a new function to be executed in a thousand milliseconds.

33
00:01:59.500 --> 00:02:03.710
You might also be wondering why are we passing in the keyword this into bind.

34
00:02:03.970 --> 00:02:06.270
We could pass and the instructor object.

35
00:02:06.310 --> 00:02:10.900
The reason we use the keyword this year instead of instructor is that if we were to change the name

36
00:02:10.900 --> 00:02:16.740
of our variable to instructor to our function would still work if we use the keyword this.

37
00:02:16.900 --> 00:02:19.600
Now when we invoke the instructor I say hi method.

38
00:02:19.600 --> 00:02:21.470
We will see a cancelled out logs.

39
00:02:21.520 --> 00:02:23.050
Hello Ellie.

40
00:02:23.270 --> 00:02:25.260
You're still feeling shaky on that material.

41
00:02:25.370 --> 00:02:26.660
That's totally reasonable.

42
00:02:26.840 --> 00:02:32.300
Make sure to watch the section on closures and the keyword this to see how to explicitly set the value

43
00:02:32.450 --> 00:02:33.050
of the keyword.

44
00:02:33.050 --> 00:02:34.610
This.

45
00:02:34.730 --> 00:02:37.210
So what does that have to do with aero functions.

46
00:02:37.220 --> 00:02:40.000
Remember that aero functions do not get their own keyword.

47
00:02:40.010 --> 00:02:46.320
This the value of the keyword this inside of an arrow function is its enclosing context.

48
00:02:46.520 --> 00:02:48.680
So how can you use that to our advantage.

49
00:02:48.680 --> 00:02:49.940
Let's see what this code looks like.

50
00:02:49.940 --> 00:02:51.650
Using aero functions.

51
00:02:51.950 --> 00:02:55.920
If we were to run instructor that say hi this would cancel out log.

52
00:02:55.940 --> 00:02:58.700
Hello Kelly but why does this work.

53
00:02:58.760 --> 00:02:59.470
If you'd like.

54
00:02:59.540 --> 00:03:03.170
Pause the video for a second and see if you can answer that question yourself.

55
00:03:03.350 --> 00:03:10.430
It's a great way to truly test your understanding of aero functions the reason why this works is because

56
00:03:10.430 --> 00:03:16.940
the value of the key word this inside of the time out is it's in closing context which is the instructor

57
00:03:16.970 --> 00:03:20.680
object since the arrow function does not get its own keyword.

58
00:03:20.690 --> 00:03:24.860
This we don't have to worry about explicitly setting its value.

59
00:03:24.920 --> 00:03:30.440
We can just use arrow functions but you may have noticed there's something else going on here.

60
00:03:30.660 --> 00:03:34.290
We used both the function keyword and an arrow function.

61
00:03:34.290 --> 00:03:35.420
Why is that.

62
00:03:35.490 --> 00:03:39.570
Why didn't we use an arrow function for the say high method as well.

63
00:03:39.570 --> 00:03:45.170
Once again paused the video and see if you can figure out why that is.

64
00:03:45.260 --> 00:03:49.210
If we use an arrow function the say hi method will not have its own key word.

65
00:03:49.220 --> 00:03:54.740
This and the enclosing context for the say hi method will actually be the global object.

66
00:03:54.830 --> 00:03:56.360
In our case the window.

67
00:03:56.690 --> 00:03:59.750
So if we put an arrow function we would actually get back.

68
00:03:59.770 --> 00:04:00.840
Hello undefined.

69
00:04:00.890 --> 00:04:03.490
Once again let's see that quickly.

70
00:04:03.650 --> 00:04:08.390
I'll copy and paste the code from the slide and replace the function keyword with an arrow function

71
00:04:08.810 --> 00:04:13.460
and run our instructor that say hi function and it logs Hello.

72
00:04:13.490 --> 00:04:14.840
Undefined.

73
00:04:14.840 --> 00:04:19.010
The lesson here is that you need to be careful when using aero functions.

74
00:04:19.010 --> 00:04:24.590
They are concise and can clean up your code but we always have to be aware that aero functions do not

75
00:04:24.590 --> 00:04:25.860
get their own keyword.

76
00:04:25.880 --> 00:04:26.460
This.

77
00:04:26.630 --> 00:04:30.690
In fact aero functions do not get their own keyword arguments as well.

78
00:04:30.950 --> 00:04:36.890
But see a small example of what happens if we try to use the arguments keyword when we run this function

79
00:04:36.980 --> 00:04:39.720
or actually get a reference or something.

80
00:04:39.720 --> 00:04:44.340
It's even more odd is that an argument keyword can be accessed in an Aero function.

81
00:04:44.480 --> 00:04:51.170
If that function is inside of another function that it will only list the outer functions arguments.

82
00:04:51.170 --> 00:04:55.970
If you really need to get access to the arguments in an arrow function there is a better way to do that

83
00:04:56.000 --> 00:04:58.240
using something called the rest operator.

84
00:04:58.250 --> 00:04:59.670
We'll see that very soon.

85
00:04:59.900 --> 00:05:02.100
Now that we've seen some gotchas with error functions.

86
00:05:02.120 --> 00:05:09.020
Let's see one last example of what we should never use the arrow functions should never be used as methods

87
00:05:09.020 --> 00:05:15.950
in objects since we almost always get the value of the key word this that we do not want as 20:15 provides

88
00:05:15.950 --> 00:05:20.530
a better alternative for creating methods in objects in the next video.

89
00:05:20.540 --> 00:05:24.830
We'll take a look at a concept that's a bit easier to wrap your head around before we get to it.

90
00:05:24.830 --> 00:05:27.130
It's your turn to practice with aero functions.

91
00:05:27.140 --> 00:05:28.320
Good luck keep it up.
