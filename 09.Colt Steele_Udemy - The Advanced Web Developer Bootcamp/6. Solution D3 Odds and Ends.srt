1
00:00:00,420 --> 00:00:01,710
Welcome back.

2
00:00:01,710 --> 00:00:07,720
In this video I walk through my solution to the scatterplot on methane and CO2 emissions that I showed

3
00:00:07,720 --> 00:00:10,050
you in the last video.

4
00:00:10,150 --> 00:00:17,360
I've already created the HDMI Olens DSS for this project as you can see my HDMI is fairly simple.

5
00:00:17,680 --> 00:00:23,960
Inside the body I just got my SPG my range and put in my tool tip inside of this.

6
00:00:23,970 --> 00:00:29,500
SS I've just got some simple styling for the SVGA and the range and put along with some styles for the

7
00:00:29,500 --> 00:00:30,430
tool tip.

8
00:00:30,870 --> 00:00:36,160
This should almost be the same as the styling we built in the tooltip video but with different colors

9
00:00:36,250 --> 00:00:38,220
and a slightly different location.

10
00:00:38,350 --> 00:00:41,650
This tool tip will show up above the mouse not below it.

11
00:00:43,220 --> 00:00:47,220
Before hopping into the app J.S. Let's talk about the data.

12
00:00:47,300 --> 00:00:49,840
All of my data I obtained from the World Bank.

13
00:00:50,210 --> 00:00:56,420
Here's an example of one of the pages as you can see I can download the data as a zip file.

14
00:00:56,420 --> 00:00:58,650
I've done this for all of my data sets.

15
00:00:58,670 --> 00:01:03,980
Unzip them and put the corresponding cxxviii files inside of a data directory for my project.

16
00:01:04,540 --> 00:01:06,550
Here's an example file.

17
00:01:06,550 --> 00:01:12,280
Note that each row represents a region and the columns indicate the statistic being recorded followed

18
00:01:12,280 --> 00:01:16,170
by values for years between 1960 and 2016.

19
00:01:18,380 --> 00:01:25,360
OK let's move to the J.S. here I've already set up a queue and made requests to each of the cxxviii

20
00:01:25,380 --> 00:01:26,960
files I downloaded.

21
00:01:27,180 --> 00:01:28,030
Amusing in a way.

22
00:01:28,050 --> 00:01:34,630
Oh to wait for all their responses and inside of a callback and first console logging the data.

23
00:01:34,770 --> 00:01:39,750
When I hop into the console though this doesn't look right it doesn't seem like D-3 has parsed the data

24
00:01:39,750 --> 00:01:40,450
correctly.

25
00:01:41,620 --> 00:01:46,690
The problem is that the first row in each CXXVI doesn't have the headers it's some meta information

26
00:01:46,690 --> 00:01:51,320
about the datasource the actual headers don't appear in the fifth row.

27
00:01:51,700 --> 00:01:57,700
In order for D-3 gutsiest V to work properly I'll first need to remove these few lines from each CSFB

28
00:01:57,700 --> 00:01:58,260
file.

29
00:02:00,070 --> 00:02:06,400
Next only to format the data I'll pass each of my CXXVI files through a formatter and inside of the

30
00:02:06,400 --> 00:02:12,030
callback I'll format the data again by passing it into a function called format all data.

31
00:02:12,610 --> 00:02:17,130
To save time I'm just going to paste in a bunch of formatting code and then walk through it.

32
00:02:18,480 --> 00:02:20,590
Let's look at the formatter first.

33
00:02:20,730 --> 00:02:25,200
One of the problems with the data set is that it doesn't just have data on countries.

34
00:02:25,200 --> 00:02:29,200
It also has data on collections of countries like Arab world.

35
00:02:29,220 --> 00:02:34,270
I've gone through and grabbed names for all of these rows that I don't want to keep.

36
00:02:34,300 --> 00:02:39,430
If the region matches one of these in my array I'll just return undefined in the formatter so that the

37
00:02:39,430 --> 00:02:41,050
row will be removed.

38
00:02:41,230 --> 00:02:43,770
After that I'll grab every key that's a number.

39
00:02:43,780 --> 00:02:50,230
Since these correspond to a year column and convert each value to a number or to know if no value is

40
00:02:50,230 --> 00:02:54,000
present for that year that's the formatter.

41
00:02:54,010 --> 00:02:58,040
But what about format data formatter callbacks for you got.

42
00:02:58,060 --> 00:03:03,640
Yes we are great at formatting individual rows but sometimes you also need to format data crossroads

43
00:03:03,700 --> 00:03:05,350
or across files.

44
00:03:05,350 --> 00:03:07,820
So that's what the second function is doing.

45
00:03:08,270 --> 00:03:13,240
It's easiest to understand if I throw a debugger at the bottom and up to the console to look at data

46
00:03:13,300 --> 00:03:14,340
versus year.

47
00:03:14,340 --> 00:03:20,860
B.J. as you can see data as an array of arrays where each array consists of rows taken from one of the

48
00:03:20,890 --> 00:03:25,000
CSB files but the year obey J is structured differently.

49
00:03:25,090 --> 00:03:32,910
It's an object whose keys are yours and whose values are arrays of objects with data by region format

50
00:03:32,910 --> 00:03:37,860
all data just converts what I get from this ESV files into this new structure.

51
00:03:37,980 --> 00:03:42,200
There are D-3 methods that would help with this if you're interested in trying to refactor.

52
00:03:42,210 --> 00:03:45,420
You can research a method called the 3.10 test.

53
00:03:45,430 --> 00:03:51,270
For now I've just used a bunch of loops I loop over the array of arrays and grabbed the indicator such

54
00:03:51,270 --> 00:03:53,940
as CO2 or methane emissions.

55
00:03:54,030 --> 00:03:59,270
Then I loop over the array region objects grab the region and then loop over the years.

56
00:03:59,610 --> 00:04:05,250
If I've already added that region for that year to my year object I just add the new stat.

57
00:04:05,250 --> 00:04:10,800
Otherwise if it's the first time I've seen that region in that year I push a new object to the array

58
00:04:10,860 --> 00:04:12,800
for that year.

59
00:04:13,030 --> 00:04:18,640
After doing this there are a number of years where no country had data on all of the variables I'm interested

60
00:04:18,640 --> 00:04:19,120
in.

61
00:04:19,450 --> 00:04:25,540
So at the end of each year I filter out any region that doesn't have data from each cxxviii file using

62
00:04:25,540 --> 00:04:27,890
a small hoper that I've called Vallet region.

63
00:04:28,180 --> 00:04:32,180
This helper just checks to see that a region has data for all of the indicators.

64
00:04:32,290 --> 00:04:38,860
If not it returns false after filtering if no region for that year had enough data I then delete that

65
00:04:38,860 --> 00:04:42,790
key from the year object as you can see from a console.

66
00:04:42,940 --> 00:04:50,210
This restricts the set of years from 1990 through 2012 formatting your data can sometimes be the most

67
00:04:50,210 --> 00:04:55,670
difficult part of building the visualization but now that we have our data in this form building the

68
00:04:55,670 --> 00:04:57,760
chart should feel quite familiar.

69
00:04:57,950 --> 00:05:03,650
Also variables for width height padding and the extent of the years in my dataset.

70
00:05:03,870 --> 00:05:12,190
Then I'll set up the Viji stored in a variable and append axes axes labels and the title.

71
00:05:12,290 --> 00:05:18,050
After that I'll grab the range and put set its properties based on the extent of years and add an event

72
00:05:18,050 --> 00:05:21,070
listener as we've done before.

73
00:05:21,110 --> 00:05:26,270
How abstract the logic here into a function called Drop plot which I also call outside of the event

74
00:05:26,270 --> 00:05:29,200
handler to initially draw the graph.

75
00:05:29,380 --> 00:05:33,030
As for the drop plot code it should look pretty similar to what we've done before.

76
00:05:33,180 --> 00:05:39,390
So I'll just paste it in first and grabbing data by year because of the structure of your LBJ.

77
00:05:39,390 --> 00:05:41,670
This is just a simple look up.

78
00:05:41,830 --> 00:05:46,690
Then I'm creating scales and updating axes in the title based on this data.

79
00:05:46,720 --> 00:05:51,910
After that I'm using the general update pattern to update the circles for the exit selection.

80
00:05:51,910 --> 00:05:57,400
I'll shrink the circles using the transition and then remove them for the enter selection position them

81
00:05:57,400 --> 00:06:03,490
in the right place and set stroke and stroke with then I'll merge and transition existing circles attributes

82
00:06:03,490 --> 00:06:04,660
based on my scale.

83
00:06:05,500 --> 00:06:11,080
I've got a bit of duplication here was setting C-x and C-y but I'm ok with that if I don't have these

84
00:06:11,080 --> 00:06:15,850
lines in the entire selection then it looks like the circles are shooting out of the origin of the Viji

85
00:06:16,060 --> 00:06:17,490
which is a little much for me.

86
00:06:18,730 --> 00:06:22,730
Lastly on the enter selection I'll attach a ventless and search for the tooltip.

87
00:06:22,870 --> 00:06:25,340
Note that I can combine events using the space.

88
00:06:25,390 --> 00:06:31,120
So I'll listen for mass move and touch move at once and for mass out and touch and at once.

89
00:06:31,390 --> 00:06:32,800
Here's the tooltip code.

90
00:06:32,800 --> 00:06:38,970
It should also look familiar on mouse move or make the tooltip visible adjust its position and said

91
00:06:38,970 --> 00:06:42,510
it's in or age Tamil based on the data on mouse out.

92
00:06:42,520 --> 00:06:44,040
I'll hide the tooltip again.

93
00:06:45,000 --> 00:06:46,900
Let's save and refresh.

94
00:06:46,950 --> 00:06:53,640
There we go a working scatterplot with all of the enhancements we discussed in this section.

95
00:06:53,690 --> 00:06:57,420
I hope that working through this goto is helpful when you're ready.

96
00:06:57,440 --> 00:07:01,910
I'll meet you in the next section where we'll learn about working with some more advanced Grath types

97
00:07:02,090 --> 00:07:02,990
using D-3.
