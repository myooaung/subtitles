1
00:00:00,330 --> 00:00:02,780
All right it's time to delete some messages.

2
00:00:03,030 --> 00:00:06,240
So let's go take a look at how we can get started with that.

3
00:00:06,270 --> 00:00:11,300
So we need to make sure that in our actions for messages we have the ability to get to our producer

4
00:00:11,420 --> 00:00:15,680
to remove a message so we take a look at our actions for messages.

5
00:00:15,680 --> 00:00:17,710
We have the ability to fetch messages.

6
00:00:17,780 --> 00:00:20,340
We have the ability to create messages.

7
00:00:20,540 --> 00:00:21,500
But what about removing

8
00:00:27,790 --> 00:00:29,800
what we have is an action type for a move message.

9
00:00:29,800 --> 00:00:35,200
So let's first create an action creator that will move which except some kind of ID of a message that

10
00:00:35,200 --> 00:00:36,110
we want to remove.

11
00:00:36,490 --> 00:00:44,550
And here we return an object with a type of remove message and some kind of ID.

12
00:00:44,710 --> 00:00:46,820
How are you going to dispatch this action creator.

13
00:00:46,960 --> 00:00:48,610
Well let's going take a look.

14
00:00:48,640 --> 00:00:55,720
We're going to explore a function call move message and move message is going to be a function that

15
00:00:55,720 --> 00:00:58,830
accepts some kind of user ID and message ID.

16
00:00:59,870 --> 00:01:04,930
We're getting both of those to get to the correct end point we're then going to return dispatch.

17
00:01:05,330 --> 00:01:13,510
And inside of here we're going to make an API call wealthily to slash FBI slash users.

18
00:01:14,450 --> 00:01:20,030
Slash whatever the message slash whenever the user ideas slash messages slash whatever that message

19
00:01:20,030 --> 00:01:21,020
ID is.

20
00:01:21,290 --> 00:01:28,390
And if that works out well run a function and we'll dispatch remove with that message ID

21
00:01:31,260 --> 00:01:37,210
if this for some reason fails we'll then run a function and we'll have that error.

22
00:01:38,900 --> 00:01:44,130
With the error message sent in over to our producer to display the air.

23
00:01:44,200 --> 00:01:46,840
So I mean a function call or message is asynchronous.

24
00:01:46,900 --> 00:01:49,150
So we're going to wait until the API call finishes.

25
00:01:49,390 --> 00:01:55,960
And then once it's finished we'll have to remove or will dispatch adverts make sure we actually dispatch

26
00:01:56,050 --> 00:01:57,050
that error.

27
00:01:57,880 --> 00:02:02,190
So once we dispatch the action to remove the sensor the reducer a type of remove message.

28
00:02:02,230 --> 00:02:08,840
So let's make sure that in our search for messages we can handle removing a message so in the case of

29
00:02:08,840 --> 00:02:15,940
a move message we want to return all of the messages except for the one that's removed.

30
00:02:16,220 --> 00:02:20,790
So we want to write a pure function and that we do that easily is the use the filter function.

31
00:02:21,110 --> 00:02:27,980
So we're going to return state after this offer to each message that we get over and all we're going

32
00:02:27,980 --> 00:02:34,220
to do is get the ones where the message ID is not the same as the actual ID which is the idea of the

33
00:02:34,220 --> 00:02:35,690
message that we want to remove.

34
00:02:35,760 --> 00:02:36,950
Those are not the same.

35
00:02:37,070 --> 00:02:40,970
Omitted from the list of messages and load messages will show us all the messages except for the one

36
00:02:40,970 --> 00:02:42,240
that's removed.

37
00:02:42,290 --> 00:02:46,030
So what we want to do now is make a button to delete these specific messages.

38
00:02:47,020 --> 00:02:56,070
So inside of our message item make sure that we have a button to delete individual message.

39
00:02:56,310 --> 00:02:59,540
We're going to have to allow our messages to.

40
00:02:59,630 --> 00:03:05,480
So where we're fetching those specific messages we also want to make sure that we pass in our removed

41
00:03:05,480 --> 00:03:11,440
message function and we're going to remove message to each one of these items.

42
00:03:11,480 --> 00:03:14,050
But we want to make sure that we get the correct IDs.

43
00:03:14,210 --> 00:03:18,200
So we'll call remove message and we'll bind with the value of this.

44
00:03:18,230 --> 00:03:25,140
And then the correct message user ID and message ID.

45
00:03:25,520 --> 00:03:29,330
So this is how we can add that remove message that correctly gets the right user ID and the correct

46
00:03:29,570 --> 00:03:34,550
and the correct message ID once we pass this to our message item.

47
00:03:34,930 --> 00:03:37,430
We should now be able to add a button.

48
00:03:37,960 --> 00:03:40,330
So inside of here we'll add an anchor tag.

49
00:03:40,620 --> 00:03:43,210
Let's keep it simple.

50
00:03:43,250 --> 00:03:46,580
What good is a class name BGN BGN and danger.

51
00:03:46,600 --> 00:03:52,180
Pretty standard bootstrap styling right here and unclick will call remove message.

52
00:03:52,360 --> 00:03:57,910
And that's a problem we're going to get that we want to make sure that we do structure inside of our

53
00:03:57,910 --> 00:04:01,520
parameters to message them as make sure that this causes.

54
00:04:01,780 --> 00:04:03,010
And there's also an inside.

55
00:04:03,010 --> 00:04:04,740
Here is the text only.

56
00:04:05,230 --> 00:04:06,190
So let's see this.

57
00:04:06,280 --> 00:04:11,430
And let's refresh the page and it looks like there are delete buttons for everyone.

58
00:04:11,740 --> 00:04:15,120
So testing in the late McInally it's actually see how this works.

59
00:04:15,120 --> 00:04:16,110
And we look on the lead.

60
00:04:16,150 --> 00:04:17,060
It's not working.

61
00:04:17,290 --> 00:04:18,640
So we're going to cancel.

62
00:04:18,670 --> 00:04:23,150
He's got a little bit so looks we have another area that will quickly fix.

63
00:04:23,180 --> 00:04:27,870
And this is more of a warning but you want to make sure that we call that class names so let's fix that.

64
00:04:28,180 --> 00:04:32,360
Let's refresh the page and we still should see an Arab It actually looks like nothing's happening right

65
00:04:32,360 --> 00:04:32,980
now.

66
00:04:32,990 --> 00:04:34,630
So how would you go about debugs.

67
00:04:34,850 --> 00:04:38,830
Let's first take a look in our redox store and see if anything has actually changed.

68
00:04:39,320 --> 00:04:44,150
And it doesn't look like anything is being dispatched so let's make sure that we're passing in everything

69
00:04:44,150 --> 00:04:46,830
correctly inside of our message list.

70
00:04:46,850 --> 00:04:54,340
We bring an remove message but nowhere do we actually place that on dispatched to prop's So that's a

71
00:04:54,330 --> 00:04:55,400
fresh page.

72
00:04:55,640 --> 00:04:59,750
Well see now in redox if anything changes so we click on this.

73
00:04:59,800 --> 00:05:01,050
Nothing changing.

74
00:05:01,110 --> 00:05:02,910
So why that be the case.

75
00:05:02,910 --> 00:05:10,590
You might add it to dispatch to prop's but you may forget to restructure.

76
00:05:10,630 --> 00:05:13,300
We want to make sure that we actually place it in our component.

77
00:05:13,790 --> 00:05:17,520
So you need those two steps now with literally we're getting an error.

78
00:05:17,530 --> 00:05:18,820
Let's see what this is.

79
00:05:18,820 --> 00:05:23,050
We can click on there and we click the response we can click on the response from the server and it

80
00:05:23,050 --> 00:05:24,690
says error is not defined.

81
00:05:24,790 --> 00:05:27,040
So this is actually a pretty interesting error.

82
00:05:27,070 --> 00:05:28,320
This is not happening on the client.

83
00:05:28,320 --> 00:05:30,250
This is happening on the server.

84
00:05:30,880 --> 00:05:36,040
It looks like inside of our messages model it looks like we forgot to fix a couple of things inside

85
00:05:36,340 --> 00:05:37,640
of our remove.

86
00:05:38,590 --> 00:05:43,040
So once we fix that was her first page when we're deleting that looks good.

87
00:05:43,750 --> 00:05:47,350
If we try to do the math we're actually going to get back for a want of an otherwise.

88
00:05:47,350 --> 00:05:48,050
And that's a good thing.

89
00:05:48,070 --> 00:05:51,110
The server is actually stopping us from deleting other people's messages.

90
00:05:51,430 --> 00:05:54,670
But we want to do is not even display that delete button.

91
00:05:54,820 --> 00:05:59,810
If that's not the current user and the next section that's exactly what we'll do.
