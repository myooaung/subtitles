WEBVTT
1
00:00:00.230 --> 00:00:00.630
OK.

2
00:00:00.690 --> 00:00:03.970
So next up we're going to focus on what's called the show route.

3
00:00:04.080 --> 00:00:09.870
All that it does is retrieves information about a specific to do and in our case that might seem kind

4
00:00:09.870 --> 00:00:14.370
of silly because we're already retrieving all the information for all the to do here.

5
00:00:14.520 --> 00:00:18.180
So why would you need the same amount of information just for one.

6
00:00:18.210 --> 00:00:20.460
And yeah that's a good question.

7
00:00:20.460 --> 00:00:26.700
Typically though imagine that we had comments and tags and other things associated with to use what

8
00:00:26.700 --> 00:00:29.240
we might not retrieve all of the comments here.

9
00:00:29.310 --> 00:00:34.560
Maybe all we want is just the name of the tatoos and a link to get more information about the tattoos

10
00:00:34.800 --> 00:00:39.090
and then if we request that link we can get all of the associated comments and tags.

11
00:00:39.090 --> 00:00:43.690
So we're going to go through with this structure even if it's not all that practical in this case.

12
00:00:43.710 --> 00:00:45.130
It's good to see how to do it.

13
00:00:45.210 --> 00:00:46.320
And the biggest change here.

14
00:00:46.320 --> 00:00:54.210
So it's a GET request to slash API slash to do or to use that's a typo but more importantly this after

15
00:00:54.210 --> 00:00:56.810
the slash the colon to do ID.

16
00:00:56.880 --> 00:01:01.210
So that's a placeholder for the actual ID generated from Mongo.

17
00:01:01.440 --> 00:01:08.920
So something like this and we're going to use that ID to look up the particular information that relates

18
00:01:08.920 --> 00:01:10.060
to that to do.

19
00:01:10.240 --> 00:01:17.440
So we'll be able to take this Id say and ask Mongo to go find the to do that has that Id send all the

20
00:01:17.440 --> 00:01:20.280
info back to us and then Wilson that back is Jason.

21
00:01:20.650 --> 00:01:29.290
So its going to be a router get but the path is no longer just slash are now going to do colon to do

22
00:01:29.290 --> 00:01:31.680
ID if you're not familiar with that colon.

23
00:01:31.750 --> 00:01:35.560
It's very common syntax across all different frameworks.

24
00:01:35.560 --> 00:01:37.980
It defines something as a path variable.

25
00:01:38.260 --> 00:01:46.780
So it's not going to be matching slashed to deuse slash API slash to do Id only it actually will match

26
00:01:46.780 --> 00:01:49.370
that but it will match anything afterwards.

27
00:01:49.450 --> 00:01:53.710
Basically is a blank says Put whatever you want there as long as it comes.

28
00:01:53.710 --> 00:01:55.970
It starts with a slash to do such API.

29
00:01:56.180 --> 00:02:02.760
So router does get and then to do ID function requestion response.

30
00:02:03.010 --> 00:02:07.360
And in here all we need to do is look up to do.

31
00:02:07.390 --> 00:02:15.280
And the way we do that is DV to do and rather than create it rather than find there's a shortcut find

32
00:02:16.270 --> 00:02:22.030
by id and then the question is how do we get this idea out of the euro.

33
00:02:22.470 --> 00:02:27.500
It's under request harams dot to do Id.

34
00:02:27.580 --> 00:02:34.560
So if we had another thing in here like Slash I don't know day we could also have request up tramstop

35
00:02:34.600 --> 00:02:34.940
day.

36
00:02:34.960 --> 00:02:40.110
So perhaps we'll be filled with whatever the route variables are will get.

37
00:02:40.300 --> 00:02:45.370
So we're going to find based off of that ID and then do our same then.

38
00:02:45.840 --> 00:02:52.340
And if it finds it to do we're just going to rez Jaison that to do.

39
00:02:52.810 --> 00:02:58.650
And you can call this found to do to make that easier to just understand.

40
00:02:58.960 --> 00:03:04.370
And then we have our catch and we'll do function error.

41
00:03:04.550 --> 00:03:10.010
Same thing read send error OK.

42
00:03:10.230 --> 00:03:13.620
So we'll go ahead and test this out to restart the server again.

43
00:03:14.790 --> 00:03:21.390
And if I go to my index page and look at all of our dues I can just copy you from one of them excuse

44
00:03:21.390 --> 00:03:24.890
me copy the ID and tag that on here.

45
00:03:26.490 --> 00:03:29.550
And I should get information about that particular to do.

46
00:03:29.860 --> 00:03:33.780
Now of course you're not going to actually be doing this manually copying and pasting.

47
00:03:33.970 --> 00:03:35.620
You would have code that would do it.

48
00:03:35.620 --> 00:03:41.410
So for example we might have a blog page and our blog would have a bunch of titles and you know a couple

49
00:03:41.410 --> 00:03:48.160
line preview of every post and you could click a link that would then go request more detailed information.

50
00:03:48.280 --> 00:03:54.010
And so it would take the idea here and make an automatic Ajax request to go get the complete blog post

51
00:03:54.300 --> 00:03:57.010
that would come back and then it would be inserted onto the page.

52
00:03:57.220 --> 00:04:02.050
So you would have code that is taking this ID for you somewhere and then sending it off and getting

53
00:04:02.050 --> 00:04:03.390
a response.

54
00:04:03.460 --> 00:04:05.340
So we're done with the show route.

55
00:04:05.380 --> 00:04:11.230
Very simple really the only new thing these Raut prams and the request up harams in order to access

56
00:04:11.290 --> 00:04:14.370
the value of that otherwise is pretty much the same pattern.

57
00:04:14.380 --> 00:04:20.200
We have a router deck get and then we have our mongoose and then we have to then catch.
