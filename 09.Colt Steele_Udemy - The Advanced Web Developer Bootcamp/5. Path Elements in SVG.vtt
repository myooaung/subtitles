WEBVTT
1
00:00:00.270 --> 00:00:01.030
Welcome back.

2
00:00:01.140 --> 00:00:06.060
In this video we'll learn more than you ever thought you needed to know about the SVGA path element.

3
00:00:06.480 --> 00:00:08.680
Here's a link to our Copen.

4
00:00:08.700 --> 00:00:13.440
This is the most complex element we'll discuss and can be thought it was a broad generalization of the

5
00:00:13.440 --> 00:00:16.810
line circle ranked in polygon elements.

6
00:00:16.830 --> 00:00:19.940
In fact you can draw all of the shapes we've already drawn.

7
00:00:20.030 --> 00:00:26.400
Just the path element but with great power often comes new syntax and the syntax of creating paths is

8
00:00:26.400 --> 00:00:27.390
difficult to read.

9
00:00:28.440 --> 00:00:33.540
In general if you're working with SVGA frequently you're more likely to use a drawing program to sketch

10
00:00:33.540 --> 00:00:38.830
the SVGA and then export it so that the relevant path commands are automatically generated.

11
00:00:38.840 --> 00:00:41.080
However it's good to know what these commands are doing.

12
00:00:41.120 --> 00:00:42.440
So let's take a brief look.

13
00:00:44.290 --> 00:00:48.280
The most important attribute for the path element is the D attribute.

14
00:00:48.280 --> 00:00:51.050
This is where we describe the path to be drawn.

15
00:00:51.070 --> 00:00:56.410
You can think of drawing a path similar to the way draw paths with a pencil on a piece of paper.

16
00:00:56.410 --> 00:01:01.390
Our job now is to describe to the computer how we want it to move the pencil.

17
00:01:01.410 --> 00:01:05.250
There are six fundamental commands we can use to draw paths.

18
00:01:05.430 --> 00:01:10.230
The first one is the end command which just moves the cursor to the specified coordinates.

19
00:01:10.230 --> 00:01:14.580
This is like you lifting your pencil off the paper and putting it down in any location.

20
00:01:14.700 --> 00:01:16.470
The command does not draw anything.

21
00:01:16.530 --> 00:01:18.530
It simply moves the cursor.

22
00:01:18.570 --> 00:01:22.500
If we wanted to move the cursor to the point with coordinates 400 100.

23
00:01:22.560 --> 00:01:29.270
This is what we'd write this moves the cursor 400 pixels over 100 pixels down.

24
00:01:29.280 --> 00:01:30.990
Next is the L command.

25
00:01:30.990 --> 00:01:36.020
This command draws a line from the cursors current position to whatever destination we specify.

26
00:01:36.090 --> 00:01:41.280
By chaining all commands together we essentially get the same functionality we had the polygon command

27
00:01:41.280 --> 00:01:42.250
from before.

28
00:01:42.630 --> 00:01:46.650
Here's how we can draw a triangle for instance after moving the cursor.

29
00:01:46.650 --> 00:01:52.830
We first draw a line down into the right then draw a line to the left then draw a line up into the right.

30
00:01:53.070 --> 00:01:56.100
Let's also give our triangle a purple outline.

31
00:01:56.100 --> 00:01:59.040
By default paths have no strokin to Blackville.

32
00:01:59.040 --> 00:02:02.630
You can always change the color of the cell or set its value to none.

33
00:02:02.670 --> 00:02:08.650
If you want an empty triangle notice that both of these commands use uppercase letters.

34
00:02:08.750 --> 00:02:12.090
There are lowercase equivalents but they come with an important difference.

35
00:02:12.330 --> 00:02:16.950
When you use uppercase letters in the past commands the numbers you pass in afterwards determine the

36
00:02:16.950 --> 00:02:20.390
position you want to go to when you use lower case letters.

37
00:02:20.400 --> 00:02:24.640
The numbers you pass and afterwards determine how far you want to go from your current position.

38
00:02:25.620 --> 00:02:28.790
Feel free to use whichever commands are more intuitive to you.

39
00:02:28.830 --> 00:02:32.190
In our case we could rewrite our triangle path as follows.

40
00:02:37.070 --> 00:02:42.960
The cursor start to 0 0 so there's no difference between capital M and lowercase M for the first command.

41
00:02:43.080 --> 00:02:50.040
After that moving to the point with coordinates 500 300 is equivalent to moving 100 pixels over 200

42
00:02:50.040 --> 00:02:51.660
pixels down.

43
00:02:51.770 --> 00:02:57.350
You can compare the last two commands in the similar way there are a couple of shorthands worth knowing

44
00:02:57.350 --> 00:02:58.280
about as well.

45
00:02:59.010 --> 00:03:03.180
When you want to draw a straight line from your current position back to the starting position you can

46
00:03:03.180 --> 00:03:06.760
use the Z command which simply closes the path.

47
00:03:07.050 --> 00:03:12.390
And if you want to draw a horizontal or vertical line you can use the H or V commands and omit the co-ordinate.

48
00:03:12.390 --> 00:03:13.730
That isn't changing.

49
00:03:13.950 --> 00:03:19.960
So we can simplify our previous path example a bit further so far so good.

50
00:03:20.220 --> 00:03:22.770
But how is this different than the polygon element.

51
00:03:22.770 --> 00:03:27.180
The key difference is that with the path element we can drill them into with curved edges as well as

52
00:03:27.180 --> 00:03:29.070
straight line edges.

53
00:03:29.070 --> 00:03:35.030
There are three types of curves we can draw with paths quadratics cubic Bezier curves and arcs of circles.

54
00:03:36.250 --> 00:03:41.290
We won't get too much into the theory behind these curve types but very briefly quadratic curves taken

55
00:03:41.350 --> 00:03:42.490
two points.

56
00:03:42.520 --> 00:03:47.700
The second is a destination point and the first is a point that controls the shape of the curve.

57
00:03:47.710 --> 00:03:53.330
Here are a few examples.

58
00:03:53.880 --> 00:03:58.350
If you want more fine tuned control over the curve shape then you can pass three pairs of coordinates

59
00:03:58.350 --> 00:04:00.060
into the C command.

60
00:04:00.060 --> 00:04:06.270
The C command takes in two control points instead of one allowing you to draw a larger family of curves.

61
00:04:06.270 --> 00:04:07.540
Here are some examples.

62
00:04:12.700 --> 00:04:15.050
Lastly let's talk about the ark.

63
00:04:15.520 --> 00:04:18.990
This one is a little tricky because of the values you have to pass in.

64
00:04:19.240 --> 00:04:21.550
There are seven values you need for the command.

65
00:04:21.550 --> 00:04:24.100
Some easier to describe than others.

66
00:04:24.130 --> 00:04:29.120
The first two values are the radius and the direction and the radius in the wider section of the arc.

67
00:04:29.530 --> 00:04:32.520
When these values are equal you'll draw the arc of a circle.

68
00:04:32.620 --> 00:04:35.690
Otherwise you will draw the arc of an ellipse.

69
00:04:35.700 --> 00:04:41.290
Let's ignore the middle three parameters for now the last two parameters specify your destination.

70
00:04:41.370 --> 00:04:44.700
That is where you want the arc to move to.

71
00:04:44.760 --> 00:04:46.720
Let's look at an example.

72
00:04:46.740 --> 00:04:50.270
Imagine you have an s Weegee with these three elements inside of it.

73
00:04:50.340 --> 00:04:55.340
A path within our command one circle at the start of the arc and another at the end.

74
00:04:56.450 --> 00:05:02.080
As you can see this gives us a small green circular arc with two black circles on either end.

75
00:05:03.380 --> 00:05:06.470
However this choice of Arc is somewhat arbitrary.

76
00:05:06.470 --> 00:05:10.940
There are actually four possible arcs that could be made between these two points because there are

77
00:05:10.940 --> 00:05:15.620
two circles we can draw based on those points and for each circle you can choose whether to draw the

78
00:05:15.620 --> 00:05:17.960
larger arc or the smaller arc.

79
00:05:17.960 --> 00:05:23.000
The arc that gets drawn is determined by the fourth and fifth arguments which both take on values of

80
00:05:23.000 --> 00:05:24.830
0 or 1.

81
00:05:24.830 --> 00:05:29.520
Here are all four possible combinations of these arguments.

82
00:05:29.650 --> 00:05:31.340
What about that third value.

83
00:05:31.340 --> 00:05:34.670
This controls the rotation of the arc per circular arcs.

84
00:05:34.670 --> 00:05:35.730
It won't have an effect.

85
00:05:35.780 --> 00:05:37.250
Since circles are symmetric.

86
00:05:37.700 --> 00:05:42.560
But if you make the radius different so that you get an ellipse changing this value will rotate the

87
00:05:42.560 --> 00:05:47.510
ellipse as you can see are elliptical arc is rotating.

88
00:05:47.540 --> 00:05:50.660
Needless to say the ark command is fairly complex.

89
00:05:50.660 --> 00:05:56.510
It's good to know that it exists but you'll rarely be drawing arcs manually in your text editor.

90
00:05:56.510 --> 00:05:58.840
This covers our overview of Fiji.

91
00:05:59.120 --> 00:06:04.250
Try to tackle the Viji exercises and when you're ready let's combine our knowledge of SVGA with what

92
00:06:04.250 --> 00:06:06.120
we've learned about D-3.

93
00:06:06.170 --> 00:06:07.560
I'll see you in the next video.
