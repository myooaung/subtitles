1
00:00:01,190 --> 00:00:01,990
Welcome back.

2
00:00:02,150 --> 00:00:08,720
In this video we'll introduce one more reserve key word that yes Tony 15 gives us super before we see

3
00:00:08,720 --> 00:00:14,810
how to use the super keyword but see how he implemented similar functionality in the S5 in the example

4
00:00:14,810 --> 00:00:15,140
here.

5
00:00:15,140 --> 00:00:18,290
We have two constructor functions person and student.

6
00:00:18,290 --> 00:00:19,690
Now this code will work fine.

7
00:00:19,790 --> 00:00:23,130
But notice the duplication in the student constructor function.

8
00:00:23,210 --> 00:00:28,350
Is there any way to borrow the code from the person function and use it in the student function.

9
00:00:28,370 --> 00:00:33,070
We can't just invoke the person function because the value of the keyword this is important.

10
00:00:33,080 --> 00:00:34,610
So how do we fix that issue.

11
00:00:35,030 --> 00:00:39,470
If you remember from the section on object oriented programming we mentioned that we could use call

12
00:00:39,470 --> 00:00:43,200
or apply to refactor duplication in our constructor functions.

13
00:00:43,430 --> 00:00:49,250
Here's how that would work instead of copying all the code we invoke the person function and specify

14
00:00:49,250 --> 00:00:55,110
the value of the key word this to be the object created from the student function using the new keyword.

15
00:00:55,490 --> 00:01:00,680
We could use call here but since the second parameter to apply has an array we can use the arguments

16
00:01:00,710 --> 00:01:04,730
array like object to capture all of the arguments passed to the function.

17
00:01:04,730 --> 00:01:07,550
This is much easier when we have lots of parameters.

18
00:01:07,640 --> 00:01:10,160
So how does your 20:15 handle that issue.

19
00:01:10,160 --> 00:01:12,860
It uses a reserved keyword called super.

20
00:01:12,860 --> 00:01:18,740
The idea behind super is to find a method by the same name in the parent class or the class which has

21
00:01:18,740 --> 00:01:21,710
passed down methods and properties to a child class.

22
00:01:21,710 --> 00:01:27,610
In our case person is the parent class and student is the child class in our constructor method.

23
00:01:27,620 --> 00:01:33,960
In the Student class we will use super which will invoke a method by the same name in the Person class.

24
00:01:34,070 --> 00:01:39,760
Super can only be used if a method by the same name is implemented in the parent class.

25
00:01:39,770 --> 00:01:43,650
Both of these concepts in S-5 and as 2015 are quite challenging.

26
00:01:43,850 --> 00:01:47,140
So before we move on let's practice a bit with this new information.

27
00:01:47,190 --> 00:01:47,510
Goodluck.
