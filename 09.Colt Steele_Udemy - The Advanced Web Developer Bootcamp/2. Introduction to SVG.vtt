WEBVTT
1
00:00:00.540 --> 00:00:06.900
Hello again and this section will learn about the basics of SVGA and how to combine SVGA with D-3 to

2
00:00:06.900 --> 00:00:09.530
create some simple data visualizations.

3
00:00:10.490 --> 00:00:16.790
In this video we'll compare and contrast raster and vector graphics and we'll create SPG elements in

4
00:00:16.790 --> 00:00:18.300
the DOM.

5
00:00:18.460 --> 00:00:26.180
We'll also draw lines using SVGA and create groups of SVGA elements in the next video will draw rectangles

6
00:00:26.210 --> 00:00:28.600
polygons and circles and SPG.

7
00:00:29.000 --> 00:00:31.230
Then we'll write text on SPG.

8
00:00:31.400 --> 00:00:37.990
After that we'll talk about patho elements and SPG finally we'll turn our attention back to D-3 and

9
00:00:37.990 --> 00:00:41.170
use it to draw a bar chart on an SVGA element.

10
00:00:41.900 --> 00:00:43.610
So let's get into it.

11
00:00:43.790 --> 00:00:46.780
SVGA stands for scalable vector graphics.

12
00:00:46.790 --> 00:00:52.940
Before we dig into what SVGA is good for lets first understand what the term actually means when you're

13
00:00:52.940 --> 00:00:54.830
dealing with graphics on a computer.

14
00:00:54.830 --> 00:00:58.800
There are two different types vector graphics and raster graphics.

15
00:00:58.820 --> 00:01:04.640
The fundamental building block of a raster image is the pixel many common image formats include GIF

16
00:01:05.060 --> 00:01:09.380
JPEG and DNG are raster based vector graphics.

17
00:01:09.380 --> 00:01:14.420
On the other end use lines and curves as their fundamental building blocks.

18
00:01:14.430 --> 00:01:19.540
The biggest difference between raster and vector graphics has to do with their behavior under scaling.

19
00:01:19.590 --> 00:01:25.470
If you zoom in on a raster edge you're increasing the size of the pixels so the image becomes pixilated

20
00:01:25.500 --> 00:01:26.620
and grainy.

21
00:01:26.940 --> 00:01:34.050
Vector graphics however can be scaled without any degradation in quality SVGA is a markup language based

22
00:01:34.050 --> 00:01:37.340
on SNL that allows us to draw vector graphics in HD.

23
00:01:37.360 --> 00:01:43.650
Now the Mozilla Developer Network summarizes it well in their article on SVGA by saying that SVGA is

24
00:01:43.650 --> 00:01:44.900
essentially two graphics.

25
00:01:45.060 --> 00:01:47.700
What HDMI is to text.

26
00:01:47.910 --> 00:01:52.540
The most important element to know and working with SMBG is the SVGA element itself.

27
00:01:52.800 --> 00:01:55.450
You can create an SVGA with the SVGA tag.

28
00:01:55.740 --> 00:02:01.080
It's a best practice to include some metadata about the version and SML namespace attributes.

29
00:02:01.080 --> 00:02:07.560
You can also set the width and height as attributes or by using CSSA to keep things simple for our SVGA

30
00:02:07.560 --> 00:02:08.230
examples.

31
00:02:08.250 --> 00:02:10.830
I'll be using code pen to code along.

32
00:02:10.830 --> 00:02:16.100
Check out this Copen link in the code and notice that RSV has a 1 pixel border.

33
00:02:16.170 --> 00:02:19.110
Just to help visualize it inside of the SPG.

34
00:02:19.110 --> 00:02:22.050
There are a number of elements you can use to help draw images.

35
00:02:22.230 --> 00:02:24.720
We'll start with just a few of the most common ones.

36
00:02:25.590 --> 00:02:27.210
First let's draw a line.

37
00:02:27.320 --> 00:02:29.360
A line is determined by four points.

38
00:02:29.460 --> 00:02:34.610
The x and y coordinates of its starting position and the x and y coordinates of its ending position.

39
00:02:34.740 --> 00:02:36.060
These are denoted x1.

40
00:02:36.060 --> 00:02:41.310
Y one X to and y to.

41
00:02:41.520 --> 00:02:42.920
Nothing showing up.

42
00:02:42.930 --> 00:02:45.590
It may not look like it but the line element is there.

43
00:02:45.600 --> 00:02:49.760
The issue is that by default lines have no width to make the line visible.

44
00:02:49.770 --> 00:02:51.910
We need to set the stroke width.

45
00:02:51.960 --> 00:02:54.970
We can also set the color with the stroke attribute.

46
00:02:55.470 --> 00:02:55.990
Cool.

47
00:02:56.040 --> 00:02:57.880
There's our line.

48
00:02:58.110 --> 00:03:01.180
If you look carefully at the line you might notice something strange.

49
00:03:01.190 --> 00:03:05.370
Our line starts at 100 100 and goes to 700 350.

50
00:03:05.610 --> 00:03:10.320
If you draw this line in a high school math class it would have a positive slope but the line in our

51
00:03:10.320 --> 00:03:15.040
SMBG slopes downward to understand why the line slopes down.

52
00:03:15.040 --> 00:03:18.000
We need to understand how coordinate work in SVGA.

53
00:03:18.430 --> 00:03:23.320
Typically when you graph things in a math class positive numbers increase from left to right along the

54
00:03:23.380 --> 00:03:27.940
x axis and from bottom to top along the y axis.

55
00:03:27.940 --> 00:03:33.260
But with G the y axis is reversed values increase as you go down.

56
00:03:33.280 --> 00:03:35.340
Not as you go up.

57
00:03:35.560 --> 00:03:37.300
Put another way in math class.

58
00:03:37.300 --> 00:03:43.960
The point with coordinates 0 0 is typically in the lower left corner of the coordinate system by SMBG.

59
00:03:43.970 --> 00:03:45.940
This point is in the upper left corner.

60
00:03:46.310 --> 00:03:52.400
As you move to the right the first coordinate increases and as you move down the second coordinate increases.

61
00:03:52.610 --> 00:03:58.220
The fact that the y axis is flipped can be a little confusing but D-3 has functionality that will allow

62
00:03:58.220 --> 00:04:02.540
us to flip the y axis back to the orientation you may be more comfortable with.

63
00:04:02.540 --> 00:04:03.880
For now we'll live with it.

64
00:04:04.880 --> 00:04:13.940
Let's draw another line to form an X.

65
00:04:14.010 --> 00:04:19.370
Now that we've got this X on the SVGA we may want to think of the two lines not as independent pieces

66
00:04:19.590 --> 00:04:22.560
but as a group that forms a single x.

67
00:04:22.590 --> 00:04:28.320
If you want to take this approach you can wrap both lines in a g element g Sanch for group.

68
00:04:28.320 --> 00:04:33.060
The advantage to this is that you can set certain attributes or bits of functionality at the group level

69
00:04:33.360 --> 00:04:37.140
instead of duplicating the attributes for each element of the group.

70
00:04:37.170 --> 00:04:41.530
In this example we can move the stroke and stroke with settings to the Gtech.

71
00:04:41.550 --> 00:04:47.220
You can also move the style rules to CSSA if you like.

72
00:04:47.300 --> 00:04:53.120
Those are the basics of SVGA and the next video will talk about some other commonly used SVGA elements

73
00:04:53.540 --> 00:04:54.200
Assia their.
