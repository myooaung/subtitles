1
00:00:00,690 --> 00:00:05,090
All right I'm excited about this video we're getting in some user interaction so we'll be able to build

2
00:00:05,670 --> 00:00:07,450
much more interesting components at this point.

3
00:00:09,830 --> 00:00:16,010
For our objectives first will demonstrate an unclick event and then we'll use bound functions and inline

4
00:00:16,010 --> 00:00:17,650
functions for callbacks.

5
00:00:17,700 --> 00:00:19,340
We'll explain more when we get to that part.

6
00:00:21,640 --> 00:00:23,560
First up an On Click event.

7
00:00:23,560 --> 00:00:28,420
So this is a component that we've probably seen before or something similar where we've got a constructor

8
00:00:28,480 --> 00:00:34,990
with super props and then substate the only state I'm keeping track of is the name and my name Tim.

9
00:00:35,070 --> 00:00:38,560
And then in my render method that's where something new is going on.

10
00:00:38,880 --> 00:00:44,220
So first of all I'm just displaying the names just like usual this that state name but this button below

11
00:00:44,250 --> 00:00:45,970
response user clicks.

12
00:00:45,990 --> 00:00:53,170
So we've added a property here for an On Click event and on click this callback function will run and

13
00:00:53,190 --> 00:00:56,450
inside of this callback function we're invoking set state.

14
00:00:56,580 --> 00:01:01,500
So this is pretty similar to what you've seen before in vanilla javascript where you're attaching callback

15
00:01:01,500 --> 00:01:04,030
events directly to the HMO element.

16
00:01:04,050 --> 00:01:08,020
And this is the correct way to do it and react if you're coming from.

17
00:01:08,130 --> 00:01:13,440
Quarry or something like that where you used to grabbing the element by id and then adding a click event.

18
00:01:13,440 --> 00:01:15,230
All in javascript.

19
00:01:15,230 --> 00:01:17,850
That's that's not something you'll see and react.

20
00:01:17,910 --> 00:01:23,820
So the way to add any type of event is to add it directly to the component that you want to add interaction

21
00:01:23,820 --> 00:01:24,870
to.

22
00:01:24,870 --> 00:01:27,530
Let's take a look at this in the browser.

23
00:01:27,810 --> 00:01:29,660
So I've got that component loaded up here.

24
00:01:29,700 --> 00:01:34,100
You can see I've got my re-act developer tools open and we've got the classic example.

25
00:01:34,230 --> 00:01:36,750
Now when I click uppercase what happens.

26
00:01:36,750 --> 00:01:40,430
Well this on click event is going to get invoked on click.

27
00:01:40,440 --> 00:01:47,460
Remember inside we'll call this set say and change my state at some point in the future set state will

28
00:01:47,460 --> 00:01:48,700
update that state.

29
00:01:48,870 --> 00:01:52,570
So my name will become uppercase Tim instead of lowercase Tim.

30
00:01:52,830 --> 00:01:56,410
And then whenever such state gets invoked render gets invoked again.

31
00:01:56,430 --> 00:02:03,300
So after that said Say call tim will be all uppercase render will run a second time and then will render

32
00:02:03,300 --> 00:02:04,630
the uppercase Tim.

33
00:02:04,740 --> 00:02:05,580
So let's see that.

34
00:02:05,580 --> 00:02:07,470
And you could see here my state changing as well.

35
00:02:07,500 --> 00:02:11,040
Keep your eye on that.

36
00:02:11,100 --> 00:02:17,370
So my state change here to uppercase Tim and then render was called an uppercase Tim was displayed.

37
00:02:17,370 --> 00:02:20,010
Now let's take a look at a similar example.

38
00:02:20,160 --> 00:02:24,020
Except this time rather than put the callback function inline here.

39
00:02:24,120 --> 00:02:28,970
We're going to use a function as part of our class.

40
00:02:29,000 --> 00:02:34,090
So this is pretty much the same example we've got some state that keeps track of my name and there's

41
00:02:34,100 --> 00:02:37,840
a click event down here that gets invoked whenever you click.

42
00:02:38,180 --> 00:02:45,330
But now the differences we make the click handler at a method here so it's not an inline function anymore

43
00:02:45,340 --> 00:02:48,890
it's now a method as part of my class and

44
00:02:54,460 --> 00:02:56,550
and I've also changed the code slightly.

45
00:02:56,790 --> 00:03:01,990
So now instead of just hard coding the name Tim it uppercase is any name that it's got.

46
00:03:02,340 --> 00:03:04,910
So this will work with any name not just him.

47
00:03:04,980 --> 00:03:09,660
And remember this callback function inside of said State is required whenever your new state depends

48
00:03:09,660 --> 00:03:10,820
on your previous state.

49
00:03:11,100 --> 00:03:15,500
So in this case our new state is going to depend on whatever the previous state's name was.

50
00:03:15,630 --> 00:03:17,010
And we're going to uppercase it.

51
00:03:17,100 --> 00:03:21,720
I want to show this example because the pattern that happens a lot and react inside of your component

52
00:03:21,720 --> 00:03:25,290
you'll make some callback handlers here for events.

53
00:03:25,470 --> 00:03:32,250
You'll put those events inside of your GSX using this dot and then the name of your method.

54
00:03:32,430 --> 00:03:35,580
But then the issue becomes when this function gets invoked.

55
00:03:35,730 --> 00:03:38,760
This no longer refers to your component.

56
00:03:38,850 --> 00:03:44,790
Read the context of this will change and in order to prevent that from happening we want to prevent

57
00:03:44,790 --> 00:03:49,290
that because we want this data set state to be referring to our component.

58
00:03:49,890 --> 00:03:52,920
We have to do this in the constructor function.

59
00:03:52,920 --> 00:03:58,950
So inside the constructor we're saying this doc handle klick equals this dot handle clicked up bind

60
00:03:58,950 --> 00:04:00,190
this.

61
00:04:00,210 --> 00:04:06,600
So now whenever handle click is invoked no matter what the context is it'll always be bound to this

62
00:04:07,020 --> 00:04:11,080
and this inside of the constructor is equal to the quick example component.

63
00:04:11,100 --> 00:04:14,930
So no matter what this will be the right this whenever that is invoked.

64
00:04:15,060 --> 00:04:21,870
So this pattern adding this Hanno click equals the start handle clicked that bind this is a very common

65
00:04:21,870 --> 00:04:26,340
one that you'll see throughout our re-act examples where we have to put a lot of callback functions

66
00:04:26,400 --> 00:04:29,820
in the constructor and bind them.

67
00:04:29,820 --> 00:04:32,250
Now let's look at a common mistake that people make.

68
00:04:32,250 --> 00:04:36,420
It's actually just a javascript error but it happens a lot for whatever reason when people are learning

69
00:04:36,420 --> 00:04:39,060
react in this On Click event.

70
00:04:39,060 --> 00:04:46,210
When you add your callback everything looks normal here except there's one issue and that's that here

71
00:04:46,210 --> 00:04:48,510
at the end you've actually invoke the function.

72
00:04:48,580 --> 00:04:50,980
So this will invoke your function right inside the render method.

73
00:04:50,980 --> 00:04:56,530
It won't wait until the on click event happens so that the note down here just says the function will

74
00:04:56,530 --> 00:05:00,580
be invoked immediately not when the event happens not on the event.

75
00:05:00,580 --> 00:05:05,800
So just be aware of that don't accidentally invoke your functions inside of your callback handlers.

76
00:05:08,760 --> 00:05:12,810
One last point I want to make is that there's a bit of a misconception that inline aero functions lead

77
00:05:12,810 --> 00:05:18,040
to a big performance hit versus using the functions that are bound in the constructor.

78
00:05:18,040 --> 00:05:21,590
Now I've never actually done performance test myself so take this with a grain of salt.

79
00:05:21,750 --> 00:05:26,880
But in the Riak docs it seems to indicate that there's no huge performance difference between doing

80
00:05:26,880 --> 00:05:28,030
one of the other.

81
00:05:28,110 --> 00:05:32,500
So feel free to use aero functions or to use bind whatever makes the most sense to you.

82
00:05:32,550 --> 00:05:37,410
I'll usually use aero functions if it's a quick one liner inside of the click handler itself.

83
00:05:37,650 --> 00:05:41,790
But if it's a longer function that has more than one line I'll typically break it out into a separate

84
00:05:42,090 --> 00:05:42,960
function.

85
00:05:43,640 --> 00:05:44,810
Ok that'll do it for events.

86
00:05:44,810 --> 00:05:46,010
Next up is form's.
