1
00:00:00,220 --> 00:00:01,250
Welcome back.

2
00:00:01,590 --> 00:00:07,800
In this video we'll build the map visualization that I showed you earlier in this section in case you

3
00:00:07,800 --> 00:00:08,610
need a reminder.

4
00:00:08,610 --> 00:00:10,550
Here's a quick refresher here.

5
00:00:10,600 --> 00:00:14,760
I've got a map of the world where countries are shaded by population.

6
00:00:14,760 --> 00:00:21,740
I've also got a select element below my nap so that I can adjust the statistic being visualized.

7
00:00:21,820 --> 00:00:23,860
Let's build this project from scratch.

8
00:00:24,190 --> 00:00:31,870
I've got a folder here with an index DML a style that CSSA an app J S and A CXXVI file with data on

9
00:00:31,870 --> 00:00:33,670
countries around the world.

10
00:00:33,940 --> 00:00:40,480
As you can see I've got the name of the country a unique country ID and statistics on population count

11
00:00:40,840 --> 00:00:44,440
Weyand area median age and fertility rate.

12
00:00:44,500 --> 00:00:49,780
These numbers are estimates for 20:17 in order to generate that map.

13
00:00:49,780 --> 00:00:52,110
I also need some type of Jason.

14
00:00:52,190 --> 00:00:56,810
There are a number of ways you can build your own type of sound files from scratch but to keep things

15
00:00:56,810 --> 00:00:59,530
simple I'll just grab an existing typologies on file.

16
00:00:59,530 --> 00:01:01,390
From this you are l.

17
00:01:01,430 --> 00:01:06,200
If you're looking for some Tombo Jaison data I'd always start by searching around to see if you can

18
00:01:06,200 --> 00:01:08,700
find what you need somewhere online.

19
00:01:09,440 --> 00:01:15,650
Let's take care of the HDMI first inside of the body tag I'll place in as Viji as well as my select

20
00:01:15,650 --> 00:01:16,580
element.

21
00:01:16,720 --> 00:01:18,970
I still have these options for population.

22
00:01:19,010 --> 00:01:23,060
Population density median age and fertility rate.

23
00:01:23,060 --> 00:01:27,410
I'll give each one of these elements of value property as well which will be helpful in the javascript's

24
00:01:27,410 --> 00:01:29,170
later on.

25
00:01:29,310 --> 00:01:35,280
After that I need to make sure I load D-3 top with Jaison and my app J.S. next.

26
00:01:35,300 --> 00:01:37,770
I'll add a few quick styles to my style sheet.

27
00:01:37,970 --> 00:01:44,410
I'll center the SPG and select elements and I'll also give every path in my SVGA a thin gray border.

28
00:01:45,740 --> 00:01:49,920
OK let's hop into the app Jay ass and start building our visualization.

29
00:01:49,940 --> 00:01:52,050
I need data from two different sources.

30
00:01:52,100 --> 00:01:54,440
The CXXVI and the top Jaison.

31
00:01:54,650 --> 00:02:00,250
So I'll create a queue and defer both Ajax requests for the CXXVI request.

32
00:02:00,260 --> 00:02:05,200
I'll also pass in a formatter because I'll need to convert my stats into numbers.

33
00:02:05,210 --> 00:02:08,900
I'll also need to calculate the population density to do this.

34
00:02:08,900 --> 00:02:13,580
I'll divide the country's population by its land area.

35
00:02:13,590 --> 00:02:18,420
Now I can wait for these requests to be processed inside of a callback to my wait function.

36
00:02:18,420 --> 00:02:24,340
I'll have access to my map data into my population data first if there's an error I'll throw it.

37
00:02:24,690 --> 00:02:28,560
Otherwise I'll then convert my map data into a valid OJs on format.

38
00:02:28,650 --> 00:02:32,950
So the D-3 can process it using the jeel path helper to convert.

39
00:02:33,000 --> 00:02:38,310
I'll use top J sound feature and I'll store the result of this function call in a variable called geo

40
00:02:38,340 --> 00:02:41,030
data.

41
00:02:41,220 --> 00:02:46,920
Let me throw a debugger inside of this away callback and hop into the console to look at my data.

42
00:02:46,920 --> 00:02:51,620
Unfortunately the original top adjacent file doesn't have much information on the features.

43
00:02:51,750 --> 00:02:55,370
Each one has an ID but the properties object is empty.

44
00:02:55,770 --> 00:03:01,110
Fortunately these IDs are the same as the ones in the C S V file I've built so I can use them to tie

45
00:03:01,110 --> 00:03:05,170
shapes from my top OJs on file to data from my CXXVI.

46
00:03:05,310 --> 00:03:08,710
You may need to do something similar when building your own map visualisations.

47
00:03:08,730 --> 00:03:13,850
If the dhaba adjacent you're using doesn't have much information on the Shape Data.

48
00:03:13,870 --> 00:03:19,230
When I joined my map data to an empty D-3 selection I like my cxxviii did it come along too.

49
00:03:19,600 --> 00:03:25,270
In order to make this happen for each country in my data array I'd like to find a match in my population

50
00:03:25,270 --> 00:03:28,660
data array and combine my two datasets.

51
00:03:28,660 --> 00:03:31,910
There are several ways I could do this for now already.

52
00:03:31,930 --> 00:03:38,330
For each over my population data for each row of data I'll then go into my G.O. data array and filter

53
00:03:38,540 --> 00:03:43,850
so that I can find every element in this array where the ID matches the rows country code.

54
00:03:43,850 --> 00:03:49,160
In most cases this country's array will only have one element in it but regardless of the length.

55
00:03:49,220 --> 00:03:54,680
I'll then loop over each matching country and assign its properties value equal to the row from my population

56
00:03:54,680 --> 00:03:55,520
data array.

57
00:03:57,370 --> 00:04:01,280
If we refresh the page and hop into the console we can see that this worked.

58
00:04:01,420 --> 00:04:06,570
The first country in a data array didn't have a match in the C as we file but most other countries do

59
00:04:07,930 --> 00:04:08,330
next.

60
00:04:08,350 --> 00:04:11,050
Let's get a simple map showing up on the page.

61
00:04:11,140 --> 00:04:14,200
First I'll create variables for my SVGA with the night.

62
00:04:14,410 --> 00:04:17,390
I'll also create a path function using D-3 dodgiest path.

63
00:04:17,590 --> 00:04:20,040
Just like we saw in the previous two videos.

64
00:04:20,320 --> 00:04:26,410
Then I'll update the SPG and create an empty selection by grabbing all elements with a class of country.

65
00:04:26,410 --> 00:04:33,490
After that I'll join my geo data enter append new path elements give them a class of country and use

66
00:04:33,490 --> 00:04:40,160
my path function to set the D attribute see what we're working with while this map doesn't look very

67
00:04:40,160 --> 00:04:45,860
good it's upside down cropped too small and looks pretty distorted.

68
00:04:46,310 --> 00:04:50,220
The way to fix this is to set a projection on our geocache helper.

69
00:04:50,380 --> 00:04:55,220
A projection is just a way to transform spherical geometry onto a plane.

70
00:04:55,520 --> 00:05:00,350
Since we live on a sphere in order to get this map looking decent on the screen we'll need to use a

71
00:05:00,350 --> 00:05:02,260
projection.

72
00:05:02,270 --> 00:05:07,130
There are many different types of map projections that have been used historically and D-3 has support

73
00:05:07,130 --> 00:05:09,780
for many of them from the dots.

74
00:05:09,830 --> 00:05:13,290
You can take a look at many of the built in projections for now.

75
00:05:13,460 --> 00:05:19,770
We'll stick with the Mercator projection which is one of the most commonly used map projections to get

76
00:05:19,770 --> 00:05:20,820
this projection working.

77
00:05:20,850 --> 00:05:27,360
I'll call the three Diageo Mercator and stored in a variable called projection to update my path generator

78
00:05:27,480 --> 00:05:33,120
only to use the projection method the projection method on a path allows you to get the current projection

79
00:05:33,330 --> 00:05:35,690
or set a new projection.

80
00:05:35,780 --> 00:05:41,720
I'll pass my new projection into the projection method on my path generator and save now and I refresh

81
00:05:41,810 --> 00:05:42,960
things look a little better.

82
00:05:43,090 --> 00:05:46,670
So the map is now a little too big and off center.

83
00:05:46,790 --> 00:05:51,290
Fortunately once you have a projection you can scale and translate it using the scale and translate

84
00:05:51,290 --> 00:05:52,220
methods.

85
00:05:52,580 --> 00:05:54,350
These methods do what you'd expect.

86
00:05:54,380 --> 00:06:00,200
They scale and translate a projection based on the values you pass and scale takes a single parameter

87
00:06:00,200 --> 00:06:01,750
while translate takes an array.

88
00:06:01,940 --> 00:06:08,090
One for the x direction and one for the Y getting the map shifted into the right location can take some

89
00:06:08,090 --> 00:06:09,260
guess and check.

90
00:06:09,290 --> 00:06:11,440
Here are the values Olly's.

91
00:06:11,510 --> 00:06:13,970
Now when I refresh the page things look pretty good.

92
00:06:15,060 --> 00:06:20,360
Next let's get the colors working to do this first or the select element in a variable.

93
00:06:20,670 --> 00:06:23,040
Next on change events from my selection.

94
00:06:23,040 --> 00:06:26,790
I'd like to update colors for the map based on the event target value.

95
00:06:26,790 --> 00:06:33,630
This is why I gave each option a value earlier to update colors or write a function called set color.

96
00:06:33,630 --> 00:06:38,640
It'll take in an argument of how and inside of the body I want to select every country and update the

97
00:06:38,640 --> 00:06:40,080
fill of each country.

98
00:06:40,410 --> 00:06:44,280
I'll transition the update as well and give my transition a few settings.

99
00:06:46,190 --> 00:06:51,440
So how can I update my fill I'll need a color scale but the colors I'll be using depend on the value

100
00:06:51,440 --> 00:06:52,940
from the select.

101
00:06:52,940 --> 00:06:57,920
To implement this at the top of the function I'll create an object that converts all four possible values

102
00:06:58,010 --> 00:07:03,530
into a different color scale as we saw in the demo population goes from white to purple.

103
00:07:03,560 --> 00:07:05,640
Density goes from white to red.

104
00:07:05,660 --> 00:07:10,330
Median age goes from white to black and fertility rate goes from black to orange.

105
00:07:11,590 --> 00:07:14,770
Given this color range object I can now create a scale.

106
00:07:14,920 --> 00:07:16,800
I always use scale linear.

107
00:07:16,890 --> 00:07:21,700
The domain will go from zero to whatever the maximum is for the current value and the range will be

108
00:07:21,700 --> 00:07:25,110
the color range for the value OK.

109
00:07:25,120 --> 00:07:30,940
Now I need to do is figure out what to put inside of the outer callback first only to go into the properties

110
00:07:30,940 --> 00:07:33,570
key for each country and grab the relevant data.

111
00:07:33,910 --> 00:07:37,570
If that data exists I can just pass it into my scale.

112
00:07:37,570 --> 00:07:42,910
If not if that country doesn't have any data for instance I'll just give the country a light gray color

113
00:07:42,910 --> 00:07:46,460
to indicate that there is no data present.

114
00:07:46,500 --> 00:07:52,880
Let's save and refresh the select is working but on initial page load the map is still colored incorrectly.

115
00:07:52,980 --> 00:07:57,870
To fix this I just need to hop into the javascript and initially call set color with the first value

116
00:07:57,870 --> 00:07:59,940
of the select.

117
00:08:00,070 --> 00:08:01,380
Let's try that again.

118
00:08:01,840 --> 00:08:02,510
Great.

119
00:08:02,590 --> 00:08:06,960
We built our first map and in fewer than 100 lines of javascript.

120
00:08:07,210 --> 00:08:10,200
I hope you found this helpful in the next few videos.

121
00:08:10,210 --> 00:08:15,200
We'll change gears a bit and talking about our last graph type force directed graphs.

122
00:08:15,220 --> 00:08:16,870
I'll see you in the next video.
