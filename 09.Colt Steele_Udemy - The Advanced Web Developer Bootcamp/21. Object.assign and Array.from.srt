1
00:00:01,380 --> 00:00:02,370
Welcome back.

2
00:00:02,370 --> 00:00:07,800
In this video we're going to be going over a few useful object and Array methods that yes 2015 gives

3
00:00:07,800 --> 00:00:14,310
us a common problem you may encounter and Javascript is dealing with making copies of objects because

4
00:00:14,310 --> 00:00:16,740
we can't simply assign one to another.

5
00:00:16,740 --> 00:00:18,330
Let's see what happens if we do that.

6
00:00:19,150 --> 00:00:24,560
Or make an object called over and give it a key of name and a value of L.D..

7
00:00:24,560 --> 00:00:29,360
Now make a new variable 0 2 and assign it to the 0 object.

8
00:00:29,360 --> 00:00:33,590
Now let's change the name property on the O2 object and set it to the string.

9
00:00:33,600 --> 00:00:39,200
Tim if we take a look at our original variable we can see the name has changed.

10
00:00:39,260 --> 00:00:44,390
That's because when we assign one object to another we are just assigning a reference and not creating

11
00:00:44,450 --> 00:00:46,140
a brand new object.

12
00:00:46,220 --> 00:00:52,400
Thankfully as 2015 gives us a really easy way to create objects using the object that assign method

13
00:00:52,970 --> 00:00:58,820
object that assign accepts a series of objects and will return a new object with the keys and values

14
00:00:58,880 --> 00:01:01,090
for all the objects passed to it.

15
00:01:01,100 --> 00:01:06,380
It's important to note that if you don't start with an empty object object outside will still keep a

16
00:01:06,380 --> 00:01:09,450
reference to another object included in it.

17
00:01:09,470 --> 00:01:15,070
So if you want to make a copy without a reference Be sure to put in an empty object as the first parameter.

18
00:01:15,080 --> 00:01:21,530
The object assigned another gotcha with object or a sign is that it does not create a deep clone.

19
00:01:21,830 --> 00:01:27,440
So if there are objects inside of the object that you're copying those references will still be there.

20
00:01:27,550 --> 00:01:33,600
You can see here that the instructor's key in our object O can still be changed from the 0 to variable.

21
00:01:33,890 --> 00:01:38,600
If you need a deep clone you can write your own function or use different data structures or popular

22
00:01:38,660 --> 00:01:40,560
libraries like load ASH.

23
00:01:40,670 --> 00:01:44,920
You will see object out assign quite a bit with libraries like react and redux.

24
00:01:44,960 --> 00:01:47,270
So it's a very helpful method to know.

25
00:01:47,270 --> 00:01:52,910
Now let's take a look at another useful method that as 2015 gives us called a radar from which allows

26
00:01:52,910 --> 00:01:56,940
us to easily convert an array like object into an array.

27
00:01:56,960 --> 00:02:01,270
You might be wondering what an array like object is and you've actually seen quite a few of them.

28
00:02:01,310 --> 00:02:07,430
When you use methods like document that get elements by tag name or document that query after all or

29
00:02:07,430 --> 00:02:12,860
when you use J query to select elements from the DOM or use the arguments keyword.

30
00:02:12,860 --> 00:02:17,440
What is returned to you looks like an array but it does not have all of the array methods like.

31
00:02:17,450 --> 00:02:17,900
Push.

32
00:02:17,900 --> 00:02:20,720
Pop slice for each map and so on.

33
00:02:21,050 --> 00:02:22,660
Let's see what we mean by that.

34
00:02:22,670 --> 00:02:27,860
Here we have a variable called divs which is the result of getting all the divs on the page.

35
00:02:27,860 --> 00:02:33,440
If we try to access the reduce method on it we get undefined because the divs variable is not actually

36
00:02:33,470 --> 00:02:34,220
an array.

37
00:02:34,220 --> 00:02:38,880
It's an array like object to convert this object into an array.

38
00:02:38,890 --> 00:02:43,660
We use the slice method along with the call method so that we could set the target of what we want to

39
00:02:43,660 --> 00:02:46,200
slice as the array like object.

40
00:02:46,240 --> 00:02:51,580
Once we do that we can access Array methods on the converted array like object.

41
00:02:51,580 --> 00:02:57,610
Although that code works it's a bit complex and as 2015 gives us an easier way to do that with a radar

42
00:02:57,640 --> 00:02:58,720
from.

43
00:02:58,720 --> 00:03:02,920
Notice that the from method is invoked directly on the array function.

44
00:03:02,920 --> 00:03:09,360
This is another example of a static method array up from accepts of value and converts it into an array.

45
00:03:09,360 --> 00:03:15,430
If possible a tradeoff from works with strings maps sets an array like objects.

46
00:03:15,460 --> 00:03:21,190
Here we can easily convert an array like object and in the second example we can convert a set into

47
00:03:21,190 --> 00:03:21,990
an array.

48
00:03:22,330 --> 00:03:26,860
You'll find yourself doing this if you need to remove duplicates but then want an array return to it

49
00:03:27,620 --> 00:03:32,790
in the next video we're going to discuss a few more useful methods that yes 20:15 gives us the event.
