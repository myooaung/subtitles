WEBVTT
1
00:00:00.240 --> 00:00:00.570
All right.

2
00:00:00.570 --> 00:00:01.470
Welcome back.

3
00:00:01.470 --> 00:00:06.540
So the next thing we're going to do is take the data that's coming from the API that we've loaded into

4
00:00:06.540 --> 00:00:12.210
the state and we're going to render a bunch of to do items which are a component we have yet to define.

5
00:00:12.390 --> 00:00:18.760
So for each to do we'll have to do item and that to do item is not only going to display the text of

6
00:00:18.760 --> 00:00:23.110
that to do but it will also correctly show the status of the to do if it's done or not.

7
00:00:23.430 --> 00:00:29.580
And then later on we'll also add the functionality for the delete button and the ability to complete

8
00:00:29.580 --> 00:00:32.800
it or uncompleted and check it off essentially.

9
00:00:33.130 --> 00:00:36.840
But for now we're just going to get them to show up and I should mention we're not really going to worry

10
00:00:36.840 --> 00:00:38.190
about styling right now.

11
00:00:38.220 --> 00:00:39.470
We'll tackle that at the end.

12
00:00:39.720 --> 00:00:44.500
So let's head over to Claudina on the first thing I'll do is make a new file.

13
00:00:44.730 --> 00:00:47.160
So this file I will call to do.

14
00:00:47.150 --> 00:00:48.610
Item j Yes.

15
00:00:48.630 --> 00:00:50.110
You could also just do to do that.

16
00:00:50.160 --> 00:00:52.410
Yes.

17
00:00:52.500 --> 00:00:57.760
And in here I'll just copy this over import react.

18
00:00:58.230 --> 00:01:02.280
Then we're going to define to do item has a functional stateless component.

19
00:01:02.280 --> 00:01:10.590
So we're going to do Konst to do item equals and again we're doing this because to do items really simple

20
00:01:10.950 --> 00:01:12.630
it's there's no state involved.

21
00:01:12.810 --> 00:01:19.920
It's pretty straightforward it's really just going to render an ally with some text add a style for

22
00:01:19.980 --> 00:01:21.340
the strikethrough.

23
00:01:21.600 --> 00:01:23.330
And that's pretty much it.

24
00:01:23.440 --> 00:01:29.560
It's going to do to do item and go with name which is the data that's coming in

25
00:01:32.390 --> 00:01:46.030
and then inside of this will just return an ally and inside that I will just add name.

26
00:01:47.230 --> 00:01:55.150
So the idea here is that we're going to map through in our to do list this stuff state out to use for

27
00:01:55.150 --> 00:01:59.770
each one are going to create a tool to do item are going to pass through the name.

28
00:01:59.830 --> 00:02:03.850
Basically the text to do and print it out in an ally.

29
00:02:03.910 --> 00:02:05.740
And that's pretty much it.

30
00:02:05.740 --> 00:02:13.950
So the bottom need to export the fault to do item just like that.

31
00:02:13.960 --> 00:02:19.880
Now let's go over to our to do list and actually do something with those with our new component.

32
00:02:20.200 --> 00:02:32.560
So down here in render I'm going to add in Konst dues equals this state DOT to use dot map and we'll

33
00:02:32.560 --> 00:02:33.770
just call each one T

34
00:02:36.980 --> 00:02:40.910
and then and here we're going to define a to do item

35
00:02:45.340 --> 00:02:51.290
do it on two lines because we have a couple things we care about we need to pass in key.

36
00:02:51.660 --> 00:02:59.460
And normally we would add an index here and we would set the key to be that index but our data already

37
00:02:59.460 --> 00:03:01.050
has unique IDs.

38
00:03:01.050 --> 00:03:12.000
If we go into dev tools here and go into react and then to do list and state you can see that each one

39
00:03:12.000 --> 00:03:16.260
already has this underscore id property which is a unique ID and that's all we need.

40
00:03:16.260 --> 00:03:20.250
Actually much better to use that compared to using an index.

41
00:03:20.250 --> 00:03:23.390
Actually I think react will warn you if you try and use an index anyway.

42
00:03:24.090 --> 00:03:33.470
So we're going to use the implicit key he calls a T Dot underscore ID and then everything else.

43
00:03:36.030 --> 00:03:37.710
We'll pass on through.

44
00:03:38.130 --> 00:03:42.900
And we need one more of those for that to be correct and that should be it.

45
00:03:42.920 --> 00:03:47.250
And I just need to add my friend here and there.

46
00:03:47.300 --> 00:03:51.050
Now it should be good except we haven't required to do item.

47
00:03:51.080 --> 00:03:53.870
So appear just going to do that now.

48
00:03:54.110 --> 00:04:00.470
So we will import to do item from that Slash to do item

49
00:04:04.560 --> 00:04:05.160
OK.

50
00:04:05.240 --> 00:04:08.640
Do you see that deuce is assigned to but we're never using it.

51
00:04:08.960 --> 00:04:12.580
And that's because down here we have our To Do list.

52
00:04:12.580 --> 00:04:15.370
We now need to render our to do.

53
00:04:15.560 --> 00:04:22.430
So this is an array and we're going to add that in there we get another warning now or an error this

54
00:04:22.430 --> 00:04:25.840
time because remember we can only return one element.

55
00:04:26.060 --> 00:04:28.100
And so I need to wrap this all in.

56
00:04:28.160 --> 00:04:30.760
Let's do a div.

57
00:04:31.040 --> 00:04:32.640
Any element of our choice.

58
00:04:33.020 --> 00:04:35.210
Or we could do it well as well.

59
00:04:35.960 --> 00:04:40.640
So maybe I'll wrap the whole thing in a div and then I'll put it to use inside of a

60
00:04:46.940 --> 00:04:49.070
and a bit more.

61
00:04:49.870 --> 00:04:50.200
OK.

62
00:04:50.260 --> 00:04:56.440
So we're returning one item a div we have each one and then unordered list inside of it with all of

63
00:04:56.440 --> 00:04:57.540
our tattoos.

64
00:04:57.580 --> 00:05:03.610
Each one is said to do item and all we're doing the to do item is displaying the name instead of an

65
00:05:03.610 --> 00:05:04.220
outline.

66
00:05:04.450 --> 00:05:06.750
Also we can get rid of this component.

67
00:05:06.830 --> 00:05:08.500
I just copy that over.

68
00:05:08.500 --> 00:05:12.810
We're not using that anymore because we're making this stateless so we should be good.

69
00:05:13.090 --> 00:05:14.620
Let's see what happens.

70
00:05:14.770 --> 00:05:15.640
Refresh the page.

71
00:05:15.680 --> 00:05:21.640
You don't even need to refresh to create re-act up and our tattoos are here for you open up the re-active

72
00:05:21.660 --> 00:05:22.760
tools.

73
00:05:22.810 --> 00:05:23.790
We have our app.

74
00:05:24.010 --> 00:05:26.940
We've got our to do list instead of a To Do list.

75
00:05:27.050 --> 00:05:34.240
All we have for each one UL and then each to do item and each item has the keys to that unique ID and

76
00:05:34.240 --> 00:05:38.260
then all the other properties are name created date and completed.

77
00:05:38.260 --> 00:05:41.280
Right now completed if set to false on all of them.

78
00:05:41.290 --> 00:05:45.200
So if we try and display that we actually wouldn't see anything.

79
00:05:45.310 --> 00:05:48.300
Once we have that code in because none of them are completed.

80
00:05:48.340 --> 00:05:55.740
So what I'm going to do is actually go over here to 80 81 to the actual to do list app from the beginning.

81
00:05:55.990 --> 00:05:59.060
And I'm just going to check a couple of them off.

82
00:05:59.200 --> 00:06:06.820
So now I refresh my app here and we look at our data again you can see that some of them have completed

83
00:06:06.820 --> 00:06:09.490
set to True but they're not reflecting that.

84
00:06:09.490 --> 00:06:13.100
So the last thing that we'll do is get that to work.

85
00:06:13.330 --> 00:06:17.500
The ones that are completed should have a strikethrough going through them line through whatever it's

86
00:06:17.500 --> 00:06:17.960
called.

87
00:06:18.010 --> 00:06:19.390
They should be checked off.

88
00:06:19.480 --> 00:06:24.330
We could change the color but we're just going to start really simple go back to our to do item component

89
00:06:24.950 --> 00:06:30.260
and all we need to do inside this high in the opening tag.

90
00:06:30.550 --> 00:06:40.120
We're going to add style equals and we'll do this conditionally like this and we'll just set text decoration

91
00:06:42.820 --> 00:06:50.260
completed if it is completed we'll add a line through can not spell.

92
00:06:50.620 --> 00:06:53.520
And if it's not completed will it not.

93
00:06:53.560 --> 00:06:57.670
There's a problem of course because right now completed is not defined.

94
00:06:57.820 --> 00:07:03.710
So appear we just add in completed and there we go.

95
00:07:04.060 --> 00:07:11.350
So for each ally we're going to add a style text decoration is either going to be line through or none

96
00:07:11.410 --> 00:07:15.090
depending on if completed is true or false.

97
00:07:15.100 --> 00:07:17.070
So let's take a look now.

98
00:07:17.200 --> 00:07:18.850
There we go.

99
00:07:18.850 --> 00:07:21.460
Things are completed have that strikethrough.

100
00:07:21.610 --> 00:07:26.590
So I could go back here to my app and check them all off.

101
00:07:26.590 --> 00:07:29.470
Refresh the page and they're all completed.

102
00:07:29.530 --> 00:07:35.020
Now we don't have the functionality working to undo that or to actually affect change here because that

103
00:07:35.020 --> 00:07:38.910
requires then also sending an API call off to our API.

104
00:07:39.040 --> 00:07:40.370
So that's coming up soon.

105
00:07:40.540 --> 00:07:42.600
But next are actually going to work on the form.

106
00:07:42.880 --> 00:07:47.120
So just to recap this video we kind of did a lot created hard to do that component.

107
00:07:47.590 --> 00:07:53.960
We passed through a bunch of data but we're using the name and the completed style it conditionally.

108
00:07:54.040 --> 00:08:00.640
And then instead of to do list we create this to do array and to add render kind of a standard pattern.

109
00:08:00.760 --> 00:08:05.650
We map over this data state that to do is she loaded up here load to do.

110
00:08:05.650 --> 00:08:11.890
We did a fetch and we're parsing it and then setting the state and we're using that down here to make

111
00:08:11.890 --> 00:08:15.710
it array of to do items which are then rendering here.

112
00:08:15.820 --> 00:08:16.710
All right.

113
00:08:16.810 --> 00:08:17.530
We made it.

114
00:08:17.530 --> 00:08:19.220
Next up let's get the form working.
