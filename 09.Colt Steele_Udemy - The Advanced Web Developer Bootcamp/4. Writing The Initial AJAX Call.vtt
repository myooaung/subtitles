WEBVTT
1
00:00:00.180 --> 00:00:00.650
OK.

2
00:00:00.810 --> 00:00:05.150
So we have everything set up so that we can actually start writing or single page app code.

3
00:00:05.190 --> 00:00:09.710
We can make our first request and what we're going to do is when the page loads.

4
00:00:09.720 --> 00:00:15.620
So when I hit refresh here get rid of that obnoxious alert we want to go get everything from the database.

5
00:00:15.690 --> 00:00:23.710
We're going to request slash API slash to Due's using Jay query will use get Jaison dollar sign get

6
00:00:23.730 --> 00:00:28.920
Jay song will give us these results or whatever's in our database and then we're going to loop through

7
00:00:28.920 --> 00:00:33.400
them and insert a new list item for each one of those.

8
00:00:33.600 --> 00:00:36.510
So that when we refresh the page we get the most recent data.

9
00:00:36.570 --> 00:00:42.050
So it is single page functionality even though it will look the same to a user as a non-single page

10
00:00:42.050 --> 00:00:44.280
up because we're refreshing the page.

11
00:00:44.310 --> 00:00:45.170
The data shows up.

12
00:00:45.210 --> 00:00:49.620
That's pretty standard but then we'll get to creating updating and deleting which are things you can

13
00:00:49.620 --> 00:00:54.320
only do with a single page app with Ajax if you want it to happen without a page refresh.

14
00:00:54.700 --> 00:00:57.160
OK let's go over here and in our app.

15
00:00:57.190 --> 00:00:58.250
Yes.

16
00:00:58.320 --> 00:01:03.130
The first thing I'm going to do is just add a document ready.

17
00:01:03.330 --> 00:01:08.940
So if you're not familiar with this this is a query function that any code we put in here will wait

18
00:01:08.940 --> 00:01:12.180
to run until the Dom has loaded.

19
00:01:12.210 --> 00:01:13.620
So what I can put everything in here.

20
00:01:13.740 --> 00:01:19.140
But we want to put things like going and fetching the data we want to wait until the DOM is ready so

21
00:01:19.140 --> 00:01:21.980
that we have something to insert the data into.

22
00:01:21.990 --> 00:01:27.390
So technically we'd probably be fine without it because it's going to take a little bit to fetch the

23
00:01:27.390 --> 00:01:33.260
data and bring it back compared to our Dom getting ready but it's still good practice to wait.

24
00:01:33.270 --> 00:01:36.030
Also code 9 does not like our dollar sign.

25
00:01:36.030 --> 00:01:37.670
It's just a splinter.

26
00:01:37.740 --> 00:01:42.890
That's basically not recognizing where we define dollar sign because we did it in another file.

27
00:01:43.020 --> 00:01:46.120
If that bothers you you can turn it off.

28
00:01:46.320 --> 00:01:53.970
You can add this if you see in this tool tip add a global dollar sign at the top so we can do that slash

29
00:01:54.360 --> 00:01:57.580
asterisk or global.

30
00:01:57.750 --> 00:02:00.960
And then dollar sign and it goes away.

31
00:02:00.960 --> 00:02:02.320
So not necessary.

32
00:02:02.460 --> 00:02:07.160
I hesitate to keep it here because people will assume that it's doing something magical for our code.

33
00:02:07.170 --> 00:02:10.270
It's just for the cloud nine Lanting anyway.

34
00:02:10.380 --> 00:02:16.210
So what we want to do when the downloads we want to go request that you are will slash API slash to

35
00:02:16.300 --> 00:02:24.300
do's and the way that we do that from here is we're going to request slash API slash to because remember

36
00:02:24.990 --> 00:02:27.280
we're already on this path right here.

37
00:02:27.300 --> 00:02:29.220
So let me copy that overseed you can see it.

38
00:02:29.220 --> 00:02:31.340
This is where our code is running from.

39
00:02:31.350 --> 00:02:32.560
So all we need to do.

40
00:02:32.610 --> 00:02:37.450
And of course your you IRL here will be different but all we need to add on is the slash API slash to

41
00:02:37.450 --> 00:02:37.730
do.

42
00:02:37.770 --> 00:02:39.240
It's a relative path.

43
00:02:39.240 --> 00:02:40.850
We're requesting our own server.

44
00:02:41.190 --> 00:02:45.300
So we'll do a dollar sign I get Jaison because we're getting JSA on.

45
00:02:45.330 --> 00:02:48.790
So why not use the shortcut then.

46
00:02:49.140 --> 00:02:50.140
And what will we do.

47
00:02:50.310 --> 00:02:53.000
Well let's just start by looking at our data.

48
00:02:53.310 --> 00:02:57.860
So we're going to constantly log data and just leave it at that.

49
00:02:58.170 --> 00:03:05.610
So page loads d'armes ready send a request get request to slash API slash traduce get the data back.

50
00:03:05.670 --> 00:03:06.720
We assume it's going to work.

51
00:03:06.720 --> 00:03:08.330
We don't have a catch or anything yet.

52
00:03:08.550 --> 00:03:09.840
And then we'll print the data.

53
00:03:10.080 --> 00:03:12.510
So let's see what happens save.

54
00:03:12.840 --> 00:03:18.750
So if we open up our console and refresh the page you'll see depending on what you have in your database

55
00:03:19.200 --> 00:03:23.970
which hopefully you have something to look at if you don't send a couple of post requests get some data

56
00:03:23.970 --> 00:03:24.810
in there.

57
00:03:24.810 --> 00:03:28.170
I have for three of them are byde she is one of them by car.

58
00:03:28.170 --> 00:03:28.860
That's OK.

59
00:03:29.010 --> 00:03:30.860
We'll get some more interesting data in there.

60
00:03:31.170 --> 00:03:32.640
So I've got four of them coming back.

61
00:03:32.640 --> 00:03:36.300
We're making our first successful request to our own API.

62
00:03:36.840 --> 00:03:39.430
So now the question is what do we do with them.

63
00:03:39.600 --> 00:03:41.370
How do we add them to the page.

64
00:03:41.850 --> 00:03:43.380
And if you go to our app.

65
00:03:43.410 --> 00:03:44.440
Yes.

66
00:03:44.520 --> 00:03:49.980
Rather than doing it all in here I'm going to define a separate function down here and I'm just going

67
00:03:49.980 --> 00:04:01.310
to call it ad to deuce and it's going to take in that array of to do's and then we will add to use to

68
00:04:01.310 --> 00:04:01.870
the page

69
00:04:04.550 --> 00:04:08.570
so up here and to keep my get Jaison really quick and short.

70
00:04:08.570 --> 00:04:15.240
So then and we're just going to add to do.

71
00:04:15.540 --> 00:04:19.210
So we're not going to worry too much about handling errors in this example.

72
00:04:19.440 --> 00:04:24.060
But of course you can just add on your dumb catch and handle your error however you want if you want

73
00:04:24.060 --> 00:04:25.500
to alert the user.

74
00:04:25.620 --> 00:04:29.080
You want to update a display on the page whatever you want to do.

75
00:04:29.280 --> 00:04:35.230
So in add to do's the real thing that we want to do is loop through each to do remember it in an array.

76
00:04:35.670 --> 00:04:42.840
And at the beginning at least we want to take the name and just append that to the page as a list item

77
00:04:42.930 --> 00:04:44.570
and ally.

78
00:04:44.640 --> 00:04:50.510
So we're going to go back here and well I'm going to leave that comment is loop through.

79
00:04:50.700 --> 00:04:56.300
So that's going to be to use before I forget I can change my spaces here as well.

80
00:04:56.350 --> 00:04:59.980
Tu's bothers me when that gets out of hand.

81
00:05:00.100 --> 00:05:02.790
OK to use dot for each

82
00:05:06.390 --> 00:05:09.630
so for each single to do what are we going to do.

83
00:05:09.780 --> 00:05:19.260
Well we're going to take that to do dot name and we could just cancel that log that make sure that works

84
00:05:20.330 --> 00:05:22.410
and every go we only see two things.

85
00:05:22.410 --> 00:05:29.400
In my case because Chrome is consolidating the first three but it's printing out three different things.

86
00:05:29.400 --> 00:05:29.940
Perfect.

87
00:05:29.940 --> 00:05:34.180
So rather than doing that we're going to want to make a new ally.

88
00:05:34.200 --> 00:05:40.080
So I'm going to make a variable was going to call it new to do equals and I'll do dollar sign for not

89
00:05:40.080 --> 00:05:47.190
super familiar with Jay queery some of this might be new but I'm going to lie and then I'm going to

90
00:05:47.220 --> 00:05:56.180
add in to dot name and then I'll add in the closing ally like that.

91
00:05:56.180 --> 00:06:04.430
So this just makes us an allied tag and then I'm going to append that to our page and more specifically

92
00:06:04.670 --> 00:06:07.730
append it to our UL with the class of list.

93
00:06:07.730 --> 00:06:16.640
So I'm just going to do a dollar sign atlast to select that you will append new to do.

94
00:06:17.690 --> 00:06:18.350
OK.

95
00:06:18.620 --> 00:06:20.030
So that's our new to do.

96
00:06:20.030 --> 00:06:24.820
We are creating it here as an ally and then we're appending it to the list for each thing in our to

97
00:06:24.860 --> 00:06:29.230
do's array which is coming from our get Jason which is calling add to do.

98
00:06:29.420 --> 00:06:32.870
Let's test it refresh our page.

99
00:06:32.870 --> 00:06:33.980
Perfect.

100
00:06:33.980 --> 00:06:34.960
Take a look at that.

101
00:06:35.000 --> 00:06:37.030
We're getting our views here.

102
00:06:37.030 --> 00:06:38.670
So they're untitled.

103
00:06:38.780 --> 00:06:43.720
So the last thing that we can do is actually add a class defined it down here.

104
00:06:43.790 --> 00:06:45.890
There's a class called task.

105
00:06:46.010 --> 00:06:54.620
There we go that task and we can do it a couple of ways you could do new to do that add class and then

106
00:06:54.620 --> 00:07:00.120
give it task or we could just do this because this line is not super long.

107
00:07:00.190 --> 00:07:06.710
We'll just added in here we just have to pay attention to using double quotes versus single quotes.

108
00:07:06.720 --> 00:07:08.030
OK let's test it out.

109
00:07:08.030 --> 00:07:09.560
Refresh the page.

110
00:07:09.560 --> 00:07:10.410
There we go.

111
00:07:10.430 --> 00:07:16.980
So we get to this little hover effect and we're not completely done with what we need to actually insert.

112
00:07:17.120 --> 00:07:18.690
But we're done for now with this video.

113
00:07:18.770 --> 00:07:21.390
But as you can see we don't have a delete button showing up yet.

114
00:07:21.530 --> 00:07:22.700
We want that to happen.

115
00:07:22.730 --> 00:07:26.800
So when we insert a new to do there should be a delete button for each one.

116
00:07:26.900 --> 00:07:28.090
That's part of the slide.

117
00:07:28.190 --> 00:07:32.550
So eventually in here they'll also be a button but we're not there yet.

118
00:07:32.570 --> 00:07:39.230
So what we've done is we wrote get Jason to go fetch all of the current Tadeusz using our API then we

119
00:07:39.230 --> 00:07:45.430
loop through them in AD to use code and for each one we make a new ally with the class task with you

120
00:07:45.440 --> 00:07:47.370
to do that name.

121
00:07:47.390 --> 00:07:48.560
And then we append it.

122
00:07:48.710 --> 00:07:49.570
So we'll end it there.

123
00:07:49.610 --> 00:07:55.400
The next thing we want to do is get the dues to reflect their current state their completion.

124
00:07:55.400 --> 00:08:01.100
If they're done or not appropriately so that if some of these are done they appear checked off when

125
00:08:01.100 --> 00:08:02.110
the page loads.

126
00:08:02.280 --> 00:08:03.160
So that's next.
