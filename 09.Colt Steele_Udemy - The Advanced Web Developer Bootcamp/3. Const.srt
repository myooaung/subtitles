1
00:00:00,210 --> 00:00:01,000
Welcome back.

2
00:00:01,140 --> 00:00:08,130
In this video we're going to be introducing a new keyword that 2015 gives us Konst this keyword is an

3
00:00:08,130 --> 00:00:11,670
alternative to the VAR keyword for declaring variables.

4
00:00:11,880 --> 00:00:17,390
The keyword allows us to create constants or values which can not be redeclare.

5
00:00:17,700 --> 00:00:18,750
Let's see what that looks like.

6
00:00:18,750 --> 00:00:22,280
By comparing and contrasting Konst with the VAR keyword.

7
00:00:22,410 --> 00:00:27,450
I'm going to open up the crumbed tools and create a variable called first instructor and assign it to

8
00:00:27,450 --> 00:00:28,860
the string cult.

9
00:00:28,910 --> 00:00:32,400
I'll then change its value to Ellie and that works fine.

10
00:00:32,400 --> 00:00:34,570
Let's now see what Konst looks like.

11
00:00:34,590 --> 00:00:38,220
I'll create a variable called another instructor and assign it to the string.

12
00:00:38,220 --> 00:00:44,250
Tim if I try to redefine this variable I will get a type are telling me that there is assignment to

13
00:00:44,250 --> 00:00:50,720
a constant variable and if I try to reuse the keyword for the same variable I'll get a syntax error.

14
00:00:50,730 --> 00:00:56,420
The rule with the Konski word is that we can never redeclare a variable by the same name.

15
00:00:56,460 --> 00:00:58,470
There is a bit of a gotcha with conc though.

16
00:00:58,650 --> 00:01:03,010
Let's see what happens when we assign the value of a constant to be an array.

17
00:01:03,020 --> 00:01:08,180
I'm going to make a variable using the Konski word called numbers and assign it to an array with four

18
00:01:08,180 --> 00:01:09,980
numbers in it.

19
00:01:09,980 --> 00:01:14,310
Now I'm going to add another number to the end of the array using the push method.

20
00:01:14,390 --> 00:01:18,170
Since this variable is a constant Do you think I'll be able to do this.

21
00:01:18,170 --> 00:01:19,860
The answer is actually yes.

22
00:01:19,970 --> 00:01:24,290
We can still change the value of an array or object even if it is assigned.

23
00:01:24,320 --> 00:01:29,540
Using the Konst cured be mindful of this even when you are using the cons keyword.

24
00:01:29,540 --> 00:01:32,790
You are not able to change the value of primitives.

25
00:01:32,810 --> 00:01:38,900
These include strings numbers booleans no undefined and a new primitive called symbol.

26
00:01:39,150 --> 00:01:45,010
But when you are working with an object you can actually change the value of a constant Konst is very

27
00:01:45,010 --> 00:01:50,010
useful when you want to explicitly declare variables that should never be read declared.

28
00:01:50,200 --> 00:01:54,760
Even if you're able to change the value you're still forbidden from creating a new variable with the

29
00:01:54,760 --> 00:02:01,270
same name which is useful for variables that you only want declared once Konst however does not stop

30
00:02:01,270 --> 00:02:03,140
an object from being modified.

31
00:02:03,370 --> 00:02:07,560
When we talk about data that cannot be changed we call that data immutable.

32
00:02:07,900 --> 00:02:14,380
Remember constant does not make objects immutable in the next video will introduce a new keyword that

33
00:02:14,380 --> 00:02:17,130
as 20:15 gives us to declare variables.

34
00:02:17,200 --> 00:02:21,520
The let keyword and will introduce a whole new kind of scope in javascript.

35
00:02:21,520 --> 00:02:22,220
See you there.
