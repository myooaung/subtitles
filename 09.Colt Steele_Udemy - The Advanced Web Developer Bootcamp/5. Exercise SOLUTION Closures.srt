1
00:00:01,080 --> 00:00:01,950
Welcome back.

2
00:00:01,950 --> 00:00:07,470
In this video we're going to be going over solutions to the closures exercises for our first function

3
00:00:07,470 --> 00:00:08,880
special multiply.

4
00:00:08,880 --> 00:00:14,550
We're going to pass in two parameters A&amp;E And first we'll check to see if only one argument has been

5
00:00:14,550 --> 00:00:18,320
passed to this function using the arguments array like object.

6
00:00:18,630 --> 00:00:23,790
If only one parameter has been passed to this function we're going to return a new function with a single

7
00:00:23,790 --> 00:00:26,920
parameter b inside of this inner function.

8
00:00:26,940 --> 00:00:29,870
We'll make use of closure and return times b.

9
00:00:30,270 --> 00:00:35,820
Closure exists here because the parameter A is part of the special multiply function which has returned

10
00:00:36,060 --> 00:00:38,550
by the time our inner function is using it.

11
00:00:38,640 --> 00:00:44,400
If we pass more than one parameter to this function we should just return a times b for our second function.

12
00:00:44,400 --> 00:00:45,220
Guessing game.

13
00:00:45,360 --> 00:00:47,470
We're going to declare a couple variables.

14
00:00:47,580 --> 00:00:53,310
The first will be an answer which is going to be a random number between 0 and that we can do this using

15
00:00:53,310 --> 00:00:59,290
math stuff floor and math at random to find that number will then initialize another variable called

16
00:00:59,310 --> 00:01:06,000
guess's and assign that to zero and then initialize a variable called completed and set that to false.

17
00:01:06,000 --> 00:01:11,100
All of these variables will be used inside of an inner function and by the time that that inner function

18
00:01:11,100 --> 00:01:16,540
is run the outer function will have returned inside of the inner function that we return.

19
00:01:16,770 --> 00:01:20,850
Well except a parameter called Guess which will be some user input.

20
00:01:20,880 --> 00:01:25,200
The first thing we're going to do is make sure that if completed is false we will continue.

21
00:01:25,440 --> 00:01:29,820
Otherwise floor return a string that says that they're all done playing.

22
00:01:29,830 --> 00:01:32,420
Now let's increment guesses by 1.

23
00:01:32,560 --> 00:01:35,590
Because if this function has been run a guess has been made.

24
00:01:35,590 --> 00:01:38,490
Now let's check to see if guess is the same as answer.

25
00:01:38,740 --> 00:01:42,240
And if so we'll set completed to be true and return the string.

26
00:01:42,250 --> 00:01:43,450
You got it.

27
00:01:43,450 --> 00:01:46,320
If the guess is greater than the answer will return the string.

28
00:01:46,390 --> 00:01:51,700
Your guess is too high and if the guess is less than the answer or return the string your guess is too

29
00:01:51,700 --> 00:01:52,630
low.

30
00:01:52,630 --> 00:01:58,330
Finally if the number of guesses is the same as the amount of guesses allowed will set completed to

31
00:01:58,330 --> 00:02:00,010
true and return the string.

32
00:02:00,190 --> 00:02:05,890
No more guesses and let the user know what the answer was and that's it for the closer's exercise.

33
00:02:05,890 --> 00:02:06,740
See you in the next video.
