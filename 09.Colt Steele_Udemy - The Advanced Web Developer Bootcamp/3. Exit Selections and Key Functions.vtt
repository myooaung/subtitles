WEBVTT
1
00:00:00.240 --> 00:00:01.410
Welcome back.

2
00:00:01.410 --> 00:00:06.450
In this video we'll learn how to remove elements from the dumb when those elements are no longer bound

3
00:00:06.450 --> 00:00:07.440
to data.

4
00:00:07.800 --> 00:00:13.500
In the last video we use the Enter method to access elements that D-3 create on the fly when it needs

5
00:00:13.500 --> 00:00:17.080
to bind data to things that don't exist yet in the dome.

6
00:00:17.490 --> 00:00:22.110
There's an analogous method called Exit which we can use to target elements that should be removed from

7
00:00:22.110 --> 00:00:23.040
the DOM.

8
00:00:23.460 --> 00:00:25.920
Let's take a look at how this function works.

9
00:00:26.190 --> 00:00:27.870
We'll pick up where we left off.

10
00:00:28.140 --> 00:00:32.940
Here's a link to the code for the current state of our app along with the live site.

11
00:00:32.940 --> 00:00:37.530
As you can see we've got some movie quotes displayed on the page along with some styling based on the

12
00:00:37.530 --> 00:00:40.130
movie data all using D-3.

13
00:00:40.140 --> 00:00:45.640
Suppose now that we want to remove our Finding Nemo quote from the page we could use D-3 to select that

14
00:00:45.640 --> 00:00:46.880
element and move it.

15
00:00:47.010 --> 00:00:49.260
But then our page would be out of sync with our data.

16
00:00:49.260 --> 00:00:53.940
Since the code to array would still have the quote in it a more common approach is to let the data be

17
00:00:53.940 --> 00:00:56.420
the single source of truth and then update the view.

18
00:00:56.730 --> 00:01:00.950
So let's do that since Finding Nemo was the last movie in the array.

19
00:01:01.020 --> 00:01:02.970
We can call pop to remove it.

20
00:01:03.000 --> 00:01:07.560
This removes the finding the market from our dataset but we still see it on the page.

21
00:01:07.560 --> 00:01:12.810
Next we'll need to update the data binded to tell D-3 to remove any list items that no longer have a

22
00:01:12.810 --> 00:01:14.710
corresponding piece of data.

23
00:01:15.150 --> 00:01:18.440
Take a look at what happens when we update the data binding.

24
00:01:18.570 --> 00:01:21.700
Here the theory is going to do something we haven't seen before.

25
00:01:21.720 --> 00:01:26.310
It keeps track of the four allies that should remain on the page inside of the group's property but

26
00:01:26.300 --> 00:01:27.970
what about the last ally.

27
00:01:28.080 --> 00:01:32.890
It turns out that this applies to the property since there there's no data to be matched to it.

28
00:01:32.910 --> 00:01:36.380
D-3 thinks that this element should be slated for removal.

29
00:01:36.390 --> 00:01:42.700
Don't worry about the fact that this is an array with five elements the other values are all undefined.

30
00:01:42.850 --> 00:01:47.950
Just like when we gain access to the enter selection by calling enter we can gain access to the exit

31
00:01:47.950 --> 00:01:55.000
selection by calling exit and once we have that exit selection we can go ahead and remove it.

32
00:01:55.060 --> 00:01:55.520
Great.

33
00:01:55.570 --> 00:01:57.580
So far so good.

34
00:01:57.610 --> 00:02:00.370
Now let's throw a bit of a wrench in this technique.

35
00:02:00.370 --> 00:02:05.660
Suppose that instead of removing the last quote We want to remove all quotes that come from R-rated

36
00:02:05.720 --> 00:02:06.740
movies.

37
00:02:06.970 --> 00:02:09.730
First update our ratings filter out.

38
00:02:09.730 --> 00:02:12.040
Any movie with an R rating.

39
00:02:14.420 --> 00:02:20.820
Now let's do what we did before buying this array of data to the allies and then remove the extra elements.

40
00:02:24.270 --> 00:02:29.460
There's a problem we didn't actually remove that you already quoted from the dome we just removed the

41
00:02:29.460 --> 00:02:32.340
last two list items from the unordered list.

42
00:02:32.370 --> 00:02:33.590
So what's going on here.

43
00:02:34.520 --> 00:02:40.130
Interestingly if we select all of the allies and call data on our selection we could see that the data

44
00:02:40.130 --> 00:02:41.030
is correct.

45
00:02:41.300 --> 00:02:43.300
There are no R rated quotes in here.

46
00:02:43.640 --> 00:02:45.230
So what went wrong.

47
00:02:45.800 --> 00:02:51.830
The issue here has to do with how data gets bound to elements and D-3 by default data is joined to elements

48
00:02:51.830 --> 00:02:53.530
on the page by index.

49
00:02:53.660 --> 00:02:58.260
The first element in the non r post array is matched to the first list item.

50
00:02:58.280 --> 00:03:02.980
The second element in the non r quotes array is matched to the second list item and so on.

51
00:03:03.290 --> 00:03:08.030
This means that the first three elements on the page get matched with the three quotes and the last

52
00:03:08.030 --> 00:03:10.760
to list items get moved to the exit selection.

53
00:03:10.760 --> 00:03:16.040
Since there is no data left over for them but the last element on the page have a quote that we want

54
00:03:16.040 --> 00:03:17.950
to keep.

55
00:03:17.970 --> 00:03:19.960
There are two ways to fix this problem.

56
00:03:20.070 --> 00:03:26.490
One is to restyled the elements after we've joined the new data using the same code as we have for this

57
00:03:26.490 --> 00:03:28.350
work since after this new join.

58
00:03:28.500 --> 00:03:30.830
The first three allies will have the correct data.

59
00:03:30.960 --> 00:03:35.200
They just need to have their styles in our text modified to reflect this new data.

60
00:03:35.820 --> 00:03:37.670
But there also a simpler approach.

61
00:03:37.920 --> 00:03:42.530
Essentially we encountered this problem because D-3 didn't know that it should be removing list items

62
00:03:42.540 --> 00:03:44.790
based on the contents of the quotes.

63
00:03:44.910 --> 00:03:49.140
It just knew there were three quotes left in so I removed the last two elements.

64
00:03:49.380 --> 00:03:54.840
When we joined data elements however we can also specify how the three should match state and elements

65
00:03:54.840 --> 00:03:55.550
together.

66
00:03:55.740 --> 00:04:01.580
We do this by passing what's called a key function in the second perimeter to the DOT data method.

67
00:04:01.650 --> 00:04:06.810
The return value from the key function is then what to use to match elements with data rather than the

68
00:04:06.810 --> 00:04:09.700
default behavior of match by index.

69
00:04:09.930 --> 00:04:15.750
In our example we can make sure we remove the correct list item by using the quote itself as the key

70
00:04:15.750 --> 00:04:21.760
in the key function.

71
00:04:21.770 --> 00:04:24.100
This works but why.

72
00:04:24.110 --> 00:04:28.500
In this case the key function tells D-3 that the first element in the quotes array should be natural

73
00:04:28.500 --> 00:04:34.250
with whatever list item corresponds to that quote and so on for a second and third quotes when data

74
00:04:34.250 --> 00:04:34.720
is found.

75
00:04:34.760 --> 00:04:41.160
This way the two list items that any data will be precisely the list items containing R rated quotes.

76
00:04:41.240 --> 00:04:46.010
Now that you know how to use D-3 to add and remove elements based on data let's learn about a general

77
00:04:46.010 --> 00:04:48.630
pattern for updating DOM elements using the 3.

78
00:04:48.970 --> 00:04:50.560
I'll meet you in the next video.
