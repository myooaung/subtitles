WEBVTT
1
00:00:00.600 --> 00:00:01.210
All right.

2
00:00:01.290 --> 00:00:02.490
Welcome to the course.

3
00:00:02.520 --> 00:00:07.560
So in this video I'm just going to walk through the curriculum basically walk through every single thing

4
00:00:07.560 --> 00:00:08.780
that we cover in this course.

5
00:00:08.790 --> 00:00:10.070
It's pretty massive.

6
00:00:10.260 --> 00:00:11.550
So I couldn't actually cover it all.

7
00:00:11.550 --> 00:00:18.030
In the initial promo video this is the more detailed walkthrough and I'll be honest I started trying

8
00:00:18.030 --> 00:00:23.090
to make a chart graphic that I could show some sort of timeline.

9
00:00:23.280 --> 00:00:29.860
And I got feedback that it was just too ugly too long too hard to read the small text.

10
00:00:29.910 --> 00:00:38.160
So then I tried to shifted over and I made this and it still is not very intuitive or helpful but it's

11
00:00:38.160 --> 00:00:44.300
the only way I could put all of the sections of the content we cover on one single page or one graphic.

12
00:00:44.520 --> 00:00:47.490
But personally not really a fan of that either.

13
00:00:47.490 --> 00:00:52.580
So what I've done is just made slides to showcase the curriculum to walk through it.

14
00:00:52.740 --> 00:00:52.980
OK.

15
00:00:52.990 --> 00:00:54.060
So let's get going.

16
00:00:54.060 --> 00:01:00.610
We start off with C Ss So we talk about C Ss animations we cover transforms transitions.

17
00:01:00.720 --> 00:01:04.840
We make an animated image gallery that has this really beautiful hover effect.

18
00:01:04.860 --> 00:01:10.650
We talk about keyframe animations and then we build a floating icon project a really common use case

19
00:01:10.650 --> 00:01:13.480
for animations is to build loading icons.

20
00:01:13.680 --> 00:01:16.320
Then from there we go into fluxbox.

21
00:01:16.350 --> 00:01:21.930
So if you're not familiar with fluxbox it's a newer part of the SS that allows you to build layouts

22
00:01:22.260 --> 00:01:25.800
to divvy up space much easier than it used to be.

23
00:01:25.830 --> 00:01:29.710
So we learn all the basic properties there's a lot of properties to talk about.

24
00:01:29.970 --> 00:01:36.090
Then we build a responsive nav bar we build a little advertising widget from a video game Web site and

25
00:01:36.090 --> 00:01:40.830
then we build what's called the Holy Grail layout which is a standard player that used to be a lot harder

26
00:01:40.830 --> 00:01:41.240
to build.

27
00:01:41.250 --> 00:01:44.090
But now with flex Xbox it's pretty easy.

28
00:01:44.250 --> 00:01:47.770
Then from there we take a break to build a special project.

29
00:01:47.850 --> 00:01:55.390
So you build a complete company web site for a fictitious mountain guide company and we combine fluxbox

30
00:01:55.440 --> 00:01:59.750
and some animations we talk about lay out make it responsive make it beautiful.

31
00:01:59.910 --> 00:02:05.430
So in this section we don't necessarily learn any new content we just build something real next.

32
00:02:05.460 --> 00:02:11.220
We're now moving on to Asynchronous JavaScript So this section covers the basics of things like promises

33
00:02:11.220 --> 00:02:16.350
callbacks but it also dives into what's happening behind the scenes with javascript.

34
00:02:16.350 --> 00:02:20.280
What it means when we talk about the event loop in the queue the stack in the heap.

35
00:02:20.280 --> 00:02:22.720
Some of these technical terms and how they fit together.

36
00:02:22.770 --> 00:02:26.610
So even if you're already familiar with things like callbacks and promises there's probably something

37
00:02:26.610 --> 00:02:30.950
here for you to help you understand what's happening behind the scenes.

38
00:02:31.230 --> 00:02:33.010
Then we dive into Ajax.

39
00:02:33.210 --> 00:02:39.270
So Ajax Asynchronous JavaScript and X M-L it's a terrible name but what it really is referring to is

40
00:02:39.270 --> 00:02:43.420
making requests using javascript so that we can make single page apps.

41
00:02:43.500 --> 00:02:45.420
So we talked about the granddaddy API.

42
00:02:45.540 --> 00:02:51.120
The original one the SML HTP request which has not aged so gracefully.

43
00:02:51.120 --> 00:02:56.060
So then we move on to the more modern way which is to use the fetch API as well as third party libraries

44
00:02:56.070 --> 00:02:57.560
like ex-US and Jay query.

45
00:02:57.690 --> 00:03:03.250
And along the way we make a couple of projects I've only listed two here a Bitcoin price checker.

46
00:03:03.330 --> 00:03:09.270
So it gets live Bitcoin data using fetch and then also a random user generator where we're generating

47
00:03:09.270 --> 00:03:11.480
fake users using an API as well.

48
00:03:11.550 --> 00:03:15.640
And from there we move into testing which is sort of a notorious Tawfik.

49
00:03:15.720 --> 00:03:19.770
It's usually not taught that much online actually but it's really important.

50
00:03:19.770 --> 00:03:22.860
And in our case we focus on a testing library called jazzmen.

51
00:03:22.910 --> 00:03:24.250
It's really commonly used.

52
00:03:24.270 --> 00:03:29.160
So we talked about the syntax or Jasmine talk about how to write the tests but then we also focus on

53
00:03:29.550 --> 00:03:36.030
overall structuring and the ideas behind different approaches to testing testing and development and

54
00:03:36.030 --> 00:03:39.010
behavior driven development and what those cycles look like.

55
00:03:39.060 --> 00:03:43.500
What it means as an individual what it means working on a team with testing kind of the pros and cons

56
00:03:43.500 --> 00:03:44.100
of each.

57
00:03:44.190 --> 00:03:47.220
And then we also get into more advanced topics like spies and clocks.

58
00:03:47.250 --> 00:03:50.770
And we also learn how to test a synchronous code with jazzmen.

59
00:03:51.180 --> 00:03:54.590
Then we have a section we're calling advanced array methods.

60
00:03:54.810 --> 00:03:57.980
It's sort of like learning functional programming with javascript.

61
00:03:58.010 --> 00:04:03.030
We're focusing on building our own clone of underscore a low or low dash.

62
00:04:03.270 --> 00:04:05.180
You build methods from scratch.

63
00:04:05.280 --> 00:04:08.970
Things like Map filter reduce every and some and a couple more.

64
00:04:08.970 --> 00:04:13.920
The idea is that you're not learning some crazy new concepts there's no library or new technology.

65
00:04:14.070 --> 00:04:18.640
It's just about being able to kind of take apart and rebuild a commonly used methods.

66
00:04:19.080 --> 00:04:22.100
Now we get into kind of the thick of it with javascript.

67
00:04:22.110 --> 00:04:27.450
We start talking about closures and the key word this two topic set for a lot of javascript beginners

68
00:04:27.450 --> 00:04:28.670
are very intimidating.

69
00:04:28.830 --> 00:04:31.510
And for a lot of instructors very intimidating to teach as well.

70
00:04:31.650 --> 00:04:33.750
But really important intrinsic parts.

71
00:04:33.860 --> 00:04:34.770
Yes.

72
00:04:34.770 --> 00:04:39.030
So this section is really about mastering those two concepts closures and the key word this.

73
00:04:39.030 --> 00:04:42.020
But there's also things like use strict.

74
00:04:42.030 --> 00:04:44.120
We talked about call apply and bind.

75
00:04:44.340 --> 00:04:49.180
We talked about the new keyword and we talked about implicit and explicit binding.

76
00:04:49.620 --> 00:04:50.610
Then we continue on.

77
00:04:50.610 --> 00:04:55.410
And we talked about object oriented programming with javascript which ties in nicely to the previous

78
00:04:55.410 --> 00:05:00.660
section where now we're kind of taking it to the next level we talk about first of all what is object

79
00:05:00.660 --> 00:05:05.660
oriented programming outside of javascript removed from the specific syntax just what is it.

80
00:05:05.790 --> 00:05:11.790
Then we'd start diving into the syntax of javascript and its unique approach to O.P. talked about constructors

81
00:05:11.790 --> 00:05:12.780
and prototypes.

82
00:05:12.780 --> 00:05:18.510
The prototype chain prototype inheritance we build a couple of examples lots of exercises throughout

83
00:05:18.510 --> 00:05:19.230
this.

84
00:05:19.440 --> 00:05:25.770
And from there we go on and we switch gears entirely to talk about creating your own API.

85
00:05:26.070 --> 00:05:31.680
So this is all about how do you make your own JS on API is that you can consume later to make a single

86
00:05:31.680 --> 00:05:32.710
page application.

87
00:05:32.820 --> 00:05:36.440
Up until this point we've been using other peoples or other companies API.

88
00:05:36.660 --> 00:05:37.860
How do we make our own.

89
00:05:37.890 --> 00:05:41.080
And we do that using Noad Mongo D-B and express.

90
00:05:41.220 --> 00:05:47.220
We also talked about restful routing creating a full restful API so that we have full crud capabilities

91
00:05:47.610 --> 00:05:56.530
using this API then we take that API and then we build our own single page app consuming our own API.

92
00:05:57.030 --> 00:06:01.830
So we make an app in this section the single page app section where the entire section is devoted to

93
00:06:01.830 --> 00:06:02.790
making a single app.

94
00:06:02.790 --> 00:06:04.850
Actually we don't use a framework.

95
00:06:04.920 --> 00:06:06.390
We do everything from scratch.

96
00:06:06.390 --> 00:06:11.640
We use some Jey query but we're not using something like reacts or angular just yet we get to that stuff

97
00:06:11.640 --> 00:06:12.200
later.

98
00:06:12.360 --> 00:06:18.740
But here it's focused on understanding how a single page app works without the crutch of a framework.

99
00:06:19.290 --> 00:06:23.330
So then we transition we go back to E.S. 2015.

100
00:06:23.460 --> 00:06:26.430
So this is a big section actually you said it just put it up.

101
00:06:26.430 --> 00:06:29.720
And in this first part I won't go over every single thing here.

102
00:06:29.760 --> 00:06:35.100
So you can see those a lot of topics we cover but we talk about things like that in Konst arrow function.

103
00:06:35.100 --> 00:06:36.280
So that's a big one.

104
00:06:36.330 --> 00:06:42.030
Rest and spread operators we talk about object and array destructuring the class key word how inheritance

105
00:06:42.030 --> 00:06:42.380
works.

106
00:06:42.390 --> 00:06:50.430
The 2015 Super generator's is 2015 promises a lot of stuff a lot of exercises a lot of chances for you

107
00:06:50.430 --> 00:06:52.440
to get your hands dirty with this stuff.

108
00:06:52.440 --> 00:06:54.020
So it's not just lecturing.

109
00:06:54.060 --> 00:06:59.490
It can be dry on its own but we've worked really hard to make it as interactive as possible and then

110
00:06:59.490 --> 00:07:01.130
we have one of my favorite sections.

111
00:07:01.140 --> 00:07:02.310
I think it's kind of unique.

112
00:07:02.370 --> 00:07:07.020
We're calling it the guess the password refactor So I guess the password is an app that we've already

113
00:07:07.020 --> 00:07:10.000
built but it doesn't use East 2015 features.

114
00:07:10.080 --> 00:07:15.900
So in this section you're actually going to retrofit it refactor it to use some of those as 2015 features

115
00:07:15.960 --> 00:07:17.560
like era functions.

116
00:07:17.580 --> 00:07:21.550
The rest operator leten Konst and array destructuring.

117
00:07:21.840 --> 00:07:27.270
So you take this app that's already been built for you said password guessing game and then we're going

118
00:07:27.270 --> 00:07:27.890
to make it better.

119
00:07:27.890 --> 00:07:30.710
Refactor it clean it up and make it more modern.

120
00:07:30.960 --> 00:07:34.860
So I'm kind of proud about the section I'm really happy with how it turned out.

121
00:07:34.860 --> 00:07:42.090
Then we go with East 2016 and 2017 which there's much less to cover compared to 2015.

122
00:07:42.240 --> 00:07:44.570
So this is combined into one section.

123
00:07:44.580 --> 00:07:49.520
We hit the big important pieces though things like includes async functions.

124
00:07:49.520 --> 00:07:52.730
What we spend most of the time on object rests and spread.

125
00:07:52.740 --> 00:07:57.690
PAD started pad and a couple of little tiny things here and there but compared to the massive amount

126
00:07:57.690 --> 00:08:03.220
of changes that came with it is 2015 these two are pretty minor but still important especially async

127
00:08:03.240 --> 00:08:03.870
functions.

128
00:08:04.020 --> 00:08:06.180
And then there's another big shift in the curriculum.

129
00:08:06.330 --> 00:08:08.010
We move on to D-3.

130
00:08:08.010 --> 00:08:13.710
If you're not familiar with D-3 it's a jobs library that helps you make charts graphics helps you visualize

131
00:08:13.710 --> 00:08:14.200
data.

132
00:08:14.340 --> 00:08:17.240
So we start off with a couple of sections focusing around it.

133
00:08:17.310 --> 00:08:19.860
But in this first one we focus on the basics.

134
00:08:19.920 --> 00:08:23.940
How you actually use it to manipulate the Dom to do things that you're probably already comfortable

135
00:08:23.940 --> 00:08:24.240
with.

136
00:08:24.240 --> 00:08:28.800
Like creating event listeners selecting elements we have another opportunity to refactor an existing

137
00:08:28.800 --> 00:08:32.790
app that we give you and then we have a project which we call the notes app.

138
00:08:32.910 --> 00:08:37.430
So this isn't so much focused on creating data visualizations just yet or charts.

139
00:08:37.440 --> 00:08:39.310
It's just learning D-3.

140
00:08:39.600 --> 00:08:42.420
Then we move on to what we call the D-3 and data.

141
00:08:42.420 --> 00:08:45.520
So this is where we start working with bigger data sets.

142
00:08:45.570 --> 00:08:48.030
We talk about how D-3 works with data.

143
00:08:48.030 --> 00:08:49.020
How do you import it.

144
00:08:49.200 --> 00:08:51.730
What are the functions of the methods you need to do that.

145
00:08:51.750 --> 00:08:56.760
And then we build a fun little project where we visualize the character frequencies in a string.

146
00:08:56.760 --> 00:09:00.190
From there we move on to SVGA and D-3.

147
00:09:00.240 --> 00:09:05.350
So SVGA stands for scalable vector graphics as Viji and D-3 play together very nicely.

148
00:09:05.430 --> 00:09:11.460
So we learn how to draw on the screen using SPG how to create rectangles and circles and polygons how

149
00:09:11.460 --> 00:09:17.670
do we add text in different lines and paths and arcs and then how do we use D-3 to actually generate

150
00:09:17.670 --> 00:09:24.210
those and manipulate them so that eventually we'll be using SVGA to make pie charts or line graphs or

151
00:09:24.210 --> 00:09:25.550
whatever it is.

152
00:09:26.010 --> 00:09:30.900
And we have a project here as well where we re factor the previous character frequency up to now use

153
00:09:30.900 --> 00:09:32.140
SVGA.

154
00:09:33.120 --> 00:09:39.180
Then we really get into D-3 and the data visualization aspects where we start working with actual chart

155
00:09:39.180 --> 00:09:39.790
types.

156
00:09:39.990 --> 00:09:44.280
So we work with real data and we create scatterplot and histograms and pie charts.

157
00:09:44.280 --> 00:09:49.080
We talked about how to create scales for our data how to create colors and define those colors based

158
00:09:49.080 --> 00:09:50.310
off of the scales.

159
00:09:50.320 --> 00:09:51.540
Really fun things.

160
00:09:51.540 --> 00:09:54.570
So this one we create multiple charts as we go.

161
00:09:54.660 --> 00:09:59.950
Then we move on to advanced D-3 where we get into some of the trickier things like how do you manage

162
00:09:59.980 --> 00:10:05.950
a synchronous code with D-3 or how do you add tool tips so you can hover over your visualizations and

163
00:10:05.950 --> 00:10:10.950
get more information and then a really fun thing and my opinion is we start working with maps.

164
00:10:11.070 --> 00:10:13.440
So map visualizations are really important.

165
00:10:13.480 --> 00:10:18.700
How do we work with map data and DOJ San Antonio Jason to create these map visualizations.

166
00:10:18.700 --> 00:10:23.650
And finally we work with forced directed graphs we talk about how to create them using D-3.

167
00:10:23.770 --> 00:10:25.270
A lot of stuff I know.

168
00:10:25.380 --> 00:10:30.160
And if you're not familiar with D-3 this can sound like a whole lot of jibberish but it's really cool.

169
00:10:30.160 --> 00:10:34.990
I advise you to check it out even if you're apprehensive about it even if you're not super comfortable

170
00:10:34.990 --> 00:10:36.810
with you know math and numbers.

171
00:10:36.860 --> 00:10:38.630
Still I think there's a lot to learn there.

172
00:10:38.890 --> 00:10:44.660
And then finally we get to the pinnacle of the D-3 content which is this climate dashboard that we build.

173
00:10:44.690 --> 00:10:50.350
So we take real world CO2 emissions data and we create this dashboard where there's a map.

174
00:10:50.350 --> 00:10:51.590
We've got a pie chart.

175
00:10:51.640 --> 00:10:54.550
We also have a bar chart and everything's interactive.

176
00:10:54.670 --> 00:10:58.840
There's a slider so we can change the year and see how things change over time.

177
00:10:58.840 --> 00:11:03.970
Basically it's a combination of all the D-3 content we've learned putting it all together to build dashboard

178
00:11:03.970 --> 00:11:04.720
together.

179
00:11:04.870 --> 00:11:09.210
Then we have one last big shift in our curriculum where we start talking about react.

180
00:11:09.340 --> 00:11:12.640
So then the rest of this course is focused on react.

181
00:11:12.640 --> 00:11:13.660
We start with the basics.

182
00:11:13.750 --> 00:11:15.730
Talk about front and frameworks in general.

183
00:11:15.730 --> 00:11:18.800
We learn about why react is popular why you should care about it.

184
00:11:18.940 --> 00:11:20.490
Then you create your first component.

185
00:11:20.650 --> 00:11:24.760
You work with GSX and we start rendering multiple components on the page.

186
00:11:24.760 --> 00:11:31.540
Next we talk about create re-act app and props to create re-act app is a really cool tool that helps

187
00:11:31.540 --> 00:11:33.040
you get started quickly.

188
00:11:33.040 --> 00:11:38.620
Basically you don't have to fuss over all the very basics of getting an app created and getting started

189
00:11:39.010 --> 00:11:42.400
so we can really dive into the code quickly and then we talk about props.

190
00:11:42.520 --> 00:11:47.890
And by the end of the section you build you build your own recipe demo apps and nothing groundbreaking

191
00:11:48.160 --> 00:11:54.310
but we're putting together pieces working with props and components and GSX to make something substantial.

192
00:11:54.310 --> 00:11:59.950
Moving on we talked about state next state is a key concept to react so we have a section devoted to

193
00:11:59.950 --> 00:12:00.300
it.

194
00:12:00.460 --> 00:12:05.720
We talk about how it compares to prop's then we work with the re-act developer tools in the browser.

195
00:12:05.840 --> 00:12:08.010
Learn some of the ins and outs of those.

196
00:12:08.050 --> 00:12:15.030
Then we focus on re-act component architecture and along the way a bunch of re-act exercises.

197
00:12:15.040 --> 00:12:18.680
Next up we talk about the virtual Dom and react events.

198
00:12:18.700 --> 00:12:24.040
So one of the most intimidating concepts at least up front to a lot of students is the virtual Dom and

199
00:12:24.040 --> 00:12:27.500
react and it sounds like some crazy sci fi thing.

200
00:12:27.520 --> 00:12:28.550
It's not that crazy.

201
00:12:28.660 --> 00:12:30.240
So we talked about it in this section.

202
00:12:30.320 --> 00:12:31.900
He'll work with the virtual Dom.

203
00:12:31.900 --> 00:12:35.780
You'll learn how to handle events using re-act you create forms to react.

204
00:12:35.830 --> 00:12:38.940
And of course build a couple of apps.

205
00:12:39.010 --> 00:12:44.950
Next up we talk about the component lifecycle so key concept and react is what's called the re-act component

206
00:12:44.950 --> 00:12:50.140
lifecycle and there's a bunch of associated methods that we get for free with re-act that we can hook

207
00:12:50.140 --> 00:12:51.730
into at certain points.

208
00:12:51.730 --> 00:12:57.400
And the main thing that we do here is talk about making AJAX calls loading data asynchronously using

209
00:12:57.400 --> 00:13:02.650
a method called component did mount and we build a fun little geography app where we make an AJAX call

210
00:13:02.650 --> 00:13:03.900
to load data.

211
00:13:03.910 --> 00:13:09.310
After that we get to a big section that's focused on react and authentication.

212
00:13:09.310 --> 00:13:12.550
So this is tricky in a lot of Riak course is skip over this.

213
00:13:12.580 --> 00:13:13.750
But we decided not to.

214
00:13:13.840 --> 00:13:19.000
So we start off by talking about the key concepts behind authentication things like JCA on the web tokens

215
00:13:19.320 --> 00:13:20.580
caching cookies.

216
00:13:20.770 --> 00:13:26.560
And then we also implement Auth. on your own node server using a library called B crypt.

217
00:13:26.560 --> 00:13:30.250
We focus on the differences between authentication and authorization.

218
00:13:30.250 --> 00:13:33.240
And then finally we learn how to hook re-act into off.

219
00:13:33.490 --> 00:13:37.070
And it's kind of tricky and there's a lot of concepts a lot of moving parts.

220
00:13:37.210 --> 00:13:41.500
But by the end we'll have a start on our main re-act project that we call warbler.

221
00:13:41.680 --> 00:13:43.640
It's sort of a take on Twitter.

222
00:13:43.690 --> 00:13:46.140
I hope I'm allowed to say Twitter don't sue me.

223
00:13:46.180 --> 00:13:49.760
So that's what we do here we start the Auth. start the back end.

224
00:13:49.810 --> 00:13:55.840
So by the end we'll have people be able to or users to be able to sign up and sign and from there we

225
00:13:55.840 --> 00:13:57.560
move on to the re-act router.

226
00:13:57.610 --> 00:14:03.580
So we start by identifying problems with react when we don't use to react rather what are problems with

227
00:14:03.580 --> 00:14:07.270
using a front end framework to manage everything for us on the client side.

228
00:14:07.270 --> 00:14:12.100
And then we talked about the role that re-act router plays and how it solves those problems we see how

229
00:14:12.160 --> 00:14:13.500
added to your projects.

230
00:14:13.510 --> 00:14:19.750
We also focus on managing authentication with it and then we basically added in to our warbler project

231
00:14:20.070 --> 00:14:21.030
the Twitter.

232
00:14:21.730 --> 00:14:23.300
And then we get to redux.

233
00:14:23.470 --> 00:14:29.230
And this is kind of weird to explain especially to people who haven't started react but essentially

234
00:14:29.230 --> 00:14:34.540
redux is a way of structuring applications or flex as a way of structuring applications and reductions

235
00:14:34.540 --> 00:14:36.370
in implementation that we're going to use.

236
00:14:36.520 --> 00:14:41.040
But we really focus in this section on a conceptual overview of what the heck it is.

237
00:14:41.110 --> 00:14:42.340
What is redux.

238
00:14:42.340 --> 00:14:46.740
We talk about how to work with a library called re-act reduction your own projects.

239
00:14:46.900 --> 00:14:50.950
And then we talked about all the key concepts like actions reducers pure functions.

240
00:14:51.030 --> 00:14:54.740
We work with the redux developer tools so there are specific tools we can use.

241
00:14:54.790 --> 00:14:56.850
We use middleware called redux thunk.

242
00:14:56.890 --> 00:14:58.540
It's another little library.

243
00:14:58.540 --> 00:15:05.330
And then we we switch up our application and we take warbler and refactor it using reduction.

244
00:15:05.350 --> 00:15:09.130
So this is the last big thing we do and react and it's a big thing it is.

245
00:15:09.150 --> 00:15:11.480
It's a whole new way of thinking about applications.

246
00:15:11.620 --> 00:15:16.600
But I think it's pretty fun especially if you're used to building applications one way this kind of

247
00:15:16.660 --> 00:15:19.420
flips it all on its head and that's it.

248
00:15:19.420 --> 00:15:22.370
Take a deep breath and know it's a lot of content.

249
00:15:22.390 --> 00:15:27.780
This course covers a ton of stuff in scope but also goes really foreign to death and the things the

250
00:15:28.030 --> 00:15:34.120
content alone or the D-3 content could easily be standalone courses or you know five to 10 hours each.

251
00:15:34.120 --> 00:15:35.950
So it's a lot of content.

252
00:15:35.950 --> 00:15:40.450
Next up what we're going to do if you're curious I'm going to highlight some of the learning paths you

253
00:15:40.450 --> 00:15:41.770
can take through the course.

254
00:15:41.860 --> 00:15:45.020
So if you're only focused on react I'll tell you what section to need to do.

255
00:15:45.040 --> 00:15:51.550
If you're only focused on D-3 or you want to become a 2015 ninja I'll help you identify what's important

256
00:15:51.550 --> 00:15:53.700
and what you can maybe skip or come back to later.

257
00:15:53.890 --> 00:15:54.740
All right.

258
00:15:54.850 --> 00:15:55.320
M8.
