WEBVTT
1
00:00:01.080 --> 00:00:07.560
Welcome back in the previous video we saw how to use the rest operator to collect arguments in a function.

2
00:00:07.710 --> 00:00:13.500
In this video we'll see the same three dots but in a different setting when three dots are used outside

3
00:00:13.500 --> 00:00:18.150
of parameters to a function those three dots are called the spread operator.

4
00:00:18.180 --> 00:00:23.290
The idea behind the spread operator is to take an array and spread each value up.

5
00:00:23.790 --> 00:00:25.880
So where can you use the spread operator.

6
00:00:26.190 --> 00:00:31.380
Let's imagine that we have three arrays and wanted to create a new array with all the values of each

7
00:00:31.380 --> 00:00:32.730
array inside of it.

8
00:00:33.010 --> 00:00:36.830
And yes 5 we might use something like that to keep joining arrays.

9
00:00:36.900 --> 00:00:39.390
And that would work in as 2015.

10
00:00:39.420 --> 00:00:43.790
We can make a new array and spread out all of the values in each array.

11
00:00:43.800 --> 00:00:45.490
Let's see what that looks like.

12
00:00:45.540 --> 00:00:48.210
We can see here we are using the same three dots.

13
00:00:48.300 --> 00:00:52.910
But since it is not a parameter to a function it's called the spread operator.

14
00:00:52.950 --> 00:00:58.080
Another common use case is when you have an array of values but are trying to invoke a function which

15
00:00:58.080 --> 00:01:02.070
accepts each value individually before 2015.

16
00:01:02.070 --> 00:01:07.530
This was commonly done using the applied method which has its second parameter accepts an array of arguments

17
00:01:07.590 --> 00:01:08.790
which it spreads out.

18
00:01:09.120 --> 00:01:13.820
Let's imagine we have an array of values and want to find the largest value in the array.

19
00:01:13.830 --> 00:01:18.660
There's a handy map that Max function which returns the highest value of what happens when we pass an

20
00:01:18.660 --> 00:01:19.470
array to it.

21
00:01:19.500 --> 00:01:20.820
It doesn't know how to deal with that.

22
00:01:20.910 --> 00:01:25.610
So it returns not a number with yes 5 we can solve this using apply.

23
00:01:25.770 --> 00:01:28.460
Don't worry too much about the first parameter to apply.

24
00:01:28.710 --> 00:01:31.200
We don't care what the value of the key this is.

25
00:01:31.200 --> 00:01:36.180
We're just using apply for the second parameter which is how we can pass an array of arguments to be

26
00:01:36.180 --> 00:01:39.510
spread out to a function an N as 2015.

27
00:01:39.510 --> 00:01:41.530
We have the spread operator to do that.

28
00:01:41.550 --> 00:01:45.180
Let's start with the math that Max function with that operator.

29
00:01:45.180 --> 00:01:49.260
We can easily spread out all of the values and find the greatest thanks.

30
00:01:49.710 --> 00:01:51.180
Let's see one more example.

31
00:01:51.360 --> 00:01:55.130
Here we have a function which accepts three parameters a b and c..

32
00:01:55.260 --> 00:01:59.030
We also have a variable called numbs which is an array of three numbers.

33
00:01:59.280 --> 00:02:04.140
So how can we invoke this function using names as a parameter with the S-5 way.

34
00:02:04.170 --> 00:02:08.140
We would use apply which is a second parameter accepts an array of values.

35
00:02:08.430 --> 00:02:14.100
Or we could use the spread operator with E.S. 2015 in the next video we're going to talk about useful

36
00:02:14.100 --> 00:02:17.700
enhancements that as 2015 gives us when working with objects.

37
00:02:17.970 --> 00:02:22.560
But first if you're trying to practice a bit more with the rest and spread Operator Good luck and I'll

38
00:02:22.560 --> 00:02:23.920
see you in the next video.
