WEBVTT
1
00:00:00.150 --> 00:00:00.470
OK.

2
00:00:00.510 --> 00:00:01.310
Welcome back.

3
00:00:01.470 --> 00:00:04.910
So next we're going to move on to creating our first component.

4
00:00:05.160 --> 00:00:10.120
So here I have a simple diagram that shows the basic components that are app has.

5
00:00:10.380 --> 00:00:11.940
So we have the app component.

6
00:00:12.060 --> 00:00:13.800
It's going to be really simple.

7
00:00:13.800 --> 00:00:17.190
We're basically just going to have a To Do List component inside of it.

8
00:00:17.190 --> 00:00:22.440
Now we could you know put all the to do list functionality inside the app component itself and not have

9
00:00:22.440 --> 00:00:24.320
a To Do List component.

10
00:00:24.630 --> 00:00:30.990
But this leaves room for us to also add more components like a nav bar component a footer.

11
00:00:30.990 --> 00:00:35.300
You know some sort of side component rather than just putting all the functionality in the app.

12
00:00:35.310 --> 00:00:41.340
It also allows us to have a nice semantic name for our component to do list rather than just calling

13
00:00:41.390 --> 00:00:42.780
something app.

14
00:00:42.830 --> 00:00:44.930
So inside app we're going to have to do list.

15
00:00:45.030 --> 00:00:47.190
And in this video we're going to focus on to do list.

16
00:00:47.250 --> 00:00:49.850
So we have our list of to do items.

17
00:00:49.890 --> 00:00:56.370
So each to do item is just going to display a little bullet point with the text as well as a button

18
00:00:56.370 --> 00:00:57.850
to delete that too.

19
00:00:57.900 --> 00:01:02.410
And it will also reflect if it's a completed or incomplete to do.

20
00:01:02.880 --> 00:01:08.700
And so some of that logic will be in here but the logic to delete or add a new to do it's actually going

21
00:01:08.700 --> 00:01:13.840
to happen in the list because our To Do List is where the state is being managed where all those dues

22
00:01:13.950 --> 00:01:15.620
are in the state.

23
00:01:15.630 --> 00:01:17.280
And we also have it to do form.

24
00:01:17.280 --> 00:01:23.280
This will just be a simple form where you hit up you type something and you hit a button and that button

25
00:01:23.280 --> 00:01:29.700
triggers an event and it calls a function that it's going to add to our to do list to do state and all

26
00:01:29.700 --> 00:01:30.550
that's good.

27
00:01:30.570 --> 00:01:33.310
But also we have talked about the API functionality.

28
00:01:33.420 --> 00:01:38.730
So we're going to have API calls that are triggered when the to do us component loads when the component

29
00:01:38.730 --> 00:01:43.830
mounts or when it will mount are going to fire off an API call to fetch all of the existing to use from

30
00:01:43.830 --> 00:01:49.920
our database then we're going to create two items with those to do that come back when our to do form

31
00:01:49.920 --> 00:01:50.910
is submitted.

32
00:01:50.910 --> 00:01:56.090
We're going to take that data and fire it off as a POST request to our API to add a new to do.

33
00:01:56.160 --> 00:02:00.190
And then when it's done successfully Hopefully there's no error.

34
00:02:00.360 --> 00:02:02.580
We're going to add a new to do item to the page.

35
00:02:02.850 --> 00:02:07.680
But for now we're going to just focus on to do list and we're going to get something showing up on the

36
00:02:07.680 --> 00:02:08.280
page.

37
00:02:08.280 --> 00:02:09.780
So this should be super quick.

38
00:02:09.780 --> 00:02:12.970
We're just going to go and define what we want to happen.

39
00:02:13.020 --> 00:02:16.770
So I'm just my cat is causing some trouble.

40
00:02:16.780 --> 00:02:17.690
I'll be right back.

41
00:02:17.870 --> 00:02:19.170
OK come back.

42
00:02:19.200 --> 00:02:21.320
My cat decided to spill a glass of water.

43
00:02:21.660 --> 00:02:22.870
So where was I.

44
00:02:22.890 --> 00:02:28.610
We're going to add in our To Do List component which doesn't exist yet.

45
00:02:28.640 --> 00:02:29.780
It's going to give us an error.

46
00:02:29.940 --> 00:02:37.230
And actually I'm going to take this opportunity to move my terminals down here so I can see those errors

47
00:02:37.260 --> 00:02:38.330
as they happen.

48
00:02:40.190 --> 00:02:41.630
Here we go.

49
00:02:41.900 --> 00:02:45.470
And if I save you know tells me to do list is not defined.

50
00:02:45.740 --> 00:02:49.520
So let's define to do list so we to make a new file.

51
00:02:49.520 --> 00:02:54.140
And rather than stopping the server and using touch I'm going to go over here.

52
00:02:55.030 --> 00:02:59.370
Go down to new file and it was going to make a to do list.

53
00:02:59.480 --> 00:03:04.190
J.S. and in there we put our little boiler plate.

54
00:03:04.200 --> 00:03:09.980
So we're going to import re-act from react.

55
00:03:09.990 --> 00:03:14.240
It will start there and then the first thing we'll do is define our most basic component.

56
00:03:14.290 --> 00:03:19.290
So we're going to do class to do list extend component.

57
00:03:19.450 --> 00:03:26.530
Hopefully this is familiar right now and all we'll do is start with a simple render and render it's

58
00:03:26.530 --> 00:03:35.750
just going to return an H1 and then here we'll just say to do list it's format this bit better change

59
00:03:35.760 --> 00:03:39.990
right spacing over here to 2 for the tab size.

60
00:03:40.000 --> 00:03:40.360
OK.

61
00:03:40.570 --> 00:03:48.290
So next we need to actually export our component export to do list just like that.

62
00:03:48.850 --> 00:03:52.960
OK I see it we have a component defined but we're still getting the error because we're not importing

63
00:03:52.960 --> 00:03:54.360
it in our app.

64
00:03:54.640 --> 00:03:55.260
So appear.

65
00:03:55.260 --> 00:04:00.430
I'm actually going to remove this logo we're not using that and we'll get a somewhat annoying warning

66
00:04:00.430 --> 00:04:01.620
that saying we're not using it.

67
00:04:01.620 --> 00:04:11.380
So I'm going to get rid of that and I'm going to import to do list from that dot slash to do list.

68
00:04:11.510 --> 00:04:12.870
There we go.

69
00:04:13.000 --> 00:04:14.320
And that looks good.

70
00:04:14.320 --> 00:04:15.040
Everything's working.

71
00:04:15.040 --> 00:04:18.200
We should see our H-1 and we do.

72
00:04:18.580 --> 00:04:19.300
All right.

73
00:04:19.300 --> 00:04:20.970
So we have our component defined.

74
00:04:21.010 --> 00:04:22.160
Everything is looking good.

75
00:04:22.270 --> 00:04:24.470
And that's pretty much it for this super quick video.

76
00:04:24.490 --> 00:04:28.590
Next we're going to actually fetch our initial data and get some to do showing up.
