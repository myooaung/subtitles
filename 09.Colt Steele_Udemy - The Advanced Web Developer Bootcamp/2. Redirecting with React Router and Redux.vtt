WEBVTT
1
00:00:00.180 --> 00:00:06.050
So we previously saw that we can't log in successfully and we were canceled at logging district.

2
00:00:06.420 --> 00:00:07.410
What I want to do now.

3
00:00:07.470 --> 00:00:12.380
When the user logs in I want to show them a different page that says you've logged in.

4
00:00:12.450 --> 00:00:15.450
This will eventually become the timeline of the messages.

5
00:00:15.780 --> 00:00:18.200
But let's start building the architecture around that.

6
00:00:18.660 --> 00:00:24.000
So what we need to do is fix up a couple of things inside of our home page Take us inside of this home

7
00:00:24.000 --> 00:00:25.410
page.

8
00:00:25.520 --> 00:00:27.440
We don't just want to display that information.

9
00:00:27.440 --> 00:00:31.520
We want a little bit of logic to see if the user is logged in.

10
00:00:31.520 --> 00:00:33.940
We also want to do this in our nav bar.

11
00:00:34.070 --> 00:00:38.680
So inside of our home page we need to pass some information related to the user who's logged in.

12
00:00:38.690 --> 00:00:39.550
Where do we get that.

13
00:00:39.590 --> 00:00:47.510
We get that from our current user from redox the inside of our interests whenever we render this specific

14
00:00:47.600 --> 00:00:48.390
route.

15
00:00:48.800 --> 00:00:51.710
We're going to pass in some additional information to our homepage.

16
00:00:51.890 --> 00:00:56.840
Let's go grab the current user from props and we're getting that from a redux.

17
00:00:57.170 --> 00:01:00.330
I'm going to pass that along to our home page component.

18
00:01:01.040 --> 00:01:06.200
Let's pass that as a prop we can call that current user and its value will be current user and that's

19
00:01:06.200 --> 00:01:13.080
coming from redox so our home page component should have access to the user who's logged in inside of

20
00:01:13.080 --> 00:01:14.590
that home page component.

21
00:01:15.060 --> 00:01:16.420
Let's see if we have a current user.

22
00:01:16.620 --> 00:01:20.630
So all the structure current user from prop's mission we spell that correctly.

23
00:01:21.570 --> 00:01:26.310
And let's write a little bit of conditional logic that says if current user data is authenticated is

24
00:01:26.310 --> 00:01:26.820
false

25
00:01:29.750 --> 00:01:37.950
this is code that should run if the user is not logged in or signed up yet if they have signed incorrectly

26
00:01:38.010 --> 00:01:39.570
will display a different message here.

27
00:01:40.910 --> 00:01:44.440
So if the user is not authenticated you want to make sure to return that information.

28
00:01:44.510 --> 00:01:46.240
Most just fix up our syntax here.

29
00:01:47.440 --> 00:01:50.370
And inside we want to pass in all that each TNL.

30
00:01:50.470 --> 00:01:57.720
So if the user is authenticated will simply just return a div let's make sure we get that right syntax

31
00:01:57.720 --> 00:02:00.180
highlighting and what we're trying to do.

32
00:02:00.490 --> 00:02:03.010
And each one is as you know will get it real simple.

33
00:02:05.260 --> 00:02:10.460
So how do we redirect someone when they've locked and successfully back in our form instead of canceled

34
00:02:10.460 --> 00:02:17.840
out logging what we're going to use the Riak router to redirect the let's also make sure that we handle

35
00:02:17.840 --> 00:02:19.200
any errors that happen here.

36
00:02:20.080 --> 00:02:26.260
So if something goes wrong and we return the rejection of that promise we earn it should display.

37
00:02:26.380 --> 00:02:32.370
So in our job then what we want to do is redirect and we'll do that using our prop stock history.

38
00:02:32.410 --> 00:02:38.520
We get that from re-act router and we're going to push back to slash and the reffer slash renders the

39
00:02:38.520 --> 00:02:43.560
home page component and now our home page component should have enough conditional logic to display

40
00:02:43.560 --> 00:02:44.930
something differently.

41
00:02:45.030 --> 00:02:48.390
So let's luggin and let's try again with some information.

42
00:02:48.400 --> 00:02:51.400
And now it says need it.

43
00:02:51.610 --> 00:02:54.100
So what actually happened in this entire cycle.

44
00:02:54.310 --> 00:03:00.830
If you take a look in our Roxette we can see we've removed any errors.

45
00:03:00.950 --> 00:03:06.140
We can also see what our current user looks like our current user has is authenticated of true with

46
00:03:06.140 --> 00:03:08.690
the information about that user who's logged in.

47
00:03:08.690 --> 00:03:11.410
If we reset that and go back to where we were.

48
00:03:11.650 --> 00:03:15.730
This is what current user looks likes we can really time travel with these relaxed their tools which

49
00:03:15.730 --> 00:03:16.630
is really nice.

50
00:03:18.330 --> 00:03:23.000
So what else can we display aside from you made it what we want right now.

51
00:03:24.010 --> 00:03:26.110
Is simply a list of all of our messages.

52
00:03:26.380 --> 00:03:31.950
And that's going to be a component called Message time line touches and inside of this message time.

53
00:03:33.010 --> 00:03:38.770
We're going to pass in a list of messages and that was the messages is going to come from redux.

54
00:03:38.890 --> 00:03:43.810
So we don't worry that it hasn't been prompts from a parent to a child to another child and so on.

55
00:03:44.050 --> 00:03:46.060
So let's first import Riyadh from Riyadh.

56
00:03:46.210 --> 00:03:50.740
We're then going to import message lists from that I-Slash containers.

57
00:03:50.950 --> 00:03:52.510
Slash message lists.

58
00:03:52.510 --> 00:03:54.370
We don't have this one yet but we'll make it.

59
00:03:54.590 --> 00:04:00.980
And here we're going to make a component called Message timeline and that's going to pass.

60
00:04:01.020 --> 00:04:02.100
That's going to get some props.

61
00:04:02.130 --> 00:04:03.890
It's got to be a seamless functional component.

62
00:04:04.170 --> 00:04:09.900
And inside of here we're going to return a div with a class name of row little bit of bootstraps style

63
00:04:09.910 --> 00:04:17.020
and gear and inside of here will render a component called Message List.

64
00:04:17.020 --> 00:04:18.560
We're going to add another component here.

65
00:04:18.580 --> 00:04:21.770
So that's why we have this kind of parent message time component.

66
00:04:22.090 --> 00:04:24.050
So we have a little bit more in a bit.

67
00:04:24.140 --> 00:04:28.600
Let's go to a container now called The Message List and this is going to continue in our messages.

68
00:04:29.510 --> 00:04:34.370
So inside of here we're going to want to display all the messages that we're getting from relax.

69
00:04:34.370 --> 00:04:36.230
So how are we going to get all those messages.

70
00:04:36.230 --> 00:04:38.590
We're going to get them from the back end to do that.

71
00:04:38.600 --> 00:04:41.530
We're going to need another Ajax request with some actions.

72
00:04:41.630 --> 00:04:45.890
And we're also going to want to make sure that we're logged in and set a token in the header.

73
00:04:45.980 --> 00:04:47.170
So that's going to take a bit of work.

74
00:04:47.180 --> 00:04:48.440
I'll work on that and the next section.
