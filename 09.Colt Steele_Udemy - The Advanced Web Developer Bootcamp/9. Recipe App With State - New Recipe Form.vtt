WEBVTT
1
00:00:01.680 --> 00:00:04.910
In the last video we gave a recipe at St..

2
00:00:04.940 --> 00:00:09.370
Now our next goal is to add the form so that we can create new recipes.

3
00:00:09.800 --> 00:00:13.060
We'll start by just creating the form and putting it on the screen.

4
00:00:15.140 --> 00:00:24.590
I'll create a new file for the recipe input.

5
00:00:24.600 --> 00:00:31.410
Now start with the boiler plate of my recipe and put by importing react and creating the class as usual.

6
00:00:43.220 --> 00:00:49.190
Next we'll create a constructor and inside this component we need to keep state about our our form that

7
00:00:49.190 --> 00:00:50.320
we're going to create.

8
00:00:50.660 --> 00:00:53.660
So the state will want is the title of the recipe.

9
00:00:53.900 --> 00:00:55.890
The instructions for the recipe.

10
00:00:56.030 --> 00:01:01.510
An array of ingredients that can change and an image for the recipe.

11
00:01:10.230 --> 00:01:15.780
Now the fact that the list of ingredients can change we can add more than one ingredient introduce a

12
00:01:15.780 --> 00:01:18.260
little bit of complication so we'll see how we'll handle that.

13
00:01:20.640 --> 00:01:21.930
Now let's implement render

14
00:01:35.710 --> 00:01:39.300
So far I've structured all the values from my state.

15
00:01:39.400 --> 00:02:21.600
Now all iterate over the ingredients array and create a an input for each ingredient.

16
00:02:21.960 --> 00:02:24.770
So that's the line for our ingredient map.

17
00:02:25.020 --> 00:02:26.970
We'll fill in more as we go.

18
00:02:26.970 --> 00:02:30.440
Also I'm going to use a couple of classes that will define just a minute.

19
00:02:30.570 --> 00:02:31.710
So I add those to my div

20
00:02:43.250 --> 00:02:49.860
and for any list it's important to remember that we need a key to distinguish the elements.

21
00:02:50.060 --> 00:02:52.580
Although it looks like anything a much better job with spelling.

22
00:02:52.580 --> 00:02:59.400
So we fix that.

23
00:02:59.570 --> 00:03:01.900
Now let's return the rest of our GSX.

24
00:03:01.940 --> 00:03:04.850
I'll copy what I've got and talk about each piece

25
00:03:16.180 --> 00:03:16.430
OK.

26
00:03:16.430 --> 00:03:19.120
Let's talk about this GSX or turn.

27
00:03:19.250 --> 00:03:25.700
First of all I've got a container for the whole form and we've got a class that will help style form.

28
00:03:25.700 --> 00:03:31.290
Next up is the form itself and we got an on Samit method that we need to implement here.

29
00:03:31.490 --> 00:03:39.490
For now I'll just comment this out or rather had a dummy method that will fill in later.

30
00:03:39.560 --> 00:03:45.690
Next we've got a closed button and I want an enclosed method to be passed in as a prop.

31
00:03:45.740 --> 00:03:50.960
We'll discuss this a little more later but for now let's just make a default method so this works.

32
00:04:00.610 --> 00:04:03.590
And the last step would be to use that anclote method from prop's

33
00:04:09.710 --> 00:04:10.030
OK.

34
00:04:10.030 --> 00:04:17.770
Now my recipe input component takes in on Close method as a prop and will provide a default prompt.

35
00:04:17.780 --> 00:04:20.060
We'll talk more about that when we get to the implementation.

36
00:04:20.060 --> 00:04:26.740
But for now we'll keep moving on.

37
00:04:26.830 --> 00:04:30.510
Next we got an input for our title and this one is a little more straightforward.

38
00:04:30.580 --> 00:04:34.580
So let's implement this handle change method because it's something we've already seen.

39
00:04:38.710 --> 00:04:45.610
Remember the handle change will get a browser or event as a parameter so that there also this method

40
00:04:45.610 --> 00:04:47.210
will use that state.

41
00:04:47.230 --> 00:04:49.420
So we want to bind it to this.

42
00:04:49.420 --> 00:05:02.230
We'll do that in the constructor.

43
00:05:02.240 --> 00:05:06.410
Now this is the case where handle change is going to be used by multiple inputs.

44
00:05:06.470 --> 00:05:11.870
It would be pretty annoying to have to make a separate handle change for each input so we'll use that

45
00:05:11.870 --> 00:05:15.770
trick to use either target that name as our key

46
00:05:22.270 --> 00:05:24.010
and that's it for handle change.

47
00:05:24.040 --> 00:05:26.200
Let's keep going with the render method.

48
00:05:26.200 --> 00:05:30.670
Now we've got a textarea for the instructions and this is pretty much the same as the input that we've

49
00:05:30.670 --> 00:05:31.260
seen.

50
00:05:31.270 --> 00:05:36.390
We still want to set the value for our instructions and we still want an on change here.

51
00:05:36.550 --> 00:05:40.650
So very similar to the input.

52
00:05:40.860 --> 00:05:45.870
After that we're rendering our list of ingredients and we'll talk in a minute about how that's going

53
00:05:45.870 --> 00:05:51.110
to change.

54
00:05:51.280 --> 00:05:57.910
Here's a button for adding an input for a new ingredient so we can add as many ingredients as we want.

55
00:06:00.560 --> 00:06:03.910
And lastly here is an input for our image your l.

56
00:06:04.250 --> 00:06:06.400
So this is pretty much the same as the title.

57
00:06:06.400 --> 00:06:09.520
It's got a value for that image string.

58
00:06:09.530 --> 00:06:11.320
And then it's got in on change method.

59
00:06:13.870 --> 00:06:18.480
Last up we've got a button for summit.

60
00:06:18.950 --> 00:06:20.410
Now it's at R-CA SS

61
00:06:29.040 --> 00:06:34.110
and the last step is just to throw this recipe input into our app and make sure it shows up

62
00:06:47.270 --> 00:06:47.640
ok.

63
00:06:47.640 --> 00:06:51.730
Hopefully something renders.

64
00:06:52.420 --> 00:06:56.750
And we got our form to render it looks like we're missing a few more styles so let's go add those in

65
00:07:00.100 --> 00:07:00.620
OK.

66
00:07:00.650 --> 00:07:02.190
This looks like our issue.

67
00:07:02.240 --> 00:07:10.570
I think the problem is we forgot to import or C Ss.

68
00:07:10.780 --> 00:07:14.020
Now let's take a look.

69
00:07:14.030 --> 00:07:14.260
All right.

70
00:07:14.270 --> 00:07:15.230
That looks much better.

71
00:07:15.230 --> 00:07:18.120
We've got our form going now.

72
00:07:18.440 --> 00:07:24.620
And now let's set it up so that this plus button adds more green input boxes for all the ingredients

73
00:07:24.620 --> 00:07:25.180
I want to add

74
00:07:31.180 --> 00:07:31.430
OK.

75
00:07:31.430 --> 00:07:34.090
Let's take a look at the GSX for that plus button.

76
00:07:37.810 --> 00:07:44.400
So this plus button has an on click method and also it's important that it's type button type cement.

77
00:07:44.410 --> 00:07:48.600
So when you click on that plus handle new ingredient is invoked.

78
00:07:48.640 --> 00:07:50.260
Let's implement that method.

79
00:07:53.290 --> 00:07:56.180
I'll start by adding it into my constructor just so I don't forget

80
00:08:00.920 --> 00:08:01.950
next why have the method

81
00:08:09.100 --> 00:08:10.840
and what I want to do here.

82
00:08:11.060 --> 00:08:18.680
Well I want to make my ingredients array in my state grow by 1 so that we show more than one input and

83
00:08:18.680 --> 00:08:24.620
I'll do that by spreading out the current ingredients array and adding an empty space for the new ingredient

84
00:08:30.800 --> 00:08:35.120
and that's all our plus button should work now and add an extra input for us.

85
00:08:35.120 --> 00:08:36.170
Let's take a look at that.

86
00:08:36.200 --> 00:08:36.920
GSX

87
00:08:39.830 --> 00:08:45.020
So there's one thing I want to add I forgot to add the label here.

88
00:08:45.020 --> 00:08:50.060
So now will render a one and then a two and three for however many inputs that we have.

89
00:08:50.360 --> 00:08:54.680
So we just have a count of our ingredients.

90
00:08:54.680 --> 00:08:57.150
We also want to handle change for the ingredient.

91
00:08:57.260 --> 00:09:00.350
Remember before we just added an empty method here.

92
00:09:00.770 --> 00:09:04.130
So let's implement that now.

93
00:09:04.130 --> 00:09:07.450
I'll call the method handle change ingredient or I g.

94
00:09:12.910 --> 00:09:17.890
And the key for this handle change method is that we need to figure out which element in the array that

95
00:09:17.890 --> 00:09:18.850
we're updating.

96
00:09:19.090 --> 00:09:22.330
And I'll do that by using this name.

97
00:09:22.330 --> 00:09:30.460
So depending on which name you're changing we have the ID of that element in the array so we can use

98
00:09:30.460 --> 00:09:34.980
that to modify the appropriate position in the array.

99
00:09:38.200 --> 00:09:48.630
First I'll add my bind in the constructor.

100
00:09:48.660 --> 00:09:53.760
Now the first thing I want to do is figure out the index that I'm on so I'll get that through that target

101
00:09:53.820 --> 00:10:00.920
that name.

102
00:10:01.160 --> 00:10:07.160
Remember the format of the name of each input its ingredients a dash and then our index.

103
00:10:07.160 --> 00:10:11.960
So I'm splitting the string on the dash and then getting the second element in the array which will

104
00:10:11.960 --> 00:10:19.130
be the index and I'm casting that to a number so that it is treated as an integer rather than as a string.

105
00:10:19.130 --> 00:10:34.530
Now I want to map over my ingredients array inside of state and update the appropriate element in Mirei.

106
00:10:34.600 --> 00:10:41.650
So if I if the index that I'm currently on is equal to the index that I'm looking for I want to return

107
00:10:41.710 --> 00:10:45.010
the new value from the target value.

108
00:10:45.010 --> 00:10:47.710
Otherwise I'll just return the same value that I've already had.

109
00:10:47.710 --> 00:10:52.610
I Engy.

110
00:10:53.030 --> 00:10:54.440
Now we just set state

111
00:10:59.820 --> 00:11:01.600
OK let's test all this out.

112
00:11:05.700 --> 00:11:07.590
You can see we've got our number here.

113
00:11:07.710 --> 00:11:09.070
Let's add a period after two.

114
00:11:09.080 --> 00:11:14.670
I'll do that.

115
00:11:14.810 --> 00:11:19.760
And now we should be able to type in this input box and see some changes.

116
00:11:20.120 --> 00:11:21.770
That looks good.

117
00:11:21.770 --> 00:11:27.410
We should also be able to hit that plus button and get a new input box that works too.

118
00:11:27.410 --> 00:11:33.620
All right so now we're at the point where it looks like our form is working in isolation by itself.

119
00:11:33.620 --> 00:11:39.230
But now we need to hook it up so that it handles submit and that it can appear and go away.

120
00:11:39.260 --> 00:11:40.580
So we'll do that in the next video.
