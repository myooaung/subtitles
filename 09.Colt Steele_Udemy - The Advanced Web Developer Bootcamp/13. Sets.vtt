WEBVTT
1
00:00:00.620 --> 00:00:01.390
Welcome back.

2
00:00:01.550 --> 00:00:06.770
In this video we're going to be talking about a new kind of object that as 2015 gives us and that gives

3
00:00:06.770 --> 00:00:11.980
a set a set is a data structure in which all of the values are unique.

4
00:00:11.990 --> 00:00:17.450
We can also place any value we'd like in a set and just like maps they are created using the new keyword

5
00:00:18.140 --> 00:00:20.330
sets exist in quite a few other languages.

6
00:00:20.420 --> 00:00:22.980
And I've now finally made their way to javascript.

7
00:00:23.300 --> 00:00:26.710
But when might you want to use a set very commonly in programming.

8
00:00:26.720 --> 00:00:32.330
You want to ignore duplicate values when you don't need to identify values with keys or care about the

9
00:00:32.330 --> 00:00:33.670
ordering of values.

10
00:00:33.740 --> 00:00:35.450
Sets are great.

11
00:00:35.450 --> 00:00:38.060
Let's see how to create a set and add values to it.

12
00:00:38.330 --> 00:00:43.480
We're going to create a set using the set constructor and add some values to our set.

13
00:00:43.640 --> 00:00:47.510
We can see them on the add duplicate values our set does not change.

14
00:00:47.510 --> 00:00:53.270
And just like maps sets have a property called size which lists the number of elements in the set to

15
00:00:53.270 --> 00:00:54.990
see if a set contains a value.

16
00:00:55.040 --> 00:00:57.410
We can use the HAs method to remove.

17
00:00:57.410 --> 00:00:59.480
We can use the delete method.

18
00:00:59.480 --> 00:01:05.570
Best of all sets implement a simple iterator so we can easily print all the values in a set using a

19
00:01:05.570 --> 00:01:07.970
for loop similar to maps.

20
00:01:08.010 --> 00:01:13.220
There also exists a data structure called a weak set which is more performant than a regular set but

21
00:01:13.220 --> 00:01:16.750
all of the values have to be objects just like weak maps.

22
00:01:16.760 --> 00:01:19.220
We can not get a rate over a weak set.

23
00:01:19.430 --> 00:01:23.450
Now that you've seen maps and sets it's time to practice using these new data structures.

24
00:01:23.450 --> 00:01:23.840
Good luck.
