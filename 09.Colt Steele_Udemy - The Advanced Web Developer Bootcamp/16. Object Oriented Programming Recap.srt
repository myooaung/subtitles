1
00:00:00,390 --> 00:00:01,350
Welcome back.

2
00:00:01,350 --> 00:00:05,430
In this video we're going to recap what we've learned about prototypes.

3
00:00:05,490 --> 00:00:08,100
We saw that every time the new keyword is used.

4
00:00:08,150 --> 00:00:13,570
And under Prato property is added to the object created from the constructor function.

5
00:00:13,780 --> 00:00:20,400
The Dunder Prato property leaves the object created from the constructor function to the prototype property

6
00:00:20,550 --> 00:00:22,330
of the constructor function.

7
00:00:22,860 --> 00:00:29,100
This link allows objects created from the constructor function to access methods and properties on the

8
00:00:29,100 --> 00:00:31,000
prototype object.

9
00:00:31,230 --> 00:00:37,230
The prototype property also contains a property called constructor which points back to the constructor

10
00:00:37,230 --> 00:00:38,050
function.

11
00:00:38,460 --> 00:00:44,370
Next we should strive to place properties and methods that we want to share amongst all objects created

12
00:00:44,370 --> 00:00:50,160
from a constructor function in the prototype as these properties and methods only need to be defined

13
00:00:50,160 --> 00:00:54,330
once and not redefined for every single object.

14
00:00:54,330 --> 00:01:00,780
Finally we saw that we can pass methods and properties from one prototype object to another using prototype

15
00:01:00,780 --> 00:01:02,190
all inheritance.

16
00:01:02,190 --> 00:01:08,630
This process involves setting the prototype property to be a newly created object using objects that

17
00:01:08,640 --> 00:01:12,240
create and resetting the constructor property.

18
00:01:12,240 --> 00:01:17,590
Thanks again for watching this section and as always if you have any questions be sure to let us know.

19
00:01:17,610 --> 00:01:18,730
We're always here to help.

20
00:01:18,960 --> 00:01:21,570
Thanks for watching and I'll see you in the next section.
