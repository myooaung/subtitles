WEBVTT
1
00:00:00.600 --> 00:00:01.590
Welcome back.

2
00:00:01.590 --> 00:00:06.170
In this video we're going to introduce a new feature that is coming to javascript's soon.

3
00:00:06.210 --> 00:00:13.050
The object rest and spread property we previously saw that yes 2015 provided the rest and spread operator

4
00:00:13.080 --> 00:00:14.280
for arrays.

5
00:00:14.400 --> 00:00:20.610
The rest operator was used as a parameter to functions and gathered the remaining arguments as an array.

6
00:00:20.670 --> 00:00:26.760
The spread operator was useful for spreading out values in an array as comma separated dogs.

7
00:00:26.760 --> 00:00:32.730
So how do these operators work with objects the object rest operator is useful for gathering the remaining

8
00:00:32.760 --> 00:00:37.210
or rest of the keys and values in an object and creating a new one out of them.

9
00:00:37.530 --> 00:00:42.750
We can see here that we have an object called instructor if we want to create a variable called first

10
00:00:42.870 --> 00:00:47.150
which is the string L.E. and a variable called last which is the string Shopkick.

11
00:00:47.190 --> 00:00:53.080
How can we collect the remaining keys and values and put them in an Object object rest to the rescue.

12
00:00:53.810 --> 00:00:59.600
Notice here destructuring the instructor object and for the remaining keys and values we place the rest

13
00:00:59.600 --> 00:01:02.810
of them in an object called data.

14
00:01:02.840 --> 00:01:04.880
How about the object spread operator.

15
00:01:04.910 --> 00:01:09.860
We can use this operator to spread out keys and values from one object to another.

16
00:01:09.860 --> 00:01:11.350
Let's see what this looks like.

17
00:01:11.420 --> 00:01:17.420
Here we have two variables instructor and instructor to instructor to will accept all of the keys and

18
00:01:17.420 --> 00:01:23.680
values of instructor and overwrite the first and last keys with 10 and Garcia.

19
00:01:23.860 --> 00:01:28.830
You might be thinking we've seen something like this a method that creates copies of objects and accepts

20
00:01:28.870 --> 00:01:36.280
a list of objects that was the 2015 object assigned method objects Pretis similar and is a more concise

21
00:01:36.280 --> 00:01:42.340
way to create copies of other objects without a reference and with default values you can see below.

22
00:01:42.340 --> 00:01:47.200
We're creating an object called defaults and then spreading all of the keys and values to the map and

23
00:01:47.200 --> 00:01:48.910
call objects.

24
00:01:48.910 --> 00:01:52.140
You'll see the object spread operator quite a bit with react and redux.

25
00:01:52.150 --> 00:01:56.420
So it's important to understand how it works before you finish the section.

26
00:01:56.560 --> 00:01:59.000
Let's recap what we've learned so far.

27
00:01:59.140 --> 00:02:06.070
We've seen that yes 2016 provides the exponentiation operator with two asterisks an array that includes

28
00:02:06.160 --> 00:02:08.950
to easily see if a value is in an array.

29
00:02:08.950 --> 00:02:15.100
We then examined what the async and await keywords in 2017 enable us to do and how we can use async

30
00:02:15.100 --> 00:02:20.170
and wait to write synchronous looking functions that under the hood are asynchronous.

31
00:02:20.170 --> 00:02:25.810
We then saw that we can combine async functions with promised not all to create readable synchronous

32
00:02:25.810 --> 00:02:29.130
looking code when dealing with multiple promises.

33
00:02:29.170 --> 00:02:35.980
We took a look at some helpful 20:17 methods including pad start to tab end and examined why those might

34
00:02:35.980 --> 00:02:36.950
be very useful.

35
00:02:37.740 --> 00:02:44.500
Finally we took a look at the object and rest spread operators which are upcoming features to the language.

36
00:02:44.520 --> 00:02:48.200
Congratulations you've just learned a great deal of modern javascript.

37
00:02:48.510 --> 00:02:51.760
As always if you have any questions on the material be sure to ask.

38
00:02:51.780 --> 00:02:56.540
We're here to help keep up the good work and we'll see you in the next section.
