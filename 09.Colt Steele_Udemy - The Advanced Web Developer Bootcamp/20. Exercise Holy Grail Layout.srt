1
00:00:00,270 --> 00:00:01,480
Hey there we'll welcome back.

2
00:00:01,500 --> 00:00:03,780
So we've seen a ton of different properties.

3
00:00:03,840 --> 00:00:05,290
Learned a lot about flex box.

4
00:00:05,340 --> 00:00:09,090
It's time that we put some of it together to make a nice little exercise.

5
00:00:09,090 --> 00:00:14,200
So what you're going to do here is actually solve an age old web developer layout problem.

6
00:00:14,250 --> 00:00:16,350
It's been plaguing developers for a long time.

7
00:00:16,350 --> 00:00:18,720
It's called the Holy Grail layout.

8
00:00:18,780 --> 00:00:22,930
In fact it's such a common problem or it's so commonly problematic to make.

9
00:00:22,960 --> 00:00:27,580
There's an entire Wikipedia page devoted to it which I've included in the resources.

10
00:00:27,600 --> 00:00:32,460
Basically the idea is this you have a header and footer the top and bottom of the page.

11
00:00:32,550 --> 00:00:33,860
The width doesn't really matter.

12
00:00:34,110 --> 00:00:36,590
Let's just say the exact same dimensions.

13
00:00:36,750 --> 00:00:44,190
But then between the two you have three columns of equal height regardless of the content as you can

14
00:00:44,190 --> 00:00:46,700
see the content is of different height.

15
00:00:46,740 --> 00:00:48,940
You know the ADD thing goes about halfway.

16
00:00:48,990 --> 00:00:51,870
The main stuff in the middle goes almost all the way down.

17
00:00:51,900 --> 00:00:58,050
So they take up the same amount of space regardless and that's what causes problems with outflux box.

18
00:00:58,050 --> 00:01:04,390
Traditionally there's been a lot of ways of approximating this or of achieving it but with some drawbacks.

19
00:01:04,410 --> 00:01:11,010
So here's a common solution using floats and a cleared footer down here but this doesn't work well if

20
00:01:11,010 --> 00:01:13,460
your content is not exactly the same height.

21
00:01:13,650 --> 00:01:20,140
We can have them start at the same you know the flush up top but their backgrounds won't line up.

22
00:01:20,250 --> 00:01:23,040
If the content is not exactly the same height and that's a problem.

23
00:01:23,070 --> 00:01:24,030
Same with the footer.

24
00:01:24,060 --> 00:01:26,250
It floats upwards.

25
00:01:26,250 --> 00:01:27,550
So there's ways around it.

26
00:01:27,570 --> 00:01:31,610
There's an entire section down here that talks about known work arounds.

27
00:01:31,770 --> 00:01:38,130
So sometimes people will use tables sort of an older way of doing it using tables for layout or using

28
00:01:38,130 --> 00:01:43,320
photo columns I've never actually seen this but I heard about this by reading the article that I guess

29
00:01:43,320 --> 00:01:49,980
people would take a background image and make the entire body have the same background image where the

30
00:01:49,980 --> 00:01:54,910
columns would be colored into the background and then the content on top is transparent.

31
00:01:54,930 --> 00:01:59,760
So it looks like there's columns and rows behind it that have corresponding colors.

32
00:01:59,760 --> 00:02:03,770
The problem with that of course is making it responsive is basically impossible.

33
00:02:03,790 --> 00:02:09,060
And one other problem with some of the work arounds using a table for example or using a lot of nested

34
00:02:09,060 --> 00:02:14,990
divs and floating things is that your markup becomes very convoluted difficult to understand.

35
00:02:15,000 --> 00:02:20,970
So what we actually have here if you look at the basic content in a perfect world we would just have

36
00:02:21,180 --> 00:02:28,370
a couple of sections maybe inside a header and footer and that's pretty much it in our markup.

37
00:02:28,590 --> 00:02:34,860
But if we're using floats or a table we have to add all these weird table elements in their TVs and

38
00:02:35,160 --> 00:02:39,820
all these different table things that really clutter our markup and have no meaning.

39
00:02:39,840 --> 00:02:42,620
They're just there to help as a work around with the layout.

40
00:02:42,630 --> 00:02:48,540
Same with floats and that makes it very inaccessible to screen readers and also to whatever you know

41
00:02:48,540 --> 00:02:52,800
Google or whatever algorithm is crawling across your site and trying to parse it for meaning.

42
00:02:52,950 --> 00:02:54,770
So that's obviously a big problem as well.

43
00:02:54,870 --> 00:02:57,950
So the workaround is to use fluxbox which is where you come in.

44
00:02:58,110 --> 00:02:59,470
So here's what I'd like you to make.

45
00:02:59,730 --> 00:03:01,890
Let's be clear the colors don't matter.

46
00:03:01,890 --> 00:03:07,110
The rounded corners the padding the margin none of that matters all that we really care about.

47
00:03:07,120 --> 00:03:09,180
So you have a head or a top and a footer.

48
00:03:09,510 --> 00:03:16,710
Then in between we have a row that consists of three columns of equal height regardless of the content

49
00:03:16,710 --> 00:03:17,360
inside.

50
00:03:17,670 --> 00:03:23,610
And along with that you want to make sure that the main container the middle section is larger.

51
00:03:23,610 --> 00:03:28,650
Now I wouldn't worry about getting it to look exactly like this with the exact proportions but if you

52
00:03:28,650 --> 00:03:35,370
are curious this is 60 percent and these two take up 20 percent and yes you can use percentages with

53
00:03:35,370 --> 00:03:36,260
flex bases.

54
00:03:36,420 --> 00:03:37,390
So that's a bit of a hint.

55
00:03:37,440 --> 00:03:41,220
But again that doesn't really matter if it vaguely resembles these proportions.

56
00:03:41,220 --> 00:03:42,250
That's fine.

57
00:03:42,810 --> 00:03:46,380
I'll also point out this should be at least 800 pixels.

58
00:03:46,560 --> 00:03:52,740
So how can you specify that at least eight hundred pixels tall from here to here not the entire body

59
00:03:52,860 --> 00:03:56,090
just this main section this section this section.

60
00:03:56,400 --> 00:03:56,640
OK.

61
00:03:56,640 --> 00:04:00,700
So then how does it respond or how is it responsive.

62
00:04:00,710 --> 00:04:02,190
Here is what it should do.

63
00:04:02,300 --> 00:04:06,320
So as you shrink it things shrink down the main content stays larger.

64
00:04:06,350 --> 00:04:10,570
But then we hit the 640 pixel breakpoint and everything should stack.

65
00:04:10,850 --> 00:04:12,240
But not only that.

66
00:04:12,500 --> 00:04:14,060
Notice the order changes.

67
00:04:14,090 --> 00:04:18,260
So it used to be that the side now was first then the main content and the aside.

68
00:04:18,290 --> 00:04:23,240
Now the main content is first and the side now of a second and the aside is third.

69
00:04:23,240 --> 00:04:29,670
So make sure that that happens so that the main content becomes the first thing after the never top.

70
00:04:29,840 --> 00:04:36,410
And the only other thing I'll point out this top nav I added in another bit of complexity where there's

71
00:04:36,420 --> 00:04:38,000
enough left in nav right.

72
00:04:38,330 --> 00:04:41,960
So basically something should always be on the left something is always on the right.

73
00:04:42,020 --> 00:04:44,340
They come closer together but nothing changes.

74
00:04:44,360 --> 00:04:45,590
They just stay like that.

75
00:04:45,620 --> 00:04:46,570
Let me show you what I mean.

76
00:04:46,730 --> 00:04:50,840
Here's the solution as I shrink it down.

77
00:04:50,840 --> 00:04:52,420
Notice how things respond.

78
00:04:52,550 --> 00:04:58,070
And then I hit a break point right here and we're stuck with a larger thing of main content to smaller

79
00:04:58,130 --> 00:05:02,510
navs and then the footer don't worry so much about the sizes of these.

80
00:05:02,600 --> 00:05:09,330
Just make sure the main content is largest and also that comes first after the nut for the header.

81
00:05:09,740 --> 00:05:11,650
So there's started code for this.

82
00:05:11,720 --> 00:05:13,680
Let me show you what it looks like.

83
00:05:13,730 --> 00:05:15,880
You do not need to touch this.

84
00:05:16,310 --> 00:05:20,480
So all you have is a header with now left and nav right.

85
00:05:20,570 --> 00:05:22,580
So that should be here and here.

86
00:05:23,000 --> 00:05:27,010
Then we have our main which is that middle row.

87
00:05:27,020 --> 00:05:30,080
So this here all three things inside of it.

88
00:05:30,110 --> 00:05:38,180
There's an article a Nav. and an aside and notice that the main content comes first by default.

89
00:05:38,290 --> 00:05:39,700
Here it's second.

90
00:05:39,740 --> 00:05:41,270
So you'll need to reorder that.

91
00:05:41,840 --> 00:05:45,000
And it makes sense to have it come first is the most important thing.

92
00:05:45,020 --> 00:05:48,640
It's kind of annoying if you have your advertizements first in the markup.

93
00:05:48,800 --> 00:05:54,320
So Flex box allows you to put the most important content up top make it easier for screen readers to

94
00:05:54,320 --> 00:05:55,270
access.

95
00:05:55,690 --> 00:05:56,030
OK.

96
00:05:56,030 --> 00:06:01,370
And then at the end there's a footer so a couple of things I'll point out there is no container around

97
00:06:01,370 --> 00:06:03,890
all of this except for the body.

98
00:06:03,890 --> 00:06:08,890
So you'll need to work with the body to make sure that everything is inside a flex container.

99
00:06:08,900 --> 00:06:09,230
All right.

100
00:06:09,230 --> 00:06:15,200
So give that a shot if you have questions you can consult the specs but remember you don't have to make

101
00:06:15,200 --> 00:06:16,700
everything match perfectly.

102
00:06:16,790 --> 00:06:19,420
Colors shapes borders any of that.

103
00:06:19,460 --> 00:06:20,270
That doesn't matter.

104
00:06:20,270 --> 00:06:25,360
Just focus on the rough shapes the rough areas and making sure you get the idea.

105
00:06:25,400 --> 00:06:28,020
And that reminds me of one other thing I want to point out.

106
00:06:28,160 --> 00:06:34,520
I was trying to think of a good example to show you of a holy grail lay out in the wild and I found

107
00:06:34,520 --> 00:06:38,330
a bunch of Web sites but I didn't think any of them were that commonly used.

108
00:06:38,480 --> 00:06:41,290
And then I was going to listen to some music and right in front of me.

109
00:06:41,290 --> 00:06:44,350
This is spotify if you don't use it you're not familiar.

110
00:06:44,360 --> 00:06:46,270
Here is what I use to listen to music.

111
00:06:46,280 --> 00:06:48,660
But here's a perfect textbook Holy Grail layout.

112
00:06:48,890 --> 00:06:50,630
So we have a nav bar up here.

113
00:06:51,690 --> 00:06:52,530
Right there.

114
00:06:52,710 --> 00:06:57,240
Then we have our left kind of side nav in our right side.

115
00:06:57,300 --> 00:07:02,100
We have a footer and then we have our main content.

116
00:07:02,100 --> 00:07:07,080
So the proportions are a bit different but here is a very typical layout involving the holy grail.

117
00:07:07,320 --> 00:07:12,230
So I just wanted to throw that in there prove that this is a real thing I'm not totally making it up.

118
00:07:12,240 --> 00:07:14,060
Go ahead give it a shot in the next video.

119
00:07:14,070 --> 00:07:15,100
We'll have a solution.
