WEBVTT
1
00:00:00.360 --> 00:00:01.410
Welcome back.

2
00:00:01.710 --> 00:00:07.150
This section covers a few different D-3 odds and ends that we haven't had a chance to talk about yet.

3
00:00:08.040 --> 00:00:12.810
Here's a brief overview of what we'll be learning in this video.

4
00:00:12.830 --> 00:00:18.200
Will define what a tooltip is and learn how to build tools tips to help improve the readability of our

5
00:00:18.200 --> 00:00:25.640
visualizations in the next video we'll learn about D-3 transitions and we'll use them to create animations

6
00:00:25.640 --> 00:00:27.380
in our graphs during an update.

7
00:00:28.160 --> 00:00:32.550
We'll also learn how to hook into a few different transition related events.

8
00:00:32.840 --> 00:00:38.630
Then we'll learn how to make Ajax requests and D-3 so that we can grab data from other file formats

9
00:00:38.750 --> 00:00:45.320
including Jaison and cxxxvi will also learn how to format data that we've requested and we'll learn

10
00:00:45.320 --> 00:00:50.840
how to change multiple Ajax requests together with D-3 docu.

11
00:00:50.880 --> 00:00:52.380
Let's get started.

12
00:00:52.440 --> 00:00:56.050
As I said in this video we'll focus on tool tips.

13
00:00:56.130 --> 00:01:02.790
So what's a tooltip by way of example let's revisit our scatterplot birthdate of by country in an earlier

14
00:01:02.790 --> 00:01:03.340
video.

15
00:01:03.360 --> 00:01:09.050
We built this scatterplot and included axes and labels to clarify what exactly were graphing what I'd

16
00:01:09.060 --> 00:01:14.160
like to do now is make it so that when I hover over any one of these circles a box appears with more

17
00:01:14.160 --> 00:01:16.160
detailed information on the country.

18
00:01:16.530 --> 00:01:22.800
This box is typically called a tooltip D-3 doesn't come with much built in functionality to create tool

19
00:01:22.800 --> 00:01:23.560
tips.

20
00:01:23.670 --> 00:01:28.280
And while there are tooltip libraries out there it's not that hard to create a tooltip from scratch.

21
00:01:29.380 --> 00:01:34.180
Before we start coding though let's think about what functionality we'd like our tooltip to have.

22
00:01:34.510 --> 00:01:38.860
We'll probably need to create a device that isn't visible until the user hovers over a circle in the

23
00:01:38.860 --> 00:01:44.470
scatterplot when the user hovers will need to move our tool tooltip so that it's near the circle and

24
00:01:44.500 --> 00:01:47.170
update its contents based on the data.

25
00:01:47.240 --> 00:01:51.560
Then when the user moves away from the circle we'll need to hide the tooltip again.

26
00:01:52.910 --> 00:01:58.970
We can implement this functionality with the three and a bit of CSX to begin we'll use D-3 to append

27
00:01:58.970 --> 00:02:02.100
a div to the page with a class of tooltip.

28
00:02:02.270 --> 00:02:06.770
I could write style rules majority group too but only just that quite a few properties.

29
00:02:06.770 --> 00:02:08.850
So I'll just write some CSSA instead.

30
00:02:10.340 --> 00:02:13.790
Well continue to add styles as we go for now.

31
00:02:13.790 --> 00:02:19.220
The most important thing is that we set the opacity to zero and that we give our tooltip absolute positioning

32
00:02:19.910 --> 00:02:25.010
the absolute positioning will let us control where the div shows up based on where we place our mouse

33
00:02:25.940 --> 00:02:30.490
next let's write some code that will update the tooltip when the user mouse is over a data point.

34
00:02:31.360 --> 00:02:37.250
For this on need to select all circle elements and then attach a listener for mouse events.

35
00:02:37.250 --> 00:02:44.520
When this event is triggered I'll take my tool tip selection set its opacity to one and update its text.

36
00:02:44.520 --> 00:02:49.350
For now I won't worry about displaying any data I'll just hardcoded string and make sure something is

37
00:02:49.350 --> 00:02:50.000
showing up.

38
00:02:51.350 --> 00:02:54.360
What about the location of the tooltip for this.

39
00:02:54.470 --> 00:02:58.230
I can set the left and top properties of the div based on the event.

40
00:02:58.460 --> 00:03:04.150
I'll use the x and y properties on D-3 event here which give me the coordinates of the mouse position.

41
00:03:04.550 --> 00:03:06.980
I also need to specify what my units are.

42
00:03:07.370 --> 00:03:09.320
In this case there are pixels.

43
00:03:09.650 --> 00:03:13.750
While we're here I'll also add an event listener for when I'm asked out of a circle.

44
00:03:13.790 --> 00:03:15.950
This event listener will be pretty simple.

45
00:03:15.950 --> 00:03:21.250
I'll just set the tool tips opacity back to zero when I refresh the page.

46
00:03:21.250 --> 00:03:23.780
I see that the tooltip is working well.

47
00:03:23.950 --> 00:03:28.810
Sort of the tooltip shows up but there's this annoying flickering going on.

48
00:03:28.810 --> 00:03:33.700
The problem is that as soon as I mouse over a circle the tooltip moves to the location of my pointer

49
00:03:34.120 --> 00:03:37.430
causing my pointer to mouse over the tooltip and out of the circle.

50
00:03:37.690 --> 00:03:41.500
As soon as my Tooltip becomes visible it becomes invisible again.

51
00:03:41.560 --> 00:03:46.840
The easiest way to fix this is to set pointer events to none for my Tooltip in the C S S.

52
00:03:46.840 --> 00:03:52.180
This basically tells my mouse to ignore the tooltip entirely so that the motion of the tooltip doesn't

53
00:03:52.180 --> 00:03:56.350
cause the mouse out event to fire on the circle there.

54
00:03:56.380 --> 00:03:58.810
That looks much better.

55
00:03:58.810 --> 00:04:02.500
While we're modifying this VSS style the tooltip a bit more.

56
00:04:02.500 --> 00:04:10.570
I'll add a background color border border radius and padding cool that's looking better.

57
00:04:11.670 --> 00:04:16.920
Next let's update the text so that it actually shows data about the current region.

58
00:04:16.920 --> 00:04:21.620
To do this we'll need to pass the circle's data into our mouseover callback first.

59
00:04:21.630 --> 00:04:28.950
Let's just see if we can get the name of the region to show up sweet since that's working.

60
00:04:28.950 --> 00:04:32.490
Let's update what we display to show even more data on the region.

61
00:04:32.490 --> 00:04:38.730
Now I want to show everything the name of the region the number of births the total population the land

62
00:04:38.730 --> 00:04:42.110
area and the life expectancy.

63
00:04:42.150 --> 00:04:43.860
That's a lot of data to be storing.

64
00:04:44.070 --> 00:04:51.700
So rather than create a long string of text that HVM instead or use E.S. 2015 template strings to make

65
00:04:51.700 --> 00:04:58.000
the process of creating this HDMI easier otherwise it will involve a lot of nested dependes or a lot

66
00:04:58.000 --> 00:04:59.920
of concatenated strings.

67
00:05:00.370 --> 00:05:03.900
Either way the code will get a little hard to read this way.

68
00:05:03.910 --> 00:05:11.140
I can see the structure of the HVM very easily I'll also style these be tags so that there's less space

69
00:05:11.140 --> 00:05:11.940
in between them.

70
00:05:13.430 --> 00:05:17.160
This looks OK but some of these long numbers can be hard to read.

71
00:05:17.180 --> 00:05:20.220
I'd like to format these numbers to be a little more readable.

72
00:05:20.360 --> 00:05:25.580
D-3 has some formatting helpers but to keep things simple for now I'll just use the built in to local

73
00:05:25.580 --> 00:05:31.110
string method in javascript which converts a number to a more readable version of that number.

74
00:05:31.160 --> 00:05:35.840
Next I'd like to center the tooltip based on my mouse position rather than having it all the way to

75
00:05:35.840 --> 00:05:36.790
the right.

76
00:05:36.860 --> 00:05:42.950
I'll do this by changing how I set the Left property so that it accounts for the width of the div to

77
00:05:42.950 --> 00:05:50.420
access the day of using the 3 node on my Tooltip variable and then access its width offset the Left

78
00:05:50.420 --> 00:05:57.240
property by half the width of my Tooltip And while I'm here I'll also move the tool tip down a bit.

79
00:05:57.250 --> 00:06:02.500
One last little silent flourish they often see with tool tips involves adding a triangle on the side

80
00:06:02.500 --> 00:06:06.060
facing the mouse so that the tool tip looks like a speech bubble.

81
00:06:06.960 --> 00:06:12.610
There are a number of ways you can do this with CSSA but will do it using the before pseudo element.

82
00:06:12.720 --> 00:06:17.520
We can create a triangle by setting the border on this element to be transparent but then setting a

83
00:06:17.520 --> 00:06:22.350
different color for the bottom of the border to see this element in its entirety.

84
00:06:22.350 --> 00:06:24.200
Let's give it a visible background color.

85
00:06:26.100 --> 00:06:26.920
There it is.

86
00:06:27.240 --> 00:06:31.950
As you can see the border bottom setting only impacts the bottom part of the element.

87
00:06:31.950 --> 00:06:34.390
Now let's set the border to transparent.

88
00:06:34.860 --> 00:06:40.790
There are two steps complete one last important thing to note is that our tools won't currently work

89
00:06:40.790 --> 00:06:41.870
on mobile.

90
00:06:41.900 --> 00:06:46.580
That's because such events are different from mass events so the mouse event won't fire on a phone or

91
00:06:46.580 --> 00:06:48.560
tablet to fix this.

92
00:06:48.560 --> 00:06:54.140
We can simply pull our callbacks out into named functions and then add them as event listeners to both

93
00:06:54.140 --> 00:07:02.590
mass events and touch events that touch events will listen for our touch start and touch and that's

94
00:07:02.620 --> 00:07:05.570
it for all tips for some extra practice.

95
00:07:05.570 --> 00:07:10.780
Go back through your old visualizations and try adding tool tips to them in the next video.

96
00:07:10.850 --> 00:07:14.370
We'll learn about another UI enhancement transitions.
