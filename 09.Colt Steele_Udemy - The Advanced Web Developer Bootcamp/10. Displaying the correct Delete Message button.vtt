WEBVTT
1
00:00:00.210 --> 00:00:04.770
All right the last thing that we really need to do is make sure that we don't delete other people's

2
00:00:04.770 --> 00:00:05.540
marbles.

3
00:00:05.820 --> 00:00:08.950
And this is actually stopping us from doing that right away which is good.

4
00:00:08.970 --> 00:00:10.860
We're seeing that unauthorized response.

5
00:00:11.040 --> 00:00:15.280
We make a new message that's as awesome we actually can delete our own messages.

6
00:00:15.720 --> 00:00:20.370
So what I want to do is just first make a new message and I only want a delete button to appear for

7
00:00:20.370 --> 00:00:22.290
that specific message.

8
00:00:22.290 --> 00:00:27.560
So what we're going to do is write a little bit of logic inside of our message item.

9
00:00:27.660 --> 00:00:33.070
So for each message item that we render in the list we're going on to make sure that we pass in another

10
00:00:33.070 --> 00:00:35.860
prop that we call this correct user.

11
00:00:35.860 --> 00:00:44.620
So pass on a prompt call is correct user which is the current user and the messages user ID.

12
00:00:44.770 --> 00:00:46.030
So is this current user coming from.

13
00:00:46.030 --> 00:00:53.170
Well let's go grab it from redux the and it's going to be the current user that user data ID we really

14
00:00:53.170 --> 00:00:54.850
just want that ID right there.

15
00:00:57.390 --> 00:01:02.850
So the store then a property called Current User and now inside of all our message items will add a

16
00:01:02.850 --> 00:01:04.250
little bit of conditional logic.

17
00:01:06.490 --> 00:01:11.020
So we're determined to display the delete button if is correct user.

18
00:01:11.350 --> 00:01:15.630
And if so then let's go display so that anchor tag do delete.

19
00:01:15.940 --> 00:01:17.970
So if they're not the correct user we will display that.

20
00:01:18.220 --> 00:01:21.890
So if we take a look we'll get an area that says Current User is not defined.

21
00:01:22.390 --> 00:01:28.990
And we're getting that because we haven't passed that in as props so let's go see that and see an exact

22
00:01:28.990 --> 00:01:30.780
problem inside of our message item.

23
00:01:30.790 --> 00:01:33.400
Let's go to make sure that the structure is correct.

24
00:01:33.400 --> 00:01:37.560
User inside of our message item.

25
00:01:37.580 --> 00:01:40.370
So that's our first page and we should see that this looks good.

26
00:01:40.370 --> 00:01:42.540
Can't actually see a delete button for that.

27
00:01:42.650 --> 00:01:44.670
If we do it from testing that looks great.

28
00:01:44.840 --> 00:01:45.460
What's lock out.

29
00:01:45.450 --> 00:01:46.400
What's up.

30
00:01:46.430 --> 00:01:47.930
Put in some information here.

31
00:01:49.280 --> 00:01:52.440
It's put in a password and a user name.

32
00:01:52.750 --> 00:01:54.610
And here looks like usernames are taken.

33
00:01:54.610 --> 00:01:58.240
So let's change the username and let's go out and the message.

34
00:01:58.360 --> 00:02:04.180
We can call this hello and inside if you're we're the only person who can delete this message.

35
00:02:04.270 --> 00:02:06.350
And that looks really good.

36
00:02:06.400 --> 00:02:10.950
We're going to we're going next is styling this application to make it look just a little bit better.

37
00:02:11.110 --> 00:02:16.240
And then we're going to leave a lot of the functionality off to you to edit messages to follow other

38
00:02:16.240 --> 00:02:17.020
people.

39
00:02:17.660 --> 00:02:22.100
And what we've done is architected a system that allows us to scale this application while making API

40
00:02:22.100 --> 00:02:24.180
calls easily with a good folder structure.

41
00:02:25.460 --> 00:02:28.630
So in the next section we'll do a little bit of styling and talk about the.
