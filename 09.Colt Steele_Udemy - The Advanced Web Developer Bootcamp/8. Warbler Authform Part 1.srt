1
00:00:01,370 --> 00:00:07,220
All right it's time to start adding a little bit routeing to sign up and log in functionality.

2
00:00:07,590 --> 00:00:09,990
And this is where things are going to get a little bit trickier.

3
00:00:10,650 --> 00:00:14,640
So let's make sure that we have a component to sign in and sign up users.

4
00:00:14,760 --> 00:00:20,930
So we want to try to do here is just make one single component that we'll call off or call that form

5
00:00:23,040 --> 00:00:29,000
such as So we want make sure we use the same component for logging in and signing up so we don't have

6
00:00:29,000 --> 00:00:30,740
to duplicate all that functionality.

7
00:00:31,580 --> 00:00:35,030
So when we go to this form it's they're going to allow us to sign up or log in.

8
00:00:35,270 --> 00:00:39,990
So we use a little bit of conditional logic if the user has tried to sign up or logging.

9
00:00:40,170 --> 00:00:42,730
So routing logic is going to help us out with that.

10
00:00:42,830 --> 00:00:49,530
Let's go to our mangy ass and have a couple or else we'll had a route that is going to go to an exact

11
00:00:49,530 --> 00:00:52,920
path again of slash seinen

12
00:00:55,600 --> 00:00:56,570
seinen.

13
00:00:56,770 --> 00:00:59,800
We're going to render it component with some props.

14
00:00:59,800 --> 00:01:08,030
So just like we did before we run a function with props and here will render a certain component just

15
00:01:08,030 --> 00:01:09,310
watch your syntax inside here.

16
00:01:09,320 --> 00:01:12,030
It's a little bit tricky with those curly braces and so on.

17
00:01:13,050 --> 00:01:16,120
So inside of here we're going to return our offering.

18
00:01:16,520 --> 00:01:18,650
So let's turn that off one component.

19
00:01:19,700 --> 00:01:22,040
Which is going to contain a couple of props.

20
00:01:22,040 --> 00:01:25,050
We don't have this form yet but we'll do that in a bit.

21
00:01:25,130 --> 00:01:28,580
So let's pass in all the props that we're getting especially from the Riak router that's going to be

22
00:01:28,580 --> 00:01:31,080
helpful as well as some additional props.

23
00:01:31,450 --> 00:01:40,220
Let's Adsum props like a button text which will say loggin will also have a heading.

24
00:01:40,370 --> 00:01:41,580
It's going to say welcome back.

25
00:01:41,780 --> 00:01:44,460
And these will be dependent on the kind of form that we're rendering.

26
00:01:45,340 --> 00:01:47,150
We're adding some sensible defaults here.

27
00:01:47,170 --> 00:01:49,190
So we load a specific component.

28
00:01:49,540 --> 00:01:53,260
We don't have too much of a problem displaying whatever button text and heading are depending on if

29
00:01:53,260 --> 00:01:57,820
they're trying to sign up or log in inside a sign up will change what these values are.

30
00:01:59,890 --> 00:02:04,230
So based on these routes we can determine the text that we want on the page.

31
00:02:04,270 --> 00:02:08,190
So it is a me over here just like it has no corresponding tag.

32
00:02:08,620 --> 00:02:13,620
So the did does actually have a closing tag which is closing but the route is not closing.

33
00:02:15,050 --> 00:02:20,750
So we see that nice auto format and we're actually going to copy this route and it's going to be very

34
00:02:20,750 --> 00:02:21,500
similar.

35
00:02:21,500 --> 00:02:24,290
So what changes for sign up.

36
00:02:24,470 --> 00:02:30,450
We're going to have some props as well but we'll change our button text which is something like sign

37
00:02:30,450 --> 00:02:35,960
me up and a heading that once a welcome back it'll say something like join warbler today.

38
00:02:40,350 --> 00:02:43,330
So we have here is really just some boilerplate for an offer.

39
00:02:44,420 --> 00:02:47,180
It's now time to actually start building this software.

40
00:02:47,220 --> 00:02:51,420
We're not worrying about errors or if you submitted incorrectly or if you're like Generally that's for

41
00:02:51,420 --> 00:02:52,270
another time.

42
00:02:52,680 --> 00:02:55,150
Let's build this up piece by piece.

43
00:02:55,200 --> 00:02:56,360
So when is this form.

44
00:02:56,370 --> 00:03:06,130
I have to import all form from data Flash components flash or so let's go see this.

45
00:03:06,400 --> 00:03:09,760
And let's go back and see what our actual page looks like.

46
00:03:09,760 --> 00:03:15,790
And actually before we do that let's go rename this component to our capital form and make sure that

47
00:03:15,790 --> 00:03:21,220
we rename that file to all four.

48
00:03:21,720 --> 00:03:23,730
So let's go make this component.

49
00:03:24,570 --> 00:03:26,710
So what do we need inside of our off arm component.

50
00:03:27,030 --> 00:03:30,760
So this is actually going to need some Riak state because we're only building a form and the inputs

51
00:03:30,810 --> 00:03:33,300
we want to have control over.

52
00:03:33,320 --> 00:03:37,040
So let's import react and the structure component from re-act

53
00:03:41,040 --> 00:03:47,540
will also make a class called a form that's going to extend re-act component or just components since

54
00:03:47,540 --> 00:03:49,090
we destruction it.

55
00:03:49,160 --> 00:03:56,300
So if we'd like to export this as the default just makes everybody on correctly and we'll make a constructor

56
00:03:56,480 --> 00:04:03,820
in here we'll pass in some props we'll call Ron Krasik any parent props Mozart was busy and there are

57
00:04:03,820 --> 00:04:06,210
lots of more modern ways of creating your initial state.

58
00:04:06,310 --> 00:04:09,020
But we're just going to start with what we've seen before is keep it real simple.

59
00:04:10,060 --> 00:04:18,120
So it has some standard default state an email username password and some kind of profile image.

60
00:04:18,260 --> 00:04:22,850
These all as empty strings and we might not actually need all of these properties and state depending

61
00:04:22,850 --> 00:04:25,000
on the kind of form that we render but that's OK.

62
00:04:25,030 --> 00:04:26,730
We're going to we just have a little bit of anti-state

63
00:04:30,370 --> 00:04:36,850
now we'll start rendering this component so let's render make sure that's inside of our class so will

64
00:04:36,850 --> 00:04:38,800
render and inside of here.

65
00:04:39,130 --> 00:04:40,000
What's the structure.

66
00:04:40,000 --> 00:04:42,070
A couple things from state.

67
00:04:42,210 --> 00:04:46,730
Grab you email username password and profile image.

68
00:04:46,750 --> 00:04:55,950
You are all Magreb that from this that's the we're then going to turn a component inside of this component.

69
00:04:57,030 --> 00:05:03,520
We're going to return some GSX some of the acts what's going make sure first that I have this set to.

70
00:05:03,690 --> 00:05:06,400
So I get that Emmets syntax and what's gone right.

71
00:05:06,420 --> 00:05:08,730
A little bit of GSX.

72
00:05:08,790 --> 00:05:14,160
So this is pretty boilerplate in terms of a form will have to contain everything and a class of row

73
00:05:14,700 --> 00:05:16,650
justify content.

74
00:05:16,870 --> 00:05:22,650
And the center as well as tech center so ease and bootstrap styling to get our form in the center and

75
00:05:22,650 --> 00:05:26,870
the inputs in the center as well as any text inside that looks good.

76
00:05:27,300 --> 00:05:30,410
We'll also put this inside of a div called Mt 6.

77
00:05:30,540 --> 00:05:32,600
So we want to center those columns right off the bat.

78
00:05:35,110 --> 00:05:36,730
Inside let's make a form.

79
00:05:37,690 --> 00:05:45,150
And when this form is submitted we're going to run some function that will call this that handles so

80
00:05:45,160 --> 00:05:47,200
that will make this in a Lovat

81
00:05:50,130 --> 00:05:51,280
inside of this form.

82
00:05:51,360 --> 00:05:56,040
We're going to add in each two and here we'll have whatever the prompt is of I've had it.

83
00:05:56,370 --> 00:05:57,760
But what is adding.

84
00:05:58,200 --> 00:06:03,690
Well heading comes from this that prompts that we pass down from our main J s component but we have

85
00:06:03,690 --> 00:06:06,340
to structure them from prop's if we want to write it that way.

86
00:06:06,600 --> 00:06:09,230
So as a heading what are their proofs that we get.

87
00:06:09,300 --> 00:06:11,170
We got a button text as well.

88
00:06:11,310 --> 00:06:14,150
So let's go make sure that we grab a button text as well.

89
00:06:15,050 --> 00:06:20,470
And we're going to structure that from this props so that we can use heading inside of there without

90
00:06:20,470 --> 00:06:23,400
prefixing everything with this thought process that looks good.

91
00:06:25,070 --> 00:06:31,600
Inside it's easy to make a couple of labels and make a label for you know we'll give out the text of

92
00:06:31,660 --> 00:06:38,360
you know and we'll also make sure after the label that we have an input that corresponds to that label

93
00:06:38,810 --> 00:06:43,760
and then this input we're going to add quite a few props we'll give it a class name a form control.

94
00:06:43,760 --> 00:06:50,770
This is used you have to get that full with was also had an ID of email to match up with the for in

95
00:06:50,780 --> 00:06:54,450
our label want to give us an email that's important for our stay.

96
00:06:56,280 --> 00:07:01,350
We'll get this in onchange property of a function that will call this that handle change well into the.

97
00:07:01,370 --> 00:07:05,560
And a little bit I will give this a value property of email.

98
00:07:05,950 --> 00:07:10,780
So if it exists in the case of any kind of errors we'll still be able to pre-populated that with whatever

99
00:07:10,780 --> 00:07:12,090
the email is at the moment.

100
00:07:16,770 --> 00:07:20,730
So this is our e-mail and put that looks good.

101
00:07:20,910 --> 00:07:28,890
It's also make sure that we add another label and input but this one's going to be for a password we

102
00:07:28,920 --> 00:07:33,990
call that password as the text of the label is going to be password to match up with the label name

103
00:07:34,000 --> 00:07:35,410
is going to be password as well.

104
00:07:35,410 --> 00:07:38,170
We really want to make sure that the type is not text the type his password.

105
00:07:38,230 --> 00:07:41,740
So we don't see the password as the users typing in.

106
00:07:41,870 --> 00:07:44,340
We don't want to value here so that we put in a password again.

107
00:07:44,360 --> 00:07:45,290
We don't either.

108
00:07:45,410 --> 00:07:48,100
But we still want onchange.

109
00:07:48,200 --> 00:07:53,130
So in the next video we'll add some code to make sure the handle changes working and handles it is working.

110
00:07:53,300 --> 00:07:57,200
And then make sure we add logic to determine those extra two inputs correctly.
