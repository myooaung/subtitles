1
00:00:00,180 --> 00:00:00,620
OK.

2
00:00:00,640 --> 00:00:01,400
Welcome back.

3
00:00:01,680 --> 00:00:06,490
So we're going to start off by just getting our Express up to serve a simple aged him I'll file.

4
00:00:06,780 --> 00:00:10,590
So right now our route route has this response that we get.

5
00:00:10,650 --> 00:00:11,890
Hello from the route route.

6
00:00:12,060 --> 00:00:18,120
And then our API is located here at slash API slash to slash whatever else.

7
00:00:18,180 --> 00:00:25,050
So eventually we want this page to be an HMO page with a bunch of C Ss and a bunch of javascript to

8
00:00:25,050 --> 00:00:27,320
create our single page to do list.

9
00:00:27,410 --> 00:00:28,670
So it should show up here.

10
00:00:28,890 --> 00:00:33,690
And the first step is to just get it to respond with a page and aged him up a page.

11
00:00:33,690 --> 00:00:39,960
So rather than rest send We're going to make a couple of changes we want to be able to do a rez send

12
00:00:40,290 --> 00:00:45,870
file and then the name of our file which for now will call index dot h t m l.

13
00:00:45,900 --> 00:00:47,280
So it doesn't exist yet.

14
00:00:47,400 --> 00:00:49,560
So let's go make this file.

15
00:00:49,560 --> 00:00:57,060
We're going to make a View's directory new folder called it views and then here we going to make a new

16
00:00:57,060 --> 00:01:05,680
file just called index HMO and we'll start off with this is the index page.

17
00:01:05,910 --> 00:01:12,450
And how about maybe a paragraph that just says to do list will go here.

18
00:01:12,450 --> 00:01:13,090
Perfect.

19
00:01:13,110 --> 00:01:13,850
That's right off the bat.

20
00:01:13,860 --> 00:01:19,980
This actually won't work and that's because Express doesn't know where to find this file so appear are

21
00:01:19,980 --> 00:01:22,910
going to add a second line app to use.

22
00:01:23,260 --> 00:01:33,480
And then in here we do express dot static and then parentheses double underscore dir name.

23
00:01:33,480 --> 00:01:39,990
So that's a variable that holds the current directory name plus slash views.

24
00:01:40,530 --> 00:01:41,870
And now we should be good to go.

25
00:01:42,180 --> 00:01:44,960
So basically by referencing index it aged him.

26
00:01:45,660 --> 00:01:50,520
It actually is referencing our current directory slash views slash index study him.

27
00:01:51,140 --> 00:01:55,960
And now everything should work well tested out.

28
00:01:56,170 --> 00:01:57,460
Refresh our page.

29
00:01:57,460 --> 00:01:58,070
There we go.

30
00:01:58,210 --> 00:02:00,120
So our content is now showing up.

31
00:02:00,490 --> 00:02:03,970
So next let's get a little bit of CSSA working.

32
00:02:03,970 --> 00:02:09,490
So what we want to be able to do when to remove this for now or I'll cut it out and I'm going to add

33
00:02:09,570 --> 00:02:19,300
ahead and then we'll add our body so our body will have each one and our paragraph and then our head

34
00:02:19,390 --> 00:02:22,070
is where we might want to link to a stylesheet.

35
00:02:22,270 --> 00:02:25,860
Well let's say that we make a stylesheet and let's call it apt.

36
00:02:25,910 --> 00:02:28,290
Success doesn't exist yet.

37
00:02:28,600 --> 00:02:30,750
So where do we go to put this.

38
00:02:31,180 --> 00:02:32,120
Well it's up to us.

39
00:02:32,140 --> 00:02:39,010
But the standardized way of doing this is to make another directory and we're going to call this public

40
00:02:40,920 --> 00:02:47,640
and then in public we're going to make our file where we'll have to see assess and we'll also be able

41
00:02:47,640 --> 00:02:50,470
to put our appestat J.S. there in just a moment.

42
00:02:50,670 --> 00:02:51,970
So we'll start off with this.

43
00:02:52,230 --> 00:02:57,280
It's still not going to work and that's because we need to do the same thing we did here once again.

44
00:02:57,390 --> 00:02:59,810
But now we need to do it for public.

45
00:03:00,120 --> 00:03:06,590
So we'll do use express that static public and if we restart the server

46
00:03:09,630 --> 00:03:11,400
andwell we won't see anything.

47
00:03:11,400 --> 00:03:19,270
Let's go to our APS-C SS and add in how we make all H-1 purple the best most under-rated color.

48
00:03:19,400 --> 00:03:24,530
And I refresh now our CSSA is connected and we have this purple H-1.

49
00:03:24,570 --> 00:03:29,390
So one thing you might be wondering is why do I use this dear name here and not here.

50
00:03:29,730 --> 00:03:31,150
And there is a difference.

51
00:03:31,200 --> 00:03:32,890
Both of them work in this case.

52
00:03:33,090 --> 00:03:39,780
But if we tried to run this if we tried to start a server up from another directory so not exactly inside

53
00:03:39,780 --> 00:03:45,320
of our API folder but we were somewhere else then this would not work.

54
00:03:45,330 --> 00:03:53,310
So instead we wanted to use dear name at all times just to be as explicit as possible so that in any

55
00:03:53,310 --> 00:03:59,490
scenario it will know how to find the public folder or the public directory just like it does with views.

56
00:03:59,490 --> 00:04:02,880
So if I restart shouldn't be any change.

57
00:04:02,880 --> 00:04:03,840
Everything still works.

58
00:04:03,840 --> 00:04:08,490
So just to reiterate that this will always work what wherever we're actually starting the server up

59
00:04:08,490 --> 00:04:11,830
from because it will start with the current directory that we're starting the server in.

60
00:04:11,970 --> 00:04:20,080
So we could be in our home main directory appear and referencing Tutu's API index J.S. down here and

61
00:04:20,070 --> 00:04:23,580
it will still be able to access the public directory in the views directory.

62
00:04:23,580 --> 00:04:26,270
So here we're just telling express disserve these static files.

63
00:04:26,280 --> 00:04:27,540
Here's the path to get there.

64
00:04:27,540 --> 00:04:30,920
Lastly let's add a javascript file.

65
00:04:31,170 --> 00:04:36,270
So if we have a longer app or a larger application we might want to have a script's directory and a

66
00:04:36,270 --> 00:04:41,850
Stiles directory but we're only going to have one style sheet and one javascript file as far as our

67
00:04:41,940 --> 00:04:43,230
front end Javascript.

68
00:04:43,230 --> 00:04:46,470
So I'm just going to make an app dot J.S..

69
00:04:46,650 --> 00:04:50,470
We don't need to worry about anything else then in there.

70
00:04:50,700 --> 00:04:54,400
Let's start off nice and simple with an alert.

71
00:04:54,660 --> 00:05:03,600
Hi from J.S. OK and then we'll go to our index page Timo and at the bottom of the body which can include

72
00:05:03,600 --> 00:05:10,680
a script with source equal to app J.S. which will work because it's in the public directory and everything

73
00:05:10,680 --> 00:05:14,020
in the public directory is being served as a static file.

74
00:05:14,040 --> 00:05:21,180
So we have access to it in our index page to restart the server refresh the page and we get high from

75
00:05:21,180 --> 00:05:21,450
apps.

76
00:05:21,480 --> 00:05:22,100
Yes.

77
00:05:22,170 --> 00:05:23,860
So we have all the pieces in place.

78
00:05:23,880 --> 00:05:28,920
We have each time a file being served and it itself is linking to a C S S file.

79
00:05:28,920 --> 00:05:31,430
So we're getting our styles and a javascript file.

80
00:05:31,470 --> 00:05:34,400
So we're getting this beautiful alert message.

81
00:05:34,870 --> 00:05:35,410
OK.

82
00:05:35,700 --> 00:05:40,380
The last thing I'll point out because I know that this will come up is that if you're tired of restarting

83
00:05:40,380 --> 00:05:47,070
your server which it does get annoying there is a package we can use called gnomon so we can do NPM

84
00:05:47,280 --> 00:05:57,000
install dash G which stands for Global node mom like that and what this will do is basically watch for

85
00:05:57,000 --> 00:06:02,340
changes in your code and automatically restart the server for you behind the scenes so you don't have

86
00:06:02,340 --> 00:06:03,900
to stop and start the server.

87
00:06:04,020 --> 00:06:05,120
It will do it for you.

88
00:06:05,340 --> 00:06:09,710
And so you can make changes and just refresh your page and everything will work.

89
00:06:09,720 --> 00:06:13,950
All we do is instead of node file then we do gnomon indexed.

90
00:06:14,040 --> 00:06:17,980
Yes and now you'll see it's watching our files.

91
00:06:18,090 --> 00:06:23,940
And if something changes let's say I changed the name of this to index 2 which doesn't exist and I saved

92
00:06:23,940 --> 00:06:30,290
the file you can see it restarted and it started back again and I didn't have to do it myself.

93
00:06:30,320 --> 00:06:30,770
OK.

94
00:06:30,840 --> 00:06:31,770
So we'll leave off there.

95
00:06:31,830 --> 00:06:34,290
We have everything in place to now start working on our app.
