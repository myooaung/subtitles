WEBVTT
1
00:00:01.170 --> 00:00:09.330
So we left off being able to add things to our to do list like eat dinner and sleep and we can remove

2
00:00:09.330 --> 00:00:10.560
those specific to.

3
00:00:10.740 --> 00:00:15.260
But there's one thing that we're doing which we can actually refactor to make a little bit cleaner.

4
00:00:15.390 --> 00:00:18.930
And you may be wondering this entire time what about these action creators.

5
00:00:18.930 --> 00:00:21.420
And here's where we're going to answer that question.

6
00:00:21.420 --> 00:00:27.480
So what I want to quickly do to recap is through a debugger in our render method in a Seabass and I'm

7
00:00:27.480 --> 00:00:32.940
going to refresh the page and I just want to make sure that we understand where this dispatch function

8
00:00:33.000 --> 00:00:34.300
is coming from.

9
00:00:34.320 --> 00:00:40.200
We take a look at our component and we take a look at prop's we can see that to Doo's exists because

10
00:00:40.200 --> 00:00:47.040
we have mapped redux state onto prop's that's coming from this wonderful function but we don't dispatch.

11
00:00:47.230 --> 00:00:53.780
Well anytime that you connect each component to the redux or you always get access to a dispatch function.

12
00:00:53.800 --> 00:00:58.460
Your component is able to then dispatch actions just like that relaxed or what.

13
00:00:58.890 --> 00:01:04.710
But in our case if you see the way that we're running this specific code to dispatch all of our actions

14
00:01:05.190 --> 00:01:08.970
there's a lot of work that's necessary to do this this thought process that dispatch them we put in

15
00:01:08.970 --> 00:01:11.260
the object and we put in all the values there.

16
00:01:11.430 --> 00:01:13.610
Well we have an easier way to do that.

17
00:01:13.800 --> 00:01:19.980
And the way to do that is to actually pass a second function here interconnect and that function is

18
00:01:19.980 --> 00:01:30.060
traditionally called Map dispatch to perhaps and map dispatch to prop's excerpts function which we can

19
00:01:30.060 --> 00:01:31.200
call dispatch.

20
00:01:31.200 --> 00:01:36.270
Inside here this is the function is going to allow us to dispatch actions and just like before it returns

21
00:01:36.270 --> 00:01:39.890
an object accept all of the keys here are actually functions.

22
00:01:39.990 --> 00:01:47.490
So we are going to make a specific function call had to do and it is going to accept some kind of task

23
00:01:48.240 --> 00:02:00.440
and it's going to dispatch an action with the type of ad to do and some kind of task and we'll put in

24
00:02:00.500 --> 00:02:08.180
MAP dispatched props right here I'm going to see this code and instead of this stop props that dispatch

25
00:02:08.210 --> 00:02:09.890
we're going to see what we have instead.

26
00:02:09.950 --> 00:02:12.830
Because we have mapped dispatched to props.

27
00:02:13.100 --> 00:02:17.540
So let's go hit this debugger and take a look at this that prompts and then we take a look at the start

28
00:02:17.540 --> 00:02:17.950
process.

29
00:02:17.960 --> 00:02:19.260
We don't have dispatch anymore.

30
00:02:19.280 --> 00:02:20.440
We have to do.

31
00:02:20.720 --> 00:02:22.540
We'll take a look back at what that code did.

32
00:02:22.670 --> 00:02:27.850
But we basically said hey instead of a generalized dispatch function just give me an add to do function

33
00:02:28.530 --> 00:02:31.130
what we can also do is add one for a move to do.

34
00:02:31.130 --> 00:02:35.430
But this is also going to be a bit tricky because then we have to add all this code right here.

35
00:02:35.630 --> 00:02:40.440
Well thankfully we already have a function that's doing all of this inside of action creators.

36
00:02:40.550 --> 00:02:42.140
It's called add to do.

37
00:02:42.500 --> 00:02:46.450
So what we're going to do is import those two functions.

38
00:02:46.490 --> 00:02:53.790
We're going to import had to do and remove to do from that slash action and creators.

39
00:02:53.990 --> 00:02:56.350
Now what are we going to do with these two functions.

40
00:02:56.480 --> 00:03:03.420
We are going to place them directly onto props instead of this generalized map dispatched to prop's

41
00:03:03.710 --> 00:03:07.700
we are going to take those two functions and place them in an object.

42
00:03:07.700 --> 00:03:12.830
Remember map dispatched to prop's has to return an object and in that object we need to have keys which

43
00:03:12.830 --> 00:03:17.570
are functions those functions are action creators and we brought them in right here.

44
00:03:17.780 --> 00:03:25.280
So I'm going to grab at to do and remove to do and place them right here going to save this code refresh

45
00:03:25.280 --> 00:03:30.240
the page so we get to the next debugger and we take a look at this thought probs we now have our two

46
00:03:30.240 --> 00:03:39.740
do's from real estate and are removed to do an add to do function from our action creators if we try

47
00:03:39.740 --> 00:03:41.090
to run this code things are going to break.

48
00:03:41.090 --> 00:03:45.470
So what we need to refactor is instead of this thought process that dispatch we're going to use this

49
00:03:45.500 --> 00:03:50.040
that props that removed to do with an ID and clean that all up.

50
00:03:50.250 --> 00:03:55.790
And what are we going to do for adding it to do this that props that to do.

51
00:03:56.780 --> 00:04:03.250
And instead of this type and all that we can simply just put in whatever the user typed in in the form.

52
00:04:03.320 --> 00:04:05.990
So let's see let's try it out again.

53
00:04:06.740 --> 00:04:08.830
Let's go eat and sleep.

54
00:04:08.960 --> 00:04:11.130
Looks like we can add successfully How about leading.

55
00:04:11.150 --> 00:04:12.520
Same exact thing.

56
00:04:12.530 --> 00:04:18.800
So what we've done here is we've used the second parameter to connect which also has to return an object.

57
00:04:18.800 --> 00:04:21.650
And we just put in an object with a bunch of keys.

58
00:04:21.650 --> 00:04:23.410
These are simply functions.

59
00:04:23.420 --> 00:04:26.270
The key is to do and the value is to do.

60
00:04:26.320 --> 00:04:28.010
Where are those functions coming from.

61
00:04:28.010 --> 00:04:29.860
Those are our action creators.

62
00:04:29.870 --> 00:04:31.520
That's what we're exporting out.

63
00:04:31.520 --> 00:04:36.440
We're simply just exporting out a function that returns this entire object.

64
00:04:36.620 --> 00:04:42.170
This entire object with a special type of something is called an action any object with a key of type

65
00:04:42.260 --> 00:04:45.860
that is used in redux is going to be sent as an action.

66
00:04:45.940 --> 00:04:48.020
We always need that key of type.

67
00:04:48.050 --> 00:04:51.020
So this is the second parameter to connect.

68
00:04:51.050 --> 00:04:56.000
This is also called Map dispatched to prop's you won't find yourself writing a map dispatched to prop's

69
00:04:56.000 --> 00:05:01.350
function you'll usually find yourself importing action creators and using them directly right here.

70
00:05:01.490 --> 00:05:06.020
On the other hand you will find yourself reading a map state hobs function because that's important

71
00:05:06.020 --> 00:05:10.960
to have in most of your components are usually going to want some kind of redux state in your components

72
00:05:10.970 --> 00:05:14.000
when those components need the redux state.

73
00:05:14.060 --> 00:05:15.070
One last thing to note.

74
00:05:15.080 --> 00:05:20.530
It's important to understand we don't really need redux state in our to do component.

75
00:05:20.710 --> 00:05:23.120
This is simply just a stateless functional component.

76
00:05:23.120 --> 00:05:29.450
So when you start using redox be very careful which components actually need to know about redux state.

77
00:05:29.860 --> 00:05:34.880
You're going to also see there are differences between your reac state like what a user is typing in

78
00:05:34.970 --> 00:05:39.980
uniform versus the redock state which is usually a bit higher level that you're going to share amongst

79
00:05:39.980 --> 00:05:41.010
different components.

80
00:05:41.180 --> 00:05:46.460
So a good rule of thumb is if a component is only using a bit of State for that component specifically

81
00:05:46.760 --> 00:05:50.040
you might not need to read Occy you might just need a little bit of state.

82
00:05:50.240 --> 00:05:55.130
But if you have some data that needs to be shared amongst different components redux is a really good

83
00:05:55.130 --> 00:05:57.640
place to put that one centralized place.

84
00:05:57.710 --> 00:06:01.080
And remember any component can connect to the Reebok store.

85
00:06:01.250 --> 00:06:03.180
If you use this connect function.

86
00:06:03.500 --> 00:06:05.420
So that's all for map dispatched approx.

87
00:06:05.490 --> 00:06:09.530
And the next video we're going to bring in the re-act router we're going to move our new to do form

88
00:06:09.530 --> 00:06:14.090
into a separate component and then we're going to start adding a back end and introduce asynchronous

89
00:06:14.090 --> 00:06:15.600
actions with redox stunk.

90
00:06:15.770 --> 00:06:17.230
I'll see you in the next screen test.
