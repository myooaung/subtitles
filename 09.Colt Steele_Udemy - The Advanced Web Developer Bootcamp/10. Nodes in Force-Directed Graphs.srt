1
00:00:00,420 --> 00:00:01,400
Welcome back.

2
00:00:01,650 --> 00:00:07,760
In this video we'll learn about the basics of building forced directed graphs with D-3.

3
00:00:07,930 --> 00:00:14,380
Before we look at any code let's unpack some of the terminology a force directed graph is a way to visualize

4
00:00:14,380 --> 00:00:17,070
relationships between nodes in a graph.

5
00:00:17,140 --> 00:00:20,800
It can be helpful for trying to gain insights into a network.

6
00:00:20,860 --> 00:00:26,170
It's called the force directed graph because you can simulate forces acting on the nodes so so they

7
00:00:26,170 --> 00:00:28,730
move around in response to one another.

8
00:00:28,810 --> 00:00:34,690
Indeed three the four simulation works by calculating velocities and positions for each node based on

9
00:00:34,690 --> 00:00:37,790
the forces that you configure.

10
00:00:37,840 --> 00:00:43,000
If you look through the examples page on the D-3 website you can find many examples of force directed

11
00:00:43,000 --> 00:00:44,290
graphs.

12
00:00:44,410 --> 00:00:48,460
The first one is a visualization of the characters from the book Lynda's or up.

13
00:00:48,760 --> 00:00:55,270
Each node represents a character and the edges tied together characters that appear in the same chapter.

14
00:00:55,420 --> 00:01:01,360
As with so many of the visualizations we've seen D-3 is doing a lot of the work for us in terms of positioning

15
00:01:01,360 --> 00:01:04,610
these nodes and moving them in relation to one another.

16
00:01:04,830 --> 00:01:10,920
But in order to harness the tools the D-3 provides There are a few underlying concepts we need to understand.

17
00:01:12,020 --> 00:01:17,160
In order to build some force directed graphs from the ground up let's start with a basic example.

18
00:01:17,480 --> 00:01:21,250
Here's a link to some code will be working with during this video.

19
00:01:21,330 --> 00:01:24,780
I've already created some starter code for this project.

20
00:01:24,780 --> 00:01:30,420
I've got to assemble a DML file along with a minimal amount of C S S in my app J s.

21
00:01:30,450 --> 00:01:32,380
I've taken care of some of the basics.

22
00:01:32,570 --> 00:01:38,580
I've set a width and height for my SPG created an array of no data join there's no data to an empty

23
00:01:38,580 --> 00:01:44,440
D-3 selection appended some circles and added some styles based on the no data.

24
00:01:44,490 --> 00:01:48,990
In general when you're working with a force directed graph a node will typically just correspond to

25
00:01:48,990 --> 00:01:54,170
some data point but it's the relationships between the nodes as visualized by links.

26
00:01:54,240 --> 00:01:58,360
That makes a force directed graph interesting to look at.

27
00:01:58,380 --> 00:02:02,970
For now though let's just focus on the nose when we open this page in Chrome.

28
00:02:02,970 --> 00:02:04,620
There's not much going on.

29
00:02:04,890 --> 00:02:06,240
This shouldn't be too surprised.

30
00:02:06,390 --> 00:02:09,690
We didn't even set X or C-y attributes on these circles.

31
00:02:09,690 --> 00:02:13,320
So everything is crammed up into the upper left corner of the SVGA.

32
00:02:13,800 --> 00:02:22,020
Let's fix this by creating our first for simulation to create a simulation in D-3 we use the 3.4 simulation

33
00:02:22,020 --> 00:02:23,250
method.

34
00:02:23,270 --> 00:02:29,830
D-3 that for simulation accepts an array of nodes and begins to simulate forces acting on those notes.

35
00:02:29,850 --> 00:02:34,560
You can also update the array of nodes you want to attach to the simulation at any time by calling the

36
00:02:34,560 --> 00:02:37,960
nodes method on a simulation.

37
00:02:37,970 --> 00:02:43,490
Let's create our first simulation passing in our nodes and storing the result in a variable called simulation

38
00:02:44,770 --> 00:02:47,570
Well that was anti-climactic.

39
00:02:47,580 --> 00:02:51,880
It may look like nothing has changed but in fact there's an important difference.

40
00:02:52,050 --> 00:02:56,760
If we select one of our circles with D-3 and look at the data attached to it we have a bunch of new

41
00:02:56,760 --> 00:03:05,310
properties index the X the y x and y these properties have been provided to us by the simulation.

42
00:03:05,640 --> 00:03:11,520
The x and B Y record the velocity of the node based on the forces acting on an x and y record the position

43
00:03:11,640 --> 00:03:16,030
based on the nodes current position and its velocity.

44
00:03:16,050 --> 00:03:18,820
Still though there isn't much happening in this situation.

45
00:03:19,350 --> 00:03:24,830
But that's because by default simulations have no forces on in order to get our nodes moving on the

46
00:03:24,830 --> 00:03:25,400
page.

47
00:03:25,430 --> 00:03:28,490
We need to add some forces to our simulation.

48
00:03:28,490 --> 00:03:31,340
There are a few different types of forces you can add.

49
00:03:31,430 --> 00:03:36,440
The first one we'll look at is a center force which tugs on the nodes so that their average position

50
00:03:36,440 --> 00:03:43,710
lies in the designated center create a center for us you can use the D-3 dot force center method which

51
00:03:43,710 --> 00:03:49,610
takes in the coordinates of wayed like this force to pull the nodes by default for center will pomos

52
00:03:49,760 --> 00:03:50,810
towards 0 0.

53
00:03:50,850 --> 00:03:57,210
The origin of the SVGA to this force we need to use the force method on the simulation.

54
00:03:57,480 --> 00:03:59,860
The force method takes two arguments.

55
00:03:59,860 --> 00:04:04,540
The first is the name you'd like to give the force and the second is a description of that force using

56
00:04:04,540 --> 00:04:07,710
the theory you can name the force whatever you want.

57
00:04:07,720 --> 00:04:11,210
This is just how you can refer to the force later on if you need to access it.

58
00:04:12,390 --> 00:04:17,460
I'll call this force center and set it equal to a new center force passing in the middle point of the

59
00:04:17,460 --> 00:04:19,450
SVGA.

60
00:04:19,450 --> 00:04:24,480
Now we should be good to go right well not quite.

61
00:04:24,560 --> 00:04:28,220
It turns out there's one more thing we need to do to get this simulation working.

62
00:04:28,220 --> 00:04:32,960
We need to write our own functions specifying how the positions of our nodes should update based on

63
00:04:32,960 --> 00:04:36,510
the velocities and positions calculated by the simulation.

64
00:04:36,920 --> 00:04:43,510
Then we'll need to pass our function in as a callback to the method for the simulation similar to date

65
00:04:43,520 --> 00:04:48,510
pre-selections and transitions D-3 force layouts simulations have an on method.

66
00:04:48,790 --> 00:04:52,160
However there are only two types of events to listen for.

67
00:04:52,180 --> 00:04:57,790
One is a tick method which gets called after every tick of the simulations internal timer.

68
00:04:57,810 --> 00:05:01,980
The second is and which is called the simulations timer stops.

69
00:05:02,260 --> 00:05:07,330
We'll listen for that ticket after every tick of the timer we'll grab our selection of nodes and update

70
00:05:07,330 --> 00:05:13,750
to see X and see y properties based on the x and y properties assigned by the simulation.

71
00:05:13,900 --> 00:05:18,220
Finally our noses have moved to the center of the SPG.

72
00:05:18,280 --> 00:05:19,940
They're still pretty motionless though.

73
00:05:20,230 --> 00:05:24,490
It turns out that the center force isn't terribly compelling visually even though it's really helpful

74
00:05:24,490 --> 00:05:27,160
in making sure our visualization stays centered.

75
00:05:27,910 --> 00:05:34,840
Before adding Lintz to this visualization Let's take a look at one more force D-3 dot for anybody.

76
00:05:34,840 --> 00:05:39,580
This method adds interaction between all nodes in the simulation by making them attract or repel one

77
00:05:39,580 --> 00:05:45,580
another by default the many body force is a repulsive force meaning that it causes the nodes to push

78
00:05:45,580 --> 00:05:47,100
away from one another.

79
00:05:47,410 --> 00:05:52,260
But you can change this by calling the strength method on the force and passing in a different value.

80
00:05:52,600 --> 00:05:58,720
Negative strengths correspond to repulsive forces while positive values correspond to attractive forces.

81
00:05:59,010 --> 00:06:06,170
The default strength is negative 30 out of many body force and give it a name of nodes.

82
00:06:06,540 --> 00:06:08,920
Finally something a little more interesting.

83
00:06:10,040 --> 00:06:15,510
The nodes are pulled into the middle by the center force but pushed apart by the many body force.

84
00:06:15,530 --> 00:06:20,870
Notice that if I set the strength to a positive value then the nodes get pulled even more tightly together

85
00:06:20,900 --> 00:06:28,130
into the center of the SVGA this covers the basics of nodes and forces with force and mutations in the

86
00:06:28,130 --> 00:06:31,350
next video will add some links to this graph.

87
00:06:31,530 --> 00:06:32,360
See there.
