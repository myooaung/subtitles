1
00:00:03,400 --> 00:00:05,890
Hello everyone and welcome to this lecture.

2
00:00:05,950 --> 00:00:11,440
I'm super excited because now we're actually getting closer to finish the exercises for functions filters

3
00:00:11,440 --> 00:00:12,660
lambda expressions.

4
00:00:12,670 --> 00:00:18,370
It's really has been kind of a long you know like journey going through all these exercises and going

5
00:00:18,370 --> 00:00:20,320
through the previous exercises as well.

6
00:00:20,410 --> 00:00:21,130
Let's keep going.

7
00:00:21,580 --> 00:00:25,830
So you know I ask you to write a function that takes two values from the user.

8
00:00:26,110 --> 00:00:26,890
OK.

9
00:00:27,040 --> 00:00:29,420
That's actually from a user.

10
00:00:29,620 --> 00:00:31,020
Right.

11
00:00:31,060 --> 00:00:33,040
And some of them up.

12
00:00:33,040 --> 00:00:36,860
And if no values are provided assume a default values of three and 5.

13
00:00:37,450 --> 00:00:38,830
So the actual summation is easy.

14
00:00:38,860 --> 00:00:43,460
But I wanted two guys to remember how to do default values within the function.

15
00:00:43,600 --> 00:00:48,350
So can we do that when I say could define summation.

16
00:00:48,600 --> 00:00:50,860
I'm going to say OK X and Y.

17
00:00:50,860 --> 00:00:51,970
Right.

18
00:00:52,270 --> 00:00:53,200
I'm going to say OK.

19
00:00:53,230 --> 00:00:55,900
Return x plus y.

20
00:00:56,520 --> 00:00:56,800
All right.

21
00:00:56,800 --> 00:00:58,270
Looks easy.

22
00:00:58,420 --> 00:00:58,880
Do.

23
00:00:58,900 --> 00:01:01,930
Going to say okay let's call that function summation.

24
00:01:01,930 --> 00:01:06,450
I'm gonna pass along let's say values of five and seven on that and what we get is twelve.

25
00:01:06,480 --> 00:01:07,950
Okay that's that's easy so far.

26
00:01:08,860 --> 00:01:14,890
So what if for example you know I wanted to let's say call summation without sending any arguments.

27
00:01:14,920 --> 00:01:17,980
If I do this for example I don't send any arguments.

28
00:01:17,980 --> 00:01:19,150
Let's run that then.

29
00:01:19,230 --> 00:01:24,490
Well I don't know I don't know what what you're doing right now because there are no default values.

30
00:01:24,490 --> 00:01:30,940
So in order to set a default values what you could do here and say Okay X equals to four for example

31
00:01:31,780 --> 00:01:37,000
he asked actually for three and five x equals three and Y equals to five.

32
00:01:37,030 --> 00:01:41,260
So when you do this that means you are setting kind of default values.

33
00:01:41,260 --> 00:01:44,040
That means if you run it again you'll get 12.

34
00:01:44,050 --> 00:01:44,350
Right.

35
00:01:44,350 --> 00:01:46,540
Because you actually sent the arguments.

36
00:01:47,170 --> 00:01:53,470
So again if you sent arguments these arguments were going to win obviously but if you don't send anything

37
00:01:53,820 --> 00:01:57,200
all right the default values will going to be we're going to be set.

38
00:01:57,220 --> 00:02:00,400
So let's try it again and again.

39
00:02:00,400 --> 00:02:01,480
And now it's eight.

40
00:02:01,490 --> 00:02:01,860
Why.

41
00:02:01,870 --> 00:02:03,570
Because we didn't send anything.

42
00:02:03,580 --> 00:02:05,150
So you know the assumed OK.

43
00:02:05,260 --> 00:02:10,080
Let's let's take the default values they take 3 and 5 as our default values.

44
00:02:10,150 --> 00:02:11,480
All right.

45
00:02:11,590 --> 00:02:13,330
That was pretty easy question.

46
00:02:13,330 --> 00:02:20,770
Eleven I'm asked to write a script that would prompt the user for a range min max value I mean return

47
00:02:20,800 --> 00:02:22,660
numbers that are divisible by four.

48
00:02:22,810 --> 00:02:25,170
But I'm not multiples of three.

49
00:02:25,180 --> 00:02:26,230
OK let's do it.

50
00:02:26,250 --> 00:02:28,550
So how can we do that.

51
00:02:29,290 --> 00:02:29,940
All right.

52
00:02:29,960 --> 00:02:33,040
That's defined so going to say Min minimum very.

53
00:02:33,040 --> 00:02:38,530
That's again kind of you know like revision review for you guys for the for loops and for if conditions.

54
00:02:38,540 --> 00:02:38,740
Right.

55
00:02:39,160 --> 00:02:51,010
So going to take a minimum let's call it an X score X let's say it's going to say input and we could

56
00:02:51,220 --> 00:03:02,380
enter a mean number right or lower bound I can copy that copy put it here and send that to Max I'm going

57
00:03:02,380 --> 00:03:06,050
to say enter a max number.

58
00:03:06,070 --> 00:03:06,850
All right looks good.

59
00:03:07,510 --> 00:03:11,960
What I could do here is you're going to say okay define my numbers right.

60
00:03:11,980 --> 00:03:15,050
I'm going to set it to simply blank here.

61
00:03:15,700 --> 00:03:16,350
I'm going to say okay.

62
00:03:16,360 --> 00:03:23,890
For i in range between men on the score X and Max on the score x.

63
00:03:23,890 --> 00:03:24,190
Right.

64
00:03:24,200 --> 00:03:35,440
Because remember I'm going to say okay if you found that the number you got is divided by four and the

65
00:03:35,450 --> 00:03:37,440
remainder basically was zero.

66
00:03:37,480 --> 00:03:39,570
That means it's divisible by four.

67
00:03:39,730 --> 00:03:46,490
And if you found that number if you take the numbers you divided by three.

68
00:03:46,510 --> 00:03:46,780
Right.

69
00:03:46,870 --> 00:03:50,040
I'm asking you if they are not divided the multiples of three.

70
00:03:50,170 --> 00:03:55,690
If I divided by three and the remainder was not equal to zero.

71
00:03:55,890 --> 00:03:57,410
Right.

72
00:03:57,790 --> 00:03:59,210
What I could do I'm going to take.

73
00:03:59,220 --> 00:04:04,600
OK let's go ahead and append that number to the actual number satisfies my requirements that append

74
00:04:05,310 --> 00:04:09,430
an append simply my string of pi.

75
00:04:09,720 --> 00:04:10,510
Right.

76
00:04:10,970 --> 00:04:11,920
OK looks good.

77
00:04:11,920 --> 00:04:20,730
And then afterwards I can go ahead here and simply print my numbers.

78
00:04:20,930 --> 00:04:24,010
The idea here is to actually write all that in an a function format.

79
00:04:24,020 --> 00:04:26,500
Let's actually run it without a function first.

80
00:04:26,510 --> 00:04:26,850
All right.

81
00:04:26,870 --> 00:04:27,500
Let's test it.

82
00:04:27,500 --> 00:04:33,620
So if we run its end to the main number let's say for example 10 or 20 for his innocence maximum number

83
00:04:33,620 --> 00:04:35,240
let's say 40.

84
00:04:35,540 --> 00:04:41,390
And that's what we're getting we're getting the numbers 20 so number 20 actually was divisible by four.

85
00:04:41,390 --> 00:04:41,920
Right.

86
00:04:41,930 --> 00:04:43,460
Number twenty eight is divisible by four.

87
00:04:43,460 --> 00:04:43,890
That's right.

88
00:04:43,910 --> 00:04:45,050
So it was divisible by four.

89
00:04:45,080 --> 00:04:47,560
So it satisfies all the requirements for the first one.

90
00:04:47,900 --> 00:04:49,780
And it's not divisible by three.

91
00:04:49,790 --> 00:04:50,120
Right.

92
00:04:50,150 --> 00:04:51,440
So which makes sense.

93
00:04:51,440 --> 00:04:55,570
All these numbers excuse me are not divisible by three.

94
00:04:55,580 --> 00:04:56,790
All right looks good.

95
00:04:56,840 --> 00:05:00,610
What we could do here the objective is to simply write that in a formal function so going to safely

96
00:05:00,910 --> 00:05:09,340
define and what you could do that you can say let's say the number we call it let's say filters filter

97
00:05:09,350 --> 00:05:10,610
numbers.

98
00:05:10,610 --> 00:05:11,180
OK.

99
00:05:11,190 --> 00:05:13,460
And actually it's called that filter numbers.

100
00:05:13,460 --> 00:05:15,400
And that's pretty much my function here.

101
00:05:15,470 --> 00:05:20,570
I'm going to tab TAB TAB TAB TAB TAB.

102
00:05:20,720 --> 00:05:22,880
And you can print it here.

103
00:05:22,880 --> 00:05:24,680
So that would be basically our function.

104
00:05:24,710 --> 00:05:25,960
That's the overall idea.

105
00:05:25,970 --> 00:05:26,260
All right.

106
00:05:26,690 --> 00:05:27,120
OK.

107
00:05:27,830 --> 00:05:28,090
OK.

108
00:05:28,100 --> 00:05:29,350
Looks good.

109
00:05:29,420 --> 00:05:30,520
Question number 12.

110
00:05:30,530 --> 00:05:35,680
And the last one I'm asking is to find an English to French translator or a dictionary that takes an

111
00:05:35,690 --> 00:05:38,450
input from the user and return the translation.

112
00:05:38,450 --> 00:05:38,690
All right.

113
00:05:39,530 --> 00:05:39,800
All right.

114
00:05:40,010 --> 00:05:43,180
So let's see how can we do this.

115
00:05:43,280 --> 00:05:44,530
So let's ask you to write the function.

116
00:05:44,540 --> 00:05:49,370
So going to take it define and hit I called it dictionary.

117
00:05:49,370 --> 00:05:53,780
I'm going to call it English to French.

118
00:05:54,260 --> 00:05:55,670
And I'm going to pass along.

119
00:05:55,670 --> 00:06:01,070
This function we're just gonna take a war a word that we're gonna be in English right and get translated

120
00:06:01,100 --> 00:06:02,830
into French.

121
00:06:02,860 --> 00:06:03,160
All right.

122
00:06:03,580 --> 00:06:12,670
So what I could do here I'm going to say OK let's the function simply we're going to go and we're going

123
00:06:12,670 --> 00:06:16,270
to return because remember that's a dictionary right.

124
00:06:16,270 --> 00:06:19,920
That takes an English word could translate to French.

125
00:06:20,350 --> 00:06:29,130
So the function is simply in return English underscore french I can simply call that dictionary right

126
00:06:29,820 --> 00:06:33,060
and they can simply pass along here my word.

127
00:06:33,690 --> 00:06:37,980
Hopefully that word we're going to be perfect rats are going to be happy for example of success or studying

128
00:06:37,980 --> 00:06:39,000
or whatever.

129
00:06:39,000 --> 00:06:40,070
Right.

130
00:06:40,350 --> 00:06:47,110
And that's pretty much it that I can simply ask the user to input parameters so music Ward equals to

131
00:06:47,930 --> 00:06:51,830
say input and I wanted to keep it as a string not to cast it as an integer.

132
00:06:52,560 --> 00:06:59,040
Enter award in English in English.

133
00:06:59,380 --> 00:07:01,170
And all right.

134
00:07:01,270 --> 00:07:02,510
And what I could do.

135
00:07:02,510 --> 00:07:04,280
Gonna see a print.

136
00:07:04,630 --> 00:07:13,280
And they need to print simply the translation I'm gonna call my function in here I'm gonna pass along

137
00:07:13,340 --> 00:07:20,820
my word in here which is the user has just entered all right let's test it let's run it let's run it

138
00:07:20,820 --> 00:07:26,220
looks good let's run it into word in English let's assume that the customer or the user is actually

139
00:07:26,370 --> 00:07:29,140
very perfect like you know he's very like he knows this.

140
00:07:29,340 --> 00:07:36,540
These are the only five words we have so going to see a success it will tell me well that's the translation

141
00:07:36,540 --> 00:07:38,390
is this translation.

142
00:07:39,120 --> 00:07:46,230
Let's run it again through one word let's say love then well more as you know as the full French translation

143
00:07:46,230 --> 00:07:46,980
of love.

144
00:07:46,980 --> 00:07:47,490
All right.

145
00:07:47,700 --> 00:07:52,500
What did they use it is you know like crazy for example decided Okay let's enter a new world.

146
00:07:52,520 --> 00:07:57,090
It doesn't know that all these five words are you know like the only words that we have let's say insert

147
00:07:57,120 --> 00:08:06,060
let's say like any word let's say and so I'm smiling for example smile and say well enter you know I

148
00:08:06,060 --> 00:08:08,910
don't know what smiles because the smile is not contained here.

149
00:08:09,450 --> 00:08:12,530
So what we could do here is we make that code better.

150
00:08:12,600 --> 00:08:16,860
I'm going to say okay here we're going to do try.

151
00:08:16,950 --> 00:08:20,010
All right so we're going to try this right.

152
00:08:20,030 --> 00:08:21,720
What I'm going to say except

153
00:08:25,770 --> 00:08:27,570
if you find any key error.

154
00:08:28,560 --> 00:08:34,770
So basically if you find any error what we're going to say going to return to the user I'm going to

155
00:08:34,770 --> 00:08:39,310
tell him the dictionary

156
00:08:42,170 --> 00:08:45,830
does not contain this word.

157
00:08:46,040 --> 00:08:50,360
Something like that and we're going to be my return back to the mean.

158
00:08:50,360 --> 00:08:51,410
All right let's test it.

159
00:08:51,440 --> 00:08:57,020
So let's run it let's run it and let's assume again I'm going to answer a smile or tell you well instead

160
00:08:57,020 --> 00:09:01,460
of having that error signal we can actually or the error message which is not looks less scary we can

161
00:09:01,460 --> 00:09:03,930
actually do with addiction does not contain this word.

162
00:09:04,240 --> 00:09:04,560
Right.

163
00:09:04,580 --> 00:09:07,040
What if you wanted for example to make it even a little bit better.

164
00:09:07,940 --> 00:09:15,110
And for instance try to make it you know kind of not case sensitive.

165
00:09:15,110 --> 00:09:20,480
So for example if the user let's say insert love which is the first letter was uppercase instead of

166
00:09:20,480 --> 00:09:24,690
having all of it lowercase so if you do that to tell you well addiction does not contain this word.

167
00:09:25,130 --> 00:09:29,660
However the addiction contained the word but just you know it's uppercase you know and worst case sensitive.

168
00:09:29,660 --> 00:09:30,630
Right.

169
00:09:30,680 --> 00:09:32,180
What we could do here we can say OK.

170
00:09:32,210 --> 00:09:34,280
Dot lower.

171
00:09:34,280 --> 00:09:35,480
And that should solve it.

172
00:09:35,480 --> 00:09:39,710
That means whatever the input we're going to be the user going to be inputting we are actually going

173
00:09:39,710 --> 00:09:40,900
to convert it to lowercase.

174
00:09:40,930 --> 00:09:44,600
So he can compare it you know kind of apples to apples.

175
00:09:44,630 --> 00:09:46,230
Let's run it let's run it.

176
00:09:46,230 --> 00:09:48,470
Let's say the user entered all of them a love.

177
00:09:48,470 --> 00:09:50,570
Well we get still the translations to the more.

178
00:09:50,570 --> 00:09:57,110
That means we translated We went for first from uppercase to lowercase and then we have done the translation

179
00:09:57,230 --> 00:09:59,130
afterwards.

180
00:09:59,180 --> 00:09:59,980
All right.

181
00:09:59,990 --> 00:10:01,040
Congratulations.

182
00:10:01,040 --> 00:10:05,980
Now we finished the exercises for the functions filters on land expressions.

183
00:10:06,050 --> 00:10:09,910
I hope you guys enjoy the lecture and see you in the next lecture.
