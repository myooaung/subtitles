WEBVTT
1
00:00:00.150 --> 00:00:02.050
I know everyone is welcome to this project.

2
00:00:02.290 --> 00:00:05.150
This project we're going to build again.

3
00:00:05.280 --> 00:00:08.550
Fun game which is tic tac toe game or no.

4
00:00:08.580 --> 00:00:09.610
X o game.

5
00:00:09.730 --> 00:00:10.520
Okay.

6
00:00:10.530 --> 00:00:14.400
It's very simple but it's kind of you know very interesting you can actually develop it you know and

7
00:00:14.400 --> 00:00:16.430
play with you or with your friends.

8
00:00:16.440 --> 00:00:19.890
So first step is what is the game.

9
00:00:19.890 --> 00:00:22.950
First you know let's let's maybe refresh it real quick.

10
00:00:22.950 --> 00:00:24.590
So first we have a board at OK.

11
00:00:24.600 --> 00:00:28.680
And that board has simply nine parts in it.

12
00:00:28.680 --> 00:00:34.020
And what we need to do is you know if you get any values you know let's say all these are Xs or all

13
00:00:34.020 --> 00:00:38.800
these Xs or these are always or these are all that even they adnams and O's then you know everything

14
00:00:38.810 --> 00:00:39.390
gets that for us.

15
00:00:39.390 --> 00:00:39.920
We're going to win.

16
00:00:39.930 --> 00:00:40.400
Okay.

17
00:00:40.620 --> 00:00:46.260
So the design what I'm going to design it as kind of you know like I'm having no way to play it with

18
00:00:46.260 --> 00:00:46.820
a computer.

19
00:00:46.860 --> 00:00:47.590
You can do that.

20
00:00:47.650 --> 00:00:50.780
We can be kind of part of your exercise should do that.

21
00:00:50.970 --> 00:00:54.790
But he was going to do with going to have two players playing against each other.

22
00:00:54.860 --> 00:00:55.330
OK.

23
00:00:55.480 --> 00:01:02.980
You can have played on one play or two and the whole idea is we're going to ask the player one to insert

24
00:01:03.010 --> 00:01:05.400
to you know let's say location to press X..

25
00:01:05.810 --> 00:01:08.980
Okay so I'm going to press X somewhere within that board.

26
00:01:09.090 --> 00:01:09.470
All right.

27
00:01:09.510 --> 00:01:10.770
That's a first step.

28
00:01:10.770 --> 00:01:14.720
And then the next steps and ask the users to input them all somewhere again.

29
00:01:14.730 --> 00:01:15.460
Location.

30
00:01:15.580 --> 00:01:16.170
Okay.

31
00:01:16.380 --> 00:01:17.470
So they use ogan instead.

32
00:01:17.460 --> 00:01:22.510
So we have an X somewhere in heaven an somewhere and then the next step is we need to check.

33
00:01:22.520 --> 00:01:22.710
OK.

34
00:01:22.740 --> 00:01:24.750
Do we have any winning condition.

35
00:01:24.900 --> 00:01:31.400
So we need to check if we have any of these values are all Xs get any of these values are Xs.

36
00:01:31.440 --> 00:01:36.710
Any of these vendors are access and then you know the the horizontal ones vertical as well.

37
00:01:36.720 --> 00:01:44.520
So what if any one of them are Xs X X's Xs and they're going to two so we have 0 4 8 2 4 6 as well or

38
00:01:44.620 --> 00:01:45.130
all.

39
00:01:45.510 --> 00:01:50.700
So it's either X's and O's and if any of that happen they're going to play a play or whatever that player

40
00:01:50.700 --> 00:01:51.580
gets the first.

41
00:01:51.600 --> 00:01:52.420
We're going to be a winner.

42
00:01:52.560 --> 00:01:53.100
Okay.

43
00:01:53.130 --> 00:01:54.070
There's the overall idea.

44
00:01:54.070 --> 00:01:55.680
Again it's very simple.

45
00:01:55.720 --> 00:01:57.490
We're going to be going to be lot of fun.

46
00:01:58.110 --> 00:01:59.690
So let's let's get started.

47
00:02:00.000 --> 00:02:04.440
So first of all here we're going to run to find the board.

48
00:02:04.590 --> 00:02:08.150
So we are we we have all balled with basically nine locations.

49
00:02:08.230 --> 00:02:12.260
We have seen a one two three four five six seven and eight.

50
00:02:12.570 --> 00:02:15.380
And then here we can actually view the board.

51
00:02:15.390 --> 00:02:16.640
So he's the first type.

52
00:02:16.650 --> 00:02:17.640
What's the type of the board.

53
00:02:17.660 --> 00:02:22.290
You have a list so with the final list it has simply nine spots in it starting from zero and ending

54
00:02:22.290 --> 00:02:27.080
at eight and then we're going first to define a function we'll call it tic tac toe.

55
00:02:27.210 --> 00:02:30.160
Our function this function specifically is made to drop.

56
00:02:30.450 --> 00:02:36.540
So whenever I insert let's say value for x the value of all we're going to draw it's so you know to

57
00:02:36.540 --> 00:02:38.510
the user can know key will have the location.

58
00:02:38.510 --> 00:02:40.170
That's essentially right in the game.

59
00:02:40.260 --> 00:02:46.000
You know for all the players to to to actually pick a move they need to know what player one has done

60
00:02:46.020 --> 00:02:48.280
great so we need to plot that all the time.

61
00:02:48.720 --> 00:02:52.920
But to do that we're going to do again tic toll draw function.

62
00:02:52.980 --> 00:02:54.720
So we've looked at death.

63
00:02:55.020 --> 00:02:57.410
We define a function tic tac toe.

64
00:02:57.590 --> 00:02:59.970
The flush doesn't take basically an argument.

65
00:02:59.970 --> 00:03:06.320
What it does it simply prints prince up bra board 0 1 and 2.

66
00:03:06.390 --> 00:03:13.130
It's the first one for a stroke and then print water three four and five and board six seven eight.

67
00:03:13.440 --> 00:03:16.710
And that's pretty much the first step in employing OK.

68
00:03:16.740 --> 00:03:22.590
So let's let's plot first should I say to the board to veliz ONLY there's no there is no play inserted

69
00:03:22.650 --> 00:03:24.930
x or whatever it values right.

70
00:03:24.930 --> 00:03:27.470
So let's run it and let's.

71
00:03:27.480 --> 00:03:29.250
So that's where they find the function.

72
00:03:29.430 --> 00:03:30.990
This is the actual call for the function.

73
00:03:30.990 --> 00:03:37.410
So now I'm calling the function tic tac toe to actually drop the punch cards which makes sense.

74
00:03:37.410 --> 00:03:42.510
So now we have because nobody has played again we have you know one two three four five six seven eight

75
00:03:42.510 --> 00:03:43.290
which looks good.

76
00:03:43.290 --> 00:03:43.820
That's the board.

77
00:03:43.830 --> 00:03:44.900
That's kind of initialization.

78
00:03:44.930 --> 00:03:50.050
But I think what we're going to do we're week to find two functions.

79
00:03:50.340 --> 00:03:53.210
One for player one and one for players too.

80
00:03:53.250 --> 00:03:58.990
So now we have the main function the jobs we have functioned for play at one function for players to

81
00:03:59.820 --> 00:04:00.960
put them all together.

82
00:04:00.970 --> 00:04:05.910
We're going to call them in kind of you know the main function that simply put a star player want to

83
00:04:05.910 --> 00:04:10.250
play guitar players to to play.

84
00:04:10.590 --> 00:04:14.860
And then we're going to do the main function which is really important to check if any winner.

85
00:04:15.210 --> 00:04:23.270
If not we're going to ask again loop again as they want to play draw play to jar and then check and

86
00:04:23.270 --> 00:04:23.910
we'll keep doing.

87
00:04:23.920 --> 00:04:27.090
That's the overall kind of strategy moving forward.

88
00:04:27.510 --> 00:04:28.020
OK.

89
00:04:28.290 --> 00:04:30.280
So let's take a look at the player input.

90
00:04:30.390 --> 00:04:31.920
So you would want to define again.

91
00:04:31.920 --> 00:04:32.590
Player 1.

92
00:04:32.620 --> 00:04:38.580
There's no one to function and then simply put we're going to ask the users to insert location so once

93
00:04:38.580 --> 00:04:45.000
they're in use it's at the location they can go then update that location with a value of X for player

94
00:04:45.030 --> 00:04:52.570
1 and then you're all for players to say okay print player one enter your desired location location.

95
00:04:53.530 --> 00:04:58.350
They're using an input value so any input when you have any input going to use it will your input and

96
00:04:58.350 --> 00:04:59.720
you can specify it in and look.

97
00:05:00.300 --> 00:05:05.120
That's simply put we need to be 1 from 0 1 to up until 8 or 8.

98
00:05:05.600 --> 00:05:11.340
What we're going to do here they're going to check if the Board of Education.

99
00:05:11.450 --> 00:05:11.710
OK.

100
00:05:11.720 --> 00:05:14.990
So we're going to go into the board into our board.

101
00:05:15.130 --> 00:05:19.120
Are you going to look at the location whatever use it has select.

102
00:05:19.520 --> 00:05:22.520
If the board that the location is not here.

103
00:05:22.580 --> 00:05:23.420
Exclamation what.

104
00:05:23.450 --> 00:05:24.800
Equally means not equal.

105
00:05:24.800 --> 00:05:28.320
That means it's not equal to x.

106
00:05:28.970 --> 00:05:34.220
End the board as one location is not equal to all which means it's an empty spot.

107
00:05:34.220 --> 00:05:36.150
That's basically the meaning of this pushed.

108
00:05:36.200 --> 00:05:39.900
If it's not equal to x if it's not equal to all that means is an empty spot.

109
00:05:39.920 --> 00:05:46.190
That means the use that you know did inflating or made a mistake and then specify hockey in that location

110
00:05:46.340 --> 00:05:49.940
in ball of location or with index of location.

111
00:05:50.030 --> 00:05:51.860
We're going to put x.

112
00:05:51.970 --> 00:05:54.030
Okay that means okay would that mean to be saved.

113
00:05:54.030 --> 00:05:56.920
That's part to be x ray else.

114
00:05:57.040 --> 00:06:03.050
If the user simply put a selector this part that has been already been taken may say OK this point has

115
00:06:03.050 --> 00:06:03.560
been taken.

116
00:06:03.560 --> 00:06:06.270
Please choose someone else which makes complete sense.

117
00:06:06.720 --> 00:06:11.410
And that's pretty much where our players want function to function exactly the same.

118
00:06:11.430 --> 00:06:15.560
However instead of extras in the loop at all that's pretty much sums it up.

119
00:06:15.860 --> 00:06:16.750
So let's run this.

120
00:06:16.760 --> 00:06:23.440
He would define the function here when the job function so with the function which makes sense here

121
00:06:23.440 --> 00:06:29.180
we get to define or are going to run play and once we're going to call Actually that function okay and

122
00:06:29.180 --> 00:06:32.850
then we're going to draw as well just as kind of a mini test for us.

123
00:06:33.050 --> 00:06:34.010
Let's start it.

124
00:06:34.350 --> 00:06:37.660
Then you're 8 player one until a does location on the board.

125
00:06:37.670 --> 00:06:44.300
So let's say I'm going to insert for a means of selecting this but if you press enter then your key

126
00:06:45.140 --> 00:06:48.320
then it makes sense then because we did right after.

127
00:06:48.320 --> 00:06:54.320
So now we updated the actual board so we put the 0 1 2 3 in the main location of 4 actually put an extra

128
00:06:54.320 --> 00:06:56.710
value which makes complete sense for us now or.

129
00:06:57.050 --> 00:07:00.050
There's a player one player 2 was exactly the same.

130
00:07:00.120 --> 00:07:05.660
I see only the five players to win as well get players to do a desert location.

131
00:07:05.730 --> 00:07:06.660
I'm going to do it again.

132
00:07:06.660 --> 00:07:12.110
Again our location will be on inputs and then get us a check or get if Board of location is not equal

133
00:07:12.230 --> 00:07:19.300
to x is not equal to all the USC or keyboard location equal to all going to set at all else.

134
00:07:19.460 --> 00:07:23.650
This poll is taken a check or to select somewhere else right.

135
00:07:23.780 --> 00:07:28.330
That's what it was too familiar to throw in this one too.

136
00:07:28.610 --> 00:07:29.900
That's okay.

137
00:07:29.930 --> 00:07:31.450
Interviewed both look Asian.

138
00:07:31.460 --> 00:07:37.140
So were going to specify okay there all going to be let's say 5 of the select five.

139
00:07:37.190 --> 00:07:39.530
They'll tell you Okay it makes sense.

140
00:07:39.680 --> 00:07:42.020
So we selected the location Five see.

141
00:07:42.080 --> 00:07:43.400
We put 0 in it.

142
00:07:43.790 --> 00:07:46.550
So now we have player who played player tuval played.

143
00:07:46.550 --> 00:07:52.660
So now we have actually kind of pretty much working working functions so we have function to job function

144
00:07:52.670 --> 00:07:54.770
for play and one in front of a player or two.

145
00:07:54.800 --> 00:08:02.290
Now we have the check or the winner chequer function which is one of the most important functions.

146
00:08:02.480 --> 00:08:05.630
So can we actually check even before looking at the code or looking at the solution.

147
00:08:05.630 --> 00:08:06.840
How can we do that.

148
00:08:07.100 --> 00:08:07.880
Simply put.

149
00:08:07.910 --> 00:08:10.530
Which is going to go to the different combinations.

150
00:08:10.880 --> 00:08:18.140
If I find zero one to the location of 0 1 2 has X or 0 1 2.

151
00:08:18.140 --> 00:08:19.240
Has 0.

152
00:08:19.460 --> 00:08:22.810
Then play add 1 or 2 players to wince.

153
00:08:23.190 --> 00:08:30.230
And they were going to do again another if condition check on location 3 4 5 and then 3 refortify all

154
00:08:30.230 --> 00:08:34.180
X's location 6 7 8 of the all X's and so on and so forth.

155
00:08:34.190 --> 00:08:35.320
If any of these.

156
00:08:35.360 --> 00:08:44.090
Basically horizontal or vertical or two diagonals are X's or Ole's then basically play one player or

157
00:08:44.150 --> 00:08:46.480
two wins and judges are to end the game.

158
00:08:46.700 --> 00:08:51.880
It's very interesting and very simple so here that's pretty much the check winner function.

159
00:08:52.070 --> 00:08:55.540
They check when a function simply put checks.

160
00:08:55.550 --> 00:09:00.760
If the board zero boarded one and bought two.

161
00:09:00.950 --> 00:09:06.320
All of them are simply put equates to the are equal to x or.

162
00:09:06.350 --> 00:09:10.880
That's kind of the argument going to be sent to the function because what checking either X or of all

163
00:09:10.880 --> 00:09:13.310
of them one of the same if all of them are Texas.

164
00:09:13.310 --> 00:09:20.230
Or is this going to turn to true is simply a flag was say flag that means okay now which to true.

165
00:09:20.240 --> 00:09:23.290
And that means the function said okay there is a winner somewhere.

166
00:09:23.460 --> 00:09:24.570
OK.

167
00:09:25.100 --> 00:09:25.490
OK.

168
00:09:25.720 --> 00:09:26.890
And then I'll get a check book.

169
00:09:26.930 --> 00:09:34.010
But the second horizontal line across the board three four and five that mean the second one is the

170
00:09:34.010 --> 00:09:42.950
same and getting through and they get checked the next hot is on tilt 1 6 7 8 8 6 7 8 8 10 2 and then

171
00:09:42.950 --> 00:09:45.100
we're going to check the vertical ones.

172
00:09:45.210 --> 00:09:47.660
So going chigger 0 3 and 6.

173
00:09:47.660 --> 00:09:58.930
That's a vertical one and then I'll go check 1 4 and 7 1 4 and 7 and then 2 5 and 8 inches to 5 and

174
00:09:58.930 --> 00:09:59.780
8.

175
00:10:00.680 --> 00:10:02.240
And then watching the then the terms as well.

176
00:10:02.240 --> 00:10:10.300
So then the terms are going to check 0 4 0 8 0 4 and 8 2 4 and 6 2 4 and 6.

177
00:10:10.310 --> 00:10:13.030
Makes sense if any of them are going to turn to.

178
00:10:13.130 --> 00:10:14.000
Then we have to check.

179
00:10:14.000 --> 00:10:21.160
Simply put if you basically satisfy their condition is that player one of the players.

180
00:10:21.380 --> 00:10:24.020
All right so now we pretty much have everything in place.

181
00:10:24.020 --> 00:10:27.010
We have different functions for play at one player or two for us.

182
00:10:27.020 --> 00:10:27.850
No check the winner.

183
00:10:27.880 --> 00:10:29.140
And for the drawing it's worked.

184
00:10:29.300 --> 00:10:33.290
Let's put that all together and define them here.

185
00:10:33.290 --> 00:10:34.950
So what we're going to do we're going to keep playing.

186
00:10:35.000 --> 00:10:38.410
So going to the final wild why we had there before several times.

187
00:10:38.930 --> 00:10:46.160
And the key point is we can ask they want to play our players to the play draw and then we get a in

188
00:10:46.160 --> 00:10:49.280
between we're going to do a chequer occasionally check if anyone wins.

189
00:10:49.370 --> 00:10:51.320
If anyone wins we're just going to look.

190
00:10:51.420 --> 00:10:52.130
Simply put.

191
00:10:52.150 --> 00:10:52.930
Okay.

192
00:10:53.480 --> 00:10:58.740
So first ascertain wants to play a key player one function going to call it and draw.

193
00:10:58.970 --> 00:11:00.510
Makes sense.

194
00:11:00.770 --> 00:11:03.450
And then you going to a chequer because play one has just played.

195
00:11:03.440 --> 00:11:08.900
So going to say okay if check winner okay we're going up pesante argument x that will be the argument

196
00:11:08.900 --> 00:11:11.550
going to be sent to the check winner function here.

197
00:11:11.960 --> 00:11:14.040
If it is equal is to true.

198
00:11:14.060 --> 00:11:19.580
That means if all of them if any of these can be satisfied that means play and one has already won.

199
00:11:19.610 --> 00:11:22.910
That means pin play and one wins and they are going to break simply.

200
00:11:23.040 --> 00:11:30.460
Our loop loop in the exact same thing for players to play are to dictate or draw.

201
00:11:30.770 --> 00:11:35.360
And then if check win an equal or equal so then I'm going to print players to wins.

202
00:11:35.390 --> 00:11:38.130
Then going to break and this pretty much sums it on.

203
00:11:38.330 --> 00:11:40.750
Obviously this court is not you know fully intact.

204
00:11:40.760 --> 00:11:44.360
There is a lot of you know like a lot of stuff that can go wrong.

205
00:11:44.720 --> 00:11:47.570
He's just the most simple form that he can actually implement.

206
00:11:47.570 --> 00:11:49.700
Tic tac toe game.

207
00:11:50.140 --> 00:11:52.540
All right so let's end that.

208
00:11:52.610 --> 00:11:58.630
Let's let's run that function so can get it looks good then let's start let's play that game.

209
00:11:58.640 --> 00:12:00.070
OK let's run it.

210
00:12:00.350 --> 00:12:03.790
So play one play one into your desired location on the board.

211
00:12:03.800 --> 00:12:09.300
So let's say we insert location five for example.

212
00:12:09.550 --> 00:12:10.620
Look at this one.

213
00:12:10.730 --> 00:12:13.080
So here you insert location five.

214
00:12:13.490 --> 00:12:17.850
So my apologies actually because here we selected a ready player.

215
00:12:17.860 --> 00:12:19.650
They have five location before.

216
00:12:19.700 --> 00:12:21.680
So here the function there's your key.

217
00:12:21.690 --> 00:12:24.950
None of this parties take em to somewhere else.

218
00:12:25.100 --> 00:12:28.470
So let's let's choose somewhere else.

219
00:12:28.710 --> 00:12:29.360
All right.

220
00:12:29.390 --> 00:12:32.340
So now as we have it all together let's hurry.

221
00:12:32.370 --> 00:12:35.120
So let's see how can we play that game.

222
00:12:35.160 --> 00:12:39.170
So first we're going to run for a couple of cents.

223
00:12:39.430 --> 00:12:40.150
Well right.

224
00:12:40.220 --> 00:12:41.400
And then I'm going to ask.

225
00:12:41.480 --> 00:12:42.520
Want to play.

226
00:12:44.150 --> 00:12:47.660
All right so played once again insert let's say location for.

227
00:12:48.290 --> 00:12:52.560
Right so he wins that and look for these players to to play.

228
00:12:52.560 --> 00:12:54.700
There would be let's say allocation five.

229
00:12:54.760 --> 00:12:59.740
So here you would find there is an X in there is all you are looking at and five and then I'm going

230
00:12:59.740 --> 00:13:02.790
to define the function for wins.

231
00:13:02.980 --> 00:13:08.190
And then here we're going to ask field one to insert the location first.

232
00:13:08.830 --> 00:13:13.050
So location again player one lady play the look in here.

233
00:13:13.060 --> 00:13:14.480
Let's assume going to.

234
00:13:14.640 --> 00:13:19.070
And also look issue six for innocence Section 6.

235
00:13:19.180 --> 00:13:24.270
And that will be x x here and then let's say player of two selected let's say.

236
00:13:24.310 --> 00:13:31.510
Look at eight or so we have 0 0 0 0 sorry and here we have X X below 150 letters two with an on going

237
00:13:31.510 --> 00:13:31.960
to win.

238
00:13:32.000 --> 00:13:33.850
Okay so listen let's play two.

239
00:13:34.030 --> 00:13:36.510
And then you're tape player one once or eight.

240
00:13:36.680 --> 00:13:40.610
Actually that's kind of you know proof of concept which makes sense which looks great.

241
00:13:40.720 --> 00:13:47.250
Then we have kind of you know like a very simple X X or tic tac toe game.

242
00:13:47.440 --> 00:13:50.340
Obviously this again this game is not comprehensive.

243
00:13:50.350 --> 00:13:51.480
It's not like complete.

244
00:13:51.730 --> 00:13:56.140
There's just you know kind of a beginner just you know just to put everything together to show how can

245
00:13:56.140 --> 00:13:58.250
we do define our functions.

246
00:13:58.390 --> 00:14:05.650
How can we get in Clemente while loops If conditions do breaks and so on so forth.

247
00:14:05.680 --> 00:14:10.470
He'd obviously we then include the portion where there is no play win you know like the where.

248
00:14:10.540 --> 00:14:15.350
Simply nobody could achieve you know all of the lines correctly.

249
00:14:15.460 --> 00:14:20.010
So you need to add that obviously if you want to make the game actual game you can add a lot of you

250
00:14:20.010 --> 00:14:23.840
know complexity in there to make it a little bit more than somewhat fun.

251
00:14:23.860 --> 00:14:28.220
But this is kind of a very simple example to show how can you implement the tic tac toe game.

252
00:14:28.290 --> 00:14:31.580
I hope you guys enjoyed their section and see you in the next section.
