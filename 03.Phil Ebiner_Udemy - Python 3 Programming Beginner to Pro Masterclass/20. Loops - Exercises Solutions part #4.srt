1
00:00:01,250 --> 00:00:03,750
Hello everyone and welcome to this lecture.

2
00:00:03,770 --> 00:00:09,990
Let's keep going and continue solving the for and why loop questions.

3
00:00:10,280 --> 00:00:15,200
So here I am asking to write a code that takes a string from the user and of the words in and print

4
00:00:15,260 --> 00:00:23,290
all words basically afterwards and say OK string equals two let's get an input from the user.

5
00:00:23,660 --> 00:00:24,650
Enter.

6
00:00:24,920 --> 00:00:28,920
How do you feel that today for example how do you feel today.

7
00:00:28,940 --> 00:00:29,530
Okay.

8
00:00:29,540 --> 00:00:30,840
Like whatever.

9
00:00:30,980 --> 00:00:34,270
And these are gonna insert the value and they're going to be put back here into the string.

10
00:00:34,280 --> 00:00:34,540
Right.

11
00:00:35,450 --> 00:00:41,420
And I'm gonna do Gonna take a string dot splits because I wanted to split these basically the string

12
00:00:41,420 --> 00:00:42,750
into words right.

13
00:00:42,780 --> 00:00:46,040
Gonna take this thing and make it into word or words.

14
00:00:46,040 --> 00:00:46,340
Right.

15
00:00:46,970 --> 00:00:48,460
Okay looks good.

16
00:00:48,560 --> 00:00:54,180
What we could do need to sort sorted we're going to use the salt method to do to do that operation.

17
00:00:54,290 --> 00:00:58,470
We gonna say okay word words dot sort.

18
00:00:58,580 --> 00:01:00,460
Right okay.

19
00:01:00,470 --> 00:01:02,660
That will basically just sort our words.

20
00:01:02,670 --> 00:01:05,650
Okay and let's go ahead and actually print.

21
00:01:06,470 --> 00:01:09,420
So basically here to print the ward.

22
00:01:09,450 --> 00:01:09,650
Right.

23
00:01:09,680 --> 00:01:10,600
To do that.

24
00:01:10,610 --> 00:01:11,910
What we need to do here.

25
00:01:12,110 --> 00:01:15,950
We need to create a for loop that basically loops on all the words here.

26
00:01:15,950 --> 00:01:16,650
Right.

27
00:01:16,760 --> 00:01:20,780
Actually before we create the for loop let's go ahead and run it before we jump jump ahead of ourselves

28
00:01:20,780 --> 00:01:22,130
and say OK how are you feeling.

29
00:01:22,130 --> 00:01:23,540
I am happy.

30
00:01:23,570 --> 00:01:24,000
That's correct.

31
00:01:24,020 --> 00:01:33,270
Let's say I am so happy learning Python today.

32
00:01:33,530 --> 00:01:38,660
And if we press enters let's take a look at Ward's what's what's in it.

33
00:01:38,680 --> 00:01:42,640
So if you look at it you'll find that we have m that is happy.

34
00:01:42,650 --> 00:01:45,070
There is I learning python and so on.

35
00:01:45,110 --> 00:01:46,250
So basically a list.

36
00:01:46,250 --> 00:01:46,610
Right.

37
00:01:46,820 --> 00:01:49,700
And that list consists of different strings.

38
00:01:49,700 --> 00:01:49,940
Right.

39
00:01:50,350 --> 00:01:51,230
OK.

40
00:01:51,380 --> 00:01:58,640
So what we could do to print them out what we need to do basically for ward in wards.

41
00:01:58,700 --> 00:02:03,520
That's actually kind of you know a very famous way of writing the code.

42
00:02:03,630 --> 00:02:07,010
We have a list for example here you define It's a list of wards.

43
00:02:07,040 --> 00:02:08,390
So this is my list right.

44
00:02:08,990 --> 00:02:14,300
So when you say four ward in were in wards that means you are going into that list and taking elements

45
00:02:14,300 --> 00:02:15,860
out of it and doing something with it.

46
00:02:15,890 --> 00:02:22,880
So every time I'm going to go Take for example the M and print it's going to take a print my word.

47
00:02:22,940 --> 00:02:23,590
Right.

48
00:02:23,990 --> 00:02:28,760
And that's I'm going to go up again take the next one happy printed and so on so forth.

49
00:02:28,760 --> 00:02:30,000
Let's run that.

50
00:02:30,300 --> 00:02:36,350
And that's what we're getting we're getting m happy I learning P S.A. so we saw them basically in an

51
00:02:36,350 --> 00:02:38,340
alphabetical order.

52
00:02:38,390 --> 00:02:40,880
All right looks perfect.

53
00:02:40,880 --> 00:02:42,490
Question number eleven.

54
00:02:42,510 --> 00:02:45,860
So for question number eleven actually here.

55
00:02:45,860 --> 00:02:48,710
Question number eleven as I've done that before.

56
00:02:48,800 --> 00:02:51,450
What we need to do here is go up.

57
00:02:51,740 --> 00:02:54,460
We need to make sure that we have this.

58
00:02:54,980 --> 00:02:56,500
So what we need to do here.

59
00:02:56,700 --> 00:03:00,460
I provided you with two lists basically cut colorless and phone list.

60
00:03:00,500 --> 00:03:00,740
Right.

61
00:03:00,740 --> 00:03:02,580
So here we have list of phones.

62
00:03:02,600 --> 00:03:04,990
So the list of colors black white and gold.

63
00:03:05,120 --> 00:03:08,510
Here we have list of phones iPhones Samsung and BlackBerry.

64
00:03:08,510 --> 00:03:14,450
And I'm asking you to basically using two different methods or two different ways of writing in a way

65
00:03:14,870 --> 00:03:20,930
to print basically or you know combine them together and actually print let's say black iPhone black

66
00:03:20,930 --> 00:03:22,880
Samsung and so on like this.

67
00:03:22,880 --> 00:03:27,080
So it seems like there is a nested loop somewhere and the overall objective here is for us to practice

68
00:03:27,080 --> 00:03:29,390
how to do nested loops.

69
00:03:29,400 --> 00:03:29,750
Right.

70
00:03:29,760 --> 00:03:30,600
That's how can we do that.

71
00:03:30,600 --> 00:03:34,790
I'm going to take before I in color lists

72
00:03:37,930 --> 00:03:39,880
so that would be our bigger loop right.

73
00:03:39,910 --> 00:03:43,030
So that will be my major loop that we're going to loop over colors right.

74
00:03:43,990 --> 00:03:52,500
And then get a for let's define other variables J in phone lists OK.

75
00:03:52,940 --> 00:03:57,950
So every time I'm going to go to the for loop to the I 1 and then we have another loop you know like

76
00:03:57,950 --> 00:04:03,170
at a kind of a faster speed J loop every time I'm going to go in and print I and G.

77
00:04:03,170 --> 00:04:04,600
That's it.

78
00:04:04,610 --> 00:04:06,920
Let's take a look what's happening here.

79
00:04:06,920 --> 00:04:08,360
So first I'm going to say OK.

80
00:04:08,360 --> 00:04:10,090
For I in color lists.

81
00:04:10,100 --> 00:04:16,270
So here I'm basically going to our first list which is has black white and gold.

82
00:04:16,310 --> 00:04:18,650
So first let's assume I'm going to take the black one.

83
00:04:18,650 --> 00:04:18,890
Right.

84
00:04:18,890 --> 00:04:25,210
So for I so I in the first one hit I'm just trying to simulate the entire for loop from from scratch.

85
00:04:25,220 --> 00:04:26,900
So first here I have black right.

86
00:04:27,080 --> 00:04:33,490
So here inserted I started the second loop with the color black here.

87
00:04:33,500 --> 00:04:36,110
I'm going to take a for J informed list.

88
00:04:36,170 --> 00:04:41,750
So basically I'm saying OK there's another loop that goes on on the phone list which is basically this

89
00:04:41,750 --> 00:04:47,670
my list which has iPhone so please remember I'm inserting I has again.

90
00:04:47,690 --> 00:04:48,400
Let's write it down.

91
00:04:48,410 --> 00:04:51,220
So I has black here for the first two.

92
00:04:51,220 --> 00:04:51,470
Right.

93
00:04:51,920 --> 00:04:56,150
So I insert I went in the second loop which is kind of faster with my color black only.

94
00:04:56,930 --> 00:05:01,220
Every time I'm going to go here take up again take the phone list so you can take iPhone.

95
00:05:01,220 --> 00:05:03,850
I'm going to print black versus iPhone.

96
00:05:03,950 --> 00:05:05,090
So black iPhone.

97
00:05:05,090 --> 00:05:07,090
And that's the first one I printed here.

98
00:05:07,250 --> 00:05:09,230
And what's going to happen is I'm not going to go up right.

99
00:05:09,230 --> 00:05:09,560
Why.

100
00:05:09,560 --> 00:05:15,610
Because I still here I'm still stuck in that you know kind of faster loop or like kind of nested blueprint.

101
00:05:16,100 --> 00:05:19,580
So you can say okay I have the same black value so I'm still black.

102
00:05:19,580 --> 00:05:20,950
But Jay's updated.

103
00:05:21,110 --> 00:05:22,180
Now I have Samsung.

104
00:05:22,220 --> 00:05:23,570
That's why I have black Samsung.

105
00:05:24,350 --> 00:05:28,880
And then one more time I see a BlackBerry so I have black BlackBerry.

106
00:05:28,880 --> 00:05:30,110
That's why I have black BlackBerry.

107
00:05:30,770 --> 00:05:33,710
And then once the loop is done I'm going to go up again.

108
00:05:33,710 --> 00:05:34,630
Right.

109
00:05:34,670 --> 00:05:39,110
Take the next color which is white and go in here do repeat again.

110
00:05:39,110 --> 00:05:42,480
So white iPhone white Samsung white BlackBerry and so on so forth.

111
00:05:42,500 --> 00:05:46,910
Keep repeating until the for loop the major for loop ended and that's it.

112
00:05:46,910 --> 00:05:47,980
Let's run that.

113
00:05:48,120 --> 00:05:49,830
And that's actually exactly what I've got here.

114
00:05:49,850 --> 00:05:51,320
Which is great.

115
00:05:51,320 --> 00:05:58,120
Let's do the exact same exact same code but kind of in a different format.

116
00:05:58,120 --> 00:06:03,840
Let's say I can write that going to say OK I have to create basically a new list.

117
00:06:05,300 --> 00:06:05,790
OK.

118
00:06:05,860 --> 00:06:07,080
And you list.

119
00:06:07,830 --> 00:06:08,440
OK.

120
00:06:08,500 --> 00:06:09,360
And that's my list.

121
00:06:09,830 --> 00:06:10,900
And what I could do.

122
00:06:11,060 --> 00:06:14,770
I'm going to create my both for my both for loops as follows.

123
00:06:14,770 --> 00:06:20,190
Going to take it for I in color lists OK.

124
00:06:20,720 --> 00:06:27,930
And then I'm going to order to create the next for loop I can do that's going to take before J in phone

125
00:06:27,960 --> 00:06:29,720
underscore lists.

126
00:06:29,760 --> 00:06:30,020
All right.

127
00:06:30,600 --> 00:06:31,980
What's going to happen so basically here.

128
00:06:31,980 --> 00:06:36,750
I have to if you guys remember before that here I write the actual body of both.

129
00:06:36,750 --> 00:06:38,670
So here I have four I am color list.

130
00:06:38,700 --> 00:06:41,740
That's my first full loop for J in phone list.

131
00:06:42,060 --> 00:06:47,200
And then I can write basically my eye comma G that's it.

132
00:06:47,230 --> 00:06:48,640
And I get my new list.

133
00:06:49,090 --> 00:06:55,380
And here I can simply come here and print my new underscore list.

134
00:06:55,500 --> 00:06:55,840
All right.

135
00:06:56,500 --> 00:06:57,790
Let's see what we could do here.

136
00:06:57,820 --> 00:07:02,160
Actually before printing it out that's let's take a look at what's happening.

137
00:07:02,180 --> 00:07:03,290
Let's run it.

138
00:07:03,440 --> 00:07:08,200
So let's take a look at my new on this call lists.

139
00:07:08,200 --> 00:07:09,050
That's what we're getting here.

140
00:07:09,070 --> 00:07:13,800
Getting black iPhone black Samsung black BlackBerry looks good.

141
00:07:13,840 --> 00:07:19,620
And if we print it out and that's what we're getting here it's obvious it's the actual printing is different

142
00:07:19,630 --> 00:07:23,370
but the idea you get the idea right here it's kind of you know where print to get out.

143
00:07:23,480 --> 00:07:25,960
That's kind of you know like a like in pairs right.

144
00:07:25,960 --> 00:07:30,340
We have black iPhone black Samsung black BlackBerry and so on so forth.

145
00:07:30,360 --> 00:07:30,640
All right.

146
00:07:30,790 --> 00:07:32,470
Obviously there are tons of ways of doing it.

147
00:07:32,470 --> 00:07:37,640
This is just you know like two ways you guys can use whatever way you like.

148
00:07:37,660 --> 00:07:38,970
Question number 12.

149
00:07:38,980 --> 00:07:44,260
He'd have asking you to write a code that basically takes a string and calculate the number of upper

150
00:07:44,290 --> 00:07:46,480
and lower characters within the string.

151
00:07:46,480 --> 00:07:47,930
OK.

152
00:07:48,130 --> 00:07:48,510
All right.

153
00:07:48,550 --> 00:07:54,280
Let's take these string from the user NHK input and let's say enter.

154
00:07:54,820 --> 00:07:57,880
Enter a string or enter whatever you feel like.

155
00:07:57,880 --> 00:08:01,930
And we're going to take that and put it in an input string.

156
00:08:01,930 --> 00:08:02,730
OK.

157
00:08:02,830 --> 00:08:07,990
All right so that be the first step and what I could do here because I'm counting numbers that I'm connecting

158
00:08:07,990 --> 00:08:09,240
the characters.

159
00:08:09,340 --> 00:08:13,180
That means I need to have to kind of call it accumulators.

160
00:08:13,180 --> 00:08:15,130
I'm gonna reset these accumulators to zero.

161
00:08:15,130 --> 00:08:23,020
I'm going to say okay upper on this court case equals to zero and then lower on this court case equals

162
00:08:23,020 --> 00:08:24,250
to zero as well.

163
00:08:24,250 --> 00:08:29,700
So here you're basically initializing two accumulators and you're setting both of them to zero.

164
00:08:29,710 --> 00:08:30,590
All right.

165
00:08:30,640 --> 00:08:30,880
Why.

166
00:08:30,880 --> 00:08:32,410
Because you haven't counted anything yet.

167
00:08:32,410 --> 00:08:32,650
Right.

168
00:08:32,850 --> 00:08:33,070
OK.

169
00:08:33,940 --> 00:08:34,960
So what I could do.

170
00:08:35,020 --> 00:08:42,170
I'm going to say okay for every time I take a character in input String

171
00:08:44,810 --> 00:08:47,180
input string.

172
00:08:47,640 --> 00:08:52,470
So basically the user can insert an input in the string and every time I'm going to go ahead into that

173
00:08:52,470 --> 00:08:54,340
string and take a character right.

174
00:08:54,780 --> 00:08:56,630
And the question is here I have to check.

175
00:08:56,640 --> 00:09:00,710
I have to ask myself Is it uppercase if that character was uppercase or not.

176
00:09:00,780 --> 00:09:11,350
To do that I'm going to say okay if car dot is upper is upper basically just confirms or asks is that

177
00:09:11,530 --> 00:09:13,400
character was an upper case or not.

178
00:09:13,630 --> 00:09:15,780
If it is an upper case.

179
00:09:15,950 --> 00:09:16,210
Right.

180
00:09:16,220 --> 00:09:16,970
Well you could do.

181
00:09:16,990 --> 00:09:26,520
You're going to say okay upper on this court case equals to upper underscored case plus 1.

182
00:09:27,120 --> 00:09:28,710
Basically you're just gonna what are you gonna do here.

183
00:09:28,720 --> 00:09:32,400
I'm going to accumulate the upper case accumulator started to zero.

184
00:09:32,400 --> 00:09:37,640
If the character is upper go ahead here and accumulate your upper case.

185
00:09:38,480 --> 00:09:38,870
OK.

186
00:09:38,880 --> 00:09:46,980
If not to what get you're going to say Okay l if if it is if the car dot is lower.

187
00:09:47,040 --> 00:09:54,840
So it's if it's lower case what you could do is say Okay lower underscored case equals to lower.

188
00:09:54,930 --> 00:09:58,880
Actually let's do it in a different way let's say plus 1 plus equal 1.

189
00:09:58,890 --> 00:10:01,760
Because remember you can do the exact same thing here.

190
00:10:01,800 --> 00:10:03,240
If you do it plus equal right.

191
00:10:03,590 --> 00:10:04,460
So plus equals one.

192
00:10:04,500 --> 00:10:05,480
OK.

193
00:10:05,520 --> 00:10:05,850
All right.

194
00:10:05,850 --> 00:10:07,840
What if it's not upper if it's not a lower case.

195
00:10:07,850 --> 00:10:09,120
Well you're just gonna pass.

196
00:10:09,120 --> 00:10:10,390
Right.

197
00:10:10,410 --> 00:10:16,170
If it's like you number or whatever you know just gonna pass past that and that's it's what you could

198
00:10:16,170 --> 00:10:19,370
do afterwards after the exit you followed up what you could do here.

199
00:10:19,420 --> 00:10:21,330
You going to circulates printouts.

200
00:10:21,330 --> 00:10:34,510
Our number number of upper cases of sort of upper upper case letters and you can simply pass along our

201
00:10:34,570 --> 00:10:42,700
upper underscored case variable and what you could do you can print as well our number of lower case

202
00:10:42,700 --> 00:10:48,540
letters and you can say OK it's lower underscore case.

203
00:10:48,540 --> 00:10:51,000
Actually this is underscoring my apologies.

204
00:10:51,000 --> 00:10:53,420
And you can close this.

205
00:10:53,660 --> 00:10:54,080
All right.

206
00:10:54,080 --> 00:10:54,860
Looks good.

207
00:10:54,860 --> 00:10:57,930
Let's run it interesting.

208
00:10:58,130 --> 00:11:00,170
Let's say I am so happy.

209
00:11:01,140 --> 00:11:05,270
Let's add to today because

210
00:11:07,670 --> 00:11:16,340
I am learning Python run it and it looks it looks like it's working so hard say OK a number of uppercase

211
00:11:16,360 --> 00:11:17,460
actually seven.

212
00:11:17,480 --> 00:11:18,320
So let's count them out.

213
00:11:18,350 --> 00:11:19,830
So we have have one right.

214
00:11:19,850 --> 00:11:23,560
We have two three four five six and seven.

215
00:11:23,620 --> 00:11:23,860
Right.

216
00:11:24,470 --> 00:11:26,510
And simply the rest we're going to be the lowercase.

217
00:11:26,510 --> 00:11:29,230
All right looks great.

218
00:11:29,300 --> 00:11:30,340
Let's give it another shot.

219
00:11:30,350 --> 00:11:40,350
Let's maybe insert maybe like like numbers or something let's say Okay I am happy three for example

220
00:11:40,440 --> 00:11:46,980
something like this run it and I tell you OK and the number of lower number of uppercase letters were

221
00:11:46,980 --> 00:11:48,220
actually six.

222
00:11:48,240 --> 00:11:51,020
So here you have I and you have happy.

223
00:11:51,020 --> 00:11:54,540
So it's six a number of lower case letters will only a. m..

224
00:11:54,540 --> 00:11:57,810
So basically here the code skip number three which is exactly what I'm looking for.

225
00:11:58,230 --> 00:12:05,370
I don't want it to count basically digits right or what I wanted to do is to count the upper and lower

226
00:12:05,670 --> 00:12:07,120
cases only.

227
00:12:07,120 --> 00:12:07,620
All right.

228
00:12:07,890 --> 00:12:13,610
Let's take one more example here I'm asking you to write a code that takes a range from hundred to nine

229
00:12:13,610 --> 00:12:18,090
hundred and only print the numbers with all the digits are even.

230
00:12:18,280 --> 00:12:20,700
OK so that's a little bit challenging.

231
00:12:20,700 --> 00:12:22,010
So let's see how can we do this.

232
00:12:22,060 --> 00:12:24,180
Going to say OK let's get the minimum maximum down.

233
00:12:24,180 --> 00:12:25,480
That's pretty much easy.

234
00:12:25,610 --> 00:12:34,520
It's going to take a min in int of input and I'm going to see it enter a lower bound right.

235
00:12:34,560 --> 00:12:36,700
And it's actually copy that.

236
00:12:36,820 --> 00:12:44,340
Let's face it here and make it upper bound and I'm going to set that to Max.

237
00:12:44,390 --> 00:12:49,160
And because it's a reserved word that's make it X underscore an excellent score Max.

238
00:12:49,180 --> 00:12:50,030
All right that looks good.

239
00:12:50,040 --> 00:12:52,020
We have done that several times before.

240
00:12:52,370 --> 00:12:54,170
And what we could do here.

241
00:12:54,170 --> 00:12:55,420
I'm going to say OK.

242
00:12:55,520 --> 00:13:06,800
So what we need to do is that we need to simply take the number right whatever number that is and simply

243
00:13:06,800 --> 00:13:10,680
kind of slice it into three sections or three portions.

244
00:13:10,790 --> 00:13:11,000
Right.

245
00:13:11,000 --> 00:13:13,470
And that's kind of the a little bit challenging in here.

246
00:13:13,490 --> 00:13:19,170
So what we need to do we're going to think the number or get whatever number that is right and convert

247
00:13:19,170 --> 00:13:29,220
it into a string divided or slice it right and then convert it into an integer and compare them if they

248
00:13:29,210 --> 00:13:29,960
are even or odd.

249
00:13:29,960 --> 00:13:32,400
Because we wanted to make sure if all the numbers are even.

250
00:13:32,420 --> 00:13:33,630
All right.

251
00:13:33,710 --> 00:13:36,220
And then afterwards you can print only the numbers afterwards.

252
00:13:36,230 --> 00:13:38,780
It's a little bit you know like weird but let's see how can we do it again.

253
00:13:38,780 --> 00:13:42,400
That's one way of solving I'm not saying that's the only way but there are several ways.

254
00:13:42,410 --> 00:13:45,530
This is just one way that I decided to choose here.

255
00:13:45,570 --> 00:13:46,070
All right.

256
00:13:46,190 --> 00:13:53,150
What we could do going to say Okay I need obviously to have a full loop that go ahead and go from men

257
00:13:53,180 --> 00:14:00,140
from X-Men X on the score men to X on the score Max.

258
00:14:00,160 --> 00:14:00,570
Right.

259
00:14:00,970 --> 00:14:02,460
OK.

260
00:14:02,760 --> 00:14:10,080
First I need to take the whatever number right whatever I that number is and I need to convert it into

261
00:14:10,080 --> 00:14:13,690
a string and I put it into S for example.

262
00:14:13,690 --> 00:14:13,920
All right.

263
00:14:13,920 --> 00:14:15,180
So now I have a string.

264
00:14:15,540 --> 00:14:16,000
OK.

265
00:14:16,500 --> 00:14:17,010
OK.

266
00:14:17,100 --> 00:14:18,420
That's great.

267
00:14:18,420 --> 00:14:24,150
And when I need to do here I need to simply create an if condition I'm going to say OK.

268
00:14:24,210 --> 00:14:31,170
If you found any to go ahead into that string and simply take all the elements one by one.

269
00:14:31,170 --> 00:14:32,100
Right.

270
00:14:32,160 --> 00:14:44,320
So going to take it if you found the value of s of 0 OK divided by two and you take the remainder was

271
00:14:44,350 --> 00:14:46,300
equal equals to zero.

272
00:14:46,420 --> 00:14:47,060
Right.

273
00:14:47,080 --> 00:14:50,980
That basically condition simply will get a check here.

274
00:14:50,980 --> 00:14:59,740
Let's put that in within that brackets so here I am saying OK if you go ahead here and found that if

275
00:14:59,830 --> 00:15:04,730
s of zero which is the first element when it would within the string right.

276
00:15:04,780 --> 00:15:08,470
The only problem is that if you do this operation this option will work right.

277
00:15:08,470 --> 00:15:08,700
Why.

278
00:15:08,700 --> 00:15:10,860
Because this actually element is of zero.

279
00:15:10,870 --> 00:15:16,540
That's the first that's let's say two or let's say for example zero or let's say you know the first

280
00:15:16,570 --> 00:15:17,010
element.

281
00:15:17,030 --> 00:15:18,440
That's and say four for innocent.

282
00:15:18,440 --> 00:15:22,990
That's the first element within the string to do the comparison you actually to go back and actually

283
00:15:22,990 --> 00:15:24,550
convert it into an integer.

284
00:15:24,550 --> 00:15:29,560
I know it sounds a little bit crazy but that's the only way or the best way of actually doing it.

285
00:15:29,590 --> 00:15:34,510
So we we converted the string slice it up when we do s of zero.

286
00:15:34,510 --> 00:15:35,310
Right.

287
00:15:35,350 --> 00:15:39,880
And then when we do the comparison we go back and convert into an integer back again.

288
00:15:39,880 --> 00:15:40,120
All right.

289
00:15:40,660 --> 00:15:43,420
Well obviously we need to do that for all the numbers right.

290
00:15:43,420 --> 00:15:47,810
We're going to think the exact same number it here.

291
00:15:47,800 --> 00:15:50,530
Copy copied and pasted here.

292
00:15:50,620 --> 00:15:51,840
Right.

293
00:15:51,940 --> 00:15:57,400
Actually I need to remove that and that we're going to be one because I need to get to know the second

294
00:15:57,400 --> 00:15:58,180
number right.

295
00:15:59,200 --> 00:16:03,780
And so going to copy that and do end.

296
00:16:03,790 --> 00:16:06,180
And that would be as of two.

297
00:16:06,430 --> 00:16:07,910
Again he looks good.

298
00:16:09,570 --> 00:16:15,420
And what I could do if basically the if condition I was satisfied Well that's good.

299
00:16:15,420 --> 00:16:23,820
That means we need again to act to kind of concatenate the numbers into an empty string so can numbers

300
00:16:23,820 --> 00:16:24,800
for example.

301
00:16:25,000 --> 00:16:33,430
This quality let's call it all even numbers so that's where all the numbers are even like two or four

302
00:16:33,430 --> 00:16:36,800
or two a six or two eight with the finance that ends in a string here.

303
00:16:36,800 --> 00:16:41,020
We could do going to say okay if you found let's do that.

304
00:16:41,340 --> 00:16:44,090
I'm going to take a dot append.

305
00:16:44,140 --> 00:16:49,510
So I'm going to append to it the value of s what we're going to do here.

306
00:16:49,510 --> 00:16:54,280
I'm going to say okay if you find all the even numbers if it satisfies all these conditions that mean

307
00:16:54,340 --> 00:16:56,020
all the numbers were even right.

308
00:16:56,500 --> 00:17:00,890
So let's take s and appended to all even numbers and keep looping again.

309
00:17:00,920 --> 00:17:09,550
All right let's run that into the lower bound let's say 50 upper bound let's say to say 300.

310
00:17:09,720 --> 00:17:10,010
Right.

311
00:17:10,010 --> 00:17:11,420
It says there is an error.

312
00:17:11,450 --> 00:17:11,740
OK.

313
00:17:11,750 --> 00:17:16,400
So it's saying OK index string index is out of range.

314
00:17:16,400 --> 00:17:17,390
All right.

315
00:17:17,390 --> 00:17:19,460
So here it seems.

316
00:17:19,460 --> 00:17:29,360
That's because I fed number here 50 which is not so the objective or the design was to make it you know

317
00:17:29,360 --> 00:17:31,590
range from one hundred to nine hundred for a reason right.

318
00:17:31,590 --> 00:17:35,000
The objective is because I'm doing the check three times here.

319
00:17:35,000 --> 00:17:37,300
When I mentioned 50 it will just breaks.

320
00:17:37,300 --> 00:17:37,570
Why.

321
00:17:37,580 --> 00:17:39,080
Because we only have two digits right.

322
00:17:39,540 --> 00:17:40,400
OK.

323
00:17:40,520 --> 00:17:42,430
So what we could do let's run it again.

324
00:17:42,470 --> 00:17:43,190
I'm going to say a.

325
00:17:43,220 --> 00:17:48,860
Let's say two hundred and let's say five hundred and run it and let's go ahead.

326
00:17:48,860 --> 00:17:50,960
It seems there's no problems anymore which is great.

327
00:17:50,990 --> 00:17:55,360
Let's go ahead and actually view it's actually printed out.

328
00:17:55,360 --> 00:18:01,510
You want it to print all even numbers and that's what we're getting here.

329
00:18:01,570 --> 00:18:03,110
Looks like it's working.

330
00:18:03,160 --> 00:18:04,230
So we have 200.

331
00:18:04,240 --> 00:18:06,620
We have two or two to a four to a six.

332
00:18:06,690 --> 00:18:11,920
Looks great between the bounds upper lower bounds two hundred and five hundred that we decided to feed

333
00:18:13,100 --> 00:18:14,890
in here.

334
00:18:14,890 --> 00:18:15,690
All right.

335
00:18:15,730 --> 00:18:17,070
That's a lot of information.

336
00:18:17,080 --> 00:18:20,510
I hope you guys were able to figure it out.

337
00:18:20,530 --> 00:18:25,010
And in the next lecture you're going to keep going and actually going to continue questions 14 up to

338
00:18:25,010 --> 00:18:31,390
16 and that should conclude the four and while loop section I hope you guys enjoy the lectures and see

339
00:18:31,390 --> 00:18:32,650
you in the next lecture.
