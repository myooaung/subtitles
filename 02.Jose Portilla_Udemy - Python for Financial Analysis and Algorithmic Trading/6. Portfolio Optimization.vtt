WEBVTT
1
00:00:05.990 --> 00:00:13.320
Welcome everyone to this lecture on portfolio optimization now that we have a nice metric in the Sharpe

2
00:00:13.320 --> 00:00:19.890
ratio to evaluate portfolio allocations against each other how can we optimize the portfolio holdings

3
00:00:20.430 --> 00:00:25.530
something we could do is we could just guess and check a bunch of random allocations and see which one

4
00:00:25.530 --> 00:00:27.270
has the best sharp ratio.

5
00:00:27.450 --> 00:00:32.910
Since we have powerful computers and we also know that we have pi to generate random numbers this sort

6
00:00:32.910 --> 00:00:40.780
of technique could work for us randomly guessing and checking is sometimes known as a Monte simulation.

7
00:00:40.970 --> 00:00:45.800
What we're going to do is we're going to randomly assign a weight to each security in our portfolio

8
00:00:46.220 --> 00:00:51.080
then calculate its mean day the return and the standard deviation of daily return.

9
00:00:52.510 --> 00:00:57.630
This allows us to calculate the Sherpa ratio for thousands of randomly selected allocations.

10
00:00:57.790 --> 00:01:03.220
We can then plot the allocations on a chart showing return versus volatility colored by the Sharper's

11
00:01:03.220 --> 00:01:03.790
issue.

12
00:01:04.990 --> 00:01:10.930
So we're going to end up creating something like this on the y axis we have the return in on the x axis

13
00:01:10.930 --> 00:01:12.460
we have the volatility.

14
00:01:12.640 --> 00:01:17.390
And then on that color bar we have kind of a third dimension of the Sharpe ratio.

15
00:01:17.440 --> 00:01:22.870
So we're looking for which random allocation ends up having the best Sharpe ratio.

16
00:01:23.150 --> 00:01:28.480
And at that red dot there that is the top sharper issue and I want you to notice that there's kind of

17
00:01:28.480 --> 00:01:31.710
a curve we're going to come back that later.

18
00:01:31.720 --> 00:01:35.770
So as I mentioned that red dot it indicates the highest issue on this plot.

19
00:01:35.830 --> 00:01:39.600
And this is where we're going to be creating with Python.

20
00:01:39.740 --> 00:01:44.000
However as you may have guessed guessing and checking is not very efficient.

21
00:01:44.000 --> 00:01:49.880
Instead we're also going to end up doing is we can use math to figure out the optimal Sharpe ratio for

22
00:01:49.880 --> 00:01:51.260
any given portfolio.

23
00:01:51.410 --> 00:01:57.230
And this is known as an optimization algorithm to really understand optimization algorithms we first

24
00:01:57.230 --> 00:02:03.910
need to understand a concept known as minimization before we discuss optimization directly.

25
00:02:03.910 --> 00:02:07.730
Let's go ahead and discuss minimization which is a pretty similar concept.

26
00:02:07.810 --> 00:02:14.540
Let's say were given simple equations like why is equal to x squared or Y's equal to two minus sex squared.

27
00:02:15.840 --> 00:02:19.980
What value of x will minimize the value of y in the first case.

28
00:02:19.980 --> 00:02:25.890
That equation if you set X equal to zero then you end up getting Y is equal to zero.

29
00:02:25.890 --> 00:02:29.120
So that's the value of x that's going to minimize y.

30
00:02:29.130 --> 00:02:32.410
In the case of the second equation to mine is sex squared.

31
00:02:32.430 --> 00:02:36.420
You can plug in X equals two then you'll have two minus 2 0 square.

32
00:02:36.510 --> 00:02:40.080
And that gives the minimum value of Y which is zero.

33
00:02:40.110 --> 00:02:44.320
This idea of using a minimizer is going to allow us to build an optimizer.

34
00:02:44.490 --> 00:02:48.080
So there are mathematical ways of actually finding that minimum value.

35
00:02:48.150 --> 00:02:54.900
And luckily for more complex equations such as an optimizer site pi which is another python library

36
00:02:54.930 --> 00:03:02.930
can do the heavy math for us referring back to our Sharpe ratio and how it relates to that minimization

37
00:03:02.930 --> 00:03:03.720
idea.

38
00:03:03.890 --> 00:03:06.830
We actually want to do is maximize the Sharpe ratio.

39
00:03:06.830 --> 00:03:12.440
Remember we're trying to figure out what allocations of stocks in our portfolio will give us the best

40
00:03:12.500 --> 00:03:18.670
sharper ratio meaning that we can create an optimizer that will attempt to minimize the negative sharp

41
00:03:18.680 --> 00:03:19.530
ratio.

42
00:03:19.550 --> 00:03:24.890
So we're basically just going to do the inverse Sharpe ratio try to minimize that number and that will

43
00:03:24.890 --> 00:03:31.610
end up being the best Sharper's show just in reverse since raising a minimizer to actually calculate

44
00:03:31.790 --> 00:03:34.830
the optimal allocation.

45
00:03:35.010 --> 00:03:39.810
So what we're actually going to do and working on this in Python is we will use site pie's built in

46
00:03:39.810 --> 00:03:44.760
optimization algorithms to calculate the optimal weight allocation for our portfolio.

47
00:03:44.970 --> 00:03:47.650
And we're going to optimize it based off the sharp ratio.

48
00:03:47.940 --> 00:03:51.050
So we're going to do is go back to the return versus volatility plot.

49
00:03:51.070 --> 00:03:53.160
Again one more time.

50
00:03:53.380 --> 00:03:58.480
And what I wanted you to notice before was the actual shape of the plot and this sort of shape is sometimes

51
00:03:58.480 --> 00:04:01.310
known as a bullet.

52
00:04:01.470 --> 00:04:09.130
So this bullets or general shape of the curvature it seems create a border and this actually indicates

53
00:04:09.130 --> 00:04:11.520
the highest return for volatility.

54
00:04:11.650 --> 00:04:17.700
So you can imagine that at that actual border if you look at the x axis you have that particular volatility.

55
00:04:17.830 --> 00:04:23.650
And if you jump and go along the y axis until you hit that border you'll end up getting the best return

56
00:04:23.650 --> 00:04:24.830
for that volatility.

57
00:04:26.250 --> 00:04:31.560
So anything below that border is probably a bad choice because you could have got a higher return for

58
00:04:31.560 --> 00:04:33.730
the same amount of volatility.

59
00:04:33.750 --> 00:04:39.120
So for instance if you're somewhere in the middle let's say 0.2 volatility on the x axis and you slowly

60
00:04:39.120 --> 00:04:44.880
start to make your way up on the y axis you're going to get better and better returns for the same volatility

61
00:04:45.180 --> 00:04:47.990
all the way until you hit that actual border point.

62
00:04:49.260 --> 00:04:52.320
This border is known as the efficient frontier.

63
00:04:52.320 --> 00:04:57.000
And this idea of being able to use this border in the efficient frontier is also sometimes known as

64
00:04:57.050 --> 00:04:59.530
Marco its portfolio optimization.

65
00:04:59.550 --> 00:05:03.930
And what we're going to end up doing is using Python to discover the sporter And we'll also plot it

66
00:05:03.930 --> 00:05:04.940
out.

67
00:05:04.950 --> 00:05:05.400
All right.

68
00:05:05.400 --> 00:05:09.900
So in the next lecture we're going to walk through all of this using Python to calculate these metrics

69
00:05:09.990 --> 00:05:11.190
and these topics.

70
00:05:11.190 --> 00:05:12.020
Thanks everyone.

71
00:05:12.030 --> 00:05:13.080
I'll see you at the next lecture.
