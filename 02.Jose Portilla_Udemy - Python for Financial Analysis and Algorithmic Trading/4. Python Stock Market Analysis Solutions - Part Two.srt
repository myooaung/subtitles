1
00:00:05,330 --> 00:00:10,520
Hello everyone and welcome to part two of the stock market analysis project solutions in part two we're

2
00:00:10,520 --> 00:00:16,340
going to take a little aside and focus on the bonus visualization task of actually coding that candlestick

3
00:00:16,370 --> 00:00:16,900
chart.

4
00:00:16,940 --> 00:00:21,380
If that doesn't interest you go ahead and hop over to Part 3 where we actually end up doing some financial

5
00:00:21,380 --> 00:00:22,520
analysis.

6
00:00:22,520 --> 00:00:22,730
OK.

7
00:00:22,730 --> 00:00:24,080
Here I am at the Jupiter notebook.

8
00:00:24,110 --> 00:00:27,050
This bonus visualization task now a quick note.

9
00:00:27,090 --> 00:00:31,850
We wanted to do is create some sort of candlestick chart for Ford in January 2012.

10
00:00:31,910 --> 00:00:33,740
If you did this for the entire data frame.

11
00:00:33,740 --> 00:00:35,750
It's not really going to look good for candlestick chart.

12
00:00:35,780 --> 00:00:40,680
You won't get that much information you'll see a bunch of light green and red lines everywhere.

13
00:00:40,970 --> 00:00:42,600
So there's also a link here.

14
00:00:42,620 --> 00:00:44,070
Finance them all HTL.

15
00:00:44,080 --> 00:00:48,230
And if you click on that link they'll take you to this page where essentially just shows you a full

16
00:00:48,230 --> 00:00:50,320
example of how to actually create this candlestick chart.

17
00:00:50,340 --> 00:00:56,570
So you could have done it many ways either just directly copy and paste from this example or actually

18
00:00:56,570 --> 00:00:59,040
use the data for what we provided.

19
00:00:59,090 --> 00:01:01,030
So we're going to kind of do a mix of both.

20
00:01:01,070 --> 00:01:05,170
A lot of our codes going to come from that example directly but some of it won't.

21
00:01:05,570 --> 00:01:09,330
We're going to do is start off with some of the imports that are in that example.

22
00:01:09,470 --> 00:01:19,760
First one being from public finance I'm going to import candlestick underscore HLC so HLC that stands

23
00:01:19,760 --> 00:01:26,030
for open high low close essentially indicating that's the order it expects the array's tuples to come

24
00:01:26,030 --> 00:01:34,030
in and will actually create a list or array of tuples later on then we're going to save from map plot

25
00:01:34,040 --> 00:01:41,280
live dot dates import or an import a couple of things here we can import formatter.

26
00:01:41,450 --> 00:01:48,020
We're going to import date to numb that is date to number which converts a date time object to a number

27
00:01:48,070 --> 00:01:50,140
that loop can understand.

28
00:01:50,240 --> 00:01:57,830
Then we also import weekday locator day locator and then in all caps Monday which kind of sets What

29
00:01:57,830 --> 00:01:59,820
day is Monday of the week.

30
00:02:00,590 --> 00:02:04,880
OK so all those imports and a lot of the imports are kind of following the examples here from these

31
00:02:05,060 --> 00:02:07,360
first couple of imports.

32
00:02:07,360 --> 00:02:12,220
Next thing I want to do is we take a look at our Ford data frame right now.

33
00:02:12,250 --> 00:02:13,840
Just take a look at the head of it.

34
00:02:13,930 --> 00:02:19,090
We have open high low close volume and then total traded from before our dates right now is still at

35
00:02:19,090 --> 00:02:20,020
the index.

36
00:02:20,020 --> 00:02:22,480
We want to kind of play around that and apply some things to it.

37
00:02:22,600 --> 00:02:29,470
So let's go ahead and reset this back to be part of a column.

38
00:02:29,490 --> 00:02:36,420
So we're going to say is Ford underscore reset and anoints set that equal to first off is crap everywhere.

39
00:02:36,480 --> 00:02:47,740
That has January values so we'll just say for Alosi and we'll say 2012 0 1 and WIPs.

40
00:02:47,850 --> 00:02:49,950
So if we take a look at forward reset right now

41
00:02:52,880 --> 00:02:56,150
you'll notice this is actually all the January values.

42
00:02:56,150 --> 00:03:02,230
So we have all the January values and then we're going to also reset that index

43
00:03:05,510 --> 00:03:08,610
so we're seeing both those commands resets that date index.

44
00:03:08,610 --> 00:03:14,210
So keep in mind all I've done here is I grabbed everything that was in the January month of 2012 and

45
00:03:14,210 --> 00:03:16,360
then I reset the index.

46
00:03:16,360 --> 00:03:22,490
And the one I'm going to do here is if I call info I can see that my date column is still a date time

47
00:03:22,490 --> 00:03:23,710
object.

48
00:03:23,750 --> 00:03:30,470
So the next thing to do is once I have this date time object as a column I'm going to say Ford underscore

49
00:03:32,090 --> 00:03:39,040
resets going to create a new column called dates underscore x.

50
00:03:39,050 --> 00:03:41,430
Let me zoom in one more level here.

51
00:03:41,430 --> 00:03:50,260
Scroll up so dates underscore X for axes and then we're going to take the forward reset theta frame

52
00:03:50,260 --> 00:03:51,200
again.

53
00:03:51,430 --> 00:03:57,540
I'm going to take my current day column and I'm going to apply the following lambda expression my land

54
00:03:57,540 --> 00:04:05,510
the expression is going to take in that date and then it's going called date to come on it and we'll

55
00:04:05,510 --> 00:04:07,300
see what that is in just a second.

56
00:04:07,580 --> 00:04:13,960
So run that and then if you take a look at forward reset just the head of the data frame.

57
00:04:13,970 --> 00:04:19,970
Notice that this data axes value is now a numerical value and this numerical value is going to be part

58
00:04:19,970 --> 00:04:20,570
of what we give.

59
00:04:20,580 --> 00:04:27,680
Matt Lyd my lib doesn't do such a great job as Pandurs as far as directly interpreting a time series

60
00:04:27,680 --> 00:04:28,490
index.

61
00:04:28,490 --> 00:04:32,210
So one way to get around that is by actually just writing this number.

62
00:04:32,240 --> 00:04:37,400
Now there's many ways to not have to do this but this is kind of the simplest far as a one liner way

63
00:04:37,670 --> 00:04:39,020
of cravenness candlestick chart.

64
00:04:39,020 --> 00:04:44,930
So we have this data underscore a x object that will continue to use and then we're going to do is finally

65
00:04:44,930 --> 00:04:48,290
create basically an array of tuple values.

66
00:04:48,900 --> 00:04:52,680
So we're going to save forward underscore values.

67
00:04:53,180 --> 00:04:59,180
Now we're going to set that equal to we'll call a tuple of owls.

68
00:05:01,200 --> 00:05:07,070
For vowels in for reset.

69
00:05:07,110 --> 00:05:12,320
And then the columns I want are my limits it's actually pass and illis the columns here.

70
00:05:13,080 --> 00:05:15,870
Fact Let's make this into a different variable so it's a little clear.

71
00:05:15,880 --> 00:05:26,790
So list of calls the ones are going to are my day axes first and then it expects the open high low close

72
00:05:26,790 --> 00:05:28,290
in that order.

73
00:05:28,290 --> 00:05:29,460
So I'll say open

74
00:05:37,450 --> 00:05:44,990
low close and I'm going to grab that list of columns.

75
00:05:45,790 --> 00:05:47,750
From Ford reset.

76
00:05:47,860 --> 00:05:55,590
So I'm saying OK for the values in this list the columns are going to end up doing is off of this I

77
00:05:55,630 --> 00:06:00,710
will call the values to actually get those values out.

78
00:06:02,290 --> 00:06:03,550
OK so what does that actually doing.

79
00:06:03,560 --> 00:06:09,860
Well if we take a look at for the values and ends up just being a list of tuples where the tuples are

80
00:06:09,860 --> 00:06:12,730
at the individual row values for that list column.

81
00:06:12,730 --> 00:06:15,380
So I have this data X object.

82
00:06:15,520 --> 00:06:21,260
The open price at that axes object the high price the low price and the closing price.

83
00:06:21,280 --> 00:06:23,240
And this is the kind of format that we can easily use.

84
00:06:23,250 --> 00:06:28,610
Matt Paul lib just a list or array of tuples So we have these four values.

85
00:06:28,630 --> 00:06:35,050
Now all we need to do is set the ticks so we can plot it which essentially is just going to be kind

86
00:06:35,050 --> 00:06:37,560
of just copying and pasting from what we have here.

87
00:06:37,570 --> 00:06:41,540
This week they locator they locator the formatter and the formatter.

88
00:06:41,540 --> 00:06:48,690
So we're going to just copy and paste this directly from this example and instead of on days we can

89
00:06:48,690 --> 00:06:50,200
call this up.

90
00:06:50,340 --> 00:06:52,780
That's the on there that should be Mondays.

91
00:06:52,890 --> 00:06:53,830
So that's should be.

92
00:06:53,850 --> 00:06:57,310
Mondays will have all days week format or day for matter.

93
00:06:57,360 --> 00:07:02,910
So everything there we'll use the same as in the example and then we're going to do is actually come

94
00:07:02,910 --> 00:07:04,320
back the example.

95
00:07:04,530 --> 00:07:06,670
And we're also going to just copy and paste this from here

96
00:07:11,110 --> 00:07:15,560
and this is the actual plotting formatter so that sets all the axes.

97
00:07:15,560 --> 00:07:17,230
But right now there's nothing there.

98
00:07:17,320 --> 00:07:20,620
The last thing we need to do is call candlestick.

99
00:07:20,620 --> 00:07:22,060
So that's this line right here.

100
00:07:22,060 --> 00:07:23,840
Candlestick Oh HLC.

101
00:07:23,920 --> 00:07:25,650
So let's actually do that.

102
00:07:26,430 --> 00:07:36,230
We'll say candlestick 0 Chelsea pasan a X which is the axes This creates using these Piazzi that subplots

103
00:07:37,040 --> 00:07:44,020
we pass and the values we calculated which is four to values and then we can give it a width of 0.6.

104
00:07:44,200 --> 00:07:45,640
You can play around with later on.

105
00:07:45,950 --> 00:07:51,040
And if we just stick with this and run this we end up getting a bunch of outputs.

106
00:07:51,050 --> 00:07:55,590
But then we set the default here on the candlestick.

107
00:07:55,620 --> 00:08:05,080
So then the next thing to do is say to find color up to be green and the fine colored down to the red

108
00:08:07,770 --> 00:08:09,040
and let's put a call in here.

109
00:08:09,060 --> 00:08:10,710
We don't see that huge output.

110
00:08:11,280 --> 00:08:12,070
And there we have it.

111
00:08:12,180 --> 00:08:18,120
We have our candlestick chart and you can measure this with parameter to kind of make these things a

112
00:08:18,120 --> 00:08:18,740
little wider.

113
00:08:18,750 --> 00:08:22,790
So if you want them to be a little skinnier or point one you can see they're a little skinnier.

114
00:08:22,980 --> 00:08:23,370
OK.

115
00:08:23,400 --> 00:08:25,260
So definitely a lot of new stuff there.

116
00:08:25,260 --> 00:08:30,230
And a lot of stuff of that pot lib that we didn't discuss and is like very specific to this example.

117
00:08:30,420 --> 00:08:35,160
If you got stuck on this for having a hard time understanding it really don't worry about it too much.

118
00:08:35,160 --> 00:08:37,770
This is not something we're going to be focusing on in this course.

119
00:08:37,770 --> 00:08:42,960
Mainly this is just an exercise of can I come over to the documentation example check out some code

120
00:08:43,230 --> 00:08:46,930
and then kind of copy and paste it to apply it to my own situation.

121
00:08:46,950 --> 00:08:49,670
That's really what this is an exercise and it's not an exercise.

122
00:08:49,830 --> 00:08:55,110
Can I immediately understand what this weekday locaters doing and what this kind of strange capitalize

123
00:08:55,110 --> 00:08:58,330
that Monday's doing which just adds major ticks on the Mondays.

124
00:08:58,440 --> 00:09:01,170
And then Meyer takes on the rest of these.

125
00:09:01,230 --> 00:09:03,770
So again don't worry too much about the actual code here.

126
00:09:03,820 --> 00:09:08,040
We're going to be talking a lot more about candlestick plots later on when they actually represent how

127
00:09:08,040 --> 00:09:12,730
you can read them and better ways of making them with all this stuff from that public.

128
00:09:13,120 --> 00:09:13,410
OK.

129
00:09:13,450 --> 00:09:19,180
So again this is mainly an exercise of kind of come over to an example page kind of copy and paste format

130
00:09:19,210 --> 00:09:26,920
my data and get a similar result using my own candlestick code versus actually understanding every single

131
00:09:26,920 --> 00:09:28,290
line and what it's doing.

132
00:09:28,740 --> 00:09:34,360
OK so let's move on to part three which will be the next lecture where we actually go over some basic

133
00:09:34,360 --> 00:09:35,620
financial analysis.
