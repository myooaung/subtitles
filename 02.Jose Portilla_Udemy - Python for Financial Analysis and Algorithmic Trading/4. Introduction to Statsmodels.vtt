WEBVTT
1
00:00:05.710 --> 00:00:12.330
Hello everyone in this lecture will be discussing the stats models Python library the most popular library

2
00:00:12.330 --> 00:00:17.190
or module in Python for dealing with time series data is the stats model's library and it's heavily

3
00:00:17.190 --> 00:00:19.810
inspired by our statistical programming language.

4
00:00:19.830 --> 00:00:23.610
So if you ever done any work with our model is going to feel a little bit familiar to you.

5
00:00:24.830 --> 00:00:30.040
So that's Mallos in general it's just that Python module that allows users to explore data estimates

6
00:00:30.040 --> 00:00:36.150
to models and performs testicle tests and it has an extensive list of descriptive statistics the skill

7
00:00:36.170 --> 00:00:40.670
tests plotting functions and results districts that are all available for different types of data and

8
00:00:40.670 --> 00:00:47.310
each estimator will be focusing on its capabilities with time series data so stat's models already included

9
00:00:47.310 --> 00:00:51.400
in the provided environment file that we recommend you use if you're using some other environment.

10
00:00:51.420 --> 00:00:53.350
You can manually install it using Condon's.

11
00:00:53.420 --> 00:00:56.880
That's models or check out the documentation page that's models.

12
00:00:56.940 --> 00:01:00.910
Or to check out the Pippin's instructions OK.

13
00:01:00.910 --> 00:01:04.690
We're going to explore the documentation and then run through a simple demonstration of what we can

14
00:01:04.690 --> 00:01:07.540
use stat's models for in relation to time series data.

15
00:01:07.780 --> 00:01:09.970
Let's hop over to our browser and get started.

16
00:01:11.940 --> 00:01:14.500
All right so here we are at stat's models start.

17
00:01:14.670 --> 00:01:19.440
And again if you don't use the actual environment that we provide There's installation instructions

18
00:01:19.440 --> 00:01:19.960
right here.

19
00:01:19.980 --> 00:01:24.450
You can just use can install stat's models or Pipp install right here that's models will be working

20
00:01:24.450 --> 00:01:28.400
with the zero point eight point zero release of stat's models.

21
00:01:28.530 --> 00:01:31.990
So you can see here on the main page there some minimal examples of how to use this.

22
00:01:32.000 --> 00:01:34.870
And we'll be working through an example in just a little bit.

23
00:01:35.100 --> 00:01:36.510
And these are the kind of results you get.

24
00:01:36.510 --> 00:01:41.520
It gives you back a pretty detailed regression results for using some sort of statistical test using

25
00:01:41.520 --> 00:01:42.570
stat's models.

26
00:01:42.630 --> 00:01:45.800
If you keep scrolling down here you'll eventually see a citation.

27
00:01:45.810 --> 00:01:47.530
And then the basic documentation link.

28
00:01:47.700 --> 00:01:51.630
So sometimes a little hard to find the documentation because you have scroll down a bit for it but you'll

29
00:01:51.630 --> 00:01:57.510
find the table of contents and we're really going to use focusing on using the time series analysis

30
00:01:57.600 --> 00:01:59.400
modules if you expand this.

31
00:01:59.400 --> 00:02:05.400
You can see time series analysis descriptive tests estimation Armah process time series filters TSA

32
00:02:05.400 --> 00:02:09.570
tools time series analysis et cetera adding trend the composition.

33
00:02:09.570 --> 00:02:11.850
So that's really where we're going to be using stat's models.

34
00:02:12.000 --> 00:02:17.020
There's also some state space models that we'll be showing later on for things like seasonal AREMA.

35
00:02:17.520 --> 00:02:17.970
Okay.

36
00:02:18.180 --> 00:02:22.590
So that's the Table of Contents you can explore that on your own if you want to just see some straight

37
00:02:22.590 --> 00:02:27.570
up examples you can click here on this tab or it says examples and then you can go to the topics that

38
00:02:27.570 --> 00:02:28.110
interest you.

39
00:02:28.110 --> 00:02:33.510
For example time series analysis they'll scroll down here you see a time series analysis there's autocorrelation

40
00:02:33.510 --> 00:02:36.360
partial autocorrelation plots or sunspots data.

41
00:02:36.390 --> 00:02:37.300
You click on that.

42
00:02:37.410 --> 00:02:38.840
It'll bring you to the actual page.

43
00:02:38.860 --> 00:02:45.470
We have the example and luckily the examples are formatted like Egypt or notebooks you can easily take

44
00:02:45.470 --> 00:02:47.930
this and run with it on your own Jupiter notebook.

45
00:02:47.930 --> 00:02:51.070
So you can see how some plotting capabilities it works really well.

46
00:02:51.080 --> 00:02:55.970
Pandurs if autocorrelation and partial correlation charts and will actually cover these and this section

47
00:02:55.970 --> 00:03:02.540
of the course and it just shows a basic example of modeling some sunspot activity I believe.

48
00:03:02.540 --> 00:03:03.170
All right.

49
00:03:03.170 --> 00:03:08.490
So let's go ahead and jump over to our own Jupiter notebook and get started if a simple example.

50
00:03:08.540 --> 00:03:14.180
So in your Python for finance repo you should see time series analysis as a section will be working

51
00:03:14.180 --> 00:03:16.920
with this introduction to stat's models.

52
00:03:16.940 --> 00:03:18.810
So here's the introduction that's models.

53
00:03:18.810 --> 00:03:21.030
There's a nice explanation of everything we're going to be doing.

54
00:03:21.110 --> 00:03:25.880
Since I'm actually going to work through this I will just start a new notebook here so I'll start a

55
00:03:25.880 --> 00:03:26.600
new notebook.

56
00:03:26.690 --> 00:03:35.360
And the first thing to do is a couple of imports so I'm going to start off by importing pandas as PD

57
00:03:36.260 --> 00:03:46.730
or import map plot lib pipe plot as PLDT and I will say map plots live in line and then just in case

58
00:03:46.730 --> 00:03:51.240
I need it I don't believe we'll use it but I'll import some pie as and P.

59
00:03:51.560 --> 00:03:55.850
So this is the imports that we've been using throughout this course and we're going to do is import

60
00:03:56.750 --> 00:04:02.580
stat's models that API as S.M. and this is typically how you import stats models.

61
00:04:02.600 --> 00:04:05.170
Now if you're running this you may get a small warning.

62
00:04:05.210 --> 00:04:10.640
It may say something like Hey panel is that court date tools model module is going to be removed in

63
00:04:10.640 --> 00:04:11.650
a future version.

64
00:04:11.690 --> 00:04:16.910
You don't really have to worry about that right now if everything's on the same versions as the environment

65
00:04:16.910 --> 00:04:18.110
file we provide.

66
00:04:18.110 --> 00:04:19.360
So this is just a warning.

67
00:04:19.370 --> 00:04:20.280
It's not an error.

68
00:04:20.300 --> 00:04:21.620
Again you can pretty much ignore this.

69
00:04:21.620 --> 00:04:25.700
In fact if you run this line again you won't see the error or that warning anymore.

70
00:04:26.210 --> 00:04:30.030
So we're going to do is actually grab a data set from stat's models.

71
00:04:30.050 --> 00:04:31.950
It actually comes up a couple of data sets.

72
00:04:32.180 --> 00:04:38.760
And the way you access them is you say S-M dot data sets and used have to autocomplete here.

73
00:04:38.980 --> 00:04:42.900
And then there's Well if hit tab here there's various datasets you can use.

74
00:04:43.090 --> 00:04:45.890
We're going to be using the macro data.

75
00:04:46.210 --> 00:04:52.270
And then there's various things you can do if it were going to be using the load underscore panderers

76
00:04:52.330 --> 00:04:55.470
we call that method and then call data off of it.

77
00:04:55.540 --> 00:04:58.120
Now we're going to set this whole thing equal to death.

78
00:04:58.180 --> 00:05:01.120
Now this is definitely not a very intuitive way to grab this data.

79
00:05:01.120 --> 00:05:05.030
Took me a couple of tries to realize that you had to call this data attribute.

80
00:05:05.110 --> 00:05:08.720
After calling load Pandurs maybe they'll get a fix in the future.

81
00:05:08.770 --> 00:05:12.330
I don't think so much into the way but you know that's how we can get the data.

82
00:05:12.340 --> 00:05:19.320
So if I check out my data from now I get back this I have a year or a quarter some real GDP values and

83
00:05:19.320 --> 00:05:20.760
then various other things.

84
00:05:20.760 --> 00:05:26.040
So this is just some basic government data and if you want the actual description for it we can do is

85
00:05:26.040 --> 00:05:35.700
say print out S-M dot data sets that macro data and then in all caps the notes attribute and then this

86
00:05:35.720 --> 00:05:37.730
actually reports back what it actually is about.

87
00:05:37.730 --> 00:05:40.460
So it's just some real gross domestic property.

88
00:05:40.640 --> 00:05:42.430
And I believe that all United States data.

89
00:05:42.440 --> 00:05:47.930
So things like quarterly monthly average of the monthly three month Treasury bill and the quarter consumer

90
00:05:47.930 --> 00:05:51.810
price index or just economic data for the United States.

91
00:05:51.820 --> 00:05:52.050
All right.

92
00:05:52.070 --> 00:05:53.580
So we're going to continue down here.

93
00:05:53.780 --> 00:05:57.230
And what we're going to do is check out the head of our data frame again.

94
00:05:57.230 --> 00:06:00.610
So we see we have these various columns and we'll see that we have a year.

95
00:06:00.830 --> 00:06:06.200
So notice that we can actually set the year to be a time series index instead of being a column.

96
00:06:06.200 --> 00:06:08.380
So let's go ahead and do that.

97
00:06:08.420 --> 00:06:13.610
There's various ways we can do that one way we can do is actually using stat's models own time series

98
00:06:13.670 --> 00:06:14.870
analysis tools.

99
00:06:14.870 --> 00:06:16.930
So we'll show you how to do that.

100
00:06:17.090 --> 00:06:20.660
In reality we'll probably use the panel's tools we're already familiar with but I just want to show

101
00:06:20.660 --> 00:06:24.740
you that stat's models does have the capability for this so you don't need to worry about memorizing

102
00:06:24.740 --> 00:06:31.620
this but I'll show you what it's capable of will say stat's models are S-M TSA that is time series analysis.

103
00:06:31.850 --> 00:06:37.010
And then there's date tools off of that and then there's a variety of methods you can call and the method

104
00:06:37.010 --> 00:06:45.060
we're going to be doing is saying date from range and then we can report here is just a starting date

105
00:06:45.150 --> 00:06:46.110
and an ending date.

106
00:06:46.140 --> 00:06:48.750
And this can actually taken a date strings.

107
00:06:48.750 --> 00:06:51.280
So there are certain parameters there's more examples here.

108
00:06:51.390 --> 00:06:56.630
You can see you can take a string in the form of like 1960 M1 meaning the first month 1960.

109
00:06:56.820 --> 00:07:02.910
So we can actually pass this a string something that says something like 1959 and I will say q one for

110
00:07:02.910 --> 00:07:04.840
quarter one because that's what we're starting.

111
00:07:04.860 --> 00:07:08.050
So 1959 quarter 1 is where we're starting.

112
00:07:08.160 --> 00:07:15.300
And then the end of it let's get the tail of this is 2009 quarter of theories.

113
00:07:15.310 --> 00:07:18.910
Let's go ahead and put that in we'll say 2009.

114
00:07:19.190 --> 00:07:25.630
Q 3 so this sort of functionality is not something you can get with panels directly pand those you'd

115
00:07:25.630 --> 00:07:30.400
have to actually tell it the format of this type of string order for it to read correctly that's models

116
00:07:30.400 --> 00:07:31.550
can be a little more flexible.

117
00:07:31.570 --> 00:07:38.490
But then again you are calling quite a bit of attributes and methods offsets models to get to this functionality.

118
00:07:38.500 --> 00:07:40.630
So we don't use this sort of thing that often.

119
00:07:40.640 --> 00:07:42.850
Just keep in mind that it is available for you.

120
00:07:42.940 --> 00:07:49.850
So out of this whole thing we're going to create index out of this by just saying PD the index and pass

121
00:07:49.850 --> 00:07:51.650
that whole thing into an index.

122
00:07:51.820 --> 00:07:56.140
And if we just see the result of this we get this date time index where it's kind of like a quarterly

123
00:07:56.140 --> 00:08:00.400
index and we'll make this just be a variable called index.

124
00:08:00.400 --> 00:08:07.830
So then what I'm going to do is call my data from index and set it equal to index so that if I check

125
00:08:07.830 --> 00:08:09.030
out the head of my data.

126
00:08:09.030 --> 00:08:14.970
So now we can see here we have 1959 Jame for a March 30 first and that's the end of the first quarter

127
00:08:14.970 --> 00:08:16.210
of 1959.

128
00:08:16.560 --> 00:08:22.140
So that's what our data looks like now and we're going to do is a little bit of analysis on it so we

129
00:08:22.140 --> 00:08:33.210
can just take something like the real GDP and I can plot this says is the real GDP from 1959 all the

130
00:08:33.210 --> 00:08:34.040
way to 2009.

131
00:08:34.050 --> 00:08:37.470
You can see just steadily increasing increasing for United States.

132
00:08:37.470 --> 00:08:41.070
So we're going to do is we're going to use that as models to get the trend and we're going to use something

133
00:08:41.070 --> 00:08:43.700
called the hot drink Prescott filter.

134
00:08:43.830 --> 00:08:50.340
And what it does is it separates a time series of white teeth into a trend tau and a cyclical component

135
00:08:50.750 --> 00:08:51.530
Zaida.

136
00:08:51.630 --> 00:08:56.730
So you can see the formula if you go over to introduction is that's models and scroll down here the

137
00:08:56.730 --> 00:09:01.800
actual formula for this sort of filter is right here really don't need to worry about this formula.

138
00:09:01.800 --> 00:09:04.350
This is just an example of what's possible that's models.

139
00:09:04.560 --> 00:09:06.890
We won't really be doing this kind of thing that often.

140
00:09:07.350 --> 00:09:10.080
So we'll come back to our notebook and kind of program it out.

141
00:09:10.290 --> 00:09:18.350
So we call S-M TSA filters that you can see that there's a list of filters here.

142
00:09:18.540 --> 00:09:22.890
So we're going to be using H-P filter for that Heidrich Prescott filter.

143
00:09:23.100 --> 00:09:30.510
And then we're just going to pass in the real GDP column so real GDP.

144
00:09:30.510 --> 00:09:40.070
So what this actually returns is a tuple so we can set this as result and then see the type of results.

145
00:09:40.190 --> 00:09:45.450
And it's a tuple where the items in the tuple for Take a look at results zero.

146
00:09:45.460 --> 00:09:51.910
This happens to be a series and if we take a look at the second item that's also a series and that should

147
00:09:51.910 --> 00:09:55.800
be if we take a look at another item for that there's nothing there.

148
00:09:55.810 --> 00:09:57.480
So it's just a tuple of two items.

149
00:09:57.760 --> 00:10:02.500
And if you take a look at the documentation and read more about this filter what ends up returning if

150
00:10:02.500 --> 00:10:06.460
you expand this it returns back cycle and trend.

151
00:10:06.670 --> 00:10:10.660
So it's the estimated cycle and the data and the estimated trend and the data.

152
00:10:10.670 --> 00:10:15.420
So the easiest one to understand is the trend which is just the general trend line of this data.

153
00:10:15.640 --> 00:10:20.340
So it's pretty obvious from this sort of time scale that the trend tends to be upward.

154
00:10:20.380 --> 00:10:25.570
So we're going to do is use tuple in packing to actually grab that trend off of this and then we'll

155
00:10:25.570 --> 00:10:29.720
plot it on top of that so we will say the following.

156
00:10:29.730 --> 00:10:38.130
We'll use tuple unpacking here will say GTP underscore cycle comma and then GDP underscore trend and

157
00:10:38.140 --> 00:10:39.700
set that equal to that filter.

158
00:10:40.780 --> 00:10:41.860
And then we're going to do.

159
00:10:41.890 --> 00:10:45.370
This is actually add in a column for the trend.

160
00:10:45.700 --> 00:10:54.970
So we'll say DSF trends value is equal to GDP underscore trend.

161
00:10:55.190 --> 00:11:03.300
And then I'm going to plot not just the real GDP but it will also be plotting that trend that we just

162
00:11:03.300 --> 00:11:09.990
calculated using that filter and don't worry about how the filter works or how it actually returns back.

163
00:11:09.990 --> 00:11:13.550
These two series objects we don't really need to concern ourselves with that.

164
00:11:13.590 --> 00:11:16.670
I'm just showing you what's possible of stat's models.

165
00:11:16.670 --> 00:11:21.900
So now we run this and we get this nice little trend line so we can see here that the basic Ora's trend

166
00:11:22.350 --> 00:11:26.790
is kind of modeling the trend and then we see the real GDP value at this scale.

167
00:11:26.790 --> 00:11:28.410
It's not super obvious what's happening here.

168
00:11:28.410 --> 00:11:35.650
So it's actually kind of zoom in so I can zoom in just by doing another set of brackets here or indexing

169
00:11:35.910 --> 00:11:36.600
will star.

170
00:11:36.680 --> 00:11:39.250
Let's just say we'll start from 2000.

171
00:11:39.410 --> 00:11:46.910
We'll start from the first quarter of 2000 so we'll say 2000 0 3 31 coal and all the way to the end.

172
00:11:46.920 --> 00:11:47.750
Plot that.

173
00:11:47.860 --> 00:11:49.870
And now the trend line becomes a lot clearer.

174
00:11:49.900 --> 00:11:55.130
So we see this real GDP value and then we see that trend component that we calculated using that filter.

175
00:11:55.200 --> 00:11:57.090
That's kind of what stat's models can do.

176
00:11:57.100 --> 00:12:00.590
It has a ton of mathematical statistical tests and filters that are built in.

177
00:12:00.670 --> 00:12:04.650
And then once you understand those filters you can calculate them and use them easily.

178
00:12:04.720 --> 00:12:09.940
That's models so you can see here in just a few lines we did a lot of heavy math to get that trend.

179
00:12:09.940 --> 00:12:13.840
Now we're actually going to be kind of breaking this sort of thing down and doing it step by step and

180
00:12:13.840 --> 00:12:19.330
then later on the course will kind of call these convenient filters for analyzing time series data.

181
00:12:19.330 --> 00:12:24.340
All right I hope you felt that stat's models is a really powerful tool and we're going to do is keep

182
00:12:24.340 --> 00:12:27.130
exploring it throughout this section of the course.

183
00:12:27.130 --> 00:12:27.940
Thanks everyone.

184
00:12:27.980 --> 00:12:28.990
I'll see you at the next lecture.
