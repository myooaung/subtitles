1
00:00:05,330 --> 00:00:06,590
Welcome back everyone.

2
00:00:06,620 --> 00:00:12,020
And what we're going to do in this lecture is grab our make pipeline function from the previous lecture

3
00:00:13,300 --> 00:00:20,390
copy it and then paste it into the ID and I can actually see excellently call that pipeline.

4
00:00:20,450 --> 00:00:26,720
So let's go ahead and give that E for make pipeline and I like autocall that here it's at Pipeline as

5
00:00:26,720 --> 00:00:29,470
well but not really a huge deal here.

6
00:00:29,750 --> 00:00:33,900
OK so we have our giant pipeline function from the research notebook.

7
00:00:34,040 --> 00:00:39,230
So once you're done using the research in a book you need to do is add a couple more steps here to make

8
00:00:39,230 --> 00:00:41,860
it work in the actual IP.

9
00:00:42,170 --> 00:00:46,590
So we're going to have as always initialize function.

10
00:00:46,800 --> 00:00:54,680
So we'll say initialize and this always takes in a context and then we're going to do it in order to

11
00:00:54,680 --> 00:01:06,020
actually basically have the pipeline in our ID we say My pipe is equal to make pipeline actually calling

12
00:01:06,020 --> 00:01:10,580
that function to return the pipeline because remember make pipeline if you scroll down actually returns

13
00:01:10,580 --> 00:01:11,710
that pipeline object.

14
00:01:11,870 --> 00:01:15,140
Once in the initialize function you've created this pipe object.

15
00:01:15,140 --> 00:01:22,730
What you do is you call the following function you say attach pipeline you'll say attach underscore

16
00:01:23,820 --> 00:01:30,630
pipeline and then you say my pipe and then what you want to call it usually you just call it something

17
00:01:30,630 --> 00:01:34,590
like my pipeline.

18
00:01:34,680 --> 00:01:37,770
But in order to use that attach pipeline you actually need to import that.

19
00:01:37,770 --> 00:01:50,470
So you can just save from Quanto up in Dot algorithm import attach pipeline.

20
00:01:50,490 --> 00:01:55,680
So this is basically the main function that translates your pipeline from a research notebook environment

21
00:01:55,800 --> 00:01:57,720
into an ideal environment.

22
00:01:57,750 --> 00:02:03,080
You say import attached pipeline and then the other one we're going to end up using later on is Pipeline

23
00:02:03,100 --> 00:02:05,440
underscore output.

24
00:02:05,460 --> 00:02:10,680
So those are the two main ones that basically connects a pipeline into the ID and from here let's go

25
00:02:10,680 --> 00:02:14,690
ahead and do the other imports that are make pipelined function of the pends on things like getting

26
00:02:14,700 --> 00:02:15,800
the sector.

27
00:02:15,810 --> 00:02:20,590
Q Fifteen hundred U.S. average dollar volumes simple moving average etc..

28
00:02:20,930 --> 00:02:30,030
So I'll say from Quanto up in the pipeline import pipeline because we use that at the very end of that

29
00:02:30,150 --> 00:02:36,600
make pipeline function then also save from Quanto up in the pipeline

30
00:02:39,300 --> 00:02:50,810
data that built in import U.S. equity pricing.

31
00:02:51,040 --> 00:03:02,400
And then we'll also say from Quanto up in the pipeline factors we're going to import that average dollar

32
00:03:02,400 --> 00:03:06,560
volume and simple moving average.

33
00:03:06,620 --> 00:03:10,470
And if you don't really want to waste your time typing these all out you can just copy and paste them

34
00:03:10,770 --> 00:03:15,210
either from the provided notebook or even from the notebook we were working in before and we just have

35
00:03:15,210 --> 00:03:21,410
two more imports here from Quanto up in pipeline filters.

36
00:03:21,600 --> 00:03:23,160
Make sure you spell pipeline right.

37
00:03:23,190 --> 00:03:27,260
I'm sure we'll have to debug a few typos later on at the end of all this but we'll say from Quanto up

38
00:03:27,270 --> 00:03:31,580
in our pipeline that filters Morningstar import.

39
00:03:31,960 --> 00:03:46,590
Q Fifteen hundred us because we use that and then from Quanto up in the pipeline that data in poor Morningstar

40
00:03:48,030 --> 00:03:51,130
now the next thing to do is add in the remaining functions.

41
00:03:51,240 --> 00:03:54,020
So we're going to have one main rebalancing function.

42
00:03:54,210 --> 00:04:00,530
So I will define it and then schedule it so I'll say my rebalance function.

43
00:04:00,530 --> 00:04:06,860
Or you can just call it rebalance always takes in context and data and then right now we'll just say

44
00:04:06,860 --> 00:04:07,860
pass.

45
00:04:07,880 --> 00:04:12,080
So up here in initialize what I'm going to do is schedule it.

46
00:04:12,300 --> 00:04:22,480
So we'll say schedule this function and I'm going to schedule my rebalance and let's have it as far

47
00:04:22,480 --> 00:04:23,270
as date rules.

48
00:04:23,290 --> 00:04:25,690
And this is something you can really just play around with.

49
00:04:25,720 --> 00:04:27,400
We'll have it at the week's start.

50
00:04:28,200 --> 00:04:36,270
And then we can also add some time rules so we can say time rules do it at market open maybe one hour

51
00:04:36,280 --> 00:04:38,720
something so hours equal to 1.

52
00:04:38,830 --> 00:04:42,730
So one hour after the market opens I'm going to call this rebalance function.

53
00:04:42,730 --> 00:04:49,550
Currently there's nothing in it because what I want to do is add in two more functions to this.

54
00:04:49,600 --> 00:04:57,400
So I'm also going to say have my compute Waites function that takes in a context object.

55
00:04:57,450 --> 00:04:59,190
Right now it just passes.

56
00:04:59,190 --> 00:05:05,470
And then after this I'm also going to have a before trading starts.

57
00:05:06,410 --> 00:05:09,220
Context and data.

58
00:05:09,230 --> 00:05:14,150
OK so right now I just have passed and all three of these functions we're going to start off by executing

59
00:05:14,690 --> 00:05:17,570
the compute weights or filling it out I should say.

60
00:05:17,570 --> 00:05:21,980
So I fill up my compute weights first then we'll have rebalance and then we'll have before training

61
00:05:21,980 --> 00:05:22,850
start.

62
00:05:22,850 --> 00:05:28,520
So before trng start it's going to be the one that basically shows us how i can connect the pipeline

63
00:05:28,520 --> 00:05:31,490
I created to an actual function.

64
00:05:31,490 --> 00:05:36,860
So so far we have this giant make pipeline function that we've already covered just like in the research

65
00:05:36,880 --> 00:05:42,740
notebook and it returns a pipeline object in order to use that pipeline object throughout the rest of

66
00:05:42,740 --> 00:05:43,440
the code.

67
00:05:43,610 --> 00:05:50,090
We need to do is up and your initialize function actually create the pipeline and then attach the pipeline

68
00:05:50,120 --> 00:05:56,050
to your workspace and you pass in the pipeline and then the name that you're going to call that pipeline.

69
00:05:56,060 --> 00:06:03,650
So then the way you can actually grab the pipeline and other functions is I can say context the output

70
00:06:03,700 --> 00:06:08,240
I remember context that output this could be called whatever you want you could say context jelly or

71
00:06:08,480 --> 00:06:10,940
something similar but usually want to say context.

72
00:06:10,940 --> 00:06:12,500
My pipeline or context it up.

73
00:06:12,500 --> 00:06:13,590
Etc..

74
00:06:14,000 --> 00:06:20,690
And the reason I call it output is because this function pipeline output can actually grab the pipeline

75
00:06:20,960 --> 00:06:26,220
we attach to the space and the way you do that is we just call it by name.

76
00:06:26,220 --> 00:06:30,540
So again we attached this my pipe object calling it the name my pipeline.

77
00:06:30,540 --> 00:06:33,780
And then inside these other functions I can grab it by saying.

78
00:06:33,780 --> 00:06:36,960
Pipeline output and then passing in the name of the pipeline.

79
00:06:37,710 --> 00:06:43,380
So now that I have that what I want to do is figure out what securities am I going along on and what

80
00:06:43,380 --> 00:06:45,510
securities am I going to short.

81
00:06:45,660 --> 00:06:51,690
Now remember this pipeline object is essentially just a data frame with a date index and then the security

82
00:06:51,780 --> 00:06:53,990
index and then the values you ask for.

83
00:06:53,990 --> 00:06:59,030
I remember down here the column names are longs shorts and percent difference.

84
00:06:59,040 --> 00:07:01,090
Lets actually print this out.

85
00:07:01,170 --> 00:07:07,730
We're going to say print out the context dot output and I'm just going to say this and I'm going to

86
00:07:07,730 --> 00:07:12,830
run this algorithm just for one day so I can see here in the logs what this actually looks like.

87
00:07:12,830 --> 00:07:15,450
So let's say on January 4th 2011.

88
00:07:15,470 --> 00:07:20,080
Let's change this year to January for 2011.

89
00:07:20,280 --> 00:07:21,820
Or even the fifth.

90
00:07:21,990 --> 00:07:27,270
So I'm going to build the algorithm and make sure that this context that output looks like I have undefined

91
00:07:27,270 --> 00:07:28,350
names sector.

92
00:07:28,350 --> 00:07:30,550
Let's make sure actually imported that.

93
00:07:30,570 --> 00:07:34,910
So when I try to run this right off the bat I ended up getting error it says say global name sector

94
00:07:34,910 --> 00:07:41,010
is not the final So if you check out in line 41 I had the energy sector is equal to sector equals or.

95
00:07:41,100 --> 00:07:45,540
If you copy and paste directly from the notebook we were working on instead of the notebook that we

96
00:07:45,540 --> 00:07:49,410
provide we actually forgot to define what sector is.

97
00:07:49,410 --> 00:07:51,940
So we did it in a cell above and our previous notebook.

98
00:07:51,990 --> 00:07:53,560
Let's go ahead and copy that.

99
00:07:53,750 --> 00:07:55,480
So going to come back to the notebook.

100
00:07:55,680 --> 00:07:56,930
Scroll up here.

101
00:07:57,030 --> 00:07:59,530
And basically what I need is this line right here.

102
00:07:59,550 --> 00:08:03,860
Sector is equal to Morningstar asah Cl. Morningstar sector code latest.

103
00:08:03,870 --> 00:08:05,600
So I'm going to copy that.

104
00:08:05,730 --> 00:08:09,150
Bring it back down to this make pipeline example and put it here.

105
00:08:09,540 --> 00:08:11,270
And line 40.

106
00:08:11,340 --> 00:08:13,300
So that should take care of that so let's save this.

107
00:08:13,300 --> 00:08:14,550
Build the algorithm.

108
00:08:14,550 --> 00:08:19,010
Make sure we don't get any more errors here and are going to cost less.

109
00:08:19,020 --> 00:08:21,990
So it's loading the pipeline data that sometimes takes a minute or two.

110
00:08:21,990 --> 00:08:24,540
So since we only ran it for one day.

111
00:08:24,540 --> 00:08:25,170
Here we go.

112
00:08:25,350 --> 00:08:29,700
OK so if we look at the logs I can see here that I'm basically getting the data framed that we had last

113
00:08:29,700 --> 00:08:37,400
time where you have longs percent difference and shorts and these index here is a list of all the equities.

114
00:08:37,440 --> 00:08:40,660
So I want to go ahead and grab that index object.

115
00:08:40,680 --> 00:08:42,020
So let's go ahead and do that.

116
00:08:42,820 --> 00:08:46,160
So essentially he's going to use pansit codes and this is a panel data frame.

117
00:08:46,480 --> 00:08:55,860
So in order to grab the long stocks I'm going to say context the Longs and I want this list where this

118
00:08:55,880 --> 00:08:57,260
happens to be true where I'm going.

119
00:08:57,260 --> 00:08:58,430
True on longs.

120
00:08:58,430 --> 00:09:06,210
So the way we're going to do this is the falling we'll say context thoughts output and then we'll say

121
00:09:06,210 --> 00:09:15,670
context output longs and since it's already essentially a boolean series that's actually all we have

122
00:09:15,670 --> 00:09:16,410
to do.

123
00:09:16,420 --> 00:09:18,340
We could also say it's equal to true.

124
00:09:18,360 --> 00:09:22,070
But since it is already a series of booleans we don't really need to do that.

125
00:09:23,290 --> 00:09:28,030
And then we're going to call the index off of that which is the list of securities and then we'll say

126
00:09:29,190 --> 00:09:34,730
to a list and we're going to do the exact same thing for shorts.

127
00:09:34,800 --> 00:09:38,720
So I'm going to copy this and paste it for my shorts.

128
00:09:40,250 --> 00:09:48,770
But instead of saying longs we'll say shirts and then sit here longs we'll say shorts and there we go.

129
00:09:48,790 --> 00:09:53,470
So all I'm doing is using the pandas knowledge so we have already learned about this is a series of

130
00:09:53,470 --> 00:09:55,090
boolean values longs or shorts.

131
00:09:55,090 --> 00:09:57,500
Remember you can go back to the logs and check that out.

132
00:09:57,640 --> 00:10:03,370
Then I'm calling the index which is the actual panel a series index of all those equity names.

133
00:10:03,490 --> 00:10:08,410
And then I'm calling the method to list which essentially just returns a list of the securities using

134
00:10:08,410 --> 00:10:13,220
that list of securities is what I'm going to be calling when I actually call rebalance here.

135
00:10:13,420 --> 00:10:16,420
But before I can call rebalance I need to somehow compute the weight.

136
00:10:16,420 --> 00:10:18,560
So how much my profile is going to go short.

137
00:10:18,760 --> 00:10:19,060
How much.

138
00:10:19,060 --> 00:10:23,160
My portfolio is going to go a long so under here and compute weight.

139
00:10:23,160 --> 00:10:26,100
Now let's go ahead and fill that in.

140
00:10:26,520 --> 00:10:34,610
So there's lots of ways to do this but one way to do it is to say long waits is equal to let's say I

141
00:10:34,610 --> 00:10:40,670
want to say I want half my portfolio to go long and I want to go long equally in all the stocks in context

142
00:10:40,670 --> 00:10:47,560
that longs than what I'm going to say 0.5 divided by the length of context that lungs.

143
00:10:47,790 --> 00:10:53,330
And that will make sure that 50 percent of my portfolio is equally allocated to every single stock in

144
00:10:53,330 --> 00:10:54,980
that list of context that long.

145
00:10:55,310 --> 00:10:57,860
And I can then do the same for the shorts.

146
00:10:57,860 --> 00:11:07,050
So a short weight is equal to negatives or 0.5 divided by the length of context that shorts and you

147
00:11:07,050 --> 00:11:08,280
can play around with these weights.

148
00:11:08,280 --> 00:11:12,570
I believe in the provided note book it says 90 percent of portfolio goes long 10 percent of it goes

149
00:11:12,570 --> 00:11:13,230
shorts.

150
00:11:13,290 --> 00:11:16,840
Right now 50 50 really depends you can play around with that whatever you want.

151
00:11:16,980 --> 00:11:24,140
But when I'm going to return here is a tuple long waits and then short wait.

152
00:11:24,270 --> 00:11:25,910
And I can later on.

153
00:11:26,160 --> 00:11:26,910
Unpack that.

154
00:11:26,970 --> 00:11:31,800
You actually don't need these princes to kind of just there for readability but once you have that you're

155
00:11:31,800 --> 00:11:35,020
ready to actually calculate the rebalance function.

156
00:11:35,340 --> 00:11:36,410
So let's do that as well.

157
00:11:37,330 --> 00:11:40,160
So I'll say my rebalance and I'm going to do the following.

158
00:11:40,500 --> 00:11:48,170
And going say for security in context the portfolio positions and this basically gives you a list of

159
00:11:48,200 --> 00:11:51,600
every single security that's currently in your portfolio.

160
00:11:52,620 --> 00:11:53,470
I'll do the following.

161
00:11:53,490 --> 00:11:54,510
If the security

162
00:11:57,160 --> 00:12:04,930
is not in context that longs and security sure spell that right.

163
00:12:05,750 --> 00:12:15,880
Is not in so Skewes not in context that long security is not in context shorts and we'll say data.

164
00:12:16,130 --> 00:12:17,930
I can trade this particular security

165
00:12:22,280 --> 00:12:24,760
let's expand this just a little bit so we get some more room here.

166
00:12:26,860 --> 00:12:35,040
So if it's not in Longs if it's not in shorts and they can trade it then I'm going to say Order target

167
00:12:35,040 --> 00:12:38,020
percents of that security

168
00:12:40,920 --> 00:12:42,450
and I'm going to say zero.

169
00:12:42,750 --> 00:12:44,530
So why am I saying zero here.

170
00:12:44,580 --> 00:12:47,070
Well this is a really common rebalancing structure.

171
00:12:47,130 --> 00:12:51,990
We may or may not ever really exit our positions but essentially what the saying is if at some certain

172
00:12:51,990 --> 00:12:57,510
point we have a security in our portfolio that doesn't happen to be in our list of stocks to go long

173
00:12:57,510 --> 00:13:00,640
on or doesn't also happen to be in our list of stocks.

174
00:13:00,640 --> 00:13:01,520
Go on.

175
00:13:01,650 --> 00:13:02,610
And they can treat it.

176
00:13:02,610 --> 00:13:07,800
I'm going to exit out of that position because my pipeline basically said hey this is no longer in my

177
00:13:07,800 --> 00:13:13,500
list of stocks being returned maybe happened to drop out of that top 5 percent tile or maybe even change

178
00:13:13,500 --> 00:13:14,020
sectors.

179
00:13:14,020 --> 00:13:14,580
Who knows.

180
00:13:14,580 --> 00:13:18,080
But something happened here where it's no longer on my list of Longs or shorts.

181
00:13:18,120 --> 00:13:20,280
So I just exit out of that security position.

182
00:13:21,810 --> 00:13:24,450
For the rest of them I'm either going to go long.

183
00:13:24,510 --> 00:13:33,660
So say for security in context that longs remember that's that list of actual security names to go along

184
00:13:33,660 --> 00:13:34,410
on.

185
00:13:34,500 --> 00:13:43,310
We'll say first creating context that longs if I can trade that security.

186
00:13:44,010 --> 00:13:54,770
I will say Order target percent's and order target percent is going to be grab that security and then

187
00:13:54,830 --> 00:13:57,080
I'm going to call context

188
00:13:59,610 --> 00:14:02,250
long waits.

189
00:14:02,380 --> 00:14:07,330
Now keep in mind here I'm calling long waits off this context object.

190
00:14:07,420 --> 00:14:12,950
So I somehow need to actually attach that long way from my compute weights into the context.

191
00:14:12,970 --> 00:14:21,180
So what I'm going to do is down here before trading starts I'm going to say context.

192
00:14:22,070 --> 00:14:35,310
Long waits and then comma context short waits is equal to my compute weights number that function pass

193
00:14:35,310 --> 00:14:40,610
in the context because right now it's not attached to the context I was just returning.

194
00:14:40,610 --> 00:14:45,790
If we come back here and it could have also just attached it to the actual weights here and compute

195
00:14:45,790 --> 00:14:46,050
weights.

196
00:14:46,060 --> 00:14:48,240
But I want it to happen everyday before the treating start.

197
00:14:48,370 --> 00:14:52,750
Which is why I happened here before training start actually attached these long waits and short weights

198
00:14:52,810 --> 00:14:53,740
every single day.

199
00:14:54,070 --> 00:14:54,450
OK.

200
00:14:54,580 --> 00:14:59,440
So we have that going on here which means now I can pass it in here and we're going to do the exact

201
00:14:59,440 --> 00:15:03,820
same for loop except for the shorts.

202
00:15:03,900 --> 00:15:07,860
So we're going to copy and paste that in and then replace lung's of shorts.

203
00:15:07,860 --> 00:15:14,630
So that basically sets our positions for our shorts and our locks so definitely take the time to kind

204
00:15:14,630 --> 00:15:19,540
of go logically kind of step by step along to your finger or something and kind of get the logic here.

205
00:15:19,550 --> 00:15:23,120
But it's actually not so bad if you're just starting Quanto and saw this.

206
00:15:23,120 --> 00:15:24,510
You'd have no idea what's going on.

207
00:15:24,660 --> 00:15:28,370
But hopefully now that you kind of have some more experience it's actually more or less obvious what's

208
00:15:28,370 --> 00:15:29,410
happening here.

209
00:15:29,450 --> 00:15:33,850
I am sitting out of my positions in this first for a loop are no longer in the Longs and shorts.

210
00:15:34,070 --> 00:15:38,420
And then there's the for loops and going long on these bases the weights are calculated and then in

211
00:15:38,450 --> 00:15:41,100
short based off the weights I calculated here.

212
00:15:41,180 --> 00:15:44,050
Now all that's left to do is make sure we don't have any bugs.

213
00:15:44,090 --> 00:15:48,090
Ambac test this so I'm going to expand our back test.

214
00:15:48,140 --> 00:15:53,360
And let's go ahead and just back test it for I don't know two years or something we'll say January 1st

215
00:15:53,360 --> 00:16:00,400
2017 to January 1st 2015 and you can choose any dates you really want here and you can play around with

216
00:16:00,410 --> 00:16:02,330
our short and long portfolio percentages.

217
00:16:02,330 --> 00:16:03,730
Right now we have 50 50.

218
00:16:03,920 --> 00:16:06,930
I believe in the notebook it's slightly different but either way should be fine.

219
00:16:07,070 --> 00:16:11,360
Let's go ahead and Bilour algorithm make sure we don't have any errors like saying that an indent error

220
00:16:11,360 --> 00:16:12,710
on line 24.

221
00:16:12,920 --> 00:16:14,600
So let's see line 24.

222
00:16:14,670 --> 00:16:18,040
It's nice to be back once space but not that one.

223
00:16:18,110 --> 00:16:24,250
It's like over here real analysis try saving this and build this again and you can always copy and paste

224
00:16:24,250 --> 00:16:27,430
the notes directly from the note book that should run of no problems.

225
00:16:28,280 --> 00:16:33,550
And it looks like we're not having any runtime errors right now loading the pipeline data.

226
00:16:33,570 --> 00:16:36,210
Let's go ahead and jump forward in time.

227
00:16:36,210 --> 00:16:37,060
Here we go.

228
00:16:37,110 --> 00:16:41,710
So we have before treating star more than two values to impact.

229
00:16:41,710 --> 00:16:46,410
So looks like a have a comma there instead of dots will come back down here.

230
00:16:46,440 --> 00:16:50,200
Make sure it's has context but short wait.

231
00:16:50,580 --> 00:16:55,560
Save it build it again and obviously debugging is definitely a real part of the process hopefully is

232
00:16:55,560 --> 00:17:00,220
kind of showing you some realistic example of kind of typos and bugs you'll find along the way.

233
00:17:00,270 --> 00:17:02,850
Well make this less slow in the pipeline data right now.

234
00:17:02,850 --> 00:17:08,070
It's good to jump forward in time and this area says shorts waits plural.

235
00:17:08,070 --> 00:17:09,840
I think I actually just call that short wait.

236
00:17:09,940 --> 00:17:10,670
So let's see.

237
00:17:10,680 --> 00:17:12,320
Short wait down here.

238
00:17:12,450 --> 00:17:15,360
When I actually call it I'm just calling it short wait.

239
00:17:15,390 --> 00:17:19,620
So we'll come back up here and make sure that's short wait ok.

240
00:17:19,630 --> 00:17:24,280
Hopefully I have no more typos again will build this jump forward in time.

241
00:17:24,320 --> 00:17:29,000
So as I was running this something I encountered was zero division error and that is something you may

242
00:17:29,000 --> 00:17:34,040
encounter not just in this algorithm but many algorithms in this case cases float division by zero.

243
00:17:34,280 --> 00:17:39,260
So what's actually happening here is for whatever reason in a particular time stamp I'm trying to divide

244
00:17:39,260 --> 00:17:39,860
by zero.

245
00:17:39,860 --> 00:17:45,080
So there's actually no longs securities in this list.

246
00:17:45,080 --> 00:17:48,850
So what we're going to do is say at an if statement to kind of fix that.

247
00:17:48,920 --> 00:17:51,590
So let's go ahead and go back to compute weights.

248
00:17:51,650 --> 00:17:55,670
So going back to the compute weights we can attempt to fix this through the following manner we'll say

249
00:17:55,760 --> 00:18:09,740
if the length of context longs is equal to zero we'll say long waits is equal to zero.

250
00:18:10,030 --> 00:18:13,380
Then we'll say else and then we'll actually perform this calculation.

251
00:18:14,210 --> 00:18:16,040
And we'll do the same thing for shorts.

252
00:18:16,060 --> 00:18:24,240
We're going to copy this and then paste it here and we'll turn the lungs into shorts.

253
00:18:24,250 --> 00:18:35,200
So say if that's now also say short here and then we'll make this short and then this context is going

254
00:18:35,200 --> 00:18:37,410
to be Shortz.

255
00:18:37,650 --> 00:18:39,460
OK so that should be able to fix those.

256
00:18:39,690 --> 00:18:42,010
That kind of error and it's more or less a common error.

257
00:18:42,030 --> 00:18:46,310
So I'm going to save this and then build the algorithm.

258
00:18:46,380 --> 00:18:48,570
OK let's hop forward in time until it's finished running.

259
00:18:49,800 --> 00:18:54,400
All right now that this is done we can go ahead and check out our returns here and we can see for the

260
00:18:54,400 --> 00:18:57,680
majority of this time period we're actually doing a lot worse than the benchmark.

261
00:18:57,790 --> 00:19:03,420
But we basically squeaked at the very end to be a little bit better than the S&amp;P 500.

262
00:19:03,430 --> 00:19:08,140
But keep in mind as far as a general strategy we really didn't think about this too much we should just

263
00:19:08,140 --> 00:19:10,720
use the same strategy as before in the previous pipeline.

264
00:19:10,720 --> 00:19:16,320
And then just added in some examples to show you how pipeline can work the ID as far as a general strategy.

265
00:19:16,330 --> 00:19:18,310
This was basically all essentially made up.

266
00:19:18,530 --> 00:19:19,220
Okay.

267
00:19:19,270 --> 00:19:23,410
So I hope you enjoyed that and I hope you now have a better understanding of how you can integrate a

268
00:19:23,410 --> 00:19:25,230
pipeline into Quanto plans.

269
00:19:25,270 --> 00:19:28,180
Id Thanks everyone and I'll see you at the next lecture.
