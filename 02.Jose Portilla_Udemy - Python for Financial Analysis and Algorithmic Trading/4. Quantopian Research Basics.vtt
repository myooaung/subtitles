WEBVTT
1
00:00:05.420 --> 00:00:11.820
Welcome back everyone to the lecture on Cantone and research basics to follow along this lecture as

2
00:00:11.820 --> 00:00:13.620
well as the other lectures in this section.

3
00:00:13.620 --> 00:00:18.510
Make sure you've already created an account on Quanto Appian will start off by using the research notebook

4
00:00:18.570 --> 00:00:23.040
format and then move on to using the Quanto Appian integrated development environment.

5
00:00:23.310 --> 00:00:25.660
Let's go ahead and jump to Quanto in dot com.

6
00:00:25.680 --> 00:00:29.180
Log in and I'll show you how we can use the research note book environment.

7
00:00:29.430 --> 00:00:31.470
OK so here I am at Quanto dot com.

8
00:00:31.470 --> 00:00:35.300
Once you've logged in if you ever need to get back to the home page just go ahead and click on this

9
00:00:35.310 --> 00:00:40.320
Q Or just go to Quanto Appian dot com slash home or we're going to start off with is if you click here

10
00:00:40.320 --> 00:00:43.350
on research we have data sets notebooks and algorithms.

11
00:00:43.350 --> 00:00:47.670
Go ahead and click on notebooks and that will take you to your notebook page.

12
00:00:47.670 --> 00:00:52.200
Now keep in mind you do have a limit on how many notebooks can have open at one time.

13
00:00:52.200 --> 00:00:57.610
There is a limit on your memory usage but for our conditions we're going to stay well below that limit.

14
00:00:57.810 --> 00:01:01.720
So once then load in the notebooks we're gonna open up a new one.

15
00:01:02.040 --> 00:01:04.920
OK so once those are then loaded you should get something that looks like this.

16
00:01:04.920 --> 00:01:07.230
Keep in mind this still technically in beta.

17
00:01:07.350 --> 00:01:10.410
So by the time you're viewing this it may look slightly different.

18
00:01:10.410 --> 00:01:12.180
There's a few key things here that I want to show you.

19
00:01:12.180 --> 00:01:16.200
One is a research memory so you can only have a certain number of notebooks open the pending how much

20
00:01:16.200 --> 00:01:18.270
stuff is open in memory in those notebooks.

21
00:01:18.270 --> 00:01:21.960
As I mentioned for our case we're going to stay well below the limits so we don't have to really worry

22
00:01:21.960 --> 00:01:22.840
about that.

23
00:01:22.860 --> 00:01:25.360
And then you can either create a new text file.

24
00:01:25.410 --> 00:01:29.730
You can create a new folder and then you can actually upload files so you can go ahead and upload the

25
00:01:29.970 --> 00:01:31.320
IPY and B files.

26
00:01:31.320 --> 00:01:35.040
Those are the notebook files we provide for you in case you want to upload those notebooks so you can

27
00:01:35.040 --> 00:01:37.090
use them on the Clintonian platform.

28
00:01:37.110 --> 00:01:43.140
Again those Quanto in notebooks that we have for the section only really work in this Quanto open platform.

29
00:01:43.140 --> 00:01:47.120
There are certain imports that we don't do in the notebooks so they won't work locally.

30
00:01:47.120 --> 00:01:51.300
You'll need to actually use Quanto platform for our case we're going to create a new notebook's.

31
00:01:51.300 --> 00:01:55.760
Go ahead and click on that blue plus sign and this will create a new notebook for us.

32
00:01:57.470 --> 00:02:02.600
OK so once we actually start that we basically have the exact same Jubran notebook format we're familiar

33
00:02:02.600 --> 00:02:03.110
with.

34
00:02:03.110 --> 00:02:07.250
We already can see here we have research memory again 4 percent for just one and two notebooks so it's

35
00:02:07.250 --> 00:02:08.380
actually not that bad.

36
00:02:08.510 --> 00:02:15.770
Want to change this title to something like research basics and then hit OK and I'll rename it for me.

37
00:02:15.770 --> 00:02:17.530
Let me zoom in one more level here.

38
00:02:17.840 --> 00:02:20.080
OK so let's go ahead and get started.

39
00:02:20.090 --> 00:02:25.190
So this notebook format allows us to easily gather information about various securities all within the

40
00:02:25.190 --> 00:02:26.810
Quanto platform.

41
00:02:26.810 --> 00:02:31.400
Now keep in mind this is going to be different than the base coding platform of Quanto in which is the

42
00:02:31.400 --> 00:02:35.900
idea that focuses on actually implementing an backtesting trading strategies.

43
00:02:35.900 --> 00:02:41.690
Right now we're kind of more focused on how do I gather information such as pricing fundamentals etc..

44
00:02:41.960 --> 00:02:44.380
Sort of start by doing a couple of imports here.

45
00:02:44.480 --> 00:02:48.830
You'll notice a lot of the libraries we're used to using are already installed and ready to go for us

46
00:02:48.860 --> 00:02:50.310
on this platform.

47
00:02:50.390 --> 00:02:55.530
So I'll say non-pay S&amp;P Pansy's Peetie and they will do a little bit applauding so I'll say matplotlib

48
00:02:55.770 --> 00:02:59.570
thought pipe plot as Piazzi in the Quanto open environment.

49
00:02:59.570 --> 00:03:05.120
There's no need to do the magic command of Matt plotless in line so you can just run them and the lines

50
00:03:05.120 --> 00:03:06.830
already to go.

51
00:03:06.830 --> 00:03:11.120
All right the first function I want to talk about is get pricing and pretty much all the functions we're

52
00:03:11.120 --> 00:03:11.890
talking about.

53
00:03:11.930 --> 00:03:13.420
We don't need to import them from anywhere.

54
00:03:13.430 --> 00:03:16.560
They're already available for us in the Clintonian notebook.

55
00:03:16.700 --> 00:03:22.020
So the get pricing function provides access to up to 12 years of US equity pricing data.

56
00:03:22.040 --> 00:03:26.630
That's basically just US securities and stocks information and it's the exact same data that's used

57
00:03:26.630 --> 00:03:31.180
by the Quanto it back tester and the get pricing command returns upin this object.

58
00:03:31.190 --> 00:03:34.270
Which is why we had to learn about Panchos and Panas data frames.

59
00:03:34.310 --> 00:03:36.340
So let's actually show you how we can get the pricing.

60
00:03:36.380 --> 00:03:44.510
Let's just say we want to get the pricing for McDonald's or create a variable called Mactan and then

61
00:03:44.570 --> 00:03:50.360
I'm going to use a function get pricing and it's going to take some arguments are going to shift type

62
00:03:50.360 --> 00:03:54.980
here check out the argument but basically it can take a list of symbols or a single symbol or start

63
00:03:55.570 --> 00:03:58.630
an end date and then you can also specify the frequency you want.

64
00:03:59.060 --> 00:04:01.280
So let's go ahead and try this out.

65
00:04:02.450 --> 00:04:13.490
The symbol is MC The McDonald's will say the start date is equal to 2017 0 1 0 1 so the first day of

66
00:04:13.490 --> 00:04:24.780
2017 and let's just have it be one month worth of data so we'll say 2017 020 1 and since we only have

67
00:04:24.780 --> 00:04:27.600
one month here let's go ahead and up the frequency.

68
00:04:27.600 --> 00:04:33.450
So say the frequency you want is actually by the minute so typically we've been dealing with daily data

69
00:04:33.610 --> 00:04:39.820
but we can see here that we can also get frequency data in terms of minutes and then once that's done

70
00:04:40.120 --> 00:04:47.650
if I say Mactan head you can see I get back the information I have open price high low close price volume

71
00:04:47.650 --> 00:04:50.770
price and here I can also see that it's minute by minute.

72
00:04:50.770 --> 00:04:55.600
So 14:31 14:32 14:30 3 and it's a 24 hour time.

73
00:04:55.600 --> 00:04:56.980
Keep that in mind.

74
00:04:56.980 --> 00:05:00.880
And then I also do things like check out info.

75
00:05:01.230 --> 00:05:04.860
It tells me how many columns I got back or how many rows I got back as well.

76
00:05:04.860 --> 00:05:07.280
So around 8000 rose.

77
00:05:07.430 --> 00:05:11.830
So we can see here we can get minute by minute data but more likely usually we'll be working daily data.

78
00:05:11.840 --> 00:05:13.790
Kind of depends on what we're actually doing.

79
00:05:13.790 --> 00:05:20.940
So if you want daily data you can just sit here saying minute go ahead and say daily and we can go back

80
00:05:20.970 --> 00:05:26.370
up to 12 years and we don't really need to go back further than that because that generally adds more

81
00:05:26.370 --> 00:05:27.990
noise than signal.

82
00:05:28.160 --> 00:05:30.800
And for our algorithms viewers will be more than enough.

83
00:05:30.870 --> 00:05:34.760
So we'll go ahead and run this so that we'll get the pricing.

84
00:05:34.760 --> 00:05:35.740
That we have daily data.

85
00:05:35.750 --> 00:05:42.720
So if we check out McDonald's the head of it I can see now it's by day so we are open high low close

86
00:05:42.720 --> 00:05:48.540
price volume and price and all of these have been adjusted for things like dividends and stock splits.

87
00:05:48.540 --> 00:05:51.520
So you don't have to worry about using like an adjusted close price off of this.

88
00:05:51.630 --> 00:05:54.000
It's already taken that into account for you.

89
00:05:54.030 --> 00:05:59.970
So if we want to do plotting we can do something like MacBaren even if we just want to grab a single

90
00:05:59.970 --> 00:06:08.620
call them something like close price say that plot run this and here we can see how the plaudit price

91
00:06:08.950 --> 00:06:15.830
from around the year 2005 to 2017 in pretty much everything we've learned about plotting from Paris

92
00:06:15.890 --> 00:06:17.940
that plotted will be effective here.

93
00:06:18.110 --> 00:06:25.290
So for example if you want to get a distribution of the returns we can say McDonogh grab the close price

94
00:06:26.590 --> 00:06:33.940
say percent change for the arithmetic arithmetic returns and then just call his dram off of this Benz

95
00:06:34.110 --> 00:06:40.040
equal to 100 you can say fig size is equal to let's say 6 by 4.

96
00:06:40.300 --> 00:06:44.590
Run this in aland up seeing a histogram of the daily returns here.

97
00:06:45.000 --> 00:06:45.640
Okay.

98
00:06:45.730 --> 00:06:50.560
So that's the get pricing commands pretty straightforward It feels a lot like Panas data reader or Quando.

99
00:06:50.710 --> 00:06:55.860
You passen the stock start day and they and that frequency information.

100
00:06:55.880 --> 00:06:57.640
So let's move on to symbols.

101
00:06:57.830 --> 00:07:03.620
So by default the symbols function returns the security object for a ticker symbol and you specify a

102
00:07:03.620 --> 00:07:08.960
ticker symbol or even a list of symbols as a string and get a list of security objects back.

103
00:07:08.960 --> 00:07:10.850
So let me show you what that actually looks like.

104
00:07:12.050 --> 00:07:21.690
So if I say let's create a new object we'll say Mikitani E. Q info and I'm going to set that equal to.

105
00:07:22.060 --> 00:07:25.710
I'm going to call the symbols function just have autocomplete in there and we pass in the symbol that

106
00:07:25.710 --> 00:07:26.390
we're a student.

107
00:07:26.410 --> 00:07:35.930
MC The Run that if I check what actual type objects return I can say Mactan ECU info and it's this zip

108
00:07:35.930 --> 00:07:38.370
line assets equity object.

109
00:07:38.370 --> 00:07:41.070
So this object behaves a lot like a dictionary.

110
00:07:41.240 --> 00:07:44.830
So let's go ahead and actually turn it into a dictionary.

111
00:07:44.830 --> 00:07:50.060
That's easy enough to do because all I need to say is if you check the methods available to it you can

112
00:07:50.060 --> 00:07:57.250
say to dicy they'll make it a dictionary and then we get back a dictionary of everything it contains.

113
00:07:57.260 --> 00:08:02.900
So it has an asset name so it knows hey the symbol is the McDonald's Corporation has the clothes day

114
00:08:03.110 --> 00:08:03.670
and day.

115
00:08:03.710 --> 00:08:07.130
It tells you what exchange it's listed on plus the full name of that exchange.

116
00:08:07.370 --> 00:08:09.800
When it was first traded Sometimes you have this information.

117
00:08:09.950 --> 00:08:12.980
It has the I.D. which is going to be important for us later on.

118
00:08:13.130 --> 00:08:14.230
And then we have the start.

119
00:08:14.250 --> 00:08:15.670
And then again the symbol.

120
00:08:15.830 --> 00:08:21.110
So this is something we're using a lot more when we talk about actually developing algorithmic trading

121
00:08:21.110 --> 00:08:27.080
because sometimes companies get delisted and then their ticker symbol gets used by another company or

122
00:08:27.080 --> 00:08:28.950
maybe the company changes name etc..

123
00:08:29.120 --> 00:08:35.120
So what Quanto oping has done so you don't run into errors just using symbol names is everything's listed

124
00:08:35.150 --> 00:08:37.770
as an ID or security ID.

125
00:08:37.940 --> 00:08:39.400
So that's what we're going to be using later on.

126
00:08:39.410 --> 00:08:42.020
We won't really be using symbols that often.

127
00:08:42.020 --> 00:08:42.550
OK.

128
00:08:44.700 --> 00:08:48.810
The last main function we're going to discuss is get fundamentals and the get fundamentals function

129
00:08:48.810 --> 00:08:52.620
provides programmatic access to the Quanto open fundamental database.

130
00:08:52.620 --> 00:08:56.850
And this is one of my favorite functions especially when you do research on a company and the way it

131
00:08:56.850 --> 00:08:57.930
works is the following.

132
00:08:57.930 --> 00:09:01.520
Basically you need to initialize it first.

133
00:09:01.580 --> 00:09:08.180
So we create some variable called fundamentals and then we're in a call in its underscore fundamentals

134
00:09:08.180 --> 00:09:09.870
and accused have autocomplete here.

135
00:09:10.070 --> 00:09:15.210
So you have to first do this in the notebook and this basically is going to initialize the fundamentals.

136
00:09:15.410 --> 00:09:20.150
And based on the data provided from Morningstar this get from the mentals function that we're going

137
00:09:20.140 --> 00:09:21.240
to use later on.

138
00:09:21.380 --> 00:09:25.910
It provides over 600 corporate metrics dating back to 2002.

139
00:09:26.480 --> 00:09:29.030
And that actually matches Quanto Beanz pricing data.

140
00:09:29.270 --> 00:09:33.280
So we're going to walk you through a few examples of how this would actually work.

141
00:09:33.320 --> 00:09:37.490
It's based off sequel alchemy so may seem a little strange at first and you can check out the links

142
00:09:37.790 --> 00:09:41.310
in the note book for further help on grabbing specific fundamental data.

143
00:09:41.480 --> 00:09:46.070
But this is essentially things for saying okay what's the market cap of the company or what's the price

144
00:09:46.070 --> 00:09:50.400
earnings ratio of the company or other things like what is the headquarter city of a company.

145
00:09:50.420 --> 00:09:52.240
So let's go ahead and show you how to use this.

146
00:09:52.230 --> 00:09:59.650
So if I check out fundamentals dots and then hit tab I can see you have a variety of things here so

147
00:09:59.670 --> 00:10:02.840
an income statement index operations valuation.

148
00:10:03.020 --> 00:10:06.170
And essentially these are the main categories of things I can grab.

149
00:10:06.170 --> 00:10:11.190
So earnings ratios earnings report etc. cash flow statements.

150
00:10:11.210 --> 00:10:14.630
So let's go ahead and practice how to get the market cap.

151
00:10:14.660 --> 00:10:15.800
So this is the way you would do it.

152
00:10:17.020 --> 00:10:25.470
First you have to create a query object on say Mike Cleary And then I'm going to say query that fundamentals

153
00:10:25.620 --> 00:10:32.100
object that I just created then I'm going to hit tab here we have the various types of information I

154
00:10:32.100 --> 00:10:32.740
can grab.

155
00:10:32.910 --> 00:10:39.570
So I'm going to grab off valuation and then if you hit dot tab off valuation you can see here the various

156
00:10:39.570 --> 00:10:40.900
things and grab off of that.

157
00:10:40.920 --> 00:10:44.610
So we're going to say market cap.

158
00:10:44.690 --> 00:10:47.520
OK so I run that and then I have my query.

159
00:10:47.550 --> 00:10:54.080
So what I'm going to do is say my underscore will say funds for fundamentals and then we call the get

160
00:10:54.080 --> 00:10:58.220
fundamentals function and just have auto completing here.

161
00:10:58.370 --> 00:11:04.120
We pass in the query we just create it will say my query and then we pass and the date that we're interested

162
00:11:04.120 --> 00:11:04.340
in.

163
00:11:04.360 --> 00:11:12.900
So let's say I want the total market cap as of the first day of 2017 I would run that it may take a

164
00:11:12.900 --> 00:11:15.660
little bit of time depending on how much information you're asking for.

165
00:11:15.810 --> 00:11:26.400
But eventually when you have it you can get back my funds we can call Imphal off of this.

166
00:11:26.520 --> 00:11:31.990
And so once we call info we'll see here we have just one entry on the index and we have five thousand

167
00:11:31.990 --> 00:11:33.670
five hundred fifty one columns.

168
00:11:33.720 --> 00:11:37.420
It says from equity HAMC to equity HGT.

169
00:11:37.440 --> 00:11:37.740
All right.

170
00:11:37.770 --> 00:11:39.530
So what's actually going on here.

171
00:11:39.720 --> 00:11:47.720
Well if you check out my funds the whole thing won't display but whip's my funds underscore.

172
00:11:47.880 --> 00:11:52.260
So the whole thing won't display the interest we have market cap and that essentially every single equity

173
00:11:52.260 --> 00:11:54.420
that was available at this date.

174
00:11:54.510 --> 00:11:57.900
So it is actually going on here while we initialize fundamentals.

175
00:11:57.930 --> 00:12:03.150
And then on fundamentals we grab some sort of category and then off that category we grab a specific

176
00:12:03.210 --> 00:12:08.010
fundamental piece of information such as the market cap and then we wrap that in a query and that becomes

177
00:12:08.010 --> 00:12:14.280
my query then we pass that query into get fundamentals along the dates for what we're interested in.

178
00:12:14.280 --> 00:12:19.890
And then once we get back it grabs this specific fundamental data the market cap for every single equity

179
00:12:19.890 --> 00:12:21.720
that's available at this date.

180
00:12:21.720 --> 00:12:26.330
Now usually you don't want every single possible equity one to do some sort of filtering off for this

181
00:12:26.340 --> 00:12:27.880
and we'll show you how to do that in a second.

182
00:12:28.020 --> 00:12:32.940
But based on this single get fundamentals which is kind of why it took a while we say info and we get

183
00:12:32.940 --> 00:12:38.350
back the market cap for pretty much every single equity that's available at this particular time stamp.

184
00:12:38.370 --> 00:12:44.610
Now if market cap wasn't hit to the specific equity Ill just say none.

185
00:12:44.610 --> 00:12:47.340
So sometimes it's like an exchange traded fund or something.

186
00:12:47.400 --> 00:12:49.220
The market may not make sense for that.

187
00:12:49.460 --> 00:12:49.960
OK.

188
00:12:50.190 --> 00:12:53.130
So we usually do is add some sort of filter.

189
00:12:53.340 --> 00:12:55.260
And let me show you how we can do that.

190
00:12:55.320 --> 00:13:02.450
Let's say I only want big companies so I'm going to create some variable called Big underscore CLP.

191
00:13:02.870 --> 00:13:08.810
And I'm going to find this as only companies that are worth $500 million or more or more so that is

192
00:13:08.810 --> 00:13:09.470
quite a lot of money.

193
00:13:09.470 --> 00:13:11.480
So we should only get a few companies back.

194
00:13:11.570 --> 00:13:13.040
And so we're going to do it.

195
00:13:13.190 --> 00:13:19.010
We're going to call this query function and it's basically available just in the research notebook we're

196
00:13:19.030 --> 00:13:29.100
going to say fundamentals valuation market cap just as we did last time and that offer this we're going

197
00:13:29.100 --> 00:13:36.550
to say that's filter and we can put this on a new line or say that filter and the reason I don't realize

198
00:13:36.550 --> 00:13:39.020
it because I'm wrapping it in parentheses here.

199
00:13:39.020 --> 00:13:41.970
So that's kind of a nice little Python trick if you wrap something in print.

200
00:13:41.990 --> 00:13:43.910
You can go to multiple lines easily.

201
00:13:43.910 --> 00:13:54.150
So then I'm going to say that filter that I'm going to say fundamentals valuation market cap and then

202
00:13:54.150 --> 00:13:59.010
this is where you can do some sort of comparison operator and say Give me the market cap where it's

203
00:13:59.010 --> 00:14:00.410
greater than five hundred billion.

204
00:14:00.420 --> 00:14:05.750
So let's see 500 1 2 3 1 2 3 1 2 3.

205
00:14:05.760 --> 00:14:10.090
And let's put these all together now.

206
00:14:10.100 --> 00:14:10.420
All right.

207
00:14:10.440 --> 00:14:16.500
So that should be giving me back wherever the company's market cap is greater than five hundred billion

208
00:14:16.500 --> 00:14:16.910
dollars.

209
00:14:16.920 --> 00:14:20.940
And you'll notice it went WAY faster this time because there aren't that many companies that actually

210
00:14:21.360 --> 00:14:22.610
fit that.

211
00:14:22.650 --> 00:14:36.820
So let's see we'll say my big results as equal to get fundamentals pass that actual queery So remember

212
00:14:36.850 --> 00:14:42.310
this query is essentially the same thing as we did appear except now I'm adding this special filter

213
00:14:42.310 --> 00:14:42.860
to it.

214
00:14:43.580 --> 00:14:43.830
Okay.

215
00:14:43.850 --> 00:14:50.560
So say get fundamentals big company and then we can pass that any that we want we'll say 2017.

216
00:14:50.570 --> 00:14:57.020
Let me just go a little more recent we'll say the 19th of July so we can run that again.

217
00:14:57.020 --> 00:15:00.330
It runs a lot faster because we're not asking for every single thing back.

218
00:15:00.560 --> 00:15:02.880
I will say my big results run that.

219
00:15:02.940 --> 00:15:04.770
And essentially there's only four companies at this time.

220
00:15:04.770 --> 00:15:06.640
So we have Apple Microsoft.

221
00:15:06.660 --> 00:15:13.960
And then the two types of Google stock or alphabet stock I should say and that is the basic idea behind

222
00:15:13.960 --> 00:15:15.520
using fundamentals.

223
00:15:15.520 --> 00:15:18.430
Let me go ahead and quickly walk you through the help documentation.

224
00:15:18.430 --> 00:15:23.890
Forget fundamentals in case you're interested in more complex queries the Lincoln going to go to let

225
00:15:23.890 --> 00:15:27.690
me just read it for you right now is right here.

226
00:15:27.700 --> 00:15:31.180
It's Quanto Appian dot com help slash fundamentals.

227
00:15:31.180 --> 00:15:35.810
If you go to that link they'll take you to this page where you have fundamental data reference.

228
00:15:35.890 --> 00:15:40.840
So as as as I was mentioning earlier there's over 600 metrics measuring the financial performance of

229
00:15:40.840 --> 00:15:46.060
different companies and they're separate out into 13 categories things like asset classification balance

230
00:15:46.060 --> 00:15:48.060
sheet cash flow statement etc..

231
00:15:48.250 --> 00:15:51.870
So if you're interest and earnings ratios we would end up doing is coming over here.

232
00:15:51.880 --> 00:15:53.230
Fundamental data reference.

233
00:15:53.320 --> 00:15:54.460
Real click on earnings ratio.

234
00:15:54.460 --> 00:16:00.250
That's one of the categories and then off of earnings ratio has these attributes you can filter or search

235
00:16:00.250 --> 00:16:06.340
for using get fundamentals things like the growth in companies diluted earnings per share EPS on a percentage

236
00:16:06.340 --> 00:16:07.220
basis.

237
00:16:07.240 --> 00:16:13.420
So you can do other things like the earnings report category do things like basic average shares or

238
00:16:13.420 --> 00:16:15.130
basic continuous operations et cetera.

239
00:16:15.130 --> 00:16:21.010
So lots of fundamental data here that can be really useful in actually programming or deciding which

240
00:16:21.010 --> 00:16:22.760
companies to invest in.

241
00:16:22.780 --> 00:16:28.450
So this works really well in the notebook environment as far as grabbing specific fundamental data which

242
00:16:28.450 --> 00:16:30.940
you can later on use in your algorithms.

243
00:16:31.010 --> 00:16:31.570
OK.

244
00:16:31.660 --> 00:16:34.660
So that's really the basics of using the research notebook.

245
00:16:34.700 --> 00:16:36.590
There's quite a bit more that it's capable of.

246
00:16:36.610 --> 00:16:38.120
But we'll discuss that later on.

247
00:16:38.230 --> 00:16:43.040
Right now we only really need to understand get fundamentals symbols and then get pricing.

248
00:16:43.120 --> 00:16:45.610
All right thanks everyone and I'll see at the next lecture.
