1
00:00:01,640 --> 00:00:02,200
Hi,

2
00:00:02,200 --> 00:00:07,540
it's Wojciech Lesniak again. In this module, we will look at persistent login.

3
00:00:07,540 --> 00:00:11,980
You have probably seen the Remember me checkbox on many login pages.

4
00:00:11,980 --> 00:00:17,900
This allows your users to stay signed in even after their session is closed,

5
00:00:17,900 --> 00:00:22,140
and that saves them from having to reauthenticate the next time they access

6
00:00:22,140 --> 00:00:26,940
the application. In a traditional application, this is quite simple to

7
00:00:26,940 --> 00:00:31,090
implement with the REMEMBER_ME cookie; however,

8
00:00:31,090 --> 00:00:37,310
in a distributed system, one that uses OAuth 2 with an authorization server, as

9
00:00:37,310 --> 00:00:41,190
well as perhaps a social signâ€‘in provider added to the mix,

10
00:00:41,190 --> 00:00:45,460
it can become a little bit more complicated as you now have to deal

11
00:00:45,460 --> 00:00:49,140
with multiple sessions between multiple parties.

12
00:00:49,140 --> 00:00:54,340
Then there is the access and ID tokens as you might need to access

13
00:00:54,340 --> 00:00:58,900
stateless clients, and services, and APIs. Well, the access token

14
00:00:58,900 --> 00:01:03,340
also has an expiry time or could be terminated at the auth server,

15
00:01:03,340 --> 00:01:05,110
hence, in this module,

16
00:01:05,110 --> 00:01:07,990
you will learn about the different strategies you can

17
00:01:07,990 --> 00:01:13,000
use to implement persistent login. Let's start with Remember me.

