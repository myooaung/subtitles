WEBVTT
1
00:00:00.180 --> 00:00:00.890
Welcome back.

2
00:00:01.110 --> 00:00:07.400
So far we've seen built in modules like random and we've seen how to import them into our python files.

3
00:00:07.410 --> 00:00:13.810
Now we're going to see how we can create our own custom modules which is less impressive than it sounds.

4
00:00:13.980 --> 00:00:20.310
It's basically just a file with Python code in it that we write that we can require or import in another

5
00:00:20.310 --> 00:00:20.910
file.

6
00:00:21.120 --> 00:00:23.260
So yes we can import her own code.

7
00:00:23.280 --> 00:00:26.910
The syntax is no different than before we just import.

8
00:00:26.910 --> 00:00:29.270
And then the name of the python file.

9
00:00:29.280 --> 00:00:36.330
So whatever the file is named helper P Why my stuffed up why you're going to reference it by my stuff

10
00:00:36.360 --> 00:00:38.220
or helper or whatever the name is.

11
00:00:38.520 --> 00:00:41.510
So here's an example I have.

12
00:00:41.520 --> 00:00:43.650
These are representing two separate files.

13
00:00:43.650 --> 00:00:44.810
File one.

14
00:00:45.060 --> 00:00:48.700
Why not a very good name has a couple of functions.

15
00:00:48.720 --> 00:00:53.820
The first one is called F-in and the second is called other F-ed doesn't matter what they do.

16
00:00:53.820 --> 00:00:56.570
They don't really do anything except return a string.

17
00:00:56.610 --> 00:00:58.210
Then we have filed two.

18
00:00:58.530 --> 00:01:03.510
And if we wanted to import file one we just do it like this.

19
00:01:03.510 --> 00:01:07.630
Import file one needs to be the same name as the python file.

20
00:01:08.250 --> 00:01:15.520
And then under File 1 we have access to FM function or other effen other function.

21
00:01:15.630 --> 00:01:17.470
And that's kind of all there is to it.

22
00:01:17.520 --> 00:01:18.870
I'm just going to show an example.

23
00:01:18.900 --> 00:01:24.530
I'm going to start making three different files to the first one I make will just be called the Nanna's

24
00:01:24.540 --> 00:01:28.160
duppy y.

25
00:01:28.280 --> 00:01:31.570
So I have a function called Piel and just returns.

26
00:01:31.610 --> 00:01:32.800
Here's a delicious banana.

27
00:01:33.050 --> 00:01:38.330
And another function called dip in chocolate which returned Here's a delicious banana dipped in chocolate.

28
00:01:38.540 --> 00:01:41.470
And our final function cell which just returns.

29
00:01:41.480 --> 00:01:43.490
There's always money in the banana stand.

30
00:01:43.510 --> 00:01:45.640
It's Arrested Development thing.

31
00:01:45.710 --> 00:01:48.000
Then we have another file called apples.

32
00:01:48.140 --> 00:01:54.680
Why not open that one up and there's a single function called the offer that returns the string Hey

33
00:01:54.680 --> 00:01:55.840
do you like apples.

34
00:01:56.150 --> 00:01:58.610
And then another function called bake that just returns.

35
00:01:58.640 --> 00:01:59.920
Mmm pie.

36
00:01:59.960 --> 00:02:01.230
So we have these two files.

37
00:02:01.250 --> 00:02:03.310
They have nothing to do with one another.

38
00:02:03.320 --> 00:02:05.880
Now let's make a third file called fruits.

39
00:02:05.890 --> 00:02:06.610
P Y.

40
00:02:06.710 --> 00:02:10.670
And will import both of those files as modules.

41
00:02:10.820 --> 00:02:17.000
So all we need to do is start off up top with imports and let's start with bananas and that's the name

42
00:02:17.000 --> 00:02:17.580
of the file.

43
00:02:17.600 --> 00:02:19.130
Remember banana stop p y.

44
00:02:19.270 --> 00:02:25.530
So import bananas and then we'll just start by doing bananas if I can spell the bananas.

45
00:02:25.520 --> 00:02:27.050
What do we have in here.

46
00:02:27.430 --> 00:02:29.370
Let's do dip in chocolate.

47
00:02:35.000 --> 00:02:39.540
And that's printed just like that.

48
00:02:39.590 --> 00:02:40.810
And let's see what happens.

49
00:02:40.820 --> 00:02:42.960
So we're importing it from that file.

50
00:02:42.980 --> 00:02:43.920
It does matter.

51
00:02:43.940 --> 00:02:45.370
You know that they're in the same directory.

52
00:02:45.410 --> 00:02:48.980
And if they're not then we need to reference the correct path.

53
00:02:49.100 --> 00:02:50.450
So let's try it.

54
00:02:50.920 --> 00:02:56.890
Do Python 3 fruits and I didn't execute the function.

55
00:02:56.990 --> 00:03:01.200
So we are getting the function but I'm not actually calling it.

56
00:03:01.220 --> 00:03:01.650
There you go.

57
00:03:01.700 --> 00:03:03.720
Here's a delicious banana dipped in chocolate.

58
00:03:03.890 --> 00:03:14.820
Let's do the same thing with apples import apples and then I'll do an apples offer and I'll print that.

59
00:03:14.990 --> 00:03:16.850
Try this.

60
00:03:16.850 --> 00:03:18.230
Now we get hey do you like apples.

61
00:03:18.230 --> 00:03:20.660
Here's a delicious banana dipped in chocolate.

62
00:03:20.660 --> 00:03:27.740
So we've got two separate files and we have access to all of those functions in each file by importing

63
00:03:27.740 --> 00:03:28.380
them.

64
00:03:28.400 --> 00:03:35.660
But we could also do me copy this and come at the original just to save that and we can also do something

65
00:03:35.780 --> 00:03:36.620
like.

66
00:03:36.800 --> 00:03:41.450
From the Nanna's import.

67
00:03:41.490 --> 00:03:45.350
And let's say we only want rather than well let's do dip in chocolate.

68
00:03:45.360 --> 00:03:46.250
Sure.

69
00:03:47.290 --> 00:03:48.920
As dip.

70
00:03:49.260 --> 00:03:50.360
OK.

71
00:03:51.270 --> 00:03:56.810
And that will allow us to just refer to a function called dip.

72
00:03:57.110 --> 00:03:58.460
Let's see if it works.

73
00:03:59.830 --> 00:04:01.100
Perfect.

74
00:04:01.120 --> 00:04:06.220
So here we're kind of combining all that imports and texture we saw where we're using from to specifically

75
00:04:06.220 --> 00:04:12.310
call out the functions we want and we're giving it a name a much shorter name this time just dip as

76
00:04:12.310 --> 00:04:13.960
you can see cool.

77
00:04:14.050 --> 00:04:19.120
So that's the basics of actually creating custom modules and importing them.

78
00:04:19.120 --> 00:04:21.320
Let's just quickly talk about why you would do this.

79
00:04:21.310 --> 00:04:23.460
When is a good situation to make a module.

80
00:04:23.590 --> 00:04:28.270
And we'll discuss this more when we talk about object oriented programming making classes will put some

81
00:04:28.270 --> 00:04:32.890
classes in their own files and will have to decide when to make something a module versus a class but

82
00:04:32.950 --> 00:04:33.690
we'll get there.

83
00:04:33.700 --> 00:04:39.430
But for now if you find yourself with code that needs to be used in more than one place put it in a

84
00:04:39.430 --> 00:04:41.600
module but that's not the only reason.

85
00:04:41.650 --> 00:04:47.560
If you have a really long file and you know you have some way that you could group some of the functions

86
00:04:47.560 --> 00:04:51.990
of the functionality into a module or put them in a separate file do that.

87
00:04:52.000 --> 00:04:55.020
It doesn't have to be that you're using it in multiple places.

88
00:04:55.180 --> 00:04:57.390
It might just be best to group things.

89
00:04:57.490 --> 00:04:58.740
You know this is silly.

90
00:04:58.750 --> 00:04:59.930
Bananas and apples.

91
00:05:00.010 --> 00:05:06.550
But if we had 10 or 20 functions for each There's no reason to put them all in fruit's put some in apples

92
00:05:06.550 --> 00:05:10.040
that have to do with apples and put the ones in bananas that have to do with bananas.

93
00:05:10.300 --> 00:05:11.530
So it's just a way of organizing.
