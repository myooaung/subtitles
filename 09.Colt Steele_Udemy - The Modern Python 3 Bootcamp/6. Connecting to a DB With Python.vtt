WEBVTT
1
00:00:00.150 --> 00:00:00.810
Welcome back.

2
00:00:00.810 --> 00:00:04.130
So we're now finally getting Python involved in the equation.

3
00:00:04.140 --> 00:00:08.670
We're going to learn how to write a lot of those sequel statements that we already did selecting things

4
00:00:08.670 --> 00:00:14.310
creating tables inserting things into tables but do it through python so that we could do it dynamically

5
00:00:14.580 --> 00:00:16.160
we could write code too.

6
00:00:16.230 --> 00:00:21.000
I don't know scrape Well I do know because we're kind of do that scrape stuff from a web site and save

7
00:00:21.000 --> 00:00:28.440
it to a database or create random entries like fill your database with a bunch of placeholder data 10000

8
00:00:28.470 --> 00:00:31.470
times things that would just be a huge pain to do on your own.

9
00:00:31.590 --> 00:00:37.020
But of course this same idea applies to things like making a web site where you need to interact with

10
00:00:37.020 --> 00:00:37.730
the database.

11
00:00:37.770 --> 00:00:38.870
You need to create.

12
00:00:39.060 --> 00:00:44.630
You might create the tables manually yourself but then you insert the data through python.

13
00:00:44.730 --> 00:00:51.030
Usually someone submits a form that form triggers Python code in the backend that code through python

14
00:00:51.030 --> 00:00:56.030
is going to insert into a database and that sort of process goes on and on and on.

15
00:00:56.130 --> 00:00:58.420
So let's start with the very basics.

16
00:00:58.500 --> 00:01:04.650
One of the reasons I chose to use equal light was that Python comes with a builtin library to communicate

17
00:01:04.650 --> 00:01:11.140
with it sort of a wrapper it's a connector between one technology sequel and another which is python.

18
00:01:11.460 --> 00:01:16.950
And every database has some version of this out there or there are many actually that work with multiple

19
00:01:16.950 --> 00:01:18.390
different types of databases.

20
00:01:18.390 --> 00:01:23.870
There's lots of third party libraries but this one is just called sequel 3 and it comes with Python.

21
00:01:23.870 --> 00:01:25.920
You don't have to install anything at all.

22
00:01:26.340 --> 00:01:27.380
So the basics.

23
00:01:27.540 --> 00:01:32.210
Well we import sequel 3 and then we create a connection.

24
00:01:32.310 --> 00:01:35.160
So this is our link to a database.

25
00:01:35.340 --> 00:01:43.380
So whatever our database file is if we have a you know startup app D-B or cat Scott D-B we connect to

26
00:01:43.380 --> 00:01:46.110
it and then we do various commands.

27
00:01:46.110 --> 00:01:49.450
We'll come back to this through something called a cursor.

28
00:01:49.470 --> 00:01:56.370
So in this video I just want us to be able to create a new database through python create a new table

29
00:01:56.370 --> 00:02:02.600
in that database and then execute that code commit it and then close.

30
00:02:02.640 --> 00:02:03.050
OK.

31
00:02:03.330 --> 00:02:05.580
So those are the basics that what I want to try to do.

32
00:02:05.640 --> 00:02:08.120
And we're going to come over to a new file first.

33
00:02:08.130 --> 00:02:11.380
Actually I've made a new directory in the past one.

34
00:02:11.520 --> 00:02:13.890
There was just a lot of database files going.

35
00:02:13.890 --> 00:02:16.700
I guess it's only two but it looks kind of confusing.

36
00:02:16.740 --> 00:02:21.600
So I made this new friend directory we're going to be working with friends this time around and I have

37
00:02:21.600 --> 00:02:27.570
a new file called friends up P Y and I'm going to start by importing sequel light 3.

38
00:02:28.380 --> 00:02:34.520
And then the next important line is to create my connection which is sequela 3 dot connect.

39
00:02:34.530 --> 00:02:38.470
And then if we had an existing database we could connect to that one.

40
00:02:38.580 --> 00:02:43.100
But since we don't we can actually create our new database file through python.

41
00:02:43.500 --> 00:02:47.100
So we're going to say I don't know let's call it people.

42
00:02:48.630 --> 00:02:51.030
Let's go with my friends.

43
00:02:51.150 --> 00:02:53.490
D.B whatever just something.

44
00:02:53.700 --> 00:02:56.910
And then let's save it to a variable they like to call it.

45
00:02:56.910 --> 00:03:02.370
Con I always think that says short for Connecticut but connection is fine.

46
00:03:02.370 --> 00:03:04.850
You could call it C or just connection.

47
00:03:04.850 --> 00:03:06.330
It's not that long.

48
00:03:06.330 --> 00:03:11.310
And then what we do along the way is interact with that database through this connection.

49
00:03:11.340 --> 00:03:16.230
So at the very end we want to make sure that we close our connection just like when we are opening a

50
00:03:16.230 --> 00:03:18.980
file and writing to it we want to close the file.

51
00:03:19.410 --> 00:03:26.670
So we close that connection and then somewhere in here we'll do things like I don't know insert into

52
00:03:26.700 --> 00:03:28.350
or select.

53
00:03:28.350 --> 00:03:30.800
Of course we can't just write those commands as they are.

54
00:03:30.800 --> 00:03:34.080
We have to go through the sequel light library.

55
00:03:34.440 --> 00:03:39.660
So if we just save this file and execute it right now how it is all that it does is connect to a database

56
00:03:39.660 --> 00:03:42.050
that doesn't yet exist and then close.

57
00:03:42.180 --> 00:03:43.250
Let's see what happens.

58
00:03:43.260 --> 00:03:47.170
OK I just executed it Python 3 friends that why.

59
00:03:47.240 --> 00:03:48.020
And what do you know.

60
00:03:48.060 --> 00:03:51.380
We have a new database my friend D-B.

61
00:03:51.480 --> 00:03:56.250
So that was our first thing that we did technically you know we could've just made this file on our

62
00:03:56.250 --> 00:03:56.520
own.

63
00:03:56.520 --> 00:03:57.720
It's totally empty.

64
00:03:57.900 --> 00:03:59.530
But it is a database file.

65
00:03:59.730 --> 00:04:03.810
And next time if I run this code it's going to connect to that database.

66
00:04:03.810 --> 00:04:05.660
It's not going to keep remaking it.

67
00:04:05.760 --> 00:04:06.980
So that's nice.

68
00:04:07.140 --> 00:04:12.870
If we double check right there's only one of them you'll have to trust that it's the same one and every

69
00:04:12.870 --> 00:04:18.380
time that we add or remove from this database or create new tables it will always find this one.

70
00:04:18.570 --> 00:04:23.070
It's not going to make a new one unless it can't find my friend DB.

71
00:04:23.430 --> 00:04:25.740
So now let's talk about creating a table.

72
00:04:25.740 --> 00:04:28.770
So the sequel to create a table looks like this.

73
00:04:28.770 --> 00:04:29.340
Right.

74
00:04:29.370 --> 00:04:30.780
Create table.

75
00:04:30.960 --> 00:04:36.090
Let's say we're making our table called people friends friends is fine.

76
00:04:36.480 --> 00:04:39.870
And inside of that what do we want for friends.

77
00:04:39.930 --> 00:04:47.760
Let's have first name is going to be text last name is also text.

78
00:04:48.000 --> 00:04:54.540
And age is instead of age it's kind of boring let's do closeness like rate.

79
00:04:54.540 --> 00:04:56.510
How close to a friend they are.

80
00:04:56.520 --> 00:04:58.620
Closeness which would be an integer.

81
00:04:58.620 --> 00:05:01.640
So from 1 to 10 how good of a friend is someone.

82
00:05:01.670 --> 00:05:04.330
So this is the sort of sequel that we want to run.

83
00:05:04.400 --> 00:05:05.930
Create table friends.

84
00:05:05.930 --> 00:05:10.880
Make sure I don't have any errors when you semi-colon but to do it we have to do it through the sort

85
00:05:10.880 --> 00:05:12.400
of Python interface.

86
00:05:12.560 --> 00:05:15.890
And the first thing we have to talk about is a concept called a cursor.

87
00:05:15.920 --> 00:05:20.120
It's kind of complicated to explain and it doesn't really matter how it works because we just have to

88
00:05:20.120 --> 00:05:20.500
do it.

89
00:05:20.600 --> 00:05:26.720
Basically a cursor is like a temporary workspace work area for Sequel commands.

90
00:05:26.720 --> 00:05:31.560
So it allocates just a little bit of memory for us to work and then it will return some data.

91
00:05:31.560 --> 00:05:36.590
Usually we basically create a cursor and then execute different lines of sequel with it.

92
00:05:36.590 --> 00:05:47.060
So the pattern is make the cursor so create cursor objects and then will say execute some sequel with

93
00:05:47.060 --> 00:05:50.430
that cursor and then we'll also commit changes.

94
00:05:50.690 --> 00:05:55.370
OK so to create the cursor object to super simple we have our connection and all we have to do is say

95
00:05:55.370 --> 00:06:00.890
Conne dot cursor and then save that to a variable in the docs.

96
00:06:00.890 --> 00:06:02.200
They do see a lot.

97
00:06:02.240 --> 00:06:06.530
We could also just call it cursor but C equals conduct cursor.

98
00:06:06.530 --> 00:06:13.820
Now all of the commands that we execute like this one here eventually will be c dot executes something.

99
00:06:14.540 --> 00:06:23.290
So if I just copy this in here and do a secret execute and then commit those changes which is con dot

100
00:06:23.390 --> 00:06:27.570
commit like that and then close the connection.

101
00:06:27.620 --> 00:06:30.580
So we open a connection to this database which already exists.

102
00:06:30.580 --> 00:06:31.850
Now it's empty.

103
00:06:31.850 --> 00:06:38.070
We create a new cursor object we execute a line a sequel we commit to the connection and close.

104
00:06:38.090 --> 00:06:40.210
Let's see if it works.

105
00:06:40.220 --> 00:06:42.170
Fingers crossed I don't have any typos here.

106
00:06:42.170 --> 00:06:43.010
Text text.

107
00:06:43.040 --> 00:06:45.170
Integer looks OK.

108
00:06:45.410 --> 00:06:46.100
Here we go.

109
00:06:47.190 --> 00:06:49.480
All right they don't work.

110
00:06:49.480 --> 00:06:51.220
Let's just check by going to school.

111
00:06:51.310 --> 00:06:55.230
Three my friends D-B and do dot tables.

112
00:06:55.350 --> 00:06:55.950
Ha.

113
00:06:56.020 --> 00:07:05.330
We have a friends table now and we can also do a schema schema on friends and see.

114
00:07:05.350 --> 00:07:05.790
OK.

115
00:07:05.860 --> 00:07:07.120
It is the exact statement right.

116
00:07:07.150 --> 00:07:10.660
First name Tech's last name text closeness integer.

117
00:07:10.660 --> 00:07:11.320
All right.

118
00:07:11.500 --> 00:07:12.790
So that worked.

119
00:07:12.790 --> 00:07:18.790
Now let's move on to not creating that table again but doing something else like inserting into that

120
00:07:18.790 --> 00:07:19.300
table.
