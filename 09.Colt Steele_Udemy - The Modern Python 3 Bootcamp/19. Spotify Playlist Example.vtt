WEBVTT
1
00:00:00.270 --> 00:00:01.340
Hey welcome back.

2
00:00:01.620 --> 00:00:03.480
So we've learned a lot in your syntax.

3
00:00:03.540 --> 00:00:08.100
You know dictionary methods dictionaries we're going to continue on with some heavier stuff after this

4
00:00:08.100 --> 00:00:10.750
video when we talk about dictionary comprehension.

5
00:00:10.860 --> 00:00:16.110
But for now we're going to take a quick detour to talk about data modeling using lists and dictionaries

6
00:00:16.110 --> 00:00:16.840
together.

7
00:00:16.950 --> 00:00:19.610
So we haven't really seen putting them together yet.

8
00:00:19.980 --> 00:00:22.400
Well we're going to do is model a playlist.

9
00:00:22.500 --> 00:00:25.040
So here's an example playlist from Spotify.

10
00:00:25.230 --> 00:00:29.590
But it could be you know any playlists from your iTunes account or from whatever you use.

11
00:00:29.610 --> 00:00:31.800
The key idea that a playlist has a title.

12
00:00:32.190 --> 00:00:37.590
I think this one is from when I was trapped in a really long bus ride between Argentina and Chile.

13
00:00:37.950 --> 00:00:39.300
There there's an author.

14
00:00:39.420 --> 00:00:43.890
And then there's a list of songs and each song has the title.

15
00:00:43.980 --> 00:00:48.480
It has an artist or multiple artists so that's important.

16
00:00:48.540 --> 00:00:52.440
And like in this case this is a remix and there's two credited artists.

17
00:00:52.500 --> 00:00:58.470
Then there's the album and the date it was added to the play list which we don't have to model that

18
00:00:58.710 --> 00:00:59.710
and that duration.

19
00:01:00.030 --> 00:01:04.510
And then on top of that there's an order to the actual songs and that's important.

20
00:01:04.510 --> 00:01:04.950
Right.

21
00:01:04.950 --> 00:01:07.660
A lot of people spend time ordering their play lists.

22
00:01:07.680 --> 00:01:11.320
I did not in this one but a lot of people labor over that.

23
00:01:11.460 --> 00:01:13.240
So we want to make sure that there is an order.

24
00:01:13.410 --> 00:01:16.720
So how would we actually model this in a single variable.

25
00:01:16.770 --> 00:01:22.230
And if you want to try it on your own don't worry about actually replicating off the songs and some

26
00:01:22.230 --> 00:01:24.680
of them are pretty long names and remixes and all of that.

27
00:01:24.930 --> 00:01:30.600
You could just put you know dummy data whatever you want just try modeling one or two songs in a playlist

28
00:01:30.810 --> 00:01:34.050
just so we have a feel for how this would actually function.

29
00:01:34.050 --> 00:01:40.650
So if you want to try just making a variable call it play list set it equal to something that contains

30
00:01:40.740 --> 00:01:42.310
all of this information.

31
00:01:42.600 --> 00:01:46.010
Then go ahead and give it a shot or I'll do it right now.

32
00:01:46.260 --> 00:01:54.840
OK so I'm going to hop over here and make a file called playlist P Y and I'll start off by just making

33
00:01:54.840 --> 00:01:56.550
a variable called playlist.

34
00:01:56.940 --> 00:01:58.520
And here's what we have to consider.

35
00:01:58.590 --> 00:02:01.000
What is our top level data structure.

36
00:02:00.990 --> 00:02:01.920
We're going to use.

37
00:02:01.920 --> 00:02:03.390
So it needs to be a data structure.

38
00:02:03.390 --> 00:02:05.120
We're not going to put everything in a string.

39
00:02:05.220 --> 00:02:07.940
We're not going to use a number that don't work.

40
00:02:08.010 --> 00:02:11.940
We need to use either a list or a dictionary.

41
00:02:12.210 --> 00:02:16.560
You might think a list would be best because this is a list of songs right.

42
00:02:16.890 --> 00:02:22.030
But the problem is we also need to store information like the name of the play list and the author.

43
00:02:22.290 --> 00:02:27.900
So because of that I'm going to make the entire thing a dictionary so I'll have title Patagonia boss

44
00:02:28.200 --> 00:02:29.650
author or creator.

45
00:02:29.670 --> 00:02:35.220
Cold steel and then I'll have a key called maybe contents or songs songs.

46
00:02:35.280 --> 00:02:37.970
It's probably better and that will be a list.

47
00:02:38.100 --> 00:02:47.490
So it might look something like this where we would have title we need quotes and title might be what

48
00:02:47.560 --> 00:02:54.350
they call it Patagonia bus off of such a miserable bus ride.

49
00:02:54.600 --> 00:03:00.910
And then we would have Arthur and set that too cold steel or whoever.

50
00:03:01.200 --> 00:03:10.370
And then there would be songs which is actually equal to a list and for formatting purposes Let's denote

51
00:03:10.410 --> 00:03:14.320
these just like this.

52
00:03:14.330 --> 00:03:14.970
There we go.

53
00:03:15.140 --> 00:03:16.180
Well let's just test it out.

54
00:03:16.190 --> 00:03:20.840
So ideally we won't see anything.

55
00:03:21.510 --> 00:03:21.950
OK.

56
00:03:22.020 --> 00:03:24.210
We don't see anything good.

57
00:03:24.500 --> 00:03:24.770
OK.

58
00:03:24.770 --> 00:03:30.410
So then instead of hear each song we need to store a couple of pieces of information.

59
00:03:30.410 --> 00:03:31.840
What do we care about.

60
00:03:32.570 --> 00:03:39.130
We need a title we need to call this artist or artists we need.

61
00:03:39.160 --> 00:03:40.240
And the album name.

62
00:03:40.310 --> 00:03:45.130
And then the duration and all of those are actually going to be keys inside of a dictionary.

63
00:03:45.130 --> 00:03:52.250
So each song itself is a dictionary instead of a list and the order there in the list will dictate the

64
00:03:52.250 --> 00:03:53.680
order that they're in the play list.

65
00:03:53.690 --> 00:03:59.240
The first thing in our list will be this song and the only other nuance is that artist itself needs

66
00:03:59.240 --> 00:04:00.680
to store more than one artist.

67
00:04:00.710 --> 00:04:05.980
So a single string won't work like it might for a title or for an album name.

68
00:04:06.170 --> 00:04:08.240
What we're going to need to use is a list.

69
00:04:08.450 --> 00:04:09.490
So let's try that.

70
00:04:09.500 --> 00:04:11.500
So end this as well.

71
00:04:11.600 --> 00:04:15.520
And then each song is going to be a dictionary.

72
00:04:15.560 --> 00:04:21.680
So each one has a title and I'll just put fake data in here so I'll just call it a song title or let's

73
00:04:21.680 --> 00:04:23.110
just go with the song one.

74
00:04:23.600 --> 00:04:30.770
And then we have artists and actually Betteridge called artists because most of the time there's only

75
00:04:30.770 --> 00:04:31.620
one.

76
00:04:31.940 --> 00:04:35.300
And then we'll have a list and we'll just go with.

77
00:04:35.540 --> 00:04:38.700
Let's just say to my cats.

78
00:04:39.230 --> 00:04:44.110
And then after that we had let's just do duration and that could be a number.

79
00:04:44.120 --> 00:04:45.970
How would we model a song duration.

80
00:04:46.160 --> 00:04:49.900
Well we could just do a number like a float like this.

81
00:04:49.900 --> 00:04:55.490
Well that would be a very long song maybe like two point five for two minutes 30 seconds or we could

82
00:04:55.490 --> 00:05:01.610
do a string or once we talked about dates and times we could worry about that for now let's just do

83
00:05:01.700 --> 00:05:09.170
a flip and then we have a whole other song I'll just duplicate this and call this one song to an artist

84
00:05:09.200 --> 00:05:11.890
this time we'll have to maybe it's a remix.

85
00:05:11.990 --> 00:05:20.210
So there's the original which was by Kitty and the second one which was by D.J. cat which is three mixer

86
00:05:20.420 --> 00:05:21.440
and duration.

87
00:05:21.440 --> 00:05:22.010
It's a remix.

88
00:05:22.010 --> 00:05:22.670
It's a lot longer.

89
00:05:22.670 --> 00:05:23.880
Five point.

90
00:05:24.220 --> 00:05:25.960
I don't know 25.

91
00:05:26.620 --> 00:05:27.170
OK.

92
00:05:27.410 --> 00:05:30.460
So you can see now where we're going with this.

93
00:05:30.470 --> 00:05:31.640
Let me just add one more.

94
00:05:31.650 --> 00:05:36.950
We have another piece of data in here and this one will be called meow meow.

95
00:05:37.120 --> 00:05:38.080
Sure.

96
00:05:38.180 --> 00:05:42.440
And this one is by Garfield and it is two minutes.

97
00:05:42.440 --> 00:05:43.450
Exactly.

98
00:05:43.880 --> 00:05:44.190
OK.

99
00:05:44.240 --> 00:05:45.590
So we have three songs.

100
00:05:45.590 --> 00:05:47.680
There's an order to our playlist.

101
00:05:48.050 --> 00:05:50.720
There's an author to the post and the titles of the playlist.

102
00:05:50.840 --> 00:05:53.430
So we have a dictionary with keys and values.

103
00:05:53.450 --> 00:06:00.830
The song's key is another list and those lists each item in the list is another dictionary and the artist

104
00:06:00.830 --> 00:06:04.780
property the key in the dictionary is a corresponding list.

105
00:06:04.820 --> 00:06:09.570
So we have a lot of nested data so let's just check for syntax errors.

106
00:06:10.040 --> 00:06:12.640
We need to add a comma here and now run it.

107
00:06:12.650 --> 00:06:15.140
There's no syntax errors call.

108
00:06:15.260 --> 00:06:21.410
So let's say I just want to do something like total up the duration so I could figure out how long this

109
00:06:21.410 --> 00:06:25.320
entire playlist is what the entire play time is.

110
00:06:25.640 --> 00:06:30.950
So we could do something like playlist and it's a dictionary so we need to iterate over which part Well

111
00:06:30.950 --> 00:06:33.080
we really only care about the songs.

112
00:06:33.170 --> 00:06:37.030
So that's play list songs right.

113
00:06:37.100 --> 00:06:46.010
And that gives us a list so we can do for a song in play list songs and we can start by just printing

114
00:06:46.280 --> 00:06:48.580
the song title or something.

115
00:06:48.620 --> 00:06:52.720
Print song title let's see what happens now.

116
00:06:53.910 --> 00:06:55.900
Song one song to your meal.

117
00:06:56.330 --> 00:06:56.930
OK.

118
00:06:57.120 --> 00:07:01.600
But rather than title what we really want is the duration.

119
00:07:01.810 --> 00:07:06.790
So it could just print the duration or we could sum them together.

120
00:07:06.940 --> 00:07:11.980
And the easiest way to do that with what we know now is to make a variable and we could just call it

121
00:07:12.220 --> 00:07:25.200
total length set it to 0 and then just do total length plus equals and I'll just do song duration and

122
00:07:25.320 --> 00:07:28.420
at the end let's just do print total length

123
00:07:30.970 --> 00:07:32.440
9.7 five.

124
00:07:32.790 --> 00:07:36.540
And again we're not really worrying about how restoring time at this point.

125
00:07:36.610 --> 00:07:41.370
There's better ways of storing dates and times but for now nine point seventy five is the total of all

126
00:07:41.370 --> 00:07:46.610
the things all the songs in our playlist and that's one way of finding that information out.

127
00:07:46.770 --> 00:07:47.060
Okay.

128
00:07:47.070 --> 00:07:48.450
I'll leave this at that.

129
00:07:48.600 --> 00:07:54.840
I just want to show you a more real world example of how we would actually store data and if we actually

130
00:07:54.840 --> 00:08:01.280
got this data back from the Spotify API which when we talk that API will get very similar data back.

131
00:08:01.440 --> 00:08:07.440
It's almost always a bunch of nested dictionaries with lists inside of them and other dictionaries and

132
00:08:07.440 --> 00:08:08.760
then list inside of those.

133
00:08:08.760 --> 00:08:09.740
And it keeps going.

134
00:08:09.750 --> 00:08:11.990
And often it's more complex than this.

135
00:08:12.000 --> 00:08:16.050
I mean you can imagine Spotify has a lot more data for each song.

136
00:08:16.140 --> 00:08:22.530
Even something like genre if you wanted to add genre to this almost every song and Spotify outwardly

137
00:08:22.650 --> 00:08:28.680
has more than one genre but then internally they classify each song probably in 100 different ways about

138
00:08:28.680 --> 00:08:30.400
how upbeat its lyrics are.

139
00:08:30.450 --> 00:08:32.950
You know it's good for a rainy day.

140
00:08:33.060 --> 00:08:35.370
You know what ppm is the tempo.

141
00:08:35.370 --> 00:08:37.350
All these different things that they're actually storing.

142
00:08:37.350 --> 00:08:39.420
So there's a lot of properties anyway.

143
00:08:39.540 --> 00:08:44.670
So that's a quick little break from talking about a bunch of more difficult dictionary topics.

144
00:08:44.700 --> 00:08:48.090
We're moving on now after this to dictionary comprehension.

145
00:08:48.240 --> 00:08:49.560
So I don't know.

146
00:08:49.560 --> 00:08:51.450
Get ready to do some stretches.

147
00:08:51.450 --> 00:08:52.460
Drink some coffee.

148
00:08:52.460 --> 00:08:53.140
See you soon.
