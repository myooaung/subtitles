1
00:00:00,280 --> 00:00:06,900
OK we've seen how to make the most basic request but all we're getting back is this giant block of H.

2
00:00:06,900 --> 00:00:12,150
Tim Alv it is really impossible for us to make sense of let alone do anything useful with.

3
00:00:12,180 --> 00:00:17,880
So in this video I'm going to show you how we can ask a Web site that supports this at least not every

4
00:00:17,880 --> 00:00:20,350
web site does but the Web sites that support this.

5
00:00:20,400 --> 00:00:23,070
We want to be able to ask them instead of sending me to mail.

6
00:00:23,070 --> 00:00:28,270
Can you please send me a plain text or can you please send me Jason and we'll talk more about what Jason

7
00:00:28,320 --> 00:00:28,980
is again.

8
00:00:28,980 --> 00:00:34,290
But these formats that are more friendly for Python and the way we do that with the requests module

9
00:00:34,610 --> 00:00:37,420
is we can specify headers like this.

10
00:00:37,470 --> 00:00:40,970
So we have a request get this part the same.

11
00:00:41,100 --> 00:00:49,440
The first argument is that you are all that then we can pass in a keyword argument headers and it can

12
00:00:49,440 --> 00:00:55,520
be a dictionary of key value pairs so Hetter one is not going to be what we would what we'd put there.

13
00:00:55,590 --> 00:01:01,410
But this is where we would put something like please give me Jason please give me a plain text and then

14
00:01:01,470 --> 00:01:07,250
we specify that it's with the header excepts meaning be the value of that type of data we will accept

15
00:01:07,260 --> 00:01:07,890
back.

16
00:01:08,100 --> 00:01:14,280
But before we make a request Let me show you the Web site and we'll request it's called I Can Has dad

17
00:01:14,280 --> 00:01:20,550
joke dot com if you haven't heard of dad jokes or just really cheesy P.G. jokes like what do you call

18
00:01:20,550 --> 00:01:27,430
a group of killer whales playing instruments in an orchestra or two peanuts were walking down the street.

19
00:01:27,630 --> 00:01:29,070
One was assaulted.

20
00:01:29,220 --> 00:01:31,170
Yeah very silly.

21
00:01:31,310 --> 00:01:33,040
What do I mean stop here.

22
00:01:33,180 --> 00:01:34,500
We're going to send a request here.

23
00:01:34,620 --> 00:01:39,120
And the first thing the first time we send a request will be to get an h him l response.

24
00:01:39,120 --> 00:01:45,250
What we see here the next time though we'll see how to send it so we can get plain text or Jason back.

25
00:01:45,420 --> 00:01:48,020
So I'm going to make a new file and I'll just call it headers.

26
00:01:48,100 --> 00:01:48,690
Why.

27
00:01:49,140 --> 00:01:50,690
And I'm going to do the same thing.

28
00:01:50,710 --> 00:01:52,410
Import requests.

29
00:01:52,740 --> 00:01:56,010
And then I'm going to paste the you are well into a string.

30
00:01:56,010 --> 00:01:57,220
Notice that the u r l.

31
00:01:57,240 --> 00:02:02,900
H t t s not going to go into the difference really here but it just means HGP secure.

32
00:02:03,030 --> 00:02:04,880
You've probably come across it before.

33
00:02:04,980 --> 00:02:08,880
If we don't have that asthore we can't actually request that Web site.

34
00:02:09,030 --> 00:02:14,850
So we need that and I'm going to just make a variable called your Allegan then I'll have my response

35
00:02:15,090 --> 00:02:18,940
equals requests dot Ged's you are.

36
00:02:19,470 --> 00:02:22,090
So by default it's going to give me Chimo.

37
00:02:22,200 --> 00:02:25,200
I'm not sending any header that says otherwise.

38
00:02:25,680 --> 00:02:30,260
And let's just do a print response text.

39
00:02:30,640 --> 00:02:33,380
Ok let's see how it goes.

40
00:02:37,820 --> 00:02:38,240
All right.

41
00:02:38,240 --> 00:02:40,250
So I get this big thing of HMO.

42
00:02:40,330 --> 00:02:43,370
All these are H.T. mailbags little javascript.

43
00:02:43,370 --> 00:02:47,990
You can see buried in here somewhere is the actual joke.

44
00:02:48,030 --> 00:02:52,210
I don't know where exactly here's the button that says submit new joke.

45
00:02:52,520 --> 00:02:54,730
Here's a little information bio.

46
00:02:54,770 --> 00:02:55,900
Anyway somewhere on here.

47
00:02:55,910 --> 00:02:56,900
Oh here we go.

48
00:02:56,930 --> 00:02:58,580
What do you do on a remote island.

49
00:02:58,580 --> 00:03:02,690
Try and find the TV the TV island it belongs to.

50
00:03:02,730 --> 00:03:06,040
Oh man that's terrible remote.

51
00:03:06,080 --> 00:03:06,860
Wow.

52
00:03:07,340 --> 00:03:14,270
So as you can see the information we might want if we were trying to build a little app that just posts

53
00:03:14,510 --> 00:03:19,600
it just prints out a new dad joke every five minutes or something into the terminal.

54
00:03:19,850 --> 00:03:21,150
This is all we want.

55
00:03:21,230 --> 00:03:24,630
All this extra stuff is for humans to look at in a browser.

56
00:03:24,650 --> 00:03:30,950
So what we can do is specify the format that we want our data and to do that we need to pass in a header

57
00:03:31,430 --> 00:03:34,430
so comma and we'll do headers.

58
00:03:34,600 --> 00:03:35,500
Key word.

59
00:03:35,810 --> 00:03:36,310
Equals.

60
00:03:36,320 --> 00:03:42,140
And it's a dictionary because we could pass in multiple headers but all that we want is accept just

61
00:03:42,140 --> 00:03:47,970
like that and then the corresponding value is text slash plain.

62
00:03:47,990 --> 00:03:49,860
So this is one other data type.

63
00:03:49,910 --> 00:03:54,000
There's one which is text slash h tim L which is what we already do.

64
00:03:54,230 --> 00:03:58,010
And you'll see if I do the same thing we get the same response.

65
00:03:58,370 --> 00:04:01,080
But if I do text slash plain.

66
00:04:01,310 --> 00:04:04,350
This request tells the server hey I'm looking for this.

67
00:04:04,400 --> 00:04:04,940
You are right.

68
00:04:05,090 --> 00:04:07,630
But can you give me the plain text version.

69
00:04:07,850 --> 00:04:09,270
And let's see what that looks like.

70
00:04:10,780 --> 00:04:12,170
What do you look at that.

71
00:04:12,180 --> 00:04:13,630
Why are fish easy to weigh.

72
00:04:13,650 --> 00:04:16,730
Because they have their own scales.

73
00:04:16,800 --> 00:04:18,500
We're getting this just the joke.

74
00:04:18,510 --> 00:04:19,380
That's it.

75
00:04:19,380 --> 00:04:21,210
Now not every It should be really clear.

76
00:04:21,210 --> 00:04:25,760
Most web sites aren't set up to just give you plain text like this.

77
00:04:25,770 --> 00:04:30,720
This is a particular one I picked out because they have an API and they make it clear that you can use

78
00:04:30,720 --> 00:04:31,770
it for these purposes.

79
00:04:31,830 --> 00:04:37,330
But if I just ask Google copy this you are over for plain text.

80
00:04:37,590 --> 00:04:38,790
Let's see what happens.

81
00:04:41,120 --> 00:04:43,070
I still get the exact same thing.

82
00:04:43,400 --> 00:04:46,620
So it's not set up to handle that.

83
00:04:46,850 --> 00:04:48,750
So I just want to be clear about that.

84
00:04:49,120 --> 00:04:55,850
Now plaintext is good but there's another format that's better for what we want which is called Jason.

85
00:04:55,950 --> 00:04:59,240
Jason stands for javascript object notation.

86
00:04:59,240 --> 00:05:00,480
Don't let that worry you.

87
00:05:00,470 --> 00:05:02,300
You do not need to know javascript.

88
00:05:02,300 --> 00:05:08,090
You don't need to know any javascript just know the reason it's called that is because historically

89
00:05:08,090 --> 00:05:14,990
when it when it was created it was used to make requests with javascript and get data back to javascript

90
00:05:15,410 --> 00:05:18,410
so that it could be quickly so it could be used quickly.

91
00:05:18,410 --> 00:05:24,710
But the more important idea is that it's a data format that Python can very quickly turn into valid

92
00:05:24,710 --> 00:05:26,180
Python code.

93
00:05:26,270 --> 00:05:31,270
So if we look at whether this is right here this is actually a string that's coming back.

94
00:05:31,410 --> 00:05:40,160
But if I change this to application slash J song rather than text slash him out or text slash plain

95
00:05:40,430 --> 00:05:46,270
application slash Jaison this is just saying please send me the Jasen version of this site.

96
00:05:46,520 --> 00:05:48,310
This is just standard.

97
00:05:48,320 --> 00:05:54,200
It's always applications less Jason and if I try running this now I'm not just going to print a response

98
00:05:54,210 --> 00:05:55,150
that text.

99
00:05:55,160 --> 00:06:02,630
I'll also print response Jason which is a method and this will actually take whatever the response is

100
00:06:03,080 --> 00:06:12,170
take the Jaison and turn it into Python so let's clear make some room and then run this OK.

101
00:06:12,420 --> 00:06:15,570
So when I ask for a song this is what I get back.

102
00:06:15,570 --> 00:06:21,510
This is Jason right here and this down here is Python and they might look.

103
00:06:21,600 --> 00:06:24,100
I mean they look very very similar if we look at this.

104
00:06:24,170 --> 00:06:29,970
Jason is going to paste it in here at the key value pairs.

105
00:06:29,970 --> 00:06:32,750
This looks just like a python dictionary.

106
00:06:33,060 --> 00:06:39,210
But technically if we do type of response from text that's all that I print

107
00:06:43,160 --> 00:06:44,710
you'll see it's a string.

108
00:06:45,350 --> 00:06:47,960
So I can't use respond to that text.

109
00:06:48,050 --> 00:06:56,790
It's equivalent to this big string containing all of our data all of this stuff.

110
00:06:56,990 --> 00:07:02,770
So I can't ask for you know give me the joke in that string because it's a string inside a dictionary.

111
00:07:03,230 --> 00:07:11,180
So instead if you use response that Jason and save that to a variable Let's start by just doing data

112
00:07:11,360 --> 00:07:20,210
because response does Jason data is going to actually be a python dictionary so I can do type of data

113
00:07:20,300 --> 00:07:22,280
for example and print that

114
00:07:25,170 --> 00:07:27,440
and it's a dict dictionary.

115
00:07:27,570 --> 00:07:30,240
So that means if I just print data

116
00:07:34,040 --> 00:07:38,020
I actually have access to these properties now like joke.

117
00:07:38,400 --> 00:07:46,470
So now I can do things like print data joke because it's been turned into a dictionary.

118
00:07:46,590 --> 00:07:52,740
So to make that clear when we send a Jason request it comes back in this format that looks very similar

119
00:07:52,740 --> 00:07:53,310
to Python.

120
00:07:53,310 --> 00:07:57,630
It's called javascript object notation but it comes back as one giant string.

121
00:07:58,140 --> 00:08:06,240
So it's all enclosed in quotes and by running dot Jason up here it just tells Python basically turn

122
00:08:06,240 --> 00:08:08,630
that into actual Python so I can use it.

123
00:08:09,000 --> 00:08:10,080
And that's what it does.

124
00:08:10,080 --> 00:08:13,840
So then I can do things like data brackets joke.

125
00:08:14,100 --> 00:08:19,380
And now if I print that you'll see printing the quote or the joke.

126
00:08:19,590 --> 00:08:21,820
Doctor if broken my arm in several places.

127
00:08:21,900 --> 00:08:22,580
Doctor.

128
00:08:22,670 --> 00:08:24,420
Well don't go to those places.

129
00:08:24,800 --> 00:08:25,760
Yeah.

130
00:08:25,880 --> 00:08:29,050
People who don't eat gluten are really going against the grain.

131
00:08:29,090 --> 00:08:30,790
Great dad jokes.

132
00:08:30,800 --> 00:08:31,200
OK.

133
00:08:31,370 --> 00:08:33,270
So it's a lot to take in.

134
00:08:33,380 --> 00:08:38,860
But what we saw in this just this single little change you made changing the headers from each team

135
00:08:38,870 --> 00:08:40,560
how to Jaison.

136
00:08:40,610 --> 00:08:46,190
We also saw plain text along the way and plain text actually in this example was simpler because it

137
00:08:46,190 --> 00:08:48,200
only sent us a joke and that's all we want.

138
00:08:48,440 --> 00:08:53,570
But imagine that we're getting a lot of data news data where there's 20 different news stories.

139
00:08:53,810 --> 00:08:58,170
If that all came back as plain text it would be very difficult to use.

140
00:08:58,280 --> 00:09:05,870
It would all all the data would be you know headline one you know terrorist something and then maybe

141
00:09:05,870 --> 00:09:08,550
like Florida man did something else.

142
00:09:08,660 --> 00:09:10,670
It would all just be one thing in plain text.

143
00:09:10,670 --> 00:09:19,340
But if we have Jason instead we might get something that looks like this story one call and I don't

144
00:09:19,340 --> 00:09:19,770
know.

145
00:09:19,850 --> 00:09:24,610
Terrorist attack and then story two.

146
00:09:24,710 --> 00:09:29,800
So it makes it easier for us to use it in Python once we convert this into valid Python.

147
00:09:29,990 --> 00:09:32,610
So there's this is just a tough thing to teach.

148
00:09:32,720 --> 00:09:38,810
If you don't have any experience with web so we can just just leave this in any request we make to an

149
00:09:38,810 --> 00:09:41,940
API if it supports Jason we want Jason.

150
00:09:41,960 --> 00:09:42,940
That's just a rule.

151
00:09:43,130 --> 00:09:48,950
And then we'll turn the response into Python code with the response that Jay song it goes from a string

152
00:09:48,950 --> 00:09:50,840
to an actual Python dictionary.

153
00:09:50,930 --> 00:09:54,680
And then we can do things with it like print out the joke.

154
00:09:54,710 --> 00:09:58,130
I could also do print data.

155
00:09:58,130 --> 00:10:10,260
We do it on a separate line actually do an F string and just say status equal to data status.

156
00:10:10,770 --> 00:10:14,910
We have to pay attention to quotes double single quotes that sort of thing.

157
00:10:15,300 --> 00:10:16,170
Run this now.

158
00:10:17,210 --> 00:10:20,880
You can see what did the judge say to the dentist did you swear to pull the tooth.

159
00:10:20,930 --> 00:10:24,050
The whole truth and nothing but the truth status is 200.

160
00:10:24,200 --> 00:10:24,580
OK.

161
00:10:24,590 --> 00:10:27,700
So that was a lot but we're making a request.

162
00:10:27,890 --> 00:10:29,040
We're asking for Jason.

163
00:10:29,090 --> 00:10:30,040
Jason comes back.

164
00:10:30,110 --> 00:10:32,850
Turn it into Python and then we can manipulate it.

165
00:10:32,900 --> 00:10:36,530
And that is a pattern we will follow basically from here on out.

166
00:10:36,590 --> 00:10:37,700
We don't want him out.

167
00:10:37,730 --> 00:10:38,660
We want Jason.

168
00:10:38,660 --> 00:10:44,720
It is made so API is nowadays are almost always Jason and they're made for other computers or code to

169
00:10:44,720 --> 00:10:45,670
work with.

170
00:10:45,680 --> 00:10:46,970
So that's what we've done here.

171
00:10:47,060 --> 00:10:48,820
All we're doing is printing a joke.

172
00:10:48,980 --> 00:10:54,980
But now what we could do is ask for a new joke every five seconds or in a continuous loop which is not

173
00:10:54,980 --> 00:10:58,130
a good idea because it'll probably get blocked from the API.

174
00:10:58,430 --> 00:11:02,320
So you definitely want to wait a couple of seconds I'll show you how to do that later.

175
00:11:02,510 --> 00:11:04,830
So you don't just overload the server anyway.

176
00:11:04,850 --> 00:11:07,220
Important stuff but kind of heavy.

177
00:11:07,290 --> 00:11:11,950
I hope I didn't scare you away because we can start to do some really fun things with this basic boiler

178
00:11:11,950 --> 00:11:12,380
plate.

179
00:11:12,410 --> 00:11:15,200
Make a get request ask for Jason do something with it.

180
00:11:15,380 --> 00:11:15,950
OK.

181
00:11:16,250 --> 00:11:18,110
We'll continue exploring in the next video.
