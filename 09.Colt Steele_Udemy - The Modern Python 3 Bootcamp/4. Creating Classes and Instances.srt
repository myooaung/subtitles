1
00:00:00,330 --> 00:00:00,670
Who.

2
00:00:00,770 --> 00:00:01,410
OK.

3
00:00:01,410 --> 00:00:06,900
So we made it through that long slog of introductions and conceptual stuff in defining terms.

4
00:00:06,900 --> 00:00:10,210
Now it's time to write our first Python class.

5
00:00:10,320 --> 00:00:14,940
Let's say we're making a game poker or blackjack or battleship it doesn't matter.

6
00:00:15,120 --> 00:00:18,020
And we've decided we want to model a user.

7
00:00:18,240 --> 00:00:23,720
So we're going to make a user class as our first simple class and this video we're actually really only

8
00:00:23,880 --> 00:00:25,650
going to go halfway there.

9
00:00:25,650 --> 00:00:30,280
I'm going to show you how to make a new class but we're not going to fill it with data just yet.

10
00:00:30,300 --> 00:00:33,090
So the magic key word is class.

11
00:00:33,090 --> 00:00:35,150
And then a name of a class.

12
00:00:35,210 --> 00:00:38,730
So we'll go with user a couple knows about name naming classes.

13
00:00:38,910 --> 00:00:43,310
We name them in the singular instead of users user.

14
00:00:43,500 --> 00:00:46,830
And we always use camel case you don't have to.

15
00:00:47,070 --> 00:00:48,670
But that's the conventional way.

16
00:00:48,670 --> 00:00:56,750
So we could just to user or poker underscore deck but the convention would be poker deck in camel case.

17
00:00:56,820 --> 00:01:03,600
So most things like variables function names are conventional in Python to you snake case class names

18
00:01:03,750 --> 00:01:04,890
camel case.

19
00:01:04,890 --> 00:01:05,420
OK.

20
00:01:05,760 --> 00:01:07,380
So we could define our class user.

21
00:01:07,440 --> 00:01:14,850
We had a colon and if we just wanted to leave it at this an empty class it did nothing technically right

22
00:01:14,850 --> 00:01:15,200
now.

23
00:01:15,210 --> 00:01:16,990
This is invalid Python code.

24
00:01:17,090 --> 00:01:20,030
And if I try and run this it gets mad at me.

25
00:01:20,190 --> 00:01:22,120
Unexpected end of file.

26
00:01:22,170 --> 00:01:27,780
So if I add pass in here this basically just says OK I'm done there's nothing else in here.

27
00:01:27,780 --> 00:01:28,750
Move on.

28
00:01:29,060 --> 00:01:36,690
No we actually have a working class so we've defined the class just like we defined a function called

29
00:01:36,750 --> 00:01:42,200
ADD and let's just say it returns 3 doesn't actually add.

30
00:01:42,630 --> 00:01:45,390
Well we have to find the function but we're not using it yet.

31
00:01:45,420 --> 00:01:49,560
And to do to use it we have to actually call add with parentheses.

32
00:01:49,860 --> 00:01:51,650
It's no different here.

33
00:01:51,720 --> 00:01:54,520
So we want to actually create a new user.

34
00:01:54,750 --> 00:01:57,020
We have the class to make an instance of it.

35
00:01:57,150 --> 00:02:02,960
We could just go let's call it user 1 equals user with Prince.

36
00:02:03,000 --> 00:02:04,230
So eventually.

37
00:02:04,550 --> 00:02:12,080
OK the next video will be passing in information like a name and an age or I don't know a list of attributes

38
00:02:12,090 --> 00:02:16,420
all these different things you could pass and that will actually instantiate inside the class.

39
00:02:16,440 --> 00:02:18,740
But for now it's an empty shell of a class.

40
00:02:18,740 --> 00:02:20,410
It does absolutely nothing.

41
00:02:20,550 --> 00:02:26,040
But we can tell that it works by doing this if we print user 1.

42
00:02:26,430 --> 00:02:28,540
Let's see what user one is.

43
00:02:29,060 --> 00:02:29,660
OK.

44
00:02:29,850 --> 00:02:31,000
We get this thing.

45
00:02:31,050 --> 00:02:33,720
Main user object.

46
00:02:33,990 --> 00:02:35,240
And that's that's all.

47
00:02:35,280 --> 00:02:37,340
We don't care about this memory address.

48
00:02:37,410 --> 00:02:38,410
So it's a user.

49
00:02:38,550 --> 00:02:39,420
It's empty.

50
00:02:39,420 --> 00:02:41,850
But this is what it looks like for now when we print.

51
00:02:41,880 --> 00:02:47,780
A user will be able to change that come up with a custom representation but we haven't got there yet.

52
00:02:47,820 --> 00:02:50,440
So we've created a new user and it's empty.

53
00:02:50,460 --> 00:02:57,210
It doesn't have any information to any properties no methods but it is a user sort of like create doing

54
00:02:57,210 --> 00:03:02,130
this L equals an empty list or list like that.

55
00:03:02,280 --> 00:03:03,960
And the last thing I'll show.

56
00:03:04,290 --> 00:03:16,320
We can verify for you type user 1 let's call it and it tells us class User main user but this is just

57
00:03:16,560 --> 00:03:18,230
user is what's important.

58
00:03:18,240 --> 00:03:26,550
So just like if we do type of the number 5 it's an int or 5.0 class float or if a dictionary has class

59
00:03:26,580 --> 00:03:30,200
dict we now have her own class user.

60
00:03:30,240 --> 00:03:33,990
So remember this is a class the blueprint for what every user should look like.

61
00:03:34,020 --> 00:03:41,010
Right now they're all identical and they do nothing down here we're instantiating a new user instance

62
00:03:41,370 --> 00:03:48,530
which is a user object an object here and this variable and I could make use one user too and user 3

63
00:03:48,540 --> 00:03:49,330
and 4.

64
00:03:49,350 --> 00:03:51,240
Those are all individual users.

65
00:03:51,240 --> 00:03:54,020
They all look the same but they're not the same thing.

66
00:03:54,090 --> 00:03:59,880
Just like when you make a list we can have four empty lists and they might look the same but in memory

67
00:04:00,000 --> 00:04:01,260
they're actually different.

68
00:04:01,260 --> 00:04:07,790
So if I just print user want a user to go they're both user objects different places in memory.

69
00:04:07,800 --> 00:04:08,200
All right.

70
00:04:08,220 --> 00:04:09,790
So that's a wrap for this video.

71
00:04:09,840 --> 00:04:15,840
You define the simplest use less class called user and we've made a couple of instances of it in the

72
00:04:15,840 --> 00:04:21,210
next video we'll we'll see how to actually add data into this class attributes like username and email

73
00:04:21,270 --> 00:04:22,220
and that sort of thing.
