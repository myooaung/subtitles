WEBVTT
1
00:00:00.240 --> 00:00:05.760
OK if you were with me in the last two videos we have now made it to the payoff where we actually learn

2
00:00:05.760 --> 00:00:08.030
how to write requests using Python.

3
00:00:08.130 --> 00:00:10.950
If you just skip to this section or if you skipped to this video.

4
00:00:11.090 --> 00:00:11.630
Hello.

5
00:00:11.910 --> 00:00:14.680
Let's see how we make requests from Python.

6
00:00:14.730 --> 00:00:16.050
So there's a module for this.

7
00:00:16.050 --> 00:00:19.550
There's actually a lot of modules that can do this a lot of different packages.

8
00:00:19.560 --> 00:00:23.300
The most popular one though is called requests with an s.

9
00:00:23.370 --> 00:00:24.730
So simple enough.

10
00:00:24.810 --> 00:00:26.790
And here's the documentation for it.

11
00:00:26.790 --> 00:00:33.150
You can see it has on get help alone almost 30000 people have started and way more people have used

12
00:00:33.150 --> 00:00:38.700
it probably in the hundreds of thousands if not millions and the first thing we need to do before we

13
00:00:38.700 --> 00:00:44.160
can actually make those HTP requests from Python is to install the package.

14
00:00:44.160 --> 00:00:45.540
So it's called requests.

15
00:00:45.640 --> 00:00:51.290
And from my terminal I'll run Python 3 Dasch am Pipp install.

16
00:00:51.420 --> 00:00:56.350
Make sure you spell it correctly requests and actually deliberately didn't install this one.

17
00:00:56.370 --> 00:00:59.120
I uninstalled it so that you could see what happens.

18
00:01:00.480 --> 00:01:02.380
This is what you should see when you install.

19
00:01:02.430 --> 00:01:03.970
Rather than in the past.

20
00:01:03.990 --> 00:01:08.100
The other two modules or packages I've shown it just says hey you already installed this.

21
00:01:08.130 --> 00:01:13.250
So now we've installed it and I'll just start by opening a Python 3 and doing it from the command line

22
00:01:13.800 --> 00:01:17.440
and all imports requests just like that.

23
00:01:18.320 --> 00:01:25.190
And all we have to do to actually make a request is use a method called GET or POST for the two types

24
00:01:25.190 --> 00:01:25.730
of requests.

25
00:01:25.760 --> 00:01:28.090
And we're going to focus on get requests for now.

26
00:01:28.670 --> 00:01:30.350
So it's requests.

27
00:01:30.350 --> 00:01:34.440
The name of the package datt get and then your read.

28
00:01:34.460 --> 00:01:35.590
I want to get.

29
00:01:35.840 --> 00:01:39.670
I don't know if you can hear my catch going nuts and we pass.

30
00:01:39.740 --> 00:01:40.580
You are well.

31
00:01:40.670 --> 00:01:42.760
So this is a web page called Hacker News.

32
00:01:42.810 --> 00:01:45.930
The URL is news dot Y Combinator dot com.

33
00:01:46.010 --> 00:01:52.220
If you haven't seen it it's sort of just tech startup news with a technical and programming slant on

34
00:01:52.220 --> 00:01:52.810
it.

35
00:01:52.880 --> 00:01:56.990
When I just enter this u r l and hit Enter I'm making a GET request that you are real.

36
00:01:57.230 --> 00:01:59.460
We can do the same thing from our code.

37
00:01:59.570 --> 00:02:02.730
So copy the URL and just paste it here requests.

38
00:02:02.810 --> 00:02:04.250
Get this you are well.

39
00:02:04.400 --> 00:02:11.390
It's good to do that exact same thing and ask for your DNS look up get the right IP address send request

40
00:02:11.390 --> 00:02:12.570
a GET request.

41
00:02:12.570 --> 00:02:16.540
That's with this you are Ellas and then it should come back with some sort of response.

42
00:02:16.730 --> 00:02:20.870
And we want to do is capture that response in a variable.

43
00:02:20.870 --> 00:02:22.880
So I'll just call it response.

44
00:02:22.940 --> 00:02:24.070
This is up to us.

45
00:02:24.110 --> 00:02:25.160
We could call it rez.

46
00:02:25.160 --> 00:02:33.920
Maybe I'll do that and if we look at rez you can see that all we actually see right now is that there's

47
00:02:33.940 --> 00:02:35.200
a status code 200.

48
00:02:35.260 --> 00:02:37.150
But there's a couple of things I'll show you.

49
00:02:37.150 --> 00:02:38.420
So rez.

50
00:02:38.590 --> 00:02:39.380
OK.

51
00:02:39.610 --> 00:02:40.810
It's going to be a boolean value.

52
00:02:40.810 --> 00:02:41.800
True or false.

53
00:02:42.130 --> 00:02:43.850
And so this request is OK.

54
00:02:44.140 --> 00:02:50.740
We can look at our response headers so this includes all the meta data that came back.

55
00:02:50.740 --> 00:02:55.920
Things like the date and the time the character encoding.

56
00:02:55.930 --> 00:02:59.450
What else do we have the domain couple.

57
00:02:59.500 --> 00:03:01.800
Just a bunch of things doesn't really matter at this point.

58
00:03:01.930 --> 00:03:05.250
What's in there but I just want to show you that you can see the headers.

59
00:03:05.440 --> 00:03:14.170
But most importantly we can see response or rez dot text and this is the main part of the response that

60
00:03:14.170 --> 00:03:15.220
comes back.

61
00:03:15.220 --> 00:03:17.230
It's a giant thing of age to him.

62
00:03:17.530 --> 00:03:20.590
So this is not an API that we send a request to.

63
00:03:20.590 --> 00:03:28.390
This is made for human eyes but this is the same thing we get back if we actually view the source of

64
00:03:28.390 --> 00:03:29.330
this page.

65
00:03:29.410 --> 00:03:34.060
As you can see here this is what we got back in our terminal.

66
00:03:34.510 --> 00:03:37.090
It's just that our terminal doesn't know how to display it.

67
00:03:37.090 --> 00:03:38.280
All this h t m l.

68
00:03:38.500 --> 00:03:43.210
This is made for a browser so it would be better to request an API.

69
00:03:43.450 --> 00:03:49.900
But I just wanted to show you that's all it takes to send a request requests don't get and then you

70
00:03:49.900 --> 00:03:52.430
are well and we've sent our first request.

71
00:03:52.690 --> 00:03:56.980
So now let's go out of here and let's put this in a file.

72
00:03:58.340 --> 00:04:02.940
So I'll make a new file and I'll just call it first request.

73
00:04:03.140 --> 00:04:04.040
Y.

74
00:04:04.550 --> 00:04:12.500
So let's start by importing requests again and then let's make our first or second request I guess requests

75
00:04:12.880 --> 00:04:19.250
get and save the response to a variable I'll call it response this time it could be read it could be

76
00:04:19.280 --> 00:04:21.270
our response is good.

77
00:04:21.560 --> 00:04:31.190
And then what I'm going to do is send a request to HTP colon slash slash w Google dot com and I'll show

78
00:04:31.190 --> 00:04:34.600
you what happens if we leave off that HGP stuff in just a moment.

79
00:04:34.760 --> 00:04:37.750
Let's save this to a variable though as a string.

80
00:04:37.860 --> 00:04:40.790
They didn't copy the quotes and then pass it in here.

81
00:04:40.790 --> 00:04:45.130
So I have a variable called you are out and this way I can just change the or else appear.

82
00:04:45.290 --> 00:04:48.830
And if we use that anywhere else it will be changed everywhere.

83
00:04:49.280 --> 00:04:58.550
So down here I'm going to start by just doing a print with an F string after the response will say your

84
00:04:58.880 --> 00:05:00.940
request to.

85
00:05:00.980 --> 00:05:03.460
And then we'll put in you are well.

86
00:05:03.680 --> 00:05:13.010
And then let's do the status code was or came back with status code and then the way that we get the

87
00:05:13.010 --> 00:05:18.470
status code is response status underscore code.

88
00:05:18.500 --> 00:05:19.110
OK.

89
00:05:19.580 --> 00:05:23.340
So this is just the way that we access the steps code.

90
00:05:23.480 --> 00:05:24.940
So let's see if it works.

91
00:05:26.940 --> 00:05:27.910
Might take a moment.

92
00:05:29.080 --> 00:05:37.060
It says your request to HTP to read google.com came back with status code 200 meaning it worked.

93
00:05:37.060 --> 00:05:42.690
And just to show you if I changed that you are to something that doesn't exist like that Google is.

94
00:05:42.690 --> 00:05:45.840
We did this earlier in the section when I tried to request.

95
00:05:45.840 --> 00:05:48.190
I got a 400 or a 404.

96
00:05:48.330 --> 00:05:49.240
Let's see.

97
00:05:49.260 --> 00:05:50.020
There we go.

98
00:05:50.340 --> 00:05:51.350
I get a 4 or 4.

99
00:05:51.480 --> 00:05:56.520
So the request is sent to Google then Google is like I don't know what you're asking for with this slash

100
00:05:56.520 --> 00:05:57.510
SDH.

101
00:05:57.660 --> 00:05:58.440
Blah blah.

102
00:05:58.740 --> 00:06:02.950
I'm going to send you a page or a response that says Page Not Found.

103
00:06:02.970 --> 00:06:05.540
So that's the first most basic thing that we can do.

104
00:06:05.550 --> 00:06:09.870
I'm going to change this back just Google dot com and we will leave it at this.

105
00:06:09.900 --> 00:06:17.720
If I do remove the HTP part and I try and make this request again I get an error now and it says invalid

106
00:06:17.730 --> 00:06:18.910
you are well.

107
00:06:19.020 --> 00:06:19.850
Google dot com.

108
00:06:19.890 --> 00:06:21.040
No schema supplied.

109
00:06:21.070 --> 00:06:25.650
It needs to know what protocol we're using and everything we're doing with HTP.

110
00:06:25.760 --> 00:06:28.470
And so it suggests perhaps he meant HTP.

111
00:06:28.500 --> 00:06:30.160
So we do need that part.

112
00:06:30.510 --> 00:06:31.900
So I'll leave that in here.

113
00:06:31.920 --> 00:06:34.110
So far we've done nothing with the API.

114
00:06:34.380 --> 00:06:39.240
Everything that we've been doing all the requests we've sent have been to just plain old you or else

115
00:06:39.240 --> 00:06:42.670
that are intended for humans that send back to him.

116
00:06:42.900 --> 00:06:52.470
And in fact if we do a print and we do response text when we send the request excuse me to google we're

117
00:06:52.470 --> 00:06:54.300
going to get a bunch of aged him all back.

118
00:06:54.300 --> 00:06:55.800
It's going to look insane.

119
00:06:57.580 --> 00:06:58.150
There we go.

120
00:06:58.150 --> 00:06:59.770
Takes a while to print it all.

121
00:06:59.800 --> 00:07:01.380
This is the actual response.

122
00:07:01.480 --> 00:07:05.230
A bunch of age Tamal and Javascript made for the browser.

123
00:07:05.230 --> 00:07:09.970
So what we're going to do in the next video is see how we can interact with an API and get data in a

124
00:07:10.000 --> 00:07:15.250
different format that is much easier to work with that we can just take and turn into a dictionary or

125
00:07:15.250 --> 00:07:16.360
into a python list.

126
00:07:16.480 --> 00:07:19.240
And then we're ready to go and we can do something with it.

127
00:07:19.270 --> 00:07:20.740
This is just a mess.

128
00:07:21.030 --> 00:07:21.360
OK.

129
00:07:21.370 --> 00:07:25.020
But we have made our first requests using requests.

130
00:07:25.060 --> 00:07:28.170
The module don't get there we go.
