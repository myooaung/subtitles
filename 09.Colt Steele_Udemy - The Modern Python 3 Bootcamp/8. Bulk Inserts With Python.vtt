WEBVTT
1
00:00:00.120 --> 00:00:00.780
Welcome back.

2
00:00:00.780 --> 00:00:06.040
So I'm in a new file this time to talk about doing bulk inserts or multiple inserts together.

3
00:00:06.330 --> 00:00:12.090
So we're still working with the same database same table friends and I have a new list of tuples each

4
00:00:12.090 --> 00:00:13.570
one is a friend.

5
00:00:13.890 --> 00:00:19.110
Well not really but some person first last name and then how close were from there.

6
00:00:19.410 --> 00:00:23.250
And of course Rosa Parks is my closest friend.

7
00:00:23.250 --> 00:00:29.520
I felt like that would be very unfair if I made heard you know I was better friends with Explorers or

8
00:00:29.520 --> 00:00:30.660
astronauts.

9
00:00:30.660 --> 00:00:32.880
I just want to look like a bad person.

10
00:00:33.180 --> 00:00:35.750
But you know I kind of am anyway.

11
00:00:35.760 --> 00:00:37.080
I also don't have friends.

12
00:00:37.100 --> 00:00:40.460
I must say I want to insert all of them as individual rows.

13
00:00:40.470 --> 00:00:41.980
I have two main ways of doing it.

14
00:00:42.030 --> 00:00:51.630
I can iterate over this do something like for a person and people insert that one person or I have another

15
00:00:51.630 --> 00:00:51.930
option.

16
00:00:51.930 --> 00:00:53.370
This is pseudo code by the way.

17
00:00:53.370 --> 00:01:00.630
I have another option of doing a special See Dot and instead of execute there's something called execute

18
00:01:00.630 --> 00:01:01.530
many.

19
00:01:01.760 --> 00:01:05.270
And I can do that and it will actually insert all of them.

20
00:01:05.340 --> 00:01:08.680
So I'm going to start with this version and see that execute many.

21
00:01:08.930 --> 00:01:11.320
Oh and this is supposed to be lowercase M..

22
00:01:11.520 --> 00:01:12.600
Execute many.

23
00:01:12.730 --> 00:01:17.400
And the way it works is we pass in our query and then we pass in our data afterwards so let's say our

24
00:01:17.400 --> 00:01:18.340
data is people.

25
00:01:18.360 --> 00:01:27.360
This list of tuples and then our query is going to be inserted into friends values and then we just

26
00:01:27.360 --> 00:01:32.700
do three question marks that is placeholder question marks and they will be automatically filled in

27
00:01:32.700 --> 00:01:35.740
for each item for each tuple in people.

28
00:01:36.150 --> 00:01:43.040
So it will be first name last name and then closeness unless I specified a different order here.

29
00:01:43.200 --> 00:01:46.420
But since our data is already in this order that makes sense.

30
00:01:46.830 --> 00:01:51.440
OK so let's see if it works execute many make sure it armony typos.

31
00:01:51.690 --> 00:01:54.470
Let's try running it and then open up the database.

32
00:01:54.600 --> 00:02:00.540
So that is equal like three star start from friends.

33
00:02:00.540 --> 00:02:01.240
Awesome.

34
00:02:01.260 --> 00:02:06.750
So that whole new batch of them is in there whether we had you know five or however many I had here

35
00:02:07.390 --> 00:02:09.240
or a hundred or a thousand.

36
00:02:09.240 --> 00:02:12.110
This is one way of doing it inserting them all together.

37
00:02:12.480 --> 00:02:18.060
But if we wanted to do something else along with each one maybe on and threw them into one table and

38
00:02:18.060 --> 00:02:24.630
insert to another table or insert into one table and I don't know print it out or just do something

39
00:02:24.630 --> 00:02:25.700
else along with it.

40
00:02:25.800 --> 00:02:34.530
This doesn't let me do that so I could iterate over them once and do for person and people do something

41
00:02:34.530 --> 00:02:42.590
like well we can do the insert first see Dot execute and the query is going to be exactly the same.

42
00:02:42.660 --> 00:02:51.960
Insert into friends values question mark question mark question mark and then afterwards I'm going to

43
00:02:51.970 --> 00:02:53.550
say person.

44
00:02:54.180 --> 00:02:58.170
So this is going to loop through five times and do 5 separate inserts.

45
00:02:58.200 --> 00:03:00.740
Then I can also do something like print.

46
00:03:00.780 --> 00:03:05.060
I don't know inserting inserting now.

47
00:03:05.460 --> 00:03:06.310
This is silly.

48
00:03:06.540 --> 00:03:10.300
But imagine if we're doing something else like a second insert statement here.

49
00:03:10.770 --> 00:03:16.500
Now let's test this one out and make sure this works as well and we'll use the exact same data which

50
00:03:16.500 --> 00:03:19.150
means that we will have Ok 5.

51
00:03:19.200 --> 00:03:20.200
Inserting now.

52
00:03:20.430 --> 00:03:24.640
And we also have duplicated data inside of there which is fine.

53
00:03:27.120 --> 00:03:27.480
Awesome.

54
00:03:27.480 --> 00:03:28.440
So that works.

55
00:03:28.440 --> 00:03:33.510
So it's one to show you both ways of doing that because often if you just have a bunch of data and all

56
00:03:33.510 --> 00:03:38.490
you want to do is insert I would do it this way but if you have a bunch of data and you need to either

57
00:03:38.700 --> 00:03:44.040
insert it in multiple places or you want to insert and then do math with part of it as you're inserting

58
00:03:44.490 --> 00:03:50.190
or somehow collects pieces of the data like take the average of these if you want to do that sort of

59
00:03:50.190 --> 00:03:54.900
thing than you would want to do it in a loop probably so you only iterate once.

60
00:03:54.900 --> 00:03:56.390
Especially if you have a ton of data.

61
00:03:56.430 --> 00:04:01.430
This isn't very much but you know we could do something like average equals zero.

62
00:04:01.500 --> 00:04:08.180
And then just say average plus equals what is it.

63
00:04:08.330 --> 00:04:11.230
Person 2.

64
00:04:11.280 --> 00:04:16.980
And then at the end we could just do like print average and divide by the length of people.

65
00:04:17.020 --> 00:04:20.400
This is stupid but this just adds them all together.

66
00:04:20.610 --> 00:04:24.110
How close we are as friends and then divides it by five.

67
00:04:24.120 --> 00:04:25.450
The number of friends there.

68
00:04:25.950 --> 00:04:29.410
But this is something I could do alongside it that I couldn't do here.

69
00:04:29.650 --> 00:04:31.680
But it's really a minor example.

70
00:04:31.680 --> 00:04:32.770
Let's just check it out.

71
00:04:32.770 --> 00:04:38.070
The 6.00 is the average relatively low.

72
00:04:38.130 --> 00:04:43.640
Now I should have a ton of the same friends in there and I do.

73
00:04:43.880 --> 00:04:44.270
OK.

74
00:04:44.360 --> 00:04:45.700
So two different ways of inserting.

75
00:04:45.710 --> 00:04:50.640
Next we're going to talk about selecting and alongside that I'm going to talk about a sequel injection

76
00:04:50.690 --> 00:04:53.210
and how to avoid that which kind of talked about how to avoid it.

77
00:04:53.240 --> 00:04:55.740
But I want to show you what happens if you didn't avoid it.
