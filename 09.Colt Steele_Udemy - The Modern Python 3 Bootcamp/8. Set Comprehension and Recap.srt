1
00:00:00,240 --> 00:00:05,190
Hello it's called again still here I haven't totally lost my mind yet.

2
00:00:05,520 --> 00:00:08,750
And in this video we're talking about set comprehension.

3
00:00:09,060 --> 00:00:13,890
So I kind of like it in the video by saying that there was only two videos on set.

4
00:00:13,920 --> 00:00:17,370
I kind of made the decision halfway through the video that it was getting too long and that it would

5
00:00:17,370 --> 00:00:18,270
be better to split it.

6
00:00:18,300 --> 00:00:21,030
So alas here we are with three set videos.

7
00:00:21,030 --> 00:00:24,490
I'm sorry for deceiving you set comprehension.

8
00:00:24,780 --> 00:00:30,540
It's the same idea behind list comprehension and dictionary comprehension in that we can very rapidly

9
00:00:30,570 --> 00:00:33,940
create sets using sort of a shortcut notation.

10
00:00:33,960 --> 00:00:40,290
We can copy set or manipulate them and make new versions where we you know operate on each item in the

11
00:00:40,290 --> 00:00:40,940
set.

12
00:00:40,950 --> 00:00:42,980
So here is a simple example.

13
00:00:43,020 --> 00:00:48,590
Notice we use curly braces just like we did for dictionaries but there's a key difference.

14
00:00:48,660 --> 00:00:55,830
We don't actually specify a key colon value we only specify one thing so it's not neither the key nor

15
00:00:55,830 --> 00:00:58,140
the value because it's not a dictionary it's a set.

16
00:00:58,200 --> 00:01:00,370
So it's just the item in the set.

17
00:01:00,390 --> 00:01:05,090
So in this case x squared for x in range 10.

18
00:01:05,130 --> 00:01:12,210
So that's going to go from zero up to 9 and square at each time and add it to the set and you can see

19
00:01:12,360 --> 00:01:13,340
that there's no order.

20
00:01:13,340 --> 00:01:17,600
Still it is a set and we go to your 164 4:36.

21
00:01:17,610 --> 00:01:18,730
However that's established.

22
00:01:18,750 --> 00:01:20,060
I don't know.

23
00:01:20,620 --> 00:01:22,110
Let's test it out.

24
00:01:22,140 --> 00:01:23,690
There we go.

25
00:01:23,700 --> 00:01:26,670
That's our first simple set comprehension.

26
00:01:26,670 --> 00:01:35,010
And just to showcase the difference just by doing this here X colon x squared for x in range what do

27
00:01:35,010 --> 00:01:36,120
we get.

28
00:01:36,120 --> 00:01:38,070
Now we get a dictionary.

29
00:01:38,340 --> 00:01:41,730
As you can see here where we have you know a key of two.

30
00:01:41,730 --> 00:01:43,440
And the value is two squared.

31
00:01:43,440 --> 00:01:47,690
You have a key of three and the value is three squared which is nine and all the way up.

32
00:01:47,700 --> 00:01:51,710
So just by adding the key colon then we end up with a dictionary.

33
00:01:51,810 --> 00:01:56,420
But if we only have one piece of information it assumes that it's a set.

34
00:01:56,430 --> 00:02:01,580
So here's another example let's do char upper.

35
00:02:01,710 --> 00:02:07,770
Just like that for char in and then we'll do a string but this string will have some duplicate.

36
00:02:07,770 --> 00:02:10,840
So let's do you know hello like that.

37
00:02:11,010 --> 00:02:12,580
There's two L's.

38
00:02:12,600 --> 00:02:13,600
What do we end up with.

39
00:02:13,770 --> 00:02:17,090
Well we end up with one of each character upper case.

40
00:02:17,250 --> 00:02:22,800
So because it's a set those duplicates are not allowed and also the order is all messed up.

41
00:02:22,800 --> 00:02:26,790
So I have one more example and this one might be a bit scary.

42
00:02:26,790 --> 00:02:31,590
This is actually a function which we haven't learned about yet but I put it here because it's where

43
00:02:31,590 --> 00:02:32,660
we're going next.

44
00:02:32,670 --> 00:02:38,460
So in the next section we'll be able to make more sense of this but what this does is it takes a given

45
00:02:38,460 --> 00:02:46,410
string whatever we pass in any string and it will return true or false depending on if that string contains

46
00:02:46,500 --> 00:02:48,690
all of the vowels.

47
00:02:48,720 --> 00:02:54,660
Oh and you all of them not just one has to contain all of them and if it does it returns true.

48
00:02:54,750 --> 00:02:59,130
But to start let's just analyze this bulk of the logic.

49
00:02:59,130 --> 00:03:01,420
None of the functions syntax will come back to that.

50
00:03:01,620 --> 00:03:03,490
So let's define a string first.

51
00:03:03,500 --> 00:03:05,990
We'll just call it string and let's start with.

52
00:03:05,990 --> 00:03:06,370
Sure.

53
00:03:06,390 --> 00:03:06,850
Hello.

54
00:03:06,870 --> 00:03:11,400
That's fine and then most Take a look at what's happening here.

55
00:03:11,520 --> 00:03:16,400
And let's even simplify this more and just focus on the set comprehension.

56
00:03:16,440 --> 00:03:17,480
So what's happening.

57
00:03:17,560 --> 00:03:22,970
OK we are creating a set character for each character in string.

58
00:03:22,980 --> 00:03:30,910
If the character is in a I O or you so we're basically just pulling out the vowels from a word into

59
00:03:30,910 --> 00:03:34,670
a set and you can see from this string we end up with E and O.

60
00:03:34,690 --> 00:03:36,400
Those are the only two vowels.

61
00:03:37,210 --> 00:03:39,960
And you know we could change string to be.

62
00:03:41,680 --> 00:03:43,140
Ha ha ha.

63
00:03:43,690 --> 00:03:47,600
And if we rerun this take each character put it in a set.

64
00:03:47,650 --> 00:03:51,790
If it's one of these we end up with a e n o.

65
00:03:52,090 --> 00:03:59,230
So to tell if a string contains all five vowels we could just use this exact same logic but check if

66
00:03:59,230 --> 00:04:02,970
the length of this resulting set is equal to 5.

67
00:04:03,070 --> 00:04:09,560
So in this case if we just do Lenn of that X that same set comprehension we end up with three.

68
00:04:10,120 --> 00:04:14,530
And we want to check if it's equal to 5 if it equals five.

69
00:04:14,530 --> 00:04:19,260
It means it contains whatever the string is contains every single vowel.

70
00:04:19,300 --> 00:04:24,860
So a word that does contain all five vowels is my absolute favorite tree on earth.

71
00:04:25,300 --> 00:04:26,790
The sequoia tree.

72
00:04:27,010 --> 00:04:29,040
So we can do string equals.

73
00:04:29,110 --> 00:04:33,100
See if I can spell it correctly it's just a jumble of vowels at the end.

74
00:04:33,100 --> 00:04:36,400
If you haven't seen these trees online check them out.

75
00:04:36,400 --> 00:04:37,930
Pictures don't really do them justice.

76
00:04:37,930 --> 00:04:39,410
They are so massive.

77
00:04:39,460 --> 00:04:41,390
They are the largest living things on earth.

78
00:04:41,530 --> 00:04:47,230
If you are able to see them if you live anywhere near California or you're out here at some point definitely

79
00:04:47,230 --> 00:04:47,720
check them out.

80
00:04:47,730 --> 00:04:48,890
They're so awesome.

81
00:04:48,970 --> 00:04:50,710
Like you said pictures do not do it justice.

82
00:04:50,710 --> 00:04:51,700
You just have to be there.

83
00:04:51,700 --> 00:04:52,990
It's pretty inspiring.

84
00:04:53,150 --> 00:04:53,770
OK.

85
00:04:53,950 --> 00:04:56,970
More importantly this is a word that contains all the vowels.

86
00:04:57,340 --> 00:05:00,210
So now if I try this we get true.

87
00:05:00,430 --> 00:05:07,060
Because if we look at what set is generated it contains all the vowels and we're checking if the length

88
00:05:07,060 --> 00:05:08,860
of that set is five.

89
00:05:09,310 --> 00:05:09,870
All right.

90
00:05:10,000 --> 00:05:12,680
And with that we are done with sets.

91
00:05:12,970 --> 00:05:14,310
Also done with tuples.

92
00:05:14,320 --> 00:05:21,130
Let's just quickly review what we covered so tuples or tuples are ordered collections of elements and

93
00:05:21,130 --> 00:05:23,590
they are immutable meaning they do not change.

94
00:05:23,620 --> 00:05:25,800
You make them and you leave him how they are.

95
00:05:26,050 --> 00:05:28,170
And again there is an order.

96
00:05:28,240 --> 00:05:35,690
Tuples are faster than less and they're useful sets however are unordered collections of unique values.

97
00:05:35,770 --> 00:05:40,760
So there is no order guaranteed no order at all and they are not commutable.

98
00:05:40,780 --> 00:05:47,440
We can add and remove using the method add and remove sets and tuples can be created either with the

99
00:05:47,440 --> 00:05:55,870
curly braces and parents or the set or tuple function respectively and finally set comprehension is

100
00:05:56,110 --> 00:05:57,200
something we can do.

101
00:05:57,220 --> 00:06:03,430
It's useful if we're trying to convert other data types to a set like we saw we converted a string to

102
00:06:03,430 --> 00:06:08,350
a set by pulling out the vowels or we could convert a range to a set and so forth.

103
00:06:08,350 --> 00:06:10,210
So that's it for tuples and sets.

104
00:06:10,240 --> 00:06:16,260
And now we get to move on to a big important exciting awesome topic called functions.

105
00:06:16,270 --> 00:06:21,760
So I'll see you then in the next section unless you quit but I hope you don't.
