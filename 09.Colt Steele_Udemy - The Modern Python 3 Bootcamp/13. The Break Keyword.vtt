WEBVTT
1
00:00:00.240 --> 00:00:00.720
All right.

2
00:00:00.720 --> 00:00:06.060
So the last thing we'll talk about in this section the last bit of new information has to do with exiting

3
00:00:06.060 --> 00:00:12.090
our loops in a controlled manner so we can have a loop like a WHILE loop that might be running forever

4
00:00:12.300 --> 00:00:14.240
or might be running 10000 times.

5
00:00:14.370 --> 00:00:20.190
But maybe there's one particular case or reason you might want to quit early and there's a way to do

6
00:00:20.190 --> 00:00:20.830
that.

7
00:00:21.210 --> 00:00:27.210
So the keyword is break break is what we write to exit out of a loop whenever we want.

8
00:00:27.210 --> 00:00:30.690
And I did write while loop but further down I said for loops.

9
00:00:30.690 --> 00:00:32.060
So it does work for both.

10
00:00:32.220 --> 00:00:35.150
But the first example is of a WHILE loop.

11
00:00:35.200 --> 00:00:37.590
So here's an example of an infinite loop.

12
00:00:37.630 --> 00:00:40.200
At least it seems infinite While true.

13
00:00:40.240 --> 00:00:42.860
So that will always run.

14
00:00:43.450 --> 00:00:50.140
But we're setting a variable called command equal to input and we're asking for them to type exit to

15
00:00:50.140 --> 00:00:51.020
quit the loop.

16
00:00:51.460 --> 00:00:55.250
And then if command is equal to exit we break.

17
00:00:55.630 --> 00:00:59.770
And that will then halt the execution of the loop.

18
00:00:59.950 --> 00:01:05.810
So I'll show you clear this out and let's do a simple break up why.

19
00:01:06.070 --> 00:01:19.540
I'll paste this in and Python 3 I can type anything keeps going infinitely until I type exit and it

20
00:01:19.540 --> 00:01:21.220
breaks out of the loop for us.

21
00:01:21.220 --> 00:01:23.460
So here's an example with a for loop.

22
00:01:23.620 --> 00:01:25.730
It's silly and you would never do this.

23
00:01:25.750 --> 00:01:29.560
But in this case we're putting the numbers from 1 to 100.

24
00:01:29.560 --> 00:01:31.080
And what will happen.

25
00:01:31.090 --> 00:01:36.270
Well we print number and then if X is 3 we break the loop and we stop.

26
00:01:36.280 --> 00:01:41.530
So the end result is that we basically print the numbers from 1 to 3 even though the loop intended to

27
00:01:41.530 --> 00:01:43.190
go from 1 to 100.

28
00:01:43.210 --> 00:01:50.620
So a pace that instead let's execute this make some space.

29
00:01:50.670 --> 00:01:55.650
Now we run Python 3 break and we get 1 2 and 3.

30
00:01:55.930 --> 00:02:03.160
And lastly here's one more example using an exercise that we already did earlier where you know you

31
00:02:03.160 --> 00:02:07.600
could put a number of times like 10 times and it will repeat.

32
00:02:07.600 --> 00:02:09.730
Clean up your room 10 times.

33
00:02:09.850 --> 00:02:17.650
But if this was a real relationship between a son or daughter and parent they would probably not sit

34
00:02:17.650 --> 00:02:22.180
there saying clean your room clean up your 100 times maybe three times maybe two times.

35
00:02:22.180 --> 00:02:22.900
I mean who knows.

36
00:02:22.930 --> 00:02:26.860
You know it really depends on households and not try to make any assumptions about anyone's childhood

37
00:02:26.860 --> 00:02:27.170
here.

38
00:02:27.190 --> 00:02:30.710
But in this hypothetical environment four times is the limit.

39
00:02:30.760 --> 00:02:31.600
Yelling.

40
00:02:31.600 --> 00:02:32.980
Clean up your room four times.

41
00:02:33.220 --> 00:02:39.300
And after four we'll just say Do you even listen anymore and break out of the loop.

42
00:02:39.310 --> 00:02:40.990
So let me show you that.

43
00:02:40.990 --> 00:02:43.690
Come at this out pace this one in.

44
00:02:43.720 --> 00:02:49.680
So we're asking for how many times they tell you we enter number like 2 and reprint can appear two times.

45
00:02:49.720 --> 00:02:55.130
But if the number is 50 we'll do it the first two three four times.

46
00:02:55.290 --> 00:03:01.500
But then once we get above four we print to even listen anymore and we break out of the loop.

47
00:03:01.600 --> 00:03:05.970
So it's a way of putting a maximum and a stopping point.

48
00:03:06.220 --> 00:03:10.090
So the same thing would work with a while loop but let's run this now.

49
00:03:10.300 --> 00:03:11.960
How many times do I have to tell you three.

50
00:03:12.100 --> 00:03:12.380
OK.

51
00:03:12.400 --> 00:03:14.160
So if we get a free room three times.

52
00:03:14.290 --> 00:03:15.830
But how about 40.

53
00:03:16.160 --> 00:03:19.340
If we get clean every room and actually we're getting five times here.

54
00:03:19.420 --> 00:03:22.650
Well the problem is that this loop put the range.

55
00:03:22.660 --> 00:03:25.590
It actually starts with times at zero.

56
00:03:25.960 --> 00:03:29.380
So it's actually 0 1 2 3.

57
00:03:29.810 --> 00:03:31.930
And so for it to equal four.

58
00:03:32.500 --> 00:03:35.440
It's only on the fifth time through the loop.

59
00:03:35.450 --> 00:03:36.150
Oh my gosh.

60
00:03:36.160 --> 00:03:43.180
Can't type so we could either change this to be greater than or equal to three I like that.

61
00:03:43.180 --> 00:03:46.020
Or we could offset the loop and have it start at 1.

62
00:03:46.750 --> 00:03:50.710
But let's just use greater than equal to 3.

63
00:03:50.710 --> 00:03:55.810
Now if we try it if I say 30 times we get 1 2 3 4.

64
00:03:55.840 --> 00:03:57.670
Break even listen anymore.

65
00:03:57.970 --> 00:03:59.310
OK so that break.

66
00:03:59.410 --> 00:04:01.520
It's a controlled way of exiting the loop.

67
00:04:01.720 --> 00:04:06.130
You can just a single line break put it wherever you want instead of a loop.

68
00:04:06.280 --> 00:04:09.280
If you did on the first line nothing would ever run in that loop.

69
00:04:09.280 --> 00:04:11.170
So just I should be clear about that.

70
00:04:11.260 --> 00:04:17.900
It doesn't break out of you know after this loop iteration ends it breaks out immediately.

71
00:04:18.070 --> 00:04:26.020
So if I move it and I enter 10 nothing happens at all it quits right there.

72
00:04:26.020 --> 00:04:28.570
So I'll put it back and that's it.

73
00:04:28.570 --> 00:04:33.610
So the next thing we'll do is take a look at our rock paper scissors game and put it in a loop so that

74
00:04:33.610 --> 00:04:34.790
you can play more than once.
