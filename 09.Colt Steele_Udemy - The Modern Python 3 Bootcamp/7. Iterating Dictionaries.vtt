WEBVTT
0
1
00:00:00.240 --> 00:00:05.790
We've seen how to access individual values out of a dictionary just like with lists let's see how we
1

2
00:00:05.790 --> 00:00:06.960
access all of them.
2

3
00:00:06.990 --> 00:00:12.600
How do we iterate over a dictionary using loops so iterating over the list is a bit more straightforward
3

4
00:00:12.630 --> 00:00:15.870
because a list on it's own is already iterable.
4

5
00:00:15.900 --> 00:00:21.900
All we have to do is just you know for now in whatever the list name for name and numbers for color
5

6
00:00:21.900 --> 00:00:26.020
in colors there's a little extra step we have to do with a dictionary.
6

7
00:00:26.430 --> 00:00:32.040
So suppose we have this dictionary same one instructor has all sorts of keys and values of all different
7

8
00:00:32.040 --> 00:00:32.680
types.
8

9
00:00:32.730 --> 00:00:39.360
If we wanted to print every single piece of information out every value we could do something like this.
9

10
00:00:39.360 --> 00:00:41.600
Blah blah blah you know you see where I'm going here.
10

11
00:00:41.610 --> 00:00:46.700
Print instructor name print instructor own dog and what a surprise.
11

12
00:00:46.770 --> 00:00:48.810
This is not a good way of doing things.
12

13
00:00:48.870 --> 00:00:52.480
And this sets us up to see the real way of doing things using a for loop.
13

14
00:00:52.590 --> 00:00:56.510
So this sets us up to see the real way of doing things using a for loop.
14

15
00:00:56.640 --> 00:01:01.460
And there's actually a couple of options because we have no keys and values.
15

16
00:01:01.560 --> 00:01:03.390
We'll see how to loop through the Keys.
16

17
00:01:03.420 --> 00:01:07.130
We'll see how to loop through the values and then we'll see how to do both at the same time.
17

18
00:01:07.140 --> 00:01:08.870
So let's start with the values.
18

19
00:01:08.910 --> 00:01:12.750
Typically that's the more important information that you want out.
19

20
00:01:12.810 --> 00:01:15.170
There's a dot values method.
20

21
00:01:15.690 --> 00:01:23.280
So on any sort of dictionary we can run instructor dot values and this will give us an iterable collection
21

22
00:01:23.280 --> 00:01:25.170
then we can run a for loop with.
22

23
00:01:25.560 --> 00:01:27.570
So you know just like any other for loop.
23

24
00:01:27.720 --> 00:01:28.560
This is up to us.
24

25
00:01:28.560 --> 00:01:33.150
You could call it value you could call it key if you wanted to it's not going to be a key but you can
25

26
00:01:33.150 --> 00:01:39.890
name it whatever you want in V V and value are probably the most common in structured values colon.
26

27
00:01:39.900 --> 00:01:42.650
And then we can do something with the value.
27

28
00:01:42.810 --> 00:01:50.100
So let's try it out here I'll just paste in a dictionary and if we just do instructor taught values
28

29
00:01:50.820 --> 00:01:53.390
you'll see it returns this dict values thing.
29

30
00:01:53.430 --> 00:01:56.060
It doesn't really matter exactly what this is at this point.
30

31
00:01:56.060 --> 00:01:57.560
We'll learn more about them later.
31

32
00:01:57.780 --> 00:02:02.900
But what does matter is that it's Luper bullet iterable we can loop through it.
32

33
00:02:02.910 --> 00:02:11.180
So now I can do me recall that and just do a four v in instructor dot values.
33

34
00:02:11.350 --> 00:02:16.430
Colin let's just do print the.
34

35
00:02:16.540 --> 00:02:17.650
And there we go.
35

36
00:02:17.650 --> 00:02:20.160
We get cold true for Python false.
36

37
00:02:20.230 --> 00:02:26.970
It's giving us the values so we can also do the exact same thing for keys just keys.
37

38
00:02:27.010 --> 00:02:28.670
Otherwise it's identical.
38

39
00:02:29.200 --> 00:02:37.770
So if we just looked at the keys to start we get name on dog of course his favorite language is hilarious.
39

40
00:02:37.870 --> 00:02:39.140
And 44.
40

41
00:02:39.370 --> 00:02:41.950
And then if we just redid that loop.
41

42
00:02:42.770 --> 00:02:44.550
But dumb.
42

43
00:02:46.600 --> 00:02:48.440
And let's just print the key.
43

44
00:02:48.710 --> 00:02:51.110
Well I actually love it as V.
44

45
00:02:51.370 --> 00:02:52.850
So I'll just print V.
45

46
00:02:52.990 --> 00:03:01.140
Not the best name for keys but it does the exact same thing and we get name on dog courses and so on.
46

47
00:03:01.460 --> 00:03:01.710
OK.
47

48
00:03:01.720 --> 00:03:04.590
So those two things you can do them.
48

49
00:03:04.840 --> 00:03:07.850
But a lot of the time you'll probably want to access both.
49

50
00:03:08.290 --> 00:03:10.650
And so for that we use dot items.
50

51
00:03:10.670 --> 00:03:18.950
It's another method and if we just run items on instructor you'll see what we get back.
51

52
00:03:19.000 --> 00:03:20.580
Is this dict items.
52

53
00:03:20.590 --> 00:03:23.880
So we had dict keys dicts values dict items.
53

54
00:03:23.880 --> 00:03:29.030
These are the loop of all iterable collection versions of a dictionary.
54

55
00:03:29.050 --> 00:03:35.170
Basically they're made to pass on to a for loop so that we can loop through them and you can see here
55

56
00:03:35.170 --> 00:03:40.030
we end up with no name and code it doesn't really matter exactly what this is.
56

57
00:03:40.090 --> 00:03:41.110
We will talk with them.
57

58
00:03:41.150 --> 00:03:44.980
But you can see we end up with some structure that is a loop.
58

59
00:03:45.550 --> 00:03:48.190
So we just pass it in as a for loop.
59

60
00:03:48.200 --> 00:03:55.240
But the difference is we don't just have one piece of data so it's not for v and instruct your donkeys
60

61
00:03:55.480 --> 00:03:59.300
or for value or for key we need key and value.
61

62
00:03:59.530 --> 00:04:02.800
So what we can do is just write two variables here.
62

63
00:04:03.100 --> 00:04:03.990
Totally up to us.
63

64
00:04:04.030 --> 00:04:09.120
What we call them but the first one will be the key and the second one represents a value.
64

65
00:04:09.130 --> 00:04:10.720
So the name doesn't matter.
65

66
00:04:11.080 --> 00:04:14.660
And then we have access to both of them inside the loop.
66

67
00:04:15.010 --> 00:04:22.630
So we could do something like for k comma V in instructor dot items.
67

68
00:04:22.700 --> 00:04:32.130
Colin let's do an F string and let's do key.
68

69
00:04:32.160 --> 00:04:41.580
So all right key is and interpolate the key K and value is.
69

70
00:04:42.040 --> 00:04:51.160
And then interpolate the and there we go kids name and value is called key is own dog and value is true
70

71
00:04:51.160 --> 00:04:52.230
and so on.
71

72
00:04:52.240 --> 00:04:58.090
So this is a very common loop that you'll see when we're working with dictionaries K and V are key and
72

73
00:04:58.090 --> 00:05:02.770
value are the most commonly used variable names but you can do whatever you want.
73

74
00:05:03.340 --> 00:05:06.690
So that's the basics of looping through dictionaries.
74

75
00:05:06.700 --> 00:05:12.840
There's three methods we can take advantage of values if you want to loop through the values that keys
75

76
00:05:12.880 --> 00:05:18.460
if you want either for the keys and most commonly that items if we want both at the same time we just
76

77
00:05:18.460 --> 00:05:24.300
need to provide two variable names and then we have access to key and value each time through that loop.
77

78
00:05:24.340 --> 00:05:27.190
And remember there is no specific order guaranteed.
78

79
00:05:27.280 --> 00:05:34.060
Instead of a dictionary unlike a list where you know we have at index 0 1 2 3 4 order is ingrained within
79

80
00:05:34.060 --> 00:05:41.350
the list in a dictionary things are more blobby and the less structured and that just floating around
80

81
00:05:41.350 --> 00:05:41.950
in there.
81

82
00:05:42.160 --> 00:05:45.310
So just be aware that there is no guarantee of order.
