1
00:00:00,230 --> 00:00:05,730
A Welcome Back in this video I'm just going to very very quickly show you a special value in Python

2
00:00:05,880 --> 00:00:07,090
called none.

3
00:00:07,290 --> 00:00:12,700
So none has to have a capital and like this if I hit Enter nothing actually happens.

4
00:00:12,840 --> 00:00:18,620
But if I tried to type it without the capital and Python freaks out gives me an error says None.

5
00:00:18,630 --> 00:00:19,520
It's not defined.

6
00:00:19,640 --> 00:00:21,830
It's looking for a variable called none.

7
00:00:21,840 --> 00:00:25,890
Just like if I try and ask for you know age and it's not defined.

8
00:00:25,920 --> 00:00:28,780
I get the same problem but none is a special case.

9
00:00:28,950 --> 00:00:31,390
Just like true or false.

10
00:00:31,410 --> 00:00:36,700
The purpose of none is just to represent the idea of nothingness.

11
00:00:36,810 --> 00:00:39,750
In other languages you might have come across something called Noel.

12
00:00:39,780 --> 00:00:44,650
If you've worked with other programming languages none is Python's version of No.

13
00:00:45,060 --> 00:00:49,110
If you haven't that's ok I'll show you an example of one you might want to use it.

14
00:00:49,110 --> 00:00:54,600
Suppose I have a very very simple app and I'm asking users for information.

15
00:00:54,810 --> 00:01:00,310
Let's say I'm modeling a person a person has a name and age and then some people have a child.

16
00:01:00,360 --> 00:01:03,330
And let's just say there's you only have one child in this world.

17
00:01:03,330 --> 00:01:05,020
And a little dystopic.

18
00:01:05,160 --> 00:01:09,360
What I can do you know I could ask her name and set it equal to Daisy or something.

19
00:01:09,360 --> 00:01:10,610
Age is 10.

20
00:01:10,770 --> 00:01:15,510
Well OK that might be a bit young for children let's say age 30 and then I might have a variable called

21
00:01:15,540 --> 00:01:16,280
child.

22
00:01:16,680 --> 00:01:22,740
But Daisy doesn't have a child so I'm not going to set it to a name of whatever Daisy's hypothetical

23
00:01:22,740 --> 00:01:23,430
child would be.

24
00:01:23,430 --> 00:01:24,740
There isn't anything.

25
00:01:25,170 --> 00:01:28,890
So instead of not setting it at all because that would be one option.

26
00:01:29,010 --> 00:01:35,550
But then if I tried to access it later by calling child I get an error instead I can set a child to

27
00:01:35,550 --> 00:01:41,510
be explicitly nutten for Daisy and that way when I retrieve child it doesn't show up here.

28
00:01:41,610 --> 00:01:45,530
If I print child whoever can see that it still is none.

29
00:01:45,630 --> 00:01:48,250
It's just the way that this REPL is set up set up.

30
00:01:48,300 --> 00:01:53,930
We don't see none printed out unless you manually print it unlike if I just call name.

31
00:01:53,940 --> 00:01:55,640
I see the string Daisy.

32
00:01:55,710 --> 00:02:03,050
So using this I could then follow the exact same pattern but instead set name to be dusty and Dusty

33
00:02:03,050 --> 00:02:07,670
does have a child and child can now be set to Pamela.

34
00:02:07,880 --> 00:02:08,610
Sure.

35
00:02:08,870 --> 00:02:11,180
So I can call child and I get a value.

36
00:02:11,330 --> 00:02:17,420
So again all known is is a way of representing nothingness instead of me trying to do something like

37
00:02:17,420 --> 00:02:21,800
child equals this an empty string or zero or false.

38
00:02:21,890 --> 00:02:23,090
If I just set it to none.

39
00:02:23,150 --> 00:02:26,670
It's a clear indicator that there isn't a value here but there could be.

40
00:02:26,750 --> 00:02:32,030
I want child to exist as a variable I want a container for child but there's nothing to put in there

41
00:02:32,030 --> 00:02:32,490
yet.

42
00:02:32,510 --> 00:02:35,380
So Python has a special value called Non to do that.

43
00:02:35,600 --> 00:02:37,490
And if I look at type of none.

44
00:02:37,550 --> 00:02:40,810
Excuse me type of child.

45
00:02:40,920 --> 00:02:47,090
It is of none type and there's only one instance of one type which is none.

46
00:02:47,210 --> 00:02:49,310
So it's a very unique situation.

47
00:02:49,550 --> 00:02:53,800
Unlike you no type of name which gives us string.

48
00:02:54,090 --> 00:02:57,030
There's a million while more than a million types of strings.

49
00:02:57,050 --> 00:03:02,510
We could have Dusty Pamela and so on but with non type there's only one.

50
00:03:02,540 --> 00:03:03,950
Which is the exact value.

51
00:03:03,980 --> 00:03:06,510
None Anyway that's none.

52
00:03:06,530 --> 00:03:08,290
I hope I didn't confuse you too much.

53
00:03:08,330 --> 00:03:12,160
I just wanted to see it now with the rest of the values that we're talking about.

54
00:03:12,230 --> 00:03:16,970
It will come up a little bit later when we are making more complex apps and we're doing things like

55
00:03:17,000 --> 00:03:22,790
asking for user input or storing data that may or may not look exactly the same or some data might be

56
00:03:22,790 --> 00:03:23,580
missing.

57
00:03:23,600 --> 00:03:25,690
We'll start off by setting things equal to none.
