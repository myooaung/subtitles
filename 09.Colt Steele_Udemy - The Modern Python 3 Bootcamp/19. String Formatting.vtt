WEBVTT
1
00:00:00.390 --> 00:00:00.840
OK.

2
00:00:00.930 --> 00:00:04.530
So next up we're talking about something called formatting strings.

3
00:00:04.530 --> 00:00:09.960
So this ties into concatenation where we have data and some strings and we want to put them together

4
00:00:10.380 --> 00:00:16.070
either to display a message or create a new variable do something with that combination.

5
00:00:16.350 --> 00:00:21.870
So there's a couple other options rather than just concatenating single strings or individual strings.

6
00:00:21.870 --> 00:00:27.660
What if we're working with numbers like we saw I wanted to be able to say your guess of and then add

7
00:00:27.660 --> 00:00:33.690
in a number an integer and then add another string at the end to say was incorrect and that caused a

8
00:00:33.690 --> 00:00:34.410
problem.

9
00:00:34.410 --> 00:00:39.580
So there are a couple of solutions to what we're trying to do which is called interpellation.

10
00:00:39.750 --> 00:00:45.070
So the new way the way that we're going to use this course is using what's called strings.

11
00:00:45.270 --> 00:00:52.280
So here's an example where we have a variable x equals 10 and we were able to create the string.

12
00:00:52.290 --> 00:00:59.040
I've told you 10 times already by taking that X equal to 10 and interpolating it inside of these curly

13
00:00:59.040 --> 00:00:59.620
braces.

14
00:00:59.640 --> 00:01:02.730
So the syntax is kind of weird but it starts off with an F.

15
00:01:02.730 --> 00:01:10.800
That's not a typo that F and then quotes and then inside of those quotes wherever we have curly braces

16
00:01:11.220 --> 00:01:16.620
kind of breaks out of the quotes that escapes them and allows us to put variable names inside.

17
00:01:16.830 --> 00:01:23.420
So really briefly let's make a variable called Let's just go back to guess guess equals eight.

18
00:01:23.430 --> 00:01:32.700
Now I can do a print your guess and I'm missing the F which is important your guess of then all we have

19
00:01:32.700 --> 00:01:39.810
to do inside these brackets is say guess your guess of guess was in correct.

20
00:01:40.500 --> 00:01:44.870
Just like that your guess of 8 was incorrect.

21
00:01:45.280 --> 00:01:48.210
We could also do things like do math

22
00:01:51.110 --> 00:01:51.920
below.

23
00:01:51.940 --> 00:01:57.520
So we're also able to do things like do some math in there if we wanted to.

24
00:01:57.520 --> 00:02:03.690
So I guess plus one if we wanted and I got rid of the space over here.

25
00:02:03.700 --> 00:02:09.220
But you can see it turn it into nine so we can do math in there it's basically a way of saying OK we're

26
00:02:09.220 --> 00:02:15.580
not unstring anymore we've escaped the string so we can do things that we could do outside of strings.

27
00:02:15.580 --> 00:02:16.670
So this is nice.

28
00:02:16.750 --> 00:02:23.690
You could do it with two things as well so maybe we have name equal to Blue Cat.

29
00:02:23.740 --> 00:02:27.440
Now I could do a print F and then in quotes.

30
00:02:27.640 --> 00:02:41.340
Say nice try comma name but your guess of guess is wrong.

31
00:02:41.460 --> 00:02:43.210
Just like that.

32
00:02:43.260 --> 00:02:44.130
Now you can see it get.

33
00:02:44.130 --> 00:02:47.880
Nice try but your guess of 8 is wrong.

34
00:02:47.880 --> 00:02:48.140
All right.

35
00:02:48.180 --> 00:02:49.550
So that's f strings.

36
00:02:49.560 --> 00:02:50.220
Very nice.

37
00:02:50.220 --> 00:02:52.020
We'll use them all the time.

38
00:02:52.020 --> 00:02:56.670
Basically what it does is it takes whatever's inside of here at the end of the day and turned it into

39
00:02:56.670 --> 00:03:01.870
a string so it converts the integer 10 to the string version of 10 and put it inside.

40
00:03:02.120 --> 00:03:02.490
OK.

41
00:03:02.520 --> 00:03:09.210
So on the side it does say this is the new way meaning there are a couple of older ways you might see

42
00:03:09.210 --> 00:03:09.640
this.

43
00:03:09.660 --> 00:03:17.280
The format method so it looks like this where basically rather than being able to use these curly brackets

44
00:03:17.280 --> 00:03:22.040
in directly adding the variable into the string will do it afterwards.

45
00:03:22.350 --> 00:03:26.420
So I've told you then we add empty curly brackets.

46
00:03:26.490 --> 00:03:32.030
Then at the end a string dot format and then in parentheses we give it what we want to be inserted.

47
00:03:32.190 --> 00:03:34.290
So I think this is really clunky.

48
00:03:34.410 --> 00:03:38.760
I mean it is clunky which is why this was added to Python.

49
00:03:38.760 --> 00:03:40.430
You can see it's a lot nicer.

50
00:03:40.770 --> 00:03:45.380
And there's also one older way that has now been deprecated but it looks like this.

51
00:03:45.450 --> 00:03:51.580
They all follow similar principles but clearly this is the simplest cleanest solution.

52
00:03:51.600 --> 00:03:52.570
So this is what we use.
