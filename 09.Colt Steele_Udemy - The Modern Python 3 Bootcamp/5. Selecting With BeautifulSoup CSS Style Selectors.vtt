WEBVTT
1
00:00:00.210 --> 00:00:02.210
So we find and find it just great.

2
00:00:02.220 --> 00:00:10.050
We also have CSSA style selectors and see US style selectors allow us to navigate to find elements based

3
00:00:10.050 --> 00:00:11.930
off of CSSA selectors.

4
00:00:12.060 --> 00:00:16.260
If you're not familiar or it's been a while since you worked or C S I have a little cheat sheet here

5
00:00:16.270 --> 00:00:20.930
for some of the selector syntax to select something based off of an ID.

6
00:00:20.940 --> 00:00:27.330
We use the Octa or the hash sign followed by the ID name to select off of the class.

7
00:00:27.360 --> 00:00:28.680
We use the dots.

8
00:00:28.830 --> 00:00:32.440
So if a class is called Bar week it's like Dot bar.

9
00:00:33.060 --> 00:00:39.700
You can also do things like select children using the greater than or select Cendant using a space.

10
00:00:39.750 --> 00:00:43.980
If none of that makes sense to you because you've never used the assessed then just erase it from your

11
00:00:43.980 --> 00:00:44.980
mind for now.

12
00:00:45.390 --> 00:00:52.110
So let's practice a couple of examples instead of find or find all we use super select and then we just

13
00:00:52.110 --> 00:00:54.650
pass in a string with our CSSA selector.

14
00:00:54.960 --> 00:01:00.810
So if I want this div with idea first I just type Octa Thorpe first.

15
00:01:01.500 --> 00:01:07.810
So it's a shorter nicer syntax compared to doing souped up find and then saying What was it.

16
00:01:07.830 --> 00:01:10.160
ID equals first.

17
00:01:10.290 --> 00:01:16.710
This is a bit nicer in my opinion only if you're comfortable with C Ss So if we print D Now we get that

18
00:01:16.740 --> 00:01:19.290
first div that has the idea first.

19
00:01:19.410 --> 00:01:25.080
But notice when we use select it always gives us a list back.

20
00:01:25.410 --> 00:01:31.060
So if we use find we know we get one item back if we use find all we get a list back.

21
00:01:31.150 --> 00:01:33.650
And if we use Select we get a list back.

22
00:01:33.660 --> 00:01:41.310
So in the example of an ID we want the data from it or we want the actual object we have to access 0

23
00:01:41.570 --> 00:01:43.210
0 with element.

24
00:01:43.650 --> 00:01:45.450
And now it's no longer in the list.

25
00:01:45.810 --> 00:01:48.750
And remember this is the representation that's printed out.

26
00:01:48.750 --> 00:01:51.000
It is an object behind the scenes.

27
00:01:51.000 --> 00:01:54.540
So to select a class or classes we have a special.

28
00:01:54.600 --> 00:02:01.440
So we use dot and that will give us a list because raising select Here is our list of two allies that

29
00:02:01.440 --> 00:02:03.880
have the class set to special.

30
00:02:03.990 --> 00:02:10.560
We can also select just based off of a tag name if you wanted to like div that's valid SEUS us here

31
00:02:10.560 --> 00:02:12.440
we get a list with all the divs.

32
00:02:12.540 --> 00:02:18.930
Two of them and if we wanted to select based off of an attribute we use the square brackets and the

33
00:02:18.930 --> 00:02:23.140
attribute I want is data example which I have on both of these.

34
00:02:23.340 --> 00:02:27.170
And if I don't want to check that it's equal to I just want to select if they have data.

35
00:02:27.170 --> 00:02:29.450
Example I can do that.

36
00:02:29.580 --> 00:02:32.270
And here we go a list with two items.

37
00:02:32.700 --> 00:02:33.250
OK.

38
00:02:33.420 --> 00:02:35.720
So that's kind of the basics of selecting.

39
00:02:35.730 --> 00:02:43.130
You can either use find and find all or you can use select just remember select always returns a list.

40
00:02:43.170 --> 00:02:46.890
So here's a little comparison to select based off of an ID.

41
00:02:46.980 --> 00:02:53.760
You can do souped up find ID equals foo Supercuts select hash sign Octa Thorpe foo and then get the

42
00:02:53.760 --> 00:02:55.500
zero with item.

43
00:02:55.560 --> 00:02:57.660
This doesn't return the list it's just one object.

44
00:02:57.660 --> 00:03:03.230
This returns a list with one object then to select base off of a class.

45
00:03:03.360 --> 00:03:07.950
The nicer syntax I think is to do this nice dot bar.

46
00:03:07.950 --> 00:03:13.020
You don't have to worry about you know the keyword conflict with the name class and having to use the

47
00:03:13.170 --> 00:03:16.040
trailing underscore to kind of gross in my opinion.

48
00:03:16.110 --> 00:03:23.370
So I prefer this but both will work and both give me a list because freezing find all must down here.

49
00:03:23.370 --> 00:03:27.000
We have examples where we're actually using an attribute called Data Baz.

50
00:03:27.030 --> 00:03:31.770
I just showed an example of this using FIND ALL vs using select.

51
00:03:32.090 --> 00:03:35.940
So using Select often results in cleaner shorter code.

52
00:03:36.120 --> 00:03:39.780
But in these cases that I've shown you don't have to use select.

53
00:03:39.810 --> 00:03:42.990
There's a perfectly good replacement using Find or find.

54
00:03:43.050 --> 00:03:45.300
If you're not comfortable with VSS.

55
00:03:45.360 --> 00:03:47.980
All right so all we did in this video was see how to load.

56
00:03:48.000 --> 00:03:53.760
We first installed beautiful soup then we imported it and then we instantiated a new instance of beautiful

57
00:03:53.760 --> 00:04:00.510
soup with our Tim L string and then we just were able to grab elements out of it and select but we still

58
00:04:00.510 --> 00:04:02.790
haven't been able to actually read the data out.

59
00:04:02.850 --> 00:04:04.560
So that's what we'll show in the next video.
