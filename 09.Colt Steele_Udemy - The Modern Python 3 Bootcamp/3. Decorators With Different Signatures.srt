1
00:00:00,210 --> 00:00:07,170
Okay in the last video are decorated functions meeting greets or rage not the decorator but the decorated

2
00:00:07,170 --> 00:00:09,460
function didn't accept any arguments.

3
00:00:09,480 --> 00:00:12,390
We just always had Greek and that's fine.

4
00:00:12,420 --> 00:00:16,410
But most of the time our decorated functions will accept arguments.

5
00:00:16,560 --> 00:00:18,990
So let's talk about how to make that work.

6
00:00:18,990 --> 00:00:25,270
Here's an example where I have a function called shout and it just returns a wrapper function.

7
00:00:25,530 --> 00:00:30,750
And inside the wrapper all that we're doing is calling upper on the result of whatever function was

8
00:00:30,750 --> 00:00:31,830
passed in.

9
00:00:32,430 --> 00:00:36,140
So we should be able to do something like Hi I'm I don't know Todd.

10
00:00:36,260 --> 00:00:38,950
And it should return Hi I'm taught in all caps.

11
00:00:39,180 --> 00:00:41,260
When we add the decorator What do you know.

12
00:00:41,280 --> 00:00:42,340
I have it in a file.

13
00:00:42,390 --> 00:00:43,590
All ready to go.

14
00:00:43,590 --> 00:00:48,620
We have the shower decorator we have greet and order are both being decorated by shout.

15
00:00:48,630 --> 00:00:52,860
So if I call greet I don't know when it's printed.

16
00:00:52,860 --> 00:00:55,860
By the way print greet sure.

17
00:00:55,890 --> 00:01:01,490
Todd all lower case Picture I'm not messing up my indentation let's execute this.

18
00:01:01,650 --> 00:01:02,590
We execute it.

19
00:01:02,610 --> 00:01:05,920
We get Hi I'm Todd yelling or shouted.

20
00:01:05,970 --> 00:01:12,810
All right so that works fine because inside the wrapper function and shout all that we have is recalling

21
00:01:12,810 --> 00:01:16,040
the function of passing in a single name.

22
00:01:16,470 --> 00:01:23,280
But then if we have something like order down here we run into a problem because Order has two arguments

23
00:01:23,490 --> 00:01:25,430
main and side.

24
00:01:25,440 --> 00:01:29,170
So the idea is that we could do something like print order.

25
00:01:29,580 --> 00:01:30,500
I don't know.

26
00:01:30,580 --> 00:01:34,050
Burger and fries.

27
00:01:35,100 --> 00:01:37,040
And it should shout Hi.

28
00:01:37,050 --> 00:01:39,870
I'd like the burger with a side of fries please.

29
00:01:39,870 --> 00:01:42,920
But shouting It's a very polite shout.

30
00:01:43,110 --> 00:01:44,250
And we want that to work.

31
00:01:44,250 --> 00:01:52,510
But right now it's not going to because wrapper takes one position of argument but two are given.

32
00:01:53,220 --> 00:01:54,960
So these functions have different signatures.

33
00:01:54,960 --> 00:01:57,170
This one on an argument.

34
00:01:57,180 --> 00:02:00,030
This one wants to say how do we handle that.

35
00:02:00,210 --> 00:02:01,980
Well it's not too bad.

36
00:02:02,010 --> 00:02:03,790
We've already seen the solution.

37
00:02:03,810 --> 00:02:06,810
We just use args and quarks cards.

38
00:02:06,870 --> 00:02:09,440
KW args whatever you want to call it.

39
00:02:09,480 --> 00:02:10,860
Next slide please.

40
00:02:11,220 --> 00:02:12,030
Dumped it.

41
00:02:12,030 --> 00:02:12,970
There we go.

42
00:02:12,990 --> 00:02:14,660
This is the standard decorator pattern.

43
00:02:14,880 --> 00:02:20,520
Most frequently the wrapper functions that are decorator returned will accept an unlimited number of

44
00:02:20,520 --> 00:02:27,540
arguments and keyword arguments so we can just use args and quires to take care of that gives our wrapper

45
00:02:27,540 --> 00:02:32,190
functions the most flexibility so to update our previous example.

46
00:02:32,190 --> 00:02:36,910
I'll just comment that went out so I can leave the broken version and then down here.

47
00:02:37,200 --> 00:02:44,570
All we wanna do is update this to be start args comma quarks as two stars.

48
00:02:44,580 --> 00:02:50,170
And then we just pass both of those in.

49
00:02:51,110 --> 00:02:57,490
OK now if we run this no problems there we go.

50
00:02:57,800 --> 00:03:04,590
Yo it's working just great or shouting she is me and we can easily define function now like well that

51
00:03:04,620 --> 00:03:06,330
only returns.

52
00:03:06,330 --> 00:03:10,440
I don't know Helliwell and we can make that shout.

53
00:03:10,710 --> 00:03:12,130
There's no argument.

54
00:03:12,270 --> 00:03:14,400
It just returns ellabella every time.

55
00:03:14,490 --> 00:03:20,130
And if I call print well what do we get elsewhere in all caps.

56
00:03:20,160 --> 00:03:25,230
So we have flexibility now with our decorator that we set up and the wrapper can pass in any number

57
00:03:25,230 --> 00:03:28,370
of arguments or keyword args and it should work just fine.

58
00:03:28,680 --> 00:03:37,980
So just about verify that we could do make equal surprise side equals burger and switch it all up and

59
00:03:38,070 --> 00:03:38,720
it still works.

60
00:03:38,820 --> 00:03:42,350
Hi I'd like the fries with a side of burger please.

61
00:03:42,360 --> 00:03:43,310
Story Of My Life.

62
00:03:43,350 --> 00:03:45,120
Fries are always better than the burger.

63
00:03:45,120 --> 00:03:47,910
All my friends make fun of me for eating the fries first.

64
00:03:47,960 --> 00:03:50,640
Anyway that's pretty much it for this video.

65
00:03:50,640 --> 00:03:53,010
Just wanted to show the more standard pattern.

66
00:03:53,010 --> 00:03:55,630
By the way this does not have to be called wrapper.

67
00:03:55,680 --> 00:03:56,960
We're just returning it.

68
00:03:56,970 --> 00:04:01,310
It can be called anything but the standard is wrapper because that's what it's doing.

69
00:04:01,380 --> 00:04:06,150
It's wrapping around a function manipulating altering enhancing the behavior in some way.

70
00:04:06,390 --> 00:04:08,750
If you're still wondering why should I care about this.

71
00:04:08,760 --> 00:04:09,580
Hang in there.

72
00:04:09,690 --> 00:04:16,260
I usually try and explain why something matters upfront but in this case I wanted to wait until we get

73
00:04:16,260 --> 00:04:17,440
the syntax out of the way.

74
00:04:17,580 --> 00:04:21,410
So I will show you some useful real world examples in a little bit.

75
00:04:21,620 --> 00:04:27,610
OK so that's decorator's with multiple arguments or different signatures for the decorated functions.
