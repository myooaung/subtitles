1
00:00:00,600 --> 00:00:01,040
All right.

2
00:00:01,050 --> 00:00:01,710
Welcome back.

3
00:00:01,770 --> 00:00:05,790
So I have another example with inheritance this one a bit more complicated.

4
00:00:06,030 --> 00:00:10,710
So we sell the basics these are how to use super with pet or animal and cat.

5
00:00:10,860 --> 00:00:13,700
Here I have the user class from the last section.

6
00:00:13,710 --> 00:00:15,150
It's a bit more complex.

7
00:00:15,210 --> 00:00:19,550
If you didn't watch any of that section you could just play around with this code download it.

8
00:00:19,710 --> 00:00:21,560
But essentially there's the user.

9
00:00:21,600 --> 00:00:24,760
Each user has a first last name and then age.

10
00:00:24,870 --> 00:00:30,090
We have methods like log out full name which you turn to the full name initials.

11
00:00:30,270 --> 00:00:32,900
A couple of other things we won't use in this video.

12
00:00:33,000 --> 00:00:35,700
There's a class attribute called active users.

13
00:00:35,700 --> 00:00:36,670
It starts at zero.

14
00:00:36,780 --> 00:00:42,690
And every time a new user is created we add one to it and every time log out the instance method is

15
00:00:42,690 --> 00:00:44,420
called on any instance of user.

16
00:00:44,520 --> 00:00:47,800
We remove one or decrement active users once.

17
00:00:48,030 --> 00:00:48,410
OK.

18
00:00:48,480 --> 00:00:53,280
So the goal here and I alluded to this earlier on in the section when I talked about inheritance is

19
00:00:53,280 --> 00:01:01,320
to model a typical permissions set up on a social network or a blog site something like Reddit where

20
00:01:01,410 --> 00:01:04,920
we have a user that most of us are users on the site.

21
00:01:04,920 --> 00:01:10,800
Regular old users we can create comments and a posts but we can't go around just deleting other people's

22
00:01:10,800 --> 00:01:13,290
stuff or editing other people's stuff.

23
00:01:13,320 --> 00:01:15,020
And at our own will.

24
00:01:15,330 --> 00:01:21,600
But then there are moderators and moderators are in charge of a particular community sobre and we're

25
00:01:21,600 --> 00:01:27,090
using the Reddit example like the soccer sub it that's when I go on a lot and the moderators are very

26
00:01:27,090 --> 00:01:33,300
active always having to remove like inappropriate racist comments or things that have nothing to do

27
00:01:33,300 --> 00:01:34,440
with soccer.

28
00:01:34,470 --> 00:01:40,460
And the reason that this is a classic case for inheritance is that moderators are simply users that

29
00:01:40,470 --> 00:01:46,440
they have some additional functionality in them some special things they can do like delete a post or

30
00:01:46,470 --> 00:01:47,060
editing.

31
00:01:47,130 --> 00:01:48,130
I don't know if they can edit.

32
00:01:48,270 --> 00:01:53,730
I think they can just delete a post or hide them into the comments and that sort of thing.

33
00:01:53,850 --> 00:01:56,660
So we don't want to define that functionality on user.

34
00:01:56,820 --> 00:02:01,960
We only wanted one moderator but everything else should be you know fair game.

35
00:02:02,010 --> 00:02:07,950
We want to first name last name age and imagine you know email and password and all that stuff that

36
00:02:07,950 --> 00:02:11,820
a typical user on Reddit has a moderator also has.

37
00:02:11,820 --> 00:02:22,740
So let's start by defining moderator and it inherits from user and then we'll define Arnette and we're

38
00:02:22,740 --> 00:02:25,670
just going to go with the exact same things first class and age

39
00:02:28,490 --> 00:02:32,390
and how about let's go with community.

40
00:02:32,420 --> 00:02:40,760
So this will be like there a section that the moderator enforces like soccer or San Francisco City Segretti

41
00:02:41,150 --> 00:02:41,940
whatever it is.

42
00:02:42,220 --> 00:02:42,630
OK.

43
00:02:42,710 --> 00:02:51,530
And I need a tee over here and colon and then we'll just call super didn't it.

44
00:02:51,710 --> 00:02:53,330
Why am I missing those T's.

45
00:02:53,480 --> 00:03:01,890
And we want to pass in first last and age and then we'll set self-caused community equals community.

46
00:03:01,910 --> 00:03:05,680
So in this case superbe first user calling it appear.

47
00:03:05,990 --> 00:03:09,230
And therefore it should automatically add 1 to active users.

48
00:03:09,230 --> 00:03:14,430
We don't have to do it manually because we're making use of this in net already.

49
00:03:14,960 --> 00:03:22,250
So it's adding one to the active users class attribute because active users and this is how it's structured

50
00:03:22,250 --> 00:03:22,540
right now.

51
00:03:22,550 --> 00:03:28,180
But it makes sense that we want all active users on our site not just the ones who aren't moderators

52
00:03:28,190 --> 00:03:30,850
because a moderator is still a user.

53
00:03:31,000 --> 00:03:36,340
It now is to find a method and let's call it remove post or something.

54
00:03:36,620 --> 00:03:44,720
And let's just have it return a string that says something like Tim somebody removed a post from community

55
00:03:45,560 --> 00:03:47,390
soccer or something.

56
00:03:47,390 --> 00:03:52,940
So we don't have an entire Web site set up or application with a database and everything we can actually

57
00:03:53,210 --> 00:03:54,920
remove anything right now.

58
00:03:54,920 --> 00:04:00,360
But let's just have it say let's use full name just defined up here in the user.

59
00:04:00,560 --> 00:04:06,520
So let's say self dot full name removed a post from.

60
00:04:06,830 --> 00:04:10,830
And then let's do self dot community.

61
00:04:12,960 --> 00:04:14,120
Community.

62
00:04:14,200 --> 00:04:18,450
So Tim blah blah blah removed a post from soccer community.

63
00:04:18,570 --> 00:04:21,070
Yes the soccer community.

64
00:04:21,480 --> 00:04:24,290
OK now let's make a new moderator.

65
00:04:24,420 --> 00:04:29,400
So we'll go with Jasmine equals moderator.

66
00:04:29,640 --> 00:04:31,470
First name is Jasmine.

67
00:04:31,680 --> 00:04:35,020
Last name can be O Connor.

68
00:04:35,580 --> 00:04:37,330
And what else is there.

69
00:04:37,350 --> 00:04:38,030
Age.

70
00:04:38,220 --> 00:04:40,820
She'll be 60 one.

71
00:04:41,160 --> 00:04:44,340
And her community is the piano community.

72
00:04:44,710 --> 00:04:45,310
OK.

73
00:04:45,540 --> 00:04:53,190
So if I do something like print Jasmine dot full name to start and then let's also make sure her community

74
00:04:53,190 --> 00:04:53,780
is set up.

75
00:04:53,880 --> 00:04:56,110
Print Jasmine dot community.

76
00:04:57,270 --> 00:04:58,620
Let's test it out.

77
00:04:58,750 --> 00:05:01,480
What do we get Jasmine O'Connor in piano.

78
00:05:01,770 --> 00:05:02,150
OK.

79
00:05:02,190 --> 00:05:04,530
So these classes are set up correctly.

80
00:05:04,530 --> 00:05:06,230
That's the first thing I wanted to do.

81
00:05:06,250 --> 00:05:10,890
Just another example of how we can save a good amount of typing right.

82
00:05:11,010 --> 00:05:16,040
And we could redefine all of this if we wanted all this functionality and we weren't using inheritance.

83
00:05:16,110 --> 00:05:17,270
We could put it all in here.

84
00:05:17,370 --> 00:05:23,190
But with inheritance automatically every moderator gets all of these built in methods and then by adding

85
00:05:23,190 --> 00:05:26,380
supercontinent we get all this code as well.

86
00:05:26,640 --> 00:05:28,430
So there are a couple of things I'll point out.

87
00:05:28,470 --> 00:05:37,830
The first is if we make a new user just call it the one with the user and this user will be Tom Garcia

88
00:05:38,790 --> 00:05:41,050
who is 35.

89
00:05:41,700 --> 00:05:51,590
And let's start by printing user dot and then what was our method display active users like this end

90
00:05:51,670 --> 00:05:55,020
does that one print itself or does it just return not just returns.

91
00:05:55,270 --> 00:05:55,650
OK.

92
00:05:55,720 --> 00:06:02,120
So let's do this and then do it twice so we'll make a new user.

93
00:06:03,010 --> 00:06:04,250
We'll do it again.

94
00:06:04,990 --> 00:06:07,750
Well make a moderators of three times actually.

95
00:06:07,750 --> 00:06:13,780
So this is a class attribute which is a class method called display actually for users that is referencing

96
00:06:13,990 --> 00:06:18,080
class attribute active users but it's on the user class.

97
00:06:18,130 --> 00:06:22,930
So does creating a moderator impact active users on the user class.

98
00:06:22,940 --> 00:06:29,180
But before we can do that I need to add print here to actually execute that method.

99
00:06:29,180 --> 00:06:30,770
And now we get there currently zero.

100
00:06:30,820 --> 00:06:33,360
And then 1 and then two active users.

101
00:06:33,370 --> 00:06:34,410
So the answer is yes.

102
00:06:34,520 --> 00:06:41,470
This class rable active users is being incremented because we have it being incremented inside of the

103
00:06:41,470 --> 00:06:45,030
user and which we are calling here.

104
00:06:45,100 --> 00:06:51,250
However if we weren't doing that and we manually defined self-doubt first equals first and so on and

105
00:06:51,250 --> 00:06:57,340
duplicated everything then user dot active users would not be incremented because we wouldn't be calling

106
00:06:57,590 --> 00:06:58,210
it.

107
00:06:58,360 --> 00:07:04,630
And if we did want to just keep track of how many moderators there were currently online we could do

108
00:07:05,020 --> 00:07:07,520
total mud's equals zero.

109
00:07:07,780 --> 00:07:10,510
And then just increment could do.

110
00:07:10,510 --> 00:07:14,010
Moderator datt total Mad's plus equals 1.

111
00:07:14,020 --> 00:07:20,510
Every time a moderator is created and we could even steal this exact class method here

112
00:07:24,130 --> 00:07:26,760
and just change it a bit and need this amphoras.

113
00:07:26,860 --> 00:07:32,220
What is this code at Sun and we'll call this display active minds.

114
00:07:32,290 --> 00:07:39,230
There are currently class dot total mud's active models.

115
00:07:39,600 --> 00:07:39,840
OK.

116
00:07:39,850 --> 00:07:44,410
So I just copied and pasted it but I changed this because now it's from ODs and it's referencing the

117
00:07:44,410 --> 00:07:48,280
moderator attribute called Total us.

118
00:07:48,430 --> 00:07:48,720
OK.

119
00:07:48,760 --> 00:07:50,160
So there's a lot to take in there.

120
00:07:50,320 --> 00:07:52,750
Let's just make a couple of users.

121
00:07:53,020 --> 00:07:59,760
So user one user to user or three it's OK that they're all the same and we can print active users.

122
00:08:00,050 --> 00:08:08,320
So let's also make two moderators Gazmin one in jazzmen two and then all will do is print active users

123
00:08:08,920 --> 00:08:11,630
and then print active.

124
00:08:13,410 --> 00:08:17,550
And it's important to note I can't call this with the user dot display active mods.

125
00:08:17,690 --> 00:08:24,700
I do need to call maade that display active mods or moderator that display deflective months.

126
00:08:24,870 --> 00:08:30,570
Now we get there are currently five active users total but only two of them are active moderators.

127
00:08:30,690 --> 00:08:36,160
So the point of all that was just to show you that you know we can separate out functionality where

128
00:08:36,160 --> 00:08:40,560
if we wanted to have a separate class variable for something like that we could put it in the moderator

129
00:08:40,560 --> 00:08:46,890
class and we could have two class variables one keeping track of users on keeping track of moderators

130
00:08:47,420 --> 00:08:53,420
and every time a moderators created both of them are incremented every time a user is created.

131
00:08:53,520 --> 00:08:55,420
Only this one is incremented.

132
00:08:55,800 --> 00:08:56,330
OK.

133
00:08:56,520 --> 00:08:59,600
So that wraps up this slightly longer example.

134
00:08:59,820 --> 00:09:04,330
Hopefully it helps make clear how using inheritance can really help you out.

135
00:09:04,560 --> 00:09:06,960
So you don't have to use it really ever.

136
00:09:07,020 --> 00:09:11,030
You also don't ever have to use o p but it just helps you structure things.

137
00:09:11,040 --> 00:09:14,880
And in this case using inheritance helps us reduce duplication.

138
00:09:14,880 --> 00:09:20,820
Next up we're going to learn about the joys of multiple inheritance which is pretty much what it sounds

139
00:09:20,820 --> 00:09:21,240
like.
