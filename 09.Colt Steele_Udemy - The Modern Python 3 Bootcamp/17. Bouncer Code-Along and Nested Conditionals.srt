1
00:00:00,240 --> 00:00:05,820
Hey I'm back and it's time for a quick little code along where usually what I do with these catalogs

2
00:00:05,850 --> 00:00:11,130
is try and just synthesize the things that we've learned individually on the slides and build something

3
00:00:11,130 --> 00:00:13,860
slightly more substantial putting the pieces together.

4
00:00:13,890 --> 00:00:17,810
But I'm also going to introduce something we haven't seen which are nested conditionals.

5
00:00:17,850 --> 00:00:21,220
So in a two second preview it's just a if instead of an F..

6
00:00:21,480 --> 00:00:21,940
OK.

7
00:00:22,080 --> 00:00:29,370
So what we're going to do is build a very silly bouncer program that just ask for users age and in the

8
00:00:29,370 --> 00:00:37,200
US at least you can often get into concerts if you are older or if you're over 18 but you can't drink

9
00:00:37,260 --> 00:00:38,830
until you're over 21.

10
00:00:39,090 --> 00:00:44,100
So sometimes you have to wear like a special wristband if you're 18 or 19 or 20.

11
00:00:44,250 --> 00:00:46,800
And then if you're below 18 you can't get in at all.

12
00:00:46,800 --> 00:00:52,390
So build a super simple little program that spits out text depending on an input age.

13
00:00:52,470 --> 00:00:57,180
But then we're also going to handle errors and very rough handling of errors.

14
00:00:57,240 --> 00:01:01,740
For example if a user doesn't type in an age at all it will break our code.

15
00:01:01,770 --> 00:01:05,830
But we're going to add in a little conditional check to prevent that.

16
00:01:05,870 --> 00:01:06,290
OK.

17
00:01:06,360 --> 00:01:08,670
So I have a file I called it bouncer.

18
00:01:08,690 --> 00:01:09,690
P Why.

19
00:01:09,690 --> 00:01:13,980
Call it whatever you want and I'll start by just laying out the rules or the pseudo code.

20
00:01:13,980 --> 00:01:20,310
So we asked for age and then our ages are between 18 and 21.

21
00:01:20,460 --> 00:01:29,220
You wear wristbands wristband if you're 21 plus you can drink normal entry.

22
00:01:29,310 --> 00:01:32,020
And finally Otherwise you're too young.

23
00:01:34,580 --> 00:01:35,170
OK.

24
00:01:35,750 --> 00:01:37,680
So let's start by asking for age.

25
00:01:37,730 --> 00:01:38,750
So we'll just right.

26
00:01:38,810 --> 00:01:41,560
Age equals input.

27
00:01:41,630 --> 00:01:43,190
How old are you.

28
00:01:43,940 --> 00:01:45,650
And all out of space here.

29
00:01:45,830 --> 00:01:51,300
Just so we don't end up with that weird kind of text running into each other on the command line.

30
00:01:51,560 --> 00:01:58,760
And then let's just start right off with our if so will change us around as we go through this but we'll

31
00:01:58,760 --> 00:02:05,090
start it just an if and let's just check for users between the ages between 18 and 21.

32
00:02:05,090 --> 00:02:09,860
So we're going to do if age is greater than or equal to 18.

33
00:02:10,310 --> 00:02:14,050
And age is less than 21.

34
00:02:14,060 --> 00:02:19,920
We don't want less than or equal to 21 because if you are 21 in the US you can drink.

35
00:02:19,940 --> 00:02:23,440
So if that's the case we'll print out.

36
00:02:23,540 --> 00:02:29,350
You can enter but need a wristband.

37
00:02:29,420 --> 00:02:30,610
Now here's the thing.

38
00:02:30,710 --> 00:02:32,990
This isn't going to work right off the bat.

39
00:02:33,080 --> 00:02:34,450
Can you tell why.

40
00:02:34,670 --> 00:02:37,250
And the answer is that it has to do with data types.

41
00:02:37,250 --> 00:02:39,670
Remember that this comes in as a string.

42
00:02:39,740 --> 00:02:42,620
The value returned from input in age is a string.

43
00:02:42,620 --> 00:02:48,020
And here we're comparing strings to numbers and that won't work if you try it here.

44
00:02:48,320 --> 00:02:52,590
Let's say somebody entered that they are 19.

45
00:02:52,640 --> 00:02:55,750
So as a string is 19 greater than or equal to 18.

46
00:02:55,800 --> 00:03:01,130
The answer is no because type error greater than or equal to not supported between string.

47
00:03:01,160 --> 00:03:03,610
And so that's our problem.

48
00:03:03,620 --> 00:03:05,080
So we need to solve that.

49
00:03:05,150 --> 00:03:09,780
And the simplest way of fixing that that we've seen is to cast things as it is.

50
00:03:09,890 --> 00:03:14,880
So it's fine for us to assume that ages are going to be whole numbers so we could do it.

51
00:03:14,930 --> 00:03:19,280
Age and age just like this.

52
00:03:19,580 --> 00:03:25,360
And if we run this code now it is Python 3 bouncer.

53
00:03:25,460 --> 00:03:26,330
How old are you.

54
00:03:26,510 --> 00:03:27,270
Nineteen.

55
00:03:27,290 --> 00:03:29,160
You can enter but need a wristband.

56
00:03:29,270 --> 00:03:32,550
And just to make sure I entered too.

57
00:03:32,660 --> 00:03:33,720
We get nothing.

58
00:03:34,090 --> 00:03:34,700
OK.

59
00:03:35,000 --> 00:03:36,550
So that's good.

60
00:03:36,560 --> 00:03:40,730
Next up attended the case where your older than 21.

61
00:03:41,120 --> 00:03:49,510
So that's an L if int age is greater than or equal to 21.

62
00:03:49,910 --> 00:03:56,620
If that's the case we will Prince you are good to enter and can drink.

63
00:03:57,150 --> 00:03:59,920
OK the last thing we need is our colon here at the end.

64
00:04:00,110 --> 00:04:04,480
And if we try running this now Python 3 pouncer.

65
00:04:04,580 --> 00:04:05,470
How old are you.

66
00:04:05,470 --> 00:04:07,920
If you're 18 you can interpret need to respond.

67
00:04:08,030 --> 00:04:11,760
If we are 25 you're good to enter and you can drink.

68
00:04:11,870 --> 00:04:12,760
Perfect.

69
00:04:13,130 --> 00:04:18,930
So let's add in or else which will just be print.

70
00:04:19,190 --> 00:04:25,800
You can't come in little on and let's add a sad face.

71
00:04:25,820 --> 00:04:26,920
So let's test it.

72
00:04:27,020 --> 00:04:28,960
And this time will enter 9.

73
00:04:29,000 --> 00:04:29,930
Can't come in.

74
00:04:29,930 --> 00:04:31,350
But everything else still works right.

75
00:04:31,370 --> 00:04:32,380
We have 18.

76
00:04:32,390 --> 00:04:34,160
You can enter it but you need to expand.

77
00:04:34,220 --> 00:04:37,340
And if we are 67 you're good to enter and can drink.

78
00:04:37,340 --> 00:04:38,870
So this seems good.

79
00:04:38,870 --> 00:04:40,630
There are a couple problems.

80
00:04:40,760 --> 00:04:49,740
Well there's one main problem which is if an end user just hit enter empty string doesn't work when

81
00:04:49,740 --> 00:04:56,790
you're running it on age and you have an empty string and just kind of freak out and give us this invalid

82
00:04:56,790 --> 00:04:58,200
literal for into base 10.

83
00:04:58,220 --> 00:05:00,500
Basically doesn't know how to turn that into an integer.

84
00:05:00,930 --> 00:05:09,300
So what we're going to do is add a simple IF statement to check if it's an empty string or not.

85
00:05:09,300 --> 00:05:18,330
And so what we want to do what we could do is say if age is equal to or is not equal to empty string

86
00:05:19,170 --> 00:05:25,650
we could do this and then indent everything inside of that if the other option then we can actually

87
00:05:25,650 --> 00:05:27,030
start with that.

88
00:05:27,090 --> 00:05:29,650
So let me just rearrange my comments a bit.

89
00:05:34,560 --> 00:05:38,970
Remember indentation Well it doesn't matter for the comments except to make it clear what's happening.

90
00:05:38,970 --> 00:05:44,640
But it does matter when we're dealing nested if statements so we have if age is not equal to the empty

91
00:05:44,640 --> 00:05:45,400
string.

92
00:05:45,420 --> 00:05:51,570
All of this is going to be indented because we only want to check the ages and then turn it into an

93
00:05:51,570 --> 00:05:52,140
integer.

94
00:05:52,230 --> 00:06:01,360
If it's not an empty string and if it is so wide add an ELSE We'll just print please enter an age.

95
00:06:02,100 --> 00:06:04,390
OK so let's see what happens now.

96
00:06:05,170 --> 00:06:07,560
Oh OK so we're missing our colon.

97
00:06:07,560 --> 00:06:08,530
There we go.

98
00:06:08,730 --> 00:06:09,820
Try that again.

99
00:06:10,260 --> 00:06:11,000
How old are you.

100
00:06:11,020 --> 00:06:13,980
If I hit enter it says Please enter an age.

101
00:06:14,130 --> 00:06:18,180
But if I enter 12 says you can't come in little one.

102
00:06:18,180 --> 00:06:22,030
Now this check I should be clear is only working for empty strings.

103
00:06:22,050 --> 00:06:26,930
We still have the problem of someone entering a or this as their age.

104
00:06:26,940 --> 00:06:28,830
We're not going to solve that in this video.

105
00:06:28,830 --> 00:06:35,090
There's not a super easy way we will learn a way of handling errors and trying Well we'll get there.

106
00:06:35,220 --> 00:06:41,070
But for now we're just focusing on the case of an empty string for use or just hit enter so we could

107
00:06:41,070 --> 00:06:42,900
do it this way.

108
00:06:42,900 --> 00:06:48,820
The other option is to do it with a kind of shorter shortcut.

109
00:06:48,840 --> 00:06:52,250
Taking advantage of the fact that an empty string is falsie.

110
00:06:52,500 --> 00:06:58,920
So all we can do is say if age do this otherwise.

111
00:06:58,950 --> 00:07:00,480
Print please enter page.

112
00:07:00,540 --> 00:07:08,570
So remember if there's anything in age a 1 to whatever the number or text in there it's truthy.

113
00:07:08,610 --> 00:07:12,660
But if it's empty it's falsie meaning this will be triggered.

114
00:07:12,660 --> 00:07:14,550
So this is an easier way of doing it.

115
00:07:14,670 --> 00:07:18,600
If there's an age do this math.

116
00:07:18,600 --> 00:07:20,250
The other change I would support.

117
00:07:20,250 --> 00:07:22,110
First let's just make sure it works.

118
00:07:22,530 --> 00:07:24,930
Oh my gosh I keep forgetting my colons.

119
00:07:24,990 --> 00:07:26,900
Try that again.

120
00:07:26,970 --> 00:07:27,730
We enter age.

121
00:07:27,750 --> 00:07:28,680
It works.

122
00:07:28,680 --> 00:07:31,890
If I just hit enter though it says please and turn age.

123
00:07:31,930 --> 00:07:35,490
Now what we could do is refactor this into.

124
00:07:35,490 --> 00:07:43,350
Age and age were casting age to an end multiple times and the fact is we're not using age anywhere except

125
00:07:43,380 --> 00:07:46,160
as an integer so it would be better just to do.

126
00:07:46,170 --> 00:07:57,430
Age equals int age and then get rid of all of these instances where casting it just like that.

127
00:07:57,470 --> 00:08:02,400
So this is more of just a stylistic thing there's no reason to continually turn it into an integer.

128
00:08:02,480 --> 00:08:09,110
Just do it once inside this statement because if we did this up top did it here we would encounter that

129
00:08:09,110 --> 00:08:11,940
problem if they didn't end turn age with an empty string.

130
00:08:12,020 --> 00:08:15,840
It would break our program so we're going to leave it like this.

131
00:08:16,500 --> 00:08:19,260
OK and let's make sure this works now

132
00:08:22,870 --> 00:08:29,490
we are 19 you can enter we're 21 you can enter and drink and we are eight.

133
00:08:29,530 --> 00:08:30,670
You can't come in.

134
00:08:31,030 --> 00:08:34,780
And if we hit an empty string please and turn age OK.

135
00:08:35,050 --> 00:08:37,340
So this this all works good.

136
00:08:37,360 --> 00:08:39,310
I just want to hit home a couple of things.

137
00:08:39,310 --> 00:08:44,430
The indentation really matters like it has with our single statements.

138
00:08:44,470 --> 00:08:51,070
It also matters if we want these to be nested inside of this if so for this code to run this has to

139
00:08:51,070 --> 00:08:51,630
be true.

140
00:08:51,720 --> 00:08:56,600
But for this code to run this has to be true and this has to be true.

141
00:08:57,250 --> 00:08:58,770
So that's that's important.

142
00:08:58,780 --> 00:09:02,280
And we could keep nesting these further and further and further.

143
00:09:02,320 --> 00:09:07,230
The other thing I could point out you don't have to do nested statements like this.

144
00:09:07,270 --> 00:09:14,940
We could rewrite the whole thing by saying if age and a and I'll just copy this right here.

145
00:09:17,940 --> 00:09:25,050
So we could rewrite this first bit at least by just putting it all in one giant if statement if age

146
00:09:25,110 --> 00:09:29,600
exists and age is greater than equal to 18 and ages less and 21.

147
00:09:29,610 --> 00:09:30,920
Then we'll print.

148
00:09:30,960 --> 00:09:37,220
You can enter but need a wristband and then we can also say elif.

149
00:09:37,350 --> 00:09:46,030
Age and age is greater than or equal to 21 and we don't need the parentheses on this one.

150
00:09:46,290 --> 00:09:48,920
Then we could print.

151
00:09:49,040 --> 00:09:50,880
You are good to enter and can drink.

152
00:09:50,880 --> 00:09:55,320
Hopefully you can see what I'm doing here where basically we just put this part in front of each of

153
00:09:55,320 --> 00:09:57,610
these and it's the same idea.

154
00:09:57,750 --> 00:10:02,940
But this is much nicer and shorter and cleaner and you can see how things are related.

155
00:10:03,120 --> 00:10:07,860
So that because we're using it and remember if this was false the whole thing is false.

156
00:10:07,860 --> 00:10:10,460
Well if this is false all of this is false.

157
00:10:10,470 --> 00:10:11,990
Never never event runs.

158
00:10:12,080 --> 00:10:12,960
All right.

159
00:10:12,960 --> 00:10:19,680
The only other change I would suggest is we're not really doing this the most efficient way we could

160
00:10:19,680 --> 00:10:23,600
do a check where we don't actually need an end at all.

161
00:10:23,670 --> 00:10:25,190
We could start by checking.

162
00:10:25,290 --> 00:10:28,620
So I will just duplicate this down here.

163
00:10:28,650 --> 00:10:38,220
The comment that all out we could start by checking first if age is greater than or equal to 21 that's

164
00:10:38,220 --> 00:10:42,940
the first thing and we'll say you can come and drink.

165
00:10:43,020 --> 00:10:46,940
So I'll get rid of some of these comments.

166
00:10:47,100 --> 00:10:54,030
You're good to enter and can drink and then the next thing that will do if they're not greater than

167
00:10:54,030 --> 00:10:57,920
or equal to 21 that means they are already less than 21.

168
00:10:58,050 --> 00:11:03,470
So all we have to do is check OK are you greater than or equal to 18 in which case you can enter but

169
00:11:03,480 --> 00:11:05,150
need to respond else.

170
00:11:05,460 --> 00:11:06,800
You're too young.

171
00:11:06,900 --> 00:11:09,000
So just to walk through what we did.

172
00:11:09,000 --> 00:11:13,800
Remember the only way to get to this is for this to not be true.

173
00:11:14,280 --> 00:11:15,920
So we don't have to do this.

174
00:11:16,050 --> 00:11:22,350
And between 18 and 21 if the first thing we're doing is checking if they're over 21 we're going to print

175
00:11:22,440 --> 00:11:24,000
you're going to enter and you can drink.

176
00:11:24,180 --> 00:11:28,580
But if they're not over 21 or equal to 21 that means they are less than 21.

177
00:11:28,590 --> 00:11:34,660
So this already inherently means there are less than 21 but greater than or equal to 18.

178
00:11:34,680 --> 00:11:40,470
So that's a way of saying between 18 and 21 and then if that's not true it means they're definitely

179
00:11:40,620 --> 00:11:42,360
somewhere lower than 18.

180
00:11:42,480 --> 00:11:46,620
So we get this else hopefully that refactor makes sense.

181
00:11:46,620 --> 00:11:51,770
It's kind of cleaner and easier to understand what's happening versus appear we had to use that.

182
00:11:51,780 --> 00:11:54,980
And but I am going to keep this file with both of them.

183
00:11:55,170 --> 00:12:01,170
Just so you can see you know if you look back at the solution code you can see how I did it once again.

184
00:12:01,320 --> 00:12:02,930
My colon this time I caught it.

185
00:12:03,030 --> 00:12:06,240
Let's just make sure this works are refactored version.

186
00:12:06,240 --> 00:12:06,990
How old are you.

187
00:12:06,990 --> 00:12:07,700
I'm 10.

188
00:12:07,710 --> 00:12:08,760
You can't come in.

189
00:12:08,760 --> 00:12:09,530
How old are you now.

190
00:12:09,540 --> 00:12:10,520
I'm 98.

191
00:12:10,680 --> 00:12:14,270
I'm going to enter and can drink and now I am 20.

192
00:12:14,940 --> 00:12:18,290
And finally empty string please enter an age.

193
00:12:18,300 --> 00:12:18,810
All right.

194
00:12:18,840 --> 00:12:20,490
So hopefully that made sense.

195
00:12:20,610 --> 00:12:24,360
Well hopefully the video makes sense in everything in the course makes sense as always.

196
00:12:24,360 --> 00:12:25,330
That's my hope.

197
00:12:25,480 --> 00:12:30,780
But really here what I wanted to make clear was the fact that we can do nested statements and then also

198
00:12:30,840 --> 00:12:34,080
the problem with the input and having to convert things.

199
00:12:34,110 --> 00:12:36,590
But really the main point I'd like to make here.

200
00:12:36,810 --> 00:12:42,210
Aside from just hitting home how if an elephant elf's work is that we can nest them together and remember

201
00:12:42,270 --> 00:12:44,320
indentation matters in Python.

202
00:12:44,520 --> 00:12:45,080
All right.

203
00:12:45,150 --> 00:12:46,360
So we have a quiz after this.

204
00:12:46,380 --> 00:12:50,810
And then next we're actually going to build a simple little game of rock paper scissors.
