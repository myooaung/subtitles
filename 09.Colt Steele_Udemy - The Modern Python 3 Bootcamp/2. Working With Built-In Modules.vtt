WEBVTT
1
00:00:00.280 --> 00:00:02.700
OK so we've talked about our objectives.

2
00:00:02.700 --> 00:00:05.130
Now let's discuss why we care about modules.

3
00:00:05.130 --> 00:00:06.720
Why do we even use them.

4
00:00:07.050 --> 00:00:11.570
And the most important answer is that they help keep our python files small.

5
00:00:11.580 --> 00:00:16.100
It's the same idea behind functions in a way where we want to keep our code dry.

6
00:00:16.140 --> 00:00:22.350
We don't want to repeat ourselves but with modules it's kind of taken to the next degree because let's

7
00:00:22.350 --> 00:00:28.890
take an example like random generating random numbers is something that one if we knew how to do it

8
00:00:29.070 --> 00:00:34.190
it still takes a lot of code but more importantly most of us don't know how to do it myself included

9
00:00:34.200 --> 00:00:38.160
I don't know how you know I don't know the best way of actually generating a pseudo random number with

10
00:00:38.160 --> 00:00:38.900
Python.

11
00:00:39.090 --> 00:00:44.400
I could come up with some you know pretty bad attempt but to get the closest thing to a random number

12
00:00:44.400 --> 00:00:45.570
I have no idea how to do it.

13
00:00:45.570 --> 00:00:52.310
So instead I can use a module we can also reuse code across our own files by using import.

14
00:00:52.440 --> 00:00:53.950
So we can create our own modules.

15
00:00:53.970 --> 00:00:56.580
Let's say that we have you know some code that we're using.

16
00:00:56.640 --> 00:01:00.400
We have 10 files and we're using the same function in all of them.

17
00:01:00.420 --> 00:01:03.210
We don't need to redefine that function every time.

18
00:01:03.210 --> 00:01:07.140
We could import it and just write it once in a single file.

19
00:01:07.140 --> 00:01:08.870
So we'll see how to do that in just a bit.

20
00:01:09.030 --> 00:01:12.030
And the last thing I'll add is that a module is just a python file.

21
00:01:12.030 --> 00:01:13.760
There's nothing magical about it.

22
00:01:13.920 --> 00:01:15.330
It's just another python file.

23
00:01:15.450 --> 00:01:21.660
So it comes down to the fact that modules help us clean up our own files but also the parts that I think

24
00:01:21.660 --> 00:01:26.660
is most exciting and most useful is that modules allow us to incorporate code from somewhere else.

25
00:01:26.670 --> 00:01:29.910
Often things that we wouldn't be capable of doing on our own.

26
00:01:29.910 --> 00:01:33.440
First up let's discuss using built in modules.

27
00:01:33.570 --> 00:01:35.650
So there are different types of modules.

28
00:01:35.670 --> 00:01:39.970
There are custom modules that we write that we can require in our other files.

29
00:01:40.080 --> 00:01:45.540
There are built in modules which will focus on in this video which are the modules that come with Python

30
00:01:45.540 --> 00:01:49.550
by default but we still have to manually import them to use them.

31
00:01:49.560 --> 00:01:51.730
So Python has a bunch of these modules.

32
00:01:51.750 --> 00:01:55.110
In fact here's a list of them as I scroll.

33
00:01:55.110 --> 00:02:00.070
Each one of these is something we can import and we've already worked with random.

34
00:02:00.200 --> 00:02:07.650
I'll open this in a tab but there are a bunch more modules here that do things like help you make HTP

35
00:02:07.650 --> 00:02:12.260
requests which we'll be working with later help you process audio.

36
00:02:12.720 --> 00:02:15.530
Help you set up date times all these different things.

37
00:02:15.540 --> 00:02:17.170
Most of them I've never used.

38
00:02:17.190 --> 00:02:22.980
I think most people a lot of Python developers don't really ever go beyond a couple of basic modules

39
00:02:23.190 --> 00:02:24.410
but there's a lot of them here.

40
00:02:24.570 --> 00:02:29.970
And the idea is rather than having all of these methods all this functionality always available to you

41
00:02:29.970 --> 00:02:31.020
in python.

42
00:02:31.020 --> 00:02:36.270
A decision was made to move them into separate modules that you can then import at will whenever you

43
00:02:36.270 --> 00:02:37.040
want them.

44
00:02:37.110 --> 00:02:42.180
So you don't have to download anything which is different than external modules which we'll talk about

45
00:02:42.180 --> 00:02:43.430
later in the section.

46
00:02:43.440 --> 00:02:48.690
Those are modules written by someone else or team somewhere else that you can download to your computer

47
00:02:49.080 --> 00:02:50.580
using a package installer.

48
00:02:50.640 --> 00:02:56.020
So we'll see how to do that in a bit but for now let's talk about how we require how we import build

49
00:02:56.010 --> 00:02:57.240
10 modules.

50
00:02:57.240 --> 00:02:59.590
So we've already imported random before.

51
00:02:59.760 --> 00:03:06.240
If you watch the rock paper scissors video where we created the random move functionality we use the

52
00:03:06.240 --> 00:03:13.650
random module but we only used one method on it which was called Rande it but in reality random actually

53
00:03:13.650 --> 00:03:21.300
comes with oh I don't know how many here maybe 20 or so methods maybe more like 30 methods that we can

54
00:03:21.300 --> 00:03:21.840
use.

55
00:03:22.110 --> 00:03:24.760
And random is just one of them.

56
00:03:24.780 --> 00:03:28.380
Here's a couple of others choice and shuffle.

57
00:03:28.470 --> 00:03:32.410
So to use these we have to first import random.

58
00:03:32.460 --> 00:03:37.380
So that tells Python hey you know that module that you have called random I want to use it and then

59
00:03:37.380 --> 00:03:42.850
we can access all those methods by running random dot and in the name of a method.

60
00:03:43.020 --> 00:03:44.760
So I'll copy this to a new file.

61
00:03:44.770 --> 00:03:47.030
Now call it Rande modular that way.

62
00:03:47.250 --> 00:03:51.930
If I paste this in and let me comment this out to start if I try and run these.

63
00:03:52.110 --> 00:03:53.720
What kind of error do we expect.

64
00:03:53.830 --> 00:04:00.030
OK I get name random is not defined and name error because it's trying to find something called random

65
00:04:00.030 --> 00:04:01.050
that doesn't exist.

66
00:04:01.170 --> 00:04:08.140
But if I uncomment the import random and I save and try again this time you don't get an error.

67
00:04:08.160 --> 00:04:09.770
We're not actually printing anything.

68
00:04:09.870 --> 00:04:12.180
So let's just print the first one.

69
00:04:12.330 --> 00:04:13.140
What this will do.

70
00:04:13.140 --> 00:04:19.470
By the way if you're wondering rather than Rand int which you've been using so far to generate a random

71
00:04:19.470 --> 00:04:25.700
integer random choice will take a list and we'll just randomly pick something from that list.

72
00:04:25.800 --> 00:04:31.510
So I'll print a random choice and we get Darrion a very pungent fruit.

73
00:04:32.070 --> 00:04:44.070
You know same thing we could do print random dot Rand int from 1 to 100 and if we run it now we get

74
00:04:44.070 --> 00:04:45.170
79.

75
00:04:45.180 --> 00:04:45.440
All right.

76
00:04:45.450 --> 00:04:49.940
So that's the basic syntax to import something we reference the name of the module.

77
00:04:49.950 --> 00:04:53.250
However there are a couple of other things we can do.

78
00:04:53.250 --> 00:04:59.390
We can actually give we can alias the module name or give it another name that will refer to it by with

79
00:04:59.400 --> 00:05:01.130
the as keyword.

80
00:05:01.320 --> 00:05:06.970
So I can run import random as LMG underscore so underscore random.

81
00:05:07.020 --> 00:05:13.020
Usually you would do this when you have a particularly long module name and some of them can get long

82
00:05:13.080 --> 00:05:16.350
or some of your own custom modules might have a long name.

83
00:05:16.350 --> 00:05:18.270
So you can give them a shorter name.

84
00:05:18.270 --> 00:05:19.420
This is not shorter.

85
00:05:19.590 --> 00:05:26.400
But whatever the name is as you can see we reference LMG so random choice instead of random.

86
00:05:26.400 --> 00:05:27.620
So let's play around with that.

87
00:05:27.710 --> 00:05:31.660
And rather than OMV so random let's do as Rand.

88
00:05:31.860 --> 00:05:38.520
And now I just referred to Rand choice or Rand Rand int.

89
00:05:38.670 --> 00:05:40.130
Let's verify that it works.

90
00:05:40.170 --> 00:05:41.980
And we still get the same thing.

91
00:05:42.000 --> 00:05:42.480
Darrion.

92
00:05:42.480 --> 00:05:46.180
And then this time 63 was chosen we're getting dirty in a lot.

93
00:05:46.370 --> 00:05:46.700
OK.

94
00:05:46.740 --> 00:05:47.870
Now we got Apple.

95
00:05:47.930 --> 00:05:48.510
There we go.

96
00:05:48.570 --> 00:05:54.630
As a side note if you do ever have questions about built in modules which is natural because usually

97
00:05:54.690 --> 00:05:59.190
you know you have a situation where you need to use one like you need a random number if you've never

98
00:05:59.280 --> 00:06:00.440
generated one before.

99
00:06:00.600 --> 00:06:02.610
You go research it and find out how it works.

100
00:06:02.670 --> 00:06:04.950
But for something like eight times that will take a look at.

101
00:06:04.950 --> 00:06:10.980
And just in another video after this one you'll see that you know the process is pretty normal to open

102
00:06:10.980 --> 00:06:17.640
up the docs and go look at the module because by definition code that in a built in module is not used

103
00:06:17.700 --> 00:06:21.870
all the time otherwise it would be relegated to a separate module.

104
00:06:21.870 --> 00:06:26.670
It would just be part of the regular Python set of built in functions.

105
00:06:26.880 --> 00:06:31.540
So it's OK to just go look things up and research and the documentation is pretty good.

106
00:06:31.560 --> 00:06:38.910
Back to the slides Here's the exact same thing but using as to give the name are instead of LMG so random.

107
00:06:39.060 --> 00:06:42.590
And we just refer to our DOT choice shuffle.

108
00:06:42.600 --> 00:06:49.410
Now there's another thing we can do in an import statement where we can actually use the keyword from

109
00:06:49.650 --> 00:06:54.670
to precisely specify which methods or functions we want to import.

110
00:06:55.200 --> 00:06:58.370
So a good rule of thumb is actually to only import what you need.

111
00:06:58.440 --> 00:07:05.070
So random has whatever we decided 20 or 30 methods if we're only using Rand and there's no reason to

112
00:07:05.070 --> 00:07:06.370
import all of that.

113
00:07:06.450 --> 00:07:13.120
Instead we use this pattern from module name from random import.

114
00:07:13.260 --> 00:07:16.400
And if we say star that's the same thing as importing everything.

115
00:07:16.470 --> 00:07:21.860
But we can also import part of the module by referring to individual methods.

116
00:07:21.930 --> 00:07:25.620
So I'll demonstrate that here will do from random

117
00:07:28.350 --> 00:07:29.250
imports.

118
00:07:29.370 --> 00:07:31.880
And then I just write the name of the method they want.

119
00:07:31.980 --> 00:07:32.820
So let's do.

120
00:07:32.830 --> 00:07:35.450
Choice comma Rand.

121
00:07:35.640 --> 00:07:38.280
And then if we try and run this right now.

122
00:07:38.730 --> 00:07:43.590
We'll actually get an error because random is no longer a thing.

123
00:07:43.590 --> 00:07:47.860
In this file all that we've imported our choice in Rand.

124
00:07:48.410 --> 00:07:50.730
And we just call them like this now.

125
00:07:51.480 --> 00:07:58.230
So when you use from to specify exactly the pieces you want then those are available individually under

126
00:07:58.230 --> 00:07:59.660
their own name.

127
00:07:59.670 --> 00:08:08.950
So now I can run them and we get the same results but also just to show you something like shuffle which

128
00:08:09.160 --> 00:08:14.920
is no longer imported let's do a print shuffle beforehand.

129
00:08:14.920 --> 00:08:18.850
This did work but now we'll get an error saying shuffle is not defined.

130
00:08:18.850 --> 00:08:19.520
Name error.

131
00:08:19.540 --> 00:08:22.590
So let's recap all the different ways you've seen to import.

132
00:08:23.080 --> 00:08:27.890
We've seen just do regular import random or import whatever the built in modulus.

133
00:08:28.210 --> 00:08:32.580
Then we've seen how to import random as and then give it some alias.

134
00:08:32.620 --> 00:08:35.930
There's also from random import star.

135
00:08:36.220 --> 00:08:43.030
So this works the same way except it will import all of the functions so we wouldn't even need to specify

136
00:08:43.030 --> 00:08:44.100
choice and shuffle.

137
00:08:44.170 --> 00:08:50.110
But this is generally a bad idea unless you actually need every single piece in random.

138
00:08:50.140 --> 00:08:52.120
It's much better to be more selective.

139
00:08:52.810 --> 00:08:59.530
And then we can also combine it all together so we can be selective in only import choice but give it

140
00:08:59.590 --> 00:09:00.050
a name.

141
00:09:00.070 --> 00:09:07.950
So import choice as give me one comma shuffle as mix up fruits so I could instead called called choice

142
00:09:08.260 --> 00:09:14.490
pick and Rand and as magic number chooser.

143
00:09:14.860 --> 00:09:24.450
And then I just replace choice with pick and Rand and with magic number choosier and it still works.

144
00:09:24.660 --> 00:09:25.600
Ok cool.

145
00:09:25.600 --> 00:09:29.820
So really this video was about introducing the idea of built in modules.

146
00:09:29.890 --> 00:09:35.470
But more importantly about the syntax behind imparting them the rule of thumb you should follow is to

147
00:09:35.470 --> 00:09:37.570
just really import the things you need.

148
00:09:37.570 --> 00:09:39.410
You might not know what you need right away.

149
00:09:39.490 --> 00:09:44.950
So it's OK to keep editing the import statement at a comma and then the name is something else when

150
00:09:44.950 --> 00:09:45.940
you realize that you need.
