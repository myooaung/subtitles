1
00:00:00,270 --> 00:00:00,840
All right.

2
00:00:00,840 --> 00:00:05,040
So really quick disclaimer here is somebody who teaches programming.

3
00:00:05,370 --> 00:00:11,720
I like to be transparent about my thought process and how I decide on just the order to teach things.

4
00:00:11,730 --> 00:00:18,690
And because there's often dilemmas or there's concepts that depend on one another and you need to teach

5
00:00:18,690 --> 00:00:20,470
all of them in order to use any of them.

6
00:00:20,610 --> 00:00:27,120
And one one example of that really is ranges and for loops so ranges exist on their own but they're

7
00:00:27,120 --> 00:00:30,840
never I really have not seen them used outside of for loops.

8
00:00:31,110 --> 00:00:38,820
So you need to know for loops to use ranges but then to know for loops traditionally use them with ranges

9
00:00:39,060 --> 00:00:41,740
at least until we talk about lists and dictionaries.

10
00:00:41,790 --> 00:00:46,650
So we're kind of at a crossroads where like do we teach ranges and not do anything with them until we

11
00:00:46,650 --> 00:00:52,410
go for loops or do I teach for loops and and just kind of really quickly say we'll come back to ranges

12
00:00:52,410 --> 00:00:53,070
don't panic.

13
00:00:53,220 --> 00:00:54,630
Which is what I ended up doing.

14
00:00:54,780 --> 00:00:56,420
But we're now going to talk about ranges.

15
00:00:56,430 --> 00:01:02,730
So with that long preamble over with ranges as we saw in the last video or just simple ways of generating

16
00:01:02,820 --> 00:01:08,300
sequences of numbers so not random numbers but sequences that are ordered in a particular way.

17
00:01:08,430 --> 00:01:14,370
If you look at the documentation it says that the range type represent an immutable sequence of numbers

18
00:01:14,580 --> 00:01:18,270
and is commonly used for looping a specific number of times in four loops.

19
00:01:18,270 --> 00:01:19,800
So that's really the key thing.

20
00:01:19,860 --> 00:01:26,160
It's so commonly used for for loops that the documentation actually says this is what it's pretty much

21
00:01:26,190 --> 00:01:27,130
only used for.

22
00:01:27,240 --> 00:01:34,290
So back in the slides know here's a visualization of a range just a slice of the number line but it's

23
00:01:34,290 --> 00:01:38,990
not as straightforward as only generating numbers starting at 0 going up to 6.

24
00:01:38,990 --> 00:01:41,840
There is a lot of different variations of how we can use it.

25
00:01:41,850 --> 00:01:48,410
So the first example actually only takes one number and it represents the end point.

26
00:01:48,420 --> 00:01:51,260
So this will generate a range starting at zero.

27
00:01:51,330 --> 00:01:56,490
If you only provide one number it's assumes it starts at 0 and it goes up to that last number but does

28
00:01:56,490 --> 00:01:57,590
not include it.

29
00:01:57,630 --> 00:01:59,260
So it's Xclusive.

30
00:01:59,610 --> 00:02:04,630
So it starts at zero and it goes up to six inclusive which is the range we see here

31
00:02:07,110 --> 00:02:10,670
Alternatively you can pass in two numbers 1 and 8.

32
00:02:10,680 --> 00:02:19,220
In this case and it will start at one including one and stop at 8 excluding 8 so it can be a bit confusing.

33
00:02:19,230 --> 00:02:22,180
But just remember it never includes that last number.

34
00:02:22,200 --> 00:02:27,350
So this gives us 1 to 7 which is how we printed out the numbers 1 to 7 in the last video.

35
00:02:27,390 --> 00:02:29,850
Next there are two that are a bit different.

36
00:02:29,970 --> 00:02:35,890
So we pass in a third number and this third number is known as the step or interval.

37
00:02:36,090 --> 00:02:40,970
Basically means how many numbers to skip or what the interval is in our sequence.

38
00:02:41,220 --> 00:02:48,150
So in this example we generate the numbers from 1 to 10 not including 10 but we skip to every time.

39
00:02:48,150 --> 00:02:49,380
So we start at 1.

40
00:02:49,650 --> 00:02:52,630
We skipped two and go to three and then five then seven to nine.

41
00:02:52,860 --> 00:02:59,250
So it gives us the odd numbers from 1 to 10 not including 10 which is an odd anyways.

42
00:02:59,430 --> 00:03:05,520
And then we have negative one which does the same thing except that negative is going to allow us to

43
00:03:05,580 --> 00:03:06,690
move downwards.

44
00:03:06,810 --> 00:03:10,790
So we go from seven to zero and negative 1.

45
00:03:10,800 --> 00:03:13,020
So we're going to step down one each time.

46
00:03:13,020 --> 00:03:16,330
So the end result is that we get the numbers from 7 to 1.

47
00:03:16,560 --> 00:03:18,160
And it does not include 0.

48
00:03:18,210 --> 00:03:20,350
Just like all the others are Xclusive.

49
00:03:20,540 --> 00:03:20,910
OK.

50
00:03:20,970 --> 00:03:24,530
So if I hop over to Python The first thing I'll show you.

51
00:03:24,690 --> 00:03:28,900
You can just declare range or create a range like this range.

52
00:03:28,980 --> 00:03:30,780
Go from zero to 9.

53
00:03:30,840 --> 00:03:37,440
I hit enter and you actually don't see anything useful you don't see the numbers it's generated you

54
00:03:37,530 --> 00:03:41,380
in this case we see range zero to 10 which this is a shortcut for.

55
00:03:41,460 --> 00:03:43,730
But that doesn't mean that we can't see the numbers.

56
00:03:43,800 --> 00:03:46,360
If we wanted to we need to type list.

57
00:03:46,470 --> 00:03:48,160
So I'm going to save that to a variable.

58
00:03:48,300 --> 00:03:54,400
I'll just call it our equals range 10 and then I can run a list are.

59
00:03:54,840 --> 00:03:57,680
And now it shows me the numbers that have been generated.

60
00:03:57,810 --> 00:03:59,560
So let's do a more complex example.

61
00:03:59,590 --> 00:04:08,460
Let's do numbs equals range and we'll go from 1 to 10 skipping to every time.

62
00:04:08,880 --> 00:04:12,360
And if we just look at numbers it's exactly what we've seen.

63
00:04:12,420 --> 00:04:18,640
But if I run list numbers now I can see it's 1 3 5 7 and 9.

64
00:04:18,960 --> 00:04:21,430
So we're skipping to get odd numbers.

65
00:04:21,540 --> 00:04:30,330
So if we did a for loop over this range it would run five times and whatever the item the variable we

66
00:04:30,330 --> 00:04:34,380
provided would be set equal to 1 3 5 7 and 9.

67
00:04:34,380 --> 00:04:42,210
So let me show you that now I'll quit out of here and I'll make a new file called range P Y and and

68
00:04:42,210 --> 00:04:42,800
here.

69
00:04:42,930 --> 00:04:47,110
Let's start by just doing a four numb in.

70
00:04:47,520 --> 00:04:50,990
And this is the simplest one we could do something like this.

71
00:04:51,510 --> 00:04:58,050
And we can print very simple and we'll run Python 3 range.

72
00:04:58,200 --> 00:05:00,810
Y And I get 0 to 9 print it up.

73
00:05:01,080 --> 00:05:04,360
But as we've seen we can also do things like this.

74
00:05:04,370 --> 00:05:07,190
Let's go from ten to 20.

75
00:05:07,260 --> 00:05:12,590
And this time it will be even numbers because we're starting at 10 rather than one which we saw earlier.

76
00:05:12,960 --> 00:05:20,300
So if I run it now I get 10 12 14 16 18 doesn't include 20 because it's Xclusive.

77
00:05:20,460 --> 00:05:27,210
So all I want you to take away from this is that when we write this range with whatever we pass in it's

78
00:05:27,330 --> 00:05:29,070
going to generate a sequence of numbers.

79
00:05:29,130 --> 00:05:31,810
Not always you know one two three four five.

80
00:05:31,950 --> 00:05:35,720
It can be odd number intervals or we could even do you know by fives.

81
00:05:35,720 --> 00:05:43,110
We could go from zero to 100 by fives and there we go.

82
00:05:43,110 --> 00:05:46,070
We're counted by fives I have 10 15 20 and so on.

83
00:05:46,110 --> 00:05:50,440
And right now we are just printing things which I realize is trivial.

84
00:05:50,460 --> 00:05:53,740
We're just putting the exact number but the focus is on ranges.

85
00:05:53,820 --> 00:05:57,120
But eventually the focus will not be on printing numbers.

86
00:05:57,120 --> 00:06:02,260
We'll be doing much more complex things operations with the actual numbers that we're generating.
