WEBVTT
1
00:00:00.360 --> 00:00:00.840
All right.

2
00:00:00.840 --> 00:00:06.500
So in this video I'm just going to show the input function which allows us to get input from a user

3
00:00:06.940 --> 00:00:11.820
that will be important for this section on making decisions because we'll be able to make choices depending

4
00:00:11.820 --> 00:00:13.400
on what a user types in.

5
00:00:13.620 --> 00:00:19.980
So the BuildOn function again is called input and it just prompts the user from the command line to

6
00:00:20.010 --> 00:00:20.830
enter something.

7
00:00:21.000 --> 00:00:23.380
And so they type something and then hit the return key.

8
00:00:23.640 --> 00:00:29.370
And whatever that value is that the user types in after they hit enter it's stored in a variable.

9
00:00:29.640 --> 00:00:30.980
So it looks like this.

10
00:00:31.020 --> 00:00:32.510
Here we have a name variable.

11
00:00:32.510 --> 00:00:40.110
We're setting equal to the value of input and you can pass in a string that will prompt the user.

12
00:00:40.110 --> 00:00:42.150
So you don't have to do a separate print.

13
00:00:42.150 --> 00:00:47.820
You can do that if you prefer if you want it to be on a separate line but you can also just do input

14
00:00:47.880 --> 00:00:49.040
in passing a string.

15
00:00:49.470 --> 00:00:51.500
And this is sort of the result.

16
00:00:51.640 --> 00:00:55.530
And to your name here and then a user type something in Tyrion Lannister.

17
00:00:55.530 --> 00:01:01.500
They hit enter and then it's stored into the name variable so that our code could do something with

18
00:01:01.500 --> 00:01:02.410
it.

19
00:01:02.430 --> 00:01:04.330
So we'll be making decisions.

20
00:01:04.530 --> 00:01:08.270
But we could also just print it back or in the last section.

21
00:01:08.310 --> 00:01:13.330
The last video we made a super simple converter between kilometers and miles.

22
00:01:13.350 --> 00:01:15.470
So we asked the user how many kilometers do you want.

23
00:01:15.510 --> 00:01:18.900
And then we converted that to Miles and printed it back out.

24
00:01:18.900 --> 00:01:27.450
So if you want a quick demo or maybe just a new file and I'm just going to do UBL and I'll call it input

25
00:01:27.630 --> 00:01:28.220
that.

26
00:01:28.330 --> 00:01:29.010
Why.

27
00:01:29.550 --> 00:01:41.820
We'll just do a data equals input and we'll just ask a user what's your favorite color line just like

28
00:01:41.820 --> 00:01:42.540
that.

29
00:01:42.690 --> 00:01:45.240
And then we will print it out afterwards.

30
00:01:45.270 --> 00:01:52.290
I'm just saying Prince you said and then plus data.

31
00:01:53.200 --> 00:01:53.520
Yeah.

32
00:01:53.530 --> 00:01:59.410
It's really not that exciting but it's important that we're able to get information in from a user.

33
00:01:59.530 --> 00:02:00.960
So let's try running it now.

34
00:02:00.970 --> 00:02:01.560
Here we go.

35
00:02:01.660 --> 00:02:04.670
So we'll run Python 3 and put up why.

36
00:02:04.810 --> 00:02:06.000
What's your favorite color.

37
00:02:06.220 --> 00:02:12.280
Well if you've been following my other courses my favorite colors purple but if you disagree with me

38
00:02:12.520 --> 00:02:14.550
never buy one of my classes again.

39
00:02:14.590 --> 00:02:15.820
No I'm just kidding.

40
00:02:15.830 --> 00:02:21.100
But keep it yourself because purple is a very under-rated color and it has a bit of a complex because

41
00:02:21.100 --> 00:02:22.290
no one appreciates it.

42
00:02:22.360 --> 00:02:27.360
But as you can see here we have a color type in purple and we've spit it back out.

43
00:02:27.400 --> 00:02:29.460
So we're not doing anything with it but that's OK.

44
00:02:29.650 --> 00:02:31.110
That's not what this video is about.

45
00:02:31.210 --> 00:02:36.850
Now I personally prefer to actually do a print statement so I'm going to just copy this whole thing

46
00:02:37.120 --> 00:02:42.470
and duplicated but I'm going to switch it up a bit just like this.

47
00:02:42.460 --> 00:02:48.370
I'm going to copy the prompt and put it as a print statement first and then leave input empty and you'll

48
00:02:48.370 --> 00:02:50.350
see the difference it makes it's very minor.

49
00:02:50.350 --> 00:02:55.350
But if I run it again first ask me what's your favorite color and say purple and ask me again.

50
00:02:55.390 --> 00:02:58.360
What's your favorite color but this time it's on a separate line.

51
00:02:58.360 --> 00:03:01.090
And I personally just don't like it on the same line.

52
00:03:01.090 --> 00:03:04.480
You have to remember to put a space after words are also words thrown together.

53
00:03:04.480 --> 00:03:06.760
It doesn't make a difference at all.

54
00:03:06.760 --> 00:03:11.890
Whatever the user types is stored in data either way it's just if you want to have a separate print

55
00:03:11.890 --> 00:03:14.250
line or you want it to be on the same line.

56
00:03:14.260 --> 00:03:17.950
All right so that's it to getting input the built in function is input.

57
00:03:17.950 --> 00:03:19.190
You need those parentheses.

58
00:03:19.240 --> 00:03:20.850
Talk more about functions later.

59
00:03:20.980 --> 00:03:26.800
You can optionally pass in a string to prompt the user or print to yourself and remember that the result

60
00:03:26.800 --> 00:03:30.910
is always a string and it's saved into whatever variable name you give it.

61
00:03:31.090 --> 00:03:31.630
OK.

62
00:03:31.750 --> 00:03:33.410
Now let's get on to decisions.
