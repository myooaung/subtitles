WEBVTT
1
00:00:00.180 --> 00:00:01.320
All right we'll come back.

2
00:00:01.320 --> 00:00:06.030
So now let's talk about selecting rows from our database using Python.

3
00:00:06.030 --> 00:00:13.700
So as we've seen before we write a BASIC sequel query we do as cursor execute whatever that query is.

4
00:00:13.710 --> 00:00:18.300
And then in this case it's a little different though because we get something back and we weren't getting

5
00:00:18.300 --> 00:00:19.280
something back earlier.

6
00:00:19.350 --> 00:00:22.020
We were simply inserting data or creating a table.

7
00:00:22.050 --> 00:00:23.770
And it's basically done.

8
00:00:23.850 --> 00:00:26.810
There's nothing that comes back for us here.

9
00:00:26.820 --> 00:00:28.670
We want the data that comes back.

10
00:00:28.770 --> 00:00:34.450
And so we talk about a couple of ways of either iterating over it or converting that data into an array

11
00:00:34.460 --> 00:00:36.890
or list doing something with it.

12
00:00:36.900 --> 00:00:42.390
So let's say I just want to select like every friend that we have in the database so it would just be

13
00:00:42.390 --> 00:00:49.500
select star from friends like that and then we could do a seed execute.

14
00:00:49.710 --> 00:00:54.330
And then of course we want to print it out or something but we can't really just do print.

15
00:00:54.330 --> 00:00:58.210
See if we did that I'll never know what will happen.

16
00:00:58.210 --> 00:00:59.950
You can try it.

17
00:00:59.960 --> 00:01:06.320
All right so we get this cursor object that comes back and it is an iterator so we can iterate over

18
00:01:06.320 --> 00:01:06.810
it.

19
00:01:07.040 --> 00:01:18.840
So that's one option we could say for result in see print results just like that.

20
00:01:18.990 --> 00:01:19.970
And there we go.

21
00:01:20.370 --> 00:01:26.830
So it's an iterator where we can iterate over it and get each sort of row that matched our selection

22
00:01:27.450 --> 00:01:29.400
and we can do something with them.

23
00:01:29.910 --> 00:01:36.800
But if we wanted them all in the form of a list for example instead of iterating one at a time there's

24
00:01:36.810 --> 00:01:37.630
another option.

25
00:01:37.710 --> 00:01:43.090
So when it comes to that out we can do see Dot fetch all.

26
00:01:43.530 --> 00:01:47.560
And this is going to give us a list that contains all of the results.

27
00:01:47.640 --> 00:01:48.640
So if we do it this way.

28
00:01:48.690 --> 00:01:54.570
Well I need to print it out so that you can see that.

29
00:01:54.750 --> 00:01:58.930
And now you can see they are coming back all together in a single list.

30
00:01:58.980 --> 00:02:04.350
So if we were trying to do something else with them I don't know what exactly maybe Bache insert into

31
00:02:04.350 --> 00:02:07.020
another table or you wanted them in a list for some reason.

32
00:02:07.050 --> 00:02:09.130
This is how you would do that.

33
00:02:09.150 --> 00:02:15.630
Alternatively if you just want the first result like we do instead of select start from friends say

34
00:02:15.660 --> 00:02:23.750
select start from friends where name equals or name is Rosa.

35
00:02:23.760 --> 00:02:25.340
We have multiple roses right now.

36
00:02:25.410 --> 00:02:27.750
Well Rosa Parks multiple times.

37
00:02:27.840 --> 00:02:29.630
Let's say I just want the first one.

38
00:02:29.990 --> 00:02:30.610
OK.

39
00:02:30.840 --> 00:02:39.720
So we could do that fetch all or fetch one and they all leave both of them in here so fetch one just

40
00:02:39.720 --> 00:02:40.490
like that.

41
00:02:40.560 --> 00:02:50.770
And if we print that up no such column name first name where we go now it only gives us the first one.

42
00:02:50.930 --> 00:02:56.720
OK I updated this to include some comments so we can iterate over the cursor and then print each one

43
00:02:56.720 --> 00:02:58.120
or do something with it.

44
00:02:58.160 --> 00:03:04.700
We can also fetch a single result with the fat one and we can fetch all with fetch all and it returns

45
00:03:04.700 --> 00:03:05.210
a list.

46
00:03:05.330 --> 00:03:09.700
And let's just do another query that is a little more complicated.

47
00:03:09.770 --> 00:03:14.840
Let's just do select start from friends instead of for first name is Rosa let's just like start from

48
00:03:14.840 --> 00:03:24.300
friends where closeness is greater than what are we looking at for our values greater than five.

49
00:03:25.280 --> 00:03:31.160
And then order by which is something we haven't really seen order by closeness.

50
00:03:31.240 --> 00:03:37.540
So now the data will be sorted by that closeness as it comes back but only friends where the closeness

51
00:03:37.560 --> 00:03:38.910
value is greater than five.

52
00:03:39.050 --> 00:03:43.450
And instead of fecche one let's do fetchmail and let's see what we get.

53
00:03:44.900 --> 00:03:45.450
OK.

54
00:03:45.600 --> 00:03:50.880
So you can see if we go from 7 we have a couple of duplicates of everything or almost everything up

55
00:03:50.880 --> 00:03:52.890
until my best friend Steve Irwin.

56
00:03:52.950 --> 00:03:54.440
We're very close.

57
00:03:54.440 --> 00:03:55.110
Nine out of 10.

58
00:03:55.110 --> 00:03:55.900
Closeness.

59
00:03:56.090 --> 00:04:00.530
OK so that's the basics of selecting things really it's the exact same process.

60
00:04:00.540 --> 00:04:04.500
It's just that data is returned back and we have a couple of options for handling it.

61
00:04:04.590 --> 00:04:08.430
Iterating over it fetching one or fetching all to get a list.

62
00:04:08.520 --> 00:04:13.470
Now I haven't shown you what I'm going to do in the next video is talk about how you would do dynamic

63
00:04:13.470 --> 00:04:20.550
queries so select something based off of a variable like select all from friends where I don't know

64
00:04:20.610 --> 00:04:27.960
name it first name is equal to something that's coming from a form and it's the same idea as what we

65
00:04:27.960 --> 00:04:29.430
did when we're inserting data.

66
00:04:29.430 --> 00:04:32.140
But I'm going to show you what would happen if you did it incorrectly.

67
00:04:32.250 --> 00:04:34.870
How somebody could just ruin your database.

68
00:04:34.920 --> 00:04:35.950
So that's coming up.
