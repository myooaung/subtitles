WEBVTT
1
00:00:00.330 --> 00:00:06.360
OK so as I mentioned deleting directories is a little bit trickier than deleting individual files and

2
00:00:06.360 --> 00:00:11.850
that's mainly because a directory could have hundreds or thousands of other files and subdirectories

3
00:00:11.880 --> 00:00:12.810
inside of it.

4
00:00:12.810 --> 00:00:18.460
So the leading a single directory could have tons of repercussions compared to deleting a single file.

5
00:00:18.480 --> 00:00:21.780
So most operating systems are a little more cautious about it.

6
00:00:22.020 --> 00:00:27.570
So there is a command called Aurum dear which I pretty much never use and that's because it only allows

7
00:00:27.570 --> 00:00:30.510
you to delete EMPTY directories using it.

8
00:00:30.510 --> 00:00:33.540
So for example you have an empty directory.

9
00:00:33.540 --> 00:00:34.360
Rusty picks.

10
00:00:34.380 --> 00:00:39.360
So if I cd out into dog photos I could run r.m dear.

11
00:00:40.080 --> 00:00:44.320
Rusty picks and that delete it and it's gone.

12
00:00:44.370 --> 00:00:47.700
Now if I look at why it picks however it's also empty.

13
00:00:47.700 --> 00:00:50.900
But if I added a file LEDs do touch why it picks.

14
00:00:50.910 --> 00:00:52.400
Test XTi.

15
00:00:52.560 --> 00:00:54.450
So it's no longer empty.

16
00:00:54.450 --> 00:00:58.800
If I try an r m dear y it picks it gives me a warning.

17
00:00:58.940 --> 00:01:01.580
Directory is not empty and it did not delete it.

18
00:01:01.640 --> 00:01:02.010
All right.

19
00:01:02.070 --> 00:01:07.000
So that's why I pretty much never use r.m dear because how often do you need to delete an empty directory.

20
00:01:07.440 --> 00:01:08.370
At least in my experience.

21
00:01:08.370 --> 00:01:09.450
Not that often.

22
00:01:09.570 --> 00:01:11.050
So there's another command.

23
00:01:11.070 --> 00:01:13.930
It's actually the same one we've been using which is r.m.

24
00:01:14.040 --> 00:01:21.150
However on its own r.m won't delete a directory so we have to pass a flag just like with ls where we

25
00:01:21.150 --> 00:01:27.250
had the A or the l flag or M has a couple of options we can pass in that will change how it behaves.

26
00:01:27.570 --> 00:01:36.060
So if I just try and do our AM on why it picks right now it tells me hang on why it picture is a directory.

27
00:01:36.060 --> 00:01:38.530
I'm not going to delete that it's still there.

28
00:01:38.880 --> 00:01:45.450
But by passing in this option Dasch are at Santror recursive which basically means go through everything

29
00:01:45.450 --> 00:01:48.800
in this directory and everything in those directories if there's anything else.

30
00:01:48.800 --> 00:01:54.060
Kind of keep burrowing down through all the levels and delete everything instead of why it picks.

31
00:01:54.180 --> 00:01:59.350
In our case it's just a single file but there could be tens of thousands of nested bubbles.

32
00:01:59.580 --> 00:02:01.630
OK so here's an example.

33
00:02:01.680 --> 00:02:09.450
We have the stuff directory we're inside of it and I want to delete cat pics so I do r.m dash Aref and

34
00:02:09.450 --> 00:02:11.190
we'll talk about the F in a moment.

35
00:02:11.190 --> 00:02:12.070
Cat pics.

36
00:02:13.430 --> 00:02:17.610
And it's gone and it's important to note that r.m on its own doesn't work.

37
00:02:17.650 --> 00:02:26.150
We need to pass in at the very least Dasch are so let's do that now so I'll do Ahram dash our why it

38
00:02:26.150 --> 00:02:29.990
picks and there we go it deleted it.

39
00:02:29.990 --> 00:02:32.540
I type ls and it's gone.

40
00:02:32.800 --> 00:02:34.840
So you might be wondering what the dash are.

41
00:02:34.920 --> 00:02:35.830
F is for.

42
00:02:35.840 --> 00:02:37.850
So the dash bar is recursive.

43
00:02:37.850 --> 00:02:40.220
It means delete every subdirectory.

44
00:02:40.280 --> 00:02:42.360
Go down the entire hierarchy and delete it all.

45
00:02:42.470 --> 00:02:43.460
And that usually works.

46
00:02:43.550 --> 00:02:45.870
But there might be some permission errors.

47
00:02:46.010 --> 00:02:48.830
So sometimes I don't know if you've seen this in your computer.

48
00:02:48.830 --> 00:02:52.790
It will pop up and say you know are you sure you want to delete this or you don't have permission to

49
00:02:52.790 --> 00:02:54.550
delete this into your password.

50
00:02:54.560 --> 00:02:57.890
Things like that so you might encounter a permissions error.

51
00:02:58.010 --> 00:03:02.710
If you are not authorized to delete something or you need to confirm that you want to delete something.

52
00:03:02.750 --> 00:03:05.520
Wait hang on.

53
00:03:06.140 --> 00:03:11.900
So real quickly if you care to demonstrate how you could actually come across this exact problem.

54
00:03:12.050 --> 00:03:13.930
So I'm going to start by making a new directory.

55
00:03:14.090 --> 00:03:15.440
I'll just call it testing.

56
00:03:15.440 --> 00:03:19.490
I'm on my desktop by the way and then I'll C.D into testing.

57
00:03:19.530 --> 00:03:25.710
Now I'm just going to make two files so I'll just call them 1.60 and to get to 60.

58
00:03:26.400 --> 00:03:32.600
OK so right now I could just use r m dash r to remove this directory but I'm going to show you a command

59
00:03:32.600 --> 00:03:35.030
that will actually change the permissions.

60
00:03:35.030 --> 00:03:40.270
So if we do an ls dash l remember I was talking about this earlier.

61
00:03:40.340 --> 00:03:42.540
This has to do with reading and writing permissions.

62
00:03:42.570 --> 00:03:45.610
Just noticed what it looks like right now for these two files.

63
00:03:45.680 --> 00:03:51.740
Then command I'm going to show you chmod allows us to change the permission to this file.

64
00:03:51.740 --> 00:03:59.630
So for Dash w the SD with the right permissions and again is a tangent doesn't really matter but I just

65
00:03:59.630 --> 00:04:02.530
want to show you I'm recording this after the fact.

66
00:04:02.540 --> 00:04:06.950
I realized that I kind of just glossed over a real example of how this could happen.

67
00:04:07.130 --> 00:04:10.110
So 1.60 to that text.

68
00:04:10.250 --> 00:04:15.080
Now if I do ls dash L you can see that the W is gone.

69
00:04:15.200 --> 00:04:16.890
So there's no right permission.

70
00:04:17.120 --> 00:04:22.900
So when I go to delete this there isn't permission because the right permission has been revoked.

71
00:04:22.970 --> 00:04:31.080
So if I go back out and it's a testing directory I try and do Ahram dash are testing.

72
00:04:31.430 --> 00:04:35.730
I get this first warning override for testing sashed 1.60.

73
00:04:35.900 --> 00:04:41.240
If I just hit enter it will move to the next morning I hit enter and it will tell me sorry I can do

74
00:04:41.240 --> 00:04:46.780
that so I can either do arm Desch are testing and then type Y.

75
00:04:46.850 --> 00:04:49.830
I think yes it might work as well but why definitely works.

76
00:04:50.120 --> 00:04:50.990
Or no.

77
00:04:51.020 --> 00:04:58.230
And or I can use r m dash r f so I'll do that now.

78
00:04:58.270 --> 00:05:02.600
Arm dash r f testing.

79
00:05:02.730 --> 00:05:04.400
And now it's gone.

80
00:05:04.570 --> 00:05:05.800
OK tangent over.

81
00:05:05.980 --> 00:05:10.820
But if you throw dash F in there it will just force its way through and delete everything and basically

82
00:05:10.820 --> 00:05:15.110
say don't give me warnings and you could verify this.

83
00:05:15.110 --> 00:05:16.940
So here's a little command we haven't seen.

84
00:05:16.940 --> 00:05:20.690
If you type M A and think it stands for manual.

85
00:05:20.750 --> 00:05:26.680
People just call these man pages and then you type the name of a command like r.m.

86
00:05:27.170 --> 00:05:33.990
It gives you BSD general commands manual for r.m So it gives you a synopsis or description.

87
00:05:34.160 --> 00:05:38.570
The r.m utility attempts to remove the non-HD directory type files specified on the command line.

88
00:05:38.750 --> 00:05:43.740
If the permissions the file do not permit writing and the standard pop OK it doesn't matter.

89
00:05:43.970 --> 00:05:49.070
But then there are a couple options we can pass in and as we've seen Dasch are here.

90
00:05:49.290 --> 00:05:50.000
Lowercase r.

91
00:05:50.000 --> 00:05:55.340
It just says it's equivalent to uppercase are and what it does is it attempts to move the file hierarchy

92
00:05:55.340 --> 00:05:57.290
rooted in each file argument.

93
00:05:57.290 --> 00:06:04.850
Blah blah blah and then Frisco Pradesh f c it says according to the manual it attempts to remove the

94
00:06:04.850 --> 00:06:06.950
files without prompting for confirmation.

95
00:06:07.010 --> 00:06:09.050
Regardless of the files permissions.

96
00:06:09.070 --> 00:06:09.990
Long story short.

97
00:06:10.070 --> 00:06:15.890
Most people use dash RF together so r is the important one to actually delete everything in the directory.

98
00:06:15.980 --> 00:06:18.010
An F is just force.

99
00:06:18.080 --> 00:06:19.390
That's the one that says right.

100
00:06:19.400 --> 00:06:21.200
If some problem comes up there's a warning.

101
00:06:21.200 --> 00:06:22.960
Just skip it and just delete it.

102
00:06:22.970 --> 00:06:24.030
I don't want to hear about it.

103
00:06:24.080 --> 00:06:30.230
Don't whine at me so Dasch are commonly used together it to get out of man pages by the way can type

104
00:06:30.280 --> 00:06:34.740
q and there's no evidence that we were ever looking at the menu.

105
00:06:35.120 --> 00:06:38.470
Takes you to it's own little world so we can also do man ls.

106
00:06:38.630 --> 00:06:42.160
And this gives us all the different options you can pass into us.

107
00:06:42.170 --> 00:06:43.990
There's a lot of them.

108
00:06:44.520 --> 00:06:47.400
All right so I'm going to hit Q And let's see.

109
00:06:47.420 --> 00:06:51.110
I'm going to go into dog photos again.

110
00:06:51.650 --> 00:06:55.950
This time it actually is empty so I'm going to make a new file here.

111
00:06:56.010 --> 00:06:56.960
Just going to call it.

112
00:06:57.060 --> 00:06:59.550
Touch me that T.

113
00:07:00.320 --> 00:07:02.650
And then CD back out out of dog photos.

114
00:07:02.780 --> 00:07:04.460
So dog photos now has something in it.

115
00:07:04.520 --> 00:07:05.620
So just one more time.

116
00:07:05.630 --> 00:07:06.740
R.m dear.

117
00:07:07.160 --> 00:07:15.810
Would not work r.m dash are works as as well as Dasch RF and I'm used to just typing Dasch RF any time

118
00:07:15.830 --> 00:07:17.600
I want a delete directory.

119
00:07:17.600 --> 00:07:19.540
So just to be up front about that.

120
00:07:19.670 --> 00:07:22.360
You don't have to use the F but you need the R

121
00:07:25.340 --> 00:07:26.730
and there we go.

122
00:07:26.810 --> 00:07:27.280
All right.

123
00:07:27.340 --> 00:07:28.020
That too.

124
00:07:28.040 --> 00:07:29.240
Deleting directories.

125
00:07:29.380 --> 00:07:30.580
It's a little trickier.

126
00:07:30.740 --> 00:07:36.080
The only thing I would mention about all of this is that you do need to be careful when deleting directories

127
00:07:36.530 --> 00:07:37.760
from your terminal.

128
00:07:37.760 --> 00:07:43.360
You know I could go back here to my home directory or even worse.

129
00:07:43.710 --> 00:07:45.680
OK this would be really bad.

130
00:07:45.830 --> 00:07:53.330
I could go into this directory users and I could do r.m dash R.F. my entire user and by adding to force

131
00:07:53.560 --> 00:07:57.660
it you can ignore all warnings so I could lose everything.

132
00:07:58.100 --> 00:08:03.040
I don't actually know what would happen if it if I did that because I'm currently using this account

133
00:08:03.440 --> 00:08:04.180
on this computer.

134
00:08:04.180 --> 00:08:05.690
I don't know what would happen.

135
00:08:05.700 --> 00:08:09.560
Not going to test it out but just a note included a warning here.

136
00:08:09.860 --> 00:08:15.860
It's somewhat dangerous so be careful because there's no trash there's no undo it's gone.

137
00:08:15.920 --> 00:08:17.850
And on that note very bleak.

138
00:08:17.870 --> 00:08:19.000
That wraps up basics.

139
00:08:19.000 --> 00:08:20.480
The command line content.

140
00:08:20.480 --> 00:08:22.240
Next we have a quick quiz.

141
00:08:22.340 --> 00:08:24.360
Then I promise to move on to Python in.
