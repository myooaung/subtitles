1
00:00:00,180 --> 00:00:01,350
Hey welcome back.

2
00:00:01,350 --> 00:00:07,050
And this video to show you a tool called auto PEP 8 and it's a package that you need to download if

3
00:00:07,050 --> 00:00:13,020
you're going to use it and it will automatically format your Python code to conform to the PEP 8 style

4
00:00:13,020 --> 00:00:14,140
guide.

5
00:00:14,190 --> 00:00:20,370
So this is a guide that we talked about earlier in the course but it just explains some conventions

6
00:00:20,370 --> 00:00:21,420
you should follow.

7
00:00:21,420 --> 00:00:28,440
You know when you're using comments for example don't use an extra indentation or for scroll down.

8
00:00:28,470 --> 00:00:29,210
What else do we have.

9
00:00:29,220 --> 00:00:31,650
You know tabs vs spaces.

10
00:00:31,650 --> 00:00:35,490
Maximum length of lines when you should wrap it over on the next line.

11
00:00:35,490 --> 00:00:40,610
There's a lot of stuff that is kind of well it's pretty specific compared to some other style guide

12
00:00:40,610 --> 00:00:41,640
to languages.

13
00:00:41,820 --> 00:00:44,270
And you don't have to do this yourself.

14
00:00:44,310 --> 00:00:47,760
You can use Otto PEP 8 back on the documentation.

15
00:00:47,790 --> 00:00:49,850
All we need to do is start by installing.

16
00:00:49,860 --> 00:01:00,080
I already have it but it's Python 3 dash em Pip install auto PEP 8 number 8 and tells me requirement

17
00:01:00,120 --> 00:01:01,380
already satisfied.

18
00:01:01,830 --> 00:01:06,600
Ok so I already have it and I have a file that we're going to use it on.

19
00:01:06,620 --> 00:01:10,530
So this file is messy and it has a bunch of problems in it.

20
00:01:10,640 --> 00:01:13,130
For example this is a long comment.

21
00:01:13,160 --> 00:01:18,290
It should be wrapped to fit within 72 characters according to the PEP 8 style guide.

22
00:01:18,290 --> 00:01:21,200
I'm not going to count 72 characters personally here.

23
00:01:21,290 --> 00:01:24,830
I have no extra space in this tuple.

24
00:01:24,830 --> 00:01:27,410
What else is going on you know a long string.

25
00:01:27,410 --> 00:01:29,150
There's a couple of other things you know.

26
00:01:29,160 --> 00:01:32,070
Some very long dictionary.

27
00:01:32,390 --> 00:01:33,050
You get it.

28
00:01:33,080 --> 00:01:37,520
We're going to just work on inventing things properly and formatting it nicely and you'll see what a

29
00:01:37,520 --> 00:01:39,660
difference auto 8 makes.

30
00:01:39,890 --> 00:01:42,220
The syntax can be quite complex.

31
00:01:42,230 --> 00:01:44,180
If you want to use all the options.

32
00:01:44,420 --> 00:01:46,560
I'll just point out some of the more important ones.

33
00:01:46,700 --> 00:01:52,820
So when we run it we're going to call auto PEP 8 from the command line and I usually run an in place

34
00:01:52,910 --> 00:01:56,480
so you can tell it to run in place which Where do they explain that.

35
00:01:56,480 --> 00:02:01,360
Here we go using dash I or dash dash in place make changes to the file and place.

36
00:02:01,370 --> 00:02:04,550
I usually have no reason to keep the first version that's all ugly.

37
00:02:04,550 --> 00:02:06,600
I just want the nice pretty fried version.

38
00:02:06,830 --> 00:02:08,840
So that's one option to pass in.

39
00:02:08,840 --> 00:02:14,930
You also can Pessin an option called aggressive or dash A has a flag and what this will do.

40
00:02:14,930 --> 00:02:20,780
Most of the changes that auto pep it makes relate to whitespace adding lines in string to getting too

41
00:02:20,780 --> 00:02:22,800
long or your dictionaries are getting too long.

42
00:02:23,000 --> 00:02:27,060
Figuring out how to format things nicely removing trailing spaces all that stuff.

43
00:02:27,320 --> 00:02:31,380
But there are certain things that if you tell it to be more aggressive it will change.

44
00:02:31,400 --> 00:02:36,290
For example in the style guide it tells you if you're checking if a variable is true or false.

45
00:02:36,290 --> 00:02:40,390
You don't use is and you're not supposed to use double equals either.

46
00:02:40,640 --> 00:02:47,830
Instead you should just say if greeting or if not greeting or something like that instead of using is

47
00:02:47,840 --> 00:02:53,690
or double equals and if you have this in your code and you use auto 8 without aggressive it won't change

48
00:02:53,690 --> 00:02:57,030
this it will just fix whitespace problems like we've already talked about.

49
00:02:57,110 --> 00:03:03,210
But if you do tell it to be aggressive it will fix this and it will change it to this anyway.

50
00:03:03,260 --> 00:03:09,670
So as far as usage we're going to start with autopap 8 dash dash in place and then the file name.

51
00:03:09,830 --> 00:03:13,290
So in my terminal I'll paste that in the file name.

52
00:03:13,420 --> 00:03:15,840
Oh I already forgot I called it ugly code.

53
00:03:15,860 --> 00:03:16,930
P Y.

54
00:03:17,420 --> 00:03:19,280
And you just run this on whatever file you want.

55
00:03:19,280 --> 00:03:21,100
Make sure you're in the same directory.

56
00:03:21,930 --> 00:03:22,910
Takes a moment.

57
00:03:23,030 --> 00:03:24,340
Doesn't look like anything happened.

58
00:03:24,410 --> 00:03:28,200
But if I go back to my file hopefully saw that change.

59
00:03:28,430 --> 00:03:32,840
No code has been changed other than whitespace being added or removed.

60
00:03:32,840 --> 00:03:34,670
Most of it was being added.

61
00:03:34,700 --> 00:03:39,560
In our case to make it a lot nicer to look at you know very clear what's happening now and I'm going

62
00:03:39,560 --> 00:03:45,810
to add a little bit of extra code here just to show something of a value like cat.

63
00:03:45,830 --> 00:03:49,450
Let's say is cat owner is true.

64
00:03:49,570 --> 00:03:57,720
And then I want to add a statement like if is cat owner and I'll start with saying double equals let's

65
00:03:57,720 --> 00:04:05,730
say true if that's the case then I'm going to print out OK.

66
00:04:06,100 --> 00:04:10,360
So see what it looks like before and if I go back and run it.

67
00:04:11,110 --> 00:04:12,740
But this time I add in.

68
00:04:12,970 --> 00:04:19,710
Well if I just run it on its own again you'll see it didn't change that because it's only doing white

69
00:04:19,710 --> 00:04:20,600
space changes.

70
00:04:20,680 --> 00:04:27,420
But if I run it now with Dash a I don't want to type Dasch aggressive dash a tells it to be aggressive.

71
00:04:27,820 --> 00:04:30,430
And I think that only did one level of aggressiveness.

72
00:04:30,490 --> 00:04:37,630
I think we have to do two separate Dasch ways to tell it to be doubly aggressive which as we go you

73
00:04:37,630 --> 00:04:39,040
can see it now changed.

74
00:04:39,160 --> 00:04:41,660
If is cat owner print me out.

75
00:04:42,010 --> 00:04:44,390
So I just wanted to show you that there are different levels.

76
00:04:44,440 --> 00:04:50,020
I'm not entirely clear at what happens at each particular level but if you just want for mounting of

77
00:04:50,020 --> 00:04:53,770
the white space you don't need to use dash or dash aggressive at all.

78
00:04:53,770 --> 00:04:57,990
If you do want it to take care of things like this then you can use to dash.

79
00:04:58,030 --> 00:05:03,940
In this example but the big point I want to make here is that external modules like this external packages

80
00:05:04,120 --> 00:05:05,770
can really help us out.

81
00:05:05,770 --> 00:05:10,060
Nobody wants to sit here and do this on their own and memorize all these rules even.

82
00:05:10,060 --> 00:05:15,700
Because if you're switching between programming languages it differs and there's a lot to keep track

83
00:05:15,700 --> 00:05:20,480
of just as far as the syntax itself let alone the style guides and conventions.

84
00:05:20,500 --> 00:05:26,170
So it's much easier in my opinion at least to use something like auto Peppi and as a final note there

85
00:05:26,170 --> 00:05:32,320
is a sublime text package if you are using sublime that you can install that will do this for you in

86
00:05:32,320 --> 00:05:32,920
sublime.

87
00:05:32,920 --> 00:05:36,180
So you don't even have to you know run it from the command line.

88
00:05:36,260 --> 00:05:38,680
It is just a command you run in sublime that will do it.

89
00:05:38,680 --> 00:05:43,750
I'm not going to go through the installation process because in one of my other courses I did show something

90
00:05:43,750 --> 00:05:45,970
similar in a sublime package.

91
00:05:45,970 --> 00:05:52,430
It wasn't for Python and I don't think I've ever had more problems or more questions about something.

92
00:05:52,450 --> 00:05:57,790
It just works very differently on everybody's machine between Macs and PCs and different versions of

93
00:05:58,060 --> 00:05:58,770
software.

94
00:05:58,810 --> 00:06:01,750
You know OS whatever versus Sierra.

95
00:06:01,890 --> 00:06:03,250
Anyway it was just a nightmare.

96
00:06:03,280 --> 00:06:07,800
So I'm not going to go through and cement it in my video and never be able to change it.

97
00:06:07,960 --> 00:06:08,670
I highly recommend it.

98
00:06:08,670 --> 00:06:14,210
If you do use sublime all the time go to the get hub repo and you can follow the instructions.

99
00:06:14,440 --> 00:06:16,200
Anyway that's auto pep 8.
