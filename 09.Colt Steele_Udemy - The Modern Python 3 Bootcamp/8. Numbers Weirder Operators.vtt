WEBVTT
1
00:00:00.210 --> 00:00:05.490
OK so in this video we're talking about these last three operations that you may not have come across

2
00:00:05.970 --> 00:00:11.560
and you may be familiar with things like exponents but the syntax may be new to you.

3
00:00:12.060 --> 00:00:15.260
So first one we'll talk about is the double star here.

4
00:00:15.300 --> 00:00:20.820
So unlike the single asterisk which is used for multiplication two stars two asterisks will be used

5
00:00:20.820 --> 00:00:23.520
to raise a number to a given power.

6
00:00:23.520 --> 00:00:24.780
So let's try it out.

7
00:00:24.870 --> 00:00:32.440
My terminal here open up Python 3 and let's do something like two to the third power.

8
00:00:32.790 --> 00:00:35.550
So if you don't remember or you never covered this.

9
00:00:35.550 --> 00:00:40.670
When we raised to the third power it's the same as multiplying two times two times two.

10
00:00:40.950 --> 00:00:48.030
So we get eight or we could do things like four to the eighth power and numbers grow really big when

11
00:00:48.030 --> 00:00:49.350
we start using X minutes.

12
00:00:49.350 --> 00:00:54.660
The other thing to note is that we can do square roots or other roots using the same operator but rather

13
00:00:54.660 --> 00:00:58.990
than raising something to a whole number we raise it to a decimal or fractional number.

14
00:00:59.220 --> 00:01:08.110
So something like forty nine to the zero point five gives us seven.

15
00:01:08.700 --> 00:01:14.460
So that's taking the square root of 49 which gives us 7 because this is a float we get a float back

16
00:01:14.880 --> 00:01:16.210
if this is all new to you.

17
00:01:16.440 --> 00:01:19.710
It's not really important to this course to be honest but just good to know.

18
00:01:19.970 --> 00:01:22.820
So moving on next we have Margiela up.

19
00:01:22.860 --> 00:01:26.010
Now this is one that we actually probably will use at some point.

20
00:01:26.190 --> 00:01:32.240
What it does is kind of like division but it's also known as the remaindered operator.

21
00:01:32.520 --> 00:01:38.220
So it takes two numbers and it will take one and divide it into the other number as many times as it

22
00:01:38.220 --> 00:01:41.080
can without becoming fractional.

23
00:01:41.160 --> 00:01:43.440
And then it will give us the remainder.

24
00:01:43.440 --> 00:01:49.130
So as an example and make some space here let's say that I have 10.

25
00:01:49.470 --> 00:01:53.740
And a lot of people say maade sort of Maggiolo a modulus.

26
00:01:53.820 --> 00:01:56.330
So 10 maade three.

27
00:01:56.340 --> 00:01:56.850
OK.

28
00:01:56.940 --> 00:02:01.200
So three can go into ten three times.

29
00:02:01.230 --> 00:02:01.570
Right.

30
00:02:01.590 --> 00:02:03.780
Because three times three is nine.

31
00:02:03.780 --> 00:02:05.340
Any other time after that.

32
00:02:05.520 --> 00:02:06.510
It's larger than 10.

33
00:02:06.510 --> 00:02:10.850
So it goes in three times and then the remainder is 1.

34
00:02:11.290 --> 00:02:13.360
So we get one.

35
00:02:13.360 --> 00:02:14.930
It gives us the remainder.

36
00:02:15.280 --> 00:02:20.830
So another example let's do 25 rod four.

37
00:02:20.980 --> 00:02:23.800
So how many times does four go into 25.

38
00:02:23.830 --> 00:02:29.390
The closest thing is going to be six so six times for 24 so the remainder is 1.

39
00:02:29.410 --> 00:02:34.230
So it's commonly used to do things like figure out if a number is even or odd.

40
00:02:34.240 --> 00:02:41.120
So take a number like 13 and you modulo by two numbers even it's divisible by 2.

41
00:02:41.350 --> 00:02:42.200
13 is not.

42
00:02:42.250 --> 00:02:49.070
So it has a remainder of 1 but something like 16 to goes in eight times.

43
00:02:49.090 --> 00:02:50.430
So the remainder is zero.

44
00:02:50.680 --> 00:02:53.730
So this like I said is use to figure out if numbers are even or odd.

45
00:02:53.920 --> 00:02:56.760
Which is actually surprisingly often in programming.

46
00:02:56.800 --> 00:03:04.250
It's really the only time that I use it is something made to of course we know we're typing 16 and 13.

47
00:03:04.300 --> 00:03:06.140
We know if there even or odd from the outset.

48
00:03:06.280 --> 00:03:11.500
But shortly we'll be working with variables and this data won't be something that is hard coded in.

49
00:03:11.710 --> 00:03:11.910
OK.

50
00:03:11.920 --> 00:03:13.830
So that's monor modulus.

51
00:03:13.900 --> 00:03:20.250
It's known as the remainder operator or the final weird operator is integer division 2 slashes.

52
00:03:20.500 --> 00:03:26.680
So recall when or did something like 10 divided by three we get three point 3 3 3 3 3.

53
00:03:26.920 --> 00:03:33.460
And even though these are two integers 10 and 3 we get a float back because Python does that by default

54
00:03:33.970 --> 00:03:34.870
regular division.

55
00:03:34.870 --> 00:03:39.840
Whether you give it floats or integers it's going to return a float.

56
00:03:40.030 --> 00:03:44.590
But if we don't want that we can do 10 slash slash three.

57
00:03:44.620 --> 00:03:47.580
And what this will do is do the division.

58
00:03:47.590 --> 00:03:50.040
It just gives us an int in return.

59
00:03:50.050 --> 00:03:51.900
So no float just an int.

60
00:03:51.910 --> 00:03:57.060
So let's just try a couple of others let's do six divided by seven double slash.

61
00:03:57.220 --> 00:03:59.000
You see it gives us zero.

62
00:03:59.080 --> 00:04:02.600
So it rounds down chops off a decimal point.

63
00:04:02.600 --> 00:04:02.830
All right.

64
00:04:02.890 --> 00:04:06.910
So not that commonly used to be honest but it's good to know that it does exist.

65
00:04:07.030 --> 00:04:12.400
If there's ever a time you don't want a float as a result from division you can use integer division.

66
00:04:12.400 --> 00:04:15.190
All right so that wraps up these three wonky ones.

67
00:04:15.190 --> 00:04:19.470
So we have exponentiation which we can use to square arrays.

68
00:04:19.470 --> 00:04:25.420
Number two a power we can also use it to find the root of a number square root cubic root whatever we

69
00:04:25.420 --> 00:04:28.210
have modulo which is probably the most foreign one.

70
00:04:28.240 --> 00:04:32.970
If you've never program before it's known as the remainder operator and then we have integer division

71
00:04:33.070 --> 00:04:36.310
works just like division except it doesn't give us a float.

72
00:04:36.310 --> 00:04:38.070
It gives us an integer at the end.

73
00:04:38.200 --> 00:04:40.370
So that wraps up the math part of this course.

74
00:04:40.540 --> 00:04:43.060
Quick hopefully somewhat painless.

75
00:04:43.360 --> 00:04:47.110
Now I have a super quick quiz it's only three questions so really quick.

76
00:04:47.110 --> 00:04:51.700
Honestly the most important part from this entire section is just being comfortable with the differences

77
00:04:51.700 --> 00:04:53.490
between ints and floats.

78
00:04:53.680 --> 00:04:57.690
So do a quiz and then you will move on and it will be better it won't be math.

79
00:04:57.700 --> 00:04:59.380
And hopefully we're all happier.

80
00:04:59.380 --> 00:05:00.490
All right see in the next section.
