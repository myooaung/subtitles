1
00:00:07,100 --> 00:00:10,050
Hello this is Carol from Foxborough dot com.

2
00:00:10,100 --> 00:00:15,420
And welcome back to the series of tutorials on em kill for programming for complete beginners.

3
00:00:15,590 --> 00:00:18,610
And today we're going to be talking about the if statement.

4
00:00:18,740 --> 00:00:24,350
I'm really excited about this title and that's because we're finally going to get a chance to work with

5
00:00:24,350 --> 00:00:31,580
some charts and some prizes and see how we can apply all this programming knowledge that we've already

6
00:00:31,580 --> 00:00:37,620
accumulated in a real life scenario on the real Forex market.

7
00:00:38,090 --> 00:00:41,790
And it's all pretty basic but at the same time is going to be really fun.

8
00:00:42,020 --> 00:00:43,820
So let's get straight into it.

9
00:00:45,170 --> 00:00:51,940
Now in the previous couple of Toro's we had a close look at the While loop and the for loop.

10
00:00:52,340 --> 00:00:56,960
And because of that we also looked at logical expressions and boolean variables.

11
00:00:56,990 --> 00:00:59,640
And that's something that we need today again.

12
00:00:59,930 --> 00:01:02,940
So let's quickly recap on that.

13
00:01:03,090 --> 00:01:12,320
So let's create a more simple boolean variable and we'll call it condition or call for short and we'll

14
00:01:12,500 --> 00:01:19,850
assign this variable the result of the following check 5 is greater than 4.

15
00:01:19,910 --> 00:01:29,810
So as we know this expression will be replaced with one of the only two possible boolean values true

16
00:01:30,170 --> 00:01:31,220
or false.

17
00:01:31,220 --> 00:01:34,670
So in this case because 5 is actually greater than 4.

18
00:01:34,910 --> 00:01:43,970
This expression will be replaced with true and then true will be assigned to QAnd and we can check that

19
00:01:43,970 --> 00:01:47,370
by just using a simpler alert.

20
00:01:47,720 --> 00:01:55,520
Compile that and go to the terminal Tauriel it call and as you can see it's true.

21
00:01:55,670 --> 00:01:56,810
That's great.

22
00:01:56,810 --> 00:02:02,670
Now let's look at another one which is a bit trickier.

23
00:02:03,600 --> 00:02:09,520
We're called Con 2 and here we'll check if three is actually called for.

24
00:02:09,630 --> 00:02:15,960
This one's a bit it might be a little bit confusing because of the double equal sign and the equal sign

25
00:02:15,960 --> 00:02:17,300
here as well.

26
00:02:17,340 --> 00:02:26,790
So the best way to look at it is that the double equal sign in Emco for has no association with the

27
00:02:26,790 --> 00:02:27,940
single equal sign.

28
00:02:27,940 --> 00:02:33,510
There are completely two different operate as we know the single equal sign is an assignment operator.

29
00:02:33,510 --> 00:02:41,550
It assigns the value on the right to the variable on the left are the double equal sign on the other

30
00:02:41,550 --> 00:02:44,610
hand is a logical operator.

31
00:02:44,790 --> 00:02:50,130
It checks whether the value on the left is actually equal to the value on the right.

32
00:02:50,190 --> 00:02:54,280
And so in this case because three does not equal to four.

33
00:02:54,390 --> 00:02:57,890
The result of this expression is false.

34
00:02:59,220 --> 00:03:08,540
And then falls is assigned to Cantor and we can also check that really it's a simple way sprint out

35
00:03:08,850 --> 00:03:14,120
to compile that and toilet as you can see we have two alerts.

36
00:03:14,130 --> 00:03:18,310
True and False and True is the first one false.

37
00:03:18,330 --> 00:03:22,860
Second on true and false just as we expected.

38
00:03:22,860 --> 00:03:31,470
So now we can move on to the if statement if statement is similar to the structure of the if statement

39
00:03:31,470 --> 00:03:37,460
is similar to the while loop and has three parts the word if.

40
00:03:38,020 --> 00:03:42,930
Then in the normal brackets you need to specify a condition that you would like to check.

41
00:03:42,930 --> 00:03:46,270
So let's check ten and five for example.

42
00:03:46,620 --> 00:03:57,300
And then based on the result of this check if it is true the program will execute the code in the current

43
00:03:57,310 --> 00:03:57,810
brackets.

44
00:03:57,810 --> 00:04:03,130
So here let's put something simple such as.

45
00:04:03,180 --> 00:04:06,430
The condition is true.

46
00:04:07,740 --> 00:04:16,100
And so compound that actually I'll get all of these two them out so they're not in the way comp. that.

47
00:04:16,230 --> 00:04:18,810
And let's see what we get.

48
00:04:18,810 --> 00:04:22,920
So is 10 grand and five condition is true.

49
00:04:22,920 --> 00:04:24,850
Yes 10 is Grade 5.

50
00:04:24,870 --> 00:04:26,220
Perfect.

51
00:04:26,220 --> 00:04:29,150
All right so that's how the if statement works.

52
00:04:29,160 --> 00:04:37,620
It allows you to isolate a block of code put it within these curly brackets and only allow the program

53
00:04:37,620 --> 00:04:41,000
to executed when a certain condition is met.

54
00:04:41,150 --> 00:04:47,960
What does that mean to you as a call for programmer for the Forex market.

55
00:04:48,240 --> 00:04:51,170
Well let's look at the chart here.

56
00:04:51,360 --> 00:05:01,830
This is the euro dollar H-1 and let's say for example you have identified a resistance line here

57
00:05:04,710 --> 00:05:08,230
correct those surround it.

58
00:05:08,330 --> 00:05:23,980
So 1 3 7 9 0 0 so we can see that this is actually a resistance line because price has bounced around

59
00:05:23,980 --> 00:05:26,000
it a couple of times.

60
00:05:26,360 --> 00:05:29,250
And currently the price is below it.

61
00:05:29,300 --> 00:05:40,520
And so you would like to say hypothetically you'd like to execute some code when the price whenever

62
00:05:40,520 --> 00:05:42,340
the price is below this line.

63
00:05:42,560 --> 00:05:46,510
So how would you tell your program to do that.

64
00:05:46,520 --> 00:05:47,270
It's very simple.

65
00:05:47,270 --> 00:05:54,080
So here in the if statement I'll just put this in comments.

66
00:05:54,220 --> 00:06:03,190
So we have a copy of that copy that an IF statement instead of this expression we we will need to look

67
00:06:03,190 --> 00:06:03,810
at the price.

68
00:06:03,820 --> 00:06:09,150
So to look at the current price we have to use the big variable.

69
00:06:09,310 --> 00:06:15,220
And this is an inbuilt variable which is always available and then kill for and you can access and access

70
00:06:15,220 --> 00:06:16,530
it whenever you want.

71
00:06:16,690 --> 00:06:19,060
It always represents the current bid price.

72
00:06:19,060 --> 00:06:23,320
So at this at this moment it's one point 3 7 5 4 7.

73
00:06:23,330 --> 00:06:25,990
And as you can see it's changing here.

74
00:06:25,990 --> 00:06:27,960
So that's the current bid price.

75
00:06:28,000 --> 00:06:37,810
Now you want to check if the current bid price is less than your designated supported resistance level

76
00:06:38,020 --> 00:06:42,400
in this case it's 1 point 3 7 9 0.

77
00:06:42,940 --> 00:06:51,350
And so if that is the case we would like to perform some sort of actions.

78
00:06:51,460 --> 00:06:58,020
Ideally it would be buy or sell or you know just a position or something like that.

79
00:06:58,180 --> 00:07:10,390
But in this case we'll just type in something simple like the bid price is low.

80
00:07:10,780 --> 00:07:25,210
All that said price is below 1 3 7 9 0 0 and we'll just print another one or actually here will print

81
00:07:25,210 --> 00:07:30,880
an alert before just to control that the bid is correct.

82
00:07:30,880 --> 00:07:33,000
So I'll say bid equals.

83
00:07:33,190 --> 00:07:40,990
And just as we did before we'll say string would convert a bit to a string.

84
00:07:42,190 --> 00:07:47,860
So this line will print the value of the bid and all showed on the screen and then if the bid is actually

85
00:07:47,870 --> 00:07:58,210
less than 1.3 So 9 0 0 then the alert will print out this message which in further tutorials we will

86
00:07:58,210 --> 00:08:03,000
learn how to replace were actual actions on the forex market.

87
00:08:03,010 --> 00:08:14,460
So let's compile that and launched Tauriel it and then we got so big is 1.3 7 5 3 7 1 3 7 5 3 7.

88
00:08:14,920 --> 00:08:20,910
And the price is below 1 3 7 9 0 0 which is correct.

89
00:08:21,790 --> 00:08:23,550
So there we go.

90
00:08:23,680 --> 00:08:28,400
That is how we use if statements in and kill for.

91
00:08:28,900 --> 00:08:38,260
It's a really powerful tool and will handle the bulk of your decision making in Forex automated trading

92
00:08:38,260 --> 00:08:39,280
systems.

93
00:08:39,430 --> 00:08:47,560
And so this source code and more tutorials are available on forums about dot com.

94
00:08:47,560 --> 00:08:49,330
Hope you enjoyed this and

95
00:08:52,150 --> 00:08:55,570
I hope you can also join me for the next Tauriel until then.

96
00:08:55,570 --> 00:08:55,890
CONAN.
