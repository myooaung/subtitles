1
00:00:05,310 --> 00:00:09,810
Welcome back everyone in this lecture we're going to go over the solutions for the python text basics

2
00:00:09,900 --> 00:00:10,860
assessment.

3
00:00:10,920 --> 00:00:11,770
Let's get started.

4
00:00:11,940 --> 00:00:12,170
OK.

5
00:00:12,170 --> 00:00:17,100
Here we are at the python text basics assessment notebook and if you come down the first question was

6
00:00:17,270 --> 00:00:21,600
print an F string that displays and piece stands for natural language processing.

7
00:00:21,660 --> 00:00:23,280
So this one is pretty easy.

8
00:00:23,340 --> 00:00:29,610
We just need to say print and then put an F in front of a string and then we can insert the variables.

9
00:00:29,610 --> 00:00:36,300
So we're going to insert that abbreviation and then say stands for and then we'll answer for underscore

10
00:00:36,410 --> 00:00:37,240
text.

11
00:00:37,450 --> 00:00:42,000
If we run that you should get the result and all P stands for natural language processing just using

12
00:00:42,000 --> 00:00:46,440
an F in front of a string and then inside the curly braces passing in whatever variable name you want

13
00:00:46,440 --> 00:00:49,230
to insert next we want to create a file.

14
00:00:49,230 --> 00:00:52,630
So we just had to run the cell that does it automatically for us.

15
00:00:52,770 --> 00:00:57,080
Then we wanted to open the file and use that read to save the contents of the file to a string.

16
00:00:57,510 --> 00:00:59,260
So there's different ways we can do this.

17
00:00:59,280 --> 00:01:01,220
We're going to use the with operator.

18
00:01:01,380 --> 00:01:06,130
We'll say it with open and then we'll open contact stop t x T.

19
00:01:07,670 --> 00:01:09,090
And we'll say as.

20
00:01:09,090 --> 00:01:17,630
And you can really call this if you want can say as F will say Fields is equal to and then we'll say

21
00:01:17,690 --> 00:01:18,890
F that read.

22
00:01:19,370 --> 00:01:22,600
So if you run that let's go ahead to make two cells here.

23
00:01:22,820 --> 00:01:29,720
If you're able to run this then when you call fields outside of that you should see fields is now this

24
00:01:29,840 --> 00:01:30,430
large string.

25
00:01:30,440 --> 00:01:32,080
First name last name title.

26
00:01:32,120 --> 00:01:32,820
Extension.

27
00:01:32,820 --> 00:01:34,320
Email.

28
00:01:34,500 --> 00:01:36,970
Next we're going to work with files.

29
00:01:37,050 --> 00:01:43,630
So the first thing is to actually import PI PDAF to that we want to open the file.

30
00:01:43,650 --> 00:01:45,620
Remember we need to open it with our B.

31
00:01:45,780 --> 00:01:47,250
So say F is equal to open

32
00:01:49,950 --> 00:01:57,260
business proposal and you can actually use tab to autocomplete this and then say mode is RB then we're

33
00:01:57,260 --> 00:01:59,830
going to use pi PTF to read the text of the file.

34
00:01:59,840 --> 00:02:08,960
So create this idea for object and say pi PTF to and then call PTF file reader.

35
00:02:08,960 --> 00:02:15,420
So save file reader and then pass an F there and then get the page from text too.

36
00:02:15,440 --> 00:02:18,440
So Page two text is equal to pedia reader.

37
00:02:19,130 --> 00:02:24,500
And then we're going to get page and the challenge to do this in one step so you can actually change

38
00:02:24,500 --> 00:02:27,550
the methods off each other and to get page number two.

39
00:02:27,650 --> 00:02:34,250
We're going to index at once indexing starts at zero and then we're going to call extract loops extract

40
00:02:34,250 --> 00:02:41,720
text and you can do this in one step or two steps so I'm just chaining off the methods and then we want

41
00:02:41,720 --> 00:02:42,520
to close the file.

42
00:02:42,590 --> 00:02:46,160
So I'll say F but close and then we'll print the contents.

43
00:02:46,190 --> 00:02:54,390
Print page 2 text and if you run this you should see these authors along with some emails next to open

44
00:02:54,390 --> 00:03:00,590
the file contacts t XTi and append mode and add the text of page to from above to the contacts start

45
00:03:00,590 --> 00:03:02,100
to XTi.

46
00:03:02,120 --> 00:03:09,970
So a simple solution for this could just be with open contact stop XTi.

47
00:03:10,700 --> 00:03:12,500
And then we're going to open it in mode.

48
00:03:12,540 --> 00:03:23,920
A plus and we'll say as well go ahead and write that page to text and then we're going to seek back

49
00:03:23,920 --> 00:03:25,200
to zero.

50
00:03:25,270 --> 00:03:30,640
Just so I can print this out to confirm that if I read it I see the actual extension.

51
00:03:30,640 --> 00:03:36,870
So technically you don't need to seek or read this is just so I can confirm that I get to see this output.

52
00:03:36,940 --> 00:03:41,860
So if I run this notice now how I see the output of the original context that textfile.

53
00:03:41,980 --> 00:03:46,570
And now I also see the appendant information here from that pedia file.

54
00:03:46,590 --> 00:03:50,700
Now there was a challenge to this question which was to see if you can remove the word authors.

55
00:03:50,890 --> 00:03:55,340
So right now we actually don't have the authors who just have their e-mail here.

56
00:03:55,450 --> 00:04:00,370
So it might be nice to be able to remove authors and then just have email as a last one because it's

57
00:04:00,370 --> 00:04:03,160
kind of almost building out a CSP file.

58
00:04:03,190 --> 00:04:10,570
So the way we can do that is if we come back up here we can rerun contacts that cxi to essentially get

59
00:04:10,630 --> 00:04:17,500
a fresh version of this file and then when it come down here and then we want to remove authors because

60
00:04:17,500 --> 00:04:21,010
it showed up here in page to that text.

61
00:04:21,100 --> 00:04:32,780
So the way we can do that is we can say with open contacts DXi and then a plus open it as whatever file

62
00:04:32,780 --> 00:04:39,870
name you want and then I'm going to write page to text but I'm going to use string indexing taxes start

63
00:04:39,870 --> 00:04:46,830
grabbing at the eighth exposition onwards which is essentially everything after authors from this text

64
00:04:46,830 --> 00:04:47,390
right here.

65
00:04:47,400 --> 00:04:50,550
So just these three lines instead of this right here.

66
00:04:50,550 --> 00:04:54,980
So that or move authors from being appended a scene they're going to write that.

67
00:04:55,080 --> 00:04:56,660
And then let's try this again.

68
00:04:57,050 --> 00:05:02,050
I'll seek a zero and then print out after read.

69
00:05:02,290 --> 00:05:04,530
And when you run that now I don't see the authors there.

70
00:05:04,530 --> 00:05:09,300
So that's a little challenge basically figuring out how to actually take that slice and remove author's

71
00:05:11,180 --> 00:05:11,590
OK.

72
00:05:11,590 --> 00:05:16,630
The last question was using the page to text variable create above extract any email addresses that

73
00:05:16,630 --> 00:05:19,570
were contained in the file business proposal that pedia.

74
00:05:19,810 --> 00:05:22,580
Now there's actually a lot of different ways you can build out a regular expression.

75
00:05:22,750 --> 00:05:27,020
And as long as you get these three email addresses you should be good in whatever method you used.

76
00:05:27,040 --> 00:05:28,630
But let's go ahead and break this down.

77
00:05:28,630 --> 00:05:30,070
What are we actually looking for.

78
00:05:30,070 --> 00:05:34,140
We're looking for a set of alphanumerics then an alpha symbol.

79
00:05:34,280 --> 00:05:41,080
Another set of alphanumerics ADOT and then a set of three letters essentially dot net or dot com et

80
00:05:41,080 --> 00:05:41,890
cetera.

81
00:05:41,890 --> 00:05:44,030
So how can we actually build this out.

82
00:05:44,200 --> 00:05:45,620
Well first start up with our.

83
00:05:45,630 --> 00:05:47,210
And then I'll start building up my string.

84
00:05:47,350 --> 00:05:50,430
So I'm looking for a set.

85
00:05:50,550 --> 00:05:55,860
So we'll say in the square Brace's of a plus sign backslash W..

86
00:05:55,860 --> 00:06:01,220
And then I'm looking for an at symbol and then another set of letters.

87
00:06:01,350 --> 00:06:04,750
We don't know how long they're going to be which is why we're using the braces and the plus sign.

88
00:06:05,160 --> 00:06:14,890
And then we're going to say a dot and then a backslash w and then a set of curly braces for three because

89
00:06:14,890 --> 00:06:17,010
I'm looking for three on this last one.

90
00:06:17,140 --> 00:06:19,460
Such as dot net dot com etc..

91
00:06:19,660 --> 00:06:25,760
So when you run this you should then be able to get out this output of these three emails of mine.

92
00:06:25,770 --> 00:06:27,420
There are several ways you could have done this.

93
00:06:27,440 --> 00:06:31,120
The expressions are actually quite versatile and they're actually even quite flexible.

94
00:06:31,120 --> 00:06:36,610
So for instance could have edited this to be some other sort of regex pattern that also would've worked

95
00:06:36,610 --> 00:06:37,450
for us.

96
00:06:37,480 --> 00:06:42,260
So if you figure out this exact pattern but still got the right results that's totally OK.

97
00:06:42,730 --> 00:06:43,330
Okay.

98
00:06:43,330 --> 00:06:44,760
So I hope you found that useful.

99
00:06:44,830 --> 00:06:49,240
And now we're finished with Paice on text basics so we can begin moving on with natural language processing

100
00:06:49,240 --> 00:06:51,710
basics and learning about the Speccy Library.

101
00:06:51,880 --> 00:06:53,620
We'll see at the next section of the course.

