1
00:00:05,380 --> 00:00:10,080
Welcome back to part two of the vocabulary in matching lecture in this lecture.

2
00:00:10,090 --> 00:00:12,090
We're going to go over a phrase matching.

3
00:00:12,160 --> 00:00:14,320
Let's hop over to a notebook where we left off last time.

4
00:00:14,400 --> 00:00:14,620
OK.

5
00:00:14,620 --> 00:00:19,930
Here we are at the previous notebook now in the previous lecture we saw how we can use token patterns

6
00:00:19,930 --> 00:00:26,320
to perform rule based matching in alternative and often more efficient method is to actually match on

7
00:00:26,320 --> 00:00:32,380
a terminology list and in that case we're going to use a phrase matcher in order to create a document

8
00:00:32,410 --> 00:00:36,320
object from a list of phrases and past that into the matcher instead.

9
00:00:36,430 --> 00:00:38,060
Let me show you how that works.

10
00:00:38,110 --> 00:00:43,830
Previously we said from Spacey dot matcher import matcher.

11
00:00:43,900 --> 00:00:50,180
But in this case we're going to say import phrase Mecir and we'll create a metric object from that will

12
00:00:50,180 --> 00:00:52,070
say Free's matter.

13
00:00:52,070 --> 00:00:55,970
And just like before we pasand the vocab.

14
00:00:55,970 --> 00:01:00,290
And for this exercise we're going to import Wikipedia article on Reagonomics.

15
00:01:00,290 --> 00:01:06,380
So we have the source here in the actual link if you scroll down here you'll see a link to the Wikipedia

16
00:01:06,380 --> 00:01:07,020
article.

17
00:01:07,070 --> 00:01:08,670
But we actually saved it for you already.

18
00:01:08,700 --> 00:01:09,840
And textfiles.

19
00:01:10,010 --> 00:01:12,460
So if you're actually looking in the downloaded text files.

20
00:01:12,500 --> 00:01:15,200
So here it downloaded files go to text files.

21
00:01:15,200 --> 00:01:18,030
There should be a Reaganomics t x t.

22
00:01:18,050 --> 00:01:20,000
So that's the file We're going to be referencing.

23
00:01:20,000 --> 00:01:22,600
Make sure you passen the entire file path to that.

24
00:01:22,610 --> 00:01:24,960
So let's go ahead and use that file.

25
00:01:25,040 --> 00:01:36,670
We're going to say with open and Tex files dot Reagonomics you should be able to tab autocomplete if

26
00:01:36,670 --> 00:01:40,450
you're not able to have autocomplete it means you're not in the correct directory and just pasand the

27
00:01:40,450 --> 00:01:44,170
entire file path instead will say as f..

28
00:01:44,500 --> 00:01:52,090
Go ahead and say Doc three is equal to an LP and we're going to read in that file as one long string

29
00:01:52,180 --> 00:01:57,480
essentially passing the entire string of this Reagonomics text file into this document.

30
00:01:58,210 --> 00:02:04,750
So run that and then let's imagine we want to look for several phrases we can do is first create a list

31
00:02:04,750 --> 00:02:05,830
of those phrases.

32
00:02:06,040 --> 00:02:10,510
So maybe you're trying to study Reagonomics and you don't remember what specific term of economics they

33
00:02:10,510 --> 00:02:11,320
used.

34
00:02:11,320 --> 00:02:15,240
Maybe you thought it was called voodoo economics.

35
00:02:15,240 --> 00:02:21,470
Or maybe you thought it was called supply side economics.

36
00:02:22,060 --> 00:02:30,530
And let's also do a couple more like trickle down economics and let's add one more into free market

37
00:02:30,530 --> 00:02:31,230
economics.

38
00:02:31,250 --> 00:02:38,110
Free market economics economics.

39
00:02:38,150 --> 00:02:38,840
OK.

40
00:02:38,840 --> 00:02:39,800
So go in and run that.

41
00:02:39,920 --> 00:02:41,600
So you're trying to do a study of economics.

42
00:02:41,620 --> 00:02:44,090
I don't quite remember what the actually economics term was.

43
00:02:44,210 --> 00:02:46,650
She created a little list of phrases to search.

44
00:02:46,670 --> 00:02:52,400
Next we're going to do is convert each phrase to a document object and we can do this efficiently simply

45
00:02:52,400 --> 00:03:03,590
by using a list comprehension we'll say phrase patterns is equal to an LP text for text in phrase list.

46
00:03:03,770 --> 00:03:08,890
So all we're doing is for each of these pieces attacks inside of the phrase list we're making it into

47
00:03:08,900 --> 00:03:09,930
its own document object.

48
00:03:09,920 --> 00:03:15,840
So essentially have a list of a bunch of docs and phrase patterns then we're going to pass each doc

49
00:03:15,900 --> 00:03:23,550
object into the matcher so I'll say matcher add and then we can call this whatever we want so we can

50
00:03:23,550 --> 00:03:31,870
say Econ. matcher we're not going to have a callback here and then we're going to pasan each pattern

51
00:03:31,870 --> 00:03:33,120
inside this list.

52
00:03:33,160 --> 00:03:39,880
So if we actually check out what this list looks like phrase patterns it's going to look like a bunch

53
00:03:39,970 --> 00:03:42,210
of strings but not strings.

54
00:03:42,250 --> 00:03:48,680
Notice that we actually grab one of them and check the type it's a spacey doc.

55
00:03:48,690 --> 00:03:51,610
That's why I didn't see any quotes there when we actually output it.

56
00:03:51,630 --> 00:03:57,930
So in order to insert each baby doc when you do is put an asterix here and then we can provide each

57
00:03:57,930 --> 00:04:03,180
of them a little bit of short term that if you're familiar of some more advanced functionality of Python

58
00:04:03,600 --> 00:04:09,980
This is kind of keyword arguments and you can pass those in or you can just do Asterix args kind of

59
00:04:10,020 --> 00:04:12,130
same thing here.

60
00:04:12,240 --> 00:04:17,520
This essentially graps each document and passes in individually into this matter as a pattern.

61
00:04:17,780 --> 00:04:21,370
And then what we need to do is actually build a list of matches.

62
00:04:21,500 --> 00:04:28,880
So we're going to say matches or found matches is equal to match her and let's pass in the original

63
00:04:28,880 --> 00:04:34,900
document that we're trying to search which is this Reaganomics textfile doc three so we passed it Doc

64
00:04:34,920 --> 00:04:42,590
three here and then let's check out the found matches so notice it found lots of matches and we can

65
00:04:42,590 --> 00:04:47,410
actually again if we come back up here member we had that for loop.

66
00:04:47,480 --> 00:04:52,790
So we can just copy this and paste it in here.

67
00:04:54,020 --> 00:05:00,980
Run it and it'll show us where it's actually matching and and currently we actually provided the wrong

68
00:05:00,980 --> 00:05:01,340
doc.

69
00:05:01,340 --> 00:05:02,350
We said Doc here.

70
00:05:02,360 --> 00:05:05,050
So let's say Doc three run that.

71
00:05:05,150 --> 00:05:11,210
And now we see the actual matches match on supply side trickle down voodoo free market supply side and

72
00:05:11,240 --> 00:05:12,160
trickle down.

73
00:05:12,170 --> 00:05:14,850
So I had a little typo there because I directly copied and pasted.

74
00:05:14,880 --> 00:05:17,420
There were actually search in the updated documents.

75
00:05:17,420 --> 00:05:17,960
OK.

76
00:05:18,260 --> 00:05:22,440
So there we saw how we can easily create a list of phrases to match on.

77
00:05:22,670 --> 00:05:26,510
And then there's some kind of convenience code and if you want to just copy and paste this convenience

78
00:05:26,510 --> 00:05:28,850
code you can check up vocabulary and matching.

79
00:05:28,850 --> 00:05:32,480
Scroll down and we have the cell that essentially does all of this for you.

80
00:05:32,510 --> 00:05:36,870
It's the same code we wrote but it's in one cell you can easily copy and paste.

81
00:05:36,890 --> 00:05:37,790
All right.

82
00:05:37,790 --> 00:05:42,230
Now again if you want to view the matches all you need to do is copy paste this for loop that we showed

83
00:05:42,230 --> 00:05:44,640
here and actually provide the correct documents.

84
00:05:46,200 --> 00:05:51,960
If you actually want to grab the context of the document where you can do is subtract a little bit from

85
00:05:51,960 --> 00:05:54,160
your start and add a little bit to your end.

86
00:05:54,360 --> 00:05:58,800
So what I mean by that is maybe you say start minus five tokens back.

87
00:05:58,980 --> 00:06:01,820
An end is plus five tokens forward.

88
00:06:01,950 --> 00:06:06,510
And this is actually going to give you the tokens surrounding the term you're looking for.

89
00:06:06,510 --> 00:06:12,590
So when you run this it's going to give you essentially the sentence so policies are commonly associated

90
00:06:12,590 --> 00:06:15,360
with supply side economics referred to as trickle.

91
00:06:15,410 --> 00:06:20,600
And you can if you want to keep going past that could add more to the end and it will keep giving you

92
00:06:20,600 --> 00:06:21,590
more and more.

93
00:06:21,620 --> 00:06:27,170
So again you can mess around at the start and end to grab parts of the actual tax.

94
00:06:27,170 --> 00:06:28,700
So a very useful tool.

95
00:06:29,100 --> 00:06:29,780
OK.

96
00:06:29,900 --> 00:06:35,360
So that's it for this lecture and hopefully now you can see how you can easily use phrase matching as

97
00:06:35,360 --> 00:06:37,390
well as basic token matching.

98
00:06:37,400 --> 00:06:40,520
Coming up next is going to be your assessment to test your new skills.

99
00:06:40,520 --> 00:06:41,530
We'll see you at the next lecture.

