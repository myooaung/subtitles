WEBVTT
1
00:00:00.570 --> 00:00:04.920
Hello and welcome back to the course on deep learning I hope you're tracking along with these intuition

2
00:00:04.920 --> 00:00:10.950
tutorials just fine and that you had a chance to play around with everything we've learned so far and

3
00:00:11.010 --> 00:00:15.930
today we're talking about flattening and the good news is that this is a very simple step and this tutorial

4
00:00:15.930 --> 00:00:21.900
is going to be very quick and then we'll be able to move on to the next interesting things.

5
00:00:21.900 --> 00:00:28.830
All right so we so far we've got the pulled Lehre pulled feature map and that is after we apply the

6
00:00:28.830 --> 00:00:34.020
convolution operation to our image and then we apply pooling to the result of the collision which the

7
00:00:34.020 --> 00:00:35.120
involved image.

8
00:00:35.140 --> 00:00:37.460
And so what are we going to do if this puled feature map.

9
00:00:37.590 --> 00:00:41.380
Well we're going to take it and we're going to flatten it into a column.

10
00:00:41.640 --> 00:00:47.130
So basically just take the numbers row by row and put them into this one long column.

11
00:00:47.190 --> 00:00:53.670
And the reason for that is because we want to later input this into an artificial neural network for

12
00:00:53.670 --> 00:00:55.310
further processing.

13
00:00:55.320 --> 00:00:59.850
So this is what it looks like when you have many pooling layers or you have the pulling levers with

14
00:00:59.850 --> 00:01:07.890
many puled feature maps and then you flatten them so you put them into this one long column sequentially

15
00:01:07.890 --> 00:01:15.230
one after the other and you get one huge vector of inputs for an artificial neural network.

16
00:01:15.450 --> 00:01:19.220
And so to sum all this up we've got an input image.

17
00:01:19.410 --> 00:01:27.340
We apply a convolutional there and let's not forget the reals or rectified rectified linear units function

18
00:01:27.350 --> 00:01:29.920
that we apply after the revolution there as well.

19
00:01:30.060 --> 00:01:39.330
And then we apply pooling and then we flatten everything into a long vector which will be our input

20
00:01:39.420 --> 00:01:47.210
layer for an artificial neural network and exactly how that works we'll find out in the next tutorial.

21
00:01:47.220 --> 00:01:50.010
Hope you enjoyed today's session and looked forward to you next time.

22
00:01:50.010 --> 00:01:51.720
Until then enjoy deep learning.
