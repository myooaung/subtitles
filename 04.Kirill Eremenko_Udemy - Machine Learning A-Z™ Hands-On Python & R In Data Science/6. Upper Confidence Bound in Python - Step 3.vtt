WEBVTT
1
00:00:00.300 --> 00:00:01.290
Hello my friends.

2
00:00:01.290 --> 00:00:01.790
All right.

3
00:00:01.780 --> 00:00:06.410
Let us start the implementation of the upper confidence balance algorithm.

4
00:00:06.810 --> 00:00:12.690
So we're gonna make it step by step and you're going to implement each of the steps first before we

5
00:00:12.690 --> 00:00:13.840
do it together.

6
00:00:13.840 --> 00:00:14.700
And that first step.

7
00:00:14.790 --> 00:00:18.930
You know I've prepared this slide here we're going to have a look at it many times.

8
00:00:18.930 --> 00:00:25.050
The first step is that at each round you know for each user because a round corresponds to a user we

9
00:00:25.050 --> 00:00:27.530
consider two numbers for each add.

10
00:00:27.540 --> 00:00:34.830
I know from one to 10 this first number and i n which is the number of times to add I was selected up

11
00:00:34.830 --> 00:00:41.190
to round and so make sure to understand the indexes here and the variables and then are i n which is

12
00:00:41.190 --> 00:00:45.140
the sum of reward of the add number I up to round.

13
00:00:45.600 --> 00:00:50.190
Okay so the first step that I would like you to do you know and I'm going to ask you to press buzz on

14
00:00:50.190 --> 00:00:51.150
this video.

15
00:00:51.150 --> 00:00:56.760
The first item I'm going to ask you to do is to make these two variables you know create two variables

16
00:00:56.940 --> 00:01:03.030
for these numbers the number of times that I was selected up to round n and the sum of rewards of that

17
00:01:03.120 --> 00:01:04.190
I up to round it.

18
00:01:04.680 --> 00:01:10.770
So create these two variables and then also in the same step one I would like you to create other variables.

19
00:01:10.770 --> 00:01:16.710
The first one is the total number of users to whom we will show one of the ads and that's 10000.

20
00:01:16.710 --> 00:01:22.980
So I would like you to put this 10000 value in a variable that you can call capital N then I would like

21
00:01:22.980 --> 00:01:28.650
you to create another variable for the number of ads we have meaning 10 and you can call this variable

22
00:01:28.890 --> 00:01:36.300
lowercase d after this please create a variable that will contain the list of the selected ads over

23
00:01:36.300 --> 00:01:42.630
the round so you know it will start as an empty list and will become a D and a list of thousand elements

24
00:01:42.660 --> 00:01:49.620
corresponding to the 10000 ads that were selected to the 10000 users successively then please create

25
00:01:49.620 --> 00:01:50.990
these two variables.

26
00:01:51.000 --> 00:01:57.000
So this first one and i n you can call it numbers of selections and you have to of course initialize

27
00:01:57.000 --> 00:02:01.500
it as a list of 10 elements only containing zeros.

28
00:02:01.530 --> 00:02:06.570
And I will show you a trick to do that easily and for the second variable are I and you can call it

29
00:02:06.660 --> 00:02:13.230
sums of rewards and same you have to initialize it as a list of 10 elements but initialized with 10

30
00:02:13.350 --> 00:02:16.750
zeros and we will populate these two lists over the rounds.

31
00:02:16.770 --> 00:02:17.540
Okay.

32
00:02:17.550 --> 00:02:23.100
And finally I'd like you to create one last variable which is the total reward and which will simply

33
00:02:23.100 --> 00:02:30.510
be the sum of all the reward received at each round because it's important to remember that the zeros

34
00:02:30.570 --> 00:02:34.010
and ones in the dataset are in fact the rewards.

35
00:02:34.020 --> 00:02:40.470
You know the single rewards received at each round if the user clicks the ad then we get a reward of

36
00:02:40.470 --> 00:02:41.880
one at a particular round.

37
00:02:42.060 --> 00:02:46.050
And if the user doesn't leave yet we get a reward of zero.

38
00:02:46.050 --> 00:02:47.570
We get no reward basically.

39
00:02:47.600 --> 00:02:48.180
Okay.

40
00:02:48.240 --> 00:02:53.700
And the total reward here that I would like you to create as a final variable will be the accumulated

41
00:02:53.700 --> 00:02:58.170
reward meaning the sum of all the rewards collected over the round.

42
00:02:58.170 --> 00:02:58.560
All right.

43
00:02:58.950 --> 00:03:05.040
So let's do this please press pause on the video and in a second we will implement a solution together

44
00:03:06.630 --> 00:03:07.170
all right.

45
00:03:07.170 --> 00:03:07.830
Welcome back.

46
00:03:07.980 --> 00:03:15.180
Let's do this so first let's create a new Kotel and let us create each of these variables one by one.

47
00:03:15.180 --> 00:03:20.400
So at first we said that we wanted to have a variable for the total number of users or total number

48
00:03:20.400 --> 00:03:23.600
of rounds over which we're going to show adds to the users.

49
00:03:23.610 --> 00:03:29.580
So there we go we want to call it n capital and equals and that's ten thousand.

50
00:03:29.580 --> 00:03:30.130
All right.

51
00:03:30.140 --> 00:03:30.750
Ten thousand.

52
00:03:30.750 --> 00:03:31.490
Yes.

53
00:03:31.590 --> 00:03:36.430
Then we said we wanted to have a variable for the number of add meaning 10.

54
00:03:36.540 --> 00:03:40.660
And we want to call it variable lowercase d equals 10.

55
00:03:40.830 --> 00:03:41.720
Perfect.

56
00:03:41.790 --> 00:03:47.700
Then as we said we want to have the full list of the ads that are selected over the round so you know

57
00:03:47.700 --> 00:03:49.350
at first this will be an empty list.

58
00:03:49.350 --> 00:03:51.870
And over the rounds it will get bigger and bigger.

59
00:03:51.870 --> 00:03:56.030
Up to at the end it will be a list of 10000 elements.

60
00:03:56.100 --> 00:04:00.020
And the end element will be the ad selected at round.

61
00:04:00.030 --> 00:04:00.660
All right.

62
00:04:00.660 --> 00:04:04.420
So we're going to call this variable at underscore selected.

63
00:04:04.650 --> 00:04:09.780
And this will be initialized as an empty list just like that at selected.

64
00:04:09.900 --> 00:04:16.650
All right then next one while the next two ones are these two you know and i n number of times the ad

65
00:04:16.740 --> 00:04:22.590
I was selected at around n and r i n the sum of rewards of the ad I up to round n.

66
00:04:22.590 --> 00:04:28.710
So for the first one we will call it numbers of selections.

67
00:04:28.710 --> 00:04:34.530
And since we want to have these numbers of selections you know these numbers of times each ad was selected

68
00:04:34.620 --> 00:04:35.910
for all the ads.

69
00:04:35.940 --> 00:04:43.040
Well this will be initialized as a list but not an empty list but a list of 10 zeros.

70
00:04:43.080 --> 00:04:49.990
And the trick to initialize this list of 10 zeroes efficiently is to just adhere Times T.

71
00:04:50.100 --> 00:04:50.590
All right.

72
00:04:50.640 --> 00:04:55.020
Just like that this will initialize this list as a list of 10 zeros.

73
00:04:55.020 --> 00:04:58.390
And then each time we select an ad for example ad number three.

74
00:04:58.410 --> 00:05:02.130
Well the third element of this list will be incremented by 1.

75
00:05:02.130 --> 00:05:02.370
All right.

76
00:05:02.370 --> 00:05:03.900
So at first it will be zero.

77
00:05:03.900 --> 00:05:06.720
Then let's say at number three selected it will become one.

78
00:05:06.720 --> 00:05:10.560
Then let's say at number five a selected will replace you by one.

79
00:05:10.650 --> 00:05:14.000
And then you know each round it is incremented each time and you add is selected.

80
00:05:14.160 --> 00:05:14.820
OK.

81
00:05:14.850 --> 00:05:19.760
And at the end we hopefully want to see one ad that is selected way more than the others.

82
00:05:19.800 --> 00:05:22.110
And UCB will figure it out.

83
00:05:22.110 --> 00:05:22.420
OK.

84
00:05:22.440 --> 00:05:26.790
Then next very well you know this one the sum of rewards of the add up to an end.

85
00:05:26.790 --> 00:05:31.700
Well same here we want to have these sums of rewards for each of the ads to run.

86
00:05:31.730 --> 00:05:39.130
And therefore we're going to create another list which we're going to call sums of rewards right.

87
00:05:39.270 --> 00:05:43.590
And same this will be initialized as a list of 10 0.

88
00:05:43.600 --> 00:05:46.170
So I'm just copying and pasting this.

89
00:05:46.200 --> 00:05:46.470
All right.

90
00:05:46.470 --> 00:05:47.190
That's the same.

91
00:05:47.190 --> 00:05:52.560
And of course at first round well each ad has a sum of rewards equal to zero.

92
00:05:52.560 --> 00:05:57.040
Because at the beginning no ad is selected and therefore no reward is collected.

93
00:05:57.050 --> 00:06:03.560
Then as we said we want to have a final variable which is the total reward accumulated over the rounds.

94
00:06:03.570 --> 00:06:09.360
You know with the different ads we select at each round and let's call this variable total underscore.

95
00:06:09.360 --> 00:06:10.340
Reward.

96
00:06:10.440 --> 00:06:16.800
And of course we have to initialize it as zero because in the first round well no ads is selected yet

97
00:06:16.830 --> 00:06:18.840
and therefore no reward is collected.

98
00:06:19.560 --> 00:06:20.480
OK good.

99
00:06:20.490 --> 00:06:24.260
So we have all the parameters all initialized correctly.

100
00:06:24.360 --> 00:06:27.060
And now what do you think will be the next step.

101
00:06:27.060 --> 00:06:33.540
Well of course the next step will be to start a for loop which will iterate through all the different

102
00:06:33.540 --> 00:06:39.270
round you know starting from Round Zero because you know in Python indexes start from zero up to round

103
00:06:39.420 --> 00:06:40.540
10000.

104
00:06:40.590 --> 00:06:45.060
And that each round well we will follow these two steps.

105
00:06:45.090 --> 00:06:48.060
You know we will compute the average reward of add up to run.

106
00:06:48.090 --> 00:06:54.390
And then we will get a confidence interval and in steps we will select the ad that has the maximum upper

107
00:06:54.390 --> 00:06:58.110
confidence about you know the higher upper confidence belt.

108
00:06:58.170 --> 00:06:58.460
All right.

109
00:06:58.460 --> 00:06:59.860
So you will see this will be very easy.

110
00:06:59.850 --> 00:07:03.230
We will just follow these steps and I will ask you to implement them first.

111
00:07:03.240 --> 00:07:05.360
But no worries I will guide you.

112
00:07:05.370 --> 00:07:10.950
And so now let's take a little break because this follow up will actually take a few lines of code.

113
00:07:11.010 --> 00:07:14.780
So make sure to have good energy for this and then let us match this together.

114
00:07:14.850 --> 00:07:16.530
Until then enjoy machine learning.
