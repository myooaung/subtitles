WEBVTT
1
00:00:05.510 --> 00:00:11.700
Welcome everyone to this lecture on the select statement select is the most common statement used in

2
00:00:11.700 --> 00:00:12.430
sequel.

3
00:00:12.660 --> 00:00:18.490
And it fundamentally allows us to retrieve information from a table that exists within a database.

4
00:00:18.510 --> 00:00:22.680
Later on we're going to be learning about how to combine the select statement with other statements

5
00:00:22.680 --> 00:00:29.060
to perform more complex queries so as the actual example syntax for a select statement.

6
00:00:29.060 --> 00:00:33.830
Well after opening up the query EDITOR Well we're going to write for our most basic SELECT statement

7
00:00:34.010 --> 00:00:43.090
is select column name from table name and you'll notice that in general we capitalized the sequel keywords.

8
00:00:43.130 --> 00:00:47.990
This actually isn't 100 percent necessary school still run even if you don't capitalize these but it

9
00:00:47.990 --> 00:00:49.610
makes it much easier to read.

10
00:00:49.670 --> 00:00:55.010
What are the fundamental sequels syntax statements versus what are the column names or table names that

11
00:00:55.010 --> 00:00:56.570
you're yourself editing.

12
00:00:56.570 --> 00:01:02.510
Depending on what you actually want so the most basic syntax here is we select we choose a column name

13
00:01:02.720 --> 00:01:10.640
from a table so let's see how this actually works within post press equal so we already know that we

14
00:01:10.640 --> 00:01:15.580
have a database and then we write click on that database and we open up that query editor.

15
00:01:15.680 --> 00:01:21.980
In our case it will be the example DVD rental database and so the way Postgres sequel operates is inside

16
00:01:21.980 --> 00:01:23.060
of this database.

17
00:01:23.060 --> 00:01:27.830
You're going to have some number of tables here we have an example of three tables and recall then each

18
00:01:27.830 --> 00:01:30.410
of these tables is essentially like a spreadsheet.

19
00:01:30.410 --> 00:01:34.610
We have columns and then rows of data and here I've just made up some data.

20
00:01:34.610 --> 00:01:41.720
So each of these tables has columns 1 2 and 3 or C1 C2 C3 and then rows of made up information.

21
00:01:41.720 --> 00:01:47.270
When we actually say select column name from table name postcard sequel essentially reads this a little

22
00:01:47.270 --> 00:01:52.310
bit backwards it first has to decide what table you're referencing it already knows what database you're

23
00:01:52.310 --> 00:01:56.490
referencing because that's how you open the query editor on that database.

24
00:01:56.630 --> 00:01:59.980
So it takes a look at what table name you're looking at.

25
00:02:00.260 --> 00:02:03.710
And then it's going to take a look at the corresponding column name.

26
00:02:04.640 --> 00:02:09.980
So for example we could say select C one from Table 1 and it would look something like this.

27
00:02:09.980 --> 00:02:12.620
It's actually grabbing column 1 and lower return back.

28
00:02:12.650 --> 00:02:16.160
That entire column and X Y and Z.

29
00:02:16.850 --> 00:02:23.030
If we want to select multiple columns from a table we can say column one common column two etc. You

30
00:02:23.030 --> 00:02:28.620
just separate out the column names by a comma and keep in mind these don't need to be in order.

31
00:02:28.640 --> 00:02:33.740
So if you only want in column 1 and column 3 you would just say select the names your columns separated

32
00:02:33.740 --> 00:02:40.890
by commas and then from the table you want them in if you actually want all the columns from a table

33
00:02:41.040 --> 00:02:47.070
you can use an asterisk symbol in order to request all the columns from a table essentially just asking

34
00:02:47.070 --> 00:02:48.860
for the entire table back.

35
00:02:48.870 --> 00:02:57.050
So you'll say select an asterix and then from table in general it's not good practice to use an asterisk

36
00:02:57.260 --> 00:03:01.310
unless you actually want every single thing in that table.

37
00:03:01.310 --> 00:03:06.380
And what's going to happen here is if you use the Asterix in the SELECT statement it's going to automatically

38
00:03:06.380 --> 00:03:11.480
query everything which increases traffic between the database server and the application which can slow

39
00:03:11.480 --> 00:03:13.280
down the retrieval of results.

40
00:03:13.280 --> 00:03:18.530
So you should really only be using that syntax if you actually want the entire table back with all the

41
00:03:18.530 --> 00:03:25.070
columns in it if you only need certain columns do your best only query for those columns.

42
00:03:25.070 --> 00:03:29.180
Let's go ahead and walk through some examples in our DVD rental database to get some practice with these

43
00:03:29.180 --> 00:03:30.800
basic select statements.

44
00:03:30.990 --> 00:03:32.610
Gonna open up P.C. admin.

45
00:03:32.620 --> 00:03:34.660
All right so I've opened up P.G. ataman.

46
00:03:34.670 --> 00:03:36.830
I'm gonna click down on servers.

47
00:03:36.830 --> 00:03:40.180
Note that I have different versions of Postgres sequel installed on this computer.

48
00:03:40.190 --> 00:03:42.950
Go ahead and choose the one that you installed for your computer.

49
00:03:42.950 --> 00:03:47.060
I'll go ahead and choose Postgres sequel 12 since that's what will restore DVD rental on.

50
00:03:47.130 --> 00:03:53.600
I've now connected to that server under Postgres sequel 12 and now I want to query the particular database

51
00:03:53.660 --> 00:03:54.920
inside that server.

52
00:03:54.920 --> 00:04:01.290
So that's going to be DVD rental I right click and then I'm going to open up the query tool I take a

53
00:04:01.290 --> 00:04:05.510
look at the query tool and I have the query editor as well as the data output.

54
00:04:05.700 --> 00:04:10.770
So let's practice our very first query to this database.

55
00:04:10.770 --> 00:04:15.720
So if you're ever curious of what tables are actually available to you in your database what you can

56
00:04:15.720 --> 00:04:22.110
do is underneath DVD rental you can open up schemas you'll see there's a public schema keep going down

57
00:04:22.530 --> 00:04:28.830
and you'll see there's tables here and you can expand on tables and I'll show you the various tables

58
00:04:28.920 --> 00:04:34.470
available to you inside of this database and you can check out the resources for this lecture or the

59
00:04:34.470 --> 00:04:39.480
previous lectures we actually have a mapping of those tables and the relationships between them.

60
00:04:39.510 --> 00:04:45.090
We'll talk a lot more about joining tables together and also programmatically asking a database what

61
00:04:45.090 --> 00:04:49.980
tables are within it but right now we'll just do this through the P.G. admin graphical interface so

62
00:04:49.980 --> 00:04:51.780
I can see there's 15 tables here.

63
00:04:51.990 --> 00:04:57.110
And if we click on one of these tables we can later on see what columns are available etc..

64
00:04:57.390 --> 00:05:04.050
So let's go ahead and start by asking for an entire table back or all the columns in a table.

65
00:05:04.050 --> 00:05:14.550
I say select and then I type in an asterix there from and then we'll say actor semicolon and then I'll

66
00:05:14.550 --> 00:05:16.320
go ahead and run this.

67
00:05:16.320 --> 00:05:21.990
And if you're on Windows you can choose F5 to quickly run that and you'll notice that it has the data

68
00:05:22.020 --> 00:05:29.040
output to kind of move this over so we can see this and we can see here it has the actor I.D. The first

69
00:05:29.040 --> 00:05:35.360
name the last name and then the last update and we can scroll down here and see the various results.

70
00:05:35.370 --> 00:05:38.340
So again this returns back all the columns.

71
00:05:38.340 --> 00:05:43.140
If I only want a single column let's say only one of the first name that I just look at the column name

72
00:05:43.170 --> 00:05:52.380
which is first underscore name say first underscore name and then I'll go ahead and run that and I only

73
00:05:52.380 --> 00:05:58.170
get back the first name if I want the first and last name I would take a look at those column names

74
00:05:58.200 --> 00:06:06.260
which I can always refer to over here on the sign last names available there and then run that OK so

75
00:06:06.260 --> 00:06:10.810
I can see first name and last name and keep in mind they actually don't need to be in any sort of order.

76
00:06:10.970 --> 00:06:18.470
If I wanted the last name to show up first I could say last name comma first name run that and it would

77
00:06:18.470 --> 00:06:22.350
show me in the order I requested and the last name column showing up first and then the first name.

78
00:06:22.370 --> 00:06:24.880
Everything's linked here by what row.

79
00:06:24.890 --> 00:06:26.440
So we can see Penelope Guinness.

80
00:06:26.450 --> 00:06:35.130
Nick Walberg etc. Now a few more points I want to show you is that you notice that I capitalized the

81
00:06:35.190 --> 00:06:36.800
sequel syntax keywords.

82
00:06:37.080 --> 00:06:44.520
But even if these were all lowercase select and then I put from an all lowercase and I run this it will

83
00:06:44.520 --> 00:06:45.590
actually still work.

84
00:06:45.660 --> 00:06:46.760
It's the same thing.

85
00:06:46.800 --> 00:06:56.350
However it's much easier to read and it's just standardised notation if we just do this in all caps.

86
00:06:56.350 --> 00:07:01.900
And then I can quickly realize if I'm coming back to this that select and from are the keywords I notice

87
00:07:01.900 --> 00:07:04.310
PGI admin also highlights them for us.

88
00:07:04.360 --> 00:07:06.700
You'll also notice that I have a semicolon here.

89
00:07:06.700 --> 00:07:13.000
The semicolon is to denote the end of a query but if you delete that semicolon and still run this you'll

90
00:07:13.000 --> 00:07:14.590
notice it works just fine.

91
00:07:14.590 --> 00:07:20.840
So things like capitalizing those sequel keywords as well as adding in that semicolon really helps.

92
00:07:20.890 --> 00:07:25.690
As far as readability is concerned especially if you're going to be sharing these SQL queries of someone

93
00:07:25.690 --> 00:07:32.830
else it can read very clearly where this actual query is meant to end as well as what commands you're

94
00:07:32.830 --> 00:07:38.200
actually using you can use a scratch pad here if you want to kind of play around with things later on

95
00:07:38.200 --> 00:07:43.960
as are sequel queries get more complex you may want to work a little bit on the scratch pad and I'm

96
00:07:43.960 --> 00:07:49.060
going to zoom out just so we can see this clearly there is a query history they can click here and you

97
00:07:49.060 --> 00:07:53.740
can see the various query histories and then you can always copy them or you can copy them directly

98
00:07:53.740 --> 00:07:54.920
to the query editor.

99
00:07:55.000 --> 00:08:00.790
So for example if you come back here maybe to select first name from actor I could say copy to query

100
00:08:00.790 --> 00:08:05.800
editor and adjust back to the query editor and I can see select first name from actor is already there

101
00:08:05.800 --> 00:08:06.760
for me.

102
00:08:06.760 --> 00:08:07.610
All right.

103
00:08:07.900 --> 00:08:13.060
And then if I wanted to I could run this and edit it in any way I want so I can just double click here

104
00:08:13.210 --> 00:08:21.010
and start editing for another table maybe I want l the columns from another table let's say select everything

105
00:08:21.010 --> 00:08:27.820
from city some I call an EF 5 which is essentially a refresh or running this and we can see here city

106
00:08:27.820 --> 00:08:30.010
I.D. city country the last update.

107
00:08:30.670 --> 00:08:36.610
OK so those are the very basics of the select statements coming up next we're going to have just a few

108
00:08:36.610 --> 00:08:38.730
challenges to make sure you understood all this.

109
00:08:38.740 --> 00:08:39.730
I'll see you at the next lecture.
