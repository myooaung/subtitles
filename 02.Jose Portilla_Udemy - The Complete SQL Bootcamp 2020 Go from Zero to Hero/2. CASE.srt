1
00:00:05,660 --> 00:00:13,560
Welcome back everyone to this lecture on the case statement we can use the case statement to only execute

2
00:00:13,560 --> 00:00:16,550
secret code when certain conditions are met.

3
00:00:16,560 --> 00:00:23,730
This is very similar to if else statements you can find in other programming languages such as C++ Javascript

4
00:00:24,000 --> 00:00:26,630
Python etc..

5
00:00:26,690 --> 00:00:33,090
Now there are two main ways to use a case statement and that is to use a general case statement or a

6
00:00:33,090 --> 00:00:35,050
case expression.

7
00:00:35,070 --> 00:00:41,060
Now keep in mind in many situations both methods can actually retrieve and lead to the same results.

8
00:00:41,070 --> 00:00:48,810
So I want to first show you the syntax for a general case statement here's the syntax for the general

9
00:00:48,810 --> 00:00:52,110
case and the way it works is at the very beginning.

10
00:00:52,140 --> 00:00:58,740
We have this little block of code that we're going to start off with the case keyword and then we have

11
00:00:58,830 --> 00:01:01,180
one and then keywords.

12
00:01:01,410 --> 00:01:08,760
So we start off by saying case and then when a certain condition is met then have some sort of result

13
00:01:08,760 --> 00:01:09,860
returned.

14
00:01:09,870 --> 00:01:13,820
And then if we want to check against another condition we can keep listening.

15
00:01:13,890 --> 00:01:18,050
So when condition 2 occurs then return result 2.

16
00:01:18,180 --> 00:01:23,910
And finally at the end we can have an else statement which basically says if none of the above conditions

17
00:01:24,000 --> 00:01:28,820
are met then return some final other result and then we can end that.

18
00:01:28,830 --> 00:01:31,590
So let's go out and see an actual example of this.

19
00:01:31,590 --> 00:01:34,390
So it's a little more clear.

20
00:01:34,670 --> 00:01:39,890
Let's imagine that we have a very very simple table and in fact this table is just the table here I've

21
00:01:39,890 --> 00:01:46,460
seen on the bottom where there's a column called A and there's two entries in this table or column entry

22
00:01:46,460 --> 00:01:48,240
one an entry two.

23
00:01:48,260 --> 00:01:53,820
So these are a test table and if I say select everything from the test table this is what shows up.

24
00:01:53,840 --> 00:01:55,150
Now let me show you what it looks like.

25
00:01:55,160 --> 00:02:06,300
If we want to use a general case statement so I will say select the a column comma case and then I can

26
00:02:06,420 --> 00:02:07,510
do the following.

27
00:02:07,590 --> 00:02:08,140
I can say.

28
00:02:08,130 --> 00:02:13,230
CASE WHEN A is equal to 1 then string 1.

29
00:02:13,350 --> 00:02:20,850
So what that is saying is if the instance in column A for that row happens to be equal to 1 then go

30
00:02:20,850 --> 00:02:30,460
ahead and return the string 1 and let's check for other cases or conditions when A is equal to 2 then

31
00:02:30,850 --> 00:02:37,830
return the result string to else if that's not 1 or if it's not to return.

32
00:02:37,830 --> 00:02:43,740
Other AND THEN I SAY N and then from whatever table I want.

33
00:02:43,740 --> 00:02:51,420
So the way this works is we're basically inserting this general case statement inside of this select

34
00:02:51,420 --> 00:02:54,530
call almost as if it was another column.

35
00:02:54,600 --> 00:03:01,950
So notice here I'm saying select a comma and then I have this case statement inserted which is basically

36
00:03:01,950 --> 00:03:07,140
going to return the results based off those conditions as another column.

37
00:03:07,140 --> 00:03:13,340
So the column is by default called case but you can always use an alias to name it something else.

38
00:03:13,860 --> 00:03:20,610
So you could say something like case when a is equal to 1 then 1 when a is equal to then 2 else other

39
00:03:20,910 --> 00:03:26,220
as label and then that's going to relabel that return the column.

40
00:03:26,220 --> 00:03:32,070
So basically the way I like to think about this is for the general case you're just essentially substituting

41
00:03:32,490 --> 00:03:39,000
calling a column that already exists with your own general case statement that is going to return certain

42
00:03:39,000 --> 00:03:47,190
results based off certain conditions within another column and then you just end the case letting sequel

43
00:03:47,220 --> 00:03:51,870
note that you're going to continue on with the rest your query such as doing something like from test

44
00:03:51,930 --> 00:03:55,360
and if you want you can add things like order by after that.

45
00:03:55,380 --> 00:04:01,710
So the way I like to think about this is the general case is kind of this giant substitute for a column

46
00:04:01,710 --> 00:04:04,860
call Rican define your own conditional logic.

47
00:04:05,010 --> 00:04:13,130
As far as what you want returned now that was the general case statement let's explore the case expression

48
00:04:13,190 --> 00:04:19,640
syntax and this is sometimes confusing to beginners because it looks very similar to the general case

49
00:04:19,700 --> 00:04:20,580
statement.

50
00:04:20,600 --> 00:04:27,830
The main difference is that the case expression syntax first evaluates an expression and then compares

51
00:04:27,830 --> 00:04:33,640
the result with each value in the when clauses sequentially.

52
00:04:33,640 --> 00:04:39,940
So this is the case expression syntax and the difference is pretty subtle but you'll see here that right

53
00:04:39,940 --> 00:04:47,080
in front of the case we're actually going to evaluate an expression and then the when statements instead

54
00:04:47,080 --> 00:04:53,440
of having actual conditions within them they're just going to have value so they're basically checking

55
00:04:53,440 --> 00:04:59,860
for when this expression is equal to value 1 then return result 1 the case where this expression is

56
00:04:59,860 --> 00:05:06,910
equal to value to then return result to else return some other result and then end that case expression

57
00:05:08,350 --> 00:05:11,710
so let's go ahead and rewrite our previous example.

58
00:05:11,710 --> 00:05:14,850
So the way this works is notice here.

59
00:05:14,890 --> 00:05:22,960
I no longer have to actually have that condition after the one with the case expression syntax.

60
00:05:22,960 --> 00:05:25,860
I'm now saying Case A.

61
00:05:25,870 --> 00:05:32,410
So that's my expression just the column itself when it's equal to one then one when it's equal to two

62
00:05:32,410 --> 00:05:35,140
then two else other.

63
00:05:35,170 --> 00:05:41,800
So this is basically saving you the step of having to check those conditions yourself manually.

64
00:05:41,800 --> 00:05:47,440
You can think of the case expression as something to use when you're just going to do a bunch of checks

65
00:05:47,440 --> 00:05:50,670
for something being equal or equality.

66
00:05:50,740 --> 00:05:57,680
The general case syntax that we saw earlier let me go back to it here we can see this is actually going

67
00:05:57,680 --> 00:06:04,790
to be more flexible because the case expression syntax essentially just checks for equal or equality

68
00:06:04,910 --> 00:06:09,870
to the provided expression which can be as simple as a single column provided.

69
00:06:10,220 --> 00:06:14,680
The general case syntax allows us to do all kinds of conditional checks.

70
00:06:14,690 --> 00:06:20,080
So can we can do things like when a is in between the values of five and 10.

71
00:06:20,120 --> 00:06:23,290
Or when a is greater than 4 et cetera.

72
00:06:23,300 --> 00:06:31,160
So case for the general syntax allows us to do a bunch of conditions individually and uniquely right

73
00:06:31,160 --> 00:06:37,850
after those When Calls the case expression syntax is essentially just evaluating one expression and

74
00:06:37,850 --> 00:06:41,410
then you're listing the possible values to be equal to that expression.

75
00:06:41,570 --> 00:06:49,040
And often that expression is just a simple column call such as case a 1 1 then 1 when 2 then 2 and so

76
00:06:49,040 --> 00:06:51,240
on okay.

77
00:06:51,420 --> 00:06:55,890
So those are very simple examples but let's go ahead and look at some more realistic examples through

78
00:06:55,890 --> 00:06:56,990
P.G. admin.

79
00:06:57,120 --> 00:07:05,000
I'm going to open up PJ admin now OK here I am inside P.G. admin I'm going to go ahead and just explore

80
00:07:05,180 --> 00:07:13,430
the customer table so let's grab everything from customer run that and I see I have a customer I.D.

81
00:07:13,480 --> 00:07:16,190
story the first name and so on.

82
00:07:16,270 --> 00:07:24,850
Let's go ahead and work under the assumption that the customer I.D. are assigned as serial primary keys.

83
00:07:24,850 --> 00:07:31,900
So what I mean by that is if your customer I.D. is one then you were the first customer to ever purchase

84
00:07:31,900 --> 00:07:35,710
something at our store or rent something from our DVD space.

85
00:07:36,160 --> 00:07:39,400
And if your customer number two then you were the second customer and so on.

86
00:07:39,880 --> 00:07:45,700
So let's go ahead and run a promotion for maybe a different tiers of customers.

87
00:07:45,700 --> 00:07:53,500
Let's go ahead and set customers that are in the first 100 to be kind of a premium status and then customers

88
00:07:53,530 --> 00:08:00,590
between 100 and 200 to be a plus status and then everyone else just to be a normal customer.

89
00:08:00,610 --> 00:08:11,870
So this is a great situation for the case so I'm going to select customer I.D. from customer and run

90
00:08:11,870 --> 00:08:12,160
that.

91
00:08:12,170 --> 00:08:16,850
And so now we're essentially kind of simplifying this down so it matches more or less what we were doing

92
00:08:17,450 --> 00:08:20,430
in our calls earlier in the slides.

93
00:08:20,450 --> 00:08:26,630
No here it's actually not in order by exactly because 5 to 4 for some reason is just returned faster

94
00:08:26,630 --> 00:08:27,790
and everything else.

95
00:08:27,830 --> 00:08:33,050
So let's go ahead and make those categories with a case statement.

96
00:08:33,080 --> 00:08:37,640
So what I like to do is I set up my kind of my normal query here and then I'm going to pretend this

97
00:08:37,640 --> 00:08:39,140
is another column call.

98
00:08:39,140 --> 00:08:45,320
So I would say comma and then this is where I'm going to insert my case statement and it's really quite

99
00:08:45,320 --> 00:08:52,490
common to use spacing and indentation to help organize your case statement although keep in mind that

100
00:08:52,490 --> 00:08:59,240
sequel itself doesn't really care about your spacing or indentation that much as long as your keywords

101
00:08:59,330 --> 00:09:01,760
aren't touching each other essentially.

102
00:09:01,760 --> 00:09:05,090
OK so here's our case statement.

103
00:09:05,090 --> 00:09:05,900
So I'm going to say.

104
00:09:05,900 --> 00:09:09,860
Case and then let's go ahead and write in our corresponding end.

105
00:09:09,890 --> 00:09:15,710
So now that we have that kind of done I'm going to use the general syntax which means I'm going to have

106
00:09:15,710 --> 00:09:16,770
my when calls.

107
00:09:17,000 --> 00:09:25,130
So here I'm going to say when and let's go ahead and first check for when the customer these are less

108
00:09:25,130 --> 00:09:28,590
than or equal to 100 going to put these inside parentheses.

109
00:09:28,640 --> 00:09:39,560
So when the customer I.D. is less than or equal to one hundred then they have to decide what to return

110
00:09:39,950 --> 00:09:44,240
when the actual case happens to be that the customer is less than or equal to 100.

111
00:09:44,300 --> 00:09:50,450
So let's label these our premium customers since we want to reward them for being within the first 100

112
00:09:50,510 --> 00:09:51,660
customers.

113
00:09:51,690 --> 00:09:54,990
And now let's go ahead and have another condition to check against.

114
00:09:55,040 --> 00:09:58,350
No here I don't put a comma between my conditions.

115
00:09:58,580 --> 00:10:04,220
So now I'm going to say when Let's go ahead and type out where customer I.D..

116
00:10:04,590 --> 00:10:06,300
And now let's do everyone.

117
00:10:06,320 --> 00:10:08,390
That's between one hundred and two hundred.

118
00:10:08,850 --> 00:10:20,000
So I will say between one hundred and 200 then let's call these customers plus.

119
00:10:20,090 --> 00:10:20,450
So no.

120
00:10:20,450 --> 00:10:20,910
Here.

121
00:10:21,300 --> 00:10:27,860
Basically all I'm doing with this general case statement is after the when keyword I have some sort

122
00:10:27,860 --> 00:10:31,450
of condition and I have a lot of flexibility over these sort of conditions.

123
00:10:31,640 --> 00:10:36,560
And then I have to decide what do I return if this condition happens to be true.

124
00:10:36,770 --> 00:10:37,880
And then you can keep listening.

125
00:10:37,910 --> 00:10:43,670
When then lines or clauses for as many conditions as you want to check.

126
00:10:43,820 --> 00:10:48,530
Then the last thing we're going to add in after you've decided you've checked all your wet conditions

127
00:10:48,890 --> 00:10:55,850
is an L statement and the L statement basically says hey if you're not true for any of these conditions

128
00:10:56,210 --> 00:11:01,070
meaning I didn't return a premium and I didn't return a plus then what should I return.

129
00:11:01,070 --> 00:11:04,330
So go ahead and check for those conditions.

130
00:11:04,340 --> 00:11:08,050
Else if none of that happened to be true go ahead and return something.

131
00:11:08,060 --> 00:11:11,420
So let's go ahead and say that will be the string.

132
00:11:11,420 --> 00:11:14,430
Normal so let's go ahead and run this.

133
00:11:14,440 --> 00:11:20,710
Make sure we have no typos and I'm going to zoom out just a little bit so we can see this here but note

134
00:11:21,400 --> 00:11:27,400
that I have my premium customers we can expand this column so all my premium customers and if I keep

135
00:11:27,400 --> 00:11:30,580
scrolling down beyond 100 then I have my plus customers.

136
00:11:30,700 --> 00:11:36,800
And then if I scroll down beyond that I should be able to see my normal customers over here beyond two

137
00:11:36,790 --> 00:11:37,560
hundred.

138
00:11:37,570 --> 00:11:38,320
Okay.

139
00:11:38,380 --> 00:11:44,560
So again the syntax for a general case statement is you basically plug it in in lieu of a column here

140
00:11:45,010 --> 00:11:51,640
and then you have your when keyword the condition you want to check then what should you return when

141
00:11:51,640 --> 00:11:55,990
that condition happens to be true doesn't have to be a string could have been a number or a digit et

142
00:11:56,000 --> 00:11:57,130
cetera.

143
00:11:57,130 --> 00:11:57,760
Okay.

144
00:11:58,080 --> 00:12:04,990
So last thing I want to point out is you often want to actually call this something not here just returns

145
00:12:04,990 --> 00:12:08,040
the column name as case after the end statement.

146
00:12:08,170 --> 00:12:13,600
I can use an alias saying something like as I could say like as customer class.

147
00:12:13,600 --> 00:12:15,610
So what class is customers in.

148
00:12:15,700 --> 00:12:18,790
And I run that and I'll rename the column for me.

149
00:12:18,910 --> 00:12:19,520
Okay.

150
00:12:19,810 --> 00:12:24,880
So we can see here that the general case statement is the one that's the most flexible because you can

151
00:12:24,880 --> 00:12:31,940
check all kinds of conditions but often for case statements you're just going to be checking for equality.

152
00:12:31,960 --> 00:12:37,570
So the simpler version of that is that case expression where right at the top you're going to check

153
00:12:37,570 --> 00:12:41,740
for a case expression and then just check for equality off of that.

154
00:12:42,370 --> 00:12:50,710
So let's imagine that we are running a raffle so let's go ahead and just come back to select customer

155
00:12:50,710 --> 00:12:56,950
I.D. from customer run that and make sure we delete that comma here run that.

156
00:12:56,950 --> 00:13:01,220
So here's my customer I.D. And I'm just selecting a customer different customer.

157
00:13:01,300 --> 00:13:07,000
And now what I'm going to do is I'm going to hold a raffle and let's say I held the raffle separately

158
00:13:07,010 --> 00:13:11,430
just kind of some random lotto tickets and I'm going to pick based off the customer I.D. number.

159
00:13:11,440 --> 00:13:14,660
So based off kind of my random choice I decided.

160
00:13:14,680 --> 00:13:20,740
Number two is the winner a customer I.D. number five is second place and everyone else is just normal.

161
00:13:20,740 --> 00:13:22,190
They didn't win anything.

162
00:13:22,270 --> 00:13:29,650
So how can I do this with a case expression the case expression is probably the better choice here because

163
00:13:29,710 --> 00:13:31,560
I'm just going to check for equality.

164
00:13:31,570 --> 00:13:37,240
I'm just checking that if the customer I.D. is equal to two then I want them labeled as a winner.

165
00:13:37,240 --> 00:13:42,030
If the customer I.D. label let's say five that will be the second place in a raffle.

166
00:13:42,160 --> 00:13:47,980
Everyone else is going to be just labeled as normal since I'm just checking for equality here and not

167
00:13:47,980 --> 00:13:54,040
checking for things like between two values then a customer expression is or excuse me case expression

168
00:13:54,340 --> 00:13:59,310
is probably the best case for this customer I.D. check.

169
00:13:59,350 --> 00:14:06,820
So the way this works is same as before I'll say case and then I will say end except now right after

170
00:14:06,880 --> 00:14:13,330
my case I'm going to provide my expression and the expression here is just a simple column call which

171
00:14:13,330 --> 00:14:14,980
is the customer I.D..

172
00:14:15,350 --> 00:14:19,150
So I'm just going to check for the customer I.D. be equal to something.

173
00:14:19,150 --> 00:14:26,060
So here again my karma and this case and block is essentially the substitute for another column call.

174
00:14:26,440 --> 00:14:34,030
So I'm saying case where the customer I.D. and then I'm going to say when and I no longer need to say

175
00:14:34,030 --> 00:14:38,780
something like customer I.D. equal to two I can just type in two.

176
00:14:38,800 --> 00:14:39,690
So this is nice.

177
00:14:39,730 --> 00:14:43,350
And this is just going to check for equality against this expression.

178
00:14:43,390 --> 00:14:48,520
So let's say when the customer I.D. to then that's the person that won the raffle will say

179
00:14:51,630 --> 00:14:52,990
now I can't have another case.

180
00:14:53,020 --> 00:15:02,390
So let's say when customer I.D. five let's go ahead and have that person be second place and then finally

181
00:15:02,390 --> 00:15:06,950
everyone else will just list them as normal.

182
00:15:06,950 --> 00:15:12,950
And I'm going to call this right after end as raffle results.

183
00:15:12,950 --> 00:15:19,250
So again note the difference here is that I have this expression often just a single column call and

184
00:15:19,250 --> 00:15:23,810
instead of checking for conditions within the when I'm just checking for equality.

185
00:15:23,870 --> 00:15:29,420
So checking one customer I.D. when it's two customer I.D. when it's five.

186
00:15:30,080 --> 00:15:36,200
So obviously this one is not as flexible as the general case statement but it's kind of faster to type

187
00:15:36,200 --> 00:15:36,580
out.

188
00:15:36,740 --> 00:15:41,990
Basically saves you from having to type out customer I.D. equal to this customer the equal to that and

189
00:15:41,990 --> 00:15:47,010
say you just write customer at one time and then you just check for equality of the values themselves.

190
00:15:47,010 --> 00:15:48,020
Let's go ahead and run this.

191
00:15:48,020 --> 00:15:51,810
Make sure you didn't commit any typos and it looks like we're good.

192
00:15:51,890 --> 00:15:58,650
So let's expand on the results and note here that looks like customer number two the raffle results

193
00:15:58,650 --> 00:16:03,390
of this person is a winner and customer I.D. number five this person got second place.

194
00:16:03,390 --> 00:16:06,310
Ok awesome.

195
00:16:06,320 --> 00:16:12,050
Now the last thing I want to show you is you can actually begin to then perform operations on the results

196
00:16:12,200 --> 00:16:14,930
of these case statements.

197
00:16:14,930 --> 00:16:18,140
So let's take a look at our film table.

198
00:16:18,140 --> 00:16:28,350
I'm going to say select everything from film run that so we have our film I.D. title et cetera.

199
00:16:28,680 --> 00:16:32,170
And if we take a look at this we have the actual rental rate.

200
00:16:32,430 --> 00:16:34,110
So we know there's different rental rates.

201
00:16:34,530 --> 00:16:41,280
Let's go ahead and make some categories for rental rates and then let's also figure out how many we

202
00:16:41,280 --> 00:16:43,440
have per category.

203
00:16:43,440 --> 00:16:48,420
Keep in mind technically I could do this through some sort of group by call but this is really to drive

204
00:16:48,420 --> 00:16:54,960
home the point that you can take these complicated case syntax statements and then perform operations

205
00:16:55,320 --> 00:16:56,980
such as a sum on them.

206
00:16:57,000 --> 00:17:01,290
I kind of want to walk through a little bit of logic here that may serve you well in the future but

207
00:17:01,290 --> 00:17:06,720
keep in mind that you could have figured out this in other ways so you don't need to write back saying

208
00:17:06,750 --> 00:17:10,890
could we have done this if a group buy you probably could have fewer creative enough.

209
00:17:10,980 --> 00:17:13,270
So let me show you what I'm talking about first.

210
00:17:13,350 --> 00:17:20,390
So we're gonna say select the rental rate from film since that's kind of all I'm interested in so I

211
00:17:20,390 --> 00:17:24,370
have these different rental rates and I have a ninety nine cents rental rate.

212
00:17:24,470 --> 00:17:27,910
I want to figure out how many of these do I actually have.

213
00:17:27,920 --> 00:17:31,050
So let's go ahead and start categorizing things.

214
00:17:31,250 --> 00:17:36,010
We're going to say select and I'm going to do the following.

215
00:17:36,080 --> 00:17:49,280
We're actually just going to say select case and no we're going to check for the rental rates when it's

216
00:17:49,280 --> 00:18:04,430
99 cents then label it or return 1 else 0 and then we have to have the end call associated with the

217
00:18:04,430 --> 00:18:05,470
case.

218
00:18:05,690 --> 00:18:07,100
So not what I'm doing here.

219
00:18:07,200 --> 00:18:14,030
I'm basically just saying Select Case rental rate if it's ninety nine cents then return a 1 in this

220
00:18:14,030 --> 00:18:14,920
new column.

221
00:18:15,020 --> 00:18:16,670
Else return is zero.

222
00:18:16,670 --> 00:18:17,880
And this.

223
00:18:17,990 --> 00:18:21,810
So when I run this I have this nice little case here.

224
00:18:21,830 --> 00:18:23,930
So case integer bunch of zeros.

225
00:18:23,930 --> 00:18:30,140
And notice here it happens to be one if that rental rate was then ninety nine cents.

226
00:18:30,200 --> 00:18:36,200
And to kind of drive this point further I could actually ask for the original rental rate column comma

227
00:18:36,800 --> 00:18:39,720
run that and I can see the direct results next to each other.

228
00:18:39,740 --> 00:18:45,950
So nothing too crazy right now certainly the exact same thing we did before except for returning zero.

229
00:18:46,010 --> 00:18:49,840
If it's not 99 cents and a 1 if it is.

230
00:18:50,070 --> 00:18:58,890
So now what I can do is I can actually take the sum of this case column to figure out exactly how many

231
00:18:58,890 --> 00:19:01,410
ninety nine cents movies I have.

232
00:19:01,410 --> 00:19:07,710
So the way we do that is just as if this was any other normal column I'm going to take this whole thing

233
00:19:08,760 --> 00:19:10,290
and pass it into some

234
00:19:13,290 --> 00:19:18,420
and then I'm going to delete rental rates since it doesn't make sense to call rental rate anymore since

235
00:19:18,420 --> 00:19:28,890
I'm just taking the some of this and then I'm going to say as let's say a number of bargains so I'm

236
00:19:28,890 --> 00:19:31,920
gonna say 99 cent films are a bargain.

237
00:19:31,920 --> 00:19:38,670
So if I take the sum of this return column in the case then it's gonna give me a one for every time

238
00:19:38,670 --> 00:19:45,840
there's a ninety nine cents essentially counting how many ninety nine cent movies I have so we run this

239
00:19:46,870 --> 00:19:52,090
and we get back that the number of bargains I have or number of ninety nine cent movies I have are three

240
00:19:52,090 --> 00:19:53,720
hundred and forty one.

241
00:19:53,950 --> 00:19:55,860
So you're probably thinking right now.

242
00:19:55,870 --> 00:20:02,650
Well this isn't super useful because I could have already done this with things I know about group buy

243
00:20:02,710 --> 00:20:07,400
and count and where and having and all these other tools that we've learned so far.

244
00:20:07,660 --> 00:20:14,860
But what if I want to now do this for different categories such as bargains and regular prices so I

245
00:20:14,860 --> 00:20:18,190
can keep doing this as if there were more columns.

246
00:20:18,190 --> 00:20:22,260
So after this let's go ahead and just call this bargains.

247
00:20:22,330 --> 00:20:25,500
These are my bargain movies.

248
00:20:25,600 --> 00:20:33,100
I'm also going to take the sum of let's say movies when they're two ninety nine so let's say some case

249
00:20:34,320 --> 00:20:39,470
rental rate when two ninety nine.

250
00:20:39,750 --> 00:20:44,440
Then one else zero.

251
00:20:44,640 --> 00:20:47,720
And then finally end.

252
00:20:47,860 --> 00:20:53,860
So basically the exact same thing I did up here except now checking for two ninety nine and let's go

253
00:20:53,860 --> 00:20:58,360
ahead and call these let's say as regular.

254
00:20:58,360 --> 00:21:01,470
So it's gonna be pretty nice about this and no here my karma.

255
00:21:01,480 --> 00:21:08,460
Because I'm basically treating this whole sum as in other column call that when I run this I now I'm

256
00:21:08,460 --> 00:21:14,530
able to format the results in this easy to read manner where I have the number of bargains being showed

257
00:21:14,620 --> 00:21:20,710
at the exact same time of the number of two dollars and a nine cent films and so I can keep doing this

258
00:21:20,710 --> 00:21:27,760
for the other cases go out and copy this again add in a comma I was going to copy and paste here the

259
00:21:27,760 --> 00:21:32,980
exact same code except now I'm going to check for when it's four ninety nine and let's go ahead and

260
00:21:32,980 --> 00:21:41,160
call these our premium movies because they're more expensive and now I'm going to run this and now at

261
00:21:41,160 --> 00:21:46,540
the exact same time as separate columns I can see bargains regular and premium.

262
00:21:46,680 --> 00:21:53,250
So this is something that is a lot more difficult to do given the other tools we know and it's almost

263
00:21:53,250 --> 00:22:00,360
impossible to format it in this way where each of these counts has its own column and its own label

264
00:22:00,360 --> 00:22:05,910
columns a number of bargains number of regular movies and then a number of so-called premium movies.

265
00:22:05,910 --> 00:22:14,580
So this is really nice and it allows me again to call functions on the results of a case column and

266
00:22:14,580 --> 00:22:22,800
it's super common to use case with a when statement and then you say then 1 else 0 as ways of summing

267
00:22:22,800 --> 00:22:25,440
things up or counting the results.

268
00:22:25,470 --> 00:22:32,040
OK so that's it for this particular lecture on the case syntax coming up next.

269
00:22:32,030 --> 00:22:37,100
Going to have a challenge for you to make sure you've fully understood what we went over here.

270
00:22:37,200 --> 00:22:39,180
Thanks and I'll see you at that challenge lecture.
