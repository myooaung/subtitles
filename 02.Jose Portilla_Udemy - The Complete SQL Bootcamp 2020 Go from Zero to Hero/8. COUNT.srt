1
00:00:05,570 --> 00:00:12,040
Welcome everyone to this lecture on the account function the COUNT function returns the number of input

2
00:00:12,040 --> 00:00:18,670
rows that match a specific condition of a query we can apply count on a specific column or just past

3
00:00:18,670 --> 00:00:20,680
count and then an asterisk.

4
00:00:20,680 --> 00:00:25,000
We will soon see the should return the same result because count is merely reporting back the number

5
00:00:25,000 --> 00:00:30,780
of rows returned which is going to be the same regardless of the actual column you're looking at.

6
00:00:30,830 --> 00:00:32,460
Let's see a simple example.

7
00:00:32,630 --> 00:00:39,400
Here again we have that table with a couple of names and then their color choice let's imagine we called

8
00:00:39,400 --> 00:00:47,200
SELECT COUNT name from table notice here count does need the parentheses because it's a function acting

9
00:00:47,200 --> 00:00:50,250
on something so it won't work without the parentheses.

10
00:00:50,260 --> 00:00:55,920
Keep that in mind if we were to count the number of names from table.

11
00:00:55,920 --> 00:01:00,900
That's just asking for how many rows are there in the named column which is going to be four.

12
00:01:00,900 --> 00:01:04,060
So the result will be count for.

13
00:01:04,090 --> 00:01:07,090
So again it's simply returning the number of rows in the table.

14
00:01:07,090 --> 00:01:12,880
In fact this should really be the same regardless of the column we call because each column has the

15
00:01:12,880 --> 00:01:17,470
same number of rows since they're literally in the same table which is why.

16
00:01:17,540 --> 00:01:23,330
Whether you call SELECT COUNT name from table select count choice from table or select count asterisk

17
00:01:23,360 --> 00:01:27,140
which is just saying select the count of all the rows for all the columns in the table.

18
00:01:27,290 --> 00:01:30,620
They should all return the same thing since the original table has four rows.

19
00:01:30,620 --> 00:01:32,690
That means each column has four rows.

20
00:01:32,690 --> 00:01:36,370
Which is why I usually just see an asterisk from the table.

21
00:01:36,410 --> 00:01:42,470
Now keep in mind it's sometimes useful to use a column name instead of just providing an asterisk because

22
00:01:42,470 --> 00:01:47,810
if you come back on your secret query some time later it may actually help kind of stir the memory of

23
00:01:48,050 --> 00:01:52,510
what actual question you were trying to answer.

24
00:01:52,560 --> 00:01:57,210
So again because of this count by itself simply returns back a count of the number of rows in a table

25
00:01:57,900 --> 00:02:02,460
and count is usually much more useful when combined of other commands such as the distinct command that

26
00:02:02,460 --> 00:02:09,710
we already learned about Imagine you wanted to know how many unique names are there in the table.

27
00:02:09,900 --> 00:02:17,070
So to answer this question we need to first decide the distinct number of names then we'll provide count

28
00:02:17,250 --> 00:02:20,400
on that result of the stink name from table.

29
00:02:20,400 --> 00:02:26,040
So the logic that's going to happen is distinct is going to figure out what the distinct names are.

30
00:02:26,040 --> 00:02:30,780
Here it seems that David is duplicated so it's just going to kind of remove that and now we have the

31
00:02:30,780 --> 00:02:35,970
three unique names and then count is going to count the remaining rows here which in this case is going

32
00:02:35,970 --> 00:02:37,210
to be three rows.

33
00:02:37,350 --> 00:02:42,930
So the end result for a select count distinct name from table is three answering the question that there

34
00:02:42,930 --> 00:02:44,780
are three unique names in the table.

35
00:02:44,940 --> 00:02:46,620
It won't tell you what those names are.

36
00:02:46,680 --> 00:02:53,400
That would just be a distinct call by itself and again notice the parentheses structure here.

37
00:02:53,540 --> 00:02:54,920
It's informing us that we are calling.

38
00:02:54,920 --> 00:03:00,810
Count on the result of distinct name if you want.

39
00:03:00,860 --> 00:03:05,510
You can also provide parentheses for name on distinct although that's not necessary.

40
00:03:05,510 --> 00:03:11,570
As we've previously discussed however some people find this result more readable let's go ahead and

41
00:03:11,570 --> 00:03:15,590
explore some examples in P.G. admin okay.

42
00:03:15,600 --> 00:03:18,360
Here I am at the query editor in PGA admin.

43
00:03:18,360 --> 00:03:22,730
Let's select everything from the payment table just so we can take a look at it.

44
00:03:24,080 --> 00:03:26,090
So say select everything from payment.

45
00:03:26,410 --> 00:03:29,910
I can see there's a payment I.D. customary the staff I.D. etc..

46
00:03:29,930 --> 00:03:32,750
There's also an amount and a payment date.

47
00:03:32,800 --> 00:03:38,410
Let's imagine I just wanted to know the number of rows that are in this table now.

48
00:03:38,440 --> 00:03:40,360
Luckily for us this table's pretty small.

49
00:03:40,360 --> 00:03:46,090
Which means I could if I wanted to scroll all the way down and then check the actual here on the left

50
00:03:46,090 --> 00:03:46,920
hand column.

51
00:03:46,960 --> 00:03:52,990
It's just account so I could scroll all the way down and eventually I would see the correct answer.

52
00:03:52,990 --> 00:03:55,940
However and this is actually quite a large table.

53
00:03:55,950 --> 00:04:01,150
There's more than a thousand entries in a realistic database you're gonna have very very large tables

54
00:04:01,150 --> 00:04:05,770
so you're not going to just scroll down just to see how many rows there are in this table.

55
00:04:05,770 --> 00:04:12,750
So one easy way to do this is just say select count and then to make it easier to read I'll pass and

56
00:04:12,750 --> 00:04:13,520
the princes.

57
00:04:13,530 --> 00:04:17,550
And it just is asking count the number of rows and all the columns.

58
00:04:17,580 --> 00:04:22,910
So this should all be the same which means it's going to be fourteen thousand five hundred and I need

59
00:04:22,920 --> 00:04:28,140
six rows so much easier to do that than scroll down until you see fourteen thousand five hundred ninety

60
00:04:28,140 --> 00:04:31,920
six and you could do this for essentially any column.

61
00:04:32,040 --> 00:04:38,730
So if I pass in the let's say amount column again this is just asking how many rows are there and the

62
00:04:38,730 --> 00:04:39,580
amount column.

63
00:04:39,660 --> 00:04:42,760
Well it should be the same as the number of rows in the actual table.

64
00:04:42,780 --> 00:04:45,280
So notice we get back the exact same result.

65
00:04:45,360 --> 00:04:50,820
So when people are beginning to learn about sequel they sometimes get confused over what column we're

66
00:04:50,820 --> 00:04:54,340
gonna pass on the count and in the end it really doesn't matter.

67
00:04:54,420 --> 00:04:57,210
It's really probably most common to see an asterisk since.

68
00:04:57,210 --> 00:05:04,640
Again it doesn't matter but sometimes it might be easier to use a column name in order to set your mind

69
00:05:04,640 --> 00:05:05,580
set.

70
00:05:05,580 --> 00:05:11,490
As far as what you were thinking when you're writing this query so if you come back later in time and

71
00:05:11,490 --> 00:05:15,270
you would see this query you can see that you were probably thinking about the amount column because

72
00:05:15,330 --> 00:05:18,000
somebody asked you a specific question of it.

73
00:05:18,090 --> 00:05:19,190
So keep that in mind.

74
00:05:19,200 --> 00:05:23,580
It might be easier for you to actually clarify with a column name.

75
00:05:23,780 --> 00:05:32,550
Okay now let's go ahead and say just select the amount column from payments run this and I can see there's

76
00:05:32,550 --> 00:05:38,240
different amounts that people are paying 7 9 9 1 8 9 2 9 9 5 9 9 etc..

77
00:05:38,340 --> 00:05:44,340
Let's imagine I wanted to figure out the actual number of payment types.

78
00:05:44,340 --> 00:05:49,290
What are the actual number of unique amounts or distinct amounts being paid.

79
00:05:49,350 --> 00:05:58,340
If I were to just use distinct on the amount column I would run this and it shows me the distinct values

80
00:05:58,370 --> 00:06:02,990
1 and I intend to write to ninety nine etc. essentially removing any duplicates.

81
00:06:02,990 --> 00:06:07,290
So this answer is a question what are the unique payment amounts.

82
00:06:07,340 --> 00:06:11,300
However my question is how many unique amounts are there.

83
00:06:11,300 --> 00:06:14,240
Which means I should be counting the result of this.

84
00:06:14,240 --> 00:06:19,580
So one way I could do that is scroll all the way down and realize there's 19 rows here or to do this

85
00:06:19,580 --> 00:06:20,670
programmatically.

86
00:06:20,750 --> 00:06:24,580
I would just say count distinct amount.

87
00:06:24,710 --> 00:06:25,550
I run this.

88
00:06:25,550 --> 00:06:32,510
And notice here when I'm using these two functions I will need to specify with princes so I'll say count

89
00:06:33,800 --> 00:06:38,200
distinct amounts and then it actually ends up working.

90
00:06:38,210 --> 00:06:45,110
So the reason in this case that I need to use parentheses is because if I don't post gross sequel is

91
00:06:45,110 --> 00:06:50,420
going to think that I'm trying to call count on some distinct column which doesn't exist.

92
00:06:50,450 --> 00:06:57,230
So this is why I need to call parentheses and specify that distinct the amount should happen first before

93
00:06:57,260 --> 00:06:57,620
I call.

94
00:06:57,620 --> 00:06:59,620
Count on whatever this result is.

95
00:06:59,800 --> 00:07:05,360
And if you want you can add in another set of parentheses just to make it more readable for you.

96
00:07:05,360 --> 00:07:10,140
It really depends on your personal style and we'll get back the same result.

97
00:07:10,140 --> 00:07:13,880
OK so that's it for learning about count.

98
00:07:13,880 --> 00:07:17,930
Coming up next we're going to learn about the select where statement which is really going to help us

99
00:07:17,930 --> 00:07:21,600
out in a lot of different query types.

100
00:07:21,620 --> 00:07:22,190
I'll see you there.
