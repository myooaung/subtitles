WEBVTT
1
00:00:05.240 --> 00:00:11.840
Welcome back everyone to this lecture on the between keyword operator the between operator can be used

2
00:00:11.840 --> 00:00:14.850
to match value against a range of values.

3
00:00:14.990 --> 00:00:20.240
So for example we can ask where is the value between a low and a high.

4
00:00:20.270 --> 00:00:26.650
And this is essentially going to be a condition you can tag along with a where statement you should

5
00:00:26.650 --> 00:00:33.730
note that using the between operator is essentially the same as asking individually where a value is

6
00:00:33.730 --> 00:00:37.860
greater than or equal to low and a value is less than or equal to high.

7
00:00:37.870 --> 00:00:41.440
So note that the low and the high here are both inclusive.

8
00:00:41.530 --> 00:00:44.230
So it's actually including the end points there.

9
00:00:44.260 --> 00:00:50.980
You can also combine the between keyword with the not logical operator essentially asking where is the

10
00:00:50.980 --> 00:00:58.870
value not between low and high and this is the same as asking value less than low or value greater than

11
00:00:58.870 --> 00:00:59.490
high.

12
00:00:59.650 --> 00:01:03.520
Note here that we are exclusive of the actual low point in High Point.

13
00:01:03.910 --> 00:01:09.280
So what I mean by that is for the not between statement if you're saying something like value not between

14
00:01:09.400 --> 00:01:10.740
eight and nine.

15
00:01:10.900 --> 00:01:16.020
If a value happens to be eight it's not going to be included in the not between verses.

16
00:01:16.570 --> 00:01:22.120
If we take a look back at the between statement that is inclusive meaning if you wanted a value between

17
00:01:22.510 --> 00:01:26.370
eight and nine it would actually include eights and nines there.

18
00:01:26.380 --> 00:01:27.600
So keep that in mind.

19
00:01:27.750 --> 00:01:34.020
And if you want to change exclusive city versus inclusive city you can just go back and use the.

20
00:01:34.020 --> 00:01:39.940
And operator and then specify listener equal to manually yourself with the comparison operators.

21
00:01:39.940 --> 00:01:42.900
Now the between operator can also be used with dates.

22
00:01:43.090 --> 00:01:45.310
You should note that you need to format dates.

23
00:01:45.340 --> 00:01:52.330
In this case and the ISO 8 6 0 1 standard format which is essentially just four numbers for the year

24
00:01:52.420 --> 00:01:58.410
a dash then two numbers for the month a dash and then two numbers for the date or the actual day.

25
00:01:58.420 --> 00:02:03.760
So that means it would look something like where is the dates between and then as a string of single

26
00:02:03.760 --> 00:02:10.840
quotes in that particular format year year year dash month month dash day day and then the other date

27
00:02:12.130 --> 00:02:18.080
some to keep in mind is when using the between operator with dates that also include timestamp information.

28
00:02:18.100 --> 00:02:23.770
So not just the actual day but also the hour minutes and seconds you should pay careful attention to

29
00:02:23.770 --> 00:02:30.640
using the between operator especially since we have the issue of inclusive city versus exclusivity of

30
00:02:30.640 --> 00:02:31.810
the not between.

31
00:02:31.810 --> 00:02:37.540
So you should take into account the fact that a date time that is both the dates and the actual time

32
00:02:37.540 --> 00:02:41.120
information would start at zero hundred hours.

33
00:02:41.200 --> 00:02:46.840
So that may have an effect depending on what the actual situation is and whether you want inclusive

34
00:02:46.840 --> 00:02:51.520
city or exclusivity around that midnight time or zero hundred hour time.

35
00:02:51.580 --> 00:02:56.010
Later on we're gonna study more specific methods to actually work with date time information types.

36
00:02:56.260 --> 00:03:01.410
So don't worry about it too much right now it's just something to keep in mind for the future let's

37
00:03:01.410 --> 00:03:05.870
go ahead and get some quick practice of the between operator and PGA admin OK.

38
00:03:05.890 --> 00:03:07.530
Here we are at P.G. Edmond.

39
00:03:07.780 --> 00:03:12.010
When I'm first going to do is check out the payment table since that's what we're going to be working

40
00:03:12.010 --> 00:03:13.210
with for our examples.

41
00:03:13.220 --> 00:03:19.600
We'll say select from payment table will grab everything but just limited to just a few rows so we can

42
00:03:19.600 --> 00:03:23.520
see the general syntax here and general columns are the payment I.D..

43
00:03:23.530 --> 00:03:27.970
Customer I.D. staff I.D. rental I.D. and then the amount and the payment date.

44
00:03:28.030 --> 00:03:30.480
So we're gonna be working off these two columns here.

45
00:03:30.520 --> 00:03:35.290
Let's go ahead and see if we can use between on the amount column.

46
00:03:35.290 --> 00:03:41.860
Let's imagine you wanted to know the actual number of payments that were done between eight and nine

47
00:03:41.860 --> 00:03:42.630
dollars.

48
00:03:42.640 --> 00:03:54.960
So what we can do is say select from payments where amount between eight and nine if I just run this

49
00:03:55.280 --> 00:03:58.650
they'll give me all the results we can see everything here is eight ninety nine.

50
00:03:58.830 --> 00:04:03.480
And if I actually wanted to know the total number of transactions I can just count the number of rows

51
00:04:03.480 --> 00:04:06.500
return and it's four hundred and thirty nine rows.

52
00:04:06.690 --> 00:04:11.340
If I wanted to know the opposite essentially everything that wasn't between eight and nine dollars I

53
00:04:11.340 --> 00:04:14.640
can simply add not between eight nine.

54
00:04:14.970 --> 00:04:20.860
I can run this and then I get the number of payments that were not between eight and nine dollars.

55
00:04:20.880 --> 00:04:27.690
Let's take a look again now at the payment date column so we can do is let's imagine.

56
00:04:27.720 --> 00:04:33.660
I wanted all the payments that happens on the first half of February of 2007.

57
00:04:33.660 --> 00:04:39.390
What I could do is let's just select everything so we can get an idea of what's happening here and we'll

58
00:04:39.390 --> 00:04:48.990
say where the payment date column is between and what we're gonna do here is make sure we format this

59
00:04:48.990 --> 00:04:58.790
correctly which is going to be the year dash the month dash let's say 0 1 and we'll say two thousand

60
00:04:58.790 --> 00:05:03.870
seven dash 0 2 and then the 15th.

61
00:05:03.870 --> 00:05:11.280
So we run this year and we can see all these payments happened between the 1st of February 2007 and

62
00:05:11.280 --> 00:05:13.590
the 15th of February 2007.

63
00:05:13.590 --> 00:05:19.110
Now something to keep in mind especially when you're dealing with a timestamp information is that this

64
00:05:19.110 --> 00:05:25.940
time information includes both the dates and our minutes et cetera.

65
00:05:25.980 --> 00:05:32.850
So that means postcard sequel essentially has to decide does a day start at zero hundred hours or at

66
00:05:32.850 --> 00:05:33.900
twenty four hundred hours.

67
00:05:33.930 --> 00:05:39.540
And if you're dealing with exclusivity versus inclusive city that actually might affect your logic.

68
00:05:39.960 --> 00:05:42.960
So what I mean by that is take a look at the results here.

69
00:05:42.990 --> 00:05:45.900
They all actually happened on the 14th.

70
00:05:45.900 --> 00:05:51.150
So if you kind of scroll down you'll see there's twenty seven rows and essentially all the payments

71
00:05:51.150 --> 00:05:56.970
that happen between the 1st and the 15th all happened on the 14th.

72
00:05:56.970 --> 00:06:05.890
Now let's actually switch this to be all the payment dates from the first to the 14th and this is where

73
00:06:05.890 --> 00:06:08.760
students often get confused they would actually expect to see these results.

74
00:06:09.070 --> 00:06:15.690
But if I run this you'll notice nothing gets returned and that's because when we're dealing with this

75
00:06:16.140 --> 00:06:20.360
end date it's actually only going up to the zero hundred hour mark.

76
00:06:20.400 --> 00:06:26.280
It's not going to the end which would be the twenty four hundred hour mark of the 14th which is why

77
00:06:26.280 --> 00:06:30.480
for these sort of between statements when you're dealing with timestamp information you just have to

78
00:06:30.480 --> 00:06:35.560
be careful that you always want to double check and make sure getting the results you expected.

79
00:06:35.560 --> 00:06:41.160
So in this case I have to go all the way to the 15th to actually include information that happened on

80
00:06:41.160 --> 00:06:42.810
the day of the 14th.

81
00:06:42.870 --> 00:06:43.400
OK.

82
00:06:43.410 --> 00:06:48.190
And later on we're going to learn a lot more about how to deal of timestamp information such as this.

83
00:06:48.300 --> 00:06:50.640
So that's it for the between examples.

84
00:06:50.640 --> 00:06:55.170
Coming up next we're going learn about a more school keywords that are very helpful in different types

85
00:06:55.170 --> 00:06:55.920
of queries.

86
00:06:55.920 --> 00:06:56.400
I'll see you there.
