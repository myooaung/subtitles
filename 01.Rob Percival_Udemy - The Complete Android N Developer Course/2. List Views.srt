1
00:00:00,620 --> 00:00:06,170
So the first thing we're going to learn in Section 5 is about list views.

2
00:00:06,170 --> 00:00:11,090
Now I'm going to create a new project straight away because it'll be much easier to show you what a

3
00:00:11,090 --> 00:00:15,570
list view is than to explain it to you.

4
00:00:18,330 --> 00:00:25,390
But essentially a list view is one of those big tables that you can have on your phone which will show

5
00:00:25,390 --> 00:00:30,910
you a large number of items of data or occasionally a small number but if you imagine scrolling through

6
00:00:30,910 --> 00:00:36,850
your contact list for example with all your numbers on your phone then that will be a list view.

7
00:00:37,120 --> 00:00:43,450
So they're extremely powerful very useful and will use them in a number of apps from now on if you're

8
00:00:43,450 --> 00:00:46,540
coming from Iowa as developments then known as tables in Iowa.

9
00:00:46,690 --> 00:00:49,250
So it's exactly the same thing as a table.

10
00:00:49,510 --> 00:00:54,910
But one good bit of news compared to IRS development is that working with less views is much much simpler

11
00:00:55,200 --> 00:00:56,530
than working with tables.

12
00:00:56,530 --> 00:00:57,610
In my opinion.

13
00:00:57,810 --> 00:01:04,570
So it's really easy to set up a list history and really easy to add your own content to it as well.

14
00:01:05,020 --> 00:01:08,250
So without further ado let's get one going.

15
00:01:08,770 --> 00:01:16,390
So we'll go over to how design view and activity main and then we've got let's remember already we don't

16
00:01:16,390 --> 00:01:22,780
really want that text view this time so I'm going to get rid of that and then I'm going to scroll down

17
00:01:22,780 --> 00:01:27,160
in my palette here and drag in a list view.

18
00:01:29,150 --> 00:01:29,680
OK.

19
00:01:29,870 --> 00:01:34,060
So by default it will align itself.

20
00:01:34,320 --> 00:01:41,050
I'll never get to the parent top and you can see we've got all those demo items already.

21
00:01:41,100 --> 00:01:42,770
So that's just an example.

22
00:01:43,290 --> 00:01:47,610
If we run the app then we wouldn't actually see these demo items.

23
00:01:47,610 --> 00:01:51,300
We have to add those ourselves but this is what appears in the

24
00:01:54,210 --> 00:01:58,700
design view so that we can at least get an idea of what atlast view is going to look like.

25
00:01:59,190 --> 00:02:00,640
So that's absolutely fine.

26
00:02:00,810 --> 00:02:06,400
Well that's just running so we can see our blank list view.

27
00:02:06,920 --> 00:02:08,910
I'm just going to add an ID to it.

28
00:02:10,930 --> 00:02:14,800
So the default is List view which is pretty good.

29
00:02:14,800 --> 00:02:18,600
I'm just going to change that so it's at least something slightly Kustom my list view.

30
00:02:21,500 --> 00:02:26,870
I wouldn't say if we just jump over and look at the emulator you can see so far we've got nothing.

31
00:02:26,870 --> 00:02:30,990
We don't have those evil items we need to add them ourselves.

32
00:02:31,640 --> 00:02:32,360
All right.

33
00:02:32,360 --> 00:02:33,640
So let's get at it.

34
00:02:33,950 --> 00:02:38,580
So my list view is the name of our list.

35
00:02:39,560 --> 00:02:42,150
So I'm going to add my code in the uncreate method.

36
00:02:43,110 --> 00:02:45,320
I'm going to have a few tiny mini challenges here.

37
00:02:45,450 --> 00:02:52,200
So the first one is can you create a variable called my list view which links to the list view that

38
00:02:52,200 --> 00:02:53,410
we've just created.

39
00:03:01,130 --> 00:03:06,890
I mean is that just going to create it with this view.

40
00:03:07,890 --> 00:03:18,860
And then my list view I should go back and just improve that.

41
00:03:19,010 --> 00:03:25,030
So remember old enter in parts that automatically and then we're going to get this from.

42
00:03:25,040 --> 00:03:28,880
Find few by Id just like we normally do.

43
00:03:28,910 --> 00:03:36,940
And then our thought Id dot my list view and that of course is going to be a view.

44
00:03:37,250 --> 00:03:38,790
But we wanted to be a list view.

45
00:03:38,810 --> 00:03:45,140
So we need to cast it to a list view like the OK.

46
00:03:45,350 --> 00:03:52,220
So now we can refer to our list view using the variable My List View the next mini challenge is to create

47
00:03:52,430 --> 00:03:58,190
an array list which contains the members of your immediate family or some names of people that you like.

48
00:03:58,190 --> 00:03:59,010
It doesn't really matter.

49
00:03:59,090 --> 00:04:04,100
But for three or four names of people in your list go for it

50
00:04:09,600 --> 00:04:10,130
all right.

51
00:04:10,150 --> 00:04:11,580
How do you manage that.

52
00:04:11,610 --> 00:04:12,470
I'm going to do.

53
00:04:13,570 --> 00:04:14,830
By creating an

54
00:04:18,090 --> 00:04:25,850
array list of strings like that and I'm going to call it

55
00:04:28,910 --> 00:04:30,590
my family.

56
00:04:31,100 --> 00:04:33,950
And I'm just going to import that.

57
00:04:34,610 --> 00:04:41,300
And this is going to be a new array list of strings

58
00:04:44,070 --> 00:04:49,730
because we're initialising a new array list hey this is a method which is why we've got the parentheses

59
00:04:49,730 --> 00:04:51,220
at the end there.

60
00:04:52,160 --> 00:04:55,860
So now I've created the array list does need to add my content to it.

61
00:04:56,180 --> 00:05:05,080
So I'm going to do that using my family it's at and then start with me.

62
00:05:11,850 --> 00:05:12,640
Cast an

63
00:05:17,750 --> 00:05:18,080
Tommy

64
00:05:22,370 --> 00:05:26,960
and finally Ralphy begin.

65
00:05:27,280 --> 00:05:30,820
So you might have done that very differently you might have created the array list and added those all

66
00:05:30,820 --> 00:05:31,340
in one go.

67
00:05:31,360 --> 00:05:34,330
But I just wanted to to show you that way.

68
00:05:34,330 --> 00:05:34,630
Right.

69
00:05:34,630 --> 00:05:41,140
So now for the clever stuff we now want to put these items in our list view so display them on our table

70
00:05:41,170 --> 00:05:44,470
essentially and we can actually do that in two lines.

71
00:05:44,470 --> 00:05:49,030
Believe it or not and if you've done iOS development before you'll know that eating a table in iOS takes

72
00:05:49,030 --> 00:05:50,610
a lot more than two lines.

73
00:05:50,620 --> 00:05:53,270
So I really like the way that it works in Android.

74
00:05:53,630 --> 00:05:57,300
What we're going to use is something called an array adapter.

75
00:05:57,310 --> 00:06:02,200
And what this essentially allows us to do is to convert our array list which we already have into a

76
00:06:02,200 --> 00:06:03,500
different format.

77
00:06:03,580 --> 00:06:09,190
In this case we're going to convert it into a list view format or at least a format that we can use

78
00:06:09,490 --> 00:06:15,580
to display content in our list view or come across a red chapters again later on in the course we'll

79
00:06:15,580 --> 00:06:17,290
use them for all sorts of little things.

80
00:06:17,290 --> 00:06:24,540
But this is our main use of them and it does make adding content to a list view really really easy.

81
00:06:24,820 --> 00:06:30,400
So let's create our array adapter.

82
00:06:30,580 --> 00:06:37,520
And again we're creating one with an array of strings.

83
00:06:37,710 --> 00:06:49,650
And let's just call it array adapter and this is going to be a new array adapter with strings.

84
00:06:49,650 --> 00:06:53,580
And we need to give it two things to create our array adapter.

85
00:06:53,670 --> 00:06:56,430
We need to give it the array list that we're creating it from.

86
00:06:56,430 --> 00:07:00,780
So my family and we we need to give it the format that we want.

87
00:07:00,990 --> 00:07:07,550
And we also need to give it the context that we're creating it in so context as usual is just this.

88
00:07:07,580 --> 00:07:20,190
So within this app and then the new format that we're creating it in we get from Android dot dot layout

89
00:07:21,060 --> 00:07:25,380
and then you can see there's a bunch of different layouts that we can create.

90
00:07:25,380 --> 00:07:33,140
So a bunch of different types so you can start to get an idea what you might use array adapters for.

91
00:07:33,140 --> 00:07:40,340
Just by looking at this list we're going to just look at the basic one which is simple list item one.

92
00:07:40,670 --> 00:07:44,600
Feel free to play around and see what the other ones look like.

93
00:07:44,600 --> 00:07:46,610
I would just use the standard one here.

94
00:07:46,970 --> 00:07:52,270
And then finally we give it the name of the array list that we want to create our re-adapt from.

95
00:07:52,310 --> 00:07:57,270
And that of course is my family.

96
00:07:57,370 --> 00:08:03,550
So just to recap what we've done is we've created an array adapter called array adapter which is a new

97
00:08:03,550 --> 00:08:11,260
array adapter of strings and we've created this from the my family array list and we've essentially

98
00:08:11,260 --> 00:08:18,310
converted that array list to a new style which is a simple list item one which we're then going to be

99
00:08:18,310 --> 00:08:21,020
able to apply to our list view.

100
00:08:21,820 --> 00:08:23,820
And we do that in one line of code.

101
00:08:25,160 --> 00:08:35,870
So my list view don't set adapter and the adapter of course is array adapter and that's it.

102
00:08:35,900 --> 00:08:37,550
And I really love that way of doing things.

103
00:08:37,550 --> 00:08:45,640
I think it's a really intuitive and simple way of adding code to a table so let's have a look.

104
00:08:45,780 --> 00:08:50,310
If we're lucky and we've done everything right app should appear just as it did before but we'll actually

105
00:08:50,310 --> 00:08:54,640
have some content in our table which will be taken from this array.

106
00:08:58,170 --> 00:08:59,220
And there it is.

107
00:08:59,520 --> 00:09:00,030
Fantastic.

108
00:09:00,030 --> 00:09:02,590
Rob Caston Tommy Ralphy.

109
00:09:02,940 --> 00:09:05,510
So that's how you add content to your list view.

110
00:09:05,580 --> 00:09:06,870
Super simple.

111
00:09:06,870 --> 00:09:11,270
The other thing I want to show you in this video is how to make your views interactive.

112
00:09:11,340 --> 00:09:16,380
So at the moment we can tap on them and they do respond like that but oversweet don't do anything but

113
00:09:16,380 --> 00:09:18,780
we can fix that with just a few lines of code.

114
00:09:20,270 --> 00:09:34,530
So what we do is take our list view my list view and we sat on item click to so that creates a listener

115
00:09:34,590 --> 00:09:39,310
for a click on the list view.

116
00:09:39,850 --> 00:09:40,800
We can then work with

117
00:09:44,090 --> 00:09:52,030
and for this we're going to create a new on item click listener as it is.

118
00:09:52,040 --> 00:09:57,910
We've got some different code in there that may just sort of have indenting so that it looks a bit clearer.

119
00:09:59,990 --> 00:10:01,750
So it's an overwrite.

120
00:10:01,950 --> 00:10:03,180
We're used to those Hopefully now

121
00:10:06,610 --> 00:10:13,570
that we get because of course some code is being run already when the items are clicked because this

122
00:10:13,570 --> 00:10:15,590
animation is taking place.

123
00:10:15,790 --> 00:10:19,300
So we're just adding our code to code that already exists.

124
00:10:20,150 --> 00:10:25,450
So let's take a quick look at the on item click code that's been created for us is a little bit complicated.

125
00:10:26,090 --> 00:10:28,830
But first off we've got our adaptive view.

126
00:10:28,880 --> 00:10:30,630
And then this question mark here.

127
00:10:30,950 --> 00:10:36,440
Essentially this adaptive view is in our case the list view that's been tapped.

128
00:10:36,440 --> 00:10:42,590
It's called an adaptive view because it's not necessarily a list view it could be a spinner or a grid

129
00:10:42,590 --> 00:10:45,980
view or any other kind of interactive user interface element.

130
00:10:45,990 --> 00:10:48,770
And that's what the question mark there represents.

131
00:10:48,770 --> 00:10:54,500
So it's an adaptive view we don't at this point know in our code what type of view it was even though

132
00:10:54,560 --> 00:10:57,940
we actually know that it was a list view because that's the only type that's been created.

133
00:10:58,280 --> 00:11:04,470
But this here is a what's known as a generic because we don't know what type of view it is.

134
00:11:04,940 --> 00:11:07,620
And then the name for that is parent.

135
00:11:07,790 --> 00:11:13,860
So just for an example if for some crazy reason we wanted to make the table disappear whenever the user

136
00:11:13,880 --> 00:11:21,950
tapped on one of the items in it we could use parent to represent the table and then said feasibility

137
00:11:23,300 --> 00:11:31,800
and then we use a few dot gone to represent disappeared.

138
00:11:32,480 --> 00:11:37,080
Sorry if you don't go on in capitals that day.

139
00:11:37,100 --> 00:11:43,610
So essentially we can use parent in this code exactly the same as we would use my list view to represent

140
00:11:43,950 --> 00:11:46,020
the list view that's just been tapped.

141
00:11:47,440 --> 00:11:53,290
So that's where that first bit is then the view variable here which is a view represents the thing that

142
00:11:53,290 --> 00:11:54,590
was actually tapped.

143
00:11:54,610 --> 00:11:57,660
So in this case a row of our list view.

144
00:11:57,910 --> 00:12:04,290
So that's the role the position integer is the number of the row that's been tapped.

145
00:12:04,320 --> 00:12:07,930
It starts at zero for the first row and then 1 2 3 et cetera.

146
00:12:07,930 --> 00:12:13,510
So we're actually going to use position to work out the name of the item in the array list that's been

147
00:12:13,510 --> 00:12:18,960
tapped and then this ID Alcaeus is actually going to be the same as position.

148
00:12:19,120 --> 00:12:22,910
But in some of the cases this idea would be different.

149
00:12:22,960 --> 00:12:26,460
So I'd recommend using position in our case not going to go into here.

150
00:12:26,470 --> 00:12:31,030
The cases where you would use ID but feel free to have a quick google of that if you want to get a bit

151
00:12:31,030 --> 00:12:32,030
more information on it.

152
00:12:32,320 --> 00:12:34,990
But really at this stage all we need is position

153
00:12:38,030 --> 00:12:40,820
so very quick challenge then can you make it.

154
00:12:40,820 --> 00:12:47,400
That's the name of the person that was tapped appears in the locks as soon as it's tapped for it.

155
00:12:52,920 --> 00:12:54,290
I said easy.

156
00:12:54,610 --> 00:13:06,630
Should have been so LOEG taught I information and then all these person tapped to be the instructions

157
00:13:07,760 --> 00:13:21,490
old and to import the log framework and then we just need my family and then get the item that we want

158
00:13:21,490 --> 00:13:28,730
to get is the one that was tapped on which remember is this position variable that so that's it let's

159
00:13:29,040 --> 00:13:30,560
just run that and see if that works.

160
00:13:30,560 --> 00:13:37,580
We should now have an interactive table that when we tap on it it locks person tapped and then gets

161
00:13:37,580 --> 00:13:40,580
the name of the person that was tapped.

162
00:13:45,680 --> 00:13:46,280
OK.

163
00:13:46,330 --> 00:13:51,760
So Robin Kesten that Anita just scroll that up.

164
00:13:51,790 --> 00:13:54,260
Every gay person tapped rope and Keston

165
00:13:58,650 --> 00:13:59,910
fabulous.

166
00:14:00,240 --> 00:14:06,060
Now his views are very important and the code that we've just introduced there is not not necessarily

167
00:14:06,070 --> 00:14:10,390
straightforward so I'm going to give you another challenge to get this really clear in your head.

168
00:14:10,430 --> 00:14:16,200
I want you to get rid of all the code that we've got him and your last few

169
00:14:19,670 --> 00:14:20,170
go.

170
00:14:20,350 --> 00:14:26,110
And then I want you to start from scratch and add a new list view which will contain the names of four

171
00:14:26,110 --> 00:14:28,380
friends this time rather than family members.

172
00:14:28,470 --> 00:14:32,110
Then when you tap on them I want you to create a toast.

173
00:14:32,210 --> 00:14:38,110
Remember that's a little message that appears at the bottom of the screen that says hello and then the

174
00:14:38,110 --> 00:14:43,870
name of the person that's been tapped on a little challenge there to remember how to do toasts as well.

175
00:14:43,870 --> 00:14:46,490
Feel free to have a Google if you can't remember how to do it.

176
00:14:46,590 --> 00:14:54,980
But best of luck.

177
00:14:54,990 --> 00:14:56,430
All right.

178
00:14:56,430 --> 00:14:57,970
I do hope you manage that.

179
00:14:58,440 --> 00:15:00,140
Let's get cracking straight away.

180
00:15:00,930 --> 00:15:09,010
I'm just going to track that up and then all I'm going to do is change the ID to

181
00:15:11,830 --> 00:15:12,960
friends list for you.

182
00:15:16,580 --> 00:15:19,760
Let me that's all I need to do that.

183
00:15:19,990 --> 00:15:21,370
And now I'm back in the

184
00:15:24,440 --> 00:15:33,080
uncreate method of my main activity touch of a file and let's start by getting our list of the list

185
00:15:33,080 --> 00:15:33,670
view.

186
00:15:35,420 --> 00:15:42,710
And then I'll call it friends list view to match up with the idea that we're going to need to cast it

187
00:15:42,770 --> 00:15:54,130
as a list view and we're going to get it using find view by id and then also is taught ID taught friends

188
00:15:54,130 --> 00:16:00,300
list V.

189
00:16:00,370 --> 00:16:06,220
Now that's create our list of friends you may have thought that the way we created derailers last time

190
00:16:06,430 --> 00:16:07,510
was not particularly neat.

191
00:16:07,510 --> 00:16:11,970
We had to create it and then add each value individually on a separate line.

192
00:16:11,980 --> 00:16:17,980
Unfortunately in Java there's no easy way to create an array list and impose values to it straight away

193
00:16:18,340 --> 00:16:20,560
like there is in a number of other languages.

194
00:16:20,740 --> 00:16:24,220
But I'm going to show you another way just for a little bit of variety.

195
00:16:24,220 --> 00:16:30,330
Essentially this involves creating a list and then converting it into an array list.

196
00:16:30,380 --> 00:16:34,030
And remember a list is like an array but it's immutable.

197
00:16:34,030 --> 00:16:35,460
So you can't change it.

198
00:16:35,470 --> 00:16:38,540
So here we actually could use a list because we're not planning to change it.

199
00:16:38,560 --> 00:16:44,890
But I want to stick to using array lists because then we can use the same object type regardless of

200
00:16:44,890 --> 00:16:47,000
whether we're planning to change it or not.

201
00:16:47,180 --> 00:16:59,460
But the way I'm going to show you here is to take an array list of strings just as befool and I'll call

202
00:16:59,460 --> 00:17:09,150
it my friends this time and this is going to be a new array list and I do like to specify you don't

203
00:17:09,150 --> 00:17:15,990
have to specify the type but I like to specify that as strings and then we're going to create that from

204
00:17:16,080 --> 00:17:20,450
a list and we can do that using as list

205
00:17:27,830 --> 00:17:39,860
and let's just import we need them so as list and this is then where we put our four friends.

206
00:17:39,950 --> 00:17:44,420
So I'm going to put John Paul

207
00:17:46,940 --> 00:17:52,950
George and we can go.

208
00:17:53,410 --> 00:17:55,160
So a bit of a mouthful there.

209
00:17:55,450 --> 00:18:00,550
And that's not as nice as a lot of other languages but it is the simplest we can do if you want to create

210
00:18:00,550 --> 00:18:05,670
an array list in one line and essentially you need to create it in just the same way that we did before.

211
00:18:05,680 --> 00:18:12,180
But you create it from a list and you use as a list to create that from your individual values.

212
00:18:13,450 --> 00:18:16,150
All right now we have our frailest.

213
00:18:16,180 --> 00:18:20,360
So let's create our array adapter.

214
00:18:22,190 --> 00:18:23,350
So as before.

215
00:18:27,490 --> 00:18:37,320
And create an array adapter of strings or call it array adapter and it's going to be a new adapter and

216
00:18:37,340 --> 00:18:38,910
exactly as before.

217
00:18:39,170 --> 00:18:46,070
We use this for the context and then Android dot dot lay out

218
00:18:48,720 --> 00:18:52,400
dot simple list item one.

219
00:18:52,430 --> 00:18:55,100
So that's the type that we're creating here.

220
00:18:55,130 --> 00:18:59,630
And then we're creating it from my friends

221
00:19:03,110 --> 00:19:11,440
and now we've got our re-adapt to let's attach it to friends list view

222
00:19:17,470 --> 00:19:18,270
just like that.

223
00:19:21,070 --> 00:19:26,410
And before we create our toast code I just want to check and make sure that that's all working OK.

224
00:19:29,160 --> 00:19:38,140
I'm fairly convinced it is but worth checking I think I would get as my lovely list of friends

225
00:19:42,780 --> 00:19:43,620
get rid of that.

226
00:19:43,650 --> 00:19:56,910
And now we need to create how unclick listener so friendless feud set on item click listener and then

227
00:19:57,210 --> 00:20:06,290
new on item click list every day and there's a lovely default code.

228
00:20:06,500 --> 00:20:15,480
So all we need to do is add our toast code here and I'm going to do that in one line so taste

229
00:20:19,280 --> 00:20:24,790
make text and we want the first of those too.

230
00:20:25,760 --> 00:20:31,900
And we also want to import ticed framework

231
00:20:35,810 --> 00:20:43,480
and then we're going to use get application context to get out of context just as we've done before.

232
00:20:43,940 --> 00:20:46,130
And now we want the text for

233
00:20:49,280 --> 00:20:49,980
outposts.

234
00:20:49,990 --> 00:20:51,280
It's going to be hello.

235
00:20:51,560 --> 00:20:54,600
And then we want the name of the person that was tapped on.

236
00:20:54,950 --> 00:21:02,290
And we're going to get that from my friends sorry dog get

237
00:21:05,480 --> 00:21:08,810
and then position

238
00:21:12,720 --> 00:21:16,640
and then we just want to decide how long it's going to appear.

239
00:21:19,010 --> 00:21:29,300
And I don't really care for length alone and we want to show that ticed says is good quick recap of

240
00:21:29,300 --> 00:21:34,780
how you display tastes but that's nothing new for us we've done that a few times now.

241
00:21:37,190 --> 00:21:46,090
If your code looked more or less like this with any luck that will now display table and then we can

242
00:21:46,090 --> 00:21:51,330
tap on these Hello Paul hello george.

243
00:21:51,840 --> 00:21:53,340
Fantastic.

244
00:21:53,340 --> 00:21:57,300
So you're now pretty comfortable hopefully with this fuse and how they work in the next video we're

245
00:21:57,300 --> 00:22:02,990
going to use that knowledge to create a mini times table testing app so that.
