1
00:00:00,530 --> 00:00:03,680
This section we're going to be building a clone of Twitter.

2
00:00:03,760 --> 00:00:09,550
Hugely popular social app where you can follow people and read everything they care to share with the

3
00:00:09,550 --> 00:00:10,060
world.

4
00:00:10,060 --> 00:00:13,460
That's part of my aim to get you increasingly independent as an app developer.

5
00:00:13,480 --> 00:00:18,460
I'm just going to show you once after we get a build and then I'm going to wish you good luck as you

6
00:00:18,460 --> 00:00:20,940
do your best to build as much of it as you can.

7
00:00:20,950 --> 00:00:25,420
As always though if you have any problems I'll lead you through it and you're very welcome to just follow

8
00:00:25,420 --> 00:00:27,700
along with the videos if you'd rather.

9
00:00:28,540 --> 00:00:30,650
So here's what we're building.

10
00:00:31,780 --> 00:00:37,090
It's a fairly familiar looking screen but you can see we've just got a single sign up Logan bottom which

11
00:00:37,090 --> 00:00:40,160
has a slightly different way of allowing users to log in.

12
00:00:40,300 --> 00:00:45,820
Essentially what's going to happen is when a user signs up or logs in it will attempt to lock them in

13
00:00:46,870 --> 00:00:49,800
and if it's successful it will lock them in.

14
00:00:49,990 --> 00:00:53,460
And if not they it will attempt to sign them up.

15
00:00:53,680 --> 00:00:58,240
So it's not necessarily a great way of doing a log in system because if someone missed types they use

16
00:00:58,240 --> 00:01:02,260
a name that it will just sign them up with a new user name rather than telling them that they've got

17
00:01:02,260 --> 00:01:02,930
something wrong.

18
00:01:02,950 --> 00:01:06,470
But it might work for them and it's a slight change from what we've done before.

19
00:01:06,490 --> 00:01:10,110
So that's how we're going to do my logging for this.

20
00:01:10,210 --> 00:01:15,010
And then once we log in you can see we've got a user list here.

21
00:01:15,160 --> 00:01:18,290
So these are all the users on the app that are not my user.

22
00:01:18,610 --> 00:01:27,610
And crucially we can select and de-select users here and our past server will keep track of which ones

23
00:01:27,700 --> 00:01:32,170
are ticked so that we know who our current user is following.

24
00:01:32,170 --> 00:01:34,350
And then we've got our menu here.

25
00:01:34,620 --> 00:01:38,920
So with obviously great logout button they're fairly straightforward but we've got a tweet button as

26
00:01:38,920 --> 00:01:43,630
well which will open an alert dialog here and allow the user to send a tweet

27
00:01:46,610 --> 00:01:52,530
something fairly mundane like hello there and then press send and then it will say that on the Passover

28
00:01:52,700 --> 00:02:00,260
and tell the user that the tweet has set and then a final part of the up is when the user wants to view

29
00:02:00,290 --> 00:02:01,610
their feet.

30
00:02:01,820 --> 00:02:08,570
I can view the tweets of people that they are following those tweets are displayed in date order and

31
00:02:08,570 --> 00:02:13,670
you can see we're using a slightly different structure for the list view there and I'll give you a hint

32
00:02:13,670 --> 00:02:18,950
you'll need to use something called a simple adapter rather than an array adapter to get your data to

33
00:02:18,950 --> 00:02:20,410
display like that.

34
00:02:20,690 --> 00:02:23,240
But I'm sure you can figure that out with a little bit of googling.

35
00:02:23,270 --> 00:02:28,360
Time now to post the video and create this Twitter app.

36
00:02:28,670 --> 00:02:29,600
Best of luck.

37
00:02:29,630 --> 00:02:30,030
Go for it

38
00:02:40,330 --> 00:02:46,700
to one of the purposes of these final couple of apps is to show you how quick and easy it is to create

39
00:02:46,760 --> 00:02:50,840
a relatively complicated app with password.

40
00:02:50,960 --> 00:02:56,340
And the skills that you've learned so far in Android studio will jump over to easy to

41
00:02:59,700 --> 00:03:00,080
launch.

42
00:03:00,080 --> 00:03:00,660
Instance

43
00:03:03,410 --> 00:03:08,070
and then AWOS marketplace pass

44
00:03:11,520 --> 00:03:13,270
pass ever powered by bit nomy

45
00:03:16,260 --> 00:03:23,070
choose the teacher you might cry review a launch and then launch.

46
00:03:23,600 --> 00:03:27,640
I'm going to create a new keypad called Twitter

47
00:03:30,710 --> 00:03:31,050
keypad

48
00:03:34,090 --> 00:03:41,160
save that and then launch instance K and we get to go

49
00:03:46,440 --> 00:03:57,020
and while that setting up I'll to Android dev cos dot com slash pass project dot zip and I would recommend

50
00:03:57,020 --> 00:04:02,510
downloading a new version of this each time because it does get updated fairly often so each time you

51
00:04:02,510 --> 00:04:10,100
create a new Passover project just download another copy of the past projects and then when that's downloaded

52
00:04:10,700 --> 00:04:12,510
we can jump over to Andrews studio.

53
00:04:14,780 --> 00:04:18,260
And file open.

54
00:04:18,260 --> 00:04:23,270
Actually I'll just quickly rename the folder passivist art project to Twitter

55
00:04:28,320 --> 00:04:32,540
and then we'll find it on the desktop.

56
00:04:32,570 --> 00:04:35,020
There we go and open that up

57
00:04:37,950 --> 00:04:47,470
and then back over to Firefox to log into our past seven instance I clicked connect to use a Java S-sh

58
00:04:47,470 --> 00:04:51,390
client and then put in the keep up with this a few times now.

59
00:04:51,400 --> 00:05:01,220
So it should be fairly familiar uses replaceable desktop and then Twitter keypad.

60
00:05:01,450 --> 00:05:08,500
PM will store that in the browser cache so we don't have to type it in next time and they launch S-sh

61
00:05:08,500 --> 00:05:10,320
client.

62
00:05:10,360 --> 00:05:11,700
And here we go.

63
00:05:12,340 --> 00:05:19,600
So we're going to change directory to apps slash pass slash H.T. docs

64
00:05:22,530 --> 00:05:33,370
and then we're going to use vi to launch the text editor and we're going to edit server Daut J.S..

65
00:05:33,500 --> 00:05:44,060
So now we could apply the master key and server you Arel start with the server you are el and also quickly

66
00:05:44,060 --> 00:05:58,900
jump over into Firefox and load the past dashboard OK and then back that to Android studio and let's

67
00:05:58,900 --> 00:06:02,680
find a starter application.

68
00:06:02,980 --> 00:06:03,760
There we go.

69
00:06:03,760 --> 00:06:09,700
So we'll begin by pasting in our server make sure we don't forget the trailing slash at the end there

70
00:06:11,570 --> 00:06:12,390
get the masticate

71
00:06:16,450 --> 00:06:20,290
and pasted it in for the client key and then the app ID

72
00:06:23,860 --> 00:06:24,460
and we gave

73
00:06:28,150 --> 00:06:31,320
so well run the app in the background to make sure we're connected.

74
00:06:34,030 --> 00:06:35,980
You pass that everything's working OK.

75
00:06:37,350 --> 00:06:42,630
And a quick change I'm going to make is just disabling the automatic use of that because we're not going

76
00:06:42,640 --> 00:06:43,290
be using that here.

77
00:06:43,290 --> 00:06:47,000
We're going to have a proper logon system and there we go.

78
00:06:47,270 --> 00:06:48,780
So I passed it was successful.

79
00:06:48,780 --> 00:06:50,260
So we're looking promising.

80
00:06:50,460 --> 00:06:58,920
Let's do a quick refresh of the past dashboard and make sure that everything is synchronized.

81
00:06:58,970 --> 00:06:59,560
And there we go.

82
00:06:59,560 --> 00:07:04,470
So we've got our example object with the string.

83
00:07:04,520 --> 00:07:07,290
And number perfect.

84
00:07:07,940 --> 00:07:11,050
So now we're going to build our log in page.

85
00:07:11,060 --> 00:07:16,510
So let's zoom in and we'll start with

86
00:07:19,600 --> 00:07:20,760
a plain text field

87
00:07:24,240 --> 00:07:29,010
which will make for width get rid of the text

88
00:07:33,560 --> 00:07:35,800
but we will have a hint

89
00:07:44,760 --> 00:07:50,130
which I'll call a username and we'll call this user name at it.

90
00:07:50,160 --> 00:07:50,640
Text

91
00:07:55,760 --> 00:07:58,640
OK them will use a password that it takes to go underneath that

92
00:08:03,990 --> 00:08:11,340
which will have a hint of password and we'll call password and text

93
00:08:14,580 --> 00:08:16,280
all rights and then we'll have a button

94
00:08:22,940 --> 00:08:36,040
and we're just going to have a single button for sign up and logon and we'll see how that works in a

95
00:08:36,040 --> 00:08:36,660
minute.

96
00:08:36,700 --> 00:08:37,720
Just make sure it scented

97
00:08:41,960 --> 00:08:52,510
and then the final thing we need to do here is to get that on click and I'll call it Sign-Up log in.

98
00:08:52,530 --> 00:08:53,260
All right.

99
00:08:53,790 --> 00:08:57,060
So now back to main activity I'm going to update the title First off

100
00:09:03,400 --> 00:09:05,020
so I'll use set title

101
00:09:10,560 --> 00:09:13,150
and I'll call it Twitter logging.

102
00:09:16,620 --> 00:09:19,650
And then we'll create the method for signing up for logging in

103
00:09:23,780 --> 00:09:26,430
which you'll be called by the bank view.

104
00:09:27,580 --> 00:09:31,060
And this time I'm just going to attempt to log in straightaway.

105
00:09:31,580 --> 00:09:34,720
So we'll get the text first off.

106
00:09:34,820 --> 00:09:41,670
So start with username and text which is going to be added text.

107
00:09:44,050 --> 00:09:51,210
From File view by id Zeus's dot ID dot username and text.

108
00:09:51,760 --> 00:09:52,660
Same for password

109
00:09:59,970 --> 00:10:01,560
like an added text

110
00:10:04,140 --> 00:10:13,180
by its ID that Id dot password added text and then we can attempt the log in first of all.

111
00:10:13,860 --> 00:10:24,010
So we're going to use Pownce user to log in in background and the username is going to be user name

112
00:10:24,310 --> 00:10:37,820
and it text don't get text string and the password is going to be password added text.

113
00:10:37,860 --> 00:10:48,980
Get text dot to string and then we'll have a callback which will be a new logo and callback

114
00:10:54,250 --> 00:10:54,790
OK.

115
00:10:54,920 --> 00:11:00,350
Then we'll check to see if he is no.

116
00:11:01,070 --> 00:11:02,090
Then we'll just log

117
00:11:05,480 --> 00:11:06,250
that we did

118
00:11:13,310 --> 00:11:20,440
else will attempt to sign the user up to do that we'll need to create a new user.

119
00:11:20,690 --> 00:11:34,190
So the first user parse user is going to be a new parse user and then will set the user name to the

120
00:11:34,760 --> 00:11:36,220
user name and text.

121
00:11:36,290 --> 00:11:39,390
Don't get text talk to string

122
00:11:42,900 --> 00:11:44,790
and then password

123
00:11:48,130 --> 00:11:53,020
is password at a text called Don't Get text talk to string

124
00:11:58,340 --> 00:12:06,140
and then we'll take up as user and sign them up in the background with a new sign up Colback

125
00:12:10,410 --> 00:12:13,960
and a game will check if he is no

126
00:12:17,870 --> 00:12:18,460
more log

127
00:12:22,260 --> 00:12:23,800
in I signed up

128
00:12:28,060 --> 00:12:31,580
else will display an error message to the user.

129
00:12:31,580 --> 00:12:32,760
So a toast

130
00:12:38,160 --> 00:12:41,730
and the message will just use the past message so that's a dot

131
00:12:44,560 --> 00:12:46,470
get message.

132
00:12:48,460 --> 00:12:49,400
All right.

133
00:12:50,190 --> 00:12:51,700
So let's take a look.

134
00:12:53,260 --> 00:12:57,570
Note that this isn't necessarily the best way to set up a set up or log in screen.

135
00:12:57,580 --> 00:13:03,020
It's very quick and easy but it does have the downside that if the user tries to log in but mistype

136
00:13:03,070 --> 00:13:06,790
their username then instead of giving them an error message it will

137
00:13:09,770 --> 00:13:15,750
try and create a new account for them with the new user name which might not be what they want to do.

138
00:13:15,980 --> 00:13:18,190
So I wouldn't necessarily recommend this method.

139
00:13:19,100 --> 00:13:24,770
For production apps but it is quite a nice simple one and worth being aware of.

140
00:13:25,160 --> 00:13:26,190
OK so here we go.

141
00:13:26,260 --> 00:13:27,310
Username and password.

142
00:13:27,320 --> 00:13:31,460
Oh I forgot to change the password to for with

143
00:13:36,320 --> 00:13:38,420
so I will just change that.

144
00:13:38,420 --> 00:13:40,040
But for now it's to a test.

145
00:13:40,040 --> 00:13:42,640
So we'll have Raub password.

146
00:13:42,650 --> 00:13:45,020
One two three four.

147
00:13:45,170 --> 00:13:51,960
Sign up slash logon so should sign that user up every day.

148
00:13:52,270 --> 00:13:55,720
Sign up.

149
00:13:55,930 --> 00:14:01,550
And then if I do it again I should log the user in one form.

150
00:14:02,050 --> 00:14:05,280
Let's just have a quick look and see what error messages we get.

151
00:14:05,500 --> 00:14:11,260
If we don't enter a password you can see that we did get a friendly error message password can be missing

152
00:14:11,260 --> 00:14:20,320
or blank but it has that nasty Java Lang et cetera before it which we don't really want.

153
00:14:20,320 --> 00:14:26,810
So one way to get rid of that is to split up the message by a space.

154
00:14:27,280 --> 00:14:33,430
And we want essentially everything after the first spites and we can do that with what's known as a

155
00:14:33,430 --> 00:14:37,140
substring.

156
00:14:37,160 --> 00:14:45,570
So if we get e don't get message and then we'll use a substring which allows us to start at a certain

157
00:14:45,570 --> 00:14:47,540
point in the string.

158
00:14:47,940 --> 00:14:51,120
And we want to start just after that first space.

159
00:14:51,210 --> 00:15:00,650
So we need to know where that first base is and we can do that using a target message index of.

160
00:15:00,960 --> 00:15:07,640
And then we want to get the index of the space so let's have a quick look at that.

161
00:15:08,240 --> 00:15:09,130
And here we go.

162
00:15:09,230 --> 00:15:13,080
So if I try and sign up or log in with a blank username and password.

163
00:15:13,100 --> 00:15:13,690
There we go.

164
00:15:13,850 --> 00:15:18,190
We get a nice message now and the password is full with as well.

165
00:15:18,680 --> 00:15:20,630
It's a little bit of a boring screen.

166
00:15:20,630 --> 00:15:25,420
I think I'm going to quickly add in the Twitter logo just to brighten it up a little bit.

167
00:15:27,850 --> 00:15:29,560
So we're going to Google Images

168
00:15:33,790 --> 00:15:34,660
Hello.

169
00:15:37,480 --> 00:15:41,800
That we gave that one went perfectly and it's a good size as well.

170
00:15:44,240 --> 00:15:51,180
We're going to control click save images and then rename it.

171
00:15:51,180 --> 00:15:58,490
It's just Twitter logo.

172
00:15:58,560 --> 00:16:06,310
We go over to find the old Windows Explorer and Windows copy Twitter logo with Kamado Control-C and

173
00:16:06,310 --> 00:16:12,520
then back over to Android studio into the drawable folder.

174
00:16:13,920 --> 00:16:18,930
And paste.

175
00:16:19,380 --> 00:16:21,790
Oh I've still got a leftover Instagram logo.

176
00:16:23,390 --> 00:16:24,050
I'll delete that

177
00:16:27,820 --> 00:16:36,100
k and then we'll just leave everything down a little bit by bringing in our image.

178
00:16:43,680 --> 00:16:44,370
Okay.

179
00:16:44,630 --> 00:16:45,860
And there's my Twitter logo

180
00:16:49,460 --> 00:16:50,630
superb.

181
00:16:51,420 --> 00:17:00,310
I'll just give that a fixed height and maybe 100 deep is lovely and then I'll change

182
00:17:03,890 --> 00:17:10,250
the first edit text so that it aligns to the image view.

183
00:17:11,830 --> 00:17:20,840
Rather than the top of the screen so I use Android lay out below.

184
00:17:23,380 --> 00:17:28,920
And we haven't said an ID for that one yet said it's quickly to that it's image view

185
00:17:36,060 --> 00:17:40,750
and we go that should move everything down.

186
00:17:41,030 --> 00:17:43,850
After I get rid of a line parent

187
00:17:49,370 --> 00:17:52,380
as just reduce the top marginal bits

188
00:17:57,080 --> 00:17:57,930
username.

189
00:17:57,930 --> 00:17:58,690
There we go.

190
00:17:59,030 --> 00:17:59,720
I'm happy with that.

191
00:17:59,720 --> 00:18:03,620
That looks like a perfectly nice logon screen.

192
00:18:03,650 --> 00:18:04,020
Great.

193
00:18:04,040 --> 00:18:07,960
That's a very quick in and sign up screen for out what's app.

194
00:18:07,970 --> 00:18:13,550
Now we're going to go on and allow users to view the other users that are on the platform and follow

195
00:18:13,560 --> 00:18:14,900
or follow them.

196
00:18:14,900 --> 00:18:16,580
We'll do that in the next video.
