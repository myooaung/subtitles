1
00:00:00,360 --> 00:00:05,630
Now for a bit of fun we're going to use the animation skills that we learned in the last couple of videos

2
00:00:05,910 --> 00:00:10,980
along with a lot of the Java techniques we learned in the previous section to build an app that I'm

3
00:00:10,980 --> 00:00:18,090
going to call Kinect 3 level logic if the app is going to be exactly the same as tic tac toe or naughts

4
00:00:18,090 --> 00:00:24,000
and crosses which if you're not familiar with it is a very simple game where you fill in a three by

5
00:00:24,000 --> 00:00:26,490
three great with noughts and crosses with a friend.

6
00:00:26,640 --> 00:00:31,500
And the first person to get three in a row either noughts or crosses is the winner.

7
00:00:31,680 --> 00:00:37,240
I'm going to shake it up slightly though and we're going to use counters from the game connect 4.

8
00:00:37,560 --> 00:00:43,230
And we're also going to use a dropdown animation to bring the counters into the game just to make it

9
00:00:43,230 --> 00:00:44,950
a little bit more interesting.

10
00:00:45,480 --> 00:00:50,000
So I've put together some graphics here.

11
00:00:50,460 --> 00:00:57,430
We've got our yellow Kountze a red counter and a simple board that I've put together.

12
00:00:57,430 --> 00:00:58,160
There you go.

13
00:00:58,470 --> 00:01:05,400
And you can download those from the project in the next lecture if you like or you can of course download

14
00:01:05,400 --> 00:01:09,700
or find or make your own to make it a little bit more unique.

15
00:01:09,750 --> 00:01:12,400
So I definitely recommend giving this a try on your own.

16
00:01:12,420 --> 00:01:15,500
But it is a much bigger app than anything that we've made so far.

17
00:01:15,630 --> 00:01:17,530
It will be a big challenge.

18
00:01:17,760 --> 00:01:22,980
So don't feel bad at all if you end up watching the video you'll learn a lot of techniques doing so

19
00:01:23,070 --> 00:01:24,090
as well.

20
00:01:24,630 --> 00:01:30,540
So best of luck get as far as you can on your own and then feel free to watch me putting together K'NEX

21
00:01:30,570 --> 00:01:31,520
3.

22
00:01:31,530 --> 00:01:32,470
Good luck.

23
00:01:39,110 --> 00:01:39,760
All right.

24
00:01:39,970 --> 00:01:49,060
Hey we got them sir as usual create a new project called Kinect 3.

25
00:01:52,440 --> 00:01:55,180
And get it set up.

26
00:01:55,560 --> 00:02:03,150
So I'm going to start by importing my images and getting the screen set up and then we'll start working

27
00:02:03,150 --> 00:02:07,670
out the logic of the app and how we can make that all fit together.

28
00:02:07,680 --> 00:02:13,860
The last part will be actually working out whether someone has one that's the particular challenge here

29
00:02:14,190 --> 00:02:18,570
we have to keep up with what the players have actually done.

30
00:02:18,570 --> 00:02:24,170
And then each time someone goes we're going to test to see if someone's got three in a row.

31
00:02:24,690 --> 00:02:29,460
So we'll find out exactly how to do all of that as we go along.

32
00:02:31,360 --> 00:02:33,060
Let's get rid of our text.

33
00:02:33,700 --> 00:02:36,430
And John privity

34
00:02:39,170 --> 00:02:46,730
our images and we get into trouble and just place those in.

35
00:02:46,800 --> 00:02:51,440
So I'm actually going to start by adding a great layout.

36
00:02:51,440 --> 00:02:56,400
This is something we haven't used yet but you can anticipate it might be useful for a three by three

37
00:02:56,400 --> 00:02:59,390
grid which essentially this game is.

38
00:02:59,820 --> 00:03:07,230
So our grid layout allows us to choose a certain number of horizontal and vertical rows and columns

39
00:03:07,650 --> 00:03:09,300
to put our objects in.

40
00:03:09,300 --> 00:03:11,710
Which is perfect for us it's just what we want.

41
00:03:11,760 --> 00:03:19,820
So I'm going to set the column count on the grid layout to 3 and the count to three as well.

42
00:03:21,050 --> 00:03:30,640
And then I'm going to select the background and I want the background to be the board image that we

43
00:03:30,640 --> 00:03:33,280
just added.

44
00:03:33,390 --> 00:03:35,330
So I would say that looks good.

45
00:03:36,450 --> 00:03:43,560
Having said that I don't want the height to be stretched out so I'm going to manually set the height

46
00:03:44,220 --> 00:03:49,230
to somewhere around 360.

47
00:03:49,300 --> 00:03:51,940
So now I'm going to grab an image V.

48
00:03:52,270 --> 00:03:57,010
This is going to be for my first counter and you can see even though we've set the grid layout to three

49
00:03:57,010 --> 00:04:02,260
by three we've still got loads more rows and columns that we need don't worry about that we'll sort

50
00:04:02,260 --> 00:04:05,520
that out in a minute so you can draft that wherever you like.

51
00:04:06,880 --> 00:04:16,420
And then we'll just set the SIRC to a red counter that we added a moment ago.

52
00:04:16,710 --> 00:04:18,720
It gets a little bit too large at the moment.

53
00:04:18,870 --> 00:04:22,330
So I'm just going to make that a little bit smaller scale for about 90

54
00:04:26,000 --> 00:04:28,510
tepees that we get.

55
00:04:29,110 --> 00:04:37,370
And at the same time I'll go into the text field and then it's just a little bit easier to view it here.

56
00:04:37,660 --> 00:04:44,200
I'm going to change the row and the column of my image to be 0 and 0.

57
00:04:44,410 --> 00:04:50,680
Which means it's going to be in the top left of our table and then I'll manually set that again to three

58
00:04:50,890 --> 00:04:53,410
by three.

59
00:04:53,610 --> 00:04:56,790
So we should now find that this is the top left.

60
00:04:57,430 --> 00:05:02,580
And now this is roughly right in terms of its size and positioning.

61
00:05:02,580 --> 00:05:10,170
So I'm going to use command C to copy that and then command V and I'm going to pasted in or I want it

62
00:05:10,270 --> 00:05:12,790
so 0 column 1.

63
00:05:12,870 --> 00:05:21,550
If you get that wrong you can always paste it again in the SML and then Rozier column 2.

64
00:05:22,050 --> 00:05:26,450
I can't find that so I'm just going to pop it in there and then change it.

65
00:05:26,790 --> 00:05:30,420
So in fact I think I'll do that for all of these.

66
00:05:30,440 --> 00:05:31,560
So one

67
00:05:34,530 --> 00:05:36,970
I'm just pasting in each time here.

68
00:05:39,050 --> 00:05:42,840
And now it's a little bit easier to find the one that I want.

69
00:05:42,880 --> 00:05:45,070
Except I can't find very two.

70
00:05:45,190 --> 00:05:45,790
Not a problem.

71
00:05:45,790 --> 00:05:46,450
Now I can

72
00:05:49,310 --> 00:05:55,150
and in fact I should be able to just drag these around roughly.

73
00:05:55,290 --> 00:05:58,700
So the only problem is how griller is currently four by four.

74
00:05:58,890 --> 00:06:07,600
I could change that down in the example but just to keep variety in we'll change it to three by three.

75
00:06:08,820 --> 00:06:09,150
That we get.

76
00:06:09,170 --> 00:06:12,810
So now we've got three by three great filled with counters.

77
00:06:12,970 --> 00:06:17,620
Obviously the counters aren't quite in the right position so I'm just going to manually position all

78
00:06:17,620 --> 00:06:30,160
of those using margin's So that first one I think it could probably do with 10 deep on the left.

79
00:06:30,160 --> 00:06:34,070
Probably the same on the top and in fact

80
00:06:37,210 --> 00:06:41,420
probably 10 deep all around will position it quite nicely.

81
00:06:41,920 --> 00:06:45,280
And let's see what we need for the next one along.

82
00:06:47,510 --> 00:06:54,620
So if we can't get away with just putting 10 deep ways all around probably not quite on this one we

83
00:06:54,620 --> 00:07:02,710
definitely need 10 pages on the top but I think we need a bit more on the left.

84
00:07:03,700 --> 00:07:05,970
Let's try 20.

85
00:07:06,030 --> 00:07:07,190
It looks pretty good.

86
00:07:07,190 --> 00:07:10,670
Are we up to see easier when we move this one along.

87
00:07:10,670 --> 00:07:17,510
So again we're definitely 110 space on the top and on the left.

88
00:07:17,810 --> 00:07:19,610
Let's try that to you this time

89
00:07:22,960 --> 00:07:23,470
OK.

90
00:07:23,620 --> 00:07:24,560
That looks pretty good.

91
00:07:24,580 --> 00:07:28,200
I think I want this one to move slightly to the right.

92
00:07:29,130 --> 00:07:35,950
So let's try 25 teepees and then this one can come back slightly.

93
00:07:39,450 --> 00:07:41,220
Let's try twenty there.

94
00:07:44,760 --> 00:07:45,300
OK.

95
00:07:45,310 --> 00:07:48,020
Great ones go in a little bit too far back.

96
00:07:49,400 --> 00:07:52,650
So let's put 25 phatty.

97
00:07:52,790 --> 00:08:00,380
OK so I like load them on to be quite perfect but I don't really mind in terms of the left margins they're

98
00:08:00,380 --> 00:08:07,700
going to be the same for all of these so ten twenty five and 10 should do the trick so I'm just going

99
00:08:07,700 --> 00:08:11,540
to put those in really quickly.

100
00:08:14,930 --> 00:08:18,510
And then we'll deal with the heights in a minute.

101
00:08:22,710 --> 00:08:23,060
OK.

102
00:08:23,200 --> 00:08:24,300
And down here as well

103
00:08:29,610 --> 00:08:31,020
10 25

104
00:08:34,260 --> 00:08:35,540
and 25

105
00:08:37,960 --> 00:08:38,310
OK.

106
00:08:38,330 --> 00:08:43,230
Now we just need to adjust the top margins.

107
00:08:43,270 --> 00:08:47,960
So these are going to be the same for each one in each row at least.

108
00:08:48,440 --> 00:08:50,000
So let's try 20.

109
00:08:50,020 --> 00:08:51,730
See how that looks.

110
00:08:51,850 --> 00:08:53,860
Yeah I think maybe slightly more

111
00:08:59,620 --> 00:09:00,850
I think that looks pretty good.

112
00:09:01,030 --> 00:09:02,860
So you have 24

113
00:09:07,480 --> 00:09:18,650
and then 24 in this disarray to play and then it's probably going to be quite similar this time slightly

114
00:09:18,650 --> 00:09:18,920
more.

115
00:09:18,920 --> 00:09:19,360
I think

116
00:09:23,610 --> 00:09:27,420
maybe even that a great

117
00:09:36,910 --> 00:09:43,420
lovely OK you can obviously play around with those a little bit more if you like just to make them perfectly

118
00:09:43,420 --> 00:09:43,780
centered.

119
00:09:43,790 --> 00:09:45,480
But that will do for now.

120
00:09:45,520 --> 00:09:49,900
Now what we're dealing with the design I'm going to patients in place so what we want.

121
00:09:49,900 --> 00:09:55,330
Obviously we don't want these to actually appear at the beginning but when the use of taps on one of

122
00:09:55,330 --> 00:10:01,330
these we wanted to change the appropriate color and then drop in from the top.

123
00:10:01,330 --> 00:10:02,840
So how are we going to achieve that.

124
00:10:03,130 --> 00:10:07,050
Well let's write our code with this central one here in mind.

125
00:10:07,480 --> 00:10:11,840
So let's change the on click

126
00:10:16,560 --> 00:10:19,350
and or call the method drop in.

127
00:10:19,890 --> 00:10:22,020
So this is going to be our drop in method.

128
00:10:22,020 --> 00:10:28,580
And as I say we don't want this to have an image to start with so we'll just remove

129
00:10:31,200 --> 00:10:32,230
the source.

130
00:10:32,340 --> 00:10:37,550
So it's still there is still got the width and height but I can't see anything which is how we want

131
00:10:37,550 --> 00:10:38,140
it.

132
00:10:38,590 --> 00:10:47,130
So now if we jump over to our Java file and then we'll create our drop in method.

133
00:10:47,710 --> 00:10:54,490
So as usual public Foyt drop in it's going to be called by a view

134
00:10:57,290 --> 00:11:07,020
chicken or keyhole view and let's import Android.

135
00:11:07,070 --> 00:11:12,230
If you don't view that we get.

136
00:11:12,290 --> 00:11:17,870
Now this time we are actually interested in which one the user tapped on because that's the one that

137
00:11:17,870 --> 00:11:19,490
we want to bring in.

138
00:11:19,490 --> 00:11:23,840
So what I'm going to do is get my image view

139
00:11:26,960 --> 00:11:31,190
and I'm going to call it counter because that's what it is.

140
00:11:31,370 --> 00:11:37,300
And this time it's just going to be equal to view because view is the thing that was tapped on.

141
00:11:37,760 --> 00:11:41,100
But of course view is a view and we want an image view.

142
00:11:41,210 --> 00:11:45,760
So we need to convert that just in the same way.

143
00:11:45,760 --> 00:11:50,760
So this is exactly the same code that we used when we got an element by its ID.

144
00:11:51,200 --> 00:11:55,730
But this time we don't need to search for it because it's just the one that was tapped on which is the

145
00:11:55,730 --> 00:11:57,470
one that calls the drop in function.

146
00:11:57,480 --> 00:11:59,570
So we can just use fee.

147
00:12:00,590 --> 00:12:07,170
And then if I want to drop that in I need to do three things I need to move it off the screen so to

148
00:12:07,190 --> 00:12:13,900
the top of the screen then I need to apply either red or yellow to it as an image.

149
00:12:14,240 --> 00:12:16,790
And then I need to bring it back down again.

150
00:12:17,150 --> 00:12:26,660
So let's take it to the top of the screen first of all so counter and remember how to do this translates

151
00:12:29,900 --> 00:12:31,240
as it is set.

152
00:12:31,270 --> 00:12:33,350
Translation why.

153
00:12:33,580 --> 00:12:38,590
And when we get a thousand pixels off the top of the screen.

154
00:12:38,710 --> 00:12:44,500
So minus 1000 f then we set the image.

155
00:12:44,500 --> 00:12:46,070
Now I'm not certain we've done this before.

156
00:12:46,120 --> 00:12:52,490
So let's have a quick Google Android set image.

157
00:12:53,150 --> 00:12:53,740
There you go.

158
00:12:53,780 --> 00:12:55,980
How does that image in image view in Android.

159
00:12:55,980 --> 00:12:58,090
It sounds pretty perfect.

160
00:12:58,360 --> 00:12:59,530
That's what we want.

161
00:13:00,870 --> 00:13:01,570
There we go.

162
00:13:01,830 --> 00:13:05,680
So set image results perfect.

163
00:13:06,480 --> 00:13:20,560
So let's apply that counter set M.H. results and we want results is it was drawable.

164
00:13:20,910 --> 00:13:27,400
And then let's go for yellow just to keep it a little bit different.

165
00:13:27,600 --> 00:13:30,810
And then we want to animate it back in again.

166
00:13:31,350 --> 00:13:48,490
So I counter it animates and we want translation y by and then one thousand as a flight and then duration

167
00:13:50,270 --> 00:13:52,580
and let's keep it pretty pretty short.

168
00:13:52,580 --> 00:13:54,570
We want this to be a snappy app.

169
00:13:54,600 --> 00:13:55,990
It's about 300 milliseconds.

170
00:13:55,990 --> 00:13:59,620
We can always change that if it doesn't fit right.

171
00:13:59,690 --> 00:14:06,590
OK so when the use user taps on a space as far as they're concerned an empty image then this will get

172
00:14:06,590 --> 00:14:07,840
the image that they've tapped on.

173
00:14:08,040 --> 00:14:16,280
It will move it a thousand pixels up off the top of the screen then it will set the yellow top hangi

174
00:14:16,310 --> 00:14:19,750
image to the image view.

175
00:14:20,240 --> 00:14:28,340
And finally it will animate it back down so you should get this dropdown animation to it which is good.

176
00:14:28,350 --> 00:14:33,480
Gives it that different sort of flavor to noughts and crosses it feels more like where we're playing

177
00:14:33,480 --> 00:14:35,560
connect four or something like that.

178
00:14:35,700 --> 00:14:37,320
That's just a little bit.

179
00:14:37,580 --> 00:14:41,550
It'll be interesting and gives us a chance to use our animations as well.

180
00:14:43,220 --> 00:14:48,100
So let's take a look at the moment of course this is only going to work on the middle one.

181
00:14:48,260 --> 00:14:50,090
So we've got a gap in the middle.

182
00:14:50,130 --> 00:14:53,120
We tap on it and there it is wonderful.

183
00:14:53,120 --> 00:14:53,660
I like that.

184
00:14:53,730 --> 00:14:56,970
Feel free you could do some rotations.

185
00:14:57,030 --> 00:15:04,800
In fact a little bit of rotation sounds very easy to do and a little bit of fun as well.

186
00:15:04,830 --> 00:15:05,820
So let's go for

187
00:15:11,720 --> 00:15:13,090
10 spins.

188
00:15:13,420 --> 00:15:18,880
So then we'll get a nice kind of spin rotation animation as well which is always a bit of fun.

189
00:15:18,880 --> 00:15:25,960
The more sort of flashy You can make your apps probably the more fun they're going to be to play.

190
00:15:26,150 --> 00:15:27,260
It's just have a quick look about

191
00:15:31,560 --> 00:15:32,070
it.

192
00:15:33,550 --> 00:15:37,500
So let's just quickly reduce that to a single spin.

193
00:15:37,540 --> 00:15:45,940
I think it might just be that 10 spins and 300 milliseconds was just too fast.

194
00:15:45,970 --> 00:15:50,230
If this isn't noticeable we'll get rid of the rotation and not worry about it.

195
00:15:55,140 --> 00:15:58,080
I think that did a little bit to the to the whole thing.

196
00:15:58,420 --> 00:15:59,350
I'm going to leave it there.

197
00:15:59,350 --> 00:16:04,960
You of course can play with it you can change the size do whatever you like but we've got our basically

198
00:16:04,960 --> 00:16:07,870
functioning droppin method now.

199
00:16:08,390 --> 00:16:15,850
So unfortunately I'll have to manually apparat to each of these but it'll probably be a bit quicker

200
00:16:16,660 --> 00:16:21,580
and give us an opportunity to remind ourselves about the text view if we do it there.

201
00:16:21,940 --> 00:16:26,410
So if we look for the middle one

202
00:16:29,730 --> 00:16:34,450
will be the one with the drop in function to use Command F to find it.

203
00:16:34,590 --> 00:16:35,790
So drop in there we go.

204
00:16:35,790 --> 00:16:39,590
So that's the only code that we need.

205
00:16:39,590 --> 00:16:41,250
So if we just add that to the rest

206
00:16:44,910 --> 00:16:48,940
to all the image views within a grid layout

207
00:16:52,020 --> 00:16:55,480
while we're here we also want to remove this.

208
00:16:55,980 --> 00:16:58,270
So let's do that at the same time.

209
00:16:58,380 --> 00:16:59,340
So I'm removing

210
00:17:02,330 --> 00:17:11,790
a Sassy's are the source of the red image so they're all going to be empty initially and then I'm adding

211
00:17:11,790 --> 00:17:14,390
in the drop in method.

212
00:17:17,670 --> 00:17:22,800
So you could argue it would have been more efficient to do this at the beginning but development doesn't

213
00:17:22,800 --> 00:17:24,990
always work in the most efficient way.

214
00:17:26,980 --> 00:17:30,760
Sometimes you have to do a bit of manual work like this

215
00:17:37,310 --> 00:17:38,880
every day and be done

216
00:17:46,440 --> 00:17:47,240
correct.

217
00:17:47,730 --> 00:17:55,820
So now just check that we should find that initial board is blank and then we can tap on all nine of

218
00:17:55,820 --> 00:18:02,060
these different squares and we'll get a yellow counter every time which isn't perfect obviously but

219
00:18:03,200 --> 00:18:05,300
it's a step in the right direction.

220
00:18:05,300 --> 00:18:11,260
Notice we've got our three by three grid displaying there as well which is nice.

221
00:18:16,600 --> 00:18:19,960
So just to make sure that works fabulous

222
00:18:25,060 --> 00:18:25,830
correct.

223
00:18:25,900 --> 00:18:28,030
I'm really liking the animation effect.

224
00:18:28,060 --> 00:18:30,960
I think it does add a fair bit to the game.

225
00:18:31,210 --> 00:18:34,470
So now it's time to look at the logic of the game.

226
00:18:34,570 --> 00:18:41,740
So say we're going to allow yellow's to go first then we need to have some system to know whose go it

227
00:18:41,740 --> 00:18:46,040
is going to be yellow's first then reds and yellows and reds et cetera.

228
00:18:46,330 --> 00:18:51,910
So let's set up something that can store that.

229
00:18:51,910 --> 00:18:54,870
So I'm going to create a variable up here.

230
00:18:56,580 --> 00:19:05,920
Which will be a simple integer and I'm going to call it active player like that.

231
00:19:06,360 --> 00:19:12,750
And initially the active play is going to be 0 and I'm going to put a little note because it's not necessarily

232
00:19:12,750 --> 00:19:22,600
obvious that 0 or what's yellow and one is red OK.

233
00:19:22,600 --> 00:19:28,350
So now we can change our drop in method to see whose go it is.

234
00:19:28,350 --> 00:19:34,720
And if it's zero we'll change it to go number one and we'll have a yellow.

235
00:19:34,950 --> 00:19:42,320
And if it's a 1 we'll change it to 0 and we'll drop in a red.

236
00:19:42,340 --> 00:19:44,800
So let's do that here.

237
00:19:45,820 --> 00:19:49,720
So if active player Waziri

238
00:19:53,340 --> 00:19:53,700
then

239
00:19:56,910 --> 00:20:00,760
we want to drop in yellow.

240
00:20:01,410 --> 00:20:03,700
And don't forget parentheses

241
00:20:06,960 --> 00:20:11,050
and we want to set active player to 1.

242
00:20:11,400 --> 00:20:14,950
So that means you'll be ready to go next.

243
00:20:15,480 --> 00:20:21,650
If that's not the case we want to do the opposite.

244
00:20:21,650 --> 00:20:31,210
So we're going to drop in a red counter and we're going to set then the active player back to zero again.

245
00:20:31,270 --> 00:20:32,490
Right so that's simple.

246
00:20:33,900 --> 00:20:41,100
Bit of code should mean that we get a yellow player or yellow counter and then a red and then a yellow

247
00:20:41,130 --> 00:20:47,280
and then a red which will actually mean that the game will be broadly playable.

248
00:20:47,280 --> 00:20:50,220
Obviously we're missing some fairly fairly critical features and we've got some

249
00:20:53,150 --> 00:20:59,440
strange behavior if we tested the app of the moment but we can have a yellow and then red and then the

250
00:20:59,450 --> 00:21:02,380
yellow and red etc..

251
00:21:02,720 --> 00:21:09,200
So the app now does work as a connect three game.

252
00:21:09,290 --> 00:21:14,190
Our main issues are when we get three in a way that doesn't realize.

253
00:21:14,210 --> 00:21:19,610
So that's one major problem we need to allow the app to tell the user when they've won.

254
00:21:19,610 --> 00:21:21,690
Otherwise it's going to be a bit unsatisfying.

255
00:21:21,920 --> 00:21:28,400
And also if the user taps on a square which is already there they can replace it.

256
00:21:28,400 --> 00:21:32,080
So that actually isn't a crazy game dynamic.

257
00:21:34,550 --> 00:21:36,060
If you want to keep that there.

258
00:21:36,380 --> 00:21:42,260
And I think that could be quite an interesting way to play tic tac toe with replacements but we'll have

259
00:21:42,260 --> 00:21:45,240
a system for stopping the user for doing that.

260
00:21:46,100 --> 00:21:52,700
And that's going to involve having some kind of memory for managing the game state.

261
00:21:52,700 --> 00:21:57,880
So at the moment the phone has no idea which counters are where.

262
00:21:57,920 --> 00:22:05,710
So we need a way for storing that and I'm going to do that with a simple array of integers.

263
00:22:08,350 --> 00:22:09,310
And what I'm going to do.

264
00:22:09,310 --> 00:22:17,430
Because yellow is zero and bread is one I'm going to initially set this to one two three four five six

265
00:22:17,460 --> 00:22:30,250
seven eight nine to use like that should be curly brackets sorry.

266
00:22:30,410 --> 00:22:33,700
And we could do with a name there as well.

267
00:22:33,860 --> 00:22:35,480
So I call it game state.

268
00:22:37,290 --> 00:22:44,820
And then we'll have another note because it's definitely not obvious to means unplaced.

269
00:22:45,690 --> 00:22:51,070
So to means there's nothing in that slot.

270
00:22:51,240 --> 00:22:53,360
And then we've got zero to nine.

271
00:22:53,640 --> 00:22:55,110
So that's item 0.

272
00:22:55,110 --> 00:22:56,910
Item one item 2 etc..

273
00:22:57,400 --> 00:23:08,200
And that's going to represent all of these squares starting at 0 0 1 2 3 4 5 6 7 8 cetra.

274
00:23:08,210 --> 00:23:17,790
OK so now we're going to need a way of knowing which counter has been tapped and then we can update

275
00:23:17,790 --> 00:23:20,720
the game state to represent that.

276
00:23:20,730 --> 00:23:26,400
So let's go back over to our main activity SML file.

277
00:23:26,400 --> 00:23:33,090
What are we going to use to tell which one has been tapped is what's known as a tag.

278
00:23:33,090 --> 00:23:46,200
So if we go back to our first image in the grid layout we can add on the SML Android tag.

279
00:23:46,530 --> 00:23:52,560
And I'm going to give each of these a tag and that will represent that position.

280
00:23:52,560 --> 00:24:03,040
And then I can get the tag in the code and that will tell me what the position of the user counter that's

281
00:24:03,070 --> 00:24:04,640
just been tapped is.

282
00:24:04,920 --> 00:24:06,340
So that's going to be one

283
00:24:09,580 --> 00:24:10,050
to

284
00:24:13,710 --> 00:24:25,700
three.

285
00:24:30,730 --> 00:24:38,460
Six and seven interesting.

286
00:24:38,940 --> 00:24:40,400
The last one must be 8.

287
00:24:40,430 --> 00:24:47,880
I must have missed one out at 0 1 2 3 for every game.

288
00:24:50,650 --> 00:24:57,020
I have six seven and eight.

289
00:24:57,040 --> 00:24:59,750
So there's all nine with that tags.

290
00:25:00,640 --> 00:25:03,370
And then we can get the tag quite easily.

291
00:25:04,920 --> 00:25:11,490
Using counter don't get tagged.

292
00:25:12,030 --> 00:25:12,590
Simple as that.

293
00:25:12,590 --> 00:25:21,310
So for now just to show you how it works I'm going to convert it to a string and pop it in the console.

294
00:25:30,240 --> 00:25:31,290
So let's run that.

295
00:25:31,470 --> 00:25:39,240
And we should find then that the tag will display in the console so it will get 0 1 2 3 4 5 6 7 or 8

296
00:25:39,300 --> 00:25:41,670
depending on which has been tapped.

297
00:25:41,850 --> 00:25:46,830
And then we can use this to update our game state

298
00:25:50,720 --> 00:25:56,130
and indeed to check whether that one has been tapped already and if so not allow any further tapping

299
00:25:57,770 --> 00:25:58,150
every.

300
00:25:58,220 --> 00:26:00,050
So that was number three which is correct.

301
00:26:00,050 --> 00:26:04,320
0 1 2 3 and then 5 et cetera.

302
00:26:06,830 --> 00:26:08,340
Fantastic.

303
00:26:09,320 --> 00:26:09,950
So let's

304
00:26:13,800 --> 00:26:21,430
get our tag and convert it to an integer which we're going to need to use it within our game state.

305
00:26:21,690 --> 00:26:22,460
All right.

306
00:26:23,500 --> 00:26:34,650
So let's create an integer I'll call it tapped counter and that's going to be counter dog get tag

307
00:26:37,960 --> 00:26:40,680
and then convert it to a string.

308
00:26:40,880 --> 00:26:44,410
Are we all going to want to get that to an integer.

309
00:26:44,410 --> 00:26:49,480
So we use integer to pass.

310
00:26:49,520 --> 00:26:52,360
And as we've seen before

311
00:26:55,570 --> 00:26:56,120
there we go.

312
00:26:56,130 --> 00:27:02,430
So now we've got a tapped count a variable which is 0 to 8 depending on which one has been tapped and

313
00:27:02,430 --> 00:27:02,760
then

314
00:27:06,230 --> 00:27:11,840
the first thing that we want to do with that is check to see whether that one has been already tapped

315
00:27:11,840 --> 00:27:18,040
on and we can check that by checking for the game state and whether or not it's equal to 2.

316
00:27:18,770 --> 00:27:28,370
So if game state tapped counter so if that is equal to 2

317
00:27:32,780 --> 00:27:33,690
parentheses we're up

318
00:27:36,740 --> 00:27:42,860
then we want to do all of that stuff plus something else.

319
00:27:42,860 --> 00:27:50,720
We also want to set the game state of that number to either 0 or 1 depending on who's playing.

320
00:27:52,070 --> 00:27:58,890
So again we get game state tapped counter and we're going to set that equal to what is it.

321
00:27:59,150 --> 00:28:07,920
It's active player because active player does tell us who is currently playing.

322
00:28:07,970 --> 00:28:09,530
So that's it.

323
00:28:09,530 --> 00:28:15,700
We don't need an elf statement there because we only want to do this if a game state is too.

324
00:28:15,740 --> 00:28:21,410
If the game is there is zero or one that means the point on the board has already been tapped.

325
00:28:21,410 --> 00:28:23,560
So we don't want to do anything at all.

326
00:28:25,260 --> 00:28:27,010
So no need for an hour statement.

327
00:28:28,130 --> 00:28:29,310
That time round.

328
00:28:29,430 --> 00:28:30,380
So here we go.

329
00:28:30,580 --> 00:28:39,150
There's our yellow red yellow and if we tap on an existing one then nothing happens other than printing

330
00:28:39,510 --> 00:28:42,110
to the console.

331
00:28:42,270 --> 00:28:43,290
Wonderful.

332
00:28:43,810 --> 00:28:45,340
OK so we're almost there.

333
00:28:45,660 --> 00:28:52,710
We've just got to add this last bit of game logic which is working out whether or not the game has finished.

334
00:28:52,910 --> 00:28:57,180
As with a lot of programming problems there's many different ways you could do that.

335
00:28:57,180 --> 00:29:03,740
I'm going to use the fact that a very finite number of winning positions in tic tac toe.

336
00:29:04,050 --> 00:29:12,350
So we've got three horizontal lines that could be one three vertical lines and then two diagonals.

337
00:29:12,630 --> 00:29:17,700
So that's only eight different combinations so that's quite a manageable number to keep in the user's

338
00:29:17,910 --> 00:29:18,680
memory.

339
00:29:19,750 --> 00:29:21,160
So I'm going to create

340
00:29:24,660 --> 00:29:30,070
a variable and it's going to be an array of arrays.

341
00:29:30,510 --> 00:29:38,210
So we haven't seen this before but think of it as really a set of arrays inside an array.

342
00:29:38,520 --> 00:29:40,890
That's become clear as we go on.

343
00:29:41,160 --> 00:29:47,540
So I call it winning positions.

344
00:29:48,180 --> 00:29:55,040
And then this is going to be just a way of storing all the winning positions.

345
00:29:55,080 --> 00:30:01,200
So the first winning position I'll consider the horizontal ones versus the first winning position is

346
00:30:01,200 --> 00:30:17,140
going to be 0 1 and 2 so 0 1 2 like that I'm in the second set of winning positions is going to be three

347
00:30:17,440 --> 00:30:18,790
four and 5

348
00:30:23,450 --> 00:30:24,290
like that.

349
00:30:24,980 --> 00:30:27,660
And I do apologize.

350
00:30:28,060 --> 00:30:29,240
Any brackets all the way

351
00:30:33,840 --> 00:30:44,960
and the third winning position is three four five six seven eight.

352
00:30:45,000 --> 00:30:46,510
Now let's see the verticals.

353
00:30:46,510 --> 00:30:56,710
So this is 0 1 2 3 4 5 6 0 3 6 is the first vertical winning position

354
00:31:02,620 --> 00:31:12,060
and then if we add one to each of those we'll get the next vertical winning position so 1 4 7 and then

355
00:31:12,510 --> 00:31:20,990
one to each of those will give us 2 5 8.

356
00:31:21,130 --> 00:31:24,300
So that's all they give us.

357
00:31:24,580 --> 00:31:26,400
So let's do this diagonal.

358
00:31:26,490 --> 00:31:33,830
So 0 1 2 3 4 5 6 7 8 0 4 8 is a winning position.

359
00:31:38,920 --> 00:31:48,980
And finally it's 1 2 3 4 5 6 2 4 6 is our last winning position.

360
00:31:55,420 --> 00:31:56,550
There we go.

361
00:31:56,560 --> 00:32:04,580
So each time someone goes with them want to do a check to see if they've won.

362
00:32:04,590 --> 00:32:08,540
So let's do that at the end of our code.

363
00:32:08,990 --> 00:32:15,390
Not that it really matters but logically I'd like to get the counter in first and then do a check to

364
00:32:15,390 --> 00:32:16,890
see if anyone's won.

365
00:32:16,980 --> 00:32:24,060
And what I'm going to do is loop through the winning positions and just check to see if any of them

366
00:32:24,360 --> 00:32:26,310
in the game state have the same value.

367
00:32:26,310 --> 00:32:34,690
So if 0 1 and see if they are all ones for example that tells us that reds have one if they're all zeros.

368
00:32:34,770 --> 00:32:38,170
That tells us that yellow has one.

369
00:32:38,910 --> 00:32:46,240
So as you may remember we can use the for command to loop through an array and the array that we're

370
00:32:46,260 --> 00:32:49,170
looping through is winning positions.

371
00:32:50,600 --> 00:32:58,280
Each one of those I'm going to call winning position and then we use a colon to separate those two.

372
00:32:58,370 --> 00:33:07,670
And then we want to clarify the winning position itself is going to be an array of integers.

373
00:33:07,680 --> 00:33:08,300
There we go.

374
00:33:08,530 --> 00:33:16,090
So we're using the full command to loop three winning positions and each array within winning position

375
00:33:16,690 --> 00:33:22,270
within winning positions is going to be called winning position and then that's going to be an integer

376
00:33:22,900 --> 00:33:23,630
array.

377
00:33:24,900 --> 00:33:25,370
OK.

378
00:33:25,640 --> 00:33:26,940
Have you with me so far.

379
00:33:27,360 --> 00:33:30,620
Now we want to check whether that all the same.

380
00:33:30,660 --> 00:33:34,720
That is each of the winning position values in game state.

381
00:33:35,820 --> 00:33:42,410
So we want to check for game state

382
00:33:45,120 --> 00:33:47,740
winning position 0.

383
00:33:49,720 --> 00:33:54,320
And we want to see if that's going to be the same as game state.

384
00:33:56,790 --> 00:33:59,040
Winning position 1.

385
00:33:59,130 --> 00:34:03,610
So that's the second item in the winning position.

386
00:34:03,660 --> 00:34:05,940
Many aere And

387
00:34:08,990 --> 00:34:13,570
as I think we've seen before we use the double ampersand to represent n.

388
00:34:13,610 --> 00:34:25,110
And so we want to also check that game state winning position one is equal to a game state.

389
00:34:30,980 --> 00:34:33,810
Winning position too.

390
00:34:34,400 --> 00:34:40,640
So that basically means that all three are the same and I'm going to put those on different lines so

391
00:34:40,640 --> 00:34:44,630
we can see them more easily.

392
00:34:44,630 --> 00:34:52,130
We need to do a final check as well to make sure that what is the final check and a check for.

393
00:34:52,670 --> 00:34:57,950
We're going to check that game state could be any of them this time.

394
00:34:57,950 --> 00:35:07,930
So let's just pick zero is not too because if it's two then that means no one's going there.

395
00:35:07,930 --> 00:35:10,480
So that doesn't count as a win.

396
00:35:10,840 --> 00:35:20,540
And I think I've missed out a square bracket there and possibly that the I don't need one that would

397
00:35:20,570 --> 00:35:28,330
get easy to mix these things up and I've even got too many of them.

398
00:35:29,500 --> 00:35:32,860
So if that's the case then someone has won.

399
00:35:33,460 --> 00:35:42,620
So let's just for the moment print out the locks to the card so you can copy that down because we don't

400
00:35:42,620 --> 00:35:44,300
want that one anymore anyway.

401
00:35:48,510 --> 00:35:56,290
So let's have a states winning position zero.

402
00:35:58,340 --> 00:36:05,610
Say that should print out either a 0 or 1 depending on who has one.

403
00:36:05,920 --> 00:36:11,750
So this is just a check our logic and make sure that everything's working as we hope it would.

404
00:36:12,280 --> 00:36:14,850
And then we can display something for the user.

405
00:36:20,370 --> 00:36:24,960
To let them know who has won.

406
00:36:25,220 --> 00:36:28,310
So let's take a look see if our logic holds true.

407
00:36:30,080 --> 00:36:34,870
So let's go yellow and yellow and yellow.

408
00:36:34,980 --> 00:36:35,790
Fantastic.

409
00:36:35,790 --> 00:36:37,640
Every guy has one.

410
00:36:38,760 --> 00:36:43,560
So we could just have a little toast popping up here showing something to the user saying that someone

411
00:36:43,560 --> 00:36:44,270
has one.

412
00:36:44,370 --> 00:36:47,450
But I think we could have something a little bit more grand.

413
00:36:47,610 --> 00:36:53,700
And we're also going to want a button to allow the user to play again because our game is going to be

414
00:36:53,700 --> 00:36:57,950
so massively addictive that we want to play again immediately after.

415
00:36:58,500 --> 00:37:09,750
So what we'll do is we'll bring in a vertical linear layout and we want it centered but not actually

416
00:37:10,530 --> 00:37:13,140
in the grid layout we wanted in the relative lay out

417
00:37:16,720 --> 00:37:24,040
and we want to have two things in that I want to have just a plain text field which is going to be centered

418
00:37:24,730 --> 00:37:32,560
at the top which is going to be the message saying someone has one say I'm just going to make that a

419
00:37:32,560 --> 00:37:33,980
little bit bigger.

420
00:37:39,860 --> 00:37:46,090
Even bigger than that I think greats.

421
00:37:46,300 --> 00:37:52,330
And then we want to button to allow them to say play again.

422
00:37:52,440 --> 00:37:57,050
And because this is a vertical linear layout that's going to be vertically below the other button.

423
00:38:01,040 --> 00:38:02,750
Great.

424
00:38:02,960 --> 00:38:04,090
There's not going to be any other option.

425
00:38:04,090 --> 00:38:06,230
The only thing they can do in this app is play again.

426
00:38:06,230 --> 00:38:09,320
So I think we need a question mark or anything like that.

427
00:38:12,970 --> 00:38:16,130
And I'll give it an ID of play again button.

428
00:38:16,660 --> 00:38:29,570
But really the main thing that's going to make the app work is adding the on click to play again.

429
00:38:30,000 --> 00:38:35,570
So I actually want this to appear in the middle of the screen not at the top.

430
00:38:36,150 --> 00:38:44,830
So I'm going to give it a fixed than height depending on the content.

431
00:38:47,950 --> 00:38:48,420
There we go.

432
00:38:48,460 --> 00:38:53,380
And I'm also going to give it a background color so it stands out from the rest

433
00:38:57,810 --> 00:38:59,770
of the app.

434
00:39:06,140 --> 00:39:09,920
Every day so just go for a nice yellow.

435
00:39:09,970 --> 00:39:13,660
So it looks slightly horrendous but it'll will get the job done.

436
00:39:15,460 --> 00:39:22,140
And then I'm going to add a bit of padding all the way around.

437
00:39:23,190 --> 00:39:23,750
Yeah.

438
00:39:24,020 --> 00:39:25,000
Lovely.

439
00:39:25,740 --> 00:39:28,020
So it doesn't look beautiful but it's fine.

440
00:39:28,410 --> 00:39:35,770
And then if we want to align that centrally we could have a look at the linear layout.

441
00:39:35,770 --> 00:39:40,580
So this is what we've got for the layout so far.

442
00:39:40,870 --> 00:39:47,140
If you remember the grid layout was centered horizontally and vertically so we can just take the SML

443
00:39:47,770 --> 00:39:50,090
for that and copy it down.

444
00:39:52,710 --> 00:39:57,830
So I'm just going to pop it in there and then have a look at that.

445
00:39:57,870 --> 00:40:01,240
It's now centered horizontally and vertically in the screen.

446
00:40:01,650 --> 00:40:07,590
So I'd like you to start getting into the habit of using both allow you when it's easier but also the

447
00:40:07,590 --> 00:40:11,170
text view when that's easier as well.

448
00:40:11,190 --> 00:40:13,020
Now of course we don't want this to appear

449
00:40:16,490 --> 00:40:17,870
until we're ready for it.

450
00:40:18,020 --> 00:40:23,950
So I'm going to initially set the Alpha to zero like that.

451
00:40:24,530 --> 00:40:32,630
And then we're going to need to be able to make it appear so we're going to need an ID for it.

452
00:40:32,830 --> 00:40:35,950
So I will call this play again lay out

453
00:40:38,540 --> 00:40:48,970
and we need an ID for the text as well because we're going to want to update that so I'll call it when

454
00:40:48,970 --> 00:40:52,520
a message OK.

455
00:40:52,960 --> 00:40:58,640
So the main thing we need to do is make play again lay out display when someone has one.

456
00:40:58,730 --> 00:41:01,490
So we're going to do that down here because this is where

457
00:41:04,600 --> 00:41:08,410
someone has one.

458
00:41:08,650 --> 00:41:12,200
So making a lay out a is not something that we've ever done before.

459
00:41:12,490 --> 00:41:18,680
So let's have a quick google to see if we can find out how to do it.

460
00:41:18,730 --> 00:41:23,490
So something like Android make lay out of here.

461
00:41:24,010 --> 00:41:25,760
I should do the trick.

462
00:41:26,050 --> 00:41:32,640
So I got a few general bits of code that make a layout appear with animation of the button click.

463
00:41:32,650 --> 00:41:33,400
Sounds perfect

464
00:41:38,180 --> 00:41:39,100
OK.

465
00:41:39,590 --> 00:41:40,820
So this looks very promising.

466
00:41:40,820 --> 00:41:46,080
So we've got some code here so we use fine view by ID.

467
00:41:46,160 --> 00:41:46,920
Wonderful.

468
00:41:47,360 --> 00:41:50,360
And then we're going to change the visibility.

469
00:41:51,200 --> 00:41:51,800
OK.

470
00:41:52,050 --> 00:41:52,950
Perfect.

471
00:41:53,400 --> 00:41:55,570
So that's exactly what we want.

472
00:41:56,580 --> 00:41:59,790
Let's jump back over and put that in.

473
00:41:59,790 --> 00:42:08,540
I think that means that instead of using an Alpha will use visibility.

474
00:42:08,540 --> 00:42:14,370
If we're using that code so it will initially set it to invisible which is pretty much the same as an

475
00:42:14,370 --> 00:42:15,500
alpha of 0.

476
00:42:15,680 --> 00:42:20,850
But it will allow us to use the code that we've just found.

477
00:42:20,880 --> 00:42:23,960
So again don't be afraid to change your program slightly.

478
00:42:24,060 --> 00:42:31,380
If you've found some code that allows to do it allows you to do it in a certain way so we could create

479
00:42:31,380 --> 00:42:34,200
creating a lay out them we need

480
00:42:38,260 --> 00:42:40,250
Android widgets linear layouts.

481
00:42:40,290 --> 00:42:41,310
Let's put that in

482
00:42:49,600 --> 00:42:50,810
every guy.

483
00:42:52,940 --> 00:42:53,450
And

484
00:42:59,580 --> 00:43:09,120
I lay out ID was play again lay out and let's put that in there it is.

485
00:43:09,130 --> 00:43:10,740
So now we've got a lay out.

486
00:43:10,780 --> 00:43:14,580
So let's jump back over to our code to make it a feat appear.

487
00:43:16,030 --> 00:43:19,870
Say we're not going to bother with any animation here if you want to of course you are very welcome

488
00:43:19,870 --> 00:43:20,440
to me.

489
00:43:20,620 --> 00:43:24,460
But I think this is the code that we want.

490
00:43:27,030 --> 00:43:34,140
So lay out set visibility and then view visible sir as we've just got back home from the internet.

491
00:43:34,140 --> 00:43:37,920
I think we were just checking making sure it all works.

492
00:43:38,400 --> 00:43:48,750
And then all that remains is to update the label to show who has one and to make the play again button

493
00:43:49,130 --> 00:43:49,690
work.

494
00:44:02,280 --> 00:44:03,220
Let's take a look.

495
00:44:04,500 --> 00:44:06,430
So will the Reds win this time.

496
00:44:13,180 --> 00:44:13,890
Fantastic.

497
00:44:13,930 --> 00:44:19,540
So a new leader has indeed appeared to be quite nice if Wisden from the left or rotated or something

498
00:44:19,540 --> 00:44:20,110
like that.

499
00:44:20,170 --> 00:44:21,290
I'll leave that up to you.

500
00:44:21,520 --> 00:44:23,570
But of course I'll play again button.

501
00:44:23,770 --> 00:44:27,380
In fact crash is the app which is a bit worse than doing nothing.

502
00:44:27,610 --> 00:44:28,720
But that's fine.

503
00:44:28,720 --> 00:44:31,300
We haven't written the code for that yet.

504
00:44:31,480 --> 00:44:40,670
So Thursley let's just update the Win a message so that it shows the correct winner.

505
00:44:40,680 --> 00:44:48,250
So it's called Win a message we want to do that before the layout appears really.

506
00:44:48,290 --> 00:44:48,950
So this is

507
00:44:52,590 --> 00:44:56,210
a text if you

508
00:44:59,740 --> 00:45:02,070
call it with a message.

509
00:45:02,320 --> 00:45:05,550
And we're going to want to turn it into a text field.

510
00:45:06,830 --> 00:45:14,700
But we'll get it from fine by id and then resources to ID when a message

511
00:45:17,750 --> 00:45:20,120
that we get and then we just want to set the text of that

512
00:45:24,820 --> 00:45:25,160
to

513
00:45:32,100 --> 00:45:41,580
and keep that nice and simple.

514
00:45:41,750 --> 00:45:43,210
But we need to know who's won.

515
00:45:45,440 --> 00:45:47,870
So let's put a gap in here.

516
00:45:51,800 --> 00:45:59,280
And then we're going to need to do a check down here to see whether this is a zero or one so let's get

517
00:45:59,280 --> 00:46:04,470
rid of Lokes that we don't need any more.

518
00:46:04,510 --> 00:46:18,810
So if game state winning position 0 is equal to zero that means yellow has 1.

519
00:46:18,880 --> 00:46:33,130
So let's create a string called winner which is let's say by default is equal to red and then if game

520
00:46:33,130 --> 00:46:36,740
state when you position 0 is equal to zero or all.

521
00:46:36,770 --> 00:46:38,340
Winner to

522
00:46:42,690 --> 00:46:47,930
and that's just a way of avoiding having the else code in there which is a bit unnecessary here.

523
00:46:48,790 --> 00:46:58,350
And then we can use it that so that will display the correct way not with any luck.

524
00:46:58,410 --> 00:47:00,160
Definitely worth checking that.

525
00:47:00,810 --> 00:47:06,990
And then all that we have to do is to write out our reset the board code

526
00:47:10,470 --> 00:47:15,030
makes sense to put our comment a little bit higher up there.

527
00:47:19,730 --> 00:47:21,440
OK let's take a look.

528
00:47:21,490 --> 00:47:23,820
Say hello.

529
00:47:24,210 --> 00:47:24,680
Hello.

530
00:47:24,880 --> 00:47:25,490
Hello.

531
00:47:25,630 --> 00:47:26,860
Hello has one.

532
00:47:26,860 --> 00:47:28,150
Fantastic.

533
00:47:28,660 --> 00:47:31,550
I don't want to make the app crash so I'm not going to click the play again button.

534
00:47:31,690 --> 00:47:34,770
But now is the time to make that work.

535
00:47:35,560 --> 00:47:38,220
So if we just remind ourselves the play again button

536
00:47:42,410 --> 00:47:46,630
is they play again method.

537
00:47:46,870 --> 00:47:50,740
So let's write that down here.

538
00:47:51,290 --> 00:47:59,620
Public first and all of it and then play again.

539
00:48:00,220 --> 00:48:02,300
So there's a few things we need to do here.

540
00:48:02,650 --> 00:48:09,780
We need to make the message that we've just made appear disappear so we can do that.

541
00:48:10,690 --> 00:48:14,440
Using this code I'm just going to copy that down.

542
00:48:14,620 --> 00:48:23,120
And of course instead of visible we want invisible so that will make that disappear.

543
00:48:23,870 --> 00:48:29,410
We want to set the game state and player back to the defaults.

544
00:48:29,510 --> 00:48:31,840
So let's grab

545
00:48:34,450 --> 00:48:37,230
these and copy them down.

546
00:48:38,110 --> 00:48:42,720
Obviously we don't want to create the variable we just want to update it.

547
00:48:44,770 --> 00:48:49,870
Now unfortunately as much as this may seem an obvious thing to do it's not possible because we're essentially

548
00:48:49,870 --> 00:48:54,370
setting the game state array to another array which we can't do.

549
00:48:54,550 --> 00:49:01,360
So we have to update each item within the array separately so we can do that with a flip which is good

550
00:49:01,360 --> 00:49:02,400
practice.

551
00:49:03,880 --> 00:49:05,460
So let's create a for loop.

552
00:49:05,500 --> 00:49:10,270
So we'll set count a variable I initially equal to zero.

553
00:49:10,270 --> 00:49:22,030
We want to keep going as long as it is less than nine or we could put state DOT length which might be

554
00:49:22,030 --> 00:49:23,250
nice.

555
00:49:23,280 --> 00:49:27,850
I really like Hardik hard coding that 9 in there just in case the game's date length changes at some

556
00:49:27,850 --> 00:49:28,950
point.

557
00:49:29,440 --> 00:49:30,400
And we want to

558
00:49:33,220 --> 00:49:43,530
add one to each time and then all we want to say is that game state I equal to 2 and that will then

559
00:49:44,100 --> 00:49:45,290
reset game state.

560
00:49:45,330 --> 00:49:48,010
So the initial state.

561
00:49:48,120 --> 00:49:55,390
So the last thing we need to do is to loop through all of the images and reset them to have no source.

562
00:49:55,560 --> 00:49:58,040
So they're essentially invisible.

563
00:49:58,120 --> 00:50:00,610
I'm going to show you quite a fancy way of doing that.

564
00:50:00,810 --> 00:50:07,250
We want essentially all of the images inside this grid lock out.

565
00:50:07,250 --> 00:50:09,240
So if I give the grid layout and ID

566
00:50:12,070 --> 00:50:16,770
I'll just call it create lay out and then

567
00:50:20,110 --> 00:50:24,610
if we create a variable to match that layout out.

568
00:50:24,680 --> 00:50:26,240
So I would just like this line above.

569
00:50:26,250 --> 00:50:37,180
We're going to use grid layout and then I'll call it great layout and that's going to be a great layout.

570
00:50:37,250 --> 00:50:48,270
And we're going to get it by finding it by its ID so our ID to create lay out and then we can loop through

571
00:50:48,360 --> 00:50:55,480
all of the items in there which I know are images so that all image views anything inside that.

572
00:50:55,960 --> 00:51:06,020
So again we can use for and we're going to start again with an high counter variable which is initially

573
00:51:06,030 --> 00:51:06,770
zero.

574
00:51:07,160 --> 00:51:12,290
And then we want to keep going as long as I is less than the number of items.

575
00:51:12,290 --> 00:51:14,950
Now we know that that's 8.

576
00:51:15,110 --> 00:51:25,960
But if it changes at some point we can get that from grid layout don't get child count.

577
00:51:26,040 --> 00:51:26,840
So that's quite handy.

578
00:51:26,840 --> 00:51:34,050
That tells us how many views there are inside grid layout and we know that that's nine.

579
00:51:34,130 --> 00:51:39,750
But if it changes then we won't have to update our code.

580
00:51:39,960 --> 00:51:47,030
And then I plus plus and then we want to get each of those image views.

581
00:51:47,370 --> 00:52:00,710
So we're going to cast them as views and to get them we use grid layout don't get child at.

582
00:52:01,730 --> 00:52:03,660
And then the index is just high

583
00:52:06,520 --> 00:52:17,570
so that just gets the youth child which is the imagery in this case and I want to take the whole thing

584
00:52:18,140 --> 00:52:20,440
up a practice round it to bring it together.

585
00:52:21,170 --> 00:52:26,950
And we want to set the image resource I guess it's as if it knew.

586
00:52:27,470 --> 00:52:35,360
And interestingly here we can actually put in a zero set that to an empty image.

587
00:52:35,570 --> 00:52:36,840
So that's exactly what we want.

588
00:52:36,880 --> 00:52:40,620
I will reset it back to nothing.

589
00:52:41,780 --> 00:52:45,110
And just before we run that I noticed that I've forgotten the

590
00:52:48,960 --> 00:52:56,200
put the view in there that will give us a crash if we try and run that because it will be sending the

591
00:52:56,260 --> 00:52:58,720
button to the play again method.

592
00:52:59,110 --> 00:53:04,780
And if the plug and method isn't ready to accept it even if it doesn't use it it will still crash.

593
00:53:05,930 --> 00:53:08,060
So they should now do everything we want.

594
00:53:08,060 --> 00:53:13,820
It will get rid of the message saying that yellow or whoever has one set the active player back to yellow

595
00:53:14,240 --> 00:53:23,420
reset game state and then set all of the images within the grid layout back to 0 or back to empty essentially

596
00:53:24,840 --> 00:53:27,610
let's have a look.

597
00:53:27,720 --> 00:53:32,200
So there's out yellow play again and testicular can get

598
00:53:36,850 --> 00:53:38,230
beryllium.

599
00:53:38,330 --> 00:53:40,670
Everything seems to be working fabulously.

600
00:53:40,790 --> 00:53:48,020
There's one issue remaining I don't know if you've noticed it but once this has happened we can still

601
00:53:48,350 --> 00:53:52,130
carry on playing which isn't great.

602
00:53:52,190 --> 00:53:57,590
So we really want the action to stop until they start playing again.

603
00:53:57,860 --> 00:54:02,330
So I think as always there's many of ways that we could do that.

604
00:54:02,330 --> 00:54:10,920
The way I'm going to do it is have a variable that keeps track of whether the game is active or not.

605
00:54:14,180 --> 00:54:17,540
So we could have a Boullion this time for a bit of a variety

606
00:54:21,560 --> 00:54:30,220
game is active and generally that will be equal to a tree but we'll set it equal to folks when somebody

607
00:54:30,220 --> 00:54:33,030
wins.

608
00:54:33,030 --> 00:54:35,490
So the game is active.

609
00:54:36,140 --> 00:54:47,060
Well then set to false and we'll set it to true again when they use a taps to play again.

610
00:54:47,900 --> 00:54:55,900
And then we just need to check so we can do it at the same place that we check for the games state being

611
00:54:55,900 --> 00:54:59,530
to we can check that

612
00:55:03,070 --> 00:55:05,700
game is active is true as well.

613
00:55:05,700 --> 00:55:10,730
Remember we don't need is equal to true we can just put and the game is active.

614
00:55:11,310 --> 00:55:11,610
Right.

615
00:55:11,610 --> 00:55:17,490
So hopefully for the final time let's run this and check and make sure that it all behaves as we would

616
00:55:17,490 --> 00:55:19,840
want a.

617
00:55:19,970 --> 00:55:23,690
So the only thing we really need to check is that you can't carry on playing the game.

618
00:55:23,690 --> 00:55:24,750
Once somebody has one

619
00:55:30,900 --> 00:55:35,020
every guys say well let Reds win for a change

620
00:55:37,900 --> 00:55:38,690
that it one.

621
00:55:38,700 --> 00:55:39,360
Fantastic.

622
00:55:39,360 --> 00:55:42,710
And if I try and carry on it doesn't work.

623
00:55:43,100 --> 00:55:51,150
But if I kick again and everything resets and I can start my great fun game again.

624
00:55:51,780 --> 00:55:56,130
Now there is one more thing I really would like to change just before I let you go.

625
00:55:56,370 --> 00:56:03,790
And that is that at the moment if we have a rule the game just stops

626
00:56:06,850 --> 00:56:08,340
to make sure I can get a job.

627
00:56:13,860 --> 00:56:16,320
Go and you can't do anything.

628
00:56:16,500 --> 00:56:18,180
So I think we need one more check

629
00:56:21,750 --> 00:56:30,080
to check to see if it's a journal and if so display the message and invite them to play again.

630
00:56:30,330 --> 00:56:35,010
So we'll put this Kate down here

631
00:56:37,660 --> 00:56:39,660
because we don't want it to run.

632
00:56:40,300 --> 00:56:43,910
If someone wins on their final go here.

633
00:56:43,920 --> 00:56:49,060
So if no one has won we want to check to see if we've had nine goals.

634
00:56:49,060 --> 00:56:53,410
Now we don't have a go counter and I don't think we need to go counter because all we need to do is

635
00:56:53,410 --> 00:57:03,190
loop through the game state array and check to see if everything is not true and if that's the case

636
00:57:03,520 --> 00:57:05,410
then we finished the game.

637
00:57:05,980 --> 00:57:13,710
So let's do that again to loop through an array we use for and this is an array of integers.

638
00:57:13,850 --> 00:57:16,750
Say it and then

639
00:57:20,530 --> 00:57:22,750
I'll call it counter state

640
00:57:25,780 --> 00:57:28,970
and that's each position within game States.

641
00:57:33,780 --> 00:57:44,310
And we want to check to see if counter state is equal to two because if one of them is equal to two

642
00:57:44,370 --> 00:57:47,900
then the game is not over yet.

643
00:57:47,970 --> 00:57:57,960
So the way I think I'm going to keep track of that is to have a temporary Boullion which is game is

644
00:57:58,200 --> 00:58:08,340
over and we will initially set it to tree and then we'll just run through all of the items in game state

645
00:58:08,400 --> 00:58:14,470
and if any of them ought to and we'll set game is either to be false

646
00:58:17,370 --> 00:58:20,360
and then we want to check to see if game is over.

647
00:58:23,160 --> 00:58:24,390
So if

648
00:58:27,950 --> 00:58:33,560
game is over then we want to do many of the things that we did before here.

649
00:58:34,540 --> 00:58:42,420
Say that should suffice with that line.

650
00:58:42,540 --> 00:58:49,350
I don't really like repeating this code but we're almost at the end I don't think we need to worry about

651
00:58:49,350 --> 00:58:51,260
making another method for it et cetera.

652
00:58:51,480 --> 00:58:52,200
At this point

653
00:58:56,900 --> 00:59:03,320
and we'll just change the message to it's a troll.

654
00:59:03,340 --> 00:59:03,990
All right.

655
00:59:04,120 --> 00:59:08,650
So now absolutely for the final time I'm not going to decide that I want to inflict anything else on

656
00:59:08,650 --> 00:59:16,080
you but hopefully if you have followed through most of this video then you've hopefully learned a lot

657
00:59:16,090 --> 00:59:21,130
quite a few new things that we've seen or at least new ways of using things that we've already become

658
00:59:21,130 --> 00:59:21,970
familiar with.

659
00:59:24,740 --> 00:59:30,770
And hopefully you've seen what level of complexity you can get with the relatively little Android knowledge

660
00:59:30,770 --> 00:59:35,010
we have at the moment we can still do quite advanced things and quite big projects.

661
00:59:35,340 --> 00:59:37,010
So let's have a look.

662
00:59:37,230 --> 00:59:38,510
Hello.

663
00:59:39,240 --> 00:59:47,730
I read you and I read you I read it.

664
00:59:47,850 --> 00:59:49,810
It's fantastic.

665
00:59:49,840 --> 00:59:52,070
And then play again and we can play again.

666
00:59:52,540 --> 00:59:53,150
Brilliant.

667
00:59:53,210 --> 00:59:55,900
OK well that was by far the biggest that we've built so far.

668
00:59:55,900 --> 00:59:58,150
So thank you for staying with me.

669
59:58.150 --> 1:00:04.240
We're now going to move on from images and animations to the related but in many ways more exciting

670
1:00:04.660 --> 1:00:06.650
topic of video.
