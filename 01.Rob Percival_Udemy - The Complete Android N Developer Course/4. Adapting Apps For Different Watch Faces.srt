1
00:00:00,540 --> 00:00:06,630
Now that we've got the basic idea of how Android where apps work we're going to see how we can adapt

2
00:00:06,630 --> 00:00:14,030
them to a different watch faces as well as making our first simple interactive Android web app.

3
00:00:14,100 --> 00:00:20,430
So as we noticed in the previous video we've got something called a view stop here over in the main

4
00:00:20,430 --> 00:00:27,040
activity java file and we can see it again if we look in the activity main layout file.

5
00:00:27,040 --> 00:00:34,160
So if we look in the text version you can see we've got an android support wearable view which few Stabb

6
00:00:34,200 --> 00:00:34,900
here.

7
00:00:35,250 --> 00:00:38,950
So a stop is essentially a container which will contain.

8
00:00:38,970 --> 00:00:48,090
In this case one of two layouts either the rectangular layout or the round layout and you can see both

9
00:00:48,090 --> 00:00:52,610
of those are referenced here in the x m l.

10
00:00:52,710 --> 00:01:00,510
So the stub essentially detect the shape of the user's watch and displays the rectangular all round

11
00:01:00,550 --> 00:01:09,240
lay out respectively the rectangular and round lamps themselves are all pretty straightforward and full

12
00:01:09,240 --> 00:01:11,560
of things that we're used to things like text views.

13
00:01:11,610 --> 00:01:17,070
The one thing to notice which is different from what we've had before is that we can have the same ID

14
00:01:17,370 --> 00:01:23,190
for a text free for example in the rectangular and the round layouts.

15
00:01:23,220 --> 00:01:30,500
So here the idea of this text view is text and here it's also text.

16
00:01:30,510 --> 00:01:35,760
So before we've had to have different ideas for every object but with Android where we have the same

17
00:01:35,760 --> 00:01:36,200
ID.

18
00:01:36,200 --> 00:01:42,900
Or we can have the same ID in the rectangular and round layouts than that so that we can in our code

19
00:01:43,410 --> 00:01:51,420
access those user interface elements with a single find view by id rather than having to look for different

20
00:01:51,420 --> 00:01:54,350
objects in the different layouts.

21
00:01:54,780 --> 00:02:02,550
So as I say the stub works out which shape of watch we're working with and then inflates the appropriate

22
00:02:02,640 --> 00:02:05,260
layout either rectangular or round.

23
00:02:05,820 --> 00:02:12,750
You might be wondering how we establish in code which lay out we're working with.

24
00:02:13,020 --> 00:02:14,920
And there's a number of different ways to do that.

25
00:02:14,940 --> 00:02:21,200
But the simplest that I've found is to give layouts an ID.

26
00:02:21,720 --> 00:02:24,450
So for example here we've got our linear layout

27
00:02:27,590 --> 00:02:30,250
so I can give that an ID

28
00:02:35,520 --> 00:02:38,790
of Rex

29
00:02:41,550 --> 00:02:55,260
layout then with the round activity I could give that an ID of round lay out the once we've done that

30
00:02:55,440 --> 00:03:06,520
we can detect which layout is in use by looking for for example find view by ID.

31
00:03:06,770 --> 00:03:13,150
ID dot wrecked lay.

32
00:03:13,730 --> 00:03:14,870
And if that's not no

33
00:03:18,490 --> 00:03:19,360
then that means

34
00:03:24,250 --> 00:03:26,890
we've got a rectangular layout

35
00:03:31,590 --> 00:03:32,430
and if it is

36
00:03:36,430 --> 00:03:41,680
then we've got round roundabout

37
00:03:44,340 --> 00:03:46,330
with a T on the end.

38
00:03:48,220 --> 00:03:51,110
So let's just give that a quick try.

39
00:03:52,560 --> 00:03:54,730
We're running it's I believe in the

40
00:03:58,000 --> 00:04:02,470
square I mean that's the one that we use most recently so we should see in the Lokes

41
00:04:06,340 --> 00:04:09,800
rectangular layout when it launches.

42
00:04:11,050 --> 00:04:17,430
And there we go just scrolling up there you can see a rectangular layout Ceiba.

43
00:04:17,810 --> 00:04:22,490
So time for a quick challenge for you and this will be making your first interactive what you app is

44
00:04:22,520 --> 00:04:23,810
going to be very very basic.

45
00:04:23,950 --> 00:04:30,470
Well we're going to do is create a new project or a new app and we want a button on each of the layouts

46
00:04:30,800 --> 00:04:37,220
which when the user presses it it shows them via a toast whether they've got a rectangular or a round

47
00:04:37,720 --> 00:04:38,430
screen.

48
00:04:38,910 --> 00:04:44,680
So not a particularly useful app one that will test to make sure that you've got the idea of how layouts

49
00:04:44,740 --> 00:04:46,200
all work together.

50
00:04:46,820 --> 00:04:47,310
OK.

51
00:04:47,540 --> 00:04:52,940
So simple app with a button in the middle that when you press it it tells the user via a toast whether

52
00:04:52,940 --> 00:05:05,330
they've got a rectangular or round watch go for it.

53
00:05:05,350 --> 00:05:10,610
All right well I'm going to start Of course with the new projects

54
00:05:14,130 --> 00:05:16,930
and I'll call it square or round.

55
00:05:19,670 --> 00:05:29,640
Should you be rectangular around about square or round will the Android Wear link where activity and

56
00:05:29,980 --> 00:05:32,980
the deeper options.

57
00:05:33,130 --> 00:05:34,480
So here we go.

58
00:05:34,960 --> 00:05:41,390
I'll start by putting in the button to the rectangular activity.

59
00:05:41,910 --> 00:05:45,090
So it works in just the same way as normal Android development.

60
00:05:45,450 --> 00:05:53,070
And for the square activity you can see we've got linear layouts here a vertical linear layout.

61
00:05:53,070 --> 00:06:00,070
So by default the button will just appear immediately below the text there.

62
00:06:00,990 --> 00:06:04,800
So I'm going to get rid of the text and just have our button.

63
00:06:04,800 --> 00:06:06,150
There we go.

64
00:06:06,960 --> 00:06:13,470
And because it's the only interface element we're going to have I'll call it button and I'll change

65
00:06:13,470 --> 00:06:17,720
the text to show.

66
00:06:17,970 --> 00:06:21,740
Watch shape.

67
00:06:22,490 --> 00:06:26,320
OK click will also be show watch shape

68
00:06:29,080 --> 00:06:37,360
and then because I want exactly the same button in the round activity I'll just copy the code from the

69
00:06:37,360 --> 00:06:41,610
text of the SML and then pasted in.

70
00:06:41,650 --> 00:06:44,040
In fact I can just replace the text view with it.

71
00:06:52,340 --> 00:07:01,740
But I might do this time is dragging its to the center so that it's completely centered in the round

72
00:07:01,740 --> 00:07:03,220
watch.

73
00:07:03,260 --> 00:07:03,950
All right.

74
00:07:03,960 --> 00:07:06,910
Now it's time to write it a little bit of code.

75
00:07:07,110 --> 00:07:19,580
So the button had an enclave of show watch shape I'm going to get rid of the textfield now as we're

76
00:07:19,590 --> 00:07:20,850
not using that anymore.

77
00:07:21,390 --> 00:07:26,300
And then we'll create our method show watch shape

78
00:07:29,480 --> 00:07:36,110
which just says with normal Android caused by a view the button

79
00:07:39,610 --> 00:07:43,410
and then we want to detect what shape the watch has.

80
00:07:43,420 --> 00:07:53,620
So I'm going to assume a rectangular shape.

81
00:07:54,010 --> 00:07:57,090
So my message by default is going to be rectangular.

82
00:07:57,280 --> 00:08:00,070
And then I'm going to go to the round activity

83
00:08:03,640 --> 00:08:07,000
give the relative lap that an ID

84
00:08:09,820 --> 00:08:18,790
of round lay out and then we're going to look for the existence of the round layout.

85
00:08:18,860 --> 00:08:36,380
So if find V by ID Card ID dot round lay out is not now then we'll change message to round

86
00:08:39,560 --> 00:08:46,480
and then either way we'll toast.

87
00:08:46,770 --> 00:08:53,550
So create a new taste in exactly the same way as with normal enjoyed with the message.

88
00:08:53,550 --> 00:08:55,230
There we go.

89
00:08:55,320 --> 00:08:56,240
Simple as that.

90
00:08:56,250 --> 00:08:56,940
Let's give it a go.

91
00:08:56,940 --> 00:09:02,330
We'll start on the round device see if it gets it right.

92
00:09:02,940 --> 00:09:03,670
And there we go.

93
00:09:03,720 --> 00:09:05,170
So let's tap the show.

94
00:09:05,200 --> 00:09:06,390
What shape button.

95
00:09:06,390 --> 00:09:10,860
And you can see we've got round appearing there that that looks as desired.

96
00:09:11,190 --> 00:09:12,640
Let's just go back.

97
00:09:12,750 --> 00:09:16,540
Stop that and run it on the square

98
00:09:19,340 --> 00:09:21,910
device and make sure that that works too.

99
00:09:22,700 --> 00:09:23,220
And here we go.

100
00:09:23,230 --> 00:09:25,750
So now of course the buttons at the top.

101
00:09:25,750 --> 00:09:32,630
But again if we tap it we get the correct shape of the watch face excellent.

102
00:09:32,630 --> 00:09:38,660
So that's the basics of how we create apps that display and work differently on different shapes in

103
00:09:38,670 --> 00:09:43,700
the next video we're going to be building a rather more useful app called people counter.
