WEBVTT
1
00:00:00.510 --> 00:00:02.480
All right so now we've downloaded web content.

2
00:00:02.490 --> 00:00:07.890
The next step is to see how we can use similar code to download an image and then display that for the

3
00:00:07.890 --> 00:00:08.790
user.

4
00:00:08.970 --> 00:00:14.060
Then be in a perfect position to play our guest the celebrity app in the next area.

5
00:00:14.460 --> 00:00:21.660
So a quick challenge for you then could you create a new app and then create a button and an image within

6
00:00:21.660 --> 00:00:26.600
that app and set up the button so that when you tap it something is sent to the logs.

7
00:00:27.090 --> 00:00:31.950
So you just need a button and an image and then make the button interactive and send something to the

8
00:00:31.950 --> 00:00:33.420
logs when it's tapped.

9
00:00:33.420 --> 00:00:39.130
Good luck.

10
00:00:39.130 --> 00:00:39.550
All right.

11
00:00:39.570 --> 00:00:41.450
I should have been a fairly straightforward challenge.

12
00:00:42.710 --> 00:00:50.200
So I create a new project I'll call it downloading images.

13
00:00:50.930 --> 00:00:52.960
All the usual settings.

14
00:00:53.900 --> 00:00:54.980
Next next.

15
00:00:55.010 --> 00:00:56.260
And finish.

16
00:00:58.290 --> 00:00:59.120
Here we go.

17
00:00:59.270 --> 00:01:03.950
I'm going to get rid of that label and then drag in a button.

18
00:01:05.910 --> 00:01:12.510
Top left and I'm going to make it nice and bake so it will change the width to match the parent.

19
00:01:16.990 --> 00:01:23.710
Then I'm going to try again an image a few which I want to take up the rest of the screen.

20
00:01:26.840 --> 00:01:35.380
So fill parent with and fill parent height get the button.

21
00:01:35.410 --> 00:01:40.420
If it wasn't obvious last time it's going to be used to download the image.

22
00:01:40.420 --> 00:01:46.740
So just change the text that if you didn't do that bit and then I'm going to change the click method.

23
00:01:50.120 --> 00:01:54.590
To download image.

24
00:01:55.260 --> 00:02:00.580
And finally I just need to write the code for the download image method.

25
00:02:02.660 --> 00:02:07.110
So usual public FOID download image.

26
00:02:07.310 --> 00:02:11.660
And remember it's been called by a view which will call view

27
00:02:15.580 --> 00:02:19.060
that package and then we're just going to log

28
00:02:22.450 --> 00:02:28.210
some interaction specifically the button has been tapped.

29
00:02:33.830 --> 00:02:39.200
It's if you can remember how to do that then shame on you.

30
00:02:39.200 --> 00:02:42.910
Hopefully you did can we use the same emulator.

31
00:02:42.920 --> 00:02:51.830
I was using before and let's just take a look and make sure we've got a little bit of interaction.

32
00:02:52.510 --> 00:02:57.700
OK so the appliques good get tap download image.

33
00:02:57.710 --> 00:02:58.240
There we go.

34
00:02:58.270 --> 00:02:59.480
Button typed.

35
00:02:59.690 --> 00:03:00.950
Fantastic.

36
00:03:01.010 --> 00:03:08.060
So I always like to set that up first before I try and do anything with my buttons just to make sure

37
00:03:08.060 --> 00:03:10.640
that everything is connected and working fine.

38
00:03:10.940 --> 00:03:19.340
Of course to download our image we're going to need an image to download and I'm going to use one of

39
00:03:19.340 --> 00:03:25.340
my favorite cartoon characters Bart Simpson and I'm just going to put wiki in there so that with any

40
00:03:25.340 --> 00:03:35.220
luck we'll get that one from Wikipedia which generally speaking is easy to use and I'm just kind of

41
00:03:37.100 --> 00:03:47.140
copy the link address sorry the image you are el and then paste that back in here.

42
00:03:47.590 --> 00:03:54.280
So we're going to call it in the download image method here.

43
00:03:54.280 --> 00:03:59.190
So just comment in the U r l.

44
00:03:59.230 --> 00:04:01.030
We're going to download the image from.

45
00:04:01.440 --> 00:04:06.130
While we're here we'll just connect up the image view

46
00:04:10.350 --> 00:04:13.740
and I'm going to leave the ID as image view that.

47
00:04:14.610 --> 00:04:23.000
And in the uncreate method we'll just find that that's going to be an image view.

48
00:04:24.180 --> 00:04:32.350
They'll call it downloaded image and it's going to be an image view of course cast to image view.

49
00:04:32.380 --> 00:04:43.230
And we get it using find view by ID results to ID dot image view we.

50
00:04:43.720 --> 00:04:44.520
All right.

51
00:04:44.710 --> 00:04:51.650
Let's now create our class to extend async task and download our image.

52
00:04:52.300 --> 00:04:53.520
So as before.

53
00:04:53.530 --> 00:04:58.810
Public class call it image download at this time.

54
00:04:59.470 --> 00:05:12.540
And of course it extends async task and we're going to send it a string.

55
00:05:12.680 --> 00:05:19.880
We're not going to call the method while it's running but this time we're going to return the image

56
00:05:19.880 --> 00:05:21.170
itself.

57
00:05:21.170 --> 00:05:29.960
So that's going to be a bitmap rather than the content of a Web site which was the string last time

58
00:05:29.960 --> 00:05:30.870
round.

59
00:05:31.460 --> 00:05:32.020
OK.

60
00:05:32.060 --> 00:05:38.030
Last thing click on the red light bulb and implement the do in background method that just saves us

61
00:05:38.030 --> 00:05:43.800
having to type it ourselves so you can see it knows that we want to return a bitmap this time.

62
00:05:44.270 --> 00:05:45.760
But just as before.

63
00:05:48.160 --> 00:05:56.870
Let's change the frog to be called You are elves and now that's right.

64
00:05:56.890 --> 00:05:57.370
OK.

65
00:05:57.380 --> 00:05:59.220
To download this image.

66
00:05:59.530 --> 00:06:03.680
Now you could try attempting doing some of this yourself because a lot of the code is the same as before.

67
00:06:03.820 --> 00:06:07.060
But if you want to follow along that's absolutely fine.

68
00:06:07.060 --> 00:06:18.550
So first off we're going to create a u r l u r l and we're going to create as a new R L from you our

69
00:06:18.560 --> 00:06:22.200
Elle's 0.

70
00:06:22.250 --> 00:06:27.590
So that is creating it from the u r l that we passed to this method.

71
00:06:27.860 --> 00:06:32.690
And again you can see we've got the error there which tells us to surround it with try and catch.

72
00:06:32.690 --> 00:06:36.860
Because that might fail if we've got a malformed.

73
00:06:36.940 --> 00:06:45.200
R L So it's even giving us the likely exception that might happen there but it shouldn't be because

74
00:06:45.200 --> 00:06:47.910
we're going to specify what you are aliens.

75
00:06:48.080 --> 00:06:58.760
Now let's create our new U R L connection so h t t p u r l connection Kulick connection this time and

76
00:06:58.760 --> 00:07:12.430
it's going to be an h t t p u r l connection and we're going to create it from our u r l dot open connection.

77
00:07:12.440 --> 00:07:16.420
Now you can see we've got another red underline there.

78
00:07:16.940 --> 00:07:28.560
That's because this is going to cause a different sort of exception so we can actually add a new exception.

79
00:07:28.790 --> 00:07:35.720
So this is an IO exception which is input output exception so it will likely occur if we haven't asked

80
00:07:35.720 --> 00:07:41.690
permission for example to use the internet or if the user doesn't have their Internet switched on.

81
00:07:41.720 --> 00:07:45.000
Now here's where things change slightly from what we did before.

82
00:07:45.260 --> 00:07:50.000
Before we went through all of the characters that were being returned one by one and put them all together

83
00:07:50.600 --> 00:07:54.410
because we're downloading an image this time we can't do that in quite the same way because an image

84
00:07:54.410 --> 00:07:56.550
isn't made up of a bunch of characters.

85
00:07:56.750 --> 00:08:03.620
So essentially what we do is download the image in one go and then convert the data that we get to a

86
00:08:03.620 --> 00:08:10.840
bitmap image which finally we're going to be able to set to how downloaded image image view.

87
00:08:10.970 --> 00:08:23.570
So to do that we use connection don't connect to connect to our connection and then we create an input

88
00:08:23.570 --> 00:08:27.430
stream similar to what we did before.

89
00:08:29.160 --> 00:08:32.100
I'm going to call it I guess well let's call it input string.

90
00:08:32.130 --> 00:08:34.470
I guess that's a bit clearer but Stream.

91
00:08:34.500 --> 00:08:35.580
And that's going to be.

92
00:08:35.680 --> 00:08:41.460
Connection don't get input stream.

93
00:08:41.460 --> 00:08:44.710
So that then downloads the whole input stream in one go.

94
00:08:46.070 --> 00:08:50.250
And finally we want to convert that to a bitmap.

95
00:08:51.290 --> 00:08:56.470
So we use bitmap to create a bitmap.

96
00:08:56.710 --> 00:09:11.210
I'm going to call it my bitmap and then we use what's called bitmap factory which is just a bunch of

97
00:09:11.210 --> 00:09:23.040
commands that we can use to manipulate and encode or decode images dot de-code stream and then the stream

98
00:09:23.040 --> 00:09:27.300
that we want to decode is the input stream.

99
00:09:27.570 --> 00:09:36.670
So that just converts this data that's been downloaded into an image that we can then work with and

100
00:09:36.670 --> 00:09:45.570
then we can return my bitmap.

101
00:09:45.850 --> 00:09:54.700
So those lines of code then download the image convert it to a bitmap that we can then return to the

102
00:09:54.700 --> 00:09:56.480
original calling method.

103
00:09:58.300 --> 00:10:05.620
Which is going to be up here and we call that in much the same way that we did before.

104
00:10:06.450 --> 00:10:16.530
So we're going to create a new image down later and we'll call it task again because once again it is

105
00:10:16.530 --> 00:10:26.020
a task that we're using async task for and that's going to be a new image download a

106
00:10:29.700 --> 00:10:43.210
and we'll create a bitmap I'll call it my image and then we'll set my image to

107
00:10:46.010 --> 00:10:47.430
task.

108
00:10:47.800 --> 00:10:48.650
Execute.

109
00:10:50.360 --> 00:10:50.870
And

110
00:10:54.000 --> 00:11:03.810
we need to pass to that the string that we want to execute and then dot gets to get the result.

111
00:11:03.850 --> 00:11:09.010
So just the same as before but this time we're working with a bitmap rather than a string that's going

112
00:11:09.010 --> 00:11:15.650
to tell us to surround it with try and catch which I'm very happy to.

113
00:11:20.740 --> 00:11:25.690
And then we'll have all of those I think actually I'm going to get rid of those and just combine them

114
00:11:26.230 --> 00:11:35.920
to a single exception there because there isn't a chance that my image doesn't get returned properly

115
00:11:35.920 --> 00:11:41.370
as well and I want to include that in these possibilities of exceptions.

116
00:11:41.380 --> 00:11:48.610
Finally then we need to get the downloaded image image view and apply my image bitmap to that.

117
00:11:48.640 --> 00:11:56.230
So I'm just going to change or move the definition to up here so that I can access it from my download

118
00:11:56.230 --> 00:11:57.090
image method.

119
00:12:00.740 --> 00:12:02.230
And then we'll set it there.

120
00:12:02.270 --> 00:12:20.720
And then finally here was that downloaded image dot set image bitmap to my image and we got one thing

121
00:12:20.720 --> 00:12:28.350
of course we do need to add the necessarily line necessarily line the necessary line to our manifest.

122
00:12:28.640 --> 00:12:37.340
And you remember that is use is permission and we want Android daat permission dot

123
00:12:39.980 --> 00:12:44.420
Internet.

124
00:12:44.460 --> 00:12:44.910
There we go.

125
00:12:44.910 --> 00:12:47.000
You can see we get a red wiggly line there.

126
00:12:47.010 --> 00:12:48.590
We have got an error.

127
00:12:48.870 --> 00:12:54.820
And that's because we won't get anything returned if this fails and we need to have something returned.

128
00:12:55.110 --> 00:13:00.030
So what we'll do is if we're unsuccessful here in our Tri

129
00:13:03.450 --> 00:13:11.130
to download the image we'll just return NULL and then that cause won't cause any problems.

130
00:13:11.130 --> 00:13:17.220
It will be nice to display I mean error message for the user but that's fairly easy to do.

131
00:13:17.220 --> 00:13:18.780
We could just have a toast or something here.

132
00:13:18.780 --> 00:13:22.100
So we're not going to spend time doing that now.

133
00:13:22.310 --> 00:13:24.190
All right then let's have a look.

134
00:13:26.060 --> 00:13:26.810
Let's run that.

135
00:13:26.840 --> 00:13:30.610
And we should then find if we just quickly run through the code that we've written.

136
00:13:31.760 --> 00:13:32.810
When the user

137
00:13:35.650 --> 00:13:44.400
taps on our button the download image method will be called which will then execute the task of image

138
00:13:44.400 --> 00:13:45.380
downloader.

139
00:13:45.420 --> 00:13:53.170
With that you are all the image download a task extends icing string which means it happens on the background

140
00:13:53.170 --> 00:13:53.740
thread.

141
00:13:54.020 --> 00:14:00.970
And that will then convert the well if it can to a valid you will create an HGP your connection connect

142
00:14:00.970 --> 00:14:07.540
to that creates an input stream which gets the content of that you Arel convert that to a bit map and

143
00:14:07.540 --> 00:14:19.210
then return it to the original method that called it which will then set downloaded image which is our

144
00:14:19.220 --> 00:14:23.410
image view to have that image.

145
00:14:23.410 --> 00:14:24.710
All right let's give it a try.

146
00:14:24.710 --> 00:14:26.780
So here's our download image button.

147
00:14:26.780 --> 00:14:32.000
We tap it and there we go download the image and displays it there for us.

148
00:14:32.000 --> 00:14:32.810
Fantastic.

149
00:14:33.050 --> 00:14:35.280
So that's how we download images.

150
00:14:35.300 --> 00:14:37.390
We're now going to put all this together now.

151
00:14:37.400 --> 00:14:38.210
Pretty fun.

152
00:14:38.210 --> 00:14:39.490
Guess the celebrity app.
