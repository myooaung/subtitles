WEBVTT
1
00:00:00.450 --> 00:00:00.870
All right.

2
00:00:00.870 --> 00:00:04.470
So we're finally in a position to make our guests the celebrity app.

3
00:00:04.500 --> 00:00:06.860
Just a quick recap of what we're trying to do.

4
00:00:07.200 --> 00:00:15.360
We're going to use the code of POS $24 com slash celebrities to get the photos and names of the top

5
00:00:15.360 --> 00:00:23.490
100 celebs and then we're going to store those within our app and display them to the user and require

6
00:00:23.490 --> 00:00:28.140
the user to guess which celebrity is appearing in a random picture.

7
00:00:28.380 --> 00:00:32.030
So I can show you exactly what we're going to make.

8
00:00:32.030 --> 00:00:34.660
This is it in action.

9
00:00:34.680 --> 00:00:37.570
So this one I think I actually recognize I think that's Tina Fey.

10
00:00:37.570 --> 00:00:41.490
So I'm going to click on there and with any luck it'll tell me correct.

11
00:00:41.490 --> 00:00:42.210
Fantastic.

12
00:00:42.240 --> 00:00:43.730
And then go on the next one.

13
00:00:43.950 --> 00:00:46.820
Is that Zac Efron possibly correct.

14
00:00:46.910 --> 00:00:49.570
It is oh this one I've no idea.

15
00:00:49.570 --> 00:00:52.330
That's go for Alice correct again.

16
00:00:52.380 --> 00:00:53.220
Very good.

17
00:00:53.220 --> 00:00:56.520
Now I do actually know this one but let's say that it's Ryan Adams just so that we can see what happens

18
00:00:56.520 --> 00:00:57.500
when we get it wrong.

19
00:00:57.690 --> 00:00:58.150
There we go.

20
00:00:58.170 --> 00:01:01.190
So if you get it wrong it tells us the next one.

21
00:01:01.980 --> 00:01:04.140
So all it does is just go round and round.

22
00:01:04.140 --> 00:01:08.380
I haven't got any score counting or anything like that because we did all that stuff in the brain drain

23
00:01:08.380 --> 00:01:08.780
app.

24
00:01:08.940 --> 00:01:13.650
So you can add that yourself if you want but this is really the basic functionality that we need.

25
00:01:14.160 --> 00:01:16.640
And there's nothing here that we haven't done.

26
00:01:16.710 --> 00:01:21.940
In some ways before so I'd definitely do your best to do this completely on your own.

27
00:01:22.290 --> 00:01:27.790
But of course as always you are very welcome to follow along and see how I created this one myself.

28
00:01:27.800 --> 00:01:29.000
Let's have a final guess.

29
00:01:29.220 --> 00:01:30.460
Steve-O No.

30
00:01:30.500 --> 00:01:32.560
Are you Jenson Button.

31
00:01:32.640 --> 00:01:33.560
Unfortunate.

32
00:01:33.810 --> 00:01:34.400
OK.

33
00:01:34.680 --> 00:01:35.530
Best of luck Ben.

34
00:01:35.680 --> 00:01:43.860
Because well.

35
00:01:44.270 --> 00:01:44.720
All right.

36
00:01:44.720 --> 00:01:45.930
I hope you manage that.

37
00:01:46.280 --> 00:01:54.980
I'm going to start of course by creating a new project which I'll call guess the celebrity

38
00:01:59.520 --> 00:02:01.460
usual settings.

39
00:02:02.120 --> 00:02:03.480
Here we go.

40
00:02:04.230 --> 00:02:04.760
OK.

41
00:02:04.890 --> 00:02:08.790
So I'll start with the layout of the app and it's pretty straightforward.

42
00:02:08.790 --> 00:02:15.270
We want the image view at the top and then four buttons underneath for the user to choose who they think

43
00:02:15.270 --> 00:02:17.320
that celebrity is.

44
00:02:17.340 --> 00:02:20.920
So I'm going to use a grid layout just like we did before.

45
00:02:22.530 --> 00:02:25.020
And then I'm going to start by bringing my image v.

46
00:02:28.100 --> 00:02:36.790
into the Create Louds game again to change the width to fill parent.

47
00:02:37.740 --> 00:02:39.030
And then just like we did before.

48
00:02:39.030 --> 00:02:40.980
I'm going to go over to text for you.

49
00:02:43.710 --> 00:02:56.730
And then set the column to be zero and the row to be zero.

50
00:02:58.020 --> 00:03:01.510
And crucially they lay out gravity to be.

51
00:03:01.550 --> 00:03:04.820
PHIL.

52
00:03:05.940 --> 00:03:14.070
So now if we put back I can see that that image view now spreads around the whole of the gravy.

53
00:03:14.130 --> 00:03:16.860
So let's see what happens when we bring in how buttons

54
00:03:21.110 --> 00:03:25.070
so at the moment the button is off to the right which we don't want.

55
00:03:25.070 --> 00:03:26.840
Obviously we want that underneath.

56
00:03:26.930 --> 00:03:33.550
So we need to do is set the row and column correctly.

57
00:03:33.580 --> 00:03:41.650
So the row now is going to be one and the column is still going to be zero and that we only have one

58
00:03:41.650 --> 00:03:42.190
column here.

59
00:03:42.190 --> 00:03:45.080
So they're all going to have a column of 0.

60
00:03:45.520 --> 00:03:53.470
So now we should say that the button is below the imagery which is just what we want we do want however

61
00:03:53.500 --> 00:03:56.880
to change the width of the button to make it full screen.

62
00:03:58.970 --> 00:04:02.130
So change the width to fill parent.

63
00:04:02.450 --> 00:04:06.410
And while I'm here I'll change the unclick

64
00:04:10.200 --> 00:04:10.980
T.

65
00:04:12.430 --> 00:04:18.140
Scilab chosen.

66
00:04:18.590 --> 00:04:31.610
And one more change that I'll make is I will add a tag so that we can tell which button has been tapped.

67
00:04:31.610 --> 00:04:32.310
Here we go.

68
00:04:32.480 --> 00:04:34.230
So just as before.

69
00:04:34.460 --> 00:04:35.930
So we'll call this one.

70
00:04:37.320 --> 00:04:38.210
Tag zero.

71
00:04:41.790 --> 00:04:47.450
And then let's move that back up there we'll add the rest of our buttons

72
00:04:52.890 --> 00:04:57.780
and the only changes that we need to make to change the tag and the row

73
00:05:02.080 --> 00:05:07.610
and the ID.

74
00:05:07.680 --> 00:05:11.290
So just to increment each of those for each button

75
00:05:24.490 --> 00:05:25.960
and tag three

76
00:05:29.250 --> 00:05:31.170
a game that we get.

77
00:05:31.290 --> 00:05:33.840
So obviously our image is blank at the moment.

78
00:05:34.860 --> 00:05:41.540
And one thing actually I'm going to set the text to nothing because I don't want it to say new button

79
00:05:41.540 --> 00:05:42.680
while it's waiting for

80
00:05:46.080 --> 00:05:48.560
the initial download of content

81
00:05:51.990 --> 00:05:52.770
you get.

82
00:05:53.320 --> 00:05:54.460
All right.

83
00:05:54.880 --> 00:05:57.060
So now I see main activity

84
00:06:00.360 --> 00:06:08.160
and our first challenge is of course to download the content of the past 24 dot com slash celebrities

85
00:06:08.520 --> 00:06:09.750
website.

86
00:06:09.780 --> 00:06:13.310
So the code is going to be pretty much exactly the same as what we had before.

87
00:06:13.910 --> 00:06:19.800
So let's go through it nice and quickly so create our public class.

88
00:06:19.960 --> 00:06:21.630
I'll keep the names the same as well.

89
00:06:21.630 --> 00:06:22.770
Download task.

90
00:06:23.130 --> 00:06:29.240
And it extends a async task.

91
00:06:29.300 --> 00:06:33.390
We're going to send a string to it's we've got nothing today.

92
00:06:33.410 --> 00:06:39.670
While it's downloading while it's happening and we're going to expect a string back

93
00:06:43.640 --> 00:06:51.760
then we're going to get Android studio to implement the do in background method for us.

94
00:06:51.760 --> 00:06:55.000
There it is.

95
00:06:55.240 --> 00:06:58.870
Change the string to you or else get rid of the return null.

96
00:06:58.870 --> 00:07:01.630
In fact you may just keep that

97
00:07:05.090 --> 00:07:06.840
just in case we need it.

98
00:07:07.540 --> 00:07:08.200
OK.

99
00:07:08.450 --> 00:07:16.250
And then as before we'll create a result string which is initially empty will have an initially empty

100
00:07:16.250 --> 00:07:25.130
u r l variable and will create an h t t p u r l connection.

101
00:07:26.750 --> 00:07:30.050
Called u r l connection which will initially be no

102
00:07:32.900 --> 00:07:37.360
right and we're going to try.

103
00:07:37.550 --> 00:07:47.380
First of all to create a u r l from the U R L that was passed to the dairying background method which

104
00:07:47.380 --> 00:07:50.000
is you are Elle's Siri

105
00:07:53.680 --> 00:08:04.060
and because we don't like is hanging around as we're working or create a catch exception e a general

106
00:08:04.060 --> 00:08:10.260
exception and we'll just print a stack trace to show us what the error is.

107
00:08:12.600 --> 00:08:22.710
OK then we're going to activate your L connection by taking u r l and opening the connection to it.

108
00:08:23.360 --> 00:08:32.180
And we do need to cast that to a type of page TTP your real connection.

109
00:08:32.180 --> 00:08:33.890
Then we create an input stream

110
00:08:40.070 --> 00:08:51.770
I'll call it in again which is going to be your RL connection Daut get input stream and then input stream

111
00:08:53.690 --> 00:08:57.570
reader again I'll call it Rita.

112
00:08:58.240 --> 00:09:09.570
He's going to be our new input stream reader created based on our input stream I n then we get our data

113
00:09:09.570 --> 00:09:10.060
into the

114
00:09:12.900 --> 00:09:18.830
called datum which is equal to read a dot read.

115
00:09:18.840 --> 00:09:22.730
So we're starting to read the input stream reader.

116
00:09:23.460 --> 00:09:28.730
And then we loop 3 as long as data is not equal to minus 1

117
00:09:33.490 --> 00:09:34.980
and as long as that's the case

118
00:09:40.140 --> 00:09:51.030
we'll have a char called Current which is going to be equal to a data cast as a char

119
00:09:56.010 --> 00:10:02.830
I said it right but we're wrong data cost as a child.

120
00:10:02.840 --> 00:10:03.490
There we go.

121
00:10:03.570 --> 00:10:08.570
Then we append jaw 2 results.

122
00:10:13.300 --> 00:10:14.890
And we carry on the process

123
00:10:21.870 --> 00:10:28.360
and once that's all done well we're 10 years old.

124
00:10:31.200 --> 00:10:36.110
And then no will be returned if result is not returned.

125
00:10:36.110 --> 00:10:38.900
So if this fails so we'll leave that in

126
00:10:42.860 --> 00:10:50.750
now we want to run that on Create say download task

127
00:10:53.620 --> 00:11:04.690
we'll call it task again is equal to the download task creates a result string

128
00:11:07.420 --> 00:11:08.710
which is initially no

129
00:11:11.980 --> 00:11:21.190
and then we'll set result equal C and we'll take our task and execute it.

130
00:11:23.040 --> 00:11:36.870
Using R U R L which is HTP colon double slash to read every top posh 24 dot com slash celebrities

131
00:11:41.350 --> 00:11:43.090
and then we want to get the result of that.

132
00:11:43.120 --> 00:11:48.540
So we use Dockett OK because that's running on the other thread.

133
00:11:48.560 --> 00:11:56.870
We need to surround it with try and catch to catch all of the possible errors.

134
00:12:02.650 --> 00:12:06.040
And then as before I'm just going to log that

135
00:12:19.700 --> 00:12:21.480
just like that.

136
00:12:21.950 --> 00:12:23.220
There we go.

137
00:12:23.930 --> 00:12:26.850
So quite a lot of code but hopefully it all makes sense.

138
00:12:26.990 --> 00:12:32.980
And it was really a little bit quicker to time the second or third time around.

139
00:12:32.990 --> 00:12:36.320
Finally we need to add our line to the manifest.

140
00:12:37.180 --> 00:12:41.200
So that uses permission and the permission that we need.

141
00:12:41.220 --> 00:12:46.520
Same one that we usually go for Android don't permission.

142
00:12:46.550 --> 00:12:48.410
Internet.

143
00:12:48.650 --> 00:12:53.930
And just before we run that you may have noticed that I was appending result to itself there so that

144
00:12:53.930 --> 00:12:58.950
really wouldn't have given us much data at all.

145
00:12:59.000 --> 00:12:59.970
Sorry about that.

146
00:13:00.410 --> 00:13:01.130
Let's get that again.

147
00:13:01.130 --> 00:13:10.420
Now we should find of course that it just returns the contents of 24 dot com slash celebrities and prints

148
00:13:10.430 --> 00:13:13.240
them to the logs and there we go.

149
00:13:13.430 --> 00:13:15.160
You can see that it's loaded up fine.

150
00:13:15.200 --> 00:13:21.120
And there is the content that we're looking for.

151
00:13:21.380 --> 00:13:22.280
Fabulous.

152
00:13:22.760 --> 00:13:27.890
So now we need to process that content and get the precise information that we need.

153
00:13:27.890 --> 00:13:34.930
That shouldn't be too difficult given that we've done most of the hard work already over here in prau

154
00:13:34.950 --> 00:13:39.600
X Y so that extracts the information that we need.

155
00:13:39.760 --> 00:13:47.200
Now if we take a look at the code and search for what we were searching for before which was SLAC equals

156
00:13:47.270 --> 00:13:54.140
and then the double quotes we can select that and then use command therefore control f to search for

157
00:13:54.140 --> 00:13:55.430
it in the page.

158
00:13:55.850 --> 00:13:59.510
You can see it does indeed give us everything that we want.

159
00:13:59.750 --> 00:14:06.290
Unfortunately it also gave us gives us a few things that we don't want as well like these javascript

160
00:14:06.410 --> 00:14:07.420
links.

161
00:14:07.880 --> 00:14:19.550
But if we updated our code to include the image tag I am g then that doesn't give us anything that we

162
00:14:19.550 --> 00:14:23.520
don't want except maybe at the end.

163
00:14:23.630 --> 00:14:26.800
Let's go and have a look and see if there are any other images at the end.

164
00:14:31.920 --> 00:14:37.380
And indeed yes there are there are some images that we don't want because they're to do with other articles

165
00:14:37.860 --> 00:14:39.950
on the other end of the page.

166
00:14:40.050 --> 00:14:50.490
So if we can find a way to split the page at say this point again let's just check and make sure that

167
00:14:50.520 --> 00:14:51.840
there's only one of those.

168
00:14:51.930 --> 00:15:01.580
So if we split the page at this point and then search for the image as Sassy's at the part of the page

169
00:15:01.590 --> 00:15:07.070
before that point then that should give us everything that we need.

170
00:15:07.380 --> 00:15:10.800
And crucially nothing that we don't need.

171
00:15:10.800 --> 00:15:12.000
So let's try that.

172
00:15:14.480 --> 00:15:15.990
Back to android studios.

173
00:15:15.990 --> 00:15:22.120
So now here is where we want to process result.

174
00:15:22.220 --> 00:15:27.410
So I saved that bit of code in the clipboard then.

175
00:15:27.650 --> 00:15:37.450
So let's remind ourselves how we do our split by looking at the code that we had here.

176
00:15:37.510 --> 00:15:42.000
So I'm just going to copy that straight in to Android studio

177
00:15:46.310 --> 00:15:50.700
and let's change it to split results.

178
00:15:51.090 --> 00:16:02.530
And then this is going to be result don't split but instead of splitting it by the letter S we're going

179
00:16:02.530 --> 00:16:07.750
to split it with div class equals and then sidebar content and you can see it's actually very helpfully

180
00:16:07.750 --> 00:16:10.080
put the backslashes in for us.

181
00:16:10.180 --> 00:16:12.100
So we don't need to do that ourselves.

182
00:16:13.550 --> 00:16:14.960
Fantastic.

183
00:16:15.080 --> 00:16:22.590
So now we just need to do the loop through part and again we can get the code from that from prowar

184
00:16:22.590 --> 00:16:23.130
X Y

185
00:16:26.650 --> 00:16:28.140
and select both parts

186
00:16:31.830 --> 00:16:35.450
and I point to work that we've already done.

187
00:16:35.540 --> 00:16:48.640
Again let's add in pattern and match up and then we just need to change HMO for split result.

188
00:16:51.100 --> 00:17:00.190
And in fact sorry we want to split result 0 because we want the first part of that array which will

189
00:17:00.190 --> 00:17:03.130
be the part before the sidebar container.

190
00:17:03.250 --> 00:17:10.220
So that will be the part containing all the celebrities but not the part containing the latest news.

191
00:17:10.470 --> 00:17:11.250
Excellent.

192
00:17:11.550 --> 00:17:15.170
So now that should print a lot to the looks.

193
00:17:15.210 --> 00:17:24.890
So let's get rid of that because we no longer need it and run that again and see if that works.

194
00:17:25.230 --> 00:17:32.130
It's worth pointing out here that this is not a great way to get your data if you want your app to be

195
00:17:32.580 --> 00:17:36.890
reliable because we obviously don't control don't come.

196
00:17:37.080 --> 00:17:42.660
We hope that they will update this and that we'll keep our app up to date with the latest celebrities.

197
00:17:42.700 --> 00:17:47.330
But if they changed the code of this page then how app would then break.

198
00:17:47.550 --> 00:17:50.750
So it's not a great way to make a reliable app.

199
00:17:50.760 --> 00:17:56.370
However it could be good for downloading some information to then store in your app later on if you're

200
00:17:56.370 --> 00:17:58.500
not relying on this all the time.

201
00:17:58.500 --> 00:18:05.010
We'll see a much better way to get data from the web using Jaison and API is in the next video.

202
00:18:05.310 --> 00:18:10.480
But this is a great introduction to getting web content and using it.

203
00:18:11.070 --> 00:18:12.060
And here we go.

204
00:18:12.160 --> 00:18:21.650
You can see there are all our celebrity names and they're all image you are else fantastic.

205
00:18:22.620 --> 00:18:28.690
OK let's now then create a couple of great lists to store those.

206
00:18:29.180 --> 00:18:35.340
So I'll create them globally because we're going to need access to them all over the place.

207
00:18:39.420 --> 00:18:50.820
So we'll have an array list of strings going to be a new array list

208
00:18:54.370 --> 00:18:55.120
of strings

209
00:18:59.310 --> 00:19:01.500
and let's call it Scilab

210
00:19:05.230 --> 00:19:06.040
you are Elle's

211
00:19:11.840 --> 00:19:19.350
and then very similarly we'll create one called celeb names

212
00:19:22.300 --> 00:19:30.680
and then instead of printing these are the logs every time you take that first one remember finds the

213
00:19:30.690 --> 00:19:39.980
you are else so celeb you are Elle's it had and then

214
00:19:44.570 --> 00:19:53.750
am grape.

215
00:19:54.210 --> 00:19:55.260
And then similarly

216
00:19:58.290 --> 00:20:01.770
celeb names add

217
00:20:05.280 --> 00:20:10.090
am group grape.

218
00:20:10.110 --> 00:20:10.610
All right.

219
00:20:10.630 --> 00:20:17.020
So now we have two array lists one of which contains all the you are else for the images for all celebrities

220
00:20:17.350 --> 00:20:19.920
and the other one contains all the names.

221
00:20:20.170 --> 00:20:23.850
So what we want to do next is pick a number at random.

222
00:20:23.980 --> 00:20:29.800
Get that image you are l download the image and then display it for the user.

223
00:20:29.800 --> 00:20:30.920
So let's do that

224
00:20:33.630 --> 00:20:35.580
down in creates where we

225
00:20:41.500 --> 00:20:41.790
here.

226
00:20:41.910 --> 00:20:52.170
So after we've got a celeb you or else an celeb names let's create a random

227
00:20:55.580 --> 00:21:00.770
which we'll call random and it's going to be a new random

228
00:21:05.050 --> 00:21:11.110
then we'll have an integer code chosen celeb which again is likely to need access from

229
00:21:14.080 --> 00:21:15.050
a number of places.

230
00:21:15.090 --> 00:21:20.780
So I'll define it up here and I'll give it an initial value of zero.

231
00:21:20.780 --> 00:21:30.020
I just so that we've got something to work with and then we can take chosen celeb is going to be equal

232
00:21:30.020 --> 00:21:39.740
to random and then we want to create a new integer which has got to be between 0 and the size or one

233
00:21:39.740 --> 00:21:42.610
less than the size of the array list.

234
00:21:42.630 --> 00:21:48.130
So celeb you are Elle's don't size

235
00:21:50.840 --> 00:21:57.620
I remember random dot next it gives you a random number between 0 and 1 less than the number that you

236
00:21:57.620 --> 00:21:58.740
put in here.

237
00:21:58.940 --> 00:22:04.010
Which is exactly what we want because one less than that is going to be the highest value.

238
00:22:04.670 --> 00:22:08.160
So now the small matter of downloading the image.

239
00:22:08.810 --> 00:22:16.750
So as I'm sure you've anticipated this is going to involve a second public class extending async task.

240
00:22:17.240 --> 00:22:20.390
So that's bundling three.

241
00:22:21.240 --> 00:22:34.130
So public class again image downloader which extends async task and we're going to send it a string

242
00:22:34.130 --> 00:22:36.620
which will be the U r l.

243
00:22:36.650 --> 00:22:38.710
We don't need anything to happen while it's working.

244
00:22:38.750 --> 00:22:48.110
And then it's going to return a bitmap.

245
00:22:48.300 --> 00:22:52.280
We'll use Android studio to implement the do in background method.

246
00:22:53.630 --> 00:23:01.380
Here it is and then that's before we change programs to you or else.

247
00:23:02.350 --> 00:23:02.920
And then

248
00:23:07.330 --> 00:23:12.600
we'll create a u r l called u r l.

249
00:23:12.700 --> 00:23:14.800
It's going to be a new U R L from

250
00:23:18.120 --> 00:23:19.770
u r ALS 0

251
00:23:22.720 --> 00:23:27.400
and we'll let it surround that with try and catch

252
00:23:35.310 --> 00:23:44.950
and then we'll create a new HGP u r l connection which we'll call connection which will need to cast

253
00:23:45.150 --> 00:23:47.880
to keep a connection but we'll get it from you.

254
00:23:47.890 --> 00:23:50.870
We're all taught open connection.

255
00:23:51.450 --> 00:23:55.920
And then once again we'll add the IO exception.

256
00:23:55.930 --> 00:24:02.060
Catch for you are an open connection then will connect

257
00:24:05.740 --> 00:24:17.400
then we'll create our input stream to call input stream which we get from connection to get input stream.

258
00:24:18.200 --> 00:24:23.010
Then we'll create our bitmap my bitmap

259
00:24:25.830 --> 00:24:35.810
which we get from bitmap factory Dart's the code stream and the stream of course is input stream

260
00:24:39.800 --> 00:24:43.430
finally returned my bitmap

261
00:24:47.550 --> 00:24:52.030
and we've already got the return now there just in case something goes wrong.

262
00:24:54.490 --> 00:25:02.090
OK so now we've got to Klaas's that we need.

263
00:25:02.160 --> 00:25:03.590
So let's hear

264
00:25:06.560 --> 00:25:11.280
create a new image download the

265
00:25:16.100 --> 00:25:22.410
oh call it image task just to differentiate it from the task that we created up here.

266
00:25:23.280 --> 00:25:25.470
And that's a new image down later

267
00:25:32.640 --> 00:25:34.770
and we'll also create a bitmap

268
00:25:37.990 --> 00:25:40.960
which will cause celeb image

269
00:25:46.170 --> 00:26:01.370
Ben will let celeb image he will image task don't execute and we want to send a u r l u r l of course

270
00:26:01.670 --> 00:26:12.440
is the silap you are L's dot get and then the one that we want is of course chosen silap

271
00:26:15.410 --> 00:26:17.810
and we want to get the result of that.

272
00:26:17.810 --> 00:26:21.380
So we use it don't get.

273
00:26:21.440 --> 00:26:32.230
And finally we want to update our image say let's again create a variable up here called whatever type

274
00:26:32.320 --> 00:26:33.080
image you

275
00:26:37.140 --> 00:26:38.310
and we've only got the one.

276
00:26:38.340 --> 00:26:39.760
So we'll just call it image.

277
00:26:43.770 --> 00:26:48.580
And then just at the beginning of uncreate Let's find it.

278
00:26:48.950 --> 00:26:49.820
So imagery

279
00:26:52.490 --> 00:26:58.120
is equal to a cast it has an image for you and get it from find view by ID.

280
00:26:58.130 --> 00:27:05.360
ID thought he mid-fi.

281
00:27:05.480 --> 00:27:19.500
And finally then we want to update image view with set image bitmap and that is celeb image.

282
00:27:21.770 --> 00:27:28.910
A lot of work but with any luck that will result in a random image being chosen and then displayed to

283
00:27:28.910 --> 00:27:31.310
the user.

284
00:27:31.310 --> 00:27:40.250
The next step of course is to pick the matching name and then three other random names and display those

285
00:27:40.400 --> 00:27:43.690
in the buttons.

286
00:27:44.140 --> 00:27:45.240
And there we go.

287
00:27:45.440 --> 00:27:49.570
There's a celebrity I must confess to not knowing which celebrity that is.

288
00:27:49.570 --> 00:27:53.470
Feel free to bury me in the comments if necessary.

289
00:27:53.470 --> 00:27:53.890
Right.

290
00:27:53.890 --> 00:27:55.080
But we now have our celebrity.

291
00:27:55.090 --> 00:28:04.060
So let's get his or her name and a bunch of others appearing in those buttons so we can do this in a

292
00:28:04.060 --> 00:28:10.690
similar way that we did it with the brain trainer app which required a

293
00:28:14.710 --> 00:28:17.070
few variables here.

294
00:28:17.110 --> 00:28:20.710
So first we had a location of correct

295
00:28:24.020 --> 00:28:31.670
answer which was an integer between 0 and 3 which showed us which button contains the correct answer

296
00:28:33.770 --> 00:28:39.370
and then we'll have an array of integers as

297
00:28:43.650 --> 00:28:46.960
called answers.

298
00:28:47.050 --> 00:28:50.470
We use an array list last time but we could just as well use an array because we know there's always

299
00:28:50.470 --> 00:28:54.690
going to be four of them.

300
00:28:54.780 --> 00:29:04.340
This is going to be a new integer array with 4 items in it.

301
00:29:05.130 --> 00:29:06.690
OK that should do for now.

302
00:29:11.110 --> 00:29:12.280
So let's then

303
00:29:15.510 --> 00:29:16.660
just here.

304
00:29:19.210 --> 00:29:23.740
Set up how location of correct answer we can use.

305
00:29:23.770 --> 00:29:33.190
How random variable again and create next and this time we want a random variable between 0 and 3.

306
00:29:33.310 --> 00:29:34.910
So we can use nexted for

307
00:29:37.870 --> 00:29:46.780
then we can use a for loop to set up the values within ounces.

308
00:29:46.930 --> 00:29:49.430
So we'll start with Isaac with 0.

309
00:29:49.630 --> 00:29:54.160
Keep going as long as I is less than full.

310
00:29:54.460 --> 00:30:03.340
We'll have to set up as an integer first of course and then increment by each time.

311
00:30:03.340 --> 00:30:15.340
Then if y is equal say the location of the correct answer then we want to update our answers

312
00:30:18.230 --> 00:30:22.200
in that particular answer.

313
00:30:22.400 --> 00:30:24.140
So the answer is

314
00:30:27.050 --> 00:30:32.990
is equal to and I've just thought I think I said this to be a set of integers Yes which they shouldn't

315
00:30:32.990 --> 00:30:34.640
be.

316
00:30:34.940 --> 00:30:37.850
They are going to be strings because they need to contain

317
00:30:40.600 --> 00:30:41.480
the names

318
00:30:46.650 --> 00:30:49.080
so you want to set it to select names

319
00:30:56.550 --> 00:30:58.550
and then the correct answer.

320
00:31:01.560 --> 00:31:07.860
So we get that from celeb names or get chosen silap and then if it's not

321
00:31:13.480 --> 00:31:16.080
then we need to create a random answer.

322
00:31:18.180 --> 00:31:21.120
So let's create a kind of hold of every ball for that

323
00:31:25.150 --> 00:31:38.650
call it incorrect on location and then we'll create that using a random generator.

324
00:31:40.880 --> 00:31:42.340
So next in.

325
00:31:42.530 --> 00:31:48.530
And then just as before we're going to use celeb you URLs to us size

326
00:31:51.300 --> 00:31:55.550
to get the range of our incorrect answer location.

327
00:31:56.080 --> 00:32:11.450
And then we want to set on says I see celeb names to get and then not chosen at this time but incorrect

328
00:32:12.080 --> 00:32:15.410
answer location.

329
00:32:15.410 --> 00:32:21.890
Now if you watch the video with a brain training app you will probably flag up here that there is of

330
00:32:21.890 --> 00:32:28.340
course a possibility that we will randomly choose the correct answer here and we need to stop that from

331
00:32:28.340 --> 00:32:29.380
happening.

332
00:32:29.450 --> 00:32:33.860
So we'll have a quick while loop.

333
00:32:33.900 --> 00:32:44.840
So as long as the incorrect answer location is equal to the correct answer which is chosen celeb and

334
00:32:44.990 --> 00:32:49.860
we'll choose another one to mom.

335
00:32:49.870 --> 00:32:54.660
So again that's just quite a neat way of making sure that we don't get the correct answer twice.

336
00:32:56.660 --> 00:33:02.770
All right so now we've got all of those values.

337
00:33:02.780 --> 00:33:04.700
Let's update our buttons.

338
00:33:08.260 --> 00:33:14.930
Site we're going to need some buttons here.

339
00:33:15.100 --> 00:33:16.920
All have buttons.

340
00:33:28.230 --> 00:33:37.860
The button widget and then one button and button three.

341
00:33:37.930 --> 00:33:39.910
And then we can just update them all here.

342
00:33:41.950 --> 00:33:50.610
So button 0 to set text and that's going to be on says

343
00:33:53.320 --> 00:33:53.640
0

344
00:33:59.020 --> 00:34:11.860
and then Same same for Button one button T and button three says one two and three and of course we

345
00:34:11.860 --> 00:34:13.150
need to find those buttons

346
00:34:16.030 --> 00:34:17.260
so button 0 3

347
00:34:20.640 --> 00:34:27.180
is a button and we'll find it by its ID ID.

348
00:34:27.600 --> 00:34:33.370
Top bottom.

349
00:34:33.600 --> 00:34:35.030
And then I'll just copy that

350
00:34:37.800 --> 00:34:47.220
safe having to type it hits of times button 1 2 and 3.

351
00:34:47.350 --> 00:34:52.250
I don't have an issue with button 1 I call the button 2 3 and 4.

352
00:34:52.650 --> 00:34:59.530
I wasn't very intelligent of me but actually it doesn't matter too much we can leave out like that if

353
00:34:59.530 --> 00:35:02.770
you're a perfectionist with these things and you probably want to make those numbers match up.

354
00:35:02.860 --> 00:35:04.440
But the code will work just as well.

355
00:35:06.730 --> 00:35:09.460
Or write them let's take a look.

356
00:35:09.640 --> 00:35:16.000
We should now find that we have a celeb along with the correct answer in a random location and then

357
00:35:16.000 --> 00:35:17.720
three other answers.

358
00:35:20.940 --> 00:35:26.230
Elsewhere now we've got an interesting result here.

359
00:35:26.630 --> 00:35:32.410
We've got a guy and we've got four names but I'm pretty sure none of which match to that guy.

360
00:35:32.420 --> 00:35:36.650
Now I have to look quite hard back to see where this had gone wrong.

361
00:35:36.650 --> 00:35:39.490
I wonder if you can anticipate what the era was.

362
00:35:39.620 --> 00:35:46.850
It was actually something that I mentioned earlier and that was that this SIRC is going to show some

363
00:35:46.910 --> 00:35:55.280
different results but we don't actually want the solution to that was to make sure that we've got the

364
00:35:55.340 --> 00:35:58.400
image tag included in that.

365
00:35:58.550 --> 00:36:03.630
Otherwise we're going to get some extra unwanted results in the celeb.

366
00:36:03.640 --> 00:36:10.710
You are Elle's what you're going to cause problems and they're also going to stop the Selebi you are

367
00:36:10.700 --> 00:36:16.540
L's and the celeb names from matching up which is what caused that issue there.

368
00:36:17.490 --> 00:36:17.990
Right.

369
00:36:18.020 --> 00:36:18.910
Try that again.

370
00:36:19.290 --> 00:36:20.510
OK here we go.

371
00:36:20.510 --> 00:36:22.430
This looks a bit more promising.

372
00:36:22.480 --> 00:36:29.000
I'm again don't know who this person is but from the image then we've got three guys names by the looks

373
00:36:29.000 --> 00:36:32.870
of it so I'm going to go for by ling and there she is.

374
00:36:33.020 --> 00:36:34.330
Fantastic.

375
00:36:34.750 --> 00:36:35.120
OK.

376
00:36:35.150 --> 00:36:42.830
So either We've been very unlucky there and it's randomly given us correct value or more hopefully everything

377
00:36:42.830 --> 00:36:45.100
is now working correctly.

378
00:36:45.380 --> 00:36:50.270
So let's move on to the button press

379
00:36:52.890 --> 00:36:55.200
which was around here somewhere

380
00:36:58.440 --> 00:37:01.910
actually maybe we didn't manage to do that yet.

381
00:37:02.340 --> 00:37:08.610
So let's just remind ourselves unclick was the celeb chosen.

382
00:37:08.610 --> 00:37:24.930
So let's add that method A top so public Foyt celeb chosen and this is going to be called by a few and

383
00:37:25.380 --> 00:37:32.160
this time this specific view does matter or specifically that tag matters to know if the user has got

384
00:37:32.160 --> 00:37:33.750
it right or not.

385
00:37:33.750 --> 00:37:40.020
So again we can do this in a similar way to our brain training app and we can check to see if the button

386
00:37:40.020 --> 00:37:49.830
that was tapped and the tag of that button converted to a string equals

387
00:37:52.960 --> 00:37:56.910
a integer converted to a string.

388
00:37:58.130 --> 00:38:04.590
Location of correct answer.

389
00:38:04.630 --> 00:38:20.440
So remember the tags that we chose for our buttons were 0 1 2 and 3 which of course match up with the

390
00:38:20.550 --> 00:38:26.330
follies of ounces and also the location of the correct answer.

391
00:38:26.330 --> 00:38:29.160
So that's going to be 0 1 2 or 3.

392
00:38:29.240 --> 00:38:33.020
So if this is it that means they got it right.

393
00:38:33.020 --> 00:38:42.350
So I'm going to share a quick toast.

394
00:38:42.410 --> 00:38:50.130
So make text and then we use gets application context for the context.

395
00:38:55.270 --> 00:39:10.470
And I'll just put correct the actual content and then toast to length long and then show.

396
00:39:10.780 --> 00:39:12.440
And if it's not.

397
00:39:13.390 --> 00:39:15.420
And I think we'll tell them who it was.

398
00:39:17.590 --> 00:39:25.360
Say very similar but wrong it was.

399
00:39:25.400 --> 00:39:28.320
And then we give the correct answer.

400
00:39:31.400 --> 00:39:35.710
Which will be celeb names

401
00:39:38.740 --> 00:39:50.050
chosen groups it's an array list and an top get chosen celeb.

402
00:39:50.350 --> 00:39:52.430
So I'm just going to check that that works.

403
00:39:52.930 --> 00:39:56.750
And once that works that's the penultimate thing to do.

404
00:39:56.770 --> 00:40:04.770
And all we've got left is to make it so that a new question pops up as soon as the previous question

405
00:40:04.860 --> 00:40:05.560
ends.

406
00:40:06.500 --> 00:40:13.050
So as we saw at the beginning I'm not going to create a kind of running total or anything like that.

407
00:40:13.130 --> 00:40:14.540
We're just going to run through it.

408
00:40:14.540 --> 00:40:19.930
But you could do that very easily using what we did in the brain training app if you want to.

409
00:40:20.030 --> 00:40:20.630
Here we go.

410
00:40:20.660 --> 00:40:24.110
I think I might actually know that one is how it's done.

411
00:40:24.360 --> 00:40:30.440
Corrects fantastic and when that happens I can actually check the other ones as well because we're not

412
00:40:30.440 --> 00:40:34.490
going on the correct ones are wrong it was how it's done.

413
00:40:34.690 --> 00:40:36.300
So everything seems to be fine.

414
00:40:36.500 --> 00:40:45.560
So all we need to do is to make it so that instead of just creating a new question the first time round

415
00:40:45.620 --> 00:40:48.140
it creates one every time.

416
00:40:49.790 --> 00:40:58.950
So we need to do is take out code out of uncreate and put it into a separate method and then call it

417
00:40:59.250 --> 00:41:00.930
twice.

418
00:41:01.260 --> 00:41:05.800
So we don't need to obviously download all the content again because we've already got bats.

419
00:41:06.030 --> 00:41:12.990
Remember though that that was part of I try and catch so we need to leave that

420
00:41:17.890 --> 00:41:18.890
previous code.

421
00:41:19.180 --> 00:41:30.240
And then here creates public FOID create new question and we don't need to parse anything there.

422
00:41:32.020 --> 00:41:41.410
So we can put out Kate in there it should be fine but we will need a try and catch

423
00:41:47.240 --> 00:41:50.500
and I'm actually going to make that just a general exception.

424
00:41:55.750 --> 00:42:00.970
Just to keep things simple and I'm going to put everything else in the tri

425
00:42:03.540 --> 00:42:04.700
case as well.

426
00:42:06.750 --> 00:42:11.640
Just in case we get any further problems OK.

427
00:42:11.890 --> 00:42:24.220
And then we need to do is create a new question and create and when the user has answered a question

428
00:42:24.670 --> 00:42:29.220
as well whether they got it right or wrong they still get a new question.

429
00:42:31.290 --> 00:42:31.810
OK.

430
00:42:32.010 --> 00:42:39.370
With any luck the app should now be pretty much complete.

431
00:42:39.390 --> 00:42:40.250
So here we go.

432
00:42:40.280 --> 00:42:43.020
I got a feeling that might be moiling class.

433
00:42:43.020 --> 00:42:44.610
Nope it wasn't.

434
00:42:45.060 --> 00:42:48.290
OK this chap then got to be Ryan Reynolds.

435
00:42:48.410 --> 00:42:51.170
God it's fantastic.

436
00:42:51.180 --> 00:42:53.240
Lara Stone Nope.

437
00:42:53.430 --> 00:42:59.000
Suki Waterhouse no that's not Brad Pitt as cofre Lisa Snowden.

438
00:42:59.020 --> 00:43:00.730
It wasn't OK.

439
00:43:00.960 --> 00:43:04.390
But either way you know that I'm very bad with celebrities.

440
00:43:04.440 --> 00:43:10.530
But we now have a completely working guest the celebrity app which you could actually extend to almost

441
00:43:10.560 --> 00:43:17.130
any kind of guessing game where you get the content and then give the user a random selection of incorrect

442
00:43:17.130 --> 00:43:17.670
answers.

443
00:43:17.790 --> 00:43:20.550
Along with of course the correct answer.

444
00:43:20.670 --> 00:43:22.380
So I hope you enjoyed that one.

445
00:43:22.380 --> 00:43:27.510
I'm now going to move on as promised and show you how to work with Jason a.p eyes so that you're not

446
00:43:27.570 --> 00:43:33.030
relying on the Web site creators Web site not changing which.

447
00:43:33.040 --> 00:43:36.440
So probably not a great thing to rely on for any production app.

448
00:43:36.570 --> 00:43:37.870
So you are in the next video.
