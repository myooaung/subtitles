1
00:00:00,560 --> 00:00:06,650
OK so we're going to move straight on from our Twitter log in screen to use a list where we can follow

2
00:00:06,800 --> 00:00:08,590
and unfollow users.

3
00:00:08,870 --> 00:00:10,990
So for that we're going to need a new activity

4
00:00:14,010 --> 00:00:21,220
so file new activity from the gallery and I'll choose the empty activity.

5
00:00:21,490 --> 00:00:24,230
And this is going to be a fairly simple activity.

6
00:00:29,090 --> 00:00:31,570
With just a simple list few

7
00:00:41,210 --> 00:00:45,340
that we get taking up the whole screen.

8
00:00:45,430 --> 00:00:47,920
All right now let's populate our list for you.

9
00:00:52,340 --> 00:01:01,720
So I'll start by creating an array list of strings for our users.

10
00:01:06,240 --> 00:01:09,320
And temporarily I'll just add a couple of uses in there.

11
00:01:13,010 --> 00:01:13,960
So we'll have Rob

12
00:01:17,630 --> 00:01:25,920
Caston and then we'll set up our list free.

13
00:01:26,110 --> 00:01:28,100
We'll just call it LSV.

14
00:01:29,560 --> 00:01:39,410
And this is going to be a list view from find by id and Ardo ID dot list V is our ID.

15
00:01:40,090 --> 00:01:49,820
And then to allow the checkboxes we use List View and then set choice mode.

16
00:01:50,490 --> 00:01:56,680
So this allows users to choose items on the list and we want them to be able to choose as many as they

17
00:01:56,680 --> 00:01:58,020
like.

18
00:01:58,090 --> 00:02:01,120
So we're going to use choice mode multiple.

19
00:02:01,370 --> 00:02:08,110
And you can see there's a number of other modes there that we could use but we want them to have the

20
00:02:08,110 --> 00:02:11,160
ability to follow as many people as they like.

21
00:02:11,750 --> 00:02:14,580
OK then we're going to take our apps up

22
00:02:17,860 --> 00:02:23,520
and we'll call it a write up and then we'll set it up here.

23
00:02:26,010 --> 00:02:27,760
New array adapter

24
00:02:30,480 --> 00:02:42,560
using this as the context and this time we're going to use Android dot dot layout but instead of a simple

25
00:02:42,560 --> 00:02:52,410
list item one we're going to use a simple list item checked and that will give us a tick at the end

26
00:02:52,410 --> 00:03:03,190
of each row which the user can select or de-select and as usual will assign the users a list to the

27
00:03:03,220 --> 00:03:04,400
array adapter.

28
00:03:05,200 --> 00:03:11,430
And then we'll take our list view and set the adapter to it.

29
00:03:13,020 --> 00:03:13,530
OK.

30
00:03:13,790 --> 00:03:14,600
We're almost ready to go.

31
00:03:14,630 --> 00:03:21,350
But a couple of things before we run this up first first we're going to add an item click listener which

32
00:03:21,350 --> 00:03:28,640
will allow us to do something when each individual row is selected or selected.

33
00:03:28,730 --> 00:03:35,290
So we do that firstly in the normal way with a list view and an item click listener.

34
00:03:36,930 --> 00:03:40,630
With a new adapter viewed on item click it's not.

35
00:03:41,100 --> 00:03:46,020
And then we get the row that was tabbed using a checked

36
00:03:48,910 --> 00:03:52,350
text if you will call it text checks.

37
00:03:52,360 --> 00:04:00,370
And this is going to be a checked text view and we're going to get it from the view variable up here

38
00:04:00,880 --> 00:04:10,600
which is the essentially the table row that was tapped or the list view item and then we can use checked

39
00:04:10,840 --> 00:04:11,230
text.

40
00:04:11,230 --> 00:04:16,560
The dot is checked to see whether or not it's checked.

41
00:04:17,140 --> 00:04:17,980
And then we'll just log

42
00:04:21,080 --> 00:04:22,310
row is checked

43
00:04:26,960 --> 00:04:28,930
if it is or if it's not

44
00:04:34,830 --> 00:04:36,290
is not checked.

45
00:04:40,460 --> 00:04:42,160
There you go.

46
00:04:43,410 --> 00:04:48,750
And then the other thing we need to do before we run the app is actually set up the redirect when the

47
00:04:48,750 --> 00:04:49,740
user is located.

48
00:04:49,740 --> 00:04:53,160
Otherwise we'd never see the new activity.

49
00:04:53,160 --> 00:04:55,310
So I'll set this up as a method

50
00:04:58,280 --> 00:04:59,750
redirect user.

51
00:05:00,270 --> 00:05:04,870
And I'm actually going to check whether the user is logged in in the direct method here.

52
00:05:05,640 --> 00:05:15,410
So if past user talk get current user it is not null then what creates our intent.

53
00:05:19,390 --> 00:05:28,270
Which will be a new intent using the application context and we're going to redirect to main to activity

54
00:05:29,380 --> 00:05:29,890
class

55
00:05:33,120 --> 00:05:39,880
and then we just stopped that activity that we have.

56
00:05:40,390 --> 00:05:45,010
And then we can call that in a number of places so fast when the user is logged in

57
00:05:49,010 --> 00:05:52,460
second when the user is signed up.

58
00:05:52,460 --> 00:05:59,060
And third we can just call it on the create method which will then check if the user is logged in and

59
00:05:59,060 --> 00:06:01,420
if they are we direct them as well.

60
00:06:03,340 --> 00:06:13,570
And one of the small thing I'm just going to change the title to use the list.

61
00:06:14,080 --> 00:06:14,820
All right.

62
00:06:15,400 --> 00:06:16,530
So let's give that a try.

63
00:06:16,690 --> 00:06:22,060
As we locked ourselves in in the previous video we should already be logged in and it should redirect

64
00:06:22,210 --> 00:06:28,570
immediately to the user list and we should see Robin Caston with a tick and we can either select or

65
00:06:28,570 --> 00:06:31,700
de-select to them by tapping on a truck.

66
00:06:32,200 --> 00:06:33,360
Let's take a look.

67
00:06:33,700 --> 00:06:34,360
And here we go.

68
00:06:34,360 --> 00:06:37,530
You can see we've got the check box is currently unchecked.

69
00:06:37,540 --> 00:06:42,910
If we tap them then it's selected and we get our row is checked method as well.

70
00:06:45,470 --> 00:06:46,030
Super.

71
00:06:46,170 --> 00:06:50,630
That's a nice easy way to select and de-select are rows of tables.

72
00:06:50,660 --> 00:06:55,990
Now all that remains for us is to synchronize this with pass so we get obviously the correct path she

73
00:06:55,990 --> 00:06:56,680
uses.

74
00:06:56,690 --> 00:07:03,920
And also that the selecting and deselecting is synchronized on paths as well.

75
00:07:05,590 --> 00:07:06,210
All right.

76
00:07:07,310 --> 00:07:17,930
So let's start off by getting our uses and to do that I'm going to jump sci fi folks for the posh dashboard

77
00:07:21,620 --> 00:07:25,660
and just add in a couple of uses.

78
00:07:30,890 --> 00:07:36,320
So we'll have Keston and password

79
00:07:40,320 --> 00:07:41,950
and let's have a couple of more

80
00:07:47,370 --> 00:07:54,510
Tommy with a password as well and we don't want anyone to feel left out.

81
00:07:54,510 --> 00:07:55,080
We'll have

82
00:07:58,920 --> 00:07:59,280
Raffi

83
00:08:04,310 --> 00:08:05,160
There we go.

84
00:08:05,630 --> 00:08:12,670
So now we need to do a user search to get all our users will we'll do that here.

85
00:08:16,320 --> 00:08:27,770
So just get rid of the users that we had and then down here it will set up our pass query.

86
00:08:28,360 --> 00:08:32,940
This is going to be on pass uses this time

87
00:08:37,340 --> 00:08:44,000
and it's passes the dot gate query and the only thing we want to specify is we don't want to show the

88
00:08:44,000 --> 00:08:45,330
current user in this list.

89
00:08:45,340 --> 00:08:48,100
So they're will to follow themselves.

90
00:08:48,950 --> 00:08:49,430
So

91
00:08:51,950 --> 00:08:55,220
we're not equal to you.

92
00:08:55,850 --> 00:08:57,260
And we will use a name

93
00:09:00,160 --> 00:09:01,120
just make sure.

94
00:09:01,190 --> 00:09:01,830
Yep there it is.

95
00:09:01,830 --> 00:09:05,850
These are and we want that not equal to a

96
00:09:08,550 --> 00:09:22,280
Pazienza don't get caught and use a dot get use and I'm and then we're going to run our queery.

97
00:09:22,440 --> 00:09:23,820
So I find him background

98
00:09:26,400 --> 00:09:28,230
with a new find Colback

99
00:09:31,680 --> 00:09:40,940
and of course pull out check to see if he is no and then we'll check to see if we've got some objects.

100
00:09:47,260 --> 00:09:47,730
There you go.

101
00:09:47,740 --> 00:09:51,320
I'm not going to add in any error messages there but you're welcome to if you want to.

102
00:09:51,790 --> 00:09:58,900
And then all we need to do here is loop through the objects list which is a list of past uses

103
00:10:07,620 --> 00:10:12,160
and then we'll add them to the user's array list.

104
00:10:17,600 --> 00:10:30,590
We want to add user dot get name that we gave one more quick thing I'll just Klea uses encases got anything

105
00:10:30,590 --> 00:10:31,360
saved in it.

106
00:10:33,900 --> 00:10:38,890
And then finally when that's done we just update the array adapter.

107
00:10:41,670 --> 00:10:42,910
By notify.

108
00:10:42,920 --> 00:10:46,200
Data set changed.

109
00:10:46,450 --> 00:10:48,320
OK so let's just have a quick look.

110
00:10:48,330 --> 00:10:52,350
We should now be able to see all our users apart from the current one.

111
00:10:52,470 --> 00:10:53,430
So we should see

112
00:10:56,940 --> 00:10:59,100
Ralphy told me and Keston

113
00:11:03,020 --> 00:11:05,990
that they are super.

114
00:11:06,040 --> 00:11:11,370
Now of course I can select and de-select them here but that's not saved on pass in any way.

115
00:11:11,860 --> 00:11:13,400
So let's change that.

116
00:11:13,450 --> 00:11:18,120
Now we're going to need a system to keep track of who is following who.

117
00:11:18,130 --> 00:11:24,400
So I'm just going to jump over to our past dashboard and have a quick think about how we're going to

118
00:11:24,400 --> 00:11:25,980
save this data.

119
00:11:26,440 --> 00:11:32,440
So we want to be able to easily keep track of who our current user is following and then be able to

120
00:11:32,440 --> 00:11:37,480
get all of that information in one go when we bring together the tweet so the users that our user is

121
00:11:37,480 --> 00:11:38,920
following.

122
00:11:38,950 --> 00:11:51,710
So I think the easiest way to do that is going to be to create and is following column which will be

123
00:11:51,800 --> 00:11:55,780
an array or a list of items

124
00:12:00,390 --> 00:12:01,210
that we have.

125
00:12:01,580 --> 00:12:11,740
So then when the user checks a box what we need today is update the current user

126
00:12:14,430 --> 00:12:22,020
and we're going to get a list or an array and the list that we're going to get is called is following

127
00:12:23,720 --> 00:12:30,470
and we're going to add to that the user name of the user that they followed.

128
00:12:30,740 --> 00:12:37,570
So that's uses don't get them.

129
00:12:37,590 --> 00:12:41,130
We want to get the one that was tapped.

130
00:12:41,130 --> 00:12:42,810
So that's I

131
00:12:45,770 --> 00:12:46,490
there we go.

132
00:12:46,780 --> 00:12:50,570
And then we'll just save it in the background

133
00:12:57,590 --> 00:12:59,890
we don't really need a callback for that.

134
00:13:00,710 --> 00:13:11,760
And then very similarly when they uncheck the and we'll remove that user so users don't get

135
00:13:15,520 --> 00:13:16,330
there we go.

136
00:13:16,750 --> 00:13:22,330
So let's have a quick look at that in action and make sure that that works.

137
00:13:23,600 --> 00:13:24,300
And here we go.

138
00:13:24,320 --> 00:13:30,470
So let's tap on Kesten ha we get a nasty crash.

139
00:13:30,470 --> 00:13:33,970
Now some of you may have anticipated why we got that crash.

140
00:13:34,040 --> 00:13:40,880
Let's have a quick look find what the messages right.

141
00:13:40,880 --> 00:13:50,000
We're trying to add to a null object reference i.e. we're trying to add to the following list but we

142
00:13:50,000 --> 00:13:52,390
haven't created that list in the app yet.

143
00:13:52,670 --> 00:14:01,280
So to get round that's what I'm going to do is check to see here whether or not the user has the following

144
00:14:01,550 --> 00:14:06,780
list attached to their current user object.

145
00:14:06,960 --> 00:14:15,620
We can do that using if past user get current user get and then is following

146
00:14:19,540 --> 00:14:22,300
and we can test to see if that's no.

147
00:14:22,810 --> 00:14:25,980
And if it is then we'll create a new list for them.

148
00:14:28,600 --> 00:14:34,220
So we'll have a list of strings and I'll just call it empty list.

149
00:14:34,690 --> 00:14:35,740
It's going to be a new

150
00:14:38,750 --> 00:14:40,000
array list.

151
00:14:42,510 --> 00:14:44,130
And the usual way.

152
00:14:44,980 --> 00:15:01,020
And then you take I-PASS user get current user and we'll put the following array as empty list.

153
00:15:01,810 --> 00:15:10,450
And now we should be able to add to the following array when the user taps on one of the rows because

154
00:15:10,450 --> 00:15:18,400
it is there we could say that to pass but we don't really need to because if by any chance these that

155
00:15:18,400 --> 00:15:23,920
doesn't follow anyone here and then comes back to this page it will just add the following right back

156
00:15:23,920 --> 00:15:26,290
into the current user anyway.

157
00:15:26,710 --> 00:15:28,780
So let's try that again.

158
00:15:28,780 --> 00:15:29,490
Here we go.

159
00:15:29,560 --> 00:15:32,140
So I will tap on Kurstin and it hasn't crashed.

160
00:15:32,260 --> 00:15:34,920
That's a good sign.

161
00:15:34,960 --> 00:15:35,770
Let's do a quick

162
00:15:38,810 --> 00:15:42,640
refresh of our use a class.

163
00:15:42,910 --> 00:15:48,880
And you can see that Rob is now following Keston.

164
00:15:49,030 --> 00:15:50,010
So that looks promising.

165
00:15:50,020 --> 00:15:53,310
Let's just check a couple more if I choose.

166
00:15:53,310 --> 00:16:00,500
Tell me and Ralphy and then de-select Kassen I should just be following Tommy and Ralphy and we get

167
00:16:01,050 --> 00:16:05,960
Tommy and Ralphy on our being followed great.

168
00:16:06,270 --> 00:16:07,080
So we're almost there.

169
00:16:07,090 --> 00:16:15,660
And the final thing that we need to add in for this video to complete our list is that when the user

170
00:16:15,750 --> 00:16:21,650
opens up the app it shows the appropriate people are ready to act.

171
00:16:21,660 --> 00:16:27,150
So we'll do that down where the table is created.

172
00:16:28,840 --> 00:16:29,740
So that's here.

173
00:16:30,410 --> 00:16:38,230
And we can do this by checking for each of the users in the users list whether or not they're in our

174
00:16:38,260 --> 00:16:41,520
is following a list.

175
00:16:41,650 --> 00:16:47,400
So we'll loop through the array list the uses array list that is.

176
00:16:47,400 --> 00:16:55,760
And this is going to have a bunch of strings in it which are all user names and we'll call it users.

177
00:16:56,560 --> 00:17:01,250
And then for each of them we're going to check that our user is following them.

178
00:17:01,570 --> 00:17:08,150
So we're going to look at pass use don't get current user.

179
00:17:08,800 --> 00:17:11,240
And then we're going to get the following list.

180
00:17:14,110 --> 00:17:16,660
And we want to look to see if that contains

181
00:17:19,890 --> 00:17:25,660
the if that was a user name rather than user names.

182
00:17:25,820 --> 00:17:32,930
We want to see if that contains the user name and if it does then we'll check the box.

183
00:17:32,930 --> 00:17:42,950
So we'll do that using List View or set item checked and the item that we want to check is the location

184
00:17:43,010 --> 00:17:51,890
of the user name in the user's array list and we can get that using uses dot index of.

185
00:17:52,430 --> 00:17:59,890
And then use it name and then we add in either true or false depending on whether we want it checked

186
00:17:59,890 --> 00:18:00,650
or not.

187
00:18:01,330 --> 00:18:08,010
And if it does contain that use it we want it checked say let's have a quick look.

188
00:18:08,100 --> 00:18:09,960
We should now see that when we restart

189
00:18:12,590 --> 00:18:17,090
the app it will restart with Tommy and Ralphy already selected.

190
00:18:17,450 --> 00:18:18,570
And there we go.

191
00:18:19,130 --> 00:18:25,280
So we now have a user list that behaves exactly as we'd want it allows the user to check or uncheck

192
00:18:25,460 --> 00:18:27,600
individual users to follow them or not.

193
00:18:27,710 --> 00:18:30,490
And that is saved on our server.

194
00:18:30,770 --> 00:18:34,950
And when the user reloads the app it reloads the correct information.

195
00:18:35,450 --> 00:18:36,080
OK.

196
00:18:36,470 --> 00:18:37,630
So we're doing pretty well.

197
00:18:37,760 --> 00:18:43,600
Our next step is to allow users to actually post tweets and we'll do that in the next video.
