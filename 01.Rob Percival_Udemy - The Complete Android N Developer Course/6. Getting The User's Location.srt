1
00:00:00,320 --> 00:00:05,820
Now that we know how to display and customize maps for our users we're going to find out how to get

2
00:00:05,820 --> 00:00:11,340
the users location and then eventually to center that map right there on it.

3
00:00:11,340 --> 00:00:16,770
This is the first the functionality that we're going to need to ask the user permission for as well.

4
00:00:16,770 --> 00:00:23,340
We'll see how to request user permissions in order to get the location itself.

5
00:00:23,400 --> 00:00:29,780
All right so I'm going to start a new project for our location demo

6
00:00:32,460 --> 00:00:39,300
next we'll stick with marshmallow and I'm going to go for an empty activity this time just to separate

7
00:00:39,300 --> 00:00:45,230
the location side of things from the map side to hopefully keep things a little simpler.

8
00:00:46,760 --> 00:00:47,350
OK.

9
00:00:47,490 --> 00:00:48,280
Here we go.

10
00:00:48,600 --> 00:00:56,640
So we'll start by requesting the user permissions and we're going to do that in the manifest file that

11
00:00:56,640 --> 00:00:57,980
we saw a long time ago.

12
00:00:59,760 --> 00:01:07,820
Here it is Android manifest that SML and if you remember this contains various bits of information about

13
00:01:07,910 --> 00:01:17,550
our app and we want to add a permission which I'll put at the bottom of the manifest and you can see

14
00:01:17,790 --> 00:01:20,190
if we start typing uses.

15
00:01:20,190 --> 00:01:25,710
And we've got users permission and then it will predict Android name and I'm going to go for the fine

16
00:01:25,770 --> 00:01:26,900
location.

17
00:01:27,060 --> 00:01:31,920
If you don't need a particularly precise location you can go for the course location which will give

18
00:01:31,920 --> 00:01:39,630
you the location according to the Wi-Fi or network signal from the phone which is much more battery

19
00:01:39,630 --> 00:01:40,380
efficient.

20
00:01:40,380 --> 00:01:47,830
But if you're doing things with maps you're probably going to want the fine location and then more close

21
00:01:47,830 --> 00:01:52,610
that to and a permission request.

22
00:01:52,750 --> 00:01:54,790
So make sure you put your permission request in.

23
00:01:54,820 --> 00:02:00,410
Otherwise none of your GPS GPS related code will work.

24
00:02:01,330 --> 00:02:08,220
All right so now we're going to write the code to get the user's location and we'll do that in the uncreate

25
00:02:08,260 --> 00:02:13,480
method so it will just run as soon as the app runs and the process is reasonably straightforward is

26
00:02:13,510 --> 00:02:19,480
actually very similar to how it's done on iOS If you've done any iPhone or iPad app development before.

27
00:02:19,690 --> 00:02:29,800
We start by creating a location manager which we normally call location manager with a little and we

28
00:02:29,800 --> 00:02:43,610
get this from this to get the current main activity class and then from that class we get a system service

29
00:02:44,780 --> 00:02:53,880
and then the system service that we need is context dot location service.

30
00:02:54,560 --> 00:02:59,720
So that will allow us to access the location service on the phone itself.

31
00:03:00,320 --> 00:03:04,400
We do need to convert this to a location manager.

32
00:03:04,400 --> 00:03:13,510
So we do that in the way that we're fairly used to with location manager in parentheses.

33
00:03:13,980 --> 00:03:23,430
We create a location listener which will listen for changes in location we'll call it location listener

34
00:03:23,430 --> 00:03:24,330
with a little.

35
00:03:24,780 --> 00:03:35,280
And this is going to be a new location listener and you can see where given the different methods that

36
00:03:35,310 --> 00:03:43,530
a location listener needs which are on location changed when the phone moves on status changed which

37
00:03:43,530 --> 00:03:47,760
is called when the location service is either enabled or disabled.

38
00:03:48,090 --> 00:03:53,730
And then we've got some specific methods for when the location services enabled and when it's disabled

39
00:03:53,790 --> 00:03:54,860
by the user.

40
00:03:54,870 --> 00:04:00,710
So obviously the one we're really interested in here is they on location changed method.

41
00:04:01,470 --> 00:04:07,240
And here you can see we've given a location variable.

42
00:04:07,380 --> 00:04:09,270
So for now I'm just going to log

43
00:04:12,910 --> 00:04:14,220
under the tag location

44
00:04:17,410 --> 00:04:23,270
the location has a string.

45
00:04:23,310 --> 00:04:28,600
So now we have a code for displaying the user's location in the logs.

46
00:04:28,680 --> 00:04:34,860
But unfortunately we're not quite done yet because since Android marshmallow we need to explicitly request

47
00:04:34,860 --> 00:04:37,140
the user's permission because their location.

48
00:04:37,380 --> 00:04:39,230
So let's do that.

49
00:04:39,300 --> 00:04:42,900
We start by checking to see if we already have permission.

50
00:04:43,620 --> 00:04:53,200
And we do this using a class called context compact sure for compatibility.

51
00:04:53,210 --> 00:04:59,390
So this will make our app backward compatible to the marshmallow versions of Android and we want to

52
00:04:59,390 --> 00:04:59,930
check

53
00:05:02,700 --> 00:05:05,970
self permission

54
00:05:10,410 --> 00:05:17,520
and you can see we need two variables in this method that is the current context and the permission

55
00:05:17,580 --> 00:05:19,590
that we want to check for.

56
00:05:20,070 --> 00:05:30,120
So the context is just this i.e. our main activity and the permission we want to check for is manifest

57
00:05:30,940 --> 00:05:37,970
got permission taught access fine location.

58
00:05:38,130 --> 00:05:43,130
So we're checking to see if we have that permission or not.

59
00:05:43,230 --> 00:05:47,820
So we're going to check to see if this is not equal to

60
00:05:51,980 --> 00:05:52,820
package manager

61
00:05:55,450 --> 00:05:59,820
Dot's permission granted.

62
00:05:59,910 --> 00:06:07,040
So this is if we don't have permission if we don't have permission we'll have to ask for it.

63
00:06:10,960 --> 00:06:13,130
And we do that using activity

64
00:06:16,370 --> 00:06:25,920
combat for activity compatability and this time where requesting permissions and you can see we've got

65
00:06:25,920 --> 00:06:34,510
an activity that we're requesting permissions for that is this and then we need an array of strings

66
00:06:35,290 --> 00:06:38,180
to show what we want to request permission for.

67
00:06:38,650 --> 00:06:46,430
So we're going to create a new string array like that and it's going to have one member in curly brackets

68
00:06:47,220 --> 00:06:55,640
and that is manifest got permission to access fine location.

69
00:06:55,820 --> 00:07:01,870
And then finally we need to give an interview and this can be any number you want.

70
00:07:01,880 --> 00:07:05,260
It's essentially a number that we can check at the other end.

71
00:07:05,310 --> 00:07:08,530
That was this particular request that was made.

72
00:07:08,620 --> 00:07:12,250
We are only making one request so we don't really care too much about this number.

73
00:07:12,290 --> 00:07:13,880
I'm just going to put number one.

74
00:07:14,210 --> 00:07:21,910
So this will then ask for permission and actually we can see this in action if we run the app now we

75
00:07:21,910 --> 00:07:28,200
should say that it asks us for permission to get the user's location and there we go.

76
00:07:28,540 --> 00:07:31,160
So it's now asking us for permission so we're halfway there.

77
00:07:31,180 --> 00:07:35,540
But I'm not going to press anything yet because we're not doing anything when they say yes or no.

78
00:07:35,860 --> 00:07:39,830
So to do that we have to prepare another method.

79
00:07:39,830 --> 00:07:46,500
And this is on request permissions result.

80
00:07:46,540 --> 00:07:49,720
It is so we can use all the pre-created code there.

81
00:07:49,750 --> 00:07:52,180
It's a method that already exists.

82
00:07:52,180 --> 00:08:00,490
So we have to override it and it will give us the request code that is the number one and then the permissions

83
00:08:00,790 --> 00:08:03,500
and the results.

84
00:08:03,580 --> 00:08:07,400
So if we wanted to we could test for the request code being equal to one.

85
00:08:07,510 --> 00:08:11,240
But we know that we only have one request here so we don't need to do that.

86
00:08:11,680 --> 00:08:12,450
So.

87
00:08:12,550 --> 00:08:22,630
I'm going to do is look to see if Grant results Daut length is greater than zero.

88
00:08:25,620 --> 00:08:40,580
And we'll also be very sure by checking that Grundt results 0 3 is equal to package manager got permission

89
00:08:40,580 --> 00:08:42,740
granted.

90
00:08:42,740 --> 00:08:43,880
So both of those are true.

91
00:08:43,880 --> 00:08:47,840
We have permission hurrah.

92
00:08:48,010 --> 00:08:49,670
So what do we do if we have permission.

93
00:08:49,720 --> 00:08:55,860
Well we can now start listening for the users location to do that we'll need location manager.

94
00:08:55,870 --> 00:09:02,840
So I'm going to redefine location manager here in the class so that I can access it.

95
00:09:05,540 --> 00:09:07,360
In both of these methods.

96
00:09:07,860 --> 00:09:17,710
So to actually do the listening for the location we use location manager to request location updates

97
00:09:19,920 --> 00:09:22,230
and we're using the fine locations.

98
00:09:22,230 --> 00:09:34,020
Are we going to use the CPS provider which is in location manager at CPS provider and then we need to

99
00:09:34,020 --> 00:09:41,000
give a minimum time and a minimum distance that will lead to us getting an update.

100
00:09:41,010 --> 00:09:44,140
And I'm going to put 0 0 which will mean that we get every update.

101
00:09:44,250 --> 00:09:49,200
But if we wanted to be careful of the use of battery and we only wanted to check for either say every

102
00:09:49,200 --> 00:09:57,190
10 seconds or every 10 meters or something like that then we can change these numbers to use the CPS

103
00:09:57,540 --> 00:10:05,010
less frequently and we need to link that up with a location listener which is this location listener

104
00:10:05,010 --> 00:10:06,290
here.

105
00:10:07,260 --> 00:10:10,200
So I'm going to do the same thing and define it.

106
00:10:12,870 --> 00:10:13,690
Outside.

107
00:10:13,740 --> 00:10:17,870
And then I can use it there as well.

108
00:10:18,300 --> 00:10:20,400
And you can see we've got an error here.

109
00:10:20,570 --> 00:10:27,750
That's because we need to explicitly check for permission once again even though we've checked the permission

110
00:10:27,750 --> 00:10:28,850
has been granted.

111
00:10:29,010 --> 00:10:30,750
We are actually for the code to work.

112
00:10:30,780 --> 00:10:32,110
We need to do a check.

113
00:10:32,110 --> 00:10:38,870
Very similar to this to check that we actually have permission.

114
00:10:38,940 --> 00:10:42,920
So if you remember this was a check to see if we didn't have permission.

115
00:10:42,920 --> 00:10:48,190
So now we'll change that to see if we do have permission and if we do

116
00:10:51,600 --> 00:10:55,870
then we'll request the location updates.

117
00:10:57,260 --> 00:10:58,310
So let's try this out.

118
00:10:58,310 --> 00:11:04,430
We should now find that we get the user's location logs open

119
00:11:09,310 --> 00:11:10,130
we go.

120
00:11:10,200 --> 00:11:17,240
So we're going to allow the location to be read by the app.

121
00:11:17,250 --> 00:11:21,090
And now you might be wondering how are we going to actually change the user's location.

122
00:11:21,090 --> 00:11:23,120
I'm not going to run around the room with my laptop.

123
00:11:23,280 --> 00:11:28,560
I'm going to click these three dots here next to the emulator which will bring up the extended controls

124
00:11:28,920 --> 00:11:35,360
and allow us to update the user's imaginary location to whatever we like.

125
00:11:36,240 --> 00:11:47,890
So if I change the latitude to 40 and then click Send You can see down here in the logs we get the user's

126
00:11:47,910 --> 00:11:54,120
location that is 40 minus 130 point zero right.

127
00:11:54,610 --> 00:11:56,950
Which is the location up here.

128
00:11:59,290 --> 00:12:01,240
Fabulous.

129
00:12:01,270 --> 00:12:06,760
So one more change I'd like to make and that is that at the moment if we run the app with permission

130
00:12:06,760 --> 00:12:12,940
already having been granted we won't actually get the location updates because this method is only called

131
00:12:13,240 --> 00:12:17,980
when the user explicitly gives permission to get the location.

132
00:12:18,010 --> 00:12:19,090
So I'm going to add in

133
00:12:22,130 --> 00:12:23,370
this line here.

134
00:12:26,810 --> 00:12:37,600
As an else statement so here this means we have permission so we can do the location manager check.

135
00:12:37,620 --> 00:12:43,010
So let's just run that for the final time and make sure that that works.

136
00:12:43,010 --> 00:12:45,950
So now when we run the app we've already given it permission.

137
00:12:45,950 --> 00:12:51,800
So we shouldn't need to do it again but we should have the location updates up and running

138
00:12:58,470 --> 00:13:00,050
it we go.

139
00:13:00,610 --> 00:13:07,720
So I'll update this just something like 45 and then send the updates to the device.

140
00:13:07,720 --> 00:13:09,060
And then let's have a look.

141
00:13:15,200 --> 00:13:15,970
And there we go.

142
00:13:16,100 --> 00:13:24,740
You can see we've got the new location there so you can essentially use this as a boiler plate for how

143
00:13:24,740 --> 00:13:29,000
to get the user's location in marshmallow and onwards.

144
00:13:29,000 --> 00:13:33,960
There is of course a chance that your app will be running on a device earlier than marshmallow.

145
00:13:34,120 --> 00:13:38,870
And so we should really check for that as well.

146
00:13:38,870 --> 00:13:46,600
So I'm going to add in a quick check to see if device is running

147
00:13:52,680 --> 00:13:56,430
STK less than 23 23 being marshmallow.

148
00:13:56,820 --> 00:13:58,130
So I can check that with.

149
00:13:58,440 --> 00:14:10,210
If build dot version dot SDK it is less than 23.

150
00:14:10,770 --> 00:14:17,940
So if that's the case I can just request the location updates.

151
00:14:17,940 --> 00:14:26,040
I don't need to do any of this messing around with permissions but if it's not the case then I do need

152
00:14:26,040 --> 00:14:28,040
to do my permissions check.

153
00:14:28,320 --> 00:14:30,800
So I'll put an else in there.

154
00:14:34,670 --> 00:14:35,520
Fantastic.

155
00:14:35,900 --> 00:14:40,040
So I hope that's all fairly clear and I hope that's all in your mind as well because I'm going to be

156
00:14:40,040 --> 00:14:46,910
asking you to recreate this in the next video where we're going to be integrating location and maps

157
00:14:47,270 --> 00:14:51,800
by creating a map which is centered on the user's location.

158
00:14:52,050 --> 00:14:52,610
See that.
