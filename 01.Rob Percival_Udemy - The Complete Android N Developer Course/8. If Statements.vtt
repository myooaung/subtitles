WEBVTT
1
00:00:00.570 --> 00:00:03.790
So we're almost in a position to make our higher or lower hap.

2
00:00:03.930 --> 00:00:08.820
But we're going to need a way to test whether or not the number that the user has entered is indeed

3
00:00:08.820 --> 00:00:13.440
higher or lower than the number that the phone is thinking of.

4
00:00:13.470 --> 00:00:16.180
So let's find out how we can do that.

5
00:00:16.230 --> 00:00:24.980
I'm going to create a new term of code here and then we'll just save it as if statement is

6
00:00:29.610 --> 00:00:30.420
there we go.

7
00:00:30.780 --> 00:00:36.090
So as you might imagine an if statement is a way of testing whether it's whether a certain statement

8
00:00:36.090 --> 00:00:44.340
is true and if it is then then doing something as a result if you've done if statements or any kind

9
00:00:44.340 --> 00:00:48.800
of programming really in any other programming language you will be very familiar with this set up.

10
00:00:48.810 --> 00:00:52.490
And it's not that different in Java as it is anywhere else.

11
00:00:52.560 --> 00:00:59.930
So you could start off with something like if and then we use again parentheses to contain our statement.

12
00:01:00.150 --> 00:01:06.410
So if we had something very straightforward Something like to is greater than one.

13
00:01:08.940 --> 00:01:11.600
So that's a statement that is most definitely true.

14
00:01:12.270 --> 00:01:18.060
Then we might print

15
00:01:20.810 --> 00:01:27.050
to is greater than one simple as that.

16
00:01:27.060 --> 00:01:29.280
So we're just testing for a statement to be true.

17
00:01:29.430 --> 00:01:32.670
And if it is then we do something as a result.

18
00:01:32.670 --> 00:01:37.250
So let's just check that we get to is indeed greater than one.

19
00:01:37.620 --> 00:01:47.580
If I change that to a test to see if two was less than 1 then nothing happens because that's not true.

20
00:01:48.120 --> 00:01:52.680
So this is all well and good but not particularly useful if we're just using on statements that are

21
00:01:52.740 --> 00:01:54.760
always true or false.

22
00:01:54.780 --> 00:01:58.820
So normally we would use it in conjunction with some kind of a variable.

23
00:01:59.070 --> 00:02:07.260
So let's say for example we've found out the age of our user and they are 21 and we want to test whether

24
00:02:07.260 --> 00:02:12.740
or not this particular user is older or younger than 18.

25
00:02:12.810 --> 00:02:16.140
So how do you think we do that.

26
00:02:16.140 --> 00:02:17.100
Pretty straightforward.

27
00:02:17.100 --> 00:02:22.920
We just say if age is greater than or equal to 18

28
00:02:26.480 --> 00:02:31.870
and for now we'll just change the print to user is over 18.

29
00:02:33.130 --> 00:02:34.240
There we go.

30
00:02:34.310 --> 00:02:38.270
So that is obviously true for this particular user.

31
00:02:40.100 --> 00:02:46.500
If we change them to be 16 then it ceases to be true.

32
00:02:47.030 --> 00:02:53.150
Now it may well be that we want to do something if the user is not over 18 so maybe show them a message

33
00:02:53.150 --> 00:03:02.000
or something like that and to do that we would use the else command like that.

34
00:03:02.000 --> 00:03:05.210
So essentially we're testing if something is true if it is.

35
00:03:05.390 --> 00:03:07.220
We do that thing.

36
00:03:07.220 --> 00:03:11.690
If it isn't then we run this chunk of code here so

37
00:03:16.250 --> 00:03:18.760
user is under 18 would be the obvious

38
00:03:22.180 --> 00:03:22.750
choice.

39
00:03:26.670 --> 00:03:27.810
Here we go again.

40
00:03:27.830 --> 00:03:29.980
So user is under 18.

41
00:03:30.360 --> 00:03:36.600
So that's the else statement which can be very useful if we want to test for one or two or more different

42
00:03:36.600 --> 00:03:38.160
options.

43
00:03:38.220 --> 00:03:44.640
I'm just going to get rid of that and could you do a test to see if the user was equal to the age of

44
00:03:44.700 --> 00:03:45.000
80

45
00:03:52.730 --> 00:03:53.200
OK.

46
00:03:53.360 --> 00:03:55.220
This was a little bit of a trick question.

47
00:03:55.340 --> 00:04:01.190
If you've done programming before you might well have seen what I was after but what I was trying to

48
00:04:01.880 --> 00:04:05.050
trick you into doing is something like that.

49
00:04:05.060 --> 00:04:11.490
So if age is equal to 18 then print to the user is 18 looks fine right.

50
00:04:11.690 --> 00:04:14.360
Let's just start it and take a look.

51
00:04:14.660 --> 00:04:20.420
We've got all sorts of problems now that doesn't work and that's because what we're actually doing in

52
00:04:20.420 --> 00:04:26.150
this command here is setting the variable age equal to 18.

53
00:04:26.150 --> 00:04:30.800
So we're not testing whether or not it's equal to 18 with setting it equal to 18.

54
00:04:30.830 --> 00:04:36.620
So to separate out the setting of variables equal to something and testing whether or not it's equal

55
00:04:36.620 --> 00:04:45.500
to something we use the double equals sort of age and then double equals 18 then this will work.

56
00:04:45.500 --> 00:04:48.140
So now let's just check it out.

57
00:04:48.140 --> 00:04:49.370
So nothing happens.

58
00:04:49.430 --> 00:04:53.060
That's good because the user isn't 18 or 16.

59
00:04:53.060 --> 00:04:59.800
If we now set them to be 18 and run that again we get user is 18.

60
00:04:59.870 --> 00:05:06.290
So if you haven't seen that before if you are new to programming that's a really common area that if

61
00:05:06.290 --> 00:05:11.900
you just put a single equals there you'll get an error when you try and compile your code if you want

62
00:05:11.900 --> 00:05:16.800
to test whether something is equal to something else you need to use the double the calls.

63
00:05:16.820 --> 00:05:23.990
So just one more thing to show you with if statements is we saw the else command a moment ago but we

64
00:05:23.990 --> 00:05:30.890
can combine that with another if statement so maybe we want to check that either the user is 18 or older

65
00:05:30.890 --> 00:05:33.720
than 18 or younger than 18.

66
00:05:33.830 --> 00:05:40.460
So if we want to check that we might want to check that 18 first and if they're not then we do another

67
00:05:40.460 --> 00:05:48.150
check or else if age is less than or less than 18.

68
00:05:48.650 --> 00:05:58.110
So if that's the case then we might print user is under 18

69
00:06:03.280 --> 00:06:05.710
and then the only other option

70
00:06:09.010 --> 00:06:13.110
is that they use a

71
00:06:16.870 --> 00:06:22.130
is over 18.

72
00:06:24.050 --> 00:06:24.390
There we go.

73
00:06:24.420 --> 00:06:29.560
So you can have a number of different IF statements all linked together in this way to check for different

74
00:06:29.560 --> 00:06:31.390
possibilities.

75
00:06:31.390 --> 00:06:33.880
And that's about all there is to it.

76
00:06:33.880 --> 00:06:39.040
What I want you to do as a quick challenge is to make sure that you've got everything clear it is to

77
00:06:39.040 --> 00:06:44.860
create an array with two integers in it and write an IF statement to test whether the second integer

78
00:06:45.070 --> 00:06:46.920
is greater than the first.

79
00:06:47.170 --> 00:07:01.510
And if it is display something to the logs if it isn't display something as simple as that different.

80
00:07:01.530 --> 00:07:02.240
All right.

81
00:07:02.270 --> 00:07:07.590
That well I'm just going to run three how I would have done it.

82
00:07:07.650 --> 00:07:14.700
So to create a array of integers we use it and then square brackets.

83
00:07:14.700 --> 00:07:16.540
And I'm just going to choose two

84
00:07:19.260 --> 00:07:22.440
integers like that.

85
00:07:22.440 --> 00:07:23.540
There we go.

86
00:07:24.180 --> 00:07:32.220
And so I wanted to check whether the second one was bigger than the first.

87
00:07:32.490 --> 00:07:36.280
I've managed to forget an actual name for my array.

88
00:07:36.480 --> 00:07:38.780
I'll call it numbers.

89
00:07:38.880 --> 00:07:45.140
So the second element in the numbers array is accessed by numbers 1.

90
00:07:45.330 --> 00:07:53.050
Because remember it's 0 and then 1 so that's greater than the first numbers.

91
00:07:53.170 --> 00:07:54.320
Zero.

92
00:07:57.670 --> 00:07:58.150
Then

93
00:08:02.940 --> 00:08:05.110
you get the system out

94
00:08:08.730 --> 00:08:13.160
and the second number is greater

95
00:08:16.610 --> 00:08:18.230
and the only other option

96
00:08:23.060 --> 00:08:23.720
always it

97
00:08:26.520 --> 00:08:31.850
system how to print in the first number

98
00:08:35.340 --> 00:08:37.240
is greater.

99
00:08:37.280 --> 00:08:37.670
There we go.

100
00:08:37.670 --> 00:08:44.740
So your code may have looked quite a bit like that if we go so we've got the second number is greater.

101
00:08:44.760 --> 00:08:45.710
There we go.

102
00:08:46.230 --> 00:08:47.790
So it seems to work fine.

103
00:08:47.820 --> 00:08:58.200
But I wonder if you fell into my little trap and if you end up with two numbers which are the same in

104
00:08:58.200 --> 00:09:05.310
your array it's going to say that the first number is greater because I did strictly greater than their

105
00:09:05.970 --> 00:09:08.510
rather than greater than or equal to.

106
00:09:08.560 --> 00:09:14.100
So really I needed three options because either the second number is greater or the first number of

107
00:09:14.100 --> 00:09:17.810
great is greater or they the same.

108
00:09:17.820 --> 00:09:25.350
So to make this completely correct I should use a second check to check whether numbers

109
00:09:27.950 --> 00:09:36.700
0 8 is greater than numbers 1.

110
00:09:36.860 --> 00:09:44.500
And then there's a final option and there really are only three possible options now.

111
00:09:44.640 --> 00:09:52.830
So I don't need to do a check this last time around system print line.

112
00:09:53.500 --> 00:10:00.260
The numbers are the same.

113
00:10:00.370 --> 00:10:01.880
And let's just check.

114
00:10:01.960 --> 00:10:02.840
There we go.

115
00:10:03.190 --> 00:10:06.970
So there was a bit of a trick on my part that I didn't mention the possibility that they could be the

116
00:10:06.970 --> 00:10:10.930
same but I hope you managed to do at least the first part.

117
00:10:10.960 --> 00:10:16.040
And if you managed to spot there's that option as well then congratulations.

118
00:10:16.180 --> 00:10:16.510
Excellent.

119
00:10:16.510 --> 00:10:23.230
So now we've covered if statements and we're in a position to make our extremely exciting higher or

120
00:10:23.230 --> 00:10:25.420
lower app See you in the next video.
