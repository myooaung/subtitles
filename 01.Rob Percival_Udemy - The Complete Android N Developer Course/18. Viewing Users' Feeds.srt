1
00:00:00,390 --> 00:00:05,910
Now we're the final video in this Instagram section of the complete Android and develop of course and

2
00:00:05,910 --> 00:00:10,990
we'll be focusing on viewing photos posted by other users.

3
00:00:11,040 --> 00:00:13,730
So this is definitely one I'm going to set as a challenge.

4
00:00:13,950 --> 00:00:19,530
We've got our familiar user list and a new title notice up there and see if you can figure out how to

5
00:00:19,530 --> 00:00:20,990
do that.

6
00:00:21,000 --> 00:00:27,870
We also have a new little feature to allow users to log out.

7
00:00:27,900 --> 00:00:31,500
I definitely recommend adding that in.

8
00:00:32,430 --> 00:00:39,460
And then when we load back in again if we click on a user who's posted a photo then we'll see that photo.

9
00:00:39,570 --> 00:00:42,300
And of course all there are others flowing below.

10
00:00:42,480 --> 00:00:48,470
Note I'm using a vertical linear layout here to display all the images and I suggest you do the same.

11
00:00:48,570 --> 00:00:53,700
One thing that you will need to work out is how to add image views to the app.

12
00:00:53,730 --> 00:00:58,650
We haven't set up individual images for potentially many many pictures that people will post here.

13
00:00:58,650 --> 00:01:03,090
So we need to create one each time and that's something you need to figure out how to do.

14
00:01:03,210 --> 00:01:08,160
Of course if you can't figure it out don't worry just follow along with the video and I'll show you

15
00:01:08,160 --> 00:01:09,990
how it's done.

16
00:01:10,320 --> 00:01:14,040
So that will take us to the end of our Instagram app.

17
00:01:14,040 --> 00:01:15,310
So I wish you the best of luck.

18
00:01:15,480 --> 00:01:17,880
Time to pause the video and give it a shot.

19
00:01:18,270 --> 00:01:19,120
Go for it.

20
00:01:27,770 --> 00:01:31,650
All right so that one well I'm going to start with a new activity.

21
00:01:31,710 --> 00:01:33,120
If you are using feet's

22
00:01:36,370 --> 00:01:41,180
I will look at the gallery and go for our usual empty activity.

23
00:01:42,970 --> 00:01:47,560
And I'm going to call this use a feed activity

24
00:01:51,210 --> 00:01:51,910
every game.

25
00:01:55,710 --> 00:02:01,760
And I'll start by using As I mentioned the vertical Linnea out

26
00:02:06,250 --> 00:02:12,320
can be gay and we'll go for a full width and height.

27
00:02:13,030 --> 00:02:17,760
And I'll even go so far as to get rid of the padding.

28
00:02:23,950 --> 00:02:29,500
In the relative layout just get rid of that.

29
00:02:36,370 --> 00:02:37,400
To make it stretch

30
00:02:39,970 --> 00:02:41,930
to the very edge of the screen

31
00:02:47,020 --> 00:02:47,810
OK.

32
00:02:48,450 --> 00:02:52,990
Then let's give it an ID.

33
00:02:57,000 --> 00:03:06,000
Just scroll down to the bottom your properties and then we'll just call it linear lay out and let's

34
00:03:06,000 --> 00:03:15,770
just start by seeing how we can add an image to that linear layout programmatically.

35
00:03:16,740 --> 00:03:25,140
So first off let's create a linear layout to reference that's

36
00:03:32,950 --> 00:03:35,470
And then we're going to create a new image.

37
00:03:40,700 --> 00:03:43,850
Pull at MTV and this is going to be a new image for you.

38
00:03:44,160 --> 00:03:47,260
So we're not finding it by its idea anymore we're creating it.

39
00:03:48,590 --> 00:03:52,410
Within the application context.

40
00:03:55,600 --> 00:03:59,890
And then we take an image view and we set a few basic layout parameters

41
00:04:02,510 --> 00:04:04,110
set layout parameters

42
00:04:09,400 --> 00:04:13,200
and then we want a new view.

43
00:04:13,200 --> 00:04:13,560
Grape

44
00:04:18,490 --> 00:04:20,160
dot Lao programs

45
00:04:23,590 --> 00:04:34,670
and then you can sense looking for width and height to the full width we'll choose.

46
00:04:34,950 --> 00:04:36,600
Match parent.

47
00:04:36,720 --> 00:04:47,190
So it's going to be full width of the screen and then height of choose wrap content.

48
00:04:47,530 --> 00:04:58,180
So that should make it full width of the screen and a proportional height and then we set and then we

49
00:04:58,180 --> 00:05:00,560
set the image drawable.

50
00:05:01,270 --> 00:05:04,850
So later on we'll be setting a bitmap for now just to see how it works.

51
00:05:04,990 --> 00:05:10,490
We'll set the image drawable and we've only got one drawable here so we'll use that Instagram logo PNB

52
00:05:11,400 --> 00:05:17,510
to access that we use get resources don't get drawable.

53
00:05:17,830 --> 00:05:19,290
And then the ID.

54
00:05:19,300 --> 00:05:26,280
So our talk drawable thought Instagram logo.

55
00:05:27,260 --> 00:05:30,210
And then finally we add that to our linear layout

56
00:05:34,190 --> 00:05:40,740
so we can add a view and then add the image we.

57
00:05:40,870 --> 00:05:46,860
All right so that's how we programmatically add an image view and then fill it with an image to our

58
00:05:46,850 --> 00:05:54,470
linear lay out in order to access that we're going to need to be able to click on an item in the user

59
00:05:54,470 --> 00:05:55,600
list.

60
00:05:56,180 --> 00:06:01,340
So one of the uses and then jump to the user feed activity.

61
00:06:01,340 --> 00:06:09,670
So that's just set up that code over in user list activity.

62
00:06:09,720 --> 00:06:16,200
So we're going to do that in on create which is down here.

63
00:06:16,980 --> 00:06:26,910
So let's do it just where we define or use a list we use a list view it set on item click listener

64
00:06:30,780 --> 00:06:36,400
and a new adaptive view on item click listener.

65
00:06:37,290 --> 00:06:42,900
And we want to set up an intent to go to the use of feed activity

66
00:06:46,170 --> 00:06:57,160
and intent which will be new content using the application context and we want to jump to user feed

67
00:06:57,160 --> 00:07:07,390
activity class we don't need to know right now just use the user clicked on but we will definitely need

68
00:07:07,390 --> 00:07:08,470
that later on.

69
00:07:08,470 --> 00:07:21,220
So let's add that in while we're here intent to put extra I'll call it username and then we're going

70
00:07:21,220 --> 00:07:30,400
to access the names array list and we want to get the one that was clicked on and that's this I hear

71
00:07:34,270 --> 00:07:40,460
we get so that will pass on the username and then we just need to start activity

72
00:07:43,970 --> 00:07:48,650
for the intent.

73
00:07:48,660 --> 00:07:49,040
All right.

74
00:07:49,050 --> 00:07:51,420
So let's take a look.

75
00:07:51,910 --> 00:07:59,700
We should now find that when we tap on any username in the user list activity it will jump to the use

76
00:07:59,700 --> 00:08:06,280
of field activity which will then dynamically create an image be populated with the Instagram logo and

77
00:08:06,280 --> 00:08:08,700
display that to the user.

78
00:08:09,220 --> 00:08:10,440
Let's take a look.

79
00:08:10,970 --> 00:08:11,450
OK.

80
00:08:11,470 --> 00:08:12,430
So let's try this out.

81
00:08:12,430 --> 00:08:14,320
We'll tap on Michael there.

82
00:08:14,440 --> 00:08:15,240
And there we go.

83
00:08:15,430 --> 00:08:18,420
We've got our Instagram logo as we wanted.

84
00:08:19,060 --> 00:08:19,770
Terrific.

85
00:08:20,080 --> 00:08:28,670
So now we want to update this code so that instead of doing the Instagram logo it shows the feed either

86
00:08:28,690 --> 00:08:32,080
photos posted by that user.

87
00:08:32,110 --> 00:08:40,340
So let's start by getting the user ID that our user has selected.

88
00:08:41,590 --> 00:08:49,000
So we want an intent which is going to be the intent that we use to get to the user feed and then we'll

89
00:08:49,000 --> 00:08:52,120
need to know the user name that was selected.

90
00:08:52,480 --> 00:09:03,330
So let's create a string to reference that I'll call it active user name and this is going to be intent.

91
00:09:03,490 --> 00:09:11,380
Don't get string extra string we're looking for is using it.

92
00:09:12,970 --> 00:09:18,270
And one small change I'm going to make here is rather than have pass start a project at the top there.

93
00:09:18,310 --> 00:09:24,160
I'm going to have the user name that's been selected said we know who we're looking at and we can do

94
00:09:24,160 --> 00:09:28,240
that very easily using Set title.

95
00:09:28,450 --> 00:09:40,640
So I'm going to use that title and then active use named feet that should set the title to the feed

96
00:09:40,700 --> 00:09:45,080
of the user that's been selected.

97
00:09:45,540 --> 00:09:49,290
Or just run that and make sure that's working before we go any further.

98
00:09:49,700 --> 00:09:50,480
And here we go.

99
00:09:50,480 --> 00:09:55,310
So let's tap on Michael and then we get Miko's feet at the top there.

100
00:09:55,490 --> 00:10:00,900
And of course I can go back and view Tommy's feet as well.

101
00:10:01,220 --> 00:10:08,170
Now we need to set up a past query to get all the images posted by that user.

102
00:10:08,250 --> 00:10:19,520
So it's a past query on pass objects coolit query and it's going to be a new parse query on Parse objects

103
00:10:20,540 --> 00:10:27,420
and the class that we want to query is the image class

104
00:10:31,650 --> 00:10:37,390
and we want to find all the images by the user name that they use to tap on.

105
00:10:37,410 --> 00:10:43,670
So we'll set where equal see.

106
00:10:43,890 --> 00:10:47,690
And we want to set the user name equal to that user.

107
00:10:48,190 --> 00:10:51,040
So remember we've got a field here called username

108
00:10:53,960 --> 00:10:57,900
so I will use user name to be quilty active username

109
00:11:00,680 --> 00:11:04,220
and we also want to put the newest ones at the top.

110
00:11:04,640 --> 00:11:14,120
So let's use Querrey order by descending and then you would have noticed that we've got a created out

111
00:11:15,020 --> 00:11:18,230
there that we can use to order these by date.

112
00:11:18,230 --> 00:11:22,760
We could also use the updated at time stamp but we're not planning to edit these.

113
00:11:22,760 --> 00:11:24,650
These are essentially the same for us.

114
00:11:24,680 --> 00:11:26,660
So we'll stick with created at

115
00:11:33,800 --> 00:11:34,320
OK.

116
00:11:34,510 --> 00:11:36,300
So that's how queery Let's run it.

117
00:11:37,290 --> 00:11:45,060
So Querrey find in background and then we'll have a new find Colback

118
00:11:48,000 --> 00:11:58,210
and then when it's done as usual we'll check for a being no.

119
00:11:58,760 --> 00:12:09,860
And then we check to see if objects our size is greater than zero.

120
00:12:11,150 --> 00:12:12,140
And then Mulek 3

121
00:12:15,230 --> 00:12:20,510
the object variable which will be a list of past objects.

122
00:12:21,170 --> 00:12:24,860
So let's create a past object called object for each of those

123
00:12:31,690 --> 00:12:44,400
and then we need to get the file i.e. the image over here that was created and download that.

124
00:12:44,470 --> 00:12:48,460
So we do that using past File.

125
00:12:48,590 --> 00:12:49,960
We're going to create a file

126
00:12:53,510 --> 00:13:00,220
which will be a pass file and we're going to get that from Object get.

127
00:13:00,500 --> 00:13:04,820
And then the fill we want to get is image

128
00:13:08,780 --> 00:13:12,090
and now the file itself is not actually downloaded yet.

129
00:13:12,110 --> 00:13:14,130
We have to do that separately.

130
00:13:14,450 --> 00:13:19,160
So we use file docs get data in background

131
00:13:21,770 --> 00:13:25,660
with a new data callback

132
00:13:28,900 --> 00:13:33,280
and you can see this returns a byte array called data.

133
00:13:33,840 --> 00:13:39,130
So let's check to see if he is no.

134
00:13:40,000 --> 00:13:44,260
And we'll also check that the byte array is not.

135
00:13:44,270 --> 00:13:47,610
No.

136
00:13:47,890 --> 00:13:51,670
And if that's the case we'll create a bitmap

137
00:13:54,930 --> 00:13:59,430
which I'll call bitmap from the bitmap factory.

138
00:14:01,690 --> 00:14:15,850
How am I going to decode how byte array using data starting at zero and keeping going throughout the

139
00:14:15,850 --> 00:14:18,520
whole length of data.

140
00:14:19,170 --> 00:14:22,050
All right so now we've got our image.

141
00:14:22,210 --> 00:14:26,380
So now we're going to create our image view.

142
00:14:27,190 --> 00:14:36,980
So I'm going to copy this carryed up here to do that and we'll just move our linear layout definition

143
00:14:38,720 --> 00:14:42,260
to the top of our own create method so we can access it here as well.

144
00:14:45,170 --> 00:14:50,510
And needed in order to do that it will need to be a final.

145
00:14:51,320 --> 00:14:57,950
So we need to change here is that instead of setting the image drawable to image we we're going to set

146
00:14:59,450 --> 00:15:05,970
the image bitmap to bitmap.

147
00:15:06,190 --> 00:15:10,640
Simple as that.

148
00:15:10,690 --> 00:15:12,030
So that should do the trick.

149
00:15:12,040 --> 00:15:14,770
You're welcome to put in a few messages here.

150
00:15:14,800 --> 00:15:19,280
So for example if the user doesn't have any voters in their feet it might be nice to pop up a small

151
00:15:19,320 --> 00:15:26,010
message saying this feed is currently empty or to give a user an error message if indeed it is not.

152
00:15:26,020 --> 00:15:28,270
No but that's reasonably straightforward.

153
00:15:28,270 --> 00:15:30,480
I'll leave that for you to do if you want to

154
00:15:34,110 --> 00:15:44,380
find out I'm going to cheat slightly and change the user name of this posted image to Michael so that

155
00:15:44,390 --> 00:15:51,490
I don't have to fuss about with logging in as a new user and then viewing Rob's photos.

156
00:15:51,950 --> 00:16:00,620
So we should be able to now click on Michael and view that lovely image that we stored from the camera

157
00:16:00,620 --> 00:16:01,910
earlier on.

158
00:16:02,150 --> 00:16:06,060
So let's tap on Michael and there we go.

159
00:16:06,440 --> 00:16:07,910
So that image is at the top.

160
00:16:07,940 --> 00:16:13,860
Obviously if there were more images they'd fly on down the screen.

161
00:16:13,870 --> 00:16:14,280
All right.

162
00:16:14,280 --> 00:16:18,280
So we're pretty much there without basic Instagram functionality.

163
00:16:18,280 --> 00:16:23,450
The one thing I'm going to add before we consider this done is a logout button.

164
00:16:23,480 --> 00:16:27,940
So at the moment it's a little bit incomplete because the user can't log out.

165
00:16:27,940 --> 00:16:34,900
So let's add in a look at button to Menu say open up menu

166
00:16:38,900 --> 00:16:53,830
and we'll do it in the text VI so will add an item with a title of logout and an ID of logout.

167
00:16:55,110 --> 00:16:56,010
OK.

168
00:16:56,050 --> 00:17:04,280
And then we've already got the menu inflator methods up here.

169
00:17:04,280 --> 00:17:05,480
So I just need to check

170
00:17:10,250 --> 00:17:23,040
here to see if item don't get item ID is equal to Odda ID dot log out then we want to do two things.

171
00:17:23,040 --> 00:17:32,730
Firstly we want to lock the user out which is very easy to parse user dot log out and then we want to

172
00:17:32,730 --> 00:17:39,660
jump back to our main activity so the user can log in again if they want to.

173
00:17:40,730 --> 00:17:42,090
So we'll do that with an intent

174
00:17:47,170 --> 00:17:58,890
your intent using the application context and we want to jump to main activity doc class

175
00:18:01,660 --> 00:18:06,490
and then we're just going to stop that activity.

176
00:18:07,150 --> 00:18:12,760
And while we're here I did just notice as we were looking at the app that is still says Pass start a

177
00:18:12,760 --> 00:18:14,450
project up there which isn't great.

178
00:18:14,530 --> 00:18:15,490
So let's change

179
00:18:18,050 --> 00:18:18,500
that

180
00:18:21,530 --> 00:18:25,300
here to set title.

181
00:18:25,750 --> 00:18:28,150
So we'll set this to use a feed.

182
00:18:28,990 --> 00:18:42,560
And over in main activity we'll set the title to Instagram.

183
00:18:42,600 --> 00:18:43,060
All right.

184
00:18:43,060 --> 00:18:50,660
So let's have a final check and see if our logout button works as desired.

185
00:18:51,850 --> 00:18:52,750
And here we go.

186
00:18:53,020 --> 00:18:58,030
So let's look at ourselves out and there we go.

187
00:18:58,190 --> 00:19:07,640
We're back to the main Instagram screen and then we can look back and if we want to switch over to logging

188
00:19:07,660 --> 00:19:13,500
mode and there we go and we of course can view the feeds again if we want to.

189
00:19:15,170 --> 00:19:16,360
And there it is.

190
00:19:17,120 --> 00:19:17,950
Excellent.

191
00:19:18,350 --> 00:19:24,530
So that takes us to the end of our Instagram app and you've now learned a huge amount about setting

192
00:19:24,530 --> 00:19:31,820
up a pass server on AWOS working with the data browser and the easy to management console as well as

193
00:19:31,820 --> 00:19:43,040
of course actually building apps using pass for in and sign up and data storage as well in the next

194
00:19:43,040 --> 00:19:49,820
section we're going to take this even further and make a rather popular cloud based app and that is

195
00:19:50,090 --> 00:19:51,810
uber.

196
00:19:51,830 --> 00:19:56,030
So take a little break have a cup of tea and a biscuit and I'll see you at the beginning of the next

197
00:19:56,030 --> 00:19:56,950
section.
