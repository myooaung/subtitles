1
00:00:01,080 --> 00:00:07,140
Congratulations on making it to the end of this section of the complete Android develop of course in

2
00:00:07,140 --> 00:00:10,930
this final video we'll be creating a basic phrases app.

3
00:00:10,980 --> 00:00:16,830
So as I mentioned in the previous video we're going to set up a grid layout demo much like we did then

4
00:00:17,340 --> 00:00:23,190
and then very simply how app is going to contain a number of basic phrases in a non English language.

5
00:00:23,490 --> 00:00:28,320
And when the appropriate button is pressed then that will play the phrase.

6
00:00:28,320 --> 00:00:33,450
So you can either use that as a tool when you go on holiday or as a learning tool to practice your basic

7
00:00:33,450 --> 00:00:36,530
phrases in order to get these phrases.

8
00:00:37,440 --> 00:00:44,220
I went to languages dot com and my app is going to be in French but you can use any of these languages

9
00:00:44,220 --> 00:00:50,190
here and they've got some brilliant free MP 3s that you can download and use in your app.

10
00:00:50,540 --> 00:00:55,800
So if you want to create a custom app then that's great if you just want to use the phrases that I've

11
00:00:55,800 --> 00:00:56,620
created.

12
00:00:56,820 --> 00:01:08,480
Just go to Android dev course dot com slash phrases towards it and then download that to your desktop

13
00:01:09,750 --> 00:01:21,340
and then you'll see the basic phrases that I've extracted from the Empey theories on the languages dot

14
00:01:21,330 --> 00:01:22,440
com site.

15
00:01:22,940 --> 00:01:27,170
So it's a pretty simple app but there are a few subtleties to it.

16
00:01:27,200 --> 00:01:29,370
I would definitely recommend that you do it yourself.

17
00:01:29,390 --> 00:01:33,120
You might then want to see just the last bit of my video.

18
00:01:33,170 --> 00:01:34,920
If you've been happy with the rest of it.

19
00:01:34,940 --> 00:01:40,490
One thing we really want to avoid is having eight different methods created one for each button and

20
00:01:40,490 --> 00:01:46,010
then running separately so you need to find a way ideally to avoid that and have a single method which

21
00:01:46,400 --> 00:01:50,960
works out which button has been pressed and then plays the appropriate sound.

22
00:01:50,960 --> 00:01:52,960
But I'll leave you to try and figure that out.

23
00:01:52,970 --> 00:01:58,660
Obviously if you can't don't worry about it just watch my video and I'll show you how I solve the problem.

24
00:01:58,670 --> 00:01:59,380
Best of luck.

25
00:02:05,160 --> 00:02:05,750
OK.

26
00:02:06,010 --> 00:02:07,210
Here we go.

27
00:02:07,920 --> 00:02:14,620
I'm going to start with a new project.

28
00:02:15,120 --> 00:02:16,480
I'll call it basic phrases

29
00:02:20,370 --> 00:02:24,390
and then all the usual options that

30
00:02:28,200 --> 00:02:35,280
and we're going to be copying the basic phrases into the app as well.

31
00:02:36,030 --> 00:02:38,950
So I'm going to start with that.

32
00:02:39,120 --> 00:02:43,370
We'll do that in the usual way by creating a new folder within rez

33
00:02:47,070 --> 00:02:57,190
or new directory called Rural and then I'm just going to command click or right click and reveal in

34
00:02:57,190 --> 00:02:58,310
Finder.

35
00:03:00,090 --> 00:03:06,930
And there's the rest folder within it should be a row of folder.

36
00:03:07,010 --> 00:03:13,630
And then I can take my phrases and just drag those in

37
00:03:17,130 --> 00:03:21,630
there that will officially work slightly different in Windows but it's basically the same process with

38
00:03:21,640 --> 00:03:26,280
just dragging in our files all the files into the wrong folder.

39
00:03:27,960 --> 00:03:29,040
OK.

40
00:03:29,650 --> 00:03:33,940
Sometimes if you shrink it and then enlarge it again there again.

41
00:03:34,630 --> 00:03:41,570
So those are phrases that step 1 then step 2 now is to add our grid view.

42
00:03:41,620 --> 00:03:43,590
So this is going to be exactly the same process.

43
00:03:43,600 --> 00:03:55,730
So we agreed to lay out slightly different to a grid view and now let's add buttons.

44
00:03:55,850 --> 00:03:58,590
We'll start with just the one anyway.

45
00:04:00,140 --> 00:04:02,020
So let's do this fairly carefully.

46
00:04:02,240 --> 00:04:03,420
Jump over to

47
00:04:06,210 --> 00:04:08,100
the text.

48
00:04:09,180 --> 00:04:14,070
So this one is going to say hello.

49
00:04:14,260 --> 00:04:22,810
So we'll change the text to hello and then we'll just have all of the settings that we had last time.

50
00:04:22,810 --> 00:04:23,710
So Android

51
00:04:26,520 --> 00:04:34,520
out column zero and enjoy lay row is zero as well.

52
00:04:37,860 --> 00:04:40,220
Android column right.

53
00:04:40,230 --> 00:04:40,890
Wait sorry.

54
00:04:40,910 --> 00:04:41,910
Is.

55
00:04:46,050 --> 00:04:48,760
Android lay out.

56
00:04:49,000 --> 00:04:49,450
Right.

57
00:04:49,460 --> 00:04:52,570
Wait sorry.

58
00:04:52,770 --> 00:04:59,680
What should be one.

59
00:05:00,190 --> 00:05:00,730
And then

60
00:05:03,970 --> 00:05:06,930
Android play out gravity.

61
00:05:06,940 --> 00:05:07,700
Is Phil..

62
00:05:07,810 --> 00:05:09,160
So that's the big one.

63
00:05:09,160 --> 00:05:11,550
Which makes it fill the hole great view.

64
00:05:12,280 --> 00:05:16,450
And then I'm going to change the ID to match

65
00:05:22,270 --> 00:05:28,150
the name of the file and that's going to be important because later on I'm going to use the I.D. to

66
00:05:29,050 --> 00:05:32,960
tell iPhone which file to play.

67
00:05:33,520 --> 00:05:39,880
So that's my kind of clue as it were for how I'm going to set this up so that I know which file to play.

68
00:05:40,870 --> 00:05:45,260
OK so now we just need to add another seven of those.

69
00:05:45,380 --> 00:05:53,070
One two three four five six

70
00:05:55,790 --> 00:05:57,230
seven.

71
00:05:57,560 --> 00:05:59,220
I think that was seven.

72
00:06:00,050 --> 00:06:01,640
So do this as quickly as possible.

73
00:06:01,640 --> 00:06:06,040
We change this to a column of 1.

74
00:06:06,280 --> 00:06:07,030
We'll make this one.

75
00:06:07,030 --> 00:06:09,420
How are you.

76
00:06:10,630 --> 00:06:16,800
I apologize in advance to any French speakers who I've translated these wrong for.

77
00:06:17,040 --> 00:06:19,890
But I think they're basically right.

78
00:06:20,230 --> 00:06:23,600
So that becomes how you.

79
00:06:23,850 --> 00:06:27,690
And then we have of one column sirra

80
00:06:31,280 --> 00:06:32,580
some very good evening

81
00:06:39,420 --> 00:06:42,470
and then one one

82
00:06:49,240 --> 00:06:55,290
one can be please it's quite nice you can see the app taking shape to the right.

83
00:06:56,970 --> 00:06:58,320
As we're adding our Katib

84
00:07:01,290 --> 00:07:09,800
columns they're ready to.

85
00:07:10,040 --> 00:07:10,910
My name is

86
00:07:22,460 --> 00:07:23,570
T.

87
00:07:24,950 --> 00:07:25,750
Column One

88
00:07:30,190 --> 00:07:31,000
do you speak

89
00:07:34,210 --> 00:07:34,790
English

90
00:07:44,580 --> 00:07:49,870
when you leave out very three columns.

91
00:07:53,080 --> 00:07:53,550
Welcome

92
00:08:04,130 --> 00:08:08,360
and it's like I did miss one off after all.

93
00:08:22,340 --> 00:08:23,800
So this last one

94
00:08:26,600 --> 00:08:27,650
will be high.

95
00:08:27,980 --> 00:08:28,730
Live in

96
00:08:35,190 --> 00:08:35,690
OK.

97
00:08:36,060 --> 00:08:36,360
Here we go.

98
00:08:36,360 --> 00:08:43,140
You can see that it's stretched out a little because of the do you speak English button BAM.

99
00:08:43,820 --> 00:08:52,930
If we wanted to we can add in a special symbol which is essentially an HGL symbol which is an ampersand

100
00:08:52,960 --> 00:08:53,620
and then a hash.

101
00:08:53,620 --> 00:09:02,470
And then a 1 0 and a semi-colon which is just the H G M L code for n for a line break and then you can

102
00:09:02,470 --> 00:09:07,210
see we get the line break in there and that looks a bit better I think rather than stretching.

103
00:09:07,240 --> 00:09:10,960
All of these buttons to match that longer one there.

104
00:09:11,650 --> 00:09:15,370
So that's how you change your buttons to have more than one line.

105
00:09:15,790 --> 00:09:16,340
All right.

106
00:09:16,420 --> 00:09:18,130
And so now we've added all our buttons.

107
00:09:18,460 --> 00:09:21,640
You might want to change the color or do something a bit more fancy to them but I'm just going to leave

108
00:09:21,640 --> 00:09:22,770
them like that.

109
00:09:22,780 --> 00:09:27,840
So now we want to start getting responses when these individual buttons are tapped.

110
00:09:27,850 --> 00:09:33,670
Now we could go back through design mode and click on them one by one and add an on click to each of

111
00:09:33,670 --> 00:09:34,240
them.

112
00:09:34,330 --> 00:09:36,210
But that's not particularly efficient.

113
00:09:36,250 --> 00:09:38,830
Much quicker would be to add it in the XML

114
00:09:43,430 --> 00:09:45,500
so Android on click

115
00:09:49,680 --> 00:09:53,770
is a button tapped.

116
00:09:54,220 --> 00:10:02,240
And I'm just going to add that to all of them so I notice that I'm adding a single method here.

117
00:10:04,940 --> 00:10:10,520
A perfectly valid solution to this problem would be to add a different method for each

118
00:10:13,740 --> 00:10:14,360
button.

119
00:10:14,520 --> 00:10:15,930
But that's not particularly scalable.

120
00:10:15,930 --> 00:10:20,970
We'll be creating endless methods if we had lots and lots of different buttons here and we might even

121
00:10:20,970 --> 00:10:26,010
want to at some point feel these buttons programmatically rather than hard coding them in like we have

122
00:10:26,010 --> 00:10:26,470
here.

123
00:10:26,640 --> 00:10:33,490
And then we wouldn't be able to create again endless different methods on the fly.

124
00:10:33,630 --> 00:10:37,860
So we're going to learn how to do it slightly neater way.

125
00:10:37,860 --> 00:10:44,430
So now we need to set up our button taps method over in main activity or other

126
00:10:48,080 --> 00:10:50,860
site as usual public Voyt

127
00:10:53,710 --> 00:11:00,480
button tapped and it's going to be called by a view which we'll call you

128
00:11:04,420 --> 00:11:05,170
and find out

129
00:11:07,960 --> 00:11:08,830
I'm just going to log

130
00:11:12,380 --> 00:11:13,590
button tapped.

131
00:11:13,780 --> 00:11:14,380
True.

132
00:11:18,650 --> 00:11:24,720
Just to make sure that everything looks OK and that everything's connected up.

133
00:11:25,140 --> 00:11:29,910
What we're going to want soon after this is to work out which button was tapped.

134
00:11:32,740 --> 00:11:39,720
And that's a slightly trickier problem to solve but we'll get that.

135
00:11:39,730 --> 00:11:41,560
So just time that we get.

136
00:11:42,120 --> 00:11:44,880
So that's connected up nicely.

137
00:11:45,430 --> 00:11:54,120
Now if we just type in view here remember this view is the button that's been tapped on.

138
00:11:54,230 --> 00:12:02,210
I can actually use a method called get ID which looks like it will be pretty perfect.

139
00:12:02,210 --> 00:12:04,420
And that would give me the ID of the button.

140
00:12:04,880 --> 00:12:09,050
But then you get a mysterious error here that this is actually an integer.

141
00:12:09,080 --> 00:12:17,570
And so we're going to need to convert it to a string to be able to display it in the logs will use integer

142
00:12:17,870 --> 00:12:21,430
to string.

143
00:12:21,700 --> 00:12:28,840
And then let's run that there's definitely something strange going on because the idea is that we entered

144
00:12:28,840 --> 00:12:35,530
we're not integers they were very much strings.

145
00:12:35,610 --> 00:12:39,760
Let's see what happens then when we run the app now.

146
00:12:42,470 --> 00:12:46,610
So button tapped and then you can see if we get this big long number that obviously we haven't entered

147
00:12:47,560 --> 00:12:50,160
that's all.

148
00:12:50,330 --> 00:12:58,370
So what's actually going on there is that this ID is a number within the app itself which it used to

149
00:12:58,370 --> 00:13:04,490
refer to this button but it's not the same ID that we actually gave the button which is slightly confusing

150
00:13:05,150 --> 00:13:08,920
but we can still use it to get what we want.

151
00:13:08,990 --> 00:13:10,470
So let's see how we do that.

152
00:13:12,730 --> 00:13:22,180
First of all let's just create an integer called ID which is going to be equal to the ID of the button

153
00:13:22,180 --> 00:13:23,250
that's just been tapped.

154
00:13:23,290 --> 00:13:33,730
When I say Id that I mean this long number not the ID that we entered for it then we'll create a string

155
00:13:34,330 --> 00:13:36,730
which we'll call our ID

156
00:13:39,660 --> 00:13:42,270
which initially is going to be empty.

157
00:13:42,940 --> 00:13:48,330
And then we're going to attempt to find out ID of the element that has been tapped into the button that's

158
00:13:48,330 --> 00:13:49,650
been tapped.

159
00:13:49,650 --> 00:14:08,910
And if we can we'll set it to our ID and then we use the dot get resources don't get resource entry

160
00:14:08,910 --> 00:14:11,910
name and then ID

161
00:14:15,610 --> 00:14:25,720
and that will give us the ID for the object which we want to set to our ID.

162
00:14:25,740 --> 00:14:28,280
So now let's give that a try.

163
00:14:29,340 --> 00:14:31,360
This should be a string so we don't need to convert it

164
00:14:36,330 --> 00:14:39,270
so we can just display it straight away.

165
00:14:39,780 --> 00:14:46,680
So this essentially get goods into the resources and gets information about the object that was tapped

166
00:14:46,680 --> 00:14:55,710
on and we can use that to get the particular ID that is the one that we entered for the Boston

167
00:15:03,900 --> 00:15:04,800
let's just bring that up.

168
00:15:04,800 --> 00:15:06,440
Fantastic.

169
00:15:06,450 --> 00:15:07,020
There we go.

170
00:15:09,110 --> 00:15:10,810
So I live in.

171
00:15:11,090 --> 00:15:12,190
Welcome.

172
00:15:12,230 --> 00:15:14,310
Do you speak english etc.

173
00:15:14,460 --> 00:15:15,440
Pretty.

174
00:15:15,770 --> 00:15:16,960
So now we've got the ID.

175
00:15:17,000 --> 00:15:25,790
It's just a matter of playing the sound which in theory is simple but we're going to get a little complication

176
00:15:25,790 --> 00:15:26,580
here.

177
00:15:27,230 --> 00:15:30,940
Let's just set it up as we would normally do.

178
00:15:31,430 --> 00:15:36,080
So we'll create a media player

179
00:15:41,540 --> 00:15:45,620
variable which will call again player.

180
00:15:45,940 --> 00:15:55,870
And normally we would use Media Player to create and then we would use this for the context and then

181
00:15:55,870 --> 00:16:00,080
we'd use something like our DOT roar.

182
00:16:00,410 --> 00:16:05,880
Don't say you speak English.

183
00:16:06,500 --> 00:16:09,250
And then we'd use player.

184
00:16:09,530 --> 00:16:17,450
Don't start the complication here of course is that we don't know which file we should play and we can't

185
00:16:17,450 --> 00:16:25,910
just replace this with the our ID string because this is not a string This is a particular object within

186
00:16:25,970 --> 00:16:29,130
our rule but don't panic.

187
00:16:29,150 --> 00:16:30,550
There is a way around it.

188
00:16:30,650 --> 00:16:38,630
What we can do is get yet another ID for this particular resource for the results that we want to play.

189
00:16:39,500 --> 00:16:46,210
And we can get that using it was also ID.

190
00:16:46,340 --> 00:16:52,100
So we're creating an integer called results ID which is going to be an integer that we can we use to

191
00:16:52,100 --> 00:17:07,250
refer to one of these sound files and we get that using get resources Dart's get identifier and then

192
00:17:09,040 --> 00:17:17,370
we enter our ID which is the identify of the particular file the location of it.

193
00:17:17,380 --> 00:17:20,960
So it's going to be in roll.

194
00:17:22,030 --> 00:17:25,300
And then we need to specify the package name.

195
00:17:25,440 --> 00:17:28,870
Use this command to get identify of other packages.

196
00:17:29,320 --> 00:17:33,310
And the easiest way to get the package name is just to bring up the logs.

197
00:17:33,310 --> 00:17:48,340
And it's that string that come out example taught for me Percival Dart's basic phrases

198
00:17:53,020 --> 00:17:56,200
obviously it's very important you get that right.

199
00:17:56,200 --> 00:17:56,800
And then

200
00:17:59,650 --> 00:18:10,860
instead of using our role to refer to a particular file we can just use resource ID which tells us what's

201
00:18:10,860 --> 00:18:14,670
going on there and how this is stored within the Android system.

202
00:18:14,670 --> 00:18:20,490
So when we type our role Daut halo that's actually returning an integer.

203
00:18:20,620 --> 00:18:28,370
And that's one of those long integers that we saw which refers to an object or a file within the app.

204
00:18:28,470 --> 00:18:31,020
In this case the Hello.

205
00:18:31,140 --> 00:18:33,440
And for a file.

206
00:18:34,440 --> 00:18:35,220
All right.

207
00:18:35,220 --> 00:18:43,620
So fingers crossed if we've done everything right they should play the correct sound when the button

208
00:18:43,620 --> 00:18:44,460
is tapped.

209
00:18:52,740 --> 00:18:53,550
And we gave

210
00:18:59,890 --> 00:19:00,550
fantastic

211
00:19:09,290 --> 00:19:10,260
and that's it.

212
00:19:10,700 --> 00:19:15,710
So the complications really well not so much around the layout or the buttons they were just around

213
00:19:15,710 --> 00:19:18,340
this getting results IDs et cetera.

214
00:19:18,590 --> 00:19:25,190
But if you do things this way can save a lot of creating eight different methods having to assign the

215
00:19:25,190 --> 00:19:29,080
same method to each individual button for example.

216
00:19:29,090 --> 00:19:29,900
So that's it.

217
00:19:29,930 --> 00:19:34,060
Feel free to play around with this app and make it even more exciting and useful.

218
00:19:34,190 --> 00:19:38,530
And then when you've done that take a quick break and let's get straight on with Section 5.
