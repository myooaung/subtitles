1
00:00:00,480 --> 00:00:06,330
Now that we're comfortable working with sound we're going to change tack slightly to prepare for the

2
00:00:06,450 --> 00:00:11,160
last app that we're going to make in this section which is going to be a basic phrases app.

3
00:00:11,160 --> 00:00:16,920
So essentially the app is going to have eight buttons two long and four down which we want to stretch

4
00:00:17,170 --> 00:00:22,260
to the whole width of the screen and then you're going to be able to tap those buttons to say basic

5
00:00:22,260 --> 00:00:22,810
phrases.

6
00:00:22,810 --> 00:00:28,020
That's one of those apps you might take with you on holiday or even use to learn some basic phrases

7
00:00:28,020 --> 00:00:29,430
in a new language.

8
00:00:29,580 --> 00:00:36,510
So the challenge there then is the set up we want to make sure that our buttons cover the whole screen

9
00:00:36,870 --> 00:00:38,110
whatever the screen size.

10
00:00:38,220 --> 00:00:44,670
In a kind of grid and indeed there is a layout in Android particularly or specifically designed for

11
00:00:44,670 --> 00:00:45,440
this.

12
00:00:45,720 --> 00:00:50,870
And that's what we're going to investigate in this video.

13
00:00:50,910 --> 00:00:57,240
So it's called grid layout so I'll call my new app Gridley's out demo

14
00:01:00,240 --> 00:01:01,480
and we'll go for it.

15
00:01:01,800 --> 00:01:09,490
As usual the default options so there are a few subtleties to the great lay out demo.

16
00:01:10,380 --> 00:01:15,190
And it's always good to see a new way of laying out your user interface elements.

17
00:01:15,720 --> 00:01:17,040
So here we go.

18
00:01:17,260 --> 00:01:26,920
I'm going to start by removing the default text view then and then surprise.

19
00:01:26,940 --> 00:01:34,740
I'm going to add a grid layout so I'm just going to drag that in and will align it to the top left and

20
00:01:34,740 --> 00:01:40,230
you can see by default it takes the whole width and the height of the parent.

21
00:01:40,410 --> 00:01:41,830
So we could change that here.

22
00:01:41,970 --> 00:01:44,750
That's what we wanted but actually that's exactly what we want.

23
00:01:44,880 --> 00:01:52,190
We want the grid layout to stretch to the edges of the screen minus the menu bar the top of course.

24
00:01:52,320 --> 00:01:57,570
So while we're spending a bit more time looking at lab it's always good to compare but we've just added

25
00:01:57,600 --> 00:02:01,510
to the text SML version of that as we've seen before.

26
00:02:01,800 --> 00:02:07,860
So this is our grid layout code that has just been added to our app by dragging that in.

27
00:02:07,890 --> 00:02:14,960
So it's very simple we just use grid layouts to define a grid layout and then we've set the width and

28
00:02:14,960 --> 00:02:23,530
height to match the parent and then aligned to the top and the start we could actually do without those

29
00:02:23,530 --> 00:02:32,700
lines because they will happen by default anyway if we match the parent.

30
00:02:33,120 --> 00:02:40,630
So let's add a button to this grid layout and see how it does.

31
00:02:40,650 --> 00:02:41,940
See how it behaves.

32
00:02:41,970 --> 00:02:47,880
So I'm going to drag it in like that into our grid layout and you can see this time we start getting

33
00:02:47,880 --> 00:02:49,350
these boxes appearing.

34
00:02:49,350 --> 00:02:54,950
So this tells us where this item is in terms of the grid.

35
00:02:54,990 --> 00:02:56,040
So if I add another one

36
00:02:59,680 --> 00:03:02,900
you can see this button is the second one along.

37
00:03:02,910 --> 00:03:11,550
But still in the first row there whereas this one is in the first row and the first column as well.

38
00:03:11,560 --> 00:03:16,180
So what we want is to have as many buttons as we like in this case it's going to be eight but we want

39
00:03:16,180 --> 00:03:21,410
them to stretch to the whole width of the screen and the height of the screen as well.

40
00:03:21,430 --> 00:03:29,080
So the easiest way to do that is to go to the X and L and for each of our buttons we're going to specify

41
00:03:29,200 --> 00:03:31,330
a few different things.

42
00:03:31,360 --> 00:03:36,660
So first of all we're going to specify where they are in the grid layout.

43
00:03:36,850 --> 00:03:42,170
So this first one's going to be the top left.

44
00:03:42,180 --> 00:03:44,700
This is going to be a layout column.

45
00:03:44,700 --> 00:03:45,150
There it is.

46
00:03:45,150 --> 00:03:46,530
It's going to be zero or

47
00:03:49,570 --> 00:03:58,150
the next one you won't be surprised to hear it's going to be lay out.

48
00:04:03,770 --> 00:04:06,300
And that 0 as well.

49
00:04:06,300 --> 00:04:07,650
So that hasn't changed anything.

50
00:04:07,740 --> 00:04:12,080
It's just specified which button this is.

51
00:04:12,500 --> 00:04:21,410
And then the next thing we're going to specify is the gravity we talked about gravity before but this

52
00:04:21,410 --> 00:04:27,600
time we want to use it to fill and this will fill both horizontally and vertically.

53
00:04:27,830 --> 00:04:29,540
The space that it's in.

54
00:04:29,810 --> 00:04:35,840
So you can see what it's done there it's filled the whole screen vertically and horizontally up to the

55
00:04:35,840 --> 00:04:39,600
width of that new button there which is the behavior that we want.

56
00:04:39,620 --> 00:04:45,950
We'll obviously need to update that the new button code to make that work has a couple of pictures I'm

57
00:04:45,950 --> 00:04:52,010
going to add that's worth bearing in mind and that is the

58
00:04:55,800 --> 00:05:02,330
column white and we want all of our column whites to be equal because we want them all to be the same

59
00:05:02,330 --> 00:05:03,000
size.

60
00:05:03,290 --> 00:05:07,590
So I'm going to set them all to be one.

61
00:05:08,080 --> 00:05:13,810
Just to point out there there's a column span so if you wanted one of your buttons to spend two columns

62
00:05:13,810 --> 00:05:19,820
for example then you could use your grid layout to do that but we're not going to do that here.

63
00:05:21,160 --> 00:05:27,100
We're just going to set the very weight to be one as well just to show you what you can do.

64
00:05:27,100 --> 00:05:34,010
There's a little image there so you can see that part is twice as wide as the ones below and you would

65
00:05:34,010 --> 00:05:39,000
do that using span's.

66
00:05:39,020 --> 00:05:43,680
OK so now I've got my button behaving as I want it to be.

67
00:05:43,730 --> 00:05:46,550
I'm actually going to just copy and paste that code.

68
00:05:46,690 --> 00:05:48,620
So I've got rid of the second button.

69
00:05:52,770 --> 00:05:55,700
That's going to give me a problem with IDS.

70
00:05:55,710 --> 00:05:58,450
So just update the IDs temporarily.

71
00:05:58,500 --> 00:06:05,320
And we've got this one is going to be column 1 and 0.

72
00:06:05,670 --> 00:06:12,890
So now we've got two buttons together which side by side take up a whole screen.

73
00:06:13,380 --> 00:06:21,980
So the third one I want to have a column of zeros and a row of one.

74
00:06:21,990 --> 00:06:23,020
Now this is working.

75
00:06:23,160 --> 00:06:27,660
I'm actually going to ignore that Id problem for a moment because I don't need to worry about it.

76
00:06:27,660 --> 00:06:30,500
We're going to add the ID's later on.

77
00:06:31,080 --> 00:06:36,480
But now I'm just going to update that says column one and row one.

78
00:06:36,780 --> 00:06:37,550
There we go.

79
00:06:37,740 --> 00:06:42,480
So that's how you would get four buttons or these and have to be buttons they could be images could

80
00:06:42,480 --> 00:06:48,950
be anything you like but that's how you would get four equally spaced boxes.

81
00:06:49,720 --> 00:06:52,140
So now I'm just going to add four more

82
00:06:58,020 --> 00:07:02,240
and then update them all.

83
00:07:02,440 --> 00:07:10,550
So say gave this one is going to have a row of two and a column of one.

84
00:07:10,550 --> 00:07:14,050
This one is going to have a row.

85
00:07:14,220 --> 00:07:15,330
Sorry this one's two in one.

86
00:07:15,330 --> 00:07:16,850
This one's two and 0.

87
00:07:18,950 --> 00:07:22,930
And we've got 3 and 0.

88
00:07:26,830 --> 00:07:29,180
And three and one.

89
00:07:29,210 --> 00:07:30,090
There we go.

90
00:07:30,560 --> 00:07:32,410
So now we've got eight buttons.

91
00:07:32,450 --> 00:07:37,220
Don't worry about the I.D. problem will solve those later but they fill the screen very nicely and they

92
00:07:37,220 --> 00:07:43,040
will do that regardless of the screen size of the device that's being used.

93
00:07:43,040 --> 00:07:51,320
So that's a really useful layout if you want your interface elements to stretch to the edge of the screen.

94
00:07:51,410 --> 00:07:56,500
I'm not going to go through this with you but a quick challenge might be to try and recreate that grid

95
00:07:56,500 --> 00:07:57,830
lay out there.

96
00:07:58,520 --> 00:08:07,280
So you've got a grid with a span of two across the top and then one with a span of two down the middle

97
00:08:07,280 --> 00:08:14,240
there and that the other ends all spans of one type of guy if you want to practice your lay outs but

98
00:08:14,240 --> 00:08:19,100
I'm going to stop the video here and we will then go on to create our basic phrases AB.
