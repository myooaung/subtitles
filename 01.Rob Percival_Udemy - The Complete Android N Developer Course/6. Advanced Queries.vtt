WEBVTT
1
00:00:00.510 --> 00:00:06.210
Now that we've seen how to save objects on pass and to retrieve them by the ID we're going to look at

2
00:00:06.210 --> 00:00:14.040
some more advanced queries and see how we can search the past database and retrieve particular sets

3
00:00:14.250 --> 00:00:16.170
of data.

4
00:00:17.250 --> 00:00:24.320
So just before we do that let's jump back over to our past dashboard and look at our score object.

5
00:00:24.510 --> 00:00:31.270
And I just want to show you that if you want to you can add objects directly through the past dashboard.

6
00:00:31.270 --> 00:00:34.410
So I say I want to add a score for

7
00:00:41.760 --> 00:00:46.020
maybe he's doing a bit better than me at the game.

8
00:00:47.070 --> 00:00:48.460
And let's add another one

9
00:00:52.210 --> 00:00:57.560
for Ralphie who is doing better than all of us.

10
00:01:00.880 --> 00:01:01.410
OK.

11
00:01:01.620 --> 00:01:04.220
So you need to do that very much but it can be useful.

12
00:01:04.220 --> 00:01:09.850
So if you want to update something in your testing you don't have to write code in your app to do it.

13
00:01:09.870 --> 00:01:16.490
So let's say I wanted to get all of the scores saved on path server and return them to my app.

14
00:01:17.340 --> 00:01:21.470
Well I set up a query much like we did before.

15
00:01:21.720 --> 00:01:35.990
So I passed Querrey on a pass subject call it query and this is going to be a past query get query on

16
00:01:37.490 --> 00:01:38.840
the school class

17
00:01:41.660 --> 00:01:47.890
and this time I use query dot find in background.

18
00:01:47.890 --> 00:01:59.820
So rather than get in background and we're going to have a new find callback and this is where

19
00:02:03.680 --> 00:02:11.720
our objects will be returned and you can see as a list of past objects so let's check first off to see

20
00:02:12.440 --> 00:02:23.000
if a is null and then say we first off wanted to find out how many objects had been returned.

21
00:02:23.330 --> 00:02:34.380
We could use looked at I find in background and then retrieved

22
00:02:36.990 --> 00:02:42.900
and then we just use our objects list size

23
00:02:45.770 --> 00:02:46.370
objects

24
00:02:49.060 --> 00:02:55.800
so we can also use that to test that we've actually got some results.

25
00:02:55.840 --> 00:02:57.560
So if objects does size

26
00:03:00.180 --> 00:03:12.230
is greater than zero then let's loop through those results so forth.

27
00:03:13.360 --> 00:03:20.470
And then we'll create a passive object called object that each item in objects

28
00:03:24.970 --> 00:03:30.160
and for each one of those log find in background

29
00:03:33.320 --> 00:03:36.330
results and then

30
00:03:39.550 --> 00:03:45.730
we use object and oddities object to strengthen our

31
00:03:49.410 --> 00:03:50.290
OK.

32
00:03:50.800 --> 00:03:56.160
So this will now return all the items in the school class.

33
00:03:56.230 --> 00:03:57.340
Tell us how many there are.

34
00:03:57.370 --> 00:04:08.750
And then with any luck loop through them and show us the values within each object let's have a look.

35
00:04:08.910 --> 00:04:09.730
And here we go.

36
00:04:09.900 --> 00:04:17.970
So you can see retrieved three objects I could add them with a space then and then each individual object

37
00:04:19.060 --> 00:04:20.620
returned for us as well.

38
00:04:21.030 --> 00:04:27.090
Obviously if we wanted to get the individual values within those objects we might use something like

39
00:04:27.180 --> 00:04:27.910
object.

40
00:04:28.000 --> 00:04:36.560
Don't get string and then say we wanted to get the usernames we could just do that.

41
00:04:36.910 --> 00:04:37.460
OK.

42
00:04:37.680 --> 00:04:38.850
So that's fairly useful.

43
00:04:38.910 --> 00:04:41.990
But what if we wanted to get the school of an individual user.

44
00:04:42.030 --> 00:04:53.160
So say I wanted to get Tom in school and display it for some reason then we would add a search criteria

45
00:04:53.460 --> 00:05:05.690
to our query so we might do something like queery don't where you can see we've got a huge range of

46
00:05:05.690 --> 00:05:10.700
queries here and this is one of the reasons why Passover is so powerful that we can search in so many

47
00:05:10.700 --> 00:05:11.700
different ways.

48
00:05:12.290 --> 00:05:15.230
But we're going to do a pretty simple one to start with.

49
00:05:15.290 --> 00:05:24.800
So we're equal to and you can see we've got a string for the key and then a value for the object.

50
00:05:24.800 --> 00:05:27.440
So we want to search for Tommys school.

51
00:05:27.530 --> 00:05:33.390
So we want to search where username is equal to the Tommy

52
00:05:36.320 --> 00:05:40.640
and we might also want to limit it to a number of objects.

53
00:05:40.640 --> 00:05:49.220
We are only expecting one here so we could set the limits to be 1 so that we would return a maximum

54
00:05:49.520 --> 00:05:51.080
of one result.

55
00:05:51.470 --> 00:05:53.280
But we're only expecting one anyway.

56
00:05:54.290 --> 00:05:59.510
But it's always a good idea especially if you're updating things to set a limit where you expect one

57
00:05:59.510 --> 00:06:04.550
to be there just in case there's an issue with your code and you end up updating every object to the

58
00:06:04.550 --> 00:06:05.600
same value.

59
00:06:05.620 --> 00:06:07.890
It's not a great thing today.

60
00:06:08.930 --> 00:06:18.260
So let's have a look remind ourselves what's Tommy score is the term score is 250 so with any luck that

61
00:06:18.260 --> 00:06:20.880
number will be displayed in the logs.

62
00:06:21.390 --> 00:06:21.950
Yep.

63
00:06:22.340 --> 00:06:25.850
And there it is sort of retrieve one object.

64
00:06:26.480 --> 00:06:28.600
Unfortunately there I've got to change

65
00:06:32.160 --> 00:06:35.260
the code to get it.

66
00:06:35.940 --> 00:06:38.490
And then the point that we want to get is the score

67
00:06:41.200 --> 00:06:47.960
and then we're going to want to see a string.

68
00:06:48.390 --> 00:06:50.690
So that should now show us the score.

69
00:06:50.800 --> 00:06:59.600
That's just a quick test and then we get a result of 250 billion.

70
00:06:59.700 --> 00:07:08.750
So time for a challenge I think what I'd like you to do is sticking with our school class out game for

71
00:07:08.750 --> 00:07:15.560
some reason he's going to give an extra 50 points to everyone who has a score greater than 200.

72
00:07:15.590 --> 00:07:23.430
So sadly I'm going to just miss out that anyone who has a score greater than 200 gets an extra 50 points.

73
00:07:23.480 --> 00:07:25.310
So see if you can write the code for that.

74
00:07:25.370 --> 00:07:28.180
Again ideally not looking back at this.

75
00:07:28.220 --> 00:07:31.100
I'll leave it there for you just in case.

76
00:07:31.100 --> 00:07:32.130
Best of luck.

77
00:07:32.180 --> 00:07:45.840
Go for it.

78
00:07:45.840 --> 00:07:46.680
All right.

79
00:07:46.680 --> 00:07:48.460
Have you managed it.

80
00:07:48.510 --> 00:07:49.650
I'm just going to comment out

81
00:07:52.670 --> 00:07:54.330
OK from before.

82
00:07:55.250 --> 00:07:57.560
And then get it off the screen.

83
00:07:59.680 --> 00:08:07.870
And then we get so we want to find everyone that has a score greater than 200 and then increase their

84
00:08:07.870 --> 00:08:18.560
score by 50 say we use a pass query on pass objects

85
00:08:21.730 --> 00:08:22.710
it's called Querrey.

86
00:08:22.870 --> 00:08:34.210
It's just one part object and this is going to be parsed Querrey don't get Querrey on the score class.

87
00:08:34.210 --> 00:08:39.270
Now we wanted everyone who had a score greater than 200.

88
00:08:39.940 --> 00:08:42.010
So let's see if we can work out how to do that.

89
00:08:43.970 --> 00:08:56.500
So equerry don't where and I can see a method that way greater than which looks exactly what we want.

90
00:08:56.590 --> 00:09:05.030
So we want the school to be greater than 200 that we get.

91
00:09:05.170 --> 00:09:08.140
So that's the only limiting factor that we need.

92
00:09:08.140 --> 00:09:15.370
I'm not going to put a limit on this one because I want to update all scores that are greater than 200.

93
00:09:16.180 --> 00:09:23.080
So then we're going to find in background with a new find Colback

94
00:09:28.410 --> 00:09:29.790
I'm going to check if

95
00:09:35.160 --> 00:09:38.220
he is no and objects

96
00:09:43.510 --> 00:09:52.620
is not now and then I'm going to loop through objects say for PARSE object object

97
00:09:55.570 --> 00:10:01.880
in objects looping through objects and creating an object each time.

98
00:10:02.770 --> 00:10:06.330
All I want to do is object.

99
00:10:06.340 --> 00:10:09.450
Don't put.

100
00:10:09.680 --> 00:10:19.140
And then I want to put the score to be equal to the object.

101
00:10:19.370 --> 00:10:26.480
Don't get in school plus 50.

102
00:10:26.500 --> 00:10:34.470
Simple as that that gets the original score here and 52 and then puts that as the score value in the

103
00:10:34.470 --> 00:10:37.200
object.

104
00:10:37.660 --> 00:10:47.980
And then I'll do a simple save in background and I say we've got no locks there.

105
00:10:48.320 --> 00:10:51.770
But when it runs it should add 50 to

106
00:10:54.570 --> 00:10:56.300
those two scores.

107
00:10:59.430 --> 00:10:59.920
OK.

108
00:11:00.070 --> 00:11:03.590
Let's take it again.

109
00:11:03.650 --> 00:11:05.830
Use Refresh.

110
00:11:06.050 --> 00:11:07.210
And there we go.

111
00:11:07.280 --> 00:11:11.710
You can see they've both gone up by 50 points.

112
00:11:11.730 --> 00:11:13.120
Brenham so well done.

113
00:11:13.250 --> 00:11:17.420
If you managed to do that we're almost ready to start making an Instagram app.

114
00:11:17.540 --> 00:11:25.310
But the one other class that we need to be particularly aware of is the use of class because most of

115
00:11:25.310 --> 00:11:31.170
the apps that we're going to build require some way to identify our user and that's something that passive

116
00:11:31.300 --> 00:11:32.440
is very useful for.

117
00:11:32.600 --> 00:11:38.090
So in the next video we'll see how to log users in and sign them up using past server.
