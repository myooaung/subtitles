WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.750 --> 00:00:04.524
As promised, we're now going to move on with the styling,

00:00:04.524 --> 00:00:06.715
beginning with the small screen view,

00:00:06.715 --> 00:00:10.430
and then we can play around when we want to get more screen space.

00:00:10.430 --> 00:00:14.380
In the last video we added the HTML for all projects.

00:00:14.380 --> 00:00:16.990
If we go to the HTML page,

00:00:16.990 --> 00:00:19.690
we see that all of our individual projects are

00:00:19.690 --> 00:00:23.555
wrapped in this div with the class of grid-item,

00:00:23.555 --> 00:00:27.850
and then all of these grid items are nested inside of this projects div.

00:00:27.850 --> 00:00:32.185
These are going to be the two main classes which we'll need in our style sheets.

00:00:32.185 --> 00:00:34.390
So let's go over there now.

00:00:34.390 --> 00:00:39.175
So I'm going to create a new section just above our media query,

00:00:39.175 --> 00:00:43.370
and then create a comment for this projects page.

00:00:44.510 --> 00:00:47.145
That's enough with the title,

00:00:47.145 --> 00:00:49.095
which was project's title,

00:00:49.095 --> 00:00:54.820
and all I'm going to do here is set the font size to be 1.6 rems,

00:00:54.820 --> 00:00:58.120
which is the equivalent of 16 pixels.

00:00:58.120 --> 00:01:02.045
Our main wrapper was the class of projects,

00:01:02.045 --> 00:01:07.465
and it's here where we can set the display type to make use of the flexbox.

00:01:07.465 --> 00:01:11.680
The mobile first view which we're currently working on will

00:01:11.680 --> 00:01:16.340
allow us to set the flex direction to be the column,

00:01:16.340 --> 00:01:20.290
meaning our items will be stacked vertically and then

00:01:20.290 --> 00:01:24.575
will change this later on when we have more screen space available.

00:01:24.575 --> 00:01:28.700
Each of our projects and this class of grid item,

00:01:28.700 --> 00:01:33.320
and we're going to use this to initially set some space in between each one by

00:01:33.320 --> 00:01:38.450
adding some margin on the bottom of each one and the volume of one rem.

00:01:38.450 --> 00:01:42.170
If we now take a look at the final version,

00:01:42.170 --> 00:01:46.490
we see that this has the gray border surrounding each one.

00:01:46.490 --> 00:01:51.455
To do this, we're going to add a background color to each one of our sections.

00:01:51.455 --> 00:01:54.350
To make this background visible from the image,

00:01:54.350 --> 00:01:57.605
we're going to add some padding around the edge of each one.

00:01:57.605 --> 00:01:59.300
This will create some spacing,

00:01:59.300 --> 00:02:03.440
so our background will come through on all four sides.

00:02:03.440 --> 00:02:09.235
So we can set the background to be the value of light-slate-gray,

00:02:09.235 --> 00:02:14.075
reloads, and we can only see this behind the project title.

00:02:14.075 --> 00:02:17.075
So to see this around all four sides,

00:02:17.075 --> 00:02:20.970
we're going to add the padding value of one rem.

00:02:21.430 --> 00:02:24.800
This gives us the effect of a border.

00:02:24.800 --> 00:02:27.710
Currently we see our border is wider on the bottom,

00:02:27.710 --> 00:02:31.070
and this is simply because we currently have the project title.

00:02:31.070 --> 00:02:35.180
We will remove this places over the image very soon.

00:02:35.180 --> 00:02:37.265
After our grid item,

00:02:37.265 --> 00:02:39.530
we're now going to move onto the image and set this to

00:02:39.530 --> 00:02:42.440
be the full width of the container.

00:02:42.440 --> 00:02:46.535
We can do this by targeting our grid-item image,

00:02:46.535 --> 00:02:52.080
and then it sets the width and the height to be 100 percent.

00:02:52.960 --> 00:02:57.710
This will make sure that our image will fully fit the grid item.

00:02:57.710 --> 00:03:01.030
Now let's save this and reload the projects.

00:03:01.030 --> 00:03:04.125
This looks fine on the small screen view.

00:03:04.125 --> 00:03:06.950
However, if we stretch the browser,

00:03:06.950 --> 00:03:10.130
these images start to become really stretched.

00:03:10.130 --> 00:03:15.055
To improve this, we're going to change this layout twice using two media queries.

00:03:15.055 --> 00:03:18.720
Currently we only have one media query set up.

00:03:18.720 --> 00:03:20.625
I'm going to make use of these two,

00:03:20.625 --> 00:03:22.995
switch the flex direction to be row.

00:03:22.995 --> 00:03:26.035
So we have two projects side by side.

00:03:26.035 --> 00:03:27.660
Then in the upcoming video,

00:03:27.660 --> 00:03:30.680
we'll go even wider to a full desktop view,

00:03:30.680 --> 00:03:34.050
and then we'll make use of the CSS grid.

00:03:34.060 --> 00:03:38.525
So scroll down, we already have our media query in place,

00:03:38.525 --> 00:03:41.530
and I'm going to go to the end of this.

00:03:41.530 --> 00:03:44.715
Filled in the closing brace just here.

00:03:44.715 --> 00:03:47.445
Let's start with our projects.

00:03:47.445 --> 00:03:51.770
Remember this is the main wrapper for all of our projects,

00:03:51.770 --> 00:03:55.100
and we can set the flex direction to be row.

00:03:55.100 --> 00:03:58.280
Next we can target the grid item,

00:03:58.280 --> 00:04:06.635
which is our single project and we can set the flex basis be a value of 45 percent.

00:04:06.635 --> 00:04:11.540
The flex basis is going to be the default size of our elements,

00:04:11.540 --> 00:04:13.280
which is our projects,

00:04:13.280 --> 00:04:17.500
and this also leaves 5 percent for any spacing in between.

00:04:17.500 --> 00:04:20.435
If we save this and reload,

00:04:20.435 --> 00:04:24.080
we see the projects don't quite look as expected,

00:04:24.080 --> 00:04:27.565
which suddenly flex basis to be 45 percent.

00:04:27.565 --> 00:04:34.100
We did expect to have two images side-by-side with the 5 percent in between for spacing.

00:04:34.100 --> 00:04:38.270
This is because by default our items are set to no wrap,

00:04:38.270 --> 00:04:41.915
so all items will try to fit on the same line.

00:04:41.915 --> 00:04:46.130
We can override this by setting the flex wrap because

00:04:46.130 --> 00:04:48.170
each individual items will break into

00:04:48.170 --> 00:04:52.030
their own line after we take into account the width.

00:04:52.030 --> 00:04:54.525
So in our projects,

00:04:54.525 --> 00:05:01.125
if flex wrap, we can override the default value of no wrap to simply be wrap.

00:05:01.125 --> 00:05:03.905
Save this and reload.

00:05:03.905 --> 00:05:07.085
Now we'll see two projects side-by-side,

00:05:07.085 --> 00:05:09.445
segmented 45 percent each.

00:05:09.445 --> 00:05:11.030
All of the additional space,

00:05:11.030 --> 00:05:13.385
however, is on the right-hand side.

00:05:13.385 --> 00:05:17.720
But it would look a lot better if we distributed the space more evenly.

00:05:17.720 --> 00:05:23.230
To allow us to do this, we have a flexbox property called justify contents,

00:05:23.230 --> 00:05:28.025
and this is going to allow us to determine where we want this spacing to appear.

00:05:28.025 --> 00:05:31.670
We're going to set this to be spaced evenly so

00:05:31.670 --> 00:05:36.870
all the additional space around the elements will be divided up equally.

00:05:37.460 --> 00:05:42.540
Now the white space divided up equally between our projects.

00:05:42.540 --> 00:05:48.410
Right. So we now have the styling in place for the small screen layout using the flexbox,

00:05:48.410 --> 00:05:54.245
and our site now looks good on a small mobile size device or a small tablet.

00:05:54.245 --> 00:05:59.900
However, though we want to also cater for larger screens and desktop devices,

00:05:59.900 --> 00:06:06.630
and we'll do this in the next video and also get our first look at using the CSS grid.
