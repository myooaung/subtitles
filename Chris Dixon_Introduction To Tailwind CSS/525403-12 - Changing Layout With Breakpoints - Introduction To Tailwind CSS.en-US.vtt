WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.420 --> 00:00:07.454
Responsive design is not just a nice thing to have on modern-day websites.

00:00:07.454 --> 00:00:10.095
It's an essential part of development.

00:00:10.095 --> 00:00:13.860
We need to make sure our design looks good on small screens,

00:00:13.860 --> 00:00:17.130
right right to a large desktop size.

00:00:17.130 --> 00:00:21.160
Thankfully, since there is thousands of different screen sizes out there,

00:00:21.160 --> 00:00:25.555
we don't need to create a separate design for each one of these sizes.

00:00:25.555 --> 00:00:32.160
What instead, we do need to apply some sensible rules to cover is for all screen sizes.

00:00:33.350 --> 00:00:38.000
Without regular CSS, we have access to media queries.

00:00:38.000 --> 00:00:41.480
A common use for media queries is to section off

00:00:41.480 --> 00:00:45.655
certain styles to only apply to certain screen sizes.

00:00:45.655 --> 00:00:49.805
And Tailwind also has built-in utilities for this two.

00:00:49.805 --> 00:00:53.495
An important thing to understand is that all of the utility classes

00:00:53.495 --> 00:00:57.695
we have already applied will apply to every screen size.

00:00:57.695 --> 00:01:01.195
You can think of these as general base styles.

00:01:01.195 --> 00:01:03.155
Building on top of these.

00:01:03.155 --> 00:01:07.085
We can then add specific styles for certain screen sizes.

00:01:07.085 --> 00:01:09.485
Looking at this top row, for example,

00:01:09.485 --> 00:01:14.755
bear in mind that all of the current styles we have are applying to all sizes.

00:01:14.755 --> 00:01:19.865
Then once a browser hits a width of 640 pixels or above,

00:01:19.865 --> 00:01:24.440
we can add new styles or override the ones we already have.

00:01:24.440 --> 00:01:26.900
We maybe want a bigger font,

00:01:26.900 --> 00:01:30.680
more spacing, or a complete layout change.

00:01:30.680 --> 00:01:32.750
For these changes to apply,

00:01:32.750 --> 00:01:35.915
we use the same utility classes as before,

00:01:35.915 --> 00:01:38.650
but with the SM Prefix.

00:01:38.650 --> 00:01:41.120
Since we are working with mobile-first,

00:01:41.120 --> 00:01:45.245
these styles will apply all the way up to larger screens too.

00:01:45.245 --> 00:01:48.560
Unless we again override them by using another prefix,

00:01:48.560 --> 00:01:51.530
such as LG for large screens.

00:01:51.530 --> 00:01:55.160
Each one one these browser sizes is called a breakpoint.

00:01:55.160 --> 00:01:59.800
Since this is the point we could change the styling or the layout.

00:01:59.800 --> 00:02:04.380
We already know from this wide frame how the biggest screen view will look.

00:02:04.380 --> 00:02:07.535
How do we decide when to change the layout?

00:02:07.535 --> 00:02:09.710
Well, this is something which you do need to

00:02:09.710 --> 00:02:12.230
judge for yourself depending on each project,

00:02:12.230 --> 00:02:16.430
but a simple rule is to start with a small screen and then scale

00:02:16.430 --> 00:02:21.320
the browser up and make changes when the layout begins to look too stretched or broken.

00:02:21.320 --> 00:02:25.280
For simplicity, I'm just going to deal with one single breakpoint change,

00:02:25.280 --> 00:02:27.280
which is going to be at the large size

00:02:27.280 --> 00:02:36.405
, as you want to.

00:02:36.405 --> 00:02:40.335
Its layouts will basically go from having content stacked vertically,

00:02:40.335 --> 00:02:44.290
we're having our main two sections side-by-side.

00:02:44.570 --> 00:02:47.440
Moving on from this small screen view,

00:02:47.440 --> 00:02:49.345
I'm going to make a little bit more space,

00:02:49.345 --> 00:02:53.240
and if we go into the developer tools with "Right-click" and "Inspect".

00:02:53.240 --> 00:02:57.250
If you start to make the browser large or small inside the DevTools,

00:02:57.250 --> 00:02:59.245
you'll see on the top-right corner,

00:02:59.245 --> 00:03:01.955
we can see how wide it is in pixels.

00:03:01.955 --> 00:03:04.320
Currently, the layout looks pretty fine,

00:03:04.320 --> 00:03:06.505
when we are around 600 pixels.

00:03:06.505 --> 00:03:08.770
If we are up to 700s,

00:03:08.770 --> 00:03:14.180
800s, everything still looks fine on a soft tablet screen view.

00:03:14.180 --> 00:03:19.120
However though, if we start to get maybe around 1,000 pixels or above,

00:03:19.120 --> 00:03:21.130
some around here, we can see,

00:03:21.130 --> 00:03:23.435
we start to need a layout change.

00:03:23.435 --> 00:03:27.635
It's this large screen size which is 1,024 pixels,

00:03:27.635 --> 00:03:33.105
which I'm going to use to create a layout change. Let's close this down.

00:03:33.105 --> 00:03:35.320
If we go into the code,

00:03:35.320 --> 00:03:36.655
into our index page,

00:03:36.655 --> 00:03:42.320
and remember the body section up at the top controls the layout of our two main sections.

00:03:42.320 --> 00:03:45.115
This is the pattern for both the side,

00:03:45.115 --> 00:03:49.235
which is this top area and also the main content too.

00:03:49.235 --> 00:03:53.080
It controls this using the flex-box and set them currently,

00:03:53.080 --> 00:03:58.105
to a column layout will become changes to be a row on larger screens.

00:03:58.105 --> 00:04:03.155
The way to do this is to use the breakpoint prefix and in my case,

00:04:03.155 --> 00:04:04.865
it's with a large screen view.

00:04:04.865 --> 00:04:08.165
Then all we need to do is to add our utility class.

00:04:08.165 --> 00:04:12.745
This will change this to be flex row and if we save this,

00:04:12.745 --> 00:04:17.495
refresh the browser, these two sections and are placed in a row.

00:04:17.495 --> 00:04:20.360
We can also see the breakpoint take place if

00:04:20.360 --> 00:04:23.180
we shrink the browser down to the smallest size.

00:04:23.180 --> 00:04:27.270
This will then make this back to the column-style layout.

00:04:27.680 --> 00:04:31.910
What we now need to do is to size our two sections,

00:04:31.910 --> 00:04:34.825
since this doesn't span the full width of the page.

00:04:34.825 --> 00:04:37.625
To size the aside, and the main sections.

00:04:37.625 --> 00:04:40.040
We're going to make use of the width property.

00:04:40.040 --> 00:04:43.525
We know we can set how wide these sections are in rems,

00:04:43.525 --> 00:04:48.185
or an even better option for these sections is to use fractions.

00:04:48.185 --> 00:04:52.145
What we need to do is to first locate the aside.

00:04:52.145 --> 00:04:55.335
Then we can set for the large screen view,

00:04:55.335 --> 00:04:59.330
a width equal to 1/4.

00:04:59.330 --> 00:05:03.970
Go down. Let's locate the main section.

00:05:03.970 --> 00:05:07.970
After this, also targeting the large screen views.

00:05:07.970 --> 00:05:11.800
This will fill up the additional 3/4 of space.

00:05:11.800 --> 00:05:13.860
Now 3/4 and 1/4.

00:05:13.860 --> 00:05:16.155
Let's go live inside the browser.

00:05:16.155 --> 00:05:17.775
We don't need to keep refreshing.

00:05:17.775 --> 00:05:20.450
We can see this takes up 1/4 of the screen space,

00:05:20.450 --> 00:05:23.210
and this side takes up the remaining value.

00:05:23.210 --> 00:05:26.120
This will also stretch if we make the browser wider

00:05:26.120 --> 00:05:29.320
or smaller to always be in proportion.

00:05:29.320 --> 00:05:33.125
Now we know we're working with the full-size desktop screen.

00:05:33.125 --> 00:05:34.970
It would be better on this view if

00:05:34.970 --> 00:05:39.245
all the content stretched vertically to the full height of the screen.

00:05:39.245 --> 00:05:42.290
We can do this if we go to you one of the sections such as the

00:05:42.290 --> 00:05:45.650
aside and back into the classes.

00:05:45.650 --> 00:05:49.385
Again, this will always be targeting the large screen view.

00:05:49.385 --> 00:05:53.870
We can set the height to be equal to the screen height.

00:05:53.870 --> 00:05:56.870
This will set the height to be 100vh,

00:05:56.870 --> 00:05:59.845
which is the full height of the viewport.

00:05:59.845 --> 00:06:02.930
This looks a lot better. We now have a full height sidebar.

00:06:02.930 --> 00:06:08.360
Also since the main section is long side is also followed the full height too.

00:06:08.360 --> 00:06:10.965
As for main main layout change,

00:06:10.965 --> 00:06:13.380
you can add more breakpoints if you want to.

00:06:13.380 --> 00:06:18.540
Next, we're going to focus on the content inside of these two sections.
