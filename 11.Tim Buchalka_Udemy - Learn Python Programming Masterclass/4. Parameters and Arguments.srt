1
00:00:05,380 --> 00:00:08,350
Ahora, la función de multiplicación no es muy útil, se multiplica.

2
00:00:08,430 --> 00:00:11,230
Diez punto cinco por cuatro y devuelve la respuesta 42.

3
00:00:11,620 --> 00:00:13,300
Pero realmente no necesitamos una función para hacer eso.

4
00:00:13,870 --> 00:00:16,960
Sería un poco más útil si pudiéramos multiplicar números diferentes.

5
00:00:17,530 --> 00:00:18,970
Todavía no sería muy útil.

6
00:00:19,300 --> 00:00:21,760
Y realmente no sería una función para una operación tan simple.

7
00:00:22,000 --> 00:00:23,950
Pero estamos aprendiendo aquí las funciones funcionan en este momento.

8
00:00:24,490 --> 00:00:29,050
Quiero que la función en sí sea simple para que no nos confundamos con una carga de código complejo.

9
00:00:30,610 --> 00:00:34,340
¿Qué vamos a obtener un golpe para multiplicar dos números y devolver el resultado?

10
00:00:35,000 --> 00:00:40,280
Para hacer eso, necesitamos alguna forma de obtener los números en la función para que sepa qué multiplicar en lugar de

11
00:00:40,640 --> 00:00:43,670
codificar los números, como lo estamos haciendo en la línea dos.

12
00:00:44,300 --> 00:00:46,310
Entonces, para eso están los parámetros de función.

13
00:00:46,700 --> 00:00:48,590
Así que voy a agregar dos parámetros a nuestras funciones.

14
00:00:48,630 --> 00:00:53,510
Cuándo aparecer aquí y dentro de los paréntesis y las mejores opciones, comas espacio y.

15
00:00:55,610 --> 00:01:00,300
Los parámetros son como marcadores de posición para los valores de regla que pasará a su función.

16
00:01:00,870 --> 00:01:04,110
Son solo variables, pero le dan un valor cuando llama a la función.

17
00:01:04,710 --> 00:01:07,320
También puede verlos referidos como parámetros formales.

18
00:01:08,100 --> 00:01:10,400
También puede escuchar a los programadores referirse a estos argumentos.

19
00:01:10,890 --> 00:01:15,810
Eso no es estrictamente exacto, pero las personas a menudo usan términos menos precisos cuando hablan.

20
00:01:17,380 --> 00:01:22,240
Muy bien, ahora que hemos declarado dos parámetros en nuestra función, podemos usarlos en lugar de los

21
00:01:22,240 --> 00:01:24,280
valores literales codificados en la línea dos.

22
00:01:25,030 --> 00:01:30,850
Avancemos y hagámoslo nuevamente para cambiar un punto cinco a X y para cambiar a Y.

23
00:01:32,670 --> 00:01:38,100
Cualquier valor que proporcionemos para esos parámetros se usará cuando llamemos a una función, cuando una

24
00:01:38,100 --> 00:01:39,120
función tenga parámetros.

25
00:01:39,420 --> 00:01:42,660
Debe proporcionar valores adecuados cuando llame a la función.

26
00:01:43,670 --> 00:01:48,620
Es difícil decir esto porque en el punto de quiebre, pero tengo una advertencia en la línea seis de Harvard ahora sobre

27
00:01:48,630 --> 00:01:50,540
los paréntesis después del nombre de la función.

28
00:01:51,890 --> 00:01:56,900
Dices que la inteligencia me dice que el parámetro X está en el campo y el parámetro está en el campo.

29
00:01:57,330 --> 00:01:59,850
Podemos arreglar o proporcionar los argumentos.

30
00:02:01,910 --> 00:02:07,310
Los argumentos son los valores que serán utilizados por los parámetros formales, lo que llamamos una función, cada parámetro

31
00:02:07,310 --> 00:02:12,580
debe tener un valor al proporcionar un argumento en la llamada a la función que proporciona valores.

32
00:02:12,690 --> 00:02:15,080
Este argumento se llama pasar los argumentos.

33
00:02:15,740 --> 00:02:20,660
Si una función define dos parámetros, le pasamos dos argumentos cuando la llamamos.

34
00:02:21,380 --> 00:02:24,260
Tenga en cuenta que algunos parámetros de función pueden tener valores predeterminados.

35
00:02:24,290 --> 00:02:25,240
Los veremos pronto.

36
00:02:26,630 --> 00:02:29,110
Entonces la función de multiplicación encuentra dos parámetros.

37
00:02:29,450 --> 00:02:35,570
Así que ahora tenemos que proporcionar dos argumentos cuando lo llamamos, y lo hacemos ingresando los que están

38
00:02:35,570 --> 00:02:43,190
entre paréntesis en la línea seis, diez coma cinco coma para las correcciones, el error en este momento, listo para ejecutar los programas, ejecutar

39
00:02:43,250 --> 00:02:44,000
el programa.

40
00:02:46,880 --> 00:02:52,680
Y como era de esperar, imprimimos cuarenta y dos puntos cero nuevamente porque hemos usado parámetros, podemos usar

41
00:02:52,680 --> 00:02:57,150
nuestra función de multiplicación para multiplicar diferentes números como un ejemplo de eso.

42
00:02:58,730 --> 00:03:07,190
Podemos escribir 42 Pollyannas, ir a la secuela de Multiplicar y pasaremos dos argumentos, seis y siete, seis

43
00:03:07,490 --> 00:03:10,410
cobber siete impresos para confirmarlo.

44
00:03:10,430 --> 00:03:11,900
Imprimir 42.

45
00:03:13,480 --> 00:03:14,180
Del programa.

46
00:03:17,490 --> 00:03:19,830
Esta vez, tenemos 42 impresos como un número entero.

47
00:03:20,190 --> 00:03:22,590
Cuando multiplica para insertar, el resultado está en él.

48
00:03:23,230 --> 00:03:25,650
También podemos usar nuestra función de multiplicación en un bucle.

49
00:03:25,990 --> 00:03:27,090
De hecho, podemos usarlo de todos modos.

50
00:03:27,150 --> 00:03:29,100
Que Python espera una expresión.

51
00:03:29,610 --> 00:03:34,140
Una llamada de función es otro tipo de expresión que pone un código más aquí.

52
00:03:34,470 --> 00:03:36,960
Lo que vamos a hacer es cerrar el panel del aeropuerto.

53
00:03:38,360 --> 00:03:39,020
Línea 12.

54
00:03:39,650 --> 00:03:41,150
Van a imprimir una línea vacía.

55
00:03:42,060 --> 00:03:45,590
Carga 14 para VAO en rango.

56
00:03:46,010 --> 00:03:50,850
Paréntesis vendrá una pelea Plessy paréntesis en un programa de colon.

57
00:03:50,900 --> 00:03:54,950
Pero subrayar los tiempos es igual a multiplicar.

58
00:03:56,080 --> 00:03:58,630
Y entre paréntesis, dos coma.

59
00:03:59,900 --> 00:04:01,170
Siguiente ejemplo, imprimir.

60
00:04:01,960 --> 00:04:03,370
Dos veces.

61
00:04:05,690 --> 00:04:06,540
En este programa ahora.

62
00:04:11,750 --> 00:04:12,530
Puedes ver lo que pasó allí.

63
00:04:12,600 --> 00:04:15,670
Olympus multiplica el valle de uno a cuatro por dos.

64
00:04:16,580 --> 00:04:19,210
Sí, él puede decir multiplicaciones ahora un poco más útil.

65
00:04:19,660 --> 00:04:22,840
Podemos decirle qué dos números multiplicar y devuelve el resultado.

66
00:04:23,440 --> 00:04:28,150
Todavía no es una función muy emocionante, pero demuestra cómo los parámetros formales reciben valores por

67
00:04:28,150 --> 00:04:34,030
los argumentos que pasamos al llamar a la función en el siguiente video o en el programa en el

68
00:04:34,030 --> 00:04:34,630
depurador.

69
00:04:35,010 --> 00:04:38,590
Y vea cómo se usan los argumentos en lugar de los parámetros formales.

70
00:04:39,100 --> 00:04:40,180
Nos vemos en el próximo video.
