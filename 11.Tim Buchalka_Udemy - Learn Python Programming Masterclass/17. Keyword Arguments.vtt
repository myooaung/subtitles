WEBVTT
1
00:00:05.180 --> 00:00:10.290
En este video, haremos una mejora en nuestra función de texto de banner, en el proceso también aprenderemos

2
00:00:10.290 --> 00:00:13.500
sobre argumentos de palabras clave o nos detendremos con el cambio.

3
00:00:14.040 --> 00:00:15.990
Por el momento, nuestra función no es muy intuitiva.

4
00:00:16.590 --> 00:00:17.990
Mirando la línea 19.

5
00:00:18.480 --> 00:00:19.330
¿Cómo sabrías esa línea?

6
00:00:19.330 --> 00:00:20.880
¿Aparecerá un espacio en blanco dentro del banner?

7
00:00:21.660 --> 00:00:25.800
Podría leer el código de la función, por supuesto, pero no le gustaría leer todo el código

8
00:00:25.800 --> 00:00:28.290
de cada función que use antes de poder usarlo.

9
00:00:29.040 --> 00:00:32.340
A menudo escribirá funciones que utilizarán otros miembros de su equipo.

10
00:00:32.730 --> 00:00:35.690
No van a ser felices si tengo que leer el código fuente tampoco.

11
00:00:36.390 --> 00:00:39.870
Lo obvio es escribir documentación para la función.

12
00:00:40.320 --> 00:00:41.730
Eso es algo que haremos pronto.

13
00:00:42.420 --> 00:00:47.880
La documentación es esencial, pero también puede hacer que sus funciones sean más fáciles de usar al hacerlas

14
00:00:47.880 --> 00:00:48.600
más intuitivas.

15
00:00:49.320 --> 00:00:53.610
Llamar a la función de impresión integrada sin ningún argumento imprime una línea en blanco.

16
00:00:54.230 --> 00:00:55.740
Eso es lo que estamos haciendo aquí.

17
00:00:56.010 --> 00:00:59.490
Así que creo que están llamando a Benitec para que cualquier argumento tenga sentido.

18
00:01:00.420 --> 00:01:02.100
Así que hagamos un cambio a la línea 19.

19
00:01:03.180 --> 00:01:05.820
Vamos a eliminar los argumentos.

20
00:01:07.650 --> 00:01:09.690
Simplemente está entre paréntesis izquierdo o derecho allí.

21
00:01:10.580 --> 00:01:12.270
Al hacer eso, ahora tenemos el error actual.

22
00:01:13.770 --> 00:01:17.730
Y está bien, a menudo creará errores al hacer cambios en su tarjeta.

23
00:01:18.250 --> 00:01:21.280
En este caso, los errores, porque no estamos pasando ningún texto a la función.

24
00:01:21.640 --> 00:01:24.520
Y requiere algo de texto para arreglar eso.

25
00:01:24.640 --> 00:01:27.610
Podemos proporcionar un valor predeterminado para el parámetro de texto.

26
00:01:28.430 --> 00:01:29.410
Subamos aquí y hagamos eso.

27
00:01:30.370 --> 00:01:33.010
Vamos a poner un igual y un espacio entre comillas dobles.

28
00:01:33.990 --> 00:01:35.960
Ese es nuestro valor predeterminado para el parámetro de impuestos.

29
00:01:36.890 --> 00:01:39.690
Y si no tiene la línea 19, puede decir que ahora elimina el error.

30
00:01:40.110 --> 00:01:45.090
Sabemos que el espacio de impresión hace lo que queremos, por lo que podemos hacer que ese espacio sea el valor predeterminado para el

31
00:01:45.090 --> 00:01:45.900
parámetro de texto.

32
00:01:47.030 --> 00:01:47.870
Si ejecutas el programa.

33
00:01:51.400 --> 00:01:56.970
Y todavía obtenemos una pancarta bien formateada, como lo habíamos hecho antes, entonces, ¿por qué molestarse en hacer esto por las razones

34
00:01:57.010 --> 00:02:00.640
principales por las que creo que hace que la función sea más intuitiva?

35
00:02:01.950 --> 00:02:05.790
No tiene que acordarse de usar el espacio cuando desee incluir una línea plana en el banner.

36
00:02:06.570 --> 00:02:10.050
Pero también lo hice para poder mostrar los argumentos de palabras clave que se utilizan.

37
00:02:10.470 --> 00:02:13.680
Tenemos que usarlos aquí si queremos cambiar el ancho de nuestro banner.

38
00:02:14.430 --> 00:02:17.010
Así que quiero cambiarlo ahora para imprimir en un ancho de 60 caracteres.

39
00:02:17.470 --> 00:02:17.810
Dilo

40
00:02:17.820 --> 00:02:21.210
Acabamos de pasar 60 como argumento de ancho de pantalla en cada línea.

41
00:02:21.570 --> 00:02:23.760
Así que voy a usar la función de búsqueda inteligente y reemplazo.

42
00:02:23.790 --> 00:02:27.900
Así es como haría clic en editar, puedo encontrar clic en reemplazar.

43
00:02:28.950 --> 00:02:32.430
Entonces, la búsqueda de comillas dobles y paréntesis correctos.

44
00:02:33.240 --> 00:02:40.650
Y vamos a reemplazar eso en el siguiente lleno el espacio de coma tranquilo del templo 60 y un paréntesis correcto.

45
00:02:42.110 --> 00:02:43.380
Ven aquí, reemplaza viejo.

46
00:02:45.120 --> 00:02:48.490
No dijo el término, hemos agregado el argumento a la mayoría de las llamadas a funciones.

47
00:02:49.210 --> 00:02:52.390
Lo que haré es agregar el argumento a la línea 19 manualmente.

48
00:02:52.690 --> 00:02:54.010
Así que aquí solo puedo agregar una coma.

49
00:02:55.010 --> 00:02:55.610
60

50
00:02:56.620 --> 00:03:01.300
Al hacerlo, podría ver que nunca tenemos un problema en la línea 19, por lo que queremos proporcionar un valor

51
00:03:01.300 --> 00:03:05.650
para el ancho de pantalla, pero también queremos usar el valor predeterminado para el argumento de texto.

52
00:03:06.170 --> 00:03:08.500
Obviamente, no podemos dejar el argumento de texto en blanco.

53
00:03:08.530 --> 00:03:09.370
Eso nos da un error.

54
00:03:10.090 --> 00:03:12.250
Ahora, esta es la razón por la cual los argumentos de palabras clave son útiles.

55
00:03:12.670 --> 00:03:15.990
Podríamos especificar qué parámetro queremos en 60.

56
00:03:16.030 --> 00:03:17.270
Argumento para ser utilizado.

57
00:03:17.290 --> 00:03:18.100
Al nombrarlo.

58
00:03:18.650 --> 00:03:20.170
Vengo aquí 919.

59
00:03:20.620 --> 00:03:21.220
Cambia eso.

60
00:03:22.100 --> 00:03:24.220
Elimine la coma y cambie en la pantalla.

61
00:03:24.590 --> 00:03:27.310
El ancho de Numskull es igual a 60, como puede ver allí.

62
00:03:28.060 --> 00:03:32.350
Al igual que con el parámetro para seguir valores, no ponemos un espacio a ambos lados de las Águilas.

63
00:03:32.680 --> 00:03:34.000
Y puedes decir que eso solucionó el error.

64
00:03:34.720 --> 00:03:35.800
Si ejecuto el programa ahora.

65
00:03:39.010 --> 00:03:40.420
Puedes decir que aún funciona.

66
00:03:41.020 --> 00:03:46.060
En los últimos videos, hemos utilizado nuestros dos parámetros con argumentos posicionales y argumentos de palabras clave.

67
00:03:46.540 --> 00:03:48.880
Ese es el tipo de parámetro predeterminado en Python.

68
00:03:49.810 --> 00:03:54.790
Mencioné eso brevemente en una diapositiva anterior cuando presentamos la idea de los argumentos posicionales.

69
00:03:55.360 --> 00:03:57.040
Echemos un vistazo rápido a algunos documentos.

70
00:03:58.090 --> 00:04:00.820
La referencia del idioma es un poco pesada para este curso temprano.

71
00:04:01.090 --> 00:04:03.670
Entonces, lo que voy a hacer es ir a una entrada en el glosario de Python.

72
00:04:07.670 --> 00:04:13.250
Hasta ahora, hemos utilizado el primer tipo de parámetros, parámetros posicionales o de palabras clave.

73
00:04:14.350 --> 00:04:19.100
Hay un valor predeterminado y puede pasar los argumentos, la posición de poder o usar su nombre, como acabamos

74
00:04:19.100 --> 00:04:24.770
de hacer con la pantalla con parámetros en nuestro código, los argumentos posicionales o de palabras clave son la única parte superior

75
00:04:24.770 --> 00:04:26.210
del uso de la sección.

76
00:04:26.610 --> 00:04:31.070
Y de hecho, durante la mayor parte del curso, cubrirán estos dos últimos más tarde.

77
00:04:31.190 --> 00:04:34.850
Esos son los tipos de palabras clave var posicionales var en la lista.

78
00:04:35.450 --> 00:04:36.440
Los dos restantes.

79
00:04:37.590 --> 00:04:38.880
En realidad están bastante avanzados.

80
00:04:39.300 --> 00:04:44.340
De hecho, los parámetros posicionales solo se convirtieron en parte del lenguaje en Python tres punto ocho.

81
00:04:44.610 --> 00:04:46.100
Echa un vistazo a PIP 570.

82
00:04:46.140 --> 00:04:49.200
Si quieres leer por qué se agregaron y por qué querrás usarlos.

83
00:04:49.620 --> 00:04:51.210
Pero como dije, están bastante avanzados.

84
00:04:51.480 --> 00:04:54.240
No diría usarlos a menos que estuviera escribiendo su propia API.

85
00:04:54.570 --> 00:04:57.000
Y para entonces, toda esta documentación tendrá sentido.

86
00:04:59.190 --> 00:05:04.370
Como dije, es mucho que ver en los últimos videos que ha visto que tiene parámetros definidos

87
00:05:04.370 --> 00:05:07.220
y ha pasado los argumentos correspondientes al invocar funciones.

88
00:05:07.760 --> 00:05:13.100
También hemos aprendido sobre documentos posicionales donde los argumentos que utilizó para proporcionar un valor para el

89
00:05:13.100 --> 00:05:14.750
parámetro en la misma posición.

90
00:05:15.370 --> 00:05:21.230
También puede usar los parámetros como parámetros de palabras clave especificando el nombre del parámetro cuando pasa el

91
00:05:21.230 --> 00:05:21.760
argumento.

92
00:05:24.150 --> 00:05:28.050
Puede que no haya sido obvio, pero eso significa que podría pasar los argumentos en un orden

93
00:05:28.350 --> 00:05:30.420
diferente al orden en que se declaran los parámetros.

94
00:05:30.810 --> 00:05:31.980
Y veremos un ejemplo de eso.

95
00:05:32.700 --> 00:05:35.680
El tipo predeterminado de parámetros en Python son posicionales.

96
00:05:35.760 --> 00:05:37.110
O parámetros de palabras clave.

97
00:05:37.530 --> 00:05:42.380
Puede pasar los argumentos por posición o puede proporcionar el nombre del parámetro como la palabra clave.

98
00:05:42.950 --> 00:05:44.040
Incluso puedes mezclar los dos.

99
00:05:44.310 --> 00:05:46.620
Pero hay algunas reglas al respecto, como se dirá.

100
00:05:48.640 --> 00:05:52.960
Muy bien, termine el video aquí antes de que practiquemos más las funciones y los parámetros.

101
00:05:53.290 --> 00:05:55.390
Quiero hablar sobre documentar sus funciones.

102
00:05:55.840 --> 00:05:57.040
Eso es muy importante

103
00:05:57.280 --> 00:05:59.910
Cuando otras personas llamarán a las funciones que has escrito.

104
00:06:00.550 --> 00:06:02.890
Pero también tiene otro propósito importante.

105
00:06:03.400 --> 00:06:08.200
Si escribe la documentación antes de escribir sus funciones, encontrará que tendrá una idea

106
00:06:08.200 --> 00:06:10.780
más clara sobre cómo funcionará su función.

107
00:06:10.960 --> 00:06:14.830
Documentar su comportamiento te obligará a pensar en lo que va a hacer.

108
00:06:15.560 --> 00:06:17.350
Un poco de pensamiento siempre es algo bueno.

109
00:06:17.920 --> 00:06:18.950
Nos vemos en el próximo video.
