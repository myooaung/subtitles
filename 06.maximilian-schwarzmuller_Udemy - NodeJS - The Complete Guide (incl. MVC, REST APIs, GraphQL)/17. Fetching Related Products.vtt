WEBVTT
1
00:00:02.400 --> 00:00:07.880
We learn about associations and that we get these cool magic methods here about which you can learn

2
00:00:07.880 --> 00:00:09.480
more in the official docs of course,

3
00:00:09.530 --> 00:00:14.860
now which implications does this have for our other admin.js actions?

4
00:00:14.930 --> 00:00:20.690
Well for get added product, there's no implication, we fetch a single product here and we can do this as before,

5
00:00:20.930 --> 00:00:22.940
we don't really care about the user here,

6
00:00:23.090 --> 00:00:29.240
you could argue that you only want to find products for the currently logged in user though. Then what

7
00:00:29.240 --> 00:00:37.370
you actually want to do is you want to use request user get products

8
00:00:40.500 --> 00:00:49.340
and there define where ID equals prods ID to also have that filter and then you can chain your normal

9
00:00:49.340 --> 00:00:57.380
then call and so on. And with that if you click on edit, we see an empty form because it generally did work

10
00:00:57.410 --> 00:01:03.050
and we see the SQL statement here where it simply looks for a product with the user id one and that

11
00:01:03.050 --> 00:01:07.700
is not the condition we wrote, we're responsible for this part where it then also narrows down the product

12
00:01:07.700 --> 00:01:12.910
ID but user ID one was added by sequelize because we use get products on the user

13
00:01:13.250 --> 00:01:17.780
but keep in mind here we get back an array even if it only holds one element,

14
00:01:17.780 --> 00:01:25.790
so we got products and therefore we know that one product, the one we are interested in will always

15
00:01:25.790 --> 00:01:27.410
be the first element,

16
00:01:27.770 --> 00:01:30.670
so we have to store that separately in a new constant

17
00:01:30.860 --> 00:01:33.650
and now if we reload this, this works.

18
00:01:33.680 --> 00:01:40.580
So this is a more elegant way, though we could also still only use the ID if we want to use the old approach.

19
00:01:41.750 --> 00:01:45.420
If we move on for post editing a product, there

20
00:01:45.450 --> 00:01:51.530
I'm fine with finding the product like this because if we are at this point, I assume we already have a

21
00:01:51.530 --> 00:01:53.130
product for this user only,

22
00:01:53.300 --> 00:01:56.280
so if I update it like this, it's fine.

23
00:01:57.100 --> 00:02:02.680
Now get product should change, instead of finding all products, I want to find products for this user,

24
00:02:02.860 --> 00:02:07.800
so I'll call get products like that which will give me all products for this user

25
00:02:08.230 --> 00:02:10.220
and then I can render them here.

26
00:02:10.540 --> 00:02:17.080
So if I now go to admin products, I see the products for this user here because this select statement

27
00:02:17.080 --> 00:02:24.200
gets executed where we narrow down the user to the user with the ID one and post delete product,

28
00:02:24.250 --> 00:02:28.140
here again we could only find a product for this user with this ID,

29
00:02:28.180 --> 00:02:30.170
I'm fine with this setup though.

30
00:02:31.060 --> 00:02:34.450
So some tiny changes showing you more of that power

31
00:02:34.450 --> 00:02:38.970
sequelize gives you for associated models.

32
00:02:38.970 --> 00:02:44.540
Let's next have a look at how we can reintroduce the cart to our application.
