1
00:00:02,360 --> 00:00:05,540
Dasar buat post mutation sudah ada.

2
00:00:05,590 --> 00:00:12,580
Tetapi sekarang kita harus dapat memvalidasi token kami dan mengekstrak pengguna dari itu dan itu tidak terlalu jauh tentang

3
00:00:12,580 --> 00:00:16,070
bagaimana kami melakukannya di API kami yang lain.

4
00:00:16,870 --> 00:00:25,150
Pertama-tama kita perlu memastikan bahwa kita mengirim token di header dari permintaan masuk kita dan jika kita melihat kode front end kita dan

5
00:00:25,150 --> 00:00:31,030
mereka berada di kaki J. S. di situlah kami membuat

6
00:00:31,030 --> 00:00:34,360
posting baru, kami melakukannya dan menyelesaikannya di sana.

7
00:00:34,360 --> 00:00:41,100
Kami memang melampirkan token kami ke permintaan keluar.

8
00:00:41,160 --> 00:00:45,790
Dan ini masih salah, Anda di sini, tetapi inilah akhirnya kami akan mengirim permintaan.

9
00:00:46,050 --> 00:00:47,780
Jadi kita akan memiliki token itu.

10
00:00:47,790 --> 00:00:54,770
Memang Anda l dan sebelumnya dan sisanya API yang kami gunakan adalah semua middleware untuk mendapatkan token kami dari

11
00:00:54,870 --> 00:01:01,380
sana ekstrak divalidasi ke data pengguna dan menambahkan data pengguna ke ID pengguna ke objek permintaan.

12
00:01:01,380 --> 00:01:03,320
Dan itu cukup dekat dengan apa yang ingin saya lakukan.

13
00:01:03,320 --> 00:01:06,380
Sekarang saya hanya akan mengubah sedikit.

14
00:01:06,420 --> 00:01:10,320
Saya akan menamainya karena bukan hanya ada untuk memvalidasi otentikasi.

15
00:01:10,320 --> 00:01:16,640
Ini juga akan memberi saya data pengguna tetapi itu adalah sesuatu yang murni kosmetik di sana.

16
00:01:16,640 --> 00:01:20,500
Saya akan tetap Pertama-tama melepaskan Hetter saya.

17
00:01:20,660 --> 00:01:27,480
Saya akan memeriksa apakah sudah diatur dan jika tidak diatur maka saya akan melakukan sesuatu yang berbeda meskipun saya

18
00:01:27,480 --> 00:01:30,180
tidak akan melakukan kesalahan pada permintaan saya.

19
00:01:30,180 --> 00:01:35,840
Semua set ke false sehingga saya bisa menangani ini di dalam resolver saya.

20
00:01:36,120 --> 00:01:42,360
Dan kemudian saya akan kembali berikutnya untuk melanjutkan dengan malware berikutnya dan tidak menjalankan kode di sini.

21
00:01:42,360 --> 00:01:44,890
Itu sebabnya semua itu menjadi pernyataan balik.

22
00:01:45,090 --> 00:01:51,990
Jika kita memiliki semua pÃ¤chter, kita melanjutkan, kita mengekstrak token seperti sebelum kita mencoba mendekodekannya seperti

23
00:01:51,990 --> 00:01:52,810
sebelumnya.

24
00:01:52,830 --> 00:01:59,170
Pastikan kunci ini di sini cocok dengan stickie yang Anda gunakan di resolver Anda untuk menandatangani token byte.

25
00:01:59,190 --> 00:02:03,450
Jika keduanya tidak cocok, Anda tidak memiliki peluang untuk memvalidasinya atau token.

26
00:02:03,590 --> 00:02:07,740
Kami menangkap kesalahan tetapi jika saya mendapatkan kesalahan saya sekali lagi tidak membuangnya.

27
00:02:07,740 --> 00:02:15,440
Sebagai gantinya saya mengatakan permintaan tidak benar dan kembali tahun depan untuk tidak mengeksekusi kode kesalahan.

28
00:02:15,780 --> 00:02:17,960
Jika token yang didekodekan tidak terdefinisi.

29
00:02:18,030 --> 00:02:20,430
Saya juga Frot no error gantinya.

30
00:02:20,430 --> 00:02:31,340
Sekali lagi di sini saya set off ke false dan kembali berikutnya dan jika saya berhasil melewati semua cek ini saya akan mendapatkan ID pengguna saya

31
00:02:31,340 --> 00:02:35,420
dari token decoder dan itu akan berangkat ke true.

32
00:02:35,420 --> 00:02:39,800
Jadi itu adalah properti baru atas permintaan dan saya panggil selanjutnya.

33
00:02:40,190 --> 00:02:43,680
Sekarang apakah tweak middleware adalah sesuatu yang saya tambahkan aplikasi.

34
00:02:43,710 --> 00:02:47,480
Ya, sebelum graft saya, Anda titik akhir.

35
00:02:47,840 --> 00:02:57,670
Jadi di sini saya hanya akan mengimpornya dengan meminta dari malware off.

36
00:02:57,670 --> 00:03:07,780
Ini adalah middleware saya dan saya akan menambahkannya di sini seperti pembatalan data di mana sekarang akan berjalan pada setiap permintaan yang mencapai titik

37
00:03:07,780 --> 00:03:11,830
akhir CULE grafik saya tetapi tidak akan menolak permintaan.

38
00:03:11,830 --> 00:03:17,950
Jika tidak ada token, satu-satunya hal yang akan dilakukan adalah itu akan menjadi false dan kemudian saya

39
00:03:17,950 --> 00:03:25,200
dapat memutuskan di resolver saya apakah saya ingin melanjutkan atau tidak dan ini adalah langkah selanjutnya dalam resolvers saya di sana.

40
00:03:25,420 --> 00:03:28,290
Saya tidak peduli sering membuat pengguna dan sebagainya.

41
00:03:28,330 --> 00:03:33,850
Jadi di sana saya tidak akan melakukan apa pun dengan informasi itu di buat posting di sini.

42
00:03:34,120 --> 00:03:37,840
Pertama-tama saya akan memeriksa apakah permintaan tidak aktif.

43
00:03:37,870 --> 00:03:42,940
Jika itu tidak benar karena saya tahu hei, pengguna tidak diautentikasi.

44
00:03:43,030 --> 00:03:50,440
Saya tentu tidak ingin memberikan akses untuk membuat posting jadi jika pengguna tidak diautentikasi di

45
00:03:50,440 --> 00:03:55,690
sini maka saya akan membuat kesalahan baru yang tidak diautentikasi.

46
00:04:00,820 --> 00:04:07,750
Dan saya akan menetapkan kode katakanlah 400 ratus dan bahwa saya akan membuang kesalahan saya dan karena itu

47
00:04:07,780 --> 00:04:11,480
recode di resolver ini di sini tidak akan dijalankan.

48
00:04:11,870 --> 00:04:17,310
Jika pengguna diautentikasi kami dapat melanjutkan maka kami memvalidasi input dan kemudian

49
00:04:17,310 --> 00:04:24,510
sebelum kami membuat posting kami sekarang juga bisa mendapatkan pengguna dari database karena ingat bahwa

50
00:04:24,510 --> 00:04:34,760
kami menyimpan id pengguna dalam permintaan kami juga jadi di bawah pemecah sebelum membuat posting sekarang saya bisa mendapatkan pengguna saya dengan

51
00:04:34,760 --> 00:04:38,980
menunggu pengguna menemukan satu atau tidak menemukan satu.

52
00:04:38,980 --> 00:04:45,730
Saya benar-benar dapat menggunakan find secara ideal dan saya berani melewati dan meminta id pengguna jadi hal yang saya simpan

53
00:04:45,910 --> 00:04:46,950
di sini.

54
00:04:49,190 --> 00:05:00,270
Saya meneruskannya dan sekarang saya mendapatkan pengguna jika saya tidak mendapatkan pengguna di sini maka ada sesuatu yang salah dan saya akan

55
00:05:00,420 --> 00:05:01,440
melempar kesalahan.

56
00:05:01,450 --> 00:05:09,200
Jadi di sini pengguna yang tidak valid mungkin mengatur kode ke 401 dan Frode itu.

57
00:05:09,250 --> 00:05:13,230
Tetapi jika kita berhasil melewati itu, kita memiliki objek pengguna yang dengannya kita dapat bekerja.

58
00:05:13,450 --> 00:05:19,410
Dan sekarang di pos yang baru dibuat saya dapat mengatur pencipta sama dengan pengguna saya yang diekstraksi.

59
00:05:19,510 --> 00:05:21,640
Jadi untuk pengguna yang saya

60
00:05:24,370 --> 00:05:32,260
dapatkan dari database setelah saya membuat posting saya sekarang juga dapat menggunakan pengguna itu dan x posting pengguna itu untuk mendorong

61
00:05:32,260 --> 00:05:34,990
posting yang dibuat ke daftar posting itu.

62
00:05:34,990 --> 00:05:38,880
Jadi untuk mengatur koneksi yang sekarang ini.

63
00:05:38,960 --> 00:05:45,080
Dan sekarang kita perlu bekerja di ujung depan juga mengirim permintaan ke titik desain sehingga kita bisa melihat

64
00:05:45,110 --> 00:05:46,160
mereka dalam aksi.
