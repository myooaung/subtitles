WEBVTT
1
00:00:02.180 --> 00:00:04.040
So let's dive into nodejs

2
00:00:04.060 --> 00:00:12.320
now and what better way to start with it then of course from scratch with its basics. In this module,

3
00:00:12.320 --> 00:00:15.440
you will learn how the web actually works.

4
00:00:15.440 --> 00:00:17.590
This will only be a brief refresher

5
00:00:17.660 --> 00:00:24.260
but since we will of course use nodejs in this course to build a server, a web application and write

6
00:00:24.260 --> 00:00:31.850
server side code, we obviously have to make sure we all understand how the web works and which role nodejs

7
00:00:31.860 --> 00:00:34.970
plays in that bigger picture.

8
00:00:34.970 --> 00:00:37.030
Now this will only be a brief refresher,

9
00:00:37.040 --> 00:00:40.150
obviously we'll then dive into creating such a nodejs

10
00:00:40.180 --> 00:00:42.260
server and running

11
00:00:42.290 --> 00:00:42.780
nodejs

12
00:00:42.880 --> 00:00:46.030
code when requests are reaching that server

13
00:00:46.100 --> 00:00:48.850
and of course, we'll also send back responses.

14
00:00:49.190 --> 00:00:56.840
For this we'll also use node core modules, like the file system module you saw in the first course section.

15
00:00:57.050 --> 00:01:03.350
We'll use another very important core module in this section which is related to creating such a

16
00:01:03.350 --> 00:01:04.270
web server.

17
00:01:04.460 --> 00:01:10.490
Now as I already mentioned, an important part of creating a web server is of course that we're able to

18
00:01:10.490 --> 00:01:16.790
handle requests and responses so that you learned how you can use nodejs and the many features that

19
00:01:16.790 --> 00:01:21.740
offers to accept incoming requests and do something with them,

20
00:01:21.740 --> 00:01:26.260
for example parse them and how to send back responses,

21
00:01:26.270 --> 00:01:30.810
these are crucial things you've got to know. Now related to all of that,

22
00:01:30.860 --> 00:01:39.290
we'll learn how nodejs uses asynchronous code and a concept called the event loop to stay reactive

23
00:01:39.320 --> 00:01:45.550
and ensure that our script never slows down and always works just fine.

24
00:01:45.830 --> 00:01:48.350
So with that, let's dive into nodejs.
