WEBVTT
1
00:00:02.110 --> 00:00:04.590
Itu banyak konten pada grafik QOL.

2
00:00:04.650 --> 00:00:09.420
Dan seperti yang saya sebutkan, Anda dapat mengisi seluruh kursus hanya pada grafik 2l.

3
00:00:09.610 --> 00:00:15.730
Dan memang ada kursus di sana kan dokumen resmi Anda pada grafik Cuil dot org adalah tempat yang bagus untuk menyelam

4
00:00:15.730 --> 00:00:17.830
lebih dalam karena mereka benar-benar baik.

5
00:00:17.830 --> 00:00:23.170
Dan di sana Anda dapat mempelajari lebih lanjut tentang semua fitur penawaran grafis termasuk fitur-fiturnya yang lebih

6
00:00:23.800 --> 00:00:25.570
canggih dalam modul pengantar ini.

7
00:00:25.570 --> 00:00:31.270
Mudah-mudahan saya memberi Anda gambaran yang baik tentang konsep-konsep inti grafis dan bagaimana Anda membangun API

8
00:00:31.300 --> 00:00:32.790
grafis dengan Node.

9
00:00:32.860 --> 00:00:40.540
Dan dalam hal ini dengan kerangka kerja pengejaran cepat, Anda akan belajar bahwa grafis memungkinkan Anda atau merupakan teknik

10
00:00:40.570 --> 00:00:47.380
untuk membangun API independen klien stateless seperti yang kami lakukan dengan API lainnya tetapi menawarkan fleksibilitas

11
00:00:47.380 --> 00:00:54.810
yang lebih tinggi daripada yang biasanya dilakukan mata API. karena Anda mengekspos bahasa yang sangat khusus ke klien Anda.

12
00:00:54.970 --> 00:01:00.550
API bertahap terdiri dari kueri yang akan Anda bandingkan dengan permintaan dan istirahat lainnya.

13
00:01:00.550 --> 00:01:08.560
API adalah mutasi, ayah akan menjadi patch port posting Anda dan menghapus permintaan di sisa mata Anda dan mungkin

14
00:01:08.560 --> 00:01:09.810
semua langganan.

15
00:01:09.820 --> 00:01:12.040
Sesuatu yang tidak saya bahas dalam modul ini.

16
00:01:12.090 --> 00:01:16.950
Anda menggunakan konstruksi ini untuk bertukar data dan mengelola data.

17
00:01:17.170 --> 00:01:23.470
Dan hal penting dan karakteristik tentang mata API API graft sudah mati.

18
00:01:23.470 --> 00:01:30.520
Mereka hanya mengekspos satu titik akhir ke klien dan itu mengirim permintaan untuk memangkas grafik.

19
00:01:30.530 --> 00:01:35.320
Yah biasanya itu harus menjadi permintaan pos meskipun itu adalah sesuatu yang tidak dapat Anda hindari.

20
00:01:35.590 --> 00:01:42.130
Dan semua permintaan diarahkan ke sana dan kemudian di badan permintaan dari permintaan posting Anda menggunakan digraf

21
00:01:42.180 --> 00:01:46.190
semua bahasa Kuri untuk menggambarkan permintaan yang ingin Anda jalankan.

22
00:01:46.270 --> 00:01:52.740
Atau mutasi yang ingin Anda lakukan tidak server mem-parsing ekspresi permintaan masuk dan kemudian memanggil resolver

23
00:01:52.750 --> 00:01:58.050
yang sesuai untuk mengeksekusi logika yang Anda tulis dan mengembalikan data yang sesuai.

24
00:01:58.120 --> 00:02:05.120
Atau lakukan manipulasi grafik QL yang sesuai dan yang terpenting tentu saja tidak terbatas bereaksi.

25
00:02:05.120 --> 00:02:07.000
Anda meminta aplikasi hari ini.

26
00:02:07.000 --> 00:02:13.150
Anda dapat menggunakannya dengan aplikasi ujung depan apa pun yang dibutuhkan aplikasi seluler, aplikasi satu halaman dengan kerangka apa pun atau apa

27
00:02:13.270 --> 00:02:14.650
pun yang Anda miliki.

28
00:02:14.650 --> 00:02:16.900
Itu tidak terbatas untuk bereaksi.

29
00:02:17.170 --> 00:02:24.070
Sekarang ketika kita membandingkannya dengan istirahat maka kita harus mengerti bahwa resep tidak sepenuhnya lebih buruk.

30
00:02:24.130 --> 00:02:28.130
Mereka mungkin masih menjadi solusi sempurna untuk proyek Anda selanjutnya.

31
00:02:28.150 --> 00:02:34.200
Mereka sangat bagus untuk persyaratan data statis sehingga Anda tidak perlu fleksibilitas tambahan itu.

32
00:02:34.270 --> 00:02:41.890
Dan kemudian Anda memiliki cara yang sangat terstruktur dan eksplisit untuk mendefinisikan titik akhir Anda dan

33
00:02:42.130 --> 00:02:43.420
mendefinisikan kemungkinan.

34
00:02:43.450 --> 00:02:50.620
API Anda menawarkannya untuk unggahan file atau skenario di mana Anda tidak perlu fleksibilitas itu karena Anda selalu

35
00:02:50.620 --> 00:02:53.000
mendapatkan jenis data yang sama.

36
00:02:53.080 --> 00:02:59.260
Di sana istirahat mata Anda mungkin masih menjadi solusi yang sempurna dan sekarang ada graft Anda mungkin lebih

37
00:02:59.320 --> 00:03:05.750
baik karena Anda mendapatkan fleksibilitas yang lebih tinggi karena mati x posting sangat lama yang dapat digunakan klien Anda.

38
00:03:05.890 --> 00:03:12.790
Dan saya juga ingin menyoroti bahwa istirahat bouffe dan mata API Rathcoole dapat diimplementasikan dengan kerangka kerja apa pun dan

39
00:03:12.910 --> 00:03:16.920
sebenarnya bahkan dengan bahasa sisi server apa pun yang tidak terbatas.

40
00:03:16.930 --> 00:03:18.730
Tidak jenius sama sekali.

41
00:03:18.730 --> 00:03:19.710
Tidak jenius

42
00:03:19.810 --> 00:03:24.370
Anda tentu tidak terbatas pada pengungkapan dan itu sangat penting.

43
00:03:24.370 --> 00:03:30.040
Konsep inti yang Anda pelajari di sini dan banyak logika yang Anda terapkan sebenarnya akan sama tidak peduli kerangka mana

44
00:03:30.040 --> 00:03:34.010
yang Anda gunakan atau tidak peduli bahasa sisi server mana yang Anda gunakan.
