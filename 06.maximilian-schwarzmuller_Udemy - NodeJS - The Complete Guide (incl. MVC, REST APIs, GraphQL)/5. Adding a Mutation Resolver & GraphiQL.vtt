WEBVTT
1
00:00:02.620 --> 00:00:04.910
Kami harus membuat skema pengguna.

2
00:00:04.930 --> 00:00:11.350
Sekarang mari kita bekerja pada resolver yang memungkinkan kita untuk membuat pengguna untuk Dad dan file resolvers

3
00:00:11.770 --> 00:00:14.220
semua sebagai buat pengguna seperti itu.

4
00:00:14.410 --> 00:00:17.700
Dan sekarang di sini saya benar-benar mendapatkan beberapa argumen.

5
00:00:17.740 --> 00:00:21.130
Anda semua melakukannya di kueri tempat Anda mendapatkan data segera.

6
00:00:21.190 --> 00:00:26.290
Di sana Anda juga bisa mendapatkan argumen misalnya ketika ingin mengambil pos tertentu dengan

7
00:00:26.290 --> 00:00:27.180
ID tertentu.

8
00:00:27.350 --> 00:00:29.660
Ini argumen saya juga tidak ada pasca bayar.

9
00:00:29.770 --> 00:00:31.490
Tetapi data input pengguna.

10
00:00:31.750 --> 00:00:34.900
Argumen pertama saya akan ada objek R X.

11
00:00:34.900 --> 00:00:38.940
Ada argumen kedua yang tersedia yaitu meminta byte pergi.

12
00:00:39.070 --> 00:00:47.410
Ini akan menjadi penting nanti sekarang pada objek Ark yang masuk saya dapat mengambil semua data yang saya temukan dalam skema

13
00:00:47.410 --> 00:00:48.240
saya.

14
00:00:48.340 --> 00:00:52.150
Jadi nama email dan kata sandi itulah data argumen saya.

15
00:00:52.180 --> 00:00:55.440
Jadi itulah yang bisa saya ambil dari objek Ark.

16
00:00:55.570 --> 00:00:57.550
Tidak langsung pada Ark.

17
00:00:57.550 --> 00:01:03.940
Sebaliknya X kita akan memiliki bidang input pengguna karena X kita sebenarnya akan menjadi objek yang berisi semua argumen

18
00:01:03.940 --> 00:01:05.990
yang diteruskan ke fungsi itu.

19
00:01:06.010 --> 00:01:08.050
Di sini hanya satu tetapi bisa lebih.

20
00:01:08.170 --> 00:01:15.090
Jadi args akan memiliki bidang input pengguna dan kemudian akan ada nama email dan kata sandi sehingga saya bisa mengambilnya

21
00:01:15.100 --> 00:01:22.760
Misalnya saya dapat mengambil email saya dengan mengetikkan input pengguna R X karena dalam skema saya saya beri nama bidang ini

22
00:01:22.760 --> 00:01:27.600
di sini input pengguna dan pada input pengguna saya bisa mendapatkan email.

23
00:01:27.700 --> 00:01:30.960
Jadi Dot email seperti ini.

24
00:01:31.050 --> 00:01:32.320
Ini adalah salah satu opsi.

25
00:01:32.490 --> 00:01:39.330
Kita semua dapat menggunakan perusakan untuk mendapatkan input pengguna dari objek args saya.

26
00:01:39.330 --> 00:01:45.880
Dan kemudian email tersebut hanya akan menjadi email input pengguna.

27
00:01:45.890 --> 00:01:49.550
Jadi sedikit lebih pendek sekarang kita akan menggunakan ini sebentar lagi.

28
00:01:49.550 --> 00:01:52.860
Pertama-tama mari kita mengimpor model pengguna luwak.

29
00:01:52.910 --> 00:01:55.400
Karena saya akan tetap berinteraksi dengan database tentunya.

30
00:01:55.730 --> 00:02:06.490
Jadi saya akan memerlukan pengguna model dan kemudian di sini saya ingin menggunakan async menunggu sintaks untuk menggunakan yang saya perlu mengubah

31
00:02:06.490 --> 00:02:09.230
cara saya menulis metode ini.

32
00:02:09.430 --> 00:02:13.600
Saya menambahkan titik dua setelah membuat pengguna dan menggunakan kata kunci fungsi.

33
00:02:13.600 --> 00:02:16.440
Dan sekarang saya dapat menambahkan async di depannya.

34
00:02:16.840 --> 00:02:20.310
Jadi sekarang saya dapat menggunakan berat tunggal yang murni opsional sekalipun.

35
00:02:20.380 --> 00:02:26.800
Anda juga bisa menggunakan pendekatan normal lalu menangkap dengan janji Anda sekarang dan di sana.

36
00:02:26.860 --> 00:02:33.790
Pertama-tama saya ingin mencari tahu apakah pengguna itu sudah ada dan untuk itu saya akan mendapatkan

37
00:02:33.790 --> 00:02:43.030
pengguna yang sudah ada dengan menunggu seorang pengguna menemukan satu di mana email dalam database cocok dengan email yang dimasukkan dalam input

38
00:02:43.030 --> 00:02:43.820
pengguna.

39
00:02:44.200 --> 00:02:52.060
Sekarang satu catatan super penting jika Anda tidak menggunakan satu bobot, Anda harus mengembalikan kueri menemukan satu yang sedang Anda

40
00:02:52.060 --> 00:02:57.250
jalankan di sini kemudian Anda akan menambahkannya karena jika Anda tidak mengembalikan janji

41
00:02:57.250 --> 00:03:03.970
Anda dalam grafik resolver kill tidak menunggu sampai selesai ketika menggunakan async, menunggu secara otomatis dikembalikan untuk

42
00:03:03.970 --> 00:03:04.750
Anda.

43
00:03:04.780 --> 00:03:07.520
Kami tidak melihat pernyataan pengembalian di sini tetapi ada di sana.

44
00:03:07.720 --> 00:03:09.240
Jadi itu sangat penting.

45
00:03:10.050 --> 00:03:16.450
Jadi sekarang saya mendapatkan pengguna yang ada dan jika saya memiliki pengguna yang sudah ada, maka saya tahu saya tidak

46
00:03:16.450 --> 00:03:17.910
ingin membuat yang baru.

47
00:03:17.920 --> 00:03:29.540
Jadi dalam hal ini saya akan membuat era baru atau dengan pesan pengguna sudah ada dan saya akan membuang kesalahan mati dan saya akan

48
00:03:29.540 --> 00:03:34.900
kembali ke penanganan kesalahan dan konsep Anda semua dalam kuliah nanti.

49
00:03:35.540 --> 00:03:40.520
Jika saya melakukannya, Anda tidak akan memiliki pengguna yang ada dengan alamat email itu.

50
00:03:40.520 --> 00:03:46.280
Kemudian saya bisa melanjutkan dengan menyimpannya dan logika untuk itu mirip dengan yang ada di off controller saya.

51
00:03:46.280 --> 00:03:49.760
Kita harus tersandung hash ke kata sandi.

52
00:03:49.760 --> 00:03:59.400
Jadi dalam fungsi Risaldar saya di sini izinkan saya mengimpor tersandung di atas dan kemudian di sana kita

53
00:03:59.520 --> 00:04:08.180
dapat menggunakan metode hash untuk hash kata sandi input pengguna dengan putaran salting kedua belas.

54
00:04:08.190 --> 00:04:10.140
Sekarang lagi saya akan menggunakan async menunggu.

55
00:04:10.350 --> 00:04:15.690
Jadi saya akan mendapatkan kata sandi hash saya akhirnya menunggu menunggu berhari-hari.

56
00:04:16.780 --> 00:04:26.230
Sekarang setelah saya dapat membuat objek pengguna baru dan kemudian objek pengguna itu akan

57
00:04:26.230 --> 00:04:33.010
saya sampaikan ke email yang merupakan email masukan pengguna.

58
00:04:33.050 --> 00:04:37.940
Saya juga akan meneruskan kata sandi yang merupakan kata sandi hash saya.

59
00:04:37.970 --> 00:04:45.620
Sekarang saya harus menyimpannya ke database dan saya peduli tentang pengguna yang dibuat sehingga semua disimpan

60
00:04:45.620 --> 00:04:55.420
di disimpan atau yang dibuat pengguna dalam konstan oleh menunggu untuk pengguna yang aman dan yang hanya akan dikembalikan pada objek

61
00:04:55.600 --> 00:04:56.320
pengguna.

62
00:04:56.320 --> 00:05:04.440
Itu dibuat sekarang di sini akhirnya saya harus mengembalikan beberapa data dan kami melihat data dalam skema kami, kami perlu

63
00:05:04.440 --> 00:05:05.790
mengembalikan objek pengguna.

64
00:05:08.160 --> 00:05:17.450
Untuk itu di sini saya akan mengembalikan bidang dokumen garis bawah pengguna yang dibuat yang berisi data pengguna saja tanpa semua data

65
00:05:17.480 --> 00:05:18.310
meta.

66
00:05:18.320 --> 00:05:24.380
Mongoose akan menambahkan Weiss kami dan itu akan menimpa bidang ID garis bawah dengan menambahkannya

67
00:05:24.380 --> 00:05:28.930
sebagai properti terpisah dan karenanya akan menimpa yang saya tarik keluar.

68
00:05:29.000 --> 00:05:34.450
Garis bawahi dokumen karena saya perlu mengonversinya dari bidang id objek ke bidang string.

69
00:05:34.550 --> 00:05:36.230
Kalau tidak, itu akan gagal.

70
00:05:36.350 --> 00:05:43.210
Jadi di sini saya akan mengakses ID garis bawah pengguna yang dibuat dan kemudian menelepon ke string.

71
00:05:43.220 --> 00:05:44.490
Ini bukan pengguna Optik.

72
00:05:44.520 --> 00:05:47.430
Saya kembali ketika saya membuat pengguna.

73
00:05:47.560 --> 00:05:52.740
Sekarang satu catatan penting sebelum kita benar-benar mencoba aplikasi fronted R.

74
00:05:53.140 --> 00:06:00.130
Kita tentu saja dapat mencobanya dari dalam tukang pos tetapi ada solusi yang bahkan lebih nyaman untuk

75
00:06:00.130 --> 00:06:02.830
menguji ini sebelum saya tunjukkan solusi.

76
00:06:02.830 --> 00:06:05.040
Biarkan saya pertama-tama membersihkan database saya.

77
00:06:05.110 --> 00:06:06.780
Begitu juga kita mulai dari awal.

78
00:06:07.000 --> 00:06:11.850
Dan untuk itu saya akan menghapus kiriman dan koleksi pengguna saya di sini.

79
00:06:12.010 --> 00:06:14.040
Itu akan dibuat dengan cepat lagi.

80
00:06:14.050 --> 00:06:19.730
Setelah saya mendapatkan data untuk dimasukkan dan saya hanya ingin menghapus semua entri yang saya miliki sejauh ini.

81
00:06:19.780 --> 00:06:21.510
Jadi sekarang saya harus membersihkan database.

82
00:06:21.550 --> 00:06:27.550
Izinkan saya menunjukkan kepada Anda bahwa pendekatan yang lebih sederhana yang saya maksudkan untuk menguji adalah mutasi.

83
00:06:27.550 --> 00:06:34.920
Saya dapat kembali ke aperture Ya pada kode ujung belakang dan di sana saya mendaftar atau mengatur titik

84
00:06:35.000 --> 00:06:38.940
akhir grafis saya selain mengatur skema dan nilai root.

85
00:06:38.950 --> 00:06:44.590
Anda juga dapat mengatur grafik tertulis grafik IQ L ke true.

86
00:06:44.920 --> 00:06:50.080
Ini memberi Anda alat khusus dan ini adalah alasan mengapa saya tidak mendengarkan permintaan posting

87
00:06:50.080 --> 00:06:53.720
hanya di sini karena sekarang dengan server Anda yang berjalan.

88
00:06:53.890 --> 00:07:00.910
Coba kunjungi host lokal 880 slash RAF ke L dan ini akan mengirimkan permintaan dapatkan jika Anda memasukkan sesuatu di

89
00:07:00.910 --> 00:07:06.940
browser di sini Anda mengirim permintaan dapatkan dan Anda akan mendapatkan layar ini yang memungkinkan Anda untuk

90
00:07:06.940 --> 00:07:08.790
bermain-main dengan API grafis Anda.

91
00:07:09.070 --> 00:07:17.040
Sekarang jika Anda kembali ke ujung Anda ke skema cepat tambahkan permintaan lagi ke skema Anda permintaan root

92
00:07:17.530 --> 00:07:18.010
Anda

93
00:07:20.680 --> 00:07:27.350
membuat tipe data Anda cepat nyata dan kemudian hanya ada seberapa rendah lagi seperti ini.

94
00:07:27.350 --> 00:07:28.730
Kita tidak perlu memutuskan untuk mati.

95
00:07:28.730 --> 00:07:30.220
Kami baru saja melakukan permintaan itu.

96
00:07:30.380 --> 00:07:36.410
Sekarang jika Anda memuat ulang antarmuka grafis Anda, Anda benar-benar memiliki dokumentasi di sana di sini di mana Anda

97
00:07:36.410 --> 00:07:42.290
melihat operasi yang dapat Anda lakukan tetapi Anda harus memiliki kueri yang ditetapkan untuk itu bahkan jika itu

98
00:07:42.290 --> 00:07:43.280
mengarah ke putih.

99
00:07:43.340 --> 00:07:50.030
Dan di sana Anda dapat mengkliknya untuk melihat mutasi mana yang Anda miliki data mana yang perlu Anda kirim dan seterusnya dan Anda

100
00:07:50.510 --> 00:07:52.320
tidak bisa hanya menjelajahinya di sini.

101
00:07:52.340 --> 00:07:58.770
Anda bahkan dapat mengirim data Anda sehingga setiap tahun Anda sekarang dapat membuat mutasi baru tentang hyping M-E Anda dan

102
00:07:58.770 --> 00:08:01.130
Anda bahkan akan mendapatkan semua penyelesaiannya.

103
00:08:01.130 --> 00:08:04.910
Lalu kurung kurawal dan sekarang dengan ruang kontrol.

104
00:08:05.010 --> 00:08:09.840
Anda bahkan mendapatkan saran jika Anda memiliki lebih dari satu objek tidak akan diisi secara otomatis tetapi Anda

105
00:08:09.860 --> 00:08:11.510
akan mendapatkan dropdown sebagai gantinya.

106
00:08:11.510 --> 00:08:15.270
Anda mendapatkan saran untuk apa yang dapat Anda jalankan dan di sini Anda sekarang.

107
00:08:15.280 --> 00:08:20.660
Ini membutuhkan input pengguna kemudian titik dua dan kemudian objek yang berisi data input pengguna.

108
00:08:20.960 --> 00:08:25.150
Dan di sana Anda lihat kami membutuhkan email yang dibungkus dengan tanda kutip ganda.

109
00:08:25.150 --> 00:08:26.060
Tes tes.

110
00:08:26.060 --> 00:08:36.060
Com kita katakanlah perlu nama yang bisa maksimal dan kita perlu kata sandi dan itu adalah penguji dan setelah itu kita

111
00:08:36.080 --> 00:08:38.010
tambahkan sepasang kurung kurawal.

112
00:08:38.120 --> 00:08:43.220
Dan sekarang kita dapat menemukan data yang ingin kita kembalikan yang ditawarkan sebagai cory dilakukan dengan ruang kontrol.

113
00:08:43.220 --> 00:08:44.400
Kami mendapat beberapa saran.

114
00:08:44.450 --> 00:08:51.860
Saya menyukai ide yang dihasilkan atau email dan sekarang Anda dapat menjalankan kueri ini dengan menekan tombol putar

115
00:08:51.860 --> 00:08:54.500
di sana atau menekan tombol enter.

116
00:08:54.510 --> 00:08:56.180
Anda juga melihat perintah di sini.

117
00:08:57.780 --> 00:09:01.180
Dan sekarang ini akan mengeksekusinya dan sepertinya berhasil.

118
00:09:01.380 --> 00:09:07.290
Anda melihat gagasan pengguna yang dibuat dan mengirim email dan jika Anda kembali ke Mangieri menjadi lulus dan

119
00:09:07.320 --> 00:09:08.250
Anda menyegarkannya.

120
00:09:08.250 --> 00:09:14.470
Di sini Anda harus memiliki koleksi pengguna kembali dan Anda melihat pengguna di sana dengan kata sandi hash.

121
00:09:14.550 --> 00:09:20.700
Jadi ini adalah alat yang hebat untuk bermain-main usang dan tukang pos karena Anda mendapat dukungan interaktif

122
00:09:20.700 --> 00:09:22.860
yang bagus dengan penyelesaian otomatis.

123
00:09:22.890 --> 00:09:29.310
Anda punya dokumentasi di sini dan Anda dapat menguji permintaan grafis Anda di alat ini dengan cara yang sangat

124
00:09:29.310 --> 00:09:29.980
bagus.

125
00:09:30.360 --> 00:09:37.550
Dan sekarang dengan itu mari kita lihat bagaimana kita dapat meningkatkan ini misalnya dengan menambahkan validasi sebelum kita kemudian

126
00:09:37.560 --> 00:09:40.200
juga menghubungkan aplikasi front end kita.
