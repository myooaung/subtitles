1
00:00:02,180 --> 00:00:03,980
So let's sum this module up

2
00:00:03,990 --> 00:00:04,700
now.

3
00:00:04,860 --> 00:00:10,950
First of all we had a brief refresher on how the web works and in general, it looks like this, client

4
00:00:11,030 --> 00:00:17,100
so the browser sends a request to the server, the server does some magic, reaches out to a database, works

5
00:00:17,100 --> 00:00:20,210
with files, sends back a response, can be

6
00:00:20,220 --> 00:00:25,200
html, can be something different and sends it back to the client, the browser which then can display

7
00:00:25,210 --> 00:00:25,520
that

8
00:00:25,560 --> 00:00:29,260
and that is the entire flow we also saw in this module.

9
00:00:29,400 --> 00:00:32,150
Now nodejs is the part that runs on the server

10
00:00:32,490 --> 00:00:38,980
and regarding its lifecycle, there is one important concept and that is that so-called event loop.

11
00:00:39,540 --> 00:00:46,500
Nodejs code runs in a non-blocking way which means we only register a bunch of callbacks and events

12
00:00:46,530 --> 00:00:49,790
and nodejs will eventually trigger that code

13
00:00:49,890 --> 00:00:57,510
once a certain task is done, so that the javascript threat is always free to handle new events, new incoming

14
00:00:57,510 --> 00:01:03,360
requests and stuff like that. And node program can exit if there is no more work to do

15
00:01:03,480 --> 00:01:10,470
but on a server, this well should at least never happen because create server registers an event listener

16
00:01:10,470 --> 00:01:12,740
for an event which is never done,

17
00:01:12,750 --> 00:01:19,320
if a new event is triggered, so if a new request is received, this does not mean that node unregisters the event

18
00:01:19,320 --> 00:01:19,930
listener

19
00:01:20,040 --> 00:01:25,580
instead we keep on listening for more requests and that is of course how a server should behave.

20
00:01:25,860 --> 00:01:31,200
So it's this cycle that's important to understand and that we have this loop which always keeps on going,

21
00:01:31,200 --> 00:01:37,470
keeps on waiting for new events and which does something when some event happens and then basically

22
00:01:37,470 --> 00:01:42,990
dispatches some actions to the operating system you could say for example

23
00:01:42,990 --> 00:01:46,380
and then again frees up the threat.

24
00:01:46,390 --> 00:01:53,070
Now this also involves a lot of asynchronous code which we saw with all the callbacks. The javascript

25
00:01:53,070 --> 00:01:54,930
code should be non-blocking,

26
00:01:54,960 --> 00:02:01,920
so we have this callback and event driven approach where we are able to register some code to be executed

27
00:02:02,010 --> 00:02:08,640
in the future instead of running right away and blocking the main threat because this has to be avoided

28
00:02:08,730 --> 00:02:16,230
under all circumstances and nodejs is built around that concept of avoiding this issue.

29
00:02:16,230 --> 00:02:19,280
We also saw how to work with requests and responses

30
00:02:19,330 --> 00:02:28,430
the nodejs way. We saw that we have to parse the requests data which arrives in chunks and that we can use this

31
00:02:28,440 --> 00:02:34,980
concept of streams and buffers which I explained and that we should avoid sending double responses

32
00:02:35,130 --> 00:02:36,750
so that after res

33
00:02:36,870 --> 00:02:44,730
end, you must not send another response and this can happen easily if you forget about that asynchronous nature

34
00:02:44,970 --> 00:02:49,060
and that a line of code you write might not execute immediately.

35
00:02:49,200 --> 00:02:54,490
So depending on where you write it, if it's in an event listener, it will not execute immediately.

36
00:02:54,510 --> 00:02:55,340
That is what I mean

37
00:02:55,380 --> 00:03:02,340
and that is what is important to keep in mind here. We also learn that nodejs is all about using it's

38
00:03:02,610 --> 00:03:04,440
built in functionalities

39
00:03:04,650 --> 00:03:11,400
and whilst there are some global variables or objects or functions we can use, this also means that we

40
00:03:11,400 --> 00:03:18,740
should use its core modules. Core modules are things like the http, the fs or the path module,

41
00:03:18,810 --> 00:03:24,870
there are more and you can learn all about them in the official nodejs docs of course, we'll also use

42
00:03:24,870 --> 00:03:30,960
quite a lot of them throughout this course and these core modules give us a couple of different functionalities

43
00:03:31,290 --> 00:03:38,670
that allow us to basically do whatever we ever could want to do on a server like create a new server

44
00:03:38,700 --> 00:03:41,620
with the help of the http module. They're

45
00:03:41,640 --> 00:03:45,420
imported via the require syntax

46
00:03:45,630 --> 00:03:48,720
and we can only use them in the file into which we import them

47
00:03:48,750 --> 00:03:54,460
and if we want to use them in two different files, we have to import them in both files separately.

48
00:03:54,480 --> 00:04:00,460
Now that leads us to the node module system and this basically works with the help of this require

49
00:04:00,510 --> 00:04:05,260
keyword which pulls some functionality from one of our files

50
00:04:05,280 --> 00:04:13,200
if we start with slash or ./ or from a core or third party module, we haven't used any third party

51
00:04:13,200 --> 00:04:14,470
modules thus far

52
00:04:14,480 --> 00:04:16,230
but we'll also do that soon

53
00:04:16,410 --> 00:04:23,040
and it basically pulls in whatever we export there and stores it in a new variable or constant as we

54
00:04:23,040 --> 00:04:24,810
did it in this module.

55
00:04:24,810 --> 00:04:27,220
And export is an important keyword here,

56
00:04:27,240 --> 00:04:35,560
we do export with the help of module.exports or for multiple exports with the export shortcut

57
00:04:35,580 --> 00:04:37,580
I showed you in the last lectures.

58
00:04:38,070 --> 00:04:40,440
So this is what we learn in this module

59
00:04:40,500 --> 00:04:45,530
and I know that this was a lot of theory or nitty gritty stuff about

60
00:04:45,540 --> 00:04:51,390
nodejs. Doesn't look too easy and beautiful but it'll get way more beautiful from now on,

61
00:04:51,540 --> 00:04:57,780
it is super important to never forget what nodejs is and does it for you though because many courses

62
00:04:57,840 --> 00:05:03,000
right away start with expressjs which we'll also use starting soon

63
00:05:03,120 --> 00:05:08,520
and therefore you never really learn what's happening under the hood which is sad because this is important

64
00:05:08,670 --> 00:05:11,190
and makes you a better node developer.

65
00:05:11,240 --> 00:05:12,760
But with that, let's move on.
