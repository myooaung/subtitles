WEBVTT
1
00:00:02.230 --> 00:00:08.590
Sekarang dengan respons yang ditambahkan hetero, mari pastikan kami melayani aset yang dioptimalkan dan untuk itu kami dapat

2
00:00:08.590 --> 00:00:09.660
menggunakan paket lain.

3
00:00:09.850 --> 00:00:15.550
Jika Anda Google untuk kompresi simpul Anda akan menemukan bahwa paket middleware kompresi serius yang

4
00:00:15.820 --> 00:00:19.860
diekspresikan yang memudahkan Anda untuk menambahkan kompresi ke aplikasi Anda.

5
00:00:19.960 --> 00:00:24.850
Ini sebenarnya sangat mudah tetapi Anda dapat mempelajari semua tentang konfigurasi yang dapat Anda tambahkan jika Anda

6
00:00:24.850 --> 00:00:27.170
ingin ke sini dalam dokumentasi resmi ini.

7
00:00:27.310 --> 00:00:33.490
Tetapi jika Anda ingin menambahkannya dengan cara yang sangat sederhana dan terstandarisasi, Anda cukup

8
00:00:33.940 --> 00:00:42.750
menjalankan NPM menginstal dasbor, menyimpan kompresi seperti paket ini disebut kompresi dan setelah Anda menginstalnya Anda masuk ke file js

9
00:00:43.290 --> 00:00:51.950
aplikasi Anda dan di sana seperti yang kami impor Helmut akan mengimpor kompresi dengan memerlukannya di sini dan kami kemudian

10
00:00:52.040 --> 00:00:53.650
menambahkannya sebagai middleware.

11
00:00:53.690 --> 00:00:59.630
Jadi mari kita mungkin mengedit tepat setelah Hellmut di sini dengan menjalankan kompresi sebagai fungsi juga.

12
00:00:59.630 --> 00:01:04.850
Sekarang Anda dapat mengkonfigurasinya seperti yang disebutkan dalam dokumen resmi tetapi Anda dapat menjalankannya seperti ini.

13
00:01:04.850 --> 00:01:10.890
Dan sekarang untuk melihat efeknya, saya akan mengomentari ini dan menyimpan dan catatan ada untuk memuat ulang.

14
00:01:11.000 --> 00:01:14.090
Dan sekarang saya membuka jaringan untuk terjadi saya akan memuat ulang halaman saya.

15
00:01:14.090 --> 00:01:19.390
Sekarang ini adalah ukuran esus yang kami unduh, terutama melihat-lihat CSSA utama dan Utama.

16
00:01:19.390 --> 00:01:25.010
J. S. jelas ini bukan super besar tapi tetap ini adalah ukuran

17
00:01:25.010 --> 00:01:26.650
ya itu karena kami mengunduhnya secara default.

18
00:01:26.690 --> 00:01:33.320
Sekarang saya akan berkomentar bahwa kembali dalam paket tambahan itu dan menyimpannya dan sekarang sangat rendah pada halaman itu Anda

19
00:01:33.320 --> 00:01:39.620
akan melihat bahwa DS itu menjadi sedikit lebih kecil dan jelas ini akan lebih penting jika Anda memiliki lebih

20
00:01:39.710 --> 00:01:42.710
banyak aset konten dalam aplikasi Anda perlu mencari.

21
00:01:43.010 --> 00:01:48.590
Jadi ini adalah tindakan kompresi dan ini layak dipertimbangkan terutama dalam aplikasi di mana Anda memiliki banyak kode

22
00:01:48.590 --> 00:01:54.290
CSSA dan javascript yang Anda layani untuk pengguna Anda atau secara umum di mana banyak file disajikan kepada

23
00:01:54.290 --> 00:01:55.860
pengguna Anda dengan cara.

24
00:01:55.940 --> 00:02:01.520
File gambar tidak dikompresi di sini karena itu sebenarnya membuatnya lebih lama memuatnya.

25
00:02:01.520 --> 00:02:03.670
Tapi ini tambahan yang bagus.

26
00:02:03.740 --> 00:02:10.940
Saya juga ingin mencatat bahwa sekali lagi sebagian besar penyedia hosting yang mungkin ingin Anda gunakan memiliki dukungan kompresi bawaan

27
00:02:10.940 --> 00:02:16.530
atau setidaknya menawarkan dukungan kompresi ini yang dapat Anda tambahkan dengan mudah di sana.

28
00:02:16.640 --> 00:02:22.250
Jadi mereka akan mengompresi aset dengan cepat dan Anda tidak perlu melakukannya dengan middleware Anda sendiri dan

29
00:02:22.300 --> 00:02:24.190
kemudian Anda seharusnya tidak melakukannya.

30
00:02:24.320 --> 00:02:29.240
Tetapi jika penyedia hosting Anda tidak mendukungnya atau Anda sedang membangun server Anda sendiri maka ini adalah middleware

31
00:02:29.240 --> 00:02:31.190
yang bagus yang dapat Anda gunakan
