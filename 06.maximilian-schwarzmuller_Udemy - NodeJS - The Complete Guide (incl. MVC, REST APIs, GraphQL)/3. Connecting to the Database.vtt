WEBVTT
1
00:00:02.540 --> 00:00:09.170
So back in the project, we first of all have to install sequelize and just as we installed all the other

2
00:00:09.170 --> 00:00:16.100
packages, we'll do this by running npm install --save because this also is a production dependency,

3
00:00:16.160 --> 00:00:22.060
it's a core dependency of our project and then the name is sequelize, like this.

4
00:00:22.280 --> 00:00:28.190
Now important, sequelize needs that MySQL 2 package which we already installed,

5
00:00:28.310 --> 00:00:32.850
so this MySQL 2 package we installed in the last module needs to be installed.

6
00:00:33.080 --> 00:00:36.080
If you skipped the last module or anything like that,

7
00:00:36.110 --> 00:00:44.910
make sure to also install MySQL 2. Now with that, we got sequelize installed and now we can do a couple

8
00:00:44.910 --> 00:00:53.370
of cool things with it. The first step always is that we create a model with sequelize, well and also

9
00:00:53.430 --> 00:00:55.860
that we connect to the database of course.

10
00:00:56.100 --> 00:01:02.640
Now therefore the first step is that when I connect to MySQL database with the workbench which we

11
00:01:02.640 --> 00:01:09.840
also used in the last module already and in there, I will go into my node complete database and delete

12
00:01:09.930 --> 00:01:15.850
the products table by right clicking on it, drop table and then simply click drop

13
00:01:15.860 --> 00:01:21.030
now, I do this because I now want to use sequelize to manage my tables.

14
00:01:21.300 --> 00:01:25.230
With that let's go back to our project and now let's go into the database.js

15
00:01:25.240 --> 00:01:27.870
file in the util folder, there

16
00:01:27.990 --> 00:01:32.540
I now want to write some code to connect sequelize to the database.

17
00:01:32.610 --> 00:01:36.320
Now sequelize uses MySQL 2 behind the scenes,

18
00:01:36.420 --> 00:01:38.690
therefore sequelize behind the scenes

19
00:01:38.820 --> 00:01:42.590
will do something like this but we won't write this.

20
00:01:42.690 --> 00:01:47.650
Instead we will import sequelize and I'll store it in a sequelize constant,

21
00:01:47.730 --> 00:01:53.520
you can name this constant however you want but I'll name it with a capital S cecause I actually import

22
00:01:53.550 --> 00:01:59.870
a constructor function or a class here so I'll import sequelize like this and then I'll create

23
00:01:59.880 --> 00:02:05.200
a new sequelize instance by calling new sequelize, like this.

24
00:02:05.280 --> 00:02:06.760
Now sequelize, here

25
00:02:06.780 --> 00:02:09.950
the constructor function needs some options.

26
00:02:10.230 --> 00:02:17.650
You can see we have to configure it with the database name with a username to connect to it, a password.

27
00:02:17.720 --> 00:02:21.140
So here I will connect it to my database,

28
00:02:21.170 --> 00:02:22.680
so to my schema name which is

29
00:02:22.680 --> 00:02:24.070
node-complete,

30
00:02:27.020 --> 00:02:38.400
node-complete with my root username which is root and with my password which is nodecomplete in my

31
00:02:38.400 --> 00:02:38.730
case,

32
00:02:38.730 --> 00:02:41.250
use the root password you assigned.

33
00:02:41.700 --> 00:02:48.710
Now we can also pass a fourth argument, an options object and in there you can see, I saw this menu

34
00:02:48.710 --> 00:02:51.260
or get this menu with control space,

35
00:02:51.360 --> 00:02:56.580
you can see we can set up a bunch of stuff, for example the dialect, we can set this to

36
00:02:56.610 --> 00:03:03.540
MySQL to make it clear that we connect to a MySQL database because different SQL engines or

37
00:03:03.540 --> 00:03:11.460
databases use slightly different SQL syntax and you can dive into the official sequelize docs to learn

38
00:03:11.550 --> 00:03:12.560
all about it,

39
00:03:12.570 --> 00:03:15.510
a link can be found in the last lecture of this module.

40
00:03:15.510 --> 00:03:18.440
The one thing I want to set for now is the host,

41
00:03:18.540 --> 00:03:21.650
by default it would use localhost so we don't need to set it

42
00:03:21.780 --> 00:03:25.930
but I will explicitly set this to localhost.

43
00:03:26.010 --> 00:03:31.310
With that, we're creating a new sequelize object and it will automatically connect to the database then

44
00:03:31.590 --> 00:03:37.810
or to be precise, it will set up a connection pool just as we did it manually in the last course module.

45
00:03:38.430 --> 00:03:46.410
So I can now export my sequelize object here which is essentially that database connection pool however

46
00:03:46.410 --> 00:03:50.720
managed by sequelize giving us a lot of useful features.

47
00:03:50.880 --> 00:03:53.010
With that, we got the connection set up,

48
00:03:53.010 --> 00:03:55.610
let's now focus on working on the models.
