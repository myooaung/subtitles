1
00:00:02,420 --> 00:00:08,870
Now talking about deleting, there's one more thing we should do in case we do succeed. We should clear

2
00:00:08,930 --> 00:00:11,830
the relation of posts and users.

3
00:00:11,840 --> 00:00:15,880
If we refresh the post collection, we only have one item there

4
00:00:16,190 --> 00:00:21,040
but if I have a look at my users there now, the first user has a couple of posts

5
00:00:21,080 --> 00:00:26,290
and the second user has so too because right now we have no logic to clear posts

6
00:00:26,330 --> 00:00:31,460
when I delete them, to clear relations and we should of course do that.

7
00:00:31,700 --> 00:00:38,470
Now how can we get rid of a relation? Well we delete the post anyways, so there's nothing we need to do

8
00:00:38,470 --> 00:00:38,960
there

9
00:00:38,980 --> 00:00:46,600
but on the user, we need to pull our reference. To do that we should find the user after we deleted a post

10
00:00:46,600 --> 00:00:52,360
let's say, so here I'll find a user by ID and I can use my request

11
00:00:52,360 --> 00:00:53,510
user ID here

12
00:00:54,910 --> 00:00:57,440
and I will return that user object in there.

13
00:00:57,570 --> 00:00:59,920
Well let's grab that code and add another

14
00:00:59,920 --> 00:01:05,810
then block where I will have that user mongoose model fetched from my database.

15
00:01:06,310 --> 00:01:08,090
Now in there,

16
00:01:08,210 --> 00:01:15,500
I will use my user model and there, the posts array and then there is a pull method mongoose gives me, 

17
00:01:16,160 --> 00:01:19,960
there I need to pass the ID of the post I want to remove.

18
00:01:20,150 --> 00:01:26,780
Now I deleted the post already here but the post ID is still available of course, so I can pass post

19
00:01:26,780 --> 00:01:28,210
ID here.

20
00:01:28,250 --> 00:01:35,540
Now I can call save here to save that updated user and return that, grab the response one more time and

21
00:01:35,570 --> 00:01:36,470
add another

22
00:01:36,500 --> 00:01:40,010
then block with the result of that operation

23
00:01:40,100 --> 00:01:43,470
and here, I'm done with clearing the relation.

24
00:01:43,620 --> 00:01:45,040
Now to see that in action,

25
00:01:45,120 --> 00:01:50,830
let me actually get rid of all users manually by using mongodb compass,

26
00:01:50,850 --> 00:02:00,200
also get rid of all posts and logout here and let's create a brand new user because we cleared all

27
00:02:00,200 --> 00:02:00,710
users,

28
00:02:03,720 --> 00:02:05,520
like this.

29
00:02:05,640 --> 00:02:17,570
Let's login with that user and let's create a new post, a duck, use that duck image, it ducks around for sure and

30
00:02:18,090 --> 00:02:19,310
click accept

31
00:02:19,660 --> 00:02:25,450
and before we do anything, let's go back to mongoose, to mongodb compass I mean, there we can see that

32
00:02:25,720 --> 00:02:29,320
this post has this creator and this user

33
00:02:29,320 --> 00:02:34,140
more importantly has this post in his posts array.

34
00:02:34,500 --> 00:02:38,230
Now I'm logged in with the right user, let's click delete.

35
00:02:38,400 --> 00:02:45,790
This worked and now if I refresh posts, we got no posts in there because I deleted the only post we had

36
00:02:46,250 --> 00:02:49,630
and in users, this array is now also empty,

37
00:02:49,730 --> 00:02:52,160
so now we're clearing this as well.
