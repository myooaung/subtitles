WEBVTT
1
00:00:02.006 --> 00:00:02.799
In this section,

2
00:00:02.799 --> 00:00:05.903
we covered a lot of concepts and code for adding Spring

3
00:00:05.903 --> 00:00:08.668
Batch and configuring a job template.

4
00:00:08.668 --> 00:00:12.600
First, I covered adding the Spring Batch dependencies to the project.

5
00:00:12.600 --> 00:00:15.957
This includes two main libraries,

6
00:00:15.957 --> 00:00:17.971
spring-batch-core and spring-batch-infrastructure.

7
00:00:17.971 --> 00:00:21.279
The infrastructure library contains logic for interacting

8
00:00:21.279 --> 00:00:22.840
with various underlying components,

9
00:00:22.840 --> 00:00:28.237
such as the file system that will be used for item reading in the next section.

10
00:00:28.237 --> 00:00:31.972
The core library contains support for the various Spring Batch features

11
00:00:31.972 --> 00:00:34.647
and configurations that were covered in this section.

12
00:00:34.647 --> 00:00:39.657
Next, I covered the configuration of main Spring Batch features in the project.

13
00:00:39.657 --> 00:00:43.176
I configured a JobRepository for persisting metadata about

14
00:00:43.176 --> 00:00:46.018
batch jobs configured in the project.

15
00:00:46.018 --> 00:00:49.418
I also configured a JobExplorer that can retrieve information

16
00:00:49.418 --> 00:00:52.696
from the metadata stored in the JobRepository.

17
00:00:52.696 --> 00:00:54.346
Finally, I configured a JobLauncher,

18
00:00:54.346 --> 00:00:58.206
which was just used in a RestController to run the

19
00:00:58.206 --> 00:01:00.558
job with specific job parameters.

20
00:01:00.558 --> 00:01:04.717
I then created a configuration for a batch job and step.

21
00:01:04.717 --> 00:01:08.198
I leveraged a simple job builder to define the job name,

22
00:01:08.198 --> 00:01:09.690
validation, and starting step.

23
00:01:09.690 --> 00:01:12.899
I leveraged a StepBuilderFactory to create a simple

24
00:01:12.899 --> 00:01:15.231
tasklet that output Hello World!

25
00:01:15.231 --> 00:01:16.630
on job execution.

26
00:01:16.630 --> 00:01:20.336
Finally, I showed you how to unit test and execute the batch job.

27
00:01:20.336 --> 00:01:24.722
The unit test simply verified that the job was configured correctly.

28
00:01:24.722 --> 00:01:29.162
The job execution was performed through a RestController that made a call to

29
00:01:29.162 --> 00:01:33.477
the JobLauncher using the configured job and JobParameters.

30
00:01:33.477 --> 00:01:33.753
Now,

31
00:01:33.753 --> 00:01:36.508
I'll start to replace the simple tasklet I created in

32
00:01:36.508 --> 00:01:44.000
this section with full-blown processing. I'll start by showing you how to read input from a file.

