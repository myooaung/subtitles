1
00:00:01,951 --> 00:00:05,986
Much like Spring Batch's support for FlatFiles when reading items,

2
00:00:05,986 --> 00:00:10,239
Spring Batch also supports different strategies for item writing.

3
00:00:10,239 --> 00:00:15,112
In this course, I'll be taking advantage of the JPAItemWriter.

4
00:00:15,112 --> 00:00:20,458
The JPAItemWriter makes use of a JPAEntityManager instance.

5
00:00:20,458 --> 00:00:21,733
At the beginning of the course,

6
00:00:21,733 --> 00:00:24,187
I showed you how I configured the EntityManager as

7
00:00:24,187 --> 00:00:26,603
part of the database configuration.

8
00:00:26,603 --> 00:00:29,971
It's important to note that the ItemWriter requires a

9
00:00:29,971 --> 00:00:31,985
transaction as part of processing.

10
00:00:31,985 --> 00:00:34,938
While I'm leveraging JPA in this demonstration,

11
00:00:34,938 --> 00:00:38,924
you should evaluate whether this is really required for your batch job.

12
00:00:38,924 --> 00:00:41,978
You may not require the additional layer of JPA and could take

13
00:00:41,978 --> 00:00:45,591
advantage of other Spring Batch item writers if needed.

14
00:00:45,591 --> 00:00:48,907
Now let's look at the implementation for the JPAItemWriter.

15
00:00:48,907 --> 00:00:51,271
I'm displaying the code for the new ItemWriter in

16
00:00:51,271 --> 00:00:52,601
the BatchJobConfiguration Class.

17
00:00:52,601 --> 00:00:58,277
First note that I again have annotated the Bean method for a StepScope.

18
00:00:58,277 --> 00:01:01,843
I'll now be returning the type JpaItemWriter for the Bean.

19
00:01:01,843 --> 00:01:06,067
The only configuration I need to make to the ItemWriter is

20
00:01:06,067 --> 00:01:10,134
to pass in the EntityManagerFactory that I configured in the

21
00:01:10,134 --> 00:01:11,928
database configuration class.

22
00:01:11,928 --> 00:01:13,239
Just like with the ItemProcessor,

23
00:01:13,239 --> 00:01:16,933
there will be some additional changes I need to make to the

24
00:01:16,933 --> 00:01:19,987
BatchJobConfiguration class to remove the old writer and

25
00:01:19,987 --> 00:01:22,100
update the job step configuration.

26
00:01:22,100 --> 00:01:24,784
Let's do that now.

27
00:01:24,784 --> 00:01:28,118
I'm going to demonstrate adding the new

28
00:01:28,118 --> 00:01:30,023
JPAItemWriter to the BatchJobConfiguration.

29
00:01:30,023 --> 00:01:32,772
Note that I'll be following demo 20 found in the DEMOS.

30
00:01:32,772 --> 00:01:37,384
md file of the project root directory.

31
00:01:37,384 --> 00:01:40,320
I'll be making the final modifications to the

32
00:01:40,320 --> 00:01:42,749
BatchJobConfiguration to support writing items to the database.

33
00:01:42,749 --> 00:01:45,605
I'm going to open back up the BatchJobConfiguration class,

34
00:01:45,605 --> 00:01:50,735
and I'm going to start by scrolling down to the writer method.

35
00:01:50,735 --> 00:01:54,780
I'm just going to go ahead and remove this method.

36
00:01:54,780 --> 00:01:59,266
Now I'll add the new JpaItemWriter implementation code.

37
00:01:59,266 --> 00:02:04,030
This code just creates an instance of JpaItemWriter for our PatientEntity and

38
00:02:04,030 --> 00:02:08,268
then sets the EntityManagerFactory configured in the project.

39
00:02:08,268 --> 00:02:13,122
As I've yet to autowire the EntityManagerFactory, let's do it now.

40
00:02:13,122 --> 00:02:17,621
I'm going to scroll back up to the top, and I'll add the factory.

41
00:02:17,621 --> 00:02:21,691
This autowires the EntityManagerFactory with a qualifier to assure I

42
00:02:21,691 --> 00:02:24,705
get the correct Bean instance that I configured.

43
00:02:24,705 --> 00:02:27,658
The last change I need to make is to update the job step.

44
00:02:27,658 --> 00:02:29,223
Let's scroll down to that now.

45
00:02:29,223 --> 00:02:34,702
I'm going to remove the code for the step, and I'll drop in the new code.

46
00:02:34,702 --> 00:02:39,037
The only change here was to add the JpaItemWriter as an

47
00:02:39,037 --> 00:02:42,700
argument to the method and change the writer call to use

48
00:02:42,700 --> 00:02:49,000
the writer that was passed in. This completes the coding for the ItemProcessor.

