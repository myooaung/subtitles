WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.860 --> 00:00:04.995
Hope you enjoyed the last challenge and welcome back.

00:00:04.995 --> 00:00:07.650
We're going to take a better look at looping.

00:00:07.650 --> 00:00:14.670
I'm going to show you how we can create an effect similar to this one by using for-loops,

00:00:14.670 --> 00:00:18.165
the translate method and also rotate.

00:00:18.165 --> 00:00:21.990
This is the end result which we are looking to achieve and it's

00:00:21.990 --> 00:00:27.060
basically a red arc or a red circle which is the background.

00:00:27.060 --> 00:00:29.415
Then we're going to create a segment,

00:00:29.415 --> 00:00:32.805
which is the black triangle section.

00:00:32.805 --> 00:00:34.935
We're going to draw this to the canvas,

00:00:34.935 --> 00:00:37.980
and then use a for-loop to loop all the way around and

00:00:37.980 --> 00:00:41.810
keep drawing the segments until we get back to the start.

00:00:41.810 --> 00:00:45.820
Each time we use rotate and translate to make sure

00:00:45.820 --> 00:00:49.820
that the new segment drawn is in the correct position.

00:00:49.820 --> 00:00:52.725
Let's head over to CodePen.

00:00:52.725 --> 00:00:55.915
Rather than using the challenge templates,

00:00:55.915 --> 00:01:00.155
I'm going to folk the work with Pixel Video,

00:01:00.155 --> 00:01:03.910
just so we got a template to work with.

00:01:04.190 --> 00:01:16.170
Let's call this Looping. Then you

00:01:16.170 --> 00:01:22.505
want to change the canvas to be 600 by 600 to begin with,

00:01:22.505 --> 00:01:25.490
and then let's clear everything except

00:01:25.490 --> 00:01:30.480
the two variables at the top and also the onload function.

00:01:32.260 --> 00:01:35.880
There we go. We're good to go now.

00:01:35.880 --> 00:01:41.800
What I'm going to start with is the red background circle by using the arc method.

00:01:41.800 --> 00:01:44.130
We're going to make mine to be red.

00:01:44.130 --> 00:01:48.915
We have ctx.fillStyle to be equal to

00:01:48.915 --> 00:01:59.325
red and create the arc and this is going to be a full circle.

00:01:59.325 --> 00:02:03.410
The starting coordinates won't mind to be in the middle of the canvas.

00:02:03.410 --> 00:02:08.870
I'm going to use canvas.width divided by 2 to the center point,

00:02:08.870 --> 00:02:16.840
and then canvas.height divide by 2 to begin our arc in the center of the canvas.

00:02:16.840 --> 00:02:20.580
The radius we want to make it 230.

00:02:20.580 --> 00:02:23.640
The start position zero,

00:02:23.640 --> 00:02:25.890
and to create the full circle,

00:02:25.890 --> 00:02:28.990
it's 2 times math.PI.

00:02:30.550 --> 00:02:35.370
Then let's autofill to draw this to the canvas.

00:02:35.550 --> 00:02:38.570
Just like that.

00:02:40.590 --> 00:02:44.885
That's not drawn, so there must be a typing error somewhere.

00:02:44.885 --> 00:02:49.095
Just there, which is the canvas height.

00:02:49.095 --> 00:02:52.515
Good. Now we've got the red background circle.

00:02:52.515 --> 00:02:57.840
Then we can get to work on drawing the black segments that we want to loop.

00:02:57.840 --> 00:03:00.900
Let's create a function to do this.

00:03:00.900 --> 00:03:05.230
I'm going to call my function draw segments,

00:03:07.490 --> 00:03:10.840
and then the code between the curly braces.

00:03:10.840 --> 00:03:13.899
Let's start with beginPath,

00:03:17.150 --> 00:03:21.070
and then we use ctx.moveTo.

00:03:23.570 --> 00:03:26.879
Want to move to the center of the canvas,

00:03:26.879 --> 00:03:34.920
so we use canvas width and height divided by 2 to give us the starting points.

00:03:34.920 --> 00:03:38.710
Now we'll set the fill style to be black.

00:03:44.900 --> 00:03:48.455
To draw the segments or to create segments,

00:03:48.455 --> 00:03:50.940
we're going to use a arc.

00:03:53.060 --> 00:03:56.160
This one to be in the center of the canvas.

00:03:56.160 --> 00:03:58.020
Let's add this in there.

00:03:58.020 --> 00:04:01.265
The radius we want to make it 230,

00:04:01.265 --> 00:04:04.230
which is the same as a background.

00:04:05.360 --> 00:04:11.890
Then we need to define the starting and the end point for each one of the sections.

00:04:11.890 --> 00:04:16.205
The starting point is going to be the 12 o'clock position.

00:04:16.205 --> 00:04:23.370
So that's 1.5 multiplied by Math.PI.

00:04:24.220 --> 00:04:26.795
That's pretty straightforward.

00:04:26.795 --> 00:04:30.020
The end angle takes little more of thinking about.

00:04:30.020 --> 00:04:33.800
We've got 12 different sections in the circle.

00:04:33.800 --> 00:04:38.830
We've got the six black sections and the six red sections.

00:04:38.830 --> 00:04:44.625
One full rotation of the arc is 2 times Math.PI.

00:04:44.625 --> 00:04:46.940
We can divide this two,

00:04:46.940 --> 00:04:49.610
which is a full circle to be divided by

00:04:49.610 --> 00:04:56.620
the 12 sections and this gives us a volume of 0.16666,

00:04:59.270 --> 00:05:04.220
and then we can add this value to the original 1.5.

00:05:04.220 --> 00:05:06.545
We'll go from the 12 o'clock position,

00:05:06.545 --> 00:05:10.355
and then we go around a little bit further to create the segments.

00:05:10.355 --> 00:05:15.735
So 0.16 plus 1.5 gives us the value

00:05:15.735 --> 00:05:21.915
of 1.6666 multiplied by Math.PI,

00:05:21.915 --> 00:05:25.335
and that should give us our segments.

00:05:25.335 --> 00:05:32.545
Then we need to fill the segments with the fill method to draw onto the canvas.

00:05:32.545 --> 00:05:35.610
Then let's call a function, just below.

00:05:35.610 --> 00:05:42.465
Draw our segments, and they should add the segments.

00:05:42.465 --> 00:05:45.120
There we go, says the first one we need to add.

00:05:45.120 --> 00:05:47.645
The starting point is this line here,

00:05:47.645 --> 00:05:50.920
which is 1.5 times Math.PI.

00:05:50.920 --> 00:05:54.495
When added to this value, 0.106,

00:05:54.495 --> 00:05:57.780
which is one-twelfth of the canvas radius,

00:05:57.780 --> 00:06:00.730
which is the end point just here.

00:06:00.860 --> 00:06:04.665
That's our first section drawn to the canvas.

00:06:04.665 --> 00:06:07.565
Rather than typing all this code over and over again,

00:06:07.565 --> 00:06:11.330
a simpler way to do this is to use a for-loop.

00:06:11.330 --> 00:06:16.470
Let's surround the whole of the function with a for-loop.

00:06:17.390 --> 00:06:21.220
Let's begin just with the function line,

00:06:21.220 --> 00:06:24.660
and then end it after draw segments.

00:06:26.230 --> 00:06:29.610
I'll just indent the section.

00:06:30.020 --> 00:06:32.565
That's the basic for-loop,

00:06:32.565 --> 00:06:34.365
and to avoid crushing the browser,

00:06:34.365 --> 00:06:37.100
we'll just leave the for-loop empty for now.

00:06:37.100 --> 00:06:41.045
But we can go ahead and add the translate and rotate,

00:06:41.045 --> 00:06:45.120
which you want to be performed on each loop.

00:06:45.170 --> 00:06:50.850
Underneath draw segments, and still within the loop we're going to

00:06:50.850 --> 00:06:57.010
add a translate method, ctx.translate.

00:06:57.680 --> 00:07:03.010
I'm going to translate to the center of the canvas for each rotation.

00:07:03.010 --> 00:07:05.110
If we don't use translate first,

00:07:05.110 --> 00:07:07.840
the rotation point is the canvas origin,

00:07:07.840 --> 00:07:10.175
which is the top left-hand corner.

00:07:10.175 --> 00:07:17.260
Be sure to add this canvas.width and canvas.height divided by 2.

00:07:18.080 --> 00:07:23.060
Then we actually want the segment to be rotated.

00:07:25.080 --> 00:07:30.245
I want this to be rotated by 60 degrees on each loop.

00:07:30.245 --> 00:07:33.630
Remember that using rotate is in radians,

00:07:33.630 --> 00:07:35.275
so to convert to degrees,

00:07:35.275 --> 00:07:42.640
we multiply the value by Math.PI divide by 180.

00:07:43.100 --> 00:07:46.140
Then lastly, we need to call translate

00:07:46.140 --> 00:07:51.770
again to reinstate the position back to the origin.

00:07:51.770 --> 00:07:55.890
We want to translate this by negative 300,

00:07:56.770 --> 00:08:01.040
and it translates the origin back to 00.

00:08:01.040 --> 00:08:03.665
So every time we call this translate,

00:08:03.665 --> 00:08:06.000
we don't have any problems.

00:08:06.500 --> 00:08:11.000
Now we can go ahead and create the rest of the for-loop.

00:08:11.000 --> 00:08:14.150
I'm just going to [inaudible] the for-loop or we add

00:08:14.150 --> 00:08:18.190
the conditions so we don't end up causing a crush within CodePen.

00:08:18.190 --> 00:08:23.465
First of all, let's create our variable of i equals zero,

00:08:23.465 --> 00:08:26.405
so this is the loop starting points.

00:08:26.405 --> 00:08:31.905
We've already got one segment drawn to the screen from the original function.

00:08:31.905 --> 00:08:37.055
Let's repeat this five more times by using i is less than six.

00:08:37.055 --> 00:08:40.940
Then to increment this one time on each loop,

00:08:40.940 --> 00:08:43.095
we use i plus plus.

00:08:43.095 --> 00:08:48.650
We can go ahead and [inaudible] this for-loop, and then we can run.

00:08:48.650 --> 00:08:53.850
There we have it. So that works exactly how we want to.

00:08:53.850 --> 00:08:55.130
Just as a quick recap,

00:08:55.130 --> 00:09:00.110
we created a red background circle using the arc method.

00:09:00.110 --> 00:09:04.570
We then called a function called draw segments,

00:09:04.570 --> 00:09:09.565
and then this function drew a black section onto the canvas.

00:09:09.565 --> 00:09:11.995
We then surrounded the function with

00:09:11.995 --> 00:09:16.280
a for-loop to repeat the black section five more times,

00:09:16.280 --> 00:09:21.445
and on each rotation we rotate the segment by 60 degrees,

00:09:21.445 --> 00:09:23.740
and also on each rotation,

00:09:23.740 --> 00:09:26.830
we translated the canvas origin back into

00:09:26.830 --> 00:09:32.260
the center rather than the default position in the top left.

00:09:32.260 --> 00:09:37.970
Then after each rotation we translate it back so we didn't get any problems.

00:09:37.970 --> 00:09:41.635
That's another little look at looping with the canvas.

00:09:41.635 --> 00:09:43.240
Come back in the next video,

00:09:43.240 --> 00:09:47.920
where we'll take what we've just drawn and add some animation effects.
