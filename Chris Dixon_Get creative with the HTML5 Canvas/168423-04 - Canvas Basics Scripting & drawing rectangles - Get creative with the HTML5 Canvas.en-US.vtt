WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:04.515
Now we have the basic canvas setup on the screen.

00:00:04.515 --> 00:00:07.515
We're now going to move on to adding some scripting,

00:00:07.515 --> 00:00:11.620
and actually drawing some rectangles onto the canvas.

00:00:11.620 --> 00:00:17.550
The first thing we want to do is we said there's a little error message on the bottom.

00:00:17.550 --> 00:00:20.120
I'm going to first begin by clicking on this.

00:00:20.120 --> 00:00:24.670
You can see the CodePen doesn't need a doctype declaration,

00:00:25.010 --> 00:00:27.780
so I'm just going to delete that,

00:00:27.780 --> 00:00:31.005
just to get rid of that message, then save.

00:00:31.005 --> 00:00:34.130
Of course, make sure that's left in if you're using on

00:00:34.130 --> 00:00:37.100
a text editor on a separate web browser,

00:00:37.100 --> 00:00:39.350
or in fact, if you are deploying to the web,

00:00:39.350 --> 00:00:41.695
make sure that's kept inside there.

00:00:41.695 --> 00:00:45.105
For this video, I'm going to create a new pen,

00:00:45.105 --> 00:00:49.845
and we can either create a new pen in the same way as the last video,

00:00:49.845 --> 00:00:53.105
or we can actually just click on the fork one.

00:00:53.105 --> 00:00:56.075
This will create duplicates.

00:00:56.075 --> 00:00:58.745
We can then rename these duplicates,

00:00:58.745 --> 00:01:04.030
and this will save us typing all the HTML skeleton over and over again.

00:01:04.030 --> 00:01:11.100
I'm going to call this scripting and drawing rectangles,

00:01:14.770 --> 00:01:18.030
add the same in the title,

00:01:25.520 --> 00:01:28.660
and make a little more space there.

00:01:30.860 --> 00:01:37.655
The first thing we need to do to access the scripting is to create the script tags.

00:01:37.655 --> 00:01:39.425
So just blow the canvas,

00:01:39.425 --> 00:01:42.160
I'm going to admin, just there.

00:01:42.160 --> 00:01:45.765
So open up the script tags,

00:01:45.765 --> 00:01:48.790
and then we need a closing tag,

00:01:52.190 --> 00:01:56.535
and it's just like using standard JavaScripts.

00:01:56.535 --> 00:01:59.305
We used JavaScript in the past,

00:01:59.305 --> 00:02:02.575
a lot of the things we're going to do in this course will look fairly familiar.

00:02:02.575 --> 00:02:05.890
If not, don't worry, you should be able to follow along just fine.

00:02:05.890 --> 00:02:10.090
We're going to start by grabbing the canvas by the ID.

00:02:10.090 --> 00:02:13.960
I'm going to store it inside a variable called canvas.

00:02:13.960 --> 00:02:19.280
So create the variable with the name of canvas,

00:02:20.080 --> 00:02:28.520
and I'm going to grab the ID of my canvas by selecting the document.getElementById.

00:02:32.810 --> 00:02:35.895
Just make sure the elements, by,

00:02:35.895 --> 00:02:39.185
and ID have couple less.

00:02:39.185 --> 00:02:43.800
The element that we're going to grab is my canvas.

00:02:43.970 --> 00:02:52.695
So inside brackets, then inside the quotations type in myCanvas,

00:02:52.695 --> 00:02:55.845
then we'll end up with a semicolon.

00:02:55.845 --> 00:03:01.070
This section is grabbing the canvas by the ID,

00:03:01.070 --> 00:03:04.580
and then storing inside a variable called canvas.

00:03:04.580 --> 00:03:09.350
I'm going to create one more variable called ctx,

00:03:09.350 --> 00:03:11.830
this is short for context.

00:03:11.830 --> 00:03:17.615
This is because we are going to be accessing the rendering context of the canvas,

00:03:17.615 --> 00:03:21.410
and this allows us to actually draw to the canvas.

00:03:21.410 --> 00:03:26.695
We do this by calling the canvases getContext method.

00:03:26.695 --> 00:03:33.555
Inside this variable, we're going to select the canvas, which is created,

00:03:33.555 --> 00:03:39.840
and then dot, and then call getContext,

00:03:39.840 --> 00:03:43.140
followed by the brackets, and a semicolon.

00:03:43.140 --> 00:03:47.130
This course we'll be concentrating on 2D graphics.

00:03:47.130 --> 00:03:50.090
So inside the brackets as a parameter,

00:03:50.090 --> 00:03:53.140
we're going to add 2D inside of there,

00:03:53.140 --> 00:03:59.074
and this will specify that we want to create a two-dimensional rendering context.

00:03:59.074 --> 00:04:02.890
I will be using a ctx variable a lot throughout the course.

00:04:02.890 --> 00:04:07.565
Now that we have the context or the ctx variable,

00:04:07.565 --> 00:04:12.630
we can now use this to access the drawing properties by using it.

00:04:12.790 --> 00:04:18.265
I'm going to delete the style properties to add it in the last video,

00:04:18.265 --> 00:04:21.845
and I'm going to add these in various scripting.

00:04:21.845 --> 00:04:25.115
Grab the ctx variable,

00:04:25.115 --> 00:04:31.115
and then we're going to use the fillStyle method with a capital S,

00:04:31.115 --> 00:04:34.810
and the style is going to be the color which we want to set.

00:04:34.810 --> 00:04:37.635
This is a CSS color,

00:04:37.635 --> 00:04:40.350
so I want to call it red.

00:04:40.350 --> 00:04:43.035
We can use the color's name,

00:04:43.035 --> 00:04:45.120
or we can use the x value,

00:04:45.120 --> 00:04:46.510
or you can even use gradients,

00:04:46.510 --> 00:04:50.495
or puns, which we'll look at later on in the course.

00:04:50.495 --> 00:04:54.160
Let's actually use this color, and fill rectangle.

00:04:54.160 --> 00:04:57.350
Again, we need to use the context dot,

00:04:57.350 --> 00:04:59.695
and this time fillRect,

00:04:59.695 --> 00:05:03.280
which is of course a rectangle.

00:05:03.410 --> 00:05:07.955
Now inside the brackets of the fullRect method,

00:05:07.955 --> 00:05:10.960
we're going to add in four different parameters.

00:05:10.960 --> 00:05:18.630
I'm just going to add 0, 0, 300, 300.

00:05:18.630 --> 00:05:19.844
The first two parameters,

00:05:19.844 --> 00:05:21.910
the zero and zero,

00:05:21.910 --> 00:05:26.335
is the position we'd like to start the rectangle at on the canvas.

00:05:26.335 --> 00:05:29.220
So 0 x and 0 y,

00:05:29.220 --> 00:05:30.650
the first two values,

00:05:30.650 --> 00:05:34.435
is the top left-hand corner of the canvas.

00:05:34.435 --> 00:05:38.150
We'll look at more at the coordinates in the next video,

00:05:38.150 --> 00:05:41.360
but for now, we just need to know that position 0, 0,

00:05:41.360 --> 00:05:43.960
is a coordinate to the top left-hand corner,

00:05:43.960 --> 00:05:46.790
and then you've probably already guessed that the 300,

00:05:46.790 --> 00:05:51.660
300, is the width and the height of the rectangle.

00:05:51.680 --> 00:05:56.430
We've created a rectangle the same size as the canvas,

00:05:56.430 --> 00:05:59.910
and rather than hard coordinates with a particular value,

00:05:59.910 --> 00:06:02.720
we can also use JavaScript to make them match

00:06:02.720 --> 00:06:06.230
the same width and the same height as the canvas.

00:06:06.230 --> 00:06:08.540
We change this to be canvas,

00:06:08.540 --> 00:06:13.344
and this is the canvas.width,

00:06:13.344 --> 00:06:15.975
and we do the same with heights.

00:06:15.975 --> 00:06:25.300
So canvas.height, and then we should get the rectangle appear exactly like it was before.

00:06:25.300 --> 00:06:28.430
Now I'm just going to create one or two more rectangles

00:06:28.430 --> 00:06:30.625
or squares just to play around with.

00:06:30.625 --> 00:06:33.240
We're going to grab the context,

00:06:33.240 --> 00:06:38.790
and again, grab the fillStyle method.

00:06:38.790 --> 00:06:42.675
I want to set this time to be a hexagon value,

00:06:42.675 --> 00:06:44.655
so use the hashtag,

00:06:44.655 --> 00:06:50.080
and I'm going to use 00ff99.

00:06:51.620 --> 00:06:57.005
This style doesn't actually do anything until we actually create a rectangle.

00:06:57.005 --> 00:06:59.550
So ctx.fillRect.

00:07:03.980 --> 00:07:07.730
Just like before, we'll start this in the top left-hand corner.

00:07:07.730 --> 00:07:13.460
So 0, 0, and this time we want to make it half the width,

00:07:13.460 --> 00:07:15.685
and half the height of the canvas.

00:07:15.685 --> 00:07:18.450
Using JavaScript, we can do that again.

00:07:18.450 --> 00:07:23.675
Rather than canvas, the width that we got in the last example,

00:07:23.675 --> 00:07:28.410
we're going to use canvas.width over two,

00:07:28.670 --> 00:07:31.830
and then the same for the heights,

00:07:31.830 --> 00:07:39.780
canvas.height over two, or divided by two.

00:07:39.780 --> 00:07:43.205
That should make a nice square up here in the top left-hand corner,

00:07:43.205 --> 00:07:47.830
which is half the weight and half the height of the original canvas.

00:07:47.830 --> 00:07:51.970
Let's add one more, just in a slightly different position.

00:07:53.840 --> 00:07:56.850
Let's fill style the again,

00:07:56.850 --> 00:07:59.400
this time with a different color.

00:07:59.400 --> 00:08:02.139
I will choose cc99ff,

00:08:05.150 --> 00:08:08.530
and then fill rectangle.

00:08:10.430 --> 00:08:15.390
This time we want to set it to be a 150 pixels,

00:08:16.690 --> 00:08:21.020
and this is the starting position in the center of

00:08:21.020 --> 00:08:26.515
the square because it's half the width and half the height of the canvas.

00:08:26.515 --> 00:08:29.330
I will make it the same size as before,

00:08:29.330 --> 00:08:33.185
so canvas width divide by two,

00:08:33.185 --> 00:08:38.250
canvas.height divide by two,

00:08:38.630 --> 00:08:43.440
because we've got nice pans down to merge in the browser.

00:08:43.440 --> 00:08:46.040
This is fine if you want to actually fill

00:08:46.040 --> 00:08:49.520
the rectangle like we have done with a specified color,

00:08:49.520 --> 00:08:52.325
but if once actually just to draw a rectangle

00:08:52.325 --> 00:08:55.915
showing just the outline with no fill color,

00:08:55.915 --> 00:09:00.075
we can do that by using the strokeRect method.

00:09:00.075 --> 00:09:02.850
Again, let's begin with ctx,

00:09:02.850 --> 00:09:05.530
and then we use strokeRect.

00:09:07.670 --> 00:09:13.130
Let us draw the outside or the outline of a rectangle.

00:09:13.130 --> 00:09:15.875
So make this time position 25,

00:09:15.875 --> 00:09:23.100
25, and which will make it a nice simple 100 by 100 square.

00:09:23.120 --> 00:09:27.660
There we can see we've got the rectangle or the squares outline.

00:09:27.660 --> 00:09:31.145
Of course, the only difference between drawing a square

00:09:31.145 --> 00:09:34.844
or a rectangle using fullRect and strokeRect,

00:09:34.844 --> 00:09:40.045
it is simply the width and the height which we specify inside the parenthesis.

00:09:40.045 --> 00:09:43.355
So we could easily change this to be a little bit wider,

00:09:43.355 --> 00:09:47.900
and then turn the square into a rectangle. That's it.

00:09:47.900 --> 00:09:51.695
I hope you enjoyed your first taste of scripting using the canvas,

00:09:51.695 --> 00:09:54.755
and how to draw rectangles, and squares.

00:09:54.755 --> 00:09:57.275
Do feel free to have a little play around with that,

00:09:57.275 --> 00:09:59.850
and I'll see you in the next video.
