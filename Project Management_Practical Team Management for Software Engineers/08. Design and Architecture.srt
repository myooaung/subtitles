1
00:00:00,972 --> 00:00:02,063
Design and architecture.

2
00:00:02,063 --> 00:00:07,245
Based on our work intake process, we have identified some work to do.

3
00:00:07,245 --> 00:00:10,861
We have done some requirements analysis and now we have

4
00:00:10,861 --> 00:00:11,972
our business or functional requirements.

5
00:00:11,972 --> 00:00:13,510
Then we developed some estimates.

6
00:00:13,510 --> 00:00:18,639
So now let's go to the next step where it's time to

7
00:00:18,639 --> 00:00:21,972
think about design and architecture.

8
00:00:21,972 --> 00:00:24,115
So now that the requirements are defined and we have

9
00:00:24,115 --> 00:00:25,972
some idea of the high level estimate,

10
00:00:25,972 --> 00:00:28,972
we will likely move on to designing your solutions,

11
00:00:28,972 --> 00:00:32,972
sometimes also known as the technical specifications.

12
00:00:32,972 --> 00:00:36,972
Okay, system design is the process of defining the architecture,

13
00:00:36,972 --> 00:00:38,772
components, modules, interfaces,

14
00:00:38,772 --> 00:00:44,222
and data for a system to satisfy specified requirements,

15
00:00:44,222 --> 00:00:48,245
in accordance with your architectural roadmap and

16
00:00:48,245 --> 00:00:49,881
standards that I'll talk about later.

17
00:00:49,881 --> 00:00:53,305
Now typically the customer is usually interested in the functional specs,

18
00:00:53,305 --> 00:00:54,972
you know, the business specs,

19
00:00:54,972 --> 00:00:58,305
the use cases and things like that as discussed earlier,

20
00:00:58,305 --> 00:01:01,427
unless or not at all in the technical specifications.

21
00:01:01,427 --> 00:01:08,972
Now let's see why design and architecture is important for you.

22
00:01:08,972 --> 00:01:10,972
Why is system design and architecture important?

23
00:01:10,972 --> 00:01:12,401
In fact, extremely important.

24
00:01:12,401 --> 00:01:15,972
So if everyone just went out for a long one,

25
00:01:15,972 --> 00:01:17,172
in other words,

26
00:01:17,172 --> 00:01:19,972
every application would be designed and architected

27
00:01:19,972 --> 00:01:21,305
differently by each developer,

28
00:01:21,305 --> 00:01:26,280
now that is not necessarily bad if the business requirements are driving it,

29
00:01:26,280 --> 00:01:29,049
but it is bad, not good,

30
00:01:29,049 --> 00:01:32,258
if each and every developer decided on their own how

31
00:01:32,258 --> 00:01:33,972
to do everything their own way.

32
00:01:33,972 --> 00:01:36,699
You cannot run a business or maintain applications efficiently if

33
00:01:36,699 --> 00:01:39,972
you do not have a design and architecture process.

34
00:01:39,972 --> 00:01:42,889
For example, maybe one developer uses MVVM,

35
00:01:42,889 --> 00:01:46,572
one MVC, one Angular 1, another one Angular 2,

36
00:01:46,572 --> 00:01:48,972
through a design and architecture process,

37
00:01:48,972 --> 00:01:53,972
those decision will be vetted and jointly determined for the best interest

38
00:01:53,972 --> 00:01:57,972
of the applications and the solutions for the customer.

39
00:01:57,972 --> 00:01:59,686
Alright, best practices.

40
00:01:59,686 --> 00:02:01,972
What's a best practice?

41
00:02:01,972 --> 00:02:05,972
It's a method or technique that has been generally accepted as superior

42
00:02:05,972 --> 00:02:10,639
to any alternatives because it produces practical,

43
00:02:10,639 --> 00:02:11,972
expected, efficient,

44
00:02:11,972 --> 00:02:16,972
and repeatable results that are better than those achieved by other means,

45
00:02:16,972 --> 00:02:19,972
and that relates to your own organization in your department.

46
00:02:19,972 --> 00:02:23,245
As an example, maybe one developer uses stored procs,

47
00:02:23,245 --> 00:02:25,790
another Entity Framework, and other dynamic SQL.

48
00:02:25,790 --> 00:02:28,336
Through a design and an architecture process,

49
00:02:28,336 --> 00:02:33,608
those decision will be vetted and jointly determined to be the best solution.

50
00:02:33,608 --> 00:02:34,699
Design patterns,

51
00:02:34,699 --> 00:02:41,049
a design pattern is a reusable form of a solution to a design problem.

52
00:02:41,049 --> 00:02:44,639
For example, at my company we had a data layer,

53
00:02:44,639 --> 00:02:49,639
a complete data layer that we use on about 90% of all our apps,

54
00:02:49,639 --> 00:02:53,699
it was a standard, reusable and extendable layer of software.

55
00:02:53,699 --> 00:02:57,587
Hence the developer could move from project to project very easily,

56
00:02:57,587 --> 00:03:00,972
and by the way, we had tons of prebuilt design patterns,

57
00:03:00,972 --> 00:03:03,055
not just for data access.

58
00:03:03,055 --> 00:03:05,972
Standards, the most simple case, for example,

59
00:03:05,972 --> 00:03:09,972
we have programming standards say for C# and SQL.

60
00:03:09,972 --> 00:03:10,722
This helps, again,

61
00:03:10,722 --> 00:03:12,972
when a developer moves from one project to another

62
00:03:12,972 --> 00:03:14,203
or application to application,

63
00:03:14,203 --> 00:03:19,889
it just makes it easier for them to jump right in and go forward.

64
00:03:19,889 --> 00:03:23,972
Common tools, for me fewer the better.

65
00:03:23,972 --> 00:03:27,972
I firmly believe you'll want the fewest tools that maximize your productivity,

66
00:03:27,972 --> 00:03:32,972
again, barring special business driven circumstances.

67
00:03:32,972 --> 00:03:35,881
Fewer tools mean fewer licenses, therefore saving money,

68
00:03:35,881 --> 00:03:41,139
may mean less training, may mean a more streamline set of best practices,

69
00:03:41,139 --> 00:03:43,639
design patterns and standards.

70
00:03:43,639 --> 00:03:46,972
Next, legal and regulatory.

71
00:03:46,972 --> 00:03:47,905
Based on the industry you are in,

72
00:03:47,905 --> 00:03:52,972
you may have a plethora of legal or regulatory items you must be compliant with.

73
00:03:52,972 --> 00:03:56,305
For example, some apps must comply with ADA,

74
00:03:56,305 --> 00:03:59,305
American with Disabilities Act, regarding user interfaces.

75
00:03:59,305 --> 00:04:03,097
I also recommend you have documented your best practices,

76
00:04:03,097 --> 00:04:04,597
documented your design patterns,

77
00:04:04,597 --> 00:04:08,972
documented your standards and common tools and architectures so

78
00:04:08,972 --> 00:04:14,063
that everyone can understand that this suite of items is a

79
00:04:14,063 --> 00:04:17,639
continuously evolving set of decisions and architectural patterns

80
00:04:17,639 --> 00:04:21,258
that structure your software tools, enable scalability,

81
00:04:21,258 --> 00:04:24,722
enable improved performance, enhance maintainability,

82
00:04:24,722 --> 00:04:30,972
increase usability, all resulting in superior quality systems.

83
00:04:30,972 --> 00:04:31,472
Okay,

84
00:04:31,472 --> 00:04:36,258
all of this is for delivering the best functionality to

85
00:04:36,258 --> 00:04:37,972
meeting the needs of your customer.

86
00:04:37,972 --> 00:04:42,972
Now let's take a look at an architectural roadmap.

87
00:04:42,972 --> 00:04:46,972
You need a design and architecture technology roadmap.

88
00:04:46,972 --> 00:04:51,172
This roadmap is the guidance, the recommendations,

89
00:04:51,172 --> 00:04:57,972
and the predetermined approaches on how and when to use what technology.

90
00:04:57,972 --> 00:04:59,972
Design and architecture process, what is that?

91
00:04:59,972 --> 00:05:04,258
You need a process by which you can continually review

92
00:05:04,258 --> 00:05:06,639
and evolve and improve your roadmap.

93
00:05:06,639 --> 00:05:11,115
Here at my company we have quarterly meetings to review or we have just

94
00:05:11,115 --> 00:05:13,972
in time meetings based on the needs of the customer,

95
00:05:13,972 --> 00:05:15,639
project, or architect.

96
00:05:15,639 --> 00:05:16,750
Technology selection,

97
00:05:16,750 --> 00:05:23,972
you need a process to maintain the technologies within your roadmap as well.

98
00:05:23,972 --> 00:05:26,741
And lastly, for this module, check out the demo.

99
00:05:26,741 --> 00:05:29,639
zip file to see a sample of a roadmap,

100
00:05:29,639 --> 00:05:31,972
in there you'll see our technology roadmap,

101
00:05:31,972 --> 00:05:33,972
our design and architecture process,

102
00:05:33,972 --> 00:05:37,472
and an entire technology selection process as well.

103
00:05:37,472 --> 00:05:45,000
Alright now it's time to move on to construction. Actually, let's go build some software.

