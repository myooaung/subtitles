WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.150
Let's pin down a general layout of your designs.

00:00:03.150 --> 00:00:06.435
Basically, you're going to use grids and spacing to do that.

00:00:06.435 --> 00:00:08.400
Grids, and we're going to look at this in a minute,

00:00:08.400 --> 00:00:10.020
define a horizontal layout,

00:00:10.020 --> 00:00:13.110
and how your design behaves across different screen sizes.

00:00:13.110 --> 00:00:19.260
The spacing that you see here defines more how the elements are distributed vertically,

00:00:19.260 --> 00:00:23.910
and how the elements within the grid would be spaced.

00:00:23.910 --> 00:00:26.670
You can see my spacing cubes here,

00:00:26.670 --> 00:00:27.750
I set up a tenner.

00:00:27.750 --> 00:00:29.520
So 10, 20, 40, 60,

00:00:29.520 --> 00:00:35.040
and 120 are the distances that I am using and that you'll find across my designs.

00:00:35.040 --> 00:00:38.715
If the developer will find a distance of 35,

00:00:38.715 --> 00:00:41.060
you'll know I probably made a mistake,

00:00:41.060 --> 00:00:44.285
and he'll revert back to any of my original sizes,

00:00:44.285 --> 00:00:46.165
or he'll just ask me.

00:00:46.165 --> 00:00:49.260
I just want to show you how I usually use them.

00:00:49.260 --> 00:00:52.320
All of these, I just made into components,

00:00:52.320 --> 00:00:54.120
and sketch that will be symbols.

00:00:54.120 --> 00:00:56.400
Then what I can do,

00:00:56.400 --> 00:00:58.530
I have them saved here,

00:00:58.530 --> 00:01:00.090
in my assets tab,

00:01:00.090 --> 00:01:02.070
and I can just drag them out and reuse them,

00:01:02.070 --> 00:01:05.050
I don't need to redraw them every time.

00:01:05.050 --> 00:01:08.720
You can also just switch onto grids in the background,

00:01:08.720 --> 00:01:10.210
and then you can toggle this on and off.

00:01:10.210 --> 00:01:11.990
This is the same as sketching in Figma.

00:01:11.990 --> 00:01:14.810
Then you can align all your elements to that.

00:01:14.810 --> 00:01:17.820
One word on the 10 pixels that I am using,

00:01:17.820 --> 00:01:19.910
I'm using 10 pixels because I knew that

00:01:19.910 --> 00:01:23.030
my elements were going to be quite large and quite easy,

00:01:23.030 --> 00:01:24.965
and there's not too much detail.

00:01:24.965 --> 00:01:28.130
However, it's actually best practice to use an eight-point grid,

00:01:28.130 --> 00:01:29.740
so definitely look into that.

00:01:29.740 --> 00:01:33.230
If you've never used that, it sounds a bit strange because it seems uneven,

00:01:33.230 --> 00:01:35.735
so it would be 8, 16, and so on.

00:01:35.735 --> 00:01:39.605
But it's actually not because you can really break it down perfectly.

00:01:39.605 --> 00:01:41.300
If you look closely, for example,

00:01:41.300 --> 00:01:44.840
a topography, topography also comes in eight steps.

00:01:44.840 --> 00:01:48.785
It would be 16 and then it will be 24 and 32.

00:01:48.785 --> 00:01:51.170
This is really nice because then all of

00:01:51.170 --> 00:01:53.690
your elements will really align and this will be a system,

00:01:53.690 --> 00:01:57.195
so check that one out. Here comes the grid.

00:01:57.195 --> 00:01:59.780
The grid is basically the backbone of your design.

00:01:59.780 --> 00:02:01.970
This is, besides components, I believe,

00:02:01.970 --> 00:02:03.830
probably one of the most important things,

00:02:03.830 --> 00:02:06.935
and also one of the places where things tend to get wrong.

00:02:06.935 --> 00:02:09.200
Make sure that before you start your project,

00:02:09.200 --> 00:02:11.510
talk to your development team and ask them if there's

00:02:11.510 --> 00:02:14.075
a specific grid system they want you to use.

00:02:14.075 --> 00:02:16.790
This might be because there's already things set up

00:02:16.790 --> 00:02:19.590
with that grid system or because they have experience with it,

00:02:19.590 --> 00:02:21.200
and want you to use that one.

00:02:21.200 --> 00:02:22.760
If you can choose yourself,

00:02:22.760 --> 00:02:25.670
then you can just choose any grid system that you like.

00:02:25.670 --> 00:02:28.790
In this example, I am using CSS grid.

00:02:28.790 --> 00:02:31.160
In CSS grid, you can basically set up your grid to

00:02:31.160 --> 00:02:33.610
however you like it and it's super lies,

00:02:33.610 --> 00:02:35.360
and have a lot of possibilities.

00:02:35.360 --> 00:02:36.560
If you don't know it, I really,

00:02:36.560 --> 00:02:38.045
really love it, check it out.

00:02:38.045 --> 00:02:40.280
If you want to use a more traditional grid,

00:02:40.280 --> 00:02:42.905
I would recommend that you have a look at Bootstrap,

00:02:42.905 --> 00:02:44.615
and we're also going to look at Bootstrap,

00:02:44.615 --> 00:02:47.510
and I'm going to use it for my examples later on,

00:02:47.510 --> 00:02:50.695
when talking about responsive design in more detail.

00:02:50.695 --> 00:02:52.190
On my overview sheet here,

00:02:52.190 --> 00:02:57.170
I am basically just giving the information about how I am using this grid system.

00:02:57.170 --> 00:02:59.540
There is a link to the CSS grid,

00:02:59.540 --> 00:03:01.805
some documentation about that grid system.

00:03:01.805 --> 00:03:03.500
If you have something like Bootstrap,

00:03:03.500 --> 00:03:06.380
just link to the documentation and your development team will

00:03:06.380 --> 00:03:09.470
find all the technical information they will need there.

00:03:09.470 --> 00:03:12.200
Then I am saying that these are the break points I need.

00:03:12.200 --> 00:03:14.270
As you can see, this has very few because

00:03:14.270 --> 00:03:17.390
my design for this website has been quite straight forward.

00:03:17.390 --> 00:03:23.690
I have a mobile view that can stretch pretty much throughout any tablets.

00:03:23.690 --> 00:03:26.450
Then I am starting here, as you can see,

00:03:26.450 --> 00:03:29.870
from 768 pixels upwards,

00:03:29.870 --> 00:03:32.495
I am starting with a full column design.

00:03:32.495 --> 00:03:36.110
If you get confused about this strange number of a break point,

00:03:36.110 --> 00:03:37.970
once we talk about responsiveness,

00:03:37.970 --> 00:03:41.555
you will see that this is based on a responsive Bootstrap grid,

00:03:41.555 --> 00:03:43.675
and I'll explain more about that.

00:03:43.675 --> 00:03:47.040
From there, it's four columns and then when it gets larger,

00:03:47.040 --> 00:03:51.110
there's just some small changes like I have a bit more padding on the side.

00:03:51.110 --> 00:03:53.300
I'm having my spacing blocks,

00:03:53.300 --> 00:03:55.085
and that define everything.

00:03:55.085 --> 00:03:56.825
I am having, here,

00:03:56.825 --> 00:03:58.955
my columns are stretching.

00:03:58.955 --> 00:04:03.055
This is some liquid design within breakpoints.

00:04:03.055 --> 00:04:07.160
Let me just show you quickly what that looks like in my design file.

00:04:07.160 --> 00:04:09.710
If I have, here, my screen,

00:04:09.710 --> 00:04:11.915
then I would go here on layout grids,

00:04:11.915 --> 00:04:15.020
and as you can see, you can save different grids.

00:04:15.020 --> 00:04:19.830
I could also just apply a Bootstrap grid here, as you can see,

00:04:19.830 --> 00:04:21.260
and that one is, for example,

00:04:21.260 --> 00:04:25.505
one that sits fixed within some break points.

00:04:25.505 --> 00:04:29.960
I want my CSS grid.

00:04:29.960 --> 00:04:33.940
Here it is. You can see that that one behave stretches.

00:04:33.940 --> 00:04:37.820
I can just set that up perfectly here in Figma so it behaves

00:04:37.820 --> 00:04:41.545
exactly the way I told the development team. I'm going to use this.

00:04:41.545 --> 00:04:44.975
The cool thing is, because you can use different grids and setup different grids,

00:04:44.975 --> 00:04:47.030
here I have my mobile grid,

00:04:47.030 --> 00:04:50.080
and then that behaves exactly the same way.

00:04:50.080 --> 00:04:53.510
To sum up, you can use any grid system you wish.

00:04:53.510 --> 00:04:56.285
Just make sure that your development team is fine with it.

00:04:56.285 --> 00:04:59.900
I still recommend adding a little overview page, just like this,

00:04:59.900 --> 00:05:01.370
so to make sure that they have

00:05:01.370 --> 00:05:04.700
the most important details and behaviors that you're going for.

00:05:04.700 --> 00:05:08.120
If you are having more detailed documentation,

00:05:08.120 --> 00:05:09.710
for example, if you're using a Bootstrap grid,

00:05:09.710 --> 00:05:12.295
then make sure to add that link.

00:05:12.295 --> 00:05:15.330
For your designs, just make sure that you apply

00:05:15.330 --> 00:05:18.260
the grid and align all of your elements according to it.

00:05:18.260 --> 00:05:20.800
Now you're probably going to have that last big question,

00:05:20.800 --> 00:05:24.530
how many screens do I have to design each break point, or how does that work?

00:05:24.530 --> 00:05:26.540
Bear with me a minute because we're going to talk

00:05:26.540 --> 00:05:29.970
more about that when we talk about responsive design.
