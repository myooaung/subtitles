WEBVTT

00:00:00.000 --> 00:00:02.696
Ok so welcome back.
Let's go ahead and

00:00:02.721 --> 00:00:05.429
take a look at the
continue, so we use

00:00:05.529 --> 00:00:08.284
continue when we
want to skip one loop

00:00:08.309 --> 00:00:11.070
iteration so, in the
example that I am

00:00:11.170 --> 00:00:16.820
about to write, we will want to print out
all numbers between one and 20 except

00:00:16.820 --> 00:00:18.944
for those that are
divisible by three

00:00:18.969 --> 00:00:21.140
so they can be divided
by three without

00:00:21.240 --> 00:00:25.140
that what does it mean that a number can
be divided by three?

00:00:25.140 --> 00:00:28.213
well nine can be divided
by three 9/3 is

00:00:28.238 --> 00:00:31.400
basically three three
times three is 9 but 10

00:00:31.500 --> 00:00:37.670
is not divisible by three because then
divided by three is three with the

00:00:37.670 --> 00:00:43.350
remainder of one, so there is a remainder
that is greater than 0 that is basically

00:00:43.350 --> 00:00:48.360
not zero than the number is not
divisible by three only without the

00:00:48.360 --> 00:00:53.059
remainder can you actually state that
the number is divisible by three you

00:00:53.059 --> 00:00:55.627
will see what I
mean by this in an

00:00:55.652 --> 00:00:58.260
example so how can
we basically achieve

00:00:58.260 --> 00:01:01.018
this? how can we do this check?
well we

00:01:01.043 --> 00:01:03.619
can use the modulus
operator which will

00:01:03.719 --> 00:01:08.229
return the remainder when dividing two
numbers to see if the number is

00:01:08.229 --> 00:01:11.369
divisible by three we can do the
following the pseudocode

00:01:11.979 --> 00:01:16.629
let me just make an example
with the pseudocode.

00:01:16.654 --> 00:01:20.710
Ok we will write
some sort of an if

00:01:20.710 --> 00:01:25.580
statement and we will define
a condition in there so it will go like

00:01:25.580 --> 00:01:32.680
this, so n modulus three and we will
check whether this is equal to 0 or not

00:01:35.880 --> 00:01:42.770
so if it is equal to 0 then n is
divisible by three if n it is some sort of

00:01:42.770 --> 00:01:48.460
a number, if it is not equal
to 0, if it is not the same as zero so to

00:01:48.460 --> 00:01:53.540
say then it is not divisible by three
and in such a way we will verify to

00:01:53.540 --> 00:01:57.214
check with their
number is divisible

00:01:57.239 --> 00:02:00.619
by three or not so
in case that is not

00:02:00.619 --> 00:02:06.500
divisible by 3 wait

00:02:07.020 --> 00:02:14.420
Ok so in case that it
is divisible by three we will want to

00:02:14.420 --> 00:02:16.789
skip that one got
confused a little bit

00:02:16.814 --> 00:02:19.050
here at my notes but
soon enough you

00:02:19.050 --> 00:02:21.534
will see an example
how this is intended

00:02:21.559 --> 00:02:24.129
to work so we will
recycle a little bit

00:02:24.129 --> 00:02:28.930
of the code here we will take the for
loop but unfortunately we will have to

00:02:28.930 --> 00:02:34.078
delete everything
here and here and ok

00:02:34.103 --> 00:02:38.299
so we can rework we
can modify this one

00:02:38.299 --> 00:02:43.180
so we will leave the I to be equal to
one and we will change this to 20 and

00:02:43.180 --> 00:02:46.265
iteration will remain
the same so let's

00:02:46.290 --> 00:02:49.349
go let's go ahead and
begin the numbers

00:02:49.349 --> 00:02:52.567
will iterate from 1,1
included to twenty

00:02:52.592 --> 00:02:55.650
and twenty included
so we will write

00:02:55.650 --> 00:03:01.590
something like this :if, I,  modulus

00:03:02.310 --> 00:03:09.742
three is the same as
0, then I would like

00:03:09.767 --> 00:03:17.340
you to skip so continue
semicolon skip

00:03:17.340 --> 00:03:22.030
this iteration and go to the next one so
continued will skip this current

00:03:22.030 --> 00:03:23.961
iteration in the
loop and we'll go to

00:03:23.986 --> 00:03:26.139
the next one, so this
situation is one

00:03:26.139 --> 00:03:31.144
it will skip one and
it will go to the next

00:03:31.169 --> 00:03:36.049
iteration which is 2.
Ok so down below std

00:03:36.049 --> 00:03:43.969
colon colon, cout, perhaps I should hit enter here,
cout is not part of the if

00:03:45.069 --> 00:03:49.079
statement I've placed curly brackets
in the if statement because I stated before

00:03:49.079 --> 00:03:52.669
you're not require curly brackets if
there was only one statement down below it

00:03:53.099 --> 00:03:59.123
ok so we should print
out I and std, colon

00:03:59.148 --> 00:04:05.540
colon, endl, ok so you
will see this will

00:04:05.540 --> 00:04:11.669
actually print out all the numbers
between one and 20 that are except for

00:04:11.669 --> 00:04:14.296
those that are
actually divisible by

00:04:14.321 --> 00:04:16.759
three so here it
states if divisible by

00:04:16.759 --> 00:04:20.220
3 continue so skip the current iteration

00:04:20.220 --> 00:04:24.000
else you will basically finished this
except there is no else they've been

00:04:24.000 --> 00:04:27.613
there is no need for
it so let's go ahead

00:04:27.638 --> 00:04:30.730
and build and run
this, there we go, so

00:04:30.730 --> 00:04:34.494
123 is not here because three is

00:04:34.519 --> 00:04:37.630
divisible by three
four five six is not

00:04:37.630 --> 00:04:41.890
here it's the visible by 3, 789 not here

00:04:41.890 --> 00:04:46.880
12 not here 14, 15 not here

00:04:47.820 --> 00:04:51.156
16 17 18 is gone 19
is here, 20 is here

00:04:51.181 --> 00:04:54.420
so you can see all
the numbers that are

00:04:54.420 --> 00:04:59.050
actually divisible by three have been admited here, those iterations have been

00:04:59.050 --> 00:05:01.720
skipped so all the
iterations where I

00:05:01.745 --> 00:05:04.550
this integer was
actually divisible

00:05:04.650 --> 00:05:11.640
by 3 the continue, this condition evaluated to true the continue

00:05:11.640 --> 00:05:17.470
statement was executed and this piece of the
code, was never reached because it went

00:05:17.470 --> 00:05:21.590
into the loop, back into the loop and the
current iteration from this point

00:05:21.590 --> 00:05:24.024
onwards was skipped
so if in this

00:05:24.049 --> 00:05:26.300
situation I had
something before the if

00:05:26.300 --> 00:05:29.830
statement that would have been executed
but everything after to continue

00:05:29.830 --> 00:05:33.580
statement will not be executed rather
instead it will go back to next

00:05:33.580 --> 00:05:39.970
iteration in the for loop, we can just go
ahead and take a look at the another

00:05:39.970 --> 00:05:45.440
example let me just terminate this
program in the background

00:05:47.600 --> 00:05:53.100
kinda not a fan of the separate window
like it in the Eclipse that you know I

00:05:53.100 --> 00:05:57.441
have the console
embedded into the id and

00:05:57.466 --> 00:06:01.310
not as a separate
window so it's a lot

00:06:01.310 --> 00:06:04.249
easier to run and
terminate a program but

00:06:04.274 --> 00:06:07.130
anyway let's go ahead
and go back to

00:06:07.130 --> 00:06:09.149
this so let's take
a look at another

00:06:09.174 --> 00:06:11.320
example let's modify
the previous to

00:06:11.320 --> 00:06:14.226
print out numbers
from twenty to one so

00:06:14.251 --> 00:06:17.760
reverse the order
except for those that

00:06:17.760 --> 00:06:24.820
are not divisible by 3 I would advise
you sorry just got something in

00:06:24.820 --> 00:06:27.206
my throat. I would advise you to

00:06:27.231 --> 00:06:30.070
actually go ahead
and try to do this for yourself

00:06:30.900 --> 00:06:36.560
prior to actually watching me how to do
it because you really don't need to use

00:06:36.560 --> 00:06:38.646
anything that we
haven't learned as

00:06:38.671 --> 00:06:40.830
does far and it just
takes a few simple

00:06:40.830 --> 00:06:43.219
modifications in order
to make it work

00:06:43.244 --> 00:06:45.360
if you want to pause
the video if not

00:06:45.360 --> 00:06:48.820
just be with me for a sec and we will
do it in no time

00:06:48.820 --> 00:06:54.389
the first thing that you will need to do
is reverse this, so we will begin from

00:06:54.389 --> 00:07:02.330
20 and we will be iterating in reverse,
so we will be subtracting one them one

00:07:04.630 --> 00:07:12.600
at a time and here you will have one and
here you will have greater or equal to

00:07:12.800 --> 00:07:16.199
one so far as long
as I is greater or

00:07:16.224 --> 00:07:19.420
equal to 1 beginning
from twenty take

00:07:19.520 --> 00:07:21.825
one away from it so
each iteration this

00:07:21.850 --> 00:07:24.180
will be lesser by one
so it will be 19, 19

00:07:24.180 --> 00:07:27.520
will be less or equal to 1 18 will be
sorry

00:07:27.520 --> 00:07:32.210
20 will be greater or equal to 1, 19
will be greater or equal to 1

00:07:32.210 --> 00:07:36.539
18 will be greater or equal to 1
and once it reaches 1 it will still be

00:07:36.539 --> 00:07:40.599
equal to 1 and once it reaches zero it
will no longer be greater or equal to 1

00:07:40.599 --> 00:07:44.479
and the loop will terminate as this
condition will be evaluated to false.

00:07:44.479 --> 00:07:51.664
Anyway so now we want
to continue ahead

00:07:51.689 --> 00:07:58.550
and say if I is
divisible by three we

00:07:58.550 --> 00:08:01.980
want to skip the
iteration so it'll

00:08:02.005 --> 00:08:05.409
continue this will
get printed out and

00:08:05.409 --> 00:08:08.744
that's it but you
know we wanted to

00:08:08.769 --> 00:08:11.940
actually reverse this
part as well as I

00:08:11.940 --> 00:08:17.479
have stated so except for those

00:08:17.479 --> 00:08:19.830
numbers that are not
divisible by three

00:08:19.855 --> 00:08:22.180
so if a number is not
divisible by three

00:08:22.180 --> 00:08:24.389
we would like it to be

00:08:24.389 --> 00:08:29.970
we would like it to be printed out if it
is divisible by three,

00:08:29.970 --> 00:08:32.940
actually if it is divisible by three
would like it to be printed out if it is

00:08:32.940 --> 00:08:38.270
not divisible by three we would not like
it to be printed out so I made a bit of

00:08:38.270 --> 00:08:39.976
a mess they're
saying that anyway

00:08:40.001 --> 00:08:41.919
let me just go ahead and do this

00:08:41.919 --> 00:08:47.790
so this is all you need to do if it's
not equal to 0

00:08:47.790 --> 00:08:54.540
meaning that if ten was
2/3 that would be nine with the

00:08:54.540 --> 00:08:59.820
remainder of 1, 1 is not equal to 0 and
and for the continue statement shall be

00:08:59.820 --> 00:09:02.492
executed so really
we're just gonna

00:09:02.517 --> 00:09:04.910
reverse here and we've reversed

00:09:04.910 --> 00:09:12.819
the loop here the print
statement that still remains the same so

00:09:13.019 --> 00:09:16.319
no big deal. Let's go
ahead and run this

00:09:16.344 --> 00:09:19.850
and you will see, 18,
15, 12, 9,6,3 only

00:09:19.850 --> 00:09:26.279
numbers that are divisible by three are
being printed out all the numbers that

00:09:26.279 --> 00:09:33.880
are not divisible by three, are not gonna
be printed out so if it is not divisible

00:09:33.880 --> 00:09:37.115
by three it's being
printed out there there

00:09:37.140 --> 00:09:40.169
you go, so sorry if it
is divisible by three

00:09:40.269 --> 00:09:44.060
it's been printed out you have 18, you have 15,  you have 20, you

00:09:44.060 --> 00:09:50.380
have 9 you have 6 and you have 3, 3
is divisible 16 is visible 9, 12, 15, 18

00:09:50.380 --> 00:09:53.723
there are all divisible
by 3 while in

00:09:53.748 --> 00:09:56.769
the other example all
the numbers that

00:09:56.769 --> 00:10:00.820
were divisible by three were not being
printed out here all the numbers that

00:10:00.820 --> 00:10:03.759
are divisible by 3
are being printed

00:10:03.784 --> 00:10:06.019
out sorry if I made
a bit of a mess a

00:10:06.019 --> 00:10:07.943
moment ago in my
explanation, but I'm

00:10:07.968 --> 00:10:09.729
sure you can figure
it out it's really

00:10:09.829 --> 00:10:14.089
all depends on this one here, this one
states with whether you want the numbers

00:10:14.089 --> 00:10:18.320
to be divisible by three or if you
want to filter the numbers that are not

00:10:18.320 --> 00:10:23.860
divisible by three, they are divisible if
the remainder is equal to 0, they are not

00:10:23.860 --> 00:10:30.329
divisible if the remainder is different
from zero. Anyway I bet you farewell and

00:10:30.329 --> 00:10:35.420
in the next tutorial will jump into the go-to so called loop,

00:10:35.420 --> 00:10:38.350
not exactly a loop but
as I said, so called

00:10:38.375 --> 00:10:41.279
loop. I bet you all
farewell and hope to see you then.