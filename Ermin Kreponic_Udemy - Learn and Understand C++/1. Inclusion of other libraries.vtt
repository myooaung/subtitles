WEBVTT

1
00:00:00.106 --> 00:00:02.100
Welcome all.
So,

2
00:00:02.261 --> 00:00:04.211
today we're going to
go ahead and

3
00:00:04.371 --> 00:00:05.521
begin a new

4
00:00:05.686 --> 00:00:07.566
chapter. So,

5
00:00:07.851 --> 00:00:09.566
in this chapter,
we will

6
00:00:09.726 --> 00:00:10.985
talk about...

7
00:00:11.456 --> 00:00:14.545
I will basically be demonstrating
some more advanced

8
00:00:14.956 --> 00:00:17.360
examples. So we will talk
a little bit about

9
00:00:17.521 --> 00:00:20.135
the inclusion of other
libraries.

10
00:00:20.541 --> 00:00:23.165
What that actually is
and what that stands for.

11
00:00:23.361 --> 00:00:25.560
Logical operators,
relational operators,

12
00:00:25.721 --> 00:00:28.005
and then finally we will

13
00:00:28.286 --> 00:00:31.165
dive into the
if else statements,

14
00:00:31.891 --> 00:00:34.000
conditional executions
and

15
00:00:34.176 --> 00:00:35.443
operand combining

16
00:00:35.606 --> 00:00:37.200
and the combinations
of operands.

17
00:00:37.546 --> 00:00:40.040
So you will see what I mean
by this soon enough

18
00:00:40.320 --> 00:00:42.520
but for the time being,
let's go ahead and

19
00:00:42.681 --> 00:00:44.175
begin with

20
00:00:44.521 --> 00:00:46.695
the inclusion of
other libraries.

21
00:00:47.316 --> 00:00:49.520
I'm just going to go ahead
and quickly create a project.

22
00:00:49.681 --> 00:00:53.305
Hopefully, you know how
to do this by now.

23
00:00:55.266 --> 00:00:58.575
Project, title, how shall
we name this?

24
00:01:00.010 --> 00:01:01.456
Ah, I don't know.

25
00:01:03.996 --> 00:01:04.870
I'm just going to name it.

26
00:01:05.770 --> 00:01:06.705
Chapter 3

27
00:01:08.841 --> 00:01:10.023
You can name it
however you like.

28
00:01:10.186 --> 00:01:13.146
I just told you the
list of subjects, so name it

29
00:01:13.641 --> 00:01:16.665
give it a convenient and
an appropriate name

30
00:01:16.906 --> 00:01:19.310
for user. You can come back
later, you could code and

31
00:01:19.486 --> 00:01:20.391
know instantly

32
00:01:20.551 --> 00:01:21.156
what it is.

33
00:01:21.320 --> 00:01:22.331
I'm just going to
go ahead and click.

34
00:01:22.491 --> 00:01:23.260
Next,

35
00:01:23.496 --> 00:01:24.196
finish,

36
00:01:24.840 --> 00:01:25.966
thank you very much.

37
00:01:27.571 --> 00:01:28.145
Main

38
00:01:28.871 --> 00:01:29.765
I'm going to delete this.

39
00:01:31.196 --> 00:01:35.110
I know I can change the default
thing that the code blocks

40
00:01:35.271 --> 00:01:37.595
ouputs but I'm a

41
00:01:38.086 --> 00:01:39.680
very lazy person
in this regard.

42
00:01:39.841 --> 00:01:42.960
So it's actually easier for me
to, I've deemed it easier

43
00:01:43.121 --> 00:01:45.850
to delete every time as
supposed to permanently

44
00:01:46.321 --> 00:01:46.875
change it.

45
00:01:48.071 --> 00:01:51.640
Anyway, I'm not that used to
using code blocks but

46
00:01:51.801 --> 00:01:54.000
it is a good ID for learning.

47
00:01:57.201 --> 00:01:58.715
Let's go ahead and see

48
00:02:00.061 --> 00:02:01.540
how to include libraries

49
00:02:01.701 --> 00:02:03.130
as well as the basics,

50
00:02:05.041 --> 00:02:07.460
as well as some other basics
in regard to that.

51
00:02:07.805 --> 00:02:09.615
So we've already seen this.

52
00:02:09.956 --> 00:02:11.510
I mean, nothing new, right.

53
00:02:12.646 --> 00:02:13.431
include

54
00:02:14.096 --> 00:02:14.840
io

55
00:02:15.866 --> 00:02:16.461
stream

56
00:02:16.676 --> 00:02:17.115
So,

57
00:02:17.276 --> 00:02:19.200
we basically included
a library.

58
00:02:19.361 --> 00:02:20.985
When including these
libraries,

59
00:02:21.221 --> 00:02:23.055
we must place them in

60
00:02:23.910 --> 00:02:26.721
lesser than and greater than
signs. So in between them

61
00:02:27.046 --> 00:02:29.815
we basically just include
a library.

62
00:02:30.031 --> 00:02:31.820
This is a library,
what I've selected.

63
00:02:32.571 --> 00:02:33.336
Down below,

64
00:02:34.511 --> 00:02:36.195
and go ahead and type in

65
00:02:36.776 --> 00:02:38.095
string.

66
00:02:39.696 --> 00:02:42.360
So string, same. Again,
no big deal, no difference.

67
00:02:43.921 --> 00:02:46.211
Anyway in C++,
there is no need

68
00:02:46.371 --> 00:02:47.663
for adding a

69
00:02:47.826 --> 00:02:51.200
.H extension on
system libraries,

70
00:02:51.361 --> 00:02:53.846
which is the case
in C.

71
00:02:55.036 --> 00:02:57.795
So, I don't know in C,

72
00:02:57.956 --> 00:03:00.021
for example, you would
have something like this.

73
00:03:01.816 --> 00:03:05.035
include and you
could have

74
00:03:06.150 --> 00:03:07.000
well,

75
00:03:07.491 --> 00:03:08.121
time

76
00:03:08.281 --> 00:03:08.811
oops

77
00:03:09.816 --> 00:03:10.435
time

78
00:03:11.996 --> 00:03:14.285
.H so this is still,
this would still

79
00:03:14.446 --> 00:03:15.875
this should still
be valid here.

80
00:03:16.516 --> 00:03:19.041
However, this is not
something that we

81
00:03:19.206 --> 00:03:19.811
do in

82
00:03:19.971 --> 00:03:22.550
C++ in general.
Not like this anyway.

83
00:03:23.021 --> 00:03:25.495
If you have these things
you would...

84
00:03:28.526 --> 00:03:29.345
My apologies.

85
00:03:29.506 --> 00:03:31.670
You would actually put
this into quote marks.

86
00:03:31.831 --> 00:03:32.418
And

87
00:03:32.580 --> 00:03:34.411
that would be
time.h

88
00:03:34.571 --> 00:03:34.985
like that.

89
00:03:35.436 --> 00:03:36.555
So but we're not going to,

90
00:03:36.716 --> 00:03:37.695
we're not going to
do that

91
00:03:37.956 --> 00:03:40.385
now, not yet and
not in such a way.

92
00:03:40.791 --> 00:03:44.160
Also because C++ is
compatible with C,

93
00:03:44.321 --> 00:03:46.386
there was a special syntax
in naming

94
00:03:46.550 --> 00:03:48.300
convention for including

95
00:03:48.556 --> 00:03:49.471
libraries.

96
00:03:50.841 --> 00:03:52.245
And you would

97
00:03:52.421 --> 00:03:56.150
you would just use this
C, name of the library

98
00:03:56.666 --> 00:03:59.305
and without using the
extension. For example,

99
00:04:00.506 --> 00:04:02.400
I don't know, this is
what you would do without

100
00:04:02.561 --> 00:04:05.365
the quote marks or
without pretty much,

101
00:04:05.711 --> 00:04:08.510
without pretty much anything.
In C++ we can,

102
00:04:08.675 --> 00:04:09.856
we can just

103
00:04:10.016 --> 00:04:10.740
do this.

104
00:04:11.896 --> 00:04:14.870
I've shown you time
a moment ago and we would do this

105
00:04:15.031 --> 00:04:15.648
include

106
00:04:17.101 --> 00:04:17.910
C

107
00:04:19.336 --> 00:04:20.875
time
There we go.

108
00:04:21.431 --> 00:04:22.410
So that's how you would

109
00:04:22.671 --> 00:04:23.496
include time

110
00:04:23.736 --> 00:04:25.970
without actually going,

111
00:04:26.251 --> 00:04:27.570
without actually doing this.

112
00:04:28.341 --> 00:04:29.365
This would be,

113
00:04:30.881 --> 00:04:32.480
this would be C format.

114
00:04:34.186 --> 00:04:34.890
And

115
00:04:35.296 --> 00:04:38.175
this would be a C++
format of the same library.

116
00:04:38.411 --> 00:04:39.710
So, no big deal.

117
00:04:40.311 --> 00:04:40.981
In general,

118
00:04:41.141 --> 00:04:43.656
the rule of the thumb,
so to say,

119
00:04:44.066 --> 00:04:44.990
if you have

120
00:04:45.151 --> 00:04:46.420
a library in C

121
00:04:46.581 --> 00:04:49.040
and if you would like
to use that same library

122
00:04:49.201 --> 00:04:52.870
in C++, if it exists,
I mean it's compatible,

123
00:04:53.366 --> 00:04:55.235
so there was a compatability
between the two

124
00:04:55.396 --> 00:04:57.095
and you should be
generally be able to use it.

125
00:04:58.016 --> 00:04:58.610
You would just

126
00:04:58.976 --> 00:05:00.296
do it like this, so.

127
00:05:01.556 --> 00:05:02.215
include

128
00:05:03.351 --> 00:05:04.800
And if the name of the
library,

129
00:05:04.961 --> 00:05:09.685
let's just invent something,
and say, abc.h

130
00:05:10.921 --> 00:05:12.200
So this is in C.

131
00:05:12.416 --> 00:05:13.801
If it's like this in C,

132
00:05:14.551 --> 00:05:15.505
it would just

133
00:05:16.216 --> 00:05:18.665
you would just need to
do some slight alterations

134
00:05:18.946 --> 00:05:20.400
and make it C++ compatible.

135
00:05:20.561 --> 00:05:22.525
So you would just place
a C infront of this,

136
00:05:22.911 --> 00:05:25.041
and you would delete the
.h

137
00:05:25.580 --> 00:05:26.165
So,

138
00:05:26.326 --> 00:05:27.771
this would be the
C syntax

139
00:05:28.736 --> 00:05:30.910
of the same library,
abc.h

140
00:05:31.486 --> 00:05:31.988
and

141
00:05:32.151 --> 00:05:33.266
it doesn't exist, well,

142
00:05:33.430 --> 00:05:34.406
maybe it does,
I don't know.

143
00:05:34.566 --> 00:05:37.310
but I've basically randomly
placed letters here.

144
00:05:38.231 --> 00:05:39.960
And if you would like to
include that same library

145
00:05:40.121 --> 00:05:42.075
in a C++ program,
well, you would just

146
00:05:42.240 --> 00:05:44.083
you would just
place C

147
00:05:44.246 --> 00:05:45.480
infront of the name

148
00:05:45.846 --> 00:05:46.950
of the library.

149
00:05:47.316 --> 00:05:47.976
I'm sorry.

150
00:05:50.326 --> 00:05:53.385
You would just place C
infront of the name of the library

151
00:05:53.546 --> 00:05:55.741
and you would remove
.h

152
00:05:56.811 --> 00:05:57.916
That's quite literally it.

153
00:05:58.301 --> 00:06:01.970
There is nothing too
complicated,

154
00:06:02.806 --> 00:06:04.336
nothing too complicated
about it.

155
00:06:04.811 --> 00:06:06.236
Anyway, here's a step.

156
00:06:06.856 --> 00:06:07.741
Few examples,

157
00:06:07.901 --> 00:06:08.466
no big deal.

158
00:06:08.626 --> 00:06:09.180
So,

159
00:06:10.696 --> 00:06:11.590
include

160
00:06:12.701 --> 00:06:13.680
std

161
00:06:14.036 --> 00:06:15.985
lib.h

162
00:06:17.205 --> 00:06:18.096
This is C.

163
00:06:19.121 --> 00:06:19.995
And

164
00:06:20.596 --> 00:06:21.596
include

165
00:06:21.896 --> 00:06:22.555
c

166
00:06:22.791 --> 00:06:24.915
stdlib

167
00:06:25.181 --> 00:06:26.735
So this is C++.

168
00:06:27.531 --> 00:06:28.526
Down below,

169
00:06:28.786 --> 00:06:29.765
we can type in

170
00:06:30.750 --> 00:06:31.791
include

171
00:06:32.881 --> 00:06:33.991
time.h

172
00:06:34.126 --> 00:06:35.675
as I stated before

173
00:06:36.081 --> 00:06:37.740
and up above,
you have

174
00:06:37.875 --> 00:06:38.896
ctime

175
00:06:42.291 --> 00:06:42.775
So,

176
00:06:42.911 --> 00:06:45.935
you have time.h,
which is c and ctime,

177
00:06:46.260 --> 00:06:48.070
which is C++.

178
00:06:50.216 --> 00:06:53.975
Now, there are also
non-system libraries

179
00:06:54.110 --> 00:06:55.515
that can be included

180
00:06:55.816 --> 00:06:56.876
by

181
00:06:57.011 --> 00:06:59.820
stating the path
of the file inside

182
00:06:59.955 --> 00:07:01.830
the double quotations.

183
00:07:02.430 --> 00:07:03.236
For example,

184
00:07:03.390 --> 00:07:04.560
you could have this.

185
00:07:06.525 --> 00:07:07.355
include

186
00:07:07.761 --> 00:07:08.376
Oh, sorry.

187
00:07:09.191 --> 00:07:09.956
quote marks

188
00:07:10.661 --> 00:07:11.640
Some

189
00:07:12.646 --> 00:07:14.605
Lib.h

190
00:07:16.891 --> 00:07:18.935
Now, this is not
going to compile.

191
00:07:19.731 --> 00:07:23.160
Because some lib.h
doesn't exist.

192
00:07:23.296 --> 00:07:26.445
If that exists, then okay.
But if it does not exist then

193
00:07:26.600 --> 00:07:27.876
it's not going to compile.

194
00:07:28.156 --> 00:07:29.585
This means that the library

195
00:07:29.721 --> 00:07:33.015
SomeLib.h is located in
the same directory

196
00:07:33.406 --> 00:07:34.531
as the file

197
00:07:35.006 --> 00:07:36.045
that includes it.

198
00:07:36.625 --> 00:07:38.456
If this is not the case,

199
00:07:39.101 --> 00:07:40.226
so if this is not the case,

200
00:07:40.361 --> 00:07:44.000
if this library file is
not exactly in the same folder,

201
00:07:44.945 --> 00:07:46.650
you see I have chapter 3
here

202
00:07:47.801 --> 00:07:48.565
and

203
00:07:48.701 --> 00:07:50.121
it says here
chapter 3,

204
00:07:50.256 --> 00:07:50.936
okay, main,

205
00:07:51.086 --> 00:07:52.815
so if it's not in
this folder,

206
00:07:53.071 --> 00:07:54.435
if that .h

207
00:07:55.036 --> 00:07:56.266
what did I name it?
SomeLib

208
00:07:56.401 --> 00:07:58.785
If SomeLib.h is not
located here

209
00:07:59.321 --> 00:08:00.900
the program will not,

210
00:08:01.136 --> 00:08:03.410
it will not run.
It will not compile,

211
00:08:03.546 --> 00:08:04.931
that will be a
major problem.

212
00:08:05.871 --> 00:08:06.486
However,

213
00:08:07.641 --> 00:08:08.546
if it's not located there,

214
00:08:08.681 --> 00:08:11.180
but if it's located elsewhere
on the system,

215
00:08:11.416 --> 00:08:15.420
you are given an ability
to specify an absolute path.

216
00:08:15.556 --> 00:08:16.065
So,

217
00:08:16.475 --> 00:08:17.131
path

218
00:08:18.051 --> 00:08:18.775
to

219
00:08:19.035 --> 00:08:19.821
the

220
00:08:20.336 --> 00:08:21.058
file

221
00:08:21.336 --> 00:08:23.380
And you can specify
an absolute path

222
00:08:23.641 --> 00:08:26.410
and then it will run
then it will be

223
00:08:26.821 --> 00:08:27.395
combined.

224
00:08:30.021 --> 00:08:32.040
So, there's just one
more thing that I would

225
00:08:32.176 --> 00:08:33.306
briefly like to mention,

226
00:08:33.441 --> 00:08:35.690
perhaps, not the most important
thing of them all.

227
00:08:36.141 --> 00:08:38.226
Basically what happens
when we include

228
00:08:38.361 --> 00:08:40.400
the same library

229
00:08:40.536 --> 00:08:41.830
multiple times.

230
00:08:41.966 --> 00:08:43.095
For example,

231
00:08:43.930 --> 00:08:45.866
if I have included
string here,

232
00:08:46.170 --> 00:08:47.575
and I

233
00:08:48.196 --> 00:08:49.043
I don't know,

234
00:08:49.176 --> 00:08:50.070
include it again.

235
00:08:50.306 --> 00:08:50.836
So,

236
00:08:52.165 --> 00:08:53.141
include

237
00:08:55.406 --> 00:08:56.700
include string

238
00:08:56.836 --> 00:08:57.645
So like this.

239
00:08:58.241 --> 00:08:59.026
In that case,

240
00:08:59.161 --> 00:09:00.541
compile will ignore

241
00:09:00.676 --> 00:09:01.841
every other include

242
00:09:01.976 --> 00:09:03.615
except the very first one

243
00:09:04.001 --> 00:09:04.661
that was made.

244
00:09:05.796 --> 00:09:06.406
So, it's a,

245
00:09:06.541 --> 00:09:08.605
it's a very wasteful
and shameful

246
00:09:08.741 --> 00:09:09.841
programming practice.

247
00:09:09.976 --> 00:09:13.230
But no big deal. It
happens to,

248
00:09:13.366 --> 00:09:14.170
happens to everyone

249
00:09:14.306 --> 00:09:16.010
from time to time.
So don't worry about it.

250
00:09:16.226 --> 00:09:17.551
It's not a major problem.

251
00:09:17.686 --> 00:09:19.485
It's actually not a problem at all.

252
00:09:19.746 --> 00:09:22.626
As I said, compiler will
ignore every other include

253
00:09:22.761 --> 00:09:24.650
except the very first one

254
00:09:24.866 --> 00:09:25.995
that was made.

255
00:09:27.640 --> 00:09:28.210
So, we have learned

256
00:09:30.006 --> 00:09:33.225
the way the compatability
in between C and C++

257
00:09:33.636 --> 00:09:34.400
works.

258
00:09:34.871 --> 00:09:35.590
We have

259
00:09:35.725 --> 00:09:36.465
also learned

260
00:09:36.601 --> 00:09:38.265
that you have system
libraries

261
00:09:38.401 --> 00:09:39.945
and non-system libraries.

262
00:09:40.206 --> 00:09:43.226
For non-system libraries,
unless the library is in that

263
00:09:43.361 --> 00:09:44.555
exact same folder,

264
00:09:44.835 --> 00:09:46.281
it will not run

265
00:09:46.435 --> 00:09:47.706
unless the full path

266
00:09:47.841 --> 00:09:49.653
to that library is given.

267
00:09:49.976 --> 00:09:52.875
And this is how you would..
this is the syntax for including

268
00:09:53.111 --> 00:09:57.095
non-system libraries. And up above,
you have syntax for including

269
00:09:57.231 --> 00:09:59.230
system, a library as well.

270
00:09:59.446 --> 00:10:02.623
This is for C and this is
for C++.

271
00:10:03.181 --> 00:10:03.880
Again C,

272
00:10:04.460 --> 00:10:06.226
C++, etc.

273
00:10:06.936 --> 00:10:07.705
I bid you farewell.

274
00:10:07.841 --> 00:10:09.546
And we're going to go
ahead

275
00:10:09.681 --> 00:10:12.500
and jump into the
next tutorial,

276
00:10:12.756 --> 00:10:15.015
where we will go ahead
and take a look at the

277
00:10:15.381 --> 00:10:16.340
types of operators.

