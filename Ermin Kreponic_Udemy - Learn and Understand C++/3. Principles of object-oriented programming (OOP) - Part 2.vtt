WEBVTT

00:00.480 --> 00:01.920
Welcome back.

00:01.920 --> 00:06.720
So we're just going to go ahead and do what I did here.

00:06.730 --> 00:13.290
You see I just added a second line second second set of functions if you will.

00:13.320 --> 00:17.860
These are setters and I've added to comments here it says setter's sorry.

00:17.880 --> 00:21.440
Here it says getters and down below it says setter's.

00:21.450 --> 00:26.250
These comments are complete are not affecting the code in any way.

00:26.310 --> 00:29.350
This is purely for your convenience.

00:29.400 --> 00:37.020
Now over here we have our three previous Get functions get methods where getters and down below.

00:37.050 --> 00:43.860
I have created three new setters so this will enable the setting of each day month and year.

00:43.890 --> 00:51.030
In an individual fashion you basically just set the set month to year.

00:51.040 --> 00:54.400
We won't need to set them all at once.

00:55.760 --> 00:56.330
It kindled.

00:56.380 --> 00:58.170
I don't need to write this comment.

00:58.190 --> 01:00.890
This is just something that I wrote for my self.

01:00.890 --> 01:03.100
No big deal.

01:03.140 --> 01:05.750
Also what did we do here.

01:05.750 --> 01:12.140
I moved these variables out of the public and I have moved the public down below so the public only

01:12.140 --> 01:19.880
encompasses the methods and it does not encompass the attributes the attributes are now private and

01:19.880 --> 01:23.360
cannot be and are not visible outside of the class.

01:23.390 --> 01:30.560
They can only be accessed through the methods within the classes which are in public so you can only

01:30.560 --> 01:30.910
get.

01:30.920 --> 01:36.680
You can only retrieve the value of the day through a getter so get they which will return the value

01:36.680 --> 01:45.980
of the day and you can only set it by using this setter or by using this general setter for all three

01:46.340 --> 01:47.440
attributes.

01:47.450 --> 01:49.190
No other way.

01:49.310 --> 01:53.990
It's fairly it's a fairly simple concept this is all that I have added in terms of code.

01:53.990 --> 02:01.970
These three functions and I have moved the public from the top to here and now these to be variables

02:02.060 --> 02:03.780
are there.

02:03.800 --> 02:09.950
Now we can directly set each of our attributes some other object oriented programming principles that

02:09.950 --> 02:14.840
you should have somewhere in the back of your mind are basically hiding information which is already

02:14.840 --> 02:15.080
known.

02:15.080 --> 02:16.540
This is what we have done here.

02:16.550 --> 02:18.740
Look we have had these three attributes.

02:18.740 --> 02:27.240
There are no longer visible at all outside the class winning we're protecting them in a way.

02:27.300 --> 02:30.430
You also have encapsulation where logically.

02:30.510 --> 02:37.410
Basically just grouping the variables and there are two other principles over which we show which will

02:37.410 --> 02:43.980
be explained down to down the long line as it's not really convenient for me to explain them now due

02:43.980 --> 02:47.530
to the fact that they are rather complex things.

02:47.580 --> 02:50.290
You have inheritance and polymorphism.

02:50.580 --> 02:53.840
Maybe not that complex but it can get complicated.

02:53.840 --> 02:57.590
Anyway those two will be explained later on down the line.

02:57.600 --> 03:03.810
But for the time being I just want to show you how you can protect your attributes and hide them and

03:03.810 --> 03:11.160
then only allow access to these attributes through the given functions which you yourself have defined

03:11.550 --> 03:11.950
so.

03:11.970 --> 03:16.470
No other function outside through the methods that you yourself have provided.

03:16.650 --> 03:18.250
What does this what does this mean for you.

03:18.270 --> 03:23.710
No other method outside of this class it can mess around with these directly.

03:23.760 --> 03:30.670
They can only alter them and they can only be altered through the methods provided down below so void

03:30.690 --> 03:33.450
said they said months that year.

03:33.480 --> 03:36.960
Why am I writing it all in one line function like this.

03:36.990 --> 03:39.310
I might have just as well written it in this fashion

03:42.810 --> 03:49.690
but since I only have one line of one very short line of code within the function that's like no problem.

03:49.710 --> 03:52.860
They keep calling it a function it's a method because it's inside of a class.

03:53.400 --> 03:55.400
It's pretty much the same.

03:55.460 --> 03:58.010
I could have written it like this but no need.

03:58.010 --> 04:02.500
No need to waste space because of as efficient as you can.

04:02.540 --> 04:08.180
And I just placed all of these in one single single line.

04:08.180 --> 04:09.740
Here I can even compile the program.

04:09.740 --> 04:16.790
Let's see if it runs and no it doesn't.

04:16.930 --> 04:19.580
Right right right right.

04:21.280 --> 04:22.170
OK.

04:25.710 --> 04:26.480
Genius.

04:26.540 --> 04:27.470
I am a genius

04:31.430 --> 04:32.340
OK.

04:32.360 --> 04:36.330
This is why you should compile it all the time while coding.

04:36.470 --> 04:39.170
So enter data and then

04:41.780 --> 04:52.400
2010 enter data center the 7th of 2010 and down below it says month then this is irrelevant.

04:52.550 --> 04:56.850
The reason why I actually compile the code we will get to this a little bit later.

04:56.860 --> 05:04.150
I mean we have written it out so we know how it works but what is important is that you click this build

05:04.210 --> 05:09.490
and run button as many times as possible during the time when you write the code and not pressing it

05:09.520 --> 05:14.740
that many times now because I have the code written out on the screen but it's good it's a good it's

05:14.740 --> 05:20.320
a good practice to continuously build your code while you are coding so that you can preemptively see

05:20.620 --> 05:25.000
where the errors lie and not write the entire code and then run it and then get 3 billion errors and

05:25.000 --> 05:28.660
then go fix them one by one you fix one you create another.

05:28.870 --> 05:33.760
Now while you're coding while you're creating the code presbyters many times as you can compile your

05:33.760 --> 05:37.900
code and see what happens anyway.

05:38.080 --> 05:40.690
I'm going to go ahead and bid you farewell here.

05:40.750 --> 05:47.850
This is just a short fragment of the first part of this video that I had to basically split and place

05:47.850 --> 05:52.840
it in part two but I just want to show you that you can also use the getters and move your attributes

05:52.840 --> 05:58.060
into the pry into the private section so that it would not do so they would not be visible and would

05:58.060 --> 06:01.120
be hidden effectively from pretty much everything else.

06:01.130 --> 06:04.990
Anyway we're going to go ahead and move on into the follow up tutorial.

06:04.990 --> 06:06.170
Don't delete anything.

06:06.190 --> 06:11.020
We shall still be utilizing this class and possibly expanding it as well.

06:11.020 --> 06:13.190
We're going to have some fun with exceptions.
