WEBVTT

1
00:00:00.021 --> 00:00:00.885
Welcome back!

2
00:00:01.091 --> 00:00:04.460
Today we have a rather small section,.

3
00:00:04.896 --> 00:00:06.850
I just want to explain

4
00:00:07.036 --> 00:00:09.125
memory representation
a little bit.

5
00:00:09.286 --> 00:00:13.680
So, all elements of an array are placed
in memory locations.

6
00:00:13.841 --> 00:00:16.971
There are placed one after
the other in series.

7
00:00:17.156 --> 00:00:19.320
This property is really important

8
00:00:19.481 --> 00:00:22.705
and will be of use
when you learn about pointers.

9
00:00:23.425 --> 00:00:24.006
So,

10
00:00:24.281 --> 00:00:25.398
basically

11
00:00:25.560 --> 00:00:27.696
what you can see are

12
00:00:27.856 --> 00:00:30.506
1 at index 0,

13
00:00:30.781 --> 00:00:32.571
comes before

14
00:00:32.731 --> 00:00:33.616
let's say

15
00:00:34.476 --> 00:00:36.080
in terms of memory
locations

16
00:00:36.425 --> 00:00:37.006
anyway.

17
00:00:37.861 --> 00:00:39.026
For example 1,

18
00:00:39.535 --> 00:00:40.211
so

19
00:00:40.395 --> 00:00:41.300
this

20
00:00:41.461 --> 00:00:45.160
comes before this in terms of memory
location.

21
00:00:45.321 --> 00:00:48.405
How they are actually stored in RAM.

22
00:00:49.956 --> 00:00:52.140
And of course before like

23
00:00:52.301 --> 00:00:55.275
4 9 so on and so forth.
It doesn't really matter.

24
00:00:55.436 --> 00:00:59.521
So, I have a really neat representation
here.

25
00:00:59.685 --> 00:01:00.916
For you, how

26
00:01:01.076 --> 00:01:02.171
it all works.

27
00:01:02.471 --> 00:01:04.306
So, let's say index 0,

28
00:01:04.466 --> 00:01:06.535
it has some sort of a

29
00:01:07.346 --> 00:01:09.320
I don't know memory address.

30
00:01:09.736 --> 00:01:11.665
Like some sort of an address.

31
00:01:11.941 --> 00:01:16.360
And then the next element,
has the next memory address in line.

32
00:01:16.521 --> 00:01:17.610
And so on and so forth.

33
00:01:17.861 --> 00:01:20.440
Ranging from the very first element

34
00:01:20.601 --> 00:01:25.686
to the last element. they are sequential.
They are always one

35
00:01:25.846 --> 00:01:27.615
after the other directly,

36
00:01:27.845 --> 00:01:30.771
in terms of memory locations anyway.

37
00:01:31.746 --> 00:01:34.520
So, that is pretty much all what I want to
mention here.

38
00:01:34.681 --> 00:01:36.735
I mentioned my pretty drawing

39
00:01:37.941 --> 00:01:41.005
but anyway, we will move on to the
next story.

