1

00:00:05,460  -->  00:00:10,260
Hello and welcome back to the course and fight and programming in today's tutorial we're going to discover

2

00:00:10,350  -->  00:00:16,440
the main types of variables that exist in Python and that we'll be working with throughout this course

3

00:00:16,440  -->  00:00:16,730
.

4

00:00:16,800  -->  00:00:20,270
So let's get started and dive into it right away here.

5

00:00:20,280  -->  00:00:25,440
I've created a folder on my desktop which is called Python programming course and all my algebra notebooks

6

00:00:25,440  -->  00:00:26,700
are going to be saved there.

7

00:00:26,700  -->  00:00:30,660
So I advise that you go ahead and create something similar somewhere in your computer so that they're

8

00:00:30,660  -->  00:00:31,980
all in the same place.

9

00:00:32,310  -->  00:00:36,110
And if you click then you better go here and select Python.

10

00:00:36,360  -->  00:00:36,680
All right.

11

00:00:36,690  -->  00:00:41,450
Beautiful So this is our very first Jupiter notebook and first thing we do is we're going to get the

12

00:00:41,450  -->  00:00:41,800
title.

13

00:00:41,810  -->  00:00:49,350
So here we're going to say types of variables as a title for today's tutorial here which is going to

14

00:00:49,350  -->  00:00:49,980
start coding.

15

00:00:49,980  -->  00:00:54,480
So first thing you'll notice is that the browser is quite zoomed in and that is only for the reason

16

00:00:54,480  -->  00:00:56,930
so that you can see better while I'm typing in code.

17

00:00:57,000  -->  00:01:00,990
Your browser is probably not zoomed in so you don't have to zoom in that much.

18

00:01:00,990  -->  00:01:03,570
Just keep it at a comfortable for yourself level.

19

00:01:03,570  -->  00:01:05,820
All right so let's start typing the code.

20

00:01:05,820  -->  00:01:10,100
We're going to be talking about four main types of variables that we're going to be working with.

21

00:01:10,110  -->  00:01:11,820
And the first one is integer.

22

00:01:11,820  -->  00:01:15,330
So I'm going to put a hash tag and a hash tag in Python means a comment.

23

00:01:15,330  -->  00:01:21,800
So basically this line will be ignored when the program is running and that is a way for us to com into

24

00:01:21,810  -->  00:01:23,280
our code.

25

00:01:23,340  -->  00:01:27,040
The first step variable that we're going to look at is integer so let's create one.

26

00:01:27,120  -->  00:01:28,710
It's very simple in Python.

27

00:01:28,710  -->  00:01:33,020
If you're coming from a background in C or other programming languages there you'd have to declare the

28

00:01:33,030  -->  00:01:35,980
type of the variable or initialize the variable first.

29

00:01:35,980  -->  00:01:37,390
Here you don't have to do that.

30

00:01:37,500  -->  00:01:42,960
Python will automatically know that this is going to be an integer just because of this assignment part

31

00:01:43,050  -->  00:01:44,580
of this call.

32

00:01:44,580  -->  00:01:47,880
So there we go that's our first into traversals.

33

00:01:47,880  -->  00:01:50,090
All right so how do we now run this line.

34

00:01:50,100  -->  00:01:56,190
Well very simple on a Mac or Windows just press a shift enter and that will run the line as you can

35

00:01:56,190  -->  00:01:59,130
see we've got this one up here over here.

36

00:01:59,130  -->  00:02:03,040
That means that's the order in which this cell was run.

37

00:02:03,360  -->  00:02:06,530
And now we can see the result of X because we just assigned it.

38

00:02:06,540  -->  00:02:08,130
We didn't actually print on the screen.

39

00:02:08,130  -->  00:02:10,020
How do we put this value onto a screen.

40

00:02:10,020  -->  00:02:14,010
Well we basically just type in X and that's one of the ways a simpler way.

41

00:02:14,040  -->  00:02:16,870
And we just press a shift and again to run that cell.

42

00:02:16,950  -->  00:02:20,550
As you can see the value has appeared over here.

43

00:02:20,740  -->  00:02:21,210
OK.

44

00:02:21,240  -->  00:02:24,000
Wonderful So X is indeed equal to two.

45

00:02:24,000  -->  00:02:31,530
And if we type in type of x and press shift enter again you will see that it is an int stat which stands

46

00:02:31,530  -->  00:02:32,540
for integer.

47

00:02:32,550  -->  00:02:40,680
So those are integer types of variables and they kind of just exist to represent whole numbers so whether

48

00:02:40,680  -->  00:02:43,620
it's 2 is 100 0 it's minus 50.

49

00:02:43,620  -->  00:02:45,780
Those are all integers.

50

00:02:45,780  -->  00:02:47,550
Now let's look at the next step.

51

00:02:47,580  -->  00:02:51,480
First thing we're going to do is we're going to I'm going to write a delimiter here so how do I added

52

00:02:51,480  -->  00:02:51,840
to limit.

53

00:02:51,840  -->  00:02:54,430
Well I want to change this cell.

54

00:02:54,510  -->  00:02:55,370
I don't want it to be code.

55

00:02:55,380  -->  00:02:59,990
I just want it to be a delimiter between this part of the code and the next part of the code so what

56

00:03:00,000  -->  00:03:05,490
I'm going to do is I'm going to change this to markdown and here I'm going to type in the three minuses

57

00:03:05,490  -->  00:03:05,510
.

58

00:03:05,520  -->  00:03:08,760
And if you click shift enter it'll automatically change to a delimiter.

59

00:03:08,760  -->  00:03:13,800
I find it's a convenient way to segment your code especially when you're just learning Python or any

60

00:03:13,800  -->  00:03:15,250
other programming language is it.

61

00:03:15,330  -->  00:03:20,180
So it can be a way for you to not get mixed up in the different parts of your code.

62

00:03:20,190  -->  00:03:25,560
All right so the next time we're going to look at is a float and in some programming language it's also

63

00:03:25,560  -->  00:03:27,150
called a double.

64

00:03:27,150  -->  00:03:31,070
So but in Python it's called a floating point data type.

65

00:03:31,230  -->  00:03:32,460
Let's look at the flow.

66

00:03:32,460  -->  00:03:33,140
What is a float.

67

00:03:33,150  -->  00:03:37,060
Well here's an example of floats 2.5 for instance.

68

00:03:37,260  -->  00:03:41,990
And basically what that is it's a number with a decimal point.

69

00:03:42,000  -->  00:03:44,760
Once again let's print out why click shift enter.

70

00:03:44,760  -->  00:03:47,560
There it is 2.5 for look at type of Y.

71

00:03:47,760  -->  00:03:49,910
You will see that it is a float.

72

00:03:50,070  -->  00:03:52,020
OK so that's the second type.

73

00:03:52,110  -->  00:03:57,180
Obviously you need integers and always you need flod Sometimes people think that why do we need integers

74

00:03:57,180  -->  00:04:02,150
of have flows because you can represent the same number 2 as 2.0.

75

00:04:02,180  -->  00:04:02,420
Sorry.

76

00:04:02,430  -->  00:04:08,310
The reason is that because you still need integers for counting things and also they take up less space

77

00:04:08,400  -->  00:04:10,670
in terms of memory and storage.

78

00:04:10,680  -->  00:04:13,200
So sometimes it's more convenient to have an integer.

79

00:04:13,470  -->  00:04:13,770
All right.

80

00:04:13,770  -->  00:04:17,560
Let's add another delimiter and I'm going to show you a handy shortcut now.

81

00:04:17,580  -->  00:04:22,050
Like right now I can enter something in the cell that is called the edit mode.

82

00:04:22,050  -->  00:04:26,490
Now I can exit the edit mode by clicking escape on my keyboard and you can see that this has turned

83

00:04:26,490  -->  00:04:31,020
blue and I can't edit anything I can just move around around across the cells.

84

00:04:31,230  -->  00:04:32,780
I don't want to get back into the edit mode.

85

00:04:32,790  -->  00:04:37,400
I just click enter on the cell I want to edit and now I can add more text or code into that cell.

86

00:04:37,400  -->  00:04:44,010
So I'm going to click escape and a quick way to change the type of the cell from code to mark down which

87

00:04:44,010  -->  00:04:49,800
we did over here by clicking this dropdown is by just selecting M on your keyboard while you're not

88

00:04:49,800  -->  00:04:50,500
in edit mode.

89

00:04:50,520  -->  00:04:55,020
So if I click them then you'll see that it's changed to mark down.

90

00:04:55,080  -->  00:04:59,400
And now if I enter it and and to the three minuses click shift enter.

91

00:04:59,400  -->  00:05:01,190
You'll see that this line appeared.

92

00:05:01,290  -->  00:05:06,540
So there are quite a few handy shortcuts here in Jupiter and you can learn more about them if you click

93

00:05:06,540  -->  00:05:07,990
this button or not that button.

94

00:05:08,010  -->  00:05:14,340
If you click help and you click keyboard shortcuts you'll see all the shortcuts and they're also tailored

95

00:05:14,670  -->  00:05:17,940
to your machine whether it's a Mac or it's a Windows machine.

96

00:05:17,940  -->  00:05:23,070
So have a look at them and I'll be mentioning the ones I'm using throughout these tutorials but basically

97

00:05:23,070  -->  00:05:27,840
what that will allow me to do is to get rid of this toolbar because as you can see it's taking up some

98

00:05:27,840  -->  00:05:30,380
space and I don't really want it to take that space.

99

00:05:30,400  -->  00:05:34,890
I'll druther see more code so that's what I'm going to do now I'm just going to toggle toolbar and get

100

00:05:34,890  -->  00:05:35,340
rid of it.

101

00:05:35,340  -->  00:05:36,670
Makes it gives us some space.

102

00:05:36,840  -->  00:05:40,190
And in fact I'm even going to get rid of that very top line as well the hitter.

103

00:05:40,320  -->  00:05:45,900
And so now we have all this space all this real estate for us to keep our code in.

104

00:05:45,900  -->  00:05:46,140
All right.

105

00:05:46,140  -->  00:05:47,760
So what's the next step that we're looking at.

106

00:05:47,760  -->  00:05:54,960
The next type is the string and string is a type that stores words and letters and different characters

107

00:05:54,980  -->  00:05:55,150
.

108

00:05:55,320  -->  00:05:58,540
So let's have a look an example A equals Hello.

109

00:05:58,590  -->  00:06:01,460
And you can see the quotation marks at the star at the end.

110

00:06:01,470  -->  00:06:07,260
They were present that a string is starting let's click enter shift enter and if and imprint a is got

111

00:06:07,260  -->  00:06:10,340
the word hello and also Type A.

112

00:06:10,350  -->  00:06:13,540
You'll see that it is an a star which stands for string.

113

00:06:13,590  -->  00:06:17,940
Now important point to mention here is that in Python it doesn't matter whether you use double quotation

114

00:06:17,940  -->  00:06:19,770
marks or single quotation marks.

115

00:06:19,770  -->  00:06:23,410
So in some programming languages it matters in Python it doesn't.

116

00:06:23,490  -->  00:06:26,130
And you could do the same thing here.

117

00:06:26,190  -->  00:06:31,540
For instance say B equals in single quotation marks hello to fire on that line.

118

00:06:31,620  -->  00:06:38,220
And then I print out somewhere here you'll see that B is also represented as as a string.

119

00:06:38,220  -->  00:06:41,670
So sometimes you would choose to use double sometimes single.

120

00:06:41,670  -->  00:06:46,130
It really depends on your preference and the specific string that you're working with.

121

00:06:46,140  -->  00:06:49,500
But in general it doesn't really matter which approach you take.

122

00:06:49,770  -->  00:06:56,820
So that is a third data type and it is used to store words and letters and anything basically that you

123

00:06:56,820  -->  00:06:57,430
want to put history.

124

00:06:57,480  -->  00:07:01,320
You can even put a number like we did over here you can put a number in a string you can just put the

125

00:07:01,320  -->  00:07:03,210
number in the string by itself.

126

00:07:03,210  -->  00:07:08,370
So you click shift enter there and if I order on this scale now you'll see that it's it's a two but

127

00:07:08,370  -->  00:07:10,680
it's different to the two that we had over here.

128

00:07:10,680  -->  00:07:13,970
This too is an integer and you can see its type in it.

129

00:07:14,220  -->  00:07:20,010
And here if we look at Type B you'll see there's a string says basically a number represented by a string

130

00:07:20,020  -->  00:07:20,290
.

131

00:07:20,550  -->  00:07:20,970
OK.

132

00:07:20,970  -->  00:07:27,530
And let's do that marked down again so m Enter three dashes shift enter or gives us that line.

133

00:07:27,630  -->  00:07:31,930
And finally the fourth daughter type that will be working with quite closely.

134

00:07:32,070  -->  00:07:34,610
It is the logical data type.

135

00:07:34,800  -->  00:07:38,110
So what is the logical logical is basically true or false.

136

00:07:38,160  -->  00:07:40,290
So answers to questions.

137

00:07:40,320  -->  00:07:44,540
In short let's have a look at one so let's say one equals true.

138

00:07:44,730  -->  00:07:49,880
So in python there are two logical values true starting with a capital T and then.

139

00:07:50,040  -->  00:07:52,930
Lowercase Little's letters are easy and false.

140

00:07:52,930  -->  00:07:54,830
The same thing starting with a capital F..

141

00:07:54,990  -->  00:07:57,200
So if I run this line you'll see.

142

00:07:57,240  -->  00:07:59,020
Now I can call Q 1.

143

00:07:59,040  -->  00:08:05,150
It is equal to true and the type of q 1 is Boolean boolean logical.

144

00:08:05,180  -->  00:08:06,250
It's assumed.

145

00:08:06,270  -->  00:08:09,010
So we're just going to say Boolean OR here.

146

00:08:09,300  -->  00:08:10,380
And so that's pretty much it.

147

00:08:10,380  -->  00:08:15,540
That's the four main datatypes that we need to know about and everything that we're going to be talking

148

00:08:15,540  -->  00:08:17,790
about further down the course is going to be built upon that.

149

00:08:17,790  -->  00:08:25,920
So once again the integer float which is a decimal point the string and the logical or boolean type

150

00:08:26,010  -->  00:08:27,380
of variable.

151

00:08:27,420  -->  00:08:29,970
So I hope you enjoyed the story will have a play around with that.

152

00:08:29,970  -->  00:08:35,070
Create a couple of variables of your own and try to print them out in the next tutorial.

153

00:08:35,070  -->  00:08:38,260
We're going to learn how to work with them and a look for you next them.

154

00:08:38,280  -->  00:08:39,950
Until then be coding
