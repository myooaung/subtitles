WEBVTT

00:01.950 --> 00:07.620
Now what I did behind the scenes since this is already about the stylings, I created this switch component.

00:07.620 --> 00:10.550
Now you will find the code attached to this lecture

00:10.560 --> 00:13.520
but I will quickly walk you through that of course. In the template,

00:13.530 --> 00:14.910
I simply have two divs,

00:14.940 --> 00:20.790
one has the ID one, on, excuse me, and one has the ID off, both has a click listener where I simply toggle

00:20.850 --> 00:27.780
isOn to true or false depending on which switch I click. Well and then I add a class which is the

00:27.840 --> 00:28.920
active class

00:29.040 --> 00:34.100
and this depends on whether isOn is true or false, depending on which switch we are

00:34.350 --> 00:40.260
and then down there, I have a couple of styles, on and off, my two boxes basically got a width, a height, background

00:40.260 --> 00:41.850
color, some padding

00:41.850 --> 00:46.920
I want to display in inline block to have them sit next to each other and negative margin to left

00:46.920 --> 00:53.550
and right to have them sit directly on each other, some box sizing, make the cursor a pointer and center the

00:53.550 --> 00:54.110
text.

00:54.120 --> 00:59.550
And then I got this active class which has the same effect as when I hover over a switch, well light

00:59.580 --> 00:59.960
green

00:59.970 --> 01:05.830
in the case of the on switch and light coral in the case of the off switch.

01:05.880 --> 01:11.850
Then I went to the app.vue file where I simply imported the switch up here and added it as a local

01:11.850 --> 01:14.240
component here in the components property,

01:14.340 --> 01:21.150
that of course allows me to use it in my template there where I inserted this row right below the select

01:21.150 --> 01:21.990
dropdown,

01:22.050 --> 01:26.180
so this is a normal bootstrap row with the same column class as we had before

01:26.220 --> 01:27.750
and then my custom input.

01:27.750 --> 01:31.730
Now I don't have any input related logic there, that's just the styling,

01:31.920 --> 01:33.110
it leads to this layout,

01:33.120 --> 01:34.970
we got on and off switch here.

01:35.040 --> 01:37.020
However I'm not able to listen to that,

01:37.050 --> 01:38.770
I'm not able to set a value,

01:38.790 --> 01:41.100
this is what we'll work on together.

01:41.160 --> 01:44.600
So let's make this component more than just some optical sugar,

01:44.730 --> 01:48.500
let's actually turn it into a real control we can use.

01:48.580 --> 01:59.090
I want to use it here with a new component where I simply say data switch and set this to true by default.

01:59.090 --> 02:04.360
Now I want to be able to use this on my custom component

02:04.370 --> 02:11.600
I added here by adding v-model to it and binding to data switch, so this shall pass

02:11.600 --> 02:15.530
true or false or it react to changes in this component.

02:15.530 --> 02:21.560
Now as I explained earlier, that means that I have to set up the value prop in my component and emit an

02:21.680 --> 02:22.470
input event,

02:22.470 --> 02:24.840
so let's work on this next.

02:24.980 --> 02:28.880
I want to set up the value prop and this input event in my switch component,

02:29.150 --> 02:36.170
so to do so, I will go to my object export here and I will add my props and this will be an array and

02:36.170 --> 02:40.940
I know that I should be able to handle a value because this is what v-model will give me in the end,

02:41.780 --> 02:44.160
these values shall be true or false,

02:44.180 --> 02:46.590
I could add prop validation here,

02:46.640 --> 02:50.210
I'll leave it simple like that and then I want to use value.

02:50.300 --> 02:53.810
Now how do I want to use value in this component here though?

02:53.990 --> 02:56.840
Well I no longer want to use isOn here, 

02:56.870 --> 03:07.520
I can actually remove this, instead here, I want to use value and set value to true or false here

03:07.820 --> 03:12.550
and also check value here because this is my new isOn property,

03:12.560 --> 03:13.570
this will be true or false

03:13.580 --> 03:16.680
passed from outside but now also changeable from inside.

03:16.940 --> 03:19.710
So here, I'm able to use it and change it, 

03:19.730 --> 03:22.510
now of course I also need to submit an event.

03:22.760 --> 03:27.650
So here when clicking, setting value to true or false is not really all I need,

03:27.800 --> 03:36.060
instead I should use my methods objects here to simply add the switch method let's say

03:36.290 --> 03:40.330
or since this is a reserved name, let's use switched.

03:40.340 --> 03:44.000
So here I want to output switched and I want to pass

03:44.030 --> 03:50.060
true since this is the on case and here I want to use switched and pass false because here, I want to set

03:50.060 --> 03:51.280
it to false.

03:51.380 --> 03:55.340
So what I'll do here is I will simply emit with this emit,

03:55.340 --> 04:01.010
we learned that before, a custom event and the event has to have the name input because that is what v-model

04:01.250 --> 04:02.590
is waiting for

04:02.900 --> 04:11.880
and then here, I can simply output well the value I'm passing here, I'll name it isOn again and I will pass

04:11.880 --> 04:13.230
that on.

04:13.310 --> 04:22.010
Now with this, let's go back to our main component where we use our own switch and let's add a new paragraph

04:22.010 --> 04:31.130
here where I will say switched to output the data switch property, this data switch property again is

04:31.130 --> 04:32.930
bound to my custom component.

04:32.930 --> 04:35.970
Let's see if this works how it should, we see true here

04:35.990 --> 04:39.030
and if I switch this to off, it changes to false.

04:39.140 --> 04:45.680
And with that, we built our own control very very easily as you see by adding a new component which has

04:45.680 --> 04:47.020
these two key features

04:47.030 --> 04:49.490
it has to have to work with v-model.

04:49.520 --> 04:52.920
It takes a prop of value and it emits an input event,

04:53.000 --> 04:56.120
all the other logic inside this component is totally up to you,

04:56.120 --> 04:58.550
this may be much more complex than just two divs

04:58.550 --> 05:00.470
of course, this is up to you.

05:00.470 --> 05:06.860
The key thing is that what you get in value and what you output, the input event. And with that, you can

05:06.860 --> 05:10.610
use your own components as controls in your forms, awesome.
