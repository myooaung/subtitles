WEBVTT

00:01.520 --> 00:04.130
So I hope you were successful,

00:04.150 --> 00:05.860
this is the array of servers,

00:05.960 --> 00:09.550
now let's start by creating a new component first.

00:09.560 --> 00:16.360
This is the server.vue file and I will copy my servers.vue file in there,

00:16.400 --> 00:22.780
remove this object though and also remove the unordered list and the wrapping div,

00:22.970 --> 00:25.520
I only want to have the list item here.

00:25.700 --> 00:26.900
I'll leave the class,

00:26.900 --> 00:33.840
I'll remove the for loop and now I only want to output the ID here.

00:34.010 --> 00:41.240
Well for that, I will need my default object and set up some props because the ID shall be passed in

00:41.240 --> 00:45.980
from outside, from my servers.vue file, here

00:46.080 --> 00:54.200
I'll know I get the ID so in the servers.vue file here, I want to remove the list item here, instead

00:54.200 --> 00:57.840
I want to import the component I just created in the server.vue

00:57.950 --> 01:06.860
file, without the s, I'll name it server from ./server.vue and then I'll set it up as a local

01:06.860 --> 01:09.310
component in my object here,

01:09.320 --> 01:18.320
so under components, I'll register it with a selector of app server which remember, I can use with app-server

01:18.320 --> 01:20.620
in the template then if I want,

01:21.020 --> 01:28.580
so assign the server I'm importing to it and therefore I can use app server here, like this or if I prefer

01:28.580 --> 01:34.680
that with a dash in between, app-server and I want to pass the ID to that.

01:34.680 --> 01:39.070
Now in order to be able to pass an ID, I first need to loop through it,

01:39.110 --> 01:48.570
so with v-for, I'll loop through my server in servers where servers of course refers to the servers property in

01:48.600 --> 01:50.390
the data field here

01:50.750 --> 01:57.290
and since I do that, I can then pass an ID to each component which gets created throughout this loop

01:58.190 --> 02:08.330
where I want to set ID equal to server.id accessing the individual objects here through which I'm looping

02:08.350 --> 02:18.170
and then the ID field in each object in each well loop iteration. With this, I am creating a couple of

02:18.170 --> 02:18.730
servers,

02:18.740 --> 02:21.700
we're seeing it here and I'm outputting the IDs,

02:21.710 --> 02:23.330
that's the first step.

02:23.330 --> 02:29.390
Now I also want to be able to click on a server to load the details here in the other component,

02:29.810 --> 02:38.780
well to be able to click on a server, I will add a click listener to this list item and to see this hand

02:38.780 --> 02:43.740
cursor symbol, I will simply add cursor pointer style to that,

02:43.760 --> 02:45.860
that's not vuejs, that's normal

02:45.860 --> 02:48.560
css and html.

02:48.560 --> 02:59.210
So here, I will then listen to a click and execute server selected let's say, therefore we should add

02:59.270 --> 03:00.970
a method here in

03:01.350 --> 03:08.680
the methods object, server selected would be the name of the method which I am executing up there

03:08.870 --> 03:14.380
and here, I want to inform the parent that a server was selected.

03:14.750 --> 03:17.360
What do I want to do with that information?

03:17.360 --> 03:22.120
I want to change my server details, now for that to be changed,

03:22.170 --> 03:27.860
informing the servers which is the parent of the individual server is not enough because server

03:27.860 --> 03:31.610
detail lives in the app.vue file.

03:31.730 --> 03:41.460
So I could go from server with a custom event to servers with a custom event to app and ID to do this

03:41.480 --> 03:44.180
because custom events don't propagate up

03:44.510 --> 03:45.990
but that's not what I want to do,

03:46.160 --> 03:48.130
I will use a bus instead.

03:48.170 --> 03:58.600
So here, I will export a constant and I'll name it serverBus which is a new vue instance and then in my

03:58.700 --> 04:05.610
server file here, I will import this, this serverBus here,

04:05.610 --> 04:09.510
the naming is of course important because I named it in the main.js file too,

04:09.540 --> 04:17.580
it has a name there and I need to import that from going up one file, one folder excuse me and going

04:17.580 --> 04:20.620
up another folder from the main.js file.

04:20.810 --> 04:28.370
And with that in here, I can call serverBus.$emit and I want to emit an event here,

04:28.710 --> 04:34.740
I will name it server selected and I will pass the ID,

04:34.730 --> 04:41.400
so this ID referring to the ID I get in here as a prop. Now with the event being emitted here, I

04:41.400 --> 04:49.200
can go to the server details where I want to import this serverBus as well because here is the place

04:49.200 --> 04:56.790
where I want to change something, so I'll import thsi from the main.js file too.

04:57.210 --> 05:00.120
And then in the object I have here,

05:00.310 --> 05:08.820
I also need the created lifecycle hook to then listen to serverBus on, so with the on method, to listen

05:08.820 --> 05:14.110
to the server selected event and then I want to change some data.

05:14.190 --> 05:22.850
So here, I will add the data property which again is a function returning the data object

05:22.950 --> 05:30.460
and here, I want to set up the server which is loaded and this is null at the beginning because it's undefined,

05:30.460 --> 05:32.620
we haven't loaded a server yet

05:32.680 --> 05:39.010
and here in the callback, I want to set this and I want to get the new server as an argument therefore

05:39.010 --> 05:46.240
set this server equal to server, that will then allow me to access things like the server status

05:46.240 --> 05:47.500
ID.

05:47.500 --> 05:55.170
Now to do that however, I need to go back to server and here, I only get the ID passed in as a prop,

05:55.510 --> 05:57.090
well let's change this,

05:57.100 --> 06:02.320
let's instead get the whole server and output server.ID instead

06:02.320 --> 06:08.950
here in the template and for this to work, I need to go to my servers component here too and not only

06:08.950 --> 06:16.030
pass the ID but the whole server in each loop iteration, this hold server object.

06:16.240 --> 06:23.180
With that in place, I'm now outputting it here or I'm getting it here to my server details correctly

06:23.530 --> 06:28.060
and whenever I select a server, server is set to something else

06:28.360 --> 06:36.550
and this allows me to override this template, add a new paragraph where I use v-if to check if server

06:36.730 --> 06:46.660
is actually set and if it is not set, I want to say please select a server and otherwise, I can use

06:46.660 --> 06:48.920
v-else if,

06:49.350 --> 06:59.760
if this is the case, if a server is selected, I say server number and then we set server ID selected

07:00.510 --> 07:05.600
status and then output the server status.

07:05.730 --> 07:09.210
So if that was too fast, what I did is in the server component,

07:09.240 --> 07:10.830
I implemented a method

07:10.830 --> 07:14.870
to well basically listen to clicks on this list item

07:14.880 --> 07:21.090
where I emit the server selected event on my serverBus, the serverBus is set up here in the main.js

07:21.090 --> 07:21.880
file.

07:21.990 --> 07:26.750
And with that server selected event, I want to pass,

07:26.770 --> 07:28.630
well not the ID but the server,

07:28.660 --> 07:30.540
this needs to be adjusted.

07:30.700 --> 07:33.820
The server is a prop I'm getting set from outside,

07:34.000 --> 07:41.020
it gets set here in the servers.vue file where I loop through all the servers and create the app server

07:41.350 --> 07:42.440
component,

07:42.440 --> 07:49.510
this is the one living in the server.vue file and I passed the server of the current loop iteration with

07:49.510 --> 07:53.630
the server props I set up there, this props,

07:53.680 --> 07:58.900
so this is set in this loop where I loop through my array of servers. With this set up,

07:58.900 --> 08:06.620
we still see all these servers but if I click on one, we see it now changes to the server we actually selected.

08:07.360 --> 08:13.780
The missing piece now is a button on the right which allows me to change the server status back

08:13.780 --> 08:20.510
to normal, now to change the server status back to normal,

08:20.540 --> 08:27.350
I will go to my server details component and there, I will add a horizontal line, say change to normal

08:27.350 --> 08:28.860
on a button I added

08:29.060 --> 08:35.150
and here, I want to execute or listen to a click event and set reset status

08:35.150 --> 08:40.490
for example, add this in the methods object,

08:40.490 --> 08:43.330
I have to add it to my vue instance therefore.

08:43.580 --> 08:48.090
So here I have reset status as a method

08:48.320 --> 08:56.580
and in here, I can do it very very easily by simply saying this server status equals normal

08:56.720 --> 09:03.500
and then you might say ok and now we need to pass it back and update it in this array of servers here

09:03.620 --> 09:07.200
but we don't. Keep in mind this is an object

09:07.280 --> 09:15.470
and I said earlier, objects are reference types, therefore the objects in this array only exist once

09:15.560 --> 09:20.180
each, one place in memory for each of these objects.

09:20.180 --> 09:27.020
Now when I pass them to another component, it's still the same object, I'm only copying the pointer to

09:27.020 --> 09:28.710
this place in memory,

09:28.730 --> 09:35.690
hence if I added my server in such a component like here in the server detail component, it still edits

09:35.690 --> 09:37.370
the same place in memory,

09:37.640 --> 09:39.430
you will see this in action here.

09:39.800 --> 09:46.910
If I click on any server, critical here, I change it to normal, I navigate away and I select server

09:46.910 --> 09:54.320
2 again, it's still normal because it was edited in this array because server or because this object

09:54.620 --> 09:59.390
is a reference type. That was a rather long exercise

09:59.510 --> 10:03.130
but we practiced a lot of the things we saw in this lecture.

10:03.290 --> 10:10.160
I hope you feel confident using props and custom events and event buses to communicate across components

10:10.430 --> 10:13.000
and manage your state and pass data.

10:13.280 --> 10:15.020
With that, let's move on.
