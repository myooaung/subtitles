WEBVTT

00:02.080 --> 00:05.140
I created this modules folder in the last video,

00:05.490 --> 00:07.610
what's the idea behind modules?

00:07.720 --> 00:14.800
The idea behind modules is that in our store here, we may have certain parts which belong to different

00:14.800 --> 00:20.650
parts of our application, for example the counter, the counter and all the related getters and actions

00:20.650 --> 00:25.550
belong to our counter.vue file, our AnotherResult.vue file and so on

00:25.990 --> 00:29.950
but the value here for example is only used in our app.vue file.

00:29.950 --> 00:35.690
Now I will admit that is a bit of a constructed example because it's very short but you will see it

00:35.710 --> 00:41.380
in the final application we build in the next module in this course where we will actually have a separation

00:41.380 --> 00:46.350
which makes much more sense. Anyways to show the idea behind modules,

00:46.570 --> 00:53.350
it would be an idea to split up this store.js file into two different modules where each module

00:53.350 --> 00:58.360
has its own getters and mutations and state and so on.

00:58.360 --> 01:02.290
So for this, I will create two new files in this modules folder,

01:02.290 --> 01:04.750
the first one I'll name counter.js

01:04.790 --> 01:05.520
.

01:05.620 --> 01:08.490
and the second one will get the name value.js,

01:08.620 --> 01:12.810
let's start in the counter.js file. Here,

01:12.880 --> 01:18.400
I want to create a constant named state and that is an object,

01:18.400 --> 01:24.490
it actually is the same object as here, though of course I'm only interested in the counter so I'll pull

01:24.490 --> 01:27.810
that out of here and instead add it here,

01:27.820 --> 01:30.210
so counter initially is 0,

01:30.520 --> 01:33.620
that is my state. In our store,

01:33.640 --> 01:36.540
we also got some getters related to our counter,

01:36.580 --> 01:44.190
so let's copy them or cut them and let's create a new constant here, getters, getters now also is an object

01:44.330 --> 01:47.800
where we do have our getters inside.

01:47.830 --> 01:50.830
Now we can do the same for our mutations,

01:50.860 --> 02:00.040
so let's fetch them too here and let's add our const mutations which also is an object which now

02:00.170 --> 02:01.920
holds our mutations.

02:02.260 --> 02:05.780
Well you guessed it, we can do the same for our actions so

02:05.800 --> 02:08.360
let's fetch our actions from there

02:08.590 --> 02:17.480
and now let's add a new const, actions file, a constant here, add the actions in there and the actions are

02:17.480 --> 02:18.920
finished.

02:18.920 --> 02:25.600
Next we want to export that all in a default object so that we only have one export in this whole file

02:25.790 --> 02:31.730
and this object has the state and I'm using this ES6 shortcut where this will automatically be expanded

02:31.730 --> 02:38.060
to state state but since it has the same name, I can just use state here and just use mutations and

02:38.060 --> 02:45.290
so on to use all these constants to automatically create key value pairs where the key is state, mutations

02:45.320 --> 02:46.060
and so on

02:46.130 --> 02:52.050
and the value is the state constant, the mutations constant and so on.

02:52.070 --> 02:58.700
So I'll also add the getters here of course and with that, I'm exporting an object with all my counter related

02:58.970 --> 03:02.000
vuex components let's say.

03:02.000 --> 03:07.670
Now in the store.js file, I'll leave the value part in here for now,

03:07.700 --> 03:18.800
we could outsource it into this value.js file here, could hold value, vuex parts but I'll leave it in

03:18.800 --> 03:23.760
the central file because I want to show something else with that file later on.

03:24.230 --> 03:31.730
However since I now exported so much or outsourced so much into my counter.js file, I somehow

03:31.730 --> 03:37.340
need to merge it into this central store in the end because one thing doesn't change,

03:37.340 --> 03:44.540
we have one central store, even though I do have a state here in my counter.js file, that is only

03:44.540 --> 03:46.140
kind of temporarily,

03:46.280 --> 03:51.890
I want to merge it into the central store in the end because that is something we'll always have, a central

03:51.900 --> 03:54.040
store with a central state.

03:54.050 --> 03:56.890
How do I get my counter.js state,

03:56.900 --> 04:03.590
my counter.js getters and so on back into the store.js file in my central store? By simply

04:03.590 --> 04:07.280
adding a new property at the end, modules.

04:07.610 --> 04:13.100
Now modules is a javascript object and here, I simply add all the modules I have,

04:13.220 --> 04:22.600
now I have only one but that's better than nothing so let's import counter from modules counter,

04:22.610 --> 04:28.460
so from this counter.js file and then again I could say counter: counter but since the name

04:28.460 --> 04:33.220
and value is equal, I can simply say counter and let ES6 handle this.

04:33.410 --> 04:40.040
And with this, the module is now important and if I hit save, you will see that if this reloads, it still

04:40.040 --> 04:49.810
works as before but now with this split up over multiple modules which already makes it easier to read.

04:50.000 --> 04:53.370
But we can improve this even more as you will learn in the next video.
