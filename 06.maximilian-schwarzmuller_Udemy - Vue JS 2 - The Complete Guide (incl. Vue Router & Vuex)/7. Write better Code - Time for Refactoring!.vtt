WEBVTT

00:01.970 --> 00:08.500
I'm going to create a calculateDamage function first, so I'll simply name it calculateDamage here

00:09.170 --> 00:14.420
and this shall be a function which expects two arguments, the minimum and the maximum damage we want to

00:14.420 --> 00:22.790
have as borders for this random number. Here I then want to return this function here where I do calculate

00:22.790 --> 00:23.560
my damage,

00:23.600 --> 00:30.950
I want to return this using the maximum and minimum I'm passing to this function here. With that,

00:30.980 --> 00:42.080
I can remove that and simply say damage equals this.calculateDamage and pass 3 and 10, the minimum

00:42.320 --> 00:51.130
and the maximum, much easier. I can now do the same for the monster here where I also can remove all of

00:51.130 --> 00:56.920
that and simply reduce the player health by this.calculateDamage

00:56.920 --> 01:01.390
and now 5 and 12, that would be a possibility, how we can write this here

01:01.390 --> 01:08.350
too to make this code even shorter. So with that, I have refactored my damage calculation,

01:08.390 --> 01:10.620
now I want to check if I won.

01:10.930 --> 01:20.420
So here I will add a new function which I'll name checkWin, this will be a function where I want to execute

01:20.420 --> 01:23.300
the code checking if we lost or won,

01:23.300 --> 01:32.300
so what I do here is I copy my code from up here if the monster health is smaller than 0, in which

01:32.300 --> 01:39.440
case I don't only want to throw an alert let's say but I want to ask the user if he wants to start a

01:39.440 --> 01:40.390
new game.

01:40.760 --> 01:46.670
So I'll show the confirm dialogue and I want to check the result of the dialogue by running if

01:46.710 --> 01:47.730
confirm,

01:47.780 --> 01:54.050
confirm again is a built in function offered by javascript giving us this yes or no dialogue which we

01:54.170 --> 01:55.510
can click then

01:55.820 --> 02:04.790
and here I'll show you won, new game, in which case if this is true so the user clicked yes, I want to

02:04.790 --> 02:07.920
call this.startGame, 

02:08.160 --> 02:14.840
otherwise if the user did not call this or did not want to start a new game, I only set game is running

02:15.060 --> 02:15.720
to false

02:15.740 --> 02:18.360
but we don't start a new game.

02:18.500 --> 02:25.730
I always want to return here because I also have an else block here, specifically an else if block because

02:25.730 --> 02:29.640
here I want to check if the player health is smaller or equal to 0,

02:29.660 --> 02:31.130
not the monster health,

02:31.490 --> 02:33.460
in which case we lost.

02:33.470 --> 02:35.590
So I'll copy the code from above,

02:35.840 --> 02:39.330
you lost, new game and then again, this.startGame

02:39.380 --> 02:42.180
and I guess you could refactor this even more

02:42.290 --> 02:47.190
but I want to keep things easy to read and to understand what's happening here.

02:47.300 --> 02:57.180
Now here in this case, I want to return true actually, the same up here and only if we satisfy no condition

02:57.180 --> 02:57.780
down here,

02:57.780 --> 02:59.910
I want to return false.

02:59.910 --> 03:02.510
Why do I want to return a boolean here?

03:02.760 --> 03:06.240
Because the place where I execute checkWin up here,

03:06.340 --> 03:09.900
here I need to check if we should continue in this function or not,

03:09.900 --> 03:16.990
so I'll check if this.checkWin returns true which is always the case if we either lost or won.

03:17.370 --> 03:22.590
So if we return true here, I know I don't want to continue the code execution here because the game is

03:22.590 --> 03:23.070
over,

03:23.100 --> 03:25.270
so I don't want to deal damage again,

03:25.350 --> 03:28.630
we instead either start a new game or did nothing.

03:28.950 --> 03:32.270
So here if we have a return true,

03:32.400 --> 03:37.870
I know I have to return from this function so that we don't execute the code anymore.

03:38.280 --> 03:47.520
At the end of the function, I again will have to check if we won but here, I can only say this.checkWin

03:47.550 --> 03:51.000
because there is no code getting executed after this function,

03:51.030 --> 03:56.130
so no need to return in case we lost or won because nothing's happening

03:56.130 --> 04:04.170
after calling this function. With this in place, let's save this, reload and see if this still works, I click

04:04.170 --> 04:11.030
attack until we oh this is a close one but until we lost, I guess, you won,

04:11.040 --> 04:13.200
yeah we were really really lucky.

04:13.200 --> 04:17.560
I can now click okay, let's try it again,

04:17.760 --> 04:18.430
you lost,

04:18.450 --> 04:18.980
okay

04:18.990 --> 04:22.830
and then cancel so we get one dialog too much

04:22.830 --> 04:26.990
and this of course is from this check here which I also have to remove.

04:27.540 --> 04:34.940
So with this, our code here is much more readable and we refactored it to also use it in our other

04:34.980 --> 04:37.710
functions which are to follow here.

04:37.950 --> 04:39.460
With that we're able to attack,

04:39.480 --> 04:47.010
now it's also time to implement our special attacks and well heal and so on to really make this game

04:47.010 --> 04:50.210
a bit more flexible and give us a higher chance of winning.
