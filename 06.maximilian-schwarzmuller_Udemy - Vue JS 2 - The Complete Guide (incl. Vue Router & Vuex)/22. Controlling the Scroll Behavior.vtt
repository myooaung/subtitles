WEBVTT

00:01.750 --> 00:06.760
Configuring the scrolling behavior in a vuejs or in an app using the vue router is really

00:06.760 --> 00:07.840
simple.

00:07.840 --> 00:14.900
We go to the main.js file where we set up the router and there, we can pass another property, the scroll

00:14.920 --> 00:19.340
behavior property, that actually is a method to be precise

00:19.450 --> 00:22.450
and here, we can configure how we want it to behave.

00:22.450 --> 00:23.970
This method has three arguments,

00:23.970 --> 00:30.370
to, from and the save position in case we were using the back button and the user scroll down a bit,

00:30.460 --> 00:35.220
the browser automatically saves the position and we can use the position here too.

00:35.350 --> 00:44.200
Now this function expects to get back either an object where we have a X and Y coordinate where we then

00:44.200 --> 00:53.670
specify where to go, for example X, 0 and Y, 0 and a selector so the tag we had before,

00:53.660 --> 00:59.380
so the ID of some element. Let's try with this, X and Y is set to zero,

00:59.380 --> 01:05.920
so that will scroll to top, now let's scroll down a bit by setting this to 700, 700 let's say,

01:05.920 --> 01:07.560
the Y coordinate.

01:07.570 --> 01:08.830
Now if I go to home,

01:08.830 --> 01:13.900
well we don't really see it there because these pages aren't long enough

01:13.900 --> 01:19.360
but if I click on a user and now edit user, you see we now scroll down and that's not because of this

01:19.360 --> 01:21.020
hash tag data thing,

01:21.070 --> 01:26.230
this just happened because we use the vuejs router and therefore it only works if we don't load the

01:26.230 --> 01:27.490
page by entering the URL

01:27.500 --> 01:30.130
but already are in the application,

01:30.190 --> 01:31.660
we're still getting pushed down,

01:31.660 --> 01:37.540
so this is because we set the scroll position to be this far down.

01:37.540 --> 01:39.900
Now the alternative is to use a selector,

01:39.910 --> 01:41.230
so if we have one.

01:41.230 --> 01:44.740
So first I check if the route I want to navigate to,

01:44.950 --> 01:52.360
if this has these hash property being set, so if this is not empty, so if it does exist, in which case I want

01:52.360 --> 02:00.580
to return an object where I say selector and now I use this hash which is a string if it exists, this

02:00.640 --> 02:03.240
string we set up here,

02:03.250 --> 02:04.800
excuse me, here,

02:05.020 --> 02:07.570
this string will that be. So 

02:07.600 --> 02:13.540
this will give me this place to navigate to but only if we do have it

02:13.570 --> 02:15.760
otherwise I will still scroll down.

02:16.060 --> 02:20.280
So if I save this now and head over to the application, click edit user,

02:20.290 --> 02:26.530
we're still going down but this time due to this hash value being set, which I can easily demonstrate

02:26.530 --> 02:31.660
by commenting out the other part, navigating back and reloading this, clicking edit user again, we're

02:31.660 --> 02:34.990
still down there even though I commented out this other part.

02:35.200 --> 02:41.180
So this is how we can use the or how we can set the scrolling behavior and how we can use our hash values

02:41.320 --> 02:42.760
if we do have any.

02:42.940 --> 02:49.360
Finally some step you might want to include is you want to check if save position is set because if

02:49.360 --> 02:54.940
the user navigated back with the back button, it's probably not the desired behavior to scroll him all

02:54.940 --> 03:00.100
the way down, up or whatever, you maybe just want to scroll him to the position he was at.

03:00.100 --> 03:02.020
So you can simply return the save position

03:02.020 --> 03:07.900
in this case and only if this is not set do we check if the hash is set and only if this is not set, then

03:07.900 --> 03:11.550
we maybe scroll him up all the way to the top of the page.

03:12.870 --> 03:19.230
And with that, we should have a fine navigation or a fine scroll behavior control in place.
