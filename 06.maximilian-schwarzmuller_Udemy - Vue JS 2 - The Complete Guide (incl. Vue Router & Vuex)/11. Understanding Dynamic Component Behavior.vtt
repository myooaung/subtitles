WEBVTT

00:01.720 --> 00:08.770
One important question when using this dynamic component approach is, is the component actually recreated

00:08.770 --> 00:09.980
when it gets loaded

00:10.180 --> 00:12.360
or do we use an existing instance?

00:12.400 --> 00:17.160
So for example here, when I reload the app, we have the quote component by default,

00:17.170 --> 00:20.830
now I go to author, this component is obviously create brand new

00:20.870 --> 00:27.910
now. What if I go back to quote, was this component now also now created newly or do we take the existing

00:27.910 --> 00:28.540
one?

00:28.840 --> 00:38.500
Well let's check this by adding a new button to our new component here and adding a data property,

00:38.550 --> 00:45.490
so the function here which then as always returns our data object where we have a simple counter set

00:45.490 --> 00:47.100
to zero initially.

00:47.710 --> 00:52.950
Well upon clicking this button, I want to increase the counter,

00:52.960 --> 01:00.270
so here I will listen to click and simply set counter++ directly accessing this counter property.

01:00.670 --> 01:04.930
Now to see that effect, I will also output counter here,

01:04.990 --> 01:11.560
now if it stays alive, we should be able to increase the counter, navigate to another component, come back

01:11.590 --> 01:15.970
and still see the same counter, if it is destroyed it should restart at zero.

01:16.030 --> 01:17.350
Let's see what happens.

01:17.740 --> 01:21.720
I go to new and then I increase that to let's say 10,

01:21.820 --> 01:27.790
now I go to author and now let's see what happens if I go back to new, it starts again at zero.

01:27.940 --> 01:31.780
So the component is actually destroyed and recreated,

01:31.870 --> 01:35.820
we could have checked the same with the lifecycle as a side note.

01:35.980 --> 01:48.150
So here on new, if I add destroyed and then log, console log destroyed to the console here,

01:48.370 --> 01:52.900
well we will only see what we already know but it is more interesting with the next step what I'm going

01:52.900 --> 01:58.680
to show. If I go to new and go to author, we see destroyed was called,

01:58.930 --> 02:03.010
so the component dies. We can override this behavior though

02:03.020 --> 02:04.810
and in the next video, I'll show you how to.
