WEBVTT

00:01.520 --> 00:10.130
Well as with getters in the last videos, we could have the same problem when changing our store or when changing

00:10.160 --> 00:10.940
our state,

00:10.940 --> 00:13.710
right now we're doing this directly from the components,

00:13.850 --> 00:18.030
we're basically accessing our state and we manipulate it there.

00:18.230 --> 00:23.060
Well that can get a problem if you've got multiple components manipulating our state,

00:23.060 --> 00:29.330
then again it gets hard to track which component edited the state at which point of time and so on

00:29.420 --> 00:34.880
and therefore that is not really the way we want to do it, especially not in bigger applications.

00:35.150 --> 00:41.840
So a better way is to use a similar concept as with getters but now for setting the store, now you could

00:41.850 --> 00:48.500
think it's called setters but it's actually called mutations because it mutates the store or the

00:48.500 --> 00:51.010
state I should say, it changes the state.

00:51.050 --> 00:53.540
These mutations are committed,

00:53.720 --> 01:01.150
so we basically commit such a mutation from one point in our application or from one component maybe

01:01.310 --> 01:07.520
and then this will update the state and all the components listening through getters will automatically receive

01:07.520 --> 01:08.750
the updated state.

01:08.960 --> 01:12.310
Let's see this in action and let's see how we can add such mutations.
