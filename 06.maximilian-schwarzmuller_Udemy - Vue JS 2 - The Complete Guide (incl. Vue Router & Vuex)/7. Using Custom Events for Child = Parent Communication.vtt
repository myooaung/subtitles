WEBVTT

00:02.110 --> 00:08.290
Well there was a lot of work and now we know how to pass data from a parent to the child and how to work

00:08.290 --> 00:10.900
with that, how to validate it and so on.

00:10.900 --> 00:13.070
Now what if we want to do it the other way around?

00:13.270 --> 00:19.130
Let's say here in our child, we want to execute a function, we want to pass

00:19.150 --> 00:25.510
an event to our parent component so that the parent component gets informed about something or gets

00:25.510 --> 00:26.860
a new value.

00:27.190 --> 00:34.330
So let's say in our user detailed component here where I right now output the name, I want to have a button

00:34.810 --> 00:38.660
which allows me to reset the name

00:39.250 --> 00:43.830
and here, I want to execute a click function or on click,

00:43.840 --> 00:46.980
I want to execute a function called resetName.

00:47.080 --> 00:50.280
Now for that of course I need to add it here,

00:50.290 --> 00:56.410
resetName and resetName should somehow change my name,

00:56.410 --> 01:01.090
so here I'll set this, my name equal to Max.

01:01.090 --> 01:02.500
Now here's an important note,

01:02.590 --> 01:06.220
it's perfectly fine to access your property like this,

01:06.220 --> 01:10.210
it's a property of this vue component here in the end

01:10.480 --> 01:17.110
but if that weren't a primitive, so no string, number or boolean but instead especially if that were an object

01:17.140 --> 01:18.300
or an array,

01:18.310 --> 01:25.340
keep in mind that object and arrays are reference types which means they only exist in memory once

01:25.420 --> 01:27.530
and the variables or properties

01:27.550 --> 01:32.910
storing them actually only store a pointer to a place in memory.

01:32.950 --> 01:39.070
So if you pass an object or array from your parent to the child component, you're actually passing the

01:39.070 --> 01:41.530
pointer to that place in memory.

01:41.530 --> 01:48.070
Hence if you change it in the child component, you're changing the object in memory which only exists

01:48.100 --> 01:48.800
once,

01:48.850 --> 01:52.210
so you're also changing it in your parent component.

01:52.420 --> 01:57.940
Now here that would actually be helpful because I want to reset the name and I could do it from my child

01:57.940 --> 02:01.200
component and get it updated in the parent component automatically

02:01.270 --> 02:03.750
but oftentimes that will not be what you want

02:03.910 --> 02:09.460
and while in this case it won't happen because you simply pass a string which is passed by copying

02:09.460 --> 02:11.710
it and not by passing a pointer

02:11.710 --> 02:17.490
but it's important to keep this in mind, this difference between reference types and primitive types.

02:17.530 --> 02:23.280
So here we have a string and I'm now setting it back to Max when I click the reset name button,

02:23.560 --> 02:24.640
this is nice

02:24.670 --> 02:30.110
and if we have a look at this application here, you can see I can change it to Anna

02:30.120 --> 02:37.260
and now I can reset it, works fine but I also want to pass this back to the parent component which now

02:37.260 --> 02:43.710
if I change the name, it doesn't reset it because in the parent component, that name is still Anna.

02:43.830 --> 02:49.230
Therefore well it's not changing it, it's not passing it again because in the parent component the name

02:49.230 --> 02:51.010
didn't change, it's still Anna,

02:51.030 --> 02:51.950
I hope this is clear,

02:51.960 --> 02:54.110
we only changed it in the child component.

02:54.450 --> 03:00.630
So we need to inform the parent component that the name did indeed change and to do so, we will need

03:00.630 --> 03:09.510
to emit a custom event, emitting a custom event may sound complicated but it is not. In each vue instance

03:09.570 --> 03:16.980
and keep in mind, components only extend the vue instance so they are kind of instances of vuejs, you get

03:16.980 --> 03:25.590
access to the emit event or emit method I should say. With the dollar sign, we can see that this is a

03:25.590 --> 03:32.020
built in method vuejs gives us, we could use it again in every component, in every vue instance

03:32.070 --> 03:35.930
and this allows me to emit a custom event just like that.

03:36.060 --> 03:45.690
Now on emit, I specify the name of the event I want to emit and here it's name was reset

03:45.770 --> 03:48.200
for example, choose whatever name you like.

03:49.220 --> 03:52.260
As a second argument, you can pass some data,

03:52.280 --> 03:53.920
so here is this

03:54.050 --> 04:02.890
my name, the updated name. That emits an event, now in the parent component, in the user vue file,

04:02.960 --> 04:04.210
we can listen to that,

04:04.220 --> 04:11.330
how do we listen to an event? Like we listen to all events on the selector of my user detail component

04:11.360 --> 04:13.430
which is the component emitting the event,

04:13.640 --> 04:21.470
I can add an event listener with v-on or shortcut @ and then the name of the event, remember the name

04:21.470 --> 04:23.300
is name was reset,

04:23.300 --> 04:30.960
so here I can listen to name was reset like this and then I can execute some code.

04:31.020 --> 04:38.100
Now I could execute a method here or I can simply say name, which is the property I'm using to store

04:38.100 --> 04:44.460
the name in the user component equals $event where $event refers to the data

04:44.460 --> 04:46.350
which was passed through the event

04:46.470 --> 04:50.650
and remember, I'm passing the updated name here as data.

04:51.060 --> 04:57.630
So if I do this and reload my application, you can see I can change my name to Anna,

04:57.660 --> 04:59.820
I can reset it

05:00.020 --> 05:06.290
and now I can change it again because now it was updated in the user component. And we can actually see

05:06.290 --> 05:15.110
this if I simply print that in my user component here, let's say below the button, I have name is and

05:15.110 --> 05:19.190
then I output the name in the parent component here,

05:19.280 --> 05:22.790
if I do this we see, let's reload, name is Max,

05:22.850 --> 05:23.570
change it,

05:23.570 --> 05:24.320
it changes to

05:24.320 --> 05:28.990
Anna in both components and up on resetting, it changes back.

05:29.180 --> 05:35.380
And before we had the behavior, I can demonstrate this by removing the event that this will not, well

05:35.430 --> 05:36.290
was not the case,

05:36.290 --> 05:37.010
we changed it,

05:37.010 --> 05:41.240
we reset it and it stayed Anna in the parent component nonetheless.

05:41.240 --> 05:47.090
So now we're emitting our customer event and we're listening to it in the parent component

05:47.180 --> 05:50.730
and this is how we can pass data from the child to the parent

05:50.930 --> 05:52.730
and not only the other way around.
