WEBVTT

00:02.050 --> 00:04.980
It would also be nice if we could style the link

00:04.990 --> 00:06.760
if it is active.

00:06.760 --> 00:13.630
The nice thing is that bootstrap in theory gives us this class we can attach to the list item called

00:13.690 --> 00:14.720
active

00:14.980 --> 00:18.640
and if we do attach it, well this is marked as active.

00:18.670 --> 00:27.130
The problem we have though is well we have this router link active class added to our anchor tag

00:27.220 --> 00:30.030
and not to the parent element here.

00:30.160 --> 00:31.670
So these are two problems at once,

00:31.690 --> 00:32.620
the name is wrong,

00:32.620 --> 00:36.580
it's router link active instead of just active and it's on the wrong element,

00:36.670 --> 00:44.470
well how can we solve that? We can achieve this by removing our list items here and only using router link

00:45.370 --> 00:46.770
and then overriding

00:46.780 --> 00:53.590
what this router link shall be like or shall be. So we can add the tag property to route link and

00:53.590 --> 01:00.220
set this to li to create a list item instead of an anchor tag, and then we simply nest the anchor tag

01:00.250 --> 01:05.990
inside of it with no attributes at all, just an empty anchor tag like this

01:06.010 --> 01:10.080
and what this will do is router link will now set up the link on the list item,

01:10.090 --> 01:15.550
it may have an element inside of it, that's no problem, router link may take any content you want to set

01:15.550 --> 01:16.480
up as a link.

01:16.780 --> 01:22.780
But now the real link is the list item element we can set up here and now we can override

01:22.810 --> 01:28.250
the class we want to use by setting the active class attribute here as well

01:28.270 --> 01:29.960
and I can set this to active.

01:30.160 --> 01:35.440
This will make sure that now instead of router link active, it will attach the active class to the active

01:35.590 --> 01:36.230
link,

01:36.460 --> 01:39.780
so let me add this to the second router link here too.

01:40.010 --> 01:43.560
And with that, we can already see that it works

01:43.670 --> 01:49.960
though we also see an issue, it correctly selects user but home stays selected at all times.

01:49.960 --> 01:55.390
Now this happens because the default behavior for the active class or for determining whether a link

01:55.390 --> 01:59.750
is active or not is that it looks at where this link leads to,

01:59.800 --> 02:07.440
so just slash and then it looks at your URL, and by default it marks a link as active whenever your

02:07.450 --> 02:12.690
URL starts with the link or with the to path here.

02:12.730 --> 02:17.530
Now clearly, all our URLs start with slash after the domain,

02:17.530 --> 02:20.180
all our paths start with slash.

02:20.200 --> 02:25.570
Now that's a great behavior if you have nested routes like a user and an ID and you always want to

02:25.570 --> 02:28.050
keep the user select in your nav bar,

02:28.330 --> 02:30.600
it's not the desired behavior though

02:30.760 --> 02:37.030
in a case like this when we don't want to mark the root route as active all the time. So we can add

02:37.090 --> 02:42.910
another configuration attribute here which is called exact and by adding it like this,

02:43.150 --> 02:44.740
we override the default so

02:44.740 --> 02:52.020
now this has to be an exact match. So it doesn't suffice that our path starts with the path here in the

02:52.030 --> 02:54.710
to link or in this path here,

02:54.820 --> 02:59.140
instead it has to be the full path which matches this,

02:59.170 --> 03:05.480
so now you see it only matches if we are on home and not if we are on user.

03:05.680 --> 03:12.640
So with that, we're styling the active link on our outer items, so on the list item here instead of the link and we also

03:12.670 --> 03:17.830
override the active class and make sure it only gets attached when we want to attach it.
