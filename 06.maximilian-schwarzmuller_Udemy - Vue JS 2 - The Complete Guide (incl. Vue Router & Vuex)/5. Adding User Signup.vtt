WEBVTT

00:02.390 --> 00:05.060
In the last lecture we configured firebase,

00:05.060 --> 00:11.240
now let's make sure we do actually create new users through this restful API endpoint firebase gives

00:11.240 --> 00:12.170
us.

00:12.170 --> 00:15.230
I'm going to copy this endpoint here

00:16.720 --> 00:20.970
and I will use it in the signup.vue file.

00:21.010 --> 00:29.680
Now actually there, we target users.json and we are using our custom axios instance, in case you don't

00:29.680 --> 00:31.270
know where this is coming from,

00:31.270 --> 00:37.190
I added it in the module, the new module where I introduce axios.

00:37.240 --> 00:43.600
It essentially is a file which creates an instance, an axios instance with our own settings which we can

00:43.600 --> 00:45.420
use across the application

00:45.670 --> 00:52.960
and there we can set up a base URL which is used in every file where we import and use this instance.

00:52.960 --> 00:55.910
I plan on using this in the signup.vue file,

00:56.080 --> 01:05.610
so I'll actually store my URL in here, in base URL, not the entire URL through, only up to relying

01:05.620 --> 01:09.640
party, everything thereafter which is sign up new user

01:09.640 --> 01:15.940
and then this query parameter should be cut out and moved back into signup.vue

01:16.100 --> 01:23.400
because I want to send my post request no longer to /users.json but to sign up new user here,

01:23.530 --> 01:29.290
this will now target this rest API provided by firebase.

01:29.290 --> 01:35.070
Now the API key which it demands here can be found in your firebase account,

01:35.170 --> 01:41.740
simply make sure to click on web setup here on the authentication tab and in the window which

01:41.770 --> 01:45.210
opens, you can copy that API key.

01:45.670 --> 01:52.870
Once you copied it, head over to your application and there, simply replace API key including the square

01:52.870 --> 01:54.730
brackets with that key,

01:54.940 --> 01:57.130
that is your identification criteria

01:57.130 --> 02:04.340
so to say. Now with that, we are targeting the right endpoint, we're sending the wrong data though

02:04.540 --> 02:06.150
and of course the data you need to send

02:06.160 --> 02:08.430
always depends on the backend you're using.

02:08.800 --> 02:16.090
Our backend, firebase expects to get a javascript object which has an email property, a password property

02:16.600 --> 02:21.820
and then this return secure token property which is a boolean which should always be true as it says

02:21.820 --> 02:22.660
here.

02:23.020 --> 02:24.830
So we can do that,

02:25.120 --> 02:32.530
let's change the data we send to not be our form data object but instead to be a javascript object

02:32.530 --> 02:36.070
where email is form data e-mail,

02:36.100 --> 02:43.570
I do have an email key there where we also have this password field it requires, form data

02:43.600 --> 02:56.440
password and where we also have this return secure token here, this return secure token property which

02:56.440 --> 02:58.240
should just be true.

02:58.470 --> 03:04.990
This is the post request I want to send, this is the request which actually you should give as a valid user.

03:05.490 --> 03:10.200
Now let's save this file and let's go back to our application,

03:10.350 --> 03:14.100
let's head back to the running app and go to the sign up page

03:14.100 --> 03:18.330
and now we need to enter an e-mail address which hasn't been taken yet,

03:18.330 --> 03:20.640
I haven't signed up any user through that

03:20.760 --> 03:21.780
firebase API,

03:21.780 --> 03:26.280
so all email addresses should be valid. The other fields are totally up to you,

03:26.280 --> 03:27.790
they won't be checked,

03:27.960 --> 03:32.590
the password for firebase has to be at least six characters long

03:33.000 --> 03:35.310
and then you don't need to check anything else,

03:35.310 --> 03:37.400
we're not validating the form yet,

03:37.470 --> 03:39.450
you can hit submit.

03:39.450 --> 03:49.260
Now here I'm getting an error, that error is coming from my authorization header I'm setting on this

03:49.260 --> 03:50.270
request right now so

03:50.290 --> 03:58.410
let's go back to our application to axios-auth.js and let's simply comment out this global config

03:58.410 --> 04:05.380
here as well as in the main.js file, our global authorization header, here

04:05.460 --> 04:11.000
it's actually a problem.

04:11.200 --> 04:13.080
So now with that, let's try this again,

04:13.090 --> 04:18.230
let's quickly enter a valid email address and a valid password and hit submit

04:18.490 --> 04:19.880
and now it works,

04:19.900 --> 04:27.250
I get back a successful response. In the data I get back, I get such a token which I mentioned earlier,

04:27.400 --> 04:33.610
I also get an additional token, a refresh token which can always be used to refresh this ID token which

04:33.610 --> 04:34.950
is very short lived,

04:34.960 --> 04:39.200
it only lasts one hour, expiresIn is in seconds

04:39.340 --> 04:47.420
and the e-mail address I used. We can verify that the user was created on our firebase backend, on authentication

04:47.440 --> 04:52.320
if we refresh this users page, here we see this email address

04:52.330 --> 04:53.400
we just used

04:53.500 --> 04:56.990
and a user ID which was generated automatically.

04:57.400 --> 05:01.690
So with that, we got a way to sign users up,

05:01.690 --> 05:09.280
now in the next lecture, let's add logic to sign them in before we then finally start working on that token

05:09.550 --> 05:11.810
and learn how to use that token.
