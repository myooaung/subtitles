WEBVTT

00:02.230 --> 00:06.490
In the last video, we had to pass a dynamic element in our link

00:06.740 --> 00:12.260
and that led to a path which had to be constructed like this, not really that convenient especially if

00:12.260 --> 00:19.400
that gets longer. Thankfully vuejs or the vue router offers a better possibility or a better way

00:19.400 --> 00:20.410
of doing that,

00:20.570 --> 00:28.040
we can give our route names. So in the routes.js file, I can assign a name to this route by simply

00:28.040 --> 00:32.600
adding name here and I'll name it user edit for example,

00:32.600 --> 00:34.810
now choose any name you like,

00:34.820 --> 00:36.820
this is just one example here.

00:36.920 --> 00:39.930
So user edit is now the name of this route

00:40.160 --> 00:47.120
and I can now identify this route by name which means that on any page wherever I set up a link, for

00:47.120 --> 00:52.900
example in user detail, I can now change this to pass an object instead of a string,

00:52.910 --> 00:54.750
of course you need the colon for that,

00:54.830 --> 00:57.030
otherwise you're not able to pass an object

00:57.120 --> 01:03.250
and in this object you got a couple of properties to define which path you want to navigate to.

01:03.280 --> 01:08.330
And you could set a path here and do the same thing from before,

01:08.360 --> 01:14.240
well it would not really save you some time but you can add path here, just that you know that but

01:14.240 --> 01:20.590
you can also say name and the name was used edit as a string.

01:20.990 --> 01:30.650
Now this is the name, of course I set up here and now vuejs will automatically populate this real

01:30.650 --> 01:34.700
path then with the path it extracts from this named route,

01:34.700 --> 01:37.530
this is the cool thing, we don't have to type the full path.

01:37.790 --> 01:41.700
I can now pass a second argument here which has the name params,

01:41.700 --> 01:43.900
this is a key vuejs will recognize

01:44.090 --> 01:50.100
which again is an object where I can now pass key value pairs of the parameters I want to pass to this

01:50.120 --> 01:50.810
path

01:50.960 --> 01:55.090
because of course, this specific path here needs to get an ID.

01:55.160 --> 02:03.890
So in my params object here, I simply say ID and this is now route.params.id, like this, much easier. If

02:03.890 --> 02:07.920
I now save this and go to just /user/1,

02:08.090 --> 02:13.030
you see if we click edit user, it still goes to User 1 edit

02:13.250 --> 02:16.700
but now, we had much less effort in setting this up,

02:16.700 --> 02:20.110
it's much easier to edit and to manage.

02:20.270 --> 02:25.780
The important thing here is you could use this set up in any router link,

02:25.850 --> 02:32.390
you can always pass an object too, as you saw you could also use an object to just set the path and

02:32.390 --> 02:39.840
it's the same object you can pass when having your routing happen in code like we do here.

02:39.920 --> 02:48.530
When I push this path, I could instead also pass an object and set up a path like this or also use a

02:48.530 --> 02:49.700
named route here,

02:49.790 --> 02:54.920
so if I gave my home route a name here, let's say I assigned a name

02:57.510 --> 03:05.350
home to it, then I can go here and simply use name home, just like this and I could pass params here

03:05.350 --> 03:07.230
too if this route expected once.

03:07.420 --> 03:10.290
And you will see, if I now reload this and click go to home,

03:10.300 --> 03:11.280
it still works,

03:11.380 --> 03:19.090
now with a named route and passing an object. Two powerful features which make routing much more convenient.
