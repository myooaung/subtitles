WEBVTT

00:02.510 --> 00:08.420
So over the last lectures we added code to post data and to therefore sign up and sign in, now we

00:08.420 --> 00:14.680
want to also store the data we get back, that token. And we got the store, the vuex store,

00:14.780 --> 00:16.650
I only set up the basics here,

00:16.730 --> 00:19.090
it's totally empty as you can tell.

00:19.250 --> 00:28.520
Now here, I simply want to add an ID token field which should be null initially to my state and then, I also

00:28.520 --> 00:35.300
want to let's say add a user ID which should be null initially and then let's see what else we eventually

00:35.300 --> 00:36.210
need.

00:36.230 --> 00:41.750
Now the goal is to of course store the token in user ID here in the vuex store,

00:41.870 --> 00:42.810
now for that,

00:42.860 --> 00:48.920
why don't we start by simply making the sign up and sign in requests from within actions here?

00:49.220 --> 00:51.740
So we could have a sign up action here

00:54.450 --> 01:01.440
and of course a login action too, now for these actions,

01:01.550 --> 01:08.660
we will obviously need to extract our commit method which allows us to commit a mutation,

01:08.690 --> 01:12.710
we don't have any commit any mutations yet but we will create them

01:12.920 --> 01:18.890
and if you don't know how vuex works, make sure to check out my vuex module first of course.

01:18.890 --> 01:24.810
Now the second argument we can expect here in the sign up method is the payload,

01:24.860 --> 01:29.390
so let's say the auth data, you can name this argument whatever you want,

01:29.390 --> 01:32.500
I also expect to get some auth data in the login method.

01:32.900 --> 01:41.030
And now I'll just grab my code from the sign up file, this post request here, cut it from there and go to the

01:41.030 --> 01:44.590
store and add it to the sign up method. For this to work, I

01:44.710 --> 01:51.980
of course also need to grab the axios import, remove it from the signup.vue file and add it to

01:51.980 --> 01:53.470
the store instead,

01:53.570 --> 01:56.850
I just need to adjust the path here,

01:56.960 --> 01:58.610
now it's in the same folder.

01:59.950 --> 02:04.890
Now we can reach out to this axios instance here, send the post request for signing up

02:05.170 --> 02:08.150
and of course do the same for signing in. There,

02:08.170 --> 02:10.660
I'll also simply remove the axios import,

02:10.660 --> 02:12.860
we don't need it anymore in that file

02:12.940 --> 02:19.420
and I'll grab this axios post request here and add it to the login method.

02:19.420 --> 02:24.050
Now I need to extract my e-mail and so on from the auth data,

02:24.160 --> 02:29.300
so I replace form data with auth data in both login and sign up

02:29.650 --> 02:33.580
and now we have our actions set up to send the requests.

02:33.580 --> 02:41.410
They don't commit any mutations yet but at least we moved our code into the right place because these

02:41.410 --> 02:46.330
should really be actions, we should really be able to handle the result of our requests

02:46.330 --> 02:53.370
here in the vuex store. Now the goal of course now is to use these actions,

02:53.380 --> 02:57.120
the store already is injected in the main.js file,

02:57.280 --> 03:01.930
so in signup.vue, I can now dispatch this action here in on submit,

03:02.090 --> 03:09.130
I can simply access this store dispatch and dispatch the login action, excuse me, the sign up action

03:09.130 --> 03:16.540
here and simply pass a javascript object where the email is form data e-mail and where the password

03:16.630 --> 03:22.480
is form data password, that will constitute this auth data object

03:22.480 --> 03:31.690
I expect to get in my actions. The same logic of course applies to the signin.vue file, there

03:31.700 --> 03:33.800
I also want to dispatch an action,

03:33.860 --> 03:38.210
it's the login action here but it receives the same data though.

03:38.690 --> 03:41.100
With that, we are dispatching the actions,

03:41.240 --> 03:48.260
let's now see if that works before we actually dive into mutating the store and storing the token, back

03:48.260 --> 03:55.190
to our application therefore. Here on sign up, let me create a new user with a new unused email address

03:56.060 --> 03:57.780
and let me click submit

03:59.000 --> 04:02.500
and we see that we now successfully created a user,

04:02.510 --> 04:07.930
now however using our store there, the sign up action.

04:08.210 --> 04:10.500
Now that is how we move that logic to the store,

04:10.500 --> 04:14.510
that's the first step, in the next lecture, we'll make the more important step

04:14.510 --> 04:21.920
I'd say, we'll add a mutation which then also allows us to store that token in our state so that we may

04:21.920 --> 04:24.410
use it for subsequent requests.
