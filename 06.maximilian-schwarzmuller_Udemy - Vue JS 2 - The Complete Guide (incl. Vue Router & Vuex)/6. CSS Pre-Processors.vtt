WEBVTT

00:02.280 --> 00:06.000
So we saw that using the plugins is a lot of fun,

00:06.180 --> 00:11.970
now there is a special case and that is related to css. You might remember that for creating this

00:11.970 --> 00:20.250
project, I didn't check the css preprocessor option, therefore my project here doesn't have sass enabled and

00:20.250 --> 00:26.790
this of course means that if I decide to write some sass code here, let's say in the home component which

00:26.790 --> 00:29.070
now uses vuetify here,

00:30.000 --> 00:36.690
I got my small style there and let's say I want to change that style and I want to change it by using some

00:36.690 --> 00:37.820
sass features

00:37.860 --> 00:40.940
so I actually want to select it like this,

00:40.990 --> 00:48.030
I add my footer because that is where I have to that small element and I'll be targeting this here by

00:48.030 --> 00:55.960
the way, this name of the author of this quote. So I can select the footer element and then I want to

00:56.340 --> 01:02.430
create my curly braces and in there, I want to style small and this is not valid css syntax, in

01:02.520 --> 01:04.420
scss, we can use that though

01:04.620 --> 01:12.000
and it basically is then converted to this css syntax but the cool thing about scss is that you

01:12.000 --> 01:15.480
could argue that this syntax is a bit easier to understand.

01:15.840 --> 01:19.200
So I want to target small here and give it a red color,

01:19.200 --> 01:26.550
and as I said this is not valid css syntax, so I have to switch to scss and for that I can go to my

01:26.550 --> 01:32.960
style tag and add the lang element here and rename this or add the scss option.

01:33.300 --> 01:39.630
Now this is not marked as an error anymore but I get an error and that error is of course that it failed

01:39.630 --> 01:42.850
to compile because it didn't find a loader,

01:43.140 --> 01:47.690
basically a compiler for sass. And indeed we just have to install it

01:47.790 --> 01:50.400
and this is one thing which is not managed through a cli

01:50.400 --> 01:51.240
plugin,

01:51.240 --> 01:53.140
that's why it's a special case,

01:53.190 --> 02:00.480
instead you can just run npm install --save and then it's sass loader and you need one other package

02:00.480 --> 02:01.680
which isn't mentioned here,

02:01.700 --> 02:09.140
node-sass. With that you hit enter and now this will install that through the normal npm installation

02:09.300 --> 02:09.840
path,

02:09.860 --> 02:16.820
so no cli magic is used here and this will make sure that this cli project here can compile

02:16.820 --> 02:22.340
your code because the cool thing is it has a set up where it will basically check for the existence

02:22.370 --> 02:24.300
of sass loader and node-sass

02:24.410 --> 02:31.960
and if it does exist, it will compile your code from sass to css and otherwise it won't,

02:31.970 --> 02:35.090
so it has this auto-detection we could say.

02:35.330 --> 02:42.590
And now with that, if I bring up my development server again, we should see a red author name because

02:42.590 --> 02:46.040
of my scss code which is now compiled

02:46.190 --> 02:48.570
and indeed if I reload, it's red.

02:48.680 --> 02:53.840
So this is working and this is just a special case I wanted to bring to your attention, if you want to

02:53.840 --> 02:57.650
switch from the css to scss for an existing project,

02:57.650 --> 02:59.170
you don't have to create a new one,

02:59.180 --> 03:04.790
you can do that simply by installing these two packages. And you can by the way also use other css

03:04.790 --> 03:07.840
preprocessors, checkout the official cli docs,

03:07.850 --> 03:12.260
there you'll find instructions on how to use a stylus or less if you want to use that.
