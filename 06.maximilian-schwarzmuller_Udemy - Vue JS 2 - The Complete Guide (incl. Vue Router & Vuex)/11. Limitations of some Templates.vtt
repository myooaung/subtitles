WEBVTT

00:01.910 --> 00:08.930
So we learned about an alternative to using el where the el property tells vuejs which part of

00:08.930 --> 00:12.980
the html code to take and create the template automatically,

00:13.100 --> 00:17.480
we can also do that manually by using the template property.

00:17.690 --> 00:22.860
That being said, most of the time you'll probably use el since this allows you to write html code

00:23.020 --> 00:29.000
well directly in your html code, in your editor whereas template would be a string, hence facing some

00:29.000 --> 00:29.850
limitations.

00:29.900 --> 00:31.640
It's harder to write multi-line,

00:31.700 --> 00:36.510
you might not get your IDE to support this with syntax highlighting and so on,

00:36.560 --> 00:39.950
so that are some of the nasty limitations you got there.

00:39.950 --> 00:43.950
We also get some other limitations when it comes to templates in general

00:43.960 --> 00:50.210
and that affects both the template property and this string template or the template derived from our

00:50.390 --> 00:52.890
html code with the el property

00:53.090 --> 00:57.770
but I will come back to that and most important, to a possible solution

00:57.770 --> 01:05.600
when we have a look at components and specifically in the next module, when we have a look at which build

01:05.630 --> 01:13.160
tools vuejs offer us, offers us. What I want to say right now is that there are two versions of vuejs,

01:13.160 --> 01:17.270
one version has a compiler build in which runs in the browser,

01:17.280 --> 01:24.130
this is the version which supports our templates no matter if we use a template property or the el property.

01:24.200 --> 01:29.040
This version basically takes our template and recompiles it in the browser to re-render the dom,

01:29.120 --> 01:36.140
that means it has to respect some dom limitations like case insensitive names of elements,

01:36.140 --> 01:40.070
that would be one and I'll come back to this when we talk about components.

01:40.070 --> 01:45.160
We also get another version of the compiler or excuse me, of vuejs without a compiler,

01:45.320 --> 01:48.210
so there, the compiler is stripped out

01:48.230 --> 01:49.610
and how can we do that?

01:49.800 --> 01:56.480
Well we have to compile our templates during the build process so that when we ship our application, we

01:56.540 --> 02:01.560
only have compiled javascript code which can get, which can get executed whenever

02:01.610 --> 02:06.080
well we need to re-render the dom or whenever vuejs decides to re-render.

02:06.080 --> 02:07.930
This is what it does at runtime anyways

02:07.940 --> 02:13.910
in the other case but with the precompiled version, it's smaller and faster and we will learn how

02:13.910 --> 02:18.100
we can use that recompiled version in the next course module.

02:18.110 --> 02:23.330
Now I just wanted to highlight that we face some limitations when using these templates, no matter if

02:23.330 --> 02:29.660
we use el or template but especially if we use template where we would have to specify everything as a string

02:30.080 --> 02:33.320
which really makes things a little bit more complicated.
