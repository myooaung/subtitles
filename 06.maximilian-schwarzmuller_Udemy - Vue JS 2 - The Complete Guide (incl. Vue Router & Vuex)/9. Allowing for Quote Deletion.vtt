WEBVTT

00:01.850 --> 00:04.260
How can I track if a quote get clicked?

00:04.520 --> 00:08.290
Well we learned a couple of methods to react to that,

00:08.510 --> 00:14.330
I'll use the one where I go to quote grid and here, I do have my app quote.

00:14.720 --> 00:20.180
Now if I add @click like this on my own component, that will not work

00:20.360 --> 00:27.920
but what I can do is I can add the native modifier. What the native modifier does is it tells vuejs

00:27.920 --> 00:31.700
well react to a click on that component

00:31.940 --> 00:38.510
if it happens on the native element of this component, so it will basically register a click here on

00:38.510 --> 00:42.120
the div which in the end is what sets in html code

00:42.410 --> 00:47.840
but since we add the native property, excuse me, native modifier here, it knows

00:47.880 --> 00:51.940
yeah even though that happened on the html code of that component,

00:52.070 --> 00:58.840
treat it like I clicked on app quote here which I can't because that is not appended to the dom, only

00:58.840 --> 01:01.320
the code in the template is appended to the dom.

01:01.580 --> 01:08.030
So this allows me to click on a component, as the build treat clicks on the template as clicks on the component

01:08.830 --> 01:13.240
and I can therefore execute the delete quote method.

01:13.640 --> 01:23.990
Now to delete the quote, I need to add my methods here, an object where I add delete quote and now,

01:23.990 --> 01:26.310
how do I determine which quote to delete?

01:26.510 --> 01:32.010
I need the index of that quote to delete the right one from the array. To get the index,

01:32.010 --> 01:37.480
I'll go to my v-for loop and we learnt that we can extract more than just the element.

01:37.490 --> 01:43.120
The second argument would be the current index and if we loop through an array, the index is of course

01:43.130 --> 01:47.790
exactly what I need to delete an array, to delete an element from the same array.

01:47.810 --> 01:53.120
Therefore I can here pass index to the delete quote method,

01:53.120 --> 01:54.520
I get the index here too

01:54.530 --> 02:02.740
therefore and hence, I can use this to now also emit my own event and when I am at this event,

02:02.970 --> 02:05.230
let's give it a name of quote deleted,

02:05.400 --> 02:08.980
I pass the index as an argument.

02:09.180 --> 02:16.620
Now with that, I can go to the app.vue file where I use this grid and in there, I simply want to listen to

02:16.620 --> 02:17.210
this,

02:17.220 --> 02:25.720
so here I can listen to my own event, the quote deleted event and execute delete quote here too.

02:25.950 --> 02:32.070
The fact that I named this delete quote here in the app.vue file and in the quote grid is totally

02:32.070 --> 02:32.800
irrelevant,

02:32.880 --> 02:39.100
the naming could be different because in the quote grid, I execute this delete quote method and in the

02:39.100 --> 02:42.990
app.vue file, I delete the method I am going to create now.

02:43.320 --> 02:51.020
So here I'm also going to create a delete quote method where I get the index as an argument,

02:51.300 --> 02:56.460
I'm not passing it here because again vuejs will do that for me, just as it did

02:56.580 --> 03:03.650
for quote added where it also passed the content for me and then down there in delete quote,

03:03.900 --> 03:06.860
I simply want to access my quotes array,

03:07.110 --> 03:13.350
use the splice method, start splicing at the position of the index and then splice one element

03:13.650 --> 03:19.840
to modify the existing array and simply remove one element from it.

03:19.860 --> 03:23.190
Now with this, I'm able to delete quotes as we should see

03:23.190 --> 03:25.880
once I add a new one, click on it, it's gone.

03:26.860 --> 03:29.620
So this works fine

03:29.650 --> 03:35.770
and lastly, let's add the functionality to track the number, to give us a warning if we want to add more

03:35.770 --> 03:37.940
than 10 and to show the progress bar.
