WEBVTT

00:02.010 --> 00:04.390
Well we already learned a lot about routing here,

00:04.440 --> 00:10.320
we learned about how to set up routes, how to use nested routes, how to pass parameters, how to react to changes

00:10.320 --> 00:14.660
to a parameter, how to use query parameters and much more.

00:14.670 --> 00:17.790
There's still some things to come and I want to start with

00:17.790 --> 00:23.920
one nice feature you honestly won't need all the time but which can be very nice if you do need it.

00:24.150 --> 00:28.850
You can not only name your routes but also your router views,

00:28.860 --> 00:30.710
where would you use that?

00:30.720 --> 00:34.260
Now we do have a nice looking header here, like this one,

00:34.260 --> 00:40.530
now let's say we want to attach it at the bottom if we are in the user area, for some reason we want

00:40.530 --> 00:43.070
to have the header on the bottom there.

00:43.410 --> 00:51.690
So in our home component, excuse me, in our app component I will no longer include the app header like this, instead

00:51.750 --> 00:59.490
I want to have a second router view where the app header is loaded though it may be in different positions

00:59.550 --> 01:02.430
depending on which route we're visiting,

01:02.430 --> 01:05.100
for this I'll actually replicate this one more time

01:05.130 --> 01:14.280
and now we can give our route views here names like header top for example and down there, that could

01:14.280 --> 01:17.920
be header bottom and the middle of our view is

01:17.970 --> 01:22.920
unnamed, this will be the default router view where everything will be loaded where we don't assign a

01:22.920 --> 01:24.810
specific name explicitly.

01:24.870 --> 01:26.480
How do we assign names?

01:26.690 --> 01:28.870
Well in the routes.js file,

01:28.950 --> 01:38.440
I can now add a new parameter or a new property here, components and therefore I will remove component

01:38.620 --> 01:42.870
because now we're loading multiple components. Components is an object

01:43.060 --> 01:51.740
and here I do have my default component which is simply my home component but I also do have my header

01:51.790 --> 02:02.530
top component, header top and this now refers to this named router view here, so this header top here has

02:02.530 --> 02:06.360
to match this name. And this shall be my header which I

02:06.360 --> 02:08.470
first of all have to import,

02:08.500 --> 02:15.640
so let me quickly do that to load my header here and now I'm setting this up to work like this. If I

02:15.640 --> 02:18.150
reload the page and I go to home,

02:18.150 --> 02:19.570
we see the header here

02:19.750 --> 02:25.360
but if I go to user, it's gone because there I'm not including it yet, we don't see an error here,

02:25.370 --> 02:27.250
this is just how it works

02:27.610 --> 02:29.550
and it's not loaded at the bottom.

02:29.570 --> 02:36.370
Now for the user, I want to load it at the bottom so therefore I will grab this components set up here,

02:36.730 --> 02:39.460
add it here for my user route as well,

02:39.460 --> 02:47.440
the default now here is of course user, nested routes still work but the header bottom shall now be populated

02:47.440 --> 02:48.930
with the header.

02:48.970 --> 02:53.950
Now this will lead to our header being at the bottom for user related routes and it being at the

02:53.950 --> 02:57.580
top for home related route or the other routes.

02:57.580 --> 03:04.350
Now of course this specific use case doesn't provide the best user experience but I think you see where

03:04.440 --> 03:07.190
this could be useful or where you could use that,

03:07.270 --> 03:12.100
basically whenever you want to switch your layout around depending on the route you are at and then

03:12.100 --> 03:18.490
named router views make it easy for you to reserve certain spots in your layout, in your code, in your

03:18.490 --> 03:25.180
html code to dynamically render pieces of your application there depending on which route you're navigating

03:25.180 --> 03:25.490
to.
