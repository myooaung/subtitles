WEBVTT

00:01.730 --> 00:07.550
So we want to use this new knowledge that vuejs somehow attaches some css classes with our

00:07.550 --> 00:08.500
alert here.

00:08.690 --> 00:11.780
So back in the application, how do we do that?

00:12.020 --> 00:19.380
Well we could use the transition like that and simply set up some styles, with classes named

00:19.400 --> 00:23.600
v-enter, v-enter-active and so on because that would be the default

00:23.780 --> 00:27.160
but typically oftentimes, you override that.

00:27.170 --> 00:33.020
So let's say I here want to fade it in, therefore I add the name attribute here,

00:33.140 --> 00:38.870
now no colon at the beginning because I don't want to dynamically bind this to some property in which

00:38.870 --> 00:44.870
case I would need a colon but I want to hardcode the name into here as a string, so I can simply give

00:44.870 --> 00:47.190
it a name here and I'll name it fade.

00:47.240 --> 00:50.980
What this means is that vuejs will now attach fade

00:50.990 --> 00:56.570
enter, fade-enter-active, fade-leave and fade-leave-active to this element whenever needed,

00:56.570 --> 00:59.270
so during the animation in or the animation out,

00:59.310 --> 01:06.080
so adding and removing the element. That means I can now set these classes up down there, fade-enter would

01:06.080 --> 01:12.220
be the one which is attached for one frame at the beginning, fade-enter-active is the one which is attached

01:12.230 --> 01:15.790
for the whole, at each element in animation time

01:16.250 --> 01:21.800
and then we also have of course fade-leave and fade-leave-active.

01:21.800 --> 01:28.250
Now the important thing and that is really important to keep in mind is that vuejs will analyze

01:28.310 --> 01:34.160
this css code, will have a look at it and therefore determine how long the animation runs.

01:34.160 --> 01:40.900
Right now it would see that the animation well doesn't run at all which is why it instantly attaches

01:40.910 --> 01:49.120
and detaches it, it will automatically prolong this and give you the chance to really execute your css

01:49.160 --> 01:50.360
code here

01:50.360 --> 01:54.140
once you do start adding things here which takes some time.

01:54.170 --> 01:56.090
Now what things would that be?

01:56.090 --> 02:02.540
Typically, the transition property where you animate the transition of some css properties or the

02:02.540 --> 02:07.540
css animation property where you set up a specific animation configured with keyframes.

02:07.580 --> 02:12.830
Now I'm not going to dive deep into transition and animation here because that is a really core css

02:12.890 --> 02:18.710
stuff, though of course you will see it being used by me in the next videos where we will now set

02:18.710 --> 02:20.370
up such an example application.

02:20.390 --> 02:23.030
Actually let's start with such animation

02:23.060 --> 02:24.810
for the fading in the next video.
