WEBVTT

00:01.940 --> 00:09.590
The third method I want to show is using a central class or object to pass the data.

00:09.690 --> 00:15.060
If you're coming from Angular 2, you might know this as services, this would also be a central part of the

00:15.060 --> 00:20.720
app you can check in places where you need it which holds some task or methods you want to use in your whole

00:20.730 --> 00:21.900
application,

00:21.900 --> 00:29.850
that's basically what we're using now. To do so, I will create a new vue instance in my main.js file

00:29.850 --> 00:36.210
here where I have access to vue and I will store it in a constant which I export.

00:36.210 --> 00:44.340
So here I'll export a constant named, I'll name it eventBus since it will serve as a bus for our events but

00:44.340 --> 00:48.720
you may give it another name and this is a new vue object.

00:48.750 --> 00:54.210
Now I'm not defining any method or something like this because the methods I need already exist on this

00:54.210 --> 00:58.440
by default because they are shipped by vuejs.

00:58.530 --> 01:06.060
So with this bus or with this object set up, I can go to my user edit component and there, I want to import

01:06.060 --> 01:06.860
this,

01:07.290 --> 01:17.630
so I'm importing this from the main.js file and I'm using curly braces, this is ES6 syntax for importing

01:17.630 --> 01:19.000
named exports

01:19.160 --> 01:21.400
and here it's the eventBus.

01:21.440 --> 01:31.010
With this, I can comment out my existing emit method and instead call eventBus $emit because

01:31.010 --> 01:32.660
eventBus is just a vue instance

01:32.730 --> 01:36.200
and again a vue instance has this emit method. Here

01:36.230 --> 01:42.680
I want to emit the same data as the event above but here, the important thing is this is not emitted

01:42.740 --> 01:47.720
on this vue instance here, it's emitted on this eventBus instance.

01:47.780 --> 01:52.850
Now since this is a separate instance, I can go to my user detail component and there, I want to add a

01:52.850 --> 01:55.580
new lifecycle hook, the created hook,

01:55.580 --> 02:01.370
we learned about this in the lifecycle hook lecture in the understanding the vue instance course

02:01.390 --> 02:07.300
module and I'm using ES6 syntax instead of this normal ES5 syntax here to create this created

02:07.300 --> 02:13.970
hook and I want to use this hook because I now want to set up a listener to this event. This listener

02:14.000 --> 02:20.270
should keep running from the beginning of this component on, therefore created is the place where I want to

02:20.270 --> 02:23.020
set it up because the component is now created,

02:23.030 --> 02:29.650
now it's time to register this listener. For that I will need to add the import of the eventBus there

02:29.660 --> 02:39.860
too, like this, then here I can set up eventBus on and this will now listen to events emitted on this

02:40.070 --> 02:43.660
vue instance I created and stored here in the eventBus.

02:44.060 --> 02:50.330
So here I know I want to listen to the age was edited event because this is the name I chose in the

02:50.330 --> 02:54.270
user edit component and I know that I get some data,

02:54.440 --> 03:00.290
this data is always used in the second argument here which is always a callback which should get executed

03:00.290 --> 03:02.690
whenever such an event occurs.

03:02.710 --> 03:08.690
I'm using ES6 syntax with the arrow function here and this callback which will get executed automatically

03:08.690 --> 03:15.140
by vuejs always get the data we pass with the event passed as an argument.

03:15.230 --> 03:16.850
So we always get the data here,

03:16.850 --> 03:18.390
the name is totally up to you,

03:18.410 --> 03:21.630
you can name it data or since I know it will be an age,

03:21.650 --> 03:30.290
I can also name it age. And then here, I can access my existing vue instance with this and set user age, this

03:30.290 --> 03:34.580
prop we're getting passed from outside directly to age.

03:35.030 --> 03:40.810
However in the main.js file, this will not work like this tiny error I just recognized,

03:40.940 --> 03:45.800
we have to put this in front of our vue instance here of course because this is the instance holding

03:45.800 --> 03:47.110
all our components,

03:47.200 --> 03:51.080
therefore we have to create our eventBut before loading all these components

03:51.100 --> 03:56.370
otherwise we won't have access to them because the code here would get executed after that instance,

03:56.420 --> 04:02.950
so the order is important. Now when saving this, we can go back the application and if I now click edit

04:02.990 --> 04:09.730
age, it's updated instantly but important thing is it's not taking the route over the user component

04:09.920 --> 04:17.090
and I can prove this by also printing the age here, age is the name of the property set up here in the

04:17.090 --> 04:22.520
data field and by reloading, we see age is 27

04:22.580 --> 04:28.620
and if I edited here, it stays 27 in the user component but not in the two child components.

04:28.700 --> 04:35.420
This is how you can implement a communication between children without having to take the route using

04:35.630 --> 04:36.540
the parent.

04:36.830 --> 04:42.320
Though that being said, managing state and that is what we're doing here, we're managing the state of

04:42.320 --> 04:49.340
a property across multiple components can quickly get very very complicated, if you got more complex

04:49.340 --> 04:50.450
structures,

04:50.450 --> 04:55.710
use a component in different places, update a property in different places and so on.

04:56.710 --> 05:05.140
To make this simpler, vuejs has a great tool we can use called vue X and we will use it in this

05:05.140 --> 05:12.430
course in a later module where I will dive deeply into that tool and which will show you how easy state

05:12.430 --> 05:14.260
management then becomes.

05:14.260 --> 05:19.660
That being said, for simple to medium sized applications, there's nothing wrong with this approach

05:19.810 --> 05:23.750
and it's perfectly fine to pass data either using these parent to

05:23.780 --> 05:29.610
child chains you saw earlier with custom events and props or by using an eventBus, like this.
