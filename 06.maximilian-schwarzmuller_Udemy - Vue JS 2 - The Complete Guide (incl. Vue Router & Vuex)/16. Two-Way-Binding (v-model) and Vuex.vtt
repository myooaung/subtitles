WEBVTT

00:01.990 --> 00:08.650
Actually before coming to how to use the set up or how to use vuex in bigger applications and how

00:08.650 --> 00:11.400
we might organize it with different files,

00:11.530 --> 00:15.400
let me highlight one important special case.

00:15.400 --> 00:17.630
Imagine the following, in our store,

00:17.650 --> 00:25.820
we now not only got the counter but we also got let's say the value, the global value, it's zero initially.

00:25.870 --> 00:29.630
Now this value shall be set in any of our components,

00:29.650 --> 00:35.890
so for that I will quickly set up a getter which I'll simply name value

00:36.040 --> 00:43.360
and here I get my state and I simply want to return state value like this and I want to create a mutation

00:43.360 --> 00:52.610
for it which I'll name updateValue which gets the state and the payload and then here,

00:52.670 --> 00:59.570
I simply want to set state value equal to payload, so that in the payload is just a number which should

00:59.570 --> 01:06.540
be the new value. And I will set up an action for this, the action I want to set up is also called

01:06.620 --> 01:07.890
update value

01:08.090 --> 01:12.210
and here I do get my object where I'm only interested in the commit method

01:12.440 --> 01:21.320
and I do get my payload and therefore, I can then call commit update value which is the name of the mutation

01:21.320 --> 01:23.970
I want to execute and pass on the payload.

01:24.200 --> 01:28.120
So far so standard, that's nothing we haven't done yet,

01:28.130 --> 01:34.980
now in the app.vue file let's say, here I want to add a new horizontal line below all my counter

01:35.010 --> 01:43.170
stuff and I want to add an input which is of type text which actually should allow me to set this value.

01:43.460 --> 01:46.490
So here is where it becomes tricky,

01:46.700 --> 01:55.700
I'll quickly set up my computed property for value, I'll name it value like this

01:55.920 --> 01:58.790
and here I simply want to return this store

02:01.990 --> 02:04.300
getters value,

02:04.300 --> 02:09.200
that's the name of the getter I created for that.

02:09.380 --> 02:17.340
And if I set value equal to value here and we see this in the application, we see it works,

02:17.350 --> 02:21.930
we see 0 here but what's the issue we got here?

02:22.450 --> 02:27.940
Well let's say we actually want to not only display the value but set it,

02:28.090 --> 02:35.260
so v-model value will not work because the value is a computed property, not a normal property, computed

02:35.290 --> 02:37.070
only returns us a value,

02:37.240 --> 02:45.370
so if we do this and update it and write 10 here, our state will not be affected by this, we can see this

02:45.670 --> 02:51.500
by simply adding a paragraph down there where I output value like this.

02:51.520 --> 02:58.190
If I do that, you'll see it doesn't change if I type up here because the state in our store

02:58.190 --> 03:03.100
isn't touched because our computed value, the value here is only a getter,

03:03.110 --> 03:06.380
we're not able to set it with two-way binding like we want to do here.

03:06.440 --> 03:07.890
How can we fix this?

03:08.210 --> 03:10.900
Well here's one way how we could fix it,

03:10.970 --> 03:18.300
this is we set up a method and in this method which I'll call update value for example,

03:18.430 --> 03:29.140
all I want to do is get my event here of course and then simply call this store dispatch update value

03:29.740 --> 03:33.670
and pass event target value as an argument,

03:33.940 --> 03:41.740
so the value of this input field as an argument. With that in place, I can go up to my input and change

03:41.740 --> 03:48.580
this back to just value for now because we're not two-way binding, instead add the input event here and

03:48.580 --> 03:51.530
execute update value on it,

03:51.700 --> 03:57.580
so this newly created method. With that if I reload this and I enter something here, you see the state

03:57.580 --> 03:59.120
gets updated as well,

03:59.140 --> 04:00.520
so now it's working

04:00.670 --> 04:07.150
but the problem is well it's our custom two-way binding we set up here, what if we really wanted

04:07.150 --> 04:10.920
to use the shorter way of using v-model value,

04:10.990 --> 04:13.010
that would be much nicer, wouldn't it?

04:13.450 --> 04:19.140
Well we can do it by ignoring this method and instead changing our computed property,

04:19.330 --> 04:26.530
something I haven't really shown until now is that you can for computed properties set up a getter and

04:26.530 --> 04:27.690
a setter.

04:27.820 --> 04:29.960
I didn't show it because you rarely need that,

04:29.980 --> 04:32.280
most of the time you only want to get the data,

04:32.290 --> 04:34.460
that's what a computed property is there for

04:34.750 --> 04:41.290
but you can turn your computed property into an object where we then have a get and a set method.

04:41.800 --> 04:47.200
The getter was of course responsible for getting the value, so that is what your computed property would always

04:47.200 --> 04:48.000
be like

04:48.250 --> 04:52.450
and then the setter is this new thing which you rarely use,

04:52.450 --> 05:01.950
so here in the setter, you get the value and then you can simply call this store dispatch update value

05:01.990 --> 05:04.640
here and pass the value.

05:05.080 --> 05:10.780
So again this is something I didn't show before because using a setter in a computed property is something

05:10.780 --> 05:14.650
you rarely need because you rarely want to set something there, computed

05:14.650 --> 05:19.290
in the end means it depends on something else and gets recalculated

05:19.390 --> 05:25.580
and this is a very rare exception where we want to do something whenever we try to set the value.

05:25.690 --> 05:30.520
So if we do that and reload this, you now it still works,

05:30.580 --> 05:37.870
now by using v-model up here and our computed property which now actually is an object with a getter

05:38.020 --> 05:41.310
and a setter. Again use with caution,

05:41.310 --> 05:45.260
this is one of the very rare places where you want to use a getter and a setter

05:45.280 --> 05:51.760
but here it's perfectly fine because this now allows us to use v-model with our property which is

05:51.790 --> 05:54.440
bound to the state of our application.
