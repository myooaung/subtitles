WEBVTT

00:02.070 --> 00:07.990
The other thing I wanted to touch on are these selectors here, how should you name them?

00:08.040 --> 00:10.300
Should you have a dash in there and

00:10.320 --> 00:14.820
could you use app header, so a case sensitive name?

00:14.850 --> 00:21.720
The answer is yes, you can use case sensitive selectors because since we're using the single file component,

00:21.960 --> 00:28.400
we don't have this dom restriction that the dom is case insensitive.

00:28.410 --> 00:35.160
If you were to use another template like with this template property where you pass the string or by

00:35.160 --> 00:41.460
inferring the template with el as you learned it earlier in the course, you wouldn't have these restrictions because

00:41.490 --> 00:47.880
there, we use the native dom as our template and when doing so, we have to respect the limitations of

00:47.880 --> 00:52.080
the dom and not knowing about cases is one such limitation.

00:52.320 --> 00:55.140
Here we are using a single file template or component

00:55.140 --> 01:01.510
in this case and therefore it is getting compiled to javascript before it runs in the browser anyways.

01:01.650 --> 01:10.320
Hence we can use case sensitive selectors because javascript is case sensitive and our template here

01:10.320 --> 01:15.130
will be stored as a string kind of and therefore, this is not a problem.

01:15.390 --> 01:19.110
So we could name this app header if we don't use a dash of course,

01:19.110 --> 01:24.650
we could also remove the quotation marks and you will now see that if I change this to app header

01:24.660 --> 01:32.220
up here too and I hit save, my server is still running and well we update this, it still works, we still

01:32.220 --> 01:34.070
see the header.

01:34.080 --> 01:41.700
The interesting thing is if I change this back to app header with a dash and I still have app header capital

01:41.700 --> 01:45.510
case down there, you will see it still runs

01:45.510 --> 01:49.350
that is because vuejs will automatically give us access to the

01:49.500 --> 01:52.620
well hyphenated version of our selector here,

01:52.710 --> 01:58.560
so by splitting it when we have such a capital case and giving us access to the same selector with a

01:58.560 --> 01:59.760
dash in between.

01:59.820 --> 02:04.440
But there is no reason to use that, if you want to have your selectors like this,

02:04.440 --> 02:06.600
that's perfectly fine though.

02:06.630 --> 02:14.310
It's pretty common to use a set up where you have dashes instead because in the end, that resembles the

02:14.310 --> 02:20.220
normal html tags where you also have dashes and which of course are not case sensitive because the

02:20.220 --> 02:21.210
dom isn't,

02:21.480 --> 02:24.710
so here this is the classical set up you see

02:24.780 --> 02:31.500
but I wanted to make you aware that you can use the other set up. And what you can always do is you can

02:31.500 --> 02:40.800
simply rely on vuejs giving you this hyphenated version of the selector, like we saw before with

02:40.810 --> 02:48.310
app header in camel case down there but using a dash in between up here. This is what vuejs does

02:48.310 --> 02:49.720
automatically for you

02:49.720 --> 02:56.110
and with that, you are able to maybe use this more Javascript like style with camel case, property names

02:56.200 --> 03:02.800
in your javascript code while still using the dom style of having a dash in between in your template,

03:03.010 --> 03:05.040
so that would be another option.

03:05.200 --> 03:14.170
As a side note, with ES6 you also got the option to not have a property, not not have a value here but

03:14.230 --> 03:16.580
only specify servers here

03:16.600 --> 03:23.610
for example. What this will do is pick your servers variable or the object we're importing up here

03:23.950 --> 03:29.250
and it will behind the scenes automatically create a key value pair where both is servers,

03:29.290 --> 03:31.350
so this is what is done behind the scenes,

03:31.360 --> 03:32.510
that's not vuejs,

03:32.590 --> 03:39.310
this is ES6 which again we can use because it gets transpiled to ES5 in this workflow. So we could

03:39.310 --> 03:40.740
use this shortcut,

03:40.900 --> 03:46.250
then of course we would need to adjust our selector here and we can use servers with a lower case s

03:46.270 --> 03:48.570
to let vuejs again do the

03:48.580 --> 03:49.040
adjustment

03:49.060 --> 03:52.400
behind the scenes and you see it still works

03:52.480 --> 03:58.900
but now with this different selector, we'll use the shortcut of using the name of the property.

03:58.930 --> 04:06.580
This of course has the disadvantage that we don't have app dash something or app something but only

04:06.580 --> 04:12.590
servers which might not be a unique selector but I wanted to show you this option too.

04:12.600 --> 04:19.630
Again the classic thing or the normal thing you do is you use these selectors like this with a dash

04:19.630 --> 04:26.650
in between or like this and let vuejs enter the dash and always use the dash version of a selector

04:26.710 --> 04:28.750
in the template but you don't have to.
