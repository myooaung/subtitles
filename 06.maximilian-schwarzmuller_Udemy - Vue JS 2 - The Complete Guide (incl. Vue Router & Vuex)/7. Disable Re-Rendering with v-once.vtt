WEBVTT

00:01.880 --> 00:06.850
Let's enhance this little application a little more. Let's say we have a title,

00:06.870 --> 00:10.370
h1 title and here I will output title,

00:10.420 --> 00:15.970
remember this is just hello world. In say hello I will obviously do the same

00:15.970 --> 00:25.300
even though I call a function, now in this function, let's say I will set this title equal to just hello

00:25.480 --> 00:28.560
like this. If I now hit control,

00:28.600 --> 00:35.610
well we see hello twice obviously because when we execute say hello, we're overwriting the value of title,

00:35.620 --> 00:37.400
we're setting it to just hello,

00:37.510 --> 00:40.410
so we're outputting hello in both places.

00:40.420 --> 00:47.980
Now what if in the title, we wanted to stick to the first initial value title had and don't want to change

00:47.980 --> 00:53.120
this if it changes later in our code like it does here? We can do this,

00:53.130 --> 01:00.430
there is another directive vuejs ships with which we can attach to an html element which holds an interpolation

01:00.430 --> 01:08.890
like this one which is called v-once. By adding this to an element, all the content inside of this element

01:09.160 --> 01:16.090
will only be rendered once, it will not be updated if it changes later on, like here where we change it

01:16.180 --> 01:18.450
in a later place.

01:18.490 --> 01:21.700
If I now hit control enter you see hello world

01:21.790 --> 01:28.450
because it keeps the initial value, it doesn't adjust once it is overridden. You may have examples

01:28.450 --> 01:33.910
in your application where you want this behavior and v-once then makes it very easy to stick to the initial

01:33.910 --> 01:39.080
value and not use any other values this property might take at a later point of time.
