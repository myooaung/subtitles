WEBVTT

00:02.240 --> 00:03.790
So we covered a lot of the basics

00:03.790 --> 00:08.560
until now, we learned how we can interact with the template of vuejs, how we can output data there,

00:08.740 --> 00:14.410
how we can listen to events and we also had a look at how we could conditionally render content with

00:14.450 --> 00:22.780
v-if or v-show and how we can render a list. I'd say before we dive into the depths of vuejs and learn more

00:22.780 --> 00:28.960
about what this vuejs instance we're using, let's take the knowledge we gathered until now and let's build

00:28.990 --> 00:34.880
our first course project so that we could actually see what we can already do with that knowledge.

00:34.930 --> 00:37.100
We're going to build this little game here,

00:37.270 --> 00:39.610
we fight against a monster here

00:39.730 --> 00:45.370
and once I click on start new game we got the ability to attack, to make a special attack, to heal or

00:45.370 --> 00:46.570
to give up.

00:46.810 --> 00:53.020
Well as you can see if I attack, I do a random amount of damage logged down there and I also take some

00:53.020 --> 00:56.120
damage as the monster has a chance to attack me.

00:56.170 --> 01:01.850
I can also launch a special attack and if I take too much damage of course, I can heal up here,

01:01.870 --> 01:08.380
you can see that the monster still attacks me but overall, I should gain some health at least. And if I

01:08.380 --> 01:10.820
get a feeling this all is not ending well,

01:10.840 --> 01:14.230
well I can always give up and therefore start a new game

01:14.350 --> 01:21.070
but now let's quickly defeat this monster here and yeah, we won and can either now start a new game again

01:21.190 --> 01:26.110
or just cancel and either start a new game here or leave.

01:26.140 --> 01:32.890
This is the very basic application, this little game and as you might already be able to tell, it uses

01:32.890 --> 01:35.170
a lot of the things we practiced.

01:35.170 --> 01:40.780
It clearly listens to events, it conditionally shows you different buttons and this log which is clearly

01:40.780 --> 01:42.070
a list getting rendered

01:42.080 --> 01:49.400
here, we have our health bars here which are kind of managed by the application and much more.

01:49.630 --> 01:52.670
So this is what we're going to build, now

01:52.690 --> 01:54.580
the challenge for you is

01:54.790 --> 01:56.720
try building this on your own,

01:56.750 --> 02:04.160
features used are of course v-if for conditionally showing things, v-for this list, we're probably

02:04.150 --> 02:08.260
somehow setting the styles on the monster and our health bar

02:08.500 --> 02:15.310
and we need some methods to be executed whenever we click one of the buttons. Again when we click attack

02:15.310 --> 02:17.410
or any button besides give up,

02:17.410 --> 02:23.830
we always have two rounds getting executed, our round where we do some damage or heal ourselves and

02:23.830 --> 02:27.270
a round for the monster where it is able to damage us.

02:27.280 --> 02:28.480
This is the challenge,

02:28.480 --> 02:35.290
try building this game and thereafter, we'll do this together and you can compare your solution to mine.

02:35.460 --> 02:36.050
Challenge

02:36.070 --> 02:44.590
mine obviously and see how I solve this. The styles and the general html code for this project can be found

02:44.590 --> 02:50.380
attached to this video you so that you don't have to worry about setting this interface up but can really

02:50.380 --> 02:52.190
focus on the javascript code.
