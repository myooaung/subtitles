WEBVTT

00:01.710 --> 00:04.560
What you also want to have a look at the response?

00:04.680 --> 00:10.080
Well I'm going to use the same interceptor here, I could push a new one though but generally you can have a look

00:10.080 --> 00:15.330
at the response by accessing your next function here and passing argument to it.

00:15.360 --> 00:20.300
This argument has is also a function where we will get the response as an argument,

00:20.310 --> 00:25.740
this is of course automatically provided by vue resource and then we can use the response here.

00:25.740 --> 00:30.420
For example we could change the way response.json works, 

00:30.420 --> 00:34.040
let's make our app work again. Right now in fetch data,

00:34.050 --> 00:36.400
we're all looping through an array here

00:36.540 --> 00:40.180
and that doesn't work anymore because we don't get back an array,

00:40.200 --> 00:44.690
instead we get back an object here where we simply have email and username,

00:44.700 --> 00:48.230
so no need to loop through all the keys anymore,

00:48.240 --> 00:55.230
there are no multiple keys, there aren't any cryptic keys anymore. To make this code work again though

00:55.230 --> 01:00.830
and that is of course a bit of a constructed example here but it shows how to set up such interceptors

01:00.850 --> 01:01.730
well,

01:02.010 --> 01:07.620
so here we could override the response.json method.

01:07.660 --> 01:11.680
Now be careful about this of course because this will affect all your requests,

01:11.820 --> 01:18.330
so you may not really want to do this in your production app but in a case where you do need to change

01:18.330 --> 01:20.120
certain parts about your response,

01:20.130 --> 01:27.510
this is how you can do it. So you can override the built in json method which we use here to extract

01:27.510 --> 01:28.350
the data

01:28.650 --> 01:34.160
and we need to extract some kind of object again where we can loop through all the keys.

01:34.260 --> 01:40.200
So I will basically say this is a function, an ES6 function it is here

01:40.680 --> 01:46.680
and all I want to do is I want to return a new object where I now have any key, let's name it messages

01:46.680 --> 01:53.340
so that I have some keys or at least one key here to loop through which is equal to my response body,

01:53.460 --> 01:54.770
like this.

01:54.780 --> 02:00.480
This now allows me to extract my response body, something response json would have done normally

02:00.810 --> 02:05.240
but store it in a separate object which has an extra key for that,

02:05.310 --> 02:10.290
so that looping through all the keys and then extracting the user as a value for that key will work

02:10.290 --> 02:11.420
again.

02:11.430 --> 02:17.910
So if we have a look at this and now hit get data again, you now see it works again because now I adjusted

02:17.930 --> 02:19.900
the response.json method

02:20.040 --> 02:25.680
and this shows you how you can use interceptors to change both your request or your response.

02:25.680 --> 02:27.090
Of course you don't have to change it,

02:27.090 --> 02:29.770
of course you may only want to change some headers for example,

02:29.790 --> 02:32.310
maybe you only want to print or log it,

02:32.370 --> 02:33.540
that's totally up to you,

02:33.540 --> 02:40.350
this is how you can use interceptors on each request and response. And be aware as we do it here,

02:40.410 --> 02:45.630
you can always create your own filters with if statements to make sure you check if it's a certain type

02:45.630 --> 02:48.870
of response or a certain type of request and so on.
