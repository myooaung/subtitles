WEBVTT

00:03.050 --> 00:07.250
So in the last lecture we used a post request to store data.

00:07.250 --> 00:09.630
Now obviously we want to get back data,

00:09.830 --> 00:11.280
so let's go to the dashboard.vue

00:11.300 --> 00:18.890
file for example and let's say we want to load data when we visit this file.

00:19.040 --> 00:25.610
So first of all, I'll add a script section and there, I'll export a default javascript object, our vue

00:25.610 --> 00:26.840
component

00:26.840 --> 00:31.320
and as I said I want to load something when we load this page.

00:31.460 --> 00:36.510
So I'll simply add the created method which is a lifecycle hook of vuejs

00:36.590 --> 00:40.290
and now here I want to reach out to the web.

00:40.700 --> 00:45.910
So for that, I'll simply import axios from axios here

00:45.930 --> 00:51.170
too and that will be the same instance of axios as the sign up files

00:51.170 --> 00:55.950
so we're not somehow increasing our bundles size by importing it here too.

00:56.390 --> 01:05.930
And then in the created method, I can simply run axios get and now get requires at least one argument,

01:06.350 --> 01:08.740
that is the URL of course,

01:08.750 --> 01:14.940
so let's copy the URL from the post request, let's enter it here.

01:15.200 --> 01:18.530
You could pass a second argument where you configure this request

01:18.710 --> 01:20.450
but for now let's simply chain

01:20.450 --> 01:21.660
then again because

01:21.680 --> 01:27.020
get also returns a promise and in then, we will also get back the response.

01:27.140 --> 01:33.680
So here I will also console log the response and that will add a catch block where we could catch

01:33.680 --> 01:35.860
and handle any incoming errors.

01:36.170 --> 01:43.010
And of course you could now store the response in some field where you output it on the vue,

01:43.040 --> 01:46.870
now that is something I will do but for now let me just do it like this.

01:46.920 --> 01:49.530
If we now save this file,

01:49.590 --> 01:56.100
let's move over, clear the console and move over to the dashboard and you see here, after a fraction of

01:56.100 --> 02:03.440
a second because firebase is really quick, here we also see such a response object as axios gives it

02:03.450 --> 02:06.060
to us. Status code 200,

02:06.060 --> 02:10.590
couple of pieces of information about headers and request and then very interesting for us,

02:10.740 --> 02:16.860
the data object which is a javascript object where the key is this cryptic string and the value is the

02:16.860 --> 02:20.430
object we stored there with hobbies and so on.

02:20.430 --> 02:26.070
So this is how easy we can send a get request, as you see it really doesn't take that much, it's super

02:26.080 --> 02:34.470
straightforward and it gives you a nice and easy to use way, an alternative to sending http requests from

02:34.580 --> 02:35.780
vue apps.

02:36.060 --> 02:42.930
Now let's actually see how we can work with the data we get back here before we then dive into the

02:42.930 --> 02:50.460
little bit more advanced axios features like configuring requests, intercepting requests and so on.
