WEBVTT

00:02.070 --> 00:08.440
I get the same setup as before, my three boxes and also already the input field which is bound to this color

00:08.440 --> 00:14.590
property with two way data binding. Now I showed you how to use classes, css classes, how to attach

00:14.590 --> 00:20.560
and detach them and how to select them both either by having key value pairs with name and condition

00:20.830 --> 00:23.600
or just the name of the class. Here

00:23.650 --> 00:28.780
I want to show you how you can directly interact with the styles attached to an element so you don't

00:28.780 --> 00:31.190
have to use classes necessarily,

00:31.390 --> 00:38.120
let's say you only want to change the style and let's say you want to change the color, well then it is

00:38.120 --> 00:45.940
as easy as binding to style and then as a javascript object, the key is the style you want to bind

00:45.940 --> 00:47.840
to, background color.

00:47.890 --> 00:49.330
Now note, this will not work,

00:49.330 --> 00:55.660
you have to enclose it either in single quotation marks because the dash is not a valid character in a

00:55.660 --> 01:03.640
property name or remove the single quotation marks, remove the dash and use camel case syntax, background

01:03.640 --> 01:05.190
Color, like this.

01:05.410 --> 01:10.090
With that, the value then is color, this property.

01:10.090 --> 01:17.310
If I now save this, I can change this to green and you see I can now set it directly like this

01:17.320 --> 01:21.870
and of course again, the source of this value doesn't matter,

01:21.880 --> 01:24.720
I use an input here because it's easiest for us to add it

01:24.880 --> 01:30.860
but it could also be the end result of an asynchronous task, of a calculation, whatever. As before,

01:30.910 --> 01:33.910
you don't have to pass the object like this,

01:33.910 --> 01:36.300
you could also set up your style object here.

01:36.460 --> 01:43.690
So again since I want to use this color, I'll set up a computed property and I'll name it my style which

01:43.690 --> 01:50.290
will be a function as all computed properties are, where I return an object since I expect an object

01:50.560 --> 02:00.250
in my style binding. Here I will set backgroundColor, camel case important, bind this to this color and

02:00.280 --> 02:03.580
I also want to be able to input the width, let's say,

02:03.790 --> 02:09.790
so here I'll also bind to width, let's add this new property here,

02:09.870 --> 02:21.520
set it to 100 initially and then here, I will easily set this by setting the width to

02:21.700 --> 02:30.580
and now this width plus pixels, to convert it into a pixel value which is needed for the style. With that

02:30.610 --> 02:39.730
I can now refer to this new object here to set style equal to my style to this computed property and if

02:39.730 --> 02:48.550
I save this, you see I can now change the width of this second block as well as the color as I set it

02:48.550 --> 02:55.530
up as a computed property here just because it's depending on other properties and I set it as a new object

02:55.570 --> 02:59.270
which allows me to directly bind to this object here.

02:59.620 --> 03:05.920
So that is really the same as it work with classes but here focused on individual styles

03:05.920 --> 03:11.680
and I think it's easy to imagine how easy you could create a progress bar by dynamically adjusting the

03:11.680 --> 03:13.640
width as we do here.
