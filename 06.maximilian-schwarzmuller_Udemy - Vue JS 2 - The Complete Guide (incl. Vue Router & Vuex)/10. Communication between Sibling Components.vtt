WEBVTT

00:01.920 --> 00:06.990
So we pass data from parent to child and the other way around and we saw two different ways of doing

00:06.990 --> 00:10.730
that, with a custom event or using a callback.

00:11.040 --> 00:14.690
Now I want to get some data from one child to another one

00:14.970 --> 00:16.770
and how can we do this?

00:16.800 --> 00:23.850
We got two or depending on how you counted, three different ways of doing so, let's start with method number

00:23.850 --> 00:24.820
one.

00:25.230 --> 00:35.520
Let's say in the user added component here, I will have a new button which allows me to edit the age, here

00:35.520 --> 00:44.450
I will have a new click listener where I say edit age and I need to add an object here where I say

00:44.700 --> 00:54.400
or where I have some methods, one of them being edit age where I want to set some age to let's say 30

00:54.470 --> 00:57.460
but I don't have an age object there yet.

00:57.710 --> 01:03.800
So I will store that in the parent component in the user component, here in my data object and I'll also

01:03.840 --> 01:07.170
have an age which is 27 by default.

01:07.260 --> 01:17.210
I want to pass this as a prop, let's name it user age and refer to the age in my data property to the user

01:17.270 --> 01:18.520
added component,

01:18.680 --> 01:20.560
this is how we learned it before

01:20.930 --> 01:26.150
and there, I therefore now need to set up my props and I'll keep it simple and stick to an array,

01:26.150 --> 01:30.830
don't want to set up validation here and simply name it user age

01:30.830 --> 01:34.810
since this is the name I'm using in my parent component here for the prop.

01:34.880 --> 01:39.540
Now that gives me the age in the user edit component, I can change it there

01:39.560 --> 01:41.900
and with that, it will stay there.

01:41.900 --> 01:45.880
Now let's say in user detail, I also want to output the age,

01:46.040 --> 01:54.100
so there I also pass user age referring to this age in the data object again and in user detail,

01:54.110 --> 01:59.620
I therefore add it here, user age which will be a number actually,

01:59.720 --> 02:09.960
so let's set it of type number and in there, I now want to get the update from the user edit component.

02:09.960 --> 02:19.250
Now let's see this in action by adding a new field, user age and outputting user age, this prop I'm getting

02:19.430 --> 02:21.230
there. If this reloads,

02:21.380 --> 02:29.060
we see 27 here and let's maybe also output it in the user edit component so that we can see the

02:29.300 --> 02:37.090
current value we have there, user age is user age here too, the prop we're getting again

02:37.430 --> 02:40.390
and of course I also need to set this to user age

02:40.390 --> 02:42.740
therefore since this is the prop name.

02:42.770 --> 02:47.870
So now if I click edit age and well maybe reload first,

02:47.970 --> 02:54.940
so now if I click edit age here, it changes to 30 in the user edit component but not in the user detail component here.

02:54.970 --> 02:58.050
There it is still 27

02:58.360 --> 03:03.220
and the reason for this of course is that the change only happened in the user edit component, we're

03:03.250 --> 03:05.490
not passing it to our parent component

03:05.650 --> 03:08.570
and we don't want to get to the parent component,

03:08.590 --> 03:12.520
we only want to get it to let's say the user detail component.

03:12.550 --> 03:17.310
However as I explained on the slides, this direct connection is not possible,

03:17.350 --> 03:21.250
we have to take route over the parent component.

03:21.520 --> 03:28.860
So one way to change it and that is the first way of doing so would be to set up a custom event we emit,

03:28.870 --> 03:40.390
so here when we edit the age, I also called emit and pass an event named age was edited and passing

03:40.390 --> 03:43.450
this user age as an argument here

03:43.690 --> 03:54.070
and then on the user component, I can on my user edit component, I can set up a listener with add age was

03:54.190 --> 03:54.970
edited,

03:55.100 --> 03:59.360
this is the name I chose here for the event

03:59.680 --> 04:05.260
and in the code I execute, I can simply say age equals $event referring to the data which

04:05.260 --> 04:09.640
was passed with the event which was the updated age.

04:09.670 --> 04:16.480
Now with this in place, if I save this and go back to the application and reload it, if I now click on

04:16.510 --> 04:22.870
edit age here, watch the age in the user detail component, it was set to 30 now too because now we

04:22.870 --> 04:24.320
take the following route.

04:24.490 --> 04:31.600
We have the age set up in the user component and we pass it as a prop to both the user detail and user

04:31.660 --> 04:37.750
edit component, thereafter we change it in the user edit component and we emit a custom

04:37.760 --> 04:43.570
event back to the user component. There we with that event, we listened on this event or we listened

04:43.570 --> 04:50.490
to this event and once the event is executed or happens, we update the age in the user component

04:50.560 --> 04:57.770
hence passing the new value down as a property to all components which use this property again,

04:57.820 --> 04:59.510
therefore also updating it

04:59.590 --> 05:02.180
in the user detailed component.

05:02.200 --> 05:07.100
The second approach would have been to use this callback solution,

05:07.170 --> 05:08.850
now I'm not going to show it here,

05:08.920 --> 05:14.560
we would have basically set up a method in the user component, in the parent component like we did with

05:14.560 --> 05:22.080
reset name then pass a pointer to that function like we did for the user detail component to the user

05:22.120 --> 05:28.330
edit component as a property, as a prop and then execute it in the user edit component.

05:28.330 --> 05:33.030
So basically the same approach we used for the user name and reset name here,

05:33.130 --> 05:35.810
I'm not going to show this because it's identical.

05:35.860 --> 05:42.340
The third alternative however is brand new and this might be the solution you're looking for because

05:42.340 --> 05:49.230
building these from child to parent to child chains can become very complicated quickly.

05:49.270 --> 05:55.150
Imagine you got a child component in a child component in a parent component and you want to get to

05:55.210 --> 05:58.120
another child component in another child component.

05:58.270 --> 06:04.200
So you have the child components as siblings and in these child components, have another child component,

06:04.690 --> 06:09.040
then you would have to go from child to child to parent to child to child.

06:09.100 --> 06:10.730
No that's no fun,

06:10.960 --> 06:14.300
instead we can use an event bus for this.

06:14.310 --> 06:21.300
So kind of an object serving as a place to listen to events and passing data on.

06:21.370 --> 06:22.770
Let's see how that would work.
