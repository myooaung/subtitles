1
1

00:00:00,000  -->  00:00:02,490
(techno music)
2

2

00:00:02,490  -->  00:00:05,716 line:15% 
(typewriter keys being struck)
3

3

00:00:05,716  -->  00:00:08,720 line:15% 
[Instructor] All right, so to end off this section
4

4

00:00:08,720  -->  00:00:10,720
I'm just gonna have you practise
5

5

00:00:10,720  -->  00:00:12,170
inserting and deleting notes
6

6

00:00:12,170  -->  00:00:13,360
from a binary search tree.
7

7

00:00:13,360  -->  00:00:15,670
And we're just gonna go through this using slides,
8

8

00:00:15,670  -->  00:00:18,380
because that's what you really have to understand.
9

9

00:00:18,380  -->  00:00:21,110
We've already coded insert and delete
10

10

00:00:21,110  -->  00:00:24,500
and get and getting the minimum value
11

11

00:00:24,500  -->  00:00:28,020
and getting the maximum value and traversing the tree.
12

12

00:00:28,020  -->  00:00:30,100
I thought it would be good just to practise
13

13

00:00:30,100  -->  00:00:31,700
inserting and deleting values.
14

14

00:00:31,700  -->  00:00:33,630
And so we're gonna start with this tree
15

15

00:00:33,630  -->  00:00:37,070
and what I suggest you do is just make a copy of this
16

16

00:00:37,070  -->  00:00:40,190
using pen and paper, and then we're gonna practise
17

17

00:00:40,190  -->  00:00:42,160
inserting and deleting nodes.
18

18

00:00:42,160  -->  00:00:44,580
So, we're gonna go through a series of insertions
19

19

00:00:44,580  -->  00:00:47,970
and then we'll go through a series of deletions.
20

20

00:00:47,970  -->  00:00:49,310
So the first thing I wanna do
21

21

00:00:49,310  -->  00:00:53,360
is have you insert node 28 into this tree.
22

22

00:00:53,360  -->  00:00:56,160
So, we have the value 28 and we want to insert it
23

23

00:00:56,160  -->  00:00:58,150
into this binary search tree.
24

24

00:00:58,150  -->  00:01:00,240
And so, go ahead and do that.
25

25

00:01:00,240  -->  00:01:03,170
And pencil in, and I say pencil
26

26

00:01:03,170  -->  00:01:04,810
'cuz you're gonna be deleting nodes later,
27

27

00:01:04,810  -->  00:01:08,560
so, use pen or pencil, whatever's gonna work best for you.
28

28

00:01:08,560  -->  00:01:12,770
Go ahead and pencil in node 28
29

29

00:01:12,770  -->  00:01:15,800
where it should belong in this tree.
30

30

00:01:15,800  -->  00:01:18,300
So pause the video now and do that.
31

31

00:01:18,300  -->  00:01:21,433
Restart the video when you've inserted node 28.
32

32

00:01:26,360  -->  00:01:28,530
Okay, I hope you've inserted the node.
33

33

00:01:28,530  -->  00:01:32,660
So we come in and 28 is greater than 25
34

34

00:01:32,660  -->  00:01:34,220
so we're gonna go to the right.
35

35

00:01:34,220  -->  00:01:38,200
28 is greater than 27, so we're gonna go to the right.
36

36

00:01:38,200  -->  00:01:41,660
28 is less than 30, so we're gonna go to the left.
37

37

00:01:41,660  -->  00:01:46,310
And 28 is less than 29, so we're gonna go to the left.
38

38

00:01:46,310  -->  00:01:48,730
And so 28 should go here.
39

39

00:01:48,730  -->  00:01:50,800
And so, this is what our tree looks like
40

40

00:01:50,800  -->  00:01:53,100
after we've inserted node 28.
41

41

00:01:53,100  -->  00:01:56,210
Remember, for a binary search tree we go to the left,
42

42

00:01:56,210  -->  00:01:59,420
if the value is smaller than the node we're checking.
43

43

00:01:59,420  -->  00:02:01,990
And we go to the right if the value is larger
44

44

00:02:01,990  -->  00:02:03,440
than the node we're checking.
45

45

00:02:03,440  -->  00:02:06,190
All right, so we're gonna keep 28 in our tree,
46

46

00:02:06,190  -->  00:02:09,500
and now I want you to insert the value 16.
47

47

00:02:09,500  -->  00:02:11,803
So pause the video and give that a try.
48

48

00:02:16,980  -->  00:02:18,930
Okay, I hope you were able to do that one.
49

49

00:02:18,930  -->  00:02:20,190
So we're gonna come in.
50

50

00:02:20,190  -->  00:02:24,490
16 is less than 25 so we're going to go to the left.
51

51

00:02:24,490  -->  00:02:28,980
16 is less than 20, so we're going to go to the left.
52

52

00:02:28,980  -->  00:02:33,130
16 is greater than 15 so we're gonna go to the right.
53

53

00:02:33,130  -->  00:02:37,290
And 16 is less than 17, so we're going to go to the left.
54

54

00:02:37,290  -->  00:02:42,290
And so 16 should be inserted as 17's left child.
55

55

00:02:42,630  -->  00:02:44,940
And so, that's where 16 belongs.
56

56

00:02:44,940  -->  00:02:47,230
All right, so 16's still in our tree,
57

57

00:02:47,230  -->  00:02:48,820
except I forgot to colour it white.
58

58

00:02:48,820  -->  00:02:50,680
So pretend that's white now.
59

59

00:02:50,680  -->  00:02:54,140
And we're gonna insert now the value 23.
60

60

00:02:54,140  -->  00:02:56,583
So pause the video and give that a try.
61

61

00:03:02,170  -->  00:03:04,030
All right, so we come in.
62

62

00:03:04,030  -->  00:03:07,830
23 is less than 25, so we go to the left.
63

63

00:03:07,830  -->  00:03:11,410
23 is greater than 20 so we go to the right.
64

64

00:03:11,410  -->  00:03:16,190
And 23 is greater than 22 so we go to right.
65

65

00:03:16,190  -->  00:03:21,130
And so, we're going to insert 23 as the right child of 22.
66

66

00:03:21,130  -->  00:03:22,740
And so, there we go.
67

67

00:03:22,740  -->  00:03:25,430
All right, so let's do 14.
68

68

00:03:25,430  -->  00:03:29,283
Pause the video and insert the value 14 into the tree.
69

69

00:03:34,770  -->  00:03:36,270
All right, so we're gonna come in.
70

70

00:03:36,270  -->  00:03:39,410
14 is less than 25, so we go to the left.
71

71

00:03:39,410  -->  00:03:42,400
14 is less than 20, so we go to the left.
72

72

00:03:42,400  -->  00:03:45,000
14 is less than 15, so we go to the left.
73

73

00:03:45,000  -->  00:03:47,020
So we're gonna insert 14 here.
74

74

00:03:47,020  -->  00:03:48,560
And that shouldn't be a surprise,
75

75

00:03:48,560  -->  00:03:50,930
because 14 is the lowest value.
76

76

00:03:50,930  -->  00:03:53,780
So it's the minimum value, and as we know,
77

77

00:03:53,780  -->  00:03:56,130
to find the minimum value in a binary search tree,
78

78

00:03:56,130  -->  00:03:56,963
you start at the root
79

79

00:03:56,963  -->  00:03:59,200
and you just keep travelling along the left edges
80

80

00:03:59,200  -->  00:04:01,770
until you hit a node that doesn't have a left child.
81

81

00:04:01,770  -->  00:04:04,480
And so, it shouldn't be a surprise that 14,
82

82

00:04:04,480  -->  00:04:05,610
being the minimum value,
83

83

00:04:05,610  -->  00:04:08,830
is gonna be inserted as the left child of 15.
84

84

00:04:08,830  -->  00:04:12,190
And so, there we go, 14 has been inserted.
85

85

00:04:12,190  -->  00:04:14,150
Okay, so our tree's pretty crowded now.
86

86

00:04:14,150  -->  00:04:15,850
So it's time to delete some nodes.
87

87

00:04:15,850  -->  00:04:20,380
So, I want you to delete the node with the value 28.
88

88

00:04:20,380  -->  00:04:22,473
Pause the video and give that a try.
89

89

00:04:27,780  -->  00:04:30,300
Okay, well 28 is a leaf node.
90

90

00:04:30,300  -->  00:04:31,760
That's the easiest case.
91

91

00:04:31,760  -->  00:04:33,690
We just need to knock it off.
92

92

00:04:33,690  -->  00:04:38,340
So basically, we just gnawl out 29's left child.
93

93

00:04:38,340  -->  00:04:39,470
And so, there we go.
94

94

00:04:39,470  -->  00:04:43,940
28 is gone and our tree, otherwise, stays the same.
95

95

00:04:43,940  -->  00:04:47,360
So now, let's delete the value 22.
96

96

00:04:47,360  -->  00:04:50,410
What will the tree look like after 22 has been deleted.
97

97

00:04:50,410  -->  00:04:51,453
Give that a try.
98

98

00:04:57,820  -->  00:05:00,890
Okay, well 22 only has one child.
99

99

00:05:00,890  -->  00:05:03,620
So when we're deleting a node with one child
100

100

00:05:03,620  -->  00:05:06,560
that child basically just replaces the deleted node.
101

101

00:05:06,560  -->  00:05:09,280
So it's gonna become the new right child.
102

102

00:05:09,280  -->  00:05:12,530
23 will become the new right child of 20.
103

103

00:05:12,530  -->  00:05:14,640
And so, this is what the tree is going to look like
104

104

00:05:14,640  -->  00:05:17,040
after we've deleted 22.
105

105

00:05:17,040  -->  00:05:19,510
All right, so now I want you to delete 15
106

106

00:05:19,510  -->  00:05:22,170
and I want you to look down the right subtree
107

107

00:05:22,170  -->  00:05:24,300
for the replacement value.
108

108

00:05:24,300  -->  00:05:27,860
So, delete 15 and find the replacement value
109

109

00:05:27,860  -->  00:05:29,270
in the right subtree.
110

110

00:05:29,270  -->  00:05:31,333
Pause the video and give that a try.
111

111

00:05:37,040  -->  00:05:40,620
Okay, so this time 15 has two children.
112

112

00:05:40,620  -->  00:05:42,930
And so, we need to find a replacement value
113

113

00:05:42,930  -->  00:05:45,390
and, we can do that by looking to the left
114

114

00:05:45,390  -->  00:05:48,480
or the right, but as I said, always be consistent.
115

115

00:05:48,480  -->  00:05:50,270
If you're writing a delete method
116

116

00:05:50,270  -->  00:05:52,570
always go to the left or always go to the right.
117

117

00:05:52,570  -->  00:05:55,250
So, we're going to go to the right.
118

118

00:05:55,250  -->  00:05:58,010
And so, because we're looking at the right subtree,
119

119

00:05:58,010  -->  00:06:02,180
we want to find the smallest value in the right subtree.
120

120

00:06:02,180  -->  00:06:03,620
And we want to do that because
121

121

00:06:03,620  -->  00:06:07,350
then when we move that value up in place of 15,
122

122

00:06:07,350  -->  00:06:09,450
we know that everything remaining behind
123

123

00:06:09,450  -->  00:06:11,950
will still be greater than whatever's here,
124

124

00:06:11,950  -->  00:06:13,490
'cuz we're taking the smallest value.
125

125

00:06:13,490  -->  00:06:15,430
And so we know that that characteristic
126

126

00:06:15,430  -->  00:06:17,770
of a binary search tree will be preserved.
127

127

00:06:17,770  -->  00:06:19,170
And so we're gonna start at 15.
128

128

00:06:19,170  -->  00:06:22,910
We're gonna move to the root of it's right subtree,
129

129

00:06:22,910  -->  00:06:24,280
and then we basically want to find
130

130

00:06:24,280  -->  00:06:26,720
the minimum value in the right subtree.
131

131

00:06:26,720  -->  00:06:28,820
And so we're gonna travel down the left edges
132

132

00:06:28,820  -->  00:06:31,570
until we hit a node that doesn't have a left child.
133

133

00:06:31,570  -->  00:06:33,580
And in this case, it's not gonna take us very long,
134

134

00:06:33,580  -->  00:06:35,100
'cause that would be 16.
135

135

00:06:35,100  -->  00:06:39,270
And so we're going to, replace the value of 15 with 16,
136

136

00:06:39,270  -->  00:06:41,670
and then of course, we need to delete this node.
137

137

00:06:41,670  -->  00:06:43,440
And so, that's what the tree is gonna look like
138

138

00:06:43,440  -->  00:06:44,450
after the deletion.
139

139

00:06:44,450  -->  00:06:47,950
15 is gone, the node 16 here is gone,
140

140

00:06:47,950  -->  00:06:52,950
and the value of where 15 used to be is now 16.
141

141

00:06:53,270  -->  00:06:55,610
Okay, so now I want you to delete 27,
142

142

00:06:55,610  -->  00:06:58,340
and once again, I want you to look for the replacement
143

143

00:06:58,340  -->  00:06:59,880
in the right subtree.
144

144

00:06:59,880  -->  00:07:01,263
So give that a try.
145

145

00:07:07,150  -->  00:07:09,810
Okay, so we're gonna look for the replacement node
146

146

00:07:09,810  -->  00:07:10,740
in the right subtree.
147

147

00:07:10,740  -->  00:07:13,300
So we're gonna start at 27, the node we want to delete.
148

148

00:07:13,300  -->  00:07:15,730
We're gonna move to the right subtree
149

149

00:07:15,730  -->  00:07:17,950
and then, we want to find the minimum value
150

150

00:07:17,950  -->  00:07:19,110
in the right subtree,
151

151

00:07:19,110  -->  00:07:21,790
and that, of course, means travelling down the left edges,
152

152

00:07:21,790  -->  00:07:24,260
until we hit a node that doesn't have a child
153

153

00:07:24,260  -->  00:07:26,230
and we're gonna hit that node very quickly.
154

154

00:07:26,230  -->  00:07:29,270
It's node 29, and so we're gonna move 29
155

155

00:07:29,270  -->  00:07:32,330
up to where 27 is and delete it from here.
156

156

00:07:32,330  -->  00:07:34,760
And so, this is what our tree will look like.
157

157

00:07:34,760  -->  00:07:38,750
Okay, so I've added some new nodes into the tree.
158

158

00:07:38,750  -->  00:07:40,580
And I want you to delete 40,
159

159

00:07:40,580  -->  00:07:43,220
and as usual, look down the right subtree.
160

160

00:07:43,220  -->  00:07:45,953
And so, pause the video and delete 40.
161

161

00:07:53,020  -->  00:07:56,180
All right, so we're gonna look down the right subtree.
162

162

00:07:56,180  -->  00:07:58,090
So we're gonna start at 40
163

163

00:07:58,090  -->  00:07:59,650
and we're gonna move to the root
164

164

00:07:59,650  -->  00:08:02,820
and then we want to find the minimum value
165

165

00:08:02,820  -->  00:08:05,390
and we do that by travelling down the left edges.
166

166

00:08:05,390  -->  00:08:07,880
But, 46 doesn't have any left edges,
167

167

00:08:07,880  -->  00:08:10,930
so this is our minimum value in the right subtree.
168

168

00:08:10,930  -->  00:08:14,040
And so, we want to replace 40 with 46
169

169

00:08:14,040  -->  00:08:18,150
and in this case, we can see that 46 has a right child.
170

170

00:08:18,150  -->  00:08:19,700
And since it's the minimum value
171

171

00:08:19,700  -->  00:08:21,570
it can only have a right child
172

172

00:08:21,570  -->  00:08:25,750
and it's perfectly safe to just drag this entire subtree up.
173

173

00:08:25,750  -->  00:08:28,210
And so, 46 is gonna come up here
174

174

00:08:28,210  -->  00:08:32,320
and it's subtree ia going to come along for the ride.
175

175

00:08:32,320  -->  00:08:34,310
And so, after the deletion,
176

176

00:08:34,310  -->  00:08:39,310
we'll have 46, 66, 60 and 62 and, so basically,
177

177

00:08:39,690  -->  00:08:41,670
we've just taken this entire subtree
178

178

00:08:41,670  -->  00:08:46,560
and replaced 30's right child with this subtee
179

179

00:08:46,560  -->  00:08:51,550
and the new left child of 46 will be 34.
180

180

00:08:51,550  -->  00:08:54,080
And so, this is what our new tree looks like.
181

181

00:08:54,080  -->  00:08:55,740
And, it's still a binary tree.
182

182

00:08:55,740  -->  00:08:58,180
Everything to the left is smaller than 30.
183

183

00:08:58,180  -->  00:09:00,320
Everything to the right is larger than 30.
184

184

00:09:00,320  -->  00:09:04,030
And, everything to the left of 46 is smaller than 46
185

185

00:09:04,030  -->  00:09:06,390
and everything to the right is larger.
186

186

00:09:06,390  -->  00:09:09,480
And so, that's it for practising insertions and deletions.
187

187

00:09:09,480  -->  00:09:11,810 line:15% 
If you understand how to do those,
188

188

00:09:11,810  -->  00:09:15,170 line:15% 
then you understand binary search trees.
189

189

00:09:15,170  -->  00:09:16,823 line:15% 
I'll see you in the next section.
