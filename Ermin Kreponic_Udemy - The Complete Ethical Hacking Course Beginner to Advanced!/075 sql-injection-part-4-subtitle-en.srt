1
00:00:00,010 --> 00:00:03,300
Hello everybody and welcome to this tutorial

2
00:00:03,300 --> 00:00:08,000
Today we're gonna just continue on, as this is a follow-up tutorial

3
00:00:08,000 --> 00:00:09,300
so without further ado

4
00:00:09,300 --> 00:00:14,200
let me just show the modifications that I have made to the SQL map command.

5
00:00:14,200 --> 00:00:15,200
I have it here somewhere.

6
00:00:15,200 --> 00:00:16,300
Yep, there we go

7
00:00:16,300 --> 00:00:20,700
So the address is pretty much the same as it was

8
00:00:20,700 --> 00:00:24,000
except there is this bar thing at the end.

9
00:00:24,000 --> 00:00:26,800
It was in the address of the site.

10
00:00:26,800 --> 00:00:27,600
I've removed it

11
00:00:27,600 --> 00:00:30,000
I have literally no idea why

12
00:00:30,000 --> 00:00:31,600
but it's supposed to be there.

13
00:00:31,600 --> 00:00:33,400
I'm sorry for that.

14
00:00:33,400 --> 00:00:34,839
Anyway, in the cookie section

15
00:00:34,839 --> 00:00:38,400
you will also need to make some modifications.

16
00:00:38,400 --> 00:00:41,400
So this is the cookie that we have previously used.

17
00:00:41,400 --> 00:00:43,600
I have closed and reopened the session since then

18
00:00:43,600 --> 00:00:46,200
so it is likely that this has changed

19
00:00:46,200 --> 00:00:48,500
but you will need to identify the cookie

20
00:00:48,500 --> 00:00:52,500
So it's PHPSESSID

21
00:00:52,500 --> 00:00:55,539
This is a type of cookie that we have picked up

22
00:00:55,539 --> 00:00:57,100
So just type it in

23
00:00:57,100 --> 00:01:01,069
and you can also specify the security level equals

24
00:01:01,069 --> 00:01:03,200
and then you specify it here

25
00:01:03,200 --> 00:01:05,500
It's low

26
00:01:05,500 --> 00:01:12,200
Sorry, let me just change that quickly.

27
00:01:12,200 --> 00:01:13,330
Excellent! There we go

28
00:01:13,330 --> 00:01:15,700
So I've been playing around with it

29
00:01:15,700 --> 00:01:20,200
and I've been trying to see what happens with different sort of settings

30
00:01:20,200 --> 00:01:25,000
and you see it, just to confirm on the website.

31
00:01:25,000 --> 00:01:26,100
It is on high

32
00:01:26,100 --> 00:01:29,370
So you see the setting here is on high.

33
00:01:29,370 --> 00:01:32,800
However, even though the setting is on high here

34
00:01:32,800 --> 00:01:35,500
you can play around with these cookies

35
00:01:35,500 --> 00:01:38,500
and you can do this on any other site pretty much.

36
00:01:38,500 --> 00:01:42,000
You can also modify the cookies to get different sort of results

37
00:01:42,000 --> 00:01:43,700
and if its high here

38
00:01:43,700 --> 00:01:46,000
and even though the site is set to "high"

39
00:01:46,000 --> 00:01:48,800
I can type in here "low"

40
00:01:48,800 --> 00:01:52,800
and it's gonna go as "low", no problems.

41
00:01:52,800 --> 00:01:57,800
Now, as I said, this is not something that you can apply here in here alone

42
00:01:57,800 --> 00:02:00,000
This can be applied pretty much anywhere.

43
00:02:00,000 --> 00:02:01,600
Open up your burp suite

44
00:02:01,600 --> 00:02:03,300
take a look at the cookies section

45
00:02:03,300 --> 00:02:05,600
and see what happens there.

46
00:02:05,600 --> 00:02:09,500
Try logging in and out of the website, wiping your cookies clean

47
00:02:09,500 --> 00:02:12,200
wiping your browser history clean

48
00:02:12,200 --> 00:02:16,800
and see you have five consecutive cookies

49
00:02:16,800 --> 00:02:20,000
and see what happens

50
00:02:20,000 --> 00:02:24,700
or log in through a different browser or log in through a different virtual machine

51
00:02:24,700 --> 00:02:31,000
and just have five, or something like that, consecutive complete cookies

52
00:02:31,000 --> 00:02:33,200
and then see how they change.

53
00:02:33,200 --> 00:02:35,000
If you can figure out their rates of change

54
00:02:35,000 --> 00:02:38,400
and if you can figure out how they're assigned, well...

55
00:02:38,400 --> 00:02:39,700
There you go

56
00:02:39,700 --> 00:02:41,300
You need nothing else pretty much.

57
00:02:41,300 --> 00:02:43,800
However, that is not really likely to happen

58
00:02:43,800 --> 00:02:47,000
unless somebody has some really bad cookie keys

59
00:02:47,000 --> 00:02:50,500
then you can do pretty much whatever you want.

60
00:02:50,500 --> 00:02:54,000
So let's just change this to high again

61
00:02:54,000 --> 00:02:56,000
and I already have it cached

62
00:02:56,000 --> 00:02:59,500
I have done it several times, but if it doesn't work with high

63
00:02:59,500 --> 00:03:03,400
leave the high setting on the website, but modify the cookie to low

64
00:03:03,400 --> 00:03:05,500
and trick it in such a fashion

65
00:03:05,500 --> 00:03:08,000
I have a bad feeling its gonna pull it from cache

66
00:03:08,000 --> 00:03:10,000
and it did pull it from cache.

67
00:03:10,000 --> 00:03:11,500
It doesn't really matter.

68
00:03:11,500 --> 00:03:13,500
Yours is just gonna take a bit longer.

69
00:03:13,500 --> 00:03:16,200
Maybe 30 seconds more or something like that

70
00:03:16,200 --> 00:03:19,040
and you'll probably be prompted with a
question.

71
00:03:19,040 --> 00:03:20,500
Read through the question.

72
00:03:20,500 --> 00:03:24,630
If it finds some vulnerabilities, it will stop

73
00:03:24,630 --> 00:03:27,000
and it will ask you do you want to continue scanning

74
00:03:27,000 --> 00:03:29,300
even though I found vulnerabilities.

75
00:03:29,300 --> 00:03:30,900
You can say either no or yes

76
00:03:30,900 --> 00:03:33,000
Just type in N or Y

77
00:03:33,000 --> 00:03:36,500
For the time being, if you wish to follow exactly through this tutorial

78
00:03:36,500 --> 00:03:37,700
You can just answer with no

79
00:03:37,700 --> 00:03:40,400
because we are focusing on a particular vulnerability

80
00:03:40,400 --> 00:03:42,000
and we're not expanding on it

81
00:03:42,000 --> 00:03:46,000
but on your own, I would strongly recommend that you do keep on scanning

82
00:03:46,000 --> 00:03:51,150
and try out different stuff

83
00:03:51,150 --> 00:03:53,200
and as I said, if it doesn't exactly work with high

84
00:03:53,200 --> 00:03:59,000
just try modifying cookies to low and leave it on the site as high.

85
00:03:59,000 --> 00:04:03,600
Anyway, so we have some information here.

86
00:04:03,600 --> 00:04:05,200
Again, go ahead and read through it

87
00:04:05,200 --> 00:04:06,600
It says "Parameter: id (GET)"

88
00:04:06,600 --> 00:04:09,800
"Type: boolean based blind"

89
00:04:09,800 --> 00:04:12,500
Title it says "Payload"

90
00:04:12,500 --> 00:04:13,500
Excellent

91
00:04:13,500 --> 00:04:17,480
Okay, so this is definitely vulnerable

92
00:04:17,480 --> 00:04:24,000
and all this information tells you a bit about the vulnerability

93
00:04:24,000 --> 00:04:27,000
and it confirms that it is vulnerable

94
00:04:27,000 --> 00:04:30,600
but you still need to actually do something with it.

95
00:04:30,600 --> 00:04:33,500
You still need to try to extract information.

96
00:04:33,500 --> 00:04:35,400
By the way, your log files are here.

97
00:04:35,400 --> 00:04:38,400
You see this file that I am selecting

98
00:04:38,400 --> 00:04:41,900
do not forget to type in the dot here, the one that I'm selecting now.

99
00:04:41,900 --> 00:04:46,500
So just type in "/root/.sqlmap/output/"

100
00:04:46,500 --> 00:04:48,450
and this is my current IP address

101
00:04:48,450 --> 00:04:53,300
but you know, IP addresses vary from one web server to another

102
00:04:53,300 --> 00:04:58,800
so just use the one that is written out here, in order to access the logs.

103
00:04:58,800 --> 00:05:00,400
There will be all sorts of files there

104
00:05:00,400 --> 00:05:04,800
but you can just go ahead and use the file named quite literally log

105
00:05:04,800 --> 00:05:06,800
open it up and see what's written in it.

106
00:05:06,800 --> 00:05:11,000
Basically you will have this here in it, no problems.

107
00:05:11,000 --> 00:05:15,100
Anyway, now that we've established it is vulnerable

108
00:05:15,100 --> 00:05:21,000
I have a few commands here that I have written out for myself

109
00:05:21,000 --> 00:05:24,600
So let's just go heading clear the screen now.

110
00:05:24,600 --> 00:05:26,700
We know that this is vulnerable.

111
00:05:26,700 --> 00:05:29,700
We're going to use pretty much exactly the same syntax.

112
00:05:29,700 --> 00:05:35,500
However, we want to add a few things, so "dbs"

113
00:05:35,500 --> 00:05:37,500
Let's see how this works out

114
00:05:37,500 --> 00:05:52,000
"unable to retrieve the database names"

115
00:05:52,000 --> 00:06:01,000
Okay, let's try tricking the website from high to low

116
00:06:01,000 --> 00:06:03,000
and there we go.

117
00:06:03,000 --> 00:06:04,300
It's right there

118
00:06:04,300 --> 00:06:08,750
So once again, see I've just modified the cookies themselves.

119
00:06:08,750 --> 00:06:11,000
I haven't actually modified the site

120
00:06:11,000 --> 00:06:12,300
If I go back to the site

121
00:06:12,300 --> 00:06:15,700
if I click on security, it is on high.

122
00:06:15,700 --> 00:06:20,000
You see, this has not changed at all.

123
00:06:20,000 --> 00:06:23,200
Let's just go back to the SQL injection (Blind)

124
00:06:23,200 --> 00:06:26,000
Go ahead and open up the terminal

125
00:06:26,000 --> 00:06:29,300
and it says here "available databases"

126
00:06:29,300 --> 00:06:35,800
So we have "dvwa", "information_schema", "mysql", "performance_schema"

127
00:06:35,800 --> 00:06:39,000
and so on and so forth.

128
00:06:39,000 --> 00:06:49,200
So if we just go back to our command, we can type in "D" for database

129
00:06:49,200 --> 00:06:53,300
and now we can retrieve tables from individual databases.

130
00:06:53,300 --> 00:07:00,000
By the way, the DBS just gives you gives you the database basically.

131
00:07:00,000 --> 00:07:03,650
It says "available databases" and ones that you want to access

132
00:07:03,650 --> 00:07:07,000
depending on what sort of information is contained where,

133
00:07:07,000 --> 00:07:10,060
You can't, of course, know

134
00:07:10,060 --> 00:07:12,200
but it doesn't really hurt to just check them out.

135
00:07:12,200 --> 00:07:15,800
Sometimes there is a lot of them and it can be a drag

136
00:07:15,800 --> 00:07:16,800
but it doesn't matter.

137
00:07:16,800 --> 00:07:18,100
As soon as you get to this part

138
00:07:18,100 --> 00:07:20,800
as soon as you manage to go through the first barrier

139
00:07:20,800 --> 00:07:24,800
and actually access through a database remotely

140
00:07:24,800 --> 00:07:27,200
you are there.

141
00:07:27,200 --> 00:07:29,300
Then it's just a matter of time.

142
00:07:29,300 --> 00:07:33,490
Far less time, primarily because you are able to go through those databases

143
00:07:33,490 --> 00:07:37,200
and figure out what is where.

144
00:07:37,200 --> 00:07:40,700
Now if somebody's keeping an active track of what is going on

145
00:07:40,700 --> 00:07:42,800
and if somebody's monitoring this live

146
00:07:42,800 --> 00:07:47,800
they will be able to see that there is a incoming connection

147
00:07:47,800 --> 00:07:51,900
That can be problematic because they can kick you off, but so what?

148
00:07:51,900 --> 00:07:59,200
If you do this at some ridiculous hours of the morning

149
00:07:59,200 --> 00:08:02,000
depending on which time zone the database is

150
00:08:02,000 --> 00:08:03,700
you can actually pull the databases

151
00:08:03,700 --> 00:08:09,800
just download them and then analyze them later.

152
00:08:09,800 --> 00:08:12,200
So you have all the time in the world to analyze them

153
00:08:12,200 --> 00:08:17,000
after you have pulled the information and after you've seen

154
00:08:17,000 --> 00:08:21,000
then you can just sit back, relax, disconnect your machine

155
00:08:21,000 --> 00:08:23,200
and risk-free basically.

156
00:08:23,200 --> 00:08:26,800
Just go through the files and see what is contained therein.

157
00:08:26,800 --> 00:08:29,700
Now I have immediately written here "dvwa"

158
00:08:29,700 --> 00:08:32,500
but let's just go through some of the other ones as well.

159
00:08:32,500 --> 00:08:34,200
Let's see what's in there

160
00:08:34,200 --> 00:08:38,900
"mysql --tables", press ENTER

161
00:08:38,900 --> 00:08:42,000
Is it gonna pull? Yep, there we go

162
00:08:42,000 --> 00:08:47,500
Since we have "user",  we have "columns_priv"

163
00:08:47,500 --> 00:08:49,800
This is for the SQL

164
00:08:49,800 --> 00:08:51,000
Excellent

165
00:08:51,000 --> 00:08:52,540
We got a lot of tables here.

166
00:08:52,540 --> 00:08:56,690
Let's see what we can do with this user.

167
00:08:56,690 --> 00:08:59,000
There is bound to be something there

168
00:08:59,000 --> 00:09:01,360
I mean, you can go ahead and check the others as well.

169
00:09:01,360 --> 00:09:06,280
Usually there's something that says "user password" or something of a kind

170
00:09:06,280 --> 00:09:09,000
Go and check it out

171
00:09:09,000 --> 00:09:14,800
I personally would go through every single thing once I fetch the database

172
00:09:14,800 --> 00:09:18,500
because you never know how somebody is going to name something

173
00:09:18,500 --> 00:09:22,800
what sort of identification are they going to use.

174
00:09:22,800 --> 00:09:25,800
They might as well name this table "user" to...

175
00:09:25,800 --> 00:09:27,400
maybe not this particular one

176
00:09:27,400 --> 00:09:30,000
but on the sites, on the web servers elsewhere

177
00:09:30,000 --> 00:09:35,000
they can put their usernames and passwords in a database

178
00:09:35,000 --> 00:09:37,000
called, I don't know, Santa Claus

179
00:09:37,000 --> 00:09:40,600
under a table called wooden door, pretty much.

180
00:09:40,600 --> 00:09:45,200
So once you have it, invest a little bit more time

181
00:09:45,200 --> 00:09:48,000
and go through these tables, go through all the databases

182
00:09:48,000 --> 00:09:52,000
go through all of their tables, and go through all the contents of the tables.

183
00:09:52,000 --> 00:09:54,700
Just try to see

184
00:09:54,700 --> 00:09:56,600
even though some of it is encrypted, fine

185
00:09:56,600 --> 00:09:58,400
Okay, store it, maybe decrypt it later

186
00:09:58,400 --> 00:10:00,000
but go through all of it.

187
00:10:00,000 --> 00:10:04,200
Have a look at what is within those databases

188
00:10:04,200 --> 00:10:05,380
because as I said

189
00:10:05,380 --> 00:10:08,700
a lot of things can be just named differently and you might skip it

190
00:10:08,700 --> 00:10:10,400
thinking it's nothing.

191
00:10:10,400 --> 00:10:15,000
Okay, so let's change the pace a little bit

192
00:10:15,000 --> 00:10:19,310
Let's say "T" for table

193
00:10:19,310 --> 00:10:22,500
and let's say that I want table user

194
00:10:22,500 --> 00:10:28,300
"user --column", press ENTER

195
00:10:28,300 --> 00:10:29,819
Okay, let's see what do we get you want

196
00:10:29,819 --> 00:10:33,700
"Do you want to use common column existence check?"

197
00:10:33,700 --> 00:10:34,700
Sure, why not?

198
00:10:34,700 --> 00:10:36,500
Let's see what happens.

199
00:10:36,500 --> 00:10:39,500
"Please enter a number of threads?"

200
00:10:39,500 --> 00:10:43,000
This is a pretty small one, but the more threads your enter

201
00:10:43,000 --> 00:10:44,300
the faster it's gonna go

202
00:10:44,300 --> 00:10:48,230
but the risk of detection is higher, I guess.

203
00:10:48,230 --> 00:10:49,200
I don't know

204
00:10:49,200 --> 00:10:52,720
Let's see if you can support four threads on this virtual machine.

205
00:10:52,720 --> 00:10:54,600
Apparently we can

206
00:10:54,600 --> 00:10:57,900
I could have probably told it more, but it doesn't really matter.

207
00:10:57,900 --> 00:11:00,400
This is gonna run for a while

208
00:11:00,400 --> 00:11:05,600
and then we're gonna see the contents of the other table

209
00:11:05,600 --> 00:11:11,200
Basically, we'll see the columns and we'll see what's actually written in them.

210
00:11:11,200 --> 00:11:14,500
Anyway, I will pause the tutorial here.

211
00:11:14,500 --> 00:11:15,900
I will let it finish

212
00:11:15,900 --> 00:11:19,500
and then we'll pick up from where we left off in the follow-up tutorial.

213
00:11:19,500 --> 00:11:24,000
Until then, I bid you all farewell and wish you a lot of luck with this.

