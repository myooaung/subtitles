WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.480
Now if we get rid of this for a second,

00:00:03.480 --> 00:00:05.745
so here we're creating a pattern as you can see.

00:00:05.745 --> 00:00:07.755
And that means that we're going to use extra methods here

00:00:07.755 --> 00:00:10.020
after we've created that variable to be able to either get

00:00:10.020 --> 00:00:12.180
a match your object or Guillaume match objects and

00:00:12.180 --> 00:00:14.850
then do a test with matches on the same line.

00:00:14.850 --> 00:00:18.345
But we don't always have to create this pattern variable, always pattern object.

00:00:18.345 --> 00:00:21.765
Instead, we can use a linear operator and that's known as defined operator,

00:00:21.765 --> 00:00:24.210
which basically combines these two symbols here,

00:00:24.210 --> 00:00:26.740
equals until the and just runs them together.

00:00:26.740 --> 00:00:28.340
So here we are equals until the,

00:00:28.340 --> 00:00:30.620
this is the find operator hearing groovy.

00:00:30.620 --> 00:00:31.925
So when the find operator,

00:00:31.925 --> 00:00:33.770
we still supply a regular expression.

00:00:33.770 --> 00:00:35.915
So S dot star for example,

00:00:35.915 --> 00:00:37.415
but this is a binary operator,

00:00:37.415 --> 00:00:39.830
so it expects the string to be matched.

00:00:39.830 --> 00:00:42.890
So here for example, we could put the word sugar.

00:00:42.890 --> 00:00:48.180
And now if we run this by this which no longer relevant now, so we'll just delete them.

00:00:48.280 --> 00:00:51.740
But now if we run this, we can see we get back a matcher.

00:00:51.740 --> 00:00:55.415
So we don't have to go via getting a pattern first and then creating a matcher Alvin,

00:00:55.415 --> 00:00:57.020
We can do it all in one shot here.

00:00:57.020 --> 00:00:58.685
So this now creates a matcher,

00:00:58.685 --> 00:01:00.920
which we can use to be able to do a matching.

00:01:00.920 --> 00:01:03.365
So we could put all of this run quotes.

00:01:03.365 --> 00:01:05.930
And now we're just referring to the matter itself.

00:01:05.930 --> 00:01:07.850
And then call matches for example.

00:01:07.850 --> 00:01:11.165
And here we see true because sugar does start with an s.

00:01:11.165 --> 00:01:14.975
Again, if we make it start with an N, Then we get false.

00:01:14.975 --> 00:01:16.325
So that's also good.

00:01:16.325 --> 00:01:18.140
So we can even evaluate the in-line in

00:01:18.140 --> 00:01:20.945
one line like this by just putting parentheses around.

00:01:20.945 --> 00:01:23.555
Or alternatively, you could just do

00:01:23.555 --> 00:01:30.935
death match equals and then matcher dot matches like that as well.

00:01:30.935 --> 00:01:31.985
That's also possible.

00:01:31.985 --> 00:01:34.565
It really depends what you want to do with the match afterwards really.

00:01:34.565 --> 00:01:37.565
But I like to make things as succinct and as concise as possible,

00:01:37.565 --> 00:01:40.800
preferably in the same line when dealing with Greg x's.
