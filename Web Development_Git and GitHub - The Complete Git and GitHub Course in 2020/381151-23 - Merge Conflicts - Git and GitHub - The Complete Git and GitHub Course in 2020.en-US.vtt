WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.170
so in the previous lectures will learned about how to merge two different branches in fast

00:00:06.170 --> 00:00:08.270
forward and three way merger ways.

00:00:08.270 --> 00:00:12.380
Sometimes multiple developers may try to added the same content.

00:00:12.380 --> 00:00:13.390
For example,

00:00:13.390 --> 00:00:15.750
if one developer tries to added coat,

00:00:15.750 --> 00:00:19.890
that the second developer is editing than the conflict may acute.

00:00:19.890 --> 00:00:21.600
So in this lecture,

00:00:21.600 --> 00:00:24.030
we're going to talk about merge conflicts.

00:00:24.030 --> 00:00:27.970
Actually merging and conflicts are a common part off.

00:00:27.970 --> 00:00:30.560
Get in other version control systems.

00:00:30.560 --> 00:00:33.120
It is slightly hard to deal with Merche conflicts,

00:00:33.120 --> 00:00:39.150
but get makes it relatively is all right that same practice when merge,

00:00:39.150 --> 00:00:41.820
conflict secure and how to deal with them.

00:00:41.820 --> 00:00:42.970
First of all,

00:00:42.970 --> 00:00:45.580
let's see what branches do we have around?

00:00:45.580 --> 00:00:46.440
Get branch.

00:00:46.440 --> 00:00:53.600
So for now we have two branches that and master and currently were working on the doubt

00:00:53.600 --> 00:00:54.130
brunch.

00:00:54.130 --> 00:00:59.950
Suppose that we want to make some change in script The Jays file from Death Branch.

00:00:59.950 --> 00:01:03.550
Let's change the value off variable a,

00:01:03.550 --> 00:01:12.160
make it 50 and then make a new commit around kid commit with Aflac,

00:01:12.160 --> 00:01:20.460
Dash am and with message changed the value off the variable A.

00:01:20.460 --> 00:01:25.400
That's loved history.

00:01:25.400 --> 00:01:31.490
So here we have a new committee,

00:01:31.490 --> 00:01:33.270
which is made on the death brunch.

00:01:33.270 --> 00:01:40.190
Now suppose that someone else is editing script Js file and is working on the same line but

00:01:40.190 --> 00:01:41.580
from the massive brunch.

00:01:41.580 --> 00:01:43.750
So to imitate this process,

00:01:43.750 --> 00:01:45.710
I'm going to switch to the master branch,

00:01:45.710 --> 00:01:47.920
okay?

00:01:47.920 --> 00:01:51.780
And I'm going to change the name off the variable.

00:01:51.780 --> 00:02:04.440
Let's make it see Then let's make new commit Iran gets commit Desh am with a message,

00:02:04.440 --> 00:02:11.900
changed the name off the variable and finally,

00:02:11.900 --> 00:02:13.440
let's around the history.

00:02:13.440 --> 00:02:16.460
So,

00:02:16.460 --> 00:02:16.910
as you see,

00:02:16.910 --> 00:02:19.750
we have here the last commit made on the massive brunch.

00:02:19.750 --> 00:02:24.890
Now suppose that we need to merge those two branches for that as you.

00:02:24.890 --> 00:02:25.390
All of you know,

00:02:25.390 --> 00:02:26.160
we have to run,

00:02:26.160 --> 00:02:31.480
get merge and we have to specify the name of the branch in this case death.

00:02:31.480 --> 00:02:34.420
So once we run this comment,

00:02:34.420 --> 00:02:40.750
then get will say that we have a merge conflict in script RJ's file and we will get here

00:02:40.750 --> 00:02:43.030
some different texts inside off the file.

00:02:43.030 --> 00:02:44.960
So because of that,

00:02:44.960 --> 00:02:48.780
we have been working on the same line from different branches,

00:02:48.780 --> 00:02:56.120
then get wasn't able to decide which version off the code to keep therefore the conflict as

00:02:56.120 --> 00:02:56.590
arising.

00:02:56.590 --> 00:03:02.310
So now we displaced both versions off the code and we just need to choose which one is

00:03:02.310 --> 00:03:03.560
appropriate for us.

00:03:03.560 --> 00:03:05.900
In order to solve this conflict,

00:03:05.900 --> 00:03:08.560
we just need to added this code manually.

00:03:08.560 --> 00:03:09.610
First of all,

00:03:09.610 --> 00:03:12.960
I'm going to delete those lines which are added by get.

00:03:12.960 --> 00:03:19.860
And then I had to decide which version of the code I want to keep.

00:03:19.860 --> 00:03:23.690
Suppose that we need to change the name on the value as well.

00:03:23.690 --> 00:03:24.950
After that,

00:03:24.950 --> 00:03:28.750
we have to save the file and added to the staging area.

00:03:28.750 --> 00:03:33.340
So once we added to the staging area,

00:03:33.340 --> 00:03:34.940
then we have to make a new commit.

00:03:34.940 --> 00:03:36.180
But in this case,

00:03:36.180 --> 00:03:37.510
we just have to run,

00:03:37.510 --> 00:03:40.850
get commit without any message.

00:03:40.850 --> 00:03:44.020
So once we run this command,

00:03:44.020 --> 00:03:49.930
then the new file will be open in any text editor as it was in case off a three way merger

00:03:49.930 --> 00:03:49.930
.

00:03:49.930 --> 00:03:52.860
Here we can change the message of the committee,

00:03:52.860 --> 00:03:54.810
but let's leave it as it is.

00:03:54.810 --> 00:03:56.690
So once we close this file,

00:03:56.690 --> 00:03:58.350
then new commit will be made,

00:03:58.350 --> 00:04:02.120
branches will be merged and conflict will be solved.

00:04:02.120 --> 00:04:03.850
If we around the history,

00:04:03.850 --> 00:04:10.280
then you will see the Alaska meet merge branch depth.

00:04:10.280 --> 00:04:13.550
So it means that we have merged branches successful.

00:04:13.550 --> 00:04:15.140
All right,

00:04:15.140 --> 00:04:17.340
so that's the case when merge conflicts,

00:04:17.340 --> 00:04:17.840
a cure.

00:04:17.840 --> 00:04:20.590
And also that's the way how you can fix them.

00:04:20.590 --> 00:04:24.750
Now I'm going to show you how to stop more Jim conflict for.

00:04:24.750 --> 00:04:25.310
Then again,

00:04:25.310 --> 00:04:28.590
let's added the same line of code from different branches.

00:04:28.590 --> 00:04:29.520
Currently,

00:04:29.520 --> 00:04:34.180
we're on the master branch and let's go ahead and change the name off the function.

00:04:34.180 --> 00:04:36.940
Let's make it my funk.

00:04:36.940 --> 00:04:43.150
Then make a new commit run.

00:04:43.150 --> 00:04:43.950
Get commit.

00:04:43.950 --> 00:04:53.110
Desh am with the message changed the name multi function.

00:04:53.110 --> 00:04:56.990
Next,

00:04:56.990 --> 00:04:58.900
I'm going to switch to death brunch.

00:04:58.900 --> 00:05:07.710
And now let's insert your inside of the function the block of Code Castle,

00:05:07.710 --> 00:05:10.590
that log Hi there.

00:05:10.590 --> 00:05:13.630
Then again,

00:05:13.630 --> 00:05:21.180
make and you commit git commits Dash am with a message added a block of coat.

00:05:21.180 --> 00:05:25.680
All right,

00:05:25.680 --> 00:05:28.730
so now it's time to merge branches for that.

00:05:28.730 --> 00:05:36.840
Let's go back to the massive branch and then one gets merge death.

00:05:36.840 --> 00:05:41.250
So again,

00:05:41.250 --> 00:05:47.310
we've got here merge conflict because we worked on the same line of code and now if we want

00:05:47.310 --> 00:05:48.560
to stop merging,

00:05:48.560 --> 00:05:49.650
we can run,

00:05:49.650 --> 00:05:53.230
gets merge dash,

00:05:53.230 --> 00:05:58.930
dash abort so this common will stop merging.

00:05:58.930 --> 00:06:01.950
Also we will no longer have here conflict,

00:06:01.950 --> 00:06:07.370
but it keeps all the changes which we have made on both branches as a city name off.

00:06:07.370 --> 00:06:08.700
The function has changed,

00:06:08.700 --> 00:06:12.330
and also if we switch back to that branch,

00:06:12.330 --> 00:06:17.780
then the function will have a block of coat.

00:06:17.780 --> 00:06:20.320
So remember that gets merged.

00:06:20.320 --> 00:06:23.850
Dash dash abort just tops merging.

00:06:23.850 --> 00:06:28.810
And it keeps all the changes that are made on the same line of code from different branches

00:06:28.810 --> 00:06:28.810
.

00:06:28.810 --> 00:06:30.140
All right,

00:06:30.140 --> 00:06:31.510
before we finish this lecture,

00:06:31.510 --> 00:06:34.840
let's merge again branches and also solve the conflict.

00:06:34.840 --> 00:06:36.750
Let's go back to the massive branch.

00:06:36.750 --> 00:06:42.120
Then Ron gets merged death.

00:06:42.120 --> 00:06:47.480
So I'm going to live here.

00:06:47.480 --> 00:06:49.070
The second version of the code.

00:06:49.070 --> 00:06:52.890
Let's delete all the lines of code,

00:06:52.890 --> 00:06:53.790
which we don't need.

00:06:53.790 --> 00:07:02.660
Then at the file to the staging area.

00:07:02.660 --> 00:07:05.700
Next minute to run,

00:07:05.700 --> 00:07:05.930
get,

00:07:05.930 --> 00:07:06.470
commit.

00:07:06.470 --> 00:07:14.600
And finally,

00:07:14.600 --> 00:07:16.640
let's check the history.

00:07:16.640 --> 00:07:19.930
So as you see,

00:07:19.930 --> 00:07:21.000
everything works fine,

00:07:21.000 --> 00:07:22.430
all right,

00:07:22.430 --> 00:07:25.540
that's it about March conflicts in real world.

00:07:25.540 --> 00:07:27.830
Such conflicts may a cure frequently,

00:07:27.830 --> 00:07:31.330
but thanks to get is quite simple to deal with them.

00:07:31.330 --> 00:07:32.300
But anyway,

00:07:32.300 --> 00:07:36.400
when the developer team is working on a project than each member off,

00:07:36.400 --> 00:07:42.500
the team should know what is he's or her working area and which falls to work on in order

00:07:42.500 --> 00:07:45.040
to avoid such murder conflicts.

00:07:45.040 --> 00:07:46.440
Okay,

00:07:46.440 --> 00:07:47.900
let's move on to the next election.

