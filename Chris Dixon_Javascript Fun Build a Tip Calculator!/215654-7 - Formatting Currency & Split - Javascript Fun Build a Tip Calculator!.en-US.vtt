WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.310 --> 00:00:05.520
Welcome to the final video for this course project.

00:00:05.520 --> 00:00:10.380
In this video, we're going to make some finishing touches to our tip calculator,

00:00:10.380 --> 00:00:16.795
and in particular we're going to format our currency and also work with the split output.

00:00:16.795 --> 00:00:20.175
First of all, we're going to create some functions which is going to

00:00:20.175 --> 00:00:24.030
round our currency values to two decimal places,

00:00:24.030 --> 00:00:27.930
along with putting a currency symbol in front too.

00:00:27.930 --> 00:00:31.575
Alongside this, where we have our split at the bottom,

00:00:31.575 --> 00:00:35.705
we're going to change this to output either one person or two people,

00:00:35.705 --> 00:00:38.140
three people, and so on.

00:00:38.140 --> 00:00:44.100
Also this currency function can be used for the split values at the bottom too.

00:00:44.390 --> 00:00:48.125
To do this, we're going to go down to our script,

00:00:48.125 --> 00:00:51.800
and if we take a look where we're outputting all of these values,

00:00:51.800 --> 00:00:54.590
instead of simply outputting a variable,

00:00:54.590 --> 00:00:57.595
we're going to pass this to a function.

00:00:57.595 --> 00:01:01.360
Let's create this function right right the very top.

00:01:01.520 --> 00:01:06.730
We'll begin with the function which is going to format our money.

00:01:09.700 --> 00:01:14.330
For this to work we also need the actual currency value to work with,

00:01:14.330 --> 00:01:17.170
and we'll pass this to this function very soon.

00:01:17.170 --> 00:01:21.500
Now, there's a couple of things we want to do with this actual currency value.

00:01:21.500 --> 00:01:25.475
The first thing to do is to round this to two decimal places,

00:01:25.475 --> 00:01:29.050
and then we're going to add a currency symbol in front.

00:01:29.050 --> 00:01:31.455
Let's take our value,

00:01:31.455 --> 00:01:34.470
and we can reassign this to a new value.

00:01:34.470 --> 00:01:38.500
The new value is going to be equal to the current value,

00:01:38.500 --> 00:01:44.305
and we can set this to two decimal places using the toFixed method.

00:01:44.305 --> 00:01:48.210
This new function then needs to return our new value.

00:01:48.210 --> 00:01:51.650
So before we go ahead and output this new value,

00:01:51.650 --> 00:01:56.140
we can also add to this start a string which is going to contain a currency symbol,

00:01:56.140 --> 00:02:00.500
add a space, and then we can add this to the value.

00:02:00.500 --> 00:02:02.120
Since it is a function,

00:02:02.120 --> 00:02:06.970
we can now reuse this everywhere we need to output a currency value.

00:02:06.970 --> 00:02:10.245
Let's grab this, and if we scroll down,

00:02:10.245 --> 00:02:12.930
the first one is the tipValue.

00:02:12.930 --> 00:02:16.695
Instead of outputting our value included in this variable,

00:02:16.695 --> 00:02:20.890
we can now call this function passing in our tipValue.

00:02:20.890 --> 00:02:27.020
This tipValue will be actually received inside of our function just above as this value,

00:02:27.020 --> 00:02:30.520
and then we can make our changes and return the new value.

00:02:30.520 --> 00:02:32.520
The total with tip,

00:02:32.520 --> 00:02:34.755
we can also grab this,

00:02:34.755 --> 00:02:37.875
and replace this with our function.

00:02:37.875 --> 00:02:41.470
Next up we have newBillEach.

00:02:42.620 --> 00:02:44.865
Pass this into our function,

00:02:44.865 --> 00:02:48.590
and finally the tip value for each person.

00:02:50.660 --> 00:02:54.880
Let's now save this and check this is working in the browser.

00:02:54.880 --> 00:03:00.370
Add a value, and now if we select different tip values and also split,

00:03:00.370 --> 00:03:02.350
we see that these are now rounded to

00:03:02.350 --> 00:03:07.175
two decimal places alongside outputting the currency symbol.

00:03:07.175 --> 00:03:10.360
The next thing we're going to do is to create a new function which

00:03:10.360 --> 00:03:13.330
is going to format the split output,

00:03:13.330 --> 00:03:16.975
so this function will either output one person,

00:03:16.975 --> 00:03:20.455
or it will output two people and so on.

00:03:20.455 --> 00:03:22.530
Go back to our script section,

00:03:22.530 --> 00:03:24.900
let's create a new function,

00:03:24.900 --> 00:03:28.365
and let's call this formatSplit.

00:03:28.365 --> 00:03:31.370
This is also going to take in a value which will be

00:03:31.370 --> 00:03:34.400
the number of people the bill is split between.

00:03:34.400 --> 00:03:38.210
Let's first check if this value is equal to 1.

00:03:38.210 --> 00:03:43.865
If it is, we then want to return a string which simply says, one person.

00:03:43.865 --> 00:03:51.295
So we can return the value plus a string which is the word person.

00:03:51.295 --> 00:03:57.145
This line of code will only run if the value of the split is equal to 1.

00:03:57.145 --> 00:03:59.715
In fact, this just wants to be a string.

00:03:59.715 --> 00:04:01.790
If the value is two or higher,

00:04:01.790 --> 00:04:04.175
we're then going to return a new value,

00:04:04.175 --> 00:04:06.380
which is the current value,

00:04:06.380 --> 00:04:08.165
and this time rather than person,

00:04:08.165 --> 00:04:10.240
the value will be people.

00:04:10.240 --> 00:04:14.325
Now output this, we're going to use our formatSplit function,

00:04:14.325 --> 00:04:16.930
passing in our split.

00:04:20.150 --> 00:04:23.805
Off to the browser, let's check this is working.

00:04:23.805 --> 00:04:28.020
We can add a value, and we see the output of one person.

00:04:28.020 --> 00:04:29.935
Let's change this be number two,

00:04:29.935 --> 00:04:33.275
two people, three people, and so on.

00:04:33.275 --> 00:04:37.070
This is now some nice improvements for our tip calculator,

00:04:37.070 --> 00:04:40.695
however there is one edge case we need to take care of,

00:04:40.695 --> 00:04:44.765
and this is dependent on the particular values which we add.

00:04:44.765 --> 00:04:51.235
If we do something such as 47 and 15 percent tip,

00:04:51.235 --> 00:04:53.815
split between two people,

00:04:53.815 --> 00:04:55.910
it may not be immediately obvious,

00:04:55.910 --> 00:04:58.385
but there is one small problem here.

00:04:58.385 --> 00:05:00.860
That problem is the bill each,

00:05:00.860 --> 00:05:05.830
and also the tip each doesn't cover the totals just about the top.

00:05:05.830 --> 00:05:08.515
The tip each is 3.52,

00:05:08.515 --> 00:05:11.830
which will give us the value of 7.04,

00:05:11.830 --> 00:05:14.525
and we want to make this 7.05.

00:05:14.525 --> 00:05:19.900
The same with the actual bill each if each person puts in 27.02,

00:05:19.900 --> 00:05:23.260
this will be slightly short of the total.

00:05:23.260 --> 00:05:26.885
Now the way we can fix this is by going to

00:05:26.885 --> 00:05:30.775
our function which we created earlier, which is formatMoney.

00:05:30.775 --> 00:05:34.265
At the moment when we call in the toFixed method,

00:05:34.265 --> 00:05:39.805
this is actually round in either up or down depending on the number.

00:05:39.805 --> 00:05:44.360
To fix this problem we always want to make sure that our value is rounded up,

00:05:44.360 --> 00:05:46.925
and never rounded down.

00:05:46.925 --> 00:05:51.470
There is some complex math calculations we can do to make this happen,

00:05:51.470 --> 00:05:55.135
however there is also a much more simpler way too.

00:05:55.135 --> 00:06:00.995
Up at the very top, we're again going to grab our value and changes.

00:06:00.995 --> 00:06:04.565
We can make use of a math function called ceil,

00:06:04.565 --> 00:06:07.405
which will always round up our numbers.

00:06:07.405 --> 00:06:13.400
However, by default Math.ceil will round up to the closest whole number.

00:06:13.400 --> 00:06:18.155
For example 27.02, will round up to be 28.

00:06:18.155 --> 00:06:21.985
This would then return to us some values which are way too high.

00:06:21.985 --> 00:06:27.590
Instead we want to grab the second decimal place and instead round this up.

00:06:27.590 --> 00:06:32.795
To do this we're going to multiply our original value by 100.

00:06:32.795 --> 00:06:36.655
Let's do some console logs and see how this looks in the browser.

00:06:36.655 --> 00:06:40.710
That's how we'll console log the original value,

00:06:40.710 --> 00:06:42.330
so the first value,

00:06:42.330 --> 00:06:44.510
and then we'll do the same console log,

00:06:44.510 --> 00:06:47.800
but after this value has been changed.

00:06:47.800 --> 00:06:52.580
Let's open up the developer tools with right-click and Inspect.

00:06:52.580 --> 00:06:55.620
Go into the Console.

00:06:59.240 --> 00:07:01.670
If we take a look at these in pairs,

00:07:01.670 --> 00:07:03.410
particularly down at the bottom,

00:07:03.410 --> 00:07:08.230
3.525 has been now rounded to 353,

00:07:08.230 --> 00:07:11.550
the same way that 27.025,

00:07:11.550 --> 00:07:12.975
this has been rounded up.

00:07:12.975 --> 00:07:14.640
Now this has been rounded up,

00:07:14.640 --> 00:07:19.745
we can now divide this by 100 to give us the original decimal places.

00:07:19.745 --> 00:07:22.015
Let's take this value,

00:07:22.015 --> 00:07:23.775
divide it by 100,

00:07:23.775 --> 00:07:25.635
and then reload the browser.

00:07:25.635 --> 00:07:28.930
Let's add our values back in place,

00:07:29.870 --> 00:07:32.510
and now these values multiplied by

00:07:32.510 --> 00:07:36.955
two people will not be enough to cover the total bill and tip.

00:07:36.955 --> 00:07:38.900
This is only a small detail,

00:07:38.900 --> 00:07:42.560
but something which could be really important when working with money.

00:07:42.560 --> 00:07:44.255
Let's remove this console logs,

00:07:44.255 --> 00:07:46.770
and clean up our function.

00:07:48.560 --> 00:07:51.950
This is enough for our tip calculator project,

00:07:51.950 --> 00:07:53.360
I hope you've enjoyed it,

00:07:53.360 --> 00:07:55.460
and also learned something new.

00:07:55.460 --> 00:07:59.430
You can now move on to the next project, take a break,

00:07:59.430 --> 00:08:01.520
or add some further customizations to

00:08:01.520 --> 00:08:05.330
this project either via CSS to change the look and feel,

00:08:05.330 --> 00:08:08.375
or you can add some different JavaScript functionality.

00:08:08.375 --> 00:08:12.660
I hope you've enjoyed this project and I'll see you in the next one.
