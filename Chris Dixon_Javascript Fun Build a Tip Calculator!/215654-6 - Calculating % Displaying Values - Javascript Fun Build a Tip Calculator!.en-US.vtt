WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.550 --> 00:00:03.585
We now have a pretty,

00:00:03.585 --> 00:00:08.070
simple update function which grabs all of our user inputs.

00:00:08.070 --> 00:00:11.995
Then we can now use these values to calculate our tip outputs.

00:00:11.995 --> 00:00:15.180
We're going to use these to perform some calculations,

00:00:15.180 --> 00:00:17.685
and then update the user interface.

00:00:17.685 --> 00:00:21.720
For example, we need to output the value of our tip over on the right.

00:00:21.720 --> 00:00:23.940
We need to output the total.

00:00:23.940 --> 00:00:27.060
We need to also make sure that when we increase this tip value,

00:00:27.060 --> 00:00:29.520
that the percentage displays too,

00:00:29.520 --> 00:00:32.385
and also the same for this split values.

00:00:32.385 --> 00:00:38.040
Let's begin. I want to remove this console log from the last video,

00:00:38.040 --> 00:00:41.890
and then we can use these values to perform our calculations.

00:00:41.890 --> 00:00:45.335
The first one I'm going to grab is for the tip value.

00:00:45.335 --> 00:00:47.980
How are we going to go about this?

00:00:47.980 --> 00:00:55.550
Well, for example, if the user enters a bill such as 100 and a tip value of 20 percent,

00:00:55.550 --> 00:00:59.200
we want to make sure the tip value in money is 20.

00:00:59.200 --> 00:01:02.150
So we have a bill value of 100,

00:01:02.150 --> 00:01:04.430
and the way we can do this is to multiply

00:01:04.430 --> 00:01:08.770
this value by the percentage of the tip such as 20.

00:01:08.770 --> 00:01:10.950
You can see returned on the line below,

00:01:10.950 --> 00:01:13.200
we have a value of 2,000.

00:01:13.200 --> 00:01:18.070
This is because we need to divide the tip value by 100.

00:01:18.070 --> 00:01:21.260
This now gives us the correct value just here.

00:01:21.260 --> 00:01:23.585
If this was 15 percent,

00:01:23.585 --> 00:01:26.455
this will give us the value of 15.

00:01:26.455 --> 00:01:29.960
We can now use this over in our update function,

00:01:29.960 --> 00:01:32.900
and we can store this inside of a variable.

00:01:32.900 --> 00:01:35.315
We can call this a Tip Value,

00:01:35.315 --> 00:01:39.775
and we're going to set this equal through the same calculation we have just performed.

00:01:39.775 --> 00:01:43.685
So the 100 equivalent is the value of bill.

00:01:43.685 --> 00:01:50.015
We'll say bill multiplied by our tip percent divided by 100,

00:01:50.015 --> 00:01:54.725
to make sure that the tip percent gets divided by 100 first,

00:01:54.725 --> 00:01:56.330
and then multiply by the bill.

00:01:56.330 --> 00:01:58.489
We can wrap these inside the brackets

00:01:58.489 --> 00:02:01.475
to make sure the calculation gets performed correctly.

00:02:01.475 --> 00:02:06.125
Let's do a console log and we can check this is all working fine.

00:02:06.125 --> 00:02:10.685
The tip percent. Refresh the browser.

00:02:10.685 --> 00:02:12.695
Let's go for the same calculation.

00:02:12.695 --> 00:02:16.330
So 100, we can select the tip value.

00:02:16.330 --> 00:02:18.730
You can see if we move this all the way up,

00:02:18.730 --> 00:02:21.515
the updated values are now displayed.

00:02:21.515 --> 00:02:24.130
Now we have the total value of the tip.

00:02:24.130 --> 00:02:28.145
We can easily now work out how much the tip is per person.

00:02:28.145 --> 00:02:31.215
Let's create a new variable just below,

00:02:31.215 --> 00:02:34.005
lets call this the Tip Each.

00:02:34.005 --> 00:02:36.570
This is going to be pretty straightforward.

00:02:36.570 --> 00:02:39.070
All we're going to do is to take the tip value,

00:02:39.070 --> 00:02:40.625
which we have just above,

00:02:40.625 --> 00:02:43.565
and then divide it by the number of people.

00:02:43.565 --> 00:02:47.300
This is available in the variable above called Split.

00:02:47.300 --> 00:02:50.480
The next thing we can do right at the very bottom is to

00:02:50.480 --> 00:02:53.915
work out how much the total bill is per person.

00:02:53.915 --> 00:02:57.530
This again is going to be a pretty straightforward calculation.

00:02:57.530 --> 00:02:59.480
We currently have the total bill,

00:02:59.480 --> 00:03:01.820
which we're grabbing inside of this variable,

00:03:01.820 --> 00:03:05.510
and all we need to do is to divide it by the number of people.

00:03:05.510 --> 00:03:10.370
A new variable, I'm going to call this the new Bill Each.

00:03:10.370 --> 00:03:16.600
The first thing we need to do, is to add the bill plus the total tip value.

00:03:16.600 --> 00:03:19.850
This is going to give us the total bill when it's paid,

00:03:19.850 --> 00:03:21.095
which includes the tip,

00:03:21.095 --> 00:03:26.245
and then we can divide this by the number of people which is available in the split.

00:03:26.245 --> 00:03:29.190
Just like above, we're going to wrap these inside

00:03:29.190 --> 00:03:33.710
the brackets to make sure the calculation gets performed in the correct order.

00:03:33.710 --> 00:03:37.220
We'll add the values together and then multiply this

00:03:37.220 --> 00:03:40.530
by the number of people. Let's test this one out.

00:03:40.530 --> 00:03:42.810
We'll copy new bill each,

00:03:42.820 --> 00:03:47.185
add this into our console log and we can now test this out.

00:03:47.185 --> 00:03:50.510
Now if we add in the value of 100,

00:03:50.510 --> 00:03:53.150
we see an issue inside the console.

00:03:53.150 --> 00:03:55.610
We're outputting the value of 1000,

00:03:55.610 --> 00:04:00.830
which is an extra zero added onto the end. Let's try one more.

00:04:00.830 --> 00:04:06.010
If we add 50, the same problem is happening with the value of 500.

00:04:06.010 --> 00:04:07.590
The reason this is happening,

00:04:07.590 --> 00:04:10.220
is probably not too clear at the moment.

00:04:10.220 --> 00:04:13.190
This is because we're actually receiving a data type of

00:04:13.190 --> 00:04:17.425
string rather than number from this bill input.

00:04:17.425 --> 00:04:21.505
We can check this by console logging the type of,

00:04:21.505 --> 00:04:24.500
and then the value of our bill.

00:04:24.730 --> 00:04:27.245
Add anything into the input,

00:04:27.245 --> 00:04:30.425
and this is confirmed with the type of string.

00:04:30.425 --> 00:04:32.975
However, though, the tip value,

00:04:32.975 --> 00:04:37.040
we do this, reload.

00:04:37.040 --> 00:04:39.575
This is a type of number.

00:04:39.575 --> 00:04:43.050
Before when we are putting the value of new bill each,

00:04:43.050 --> 00:04:46.490
we are adding a string with a number.

00:04:46.910 --> 00:04:51.405
What is actually happening when we add the bill to the tip value,

00:04:51.405 --> 00:04:54.080
rather than performing a number calculation,

00:04:54.080 --> 00:04:58.315
we're receiving 50, and then adding the zero on the end,

00:04:58.315 --> 00:05:00.205
giving us the value of 500,

00:05:00.205 --> 00:05:02.325
which we've seen in the console.

00:05:02.325 --> 00:05:04.530
The way we can round this,

00:05:04.530 --> 00:05:08.335
is to convert the value of bill into a number.

00:05:08.335 --> 00:05:11.110
So I'm going to quote the section where we'll grab

00:05:11.110 --> 00:05:16.090
the value and then make use of the JavaScript Number Function,

00:05:16.090 --> 00:05:17.590
passing back in the code,

00:05:17.590 --> 00:05:19.795
which grabs our bill value.

00:05:19.795 --> 00:05:24.910
Now with this in place, we can now do a new console log with the type of bill.

00:05:24.910 --> 00:05:27.025
Save and reload the browser,

00:05:27.025 --> 00:05:31.310
and we add anything into here which is now displayed as a number.

00:05:31.310 --> 00:05:34.170
Our value is now displayed as a number,

00:05:34.170 --> 00:05:37.450
so let's try once more the value of new bill each.

00:05:37.450 --> 00:05:40.325
Check this is all working okay,

00:05:40.325 --> 00:05:44.640
and we now see the value of 50 rather than 500.

00:05:44.640 --> 00:05:47.800
Good. So now we have all the data which we need to work with,

00:05:47.800 --> 00:05:53.090
and the next step is to actually output these values into our user interface.

00:05:53.090 --> 00:05:56.140
We're going to do this in a similar way just above,

00:05:56.140 --> 00:05:58.395
where we grabbed the particular elements.

00:05:58.395 --> 00:06:01.310
But rather than grabbing the elements value,

00:06:01.310 --> 00:06:04.000
we're going to be setting the value instead.

00:06:04.000 --> 00:06:10.360
At the bottom of here, we can add a document.getElementByID.

00:06:10.360 --> 00:06:13.985
Which ID do we want to grab for this particular element?

00:06:13.985 --> 00:06:19.545
Let's scroll up. There's our place holder of zero percent,

00:06:19.545 --> 00:06:20.835
which we can now remove,

00:06:20.835 --> 00:06:23.880
and this has the ID of tip percent.

00:06:23.880 --> 00:06:26.850
Back down, we can add this in.

00:06:26.850 --> 00:06:31.190
Then to set the value of our elements rather than our placeholder,

00:06:31.190 --> 00:06:33.515
we can use innerHTML.

00:06:33.515 --> 00:06:37.790
This innerHTML will set the value inside of our element,

00:06:37.790 --> 00:06:41.490
and we want this to be equivalent of our tip percent.

00:06:42.880 --> 00:06:48.380
Save and reload. This is now working,

00:06:48.380 --> 00:06:51.190
and we can also add on to the end the percentage symbol.

00:06:51.190 --> 00:06:53.375
We can add this using the plus symbol,

00:06:53.375 --> 00:06:57.010
and then since we want to add a string value rather than a number,

00:06:57.010 --> 00:06:59.575
this is going to be added in quotations.

00:06:59.575 --> 00:07:01.930
We should now see a percent symbol if we reload

00:07:01.930 --> 00:07:05.975
the browser and scroll across our range slider.

00:07:05.975 --> 00:07:09.300
Next up we have this tip value just below.

00:07:09.300 --> 00:07:11.945
Let's scroll back up to our code.

00:07:11.945 --> 00:07:18.350
This is the element we want to target just here and this has the ID of tip value.

00:07:18.500 --> 00:07:24.280
Just like here, we're also going to use document.getElementByID,

00:07:24.650 --> 00:07:27.480
pass in the ID of tip value,

00:07:27.480 --> 00:07:30.580
and again, we'll set the innerHTML.

00:07:30.920 --> 00:07:36.435
We already have this calculated just above in the value of tip value.

00:07:36.435 --> 00:07:40.575
Let's try this one, a bill of 50.

00:07:40.575 --> 00:07:48.150
I'm going to set the tip, and 10 percent of 50 is now equal to five.

00:07:48.150 --> 00:07:50.510
We're going to be using this a couple more times,

00:07:50.510 --> 00:07:52.675
so I'm going to copy this,

00:07:52.675 --> 00:07:54.840
paste this in just below.

00:07:54.840 --> 00:07:57.860
The third one is going to be for the total value,

00:07:57.860 --> 00:08:02.615
which is a calculation of our bill being added to the tip value.

00:08:02.615 --> 00:08:06.900
The ID for this section was total with tip,

00:08:08.030 --> 00:08:11.355
which we can see from our HTML just above,

00:08:11.355 --> 00:08:13.215
it was this section just here.

00:08:13.215 --> 00:08:16.950
Then we can add that the HTML content with innerHTML,

00:08:16.950 --> 00:08:22.710
send this equal to our bill being added to our tip value.

00:08:22.880 --> 00:08:27.370
Let's try this out, a bill of 50.

00:08:28.040 --> 00:08:33.140
These two values added together give us the total of 55.

00:08:33.140 --> 00:08:36.380
Next, we have the split section just below.

00:08:36.380 --> 00:08:41.149
The first thing we're going to go for is the value of the split, so one person,

00:08:41.149 --> 00:08:44.410
but now we're just going to set the number of people such as 1, 2,

00:08:44.410 --> 00:08:48.725
3, rather than outputting people or person just after.

00:08:48.725 --> 00:08:51.005
Let's start with this one.

00:08:51.005 --> 00:08:53.635
Get element by ID.

00:08:53.635 --> 00:08:55.810
The ID which we need for this one,

00:08:55.810 --> 00:08:58.300
if we scroll up to our split section,

00:08:58.300 --> 00:09:00.610
we can see next where I'll place all the content.

00:09:00.610 --> 00:09:04.460
If we remove this, this is split value.

00:09:07.010 --> 00:09:13.180
This is the value of our variable of split just after this.

00:09:13.180 --> 00:09:14.430
The next one we're going to grab,

00:09:14.430 --> 00:09:16.980
is the total bill per person.

00:09:16.980 --> 00:09:23.030
The ID for this element in this section here is going to be bill each.

00:09:26.240 --> 00:09:32.720
Again, we also have this value stored inside the variable called new bill each.

00:09:34.010 --> 00:09:38.900
The last section we need to work with is the tip each down at the bottom.

00:09:38.900 --> 00:09:42.215
Let's again paste in our getElementbyID.

00:09:42.215 --> 00:09:47.040
The spam which we're updating has the ID of tip each.

00:09:50.870 --> 00:09:54.619
I will set the value to be the tip of each variable,

00:09:54.619 --> 00:09:56.790
which you have stored above.

00:09:58.280 --> 00:10:01.940
Save this and back over to our project.

00:10:01.940 --> 00:10:04.980
Are they bill? We know this is all working,

00:10:04.980 --> 00:10:07.035
so let's go for 10 percent.

00:10:07.035 --> 00:10:08.975
Since we only have one person,

00:10:08.975 --> 00:10:10.700
the bill each is 55,

00:10:10.700 --> 00:10:13.300
and they also pay the full tip of five.

00:10:13.300 --> 00:10:15.870
Let's try open this to be two people.

00:10:15.870 --> 00:10:21.510
The value is updated here and this now updates our values just below.

00:10:21.510 --> 00:10:26.855
This now leaves most of the functionality for our tip calculator now in place.

00:10:26.855 --> 00:10:29.810
Next, we're going to move on to add some formatting into

00:10:29.810 --> 00:10:33.690
the currency and also the split values.
