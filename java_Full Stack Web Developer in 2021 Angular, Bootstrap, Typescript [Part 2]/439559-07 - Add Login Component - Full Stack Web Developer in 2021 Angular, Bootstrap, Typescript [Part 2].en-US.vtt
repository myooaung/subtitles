WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.830 --> 00:00:08.355
In this video, we'll create the login component for our UI project.

00:00:08.355 --> 00:00:15.974
So let's type B and G generate component.

00:00:15.974 --> 00:00:19.650
And we'll set it under components folder.

00:00:19.650 --> 00:00:21.165
And it should be called

00:00:21.165 --> 00:00:29.759
login files

00:00:29.759 --> 00:00:32.380
for properly generated.

00:00:32.930 --> 00:00:38.520
So if we navigate down the components login,

00:00:38.520 --> 00:00:40.679
and you see here that we have

00:00:40.679 --> 00:00:48.859
the type script file that corresponds to our login component.

00:00:52.170 --> 00:01:00.894
The first thing to note is that we need to import several things such as view child.

00:01:00.894 --> 00:01:03.955
And after viewing it.

00:01:03.955 --> 00:01:10.090
So this login component will be used to properly authenticate from

00:01:10.090 --> 00:01:20.329
the UI application to the Spring boot server side using the authentication service ds.

00:01:22.170 --> 00:01:27.080
So we imported the authentication service

00:01:30.240 --> 00:01:36.979
from the services authentication service

00:01:46.830 --> 00:01:57.770
Paulson into import the HTTP client from Angular HTTP.

00:02:02.310 --> 00:02:06.114
And we also need to router.

00:02:06.114 --> 00:02:14.179
Since based on authentication process will allow the user to a specific page.

00:02:22.200 --> 00:02:27.145
And of course, we'll soon in the constants

00:02:27.145 --> 00:02:35.450
from from the constants file that we previously set up.

00:02:44.850 --> 00:02:52.225
We also need to import the bootstrap specific references.

00:02:52.225 --> 00:02:56.335
So this will be ordered finance that we'll use as part of

00:02:56.335 --> 00:03:01.820
working with Andy Bootstrap dialogues.

00:03:04.740 --> 00:03:11.635
And in order to properly connect to the HTML dialogue that will set up,

00:03:11.635 --> 00:03:16.569
we need to abuse a child element in our type script file.

00:03:16.569 --> 00:03:24.714
The authentication model is the name of our modal dialog that will use.

00:03:24.714 --> 00:03:29.239
And it's so dipole model directive

00:03:32.190 --> 00:03:35.950
will also set in place some variables for

00:03:35.950 --> 00:03:41.059
the username of type string and for the password.

00:03:42.240 --> 00:03:50.874
And an error message will be used in terms of exposing any errors that might arise.

00:03:50.874 --> 00:03:55.279
In the authentication process.

00:03:58.980 --> 00:04:08.530
Under the constructor where we'll inject the authentication service and also the

00:04:08.530 --> 00:04:19.340
router so that we can use them on your this type script file.

00:04:21.210 --> 00:04:32.219
And let's also set up specific message just to see that this component works.

00:04:33.250 --> 00:04:36.889
So constructor for login component,

00:04:36.889 --> 00:04:40.229
this is just an informative message.

00:04:44.050 --> 00:04:48.839
Now since we import that after viewing it,

00:04:49.060 --> 00:04:55.610
we can use this type script lifecycle method n g after viewing it.

00:04:55.610 --> 00:05:01.979
And we need to implement those after the, after viewing it.

00:05:06.130 --> 00:05:10.625
And let's go to the end yarn init.

00:05:10.625 --> 00:05:17.569
And first check if we have the user key and the local storage.

00:05:17.569 --> 00:05:22.799
This means does the user is already authenticated?

00:05:23.500 --> 00:05:28.924
And if the user is already authenticated,

00:05:28.924 --> 00:05:38.629
we will use the router navigate method to navigate the user directly to the user's page.

00:05:38.629 --> 00:05:45.389
In this way, he will allow bypass the authentication or process.

00:05:46.360 --> 00:05:48.979
Well, so set in place,

00:05:48.979 --> 00:05:53.429
show more dialogue method.

00:05:54.760 --> 00:06:01.475
And we'll verify if the user is not authenticated.

00:06:01.475 --> 00:06:07.879
So that local storage or getItems of user negate,

00:06:07.879 --> 00:06:12.979
that means that the user is not currently authenticated.

00:06:12.979 --> 00:06:17.765
And if so, will expose the authentication model.

00:06:17.765 --> 00:06:23.325
And let's call the base this on the factor unit method.

00:06:23.325 --> 00:06:26.199
So the user will be prompted with

00:06:26.199 --> 00:06:31.520
a modal dialog to enter his credentials in order to authenticate.

00:06:33.180 --> 00:06:41.740
Now for domain no metal for far type script class login of type void.

00:06:41.740 --> 00:06:46.630
Let's also check if void was set for the other methods.

00:06:46.630 --> 00:06:48.489
So under the login method,

00:06:48.489 --> 00:06:53.079
we will invoke the authentication service authenticate method,

00:06:53.079 --> 00:06:56.300
passing the username and the password.

00:06:56.970 --> 00:07:01.459
And will involve the subscribe method.

00:07:14.820 --> 00:07:22.045
Now we'll review if the authentication process was executed with success or not.

00:07:22.045 --> 00:07:31.435
And if any arrows might arise when the authentication service will expose this error,

00:07:31.435 --> 00:07:36.880
actually lets add more specific message under

00:07:36.880 --> 00:07:43.639
the error message such as user name and password are invalid.

00:07:48.120 --> 00:07:54.950
If we weren't able to authenticate to the server.

00:07:55.530 --> 00:08:00.024
We'll use the router navigate method.

00:08:00.024 --> 00:08:04.940
And we redirect the user to the user space.

00:08:11.850 --> 00:08:16.869
And also let's handle the case where

00:08:16.869 --> 00:08:22.959
we receive an error under the authentication service authenticate method.

00:08:22.959 --> 00:08:24.850
So in this case,

00:08:24.850 --> 00:08:34.120
we'll set on the error message a specific statement.

00:08:34.120 --> 00:08:44.285
But for this, let's go and use the constants class and define the error message here,

00:08:44.285 --> 00:08:47.490
such as public static.

00:08:48.730 --> 00:08:54.089
Let's go with the Internal Server Error message.

00:09:08.230 --> 00:09:14.549
So something like error in communicated when server.

00:09:20.250 --> 00:09:23.095
Let's use this now.

00:09:23.095 --> 00:09:27.440
So constants internal server error message.

00:09:28.350 --> 00:09:33.369
So now we are ready to implement

00:09:33.369 --> 00:09:41.170
the MD bootstrap specific login dialog under the login component HTML page.

00:09:41.170 --> 00:09:44.360
So let's clear this.

00:09:46.470 --> 00:09:51.895
So these are specific and the bootstrap statements,

00:09:51.895 --> 00:09:55.659
div and the model authentication model.

00:09:55.659 --> 00:09:58.870
Please recall that this authentication model needs to

00:09:58.870 --> 00:10:04.590
match the view child element that we set up the type script file.

00:10:06.250 --> 00:10:13.319
So that the ties to file will be able to know the reference for the model.

00:10:14.140 --> 00:10:20.309
For the ID, authentication model,

00:10:27.970 --> 00:10:38.340
class, modal fate, and the tab index minus one.

00:10:40.240 --> 00:10:44.224
For the role. We can go with.

00:10:44.224 --> 00:10:46.260
Dialogue.

00:10:54.550 --> 00:10:56.869
The style should

00:10:56.869 --> 00:11:02.900
be set as overflow minus pi,

00:11:02.900 --> 00:11:12.079
all top area

00:11:12.079 --> 00:11:19.019
label by authentication model.

00:11:21.940 --> 00:11:27.089
And the area hidden we should go through.

00:11:37.320 --> 00:11:46.809
Also, we will use the closed event for our model so that when the model will be closed,

00:11:46.809 --> 00:11:50.365
we will invoke the show modal operation.

00:11:50.365 --> 00:11:58.494
In this way. There is a will not be able to bypass this page.

00:11:58.494 --> 00:12:01.359
And if, for example,

00:12:01.359 --> 00:12:04.464
he closed this model by mistake,

00:12:04.464 --> 00:12:08.719
no model will be automatically shown back.

00:12:09.150 --> 00:12:15.570
And we'll also need a method called claire form data.

00:12:16.210 --> 00:12:21.239
And let's add it here under the type script file.

00:12:23.110 --> 00:12:28.760
So clear form data of type void.

00:12:28.760 --> 00:12:31.309
And in this case,

00:12:31.309 --> 00:12:34.079
we should though

00:12:39.820 --> 00:12:43.205
clear error message

00:12:43.205 --> 00:12:46.430
in case of any error messages that were

00:12:46.430 --> 00:12:49.955
previously shown and also less clear the password.

00:12:49.955 --> 00:12:55.770
So the username, if it was present, where remain.

00:13:00.660 --> 00:13:04.880
Let's close this div.

00:13:05.220 --> 00:13:08.514
And now let's do some space.

00:13:08.514 --> 00:13:10.675
At least for this model,

00:13:10.675 --> 00:13:11.919
for this Fordist model,

00:13:11.919 --> 00:13:17.800
I would like to set some indentation for you to review the different components.

00:13:17.800 --> 00:13:24.220
So now we're building the modal dialog without

00:13:24.220 --> 00:13:33.640
all document and

00:13:33.640 --> 00:13:38.930
div class modal content.

00:13:43.050 --> 00:13:51.939
Let's close this div also and make some additional space, so forth.

00:13:51.939 --> 00:13:58.759
The modal content will need to sit in place the modal header.

00:14:09.870 --> 00:14:16.249
Now, the modal corresponding body.

00:14:16.260 --> 00:14:21.859
So this will compute the body or far or dialogue.

00:14:24.430 --> 00:14:26.855
And if you recall,

00:14:26.855 --> 00:14:32.705
when set in place a specific variable called the error message.

00:14:32.705 --> 00:14:38.015
And whenever we will have any content under that message,

00:14:38.015 --> 00:14:48.065
we'll use the if statement to verify this and expose this Aleppo div section to the user.

00:14:48.065 --> 00:14:52.170
So this is why I set up this tip in place.

00:14:57.160 --> 00:15:00.719
So for the error message,

00:15:05.500 --> 00:15:11.100
Let's add this error message

00:15:12.070 --> 00:15:17.939
under specific div of coal in the 12.

00:15:24.310 --> 00:15:27.035
Now this is closed.

00:15:27.035 --> 00:15:36.230
Okay? And let's move forward lambda2 model body and create

00:15:36.230 --> 00:15:37.950
a new row

00:15:47.680 --> 00:15:50.015
div class

00:15:50.015 --> 00:15:54.124
called and the four.

00:15:54.124 --> 00:16:00.949
So what we're trying to do here is split each row that we are creating in two parts.

00:16:00.949 --> 00:16:09.545
So the first part will be the actual law field that we want to insert data for.

00:16:09.545 --> 00:16:13.804
So for this, we'll use MDB batch,

00:16:13.804 --> 00:16:17.075
MD bootstrap specific tag.

00:16:17.075 --> 00:16:21.270
Let's set in place the username.

00:16:28.810 --> 00:16:34.699
And for the second part of the RO will use

00:16:34.699 --> 00:16:41.609
coal in the six.

00:16:42.040 --> 00:16:47.360
So we need to set the actual input field.

00:16:47.360 --> 00:16:50.704
So input and the B input type

00:16:50.704 --> 00:16:59.310
of text ID, username.

00:17:00.310 --> 00:17:04.439
That class should be form control.

00:17:05.350 --> 00:17:10.185
And the name should be, of course, username.

00:17:10.185 --> 00:17:12.249
And as a place holder,

00:17:12.249 --> 00:17:14.660
we can set the username.

00:17:18.750 --> 00:17:28.419
Now for the 2-way binding using NG model will set the username enter required focus.

00:17:28.419 --> 00:17:35.199
So corresponding tags now

00:17:35.199 --> 00:17:39.620
need to sit in place something similar for the password field.

00:17:40.500 --> 00:17:43.729
Div class row.

00:17:43.800 --> 00:17:47.690
If class called N204.

00:17:53.160 --> 00:18:02.360
H4 and you'd beat badge pulled set to true.

00:18:09.510 --> 00:18:12.949
Now for the password

00:18:19.290 --> 00:18:23.480
to set the goal.

00:18:24.180 --> 00:18:27.469
And the six.

00:18:29.520 --> 00:18:35.430
And the input type should bid this time offset to password.

00:18:35.430 --> 00:18:44.914
Since we don't want this film to be exposed in the UI ID password.

00:18:44.914 --> 00:18:48.030
Glass form control.

00:18:49.780 --> 00:18:54.060
Placeholder should be password.

00:18:56.500 --> 00:18:59.910
Password, of course.

00:19:01.090 --> 00:19:07.459
Now for the NG model will have

00:19:07.459 --> 00:19:12.169
the password to map

00:19:12.169 --> 00:19:18.539
the variable in type script file and also the Required.

00:19:30.060 --> 00:19:39.279
Now we need to set the model folder of our dialogue.

00:19:39.279 --> 00:19:43.404
So please note that this is external to our modal body.

00:19:43.404 --> 00:19:45.890
Reclose the DAG.

00:19:46.140 --> 00:19:49.494
So under the modal footer,

00:19:49.494 --> 00:19:57.204
we wouldn't need the button in the bottom.

00:19:57.204 --> 00:20:00.110
And the polar should be primary.

00:20:03.810 --> 00:20:07.520
Glass waves light.

00:20:13.260 --> 00:20:20.379
Eddie, I'll label where it can go with downtown indication.

00:20:20.379 --> 00:20:23.830
And for the click event on this button will invoke

00:20:23.830 --> 00:20:28.524
the login method from our type script file.

00:20:28.524 --> 00:20:30.684
So login component ds,

00:20:30.684 --> 00:20:33.200
your recalled a login method

00:20:44.040 --> 00:20:47.619
will add n dv waves effect.

00:20:47.619 --> 00:20:49.659
And for the button text,

00:20:49.659 --> 00:20:52.549
we can go with authentication.

00:21:00.000 --> 00:21:04.285
Now let's clear this state months.

00:21:04.285 --> 00:21:06.190
We'll make this dialogue more

00:21:06.190 --> 00:21:15.699
or more visible in

00:21:15.699 --> 00:21:17.410
terms of which tags,

00:21:17.410 --> 00:21:20.230
which tag, closest, which stack,

00:21:20.230 --> 00:21:23.839
and remove this spaces.

00:21:37.050 --> 00:21:39.894
Now let's go on there.

00:21:39.894 --> 00:21:45.970
Ap routing module that

00:21:45.970 --> 00:21:53.530
was set automatically by angular configuration or process.

00:21:53.530 --> 00:21:59.920
And we need to build our routing module here.

00:21:59.920 --> 00:22:09.980
So I imported component from components user reserve component.

00:22:10.350 --> 00:22:12.675
And we need to also import

00:22:12.675 --> 00:22:20.949
the login component from

00:22:20.949 --> 00:22:26.810
the components login and login component.

00:22:30.180 --> 00:22:34.495
And under the Routes section,

00:22:34.495 --> 00:22:38.660
we'll set the path for the users.

00:22:38.790 --> 00:22:41.124
And when the user,

00:22:41.124 --> 00:22:43.600
we'll navigate to the user pad.

00:22:43.600 --> 00:22:47.989
Component will be used.

00:22:49.050 --> 00:22:52.730
Let's make some space here.

00:22:52.770 --> 00:22:56.229
Now for the login,

00:22:56.229 --> 00:23:04.009
Pet, Login component will be used in this case.

00:23:07.680 --> 00:23:15.220
And if not, we need to also handle a specific case where

00:23:15.220 --> 00:23:22.209
we don't know the actual URL dot we need to redirect to.

00:23:22.209 --> 00:23:27.980
So by default, this will relate detected to the login component.

00:23:33.150 --> 00:23:37.269
How I would like to generate those specific garb.

00:23:37.269 --> 00:23:42.430
So energy generate Guard under God's folder,

00:23:42.430 --> 00:23:46.159
we should call it authentication.

00:23:46.680 --> 00:23:50.264
Which interface would you like to implement?

00:23:50.264 --> 00:23:55.290
I would go with the can activate interface.

00:23:55.540 --> 00:23:58.520
And lambda of the gods folder.

00:23:58.520 --> 00:24:03.209
You see that you have the authentication guarding place.

00:24:08.530 --> 00:24:12.469
And over here we need to implement business logic such

00:24:12.469 --> 00:24:16.669
as the users component will be able

00:24:16.669 --> 00:24:25.859
to be shown to the actual user only if it has the right to do it.

00:24:26.110 --> 00:24:30.409
So we need to do a check from the local storage,

00:24:30.409 --> 00:24:33.359
get item of user.

00:24:35.370 --> 00:24:40.269
This means that the user is authenticated.

00:24:40.269 --> 00:24:43.670
And in this case we return true.

00:24:50.640 --> 00:24:55.749
And if not, it means that the user is not

00:24:55.749 --> 00:25:00.985
authenticated and we need to redirect it to the login page.

00:25:00.985 --> 00:25:04.729
So the final return would be false.

00:25:09.360 --> 00:25:14.780
And we only worked on this router navigate.

00:25:22.980 --> 00:25:26.065
Let's set the constructor here.

00:25:26.065 --> 00:25:31.840
So the constructor will inject the router.

00:25:31.840 --> 00:25:38.720
And also let's import this an altar component.

00:25:39.210 --> 00:25:41.889
So now we can properly use

00:25:41.889 --> 00:25:47.629
this router component to navigate the user if it's not authenticated.

00:25:47.730 --> 00:25:52.489
Login component automatically.

00:25:54.810 --> 00:25:57.355
And thus greatly bottoms,

00:25:57.355 --> 00:26:03.589
we will return the URL and state that URL.

00:26:11.730 --> 00:26:19.495
Now let's go back to our routing module and use this God under the user's path.

00:26:19.495 --> 00:26:27.019
So can activate and will set in place the authentication we are.

00:26:28.290 --> 00:26:31.510
And we also need to import it.

00:26:31.510 --> 00:26:33.579
So a user will not be able

00:26:33.579 --> 00:26:42.379
to access the user's page if it's not authenticated to the system.

00:26:53.890 --> 00:27:01.590
Now let's look on our app to see how things are going.

00:27:10.330 --> 00:27:15.749
And you see here that we have some, some issues.

00:27:18.520 --> 00:27:24.210
So let's look on what exactly is happening.

00:27:29.350 --> 00:27:32.014
You see that?

00:27:32.014 --> 00:27:35.490
And the bootstrap seems to not work properly.

00:27:35.490 --> 00:27:42.895
And for this, let's make sure that under angular JSON file,

00:27:42.895 --> 00:27:50.500
we need to use the styles and the scripts corresponding data that

00:27:50.500 --> 00:27:57.269
we set up in our previous video on the build angular.module sections.

00:27:57.269 --> 00:28:02.079
So not this content that we added at the bottom.

00:28:02.079 --> 00:28:04.524
Please be careful with this.

00:28:04.524 --> 00:28:06.490
So you see here,

00:28:06.490 --> 00:28:10.944
I'll move this section.

00:28:10.944 --> 00:28:17.540
I'll beat up since we have two array of styles.

00:28:18.390 --> 00:28:22.040
And this should be set up here.

00:28:25.200 --> 00:28:29.244
And similar for the script, sorry,

00:28:29.244 --> 00:28:36.834
we should migrate it up there.

00:28:36.834 --> 00:28:41.479
This array.

00:28:44.820 --> 00:28:49.330
And for this to be taken into consideration,

00:28:49.330 --> 00:28:56.089
let's stop the server and actually started using MPM start.

00:28:58.890 --> 00:29:09.130
Now you see that app looks so much better now the dialogue,

00:29:09.130 --> 00:29:17.590
but though we need to do some additional improvements, sunder, app component,

00:29:17.590 --> 00:29:27.519
HTML, we need to fix this dialogue,

00:29:27.519 --> 00:29:29.739
so be careful with this also.

00:29:29.739 --> 00:29:35.830
So let's see this indentation process on

00:29:35.830 --> 00:29:43.600
the div statements and identified an error here.

00:29:43.600 --> 00:29:50.374
So body or far dialogue was President under the header.

00:29:50.374 --> 00:29:54.949
So be careful with this div indentation.

00:29:54.949 --> 00:29:59.549
So at the end you should have only four divs.

00:29:59.560 --> 00:30:05.570
And you see that the login component works now or no better way.

00:30:05.570 --> 00:30:10.319
Let's also add remove that string.

00:30:10.390 --> 00:30:14.449
Of course, you will have this source code o for the project

00:30:14.449 --> 00:30:18.660
that you can use as a reference.

00:30:19.390 --> 00:30:24.019
So let's go under app component, HTML editor.

00:30:24.019 --> 00:30:32.900
Move this. Now you see that the dialogue is present.

00:30:32.900 --> 00:30:35.450
And we should use the admin,

00:30:35.450 --> 00:30:38.750
admin and basically do authentication to

00:30:38.750 --> 00:30:42.665
those bring food application area direct the user's page,

00:30:42.665 --> 00:30:50.249
where you will see that the user's page actually is in place and working.
