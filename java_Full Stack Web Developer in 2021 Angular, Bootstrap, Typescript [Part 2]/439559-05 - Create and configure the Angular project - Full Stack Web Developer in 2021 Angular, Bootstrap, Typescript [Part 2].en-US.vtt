WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:07.810
Under this video, we'll set up the basic structure for our UI version of the application.

00:00:08.330 --> 00:00:14.730
So let's navigate to our projects folder.

00:00:14.730 --> 00:00:19.845
And next to the demo server application,

00:00:19.845 --> 00:00:24.270
we will need to create a demo UI project.

00:00:24.270 --> 00:00:28.090
So let's open the command prompt.

00:00:28.490 --> 00:00:31.500
And we should type in

00:00:31.500 --> 00:00:41.620
new demo UI that will generate our Angular project called demo UI.

00:00:46.380 --> 00:00:52.060
Would you like to add angular routing we should select, Yes.

00:00:52.060 --> 00:00:55.900
Which style sheet format would you like to use?

00:00:55.900 --> 00:00:58.970
We'll go with CSS.

00:01:01.350 --> 00:01:05.539
And now the packages are installed.

00:01:12.870 --> 00:01:16.810
Our speed up the video for you to do

00:01:16.810 --> 00:01:21.890
the final results of our installation packages process.

00:01:29.340 --> 00:01:34.220
So the packages were installed successfully.

00:01:34.830 --> 00:01:39.565
And now we need to navigate to our newly-created project.

00:01:39.565 --> 00:01:42.680
So cd demo UI,

00:01:44.220 --> 00:01:56.180
and use the code space dot that will open the project in our Visual Studio Code ID.

00:01:58.530 --> 00:02:05.275
So you see that this is the basic structure of an Angular application.

00:02:05.275 --> 00:02:12.950
Will have different folder setup already configured by Angular.

00:02:21.720 --> 00:02:27.205
And the first thing should be for us to navigate to the packages that

00:02:27.205 --> 00:02:31.690
JSON and also open

00:02:31.690 --> 00:02:38.050
a new terminal and under the script,

00:02:38.050 --> 00:02:42.220
so corresponding JSON statement.

00:02:42.220 --> 00:02:48.895
For the start, we need to set up NG serve minus minus o.

00:02:48.895 --> 00:02:52.570
And when we type in npm,

00:02:52.570 --> 00:02:55.449
start on the terminal.

00:02:55.449 --> 00:03:04.080
So the application will start and it will be opened automatically in our browser.

00:03:12.220 --> 00:03:17.310
Let's wait for the files to compile successfully.

00:03:20.800 --> 00:03:25.670
We can see that the angular ten is used

00:03:25.670 --> 00:03:30.605
under dependencies section from R packages that JSON.

00:03:30.605 --> 00:03:36.470
So all files are compiling now and in an automatic manner,

00:03:36.470 --> 00:03:40.800
the application which show up in our browser.

00:03:40.800 --> 00:03:47.900
Connected to local host 4,202, the corresponding port.

00:03:54.090 --> 00:04:02.990
So you see that the app is running and by default we will see this, this page.

00:04:12.930 --> 00:04:19.855
So let's, let's try to remove all that default content that comes

00:04:19.855 --> 00:04:27.235
with the with our app from the main page.

00:04:27.235 --> 00:04:32.725
So we need to navigate to app component, that HTML.

00:04:32.725 --> 00:04:35.935
And over here, you need to remove

00:04:35.935 --> 00:04:44.320
this entire content and

00:04:44.320 --> 00:04:51.530
leave only the router outlet that is used for the routing processing angular.

00:04:53.040 --> 00:04:56.300
So let's remove this.

00:04:58.800 --> 00:05:05.460
We see that sources were compiled successfully in an automatic way.

00:05:05.460 --> 00:05:11.135
And navigating back to local host 4,200.

00:05:11.135 --> 00:05:15.140
You see that that content has been removed.

00:05:15.140 --> 00:05:18.185
What for logging purposes,

00:05:18.185 --> 00:05:25.160
let's set up ACH for statement with the app is running.

00:05:25.160 --> 00:05:29.490
Just to see that the app is running in correct way.

00:05:38.020 --> 00:05:48.615
So now we should been together the MBI bootstrap framework to our Angular application.

00:05:48.615 --> 00:05:54.620
So navigated to Material Design for Bootstrap corresponding page.

00:05:55.740 --> 00:05:58.735
And you see here that

00:05:58.735 --> 00:06:06.490
MD Bootstrap can be integrated with server allo frameworks such as jQuery,

00:06:06.490 --> 00:06:10.285
Angular, React, and so on.

00:06:10.285 --> 00:06:17.780
So this is the main page of our frameworks that we will use as part of this course.

00:06:18.930 --> 00:06:21.655
Over here on the menu,

00:06:21.655 --> 00:06:31.465
you can search between several components that this framework allows us to work with.

00:06:31.465 --> 00:06:33.920
This framework, of course,

00:06:33.920 --> 00:06:36.310
will use the free version of it.

00:06:36.310 --> 00:06:41.210
That is also a paid version of the and the bootstrap framework.

00:06:44.850 --> 00:06:50.965
So I would like to invite you to investigate all these components,

00:06:50.965 --> 00:06:54.170
bottom group cards and so on.

00:06:56.310 --> 00:06:59.530
You see that this framework is very rich in terms

00:06:59.530 --> 00:07:05.420
of corresponding components that you can use.

00:07:09.960 --> 00:07:14.070
So the next step in our process is to.

00:07:14.070 --> 00:07:21.620
Of course, integrate in a way or another this framework Condor R0,

00:07:21.620 --> 00:07:27.630
basically empty Angular application that we just created earlier.

00:07:28.480 --> 00:07:30.785
In order to do this,

00:07:30.785 --> 00:07:35.210
let's go under our browser and type

00:07:35.210 --> 00:07:41.840
in Andi Bootstrap Angular configuration.

00:07:41.840 --> 00:07:45.670
So this should do open up.

00:07:45.670 --> 00:07:51.870
Let's open this angular installation guide.

00:07:55.600 --> 00:08:01.670
And you see here that there are several steps that we need to follow in

00:08:01.670 --> 00:08:07.770
order to properly been together the MD Bootstrap and our Angular project.

00:08:09.670 --> 00:08:12.470
So let's follow this.

00:08:12.470 --> 00:08:15.365
The first thing is to create an Angular project.

00:08:15.365 --> 00:08:17.255
We already done this.

00:08:17.255 --> 00:08:19.760
We have our demo UI.

00:08:19.760 --> 00:08:26.030
The next step is to install the angular Cdk.

00:08:26.030 --> 00:08:34.760
So let's see, copy paste this command and go to our Visual Studio code terminal.

00:08:34.760 --> 00:08:43.490
And create. Actually open a new terminal and copy paste this specific comment.

00:08:51.570 --> 00:08:54.710
And of course run it.

00:09:07.170 --> 00:09:12.250
You see that this requires angular version nine minimum,

00:09:12.250 --> 00:09:16.405
and we use Angular version ten as part of this course.

00:09:16.405 --> 00:09:25.020
Next thing is to install the NDP Angular on packages.

00:09:36.400 --> 00:09:40.380
So let's type in this command.

00:09:41.380 --> 00:09:47.910
So we'll install the angular and the bootstrap minus MD.

00:09:52.030 --> 00:09:55.970
And after this will be installed,

00:09:55.970 --> 00:09:59.165
we need to navigate to app module.js

00:09:59.165 --> 00:10:04.470
to do some specific configuration as part of this project.

00:10:09.390 --> 00:10:20.900
So the framework has been set up and installed in the packages that JSON file.

00:10:25.800 --> 00:10:30.320
Now under app model that yes.

00:10:32.280 --> 00:10:36.790
You see that we have the engine module already present.

00:10:36.790 --> 00:10:44.450
And we need to import the MDB bootstrap module from Angular bootstrap, MD.

00:10:46.650 --> 00:10:51.090
As this is a required step in order to properly.

00:10:51.090 --> 00:10:54.840
Configured and the bootstrap module four root.

00:11:02.440 --> 00:11:07.709
And now under the import section,

00:11:07.930 --> 00:11:12.860
let's insert the MDB bootstrap module four node

00:11:12.860 --> 00:11:22.290
element and save this file, of course.

00:11:41.010 --> 00:11:49.419
And now we need to go to our Angular.js JSON and update border styles and scripts arrays

00:11:49.419 --> 00:11:59.755
with specific data from and the bootstrap corresponding framework.

00:11:59.755 --> 00:12:02.840
So let's do this.

00:12:05.550 --> 00:12:09.650
So we'll copy paste this section.

00:12:19.950 --> 00:12:24.520
So let's go under the styles.

00:12:24.520 --> 00:12:26.860
And over here, let's base

00:12:26.860 --> 00:12:32.050
this OK. And be sure

00:12:32.050 --> 00:12:37.450
to use the CSS styles file since he,

00:12:37.450 --> 00:12:38.580
if you recall, our Angular,

00:12:38.580 --> 00:12:41.600
our project is based on CSS.

00:12:45.960 --> 00:12:51.800
And now let's copy-paste scripts array.

00:13:01.990 --> 00:13:09.900
So we set up under the Scripts are a from our angular Children's Zone file.

00:13:12.130 --> 00:13:17.255
And now we need to install specific external libraries.

00:13:17.255 --> 00:13:23.100
Jazz chart formed as some hammered GS animate.

00:13:25.990 --> 00:13:29.850
So let's go to our terminal.

00:13:32.560 --> 00:13:37.080
And I just copy pasted that command.

00:13:45.120 --> 00:13:49.700
All the libraries work properly installed.

00:13:54.480 --> 00:14:00.475
And let's restart the application to also remove that too.

00:14:00.475 --> 00:14:02.290
That was showing in

00:14:02.290 --> 00:14:04.070
the logs

00:14:13.740 --> 00:14:15.040
weight

00:14:15.040 --> 00:14:15.280
for

00:14:15.280 --> 00:14:18.820
all files to properly compile using also

00:14:18.820 --> 00:14:27.620
the bootstrap specific files and also the libraries that we just installed.

00:14:31.380 --> 00:14:35.810
So all components are compiling now.

00:14:42.450 --> 00:14:52.490
And you see that we can navigate back to the browser on local was 4,200 port.

00:15:06.150 --> 00:15:13.830
And now we will set up the initial structure of our project in terms of components.

00:15:13.830 --> 00:15:19.579
So we'll generate a new component called user,

00:15:19.579 --> 00:15:24.630
and this will be set under the components folder.

00:15:26.740 --> 00:15:30.590
So we have user component HTML,

00:15:30.590 --> 00:15:35.460
User component ts, the type script file.

00:15:44.710 --> 00:15:48.380
And you can see under the app Model Ts,

00:15:48.380 --> 00:15:54.500
the user component has been automatically configured here under the declarations.

00:15:54.500 --> 00:15:56.940
Alright.

00:15:59.260 --> 00:16:05.490
Now we will generate a corresponding service.

00:16:05.560 --> 00:16:12.240
So this will be set under the services folder and will be called user.

00:16:14.050 --> 00:16:22.410
This will be used to properly interact with spring Voto server application.

00:16:29.170 --> 00:16:37.770
So under services you see that user service TS has been set up.

00:16:40.960 --> 00:16:45.210
So the basic structure is in place now.
