WEBVTT
1
00:00:01.787 --> 00:00:05.168
The last key feature we'll discuss is how Spring Boot takes an

2
00:00:05.168 --> 00:00:08.719
opinionated view of building Spring-based applications.

3
00:00:08.719 --> 00:00:12.583
As I mentioned earlier, don't think of this as a bad thing,

4
00:00:12.583 --> 00:00:16.967
like, you must do it this way, or you must do it that way,

5
00:00:16.967 --> 00:00:17.561
or else.

6
00:00:17.561 --> 00:00:22.472
When you're building Java applications, you have tons of choices,

7
00:00:22.472 --> 00:00:24.677
everything from the type of web framework,

8
00:00:24.677 --> 00:00:27.417
to the logging framework, to the collection framework,

9
00:00:27.417 --> 00:00:30.748
to the build tool you use and so on.

10
00:00:30.748 --> 00:00:35.739
If a developer is new to this space, the choices can be certainly overwhelming.

11
00:00:35.739 --> 00:00:37.520
And even if they're not new,

12
00:00:37.520 --> 00:00:41.377
they usually end up making the same choices based on

13
00:00:41.377 --> 00:00:43.749
established standards and popularity.

14
00:00:43.749 --> 00:00:47.224
Spring Boot helps remove this burden so that the developer

15
00:00:47.224 --> 00:00:50.261
can get up and running as fast as possible,

16
00:00:50.261 --> 00:00:54.096
which in turn means they spend more time focusing on

17
00:00:54.096 --> 00:00:57.613
writing code that actually solves a need.

18
00:00:57.613 --> 00:01:01.752
And although Spring Boot is opinionated in its choices and setup,

19
00:01:01.752 --> 00:01:06.001
it's really more of a soft opinion because it makes it easy to

20
00:01:06.001 --> 00:01:09.505
override any of those pre-determined choices.

21
00:01:09.505 --> 00:01:15.034
To give you an example, let's open up a web browser and visit start.

22
00:01:15.034 --> 00:01:15.429
spring.

23
00:01:15.429 --> 00:01:15.824
io.

24
00:01:15.824 --> 00:01:19.815
This is a tool provided by Spring Boot called Spring Initializer,

25
00:01:19.815 --> 00:01:23.208
and Spring Initializer is a great example of how developers

26
00:01:23.208 --> 00:01:27.357
can take advantage of Spring Boot's opinionated setup and get

27
00:01:27.357 --> 00:01:29.270
started as quickly as possible.

28
00:01:29.270 --> 00:01:33.896
The developer simply tells it what type of functionality they need,

29
00:01:33.896 --> 00:01:38.795
such as web, or security, or JDBC databases,

30
00:01:38.795 --> 00:01:40.567
they click Generate project,

31
00:01:40.567 --> 00:01:43.854
and it automatically creates and downloads a

32
00:01:43.854 --> 00:01:46.369
fully-functional Spring Boot application.

33
00:01:46.369 --> 00:01:54.000
The developer can then unzip this and use it as an initial starting point for their application.

