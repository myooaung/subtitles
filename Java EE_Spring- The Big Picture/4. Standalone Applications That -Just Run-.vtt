WEBVTT
1
00:00:01.908 --> 00:00:06.450
Next up, let's talk about the second key feature of Spring Boot,

2
00:00:06.450 --> 00:00:07.207
being standalone.

3
00:00:07.207 --> 00:00:10.754
Spring Boot makes it easy to create standalone,

4
00:00:10.754 --> 00:00:13.718
production-grade, Spring-based applications that just run.

5
00:00:13.718 --> 00:00:17.895
Now for someone who isn't intimately familiar with

6
00:00:17.895 --> 00:00:22.384
Java web application development, this may not seem like that big of a deal.

7
00:00:22.384 --> 00:00:24.749
I mean, how hard could it be?

8
00:00:24.749 --> 00:00:28.534
You just double-click the application or you run a single command, right?

9
00:00:28.534 --> 00:00:29.432
Well, not exactly.

10
00:00:29.432 --> 00:00:33.085
That's not how a typical Java web application is run.

11
00:00:33.085 --> 00:00:37.232
To really understand how impactful it is for Spring Boot to be standalone,

12
00:00:37.232 --> 00:00:42.121
let's look at how a typical Java web application is run.

13
00:00:42.121 --> 00:00:43.547
First, you package the application.

14
00:00:43.547 --> 00:00:46.897
You can think of this as zipping up the directory of

15
00:00:46.897 --> 00:00:48.927
files that make up the application.

16
00:00:48.927 --> 00:00:52.802
Then you have to choose a web server for the web application to run on,

17
00:00:52.802 --> 00:00:54.778
and there's several different choices,

18
00:00:54.778 --> 00:00:58.891
and each web server is going to offer many different unique features.

19
00:00:58.891 --> 00:01:03.442
So some offer a lot of features, while others are more bare bones.

20
00:01:03.442 --> 00:01:05.819
And once you've decided what server to use,

21
00:01:05.819 --> 00:01:08.459
you have to download and configure that web server.

22
00:01:08.459 --> 00:01:12.523
And again, depending on the number of features that the web server has,

23
00:01:12.523 --> 00:01:17.019
this configuration step could be extremely involved or relatively simple.

24
00:01:17.019 --> 00:01:21.065
You then deploy your application to the web server.

25
00:01:21.065 --> 00:01:25.782
This usually means copying the application package to a specific directory

26
00:01:25.782 --> 00:01:30.088
or uploading it to the web server via a web browser.

27
00:01:30.088 --> 00:01:33.006
And lastly, you start the web application server,

28
00:01:33.006 --> 00:01:36.614
which in turn starts your web application.

29
00:01:36.614 --> 00:01:41.090
With Spring Boot applications being standalone, they simply just run.

30
00:01:41.090 --> 00:01:41.479
Seriously.

31
00:01:41.479 --> 00:01:47.464
All you have to do is package the application and run it with a single command,

32
00:01:47.464 --> 00:01:51.439
java -jar, and then the name of the package that's your application.

33
00:01:51.439 --> 00:01:56.451
Spring Boot takes care of the rest by starting an embedded web server within

34
00:01:56.451 --> 00:02:05.000
your application and configures it with some sensible defaults, and then begins serving up your application.

