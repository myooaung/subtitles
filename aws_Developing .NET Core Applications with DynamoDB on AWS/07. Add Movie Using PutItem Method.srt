1
00:00:02,155 --> 00:00:05,429
Now we want to be able to add movies with the user's ranking.

2
00:00:05,429 --> 00:00:07,244
Inside our Controller class,

3
00:00:07,244 --> 00:00:10,867
we'll use the same code that we created previously and

4
00:00:10,867 --> 00:00:16,604
head along to our MovieRankService class.

5
00:00:16,604 --> 00:00:18,091
Inside our MovieRankService class,

6
00:00:18,091 --> 00:00:22,246
we need to add code needed to map the request that we get from

7
00:00:22,246 --> 00:00:26,608
the users into a document model that DynamoDB expects when

8
00:00:26,608 --> 00:00:29,420
adding items to our DynamoDB table.

9
00:00:29,420 --> 00:00:33,802
We'll head over to the Mapper class,

10
00:00:33,802 --> 00:00:39,168
and we'll add a method with a return type of Document named ToDocumentModel.

11
00:00:39,168 --> 00:00:46,222
This method will have two parameters, userId and MovieRankRequest.

12
00:00:46,222 --> 00:00:48,609
Inside our method, we will return a new document,

13
00:00:48,609 --> 00:00:53,849
and map each of the properties in our MovieAddRequest class to our

14
00:00:53,849 --> 00:00:58,294
corresponding DynamoDB properties inside our MovieRank table.

15
00:00:58,294 --> 00:01:02,007
We will add this method to our interface,

16
00:01:02,007 --> 00:01:05,975
and we'll head over to MovieRankRepository class.

17
00:01:05,975 --> 00:01:10,293
Inside our MovieRankRepository class, we will add a method,

18
00:01:10,293 --> 00:01:14,794
AddMovie, and add the document that we created in our mapper.

19
00:01:14,794 --> 00:01:17,576
We will use the PutItemAsync method,

20
00:01:17,576 --> 00:01:27,000
and pass in the documentModel to add our movie to our MovieRank DynamoDB table. We will also add this method to our interface.

