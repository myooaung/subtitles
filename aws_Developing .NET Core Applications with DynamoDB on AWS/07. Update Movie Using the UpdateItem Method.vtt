WEBVTT
1
00:00:02.455 --> 00:00:05.210
Sometimes users might want to change their ranking on a

2
00:00:05.210 --> 00:00:07.117
movie that they have already ranked,

3
00:00:07.117 --> 00:00:11.679
so we have an endpoint set up that allows them to

4
00:00:11.679 --> 00:00:13.741
update an existing ranked movie.

5
00:00:13.741 --> 00:00:15.487
Starting off in our Controller class,

6
00:00:15.487 --> 00:00:19.024
we have our previously-created UpdateMovie method that

7
00:00:19.024 --> 00:00:23.604
calls off to our MovieRankService class.

8
00:00:23.604 --> 00:00:27.042
Inside our method UpdateMovie and the MovieRankService class,

9
00:00:27.042 --> 00:00:34.787
we call off to the UpdateMovie method in our MovieRankRepository class.

10
00:00:34.787 --> 00:00:37.193
Inside our MovieRankRepository class,

11
00:00:37.193 --> 00:00:41.362
we'll be creating a method named UpdateMovie with userId

12
00:00:41.362 --> 00:00:45.336
and MovieUpdateRequest as parameters.

13
00:00:45.336 --> 00:00:49.161
Inside our method, we need to build up an UpdateItemRequest.

14
00:00:49.161 --> 00:00:56.463
We set the TableName, then we set the table's partition and sort key.

15
00:00:56.463 --> 00:01:00.352
We new up a new Dictionary of type string and AttributeValue,

16
00:01:00.352 --> 00:01:04.104
and set our UserId, which is our partition key,

17
00:01:04.104 --> 00:01:08.387
and our MovieName, which is our sort key.

18
00:01:08.387 --> 00:01:11.136
We then want to set the AttributeUpdates.

19
00:01:11.136 --> 00:01:14.085
The attributes that we want to set are the properties that

20
00:01:14.085 --> 00:01:16.038
we want to update on our MovieRank table.

21
00:01:16.038 --> 00:01:22.806
We new up a new Dictionary of type string and AttributeValueUpdate.

22
00:01:22.806 --> 00:01:25.434
We then set the first property we want to update as Ranking.

23
00:01:25.434 --> 00:01:28.386
We need to new up a new AttributeValueUpdate,

24
00:01:28.386 --> 00:01:32.925
and pass in the Action that we want to perform.

25
00:01:32.925 --> 00:01:36.734
In our case, we want to use PUT.

26
00:01:36.734 --> 00:01:38.688
And then set the value we want to update,

27
00:01:38.688 --> 00:01:44.224
the ranking from our updateRequest that was passed in by our user.

28
00:01:44.224 --> 00:01:47.206
We set the same thing for our RankedDateTime and

29
00:01:47.206 --> 00:01:49.764
set the value as DateTime.UtcNow.

30
00:01:49.764 --> 00:01:54.180
Once we have our UpdateItemRequest built,

31
00:01:54.180 --> 00:01:58.994
we can use DynamoDB's UpdateItemAsync method,

32
00:01:58.994 --> 00:02:03.700
and pass in the UpdateItem request.

33
00:02:03.700 --> 00:02:06.152
It's worth pointing out now that we are building a lot of

34
00:02:06.152 --> 00:02:10.021
requests inside the methods in our Repository class,

35
00:02:10.021 --> 00:02:14.956
the UpdateItemRequest, GetItemRequest, PutItemRequest,

36
00:02:14.956 --> 00:02:15.823
etc.

37
00:02:15.823 --> 00:02:20.477
These ItemRequests belong in their own method and class,

38
00:02:20.477 --> 00:02:23.311
something like ItemRequestBuilder; however,

39
00:02:23.311 --> 00:02:27.489
I've added them to the methods inside this class for now to more

40
00:02:27.489 --> 00:02:32.370
clearly show the request that we need to build for each DynamoDB call

41
00:02:32.370 --> 00:02:34.711
that we are using from within our methods.

42
00:02:34.711 --> 00:02:43.000
We will add our newly-created UpdateMovieMethod to our IMovieRankRepository interface.

