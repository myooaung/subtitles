1
00:00:03,648 --> 00:00:07,889
We want to allow our users to update movies that they have already ranked.

2
00:00:07,889 --> 00:00:09,985
Starting off in our Controller class,

3
00:00:09,985 --> 00:00:14,132
we can use the existing UpdateMovie method that calls

4
00:00:14,132 --> 00:00:17,251
off to our MovieRankService class.

5
00:00:17,251 --> 00:00:19,574
Inside our MovieRankService class,

6
00:00:19,574 --> 00:00:23,806
we first call off to DynamoDB to get an existing movie using the code that

7
00:00:23,806 --> 00:00:27,943
we have already implemented in our Repository class.

8
00:00:27,943 --> 00:00:32,114
We then need to map the response that we get back from DynamoDB,

9
00:00:32,114 --> 00:00:37,610
and also add our updated values from our user.

10
00:00:37,610 --> 00:00:40,722
We need to open up our Mapper class and add an overload

11
00:00:40,722 --> 00:00:45,539
method to accept three parameters, userId,

12
00:00:45,539 --> 00:00:48,895
MovieResponse, and MovieUpdateRequest.

13
00:00:48,895 --> 00:00:51,719
Inside our method, we'll return a new document,

14
00:00:51,719 --> 00:00:58,787
and we'll map our items to the corresponding DynamoDB properties.

15
00:00:58,787 --> 00:01:02,188
The only property that we'll be updating will be the Ranking.

16
00:01:02,188 --> 00:01:06,115
I have mapped the Ranking DynamoDB property to our

17
00:01:06,115 --> 00:01:07,331
MovieUpdateRequest parameter argument,

18
00:01:07,331 --> 00:01:13,073
so we can add the new ranking that the user has given the movie.

19
00:01:13,073 --> 00:01:15,972
We'll add this method to our IMapper interface.

20
00:01:15,972 --> 00:01:19,447
Inside our MovieRankRepository class,

21
00:01:19,447 --> 00:01:21,985
we create a method named UpdateMovie with our

22
00:01:21,985 --> 00:01:25,279
documentModel that we created in our mapper.

23
00:01:25,279 --> 00:01:28,663
Inside our method, we can use the UpdateItemAsync method,

24
00:01:28,663 --> 00:01:36,000
and pass in our documentModel. As usual, we'll add this method to our interface.

