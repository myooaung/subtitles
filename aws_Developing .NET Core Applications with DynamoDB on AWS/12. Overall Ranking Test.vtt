WEBVTT
1
00:00:00.540 --> 00:00:05.480
For our last test, we will be testing the GetMoviesRankingEndpoint.

2
00:00:05.480 --> 00:00:10.140
This endpoint gives us back the overall ranking of our requested movie.

3
00:00:10.140 --> 00:00:13.540
This endpoint uses our secondary index.

4
00:00:13.540 --> 00:00:16.410
We will add the fact attribute and name our task

5
00:00:16.410 --> 00:00:20.640
GetMoviesRankingReturnsAnOverallMovieRanking.

6
00:00:20.640 --> 00:00:24.640
We add a userId constant and set this to 5.

7
00:00:24.640 --> 00:00:27.840
We also add a movieName constant.

8
00:00:27.840 --> 00:00:30.260
We want to add data to our movie rank table,

9
00:00:30.260 --> 00:00:36.540
so we call off to our AddMovieRankData and pass in the userId and movieName.

10
00:00:36.540 --> 00:00:41.900
Using the GetAsync method, we call off to our GetMoviesRankingEndpoint. The

11
00:00:41.900 --> 00:00:47.840
route for this endpoint is movies/ movieName /ranking.

12
00:00:47.840 --> 00:00:51.070
We want to read the response and deserialize it into

13
00:00:51.070 --> 00:00:53.640
our MovieRankResponse contract.

14
00:00:53.640 --> 00:00:59.640
We will add an Assert to check that the MovieRankResponse contract is not null.

15
00:00:59.640 --> 00:01:02.290
You might want to add further tests for this endpoint,

16
00:01:02.290 --> 00:01:06.840
such as ensuring the correct overall ranking is returned.

17
00:01:06.840 --> 00:01:11.340
Let's now run all of our tests to ensure they're all passing.

18
00:01:11.340 --> 00:01:17.000
We have now added a few tests that test each found movie rank solutions endpoints.

