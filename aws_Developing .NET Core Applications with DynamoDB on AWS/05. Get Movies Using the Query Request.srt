1
00:00:01,982 --> 00:00:06,104
Let's add the GetUsersRankedMoviesByMovieName.

2
00:00:06,104 --> 00:00:11,394
Inside our Controller class, we can leave the existing code as is.

3
00:00:11,394 --> 00:00:15,450
Inside our MovieRankService class, we call off to our Repository class,

4
00:00:15,450 --> 00:00:20,815
and store the response that we get back inside the Response variable.

5
00:00:20,815 --> 00:00:25,606
We then map the response we get back into our MovieRankContract class.

6
00:00:25,606 --> 00:00:28,875
If we head over to our Mapper class,

7
00:00:28,875 --> 00:00:31,569
we need to add another ToMovieContract overload method.

8
00:00:31,569 --> 00:00:35,214
We will create this overload method to have a return

9
00:00:35,214 --> 00:00:40,412
type of IEnumerable MovieResponse, and inside this method's parameters,

10
00:00:40,412 --> 00:00:43,001
we'll use the QueryResponse.

11
00:00:43,001 --> 00:00:45,843
We use the same call that we have in our method above.

12
00:00:45,843 --> 00:00:51,099
Using the link Select method, we call off to the existing method below.

13
00:00:51,099 --> 00:00:55,823
We then need to add this new method to our interface.

14
00:00:55,823 --> 00:00:57,438
Inside our MovieResponse class,

15
00:00:57,438 --> 00:01:01,421
we need to create a method with a return type of Task QueryResponse,

16
00:01:01,421 --> 00:01:06,666
and call our method GetUsersRankedMoviesByMovieTitle,

17
00:01:06,666 --> 00:01:11,195
and pass in the userId and the movieName.

18
00:01:11,195 --> 00:01:13,410
Any time we use DynamoDB's QueryAsync method,

19
00:01:13,410 --> 00:01:17,236
we need to create a query request to be passed in.

20
00:01:17,236 --> 00:01:23,772
Inside our method, we'll new up a QueryRequest, and set the TableName.

21
00:01:23,772 --> 00:01:27,278
We will now add a KeyConditionExpression.

22
00:01:27,278 --> 00:01:32,061
This is where we tell DynamoDB on what conditions to query on.

23
00:01:32,061 --> 00:01:36,299
If we say UserId equals :userId,

24
00:01:36,299 --> 00:01:39,172
this is saying that for the table property UserId,

25
00:01:39,172 --> 00:01:43,474
we want to equal the UserId parameter argument that

26
00:01:43,474 --> 00:01:45,360
is being passed in to this method.

27
00:01:45,360 --> 00:01:49,390
Notice I have a colon set before my parameter argument,

28
00:01:49,390 --> 00:01:52,605
this is really important and something that DynamoDB expects.

29
00:01:52,605 --> 00:01:57,524
If you don't have this, you'll get an error when executing this method.

30
00:01:57,524 --> 00:02:03,908
We also want to query on the first letter or first word of the movie name.

31
00:02:03,908 --> 00:02:11,697
We add and begins_with and in parentheses, MovieName, :movieName.

32
00:02:11,697 --> 00:02:15,371
We now need to set the expression attribute values.

33
00:02:15,371 --> 00:02:17,924
This is similar to the key that we set in our

34
00:02:17,924 --> 00:02:21,689
GetItemRequest in our GetMovie method.

35
00:02:21,689 --> 00:02:24,657
We say ExpressionAttributeValues equals new Dictionary

36
00:02:24,657 --> 00:02:32,122
of type string and AttributeValue, then set :userId as the Dictionary key,

37
00:02:32,122 --> 00:02:36,572
and new AttributeValue set to our parameter arguments.

38
00:02:36,572 --> 00:02:41,823
We do the same for our movieName.

39
00:02:41,823 --> 00:02:42,898
Using the _dynamoDbClient,

40
00:02:42,898 --> 00:02:54,000
we use the QueryAsync method and pass in the QueryRequest, and we add this to our IMovieRankRepository interface.

