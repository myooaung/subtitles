1
00:00:02,140 --> 00:00:03,580
In this demonstration,

2
00:00:03,580 --> 00:00:06,600
we're going to be working with CloudWatch metrics and alarms.

3
00:00:06,600 --> 00:00:09,670
We're also going to be working with the CloudWatch agent on one of our

4
00:00:09,670 --> 00:00:12,640
EC2 instances. Throughout this demonstration, we're going to be working

5
00:00:12,640 --> 00:00:16,280
with the AWS console, and follow along with this demonstration, you

6
00:00:16,280 --> 00:00:18,140
will need your own AWS account.

7
00:00:18,140 --> 00:00:21,970
A little bit of caution here, anything you deploy to AWS might cost you

8
00:00:21,970 --> 00:00:24,640
money, so by following along in this demonstration,

9
00:00:24,640 --> 00:00:26,840
you may incur charges.

10
00:00:26,840 --> 00:00:29,860
I am back in the AWS console, specifically the

11
00:00:29,860 --> 00:00:32,740
CloudWatch dashboard, in the London region.

12
00:00:32,740 --> 00:00:37,000
Let's start off by selecting Metrics. So here you can see there is over

13
00:00:37,000 --> 00:00:42,290
2000 metrics for London region organized into namespaces. We can see

14
00:00:42,290 --> 00:00:48,210
here custom namespaces, and if I scroll down a little bit, we can see

15
00:00:48,210 --> 00:00:53,440
AWS Namespaces. Let's select EC2.

16
00:00:53,440 --> 00:00:58,750
Inside the EC2 namespace then, we can see different dimensions that we

17
00:00:58,750 --> 00:01:01,540
can use to see groups of metrics in different ways.

18
00:01:01,540 --> 00:01:05,710
So you can see here Per‑Instance Metrics and metrics by autoscale

19
00:01:05,710 --> 00:01:10,040
group. Let's select the Per‑Instance Metrics first.

20
00:01:10,040 --> 00:01:15,240
So here we can see things like Instance Name, Instanceid, and Metric Names.

21
00:01:15,240 --> 00:01:19,240
For the minute what I'm interested in is CPUUtilization,

22
00:01:19,240 --> 00:01:20,700
and we could see an example of that here for

23
00:01:20,700 --> 00:01:24,940
WebServer2. So let's select that metric,

24
00:01:24,940 --> 00:01:28,380
and we can see that metric added to our graph, but how does WebServer2

25
00:01:28,380 --> 00:01:32,540
CPU utilization compare with my other web servers?

26
00:01:32,540 --> 00:01:36,100
Now we see drop‑down option next to CPUUtilization.

27
00:01:36,100 --> 00:01:40,240
Let's select that and then select Add to search.

28
00:01:40,240 --> 00:01:43,890
So now we can see the CPUUtilization metric for a bunch of

29
00:01:43,890 --> 00:01:46,400
instances. I'm going to select a few of those instances.

30
00:01:46,400 --> 00:01:48,860
So WebServer2 is already selected, let's have in there

31
00:01:48,860 --> 00:01:53,580
WebServer 1, 3, 4, and 5. And now we can see the CPU

32
00:01:53,580 --> 00:01:55,700
utilization in relation to each other.

33
00:01:55,700 --> 00:01:57,480
Right now, we'll use our line graph,

34
00:01:57,480 --> 00:02:02,640
so let's click on the drop‑down next to line and select Pie.

35
00:02:02,640 --> 00:02:05,840
Here, we've got the same details then, but now it's a pie chart.

36
00:02:05,840 --> 00:02:06,540
If you have time,

37
00:02:06,540 --> 00:02:09,830
spend a few minutes and have a look at the different graphing options.

38
00:02:09,830 --> 00:02:13,430
Let's give our graph a name. So WebserverCPU there, and then

39
00:02:13,430 --> 00:02:16,540
on the Actions, let's say Add to dashboard.

40
00:02:16,540 --> 00:02:20,440
So here, let's say, create a new dashboard and give it a name.

41
00:02:20,440 --> 00:02:23,800
We can see widgets that allows us to display information in different ways.

42
00:02:23,800 --> 00:02:28,440
I map with pie there, so now we can click Add to dashboard.

43
00:02:28,440 --> 00:02:31,550
Let's add a couple more metrics to this dashboard. So here you can

44
00:02:31,550 --> 00:02:34,360
see we've added packetsIn and packetsOut metrics.

45
00:02:34,360 --> 00:02:37,730
I want to keep this dashboard so I can click Save dashboard, and

46
00:02:37,730 --> 00:02:40,280
again, notice how you can change the timeframes.

47
00:02:40,280 --> 00:02:43,240
So if I change to 3 hours,

48
00:02:43,240 --> 00:02:48,610
12 hours, or 1 hour, we can see the data change in reflection

49
00:02:48,610 --> 00:02:52,030
of that new timeframe. Let's go back to metrics and look at

50
00:02:52,030 --> 00:02:55,540
that WebserverCPU metric again.

51
00:02:55,540 --> 00:02:58,050
So we're back looking at our CPU utilization metrics

52
00:02:58,050 --> 00:02:59,840
for our different web servers.

53
00:02:59,840 --> 00:03:03,210
If I click on Graphed metrics, here,

54
00:03:03,210 --> 00:03:05,740
we could do a bit more of our metric information.

55
00:03:05,740 --> 00:03:07,000
Let's take Webserver4,

56
00:03:07,000 --> 00:03:10,400
for example. Over on the right‑hand side here, we have actions.

57
00:03:10,400 --> 00:03:13,280
Let's have look at a couple of these.

58
00:03:13,280 --> 00:03:16,310
The first action here enables anomaly detection.

59
00:03:16,310 --> 00:03:20,040
This can be useful if you want to be alerted about anomalous activity.

60
00:03:20,040 --> 00:03:22,420
We could also duplicate this metric so we can view the

61
00:03:22,420 --> 00:03:26,320
information in a slightly different way on the same chart and

62
00:03:26,320 --> 00:03:27,910
we can create an alarm for this metric.

63
00:03:27,910 --> 00:03:31,530
So if we hover over the little bell here and select that, it

64
00:03:31,530 --> 00:03:34,540
takes us to the Create alarm wizard. In this wizard, we've

65
00:03:34,540 --> 00:03:36,140
already got the metric selected.

66
00:03:36,140 --> 00:03:38,240
So let's put in some of the values.

67
00:03:38,240 --> 00:03:44,240
I want to be informed if CPU utilization is greater than 80%.

68
00:03:44,240 --> 00:03:46,610
We've also got greater than our equals here,

69
00:03:46,610 --> 00:03:49,980
lower than our equals here, or lower than. I'll stick to

70
00:03:49,980 --> 00:03:54,990
this greater threshold and 80%. If we say next, so if this

71
00:03:54,990 --> 00:03:57,040
alarm goes into alarm state,

72
00:03:57,040 --> 00:04:02,060
I want to be notified. With Select an existing SNS topic selected, we

73
00:04:02,060 --> 00:04:06,640
can use the search option here to choose an SNS topic.

74
00:04:06,640 --> 00:04:08,840
So when this alarm is in alarm state,

75
00:04:08,840 --> 00:04:11,820
it'll send a message to this topic called informMe who

76
00:04:11,820 --> 00:04:14,340
will in turn inform all its subscribers.

77
00:04:14,340 --> 00:04:16,960
Now this is the only action I want for my alarm. So

78
00:04:16,960 --> 00:04:18,310
if I scroll to the bottom now,

79
00:04:18,310 --> 00:04:22,520
I can select Next. We now provide a name for the alarm and an

80
00:04:22,520 --> 00:04:26,640
optional description, and then Next again. We review our settings

81
00:04:26,640 --> 00:04:30,140
and here you can see the current CPU utilization and the threshold

82
00:04:30,140 --> 00:04:32,970
that will generate the alarm, and if we're happy with everything,

83
00:04:32,970 --> 00:04:35,640
we say Create alarm.

84
00:04:35,640 --> 00:04:40,500
So here we have our alarm created and notice its status Insufficient data.

85
00:04:40,500 --> 00:04:43,700
It'll take a few minutes to gather enough information to make a determination,

86
00:04:43,700 --> 00:04:47,240
that's why we have to go to the alarm state or the OK state.

87
00:04:47,240 --> 00:04:50,710
And we should find with these web servers that their CPU utilization is well

88
00:04:50,710 --> 00:04:55,090
below 80%, so this alarm should transition to the OK state. And here, we can

89
00:04:55,090 --> 00:04:58,180
see it's gone to the OK state. If you have time,

90
00:04:58,180 --> 00:05:01,540
play around with metrics and create alarms from them.

91
00:05:01,540 --> 00:05:04,280
Bear in mind, though, I'm seeing lots of metrics in my

92
00:05:04,280 --> 00:05:11,000
CloudWatch dashboard because I've got lots of AWS services deployed to the London region.

