WEBVTT
1
00:00:02.340 --> 00:00:05.950
In this demonstration, we're going to look at querying logs in CloudWatch.

2
00:00:05.950 --> 00:00:06.970
Throughout this demonstration,

3
00:00:06.970 --> 00:00:10.270
we're going to be working with the AWS console, and follow along with

4
00:00:10.270 --> 00:00:14.440
demonstration, you will need your own AWS account. A note of caution here,

5
00:00:14.440 --> 00:00:17.040
anything you deploy to AWS can cost you money.

6
00:00:17.040 --> 00:00:22.740
So by following along in this demonstration, you may incur costs.

7
00:00:22.740 --> 00:00:25.310
I'm back in the AWS console, specifically the

8
00:00:25.310 --> 00:00:27.590
CloudWatch dashboard in the London region.

9
00:00:27.590 --> 00:00:31.690
Let's select Log groups, and through here, I'm going to select

10
00:00:31.690 --> 00:00:36.240
the Globomantics‑CloudTrail‑Logs log group.

11
00:00:36.240 --> 00:00:40.080
This log group contains log streams sent here from CloudTrail, so

12
00:00:40.080 --> 00:00:43.450
let's minimize the log group details, and here, we can see my

13
00:00:43.450 --> 00:00:47.190
CloudTrail log stream so let's select that, and here we can see

14
00:00:47.190 --> 00:00:49.740
entries sent to CloudWatch from CloudTrail.

15
00:00:49.740 --> 00:00:54.380
Now we can just look at the events through here and see their details, but

16
00:00:54.380 --> 00:00:58.840
let's go to Actions and select View in Logs insights.

17
00:00:58.840 --> 00:01:01.470
We're in log insights that has already being filtered

18
00:01:01.470 --> 00:01:03.440
for the specific CloudTrail log.

19
00:01:03.440 --> 00:01:07.540
If I just say Run query here,

20
00:01:07.540 --> 00:01:10.440
it will just show us all the entries in this log

21
00:01:10.440 --> 00:01:12.940
sorted by timestamp and message.

22
00:01:12.940 --> 00:01:15.640
Let's change the query a little bit.

23
00:01:15.640 --> 00:01:18.040
We've added a couple of extra lines here.

24
00:01:18.040 --> 00:01:21.680
This sort line tells of insights which column it should sort

25
00:01:21.680 --> 00:01:25.580
information on, and in this example, they should sort the

26
00:01:25.580 --> 00:01:27.240
information in descending order.

27
00:01:27.240 --> 00:01:30.020
We're also going to limit our results to 20 results.

28
00:01:30.020 --> 00:01:35.410
So if I run this query, now we're only showing 20 results.

29
00:01:35.410 --> 00:01:38.380
And if I scroll down, we can see those results.

30
00:01:38.380 --> 00:01:42.040
Let's change the query a bit more. This time,

31
00:01:42.040 --> 00:01:45.840
as well as the existing lines in our query, we're adding an extra filter so

32
00:01:45.840 --> 00:01:51.240
that all items returned must have an AWS region of us‑east‑1.

33
00:01:51.240 --> 00:01:54.340
If we scroll down, we can see all those entries,

34
00:01:54.340 --> 00:02:00.440
and each one of these will have us‑east‑1 as the AWS region.

35
00:02:00.440 --> 00:02:02.340
Let's change our query again.

36
00:02:02.340 --> 00:02:07.140
This time, we're asking our query to make a count based on the AWS region.

37
00:02:07.140 --> 00:02:12.130
So if I run this query and view the results, we can see the results for

38
00:02:12.130 --> 00:02:17.840
each AWS region, so us‑east‑1 has a count of 404 entries in the log,

39
00:02:17.840 --> 00:02:24.760
eu‑west‑2, 1651, so that's really useful, but can we view this

40
00:02:24.760 --> 00:02:29.930
information a slightly different way? If I scroll up a bit and choose

41
00:02:29.930 --> 00:02:34.540
Visualization, and instead of line,

42
00:02:34.540 --> 00:02:39.780
let's choose Pie, and here we can see a pie chart representing the

43
00:02:39.780 --> 00:02:43.210
different regions that have shown up in our CloudTrail log, and as

44
00:02:43.210 --> 00:02:46.910
we expect, eu‑west‑2 has the largest part of that pie because that

45
00:02:46.910 --> 00:02:48.110
has got the most records.

46
00:02:48.110 --> 00:02:51.940
Let's try one more query. In this final query, we're doing a

47
00:02:51.940 --> 00:02:54.990
similar search looking for entries that have a region of

48
00:02:54.990 --> 00:02:58.570
us‑east‑1, but this time we're asking login sites to organize

49
00:02:58.570 --> 00:03:01.560
those entries into 30‑second bins.

50
00:03:01.560 --> 00:03:03.840
So if I run this query,

51
00:03:03.840 --> 00:03:09.140
we've got a very colorful pie chart there broken into 30‑second slots.

52
00:03:09.140 --> 00:03:13.970
If we click on logs, we can see the amount of entry in the log that

53
00:03:13.970 --> 00:03:18.640
match us‑east‑1 for each 30‑second time period.

54
00:03:18.640 --> 00:03:21.040
So log insights are a very powerful tool.

55
00:03:21.040 --> 00:03:21.410
Remember,

56
00:03:21.410 --> 00:03:25.340
we can save these queries if we want to use them again and again. We can also

57
00:03:25.340 --> 00:03:29.540
export the results of our searches using export results.

58
00:03:29.540 --> 00:03:33.240
Maybe we download the CSV file so the other tools can come

59
00:03:33.240 --> 00:03:36.540
along and perform analytics against that data.

60
00:03:36.540 --> 00:03:38.540
Let's go back to our CloudTrail log.

61
00:03:38.540 --> 00:03:42.100
So we've seen how we can query this log stream using log insights, but

62
00:03:42.100 --> 00:03:45.570
what if you wanted to be alerted by a CloudWatch alarm when a

63
00:03:45.570 --> 00:03:49.130
particular entry appears in the log or appears in the log several

64
00:03:49.130 --> 00:03:52.150
times. Cloudwatch alarms work with metrics.

65
00:03:52.150 --> 00:03:56.740
So here, we have metric filters, if I select that,

66
00:03:56.740 --> 00:04:00.720
if I select Create metric filter and then type in a pattern that I want

67
00:04:00.720 --> 00:04:04.140
to search for in my logs. In the Test pattern section,

68
00:04:04.140 --> 00:04:07.890
I can select my CloudTrail log, and then if I scroll down a little bit,

69
00:04:07.890 --> 00:04:11.560
I can select Test pattern and it will show us how many entries in

70
00:04:11.560 --> 00:04:14.690
the current log match that pattern, in our case,

71
00:04:14.690 --> 00:04:15.760
AssumedRole.

72
00:04:15.760 --> 00:04:20.580
If I then scroll down and select Next, we can provide a name for this filter.

73
00:04:20.580 --> 00:04:24.300
We can provide a namespace and name for the metric that I

74
00:04:24.300 --> 00:04:26.970
want to create and then a metric value.

75
00:04:26.970 --> 00:04:29.350
So each time this pattern is seen in the log, it'll

76
00:04:29.350 --> 00:04:31.340
increase the metric value by one.

77
00:04:31.340 --> 00:04:37.340
I'm happy with these details, so I'll say Next and then Create metric filter.

78
00:04:37.340 --> 00:04:41.340
So what we've done then is create a day new metric based on the

79
00:04:41.340 --> 00:04:47.170
information found in our CloudTrail log. And now we have a metric, we can

80
00:04:47.170 --> 00:04:51.260
use features like CloudWatch alarms to monitor that metric. If I slight

81
00:04:51.260 --> 00:04:57.690
Metrics, here under Custom Namespaces, we can see IAMAssumeRole, I can

82
00:04:57.690 --> 00:05:01.830
select that, choose the Metrics with no dimensions, although, you could

83
00:05:01.830 --> 00:05:05.330
have added dimensions during the metric filter creation, and there is our

84
00:05:05.330 --> 00:05:06.530
AssumeRole metric.

85
00:05:06.530 --> 00:05:11.010
If I go to Alarms and say Create alarm and then select

86
00:05:11.010 --> 00:05:14.390
Metric, again in the Custom Namespaces,

87
00:05:14.390 --> 00:05:18.460
I can choose IAMAssumeRole and select our metric to be used in the alarm.

88
00:05:18.460 --> 00:05:22.910
All of the log querying we've done on the metric filters can be done on any log

89
00:05:22.910 --> 00:05:28.760
inside CloudWatch. In this module, we discussed how CloudWatch alarms can be

90
00:05:28.760 --> 00:05:33.040
used to automate actions in response to changes in metrics. We discussed

91
00:05:33.040 --> 00:05:38.090
gathering log information from EC2 instances, as well as operating system metric

92
00:05:38.090 --> 00:05:42.390
information as well. We discussed CloudTrail events so now they can be used in

93
00:05:42.390 --> 00:05:46.760
CloudWatch, and we demonstrated how we can search through logs in CloudWatch

94
00:05:46.760 --> 00:05:48.340
using log insights,

95
00:05:48.340 --> 00:05:52.450
and we discussed metric filters that allow us to turn logged information into

96
00:05:52.450 --> 00:05:56.010
metric information that can be then used in CloudWatch alarms.

97
00:05:56.010 --> 00:05:57.540
In our next module,

98
00:05:57.540 --> 00:06:01.040
we'll be discussing CloudWatch log retention and CloudWatch log

99
00:06:01.040 --> 00:06:11.000
archiving. So join me there and we'll continue along our Monitoring and Event Response on AWS for DevOps Engineers course.

