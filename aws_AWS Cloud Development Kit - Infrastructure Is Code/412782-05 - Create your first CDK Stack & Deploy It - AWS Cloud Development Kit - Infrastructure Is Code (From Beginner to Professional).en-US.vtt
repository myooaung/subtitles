WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.290
Hello,

00:00:00.290 --> 00:00:00.850
folks.

00:00:00.850 --> 00:00:03.880
Welcome back on your we saw.

00:00:03.880 --> 00:00:04.950
What does he gave?

00:00:04.950 --> 00:00:09.640
How it can revolutionize the way you can deploy infrastructure using really cold.

00:00:09.640 --> 00:00:16.270
Then later we saw how you need to get the prerequisites like no jail despite on your I d on

00:00:16.270 --> 00:00:19.910
nearly eight of your cli on those things in your living woman so even.

00:00:19.910 --> 00:00:20.460
Go ahead,

00:00:20.460 --> 00:00:21.750
create your first back.

00:00:21.750 --> 00:00:24.040
Now only steps are done.

00:00:24.040 --> 00:00:28.350
Let us go ahead and greater for stack on deployed in our interviews account.

00:00:28.350 --> 00:00:30.550
Let's go and get started.

00:00:30.550 --> 00:00:34.010
I'm going to use visual studio called as my dough environment.

00:00:34.010 --> 00:00:36.070
If you have decided to use another I d.

00:00:36.070 --> 00:00:39.040
You should be able to follow the same commands there again.

00:00:39.040 --> 00:00:44.450
My recommendation is go ahead and your special studio because you also get this AWS uh,

00:00:44.450 --> 00:00:45.280
toolkit,

00:00:45.280 --> 00:00:49.070
which allows you to trigger some Lambda functions or get some logs and see that in your

00:00:49.070 --> 00:00:50.150
control itself.

00:00:50.150 --> 00:00:50.990
Anyway,

00:00:50.990 --> 00:00:51.760
let's get started.

00:00:51.760 --> 00:00:53.550
The first thing we need is an directory.

00:00:53.550 --> 00:01:04.170
So I'm just going to create my first project on I'm going to initialize and scaffolding.

00:01:04.170 --> 00:01:08.530
So there is a default app which will give creating an empty scaffolding for us.

00:01:08.530 --> 00:01:09.310
I'm going to use that.

00:01:09.310 --> 00:01:11.200
There's also example aptitude provisions.

00:01:11.200 --> 00:01:12.600
Some other sources like excuse.

00:01:12.600 --> 00:01:13.280
In essence,

00:01:13.280 --> 00:01:16.470
since we don't need that for a big energy level,

00:01:16.470 --> 00:01:19.570
I'm going to just say default app on.

00:01:19.570 --> 00:01:21.620
Then I'm going to say what language I'm going to develop.

00:01:21.620 --> 00:01:22.900
My CD gets back in.

00:01:22.900 --> 00:01:23.710
So in this case,

00:01:23.710 --> 00:01:26.650
it is going to be fightin if you're going to use a seat again.

00:01:26.650 --> 00:01:27.620
Another language.

00:01:27.620 --> 00:01:28.960
Gold on change.

00:01:28.960 --> 00:01:29.830
The language variables.

00:01:29.830 --> 00:01:34.110
There on there are some sample commands like ls which is going to list all this tax on your

00:01:34.110 --> 00:01:38.870
app on synthesizes going to create a close formation from the stack itself.

00:01:38.870 --> 00:01:40.490
On deploy is like a minus.

00:01:40.490 --> 00:01:41.110
The word stays.

00:01:41.110 --> 00:01:42.660
It is going to deploy in your camp.

00:01:42.660 --> 00:01:47.970
We'll go ahead and see them later when we go have our app which sells ready Now that we got

00:01:47.970 --> 00:01:49.160
our project directory.

00:01:49.160 --> 00:01:53.170
Next step is the most important step is creating and virtual environment.

00:01:53.170 --> 00:01:57.680
So here by default city get that's that for us?

00:01:57.680 --> 00:02:04.700
Let me just open it in the visual studio code you can see here I have opened it on my

00:02:04.700 --> 00:02:09.170
terminal here on then you haven't which will environment not me so let the school had an

00:02:09.170 --> 00:02:10.750
accurate or which will environment.

00:02:10.750 --> 00:02:14.330
This is really,

00:02:14.330 --> 00:02:18.610
really important part of the city because any packages that you install here will be part

00:02:18.610 --> 00:02:22.360
off the switch with environment and it will not affect other packages or other products

00:02:22.360 --> 00:02:26.230
that you might be developing in the same left aboard air environment.

00:02:26.230 --> 00:02:29.390
So make sure your project is activated.

00:02:29.390 --> 00:02:30.840
Your virtual environments activated.

00:02:30.840 --> 00:02:31.400
Then you start.

00:02:31.400 --> 00:02:32.230
There will be your stack.

00:02:32.230 --> 00:02:33.470
This is really important.

00:02:33.470 --> 00:02:35.920
So now that we have got it out of the way,

00:02:35.920 --> 00:02:37.540
if we go ahead and see your app,

00:02:37.540 --> 00:02:43.640
not people on fire since I named or Abbas ABP on you can see here that is Ah,

00:02:43.640 --> 00:02:48.470
deport Waske unfolding here on then the stack itself that the resources are going to be

00:02:48.470 --> 00:02:49.400
built is here.

00:02:49.400 --> 00:02:53.710
This is the place where we are going to create our resources on you also.

00:02:53.710 --> 00:02:53.930
See,

00:02:53.930 --> 00:02:55.250
here there's a wiggly line.

00:02:55.250 --> 00:02:57.690
The good packages have missing because I have no,

00:02:57.690 --> 00:03:00.210
we have not installed any of the different NC packages.

00:03:00.210 --> 00:03:02.660
So in any time you need a dependent package,

00:03:02.660 --> 00:03:04.960
you can use the command to install it.

00:03:04.960 --> 00:03:05.750
In this case,

00:03:05.750 --> 00:03:09.380
I want an aws underscore CD Cato Corp package.

00:03:09.380 --> 00:03:10.820
I can go ahead on toe.

00:03:10.820 --> 00:03:14.300
That s so this will install the different packages on,

00:03:14.300 --> 00:03:15.120
but also the committee.

00:03:15.120 --> 00:03:16.530
If there is an update possible,

00:03:16.530 --> 00:03:19.550
it recommends you that I'm just going to do that as well.

00:03:19.550 --> 00:03:23.070
But I would strongly recommend duty.

00:03:23.070 --> 00:03:24.800
Go ahead and use that equipment.

00:03:24.800 --> 00:03:25.900
Start txt fight.

00:03:25.900 --> 00:03:26.060
Say,

00:03:26.060 --> 00:03:26.780
for example,

00:03:26.780 --> 00:03:29.330
the stock is going to create an s three bucket for this.

00:03:29.330 --> 00:03:39.100
So the aws service for that is AWS underscore City Gate innovators under school history on

00:03:39.100 --> 00:03:43.080
if you're wonder Lamba or something So it is going to follow the same thing and abuse

00:03:43.080 --> 00:03:44.140
hyphen CTK,

00:03:44.140 --> 00:03:49.540
dart eight of yours underscore lamp so that anything is having the same structure.

00:03:49.540 --> 00:03:52.130
So it abuse followed by the service name.

00:03:52.130 --> 00:03:52.930
So in this case,

00:03:52.930 --> 00:03:59.790
we're not needing a lamb that you're just going to remove this and just look at them CNN

00:03:59.790 --> 00:04:03.340
dot core Save this file.

00:04:03.340 --> 00:04:07.730
Once you have saved this one installed all the different packages but using this command

00:04:07.730 --> 00:04:08.150
here.

00:04:08.150 --> 00:04:16.340
So I'm just going to install the court as well as history on If I go back to my app dot b y

00:04:16.340 --> 00:04:22.790
that the bigly lined will disappear because it will start picking up the project defaults

00:04:22.790 --> 00:04:28.530
because we haven't solved the dependencies on later school had an import our AWS extreme

00:04:28.530 --> 00:04:40.170
package as well You can in imported like this,

00:04:40.170 --> 00:04:49.700
but I would strongly recommend you toe Let me just go ahead and order formatted But the

00:04:49.700 --> 00:04:51.880
white collisions with the global name spacing.

00:04:51.880 --> 00:04:53.180
So whenever you're important,

00:04:53.180 --> 00:04:55.350
just go ahead and say underscored s three.

00:04:55.350 --> 00:05:00.570
So this way you are not going to have any collisions with any other packages with a similar

00:05:00.570 --> 00:05:01.350
name there.

00:05:01.350 --> 00:05:05.450
So we have got almost all over steps ready.

00:05:05.450 --> 00:05:09.260
So let us go ahead and create or reinforce toe resource that is going to be a restaurant

00:05:09.260 --> 00:05:09.710
pocket.

00:05:09.710 --> 00:05:17.350
So this is going to be the construct that we have imported s three No bucket.

00:05:17.350 --> 00:05:25.750
So we need an identify it.

00:05:25.750 --> 00:05:27.050
This is a logical identify,

00:05:27.050 --> 00:05:28.340
not the name off the bucket.

00:05:28.340 --> 00:05:33.140
I'm just going to say my bucket I d.

00:05:33.140 --> 00:05:37.290
So this is always required Toe created source,

00:05:37.290 --> 00:05:37.900
for example,

00:05:37.900 --> 00:05:38.380
in this case,

00:05:38.380 --> 00:05:38.780
actually,

00:05:38.780 --> 00:05:40.960
so let us see if everything is fine.

00:05:40.960 --> 00:05:45.580
So if you do an exit gate ls if you're not getting an error,

00:05:45.580 --> 00:05:48.190
that means that your project iss good.

00:05:48.190 --> 00:05:50.300
All the dependencies are met on automatic.

00:05:50.300 --> 00:05:54.250
It's going to create and see the gate or owt directory here on inside this.

00:05:54.250 --> 00:05:56.920
It will go ahead on the list of the core permission.

00:05:56.920 --> 00:05:59.880
If I go ahead and run this command native new assistant,

00:05:59.880 --> 00:06:03.180
it is going to create the necessary told permission from Breitbart.

00:06:03.180 --> 00:06:05.550
All the sources to create our history.

00:06:05.550 --> 00:06:06.350
Bucket here,

00:06:06.350 --> 00:06:07.200
tree.

00:06:07.200 --> 00:06:08.150
This is a social.

00:06:08.150 --> 00:06:08.870
My in the eyes,

00:06:08.870 --> 00:06:11.370
my bucket on.

00:06:11.370 --> 00:06:12.320
Then it says,

00:06:12.320 --> 00:06:12.910
uh,

00:06:12.910 --> 00:06:13.640
this is the resource.

00:06:13.640 --> 00:06:14.870
I'm going to create an update.

00:06:14.870 --> 00:06:16.070
Policies retain.

00:06:16.070 --> 00:06:19.630
So if you're going to deploy the bucket for the first time,

00:06:19.630 --> 00:06:23.930
then you need toe run this command that CTK a bootstrap.

00:06:23.930 --> 00:06:26.230
This is one of the first time that you are going to need it.

00:06:26.230 --> 00:06:28.720
Let me go ahead and show you my information.

00:06:28.720 --> 00:06:30.880
So here I am,

00:06:30.880 --> 00:06:31.900
in the total formation as off.

00:06:31.900 --> 00:06:32.030
No,

00:06:32.030 --> 00:06:32.630
you can see here.

00:06:32.630 --> 00:06:38.290
That is no stack related to see decay or the bootstrap on for s trivia having only three

00:06:38.290 --> 00:06:39.400
pockets here.

00:06:39.400 --> 00:06:41.050
So let me just go ahead and run.

00:06:41.050 --> 00:06:41.740
Bootstrap.

00:06:41.740 --> 00:06:43.880
So basically what this is going to run is,

00:06:43.880 --> 00:06:44.450
uh,

00:06:44.450 --> 00:06:47.750
apparently made on the other there.

00:06:47.750 --> 00:06:55.430
Now that is one what headed that boots travel I can't spend today.

00:06:55.430 --> 00:06:57.560
So this is going to create the scaffolding,

00:06:57.560 --> 00:07:02.260
basically needs and bucket valid and states the templates and then push it toe confirmation

00:07:02.260 --> 00:07:03.760
on Deploy the stack itself.

00:07:03.760 --> 00:07:06.520
So it is going to create a packet for temporary pocket,

00:07:06.520 --> 00:07:08.350
which is controlled by city.

00:07:08.350 --> 00:07:10.340
It's a Ford is going to happen now.

00:07:10.340 --> 00:07:15.190
You can see here there's in staging bucket that is getting created on a greater necessary I

00:07:15.190 --> 00:07:17.150
am roads so that it can go ahead and report.

00:07:17.150 --> 00:07:18.900
So this is another reason I said,

00:07:18.900 --> 00:07:24.250
when you're creating an embassy late on the profile that provide should have privileges for

00:07:24.250 --> 00:07:26.830
creating about these resources with the city.

00:07:26.830 --> 00:07:29.900
So when this is happening,

00:07:29.900 --> 00:07:31.360
let's go to our countdown.

00:07:31.360 --> 00:07:32.480
Just refresh it.

00:07:32.480 --> 00:07:33.620
That must be one bucket.

00:07:33.620 --> 00:07:33.790
Here.

00:07:33.790 --> 00:07:34.690
You can see that staging,

00:07:34.690 --> 00:07:37.810
but created unlike ways if I go here and refresh it,

00:07:37.810 --> 00:07:40.430
there must be in a bowl shopping stack.

00:07:40.430 --> 00:07:42.250
Let me just remove this winter,

00:07:42.250 --> 00:07:44.180
you can see here that is in the city.

00:07:44.180 --> 00:07:46.360
Get to naked on it is complete.

00:07:46.360 --> 00:07:47.550
So if I go back here,

00:07:47.550 --> 00:07:49.190
it starts of computer.

00:07:49.190 --> 00:07:52.720
So my stack is ready on day.

00:07:52.720 --> 00:07:54.760
I have the bootstrap in place.

00:07:54.760 --> 00:07:57.190
So finally let the school head on,

00:07:57.190 --> 00:07:58.650
deploy our stack.

00:07:58.650 --> 00:08:04.460
So what this is going to do is it is going to send my told formation template into the

00:08:04.460 --> 00:08:09.850
staging pocket and then create a pro formations tax set and then deploy those resources.

00:08:09.850 --> 00:08:16.680
So you can see here is say,

00:08:16.680 --> 00:08:18.130
is creating proclamation.

00:08:18.130 --> 00:08:18.680
Changed it.

00:08:18.680 --> 00:08:20.440
If I go here and refresh my screen,

00:08:20.440 --> 00:08:21.930
that must be one more stack.

00:08:21.930 --> 00:08:23.890
Here you consider my first city.

00:08:23.890 --> 00:08:25.620
Their product is happening on.

00:08:25.620 --> 00:08:30.090
Then if I go under Fillon's already it is a complete elements here.

00:08:30.090 --> 00:08:33.980
All the bucket has been created at the school have and see whether the new book it has been

00:08:33.980 --> 00:08:34.650
created.

00:08:34.650 --> 00:08:39.110
So be how our first bucket that is my first city get project.

00:08:39.110 --> 00:08:40.810
My bucket I'd even see here.

00:08:40.810 --> 00:08:43.230
My this was has been created.

00:08:43.230 --> 00:08:49.180
So this is how you create a resource using city again in the next video,

00:08:49.180 --> 00:08:50.920
even see how you can customize it.

00:08:50.920 --> 00:08:51.680
For example,

00:08:51.680 --> 00:08:52.330
in this case,

00:08:52.330 --> 00:08:56.870
we had no control over the bucket name or any of the attributes that is required for the

00:08:56.870 --> 00:08:57.180
bucket.

00:08:57.180 --> 00:08:57.660
For example,

00:08:57.660 --> 00:09:00.050
if you want tohave encryption enabled or,

00:09:00.050 --> 00:09:01.860
if you want to have washing enabled.

00:09:01.860 --> 00:09:04.340
We were not able to do that.

00:09:04.340 --> 00:09:08.010
Let us go ahead and see how we can customize the source creation on.

00:09:08.010 --> 00:09:10.380
Then we can deploy it in the next video.

00:09:10.380 --> 00:09:11.440
Until then,

00:09:11.440 --> 00:09:12.850
thanks for watching Happy learning.

