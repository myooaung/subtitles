WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.260
Hello,

00:00:00.260 --> 00:00:00.670
folks.

00:00:00.670 --> 00:00:02.950
Welcome to another lecture on Siri K.

00:00:02.950 --> 00:00:08.640
This time we're going to talk about adding privileges which are find fuel and for accessing

00:00:08.640 --> 00:00:10.300
resources to your lambda function.

00:00:10.300 --> 00:00:14.940
Where Tiffany 11 A function will require access to resources like a dynamo DB or S three

00:00:14.940 --> 00:00:17.150
bucket or SS and parameter store.

00:00:17.150 --> 00:00:18.170
In those cases,

00:00:18.170 --> 00:00:21.680
in stop giving access to the entire service but using style privileges,

00:00:21.680 --> 00:00:23.770
CD get allows you to get really,

00:00:23.770 --> 00:00:25.290
really fine grained privileges.

00:00:25.290 --> 00:00:25.960
For example,

00:00:25.960 --> 00:00:28.780
if there is an parameter which has and database password,

00:00:28.780 --> 00:00:33.510
then you can say my left A function can have access to one lead that parameter on one

00:00:33.510 --> 00:00:34.680
before this environment,

00:00:34.680 --> 00:00:40.450
using the part where labels are using the best navigation that Jefferson parameter alos.

00:00:40.450 --> 00:00:41.050
Likewise,

00:00:41.050 --> 00:00:42.850
when you're talking about the dynamo on TV,

00:00:42.850 --> 00:00:45.260
we can say that your lumber function needs toe.

00:00:45.260 --> 00:00:46.100
Have access toe.

00:00:46.100 --> 00:00:51.160
My collection database on this database is only in this region on within that database.

00:00:51.160 --> 00:00:51.880
Also,

00:00:51.880 --> 00:00:56.670
you can say that my time the function can have on the right level privileges not to delete

00:00:56.670 --> 00:00:59.310
or modify level privileges so you can go really,

00:00:59.310 --> 00:01:01.740
really fine grained with the power of city.

00:01:01.740 --> 00:01:05.960
So what I'm going to do in ours and want to show you a simple lambda function.

00:01:05.960 --> 00:01:08.010
Andi will deploy this lambda function,

00:01:08.010 --> 00:01:09.210
which is going toe list.

00:01:09.210 --> 00:01:11.080
My s three pockets on.

00:01:11.080 --> 00:01:15.400
Take those liftoff three rockets and stored it into my dynamodb table.

00:01:15.400 --> 00:01:16.940
So it needs to privileges.

00:01:16.940 --> 00:01:18.360
Oneness s three privileges.

00:01:18.360 --> 00:01:21.260
Another one is the dynamodb privileges on.

00:01:21.260 --> 00:01:26.350
We will see how to provide these privileges in a fine grained manner to our lambda function

00:01:26.350 --> 00:01:26.350
.

00:01:26.350 --> 00:01:31.010
So this is the lumber function that is returning by tone code on that.

00:01:31.010 --> 00:01:34.550
Ask this exercise is not about writing efficient court or better coat.

00:01:34.550 --> 00:01:36.040
I'm not put in time or effort,

00:01:36.040 --> 00:01:36.910
but just basically,

00:01:36.910 --> 00:01:42.420
what it does is get a list off all the buckets in a particular account on my account.

00:01:42.420 --> 00:01:44.190
This demo going does not have many buckets.

00:01:44.190 --> 00:01:46.810
Soldiers highly five or 10 or single digits,

00:01:46.810 --> 00:01:50.410
and it is great to insert those packets into one dynamodb table.

00:01:50.410 --> 00:01:51.850
So that is what dysfunction does.

00:01:51.850 --> 00:01:53.560
Since this court is already published,

00:01:53.560 --> 00:01:56.170
you can go ahead and take a look at this court and modify this court.

00:01:56.170 --> 00:01:58.460
But that is not this whole the most all about.

00:01:58.460 --> 00:02:02.250
We are going to deploy and City Gate Stack,

00:02:02.250 --> 00:02:07.950
which is going to create this and animal TV table on the Lambda function on the first time

00:02:07.950 --> 00:02:08.680
in their deployment.

00:02:08.680 --> 00:02:11.750
We're not going to give any additional privileges and see what happens.

00:02:11.750 --> 00:02:16.510
So this is that I am a TV table court that we have and we're going to create a table called

00:02:16.510 --> 00:02:18.380
this constant as it stable on.

00:02:18.380 --> 00:02:23.170
Then we also have on London Continent is called a constant function on it is going to pick

00:02:23.170 --> 00:02:28.000
up my Johnstone s three invented and later called that you can see here.

00:02:28.000 --> 00:02:29.980
So let me go ahead and synthesize it.

00:02:29.980 --> 00:02:30.560
And remember,

00:02:30.560 --> 00:02:32.240
I'm not giving any additional privileges.

00:02:32.240 --> 00:02:36.780
This is just the default stuff that we have seen so many times on going to deploy it as

00:02:36.780 --> 00:02:37.110
well,

00:02:37.110 --> 00:02:37.880
Onda,

00:02:37.880 --> 00:02:40.060
we'll go ahead and check it out on the console.

00:02:40.060 --> 00:02:43.550
Ban What resources not getting but and what privileges out there.

00:02:43.550 --> 00:02:45.770
So what?

00:02:45.770 --> 00:02:46.820
That is getting deployed.

00:02:46.820 --> 00:02:48.630
I'm going to take you to my extreme bucket.

00:02:48.630 --> 00:02:51.500
You can see here that I just wanted four package right now.

00:02:51.500 --> 00:02:52.180
Andi,

00:02:52.180 --> 00:02:58.620
there are no Lambert functions and likewise that has no dynamodb table also So as you can

00:02:58.620 --> 00:02:58.940
see here.

00:02:58.940 --> 00:03:03.060
This is getting created as we speak That concern I said people in table Andi,

00:03:03.060 --> 00:03:04.390
Once it's create,

00:03:04.390 --> 00:03:06.750
you'll find that no items there.

00:03:06.750 --> 00:03:09.930
Let me go to my function.

00:03:09.930 --> 00:03:16.030
That may just refresh my screen because us the dynamodb table value is automatically added

00:03:16.030 --> 00:03:18.510
as an environment variable for the Lambda function.

00:03:18.510 --> 00:03:21.930
So the London fortune would be waiting for this resource to be created.

00:03:21.930 --> 00:03:25.960
You can see here I have added an environment variable called then would you be table and

00:03:25.960 --> 00:03:26.910
passed on the,

00:03:26.910 --> 00:03:27.710
uh,

00:03:27.710 --> 00:03:29.560
DB table by kill.

00:03:29.560 --> 00:03:32.730
So since my table is created by Lambda,

00:03:32.730 --> 00:03:35.750
function is also done So they just go back here,

00:03:35.750 --> 00:03:36.600
refresh my screen.

00:03:36.600 --> 00:03:37.750
So here is the function.

00:03:37.750 --> 00:03:40.410
Here is my court.

00:03:40.410 --> 00:03:47.680
Let me just go ahead and create on a temporary even This even is not off importance.

00:03:47.680 --> 00:03:50.020
If I just go to my permission section here,

00:03:50.020 --> 00:03:52.130
this is the default commissions you can see here.

00:03:52.130 --> 00:03:53.550
It just has a problem.

00:03:53.550 --> 00:03:53.940
Watcher,

00:03:53.940 --> 00:03:56.050
Love group lobsterman put given section.

00:03:56.050 --> 00:04:01.840
So if I go ahead and run this so it is going to go ahead and list my s three bucket but you

00:04:01.840 --> 00:04:03.380
can see here I haven't.

00:04:03.380 --> 00:04:05.750
Adam says access denied on the list.

00:04:05.750 --> 00:04:07.690
Operations are access is denied.

00:04:07.690 --> 00:04:12.650
So the first step is we are going to kill my lumber function s three read only access so

00:04:12.650 --> 00:04:18.080
that it can go ahead and list oil my s three pockets in this time.

00:04:18.080 --> 00:04:22.000
The first ever going to do is I'm going to show you how you can add a managed for the sea

00:04:22.000 --> 00:04:22.950
to land a function.

00:04:22.950 --> 00:04:27.560
Then the next step you will see how to go into a fine grained andare,

00:04:27.560 --> 00:04:28.230
really narrow,

00:04:28.230 --> 00:04:29.930
known or scoped on your policy.

00:04:29.930 --> 00:04:33.320
So let us start with our manage policy on.

00:04:33.320 --> 00:04:33.800
Remember,

00:04:33.800 --> 00:04:38.370
I have imported my I am construct on that Since we already deported lamp on that,

00:04:38.370 --> 00:04:40.130
then would be those concepts are there.

00:04:40.130 --> 00:04:41.130
So since I have,

00:04:41.130 --> 00:04:46.110
I am let me go ahead and build our number function with the managed policy.

00:04:46.110 --> 00:04:50.530
So our function is called a constant function On your under role.

00:04:50.530 --> 00:04:55.100
We get access to the whole that is attached to dysfunction and then we're going to say add

00:04:55.100 --> 00:05:03.390
managed by the sea inside this what we're going to do is going to say I am docked manage

00:05:03.390 --> 00:05:07.180
policy from AWS manage policy name on in this case,

00:05:07.180 --> 00:05:09.720
I'm going to use the Amazon s three.

00:05:09.720 --> 00:05:11.550
Read only access a policy.

00:05:11.550 --> 00:05:13.250
That's it.

00:05:13.250 --> 00:05:17.870
Let me just go ahead and synthesize our stack to see whether this permission is getting

00:05:17.870 --> 00:05:20.160
added Before we do this,

00:05:20.160 --> 00:05:23.460
let me just go ahead and check out my lambda functions.

00:05:23.460 --> 00:05:23.930
So,

00:05:23.930 --> 00:05:25.730
under functions,

00:05:25.730 --> 00:05:28.260
if I go hand click on this one,

00:05:28.260 --> 00:05:29.960
it should open my console.

00:05:29.960 --> 00:05:31.500
But Lambda Rule.

00:05:31.500 --> 00:05:32.170
So that stuff,

00:05:32.170 --> 00:05:33.740
normally the basic execution rule,

00:05:33.740 --> 00:05:39.360
is that they just go ahead and deploy this So the stack is deployed with an update for

00:05:39.360 --> 00:05:40.500
Orlando permissions.

00:05:40.500 --> 00:05:42.550
Let me just go ahead and refresh the screen.

00:05:42.550 --> 00:05:45.470
We should be seeing a manage policy at it.

00:05:45.470 --> 00:05:45.650
Here.

00:05:45.650 --> 00:05:47.880
You can see here there's an estimated only access.

00:05:47.880 --> 00:05:48.880
The moment is the manage.

00:05:48.880 --> 00:05:50.760
What is not really fine grain.

00:05:50.760 --> 00:05:53.350
So let us go ahead and test it and see what happens now.

00:05:53.350 --> 00:05:54.890
So you can see here now.

00:05:54.890 --> 00:05:56.730
The other message has changed on the B,

00:05:56.730 --> 00:05:57.910
C and access denied.

00:05:57.910 --> 00:06:01.170
When we're trying to tow on dynamodb put item here.

00:06:01.170 --> 00:06:03.310
So this is the other thing.

00:06:03.310 --> 00:06:07.050
That means that the out of the two permissions that are required for my lambda functions

00:06:07.050 --> 00:06:10.650
one accessory permissions so that it's can't go ahead and list of the objects.

00:06:10.650 --> 00:06:14.650
But when it is trying to insert those items into my dynamodb,

00:06:14.650 --> 00:06:16.030
it is a getting some ever.

00:06:16.030 --> 00:06:18.110
So if I go ahead on the freshness,

00:06:18.110 --> 00:06:22.290
could you hear right now under items I don't have any items,

00:06:22.290 --> 00:06:28.490
so they just goto our stack on add privileges for Orlando function this time and stuff

00:06:28.490 --> 00:06:31.770
giving a broad based dynamodb right access.

00:06:31.770 --> 00:06:35.810
What I'm going to do is having going to scope down my land a function toe one lead this

00:06:35.810 --> 00:06:38.880
particular animal Devi table on within this family table.

00:06:38.880 --> 00:06:39.160
Also,

00:06:39.160 --> 00:06:41.480
I'm going to scope it down to flight level access.

00:06:41.480 --> 00:06:48.050
So the simplest way is what we can do is const own a set stable dot right privileges would

00:06:48.050 --> 00:06:48.850
be dead a grant.

00:06:48.850 --> 00:06:50.190
It just I think,

00:06:50.190 --> 00:06:52.150
being never grant on.

00:06:52.150 --> 00:06:53.880
Then we have also how great metal.

00:06:53.880 --> 00:06:57.650
So I'm going to say right data for constant function.

00:06:57.650 --> 00:06:59.440
So that's all we need to do.

00:06:59.440 --> 00:07:03.540
That is no more thinking too much about what functions are what accents.

00:07:03.540 --> 00:07:08.680
What is the park mortal so automatically this is going to resolve for lead with I am

00:07:08.680 --> 00:07:12.090
validated template on then that will be passed on to battle formation.

00:07:12.090 --> 00:07:13.450
Get closer to point.

00:07:13.450 --> 00:07:15.750
So let us go ahead and deployed and see that.

00:07:15.750 --> 00:07:17.620
So this tactic started deploying.

00:07:17.620 --> 00:07:20.320
Let us goto our I am section.

00:07:20.320 --> 00:07:23.760
This is the one which is open for a policy that teaches school head and to pick.

00:07:23.760 --> 00:07:24.230
It takes off.

00:07:24.230 --> 00:07:26.120
People see on addition off,

00:07:26.120 --> 00:07:27.320
another policy added,

00:07:27.320 --> 00:07:29.250
which will be an inland policy.

00:07:29.250 --> 00:07:30.850
So you go here,

00:07:30.850 --> 00:07:31.390
you can see it.

00:07:31.390 --> 00:07:33.060
There's a constant service role default.

00:07:33.060 --> 00:07:33.900
What's the addict?

00:07:33.900 --> 00:07:35.060
If I expand this,

00:07:35.060 --> 00:07:36.700
you can see under actions.

00:07:36.700 --> 00:07:37.800
I have one little fight,

00:07:37.800 --> 00:07:39.640
other privileges on for resources.

00:07:39.640 --> 00:07:41.720
It is scope down toe,

00:07:41.720 --> 00:07:42.890
one particular table.

00:07:42.890 --> 00:07:45.650
So my love affection cannot access any other table.

00:07:45.650 --> 00:07:47.100
And even within the stable,

00:07:47.100 --> 00:07:48.360
it can only do right level.

00:07:48.360 --> 00:07:51.360
Privileges for updating items are adding.

00:07:51.360 --> 00:07:52.200
Items are adding,

00:07:52.200 --> 00:07:53.380
doing a battery it.

00:07:53.380 --> 00:07:57.680
So let's go ahead and run our lambda function again to see that if this privileges have

00:07:57.680 --> 00:07:59.110
taken into effect on remember,

00:07:59.110 --> 00:08:01.870
sometimes it takes a few minutes for the privileges to take in tow,

00:08:01.870 --> 00:08:05.050
not a few minutes four seconds to take into effect,

00:08:05.050 --> 00:08:08.620
but in this case it has taken effect already the stages called 200.

00:08:08.620 --> 00:08:10.550
And you can see here there are buckets that are listed,

00:08:10.550 --> 00:08:13.750
these other pockets that are coming from my court bucket.

00:08:13.750 --> 00:08:16.350
If I put my dynamodb,

00:08:16.350 --> 00:08:19.530
you find words that I could see stick here.

00:08:19.530 --> 00:08:21.060
You can see here for the food packets,

00:08:21.060 --> 00:08:21.480
at least that.

00:08:21.480 --> 00:08:24.620
So I'm just creating a simple inventory off extra practice sparked.

00:08:24.620 --> 00:08:29.050
The idea is throwing out to create the fine grained privileges for your lambda functions.

00:08:29.050 --> 00:08:33.510
That is how you provide client gained privileges for your land.

00:08:33.510 --> 00:08:35.470
A function took different resources in your account.

00:08:35.470 --> 00:08:36.420
Go ahead and try it.

00:08:36.420 --> 00:08:41.530
A different resources like STD Parameter Store came and are some other sources that you

00:08:41.530 --> 00:08:43.600
want to access from your number functions.

00:08:43.600 --> 00:08:46.140
If you have any problems for them in the comments section,

00:08:46.140 --> 00:08:47.720
we all can learn from each other.

00:08:47.720 --> 00:08:48.680
Until then,

00:08:48.680 --> 00:08:50.380
thanks for watching Happy learning

