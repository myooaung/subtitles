WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.950
Hello fools.

00:00:00.950 --> 00:00:03.650
Welcome to another lecture on CD K.

00:00:03.650 --> 00:00:07.260
The actual pattern as part off the at once use cases.

00:00:07.260 --> 00:00:12.520
Siri's that we're seeing now is so or less batch processor architecture.

00:00:12.520 --> 00:00:13.180
Quite often,

00:00:13.180 --> 00:00:15.510
when you're running an enterprise application,

00:00:15.510 --> 00:00:21.000
it is common that you will do some batch processing at the end of the week or the month toe

00:00:21.000 --> 00:00:22.800
aggregate your financial reserves.

00:00:22.800 --> 00:00:23.500
Our toe.

00:00:23.500 --> 00:00:25.950
Find out what commissions have to be paid to the sale.

00:00:25.950 --> 00:00:29.630
Satan's are degenerates on reports with your business users.

00:00:29.630 --> 00:00:30.940
Our analysts would read.

00:00:30.940 --> 00:00:36.430
So in all those cases that is an set of actions that you need to perform at a certain time

00:00:36.430 --> 00:00:36.820
on.

00:00:36.820 --> 00:00:41.930
You want to make sure that activity how always happens without any external person or a

00:00:41.930 --> 00:00:45.850
human wanted bring it So we wanted to be automatically running.

00:00:45.850 --> 00:00:48.850
I'm The trigger also should be based on the time.

00:00:48.850 --> 00:00:53.590
So that is what an ideally and so were less batch process architectural Fritz pain.

00:00:53.590 --> 00:00:56.120
So this is what we're going to see now on.

00:00:56.120 --> 00:00:58.630
Literacy were the demo components that were going to burn,

00:00:58.630 --> 00:01:02.570
So we are going to use the AWS fargate cell exporters,

00:01:02.570 --> 00:01:06.710
so we're going to create and forget plaster on with the defiant Lester.

00:01:06.710 --> 00:01:09.630
We're going to create one Lee and service on.

00:01:09.630 --> 00:01:13.180
We are also going to give some past depressions inside the service,

00:01:13.180 --> 00:01:15.390
but we're not going to start it.

00:01:15.390 --> 00:01:20.440
So to start that what we're going to do is we're going to configure and club What Stevens,

00:01:20.440 --> 00:01:22.770
which is going to be time based or schedule,

00:01:22.770 --> 00:01:23.500
are typical.

00:01:23.500 --> 00:01:28.470
Run job on a particular day off the week or particular day off the month or every day.

00:01:28.470 --> 00:01:29.850
At every five minutes,

00:01:29.850 --> 00:01:35.450
you can go ahead and trigger your task so the task performs of actions and store that

00:01:35.450 --> 00:01:41.190
information in your Globe awards Logs are in your actually bucket are you can ingest it

00:01:41.190 --> 00:01:46.690
into your dynamodb database are RDS deliveries so you can write any business logic that you

00:01:46.690 --> 00:01:49.010
want because it isn't firing age task,

00:01:49.010 --> 00:01:50.980
and there is no time limit like a handle.

00:01:50.980 --> 00:01:51.740
For example,

00:01:51.740 --> 00:01:54.100
you can run the Lambda wanted for 15 minutes,

00:01:54.100 --> 00:01:58.720
but when it doesn't forget that you don't have any time but and you can keep it on running

00:01:58.720 --> 00:02:00.290
as long as you required.

00:02:00.290 --> 00:02:02.400
So this is what we're going to build now.

00:02:02.400 --> 00:02:05.750
They just goto our city case there and see how we can do this.

00:02:05.750 --> 00:02:09.060
This is a stack that we're going to use.

00:02:09.060 --> 00:02:14.350
I have named it as solar less batch processor architecture with flying to stack.

00:02:14.350 --> 00:02:17.530
So you can see here there is nothing is built out.

00:02:17.530 --> 00:02:21.470
We're going to build everything from the scratch and there are no imports as well.

00:02:21.470 --> 00:02:23.510
On this is going to be very simple,

00:02:23.510 --> 00:02:29.060
but because we just needed for a gator plaster on that cluster will require me PC on.

00:02:29.060 --> 00:02:33.630
Then we're going to create and scheduled task just three different confidence on we should

00:02:33.630 --> 00:02:34.460
be done here.

00:02:34.460 --> 00:02:40.890
So they just go ahead and start building or BBC on our species going to come from our easy

00:02:40.890 --> 00:02:42.440
to Ma June.

00:02:42.440 --> 00:02:55.810
I'm going to build my BBC now scope it on set your I D On.

00:02:55.810 --> 00:02:56.620
As always,

00:02:56.620 --> 00:03:00.250
I like to have two aces so that higher will ever taste it up.

00:03:00.250 --> 00:03:01.880
But for natty gateways,

00:03:01.880 --> 00:03:03.110
I don't need to off them.

00:03:03.110 --> 00:03:05.940
So I'm just going to say I need 11 that get with.

00:03:05.940 --> 00:03:10.760
So we're going to create the cluster on and we're going to define the information for our

00:03:10.760 --> 00:03:11.210
cluster.

00:03:11.210 --> 00:03:17.510
I'm going to call this as best processor cluster and this coming from the easiest morning.

00:03:17.510 --> 00:03:20.470
So let us go ahead and import our easiest morning.

00:03:20.470 --> 00:03:25.920
Make sure that you have installing those models in your account by using the requirements.

00:03:25.920 --> 00:03:27.740
While if you're not doing that,

00:03:27.740 --> 00:03:28.960
go ahead and do that.

00:03:28.960 --> 00:03:30.540
Since I am bandit already,

00:03:30.540 --> 00:03:32.550
I'm just skipping the process.

00:03:32.550 --> 00:03:40.940
So under Leicester that this go ahead and say self and God this as Brach Processor cluster

00:03:40.940 --> 00:03:45.480
on which we BC We have built it just now here.

00:03:45.480 --> 00:03:47.380
So use that BP seizure.

00:03:47.380 --> 00:03:54.510
We're going to create the schedules tasks which is going to integrate with our fargate task

00:03:54.510 --> 00:03:54.510
,

00:03:54.510 --> 00:03:59.970
along with the image configurations onda the details off when it needs to run.

00:03:59.970 --> 00:04:01.940
Since that we're talking about integration,

00:04:01.940 --> 00:04:03.090
multiple services.

00:04:03.090 --> 00:04:06.250
That is the easiest pattern which does that for us.

00:04:06.250 --> 00:04:06.710
So it is.

00:04:06.710 --> 00:04:07.970
Go ahead and important,

00:04:07.970 --> 00:04:11.850
easiest batter into our stack on Bill it out from there.

00:04:11.850 --> 00:04:22.720
So let's start when naming our batch process of task on the issues patterns,

00:04:22.720 --> 00:04:25.330
we have something called as scheduled.

00:04:25.330 --> 00:04:31.950
Forget task so you can go ahead on and choose that as well or if you want to go ahead and

00:04:31.950 --> 00:04:32.220
type.

00:04:32.220 --> 00:04:36.590
It also you can go ahead and do that Their schedule fargate task and self.

00:04:36.590 --> 00:04:42.780
So I'm going to name it Batch processor on for a cluster.

00:04:42.780 --> 00:04:44.940
We have created our cluster here.

00:04:44.940 --> 00:04:50.140
So it does add that here on then we have something called as scheduled.

00:04:50.140 --> 00:04:53.280
Forget task options are asked image options.

00:04:53.280 --> 00:04:59.270
So we're going to define our image options in this case on let us go and choose an image so

00:04:59.270 --> 00:05:00.310
I hope created and very,

00:05:00.310 --> 00:05:05.660
very simple image which is going to just show what the continuous running on the date it is

00:05:05.660 --> 00:05:06.460
running on.

00:05:06.460 --> 00:05:06.900
Lord,

00:05:06.900 --> 00:05:09.160
whether the activity was successful or not,

00:05:09.160 --> 00:05:18.140
the image is going to come from pcs dot container image on.

00:05:18.140 --> 00:05:22.070
We're going to pick it up from Dr Hub once again.

00:05:22.070 --> 00:05:26.810
This images coming from my reporting free on the way I have written it is a very,

00:05:26.810 --> 00:05:29.240
very simple doctor image.

00:05:29.240 --> 00:05:33.600
What it does is it Just write some information to the lock while so that we can go to club

00:05:33.600 --> 00:05:36.750
warts and check whether the task has been running or not.

00:05:36.750 --> 00:05:40.750
You can go ahead and write your own doctor function on.

00:05:40.750 --> 00:05:45.150
Then you can build your container and use it But just for this demo we're going to use a

00:05:45.150 --> 00:05:45.370
very,

00:05:45.370 --> 00:05:46.260
very simple one.

00:05:46.260 --> 00:05:52.230
So I called it as a bad job runner on.

00:05:52.230 --> 00:05:56.250
We're going to define some memory information on the CP information.

00:05:56.250 --> 00:05:59.650
So here we have something called us.

00:05:59.650 --> 00:06:03.150
So here we have something called asked Memory.

00:06:03.150 --> 00:06:10.650
So we went to defend it to fight with on whenever we're talking about far get memory and

00:06:10.650 --> 00:06:11.030
CPU.

00:06:11.030 --> 00:06:16.130
That's a combination that really toe always manage so that it will have a valid combination

00:06:16.130 --> 00:06:16.130
.

00:06:16.130 --> 00:06:20.450
So go ahead and check that Amazon documentation if you want to have different sizes.

00:06:20.450 --> 00:06:27.110
So if you want to pass some information to your rocker container through an environment,

00:06:27.110 --> 00:06:29.330
fight or environment variables,

00:06:29.330 --> 00:06:31.700
you can go ahead and use this option on.

00:06:31.700 --> 00:06:32.170
In this case,

00:06:32.170 --> 00:06:33.660
I'm going to show you how to pass on.

00:06:33.660 --> 00:06:34.020
Simple,

00:06:34.020 --> 00:06:34.630
very was like,

00:06:34.630 --> 00:06:35.760
for example name.

00:06:35.760 --> 00:06:39.830
I'm going to say this trigger I Likewise,

00:06:39.830 --> 00:06:48.630
I'm going to have a value on the trigger is going to come from flow watch finally,

00:06:48.630 --> 00:06:53.490
the schedule itself from when this task should be triggered.

00:06:53.490 --> 00:06:57.570
So the schedule is coming from the syndicate cool model itself.

00:06:57.570 --> 00:06:59.110
It is into a different model.

00:06:59.110 --> 00:07:00.950
So that the school had import that.

00:07:00.950 --> 00:07:06.930
So it just coming from AWS underscore CTK,

00:07:06.930 --> 00:07:13.140
Dark abuse underscore application Auto scaling on Inside this we have something called as

00:07:13.140 --> 00:07:13.980
schedule.

00:07:13.980 --> 00:07:17.700
So just get that imported on.

00:07:17.700 --> 00:07:20.290
Let's go ahead and configure our schedule now.

00:07:20.290 --> 00:07:25.770
So when you're talking about skin you that expression,

00:07:25.770 --> 00:07:27.140
you have different ways of doing it.

00:07:27.140 --> 00:07:31.120
But you have grown expression on a great expression.

00:07:31.120 --> 00:07:33.540
This time I'm going to show you as a great expression.

00:07:33.540 --> 00:07:35.740
You can go ahead and do it s across also.

00:07:35.740 --> 00:07:37.400
That should not be any problems with that.

00:07:37.400 --> 00:07:39.040
So since this is a demo,

00:07:39.040 --> 00:07:40.410
I wanted to happen faster.

00:07:40.410 --> 00:07:43.020
So I'm going to say right off every two minutes,

00:07:43.020 --> 00:07:48.810
let us say so that we can go ahead and take it off immediately on doing work for one minute

00:07:48.810 --> 00:07:48.810
.

00:07:48.810 --> 00:07:52.180
It is one minute not plural for two minutes and go on.

00:07:52.180 --> 00:07:55.090
Eso on that is floral with s.

00:07:55.090 --> 00:07:56.740
So if your language one minute,

00:07:56.740 --> 00:07:59.350
make sure that you're not adding it s here.

00:07:59.350 --> 00:08:03.590
So just going to make sure that I take it off correctly.

00:08:03.590 --> 00:08:06.850
That is all it is their Let us go ahead and center Cesar Stack.

00:08:06.850 --> 00:08:10.020
So let me Go head on.

00:08:10.020 --> 00:08:11.550
Deploy our stack as well.

00:08:11.550 --> 00:08:15.370
Now your stack is completed.

00:08:15.370 --> 00:08:19.350
Let us go to our consul and check out what are the resources that have been built?

00:08:19.350 --> 00:08:30.940
So let us go toe our easiest cluster on right now you're going to see here There are no

00:08:30.940 --> 00:08:37.070
services are no running task because it is a scheduled task on with Every time when there

00:08:37.070 --> 00:08:37.880
is an trigger,

00:08:37.880 --> 00:08:43.940
air service comes online best the process on dice don't completely So if you want to

00:08:43.940 --> 00:08:45.250
understand what is happening,

00:08:45.250 --> 00:08:47.010
you need to go and take your logs.

00:08:47.010 --> 00:08:47.730
For example,

00:08:47.730 --> 00:08:48.370
In this case,

00:08:48.370 --> 00:08:49.480
if I go to my task,

00:08:49.480 --> 00:08:55.440
if there's already one invocation then under stop sittings I will see the invocation here

00:08:55.440 --> 00:08:59.570
you can see here that is in massaging essential container in stopped state.

00:08:59.570 --> 00:09:03.990
So if I go ahead on click on the task itself under log section,

00:09:03.990 --> 00:09:09.610
you will find that there is an information that I created in my doctor container which

00:09:09.610 --> 00:09:11.340
say's what was the job date?

00:09:11.340 --> 00:09:13.190
That is when it started.

00:09:13.190 --> 00:09:14.770
It is an April time on.

00:09:14.770 --> 00:09:20.330
You can see the I P address parcel on every time this is going to be lock when my trigger

00:09:20.330 --> 00:09:21.070
is coming in.

00:09:21.070 --> 00:09:23.170
So let us go to our cloudwatch on,

00:09:23.170 --> 00:09:23.580
see,

00:09:23.580 --> 00:09:24.950
what are the different informations?

00:09:24.950 --> 00:09:31.410
So we will see this four lanes off law every time a container comes online on goes off line

00:09:31.410 --> 00:09:31.410
.

00:09:31.410 --> 00:09:35.450
So I'm going to show you the even trigger.

00:09:35.450 --> 00:09:39.670
Also say if you go to your resources section Andi,

00:09:39.670 --> 00:09:41.550
he will have your even true.

00:09:41.550 --> 00:09:47.120
So you have your do minute rule on under targets.

00:09:47.120 --> 00:09:51.840
It clearly says that the seller less a batch process architecture issues task that is being

00:09:51.840 --> 00:09:52.520
configured.

00:09:52.520 --> 00:09:56.540
So if you want to understand the task information also we have seen it many times.

00:09:56.540 --> 00:09:59.110
You have your cluster on your cluster,

00:09:59.110 --> 00:10:01.630
you have your services on for each.

00:10:01.630 --> 00:10:04.050
There was being a task attached to it.

00:10:04.050 --> 00:10:06.720
So if you go to your task definitions Andi,

00:10:06.720 --> 00:10:09.600
here's your badge processor task definition on.

00:10:09.600 --> 00:10:14.590
You can go here on how looking toe all the configurations that we have made to feel like a

00:10:14.590 --> 00:10:16.250
So let us go toe or club watch.

00:10:16.250 --> 00:10:19.460
Also on Did you see the loves on?

00:10:19.460 --> 00:10:21.210
There must be a few love streams.

00:10:21.210 --> 00:10:23.430
So let me open the 1st 1 on.

00:10:23.430 --> 00:10:25.470
This is the first entry you can see here.

00:10:25.470 --> 00:10:29.150
This was about a few minutes back on.

00:10:29.150 --> 00:10:30.000
This wasn't the I.

00:10:30.000 --> 00:10:30.140
P.

00:10:30.140 --> 00:10:33.070
Address off 10 02 on 7 to 30.

00:10:33.070 --> 00:10:33.710
What?

00:10:33.710 --> 00:10:36.000
What we will do is what we would lose.

00:10:36.000 --> 00:10:41.450
We will just duplicate this so we can go ahead and opened another log in another tab on

00:10:41.450 --> 00:10:44.390
combat I p addresses to make sure that if it is running in,

00:10:44.390 --> 00:10:46.890
different containers are in the same container.

00:10:46.890 --> 00:10:54.780
So maybe I am when the 1st 1 So you can see here this is running on 1 61 33 on this one was

00:10:54.780 --> 00:10:56.640
in a to 17 to 33.

00:10:56.640 --> 00:10:58.030
Wait for another two minutes.

00:10:58.030 --> 00:11:00.420
We will have one more log information,

00:11:00.420 --> 00:11:04.450
which will confirm that our services coming online.

00:11:04.450 --> 00:11:08.830
That's the best processing on dice down automatically without any problems.

00:11:08.830 --> 00:11:12.020
And so far we're not managing any easy to servers.

00:11:12.020 --> 00:11:17.140
So that means that there's no vaccine or arguing or configurations are management.

00:11:17.140 --> 00:11:18.450
Off those easy to instances,

00:11:18.450 --> 00:11:20.340
all that heavy lifting is done by far.

00:11:20.340 --> 00:11:26.020
Get on you Just manage your container image on your business Logic one lead.

00:11:26.020 --> 00:11:31.600
I'm just going to quickly check if that is one more long information that has come.

00:11:31.600 --> 00:11:37.380
You can see here there's one more on this would be completely different i p address.

00:11:37.380 --> 00:11:42.120
So that is how it works to summarize what we have done is we have created and far get

00:11:42.120 --> 00:11:43.260
cluster on.

00:11:43.260 --> 00:11:46.020
We have created and service and passed definition.

00:11:46.020 --> 00:11:50.670
But we also said that the task definition would not be running all the time because it is a

00:11:50.670 --> 00:11:56.190
task which will be time bound on for trigger off the time bone task we created and Cloud

00:11:56.190 --> 00:12:02.320
what's doing on said We'll head and create this task whenever this even happens.

00:12:02.320 --> 00:12:03.020
And in this case,

00:12:03.020 --> 00:12:06.120
we created a time bomb that that is every two minutes.

00:12:06.120 --> 00:12:07.860
You can have something like an SMS.

00:12:07.860 --> 00:12:14.230
Notification are an email coming from your certain in individual that can trigger this task

00:12:14.230 --> 00:12:18.350
also so you can have different combinations with Lambda functions and cloudwatch even sold

00:12:18.350 --> 00:12:18.350
.

00:12:18.350 --> 00:12:19.840
Go ahead and try them.

00:12:19.840 --> 00:12:20.820
Have fun with them,

00:12:20.820 --> 00:12:25.860
create a different set up architectures on show the world what you can burn as always.

00:12:25.860 --> 00:12:27.760
Thanks for watching Happy learning

