WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.230
Hello,

00:00:00.230 --> 00:00:00.990
folks.

00:00:00.990 --> 00:00:03.140
Welcome to a lecture on CD game.

00:00:03.140 --> 00:00:07.710
We're going to look at how to build and complete application using Siri K.

00:00:07.710 --> 00:00:12.160
The application that we're going to build today is going to be in chat application where

00:00:12.160 --> 00:00:15.000
multiple people can communicate with each other,

00:00:15.000 --> 00:00:17.280
which is similar to a chat room lobby on.

00:00:17.280 --> 00:00:20.450
We're going to run the state application in containers,

00:00:20.450 --> 00:00:22.300
and we're talking about containers.

00:00:22.300 --> 00:00:28.420
You can run them in many ways on our application is going to run using forget service so

00:00:28.420 --> 00:00:30.500
that we don't have to manage any sellers.

00:00:30.500 --> 00:00:32.980
Underlying it are patty or updating them.

00:00:32.980 --> 00:00:35.950
So our architecture is going to look something like this.

00:00:35.950 --> 00:00:41.950
We're going to use the far get service on creative Forget cluster on inside the plaster

00:00:41.950 --> 00:00:44.750
we're going to configure on chat service on.

00:00:44.750 --> 00:00:48.090
We're going to give some container definitions inside the chat service,

00:00:48.090 --> 00:00:52.580
saying how many containers we want so that we can support the maximum number of users in

00:00:52.580 --> 00:00:53.690
our chat application.

00:00:53.690 --> 00:00:57.120
So once we have our chat and tennis deployed,

00:00:57.120 --> 00:01:00.350
what we will do is well provisioned and application load balancer,

00:01:00.350 --> 00:01:05.110
which would be pointing toe all the different containers so that we have one entry point

00:01:05.110 --> 00:01:09.090
which our users can use for communicating at each other.

00:01:09.090 --> 00:01:14.110
So what you can do is you can go ahead and add some monitoring rules on then increase the

00:01:14.110 --> 00:01:18.900
containers or decreasing depending upon the number of users that you have on your chat

00:01:18.900 --> 00:01:19.600
application.

00:01:19.600 --> 00:01:22.130
So this is architecture we're going to build on.

00:01:22.130 --> 00:01:24.140
We will see how to do that with TDK.

00:01:24.140 --> 00:01:26.690
So let's go to our stack on start building it.

00:01:26.690 --> 00:01:32.270
This is the fact that we're going to use for building our multiples and chat application.

00:01:32.270 --> 00:01:35.750
I have named it as Monty Person Chat Application Stat.

00:01:35.750 --> 00:01:37.410
Right now,

00:01:37.410 --> 00:01:40.600
we have not built any resource in this application.

00:01:40.600 --> 00:01:42.420
All of them are comments on.

00:01:42.420 --> 00:01:43.850
There are no imports as well,

00:01:43.850 --> 00:01:46.950
so we will start building it completely from the scratch.

00:01:46.950 --> 00:01:51.060
So the first thing is for any cluster which is going to run our containers.

00:01:51.060 --> 00:01:56.600
We didn't BPC on the BBC is going to come from the easy to model so that this go ahead and

00:01:56.600 --> 00:02:02.140
import easy to model we have imported.

00:02:02.140 --> 00:02:12.890
Let us go ahead on build our VPC scope it and set an I D on.

00:02:12.890 --> 00:02:17.860
I'm going to say I want buy VPC to be spread across two availability zones on.

00:02:17.860 --> 00:02:23.250
I want one that get way for my BBC so that I have Internet connectivity.

00:02:23.250 --> 00:02:25.630
So if you want high availability for a Nat gateways,

00:02:25.630 --> 00:02:29.450
go ahead and change the value to and you will get to not get raise.

00:02:29.450 --> 00:02:32.770
Let's go ahead and build our chat app cluster,

00:02:32.770 --> 00:02:35.720
which is going to be based on and forget Cluster.

00:02:35.720 --> 00:02:36.870
So I'm going to call this.

00:02:36.870 --> 00:02:39.070
Asked that act Lester on.

00:02:39.070 --> 00:02:42.000
This is part of the BCS model on Remember,

00:02:42.000 --> 00:02:43.300
we have not imported it,

00:02:43.300 --> 00:02:45.450
so let's go ahead and import it first.

00:02:45.450 --> 00:02:50.420
So we have our Ethier's dot cluster on.

00:02:50.420 --> 00:02:51.510
Then underneath that,

00:02:51.510 --> 00:02:54.370
I'm going to have an scoping on,

00:02:54.370 --> 00:02:56.110
then have an i d for that.

00:02:56.110 --> 00:03:03.270
So we got our cluster created now is going to be the service that we're going to define on

00:03:03.270 --> 00:03:04.200
for that service.

00:03:04.200 --> 00:03:07.040
We need our task definition on the container definition,

00:03:07.040 --> 00:03:10.090
so the first step is going to be the task definition.

00:03:10.090 --> 00:03:13.400
So let the school head and create our task definition.

00:03:13.400 --> 00:03:15.880
On the easiest morning,

00:03:15.880 --> 00:03:21.830
we have something called as a fargate task definition that has choose that on inside this

00:03:21.830 --> 00:03:29.290
look at the scope on Also mentioned this is going to be our chat app past definition.

00:03:29.290 --> 00:03:32.190
So that is all it is therefore creating the task of mission.

00:03:32.190 --> 00:03:36.380
Under the stuff definition we're going to create and container definition saying that which

00:03:36.380 --> 00:03:39.370
container we want to run on Violet is going to come from.

00:03:39.370 --> 00:03:41.390
So that is what we're going to do now.

00:03:41.390 --> 00:03:44.640
So I'm going to say chat app container.

00:03:44.640 --> 00:03:45.500
I'm here.

00:03:45.500 --> 00:03:50.920
We're going to say that have passed definition dark at container on inside this.

00:03:50.920 --> 00:03:53.550
We're going to have our scope i d.

00:03:53.550 --> 00:03:56.050
He made.

00:03:56.050 --> 00:04:02.800
I'm going to use an image from a doctor hub if you have an image that is promising from

00:04:02.800 --> 00:04:05.280
easy are your own private reported three.

00:04:05.280 --> 00:04:06.990
You can go ahead and add that.

00:04:06.990 --> 00:04:10.810
So I'm going to choose from registry here on here.

00:04:10.810 --> 00:04:12.290
I'm going to choose my report it,

00:04:12.290 --> 00:04:12.750
Terry.

00:04:12.750 --> 00:04:20.770
Inside this I have a container which is having the chat application fargate chat up on

00:04:20.770 --> 00:04:23.650
going to choose the latest washing off that application.

00:04:23.650 --> 00:04:27.440
So if you want to pass on some environment where labels for your containment is,

00:04:27.440 --> 00:04:32.220
it will be the best place to do it on any definition for environment that you are here will

00:04:32.220 --> 00:04:36.970
be automatically passed on to your container so little school head and add a very simple

00:04:36.970 --> 00:04:38.350
environment information.

00:04:38.350 --> 00:04:43.550
So I'm going to say that this is a cold coming from I'm going to say get up.

00:04:43.550 --> 00:04:51.310
You can go ahead and add an environment variable or any other combination off key value

00:04:51.310 --> 00:04:53.670
pair that you want to pass on to our containers.

00:04:53.670 --> 00:04:57.840
So this application is going to run the chat application on Port 3000.

00:04:57.840 --> 00:05:01.230
We need to map this port toe the container for sport.

00:05:01.230 --> 00:05:06.330
So that is what we're going to do in the next section will make mapping our container port

00:05:06.330 --> 00:05:07.290
to the horse Ford.

00:05:07.290 --> 00:05:09.430
So let us pick up this chat app.

00:05:09.430 --> 00:05:11.000
Continue on under this,

00:05:11.000 --> 00:05:12.330
we have something called us.

00:05:12.330 --> 00:05:14.190
Add port map.

00:05:14.190 --> 00:05:23.450
Ing's Andre will do easiest dot for mapping on our container port is 3000.

00:05:23.450 --> 00:05:29.750
On what protocol that they're going to use that what you're going to define now easiest dot

00:05:29.750 --> 00:05:35.850
protocol On under this we have DCP because our chat application is going to use the TCP

00:05:35.850 --> 00:05:36.420
Protocol.

00:05:36.420 --> 00:05:38.840
So we have to find our container information.

00:05:38.840 --> 00:05:44.280
We have defined our task information so final step is going ahead and adding our Jack

00:05:44.280 --> 00:05:45.200
service itself,

00:05:45.200 --> 00:05:49.060
which is going toe have application nor ballots or friends and they get so let us define

00:05:49.060 --> 00:05:49.450
that.

00:05:49.450 --> 00:05:54.340
So we are going to use the easiest pattern on.

00:05:54.340 --> 00:05:56.040
We have not imported it yet,

00:05:56.040 --> 00:05:58.450
so let's go ahead and do that now.

00:05:58.450 --> 00:06:04.020
So,

00:06:04.020 --> 00:06:05.130
on the easiest patents,

00:06:05.130 --> 00:06:08.250
we have something called us Application Lord Balanced.

00:06:08.250 --> 00:06:09.970
Forget service,

00:06:09.970 --> 00:06:11.850
just going to type it out.

00:06:11.850 --> 00:06:19.630
So at the scope on mentioned the name on then from which cluster we're going to host our

00:06:19.630 --> 00:06:22.560
services from we have our chat app cluster.

00:06:22.560 --> 00:06:28.420
So let us juice that on what is going to be my task definition we have on chat at past

00:06:28.420 --> 00:06:28.880
definition.

00:06:28.880 --> 00:06:30.090
Let me choose that.

00:06:30.090 --> 00:06:31.360
And likewise,

00:06:31.360 --> 00:06:34.290
we don't want our service to be running in public.

00:06:34.290 --> 00:06:37.270
So I'm going to choose force here on at the same time.

00:06:37.270 --> 00:06:41.800
We want our load balancer to be publicly accessible so people can connect to it.

00:06:41.800 --> 00:06:42.400
Hand it,

00:06:42.400 --> 00:06:43.970
Jack on application.

00:06:43.970 --> 00:06:48.220
So we're going to choose true for for big load balancer and what port we want over.

00:06:48.220 --> 00:06:50.610
Let's load balancer to be listening to.

00:06:50.610 --> 00:06:54.330
We are not using 443 But if you have SSL certificates,

00:06:54.330 --> 00:06:59.350
go ahead and configure on child support for 43 on this is going to be the most.

00:06:59.350 --> 00:07:02.200
I'm just going to run it with the 12 circle task.

00:07:02.200 --> 00:07:04.710
If you're going tohave a supplication for multiple people,

00:07:04.710 --> 00:07:05.550
a lot of people,

00:07:05.550 --> 00:07:10.540
then you can measure the mattresses and ADM or task that you want to run.

00:07:10.540 --> 00:07:11.120
Finally,

00:07:11.120 --> 00:07:13.950
I'm going to choose a service name asked chat app.

00:07:13.950 --> 00:07:19.180
So that is all it is their toe configure our chat application.

00:07:19.180 --> 00:07:21.010
We need that you ordered to connect your applications.

00:07:21.010 --> 00:07:24.350
So I'm just going to output that you other from our load balancer.

00:07:24.350 --> 00:07:40.230
So that is all it is that we have.

00:07:40.230 --> 00:07:41.990
I thought everything on.

00:07:41.990 --> 00:07:45.480
Let me just quickly go ahead and check if there are any errors.

00:07:45.480 --> 00:07:47.260
We have got our BBC.

00:07:47.260 --> 00:07:49.900
We have got our Jack cluster on.

00:07:49.900 --> 00:07:55.130
We have got our task definition Then the container definition on the mapping for our

00:07:55.130 --> 00:07:57.350
container looks good.

00:07:57.350 --> 00:07:58.350
Andi,

00:07:58.350 --> 00:08:00.250
for our service also looks good.

00:08:00.250 --> 00:08:02.400
So let's go ahead and synthesize Onda.

00:08:02.400 --> 00:08:11.110
See if we can deploy it so everything seems good now we got our stack completed.

00:08:11.110 --> 00:08:12.610
Let us go to the console and check.

00:08:12.610 --> 00:08:14.460
What are the resources that have been deployed on?

00:08:14.460 --> 00:08:16.450
Then we'll take our application itself.

00:08:16.450 --> 00:08:22.550
So we should have unpleasant Er I'm in a Virginia region.

00:08:22.550 --> 00:08:23.310
You can see here.

00:08:23.310 --> 00:08:24.420
That is a far get closer.

00:08:24.420 --> 00:08:30.250
Can figure with the service on day or so and that that is running there.

00:08:30.250 --> 00:08:32.000
So this is the service.

00:08:32.000 --> 00:08:32.590
Remember?

00:08:32.590 --> 00:08:34.180
We said the service name as data.

00:08:34.180 --> 00:08:35.750
That is what it's appearing here on.

00:08:35.750 --> 00:08:36.410
Like wise.

00:08:36.410 --> 00:08:37.220
If I go inside,

00:08:37.220 --> 00:08:39.450
there must be one task that it's running.

00:08:39.450 --> 00:08:41.140
So here are my tasks,

00:08:41.140 --> 00:08:42.390
and this is the task idea.

00:08:42.390 --> 00:08:43.560
And this is the definition.

00:08:43.560 --> 00:08:46.260
If you want to go ahead and check the logs off this task,

00:08:46.260 --> 00:08:47.580
you can go ahead and check.

00:08:47.580 --> 00:08:48.390
That s well,

00:08:48.390 --> 00:08:50.410
so right now we have it running.

00:08:50.410 --> 00:08:52.390
So that is nothing to see here.

00:08:52.390 --> 00:08:56.000
So we can go to our load balancer also and pick up the girl.

00:08:56.000 --> 00:08:57.350
Are we can pick up the u R.

00:08:57.350 --> 00:09:01.330
L from our stack because we out put it that you are in here.

00:09:01.330 --> 00:09:06.610
So what I'm going to do is I'm just going to pick it up on then use two different roses for

00:09:06.610 --> 00:09:06.750
us.

00:09:06.750 --> 00:09:08.750
This letter school had an open it here.

00:09:08.750 --> 00:09:09.660
Andi,

00:09:09.660 --> 00:09:13.010
just going to say user one on.

00:09:13.010 --> 00:09:17.250
I'm going to say hello here and let me open another two grocers.

00:09:17.250 --> 00:09:19.900
So these are two different roses,

00:09:19.900 --> 00:09:22.760
so it should appear as other ideas.

00:09:22.760 --> 00:09:28.650
So I'm just going to say the furnace users to on this one is going to be served three.

00:09:28.650 --> 00:09:31.200
So if I type in,

00:09:31.200 --> 00:09:36.700
let us here hello from user to we should be getting the information on the other chat

00:09:36.700 --> 00:09:37.100
window.

00:09:37.100 --> 00:09:37.650
Likewise,

00:09:37.650 --> 00:09:41.320
if I'm going to say hi for a user three,

00:09:41.320 --> 00:09:43.350
we should be getting it'll here on.

00:09:43.350 --> 00:09:46.100
All that information is available on the first trip.

00:09:46.100 --> 00:09:51.710
So basically what we have done is were created on real time multi person chat application

00:09:51.710 --> 00:09:53.960
that people can come and log in on,

00:09:53.960 --> 00:09:58.710
then have discussions about the topics off their interest on it is all running without any

00:09:58.710 --> 00:10:04.100
sores on the background that you need to manage or scale to summarize were created and

00:10:04.100 --> 00:10:08.200
forget cluster on within that cluster recreated and chat service on.

00:10:08.200 --> 00:10:13.020
Then we configured our task definitions on the containment of missions on pointed and load

00:10:13.020 --> 00:10:19.350
balancing our tasks that are running on then we use that you are to check whether multiple

00:10:19.350 --> 00:10:21.760
people can talk to each other at the same time.

00:10:21.760 --> 00:10:23.520
Go ahead and try it out.

00:10:23.520 --> 00:10:26.470
Make some improvements at some authentication mechanism.

00:10:26.470 --> 00:10:32.170
Create some stories mechanism to start the chap messages on How fun with your friends as

00:10:32.170 --> 00:10:32.810
always.

00:10:32.810 --> 00:10:34.680
Thanks for watching Happy learning.

