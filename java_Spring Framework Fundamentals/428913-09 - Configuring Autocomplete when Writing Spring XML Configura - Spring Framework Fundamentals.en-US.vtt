WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.850
So in order to write our XML configuration file,

00:00:04.850 --> 00:00:08.840
which is gonna configure the spring beans in the container In order to do that,

00:00:08.840 --> 00:00:12.470
we just need to get some auto complete set up just so that the idea can give us a little

00:00:12.470 --> 00:00:14.640
bit of a helping hand from writing the XML.

00:00:14.640 --> 00:00:15.800
So let's do that now.

00:00:15.800 --> 00:00:17.290
So we start out boy,

00:00:17.290 --> 00:00:26.610
putting the XML product day utf eight and then all spring configuration file.

00:00:26.610 --> 00:00:27.680
Start with beans,

00:00:27.680 --> 00:00:30.390
but you'll see that when I do this doesn't know also complete.

00:00:30.390 --> 00:00:34.120
So we need to define the Exxon on their MySpace For this,

00:00:34.120 --> 00:00:36.490
which happens to be this one here it's coming up with.

00:00:36.490 --> 00:00:40.580
So these the possible name spaces which intelligent idea recognizes.

00:00:40.580 --> 00:00:43.680
So he was this one spring from a dog scheme of beans.

00:00:43.680 --> 00:00:44.530
You know,

00:00:44.530 --> 00:00:48.850
if we copy and paste up into crumb,

00:00:48.850 --> 00:00:56.370
look at the schemers you'll see here that for spring framework,

00:00:56.370 --> 00:01:00.120
these are all of the scheme is that they have which is useful for using any other in the

00:01:00.120 --> 00:01:00.790
spring libraries.

00:01:00.790 --> 00:01:02.150
But if we go to beans,

00:01:02.150 --> 00:01:04.380
I will select spring beans.

00:01:04.380 --> 00:01:05.050
Texas D.

00:01:05.050 --> 00:01:06.760
This is the actual xsd,

00:01:06.760 --> 00:01:10.970
the external schemer that the external configuration file will be validated against at run

00:01:10.970 --> 00:01:11.880
time when it's loaded.

00:01:11.880 --> 00:01:16.830
But it's also the one as well that the I D needs to use to be able to do the altar complete

00:01:16.830 --> 00:01:22.580
stuff and also produced him back out again and again.

00:01:22.580 --> 00:01:26.950
Just know as well that each one of these folders corresponds to a module as well.

00:01:26.950 --> 00:01:31.320
So to jump back out here and relate that to the projects which we've got all the external

00:01:31.320 --> 00:01:32.670
libraries that we imported in Rather,

00:01:32.670 --> 00:01:34.620
you can see we've got spring beans.

00:01:34.620 --> 00:01:38.580
So that's the scheme of which is underneath here.

00:01:38.580 --> 00:01:39.540
We've also got,

00:01:39.540 --> 00:01:40.210
for example,

00:01:40.210 --> 00:01:45.480
spring context and you can see that the concepts there is also going to the context.

00:01:45.480 --> 00:01:48.970
Then this is the external schemer for the spring context module.

00:01:48.970 --> 00:01:49.720
Anyway,

00:01:49.720 --> 00:01:50.440
we don't need that.

00:01:50.440 --> 00:01:51.750
That's just useful points out.

00:01:51.750 --> 00:01:55.450
So we go back to beans.

00:01:55.450 --> 00:01:57.440
This is the XSD we had.

00:01:57.440 --> 00:01:59.040
So we're just gonna take this and copy it.

00:01:59.040 --> 00:02:01.620
We'll use that a second on,

00:02:01.620 --> 00:02:02.840
then jumped back to the I D.

00:02:02.840 --> 00:02:08.110
So the next thing we need to do is to tell idea where the schemer is,

00:02:08.110 --> 00:02:08.780
So,

00:02:08.780 --> 00:02:09.110
xml,

00:02:09.110 --> 00:02:09.380
honestly,

00:02:09.380 --> 00:02:10.560
just basically the name space.

00:02:10.560 --> 00:02:14.240
But we need to still bind that name supposed to the XML scheme of being used.

00:02:14.240 --> 00:02:14.840
So exam.

00:02:14.840 --> 00:02:16.000
Alice likes it.

00:02:16.000 --> 00:02:25.210
Sorry equals Expo scheme instance and that we've got that weaken Do exercise schema

00:02:25.210 --> 00:02:28.520
location for the beans which is the XML name.

00:02:28.520 --> 00:02:32.500
Spitzer just declared and then pointed to the actual xsd and I.

00:02:32.500 --> 00:02:33.170
If I do that,

00:02:33.170 --> 00:02:35.370
we'll see that we should have also complete working.

00:02:35.370 --> 00:02:39.610
So this means we should be able to go inside that beans collection.

00:02:39.610 --> 00:02:44.470
So this top level element beans defines a collection of beans which we're gonna place into

00:02:44.470 --> 00:02:45.250
the spring container.

00:02:45.250 --> 00:02:49.780
So that means now I should be able to do opening angle bracket and you can see here we've

00:02:49.780 --> 00:02:53.930
got all of the different tax now that we can use at this point in the XML configuration for

