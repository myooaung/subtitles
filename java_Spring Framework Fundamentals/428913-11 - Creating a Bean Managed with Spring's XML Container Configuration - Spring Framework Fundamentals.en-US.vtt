WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.690
It's another We got a complete set up for our XML files.

00:00:04.690 --> 00:00:09.600
We can't just start writing the XML configuration to create a simple being and place it

00:00:09.600 --> 00:00:10.660
into the spring container.

00:00:10.660 --> 00:00:12.140
Let's take a look at this now them.

00:00:12.140 --> 00:00:13.770
So,

00:00:13.770 --> 00:00:14.160
first of all,

00:00:14.160 --> 00:00:15.160
we need to create a bean,

00:00:15.160 --> 00:00:16.590
so we're gonna use the bean tech.

00:00:16.590 --> 00:00:18.820
So put that in here on.

00:00:18.820 --> 00:00:19.860
We need to get an I D.

00:00:19.860 --> 00:00:23.880
And we need to give it a class as well.

00:00:23.880 --> 00:00:26.360
So we'll fill those out in a second.

00:00:26.360 --> 00:00:28.260
Basically your wiring files,

00:00:28.260 --> 00:00:28.730
by the way,

00:00:28.730 --> 00:00:30.000
this spring configuration file.

00:00:30.000 --> 00:00:31.420
Sometimes it's not as a wiring fault.

00:00:31.420 --> 00:00:36.970
These files typically would have different beans declared in them on beans could have

00:00:36.970 --> 00:00:37.940
references to other beings,

00:00:37.940 --> 00:00:41.050
which your so called dependency injected into them as well.

00:00:41.050 --> 00:00:42.660
So we'll see that later on.

00:00:42.660 --> 00:00:43.560
But for now,

00:00:43.560 --> 00:00:44.550
let's just get rid of that.

00:00:44.550 --> 00:00:48.490
And let's create an actual job across that would once have been managed.

00:00:48.490 --> 00:00:49.150
Boy,

00:00:49.150 --> 00:00:50.190
the spring container.

00:00:50.190 --> 00:00:51.170
Also,

00:00:51.170 --> 00:00:52.180
let's give it to this as well.

00:00:52.180 --> 00:00:53.850
Keep things clean.

00:00:53.850 --> 00:01:01.410
So if we're going to hear and do new job across unless just creates across,

00:01:01.410 --> 00:01:02.550
call my service.

00:01:02.550 --> 00:01:05.640
Imagine this is just a service class to do some important work.

00:01:05.640 --> 00:01:07.170
Just great method on here.

00:01:07.170 --> 00:01:08.050
Public void.

00:01:08.050 --> 00:01:12.050
Do something.

00:01:12.050 --> 00:01:18.340
I just put a print message here doing something important.

00:01:18.340 --> 00:01:19.020
Okay,

00:01:19.020 --> 00:01:20.940
This is a service we want to have managed,

00:01:20.940 --> 00:01:21.350
Boy,

00:01:21.350 --> 00:01:28.090
the spring container so we can do now is we can take this package name here and use that to

00:01:28.090 --> 00:01:30.140
get a fully qualified class name of the service.

00:01:30.140 --> 00:01:31.500
So be condescension.

00:01:31.500 --> 00:01:32.340
That training at demos,

00:01:32.340 --> 00:01:38.780
that my up my service and we're gonna pop this into this class on here,

00:01:38.780 --> 00:01:41.770
and it's my service.

00:01:41.770 --> 00:01:42.950
We could also just take that.

00:01:42.950 --> 00:01:44.380
Like we said before,

00:01:44.380 --> 00:01:45.450
it's copied that from there.

00:01:45.450 --> 00:01:50.260
And now we've got the full class names with fully qualified class name of the service.

00:01:50.260 --> 00:01:52.550
We want to have the spring container manage.

00:01:52.550 --> 00:01:54.580
I would give it an idea as well,

00:01:54.580 --> 00:01:56.310
so we could just call it service.

00:01:56.310 --> 00:01:56.650
For now,

00:01:56.650 --> 00:01:59.270
it doesn't really matter for the purposes of this demo,

00:01:59.270 --> 00:02:02.350
we just want to basically know that we can create instance of the spring container,

00:02:02.350 --> 00:02:04.420
have a configuration file that creates the bean,

00:02:04.420 --> 00:02:08.790
but it's gonna manage and then be able to get that being from the spring container itself.

00:02:08.790 --> 00:02:10.650
So that when everything's kind of working together.

00:02:10.650 --> 00:02:14.890
So that's how you can configure a simple being using the XML configuration,

00:02:14.890 --> 00:02:17.350
and in the next video we'll see how we can actually use it.

00:02:17.350 --> 00:02:18.810
But we explore spring instead,

00:02:18.810 --> 00:02:21.690
initiating this and then is retrieving it from the container.

