WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.860
So now that we're familiar with the spring container,

00:00:03.860 --> 00:00:07.030
that we've seen the different ways of configuring it to be able to manage our beans and

00:00:07.030 --> 00:00:08.970
have the container to dependency injection for us.

00:00:08.970 --> 00:00:09.720
Now that we've seen that,

00:00:09.720 --> 00:00:13.140
let's have a look at how we can configure properties and inject properties into the beans

00:00:13.140 --> 00:00:16.020
because usually in an application you tend to have a properties file,

00:00:16.020 --> 00:00:17.790
or maybe even minus T system properties,

00:00:17.790 --> 00:00:20.850
which you pass in when you launch the JV M or environment variables as well.

00:00:20.850 --> 00:00:23.400
There's different ways of properties being able to get into an application,

00:00:23.400 --> 00:00:26.470
So it's good for us to know how that's dealt with in spring slash jump on this.

00:00:26.470 --> 00:00:31.560
Now let's suppose we have my service and supposing we need to pass a property to this

00:00:31.560 --> 00:00:33.350
service being which is going to use it run time.

00:00:33.350 --> 00:00:34.750
So to do that,

00:00:34.750 --> 00:00:38.230
we'll have a private member to store the property value.

00:00:38.230 --> 00:00:40.110
So that's supposing it's the user's name,

00:00:40.110 --> 00:00:40.750
for example.

00:00:40.750 --> 00:00:44.050
And then if we go down here in do business logic,

00:00:44.050 --> 00:00:49.410
we continue doing business Logic four and in the name of the person.

00:00:49.410 --> 00:00:55.380
So how we inject the property is basically with an annotation called app Value and inside

00:00:55.380 --> 00:01:00.670
out value is gonna take a string with a so called property place older expression which

00:01:00.670 --> 00:01:02.740
resolves property under the key.

00:01:02.740 --> 00:01:03.610
We're gonna give it here,

00:01:03.610 --> 00:01:06.950
inside this dollar on the curly braces to the corresponding value.

00:01:06.950 --> 00:01:08.730
So I should say,

00:01:08.730 --> 00:01:09.650
my dot name,

00:01:09.650 --> 00:01:10.280
for example,

00:01:10.280 --> 00:01:12.430
a terrible name for property.

00:01:12.430 --> 00:01:13.880
But you get the idea now,

00:01:13.880 --> 00:01:14.280
next up,

00:01:14.280 --> 00:01:16.250
we need to actually create a properties file,

00:01:16.250 --> 00:01:20.650
which will just call application dot properties.

00:01:20.650 --> 00:01:24.990
This is gonna live in source men resources.

00:01:24.990 --> 00:01:25.660
So in other words,

00:01:25.660 --> 00:01:28.300
it's gonna be on the route of the class ladder for the application.

00:01:28.300 --> 00:01:29.310
Hey,

00:01:29.310 --> 00:01:30.420
we just put our property.

00:01:30.420 --> 00:01:34.400
My dot name equals Matt,

00:01:34.400 --> 00:01:35.120
for example.

00:01:35.120 --> 00:01:35.750
Okay,

00:01:35.750 --> 00:01:36.250
that's good.

00:01:36.250 --> 00:01:40.760
Now it's going to apcom thick andan ap conflict or missing a few things here.

00:01:40.760 --> 00:01:45.950
We need the package name in the component skin,

00:01:45.950 --> 00:01:59.140
that repository to make the repository of component that service to make the service a

00:01:59.140 --> 00:02:02.150
component and then also wired.

00:02:02.150 --> 00:02:08.350
I want a constructor to make sure that the being set up Okay.

00:02:08.350 --> 00:02:09.740
Anyway,

00:02:09.740 --> 00:02:10.220
that looks good.

00:02:10.220 --> 00:02:13.250
Now they had to go back to the apcom thick goto apcom thick.

00:02:13.250 --> 00:02:16.790
That's its components.

00:02:16.790 --> 00:02:17.130
can.

00:02:17.130 --> 00:02:20.000
And this is where you put the extra item on the configuration crisis.

00:02:20.000 --> 00:02:20.310
Well,

00:02:20.310 --> 00:02:26.120
that's basically a property source annotation So property source.

00:02:26.120 --> 00:02:28.280
And here we're gonna pass in the location.

00:02:28.280 --> 00:02:30.030
So the location is on the class.

00:02:30.030 --> 00:02:30.450
Beth,

00:02:30.450 --> 00:02:34.350
it's called Application the Properties.

00:02:34.350 --> 00:02:35.300
Okay,

00:02:35.300 --> 00:02:41.860
so now if I go back to APP on once we get the service will invoke the business method.

00:02:41.860 --> 00:02:43.450
Do business logic on.

00:02:43.450 --> 00:02:49.630
Then we should find that this field here and them is populated with the value which

00:02:49.630 --> 00:02:53.730
corresponds to mine dot name and it'll print out doing business Logic four and then the

00:02:53.730 --> 00:02:54.820
value of that which has met.

00:02:54.820 --> 00:03:07.140
So it's just double check that works control shift are to run and it doesn't work.

00:03:07.140 --> 00:03:09.050
And that's because we didn't create it.

00:03:09.050 --> 00:03:14.090
A swordsman resources directory That wasn't about apologies,

00:03:14.090 --> 00:03:16.980
but it's good to see errors when that happened,

00:03:16.980 --> 00:03:18.870
cause then you can No,

00:03:18.870 --> 00:03:22.450
what's Dubai CS?

00:03:22.450 --> 00:03:26.930
And now we've got source men Java in swordsman resources on inside the application dot

00:03:26.930 --> 00:03:27.520
properties.

00:03:27.520 --> 00:03:28.700
Okay,

00:03:28.700 --> 00:03:33.730
so now if we go back and rerun,

00:03:33.730 --> 00:03:36.650
we should work.

00:03:36.650 --> 00:03:37.860
Yes,

00:03:37.860 --> 00:03:40.050
so you can see it says doing business logic format.

00:03:40.050 --> 00:03:40.690
OK,

00:03:40.690 --> 00:03:42.150
so that's how we can inject a property.

00:03:42.150 --> 00:03:43.650
And when we using the annotations

