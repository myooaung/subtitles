1
00:00:02,310 --> 00:00:03,770
Wir haben also die Bildauswahl.

2
00:00:03,780 --> 00:00:05,920
Stellen wir sicher, dass wir es hochladen können.

3
00:00:06,140 --> 00:00:12,260
Und wenn Sie nach Firebase-Flatterspeicher googeln, sollten Sie das Firebase-Speicherfilterpaket

4
00:00:12,290 --> 00:00:13,280
finden.

5
00:00:13,440 --> 00:00:17,640
Und wir haben bereits einige flatternde Firebase-Pakete gesehen.

6
00:00:17,640 --> 00:00:24,540
Wir haben gesehen, dass das Cloud Fire Store-Paket im Firebase-Off-Paket Cloud Fire Store

7
00:00:24,680 --> 00:00:32,070
denjenigen mit der Fire Store-Datenbank hilft. Firebase hilft uns bei der Firebase-Authentifizierung, und

8
00:00:32,070 --> 00:00:35,420
Firebase-Speicher hilft uns beim Firebase-Cloud-Speicher.

9
00:00:35,640 --> 00:00:38,010
Jetzt ist die erneute Installation ziemlich trivial.

10
00:00:38,010 --> 00:00:46,840
Wir kopieren diese Abhängigkeit einfach hier und gehen dann zum Pub-Aspekt der GMO-Datei und fügen hinzu. Jetzt haben wir bereits in der Vergangenheit

11
00:00:46,840 --> 00:00:52,380
gesehen, dass das Hinzufügen neuer Projekte in der bereits ausgeführten Anwendung normalerweise nicht funktioniert.

12
00:00:52,480 --> 00:01:00,200
Also werden wir es schließen und an diesem Punkt bereits neu starten, so dass es später hoffentlich funktioniert, nachdem wir

13
00:01:00,260 --> 00:01:07,830
Firebase-Speicher hinzugefügt haben und ich das Bild hochladen möchte, wenn der Benutzer jemals ein Bild ausgewählt hat, das den

14
00:01:07,830 --> 00:01:13,480
Rest des Off-Formulars ausfüllt und gedrückt hat Diese Schaltfläche zum Senden haben wir deaktiviert.

15
00:01:14,220 --> 00:01:20,030
Daher müssen wir eine wichtige Sache tun, um sicherzustellen, dass das ausgewählte Benutzerbild, das

16
00:01:20,040 --> 00:01:28,380
wir in diesem Widget zur Auswahl von Benutzerbildern verwalten, für Ward ist. Es ist vorbei, für ihn abzuschlagen, da wir dort

17
00:01:28,380 --> 00:01:35,640
letztendlich alle eingegebenen Daten sammeln und dann am Ende wieder an den Off-Screen weitergeleitet, mit Hilfe dieser Submit-F-End-Eigenschaft,

18
00:01:35,640 --> 00:01:39,500
die wir verwalten, und Sie alle für ihn.

19
00:01:39,660 --> 00:01:43,550
Auf diese Weise bringen wir am Ende alle unsere Off-Daten auf den Off-Bildschirm.

20
00:01:43,920 --> 00:01:49,590
Wir müssen also das Bild an Sie alle weiterleiten, damit wir von da an auf

21
00:01:50,250 --> 00:01:56,130
den Off-Bildschirm weitergeleitet werden können, um das ausgewählte Bild an das Off-Formular weiterzuleiten. Wir können den

22
00:01:56,130 --> 00:02:03,600
gleichen Ansatz verwenden, den wir in diesem Kurs immer wieder verwendet haben Fügen Sie dem Benutzerbildauswahl-Widget eine Eigenschaft hinzu, und

23
00:02:03,600 --> 00:02:10,630
diese Eigenschaft ist eine Funktion, die wir innerhalb dieses Widgets aufrufen können, die wir jedoch außerhalb des Widgets umgehen.

24
00:02:10,630 --> 00:02:18,500
Daher fügen wir hier eine neue Eigenschaft und Ihre endgültige Eigenschaft hinzu, die vom Typ ist Funktion, die ich als Bild auswählen

25
00:02:18,590 --> 00:02:26,390
werde fn der Name liegt bei Ihnen, obwohl diese Funktion nichts zurückgibt, sondern aus einem Argument aus einer Parameterperspektive tatsächlich das

26
00:02:26,390 --> 00:02:34,490
ausgewählte Bild empfängt, ein Datei ausgewähltes Bild als Argument erhält und jetzt wir Fügen Sie den Konstruktor zur Benutzerbildauswahl hinzu, und dort

27
00:02:35,180 --> 00:02:40,370
machen wir deutlich, dass wir erwarten, einen Zeiger auf eine solche Funktion

28
00:02:40,370 --> 00:02:46,520
als Argument zu erhalten, und binden dann diese Funktion, die wir als Argument erhalten, an diese

29
00:02:46,640 --> 00:02:53,510
Bildauswahl F und Eigenschaft, und da dies so ist gebunden und seit wir jetzt Mit dieser Eigenschaft können wir

30
00:02:53,750 --> 00:02:59,930
diese Funktion aufrufen, wenn das Bild ausgewählt wurde, um das umgebende Formular über das Bild zu informieren.

31
00:03:00,020 --> 00:03:09,240
Neben der Einstellung unseres Status zur Überprüfung des Bildes werde ich hier auch das Widget-Bildauswahl-FN aufrufen und die ausgewählte Bilddatei

32
00:03:09,270 --> 00:03:16,230
weiterleiten. Jetzt müssen wir zum Off-Formular gehen, in dem wir Indien sind, und unseren Benutzerbild-Picker

33
00:03:16,230 --> 00:03:20,490
verwenden und eine solche Funktion übergeben in dieses Widget.

34
00:03:20,490 --> 00:03:25,110
Für Dad müssen wir hier zunächst eine neue Funktion definieren,

35
00:03:25,110 --> 00:03:34,700
die nichts zurückgibt, das das ausgewählte Bild benennt, oder was auch immer Sie es benennen möchten, das das Bild vom Typ Datei und den

36
00:03:34,700 --> 00:03:39,370
Dateityp erhält, den Sie gelernt haben aus Dart I O importiert werden.

37
00:03:39,380 --> 00:03:49,450
Stellen Sie also sicher, dass Sie zu Beginn I O hier importieren und dann hier diese Datei erhalten und ich sie hier in

38
00:03:49,450 --> 00:03:51,220
einer Variablen speichern möchte.

39
00:03:51,490 --> 00:04:01,740
Die Benutzerbilddatei, die meine Variable ist und vom Typ Datei ist, setzt die Benutzerbilddatei einfach auf

40
00:04:01,800 --> 00:04:05,910
das Bildargument, das wir hier erhalten.

41
00:04:05,970 --> 00:04:12,780
Diese Geschichte ist also das Bild, das in der Benutzerbildauswahl in dieser Eigenschaft des Status "Aus Formular" ausgewählt wird, sodass wir es

42
00:04:13,230 --> 00:04:16,380
verfügbar haben, sobald wir versuchen, dieses Formular zu senden.

43
00:04:16,620 --> 00:04:23,910
Denn wenn wir versuchen, hier einzureichen, möchte ich überprüfen, ob das Formular gültig ist und ob wir eine Benutzerbilddatei

44
00:04:23,910 --> 00:04:24,460
haben.

45
00:04:24,540 --> 00:04:28,390
Wenn das also jetzt ungleich ist, wäre es gleich jetzt.

46
00:04:28,440 --> 00:04:29,750
Es wurde noch kein Bild ausgewählt.

47
00:04:31,010 --> 00:04:33,470
Und eigentlich werde ich das hier in diesem Schritt nicht tun.

48
00:04:33,480 --> 00:04:40,430
Stattdessen füge ich hier einen weiteren Schritt hinzu, in dem ich überprüfe, ob die Benutzerbilddatei möglicherweise jetzt gleich ist.

49
00:04:40,430 --> 00:04:42,600
Dies bedeutet, dass der Benutzer kein Bild ausgewählt hat.

50
00:04:42,680 --> 00:04:48,530
In diesem Fall können wir hier zu einem Punkt zurückkehren, an dem der andere Teil hier ausgeführt wird,

51
00:04:48,530 --> 00:04:53,840
weil ich das Formular nicht senden möchte. Ich möchte nicht fortfahren, wenn kein Bild ausgewählt

52
00:04:53,870 --> 00:05:00,200
wurde. Stattdessen möchten wir möglicherweise einen Fehler an das anzeigen Benutzer möchten wir den Benutzer möglicherweise darüber informieren, dass

53
00:05:01,650 --> 00:05:07,460
wir kein gültiges Bild gefunden haben, und wir könnten die gute alte Snackbar dafür mit Kontextgerüst verwenden.

54
00:05:07,470 --> 00:05:18,950
Und hier können wir diesen Kontext verwenden, um eine Snackbar zu zeigen und hier eine Snackbar zu erstellen, in der der Inhalt einfach ein Text-Widget ist, in dem wir sagen, wählen Sie

55
00:05:18,980 --> 00:05:27,630
bitte ein Bild aus, das alle Notizen enthält, die sich natürlich nur um das Bild kümmern, wenn wir uns anmelden Modus, also sollten wir

56
00:05:27,630 --> 00:05:33,270
etwas zur Überprüfung hinzufügen. Wir sollten sicherstellen, ob wir einen Haufen haben oder nicht. Wenn

57
00:05:33,270 --> 00:05:39,180
wir uns nicht im Anmeldemodus befinden, ist uns das Bild egal, wenn wir uns im Anmeldemodus

58
00:05:39,180 --> 00:05:40,120
befinden würden.

59
00:05:40,130 --> 00:05:45,870
Wir kümmern uns nur darum, wenn wir uns nicht im Protokollierungsmodus befinden, wenn wir uns anmelden, aber wenn wir uns anmelden,

60
00:05:45,870 --> 00:05:46,980
sollten wir dies überprüfen.

61
00:05:47,040 --> 00:05:52,110
Wir sollten prüfen, ob wir ein Bild haben, und dann sollten wir den Fehler anzeigen, wenn wir kein Bild haben.

62
00:05:52,110 --> 00:06:00,310
Wir können hier auch die Hintergrundfarbe auf das Thema der Kontextfehlerfarbe einstellen, um die Snackleiste entsprechend zu färben.

63
00:06:00,480 --> 00:06:04,590
Damit sollten wir ein Weiß, dass ein ungültiges Formular gesendet wird.

64
00:06:04,590 --> 00:06:10,800
Ein fehlendes Teil ist natürlich immer noch, dass wir diese ausgewählte Bildfunktion mit unserem Benutzerbild-Picker

65
00:06:10,800 --> 00:06:11,220
verbinden.

66
00:06:11,610 --> 00:06:17,670
Daher sollten wir diese ausgewählte Bildfunktion an diese Benutzerbildauswahl weiterleiten. Übergeben Sie sie daher hier als unser

67
00:06:17,880 --> 00:06:23,880
Argument an diesen Konstruktor und fügen Sie hier keine Klammern hinzu, da wir in der Tat

68
00:06:23,880 --> 00:06:28,310
nur einen Zeiger auf diese Funktion an die Benutzerbildauswahl übergeben möchten.

69
00:06:28,330 --> 00:06:32,010
Damit haben wir den Upload noch nicht, aber der Rest sollte verkabelt sein.

70
00:06:32,140 --> 00:06:38,100
Und wenn ich versucht habe, ein neues Konto zu erstellen und eine gültige E-Mail-Adresse eingegeben

71
00:06:41,220 --> 00:06:48,960
habe und alles hier gültig ist und ich auf Anmelden drücke, erhalte ich das. Bitte wählen Sie hier einen Bildfehler aus,

72
00:06:49,050 --> 00:06:55,630
da ich tatsächlich kein Bild habe und nur, wenn ich ein Bild dupliziere Ich sollte dies einreichen können.

73
00:06:55,710 --> 00:06:57,090
Probieren wir es also aus.

74
00:06:57,210 --> 00:07:03,330
Jetzt werden Sie sehen, dass das funktioniert, aber natürlich funktioniert es, ohne das Bild tatsächlich hochzuladen, und das ist hier nicht

75
00:07:03,330 --> 00:07:04,140
unser Ziel.

76
00:07:04,140 --> 00:07:05,910
Das Bild sollte hochgeladen werden.

77
00:07:05,910 --> 00:07:08,910
Lassen Sie uns nun an der eigentlichen Upload-Funktionalität arbeiten.
