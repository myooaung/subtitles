WEBVTT
1
00:00:02.280 --> 00:00:05.970
For now, I want to make sure that we can reach our orders page

2
00:00:05.970 --> 00:00:07.980
and for that, we first of all need to add one.

3
00:00:08.130 --> 00:00:09.660
So let's add a new screen,

4
00:00:09.660 --> 00:00:17.190
the orders screen, therefore the orders_screen.dart file which has a stateless widget in it, orders

5
00:00:17.490 --> 00:00:24.020
screen and there, we import material.dart as always

6
00:00:24.100 --> 00:00:32.610
and the goal there is to output information about our orders. Since this will fill an entire page,

7
00:00:32.780 --> 00:00:44.210
I'll use scaffold here and add an appBar with the title which holds a text widget where I say your orders,

8
00:00:44.210 --> 00:00:44.930
something like that

9
00:00:46.100 --> 00:00:47.360
and then the body is of course

10
00:00:47.360 --> 00:00:48.310
the interesting part.

11
00:00:50.650 --> 00:00:51.330
There,

12
00:00:51.380 --> 00:00:57.220
I want to output information about my orders that were placed and each order

13
00:00:57.240 --> 00:01:02.770
then in turn contains information about the different products that were part of that order

14
00:01:02.780 --> 00:01:10.810
of course. We definitely need to get access to our orders therefore and hence we need to import from

15
00:01:10.810 --> 00:01:17.530
the providers folder, our orders.dart file where the orders class is defined and then here in the

16
00:01:17.530 --> 00:01:18.480
build method,

17
00:01:19.600 --> 00:01:24.010
we can get access to orders with provider for which you need to import

18
00:01:24.040 --> 00:01:31.680
the provider.dart file from the provider package, of orders and then pass context as an argument here

19
00:01:33.530 --> 00:01:35.450
and now here in the body,

20
00:01:35.450 --> 00:01:41.450
I want to render a ListView with the builder constructor because we don't know how many orders we'll

21
00:01:41.450 --> 00:01:41.900
have,

22
00:01:41.900 --> 00:01:49.100
so to improve performance potentially at least, I'll use the builder and the item count, not the builder,

23
00:01:49.100 --> 00:01:54.670
the item count is of course taken from orders and there,

24
00:01:54.680 --> 00:01:58.310
I also named my getter orders. Now orders.orders

25
00:01:58.310 --> 00:01:59.250
sounds a bit strange

26
00:01:59.300 --> 00:02:03.690
so I'll name this variable here orderData and then we have orderData.orders

27
00:02:03.710 --> 00:02:09.870
and there, the length is of course what defines the amount of items that have to be built

28
00:02:10.100 --> 00:02:12.620
and then we have the itemBuilder which should go ahead and build

29
00:02:12.630 --> 00:02:18.970
the single list items and as always, it gets a context and an index for that.

30
00:02:19.040 --> 00:02:25.730
Now as always, we could add all the widget content for a single item here into the orders screen or we

31
00:02:25.730 --> 00:02:27.200
create a new separate widget

32
00:02:27.350 --> 00:02:34.010
and I did it already for cart and product item, so I'll do it here as well, have my order item in a separate

33
00:02:34.010 --> 00:02:43.200
file, create a stateless widget, order item and import material.dart there.

34
00:02:43.280 --> 00:02:46.880
Now as always, it's up to you how you structure and style this.

35
00:02:46.880 --> 00:02:54.060
For me, an order will be in a cart widget and I want to add some margin around each cart, so around

36
00:02:54.320 --> 00:03:02.060
each order with EdgeInsets.all of 10 and then we need a child in that cart and there, I'll actually

37
00:03:02.060 --> 00:03:03.270
have a column and

38
00:03:03.500 --> 00:03:10.610
that's just how I will structure the items in my order because and that's the special thing about this,

39
00:03:10.640 --> 00:03:17.060
this should actually be an expandable cart, where we can click a button to see more details and therefore

40
00:03:17.060 --> 00:03:22.950
here in this column, in my children, I'll first of all have a ListTile as the first element in that column,

41
00:03:22.970 --> 00:03:30.790
so the topmost element and there, I want have a title which is a text widget where I want to show the

42
00:03:30.790 --> 00:03:33.100
total amount it cost us,

43
00:03:33.100 --> 00:03:41.220
so output \$ to print a dollar sign and then string interpolation to output

44
00:03:41.290 --> 00:03:46.750
the order amount. For that we need to get access to our order data and here in order

45
00:03:46.780 --> 00:03:50.690
item, I expect to get that data from outside.

46
00:03:50.710 --> 00:03:57.250
So here, we should get our full order item let's say of type order.

47
00:03:57.250 --> 00:04:04.270
Now for that, we of course need to import our order item or our providers/orders.dart file where

48
00:04:04.270 --> 00:04:07.680
the order item class is defined.

49
00:04:07.830 --> 00:04:10.780
Now we'll have a name clash which we had before too,

50
00:04:10.830 --> 00:04:16.890
we have order item here as a widget name but then we also have order item as a class name here in the

51
00:04:16.890 --> 00:04:18.390
orders.dart file.

52
00:04:18.450 --> 00:04:24.510
Now I showed you two workarounds, the prefix or by using the show keyword. Show doesn't help us because

53
00:04:24.510 --> 00:04:32.290
we now need the class which has the name clash but we can use a prefix here as ord for example

54
00:04:32.310 --> 00:04:39.050
and then here, we use ord.orderItem to tell Dart to which concrete order item class we're referring

55
00:04:39.270 --> 00:04:41.060
and now this is fixed

56
00:04:41.280 --> 00:04:48.210
and of course now we use order item, so this order item here now to define a constructor where we assign

57
00:04:48.390 --> 00:04:50.190
a value to order.

58
00:04:50.250 --> 00:04:55.950
So now I expect to get my order here and therefore of course, I have my amount, my total amount in there

59
00:04:56.070 --> 00:05:04.990
as well. Now in that ListTile, below the title, I also want to have a subtitle where I show the date of the

60
00:05:04.990 --> 00:05:12.830
order and for that, I want to bring back a package which we used earlier in the course, the intl package

61
00:05:13.490 --> 00:05:18.620
which you install by going to its page on pub.dev, grabbing the version there,

62
00:05:18.620 --> 00:05:24.410
so that's the intl package there and then in your pubspec.yaml file, you simply add that below

63
00:05:24.410 --> 00:05:30.560
your dependencies and this gives you the intl package which helps you with formatting dates and

64
00:05:30.560 --> 00:05:38.740
then back in the order item widget, you can simply import package:intl/intl.dart

65
00:05:39.640 --> 00:05:45.670
and now in the place where you want to output a formatted date, you can use date format and either use

66
00:05:45.670 --> 00:05:51.910
one of the preconfigured constructors to get different formats or provide your own one as a pattern

67
00:05:52.150 --> 00:06:01.920
to the normal date format constructor here and there, the pattern I'll provide is dd MM yyyy to have

68
00:06:02.280 --> 00:06:08.240
the day represented by two figures, the month here, then the year by four figures and then even hour and

69
00:06:08.250 --> 00:06:10.230
minute with a colon in between and

70
00:06:10.230 --> 00:06:17.550
that's just one format I like to use here and then call format and pass in your order 

71
00:06:17.670 --> 00:06:24.080
datetime and that should do the trick and output the datetime below the title. And now trailing, I want to

72
00:06:24.080 --> 00:06:28.280
have a button which we can press to expand this order. For that,

73
00:06:28.290 --> 00:06:37.380
I'll add an icon button and the icon there will be icon widget where I use the expand_more button.

74
00:06:39.980 --> 00:06:44.280
Now onPressed, I want to do the logic for expanding this but that's a second step,

75
00:06:44.300 --> 00:06:46.470
let's first of all see whether that works.

76
00:06:46.700 --> 00:06:52.700
So let's build this order item for every order we have. For that, let's head back to the orders screen

77
00:06:53.300 --> 00:07:01.170
and simply import from the widgets folder and there, from order item and with that order item imported

78
00:07:01.170 --> 00:07:01.340
here,

79
00:07:01.350 --> 00:07:03.400
that's exactly what we need to build here, right?

80
00:07:03.420 --> 00:07:06.050
So let's build our order item.

81
00:07:06.150 --> 00:07:10.740
Now again here, we'll have a similar clash of names as we had it before.

82
00:07:10.770 --> 00:07:16.200
Here however, the difference is that from the orders.dart file, I don't need the order item but only the

83
00:07:16.290 --> 00:07:22.590
orders class, so we can again use show orders to only import that from this file and then we'll import

84
00:07:22.620 --> 00:07:26.190
the order item class from the order_item.dart file.

85
00:07:26.190 --> 00:07:31.770
Therefore here, we can instantiate this and here, we need to forward the entire order. Well that's not

86
00:07:31.770 --> 00:07:33.140
too hard,

87
00:07:33.180 --> 00:07:42.900
we got our order data orders here and we forward the order for the index we got at hand. So with that,

88
00:07:42.900 --> 00:07:45.870
we're building the order items in our orders screen,

89
00:07:45.900 --> 00:07:48.250
we now of course need a way of reaching it

90
00:07:48.330 --> 00:07:53.790
and I want to use a side drawer for that. Now definitely feel three to of course build your own one and

91
00:07:53.790 --> 00:07:58.620
thereafter watch the next video where I will do it together with you but as I just said, in

92
00:07:58.620 --> 00:08:01.630
the next video, we'll do together but that's also a nice practice.

93
00:08:01.650 --> 00:08:05.410
You learned all about adding a drawer in the navigation module of this course,

94
00:08:05.430 --> 00:08:09.480
so definitely try this on your own first and then we'll do it together in the next lecture.
