1
00:00:02,290 --> 00:00:09,340
Schließlich haben wir Push-Benachrichtigungen angeordnet, damit diese kleinen Benachrichtigungen und Nachrichten, die auf Ihrem Gerät angezeigt werden, Sie

2
00:00:09,340 --> 00:00:14,010
auffordern, in den nächsten Vorlesungen zu einer bestimmten App zu wechseln.

3
00:00:14,080 --> 00:00:20,290
Ich zeige Ihnen, wie Sie Push-Benachrichtigungen in Flatter-Apps integrieren können und wie wir dies beispielsweise in einer flacheren

4
00:00:20,290 --> 00:00:24,040
App tun können, die wir über dieses Modul erstellt haben.

5
00:00:24,040 --> 00:00:30,370
Lassen Sie uns zunächst verstehen, wie Push-Benachrichtigungen tatsächlich hinter den Kulissen funktionieren.

6
00:00:30,370 --> 00:00:34,900
Wir haben unsere Anwendung erhalten und die Anwendung läuft auf einer Reihe von Geräten.

7
00:00:34,930 --> 00:00:38,700
Also auf den Geräten von den Benutzern, die unsere App installiert haben.

8
00:00:38,890 --> 00:00:40,870
Nun tritt ein Ereignis ein.

9
00:00:40,870 --> 00:00:48,280
Etwas passiert zum Beispiel, wenn ein Benutzer eine Chat-Nachricht an einen Nummernbenutzer sendet oder Sie als Eigentümer der App möglicherweise

10
00:00:48,280 --> 00:00:54,700
eine Marketingnachricht an alle Ihre Benutzer senden möchten oder wenn Sie eine Nachrichten-App haben und etwas Wichtiges

11
00:00:54,700 --> 00:00:58,480
passiert ist und Sie dies zulassen möchten Benutzer wissen davon.

12
00:00:58,480 --> 00:01:04,900
Dies sind typische Gründe, warum Sie möglicherweise eine Push-Benachrichtigung senden möchten. Dies sind wahrscheinlich die

13
00:01:04,900 --> 00:01:09,600
Push-Benachrichtigungstypen, die Sie aus den von Ihnen verwendeten Apps kennen.

14
00:01:09,820 --> 00:01:15,730
Das Natürliche wäre also, dass Sie sich die Nachricht einfallen lassen, die

15
00:01:15,730 --> 00:01:22,120
Sie zum Beispiel senden möchten, und diese Nachricht dann irgendwie an ein Gerät senden.

16
00:01:22,450 --> 00:01:23,950
So funktioniert es ungefähr.

17
00:01:23,950 --> 00:01:26,620
Aber die Summe des gesamten Teils ist wichtig.

18
00:01:26,740 --> 00:01:34,450
Sie als App-Entwickler oder als Entwickler können nicht einfach eine Nachricht direkt an ein Gerät senden.

19
00:01:34,570 --> 00:01:42,460
Sie können keine Nachrichten direkt an Geräte senden, was wirklich wichtig ist, anstatt natürlich Apple und Google.

20
00:01:42,460 --> 00:01:52,090
Daher möchten die Besitzer von Iaw und Android steuern, wer Benachrichtigungen an Geräte senden kann, um Missbrauchs-

21
00:01:52,150 --> 00:01:54,820
und Sicherheitsprobleme zu vermeiden.

22
00:01:54,820 --> 00:02:01,200
Daher müssen Sie offizielle Push-Benachrichtigungsserver und / oder -Protokolle verwenden.

23
00:02:01,330 --> 00:02:08,050
Das bedeutet, dass Sie nicht einfach Ihren eigenen serverseitigen Code schreiben können, der direkt auf Geräte abzielt.

24
00:02:08,050 --> 00:02:11,250
Stattdessen müssen Sie offizielle Dienste und Protokolle verwenden.

25
00:02:11,500 --> 00:02:20,380
Dies wird von Google und Apple benötigt, um sicherzustellen, dass nur Sie, wenn Sie den Entwickler einer App gefragt haben, Benachrichtigungen an Benutzer senden können, die

26
00:02:20,380 --> 00:02:27,010
Ihre App installiert haben, damit Sie keine anderen Benutzer mit einem anderen Gerät ansprechen können, das noch nicht einmal

27
00:02:27,160 --> 00:02:33,580
über ein solches Gerät verfügt Ihre App und dass niemand sonst Nachrichten an Ihre Benutzer senden kann.

28
00:02:33,630 --> 00:02:41,060
Daher müssen diese Push-Benachrichtigungsserver oder diese Protokolle, die Sie verwenden müssen, identifiziert werden.

29
00:02:41,080 --> 00:02:49,810
Also U. S. Der App-Entwickler muss Ihre App mit diesen Benachrichtigungsservern

30
00:02:50,020 --> 00:02:53,460
verknüpfen und Google und Apple mitteilen, dass Sie Push-Benachrichtigungen verwenden möchten.

31
00:02:53,530 --> 00:02:56,440
Man muss hier also sehr klar sein.

32
00:02:56,530 --> 00:03:03,370
Sobald dies alles eingerichtet ist und ich Ihnen natürlich zeigen werde, wie dieses Setup sowohl für Android als

33
00:03:03,400 --> 00:03:10,510
auch für mich in diesem Modul funktioniert. Sobald alles eingerichtet ist, können Sie Ihre Veranstaltung auf einen solchen

34
00:03:10,510 --> 00:03:18,460
offiziellen Push-Benachrichtigungsserver und Entwurf verweisen Ihre Nachricht in Verbindung damit und lassen Sie den Server wissen, welche Nachricht an welche Geräte

35
00:03:18,550 --> 00:03:25,750
gesendet werden soll, und dann wird der Server dies für Sie tun und diese Nachricht dann senden und diese

36
00:03:25,750 --> 00:03:31,550
Nachricht an das Gerät senden, wie Sie es gesagt haben um es zu senden.

37
00:03:31,570 --> 00:03:35,680
So funktionieren Push-Benachrichtigungen hinter den Kulissen.

38
00:03:35,680 --> 00:03:42,400
Wie lässt sich dies nun auf unser Firebase-Setup übertragen, bei dem wir bisher die Authentifizierung über

39
00:03:42,650 --> 00:03:48,940
die Sicherheitsregeln für Cloud-Speicher im Geschäft verwenden, und all die schönen Dinge, die wir in

40
00:03:49,960 --> 00:03:58,450
den letzten Vorlesungen hinzugefügt haben, sind das Tolle, dass Firebase auch eine hat Cloud-Messaging-Dienst, den Sie sowohl für Android- als

41
00:03:58,480 --> 00:04:04,570
auch für Iowa-Apps verwenden können, und für Android-Apps müssen Sie ihn tatsächlich verwenden.

42
00:04:04,600 --> 00:04:11,170
Dort gibt es den offiziellen Push-Benachrichtigungsdienst für Android und für IAW. Sie können ihn auch verwenden.

43
00:04:11,180 --> 00:04:16,280
Und dann nutzt man hinter den Kulissen den Push-Benachrichtigungsdienst von Apple.

44
00:04:16,480 --> 00:04:20,650
Daher ist der Cloud-Messaging-Dienst von Firebase eine gute Wahl.

45
00:04:20,740 --> 00:04:28,000
Auch wenn Sie ansonsten Firebase nicht verwenden und keinen anderen Firebase-Dienst verwenden müssen, um

46
00:04:28,000 --> 00:04:30,580
Firebase-Cloud-Messaging weiterhin zu verwenden.

47
00:04:30,580 --> 00:04:37,420
So können Sie den Firebase-Push-Benachrichtigungsdienst für E / A immer als Android verwenden, auch wenn Sie keinen

48
00:04:37,540 --> 00:04:39,130
anderen Firebase-Dienst verwenden.

49
00:04:39,130 --> 00:04:41,050
Das ist wirklich wichtig.

50
00:04:41,050 --> 00:04:46,720
Daher ist dieser Firebase-Cloud-Messaging-Dienst ein wichtiges Element und funktioniert gut mit dem Firebase-Messaging-SDK

51
00:04:46,720 --> 00:04:52,440
zusammen, das Sie in Ihrer App installieren und das Sie in Ihrem App-Code verwenden.

52
00:04:52,570 --> 00:04:57,940
Es funktioniert, um Push-Benachrichtigungen auszutauschen, und sie bieten Firebase-Cloud-Messaging

53
00:04:58,300 --> 00:05:05,770
als offiziellen Push-Benachrichtigungsserver oder -dienst an, der sich gut in das gesamte flachere

54
00:05:05,860 --> 00:05:07,170
Firebase-Ökosystem integriert.

55
00:05:07,240 --> 00:05:13,120
Aber lassen Sie mich noch einmal klarstellen, dass Sie keinen anderen Firebase-Dienst verwenden müssen und dass Sie

56
00:05:13,120 --> 00:05:17,200
auch keinen flacheren Dienst verwenden müssen, nur um Firebase-Cloud-Messaging zu verwenden.

57
00:05:17,230 --> 00:05:22,660
Sie können es auch mit anderen nativen Bibliotheken für Android- oder IOW-Apps verwenden, die nicht flacher sind.

58
00:05:22,660 --> 00:05:27,490
Aber da dies natürlich flacher ist, werde ich mich natürlich auf die flachere Integration konzentrieren.

59
00:05:27,670 --> 00:05:30,550
So funktioniert das also hinter den Kulissen.

60
00:05:30,550 --> 00:05:36,460
Dies wird verwendet, um Push-Benachrichtigungen an unsere flachere App zu senden.

61
00:05:36,460 --> 00:05:39,600
Und damit wollen wir sehen, wie wir damit anfangen.
