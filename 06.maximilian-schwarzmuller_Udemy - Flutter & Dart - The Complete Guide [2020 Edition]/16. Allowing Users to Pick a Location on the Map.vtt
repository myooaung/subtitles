WEBVTT
1
00:00:02.300 --> 00:00:06.680
So taps on the map should be registered,

2
00:00:06.680 --> 00:00:11.240
an important piece of information is whether we are actually in selecting mode or not.

3
00:00:11.240 --> 00:00:16.940
So on the map screen, we want to make sure that isSelecting is set to true because if it's set to false,

4
00:00:16.940 --> 00:00:22.730
I don't want to do anything upon taps on the map because we're only viewing the app in read-only mode

5
00:00:22.850 --> 00:00:30.680
so to say. Now here on the Google map which we're building, we can add onTap listener,

6
00:00:30.800 --> 00:00:32.100
that's very convenient

7
00:00:32.150 --> 00:00:35.540
and here we can reach out to widget.isSelecting

8
00:00:35.540 --> 00:00:39.290
and if this is true, then I'll want to

9
00:00:39.290 --> 00:00:41.650
register some method here, otherwise

10
00:00:41.660 --> 00:00:48.490
I'll set this to null so nothing will happen up on a tap if we're not in the selecting mode. Now

11
00:00:48.630 --> 00:00:54.510
here however, I want to call a method which we can simply add to the state object,

12
00:00:54.660 --> 00:01:04.320
it will return nothing and I'll name it select place, the name is up to you or select location maybe and

13
00:01:04.320 --> 00:01:06.530
we'll get a position there

14
00:01:07.400 --> 00:01:14.180
which is of type latlng, so this class provided by the Google Maps Flutter plugin which we also used

15
00:01:14.180 --> 00:01:17.390
here to create such a coordinate pair.

16
00:01:17.690 --> 00:01:23.660
So we get this provided by Google upon such a tap, so by the Google Maps plugin, it gives us this position

17
00:01:23.660 --> 00:01:26.150
of the tap automatically, the coordinates of the tap

18
00:01:26.150 --> 00:01:34.690
so to say and therefore all we have to do in here is I want to store that picked location. So I'll add

19
00:01:34.690 --> 00:01:44.110
a new property to my map screen state, picked location and that can be anything, we can use a map here

20
00:01:44.170 --> 00:01:47.460
with a key-value pair or actually use that add

21
00:01:47.470 --> 00:01:54.040
latlng class provided by the Google Maps Flutter package because a pair of latitude and longitude coordinates

22
00:01:54.190 --> 00:01:58.100
sounds about right. So here in select location,

23
00:01:58.110 --> 00:02:02.710
I just want to call set state because of course, I want to rebuild this,

24
00:02:02.730 --> 00:02:06.120
I want to add a marker after all and that marker should be visible,

25
00:02:06.120 --> 00:02:09.360
so we need to re-render or rebuild that widget

26
00:02:09.620 --> 00:02:15.690
and in there, I'll set picked location equal to the position I get here as an argument.

27
00:02:15.690 --> 00:02:22.860
So now we can connect select location with onTap down there in case we are in selecting mode

28
00:02:23.160 --> 00:02:29.130
and now we need to add some markers and that's also done with another argument passed to the Google map constructor

29
00:02:29.130 --> 00:02:33.680
and keep in mind that this re-runs when we call set state.

30
00:02:33.700 --> 00:02:42.120
So now here, I can add my markers and here, I want to check whether we have a picked location, if that

31
00:02:42.180 --> 00:02:43.860
is equal to null,

32
00:02:43.860 --> 00:02:49.840
so if it's not set, if we have no location, then I'll use null here,

33
00:02:49.850 --> 00:02:55.820
so then I'll not set any markers, otherwise markers needs to be a set and you can see that if you hover

34
00:02:55.820 --> 00:02:56.660
over that.

35
00:02:56.780 --> 00:03:02.750
Now we haven't worked with sets thus far. A set is created like a map with curly braces,

36
00:03:02.810 --> 00:03:07.490
the difference to a map is that you don't have key-value pairs but you only have values,

37
00:03:07.490 --> 00:03:10.970
so it's a bit like a list where you also only have values.

38
00:03:10.970 --> 00:03:18.220
Now what's the special thing about a set then? The special thing about a set is that each value in there

39
00:03:18.220 --> 00:03:24.280
is guaranteed to be unique and if you try to add a value to a set which is already part of it, it will

40
00:03:24.280 --> 00:03:31.890
simply not be added. So here, the Flutter team decided to use a set instead of a list for the markers,

41
00:03:32.010 --> 00:03:33.990
for us it doesn't make a huge difference,

42
00:03:33.990 --> 00:03:40.790
we simply add a bunch of markers in there because it should be a set full of markers and markers

43
00:03:40.790 --> 00:03:48.310
of course also are classes or objects based on a class provided by the Google Maps package.

44
00:03:48.330 --> 00:03:53.180
So marker is a new object we create here by calling its constructor

45
00:03:53.490 --> 00:03:59.280
and now each marker needs to have a unique ID which you create with the marker ID class which is provided

46
00:03:59.280 --> 00:04:05.130
by the Google Maps package and there, you pass any string you want to mark your ID.

47
00:04:05.400 --> 00:04:12.030
Now in case you want to know how I know this, you'll find an official example in that repository I showed

48
00:04:12.030 --> 00:04:17.370
you earlier, that Google Maps Flutter example, here in the example folder in the lib folder, you'll find

49
00:04:17.370 --> 00:04:22.830
a bunch of examples of what you can do with the Google Maps plugin and there, you also learn how to

50
00:04:22.830 --> 00:04:24.280
work with markers and so on.

51
00:04:24.300 --> 00:04:29.760
If you want to dive deeper into that, this is also a great place to find more examples and play around

52
00:04:29.760 --> 00:04:31.610
with different things.

53
00:04:31.620 --> 00:04:34.100
So here, we add a marker with a certain ID,

54
00:04:34.170 --> 00:04:38.250
of course a marker does not just need an ID but also a position

55
00:04:38.400 --> 00:04:45.420
and that again is a latlng pair and that's exactly what we stored in picked location, so we can simply

56
00:04:45.420 --> 00:04:46.670
use that.

57
00:04:46.680 --> 00:04:50.890
So now with that, we're adding a marker in this set here

58
00:04:51.030 --> 00:04:55.800
and since this rebuilds because we call set state here, we should see that marker

59
00:04:55.860 --> 00:05:07.170
after we tapped the screen. Time to save this and go back, open the map here and click somewhere and you

60
00:05:07.170 --> 00:05:12.550
should see that as you click, a marker is added in the spot where you clicked.

61
00:05:12.570 --> 00:05:16.380
So this is working, we can now select places on the map,

62
00:05:16.380 --> 00:05:23.390
let's now add a checkmark to also save that and return that back to the add place screen. For that

63
00:05:23.400 --> 00:05:28.330
here in the appBar of the map screen, we can of course add a new entry,

64
00:05:28.340 --> 00:05:31.450
so a new action and let's add our actions list

65
00:05:31.460 --> 00:05:38.000
therefore and in that actions list, I want to add a new icon button and that icon button however should

66
00:05:38.000 --> 00:05:41.420
only be there if we're in selecting mode,

67
00:05:41.420 --> 00:05:48.680
so if we are able to select a new place. So I'll add an if statement here, using this inside of a list if feature

68
00:05:48.770 --> 00:05:53.110
which Dart offers and there I'll check widget.isSelecting, if that is true,

69
00:05:53.120 --> 00:05:54.740
this will be added to the list,

70
00:05:54.860 --> 00:05:58.970
otherwise it will not be added, so otherwise here, we'll simply have an empty list.

71
00:05:59.870 --> 00:06:07.520
So then I want to add an icon button, the icon here will be an icon widget where I want to use the check

72
00:06:07.520 --> 00:06:13.100
widget which is this checkmark

73
00:06:13.270 --> 00:06:19.960
and besides an icon, I also want to add onPressed which should do something and that something is of course

74
00:06:19.960 --> 00:06:22.540
that it should pop off that screen.

75
00:06:22.540 --> 00:06:26.650
So here, I want to use navigator of context pop

76
00:06:27.370 --> 00:06:32.800
and now return some data back to the page we used to open this screen here,

77
00:06:32.800 --> 00:06:35.130
so back to the add place screen.

78
00:06:35.440 --> 00:06:42.430
The data that should be returned back is the picked location because in the location input which actually

79
00:06:42.430 --> 00:06:49.920
is the place where we open the map screen, where we use navigator push, there I am waiting for the selected

80
00:06:50.100 --> 00:06:51.660
location.

81
00:06:51.660 --> 00:06:55.400
The type is unknown to Dart right now,

82
00:06:55.410 --> 00:06:56.930
I'll change this soon

83
00:06:57.020 --> 00:07:03.210
and this is in the end where I then want to use this picked location, so this latlng object we're getting

84
00:07:03.210 --> 00:07:03.640
here.

85
00:07:04.620 --> 00:07:11.970
So we're passing this back by using pop here and we'll only show this button here if we are selecting.

86
00:07:11.970 --> 00:07:14.620
However selecting alone isn't enough,

87
00:07:14.700 --> 00:07:19.680
it's nice to show this button if we are selecting but this method should only be connected if we already

88
00:07:19.680 --> 00:07:24.810
picked a place because if we haven't picked a place, then clicking the checkmark button doesn't make

89
00:07:24.810 --> 00:07:25.640
much sense.

90
00:07:25.980 --> 00:07:32.850
So I want to disable this button if we haven't picked a place yet, so I'll check picked location here

91
00:07:33.440 --> 00:07:38.890
and if that is equal to null, then I'll set onPressed to null which means it will be disabled,

92
00:07:38.910 --> 00:07:44.210
the button will be there but disabled and only otherwise if picked location is not null,

93
00:07:44.220 --> 00:07:49.440
I'll attach this function and therefore the button will be enabled and we'll be able to press it and

94
00:07:49.440 --> 00:07:52.990
then pop this screen off and return this location.

95
00:07:53.110 --> 00:07:59.650
So now in the location input, we know that here, we'll actually get a latlng object and therefore we need

96
00:07:59.650 --> 00:08:04.460
to add an import to the Google Maps Flutter package and the google_maps_flutter.dart file

97
00:08:04.780 --> 00:08:11.710
and with that import added in the location_input.dart file, we can then work with that latlng data

98
00:08:11.710 --> 00:08:17.560
here and here, you should add the type annotation in front of this because Dart is not able to infer

99
00:08:17.560 --> 00:08:20.270
it because you could be returning anything here.

100
00:08:20.380 --> 00:08:27.760
An alternative to adding it here by the way is that you add it on push here with angled brackets because

101
00:08:27.790 --> 00:08:33.300
this will then also tell Dart that push in the end, once that page you're loading is popped,

102
00:08:33.370 --> 00:08:38.780
will give you back a latlng object.

103
00:08:38.890 --> 00:08:40.330
So now we're exchanging that,

104
00:08:40.360 --> 00:08:42.070
we're not doing anything with the data

105
00:08:42.070 --> 00:08:45.970
if we get it but at least we're exchanging it,

106
00:08:45.970 --> 00:08:54.490
so here I should be able to print selectedLocation.latitude for example and hopefully, we should

107
00:08:54.490 --> 00:08:55.500
now see some output

108
00:08:55.510 --> 00:09:01.330
if we select the place on the map and we then close it. So if I close it like this, we see no output here

109
00:09:02.170 --> 00:09:08.280
but if I then reopen this map and let's say I click here,

110
00:09:08.640 --> 00:09:14.700
confirm this, now this button is enabled, confirm this and

111
00:09:14.730 --> 00:09:15.110
yes

112
00:09:15.120 --> 00:09:16.210
here it is,

113
00:09:16.260 --> 00:09:23.310
there is the output. So that is working, with that we can choose a location by locating the user or by

114
00:09:23.310 --> 00:09:24.920
picking it on the map.

115
00:09:24.990 --> 00:09:31.770
The next step is to also derive an address, a human readable address and then store all of that both

116
00:09:31.770 --> 00:09:37.950
in memory as well as in our database, later load it from there and then work on the place detail screen

117
00:09:38.190 --> 00:09:41.620
to also show a preview of the map there and so on.
