WEBVTT
1
00:00:02.400 --> 00:00:08.520
So we had a look at state management and there, at the provider package in this module.

2
00:00:08.520 --> 00:00:13.710
State management is a super important topic because it makes sure that your main.dart file in your main

3
00:00:13.710 --> 00:00:18.840
app here stays clean and you don't rebuild the entire app with every little change that might affect

4
00:00:18.840 --> 00:00:25.500
some tiny piece in your app. With the provider package, you provide data, like objects here

5
00:00:25.530 --> 00:00:30.660
and by the way, that could also be plain strings or numbers but here, it's objects and typically, it is

6
00:00:30.660 --> 00:00:37.110
objects. You provide objects here with ChangeNotifierProvider typically, either with value here, with

7
00:00:37.110 --> 00:00:42.360
the value constructor or with the builder function you saw at the beginning of this module and then

8
00:00:42.390 --> 00:00:45.340
anywhere in your app, below these providers,

9
00:00:45.360 --> 00:00:53.040
so on child widgets here, you can listen to the provided values either with provider of, like we're doing

10
00:00:53.040 --> 00:01:01.410
it here in the orders screen or with consumer as we're doing it in the ProductsOverviewScreen, there

11
00:01:01.410 --> 00:01:02.570
we're using consumer.

12
00:01:02.580 --> 00:01:09.180
The difference between consumer and provider of was that with provider of, you rerun the entire build

13
00:01:09.180 --> 00:01:15.750
method here, even if you're in a stateless widget, actually that does not matter a bit when you're using

14
00:01:15.750 --> 00:01:18.930
provider of in there, build reruns whenever this changes,

15
00:01:18.930 --> 00:01:25.350
just like as with theme of or media query of, there the build method would also rerun if the data

16
00:01:25.380 --> 00:01:31.610
they are connected to changes, it's the same here for the provider. With the consumer, it's a bit different.

17
00:01:31.610 --> 00:01:38.070
There, you also rerun whenever the data changes but you only rerun the builder function. So consumer

18
00:01:38.070 --> 00:01:42.960
can be nice if you only want to rebuild a part of a widget tree when something changes instead of the

19
00:01:42.960 --> 00:01:45.010
entire widget tree.

20
00:01:45.310 --> 00:01:52.780
You also learned how to have provided data into another provider, like here, product, that also has a

21
00:01:52.780 --> 00:01:59.340
ChangeNotifier and we can change the favorite status and we manage our product, our product items here in

22
00:01:59.340 --> 00:02:05.620
the products class and still we can provide both and tap into both. Together with that, you also learned

23
00:02:05.640 --> 00:02:12.030
that you don't just have to provide here in your main widget, you can also provide on a lower level, like

24
00:02:12.030 --> 00:02:20.650
in our products grid where we do actually provide our product items here. You learned that you can

25
00:02:20.650 --> 00:02:27.730
set listen to false in cases where you really only want to get data one time or dispatch an action,

26
00:02:27.730 --> 00:02:33.670
like add order where you're not interested in the resulting changes and you only just want to dispatch

27
00:02:33.670 --> 00:02:37.810
that, then you can use listen false and also very important,

28
00:02:38.410 --> 00:02:45.670
I explained when you would use the provider pattern or the provider package and provide values application

29
00:02:45.670 --> 00:02:51.400
wide or across multiple widgets at least and when you would stick to stateful widgets, namely you would

30
00:02:51.400 --> 00:02:58.090
always use stateful widgets if you only have states that affects this widget only or actually even

31
00:02:58.090 --> 00:03:03.760
if it's this widget and maybe a child widget but whenever you don't have state that affects multiple

32
00:03:03.760 --> 00:03:09.850
different places in your app that maybe are also distributed quite a bit in the overall widget tree.

33
00:03:11.230 --> 00:03:17.320
That's state management, we'll still add more features to this little app because it's a nice demo app

34
00:03:17.350 --> 00:03:23.020
that allows us to dig deeper into other concepts too but I hope that state management is clear here and

35
00:03:23.020 --> 00:03:26.640
why the provider package is definitely a package and a pattern

36
00:03:26.680 --> 00:03:27.550
you should be aware of.
