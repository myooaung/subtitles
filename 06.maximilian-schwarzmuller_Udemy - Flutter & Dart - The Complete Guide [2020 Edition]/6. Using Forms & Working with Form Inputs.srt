1
00:00:02,350 --> 00:00:10,220
So back in our project here, in the edit product screen, how can we now handle the user input there?

2
00:00:10,240 --> 00:00:17,140
What's a good way of doing that? Instead of manually collecting all inputs with text editing controllers

3
00:00:17,140 --> 00:00:22,720
which we have to assign, Flutter has a built-in widget that helps us with collecting user input and with

4
00:00:22,720 --> 00:00:24,130
validation as well

5
00:00:24,130 --> 00:00:28,390
and that's the form widget. The form widget itself is invisible,

6
00:00:28,390 --> 00:00:33,190
it doesn't render something on the screen which you could see but inside of the form widget, you can

7
00:00:33,190 --> 00:00:40,530
use special input widgets which are then grouped together and which can be submitted together and validated

8
00:00:40,540 --> 00:00:45,360
together in very simple ways with the help of Flutter.

9
00:00:45,360 --> 00:00:52,090
A form takes a simple child argument and now there, you build your normal widget tree but now wrapped

10
00:00:52,090 --> 00:00:59,470
inside that form and where you can now use special form widgets that help you build more complex

11
00:00:59,470 --> 00:01:00,280
forms.

12
00:01:00,310 --> 00:01:10,060
So in here, I first of all want to build a scrollable list of input elements and for that of

13
00:01:10,060 --> 00:01:14,810
course, we can use a column with a SingleChildScrollView around it for a ListView

14
00:01:14,830 --> 00:01:20,890
but now not in the builder mode but in the normal mode like this, with children added to it

15
00:01:20,890 --> 00:01:28,180
and this will ensure that we can have multiple items below each other which automatically are then scrollable

16
00:01:28,180 --> 00:01:33,510
because we don't know whether we'll exceed the boundaries of our device

17
00:01:33,940 --> 00:01:37,940
on the given device the app runs on, so it makes sense to make this scrollable.

18
00:01:38,040 --> 00:01:42,790
Now once I thought about using a ListView here, you might want to consider using a column and 

19
00:01:42,790 --> 00:01:47,620
SingleChildScrollView instead of ListView because at least, you can actually get rid of some of the elements that are

20
00:01:47,620 --> 00:01:51,060
scrolled out of the view and therefore data input could get lost there.

21
00:01:51,070 --> 00:01:57,010
So if you have a longer form or you do allow landscape mode as we actually do it here and therefore

22
00:01:57,010 --> 00:02:03,070
you might have less screen height available in your final app, then using column plus SingleChildScrollView

23
00:02:03,070 --> 00:02:08,300
might be an option and in the lecture after this one, you'll find a bit more details on that,

24
00:02:08,320 --> 00:02:10,450
so definitely don't skip that next lecture.

25
00:02:10,650 --> 00:02:15,370
Now since I'll primarily use this, in portrait mode here however, I'll go with a ListView for now

26
00:02:15,460 --> 00:02:21,790
but again, consider that next lecture to avoid data loss and now in that list, we can simply start adding

27
00:02:21,820 --> 00:02:23,830
our different inputs.

28
00:02:24,040 --> 00:02:32,810
And now here instead of a text field which we used before, we use a text form field and that's the special

29
00:02:32,820 --> 00:02:40,160
input I was referring to which works together with this form. Text form fields are automatically connected

30
00:02:40,160 --> 00:02:45,140
to that form behind the scenes so to say and can interact with it and you'll see how to interact with the

31
00:02:45,140 --> 00:02:47,180
form in just a second.

32
00:02:47,390 --> 00:02:52,520
So text form fields are based on normal text fields and hence you have rich configuration options there

33
00:02:52,730 --> 00:02:59,740
as you saw it before in the course to set up auto correction and so on but you also do have some differences.

34
00:03:01,100 --> 00:03:07,430
Whilst you can connect your own controller, you don't have an onChanged listener here for example. You might

35
00:03:07,430 --> 00:03:13,040
remember that earlier in the course, on the normal text fields, we could use onChanged to listen to every

36
00:03:13,040 --> 00:03:19,320
keystroke, to every input the user did and then save that manually somewhere. Here this doesn't work and

37
00:03:19,340 --> 00:03:25,280
instead we can only act on this being submitted which is when we hit the special submit action in the

38
00:03:25,280 --> 00:03:32,480
soft keyboard, onEditingComplete and onSave which is an important new method which we can trigger

39
00:03:32,480 --> 00:03:35,610
with the help of the form and which I'll show you later.

40
00:03:35,660 --> 00:03:39,980
So the way you get the value out of the text field differs a bit,

41
00:03:39,980 --> 00:03:46,100
thankfully you also don't have to add a controller here to get the input because again, the form will

42
00:03:46,100 --> 00:03:52,880
help you get that value and will manage it for you behind the scenes so to say. So let's start simple

43
00:03:52,880 --> 00:03:57,440
and let's add one text form field for a new product,

44
00:03:57,440 --> 00:04:02,630
so when we're adding a new product. There we could add a decoration which takes an input decoration

45
00:04:02,660 --> 00:04:08,180
object which then in turn gives you a lot of configuration options to change the appearance but also

46
00:04:08,180 --> 00:04:10,820
some text on that text input.

47
00:04:10,850 --> 00:04:12,710
You can also enable or disable it and

48
00:04:12,830 --> 00:04:18,710
here I want to set a label text which is basically like that hint text that's shown above the input

49
00:04:19,100 --> 00:04:24,020
where I say title because this text input field here should be used for entering the title of the new

50
00:04:24,020 --> 00:04:25,580
product.

51
00:04:25,580 --> 00:04:29,320
Now always feel free to play around with the other options you have here,

52
00:04:29,330 --> 00:04:34,550
there are simply too many to go through all of them here but you can configure a lot of things and besides the

53
00:04:35,240 --> 00:04:40,580
popup here and the IDE completion and the hints you get here in the IDE, the official docs of course

54
00:04:40,580 --> 00:04:46,190
are a great place to learn more about the options you do have here. For this text form field, besides

55
00:04:46,190 --> 00:04:47,260
the decoration,

56
00:04:47,270 --> 00:04:49,980
I also want to set a text input action.

57
00:04:50,030 --> 00:04:56,990
This controls what the bottom right button in the soft keyboard will show, whether it's a checkmark or

58
00:04:57,200 --> 00:05:00,230
a done text to confirm that you're done

59
00:05:00,230 --> 00:05:04,590
or a next text or a next icon to go to the next input

60
00:05:04,760 --> 00:05:05,410
and here indeed,

61
00:05:05,420 --> 00:05:15,020
I want to use a text input action and text input action is an enum with the value of next and this will show

62
00:05:15,020 --> 00:05:20,060
a soft keyboard with a button that indicates that pressing this action button in the bottom right corner

63
00:05:20,060 --> 00:05:26,570
of the keyboard will move to the next input instead of submitting the entire form or submitting this

64
00:05:26,570 --> 00:05:28,910
input or anything like that.

65
00:05:28,970 --> 00:05:32,620
Now that's it already for this first simple element,

66
00:05:32,630 --> 00:05:41,090
one thing I want to do is I want to wrap the form here with some padding of let's say 15 or 16 in all

67
00:05:41,090 --> 00:05:47,440
directions, so that the form elements are not directly on the edges of the screen. But with that,

68
00:05:47,450 --> 00:05:52,930
let's have a look at this before we then continue with it and add more elements which we can focus,

69
00:05:52,970 --> 00:05:55,280
submit the data and also validate the data.

70
00:05:55,310 --> 00:06:00,070
So let's first of all make sure we can see that edit product screen and I want to be able to see it when

71
00:06:00,110 --> 00:06:02,410
in the user product screen,

72
00:06:02,510 --> 00:06:06,520
for now we click on that add button in our appBar.

73
00:06:06,620 --> 00:06:12,470
So here when I go to the edit product screen, again I want to use named routing here, so we can simply

74
00:06:12,800 --> 00:06:24,210
add to the widget though, add our static const routeName field here where we say edit-product and

75
00:06:24,210 --> 00:06:29,070
now we can use that routeName in our route table as we did it before in the course.

76
00:06:29,370 --> 00:06:38,380
Let's import screens/edit_product_screen and with the import added here,

77
00:06:38,380 --> 00:06:40,330
let's go down to the route table

78
00:06:40,330 --> 00:06:45,950
and of course reach out to our edit product screen routeName as a key and then here in the builder

79
00:06:45,950 --> 00:06:50,360
function, return a new instance of the edit product screen.

80
00:06:50,390 --> 00:06:55,430
Now we can go there with pushNamed from inside user products

81
00:06:55,510 --> 00:06:58,870
when we click that add button by using navigator

82
00:07:02,550 --> 00:07:07,510
of context pushNamed, not push replacement but just pushNamed

83
00:07:07,590 --> 00:07:13,080
because I want to push the new page on the stack of pages so that we also can go back to this

84
00:07:13,080 --> 00:07:24,360
page from the new page and then the name here of course is fetched from our imported edit product screen,

85
00:07:24,420 --> 00:07:31,300
here we refer to editedProductsScreen.routeName. Let's save that

86
00:07:31,410 --> 00:07:34,600
and back here, if I click the plus button, I'm now taken here

87
00:07:34,600 --> 00:07:35,700
and here we see the title,

88
00:07:35,740 --> 00:07:36,860
we can tap in there,

89
00:07:37,090 --> 00:07:41,440
I can type there and we also see on the bottom right corner of the soft keyboard,

90
00:07:41,440 --> 00:07:45,100
this indicates that clicking here does go to the next input.

91
00:07:45,100 --> 00:07:46,840
It doesn't do that automatically,

92
00:07:46,840 --> 00:07:48,040
we have to control that an

93
00:07:48,050 --> 00:07:49,850
I'll show you how to control that later

94
00:07:49,990 --> 00:07:54,760
but it shows us the right button here. And that's all nice

95
00:07:54,760 --> 00:07:57,250
and with that, let's add a second input.
