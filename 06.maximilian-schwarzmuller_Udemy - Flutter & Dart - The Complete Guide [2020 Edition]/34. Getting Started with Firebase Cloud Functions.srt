1
00:00:02,220 --> 00:00:09,060
Jetzt, da Push-Benachrichtigungen funktionieren, können wir unsere Benachrichtigungen pushen. Wired ist ein

2
00:00:09,390 --> 00:00:12,450
Benachrichtigungstool hier auf Firebase.

3
00:00:12,450 --> 00:00:19,920
Ich denke, es wäre eine großartige Schlussfolgerung für diese App und dieses Modul, wenn wir hier nicht einfach Nachrichten

4
00:00:19,920 --> 00:00:27,090
über dieses Tool senden könnten, das übrigens ein großartiges Tool für alle Marketingnachrichten oder Nachrichten ist, die Sie

5
00:00:27,090 --> 00:00:30,270
als App-Besitzer veröffentlichen möchten an Ihre Benutzer.

6
00:00:30,270 --> 00:00:32,570
Dies ist also nicht nur ein Testwerkzeug.

7
00:00:32,580 --> 00:00:38,430
Dies ist wirklich ein Tool, mit dem Sie Nachrichten an Ihre Benutzer senden können. Manchmal möchten Sie jedoch auch

8
00:00:38,430 --> 00:00:40,660
Nachrichten, die von Benutzern ausgelöst werden.

9
00:00:40,680 --> 00:00:47,190
Wenn ein Benutzer hier beispielsweise eine Chat-Nachricht sendet, möchten Sie möglicherweise alle unsere Benutzer darüber informieren.

10
00:00:47,190 --> 00:00:52,830
Das ist also ein weiterer Anwendungsfall, den Sie haben könnten, und deshalb möchten wir uns auch hier damit

11
00:00:52,830 --> 00:00:53,430
befassen.

12
00:00:53,460 --> 00:01:00,030
Und ich denke, das wäre eine großartige Schlussfolgerung für dieses Modul, dass wir sicherstellen, dass, wenn ein Benutzer

13
00:01:00,030 --> 00:01:08,520
hier eine Chat-Nachricht sendet, wir diese Nachricht an alle unsere Geräte senden, auf denen diese App jetzt auch als Randnotiz installiert ist, wenn Sie

14
00:01:08,520 --> 00:01:14,520
dies wünschen Auf einer anderen Seite möchten Sie möglicherweise nicht alle Benutzer als Spam versenden, nur

15
00:01:14,670 --> 00:01:18,650
weil ein Benutzer etwas in einem öffentlichen Chat gepostet hat.

16
00:01:18,690 --> 00:01:24,920
Aber hier, um zu demonstrieren, wie das funktioniert und um dies in Aktion zu sehen, denke ich, dass es ein großartiges Beispiel ist.

17
00:01:24,960 --> 00:01:32,850
Daher benötigen wir eine Möglichkeit, eine solche Nachricht, die wir zuvor manuell mit diesem Tool geschrieben haben,

18
00:01:32,850 --> 00:01:38,250
automatisch auszulösen, wenn ein neuer Eintrag in unsere Datenbank geschrieben wird.

19
00:01:38,250 --> 00:01:46,110
Wenn eine neue Chat-Nachricht eintrifft und Firebase eine Lösung dafür hat, können wir Firebase-Cloud-Funktionen verwenden, um

20
00:01:46,380 --> 00:01:50,280
Code auszuführen, wenn ein bestimmtes Ereignis eintritt.

21
00:01:50,280 --> 00:01:54,270
Das ist natürlich nicht die einzige Möglichkeit, automatisierte Nachrichten zu senden.

22
00:01:54,270 --> 00:02:00,510
Sie können Ihren eigenen serverseitigen Code auf Ihren eigenen Server schreiben und mit dem Firebase-Cloud-Messaging-Dienst interagieren,

23
00:02:00,510 --> 00:02:02,880
um eine automatisierte Nachricht auszulösen.

24
00:02:03,300 --> 00:02:09,390
Und wie immer haben Sie die offiziellen Firebase-Cloud-Messaging-Dokumente hier unter Serverumgebungen behandelt.

25
00:02:09,420 --> 00:02:16,950
Sie können alles über automatisierte Nachrichten erfahren, aber es ist besonders einfach, wenn Sie das gesamte Firebase-Ökosystem

26
00:02:16,980 --> 00:02:17,910
verwenden.

27
00:02:17,910 --> 00:02:25,640
Wenn Sie Firebase-Cloud-Funktionen verwenden, um mit dem Funktionsteil von Firebase zu beginnen, können Sie nicht einfach auf Erste Schritte

28
00:02:25,640 --> 00:02:32,310
klicken und erfahren, dass wir dieses Tool lokal auf unserem Computer installieren müssen, um mit dem

29
00:02:32,310 --> 00:02:34,510
Schreiben solcher Funktionen zu beginnen.

30
00:02:34,530 --> 00:02:40,090
Also hier die Flatter-App Ich werde zum regulären Terminal wechseln, das in mein I integriert ist. D. D. Hier.

31
00:02:40,140 --> 00:02:48,240
Sie können auch Ihr normales Systemterminal oder Ihre Eingabeaufforderung verwenden und dort npm install dash G firebase tools

32
00:02:48,240 --> 00:02:49,010
ausführen.

33
00:02:49,050 --> 00:02:55,800
Als Randnotiz für Linux und Mac müssen Sie möglicherweise sudo hinzufügen, um die richtigen Berechtigungen zu erhalten.

34
00:02:55,800 --> 00:03:02,310
Dies wird installiert, ist ein Firebase-Toolpaket, das global auf Ihrem System installiert ist. Wir benötigen dieses

35
00:03:02,400 --> 00:03:10,230
Tool, um später Rechte an Cloud-Funktionscode zu erhalten und diese automatisierten Benachrichtigungen zu erstellen, damit dies abgeschlossen ist und wir auf

36
00:03:10,230 --> 00:03:11,540
Weiter klicken können.

37
00:03:11,610 --> 00:03:13,640
Und jetzt sollten wir Firebase darin betreiben.

38
00:03:13,650 --> 00:03:18,330
Und dann, nachdem wir unseren Funktionscode Firebase Deploy geschrieben haben.

39
00:03:18,330 --> 00:03:22,970
Also alles in Ordnung hier in diesem Projekt und das ist wichtig.

40
00:03:22,980 --> 00:03:29,820
Tun Sie dies innerhalb des Projekts, zu dem die Funktionen gehören sollen, um Ihren gesamten Code organisiert zu halten.

41
00:03:29,820 --> 00:03:36,360
Jetzt wird im Grunde ein Assistent geöffnet, der Ihnen einige Fragen stellt und Sie fragt, welche Funktionen des

42
00:03:36,360 --> 00:03:42,420
Firebase-Ökosystems Sie hier oder hier verwenden möchten Seien Sie genau, welche Funktionen Sie mit dem Firebase-CLIA-Tool verwalten

43
00:03:42,420 --> 00:03:49,050
möchten, das wir hier verwenden. L. L. Ich stehe für Kommandozeilenschnittstelle.

44
00:03:49,050 --> 00:03:51,020
Jetzt interessieren uns hier Funktionen.

45
00:03:51,060 --> 00:03:56,780
Also werde ich nach unten scrollen und die Leertaste drücken, um es auszuwählen, und wir können den Rest unberührt lassen.

46
00:03:56,790 --> 00:04:02,960
Ja, wir verwenden Fire Store und ja, wir verwenden Storage, aber wir haben dies bereits hier integriert.

47
00:04:03,000 --> 00:04:06,880
Wir wollen dort mit dem Firebase-Siegel nichts schaffen.

48
00:04:06,990 --> 00:04:09,540
Wir verwalten dies stattdessen über die Weboberfläche.

49
00:04:09,600 --> 00:04:12,210
Derzeit können Funktionen derzeit nicht mehr verwaltet werden.

50
00:04:12,450 --> 00:04:16,370
Also wählen wir diese aus und drücken danach die Eingabetaste.

51
00:04:16,380 --> 00:04:24,360
Jetzt müssen Sie dem Firebase-Tool mitteilen, mit welchem Projekt Sie das Projekt dieser lokalen Funktion verbinden möchten, das

52
00:04:24,360 --> 00:04:25,920
Sie erstellen möchten.

53
00:04:25,920 --> 00:04:32,640
Also, mit welchem Firebase-Webprojekt Sie es verbinden möchten und hier wird es ein vorhandenes Projekt verwenden und dann

54
00:04:34,380 --> 00:04:39,480
meine Flatter-Chat-App hier jetzt als letzten Schritt auswählen, den ich gefragt werde.

55
00:04:39,510 --> 00:04:45,060
Welche Programmiersprache ich für diese Funktionen verwenden möchte und ich werde jetzt Javascript als Randnotiz verwenden.

56
00:04:45,090 --> 00:04:48,450
Sie müssen kein Javascript-Experte sein, um hier mitzumachen.

57
00:04:48,450 --> 00:04:54,150
Wenn Sie eine echte App mit einer komplexeren serverseitigen Logik erstellen möchten, müssen Sie natürlich JavaScript oder eine andere

58
00:04:54,210 --> 00:04:56,600
Sprache lernen, die Sie dort verwenden können.

59
00:04:56,730 --> 00:05:01,860
Aber um im Diskurs mitzumachen, benötigen Sie keine Javascript-Kenntnisse. Drücken Sie

60
00:05:02,640 --> 00:05:11,940
einfach hier die Eingabetaste und wählen Sie hier "Ja" für Lynchmorde, damit wir keine Fehler machen. Hier wird nun

61
00:05:12,030 --> 00:05:13,830
ein Funktionsordner hinzugefügt.

62
00:05:13,830 --> 00:05:20,180
In diesem Funktionsordner befinden sich einige Dateien, die bis auf diesen Index J keine Datei

63
00:05:20,190 --> 00:05:20,840
sind.

64
00:05:20,850 --> 00:05:27,780
Das ist das Wichtigste für uns, denn dort werden wir jetzt unsere Funktion schreiben. Sie werden auch sehen, dass der Assistent

65
00:05:27,780 --> 00:05:29,700
noch nicht vollständig fertig ist.

66
00:05:29,700 --> 00:05:35,220
Sie werden gefragt, ob Abhängigkeiten installiert werden sollen, und Sie sollten hier Y für ein Ja drücken und die

67
00:05:35,250 --> 00:05:35,920
Eingabetaste drücken.

68
00:05:36,030 --> 00:05:37,970
Dadurch werden alle Abhängigkeiten installiert.

69
00:05:37,980 --> 00:05:40,260
Diese Funktionen richten Anforderungen ein.

70
00:05:40,350 --> 00:05:45,510
Jetzt spreche ich also nicht über die Flatter-App, sondern über diese Cloud-Funktionen, und wir

71
00:05:45,510 --> 00:05:47,540
werden diese Cloud-Funktionen später bereitstellen.

72
00:05:47,540 --> 00:05:53,640
F Funktioniert die Firebase-Hosting-Umgebung so, dass sie auf einem Server außerhalb unseres lokalen Computers ausgeführt wird.

73
00:05:53,640 --> 00:05:56,220
Wir entwickeln sie nur vor Ort.

74
00:05:56,220 --> 00:06:01,140
Dies hat nun diesen Knotenmodul-Ordner erstellt, der im Grunde alle Abhängigkeiten enthält, die wir hier haben,

75
00:06:01,620 --> 00:06:05,450
und wir haben dieses Paket mit Jason File, das alle Abhängigkeiten auflistet.

76
00:06:05,520 --> 00:06:12,630
Dieses Projekt ist Funktionen Projekt hat und dort haben wir zwei Abhängigkeiten Firebase Admin und Firebase Funktionen

77
00:06:12,630 --> 00:06:19,980
und wir werden in der Tat nur diese beiden Pakete benötigen, um unsere automatischen Benachrichtigungen senden Code zu

78
00:06:19,980 --> 00:06:20,750
schreiben.

79
00:06:20,820 --> 00:06:22,680
Beginnen wir als nächstes damit.
