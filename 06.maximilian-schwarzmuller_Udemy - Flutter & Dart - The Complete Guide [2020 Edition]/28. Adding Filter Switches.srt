1
00:00:02,300 --> 00:00:09,500
So now that we're passing data back and forth, let's populate our pages with more life and let's start

2
00:00:09,500 --> 00:00:11,120
with the filters for that,

3
00:00:11,150 --> 00:00:18,050
so that we can set some filters here on the FiltersScreen which actually impact the meals we see here

4
00:00:18,050 --> 00:00:19,170
on the other screens,

5
00:00:19,280 --> 00:00:26,930
so that for example when I set my filter to vegetarian, I don't see the hamburger because if you check

6
00:00:26,930 --> 00:00:33,070
the dummy data, all these meals should be set up such that for example if we search for the hamburger there,

7
00:00:33,080 --> 00:00:39,450
the classic hamburger, it has the isVegan and isVegetarian flags set to false,

8
00:00:39,470 --> 00:00:47,850
so we should not see that if we have a filter to exclude non-vegetarian food. So let's go to the filters

9
00:00:47,910 --> 00:00:51,930
screen and work on it. As a first step,

10
00:00:51,940 --> 00:00:58,000
we can convert the FiltersScreen to a stateful widget because actually, we'll have to manage which

11
00:00:58,000 --> 00:01:03,900
filters the user set or not. We'll also manage that globally in the main.dart file later

12
00:01:03,970 --> 00:01:09,310
but we also need to manage it in this screen to update the values we show on thes switches

13
00:01:09,340 --> 00:01:16,000
we're going to show on the screen. So here in my FiltersScreen state,

14
00:01:16,080 --> 00:01:25,030
I'll start by initializing four boolean properties, gluten free which initially is set to false, vegetarian

15
00:01:27,370 --> 00:01:37,040
which initially is set to false, vegan which initially is set to false and also lactose free which is initially

16
00:01:37,040 --> 00:01:38,740
set to false,

17
00:01:39,140 --> 00:01:43,160
we'll need that data later on.

18
00:01:43,170 --> 00:01:49,800
Now let's go down to our body here and in that body, I think it makes sense to have a column because

19
00:01:49,800 --> 00:01:53,310
we'll have multiple switches that should be shown above each other

20
00:01:53,310 --> 00:01:59,940
and therefore here of course, we'll register a couple of children. As a first child,

21
00:01:59,940 --> 00:02:09,470
I'll add a container where I essentially want to set up some padding with EdgeInsets.all 20 and then

22
00:02:09,470 --> 00:02:14,680
add a child which is just some text that tells us that we can adjust our meal selection here,

23
00:02:14,720 --> 00:02:24,110
so we say adjust your meal selection. We can also give this text some style of course

24
00:02:24,160 --> 00:02:34,560
and for that here, I'll here use my default title text theme here. So that's the container that simply

25
00:02:34,560 --> 00:02:36,760
displays a title, below that title,  

26
00:02:36,750 --> 00:02:43,200
I now want to have all these switches and we can actually use a ListView here, since we're in a column

27
00:02:43,200 --> 00:02:46,130
however, we can't add a ListView like this,

28
00:02:46,170 --> 00:02:52,620
instead we would have to add a container or what we can also do, we can take expanded, if you remember

29
00:02:52,650 --> 00:02:58,650
that's a widget which will ensure that its child widget takes up as much space as it can get in the

30
00:02:58,650 --> 00:03:00,390
surrounding column or row,

31
00:03:00,390 --> 00:03:06,570
so it will take all the remaining space between container and the end of the screen. So we can use

32
00:03:06,570 --> 00:03:10,140
expanded here and add our ListView in there

33
00:03:10,140 --> 00:03:16,290
and now since I have a fixed amount of elements here, I'll not use the builder constructor but the children

34
00:03:16,800 --> 00:03:22,410
argument here in the normal ListView constructor and now there is a specific ListTile which we can

35
00:03:22,410 --> 00:03:28,860
use here which looks really good and that's the switch ListTile. Again that's built into Flutter, we

36
00:03:28,860 --> 00:03:30,110
haven't used that before,

37
00:03:30,210 --> 00:03:37,160
it works really well in a list and allows us to show a switch with some text next to it. The switch list

38
00:03:37,170 --> 00:03:44,770
tile requires a title and I'll set the title here to a text widget where I say gluten free,

39
00:03:45,210 --> 00:03:47,250
that's my first switch.

40
00:03:47,250 --> 00:03:53,840
Then we need to add a value, that is, just as for the normal switch which you already learned about, there to

41
00:03:53,850 --> 00:03:59,820
tell Flutter in which state this switch should be because it doesn't manage that state internally, we

42
00:03:59,820 --> 00:04:01,270
have to manage that.

43
00:04:01,490 --> 00:04:06,780
Now that's why I added these booleans, we'll change these when the user clicks the switches and we'll

44
00:04:06,780 --> 00:04:11,340
pass the data back into the switch then to update what's shown on the screen.

45
00:04:11,340 --> 00:04:20,800
So here, I'll set the value to gluten free, _glutenFree. We can also add a subtitle if we want

46
00:04:20,800 --> 00:04:27,880
to with another text widget where we say only include gluten free meals to make it really clear what

47
00:04:27,880 --> 00:04:30,980
this switch does.

48
00:04:31,110 --> 00:04:36,600
Now of course, we also need an onChanged listener, so a function that executes when the user taps this

49
00:04:36,630 --> 00:04:39,620
switch and there, we get the new values,

50
00:04:39,620 --> 00:04:46,230
so the new value the switch should have after being tapped and therefore in here, we can now use set state, hence

51
00:04:46,230 --> 00:04:55,530
the stateful widget where I set my gluten free boolean equal to new value, to reflect the change the

52
00:04:55,530 --> 00:05:03,880
user made here. If we save that and we go to the filters page here,

53
00:05:03,930 --> 00:05:05,130
this is what we see

54
00:05:05,310 --> 00:05:09,720
and I can now use that switch which is pretty neat.

55
00:05:09,780 --> 00:05:12,390
Now of course, we don't just have gluten free meals,

56
00:05:12,510 --> 00:05:14,390
we have a couple of other switches.

57
00:05:14,400 --> 00:05:19,620
Now I'll repeat this ListTile a couple of times and therefore, we can of course extract this into a

58
00:05:19,620 --> 00:05:25,200
separate widget or put it into a builder method and I'll go for the good old builder method here which

59
00:05:25,200 --> 00:05:34,860
returns a widget, _buildSwitchListTile sounds like a fitting name, return

60
00:05:34,860 --> 00:05:39,660
the widget and we need a couple of pieces of information here,

61
00:05:39,900 --> 00:05:50,670
we need the title text, we need the description text for the subtitle basically and we need to get a

62
00:05:50,670 --> 00:05:54,060
boolean value which is the current value

63
00:05:54,390 --> 00:06:04,070
and I want to get a function which updates the value, so update value, something like that. The title is

64
00:06:04,060 --> 00:06:13,450
then what I use here in my title text widget, the subtitle text widget here takes the description,

65
00:06:17,320 --> 00:06:23,740
here for onChanged, I'll point at update value and the value we pass to value here should be the current

66
00:06:23,740 --> 00:06:25,770
value.

67
00:06:25,790 --> 00:06:26,750
Now when we call

68
00:06:29,670 --> 00:06:35,900
_buildSwitchListTile down there,

69
00:06:35,960 --> 00:06:38,040
we therefore have to pass all that information.

70
00:06:38,060 --> 00:06:46,940
So here, that was gluten free, here I said only include gluten free meals,

71
00:06:47,230 --> 00:06:56,470
current value is our gluten free boolean and the update value function is what I cut out of my

72
00:06:56,470 --> 00:06:58,060
old switch list tile,

73
00:06:58,090 --> 00:07:07,700
so it's this function here where we call set state and update gluten free. So it's not much shorter but

74
00:07:07,700 --> 00:07:08,750
a little bit

75
00:07:08,750 --> 00:07:15,800
and now we can use that _buildSwitchListTile method and repeat it to also here build a switch tile

76
00:07:15,800 --> 00:07:24,620
for lactose free to only include lactose free meals and of course therefore the current value we pass in

77
00:07:24,680 --> 00:07:33,380
is lactose free and set state should update to lactose free value here. Then we add another list tile,

78
00:07:33,770 --> 00:07:46,220
here we're talking about vegetarian food, so only include vegetarian meals, we pass the vegetarian boolean

79
00:07:46,220 --> 00:07:52,350
in as a current value and that's also what we of course update when the user clicks the list

80
00:07:52,350 --> 00:08:03,380
tile. And then here last but not least, we have the vegan ListTile, only include such meals and then

81
00:08:03,380 --> 00:08:12,380
here therefore, we pass in the appropriate boolean property. If we save all of that and we go back, this

82
00:08:12,380 --> 00:08:19,670
is what we have and now here, we can set all these switches. Setting it here of course is nice, that should

83
00:08:19,670 --> 00:08:27,800
now also be reflected back into our meals and that means we have to wire up what we set here with what we

84
00:08:27,920 --> 00:08:29,420
output here in meals.
