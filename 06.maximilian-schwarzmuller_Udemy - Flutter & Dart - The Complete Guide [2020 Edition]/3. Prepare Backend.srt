1
00:00:02,370 --> 00:00:09,060
So back in the project we worked on over the last modules and attached you find that snapshot in case

2
00:00:09,060 --> 00:00:14,010
you didn't follow along or you just want to make sure you're using the same version I'm using, this is the

3
00:00:14,010 --> 00:00:18,120
shop we build in the last modules and there we can view our details,

4
00:00:18,120 --> 00:00:19,910
we can place orders

5
00:00:19,950 --> 00:00:24,450
and the problem with the orders for example is that right now whilst they are replaced and whilst we can

6
00:00:24,450 --> 00:00:25,380
fetch them,

7
00:00:25,380 --> 00:00:28,300
they're anonymous or our user is anonymous.

8
00:00:28,320 --> 00:00:34,470
So these orders here don't belong to a specific user and that's one of the problems we'll solve

9
00:00:34,470 --> 00:00:39,720
and in addition in general, a shop app only really makes sense if we have a user.

10
00:00:39,960 --> 00:00:44,580
So therefore, we'll make sure that we can login and sign up

11
00:00:44,580 --> 00:00:47,690
and that requires two things. In our app here,

12
00:00:47,700 --> 00:00:56,090
it requires an authentication screen which shows us this login sign up form and on Firebase, it

13
00:00:56,120 --> 00:00:59,270
will also have to tune something. There,

14
00:00:59,280 --> 00:01:01,280
there are two things you have to set up - 

15
00:01:01,320 --> 00:01:04,680
the first thing is that we need to lock down our database.

16
00:01:04,680 --> 00:01:06,260
Right now it's open to everyone

17
00:01:06,300 --> 00:01:08,440
and that was good for the last module

18
00:01:08,550 --> 00:01:11,000
but now that we'll add authentication,

19
00:01:11,070 --> 00:01:16,530
we want to lock down that database to only allow access by authenticated users

20
00:01:16,550 --> 00:01:22,590
and you do that by going to the rules tab here in your database section on Firebase and there instead

21
00:01:22,650 --> 00:01:27,500
of having read and write access set to true, which means everyone can read and write,

22
00:01:27,660 --> 00:01:33,560
you should set this to a string where you say auth unequal to null and do the same for writing

23
00:01:33,620 --> 00:01:38,760
and that's a special syntax which is understood by Firebase which basically tells Firebase if the user

24
00:01:38,760 --> 00:01:43,000
is not authenticated, then the user does not have read or write access.

25
00:01:43,500 --> 00:01:48,450
You have to publish these rules thereafter and the warning you were getting here about these rules not

26
00:01:48,450 --> 00:01:56,010
being secure actually just means whilst the API is now locked down, as soon as you are authenticated,

27
00:01:56,250 --> 00:01:58,980
you can actually read and write all data,

28
00:01:59,100 --> 00:02:03,900
so even orders that don't belong to you specifically as a user.

29
00:02:03,900 --> 00:02:09,920
This is fine for this demo because if we would want to change this, we'd have to dive deeper into how

30
00:02:09,970 --> 00:02:11,900
to configure Firebase rules,

31
00:02:11,970 --> 00:02:17,130
that has nothing to do with Flutter though and it also won't help you if you're using a different back-end.

32
00:02:17,130 --> 00:02:22,530
In case you plan on using Firebase however, you'll find some resources attached, some links to the official

33
00:02:22,530 --> 00:02:28,180
docs that help you with understanding the rules so that you could configure them in more detail.

34
00:02:28,290 --> 00:02:35,070
These rules will do for us and what they will do is they ensure that unauthenticated access is not possible

35
00:02:35,070 --> 00:02:42,060
and I can prove that if I go back and I load the shop page, now we have a spinner which won't stop and

36
00:02:42,060 --> 00:02:45,990
because I haven't added error handling here, we're also not seeing some error message,

37
00:02:46,020 --> 00:02:49,670
you could of course implement that to show some error text or anything like that,

38
00:02:49,800 --> 00:02:55,770
this fails now because here we're getting an error because now basically that HTTP request doesn't succeed,

39
00:02:55,800 --> 00:03:02,920
we get back an error response because the API is locked down and currently we are not logged in,

40
00:03:02,940 --> 00:03:05,530
so this works as intended.

41
00:03:05,550 --> 00:03:10,370
Now we need to change one more thing on Firebase and that's here under authentication,

42
00:03:10,470 --> 00:03:12,570
you need to set up a sign in method.

43
00:03:13,200 --> 00:03:18,960
So there, you need to unlock e-mail password sign in because that will allow us to create users with an

44
00:03:18,960 --> 00:03:23,490
e-mail password combination and then also log users in with that combination.

45
00:03:23,490 --> 00:03:29,490
So once this is enabled, we can continue with the steps we'll implement throughout this module to sign users

46
00:03:29,490 --> 00:03:32,940
up and sign users in and get that token by Firebase.

47
00:03:32,940 --> 00:03:36,750
So for now, our Firebase work is done and we can go back to Flutter.
