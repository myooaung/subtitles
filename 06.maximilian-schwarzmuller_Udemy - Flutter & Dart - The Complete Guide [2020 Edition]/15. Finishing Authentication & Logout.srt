1
00:00:02,530 --> 00:00:08,360
Wir möchten diesen Chat-Bildschirm laden, wenn wir authentifiziert sind. Daher müssen wir in Maine

2
00:00:08,360 --> 00:00:11,330
Dart diesen Off-Bildschirm gegen den Chat-Bildschirm austauschen.

3
00:00:11,330 --> 00:00:16,840
Wenn wir herausfinden, dass wir jetzt im Off-Bereich ein gültiges Token haben, haben wir etwas Ähnliches getan.

4
00:00:16,850 --> 00:00:23,510
Aber dort haben Sie gesehen, dass Sie einige Schritte ausführen müssen oder sich darum kümmern müssen, wenn

5
00:00:23,780 --> 00:00:26,150
Sie das Token selbst verwalten.

6
00:00:26,150 --> 00:00:32,430
Das Coole ist, dass mit Firebase und FA basierend darauf, dass die gesamte Token-Verwaltung für Sie

7
00:00:32,430 --> 00:00:39,540
erledigt wird und das Austauschen von Seiten basierend auf dem Aus-Status extrem einfach ist. Wir können unser Home-Widget hier

8
00:00:39,840 --> 00:00:41,640
durch einen Stream-Builder ersetzen.

9
00:00:41,640 --> 00:00:48,260
Ich habe dir schon früh gezeigt, dass der Stream-Builder bereits weiß, dass dies einen Stream und dann

10
00:00:48,270 --> 00:00:56,040
ein Builder-Argument ist, das keinen Grund zum Schreien bietet. Nimm nicht meinen Cloud-Feuersturm, sondern mein Firebase-Off-Paket oder eine Funktion aus

11
00:00:56,040 --> 00:00:57,000
diesem Paket.

12
00:00:57,420 --> 00:01:06,930
Also importiere ich die Paketkäuferbasis aus der Firebase von Dodge Dart und mit der hier

13
00:01:06,930 --> 00:01:12,870
importierten können wir Firebase aus dem geänderten DOT-Instanzpunkt-Ein-Aus-Status verwenden.

14
00:01:12,870 --> 00:01:19,290
Dies gibt uns einen Stream und dieser Stream gibt einen neuen Wert aus, wenn Sie den Status "Aus" ändern, und der

15
00:01:19,310 --> 00:01:24,440
Status "Aus" ändert sich, wenn wir uns anmelden, wenn wir uns anmelden, wenn wir uns abmelden.

16
00:01:24,540 --> 00:01:31,170
Aber auch wenn die App geladen wird, wird überprüft, ob ein zwischengespeichertes Token vorhanden ist und ob das Zwischenspeichern

17
00:01:31,380 --> 00:01:35,640
und Speichern vollständig von Firebase hier durch das Firebase-Flatterpaket verwaltet wird.

18
00:01:35,760 --> 00:01:41,670
Und wenn es ein solches Token findet, wird es dieses Token validieren und wenn das Token gültig

19
00:01:41,700 --> 00:01:45,640
ist, wird es dieses Token sogar nach einem neuen App-Start verwenden.

20
00:01:45,820 --> 00:01:53,090
Der gesamte Token-Speicher und die Verwaltung über App-Neustarts hinweg werden hier vollständig von Firebase verwaltet, was

21
00:01:53,130 --> 00:01:54,660
äußerst praktisch ist.

22
00:01:55,200 --> 00:02:01,020
Wir müssen uns also nur diesen Stream anhören und dann wird der Builder

23
00:02:01,020 --> 00:02:05,370
hier ausgelöst, wenn sich unser Aus-Status hier ändert. Wir

24
00:02:08,250 --> 00:02:14,400
erhalten den Kontext und diesen Benutzer-Snapshot. In dieser Funktion können wir dann verschiedene Widgets

25
00:02:14,400 --> 00:02:21,690
basierend auf dem Benutzer-Snapshot zurückgeben, den wir überprüfen können Wenn der Benutzer-Snapshot Daten enthält, was bedeutet, dass

26
00:02:21,690 --> 00:02:30,310
wir im Wesentlichen ein Token gefunden haben. In diesem Fall können wir den Chat-Bildschirm zurückgeben. Der Chat-Bildschirm hier enthält Daten.

27
00:02:30,350 --> 00:02:38,200
In den Snapshots ist ein Feld verfügbar, das genau angibt, wo wir gültige Daten gefunden haben Wenn wir keine

28
00:02:38,230 --> 00:02:44,230
Daten gefunden haben, werden Sie vom Bildschirm zurückgeschickt, da wir sie dann authentifizieren müssen,

29
00:02:44,230 --> 00:02:50,710
wenn ich sie jetzt gespeichert habe. Sie werden sehen, dass der Chat-Bildschirm hier ist, weil

30
00:02:50,710 --> 00:02:56,470
ich mich früher bei Firebase angemeldet habe, da ich dies mehrfach erklärt und

31
00:02:56,680 --> 00:03:02,050
gespeichert habe Token und Verwaltung hinter den Kulissen und der Aufwand durch

32
00:03:03,660 --> 00:03:11,400
einfaches Hinzufügen dieses Codes Firebase prüfte, ob es ein Token hat, und meldet sich daher an und rendert

33
00:03:11,400 --> 00:03:19,520
den Chat-Bildschirm einfach so, wie alles hinter den Kulissen verwaltet wird. Deshalb Die Firebase-Authentifizierung ist hier jetzt wirklich erstaunlich,

34
00:03:19,520 --> 00:03:31,830
um sie vollständig in Aktion zu sehen. Die Abmeldefunktion ist möglicherweise auch hilfreich. Daher gehe ich zum Chat-Bildschirm und füge hier auf dem Gerüst eine App-Leiste, die Standard-App-Leiste und

35
00:03:31,860 --> 00:03:41,460
diese App-Leiste hinzu wird einen Titel erhalten, der ein Text-Widget sein kann, in dem ich sage, dass Leiter-Chat so etwas und was noch

36
00:03:41,460 --> 00:03:47,400
wichtiger ist, dass es einige Aktionen gibt. Aktionen sind eine Reihe von Widgets, und

37
00:03:48,500 --> 00:03:54,710
dort möchte ich eine Dropdown-Schaltfläche hinzufügen, die ein Standard-Widget ist, das kommt Mit dem Flattern

38
00:03:54,710 --> 00:04:04,710
kann die Dropdown-Schaltfläche ein Symbol rendern, das in der Aktionsleiste angezeigt wird. Dort verwende ich das Widget "Ich kann" und färbe dann ein weiteres

39
00:04:05,980 --> 00:04:18,090
Vert-Symbol, das uns im Grunde freie vertikale Punkte gibt. Ich werde hier auch die Farbe des Symbols festlegen Symbol zum Thema des Kontexts Primärfarbe Entschuldigung, nicht primär, sondern primär.

40
00:04:18,090 --> 00:04:19,800
Ich kann Punktfarbe so

41
00:04:24,020 --> 00:04:24,590
thematisieren.

42
00:04:26,390 --> 00:04:31,610
Nein, dies wird eine schöne Dropdown-Schaltfläche rendern, die wir hier sehen, aber diese Schaltfläche macht nichts Rotes.

43
00:04:31,610 --> 00:04:41,320
Um sicherzustellen, dass dies auf der Dropdown-Schaltfläche geschieht, aber außerhalb des Symbols, setzen wir einige Elemente, die bereits Elemente sind, die angezeigt werden, wenn

44
00:04:41,320 --> 00:04:45,790
wir auf die Dropdown-Schaltfläche klicken. Dies ist wiederum eine Liste von

45
00:04:47,090 --> 00:04:50,830
Widgets. Hier wird normalerweise das Dropdown-Menü gerendert Artikel.

46
00:04:52,060 --> 00:04:54,310
Und das ist ein einzelnes Element in dieser Dropdown-Liste.

47
00:04:54,320 --> 00:04:56,960
Und hier möchte ich einen Artikel haben.

48
00:04:57,120 --> 00:05:03,660
Es hat ein Kind, in dem ich einen Container verwenden werde, und dieser Container hat ein Kind, in dem ich einen Raum verwenden werde,

49
00:05:03,660 --> 00:05:06,020
weil ich hier zwei Widgets nebeneinander rendern möchte.

50
00:05:06,150 --> 00:05:15,230
Als Kind in dieser Dropdown-Liste sollten die beiden Widgets nebeneinander ein Symbol sein.

51
00:05:15,330 --> 00:05:25,420
Ein normales Symbol-Widget, bei dem ich das App-Symbol zum Beenden verwende, und dann ein Text-Widget, bei dem ich Abmelden sage. Für zusätzlichen Abstand füge

52
00:05:26,290 --> 00:05:34,370
ich hier ein drittes Widget hinzu, ein Feld in der Größe, in dem ich die Breite 2 8 einstelle.

53
00:05:34,400 --> 00:05:41,640
Jetzt müssen wir auch diesen Dropdown-Menüelementwert angeben, der als Kennung fungiert.

54
00:05:41,690 --> 00:05:43,320
Und ich werde mich hier nur abmelden.

55
00:05:43,340 --> 00:05:50,970
Der Wert liegt bei Ihnen, und zwar auf der gesamten Dropdown-Schaltfläche hier.

56
00:05:51,120 --> 00:06:01,260
Sie können ein geändertes Argument hinzufügen, und die Verschuldung sollte eine Funktion sein, die die Elementkennung und damit den hier angegebenen

57
00:06:01,260 --> 00:06:02,670
Wert erhält.

58
00:06:02,670 --> 00:06:07,590
Wenn Sie mehrere Elemente hatten, können Sie anhand der Kennung herausfinden, welches Element gedrückt wurde.

59
00:06:07,800 --> 00:06:14,130
Hier haben wir natürlich der Vollständigkeit halber nur noch einen Artikel. Ich werde prüfen, ob die Artikelkennung gleich der Abmeldung ist.

60
00:06:14,130 --> 00:06:17,870
Diese sollte natürlich hier sein, da dies unser einziger Artikel ist.

61
00:06:18,000 --> 00:06:25,890
Und wenn das der Fall ist, für den ich mich abmelden möchte, verwende ich wieder das Paket firebase off,

62
00:06:25,890 --> 00:06:29,380
also packe firebase off firebase off dot Dart.

63
00:06:29,700 --> 00:06:41,540
Und hier können wir dann Fire Base Off Dot Instance Dot Signout aufrufen und dies wird den Benutzer mit all dem

64
00:06:41,540 --> 00:06:42,670
aussperren.

65
00:06:42,680 --> 00:06:48,320
Jetzt können wir dies öffnen und wenn ich auf Abmelden klicke, bin ich wieder

66
00:06:48,320 --> 00:06:55,340
hier, weil dieser Wissenschaftsbenutzer das Token automatisch zerstört und hier im geänderten Stream "Aus" ein neues Ereignis ausgibt.

67
00:06:55,340 --> 00:07:01,190
Und dort werden wir herausfinden, dass wir kein Token mehr haben, so dass wir es nicht in

68
00:07:01,190 --> 00:07:06,800
diese if-Anweisung schaffen und stattdessen Offscreen zurückgeben. Wenn ich mich hier erneut anmelde, sehen Sie natürlich,

69
00:07:10,490 --> 00:07:12,980
dass wir zurück zum gehen Chat-Bildschirm.

70
00:07:12,980 --> 00:07:19,790
Das funktioniert also, wenn der Anmelde- und Abmeldeteil funktioniert. Das war also ein großer Fortschritt.

71
00:07:19,790 --> 00:07:26,750
Lassen Sie mich nun kurz auf einige Firebase-Datenbankregeln eingehen, die wichtig sind, wenn wir über die Sicherheit auf

72
00:07:26,750 --> 00:07:31,190
Firebase sprechen, bevor wir hier mit dem eigentlichen Chat beginnen.
