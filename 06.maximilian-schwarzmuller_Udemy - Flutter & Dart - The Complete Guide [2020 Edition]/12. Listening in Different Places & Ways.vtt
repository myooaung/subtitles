WEBVTT
1
00:00:02.240 --> 00:00:09.200
To take advantage of our products provider, let's for example go to the product detail widget, the product

2
00:00:09.200 --> 00:00:13.620
detail screen where we also need product data and there I get the product ID.

3
00:00:13.880 --> 00:00:18.400
Now thanks to us providing our products up here,

4
00:00:18.470 --> 00:00:20.320
our products object,

5
00:00:20.840 --> 00:00:26.420
we can, since product detail screen is of course also a child of the ChangeNotifierProvider here,

6
00:00:26.420 --> 00:00:29.930
we can tap into our provider data here as well.

7
00:00:29.990 --> 00:00:36.830
So here where I get my product ID, I can also use provider of, now use the angled brackets to be clear

8
00:00:36.830 --> 00:00:42.410
that I'm interested in an instance of the products class and therefore, let's of course add the

9
00:00:44.970 --> 00:00:57.640
import here at the top, import from providers/products.dart and then forward the context which is our

10
00:00:57.730 --> 00:01:04.180
communication channels so to say to use provider, I also need to import the provider package.

11
00:01:04.180 --> 00:01:13.310
So let's import package/provider/provider.dart and with that provider import added,

12
00:01:13.330 --> 00:01:19.900
now here we actually can get access to our products data as well and we can now find a product with

13
00:01:19.900 --> 00:01:21.010
that ID there.

14
00:01:22.030 --> 00:01:26.790
We can simply chain another method because this here gives us access to the whole products object,

15
00:01:26.800 --> 00:01:32.350
we know we get items there and on the items, if I want to find one with a specific ID, I can get the

16
00:01:32.350 --> 00:01:38.440
firstWhere a specific condition is met, that condition is expressed as a function, where we get every

17
00:01:38.440 --> 00:01:44.000
item, so every product in our case here and then I want to return true

18
00:01:44.230 --> 00:01:51.250
if that ID of the product I'm looking at is equal to the product ID I got here through my route. With

19
00:01:51.250 --> 00:01:53.950
that, I know which product was loaded,

20
00:01:53.950 --> 00:02:02.050
so here I have my loaded product in the end and now I can use that loaded product title here to output

21
00:02:02.080 --> 00:02:10.690
that title and hence now if I tap on a product here, we see the right title in the appBar. So this is

22
00:02:10.750 --> 00:02:16.360
how easy you can now use your centrally managed data and tap into it.

23
00:02:16.390 --> 00:02:19.960
Now actually here however, we can improve two things.

24
00:02:19.960 --> 00:02:26.950
One of the things is that we want to move as much logic as possible out of our widgets into, for example,

25
00:02:27.130 --> 00:02:28.960
our provider class here.

26
00:02:28.960 --> 00:02:32.220
So this filtering for ID here would be better done

27
00:02:32.230 --> 00:02:38.260
inside of that class where we can of course simply add a new method. We can add a method which returns

28
00:02:38.260 --> 00:02:47.840
a product in the end, which I'll name find by ID and in there, I want to get an ID as an input, as an

29
00:02:47.840 --> 00:02:56.090
argument but then I return _items firstWhere with my logic which I just defined before, where

30
00:02:56.090 --> 00:03:00.890
I compare the ID of each product to the ID I'm getting into an argument.

31
00:03:00.890 --> 00:03:06.080
So therefore, this will return an item which it identified and the heavy lifting,

32
00:03:06.110 --> 00:03:13.850
the core logic is hidden away here in my provider class and my widget can therefore stay pretty lean

33
00:03:14.330 --> 00:03:24.260
here on the products object I am getting from my provider, I can simply call find by ID, forward that

34
00:03:24.260 --> 00:03:26.400
product ID and we're done

35
00:03:26.420 --> 00:03:31.610
and now this is a bit leaner here and which is something you generally want to have. You want to have lean

36
00:03:31.610 --> 00:03:34.880
widgets and have your logic somewhere else in the app,

37
00:03:34.880 --> 00:03:41.510
like here in the provider class. Now in the product detail screen, there is another thing we can improve

38
00:03:42.080 --> 00:03:46.990
and that is here. With that provider of thing,

39
00:03:46.990 --> 00:03:52.660
I mentioned that I set up a listener which reruns this build method whenever products change.

40
00:03:52.660 --> 00:03:58.090
Now you could argue that here on the product detail screen, there is little that could change about

41
00:03:58.090 --> 00:04:01.390
products which needs this widget to rebuild,

42
00:04:01.450 --> 00:04:04.840
maybe we added a new product somewhere else in the app.

43
00:04:04.870 --> 00:04:08.070
Well that shouldn't impact this screen

44
00:04:08.080 --> 00:04:14.290
if it's still somehow visible and can be seen by the user. So I don't really want to rebuild this widget

45
00:04:14.350 --> 00:04:15.980
when my data changes here,

46
00:04:16.060 --> 00:04:22.180
instead I just want to tap into my data here one time when this screen is built for the first time and

47
00:04:22.180 --> 00:04:25.270
never really update whenever something changes

48
00:04:25.510 --> 00:04:31.540
and for that, this of method here on provider gives you a special argument, the listen argument which

49
00:04:31.540 --> 00:04:37.720
you can set to false. Now the default is true and if it is set to true which you don't need to do because

50
00:04:37.750 --> 00:04:44.650
it's the default, then the build method of the widget in which you're using provider of will rerun

51
00:04:45.000 --> 00:04:48.310
whenever the provided object,

52
00:04:48.340 --> 00:04:53.750
so in this case, the products object changed, the object we're providing here.

53
00:04:53.840 --> 00:04:56.370
So if this would change or the data in there would change,

54
00:04:56.420 --> 00:05:03.110
so if we call notifyListeners in there, then all widgets that use provider of would rebuild. With listen

55
00:05:03.120 --> 00:05:09.260
false, this widget here will not rebuild if notifyListeners is called because it's not set up as

56
00:05:09.260 --> 00:05:14.570
an active listener and that of course is something you should do if you only need data one time, you

57
00:05:14.570 --> 00:05:20.120
just want to get data from your global data storage but you're not interested in updates, then you don't

58
00:05:20.120 --> 00:05:21.500
need to listen.

59
00:05:21.500 --> 00:05:25.470
Of course, it's a different thing here in the products grid, there

60
00:05:25.550 --> 00:05:31.160
I want to rebuild my grid when I have a new product or when my products change in some way.

61
00:05:31.160 --> 00:05:38.340
So here, I definitely don't want to set listen to false but I want to listen to changes. With this, we

62
00:05:38.400 --> 00:05:44.910
started working with the providers package and we were using our providers package, at least a little

63
00:05:44.910 --> 00:05:45.750
bit already,

64
00:05:45.750 --> 00:05:49.280
thus far however, only for getting some dummy data of course.

65
00:05:49.320 --> 00:05:55.230
Let's next manage the favorite status of products because that's something where the provider package

66
00:05:55.230 --> 00:05:56.310
can help us as well.
