WEBVTT

00:00.450 --> 00:03.910
Hello and welcome back to the course on deep learning in today's world we're going to walk through the

00:03.910 --> 00:08.040
steps that are included in the process of training an hour and coater.

00:08.130 --> 00:14.400
So let's get started here we've got an hour and quarter and obviously get some inputs and then we'll

00:14.400 --> 00:20.250
get some outputs and Alcaeus will get input as input will get the ratings of lots and lots of users

00:20.550 --> 00:27.300
for these six movies and based on those ratings it'll come up with a way to compress that information

00:27.570 --> 00:34.200
and come up with those weights that will allow it to encode or to basically set itself up to be able

00:34.200 --> 00:36.970
to then and coded and decoded in the future.

00:37.260 --> 00:38.370
So here we go.

00:38.370 --> 00:40.170
These are all training steps.

00:40.170 --> 00:46.110
Step one we need to start with you Sarraf an area where the lines are correspond to users and columns

00:46.110 --> 00:51.900
correspond to features the movies and each cell contains a rating from 1 to 5 0 if there's no rating

00:52.530 --> 00:53.580
by that user.

00:53.610 --> 01:00.730
So important to understand that every single row in your dataset is a unique user who rated those movies.

01:00.810 --> 01:05.980
And by the way these steps will be very valuable for you when you are performing them.

01:06.110 --> 01:10.740
Were you when you're doing a practical tutorials because you will be actually working with exactly this

01:10.980 --> 01:11.540
situation.

01:11.550 --> 01:15.990
You'll be creating a recommender system for movies.

01:15.990 --> 01:18.540
Step two the first user goes into the network.

01:18.570 --> 01:22.710
The input vector contains all its ratings for all the movies.

01:22.800 --> 01:27.030
For all the ratings of that user for all of the movies.

01:27.030 --> 01:33.030
Step 3 the input vector is encoded into vectors that have lower dimensions by a mapping function.

01:33.030 --> 01:39.390
Usually you'd use a sigmoid or hyperbolic tangent as we mentioned and that's the question that you would

01:39.390 --> 01:40.100
have.

01:40.410 --> 01:46.680
Then Step 4 Zed is then decoded into the output vector of the same dimension as x aiming to replicate

01:46.680 --> 01:47.310
the input vector.

01:47.310 --> 01:49.280
So this is all pretty straightforward stuff.

01:49.280 --> 01:54.620
The Reconstruction Era which is what how different is the output converts the input is computed.

01:54.630 --> 02:01.290
And the goal is to minimize your reconstruction era and then all this era is back propagated from right

02:01.290 --> 02:02.740
to left through your network.

02:02.850 --> 02:07.320
And the weights are updated accordingly depending on how much they're responsible for that.

02:07.320 --> 02:12.730
So you've got a gradient descent process happening there and the learning rate describes how much we

02:12.730 --> 02:14.030
have the weights.

02:14.160 --> 02:19.490
That's a parameter you can tune during your you will be chinning juror or you can choose.

02:19.620 --> 02:26.220
During the coding and you will see that in the practical tutorials and Step 7 repeat steps 1 2 6 and

02:26.220 --> 02:28.150
update weights after each observation.

02:28.230 --> 02:30.900
That's reinforcement learning if it's done after each of the.

02:30.900 --> 02:36.990
Or if you do it after batches they'll be Bachche learning and finally step 8 the whole training passes

02:37.290 --> 02:39.210
through the neural network.

02:39.240 --> 02:40.190
That's an epoch.

02:40.200 --> 02:41.960
And then just redo more epochs.

02:42.300 --> 02:44.170
So there we go those are steps.

02:44.190 --> 02:47.910
Let's have a look in a more visual way so step 1 and that's our input.

02:48.030 --> 02:54.600
In this case this input is those same file as we used for the bosome machine or same example in.

02:54.630 --> 03:01.800
You can have ratings from 1 to five as we mentioned in Example 1 to 5 means basically more kind of a

03:01.800 --> 03:05.040
more advanced recommender system and then a zero would mean empty.

03:05.060 --> 03:07.450
In our case we were 1 0 and empty.

03:07.500 --> 03:12.810
We can we can easily change it and we can change these one minus one and put a zero in the empty cell.

03:12.810 --> 03:14.020
So it's very easy to adjust.

03:14.040 --> 03:20.760
And also you can or you can build the recommended system with ratings with binary ratings 1 and 0 or

03:20.760 --> 03:22.910
1 minus 1 depending on how you want to structure it.

03:22.980 --> 03:26.730
It'll be a good recommender system but of course you'll be a more powerful recommender system if you

03:26.730 --> 03:29.750
build it with a ratings from 1 to 5.

03:29.820 --> 03:35.070
And in the practical tutorials good news you'll be building one with ratings from to.

03:35.200 --> 03:35.500
OK.

03:35.520 --> 03:39.690
So there we go that's our input then.

03:39.720 --> 03:48.270
Step two we take the first row we put it into our out and quarter and then step three we calculate the

03:48.270 --> 03:54.000
hidden nodes Vaya and again at the very start you'll have some randomly initialized weights.

03:54.210 --> 03:56.640
Then that process called encoding.

03:56.820 --> 04:00.560
Step 4 we're going to calculate all visible output nodes that can move.

04:00.570 --> 04:06.360
Initially it'll be some randomly random starting weights and that's a process called Decoding.

04:06.360 --> 04:06.930
And then.

04:06.930 --> 04:12.780
So basically this is a summary chillul as a summary we've just put the information at the data through

04:12.780 --> 04:14.540
our own code from left to right.

04:14.700 --> 04:20.310
And Step 5 We're going to compare the results to the actual ratings for those movies where we want to

04:20.310 --> 04:21.860
do five six.

04:21.930 --> 04:27.600
And then we'll calculate the error Step 6 and then we will propagated back through the network.

04:27.750 --> 04:30.000
We will adjust the weights accordingly.

04:30.000 --> 04:36.420
And next we will take the next row in our data set and we'll do the same thing and so on and so on and

04:36.420 --> 04:40.840
so on we'll continue through all the rows and then once we're done we move on to Step 8.

04:40.860 --> 04:44.850
That means we've finished our whole airpark and then we just repeat these epochs we continue doing that

04:45.180 --> 04:47.720
with our data set depending on how many times we want to do that.

04:47.730 --> 04:51.460
And hopefully our training converges to some sort of value.

04:51.570 --> 04:56.100
There we go that's how you train and hour and quarter are very straightforward steps.

04:56.100 --> 05:02.490
And as I mentioned at the start of this section that simply because you've already done all of the previous

05:02.490 --> 05:06.830
parts of this course all of this probably sounds very trivial to you.

05:06.930 --> 05:13.650
If you look back at how you were starting out into this courses probably would have been a bit more

05:13.710 --> 05:19.020
advanced but if this sounds trivial That's good news that just means that all of the knowledge that

05:19.020 --> 05:23.270
you've acquired throughout the course before his benefiting you now.

05:23.310 --> 05:28.710
And that's great that's why we were able to fly through this part very quickly and we can move on to

05:28.950 --> 05:30.580
some more interesting things.

05:30.660 --> 05:34.310
And by the way additional reading we've got some additional reading today.

05:34.350 --> 05:41.130
Here is a blog by Francois I shall let the creator of care as it's called building our own code is in

05:41.140 --> 05:42.260
Paris.

05:42.300 --> 05:42.930
Check it out.

05:42.930 --> 05:49.200
It's got some actual practical applications so even if you want to get some hands on experience before

05:49.200 --> 05:50.940
you start the practical chores We've had lunch.

05:50.940 --> 05:53.400
This could be a good place to do that.

05:53.430 --> 05:59.280
There's some quick exercises which you can follow and get some cool insights already and then you'll

05:59.280 --> 06:02.040
be even more prepared when you go into the practical tutorials.

06:02.190 --> 06:03.010
So check it out.

06:03.060 --> 06:06.870
It's called building up in Calder's in Cairns and that's it for today.

06:06.870 --> 06:08.240
I look forward See you next time.

06:08.250 --> 06:09.980
And until then enjoy learning.
