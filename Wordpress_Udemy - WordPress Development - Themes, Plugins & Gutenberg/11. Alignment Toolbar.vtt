WEBVTT
1
00:00:07.430 --> 00:00:13.040
In this lecture we're going to add a toolbar to the recipe block the text inside the recipe block is

2
00:00:13.040 --> 00:00:18.780
currently aligned to the left some users may want to align it to the center or to the right.

3
00:00:18.800 --> 00:00:23.300
If I were to begin typing that a new paragraph block will be added above it.

4
00:00:23.330 --> 00:00:25.150
I'll be provided a toolbar.

5
00:00:25.250 --> 00:00:32.390
I have the option to change this to a heading align the text bold the text create a link etc. WordPress

6
00:00:32.390 --> 00:00:38.480
allows us to add a toolbar to our blog that can manipulate the way a block looks and feels we even have

7
00:00:38.480 --> 00:00:41.250
the power to add in our own options to the block.

8
00:00:41.270 --> 00:00:47.510
For now I want to focus solely on adding the alignment options to our block the toolbar we're trying

9
00:00:47.510 --> 00:00:49.790
to add is called block controls.

10
00:00:49.790 --> 00:00:52.510
This is a component provided by WordPress.

11
00:00:52.610 --> 00:00:57.290
It will take care of creating the UI and correctly position the toolbar for us.

12
00:00:57.290 --> 00:00:58.510
Let's load it in.

13
00:00:58.550 --> 00:01:01.120
Back inside the index file for the block.

14
00:01:01.160 --> 00:01:03.560
I'm going to d structure two components.

15
00:01:03.680 --> 00:01:09.200
The components will be block controls and alignment toolbar from the WP editor.

16
00:01:09.230 --> 00:01:09.770
Object

17
00:01:15.620 --> 00:01:22.130
once again the block controls component we'll take care of creating the container and UI for the toolbar.

18
00:01:22.130 --> 00:01:27.650
The alignment toolbar component will take care of creating the buttons for the alignment toolbar.

19
00:01:27.680 --> 00:01:30.970
This includes the icons and functionality as well.

20
00:01:31.220 --> 00:01:37.610
Before we begin using these components we'll need to store the value for the alignment inside the attributes

21
00:01:37.640 --> 00:01:38.240
object.

22
00:01:38.240 --> 00:01:46.020
Create a new property called text alignment with a type of string.

23
00:01:46.110 --> 00:01:52.760
We are not going to specify a source or selector even though the value will be used inside an attribute.

24
00:01:52.770 --> 00:01:55.740
We're going to let WordPress keep track of the value.

25
00:01:55.770 --> 00:01:58.380
I'll explain how this will work in just a moment.

26
00:01:58.380 --> 00:02:03.480
For now let's keep moving forward now that we have an attribute to store the value.

27
00:02:03.600 --> 00:02:10.050
Let's end the component to the block inside the block before the unordered list and the block controls

28
00:02:10.050 --> 00:02:10.560
component

29
00:02:15.620 --> 00:02:19.260
anything in between these tags will be placed inside the toolbar.

30
00:02:19.370 --> 00:02:29.470
We want to place the alignment toolbar inside the toolbar so do so now this component requires two values.

31
00:02:29.480 --> 00:02:34.850
The first is the value and the second is the function to run when the alignment changes.

32
00:02:34.910 --> 00:02:38.690
I'm going to set the value to the text alignment attribute

33
00:02:43.610 --> 00:02:45.510
for the unchanged property.

34
00:02:45.560 --> 00:02:52.810
We're going to add an inline function will refer to the new value as new Val.

35
00:02:52.810 --> 00:02:59.770
Using the prompts object called these set attributes function and pass in an object set the text alignment

36
00:02:59.770 --> 00:03:03.720
property to new Val.

37
00:03:03.750 --> 00:03:07.210
The event is triggered whenever a user selects an alignment.

38
00:03:07.230 --> 00:03:08.850
We've updated the value.

39
00:03:08.970 --> 00:03:14.880
The last step to all of this is to apply the alignment to the block inside the unordered list.

40
00:03:14.880 --> 00:03:18.390
Add these style attribute.

41
00:03:18.560 --> 00:03:24.560
This will be set to an object the properties inside the object will be converted into C assess properties

42
00:03:24.560 --> 00:03:26.360
with their respective values.

43
00:03:26.360 --> 00:03:31.000
We only need to set one property and that's the text a line property.

44
00:03:31.010 --> 00:03:34.390
You'll notice that I'm writing this with camel casing react.

45
00:03:34.400 --> 00:03:38.670
We'll take the time to convert this into its original C assess property.

46
00:03:38.690 --> 00:03:44.840
This will apply to most C assess properties with multiple words for example background color is written

47
00:03:44.840 --> 00:03:45.820
like this.

48
00:03:45.830 --> 00:03:49.420
This is common practice among developers so be aware of that.

49
00:03:49.460 --> 00:03:58.160
I'm going to set the alignment property to props dot attributes dot text alignment this will also need

50
00:03:58.160 --> 00:04:00.230
to be applied to the save function.

51
00:04:00.230 --> 00:04:02.570
Copy this code and paste it in the same area

52
00:04:09.130 --> 00:04:10.110
we're finished.

53
00:04:10.120 --> 00:04:16.060
Save your changes and D into the blocks directory then run the NPM run Jeb.

54
00:04:16.060 --> 00:04:24.460
Command once the code has been compiled go to your recipe posts on the admin area you may see a message

55
00:04:24.460 --> 00:04:26.200
saying the block has changed.

56
00:04:26.200 --> 00:04:27.610
That's to be expected.

57
00:04:27.610 --> 00:04:34.710
Just add the block again if you have your block selected then you should see the block controls component

58
00:04:34.770 --> 00:04:36.090
appear above it.

59
00:04:36.090 --> 00:04:41.250
You shouldn't be able to change the alignment easily if you were to inspect the element then you should

60
00:04:41.250 --> 00:04:44.930
see the style attribute being applied to the unordered list.

61
00:04:47.220 --> 00:04:52.050
The camel casing has also been converted into the appropriate CSX property.

62
00:04:52.050 --> 00:04:57.120
If I were to change the alignment again then you should see the style update in real time.

63
00:04:57.120 --> 00:04:58.260
This is fantastic.

64
00:04:58.590 --> 00:05:01.500
Let's save the post and try viewing the post on the front end.

65
00:05:03.980 --> 00:05:06.110
The tech should be aligned accordingly.

66
00:05:06.110 --> 00:05:09.560
As you can see using Wordpress components is simple.

67
00:05:09.680 --> 00:05:15.320
The block controls component will take care of appearing when the block is selected Gutenberg will handle

68
00:05:15.320 --> 00:05:21.260
correctly placing the toolbar for you and most of the basic setup before I end this lecture.

69
00:05:21.260 --> 00:05:24.800
I want to take a moment to talk about the attribute we created.

70
00:05:24.800 --> 00:05:29.560
If you can recall we did not set a default source or selector.

71
00:05:29.600 --> 00:05:35.690
However if I were to refresh the Gutenberg editor then you should see the text still align to the center.

72
00:05:35.810 --> 00:05:39.120
The button will also be selected in previous lectures.

73
00:05:39.140 --> 00:05:45.410
We had to save the value but this is not the case for the alignment open Heidi and select the Post's

74
00:05:45.410 --> 00:05:53.370
stable search for the post where we have the alignment applied if you were to view the post content

75
00:05:53.520 --> 00:05:59.190
then you'll see that everything is saved like before but with one change inside the team.

76
00:05:59.190 --> 00:06:02.560
I'll comment you'll find an object with the attribute saved.

77
00:06:02.790 --> 00:06:08.280
WordPress will attempt to save any attributes that don't have a selector in the comments for something

78
00:06:08.340 --> 00:06:10.140
as simple as the text alignment.

79
00:06:10.200 --> 00:06:16.230
I recommend storing it in the comment if you have something that takes up multiple lines or large values

80
00:06:16.350 --> 00:06:19.780
then I recommend a selector in the end it's up to you.

81
00:06:19.890 --> 00:06:23.100
You can store the value in an email attribute if you want.

82
00:06:23.100 --> 00:06:25.980
For me I prefer to let WordPress save it.

83
00:06:26.340 --> 00:06:26.890
All right.

84
00:06:26.970 --> 00:06:29.280
That does it for the block controls component.

85
00:06:29.310 --> 00:06:32.450
We'll continue our Gutenberg journey in the next lecture.

86
00:06:32.460 --> 00:06:33.230
I'll see you there.
