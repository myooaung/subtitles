1
00:00:07,840 --> 00:00:12,650
I'm back inside the admin side of WordPress and I'm on the recipe page right now.

2
00:00:12,650 --> 00:00:18,790
There's no way for me to know how many ratings each recipe has or what the rating for each one is.

3
00:00:18,790 --> 00:00:22,750
Wouldn't it be nice if I could see all the data here in this table.

4
00:00:22,960 --> 00:00:28,060
At this point you can already guess how we would do this if you were thinking action hoax then you were

5
00:00:28,060 --> 00:00:32,400
correct along with showing the rating count and the actual rating.

6
00:00:32,410 --> 00:00:38,590
We're also going to remove the tags column as it's kind of useless information for this post to get

7
00:00:38,590 --> 00:00:39,240
started.

8
00:00:39,250 --> 00:00:45,520
We're going to look into when the WordPress admin dashboard is initialized inside the main plugin file

9
00:00:45,730 --> 00:00:52,550
at an action hook called admin in it's the name of the function will be recipe admin in it.

10
00:00:54,620 --> 00:01:01,700
This function doesn't exist so let's create it inside the includes folder create a folder named admin.

11
00:01:01,730 --> 00:01:06,210
This is where we'll store files related to the admin side exclusively.

12
00:01:06,410 --> 00:01:09,770
Then inside this folder create a file named in it.

13
00:01:09,770 --> 00:01:13,760
Dot P. HP defined the function and include it from the main plugin file

14
00:01:21,520 --> 00:01:22,710
inside this function.

15
00:01:22,720 --> 00:01:27,100
I'm going to add a new filter hook called manage post type posts.

16
00:01:27,130 --> 00:01:27,820
Columns

17
00:01:33,150 --> 00:01:37,480
this hook doesn't have to be used inside the admin init hook.

18
00:01:37,500 --> 00:01:40,660
The reason we're adding it here is to keep things organized.

19
00:01:40,950 --> 00:01:46,440
I couldn't very well put this hook inside the main plugin file but I don't want that file to be too

20
00:01:46,440 --> 00:01:48,220
cluttered with hooks.

21
00:01:48,240 --> 00:01:53,730
There's also the advantage of having all the admin hooks in one file rather than mixing them together

22
00:01:53,730 --> 00:01:55,020
with other hooks.

23
00:01:55,050 --> 00:01:59,370
I provide a link to this in the resource section to more about this hook.

24
00:01:59,430 --> 00:02:05,970
Let's take a look at the Codex page the post type in the name can actually be replaced with the name

25
00:02:05,970 --> 00:02:08,850
of the post type where the column will be updated.

26
00:02:09,090 --> 00:02:14,730
So let's go back to the filter hook and replace this word with recipe since that is the name of our

27
00:02:14,730 --> 00:02:15,290
post type.

28
00:02:17,630 --> 00:02:21,820
This filter hook will give us an array of columns already set by WordPress.

29
00:02:22,010 --> 00:02:28,170
We have the option of returning a modified version of this array or a brand new array of columns.

30
00:02:28,190 --> 00:02:34,970
Let's set this filter hooks function to r add new recipe columns.

31
00:02:35,080 --> 00:02:42,560
I'm going to create a file called columns stop BHP with the admin folder and define the function here.

32
00:02:42,580 --> 00:02:45,010
Make sure to include it from the admin in it.

33
00:02:45,010 --> 00:02:45,490
Function

34
00:02:51,850 --> 00:02:52,550
this function.

35
00:02:52,560 --> 00:02:54,660
We passed a columns array.

36
00:02:54,730 --> 00:02:56,380
We're not going to use this though.

37
00:02:56,410 --> 00:03:05,190
Instead I'm going to create an array called new columns the key of these arrays will be used to identify

38
00:03:05,220 --> 00:03:08,570
each column and the values would be the names of each column.

39
00:03:08,580 --> 00:03:12,420
This will be output ID into the header and footer of our table.

40
00:03:12,570 --> 00:03:18,040
If we take a look at the Codex page WordPress provides a list of default columns we can set.

41
00:03:18,090 --> 00:03:23,710
I'm going to use all of these except the tags and comments column.

42
00:03:23,840 --> 00:03:26,220
You should have something similar to what I have.

43
00:03:26,240 --> 00:03:33,290
You'll also notice that I'm making each column name translatable right after the categories column and

44
00:03:33,290 --> 00:03:37,710
two more columns called Count and rating when it comes to custom columns.

45
00:03:37,760 --> 00:03:39,560
You can name these whatever you want.

46
00:03:39,650 --> 00:03:41,120
I'm going to keep it simple.

47
00:03:41,180 --> 00:03:44,490
These column names will also be translatable.

48
00:03:44,570 --> 00:03:47,320
The last step is return the new columns.

49
00:03:47,390 --> 00:03:53,540
Since these are custom columns it is our responsibility to output the data for each column back inside

50
00:03:53,540 --> 00:03:55,270
the admin init function.

51
00:03:55,280 --> 00:03:58,990
We will now add an action hook called manage post type.

52
00:03:59,000 --> 00:04:00,530
Post custom column

53
00:04:08,210 --> 00:04:14,600
I provide a link in the resources section for this action hook this hook will allow us to output info

54
00:04:14,600 --> 00:04:21,110
for each column The Post type keyword should be replaced with a custom post type this hook will effect

55
00:04:21,470 --> 00:04:27,560
in our case it would be recipe the function we want to call is our manage recipe columns

56
00:04:33,510 --> 00:04:40,050
this hook will pass our function to arguments that will need I'm going to set a priority to 10 and the

57
00:04:40,050 --> 00:04:49,020
accepted arguments 2 2 I'm going to define this function inside the columns dot page we file the two

58
00:04:49,020 --> 00:04:56,400
variables that will be passed in our column and post d d column variable is equal to the key in the

59
00:04:56,400 --> 00:05:03,030
columns array and the idea is the idea of the current post I'm going to use a switch statement here

60
00:05:03,450 --> 00:05:08,670
I'm going to check the column and see if its value is equal to either count or rating

61
00:05:17,100 --> 00:05:22,590
otherwise I'm just going to break this statement don't worry about the other columns since they are

62
00:05:22,590 --> 00:05:28,890
WordPress columns WordPress will handle setting those values it's our custom columns we need to worry

63
00:05:28,890 --> 00:05:35,100
about for both of these columns I'm going to ground the recipe metadata and simply echo the corresponding

64
00:05:35,100 --> 00:05:36,300
values for each column

65
00:05:49,470 --> 00:05:54,870
something I want to highlight is that I'm checking if the key in the array is set for each of the respective

66
00:05:54,870 --> 00:05:55,890
columns.

67
00:05:55,890 --> 00:05:59,140
This is just in case the metadata isn't available.

68
00:05:59,440 --> 00:06:02,560
Refresh your table and you should now see our columns appear.

69
00:06:02,730 --> 00:06:08,340
We only have one recipe but we can already see the amount of ratings it's received and the average rating.
