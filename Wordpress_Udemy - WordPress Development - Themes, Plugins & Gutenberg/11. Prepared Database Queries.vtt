WEBVTT
1
00:00:07.480 --> 00:00:11.500
I have the filter dash content dot P HP file opened.

2
00:00:11.500 --> 00:00:16.870
If you don't remember this function will filter the recipe content and display the recipe information

3
00:00:16.900 --> 00:00:19.630
along with the rating inside the function.

4
00:00:19.630 --> 00:00:24.110
We use the global w PDB object to make a raw query.

5
00:00:24.280 --> 00:00:28.000
This query simply gets the number of ratings a recipe has.

6
00:00:28.030 --> 00:00:34.150
I'm going to add some line breaks before and after this query so that you can see it more clearly just

7
00:00:34.150 --> 00:00:35.530
like any other query.

8
00:00:35.530 --> 00:00:39.120
It's important to sanitize any data we add to it.

9
00:00:39.190 --> 00:00:43.680
We should always take the steps necessary to secure our plugins and themes.

10
00:00:43.780 --> 00:00:48.350
WordPress has a method for securing queries by providing the prepare method.

11
00:00:48.370 --> 00:00:53.000
This method works similarly to PJ PPO is prepared statements.

12
00:00:53.200 --> 00:01:00.010
They aren't hard to understand or use this method will simply sanitize a query before it's executed.

13
00:01:00.010 --> 00:01:02.280
This method requires two things.

14
00:01:02.320 --> 00:01:07.610
The query itself and the data that should be sanitize let's prepare this query.

15
00:01:07.630 --> 00:01:08.740
It's very simple.

16
00:01:08.740 --> 00:01:16.830
First we're going to wrap this query around the method from the WP DB object called prepare.

17
00:01:17.040 --> 00:01:20.970
I'm going to format this a bit by putting the query on its own line.

18
00:01:20.970 --> 00:01:23.090
This method has two parameters.

19
00:01:23.190 --> 00:01:29.040
It accepts a query as the first parameter and then the second parameter is the data to sanitize.

20
00:01:29.040 --> 00:01:35.370
If we have more than one piece of data like in our query then we can keep passing in more data.

21
00:01:35.370 --> 00:01:40.200
This function is pretty flexible and can grow to as many parameters as we need it to.

22
00:01:40.200 --> 00:01:47.400
There are two pieces of variables I want to sanitize which is the post I.D. and the IP pass these in

23
00:01:47.400 --> 00:01:48.030
line so

24
00:01:52.860 --> 00:01:54.990
this won't work just yet.

25
00:01:54.990 --> 00:01:59.100
This method has our query and the data but they're not tied together.

26
00:01:59.130 --> 00:02:01.890
How does it know where to place the sanitized data.

27
00:02:02.220 --> 00:02:06.510
Well we'll need to use the special place holders created by WordPress.

28
00:02:06.510 --> 00:02:14.300
There the usual place holders percent s percent D and percent F where percent S is for strings.

29
00:02:14.310 --> 00:02:18.960
Percent D is for integers and percent F is for floating numbers.

30
00:02:18.960 --> 00:02:25.860
Replace these values with the correct place holders the post IED should be percent D and the IP should

31
00:02:25.860 --> 00:02:26.590
be percent.

32
00:02:26.610 --> 00:02:30.520
S That's it.

33
00:02:30.530 --> 00:02:36.290
This method will take in all this information and then return a sanitized query for the actual method

34
00:02:36.320 --> 00:02:38.300
that will run this query.

35
00:02:38.300 --> 00:02:40.530
Let's try checking out a recipe now.

36
00:02:40.610 --> 00:02:42.590
Here's a recipe we made earlier.

37
00:02:42.620 --> 00:02:45.020
So far we have no errors.

38
00:02:45.020 --> 00:02:48.040
Let's try reading this recipe and refreshing the page.

39
00:02:50.380 --> 00:02:56.260
Still no errors in our rating was saved using prepared statements is one of the best ways to protect

40
00:02:56.260 --> 00:02:58.540
herself against sequel injections.

41
00:02:58.540 --> 00:03:04.720
Prepared statement should be used for sequel queries for methods like the insert or delete method.

42
00:03:04.720 --> 00:03:09.930
The WP DV object will already create a sanitized query for you.

43
00:03:09.960 --> 00:03:11.710
Here is what I want you to do now.

44
00:03:11.800 --> 00:03:16.900
I want you to go through our plugin and look for more raw queries and prepare them like we did with

45
00:03:16.900 --> 00:03:17.530
this query.
