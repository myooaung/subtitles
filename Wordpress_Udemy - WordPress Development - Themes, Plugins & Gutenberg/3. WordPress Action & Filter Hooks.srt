1
00:00:07,690 --> 00:00:14,050
Before we continue with developing plugins I want to finally talk about how Hook's actions and the filters

2
00:00:14,050 --> 00:00:14,770
work.

3
00:00:14,890 --> 00:00:21,750
This lecture will demystify the concepts behind these topics understanding hooks isn't all that easy.

4
00:00:21,760 --> 00:00:27,550
This is because the terms themselves are rather tricky to visualize and distinguish from one another.

5
00:00:27,550 --> 00:00:32,590
Once you understand how everything works then you'll be able to understand how WordPress works.

6
00:00:32,590 --> 00:00:39,120
I find that working with filters and actions is probably the most common way I interact with Wordpress.

7
00:00:39,340 --> 00:00:44,410
As time has passed by it's become one of my favorite things to do in WordPress.

8
00:00:44,410 --> 00:00:46,860
Understanding the terms is half the battle.

9
00:00:46,960 --> 00:00:52,310
The WordPress codex uses all three terms very casually and inconsistently.

10
00:00:52,390 --> 00:00:55,390
I'm going to try to clarify those uses here.

11
00:00:55,390 --> 00:01:00,790
These are what the terms really mean although you will find them use differently in many places.

12
00:01:00,790 --> 00:01:02,930
Let's start to define the terms.

13
00:01:03,190 --> 00:01:07,840
The topic that we're discussing is what WordPress calls the plugin API.

14
00:01:08,050 --> 00:01:13,990
Despite the name these concepts don't apply to plugins exclusively in previous sections.

15
00:01:13,990 --> 00:01:18,660
We used action hooks frequently so this also applies to themes.

16
00:01:18,730 --> 00:01:25,630
Sometimes you'll hear this API referred to as the hooks API hooks are the dominant concept that we need

17
00:01:25,630 --> 00:01:29,710
to understand to make WordPress actions and filters work for us.

18
00:01:29,710 --> 00:01:32,500
So what exactly is a hook a hook.

19
00:01:32,500 --> 00:01:38,230
It's a place in WordPress is code that can get functions added to it when you create a hook and WordPress

20
00:01:38,380 --> 00:01:44,500
you get yourself and other developers the opportunity to add in extra functionality at that location.

21
00:01:44,500 --> 00:01:49,960
Hooked functions are the pieces of external code that can be added into wordpress as processing at the

22
00:01:49,960 --> 00:01:52,810
locations specified by its hooks.

23
00:01:52,840 --> 00:01:57,940
In other words these are the functions that get hooked into wordpress.

24
00:01:57,940 --> 00:02:01,150
Basically you can think of hooks as events.

25
00:02:01,300 --> 00:02:06,460
These events are accessible to us and we can execute functions during those events.

26
00:02:06,460 --> 00:02:13,330
There are basically two types of hooks action hooks and filter hooks action hooks can do any type of

27
00:02:13,330 --> 00:02:14,950
custom functionality.

28
00:02:14,950 --> 00:02:20,870
This includes sending out emails updating the database or just output something onto the screen.

29
00:02:21,130 --> 00:02:27,850
Filter hooks modify existing output you're basically given data and you're expected to return that data

30
00:02:27,910 --> 00:02:30,380
or a modified version of that data.

31
00:02:30,400 --> 00:02:33,240
You can even return a brand new set of data.

32
00:02:33,460 --> 00:02:34,420
Good so far.

33
00:02:34,450 --> 00:02:36,900
Don't worry either way and let's move on.

34
00:02:36,940 --> 00:02:40,550
I'll show you some examples soon enough to explain hooks.

35
00:02:40,570 --> 00:02:43,070
We will think of WordPress as a big factory.

36
00:02:43,120 --> 00:02:48,900
The factory kicks on whenever a visitor browses to your site and manufactures the specific web page.

37
00:02:48,910 --> 00:02:55,840
They've asked for the page generated has the contents of one or more posts as well as a header footer

38
00:02:55,900 --> 00:03:03,850
sidebar and so on by the way wordpress as a factory is probably the best analogy there is for how WordPress

39
00:03:03,850 --> 00:03:05,080
works in general.

40
00:03:05,080 --> 00:03:11,680
It's almost a literal description of how WordPress actually works except with digital factory equipment

41
00:03:11,920 --> 00:03:17,740
a.k.a. BHP files and raw materials a.k.a. the database contents.

42
00:03:17,740 --> 00:03:23,980
We can think of custom code as outside contractors that help the WordPress factory do its web page assembly

43
00:03:23,980 --> 00:03:30,640
work hooks both action hooks and filter hooks are the gateway into the parts of the WordPress factory

44
00:03:30,640 --> 00:03:37,810
where these outside contractors go to do their work the core WordPress software is a rather simple factory.

45
00:03:37,840 --> 00:03:40,840
There's also a lot it can't do by default.

46
00:03:40,840 --> 00:03:47,980
Everything from display today's date at the top of every page to create e-commerce product pages complete

47
00:03:48,070 --> 00:03:51,120
with price shipping and payment information.

48
00:03:51,190 --> 00:03:57,070
WordPress can handle these special orders but to do so it needs outside contractors.

49
00:03:57,070 --> 00:04:02,660
This is where functions start P. HP other custom code and plugins come into play.

50
00:04:02,710 --> 00:04:06,240
Our contractors don't have a permanent place in the factory.

51
00:04:06,280 --> 00:04:10,750
They're stuck in the lobby until they're invited in by the factory itself.

52
00:04:10,780 --> 00:04:16,600
Hooks are how this WordPress factory invites and any contractors that may be needed.

53
00:04:16,660 --> 00:04:23,230
We can think of WordPress hooks as a bunch of actual giant factory hooks which the contractors write

54
00:04:23,230 --> 00:04:31,390
on like this image each hook is labeled with a specific name such as WP head corresponding to a part

55
00:04:31,390 --> 00:04:33,740
of the WordPress factory's process.

56
00:04:33,820 --> 00:04:41,620
In the case of WP head the process of building the pages h t email head section these hooks travel out

57
00:04:41,620 --> 00:04:46,670
to the lobby so that contractors can write them in and they do it in a specific order.

58
00:04:46,720 --> 00:04:52,920
The WP head hook travels out to the lobby and back right before the head completes.

59
00:04:53,200 --> 00:04:59,530
Likewise the WP footer hook travels to the lobby and back right before the body tag completes.

60
00:04:59,650 --> 00:05:00,700
And so on.

61
00:05:00,700 --> 00:05:07,030
The contractor is always writing his hook directly to the active to be worked on part of the factory.

62
00:05:07,030 --> 00:05:12,520
When a contractor wants to be part of a specific process he waits for that hook to show up at the entrance

63
00:05:12,550 --> 00:05:16,520
and writes that hook straight into the proper part of the factory.

64
00:05:16,570 --> 00:05:22,200
If the contractor didn't write the proper hook in he couldn't get to where he's going in the factory.

65
00:05:22,240 --> 00:05:29,300
Hooks are what invites outside code into defined areas of work presses P2P processing.

66
00:05:29,410 --> 00:05:33,280
We're halfway to understanding hooks actions and filters.

67
00:05:33,280 --> 00:05:35,570
The other part is a bit more specific.

68
00:05:35,620 --> 00:05:40,210
The factory has two kinds of hooks action hooks and filter hooks.

69
00:05:40,210 --> 00:05:46,270
The action hooks tend to get dangled that milestones like you're almost done building the pages head

70
00:05:46,270 --> 00:05:50,410
section or you're almost done building the page's body section.

71
00:05:50,500 --> 00:05:56,510
When contractors Ryan action hooks into the factory they tend to do just about anything they want at

72
00:05:56,560 --> 00:06:02,680
a bunch of stuff to the page or do completely other things like log and error or even send an email.

73
00:06:02,680 --> 00:06:05,410
The filter hooks work a bit differently.

74
00:06:05,410 --> 00:06:10,570
Contractors who write in on action hooks can do whatever they want and have no responsibility to anyone

75
00:06:11,050 --> 00:06:16,900
but contractors who write in on filter hooks insert themselves in the normal workers process.

76
00:06:16,900 --> 00:06:22,750
They're given something to handle say a block of text and have to give that same block of text slightly

77
00:06:22,750 --> 00:06:28,000
modified back to the regular worker via a p p return statement.

78
00:06:28,000 --> 00:06:32,470
A contractor using a filter hook generally doesn't just do whatever he wants.

79
00:06:32,500 --> 00:06:36,760
He works with a piece of code that he's given in his section of the factory.

80
00:06:36,760 --> 00:06:42,220
This section works on the post title the sections manager might say do whatever you want to the post

81
00:06:42,220 --> 00:06:47,980
title but if you don't hand me back the post title after you've made your changes then this whole process

82
00:06:47,980 --> 00:06:49,810
won't work properly.

83
00:06:49,810 --> 00:06:51,680
I hope I'm making sense so far.

84
00:06:51,700 --> 00:06:56,570
Now we're going to get a bit more technical so you can start writing these things.

85
00:06:56,590 --> 00:07:03,430
The contractors are specialized BHP functions because these functions make it into wordpress by attaching

86
00:07:03,430 --> 00:07:10,110
themselves to WordPress hooks that is being hook dinner from outside the formal term for them is hooked.

87
00:07:10,120 --> 00:07:17,300
Functions enough talk let's actually write some code to take a look at what all this looks like.

88
00:07:17,400 --> 00:07:26,650
I'm going to create a brand new plugin called hooks dash example dot P HP inside the plugins folder.

89
00:07:26,780 --> 00:07:32,350
I'm not going to create a folder for this plugin as everything will be contained in this one file.

90
00:07:32,430 --> 00:07:37,060
Also since this is just an example I'm not too concerned on organization.

91
00:07:37,190 --> 00:07:39,710
I'm going to set the plugin name to hooks.

92
00:07:39,710 --> 00:07:44,710
Example activate this plugin and let's get started

93
00:07:50,090 --> 00:07:54,380
I'm going to use the function add filter.

94
00:07:54,560 --> 00:07:57,070
This is how filter hooks are started.

95
00:07:57,170 --> 00:08:01,920
You tell WordPress that you would like to filter particular data by calling this function.

96
00:08:01,940 --> 00:08:08,300
This function has the same parameters as the ad action hook the hook we want to use is called the title

97
00:08:10,550 --> 00:08:16,970
this hook runs when a post is being displayed and its title is being output it or returned the function

98
00:08:16,970 --> 00:08:25,730
I want to run is called J U title let's define this function now filter hooks will always have at least

99
00:08:25,730 --> 00:08:30,240
one argument in this case the title is passed on to us.

100
00:08:30,320 --> 00:08:32,020
This is the original title.

101
00:08:32,180 --> 00:08:37,220
WordPress expects us to return this title or a modified version of this title.

102
00:08:37,790 --> 00:08:41,770
Alternatively we can give a completely different title.

103
00:08:41,870 --> 00:08:49,640
I'm going to return the text hooked followed by the original title save your work and visit the home

104
00:08:49,640 --> 00:08:51,980
page you'll notice all our posts.

105
00:08:51,980 --> 00:08:55,530
Now how the text hooked before the title.

106
00:08:55,610 --> 00:08:57,240
Let's take a look at action hooks.

107
00:08:57,250 --> 00:09:00,620
Now we've already done this a bunch of times in our theme.

108
00:09:00,620 --> 00:09:02,460
But let's take a closer look.

109
00:09:02,480 --> 00:09:04,850
I'm going to create an action hook.

110
00:09:04,850 --> 00:09:13,700
I want to hook into the WP footer hook the function I want to call is J you footer shout out to define

111
00:09:13,700 --> 00:09:16,700
this function underneath and echo out hooks.

112
00:09:16,760 --> 00:09:18,260
Example plug in was here

113
00:09:23,250 --> 00:09:28,420
save your work and refresh the page Scroll down to the very bottom and you'll see the message output

114
00:09:28,420 --> 00:09:29,200
it.

115
00:09:29,430 --> 00:09:34,620
One thing you'll notice about action functions is that they do not need to return anything they don't

116
00:09:34,620 --> 00:09:40,110
even need to echo out anything you can do whatever you want from querying the database to sending out

117
00:09:40,110 --> 00:09:46,710
an email the code in here can work behind the scenes filter hooks on the other hand must filter data

118
00:09:46,770 --> 00:09:47,540
or modify it.

119
00:09:48,120 --> 00:09:52,180
If you don't return anything then you can end up breaking WordPress.

120
00:09:52,200 --> 00:09:53,420
Think of it like this.

121
00:09:53,520 --> 00:09:59,250
If you need to modify text or data before it's used then you should use filter hooks if you need to

122
00:09:59,250 --> 00:10:02,880
perform custom actions then use action hooks.

123
00:10:03,030 --> 00:10:09,480
And the next lecture will take a look at how to create our own custom hooks and prioritizing hooks.

124
00:10:09,480 --> 00:10:12,810
By doing this we'll see how hooks work more in-depth.
