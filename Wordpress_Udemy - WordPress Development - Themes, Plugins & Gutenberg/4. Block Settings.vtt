WEBVTT
1
00:00:07.560 --> 00:00:13.050
The next step to all of this is to create the block settings all settings are set inside the object

2
00:00:13.050 --> 00:00:17.220
we pass in as the second argument of the register block type function.

3
00:00:17.220 --> 00:00:22.500
You don't have to name these in any order but we'll start simple and work our way down to the more complex

4
00:00:22.500 --> 00:00:23.410
settings.

5
00:00:23.580 --> 00:00:27.380
The first setting is the title setting before we set this.

6
00:00:27.390 --> 00:00:30.110
Let's check out where this is used in the editor.

7
00:00:30.150 --> 00:00:33.590
Go to your admin dashboard and create a new recipe post.

8
00:00:33.810 --> 00:00:38.240
If we were to view the list of blocks available you'll see that the title appears below.

9
00:00:38.250 --> 00:00:44.670
Each icon something important I want to highlight is that each title is only one or two words you want

10
00:00:44.670 --> 00:00:47.390
to keep your titles short and concise.

11
00:00:47.460 --> 00:00:52.320
If you feel like your title should have a longer name then I still recommend keeping it short.

12
00:00:52.320 --> 00:00:57.090
There is a way to make it easier to search for your block even if there are certain keywords that you

13
00:00:57.090 --> 00:00:58.940
want to include in your title.

14
00:00:58.950 --> 00:01:01.450
I'll talk about that in just a moment.

15
00:01:01.470 --> 00:01:05.400
Let's add the paragraph block the block will appear below.

16
00:01:05.490 --> 00:01:10.120
If you select it you'll see that it appears on the sidebar with a description.

17
00:01:10.260 --> 00:01:15.870
Now that we understand how the title is used in Gutenberg let's set it back inside the editor.

18
00:01:15.900 --> 00:01:20.600
I'm going to set the title to recipe.

19
00:01:20.740 --> 00:01:29.430
I'm going to wrap this with the WP dot I 18 n dot underscore underscore function I'm introducing a new

20
00:01:29.430 --> 00:01:33.740
object here called I 18 n which is short for internationalization.

21
00:01:33.960 --> 00:01:39.840
WordPress provides a way to translate strings with JavaScript all translation related functions are

22
00:01:39.840 --> 00:01:41.610
stored under this object.

23
00:01:41.610 --> 00:01:47.790
The double underscore function is similar to its P P counterpart the first parameter is the string to

24
00:01:47.790 --> 00:01:56.650
translate and the second is the text domain set the text domain to recipe before we move any further.

25
00:01:56.680 --> 00:01:59.610
The way we're using these functions can be simplified.

26
00:01:59.660 --> 00:02:03.090
We're constantly accessing the WP object.

27
00:02:03.190 --> 00:02:07.000
Wouldn't it be nice if we could just type the functions without typing all this out.

28
00:02:07.570 --> 00:02:11.760
Well that's possible with these structuring at the top of the file.

29
00:02:11.770 --> 00:02:18.940
I'm going to create a constant that D structures the WP dot blocks object and grabs only the registered

30
00:02:18.940 --> 00:02:19.510
block type.

31
00:02:19.510 --> 00:02:19.990
Function

32
00:02:24.820 --> 00:02:27.360
I'm going to do the same for the double underscore.

33
00:02:27.360 --> 00:02:27.820
Function

34
00:02:31.430 --> 00:02:38.880
now we can call these functions as is remove this stuff before these functions like so.

35
00:02:39.030 --> 00:02:41.790
This makes our code look cleaner and readable.

36
00:02:41.790 --> 00:02:47.590
Let's keep moving forward the next setting is the description.

37
00:02:47.590 --> 00:02:49.610
This will also be translatable.

38
00:02:49.630 --> 00:02:53.010
Set this to provides a short summary of a recipe

39
00:02:57.420 --> 00:03:03.770
the net setting is category WordPress comes with a few inbuilt categories.

40
00:03:03.790 --> 00:03:08.300
Let's go back to the visual editor and see what they are to see the categories.

41
00:03:08.350 --> 00:03:10.840
You'll have to select the blocks tab.

42
00:03:10.840 --> 00:03:14.370
We have a category for generic or common blocks.

43
00:03:14.410 --> 00:03:19.300
We have another category for formatting and layout which are more design oriented.

44
00:03:19.300 --> 00:03:25.130
We also have widgets for blocks that require assistance from the server to display the content.

45
00:03:25.150 --> 00:03:30.340
There are quite a few blocks here so being able to categorize them will help the user navigate their

46
00:03:30.340 --> 00:03:31.680
way around.

47
00:03:31.720 --> 00:03:33.600
Let's switch back to the editor.

48
00:03:33.670 --> 00:03:35.700
I'm going to add a comment above.

49
00:03:35.710 --> 00:03:37.990
Here are the following categories.

50
00:03:37.990 --> 00:03:45.400
Comment formatting layouts widgets embed for our recipe widget.

51
00:03:45.440 --> 00:03:55.790
We'll be using the category comment the next setting we can set is the icon the icon setting can take

52
00:03:55.790 --> 00:04:01.970
in various values in the resource section of this lecture I provide a link to an icon set called Dash

53
00:04:01.970 --> 00:04:02.950
icons.

54
00:04:02.960 --> 00:04:09.870
Here is what WordPress says about this set dash icons is the official icon fond of the WordPress admin.

55
00:04:09.890 --> 00:04:15.260
As of three point eight you're free to use these icons in your own plugins and themes.

56
00:04:15.260 --> 00:04:18.460
If you scroll down you'll find all the icons available.

57
00:04:18.590 --> 00:04:23.200
You can select any of these and WordPress will provide the full name right here.

58
00:04:23.210 --> 00:04:29.140
You only need to use the keyword after the phrase dash icons dash by default.

59
00:04:29.150 --> 00:04:31.880
WordPress will add this beginning phrase for you.

60
00:04:31.880 --> 00:04:35.750
I'm going to select a random dash icon and copy the name.

61
00:04:35.750 --> 00:04:39.640
Then I'm going to set this as the value for the icon setting.

62
00:04:41.910 --> 00:04:43.830
This is one way of using the setting.

63
00:04:43.830 --> 00:04:49.710
However if you were to switch to the Gutenberg editor then you'll see that WordPress uses dash icons

64
00:04:49.710 --> 00:04:51.450
for their own blocks already.

65
00:04:51.480 --> 00:04:57.380
You're free to reuse a dash icon but you may want to go the other route which is your own custom icon.

66
00:04:57.450 --> 00:05:08.020
WordPress supports SPG icons SPG stands for scalable vector graphics SPG is a type of image just like

67
00:05:08.020 --> 00:05:10.220
PMG or jpeg images.

68
00:05:10.240 --> 00:05:15.300
However unlike other image types SPG is created using code.

69
00:05:15.310 --> 00:05:18.540
There are a lot of benefits to using SPG images.

70
00:05:18.640 --> 00:05:24.750
For one they're scalable you can increase or decrease the size and you will never lose quality.

71
00:05:24.790 --> 00:05:30.770
I will say though the more complex your image is the more resources that image will use.

72
00:05:30.790 --> 00:05:37.250
This makes it perfect for logos icon sets and cartoon character designs since it's made with code.

73
00:05:37.270 --> 00:05:46.420
You also have the ability to adjust the image to your needs creating SPG images with code is not ideal.

74
00:05:46.450 --> 00:05:51.600
I would recommend downloading a program like illustrator to help you generate SPG code.

75
00:05:51.700 --> 00:05:57.440
I provide an alternative solution for getting icons but just keep following along with me.

76
00:05:57.520 --> 00:06:03.730
I have an icon already created this cute little character is called wop doo wop who is the official

77
00:06:03.730 --> 00:06:07.740
mascot for wordpress in the resource section of this lecture.

78
00:06:07.750 --> 00:06:09.660
I provide this file for you.

79
00:06:09.700 --> 00:06:14.140
I've already taken the time to convert this into an SPG image.

80
00:06:14.140 --> 00:06:21.040
Once you have it downloaded create a folder inside the app directory called icons and place it here.

81
00:06:25.890 --> 00:06:32.420
Then open the SPG file inside your editor as you can see SPG is all code.

82
00:06:32.610 --> 00:06:36.170
You can make changes here and they'll be reflected on the image.

83
00:06:36.180 --> 00:06:41.550
However there is a lot of code and it can be really confusing to understand what does what.

84
00:06:41.760 --> 00:06:47.430
I always recommend using a program like illustrator to make changes and then export the final result.

85
00:06:48.240 --> 00:06:50.710
I want you to copy the SPG code.

86
00:06:50.820 --> 00:06:53.140
We're going to paste this in as the value.

87
00:06:53.250 --> 00:06:54.510
There is one problem though.

88
00:06:54.780 --> 00:07:01.770
We want to paste this in as Java sex code but we're not completely sure if it's GSM compatible in the

89
00:07:01.770 --> 00:07:03.660
resource section of this lecture.

90
00:07:03.690 --> 00:07:10.290
I provide a link to an SPG to JSA X converter just paste your SPG code on the left and it shouldn't

91
00:07:10.290 --> 00:07:16.110
be converted into G sex compatible code on the right cock with the j sex version and then paste it in

92
00:07:16.140 --> 00:07:17.940
as the value for the icon setting

93
00:07:22.560 --> 00:07:24.390
this should work without a hitch.

94
00:07:24.390 --> 00:07:25.880
Now we have a new problem.

95
00:07:25.980 --> 00:07:29.330
This is making our code look really stuffy and unreadable.

96
00:07:29.340 --> 00:07:32.720
It would be better if we could put this code into its own file.

97
00:07:32.730 --> 00:07:35.520
We can do just that by using modules.

98
00:07:35.520 --> 00:07:45.140
I'm going to undo this paste inside the icons folder create a file named index dot J.S. any icons for

99
00:07:45.140 --> 00:07:47.060
our blocks will be placed here.

100
00:07:47.060 --> 00:07:55.320
I'm going to create a constant named block icons that will be sent to an empty object then I'm going

101
00:07:55.320 --> 00:07:59.340
to create a new property called WAP who instead it to the SPG image

102
00:08:04.840 --> 00:08:10.180
there's a possibility that the JSF X converter may have removed two important attributes called width

103
00:08:10.270 --> 00:08:11.150
and height.

104
00:08:11.260 --> 00:08:20.930
Apply this to the SPG element like so the recommended signs for an SPG image is 20 by 20 to finish things

105
00:08:20.930 --> 00:08:21.370
off.

106
00:08:21.380 --> 00:08:25.190
I'm going to export the block icons as the default

107
00:08:28.810 --> 00:08:31.160
whenever you want to create new icons.

108
00:08:31.180 --> 00:08:34.450
You can just add onto the block icons variable.

109
00:08:34.450 --> 00:08:41.200
Now that we're exporting the icons let's import the icon set which is really just one icon back inside

110
00:08:41.200 --> 00:08:42.240
the recipe block.

111
00:08:42.250 --> 00:08:46.480
I'm going to import the icons file as block icons

112
00:08:50.610 --> 00:08:52.950
the path to the file must be relative.

113
00:08:53.040 --> 00:08:58.870
So you'll need to input dot dot slash icon slash index as I'm doing here.

114
00:08:58.920 --> 00:09:04.590
We could have just put the file in the same directory but I prefer to keep my icons in their own directory

115
00:09:04.620 --> 00:09:07.370
since icons can be used in multiple blocks.

116
00:09:07.380 --> 00:09:09.270
It's up to you in the end.

117
00:09:09.270 --> 00:09:14.190
The last stamp is to just set the icon setting to block icon stopwatch.

118
00:09:16.360 --> 00:09:22.090
Before I move on to the next setting I want to show you some resources for grabbing icons in the resource

119
00:09:22.090 --> 00:09:23.520
section of this lecture.

120
00:09:23.590 --> 00:09:29.890
I provide a link to a site called Flat icon flat icon provides over seventy thousand icons.

121
00:09:29.890 --> 00:09:33.160
They're all free but your acquired two mentioned them in your project.

122
00:09:33.160 --> 00:09:36.520
If you use them they also provide premium icons.

123
00:09:36.520 --> 00:09:40.810
If that's what you're looking for all icons are provided in this Fiji code.

124
00:09:40.960 --> 00:09:43.270
You won't have to make many changes.

125
00:09:43.270 --> 00:09:47.070
Alternatively you can check out the official site for WAP who.

126
00:09:47.110 --> 00:09:51.950
Here you'll find various versions of WAP who and download the SPG code for him.

127
00:09:52.030 --> 00:09:52.690
All right.

128
00:09:52.690 --> 00:09:56.320
That should set the icon the next setting is keywords.

129
00:09:56.320 --> 00:10:01.270
This setting is optional but it will allow users to find your block by using keywords.

130
00:10:01.300 --> 00:10:05.040
This way you don't have to stuff your title with a lot of keywords.

131
00:10:05.080 --> 00:10:11.380
The value for this should be an array of keywords the keywords our input will be food ingredients meal

132
00:10:11.380 --> 00:10:11.680
type

133
00:10:17.820 --> 00:10:20.290
I've taken the time to translate them as well.

134
00:10:20.340 --> 00:10:24.480
Something I want to know is that you're limited by the number of keywords you can input.

135
00:10:24.540 --> 00:10:27.690
WordPress will only allow a limit of three keywords.

136
00:10:27.690 --> 00:10:31.860
However you can bypass this by making one keyword really long.

137
00:10:31.860 --> 00:10:33.450
This isn't strictly enforced.

138
00:10:33.450 --> 00:10:35.830
So I would recommend you don't abuse this.

139
00:10:35.910 --> 00:10:41.640
It would just be a bad user experience if a user types a word that isn't related to your block then

140
00:10:41.640 --> 00:10:46.240
it would force them to have to scroll through other blocks in order to find what they're looking for.

141
00:10:46.410 --> 00:10:48.030
You want to keep it relevant.

142
00:10:48.030 --> 00:10:56.410
All right let's move forward the next setting is supports the supports setting works similar to the

143
00:10:56.410 --> 00:11:00.970
ad theme support function except it's specific to the editor itself.

144
00:11:00.970 --> 00:11:06.880
Gutenberg will add features to your block that you have the ability to enable or disable in the resource

145
00:11:06.880 --> 00:11:08.320
section of this lecture.

146
00:11:08.320 --> 00:11:12.010
I provide a link to the block API handbook page.

147
00:11:12.010 --> 00:11:17.000
If you scroll down you'll find information on how to use the supports setting.

148
00:11:17.020 --> 00:11:19.080
Let's go through some of them quickly.

149
00:11:19.090 --> 00:11:24.680
The anchor feature will allow users to input links in your block and Gutenberg will convert them into

150
00:11:24.700 --> 00:11:31.930
HCM l links the custom class name setting will allow users to attach custom CSF classes to your block

151
00:11:31.930 --> 00:11:33.370
for whatever reason.

152
00:11:33.370 --> 00:11:40.190
Lastly there's the h t l feature which will allow users to edit the H team l generated by your block.

153
00:11:40.270 --> 00:11:44.940
You may want to disable this feature if your block generates complex h l.

154
00:11:45.070 --> 00:11:48.000
Let's use this back inside the editor.

155
00:11:48.010 --> 00:11:56.580
I'm going to set the H team l property to False the h t email will be creating won't be that complex

156
00:11:56.700 --> 00:12:02.550
but it will require to be structured in a certain way which is a valid reason to turn off H GM out the

157
00:12:02.550 --> 00:12:08.760
next setting is save the value for this will be an arrow function.

158
00:12:08.760 --> 00:12:11.850
The function must return J a sex code.

159
00:12:11.850 --> 00:12:14.900
I'm going to return a paragraph tag with the text.

160
00:12:14.910 --> 00:12:15.660
Hello world

161
00:12:21.490 --> 00:12:25.610
the safe setting is what gets rendered on the editor and on the page.

162
00:12:25.750 --> 00:12:26.710
We're finished.

163
00:12:26.710 --> 00:12:31.320
There are more settings than this but these are the minimum requirements for a block.

164
00:12:31.330 --> 00:12:34.370
Obviously this won't do much but it's a start.

165
00:12:34.420 --> 00:12:36.790
Save your changes and open the command line.

166
00:12:36.940 --> 00:12:46.850
Make sure to see deep into the blocks directory then run the command NPM run Dev.

167
00:12:46.950 --> 00:12:49.550
Lastly refresh the Gutenberg editor.

168
00:12:49.650 --> 00:12:53.870
I would recommend opening your developer tools and checking for any errors.

169
00:12:54.060 --> 00:12:59.250
Go up to the top left corner and add a block if you are to view the common category.

170
00:12:59.250 --> 00:13:01.970
Then you should find the block with the warp to icon.

171
00:13:02.100 --> 00:13:02.880
Perfect.

172
00:13:02.880 --> 00:13:06.180
This is exactly what we wanted before I had this block.

173
00:13:06.180 --> 00:13:09.510
Let's test to see if the keywords worked.

174
00:13:09.510 --> 00:13:14.020
I'm going to type in food and that should make our recipe block appear.

175
00:13:14.040 --> 00:13:20.490
We also had a keyword called meal type but let's just type and type as you can see the recipe block

176
00:13:20.490 --> 00:13:21.090
appears.

177
00:13:21.090 --> 00:13:26.880
Even though we didn't type in the full keyword once again it's fine to have multiple words in a keyword

178
00:13:27.030 --> 00:13:31.630
but you don't want to stuff it as that would provide a terrible user experience.

179
00:13:31.650 --> 00:13:37.020
All right let's add this block it should appear inside the content with the block selected.

180
00:13:37.080 --> 00:13:39.570
You should see the settings up here for the block.

181
00:13:39.570 --> 00:13:42.660
We see the icon title and description.

182
00:13:42.780 --> 00:13:49.680
You're also provide a custom field for any custom see asset classes by default Gutenberg will enable

183
00:13:49.710 --> 00:13:53.720
the custom class name feature for you if you want to turn this off.

184
00:13:53.760 --> 00:13:57.950
Then add this to your supports object and set it to false.

185
00:13:57.990 --> 00:14:00.770
I'm perfectly fine with it so I'll leave it as is.

186
00:14:00.780 --> 00:14:08.570
Congrats you successfully created your first block we've covered the first four steps in the process.

187
00:14:08.640 --> 00:14:14.490
We prepare the environment and cue the files registered the block and created the block settings.

188
00:14:14.490 --> 00:14:19.900
We even rendered the block with that being said the block we created doesn't do much.

189
00:14:19.920 --> 00:14:23.310
It's just a plain and simple block in the next few lectures.

190
00:14:23.370 --> 00:14:27.540
We're going to make this more dynamic and provide a UI to edit the block.
