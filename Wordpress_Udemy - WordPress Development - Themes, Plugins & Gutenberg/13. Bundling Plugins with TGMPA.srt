1
00:00:07,230 --> 00:00:10,940
Throughout this course we've been bundling various plugins with our theme.

2
00:00:10,980 --> 00:00:16,710
We even have a custom plugin developed forcing the user to manually download each plugin would be a

3
00:00:16,710 --> 00:00:17,450
pain.

4
00:00:17,610 --> 00:00:21,630
It would be nice if the user could download all the plugins at once.

5
00:00:21,630 --> 00:00:26,550
We could just download it and then included with P. HP but this would be inefficient.

6
00:00:26,550 --> 00:00:31,370
We would have to manually update each plugin every time one of them gets updated.

7
00:00:31,410 --> 00:00:33,790
It would also bloat our plugin heavily.

8
00:00:33,810 --> 00:00:37,820
Can you imagine having to manage your plugin along with 10 other plugins.

9
00:00:37,860 --> 00:00:39,750
It would be disastrous.

10
00:00:39,810 --> 00:00:44,820
The more efficient solution would be to notify the user of the required plugins and then help them install

11
00:00:44,820 --> 00:00:48,960
those plugins with a simple UI that would take a lot of code to write.

12
00:00:49,470 --> 00:00:55,190
Luckily there's a solution that helps with bundling plugins and making the process so much smoother.

13
00:00:55,360 --> 00:01:00,420
That solution is called Ti GM plug in activation in the resource section.

14
00:01:00,420 --> 00:01:02,700
I provide a link to this class.

15
00:01:02,730 --> 00:01:07,200
This class handles a lot of the work for us and it does exactly what we need.

16
00:01:07,280 --> 00:01:10,480
It will check the user's WordPress site and their plugins.

17
00:01:10,540 --> 00:01:13,440
It'll check if the site contains the plugins needed.

18
00:01:13,590 --> 00:01:18,720
If they don't have those plugins then it'll add a warning notice and instruct the user to install those

19
00:01:18,720 --> 00:01:19,710
plugins.

20
00:01:19,740 --> 00:01:23,770
It will also provide a UI for installing those plugins.

21
00:01:23,820 --> 00:01:29,970
It's a very lightweight class it's just one file so you don't have to worry about your theme being bloated.

22
00:01:29,970 --> 00:01:31,170
Let's get started.

23
00:01:31,170 --> 00:01:33,660
First we need to download this file.

24
00:01:33,660 --> 00:01:35,580
Go to the download section.

25
00:01:35,580 --> 00:01:41,160
You're allowed to download this plugin without any modifications but there's this handy little generator

26
00:01:41,160 --> 00:01:45,090
that takes care of modifying the plugin to suit our needs.

27
00:01:45,090 --> 00:01:50,160
I'm going to set this to work with our theme and for the fields I'm going to input our theme settings

28
00:01:50,160 --> 00:01:55,150
like so feel free to follow along.

29
00:01:55,340 --> 00:01:57,920
After setting up this field click generate.

30
00:01:57,920 --> 00:01:59,810
You should receive a zip file.

31
00:02:00,050 --> 00:02:05,700
There are a lot of files inside this zip file but the only file we care about is the class.

32
00:02:05,750 --> 00:02:11,450
Dash t GM dash plug in dash activation dot P HP file.

33
00:02:11,450 --> 00:02:15,780
Let's open the Udemy theme folder and navigate to the includes folder.

34
00:02:15,950 --> 00:02:20,030
Create a new folder called lives and drop this file into this folder

35
00:02:27,180 --> 00:02:31,170
open your code editor and required this file from within the function's file.

36
00:02:39,590 --> 00:02:45,260
We use the required ones function instead of the include function because this is what the developers

37
00:02:45,260 --> 00:02:48,360
recommend so will heed their advice.

38
00:02:48,380 --> 00:02:51,960
Keep in mind that this class can also be used in plugins.

39
00:02:52,100 --> 00:02:58,100
This can possibly cause errors as we may get errors related to redefining an existing class.

40
00:02:58,100 --> 00:03:03,570
Luckily we don't have to do anything because the developers have taken care of this for us.

41
00:03:03,590 --> 00:03:08,580
If you were to open this class you'll find the classes wrapped inside this conditional statement.

42
00:03:08,660 --> 00:03:12,010
This statement will check if this class has already been defined.

43
00:03:12,170 --> 00:03:14,510
If it has then it won't be redefined.

44
00:03:14,660 --> 00:03:15,830
Like you said before.

45
00:03:15,830 --> 00:03:19,730
This is a great piece of code to use in your theme or plugin.

46
00:03:19,760 --> 00:03:24,060
All right now we can begin using this class inside the zip file.

47
00:03:24,080 --> 00:03:30,410
There is another file called example dot p p that provides a very detailed example on how to use this

48
00:03:30,410 --> 00:03:31,360
class.

49
00:03:31,430 --> 00:03:35,910
It's neatly compensated and all examples are clear after this course.

50
00:03:35,930 --> 00:03:40,640
I highly recommend you take the time to look over this example file so that you can get the most out

51
00:03:40,640 --> 00:03:41,670
of it.

52
00:03:41,750 --> 00:03:48,770
The first step we need to take is to use an action hook called T GMP a register the function to call

53
00:03:48,860 --> 00:03:51,530
is j you register required plugins

54
00:03:56,660 --> 00:04:02,810
create a file inside the includes folder called register dash plugins dot P HP and define the function

55
00:04:02,810 --> 00:04:03,140
here

56
00:04:07,890 --> 00:04:10,050
include this file from the function's file

57
00:04:13,810 --> 00:04:16,990
where first going to create an array called plugins.

58
00:04:16,990 --> 00:04:23,310
This will be an array of plugins our theme requires each plugin we want to require will also be an array.

59
00:04:23,350 --> 00:04:28,030
First we need to determine which plugins we want to come bundled with our theme.

60
00:04:28,030 --> 00:04:30,290
Go to the plugins admin page.

61
00:04:30,340 --> 00:04:35,950
We have some plugins here that are only for development purposes so we don't want to bundle those.

62
00:04:36,100 --> 00:04:41,720
I'm going to deactivate some and we'll go over the ones we do want to bundle.

63
00:04:41,820 --> 00:04:44,740
All right so I just deactivated some plugins.

64
00:04:44,740 --> 00:04:51,220
Here are the plugins I want to come bundled with our theme add since integration WP quads buddy press

65
00:04:51,400 --> 00:04:58,510
recipe regenerate thumbnails Woo commerce WordPress popular posts and WP subtitle.

66
00:04:58,510 --> 00:05:03,000
Let's start with the WP quads plugin to add a plug into the array.

67
00:05:03,010 --> 00:05:04,900
You just add another array.

68
00:05:05,140 --> 00:05:11,920
The array must have certain keys so t GM knows which plug in to grab from the WordPress plugin repository.

69
00:05:11,920 --> 00:05:14,540
The first key is the name of this plugin.

70
00:05:14,680 --> 00:05:19,540
We can grab this from the plugin page which is Ad Sense plug in WP quads

71
00:05:23,820 --> 00:05:26,280
the next key to set is the slug.

72
00:05:26,280 --> 00:05:30,510
This wouldn't be the plugins unique to URL from the WordPress repository.

73
00:05:30,510 --> 00:05:33,510
You can grab this from the euro of the plugin page.

74
00:05:33,510 --> 00:05:41,950
You don't need the whole your alt Justice bit that says quick dash adds since dash reloaded.

75
00:05:41,960 --> 00:05:44,840
Lastly we can set the required key.

76
00:05:44,900 --> 00:05:46,520
We have two options here.

77
00:05:46,550 --> 00:05:51,770
If we set this to true then this class will tell the user of this plugin is required for the theme to

78
00:05:51,770 --> 00:05:52,470
work.

79
00:05:52,490 --> 00:05:56,390
If false then WordPress will recommend this plugin instead.

80
00:05:56,420 --> 00:05:59,510
It's up to you whether a plugin is required or recommended.

81
00:05:59,900 --> 00:06:07,740
I'm going to set this to false I'm going to posit a video and do this for the other plugins except for

82
00:06:07,740 --> 00:06:15,500
the custom recipe plugins as those require different settings.

83
00:06:15,530 --> 00:06:15,920
All right.

84
00:06:16,160 --> 00:06:17,680
So I added the plugins.

85
00:06:17,840 --> 00:06:23,990
All I did was I went to each plugin repository page and grabbed the title and your URL from that page.

86
00:06:23,990 --> 00:06:30,270
The last plugin we need to include is the custom plugin we developed this plugin is not available anywhere.

87
00:06:30,290 --> 00:06:32,130
There are two solutions here.

88
00:06:32,180 --> 00:06:37,790
We can upload our plug into the repository but that takes a long time and I just want this plugin to

89
00:06:37,790 --> 00:06:40,110
be exclusive to this theme.

90
00:06:40,130 --> 00:06:46,420
Luckily te GM is also willing to look for plugins in other locations like inside your own theme.

91
00:06:46,430 --> 00:06:51,230
Here's what I want you to do zip up the recipe plugin and cut the zip file

92
00:06:59,670 --> 00:07:10,290
next open the Udemy theme folder create a folder called a plugins and paste it inside here.

93
00:07:10,300 --> 00:07:13,550
Now we just have to let te GM know about this plugin.

94
00:07:13,630 --> 00:07:16,810
Add another array and set the name to recipe

95
00:07:19,590 --> 00:07:23,760
the slug should be set to the name of the plugin folder which is recipe.

96
00:07:26,950 --> 00:07:29,670
The next key is a must which is source.

97
00:07:29,680 --> 00:07:33,750
This path can be a system path or an H GDP you are out.

98
00:07:33,910 --> 00:07:39,460
I'm going to use the function get template directory and then append the path to the recipe plugins

99
00:07:39,490 --> 00:07:42,280
zip file.

100
00:07:42,290 --> 00:07:46,000
Lastly I'm going to set the required key to true.

101
00:07:46,190 --> 00:07:51,720
Next we need to create an array called config.

102
00:07:51,740 --> 00:07:54,240
This will contain the settings for the class.

103
00:07:54,260 --> 00:08:00,230
There are a lot of settings we can set but the following are the only ones we care about I.D..

104
00:08:00,260 --> 00:08:01,850
This is a unique idea.

105
00:08:01,850 --> 00:08:05,270
Keep in mind that we can use this class multiple times.

106
00:08:05,270 --> 00:08:09,490
We want to make sure that these plugins and settings are related to our theme only.

107
00:08:09,680 --> 00:08:11,660
I'm going to set this to you to me.

108
00:08:14,050 --> 00:08:14,800
Menu.

109
00:08:14,890 --> 00:08:18,820
This is the menu slug that WordPress will use for displaying the UI.

110
00:08:19,000 --> 00:08:23,320
The recommended path is to GMP a dash install dash plugins

111
00:08:25,830 --> 00:08:30,140
parents slug this will be the page to use for displaying the UI.

112
00:08:30,360 --> 00:08:34,170
Once again it's recommended we use the theme stop BHP file

113
00:08:36,790 --> 00:08:43,420
capability who can install and activate the plugins we'll be using the edit theme options capability

114
00:08:46,350 --> 00:08:51,930
has notices a boolean value which will determine whether or not the admin will be notified about the

115
00:08:51,930 --> 00:08:53,340
required plugins.

116
00:08:53,370 --> 00:08:54,930
We want to set this to true

117
00:08:57,680 --> 00:09:01,780
dismissal whether or not the notice messages can be dismissed.

118
00:09:01,790 --> 00:09:06,260
Set this to true as we don't want to annoy users with immovable notices

119
00:09:09,120 --> 00:09:13,000
the very last step is to call a function called TGA NPA.

120
00:09:13,050 --> 00:09:18,680
This function has two parameters which is the plugins to install and then the configuration settings.

121
00:09:18,750 --> 00:09:19,590
That's it.

122
00:09:19,590 --> 00:09:26,570
Let's go to the plugins page.

123
00:09:26,710 --> 00:09:31,780
We should see nothing changed so far but let's deactivate buddy press for a moment.

124
00:09:31,780 --> 00:09:37,060
You'll now see a notice telling us that the theme recommends buddy press as an activated plugin.

125
00:09:37,240 --> 00:09:39,320
Let's click install plugins.

126
00:09:39,340 --> 00:09:44,020
We now have this table of plugins to install along with additional information.

127
00:09:44,440 --> 00:09:49,250
Activate buddy press again just like that.

128
00:09:49,300 --> 00:09:54,510
We were able to install and activate a third party plugin with very little code and work.

129
00:09:54,520 --> 00:10:00,160
Now we don't have to worry about keeping track of this plugin as WordPress will do it for us all thanks

130
00:10:00,160 --> 00:10:03,790
to the Tea GMP class.
