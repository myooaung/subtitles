WEBVTT
1
00:00:07.510 --> 00:00:10.180
The 4 or 4 template is actually pretty simple.

2
00:00:10.510 --> 00:00:15.260
According to WordPress this file must be named for all four dot P. HP.

3
00:00:15.400 --> 00:00:20.080
WordPress doesn't have any recommendations for this page so we're going to keep it really simple.

4
00:00:22.410 --> 00:00:31.540
Create a file named forum for dot P. HP and let's copy the code from the page template into this template.

5
00:00:31.570 --> 00:00:39.570
I'm going to get rid of everything except the header and footer then I'm going to open the forum for

6
00:00:39.630 --> 00:00:46.080
h t email static template copy everything from the page title to the content into the WordPress template

7
00:00:46.080 --> 00:00:46.680
like so

8
00:00:53.370 --> 00:00:58.680
I'm going to make the most of this tech translatable using the underscore e function.

9
00:00:58.680 --> 00:01:12.430
Remember to set the text domain.

10
00:01:12.570 --> 00:01:20.340
We have this search form that we can easily replace with the Get search form function this function

11
00:01:20.340 --> 00:01:24.770
will search for a file called Search formed up BHP and load it.

12
00:01:24.840 --> 00:01:29.840
We already created this template in a previous lecture so we're just reusing it here.

13
00:01:29.910 --> 00:01:33.540
Go to your site and try visiting a completely random you out.

14
00:01:33.960 --> 00:01:36.900
You should see something similar to what I see.

15
00:01:36.900 --> 00:01:39.460
I've said it 100 times and I'll say it again.

16
00:01:39.540 --> 00:01:43.530
WordPress takes care of handling which templates to display.

17
00:01:43.530 --> 00:01:47.700
All we have to do is follow the naming conventions and create the templates.

18
00:01:47.700 --> 00:01:56.240
WordPress will make all queries and run any functions necessary to display a page now that we finished

19
00:01:56.240 --> 00:01:57.600
the forum for template.

20
00:01:57.620 --> 00:02:00.500
Let's begin working on the category template.

21
00:02:00.500 --> 00:02:03.590
Here is the load order for the category template.

22
00:02:03.590 --> 00:02:08.630
WordPress will search for a template named category followed by B slug name.

23
00:02:08.930 --> 00:02:15.780
Afterwards it will search for the template ID named category followed by the idea of the category.

24
00:02:15.780 --> 00:02:20.540
Next it'll search for the category and archive templates in that order.

25
00:02:20.630 --> 00:02:24.830
The category template is specifically for category pages.

26
00:02:24.830 --> 00:02:31.730
The archive template is used to display posts in chronological order unlike the category template.

27
00:02:31.730 --> 00:02:39.620
The archive template is used for various pieces of pages like tags dates etc..

28
00:02:39.730 --> 00:02:42.250
Let's get started with creating the template.

29
00:02:42.280 --> 00:02:45.880
It's basically going to be a copy of the index template.

30
00:02:45.970 --> 00:02:50.360
WordPress says we have to name this file category dot P HP.

31
00:02:50.350 --> 00:02:56.620
So let's create that file and then copy everything from the index template into the category template

32
00:02:59.180 --> 00:03:02.690
if we take a look at the static version of the category template.

33
00:03:02.690 --> 00:03:08.330
There's only 2 differences between the category template and the index template and that is this strip

34
00:03:08.330 --> 00:03:09.470
with the title.

35
00:03:09.470 --> 00:03:16.290
There is also no breaking news widget so we have to remove that as well.

36
00:03:16.310 --> 00:03:19.210
First let's tackle this title at the top.

37
00:03:19.220 --> 00:03:26.330
Go back to the editor and OPEN THE CATEGORY dot HDMI out file from the static H2 UML category template

38
00:03:26.510 --> 00:03:30.350
we can just copy and paste the page titles section like so

39
00:03:33.390 --> 00:03:36.530
we replace the text with the function the archive title

40
00:03:40.300 --> 00:03:41.260
this template tag.

41
00:03:41.260 --> 00:03:45.850
It's a special kind of template tag that doesn't need to be used inside a loop.

42
00:03:45.880 --> 00:03:50.270
Instead this tag will check the main query and grab the archive title.

43
00:03:50.350 --> 00:03:53.410
WordPress considers this template an archive template.

44
00:03:53.500 --> 00:03:55.990
An archive is exactly what it sounds like.

45
00:03:56.080 --> 00:03:57.730
It is a list of posts.

46
00:03:57.790 --> 00:04:03.020
The category template is a special kind of archive template because it will display a list of posts

47
00:04:03.050 --> 00:04:09.250
based on a category you can find more information about the archive title function at the developer

48
00:04:09.250 --> 00:04:10.670
documentation.

49
00:04:10.690 --> 00:04:16.840
I'll provide a link to this in the resource section for the description we can use the archive description

50
00:04:16.840 --> 00:04:19.900
function which will output the description if there is one.

51
00:04:22.320 --> 00:04:24.860
Lastly let's remove the breaking news widget.

52
00:04:29.740 --> 00:04:33.490
If we refresh the page you'll notice that the title is updated.

53
00:04:33.520 --> 00:04:36.200
That's pretty much all the rest of this template.

54
00:04:36.220 --> 00:04:41.200
Something special about categories is that you can get even more specific with your designs.

55
00:04:41.560 --> 00:04:44.330
Let's take a look at the template hierarchy again.

56
00:04:44.320 --> 00:04:48.980
There's this section that describe which templates have precedence over others.

57
00:04:49.000 --> 00:04:52.440
Right now we're using the category dot P HP template.

58
00:04:52.840 --> 00:04:57.900
If this template didn't exist then WordPress would load the archive dot the HP template.

59
00:04:58.180 --> 00:05:04.660
If that template didn't exist then the index dot P HP template would be the default right above these

60
00:05:04.660 --> 00:05:11.500
three are more specific dynamic templates you can create a template for a specific idea or slug.

61
00:05:11.500 --> 00:05:13.580
Let's explore how to do that.

62
00:05:13.660 --> 00:05:18.890
I'm going to go to the categories in my admin dashboard and view a particular category.

63
00:05:21.010 --> 00:05:26.710
If you look at the URL bar you should see something along the lines of tag underscore ideas followed

64
00:05:26.710 --> 00:05:33.340
by the idea of the category let's generate a template for this category as instructed by the template

65
00:05:33.340 --> 00:05:40.540
hierarchy in order to create a template for a specific category we can use the slug or eat the slug

66
00:05:40.540 --> 00:05:47.740
is prioritized first though I'm going to create a file named category dash followed by the idea of the

67
00:05:47.740 --> 00:05:50.280
category and then add up to HP.

68
00:05:50.500 --> 00:05:54.980
Then I'm going to copy everything from the category template into this template.

69
00:05:57.100 --> 00:06:02.380
To make this template a little more unique than the rest I'm going to add some E M tags right after

70
00:06:02.380 --> 00:06:05.350
the title with a class of text dash danger

71
00:06:10.490 --> 00:06:12.970
the text inside can be anything you want.

72
00:06:13.110 --> 00:06:18.660
I'm just going to put something like important if we did everything but we should be able to see this

73
00:06:18.660 --> 00:06:21.170
text appear in red on our template.

74
00:06:21.330 --> 00:06:27.300
If you go back to the admin dashboard then you should be able to click the View category button.

75
00:06:27.300 --> 00:06:31.220
As expected we now have the important text appearing.

76
00:06:31.230 --> 00:06:35.270
Of course you don't have to use the I.D. let's try using the slug.

77
00:06:35.280 --> 00:06:42.090
Now if you go back to that admin category page you should see the field for the slug rather than using

78
00:06:42.090 --> 00:06:44.900
the I.D. we can use the slug itself.

79
00:06:44.940 --> 00:06:50.440
I'm going to copy this slug and then I'm going to rename the category file we just created using the

80
00:06:50.440 --> 00:06:50.880
slug

81
00:06:57.680 --> 00:06:58.660
after doing this.

82
00:06:58.700 --> 00:07:01.400
We should get the same result as before.

83
00:07:01.460 --> 00:07:06.820
I'm going to refresh my page and we should still see the text important appear.

84
00:07:06.830 --> 00:07:07.870
This is great.

85
00:07:07.910 --> 00:07:14.600
Now we know how to customize and create specific templates for categories in some scenarios creating

86
00:07:14.600 --> 00:07:16.260
a template can be a bit excessive.

87
00:07:16.280 --> 00:07:23.780
If you only want to apply some C Ss changes luckily WordPress will generate classes for you to use if

88
00:07:23.780 --> 00:07:28.820
you inspect the element and search for the body tag then you should see the category followed by the

89
00:07:28.820 --> 00:07:29.510
I.D..

90
00:07:30.080 --> 00:07:36.130
If you can recall the body class function generates this for you so you can use it for applying CSF

91
00:07:36.260 --> 00:07:37.680
to certain pages.

92
00:07:37.730 --> 00:07:41.840
It's always good practice to take advantage of these classes when possible.

93
00:07:41.840 --> 00:07:50.160
I'm going to open the custom dot CFS file and apply some CFS all I'm doing here is changing the page

94
00:07:50.160 --> 00:07:51.840
title color to yellow.

95
00:07:51.840 --> 00:07:55.830
If I refresh the page then you should see the text changed to yellow.

96
00:07:55.860 --> 00:07:58.920
As I said it in the custom Nazi SS file.

97
00:07:58.920 --> 00:08:04.380
This looks horrendous but it does get my point across before I wrap up this lecture.

98
00:08:04.410 --> 00:08:09.810
You may be wondering why bother creating the category template when the index template is almost the

99
00:08:09.810 --> 00:08:10.920
same.

100
00:08:10.920 --> 00:08:15.570
This is because your theme should be flexible by having separate templates.

101
00:08:15.570 --> 00:08:19.620
You make it easy to apply changes to specific types of content.

102
00:08:19.680 --> 00:08:22.980
Having a file bloated with code is hard to maintain.

103
00:08:22.980 --> 00:08:29.730
I want you to make it a habit to create templates for all types of pages as this allows for more flexibility.

104
00:08:29.730 --> 00:08:35.570
The index template should be loaded only when any other template is not suitable for the job.

105
00:08:35.580 --> 00:08:41.400
I'm not saying the index template is bad but if you rely on more than half of your pages to use the

106
00:08:41.400 --> 00:08:45.600
index template you'll just make it harder to customize in the future when you need to.
