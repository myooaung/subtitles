1
00:00:07,560 --> 00:00:13,710
In this lecture we'll explore how to create templates for attachments that template hierarchy goes through

2
00:00:13,710 --> 00:00:16,240
quite a bit of templates to display attachments.

3
00:00:16,290 --> 00:00:21,440
You can actually get really specific here by creating templates for certain MIME types.

4
00:00:21,450 --> 00:00:24,310
First let's understand what a MIME type is.

5
00:00:24,390 --> 00:00:30,210
A MIME type is a way for a program or browser to identify what kind of file is being loaded.

6
00:00:30,750 --> 00:00:37,050
It's similar to a file extension except the mind types or stored internally into the file itself.

7
00:00:37,050 --> 00:00:42,660
This makes it a bit harder to change as opposed to file extensions checking a MIME type is safer than

8
00:00:42,660 --> 00:00:46,050
checking for an extension but it isn't foolproof.

9
00:00:46,260 --> 00:00:51,420
Now that we understand mind types let's explore the template order WordPress will use.

10
00:00:51,420 --> 00:00:56,930
First it will check for the MIME type of the file and then search for a template with the same name.

11
00:00:57,030 --> 00:01:01,590
If it doesn't find one then it'll fall back to the attachment template.

12
00:01:01,590 --> 00:01:05,610
This is followed by the single attachment that uses the slug.

13
00:01:05,610 --> 00:01:10,410
Lastly the single singular and indexed templates are used in that order.

14
00:01:12,020 --> 00:01:15,930
Anyway let's get started with creating attachment templates.

15
00:01:16,010 --> 00:01:19,720
Go to your Adam and dashboard and look for the menu item media.

16
00:01:19,760 --> 00:01:25,820
WordPress will allow you to manage all your uploads through here all file uploads are what WordPress

17
00:01:25,820 --> 00:01:27,420
considers attachments.

18
00:01:27,470 --> 00:01:32,320
If you use faker press then you should see quite a few attachments being displayed here.

19
00:01:32,420 --> 00:01:35,870
Fake your press generated these for us which is nice.

20
00:01:35,870 --> 00:01:41,030
I'm going to click on one of the images and you will see this modal pop up providing more details about

21
00:01:41,030 --> 00:01:42,150
the attachment.

22
00:01:42,200 --> 00:01:44,580
There are two ways to view this image.

23
00:01:44,600 --> 00:01:49,850
You can either use this you are all here or you can click on this link that says view attachment page

24
00:01:50,540 --> 00:01:56,300
Let's view the attachment page as you can see we have the image appearing here and we have the rest

25
00:01:56,300 --> 00:01:59,240
of the page being displayed by default.

26
00:01:59,270 --> 00:02:05,690
WordPress will use the single or index templates if an attachment template isn't present.

27
00:02:05,690 --> 00:02:10,760
While I do like that my theme is being displayed there is way too much information here just for the

28
00:02:10,760 --> 00:02:11,410
image.

29
00:02:11,510 --> 00:02:15,980
So let's create the attachment template now or this template.

30
00:02:15,980 --> 00:02:20,000
I'm going to copy all the code from the single template into this new template.

31
00:02:22,070 --> 00:02:28,760
Then I'm going to remove the metadata featured image patch nation links next and previous links tags

32
00:02:28,820 --> 00:02:30,790
related posts and author box

33
00:02:48,570 --> 00:02:52,330
what you'll end up having is the title content and the comments.

34
00:02:52,500 --> 00:02:58,540
Not really spectacular but this is just an attachment template so the details don't matter as much.

35
00:02:58,560 --> 00:03:01,320
Let's refresh the page and see what we get.

36
00:03:01,380 --> 00:03:04,240
The image will disappear and nothing really displays.

37
00:03:04,260 --> 00:03:05,710
But why is this.

38
00:03:05,790 --> 00:03:12,300
What's happening is that WordPress now assumes you want to display attachments your own way by creating

39
00:03:12,300 --> 00:03:18,000
the attachments template you're also given control over how an attachment should be displayed.

40
00:03:18,000 --> 00:03:20,390
WordPress will not do it for you.

41
00:03:20,520 --> 00:03:22,800
So how do we get the attachment info.

42
00:03:23,140 --> 00:03:28,710
Well there's a special variable that's created that contains all this info back inside the template.

43
00:03:28,710 --> 00:03:31,740
I'm going to print R the post variable.

44
00:03:31,920 --> 00:03:34,770
I'm also going to surround this with pre-tax

45
00:03:40,300 --> 00:03:46,510
by calling the function the post this variable is automatically created for you and you can use it anywhere

46
00:03:46,510 --> 00:03:48,510
in your loop in future lectures.

47
00:03:48,580 --> 00:03:54,690
We'll go over how to use this variable to our advantage but for now we'll just look at what's inside.

48
00:03:54,790 --> 00:03:56,860
Go back to the page and refresh.

49
00:03:56,860 --> 00:04:00,080
You should see the data about the post being printed out.

50
00:04:00,130 --> 00:04:04,930
There's a lot of information being output here but we only care about three properties.

51
00:04:04,990 --> 00:04:08,180
The first property you'll notice is the post type.

52
00:04:08,310 --> 00:04:14,770
It's set to attachment which WordPress uses to determine if the attachment template should be used.

53
00:04:14,770 --> 00:04:21,870
There's also the mind type being set will actually use these later to create more specific templates.

54
00:04:21,910 --> 00:04:23,680
I'll talk more about that later.

55
00:04:23,680 --> 00:04:27,440
The last property that's important is the g Whitey's property.

56
00:04:27,460 --> 00:04:31,280
This will contain the direct link to the attachment itself.

57
00:04:31,450 --> 00:04:34,450
Now that we know where to find this information let's use it.

58
00:04:34,480 --> 00:04:38,930
I'm going to remove the print statement and then write above the content.

59
00:04:38,980 --> 00:04:47,370
I'm going to create an anchor link the text will be direct download and the link will be dynamic using

60
00:04:47,520 --> 00:04:48,540
HP.

61
00:04:48,600 --> 00:04:56,960
I'm going to access the G white property from the post object like so if everything worked then we should

62
00:04:56,960 --> 00:05:02,390
be able to refresh the page and see the direct download link appearing something I want to highlight

63
00:05:02,450 --> 00:05:08,040
is that if you don't see a title then chances are the attachment itself doesn't have a title.

64
00:05:08,090 --> 00:05:13,520
If you go back to the media manager you should see this field where you can set a title set one so that

65
00:05:13,520 --> 00:05:18,160
you don't see a lot of empty space all right.

66
00:05:18,160 --> 00:05:19,130
This is great.

67
00:05:19,150 --> 00:05:24,730
I want to take this a step further but I want to do is display that image right below the download link

68
00:05:24,790 --> 00:05:26,900
but there's one problem we face.

69
00:05:27,040 --> 00:05:30,580
This attachment template will be loaded for any attachment.

70
00:05:30,580 --> 00:05:36,500
This includes videos applications PDA files and any other files that aren't images.

71
00:05:36,880 --> 00:05:43,570
Luckily we can get around this by creating a template for a specific mind type in the resource section

72
00:05:43,570 --> 00:05:44,250
of this lecture.

73
00:05:44,260 --> 00:05:47,710
I provide a link to the function get allowed mime types.

74
00:05:47,710 --> 00:05:53,590
We aren't going to use this function but what I want you to look at is this list of mind types on the

75
00:05:53,590 --> 00:05:53,970
left.

76
00:05:53,980 --> 00:05:58,060
You have the extension and on the right you have the mind type itself.

77
00:05:58,060 --> 00:06:01,710
You'll see that mime types or formatted in a certain way.

78
00:06:01,750 --> 00:06:04,630
There's the category and then the type of file itself.

79
00:06:04,720 --> 00:06:10,520
For example there's the image video text audio and other categories.

80
00:06:10,570 --> 00:06:17,110
If we look at the image category you'll see all the various types of files that fall under this category

81
00:06:17,200 --> 00:06:19,950
which are JPEG gif PMG.

82
00:06:19,960 --> 00:06:21,040
So on and so forth.

83
00:06:21,760 --> 00:06:23,880
Let's create a template for this.

84
00:06:24,010 --> 00:06:26,230
All you have to do is name your template.

85
00:06:26,230 --> 00:06:34,050
After the MIME type in this case we should name the file image dot the HP now.

86
00:06:34,060 --> 00:06:38,230
Any attachments with this MIME type will be loaded using this template.

87
00:06:38,230 --> 00:06:43,210
I'm going to copy over the code from the attachment template into this template.

88
00:06:43,210 --> 00:06:49,540
The only change I'm going to make is add an I am G tag right below the direct download link since we

89
00:06:49,540 --> 00:06:54,450
know that the URL to the image itself is saved inside the G United property.

90
00:06:54,460 --> 00:06:56,230
I'm just going to pass that in here.

91
00:06:58,350 --> 00:07:04,530
I'm also going to give this image a class of image dash responsive so that the image doesn't wander

92
00:07:04,530 --> 00:07:11,080
off the page refresh the page and you should now see the image appearing.

93
00:07:11,110 --> 00:07:17,350
This is great because we now have two attachment templates one template is for images that will display

94
00:07:17,350 --> 00:07:18,620
that image to the user.

95
00:07:18,700 --> 00:07:21,820
And another is for any generic attachment.

96
00:07:21,940 --> 00:07:27,620
You can obviously take this even further by adding a video player for videos or a PDA viewer.

97
00:07:27,640 --> 00:07:29,290
The solutions are limitless.
