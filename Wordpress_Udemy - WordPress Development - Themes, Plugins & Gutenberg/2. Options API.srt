1
00:00:07,380 --> 00:00:13,620
In the resource section of this lecture I provide a link to WordPress as options API Codex page.

2
00:00:13,650 --> 00:00:17,400
This is what WordPress has to say about the options API.

3
00:00:17,610 --> 00:00:22,810
The options API is a simple and standardised way of storing data in the database.

4
00:00:22,920 --> 00:00:31,140
The API makes it easy to create access update and delete options all the data is stored in the WP underscore

5
00:00:31,140 --> 00:00:34,050
options table under a given customer name.

6
00:00:34,050 --> 00:00:40,890
This page contains the technical documentation needed to use the options API to put it simply it's a

7
00:00:40,890 --> 00:00:44,260
way for us to create options for plugins and themes.

8
00:00:44,280 --> 00:00:49,680
If you created some web apps you're probably used to creating a table for your settings.

9
00:00:49,980 --> 00:00:54,960
While this may seem appropriate for your own web apps it's overkill for wordpress.

10
00:00:54,960 --> 00:00:58,410
A lot of WordPress sites will have dozens of plugins installed.

11
00:00:58,620 --> 00:01:04,140
It would be pretty hard to maintain the database if every plugin and thing created their own set of

12
00:01:04,140 --> 00:01:06,150
tables with settings.

13
00:01:06,150 --> 00:01:12,990
WordPress has standardize these types of situations by providing the options API the options API will

14
00:01:12,990 --> 00:01:19,280
provide an easy way to create retrieve update Angele options and or settings.

15
00:01:19,290 --> 00:01:21,160
Here's what we're going to do.

16
00:01:21,240 --> 00:01:26,050
We will create an admin page with settings related to the recipe plugin.

17
00:01:26,160 --> 00:01:31,410
The settings will determine whether or not a user has to be registered to create a recipe or rate one

18
00:01:32,310 --> 00:01:35,040
I want you to open the activation file.

19
00:01:35,040 --> 00:01:40,110
I'm going to start using the options API right away before we can edit the settings.

20
00:01:40,140 --> 00:01:44,980
We need to create them create a variable called recipe objects.

21
00:01:45,030 --> 00:01:49,350
This variables value will be set to the value returned by the function.

22
00:01:49,350 --> 00:01:52,680
Get option.

23
00:01:52,720 --> 00:01:55,930
This is the first function in the options API.

24
00:01:55,930 --> 00:01:59,080
This will simply retrieve the value of an option.

25
00:01:59,170 --> 00:02:02,410
The option I want to retrieve is called our ops

26
00:02:05,190 --> 00:02:08,070
this option doesn't exist or at least it shouldn't.

27
00:02:08,070 --> 00:02:10,580
When the user first activates the plugin.

28
00:02:10,710 --> 00:02:14,880
If this option doesn't exist WordPress will return false.

29
00:02:14,880 --> 00:02:22,190
Next inside a conditional statement I'm going to check if this value is false.

30
00:02:22,270 --> 00:02:24,450
It's very important that we do this.

31
00:02:24,490 --> 00:02:30,340
If a user activates and reactivate this plugin then we could end up overwriting their settings if they

32
00:02:30,340 --> 00:02:32,850
previously activated the plugin.

33
00:02:32,950 --> 00:02:36,830
At this point the user is activating the plugin for the first time.

34
00:02:37,000 --> 00:02:43,410
I'm going to create an array called OP's this array will have a few key value pairs.

35
00:02:43,450 --> 00:02:50,260
I'm going to create two values named rating log and required and recipe submission log and required

36
00:02:54,090 --> 00:03:01,200
both values will be set to 1 which will mean no 2 4 yes if the user is required to be logged in to submit

37
00:03:01,230 --> 00:03:03,100
or rate a recipe.

38
00:03:03,120 --> 00:03:06,480
Now it's time to add the option into the database.

39
00:03:06,570 --> 00:03:13,870
We're going to call a function and called add option this function has two parameters.

40
00:03:13,870 --> 00:03:16,420
The name of the option and its value.

41
00:03:16,420 --> 00:03:18,750
The name will be our ops.

42
00:03:18,760 --> 00:03:23,930
The value will be the array we just created.

43
00:03:23,960 --> 00:03:28,690
One thing I should be clear on is that you don't have to set the option as an array.

44
00:03:28,790 --> 00:03:31,310
You can use any value you want.

45
00:03:31,550 --> 00:03:35,420
It can be a boolean integer or just a plain string.

46
00:03:35,420 --> 00:03:40,970
However I wanted to use an array as I don't want to create two different options.

47
00:03:40,970 --> 00:03:45,230
It's much easier to have one option with an array of values.

48
00:03:45,290 --> 00:03:49,400
Now that we're finished let's deactivate and reactivate this plugin.

49
00:03:49,550 --> 00:03:51,350
You should receive no errors

50
00:03:54,030 --> 00:03:56,970
to confirm if the option was saved open Heidi.

51
00:03:56,970 --> 00:03:57,270
Yes.

52
00:03:57,390 --> 00:04:05,630
Well I'm going to navigate to the WordPress database and open the WP options table.

53
00:04:05,720 --> 00:04:10,910
I know for a fact that this is the table where options are stored because that's what was stated in

54
00:04:10,910 --> 00:04:12,240
the documentation.

55
00:04:12,440 --> 00:04:18,920
Since I know we just created this option I can then go to the very last row and see if the R opts option

56
00:04:18,920 --> 00:04:20,210
was created.

57
00:04:20,330 --> 00:04:22,520
As you can see it was created.

58
00:04:22,520 --> 00:04:24,250
The value is pretty weird.

59
00:04:24,260 --> 00:04:30,920
Don't worry about this WordPress has to format an array so that it can fit inside the database properly.

60
00:04:30,920 --> 00:04:37,040
All our values are serialized during input and then converted back to an array when we need it in the

61
00:04:37,040 --> 00:04:41,420
next few lectures will start creating a page for the plugin settings.

62
00:04:41,420 --> 00:04:45,320
This special page will allow users to update the plugin options.
