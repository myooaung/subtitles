1
00:00:07,640 --> 00:00:12,430
In some situations you may want to add in your own custom buttons to the toolbar.

2
00:00:12,500 --> 00:00:14,270
That's completely possible.

3
00:00:14,270 --> 00:00:19,450
WordPress even provides some components for making that process easier to get started.

4
00:00:19,460 --> 00:00:23,190
Download the zip file in the resource section of this lecture.

5
00:00:23,240 --> 00:00:26,380
Unzip the contents inside the app directory.

6
00:00:26,420 --> 00:00:29,800
You should be provided with a folder called Night mode block.

7
00:00:29,900 --> 00:00:35,600
We're going to be building a block where a user can enable night mode night mode is a term used to describe

8
00:00:35,630 --> 00:00:38,740
UI that switches the contrast from light to dark.

9
00:00:38,750 --> 00:00:40,560
This reduces eye strain.

10
00:00:40,630 --> 00:00:44,210
Will make a button that will allow the user to toggle this feature.

11
00:00:44,210 --> 00:00:48,110
There are several files here but it's nothing you haven't seen before.

12
00:00:48,110 --> 00:00:50,470
Let's start with the index file.

13
00:00:50,600 --> 00:00:54,370
I'm importing the icon for the block and an icon for the button.

14
00:00:54,380 --> 00:00:56,340
Let's check that out for a minute.

15
00:00:56,330 --> 00:00:58,670
I'm viewing the icon in Illustrator.

16
00:00:58,670 --> 00:01:01,500
If you don't have illustrator that's perfectly fine.

17
00:01:01,520 --> 00:01:06,200
I've already taken the time to export it as an SPG file and export it.

18
00:01:06,230 --> 00:01:09,930
You can find the icon inside the icon dot J.S. file.

19
00:01:10,010 --> 00:01:16,590
All I'm doing here is exporting the SPG code as the default value switching back to the index file.

20
00:01:16,640 --> 00:01:23,480
I'm importing a SAS file if you look inside the SAS file you'll find that I'm just applying a dark background

21
00:01:23,480 --> 00:01:25,390
colour and a light font color.

22
00:01:25,460 --> 00:01:31,130
Take note that this will only apply if the class night mode is applied to the element.

23
00:01:31,220 --> 00:01:33,780
All right let's go back to the index file.

24
00:01:33,800 --> 00:01:35,420
Everything else is the same.

25
00:01:35,480 --> 00:01:38,630
We're grabbing some components and registering the block.

26
00:01:38,630 --> 00:01:42,260
I'm leaving out the keywords property again to save room.

27
00:01:42,290 --> 00:01:47,610
Feel free to add it in if you like the edit function will display some basic content.

28
00:01:47,660 --> 00:01:53,180
We're not going to bother adding input fields or changeable content everything will be static besides

29
00:01:53,210 --> 00:01:55,490
the toolbar right above the content.

30
00:01:55,520 --> 00:02:01,340
I'm loading the block controls component it's currently empty but we'll be adding our custom toolbar

31
00:02:01,340 --> 00:02:02,360
soon enough.

32
00:02:02,360 --> 00:02:07,340
The same function contains the same HDMI all as above that should be it.

33
00:02:07,430 --> 00:02:13,140
Now that we have an overview of things let's get started to create a custom toolbar.

34
00:02:13,190 --> 00:02:15,520
We're going to need a couple of components.

35
00:02:15,530 --> 00:02:21,540
These components are optional but they handle a lot for us such as formatting positioning and design.

36
00:02:21,740 --> 00:02:30,820
All of these components will come from the WP components object so d structure that will need the toolbar

37
00:02:30,910 --> 00:02:32,950
button and tooltip components.

38
00:02:38,100 --> 00:02:41,190
All talk about what these components do in just a moment.

39
00:02:41,190 --> 00:02:46,890
Next we're going to set up some attributes we only need one which will determine if the content should

40
00:02:46,890 --> 00:02:55,900
have night mode enabled create an attribute called Night mode the type will be boolean and the default

41
00:02:55,930 --> 00:03:01,940
will be false.

42
00:03:01,980 --> 00:03:07,830
We're not setting a source or selectors instance will be a simple value that makes it perfect for storing

43
00:03:07,830 --> 00:03:14,460
it inside the comments with the attributes set let's begin creating the toolbar inside the block controls

44
00:03:14,460 --> 00:03:15,240
component.

45
00:03:15,270 --> 00:03:23,030
I'm going to load in the toolbar component the toolbar component will take care of adding a separator

46
00:03:23,060 --> 00:03:28,550
between the other toolbars that might be loaded in it will properly position your button within the

47
00:03:28,550 --> 00:03:30,680
block controls component.

48
00:03:30,680 --> 00:03:38,270
Next we're going to load in the tooltip component this component will display a tooltip if the user

49
00:03:38,270 --> 00:03:40,970
hovers over the content placed inside of it.

50
00:03:40,970 --> 00:03:45,450
We don't have to worry about the events or positioning as that's handled for us.

51
00:03:45,500 --> 00:03:49,090
The only attribute we need to set is the text attribute.

52
00:03:49,100 --> 00:03:56,410
Set this to night mode and make it translatable inside of the tooltip component.

53
00:03:56,420 --> 00:03:58,060
Add the button component.

54
00:03:58,160 --> 00:03:59,900
The order does matter here.

55
00:03:59,900 --> 00:04:05,480
If the button component is placed inside the toolbar component then the stylings for the button component

56
00:04:05,480 --> 00:04:06,830
will be adjusted.

57
00:04:06,830 --> 00:04:12,010
The adjustment will make things look consistent with the other buttons on the toolbar.

58
00:04:12,050 --> 00:04:15,260
All right we're going to apply a few things to this button.

59
00:04:15,260 --> 00:04:18,080
First we have to apply a couple of classes.

60
00:04:18,230 --> 00:04:24,440
However we run into one problem we act currently doesn't support multiple classes for a component.

61
00:04:24,890 --> 00:04:29,450
If you scroll up you'll see I'm loading a module called class names.

62
00:04:29,450 --> 00:04:32,140
This is a third party module that we installed.

63
00:04:32,140 --> 00:04:38,890
Long ago I promised a very long time ago to explain what this is for and now I finally can.

64
00:04:38,930 --> 00:04:43,240
This module will take care of allowing multiple classes for a component.

65
00:04:43,310 --> 00:04:46,140
It's very easy to use on the button.

66
00:04:46,160 --> 00:04:55,760
I'm going to apply the class name attribute the value for this will be class names function.

67
00:04:55,810 --> 00:04:59,620
This will accept in the list of class names you'd like to apply.

68
00:04:59,620 --> 00:05:07,000
I'm going to add classes which are components dash icon dash button and components dash toolbar underscore

69
00:05:07,030 --> 00:05:13,280
underscore control.

70
00:05:13,490 --> 00:05:17,480
We're going to apply one more class which is is Dash active.

71
00:05:17,480 --> 00:05:25,530
However this will be inside an object if we want to have dynamic classes then we have to format it like

72
00:05:25,530 --> 00:05:26,280
this.

73
00:05:26,310 --> 00:05:30,710
The name will be the class to add and the value can either be true or false.

74
00:05:30,780 --> 00:05:33,600
If it's true then the class will be added.

75
00:05:33,600 --> 00:05:35,910
If false it won't be added.

76
00:05:35,910 --> 00:05:37,490
Set this to prompts Don.

77
00:05:37,560 --> 00:05:38,530
Attributes Dot.

78
00:05:38,560 --> 00:05:43,640
Knight mode by default Knight mode will be false.

79
00:05:43,730 --> 00:05:50,030
So this class shouldn't be applying the is active class will let the user visually know the button is

80
00:05:50,030 --> 00:05:51,010
enabled.

81
00:05:51,020 --> 00:05:55,130
I was able to find these classes by looking at the other components and toolbars.

82
00:05:55,130 --> 00:06:01,430
WordPress creates it's not documented so it's always good practice to dive into the code itself to better

83
00:06:01,430 --> 00:06:03,600
understand how things work.

84
00:06:03,620 --> 00:06:06,920
Next we want to change that night mode attribute.

85
00:06:06,950 --> 00:06:13,490
If this button is clicked we basically want to flip the current value the button component has an event

86
00:06:13,520 --> 00:06:20,230
called on click this will be set to an arrow function just like before.

87
00:06:20,230 --> 00:06:25,810
We'll call the set attributes function and set that night mode attribute to its opposite value like

88
00:06:25,810 --> 00:06:33,660
so.

89
00:06:33,810 --> 00:06:38,010
Next we'll end the button icon variable as the content inside

90
00:06:43,960 --> 00:06:46,750
the width and height should be 20 pixels.

91
00:06:46,750 --> 00:06:50,140
I've already applied that to the SPG icon itself.

92
00:06:50,140 --> 00:06:55,820
Now that the button is functioning we just have to apply this to the content itself below.

93
00:06:55,930 --> 00:07:03,870
I'm going to call the class names function instead of setting the class statically all at the content

94
00:07:03,930 --> 00:07:04,370
Dash.

95
00:07:04,380 --> 00:07:07,310
Example class and make the night class dynamic.

96
00:07:12,550 --> 00:07:16,840
The night class will take care of adding the dark background and white text.

97
00:07:16,870 --> 00:07:19,720
This is what we named it in our SAS files.

98
00:07:19,720 --> 00:07:21,320
This will be set to prompt.

99
00:07:21,340 --> 00:07:24,440
Don attributes dot Knight mode.

100
00:07:24,570 --> 00:07:32,110
I'm going to copy this code and pasted over to the save function since it's the exact same thing the

101
00:07:32,110 --> 00:07:33,400
block is now finished.

102
00:07:33,430 --> 00:07:41,050
The last step is to import it inside the app dot index dot J.S. file import the night mode block module

103
00:07:44,510 --> 00:07:53,590
C.D. into the blocks directory and run the NPM run Dev command.

104
00:07:53,650 --> 00:07:55,970
You shouldn't receive any error so far.

105
00:07:56,050 --> 00:07:58,570
Go ahead and create a recipe post.

106
00:07:58,570 --> 00:08:03,520
If you were to search for the night mode block then you shouldn't be able to find it with the warp who

107
00:08:03,520 --> 00:08:06,460
icon and the block to the editor.

108
00:08:06,460 --> 00:08:08,680
All you should see is a simple message.

109
00:08:08,680 --> 00:08:14,410
If you were to select it then you should see the toolbar appear with our custom button an icon you can

110
00:08:14,410 --> 00:08:16,620
click it and it should toggle night mode.

111
00:08:16,780 --> 00:08:21,100
If you hover your mouse over the button then you should see the tooltip as well.

112
00:08:21,100 --> 00:08:22,010
This is great.

113
00:08:22,030 --> 00:08:25,150
We now have our own custom toolbar.

114
00:08:25,150 --> 00:08:31,780
Turn on night mode and then save the post try viewing it on the front end.

115
00:08:31,860 --> 00:08:34,100
The block should have the stylings applied to it.

116
00:08:34,110 --> 00:08:35,520
If you did everything right.

117
00:08:35,680 --> 00:08:40,830
There's not much to this honestly you're just loading in a few components and using them to help build

118
00:08:40,830 --> 00:08:44,130
your Custom Toolbar before I end this lecture.

119
00:08:44,160 --> 00:08:45,820
I do want to note one thing.

120
00:08:45,990 --> 00:08:47,790
Tool tips are optional.

121
00:08:47,790 --> 00:08:53,980
If you wanted to you could remove this like so this is perfectly fine.

122
00:08:54,360 --> 00:08:58,790
However I prefer to add it because it can provide more context to the user.

123
00:08:58,800 --> 00:09:02,160
Just in case they don't understand what your buttons do.

124
00:09:02,160 --> 00:09:04,960
I'll add it back in that does it for now.

125
00:09:05,010 --> 00:09:08,130
We'll continue exploring more components in the next lecture.
