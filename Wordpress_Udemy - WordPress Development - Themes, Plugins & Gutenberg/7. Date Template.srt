1
00:00:07,650 --> 00:00:12,940
The next template we're going to work on is the dates template the dates template is used to display

2
00:00:12,960 --> 00:00:13,470
posts.

3
00:00:13,470 --> 00:00:20,010
If a user is viewing an archive for a particular date year month or date the order that's used here

4
00:00:20,070 --> 00:00:28,890
is date dot P. hp then archive dot P. HP and lastly indexed P HP WordPress provides functionality for

5
00:00:28,890 --> 00:00:35,300
checking if a post is from a certain year month or day but doesn't utilize that in their template system.

6
00:00:35,310 --> 00:00:38,540
This actually gives us more trouble than it does help.

7
00:00:38,580 --> 00:00:44,400
It would be great if we could create templates for certain timeframes but that's just not possible with

8
00:00:44,400 --> 00:00:45,550
Wordpress.

9
00:00:45,570 --> 00:00:49,200
Instead you will have to perform those checks in our templates.

10
00:00:49,200 --> 00:00:50,670
You'll see why this is a problem.

11
00:00:50,670 --> 00:00:58,370
In just a moment if you haven't already drag and drop the archives of widget onto your sidebar.

12
00:00:58,600 --> 00:01:02,740
This will provide some links to view our posts for particular dates.

13
00:01:02,740 --> 00:01:05,290
It will help us a lot later in this lecture.

14
00:01:05,530 --> 00:01:09,240
Once you have that setup let's create the dates dot P HP.

15
00:01:09,250 --> 00:01:16,120
Temple of file the date template is an archive template so we can just use the category template as

16
00:01:16,120 --> 00:01:21,030
a base when it comes to date templates.

17
00:01:21,030 --> 00:01:27,480
We can't use the archive description function as you can't assign descriptions for dates in these cases

18
00:01:27,690 --> 00:01:32,320
we'll have to create our own custom descriptions or just remove it entirely.

19
00:01:32,340 --> 00:01:35,430
It's up to you and what works best for your theme or design.

20
00:01:36,270 --> 00:01:39,450
I'm going to use something called a conditional tag.

21
00:01:39,450 --> 00:01:44,400
Conditional tags are just a fancy phrase for functions that perform checks for you.

22
00:01:44,400 --> 00:01:49,780
They're similar to template tags except they're meant to be used inside conditional statements.

23
00:01:49,800 --> 00:01:54,540
We'll be exploring more conditional tags later in this course but let's keep it simple for now.

24
00:01:55,320 --> 00:01:59,720
I'm going to update this description and add in some code.

25
00:01:59,810 --> 00:02:03,850
All right I'm back and add in this series of conditional statements.

26
00:02:03,890 --> 00:02:07,520
It's nothing really complex inside these conditional statements.

27
00:02:07,520 --> 00:02:13,250
I'm using a conditional tag each of these functions will check if the date being displayed is for a

28
00:02:13,250 --> 00:02:20,030
particular year month or day depending on the date that's being displayed an appropriate message will

29
00:02:20,030 --> 00:02:22,360
be output it with that all set.

30
00:02:22,370 --> 00:02:25,010
Let's check out an archive on the sidebar.

31
00:02:25,010 --> 00:02:28,500
You should have this archive widget that displays dates.

32
00:02:28,610 --> 00:02:33,550
Click on any of these and you should now see our template working once again.

33
00:02:33,560 --> 00:02:39,470
WordPress was able to read the URL and determine what kind of posts to grab from the database.

34
00:02:39,470 --> 00:02:42,010
It also took care of generating the title.

35
00:02:42,080 --> 00:02:46,360
The only thing we did was taking care of generating the description.

36
00:02:46,370 --> 00:02:50,030
Now let's look at the problems that arise with this template.

37
00:02:50,090 --> 00:02:56,350
If you look at the URL you should see the date it's formatted as a year month and then the date.

38
00:02:56,450 --> 00:03:03,440
If I wanted to see post on a specific date then I could pass in a day like so the only requirement for

39
00:03:03,440 --> 00:03:08,640
displaying a date archive is the year so I can remove the month and day Like so.

40
00:03:09,020 --> 00:03:13,340
Something you should know about the date archive is that it will only display if there's at least one

41
00:03:13,340 --> 00:03:15,110
post for the date range.

42
00:03:15,110 --> 00:03:22,430
For example if I want to change the year to 2020 and refresh the page then you should see no posts the

43
00:03:22,430 --> 00:03:24,350
date template doesn't even get loaded.

44
00:03:24,650 --> 00:03:30,940
Instead we get the 4 0 4 template even though it isn't documented inside the template hierarchy.

45
00:03:30,980 --> 00:03:36,410
WordPress will fall back to the 4 or 4 template if there are no posts for a date range.

46
00:03:36,410 --> 00:03:41,840
This is a problem because what if we wanted to display a message telling the user there are no posts

47
00:03:41,840 --> 00:03:42,640
for a date.

48
00:03:42,920 --> 00:03:44,220
We can't do that.

49
00:03:44,300 --> 00:03:49,020
We can't even use conditional tags as they will return false.

50
00:03:49,040 --> 00:03:52,760
Luckily the date template isn't a commonly used template.

51
00:03:52,790 --> 00:03:58,830
I actually don't find myself creating it or even using it that often despite the quirks it gives off.

52
00:03:58,850 --> 00:04:00,520
They aren't that dangerous or bad.

53
00:04:00,920 --> 00:04:04,210
So you can get away with not creating this template.

54
00:04:04,250 --> 00:04:06,890
It's definitely a case by case scenario though.
