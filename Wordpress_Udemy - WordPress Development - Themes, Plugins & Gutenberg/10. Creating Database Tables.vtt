WEBVTT
1
00:00:07.590 --> 00:00:13.710
We've been using various API is such as the metadata API to work with the database up until now.

2
00:00:13.710 --> 00:00:19.980
By using these API as we've avoided directly querying the database however we're coming to the point

3
00:00:19.980 --> 00:00:23.940
where we can't justify using API is for certain tasks.

4
00:00:23.940 --> 00:00:29.980
We need full control over the database and in these next few lectures you'll see how to do just that.

5
00:00:30.210 --> 00:00:36.420
One of the benefits of using API is that we didn't have to create tables or insert data while these

6
00:00:36.420 --> 00:00:37.730
APIs are useful.

7
00:00:37.770 --> 00:00:39.900
They don't provide us with everything we need.

8
00:00:40.380 --> 00:00:44.550
Sometimes you will have to create complex custom queries.

9
00:00:44.550 --> 00:00:48.240
Other times you'll have to create tables in this lecture.

10
00:00:48.240 --> 00:00:51.120
We're going to create a database table.

11
00:00:51.150 --> 00:00:54.270
This table will contain ratings for our recipes.

12
00:00:54.300 --> 00:00:59.910
First we're going to create it through an interface and then learn how to create it with code.

13
00:00:59.910 --> 00:01:02.110
I'm using Heidi Eskew well for this.

14
00:01:02.160 --> 00:01:05.730
It's a really great program for communicating with sequel databases.

15
00:01:05.730 --> 00:01:10.430
If you're comfortable with P feed my admin then by all means go ahead and use it.

16
00:01:10.470 --> 00:01:15.810
If this is your first time using Heidi yes you well then I'll show you how to connect to your database

17
00:01:15.810 --> 00:01:19.290
quickly for the hostname slash IP.

18
00:01:19.300 --> 00:01:26.410
It should be 1 2 7 0 0 0 don't want the user name should be root and the password should be empty the

19
00:01:26.410 --> 00:01:29.600
rest of the settings are just fine as is next.

20
00:01:29.620 --> 00:01:36.010
You should just click open and you should see all your databases go to the database that contains your

21
00:01:36.010 --> 00:01:42.880
wordpress installation you should see about eleven tables you may see more because plugins can and are

22
00:01:42.880 --> 00:01:47.980
allowed to create more database tables before we create our own table.

23
00:01:48.010 --> 00:01:54.360
Let's check out how WordPress creates tables open the WP underscore posts tables.

24
00:01:54.350 --> 00:01:57.150
Wordpress is database design is very good.

25
00:01:57.190 --> 00:02:03.640
WordPress tries its best to implement the best database practices and it shows here one thing you'll

26
00:02:03.640 --> 00:02:09.970
notice is that for their I.D. is that they use the big integer type to allow for stealing and large

27
00:02:09.970 --> 00:02:11.210
amounts of data.

28
00:02:11.230 --> 00:02:15.390
It's always good practice to follow how WordPress designs their database.

29
00:02:15.400 --> 00:02:21.550
This way you can remove any confusion if someone else takes a look at your own custom tables.

30
00:02:21.550 --> 00:02:28.070
You'll also notice that every table starts with WP underscore this is very important to note down.

31
00:02:28.300 --> 00:02:34.930
The goal right now is to create a table with Heidi Eskew ls help and you'll see why in a second to create

32
00:02:34.930 --> 00:02:39.720
a table you'll have to click the database and select create new table.

33
00:02:39.850 --> 00:02:42.760
From here we can begin defining the table.

34
00:02:42.760 --> 00:02:49.290
I'm going to call a table WP underscore recipe underscore ratings and it should have four columns.

35
00:02:49.300 --> 00:02:52.330
I'm going to pre fill these and then go over what you should set

36
00:03:07.000 --> 00:03:11.010
positive video for a second and fill up the form just as I did.

37
00:03:11.060 --> 00:03:17.100
We have four fields named i.e. recipe i.e. rating and user IP.

38
00:03:17.150 --> 00:03:23.270
The ideas will be unique and we'll be setting it as our primary key to create a primary key.

39
00:03:23.270 --> 00:03:26.970
You just right click and select create new index primary.

40
00:03:27.200 --> 00:03:33.780
The type should be big int we use big ints as this is what WordPress uses for their own ideas.

41
00:03:33.800 --> 00:03:38.280
The link should be 20 with auto increment as the default.

42
00:03:38.280 --> 00:03:41.640
The recipe ideas will contain the ideas of the post.

43
00:03:41.660 --> 00:03:45.370
This will also be the type big int with a length of 20.

44
00:03:45.620 --> 00:03:49.490
The rating will contain the user rating along with their user IP.

45
00:03:50.270 --> 00:03:54.320
Let's create our table now and you should receive no error so far.

46
00:03:54.320 --> 00:03:55.100
Great.

47
00:03:55.100 --> 00:04:00.050
The reason I had you create this table through Heidi Eskew well is because Heidi will generate the query

48
00:04:00.050 --> 00:04:01.790
for us in two locations.

49
00:04:01.910 --> 00:04:06.500
If you look at the bottom you'll notice all these sequel queries being executed.

50
00:04:06.500 --> 00:04:08.520
It even has the create query.

51
00:04:08.600 --> 00:04:11.860
However it's all compressed into this one line.

52
00:04:12.090 --> 00:04:18.370
There is actually a more cleaner and formatted version which is available under this create code tab.

53
00:04:18.410 --> 00:04:22.800
Copy this and make sure you have it in hand when we create this table view code.

54
00:04:23.540 --> 00:04:29.210
I want to create this through our plugin and not through Heidi yes you Well let's open the activation

55
00:04:29.210 --> 00:04:30.830
file and get started.

56
00:04:30.830 --> 00:04:35.540
The first thing I want to do is include the global variable w PDB.

57
00:04:35.630 --> 00:04:40.840
This variable contains an object with methods and properties for interacting with the database.

58
00:04:40.850 --> 00:04:46.270
This object is created by WordPress for you and is already connected to the database.

59
00:04:46.310 --> 00:04:52.430
I'm going to create a variable named create sequel and this will contain a string with our sequel.

60
00:04:52.430 --> 00:04:58.220
Let's copy and paste the query from Heidi yes well into this string like so I'm going to format this

61
00:04:58.220 --> 00:05:04.620
a bit by inventing some stuff just to make it look a little bit cleaner and readable.

62
00:05:04.680 --> 00:05:09.670
We need to modify this query a bit to be compatible and consistent with our database.

63
00:05:09.720 --> 00:05:16.570
First is the prefix not all installations of WordPress will be prefixed with WP underscore.

64
00:05:16.680 --> 00:05:24.720
So I want you to remove this bit and instead we're going to append dynamic prefix the WP PDB object

65
00:05:24.720 --> 00:05:30.510
contains a property named prefix and this property simply contain the prefix of the current wordpress

66
00:05:30.510 --> 00:05:33.500
installation.

67
00:05:33.500 --> 00:05:36.110
Next up is making the carousel dynamic.

68
00:05:36.350 --> 00:05:41.780
The WP DV object has a method called get care set Coley as it sounds.

69
00:05:41.810 --> 00:05:45.570
This will get the coalition of the currently installed database.

70
00:05:45.650 --> 00:05:51.110
I'm going to modify this end of the query a little bit.

71
00:05:51.230 --> 00:05:55.120
We don't have to make any further modifications to our sequel query.

72
00:05:55.160 --> 00:05:57.800
All we have to do now is execute it.

73
00:05:57.800 --> 00:06:03.370
You may be thinking that there is a method in the WP DB object for doing this but there isn't.

74
00:06:03.410 --> 00:06:08.030
Strangely enough WordPress doesn't include a create table method.

75
00:06:08.060 --> 00:06:10.960
Instead we have to use a different function.

76
00:06:11.000 --> 00:06:22.020
I'm going to require a file called slash WP dash admin slash includes slash upgrade dot P. HP I also

77
00:06:22.020 --> 00:06:25.310
appended this to a constant named Abas path.

78
00:06:25.380 --> 00:06:31.490
This constant is created by Wordpress and points to the root installation of our WordPress site.

79
00:06:31.530 --> 00:06:39.750
We have to include this file so we can use a function called DB Delta this file usually isn't loaded

80
00:06:39.780 --> 00:06:46.950
so we have to load it the DB delta function is used for executing queries that modify the database and

81
00:06:46.950 --> 00:06:50.180
the resource section I provide a link to this function.

82
00:06:50.250 --> 00:06:54.990
If you take a look at the source code you'll find all this code that will assist us with creating a

83
00:06:54.990 --> 00:06:55.980
database.

84
00:06:55.980 --> 00:06:59.200
Here is what WordPress has to say about this function.

85
00:06:59.340 --> 00:07:04.870
Useful for creating new tables and updating existing tables to a new structure.

86
00:07:04.890 --> 00:07:08.980
I'm going to pass this function for our query.

87
00:07:09.170 --> 00:07:09.890
That's it.

88
00:07:09.920 --> 00:07:10.400
We're done.

89
00:07:10.880 --> 00:07:12.110
I'm gonna go back to Heidi.

90
00:07:12.110 --> 00:07:12.820
Yes you will.

91
00:07:12.830 --> 00:07:20.720
And I'm going to drop the newly created table dropping a table is just another way of saying deleting

92
00:07:20.720 --> 00:07:28.650
it back inside WordPress lets the activator plug in and then reactivated.

93
00:07:28.780 --> 00:07:30.670
You should not get any errors.

94
00:07:30.730 --> 00:07:33.850
Go back to Heidi yes you will and refresh the database.

95
00:07:33.850 --> 00:07:37.830
You should see the recipe ratings table pop up again.

96
00:07:37.840 --> 00:07:43.770
I know this can seem a bit confusing but working with the database is actually easier than this.

97
00:07:43.780 --> 00:07:50.200
Ninety five percent of the time you won't have to worry about requiring certain files creating updating

98
00:07:50.290 --> 00:07:53.920
and deleting tables requires the upgrade file.

99
00:07:53.920 --> 00:07:57.470
The reason this file is required is because of security reasons.

100
00:07:57.520 --> 00:08:03.550
It's not normal to load functions specifically made for updating creating and deleting tables on every

101
00:08:03.550 --> 00:08:04.830
page request.

102
00:08:04.900 --> 00:08:10.390
If this function was loaded everywhere then it would cause some serious security issues for web developers

103
00:08:10.390 --> 00:08:11.590
and owners.

104
00:08:11.650 --> 00:08:17.170
WordPress provides a lot of methods for executing queries and takes care of sanitizing your queries

105
00:08:17.170 --> 00:08:17.730
for you.

106
00:08:18.160 --> 00:08:22.520
So I promise creating a query like this is a one time thing.

107
00:08:22.750 --> 00:08:28.090
If you're interested in learning more about this process then I provide a link to a wordpress developer

108
00:08:28.090 --> 00:08:30.220
page that provides details about this.
