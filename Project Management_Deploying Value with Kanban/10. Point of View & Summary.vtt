WEBVTT
1
00:00:01.240 --> 00:00:05.470
Here is my point of view: not all of these scenarios may work in your situation.

2
00:00:05.470 --> 00:00:07.040
I have given you many choices,

3
00:00:07.040 --> 00:00:10.030
and you can pick and choose one or more to keep the work flowing.

4
00:00:10.030 --> 00:00:13.700
The point being is that you can see how flexible Kanban can be.

5
00:00:13.700 --> 00:00:17.740
So it's obvious that late or buggy work you receive has large implications

6
00:00:17.740 --> 00:00:20.740
for your team, as well as for your downstream partners.

7
00:00:20.740 --> 00:00:23.710
There will be an increase in the risk of poor quality,

8
00:00:23.710 --> 00:00:26.440
and this may affect the reputation of your team as well.

9
00:00:26.440 --> 00:00:27.290
Using fakes,

10
00:00:27.290 --> 00:00:30.000
stubs, and mocks should just be a normal best

11
00:00:30.000 --> 00:00:31.830
practice in the way you develop systems,

12
00:00:31.830 --> 00:00:38.340
whether you use Agile Scrum, Kanban, or anything else for that matter.

13
00:00:38.340 --> 00:00:40.370
Here are the key points of this module.

14
00:00:40.370 --> 00:00:43.790
Larger organizations can present challenges to development

15
00:00:43.790 --> 00:00:46.300
teams, such as concurrent release schedules,

16
00:00:46.300 --> 00:00:51.320
larger team sizes, integrating large components, systems, databases, you name it.

17
00:00:51.320 --> 00:00:54.360
Another challenge is the presence of a variety of development

18
00:00:54.360 --> 00:00:57.770
approaches or methods, such as Kanban, Agile Scrum,

19
00:00:57.770 --> 00:01:00.540
Waterfall, or just a roll your own approach.

20
00:01:00.540 --> 00:01:04.340
Determining and assigning work to multiple teams' backlogs takes a

21
00:01:04.340 --> 00:01:08.590
thoughtful approach. One approach may be to divide up work types like use

22
00:01:08.590 --> 00:01:12.460
cases versus services and possibly a hybrid approach that I like the best

23
00:01:12.460 --> 00:01:16.710
in some cases. The flow of work into a team and out of a team is more

24
00:01:16.710 --> 00:01:21.150
complex with multiple teams feeding backlogs of other teams, and so we need

25
00:01:21.150 --> 00:01:25.190
to pay special attention to the order by which teams are fed work as well.

26
00:01:25.190 --> 00:01:26.440
This is critical.

27
00:01:26.440 --> 00:01:27.040
Regular,

28
00:01:27.040 --> 00:01:31.900
organized, and consistent communication is essential. With large projects in

29
00:01:31.900 --> 00:01:36.660
large organizations, I strongly recommend a focused project management level of

30
00:01:36.660 --> 00:01:41.400
effort, and even in smaller organizations too. Please consider a PM role to

31
00:01:41.400 --> 00:01:43.540
keep things moving forward more smoothly.

32
00:01:43.540 --> 00:01:46.700
Late and buggy dependencies can wreak havoc on your

33
00:01:46.700 --> 00:01:48.440
productivity and flow of work.

34
00:01:48.440 --> 00:01:51.450
We talked about how we modified the Kanban board to track

35
00:01:51.450 --> 00:01:54.830
late and buggy work and reintegrate the corrected or late

36
00:01:54.830 --> 00:01:56.690
work back into our value stream.

37
00:01:56.690 --> 00:02:00.870
We also discussed how fakes, shims, and mocks can be used as placeholders,

38
00:02:00.870 --> 00:02:03.650
if you will, to enable work to keep moving forward,

39
00:02:03.650 --> 00:02:05.240
albeit not perfectly.

40
00:02:05.240 --> 00:02:10.190
Lastly, late dependencies can be really challenging and exhausting to your team,

41
00:02:10.190 --> 00:02:16.910
but it will happen, so be prepared with your techniques to handle them. Up next,

42
00:02:16.910 --> 00:02:22.000
Applying Key Learning Objectives and summarizing this course. I'll see you there.

