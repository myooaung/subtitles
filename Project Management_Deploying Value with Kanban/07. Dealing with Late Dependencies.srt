1
00:00:01,040 --> 00:00:03,190
As I mentioned earlier in this module,

2
00:00:03,190 --> 00:00:07,130
the enterprise level planning and the integrating of multiple development teams,

3
00:00:07,130 --> 00:00:10,690
some Kanban, some Agile Scrum, and some maybe even just

4
00:00:10,690 --> 00:00:13,480
roll your own, can be quite complex.

5
00:00:13,480 --> 00:00:16,380
The remaining sections of this module will address how you can best

6
00:00:16,380 --> 00:00:19,340
focus on handling and dealing with these complexities.

7
00:00:19,340 --> 00:00:23,140
Quite frankly, the enterprise world is likely beyond your control anyway.

8
00:00:23,140 --> 00:00:29,410
Okay, the first is dealing with late dependencies. Late dependencies.

9
00:00:29,410 --> 00:00:30,240
What are they?

10
00:00:30,240 --> 00:00:34,630
Well, it is when a use case or service that your team needs is late, therefore,

11
00:00:34,630 --> 00:00:37,860
making your work late for teams further down the value

12
00:00:37,860 --> 00:00:40,450
stream. You can see the cascading effect.

13
00:00:40,450 --> 00:00:43,720
If the upstream work is late to your team and your work

14
00:00:43,720 --> 00:00:45,650
is late to your downstream teams,

15
00:00:45,650 --> 00:00:52,340
it can affect multiple downstream teams and the whole project's timeline.

16
00:00:52,340 --> 00:00:55,550
Here is an approach on how you can modify your Kanban board

17
00:00:55,550 --> 00:00:58,980
to deal with late dependencies since this is an area that you

18
00:00:58,980 --> 00:01:01,530
do have complete control over.

19
00:01:01,530 --> 00:01:04,730
So let's say you've been informed that a work item you are expected to be

20
00:01:04,730 --> 00:01:08,040
placed in your backlog by an upstream partner is late.

21
00:01:08,040 --> 00:01:13,160
What you can do then is at a late area to your backlog and a late column to

22
00:01:13,160 --> 00:01:17,470
your implement step to track the late dependencies. For each backlog item or

23
00:01:17,470 --> 00:01:21,570
work item that is affected by a late dependency, mark it as blocked with the

24
00:01:21,570 --> 00:01:26,340
reason of the late dependency. Asâ€‘is normal for all Kanban standups, the

25
00:01:26,340 --> 00:01:30,270
team reviews each blocked item, and especially, the late dependency items

26
00:01:30,270 --> 00:01:32,020
each and every day.

27
00:01:32,020 --> 00:01:36,340
Now let's go into a little more detail with an example.

28
00:01:36,340 --> 00:01:38,300
Here is our typical Kanban board we have been

29
00:01:38,300 --> 00:01:40,110
using, in general, for this course.

30
00:01:40,110 --> 00:01:43,920
Now let's annotate the board further and add some more visual cues.

31
00:01:43,920 --> 00:01:47,740
The black boxes represent our work in progress resource limits per step,

32
00:01:47,740 --> 00:01:50,910
two in specify, three in implement, and one in validate.

33
00:01:50,910 --> 00:01:53,230
Now let's add some done rules right on the board.

34
00:01:53,230 --> 00:01:55,240
I added them on the bottom in blue.

35
00:01:55,240 --> 00:01:58,080
This is important since you'll want the team to easily see and fully

36
00:01:58,080 --> 00:02:00,690
understand the done rules while the stand up is an action,

37
00:02:00,690 --> 00:02:01,800
or when they view the board,

38
00:02:01,800 --> 00:02:04,970
either in person or online. No one needs to remember anything.

39
00:02:04,970 --> 00:02:07,010
All the information is right on the board.

40
00:02:07,010 --> 00:02:09,950
Now let's fill in the board to complete our initial setup for our

41
00:02:09,950 --> 00:02:12,470
example. So we have our backlog on the left.

42
00:02:12,470 --> 00:02:15,350
Let's say we are using color cards to illustrate the work type.

43
00:02:15,350 --> 00:02:20,840
We have divided our steps into two sub columns, work in progress, WIP, and done.

44
00:02:20,840 --> 00:02:22,670
We have added our done rules to the bottom,

45
00:02:22,670 --> 00:02:25,940
and we have our work in progress limits shown as black boxes.

46
00:02:25,940 --> 00:02:29,110
Now let's see how we will modify a typical Kanban board

47
00:02:29,110 --> 00:02:33,140
to accommodate late dependencies.

48
00:02:33,140 --> 00:02:35,170
Now, let me go through the scenarios here.

49
00:02:35,170 --> 00:02:38,630
So I added an area in our backlog called Late.

50
00:02:38,630 --> 00:02:39,120
Next,

51
00:02:39,120 --> 00:02:42,700
I added a new column in the implement step called Late for late

52
00:02:42,700 --> 00:02:46,600
dependencies and this late column will represent any work item that

53
00:02:46,600 --> 00:02:49,970
was in the implement steps work in progress and was waiting for an

54
00:02:49,970 --> 00:02:52,240
upstream work items such as a service.

55
00:02:52,240 --> 00:02:56,050
Let's say this purple work in progress item is waiting for a dependency.

56
00:02:56,050 --> 00:03:00,140
We will move the card to the late column and mark it blocked with a big L.

57
00:03:00,140 --> 00:03:03,500
The freed resource and implement can now pull new work forward

58
00:03:03,500 --> 00:03:06,630
from the done column of the specify step and try and keep as

59
00:03:06,630 --> 00:03:08,720
much work moving forward as possible.

60
00:03:08,720 --> 00:03:11,900
Let's say two work items arrive late into our backlog.

61
00:03:11,900 --> 00:03:16,040
I want to keep the late ones in a separate area so we can easily identify them.

62
00:03:16,040 --> 00:03:19,240
So when there is an available resource in the implement step,

63
00:03:19,240 --> 00:03:22,300
I can move the block purple one back into the work in

64
00:03:22,300 --> 00:03:25,610
progress and consume the late work item from the backlog

65
00:03:25,610 --> 00:03:27,710
area into my implement work item.

66
00:03:27,710 --> 00:03:29,610
Those two will then match up.

67
00:03:29,610 --> 00:03:31,120
Is this the only way to do this?

68
00:03:31,120 --> 00:03:31,480
Well,

69
00:03:31,480 --> 00:03:37,540
certainly not, but it is certainly a place to start and evolve as you see fit.

70
00:03:37,540 --> 00:03:41,110
Please note you have the freedom to design your board any way you

71
00:03:41,110 --> 00:03:44,270
want as long as it adds value to the business.

72
00:03:44,270 --> 00:03:52,000
That is why Kanban has immense power. You are not constrained like some other software development methodologies are.

