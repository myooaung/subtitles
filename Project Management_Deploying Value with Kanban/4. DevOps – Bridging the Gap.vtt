WEBVTT
1
00:00:01.040 --> 00:00:03.990
Now let's talk about DevOps and how it bridges the gap

2
00:00:03.990 --> 00:00:08.740
between development and production operations.

3
00:00:08.740 --> 00:00:12.650
Now, let's revisit our Kanban value stream running example.

4
00:00:12.650 --> 00:00:15.690
We have specify, implement, validate, deliver,

5
00:00:15.690 --> 00:00:19.030
and of course, the backlog is feeding into the specify step.

6
00:00:19.030 --> 00:00:21.720
The concept of DevOps is that we want to marry

7
00:00:21.720 --> 00:00:23.880
development with the operations side.

8
00:00:23.880 --> 00:00:27.440
Let's see how that's done.

9
00:00:27.440 --> 00:00:32.800
So dev plus ops, or development and operations, equals DevOps.

10
00:00:32.800 --> 00:00:36.150
We want the entire cycle, also referred to as the pipeline,

11
00:00:36.150 --> 00:00:39.690
to be a smooth process end to end, from specify,

12
00:00:39.690 --> 00:00:42.120
implement, validate, deliver on the left,

13
00:00:42.120 --> 00:00:45.710
to deploy, configure, monitor, and maintain on the right.

14
00:00:45.710 --> 00:00:46.530
In the past,

15
00:00:46.530 --> 00:00:48.710
the most challenging place to connect development with

16
00:00:48.710 --> 00:00:51.480
operations is easier to see if we remove,

17
00:00:51.480 --> 00:00:54.880
specify, implement, validate, and also remove,

18
00:00:54.880 --> 00:00:57.030
configure, monitor, and maintain.

19
00:00:57.030 --> 00:01:01.250
These two roads can now be connected much more smoothly between deliver and

20
00:01:01.250 --> 00:01:05.260
deploy by using and leveraging the great tools of DevOps.

21
00:01:05.260 --> 00:01:09.720
Also, sometimes operations includes easy lowâ€‘level application maintenance,

22
00:01:09.720 --> 00:01:10.710
and sometimes not.

23
00:01:10.710 --> 00:01:13.440
All of these approaches and configurations of Kanban,

24
00:01:13.440 --> 00:01:16.890
agile, scrum, and operations and production can be designed

25
00:01:16.890 --> 00:01:19.090
as you see fit for your organization.

26
00:01:19.090 --> 00:01:20.710
There is no one best way.

27
00:01:20.710 --> 00:01:22.560
But as I have showed you in this course,

28
00:01:22.560 --> 00:01:24.930
I have presented an approach to get you started, and

29
00:01:24.930 --> 00:01:28.140
you can enhance it from there.

30
00:01:28.140 --> 00:01:30.200
Let's see how DevOps got its start.

31
00:01:30.200 --> 00:01:33.640
First, lean and agile revolutionized software development.

32
00:01:33.640 --> 00:01:37.350
We have come a long way from the linear waterfall or traditional

33
00:01:37.350 --> 00:01:40.550
approach to software development, and thank goodness. The agile or

34
00:01:40.550 --> 00:01:43.730
lean approach to software development spawned scrum, Kanban,

35
00:01:43.730 --> 00:01:45.600
extreme programming, and many more.

36
00:01:45.600 --> 00:01:48.540
The most common seems to be agile, scrum, and Kanban today.

37
00:01:48.540 --> 00:01:51.470
But what these new approaches to software development did

38
00:01:51.470 --> 00:01:55.880
not do is tackle or reduce the giant chasm or gap between

39
00:01:55.880 --> 00:01:57.680
the developers and operations.

40
00:01:57.680 --> 00:02:01.310
You've probably heard the phrase "just throw it over the wall," and that

41
00:02:01.310 --> 00:02:04.140
is still very typical in some organizations today.

42
00:02:04.140 --> 00:02:07.340
DevOps started officially about 2008 and 9 in Europe,

43
00:02:07.340 --> 00:02:09.240
and it is here to stay for sure.

44
00:02:09.240 --> 00:02:13.250
So the key takeaway is that DevOps lets us better provide

45
00:02:13.250 --> 00:02:16.780
continuous value to our customers all the way through the

46
00:02:16.780 --> 00:02:20.870
process, again, from backlog to installed into production and

47
00:02:20.870 --> 00:02:24.540
our customers using the software.

48
00:02:24.540 --> 00:02:29.370
Now for a more formal definition of DevOps. DevOps is a set of practices

49
00:02:29.370 --> 00:02:32.990
that combines software development and the IT operations.

50
00:02:32.990 --> 00:02:36.810
Its goal is to shorten the systems development lifecycle and provide

51
00:02:36.810 --> 00:02:39.840
continuous deployment with high software quality.

52
00:02:39.840 --> 00:02:46.000
And DevOps is just so complementary with lean and agile software development. It really is a marriage made in heaven.

