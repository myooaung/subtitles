1
00:00:01,040 --> 00:00:05,440
Okay, so let's first look at bottlenecks.

2
00:00:05,440 --> 00:00:07,600
Let's start with bottlenecks for Agile Scrum.

3
00:00:07,600 --> 00:00:11,150
For example, if your velocity slows down for a variety of reasons,

4
00:00:11,150 --> 00:00:14,170
then you are producing less outcomes and work items will build up

5
00:00:14,170 --> 00:00:16,390
in the backlog and can become a bottleneck.

6
00:00:16,390 --> 00:00:19,480
Uncompleted work items may be pushed to the next sprint based on your

7
00:00:19,480 --> 00:00:22,590
sprint planning, but that means some of the work you were planning for must

8
00:00:22,590 --> 00:00:26,720
wait and remain in the backlog furthering the bottleneck. Or uncompleted

9
00:00:26,720 --> 00:00:30,280
work items are simply placed back on the backlog and will be discussed at

10
00:00:30,280 --> 00:00:31,950
future sprint planning meetings.

11
00:00:31,950 --> 00:00:35,480
What can be difficult is looking inside the sprint to see

12
00:00:35,480 --> 00:00:37,570
what is really causing the bottleneck.

13
00:00:37,570 --> 00:00:40,250
Sometimes you don't know until the end of the sprint that you

14
00:00:40,250 --> 00:00:42,440
did not complete some of your story points.

15
00:00:42,440 --> 00:00:43,120
Typically,

16
00:00:43,120 --> 00:00:45,850
if story points are completed, the system will track those

17
00:00:45,850 --> 00:00:47,840
so you can see what you have finished, say,

18
00:00:47,840 --> 00:00:51,630
85% of your story points, but it is difficult to visually see

19
00:00:51,630 --> 00:00:53,740
where the problem is or what caused it.

20
00:00:53,740 --> 00:00:56,200
Could it be testing, maybe more training is needed,

21
00:00:56,200 --> 00:00:58,790
and you won't always know until the sprint review,

22
00:00:58,790 --> 00:01:04,140
retrospective, or even the next sprint planning meeting.

23
00:01:04,140 --> 00:01:07,270
Let's see how we can identify a bottleneck with Kanban.

24
00:01:07,270 --> 00:01:08,830
Here is our value stream.

25
00:01:08,830 --> 00:01:13,120
I have tweaked it a bit and added double columns per step, one for work in

26
00:01:13,120 --> 00:01:17,650
progress, WIP, and one for done, that is the work is complete.

27
00:01:17,650 --> 00:01:21,150
We have six resources applied, two in specify, three

28
00:01:21,150 --> 00:01:23,040
in implement, and one in validate.

29
00:01:23,040 --> 00:01:24,860
I am showing those with boxes.

30
00:01:24,860 --> 00:01:29,050
Now let's overlay our work item cards for some point in time as follows.

31
00:01:29,050 --> 00:01:30,270
Here is our backlog.

32
00:01:30,270 --> 00:01:33,310
This is what's going on in the specify step, two work

33
00:01:33,310 --> 00:01:35,590
items in progress and two are complete.

34
00:01:35,590 --> 00:01:37,170
Next is the implement step.

35
00:01:37,170 --> 00:01:39,980
We have three resources, but only two are busy and

36
00:01:39,980 --> 00:01:42,190
we have five work items complete.

37
00:01:42,190 --> 00:01:46,110
Our validate step has only one resource allocated and they are busy

38
00:01:46,110 --> 00:01:49,060
and we have three work items completed. And lastly,

39
00:01:49,060 --> 00:01:52,940
the work we delivered. Okay, now there is a lot to impact on this slide.

40
00:01:52,940 --> 00:01:54,740
If you need to brush up on this,

41
00:01:54,740 --> 00:01:58,150
please check out my course Kanban for Agile Scrum Practitioners.

42
00:01:58,150 --> 00:01:58,570
Okay.

43
00:01:58,570 --> 00:02:01,730
Can you see where the most significant bottleneck is?

44
00:02:01,730 --> 00:02:04,480
Okay, a quick quiz, we can see that the cards are

45
00:02:04,480 --> 00:02:07,380
stacking up in the done column of implement.

46
00:02:07,380 --> 00:02:11,240
That's where the arrow is showing right now, but that is not the bottleneck.

47
00:02:11,240 --> 00:02:15,780
The bottleneck is the step after the done step where the cards are stacking up.

48
00:02:15,780 --> 00:02:18,720
Therefore, the bottleneck is in the validate step.

49
00:02:18,720 --> 00:02:19,810
So in this case,

50
00:02:19,810 --> 00:02:23,280
we do not have enough resources, the validate step, to pull

51
00:02:23,280 --> 00:02:27,560
the implement done cards forward for a smooth workflow. Now

52
00:02:27,560 --> 00:02:29,090
look again at the implement step.

53
00:02:29,090 --> 00:02:31,170
It is not the bottleneck, in fact,

54
00:02:31,170 --> 00:02:38,040
it is cranking out work very well and even has one free resource.

55
00:02:38,040 --> 00:02:39,440
Let's recap bottlenecks.

56
00:02:39,440 --> 00:02:42,490
Bottlenecks are part of all development approaches,

57
00:02:42,490 --> 00:02:46,110
it's how they're handled that counts. Kanban provides better

58
00:02:46,110 --> 00:02:53,000
visibility with more granularity and Kanban provides more timely identification and remediation.

