WEBVTT

00:02.240 --> 00:03.760
I'm happy with the state

00:03.890 --> 00:10.010
our application reached. You can always do more, change more, edit more

00:10.010 --> 00:13.020
but I'm very happy with both our back-end and front-end

00:13.280 --> 00:17.320
but there's one thing I still want to do. Right now,

00:17.330 --> 00:23.300
we have some redundancy in our code, like for example that URL in the posts service.

00:23.300 --> 00:28.330
If that would change for some reason, we need to change it in all these places,

00:28.480 --> 00:32.030
now that's certainly possible but not optimal.

00:32.030 --> 00:35.050
We also for example have a setting in the app.js

00:35.070 --> 00:41.550
file on the back-end, this password. If that changes we have to visit this file and edit it here

00:41.690 --> 00:46.770
and if our app was deployed already, it means we have to edit our source code and redeploy,

00:46.850 --> 00:49.880
even though just some configuration changed.

00:49.880 --> 00:54.110
So this is something we can probably handle a bit more elegant, by the way

00:54.110 --> 00:56.180
the same is true for our secret

00:56.180 --> 00:57.860
we use for creating a token.

00:57.860 --> 01:01.650
We store it here in the user.js file and in the check-auth file.

01:02.060 --> 01:05.800
I want to manage these things with global settings,

01:06.230 --> 01:12.660
so let's implement this step-by-step and let's start on the front-end in Angular with this URL.

01:13.010 --> 01:19.840
Of course we can easily manage this globally, we could add a new constant outside of our class here which

01:19.860 --> 01:29.490
I'll name BACKEND_URL, all caps to make clear that is is a constant, a file-wide constant

01:29.730 --> 01:31.030
and then I just grab that

01:31.070 --> 01:37.520
URL here, put it in here and now all the places where I used this URL,

01:37.520 --> 01:40.480
I just use BACKEND_URL instead.

01:40.490 --> 01:44.620
So I use that here and I use that here

01:44.900 --> 01:50.300
and so on. So we replace it everywhere and we can do that here since we always have that same URL,

01:50.450 --> 01:53.910
if it differs of course, you have to adjust it.

01:53.960 --> 01:55.100
So now this is better,

01:55.100 --> 01:59.160
now the app should work as it did before and it does

01:59.330 --> 02:03.320
but we're managing this in a global place. Now we don't just use that

02:03.320 --> 02:05.410
URL in the posts service though, 

02:05.570 --> 02:08.030
well we use that exact URL there

02:08.210 --> 02:14.030
but in the auth service, we have the same domain at least. We have a different ending thereafter, we have

02:14.060 --> 02:16.410
API user instead of API post

02:16.520 --> 02:22.290
but the domain and even the API part is part of every URL we have,

02:22.490 --> 02:24.780
so we can probably enhance this a bit more.

02:25.130 --> 02:31.880
We could add a global configuration file where we have this common trunk which we import into both the

02:31.880 --> 02:38.780
auth service and the posts service and then we just add /posts or /users after this trunk

02:38.960 --> 02:42.390
to build the URL as we need it. Now

02:42.410 --> 02:48.220
thankfully, we got an even better way with the help of the Angular CLI. There

02:48.380 --> 02:54.430
we get this environments folder in the CLI project where we have the environment.ts file

02:54.500 --> 02:57.370
and here we can set up so-called environment variables.

02:57.380 --> 03:03.830
This means these are global variables which we can import in our files and we can even change them

03:04.040 --> 03:11.870
for the production and development mode because in our case here even, we have that URL in development

03:12.170 --> 03:15.110
but we will not deploy our app on localhost,

03:15.170 --> 03:20.480
so this gives us a convenient way of always getting the right URL for both cases, developing

03:20.480 --> 03:26.330
on our local machine where we want to have a localhost domain and for the deployed app when we build

03:26.330 --> 03:33.400
it for production where we want to have the URL of our, well server where we are deploying it to.

03:33.950 --> 03:36.870
So we can now adjust our code even more

03:37.220 --> 03:39.060
and we take that common trunk,

03:39.140 --> 03:44.600
so the domain and API and put it into that environment folder here.

03:45.000 --> 03:47.360
There we can simply add a new key,

03:47.570 --> 03:54.210
for example apiurl which is a string which holds this trunk

03:54.440 --> 04:00.500
and now we just import that into the files where we're interested, like in the posts service. There I

04:00.500 --> 04:12.750
can still construct my file-wide constant but I will also add an import, I'll import this environment object

04:13.750 --> 04:21.170
which is exported in the environments folder and there in the environment file to be precise.

04:22.930 --> 04:29.200
I'm importing this and now I can construct my BACKEND_URL by using environment apiurl and

04:29.200 --> 04:36.610
then posts and I will copy that and go to the auth service and I will add it there

04:36.610 --> 04:38.350
too. Now one adjustment,

04:38.350 --> 04:44.890
I don't need the post model here but I need that environment import and my BACKEND_URL here simply

04:44.890 --> 04:46.690
has /users,

04:49.260 --> 04:52.270
/user I mean. So /user

04:52.500 --> 04:57.900
and now we can grab that BACKEND_URL and again, replace the parts that need to be replaced.

04:57.900 --> 05:04.380
So here, I would actually say BACKEND_URL plus /signup and down there, it would be

05:08.770 --> 05:12.230
BACKEND_URL plus /login.

05:12.550 --> 05:16.450
And now again, the app should still work fine.

05:16.670 --> 05:22.630
If I do log-out and try that login again, this seems to be working,

05:22.730 --> 05:26.350
deleting does not work though.

05:26.570 --> 05:32.530
The reason for that really just is that I got an error in my delete route

05:32.540 --> 05:35.030
now, if I go down,

05:40.030 --> 05:46.010
I need to add a slash here or to be precise,

05:46.060 --> 05:54.810
I can simply add that slash at the top after posts and also I could do the same for auth service at the

05:54.810 --> 06:01.320
top after user. Just to be safe that whenever I need to attach some information after that part, I already

06:01.320 --> 06:06.970
have that slash in there which is required to build a correct URL. Now deleting works again.

06:06.990 --> 06:12.660
So now we're managing this globally which is a great first step. In the next lecture, we'll have a look

06:12.930 --> 06:15.810
at how we can do the same for the back-end.
