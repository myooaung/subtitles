WEBVTT

00:02.280 --> 00:09.140
I already mentioned that angular thinks in components, that components are one of these crucial things

00:09.150 --> 00:11.840
you have to understand when working with angular.

00:12.060 --> 00:16.360
Essentially you compose an entire page of these components,

00:16.470 --> 00:22.620
you build it with these components because the advantage of this is that you have small, easily to maintain

00:22.620 --> 00:28.800
and manage building blocks for your UI which you can even reuse because some components appear more

00:28.800 --> 00:30.510
than once on a page.

00:31.140 --> 00:38.850
Now here's a screenshot from the official angular.io page and we can easily deconstruct this into different

00:38.850 --> 00:45.890
components to understand this way of thinking in components. We could think of having a header, a brand

00:46.290 --> 00:48.120
and some feature component,

00:48.150 --> 00:54.430
so three sections of the page which are kind of independent from each other and which we can define

00:54.440 --> 00:59.400
in their own components so that we can easily manage the code for that given part of the page

00:59.910 --> 01:04.500
but we can and we should be even more granular than that.

01:04.650 --> 01:10.890
We can clearly identify some navigation items in the header and our search and even in the navigation

01:10.980 --> 01:16.320
items, we could argue that each navigation item on its own is its own component.

01:16.320 --> 01:19.830
Now you can of course go as granular as you want,

01:19.830 --> 01:25.470
it probably doesn't make sense to wrap a single html element into its own component, at least in most

01:25.470 --> 01:33.450
cases but if you got a certain part of your UI that really is decoupled from other elements on the UI

01:33.690 --> 01:37.320
and that probably also contains some logic, like the search here,

01:37.410 --> 01:45.040
it definitely has some logic like type ahead or filtering or showing some preview,

01:45.180 --> 01:50.040
so if you get that, then you want to put it into its own component so that you can easily manage the code

01:50.190 --> 01:51.630
and possibly reuse it,

01:51.630 --> 01:55.240
that search could be used in other parts of the application too

01:55.770 --> 02:00.600
and we can also do that here for the bottom of this screen shot in the feature component.

02:00.600 --> 02:05.970
Now this could be all in one component but maybe we even split that up a bit more because we might want

02:05.970 --> 02:11.640
to reuse that image, maybe it contains some logic for lazy-loading the image and we want to use that on other

02:11.640 --> 02:13.100
parts of the page too.

02:13.380 --> 02:20.420
So as you can see, you can go very granular and you probably already knew that if you worked with angular

02:20.430 --> 02:28.080
before and we will go granular in this course too, we will build our mean stack application, the frontend

02:28.080 --> 02:28.780
of it,

02:28.920 --> 02:32.630
we will build that with a lot of angular components.

02:32.700 --> 02:34.740
So let's get started writing some code

02:34.750 --> 02:37.200
and let's dive into that component world.
