WEBVTT

00:02.260 --> 00:04.880
So what was mongodb again?

00:05.050 --> 00:11.800
Well mongodb is a NoSQL database which stores documents and collections

00:11.800 --> 00:18.610
and if you're coming from a SQL background as many web developers are, well documents would be your

00:18.610 --> 00:25.420
equivalent to records kind of and collections would be what you know as tables in SQL.

00:25.420 --> 00:26.440
So it's a database,

00:26.440 --> 00:28.330
it runs on a server,

00:28.750 --> 00:37.690
you store application data there like your users, your products or in our application, the posts. It

00:37.690 --> 00:41.050
enforces no data schema or relations,

00:41.080 --> 00:44.320
so the individual records can actually be structured how we want

00:44.350 --> 00:52.720
and whilst we can add some type of relations, relations play less of a role than they do in SQL and

00:52.780 --> 00:56.590
it's easily connected to node and express, that's also great about mongodb,

00:56.710 --> 01:03.070
we can easily add it to a node express backend, not directly to angular though and I'll come back

01:03.070 --> 01:05.080
to this in a few minutes.

01:05.080 --> 01:10.810
So overall, mongodb is a powerful database which we can easily integrate into our node express

01:10.810 --> 01:16.740
environment which of course is great because that is exactly the environment we have in that course.

01:16.820 --> 01:22.570
Now one thing that's really important to me though, we will use mongodb here because that mean stack

01:22.570 --> 01:30.280
thing is really popular but you could theoretically swap it for any other database, so for any SQL database

01:30.280 --> 01:32.890
like MySQL if you preferred this.

01:33.400 --> 01:35.320
So that of course leaves one question,

01:35.380 --> 01:43.180
why are we using mongodb and what's the difference between mongodb or NoSQL databases in general

01:43.540 --> 01:46.570
and SQL solutions like MySQL?
