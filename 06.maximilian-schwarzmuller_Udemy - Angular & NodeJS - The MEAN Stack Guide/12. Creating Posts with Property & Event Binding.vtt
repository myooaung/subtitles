WEBVTT

00:02.150 --> 00:05.030
So it would be nice if we could add posts, right

00:05.030 --> 00:06.860
and to be able to do so

00:06.890 --> 00:13.100
we first of all need to add one more input field to our well post-create.component,

00:13.160 --> 00:15.680
right now we only got the text area,

00:15.680 --> 00:23.000
I will actually add one additional one, mat form field here and in there, I'll add a normal input for

00:23.000 --> 00:24.140
the title.

00:24.140 --> 00:31.530
Now important, to turn this into a material input field, we have to add mat input and this now,

00:31.550 --> 00:34.540
well as I said should give me the title I want to add.

00:34.760 --> 00:42.260
So here I will for now also use two-way binding, I'll rename this to entered content and I will have

00:42.260 --> 00:45.730
the entered title

00:45.890 --> 00:52.630
too, we can also get rid of new post, also down there,

00:52.930 --> 01:00.280
maybe swap positions there to have the title first, go back to the template and use entered content

01:00.280 --> 01:00.770
here

01:00.910 --> 01:09.430
and on the first input, use ngModel and two-way binding to bind this to the entered title.

01:09.730 --> 01:11.780
So now this is all up to date,

01:11.920 --> 01:18.640
now we can create a new post in on add post, store it in a constant because we're not changing it,

01:18.710 --> 01:25.390
new javascript object where we have a title property and where we store the entered title and where

01:25.390 --> 01:30.170
we have the content property to store the entered content.

01:30.440 --> 01:33.510
We can also structure this over multiple lines to make it a bit easier

01:34.480 --> 01:37.360
to read I guess.

01:37.430 --> 01:40.100
Now the thing is this post is here,

01:40.120 --> 01:40.930
that's cool,

01:40.960 --> 01:43.920
how do we get it into the other component?

01:44.350 --> 01:50.170
We can use this property and event binding thing you learned about with the click listener and so on, we

01:50.170 --> 01:52.450
can use that on our own components too.

01:52.690 --> 01:59.440
We can emit our own events and we can also send data into a component and we want to emit an event

01:59.440 --> 02:01.520
here in post create, we want to emit

02:01.540 --> 02:07.000
an hey I got a new post event and we want to listen to that event in the app component which is where

02:07.000 --> 02:08.840
we were using the post create.

02:09.190 --> 02:17.200
We then want to get a created post, add it to a posts array which we probably managed in the app component

02:17.230 --> 02:22.240
then later and pass that posts array down to app post list,

02:22.240 --> 02:31.080
so step by step. Let's first of all go to the posts create component and emit our own event. To emit our

02:31.110 --> 02:31.650
own event,

02:31.650 --> 02:35.600
we need a feature provided by angular/core, the event emitter.

02:36.030 --> 02:41.970
Then we add a new property and that property here can have any name you want,

02:42.180 --> 02:43.880
so I'll name it

02:43.890 --> 02:50.010
post created, it makes sense to kind of use your event name as a property name here and that will be

02:50.010 --> 02:59.220
a new event emitter created with the new keyword and now with that, we can go to on add post and call

02:59.280 --> 03:03.990
this post created and then emit to emit a new event.

03:03.990 --> 03:09.670
Now here, we want to pass our post as an argument, that's important,

03:09.690 --> 03:13.330
so this passes the post as an argument.

03:13.380 --> 03:14.030
Cool,

03:14.070 --> 03:15.950
so how can we listen to that?

03:16.170 --> 03:22.200
Well we first of all have to make angular aware that post created is an event to which you can listen

03:22.200 --> 03:27.690
from the outside, whilst it makes sense to be able to do that because you rarely want to listen to events

03:27.690 --> 03:34.640
you emit in the same component, you still have to do this explicitly and you do this by adding a decorator

03:34.700 --> 03:35.940
to this property.

03:36.200 --> 03:39.490
This decorator is called output,

03:39.540 --> 03:46.050
so just like you added @component to the class here, you now add @output

03:46.100 --> 03:51.620
and don't forget the parentheses to post created. This turns this into an event to which you can listen

03:51.620 --> 03:56.640
to from the outside and from the outside means in the parent component,

03:56.810 --> 04:04.960
so in the component where you are using the selector. There we can now use event binding to listen to

04:05.210 --> 04:06.660
posts created

04:06.760 --> 04:11.340
and then again, execute any code we want whenever this event occurs

04:11.440 --> 04:16.750
and of course what I want to do here is I want to get that post and store it in a list of posts.

04:16.840 --> 04:22.390
So in the app component here, I'll override title here with a new posts property which is an empty

04:22.390 --> 04:23.660
array initially

04:23.860 --> 04:30.450
but then here, I'll add on post added as a method, as a function so to say

04:30.880 --> 04:37.990
and we know that we will get a post as an argument here and I will therefore set this post or call

04:38.050 --> 04:44.320
this post and call push here and push this new post on this list to store it there.

04:45.200 --> 04:46.620
Now that's one part,

04:46.640 --> 04:49.130
now we're adding this post here,

04:49.240 --> 04:50.970
of course this is doesn't do that much,

04:51.050 --> 04:54.340
we also need to be able to pass this post down.

04:54.500 --> 05:02.600
Now first of all let's connect post created with on post added, so the method name you chose here and to

05:02.600 --> 05:04.360
pass on the data you are getting,

05:04.370 --> 05:08.370
you have to use a special variable name and that is $event.

05:08.390 --> 05:11.140
This essentially gives you access to that data

05:11.210 --> 05:11.950
you emited

05:12.020 --> 05:16.700
and that's not just for custom events, that will be the same for click events or any built-in events

05:16.700 --> 05:17.340
too.

05:17.420 --> 05:23.330
There you also get a default dom event object, whatever you're passing or receiving

05:23.330 --> 05:29.300
with an event, you get access with the special $event variable so that you can pass it on to your

05:29.300 --> 05:32.620
own method or use it in an inline code statement

05:32.620 --> 05:33.880
you might have here.

05:34.340 --> 05:35.860
So now we're passing this on,

05:35.900 --> 05:41.350
now we need to pass it down to app post list and there, we can dive in.

05:41.360 --> 05:42.790
We get our posts,

05:43.040 --> 05:48.400
all we have to do is make the posts property bindable from outside

05:48.520 --> 05:50.020
via property binding.

05:50.120 --> 05:55.750
By default it's not bindable but we can make it bindable by adding a decorator to it

05:55.850 --> 06:02.970
and since we had @output for emitting an event, it probably makes sense to add here we use input and

06:03.010 --> 06:06.820
is added with the @ sign and then the name of the decorator input

06:06.920 --> 06:08.890
and don't forget the parentheses.

06:09.170 --> 06:13.740
Now you can bind two posts from the outside and from the outside

06:13.760 --> 06:19.670
again means from the parent component, only from there, only from the direct parent.

06:19.670 --> 06:29.100
So here we add square brackets for property binding posts and we can set this equal to posts here.

06:29.260 --> 06:32.500
Now to avoid confusion about the names, I'll actually rename this here,

06:32.590 --> 06:35.500
I'll name this stored posts,

06:36.260 --> 06:41.860
so the stored post is the new name and I will pass this on here. And now the chain is

06:41.900 --> 06:43.070
as following,

06:43.240 --> 06:45.190
we're listening to the post created event,

06:45.220 --> 06:47.680
we're adding the post in on post

06:47.680 --> 06:55.500
added to our stored posts list and we're passing down that list, that array to app post list and angular's

06:55.570 --> 07:01.240
change detection will automatically detect whenever a new post is created when that changes and when

07:01.240 --> 07:03.720
it needs to render this new post.

07:03.730 --> 07:11.800
So with this, we should have a complete chain in place that actually allows us to enter a title here

07:12.340 --> 07:14.540
and some content here,

07:14.830 --> 07:18.430
click save post and see that being added here

07:18.670 --> 07:26.850
and of course we can add another title and even more content and continue creating new posts.

07:26.890 --> 07:28.240
So that's pretty amazing,

07:28.240 --> 07:34.390
this is how we can create our post here and how we can add them with the help of property and event binding

07:34.600 --> 07:36.320
on our own components.
