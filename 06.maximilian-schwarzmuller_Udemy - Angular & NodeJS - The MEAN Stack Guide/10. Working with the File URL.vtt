WEBVTT

00:02.370 --> 00:03.800
So the file upload is working

00:03.810 --> 00:08.120
but we still got a lot of work to do. On the server side code in posts.js

00:08.140 --> 00:11.880
on our routes here, we obviously have our

00:11.910 --> 00:14.350
multer code in place here

00:14.910 --> 00:17.620
but we're not using the file we stored,

00:17.700 --> 00:20.340
we're not really doing anything with that file, are we?

00:20.340 --> 00:24.600
We're not storing the path in the database for example

00:24.600 --> 00:31.820
and we're of course not passing the path back to the user. Now to do that, we can utilize something multer does

00:31.890 --> 00:32.930
for us.

00:33.120 --> 00:40.650
It does actually give us the information about the file it stored in the request body in our handler

00:40.650 --> 00:41.880
function here.

00:41.910 --> 00:47.940
So when we create a new post which we want to store in the database, we can also store an image path let's

00:47.940 --> 00:52.900
say, now that image path is something our model doesn't expect though.

00:53.100 --> 01:02.430
So let's first of all go to the post model and add a new field to it, image path which is of type string

01:02.870 --> 01:09.150
and which is required and it will simply be the path to the file on our back-end. Now with that added,

01:09.470 --> 01:10.600
let's go here,

01:10.740 --> 01:11.890
image path

01:12.300 --> 01:18.520
and now the path I want to store here should be a URL to that file.

01:18.750 --> 01:26.580
Now to construct that URL, I will first of all get the URL of our server and store it in a URL constant.

01:26.580 --> 01:28.620
We can get that from the request,

01:28.680 --> 01:35.370
there is a protocol property which returns whether we're accessing the server with HTTP or HTTPS,

01:35.790 --> 01:43.950
then I'll add :// to create a full URL and then I can get my current host with

01:44.050 --> 01:46.620
request get host.

01:46.740 --> 01:50.180
Now this simply constructs a URL to our server

01:50.550 --> 01:58.060
and I want to have this because now my image path will be my URL and then /images,

01:58.110 --> 02:03.640
this is where we store our files and now important, we are of course store it in back-end images

02:03.840 --> 02:10.770
but we will configure this folder to be accessible directly after our domain and I will show you how

02:10.770 --> 02:12.070
this works in a second.

02:12.270 --> 02:18.310
So I just want to be able to enter my domain/images and then the file name and that's the part

02:18.300 --> 02:21.290
multer does for us, we can access request

02:21.450 --> 02:28.160
and then there will be a file property provided by multer and that will have the file name.

02:28.170 --> 02:32.110
So now this is the image path I want to store in the database.

02:34.250 --> 02:42.440
Thereafter we return a response and there of course, I don't just want to return the post ID, we probably

02:42.440 --> 02:44.880
want to return the entire post instead.

02:45.170 --> 02:52.550
So let's return a post here which is a Javascript object where we actually have an ID field which is

02:52.580 --> 03:01.820
createdPost._id because remember, it's stored on _id in MongoDB, where we have

03:01.820 --> 03:07.130
a title that will be createdPost.title,

03:07.320 --> 03:08.990
where we'll have a content,

03:09.440 --> 03:16.610
this will of course be createdPost.content, whoops, content and where we also will have that image path

03:16.820 --> 03:19.140
which is createdPost.imagePath.

03:19.250 --> 03:25.540
So yes, we could just return created post but I want it to remap that ID.

03:27.670 --> 03:33.790
One way to shorten this though is you can use a next gen Javascript feature where you create a new

03:33.790 --> 03:41.290
object and then you use the spread operator to copy all properties of another object and then you

03:41.290 --> 03:44.650
simply add or overwrite some selected properties,

03:44.680 --> 03:49.990
so this will create an object with all the properties of the created post and it will set that extra

03:49.990 --> 03:54.230
ID here. So this is the post I want to return,

03:54.250 --> 03:58.250
now let's use that on the client in the post service. There

03:58.330 --> 04:06.640
I will now get back my post, so the data I get back will actually be a post property next to the message

04:06.970 --> 04:08.520
which will be of type post,

04:08.530 --> 04:11.850
at least it will have all the properties this post has

04:12.070 --> 04:20.440
and therefore we can extract the ID of the post which was created with post ID here and we can also

04:20.440 --> 04:22.480
extract the title and content like this

04:22.480 --> 04:25.020
but we can also stick to the ones we got from the form,

04:25.060 --> 04:26.680
they should be the same.

04:26.820 --> 04:30.930
Now the image path is something our front-end model doesn't reflect.

04:30.940 --> 04:34.520
So let's go to that model and also add the image path here,

04:34.630 --> 04:38.380
it should be a string. And in posts service,

04:38.540 --> 04:44.880
we now of course have to use this when we create a new post here, there I'll set image path to response

04:45.080 --> 04:47.180
data post image

04:47.210 --> 04:53.170
path and we also got the error down there where we construct a new post. Here where we update

04:53.170 --> 04:54.050
a post,

04:54.050 --> 04:57.710
we don't have an image path yet, though this will soon change,

04:57.710 --> 05:01.110
for now let's simply set it to null.

05:01.140 --> 05:03.960
We also have an error in the post create component

05:03.960 --> 05:11.610
now, there we also construct a new post and there, we should also set image path to null for now and

05:11.610 --> 05:13.200
we'll revisit this later.

05:14.930 --> 05:21.710
So now we're getting back that post information and we're using it to store it in our post on the front-end,

05:21.710 --> 05:24.370
on the newly created post there.

05:24.560 --> 05:32.870
Now when we're getting posts, which happens when we visit our messages page, we of course also transform

05:32.870 --> 05:37.690
posts here and there, we should also add the image path.

05:37.700 --> 05:45.470
So here I'll set image path equal to post image path because I know what I get back from my server should

05:45.470 --> 05:52.320
have an image path for every post because we're now saving this and on our server side code, for this get

05:52.330 --> 05:54.160
route where we get all posts,

05:54.380 --> 05:59.910
well we simply return the data from our database and an image path should be saved from now on.

06:00.020 --> 06:05.450
Of course our older posts won't have images, we'll simply delete them in a second.

06:05.450 --> 06:08.200
So now we're adding this image path on the front-end too,

06:08.220 --> 06:10.340
we're returning the data from the back-end.

06:10.450 --> 06:11.030
Let's next

06:11.030 --> 06:15.620
make sure that we actually render this on the screen on the front-end.
