WEBVTT

00:02.470 --> 00:08.380
Let's connect our node express to our mongodb database and for that, let's go back to our mongodb

00:08.380 --> 00:10.800
cluster here and click connect

00:11.260 --> 00:19.870
and once you click connect here, this window should open and there you can choose how you want to connect.

00:19.870 --> 00:26.650
Now we will connect our application, so connect your application, we're using the latest driver

00:27.010 --> 00:34.150
and then in the end you can copy that address, by the way you can also manually spell, write down that

00:34.150 --> 00:38.060
address if you're using a local server, that should do the trick

00:38.080 --> 00:43.810
though checkout the quickStart guide in the official docs if you are using your local mongodb server.

00:44.260 --> 00:49.460
So I will copy this address here and we connect our app to mongodb in the app.js

00:49.470 --> 00:56.380
file on the backend. Somewhere here at the top let's import mongoose because mongoose is our package

00:56.390 --> 00:58.420
we use for working with the database,

00:58.460 --> 01:01.220
so we also use it for connecting to it,

01:01.520 --> 01:09.440
so let's import mongoose here and then very early, maybe here after we created the app, we can run mongoose

01:09.730 --> 01:10.740
connect.

01:10.880 --> 01:17.190
Now connect takes a string as an argument and that string is just what you just copied,

01:17.190 --> 01:22.960
so mongodb plus server then this entire thing, so this should work

01:22.960 --> 01:31.750
and now password of course needs to be replaced with your password you generated, so that password which

01:31.840 --> 01:35.100
I stored in that same file,

01:35.110 --> 01:40.330
this one, let me grab it and add it here.

01:40.480 --> 01:46.790
Let's replace that entire password thing including lower and greater than signs with our password.

01:46.850 --> 01:51.090
Now here it's saying Max user because I named my user Max,

01:51.140 --> 01:57.290
so this part here will be different for you url if your user is not named Max which it probably

01:57.290 --> 01:57.940
isn't

01:58.280 --> 02:03.680
but we have that we've got all the logic in place to connect to mongodb whenever your node server

02:03.740 --> 02:09.280
starts and mongoose will manage that connection for you, so you don't have to worry about that here.

02:10.570 --> 02:15.580
Now with that, we can close that, we are now ready to use that connection.

02:15.580 --> 02:23.380
Now one important thing, that connect method here will actually return a promise where you can for one

02:23.440 --> 02:25.230
output something if everything is working,

02:25.240 --> 02:34.440
so we can console log connected to database here but we can also catch any potential errors

02:34.630 --> 02:37.060
and whilst I won't really handle them here,

02:37.210 --> 02:40.320
you should of course be aware that things can go wrong.

02:40.330 --> 02:48.330
So here I will console log connection failed and that could occur because maybe your mongodb server

02:48.330 --> 02:53.110
is down, your firewall is blocking access, anything like that.

02:53.220 --> 02:56.560
So now you see I restarted this and it's saying connected to database,

02:56.670 --> 02:58.150
so this seems to work,

02:58.320 --> 03:04.950
now we can use that connection to finally use our post model which we created with the help of mongoose

03:05.520 --> 03:07.980
to save data to the database.
