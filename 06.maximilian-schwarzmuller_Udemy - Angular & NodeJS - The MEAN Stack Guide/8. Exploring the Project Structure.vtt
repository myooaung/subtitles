WEBVTT

00:02.360 --> 00:08.030
So let's quickly start working on the Angular app we created. This is the folder the CLI gave us

00:08.180 --> 00:11.570
and as you can see, it has a bunch of sub-folders and files.

00:11.630 --> 00:17.680
As I said, most of these files are purely for configuration and we don't need to worry about them.

00:17.840 --> 00:22.820
The package.json file is interesting because here, you can see all the dependencies and

00:22.880 --> 00:24.720
development-only dependencies of the project and

00:24.860 --> 00:31.440
later once we start adding some MongoDB related dependencies, we'll also see them here.

00:31.700 --> 00:36.180
We've got files for configuring the Typescript compilation and you don't need to worry about that,

00:36.200 --> 00:37.650
the defaults are fine.

00:37.700 --> 00:42.800
We've got the Angular.json file which is for the Angular CLI and we also don't need to worry about this

00:42.800 --> 00:46.940
file in the course for now. Then e2 is for end-to-end testing,

00:46.970 --> 00:48.360
we won't cover this here.

00:48.560 --> 00:52.670
node_modules actually stores all the dependencies which are listed here, so

00:52.700 --> 00:57.770
they are installed into that folder so that they are available to the project and you can always

00:57.770 --> 01:03.810
recreate that folder by running npm install inside this project folder in the terminal,

01:03.890 --> 01:09.200
this will read the package.json file and download and install them all into a newly-created

01:09.200 --> 01:15.090
node_modules folder. And the src folder is where our Angular application lives in,

01:15.260 --> 01:18.630
here we've got even more config files which we can safely ignore and

01:18.980 --> 01:22.140
then, we've got this app folder here.

01:22.160 --> 01:26.360
Now there, we write the meat of our Angular application.

01:26.570 --> 01:28.870
Angular actually uses components,

01:28.920 --> 01:35.420
I'll come back to this in the next section and we create our whole application by composing our UI from

01:35.420 --> 01:36.710
such components.

01:37.040 --> 01:40.400
Therefore, if you have a look at that app.component.html file,

01:40.460 --> 01:43.670
you can see what we see on the screen here.

01:43.700 --> 01:47.720
This is actually the content we see here with some dynamic content here and

01:47.720 --> 01:53.120
as I said, I won't dive deeply into all the basics of Angular but a brief refresher will be given in

01:53.120 --> 01:54.580
the next course section and

01:54.830 --> 02:02.410
if we change this page here and for example say our first app and save that and ngServe

02:02.420 --> 02:03.940
is still running, that's important,

02:04.070 --> 02:08.810
it will automatically recompile and reload this page without us doing anything

02:08.960 --> 02:13.100
but again, make sure that the ngServe process here is still up and running.

02:13.250 --> 02:19.130
You can quit it with Ctrl-C, but you should only do so once you are done with developing for the day,

02:19.340 --> 02:21.500
when you are developing, it has to run

02:21.540 --> 02:23.260
so that it watches your changes,

02:23.330 --> 02:30.050
recompiles the code and reloads that page. And this is the front-end we'll work with, we'll add more components,

02:30.220 --> 02:36.080
we'll compose a complex UI with it and we'll start working with Angular here.

02:36.080 --> 02:41.330
Now again, I'll walk you through that project and how Angular works in a brief summary in the next

02:41.330 --> 02:42.190
section.

02:42.200 --> 02:47.420
For now, let's leave it at this little change here so that we can see that we were able to do something.

02:47.780 --> 02:49.370
Just one more word,

02:49.400 --> 02:54.450
I said that we create a Single Page Application and you can actually see that single page here,

02:54.650 --> 02:57.380
this index.html file in the source folder.

02:57.640 --> 03:00.920
This is the file served by ngServe right now

03:00.980 --> 03:04.270
or by your favorite host towards the end of the course,

03:04.340 --> 03:06.750
we will deploy the app together.

03:06.770 --> 03:12.980
This actually doesn't contain a lot of content, for one because the script imports are injected by

03:12.980 --> 03:14.360
our build workflow,

03:14.510 --> 03:20.060
I said that we have quite an elaborate build workflow and it will actually take our optimized Angular

03:20.060 --> 03:23.620
app, create the output files and inject them in there.

03:23.630 --> 03:28.820
We don't see this during development because it happens in memory but this is what will happen

03:28.820 --> 03:33.620
and we also see it has one HTML element in the body and that actually is not a default

03:33.620 --> 03:38.370
HTML element, that is our custom component,

03:38.390 --> 03:41.020
you can see it here on the selector.

03:41.020 --> 03:47.840
This is how Angular works and how we take control over the UI with Angular and how we can then start composing

03:47.870 --> 03:50.030
our UI with Angular components.

03:50.030 --> 03:55.940
And now with that, I'd say let's continue and let's find out what's in this course for you before we start

03:55.940 --> 04:00.410
diving deeper into Angular and building that whole MEAN stack from the ground up.
