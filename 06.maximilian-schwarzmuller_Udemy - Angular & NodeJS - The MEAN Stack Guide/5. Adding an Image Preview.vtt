
00:02.560 --> 00:09.970
Quindi ora che possiamo effettivamente archiviare la nostra immagine, mostriamo un'anteprima all'utente e visualizziamo

00:09.970 --> 00:11.610
qui un'anteprima.

00:11.650 --> 00:16.650
In realtà aggiungerò qualcosa sul mio codice di posta elettronica HD sotto la mia immagine qui.

00:16.660 --> 00:26.260
Voglio presentare un'immagine quindi aggiungere un div qui e darò a quel div una classe C come S Class di anteprima dell'immagine può essere

00:26.260 --> 00:34.040
totalmente a te come lo chiami e poi aggiungerò un normale elemento dell'immagine e avremo per legare la fonte

00:34.040 --> 00:41.930
e il vecchio titolo qui mentre tutti ci legano semplicemente con calore alla proprietà vincolante per accedere alla proprietà sottostante

00:42.050 --> 00:48.590
o associarla a titoli di valore o qualsiasi cosa abbiamo inserito come titolo sarà il

00:48.590 --> 00:49.950
nostro vecchio titolo.

00:50.390 --> 00:55.630
Ma ovviamente la parte interessante è l'immagine ora per visualizzare l'immagine lì.

00:55.640 --> 00:59.290
Ho bisogno di convertire il file in qualcosa che può essere visualizzato.

00:59.660 --> 01:08.390
E per questo in su immagine scelta voglio convertire la mia immagine in un cosiddetto dato che sei L che è un U

01:08.390 --> 01:13.370
o L che può essere usato dal normale tag immagine per quello.

01:13.400 --> 01:26.560
Prima di tutto aggiungi una nuova proprietà e quella sarà la mia anteprima dell'immagine, l'anteprima dell'immagine sarà una stringa

01:26.620 --> 01:33.360
e poi nell'immagine selezionata voglio popolarlo con quello giusto.

01:33.580 --> 01:39.960
Ora sei L per creare che l'euro dovrà utilizzare una funzione fornita da javascript che è chiamato un

01:39.960 --> 01:41.370
lettore di file.

01:41.390 --> 01:48.300
Ne conserverò una nuova istanza perché dobbiamo istanziarla o archiviarla in quella costante del lettore.

01:48.310 --> 01:54.950
Ora possiamo usare quel lettore e definire un evento on load qui.

01:56.650 --> 01:59.730
Quale sarà solo una funzione che verrà eseguita.

01:59.890 --> 02:05.020
Quindi questa è una funzione che viene eseguita quando ha finito di caricare una determinata risorsa.

02:05.020 --> 02:11.250
E lì voglio impostare questa anteprima dell'immagine uguale al risultato del lettore.

02:11.260 --> 02:12.540
Ecco come funziona.

02:12.580 --> 02:16.210
Ora non farà nulla a meno che non gli diciamo di fare qualcosa.

02:16.240 --> 02:23.710
Quindi qui chiamerò il lettore per leggere i dati mentre tu sai cosa stiamo facendo con quel sito e

02:23.710 --> 02:25.870
dovrebbe passare nel mio file.

02:25.960 --> 02:31.330
Quindi quello che sto facendo è che sto creando il lettore, quindi sto cercando qualcosa che dovrebbe accadere quando

02:31.330 --> 02:33.090
viene letto in un file.

02:33.100 --> 02:37.810
Quando ha finito di caricare un file, ho richiesto di caricare quel file.

02:37.840 --> 02:40.780
Ora quest'anno è il codice asincrono.

02:40.810 --> 02:41.950
Questo richiederà un po 'di tempo.

02:42.040 --> 02:44.140
Ecco perché sto usando questa callback qui.

02:44.140 --> 02:49.630
Quella funzione che ho assegnato per scaricare il carico e questo in realtà darà il via al

02:49.630 --> 02:51.750
processo che alla fine porterà all'evento.

02:51.760 --> 02:57.190
E qui dovremo leggere e archiviare e possiamo quindi che il risultato risulterà automaticamente morto, sei L

02:57.190 --> 02:58.240
che stiamo cercando.

02:58.540 --> 03:04.170
Quindi qui posso quindi semplicemente assegnarlo alla mia anteprima dell'immagine.

03:04.180 --> 03:07.920
Quindi l'anteprima delle immagini sarà alla fine qualcosa che possiamo mostrare.

03:08.400 --> 03:15.410
Quindi mostriamolo per questo torniamo al codice HTML H e sul mio def qui prima di tutto in MGM

03:15.460 --> 03:20.050
per non mostrare sempre quell'anteprima perché non voglio mostrare un'immagine vuota.

03:20.070 --> 03:26.940
Non voglio mostrare un'immagine che non può essere caricata e qui controllerò se l'anteprima dell'immagine non è uguale a

03:27.060 --> 03:28.240
una stringa vuota.

03:28.290 --> 03:37.730
E anche se l'anteprima delle immagini non è nulla o di forma breve semplicemente se l'anteprima delle immagini.

03:37.730 --> 03:41.630
Quindi se esiste e se non è uguale a una stringa vuota.

03:41.840 --> 03:47.030
Se è così, caricherò questa morte e l'immagine che contiene e legherò

03:47.030 --> 03:49.760
il tag sorgente dall'immagine all'anteprima dell'immagine.

03:49.770 --> 03:52.670
Quindi a quella stringa abbiamo un'anteprima del loop in questo modo.

03:52.670 --> 03:56.050
Quindi a quella stringa che memorizzerà quei dati sei L.

03:56.360 --> 03:58.840
Ora questo sembrerebbe brutto come quello.

03:58.850 --> 04:02.000
Quindi andiamo a vederci come autunno e stile.

04:02.030 --> 04:05.000
La nostra lezione di revisione delle immagini qui.

04:05.180 --> 04:05.560
Là.

04:05.570 --> 04:12.560
Gli darò un'altezza di diciamo 5 rem e un margine di diciamo un REM e zero a sinistra ea destra

04:12.590 --> 04:19.390
per avere una certa distanza tra l'anteprima e gli input circostanti e poi accedo anche all'immagine che è annidata

04:19.420 --> 04:24.940
nel mio classe qui e impostare il suo massimo al 100 percento del contenitore.

04:24.940 --> 04:29.980
Quindi, in 2D cinque REM, salviamo tutto questo.

04:30.010 --> 04:30.820
Torniamo indietro.

04:31.420 --> 04:33.350
Non vediamo ancora un'anteprima dell'immagine.

04:33.350 --> 04:37.890
E se seleziono la mia immagine di primavera qui la vediamo effettivamente lì.

04:37.900 --> 04:39.040
Quindi è fantastico.

04:39.040 --> 04:44.900
Ora abbiamo questa piccola anteprima e ovviamente puoi cambiare il modo in cui questo viene visualizzato con C come s.

04:45.190 --> 04:52.190
E ora con quello aggiunto il prossimo passo, naturalmente, è quello di verificare se si tratta di un'immagine e non di un

04:52.240 --> 04:53.020
documento PDL.

04:53.380 --> 04:55.840
E anche allora per assicurarci di poter essere caricati.