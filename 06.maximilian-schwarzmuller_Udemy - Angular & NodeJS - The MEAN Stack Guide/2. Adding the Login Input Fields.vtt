WEBVTT

00:02.390 --> 00:08.810
To dive into all of that, I'll actually start by adding two new routes, a sign-up and a sign-in route

00:08.960 --> 00:13.180
next to my new post routes. In my project,

00:13.220 --> 00:16.250
that means that we need to add new routes here.

00:16.280 --> 00:19.690
Thus far, we only got the posts folder and the header folder,

00:19.800 --> 00:26.270
now I will add a new folder in the app folder and that will be my auth folder because there, I will handle

00:26.270 --> 00:28.580
all the authentication related things.

00:29.180 --> 00:36.080
So in there, I will create new subfolder folders, the sign-up subfolder which will hold my sign-up component

00:36.440 --> 00:44.210
and the login subfolder which will obviously hold the login component. So in the login folder,

00:44.210 --> 00:50.600
let's create a new component, the login component, so login.component.ts is the component file

00:50.870 --> 00:52.520
and login.component.html

00:52.580 --> 01:00.110
is the template belonging to that. In the Typescript file, we'll just export a class which is named

01:00.140 --> 01:01.510
LoginComponent,

01:01.730 --> 01:08.450
as always, this is how you create components and we turn this class into a component by adding the @component

01:08.600 --> 01:09.410
decorator.

01:09.410 --> 01:10.610
Now this is nothing new,

01:10.610 --> 01:12.530
this is something you already know.

01:13.070 --> 01:19.170
I will load this via routing and therefore I don't actually need to add a selector to this component.

01:19.190 --> 01:24.200
We do have selectors on the post components because we did add them differently when we added them

01:24.200 --> 01:25.280
the first time

01:25.280 --> 01:28.230
but if you know that something will get loaded through routing,

01:28.280 --> 01:31.290
you can just omit this selector.

01:31.400 --> 01:35.590
The one thing you need to add though is a template or template URL,

01:35.630 --> 01:37.210
so here I'll use a template 

01:37.220 --> 01:41.120
URL pointing at login.component.html,

01:41.150 --> 01:41.960
so

01:41.990 --> 01:44.100
at this external file.

01:44.290 --> 01:46.360
Now this is a basic component

01:46.580 --> 01:50.120
and of course we need to register it in order to use it.

01:50.360 --> 01:54.770
So I will go to my app module and there in declarations,

01:54.770 --> 02:00.530
I will add login component and my IDE automatically added this import

02:00.540 --> 02:07.640
path, you need to add this at the top of your file too. Now the login component is registered here

02:07.850 --> 02:14.170
and now we can start working with it. Now working with it mainly means creating a template

02:14.240 --> 02:17.140
and of course also loading it via routing.

02:17.150 --> 02:22.790
Now let's start with the template and there, I really want to create a form which allows me to create

02:22.790 --> 02:25.690
a user with an email and a password,

02:25.730 --> 02:31.040
you could always add more fields than that but this is the bare minimum with which I want to work in this

02:31.040 --> 02:32.000
app.

02:32.030 --> 02:37.940
So for logging in, we need email and password and therefore let's go to the post create component and

02:37.940 --> 02:43.980
let's actually reuse that form we have here. I'll remove some things, like the image upload functionality

02:44.120 --> 02:50.840
but in general, I will create a form and I will use mat-form-fields with inputs to fetch user input.

02:50.840 --> 02:53.110
So in the login component, let's paste that in

02:53.210 --> 02:55.240
but as I said, I will remove things.

02:55.400 --> 02:59.060
I will actually leave the spinner in the card because I want to have that card look

02:59.150 --> 03:04.670
and I also want to show a spinner whilst we're logging the user in but I will remove that form group

03:04.670 --> 03:09.700
thing because here, I will actually go back to using the template driven approach.

03:09.740 --> 03:13.530
I will therefore also change my submit listener for now,

03:13.850 --> 03:15.590
mat-form-field here is fine,

03:15.630 --> 03:17.310
mat-input is fine,

03:17.450 --> 03:23.600
type text is fine or no it's not fine, that should be type email because I want to get the email, form control

03:23.600 --> 03:27.660
name will be removed because I won't use the reactive form approach.

03:27.720 --> 03:29.020
Placeholder is wrong,

03:29.030 --> 03:39.020
it won't be the post title, it will be the e-mail address and the error should be please enter a valid email.

03:40.220 --> 03:48.800
Here we also will not use this way of adding this error, we'll instead well revisit this condition later.

03:48.830 --> 03:55.370
Now I will remove that div with the button and with the image uploader preview and on that second

03:55.370 --> 03:58.830
mat-form-field, I will keep it but the text area here,

03:58.940 --> 04:05.100
I'll remove it and instead add an input which is of type password because we want to hide the characters

04:05.120 --> 04:11.900
the user entered. We'll add the mat-input directive to turn this into an input handled by Angular material,

04:12.280 --> 04:19.010
we'll add a placeholder which is password which will also serve as a label and that's it for now.

04:19.010 --> 04:22.560
Now the ngIf condition of that error also needs to be revisited, in

04:22.720 --> 04:29.090
here I will enter a please enter a valid password. With that,

04:29.220 --> 04:37.830
the caption here should be login and now before we actually start working on this a bit more and start

04:37.860 --> 04:43.230
actually adding some functionalities here and start handling this,

04:43.230 --> 04:49.680
let me remove the submit listener for now, before we do all that, I'll quickly add my isLoading property

04:49.800 --> 04:54.980
to remove these errors and then I'll connect it via routing so that we can see it.

04:55.230 --> 04:59.260
So first of all, about isLoading, in login component typescript file,

04:59.340 --> 05:01.290
we can add isLoading and set it to false

05:01.290 --> 05:06.110
initially, this will already make sure that this component should be usable.

05:06.310 --> 05:07.690
Well almost,

05:07.710 --> 05:14.800
I get an error that Angular is not able to handle the form because I am not adding my reactive form

05:15.420 --> 05:22.460
features and I removed the normal forms module which unlocked the template driven approach.

05:22.660 --> 05:31.170
So let's quickly do that in the app module, there at the top from Angular forms, I will now also import

05:31.260 --> 05:37.350
forms module to have that template driven approach available, though to really have it available,

05:37.350 --> 05:38.940
importing is not enough,

05:39.090 --> 05:44.090
I will also go to imports here and where I add the reactive forms module,

05:44.100 --> 05:49.890
I will also add the normal forms module you could say. And with that we got this enabled,

05:49.980 --> 05:56.160
now again I'll also want to load it via routing. So let's go to the app routing module and there, it's time

05:56.160 --> 06:03.630
to add new paths. This path should be loaded when I visit /login and there, I want to load my login

06:03.630 --> 06:05.250
component, again

06:05.280 --> 06:12.780
my IDE automatically added that import here. With that all set up, we should be able to visit this when

06:12.780 --> 06:17.320
we enter /login but manually typing isn't what I want to do.

06:17.430 --> 06:23.400
So let's instead go to the header component here and let's simply add a new link, a new list item with

06:23.400 --> 06:30.930
an anchor tag which has the mat-button directive and there, we go to /login and of course my

06:30.930 --> 06:33.920
caption here will also be login.

06:34.020 --> 06:37.810
And now with that, we can save this, go back. We get login here,

06:37.830 --> 06:40.260
we'll have to do something regarding the styling

06:40.410 --> 06:46.130
but it does work, though this also needs to change from a styling perspective

06:46.320 --> 06:47.350
but we're getting there.

06:47.490 --> 06:53.500
Now let's first of all make sure that here in our header component, these links are aligned

06:53.730 --> 06:56.510
and for that I'll go to the CSS code,

06:56.940 --> 07:02.250
have a look at my unordered list and change it to actually use flex box,

07:02.280 --> 07:09.000
so to set the display to flex. If I do that, the list items should be ordered next to each other and they

07:09.000 --> 07:09.600
are

07:09.690 --> 07:11.130
and this looks better

07:11.130 --> 07:17.190
and now let's also work on that form here in my login component, this of course is not how I

07:17.190 --> 07:18.450
want my form to look.

07:18.550 --> 07:25.290
Now in the post create component, we fix this by giving the mat-form-field a width of 100%

07:25.650 --> 07:28.000
and centering the spinners is also something I want to do.

07:28.100 --> 07:30.220
So I will copy these two things here,

07:31.330 --> 07:40.750
we'll go back to my login component, create a new file, the login-component.css file, add these styles

07:40.770 --> 07:41.330
there,

07:41.440 --> 07:43.070
I don't need the text area though,

07:43.300 --> 07:50.180
so add these styles here and then I'll go to my login component typescript file and include that newly

07:50.230 --> 07:57.720
added style file by adding style URLs, adding that array and pointing at login-component.css. 

07:57.790 --> 08:01.320
And with that, if we save that and let it reload,

08:01.360 --> 08:02.710
this looks much better.

08:03.070 --> 08:06.120
So now we get the login component set up there,

08:06.260 --> 08:10.850
now this of course is not doing anything, we're not even handling the user input.

08:11.090 --> 08:13.420
So that is what I'll do in the next lecture.
