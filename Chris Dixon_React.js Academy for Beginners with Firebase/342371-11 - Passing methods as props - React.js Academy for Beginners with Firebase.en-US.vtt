WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.260 --> 00:00:04.215
It's not just data we can pass down to components.

00:00:04.215 --> 00:00:06.765
We can also pass down a method two.

00:00:06.765 --> 00:00:10.785
The method we will be adding soon is to create a new board,

00:00:10.785 --> 00:00:14.805
which will obtain the board's state in the app.js.

00:00:14.805 --> 00:00:20.190
Now since we are updating the state stored in app.js, we also add.

00:00:20.190 --> 00:00:23.700
we create new board method inside here too.

00:00:23.700 --> 00:00:29.085
Let's go over and create is now in the app.js, I'll go to this file.

00:00:29.085 --> 00:00:32.940
Then it just under our component will mount.

00:00:32.940 --> 00:00:37.690
We can create a custom method called "createNewboard",

00:00:37.730 --> 00:00:41.090
this is going to be a ES6 arrow function,

00:00:41.090 --> 00:00:43.220
which is going to take in a board,

00:00:43.220 --> 00:00:45.320
which will pass to it soon.

00:00:45.320 --> 00:00:48.935
So here we're going to update the state a little bit differently.

00:00:48.935 --> 00:00:54.305
Let's take a look at how we're going to use this dot set state.

00:00:54.305 --> 00:00:59.450
Inside here, we're still going to pass in an object and update our boards.

00:00:59.450 --> 00:01:02.815
But this time we're going to create an array.

00:01:02.815 --> 00:01:06.150
So here when updating the state,

00:01:06.150 --> 00:01:10.385
when using React, we usually don't want to mutate the state directly.

00:01:10.385 --> 00:01:11.840
It is best first,

00:01:11.840 --> 00:01:14.225
take a copy of the existing state.

00:01:14.225 --> 00:01:17.030
We can do this with the spread operator,

00:01:17.030 --> 00:01:18.765
which is a three dots.

00:01:18.765 --> 00:01:24.920
We can take a copy of the existing states by using "this.state.boards".

00:01:24.920 --> 00:01:27.950
Then after this separated by a comma,

00:01:27.950 --> 00:01:30.110
we can merge in our new data,

00:01:30.110 --> 00:01:32.360
which is going to be this board variable,

00:01:32.360 --> 00:01:34.405
which you pass in through our method.

00:01:34.405 --> 00:01:38.240
So when we call this will pass the data about the new board,

00:01:38.240 --> 00:01:40.205
will then update the state,

00:01:40.205 --> 00:01:45.820
will then grab a copy of the existing states and then merge into it's our new board.

00:01:45.820 --> 00:01:49.355
If we take a look at the finished version just here,

00:01:49.355 --> 00:01:51.560
this is the home components.

00:01:51.560 --> 00:01:54.710
Inside here is where we're going to "Create a new board".

00:01:54.710 --> 00:01:57.175
Therefore, triggering this method.

00:01:57.175 --> 00:02:00.645
This method needs be triggered from the home components,

00:02:00.645 --> 00:02:02.810
meaning when it pass a reference to

00:02:02.810 --> 00:02:07.460
this method and how do we pass data down to child components?

00:02:07.460 --> 00:02:09.980
We do this via props.

00:02:09.980 --> 00:02:15.740
So in app.js, let's go down to where we render our home components.

00:02:15.740 --> 00:02:18.875
We can then pass a reference to our method.

00:02:18.875 --> 00:02:21.490
So, "Create new board".

00:02:21.490 --> 00:02:24.540
In fact, we can add this on switch online.

00:02:24.540 --> 00:02:27.270
Then we can set this equal to this.

00:02:27.270 --> 00:02:31.365
Then our method name called "createnewboard".

00:02:31.365 --> 00:02:33.619
Over in the home components,

00:02:33.619 --> 00:02:35.305
which is the home.js,

00:02:35.305 --> 00:02:38.570
we can create a button to create our new board.

00:02:38.570 --> 00:02:41.250
So inside of our "div",

00:02:41.420 --> 00:02:43.740
Let's create this now.

00:02:43.740 --> 00:02:46.735
Inside a here we can create a click handler.

00:02:46.735 --> 00:02:51.235
So "onClick", we're then going to create a new method called

00:02:51.235 --> 00:02:57.145
"this.newBoard" and its acts of newboard inside here.

00:02:57.145 --> 00:02:59.275
So this new board method,

00:02:59.275 --> 00:03:00.685
which we are calling here,

00:03:00.685 --> 00:03:03.985
has nothing to do with the one we've passed down by states.

00:03:03.985 --> 00:03:06.520
We'll call this in just a moment.

00:03:06.520 --> 00:03:12.940
Let's go up and create this now outside of the random method,

00:03:12.940 --> 00:03:18.230
we can now create this.So let's create our "newBoard".

00:03:18.560 --> 00:03:21.855
Setup, a ES6 arrow function.

00:03:21.855 --> 00:03:24.920
So inside here we want to do two things.

00:03:24.920 --> 00:03:28.900
First of all, we want to grab all of the board data from

00:03:28.900 --> 00:03:33.430
our form and then we're going to call the create new board method,

00:03:33.430 --> 00:03:36.365
which are passed down from app.js.

00:03:36.365 --> 00:03:39.865
At the moment, we don't have this form to grab his data.

00:03:39.865 --> 00:03:43.195
So I'm just going to have to code in some data for now.

00:03:43.195 --> 00:03:45.985
Let's create our board objects.

00:03:45.985 --> 00:03:51.925
so "const board" is going to be equal to a new object.

00:03:51.925 --> 00:03:56.725
This needs a title called this anything which you want.

00:03:56.725 --> 00:04:02.285
I want to say, "Trips to take this year", separated by a comma.

00:04:02.285 --> 00:04:04.540
We also need a background for this board.

00:04:04.540 --> 00:04:10.715
I'm going to set its "background" to be a string value," 80ffaa".

00:04:10.715 --> 00:04:14.239
Next up I'm going to add the "createdAt" property.

00:04:14.239 --> 00:04:16.610
This is going to be a "new Date".

00:04:16.610 --> 00:04:18.980
So a new script dates.

00:04:18.980 --> 00:04:20.960
We're going to be stored in the date for

00:04:20.960 --> 00:04:24.485
the new Board and also the new list and new cards.

00:04:24.485 --> 00:04:27.020
This will allow us later on to return all of

00:04:27.020 --> 00:04:31.135
this information back in order from when they were created.

00:04:31.135 --> 00:04:34.305
So this is our new board now hard-coded.

00:04:34.305 --> 00:04:37.100
We can then call the create new board method,

00:04:37.100 --> 00:04:42.155
which will be passed down via props and sent off this new bond as an argument.

00:04:42.155 --> 00:04:47.660
So just after our objects "this.props.createNewboard".

00:04:49.190 --> 00:04:52.430
Fastening this board which illustrated.

00:04:52.430 --> 00:04:56.210
So now this part we will pass with the createNewboard method.

00:04:56.210 --> 00:04:59.210
It will call it in the app.js.

00:04:59.210 --> 00:05:04.015
This method will then receive the board and then merge it into states.

00:05:04.015 --> 00:05:08.390
So let's save this and then go over to our project. We can try this out.

00:05:08.390 --> 00:05:12.230
Let's go to our app. We have the new ball button.

00:05:12.230 --> 00:05:17.870
Let's click on this. Then we get a incident update of trips to take this year.

00:05:17.870 --> 00:05:21.695
Greatest means we now have this new mode at a state.

00:05:21.695 --> 00:05:26.509
This is what we mentioned earlier when we said that each time the state is updated,

00:05:26.509 --> 00:05:32.149
React will then update all components which need that particular piece of information.

00:05:32.149 --> 00:05:34.670
We can also see in the app.js,

00:05:34.670 --> 00:05:36.185
if we go down to the state,

00:05:36.185 --> 00:05:39.650
we now have our extra board added inside here.

00:05:39.650 --> 00:05:45.005
This is one which produced hard-coded and then passed as arguments with this method.

00:05:45.005 --> 00:05:46.685
If we refresh though,

00:05:46.685 --> 00:05:52.100
this item will disappear since we don't have any permanent database just yet.

00:05:52.100 --> 00:05:55.960
But this is something which will add later in the course.

00:05:55.960 --> 00:05:59.265
Now let's move on to the list.

00:05:59.265 --> 00:06:04.670
If we look at this final board view and then click on any of the ball previews within it,

00:06:04.670 --> 00:06:06.800
taken it to the board components.

00:06:06.800 --> 00:06:11.060
This board component will need access to all the currently loaded lists.

00:06:11.060 --> 00:06:12.965
In our case, we just have these free.

00:06:12.965 --> 00:06:16.375
I would also need to add a new list input down at the bottom.

00:06:16.375 --> 00:06:19.370
Currently in our output don't see this ball view.

00:06:19.370 --> 00:06:22.340
If we go over all secretly loaded is

00:06:22.340 --> 00:06:27.140
the home components and then next inside our board previews.

00:06:27.140 --> 00:06:29.900
We can begin to work with this board components.

00:06:29.900 --> 00:06:35.100
We can go over to the app.js and add the temporarily.

00:06:35.170 --> 00:06:40.150
This will be until we introduce the routing in a later section.

00:06:40.150 --> 00:06:46.025
So first of all, in the app.js makes you we still have the board info from before.

00:06:46.025 --> 00:06:48.905
Then scroll down to our random method.

00:06:48.905 --> 00:06:53.940
We can also add the board components inside of our wrapper.

00:06:54.080 --> 00:06:59.155
So I'll close this now and go over to this board.js.

00:06:59.155 --> 00:07:01.640
We can add the lists in state.

00:07:01.640 --> 00:07:06.280
So each individual component can also have its own local states.

00:07:06.280 --> 00:07:09.259
Let's create our state objects.

00:07:10.040 --> 00:07:14.170
I want to load up the current list,

00:07:14.170 --> 00:07:18.395
and set this to an initial value of an empty array.

00:07:18.395 --> 00:07:22.220
I've called this state, the current lists because later on,

00:07:22.220 --> 00:07:27.310
we'll also filter the lists to only show the ones for a particular board.

00:07:27.310 --> 00:07:30.840
We can then grab our lists from the sample data.

00:07:30.840 --> 00:07:33.945
First of all, by importing at the top of the file.

00:07:33.945 --> 00:07:38.370
I'm going to import our data from the file path,

00:07:38.370 --> 00:07:42.255
which is dot dot slash sample data.

00:07:42.255 --> 00:07:47.770
But then once again, we can use componentDidMount to load these into state.

00:07:51.470 --> 00:07:57.490
This is a method we should call this dot setState.

00:07:58.310 --> 00:08:01.035
We'll set our objects,

00:08:01.035 --> 00:08:06.750
which is going to grab the current lists and set this equal to our sample data,

00:08:06.750 --> 00:08:09.270
which is data dot lists.

00:08:09.270 --> 00:08:12.870
Data being a variable which we have from our sample data,

00:08:12.870 --> 00:08:17.380
and then the list is the list data which you have just here.

00:08:17.890 --> 00:08:20.405
Now we have these current lists.

00:08:20.405 --> 00:08:22.010
What do we want to do with them?

00:08:22.010 --> 00:08:26.240
Well, we want to render out a list component for each one,

00:08:26.240 --> 00:08:28.870
just like the free which you see here.

00:08:28.870 --> 00:08:32.310
We do this just like earlier when we live through the data,

00:08:32.310 --> 00:08:35.445
and now put a list component for each one.

00:08:35.445 --> 00:08:38.955
Let's get started in the board.js.

00:08:38.955 --> 00:08:43.335
Let's go down to our random method and we can begin to work inside here.

00:08:43.335 --> 00:08:45.915
First of all, in the surrounding div,

00:08:45.915 --> 00:08:51.510
let's add a class name which is going to be equal to list-wrapper.

00:08:51.510 --> 00:08:54.120
This is for CSS.

00:08:54.120 --> 00:08:58.275
Notice here how we're using the class name rather than just class,

00:08:58.275 --> 00:09:01.020
as would do in regular HTML.

00:09:01.020 --> 00:09:02.850
Well, when using react,

00:09:02.850 --> 00:09:05.715
the class word is a reserved keyword.

00:09:05.715 --> 00:09:08.519
Therefore, when adding any CSS classes,

00:09:08.519 --> 00:09:11.790
we do need to use this class name attributes in its place.

00:09:11.790 --> 00:09:14.805
Inside here, we could move our title from four.

00:09:14.805 --> 00:09:16.710
Then inside of the curly braces,

00:09:16.710 --> 00:09:19.515
we're going to map through the current lists.

00:09:19.515 --> 00:09:26.055
So just like before, we're going to use this.state.current lists.

00:09:26.055 --> 00:09:32.490
Just like before, this.state.current lists is an object rather than an array.

00:09:32.490 --> 00:09:36.615
To solve this, I'm going to cut this out, and again,

00:09:36.615 --> 00:09:43.155
use objects.keys, and then inside the brackets we can paste this back in.

00:09:43.155 --> 00:09:46.350
Just like earlier, this will convert this to be an array,

00:09:46.350 --> 00:09:49.245
so we can use the dot map method.

00:09:49.245 --> 00:09:52.185
We'll also going to pass in the key,

00:09:52.185 --> 00:09:54.855
settled the arrow function.

00:09:54.855 --> 00:09:56.670
For each list in states,

00:09:56.670 --> 00:09:59.670
we're going to then run down the list components.

00:09:59.670 --> 00:10:02.700
This list also needs to take in a key.

00:10:02.700 --> 00:10:09.435
This key is going to be equal to this.state.current lists.

00:10:09.435 --> 00:10:13.560
We're not going to pass in the individual list with this key,

00:10:13.560 --> 00:10:15.690
and then grab the ID.

00:10:15.690 --> 00:10:20.925
Make sure we still have the list components imported at the top of the file from earlier.

00:10:20.925 --> 00:10:22.635
Give this file a save.

00:10:22.635 --> 00:10:26.320
Then we can go over to the browser and check this out.

00:10:27.800 --> 00:10:31.410
Now we'll see our components rendered to the screen.

00:10:31.410 --> 00:10:33.060
There's quite a lot going on here.

00:10:33.060 --> 00:10:35.505
Let's clean up the list components.

00:10:35.505 --> 00:10:37.980
Let's go into the list.js.

00:10:37.980 --> 00:10:40.305
Then rather than outputing our free cards,

00:10:40.305 --> 00:10:41.880
we're going remove this.

00:10:41.880 --> 00:10:44.310
It should look a lot more clear now,

00:10:44.310 --> 00:10:45.870
if we update this.

00:10:45.870 --> 00:10:48.585
That's our free list components.

00:10:48.585 --> 00:10:52.755
It is probably a little difficult to see what is happening here,

00:10:52.755 --> 00:10:55.290
so let's open up the react developed tools.

00:10:55.290 --> 00:10:58.650
Take a closer look. Starting at the top level,

00:10:58.650 --> 00:11:02.730
we have the app.js with our boards which are in state.

00:11:02.730 --> 00:11:05.475
Inside of here we have a surrounding div,

00:11:05.475 --> 00:11:07.995
which will then output the home components,

00:11:07.995 --> 00:11:11.175
displaying the cause, house and garden ideas.

00:11:11.175 --> 00:11:14.880
After this, we temporarily added in the board component.

00:11:14.880 --> 00:11:20.400
We could see this and the board components is rendering out free list items.

00:11:20.400 --> 00:11:26.190
Each list item is you simply opportune the text of list component, which is just here.

00:11:26.190 --> 00:11:29.895
We'll also soon output a list title and also the counts.

00:11:29.895 --> 00:11:32.400
With these lists now displaying on the board,

00:11:32.400 --> 00:11:37.305
we can do a similar thing to early in this video and also add a new list.

00:11:37.305 --> 00:11:40.170
Over in the board.js.

00:11:40.170 --> 00:11:42.945
We can do this by creating a new method.

00:11:42.945 --> 00:11:45.390
Just under component in mount.

00:11:45.390 --> 00:11:49.840
Let's create a new method called create new list.

00:11:49.910 --> 00:11:54.345
They serve as the arrow function.

00:11:54.345 --> 00:11:58.140
Inside here we're going to construct our new list.

00:11:58.140 --> 00:12:01.545
This is just going to be sampled data for now.

00:12:01.545 --> 00:12:04.605
We first need to add an ID to this list.

00:12:04.605 --> 00:12:08.205
Later on we're going to be using Firebase to grab this ID.

00:12:08.205 --> 00:12:14.670
But for now we can use math.dot random to generate a new ID using JavaScript.

00:12:14.670 --> 00:12:19.930
The title, let's call this my amazing list.

00:12:21.070 --> 00:12:24.710
This also needs to be linked to a board.

00:12:24.710 --> 00:12:28.415
We can choose a ID. Let's go for 300.

00:12:28.415 --> 00:12:35.260
We can also add the createdAt property ans set this to be a new date using JavaScripts.

00:12:35.260 --> 00:12:38.085
Now we have our new list created.

00:12:38.085 --> 00:12:42.255
The next thing to do is now to push this to our currently state.

00:12:42.255 --> 00:12:45.760
Now we can do this with this.state.

00:12:46.940 --> 00:12:49.845
Add in our objects.

00:12:49.845 --> 00:12:54.000
The state which we want to obtain is the current lists.

00:12:54.000 --> 00:12:58.365
Just like before, current list is an array so we can pass this in.

00:12:58.365 --> 00:13:01.740
We're, first of all, going to merge in the current lists,

00:13:01.740 --> 00:13:04.389
with the three dots.

00:13:04.700 --> 00:13:10.890
This.state.current lists separated by a comma.

00:13:10.890 --> 00:13:13.935
We then go to merge in to our current state.

00:13:13.935 --> 00:13:16.710
The list which was created, just above.

00:13:16.710 --> 00:13:19.350
This is all we need to do now for this method,

00:13:19.350 --> 00:13:23.925
the next step is to create a button to trigger this method follows.

00:13:23.925 --> 00:13:26.850
We do this down in the random method.

00:13:26.850 --> 00:13:30.135
Let's just go under the list wrapper.

00:13:30.135 --> 00:13:32.759
Let's create a button.

00:13:32.759 --> 00:13:35.835
We can add a on-click event handler,

00:13:35.835 --> 00:13:37.890
which is going to trigger our method,

00:13:37.890 --> 00:13:41.490
which is called this.create new lists.

00:13:41.490 --> 00:13:45.075
Then a name of new list for our button.

00:13:45.075 --> 00:13:49.605
Once this is done, give this file save and we can go over to the browser.

00:13:49.605 --> 00:13:52.680
Let's try clicking on our new list button.

00:13:52.680 --> 00:13:56.400
Then we'll get a new list component rendered as green.

00:13:56.400 --> 00:14:00.210
If we go into our app and then into our board.

00:14:00.210 --> 00:14:04.080
Inside here, we can check out the current state for all board.

00:14:04.080 --> 00:14:06.644
We now have our four list items.

00:14:06.644 --> 00:14:08.145
If we go to our last one,

00:14:08.145 --> 00:14:09.960
which is one which you just added,

00:14:09.960 --> 00:14:13.005
we see the title of my amazing list.

00:14:13.005 --> 00:14:14.610
First, again, just like before,

00:14:14.610 --> 00:14:17.535
if we reload the browser, this will disappear.

00:14:17.535 --> 00:14:20.610
Since you don't currently have any permanent storage.

00:14:20.610 --> 00:14:25.190
To round things off, rather than outputting the text of list components,

00:14:25.190 --> 00:14:28.570
we can access the prompts as to it instead.

00:14:28.570 --> 00:14:31.830
First of all, in the board.js.

00:14:31.830 --> 00:14:34.770
We can pass down these props to each list.

00:14:34.770 --> 00:14:38.010
We already have the key. That's fine.

00:14:38.010 --> 00:14:41.005
Then after this, we can also pass our list.

00:14:41.005 --> 00:14:44.550
We can grab the data with this.state.

00:14:44.550 --> 00:14:49.710
Our current lists, passing in the key, save this file,

00:14:49.710 --> 00:14:56.655
and then we can modify our list components so I'll put the title of the list.js.

00:14:56.655 --> 00:15:00.755
First of all, let's add a class name to the wrapper.

00:15:00.755 --> 00:15:05.810
The class name is going to be equal to list or our CSS.

00:15:05.810 --> 00:15:09.485
This title is going to also be in a surrounding div,

00:15:09.485 --> 00:15:13.770
which is going to have a class name of list header.

00:15:16.190 --> 00:15:23.285
Then close this off. We can now move our p elements inside of this header section,

00:15:23.285 --> 00:15:27.995
and replace the text of least components with our props.

00:15:27.995 --> 00:15:30.425
Inside the curly braces,

00:15:30.425 --> 00:15:37.015
this top props.list, and then we can access the list title.

00:15:37.015 --> 00:15:38.820
If all is working well,

00:15:38.820 --> 00:15:43.910
we should now go over to the browser and now see the title of our free lists.

00:15:43.910 --> 00:15:46.115
We can also click on new list,

00:15:46.115 --> 00:15:49.240
and we'll see the title for this one too.

00:15:49.240 --> 00:15:52.610
Good. If everything is working now for you,

00:15:52.610 --> 00:15:54.810
we're going to now move on to the next video.

00:15:54.810 --> 00:15:58.080
We're going to look up prop type validation.
