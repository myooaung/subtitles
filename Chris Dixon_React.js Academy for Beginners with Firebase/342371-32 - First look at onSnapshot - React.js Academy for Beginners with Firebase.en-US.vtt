WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.220 --> 00:00:06.194
Each time we add updates or remove anything from our projects,

00:00:06.194 --> 00:00:09.510
we need to do a refresh to get the new data.

00:00:09.510 --> 00:00:12.420
Well, this is true for most things,

00:00:12.420 --> 00:00:16.275
if we were to go ahead and add a new board, let's say,

00:00:16.275 --> 00:00:22.640
courses to take, add the color and then create a new board,

00:00:22.640 --> 00:00:25.440
you'll see this will appear without a refresh.

00:00:25.440 --> 00:00:30.240
I wanted to show you two different ways we can approach updating this application.

00:00:30.240 --> 00:00:33.900
The first is just as we have here with the new boards,

00:00:33.900 --> 00:00:36.045
each time we add or remove a board,

00:00:36.045 --> 00:00:38.430
we set the boards into state.

00:00:38.430 --> 00:00:41.960
As we already know, one of the benefits of this is,

00:00:41.960 --> 00:00:45.565
it will update all the components which we'll use as state.

00:00:45.565 --> 00:00:48.350
It is also going to be generally faster than

00:00:48.350 --> 00:00:51.535
waiting on the database to send the data back,

00:00:51.535 --> 00:00:55.445
but this also means we have two sources of the same data.

00:00:55.445 --> 00:00:59.555
We have the board stored in state and also in Firebase.

00:00:59.555 --> 00:01:02.870
If an error occurs when updating either one of these,

00:01:02.870 --> 00:01:06.010
it can then cause our application to be out-of-sync.

00:01:06.010 --> 00:01:10.880
Another approach which we're now going to use our lists and cards is to use

00:01:10.880 --> 00:01:16.120
Firebase's real-time functionality to tell us when something has changed.

00:01:16.120 --> 00:01:19.095
Rather than us asking for the data,

00:01:19.095 --> 00:01:23.280
Firebase will send it to us each time there is a change.

00:01:23.280 --> 00:01:28.425
Let's begin with the get list method in the board components.

00:01:28.425 --> 00:01:36.880
Go to the board.js and scroll up to get lists.

00:01:37.700 --> 00:01:40.805
This is here just about the top of this file.

00:01:40.805 --> 00:01:44.255
Get lists uses this get method to get what is called

00:01:44.255 --> 00:01:48.140
a snapshot of our data at the current time.

00:01:48.140 --> 00:01:50.150
To get real-time updates,

00:01:50.150 --> 00:01:54.100
we can replace this with a method called on snapshots.

00:01:54.100 --> 00:01:59.885
On snapshots, it touches a listener which will notify us when a change has been made.

00:01:59.885 --> 00:02:03.110
To do this, I'm going to comment out our existing data.

00:02:03.110 --> 00:02:06.020
So everything just above our catch block,

00:02:06.020 --> 00:02:08.690
all the way over to the get method.

00:02:08.690 --> 00:02:12.680
Now we can begin to replace this with our own snapshot method.

00:02:12.680 --> 00:02:14.915
The same principles do apply.

00:02:14.915 --> 00:02:18.380
We want to get our data loop through it,

00:02:18.380 --> 00:02:19.700
create a list object,

00:02:19.700 --> 00:02:21.910
and then save it to state.

00:02:21.910 --> 00:02:23.930
First we call on snapshot,

00:02:23.930 --> 00:02:26.075
which takes in a function.

00:02:26.075 --> 00:02:27.980
Just in the auto by,

00:02:27.980 --> 00:02:31.470
we can then call on snapshots,

00:02:31.510 --> 00:02:35.730
passing in the snapshots for each function.

00:02:36.220 --> 00:02:38.840
For each data, snapshots,

00:02:38.840 --> 00:02:42.175
which is an object containing details about query,

00:02:42.175 --> 00:02:51.155
we then want to call a method called doc changes, so snapshots.doc changes.

00:02:51.155 --> 00:02:56.890
Doc changes will return an array containing the changes since our last snapshots.

00:02:56.890 --> 00:03:00.355
Then what do we need to do when we have an array of data?

00:03:00.355 --> 00:03:04.765
Well, we need to live through it so we can work with each individual item.

00:03:04.765 --> 00:03:07.915
Just after here, we can then call for each,

00:03:07.915 --> 00:03:10.120
passing a callback function,

00:03:10.120 --> 00:03:11.410
so for each change.

00:03:11.410 --> 00:03:15.100
But I'm going to run the code inside these braces.

00:03:15.100 --> 00:03:16.690
Before we go any further though,

00:03:16.690 --> 00:03:22.090
let's do a console log and we can log the value of change. Save this file.

00:03:22.090 --> 00:03:24.080
Go over to the browser,

00:03:24.080 --> 00:03:27.009
open up the console,

00:03:27.260 --> 00:03:29.725
click on any of these boards,

00:03:29.725 --> 00:03:31.375
and let's add a new list.

00:03:31.375 --> 00:03:33.640
Let's say, to do list one,

00:03:33.640 --> 00:03:37.055
hit enter, and we'll get a console log.

00:03:37.055 --> 00:03:40.685
One thing we need to note here is this type of added.

00:03:40.685 --> 00:03:43.895
Bear this in mind as we will need comeback to this very soon,

00:03:43.895 --> 00:03:47.050
but the main thing here we need is this doc.

00:03:47.050 --> 00:03:52.535
This is a snapshot of the documents containing all the data which we need.

00:03:52.535 --> 00:03:54.320
We can see it has the ID.

00:03:54.320 --> 00:03:58.285
If we click on this and we can grab this with doc.id.

00:03:58.285 --> 00:04:00.980
Something which is not so obvious by looking at

00:04:00.980 --> 00:04:05.045
this doc is how we get the rest of our list data.

00:04:05.045 --> 00:04:08.735
How we can in fact get is by calling a data method.

00:04:08.735 --> 00:04:11.345
Let's go over to our console log.

00:04:11.345 --> 00:04:14.675
We can access our doc which we've just seen in the console

00:04:14.675 --> 00:04:19.360
and then the data method, save this.

00:04:19.430 --> 00:04:24.780
We now see inside here, we have our list object which contains the board ID,

00:04:24.780 --> 00:04:26.130
the created at date,

00:04:26.130 --> 00:04:28.110
and also the title.

00:04:28.110 --> 00:04:31.355
This combined with the ID we seem for,

00:04:31.355 --> 00:04:35.930
will now give us all the information we needed to construct our new list.

00:04:35.930 --> 00:04:38.000
Let's go back over,

00:04:38.000 --> 00:04:40.340
we can remove our console log.

00:04:40.340 --> 00:04:42.920
Then inside of our four each,

00:04:42.920 --> 00:04:45.695
we can create a constant called doc.

00:04:45.695 --> 00:04:49.430
This is going to store the value of change.doc,

00:04:49.430 --> 00:04:52.865
giving us a reference to our documents.

00:04:52.865 --> 00:04:55.890
The next step is to create our list,

00:04:55.890 --> 00:04:58.600
which is going to be an object.

00:04:58.600 --> 00:05:01.025
We first need to grab the ID,

00:05:01.025 --> 00:05:04.610
which is available from doc.ID,

00:05:04.610 --> 00:05:06.920
which is exactly what we seen before,

00:05:06.920 --> 00:05:11.040
so doc is equal to change.doc.ID.

00:05:11.590 --> 00:05:14.914
We then need to grab the title,

00:05:14.914 --> 00:05:17.665
which is available from doc,

00:05:17.665 --> 00:05:21.085
the data method which we just looked at.

00:05:21.085 --> 00:05:23.519
Grab our list objects,

00:05:23.519 --> 00:05:27.590
and then grab the title outside of our list object.

00:05:27.590 --> 00:05:29.865
We can then set the state,

00:05:29.865 --> 00:05:34.410
so this.setstates passing in the objects.

00:05:34.410 --> 00:05:37.860
The state we want to update is the current list.

00:05:37.860 --> 00:05:40.710
As an array, we're going to merge in the current list,

00:05:40.710 --> 00:05:48.875
so this.date.currentlists then separated by a comma,

00:05:48.875 --> 00:05:51.025
we can add in our new list.

00:05:51.025 --> 00:05:52.830
Now save this file,

00:05:52.830 --> 00:05:55.925
and we can go back over to our project in the browser.

00:05:55.925 --> 00:05:57.620
We can try and add a new list,

00:05:57.620 --> 00:05:59.735
and this should be added automatically.

00:05:59.735 --> 00:06:03.835
Let's say to do list two, hit enter.

00:06:03.835 --> 00:06:08.425
Now this is being updated without needing to refresh the browser.

00:06:08.425 --> 00:06:12.725
However, though, if we now click on any of these lists and delete,

00:06:12.725 --> 00:06:19.235
we now see a error inside the console and also our list has been added as a third item.

00:06:19.235 --> 00:06:22.100
The error message down in the console says that it's

00:06:22.100 --> 00:06:25.465
encountered two children with the same key.

00:06:25.465 --> 00:06:27.710
This is because of the way we handle

00:06:27.710 --> 00:06:33.150
our document changes and this is what we'll look at in the upcoming video.
