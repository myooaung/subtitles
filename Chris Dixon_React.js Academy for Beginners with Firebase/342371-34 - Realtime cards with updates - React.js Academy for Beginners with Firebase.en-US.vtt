WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.280 --> 00:00:06.195
We can also add this on snapshot listener total cards too.

00:00:06.195 --> 00:00:08.325
Meaning if we cause any updates,

00:00:08.325 --> 00:00:11.130
if we add any cards or delete any,

00:00:11.130 --> 00:00:14.625
these changes are immediately reflected in the app.

00:00:14.625 --> 00:00:18.340
Let's do this over in the.js,

00:00:18.340 --> 00:00:23.305
which is responsible for fetching the cards with the fetch cards method.

00:00:23.305 --> 00:00:26.025
Let's scroll down to fetch cards.

00:00:26.025 --> 00:00:29.360
Just like with the list we're going to comment out everything from

00:00:29.360 --> 00:00:33.350
adjustable catch all the way up to the get method.

00:00:33.350 --> 00:00:36.655
Then we can now replace this with our snapshot.

00:00:36.655 --> 00:00:38.910
Just have to order by we can add on

00:00:38.910 --> 00:00:44.770
snapshot which then takes in a snapshots of each change.

00:00:44.770 --> 00:00:46.755
So it's about function,

00:00:46.755 --> 00:00:51.440
and then inside here we're going to live through each one of the document changes.

00:00:51.440 --> 00:00:56.845
We can do this with snapshot.docChanges.

00:00:56.845 --> 00:00:58.830
For each document change,

00:00:58.830 --> 00:01:03.730
we're going to run the forEach method passing in the change.

00:01:04.250 --> 00:01:08.870
We're going to construct our card just like we did with the list.

00:01:08.870 --> 00:01:12.290
First of all, create a constant called doc,

00:01:12.290 --> 00:01:21.705
which is going to be equal to change.doc We then create our card set of all card objects.

00:01:21.705 --> 00:01:28.505
The ID, remember is from the doc.id separated by a comma.

00:01:28.505 --> 00:01:32.765
We also have the text which is available in our doc variable.

00:01:32.765 --> 00:01:36.695
We have the data method to grab all the data.

00:01:36.695 --> 00:01:41.750
The data we want is from the card object and the field of text.

00:01:41.750 --> 00:01:45.050
This one also has the labels too.

00:01:45.050 --> 00:01:47.045
Just like the line above,

00:01:47.045 --> 00:01:52.140
we call data accessible card object,

00:01:52.140 --> 00:01:55.050
and then the field called labels.

00:01:55.050 --> 00:01:57.380
Then just like we did in the last video,

00:01:57.380 --> 00:01:59.150
we need to track the change type.

00:01:59.150 --> 00:02:02.240
Then set the state depending on if it was added,

00:02:02.240 --> 00:02:05.035
removed, or also modified.

00:02:05.035 --> 00:02:08.205
Let's do this. Just after our card objects,

00:02:08.205 --> 00:02:11.440
we can add a if statement to check if the

00:02:11.440 --> 00:02:18.120
change.type is first equal to added add the curly braces.

00:02:18.120 --> 00:02:21.705
Then we can set the state, so this.setState.

00:02:21.705 --> 00:02:23.900
Since this is an addition,

00:02:23.900 --> 00:02:27.020
we're going to merge in the current cards as

00:02:27.020 --> 00:02:33.160
an array for the spread operator, grab this.state.

00:02:33.160 --> 00:02:38.070
This.states.currentCards separated by a comma

00:02:38.070 --> 00:02:41.260
we're then going to merge in our card objects.

00:02:41.290 --> 00:02:44.150
Underneath this first if section,

00:02:44.150 --> 00:02:47.660
we can add a second one to check if the change type,

00:02:47.660 --> 00:02:51.450
this time is going to be equal to removed.

00:02:53.800 --> 00:02:57.380
If this is removed, we are going to do a very similar thing to

00:02:57.380 --> 00:03:01.220
the lists where we are going to filter out by the id.

00:03:01.220 --> 00:03:05.960
We're going to first set this.setStates,

00:03:05.960 --> 00:03:12.035
passing our objects, select the currentCards.

00:03:12.035 --> 00:03:18.920
We're then going to spread this.state.currentCards

00:03:18.920 --> 00:03:22.310
where we are going to call the filter method.

00:03:22.310 --> 00:03:26.150
Each item will be stored inside of this card variable,

00:03:26.150 --> 00:03:29.180
we'll then only going to return the cards

00:03:29.180 --> 00:03:32.945
where the ID doesn't match the one which has been removed.

00:03:32.945 --> 00:03:42.520
The card.id which is not equal to change.doc.id,.

00:03:42.520 --> 00:03:44.700
After this removed section,

00:03:44.700 --> 00:03:47.405
we're then also going to add a modified section.

00:03:47.405 --> 00:03:55.320
This time if the change.type is equal to the string of modified,

00:03:55.780 --> 00:03:59.060
we then run this code inside of the curly braces.

00:03:59.060 --> 00:04:01.400
The first thing we need to do is grab

00:04:01.400 --> 00:04:05.765
the index number of the item which is stored in the states.

00:04:05.765 --> 00:04:09.710
We can start this inside of a constant called index.

00:04:09.710 --> 00:04:16.150
This is equal to this.state.currentCards.

00:04:16.150 --> 00:04:19.650
We're then going to use the find index method.

00:04:19.650 --> 00:04:22.700
Inside of here each item which will loop through,

00:04:22.700 --> 00:04:25.295
it's going to be stored in this item variable.

00:04:25.295 --> 00:04:28.820
Therefore, we can only return the item where the

00:04:28.820 --> 00:04:36.850
item.id is equal to change.doc.id.

00:04:36.850 --> 00:04:41.525
This is going to return a single item from our currentCards.

00:04:41.525 --> 00:04:46.760
The item where the item ID is equal to the one which is being changed.

00:04:46.760 --> 00:04:48.440
We need this index number,

00:04:48.440 --> 00:04:54.725
all this position of our item inside this state so we know exactly which item to update.

00:04:54.725 --> 00:04:56.360
The next step is to create

00:04:56.360 --> 00:05:02.165
a constant called cards which is going to be equal to all the cards in our current state.

00:05:02.165 --> 00:05:07.890
We going to grab these with the spread operator so this.state.currentCards.

00:05:09.770 --> 00:05:14.025
We now have everything we now need to update our state.

00:05:14.025 --> 00:05:17.900
We have the currentCards which has been modified.

00:05:17.900 --> 00:05:22.795
We have the index number which is the position which is stored in states.

00:05:22.795 --> 00:05:25.385
We have all of our rights come from states,

00:05:25.385 --> 00:05:27.890
so now we can go ahead and update this.

00:05:27.890 --> 00:05:31.085
First, we select all our cards in states.

00:05:31.085 --> 00:05:33.590
We select by the index number,

00:05:33.590 --> 00:05:36.395
the individual card which we want to update.

00:05:36.395 --> 00:05:40.040
For example, this would be cards zero, cards five,

00:05:40.040 --> 00:05:44.530
cards 10, all whichever number this is in our state.

00:05:44.530 --> 00:05:49.120
We're then going to replace this with our card object from above.

00:05:49.120 --> 00:05:55.875
Then set this to state with this.setState pass in our objects,

00:05:55.875 --> 00:06:01.770
so the current cards is now going to be equal to this cards array.

00:06:02.480 --> 00:06:06.540
We can now scroll down, and remove the original code,

00:06:06.540 --> 00:06:08.325
so with the get method,

00:06:08.325 --> 00:06:10.425
and also the for each.

00:06:10.425 --> 00:06:12.410
Also if we scroll back up,

00:06:12.410 --> 00:06:15.800
we can now see we're no longer using this current constant.

00:06:15.800 --> 00:06:20.425
We can also remove this and just simply awaits our cardsRef.

00:06:20.425 --> 00:06:25.070
We'll save this file and now we'll go to the browser and test this out,

00:06:25.070 --> 00:06:26.750
head over to the board.

00:06:26.750 --> 00:06:31.410
I will need to add some lists add as ABC.

00:06:31.790 --> 00:06:36.930
I can also add some more into our different lists.

00:06:36.930 --> 00:06:40.440
We can add cards and this updated in real time.

00:06:40.440 --> 00:06:43.950
Let's try to move in number two that's good,

00:06:43.950 --> 00:06:46.544
and number four, if reload,

00:06:46.544 --> 00:06:48.015
these are still showing.

00:06:48.015 --> 00:06:50.100
Let's now try to modify this.

00:06:50.100 --> 00:06:53.055
Let's change one to be a hundred.

00:06:53.055 --> 00:06:58.815
Save our changes and this changes are now being reflected in real-time.

00:06:58.815 --> 00:07:02.420
This now leaves us with our board listing cards,

00:07:02.420 --> 00:07:07.140
all now updating without need to refresh the browser.
