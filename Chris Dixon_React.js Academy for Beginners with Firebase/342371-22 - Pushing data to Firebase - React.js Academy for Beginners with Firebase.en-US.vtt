WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.770 --> 00:00:05.280
We now have five bays setup and we know our connection is now working.

00:00:05.280 --> 00:00:10.980
We can move on to creating our methods in react to then push data to Firebase,

00:00:10.980 --> 00:00:14.010
starting in this app.js.

00:00:14.010 --> 00:00:18.420
Here we already have a method set up to create a new board.

00:00:18.420 --> 00:00:24.854
So we can now use the Firebase add method to push our new board data to our database.

00:00:24.854 --> 00:00:29.385
Let's begin inside of this method just before setting state.

00:00:29.385 --> 00:00:33.750
We create a new constant which is going to be called the new board.

00:00:33.750 --> 00:00:36.090
We want to set this equal to

00:00:36.090 --> 00:00:41.270
our board graph which we imported at the top of the file in the last video,

00:00:41.270 --> 00:00:44.965
which will point to our collection of boards.

00:00:44.965 --> 00:00:50.239
We then going to use the add method to then push a object,

00:00:50.239 --> 00:00:52.370
which is going to be our board,

00:00:52.370 --> 00:00:55.585
which is passed to this method as a parameter.

00:00:55.585 --> 00:01:00.455
Firebase record will automatically get an ID generated.

00:01:00.455 --> 00:01:03.185
Before saving our new board states,

00:01:03.185 --> 00:01:06.170
we can construct a new objects where we grew up

00:01:06.170 --> 00:01:10.090
this ID and then add it to the rest of the board.

00:01:10.090 --> 00:01:14.205
Let's do this, just above our set state call.

00:01:14.205 --> 00:01:19.955
We can create a constant which is going to be called the board object.

00:01:19.955 --> 00:01:26.840
Here all I want to do is to grab the existing board data and also merging a ID.

00:01:26.840 --> 00:01:30.274
So first of all, let's says a ID property,

00:01:30.274 --> 00:01:37.500
which is going to be equal to our new board constants, then ID.

00:01:37.500 --> 00:01:40.660
Remember, new board will refer to the data

00:01:40.660 --> 00:01:44.395
which will return back from Firebase when we add this new board.

00:01:44.395 --> 00:01:48.575
Therefore it will also have the Firebase ID property.

00:01:48.575 --> 00:01:51.250
We can also add a comma and then use

00:01:51.250 --> 00:01:55.475
this spread operator to add in the rest of the board.

00:01:55.475 --> 00:01:58.140
Now when we set in the states,

00:01:58.140 --> 00:02:01.780
we instead want to add this new board objects.

00:02:01.940 --> 00:02:07.280
Next we can add some error handling to this method using async await.

00:02:07.280 --> 00:02:11.110
Async await will allow us to wait for the board to be first saved

00:02:11.110 --> 00:02:15.065
to Firebase before moving on to the next line of code.

00:02:15.065 --> 00:02:19.490
We want to make sure that the board is first saved because we need

00:02:19.490 --> 00:02:24.425
to access this generated ID before we can save it to state.

00:02:24.425 --> 00:02:31.325
First of all, we can set this function to be asynchronous by adding the async keyword.

00:02:31.325 --> 00:02:35.240
This will then allow us to add await into our method.

00:02:35.240 --> 00:02:40.950
The data which we want to awake and come back is this new board from Firebase.

00:02:40.950 --> 00:02:45.230
We can then add some error handling using try and catch.

00:02:45.230 --> 00:02:49.660
First of all, let's run this code inside of a try block.

00:02:49.660 --> 00:02:52.485
Open up the curly braces.

00:02:52.485 --> 00:02:56.680
When I'm going to close this off just after we set the state.

00:02:56.680 --> 00:02:59.480
Add an extra curly brace right at the end.

00:02:59.480 --> 00:03:02.300
If you're not used to try and catch before

00:03:02.300 --> 00:03:05.915
the try section is the code which we first need to try to run.

00:03:05.915 --> 00:03:09.500
If the code which is run is successful, all is good.

00:03:09.500 --> 00:03:12.905
If there is a error when running this code in the try block,

00:03:12.905 --> 00:03:15.980
we can then catch this error using a catch block.

00:03:15.980 --> 00:03:17.600
Just after this curly brace,

00:03:17.600 --> 00:03:19.975
we can also add a catch block,

00:03:19.975 --> 00:03:23.925
which is going to take in the error as a variable.

00:03:23.925 --> 00:03:26.745
Open and close the curly braces.

00:03:26.745 --> 00:03:29.795
We can then do a console error,

00:03:29.795 --> 00:03:38.705
which you're going to output a string of error creating new board and a colon.

00:03:38.705 --> 00:03:41.695
Then after this, we can also add a comma.

00:03:41.695 --> 00:03:47.450
Then we can also display this error which is passed in to catch, this to save.

00:03:47.450 --> 00:03:51.020
Then we can go over to our boards and we can try this out.

00:03:51.020 --> 00:03:55.860
Off to the browser into our projects.

00:03:56.750 --> 00:03:59.715
We still have a bar graph here.

00:03:59.715 --> 00:04:03.520
Let's go up into the boards.

00:04:04.550 --> 00:04:07.440
It's now over to a home components.

00:04:07.440 --> 00:04:09.830
Well, we need to add in a user, let's go for 1,

00:04:09.830 --> 00:04:12.470
2, 3 and then forward slash board.

00:04:12.470 --> 00:04:16.115
Let's try this out by pushing a new item into Firebase.

00:04:16.115 --> 00:04:22.645
Let's go for a test board a color green, then creating a new board.

00:04:22.645 --> 00:04:26.950
This board is then immediately added since it pushed it to state.

00:04:26.950 --> 00:04:33.035
As we already know, state will trigger an update in all components which uses data.

00:04:33.035 --> 00:04:35.150
If we now refresh this,

00:04:35.150 --> 00:04:40.639
the data will be lost since we get this boards from states rather than from Firebase.

00:04:40.639 --> 00:04:45.640
Well, we can go over to the Firebase console and check this has been saved.

00:04:45.640 --> 00:04:48.580
Reload the console.

00:04:52.330 --> 00:04:56.330
Our test board is now saved inside here.

00:04:56.330 --> 00:05:00.320
As we mentioned before, Firebase adds a unique ID.

00:05:00.320 --> 00:05:02.750
Let's go to the Developer Tools.

00:05:02.750 --> 00:05:06.580
We can also check that this is being added to our state.

00:05:06.580 --> 00:05:12.210
That's our test two. Create a new board.

00:05:12.210 --> 00:05:17.245
You can now see how states has been updated to include four items in the array.

00:05:17.245 --> 00:05:20.210
Click on this, if we click on the last one,

00:05:20.210 --> 00:05:24.695
we now see this unique ID has been added to our object.

00:05:24.695 --> 00:05:30.740
This should be the same ID which is being provided inside the Firebase if reload.

00:05:33.560 --> 00:05:38.270
Then click on this. This is our test two with the same ID,

00:05:38.270 --> 00:05:40.385
which we now have in-state.

00:05:40.385 --> 00:05:44.195
Let's now do the same over in the board.js.

00:05:44.195 --> 00:05:47.495
We can push our new lists to Firebase two.

00:05:47.495 --> 00:05:50.165
Head over to our ball components.

00:05:50.165 --> 00:05:55.020
Then we need to look for a method called create new list.

00:05:55.250 --> 00:05:57.765
This is what we need just here.

00:05:57.765 --> 00:06:01.355
The first thing I'm going to do is to mark this function as a sink,

00:06:01.355 --> 00:06:03.035
so we can use a wait.

00:06:03.035 --> 00:06:07.080
Then we can add some error handling by adding a try block.

00:06:07.220 --> 00:06:10.170
Open and close the curly braces.

00:06:10.170 --> 00:06:15.130
We can then remove this curly brace and then add it down at the end.

00:06:15.130 --> 00:06:20.880
Just after we set our Ref back to an empty string, you can add this in.

00:06:20.880 --> 00:06:24.675
Add a catch block which passes in an error.

00:06:24.675 --> 00:06:27.300
Open and close the curly braces.

00:06:27.300 --> 00:06:32.115
Then we can pass a console error with the string,

00:06:32.115 --> 00:06:35.770
which is going to be error creating a new list.

00:06:37.160 --> 00:06:40.110
Passing in the error.

00:06:40.110 --> 00:06:43.325
With this error handling now taken care of,

00:06:43.325 --> 00:06:47.320
we now need to make some changes to our list objective.

00:06:47.320 --> 00:06:52.775
Let's scroll up. Here we have a list object which we created earlier.

00:06:52.775 --> 00:06:55.955
The first step is to now remove this ID.

00:06:55.955 --> 00:06:59.075
Since we're going to be adding this via Firebase.

00:06:59.075 --> 00:07:04.750
We can also remove these cards array since you no longer need this data.

00:07:04.750 --> 00:07:10.785
Let's remove this. We will be identity cards as a separate collection inside a Firebase,

00:07:10.785 --> 00:07:14.060
and then linking them together via the IDs.

00:07:14.060 --> 00:07:16.605
Now we should just be left with the title,

00:07:16.605 --> 00:07:19.825
the board, and also the created art.

00:07:19.825 --> 00:07:23.315
This list also needs to be linked to the color board,

00:07:23.315 --> 00:07:26.325
so we can change the board property to do this,

00:07:26.325 --> 00:07:29.150
rather than having a hard-coded value.

00:07:29.150 --> 00:07:38.705
We can now set this to be this dot props dot match dot params dot boardID.

00:07:38.705 --> 00:07:41.390
If we go to our board, remember,

00:07:41.390 --> 00:07:45.855
this is the data which we get passed from the react router.

00:07:45.855 --> 00:07:49.110
We can see this over in the developer tools.

00:07:49.110 --> 00:07:52.820
If we click on any of these, choose the board,

00:07:52.820 --> 00:07:55.820
then we have the props passed via the router,

00:07:55.820 --> 00:07:58.820
inside a match dot params.

00:07:58.820 --> 00:08:00.680
We have this boardID.

00:08:00.680 --> 00:08:03.030
Therefore this you're going to link the card which have

00:08:03.030 --> 00:08:05.510
been created with the current board.

00:08:05.510 --> 00:08:07.835
This will allow us later on in the course,

00:08:07.835 --> 00:08:09.780
to then pull in all of the lists from

00:08:09.780 --> 00:08:12.975
Firebase for the current board which we are viewing.

00:08:12.975 --> 00:08:15.640
Below this we have a statement.

00:08:15.640 --> 00:08:21.210
We can also make sure that the boardID is also present before we save this to Firebase.

00:08:21.210 --> 00:08:24.020
You can also add a list,

00:08:24.020 --> 00:08:30.115
a part because we don't want to save a list which has no relationship to a board.

00:08:30.115 --> 00:08:32.740
Now instead of saving this list to states,

00:08:32.740 --> 00:08:35.450
we're now going to push this to Firebase.

00:08:35.450 --> 00:08:38.750
Since we now deal with the lists, rather than boards,

00:08:38.750 --> 00:08:42.765
we need to import the list reference from o5 based file.

00:08:42.765 --> 00:08:47.300
We can do this by importing the lists ref,

00:08:47.300 --> 00:08:50.085
from our Firebase file,

00:08:50.085 --> 00:08:56.045
which is located in dot-dot slash then the filename of Firebase.

00:08:56.045 --> 00:09:01.605
Then we can add our new list to Firebase instead of using the set states,

00:09:01.605 --> 00:09:03.620
that you move this line.

00:09:03.620 --> 00:09:08.745
Instead we can add a weight into mark dysfunction as asynchronous.

00:09:08.745 --> 00:09:11.720
We can access our lists draft.

00:09:11.720 --> 00:09:15.945
We can then use the add method to add a new object.

00:09:15.945 --> 00:09:19.960
This new object is the list with retreated above.

00:09:20.610 --> 00:09:25.175
Now let's save this and we can test this out over in the browser,

00:09:25.175 --> 00:09:28.420
make sure you inside of one of the boards.

00:09:28.420 --> 00:09:31.800
Then we can now go and create a new list.

00:09:31.800 --> 00:09:34.860
Click on this, so course list

00:09:34.860 --> 00:09:45.290
1 and also add course list 2 over to the Firebase console.

00:09:48.090 --> 00:09:54.200
After reload, now see our lists objects or our list collection has now been created.

00:09:54.200 --> 00:09:56.270
We have our two lists.

00:09:56.270 --> 00:10:01.250
The first one is linked to board 1,000 as is the second one.

00:10:01.250 --> 00:10:06.865
We can see inside of our projects in the URL that this is the boardID.

00:10:06.865 --> 00:10:12.030
Let's just go over to house ideas and other a new list 2.

00:10:12.030 --> 00:10:18.279
House list 1, we'll check this inside of the console.

00:10:18.279 --> 00:10:22.570
Make sure this has the ID of 2,000.

00:10:24.920 --> 00:10:29.440
There you go. The last thing we need to do in this video,

00:10:29.440 --> 00:10:31.510
is to create a new card.

00:10:31.510 --> 00:10:35.775
New cards are created in the parent list components.

00:10:35.775 --> 00:10:39.055
This will follow a similar pattern to what we've just done.

00:10:39.055 --> 00:10:41.504
There shouldn't be any surprises.

00:10:41.504 --> 00:10:44.765
Over to the list dot layers.

00:10:44.765 --> 00:10:49.900
We can first set the create new card method to be async.

00:10:50.510 --> 00:10:55.120
You can then wrap our code in the try block.

00:10:55.560 --> 00:10:57.875
Take off the closing brace,

00:10:57.875 --> 00:11:00.455
and then we can add this down at the bottom.

00:11:00.455 --> 00:11:02.875
Your stuff over console log,

00:11:02.875 --> 00:11:05.405
also add in the catch section,

00:11:05.405 --> 00:11:09.575
which you are going to take in any errors which are created.

00:11:09.575 --> 00:11:17.990
It generates a console dot error with the string of error creating new card,

00:11:21.400 --> 00:11:24.870
at the colon and then pass in our error.

00:11:24.870 --> 00:11:29.090
The only change to our card is the set the list ID.

00:11:29.090 --> 00:11:32.880
We can grab this from the list prompts, which are passed down,

00:11:32.880 --> 00:11:39.480
rather than is hard-coded value of abc 1,2,3 we grab these from our props,

00:11:39.480 --> 00:11:43.215
which you set via the list dot ID.

00:11:43.215 --> 00:11:46.110
Here we are creating a new card.

00:11:46.110 --> 00:11:50.315
We'll also creating a reference to the list, which it belongs to.

00:11:50.315 --> 00:11:56.629
If we go over to the list components in our projects and the reactive tools,

00:11:56.629 --> 00:11:59.030
search for any list.

00:11:59.030 --> 00:12:02.480
We can then see this list which is passed as props.

00:12:02.480 --> 00:12:04.870
Here we are grabbing the list ID,

00:12:04.870 --> 00:12:06.985
which is 100 in this case,

00:12:06.985 --> 00:12:11.760
the second one has a list ID of 300 and so on.

00:12:11.760 --> 00:12:14.740
The next step is to import our cards ref,

00:12:14.740 --> 00:12:16.970
from our Firebase file.

00:12:17.660 --> 00:12:20.595
Inside the curly braces.

00:12:20.595 --> 00:12:28.000
Grab the card's graph. The file path is also dot-dot slash Firebase.

00:12:28.130 --> 00:12:31.235
Just like we did with the list before,

00:12:31.235 --> 00:12:35.535
we can also go down to the if statements before push this to state.

00:12:35.535 --> 00:12:38.895
Then we can also add onto the end a second track,

00:12:38.895 --> 00:12:44.960
which is also going to check if the card dot list ID is also present.

00:12:44.960 --> 00:12:49.715
Since this is required before saving to states or to Firebase.

00:12:49.715 --> 00:12:54.290
The next step is to also remove this set state method.

00:12:54.600 --> 00:13:00.780
Instead, we are going to await cards ref dot add.

00:13:00.780 --> 00:13:02.705
We add this to Firebase,

00:13:02.705 --> 00:13:07.800
the object which we want to add is this card which we just constructed above.

00:13:07.800 --> 00:13:09.950
Parsing of a card,

00:13:09.950 --> 00:13:13.085
save this file and then we can test this in the browser.

00:13:13.085 --> 00:13:17.595
We can test this by adding a new card into multiple lists.

00:13:17.595 --> 00:13:24.950
Let's say house card one, house card two.

00:13:25.050 --> 00:13:28.330
This is for the travel ideas.

00:13:28.330 --> 00:13:36.590
Travel card one. This is card one,

00:13:36.590 --> 00:13:40.420
forward to Firebase and then refresh the console.

00:13:42.020 --> 00:13:44.075
Those are the cards.

00:13:44.075 --> 00:13:48.855
This first one is associated with the list 200.

00:13:48.855 --> 00:13:55.220
The second one is 100s, and also 300s.

00:13:55.220 --> 00:13:57.170
Everything is working fine.

00:13:57.170 --> 00:14:00.100
We also have the correct text for each one.

00:14:00.100 --> 00:14:01.840
We have a created update,

00:14:01.840 --> 00:14:04.685
which is been generated using JavaScript.

00:14:04.685 --> 00:14:07.015
We don't have any labels just yet,

00:14:07.015 --> 00:14:09.850
but we'll come back to this later on in the course.

00:14:09.850 --> 00:14:12.950
Now have the Firebase data to work with.

00:14:12.950 --> 00:14:14.235
In the next video,

00:14:14.235 --> 00:14:16.440
we're going to remove the sample data from

00:14:16.440 --> 00:14:21.190
our projects and instead read the data from Firebase.
