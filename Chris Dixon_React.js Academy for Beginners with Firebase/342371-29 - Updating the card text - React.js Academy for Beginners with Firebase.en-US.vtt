WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.860 --> 00:00:02.940
Inside of our project,

00:00:02.940 --> 00:00:08.250
if we go over to the React Developer Tools and then search for the card components.

00:00:08.250 --> 00:00:10.440
If we select any of these cards,

00:00:10.440 --> 00:00:13.395
we can see over on the right-hand side we have this data prop,

00:00:13.395 --> 00:00:15.525
which is available to each one.

00:00:15.525 --> 00:00:19.200
This contains all the information about the current card,

00:00:19.200 --> 00:00:22.170
such as the created at date, the ID,

00:00:22.170 --> 00:00:26.040
and any labels which is stored inside the Firebase.

00:00:26.040 --> 00:00:31.185
Since the modal is going to be responsible for changing or updating all this data,

00:00:31.185 --> 00:00:35.114
we need to pass this data down to the modal components.

00:00:35.114 --> 00:00:39.465
Let's do this by first going out to the card.js.

00:00:39.465 --> 00:00:42.250
Then inside of the edit card modal,

00:00:42.250 --> 00:00:44.420
we can then add a third prop to this,

00:00:44.420 --> 00:00:47.125
which is going to be called the card data.

00:00:47.125 --> 00:00:50.635
Then we can pass this data down as props.

00:00:50.635 --> 00:00:56.115
This. props.data, then we go over to the edit card modal.

00:00:56.115 --> 00:01:00.365
Remember when we created this component will be in states,

00:01:00.365 --> 00:01:03.845
we also created a selected labels array,

00:01:03.845 --> 00:01:05.945
which we set to be empty.

00:01:05.945 --> 00:01:09.500
Now we have the data available from Firebase,

00:01:09.500 --> 00:01:12.635
which includes any labels which have already been selected.

00:01:12.635 --> 00:01:18.145
We can now update this array to include any cards which you currently saved.

00:01:18.145 --> 00:01:21.460
We can use this as soon as the component mounts.

00:01:21.460 --> 00:01:28.700
We have component did mount and then inside here,

00:01:28.700 --> 00:01:31.655
we're simply going to set the state with this.

00:01:31.655 --> 00:01:40.825
set state. Our object is going to update the selected labels with value from our props,

00:01:40.825 --> 00:01:47.335
which is stored in card data and the card data wants is the labels field.

00:01:47.335 --> 00:01:51.815
Now let's save this and open up the modal and see what we need to do.

00:01:51.815 --> 00:01:56.370
Go to the project, click on the text.

00:01:58.340 --> 00:02:03.885
The first thing to do is to add the card text inside of this text area.

00:02:03.885 --> 00:02:06.470
The user can change it if they would like.

00:02:06.470 --> 00:02:10.040
The second thing to do is to loop through our selected labels,

00:02:10.040 --> 00:02:12.395
and then display them just under here.

00:02:12.395 --> 00:02:17.260
Let's start by adding in the card title into the text area.

00:02:17.260 --> 00:02:19.770
Back open to VS Code,

00:02:19.770 --> 00:02:24.960
we can go down to the random effort and take a look for the input,

00:02:25.000 --> 00:02:29.705
which is just down here as our data is onto the online.

00:02:29.705 --> 00:02:35.290
We need to add the default value which is going to display the value of the text.

00:02:35.290 --> 00:02:38.055
We can set this from props. So this.

00:02:38.055 --> 00:02:41.590
props. card data.

00:02:42.290 --> 00:02:46.400
text. The second thing to do was to loop through all of

00:02:46.400 --> 00:02:51.155
the available labels in state and then display them under this labels title.

00:02:51.155 --> 00:02:54.740
We already have a place holder comments where we want this to appear.

00:02:54.740 --> 00:02:58.550
But now I want to replace this by mapping through our selected labels.

00:02:58.550 --> 00:03:00.440
Inside the curly braces,

00:03:00.440 --> 00:03:04.510
we can select our states, the selected labels.

00:03:04.510 --> 00:03:08.180
I'm going to use the map method to loop through each one,

00:03:08.180 --> 00:03:11.360
store each value inside of a label.

00:03:11.360 --> 00:03:15.010
We can then set up our function for each one.

00:03:15.010 --> 00:03:20.115
Inside here, all we're going to do is to return a HTML span element.

00:03:20.115 --> 00:03:23.510
This span element is going to have a background color,

00:03:23.510 --> 00:03:26.060
which is the same as the label color.

00:03:26.060 --> 00:03:27.620
Inside the opening tag,

00:03:27.620 --> 00:03:32.100
we can create a class name of label.

00:03:32.100 --> 00:03:37.215
But also we want to set the style value with a double curly braces.

00:03:37.215 --> 00:03:42.505
Set the CSS background property to be equal to the label.

00:03:42.505 --> 00:03:45.230
This background-color of label is going to be

00:03:45.230 --> 00:03:48.890
equal to the hex value which we have inside the state.

00:03:48.890 --> 00:03:53.710
This selected labels will contain any of these hexagon values.

00:03:53.710 --> 00:03:58.915
Then scrolling down, we can set these to be the background color for our span.

00:03:58.915 --> 00:04:00.410
Since we're looping through,

00:04:00.410 --> 00:04:05.585
we also need to add a unique key to each one of these span elements.

00:04:05.585 --> 00:04:07.610
Just after the background,

00:04:07.610 --> 00:04:09.575
we can also add to the key,

00:04:09.575 --> 00:04:12.430
which is going to be equal to our label.

00:04:12.430 --> 00:04:16.820
This is going to be fine to use since each one of the six colors is unique,

00:04:16.820 --> 00:04:19.400
meaning we won't have any duplicates.

00:04:19.400 --> 00:04:22.150
So save this, and then over to the browser.

00:04:22.150 --> 00:04:26.720
Let's now go into any one of these modals by clicking on the text.

00:04:26.720 --> 00:04:29.780
We see the text inside here with a value of one.

00:04:29.780 --> 00:04:31.700
Let's try number three.

00:04:31.700 --> 00:04:36.160
We still don't have any labels available for these cards to display,

00:04:36.160 --> 00:04:40.105
but we see the value of three is now in a text inputs.

00:04:40.105 --> 00:04:43.160
To enable us now to edit this card,

00:04:43.160 --> 00:04:46.655
we can add a new method onto the form when we submit.

00:04:46.655 --> 00:04:51.590
Let's go back over to our modal and then scroll up to the form.

00:04:51.590 --> 00:04:53.030
Inside the opening tag,

00:04:53.030 --> 00:04:55.259
we can add a on submit,

00:04:55.259 --> 00:05:00.070
which is going to be equal to this.update card.

00:05:00.330 --> 00:05:04.645
Just before we go ahead and create this update card method,

00:05:04.645 --> 00:05:09.060
I'm going to add a ref to the text input to first grab the value.

00:05:09.060 --> 00:05:13.825
Scroll back down to the input with the class of textbooks edits,

00:05:13.825 --> 00:05:17.680
which is just here, just after default value.

00:05:17.680 --> 00:05:21.205
We can also add a reference with this.

00:05:21.205 --> 00:05:23.540
text inputs.

00:05:23.540 --> 00:05:29.400
Now above, we need to create this ref and also the update card method.

00:05:29.400 --> 00:05:32.685
Just below component did mount.

00:05:32.685 --> 00:05:40.580
We can create our ref, which was text inputs and that is equal to react.create ref.

00:05:40.600 --> 00:05:45.170
After this, we need to create our update card method.

00:05:45.170 --> 00:05:50.090
At the moment, this method is going to concentrate on updating the text.

00:05:50.090 --> 00:05:53.110
We will come back to the labels very soon.

00:05:53.110 --> 00:05:56.870
Let's start by making this async function,

00:05:56.870 --> 00:06:00.620
which takes in the event information such as

00:06:00.620 --> 00:06:04.765
the arrow function where we add the trial section,

00:06:04.765 --> 00:06:07.375
the cut section just below,

00:06:07.375 --> 00:06:10.310
which we're going to pass in the error

00:06:10.310 --> 00:06:16.170
and then a console error that detects all error updating card.

00:06:17.780 --> 00:06:22.750
Add a colon, and then pass in the error.

00:06:22.760 --> 00:06:25.340
Inside of our trial section,

00:06:25.340 --> 00:06:29.570
we're going to first call prevent default on the events.

00:06:29.570 --> 00:06:34.055
To stop the default behavior of the browser reload in.

00:06:34.055 --> 00:06:37.070
Next open let's create three constants.

00:06:37.070 --> 00:06:39.350
We need to grab the ID of the card,

00:06:39.350 --> 00:06:42.020
we need to grab the new text which has been added into

00:06:42.020 --> 00:06:46.265
the input field and then we need to grab the current card from Firebase.

00:06:46.265 --> 00:06:48.860
Lets start with the card ID,

00:06:48.860 --> 00:06:51.760
which will have available inside the props.

00:06:51.760 --> 00:06:56.875
Card data.id.

00:06:56.875 --> 00:07:02.020
The next one is for the new text which you stored inside of this ref.

00:07:02.020 --> 00:07:05.235
So const new text.

00:07:05.235 --> 00:07:10.260
This is going to be equal to our ref value of this.text inputs.

00:07:10.260 --> 00:07:15.270
We can grab the value with dot currents dot value.

00:07:15.270 --> 00:07:20.015
If that constant we need is for the current card from Firebase,

00:07:20.015 --> 00:07:22.955
we're going to wait its information to come back,

00:07:22.955 --> 00:07:30.240
which is from our cards ref.doc and then we can pass in our card ID.

00:07:30.380 --> 00:07:32.960
Now we have the card from Firebase,

00:07:32.960 --> 00:07:35.030
we can call the update method.

00:07:35.030 --> 00:07:37.700
Inside here, we set up our objects.

00:07:37.700 --> 00:07:41.515
For now the only field which we are going to update is the text.

00:07:41.515 --> 00:07:44.865
I will grab this from card.text,

00:07:44.865 --> 00:07:48.445
saying is equal to our new texts constant.

00:07:48.445 --> 00:07:50.645
Just after our updates,

00:07:50.645 --> 00:07:55.295
we can then close our modal by calling the toggle modal method,

00:07:55.295 --> 00:07:57.635
which is available from props.

00:07:57.635 --> 00:08:01.855
So this.props.toggle modal.

00:08:01.855 --> 00:08:06.425
As soon as the card is being updated and the form is being submitted,

00:08:06.425 --> 00:08:08.120
we'll then close down the modal,

00:08:08.120 --> 00:08:10.570
and return to the board view.

00:08:10.570 --> 00:08:12.540
Just before we continue,

00:08:12.540 --> 00:08:14.900
make sure the cards ref is imported at the top of

00:08:14.900 --> 00:08:19.685
this file and also make sure this is ID.

00:08:19.685 --> 00:08:23.300
Let's give this a Save and go over to the project.

00:08:23.300 --> 00:08:25.435
Select any of these cards.

00:08:25.435 --> 00:08:30.425
Take the modal, and change the value inside of the text inputs.

00:08:30.425 --> 00:08:35.105
It now save the changes and now toggles the modal to be closed.

00:08:35.105 --> 00:08:37.190
If we go over to the console,

00:08:37.190 --> 00:08:41.970
reload this into the cards collection.

00:08:41.970 --> 00:08:46.340
Now we can check our card number one has been changed to 100.

00:08:46.340 --> 00:08:47.780
Inside of our project,

00:08:47.780 --> 00:08:50.000
we still need to refresh to see

00:08:50.000 --> 00:08:54.325
the changes until we add our real-time functionality later.

00:08:54.325 --> 00:08:58.120
This is all going into now due to update the context.

00:08:58.120 --> 00:09:03.270
In the next video, we will concentrate on updating the labels.
