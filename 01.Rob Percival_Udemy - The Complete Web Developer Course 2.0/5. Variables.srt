1
00:00:00,550 --> 00:00:02,670
So now we've got ourselves set up with BHP.

2
00:00:02,680 --> 00:00:07,600
We're going to look at it is in real programming with it and we'll start by looking at variables.

3
00:00:07,600 --> 00:00:12,560
You'll remember a variable is something that has a name and a value.

4
00:00:12,640 --> 00:00:21,490
So in Javascript for example we would set up a variable using var and then name equals Rob something

5
00:00:21,490 --> 00:00:22,440
like that.

6
00:00:22,480 --> 00:00:28,540
That's how we would create a variable called name with a value of Rob in JavaScript in BHP.

7
00:00:28,570 --> 00:00:30,580
Similar but slightly different.

8
00:00:30,790 --> 00:00:36,120
Whenever we're working with variables in BHP we use the dollar symbol.

9
00:00:36,190 --> 00:00:45,280
So shift 4 on my keyboard and then the variable name so I might want to use dollar name like that and

10
00:00:45,280 --> 00:00:50,870
then I just set whatever I wanted to in exactly the same way as javascript.

11
00:00:50,870 --> 00:00:53,650
And don't forget your semicolon and that's it.

12
00:00:53,860 --> 00:01:00,790
So we don't use var or any other commands to create a variable we just use the dollar symbol and then

13
00:01:00,790 --> 00:01:06,730
whatever variable name we want and then we set it equal to whatever we want it to.

14
00:01:06,850 --> 00:01:07,770
So here's a quick challenge.

15
00:01:07,770 --> 00:01:16,750
Can you work out how to display the value of the dollar name variable on our Web page over here.

16
00:01:16,750 --> 00:01:17,050
Effort

17
00:01:22,910 --> 00:01:23,540
did you manage that.

18
00:01:24,980 --> 00:01:30,530
Hopefully you used some variant of Echo because that's the command that we know for displaying things

19
00:01:30,620 --> 00:01:32,810
on the page itself.

20
00:01:32,810 --> 00:01:38,270
And then we just use dollar and name.

21
00:01:38,270 --> 00:01:40,750
And of course semicolon and that's it.

22
00:01:41,360 --> 00:01:51,950
So let's have a look and say yep that displays Rob some of you may have tried something like that which

23
00:01:52,010 --> 00:01:54,130
actually works as well if we run that.

24
00:01:54,170 --> 00:02:01,250
It does do the same thing because BHP is pretty clever and if it sees a variable name inside a string

25
00:02:01,610 --> 00:02:06,500
it will actually not display the variable name but the value.

26
00:02:06,500 --> 00:02:12,800
So we might want to have something like My name is and then we could just put the variable name right

27
00:02:12,800 --> 00:02:14,990
there in the string.

28
00:02:14,990 --> 00:02:21,050
And BHP will recognise it and replace the variable name with the value.

29
00:02:21,050 --> 00:02:32,090
Another way to put strings together is to say we've got a variable called string one this is the first

30
00:02:32,090 --> 00:02:54,850
part and string t is of a sentence then we could combine those using a string one dot or period string

31
00:02:55,600 --> 00:02:59,250
two and that's what's called concatenate ing.

32
00:02:59,500 --> 00:03:05,820
You might remember we did it with a plus sign in javascript but in BHP it's a full stop or a period

33
00:03:06,970 --> 00:03:10,220
and then we get both of those together.

34
00:03:10,240 --> 00:03:12,240
Notice I'm missing a space there.

35
00:03:12,910 --> 00:03:14,310
So here's a mini challenge for you.

36
00:03:14,440 --> 00:03:15,910
Can you change this line.

37
00:03:15,910 --> 00:03:29,560
Line 11 so that there is a space in the middle of part and of effort.

38
00:03:29,760 --> 00:03:36,530
Did you manage it easiest way I think is to do something like that.

39
00:03:36,580 --> 00:03:44,580
So this means string one dot and then put a space in and then dot and then string two.

40
00:03:44,590 --> 00:03:45,370
There we go.

41
00:03:45,390 --> 00:03:48,450
And of course we can put HDMI all in these as well so

42
00:03:51,460 --> 00:03:58,490
we can make them their own paragraphs so they appear on separate lines.

43
00:03:58,600 --> 00:03:58,980
There we go.

44
00:03:59,820 --> 00:04:05,400
So those are all string variables because they contain a string of characters but we can do things with

45
00:04:05,400 --> 00:04:07,740
numbers in BHP as well.

46
00:04:08,070 --> 00:04:11,520
So let's have a variable called my number.

47
00:04:11,520 --> 00:04:19,000
And initially we'll make it forty five and then we can do all sorts of maths with that if we want to.

48
00:04:19,480 --> 00:04:28,860
So we might have a variable called calculation and this is going to be my number and you can have whatever

49
00:04:28,860 --> 00:04:40,900
you like really multiplied by 31 divided by ninety seven plus for no idea what that is.

50
00:04:41,050 --> 00:04:42,220
But then we can display it

51
00:04:46,920 --> 00:04:48,050
let's have a look.

52
00:04:48,060 --> 00:04:51,040
Every guy turns out to be fat.

53
00:04:51,270 --> 00:04:57,090
Now unlike some languages pee pee is very unfunny about the types of its variables.

54
00:04:57,090 --> 00:05:00,460
So you'll notice it started off as a whole number an integer.

55
00:05:00,630 --> 00:05:03,730
And then when I did this calculation it became a decimal.

56
00:05:03,780 --> 00:05:08,190
But I didn't have to redefine it or anything like that some languages you need to be very careful about

57
00:05:08,190 --> 00:05:10,230
the type of your variable with BHP.

58
00:05:10,230 --> 00:05:11,840
You really don't.

59
00:05:11,910 --> 00:05:16,840
And we can use this variable in exactly the same way we did the strings.

60
00:05:17,040 --> 00:05:26,370
So we might have something like the results of the calculation is and then we could put dot and then

61
00:05:26,460 --> 00:05:31,590
the variable name and BHP will work on that just fine.

62
00:05:31,620 --> 00:05:32,010
All right.

63
00:05:32,010 --> 00:05:34,530
Almost then a couple more things I'd like to show you.

64
00:05:34,530 --> 00:05:39,960
The first is boolean variables which we've seen before in JavaScript and we can use those in exactly

65
00:05:39,960 --> 00:05:42,940
the same way in BHP.

66
00:05:43,320 --> 00:05:52,050
So we might have my bool for example and we could set that equal to either true or false and then

67
00:05:55,260 --> 00:05:56,520
we might have something like

68
00:06:02,140 --> 00:06:03,790
this statement is true.

69
00:06:03,880 --> 00:06:06,430
Question Mark and then

70
00:06:10,310 --> 00:06:15,350
my bool in that and then close that paragraph.

71
00:06:15,350 --> 00:06:18,610
Let's have a look see what it gives us.

72
00:06:18,650 --> 00:06:20,950
It doesn't give us actually true or false.

73
00:06:21,020 --> 00:06:22,670
It gives us a 1 or

74
00:06:25,610 --> 00:06:35,350
a nothing and that's actually how HP treats True and False True is considered to be a one and false

75
00:06:35,580 --> 00:06:38,610
is considered to be nothing or some in some cases a zero.

76
00:06:38,890 --> 00:06:41,720
But mostly nothing.

77
00:06:41,920 --> 00:06:43,660
So that's billion variables.

78
00:06:43,660 --> 00:06:48,730
Lastly I just want to show you one kind of fancy way that you can access variables and that is you can

79
00:06:48,730 --> 00:06:52,150
actually store variable names within variables.

80
00:06:52,150 --> 00:06:53,230
So if for example

81
00:06:55,940 --> 00:07:12,300
I set a variable called variable name to be equal t name I can then echo dollar dollar variable name.

82
00:07:12,660 --> 00:07:15,000
Any idea is what that's going to display.

83
00:07:15,080 --> 00:07:15,540
Have a guess

84
00:07:20,170 --> 00:07:22,660
did you get it bizarrely enough.

85
00:07:22,660 --> 00:07:29,730
It's Rob because variable name with a dollar sign in front of it means name.

86
00:07:29,750 --> 00:07:31,910
So this means dollar and then name.

87
00:07:32,000 --> 00:07:33,340
And that means Rob.

88
00:07:34,370 --> 00:07:37,940
So it's a pretty rare situation that you'd want to do something like that but it's quite nice to have

89
00:07:37,940 --> 00:07:38,630
the option.

90
00:07:39,090 --> 00:07:39,860
OK.

91
00:07:39,980 --> 00:07:43,640
That's as far as we're going to go with variables in P P in the next video.

92
00:07:43,730 --> 00:07:45,910
We'll look at it in the next video.

93
00:07:45,920 --> 00:07:48,560
We'll take it one step further and look at arrays.
