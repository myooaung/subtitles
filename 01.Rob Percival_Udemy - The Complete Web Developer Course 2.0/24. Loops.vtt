WEBVTT
1
00:00:00.650 --> 00:00:07.050
So along with IF statements a second fundamental way of altering the flow or the logic of your code

2
00:00:07.290 --> 00:00:08.520
is a loop.

3
00:00:08.700 --> 00:00:10.490
And we're going to look at two different types of loop.

4
00:00:10.510 --> 00:00:18.780
The first one is the fall it slips a little bit tricky to explain until you see them in action and then

5
00:00:19.050 --> 00:00:21.020
they really are quite straightforward.

6
00:00:21.090 --> 00:00:26.640
Essentially they allow you to run certain lines of code again and again doing usually something slightly

7
00:00:26.640 --> 00:00:28.630
different each time.

8
00:00:28.650 --> 00:00:31.500
So let's see how we set up a flip.

9
00:00:31.590 --> 00:00:38.770
We use the command four to start off our loop and then we need to add some information for a follow

10
00:00:38.770 --> 00:00:39.660
up.

11
00:00:39.750 --> 00:00:43.470
And first off we create a counter variable which counts.

12
00:00:43.500 --> 00:00:45.730
Each time we go through the loop.

13
00:00:46.170 --> 00:00:54.040
So we usually correct that with var and the standard letter that we use for counting is 0.

14
00:00:54.510 --> 00:00:57.350
That's been used since the very early days of computing.

15
00:00:57.480 --> 00:01:00.210
It's likely because I short for index.

16
00:01:00.330 --> 00:01:06.960
So it's the index which counts how many times we've gone through the loop and then we set that value

17
00:01:06.960 --> 00:01:08.480
to something initially.

18
00:01:08.730 --> 00:01:11.120
And usually we start with zero.

19
00:01:11.580 --> 00:01:13.550
So we've created our counter variable.

20
00:01:13.560 --> 00:01:15.740
And we've said it equal to zero so far.

21
00:01:16.050 --> 00:01:22.770
Then we use a semi-colon interestingly not to end the command but just to end that little bit of it

22
00:01:23.040 --> 00:01:27.910
and give the next instruction which is how many times we're going to do the loop.

23
00:01:27.930 --> 00:01:35.250
So if we want to do the loop five times for example we would keep on going as long as I is less than

24
00:01:35.790 --> 00:01:39.400
5 say the first time I'm going to be 0.

25
00:01:39.530 --> 00:01:40.840
Then the next time it's going to be 1.

26
00:01:40.880 --> 00:01:41.900
Next time it's going to be two.

27
00:01:41.900 --> 00:01:44.180
Next time it's going to be three then four.

28
00:01:44.270 --> 00:01:47.760
So that will be five times.

29
00:01:47.800 --> 00:01:51.870
So that's the instruction to keep going as long as I had less than five.

30
00:01:52.000 --> 00:01:58.690
The final instruction the third and final instruction is what to do to I each time and the usual thing

31
00:01:59.050 --> 00:02:00.710
is to add one to I.

32
00:02:00.730 --> 00:02:03.790
So it becomes 0 1 2 3.

33
00:02:03.790 --> 00:02:07.750
Each time you've gone through the loop there are two ways to do that.

34
00:02:07.960 --> 00:02:10.210
The most kind of obvious way is to

35
00:02:13.700 --> 00:02:14.780
do that.

36
00:02:14.840 --> 00:02:22.330
So each time you go through the loop take I set it to the old value of i plus 1.

37
00:02:22.340 --> 00:02:25.400
So that essentially increments each time.

38
00:02:25.550 --> 00:02:26.460
That's a bit wordy though.

39
00:02:26.510 --> 00:02:28.220
And we use it a lot in loops.

40
00:02:28.220 --> 00:02:35.390
So there's a shortcut way of doing it which is I plus plus which is quite a neat way saying just add

41
00:02:35.390 --> 00:02:39.620
one to I and that works in pretty much every programming language.

42
00:02:39.760 --> 00:02:41.830
So it's a pretty cool thing to learn.

43
00:02:41.930 --> 00:02:42.320
All right.

44
00:02:42.320 --> 00:02:44.080
So now we've set up a loop.

45
00:02:44.150 --> 00:02:46.850
It starts off without count a variable equal to zero.

46
00:02:46.930 --> 00:02:52.550
It adds one to our count variable each time and it keeps going as long as our counter variable is less

47
00:02:52.550 --> 00:02:55.180
than 5.

48
00:02:55.490 --> 00:02:57.830
So then we need to give the instructions of what we want to happen.

49
00:02:57.830 --> 00:03:00.510
Each time the loop takes place.

50
00:03:00.680 --> 00:03:05.970
And just like with functions we do this in curly brackets.

51
00:03:06.050 --> 00:03:07.930
So the same as if statements as well.

52
00:03:07.970 --> 00:03:15.100
And for now all will do is alert the value of.

53
00:03:15.140 --> 00:03:16.820
So this should give us zero.

54
00:03:16.950 --> 00:03:22.030
And then one and then two and then three and four and then stop.

55
00:03:22.200 --> 00:03:23.940
With any luck Let's take a look.

56
00:03:25.830 --> 00:03:34.400
So yep 0 1 2 3 4 stop William.

57
00:03:34.560 --> 00:03:36.810
So that's the long and the short of it really.

58
00:03:36.810 --> 00:03:44.160
Let's just play around with a little bit to get you thinking if we change that two or three.

59
00:03:44.250 --> 00:03:46.790
And that to a 7.

60
00:03:46.800 --> 00:03:50.690
Can you tell me what this is going to let go for it.

61
00:03:55.190 --> 00:03:56.510
Did you get it right.

62
00:03:56.540 --> 00:03:57.250
Let's see.

63
00:03:57.440 --> 00:04:05.730
So it starts at 3 and 4 and 5 and 6 then stop because it keeps going as long as it's less than seven

64
00:04:08.270 --> 00:04:09.750
All right here's a challenge for you.

65
00:04:09.750 --> 00:04:15.120
Can you change it so that it's instead of going up by one each time it goes down by one each time and

66
00:04:15.120 --> 00:04:19.750
we get five four three two one effort

67
00:04:24.760 --> 00:04:26.290
how do you manage that.

68
00:04:26.360 --> 00:04:30.900
So we're going to start with I is equal to five.

69
00:04:31.040 --> 00:04:37.490
We want to keep going as long as I is greater than zero because we want five four three two one and

70
00:04:37.490 --> 00:04:38.760
then stop.

71
00:04:39.020 --> 00:04:48.400
And instead of I plus plus hopefully you get this decreased by one each time we use I minus minus.

72
00:04:48.470 --> 00:04:57.290
So this should give us 5 4 3 2 1 5 4 3 2 1 billion.

73
00:04:57.620 --> 00:04:57.960
All right.

74
00:04:57.980 --> 00:05:02.370
Feel free to play around with that much more and see if you can find different ways of doing things.

75
00:05:02.690 --> 00:05:09.310
But I'm actually going to combine four loops and arrays because they are really a match made in heaven.

76
00:05:09.470 --> 00:05:15.080
Going back to our example when we introduced arrays of tweets if we want to display all the tweets and

77
00:05:15.080 --> 00:05:16.340
we don't know how many there are.

78
00:05:16.400 --> 00:05:19.430
What we're going to need to do is loop through the array.

79
00:05:19.500 --> 00:05:25.140
So we start with the first treat display that move onto the second tweet display that et cetera et cetera.

80
00:05:25.460 --> 00:05:28.450
And that's actually really easy to do with loops.

81
00:05:29.450 --> 00:05:35.040
So let's set up our array of tweets

82
00:05:40.890 --> 00:05:43.990
I kind of remember what my inane tweets were last time.

83
00:05:47.170 --> 00:05:48.550
Something like this.

84
00:05:48.700 --> 00:05:49.890
I love cornflakes.

85
00:05:49.900 --> 00:05:54.510
And we'll have one more sets.

86
00:05:54.550 --> 00:05:55.130
Night night.

87
00:05:55.150 --> 00:05:56.590
And a smiley face.

88
00:05:56.620 --> 00:05:56.960
Lovely.

89
00:05:57.010 --> 00:05:58.450
I quite like this guy.

90
00:05:59.050 --> 00:05:59.700
All right.

91
00:05:59.920 --> 00:06:07.240
So I'm going to set this as a challenge then can you display or let each of the values in this tweets

92
00:06:07.380 --> 00:06:09.980
array using for

93
00:06:16.690 --> 00:06:17.110
k.

94
00:06:17.130 --> 00:06:18.430
Hope you managed it.

95
00:06:18.810 --> 00:06:22.820
All we need today is set I back to zero at the beginning.

96
00:06:23.700 --> 00:06:25.260
And we want to keep going.

97
00:06:25.320 --> 00:06:27.500
So remember this is the zeroth tweet.

98
00:06:27.610 --> 00:06:30.490
This is Tweet number 1 and this is Tweet number two.

99
00:06:30.690 --> 00:06:35.680
So we want to keep going as long as I is less than three.

100
00:06:35.900 --> 00:06:40.240
We want to be 0 1 2 and then stop.

101
00:06:40.530 --> 00:06:43.310
And of course we want to go up by 1 each time.

102
00:06:43.410 --> 00:06:46.770
So I'll change that back to I plus plus.

103
00:06:47.200 --> 00:06:52.560
And then we're going to alert tweets.

104
00:06:52.820 --> 00:06:54.520
Which item do we want.

105
00:06:54.520 --> 00:06:57.430
We want the item.

106
00:06:57.430 --> 00:06:58.990
So this will be tweets 0.

107
00:06:59.020 --> 00:07:05.260
The first time around tweets one the second time round and tweets to the third time round.

108
00:07:05.260 --> 00:07:08.570
So let's have a look and see if that works.

109
00:07:08.890 --> 00:07:10.240
Hi everyone comes up first.

110
00:07:10.240 --> 00:07:10.900
Excellent.

111
00:07:10.900 --> 00:07:12.180
I love cornflakes.

112
00:07:12.310 --> 00:07:17.220
And then night night William I hope you manage something like that now.

113
00:07:17.230 --> 00:07:24.010
Extra bonus points for you if you realized that in our Twitter program as we mentioned we don't necessarily

114
00:07:24.010 --> 00:07:26.500
know how many tweets there are going to be.

115
00:07:26.500 --> 00:07:34.600
So what we can do is change this three here to as we saw in the array's video we can use tweets dot

116
00:07:34.690 --> 00:07:39.700
length to give us the number of tweets in the game.

117
00:07:40.030 --> 00:07:45.700
So tweets don't length of the moment is one to three but the great advantage of the code as it is now

118
00:07:45.760 --> 00:07:54.160
is that I could add a fourth tweet say Sweet dreams when I forgot my semi-colon there as well.

119
00:07:54.250 --> 00:07:56.430
And then without updating this code at all.

120
00:07:56.460 --> 00:07:57.650
Now display.

121
00:07:57.670 --> 00:07:58.320
With any luck.

122
00:07:58.360 --> 00:08:00.130
All four tweets.

123
00:08:00.130 --> 00:08:05.580
One two three four.

124
00:08:05.590 --> 00:08:05.950
There we go.

125
00:08:05.950 --> 00:08:09.800
So that's how we loop through an array with a flip.

126
00:08:09.850 --> 00:08:15.280
And that is a really useful thing to be able to do with pretty much any web app or web site that we're

127
00:08:15.280 --> 00:08:16.260
working on.

128
00:08:16.270 --> 00:08:22.780
Little final challenge for you then can you change this code so that instead of alerting all of the

129
00:08:22.780 --> 00:08:28.490
tweets it displays each of them on a separate line.

130
00:08:28.490 --> 00:08:29.240
Go for it.

131
00:08:35.480 --> 00:08:38.120
All right I hope you manage that.

132
00:08:38.120 --> 00:08:41.200
Not that easy but not too tricky either.

133
00:08:41.930 --> 00:08:54.590
That's create a div for outwits which will give an ID of tweet div and then what I'm going to do is

134
00:08:54.620 --> 00:09:05.090
create a variable called Tweet string which is going to hold the HGL for my tweets.

135
00:09:05.090 --> 00:09:15.960
And then at the very end I'll update the tweet div ID to have the content of tweet string say each time

136
00:09:15.960 --> 00:09:25.140
we go through the loop I'm going to take tweet string and I'm going to set it equal to whatever it was

137
00:09:25.140 --> 00:09:25.880
before.

138
00:09:26.280 --> 00:09:33.390
So tweet string and then I'm just going remember that I've got the equals incorrectly place to the answer

139
00:09:33.390 --> 00:09:35.530
that's a tweet string.

140
00:09:35.570 --> 00:09:39.250
So we're taking tweets string and we're setting equal to whatever it was before.

141
00:09:39.420 --> 00:09:49.730
Plus and we're going to need a paragraph tag and then the tweet item itself.

142
00:09:49.840 --> 00:09:54.410
So tweets.

143
00:09:55.580 --> 00:10:02.040
And then we'll close the paragraph tag.

144
00:10:02.200 --> 00:10:08.430
So this will add a paragraph containing the new tweet to tweet stream.

145
00:10:08.470 --> 00:10:12.060
And finally when we're done I'm going to take my tweets.

146
00:10:12.080 --> 00:10:21.050
Dave and at the HMS literate it so document dot get element by ID.

147
00:10:21.260 --> 00:10:34.450
The ID is tweet Dave and we want to set the HDMI all of that to be equal to a tweet string.

148
00:10:34.450 --> 00:10:38.570
All right let's take a look or OK.

149
00:10:38.650 --> 00:10:39.700
Now this is good.

150
00:10:39.760 --> 00:10:44.170
I've got everything that I wanted and it's on separate lines but I've got this interesting undefined

151
00:10:44.200 --> 00:10:44.980
up here.

152
00:10:45.220 --> 00:10:49.820
So I have a quick moment to think about why we might have this undefined at the top there.

153
00:10:54.070 --> 00:10:55.220
Did you get it.

154
00:10:55.340 --> 00:10:59.350
It's because even though we've created the variable tweet string.

155
00:10:59.530 --> 00:11:01.490
We haven't said it equal to anything.

156
00:11:01.500 --> 00:11:07.750
So at the moment when we define it it's equal to undefined because it's not been set equal to anything.

157
00:11:07.750 --> 00:11:13.990
So the first time we do this we're taking tweets string and we're setting it equal to tweet string which

158
00:11:13.990 --> 00:11:15.400
doesn't have any value.

159
00:11:15.400 --> 00:11:19.360
So that's why we've got this weird undefined at the very beginning there.

160
00:11:19.480 --> 00:11:21.830
And then we're adding other stuff to it.

161
00:11:21.880 --> 00:11:29.860
So the lesson from that is you should always give your variables a value even if it's just an empty

162
00:11:29.860 --> 00:11:31.010
string.

163
00:11:31.030 --> 00:11:35.110
So this tells javascript that we're going to start off with an empty string and then we can add some

164
00:11:35.110 --> 00:11:36.880
information to it later on.

165
00:11:37.300 --> 00:11:43.900
So if we now run that again we should find that the undefined disappears.

166
00:11:45.070 --> 00:11:49.570
Great I hope you managed to do most of that by yourself and I hope you're beginning to see the power

167
00:11:49.570 --> 00:11:56.630
that we can get by combining for loops and arrays for displaying large amounts of data in our web sites.

168
00:11:57.040 --> 00:11:58.060
Good stuff.

169
00:11:58.060 --> 00:12:02.240
Now as I mentioned there are two types of loops and we've looked at four loops here.

170
00:12:02.320 --> 00:12:05.530
But actually my favorite type of loop is a while loop.

171
00:12:05.710 --> 00:12:10.580
And we'll see how that differs and why we might use each different type in the next video.
