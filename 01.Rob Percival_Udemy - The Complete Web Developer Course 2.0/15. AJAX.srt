1
00:00:00,540 --> 00:00:03,370
Right now we're getting on to something really powerful.

2
00:00:03,420 --> 00:00:10,080
So far we've seen how to use a query and javascript to interact with our pages and do fancy things like

3
00:00:10,650 --> 00:00:14,100
things change shape inside dating web site content.

4
00:00:14,100 --> 00:00:16,450
Ajax takes all of this to the next level.

5
00:00:16,470 --> 00:00:22,750
It was pioneered by Google when they were developing their G-mail interface and now is very widely used.

6
00:00:22,950 --> 00:00:29,580
So whenever you use any webmail app or Facebook or Twitter or any app like that you're using AJAX and

7
00:00:29,580 --> 00:00:34,870
what it does is allow you to grab content from your server within your web page.

8
00:00:34,920 --> 00:00:41,140
For example when the user clicks on a button and do something with that without refreshing the page.

9
00:00:41,280 --> 00:00:46,200
Now that might not sound like much but if you think about what has to happen when you press the send

10
00:00:46,200 --> 00:00:53,010
button on your email client essentially some information i.e. the e-mail content the recipient etc.

11
00:00:53,250 --> 00:00:59,400
needs to be sent to a server which then sends the e-mail itself and reports back to the website saying

12
00:00:59,400 --> 00:01:04,200
that this has been done successfully and we want all of that to happen without having to reload the

13
00:01:04,200 --> 00:01:05,200
page every time.

14
00:01:05,280 --> 00:01:10,680
But she's hugely powerful technology and one that can make your web sites far more fun interactive and

15
00:01:10,680 --> 00:01:12,060
fast.

16
00:01:12,060 --> 00:01:16,940
One slight downside with that though is that we can't use it on local files.

17
00:01:17,070 --> 00:01:21,260
So Ajax doesn't work with files on your computer like this.

18
00:01:21,270 --> 00:01:26,820
So what I'm going to do is work on it live on my eco web hosting server.

19
00:01:27,230 --> 00:01:32,190
So if you haven't set that up yet you might want to go back to the first section and follow the instructions

20
00:01:32,190 --> 00:01:32,900
to do that.

21
00:01:33,060 --> 00:01:37,110
Alternatively if you don't want to set it up or you can't for whatever reason then don't worry just

22
00:01:37,110 --> 00:01:37,900
follow along.

23
00:01:37,950 --> 00:01:43,640
Bear in mind the final code won't work if you're working on your local machine.

24
00:01:43,950 --> 00:01:46,990
So now I'm in fire FTB within Firefox.

25
00:01:47,220 --> 00:01:52,200
If you haven't seen how to set this up then again go back to the video at the beginning of this course

26
00:01:52,470 --> 00:01:53,580
or ignore this bit.

27
00:01:53,580 --> 00:01:57,480
If you're going to work locally and they want to wire about FCP.

28
00:01:57,480 --> 00:02:02,790
So I've already connected to complete web developer because dot com and I'm currently in the content

29
00:02:03,030 --> 00:02:03,950
folder here.

30
00:02:04,170 --> 00:02:09,450
And you can see I've already uploaded the four folders that we've been working with so far and the Course

31
00:02:10,290 --> 00:02:16,200
I'm on the Jay Querrey section so I'm going to go in there and you can see we've got the file Jey query

32
00:02:16,370 --> 00:02:23,420
Drage DML and then going to control click or right click and click open and that will open.

33
00:02:23,430 --> 00:02:29,400
Jay queery directed him L in my text editor.

34
00:02:29,400 --> 00:02:31,790
So it looks exactly the same as before.

35
00:02:32,370 --> 00:02:39,930
But if we jump over back to Google Chrome we can now go to a live web site so that is a complete web

36
00:02:39,930 --> 00:02:49,450
developer because dot com slash content slash for Dasch Jay queery for the folder.

37
00:02:49,690 --> 00:02:57,840
And then Jay Querrey HCM L and this will then load the same page that we had before.

38
00:02:58,590 --> 00:03:04,130
And just to remind you I got that you Arel from content being the folder men for dash.

39
00:03:04,210 --> 00:03:11,410
Jay Querrey being the subfolder and then Jay querido writes TNL being the file name.

40
00:03:11,680 --> 00:03:15,490
So now we can work in exactly the same way that we have been up until now.

41
00:03:15,760 --> 00:03:21,790
But it's slightly more exciting because we're working on a live web site so anyone in the world could

42
00:03:21,790 --> 00:03:25,230
go to this u r l and see this page.

43
00:03:25,230 --> 00:03:29,690
Note if you do check that out and go to this you Arel now it's probably changed.

44
00:03:29,710 --> 00:03:33,350
But this is what is sharing as of the recording of the video.

45
00:03:33,460 --> 00:03:39,010
So just to make sure that everything is working as desired.

46
00:03:39,370 --> 00:03:44,820
I'm going to save that which will then via a fire FCPA it will save it on the live server.

47
00:03:44,980 --> 00:03:52,550
And when I refresh just as we're used to it changes and updates automatically pretty.

48
00:03:53,150 --> 00:03:58,000
So let's in fact let's just check that the query still works.

49
00:03:58,010 --> 00:03:58,410
Yep.

50
00:03:58,520 --> 00:03:59,060
Brilliant.

51
00:03:59,060 --> 00:04:00,550
Everything is connected up nicely.

52
00:04:03,270 --> 00:04:03,880
OK.

53
00:04:05,080 --> 00:04:12,100
So what we're going to attempt to do here is load the content from another file and use it within our

54
00:04:12,100 --> 00:04:13,440
page.

55
00:04:13,450 --> 00:04:16,980
So in order to do that we'll need to have another file to load the content from.

56
00:04:17,440 --> 00:04:22,980
So I'm going to go back over to the fire FTB and create a file right here.

57
00:04:22,990 --> 00:04:31,940
So I'm going to control click or right click on Windows and create file and I'll just call this info

58
00:04:32,500 --> 00:04:34,010
dark text.

59
00:04:34,010 --> 00:04:39,620
It really doesn't matter at all what this file name is but something fairly generic like that should

60
00:04:39,620 --> 00:04:40,850
work.

61
00:04:41,450 --> 00:04:43,340
And then I'm just going to open that

62
00:04:46,180 --> 00:04:48,590
again and that will open up in brackets.

63
00:04:49,520 --> 00:04:50,090
And

64
00:04:54,890 --> 00:05:01,640
or just save a basic bit of text like that and then clicks.

65
00:05:02,110 --> 00:05:02,450
OK.

66
00:05:02,460 --> 00:05:09,580
So is that content that we're going to try and get hold of in our Web page here.

67
00:05:10,410 --> 00:05:10,990
All right.

68
00:05:10,990 --> 00:05:11,810
Here goes.

69
00:05:12,280 --> 00:05:15,130
As always there's a number of ways that we can do it.

70
00:05:15,160 --> 00:05:19,390
I'm going to show you the simplest one first and then we'll move on to what I would recommend using

71
00:05:19,720 --> 00:05:22,780
in a real life site.

72
00:05:22,780 --> 00:05:28,210
So as we're using Jay queery functions and Jake queery by the way is not critical for Ajax but it does

73
00:05:28,210 --> 00:05:30,000
make using it a lot easier.

74
00:05:30,460 --> 00:05:35,930
And then we use it don't want to call a particular Ajax function.

75
00:05:35,950 --> 00:05:40,330
So what we're doing here we're not selecting a particular item within the page as we have been doing

76
00:05:40,330 --> 00:05:41,070
so far.

77
00:05:41,110 --> 00:05:47,560
We're running a special Ajax function and that function is get.

78
00:05:48,610 --> 00:05:50,890
So it does exactly what you might expect.

79
00:05:50,910 --> 00:06:01,270
It gets the contents of a file and then we put in the file name so info dot text and then we need to

80
00:06:01,270 --> 00:06:05,470
do something when the get is complete.

81
00:06:05,740 --> 00:06:08,880
And this is what I mentioned previously is a callback.

82
00:06:08,950 --> 00:06:15,880
So we're going to create a callback function which will run when the Ajax command is complete and they've

83
00:06:15,880 --> 00:06:19,960
got the information and then we can do whatever we want with it.

84
00:06:19,960 --> 00:06:23,590
So we define that as function.

85
00:06:23,650 --> 00:06:25,990
Now we're very used to just putting

86
00:06:28,880 --> 00:06:30,660
parentheses after our function.

87
00:06:30,830 --> 00:06:34,360
That's usually because we don't have a particular variable that we need to do anything with.

88
00:06:34,550 --> 00:06:42,770
But this time we do we have the contents of that get request and so we're going to save that in the

89
00:06:42,770 --> 00:06:44,760
variable data.

90
00:06:44,780 --> 00:06:49,400
You can use any variable name you like that but data is pretty standard and obviously makes sense.

91
00:06:49,580 --> 00:06:57,980
So this data variable is going to contain the data i.e. the contents of inferred text and then what

92
00:06:58,070 --> 00:07:01,860
we need today is do something with it.

93
00:07:01,910 --> 00:07:06,740
So for now we'll just let it and hope for the best.

94
00:07:06,740 --> 00:07:07,510
Here we go.

95
00:07:10,010 --> 00:07:11,140
And there we go.

96
00:07:11,500 --> 00:07:17,150
So it might not look that exciting but what we've done there is the very basis of every web app that

97
00:07:17,150 --> 00:07:23,720
you've used every web mail client every social media Web site and probably every interactive Web site

98
00:07:23,990 --> 00:07:25,810
that you're going to create.

99
00:07:25,820 --> 00:07:27,520
So I think that's pretty cool.

100
00:07:27,680 --> 00:07:30,530
But there are some problems with this function.

101
00:07:30,620 --> 00:07:37,490
For one it doesn't give us the option to do something else if this request fails and that's something

102
00:07:37,490 --> 00:07:42,650
that could well happen if someone is on their mobile in particular and they lose signal and they do

103
00:07:42,650 --> 00:07:43,690
something on your Web site.

104
00:07:43,820 --> 00:07:49,040
We need to be able to give them a nice message saying sorry that's not successful.

105
00:07:49,040 --> 00:07:54,440
Connect to the Internet or even better just keep quiet and then do it later when they are connected

106
00:07:54,440 --> 00:07:56,230
to the Internet.

107
00:07:56,330 --> 00:08:05,540
So to do that we need a more powerful command and the command that we're going to use is Ajax.

108
00:08:05,540 --> 00:08:12,990
So again string and then dots to access Adjaye query function and the function that we're using is Ajax.

109
00:08:13,570 --> 00:08:18,760
Now Ajax is a little bit more complicated than I get but it is worth getting to grips with.

110
00:08:18,800 --> 00:08:24,020
The first thing that we need is to give the you Arel of the page we want to get.

111
00:08:24,020 --> 00:08:26,020
So just like with the get function.

112
00:08:26,450 --> 00:08:27,910
And that's exactly the same as before.

113
00:08:27,930 --> 00:08:35,830
So in photo text and then we can add extra functions on the end.

114
00:08:35,830 --> 00:08:44,710
So I'm going to add a done function and this will be called when the Ajax request returns some information

115
00:08:44,710 --> 00:08:46,960
successfully.

116
00:08:46,960 --> 00:08:49,700
So as before we can use function.

117
00:08:49,700 --> 00:08:59,480
And then again we want a variable to hold the data that's returned so we can refer to it later on and

118
00:08:59,490 --> 00:08:59,940
then

119
00:09:03,740 --> 00:09:11,000
perform we put what we want to happen when the Ajax request is complete in the curly brackets.

120
00:09:11,150 --> 00:09:15,800
So for now we'll just alert data once again.

121
00:09:18,000 --> 00:09:20,150
So let's have a look.

122
00:09:20,170 --> 00:09:21,000
There we go.

123
00:09:21,310 --> 00:09:23,280
So that does exactly the same thing.

124
00:09:24,200 --> 00:09:29,190
So how then will we use it to let the user know if we can get the data for any reason.

125
00:09:29,600 --> 00:09:38,280
Well we add a second or third depending on your point of view function at the end of this which is file.

126
00:09:38,840 --> 00:09:41,230
And this works in exactly the same way.

127
00:09:41,990 --> 00:09:47,850
So it's a function we don't have any data at this time because by definition it's failed.

128
00:09:48,200 --> 00:09:49,450
So there's nothing to return

129
00:09:53,620 --> 00:09:55,970
but it works in exactly the same way.

130
00:09:56,650 --> 00:09:59,080
So let's say let

131
00:10:02,070 --> 00:10:03,930
could not get data

132
00:10:07,470 --> 00:10:16,200
so this will happen for example if I misspell my file name and now I run this again we'll get the error

133
00:10:16,200 --> 00:10:16,680
message.

134
00:10:16,680 --> 00:10:18,330
Could not get data.

135
00:10:18,930 --> 00:10:22,940
So if we do use the get command here and misspelled the file name or the user's Internet connection

136
00:10:22,940 --> 00:10:25,240
it going down then just nothing would happen.

137
00:10:25,290 --> 00:10:30,390
Whereas here we can let the user know that nothing's happened and ask them to send it again later or

138
00:10:30,390 --> 00:10:32,090
do whatever it is we want to do.

139
00:10:32,370 --> 00:10:34,160
So that's the big advantage of Ajax.

140
00:10:34,170 --> 00:10:38,370
There are lots of other settings that give you extra power and control as well.

141
00:10:38,520 --> 00:10:43,710
If you want to check some of them out then just google Jay Querrey Ajax and you'll get lots of information

142
00:10:43,710 --> 00:10:47,250
on this come out but this is all that we need for now.

143
00:10:47,250 --> 00:10:49,360
So I'm just going to tidy this up slightly.

144
00:10:49,380 --> 00:10:51,480
I'm going to put these on new lines.

145
00:10:51,780 --> 00:10:53,690
So it's a little bit clearer.

146
00:10:57,230 --> 00:10:58,030
What's going on.

147
00:10:58,310 --> 00:11:00,530
And I'm just going to give you a tiny challenge here.

148
00:11:00,770 --> 00:11:07,180
Can you create a paragraph tag which is initially empty and then instead of alerting the data put it

149
00:11:07,180 --> 00:11:12,200
into that paragraph tag so it just appears right there on the page.

150
00:11:12,200 --> 00:11:13,330
Go for it.

151
00:11:18,700 --> 00:11:20,890
All right you managed it.

152
00:11:21,130 --> 00:11:22,480
It was pretty straightforward.

153
00:11:22,480 --> 00:11:24,550
So there's your empty paragraph tags.

154
00:11:24,550 --> 00:11:32,820
And then here instead of alerting data we can access or select the paragraph tag.

155
00:11:33,400 --> 00:11:40,650
And then we're going to set the DML to be data and that's it.

156
00:11:42,070 --> 00:11:45,280
Let's take a look wonderful.

157
00:11:45,310 --> 00:11:46,900
This is some content.

158
00:11:46,900 --> 00:11:49,990
So really it might not look like much what we've done there.

159
00:11:50,110 --> 00:11:53,710
In many ways we've just recreated what we've already done but in a much more complicated way.

160
00:11:53,890 --> 00:11:58,390
But hopefully you can see that there's a lot of power in this and especially when you combine this with

161
00:11:58,390 --> 00:12:03,630
a server side language like HP or Python both of which we'll learn later on in the course you're then

162
00:12:03,640 --> 00:12:08,850
in a position to create a really powerful web apps that are useful and fun to use.

163
00:12:08,950 --> 00:12:12,110
Like Gmail Facebook and Twitter.

164
00:12:12,220 --> 00:12:12,610
All right.

165
00:12:12,610 --> 00:12:13,930
So now you're familiar with AJAX.

166
00:12:13,930 --> 00:12:18,940
We're going to move on to a related but different topic which will prepare us for our mini J quivery

167
00:12:18,940 --> 00:12:25,520
project which we're going to do in two videos time and that new concept is another very powerful one.

168
00:12:25,630 --> 00:12:26,980
Regular Expressions.
