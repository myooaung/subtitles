WEBVTT
1
00:00:00.570 --> 00:00:07.050
Now that we've seen how to pass information from the browser to the server using GET variables which

2
00:00:07.050 --> 00:00:12.200
are encoded in the you Arel itself we're going to see how to do it using POST variables.

3
00:00:12.240 --> 00:00:17.910
It works in much the same way but post variables aren't encoded in the RL So that makes them a little

4
00:00:17.910 --> 00:00:20.600
bit more secure a bit more elegant.

5
00:00:20.700 --> 00:00:24.270
And you don't have to worry so much about the content of the variable.

6
00:00:24.270 --> 00:00:31.470
For example if a variable has an added symbol in it then that can be problematic with a string but it

7
00:00:31.470 --> 00:00:32.750
worked with post.

8
00:00:33.090 --> 00:00:35.810
So let's see how POST variables work.

9
00:00:35.880 --> 00:00:40.070
I'm going to keep our form from the previous video

10
00:00:43.110 --> 00:00:52.140
and then we need to do is change one attribute in our form tag and that is to change the form method

11
00:00:52.620 --> 00:00:54.300
to post.

12
00:00:54.330 --> 00:01:00.180
You can see that two options there get is the default so you don't need to add that post is what we're

13
00:01:00.180 --> 00:01:02.250
going to be using this time.

14
00:01:02.490 --> 00:01:13.680
So if we now run this without our tag if I put in a number that you'll see first off there's nothing

15
00:01:13.680 --> 00:01:18.260
in the world so we're not putting our post variable in RL.

16
00:01:18.460 --> 00:01:23.610
You also notice if you refresh then you get this request confirmed the form submission you've probably

17
00:01:23.610 --> 00:01:29.340
seen something about in a web site that you've used where you've refresh the page after submitting some

18
00:01:29.340 --> 00:01:30.310
information.

19
00:01:30.390 --> 00:01:38.370
So what they're asking here is do we want to submit that post variable again and so if we say yes then

20
00:01:38.430 --> 00:01:40.460
we do but it's still not there.

21
00:01:41.070 --> 00:01:42.800
So how do we accessit of them.

22
00:01:43.080 --> 00:01:44.700
What we do is

23
00:01:48.240 --> 00:01:56.870
exactly the same as with the get variable but we use Dola underscore post instead of the underscore.

24
00:01:56.860 --> 00:02:00.260
Get Let's have a look refresh.

25
00:02:00.430 --> 00:02:07.810
Submit the form again and you can see we've got the variable in exactly the same way and that's pretty

26
00:02:07.810 --> 00:02:08.890
much all there is to it.

27
00:02:08.890 --> 00:02:12.430
Everything else works in exactly the same way as with GET variables.

28
00:02:12.550 --> 00:02:18.410
So to get these into your head as well as practice DHP arrays loops and if statements.

29
00:02:18.430 --> 00:02:22.630
I've got a little challenge for you and that is I'd like you to create a slightly expanded version of

30
00:02:22.660 --> 00:02:28.750
the script that we created a couple of years ago where the user enters their name and the computer checks

31
00:02:28.750 --> 00:02:32.150
to see if they know them and if they do then they say hello.

32
00:02:32.170 --> 00:02:34.940
If they don't they say I don't know you.

33
00:02:35.350 --> 00:02:39.600
So this time I want an array of usernames you can have as many as you like.

34
00:02:39.600 --> 00:02:41.090
Three or four is probably a good idea.

35
00:02:41.230 --> 00:02:46.870
And then I'd like the user to enter their name in a simple form like this.

36
00:02:46.870 --> 00:02:55.390
Post it with a POST variable and then the code should check against the array of username.

37
00:02:55.420 --> 00:02:56.540
If it's on there.

38
00:02:56.540 --> 00:02:57.570
Say hello.

39
00:02:57.700 --> 00:02:59.940
If it's not in say I don't know you.

40
00:03:00.460 --> 00:03:04.840
Pretty simple but should give you a good opportunity to use pretty much everything that we've learned

41
00:03:04.870 --> 00:03:06.630
in this section so far.

42
00:03:06.650 --> 00:03:06.970
Go for it

43
00:03:15.050 --> 00:03:15.680
all right.

44
00:03:15.700 --> 00:03:17.120
How do you manage that.

45
00:03:17.140 --> 00:03:18.420
Let's give it a shot them.

46
00:03:18.780 --> 00:03:28.200
So I'm going to start with the aged female form so it will create a form with a method of post use capitals

47
00:03:28.200 --> 00:03:30.110
or small letters.

48
00:03:30.150 --> 00:03:31.850
It doesn't really matter.

49
00:03:32.880 --> 00:03:39.260
And then will ask What is your name.

50
00:03:39.880 --> 00:03:48.110
Then we'll have our inputs with a type of text and a name of name

51
00:03:51.080 --> 00:03:53.820
and then will have our submit button.

52
00:03:53.820 --> 00:04:01.600
So input with a type of submit and value will just be submit

53
00:04:04.630 --> 00:04:06.630
all right.

54
00:04:07.270 --> 00:04:10.350
I don't want to submit my form again because that was the previous form.

55
00:04:12.280 --> 00:04:13.110
OK.

56
00:04:13.430 --> 00:04:14.500
So that's the HVM.

57
00:04:14.540 --> 00:04:15.630
Now for some Ph.D.

58
00:04:19.300 --> 00:04:27.370
So first of all we'll check if there is a post variable a tool because if there isn't we don't want

59
00:04:27.370 --> 00:04:31.930
to do all of this and check it against the array etc..

60
00:04:32.020 --> 00:04:34.600
But if there is then we do want to check it.

61
00:04:34.630 --> 00:04:36.060
So let's create our array.

62
00:04:36.160 --> 00:04:40.090
You can imagine what my work is going to be I'm very an original.

63
00:04:40.430 --> 00:04:45.100
So we'll have Rob Caston.

64
00:04:46.280 --> 00:04:47.920
So me and Ralphie

65
00:04:51.800 --> 00:04:54.860
what we want to do is take the name variable.

66
00:04:54.860 --> 00:05:01.170
That was passed to the post array and check it against each of these names.

67
00:05:01.460 --> 00:05:02.860
So a number of ways to do that.

68
00:05:02.930 --> 00:05:07.610
But my favorite way as I've mentioned to loop through an array is using a for each loop.

69
00:05:07.790 --> 00:05:16.070
So we use for each and we want family as.

70
00:05:16.070 --> 00:05:23.750
And before we had key Aro Valley if we do that that's absolutely fine.

71
00:05:23.750 --> 00:05:28.440
But we don't actually care about the key this time because I only care about the values.

72
00:05:28.460 --> 00:05:34.700
So as a slight shortcut we can just a family as value and then that will ignore the keys and just give

73
00:05:34.700 --> 00:05:40.700
us the values which is fine because the valley is all we care about here anyway.

74
00:05:41.720 --> 00:05:48.520
And then what we want to do is check to see if the value is equal to.

75
00:05:48.560 --> 00:05:59.270
Remember doubling calls for a checking and post name name is the name of the variable.

76
00:05:59.270 --> 00:06:04.940
And here I'm going to use a similar solution to what we did in the is it prime script in the previous

77
00:06:04.940 --> 00:06:18.030
video that I'm going to set is known to be initially false and then if the value is equal to the name

78
00:06:19.130 --> 00:06:25.930
then we'll update is known to be true.

79
00:06:26.160 --> 00:06:27.300
We're looking at so far.

80
00:06:27.300 --> 00:06:41.460
And then when we've gone through that loop which is here then we just check to see if it's known then

81
00:06:43.770 --> 00:06:49.260
we can carry Hi there and then the name

82
00:06:55.660 --> 00:06:58.740
I'll put a friendly exclamation mark at the end there.

83
00:06:59.170 --> 00:07:11.570
And if they're not if we don't know them we just say I don't know you.

84
00:07:11.670 --> 00:07:12.180
All right.

85
00:07:12.180 --> 00:07:17.760
So pretty straightforward but it does use loops if statements post variables and arrays and variables.

86
00:07:17.790 --> 00:07:19.300
Indeed.

87
00:07:19.320 --> 00:07:20.760
So let's take a look.

88
00:07:20.760 --> 00:07:23.440
Just make sure it all works.

89
00:07:23.460 --> 00:07:27.960
So if I put Rob in there hey it's looking good.

90
00:07:27.960 --> 00:07:37.530
If I put Sarah then we get I don't know you and just a check Ralphy is nine.

91
00:07:38.310 --> 00:07:38.790
Wonderful.

92
00:07:38.850 --> 00:07:41.170
So how Hope you manage to do that wasn't too tricky.

93
00:07:41.460 --> 00:07:46.770
In the next video we're going to look at a very common function for BHP scripts and that is sending

94
00:07:46.770 --> 00:07:47.520
e-mail.

95
00:07:47.640 --> 00:07:52.120
And that's in preparation for our mini project of creating a contact form.

96
00:07:52.260 --> 00:07:52.790
See them.
