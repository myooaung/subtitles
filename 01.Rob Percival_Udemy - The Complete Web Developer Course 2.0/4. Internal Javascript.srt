1
00:00:00,810 --> 00:00:01,100
All right.

2
00:00:01,110 --> 00:00:06,480
So you've now written your first bit of Javascript and this is as I've mentioned in line javascript

3
00:00:06,990 --> 00:00:11,420
which is a very easy way to get it up and running but not generally the way I'd recommend doing it for

4
00:00:11,430 --> 00:00:14,540
exactly the same reasons we avoided inline ss.

5
00:00:14,690 --> 00:00:16,490
It's just very messy.

6
00:00:16,590 --> 00:00:20,200
Just in the same way that we want to keep our style and our content different.

7
00:00:20,220 --> 00:00:27,350
We want to keep our logic or our code or our javascript different from our content as well.

8
00:00:27,390 --> 00:00:33,210
So the way we do that is very similar to how we put in our style.

9
00:00:33,370 --> 00:00:42,200
We just use script and we get any javascript that we put in here will then be executed as soon as the

10
00:00:42,200 --> 00:00:44,600
page loads.

11
00:00:44,600 --> 00:00:56,510
Now that will work in itself but it's considered correct to put the correct type just to make it really

12
00:00:56,510 --> 00:01:01,230
clear that this is javascript that we want the browser to execute.

13
00:01:01,280 --> 00:01:08,150
So a very quick challenge for you then can you write a little bit of Javascript here to pop up the pages

14
00:01:08,180 --> 00:01:10,130
loaded or something similar.

15
00:01:10,130 --> 00:01:14,080
Once you reload the page go for it.

16
00:01:19,570 --> 00:01:20,770
Did you manage it.

17
00:01:20,830 --> 00:01:26,450
The challenge with possibly you might have included the on click command and if you did.

18
00:01:26,530 --> 00:01:27,400
No worries.

19
00:01:27,730 --> 00:01:33,940
But the javascript itself is actually just the alert part and then

20
00:01:37,390 --> 00:01:44,400
whatever text you want inside the quotes then so that's it.

21
00:01:44,400 --> 00:01:52,130
That's you need it let's just save that and refresh the page so you can see I just did a refresh there.

22
00:01:52,200 --> 00:01:56,450
I didn't click the button but that javascript was executed.

23
00:01:58,100 --> 00:02:01,280
A quick note about single and double quotes.

24
00:02:01,280 --> 00:02:08,440
I used single quotes here because we had double quotes around the edge of the unclick attribute.

25
00:02:08,480 --> 00:02:13,850
So if I'd used double quotes in there that would get very confused because the system would have thought

26
00:02:14,030 --> 00:02:20,770
that this double quote was supposed to end this bit of text rather than start a new one.

27
00:02:20,780 --> 00:02:26,690
So if you want to have quotes within quotes as we've got here then you need to use double and single.

28
00:02:26,690 --> 00:02:32,780
But here we don't have quotes within quotes so you can use double or single and double.

29
00:02:32,780 --> 00:02:38,660
Is slightly more conventionally correct these days even though both will work exactly the same.

30
00:02:38,660 --> 00:02:42,390
Single is only rarely used when we have to use it.

31
00:02:42,590 --> 00:02:45,450
If we're just using some quotes double quotes is the standard.

32
00:02:45,620 --> 00:02:46,550
While we're here as well.

33
00:02:46,610 --> 00:02:52,510
Just like C Ss Javascript has an optional semi-colon at the end.

34
00:02:54,800 --> 00:03:00,350
You don't need it but you can put it there and that will enable you to put several different commands

35
00:03:00,350 --> 00:03:02,100
on one line if you want to.

36
00:03:02,120 --> 00:03:05,860
So I'd recommend getting into the habit of putting semicolons at the end of your lines.

37
00:03:06,020 --> 00:03:07,180
But it's up to you.

38
00:03:07,730 --> 00:03:14,710
One more thing I want to show you while we're here is the chrome console which is really handy for debugging

39
00:03:14,720 --> 00:03:16,180
your javascript.

40
00:03:16,550 --> 00:03:21,860
So let's get back to just right click or control click on the page and click inspect.

41
00:03:21,930 --> 00:03:24,990
Like you may have done a few times if you followed along.

42
00:03:25,010 --> 00:03:31,490
The BBC CSSA project with me and then we go over and click console.

43
00:03:32,120 --> 00:03:35,630
So the console gives you two powerful tools.

44
00:03:35,630 --> 00:03:39,600
First off you can actually write javascript straight into it.

45
00:03:40,330 --> 00:03:44,060
So alert Hello.

46
00:03:44,490 --> 00:03:51,920
One bit of Javascript that we know and then that then is actually run on that page itself so that can

47
00:03:51,920 --> 00:03:59,430
be really handy if you want to check a particular command but probably more usefully is.

48
00:03:59,480 --> 00:04:02,880
It will show you if you've got errors in your javascript.

49
00:04:03,200 --> 00:04:08,910
So if I make a mistake and instead of alert I type or then.

50
00:04:08,930 --> 00:04:10,890
First off if I run the page.

51
00:04:11,060 --> 00:04:12,070
Let's just get rid of the console.

52
00:04:12,070 --> 00:04:14,920
If I run the page no just nothing happens.

53
00:04:14,960 --> 00:04:16,690
I don't get an error message or anything.

54
00:04:16,730 --> 00:04:20,780
Just nothing happens and that's what will happen if there's an error in your script you won't get an

55
00:04:20,780 --> 00:04:22,520
error message on the page itself.

56
00:04:22,640 --> 00:04:31,110
It just won't do anything and that can be really frustrating but if we have a look in the console you

57
00:04:31,110 --> 00:04:34,000
can see we've got a lovely error message there.

58
00:04:34,380 --> 00:04:39,930
It is not defined so we're trying to use a command that doesn't exist.

59
00:04:39,930 --> 00:04:44,560
So I have no doubt that while your pages in practicing with javascript you'll make mistakes and you'll

60
00:04:44,610 --> 00:04:50,670
have errors in your code and the chrome console is a really good way to see what they are.

61
00:04:50,670 --> 00:04:57,160
It even tells you what line your error is at so line 15 takes you straight there and then she bad C

62
00:04:57,200 --> 00:04:58,200
straight away.

63
00:04:58,530 --> 00:05:02,400
Yes of course I've just got that wrong and then you run it again.

64
00:05:02,580 --> 00:05:07,500
Your error disappears and your code works.

65
00:05:07,680 --> 00:05:11,790
So I'd recommend using that and I'll definitely refer to it throughout the course as well.

66
00:05:11,790 --> 00:05:19,230
Notice that you can put your script code up in the head and in some situations that's a good idea.

67
00:05:19,230 --> 00:05:25,790
I will see some of those later on in this section but generally for the first section at least we're

68
00:05:25,800 --> 00:05:29,910
going to be primarily putting our code at the end of the page like that.

69
00:05:29,910 --> 00:05:34,290
And that means that it will get executed as soon as the page is run which for most of these examples

70
00:05:34,560 --> 00:05:36,120
that's what we want.

71
00:05:36,120 --> 00:05:37,900
All right so enough introduction.

72
00:05:37,980 --> 00:05:40,950
Let's get started and start writing some real javascript.
