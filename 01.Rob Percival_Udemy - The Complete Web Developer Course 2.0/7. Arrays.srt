1
00:00:00,750 --> 00:00:06,450
All right so moving on from variables to array's you may remember from the javascript and Jay Querrey

2
00:00:06,450 --> 00:00:12,960
sections that arrays are ways of storing a number of different values in the same object.

3
00:00:13,000 --> 00:00:14,950
That sounds weird until you see it in action.

4
00:00:14,970 --> 00:00:17,400
So let's create one straight away.

5
00:00:17,580 --> 00:00:24,810
We use exactly the same structure as with variables so dollar sign and then whatever you want to call

6
00:00:24,810 --> 00:00:31,860
the array and then we're going to set this equal to an array and then we just add the values that we

7
00:00:31,860 --> 00:00:33,990
want to put in the array.

8
00:00:34,170 --> 00:00:42,870
So we'll do the classic example for me at least over upcast and Tommy and

9
00:00:45,840 --> 00:00:46,920
Ralphy.

10
00:00:47,510 --> 00:00:50,650
Then we want to see what this variable actually looks like.

11
00:00:51,250 --> 00:00:52,500
If we try and echo it

12
00:00:56,710 --> 00:00:59,640
see what happens we get a notice.

13
00:00:59,740 --> 00:01:05,140
So it's not quite an error but it's a bit of a warning telling us that we're trying to essentially treat

14
00:01:05,170 --> 00:01:08,530
an array like a string because we're trying to echo it.

15
00:01:08,820 --> 00:01:12,190
But then it does it anyway but all it does is tell us that it's an array.

16
00:01:12,540 --> 00:01:19,780
So echoing an array doesn't do anything particularly useful but there is another command to print underscore

17
00:01:20,050 --> 00:01:22,350
are the are there.

18
00:01:22,390 --> 00:01:23,990
Is short for readable.

19
00:01:24,430 --> 00:01:31,490
And print is a great way of showing you what the contents of an array or any kind of object are.

20
00:01:32,260 --> 00:01:34,600
So let's have a look at we go.

21
00:01:34,630 --> 00:01:37,040
And now we get a much more useful array.

22
00:01:37,210 --> 00:01:44,200
And then the zeroth item in the arrays robe the number one item is cast and then to is Tommy 3 is Ralphy

23
00:01:44,200 --> 00:01:45,440
etc..

24
00:01:46,000 --> 00:01:52,420
And if you've got a big array it's worth noting that if you look at the page source then it's actually

25
00:01:52,420 --> 00:01:54,480
really nicely laid out for you.

26
00:01:54,520 --> 00:01:59,550
You don't get the line breaks in the HGL but you do on the page source.

27
00:01:59,740 --> 00:02:04,830
So that can be a handy way of working your way through a big array if you need to.

28
00:02:04,840 --> 00:02:05,270
All right.

29
00:02:05,320 --> 00:02:14,350
So that's how we create an array in order to get some of the items we can do something like Ecko because

30
00:02:14,350 --> 00:02:17,010
we're displaying a string this time we're just going to get one of the items.

31
00:02:17,080 --> 00:02:27,100
And then my array and then just like in javascript square brackets and then the number that you want

32
00:02:27,400 --> 00:02:28,530
within the array.

33
00:02:28,780 --> 00:02:34,720
So a quick challenge for you which of the four family members is going to display

34
00:02:38,230 --> 00:02:39,170
I hope you got it.

35
00:02:39,170 --> 00:02:41,150
It is of course Keston.

36
00:02:41,180 --> 00:02:43,400
Some of you may have said well it's going to just buy the first one.

37
00:02:43,430 --> 00:02:44,320
And that's Rob.

38
00:02:44,480 --> 00:02:48,210
But remember rates always start at the zero index.

39
00:02:48,380 --> 00:02:52,120
So to display Rob I need to do my array zero.

40
00:02:52,460 --> 00:02:54,510
And then at 0 1 2 3.

41
00:02:54,560 --> 00:03:00,700
Of course if I attempted my right for then I wouldn't get any output.

42
00:03:00,830 --> 00:03:08,720
I'd also get another notice saying that I'm trying to display an array index which doesn't exist.

43
00:03:08,810 --> 00:03:11,390
So let's go back to three.

44
00:03:11,390 --> 00:03:12,470
There we go.

45
00:03:12,950 --> 00:03:19,390
Another way to define an array is to just create the values manually.

46
00:03:19,970 --> 00:03:28,470
So I could have another array and I could set the zeroth item in that to be say pizza.

47
00:03:28,670 --> 00:03:37,540
If we're doing an array of fruits and then I could set one today.

48
00:03:39,020 --> 00:03:41,810
You'll get to for example and then

49
00:03:46,120 --> 00:03:48,140
let's have a look.

50
00:03:48,790 --> 00:03:55,980
If we display all of that we get a normal array that I think I'm just going to put in a couple of line

51
00:03:55,980 --> 00:03:56,940
breaks.

52
00:04:01,360 --> 00:04:03,500
To separate all that out.

53
00:04:04,870 --> 00:04:07,760
So it's a bit clearer what's going on.

54
00:04:07,780 --> 00:04:15,400
Notice that we didn't actually need to have 0 and 1 and then two and then three there we could put whatever

55
00:04:15,400 --> 00:04:18,870
we liked.

56
00:04:19,380 --> 00:04:26,360
If I wanted to jump for some reason to number five which might be coffee

57
00:04:29,030 --> 00:04:31,730
then that works absolutely fine.

58
00:04:31,730 --> 00:04:39,380
And that's because the arrays are associative meaning that you can put anything you like in the index

59
00:04:39,500 --> 00:04:40,760
column.

60
00:04:41,000 --> 00:04:51,860
So I could even go crazy and put a string in there.

61
00:04:51,990 --> 00:04:54,840
My favorite food set.

62
00:04:54,840 --> 00:05:01,820
That equals the ice cream for example.

63
00:05:02,060 --> 00:05:04,620
And that sets the index has my favorite food.

64
00:05:04,820 --> 00:05:09,020
So that can be pretty useful if you've got some information about a user for example and you want to

65
00:05:09,110 --> 00:05:10,160
store that as an array.

66
00:05:10,160 --> 00:05:16,910
You can have name username password whatever right there if you want to create an associative array

67
00:05:16,910 --> 00:05:24,310
like this using indexes like favorite food and you want to do that straight away like we have here.

68
00:05:24,420 --> 00:05:30,020
Then you can do that in a similar way as we defined my up top.

69
00:05:30,440 --> 00:05:36,630
Let's create a third array and we set it up in the same way.

70
00:05:37,600 --> 00:05:43,110
It's going to be an array but we first put the index.

71
00:05:43,280 --> 00:05:46,430
So let's say we want a collection of languages here.

72
00:05:48,840 --> 00:05:59,950
That index might be France and then we use equals and greater than to create a sort of Arrow and then

73
00:06:01,230 --> 00:06:02,500
the language.

74
00:06:02,890 --> 00:06:10,500
So that would mean that the index of France would give us French and similarly for USA

75
00:06:14,040 --> 00:06:18,890
is English and Germany

76
00:06:23,680 --> 00:06:25,350
German.

77
00:06:25,520 --> 00:06:26,480
Let's get the quites

78
00:06:30,820 --> 00:06:31,390
again.

79
00:06:33,550 --> 00:06:35,040
Let's just have a look at that.

80
00:06:41,160 --> 00:06:43,740
Poppin a couple of line breaks as well.

81
00:06:45,480 --> 00:06:46,900
Keep everything separate.

82
00:06:46,900 --> 00:06:47,440
There we go.

83
00:06:47,740 --> 00:06:52,990
Sort of set up an IRA in a similar way that we did here but all in one go if you're going to do something

84
00:06:52,990 --> 00:06:57,310
like that I would recommend having it nice and tidy.

85
00:06:57,310 --> 00:06:59,190
Say something like that.

86
00:07:00,010 --> 00:07:05,230
Would be a nice way to have it on your carrier rather than all in one line.

87
00:07:05,230 --> 00:07:07,030
Just a couple of things then before we move on.

88
00:07:07,150 --> 00:07:09,180
We can get the length of an hour.

89
00:07:09,670 --> 00:07:18,130
That is the number of items in the array using size of search just like that.

90
00:07:18,180 --> 00:07:25,170
And then whatever the name is so I'm going to echo that.

91
00:07:25,220 --> 00:07:27,460
What should it be.

92
00:07:28,280 --> 00:07:32,370
Should of course be three because there are three items in the array.

93
00:07:35,300 --> 00:07:40,850
What if you want to add an item to the end of an array created like this.

94
00:07:40,850 --> 00:07:47,590
So a non associative array with just 0 1 2 3 etc. has the indices.

95
00:07:47,750 --> 00:07:50,840
That's easy enough.

96
00:07:50,960 --> 00:07:59,540
So we just have my array and then empty square brackets and then whatever we want the new one to be.

97
00:08:00,440 --> 00:08:09,170
So without giving anything away for example we might have Katie there and then that would add Katy onto

98
00:08:09,170 --> 00:08:10,930
the end of our right.

99
00:08:11,300 --> 00:08:14,650
Finally what if we wanted to remove an item from an array.

100
00:08:14,900 --> 00:08:18,380
We can do that using the unset command.

101
00:08:18,430 --> 00:08:29,080
So if we wanted to get rid of fronts for example from this array we would just use unset and then the

102
00:08:29,080 --> 00:08:37,220
name of the right that are right and then the name of the item that we wanted to get rid of.

103
00:08:37,890 --> 00:08:44,240
If we have a look at that then that will be the same but without France we can also use that on variable.

104
00:08:44,240 --> 00:08:48,570
So if you create a variable and you want to delete it for some reason then you would use unset to do

105
00:08:48,570 --> 00:08:49,930
that.

106
00:08:50,090 --> 00:08:50,990
Correct.

107
00:08:51,090 --> 00:08:55,350
That's all you need to know about arrays at this point in the next video we're going to move on from

108
00:08:55,380 --> 00:08:59,850
variables and arrays and look at things which affect the flow of our code.

109
00:08:59,850 --> 00:09:02,390
Specifically if statements and loops.
