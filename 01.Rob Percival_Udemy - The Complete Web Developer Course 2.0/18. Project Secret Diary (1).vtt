WEBVTT
1
00:00:00.480 --> 00:00:05.520
Congratulations on making it to the end of the minuscule section of the complete web developer of course

2
00:00:06.330 --> 00:00:12.030
you've covered a huge amount and we've been working steadily towards creating our own web app with a

3
00:00:12.030 --> 00:00:14.330
completely functional logging system.

4
00:00:14.610 --> 00:00:16.820
And that's what we're going to be doing in this challenge.

5
00:00:16.890 --> 00:00:22.440
So I've split it into two parts and I'm first going to show you the final output of what we're going

6
00:00:22.440 --> 00:00:27.030
to be making and then I'll show you what we're aiming for in this first video.

7
00:00:27.540 --> 00:00:35.240
So obviously we've got a nice looking bootstrap styled page and we can switch between Sign up and log

8
00:00:35.250 --> 00:00:39.530
in by clicking the link at the bottom there.

9
00:00:40.050 --> 00:00:40.590
If we

10
00:00:43.890 --> 00:00:48.550
try and sign up without a password or something like that we get nice error messages.

11
00:00:48.990 --> 00:00:55.280
And once we do sign up just use a random email address.

12
00:00:57.160 --> 00:01:04.630
We are treated to a lovely big text area where the user can enter their

13
00:01:07.920 --> 00:01:16.980
deepest thoughts and they're updated in the database as soon as the user has typed them so they don't

14
00:01:16.980 --> 00:01:19.920
even need to click a save button.

15
00:01:20.040 --> 00:01:24.500
And then of course the user can log out and come back to the home page.

16
00:01:24.810 --> 00:01:26.040
So that's what we're going to be producing.

17
00:01:26.040 --> 00:01:26.810
It's pretty cool.

18
00:01:26.880 --> 00:01:33.810
But what we're after in this first video is something a lot less pretty but not necessarily a lot less

19
00:01:33.810 --> 00:01:34.600
functional.

20
00:01:34.800 --> 00:01:39.690
So what I want to do here is kind of abstract the logon system.

21
00:01:39.690 --> 00:01:46.500
So we've got a sign up form and a in form both of which have an option to stay logged in which is going

22
00:01:46.500 --> 00:01:52.210
to create a cookie to keep the user logged in permanently even if they shut down the browser.

23
00:01:52.620 --> 00:01:54.630
And this has got all of the same

24
00:01:58.160 --> 00:01:59.720
validation built in.

25
00:01:59.930 --> 00:02:05.180
But when you sign up or log in successfully it just logs you into a page that says you are logged in

26
00:02:05.240 --> 00:02:07.120
and gives them the option to log out.

27
00:02:07.310 --> 00:02:12.570
So the reason I've separated it is because this will give you a robust and flexible locking system that

28
00:02:12.590 --> 00:02:17.120
you could use for pretty much any site that required you to sign up.

29
00:02:17.150 --> 00:02:22.110
So you've got all the skills to do this yourself because well go for it

30
00:02:35.040 --> 00:02:35.630
or then.

31
00:02:35.640 --> 00:02:42.840
Hey guys I'm going to begin by making the HDMI will sign up for and this is going to be pretty similar

32
00:02:42.840 --> 00:02:47.250
to the phone that we made a few years ago with the exception that we're also going to allow the user

33
00:02:47.730 --> 00:02:50.390
to stay logged in using a cookie.

34
00:02:50.430 --> 00:02:55.190
So hey guys we're going to have a forum and I'm going to stick with post

35
00:03:01.710 --> 00:03:09.760
and then I'm going to have an input with a type of email.

36
00:03:09.900 --> 00:03:12.760
It's going to have a name of him as well.

37
00:03:14.360 --> 00:03:18.280
And a place holder of your e-mail

38
00:03:21.630 --> 00:03:24.540
will have similar for the password.

39
00:03:24.960 --> 00:03:33.180
So type of password name equals password and placeholder and just have password

40
00:03:37.570 --> 00:03:39.720
and then we can have a checkbox

41
00:03:42.350 --> 00:03:55.070
with a name of stay logged in and a value of 1.

42
00:03:55.340 --> 00:04:09.250
And finally we're going to have an input with a type of submit and a valley of sign up.

43
00:04:09.250 --> 00:04:10.480
All right let's take a look.

44
00:04:15.310 --> 00:04:19.660
That's fine except that know what I'm doing with my checkbooks.

45
00:04:20.530 --> 00:04:26.860
Should've been an input with a type of checkbooks just try that again.

46
00:04:26.870 --> 00:04:28.100
Great.

47
00:04:28.250 --> 00:04:31.270
Obviously we'll add the labels for these later on.

48
00:04:31.760 --> 00:04:33.940
But for now let's just do a quick test.

49
00:04:40.750 --> 00:04:43.270
Sign up seems to be submitting the form well.

50
00:04:43.600 --> 00:04:45.100
And then let's just add

51
00:04:48.290 --> 00:04:53.190
some ph pay to test first off if there is a post variable.

52
00:04:53.510 --> 00:05:04.940
So if Auray key exists and one way around looking for the email or password is to actually look for

53
00:05:04.940 --> 00:05:05.750
the submit

54
00:05:09.200 --> 00:05:12.930
which if they click on that button to submit the form which they have to submit the form.

55
00:05:13.010 --> 00:05:19.310
There's definitely going to be I submit variable in there so we could actually look for Reiki exists

56
00:05:20.840 --> 00:05:25.370
and look for the submit key within the post array

57
00:05:28.240 --> 00:05:31.450
and if that does exist for now we'll just

58
00:05:34.150 --> 00:05:40.010
display the paste Fatty's.

59
00:05:40.040 --> 00:05:52.270
So it's just the ways and again and there we get so caught email password stay logged in and submit.

60
00:05:52.290 --> 00:05:52.880
Excellent.

61
00:05:53.100 --> 00:05:55.150
So let's do some validation.

62
00:05:57.230 --> 00:06:08.240
We'll have an area variable which is initially empty and then if they haven't entered an email address

63
00:06:11.720 --> 00:06:13.570
will append to the error.

64
00:06:17.870 --> 00:06:19.050
An email address

65
00:06:22.200 --> 00:06:23.070
is required

66
00:06:28.660 --> 00:06:30.740
and will do the same for password

67
00:06:44.150 --> 00:06:49.490
and I'm not going to do any email validation to check that it's a valid email or I'm not going to have

68
00:06:49.760 --> 00:06:53.580
multiple password fields to check against each other as well.

69
00:06:53.630 --> 00:06:57.560
Just for simplicity we've done those before and you can add those if you like.

70
00:06:59.330 --> 00:07:00.230
So then we'll say

71
00:07:03.330 --> 00:07:10.010
if there is an error the error string is not empty.

72
00:07:13.740 --> 00:07:17.580
Then we'll say something like hara equals

73
00:07:20.800 --> 00:07:25.660
there were errors in your form

74
00:07:33.350 --> 00:07:44.810
and then we'll have the specific error messages and I'll just pop a line break again at the end of each

75
00:07:44.810 --> 00:07:49.280
of those not like it's really needed at the end of the password but we might want to add further ones

76
00:07:49.280 --> 00:07:51.730
on and it's not going to break anything.

77
00:07:51.800 --> 00:07:57.590
So then down here as we've seen before we'll have a div with an ID of error.

78
00:08:00.200 --> 00:08:07.750
And we'll carry the error message there which will obviously be blank if there isn't one

79
00:08:10.890 --> 00:08:11.480
OK.

80
00:08:11.760 --> 00:08:15.120
So let's try putting just an email address in.

81
00:08:15.270 --> 00:08:22.170
It does have to be valid.

82
00:08:22.410 --> 00:08:24.580
Yeah that's very strange of me.

83
00:08:24.660 --> 00:08:28.170
I changed the password for some reason

84
00:08:31.400 --> 00:08:32.410
try that again.

85
00:08:32.410 --> 00:08:33.040
Excellent.

86
00:08:33.060 --> 00:08:34.020
There are errors in your form.

87
00:08:34.020 --> 00:08:35.830
A password is required.

88
00:08:35.850 --> 00:08:38.430
And similarly if I put a password in.

89
00:08:38.430 --> 00:08:40.970
Then we get an e-mail address error.

90
00:08:41.160 --> 00:08:46.490
If I put an e-mail address in and a password then we don't get any errors.

91
00:08:46.500 --> 00:08:48.420
William.

92
00:08:48.420 --> 00:08:49.310
All right.

93
00:08:49.430 --> 00:08:56.730
So if there isn't an error our next step is to see if that e-mail address is taken.

94
00:08:56.960 --> 00:09:00.660
And for that we'll need access to our database.

95
00:09:00.770 --> 00:09:03.600
So I've got my control panel up and ready to go here.

96
00:09:03.650 --> 00:09:09.300
I'm going to create a new database because we're doing everything from scratch.

97
00:09:11.160 --> 00:09:18.310
So clicking on my Escurial databases and I'm going to call it secret deal.

98
00:09:18.350 --> 00:09:22.420
I notice that you're limited to nine characters here.

99
00:09:22.650 --> 00:09:25.300
So I'm just going to leave it at that.

100
00:09:25.500 --> 00:09:29.370
If you're using a different system you might be able to have a longer name but it doesn't really require

101
00:09:29.370 --> 00:09:29.670
one.

102
00:09:29.670 --> 00:09:30.800
So that will work fine.

103
00:09:30.840 --> 00:09:37.120
And then we'll generate a password and create the database quite.

104
00:09:37.350 --> 00:09:40.680
So then let's scroll down to get the details.

105
00:09:40.680 --> 00:09:41.250
There we go.

106
00:09:41.310 --> 00:09:42.660
That's what we're going to need to connect.

107
00:09:42.660 --> 00:09:48.940
But first off let's jump into the HP my admin and create the data structure.

108
00:09:49.650 --> 00:09:55.710
So I'd always recommend using something like HP my admin to manage your database so when you're actually

109
00:09:55.710 --> 00:10:04.200
creating tables or columns then do that in a nice interface like this and then use your code to just

110
00:10:04.290 --> 00:10:09.360
add and edit and search items within your database as necessary.

111
00:10:11.250 --> 00:10:13.410
So we'll just call it uses again.

112
00:10:14.670 --> 00:10:17.490
And I'm going to have five columns.

113
00:10:17.640 --> 00:10:22.020
I never know quite how many columns I'm going to need but five seems reasonable.

114
00:10:22.020 --> 00:10:25.200
And if you don't use them all then that's fine.

115
00:10:25.200 --> 00:10:32.330
Anyway so I'm going to start as always with an ID that's an integer and it's going to alter increments

116
00:10:33.030 --> 00:10:34.770
and it's going to be a primary key.

117
00:10:36.220 --> 00:10:46.510
Then I'm going to have the email address I'm going to have my password and I'm going to have my diary.

118
00:10:46.550 --> 00:10:51.580
So that's going to be the actual content of the diary which we obviously won't need until later on.

119
00:10:51.760 --> 00:10:53.740
But we'll put it in now anyway.

120
00:10:54.350 --> 00:10:58.270
And those two will be text.

121
00:10:58.340 --> 00:10:59.490
I think that's all we'll need.

122
00:11:00.740 --> 00:11:03.540
We'll find out later on.

123
00:11:03.670 --> 00:11:08.610
OK so now if we look at that obviously there's no users in there as yet.

124
00:11:08.610 --> 00:11:14.630
So now it's time to connect to our database from our script.

125
00:11:14.830 --> 00:11:16.320
So we'll do that here.

126
00:11:18.080 --> 00:11:29.240
So we'll have a link which is going to be a secure ally connect and we're on the same server as our

127
00:11:29.240 --> 00:11:30.100
database server.

128
00:11:30.110 --> 00:11:35.150
So I can use localhost if we weren't I would have to use that IP address that

129
00:11:38.750 --> 00:11:41.390
then we have the user name

130
00:11:46.870 --> 00:11:48.340
for our database.

131
00:11:48.790 --> 00:11:50.260
Then we're going to have the password.

132
00:11:50.260 --> 00:11:59.050
But while I've got it in my clipboard remember on our web hosting the database name is the same as the

133
00:11:59.050 --> 00:11:59.920
user name.

134
00:12:00.010 --> 00:12:02.400
So I'm going to paste that in there as well.

135
00:12:02.830 --> 00:12:08.050
And then we can grab the password and put that in there too.

136
00:12:08.350 --> 00:12:19.350
Then we'll do our check to see if there is in my ask your ally CONNECT THE

137
00:12:22.350 --> 00:12:28.260
And if there is then we'll end the scrip and we'll just put a database

138
00:12:30.840 --> 00:12:34.140
connection era.

139
00:12:34.140 --> 00:12:34.760
All right.

140
00:12:34.780 --> 00:12:41.170
With any luck they will be connected to the database and then when we're here we can do our check to

141
00:12:41.170 --> 00:12:48.030
see if there is a use up with the e-mail address but our new user has entered.

142
00:12:48.040 --> 00:12:58.840
So let's set up a query can we select ID from uses

143
00:13:02.410 --> 00:13:11.060
when email is equal to A and then we're going to ask you well I

144
00:13:14.570 --> 00:13:18.110
real escape.

145
00:13:18.520 --> 00:13:19.010
String

146
00:13:23.380 --> 00:13:31.240
and then the post email variable so that you'll remember escapes any strange characters and any naughtiness

147
00:13:31.240 --> 00:13:36.730
that the user might be using to access our system and our pop

148
00:13:40.760 --> 00:13:42.650
limit on there not that it really matters.

149
00:13:42.830 --> 00:13:46.360
But I like to have a limit unless it's really not necessary.

150
00:13:47.620 --> 00:14:01.190
Then you run the query so results my ask you I query using the link and the query and using link that

151
00:14:01.190 --> 00:14:07.900
just reminded me that I've forgotten to put it in there for the my secure real escape screen as well.

152
00:14:08.840 --> 00:14:12.500
Then I'm going to check my ask you out.

153
00:14:12.510 --> 00:14:25.760
I know I'm Rose as we saw before from the result and I wanted to see if that is bigger than 0 and if

154
00:14:25.760 --> 00:14:35.400
it is will I carry that email address is taken.

155
00:14:35.640 --> 00:14:37.230
In fact let's not echo it.

156
00:14:37.350 --> 00:14:43.650
Let's set our error a variable equal to it and then it will be echoed down there.

157
00:14:47.080 --> 00:14:52.180
And if that's not the case we actually want to sign the user up.

158
00:14:53.620 --> 00:14:59.110
So let's run our query this is going to be insert into

159
00:15:01.650 --> 00:15:07.720
uses and we're inserting two fields.

160
00:15:07.740 --> 00:15:08.370
Email

161
00:15:12.970 --> 00:15:23.920
and password and the values for those fields are going to be the e-mail address which we've already

162
00:15:23.920 --> 00:15:29.490
got escaped my van

163
00:15:34.540 --> 00:15:42.070
and also the password which Remember we're going to hash but I want to hash it with the ID of the user

164
00:15:42.070 --> 00:15:44.460
in the database and we don't know what that is yet.

165
00:15:44.800 --> 00:15:56.000
So I'm going to very temporarily store the password unhatched them will immediately updated

166
00:16:07.260 --> 00:16:09.160
OK and then we'll run that query

167
00:16:13.320 --> 00:16:18.270
and just before we do the updating the password bit I'm just going to run this because I've written

168
00:16:18.270 --> 00:16:25.590
a lot of code and I wouldn't be surprised if there's some errors in it.

169
00:16:25.620 --> 00:16:26.500
So let's have a look.

170
00:16:26.530 --> 00:16:29.810
While we're still working.

171
00:16:29.900 --> 00:16:30.820
Yes.

172
00:16:32.850 --> 00:16:40.950
I often forget my link and I actually had a check to see if that's worked.

173
00:16:42.940 --> 00:16:47.870
I think I'll check specifically if it hasn't worked and will add an error.

174
00:16:52.210 --> 00:16:52.880
Could not

175
00:16:55.810 --> 00:16:57.360
sign you up.

176
00:16:57.490 --> 00:16:59.730
Please try again later.

177
00:17:05.210 --> 00:17:15.400
And for now let's have a quick OK sign up successful.

178
00:17:15.810 --> 00:17:17.340
So that's what we want to see.

179
00:17:17.700 --> 00:17:18.860
Let's have a look.

180
00:17:21.060 --> 00:17:21.760
All right.

181
00:17:21.840 --> 00:17:23.650
I've got something that looks very promising.

182
00:17:24.030 --> 00:17:28.130
Let's have a look in the database.

183
00:17:28.650 --> 00:17:33.830
We have our new user fabulous.

184
00:17:34.130 --> 00:17:40.280
So now then if the user tries to sign up again with those details he should say that e-mail address

185
00:17:40.340 --> 00:17:41.730
is taken.

186
00:17:41.840 --> 00:17:47.930
So the next thing to do then is update the passwords to a properly hashed password and to do that will

187
00:17:47.930 --> 00:17:53.230
need the ID of the inserted row which we could get by doing a query from it.

188
00:17:53.390 --> 00:18:05.900
But there's actually a really nice way of getting that ID and that is using MY as well I insert ID and

189
00:18:05.900 --> 00:18:11.720
that actually gives us the ID of the most recently inserted element in our database which is really

190
00:18:11.720 --> 00:18:12.670
handy.

191
00:18:13.370 --> 00:18:15.140
So that's going to give us what we need.

192
00:18:15.410 --> 00:18:23.510
So that means I want to update the password using an empty five hash.

193
00:18:23.510 --> 00:18:26.740
Involving this.

194
00:18:26.940 --> 00:18:40.030
So let's set up our query and we want to update we just get rid of that for the moment update uses and

195
00:18:40.040 --> 00:18:44.170
we want to set password equal to say

196
00:18:47.500 --> 00:18:53.950
and we want to do an empty five of

197
00:18:57.510 --> 00:19:04.660
the Post-it password.

198
00:19:04.740 --> 00:19:17.770
You remember we want to Salt's that with an empty five of the mice ally insert ID.

199
00:19:18.280 --> 00:19:25.700
So this will take the mice you will insert Id said the ID of the row that weve just created you will

200
00:19:25.700 --> 00:19:31.230
M.D 5 it it will then appends that to the password that they've put in.

201
00:19:31.300 --> 00:19:39.950
It will M.D five that and then it will set that to be the password for our user and we want to set that

202
00:19:40.130 --> 00:19:43.710
to be the case where the ID is equal to.

203
00:19:44.300 --> 00:19:52.130
And again we want ask your ally insert ID we could stop there but I'm going to pop a limit one on the

204
00:19:52.130 --> 00:19:55.090
end just in case something goes horribly wrong.

205
00:19:57.180 --> 00:20:02.980
All right then once again we'll run the query.

206
00:20:05.240 --> 00:20:18.960
Site Link and Querrey and then shared encode the password for us so let's have a new user at gmail dot

207
00:20:18.960 --> 00:20:25.540
com with some password and then we'll sign them up haha.

208
00:20:25.580 --> 00:20:32.430
A good warning then the mice Correll I insert ID does require the link

209
00:20:37.570 --> 00:20:39.590
variable to get in there.

210
00:20:40.460 --> 00:20:42.390
So let's have another new user.

211
00:20:42.510 --> 00:20:44.390
G-mail.

212
00:20:44.900 --> 00:20:47.960
The very simple password OK.

213
00:20:47.980 --> 00:20:50.400
We've got Sign-Up successful that's looking good.

214
00:20:50.680 --> 00:20:54.730
Let's now have a look at our database and we should find it.

215
00:20:54.730 --> 00:20:56.680
There we go.

216
00:20:56.720 --> 00:21:01.000
So how other new user has a nicely hashed password in there.

217
00:21:01.170 --> 00:21:04.120
Let's get rid of these unsecure ones.

218
00:21:07.460 --> 00:21:11.680
Because they're dirtying how database as it stands.

219
00:21:11.810 --> 00:21:12.380
We don't want that

220
00:21:15.950 --> 00:21:18.170
it's.

221
00:21:18.230 --> 00:21:24.310
So now we're going to set up the sessions and if requested the cookie.

222
00:21:24.320 --> 00:21:33.130
So let's start by adding session start to the beginning of our script.

223
00:21:35.980 --> 00:21:51.760
And then we'll set the session id to be equal to again my secure ally insert ID so the ID of our new

224
00:21:51.760 --> 00:21:53.410
user.

225
00:21:54.460 --> 00:22:03.240
And finally we'll check to see if they have requested to stay logged in.

226
00:22:03.300 --> 00:22:17.950
And that will be the case if stay logged in is equal to 1.

227
00:22:18.200 --> 00:22:21.460
And if it is then we'll set a cookie as well.

228
00:22:24.410 --> 00:22:35.520
So that's going to be Heidi it's going to have a value of my secure ally insert ID link and a time of

229
00:22:35.520 --> 00:22:37.200
the current time.

230
00:22:37.740 --> 00:22:50.310
Plus 1 minutes and an hour 24 want to go for the whole hog 365 so that will really keep them locked

231
00:22:50.310 --> 00:22:52.730
in for a long time.

232
00:22:54.720 --> 00:22:55.260
All right.

233
00:22:55.560 --> 00:23:00.990
So now we've set the session and the cookie we're going to do a redirect.

234
00:23:01.080 --> 00:23:07.560
So I'm just going to nip back to fire FTB and create a new file.

235
00:23:08.020 --> 00:23:13.960
And this is going to be logged in page to page.

236
00:23:14.280 --> 00:23:18.760
We are going to have one logged in page so I can just call it that but you're going to probably want

237
00:23:18.760 --> 00:23:23.760
to be a little bit more descriptive with your file names.

238
00:23:24.180 --> 00:23:27.390
So I looked in page we're then going to edit

239
00:23:32.250 --> 00:23:34.210
and is going to be pretty simple.

240
00:23:34.860 --> 00:23:36.630
So we're going to start our session

241
00:23:41.230 --> 00:23:51.220
and we're going to check to see if there's a cookie so older using horæ key exists.

242
00:23:53.900 --> 00:23:55.940
And the key that we're looking for is I.D.

243
00:23:58.850 --> 00:24:02.080
and we're looking for it in the cookie right.

244
00:24:05.810 --> 00:24:12.530
And if that's the case then we'll set the session id equal say

245
00:24:17.040 --> 00:24:18.200
the cookie ID.

246
00:24:18.560 --> 00:24:23.710
So that's a pretty simple way to have a session and cookies set up in one go.

247
00:24:23.990 --> 00:24:28.830
So if the user has a cookie then we update the session to equal it.

248
00:24:28.880 --> 00:24:31.580
And then we can refer to the session everywhere else.

249
00:24:31.580 --> 00:24:34.960
And essentially we just recreate the session every time that we need to.

250
00:24:35.330 --> 00:24:40.820
And then we'll check to see if there's a session.

251
00:24:40.820 --> 00:24:52.530
So again if a key exists and this time we're looking for the same key we're looking in the session right.

252
00:24:53.360 --> 00:25:04.540
So if that's the case will echo logged in and we'll give them a link to log out.

253
00:25:04.910 --> 00:25:15.590
And the way I'm going to do this is to link back to index top HP but with a flag saying log out is equal

254
00:25:15.590 --> 00:25:21.680
to one so that's a get variable which essentially says logged me out and will deal with that back in

255
00:25:21.680 --> 00:25:22.740
index ph P

256
00:25:28.070 --> 00:25:34.880
so that we logout link the paragraph there as well.

257
00:25:41.030 --> 00:25:46.790
OK so that's if they are logged in if they're not logged in I'm just going to redirect them back to

258
00:25:46.820 --> 00:25:56.330
the home page and we do that with a header of location index top BHP

259
00:26:00.710 --> 00:26:01.250
OK.

260
00:26:05.760 --> 00:26:08.750
So let's check first off.

261
00:26:09.830 --> 00:26:14.710
The redirect works when they're are lockdowns.

262
00:26:14.860 --> 00:26:25.080
So if we run to log in page to people should we get link straight back to index ph HP which has acquired

263
00:26:25.130 --> 00:26:25.580
a warning.

264
00:26:25.580 --> 00:26:27.160
We'll deal with that in a minute.

265
00:26:28.400 --> 00:26:34.100
And then hopefully if we lock them when we get to that page it will show us the logged in and they give

266
00:26:34.100 --> 00:26:36.950
us the logout link.

267
00:26:37.160 --> 00:26:40.490
So let's say that and close that down for now.

268
00:26:40.560 --> 00:26:46.050
Use just command or control on Windows to close that and let's have a quick look at this area.

269
00:26:47.410 --> 00:26:57.250
So we want to I guess as we saw before we want to create the error variable before we check for a post

270
00:26:57.250 --> 00:26:57.610
variable

271
00:27:02.000 --> 00:27:02.600
OK.

272
00:27:04.260 --> 00:27:14.370
So instead of saying sign up successful we now want to link them or redirect them to the logged in page

273
00:27:21.320 --> 00:27:22.490
wonderful.

274
00:27:23.080 --> 00:27:33.250
So let's sign up Roback Rob dot com and we'll try a permanent sign up see how that goes.

275
00:27:33.250 --> 00:27:33.900
There we go.

276
00:27:33.910 --> 00:27:39.520
So we've redirected and it clearly knows that we're locked in because it's displaying the locked in

277
00:27:39.520 --> 00:27:40.660
message.

278
00:27:40.660 --> 00:27:42.960
So let's click logout.

279
00:27:43.030 --> 00:27:49.680
Excellent that links us back to the home page with logout is equal to 1.

280
00:27:49.740 --> 00:27:58.180
So all that remains for that bit is to log the user out and we'll do this right here.

281
00:27:59.500 --> 00:28:00.290
So if

282
00:28:03.940 --> 00:28:18.830
a key exists and then we're looking for the logout key just going to check that yet the log out key

283
00:28:20.900 --> 00:28:23.680
within the get it right.

284
00:28:24.740 --> 00:28:27.860
And if that exists then we want to look these are out.

285
00:28:27.860 --> 00:28:29.380
So we'll unset

286
00:28:31.950 --> 00:28:39.060
the session we'll set the cookie into the past

287
00:28:45.420 --> 00:28:51.330
time minus 60 times 60.

288
00:28:52.010 --> 00:28:55.490
And I like to just

289
00:28:58.470 --> 00:28:59.610
set the cookie

290
00:29:02.310 --> 00:29:06.600
to an empty string just in case it gets accessed later on.

291
00:29:06.600 --> 00:29:09.040
Not that it should.

292
00:29:09.330 --> 00:29:15.900
Remember it takes an extra refresh for the cookie variable to actually be destroyed and then we'll add

293
00:29:15.900 --> 00:29:26.280
in here that if they're not logging out we'll have a check to see if they are logged in because we don't

294
00:29:26.280 --> 00:29:29.600
want them seeing the log in form if they're already logged in.

295
00:29:29.610 --> 00:29:30.390
So if

296
00:29:34.920 --> 00:29:43.070
the right key exists ID session

297
00:29:46.340 --> 00:29:46.800
call

298
00:29:50.070 --> 00:29:53.730
right key exists.

299
00:29:55.500 --> 00:29:56.040
Id

300
00:29:58.620 --> 00:29:59.010
cookie

301
00:30:09.590 --> 00:30:23.800
then will redirect them to the logged in page.

302
00:30:23.810 --> 00:30:24.890
All right.

303
00:30:24.890 --> 00:30:26.560
So if we sign up now.

304
00:30:32.850 --> 00:30:39.380
With a cookie then we redirect over to the logged in page.

305
00:30:39.380 --> 00:30:46.870
If we attempt to go back to the home page then it just redirects us back to the logging logged in page.

306
00:30:47.420 --> 00:30:53.860
But if we log out and we're now properly logged out and it doesn't do the redirect.

307
00:30:53.990 --> 00:30:54.490
Brilliant.

308
00:30:54.650 --> 00:30:57.260
So this is now set up more or less as we want.

309
00:30:57.260 --> 00:31:00.190
The one thing that we're missing is a log in form.

310
00:31:00.410 --> 00:31:08.670
So let's add that down here and that's going to look very much like the sign up form and it's going

311
00:31:08.670 --> 00:31:11.500
to behave very much like it as well.

312
00:31:11.520 --> 00:31:12.510
The difference is

313
00:31:16.560 --> 00:31:22.290
we're going to have a log in value instead of sign up.

314
00:31:22.440 --> 00:31:23.530
There we go.

315
00:31:23.550 --> 00:31:31.200
Now one thing we're going to need to do up here when we're doing our post is to know whether we're attempting

316
00:31:31.200 --> 00:31:33.810
to sign the user up or log them in.

317
00:31:33.810 --> 00:31:39.450
Now one way we could do it is to look at the value of the submit variable but that's not very neat because

318
00:31:39.450 --> 00:31:44.160
we might want to change the word sign up to register or something like that.

319
00:31:44.200 --> 00:31:50.360
We don't want to have to update our code to take account of a change in the look of the Web site.

320
00:31:50.910 --> 00:31:57.060
So what I'm going to work with that is to have a hidden variable

321
00:32:00.160 --> 00:32:04.030
which is just an input that doesn't display on the HDMI at all.

322
00:32:04.030 --> 00:32:06.720
But we can use it in our code.

323
00:32:06.880 --> 00:32:08.530
So that's going to have a name of

324
00:32:12.550 --> 00:32:22.030
sign up and a value of one and then down here.

325
00:32:24.780 --> 00:32:30.030
We're going to have exactly the same thing but sign up is going to have a value of Siri because we're

326
00:32:30.030 --> 00:32:34.080
looking at OK.

327
00:32:34.640 --> 00:32:37.020
So let's see what we need to change.

328
00:32:37.220 --> 00:32:43.640
Logging in that we still want to do the database connection obviously we still want to check to see

329
00:32:43.640 --> 00:32:49.610
if there's an email we still want to check if there's a password so we can leave those parts in.

330
00:32:50.110 --> 00:32:52.450
But this part here is going to be different.

331
00:32:53.350 --> 00:32:58.790
Site I'm going to split this all up.

332
00:32:59.680 --> 00:33:01.690
So we're now checking to see if

333
00:33:05.970 --> 00:33:07.380
post sign up.

334
00:33:07.380 --> 00:33:08.600
Just make sure I've put that right.

335
00:33:08.610 --> 00:33:09.080
Yep.

336
00:33:12.490 --> 00:33:14.540
Is equal to one.

337
00:33:14.920 --> 00:33:23.500
Then we're going to do all of this Sign-Up stuff and just make it bigger so we can see what's going

338
00:33:23.500 --> 00:33:24.020
on.

339
00:33:27.580 --> 00:33:31.690
And you can see we've got a handy green market there.

340
00:33:32.150 --> 00:33:36.290
So that's the end of the sign up section.

341
00:33:42.180 --> 00:33:45.000
So I'm going to put that fair and else

342
00:33:48.110 --> 00:33:49.610
I'm for now I'll just put

343
00:33:52.490 --> 00:33:55.610
logging in because I want to check that I've done that correctly.

344
00:33:56.240 --> 00:33:58.100
So that should do all of this.

345
00:33:58.340 --> 00:34:04.940
If it's a sign up and if not we'll get a message saying logging in

346
00:34:08.940 --> 00:34:10.430
OK.

347
00:34:10.600 --> 00:34:12.640
I think that's probably because I've put this

348
00:34:15.340 --> 00:34:17.680
in the wrong place.

349
00:34:18.230 --> 00:34:22.490
Think you should probably be that one.

350
00:34:22.840 --> 00:34:24.390
Curly brackets down there.

351
00:34:24.460 --> 00:34:25.370
Easily them.

352
00:34:25.570 --> 00:34:33.380
So let's just check that's the form validation is working on the log in excellent.

353
00:34:33.390 --> 00:34:34.800
Yep that's looking promising.

354
00:34:39.210 --> 00:34:39.720
And then

355
00:34:43.780 --> 00:34:46.540
that's day a full logon.

356
00:34:46.550 --> 00:34:47.390
Great.

357
00:34:47.420 --> 00:34:49.420
So it's going to the right bit of the script.

358
00:34:51.680 --> 00:34:54.180
And let's just make sure that we've got

359
00:34:58.030 --> 00:35:00.050
the variables that we need.

360
00:35:00.140 --> 00:35:06.870
Just last page last parse out the way let's resubmit that.

361
00:35:07.510 --> 00:35:07.960
Great.

362
00:35:07.960 --> 00:35:15.570
So we've got our e-mail and we've got our password so we're going to need to do a query to see if the

363
00:35:15.570 --> 00:35:18.750
users got a username and password correct.

364
00:35:21.010 --> 00:35:23.330
So let's set up a query.

365
00:35:27.240 --> 00:35:39.690
So we want to select ID from our users table where and we want e-mail to be equal to a

366
00:35:42.700 --> 00:35:43.290
Eskew.

367
00:35:43.370 --> 00:35:59.880
I real escape string Don't forget the link and the posted e-mail and that's it for now note.

368
00:35:59.880 --> 00:36:04.980
We can check the password at this point because we don't know the idea of the user and therefore we

369
00:36:04.980 --> 00:36:09.480
don't know the sold to our password hashing.

370
00:36:10.260 --> 00:36:17.780
So we need to get the e-mail check the e-mail first and then let's get the query

371
00:36:25.730 --> 00:36:28.220
link and query

372
00:36:32.000 --> 00:36:32.660
and then

373
00:36:35.380 --> 00:36:36.800
we'll set.

374
00:36:37.640 --> 00:36:42.730
He will say my secure ally fetch her right.

375
00:36:45.720 --> 00:36:46.760
The result

376
00:36:49.970 --> 00:37:02.280
and then we're checking to see if the right key exists and that's the ID field in the row right.

377
00:37:04.890 --> 00:37:14.800
And if it does create it could hashed password which is going to be empty five

378
00:37:18.160 --> 00:37:29.190
and then we're going to empty five day road Id.

379
00:37:29.340 --> 00:37:39.990
Combine that with the password that the user has printed and that will be our entered hash password.

380
00:37:39.990 --> 00:37:48.660
And in fact I'm going to change that to a select store select everything because then we can just check

381
00:37:50.160 --> 00:38:00.420
if ashed password is equal to the saved password in the database.

382
00:38:04.490 --> 00:38:12.950
So if it is then we want to set the session id to the right ID

383
00:38:17.230 --> 00:38:22.520
and we also want to set the cookie if necessary and redirect.

384
00:38:22.560 --> 00:38:28.700
Now I probably should put that in a separate function because I'm using it twice but I'm going to be

385
00:38:28.700 --> 00:38:29.960
a bit lazy here.

386
00:38:30.360 --> 00:38:34.580
Got a lot of new stuff and I think it's probably slightly simpler to just have this

387
00:38:39.320 --> 00:38:41.660
code twice for now.

388
00:38:42.170 --> 00:38:47.280
So if state logging is equal to one the must have the ID of the cookie.

389
00:38:47.480 --> 00:38:59.220
Not to my secure ally insert ID but the Road ID and then will do the redirect.

390
00:38:59.240 --> 00:38:59.970
All right.

391
00:39:00.010 --> 00:39:02.110
So that was quite a lot of new stuff then.

392
00:39:04.150 --> 00:39:05.870
I haven't broken anything.

393
00:39:05.930 --> 00:39:09.250
No script still works at least.

394
00:39:09.250 --> 00:39:10.970
So let's sign up first.

395
00:39:10.990 --> 00:39:18.390
So we have SDF at ISEF to come and a password of a SDF sign up that still works great.

396
00:39:18.550 --> 00:39:24.460
Then log out and then log in with the same details.

397
00:39:26.160 --> 00:39:27.020
Excellent.

398
00:39:27.470 --> 00:39:30.020
So that log in has worked.

399
00:39:30.380 --> 00:39:37.530
Let's just make sure that if we log in with them with an incorrect e-mail address for example that should

400
00:39:37.530 --> 00:39:38.660
not work.

401
00:39:39.510 --> 00:39:42.330
Well it hasn't worked which is good but we do have a warning.

402
00:39:42.330 --> 00:39:44.700
So let's just fix that line 95.

403
00:39:44.700 --> 00:39:45.690
Let's have a look.

404
00:39:47.740 --> 00:39:48.550
OK.

405
00:39:49.070 --> 00:39:52.210
So because the right doesn't exist.

406
00:39:52.310 --> 00:39:55.720
Checking for key within it doesn't really make sense.

407
00:39:55.790 --> 00:40:08.800
So let's used if is set instead and that we'll check to see if the right array exists at all and that

408
00:40:08.820 --> 00:40:16.810
then you should avoid that message which it does but that has reminded me that we have to add an error

409
00:40:16.810 --> 00:40:22.690
message and say if it doesn't we'll set the error.

410
00:40:22.690 --> 00:40:23.050
See

411
00:40:25.990 --> 00:40:29.410
that e-mail slash password combination

412
00:40:33.400 --> 00:40:34.860
could not be found.

413
00:40:37.700 --> 00:40:39.280
And don't forget the Sammy Kellum

414
00:40:42.310 --> 00:40:43.130
resubmit.

415
00:40:43.130 --> 00:40:44.360
Excellent.

416
00:40:44.390 --> 00:40:52.550
And if we get the e-mail address right password wrong then it doesn't know because then which is good

417
00:40:52.580 --> 00:40:54.820
but we don't have an error message.

418
00:40:55.130 --> 00:40:57.580
So that should go that

419
00:41:02.370 --> 00:41:06.350
well again I don't quite like having that message twice.

420
00:41:10.440 --> 00:41:15.040
But I think putting in the code to combine it into one is not quite worth it.

421
00:41:15.450 --> 00:41:20.940
And we'll just make this rather unnecessarily more complicated than it needs to be.

422
00:41:20.940 --> 00:41:22.340
So let's just check.

423
00:41:22.740 --> 00:41:25.130
We now have a message.

424
00:41:25.200 --> 00:41:26.040
Fantastic.

425
00:41:26.310 --> 00:41:28.490
So that's as far as I'm going to go in this video.

426
00:41:28.650 --> 00:41:34.920
What you have here is a solid and secure sign in system that you can use on any Web site.

427
00:41:34.920 --> 00:41:38.600
There's nothing specific to Secret Diary other than the database name

428
00:41:41.500 --> 00:41:44.210
and that of course you would change anyway.

429
00:41:44.680 --> 00:41:50.710
So that's a really good general purpose bit of code and it forms a solid basis for our secret diary

430
00:41:50.950 --> 00:41:52.750
web app as well.

431
00:41:52.750 --> 00:41:53.290
All right.

432
00:41:53.530 --> 00:41:57.980
So we'll stop and we'll carry straight on with our secret diary web app.

433
00:41:58.090 --> 00:42:00.760
In the next video actually just before we move on.

434
00:42:00.760 --> 00:42:04.040
There is one thing I want to clarify here.

435
00:42:04.070 --> 00:42:13.600
And one issue that we've got with the set up as it stands and that is if we look ourselves in let's

436
00:42:13.600 --> 00:42:20.140
just create a new account and then log out.

437
00:42:20.150 --> 00:42:21.380
That all works fine.

438
00:42:21.590 --> 00:42:30.170
But if we then go back to index or page without the logout get variable then it actually still thinks

439
00:42:30.170 --> 00:42:31.940
we're logged in.

440
00:42:31.940 --> 00:42:39.110
And that's because of the delay of unsetting the session and setting the cookie backwards as well.

441
00:42:39.110 --> 00:42:47.240
So the array key exists even though the actual variable itself doesn't have a value or its value is

442
00:42:47.330 --> 00:42:48.110
zero.

443
00:42:48.350 --> 00:42:54.650
So I'm going to fix that by adding an extra couple of bits to the if statement because what I want to

444
00:42:54.650 --> 00:43:04.630
avoid doing is just if I get rid of that temporarily I want to avoid doing that because even though

445
00:43:04.630 --> 00:43:11.140
that will work it will give me a warning and I want to avoid the warnings because if that doesn't exist

446
00:43:11.400 --> 00:43:16.240
then I'm assuming that it exists by doing this by doing the check on it.

447
00:43:16.240 --> 00:43:19.240
So what I'm going to do is check for both

448
00:43:22.410 --> 00:43:30.840
the Araik the existing and the ID actually having a value or

449
00:43:34.350 --> 00:43:35.680
the cookie existing

450
00:43:41.130 --> 00:43:44.370
and the cookie having a value

451
00:43:47.700 --> 00:43:56.530
and that gets around a problem because if the array key for the session variable doesn't exist then

452
00:43:56.530 --> 00:44:01.130
it won't do the check on session ID so we won't get an error.

453
00:44:01.150 --> 00:44:08.000
And similarly for the cookie if there Reiki doesn't exist it won't do the check on the cookie itself.

454
00:44:08.290 --> 00:44:12.270
So that avoids the false redirect problem.

455
00:44:12.570 --> 00:44:17.190
But without giving us a warning.

456
00:44:17.550 --> 00:44:20.950
So now you can say we're not being redirected.

457
00:44:20.950 --> 00:44:21.630
All right.

458
00:44:21.640 --> 00:44:22.860
On with the secret diary.
