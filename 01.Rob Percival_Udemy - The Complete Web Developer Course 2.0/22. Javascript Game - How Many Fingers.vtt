WEBVTT
1
00:00:00.490 --> 00:00:05.220
Or answer in this video we're going to have a little bit of fun with IF statements and create this very

2
00:00:05.220 --> 00:00:09.990
simple game where we simulate the age old game of how many fingers in my holding up.

3
00:00:09.990 --> 00:00:13.560
So it's going to look like this will last These are how many fingers am I holding up.

4
00:00:13.590 --> 00:00:17.390
And they simply have to guess a number between 0 and 5.

5
00:00:17.430 --> 00:00:22.700
So if I guess for for example oh I get it wrong the number was 0.

6
00:00:23.280 --> 00:00:27.140
If I get two on the next one no the number was five.

7
00:00:27.270 --> 00:00:28.790
You get the idea.

8
00:00:30.300 --> 00:00:31.560
I'll just do one more guess.

9
00:00:31.630 --> 00:00:32.820
Nope wrong again.

10
00:00:33.030 --> 00:00:33.900
Oh well.

11
00:00:34.500 --> 00:00:36.170
So this is what we're creating.

12
00:00:36.390 --> 00:00:41.580
And as you may notice there's one fairly crucial new bit of code that we need that we haven't covered

13
00:00:41.580 --> 00:00:44.010
yet and that is random numbers.

14
00:00:44.010 --> 00:00:49.320
We haven't seen how we can generate a random number with javascript but I'm going to set that as a bit

15
00:00:49.320 --> 00:00:49.830
of a challenge.

16
00:00:49.830 --> 00:00:53.790
So if you're feeling confident then just have a google and see if you can work out how you create a

17
00:00:53.790 --> 00:00:57.590
random number which is 0 1 2 3 4 5.

18
00:00:57.630 --> 00:00:59.550
The information is already there.

19
00:00:59.880 --> 00:01:04.350
And as I've said before the art of coding is really about 80 percent picking stuff up on Google.

20
00:01:04.380 --> 00:01:07.340
So you might as well get used to it early on in the process.

21
00:01:07.350 --> 00:01:11.550
Don't worry though if you can't find the information or can't quite make it work I'll explain that at

22
00:01:11.550 --> 00:01:16.060
the beginning of the process as I go through making up the game.

23
00:01:16.080 --> 00:01:23.810
So best of luck here because well.

24
00:01:23.960 --> 00:01:24.590
All right.

25
00:01:24.590 --> 00:01:26.150
Did you manage it.

26
00:01:26.150 --> 00:01:30.040
I'm going to start by just taking us down to

27
00:01:32.890 --> 00:01:38.650
a basic code structure so we can start from scratch.

28
00:01:39.500 --> 00:01:43.560
So let's start by looking at that random number generator that I mentioned.

29
00:01:43.580 --> 00:01:49.800
What we want is a random number between 0 and 5 to represent the number of fingers that the computer's

30
00:01:49.830 --> 00:01:52.630
imaginary hand might be holding up.

31
00:01:52.970 --> 00:02:04.280
So let's do a little Google javascript's random number zero to five something like that because it's

32
00:02:04.280 --> 00:02:11.100
such a general query we might even be able to have something as specific as between 0 and 5.

33
00:02:11.120 --> 00:02:14.860
So here we go generating random numbers in Javascript in a specific range.

34
00:02:14.870 --> 00:02:18.430
That sounds perfect good old stack overflow.

35
00:02:18.470 --> 00:02:22.790
So how can I generate a random hole number between two specified values in javascript.

36
00:02:22.790 --> 00:02:23.870
Perfect.

37
00:02:23.870 --> 00:02:24.750
Let's have a look.

38
00:02:26.800 --> 00:02:31.000
Now that looks like a great answer but it's using functions and returning and we haven't seen anything

39
00:02:31.000 --> 00:02:31.940
like that yet.

40
00:02:32.080 --> 00:02:37.560
So I'm going to ignore that one and see if we can find a simpler example.

41
00:02:37.690 --> 00:02:40.580
No not really.

42
00:02:40.940 --> 00:02:43.640
Still got functions here.

43
00:02:45.290 --> 00:02:46.080
OK.

44
00:02:46.170 --> 00:02:51.970
Now this is looking good so this code should return a random number between 1 and 10.

45
00:02:52.020 --> 00:02:55.030
Let's see if we can break it up and see what's going on.

46
00:02:55.080 --> 00:03:02.130
I think the key command here is this math dot random if only seems to be generating a random number.

47
00:03:02.130 --> 00:03:07.200
So why not take that bit of the code math don't random with the parentheses because it's a function

48
00:03:07.230 --> 00:03:10.500
that's going to need those and just see what happens.

49
00:03:11.830 --> 00:03:17.700
When we run it it looks like it's going to generate some sort of random number.

50
00:03:17.740 --> 00:03:22.840
So for now let's just alert it and see what we get right.

51
00:03:22.870 --> 00:03:24.620
No point 4 8.

52
00:03:24.920 --> 00:03:28.380
It's run it again no point 1 4 right.

53
00:03:29.150 --> 00:03:31.860
OK I think I get the idea.

54
00:03:32.050 --> 00:03:41.210
I think what this is doing is generating a random number between 0 and 1 and I could verify that if

55
00:03:41.210 --> 00:03:47.060
I wanted by just googling the math random function and seeing what information I could get about it.

56
00:03:47.090 --> 00:03:53.840
So if this is generating a random number between 0 and 1 and I want a random number between 0 and 5

57
00:03:54.620 --> 00:04:02.090
I probably just want to take this and multiply it by five and we do that in javascript using the asterisk

58
00:04:02.090 --> 00:04:04.460
or shift 8 on my keyboard.

59
00:04:04.460 --> 00:04:07.650
And then the number that we want to multiply by.

60
00:04:07.750 --> 00:04:10.830
So this will create a random number between 0 1.

61
00:04:10.940 --> 00:04:13.160
Multiply it by five.

62
00:04:13.160 --> 00:04:17.390
So that will give us a bigger random number between 0 and 5.

63
00:04:17.390 --> 00:04:24.050
So two and a half 1.2 4.1 3.4.

64
00:04:24.190 --> 00:04:27.670
We're getting the idea this is looking good.

65
00:04:27.670 --> 00:04:32.860
The only problem we have so far is that this is a very precise random number and it's unlikely the user

66
00:04:32.860 --> 00:04:34.510
is going to be able to get it.

67
00:04:34.510 --> 00:04:41.650
So what we want to do is get a whole number out of that and going back to our stack overflow answer

68
00:04:41.650 --> 00:04:42.270
here.

69
00:04:42.430 --> 00:04:47.490
This math top floor function looks like it does exactly that.

70
00:04:47.560 --> 00:04:49.380
If I wanted I could look up that function.

71
00:04:49.510 --> 00:04:52.630
But what I'd rather do is just try it out and see what happens.

72
00:04:54.030 --> 00:05:06.400
So math don't flow and let's apply that to all of this and now run it.

73
00:05:06.410 --> 00:05:08.230
I've got an error of some thought.

74
00:05:08.640 --> 00:05:13.340
That's because I need a second bracket at the end there.

75
00:05:14.180 --> 00:05:20.540
OK so now I've got 1 0 4 0.

76
00:05:20.540 --> 00:05:22.560
This is looking good.

77
00:05:23.440 --> 00:05:24.350
OK.

78
00:05:24.740 --> 00:05:32.060
So what it's looking like is that this floor function essentially gets rid of the decimal point.

79
00:05:32.060 --> 00:05:36.460
So if you've got three point five to one then that will give you three.

80
00:05:36.590 --> 00:05:42.260
And again I could check that with a quick google if I wanted to.

81
00:05:42.270 --> 00:05:44.040
So this is looking very good.

82
00:05:44.040 --> 00:05:49.620
The only issue is what we're never going to get out of this is the number five

83
00:05:52.830 --> 00:05:58.290
because the biggest that we're going to get from our math random times five is five.

84
00:05:58.680 --> 00:06:01.590
And even that is extremely unlikely that we get exactly five.

85
00:06:01.590 --> 00:06:08.820
So if we want to get a random number between 0 and 5 we need to change this two times by six.

86
00:06:09.210 --> 00:06:16.860
And then the random number will go between 0 and 6 and then the math floor will take it down to between

87
00:06:16.860 --> 00:06:19.860
0 1 2 3 4 and 5

88
00:06:23.410 --> 00:06:28.150
so that's as far as I think you need to go on the explanation of how we generate our random number.

89
00:06:28.150 --> 00:06:33.510
Now I'm going to give you the opportunity to create the game using code that you are familiar with.

90
00:06:33.550 --> 00:06:39.380
Good luck.

91
00:06:39.390 --> 00:06:40.210
All right.

92
00:06:40.560 --> 00:06:41.850
Hey we got them.

93
00:06:41.880 --> 00:06:48.360
Let's go from the start and let's start with the HVM so that we know what our page is going to look

94
00:06:48.360 --> 00:06:49.450
like.

95
00:06:50.370 --> 00:06:59.710
So I'm going to start with a paragraph asking the user how many fingers am I holding up.

96
00:06:59.790 --> 00:07:03.540
So you might want to add a bit more information there just to clarify that essentially are guessing

97
00:07:03.540 --> 00:07:06.030
a random number between 0 and 5.

98
00:07:06.310 --> 00:07:08.700
But I'll just leave it at that.

99
00:07:08.900 --> 00:07:24.530
Then we're going to have on the next line and input with a type of text and an ID of guess because this

100
00:07:24.530 --> 00:07:28.720
is going to be where the use of guesses and then straight after that I'll put my button

101
00:07:31.490 --> 00:07:38.650
with an ID of check guess cause that's what we're going to do when the button is clicked.

102
00:07:42.420 --> 00:07:46.350
And then I guess let's have it with a capital G.

103
00:07:48.760 --> 00:07:50.020
All right let's have a look.

104
00:07:50.140 --> 00:07:50.480
OK.

105
00:07:50.500 --> 00:07:51.790
Yep that looks good to me.

106
00:07:51.790 --> 00:07:58.200
So the user is going to tap in there guess four and then click that button to see if they're right.

107
00:07:58.900 --> 00:07:59.740
OK.

108
00:08:00.010 --> 00:08:01.120
So now we've done the content.

109
00:08:01.120 --> 00:08:03.300
It's time for some of the logic.

110
00:08:03.300 --> 00:08:06.290
So again we want this logic to happen when the button is pressed.

111
00:08:06.310 --> 00:08:10.840
So we're going to start by setting our own click for our button.

112
00:08:10.930 --> 00:08:18.460
So we've got document don't get element by ID as we're very used to the idea is check guess to get the

113
00:08:18.460 --> 00:08:28.190
button and then we want to set on a click to a function that will create in Cali brackets.

114
00:08:29.290 --> 00:08:35.130
And as usual I'll just check that everything set up OK.

115
00:08:35.860 --> 00:08:36.940
Yes.

116
00:08:41.250 --> 00:08:41.910
All right.

117
00:08:41.910 --> 00:08:44.980
So let's start by generating a random number.

118
00:08:45.660 --> 00:08:55.050
I'm going to create a variable to contain it and I'll call it random number and I could create it all

119
00:08:55.050 --> 00:08:55.830
in one go.

120
00:08:55.920 --> 00:09:00.060
But then we get that sort of slightly confusing code that looks like this.

121
00:09:00.270 --> 00:09:03.330
And I don't really want something like that I want something a little bit clearer.

122
00:09:03.480 --> 00:09:05.530
So I'm going to create it step by step.

123
00:09:05.640 --> 00:09:11.010
Starting off by just doing math dot random.

124
00:09:11.080 --> 00:09:16.890
So so for a random number is anything between 0 and 1.

125
00:09:16.900 --> 00:09:21.300
So first off I want to make it between 0 and 6.

126
00:09:21.370 --> 00:09:29.480
So what I do is I take random number and I said it equal to whatever it was before multiplied by six

127
00:09:30.580 --> 00:09:33.050
as we saw a few moments ago.

128
00:09:33.580 --> 00:09:37.310
So now we've got a random number between 0 and 6.

129
00:09:37.420 --> 00:09:45.080
We want to make that into a whole number between 0 and 5 and we use the math floor function for that.

130
00:09:45.100 --> 00:09:54.360
So now we take random number again and we said equal to a math dot flaw random number.

131
00:09:55.030 --> 00:09:57.640
So if it's five point three it will become five.

132
00:09:57.640 --> 00:10:00.730
If it's not point eight nine it will become 0.

133
00:10:02.600 --> 00:10:06.820
So now we've got our random number in a format that we wanted.

134
00:10:07.700 --> 00:10:14.550
So now it's just a matter of checking to see whether the guess is the same as our answer.

135
00:10:14.630 --> 00:10:17.060
So let's find out if

136
00:10:20.320 --> 00:10:21.390
they guess.

137
00:10:21.430 --> 00:10:32.370
So that is documents to get element by id and the ID is guess and then we want to get the value of the

138
00:10:32.370 --> 00:10:33.180
input.

139
00:10:35.110 --> 00:10:37.900
So if that is equal to a random number

140
00:10:41.790 --> 00:10:49.790
then we'll get well done you've got something like that

141
00:10:56.440 --> 00:10:57.590
and if it's not

142
00:11:00.050 --> 00:11:01.360
then we'll alert

143
00:11:05.920 --> 00:11:12.710
Nope and we'll tell the user what it was that they feel like we're not just lying to them.

144
00:11:13.010 --> 00:11:20.540
The number was and then hopefully you'll remember from a few videos ago when we concatenated our strings

145
00:11:20.570 --> 00:11:29.510
or put them together and we're going to put random number on the end of that.

146
00:11:29.790 --> 00:11:34.560
So that would say Nope the number was and then it will display whatever the random number was.

147
00:11:35.340 --> 00:11:36.220
All right.

148
00:11:36.420 --> 00:11:39.240
Let's take a look at how it should work in its current form.

149
00:11:39.650 --> 00:11:41.930
So I'm going to guess three.

150
00:11:42.030 --> 00:11:43.290
Surprisingly enough I got it wrong.

151
00:11:43.290 --> 00:11:44.940
The number was five.

152
00:11:44.970 --> 00:11:47.520
I'm going to keep guessing three until I get it right.

153
00:11:47.520 --> 00:11:49.080
Nope the number with two.

154
00:11:49.620 --> 00:11:50.240
No.

155
00:11:50.250 --> 00:11:52.500
The number was one night.

156
00:11:52.530 --> 00:11:56.540
The number was 4 9 0.

157
00:11:57.060 --> 00:12:03.390
Well we could be here for a while so yeah this is not the best game that anyone's ever made.

158
00:12:06.960 --> 00:12:09.100
Gosh I'm unlucky.

159
00:12:09.350 --> 00:12:12.040
Hey I got there in the end.

160
00:12:12.160 --> 00:12:13.010
Brilliant.

161
00:12:13.460 --> 00:12:17.280
So I hope you manage to make that more or less by yourself.

162
00:12:17.290 --> 00:12:20.850
There's obviously quite a few ways you could take this to make it a bit more interesting.

163
00:12:20.870 --> 00:12:25.100
So just to give you a few ideas if you want to experiment at the moment we're generating a random number

164
00:12:25.130 --> 00:12:27.770
each time so the user only has one guess.

165
00:12:27.980 --> 00:12:33.530
But what you could do is generate the random number at the beginning when the page is loaded and then

166
00:12:33.620 --> 00:12:37.070
allow the user to have several guesses just for that random number.

167
00:12:37.140 --> 00:12:41.310
And then we challenge of how many guesses it would take to get there.

168
00:12:41.480 --> 00:12:45.240
You could even use the greater or less then signs.

169
00:12:45.290 --> 00:12:53.720
That is signs that look like that greater than that less than to tell the user whether they're too high

170
00:12:54.200 --> 00:12:56.260
or too low.

171
00:12:56.390 --> 00:12:59.920
That would be a great challenge and make the game quite a bit more interesting as well.

172
00:13:00.020 --> 00:13:04.010
But I will leave those challenges to you and we will move on in the next video too.

173
00:13:04.130 --> 00:13:10.850
The second most important by affecting the logic or flow of our program and that is loop's.
