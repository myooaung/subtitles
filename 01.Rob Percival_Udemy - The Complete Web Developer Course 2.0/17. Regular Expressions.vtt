WEBVTT
1
00:00:00.690 --> 00:00:05.250
All right we've done a lot of work with Jay equerry now but we haven't had a big challenge yet so we're

2
00:00:05.250 --> 00:00:11.310
going to have that in the next video where we'll be building a form validation system which checks whether

3
00:00:11.310 --> 00:00:16.830
the user has entered a valid email address for example whether the password is complicated enough and

4
00:00:16.830 --> 00:00:21.650
whether the various other fields in the form have met the standards that we need.

5
00:00:21.660 --> 00:00:26.280
That's a really useful thing to be able to do for our Sign-Up forms or any form really where we need

6
00:00:26.280 --> 00:00:30.890
the data to be in a certain format in order to use it in our system.

7
00:00:31.290 --> 00:00:37.170
So to do form validation we need to learn another topic which like Ajax is something that a lot of people

8
00:00:37.170 --> 00:00:40.800
find a bit mysterious and confusing but it's really not.

9
00:00:40.800 --> 00:00:46.230
Once you get to grips with it and that is regular expressions to regular expressions are really just

10
00:00:46.230 --> 00:00:50.620
a way to check the format or the content of a string.

11
00:00:50.700 --> 00:00:55.200
So we could check that it has a number in it for example or that it looks like a date or that it's a

12
00:00:55.200 --> 00:00:59.710
password with a certain level of complexity or an email address or anything else.

13
00:01:00.000 --> 00:01:02.000
So let's get started.

14
00:01:02.040 --> 00:01:14.070
First off I'm going to move back to my local version of Jake reread I Tim El and it just makes things

15
00:01:14.100 --> 00:01:15.120
a little bit faster.

16
00:01:15.300 --> 00:01:18.030
And projects will work fine on your local machine.

17
00:01:21.000 --> 00:01:21.440
OK.

18
00:01:21.460 --> 00:01:27.860
So let's get rid of the content because we're working on a query for the moment.

19
00:01:27.860 --> 00:01:29.410
So how does this work.

20
00:01:29.870 --> 00:01:42.070
Well first off we define our regular expression or our rejects and usually it's defined with slashes.

21
00:01:42.900 --> 00:01:51.450
So if for example I wanted to check for the word is in another string then I would put it between two

22
00:01:51.630 --> 00:01:54.090
slashes like that.

23
00:01:54.090 --> 00:01:59.400
And that tells javascript in this case actually there's nothing very specific about that line that this

24
00:01:59.400 --> 00:02:08.990
is a regexp that we can then use to match against some other string So let's then create our string.

25
00:02:09.060 --> 00:02:13.560
I'm going to optimistically right rejects is great.

26
00:02:13.560 --> 00:02:17.570
You might not believe it yet but you will very soon.

27
00:02:17.580 --> 00:02:24.340
And then what I need to do if I want to match these up is I use the query match function.

28
00:02:24.720 --> 00:02:30.940
And again this is something that you can do with javascript but it's a lot easier to do with Jake rary.

29
00:02:30.990 --> 00:02:34.340
So let's create our results.

30
00:02:34.350 --> 00:02:37.710
That's just in the variable.

31
00:02:37.890 --> 00:02:46.110
And to get that we start off with a string and then we apply the match function to it and the match

32
00:02:46.110 --> 00:02:52.680
function takes one parameter or variable and that's the rejects.

33
00:02:52.740 --> 00:02:54.660
So the expression.

34
00:02:54.930 --> 00:03:02.790
So what this means is match the string rejects is great according to the regexp variable.

35
00:03:02.820 --> 00:03:04.870
Slash is slash.

36
00:03:05.070 --> 00:03:11.880
What it means in English is does the word is appear in the string rejects is great.

37
00:03:11.880 --> 00:03:19.970
We obviously know the answer is yes but it's nice to know that our computer can work it out as well.

38
00:03:20.220 --> 00:03:21.460
So let's have a look.

39
00:03:24.270 --> 00:03:28.120
It's so it doesn't return quite true or false.

40
00:03:28.310 --> 00:03:30.130
It returns what it finds.

41
00:03:30.300 --> 00:03:35.650
And that is is it searches for is inside a string and it finds it.

42
00:03:35.670 --> 00:03:39.560
So it returns it if we add a couple of letters on the end there.

43
00:03:39.570 --> 00:03:45.260
So it's no longer part of our string and it returns no.

44
00:03:45.270 --> 00:03:50.390
So that means that this regex is not matched with this string.

45
00:03:50.400 --> 00:03:51.890
We can do a little bit more.

46
00:03:52.260 --> 00:03:55.760
In fact we knew a lot more but I'm just going to show you a couple of extra things here.

47
00:03:56.220 --> 00:04:06.930
If we search with a capital G by default that will return no because capital G REIT does not feature

48
00:04:06.930 --> 00:04:08.020
in this string.

49
00:04:08.040 --> 00:04:14.100
But if we wanted to do a case insensitive search we would just pop an eye flag at the end there.

50
00:04:14.130 --> 00:04:22.430
So after the second slash and that will then do a case insensitive search which will return great.

51
00:04:22.500 --> 00:04:30.510
And of course if we had we could put capital in a capital T for some reason then that would still match

52
00:04:30.690 --> 00:04:33.940
but it would return G R E A T.

53
00:04:33.990 --> 00:04:38.200
So it would return exactly what's in the string.

54
00:04:38.220 --> 00:04:41.690
Finally we can also look for things that appear in the

55
00:04:44.810 --> 00:04:47.110
string more than once.

56
00:04:47.330 --> 00:04:55.150
So the letter E for example if we just run it as it is then it will return a single A.

57
00:04:55.460 --> 00:05:03.260
So it will say yes he is present in the string but we might want to know about every time that he appears

58
00:05:03.260 --> 00:05:05.830
in the string or at least how many times it does.

59
00:05:06.080 --> 00:05:09.960
And if we want to do that we use the slash G for global.

60
00:05:10.150 --> 00:05:11.750
So the global flag.

61
00:05:11.750 --> 00:05:17.390
And that will then return every instance of this rejects in the string.

62
00:05:17.420 --> 00:05:18.290
Take a look.

63
00:05:18.340 --> 00:05:19.150
There we go.

64
00:05:19.520 --> 00:05:22.490
That's essentially a little array of E's.

65
00:05:22.550 --> 00:05:28.290
Every time we got a match between our string and our rejects.

66
00:05:28.340 --> 00:05:32.630
So that's the basics of it rejects is extremely powerful and there's a lot more settings.

67
00:05:32.650 --> 00:05:35.910
We've gone through that but we'll cover many more of those.

68
00:05:35.970 --> 00:05:38.460
Now Jay queery challenge in the next video.

69
00:05:38.510 --> 00:05:41.370
Are we making a form validation system.
