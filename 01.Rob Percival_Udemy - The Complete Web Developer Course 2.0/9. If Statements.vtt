WEBVTT
1
00:00:01.040 --> 00:00:05.780
Now we've seen if statements before in the javascript section of the course so I won't labor them too

2
00:00:05.780 --> 00:00:06.530
much here.

3
00:00:06.680 --> 00:00:13.840
But there are some slight differences in THP which we'll look at right now.

4
00:00:14.110 --> 00:00:18.190
So it ph pay to run an if statement as I say it's pretty similar to javascript.

5
00:00:18.220 --> 00:00:24.980
We start off with f and we put the statement that we want to check whether or not it's true.

6
00:00:25.270 --> 00:00:25.990
In brackets.

7
00:00:26.020 --> 00:00:34.090
And then we put our code up we want to happen if it is true in curly brackets as we used to say for

8
00:00:34.090 --> 00:00:42.090
example we might have a use a variable which for this particular use that might be equal to rob.

9
00:00:42.610 --> 00:00:49.280
And then we might have a check to see if they use a variable is equal to.

10
00:00:49.360 --> 00:00:54.640
And remember to check whether something is equal to something else just as in javascript's we use double

11
00:00:54.640 --> 00:00:58.510
equals rather than one equals which will set it equal to.

12
00:00:59.020 --> 00:01:02.740
The other thing which is not what we want.

13
00:01:02.740 --> 00:01:09.320
So if it is equal to Rob we can say hello.

14
00:01:09.610 --> 00:01:18.520
Rob and then just like with javascript we can have an else statement as well which does something in

15
00:01:18.910 --> 00:01:21.780
the case that this is not true.

16
00:01:22.090 --> 00:01:29.940
And we might have something like I don't know you if this app only deals with me.

17
00:01:29.940 --> 00:01:30.910
So let's have a look.

18
00:01:31.200 --> 00:01:32.590
So there we go.

19
00:01:32.620 --> 00:01:33.830
Hello Rob.

20
00:01:34.660 --> 00:01:40.940
And then we change it to the user and the I don't know you.

21
00:01:41.380 --> 00:01:42.960
So pretty straightforward really.

22
00:01:43.660 --> 00:01:51.430
As a little challenge for you can you create an if else statement based around this age variable which

23
00:01:51.430 --> 00:01:54.380
checks whether someone is 18 or older.

24
00:01:54.430 --> 00:01:57.090
And if it does says something like You may proceed.

25
00:01:57.100 --> 00:02:00.700
And if it doesn't tell them that they're too young for it

26
00:02:08.520 --> 00:02:12.270
co-writes see how I repeated it.

27
00:02:13.600 --> 00:02:20.320
So we're checking to see if the user is older or equal to 18.

28
00:02:20.870 --> 00:02:22.590
So I would use something like that.

29
00:02:22.700 --> 00:02:31.550
We could also have older than 17 but I think older are equal to 18 makes it clear what's going on here.

30
00:02:32.550 --> 00:02:36.380
And then if that's the case will display.

31
00:02:37.050 --> 00:02:38.360
You may proceed.

32
00:02:40.670 --> 00:02:41.570
If it's not

33
00:02:44.280 --> 00:02:46.530
we'll say you're too young.

34
00:02:47.970 --> 00:02:50.090
Sorry.

35
00:02:50.310 --> 00:02:54.630
And we'll just put in a couple of line breaks as well.

36
00:02:55.590 --> 00:02:56.650
Separate things out.

37
00:02:58.820 --> 00:03:03.440
And I've made a mistake but my error message makes it very clear what's going on.

38
00:03:03.550 --> 00:03:06.950
I've just forgotten my syndicate on that today.

39
00:03:07.220 --> 00:03:08.850
So excellent with an age of 25.

40
00:03:08.850 --> 00:03:14.080
You may proceed with an age of 16.

41
00:03:14.320 --> 00:03:15.840
You are too young.

42
00:03:16.150 --> 00:03:21.160
Like with javascript we can compare two things at once.

43
00:03:21.910 --> 00:03:25.040
And we use the same symbols for that.

44
00:03:25.060 --> 00:03:32.830
So if you want to check for the use of being robbed and the age being greater than 18 we use double

45
00:03:32.830 --> 00:03:35.530
ampersand and then user

46
00:03:38.130 --> 00:03:39.600
equals Rob.

47
00:03:40.060 --> 00:03:44.680
So obviously at the moment that won't work because neither of those are true.

48
00:03:45.070 --> 00:03:53.710
If I make one of them true then that's still not good for both of them to be true.

49
00:03:53.710 --> 00:03:54.870
That gets us in.

50
00:03:55.000 --> 00:04:02.500
We can also have an all or operator which again just javascript and a number of other programming languages

51
00:04:02.500 --> 00:04:09.270
is a double pipe which for me is a shift and backslash character.

52
00:04:09.940 --> 00:04:21.440
So again it still works then but this time and is allowed in as long as he is old enough but if neither

53
00:04:21.440 --> 00:04:26.510
of those are true then we can't get him.

54
00:04:27.040 --> 00:04:28.040
And that's about it.

55
00:04:28.040 --> 00:04:32.320
If statements are hugely powerful and we'll be using them throughout our programming as we're making

56
00:04:32.440 --> 00:04:36.390
more advanced webapps apps the basics of how they work are pretty simple.

57
00:04:36.390 --> 00:04:36.920
Great.

58
00:04:37.180 --> 00:04:42.760
So now it's time to move on and look at the other major programming construct that can affect the flow

59
00:04:43.030 --> 00:04:45.790
of our code and that is the loop.
