WEBVTT

00:05.210 --> 00:12.960
OK so let's have a look at this solution for how many customers made a booking in October 2017.

00:12.980 --> 00:19.430
So first of all let's find out how many customers we actually have in our database and we can do that

00:19.550 --> 00:30.440
by selecting from the Customers table select select counts store from customers.

00:30.440 --> 00:36.320
So this is just going to count the number of rows of data in our customers table which is obviously

00:36.350 --> 00:40.680
going to be the number of customers we have in our database.

00:40.770 --> 00:45.510
So you can see we have 120 customers in total in our database.

00:45.540 --> 00:51.790
So now we need to find out how many actually made a booking in October 2017.

00:52.020 --> 00:57.900
So obviously we want to look at the bookings table so that select from bookings.

00:58.680 --> 01:06.210
And if we run this you can see we have an ID column a screening ID and then a customer ID.

01:06.360 --> 01:17.330
So we were interested in this customer I.D. and you can see that we have customer I.D. 2 4 6 say etc

01:17.360 --> 01:20.530
etc and we have.

01:20.540 --> 01:26.850
I'm sure we have some repeating rows where customers have made multiple bookings.

01:26.850 --> 01:37.630
So you can see here Id 19 has a customer id of 12 and so does ID 6 also has a customer id of 12.

01:38.150 --> 01:43.610
So obviously if a customer didn't make a booking then they're not going to be showing up that customer

01:43.610 --> 01:47.010
I.D. will not show up in the booking table.

01:47.360 --> 01:53.900
And if they had multiple bookings then they're going to show up multiple times in the booking table.

01:54.230 --> 02:02.640
So what we can do to find out how many of the customers made a booking in October 2017 is simply just

02:02.640 --> 02:09.790
to count on the number of distinct customer IDs we have in the bookings table.

02:10.130 --> 02:18.030
So we can do that by typing select counts.

02:18.530 --> 02:20.520
And then in brackets this stinks.

02:20.780 --> 02:25.660
I remember distinctly Lowney we'll get rid of any duplicate values of data.

02:25.970 --> 02:35.030
So if we do distinct customer id this will get rid of any duplicate customer IDs we have in the bookings

02:35.030 --> 02:40.470
table room bookings.

02:41.150 --> 02:49.760
So select count on the number of distinct customer id values from the bookings table.

02:50.300 --> 02:55.370
So if we run this you can see we have 105.

02:55.640 --> 03:03.820
So 105 out of 120 customers actually made a booking in October 2017.

03:05.340 --> 03:08.880
And we can tidy up the column name.

03:08.890 --> 03:14.270
We can say as number of customers.

03:15.130 --> 03:22.550
And then if we run gets rid of the count distinct column name and replaces it with number of customers.

03:22.650 --> 03:29.800
OK so that was a fairly simple solution to what could have been quite a complicated question or complicated

03:29.800 --> 03:31.160
answer.

03:31.210 --> 03:34.450
So if you got the same solution as me then that's great.

03:34.450 --> 03:39.120
If you go to a different solution which gave you value or gave you an ounce of 105.

03:39.160 --> 03:46.960
And you say brilliant if he was able to get the answer then I hope you understood after this video how

03:46.960 --> 03:48.930
I was able to get the answer.

03:49.360 --> 03:53.830
But if you still have some questions on this challenge then please ask in the Q and A section.
