WEBVTT

00:05.340 --> 00:09.300
A case or in this video we're going to be looking left joins.

00:09.300 --> 00:16.580
And if you remember from before I left join is where it will retrieve all that data from table 1.

00:16.860 --> 00:19.840
But only the matching data from Table 2.

00:20.070 --> 00:27.520
So when the left join that matters which table you state first and which table you state second.

00:27.780 --> 00:36.300
So we can write a query which uses a left going to join the customers and the Orders table.

00:36.750 --> 00:45.000
We're going to be joining the two tables between the customer ID column in the Orders table and the

00:45.090 --> 00:53.010
ID column in the Customers table but to show you an example of the importance of naming.

00:53.010 --> 00:55.830
Table 1 and Table 2 in the left join.

00:55.830 --> 01:03.360
I've actually had to break the link between customer id column in the Orders table and the customers

01:03.670 --> 01:09.470
column in the ID table for ID equal to 1.

01:09.540 --> 01:17.160
So you can see here that I've actually updated the orders table once a customer id equal to know where

01:17.220 --> 01:19.380
the ID is equal to 1.

01:19.440 --> 01:27.180
So for Order ID 1 we no longer have a customer ID and I did specifically for this video to show you

01:27.180 --> 01:33.630
the difference between ordering Table 1 and Table 2 in the left join.

01:33.640 --> 01:39.730
So if you want to post a video and write this update stateman you can do that and then you can follow

01:39.730 --> 01:42.160
along with the select statement afterwards.

01:42.320 --> 01:48.700
OK so you can see here I've selected the orders IDEI the customer's phone number and last name and the

01:48.700 --> 01:50.620
order time for me on the table.

01:50.970 --> 01:57.180
So to complete this left join query I'm going to type from orders by.

01:57.790 --> 02:05.710
And then on the next line I'm going to type left join on the customers table and call that see.

02:05.710 --> 02:10.180
And that's going to be all and all customer ID.

02:10.480 --> 02:18.070
So the customer id call them and the orders table is going to be equal to the ID column in the Customers

02:18.070 --> 02:19.120
table.

02:19.750 --> 02:24.900
And then I'm just going to order the results by I do all the time

02:28.010 --> 02:32.650
and I'm also going to limit the number of results to ten just so we only have 10.

02:32.710 --> 02:35.100
Not too many results in our results.

02:35.860 --> 02:44.080
And then I run this statement and you can see it's retrieved this data here.

02:44.560 --> 02:46.860
So you can see the first line here.

02:46.990 --> 02:53.980
We have all the time from the Order table and ID from the Orders table as well but we don't have any

02:53.980 --> 02:56.120
information from the customers table.

02:56.560 --> 03:02.690
And this is because in a left join it retrieves all the data from table 1.

03:02.740 --> 03:09.450
So the orders table but it only retrieves matching data in table 2 which is the Customers table.

03:09.730 --> 03:17.790
And because we did this up day we broke the link between customer ID 1 and ID 1 in the Orders table.

03:17.800 --> 03:26.560
So the left join was not able to retrieve any data from the customers table for ID 1 but it did return

03:27.130 --> 03:28.380
the orders data.

03:28.390 --> 03:35.590
So the order time and the ID and that's because orders was Table 1 and customers was Table 2.

03:36.190 --> 03:42.850
And to show you that this is truly going to run exactly the same select statement but I'm going to switch

03:42.850 --> 03:44.830
Table 1 and Table 2 around.

03:44.980 --> 03:49.960
So I'm going to make the customers table Table 1 and the orders table Table 2.

03:50.170 --> 03:51.860
So let's do that now.

03:51.940 --> 03:55.830
So I need to change the from orders to customers.

03:55.870 --> 04:05.750
So from customers see Annie to do the left join on the orders table so borders.

04:06.450 --> 04:09.640
And I also need to switch the order around in the on part.

04:09.640 --> 04:20.800
So I need to say See ID is equal to to talk to a customer ID so I need to switch those two around as

04:20.800 --> 04:21.550
well.

04:21.550 --> 04:27.400
And then I can run this select statement where I've switched to one end table to around and just see

04:27.400 --> 04:29.590
what we get in the results.

04:30.460 --> 04:36.970
So you can see now from the results that the first ROI returned doesn't have an idea of 1 and that's

04:36.970 --> 04:39.160
because customers is Table 1.

04:39.150 --> 04:45.550
So the left join is trying to find data from the Customers table but it can't because we've broken the

04:45.550 --> 04:50.590
link for ID one so it can't return any data or an ID one.

04:50.980 --> 04:55.150
And it only returns matching data from the Orders table.

04:55.450 --> 05:04.860
So we don't get the all the time and the ID field for for one because there was no data from the Customers

05:04.870 --> 05:05.730
table.

05:05.920 --> 05:11.140
But we do get the rest because there was data in the Customers table.

05:11.560 --> 05:16.960
So this example shows the importance of getting Table 1 and table to correct when you are using left

05:16.960 --> 05:18.090
joins.

05:18.130 --> 05:20.260
So now we're ready to move on to right.

05:20.260 --> 05:20.890
Joines.
