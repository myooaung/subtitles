WEBVTT

00:05.190 --> 00:09.170
OK so hopefully you were able to get the chance for this challenge.

00:09.220 --> 00:11.520
So let's take a look at the solution.

00:11.670 --> 00:22.260
For this we need to select data from our films table so select store from films and if we run this query

00:24.860 --> 00:29.410
you can see we have a id column name column and then a length in column.

00:29.540 --> 00:31.630
So this length in column is in minutes.

00:31.640 --> 00:37.900
So this is the one we want to filter on when we want our films that are over two hours long.

00:38.210 --> 00:47.030
So we can add a WHERE clause here and we can say where length men are so the length men column is greater

00:47.030 --> 00:48.430
than 120.

00:48.430 --> 00:51.050
So two hours went on in 20 minutes.

00:51.380 --> 00:58.590
And if we run this query now it just returns the four films which are over two hours in length.

00:58.670 --> 01:04.650
So we have Blade Runner 2049 Geo's still on murder on the Orient Express and Blade Runner.

01:05.780 --> 01:10.070
And you could have also been more precise in which columns you returned.

01:10.070 --> 01:19.040
You could have just selected film or you could have just selected name from the films table and that

01:19.040 --> 01:20.780
would have just returned the name caller.

01:20.810 --> 01:29.090
Or you could have written and select name and length men which would give you the name of the film and

01:29.090 --> 01:35.980
then also the length of the film the ID column isn't particularly important for this challenge.

01:36.320 --> 01:38.570
So that's the solution for this challenge.

01:38.600 --> 01:43.880
Hopefully you were able to get the answer but if you weren't and you have a few questions on it then

01:44.000 --> 01:47.230
please ask in the Q&amp;A section and I'll get back to you.

01:47.330 --> 01:50.220
But for now let's move on to the next challenge.
