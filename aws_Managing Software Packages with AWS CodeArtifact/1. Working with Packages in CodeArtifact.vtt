WEBVTT
1
00:00:00.440 --> 00:00:03.630
The final part of this course will conclude with actually

2
00:00:03.630 --> 00:00:07.340
working with the packages inside of CodeArtifact.

3
00:00:07.340 --> 00:00:08.020
First,

4
00:00:08.020 --> 00:00:11.100
we need to make sure you have the right prerequisites required to

5
00:00:11.100 --> 00:00:13.930
work with software packages inside of CodeArtifact.

6
00:00:13.930 --> 00:00:17.270
There are only two things we need to have set up for this module,

7
00:00:17.270 --> 00:00:19.340
and we already have set up one of them.

8
00:00:19.340 --> 00:00:24.620
I'm going to assume that you already have AWS CLI set up too.

9
00:00:24.620 --> 00:00:26.750
Okay, so we have everything in place.

10
00:00:26.750 --> 00:00:30.310
Let's take a look at what CodeArtifact software packages are.

11
00:00:30.310 --> 00:00:36.240
CodeArtifact packages exist inside of a CodeArtifact repository.

12
00:00:36.240 --> 00:00:40.530
Packages consist of metadata and the actual package asset.

13
00:00:40.530 --> 00:00:45.440
Like we talked about earlier, this mitigates duplication.

14
00:00:45.440 --> 00:00:49.720
You can have multiple software packages and assets inside of a repository,

15
00:00:49.720 --> 00:00:56.050
and CodeArtifact will make sure they only ever store one of the same type.

16
00:00:56.050 --> 00:01:00.410
A repository will contain software package versions and metadata,

17
00:01:00.410 --> 00:01:04.440
which will point to a software package asset.

18
00:01:04.440 --> 00:01:08.000
All of your software packages are encrypted using KMS,

19
00:01:08.000 --> 00:01:11.740
and Amazon handles all of this for you.

20
00:01:11.740 --> 00:01:12.180
Also,

21
00:01:12.180 --> 00:01:15.310
do not worry about adding too many packages to your

22
00:01:15.310 --> 00:01:18.850
repository as it will scale automatically.

23
00:01:18.850 --> 00:01:23.540
You can publish new versions of supported package types to a

24
00:01:23.540 --> 00:01:27.050
CodeArtifact repository using tools like npm.

25
00:01:27.050 --> 00:01:32.840
You can't republish a package asset that already exists with different content.

26
00:01:32.840 --> 00:01:38.140
For example, say you already have published an npm package called Package1.

27
00:01:38.140 --> 00:01:42.190
You can't publish that asset again unless the checksum of

28
00:01:42.190 --> 00:01:45.660
the old and new assets are identical.

29
00:01:45.660 --> 00:01:49.410
To republish the same asset with new content,

30
00:01:49.410 --> 00:01:53.500
first, delete the package and then republish it.

31
00:01:53.500 --> 00:01:53.980
Okay,

32
00:01:53.980 --> 00:01:56.340
so now we have a simple understanding of software

33
00:01:56.340 --> 00:01:58.940
packages and assets in CodeArtifact.

34
00:01:58.940 --> 00:02:02.580
Let's take a look at adding them using our AWS CLI.

35
00:02:02.580 --> 00:02:04.210
In this demo,

36
00:02:04.210 --> 00:02:08.540
we're going to cover the following components in a little bit more detail.

37
00:02:08.540 --> 00:02:12.620
We're going to take a look at adding a software package to our repository.

38
00:02:12.620 --> 00:02:16.580
We're going to have a look at listing the versions of that package,

39
00:02:16.580 --> 00:02:20.150
and then we're going to add another version, and then

40
00:02:20.150 --> 00:02:23.200
we're going to delete the first version.

41
00:02:23.200 --> 00:02:25.660
And then we're also going to take a look at installing

42
00:02:25.660 --> 00:02:30.240
software packages from our repository.

43
00:02:30.240 --> 00:02:30.770
Okay,

44
00:02:30.770 --> 00:02:34.670
so here we are in our globomantics‑repo that we created earlier.

45
00:02:34.670 --> 00:02:39.340
We're going to hit View connection instructions.

46
00:02:39.340 --> 00:02:42.220
We're then going to select our package manager client, and

47
00:02:42.220 --> 00:02:46.230
for this tutorial, I'm going to use npm.

48
00:02:46.230 --> 00:02:51.180
Then CodeArtifact conveniently gives you the login authorization command.

49
00:02:51.180 --> 00:02:56.840
So I'm just going to copy that, and I'm going to paste that into my bash.

50
00:02:56.840 --> 00:03:01.310
Here you can see that it's going to log into our globomantics‑repo and into

51
00:03:01.310 --> 00:03:06.440
our domain, and it's going to specify I'm the domain owner.

52
00:03:06.440 --> 00:03:10.500
So let's jump over to bash, and then in here, let's paste

53
00:03:10.500 --> 00:03:15.240
that command and then run that command.

54
00:03:15.240 --> 00:03:16.080
Okay, cool.

55
00:03:16.080 --> 00:03:20.550
So that command was successful, and our login expires in 12 hours.

56
00:03:20.550 --> 00:03:24.310
Let's jump back over to the dashboard, and then let's select

57
00:03:24.310 --> 00:03:28.040
Manual setup: push and pull from your repository.

58
00:03:28.040 --> 00:03:30.230
Then we're going to copy this next command,

59
00:03:30.230 --> 00:03:35.010
which is going to give us an authorization token for us to use with npm.

60
00:03:35.010 --> 00:03:36.940
So let's copy that.

61
00:03:36.940 --> 00:03:45.100
Jump back over to our bash, paste that in. Now that that variable is set, let's

62
00:03:45.100 --> 00:03:51.490
jump back over to the dashboard once again, and let's copy our connection

63
00:03:51.490 --> 00:03:57.870
information for npm. So we'll copy that. And then this time, I'm going to jump

64
00:03:57.870 --> 00:04:03.180
over to my code editor. And you'll be able to find these course files in the

65
00:04:03.180 --> 00:04:09.750
course file section, and then in the .npmrc, you want to paste those connection

66
00:04:09.750 --> 00:04:12.640
details in there. Okay,

67
00:04:12.640 --> 00:04:16.180
so now we have our connection information set up, and we're all

68
00:04:16.180 --> 00:04:21.240
authorized to use our repo with our local CLI.

69
00:04:21.240 --> 00:04:27.460
So the next thing I want to do is I want to jump back to our bash, and

70
00:04:27.460 --> 00:04:35.260
then in here I want to npm init our package. Package name, let's call it

71
00:04:35.260 --> 00:04:42.520
globomantics‑package. Version 1 is fine.

72
00:04:42.520 --> 00:04:47.000
As a description, this is a custom package.

73
00:04:47.000 --> 00:04:51.550
Entry point, index.js. It doesn't need a command or Git repository.

74
00:04:51.550 --> 00:04:58.520
Author, I am the author, Joshua Edwards. License, MIT.

75
00:04:58.520 --> 00:04:59.920
That looks okay.

76
00:04:59.920 --> 00:05:03.640
So I'll type in yes. And then there we go.

77
00:05:03.640 --> 00:05:05.840
So what just happened?

78
00:05:05.840 --> 00:05:09.940
Npm just created our package for us, and let's have a look

79
00:05:09.940 --> 00:05:14.130
inside of our package.json. There we go.

80
00:05:14.130 --> 00:05:18.720
There's our globomantics‑package all set up and ready for us to push to the

81
00:05:18.720 --> 00:05:25.140
repository. And you'll see that also in your folder too.

82
00:05:25.140 --> 00:05:29.040
Okay, so we have our package created.

83
00:05:29.040 --> 00:05:34.790
Let's take a look at pushing this package to our repository. Now in here,

84
00:05:34.790 --> 00:05:38.980
if we just use npm publish, npm is then going to push our

85
00:05:38.980 --> 00:05:43.770
globomantics‑package to our repo, and you can see it's done that at version

86
00:05:43.770 --> 00:05:49.140
1.0.0. So let's jump back over to the AWS dashboard,

87
00:05:49.140 --> 00:05:55.030
close this down, and then if we hit Refresh in here, okay,

88
00:05:55.030 --> 00:05:58.920
so as you can see, here is our package that we just pushed.

89
00:05:58.920 --> 00:06:03.040
So let's drill into it. If we click on the package, we can see that

90
00:06:03.040 --> 00:06:08.720
1.0.0 was published, and then in here, we can have a look at the

91
00:06:08.720 --> 00:06:13.670
asset that is associated with this package. And that'll just be our

92
00:06:13.670 --> 00:06:19.660
index.js file and any others that you include. Cool! Super easy and

93
00:06:19.660 --> 00:06:21.010
super simple.

94
00:06:21.010 --> 00:06:25.840
So let's have a look at what other commands we can use with the CLI.

95
00:06:25.840 --> 00:06:27.620
So here we are back in bash.

96
00:06:27.620 --> 00:06:34.400
Let's type in AWS CodeArtifact, and I'm purposely going to misspell something.

97
00:06:34.400 --> 00:06:35.510
So I'll just put qwerty in.

98
00:06:35.510 --> 00:06:39.140
And it's going to say that that's not a command.

99
00:06:39.140 --> 00:06:42.910
But here we can see a quick list of most‑used commands.

100
00:06:42.910 --> 00:06:45.540
And we've already used the login.

101
00:06:45.540 --> 00:06:46.810
So in this next command,

102
00:06:46.810 --> 00:06:52.840
let's have a look at listing the packages. You can type in aws codeartifact

103
00:06:52.840 --> 00:06:56.240
help, and you'll see a more comprehensive version of this.

104
00:06:56.240 --> 00:06:59.550
Here we have the next command we're going to use, and we're going to

105
00:06:59.550 --> 00:07:05.440
list the package versions of our globomantics‑package.

106
00:07:05.440 --> 00:07:11.540
Here you can see the revision that we published in the version 1.0.1.

107
00:07:11.540 --> 00:07:13.440
So pretty cool.

108
00:07:13.440 --> 00:07:15.920
Let's just get out of here.

109
00:07:15.920 --> 00:07:18.170
Cool, so let's get out of here, and then let's head back

110
00:07:18.170 --> 00:07:23.440
over to our editor. In the package.json,

111
00:07:23.440 --> 00:07:31.150
I'm going to update the version to 1.0.1, and then I'm going to update

112
00:07:31.150 --> 00:07:38.640
the index.js to maybe have one less exclamation mark.

113
00:07:38.640 --> 00:07:44.340
Okay, and then if we head back over to our bash window again,

114
00:07:44.340 --> 00:07:50.230
and then in here we can type npm publish,

115
00:07:50.230 --> 00:07:54.570
and that will then publish our next version 1.0.1.

116
00:07:54.570 --> 00:08:01.220
So let's head back over to our dashboard, and then we'll go to our

117
00:08:01.220 --> 00:08:08.240
package version, and we'll see our new 1.0.1.

118
00:08:08.240 --> 00:08:11.040
This is really simple and really easy to use.

119
00:08:11.040 --> 00:08:11.520
Okay,

120
00:08:11.520 --> 00:08:15.010
let's head back over to our bash. And now we're

121
00:08:15.010 --> 00:08:17.560
going to delete one of our versions.

122
00:08:17.560 --> 00:08:21.620
So if we use this following command, codeartifact

123
00:08:21.620 --> 00:08:25.650
delete‑package‑versions, we're going to specify the repo.

124
00:08:25.650 --> 00:08:29.020
We're going to specify the domain and the domain owner and

125
00:08:29.020 --> 00:08:33.690
the format and then the package name and then also the

126
00:08:33.690 --> 00:08:36.040
package version that we want to delete.

127
00:08:36.040 --> 00:08:38.440
So let's do that.

128
00:08:38.440 --> 00:08:42.940
Let's delete 1.0.0.

129
00:08:42.940 --> 00:08:44.320
That has just been confirmed.

130
00:08:44.320 --> 00:08:51.100
So let's Ctrl+C out of here and then jump back over to the repo.

131
00:08:51.100 --> 00:08:58.740
And if we refresh this, our 1.0.0 will now have disappeared.

132
00:08:58.740 --> 00:09:02.230
Awesome! So it really is that simple to use.

133
00:09:02.230 --> 00:09:03.830
Okay, next,

134
00:09:03.830 --> 00:09:09.540
we're going to have a look at installing our package that we just created.

135
00:09:09.540 --> 00:09:18.860
So if we jump back over to bash, and then I'm going to go to our install

136
00:09:18.860 --> 00:09:26.080
directory. And then in here, I'm going to copy over the .npmrc

137
00:09:26.080 --> 00:09:32.830
configuration that we've got for publishing the packages.

138
00:09:32.830 --> 00:09:39.760
And I'm going to give it to the install directory too. Done. And then we'll

139
00:09:39.760 --> 00:09:48.340
jump back to bash, and we will npm install, and we're going to install our

140
00:09:48.340 --> 00:09:55.050
globomantics‑package@1.0.1. And there we have it.

141
00:09:55.050 --> 00:09:59.300
We have our custom package installed from our custom repo.

142
00:09:59.300 --> 00:10:00.400
Let's just check that out.

143
00:10:00.400 --> 00:10:04.620
So if we go over to our editor and then into note_modules,

144
00:10:04.620 --> 00:10:12.000
and we can see our globomantics‑package has then been installed and is ready for us to use.

