1
00:00:00,970 --> 00:00:04,590
[Autogenerated] let me introduce one off the most important AWS service

2
00:00:04,590 --> 00:00:10,930
we're going to explore across this course AWS I am,

3
00:00:10,930 --> 00:00:14,090
which means identity and access management.

4
00:00:14,090 --> 00:00:19,520
Let's go for the definition first AWS Identity and Access Management

5
00:00:19,520 --> 00:00:23,000
is a Web service that helps you securely control.

6
00:00:23,000 --> 00:00:30,920
Access to AWS results is you can use I am to control who is a syndicated,

7
00:00:30,920 --> 00:00:38,930
stagnant in and authorized has permission to use the results is in simple words.

8
00:00:38,930 --> 00:00:42,940
This is the cornerstone off AWS cloud environment,

9
00:00:42,940 --> 00:00:46,170
since it provides a set of tools to verify identity of

10
00:00:46,170 --> 00:00:52,500
users and to provide privileges to access resorts is let me

11
00:00:52,500 --> 00:00:54,630
provide a quick review of AWS.

12
00:00:54,630 --> 00:00:58,030
I am Yes,

13
00:00:58,030 --> 00:01:02,160
I am provide a septal tools to manage authentication and

14
00:01:02,160 --> 00:01:05,140
authorization in a very granular way.

15
00:01:05,140 --> 00:01:08,060
This is done by means of the following objects.

16
00:01:08,060 --> 00:01:13,540
Users are the entities created across your AWS account,

17
00:01:13,540 --> 00:01:19,400
which requires interaction with AWS resources groups

18
00:01:19,400 --> 00:01:21,370
is a collection of users heaven.

19
00:01:21,370 --> 00:01:27,980
The same privileges rolls identity objects with permission, roles.

20
00:01:27,980 --> 00:01:30,290
The rule do not have any credentials,

21
00:01:30,290 --> 00:01:36,200
so the role has to be always associated with an identity and

22
00:01:36,200 --> 00:01:39,570
finally we have policies which are objects which the fine

23
00:01:39,570 --> 00:01:43,840
permission and that can be applied that the users groups are

24
00:01:43,840 --> 00:01:48,460
roles By leveraging on these objects,

25
00:01:48,460 --> 00:01:55,470
AWS I am can be configured the to shared access to your AWS

26
00:01:55,470 --> 00:01:59,750
account by granting other people permission to the minister and

27
00:01:59,750 --> 00:02:05,320
use of resources in your AWS account without having to share your

28
00:02:05,320 --> 00:02:08,740
own password or access key.

29
00:02:08,740 --> 00:02:14,040
You can grant different permission to different people for different resources.

30
00:02:14,040 --> 00:02:14,730
For example,

31
00:02:14,730 --> 00:02:21,240
you might allow some users complete access to Amazon Elastic Compute Cloud,

32
00:02:21,240 --> 00:02:23,470
Amazon Simple storage service,

33
00:02:23,470 --> 00:02:30,310
Amazon Dynamodb or Amazon Red Shift or whichever aws services you can use.

34
00:02:30,310 --> 00:02:34,370
I am features to securely provide credential for

35
00:02:34,370 --> 00:02:37,740
application that run on easy two instances.

36
00:02:37,740 --> 00:02:44,500
AWS I am is totally an easily integrated with all a doubly as resources,

37
00:02:44,500 --> 00:02:50,940
making easy to enforce access policy on all your AWS services.

38
00:02:50,940 --> 00:02:57,380
And finally aws I am is free to use so you will never be charged

39
00:02:57,380 --> 00:03:02,740
for how many users or policy you are creating.

40
00:03:02,740 --> 00:03:06,890
Everything in AWS environment starts with someone

41
00:03:06,890 --> 00:03:11,280
creating a brand new AWS account.

42
00:03:11,280 --> 00:03:14,940
The county is associated with a root user.

43
00:03:14,940 --> 00:03:17,250
This route user is a unique user,

44
00:03:17,250 --> 00:03:21,460
with the following the rooty user as super user privileges.

45
00:03:21,460 --> 00:03:22,000
Basically,

46
00:03:22,000 --> 00:03:27,700
the root user has the privileges to do everything with every AWS resources.

47
00:03:27,700 --> 00:03:31,920
Root user is always associated to a mail address into a

48
00:03:31,920 --> 00:03:35,440
created card for building purposes.

49
00:03:35,440 --> 00:03:41,140
On the route to user is the entry point to bootstrap your AWS account.

50
00:03:41,140 --> 00:03:45,320
Please note that you can have multiple free normal users,

51
00:03:45,320 --> 00:03:51,150
also called I Am users, according to AWS terminology.

52
00:03:51,150 --> 00:03:55,700
But there is only one route user.

53
00:03:55,700 --> 00:03:59,140
Now let me introduce AWS best practices,

54
00:03:59,140 --> 00:04:03,540
which explained how to securely handle the root user.

55
00:04:03,540 --> 00:04:06,110
First associate,

56
00:04:06,110 --> 00:04:09,160
the root user with the multi factor authentication to

57
00:04:09,160 --> 00:04:11,640
prevent the credential stealing.

58
00:04:11,640 --> 00:04:15,500
If someone can steal root user credential is able to do

59
00:04:15,500 --> 00:04:18,030
everything with your AWS resorts.

60
00:04:18,030 --> 00:04:25,140
Is someone could boot 1000 easy to machine and guess who is paying for these?

61
00:04:25,140 --> 00:04:26,090
And worst,

62
00:04:26,090 --> 00:04:31,940
someone could also prevent you from accessing the account to fix the issue.

63
00:04:31,940 --> 00:04:38,440
Second, delete the access key associate ID by default to the root user,

64
00:04:38,440 --> 00:04:42,610
and this can be even more dangerous if your access key are stolen,

65
00:04:42,610 --> 00:04:49,730
someone could programmatically user Seelye ap I or even sdk against your AWS

66
00:04:49,730 --> 00:04:55,790
account with full access to your resources ____ create.

67
00:04:55,790 --> 00:05:01,870
I am users and groups to operate the your AWS resources.

68
00:05:01,870 --> 00:05:03,340
Never, never,

69
00:05:03,340 --> 00:05:09,930
never used root user to manage your AWS resources and

70
00:05:09,930 --> 00:05:13,050
fourth established a policy for password.

71
00:05:13,050 --> 00:05:16,300
Standard policy continues the minimum land,

72
00:05:16,300 --> 00:05:26,000
special characters and expiration time. Let's now run a couple of them or to see AWS guidelines or inactions.

