WEBVTT
1
00:00:00.940 --> 00:00:05.000
[Autogenerated] Let's more forward to the next topic and let's start to

2
00:00:05.000 --> 00:00:11.050
raise the bar with results based policies as usual.

3
00:00:11.050 --> 00:00:13.600
Let me go for the definition First,

4
00:00:13.600 --> 00:00:17.480
the results based the policies Argies on policy document that you

5
00:00:17.480 --> 00:00:21.140
attach to resort to such an Amazon s three bucket.

6
00:00:21.140 --> 00:00:25.900
This policy is granted the specified principal permission to perform specific

7
00:00:25.900 --> 00:00:31.690
actions on that results and the fines under what condition these applies Also

8
00:00:31.690 --> 00:00:35.840
note that results based policies are in line polices.

9
00:00:35.840 --> 00:00:37.920
There are no manager results basic.

10
00:00:37.920 --> 00:00:45.040
The Polish is so how results based the policy evaluation works.

11
00:00:45.040 --> 00:00:49.780
We will have user with identity based the policy associate ID.

12
00:00:49.780 --> 00:00:54.240
Then we have results with the results based the policy associate ID.

13
00:00:54.240 --> 00:00:57.610
The two policies are evaluated together following the

14
00:00:57.610 --> 00:00:59.900
agreement that we already explained.

15
00:00:59.900 --> 00:01:04.270
For a certain combination off principle user an action.

16
00:01:04.270 --> 00:01:06.940
The rule is the usual rule.

17
00:01:06.940 --> 00:01:11.900
If explicit deny is found in one statement, then the result is deny.

18
00:01:11.900 --> 00:01:17.840
If allow is found, at least in one statement than the result is allow,

19
00:01:17.840 --> 00:01:20.580
otherwise we go for it to the full two behavior,

20
00:01:20.580 --> 00:01:26.630
which, as we know, is that the fall to deny effect dangerous.

21
00:01:26.630 --> 00:01:32.440
In fact, is that the results based the policies are not defined for old services.

22
00:01:32.440 --> 00:01:37.540
For compute services, for example, we have loved the service for storage.

23
00:01:37.540 --> 00:01:42.860
We have vestry, f s and glossy services and more interesting,

24
00:01:42.860 --> 00:01:48.560
we have no results based policies specified for databases Services off course.

25
00:01:48.560 --> 00:01:50.940
This list is not exhaustive.

26
00:01:50.940 --> 00:01:54.240
And please visit official Amazon documentation for a

27
00:01:54.240 --> 00:01:56.670
complete least in the remaining part.

28
00:01:56.670 --> 00:02:01.940
Off the section, we will concentrate on s three service.

29
00:02:01.940 --> 00:02:06.650
Given the fact that AWS s three is one off the oldest Amazon

30
00:02:06.650 --> 00:02:11.040
services during the time it has been empowered with lot of

31
00:02:11.040 --> 00:02:13.780
features at the state of art,

32
00:02:13.780 --> 00:02:17.850
we have two ways to control access to as three buckets.

33
00:02:17.850 --> 00:02:23.490
First Matin is the access control East Access control East control.

34
00:02:23.490 --> 00:02:26.790
The bucket at the bucket and object level can be a

35
00:02:26.790 --> 00:02:29.670
stagnant to both market and objects.

36
00:02:29.670 --> 00:02:34.340
A C L is a legacy meted even if it is not duplicated.

37
00:02:34.340 --> 00:02:37.940
And of course it is very hard to manage.

38
00:02:37.940 --> 00:02:39.590
On the other side, we have results.

39
00:02:39.590 --> 00:02:40.970
Basic policies,

40
00:02:40.970 --> 00:02:46.380
also known as a bucket policy for these specific service market policies

41
00:02:46.380 --> 00:02:50.740
can enforce policy at both bucket and object level.

42
00:02:50.740 --> 00:02:56.880
They are easy to manage, and they are recommended by AWS Best practices.

43
00:02:56.880 --> 00:02:58.610
Now it's _____ time.

44
00:02:58.610 --> 00:03:01.270
As usual, we will see a couple of scenario,

45
00:03:01.270 --> 00:03:06.400
with some task to be completed in the first scenario.

46
00:03:06.400 --> 00:03:09.410
Scott is an I am user,

47
00:03:09.410 --> 00:03:13.640
which is belonging to an already created as three users group.

48
00:03:13.640 --> 00:03:18.860
Your task is to create a policy to allow Scott to access as three resources off

49
00:03:18.860 --> 00:03:23.310
the account and to allow unique access to specific bucket,

50
00:03:23.310 --> 00:03:26.190
which, by the way, it's called Scott on the back.

51
00:03:26.190 --> 00:03:33.440
It let's now look into the dashboard as our administrator Bob.

52
00:03:33.440 --> 00:03:34.460
Let's select.

53
00:03:34.460 --> 00:03:38.360
The best reserve is is all s three buckets are listed the here,

54
00:03:38.360 --> 00:03:42.170
So let's select our target, which is caught only bucket.

55
00:03:42.170 --> 00:03:44.580
Let's move to permission tub and let's focus on

56
00:03:44.580 --> 00:03:47.010
bucket policy section by default.

57
00:03:47.010 --> 00:03:50.170
There is no policy here, so let's create the one.

58
00:03:50.170 --> 00:03:54.740
Luckily, AWS makes every label for us a policy generator tool,

59
00:03:54.740 --> 00:03:58.990
which opened radically in a different stop off our Web browser.

60
00:03:58.990 --> 00:04:01.260
Our policy must contain two statements.

61
00:04:01.260 --> 00:04:06.980
Let's begin with the explicit the Deny statement with selected Bob and Air.

62
00:04:06.980 --> 00:04:11.570
Lisa's principles select Auerbach it as target,

63
00:04:11.570 --> 00:04:16.450
and the resulting statement is already this statement deny access cities

64
00:04:16.450 --> 00:04:20.480
specific pocket and all its object for Bob and Alice.

65
00:04:20.480 --> 00:04:24.930
Then we had the allow statement Select the Scotus principle and

66
00:04:24.930 --> 00:04:29.480
the Target Barket as resource and the result in statement which

67
00:04:29.480 --> 00:04:32.940
allows Scott to access the bucket, is ready.

68
00:04:32.940 --> 00:04:36.060
Now we can generate the policy which appears properly

69
00:04:36.060 --> 00:04:41.720
formatted as Jason File was selected policy based into the

70
00:04:41.720 --> 00:04:45.340
bucket policy and save the configuration.

71
00:04:45.340 --> 00:04:49.740
Let's move to do some verification.

72
00:04:49.740 --> 00:04:54.640
Let me use Bob profile to least all s three buckets.

73
00:04:54.640 --> 00:04:58.650
Using Bob Profile, we try to move a file to the target back it,

74
00:04:58.650 --> 00:05:01.090
but the operation is denied.

75
00:05:01.090 --> 00:05:05.390
We do the same thing with Scott profile and here we go.

76
00:05:05.390 --> 00:05:07.690
Let's finally very fight that the file is

77
00:05:07.690 --> 00:05:10.760
successfully started in the target market.

78
00:05:10.760 --> 00:05:17.170
As expected on Lee, Scott is able to access that the target bucket.

79
00:05:17.170 --> 00:05:18.450
In the second scenario,

80
00:05:18.450 --> 00:05:24.370
our task is to enable MF a delete feature for a specific bucket.

81
00:05:24.370 --> 00:05:29.180
This feature allowed the let inversions off industry object only if the

82
00:05:29.180 --> 00:05:36.100
user passes the MF a code along with its darkest I m f.

83
00:05:36.100 --> 00:05:39.930
A delete is a super secret and very interesting feature.

84
00:05:39.930 --> 00:05:43.740
But some covers must be taken into account.

85
00:05:43.740 --> 00:05:47.250
This feature can be enabled Onley by roti user.

86
00:05:47.250 --> 00:05:48.380
So yes,

87
00:05:48.380 --> 00:05:52.680
there are some task which can be performed the only by the root user itself.

88
00:05:52.680 --> 00:05:55.230
The root user need an m f a cold.

89
00:05:55.230 --> 00:05:59.180
So you two factor authentication The you Becky we used to

90
00:05:59.180 --> 00:06:02.490
secure the root user will not work here.

91
00:06:02.490 --> 00:06:07.140
And these feature only works with Seelye and a P I coals.

92
00:06:07.140 --> 00:06:13.540
So to enable these, you have to enable the access key for the route user.

93
00:06:13.540 --> 00:06:15.980
Let's see how it works.

94
00:06:15.980 --> 00:06:21.180
First, we have to enable version in an M f A delete for the target bucket.

95
00:06:21.180 --> 00:06:25.840
Note that we are using a special s three ap A commands.

96
00:06:25.840 --> 00:06:29.130
Let's Jack if the command was successful and everything

97
00:06:29.130 --> 00:06:33.420
seems ok so far Now with Ellis Profile,

98
00:06:33.420 --> 00:06:39.040
check the version of the files which resides in the target bucket.

99
00:06:39.040 --> 00:06:43.490
When we tried to delete this version, an error is displayed.

100
00:06:43.490 --> 00:06:48.330
We need the MF a code within the command If it right toe

101
00:06:48.330 --> 00:06:51.760
have the m If a code to do command another error is

102
00:06:51.760 --> 00:06:55.210
displayed this time and my faves okay,

103
00:06:55.210 --> 00:06:58.340
but this operation is allowed only by bucket owner,

104
00:06:58.340 --> 00:07:01.000
which is a root account.

105
00:07:01.000 --> 00:07:08.000
Finally, if we should command with a good profile, the specific file version is finally deleted.

