WEBVTT
1
00:00:01.424 --> 00:00:04.204
In this section, we'll review the resources,

2
00:00:04.204 --> 00:00:09.620
parameters, and outputs from the AuroraStack as a recap.

3
00:00:09.620 --> 00:00:12.186
On this slide shows some of the resources created,

4
00:00:12.186 --> 00:00:15.926
viewed within the Amazon CloudFormation Designer,

5
00:00:15.926 --> 00:00:19.511
and on the right you'll see a partial list of some of

6
00:00:19.511 --> 00:00:22.097
the resources that were created.

7
00:00:22.097 --> 00:00:26.880
They include an Amazon EC2 gateway attachment,

8
00:00:26.880 --> 00:00:30.499
an Amazon Aurora Relational Database cluster,

9
00:00:30.499 --> 00:00:35.343
an Amazon Aurora Relational Database instance,

10
00:00:35.343 --> 00:00:43.842
an Amazon EC2 security group, an Amazon EC2 security ingress,

11
00:00:43.842 --> 00:00:47.795
which is used with CloudFormation to specify an

12
00:00:47.795 --> 00:00:50.593
inbound rule for a security group,

13
00:00:50.593 --> 00:00:55.801
an inbound rule permits instances to receive traffic from the

14
00:00:55.801 --> 00:01:00.137
specified IPv4 or IPv6 CIDR address range,

15
00:01:00.137 --> 00:01:05.016
or from the instances associated with the specified security group,

16
00:01:05.016 --> 00:01:08.666
an Amazon Aurora Relational Database subnet group,

17
00:01:08.666 --> 00:01:15.328
an Amazon public EC2 route, an Amazon EC2 route table,

18
00:01:15.328 --> 00:01:22.621
2 Amazon EC2 subnets, 2 Amazon EC2 subnet route table associations,

19
00:01:22.621 --> 00:01:30.061
an Amazon S3 endpoint, an Amazon EC2 virtual private cloud,

20
00:01:30.061 --> 00:01:33.356
and an Amazon internet gateway.

21
00:01:33.356 --> 00:01:38.564
The AuroraStack created all of the resources listed in the screenshot.

22
00:01:38.564 --> 00:01:42.012
It's more than you'd see in the diagram because many

23
00:01:42.012 --> 00:01:44.143
of these are supporting services.

24
00:01:44.143 --> 00:01:48.725
These are the AuroraStack's parameter values that we supplied to

25
00:01:48.725 --> 00:01:52.612
Amazon CloudFormation during stack creation.

26
00:01:52.612 --> 00:01:57.504
They include an Amazon AuroraDBPassword,

27
00:01:57.504 --> 00:01:59.375
an Amazon AuroraDBUsername,

28
00:01:59.375 --> 00:02:05.180
you looked up your IP address to the create stack

29
00:02:05.180 --> 00:02:09.996
configuration for our AuroraStack, a virtual private cloud CIDR Block,

30
00:02:09.996 --> 00:02:14.386
and two virtual private cloud public subnets.

31
00:02:14.386 --> 00:02:18.670
The outputs listed here can be used as input values

32
00:02:18.670 --> 00:02:20.377
into other CloudFormation scripts,

33
00:02:20.377 --> 00:02:26.521
and we'll be doing just that when we build the Glue stack.

34
00:02:26.521 --> 00:02:29.062
The following are the AuroraStack's outputs,

35
00:02:29.062 --> 00:02:35.514
an Amazon Aurora VPCID, an Amazon AuroraSubnetID,

36
00:02:35.514 --> 00:02:41.745
the default Amazon AuroraMySQLPORT of 3306,

37
00:02:41.745 --> 00:02:47.478
an Amazon AuroraClusterEndPoint, an Amazon AuroraDBPassword,

38
00:02:47.478 --> 00:02:53.149
the availability zone that our Amazon Aurora subnet will use,

39
00:02:53.149 --> 00:02:59.302
the Amazon AuroraClusterUserName, the Amazon AuroraSecurityGroup,

40
00:02:59.302 --> 00:03:02.603
and the JDBCConnectionString.

41
00:03:02.603 --> 00:03:04.802
Looking at all of these resources,

42
00:03:04.802 --> 00:03:09.202
you can see the benefits of using CloudFormation to

43
00:03:09.202 --> 00:03:12.211
build your infrastructure architecture.

44
00:03:12.211 --> 00:03:26.000
It would have taken us forever to manually configure these. In the next module, I'll cover the power of AWS Glue in detail.

