1
00:00:00,000 --> 00:00:00,662
Hi.

2
00:00:00,662 --> 00:00:03,308
It's Kim Schmidt again.

3
00:00:03,308 --> 00:00:10,002
In the last module, I gave you a quick introduction to S3 data lakes,

4
00:00:10,002 --> 00:00:13,537
Amazon Aurora Relational Database service,

5
00:00:13,537 --> 00:00:19,869
I introduced you to Globomantics, a global provider of NBA trivia,

6
00:00:19,869 --> 00:00:26,548
whose technology problems can be solved by using AWS Glue and Amazon Athena,

7
00:00:26,548 --> 00:00:32,483
and I introduced you to AWS Glue and Amazon Athena and

8
00:00:32,483 --> 00:00:35,223
explained the business problems that they solve.

9
00:00:35,223 --> 00:00:36,634
In this module,

10
00:00:36,634 --> 00:00:41,590
we'll begin to build our cloud infrastructure and set up other cloud

11
00:00:41,590 --> 00:00:45,391
assets needed to work with AWS Glue and Amazon Athena.

12
00:00:45,391 --> 00:00:49,716
We'll be populating a relational database since most of you

13
00:00:49,716 --> 00:00:54,506
are familiar with relational databases, at the end of this module,

14
00:00:54,506 --> 00:00:57,959
the Amazon Aurora database will be ready to be crawled to

15
00:00:57,959 --> 00:01:02,321
create a table in the Glue data catalog to be used for

16
00:01:02,321 --> 00:01:06,059
analytics with Amazon Athena.

17
00:01:06,059 --> 00:01:07,402
For the sake of time,

18
00:01:07,402 --> 00:01:11,321
we'll be using Amazon CloudFormation to set up the necessary

19
00:01:11,321 --> 00:01:15,651
infrastructure for us throughout this course.

20
00:01:15,651 --> 00:01:17,286
So what is Amazon CloudFormation?

21
00:01:17,286 --> 00:01:20,900
CloudFormation is one of my favorite AWS services because

22
00:01:20,900 --> 00:01:23,787
once you know how to use it correctly,

23
00:01:23,787 --> 00:01:28,676
it monumentally reduces the time needed to create your infrastructure.

24
00:01:28,676 --> 00:01:32,475
You don't need to individually create and configure AWS

25
00:01:32,475 --> 00:01:36,793
resources and figure out what's dependent on what.

26
00:01:36,793 --> 00:01:40,416
AWS CloudFormation handles all of that.

27
00:01:40,416 --> 00:01:41,906
Using JSON on YAML,

28
00:01:41,906 --> 00:01:44,926
you can describe all the necessary resources and

29
00:01:44,926 --> 00:01:47,915
their properties in a text file.

30
00:01:47,915 --> 00:01:48,958
You can use parameters,

31
00:01:48,958 --> 00:01:54,906
which are input values you supply to the CloudFormation stack at runtime

32
00:01:54,906 --> 00:01:58,474
to initiate some important parts of the infrastructure.

33
00:01:58,474 --> 00:02:02,018
Once your template functions the way you want it to,

34
00:02:02,018 --> 00:02:03,107
you deploy the template,

35
00:02:03,107 --> 00:02:08,168
which provides infrastructure as code as a CloudFormation stack.

36
00:02:08,168 --> 00:02:13,302
A stack is a collection of AWS resources that you manage as a single unit,

37
00:02:13,302 --> 00:02:17,472
and once it's created, it lives in an Amazon S3 bucket.

38
00:02:17,472 --> 00:02:22,653
You can create your own custom template in the AWS

39
00:02:22,653 --> 00:02:26,576
CloudFormation Management Console, or through AWS APIs,

40
00:02:26,576 --> 00:02:30,201
or through the AWS Command Line Interface.

41
00:02:30,201 --> 00:02:33,606
You can declare output values that you can import

42
00:02:33,606 --> 00:02:36,889
into other CloudFormation stacks.

43
00:02:36,889 --> 00:02:40,009
Output values are returned in response to stack calls,

44
00:02:40,009 --> 00:02:43,179
or they can be viewed in the console.

45
00:02:43,179 --> 00:02:47,460
A common example would be to output the name of an S3 bucket for

46
00:02:47,460 --> 00:02:50,336
a stack to make the bucket easier to find.

47
00:02:50,336 --> 00:02:51,535
After you deploy your stack,

48
00:02:51,535 --> 00:02:56,601
you'll want to ensure all resources are created as you coded them.

49
00:02:56,601 --> 00:03:00,825
You'll need to open the folder you downloaded from my CloudLeader's

50
00:03:00,825 --> 00:03:05,050
GitHub repository that contains the code-related course assets I

51
00:03:05,050 --> 00:03:10,394
instructed you to do in the module about prerequisites.

52
00:03:10,394 --> 00:03:16,025
We're going to use the AuroraStack.yml script to

53
00:03:16,025 --> 00:03:19,271
create our Aurora CloudFormation stack.

54
00:03:19,271 --> 00:03:24,450
Before we start the first demo, type into Google what's my ip.

55
00:03:24,450 --> 00:03:28,787
You'll get a result that has a format similar to the red

56
00:03:28,787 --> 00:03:31,829
fake IP address shown on this slide.

57
00:03:31,829 --> 00:03:35,451
I obscured my IP address for security reasons.

58
00:03:35,451 --> 00:03:46,000
The next section is a demo section where we'll build our first relational database infrastructure using Amazon CloudFormation.

