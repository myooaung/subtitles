WEBVTT
1
00:00:02.356 --> 00:00:06.307
Let's now look at how Glue crawlers work.

2
00:00:06.307 --> 00:00:10.929
In the AWS Glue Console, under the Crawlers section,

3
00:00:10.929 --> 00:00:14.706
you'll see any crawlers that were created.

4
00:00:14.706 --> 00:00:19.603
If you click on the crawler name, it takes you to the Crawler Detail console.

5
00:00:19.603 --> 00:00:24.975
What you see on this slide is the resulting crawler details of the AuroraStack

6
00:00:24.975 --> 00:00:30.343
and from the Glue stack that we'll build in the next module.

7
00:00:30.343 --> 00:00:33.499
You can see the crawler name, the Aurora database name,

8
00:00:33.499 --> 00:00:37.622
the Glue Service role, the Include path,

9
00:00:37.622 --> 00:00:40.394
and the Glue connection.

10
00:00:40.394 --> 00:00:43.929
The Data store connection information was populated by the AuroraStack,

11
00:00:43.929 --> 00:00:48.840
which is a JDBC connection type.

12
00:00:48.840 --> 00:00:51.600
There are four ways you can populate the Glue Data Catalog,

13
00:00:51.600 --> 00:00:56.344
but we're going to focus on the best way to do this,

14
00:00:56.344 --> 00:00:58.566
by cataloging tables with a crawler.

15
00:00:58.566 --> 00:01:04.572
The AWS Glue Data Catalog contains references to data that is used as

16
00:01:04.572 --> 00:01:10.397
sources and targets of your ETL jobs in AWS Glue.

17
00:01:10.397 --> 00:01:13.207
Catalog data is an index to the location,

18
00:01:13.207 --> 00:01:17.849
schema, and runtime metrics of your data.

19
00:01:17.849 --> 00:01:24.861
You use the information in the data catalog to create and monitor your ETL jobs.

20
00:01:24.861 --> 00:01:30.932
Typically, you run a crawler to take inventory of the data in your data stores.

21
00:01:30.932 --> 00:01:34.121
A crawler first runs any customer classifiers you choose

22
00:01:34.121 --> 00:01:36.923
to infer the schema of the data from.

23
00:01:36.923 --> 00:01:40.235
They run in the order that you specify.

24
00:01:40.235 --> 00:01:44.961
If no custom classifiers match your data schema,

25
00:01:44.961 --> 00:01:48.531
built-in classifiers try to recognize the schema.

26
00:01:48.531 --> 00:01:52.301
The crawler connects to the data store,

27
00:01:52.301 --> 00:01:56.178
some data stores require connection properties for crawler access.

28
00:01:56.178 --> 00:02:00.136
The inferred schema is created for your data.

29
00:02:00.136 --> 00:02:04.214
The crawler writes metadata to the data catalog.

30
00:02:04.214 --> 00:02:10.209
A table definition contains metadata about the data in your data store.

31
00:02:10.209 --> 00:02:11.772
The table is written to a database,

32
00:02:11.772 --> 00:02:15.651
which is a container of tables in the data catalog.

33
00:02:15.651 --> 00:02:18.458
Once your data store is in the Glue Data Catalog,

34
00:02:18.458 --> 00:02:24.748
crawlers will still keep that data in sync with any changes

35
00:02:24.748 --> 00:02:27.110
performed on the underlying data store.

36
00:02:27.110 --> 00:02:30.083
The title of this section is borrowed from Gartner,

37
00:02:30.083 --> 00:02:35.127
Data Catalogs are the New Black in Data Management and Analytics.

38
00:02:35.127 --> 00:02:39.032
The reason Gartner could make such a bold claim is this,

39
00:02:39.032 --> 00:02:43.898
it is a testament on how businesses are embracing data lakes,

40
00:02:43.898 --> 00:02:49.452
where data catalogs provide the capacity to scale beyond narrow use case

41
00:02:49.452 --> 00:02:55.123
requirements in order to support strategic data and analytics needs by

42
00:02:55.123 --> 00:03:00.176
ensuring they're connected to the broader enterprise metadata management

43
00:03:00.176 --> 00:03:02.563
and information governance programs.

44
00:03:02.563 --> 00:03:06.470
Let's look at the almighty Glue Data Catalog and

45
00:03:06.470 --> 00:03:09.510
some of its benefits and features.

46
00:03:09.510 --> 00:03:13.972
Each AWS account has one AWS Glue Data Catalog.

47
00:03:13.972 --> 00:03:19.563
It provides a uniform repository where disparate systems can store and

48
00:03:19.563 --> 00:03:24.338
find metadata to keep track of data in data silos,

49
00:03:24.338 --> 00:03:27.770
and use that metadata to query and transform the data.

50
00:03:27.770 --> 00:03:33.784
The AWS Glue Data Catalog is your fully-managed persistent metadata store.

51
00:03:33.784 --> 00:03:41.547
It lets you store, annotate, and share metadata in the AWS cloud.

52
00:03:41.547 --> 00:03:46.275
In the AWS Glue Console, you can search and filter lists of Glue objects.

53
00:03:46.275 --> 00:03:53.538
AWS Glue uses the JDBC protocol to access several types of data stores.

54
00:03:53.538 --> 00:03:56.576
When you set up crawlers to scan data,

55
00:03:56.576 --> 00:03:58.710
classifications are used and store the

56
00:03:58.710 --> 00:04:02.386
classification metadata in the Glue catalog.

57
00:04:02.386 --> 00:04:07.171
From there, it can be used to guide ETL operations.

58
00:04:07.171 --> 00:04:09.835
Glue crawlers are one of my favorite Glue features.

59
00:04:09.835 --> 00:04:14.290
It's like having you very own time machine,

60
00:04:14.290 --> 00:04:15.799
they remember, ooh,

61
00:04:15.799 --> 00:04:20.976
or keep versions of every iteration of every change made to

62
00:04:20.976 --> 00:04:23.969
the underlying datasets automatically.

63
00:04:23.969 --> 00:04:27.641
This enables you to easily spot when changes are made,

64
00:04:27.641 --> 00:04:31.860
and, if necessary, role back to what versions you prefer,

65
00:04:31.860 --> 00:04:35.655
as well as being able to restore older versions.

66
00:04:35.655 --> 00:04:40.487
Let's now look at Glue's databases and tables.

67
00:04:40.487 --> 00:04:44.551
This is a screenshot of the sakila database that we created with

68
00:04:44.551 --> 00:04:48.863
our third-party SQL client in the last module.

69
00:04:48.863 --> 00:04:51.681
Here it's shown in the Glue Data Catalog.

70
00:04:51.681 --> 00:04:55.591
To create a new database in the Glue Console,

71
00:04:55.591 --> 00:05:00.487
choose Add database, and provide a name and description.

72
00:05:00.487 --> 00:05:06.105
A database in the AWS Glue Data Catalog is a container that holds tables.

73
00:05:06.105 --> 00:05:10.698
You use databases to organize your tables into separate categories.

74
00:05:10.698 --> 00:05:15.068
When you define a table in AWS Glue,

75
00:05:15.068 --> 00:05:19.529
you also specify the value of a classification field.

76
00:05:19.529 --> 00:05:21.910
Your database can contain tables that define data

77
00:05:21.910 --> 00:05:24.233
from many different data stores.

78
00:05:24.233 --> 00:05:29.519
The list of tables in a database in the Glue Data Catalog also shows

79
00:05:29.519 --> 00:05:34.855
you a pointer to the location of each data store that the table

80
00:05:34.855 --> 00:05:37.950
definition represents as metadata only.

81
00:05:37.950 --> 00:05:39.883
In the next section,

82
00:05:39.883 --> 00:05:44.727
we'll quickly overview how to prepare your raw data for downstream consumption,

83
00:05:44.727 --> 00:06:00.000
and some of the cost savings associated with that, and how and why to use DynamicFrames.

