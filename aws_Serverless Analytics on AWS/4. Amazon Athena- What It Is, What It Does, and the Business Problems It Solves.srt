1
00:00:01,314 --> 00:00:03,686
In this section, I'll go over Amazon Athena,

2
00:00:03,686 --> 00:00:09,008
what it is, what it does, and what business problems it solves.

3
00:00:09,008 --> 00:00:11,003
So what is Amazon Athena?

4
00:00:11,003 --> 00:00:15,312
Amazon Athena is an interactive query service that makes it

5
00:00:15,312 --> 00:00:19,086
easy to analyze data directly in Amazon S3.

6
00:00:19,086 --> 00:00:20,058
With Athena,

7
00:00:20,058 --> 00:00:25,796
there's no need for complex ETL jobs to prepare your data for analysis.

8
00:00:25,796 --> 00:00:29,678
This makes it easy for anyone with SQL skills to

9
00:00:29,678 --> 00:00:31,627
quickly analyze large-scale datasets.

10
00:00:31,627 --> 00:00:33,558
Amazon Athena uses Presto,

11
00:00:33,558 --> 00:00:37,664
an open-source distributed SQL query engine optimized for

12
00:00:37,664 --> 00:00:41,291
low-latency ad hoc analysis of data.

13
00:00:41,291 --> 00:00:45,971
You can use Athena to run ad hoc queries using ANSI SQL without the

14
00:00:45,971 --> 00:00:49,284
need to aggregate or load the data into Athena,

15
00:00:49,284 --> 00:00:52,823
with full support for large joins, window functions,

16
00:00:52,823 --> 00:00:54,085
and arrays.

17
00:00:54,085 --> 00:00:57,446
Athena helps you analyze unstructured, semi-structured,

18
00:00:57,446 --> 00:01:01,399
and structured data stored in Amazon S3.

19
00:01:01,399 --> 00:01:04,485
Examples include SVC, JSON,

20
00:01:04,485 --> 00:01:09,753
or columnar data formats such as Apache Parquet and Apache ORC.

21
00:01:09,753 --> 00:01:13,484
Athena is fast, really fast.

22
00:01:13,484 --> 00:01:13,621
Beep-beep.

23
00:01:13,621 --> 00:01:16,262
You don't have to worry about having enough compute resources

24
00:01:16,262 --> 00:01:19,189
to get fast interactive query performance.

25
00:01:19,189 --> 00:01:22,849
Amazon Athena automatically executes queries in parallel,

26
00:01:22,849 --> 00:01:26,103
so most of the results come back within seconds,

27
00:01:26,103 --> 00:01:29,806
even for large datasets or complex queries.

28
00:01:29,806 --> 00:01:30,618
With Amazon Athena,

29
00:01:30,618 --> 00:01:34,321
you don't have to worry about managing or tuning

30
00:01:34,321 --> 00:01:36,857
clusters to get fast performance.

31
00:01:36,857 --> 00:01:40,567
Athena is optimized for fast performance with Amazon S3.

32
00:01:40,567 --> 00:01:46,303
Amazon Athena is highly available and executes queries using

33
00:01:46,303 --> 00:01:49,338
compute resources across multiple facilities,

34
00:01:49,338 --> 00:01:53,785
automatically routing queries appropriately if a

35
00:01:53,785 --> 00:01:55,824
particular facility is unreachable.

36
00:01:55,824 --> 00:01:59,853
Amazon Athena integrates out of the box with AWS Glue.

37
00:01:59,853 --> 00:02:02,468
With the Glue Data Catalog,

38
00:02:02,468 --> 00:02:08,226
you'll be able to create a unified metadata repository across various services,

39
00:02:08,226 --> 00:02:12,513
crawl data sources to discover and populate your Data Catalog with

40
00:02:12,513 --> 00:02:15,585
new and modified table and partition definitions,

41
00:02:15,585 --> 00:02:18,289
and maintain schema versioning.

42
00:02:18,289 --> 00:02:21,994
You can also use Glue's fully-managed ETL capabilities to

43
00:02:21,994 --> 00:02:26,620
transform data or convert it into columnar formats to optimize

44
00:02:26,620 --> 00:02:29,961
query performance and reduce costs.

45
00:02:29,961 --> 00:02:35,583
This conceptual diagram illustrates Athena's concepts in action.

46
00:02:35,583 --> 00:02:45,203
An AWS Glue crawler crawls the raw dataset in an S3 raw zone bucket.

47
00:02:45,203 --> 00:02:49,796
The crawler writes metadata into the AWS Glue Data Catalog.

48
00:02:49,796 --> 00:02:53,612
You query those raw datasets in Athena.

49
00:02:53,612 --> 00:02:58,867
Athena uses schema definition to read raw datasets

50
00:02:58,867 --> 00:03:04,309
from S3 and then returns the results.

51
00:03:04,309 --> 00:03:08,058
Athena solves the business problems associated with querying

52
00:03:08,058 --> 00:03:12,839
heterogenous data without the need to first perform ETL.

53
00:03:12,839 --> 00:03:20,003
Insights can be extracted immediately from any data and acted upon in real time.

54
00:03:20,003 --> 00:03:21,930
Athena is an interactive query service.

55
00:03:21,930 --> 00:03:28,366
This makes it easy to analyze data directly in S3 using standard SQL.

56
00:03:28,366 --> 00:03:34,337
Athena can process unstructured, semi-structured, and structured datasets.

57
00:03:34,337 --> 00:03:41,152
Athena is serverless, there's no infrastructure to manage what so ever.

58
00:03:41,152 --> 00:03:42,590
Athena scales automatically,

59
00:03:42,590 --> 00:03:49,216
giving fast results even with large datasets and complex queries.

60
00:03:49,216 --> 00:03:55,228
Athena executes queries in parallel, so results are returned in seconds.

61
00:03:55,228 --> 00:03:58,431
Athena can query encrypted data in S3 and write

62
00:03:58,431 --> 00:04:01,856
encrypted data back to another S3 bucket.

63
00:04:01,856 --> 00:04:05,928
In the next section, I'll introduce you to Globomantics,

64
00:04:05,928 --> 00:04:10,118
an NBA trivia provider,

65
00:04:10,118 --> 00:04:18,000
that's having technical problems that we can solve with AWS Glue and Amazon Athena.

