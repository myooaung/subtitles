1
1

00:00:01,347  -->  00:00:02,202
<v Instructor>Hello everyone.</v>
2

2

00:00:02,202  -->  00:00:03,931
In this lecture, we're gonna go over quickly
3

3

00:00:03,931  -->  00:00:06,663
the iterators and generators homework assignment.
4

4

00:00:06,663  -->  00:00:08,725
So the first problem, I want you to create a generator
5

5

00:00:08,725  -->  00:00:12,474
that generates the squares of numbers up to some number N.
6

6

00:00:12,474  -->  00:00:15,061
So fill this generator equation here,
7

7

00:00:15,061  -->  00:00:16,868
or this function, excuse me,
8

8

00:00:16,868  -->  00:00:18,832
and pass, remember it should use some sort of
9

9

00:00:18,832  -->  00:00:20,380
yield statement.
10

10

00:00:20,380  -->  00:00:24,499
So if I use it, for example, I can say for x in gensquares,
11

11

00:00:24,499  -->  00:00:26,135
print x.
12

12

00:00:26,135  -->  00:00:29,022
Okay, problem two, I want you to create a generator
13

13

00:00:29,022  -->  00:00:32,005
that yields n random numbers between a low
14

14

00:00:32,005  -->  00:00:34,716
and a high number that are inputs.
15

15

00:00:34,716  -->  00:00:38,275
So I made a note that use the random library.
16

16

00:00:38,275  -->  00:00:40,402
You can do that by this line right here,
17

17

00:00:40,402  -->  00:00:41,972
import random,
18

18

00:00:41,972  -->  00:00:46,452
and then you can use random.randint with two numbers,
19

19

00:00:46,452  -->  00:00:47,942
a low and a high,
20

20

00:00:47,942  -->  00:00:51,540
and it'll output a random number between
21

21

00:00:51,540  -->  00:00:53,552
the low and the high.
22

22

00:00:53,552  -->  00:00:57,212
So that's what I want you to use in this function.
23

23

00:00:57,212  -->  00:01:00,351
And I want you to use it to yield, or generate,
24

24

00:01:00,351  -->  00:01:01,518
those numbers,
25

25

00:01:02,732  -->  00:01:05,712
and then you can use it to make sure your code runs
26

26

00:01:05,712  -->  00:01:06,672
similar to this.
27

27

00:01:06,672  -->  00:01:08,422
Obviously, these numbers won't be exactly the same
28

28

00:01:08,422  -->  00:01:11,442
because you're randomly generating them.
29

29

00:01:11,442  -->  00:01:14,082
Problem three, I want you to use the iter function
30

30

00:01:14,082  -->  00:01:18,442
to convert the string below into an iterator.
31

31

00:01:18,442  -->  00:01:20,822
Problem four, I want you to explain a use case
32

32

00:01:20,822  -->  00:01:23,122
for a generator using a yield statement
33

33

00:01:23,122  -->  00:01:24,500
where you wouldn't want to use a normal function
34

34

00:01:24,500  -->  00:01:26,946
with a return statement.
35

35

00:01:26,946  -->  00:01:30,167
Then extra credit, what I want you to do is explain
36

36

00:01:30,167  -->  00:01:32,142
what gencomp is doing here.
37

37

00:01:32,142  -->  00:01:34,247
So we haven't actually covered this yet,
38

38

00:01:34,247  -->  00:01:36,746
but you may have to do some Googling on stack overflowing
39

39

00:01:36,746  -->  00:01:40,196
to understand what this line is actually doing.
40

40

00:01:40,196  -->  00:01:42,647
A quick hint, maybe you should Google what a
41

41

00:01:42,647  -->  00:01:45,218
generator comprehension is.
42

42

00:01:45,218  -->  00:01:48,502
Okay, that's it for the iterations and generations,
43

43

00:01:48,502  -->  00:01:51,407
or excuse me, iterators and generators home assignment.
44

44

00:01:51,407  -->  00:01:52,662
Best of luck,
45

45

00:01:52,662  -->  00:01:55,745
and I'll see you in the next lecture.
