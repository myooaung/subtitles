WEBVTT
1
00:00:05.580 --> 00:00:06.700
Selamat datang kembali semuanya.

2
00:00:06.780 --> 00:00:11.020
Mari kita tidak sering membahas pemformatan string untuk dicetak.

3
00:00:11.030 --> 00:00:15.590
Anda ingin dapat menyuntikkan variabel ke dalam string untuk dicetak.

4
00:00:15.590 --> 00:00:17.560
Jadi kita sudah belajar tentang penggabungan.

5
00:00:17.690 --> 00:00:22.040
Misalnya Anda mungkin memiliki variabel bernama nama saya sama dengan Jose dan Anda ingin mencetak frasa.

6
00:00:22.040 --> 00:00:23.040
Halo Jose.

7
00:00:23.090 --> 00:00:25.310
Jadi apa yang akhirnya Anda lakukan adalah mengatakan Pangeran.

8
00:00:25.460 --> 00:00:30.170
Dan kemudian di dalam fungsi cetak itu Anda menyapa dan menggabungkannya dengan variabel nama saya.

9
00:00:30.170 --> 00:00:34.370
Sekarang sebenarnya ada beberapa cara untuk memformat string untuk mencetak variabel di dalamnya sehingga Anda

10
00:00:34.370 --> 00:00:37.190
tidak harus terus-menerus menggunakan gabungan ini atau tanda tambah.

11
00:00:37.430 --> 00:00:41.840
Dan ini secara umum dikenal sebagai interpelasi string yang pada dasarnya hanya cara yang

12
00:00:41.840 --> 00:00:47.490
sangat mewah untuk mengatakan stick variabel ke dalam string sehingga kita akan mengeksplorasi dua metode untuk melakukan ini.

13
00:00:47.510 --> 00:00:52.920
Salah satunya adalah metode format dan yang lainnya adalah metode string yang merupakan singkatan dari string literal yang diformat.

14
00:00:53.060 --> 00:00:56.830
Dan ini adalah metode yang lebih baru untuk beberapa versi Python 3 yang lebih baru.

15
00:00:56.870 --> 00:01:01.160
Saya pribadi lebih suka metode format itu tetapi mari kita lanjutkan dan tunjukkan kepada Anda berdua dan

16
00:01:01.160 --> 00:01:03.200
Anda dapat memutuskan mana yang lebih gaya Anda.

17
00:01:03.200 --> 00:01:04.060
Mari kita mulai.

18
00:01:04.240 --> 00:01:04.500
BAIK.

19
00:01:04.520 --> 00:01:10.330
Mari kita mulai dengan membahas metode format dan sintaks dasar untuk ini, Anda akan menentukan string Anda

20
00:01:10.340 --> 00:01:16.400
dan kemudian di dalam string Anda, Anda akan memiliki kurung kurawal khusus sebagai pengganti untuk variabel yang

21
00:01:16.400 --> 00:01:20.950
akan Anda masukkan dan kemudian tulis string yang Anda sebut format itu.

22
00:01:21.110 --> 00:01:26.510
Dan kemudian di dalam ini Anda akan memanggil string atau variabel yang ingin Anda masukkan ke

23
00:01:26.510 --> 00:01:27.400
string Anda.

24
00:01:27.410 --> 00:01:29.590
Mari kita telusuri banyak contoh di sini.

25
00:01:29.660 --> 00:01:36.050
Kita akan mulai dari contoh paling mendasar yang hanya mengatakan ini adalah string yang akan membuka dan menutup kurung

26
00:01:36.050 --> 00:01:37.390
kurawal di sana.

27
00:01:37.550 --> 00:01:40.660
Dan tepat setelah string kita akan memanggil format itu.

28
00:01:40.670 --> 00:01:45.840
Jadi perhatikan bagaimana titik menyentuh string di sana dan kemudian string apa pun yang ingin Anda masukkan.

29
00:01:45.880 --> 00:01:53.210
Jadi untuk membuatnya benar-benar jelas saya akan dimasukkan ke dalam semua topi yang dimasukkan jalankan ini dan saya melihat ini adalah string

30
00:01:53.540 --> 00:01:54.310
yang dimasukkan.

31
00:01:54.530 --> 00:02:00.650
Jadi dengan metode format DOT telah dilakukan adalah ambil string dan masukkan di mana ia melihat kurung

32
00:02:00.650 --> 00:02:01.770
kurawal itu.

33
00:02:01.850 --> 00:02:05.810
Jadi ada beberapa keuntungan di sini dan kita akan membahas semuanya.

34
00:02:05.810 --> 00:02:10.080
Satu keuntungan adalah bahwa string sebenarnya dapat dimasukkan oleh posisi indeks.

35
00:02:10.460 --> 00:02:12.770
Mari kita bayangkan kita ingin memasukkan banyak hal.

36
00:02:12.770 --> 00:02:17.680
Kita akan mengatakan kawat gigi keriting kawat gigi keriting kawat gigi keriting.

37
00:02:18.020 --> 00:02:21.380
Kemudian ucapkan format

38
00:02:23.740 --> 00:02:28.180
itu dan ucapkan Fox Brown.

39
00:02:28.590 --> 00:02:34.560
Sekarang yang terjadi pada dasarnya format itu akan memasukkan string dalam urutan yang sama.

40
00:02:34.590 --> 00:02:37.620
Anda memasok mereka dan ke kurung kurawal ini.

41
00:02:37.620 --> 00:02:40.630
Jadi sekarang kita punya rubah Brown dengan cepat.

42
00:02:40.700 --> 00:02:46.200
Apa yang akan menyenangkan adalah jika kita benar-benar memiliki pengertian tata bahasa yang masuk akal yang akan

43
00:02:46.290 --> 00:02:53.760
menjadi rubah cokelat cepat. Nah yang dapat kita lakukan didasarkan pada posisi indeks di dalam pemanggilan format ini. Saya dapat menyediakan angka-angka itu

44
00:02:53.760 --> 00:02:55.800
dalam urutan yang saya inginkan.

45
00:02:55.800 --> 00:02:58.550
Jadi kata pertama yang saya inginkan sebenarnya cepat.

46
00:02:58.590 --> 00:03:02.510
Jadi ini juga dalam eksposisi karena 0 1 2.

47
00:03:02.760 --> 00:03:09.150
Jadi saya akan mengatakan Oke dua yang pertama di sini dan kemudian yang saya inginkan akan menjadi cokelat.

48
00:03:09.150 --> 00:03:13.810
Jadi itu posisi 1 jadi 0 1 dan kemudian kata pertama.

49
00:03:13.810 --> 00:03:17.190
Indeks rubah 0 di sini akan menjadi yang terakhir yang saya inginkan.

50
00:03:18.280 --> 00:03:20.200
Dan kemudian ketika saya menjalankan ini saya kembali.

51
00:03:20.200 --> 00:03:21.930
Rubah cokelat cepat.

52
00:03:22.000 --> 00:03:24.610
Yang juga sangat menyenangkan adalah saya benar-benar dapat mengulanginya.

53
00:03:24.670 --> 00:03:31.630
Jadi jika saya ingin mengatakan Fox Fox, saya bisa mengatakan 0 0 0 di sini jalankan ini

54
00:03:31.630 --> 00:03:38.820
dan sekarang saya punya Fox Fox jadi saya bisa bermain-main dengan ini jika saya ingin bekerja berdasarkan penjelasan.

55
00:03:38.830 --> 00:03:43.270
Sekarang juga bagus adalah bahwa saya tidak hanya dapat membatalkan beberapa hal dari posisi indeks.

56
00:03:43.420 --> 00:03:49.420
Saya juga dapat menetapkan mereka kata kunci dan kemudian hanya memanggil kata kunci karena di sini karena saya bekerja dengan ini

57
00:03:49.570 --> 00:03:54.700
tidak ada indikasi nyata bahwa nol adalah Fox dan berkata saya harus melihat ke sini dan mengatakan OK

58
00:03:54.700 --> 00:03:55.730
apa kata pertama.

59
00:03:55.900 --> 00:03:57.400
Yang bisa saya lakukan adalah menetapkan kata kunci.

60
00:03:57.430 --> 00:03:58.330
Jadi mari kita lakukan ini.

61
00:03:58.330 --> 00:04:05.320
Kita akan mengatur kurung kurawal kurung kurawal kurawal mengatakan format dan kemudian dalam panggilan format yang sedang

62
00:04:05.500 --> 00:04:12.130
berlangsung katakan F sama dengan string Fox sehingga Anda dapat menganggap ini sebagai tugas variabel

63
00:04:12.130 --> 00:04:21.400
dan kemudian kita akan mengatakan menjadi sama dengan Brown akan mengatakan que sama dengan cepat dan kemudian saya bisa menggunakan nama-nama variabel

64
00:04:21.550 --> 00:04:22.980
ini di sini.

65
00:04:23.010 --> 00:04:25.720
F. B dan Q untuk memasukkannya.

66
00:04:25.730 --> 00:04:30.130
Jadi pada dasarnya menggunakan kata kunci ini sebagai nama variabel di sini dan memasukkannya seperti itu.

67
00:04:30.130 --> 00:04:36.870
Jadi alih-alih ini yang sedang berlangsung, katakan antrian.

68
00:04:37.710 --> 00:04:39.210
Dan kemudian ketika saya menjalankan ini saya kembali.

69
00:04:39.210 --> 00:04:44.790
Rubah cokelat cepat dan ini bahkan lebih bagus dari sebelumnya karena sedikit lebih mudah dibaca oleh orang yang

70
00:04:44.790 --> 00:04:45.860
menggunakannya seperti ok.

71
00:04:45.870 --> 00:04:47.290
Q adalah singkatan dari quick.

72
00:04:47.370 --> 00:04:51.130
Daripada harus melihat ke belakang dan tanyakan pada diri Anda baik-baik saja apa yang ada di posisi ini juga.

73
00:04:51.270 --> 00:04:52.980
Dan kemudian datang ke sini untuk memformat.

74
00:04:53.040 --> 00:04:55.140
Jadi ini bisa menggunakan kata kunci ini.

75
00:04:55.320 --> 00:04:58.240
Dan saya sendiri sebenarnya lebih suka dengan cara ini.

76
00:05:00.170 --> 00:05:05.240
Dan apa yang juga sangat baik tentang ini jika sekali lagi karena beberapa alasan Anda ingin

77
00:05:05.240 --> 00:05:11.860
mengatakan Fox Fox Fox Anda bisa mengetikkan F di sini ke masing-masing kawat gigi ini dan Anda akan mendapatkan kembali Fox Fox Fox.

78
00:05:11.960 --> 00:05:14.910
Jadi sekali lagi menggunakan kata kunci Anda dapat menggunakan pengulangan dengan mudah.

79
00:05:15.300 --> 00:05:15.620
BAIK.

80
00:05:15.620 --> 00:05:21.140
Untuk mengakhiri diskusi kami tentang metode forment, saya ingin secara singkat berbicara tentang format float

81
00:05:21.140 --> 00:05:26.660
dengan metode format DOT dan pada dasarnya ini memungkinkan Anda untuk menyesuaikan lebar dan ketepatan

82
00:05:26.660 --> 00:05:28.140
nomor floating point Anda.

83
00:05:28.360 --> 00:05:34.040
Mari kita mulai contoh kita akan mengatakan hasilnya sama dengan 100 dibagi dengan 7 7 7.

84
00:05:34.060 --> 00:05:39.900
Jadi seperti yang Anda harapkan hasil ini adalah angka dengan satu ton desimal setelahnya.

85
00:05:40.090 --> 00:05:44.980
Yang bisa kita lakukan adalah kita dapat benar-benar ketika kita mencetak ini mengubah tingkat presisi yang

86
00:05:45.340 --> 00:05:48.260
kita inginkan dan bahkan mengubah lebar angka itu sendiri.

87
00:05:49.030 --> 00:05:52.610
Jadi kita akan memulai dengan mengatakan Pangeran.

88
00:05:52.790 --> 00:06:03.220
Hasilnya adalah kemudian buka dan tutup kurung kurawal mengatakan format itu dan kemudian di sini akan mengatakan hasil menjalankan ini.

89
00:06:03.220 --> 00:06:04.570
Dan kami melihat hasilnya.

90
00:06:04.600 --> 00:06:07.630
Dan pada dasarnya angka presisi yang besar ini.

91
00:06:07.780 --> 00:06:14.170
Yang bisa saya lakukan adalah mengatakan R sama dengan hasil dan kemudian lewat dan berada di dalam kurung kurawal dan saya mendapatkan

92
00:06:14.170 --> 00:06:15.490
kembali hasil yang sama.

93
00:06:15.700 --> 00:06:20.850
Jadi cara pemformatan bekerja untuk pemformatan flute sejauh metode dot forment adalah Anda memberikan

94
00:06:20.860 --> 00:06:22.760
nilai yang Anda maksud.

95
00:06:22.780 --> 00:06:25.710
Jadi dalam hal ini ada di sini untuk melihat nama nilai aktual.

96
00:06:25.840 --> 00:06:32.050
Kemudian Anda menulis titik dua dan kemudian Anda menulis dengan nilai yang Anda inginkan titik dan kemudian nilai presisi yang

97
00:06:32.050 --> 00:06:37.550
ingin dan kemudian pada F dan sering Anda benar-benar akan peduli adalah presisi sebenarnya lebar hanya memungkinkan

98
00:06:37.570 --> 00:06:42.680
Anda untuk menambahkan jenis di beberapa spasi putih jika Anda memiliki nilai yang sangat besar.

99
00:06:42.730 --> 00:06:45.770
Jadi mari kita lakukan hal berikut yang akan kita katakan nilainya.

100
00:06:45.850 --> 00:06:47.910
Jadi itu usus kita.

101
00:06:48.010 --> 00:06:53.260
Kita akan mengatur kita hanya dengan satu dari satu titik dan kemudian tingkat presisi yang kita inginkan.

102
00:06:53.260 --> 00:06:56.320
Jadi ini terutama di mana Anda akan bermain-main dengan nilai presisi ini.

103
00:06:56.410 --> 00:06:56.970
Mari kita bayangkan.

104
00:06:56.980 --> 00:06:59.670
Saya hanya ingin tiga tempat melewati titik desimal.

105
00:06:59.710 --> 00:07:05.080
Jadi saya ingin satu dua dan kemudian sembilan karena itu akan berada di sekitar itu hingga 9 karena

106
00:07:05.080 --> 00:07:14.330
7 tepat di sebelahnya maka saya akan mengatakan 1. 3 jika saya menjalankan ini dan saya mendapatkan kembali 0. 1 hingga 9.

107
00:07:14.410 --> 00:07:19.540
Sekarang jika saya bermain-main dengan ini dengan nilai dan membuatnya sangat besar apa yang akhirnya terjadi

108
00:07:19.540 --> 00:07:21.240
adalah Anda akhirnya menambahkan spasi.

109
00:07:21.280 --> 00:07:27.490
Dan alasan untuk itu adalah karena pada dasarnya menggambarkan berapa panjang atau seberapa lebar Anda ingin seluruh

110
00:07:27.490 --> 00:07:29.000
nomor string ini.

111
00:07:29.080 --> 00:07:34.570
Itu tidak terlalu berguna karena Anda akhirnya menulis satu ton spasi, tetapi mungkin ada situasi tertentu di

112
00:07:34.660 --> 00:07:36.170
mana Anda ingin mengeditnya.

113
00:07:36.400 --> 00:07:40.930
Jadi tersedia di sini, tetapi sering kali apa yang akan Anda mainkan benar-benar presisi di

114
00:07:40.930 --> 00:07:41.460
sini.

115
00:07:41.560 --> 00:07:43.310
Jadi kita bisa membuat ini lima.

116
00:07:43.690 --> 00:07:44.710
Dan di sini kita bisa melihat.

117
00:07:44.710 --> 00:07:49.950
Sekarang kita mengambil lebih sedikit dari total dengan karena dengan spasi putih karena kita memiliki lebih

118
00:07:49.950 --> 00:07:54.870
banyak angka melewati titik desimal dan apa yang secara umum dapat Anda simpan sebagai satu.

119
00:07:54.970 --> 00:08:03.120
Tapi mari kita tunjukkan contoh lain kita akan mengatakan hasilnya sama dengan katakanlah 104 poin.

120
00:08:03.170 --> 00:08:05.130
Satu dua tiga empat lima.

121
00:08:05.250 --> 00:08:10.560
Jalankan itu dan kita dapat melihat di sini bahwa bahkan jika satu di sisi lain titik desimal pada dasarnya hal

122
00:08:10.860 --> 00:08:15.020
yang sama dan kita dapat menambahkannya di sekitar dan bermain di nilai titik mengambang ini.

123
00:08:15.370 --> 00:08:18.160
OK jadi itu mengapung format dengan titik untuk suatu metode.

124
00:08:18.210 --> 00:08:24.870
Sekali lagi itu adalah nilai Anda dengan dan benar-benar presisi Anda diikuti oleh F dan Anda dapat melihat notebook

125
00:08:24.870 --> 00:08:27.090
untuk lebih banyak contoh tentang ini.

126
00:08:27.090 --> 00:08:31.310
Akhirnya yang akan kita bicarakan adalah string dan ini adalah string literal yang diformat.

127
00:08:31.420 --> 00:08:36.930
Ini diperkenalkan dengan Python 3. 6 Jadi mereka masih sangat baru dan mereka menawarkan beberapa

128
00:08:36.960 --> 00:08:38.790
manfaat dibandingkan metode format lama ini.

129
00:08:38.790 --> 00:08:43.890
Saya biasanya lebih suka metode format dot tetapi banyak orang lebih suka metode string literal ini

130
00:08:43.890 --> 00:08:48.690
terutama jika mereka datang dari bahasa lain dan memungkinkan Anda lakukan pada dasarnya melewatkan langkah

131
00:08:48.690 --> 00:08:54.780
ini menggunakan format itu dan bukannya menulis hasil atau nama variabel apa pun yang Anda ingin langsung di dalam string.

132
00:08:54.780 --> 00:08:57.970
Jadi cara kita melakukannya adalah metode berikut akan membuat beberapa sel baru di sini.

133
00:09:00.080 --> 00:09:05.990
Saya akan mengatakan nama sama dengan Jose.

134
00:09:06.140 --> 00:09:06.750
Jalankan itu.

135
00:09:06.950 --> 00:09:11.500
Dan biasanya yang harus saya lakukan adalah menyapa.

136
00:09:11.750 --> 00:09:19.740
Namanya adalah dan kemudian saya akan mengatakan bahwa nama format saya menjalankan ini dan ia menyapa Nama-Nya adalah Jose.

137
00:09:19.970 --> 00:09:27.870
Nah yang bisa Anda lakukan adalah mengganti pemanggilan format dengan hanya mengetikkan F di depan string di sini

138
00:09:27.870 --> 00:09:32.880
dan kemudian Anda bisa memasukkan nama langsung ke string itu sendiri.

139
00:09:33.090 --> 00:09:35.520
Dan jika Anda menjalankan ini, Anda mendapatkan hasil yang sama.

140
00:09:35.520 --> 00:09:40.340
Jadi ini disebut string F atau string literal yang diformat dan ini baru.

141
00:09:40.350 --> 00:09:42.150
Python 3. 6.

142
00:09:42.150 --> 00:09:45.660
Dan banyak orang telah meminta fitur ini untuk waktu yang lama karena itu cukup umum

143
00:09:45.660 --> 00:09:46.650
dalam bahasa lain.

144
00:09:46.650 --> 00:09:50.460
Sekali lagi karena saya sekolah yang sedikit lebih tua, saya jadi terbiasa dengan metode format ini, itulah sebabnya

145
00:09:50.460 --> 00:09:51.180
saya sangat menyukainya.

146
00:09:51.180 --> 00:09:55.120
Tetapi jika Anda datang dari bahasa lain saya pasti akan menyarankan Anda memeriksa string.

147
00:09:55.170 --> 00:09:59.370
Banyak orang berpikir ini adalah peningkatan besar dibandingkan metode sebelumnya dan Anda dapat

148
00:09:59.370 --> 00:10:04.480
melihat mengapa sebenarnya sangat nyaman untuk dapat menulis nama variabel langsung di dalam kurung kurawal ini.

149
00:10:06.580 --> 00:10:09.030
Dan ini bekerja dengan banyak variabel.

150
00:10:09.220 --> 00:10:17.730
Jadi misalkan namanya Sam umur 3 tahun.

151
00:10:18.130 --> 00:10:22.450
Kita dapat mengatakan print F untuk membiarkan Python tahu string f-nya.

152
00:10:22.670 --> 00:10:23.340
Baik.

153
00:10:24.690 --> 00:10:25.960
Dalam kurung kurawal.

154
00:10:26.040 --> 00:10:32.250
Namanya kurung kurawal umurnya tahun.

155
00:10:32.480 --> 00:10:34.890
Dan jika kita menjalankan ini kita melihat Sam berusia tiga tahun.

156
00:10:34.970 --> 00:10:39.260
Jadi ini adalah cara yang sangat bagus untuk sangat cepat melakukan interpelasi string yang hanya

157
00:10:39.260 --> 00:10:41.880
menyuntikkan variabel-variabel ini ke dalam string itu sendiri.

158
00:10:42.290 --> 00:10:42.650
BAIK.

159
00:10:42.710 --> 00:10:45.160
Itulah dasar-dasar pemformatan string.

160
00:10:45.170 --> 00:10:48.240
Kami memiliki lebih banyak contoh di notebook jika Anda tertarik.

161
00:10:48.410 --> 00:10:52.160
Dan kami juga memiliki contoh beberapa metode pemformatan string yang lebih lama yang secara teknis

162
00:10:52.160 --> 00:10:57.560
masih berfungsi di Python 3 yang saya akan sangat menyarankan agar Anda menggunakan metode format dot atau jika Anda suka metode string baru

163
00:10:57.560 --> 00:10:57.930
ini.

164
00:10:57.950 --> 00:10:58.930
Gunakan itu juga.

165
00:10:59.120 --> 00:11:03.770
Saya ingin secara singkat menunjukkan kepada Anda seperti apa bentuk nopal untuk kuliah ini sehingga Anda dapat

166
00:11:03.770 --> 00:11:09.070
melihat di sini kami memiliki satu ton contoh format string untuk Anda memformat placeholder yang merupakan sesuatu yang dapat kita

167
00:11:09.080 --> 00:11:13.220
bicarakan tentang video ceramah ini karena metode ini cukup lama dan Saya benar-benar menyarankan

168
00:11:13.220 --> 00:11:17.920
Anda menggunakannya tetapi Anda juga dapat melihat bagaimana ia dapat menggunakan presisi dan padding untuk angka floating point.

169
00:11:17.930 --> 00:11:22.730
Kami juga memiliki lebih banyak contoh dengan metode format pemikiran memasukkan objek dengan eksposisi

170
00:11:22.820 --> 00:11:23.910
menggunakan mereka kembali.

171
00:11:23.930 --> 00:11:25.720
Kami juga memiliki presisi keberpihakan.

172
00:11:25.730 --> 00:11:29.840
Jadi semua hal ini, semua hal yang tidak akan kami gunakan selama kursus, tetapi tersedia untuk

173
00:11:29.840 --> 00:11:30.900
Anda di catatan.

174
00:11:31.010 --> 00:11:35.250
Jika Anda ingin menyelam jauh ke dalam topik ini, maka kami memiliki banyak contoh untuk Anda di sana.

175
00:11:35.540 --> 00:11:36.040
BAIK.

176
00:11:36.290 --> 00:11:40.010
Sekali lagi yang perlu Anda ketahui tentang pemformatan string untuk kursus ini adalah Anda

177
00:11:40.010 --> 00:11:46.010
dapat menggunakan string literal untuk menyuntikkan dan menafsirkan string dengan cara ini atau Anda dapat menggunakan metode format dot untuk menyuntikkan variabel

178
00:11:46.010 --> 00:11:47.050
dengan cara itu.

179
00:11:47.270 --> 00:11:47.640
BAIK.

180
00:11:47.660 --> 00:11:48.780
Semoga bermanfaat bagi Anda.

181
00:11:48.890 --> 00:11:49.910
Sampai jumpa di kuliah berikutnya.
