1
00:00:05,380 --> 00:00:09,980
Akan kembali sebelum kami menyelesaikan bagian ini dan menuju ke tes penilaian Anda.

2
00:00:09,980 --> 00:00:16,000
Saya ingin dengan cepat membahas konsep yang dikenal sebagai daftar daftar. Pemahaman adalah cara unik untuk

3
00:00:16,000 --> 00:00:18,520
membuat daftar dengan Python dengan cepat.

4
00:00:18,520 --> 00:00:22,990
Jadi jika Anda pernah dalam situasi di mana Anda menemukan diri Anda menggunakan for

5
00:00:23,320 --> 00:00:28,720
for bersama dengan pernyataan pena yang berulang-ulang melalui for for untuk membuat daftar daftar, pemahaman adalah alternatif yang

6
00:00:28,720 --> 00:00:30,000
baik untuk metode ini.

7
00:00:30,110 --> 00:00:31,440
Apa yang sebenarnya saya bicarakan.

8
00:00:31,570 --> 00:00:33,260
Mari kita beralih ke buku catatan Jupiter.

9
00:00:33,650 --> 00:00:41,620
OK, mari kita bayangkan bahwa kita memiliki string yang disebut string saya dan kita katakan itu halo dan saya ingin membuat daftar

10
00:00:41,710 --> 00:00:43,500
setiap karakter dalam ini

11
00:00:43,570 --> 00:00:54,320
Yang dapat Anda lakukan adalah mulai dengan daftar kosong seperti ini dan kemudian ucapkan empat huruf dalam string saya tambahkan surat ke daftar saya dan kemudian

12
00:00:56,330 --> 00:01:01,310
setelah menjalankan ini jika saya melihat seperti apa daftar saya sekarang.

13
00:01:02,860 --> 00:01:03,680
Saya kembali.

14
00:01:03,690 --> 00:01:05,230
Ya

15
00:01:06,090 --> 00:01:08,700
Jadi ini adalah sesuatu yang sangat umum dilakukan oleh pemula.

16
00:01:08,700 --> 00:01:14,370
Mereka membuat daftar kosong dan kemudian mereka beralih melalui beberapa iterable lainnya dan kemudian mereka menambahkan objek apa pun

17
00:01:14,370 --> 00:01:17,460
itu atau elemen apa pun yang ada di daftar mereka.

18
00:01:17,460 --> 00:01:22,680
Sebenarnya ada cara yang lebih efisien untuk melakukan ini dalam Python dan dengan efisien maksud saya

19
00:01:22,680 --> 00:01:25,980
mengambil lebih sedikit ruang dalam kode sejauh perhitungan yang sebenarnya.

20
00:01:25,980 --> 00:01:26,880
Hampir sama.

21
00:01:26,910 --> 00:01:31,010
Jadi jangan khawatir tentang menghemat waktu komputasi menggunakan metode ini.

22
00:01:31,050 --> 00:01:34,500
Jika Anda menemukan metode ini terlalu membingungkan, Anda selalu dapat kembali ke loop for.

23
00:01:34,540 --> 00:01:38,850
Tetapi izinkan saya menunjukkan kepada Anda bagaimana Anda dapat melakukan hal yang persis sama ini dalam satu baris.

24
00:01:38,850 --> 00:01:45,000
Apa yang Anda lakukan adalah Anda pada dasarnya memecah seluruh empat loop ini saya akan menyalin ini lagi di

25
00:01:45,000 --> 00:01:48,420
sini dan kemudian perlahan-lahan memecahnya menjadi dalam format daftar pemahaman.

26
00:01:48,690 --> 00:01:54,840
Jadi pertama-tama dari semua kode dan logika di sini dalam beberapa format sebenarnya akan masuk ke dalam kawat gigi ini dan pada dasarnya

27
00:01:55,260 --> 00:01:56,630
kita mengatur ulang ini.

28
00:01:56,640 --> 00:02:09,380
Kami mengatakan empat huruf di string saya, kami akan menghapus semua ini dan kemudian meletakkan huruf di sini.

29
00:02:09,380 --> 00:02:19,890
Jadi sekarang kita memiliki surat empat huruf di string saya cut disisipkan di sini jalankan itu dan sekarang kita memiliki hal

30
00:02:19,890 --> 00:02:21,520
yang sama persis.

31
00:02:22,500 --> 00:02:24,150
Jadi apa yang sebenarnya terjadi di sini.

32
00:02:24,210 --> 00:02:29,700
Logikanya pada dasarnya adalah perataan yang rata untuk loop karena kita akan menganggap bahwa satu-satunya tindakan yang

33
00:02:29,700 --> 00:02:34,960
diambil dalam perulangan ini hanya menambahkan elemen apa pun yang Anda inginkan ke daftar yang sama.

34
00:02:34,980 --> 00:02:41,550
Apa yang dilakukan pemahaman daftar adalah hanya dibutuhkan elemen untuk elemen-elemen dalam beberapa objek lain yang

35
00:02:41,550 --> 00:02:43,680
dapat diulang seperti daftar lain.

36
00:02:43,710 --> 00:02:53,890
Jadi, mari kita tunjukkan contoh lain, kita dapat mengatakan daftar saya sama dengan membuka dan menutup tanda kurung siku x

37
00:02:53,890 --> 00:03:01,210
untuk kata x dan kemudian jika saya memeriksa daftar saya, saya akan kembali.

38
00:03:01,360 --> 00:03:02,420
Dan seperti for for loop.

39
00:03:02,440 --> 00:03:03,720
Ini adalah variabel sementara bernama.

40
00:03:03,730 --> 00:03:05,060
Anda dapat menelepon apa pun yang Anda inginkan.

41
00:03:05,200 --> 00:03:08,760
Jadi kita bisa menyebutnya hanya GWV.

42
00:03:08,800 --> 00:03:12,380
Dan selama cocok di sini mari kita membuatnya bekerja.

43
00:03:12,410 --> 00:03:14,770
Kita dapat melihat apakah itu benar-benar berfungsi atau dua.

44
00:03:15,000 --> 00:03:22,200
Jadi sekali lagi itu hanya elemen empat elemen dan kemudian semacam daftar string atau objek lain yang dapat diubah.

45
00:03:22,350 --> 00:03:28,880
Jadi seringkali yang tidak terlihat seperti ini adalah daftar saya adalah membuka dan menutup kurung kurawal.

46
00:03:29,110 --> 00:03:36,500
Dan kemudian apa yang akan saya lakukan di sini mengatakan x untuk x dalam rentang 0 hingga 11.

47
00:03:36,530 --> 00:03:38,960
Jadi sekarang daftar saya adalah angka-angka aktual.

48
00:03:38,980 --> 00:03:43,670
Jadi, alih-alih mengatakan Excellent akan melakukannya mati rasa karena itu sedikit lebih jelas bagi saya.

49
00:03:44,800 --> 00:03:46,660
Jadi bagaimana meratakan itu untuk loop.

50
00:03:46,660 --> 00:03:49,020
Sekarang Anda mungkin bertanya-tanya, hanya inilah yang bisa saya lakukan.

51
00:03:49,240 --> 00:03:51,130
Dan itu sebenarnya tidak semua bisa dilakukan.

52
00:03:51,130 --> 00:03:56,920
Bahkan Anda dapat mulai melakukan operasi pada nama variabel pertama ini.

53
00:03:56,980 --> 00:04:02,950
Jadi jika saya ingin mengambil kuadrat dari setiap angka dalam rentang itu yang bisa saya lakukan adalah melakukan operasi di

54
00:04:02,950 --> 00:04:03,480
sini.

55
00:04:03,620 --> 00:04:07,720
Jadi saya katakan angka kuadrat untuk sekarang di kisaran 0 hingga 11.

56
00:04:07,810 --> 00:04:11,610
Dan kemudian ketika saya jalankan kembali ini sekarang saya kembali ke titik dua versi itu.

57
00:04:11,920 --> 00:04:18,800
Jadi apa yang dilakukan pada dasarnya adalah meratakan ini untuk loop di sini di mana surat ini atau nomor ini

58
00:04:18,800 --> 00:04:23,300
apa pun yang terjadi pada dasarnya seolah-olah Anda telah selesai kuadrat di sini.

59
00:04:23,300 --> 00:04:26,000
Itulah yang kami lakukan ketika kami mengatakan kuadrat di sini.

60
00:04:26,270 --> 00:04:29,420
Jadi, Anda menambahkan apa pun yang terjadi.

61
00:04:29,420 --> 00:04:33,020
Sekarang Anda juga dapat menambahkan pernyataan if ke dalam ini.

62
00:04:33,020 --> 00:04:39,230
Jadi katakanlah kita hanya ingin mengambil angka dari yang ini yang bisa saya lakukan adalah mengatakan daftar

63
00:04:39,710 --> 00:04:49,090
saya sama dengan membuka dan menutup tanda kurung siku dan kemudian mengatakan x untuk x dalam rentang 0 hingga 11 dan kemudian setelah ini adalah

64
00:04:49,090 --> 00:04:54,990
tempat Anda menambahkan jika pernyataan Anda dapat mengatakan jika x mod 2 sama dengan nol.

65
00:04:54,990 --> 00:04:57,350
Jadi ingat itu cek jika ada sesuatu yang genap.

66
00:04:57,440 --> 00:05:04,300
Jadi saya katakan x untuk x dalam kisaran angka ini tetapi hanya jika ketika Anda mengatakan Mattu dari X itu sama

67
00:05:04,300 --> 00:05:04,970
dengan nol.

68
00:05:05,880 --> 00:05:09,930
Dan sekarang ketika saya memeriksa hasilnya pada daftar saya itu hanya angka genap dan

69
00:05:09,930 --> 00:05:15,540
juga bisa melakukan sesuatu seperti ini di sebelah kekuatan dua di sini dan sekarang saya hanya memiliki kuadrat angka genap.

70
00:05:17,300 --> 00:05:21,070
Sekarang Anda dapat melakukan beberapa hal yang lebih rumit seperti aritmatika yang lebih rumit di sini.

71
00:05:21,080 --> 00:05:23,390
Jadi saya akan menunjukkan satu contoh terakhir.

72
00:05:23,390 --> 00:05:27,180
Bayangkan saja kita memiliki daftar suhu dalam Celcius.

73
00:05:27,230 --> 00:05:31,740
Jadi 0 10 20 katakanlah tiga puluh empat koma lima.

74
00:05:32,360 --> 00:05:34,130
Dan kemudian saya menginginkannya di Fahrenheit.

75
00:05:34,400 --> 00:05:35,750
Jadi mari kita lakukan itu.

76
00:05:36,090 --> 00:05:37,490
Illest disebut Fahrenheit.

77
00:05:37,670 --> 00:05:39,140
Saya akan mengatur yang sama dengan.

78
00:05:39,410 --> 00:05:48,310
Lalu ada semacam rumus untuk konversi dan rumusnya adalah 9: 0 atau lima kali suhu

79
00:05:48,610 --> 00:05:51,720
dalam Celcius ditambah 32.

80
00:05:51,970 --> 00:05:55,910
Jadi di sini kita memiliki pengaturan aritmatika yang cukup kompleks.

81
00:05:55,930 --> 00:06:03,500
Tapi kemudian saya selalu mengatakan untuk temp dalam Celsius dan kemudian ketika saya menjalankannya dan saya melihat Fahrenheit lagi

82
00:06:03,500 --> 00:06:10,400
saya melihat kembali suhu di Fahrenheit sehingga nol derajat Fahrenheit adalah 32 atau Scuse me atau Celsius

83
00:06:10,400 --> 00:06:11,910
32 derajat Fahrenheit.

84
00:06:12,380 --> 00:06:14,230
Jadi saya akan memecah ini sebagai for for loop.

85
00:06:14,240 --> 00:06:15,760
Supaya kita bisa melihat hubungannya.

86
00:06:15,800 --> 00:06:21,770
Ini adalah hal yang persis sama dengan saya melakukan yang berikut seperti

87
00:06:21,770 --> 00:06:35,950
yang saya katakan Fahrenheit mengatur yang sama dengan daftar kosong dan kemudian mengatakan untuk empat untuk temp di Celsius Fahrenheit menambahkan dan kemudian hanya melakukan hal semacam ini di

88
00:06:35,950 --> 00:06:36,570
sini.

89
00:06:36,780 --> 00:06:40,930
Scrappiness dan menaruhnya di sana.

90
00:06:41,500 --> 00:06:43,280
Jadi ini adalah hal yang persis sama.

91
00:06:43,300 --> 00:06:46,170
Dan jika saya memeriksa Fahrenheit saya mendapatkan hasil yang sama.

92
00:06:46,360 --> 00:06:50,850
Jadi apa yang saya sarankan adalah Anda pada dasarnya membekukan video ini di sini

93
00:06:50,860 --> 00:06:56,170
dan melihat apakah Anda dapat membangun perbandingan antara versi yang diratakan ini untuk kesalahpahaman dan versi ini

94
00:06:56,170 --> 00:07:01,270
untuk loop karena semua yang kami lakukan di sini adalah meratakan dan menyingkirkan fungsionalitas menangguhkan karena

95
00:07:01,270 --> 00:07:02,880
pada dasarnya tersirat secara default.

96
00:07:03,010 --> 00:07:05,300
Ketika Anda memasukkan semuanya ke dalam daftar pemahaman ini.

97
00:07:05,740 --> 00:07:09,890
Sekarang sering saya ditanya oleh siswa ketika mereka meninjau kembali daftar pemahaman mereka.

98
00:07:10,060 --> 00:07:14,500
Hai saya bisa melakukan jika pernyataan lain dalam daftar pemahaman.

99
00:07:14,530 --> 00:07:16,750
Dan jawabannya adalah ya, Anda bisa.

100
00:07:16,750 --> 00:07:18,870
Tetapi urutannya akan sedikit berbeda.

101
00:07:18,880 --> 00:07:24,910
Dan sebelum saya tunjukkan ini, saya ingin menekankan bahwa di atas segalanya keterbacaan dan reproduksibilitas dalam kode

102
00:07:24,910 --> 00:07:27,920
Python Anda harus menjadi hal yang paling penting.

103
00:07:28,000 --> 00:07:33,450
Tidak mencoba melakukan slick one liners dan daftar pemahaman dapat membuat Anda berpikir Anda menjadi seorang

104
00:07:33,460 --> 00:07:38,380
programmer yang benar-benar bagus padahal sebenarnya tulisan Anda hanya benar-benar satu liners yang benar-benar jelek

105
00:07:38,470 --> 00:07:42,270
dan sulit dibaca ketika Anda kembali ke mereka sebulan kemudian.

106
00:07:42,280 --> 00:07:43,260
Jadi ingatlah itu.

107
00:07:43,360 --> 00:07:48,070
Saya akan menunjukkan kepada Anda sekarang bagaimana melakukannya tetapi saya sendiri biasanya tidak melakukan ini karena sangat

108
00:07:48,070 --> 00:07:49,080
sulit untuk dibaca.

109
00:07:49,120 --> 00:07:55,760
Setelah Anda kembali ke sana izinkan saya menunjukkan kepada Anda bagaimana menggunakan pernyataan if and else dalam pemahaman daftar.

110
00:07:55,760 --> 00:08:02,440
Jadi cara kita melakukan ini adalah katakanlah hasilnya akan menetapkan yang sama dengan dan urutannya sedikit terbalik

111
00:08:02,440 --> 00:08:11,310
di sini Anda mengatakan X jika dan kemudian Anda memiliki pernyataan Anda sehingga kami akan mengatakan X jika X Mattu sama dengan nol.

112
00:08:11,380 --> 00:08:21,160
Dan kemudian kita memiliki pernyataan lain yang aneh kemudian kita katakan untuk x dan kemudian kita bisa mengatakan kisaran 0 hingga 11.

113
00:08:21,180 --> 00:08:24,210
Jadi ini agak aneh karena sekarang pesanan telah benar-benar terbalik.

114
00:08:24,300 --> 00:08:25,980
Berbeda dari yang saya katakan di sini.

115
00:08:26,160 --> 00:08:30,090
Jadi itu sebabnya saya juga menyarankan Anda agak mudah ketika Anda melakukan jika

116
00:08:30,090 --> 00:08:35,550
pernyataan lain dan daftar pemahaman karena dapat dengan cepat menjadi tidak dapat dibaca atau membingungkan karena pesanan berbeda tetapi

117
00:08:36,030 --> 00:08:38,820
ketika Anda menjalankan ini dan kami memeriksa hasil kami.

118
00:08:38,820 --> 00:08:45,110
Sekarang saya memiliki daftar di mana saya memiliki angka genap atau pada dasarnya angka di mana Anda membuat 2 0 dan kemudian

119
00:08:45,130 --> 00:08:45,960
string ganjil.

120
00:08:46,080 --> 00:08:47,150
Jika bukan itu masalahnya.

121
00:08:47,190 --> 00:08:50,250
Jadi itu bisa Anda gunakan jika ada dalam daftar pemahaman.

122
00:08:50,250 --> 00:08:55,890
Perhatikan bagaimana urutan sekarang berbeda dari sekadar pernyataan IF sederhana di dalam pemahaman daftar.

123
00:08:55,890 --> 00:09:00,180
Juga perlu diingat bahwa sebulan kemudian ketika Anda kembali ini tiba-tiba akan memakan waktu lebih lama untuk

124
00:09:00,180 --> 00:09:02,490
membaca dan memahami apa yang Anda lakukan di sini.

125
00:09:02,490 --> 00:09:04,230
Jadi berbaik hatilah pada diri Anda di masa depan.

126
00:09:05,490 --> 00:09:10,460
Satu catatan terakhir yang ingin saya tunjukkan adalah Anda juga dapat melakukan loop bersarang dalam pemahaman daftar.

127
00:09:10,620 --> 00:09:15,540
Ini akan menjadi topik lain di mana saya akan mengatakan Tenang dulu karena bisa menjadi

128
00:09:15,540 --> 00:09:16,250
sangat membingungkan.

129
00:09:16,440 --> 00:09:19,920
Tapi izinkan saya menunjukkan kepada Anda apa yang saya maksud dengan loop bersarang.

130
00:09:19,920 --> 00:09:21,520
Kami belum benar-benar melihat loop bersarang.

131
00:09:21,570 --> 00:09:23,050
Jadi kami akan memperkenalkannya terlebih dahulu.

132
00:09:23,370 --> 00:09:32,770
Mari kita bayangkan saya memiliki daftar saya sebagai daftar kosong di sana dan saya katakan untuk x dan katakanlah dua empat enam dan

133
00:09:32,770 --> 00:09:41,810
kemudian di dalam ini saya ingin membuat yang lain untuk loop akan mengatakan untuk y dalam satu katakanlah 100 200 300

134
00:09:41,810 --> 00:09:47,430
saya akan untuk mengambil daftar saya dan saya akan menambahkan X kali Y.

135
00:09:47,480 --> 00:09:53,550
Jadi saya jalankan itu dan kemudian di luar empat loop saya mencetak daftar saya dan saya kembali dua

136
00:09:53,560 --> 00:09:57,080
ratus 400 600 dll semua jalan sampai akhir jadi apa yang sebenarnya dilakukan.

137
00:09:57,080 --> 00:10:02,720
Baik itu akan perlu untuk mengalikan dengan masing-masing angka-angka ini yang akan mengambil empat kali lipat dari masing-masing

138
00:10:02,720 --> 00:10:05,780
angka yang menghasilkan ini dan kemudian akan mengambil enam.

139
00:10:05,780 --> 00:10:09,100
Lipat gandakan tetapi masing-masing angka itu dan kemudian hasilkan itu.

140
00:10:09,110 --> 00:10:12,800
Jadi izinkan saya memilih beberapa angka di sini yang akan membuatnya semakin jelas apa yang terjadi.

141
00:10:13,030 --> 00:10:19,040
Dan katakanlah satu 10 dan kemudian kita akan membuat ini yang terakhir seribu.

142
00:10:19,040 --> 00:10:26,110
Jadi ketika saya menjalankan kode ini Anda dapat melihat di sini untuk 22.000 untuk empat puluh enam ribu enam enam enam enam ribu.

143
00:10:26,120 --> 00:10:29,850
Sekarang ada cara untuk melakukan ini dengan pemahaman daftar lagi.

144
00:10:29,870 --> 00:10:33,800
Anda akan mengorbankan keterbacaan di sini tetapi mungkin cara Anda akan melakukan ini adalah

145
00:10:33,800 --> 00:10:34,570
sebagai berikut.

146
00:10:34,690 --> 00:10:37,810
Anda akan mengatakan daftar saya sama dengan.

147
00:10:38,060 --> 00:10:44,720
Dan kita katakan X kali Y untuk x in dan kemudian Anda memasukkan daftar itu.

148
00:10:44,720 --> 00:10:54,410
Jadi dalam hal ini kita akan mengatakan dua untuk enam dan kemudian kita akan mengatakan empat y dan kemudian kita akan mengatakan

149
00:10:54,880 --> 00:10:56,260
satu 10 1000.

150
00:10:56,920 --> 00:11:01,060
Dan ketika kami memeriksa daftar saya, kami mendapatkan hasil yang sama.

151
00:11:01,070 --> 00:11:05,120
Sekarang lagi pasti hati-hati dengan ini karena ini sangat sulit dibaca terutama ketika Anda

152
00:11:05,120 --> 00:11:06,220
kembali lagi nanti.

153
00:11:06,230 --> 00:11:10,480
Jadi itu mungkin tapi saya sarankan selalu mencoba untuk melakukan keterbacaan terlebih dahulu.

154
00:11:10,820 --> 00:11:11,380
BAIK.

155
00:11:11,480 --> 00:11:13,730
Itulah dasar-dasar pemahaman daftar.

156
00:11:13,730 --> 00:11:18,050
Kami akan memainkannya sedikit dan beberapa latihan dan proyek Anda, tetapi itu

157
00:11:18,050 --> 00:11:23,930
pasti akan memakan waktu sebelum datang sebelum ini menjadi bagian dari aliran normal Anda dalam pemrograman Python.

158
00:11:23,930 --> 00:11:26,230
Baiklah, terima kasih semuanya dan saya akan melihat pada kuliah berikutnya.
