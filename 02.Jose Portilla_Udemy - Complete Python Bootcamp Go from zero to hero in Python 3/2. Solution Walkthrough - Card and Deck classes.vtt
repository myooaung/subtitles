WEBVTT
1
00:00:05.360 --> 00:00:06.370
Selamat datang kembali semuanya.

2
00:00:06.460 --> 00:00:11.210
Dan kuliah ini kita akan mulai berjalan melalui langkah-langkah solusi buku kerja.

3
00:00:11.210 --> 00:00:14.090
Saya ingin mengingat ini hanyalah solusi contoh.

4
00:00:14.100 --> 00:00:17.960
Pada dasarnya ada banyak cara Anda bisa melalui proyek ini.

5
00:00:18.090 --> 00:00:20.840
Kasing ini akan melalui dua langkah di buku kerja.

6
00:00:20.840 --> 00:00:21.840
Mari kita mulai.

7
00:00:22.130 --> 00:00:28.070
OK jadi di sini kita berada di buku kerja banyak hal yang berbeda untuk memulai dengan aspek gameplay.

8
00:00:28.130 --> 00:00:32.930
Kita akan melakukan dan kuliah ini hanya melalui berbagai langkah ini dan kemudian mengisi semua sel

9
00:00:32.930 --> 00:00:37.430
dan melihat apakah kita dapat membuat beberapa logika di akhir untuk benar-benar menjalankan permainan.

10
00:00:37.850 --> 00:00:43.020
Jadi di sini kita melihat permainan dan kami ingin menetapkan beberapa impor dan variabel global sehingga variabel

11
00:00:43.040 --> 00:00:46.930
global adalah variabel yang akan dapat dirujuk di fungsi dan objek lain.

12
00:00:47.210 --> 00:00:50.390
Jadi kami pertama-tama ingin mengimpor ran modul yang sebenarnya sudah dilakukan untuk kami.

13
00:00:50.450 --> 00:00:53.530
Dan itu akan memungkinkan kita untuk mengocok deck sebelum bertransaksi.

14
00:00:53.570 --> 00:00:58.370
Dan Anda dapat melihat kuliah operator yang berguna jika Anda ingin meninjau cara mengocok

15
00:00:58.370 --> 00:00:59.440
dari perpustakaan acak.

16
00:00:59.660 --> 00:01:05.860
Tapi yang ingin kami ketahui adalah menghapus beberapa variabel untuk menyimpan kartu yang sesuai dengan peringkat dan nilainya.

17
00:01:05.930 --> 00:01:11.570
Dan Anda dapat melakukan sistem Anda sendiri tetapi kami sebenarnya memiliki banyak kode di sini untuk Anda

18
00:01:11.570 --> 00:01:16.600
di mana pakaian akan mengaturnya sebagai situs tuple akan menyalin dan menempel ini di sini.

19
00:01:16.810 --> 00:01:22.250
Dan kemudian gelanggang es kami memiliki dua tiga empat lima lima sepanjang jalan melalui jack queen king ace.

20
00:01:22.510 --> 00:01:23.920
Jadi kita bisa mengaturnya juga.

21
00:01:24.040 --> 00:01:25.560
Sekali lagi Anda tidak perlu melakukannya dengan cara ini.

22
00:01:25.560 --> 00:01:30.550
Ini hanya untuk mengikuti sistem kami di sepanjang buku kerja dan kemudian mungkin bagian yang paling penting

23
00:01:30.550 --> 00:01:36.310
adalah nilai-nilai ini dan nilai-nilai ini adalah kamus yang bagus di mana Anda dapat melewati peringkat kartu dan kemudian keluar

24
00:01:36.310 --> 00:01:38.010
dari nilai numerik yang sebenarnya.

25
00:01:38.020 --> 00:01:42.520
Ini sangat berguna bagi kita karena ketika kita berhadapan kartu seperti Jack Queen

26
00:01:42.520 --> 00:01:47.200
King kita tidak akan dapat langsung membacakan nomor itu sendiri seperti 2 3 4.

27
00:01:47.320 --> 00:01:52.030
Jadi yang bisa kita lakukan adalah menggunakan kamus sebagai pencarian sehingga kita bisa memasukkan jack ke kamus nilai

28
00:01:52.030 --> 00:01:53.080
dan kembali 10.

29
00:01:53.230 --> 00:01:54.980
Kami akan mengatakan Ace sekarang ke 11.

30
00:01:55.000 --> 00:01:59.460
Tetapi nanti kita akan membahas faktor khusus yang dapat berupa 1 atau 11.

31
00:01:59.530 --> 00:02:03.840
Jadi kita akan menyalin ini dan juga menempelkannya di sini.

32
00:02:04.020 --> 00:02:08.760
Dan akhirnya kita akan mendeklarasikan nilai boolean yang akan digunakan untuk mengendalikan loop sementara seperti yang

33
00:02:08.760 --> 00:02:10.710
kita lakukan pada Ticketek untuk memproyeksikan.

34
00:02:10.830 --> 00:02:14.280
Mungkin menyenangkan memiliki loop sementara yang bergantung pada beberapa variabel seperti.

35
00:02:14.280 --> 00:02:14.990
Game aktif.

36
00:02:14.990 --> 00:02:17.660
Dan dalam hal ini kita akan mengaturnya sebagai bermain sama dengan benar.

37
00:02:17.700 --> 00:02:24.320
Jadi nanti pada akhirnya kita dapat mengatur bermain ke false jika permainan selesai menjalankan penjualan itu dan

38
00:02:24.320 --> 00:02:26.360
beralih ke definisi kelas.

39
00:02:26.360 --> 00:02:32.110
Jadi yang ingin kita lakukan sekarang adalah membuat kelas kartu dan objek kartu sebenarnya hanya membutuhkan dua

40
00:02:32.140 --> 00:02:38.240
atribut cara kita akan mengaturnya di sini hanya perlu setelan dan pangkat dan kemudian kita ingin memiliki metode string

41
00:02:38.240 --> 00:02:42.860
pada sehingga ketika kita benar-benar mencetak satu kartu kita mendapatkan kembali sesuatu dalam bentuk

42
00:02:42.860 --> 00:02:44.690
dua hati atau tiga klub.

43
00:02:44.690 --> 00:02:50.390
Jadi mari kita atur ini di sini kita bisa melihat metode init dan kita

44
00:02:50.570 --> 00:02:57.870
akan menambahkan dua atribut setelan di Reinke dan kemudian kita akan menetapkan setelan otodidak itu sama dengan softball.

45
00:02:57.880 --> 00:03:02.030
Peringkat sama dengan peringkat dan kemudian untuk representasi string.

46
00:03:02.170 --> 00:03:09.210
Sekali lagi Anda memiliki banyak fleksibilitas di sini, tetapi kami akan mengembalikan sesuatu seperti peringkat otodidak yang digabungkan dengan pemberitahuan bahwa

47
00:03:09.210 --> 00:03:17.720
ruang saya gabungan mereka adalah otodidak SU Jadi kami menjalankan itu dan sekarang kami memiliki kelas kartu dasar dan saya ingin perhatikan bahwa tidak masalah

48
00:03:17.720 --> 00:03:23.240
jika Anda memiliki pangeran Glos yang terbuka di sini atau tidak ada tanda kurung tutup

49
00:03:23.240 --> 00:03:24.000
yang terbuka.

50
00:03:24.020 --> 00:03:26.610
Hanya ketika Anda menggunakan warisan Anda benar-benar membutuhkannya.

51
00:03:26.870 --> 00:03:31.220
Saya biasanya lebih suka memiliki pangeran di sana buku catatan itu sendiri tidak memilikinya

52
00:03:31.220 --> 00:03:33.370
sepenuhnya terserah Anda yang gaya sukai.

53
00:03:33.410 --> 00:03:35.960
Dan sekarang kita beralih ke Langkah Tiga.

54
00:03:36.110 --> 00:03:42.920
Jadi untuk Langkah 3 ini adalah di mana kami ingin benar-benar menyimpan 52 objek kartu ke dalam semacam daftar

55
00:03:42.920 --> 00:03:44.970
yang nantinya bisa kami putar.

56
00:03:44.980 --> 00:03:49.250
Anda tahu sudah ada banyak kode yang dibuat untuk Anda di sini sehingga kami dapat melihat apa yang dilakukan

57
00:03:49.250 --> 00:03:50.000
oleh kode tersebut.

58
00:03:50.090 --> 00:03:53.350
Kami menetapkan self deck sebagai daftar kosong.

59
00:03:53.480 --> 00:03:59.930
Dan yang penting di sini untuk diperhatikan adalah meskipun objek dek ini memiliki atribut otodidak, Anda dapat menyebutnya benar-benar apa

60
00:04:00.110 --> 00:04:01.620
pun yang Anda inginkan.

61
00:04:01.880 --> 00:04:07.080
Itu tidak menganggapnya sebagai parameter ketika Anda benar-benar pertama kali menginisialisasi instance dari deck.

62
00:04:07.340 --> 00:04:11.480
Dan itu karena ketika Anda menginisialisasi setumpuk kartu yang Anda inginkan selalu sama setiap saat.

63
00:04:11.480 --> 00:04:16.070
Anda tidak ingin pengguna dapat memasukkan parameter yang akan membuat sesuatu yang berbeda dengan

64
00:04:16.070 --> 00:04:16.560
dek.

65
00:04:16.620 --> 00:04:19.310
Sebaliknya sebuah dek menjadi hal yang terstandarisasi.

66
00:04:19.310 --> 00:04:26.750
Jadi yang kita lakukan di sini adalah kita katakan mengatur dek adalah daftar kosong dan untuk setiap setelan jas anggota kembali

67
00:04:26.750 --> 00:04:27.610
di sini.

68
00:04:27.650 --> 00:04:28.920
Itu variabel global.

69
00:04:29.030 --> 00:04:32.760
Jadi kita akan bisa mengaksesnya dengan setelan jas.

70
00:04:32.770 --> 00:04:38.060
Dan kemudian untuk setiap peringkat dalam peringkat yang akan kita lakukan

71
00:04:38.090 --> 00:04:44.970
adalah seperti instruksi katakan di sini sebenarnya menambahkan ini menggunakan kelas kartu akan mengatakan dek otodidak.

72
00:04:45.540 --> 00:04:52.000
Jadi ingat itu daftar kosong dan kemudian saya akan menambahkan menggunakan kelas kartu yang kita definisikan di atas.

73
00:04:52.010 --> 00:04:56.150
Ingat kelas kartu hanya memakai jas dan pangkat.

74
00:04:56.270 --> 00:04:57.690
Kita akan meneruskan ini juga.

75
00:04:57.770 --> 00:04:59.490
Setelan Rick.

76
00:04:59.780 --> 00:05:04.220
Dan sekarang setelah menginisialisasi ini, saya harus memiliki daftar sekelompok kelas kartu sekarang

77
00:05:07.350 --> 00:05:12.240
untuk representasi string yang sebenarnya dari ini benar-benar terserah Anda bagaimana Anda ingin mewakili

78
00:05:12.240 --> 00:05:13.100
deck Anda.

79
00:05:13.200 --> 00:05:19.220
Dalam kasus kami, kami memutuskan untuk melakukan sesuatu seperti ini atau mengingat fungsi ini hanya benar-benar dipanggil

80
00:05:19.220 --> 00:05:21.660
jika Anda benar-benar mencetak dek Anda.

81
00:05:21.760 --> 00:05:33.250
Jadi kita akan mulai dengan komposisi itu sebagai string kosong yang akan saya katakan untuk setiap kartu di dek otodidak.

82
00:05:33.380 --> 00:05:41.820
Kita akan mengatakan bahwa komposisi dek kita akan menggabungkan baris baru pastikan kutipan kita di sana

83
00:05:41.830 --> 00:05:50.690
ditambah representasi string dari ruang kartu atau kartu di sini memiliki representasi stringnya sendiri dan kita dapat

84
00:05:50.820 --> 00:05:53.620
menyebutnya menggunakan metode berikut.

85
00:05:53.780 --> 00:06:01.750
Kita dapat mengatakan bahwa komposisi kartu tambah baris baru dan kemudian string dan untuk benar-benar menjalankannya.

86
00:06:01.980 --> 00:06:07.470
Kami memiliki pangeran dekat yang terbuka di sini yang pada dasarnya hanya memanggil Pangeran keluar presentasi Stringer sebenarnya

87
00:06:07.650 --> 00:06:09.050
dari setiap kartu individu.

88
00:06:09.330 --> 00:06:15.020
Jadi sekarang kita memiliki string raksasa dari baris baru dan pada

89
00:06:15.020 --> 00:06:27.110
akhirnya kita hanya dapat mengembalikan string yang mengatakan dek memiliki iklan dalam komposisi ini yang kita dapat mengocok hari kita sebenarnya sudah di sini untuk Anda.

90
00:06:27.110 --> 00:06:32.150
Tetapi menggunakan pustaka acak yang kami impor sebelumnya, kami hanya memanggil shuffle pada daftar dan itu akan

91
00:06:32.150 --> 00:06:33.040
mengacak daftar itu.

92
00:06:33.050 --> 00:06:35.710
Perhatikan di sini saya tidak mengatakan kembali.

93
00:06:35.720 --> 00:06:37.730
Ini sebenarnya terjadi di tempat.

94
00:06:37.730 --> 00:06:40.270
Jadi ini kembali ke diskusi kita tentang pemrograman berorientasi objek.

95
00:06:40.430 --> 00:06:43.160
Kami tidak setiap metode benar-benar mengembalikan sesuatu.

96
00:06:43.190 --> 00:06:45.810
Dan kasing ini mengocok daftar itu di tempatnya.

97
00:06:45.830 --> 00:06:51.950
Akhirnya saya ingin memiliki metode kesepakatan yang merupakan cara untuk benar-benar mengambil kartu dari diri saya tetapi atribut

98
00:06:53.130 --> 00:06:54.930
itu adalah daftar objek kartu.

99
00:06:55.360 --> 00:07:03.680
Jadi katakanlah satu kartu sama dengan desktop pop otodidak dan jenis sintaksis ini bisa membingungkan bagi

100
00:07:03.680 --> 00:07:04.360
pemula.

101
00:07:04.370 --> 00:07:06.130
Jadi saya ingin melihatnya lebih dekat.

102
00:07:06.170 --> 00:07:15.470
Semua yang kami katakan di sini pada dasarnya adalah dua hal ambil atribut dek kelas ini dan kemudian lepas item kartu

103
00:07:15.560 --> 00:07:20.330
itu dari daftar itu dan kemudian mengaturnya ke kartu tunggal.

104
00:07:20.360 --> 00:07:24.380
Yang terkadang membingungkan bagi pemula adalah mereka melihat dua titik ini secara berurutan yang agak aneh

105
00:07:24.380 --> 00:07:25.970
jika Anda belum pernah melihatnya.

106
00:07:26.060 --> 00:07:33.260
Tetapi dalam hal ini hanya melakukan satu metode tunggal dari objek daftar seperti yang kami lakukan di sini di

107
00:07:33.260 --> 00:07:35.420
mana ia mengatakan menambahkan kantor.

108
00:07:35.450 --> 00:07:38.370
Otodidak daftar atribut yang ini.

109
00:07:38.720 --> 00:07:44.490
Setelah Anda melepaskan kartu tunggal itu, Anda dapat mengembalikannya dan secara teknis mereka tidak harus melakukan ini dalam dua baris,

110
00:07:44.580 --> 00:07:46.330
Anda hanya dapat mengatur pengembalian.

111
00:07:46.430 --> 00:07:47.610
Otodidak pop itu.

112
00:07:47.630 --> 00:07:50.880
Jadi semoga komentar ini membantu Anda memahami apa yang sebenarnya terjadi di sini.

113
00:07:51.940 --> 00:07:53.990
Jadi sekarang kita memiliki objek teknologi kami siap untuk digunakan.

114
00:07:54.280 --> 00:07:55.670
Jadi mari kita lakukan sedikit pengujian.

115
00:07:55.720 --> 00:08:01.080
Kita harus dapat membuat tes di sana dan kemudian mencetak tes yang kemudian kita harus cetak memiliki

116
00:08:01.100 --> 00:08:04.630
dek dan komposisi dek ini yang kita temukan di sini.

117
00:08:04.630 --> 00:08:09.700
Jadi mari kita jalankan ini dan melihat bahwa ia memiliki dua dari tiga hati, empat hati, lima hati.

118
00:08:09.700 --> 00:08:11.790
Jadi di sini semuanya beres.

119
00:08:11.830 --> 00:08:19.740
Jadi mari kita lakukan sedikit pengujian dengan benar-benar mengocok kata-kata setelah membuat tes yang meraih test deck

120
00:08:19.740 --> 00:08:26.130
dan mengocoknya dan kemudian alih-alih mencetak semuanya sesuai pesanan kita harus melihat sesuatu yang

121
00:08:26.130 --> 00:08:27.540
dicetak terseret.

122
00:08:27.670 --> 00:08:32.900
Kami menjalankannya dan kami melihat beberapa klub berlian hati dll. dan kita dapat melihat bahwa semuanya telah dikocok.

123
00:08:32.950 --> 00:08:36.360
Jadi sepertinya kelas kita berfungsi.

124
00:08:36.400 --> 00:08:40.190
Baiklah, mari kita tinjau cepat sebelum melanjutkan kuliah berikutnya.

125
00:08:40.210 --> 00:08:45.360
Kami telah melakukan sejauh ini di awal apa yang kami lakukan adalah kami mengatur beberapa variabel global.

126
00:08:45.370 --> 00:08:52.570
Kami juga mengimpor pustaka acak variabel global adalah tuple untuk mewakili setelan beberapa peringkat yang

127
00:08:52.630 --> 00:08:56.570
merupakan tuple lain untuk mewakili peringkat serta nilai.

128
00:08:56.590 --> 00:09:00.460
Dan ini adalah variabel yang sangat penting karena kamus mencari di mana

129
00:09:00.460 --> 00:09:06.870
Anda baru saja lulus dan pangkat dan Anda mendapatkan kembali nilai numeriknya sehingga Anda dapat dengan mudah mengambil jumlah dari tangan seseorang.

130
00:09:07.000 --> 00:09:09.670
Kemudian kami membuat kelas untuk kartu itu sendiri.

131
00:09:09.670 --> 00:09:11.770
Jadi ini hanya mewakili kartu tunggal.

132
00:09:11.780 --> 00:09:17.860
Ini memiliki dua atribut setelan dalam peringkat dan Anda dapat mencetak ke kartu dan itu akan melaporkan peringkat

133
00:09:17.860 --> 00:09:18.600
kembali setelan.

134
00:09:20.030 --> 00:09:26.000
Kemudian untuk kelas kami ingin memanfaatkan kelas kartu itu untuk dengan cepat membuat 52 dari setiap kartu tunggal

135
00:09:26.000 --> 00:09:27.320
untuk melakukan itu.

136
00:09:27.320 --> 00:09:32.570
Kami hanya memiliki sarang untuk loop di mana kami mengatakan empat setelan jas untuk pangkat dan pangkat

137
00:09:32.660 --> 00:09:39.650
dan dengan membuat daftar kosong untuk atribut pertama ini kami pergi ke depan dan mengambil daftar itu dan Penda banyak kartu untuk

138
00:09:39.680 --> 00:09:40.150
itu.

139
00:09:40.150 --> 00:09:44.680
Ingatlah bahwa kartu adalah objek kartu aktual tempat kita duduk untuk setiap setelan dalam variabel global yang sesuai.

140
00:09:44.720 --> 00:09:46.430
Jadi itu yang di sini.

141
00:09:46.430 --> 00:09:51.920
Dan kemudian untuk setiap peringkat dalam peringkat variabel global yang merupakan salah satu dari mereka, kami melanjutkan kelas kartu

142
00:09:51.920 --> 00:09:52.400
kredit.

143
00:09:52.440 --> 00:09:54.960
Sekarang kami memiliki objek kartu dan kami menambahkannya ke daftar itu.

144
00:09:55.160 --> 00:10:00.750
Jadi otodidak ada daftar benda-benda kartu ini yang kami ingin dapat mencetak dek sebenarnya.

145
00:10:00.760 --> 00:10:02.840
Jadi jika Anda mengatakan print deck Anda akan mendapatkan sesuatu.

146
00:10:02.900 --> 00:10:08.720
Dan dalam hal itu yang kita lakukan adalah mengatakan OK mulai dengan string kosong dan kemudian untuk setiap

147
00:10:08.810 --> 00:10:11.000
kartu dalam daftar objek kartu ini.

148
00:10:11.000 --> 00:10:16.390
Silakan dan gabungkan baris baru dan kemudian representasi string dari kartu itu.

149
00:10:16.430 --> 00:10:20.700
Dan kemudian kita dapat mencetak dek yang dimiliki dan itu hanya satu string raksasa sekelompok panggilan baris baru.

150
00:10:20.700 --> 00:10:25.700
Jadi ketika Anda benar-benar mencetak Anda mendapatkan kembali daftar semua kartu maka kita dapat

151
00:10:25.730 --> 00:10:30.980
mengocok kartu yang pada dasarnya hanya memanggil metode acak itu pada self-talk yang CList dan kemudian

152
00:10:30.980 --> 00:10:36.560
kita memiliki kesepakatan di mana kita mengeluarkan objek kartu dan kami mengambilnya dengan mengembalikan kartu tunggal itu.

153
00:10:36.980 --> 00:10:37.520
BAIK.

154
00:10:37.550 --> 00:10:41.590
Dan kemudian kami mengujinya dengan membuatnya mengocok dan mencetak tes.

155
00:10:41.900 --> 00:10:46.850
Selanjutnya yang akan kita kerjakan adalah membuat kelas tangan dan kemudian menciptakan kelas Chip.

156
00:10:46.910 --> 00:10:47.990
Sampai jumpa di kuliah berikutnya.
