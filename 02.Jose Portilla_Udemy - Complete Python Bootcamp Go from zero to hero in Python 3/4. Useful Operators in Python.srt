1
00:00:05,540 --> 00:00:07,400
Selamat datang kembali semua orang di kuliah ini.

2
00:00:07,400 --> 00:00:11,990
Kita akan membahas beberapa fungsi bawaan dan kata-kata kunci operator dalam Python yang tidak benar-benar

3
00:00:11,990 --> 00:00:14,190
cocok dengan salah satu kategori sebelumnya.

4
00:00:14,300 --> 00:00:18,950
Namun ini sangat penting dan mereka akan benar-benar meningkatkan kemampuan Anda untuk memprogram dengan Python.

5
00:00:19,130 --> 00:00:21,940
Mari kita buka buku catatan super dan cepat menjalankannya.

6
00:00:22,280 --> 00:00:26,240
Mari kita mulai dengan berbicara tentang fungsi rentang dalam Python.

7
00:00:26,240 --> 00:00:33,630
Perhatikan bahwa sering kita membuat daftar yang hanya serangkaian bilangan bulat sebagai 1 2 3 atau 1 3 4 5

8
00:00:33,640 --> 00:00:37,580
dan seterusnya hingga 10 karena itu adalah tugas yang umum.

9
00:00:37,580 --> 00:00:40,120
Python sebenarnya memiliki operator bawaan untuk ini.

10
00:00:40,190 --> 00:00:41,990
Dan ada dua cara Anda bisa menggunakannya.

11
00:00:42,050 --> 00:00:44,120
Salah satunya adalah Anda tidak bisa mengulanginya.

12
00:00:44,120 --> 00:00:47,100
Jadi saya bisa mengatakan sesuatu seperti Untuk mati rasa dan.

13
00:00:47,210 --> 00:00:51,350
Dan kemudian kita menggunakan rentang kata kunci dan dibutuhkan beberapa parameter.

14
00:00:51,350 --> 00:00:57,320
Anda dapat melakukan tab geser di sini untuk melihat parameter yang diperlukan tetapi pada dasarnya sebagai penghentian awal dan

15
00:00:57,320 --> 00:00:58,380
ukuran langkah opsional.

16
00:00:58,400 --> 00:01:00,780
Jadi mulai secara teknis juga opsional.

17
00:01:00,800 --> 00:01:02,660
Mari kita tunjukkan bagaimana kita bisa menggunakannya.

18
00:01:02,930 --> 00:01:10,410
Jadi jika kita hanya mengindikasikan satu angka seperti 10 dan kita katakan Prince numb di kisaran 10 apa yang

19
00:01:10,410 --> 00:01:16,000
akan dilakukan adalah akan menghasilkan angka dari 0 sampai dengan tetapi tidak termasuk 10.

20
00:01:16,110 --> 00:01:20,970
Sehingga semua jalan hingga tetapi tidak termasuk Itu sangat mirip dengan sintaks slicing yang kita lihat

21
00:01:20,970 --> 00:01:22,070
sebelumnya dalam kursus.

22
00:01:22,080 --> 00:01:27,810
Jadi untuk saat ini saya berada dalam kisaran angka 10 persen di sini kita melihat 0 hingga 9.

23
00:01:27,810 --> 00:01:32,610
Sekarang katakanlah kita ingin menentukan posisi indeks awal untuk bilangan bulat.

24
00:01:32,610 --> 00:01:36,790
Kita bisa mengatakan mulai tiga sampai sejauh tetapi tidak termasuk 10.

25
00:01:36,990 --> 00:01:38,880
Dan kemudian kita jalankan ini kita dapatkan tiga.

26
00:01:39,030 --> 00:01:41,990
Dan kemudian sampai dengan tetapi tidak termasuk 10.

27
00:01:42,000 --> 00:01:43,730
Jadi itulah operator jarak jangkau.

28
00:01:43,920 --> 00:01:47,480
Dan di samping semua ini, kita sebenarnya dapat memiliki ukuran langkah juga.

29
00:01:47,790 --> 00:01:53,400
Jadi kita bisa menambahkan argumen ketiga untuk ukuran langkah dan itu memberi kita angka genap sehingga mengambil lompatan

30
00:01:53,460 --> 00:01:57,380
dan langkah 2 dari nol sampai ke atas tetapi tidak termasuk 10.

31
00:01:57,390 --> 00:02:01,080
Jadi jika kita ingin memasukkan 10 di salah satu angka itu kita harus meletakkan 11 di sana.

32
00:02:01,290 --> 00:02:04,180
Dan kemudian kita kembali nol ke empat enam delapan 10.

33
00:02:04,230 --> 00:02:07,410
Jadi itulah cara Anda dapat menggunakan fungsi rentang untuk iterasi.

34
00:02:07,600 --> 00:02:13,800
Tetapi Anda akan melihat jika saya menyalin dan menempel ini ke sel dan memintanya dikembalikan kepada saya, saya baru

35
00:02:13,800 --> 00:02:17,160
saja mengembalikan operator jangkauan ini dan itu karena generator.

36
00:02:17,160 --> 00:02:20,080
Jadi sebenarnya saya ingin daftar angka yang sebenarnya.

37
00:02:20,280 --> 00:02:26,970
Apa yang bisa saya lakukan adalah melemparkannya ke daftar dan kemudian saya mendapatkan kembali daftar nomor nanti pada kursus kita

38
00:02:26,970 --> 00:02:32,400
akan membahas generator dan lebih banyak detail tetapi pada dasarnya generator adalah jenis fungsi khusus yang

39
00:02:32,490 --> 00:02:36,050
akan menghasilkan informasi sebagai gantinya menyimpan semuanya ke memori.

40
00:02:36,060 --> 00:02:41,250
Jadi ini adalah cara yang lebih efisien untuk menghasilkan angka-angka ini daripada memiliki daftar raksasa yang

41
00:02:41,250 --> 00:02:46,250
tersimpan dalam memori dan kita akan membahasnya dan lebih banyak detail di bagian generator saja.

42
00:02:46,810 --> 00:02:51,910
Mari kita beralih ke membahas fungsi lain yang sangat berguna yang disebut enumerate dan untuk menunjukkan kepada Anda use

43
00:02:51,910 --> 00:02:53,660
case dan motivasi di balik numerate.

44
00:02:53,680 --> 00:02:55,880
Mari kita lakukan sebuah contoh.

45
00:02:56,080 --> 00:03:00,090
Saya akan mengatur variabel yang disebut index count sama dengan nol.

46
00:03:00,190 --> 00:03:01,030
Biarkan saya memperbesar sini.

47
00:03:01,030 --> 00:03:10,660
Satu tingkat jumlah indeks sama dengan nol dan kemudian empat huruf dan string ABC saya akan melakukan beberapa pencetakan

48
00:03:10,660 --> 00:03:11,770
di sini.

49
00:03:11,920 --> 00:03:20,270
Saya akan mengatakan indeks surat itu kurawal kurawal.

50
00:03:20,310 --> 00:03:25,670
Kemudian saya akan menggunakan format itu di sini untuk mengatakan jumlah Index dan kemudian surat-surat.

51
00:03:25,680 --> 00:03:27,160
Baiklah.

52
00:03:27,170 --> 00:03:30,490
Jadi yang saya lakukan di sini adalah menghitung indeks.

53
00:03:30,500 --> 00:03:41,020
Surat itu kosong dan kemudian apa yang akan saya lakukan adalah mengatakan jumlah Indeks ditambah sama dengan 1.

54
00:03:41,040 --> 00:03:47,820
Jadi ketika saya menjalankan ini dikatakan kembali informasi berikut di indeks 0 huruf dalam X-1

55
00:03:47,820 --> 00:03:50,580
huruf B dan seterusnya sampai akhir.

56
00:03:50,580 --> 00:03:56,190
Sekarang ini adalah operasi umum yang akan kita lakukan adalah menggunakan fungsi enumerasi untuk mereplikasi

57
00:03:56,220 --> 00:03:56,630
ini.

58
00:03:56,640 --> 00:04:01,620
Dan alasan ini sangat umum adalah karena banyak kali Anda ingin memiliki semacam penghitung untuk

59
00:04:01,890 --> 00:04:07,170
berapa kali kita melewati ini untuk loop atau posisi indeks apa yang Anda gunakan dalam string

60
00:04:07,170 --> 00:04:08,020
khusus ini.

61
00:04:08,040 --> 00:04:14,830
Dan alasan untuk itu adalah karena sering orang suka melakukan sesuatu seperti ini mereka

62
00:04:14,950 --> 00:04:17,950
ingin mari kita mendefinisikan kata sebagai

63
00:04:20,830 --> 00:04:33,160
b c d e dan kemudian mengatakan empat huruf dalam kata mencetak kata yang menghitung indeks dan kemudian kita mengatakan jumlah indeks ditambah sama dengan

64
00:04:33,220 --> 00:04:33,910
1.

65
00:04:34,240 --> 00:04:38,480
Jadi itu benar-benar terjadi dalam loop ini sementara kami melakukan hal berikut.

66
00:04:38,530 --> 00:04:44,650
Kami memiliki jumlah indeks dimulai pada 0 dan kami memiliki kata string ABC lalu untuk setiap huruf dalam kata

67
00:04:44,650 --> 00:04:44,980
itu.

68
00:04:44,980 --> 00:04:51,680
Jadi untuk setiap karakter di sini yang akhirnya kita lakukan adalah mencetak ulang lokasi nilai indeks pada kata itu.

69
00:04:51,700 --> 00:04:53,530
Dan itu sama dengan mencetak surat itu.

70
00:04:53,680 --> 00:05:00,150
Tetapi seringkali yang kita lakukan adalah menggunakan sintaksis suatu daftar nanti dalam kode kita.

71
00:05:00,250 --> 00:05:05,760
Tapi North melakukan ini ketika dia memiliki semacam jumlah indeks yang berjalan sehingga

72
00:05:05,760 --> 00:05:13,750
ketika saya menjalankan ini saya mendapatkan kembali ABC karena operasi semacam ini benar-benar umum kemudian pada apa yang dilakukan Python

73
00:05:13,750 --> 00:05:16,510
adalah mereka dibangun dalam fungsi enumerate.

74
00:05:16,580 --> 00:05:19,490
Jadi mari kita lihat apa yang terjadi ketika kita menggunakan penghitungan.

75
00:05:19,490 --> 00:05:27,900
Jadi saya pergi ke Dilley inducts menghitung di sini dan saya akan mengatakan untuk item dalam kata menghitung mencetak item dan

76
00:05:28,790 --> 00:05:35,660
sekarang ingin menjalankan ini saya kembali Perhatikan tuple Jadi 0 dengan yang dengan B ke A C.

77
00:05:35,880 --> 00:05:41,020
Jadi ini pada dasarnya melakukan penghitungan indeks untuk kita secara otomatis dalam bentuk tupel.

78
00:05:41,130 --> 00:05:44,300
Dan seperti yang kita tahu kita punya tuple dan packing dari for loop loop.

79
00:05:44,310 --> 00:05:52,790
Jadi saya bisa mengatakan yang berikut ini saya bisa mengatakan Index koma surat dan kemudian saya bisa mencetak indeks dan kemudian

80
00:05:52,790 --> 00:05:58,840
mencetak surat secara terpisah dan kemudian mencetak baris baru menggunakan karakter urutan melarikan diri.

81
00:05:59,360 --> 00:06:04,210
Jadi sekarang saya katakan 0 a 1 B ke C dll dan seterusnya.

82
00:06:04,520 --> 00:06:11,390
Jadi ini adalah fungsi enumerasi dan dapat mengambil objek yang dapat diulang dan apa yang

83
00:06:11,390 --> 00:06:18,770
dilakukan adalah mengembalikan kembali semacam penghitung indeks dan kemudian objek itu sendiri atau elemen pada iterasi tertentu.

84
00:06:18,770 --> 00:06:24,290
Yang berikutnya saya ingin menunjukkan kepada Anda adalah fungsi Zipp yang agak seperti kebalikan dari penghitungan.

85
00:06:24,680 --> 00:06:28,130
Apa yang dilakukannya adalah ritsleting bersama ke daftar.

86
00:06:28,160 --> 00:06:37,210
Jadi saya akan mengatakan daftar saya satu sama dengan satu dua tiga empat lima dan saya akan membuat daftar saya

87
00:06:37,930 --> 00:06:43,070
sama dengan a c sebenarnya hanya untuk ABC setelah Anda bertiga.

88
00:06:43,080 --> 00:06:45,030
Dengan begitu mereka cocok.

89
00:06:45,330 --> 00:06:52,700
Dan kemudian apa yang akan saya lakukan di sini adalah saya akan zip mereka bersama-sama menggunakan fungsi zip.

90
00:06:52,710 --> 00:06:57,630
Sekarang jika saya hanya menjalankan jika saya tidak mendapatkan kembali apa-apa itu hanya mengatakan hei

91
00:06:57,630 --> 00:07:01,570
Anda memiliki generator ini menunggu Anda di lokasi ini dalam memori Anda.

92
00:07:01,860 --> 00:07:03,850
Jika kita benar-benar mengulanginya.

93
00:07:03,960 --> 00:07:11,140
Jadi jika saya mengatakan untuk item dalam zip daftar saya dan kemudian saya mencetak item.

94
00:07:11,360 --> 00:07:14,010
Perhatikan kembali kami mendapatkan kembali daftar tuple ini.

95
00:07:14,080 --> 00:07:19,000
Jadi sebelumnya dalam kuliah loop saya menyebutkan bahwa tuple dan pengepakan akan menjadi hal

96
00:07:19,000 --> 00:07:23,430
yang sangat berguna karena banyak fungsi built-in yang Python mengembalikan daftar tuple.

97
00:07:23,430 --> 00:07:25,180
Dan ini adalah salah satu fungsinya.

98
00:07:25,210 --> 00:07:31,660
Fungsi Zipp hanya akan seperti ritsleting pada jaket yang disatukan bersama dua daftar ini dan memasangkan barang-barang ini sehingga mereka

99
00:07:31,750 --> 00:07:36,480
cocok bersama dan Anda benar-benar dapat melakukan ini dengan lebih dari sekadar Toolis.

100
00:07:36,580 --> 00:07:38,720
Jadi saya bisa mengatakan Maylis 3.

101
00:07:38,890 --> 00:07:46,490
Dan mari kita tambahkan sekuel beberapa digit di sini akan mengatakan kapasitas 100 200 300.

102
00:07:46,510 --> 00:07:49,660
Ini adalah hal lain Maylis 3.

103
00:07:49,840 --> 00:07:55,090
Dan sekarang saya bisa melihat hasilnya adalah dua bola dari tiga item ini.

104
00:07:55,090 --> 00:07:58,250
Pertanyaan umum adalah apa yang terjadi jika daftar ini tidak rata.

105
00:07:58,420 --> 00:07:59,600
Kita bisa memeriksanya.

106
00:07:59,770 --> 00:08:02,700
Mari menambahkan lebih banyak elemen ke daftar pertama.

107
00:08:02,740 --> 00:08:04,600
Jadi kita akan mengatakan empat atau lima enam di sini.

108
00:08:04,600 --> 00:08:07,720
Sekarang ketika kita menjalankan ini, kita benar-benar mendapatkan hasil yang sama.

109
00:08:07,720 --> 00:08:13,930
Jadi perlu diingat Zipp hanya akan bisa pergi dan zip bersama sejauh daftar yang

110
00:08:13,930 --> 00:08:14,740
terpendek.

111
00:08:14,830 --> 00:08:16,170
Jadi itu tidak akan memberikan kesalahan.

112
00:08:16,210 --> 00:08:21,890
Saya hanya akan mengabaikan segala sesuatu yang ekstra yang Anda lihat di sini yang kami iterasi melalui zip.

113
00:08:21,910 --> 00:08:25,830
Tetapi jika Anda benar-benar hanya ingin mendapatkan daftar itu sendiri, Anda bisa melemparkannya menggunakan daftar.

114
00:08:26,050 --> 00:08:31,740
Jadi kita bisa mengatakan daftar Zipp dan kemudian kita akan menyatukan daftar-daftar ini.

115
00:08:32,560 --> 00:08:35,510
Dan di sana Anda pergi satu ke b tiga C ..

116
00:08:35,530 --> 00:08:35,740
Baiklah.

117
00:08:35,740 --> 00:08:37,120
Itu operator Zip.

118
00:08:37,120 --> 00:08:43,060
Sangat berguna untuk zip bersama ke daftar jika Anda ingin menggunakannya bersama-sama menggunakan tuple dan packing.

119
00:08:43,060 --> 00:08:49,320
Jadi seperti yang saya sebutkan Anda bisa membongkar ini sehingga saya bisa mengatakan kolom menjadi C dan mungkin hanya mencetak

120
00:08:49,740 --> 00:08:55,120
B di sini dan saya hanya mendapatkan kembali surat-surat sekarang ingin menunjukkan kepada Anda di operator

121
00:08:55,150 --> 00:09:00,220
Kami telah melihat hal itu dalam kata kunci dalam for loop tetapi kami dapat menggunakannya untuk memeriksa dengan

122
00:09:00,280 --> 00:09:02,400
cepat apakah suatu objek ada dalam daftar.

123
00:09:02,530 --> 00:09:08,610
Yang bisa saya katakan adalah X dalam daftar 1 hingga 3 dan 0 mengembalikan boolean benar atau salah.

124
00:09:08,650 --> 00:09:10,630
Apakah dalam 1 hingga 3.

125
00:09:10,660 --> 00:09:13,300
Saya juga bisa menggunakannya untuk daftar surat.

126
00:09:13,300 --> 00:09:17,790
Jadi misalnya jangan katakan X Y Z.

127
00:09:19,650 --> 00:09:22,760
Satu jam mengembalikan true karena x ada di daftar itu.

128
00:09:22,770 --> 00:09:26,230
Jadi ini adalah cara yang sangat bagus untuk dengan cepat memeriksa apakah ada sesuatu dalam daftar.

129
00:09:26,400 --> 00:09:31,580
Jadi Naledge berubah menjadi dua dalam 1 menjadi 3 dan itu benar kata kuncinya.

130
00:09:31,620 --> 00:09:35,210
Ia juga bekerja pada tipe objek dan string yang dapat diubah.

131
00:09:35,250 --> 00:09:36,960
Anda bisa katakan

132
00:09:39,670 --> 00:09:43,620
adalah di dunia O dan itu mengembalikan kembali benar.

133
00:09:43,630 --> 00:09:52,150
Ini juga berfungsi di kamus untuk kunci mereka sehingga saya bisa mengatakan kunci saya dan kemudian memeriksa apakah itu ada di

134
00:09:52,150 --> 00:09:52,840
kamus.

135
00:09:52,840 --> 00:09:56,160
Ayo cepat buat yang punya kunci Mikey.

136
00:09:56,230 --> 00:09:57,370
Dan mari kita beri nilai.

137
00:09:57,370 --> 00:10:03,220
Tiga empat lima dan mengembalikan kembali benar karena kunci saya ada di kamus ini jika Anda ingin memeriksa

138
00:10:03,220 --> 00:10:08,050
apakah itu suatu item atau jika itu dalam nilai maka Anda bisa menyebutnya sendiri.

139
00:10:08,050 --> 00:10:11,240
Jadi untuk menunjukkan kepada Anda apa yang saya maksud dengan itu mari kita kembali ke cerita.

140
00:10:13,720 --> 00:10:18,270
Dan bisa dikatakan hei adalah tiga empat atau lima dalam D.

141
00:10:20,270 --> 00:10:21,400
Nilai-nilai.

142
00:10:21,940 --> 00:10:25,040
Sekarang kembali benar jika saya meminta kunci.

143
00:10:25,240 --> 00:10:27,070
Ini mengembalikan kembali false.

144
00:10:27,170 --> 00:10:29,270
Jadi itulah kata kunci operator.

145
00:10:29,360 --> 00:10:30,870
Sangat berguna untuk memeriksa dengan cepat.

146
00:10:30,890 --> 00:10:33,980
Saya suka banyak menggunakannya saat bekerja dengan string.

147
00:10:33,980 --> 00:10:37,910
Beberapa lebih dari yang saya ingin tunjukkan adalah beberapa fungsi matematika minimax.

148
00:10:37,940 --> 00:10:40,020
Dan kemudian perpustakaan acak.

149
00:10:40,070 --> 00:10:47,660
Jadi, jika Anda memiliki serangkaian angka, mari kita segera membuat satu daftar saya 10 20 30 40 dan mari kita beralih

150
00:10:47,660 --> 00:10:48,670
ke 100.

151
00:10:48,920 --> 00:10:54,510
Jika saya ingin mengetahui nilai minimum di sana, ada fungsi min in built yang dapat

152
00:10:54,510 --> 00:10:56,910
dilewati dan bandara menetapkan minimum daftar.

153
00:10:56,910 --> 00:11:02,010
Dan ada juga fungsi maks di sana melaporkan kembali nilai maksimum daftar.

154
00:11:02,100 --> 00:11:07,020
Jadi ingatlah itu karena sering kali akan sangat menggoda untuk menggunakan min dan max sebagai kata kunci tetapi mereka

155
00:11:07,020 --> 00:11:08,930
sudah dibangun di fungsi dengan Python.

156
00:11:08,940 --> 00:11:14,810
Jadi jangan gunakan itu dan itu dilambangkan dengan fakta bahwa mereka menunjukkan Anda sintaks menyoroti OK.

157
00:11:14,810 --> 00:11:16,900
Mari kita cepat membahas perpustakaan acak.

158
00:11:17,150 --> 00:11:21,590
Jadi Python sebenarnya berasal dari dibangun di perpustakaan acak dan ada banyak fungsi yang termasuk dalam

159
00:11:21,590 --> 00:11:22,460
perpustakaan ini.

160
00:11:22,700 --> 00:11:28,310
Dan ini sebenarnya akan menjadi contoh pertama mengimpor perpustakaan fungsi-fungsi penting dari

161
00:11:28,310 --> 00:11:28,840
perpustakaan.

162
00:11:28,850 --> 00:11:37,710
Apa yang dapat Anda lakukan adalah mengatakan dari impor acak dan jika Anda menekan tab di sini Anda harus dapat melihat daftar pilihan

163
00:11:37,710 --> 00:11:39,140
drop down besar.

164
00:11:39,320 --> 00:11:44,590
Dan banyak dari ini adalah fungsi yang tersedia untuk Anda di dalam perpustakaan bawaan ini.

165
00:11:44,600 --> 00:11:47,720
Jadi yang akan kami tunjukkan saat ini adalah shuffle.

166
00:11:47,720 --> 00:11:52,490
Jadi apa yang dikatakannya adalah hei dari pustaka acak yang dibangun menjadi Python.

167
00:11:52,490 --> 00:11:54,940
Impor fungsi acak.

168
00:11:55,040 --> 00:11:59,590
Dan nanti dalam kursus ini kita akan membahas cara mengunduh perpustakaan lain dari Internet.

169
00:11:59,870 --> 00:12:01,350
Saat ini Rannells sudah terintegrasi.

170
00:12:01,550 --> 00:12:07,870
Jadi sekarang kita memiliki fungsi acak ini dan apa yang dilakukannya adalah mengacak secara acak berbagai jenis daftar.

171
00:12:07,880 --> 00:12:09,540
Jadi mari kita buat daftar lain.

172
00:12:10,810 --> 00:12:15,570
Dan mari kita buat pesanan jadi tiga empat lima enam tujuh delapan sembilan sepuluh.

173
00:12:16,260 --> 00:12:23,850
Dan jika kita mengacak daftar ini dan kemudian memanggil daftar itu lagi, sekarang dikocok atau diacak.

174
00:12:23,850 --> 00:12:28,020
Dan jika kita menjalankan shuffle lagi dan perhatikan di sini aku akan menjalankan itu sekali lagi

175
00:12:28,260 --> 00:12:29,890
Ini akan mengubah susunan daftar.

176
00:12:29,940 --> 00:12:32,570
Anda juga harus mencatat bahwa sebenarnya tidak mengembalikan apa pun.

177
00:12:32,580 --> 00:12:40,970
Jadi jika saya meminta daftar acak ini sama dengan shuffle, itu tidak akan berhasil karena tidak mengembalikan apa

178
00:12:40,970 --> 00:12:41,510
pun.

179
00:12:41,510 --> 00:12:43,890
Jadi itu hanya akan mengatakan hei tidak ada apa-apa di sana.

180
00:12:43,890 --> 00:12:48,130
Dan jika Anda memeriksa jenis ini lagi mengatakan tidak ada tipe.

181
00:12:48,170 --> 00:12:53,300
Jadi ini adalah fungsi in-place yang artinya beroperasi pada daftar itu.

182
00:12:53,300 --> 00:12:55,690
Jadi untuk memeriksa daftar saya sekarang masih diacak.

183
00:12:56,120 --> 00:12:56,580
BAIK.

184
00:12:56,720 --> 00:12:58,420
Jadi itu daftar saya.

185
00:12:58,640 --> 00:13:01,510
Dan itulah fungsi shuffle untuk mengacak daftar.

186
00:13:01,520 --> 00:13:04,720
Ada juga fungsi yang sangat bagus untuk mengambil bilangan bulat acak.

187
00:13:05,210 --> 00:13:13,540
Jadi kita dapat mengatakan dari impor acak Rande I N T dan itu memungkinkan kita untuk dengan cepat mengambil integer acak.

188
00:13:13,540 --> 00:13:21,770
Jadi saya akan mengatakan Rand I. SEBUAH. dan apa yang kita lakukan di sini adalah kita pasan kisaran yang lebih rendah dari setiap kisaran atas.

189
00:13:21,770 --> 00:13:28,390
Jadi saya bisa mengatakan Rand Diante dari 0 hingga 100 dan mengembalikan beberapa integer acak dalam pertarungan.

190
00:13:28,400 --> 00:13:34,170
Lakukan ini lagi dari 0 hingga 100 dalam bilangan bulat acak lainnya dan kemungkinan besar nomor Anda akan berbeda dari

191
00:13:34,170 --> 00:13:34,700
saya.

192
00:13:34,740 --> 00:13:41,790
Karena lagi-lagi ini acak dan karena mengembalikan sesuatu yang bisa saya simpan sehingga saya bisa mengatakan

193
00:13:41,790 --> 00:13:45,960
nama saya sama dengan Ranz, saya nol sampai 10.

194
00:13:46,220 --> 00:13:48,920
Dan nanti saya bisa menggunakan nomor itu.

195
00:13:48,950 --> 00:13:54,690
Akhirnya mari kita tunjukkan bagaimana cara menerima input pengguna dan sebenarnya cukup mudah dengan fungsi input.

196
00:13:55,160 --> 00:14:00,020
Jadi kami menggunakan fungsi input kata kunci khusus dan kemudian kami memiliki teks yang ingin ditampilkan ketika

197
00:14:00,020 --> 00:14:02,020
kami benar-benar meminta input dari pengguna.

198
00:14:02,240 --> 00:14:10,720
Jadi katakanlah, masukkan nomor di sini panggilan dan ruang dan ketika Anda menjalankan ini sekarang ular meminta Anda untuk memasukkan

199
00:14:10,720 --> 00:14:11,180
nomor.

200
00:14:11,250 --> 00:14:14,820
Jadi kita akan pergi ke depan dan masukkan satu akan mengatakan 50 dan di sana kita pergi.

201
00:14:14,820 --> 00:14:20,420
Sekarang ada 50 biasanya di mana Anda akan lakukan adalah mengatakan ini adalah semacam hasil.

202
00:14:20,700 --> 00:14:24,450
Jadi, Anda akan mengatakan hei, variabel apa pun yang Anda inginkan sama dengan input.

203
00:14:24,690 --> 00:14:26,340
Dan ungkapan ini Anda bisa mengatakan apa pun yang Anda inginkan.

204
00:14:26,340 --> 00:14:29,290
Jadi kita bisa mengatakan siapa namamu.

205
00:14:29,460 --> 00:14:31,750
Kami menjalankan ini dan kemudian mengatakan Siapa namamu.

206
00:14:31,750 --> 00:14:32,900
Saya akan mengetikkan Jose.

207
00:14:33,030 --> 00:14:37,960
Dan kemudian pada kode Anda yang dapat Anda lakukan adalah merujuk ke hasil ketika Anda kembali.

208
00:14:38,160 --> 00:14:39,870
Jose sebagai string.

209
00:14:39,870 --> 00:14:41,580
Jadi itulah dasar-dasar input.

210
00:14:41,610 --> 00:14:46,620
Hal yang harus Anda perhatikan adalah input selalu menerima apa pun yang diteruskan

211
00:14:46,620 --> 00:14:47,550
sebagai string.

212
00:14:47,550 --> 00:14:49,590
Jadi mari kita kembali ke contoh angka itu.

213
00:14:50,040 --> 00:14:53,110
Jadi kami akan bertanya kepada pengguna Hei, apa nomor favorit Anda.

214
00:14:55,460 --> 00:15:01,450
Ketika kami menjalankan itu jika saya lulus dan 30 dan saya tekan enter di sana dan kemudian saya meminta hasilnya.

215
00:15:01,490 --> 00:15:04,460
Ini sebenarnya versi string 130.

216
00:15:04,550 --> 00:15:08,710
Jadi jika saya katakan jenis hasil di sini katanya hei itu string.

217
00:15:08,720 --> 00:15:15,680
Jadi untuk benar-benar melemparkan ini atau benar-benar mengubahnya menjadi tipe data lain apa yang harus saya lakukan adalah mengatakan

218
00:15:15,680 --> 00:15:23,090
mengapung hasil untuk mendapatkan kembali 30 poin nol atau jika saya masih ingin menjadi bilangan bulat saya bisa mengatakan hasil bilangan

219
00:15:23,090 --> 00:15:29,150
bulat dan mengembalikan kembali 30 dan sekarang ini adalah angka aktual bukan string karena Anda baru saja

220
00:15:29,150 --> 00:15:30,050
mengatakan hasil.

221
00:15:30,200 --> 00:15:32,240
Mereka yang di sini masih memiliki kutipan itu.

222
00:15:32,240 --> 00:15:37,250
Jadi ingatlah bahwa IMPA selalu menerima sesuatu sebagai string karena nantinya Anda mungkin ingin

223
00:15:37,250 --> 00:15:39,510
menggunakan input untuk meraih posisi indeks.

224
00:15:39,650 --> 00:15:45,440
Jadi Anda kemungkinan besar harus membuangnya dan Anda bisa melakukan ini semua dalam satu baris dengan mengatakan bungkus ini di I. SEBUAH.

225
00:15:46,580 --> 00:15:48,110
dan kemudian kita akan mendapatkan nomor favorit di sini.

226
00:15:48,110 --> 00:15:49,290
Jadi saya katakan 20.

227
00:15:49,860 --> 00:15:54,200
Dan sekarang ketika saya memeriksa jenis hasil saya itu adalah bilangan bulat.

228
00:15:54,200 --> 00:15:54,400
BAIK.

229
00:15:54,410 --> 00:15:57,040
Jadi itulah dasar-dasar fungsi input.

230
00:15:57,380 --> 00:16:02,330
Dan itu adalah beberapa operator berguna lainnya yang akan kita gunakan terutama nanti dalam proyek

231
00:16:02,330 --> 00:16:03,440
tonggak pertama Anda.

232
00:16:03,440 --> 00:16:07,350
Anda dapat melihat buku catatan untuk lebih banyak contoh dan saya akan melihat Anda di kuliah berikutnya.

233
00:16:07,520 --> 00:16:08,430
Terimakasih semuanya.
