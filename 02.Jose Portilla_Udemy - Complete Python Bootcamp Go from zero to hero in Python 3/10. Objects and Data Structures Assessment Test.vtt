WEBVTT
1
1

00:00:01.527  -->  00:00:02.875
<v Instructor>Hello everyone,</v>
2

2

00:00:02.875  -->  00:00:05.520
and this is just gonna be a quick overview
3

3

00:00:05.520  -->  00:00:09.265
of the objects and data structures assessment test.
4

4

00:00:09.265  -->  00:00:12.191
So you can go ahead and go to nbviewer or GitHub
5

5

00:00:12.191  -->  00:00:15.518
as we described earlier to get a copy of this notebook.
6

6

00:00:15.518  -->  00:00:17.545
If you're in nbviewer, you can just click right here
7

7

00:00:17.545  -->  00:00:19.410
at top right to download it.
8

8

00:00:19.410  -->  00:00:21.122
And I'm just gonna go over the questions
9

9

00:00:21.122  -->  00:00:24.105
make sure you understand all of 'em and what they're asking.
10

10

00:00:24.105  -->  00:00:27.783
So in this question right here, Test your knowledge,
11

11

00:00:27.783  -->  00:00:29.884
first thing I want you to do
12

12

00:00:29.884  -->  00:00:31.883
is just write a brief description
13

13

00:00:31.883  -->  00:00:34.365
of the following object types and data structures
14

14

00:00:34.365  -->  00:00:35.198
we've learned about,
15

15

00:00:35.198  -->  00:00:38.161
so number, string, list, tuples, and dictionaries.
16

16

00:00:38.161  -->  00:00:41.413
Don't worry about sets and Boleans for this question.
17

17

00:00:41.413  -->  00:00:44.140
Okay, so then there's gonna be a couple questions
18

18

00:00:44.140  -->  00:00:46.821
for each of the different object types or data structures
19

19

00:00:46.821  -->  00:00:48.320
we have learned about.
20

20

00:00:48.320  -->  00:00:51.203
So in Numbers, first question, I want you
21

21

00:00:51.203  -->  00:00:54.288
to write an equation that uses multiplication, division,
22

22

00:00:54.288  -->  00:00:58.455
an exponent, addition, and subtraction to equal 100.25.
23

23

00:00:59.997  -->  00:01:01.216
So this is just to test your memory
24

24

00:01:01.216  -->  00:01:04.098
of the basic arithmetic commands,
25

25

00:01:04.098  -->  00:01:07.959
so go ahead and feel free to work backwards from 100.25.
26

26

00:01:07.959  -->  00:01:10.282
So you can start with like just dividing 100
27

27

00:01:10.282  -->  00:01:14.449
then taking a power to it or just a square root, etc., etc.
28

28

00:01:16.061  -->  00:01:20.228
Alright, next question, I have here two forward slash three
29

29

00:01:21.280  -->  00:01:23.193
so I want you to explain what you believe
30

30

00:01:23.193  -->  00:01:25.469
the cell below is gonna output
31

31

00:01:25.469  -->  00:01:29.128
and how can you change the answer if it is correct.
32

32

00:01:29.128  -->  00:01:31.691
So remember that discussion we had of the vision
33

33

00:01:31.691  -->  00:01:34.644
between Python two and Python three.
34

34

00:01:34.644  -->  00:01:36.646
That's what that question's getting at.
35

35

00:01:36.646  -->  00:01:40.062
Alright, the next thing, I want you to answer
36

36

00:01:40.062  -->  00:01:41.048
these questions right here,
37

37

00:01:41.048  -->  00:01:42.878
what's the value of these expressions,
38

38

00:01:42.878  -->  00:01:45.808
and do it in your head without typing code.
39

39

00:01:45.808  -->  00:01:47.191
This has to do with order of operations,
40

40

00:01:47.191  -->  00:01:48.415
make sure you understand
41

41

00:01:48.415  -->  00:01:51.431
and then you can type the code out to check your answer.
42

42

00:01:51.431  -->  00:01:53.137
Alright, next question.
43

43

00:01:53.137  -->  00:01:55.135
What is the type of the result of the expression
44

44

00:01:55.135  -->  00:01:56.968
3 + 1.5 + 4?
45

45

00:01:58.754  -->  00:02:01.517
After that, what would you use to find a number's
46

46

00:02:01.517  -->  00:02:04.434
square root, as well as its square?
47

47

00:02:05.420  -->  00:02:07.245
So I'll let you go ahead and fill in that cell
48

48

00:02:07.245  -->  00:02:09.295
once you're there.
49

49

00:02:09.295  -->  00:02:11.029
Next section is gonna be strings so,
50

50

00:02:11.029  -->  00:02:14.426
given the string 'hello', so you can see here s = 'hello',
51

51

00:02:14.426  -->  00:02:17.253
give an index command that returns 'e'.
52

52

00:02:17.253  -->  00:02:18.592
So you can use the code below.
53

53

00:02:18.592  -->  00:02:20.019
So basically give some sort of index
54

54

00:02:20.019  -->  00:02:22.628
so I only get 'e' out.
55

55

00:02:22.628  -->  00:02:25.966
Then I want you to reverse the string 'hello' using indexing
56

56

00:02:25.966  -->  00:02:27.757
so you can go ahead and code that there.
57

57

00:02:27.757  -->  00:02:29.586
And then again, given the string 'hello',
58

58

00:02:29.586  -->  00:02:31.050
I want you to give two methods
59

59

00:02:31.050  -->  00:02:34.709
of producing the letter 'o' using indexing.
60

60

00:02:34.709  -->  00:02:37.424
So I expect you have, be able to come at least with
61

61

00:02:37.424  -->  00:02:39.544
two methods to produce just the letter 'o'
62

62

00:02:39.544  -->  00:02:41.816
out of that 'hello' string.
63

63

00:02:41.816  -->  00:02:44.891
Okay, moving along we have Lists.
64

64

00:02:44.891  -->  00:02:48.172
So questions here, I want you to build this list
65

65

00:02:48.172  -->  00:02:50.034
zero, zero, zero, three zeros
66

66

00:02:50.034  -->  00:02:53.939
using two separate ways to build it out.
67

67

00:02:53.939  -->  00:02:56.797
After this, I want you to reassign the 'hello'
68

68

00:02:56.797  -->  00:02:59.277
in this nested list to say 'goodbye',
69

69

00:02:59.277  -->  00:03:01.228
so that's gonna check your understanding
70

70

00:03:01.228  -->  00:03:04.061
of index levels for a nested list.
71

71

00:03:05.171  -->  00:03:07.730
Then I want you to sort the list below.
72

72

00:03:07.730  -->  00:03:09.438
See if you remember how to do that.
73

73

00:03:09.438  -->  00:03:11.542
Moving on, we'll have Dictionaries.
74

74

00:03:11.542  -->  00:03:14.139
So using keys and indexing, grab 'hello'
75

75

00:03:14.139  -->  00:03:15.794
from the following dictionaries.
76

76

00:03:15.794  -->  00:03:18.524
So this is gonna get progressively harder and harder.
77

77

00:03:18.524  -->  00:03:20.747
Right now, this one should be pretty simple for you,
78

78

00:03:20.747  -->  00:03:24.814
so I want you to use keys and index calls with brackets
79

79

00:03:24.814  -->  00:03:27.440
to grab 'hello' out of this dictionary,
80

80

00:03:27.440  -->  00:03:29.858
then out of this dictionary, then out of that dictionary,
81

81

00:03:29.858  -->  00:03:31.102
and then out of this dictionary.
82

82

00:03:31.102  -->  00:03:34.988
So you notice, the nesting gets harder and harder.
83

83

00:03:34.988  -->  00:03:36.897
Okay, then I want you to answer the question,
84

84

00:03:36.897  -->  00:03:40.397
Can you sort a dictionary? Why or why not?
85

85

00:03:41.372  -->  00:03:42.205
Tuples:
86

86

00:03:42.205  -->  00:03:43.837
What's the major difference between tuples and lists?
87

87

00:03:43.837  -->  00:03:45.344
and, how do you create a tuple?
88

88

00:03:45.344  -->  00:03:46.805
are the questions there.
89

89

00:03:46.805  -->  00:03:48.841
Sets: What is unique about a set?
90

90

00:03:48.841  -->  00:03:52.416
Use a set to find unique values of the list below.
91

91

00:03:52.416  -->  00:03:55.801
And then Booleans, so for the following quiz questions,
92

92

00:03:55.801  -->  00:03:59.587
I have a brief table here of all the comparison operations
93

93

00:03:59.587  -->  00:04:01.827
so I want you to go ahead and read through this.
94

94

00:04:01.827  -->  00:04:04.432
There's an entire section devoted to comparison operators,
95

95

00:04:04.432  -->  00:04:07.356
but this will be a nice little preview for you to read.
96

96

00:04:07.356  -->  00:04:10.240
So, go ahead and read this, but basically what it's saying
97

97

00:04:10.240  -->  00:04:12.802
is here we have the operator,
98

98

00:04:12.802  -->  00:04:15.491
the description of what it does, and a quick example.
99

99

00:04:15.491  -->  00:04:19.658
So for instance, this == is an example of
100

100

00:04:20.743  -->  00:04:22.972
checking if the two operands are equal.
101

101

00:04:22.972  -->  00:04:24.642
So then the condition becomes true.
102

102

00:04:24.642  -->  00:04:26.917
So a equals b in this case is not true,
103

103

00:04:26.917  -->  00:04:30.220
but a == a would be true.
104

104

00:04:30.220  -->  00:04:34.046
And then the greater than, less than, etc., etc.
105

105

00:04:34.046  -->  00:04:37.215
So, I want you to go ahead and look at these
106

106

00:04:37.215  -->  00:04:38.474
and before you run the cell,
107

107

00:04:38.474  -->  00:04:41.807
answer what the Boolean you believe will be.
108

108

00:04:41.807  -->  00:04:44.450
Okay, so don't worry too much about these operators
109

109

00:04:44.450  -->  00:04:47.953
if they're confusing you, as far as comparison operations,
110

110

00:04:47.953  -->  00:04:49.849
then you can go ahead and feel free to skip this section
111

111

00:04:49.849  -->  00:04:52.738
and wait until you complete the comparison operators
112

112

00:04:52.738  -->  00:04:54.697
section of the course.
113

113

00:04:54.697  -->  00:04:58.284
Okay, then there's one final question.
114

114

00:04:58.284  -->  00:05:00.442
So, given these two nested lists,
115

115

00:05:00.442  -->  00:05:03.691
what do you think will be the output of this cell block?
116

116

00:05:03.691  -->  00:05:05.273
And then run it to check your answer.
117

117

00:05:05.273  -->  00:05:09.440
Okay, that's it and good luck on your first assessment.
118

118

00:05:10.321  -->  00:05:11.821
Okay, thanks guys.
