1
1

00:00:01,833  -->  00:00:02,862
<v Instructor>Hello everyone,</v>
2

2

00:00:02,862  -->  00:00:05,422
and welcome to the modules lecture.
3

3

00:00:05,422  -->  00:00:06,657
In this lecture we'll be learning
4

4

00:00:06,657  -->  00:00:08,956
about what modules really are,
5

5

00:00:08,956  -->  00:00:11,932
how to import them with an import statement,
6

6

00:00:11,932  -->  00:00:13,824
how to use them in your workspace,
7

7

00:00:13,824  -->  00:00:16,168
and also how to instal modules from the internet
8

8

00:00:16,168  -->  00:00:20,078
that are not included in your basic Python installation.
9

9

00:00:20,078  -->  00:00:23,745
So, here I have a notebook open call modules
10

10

00:00:25,522  -->  00:00:27,738
and what we're gonna start off with is how to use them.
11

11

00:00:27,738  -->  00:00:30,730
And you've actually seen me use these modules a few times,
12

12

00:00:30,730  -->  00:00:34,149
but now let's formalise how we actually use them.
13

13

00:00:34,149  -->  00:00:36,417
So you are gonna start with an import statement.
14

14

00:00:36,417  -->  00:00:40,584
So let me go ahead and jump over to an empty notebook.
15

15

00:00:41,747  -->  00:00:45,792
So to import from a module you need to say "import",
16

16

00:00:45,792  -->  00:00:47,816
notice the syntax highlighting,
17

17

00:00:47,816  -->  00:00:49,960
and then the name of the module.
18

18

00:00:49,960  -->  00:00:52,273
In this case, I'll import a built-in module
19

19

00:00:52,273  -->  00:00:55,855
in Python called the math module.
20

20

00:00:55,855  -->  00:00:57,463
For more built-in modules you can
21

21

00:00:57,463  -->  00:00:59,563
check out that section of this course.
22

22

00:00:59,563  -->  00:01:00,469
But for right now we'll start
23

23

00:01:00,469  -->  00:01:03,841
with a very basic one, the math module.
24

24

00:01:03,841  -->  00:01:07,143
Now, I can type in math and since I'm
25

25

00:01:07,143  -->  00:01:10,067
using an IPython or Jupyter notebook,
26

26

00:01:10,067  -->  00:01:13,039
I can use dot-tab to use all the various
27

27

00:01:13,039  -->  00:01:17,206
functions that are available to me with this module.
28

28

00:01:21,615  -->  00:01:25,283
Alright, so let's do a very basic one called sqrt,
29

29

00:01:25,283  -->  00:01:27,836
which stands for "square root."
30

30

00:01:27,836  -->  00:01:31,257
So, I can take the square root of four
31

31

00:01:31,257  -->  00:01:34,840
and I'll output two 2.0, or two point zero.
32

32

00:01:35,831  -->  00:01:38,189
Now modules are really useful,
33

33

00:01:38,189  -->  00:01:41,411
so it saves yourself from having to write a lot of code,
34

34

00:01:41,411  -->  00:01:43,467
and more likely than not someone's already
35

35

00:01:43,467  -->  00:01:45,567
created a module for you either online
36

36

00:01:45,567  -->  00:01:48,532
or built into Python for code that you were
37

37

00:01:48,532  -->  00:01:51,246
thinking of writing before.
38

38

00:01:51,246  -->  00:01:54,471
So, there's lots of various math functions
39

39

00:01:54,471  -->  00:01:56,119
that you won't have to write anymore
40

40

00:01:56,119  -->  00:02:00,903
because they're built into the Python module for math.
41

41

00:02:00,903  -->  00:02:03,914
Now another we could have used
42

42

00:02:03,914  -->  00:02:06,968
is to specifically import functions from the module.
43

43

00:02:06,968  -->  00:02:09,885
So to say "import math" is one way,
44

44

00:02:11,965  -->  00:02:14,445
but another way, if I just wanted to import
45

45

00:02:14,445  -->  00:02:17,326
the square root function, I could have said,
46

46

00:02:17,326  -->  00:02:19,326
"from math import sqrt."
47

47

00:02:24,589  -->  00:02:26,960
And now you'll notice the syntax for using
48

48

00:02:26,960  -->  00:02:30,210
square root will actually just be sqrt.
49

49

00:02:32,391  -->  00:02:33,224
A four.
50

50

00:02:34,085  -->  00:02:35,814
And I don't have to specify that it's
51

51

00:02:35,814  -->  00:02:37,873
coming from the math module anymore,
52

52

00:02:37,873  -->  00:02:39,530
because I used this syntax.
53

53

00:02:39,530  -->  00:02:42,095
From math, import square root.
54

54

00:02:42,095  -->  00:02:45,853
So I explicitly told Python what sqrt meant
55

55

00:02:45,853  -->  00:02:48,372
throughout the rest of my code.
56

56

00:02:48,372  -->  00:02:51,706
Now as far as formal syntax and code formatting,
57

57

00:02:51,706  -->  00:02:53,569
you should put all your import statements
58

58

00:02:53,569  -->  00:02:55,098
at the top of your code.
59

59

00:02:55,098  -->  00:02:57,082
If you're using this in a Jupyter notebook,
60

60

00:02:57,082  -->  00:02:59,771
you should put them all in the first cell.
61

61

00:02:59,771  -->  00:03:02,122
But if you're writing just a normal .py file
62

62

00:03:02,122  -->  00:03:03,929
or dot pie file, you should put all
63

63

00:03:03,929  -->  00:03:08,174
your import statements in the top of your code.
64

64

00:03:08,174  -->  00:03:10,646
Alright, as far as best practises,
65

65

00:03:10,646  -->  00:03:12,915
you want to try to use this syntax.
66

66

00:03:12,915  -->  00:03:16,745
From math, import whatever functions you want.
67

67

00:03:16,745  -->  00:03:18,885
It'll save Python from having to load in
68

68

00:03:18,885  -->  00:03:21,652
the entire built-in module,
69

69

00:03:21,652  -->  00:03:24,327
and instead it'll just import the functions you need.
70

70

00:03:24,327  -->  00:03:27,213
So it'll save headspace that way.
71

71

00:03:27,213  -->  00:03:30,186
Let's just back to the notebook,
72

72

00:03:30,186  -->  00:03:32,375
and talk about how to download modules
73

73

00:03:32,375  -->  00:03:35,053
that are not built in to Python.
74

74

00:03:35,053  -->  00:03:37,564
So there's two ways to do this.
75

75

00:03:37,564  -->  00:03:40,201
The best way is to check if Anaconda,
76

76

00:03:40,201  -->  00:03:43,170
the installation we used since the beginning,
77

77

00:03:43,170  -->  00:03:46,662
has the module already downloaded for you.
78

78

00:03:46,662  -->  00:03:49,866
So you notice the Anaconda distribution
79

79

00:03:49,866  -->  00:03:53,242
actually downloaded a bunch of scientific computer modules
80

80

00:03:53,242  -->  00:03:56,754
and other poplar modules into Python for you.
81

81

00:03:56,754  -->  00:03:59,921
So the best way to instal a module right now
82

82

00:03:59,921  -->  00:04:02,518
is to either open up your terminal
83

83

00:04:02,518  -->  00:04:05,609
or to open up your Anaconda command prompt,
84

84

00:04:05,609  -->  00:04:07,305
I'll do that right now.
85

85

00:04:07,305  -->  00:04:10,949
So you notice here I have my Anaconda command prompt.
86

86

00:04:10,949  -->  00:04:14,816
If you have a mac you can use the terminal.
87

87

00:04:14,816  -->  00:04:17,149
So what I'm going to do, is,
88

88

00:04:18,742  -->  00:04:21,791
open up my command prompt, and let's say I wanted
89

89

00:04:21,791  -->  00:04:25,545
to instal a particular module I found online.
90

90

00:04:25,545  -->  00:04:27,733
And we'll discuss how to find these modules
91

91

00:04:27,733  -->  00:04:29,603
online in just a second.
92

92

00:04:29,603  -->  00:04:33,770
But what I could do is say "conda", C-O-N-D-A.
93

93

00:04:36,656  -->  00:04:38,885
Instal, and then the name of either
94

94

00:04:38,885  -->  00:04:41,932
the package or module I want to instal.
95

95

00:04:41,932  -->  00:04:44,649
So let's say I wanted to instal Flask.
96

96

00:04:44,649  -->  00:04:48,473
Flask is a web framework for creating websites with Python.
97

97

00:04:48,473  -->  00:04:51,439
So I would say "conda instal Flask."
98

98

00:04:51,439  -->  00:04:52,606
I'd hit enter.
99

99

00:04:53,745  -->  00:04:55,969
You'll notice a statement saying
100

100

00:04:55,969  -->  00:04:58,987
"fetching package metadata."
101

101

00:04:58,987  -->  00:05:02,246
And because Anaconda comes with Flask built in,
102

102

00:05:02,246  -->  00:05:06,905
it'll actually instal it using the Anaconda distribution.
103

103

00:05:06,905  -->  00:05:10,076
So you'll notice here since I've already done this before,
104

104

00:05:10,076  -->  00:05:12,170
I don't get the typical message.
105

105

00:05:12,170  -->  00:05:15,730
But I'm just installing, updating right now Python.
106

106

00:05:15,730  -->  00:05:17,378
So that's one way to do it.
107

107

00:05:17,378  -->  00:05:21,545
I'm gonna pause and jump the video to show you another way.
108

108

00:05:22,454  -->  00:05:24,645
Okay, so I installed that package
109

109

00:05:24,645  -->  00:05:27,935
or module using conda instal.
110

110

00:05:27,935  -->  00:05:29,955
But what if Anaconda distribution doesn't
111

111

00:05:29,955  -->  00:05:31,767
include that particular module
112

112

00:05:31,767  -->  00:05:34,033
or package that you're looking for?
113

113

00:05:34,033  -->  00:05:37,005
Well, you can use pip instal.
114

114

00:05:37,005  -->  00:05:40,263
Pip, P-I-P, is a package management system
115

115

00:05:40,263  -->  00:05:42,990
that's used to instal and manage software packages
116

116

00:05:42,990  -->  00:05:45,289
and it's written in Python.
117

117

00:05:45,289  -->  00:05:47,977
So most packages that are worth downloading
118

118

00:05:47,977  -->  00:05:49,869
can be found on what's called
119

119

00:05:49,869  -->  00:05:52,869
the "Python Package Index," or PyPI.
120

120

00:05:53,859  -->  00:05:57,359
And that's spelled, P-Y-P-I.
121

121

00:05:59,922  -->  00:06:01,200
And basically that's gonna allow you
122

122

00:06:01,200  -->  00:06:03,366
to instal packages from the internet.
123

123

00:06:03,366  -->  00:06:05,016
So, how do you find these packages
124

124

00:06:05,016  -->  00:06:08,469
and modules that you want to instal?
125

125

00:06:08,469  -->  00:06:11,900
Well, let's say I wanted to look for
126

126

00:06:11,900  -->  00:06:16,878
a package that allowed me to create powerpoints in Python.
127

127

00:06:16,878  -->  00:06:18,858
You might think that you'd have to programme
128

128

00:06:18,858  -->  00:06:20,829
that entire thing yourself.
129

129

00:06:20,829  -->  00:06:23,235
But, you should always do a Google search.
130

130

00:06:23,235  -->  00:06:27,402
So for instance, I'm writing "python powerpoint module."
131

131

00:06:30,792  -->  00:06:33,709
The first link is this python-pptx.
132

132

00:06:34,917  -->  00:06:39,039
So if I click this I'm here at the documentation page.
133

133

00:06:39,039  -->  00:06:43,367
So what you should do is look around until you find
134

134

00:06:43,367  -->  00:06:46,012
an installing section on the page.
135

135

00:06:46,012  -->  00:06:48,494
So I click instal here and you notice I can
136

136

00:06:48,494  -->  00:06:52,661
instal this python-pptx using "pip instal python-pptx."
137

137

00:06:55,212  -->  00:06:56,445
So let's go ahead and do that to
138

138

00:06:56,445  -->  00:06:58,712
show you what it looks like.
139

139

00:06:58,712  -->  00:07:01,462
So, I go to my command interface,
140

140

00:07:02,917  -->  00:07:04,898
either terminal or command prompt.
141

141

00:07:04,898  -->  00:07:08,818
Notice I'm not in Python, I'm just at the terminal line.
142

142

00:07:08,818  -->  00:07:11,901
And I say, "pip instal python-pptx."
143

143

00:07:15,020  -->  00:07:19,299
I hit enter and you'll notice it'll begin to instal.
144

144

00:07:19,299  -->  00:07:21,026
Now, I already have it installed
145

145

00:07:21,026  -->  00:07:23,628
so my requirement's already satisfied.
146

146

00:07:23,628  -->  00:07:27,019
You can use "--" to upgrade, in case you want
147

147

00:07:27,019  -->  00:07:30,447
the latest version of this package.
148

148

00:07:30,447  -->  00:07:33,447
So, how do you find packages online?
149

149

00:07:34,768  -->  00:07:36,667
You can either just google search them
150

150

00:07:36,667  -->  00:07:40,903
or another fun thing to do is go to github.
151

151

00:07:40,903  -->  00:07:42,903
So, if you go to github.
152

152

00:07:47,133  -->  00:07:50,834
Github hosts a lot of these packages.
153

153

00:07:50,834  -->  00:07:53,500
So you can click explore,
154

154

00:07:53,500  -->  00:07:57,207
go by programming languages, check those out,
155

155

00:07:57,207  -->  00:07:59,269
so those are actually the repositories
156

156

00:07:59,269  -->  00:08:01,700
for programming languages themselves.
157

157

00:08:01,700  -->  00:08:05,612
But, if you want to find packages for Python,
158

158

00:08:05,612  -->  00:08:08,945
you can go ahead and check out "python".
159

159

00:08:10,514  -->  00:08:14,220
And we'll discuss this in the next video a little further.
160

160

00:08:14,220  -->  00:08:16,803
Sort by, let's say, most stars.
161

161

00:08:18,956  -->  00:08:23,158
And then make sure language, Python is selected.
162

162

00:08:23,158  -->  00:08:26,144
So, you'll see here the second list, awesome-python,
163

163

00:08:26,144  -->  00:08:28,663
and we discuss this a bit in the next video,
164

164

00:08:28,663  -->  00:08:32,386
where it's a curated list of a bunch of different packages
165

165

00:08:32,386  -->  00:08:34,325
for various things in Python.
166

166

00:08:34,325  -->  00:08:37,706
So let's say you want to deal with forms in Python,
167

167

00:08:37,706  -->  00:08:39,274
it'll let you know a bunch of libararies
168

168

00:08:39,274  -->  00:08:42,465
or packages for dealing with forms, et cetera.
169

169

00:08:42,465  -->  00:08:46,465
So another fun thing you can do is go to github,
170

170

00:08:47,562  -->  00:08:51,729
search something that interests you, maybe web scraping.
171

171

00:08:54,154  -->  00:08:55,727
Click enter.
172

172

00:08:55,727  -->  00:08:59,612
Search, you'll notice a bunch of web scraping frameworks.
173

173

00:08:59,612  -->  00:09:00,957
Click Python, so you make sure you're
174

174

00:09:00,957  -->  00:09:03,679
only looking at Python languages.
175

175

00:09:03,679  -->  00:09:06,812
Go ahead and maybe check out this first one called "Grab."
176

176

00:09:06,812  -->  00:09:08,589
So Grab's a web scraping framework.
177

177

00:09:08,589  -->  00:09:10,032
I've actually personally never heard of it,
178

178

00:09:10,032  -->  00:09:12,080
so this is also new for me.
179

179

00:09:12,080  -->  00:09:14,067
So it'll tell you "What is Grab?"
180

180

00:09:14,067  -->  00:09:17,247
It'll explain it to you how to use it, et cetera.
181

181

00:09:17,247  -->  00:09:19,354
You can check out the documentation there.
182

182

00:09:19,354  -->  00:09:22,079
And you'll notice installation.
183

183

00:09:22,079  -->  00:09:24,713
And for more packages pip is
184

184

00:09:24,713  -->  00:09:26,572
the recommended way to instal it.
185

185

00:09:26,572  -->  00:09:30,928
So you say follow this line, "pip instal -U grab."
186

186

00:09:30,928  -->  00:09:34,022
And it'll instal grab and all its dependencies.
187

187

00:09:34,022  -->  00:09:38,105
Okay, so, let's go ahead and review very quickly.
188

188

00:09:39,218  -->  00:09:41,407
How do you use a module or a package
189

189

00:09:41,407  -->  00:09:43,056
that you downloaded off the internet?
190

190

00:09:43,056  -->  00:09:46,729
You say "import" and then that module or package name.
191

191

00:09:46,729  -->  00:09:49,368
If you wanna import particular functions,
192

192

00:09:49,368  -->  00:09:52,717
you use this notation, "from math import,"
193

193

00:09:52,717  -->  00:09:54,537
whatever that function is.
194

194

00:09:54,537  -->  00:09:56,770
So, from the modular package,
195

195

00:09:56,770  -->  00:09:59,585
import that function or method.
196

196

00:09:59,585  -->  00:10:01,523
Then, if you wanna download modules
197

197

00:10:01,523  -->  00:10:04,080
or packages that are not built into Python,
198

198

00:10:04,080  -->  00:10:07,213
I recommend you first try "conda instal",
199

199

00:10:07,213  -->  00:10:09,564
whatever that module or package name is.
200

200

00:10:09,564  -->  00:10:11,670
If Anaconda distribution puts up an error
201

201

00:10:11,670  -->  00:10:13,660
that it doesn't have it, then I suggest
202

202

00:10:13,660  -->  00:10:17,376
you use "pip instal," whatever that package name is.
203

203

00:10:17,376  -->  00:10:20,584
Okay, so that's it, in the next video we'll go
204

204

00:10:20,584  -->  00:10:22,630
over a quick fun assignment for you to
205

205

00:10:22,630  -->  00:10:24,819
explore packages online.
206

206

00:10:24,819  -->  00:10:27,560
Thanks everyone, and I'll see you at the next lecture.
