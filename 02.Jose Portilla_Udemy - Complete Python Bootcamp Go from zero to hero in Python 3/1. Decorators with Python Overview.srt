1
00:00:05,430 --> 00:00:11,700
Selamat datang semua orang ke topik ini di dekorator, kita akan membahas konsep Python yang lebih maju

2
00:00:11,760 --> 00:00:16,390
yang merupakan dekorator dan dekorator memungkinkan Anda untuk mengutip fungsi menghias.

3
00:00:16,620 --> 00:00:20,610
Mari kita bahas apa arti kata Duckery dalam konteks ini.

4
00:00:21,970 --> 00:00:26,490
Bayangkan Anda membuat fungsi di sini hanya dengan merepresentasikan fungsi sederhana.

5
00:00:26,500 --> 00:00:29,340
Ia melakukan beberapa hal sederhana dan kemudian mengembalikan sesuatu.

6
00:00:29,380 --> 00:00:33,490
Jadi Anda membuat fungsi sederhana ini dan sekarang Anda ingin menambahkan beberapa fungsionalitas lainnya.

7
00:00:33,610 --> 00:00:39,730
Atau dengan kata lain menambahkan lebih banyak kode di mana Anda bisa lakukan adalah mengambil fungsi sederhana asli Anda kemudian menambahkan

8
00:00:39,730 --> 00:00:43,350
beberapa hal lagi agar tetap melakukan hal-hal lama dan kemudian mengembalikan sesuatu.

9
00:00:43,360 --> 00:00:49,660
Tetapi gagasan penambahan fungsionalitas baru ini pada dasarnya merepresentasikan masalah karena Anda memiliki dua opsi di

10
00:00:49,660 --> 00:00:50,170
sini.

11
00:00:50,240 --> 00:00:55,510
Entah Anda dapat menambahkan kode tambahan atau dikenal sebagai menambahkan fungsionalitas ke fungsi lama Anda, tetapi kemudian

12
00:00:55,510 --> 00:00:58,750
Anda memiliki masalah karena tidak dapat memanggil fungsi asli Anda.

13
00:00:58,750 --> 00:01:01,620
Anda telah menambahkannya dengan fungsi baru itu.

14
00:01:01,630 --> 00:01:06,790
Opsi lainnya adalah membuat fungsi baru di mana Anda menyalin semua kode lama dan kemudian menambahkan

15
00:01:06,790 --> 00:01:08,040
kode baru itu.

16
00:01:08,050 --> 00:01:12,790
Masalah dengan itu adalah bahwa Anda harus membuat ulang seluruh fungsi lagi meskipun itu hanya

17
00:01:12,790 --> 00:01:13,780
salin dan tempel.

18
00:01:13,780 --> 00:01:14,670
Itu tidak ideal.

19
00:01:14,690 --> 00:01:20,710
Anda harus benar-benar membuat fungsi lain tetapi apa yang sebenarnya ingin Anda hapus fungsi tambahan itu di

20
00:01:20,720 --> 00:01:21,620
kemudian hari.

21
00:01:21,650 --> 00:01:28,430
Yang harus dilakukan adalah menghapus fungsi itu atau memastikan Anda tidak memanggilnya, jadi secara manual pastikan Anda tidak memiliki

22
00:01:28,430 --> 00:01:29,650
fungsi yang lama.

23
00:01:29,660 --> 00:01:30,870
Pasti ada cara yang lebih baik.

24
00:01:30,920 --> 00:01:36,110
Jadi yang lebih baik adalah jika Anda memiliki sakelar mati di mana Anda dapat dengan cepat menambahkan kode

25
00:01:36,110 --> 00:01:39,340
baru itu atau menambahkan fungsionalitas baru dan kemudian mematikannya lagi.

26
00:01:39,920 --> 00:01:42,220
Di sinilah dekorator berperan.

27
00:01:42,230 --> 00:01:47,330
Python memiliki konsep yang disebut dekorator yang memungkinkan Anda untuk dengan cepat memperbaiki fungsionalitas tambahan ke fungsi

28
00:01:47,360 --> 00:01:52,100
yang sudah ada dan kemudian jika Anda tidak lagi menginginkan fungsionalitas tersebut, Anda cukup menghapus

29
00:01:52,130 --> 00:01:54,400
satu baris dari dekorator sehingga mereka menggunakannya.

30
00:01:54,400 --> 00:02:01,160
Operator dan kemudian ditempatkan di atas fungsi asli sehingga Anda dapat dengan mudah menambah atau mematikan fungsionalitas tambahan dengan dekorator

31
00:02:01,160 --> 00:02:05,630
sehingga Anda hanya mengambil fungsi sederhana asli Anda dan kemudian Anda memiliki

32
00:02:05,630 --> 00:02:11,180
beberapa dekorator yang menghubungkan ke beberapa kode tambahan dan kemudian Anda dapat menambahkan dalam fungsi tambahan.

33
00:02:11,210 --> 00:02:15,540
Kemudian jika Anda tidak ingin fungsi tambahan itu, Anda cukup menghapusnya di beberapa baris dekorator.

34
00:02:15,560 --> 00:02:17,930
Di atas fungsi.

35
00:02:18,100 --> 00:02:23,060
Jadi ide ini cukup abstrak ketika Anda benar-benar mempraktikkannya dengan sintaksis Python karena ini adalah jenis

36
00:02:23,060 --> 00:02:24,530
liner misterius di sini.

37
00:02:24,560 --> 00:02:26,240
Di atas fungsi Anda.

38
00:02:26,240 --> 00:02:31,130
Jadi apa yang akan kita lakukan adalah kita akan melalui langkah-langkah membangun sendiri dekorator

39
00:02:31,160 --> 00:02:35,440
secara manual untuk menunjukkan apa yang sebenarnya dilakukan operator di belakang layar.

40
00:02:35,460 --> 00:02:39,770
Kita juga akan belajar tentang beberapa konsep seperti melewatkan fungsi dalam fungsi lain.

41
00:02:39,950 --> 00:02:42,810
Kita akan pergi selangkah demi selangkah dan membangun ini dengan sangat lambat.

42
00:02:42,950 --> 00:02:45,680
Jadi mari kita buka buku catatan Jupiter dan memulai.

43
00:02:45,680 --> 00:02:49,620
OK mari kita mulai dengan membangun dekorator kita sendiri secara manual.

44
00:02:49,730 --> 00:02:54,590
Kita perlu meninjau beberapa konsep dan memperkenalkan beberapa konsep baru seperti menugaskan

45
00:02:54,590 --> 00:02:57,800
fungsi atau meneruskan fungsi ke fungsi lain.

46
00:02:58,370 --> 00:03:06,650
Jadi yang bisa kita lakukan adalah membuat fungsi sederhana yang disebut func dan ini akan mengembalikan satu sehingga saya dapat memanggil

47
00:03:06,920 --> 00:03:09,780
fungsi itu dan menjalankannya dan kembali 1.

48
00:03:09,810 --> 00:03:14,900
Ingat kami juga membahas bahwa jika Anda hanya mengatakan func dengan CS cetak terbuka dan tertutup, Anda akan mendapatkan kembali

49
00:03:14,900 --> 00:03:16,870
informasi bahwa Anda memiliki fungsi di sini.

50
00:03:17,000 --> 00:03:19,420
Anda tidak akan benar-benar menjalankan fungsinya.

51
00:03:19,460 --> 00:03:25,370
Itu berarti kita benar-benar dapat menetapkan fungsi ke variabel lain dan kemudian menjalankannya dari variabel itu.

52
00:03:25,370 --> 00:03:26,810
Jadi, saya tunjukkan apa yang saya maksud dengan itu.

53
00:03:27,840 --> 00:03:38,420
Misalnya saya akan mengatakan buat fungsi halo yang mengembalikan halo jadi saya bisa menjalankan halo atau saya hanya bisa bertanya Hei

54
00:03:38,420 --> 00:03:40,510
halo apa itu.

55
00:03:40,550 --> 00:03:42,650
Yah itu ditugaskan ke suatu fungsi.

56
00:03:42,920 --> 00:03:43,510
Saya tidak bisa mengatakannya.

57
00:03:43,510 --> 00:03:49,170
Menyapa sama dengan halo dan Python tidak akan mengeluh.

58
00:03:49,170 --> 00:03:49,650
Faktanya.

59
00:03:49,650 --> 00:03:51,730
Sekarang lihat apa yang bisa saya lakukan.

60
00:03:51,780 --> 00:03:56,410
Saya bisa melihat yang disebut sapa dan mengembalikan string Halo.

61
00:03:56,820 --> 00:03:59,530
Jadi yang ingin kita tanyakan pada diri sendiri adalah menyapa.

62
00:03:59,530 --> 00:04:00,840
Hanya menunjuk ke halo.

63
00:04:00,930 --> 00:04:03,690
Atau apakah sudah membuat salinan sendiri dari fungsi halo.

64
00:04:03,690 --> 00:04:08,700
Kita dapat dengan mudah mengujinya dengan menghapus halo dan kemudian melihat apakah kita masih bisa menelepon hebat.

65
00:04:08,850 --> 00:04:13,470
Jadi sekarang saya masih bisa menjalankan halo yang akan saya hapus.

66
00:04:13,500 --> 00:04:19,790
Halo dan jika saya mencoba mengeksekusi Halo Sekarang saya akan mengatakan hei halo tidak ditemukan.

67
00:04:19,820 --> 00:04:20,370
Masuk akal.

68
00:04:20,360 --> 00:04:21,600
Kami baru saja menghapusnya.

69
00:04:21,680 --> 00:04:23,430
Sekarang mari kita lihat apa yang terjadi ketika saya memanggil accrete.

70
00:04:26,100 --> 00:04:27,270
Jadi grete masih kembali.

71
00:04:27,270 --> 00:04:27,770
Halo.

72
00:04:27,820 --> 00:04:32,970
Jadi meskipun kita menghapus nama Halo, nama Hijau sebenarnya masih menunjuk ke objek fungsi

73
00:04:33,000 --> 00:04:38,330
asli dan penting untuk mengetahui bahwa fungsi adalah objek yang dapat diteruskan ke objek lain.

74
00:04:38,370 --> 00:04:44,250
Jadi sekarang ditunjukkan contoh lewat dalam suatu fungsi di dalam fungsi lain atau memanggil fungsi dalam

75
00:04:44,250 --> 00:04:45,090
fungsi lain.

76
00:04:45,330 --> 00:04:52,380
Dan ini akan banyak berhubungan dengan ruang lingkup itu dan pernyataan bersarang kuliah yang kita miliki sebelumnya.

77
00:04:52,520 --> 00:04:57,610
Jadi saya akan membuat beberapa sel baru di sini hanya untuk membersihkan layar itu.

78
00:04:57,960 --> 00:05:05,240
Sekarang mari kita membuat fungsi bernama halo dan perlu nama

79
00:05:05,240 --> 00:05:15,670
akan memiliki nama default menjadi Jose dan fungsi halo sederhana akan mengatakan fungsi halo telah dieksekusi.

80
00:05:16,450 --> 00:05:17,400
Jadi sekarang jika saya menelepon.

81
00:05:17,400 --> 00:05:18,920
Halo.

82
00:05:19,000 --> 00:05:21,110
Itu hanya mengatakan fungsi halo telah dieksekusi.

83
00:05:21,290 --> 00:05:22,580
Masuk akal.

84
00:05:22,580 --> 00:05:25,580
Sekarang mari kita mendefinisikan fungsi di dalam fungsi ini.

85
00:05:26,370 --> 00:05:32,460
Sekarang saya akan mengatakan grete dan apa yang dilakukan adalah cambuk saja.

86
00:05:32,800 --> 00:05:38,760
Ini akan mengembalikan semacam saya menggunakan mengembalikan cetak lagi dan itu akan mencetak backslash T.

87
00:05:38,820 --> 00:05:48,460
Itu cara untuk menghindari karakter tab dan katakanlah ini adalah fungsi hebat di dalamnya.

88
00:05:49,170 --> 00:05:52,240
Halo.

89
00:05:52,250 --> 00:05:56,350
Jadi jika saya jalankan kembali sel-sel ini saya masih akan kembali halo.

90
00:05:56,360 --> 00:05:57,810
Fungsi telah dijalankan.

91
00:05:57,890 --> 00:05:59,930
Jadi mari kita pikirkan apa yang terjadi di sini.

92
00:06:00,140 --> 00:06:01,130
Saya memiliki fungsi ini.

93
00:06:01,130 --> 00:06:01,940
Halo.

94
00:06:01,940 --> 00:06:07,160
Dibutuhkan beberapa nama default oleh Jose dan hanya mencetak fungsi halo yang telah dieksekusi.

95
00:06:07,160 --> 00:06:10,990
Kami sebenarnya belum menggunakan nama di dalam fungsi ini.

96
00:06:11,060 --> 00:06:14,980
Saya mendefinisikan fungsi lain yang disebut sapa dan salam kembali.

97
00:06:14,990 --> 00:06:16,990
Ini adalah fungsi hebat di dalam Halo.

98
00:06:17,120 --> 00:06:19,150
Perhatikan di sini saya hanya mendefinisikan besar.

99
00:06:19,160 --> 00:06:25,370
Saya sebenarnya tidak menyebutnya jadi mari kita sebut itu di luar Yunani.

100
00:06:25,370 --> 00:06:26,380
Saya akan mencetak

101
00:06:29,330 --> 00:06:30,220
salam.

102
00:06:30,330 --> 00:06:35,230
Perhatikan saya mencetaknya karena keserakahan mengembalikan string.

103
00:06:35,260 --> 00:06:37,440
Jadi sekarang ketika saya menjalankan ini saya kembali.

104
00:06:37,450 --> 00:06:38,170
Halo.

105
00:06:38,320 --> 00:06:39,640
Fungsi telah dijalankan.

106
00:06:39,760 --> 00:06:41,400
Dan kemudian saya kembali tab.

107
00:06:41,620 --> 00:06:42,810
Ini adalah situs fungsi yang luar biasa.

108
00:06:42,820 --> 00:06:43,420
Halo.

109
00:06:43,600 --> 00:06:48,600
Karena kita menemukan bagian dalam halo dan kemudian kita mengeksekusi bagian dalamnya juga.

110
00:06:49,870 --> 00:06:52,220
Jadi mari kita mendefinisikan fungsi lain di dalamnya.

111
00:06:52,240 --> 00:06:56,390
Halo, sambut selamat datang dan kami akan melakukan hal yang sama.

112
00:06:56,420 --> 00:06:59,010
Kami akan melihat tab kembali.

113
00:06:59,260 --> 00:07:02,440
Ini ada di dalam.

114
00:07:02,560 --> 00:07:08,200
Ini dikatakan selamat datang di dalam Hello.

115
00:07:08,480 --> 00:07:14,710
Dan kemudian setelah itu kita akan melaksanakan sambutan dan sangat penting di sini bahwa Anda memperhatikan

116
00:07:14,710 --> 00:07:17,970
indentasi karena sangat mudah untuk mengacaukan semuanya.

117
00:07:17,980 --> 00:07:23,200
Saya memiliki lekukan di sini untuk halo dan segala sesuatu di sini berbaris.

118
00:07:23,200 --> 00:07:27,790
Dan kemudian saya membuat dua baris ini di-indentasi karena mereka adalah bagian dari definisi Yunani dan mereka

119
00:07:27,790 --> 00:07:29,160
adalah bagian dari definisi sambutan.

120
00:07:29,170 --> 00:07:34,010
Saya sebenarnya tidak memanggil salam dan menyambut di dalam fungsi-fungsi ini yang saya sebut hanya di dalam Hello.

121
00:07:34,010 --> 00:07:36,640
Jadi perhatikan di sini bahwa pernyataan cetak ini berbaris.

122
00:07:36,670 --> 00:07:37,080
Halo.

123
00:07:37,100 --> 00:07:41,140
Anda selalu dapat menyalin dan menempel dari buku catatan jika Anda mendapatkan kesalahan indentasi atau

124
00:07:41,170 --> 00:07:42,040
kesalahan apa pun.

125
00:07:42,550 --> 00:07:45,190
Jadi ketika saya menjalankan ini saya kembali.

126
00:07:45,190 --> 00:07:50,140
Halo fungsi telah dieksekusi dan kami memiliki tab ini di sini

127
00:07:50,140 --> 00:07:56,260
untuk menunjukkan bahwa fungsi-fungsi hebat dan selamat datang sebenarnya di dalam fungsi halo dan

128
00:07:56,350 --> 00:08:05,390
pada akhir semua ini saya masih bisa mengatakan ini adalah akhir dari fungsi halo jadi saya jalankan ini seluruh fungsi dijalankan.

129
00:08:05,410 --> 00:08:06,210
Saya mendefinisikan.

130
00:08:06,280 --> 00:08:10,320
Saya menemukan sambutan bahwa saya benar-benar menjalankan gry mengeksekusi selamat datang dan mencetak.

131
00:08:10,350 --> 00:08:12,320
Ini adalah akhir dari Hello.

132
00:08:12,340 --> 00:08:17,920
Sekarang sesuatu yang perlu diperhatikan di sini adalah bahwa salam didefinisikan di dalam fungsi hello dan

133
00:08:17,920 --> 00:08:20,050
menyambut temuan di dalam fungsi hello.

134
00:08:20,050 --> 00:08:23,080
Itu berarti ruang lingkup terbatas pada fungsi halo.

135
00:08:23,230 --> 00:08:27,960
Saya hanya bisa mengeksekusi salam dan selamat datang di dalam halo jika saya mencoba untuk mengeksekusinya.

136
00:08:28,000 --> 00:08:30,040
Di luar fungsi halo ini.

137
00:08:30,040 --> 00:08:31,480
Contohnya jika saya mencoba menelepon.

138
00:08:31,480 --> 00:08:33,390
Selamat datang.

139
00:08:33,550 --> 00:08:38,270
Dikatakan "Hei, selamat datang" bukanlah temuan yang masuk akal karena hanya didefinisikan di dalam fungsi

140
00:08:38,290 --> 00:08:39,200
halo ini.

141
00:08:39,370 --> 00:08:44,360
Dan selama Anda tidak mendefinisikan hijau sebelumnya juga akan berakhir menjadi kesalahan.

142
00:08:44,390 --> 00:08:47,690
Jadi di sini kita punya ide yang menyambut dan menyambut.

143
00:08:47,710 --> 00:08:49,640
Ruang lingkup mereka terbatas pada halo.

144
00:08:49,940 --> 00:08:53,250
Tetapi bagaimana jika Anda ingin mengakses fungsi-fungsi ini di luar Halo.

145
00:08:53,470 --> 00:08:58,280
Yah yang bisa kita lakukan adalah memiliki fungsi halo sebenarnya mengembalikan fungsi.

146
00:08:58,400 --> 00:09:04,140
Ingat bahwa di sini kami dapat menetapkan fungsi dengan cara ini.

147
00:09:04,190 --> 00:09:09,560
Akan sangat keren jika fungsi helo kita alih-alih hanya mencetak eksekusi ucapan selamat

148
00:09:09,560 --> 00:09:10,280
datang.

149
00:09:10,280 --> 00:09:11,230
Besar.

150
00:09:11,360 --> 00:09:13,070
Jadi inilah yang akan saya lakukan.

151
00:09:13,100 --> 00:09:15,040
Saya akan menghapus tiga baris ini.

152
00:09:16,220 --> 00:09:18,980
Dan kemudian saya akan mencetak.

153
00:09:19,220 --> 00:09:32,500
Saya akan mengembalikan fungsi dan akan mengatakan jika namanya sama dengan Jose return.

154
00:09:32,760 --> 00:09:40,410
Terima kasih kembali.

155
00:09:40,430 --> 00:09:42,820
OK jadi mari kita pikirkan apa yang akan terjadi di sini.

156
00:09:44,380 --> 00:09:46,730
Saat ini nama default saya adalah Jose.

157
00:09:46,750 --> 00:09:48,830
Saya mencetak fungsi Hello telah dieksekusi.

158
00:09:49,000 --> 00:09:50,440
Lalu saya mendefinisikan dua fungsi.

159
00:09:50,440 --> 00:09:52,540
Satu disebut gry, yang disebut Selamat Datang.

160
00:09:52,570 --> 00:09:57,720
Saya mencetak hey saya akan mengembalikan fungsi dan kemudian kita katakan hey jika namanya Jose

161
00:09:57,730 --> 00:10:03,160
mengembalikan fungsi grup atau mengembalikan fungsi selamat datang dengan itu akan memungkinkan kita untuk melakukan itu akan

162
00:10:03,160 --> 00:10:08,630
memungkinkan kita untuk mengembalikan fungsi yang kemudian kita dapat ditugaskan ke variabel seperti yang kita lakukan sebelumnya muncul.

163
00:10:08,890 --> 00:10:12,010
Jadi mari kita lihat contohnya.

164
00:10:12,160 --> 00:10:18,160
Kita akan mengatakan bahwa funk baru saya sama dengan halo.

165
00:10:18,520 --> 00:10:23,220
Dan kami akan memasukkan nama Jose yang juga merupakan nama default sehingga Anda bisa saja menyapa.

166
00:10:24,550 --> 00:10:26,980
Dan saya dicetak fungsi rendah telah dieksekusi.

167
00:10:27,010 --> 00:10:28,570
Saya akan mengembalikan fungsi.

168
00:10:28,750 --> 00:10:33,700
Jadi karena namanya hello fungsi ini setelah melakukan dua pernyataan cetak

169
00:10:33,700 --> 00:10:38,130
ini sebenarnya mengembalikan fungsi yang didefinisikan di dalam Hello.

170
00:10:38,410 --> 00:10:46,110
Dan sekarang jika saya memanggil pemberitahuan phunk baru saya di sini ia mengatakan fungsi utama.

171
00:10:46,160 --> 00:10:46,920
Halo.

172
00:10:47,090 --> 00:10:48,780
Warga setempat menyapa.

173
00:10:48,860 --> 00:10:53,900
Jadi sebenarnya yang menunjuk ke fungsi salam di dalam halo dan saya bisa

174
00:10:53,900 --> 00:10:56,230
menjalankannya dan mengembalikan kembali tab string.

175
00:10:56,230 --> 00:11:02,140
Ini adalah fungsi hebat di dalam halo yang kemudian dapat saya cetak seperti yang kita lakukan sebelumnya untuk benar-benar melihat string

176
00:11:02,200 --> 00:11:03,010
itu sendiri.

177
00:11:03,010 --> 00:11:04,110
Ini adalah fungsi luar biasa di dalamnya.

178
00:11:04,120 --> 00:11:05,390
Halo.

179
00:11:05,410 --> 00:11:10,810
Jadi ini adalah gagasan untuk dapat mengembalikan fungsi dalam fungsi lain.

180
00:11:10,810 --> 00:11:13,980
Mari kita lihat satu contoh terakhir yang sangat sederhana.

181
00:11:14,110 --> 00:11:22,060
Saya akan memiliki fungsi di sini bernama Cool dan apa yang akan dilakukan adalah memiliki fungsi lain di

182
00:11:22,060 --> 00:11:25,210
dalamnya yang disebut supercool Let's Go

183
00:11:27,980 --> 00:11:32,510
dan ini hanya string yang fungsi ini lakukan adalah mengembalikannya.

184
00:11:32,510 --> 00:11:34,630
Saya sangat keren.

185
00:11:36,620 --> 00:11:46,920
Dan kemudian fungsi keren ini sebenarnya akan mengembalikan super keren jadi saya bisa mengatakan bahwa beberapa fungsi

186
00:11:46,920 --> 00:11:50,680
sama dengan hasil mengeksekusi keren.

187
00:11:50,810 --> 00:11:54,100
Ingatlah bahwa cool itu sendiri mengembalikan super cool.

188
00:11:54,110 --> 00:11:59,210
Jadi sekarang beberapa phunk sebenarnya adalah fungsi supercool.

189
00:12:00,720 --> 00:12:04,030
Dan jika menjalankannya, saya akan mengatakan saya sangat keren.

190
00:12:04,100 --> 00:12:09,920
Jadi ini hanya ide sederhana untuk memiliki fungsi yang mendefinisikan fungsi di dalam fungsi itu dan

191
00:12:09,920 --> 00:12:15,680
kemudian mengembalikan fungsi itu dan kita akan menggunakan ini sebagai ide kita membangun dekorator.

192
00:12:15,680 --> 00:12:20,390
Hal terakhir yang perlu kita pikirkan adalah benar-benar memiliki fungsi sebagai argumen dengan ide

193
00:12:20,390 --> 00:12:25,250
untuk dapat mengembalikan fungsi dan menetapkan itu untuk sesuatu dan kemudian meneruskan fungsi argumennya akan

194
00:12:25,310 --> 00:12:29,710
memiliki semua alat yang kita butuhkan untuk benar-benar membuat kita dekorator sendiri.

195
00:12:29,880 --> 00:12:35,950
Jadi mari kita cepat melihat contoh lewat dalam suatu fungsi sebagai argumen.

196
00:12:36,160 --> 00:12:43,440
Saya akan menyapa dan fungsi halo sekarang hanya akan menyapa.

197
00:12:43,460 --> 00:12:46,660
Jose jadi kita punya fungsi itu.

198
00:12:46,660 --> 00:12:47,400
Halo.

199
00:12:47,920 --> 00:12:50,000
Dan saya akan membuat fungsi lain yang disebut lainnya.

200
00:12:50,410 --> 00:12:57,130
Dan ini membutuhkan fungsi tertentu.

201
00:12:57,140 --> 00:13:02,070
Jadi perhatikan di sini ini hanya nama variabel saya bisa menyebutnya apa pun yang

202
00:13:02,070 --> 00:13:07,070
saya inginkan dan apa yang akan dilakukan adalah mengatakan Pangeran kode lain berjalan di sini.

203
00:13:09,510 --> 00:13:11,520
Dan kemudian itu benar-benar akan menjalankan fungsi itu.

204
00:13:11,540 --> 00:13:18,030
Saya akan mengatakan mengambil fungsi itu dan buka tutup Princie dieksekusi.

205
00:13:18,050 --> 00:13:19,300
Jadi apa artinya ini?

206
00:13:19,310 --> 00:13:25,640
Itu berarti saya akan membangun sebenarnya lulus dalam fungsi ke fungsi lain ini melakukan beberapa hal dan

207
00:13:25,790 --> 00:13:26,970
kemudian menjalankan fungsi.

208
00:13:27,140 --> 00:13:29,550
Ini dikenal sebagai fungsi lewat sebagai argumen.

209
00:13:29,690 --> 00:13:34,700
Sebelumnya kami hanya melihat bagaimana kami dapat mengembalikan fungsi dan kemudian menjalankannya ketika kami menetapkannya ke nama

210
00:13:34,700 --> 00:13:35,590
variabel baru.

211
00:13:36,470 --> 00:13:41,180
Di sini kita akan melihat sekarang bagaimana kita bisa meneruskan fungsi ke fungsi lain.

212
00:13:41,210 --> 00:13:42,630
Ini hal yang sangat keren.

213
00:13:42,800 --> 00:13:45,820
Akan mengatakan yang lain dan aku akan pasan.

214
00:13:45,920 --> 00:13:46,680
Halo.

215
00:13:46,970 --> 00:13:52,040
Sesuatu yang penting untuk diperhatikan di sini adalah bahwa saya menyampaikan halo saya hanya menyampaikan fungsi yang salah.

216
00:13:52,040 --> 00:13:56,230
Halo, saya tidak mengeksekusi halo. Jadi hanya untuk memperjelas ada.

217
00:13:56,240 --> 00:13:59,220
Halo saat Anda baru saja menyampaikannya.

218
00:13:59,220 --> 00:14:00,930
Dan kemudian ada halo ketika Anda menjalankannya.

219
00:14:01,140 --> 00:14:05,820
Saya hanya benar-benar ingin meneruskan fungsi mentah karena fungsi mentah ini akan dieksekusi di

220
00:14:05,820 --> 00:14:06,870
dalam fungsi lainnya.

221
00:14:06,870 --> 00:14:12,390
Saya tidak ingin benar-benar menjalankan fungsi di sini jadi saya tidak akan mengatakan passen lain halo jadi saya tidak punya pangeran

222
00:14:12,420 --> 00:14:14,310
buka dan tutup karena saya tidak mau.

223
00:14:14,310 --> 00:14:14,950
Hai Jose.

224
00:14:14,970 --> 00:14:19,500
Saya ingin benar-benar lulus dalam fungsi utama di sana karena fungsi lain akan menjalankannya untuk

225
00:14:19,500 --> 00:14:21,360
saya dan mengatakan Hai Jose.

226
00:14:21,360 --> 00:14:24,780
Jadi pikirkan tentang apa yang Anda harapkan untuk melihat ketika Anda menjalankan sel.

227
00:14:24,840 --> 00:14:30,530
Saya seharusnya melihat kode lain berjalan di sini maka kode lainnya akan mengambil halo dan menjalankannya di baris

228
00:14:30,540 --> 00:14:33,270
ini dan mencetak hasilnya sehingga saya harus melihat.

229
00:14:33,330 --> 00:14:34,270
Hai Jose.

230
00:14:34,300 --> 00:14:35,670
Jadi yang lain bisa lari ke sini.

231
00:14:35,700 --> 00:14:37,150
Hai Jose ketika saya menjalankan ini.

232
00:14:37,300 --> 00:14:39,210
Dan itulah yang kami lihat.

233
00:14:39,240 --> 00:14:44,550
Jadi sekarang kita mengerti bahwa kita dapat mengembalikan fungsi dan kita dapat memiliki argumen fungsi dengan dua

234
00:14:44,550 --> 00:14:45,480
alat utama.

235
00:14:45,480 --> 00:14:47,880
Kami sebenarnya akan sekarang dapat membuat dekorator.

236
00:14:47,880 --> 00:14:53,250
Kami memiliki alat yang kami perlukan untuk dengan cepat membuat beberapa jenis perangkat yang merupakan saklar on

237
00:14:53,250 --> 00:14:59,610
off ketika kami ingin menambahkan lebih banyak fungsi ke dekorator jadi saya akan membuat beberapa sel ini di sini dan

238
00:14:59,610 --> 00:15:03,220
akhirnya sampai ke bagian di mana kami buat dekorator baru.

239
00:15:03,290 --> 00:15:14,020
Saya akan mengatakan dekorator baru dan ini membutuhkan kita akan menyebutnya fungsi asli dan di dalam fungsi dekorator baru

240
00:15:17,040 --> 00:15:26,780
saya, saya akan mengatakan wrap func dan apa yang diwakili oleh func ini adalah fungsi tambahan yang

241
00:15:26,870 --> 00:15:31,150
ingin Anda hias fungsi asli ini dengan.

242
00:15:31,370 --> 00:15:39,330
Jadi yang dilakukan adalah kita akan mencetak beberapa kode tambahan sebelum fungsi aslinya.

243
00:15:39,850 --> 00:15:41,750
Dan Anda dapat membayangkan ini tidak harus menjadi pernyataan cetak.

244
00:15:41,750 --> 00:15:46,850
Itu bisa berupa sekelompok kode lain maka kita akan mengambil fungsi

245
00:15:48,010 --> 00:15:57,420
asli yang telah dilewati dan dieksekusi dan kemudian kita akan mencetak beberapa kode tambahan setelah fungsi asli jadi perhatikan apa yang

246
00:16:00,180 --> 00:16:01,680
bisa kita lakukan.

247
00:16:01,730 --> 00:16:07,580
Kita meneruskan fungsi asli menambahkan beberapa kode X sebelum menjalankan fungsi asli dan

248
00:16:07,790 --> 00:16:09,180
kemudian menambahkan beberapa

249
00:16:12,100 --> 00:16:17,580
kode setelah itu kita akan lakukan di sini hanya mengembalikan fungsi wrap.

250
00:16:18,100 --> 00:16:23,130
Jadi Anda bisa menganggap ini sebagai gagasan presiden dengan kertas kado.

251
00:16:23,260 --> 00:16:28,630
Fungsi asli sebenarnya adalah sekarang dan kemudian kita akan pada dasarnya meletakkannya di dalam

252
00:16:28,690 --> 00:16:29,920
kotak dan membungkusnya.

253
00:16:30,100 --> 00:16:31,780
Karena itulah disebut Dekorasi.

254
00:16:31,780 --> 00:16:36,290
Jadi Anda semacam mendekorasi fungsi dengan beberapa kertas kado, kertas kado adalah kode tambahan

255
00:16:36,290 --> 00:16:40,260
yang dapat digunakan di atas fungsi sebelum atau sesudah fungsi di bawahnya.

256
00:16:41,850 --> 00:16:47,760
Jadi ini adalah fungsi sama seperti yang kami lakukan sebelumnya jika menyapa dan menyapa kecuali sekarang namanya mencerminkan apa yang sebenarnya

257
00:16:47,760 --> 00:16:48,830
terjadi di sini.

258
00:16:48,830 --> 00:16:51,060
Kami menciptakan beberapa fungsi dekorator baru.

259
00:16:51,060 --> 00:16:57,150
Dibutuhkan dalam fungsi asli dan di dalam ini kita menemukan pembungkus ini yang memiliki beberapa kode tambahan sebelum

260
00:16:57,150 --> 00:17:03,060
menjalankan fungsi asli yang dimasukkan ke dalam beberapa kode X setelah itu dan kemudian mengembalikan fungsi bungkus.

261
00:17:04,280 --> 00:17:12,140
Jadi saya akan membuat fungsi di sini dan fungsi ini akan membutuhkan dekorator

262
00:17:12,140 --> 00:17:16,040
sehingga kita memanggil func membutuhkan dekorator.

263
00:17:16,530 --> 00:17:18,620
Dan apa yang dilakukannya adalah mencetak.

264
00:17:18,930 --> 00:17:23,620
Saya ingin didekorasi.

265
00:17:24,710 --> 00:17:29,480
Jadi idenya adalah kami ingin menambahkan beberapa fungsionalitas tambahan ke orang asli ini.

266
00:17:29,480 --> 00:17:34,970
Fungsi ini membutuhkan dekorator sekarang jika saya hanya memanggil fungsi membutuhkan dekorator saya baru saja kembali

267
00:17:35,060 --> 00:17:36,340
saya ingin didekorasi.

268
00:17:36,560 --> 00:17:42,350
Apa yang akan sangat keren adalah jika saya entah bagaimana bisa menambahkan beberapa kode tambahan menggunakan kerangka

269
00:17:42,350 --> 00:17:45,770
yang saya buat di sini dan ini sebenarnya sangat mudah.

270
00:17:45,770 --> 00:17:56,120
Yang perlu saya lakukan adalah mengatakan ambil dekorator saya dan lewati funk ini yang membutuhkan dekorator karena ingat itu akan mengambil

271
00:17:56,480 --> 00:17:58,570
fungsi asli di sini.

272
00:17:59,790 --> 00:18:03,340
Jadi katakanlah phunk membutuhkan dekorator dan meneruskannya.

273
00:18:03,390 --> 00:18:05,690
Tidak, saya tidak menjalankannya dan hanya mengatakan.

274
00:18:05,730 --> 00:18:13,380
Dekorator baru dan kemudian phunk membutuhkan dekorator sehingga saya dapat menyebutnya fungsi yang didekorasi sama dengan

275
00:18:13,380 --> 00:18:17,390
fungsi yang memerlukan izin dekorator daripada dekorator baru.

276
00:18:17,550 --> 00:18:22,550
Jadi yang akan terjadi adalah ketika Anda melewatkan fungsi asli ini membutuhkan dekorator.

277
00:18:22,800 --> 00:18:24,720
Dikatakan OK itu fungsi erosi.

278
00:18:24,720 --> 00:18:29,820
Dan alih-alih fungsi wrap, kita menambahkan beberapa kode X sebelum kita menjalankan fungsi aslinya.

279
00:18:29,820 --> 00:18:33,830
Jadi kami akan mencetak saya ingin dihiasi kemudian kami mencetak beberapa tambahan setelah fungsi.

280
00:18:33,960 --> 00:18:40,020
Dan dengan fungsi pembungkus baru yang telah ditentukan ini, kami mengembalikan versi terbungkus dari fungsi asli yang merupakan semua yang

281
00:18:40,020 --> 00:18:41,880
dilakukan baris ini di sini.

282
00:18:41,970 --> 00:18:46,230
Ini mengambil fungsi yang menginginkan pembungkus yang lebih besar dan beberapa hal

283
00:18:46,230 --> 00:18:49,070
tambahan dan kemudian mengembalikan versi terbungkus fungsi itu.

284
00:18:49,590 --> 00:18:55,580
Jadi saya menjalankan ini dan kemudian saya dapat memanggil fungsi saya dihiasi dan saya melihat ini.

285
00:18:55,600 --> 00:19:01,930
Jadi Mexico sebelum fungsi aslinya saya ingin dihiasi dan beberapa kode X setelah fungsi asli.

286
00:19:01,930 --> 00:19:07,090
Sekarang apa yang kami lakukan sebenarnya cukup rumit karena saya harus mendefinisikan semua hal ini di sini.

287
00:19:07,540 --> 00:19:12,270
Tapi ada sintaks khusus untuk apa yang pada dasarnya baris ini.

288
00:19:12,760 --> 00:19:16,520
Dan sintaks khusus adalah operator itu.

289
00:19:16,550 --> 00:19:29,780
Jadi jika saya ingin benar-benar membuat dekorator baru yang bisa saya lakukan adalah mengatakan di dekorator baru katakan DMF.

290
00:19:29,870 --> 00:19:32,610
Baiklah mari kita ambil yang asli.

291
00:19:33,020 --> 00:19:37,600
Kami akan menyalin ini di sini, tempel di sini.

292
00:19:37,980 --> 00:19:38,940
Jalankan ini.

293
00:19:38,940 --> 00:19:45,520
Dan sekarang ketika saya memanggil func membutuhkan dekorator saya mendapatkan kembali beberapa kode tambahan untuk fungsi asli.

294
00:19:45,540 --> 00:19:49,080
Saya ingin dihiasi beberapa kode aktual setelah fungsi aslinya.

295
00:19:49,110 --> 00:19:51,190
Jadi perhatikan apa yang terjadi di sini.

296
00:19:51,390 --> 00:19:57,720
Kata kunci ini di dekorator baru ketika Anda meletakkannya di atas fungsi itu hanya mengatakan OK

297
00:19:57,720 --> 00:20:01,840
saya akan meneruskan fungsi ini ke ini sebagai fungsi asli.

298
00:20:01,840 --> 00:20:08,710
Saya akan melakukan sesuatu untuk itu menambahkan beberapa X setelah Tambahkan beberapa x recode atau x x x sebelum dapat memanggil

299
00:20:08,710 --> 00:20:09,530
fungsi asli.

300
00:20:09,580 --> 00:20:14,680
Tambahkan beberapa kode tambahan setelah membungkusnya menjadi fungsi yang bagus dan kemudian kembali versi yang dibungkus.

301
00:20:14,680 --> 00:20:18,800
Itu semua yang dilakukan oleh dekorator di sini pada dasarnya membungkusnya.

302
00:20:18,940 --> 00:20:24,430
Maka jika Anda ingin mematikan ini dengan baik, Anda cukup melakukan ini dan jika Anda menjalankan ini lagi,

303
00:20:24,430 --> 00:20:26,580
Anda tidak lagi memiliki pembungkus itu.

304
00:20:26,590 --> 00:20:30,700
Jadi ini sekarang saklar mati Anda memiliki simbol di sana.

305
00:20:31,000 --> 00:20:36,910
Secara realistis Anda benar-benar tidak perlu melakukan pengkodean semacam ini dari dekorator baru dari fungsi

306
00:20:36,910 --> 00:20:38,180
pembungkus dan sebagainya.

307
00:20:38,290 --> 00:20:39,690
Anda tidak perlu khawatir tentang itu.

308
00:20:39,840 --> 00:20:44,050
Yah Anda akan lakukan adalah Anda akan menggunakan kerangka kerja web atau perpustakaan orang

309
00:20:44,110 --> 00:20:49,110
lain dan hanya menambahkan dekorator baru untuk mungkin membuat situs web baru atau menunjuk ke halaman lain.

310
00:20:49,120 --> 00:20:54,340
Jadi mereka benar-benar umum digunakan dalam kerangka kerja web seperti jingle atau labu yang mengapa

311
00:20:54,340 --> 00:20:58,270
penting untuk memahami di balik layar apa yang sebenarnya dilakukan dekorator.

312
00:20:58,270 --> 00:21:00,300
Sekarang mereka berdiri di belakang layar apa yang dilakukannya.

313
00:21:00,370 --> 00:21:05,740
Anda cukup menggunakan ide abstrak ini bahwa ketika Anda menempelkan dekorator baru ini, ia hanya mendekorasi

314
00:21:05,740 --> 00:21:08,140
fungsi Anda dengan beberapa kode tambahan.

315
00:21:08,140 --> 00:21:08,470
Baiklah.

316
00:21:08,470 --> 00:21:10,410
Saya tahu itu pasti banyak untuk diterima

317
00:21:10,540 --> 00:21:14,590
Anda benar-benar ingin melihat buku catatan ini untuk yang mana ia menjabarkan semua langkah dengan beberapa

318
00:21:14,590 --> 00:21:18,470
teks penjelasan untuk Anda jika Anda memiliki pertanyaan, jangan ragu untuk memposting forum Q&amp;A.

319
00:21:18,790 --> 00:21:19,730
Saya akan melihat di kuliah berikutnya.
