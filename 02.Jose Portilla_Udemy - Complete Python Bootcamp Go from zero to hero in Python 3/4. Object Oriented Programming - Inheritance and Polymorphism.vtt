WEBVTT
1
00:00:05.330 --> 00:00:10.460
Selamat datang kembali semua orang untuk bagian tiga pada diskusi kami tentang pemrograman berorientasi objek dalam kuliah ini.

2
00:00:10.460 --> 00:00:16.850
Kita akan secara khusus fokus pada pewarisan dan polimorfisme dan pewarisan pada dasarnya adalah cara untuk

3
00:00:16.850 --> 00:00:20.050
membentuk kelas-kelas baru menggunakan kelas-kelas yang telah didefinisikan.

4
00:00:20.240 --> 00:00:23.240
Mari kita melompat ke buku catatan Jupiter dan melihat bagaimana ini bekerja.

5
00:00:23.240 --> 00:00:28.070
OK jadi mari kita mulai dengan berbicara tentang pewarisan dan seperti yang baru saja kita

6
00:00:28.370 --> 00:00:33.230
sebutkan itu adalah cara untuk membentuk kelas baru menggunakan kelas yang telah didefinisikan dan manfaat warisan

7
00:00:33.230 --> 00:00:38.950
yang sangat penting atau kemampuan untuk menggunakan kembali kode yang telah mereka kerjakan dan untuk mengurangi kompleksitas sebuah program.

8
00:00:38.990 --> 00:00:43.390
Jadi saya akan memulai dengan membuat apa yang disebut kelas dasar.

9
00:00:43.520 --> 00:00:49.880
Jadi kelas dasar ini akan disebut hewan dan squit menjadi kelas yang sangat sederhana.

10
00:00:49.920 --> 00:00:56.490
Sebenarnya metode init sebenarnya akan mengambil argumen apa pun alih-alih yang akan

11
00:00:57.830 --> 00:01:00.590
dilakukan adalah hewan Pangeran diciptakan.

12
00:01:00.710 --> 00:01:02.640
Jadi kami memiliki kelas yang sangat sederhana di sini.

13
00:01:02.660 --> 00:01:08.850
Jadi misalnya jika saya membuat contoh hewan itu hanya akan mencetak hewan yang dibuat karena dalam

14
00:01:08.850 --> 00:01:13.370
metode itu akan secara otomatis dieksekusi ketika Anda benar-benar membuat binatang.

15
00:01:13.860 --> 00:01:15.590
Mari kita lanjutkan dua metode lagi.

16
00:01:15.750 --> 00:01:18.350
Satu disebut Siapa aku.

17
00:01:22.020 --> 00:01:34.220
Dan semua ini akan lakukan adalah mencetak saya binatang dan akan memiliki metode lain di sini yang disebut Makan.

18
00:01:34.420 --> 00:01:40.730
Dan ini akan mencetak saya makan.

19
00:01:40.900 --> 00:01:47.420
OK jadi kita bisa melihat bahwa jika kita memiliki hewan di sini dapat melakukan dot tab dan kita dapat memintanya untuk makan.

20
00:01:47.450 --> 00:01:51.040
Jadi buka tutup Princie adalah untuk benar-benar mengeksekusi makan dan melihat hasil cetak.

21
00:01:51.070 --> 00:01:55.210
Saya sedang makan dan yang lainnya adalah saya.

22
00:01:55.270 --> 00:01:56.570
Dan saya akan melaporkan kembali.

23
00:01:56.720 --> 00:01:58.030
Saya adalah binatang.

24
00:01:58.030 --> 00:02:06.970
Ini akan berfungsi sebagai kelas dasar kami sehingga kelas yang baru terbentuk dapat menggunakan kelas Hewan untuk mewarisi

25
00:02:06.970 --> 00:02:08.420
beberapa metodenya.

26
00:02:08.420 --> 00:02:09.700
Anda mungkin ingin menggunakannya lagi.

27
00:02:10.030 --> 00:02:17.330
Jadi misalnya jika saya ingin membuat instance lain dari kelas anjing atau benar-benar membuat ulang kelas anjing, maka saya akan

28
00:02:19.450 --> 00:02:21.300
membuat ulang kelas itu.

29
00:02:21.310 --> 00:02:26.920
Tetapi saya mulai berpikir, hei, banyak fitur dan metode kelas Hewan saya berguna untuk anjing.

30
00:02:26.920 --> 00:02:29.140
Misalnya anjing yang mereka suka makan.

31
00:02:29.200 --> 00:02:35.500
Jadi mungkin saya ingin mengurangi beberapa pekerjaan saya sebelumnya di kelas baru saya dengan cara yang bisa saya lakukan

32
00:02:35.980 --> 00:02:38.450
yaitu dengan mewarisi kelas dasar kelas Hewan.

33
00:02:38.680 --> 00:02:41.230
Jadi saya akan menularkan binatang di sini.

34
00:02:41.230 --> 00:02:42.690
Sebelumnya kami tidak melewati apa pun.

35
00:02:42.700 --> 00:02:48.030
Tetapi sekarang jika saya melewati hewan, saya akan mewarisi atau berasal dari kelas dasar ini.

36
00:02:48.020 --> 00:02:53.920
Jadi ini sekarang dikenal sebagai kelas turunan karena saya memperoleh beberapa fitur saya dari kelas

37
00:02:53.920 --> 00:02:55.150
dasar hewan ini.

38
00:02:55.330 --> 00:02:58.510
Jadi saya selalu mengatakan anjing mewarisi hewan.

39
00:02:58.900 --> 00:03:08.350
Dan kemudian di dalamnya saya sebut apa yang akan saya lakukan adalah memanggil titik binatang menggarisbawahi pada intinya menggarisbawahi

40
00:03:08.520 --> 00:03:17.500
diri jadi saya akan benar-benar membuat turunan dari kelas Hewan ketika saya membuat turunan dari kelas anjing saya

41
00:03:17.500 --> 00:03:24.020
dan saya Saya dapat melakukan itu karena saya mewarisi dari kelas Hewan

42
00:03:24.020 --> 00:03:29.520
dan saya juga akan lakukan adalah mencetak anjing yang dibuat.

43
00:03:29.590 --> 00:03:30.850
Jadi biarkan aku yang menjalankan Annmarie.

44
00:03:30.910 --> 00:03:32.940
Alt memasuki sel tepat di bawah.

45
00:03:33.190 --> 00:03:39.910
Jadi saya memiliki hewan kelas dasar dan kemudian saya memiliki kelas anjing lain yang

46
00:03:39.910 --> 00:03:47.780
sekarang akan mewarisi metode hewan karena di dalam metode saya, saya menyebut hewan di dalamnya metode diri.

47
00:03:47.790 --> 00:03:49.370
Jadi sekarang mari kita lihat ini dalam aksi.

48
00:03:49.410 --> 00:03:56.930
Saya akan mengatakan anjing saya sama dengan anjing dan saya menjalankan ini dan saya melihat bahwa seekor binatang diciptakan karena

49
00:03:56.930 --> 00:04:04.070
ketika saya menjalankan garis anjing ini metode ini dipanggil yang pada gilirannya menjalankan metode init dari hewan yang pada

50
00:04:04.070 --> 00:04:05.650
gilirannya mencetak hewan dibuat.

51
00:04:05.870 --> 00:04:10.670
Dan kemudian setelah itu dibuat, saya mencetak peti anjing Tapi di sinilah ia menjadi menarik.

52
00:04:10.670 --> 00:04:17.550
Semua metode lama yang tersedia untuk hewan yang makan pikiran sekarang tersedia untuk anjing saya.

53
00:04:17.570 --> 00:04:24.350
Jadi meskipun di dalam kelas anjing ini saya tidak makan atau siapa saya masih bisa menggunakannya karena saya

54
00:04:24.350 --> 00:04:27.580
bisa mengusir mereka dari kelas hewan dasar saya.

55
00:04:27.740 --> 00:04:29.740
Dan itulah gagasan utama di balik warisan.

56
00:04:29.780 --> 00:04:34.620
Saya sekarang dapat menggunakan kembali metode yang seharusnya umum di antara kelas hanya dengan mewarisi.

57
00:04:34.610 --> 00:04:38.540
Jadi saya tidak perlu menulis ulang semua metode ini untuk kelas baru saya.

58
00:04:38.540 --> 00:04:43.110
Sekarang Anda mungkin bertanya-tanya bagaimana jika saya ingin menimpa salah satu metode yang lebih lama.

59
00:04:43.160 --> 00:04:44.780
Sebenarnya itu tidak masalah.

60
00:04:44.780 --> 00:04:51.770
Yang perlu Anda lakukan hanyalah mengatakan DPF di kelas baru Anda dan kemudian pastikan untuk menggunakan nama yang sama dengan metode

61
00:04:51.770 --> 00:04:53.860
kelas lama seperti siapa saya.

62
00:04:55.260 --> 00:05:03.180
Dan sekarang alih-alih mengatakan saya binatang, kita akan mencetaknya saya seekor anjing.

63
00:05:03.540 --> 00:05:09.210
Jadi jalankan kembali ini untuk memastikan kita membaca denda tayangan ulang anjing saya dan masih tertulis anjing ciptaan

64
00:05:09.220 --> 00:05:09.880
binatang.

65
00:05:10.140 --> 00:05:11.850
Saya masih bisa menelepon makan.

66
00:05:12.350 --> 00:05:21.290
Tetapi sekarang ketika saya memanggil anjing saya siapa saya, katanya saya adalah seekor anjing sebelum dikatakan bahwa saya adalah binatang.

67
00:05:21.310 --> 00:05:22.830
Jadi mari kita uji teori itu.

68
00:05:22.990 --> 00:05:25.360
Saya akan menghapus ini.

69
00:05:25.360 --> 00:05:27.620
Siapa aku jalankan kembali ini.

70
00:05:27.640 --> 00:05:33.700
Ini akan membuat anjing kami lagi hewan yang dibuat, anjing dibuat makan jika Sekarang jika saya mengatakan Siapa aku.

71
00:05:33.700 --> 00:05:35.870
Perhatikan saya tidak menimpanya kali ini.

72
00:05:35.930 --> 00:05:37.840
Dia hanya akan mengatakan bahwa saya ini binatang, Pak.

73
00:05:37.870 --> 00:05:41.080
Mampu menimpa metode sebelumnya dari kelas dasar Anda.

74
00:05:41.110 --> 00:05:44.940
Jika Anda perlu, Anda juga dapat menambahkan metode.

75
00:05:45.490 --> 00:05:59.380
Jadi kita akan mengatakan F Barch sendiri dan kemudian mencetak Wolf sehingga kita dapat menambahkan metode dan kita dapat menimpa.

76
00:05:59.450 --> 00:06:01.600
Jadi izinkan saya menyalin metode ini di sini.

77
00:06:04.750 --> 00:06:10.750
Dan tempelkan dan saya tidak akan mengatakan saya makan anjing.

78
00:06:11.380 --> 00:06:12.740
Jadi saya jalankan ini lagi.

79
00:06:13.630 --> 00:06:20.650
Saya menciptakan kembali contoh anjing saya di sini, anjing yang diciptakan oleh binatang, dan sekarang jika saya panggil makan, katanya saya adalah

80
00:06:20.650 --> 00:06:23.650
anjing yang makan karena saya menimpa metode yang asli.

81
00:06:23.650 --> 00:06:28.660
Aku masih bisa memanggilnya milikku karena aku mewarisi dari kelas dasar itu dan dikatakan aku binatang karena

82
00:06:28.660 --> 00:06:30.740
aku tidak lagi menimpanya di sini.

83
00:06:30.940 --> 00:06:38.800
Anda dapat menambahkan dalam metode lagi panggilan dan kemudian jalankan kembali ini tetapi sekarang saya juga menggonggong sehingga saya bisa mengatakan kulit anjing saya dan akan mencetak

84
00:06:39.200 --> 00:06:44.830
apa ide utama di sini adalah bahwa semua yang perlu Anda lakukan adalah mewarisi dari kelas dasar Anda dan

85
00:06:45.130 --> 00:06:50.350
sekarang Anda memiliki akses ke semua metode lama yang Anda inginkan dan jika Anda ingin menimpa mereka,

86
00:06:50.440 --> 00:06:52.510
Anda bisa menimpa mereka begitu saja.

87
00:06:52.660 --> 00:06:58.280
Ingat nama metode yang sama dan kemudian lakukan apa pun yang Anda inginkan di sana dan Anda selalu dapat menambahkan lebih banyak metode.

88
00:06:58.480 --> 00:07:03.250
Jadi begitulah cara kerja warisan dan mari kita lanjutkan untuk membahas polimorfisme.

89
00:07:03.250 --> 00:07:08.320
Jadi kami baru belajar bahwa sementara fungsi dapat mengambil dalam berbagai metode argumen milik

90
00:07:08.320 --> 00:07:09.760
objek mereka bertindak.

91
00:07:09.760 --> 00:07:13.700
Mari kita selesaikan kuliah ini dengan berbicara tentang polimorfisme dengan Python.

92
00:07:13.840 --> 00:07:19.470
Polimorfisme mengacu pada cara di mana kelas objek yang berbeda dapat berbagi nama metode yang sama.

93
00:07:19.720 --> 00:07:24.340
Dan kemudian metode-metode itu dapat dipanggil dari tempat yang sama meskipun berbagai objek yang

94
00:07:24.430 --> 00:07:25.640
berbeda mungkin dilewatkan.

95
00:07:25.870 --> 00:07:28.350
Cara terbaik untuk menjelaskan ini adalah sebuah contoh.

96
00:07:28.750 --> 00:07:31.850
Saya akan membuat dua kelas baru.

97
00:07:32.020 --> 00:07:40.040
Saya akan mendefinisikan ulang kelas anjing saya dan kemudian membuat kelas kucing yang sama akan mengatakan D F di dalamnya dan anjing hanya mengambil

98
00:07:40.040 --> 00:07:43.110
nama sehingga Anda dapat memberi nama anjing Anda.

99
00:07:43.520 --> 00:07:50.930
Jadi kita menetapkan atribut nama anjing nama yang dilewati kemudian dan anjing akan

100
00:07:50.930 --> 00:07:58.650
dapat berbicara dan dalam hal ini ketika berbicara itu hanya akan mengembalikan namanya sendiri.

101
00:07:58.680 --> 00:08:06.320
Jadi nama otodidak plus atau katakan ucapkan bagaimana jika.

102
00:08:06.380 --> 00:08:11.540
Jadi, ketika anjing itu benar-benar berbicara, ia melaporkan Beko ke setiap nama yang telah Anda tanda tangani dan kemudian

103
00:08:11.540 --> 00:08:13.210
berkata Wolf dan saya akan menyalinnya.

104
00:08:13.640 --> 00:08:19.580
Pastikan saya menjalankan sel dan tepat di bawahnya saya akan membuat kelas kucing yang sangat mirip.

105
00:08:19.580 --> 00:08:21.350
Kesepakatan yang sama cocok dengan metode itu.

106
00:08:21.380 --> 00:08:29.290
Anda memberikan nama tetapi alih-alih berbicara, kata Wolf, kita akan mengatakan berbicara, katakanlah.

107
00:08:29.310 --> 00:08:34.310
Jadi kelasnya hampir sama kecuali kucingnya berkata meow dan anjingnya berkata Wolf.

108
00:08:34.680 --> 00:08:35.050
BAIK.

109
00:08:35.100 --> 00:08:37.610
Jadi saya akan memperkecil sehingga kita dapat melihat sedikit lebih banyak kode kita.

110
00:08:37.620 --> 00:08:40.400
Kami telah mendefinisikan kelas anjing dan kelas kucing.

111
00:08:40.470 --> 00:08:49.180
Sekarang buat dua contoh dari mereka akan mengatakan Nico adalah anjing dengan nama Neco dan kami akan mengatakan

112
00:08:50.200 --> 00:08:54.910
Felix adalah nama variabel untuk nama string kucing Felix.

113
00:08:55.560 --> 00:09:00.140
Jadi saya akan mencetak apa yang terjadi ketika Nico berbicara.

114
00:09:01.850 --> 00:09:03.140
Demikian kata Wolf.

115
00:09:03.220 --> 00:09:07.440
Sepertinya saya lupa tempat di sini jadi mari kita membersihkannya sedikit.

116
00:09:07.480 --> 00:09:09.800
Kami menjalankan dua sel ini.

117
00:09:09.880 --> 00:09:10.800
Nico berkata Wolf.

118
00:09:10.810 --> 00:09:11.600
Bagus.

119
00:09:11.620 --> 00:09:18.640
Dan kami memiliki sedikit ruang di sana dan kemudian Felix juga berbicara pemberitahuan di sini saya benar-benar mengeksekusi berbicara dengan

120
00:09:18.640 --> 00:09:21.630
pangeran dekat yang terbuka dan Felix mengatakan meow.

121
00:09:21.640 --> 00:09:24.060
Jadi di sini kita memiliki kelas anjing dan kelas kucing.

122
00:09:24.070 --> 00:09:30.610
Masing-masing dari mereka memiliki metode berbicara ketika dipanggil setiap objek metode berbicara mengembalikan hasil yang unik untuk objek

123
00:09:30.610 --> 00:09:36.060
yang mengatakan itu unik untuk anjing itu untuk mengatakan Serigala dan unik untuk kucing

124
00:09:36.070 --> 00:09:41.190
untuk mengatakan sekarang serta nama mereka akan menjadi unik untuk instance kelas tertentu.

125
00:09:41.200 --> 00:09:43.930
Sekarang ada beberapa cara berbeda untuk menunjukkan polimorfisme.

126
00:09:43.930 --> 00:09:55.400
Salah satunya yang cukup sederhana adalah jika for loop jadi saya bisa mengatakan untuk kelas dalam satu jam saya akan mengatakan Nico dan Felix dan apa

127
00:09:55.430 --> 00:10:03.460
yang akan saya lakukan adalah saya akan beralih melalui daftar item ini dan Saya ingin Anda memperhatikan sesuatu

128
00:10:03.460 --> 00:10:04.430
di sini.

129
00:10:04.450 --> 00:10:12.190
Saya akan mengatakan mencetak jenis kelas hewan peliharaan dan sebenarnya saya hanya akan mengatakan hewan peliharaan.

130
00:10:12.220 --> 00:10:13.980
Jadi cara itu tidak membingungkan Anda.

131
00:10:14.470 --> 00:10:17.020
Jadi katakan untuk setiap hewan peliharaan dalam daftar ini.

132
00:10:17.170 --> 00:10:19.510
Cetak jenis hewan peliharaannya.

133
00:10:19.510 --> 00:10:20.760
Jadi apa jenis kelasnya.

134
00:10:20.800 --> 00:10:26.050
Dan kemudian juga cetak apa yang terjadi ketika Anda mengatakan peliharaan yang berbicara.

135
00:10:26.400 --> 00:10:29.550
Jadi saya menjalankan ini dan ini adalah contoh dari polimorfisme.

136
00:10:29.580 --> 00:10:34.840
Jadi, Nico dan Felix sama-sama memiliki nama metode yang sama yang disebut speak.

137
00:10:35.070 --> 00:10:38.100
Namun ada berbagai jenis di sini.

138
00:10:38.380 --> 00:10:43.900
Jadi kita memiliki anjing utama dan kemudian kucing utama dan biarkan saya menghapus panggilan jenis ini di sana untuk mengembalikan

139
00:10:44.320 --> 00:10:49.180
string tetapi harus dicatat bahwa salah satu dari mereka mengatakan Wolf dan salah satunya mengatakan Meow.

140
00:10:49.200 --> 00:10:52.940
Jadi cara lain untuk menunjukkan ini selain iterasi adalah melalui fungsi.

141
00:10:53.130 --> 00:10:57.240
Dan ini mungkin cara yang lebih umum untuk melihatnya digunakan.

142
00:10:57.420 --> 00:11:01.170
Dan saya dapat mengatakan bahwa hewan peliharaan berbicara.

143
00:11:01.170 --> 00:11:05.970
Jadi ini memerlukan beberapa hewan peliharaan yang tidak peduli apakah itu anjing atau

144
00:11:06.060 --> 00:11:12.000
kucing karena apa yang akan dilakukan di dalam fungsi hanya mengambil objek itu dan kemudian memanggilnya untuk berbicara.

145
00:11:12.000 --> 00:11:19.020
Jadi perhatikan ketika saya mengatakan hewan peliharaan Neco berbicara, kata Neco kata Wolf.

146
00:11:19.210 --> 00:11:23.300
Dan jika saya harus pasan Felix untuk berbicara hewan peliharaan itu akan mengatakan Felix mengatakan meow.

147
00:11:23.620 --> 00:11:28.840
Jadi hewan peliharaan berbicara itu sendiri tidak benar-benar tahu apakah Anda akan memangsa anjing atau kucing.

148
00:11:28.840 --> 00:11:33.370
Ingat ini adalah dua kelas yang berbeda dan mereka sangat mirip dalam kasus kami, tetapi secara teknis

149
00:11:33.370 --> 00:11:34.540
mereka bisa sangat berbeda.

150
00:11:34.540 --> 00:11:36.120
Anjing dapat memiliki seratus metode.

151
00:11:36.160 --> 00:11:40.750
Cat bisa saja memiliki dua metode ini tetapi mereka berbagi nama metode yang sama, berbicara.

152
00:11:40.870 --> 00:11:46.000
Yang berarti saya dapat memanfaatkan kemampuan itu dengan kebetulan melakukan iterate melalui daftar kelas yang

153
00:11:46.000 --> 00:11:51.700
berbeda ini dan kebetulan memanggil nama metode yang sama atau kemungkinan besar saya meneruskannya ke beberapa fungsi

154
00:11:51.700 --> 00:11:54.520
di mana nantinya memanggil metode yang disebut berbicara.

155
00:11:54.520 --> 00:11:59.470
Jadi dalam kedua kasus kami dapat lulus dalam objek yang berbeda dan kami memperoleh hasil spesifik objek dari

156
00:11:59.470 --> 00:12:01.880
mekanisme yang sama yang dipanggil metode yang sama.

157
00:12:02.200 --> 00:12:09.370
Sekarang praktik yang lebih umum adalah dengan menggunakan kelas abstrak dan pewarisan dan apa yang merupakan kelas abstrak yang

158
00:12:09.370 --> 00:12:11.600
tidak pernah diharapkan akan dipakai.

159
00:12:11.610 --> 00:12:14.730
Anda tidak pernah benar-benar berharap untuk membuat turunan dari kelas ini.

160
00:12:14.740 --> 00:12:21.360
Sebaliknya itu hanya dirancang untuk pada dasarnya hanya berfungsi sebagai kelas dasar.

161
00:12:21.420 --> 00:12:30.350
Jadi kita akan mengatakan kelas hewan lagi dan kelas hewan akan memiliki metode

162
00:12:30.360 --> 00:12:35.380
yang mengambil nama diri adalah pembangun kelas.

163
00:12:35.380 --> 00:12:41.370
Dan kita akan menugaskan hewan nama atribut berdasarkan apa yang berlalu kemudian dan kemudian

164
00:12:41.370 --> 00:12:48.610
kelas dasar ini akan berbicara nanti di kode kita, kita tidak pernah benar-benar berharap untuk mengatakan sesuatu

165
00:12:48.610 --> 00:12:51.780
seperti hewan saya sama dengan contoh hewan.

166
00:12:51.820 --> 00:12:56.230
Sebenarnya kelas hewan ini tidak pernah benar-benar diharapkan akan dipakai.

167
00:12:56.230 --> 00:12:59.040
Saya tidak berharap untuk membuat contoh kelas Hewan.

168
00:12:59.110 --> 00:13:02.700
Sebaliknya ini pada dasarnya hanya digunakan sebagai kelas dasar.

169
00:13:02.950 --> 00:13:08.800
Jadi ini metode berbicara dan ini benar-benar umum polimorfisme saat Anda masuk ke pemrograman berorientasi objek

170
00:13:08.830 --> 00:13:09.970
yang lebih maju.

171
00:13:10.150 --> 00:13:12.490
Nah yang akan kita lakukan adalah memunculkan kesalahan.

172
00:13:12.610 --> 00:13:16.730
Sekarang kita akan belajar tentang kesalahan dan pengecualian kesalahan di bagian selanjutnya dari kursus.

173
00:13:16.870 --> 00:13:21.790
Tetapi pada dasarnya apa yang akan dilakukan adalah mengatakan hei kita memiliki semacam kesalahan di sini.

174
00:13:21.860 --> 00:13:32.980
Jadi kita akan melihat tidak menerapkan udara dan kita akan mengatakan subclass harus mengimplementasikan metode abstrak ini.

175
00:13:35.190 --> 00:13:36.100
Jadi kita jalankan ini.

176
00:13:36.150 --> 00:13:42.510
Dan apa yang akan terjadi adalah jika kita benar-benar membuat contoh

177
00:13:42.510 --> 00:13:49.450
binatang sesuatu yang kita tidak diharapkan untuk melakukannya dengan baik mengatakan Fred itu binatang.

178
00:13:49.670 --> 00:13:53.130
Jika saya mengatakan hewan berbicara saya kembali.

179
00:13:53.170 --> 00:13:57.730
Hai tidak diterapkan udara dan ini sebenarnya memberitahu saya Hei Anda seharusnya menggunakan subclass

180
00:13:57.730 --> 00:13:59.470
untuk menerapkan metode abstrak ini.

181
00:13:59.470 --> 00:14:05.500
Jadi alasan ini adalah metode abstrak adalah karena di kelas dasar itu sendiri sebenarnya tidak melakukan

182
00:14:05.500 --> 00:14:06.070
apa-apa.

183
00:14:06.250 --> 00:14:11.560
Ia mengharapkan Anda mewarisi kelas hewan dan kemudian menimpa metode berbicara.

184
00:14:11.740 --> 00:14:18.550
Jadi saya bisa menghapus baris ini karena seperti yang kami katakan kami tidak pernah benar-benar berharap untuk menggunakan hewan dengan cara itu.

185
00:14:18.680 --> 00:14:26.690
Di Siddall kami berharap Anda lakukan disebut Anjing dan kemudian lulus binatang saat Anda membangun kelas anjing ini dan sekarang Anda

186
00:14:26.690 --> 00:14:30.950
tahu kami tidak perlu lagi memiliki metode semacam ini di sini.

187
00:14:31.090 --> 00:14:46.030
Sebaliknya yang dapat Anda lakukan adalah mengatakan DPF berbicara sendiri dan kemudian mengembalikan nama otodidak dan mengatakan apa yang akan dilakukan hal yang sama

188
00:14:46.030 --> 00:14:48.120
persis untuk kucing.

189
00:14:48.130 --> 00:14:53.790
Jadi saya akan menyalin dan menempel ini dan kemudian saya katakan

190
00:14:53.860 --> 00:15:04.340
alih-alih mengatakan hukum akan duduk di sana daripada mengatakan Wolf akan mengatakan Anda menjalankan bahwa saya akan mengatakan phyto sama

191
00:15:04.340 --> 00:15:17.030
dengan anjing dengan nama phyto dan saya akan mengatakan ISIS contoh kucing dengan nama ISIS dan saya dapat mencetak phyto berbicara dan saya dapat mencetak

192
00:15:17.090 --> 00:15:17.800
juga.

193
00:15:18.750 --> 00:15:22.010
ISIS berbicara di mana ISIS adalah laki-laki.

194
00:15:22.600 --> 00:15:29.190
OK jadi beberapa contoh kehidupan nyata polimorfisme karena ini benar-benar contoh dasar menggunakan nama metode

195
00:15:29.250 --> 00:15:30.210
yang sama.

196
00:15:30.300 --> 00:15:34.910
Dan kemudian juga memiliki metode abstrak ini mungkin membuka berbagai jenis file.

197
00:15:35.100 --> 00:15:41.550
Jadi Anda mungkin ingin memiliki nama metode yang disebut Open yang masuk akal Anda akan membuka file tetapi ada

198
00:15:41.550 --> 00:15:46.290
banyak file yang sebenarnya berbeda ada file word file pedia dan file excel.

199
00:15:46.400 --> 00:15:51.660
Dan jika Anda mencoba membuat kelas yang bisa menjadi kelas dasar untuk membuka file dan kemudian Anda memiliki

200
00:15:51.660 --> 00:15:56.580
kelas lain yang akan mewarisi bahwa mungkin kelas untuk membuka kelas di kelas untuk membuka unggul

201
00:15:56.580 --> 00:15:58.620
kelas lain untuk membuka file Word.

202
00:15:58.740 --> 00:16:04.740
Anda ingin mereka dapat berbagi nama metode yang sama dengan nama terbuka.

203
00:16:04.740 --> 00:16:06.510
Jadi itu contoh yang lebih realistis.

204
00:16:06.780 --> 00:16:12.480
Dan itu adalah contoh titik morfisme di mana Anda dapat memiliki beberapa fungsi mungkin fungsi file terbuka umum

205
00:16:12.750 --> 00:16:18.420
dapat mengambil salah satu dari kelas yang Anda miliki dan cukup memanggil Open pada mereka dan terserah kelas

206
00:16:18.420 --> 00:16:22.000
itu sendiri untuk memutuskan jenis file yang sebenarnya menjadi dibuka.

207
00:16:23.040 --> 00:16:23.450
BAIK.

208
00:16:23.530 --> 00:16:24.790
Jadi mari kita mainkan morfisme.

209
00:16:24.790 --> 00:16:30.370
Ide dasarnya adalah Anda memiliki dua kelas terpisah ini yang kebetulan berbagi nama metode yang

210
00:16:30.370 --> 00:16:36.010
sama yang memungkinkan Anda untuk kemudian memanggil nama-nama metode yang sama tanpa perlu khawatir tentang kelas

211
00:16:36.010 --> 00:16:37.220
khusus yang dilewati.

212
00:16:37.450 --> 00:16:41.890
Kami akan menyelesaikan seluruh diskusi kami tentang pemrograman berorientasi objek dalam kuliah berikutnya di mana

213
00:16:41.890 --> 00:16:43.780
kami akhirnya membahas metode khusus.

214
00:16:43.780 --> 00:16:44.380
Kami akan melihat apakah mereka.
