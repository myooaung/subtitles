WEBVTT
1
00:00:05.780 --> 00:00:09.340
Selamat datang kembali semua orang untuk melanjutkan di mana kami tinggalkan terakhir kali.

2
00:00:09.380 --> 00:00:12.460
Kita akan membuat kelas tangan dan kelas Chip.

3
00:00:12.500 --> 00:00:16.700
Saya ingin meninjau dengan cepat apa yang kami lakukan terakhir kali karena kami akan menggunakannya untuk

4
00:00:16.760 --> 00:00:18.210
benar-benar membuat kelas tangan kami.

5
00:00:18.230 --> 00:00:21.110
Mari kita kembali ke puncak dengan sangat cepat.

6
00:00:21.110 --> 00:00:26.090
Ingatlah bahwa kita memiliki peringkat dan nilai ini. Ini adalah variabel global yang dapat kita gunakan dengan mudah dan

7
00:00:26.510 --> 00:00:28.890
yang terpenting adalah kita memiliki kamus nilai ini.

8
00:00:28.910 --> 00:00:35.630
Itu berarti saya bisa lulus dalam peringkat seperti dua atau tiga atau empat dan segera mendapatkan kembali nilai sebenarnya untuk

9
00:00:35.630 --> 00:00:36.450
jumlah tersebut.

10
00:00:36.560 --> 00:00:38.370
Kita akan menggunakannya di tangan.

11
00:00:38.510 --> 00:00:44.120
Kami ingin menghitung nilai tangan yang dapat kami lakukan adalah di peringkat kartu

12
00:00:44.120 --> 00:00:48.280
yang sebenarnya dan kemudian mendapatkan kembali nilainya sendiri.

13
00:00:48.410 --> 00:00:52.330
Setelah itu kami benar-benar membuat instance dari kelas kartu.

14
00:00:52.340 --> 00:00:57.230
Jadi apa artinya adalah kita pada dasarnya memiliki objek kartu ini di mana objek kartu memiliki jas dan

15
00:00:57.230 --> 00:00:57.900
memiliki peringkat.

16
00:00:58.010 --> 00:01:04.400
Itu berarti kita harus ketika melewati kartu ambil atribut peringkat dan meneruskannya ke dalam kamus nilai untuk

17
00:01:04.670 --> 00:01:06.930
mendapatkan kembali nilai numerik yang sebenarnya.

18
00:01:08.790 --> 00:01:14.640
Kemudian beralih ke kelas utang, ini adalah cara cepat untuk membuat 52 objek kartu unik untuk mewakili setiap kartu

19
00:01:14.730 --> 00:01:19.530
di dek sebenarnya sehingga kita dapat melihat di sini bahwa kita menggunakan nested for loop.

20
00:01:19.560 --> 00:01:22.230
Jadi jas pertama dalam jas untuk pangkat dan pangkat.

21
00:01:22.230 --> 00:01:26.580
Kami pergi ke depan dan menambahkan benda-benda kartu ini jam tangan dan jas di jajaran.

22
00:01:26.700 --> 00:01:31.710
Kami juga menciptakan cara untuk mencetaknya mengocok geladak dan kemudian menangani dari geladak.

23
00:01:31.710 --> 00:01:35.240
Sekarang saatnya kita gulir ke sini untuk benar-benar membuat kelas tangan.

24
00:01:35.240 --> 00:01:40.040
Kelas tangan pada dasarnya akan mewakili kartu apa yang saat ini ada di tangan seseorang.

25
00:01:40.470 --> 00:01:44.310
Jadi jepitan tangan saat Anda memulai akan dimulai dengan daftar kosong dan kemudian

26
00:01:44.400 --> 00:01:46.530
kita akan menambahkan kartu dari dek.

27
00:01:46.530 --> 00:01:53.160
Jadi kita akan jadi jika Anda datang ke sini menelepon kesepakatan dari geladak dan kemudian meraih kartu tunggal itu dan kemudian

28
00:01:53.250 --> 00:01:58.220
menambahkannya ke tangan seseorang yang akan kita gunakan ketika kita menyebutnya menambahkan metode kartu.

29
00:01:58.350 --> 00:02:01.400
Jadi ingat itu akan menjadi objek kartu yang sebenarnya.

30
00:02:01.620 --> 00:02:06.980
Kemudian kita memilikinya atribut nilai ke tangan yang hanya jumlah saat ini dari nilai untuk tangan itu.

31
00:02:07.320 --> 00:02:11.580
Dan kemudian kami juga ingin melacak ace di tangan karena ingat

32
00:02:11.820 --> 00:02:16.240
ace memiliki aturan khusus di mana mereka bisa menjadi 1 atau 11.

33
00:02:16.250 --> 00:02:21.370
Jadi mari kita mulai dengan metode ini untuk menambahkan kartu.

34
00:02:21.500 --> 00:02:28.410
Apa yang akan kita lakukan di sini adalah mengatakan kartu otodidak dan kemudian kita akan menambahkan kartu yang

35
00:02:28.470 --> 00:02:29.030
ditambahkan.

36
00:02:29.220 --> 00:02:37.570
Jadi di sini kita memiliki daftar kosong dan saya akan mengatakan kartu self-talk dari daftar kosong menambahkan objek kartu.

37
00:02:37.940 --> 00:02:41.920
Jadi jangan bingung di sini faktanya ini huruf kecil ..

38
00:02:41.930 --> 00:02:53.050
Perlu diingat bahwa kartu yang lewat sebenarnya akan berasal dari dek ini di sini yang berarti kita akan memanggil

39
00:02:53.050 --> 00:02:59.070
kesepakatan dengan dek ini untuk benar-benar mengambil satu kartu darinya.

40
00:03:00.640 --> 00:03:02.200
Jadi itulah yang diwakili kartu ini.

41
00:03:02.200 --> 00:03:04.390
Kemudian kami katakan tambahkan kartu.

42
00:03:04.510 --> 00:03:11.830
Ini akan berasal dari geladak dan akan menjadi kesepakatan karena ingat dek yang menangani.

43
00:03:12.190 --> 00:03:19.580
Itu hanya objek kartu tunggal dan objek kartu itu sendiri memiliki setelan dan cincin untuk itu.

44
00:03:20.200 --> 00:03:23.370
Jadi saya akan mengatakan lunak tetapi kartu pena kartu itu.

45
00:03:23.860 --> 00:03:29.590
Dan karena kita tahu bahwa objek kartu ini memiliki cincin untuk itu kita akan dapat menggunakan peringkat

46
00:03:29.590 --> 00:03:31.270
itu untuk mendapatkan nilai.

47
00:03:31.280 --> 00:03:32.370
Jadi bagaimana kita melakukan ini.

48
00:03:32.600 --> 00:03:39.330
Yah kami mengambil kartu itu, Rinck ingat itu akan menjadi dua tiga King as dan

49
00:03:39.330 --> 00:03:47.040
kemudian kami meneruskannya ke kamus nilai sebagai kunci dan itu akan mengembalikan beberapa angka yang mewakili nilai untuk

50
00:03:47.100 --> 00:03:48.860
peringkat kartu tertentu.

51
00:03:49.020 --> 00:03:52.320
Dan kami akan mengambil nilai itu dan menambahkannya ke nilai kami saat ini.

52
00:03:52.680 --> 00:03:59.180
Jadi kita akan mengatakan sendiri nilai plus sama dengan kartu nilai peringkat itu.

53
00:03:59.190 --> 00:04:03.040
Jadi banyak hal terjadi hanya dalam dua baris kode di sini.

54
00:04:03.120 --> 00:04:06.740
Kami menerima objek kartu yang pada akhirnya akan menelepon dari kesepakatan kartu.

55
00:04:06.840 --> 00:04:09.970
Kami menambahkannya ke daftar kartu saat ini dari tangan ini.

56
00:04:10.110 --> 00:04:15.030
Dan kemudian kami menyesuaikan nilai kami dengan kartu yang baru saja ditambahkan ke daftar ini.

57
00:04:15.060 --> 00:04:20.550
Kita akan mengambil peringkat kartu itu mencarinya di kamus nilai yang kami lakukan di awal dan kemudian kami

58
00:04:20.970 --> 00:04:25.530
akan menambahkannya ke nilai otodidak kami yang hanya beberapa angka dari nilai aktual tangan saat

59
00:04:25.530 --> 00:04:26.240
ini. .

60
00:04:26.250 --> 00:04:31.940
Dan kita tahu kapan nilai otodidak lebih besar dan 21 dari siapa pun yang kehilangan tangan ini.

61
00:04:31.940 --> 00:04:37.640
OK jadi mari kita lakukan sedikit pengujian sebelum kita mengatasi masalah penyesuaian untuk kartu as ini.

62
00:04:38.150 --> 00:04:44.310
Jadi saya akan alt masuk ke sini untuk membuat sel baru di bawah ini untuk memasukkan beberapa kali.

63
00:04:44.360 --> 00:04:46.370
Buat beberapa sel untuk kami.

64
00:04:46.880 --> 00:04:53.960
Katakanlah bahwa test deck kami sama dengan instance dari deck yang akan saya kocok.

65
00:04:54.110 --> 00:05:02.920
Jadi katakan test deck bernama shuffle di atasnya dan sekarang kita akan membuat pemain uji.

66
00:05:02.920 --> 00:05:08.730
Jadi ini adalah pemain manusia dan kita akan menggunakan hal yang sangat mirip untuk komputer di

67
00:05:08.730 --> 00:05:14.330
mana kita mengatakan pemain Uji sekarang diwakili oleh tangan ini dan pemain Uji dimulai tanpa

68
00:05:14.330 --> 00:05:21.090
kartu tanpa nilai dan pilihan maka kita akan mengatakan Uji pemain dan mari kita tambahkan kartu ke tangan mereka.

69
00:05:23.060 --> 00:05:31.470
Jadi untuk menambahkan kartu ke tangan mereka, kita perlu mengambil satu dari geladak sehingga saya bisa mengatakan bahwa saya menarik kartu dari

70
00:05:31.470 --> 00:05:32.120
geladak.

71
00:05:32.260 --> 00:05:45.330
Jadi kartu puled sama dengan deck sama dengan test deck dan kemudian perhatikan saya dapat mengatakan kesepakatan jadi mari kita jatuhkan ini dengan

72
00:05:45.330 --> 00:05:53.980
kami menemukan pemain akan menangani satu kartu dari anggota geladak yang merupakan objek kartu.

73
00:05:53.980 --> 00:05:57.840
Jadi sebenarnya itu adalah kartu yang memiliki setelan dan cincin untuknya.

74
00:05:59.130 --> 00:06:03.150
Mari kita lanjutkan dan kemudian cetak kartu yang terkumpul dan

75
00:06:06.270 --> 00:06:12.600
kemudian setelah kita mencetak kartu yang dikumpulkan itu saya akan menambahkan kartu itu ke tangan pemain uji.

76
00:06:12.810 --> 00:06:20.940
Jadi kita akan mengatakan menambahkan kartu yang dikumpulkan di sana dan kemudian katakanlah Apa nilai pemain uji saat

77
00:06:20.940 --> 00:06:24.160
ini akan mengatakan nilai pemain Uji.

78
00:06:24.240 --> 00:06:25.570
Panggil saja atribut itu.

79
00:06:25.680 --> 00:06:28.150
Ayo jalankan ini.

80
00:06:28.270 --> 00:06:28.840
Baiklah.

81
00:06:28.840 --> 00:06:34.690
Jadi yang terjadi adalah kami membuat dek. Kami mengocok dek itu, kami membuat Pemain Uji yang diwakili sebagai

82
00:06:34.690 --> 00:06:35.670
objek tangan.

83
00:06:35.690 --> 00:06:38.550
Jadi tangan pemain uji itu kita harus mengujinya.

84
00:06:38.590 --> 00:06:39.780
Kami melakukan sesuatu.

85
00:06:39.800 --> 00:06:42.710
Berarti kami baru saja mencetak satu kartu.

86
00:06:42.740 --> 00:06:44.270
Jadi laporan kembali ke sekop.

87
00:06:44.440 --> 00:06:47.060
Ingat setiap kartu memiliki representasi string.

88
00:06:47.380 --> 00:06:52.210
Dan kemudian kami menambahkan kartu yang dikumpulkan ke pemain Uji dan kemudian kami mencetak nilai pemain uji.

89
00:06:53.610 --> 00:06:56.250
Sekarang kita benar-benar dapat melakukan ini dalam garis yang jauh lebih sedikit.

90
00:06:56.440 --> 00:07:01.190
Apa yang bisa kita lakukan adalah dengan pemain uji yang sama saat ini aku tidak akan menjalankan ulang sel.

91
00:07:01.540 --> 00:07:09.390
Saya akan mengatakan menambahkan kartu dan di dalam nomor ini kartu pool hanya test deck yang menangani.

92
00:07:09.420 --> 00:07:16.000
Jadi saya bisa menyalin dan menempelkannya di sini dan itu akan menambahkan kartu lain ke tangan pemain tes.

93
00:07:16.040 --> 00:07:16.880
Jadi saya jalankan itu.

94
00:07:16.970 --> 00:07:24.910
Dan sekarang mari kita periksa nilai pemain tes sekarang dan sekarang memiliki 12.

95
00:07:25.140 --> 00:07:30.580
Dan sekarang kita bisa melakukan ini berulang-ulang untuk terus menambahkan kartu ke pemutar Test ini.

96
00:07:30.750 --> 00:07:36.080
Namun Yah yang masih perlu kita lakukan adalah menyesuaikan untuk ACE OK.

97
00:07:36.080 --> 00:07:39.160
Sekarang saatnya untuk benar-benar mengatasi masalah kartu As.

98
00:07:39.230 --> 00:07:45.050
Pertama mari kita lihat atribut kami ace otodempelajar ingat ace memungkinkan kita untuk benar-benar

99
00:07:45.050 --> 00:07:47.990
melacak jumlah ace yang kita miliki.

100
00:07:47.990 --> 00:07:49.270
Jadi mungkin ide yang bagus.

101
00:07:49.340 --> 00:07:56.320
Di dalam metode kartu ini yang bisa kita lakukan adalah melacak kartu As kita.

102
00:07:56.380 --> 00:08:01.750
Apa yang akan saya katakan adalah jika peringkat kartu itu sama dengan ace maka

103
00:08:05.110 --> 00:08:10.440
saya akan mengatakan ace berpikir diri sendiri dan menambahkan 1 ke hitungan.

104
00:08:10.520 --> 00:08:13.160
Jadi itu berarti sekarang ace akan menjadi nol.

105
00:08:13.280 --> 00:08:14.490
Atau nomor lain.

106
00:08:14.810 --> 00:08:17.260
Ketika saya melacak kartu As yang sebenarnya di sini.

107
00:08:17.270 --> 00:08:24.760
Jadi jika kartu sama dengan kartu as maka kartu as otodidak plus 1 maka kita perlu menyesuaikan untuk ACE.

108
00:08:24.790 --> 00:08:27.350
Jadi ada dua hal yang harus terjadi di sini.

109
00:08:27.370 --> 00:08:43.100
Ketika Anda mengatakan sementara nilai diri lebih besar dari 21 dan ace otodidak mengambil nilai saat ini kurangi 10 dari itu

110
00:08:43.120 --> 00:08:51.980
dan kemudian ambil jumlah ace saat ini dan kurangi ace darinya.

111
00:08:52.020 --> 00:08:56.020
OK jadi ini adalah beberapa kode yang sangat pintar di sini yang mengapa agak sulit dibaca

112
00:08:56.020 --> 00:08:58.930
Jadi saya ingin menjabarkan apa yang sebenarnya terjadi di sini.

113
00:08:58.950 --> 00:09:02.250
Kami pertama-tama memiliki nilai nilai otodidak dan ujian 21.

114
00:09:02.250 --> 00:09:08.670
Itu masuk akal karena kita tidak akan menyesuaikan kartu as agar sama dengan satu kecuali jika nilainya

115
00:09:08.670 --> 00:09:15.150
lebih dari 21 karena jika kita melihat kamus nilai awal kami ketika Anda pertama kali mendapatkan kartu

116
00:09:15.150 --> 00:09:17.880
As Anda akan menganggapnya sebagai 11.

117
00:09:17.900 --> 00:09:22.240
Jadi ingatlah bahwa apa yang akan terjadi adalah kembali ke sini.

118
00:09:22.250 --> 00:09:25.840
Ketika kami pertama kali mendapatkan Ace itu, kami akan menganggapnya sebagai 11.

119
00:09:25.880 --> 00:09:29.630
Maka jika kita memiliki kartu as, kita ingin menyesuaikan untuk itu.

120
00:09:29.660 --> 00:09:40.720
Jadi saya akan mengatakan jika nilai total lebih besar dari 21 dan saya masih

121
00:09:44.240 --> 00:09:54.560
memiliki kartu as maka ubah kartu as saya menjadi 1 bukannya 11.

122
00:09:54.560 --> 00:09:57.030
Jadi itulah logika yang kami coba jelaskan di sini.

123
00:09:57.320 --> 00:09:59.930
Dan itulah yang dilakukan oleh tiga baris kode ini.

124
00:10:00.150 --> 00:10:06.050
Mereka memeriksa hei apakah nilai saya saat ini lebih besar dari 21 dan ace otodidak satu ini.

125
00:10:06.080 --> 00:10:13.070
Dan kartu As otodidak agak rumit karena Anda menggunakan bilangan bulat seperti apa yang dikenal sebagai kebenaran.

126
00:10:13.070 --> 00:10:18.950
Jadi ini berarti kita benar-benar memperlakukan bilangan bulat ace ini sebagai nilai boolean dan saya ingin

127
00:10:18.950 --> 00:10:20.520
menunjukkan seperti apa itu.

128
00:10:20.540 --> 00:10:24.460
Mari kita bayangkan mereka memiliki angka sama dengan nol.

129
00:10:24.690 --> 00:10:33.430
Dan mari kita sebut saja 0 lalu katakan 1 adalah 1 2 adalah 2.

130
00:10:33.530 --> 00:10:36.230
Jika kita periksa apakah hal ini benar atau tidak.

131
00:10:36.260 --> 00:10:41.310
Jadi jika 0 cetakan itu terjadi kita tidak mendapatkan apa

132
00:10:46.220 --> 00:10:48.420
pun yang dicetak.

133
00:10:48.800 --> 00:10:53.900
Jadi itu berarti jika 0 bilangan bulat aktual itu diperlakukan sebagai false.

134
00:10:54.170 --> 00:11:00.230
Jadi 0 memiliki kebenaran di mana itu sebenarnya diperlakukan sebagai angka palsu dan lainnya

135
00:11:00.230 --> 00:11:02.900
yang tidak nol diperlakukan sebagai benar.

136
00:11:03.230 --> 00:11:07.630
Jadi Anda bisa memikirkan angka nol atau angka apa pun selain nol yang akan dicetak adalah benar.

137
00:11:07.640 --> 00:11:13.340
Jadi ini mengatakan jika satu print true mengatakan memperlakukan integer sebagai true dan itu akan berlanjut

138
00:11:13.340 --> 00:11:15.240
untuk integer yang tidak nol.

139
00:11:15.500 --> 00:11:21.500
Jadi kami dapat mengambil keuntungan dari itu dalam panggilan kami di sini dengan mengatakan dan ace otodidak.

140
00:11:21.740 --> 00:11:26.350
Hal lain yang bisa kita lakukan adalah mengatakan dan ae otodidak lebih dari nol.

141
00:11:26.420 --> 00:11:28.350
Dan itu hal yang persis sama.

142
00:11:28.400 --> 00:11:33.710
Kode di notebook hanya mengatakan ace diri ganda karena itu adalah jenis kasus penggunaan pintar tapi itu adalah

143
00:11:33.710 --> 00:11:37.320
hal yang sama untuk mengatakan dan ace sulpha lebih besar dari nol.

144
00:11:37.400 --> 00:11:42.980
Jadi, Anda dapat menyimpan kedua versi di sini, tetapi semua perkataannya adalah sementara nilai saya Grant 21 dan

145
00:11:42.980 --> 00:11:49.830
saya masih memiliki kartu As lalu ambil nilai saya, kurangi 10 dari itu, lalu ambil kartu As saya dan kurangi satu dari mereka.

146
00:11:49.910 --> 00:11:53.520
Karena sekarang saya sudah secara resmi mengganti kartu as yang bukan 11.

147
00:11:53.540 --> 00:12:00.810
Ini tidak akan menjadi 1 OK mari kita jalankan kembali itu dan kemudian bergerak bersama untuk menciptakan kelas chip kita atau

148
00:12:00.810 --> 00:12:03.400
kelas chip sebenarnya akan menjadi super sederhana.

149
00:12:03.420 --> 00:12:07.290
Pada dasarnya yang kami lakukan adalah kami hanya memiliki jumlah total chip.

150
00:12:07.320 --> 00:12:13.830
Dan jika Anda ingin yang Anda bisa lakukan adalah bukan hanya mengatur total secara default

151
00:12:13.830 --> 00:12:18.200
menjadi 100 Anda bisa mengatakan total diri sama dengan 100.

152
00:12:18.210 --> 00:12:23.160
Ini benar-benar terserah Anda jika Anda ingin itu disediakan oleh input pengguna sehingga mereka dapat mengatakan saya mulai

153
00:12:23.160 --> 00:12:28.830
dari 1000 chip atau 5000 chip dan kemudian mengatur total di sini atau cara buku catatan menunjukkan hanya secara otomatis diatur

154
00:12:28.830 --> 00:12:29.680
sama dengan 100.

155
00:12:29.760 --> 00:12:35.050
Jangan biarkan orang membuat semacam uang untuk diri mereka sendiri daripada untuk taruhan menang.

156
00:12:35.280 --> 00:12:47.220
Yah bayangkan jika mereka memenangkan taruhan Anda akan mengatakan sendiri bahwa total plus sama dengan apa pun taruhan mereka.

157
00:12:47.440 --> 00:12:54.280
Dan jika mereka kalah taruhan sebaliknya akan mengatakan otodidak total otodidak.

158
00:12:55.690 --> 00:12:57.050
Dan hanya itu chipnya.

159
00:12:57.050 --> 00:13:01.840
Kami hanya melacak jumlah total dan taruhan saat ini yang telah mereka pasang dan kemudian kami kurangi itu.

160
00:13:01.960 --> 00:13:06.080
Jika mereka kehilangan atau menambahkannya jika mereka menang, oke.

161
00:13:06.100 --> 00:13:08.080
Jadi itu saja untuk kuliah ini.

162
00:13:08.080 --> 00:13:12.360
Selanjutnya, kita akan menemukan beberapa fungsi yang benar-benar akan membantu kita memainkan game.

163
00:13:12.670 --> 00:13:18.340
Mari kita tinjau dengan cepat apa yang telah kita buat sejauh ini dengan kelas tangan kita di kelas chip kita.

164
00:13:18.430 --> 00:13:23.730
Kelas tangan kita pada dasarnya adalah representasi dari pemain yang Anda kenal dengan dealer komputer atau pemain manusia.

165
00:13:23.800 --> 00:13:25.240
Mereka memulai dengan kartu.

166
00:13:25.330 --> 00:13:30.970
Mereka memiliki beberapa nilai yang terkait dengan kartu mereka saat ini dan kemudian mereka mengandalkan kartu as untuk

167
00:13:30.970 --> 00:13:31.640
menambahkan kartu.

168
00:13:31.690 --> 00:13:36.820
Mereka hanya mengambil kartu dari tumpukan menambahkan itu ke daftar kartu mereka saat ini dan

169
00:13:36.820 --> 00:13:41.280
kemudian mereka menyesuaikan nilainya sesuai dengan melihat peringkat kartu dalam kamus nilai.

170
00:13:41.320 --> 00:13:42.930
Kemudian mereka juga melacak ace.

171
00:13:43.090 --> 00:13:46.220
Jadi mereka melakukan pemeriksaan tambahan apakah peringkat kartu itu sama dengan Ace.

172
00:13:46.270 --> 00:13:49.670
Mereka menambahkan nomor ace untuk itu hanya menghitung 1.

173
00:13:49.760 --> 00:13:55.700
Kemudian kita dapat menyesuaikan untuk Ace yang berarti jika nilai otodidak dari tangan saya saat ini hebat dan

174
00:13:56.300 --> 00:14:01.630
21 dan saya masih memiliki Ace saya akan menyesuaikan kartu as untuk mengurangi nilai menjadi 1.

175
00:14:01.670 --> 00:14:08.950
Jadi lanjutkan dari 11 ke 1 kita kurangi 10 dan kemudian kurangi 1 dari jumlah ace dan kemudian saya sudah melakukan penyesuaian.

176
00:14:09.020 --> 00:14:09.260
Baiklah.

177
00:14:09.260 --> 00:14:15.590
Selanjutnya kita akan pergi bersama dengan Langkah Enam kita menulis fungsi untuk benar-benar bermain

178
00:14:15.590 --> 00:14:16.280
game.

179
00:14:16.340 --> 00:14:20.720
Kelas chip itu sendiri hanya menambah dan mengurangi beberapa dari total.

180
00:14:20.720 --> 00:14:21.790
Sampai jumpa di kuliah berikutnya.
