1
1

00:00:01,690  -->  00:00:02,663
<v Instructor>Hello, everyone,</v>
2

2

00:00:02,663  -->  00:00:06,521
and welcome to Part 5 of the Object Oriented Programming
3

3

00:00:06,521  -->  00:00:08,146
section of this course,
4

4

00:00:08,146  -->  00:00:10,908
and finally, we're gonna learn about special methods.
5

5

00:00:10,908  -->  00:00:14,444
So classes in Python can implement certain operations
6

6

00:00:14,444  -->  00:00:16,229
with special method names.
7

7

00:00:16,229  -->  00:00:19,601
And these methods are actually not called directly,
8

8

00:00:19,601  -->  00:00:22,121
but by Python-specific language syntax.
9

9

00:00:22,121  -->  00:00:25,121
So, for example, when we make a list
10

10

00:00:26,472  -->  00:00:28,222
and I say, "1, 2, 3,"
11

11

00:00:29,929  -->  00:00:33,223
and I say something like print that list,
12

12

00:00:33,223  -->  00:00:35,460
Python knows what to do with it,
13

13

00:00:35,460  -->  00:00:38,140
and that's because it has a special method
14

14

00:00:38,140  -->  00:00:41,837
and same thing with like the length of a list,
15

15

00:00:41,837  -->  00:00:44,317
Python knows how to incorporate that,
16

16

00:00:44,317  -->  00:00:47,939
so there's special methods that Python has built in
17

17

00:00:47,939  -->  00:00:50,941
that have to do with specific language syntax,
18

18

00:00:50,941  -->  00:00:53,703
when you call either certain things like
19

19

00:00:53,703  -->  00:00:56,303
delete, print, or checking length,
20

20

00:00:56,303  -->  00:00:58,255
and I'll show you what I mean by that
21

21

00:00:58,255  -->  00:00:59,720
through an example.
22

22

00:00:59,720  -->  00:01:02,285
So what we're gonna do is create a book class.
23

23

00:01:02,285  -->  00:01:04,847
Remember, I pass an object here,
24

24

00:01:04,847  -->  00:01:07,180
and I'm going to initiate it
25

25

00:01:08,296  -->  00:01:10,697
and this itself is a special method
26

26

00:01:10,697  -->  00:01:12,815
that's pretty much always used for classes
27

27

00:01:12,815  -->  00:01:14,441
in order to create a class.
28

28

00:01:14,441  -->  00:01:18,466
So, I'm going to have three attributes for my book.
29

29

00:01:18,466  -->  00:01:20,466
It's gonna have a title.
30

30

00:01:21,429  -->  00:01:23,293
It's gonna have an author,
31

31

00:01:23,293  -->  00:01:27,077
and it's gonna have a number of pages.
32

32

00:01:27,077  -->  00:01:29,070
And so, let's go ahead and fill those in.
33

33

00:01:29,070  -->  00:01:32,078
I'm gonna say self.title is equal to
34

34

00:01:32,078  -->  00:01:35,083
whatever title the user inputs there.
35

35

00:01:35,083  -->  00:01:37,600
Self.author, that attribute is equal to
36

36

00:01:37,600  -->  00:01:40,283
whatever you pass in as the author.
37

37

00:01:40,283  -->  00:01:43,043
And self.pages is equal to
38

38

00:01:43,043  -->  00:01:45,278
whatever you pass in as the number of pages.
39

39

00:01:45,278  -->  00:01:48,295
And I'm also gonna put a little print statement here
40

40

00:01:48,295  -->  00:01:50,572
for visualisation purposes,
41

41

00:01:50,572  -->  00:01:54,072
just to show that a book has been created.
42

42

00:01:57,352  -->  00:01:59,221
OK, usually you probably wouldn't have
43

43

00:01:59,221  -->  00:02:00,240
print statements there,
44

44

00:02:00,240  -->  00:02:03,944
but it's just for helping our understanding.
45

45

00:02:03,944  -->  00:02:04,922
OK.
46

46

00:02:04,922  -->  00:02:09,089
Now, let's go in and explore some special methods.
47

47

00:02:12,272  -->  00:02:13,411
OK.
48

48

00:02:13,411  -->  00:02:16,139
So I just fixed that quote there.
49

49

00:02:16,139  -->  00:02:18,306
Now these special methods.
50

50

00:02:19,473  -->  00:02:21,057
Well, the first we're gonna explore has to do
51

51

00:02:21,057  -->  00:02:22,439
with printing,
52

52

00:02:22,439  -->  00:02:24,066
and to show you what I mean,
53

53

00:02:24,066  -->  00:02:25,649
I'm gonna run that,
54

54

00:02:26,545  -->  00:02:29,309
and I'm gonna set b equal to
55

55

00:02:29,309  -->  00:02:31,463
an instance of the Book.
56

56

00:02:31,463  -->  00:02:34,546
The title of the book will be Python.
57

57

00:02:35,925  -->  00:02:39,136
The author, I'm just gonna put Jose for the author,
58

58

00:02:39,136  -->  00:02:42,266
and the number of pages is gonna be 100 pages long.
59

59

00:02:42,266  -->  00:02:43,813
So I notice since I have that print statement
60

60

00:02:43,813  -->  00:02:44,987
and I run that cell,
61

61

00:02:44,987  -->  00:02:47,056
it tells you a book has been created.
62

62

00:02:47,056  -->  00:02:49,806
So, remember I could print a list
63

63

00:02:50,789  -->  00:02:53,919
and Python knew exactly what to print out?
64

64

00:02:53,919  -->  00:02:58,355
So, what happens if I try to print this book?
65

65

00:02:58,355  -->  00:03:00,646
If you notice, Python's actually just gonna print
66

66

00:03:00,646  -->  00:03:04,536
out the definition of whatever b actually is,
67

67

00:03:04,536  -->  00:03:06,404
the fact that it's a main book,
68

68

00:03:06,404  -->  00:03:08,276
and then it's also gonna print out some information
69

69

00:03:08,276  -->  00:03:11,608
on exactly where it's being held in memory.
70

70

00:03:11,608  -->  00:03:12,908
But what if I wanted to actually print out
71

71

00:03:12,908  -->  00:03:14,697
some information of this book?
72

72

00:03:14,697  -->  00:03:18,234
Well, that's where the special methods come into play.
73

73

00:03:18,234  -->  00:03:20,551
And the special method that has to do with printing
74

74

00:03:20,551  -->  00:03:23,968
is called __str, which stands for string,
75

75

00:03:25,230  -->  00:03:27,260
and takes in self as an argument,
76

76

00:03:27,260  -->  00:03:29,724
and you'll notice special methods are set apart
77

77

00:03:29,724  -->  00:03:31,187
with that set of underscores.
78

78

00:03:31,187  -->  00:03:33,425
The underscore, underscore,
79

79

00:03:33,425  -->  00:03:37,508
and what I'm gonna do is with the special method.
80

80

00:03:40,964  -->  00:03:43,214
I'm gonna return the title,
81

81

00:03:47,089  -->  00:03:49,256
the author, and the pages.
82

82

00:03:52,379  -->  00:03:54,250
And here I'm just using some formatting.
83

83

00:03:54,250  -->  00:03:56,081
You can use whatever formatting,
84

84

00:03:56,081  -->  00:03:58,687
as far as the print formatting that makes sense to you.
85

85

00:03:58,687  -->  00:04:01,520
And I'm gonna input the attributes
86

86

00:04:02,503  -->  00:04:06,670
that correspond to the title, author, and the pages.
87

87

00:04:08,725  -->  00:04:12,138
And then, whoops, this should be a period.
88

88

00:04:12,138  -->  00:04:14,888
Self.author, and then self.pages.
89

89

00:04:18,999  -->  00:04:22,166
OK, let's zoom out a bit, so you can see the whole thing.
90

90

00:04:22,166  -->  00:04:25,945
OK, so that's all that string is doing, that special method.
91

91

00:04:25,945  -->  00:04:27,974
So now, if I create a new book.
92

92

00:04:27,974  -->  00:04:30,130
"A book has been created," and I print b,
93

93

00:04:30,130  -->  00:04:33,303
you'll notice that it calls this special method
94

94

00:04:33,303  -->  00:04:37,125
when you call the print function in Python,
95

95

00:04:37,125  -->  00:04:39,031
and that's really what special methods,
96

96

00:04:39,031  -->  00:04:40,375
how they come into play.
97

97

00:04:40,375  -->  00:04:43,906
They have to do with built-in functions in Python
98

98

00:04:43,906  -->  00:04:46,301
and what they actually produce.
99

99

00:04:46,301  -->  00:04:49,633
So, let's explore another method.
100

100

00:04:49,633  -->  00:04:52,348
So I'm gonna go ahead and remove this one.
101

101

00:04:52,348  -->  00:04:54,786
Another special method is length.
102

102

00:04:54,786  -->  00:04:56,536
And I can do __len__,
103

103

00:04:57,880  -->  00:04:59,665
and this is what Python's gonna use
104

104

00:04:59,665  -->  00:05:01,857
when you call the length of an object.
105

105

00:05:01,857  -->  00:05:04,540
In this case, I just actually want to return
106

106

00:05:04,540  -->  00:05:05,924
the number of pages, right?
107

107

00:05:05,924  -->  00:05:07,064
'Cause that's the most fitting thing
108

108

00:05:07,064  -->  00:05:09,219
for the length of a book.
109

109

00:05:09,219  -->  00:05:12,548
So I can say return self.pages.
110

110

00:05:12,548  -->  00:05:14,382
I create a new book.
111

111

00:05:14,382  -->  00:05:16,779
Let's just verify, 101.
112

112

00:05:16,779  -->  00:05:18,199
"A new book's been created."
113

113

00:05:18,199  -->  00:05:20,843
And if I print the book, you'll notice,
114

114

00:05:20,843  -->  00:05:23,529
I'm back to that original instance
115

115

00:05:23,529  -->  00:05:25,070
where it tells you where it's stored in memory,
116

116

00:05:25,070  -->  00:05:28,118
since I removed that special method,
117

117

00:05:28,118  -->  00:05:31,325
but if I check the length of the book now, length of b,
118

118

00:05:31,325  -->  00:05:33,556
it'll actually return the pages,
119

119

00:05:33,556  -->  00:05:35,418
so that's a special method used
120

120

00:05:35,418  -->  00:05:38,059
in conjunction with that length function.
121

121

00:05:38,059  -->  00:05:42,040
And then, finally, another special method I can use
122

122

00:05:42,040  -->  00:05:45,002
is the del, or delete method.
123

123

00:05:45,002  -->  00:05:48,657
So you can delete objects from memory,
124

124

00:05:48,657  -->  00:05:51,142
if it has that method in it
125

125

00:05:51,142  -->  00:05:54,559
and I'm gonna say print "A book is gone!"
126

126

00:05:56,997  -->  00:05:58,624
since we deleted it.
127

127

00:05:58,624  -->  00:06:01,509
So now if I create this book b.
128

128

00:06:01,509  -->  00:06:05,329
Let's go ahead and say b, find out what the title is.
129

129

00:06:05,329  -->  00:06:06,956
Title is "Python."
130

130

00:06:06,956  -->  00:06:10,956
I can call the delete method, or statement on b,
131

131

00:06:11,954  -->  00:06:14,355
and it's printed out, "A book is gone!"
132

132

00:06:14,355  -->  00:06:17,446
So now if I try calling the title,
133

133

00:06:17,446  -->  00:06:20,498
it says, "b is not defined," so that makes sense.
134

134

00:06:20,498  -->  00:06:22,915
OK, so these special methods,
135

135

00:06:24,432  -->  00:06:26,590
remember, they're defined by the use of their underscores
136

136

00:06:26,590  -->  00:06:30,126
and they allow us to use specific functions in Python
137

137

00:06:30,126  -->  00:06:32,842
on objects created throughout our class.
138

138

00:06:32,842  -->  00:06:37,009
So, that's it as far as this general section and lectures
139

139

00:06:38,004  -->  00:06:41,262
on object oriented programming.
140

140

00:06:41,262  -->  00:06:43,986
I know it was a lot and I know it's sometimes hard
141

141

00:06:43,986  -->  00:06:45,245
to understand,
142

142

00:06:45,245  -->  00:06:47,565
but really, just take it slowly,
143

143

00:06:47,565  -->  00:06:50,820
make sure you copy exactly what I'm doing,
144

144

00:06:50,820  -->  00:06:52,162
take your time with it,
145

145

00:06:52,162  -->  00:06:53,950
and again, like I've mentioned before,
146

146

00:06:53,950  -->  00:06:56,915
check out a lot of these more great resources on this topic.
147

147

00:06:56,915  -->  00:06:59,801
It'll take a while for this to really start
148

148

00:06:59,801  -->  00:07:02,689
cementing itself in your mind,
149

149

00:07:02,689  -->  00:07:04,645
but what we're going to do is,
150

150

00:07:04,645  -->  00:07:06,064
for the next Milestone Project
151

151

00:07:06,064  -->  00:07:09,114
is utilise object oriented programming really heavily,
152

152

00:07:09,114  -->  00:07:11,106
so you get a good feeling for it.
153

153

00:07:11,106  -->  00:07:12,811
OK, so in the next video,
154

154

00:07:12,811  -->  00:07:15,943
I'm going to explain your Milestone Project to you.
155

155

00:07:15,943  -->  00:07:17,026
Thanks, guys.
