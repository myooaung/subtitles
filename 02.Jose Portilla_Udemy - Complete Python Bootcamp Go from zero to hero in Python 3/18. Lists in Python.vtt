WEBVTT
1
00:00:05.740 --> 00:00:06.910
Selamat datang kembali semuanya.

2
00:00:06.910 --> 00:00:13.310
Sekarang mari kita mulai membahas daftar dalam daftar python atau urutan urutan yang dapat menampung berbagai jenis

3
00:00:13.310 --> 00:00:18.110
objek dan menggunakan tanda kurung dan koma untuk memisahkan objek dalam daftar.

4
00:00:18.110 --> 00:00:24.350
Sebagai contoh di sini kita dapat melihat daftar angka 1 2 3 4 5 dan daftar seperti string mendukung

5
00:00:24.350 --> 00:00:29.270
pengindeksan dan pengirisan dan ini juga dapat disarangkan dan memiliki berbagai metode yang berguna yang

6
00:00:29.270 --> 00:00:30.160
dapat dibatalkan.

7
00:00:30.170 --> 00:00:32.740
Mari kita jelajahi semua konsep ini dalam sebuah notebook Jupiter.

8
00:00:32.990 --> 00:00:41.330
Mari kita mulai dengan mendefinisikan variabel yang disebut daftar saya dan kita akan mengaturnya sama dengan angka 1 hingga 3.

9
00:00:41.340 --> 00:00:44.480
Jadi di sini kita dapat melihat bahwa daftar ditentukan oleh tanda kurung siku.

10
00:00:44.520 --> 00:00:48.390
Dan kemudian kita memiliki setiap jenis objek yang dipisahkan oleh koma.

11
00:00:48.390 --> 00:00:53.040
Kami hanya membuat daftar bilangan bulat tetapi kami juga bisa membuat daftar jenis objek campuran.

12
00:00:53.040 --> 00:00:56.040
Jadi yang pertama bisa menjadi string.

13
00:00:56.040 --> 00:01:02.730
Yang kedua bisa berupa angka atau titik mengambang dan daftar tidak memiliki masalah sehingga kita dapat melihat daftar python sangat

14
00:01:02.730 --> 00:01:07.890
fleksibel dalam tipe data yang dapat mereka pegang dan jika pernah ingin memeriksa panjang daftar

15
00:01:08.190 --> 00:01:13.320
seperti kita bisa memeriksa panjang string kita hanya menggunakan fungsi LCN yang dibangun

16
00:01:13.320 --> 00:01:19.530
ke Python dan kemudian melewatkan daftar saya dan mengembalikan kembali berapa banyak elemen atau item dalam daftar itu.

17
00:01:19.530 --> 00:01:24.440
Jadi di sini kita memiliki tiga item string seratus dua puluh tiga koma dua.

18
00:01:24.450 --> 00:01:29.390
Sekarang seperti string karena daftar adalah urutan elemen.

19
00:01:29.520 --> 00:01:33.310
Kita dapat menggunakan pengindeksan dan pengirisan dan ini berfungsi seperti string.

20
00:01:33.300 --> 00:01:34.980
Jadi mari kita tunjukkan apa yang saya maksud dengan itu.

21
00:01:35.130 --> 00:01:46.390
Saya akan mengatakan daftar saya sama dengan katakanlah 1 hingga 3 jalankan itu.

22
00:01:46.740 --> 00:01:50.070
Dan kemudian jika saya ingin mengambil elemen untuk mengindeks 0.

23
00:01:50.070 --> 00:01:57.130
Jadi itu elemen pertama saya hanya akan mengatakan daftar saya 0 jalankan itu dan saya kembali 1 dan jika

24
00:01:57.140 --> 00:02:00.970
saya ingin mengambil semuanya mulai dari indeks 1 sampai akhir.

25
00:02:01.030 --> 00:02:03.720
Yah itu seperti pengindeksan string dan string slicing.

26
00:02:03.870 --> 00:02:09.890
Saya akan mengatakan hei mulai indeks satu usus besar sampai akhir dan kemudian kita memiliki dua dan tiga.

27
00:02:09.900 --> 00:02:17.620
Jadi pengiris dan pengindeksan ini berfungsi seperti string dan Anda juga dapat menyatukan semuanya.

28
00:02:17.640 --> 00:02:19.480
Jadi mari kita lihat ini di sini.

29
00:02:19.620 --> 00:02:22.770
Saya memiliki daftar saya sekarang yang merupakan satu dua tiga.

30
00:02:23.040 --> 00:02:35.640
Saya akan membuat daftar lain yang sama dengan katakanlah 4 5 dan saya bisa melihat daftar saya ditambah di daftar lain dan

31
00:02:35.640 --> 00:02:39.080
itu akan bergabung dengan daftar baru.

32
00:02:39.090 --> 00:02:41.330
Satu dua tiga empat lima.

33
00:02:41.340 --> 00:02:43.850
Perhatikan di sini saya sebenarnya menyimpan hasil ini.

34
00:02:43.950 --> 00:02:50.170
Jadi jika saya ingin memanggil kembali daftar saya atau daftar lain saya dapat menggunakan tab autocomplete di sini.

35
00:02:50.280 --> 00:02:54.300
Saya masih memiliki dua daftar terpisah itu jika saya benar-benar ingin menyimpan ini, saya

36
00:02:54.810 --> 00:03:02.820
perlu menugaskannya untuk sesuatu sehingga kita dapat mengatakan daftar baru sama dengan daftar saya ditambah daftar lain dan kemudian jika saya memeriksa daftar baru sekarang adalah satu

37
00:03:02.870 --> 00:03:04.710
dua tiga empat atau lima.

38
00:03:05.140 --> 00:03:05.720
BAIK.

39
00:03:05.850 --> 00:03:08.100
Jadi itulah dasar-dasar pendengar.

40
00:03:08.130 --> 00:03:17.620
Di sini kita memiliki irisan pengindeksan dan penggabungan seharusnya terasa sangat mirip dengan string kecuali apa yang berbeda dari string di sini

41
00:03:17.620 --> 00:03:22.720
adalah bahwa kita benar-benar dapat bermutasi atau berubah di sekitar daftar.

42
00:03:22.720 --> 00:03:28.480
Ingat kembali ketika kita mencoba untuk mengubah huruf di string, itu tidak akan membiarkan kita daftar tidak memiliki

43
00:03:28.540 --> 00:03:30.140
masalah dengan cara itu.

44
00:03:30.160 --> 00:03:34.970
Jadi jika saya melihat daftar baru saya, itu satu dua tiga empat lima.

45
00:03:35.120 --> 00:03:40.510
Mari kita lanjutkan dan ubah salah satu elemen ini, mari kita ubah yang ada di semua huruf besar.

46
00:03:40.550 --> 00:03:47.130
Yang bisa saya lakukan adalah mengatakan daftar baru di posisi 0 sekarang sama dengan 1 di semua huruf besar.

47
00:03:47.130 --> 00:03:49.160
Sekarang mari kita perjelas bahwa kita mengubahnya.

48
00:03:49.210 --> 00:03:58.440
Jadi ketika saya mengatakan satu semua topi dan sekarang jika saya melihat daftar baru saya, saya punya satu semua topi dua tiga empat

49
00:03:58.450 --> 00:03:59.270
lima.

50
00:03:59.360 --> 00:04:04.320
Jadi itulah cara Anda benar-benar dapat bermutasi atau mengubah elemen yang sudah ada dalam daftar.

51
00:04:04.380 --> 00:04:07.180
Dan itu adalah sesuatu yang membedakannya dari string.

52
00:04:07.180 --> 00:04:12.100
Selain fakta bahwa itu juga memegang berbagai jenis elemen dan kawat gigi dan koma.

53
00:04:12.110 --> 00:04:16.090
Jadi sekali lagi Anda bisa mengubahnya dan memengaruhi elemen di dalamnya.

54
00:04:17.290 --> 00:04:22.850
Dalam operasi umum lainnya yang mungkin ingin Anda lakukan adalah menambahkan elemen ke bagian paling akhir daftar.

55
00:04:23.290 --> 00:04:29.830
Dan dengan cara itu kita bisa melakukan itu, kita katakan titik-titik terbaru dan tekan tab di sini dan Anda akan melihat semua

56
00:04:29.830 --> 00:04:32.530
berbagai metode yang tersedia untuk Anda dalam daftar.

57
00:04:32.530 --> 00:04:39.400
Yang akan kami tunjukkan di sini adalah metode append dan append memungkinkan Anda untuk menambahkan item baru

58
00:04:39.400 --> 00:04:40.720
ke akhir daftar.

59
00:04:41.050 --> 00:04:48.950
Jadi saya akan mengatakan menambahkan 6 dan setelah membaca ini dengan baik kita akan melihat bahwa jika saya memeriksa daftar baru saya, saya punya

60
00:04:50.420 --> 00:04:54.860
satu semua topi dua tiga empat lima dan saya punya enam sekarang.

61
00:04:54.860 --> 00:05:01.400
Jadi perhatikan bagaimana pena benar-benar mempengaruhi daftar dan kami menyebutnya mempengaruhi di suatu tempat karena

62
00:05:01.400 --> 00:05:06.280
secara permanen mengubah daftar baru untuk memiliki elemen di akhir ini.

63
00:05:06.290 --> 00:05:07.560
Jadi ini dikenal sebagai pena.

64
00:05:07.580 --> 00:05:10.760
Dan lagi itu memungkinkan Anda untuk menempatkan barang apa pun di akhir daftar.

65
00:05:10.760 --> 00:05:12.630
Mari kita coba sekali lagi.

66
00:05:12.720 --> 00:05:20.910
Saya akan mengirimkan daftar pena, katakanlah tujuh run itu checker dan Anda daftar dan saya bisa melihat semua topi.

67
00:05:20.910 --> 00:05:22.520
Dua tiga empat lima enam.

68
00:05:22.560 --> 00:05:25.830
Dan kemudian tujuh hanya karena saya sangat diperbesar di sini adalah semacam memotongnya.

69
00:05:26.010 --> 00:05:30.180
Tetapi jika Anda ingin memperkecil, Anda mulai melihatnya dengan cara yang lebih normal.

70
00:05:30.180 --> 00:05:30.500
Baiklah.

71
00:05:30.540 --> 00:05:32.550
Jadi kita tahu cara menambahkan sesuatu ke daftar.

72
00:05:32.550 --> 00:05:34.790
Mari kita bicara tentang menghapus item dari daftar.

73
00:05:34.890 --> 00:05:37.590
Untuk melakukan itu kita dapat menggunakan metode pop.

74
00:05:37.680 --> 00:05:43.960
Jadi pop sebenarnya akan mengeluarkan item dari akhir daftar.

75
00:05:44.000 --> 00:05:45.480
Mari kita tunjukkan apa yang Anda maksud dengan itu.

76
00:05:45.680 --> 00:05:52.200
Kita akan mengatakan daftar baru yang membuka dan menutup cetak melihat ruber untuk banyak pemanggilan metode ini.

77
00:05:52.220 --> 00:05:54.580
Jika Anda tidak memiliki Pangeran ada di sana dan Anda hanya menjalankannya.

78
00:05:54.710 --> 00:05:55.650
Ini akan melaporkan kembali.

79
00:05:55.660 --> 00:05:59.070
Hei itulah fungsi pop di dalam objek terbaru ini.

80
00:05:59.090 --> 00:06:02.930
Jika Anda benar-benar ingin menyebutnya Anda perlu membuka dan menutup tanda kurung.

81
00:06:02.930 --> 00:06:06.230
Dan nanti kita akan membahas perbedaan antara metode dan fungsi.

82
00:06:06.260 --> 00:06:09.770
Anda mungkin pernah mendengar saya menggunakan istilah-istilah itu sedikit secara bergantian sekarang kita akan

83
00:06:09.770 --> 00:06:11.330
membahas lebih detail tentang mereka nanti.

84
00:06:11.630 --> 00:06:17.960
Tetapi sekarang kita melihat bahwa kita mengatakan daftar pop itu dan muncul 7 dan itu sebenarnya

85
00:06:17.960 --> 00:06:18.810
dikembalikan juga.

86
00:06:20.210 --> 00:06:25.380
Dan jika kita melihat daftar baru apa sekarang, ia tidak lagi memiliki string 7 di dalamnya.

87
00:06:25.380 --> 00:06:28.350
Sekarang hanya naik ke string 6.

88
00:06:28.350 --> 00:06:31.380
Jadi itu sebenarnya menyimpan hasil dari pop.

89
00:06:31.440 --> 00:06:42.700
Jadi kita dapat mengatakan item muncul sama dengan daftar baru dan saya akan mengatakan drop pop.

90
00:06:42.830 --> 00:06:47.900
Dan ketika saya menjalankan ini, apa yang akan terjadi adalah item pop ini sekarang menjadi item yang ada di akhir

91
00:06:47.900 --> 00:06:48.610
daftar itu.

92
00:06:48.740 --> 00:06:56.330
Jadi saya bisa menyalin dan menempelkan item pop ini dan sekarang saya punya 6 mengatakan ada item pop dan itu tidak lagi

93
00:06:56.330 --> 00:06:58.110
sebagai bagian dari daftar saya.

94
00:06:58.160 --> 00:07:03.820
Sekarang pertanyaan umum yang muncul di sini adalah hei saya tidak ingin menghapus sesuatu dari akhir daftar.

95
00:07:04.010 --> 00:07:10.870
Saya ingin menghapusnya pada indeks tertentu misalnya saya ingin menghapus semua huruf besar pada indeks 0.

96
00:07:11.090 --> 00:07:12.310
Sebenarnya tidak masalah.

97
00:07:12.320 --> 00:07:18.870
Anda dapat memasukkan posisi indeks ke dalam pop yang dapat kami ucapkan dan Anda mendaftar pop dan kemudian hanya meneruskan posisi

98
00:07:18.870 --> 00:07:21.260
indeks dari apa yang ingin Anda hapus.

99
00:07:21.270 --> 00:07:25.110
Kita dapat melihat di sini bahwa satu semua huruf besar adalah posisi indeks 0.

100
00:07:25.200 --> 00:07:27.300
Jadi pasand 0 di sana.

101
00:07:27.420 --> 00:07:27.920
Menjalankannya.

102
00:07:27.930 --> 00:07:35.750
Sekarang kita dapat melihat bahwa kita telah membuka semua topi dan jika Anda daftar sekarang kami memiliki dua tiga empat lima.

103
00:07:36.040 --> 00:07:41.230
Jadi sekali lagi pop pada dasarnya menghapus item dari daftar di lokasi apa pun yang Anda berikan.

104
00:07:41.290 --> 00:07:44.260
Secara default lokasi indeks negatif 1.

105
00:07:44.290 --> 00:07:45.830
Bagian paling akhir dari daftar.

106
00:07:45.910 --> 00:07:53.240
Jadi pengindeksan terbalik juga berfungsi dari daftar seperti itu berfungsi untuk string beberapa metode yang ingin saya diskusikan

107
00:07:53.240 --> 00:07:59.720
selain pop dan tambahkan yang akan menjadi metode yang sangat umum Anda gunakan adalah mengurutkan

108
00:07:59.720 --> 00:08:00.860
dan membalikkan.

109
00:08:00.860 --> 00:08:03.040
Jadi untuk melakukan ini saya akan membuat daftar baru.

110
00:08:03.050 --> 00:08:04.220
Mari perbesar di sini.

111
00:08:05.170 --> 00:08:11.170
Jadi saya akan membaca daftar yang bagus dan saya akan melihat daftar terakhir menjadi beberapa huruf

112
00:08:11.170 --> 00:08:13.930
di sini, tetapi kita akan menyortirnya berdasarkan

113
00:08:17.270 --> 00:08:18.220
urutan abjad.

114
00:08:18.340 --> 00:08:22.540
Dan kami juga akan membuat daftar angka jadi kami akan mengatakan nimblest sama dengan.

115
00:08:22.540 --> 00:08:25.650
Dan mari kita buat ini hanya beberapa nomor yang rusak juga.

116
00:08:27.270 --> 00:08:28.900
OK jadi kami punya dua daftar.

117
00:08:28.950 --> 00:08:35.280
Jika kita ingin menyortir daftar-daftar ini di mana kita dapat melakukan disebut metode sortir dari mereka, kita dapat melihat

118
00:08:35.280 --> 00:08:39.680
semacam daftar baru dan Anda dapat menggunakan tab autocomplete untuk melakukan ini.

119
00:08:39.970 --> 00:08:46.060
Buka tanda kurung tutup dan ini sebenarnya semacam metode khusus di tempat karena sebenarnya tidak mengembalikan

120
00:08:46.060 --> 00:08:47.050
apa pun.

121
00:08:47.110 --> 00:08:49.510
Alih-alih apa yang dilakukannya adalah akan memilah.

122
00:08:49.510 --> 00:08:53.260
Daftar baru di tempat yang berarti tidak mengembalikan apa pun.

123
00:08:53.260 --> 00:08:58.090
Alih-alih ketika Anda memanggil kembali daftar baru lagi itu sekarang diurutkan dalam urutan abjad.

124
00:08:58.090 --> 00:09:03.640
ABC X dan itu perbedaan penting untuk dibuat karena banyak kali pemula akan melakukan hal

125
00:09:03.640 --> 00:09:04.620
seperti ini.

126
00:09:04.750 --> 00:09:12.380
Mereka akan mengatakan Oh daftar saya yang diurutkan sama dengan daftar Anda yang semacam itu.

127
00:09:12.750 --> 00:09:18.450
Tetapi apa yang akan terjadi di sini adalah karena daftar baru yang ada di tempat itu sebenarnya tidak mengembalikan

128
00:09:18.450 --> 00:09:20.320
apa pun untuk Anda tetapkan.

129
00:09:20.340 --> 00:09:25.210
Jadi, ketika Anda memanggil daftar saya yang disortir, Anda tidak mendapatkan apa-apa atau tidak sama sekali.

130
00:09:25.270 --> 00:09:33.360
Dan Anda benar-benar dapat memeriksa jenis ini dan itu akan mengatakan bahwa itu adalah jenis darah dan jenis apa adalah

131
00:09:33.360 --> 00:09:36.050
jenis untuk objek yang tidak ada.

132
00:09:36.060 --> 00:09:41.640
Jadi sebenarnya ada objek khusus dalam Python yang disebut tidak memperhatikan ibukota dan di sana dan ini

133
00:09:41.640 --> 00:09:47.460
hanya sesuatu yang dapat Anda gunakan untuk menunjukkan tidak ada nilai dan banyak kali orang memegangnya sebagai pengganti.

134
00:09:47.610 --> 00:09:53.320
Tapi sungguh apa itu nilai balik fungsi atau metode yang sebenarnya tidak mengembalikan apa pun.

135
00:09:53.550 --> 00:09:58.140
Jadi itu adalah nilai pengembalian default umum untuk fungsi yang mungkin mencari sesuatu dan

136
00:09:58.140 --> 00:10:00.180
mungkin atau mungkin tidak menemukannya misalnya.

137
00:10:00.180 --> 00:10:05.280
Jadi itu perbedaan penting untuk dicatat di sini bahwa ketika Anda menggunakan metode semacam ini sebenarnya

138
00:10:05.280 --> 00:10:06.480
terjadi di tempat.

139
00:10:06.510 --> 00:10:10.420
Jadi, Anda tidak akan dapat menetapkan kembali hasilnya ke hal lain.

140
00:10:10.440 --> 00:10:19.940
Jika Anda memang ingin melakukan itu, Anda harus melakukannya adalah mengatakan daftar baru yang sakit dan kemudian katakan daftar saya yang disortir sama dengan

141
00:10:19.940 --> 00:10:28.380
daftar baru dan kemudian ketika Anda menjalankannya Anda dapat memiliki daftar yang diurutkan menggunakan tab pelengkapan otomatis di sana dan Anda akan

142
00:10:28.830 --> 00:10:33.870
dapatkan kembali daftar Anda yang disortir dan coba daftar nomor itu lagi.

143
00:10:33.870 --> 00:10:37.150
Jadi sekarang daftar ini tidak disortir.

144
00:10:37.200 --> 00:10:44.950
Jika saya membatalkan metode pengurutan dan saya memeriksa nimblest lagi sekarang diurutkan.

145
00:10:45.000 --> 00:10:45.460
Baiklah.

146
00:10:45.690 --> 00:10:49.290
Mari kita juga membahas metode terbalik dari daftar seperti yang Anda harapkan.

147
00:10:49.320 --> 00:10:51.960
Ini akan membalikkan semua yang ada di daftar Anda.

148
00:10:51.960 --> 00:10:59.680
Jadi cukup buka tutup tutup cetak jalankan itu dan itu juga di tempat yang berarti tidak mengembalikan apa pun.

149
00:10:59.800 --> 00:11:04.880
Dan ketika Anda memanggil versi terbalik dari daftar Anda, mereka memiliki 8 4 3 dua 1.

150
00:11:04.890 --> 00:11:05.460
Baiklah.

151
00:11:05.520 --> 00:11:11.940
Itu benar-benar dasar-dasar daftar dan metode pendukung paling untuk dipahami adalah metode append dan metode

152
00:11:11.940 --> 00:11:14.850
pop serta metode sortir dan balik.

153
00:11:14.940 --> 00:11:19.380
Dan seperti halnya string dapat melakukan pengindeksan dan pemotongan.

154
00:11:19.380 --> 00:11:26.760
Jadi, jika Anda kembali ke sini, kami dapat mengatakan pengindeksan serta notasi irisan seperti rekan.

155
00:11:26.880 --> 00:11:30.750
Jadi itu berfungsi seperti yang Anda harapkan berfungsi seperti halnya dalam string.

156
00:11:30.750 --> 00:11:35.450
Satu-satunya hal yang perlu diperhatikan di sini adalah tidak seperti string yang dapat kami lakukan penugasan kembali seperti yang

157
00:11:35.450 --> 00:11:36.590
kami lakukan dengan daftar.

158
00:11:36.630 --> 00:11:37.010
BAIK.

159
00:11:37.080 --> 00:11:38.520
Itulah dasar-dasar daftar.

160
00:11:38.580 --> 00:11:41.100
Selanjutnya kita akan membahas kamus.

161
00:11:41.100 --> 00:11:42.090
Saya akan melihatnya di sana.
