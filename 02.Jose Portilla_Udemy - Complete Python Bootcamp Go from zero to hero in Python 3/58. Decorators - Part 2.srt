1
1

00:00:01,925  -->  00:00:05,216
<v Instructor>Hello everyone, welcome to the second lecture</v>
2

2

00:00:05,216  -->  00:00:07,756
in the decorator section of this course,
3

3

00:00:07,756  -->  00:00:08,798
and now we're gonna be talking about
4

4

00:00:08,798  -->  00:00:11,168
functions within functions.
5

5

00:00:11,168  -->  00:00:14,603
So we saw previously how we can treat functions in objects.
6

6

00:00:14,603  -->  00:00:18,553
Remember I assigned a hello function to that greet variable.
7

7

00:00:18,553  -->  00:00:20,036
Now let's see how we can define functions
8

8

00:00:20,036  -->  00:00:22,535
inside of other functions.
9

9

00:00:22,535  -->  00:00:26,590
So we're gonna do this by defining a new function
10

10

00:00:26,590  -->  00:00:28,007
called def hello,
11

11

00:00:29,394  -->  00:00:33,994
and again it's gonna take in Jose as a default,
12

12

00:00:33,994  -->  00:00:35,132
and the first thing it's gonna do
13

13

00:00:35,132  -->  00:00:36,453
when you call the hello function
14

14

00:00:36,453  -->  00:00:38,455
it's gonna print
15

15

00:00:38,455  -->  00:00:41,538
the hello function has been executed.
16

16

00:00:49,316  -->  00:00:50,149
Okay,
17

17

00:00:51,092  -->  00:00:53,652
next what's gonna happen is I'm gonna write a function
18

18

00:00:53,652  -->  00:00:55,614
within another function,
19

19

00:00:55,614  -->  00:00:59,114
and this function's gonna be called greet.
20

20

00:01:00,511  -->  00:01:02,885
So what greet is going to do,
21

21

00:01:02,885  -->  00:01:06,198
and let me zoom out, or zoom, reset here we go,
22

22

00:01:06,198  -->  00:01:07,031
okay, so
23

23

00:01:09,132  -->  00:01:13,412
the function greet is within the hello function,
24

24

00:01:13,412  -->  00:01:15,412
and it's going to return
25

25

00:01:18,370  -->  00:01:19,711
a string,
26

26

00:01:19,711  -->  00:01:21,803
so let's have the string say
27

27

00:01:21,803  -->  00:01:24,636
This is inside the greet function.
28

28

00:01:29,179  -->  00:01:30,052
And something I wanna do here
29

29

00:01:30,052  -->  00:01:32,093
just to make it extra clear when we're printing
30

30

00:01:32,093  -->  00:01:34,562
some of these things, or running them.
31

31

00:01:34,562  -->  00:01:37,790
I'm gonna put in a tab statement.
32

32

00:01:37,790  -->  00:01:38,960
Okay.
33

33

00:01:38,960  -->  00:01:40,931
So continuing on I'm gonna have another function
34

34

00:01:40,931  -->  00:01:43,746
within this function called welcome,
35

35

00:01:43,746  -->  00:01:45,218
it doesn't take any arguments,
36

36

00:01:45,218  -->  00:01:48,218
and what it's gonna do is similarly,
37

37

00:01:49,130  -->  00:01:50,130
it'll return
38

38

00:01:51,820  -->  00:01:53,264
with a tab
39

39

00:01:53,264  -->  00:01:56,264
this is inside the welcome function.
40

40

00:02:00,903  -->  00:02:03,229
And then outside of everything
41

41

00:02:03,229  -->  00:02:04,312
I'm gonna say
42

42

00:02:05,262  -->  00:02:06,095
print
43

43

00:02:08,716  -->  00:02:10,299
the result of greet
44

44

00:02:11,987  -->  00:02:14,237
print the result of welcome
45

45

00:02:15,584  -->  00:02:16,417
and print
46

46

00:02:17,880  -->  00:02:19,047
now we, woops,
47

47

00:02:20,116  -->  00:02:23,616
now we are back inside the hello function.
48

48

00:02:30,344  -->  00:02:31,177
Okay.
49

49

00:02:31,177  -->  00:02:35,344
So let's just break down what is happening in this function.
50

50

00:02:36,318  -->  00:02:37,933
So what's happening in this function is
51

51

00:02:37,933  -->  00:02:40,766
I have hello, the outside function
52

52

00:02:42,007  -->  00:02:44,831
takes in the name Jose and says print,
53

53

00:02:44,831  -->  00:02:47,585
The hello function has been executed.
54

54

00:02:47,585  -->  00:02:49,626
Then I have the greet function,
55

55

00:02:49,626  -->  00:02:53,396
which just returns This is inside the greet function
56

56

00:02:53,396  -->  00:02:54,964
then I have the welcome function
57

57

00:02:54,964  -->  00:02:57,272
which returns this is inside the welcome function.
58

58

00:02:57,272  -->  00:03:00,502
Those two statements are inside those respective functions.
59

59

00:03:00,502  -->  00:03:01,986
So when you call hello,
60

60

00:03:01,986  -->  00:03:04,330
it prints the results of greet,
61

61

00:03:04,330  -->  00:03:05,812
which is this statement,
62

62

00:03:05,812  -->  00:03:09,156
it prints the result of welcome, which is this statement,
63

63

00:03:09,156  -->  00:03:10,262
and then finally it prints
64

64

00:03:10,262  -->  00:03:13,270
now we're back inside this main Hello function.
65

65

00:03:13,270  -->  00:03:17,772
So let's go and see what happens when we call Hello.
66

66

00:03:17,772  -->  00:03:21,680
Great, so it says the hello function has been executed,
67

67

00:03:21,680  -->  00:03:24,518
and then it says this is inside the greet function,
68

68

00:03:24,518  -->  00:03:26,041
that's the result of this line,
69

69

00:03:26,041  -->  00:03:27,606
says this is inside the welcome function,
70

70

00:03:27,606  -->  00:03:29,148
that's the result of this line,
71

71

00:03:29,148  -->  00:03:31,555
then it says Now we are back inside the Hello function.
72

72

00:03:31,555  -->  00:03:32,398
And the reason they're tabbed
73

73

00:03:32,398  -->  00:03:35,785
is because I'm putting this escape tab character there.
74

74

00:03:35,785  -->  00:03:39,618
So, let's see what happens if we call welcome.
75

75

00:03:44,977  -->  00:03:48,309
So note when I call welcome it's not defined,
76

76

00:03:48,309  -->  00:03:49,913
and that's because due to scope,
77

77

00:03:49,913  -->  00:03:51,540
the welcome function is not defined
78

78

00:03:51,540  -->  00:03:54,169
outside the hello function.
79

79

00:03:54,169  -->  00:03:58,336
So the only function that's aware that welcome exists
80

80

00:03:59,512  -->  00:04:00,926
is the hello function,
81

81

00:04:00,926  -->  00:04:03,751
since it's not defined outside of hello,
82

82

00:04:03,751  -->  00:04:07,326
it's not globally defined so Python doesn't know about it
83

83

00:04:07,326  -->  00:04:09,826
outside of the hello function.
84

84

00:04:10,888  -->  00:04:14,701
So, now let's learn about returning functions
85

85

00:04:14,701  -->  00:04:17,067
from within functions.
86

86

00:04:17,067  -->  00:04:19,233
So what I'm gonna do now is take
87

87

00:04:19,233  -->  00:04:22,035
this hello function that we made,
88

88

00:04:22,035  -->  00:04:24,868
I'm going to get rid of this line,
89

89

00:04:26,048  -->  00:04:28,425
gonna keep the greets and welcome lines.
90

90

00:04:28,425  -->  00:04:30,649
But what I'm gonna do now is say
91

91

00:04:30,649  -->  00:04:31,951
This.
92

92

00:04:31,951  -->  00:04:34,034
If name is equal to Jose,
93

93

00:04:36,502  -->  00:04:37,502
that string,
94

94

00:04:38,473  -->  00:04:39,556
return greet.
95

95

00:04:40,777  -->  00:04:44,325
And note I'm returning greet, not the result of greet.
96

96

00:04:44,325  -->  00:04:45,766
So I'm actually returning the function.
97

97

00:04:45,766  -->  00:04:48,905
If I wanted to return the result I would do this.
98

98

00:04:48,905  -->  00:04:51,354
But we're returning the actual function.
99

99

00:04:51,354  -->  00:04:52,687
Then I say else,
100

100

00:04:53,768  -->  00:04:55,018
return welcome,
101

101

00:04:55,996  -->  00:04:59,235
again, not returning the results,
102

102

00:04:59,235  -->  00:05:00,425
returning the function
103

103

00:05:00,425  -->  00:05:03,842
so we don't have those parentheses there.
104

104

00:05:04,794  -->  00:05:05,676
All right.
105

105

00:05:05,676  -->  00:05:08,613
So I have my hello function,
106

106

00:05:08,613  -->  00:05:11,952
now let's see what happens when we say
107

107

00:05:11,952  -->  00:05:13,619
x is equal to hello.
108

108

00:05:16,917  -->  00:05:19,898
So now let's see what happens.
109

109

00:05:19,898  -->  00:05:21,481
I'm gonna set that,
110

110

00:05:24,388  -->  00:05:26,075
let's go ahead and delete that,
111

111

00:05:26,075  -->  00:05:27,344
so something to note is that
112

112

00:05:27,344  -->  00:05:30,311
because this is a closed parentheses,
113

113

00:05:30,311  -->  00:05:33,348
that means the name has already been defined as Jose,
114

114

00:05:33,348  -->  00:05:36,254
since that was the default of hello.
115

115

00:05:36,254  -->  00:05:40,356
So x already has the name Jose within it.
116

116

00:05:40,356  -->  00:05:42,604
So if I just call x right now,
117

117

00:05:42,604  -->  00:05:45,550
I get the function main greet.
118

118

00:05:45,550  -->  00:05:49,573
So now we can see how x is pointing to the greet function
119

119

00:05:49,573  -->  00:05:52,496
inside the hello function.
120

120

00:05:52,496  -->  00:05:53,869
So why is that?
121

121

00:05:53,869  -->  00:05:58,156
That's because hello had by default the name Jose
122

122

00:05:58,156  -->  00:06:01,712
and I said, if name is equal to Jose,
123

123

00:06:01,712  -->  00:06:03,938
return the greet function.
124

124

00:06:03,938  -->  00:06:07,961
And since the greet function is inside the hello function,
125

125

00:06:07,961  -->  00:06:10,875
that means right now as far as scope is concerned,
126

126

00:06:10,875  -->  00:06:14,672
we are aware of it and it will return this function
127

127

00:06:14,672  -->  00:06:16,514
to this variable.
128

128

00:06:16,514  -->  00:06:20,212
Which means now x is equal to that function greet.
129

129

00:06:20,212  -->  00:06:23,369
So now on a global scale I can say print greet,
130

130

00:06:23,369  -->  00:06:25,311
or print 'scuse me, x
131

131

00:06:25,311  -->  00:06:28,827
and it will print what's inside of the greet function.
132

132

00:06:28,827  -->  00:06:32,432
So again, let's take a quick look at this code.
133

133

00:06:32,432  -->  00:06:36,800
In the if else clause, we are returning greet and welcome.
134

134

00:06:36,800  -->  00:06:41,755
Not the actual results, we're returning the functions.
135

135

00:06:41,755  -->  00:06:42,588
And this is because when you put
136

136

00:06:42,588  -->  00:06:45,730
a pair of parentheses after the function gets executed,
137

137

00:06:45,730  -->  00:06:48,035
where as if we don't put the parentheses after it,
138

138

00:06:48,035  -->  00:06:49,011
then it can be passed around
139

139

00:06:49,011  -->  00:06:50,534
and it can be assigned to other variables
140

140

00:06:50,534  -->  00:06:52,586
without executing it.
141

141

00:06:52,586  -->  00:06:55,898
So when we write x equals hello parentheses,
142

142

00:06:55,898  -->  00:06:57,535
hello gets executed.
143

143

00:06:57,535  -->  00:07:00,043
So we're actually executing this function
144

144

00:07:00,043  -->  00:07:02,339
when we assign it to x.
145

145

00:07:02,339  -->  00:07:05,589
And that's why the name Jose by default
146

146

00:07:06,652  -->  00:07:09,569
gets placed when you execute hello,
147

147

00:07:10,820  -->  00:07:13,807
which means this Boolean statement becomes true,
148

148

00:07:13,807  -->  00:07:15,931
which means we return the greet function
149

149

00:07:15,931  -->  00:07:18,024
that was inside the hello function,
150

150

00:07:18,024  -->  00:07:22,604
which allows x to be equal to the main greet function
151

151

00:07:22,604  -->  00:07:25,855
and then printing x like so with parentheses
152

152

00:07:25,855  -->  00:07:29,979
means you're actually running the greet function.
153

153

00:07:29,979  -->  00:07:32,742
Okay, so we've learned how to deal with
154

154

00:07:32,742  -->  00:07:34,164
functions within functions
155

155

00:07:34,164  -->  00:07:36,887
and we've also learned how to return functions.
156

156

00:07:36,887  -->  00:07:39,154
So now in the next video what we're gonna see
157

157

00:07:39,154  -->  00:07:40,942
is how we can pass function's arguments
158

158

00:07:40,942  -->  00:07:42,323
into other functions.
159

159

00:07:42,323  -->  00:07:44,140
And we've seen this already a bit
160

160

00:07:44,140  -->  00:07:47,179
with functions such as map and reduce and filter,
161

161

00:07:47,179  -->  00:07:49,524
where we could even pass lambda expressions.
162

162

00:07:49,524  -->  00:07:51,566
So now we're just gonna go and have an overview
163

163

00:07:51,566  -->  00:07:53,742
of functions as arguments.
164

164

00:07:53,742  -->  00:07:56,046
Okay, I'll stop this video here,
165

165

00:07:56,046  -->  00:07:57,417
and I will see you at the next video
166

166

00:07:57,417  -->  00:08:00,211
where we talk about functions as arguments.
167

167

00:08:00,211  -->  00:08:02,711
Thanks and I'll see you there.
