WEBVTT
1
00:00:05.280 --> 00:00:11.250
Selamat datang kembali di kuliah ini kita akan membahas kesalahan dan kesalahan penanganan pengecualian pasti terjadi

2
00:00:11.250 --> 00:00:12.680
dalam kode Anda.

3
00:00:12.720 --> 00:00:17.730
Tidak ada yang sempurna dan kesalahan pasti akan muncul terutama ketika orang lain akhirnya menggunakan

4
00:00:17.730 --> 00:00:20.110
kode Anda dengan cara yang tidak terduga.

5
00:00:20.130 --> 00:00:25.320
Kami dapat menggunakan penanganan kesalahan dalam upaya merencanakan kemungkinan kesalahan yang mungkin muncul dalam kode kami di

6
00:00:25.320 --> 00:00:26.280
masa mendatang.

7
00:00:27.060 --> 00:00:33.330
Misalnya mungkin di beberapa bagian kode Anda, Anda mencoba membuka file sehingga nanti orang lain menggunakan kode Anda

8
00:00:33.330 --> 00:00:38.430
dan pengguna dapat mencoba untuk benar-benar menulis ke file ketika itu sebenarnya hanya dibuka dengan

9
00:00:38.490 --> 00:00:44.040
mode untuk membaca saat ini jika ada kesalahan apa pun di dalam program kami, seluruh skrip

10
00:00:44.040 --> 00:00:47.540
akan berhenti dan kami mendapatkan kembali semacam pernyataan kesalahan.

11
00:00:47.610 --> 00:00:52.770
Kami benar-benar dapat menggunakan penanganan kesalahan untuk membiarkan skrip melanjutkan jika kode lain dan melaporkan kesalahan.

12
00:00:52.770 --> 00:00:57.880
Jadi, bahkan jika ada kesalahan, kode akan melaporkan kesalahan dan melanjutkan.

13
00:00:58.060 --> 00:01:02.000
Sekarang ada tiga kata kunci untuk proses penanganan pengecualian ini.

14
00:01:02.110 --> 00:01:03.300
Dan itu coba kecuali.

15
00:01:03.310 --> 00:01:08.400
Dan akhirnya kata kunci dan ini semua akan memiliki blok kode yang terkait dengannya.

16
00:01:08.420 --> 00:01:13.900
Jadi di bawah blok coba kode itulah blok kode yang akan dicoba dan ini mungkin atau mungkin

17
00:01:13.900 --> 00:01:15.240
tidak menyebabkan kesalahan.

18
00:01:15.490 --> 00:01:21.760
Jadi, sekali Anda mencoba blok coba kode yang sebenarnya jika ada kesalahan, Anda memiliki blok terima dan ini adalah

19
00:01:21.760 --> 00:01:26.090
kode blok yang akan dijalankan jika ada kesalahan di dalam blok coba itu.

20
00:01:26.260 --> 00:01:31.210
Kemudian Anda memiliki blok kode yang merupakan blok kode terakhir yang selalu dieksekusi

21
00:01:31.210 --> 00:01:33.980
apakah ada pengecualian atau kesalahan yang terjadi.

22
00:01:34.240 --> 00:01:38.110
Mari lompat ke buku catatan dan lihat beberapa contoh cara menggunakan blok ini.

23
00:01:38.110 --> 00:01:38.610
BAIK.

24
00:01:38.710 --> 00:01:43.420
Mari kita mulai dengan benar-benar melihat contoh beberapa kesalahan yang mungkin terjadi.

25
00:01:43.420 --> 00:01:51.430
Mari kita bayangkan bahwa kita memiliki fungsi yang sangat sederhana, beberapa fungsi tambah menambahkan dan satu dan dua dan kemudian apa

26
00:01:51.430 --> 00:01:58.420
fungsinya hanya mencetak jumlah mereka dan satu ditambah dan dua Anda mungkin berpikir tidak ada masalah di sini.

27
00:01:58.440 --> 00:02:02.990
Saya hanya akan mengatakan tambahkan 10 dan 20 dan Anda kembali 30.

28
00:02:03.150 --> 00:02:05.830
Tapi mari kita bayangkan Anda memiliki situasi berikut.

29
00:02:06.120 --> 00:02:08.170
Anda memiliki beberapa variabel nomor satu.

30
00:02:08.400 --> 00:02:09.740
Anda menetapkan itu sama dengan 10.

31
00:02:09.960 --> 00:02:16.930
Kemudian Anda memiliki banyak kode dan kemudian mendapatkan nomor kedua yang Anda minta sebagai

32
00:02:16.950 --> 00:02:20.950
input dan katakanlah nomor dua sama dengan input.

33
00:02:21.000 --> 00:02:21.840
Silahkan.

34
00:02:22.840 --> 00:02:24.730
Berikan nomor.

35
00:02:25.930 --> 00:02:28.330
Jadi itu meminta kami tolong berikan nomor.

36
00:02:28.330 --> 00:02:37.430
Kita mengatakan 20 dan kemudian apa yang akhirnya kita lakukan adalah kita katakan baik biarkan saya memanggil fungsi lagi di nomor 1 dan

37
00:02:37.430 --> 00:02:38.670
nomor dua.

38
00:02:38.960 --> 00:02:44.090
Mudah-mudahan Anda menyadari bahwa ini sudah akan memberi Anda kesalahan karena pemberitahuan ingat bahwa ketika Anda

39
00:02:44.090 --> 00:02:47.420
memanggil fungsi input 20 di sini sebenarnya adalah string.

40
00:02:47.510 --> 00:02:50.250
Jadi ketika saya menjalankan ini dikatakan hei Anda memiliki kesalahan ketik.

41
00:02:50.270 --> 00:02:55.040
Jadi perhatikan di sini bahwa ada pengecualian spesifik aktual bahwa Python mencoba untuk

42
00:02:55.040 --> 00:03:01.280
memberi tahu Anda tentang kesalahan tipe dan yang mengatakan tipe operasi tidak didukung sebagai empat plus integer dan string.

43
00:03:01.330 --> 00:03:06.620
Jadi pada dasarnya memberitahu Anda hei saya tidak bisa menambahkan integer dan string bersama saya bisa menambahkan dua integer bersama atau

44
00:03:06.860 --> 00:03:11.330
saya bisa menggabungkan dua string bersama tapi saya tidak bisa bekerja dengan kedua tipe data ini.

45
00:03:11.480 --> 00:03:16.070
Dan ini adalah contoh jenis kesalahan yang mungkin Anda dapatkan saat menjalankan kode Anda.

46
00:03:16.160 --> 00:03:20.090
Dan sayangnya katakanlah saya ingin memiliki pernyataan cetak.

47
00:03:20.090 --> 00:03:22.660
Jadi katakanlah sesuatu terjadi.

48
00:03:26.070 --> 00:03:29.590
Dan saya menjalankan ini pernyataan cetak ini tidak pernah benar-benar akan terjadi.

49
00:03:29.650 --> 00:03:31.140
Apa yang akan terjadi adalah saya mendapatkan kesalahan.

50
00:03:31.180 --> 00:03:32.570
Dan itulah akhir dari skrip saya.

51
00:03:32.590 --> 00:03:35.420
Tidak masalah jika saya memiliki ratusan baris melewati blok kode ini.

52
00:03:35.650 --> 00:03:40.090
Saya masih akan mendapatkan kesalahan jenis ini dan tidak ada yang lain setelah itu akan dieksekusi.

53
00:03:40.090 --> 00:03:46.360
Gagasan di balik pernyataan coba dan terima dan akhirnya adalah bahwa bahkan jika itu pernah terjadi,

54
00:03:46.360 --> 00:03:49.250
kita akan mencoba melakukan blok kode itu.

55
00:03:49.360 --> 00:03:52.840
Dan bahkan jika ada kesalahan kita dapat melanjutkan dengan beberapa kode lagi.

56
00:03:53.460 --> 00:03:55.730
Jadi bagaimana kita akan melakukan ini.

57
00:03:55.770 --> 00:03:58.360
Kita harus mencoba kata kunci usus besar.

58
00:03:58.620 --> 00:04:00.120
Dan kemudian kita memiliki blok kode.

59
00:04:00.120 --> 00:04:02.460
Jadi ini kode yang ingin Anda coba.

60
00:04:03.030 --> 00:04:10.100
Jadi Anda ingin mencoba kode ini namun mungkin ada kesalahan.

61
00:04:10.180 --> 00:04:16.500
Jadi di sini saya akan mengatakan hasilnya sama dengan 10 ditambah 10 whoops lalu.

62
00:04:16.520 --> 00:04:18.770
Jadi kita tahu ini tidak akan menyebabkan kesalahan.

63
00:04:19.160 --> 00:04:23.700
Dan kemudian apa yang akan saya lakukan di sini adalah saya akan memiliki blok kode kecuali saya.

64
00:04:23.960 --> 00:04:29.990
Jadi blok kode kecuali saya adalah apa yang saya inginkan terjadi jika ada kesalahan dan ini sangat umum.

65
00:04:30.050 --> 00:04:34.770
Saat Anda membangun perpustakaan yang lebih besar yang akan digunakan orang lain, Anda dapat memiliki

66
00:04:34.800 --> 00:04:39.110
kecuali blok sehingga Anda dapat mencetak pesan yang lebih spesifik kepada pengguna.

67
00:04:39.350 --> 00:04:48.550
Jadi mungkin Anda bisa mengatakan hei sepertinya Anda tidak menambahkan dengan benar.

68
00:04:48.750 --> 00:04:51.040
Jadi saya akan menjalankan ini dan ini.

69
00:04:51.080 --> 00:04:53.200
Kami sebenarnya tidak mendorong udara.

70
00:04:53.280 --> 00:05:00.050
Alih-alih, saya dapat menyebut hasil di sini tanpa masalah karena 20 masuk akal karena Templeton tidak memiliki masalah.

71
00:05:00.060 --> 00:05:02.620
Sekarang mari kita benar-benar menciptakan udara itu.

72
00:05:02.730 --> 00:05:07.240
Saya akan mencoba menambahkan integer 10 ke string 10 di sini.

73
00:05:07.260 --> 00:05:11.900
Sekarang ketika saya menjalankan ini katanya hei sepertinya Anda tidak menambahkan dengan benar.

74
00:05:11.940 --> 00:05:13.360
Sekarang perhatikan apa yang terjadi di sini.

75
00:05:13.470 --> 00:05:18.570
Sisa blok kode masih dapat dieksekusi dengan pernyataan terima seluruh program saya tidak dimatikan

76
00:05:18.570 --> 00:05:22.010
hanya karena saya memiliki semacam kesalahan seperti sebelumnya.

77
00:05:22.230 --> 00:05:29.580
Sebaliknya saya mencoba blok kode ini dan kemudian saya katakan kecuali dan secara umum di sini saya dapat mengatakan

78
00:05:29.640 --> 00:05:33.790
kecuali jika ada jenis kesalahan lakukan kode ini di sini.

79
00:05:33.800 --> 00:05:39.620
Sekarang mari kita bayangkan bahwa saya ingin blok kode untuk dieksekusi jika tidak ada pengecualian.

80
00:05:39.620 --> 00:05:40.970
Saya bisa melakukan sesuatu seperti ini.

81
00:05:41.000 --> 00:05:41.470
Bisa saya katakan.

82
00:05:41.480 --> 00:05:53.090
Hasil Pangeran Lain dan di atas yang bisa saya katakan Pangeran iklan berjalan dengan baik.

83
00:05:53.190 --> 00:05:57.780
Jadi sekarang ketika saya menjalankan ini hanya mengatakan hei sepertinya Anda tidak coding dengan benar.

84
00:05:57.900 --> 00:05:59.280
Jadi ini dikenal sebagai percobaan.

85
00:05:59.310 --> 00:06:00.150
Kecuali.

86
00:06:00.150 --> 00:06:01.430
Pernyataan lain.

87
00:06:01.650 --> 00:06:04.650
Dan yang kita miliki di sini adalah blok kode yang akan kita coba.

88
00:06:04.650 --> 00:06:05.900
Dan kemudian kita memiliki dua opsi.

89
00:06:05.940 --> 00:06:09.860
Jika ada kesalahan dalam blok coba itu, kami menjalankan kode kecuali yang lain.

90
00:06:09.900 --> 00:06:11.910
Jika tidak ada kesalahan di sana kami menjalankan ini.

91
00:06:11.910 --> 00:06:12.650
Kode lain.

92
00:06:12.780 --> 00:06:16.830
Jadi mari kita perbaiki ini dan minta itu tidak menghasilkan kesalahan lagi.

93
00:06:17.130 --> 00:06:18.210
Kami menjalankan ini.

94
00:06:18.300 --> 00:06:21.360
Kami mencoba blok kode ini karena berhasil.

95
00:06:21.390 --> 00:06:23.600
Kami tidak menjalankan ini kecuali blok kode.

96
00:06:23.610 --> 00:06:28.100
Sebaliknya, kami langsung beralih ke yang lain dan kami mengatakan iklan berjalan dengan baik dan kami memiliki 20.

97
00:06:28.160 --> 00:06:28.760
BAIK.

98
00:06:29.010 --> 00:06:29.790
Jadi mari kita coba.

99
00:06:29.790 --> 00:06:30.270
Kecuali.

100
00:06:30.270 --> 00:06:36.020
Kalau tidak, kita sekarang dapat benar-benar menggunakan kata kunci akhirnya untuk memiliki satu blok kode.

101
00:06:36.060 --> 00:06:37.250
Selalu mengeksekusi.

102
00:06:37.530 --> 00:06:39.470
Terlepas dari apakah ada kesalahan.

103
00:06:39.570 --> 00:06:47.050
Jadi acara ini saya akan membangun contoh di mana kami benar-benar mencoba untuk menulis beberapa file.

104
00:06:47.190 --> 00:06:49.660
Jadi mari kita jelajahi konsep coba ini kecuali.

105
00:06:49.680 --> 00:06:56.970
Dan akhirnya dengan mengerjakan contoh baru dan dalam contoh ini kita akan mencoba membuka file sehingga kita akan memiliki beberapa

106
00:06:56.970 --> 00:07:01.100
file uji dan kita akan mulai dengan membukanya dalam mode W.

107
00:07:01.310 --> 00:07:06.080
Itu mode yang benar yang memungkinkan kita untuk membuka file dan menulis ke sana atau

108
00:07:06.080 --> 00:07:07.880
membuat file jika belum ada.

109
00:07:08.180 --> 00:07:16.840
Dan kemudian saya akan mengatakan F itu benar dan saya akan menulis garis uji untuk file ini dan kemudian saya akan mengatakan kecuali

110
00:07:16.920 --> 00:07:23.330
dan di sini saya bisa mengatakan kecuali titik dua dan itu akan Kecuali untuk setiap kesalahan.

111
00:07:23.470 --> 00:07:30.760
Tetapi sebenarnya ada banyak jenis kesalahan yang saya dapat secara khusus kecuali misalnya saya dapat mencoba hanya kecuali

112
00:07:30.760 --> 00:07:32.540
untuk jenis kesalahan ini.

113
00:07:32.590 --> 00:07:34.270
Jadi apa yang terjadi terlihat.

114
00:07:34.260 --> 00:07:36.400
Kami mengalami kesalahan jenis khusus ini.

115
00:07:36.490 --> 00:07:42.010
Apa yang bisa saya lakukan adalah mengatakan hei hanya jika ada jenis kesalahan cetak.

116
00:07:42.010 --> 00:07:45.280
Ada kesalahan ketik.

117
00:07:46.770 --> 00:07:52.120
Lalu saya bisa mencoba kesalahan lain yang sebenarnya terkait dengan membuka dan menulis file.

118
00:07:52.290 --> 00:07:57.660
Dan jika Anda pergi ke dokumentasi Anda bisa menemukan kesalahan dan pengecualian dan ini menjelaskan kesalahan dan

119
00:07:57.690 --> 00:07:59.290
pengecualian sintaksis secara umum.

120
00:07:59.400 --> 00:08:04.560
Tetapi Anda akan melihat ada tautan di sini, yaitu pengecualian bawaan yang melompat ke Bagian 5

121
00:08:04.560 --> 00:08:09.360
di sini dari dokumentasi dan ini sebenarnya adalah daftar semua jenis pengecualian dan kesalahan yang

122
00:08:09.360 --> 00:08:10.250
mungkin terjadi.

123
00:08:10.260 --> 00:08:16.470
Jadi jika Anda terus memanggil ada kesalahan pernyataan ada dan kesalahan impor kesalahan indeks kesalahan

124
00:08:16.530 --> 00:08:16.950
file.

125
00:08:16.950 --> 00:08:22.320
Beberapa di antaranya Anda mungkin telah melihat sebelumnya banyak dari apa yang belum kita lihat ada kesalahan rekursi

126
00:08:22.350 --> 00:08:24.470
kesalahan OS meluap semua jenis kesalahan.

127
00:08:24.550 --> 00:08:26.940
Anda dapat secara khusus mencoba menangkap.

128
00:08:26.940 --> 00:08:32.160
Jadi dalam kasus kami kesalahan yang akan terjadi ketika Anda membuka dan menulis ke file

129
00:08:32.160 --> 00:08:34.660
yang tidak Anda miliki izinnya adalah OS.

130
00:08:34.660 --> 00:08:35.080
Berbuat salah.

131
00:08:38.540 --> 00:08:49.740
Dan kita akan mencetak jika Anda memiliki udara OS, Anda juga dapat mengatakan saya memiliki udara tergantung pada versi python yang

132
00:08:49.740 --> 00:08:58.380
Anda miliki dan kemudian kita akan menambahkan blok akhirnya dan blok terakhir ini akan selalu dijalankan

133
00:08:58.380 --> 00:09:00.190
tanpa peduli apa.

134
00:09:00.270 --> 00:09:07.610
Jadi katakan saya selalu lari akan menjalankan ini sekarang dan sekarang kita baru saja kembali.

135
00:09:07.640 --> 00:09:08.860
Saya selalu berlari.

136
00:09:09.110 --> 00:09:10.560
Jadi apa yang sebenarnya terjadi di sini.

137
00:09:10.700 --> 00:09:16.790
Kita membuka file tes yang kita panggil sehingga semua berfungsi artinya saya tidak memiliki ini kecuali blok berjalan dan

138
00:09:16.790 --> 00:09:19.230
saya tidak memiliki ini kecuali blok berjalan.

139
00:09:19.250 --> 00:09:20.990
Jadi saya katakan akhirnya saya cetak.

140
00:09:20.990 --> 00:09:22.570
Saya selalu berlari.

141
00:09:22.700 --> 00:09:28.240
Sekarang ini sebenarnya menginduksi kesalahan dengan membukanya dengan izin Jadi itu hanya baca.

142
00:09:28.340 --> 00:09:32.600
Jadi kita harus mendapatkan kesalahan pada baris ini ketika kita mencoba menulis ke file.

143
00:09:32.660 --> 00:09:35.960
Sekarang kita seharusnya tidak mendapatkan kesalahan ketik karena itu sebenarnya bukan kesalahan yang kita dapatkan.

144
00:09:35.960 --> 00:09:40.940
Alih-alih, kita harus mendapatkan kesalahan OS karena itu adalah kesalahan yang terkait dengan mencoba menulis ke file

145
00:09:41.310 --> 00:09:43.130
yang Anda hanya memiliki izin baca.

146
00:09:43.370 --> 00:09:45.190
Jadi jika saya menjalankan ini, saya akan kembali.

147
00:09:45.200 --> 00:09:47.120
Hei, Anda memiliki kesalahan OS.

148
00:09:47.360 --> 00:09:53.110
Dan tidak seperti terakhir kali di mana kita memiliki ini kecuali kita hanya satu dari blok ini akan

149
00:09:53.120 --> 00:09:58.130
berjalan dengan pernyataan terakhir, kecuali blok akan berjalan dan kemudian blok akhirnya akan berjalan.

150
00:09:58.130 --> 00:10:03.050
Dan ini adalah bagaimana Anda dapat mengatur sekelompok pengecualian untuk memiliki hal-hal spesifik mencetak untuk kesalahan

151
00:10:03.330 --> 00:10:08.630
tertentu di mana Anda bisa lakukan adalah katakanlah Anda memiliki kesalahan ketik di sini dan Anda tidak ingin

152
00:10:08.630 --> 00:10:12.220
mengingat semua jenis lainnya jika Anda hanya mengatakan di akhir ini.

153
00:10:12.320 --> 00:10:14.510
Ini akan menjadi semua pengecualian lainnya.

154
00:10:14.540 --> 00:10:19.460
Jadi semua pengecualian dan jalan lagi.

155
00:10:19.500 --> 00:10:23.820
Dan ia mengatakan semua pengecualian lain karena tidak mendeteksi kesalahan tipe atau kesalahan lain yang

156
00:10:23.830 --> 00:10:24.570
kami definisikan.

157
00:10:24.570 --> 00:10:28.000
Jadi jika Anda hanya mengatakan kecuali titik dua Anda akan mencetak kesalahan itu.

158
00:10:28.480 --> 00:10:29.290
BAIK.

159
00:10:29.310 --> 00:10:33.540
Jadi perlu diingat ketika Anda mulai dengan Python Anda mungkin tidak akan menghafal semua jenis

160
00:10:33.540 --> 00:10:36.940
kesalahan dan kemungkinan besar blok kode Anda hanya akan terlihat seperti ini.

161
00:10:36.960 --> 00:10:37.580
Mencoba.

162
00:10:37.680 --> 00:10:38.600
Kecuali.

163
00:10:38.610 --> 00:10:39.930
Dan akhirnya.

164
00:10:39.930 --> 00:10:45.270
Jadi hanya untuk mengulangi blok kode coba adalah blok kode yang akan Anda coba

165
00:10:45.360 --> 00:10:50.410
kecuali blok kode akan terjadi ketika ada kesalahan dalam pernyataan coba Anda.

166
00:10:50.700 --> 00:10:55.610
Dan kemudian Anda memiliki opsi untuk menempatkan blok akhirnya di sini yang akan selalu berjalan

167
00:10:55.610 --> 00:11:01.340
apakah ada kesalahan atau Anda dapat memiliki kode blok ELSE yang hanya akan X-2 ketika tidak ada kesalahan.

168
00:11:02.160 --> 00:11:05.420
OK jadi mari kita fokus sekali lagi di sini.

169
00:11:05.450 --> 00:11:11.730
Saat ini tidak ada tidak akan ada kesalahan karena mereka akan mengatakan mereka akan ada di sana.

170
00:11:12.410 --> 00:11:13.780
Jika saya menjalankan ini, saya akan kembali.

171
00:11:13.790 --> 00:11:14.630
Saya selalu berlari.

172
00:11:14.630 --> 00:11:15.530
Jadi tidak ada kesalahan.

173
00:11:15.530 --> 00:11:18.050
Akhirnya blok masih berjalan.

174
00:11:18.050 --> 00:11:19.310
Kami menyebabkan kesalahan.

175
00:11:19.670 --> 00:11:23.960
Kami mengatakan semua pengecualian lain karena saya hanya mengatakan dan umumnya kecuali di sini ia melakukan apa pun.

176
00:11:23.960 --> 00:11:27.100
Blok kode ini mengatakan akhirnya ia melakukan blok kode ini.

177
00:11:27.140 --> 00:11:32.680
Jadi ini akhirnya memblokir terlepas dari apakah ada kesalahan itu selalu akan berjalan.

178
00:11:32.710 --> 00:11:39.130
Jadi, mari selesaikan diskusi kami di sini dengan menunjukkan kepada Anda cara menggunakan trik yang

179
00:11:39.130 --> 00:11:43.990
akhirnya menghalangi fungsi yang mencoba mendapatkan jenis input tertentu dari pengguna.

180
00:11:43.990 --> 00:11:46.330
Jadi yang akan kita lakukan di sini adalah sebagai berikut.

181
00:11:47.570 --> 00:11:53.380
Kami akan mengatakan DPF meminta saya ..

182
00:11:53.420 --> 00:11:57.970
Jadi apa fungsi ini adalah mencoba untuk meminta pengguna untuk integer

183
00:11:58.550 --> 00:12:00.620
Jadi saya akan mengatakan yang berikut.

184
00:12:00.620 --> 00:12:08.570
Coba hasilnya sama dengan bilangan bulat dari input.

185
00:12:09.730 --> 00:12:20.540
Berikan nomor dan kemudian jika kita mendapatkan kesalahan di sini dan akan mengatakan kecuali dan saya akan mencetak

186
00:12:21.170 --> 00:12:23.730
whoops yang bukan angka.

187
00:12:25.050 --> 00:12:34.790
Dan kemudian saya akan mengatakan akhirnya mencetak dan tri kecuali akhirnya.

188
00:12:35.300 --> 00:12:39.960
Jadi saya menjalankan ini dan kita akan beralih pada fungsi ini sedikit tapi saya akan memanggil

189
00:12:39.960 --> 00:12:41.010
fungsi ini sekarang.

190
00:12:41.400 --> 00:12:42.630
Lakukan shift enter.

191
00:12:42.690 --> 00:12:44.630
Ia meminta saya untuk memberikan nomor.

192
00:12:44.880 --> 00:12:51.000
Mari kita berikan satu 20 dan saya baru saja mendapatkan dan mencoba kecuali akhirnya masuk akal

193
00:12:51.000 --> 00:12:57.170
bahwa whoops yang bukan angka yang tercetak karena kami berhasil dapat melemparkan atau mengubah 20 menjadi bilangan bulat.

194
00:12:57.510 --> 00:13:00.050
Tetapi apa yang terjadi jika saya menjalankan sel lagi.

195
00:13:00.380 --> 00:13:03.150
Dan sekarang saya memberikan satu kata.

196
00:13:03.210 --> 00:13:07.350
Sekarang saya tahu saya pasti tidak bisa mengubah kata string menjadi integer.

197
00:13:07.350 --> 00:13:10.700
Jadi ketika saya menjalankan ini dikatakan whoops itu bukan angka.

198
00:13:10.770 --> 00:13:11.840
Sekarang kita mengakhiri percobaan.

199
00:13:11.840 --> 00:13:13.550
Kecuali akhirnya.

200
00:13:13.770 --> 00:13:19.740
Jadi mari kita lihat bagaimana kita sekarang dapat menggunakan loop sementara untuk terus melakukan blok kode ini.

201
00:13:19.950 --> 00:13:23.460
Dan kecuali jika ada kesalahan di sana.

202
00:13:23.460 --> 00:13:28.740
OK jadi mari kita lihat apakah kita dapat menyesuaikan fungsi ini sehingga alih-alih hanya mengakhiri

203
00:13:28.740 --> 00:13:33.990
setelah Anda memberikan kata yang salah, kita akan memasukkannya ke dalam loop sementara yang terus

204
00:13:33.990 --> 00:13:37.950
berulang sampai Anda benar-benar memiliki blok kode dengan tanpa pengecualian.

205
00:13:38.010 --> 00:13:43.560
Jadi saya akan melakukannya sementara benar dan Anda harus selalu berhati-hati dalam melakukan sementara.

206
00:13:43.570 --> 00:13:47.750
Benar karena pada dasarnya berarti Anda perlu menggunakan pernyataan break di suatu tempat untuk keluar dari

207
00:13:47.750 --> 00:13:48.650
loop sementara ini.

208
00:13:48.650 --> 00:13:54.220
Saya akan indentasi semua tab yang disorot ini semua hit di sini dan saya akan mengatakan liar benar.

209
00:13:54.770 --> 00:14:01.520
Dapatkan hasil ini sebagai input maka saya katakan kecuali whoops yang bukan angka.

210
00:14:01.790 --> 00:14:06.700
Dan kemudian saya akan mengatakan terus membuat ini sedikit lebih mudah dibaca.

211
00:14:06.710 --> 00:14:14.720
Sejauh logika apa yang terjadi sekarang katakanlah tidak ada kesalahan maka saya akan mengatakan.

212
00:14:14.720 --> 00:14:17.720
Lain Anda benar-benar dapat menggabungkan Elswyth akhirnya di sini.

213
00:14:17.750 --> 00:14:19.980
Jadi kita akan mencoba blok kode ini.

214
00:14:20.390 --> 00:14:23.230
Jika ada kesalahan saya akan mengatakan whoops itu bukan angka.

215
00:14:23.240 --> 00:14:27.200
Lanjutkan pada yang lain artinya tidak ada pengecualian.

216
00:14:27.410 --> 00:14:29.490
Itu berarti pengguna memang memberikan bilangan bulat.

217
00:14:29.510 --> 00:14:32.240
Jadi saya akan mengatakan ya.

218
00:14:32.540 --> 00:14:33.940
Terima kasih.

219
00:14:33.940 --> 00:14:35.860
Sekarang saya harus keluar dari loop sementara ini.

220
00:14:35.870 --> 00:14:42.320
Jadi saya akan mengatakan di sini break yang mengingat pernyataan break naik ke itu termasuk loop baik saat loop

221
00:14:42.320 --> 00:14:44.300
untuk loop dan kemudian mengakhirinya.

222
00:14:44.300 --> 00:14:46.340
Jadi akhiri loop sementara ini.

223
00:14:46.670 --> 00:14:50.080
Lalu akhirnya kami akan mengatakan dan mencoba kecuali akhirnya.

224
00:14:50.390 --> 00:14:56.210
OK jadi kita hanya menempatkan empat blok kode ini di dalam true sementara kita dan kita

225
00:14:56.250 --> 00:15:02.220
akan istirahat setelah kita mengatakan ya terima kasih dan kita akan memiliki pernyataan Akhirnya yang mengatakan cetak

226
00:15:02.220 --> 00:15:08.360
dan coba kecuali akhirnya dan kita bisa membuatnya sangat jelas bahwa Pangeran I akan selalu lari pada akhirnya.

227
00:15:08.450 --> 00:15:13.670
Jadi terlepas dari ada kesalahan atau tidak akhirnya blok kode ini akan selalu berjalan.

228
00:15:14.120 --> 00:15:16.970
Jadi kita akan menjalankan ini meminta integer.

229
00:15:17.300 --> 00:15:20.740
Mari kita berikan integer yang benar kita akan mengatakan 20 tekan enter.

230
00:15:20.750 --> 00:15:21.470
Dikatakan ya.

231
00:15:21.470 --> 00:15:22.000
Terima kasih.

232
00:15:22.040 --> 00:15:25.020
Dan coba kecuali akhirnya saya akan selalu lari di akhir

233
00:15:25.640 --> 00:15:26.390
Mari sediakan itu.

234
00:15:26.510 --> 00:15:30.550
Sebuah string akan mengatakan q tekan enter dan isinya whoops.

235
00:15:30.620 --> 00:15:32.700
Itu bukan angka dan percobaan.

236
00:15:32.710 --> 00:15:34.580
Akhirnya saya akan selalu lari di akhir.

237
00:15:34.580 --> 00:15:39.410
Kecuali kita memiliki benar sementara di sini dan istirahat ini belum benar-benar dilaksanakan.

238
00:15:40.330 --> 00:15:43.680
Jadi kita memiliki kesempatan lain untuk memberikan nomor akan berkata.

239
00:15:43.690 --> 00:15:45.190
T Dikatakan Whoops lagi.

240
00:15:45.360 --> 00:15:49.750
Dan Anda dapat terus memberikannya hal-hal yang salah dan itu akan terus meminta Anda

241
00:15:49.840 --> 00:15:54.310
untuk input sampai Anda akhirnya memberikan sesuatu yang disimpan yang sebenarnya bisa dilemparkan sebagai bilangan bulat.

242
00:15:54.310 --> 00:15:55.730
Anda mengatakan 90 dan mengatakan ya.

243
00:15:55.750 --> 00:15:56.210
Terima kasih.

244
00:15:56.230 --> 00:15:59.030
Dan coba kecuali Akhirnya aku akan selalu benar di akhir.

245
00:15:59.050 --> 00:16:05.230
Jadi apa yang terjadi di sini kita katakan sementara benar coba blok kode ini jika ada pengecualian

246
00:16:05.230 --> 00:16:09.430
melakukan sesuatu dan kemudian melanjutkan yang berarti tidak ada pengecualian.

247
00:16:09.430 --> 00:16:11.840
Anda dapat mencetak semacam pernyataan lalu istirahat.

248
00:16:11.890 --> 00:16:16.980
Dan biasanya Anda hanya ingin keluar dari ini sementara benar ketika tidak ada pengecualian.

249
00:16:16.990 --> 00:16:21.140
Lalu akhirnya jika karena alasan tertentu Anda menginginkan sesuatu untuk dilanjutkan.

250
00:16:21.310 --> 00:16:26.570
Jadi hal yang baik di sini bisa seperti saya akan bertanya lagi.

251
00:16:27.930 --> 00:16:29.110
Garis baru.

252
00:16:29.180 --> 00:16:32.540
Jadi itu contoh yang lebih realistis mengapa Anda akan mengatakannya pada akhirnya.

253
00:16:32.540 --> 00:16:35.380
Jadi jika saya menjalankan ini lagi mereka akan mengatakan tolong berikan nomornya.

254
00:16:35.390 --> 00:16:36.790
Kami memberikan jawaban yang salah.

255
00:16:36.830 --> 00:16:38.150
Dikatakan itu nomor kita.

256
00:16:38.150 --> 00:16:42.190
Saya akan bertanya lagi kepada Anda, tolong berikan nomor dan kemudian Anda dapat memberikan nomor yang benar.

257
00:16:42.230 --> 00:16:43.060
Dan dikatakan ya.

258
00:16:43.070 --> 00:16:43.820
Terima kasih.

259
00:16:43.820 --> 00:16:46.390
Sayangnya itu akan mengatakan saya akan bertanya lagi.

260
00:16:46.490 --> 00:16:49.160
Jadi itu sebabnya banyak orang tidak suka bergaul dengan orang lain.

261
00:16:49.190 --> 00:16:53.780
Dan akhirnya pernyataan tetapi ada opsi untuk Anda jika Anda menginginkannya di mana Anda bisa melakukan

262
00:16:53.820 --> 00:16:58.970
alih-alih hanya menyingkirkan pernyataan akhirnya dan ketika Anda kode seperti ini dan Anda akan mengatakan tolong berikan

263
00:16:58.970 --> 00:16:59.870
nomor saya.

264
00:16:59.870 --> 00:17:01.880
Q Ya, itu bukan angka.

265
00:17:01.930 --> 00:17:06.230
Anda dapat terus melakukan ini berulang-ulang sampai Anda benar-benar memberikan nomor dan berkata

266
00:17:06.230 --> 00:17:11.650
Ya saya pikir Anda terserah Anda apakah Anda ingin mencampur Elsin akhirnya blok tetapi Anda bisa jika mau.

267
00:17:11.660 --> 00:17:12.020
Baiklah.

268
00:17:12.020 --> 00:17:13.220
Itulah dasar-dasar mencoba.

269
00:17:13.220 --> 00:17:13.730
Kecuali.

270
00:17:13.730 --> 00:17:14.440
Lain.

271
00:17:14.480 --> 00:17:18.380
Selanjutnya, kami akan memberi Anda tugas untuk menguji keterampilan baru Anda dalam hal ini.

272
00:17:18.380 --> 00:17:19.010
Kami akan melihat apakah mereka.
