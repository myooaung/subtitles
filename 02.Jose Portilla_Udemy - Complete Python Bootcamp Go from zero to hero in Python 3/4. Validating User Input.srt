1
00:00:05,390 --> 00:00:09,050
Willkommen zurück zu diesem Vortrag über die Validierung von Benutzereingaben.

2
00:00:10,360 --> 00:00:15,760
Wir haben also bereits gesehen, wie die Eingabefunktion für die Interaktion als Benutzer verwendet wird und wie

3
00:00:15,760 --> 00:00:20,830
dieser Zeichenfolgendatentyp von der Eingabefunktion in einen anderen Datentyp konvertiert wird, z. B. eine Ganzzahl.

4
00:00:21,160 --> 00:00:27,340
Auf diese Weise können wir diese Eingabe dann für andere Dinge in unserem Programm verwenden, z. B. für die Indizierung aus einer Liste.

5
00:00:27,940 --> 00:00:33,070
Denken Sie jedoch daran, dass eine Fehlermeldung angezeigt wird, wenn der Benutzer etwas weitergibt, das nicht korrekt konvertiert

6
00:00:33,070 --> 00:00:33,730
werden kann.

7
00:00:34,240 --> 00:00:40,660
Wir möchten nun untersuchen, wie diese Benutzereingaben weiter überprüft werden können, um Fehler bei ungültigen Konvertierungen zu vermeiden. Stattdessen

8
00:00:40,690 --> 00:00:46,210
wird im Grunde eine while-Schleife verwendet, in der der Benutzer ständig nach Eingaben gefragt wird.

9
00:00:46,540 --> 00:00:49,870
Bis wir eine gültige Eingabe erhalten und dann mit dem nächsten Schritt fortfahren.

10
00:00:50,410 --> 00:00:52,960
Mal sehen, wie das geht, indem wir zum Jupiter-Notizbuch springen.

11
00:00:54,940 --> 00:00:55,180
OK.

12
00:00:55,250 --> 00:01:00,260
Hier bin ich bei einem Jupiter-Notebook-Rückruf, zuvor haben wir mit dieser Eingabefunktion herumgespielt

13
00:01:00,620 --> 00:01:04,930
und sind wieder hochgekommen und haben dann versucht, Eingaben zu konvertieren.

14
00:01:05,360 --> 00:01:11,690
Und das Wichtigste dabei ist, dass wir diesen Wertfehler erhalten, wenn der Benutzer eine Eingabe bereitstellt, die für

15
00:01:11,990 --> 00:01:17,750
eine Konvertierung nicht korrekt ist, z. B. die Zeichenfolge zwei für zwei, anstatt nur die tatsächliche Nummer

16
00:01:17,840 --> 00:01:20,960
zwei sagen, wir können das nicht wirklich konvertieren.

17
00:01:21,380 --> 00:01:28,220
Wir werden also eine while-Schleife zusammen mit der Überprüfung des Datentyps verwenden, damit dieser Fehler nicht

18
00:01:28,220 --> 00:01:34,310
auftritt, sondern den Benutzer weiterhin nach der richtigen Eingabe fragen, um dies zu tun.

19
00:01:34,340 --> 00:01:40,190
Das erste, was ich tun möchte, ist, das, was wir hier haben, durch die Eingabefunktion zu nehmen und es tatsächlich

20
00:01:40,220 --> 00:01:42,350
innerhalb unserer eigenen benutzerdefinierten Funktion zu machen.

21
00:01:43,100 --> 00:01:45,290
Also werden wir D. haben. F ..

22
00:01:46,100 --> 00:01:51,800
Und ich werde diese Benutzerauswahl so nennen, dass sie keine Parameter akzeptiert, aber

23
00:01:51,800 --> 00:01:58,250
im Grunde wird gesagt, dass die Auswahl gleich der Eingabe ist und es wird bitte sagen.

24
00:01:59,920 --> 00:02:01,240
Geben Sie eine Nummer ein.

25
00:02:02,340 --> 00:02:04,690
Und lassen Sie uns einfach weitermachen und vielleicht Null bis 10 sagen.

26
00:02:06,960 --> 00:02:08,370
Und dann ein Anruf im Weltraum.

27
00:02:09,590 --> 00:02:15,710
Und dann wird es zurückkehren und versuchen, diese Auswahlzeichenfolge in eine Ganzzahl umzuwandeln.

28
00:02:16,610 --> 00:02:20,840
Also haben wir das und wir werden es hier tun, sagen wir, Benutzerauswahl.

29
00:02:21,260 --> 00:02:22,190
Lassen Sie uns fortfahren und es ausführen.

30
00:02:22,430 --> 00:02:24,230
Auch hier übergeben wir keine Parameter.

31
00:02:24,470 --> 00:02:28,010
Wir führen dies einfach aus und können sehen, dass diese Eingabefunktion aufgerufen wird.

32
00:02:28,310 --> 00:02:31,710
Es heißt, bitte geben Sie eine Zahl zwischen Null und 10 ein, wenn wir übergeben.

33
00:02:31,880 --> 00:02:35,150
Nehmen wir zum Beispiel an, Sie drücken neun Treffer.

34
00:02:35,300 --> 00:02:38,300
Es gibt die Ganzzahl neun zurück, nicht die Zeichenfolge neun.

35
00:02:38,870 --> 00:02:41,180
Derzeit gibt es zwei Probleme.

36
00:02:41,780 --> 00:02:44,660
Zum einen wird die Benutzerauswahl erneut ausgeführt.

37
00:02:45,170 --> 00:02:48,840
Ich könnte technisch noch einmal versuchen, vielleicht eine Zeichenfolge bereitzustellen.

38
00:02:48,920 --> 00:02:51,120
Neun, ich drücke die Eingabetaste und ich bekomme.

39
00:02:51,170 --> 00:02:53,900
Hey, wir geben ein ungültiges Litoral für die Ganzzahl.

40
00:02:54,440 --> 00:02:59,970
Das andere Problem dabei ist, dass ich speziell nach den Zahlen frage, vielleicht zwischen null und zehn.

41
00:03:00,410 --> 00:03:05,080
Und ich überprüfe nicht, ob die Zahl tatsächlich zwischen Null und 10 liegt.

42
00:03:05,690 --> 00:03:12,170
Wenn ich das also noch einmal ausführen würde, nehmen wir an, ich gebe ungefähr einhundert ein. Ich gebe ein, dass die Funktion

43
00:03:12,170 --> 00:03:15,890
immer noch funktioniert, weil sie einhundert in eine ganze Zahl umwandeln kann.

44
00:03:16,100 --> 00:03:18,560
Aber ich bin außerhalb der Grenzen, die ich wollte.

45
00:03:18,740 --> 00:03:20,840
100 liegt also außerhalb der Grenze von Null und 10.

46
00:03:21,350 --> 00:03:27,260
Als ein paar Dinge, die Sie tun müssen, müssen Sie sicherstellen, dass der Datentyp gültig

47
00:03:27,260 --> 00:03:33,170
ist, um diese Ganzzahlkonvertierung auszuführen und mit den tatsächlichen Eingaben zu vergleichen, wie ich erwarte.

48
00:03:33,470 --> 00:03:38,870
So kann ich nur gegen wenige Eingaben oder innerhalb einer Liste von Eingaben prüfen.

49
00:03:39,320 --> 00:03:43,490
Und was ich Ihnen auch zeigen möchte, ist das eigentliche Notizbuch, das dieser Vorlesung entspricht.

50
00:03:43,970 --> 00:03:47,630
Dieses Aufwärmprojekt, Übungsheft, das ich hier geöffnet habe.

51
00:03:48,080 --> 00:03:51,290
Ich habe einige Links für Stack Overflow hinzugefügt.

52
00:03:51,710 --> 00:03:55,910
Wenn Sie also nur eine Google-Suche durchführen, um Benutzereingaben zu überprüfen.

53
00:03:56,030 --> 00:03:58,910
Hier ist zum Beispiel eine Google-Suche nach Python.

54
00:03:58,940 --> 00:04:00,230
Überprüfen Sie, ob die Eingabe eine Zahl ist.

55
00:04:00,500 --> 00:04:02,870
Es gibt viele verschiedene Möglichkeiten, dies zu tun.

56
00:04:02,960 --> 00:04:05,360
Und ich möchte, dass Sie diese verschiedenen Methoden erforschen.

57
00:04:05,660 --> 00:04:11,680
Und ich habe hier ein paar Links für bestimmte Stapelüberlauf-Posts hinzugefügt, die diese Art von Frage beantworten.

58
00:04:11,690 --> 00:04:17,270
Wie überprüfe ich grundsätzlich, ob eine bestimmte Python-Eingabe ein Datentyp ist?

59
00:04:17,570 --> 00:04:21,090
Und später werden wir etwas über Dinge wie das Versuchen und Akzeptieren von Aussagen lernen.

60
00:04:21,440 --> 00:04:23,810
Aber für diese Art von einfachen Überprüfungen brauchen wir sie eigentlich nicht.

61
00:04:24,200 --> 00:04:26,210
Und es gibt viele verschiedene Möglichkeiten, wie Sie dies tun können.

62
00:04:26,450 --> 00:04:29,080
Hier gibt es eine fortgeschrittenere Methode wie "try Except".

63
00:04:29,390 --> 00:04:33,440
Es gibt aber auch die is-Ziffer, die true oder false zurückgibt.

64
00:04:33,500 --> 00:04:37,250
Ein Boolescher Wert, je nachdem, ob dieser in eine Ziffer umgewandelt werden kann.

65
00:04:37,820 --> 00:04:39,500
Hier gibt es also viele verschiedene Methoden.

66
00:04:39,770 --> 00:04:40,790
Also hier ist noch eine Weile.

67
00:04:40,790 --> 00:04:45,790
Richtig mit Versuch, außer hier ist eine, die im Grunde eine Funktion ist, und so weiter.

68
00:04:45,950 --> 00:04:46,850
Und da ist noch ein Stapel.

69
00:04:46,850 --> 00:04:47,690
Überlaufpfosten.

70
00:04:48,020 --> 00:04:51,050
Das prüft erneut, ob etwas eine ganze Zahl darstellt.

71
00:04:51,380 --> 00:04:53,080
Und dies ist ohne zu benutzen, versuchen und akzeptieren.

72
00:04:53,170 --> 00:04:54,290
Also scrollen Sie hier runter.

73
00:04:54,950 --> 00:04:55,940
Viele verschiedene Möglichkeiten.

74
00:04:56,030 --> 00:04:58,630
Das sind Ziffern, beginnt mit und so weiter.

75
00:04:59,030 --> 00:05:05,030
Es gibt also viele verschiedene Möglichkeiten, wie Sie diese Frage der Überprüfung auf die richtige Datentypeingabe

76
00:05:05,030 --> 00:05:05,840
lösen können.

77
00:05:06,500 --> 00:05:10,770
Die Lieblingsmethode, die ich in meiner eigenen Forschung gefunden habe, ist die Ziffer.

78
00:05:10,790 --> 00:05:11,240
Prüfen.

79
00:05:11,360 --> 00:05:12,330
Das ist also eine Ziffer.

80
00:05:12,560 --> 00:05:13,910
Dies ist wahrscheinlich der einfachste Weg, dies zu tun.

81
00:05:14,210 --> 00:05:15,620
Das ist es also, was wir tun werden.

82
00:05:16,130 --> 00:05:21,080
Denken Sie daran, es gibt manchmal Fehler für negative Zahlen, aber im Moment

83
00:05:21,080 --> 00:05:23,420
werden wir diesen Testfall ignorieren.

84
00:05:23,720 --> 00:05:27,770
Wir gehen also davon aus, dass der Benutzer eine positive Zahl übergibt.

85
00:05:28,160 --> 00:05:33,200
Denken Sie daran, seien Sie immer vorsichtig mit den Annahmen darüber, was ein Benutzer tun wird, da Benutzer Ihr Programm

86
00:05:33,200 --> 00:05:34,070
häufig beschädigen können.

87
00:05:34,310 --> 00:05:35,840
Wenn Sie nicht nach Randfällen suchen.

88
00:05:36,140 --> 00:05:37,400
Aber da halten wir die Dinge einfach.

89
00:05:37,460 --> 00:05:38,180
Das ist eine Ziffer.

90
00:05:38,240 --> 00:05:39,110
Sollte uns reichen.

91
00:05:39,590 --> 00:05:45,530
Also werden wir hierher zurückkehren und die Projektübungen aufwärmen und mit der Validierung der Benutzereingaben fortfahren.

92
00:05:46,830 --> 00:05:47,010
Gut.

93
00:05:47,520 --> 00:05:51,180
Wir haben diese Funktion also bereits als Benutzerauswahl erstellt, und ich habe zwei Probleme damit.

94
00:05:51,450 --> 00:05:56,370
Einer ist, dass ein Benutzer etwas weitergeben kann, das keine Ziffer ist, und zwei ist ein Benutzer.

95
00:05:56,370 --> 00:05:59,640
Kompass und etwas, das außerhalb des von mir gewünschten Bereichs liegt.

96
00:06:00,000 --> 00:06:04,830
Aber zum Glück habe ich diese Auswahlvariable, gegen die ich dann prüfen kann.

97
00:06:04,950 --> 00:06:08,850
Erweitern wir also diese Benutzerauswahlfunktion.

98
00:06:09,420 --> 00:06:12,600
Und basierend auf diesen Untersuchungen von Google und Stack Overflow.

99
00:06:13,050 --> 00:06:18,540
Ich werde mit der IS-Ziffernmethode prüfen, die tatsächlich für eine Zeichenfolge verfügbar ist.

100
00:06:19,050 --> 00:06:25,500
Um Ihnen zu zeigen, was ich damit meine, nehmen wir an, dass ein Wert gleich der Zeichenfolge ist.

101
00:06:25,500 --> 00:06:26,170
Einhundert.

102
00:06:27,330 --> 00:06:28,440
Also leite ich diese Zelle.

103
00:06:28,680 --> 00:06:33,630
Und in einer neuen Zelle sage ich, dass in dieser neuen Zelle ein Wert-Punkt-Treffer-Tab angezeigt wird.

104
00:06:34,080 --> 00:06:39,480
Und irgendwann werden Sie nach unten scrollen und sehen, dass es diese bequeme Methode gibt: alphanumerisch ist

105
00:06:39,600 --> 00:06:43,530
Alpha, ist Dezimal, ist Ziffer und so weiter, ist Leerzeichen ist oben.

106
00:06:43,890 --> 00:06:46,050
Und was ich wirklich suche, ist die Ziffer.

107
00:06:46,890 --> 00:06:50,280
Also werde ich sagen, dass ein Wert eine Ziffer ist.

108
00:06:50,970 --> 00:06:53,370
Und ich würde niemals erwarten, dass sich jemand all diese Methoden merkt.

109
00:06:53,400 --> 00:06:57,840
Stattdessen führen Sie eine Google-Suche durch und stapeln die Überlaufpostsuche nach der richtigen Methode.

110
00:06:58,330 --> 00:07:01,140
Und wenn Sie hier die Registerkarte verschieben, kehren Sie im Grunde zurück.

111
00:07:01,140 --> 00:07:01,440
Wahr.

112
00:07:01,440 --> 00:07:05,790
Wenn alle Zeichen in dieser Zeichenfolge Ziffern sind, ist das ziemlich genau das, was ich will.

113
00:07:06,360 --> 00:07:12,270
Wenn Sie also enge Klammern öffnen, da dies ein Methodenaufruf ist, führen wir dies aus und es wird zurückgegeben.

114
00:07:12,300 --> 00:07:14,790
Richtig, da jede davon eine Ziffer ist.

115
00:07:15,210 --> 00:07:20,640
Dies bedeutet, dass dies tatsächlich in diese Konvertierung einer Ganzzahl übernommen werden kann.

116
00:07:20,670 --> 00:07:23,220
Ich kann also einen ganzzahligen Wert sagen.

117
00:07:23,490 --> 00:07:26,280
Ich führe dies aus und erhalte die Ganzzahl 100 zurück.

118
00:07:26,940 --> 00:07:27,240
Perfekt.

119
00:07:27,270 --> 00:07:28,500
Genau das will ich hier.

120
00:07:28,800 --> 00:07:32,010
Da suchen wir grundsätzlich eine ganze Ganzzahl.

121
00:07:32,700 --> 00:07:39,030
Was ich also tun muss, ist im Grunde eine Überprüfung, um sicherzustellen, dass diese Auswahl eine Ziffer ist.

122
00:07:39,660 --> 00:07:44,550
Wie können wir dies tun, um im Grunde immer wieder die Frage nach der Eingabe zu stellen?

123
00:07:45,530 --> 00:07:48,080
Nun, wir müssen zuerst damit beginnen.

124
00:07:49,370 --> 00:07:50,840
Ein Standardauswahlwert.

125
00:07:51,350 --> 00:07:56,180
Ich werde also sagen, dass mein ursprünglicher Auswahlwert keine Ganzzahl ist.

126
00:07:56,720 --> 00:07:58,850
Beginnen wir also einfach mit falsch.

127
00:07:59,180 --> 00:08:04,040
Und technisch gesehen kann dies alles sein, jede Zeichenfolge, die Sie wollen, jede Variable, die Sie

128
00:08:04,040 --> 00:08:06,170
wollen, solange es nicht wahr bleibt.

129
00:08:06,170 --> 00:08:07,010
Vier ist Ziffer.

130
00:08:07,550 --> 00:08:10,340
Das falsche Wort ist also offensichtlich keine Ziffer.

131
00:08:10,460 --> 00:08:12,080
Wir beginnen also mit der falschen Wahl.

132
00:08:12,560 --> 00:08:15,440
Und dann werde ich hier eine Weile Schleife ein wenig Logik hinzufügen.

133
00:08:15,620 --> 00:08:20,060
Denken Sie daran, dass eine while-Schleife grundsätzlich so lange fortgesetzt wird, bis eine Bedingung erfüllt ist.

134
00:08:20,420 --> 00:08:21,800
Also werde ich sagen, während.

135
00:08:23,190 --> 00:08:25,380
Auswahlpunkt ist Ziffer.

136
00:08:28,910 --> 00:08:31,570
Ist gleichbedeutend mit falscher Bedeutung.

137
00:08:32,060 --> 00:08:34,430
Derzeit ist unsere Wahl keine Ziffer.

138
00:08:34,790 --> 00:08:38,570
Während die Auswahl kein Ziffernrückruf ist, beginnen wir damit, dass die Auswahl keine Ziffer ist.

139
00:08:39,070 --> 00:08:45,530
Dann werde ich weiter nach dieser Eingabe fragen, was bedeutet, dass ich diese Zeile einrücken muss, damit

140
00:08:45,530 --> 00:08:47,780
sie Teil dieser while-Schleife ist.

141
00:08:48,320 --> 00:08:50,300
Und hier sind wir hier im Grunde genommen ein bisschen schlau.

142
00:08:50,440 --> 00:08:55,670
Was wir sagen ist, dass wir mit dieser Zeichenfolge beginnen und da es zunächst keine Ziffer ist,

143
00:08:55,670 --> 00:09:01,280
werden wir den Benutzer in dieser while-Schleife immer wieder um Eingabe bitten, bis wir schließlich die Ziffer erhalten,

144
00:09:01,370 --> 00:09:02,750
die wahr ist .

145
00:09:03,350 --> 00:09:08,660
Und da Loop so lange ausgeführt wird, bis wir eine Ziffer haben, muss ich mich nicht mehr

146
00:09:08,900 --> 00:09:14,030
um diese Konvertierung kümmern, sodass ich einen Wertefehler für etwas bekomme, das keine Ziffer ist, weil Loop

147
00:09:14,030 --> 00:09:15,290
sich darum kümmert.

148
00:09:15,560 --> 00:09:17,090
Damit ist Ziffernruf.

149
00:09:17,930 --> 00:09:20,800
Lassen Sie uns also fortfahren und diese Zellen unten löschen.

150
00:09:22,060 --> 00:09:23,770
Wir werden die gute Benutzerauswahl lesen.

151
00:09:25,900 --> 00:09:27,320
Und mal sehen, wie es jetzt läuft.

152
00:09:28,360 --> 00:09:30,730
Geben Sie also eine Zahl zwischen Null und 10 ein.

153
00:09:31,070 --> 00:09:38,320
Lassen Sie uns fortfahren und etwas weitergeben, wie zu schlagen, einzutreten und zu bemerken, weil die Zeichenfolge zwei keine Ziffer ist.

154
00:09:38,380 --> 00:09:40,480
Das heißt, die Ziffer ist gleich falsch.

155
00:09:40,810 --> 00:09:44,400
Wir haben den Benutzer einfach noch einmal gefragt, hey, bitte geben Sie eine Zahl zwischen Null und 10 ein.

156
00:09:44,920 --> 00:09:46,990
Und ich kann hier eingeben, was ich will.

157
00:09:47,260 --> 00:09:55,060
Aber bis ich diese tatsächliche Ziffer wie drei eingebe, läuft sie weiter und fragt erneut.

158
00:09:55,420 --> 00:10:01,720
Dies ist also eine sehr gute Möglichkeit, um sicherzustellen, dass Ihr Benutzer etwas eingibt, das Sie erwarten.

159
00:10:02,140 --> 00:10:07,210
Und wie Sie sich vorstellen können, können wir im Grunde weiterhin Bedingungen für diese while-Schleife mit und /

160
00:10:07,210 --> 00:10:08,140
oder Oracle hinzufügen.

161
00:10:09,840 --> 00:10:15,060
Darüber hinaus können wir eine Fehlermeldung hinzufügen, damit der Benutzer weiß, was passiert ist.

162
00:10:15,450 --> 00:10:20,290
Nachdem wir diese Wahl getroffen haben, lassen Sie uns zum Beispiel noch einen kleinen Scheck machen.

163
00:10:20,310 --> 00:10:22,980
Wir werden sagen, ob die Wahl eine Ziffer ist.

164
00:10:24,190 --> 00:10:25,390
Ist gleich falsch.

165
00:10:25,780 --> 00:10:29,320
Dann drucke ich einfach eine kleine Fehlermeldung für den Benutzer aus, der sich entschuldigt.

166
00:10:29,350 --> 00:10:30,700
Das ist keine Ziffer.

167
00:10:32,220 --> 00:10:33,360
Also führen wir das noch einmal aus.

168
00:10:34,200 --> 00:10:40,920
Beachten Sie, dass sich diese if-Anweisung innerhalb der while-Schleife befindet und mit dieser Auswahl übereinstimmt. Nachdem der Benutzer eine

169
00:10:41,220 --> 00:10:45,120
Auswahl getroffen hat, überprüfen wir kurz, ob sie falsch ist.

170
00:10:45,510 --> 00:10:49,980
Und wenn ja, werden wir fortfahren und den Benutzer warnen, dass, hey, sorry, was Sie eingegeben haben, keine Ziffer

171
00:10:49,980 --> 00:10:50,370
war.

172
00:10:50,880 --> 00:10:52,140
Die Logik ist also im Wesentlichen dieselbe.

173
00:10:52,170 --> 00:10:55,890
Aber wir haben diese kleine Nachricht nur für den Benutzer hinzugefügt.

174
00:10:56,670 --> 00:11:03,750
Also sagen wir "User Choice Passan" und es heißt "Hey, sorry, das ist keine Ziffer und wir können dies immer

175
00:11:03,750 --> 00:11:05,360
und immer wieder tun."

176
00:11:05,370 --> 00:11:09,630
Es wird sich immer wieder entschuldigen, das ist keine Ziffer, bis wir etwas haben, das eine Ziffer ist.

177
00:11:11,610 --> 00:11:16,350
Und jetzt möchte ich Ihnen als letztes zeigen, dass Sie zum Abschluss dieser Vorlesung mehrere mögliche Werte

178
00:11:16,350 --> 00:11:16,920
überprüfen.

179
00:11:17,350 --> 00:11:20,850
Denken Sie also daran, wir hatten dieses Problem mit diesem Null-Strich 10.

180
00:11:21,300 --> 00:11:25,110
Grundsätzlich möchte ich sicherstellen, dass die Anzahl innerhalb eines bestimmten Bereichs liegt.

181
00:11:25,530 --> 00:11:27,510
Und es gibt viele verschiedene Möglichkeiten, wie Sie dies tun können.

182
00:11:27,810 --> 00:11:32,760
Am wahrscheinlichsten ist es jedoch, eine Liste akzeptabler Werte zu überprüfen.

183
00:11:33,210 --> 00:11:41,220
Angenommen, mein Ergebnis ist nur der falsche Wert für die Zeichenfolge, und ich werde eine Liste akzeptabler Werte

184
00:11:41,220 --> 00:11:41,700
erstellen.

185
00:11:42,180 --> 00:11:49,590
Also akzeptable Werte und sagen wir, meine akzeptablen Werte sind Null, Eins und Zwei, dann kann ich den In-Operator verwenden. Rückruf

186
00:11:49,680 --> 00:11:55,340
Der In-Operator wurde besprochen und nützliche Operatoren vortragen und es wird grundsätzlich geprüft, ob sich etwas

187
00:11:55,340 --> 00:12:00,180
in einer Zeichenfolge, einer Liste oder einer anderen Art befindet des iterierbaren Objekts.

188
00:12:00,600 --> 00:12:05,100
Ich kann also sagen, dass mein Ergebnis in akzeptablen Werten liegt.

189
00:12:06,120 --> 00:12:07,500
Ich führe das aus und es steht falsch.

190
00:12:07,710 --> 00:12:10,560
Dieser falsche Wert für die Zeichenfolge befindet sich nicht in dieser Liste.

191
00:12:11,190 --> 00:12:13,140
Ich kann auch nicht einchecken.

192
00:12:13,760 --> 00:12:18,090
Das Sprichwort ist also mein Ergebnis nicht in akzeptablen Werten.

193
00:12:18,990 --> 00:12:19,370
Führen Sie das aus.

194
00:12:19,410 --> 00:12:24,500
Und das ist wahr, weil der falsche Wert hier nicht innerhalb von Null eins N2 liegt.

195
00:12:25,170 --> 00:12:30,150
Das bedeutet, dass Sie diese Art von Bedingung hinzufügen können, um sicherzustellen, dass das Ergebnis ein akzeptabler

196
00:12:30,630 --> 00:12:37,050
Wert ist, zusammen mit der Bedingung, dass es sich um eine Ziffer handelt, oder dass Sie später mehrere Überprüfungen durchführen können, um weiter

197
00:12:37,380 --> 00:12:40,110
zu fragen, falls der Benutzer das Falsche eingibt Wert.

198
00:12:40,590 --> 00:12:45,960
Um dies zu erreichen, werden wir ein etwas höheres Maß an Komplexität erreichen als zuvor.

199
00:12:46,350 --> 00:12:48,780
Aber wenn Sie der Logik folgen, ist es eigentlich nicht schlecht.

200
00:12:49,150 --> 00:12:55,110
Was ich tun werde, ist hier nach oben zu scrollen und diese Benutzerauswahlfunktion erneut zu nutzen.

201
00:12:56,750 --> 00:12:58,010
Und dann hier unten einfügen.

202
00:12:58,640 --> 00:13:03,710
Und was ich tun muss, ist, dies zu kommentieren, nur damit wir nicht verfolgen können, wo die Logik fließt.

203
00:13:04,190 --> 00:13:06,290
Zunächst einmal gibt es ein paar Variablen, die wir brauchen.

204
00:13:07,160 --> 00:13:08,780
Eine ist die erste Wahl.

205
00:13:08,870 --> 00:13:11,360
Wir haben hier also einige Anfangswerte.

206
00:13:12,630 --> 00:13:17,220
Und eine ist für die Wahl, die keine Ziffer sein kann, um sicherzustellen, dass diese Schleife läuft.

207
00:13:17,640 --> 00:13:21,720
Die andere, die ich sicherstellen möchte, ist, ob wir eine akzeptable Reichweite haben.

208
00:13:22,230 --> 00:13:23,710
Lassen Sie uns das hier sagen.

209
00:13:23,820 --> 00:13:24,960
Akzeptable Reichweite.

210
00:13:25,740 --> 00:13:32,040
Und Sie können dies entweder manuell tun, so etwas wie 012, oder Sie können so etwas wie Range verwenden.

211
00:13:32,910 --> 00:13:34,690
Und da unsere Bereiche null bis 10 sind.

212
00:13:34,800 --> 00:13:36,620
Lassen Sie uns fortfahren und Null Komma 10 sagen.

213
00:13:37,260 --> 00:13:40,800
Wenn Sie mit der Bereichsfunktion nicht vertraut sind, lesen Sie die nützlichen Operatoren.

214
00:13:41,040 --> 00:13:46,110
Grundsätzlich macht es nur eine Iterierbarkeit, die die Zahlen Null bis 10 mit einer Standardschrittgröße von einer ganzen

215
00:13:46,200 --> 00:13:46,980
Zahl hat.

216
00:13:47,760 --> 00:13:54,270
Und schließlich müssen wir genau wie die Wahl haben, ein Verständnis dafür, ob wir in Reichweite sind oder nicht.

217
00:13:54,780 --> 00:13:59,850
Also werde ich sagen, dass in Reichweite gleich falsch ist.

218
00:14:00,850 --> 00:14:07,150
OK, der nächste Schritt besteht darin, tatsächlich die Bedingungen zu haben, auf die wir prüfen, und in diesem Fall

219
00:14:07,150 --> 00:14:09,220
müssen zwei Bedingungen überprüft werden.

220
00:14:09,820 --> 00:14:16,210
Ich möchte sicherstellen, dass ich in dieser while-Schleife immer wieder frage, wenn ich eine Ziffer wähle.

221
00:14:16,360 --> 00:14:18,190
Also muss ich die Ziffer überprüfen.

222
00:14:19,790 --> 00:14:24,050
Oder ich frage immer wieder, ob ich in Reichweite bin.

223
00:14:26,040 --> 00:14:26,640
Ist falsch.

224
00:14:28,600 --> 00:14:32,140
Also im Grunde, während die Wahl keine Ziffer ist.

225
00:14:33,720 --> 00:14:36,960
Oder wenn ich nicht in Reichweite bin, also in Reichweite.

226
00:14:38,280 --> 00:14:39,360
Gleich falsch.

227
00:14:39,990 --> 00:14:46,650
Dann werde ich nach dieser Eingabe fragen, und wenn ich zufällig eine Ziffer bin, die falsch ist, tut mir leid, das ist

228
00:14:46,650 --> 00:14:47,340
keine Ziffer.

229
00:14:47,970 --> 00:14:52,290
Und jetzt ist es Zeit, diesen Parameter innerhalb des Bereichs zu verwenden, um ihn auf zu aktualisieren.

230
00:14:52,290 --> 00:14:52,800
Wahr.

231
00:14:52,920 --> 00:14:54,810
Für den Fall, dass ich in Reichweite bin.

232
00:14:55,290 --> 00:14:56,910
Das ist also unser.

233
00:14:58,440 --> 00:14:59,310
Ziffernprüfung.

234
00:15:00,630 --> 00:15:03,930
Und jetzt fügen wir einen Bereich hinzu.

235
00:15:03,960 --> 00:15:04,410
Prüfen.

236
00:15:05,870 --> 00:15:06,770
Wie machen wir das?

237
00:15:06,860 --> 00:15:11,510
Zuerst bestätigen wir, dass wir tatsächlich zuerst eine Ziffer haben. Wenn nicht, schleifen wir einfach weiter.

238
00:15:11,540 --> 00:15:17,390
Wir gehen also davon aus, dass die Ziffer zu dem Zeitpunkt, zu dem wir den Bereich erreichen, tatsächlich wahr ist.

239
00:15:17,870 --> 00:15:20,210
Also wird niemand sagen, ob die Wahl jetzt ist.

240
00:15:22,060 --> 00:15:22,570
Ist Zigic.

241
00:15:22,650 --> 00:15:24,250
Stellen wir sicher, dass wir die Auswahl richtig buchstabieren.

242
00:15:24,700 --> 00:15:27,730
Wenn also der Auswahlstopp Ziffer ist, ist dies wahr.

243
00:15:30,230 --> 00:15:32,540
Dann überprüfen wir, ob wir in Reichweite sind.

244
00:15:33,210 --> 00:15:35,690
Also, weil jetzt Wahl ist Ziffer ist wahr.

245
00:15:35,990 --> 00:15:42,530
Ich weiß, dass ich diese Zeichenfolgenauswahl als Ganzzahl umwandeln und dann prüfen kann, ob sie innerhalb meiner

246
00:15:42,530 --> 00:15:45,620
akzeptablen Werte oder meines akzeptablen Bereichs liegt.

247
00:15:46,310 --> 00:15:52,610
Und wenn das wahr ist, dann weiß ich, dass ich in Reichweite bin, damit ich in Reichweite aktualisieren kann, um wahr zu sein.

248
00:15:53,390 --> 00:15:57,770
Und denken Sie daran, dass die Wissenschaft der doppelten Gleichheit auf Gleichheit prüft.

249
00:15:58,250 --> 00:16:00,470
Ein einzelnes Gleichheitszeichen ist eine tatsächliche Zuordnung.

250
00:16:01,940 --> 00:16:07,170
Wenn dies jedoch nicht der Fall ist, was bedeutet, dass ich mich außerhalb des akzeptablen

251
00:16:07,170 --> 00:16:12,440
Bereichs befinde, werde ich sagen, dass ich immer noch innerhalb des Bereichs bin, der gleich falsch ist.

252
00:16:13,160 --> 00:16:17,150
Denken Sie daran, dass es hier viele Überprüfungen gibt, die Sie technisch nicht durchführen müssen.

253
00:16:17,510 --> 00:16:20,330
Zum Beispiel ist die Wahl, dass die Ziffer gleich wahr ist.

254
00:16:21,050 --> 00:16:22,850
Dies ist eigentlich ein Boolescher Wert.

255
00:16:23,030 --> 00:16:27,890
Ich könnte die Dinge also vereinfachen, indem ich nur sage, ob der Auswahlpunkt eine Ziffer ist.

256
00:16:28,400 --> 00:16:33,890
Aus Gründen der Lesbarkeit werde ich jedoch viele dieser Überprüfungen durchführen und auch Dinge wie die

257
00:16:33,890 --> 00:16:36,440
Zuweisung von Informationen als falsch ausführen.

258
00:16:36,680 --> 00:16:38,540
Auch wenn technisch schon falsch ist.

259
00:16:38,840 --> 00:16:40,340
Das hätte also nur ein Pass sein können.

260
00:16:41,340 --> 00:16:45,840
Also gut, lassen Sie uns hier schnell die Logik durchgehen, die wir hinzugefügt haben. Wir haben unsere Anfangswerte.

261
00:16:45,990 --> 00:16:47,460
Die Auswahl beginnt als falsch.

262
00:16:47,790 --> 00:16:49,440
Ich habe einen akzeptablen Wertebereich.

263
00:16:49,770 --> 00:16:53,160
Und ich werde auch sagen, dass wir zu Beginn nicht in diesem Bereich sind.

264
00:16:53,640 --> 00:16:56,160
Das bedeutet, dass ich zwei Dinge überprüfen muss.

265
00:16:56,550 --> 00:16:58,860
Also beides, wenn sie falsch sind.

266
00:16:59,100 --> 00:17:04,410
Wenn also entweder die Ziffer falsch ist oder innerhalb des Bereichs falsch ist, bitte ich den Benutzer immer wieder

267
00:17:04,410 --> 00:17:05,040
um Eingabe.

268
00:17:05,580 --> 00:17:07,590
Also prüfen wir zuerst, ob es sich um eine Ziffer handelt.

269
00:17:08,100 --> 00:17:11,700
Und wir warnen sie im Grunde, hey, das ist eine Ziffer, sorry, es ist auf einer Ziffer.

270
00:17:12,150 --> 00:17:14,490
Und dann prüfen wir, ob das zufällig eine Ziffer ist.

271
00:17:14,880 --> 00:17:20,070
Sie werden sagen, ob die Ganzzahlauswahl ein akzeptabler Bereich innerhalb des Bereichs ist, der gleich true else ist.

272
00:17:20,460 --> 00:17:21,480
Lass uns weitermachen und sagen.

273
00:17:21,530 --> 00:17:23,510
Sonst in Reichweite, gleich falsch.

274
00:17:23,890 --> 00:17:24,930
Aber es wird auch gewarnt, dass dies sind.

275
00:17:24,930 --> 00:17:26,610
Hey entschuldigung.

276
00:17:26,910 --> 00:17:28,740
Du bist raus.

277
00:17:29,680 --> 00:17:32,350
Akzeptabler Bereich von null bis 10.

278
00:17:33,280 --> 00:17:38,560
Und jetzt sollten wir in der Lage sein, den Benutzer darüber zu informieren, ob es sich um eine Ziffer handelt oder ob sie außerhalb

279
00:17:38,560 --> 00:17:39,490
des akzeptablen Bereichs liegen.

280
00:17:40,030 --> 00:17:42,490
Hier gibt es also viele Zeilen und einen Code.

281
00:17:42,760 --> 00:17:44,410
Aber wirklich, nimm dir Zeit.

282
00:17:44,680 --> 00:17:47,430
Überprüfen Sie das Notizbuch und die Logik sollte für Sie sinnvoll sein.

283
00:17:47,620 --> 00:17:49,930
Im Wesentlichen nur nach zwei Dingen suchen.

284
00:17:51,440 --> 00:17:53,750
Lesen Sie dies und ich werde die Benutzerauswahl ausführen.

285
00:17:55,370 --> 00:17:57,930
Also werde ich hier ein paar falsche Eingaben machen.

286
00:17:58,260 --> 00:18:00,210
Versuchen wir zunächst, eine Ziffer einzugeben.

287
00:18:00,540 --> 00:18:01,200
Wir werden zwei sagen.

288
00:18:01,730 --> 00:18:03,090
Es sagt Entschuldigung, es ist auf einer Ziffer.

289
00:18:03,270 --> 00:18:03,690
Perfekt.

290
00:18:03,990 --> 00:18:08,220
Und Allus probiert etwas aus, das außerhalb der Reichweite liegt, wie einhundert, und das besagt, dass Sie sich außerhalb

291
00:18:08,220 --> 00:18:09,120
der Reichweite befinden.

292
00:18:09,210 --> 00:18:12,360
Versuchen wir jetzt so etwas wie fünf und wir können loslegen.

293
00:18:12,910 --> 00:18:14,010
OK super.

294
00:18:14,370 --> 00:18:20,820
Jetzt verstehen wir also, wie man prüft, ob etwas der richtige Datentyp ist und ob etwas ein

295
00:18:20,820 --> 00:18:22,140
akzeptabler Wert ist.

296
00:18:22,530 --> 00:18:27,090
Welches sind die beiden wichtigsten Dinge, die beim Erstellen eines interaktiven Python-Skripts überprüft werden.

297
00:18:27,780 --> 00:18:29,830
Als nächstes werden wir das alles zusammenbringen.

298
00:18:30,120 --> 00:18:35,250
Nur ein paar Funktionen, um Ihnen zu zeigen, wie Sie eine einfache interaktive Benutzererfahrung erstellen.

299
00:18:35,370 --> 00:18:37,920
Und danach setzen wir Sie für das Meilensteinprojekt frei.

300
00:18:38,310 --> 00:18:39,390
Wir sehen uns bei der nächsten Vorlesung.
