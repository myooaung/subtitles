1
00:00:01,040 --> 00:00:04,940
[Autogenerated] Okay, so let's look at subscribe double channels first.

2
00:00:04,940 --> 00:00:09,740
Subscribe double channels implement the event driven consumer pattern.

3
00:00:09,740 --> 00:00:14,840
They work by pushing messages to receivers, and they don't buffer messages.

4
00:00:14,840 --> 00:00:17,790
The three subscribe double channel implementations can

5
00:00:17,790 --> 00:00:20,740
be further divided into two types.

6
00:00:20,740 --> 00:00:23,720
The difference between these two types is in the way they

7
00:00:23,720 --> 00:00:26,120
dispatch messages to their subscribed message.

8
00:00:26,120 --> 00:00:27,440
Handlers.

9
00:00:27,440 --> 00:00:32,190
Direct Channel and Executed Channel are both unique casting message channels.

10
00:00:32,190 --> 00:00:36,840
While published, Subscribed Channel is a broadcasting message general,

11
00:00:36,840 --> 00:00:40,520
Just like with subscribe double channels and possible channels.

12
00:00:40,520 --> 00:00:45,170
This distinction corresponds to to enterprise integration patterns point

13
00:00:45,170 --> 00:00:48,540
to Point Channel and published Subscribed channel,

14
00:00:48,540 --> 00:00:50,740
Direct channel and Executed channel.

15
00:00:50,740 --> 00:00:53,490
Both delivered the messages that are sent to them to

16
00:00:53,490 --> 00:00:56,740
exactly one subscribed message hander.

17
00:00:56,740 --> 00:01:00,340
This is what makes them point to point Channels

18
00:01:00,340 --> 00:01:02,690
published subscribed channel broadcasts,

19
00:01:02,690 --> 00:01:05,960
messages that are sent to it to all its subscribed message

20
00:01:05,960 --> 00:01:10,140
handlers that makes it correspond to the published subscribed

21
00:01:10,140 --> 00:01:12,940
channel Enterprise integration pattern.

22
00:01:12,940 --> 00:01:16,280
Note that it is possible to subscribe multiple message

23
00:01:16,280 --> 00:01:19,280
handlers to a direct channel or executed channel.

24
00:01:19,280 --> 00:01:22,760
But when a message is sent to either off these channel types,

25
00:01:22,760 --> 00:01:26,240
it will be delivered to only one of the handlers.

26
00:01:26,240 --> 00:01:27,820
Which handler gets the message?

27
00:01:27,820 --> 00:01:30,540
Depends on how you configure the channel.

28
00:01:30,540 --> 00:01:35,240
Finally, I can explain to you what exactly a direct channel is.

29
00:01:35,240 --> 00:01:38,810
It's the simplest possible point to point channel implementation

30
00:01:38,810 --> 00:01:42,440
that's based on the event driven consumer pattern.

31
00:01:42,440 --> 00:01:46,540
The implementation off its sent method is very simple.

32
00:01:46,540 --> 00:01:50,370
The only thing it does is immediately called one of its subscribers.

33
00:01:50,370 --> 00:01:53,640
In the same threat that the scent method was called,

34
00:01:53,640 --> 00:01:57,310
Run the first version of the demo application again make a

35
00:01:57,310 --> 00:02:00,940
registration and pay attention to the logging.

36
00:02:00,940 --> 00:02:04,340
There, you can see the direct channel in action.

37
00:02:04,340 --> 00:02:07,940
In the logging, you see that the registration service comes first,

38
00:02:07,940 --> 00:02:12,440
logging that it has received the message and saved the registration.

39
00:02:12,440 --> 00:02:13,130
After that,

40
00:02:13,130 --> 00:02:17,540
you see the registration controller log in that it has sent a message.

41
00:02:17,540 --> 00:02:21,970
It happens this way because when the controller calls sent on the channel,

42
00:02:21,970 --> 00:02:24,580
the direct channel immediately calls the service

43
00:02:24,580 --> 00:02:27,140
activator to receive the message.

44
00:02:27,140 --> 00:02:30,150
Send and receive all happen on the same threat as

45
00:02:30,150 --> 00:02:32,440
you can also see in the logging.

46
00:02:32,440 --> 00:02:36,140
When the service returns to controller gets to write its log message,

47
00:02:36,140 --> 00:02:39,700
telling you that the message was sent executed channel

48
00:02:39,700 --> 00:02:42,640
is very similar to direct channel.

49
00:02:42,640 --> 00:02:45,400
The difference is that it doesn't call one of its message

50
00:02:45,400 --> 00:02:49,890
Chandler's directly in the same threat, but that it does this by running a task.

51
00:02:49,890 --> 00:02:53,440
And an executable is executed Can, for example,

52
00:02:53,440 --> 00:02:56,450
be a threat pool that you can have multiple threats,

53
00:02:56,450 --> 00:03:01,140
handling messages concurrently and without blocking the sender's threat.

54
00:03:01,140 --> 00:03:09,000
We will get back to publish subscribe messaging later in the course, so we'll save published subscribed channel for when we get there.

