1
00:00:02,230 --> 00:00:09,730
We can also improve the error handling in the training components in new training or specifically in

2
00:00:09,730 --> 00:00:13,530
the training service where we fetch all available exercises.

3
00:00:13,630 --> 00:00:15,720
We're not handling arrows right now.

4
00:00:15,710 --> 00:00:18,190
Now it would make sense to handle errors though.

5
00:00:18,280 --> 00:00:22,100
And what do we want to do if this specific method fails.

6
00:00:22,120 --> 00:00:29,500
So if we can't fetch the actions the exercises the user wants to do well we could for example show a

7
00:00:29,500 --> 00:00:32,980
snack bar where we at least inform the user.

8
00:00:33,070 --> 00:00:39,280
So here after the first function we passed to subscribe we can pass a second function which will be

9
00:00:39,280 --> 00:00:41,490
triggered for all arrows we get.

10
00:00:41,890 --> 00:00:47,680
And here in that function I want to use the you Ice Service which we're already injecting into detraining

11
00:00:47,770 --> 00:00:59,080
service and I want to call shows a snack bar with a message where I could say fetching exercises failed.

12
00:00:59,110 --> 00:01:01,530
Please try again later.

13
00:01:03,260 --> 00:01:08,240
Where I don't have an action and wait all the show for three seconds.

14
00:01:08,240 --> 00:01:14,050
Now we have that error handler in place now to also see it in action.

15
00:01:14,210 --> 00:01:24,950
What I will do is I will simply temporarily not return my untransformed array here but instead simply

16
00:01:24,950 --> 00:01:31,110
fro a new error here in my map function.

17
00:01:31,160 --> 00:01:34,420
Now this should lead to the error method being triggered.

18
00:01:34,580 --> 00:01:36,860
So if we do log in now

19
00:01:39,750 --> 00:01:43,160
we get this error at the bottom after a short duration.

20
00:01:43,230 --> 00:01:45,980
So I'll now reword this.

21
00:01:46,260 --> 00:01:51,060
And now we will always see that spinner but we get to snack bar.

22
00:01:51,060 --> 00:01:56,370
Now let's also remove to spinner though so let's reach out to you guys service loading States changed

23
00:01:56,640 --> 00:02:03,290
and call next false because actually year I also want to remove the splinter.

24
00:02:03,570 --> 00:02:08,860
But now we'll have the problem that we will have a select dropdown with no well to select from.

25
00:02:09,060 --> 00:02:16,050
Now we could do that but maybe we instead want to show a button which allows us to trigger does fetch

26
00:02:16,110 --> 00:02:18,820
available exercise method again.

27
00:02:18,930 --> 00:02:21,520
Now how could we implement this.

28
00:02:21,540 --> 00:02:29,010
Now the good thing is we got this exercise has changed event emitter which we're using when we successfully

29
00:02:29,010 --> 00:02:39,750
fetch exercises I could also emitted event when we fail and it will simply emit null here so no exercises.

30
00:02:39,750 --> 00:02:44,630
Now we can go to new training where we subscribe to deceive and dimeter here.

31
00:02:45,370 --> 00:02:52,080
And what happens here now is if we fail we still get an event but the exercises we get will be null.

32
00:02:52,090 --> 00:02:58,950
So this exercise will be null and that allows me to handle this in my component in the component.

33
00:02:59,140 --> 00:03:05,480
We can now show a button which allows us to fetch again whenever exercises are null.

34
00:03:05,590 --> 00:03:12,670
So in here we have our math form field with the dropdown and we got that spinner and I only want to

35
00:03:12,670 --> 00:03:15,670
show these if we are loading or not loading.

36
00:03:15,730 --> 00:03:21,820
And if we get null exercises so here I want to show that for field.

37
00:03:21,910 --> 00:03:28,500
If we're not loading and if exercises and we could also add a condition to the spinner.

38
00:03:28,540 --> 00:03:31,880
But here I'm actually fine with always showing this when we're loading.

39
00:03:32,080 --> 00:03:38,830
What I would change though is I'll add a second button and the action area the first button is always

40
00:03:38,830 --> 00:03:40,220
shown right now.

41
00:03:40,240 --> 00:03:46,910
Now right now we hide this complete block whilst we're loading and that is always fine.

42
00:03:47,140 --> 00:03:51,410
But then after we're done I only want to show the start button here.

43
00:03:51,730 --> 00:03:53,270
If we got exercises.

44
00:03:53,290 --> 00:03:55,530
So if exercise is this true.

45
00:03:56,170 --> 00:04:04,300
Otherwise if we got no exercises which is my condition for the second button I want to show this second

46
00:04:04,300 --> 00:04:11,390
button where I say fetch again and this will actually be not a submit button but a normal button.

47
00:04:11,430 --> 00:04:19,720
So type button and I don't want to disable it it'll always be enabled but I will at a click Lisner where

48
00:04:19,720 --> 00:04:22,000
I want to trigger this fetch method again.

49
00:04:22,120 --> 00:04:28,840
And if we have a look at the new training component there we fetch our away label exercises right from

50
00:04:28,840 --> 00:04:30,630
within Engy on it.

51
00:04:30,640 --> 00:04:40,020
Now I will create a new method which I'll simply call fetch exercises and I'll move that code from you

52
00:04:40,040 --> 00:04:47,040
on it where we start fetching them into dead Meffert and instead call that method from inside and on

53
00:04:47,060 --> 00:04:48,120
it.

54
00:04:48,210 --> 00:04:54,560
Now we get this extra method now fecche exercises we can execute this method whenever we click this

55
00:04:54,560 --> 00:04:56,400
button this fetch again button.

56
00:04:56,720 --> 00:05:02,090
So we should execute this fetch exercise this method in this case.

57
00:05:02,100 --> 00:05:10,230
Now with that set up we can go back to our application and ensure that we get an error by going back

58
00:05:10,230 --> 00:05:20,430
to the training service and again temporarily commenting this out and throwing a new error in the map

59
00:05:20,430 --> 00:05:24,620
function of the fetch available exercise this method.

60
00:05:24,610 --> 00:05:25,840
And let's now have a look.

61
00:05:25,860 --> 00:05:32,520
Does LOTES we see a spinner and we see the error message at the bottom and fetch again button.

62
00:05:32,580 --> 00:05:36,840
And if I click as we start fetching again but of course we always fail.

63
00:05:36,910 --> 00:05:44,040
Now on the other hand if I reword this in a comment the normal return killed in then we will also see

64
00:05:44,040 --> 00:05:49,340
a spinner but we will successfully fetch it and we will not see that fetch again button.

65
00:05:49,500 --> 00:05:57,510
Instead we can start our exercise now and this is improved error handling which I believe makes this

66
00:05:57,510 --> 00:05:59,110
application better.

67
00:05:59,130 --> 00:06:05,080
It allows us to provide a better user experience handle errors and tell the user what's going on.

