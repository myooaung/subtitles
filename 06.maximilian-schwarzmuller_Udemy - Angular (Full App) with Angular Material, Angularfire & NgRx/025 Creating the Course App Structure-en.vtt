WEBVTT
1

00:00:02.320 --> 00:00:08.020

Let's start building our angular app and for that I'm going to get rid of the button and I can leave



2

00:00:08.020 --> 00:00:11.880

the the material module because we'll use them later anyways.



3

00:00:12.160 --> 00:00:14.720

And now we need a couple of components.



4

00:00:14.740 --> 00:00:18.680

Couple of sections in our app we're going to build a fitness tracker.



5

00:00:18.790 --> 00:00:23.660

Later we'll have an off indication section and the actual fitness tracker section.



6

00:00:23.830 --> 00:00:28.910

So let's build all these parts of our app for that.



7

00:00:28.990 --> 00:00:33.190

I will use the Selye to generate a couple of components.



8

00:00:33.340 --> 00:00:36.710

You can of course all the do that manually if you prefer that.



9

00:00:36.820 --> 00:00:45.310

So I will quit this energy search process for now and use energy G which stands for generate C which



10

00:00:45.310 --> 00:00:49.060

stands for a component and we don't generate a new component.



11

00:00:49.160 --> 00:00:52.370

All slash Sign-Up component.



12

00:00:52.510 --> 00:00:57.860

So hit enter and you will get an error that you've got more than one module.



13

00:00:57.860 --> 00:01:03.460

Now this simply happens because what we get more than one module and the angle or like can find out



14

00:01:03.460 --> 00:01:04.480

which one to use.



15

00:01:04.720 --> 00:01:09.720

You can fix this by adding dash dash module apt DOD module.



16

00:01:09.750 --> 00:01:16.000

Now with that it creates a new folder off and adds the sign up component with h t Melchior's as testing



17

00:01:16.000 --> 00:01:20.550

and typescript file and it adds the declaration to the app Marchal.



18

00:01:20.550 --> 00:01:23.780

Let's repeat a step but let's name the next one off.



19

00:01:23.850 --> 00:01:29.550

Slash loggin because we obviously don't just want to allow users to sign up Attles to log in and now



20

00:01:29.550 --> 00:01:37.050

we get these two components which will later work on we won't just have an off section will also have



21

00:01:37.050 --> 00:01:38.890

a section for training.



22

00:01:39.210 --> 00:01:46.320

So let's all to treat a new component maybe in our training folder and I'll actually just name it training



23

00:01:46.320 --> 00:01:46.870

for now.



24

00:01:46.880 --> 00:01:53.010

So let's hit enter and we will get this new folder or training with the training component in it in



25

00:01:53.010 --> 00:01:54.540

the training component.



26

00:01:54.540 --> 00:02:00.990

I want to differentiate between the currently running training page where we can start a new training



27

00:02:01.440 --> 00:02:04.980

and the past or previous training we had.



28

00:02:04.980 --> 00:02:11.790

So we'll try a new component in the training folder by adding a slash after training and then add the



29

00:02:11.910 --> 00:02:19.830

current training component which will then later be used to display it like a progress bar for recurrent



30

00:02:19.860 --> 00:02:21.050

training exercise.



31

00:02:21.060 --> 00:02:22.700

We're executing.



32

00:02:22.800 --> 00:02:29.490

We'll then have new training to configure a new training exercise you want to start and last but not



33

00:02:29.490 --> 00:02:31.340

least for a year for now.



34

00:02:31.620 --> 00:02:39.120

I will add the past trainings module a component excuse me of course you can all named differently if



35

00:02:39.120 --> 00:02:40.550

you want.



36

00:02:40.560 --> 00:02:41.730

That's it for now.



37

00:02:41.730 --> 00:02:43.700

Will later add more probably.



38

00:02:43.710 --> 00:02:46.600

But let's stick to D.C. for now.



39

00:02:46.740 --> 00:02:52.410

This gives us it does set up with the off the training and we can now continue working on this.



40

00:02:52.440 --> 00:02:56.040

Everything is imported into the app component for now.



41

00:02:56.040 --> 00:03:02.880

Now obviously I need routing because we either are on the Sign-Up page or on the logon page or on some



42

00:03:02.880 --> 00:03:09.990

training page so I'll add a new file here next to app module which will name app dash routing dot monohull



43

00:03:09.990 --> 00:03:11.120

dot ts.



44

00:03:11.310 --> 00:03:18.150

It's a good practice to create such a routing module to set up the application routes in this file.



45

00:03:18.180 --> 00:03:19.890

I'll export a class which I'll name.



46

00:03:19.900 --> 00:03:28.430

App routing module which doesn't have any class body but which will receive DNG module decorator.



47

00:03:28.470 --> 00:03:37.500

Now this decorator needs to be imported so let's add import to N-G module from angular core.



48

00:03:37.680 --> 00:03:43.590

This is a normal module thus far and we of course want to set up Routier so old create a new constant



49

00:03:43.590 --> 00:03:49.230

which will name routes and this will actually give type routes which is a specific type provided by



50

00:03:49.230 --> 00:03:51.180

the regular route or package.



51

00:03:51.180 --> 00:03:53.340

So let's also add import to that type.



52

00:03:53.340 --> 00:03:59.610

Now import routes from a singular router like this.



53

00:03:59.610 --> 00:04:06.360

Now we add it is type and now we can turn this into an array or assign an array to this route's constant



54

00:04:06.570 --> 00:04:09.220

because the route's type expects to get an array off.



55

00:04:09.250 --> 00:04:10.910

Well you guessed it routes.



56

00:04:11.110 --> 00:04:15.210

Now this might not be news to you so I won't spend too much time on this route.



57

00:04:15.230 --> 00:04:18.300

As a javascript object where we set up a path.



58

00:04:18.390 --> 00:04:24.260

So when we want to load a certain component and the first part will actually be the root POV.



59

00:04:24.270 --> 00:04:30.000

So just a slash without anything after our domain and we don't even have a component for this.



60

00:04:30.000 --> 00:04:36.120

So let's quickly create a new one and I will simply name this one.



61

00:04:36.120 --> 00:04:36.830

Welcome.



62

00:04:36.900 --> 00:04:44.320

So this will be some welcome screen on which I want to start with that attitude and attitude declarations



63

00:04:44.350 --> 00:04:51.450

automatically I now will add the component field here and point to the welcome component.



64

00:04:51.450 --> 00:04:56.640

Make sure you at the airport here at the top which points to the welcome that component file and import



65

00:04:56.680 --> 00:04:58.410

to component from there.



66

00:04:58.420 --> 00:04:59.760

Now that's one component.



67

00:04:59.800 --> 00:05:01.490

We need more of course.



68

00:05:01.780 --> 00:05:07.370

And here I will add a component by adding a path where I add.



69

00:05:07.390 --> 00:05:12.170

Sign up and then component Sign-Up components like this.



70

00:05:12.170 --> 00:05:17.620

Also make sure to add the import to that component pointing to the folder to sign up folder and then



71

00:05:17.620 --> 00:05:19.730

assign upload component file.



72

00:05:20.200 --> 00:05:24.260

Well and I'm going to do the same for training and for log in.



73

00:05:24.460 --> 00:05:31.630

So for the log in POV I'm going to add the log in component and I'm not going to add lazy loading for



74

00:05:31.630 --> 00:05:36.760

now I'll just set this up very straight forward so that we can quickly dive into angular material without



75

00:05:36.760 --> 00:05:39.390

too much set up before doing that.



76

00:05:39.400 --> 00:05:42.070

So the last part will be the training path.



77

00:05:42.250 --> 00:05:45.620

And there I want to load the training component.



78

00:05:45.760 --> 00:05:48.280

These are my routes now to use them.



79

00:05:48.430 --> 00:05:50.820

We need to use the router module.



80

00:05:50.860 --> 00:05:58.120

So let's add an import router module from an angle or router and we use that module now in the engine



81

00:05:58.120 --> 00:05:59.710

module decorator.



82

00:05:59.710 --> 00:06:08.200

We get the imports field and then the array we add Routier module for Route 2 sets these routes up as



83

00:06:08.200 --> 00:06:13.100

Route routes of our application and simply pass the routes IRET.



84

00:06:13.120 --> 00:06:19.480

Now as with the material module we want to make sure that we can use these routes or used as set up



85

00:06:19.660 --> 00:06:20.950

in the app module.



86

00:06:21.190 --> 00:06:27.030

So we need to export it in the app routing module simply export the router module.



87

00:06:27.040 --> 00:06:30.400

This will take this configuration into account.



88

00:06:30.400 --> 00:06:34.700

With that we can go back to the app module and it imports.



89

00:06:34.750 --> 00:06:38.470

I'm now going to add the app routing module important.



90

00:06:38.560 --> 00:06:44.360

You also need to add an import at the top pointing to the app routing module file.



91

00:06:44.590 --> 00:06:51.300

With that we got routes added to our application and we can see this by going back to the application



92

00:06:52.240 --> 00:07:01.690

well and restarting Angie's search first and then their running application then if we Lotus we seen



93

00:07:01.690 --> 00:07:02.690

nothing.



94

00:07:02.700 --> 00:07:07.680

Now the reason for it is this that we got no place to render the routes were going to.



95

00:07:07.920 --> 00:07:15.400

So in the competitive age team file which is just empty we should at the router outlet component does



96

00:07:15.410 --> 00:07:21.810

a special component or directive to be precise provided by the angler router package which we do import



97

00:07:21.870 --> 00:07:26.310

in the app routing module with the router module here.



98

00:07:26.610 --> 00:07:33.340

And this special marker here tells Eyler where to render the content of the loaded component.



99

00:07:33.480 --> 00:07:41.520

With that we now see Wildcat works here and if we go to a different you are out like Slash log in we



100

00:07:41.520 --> 00:07:43.220

see a log in works.



101

00:07:43.320 --> 00:07:47.000

So routing is working with that we get the base set up out of the way.



102

00:07:47.070 --> 00:07:52.720

Time to go back to all the material and start adding some of material components.



