WEBVTT
1

00:00:02.330 --> 00:00:04.530

Ns olhamos diretivas e assim por diante.



2

00:00:04.700 --> 00:00:08.110

Mas muitas vezes seus componentes tambm precisam se comunicar uns com os outros.



3

00:00:08.120 --> 00:00:14.590

Por exemplo, aqui obtemos um componente do produto e ainda emitimos o produto individual neste div. Por que no usamos nosso componente que poderia encapsular a lgica de um nico produto?



4

00:00:14.690 --> 00:00:20.350

Digamos que um produto seja mais do que apenas um div pode ter um boto em estilos



5

00:00:20.540 --> 00:00:25.370

especiais que voc queira colocar em seu prprio componente, para que voc tenha pequenas



6

00:00:25.370 --> 00:00:30.890

peas gerenciveis no seu aplicativo e voc realmente compor seu aplicativo com essas peas reutilizveis .



7

00:00:30.890 --> 00:00:34.200

Ento, vamos pegar o ano da Morte e vamos ao modelo do componente do produto e inseri-lo aqui.



8

00:00:34.490 --> 00:00:39.940

Agora vou remover o loop embora.



9

00:00:40.190 --> 00:00:41.990

Eu quero editar aqui e depois sentar aqui.



10

00:00:42.050 --> 00:00:44.220

Eu s quero dar sada ao nome do produto.



11

00:00:44.240 --> 00:00:46.300

Vamos dizer que  um produto simples, claro que tambm podemos adicionar um pargrafo onde dizemos um produto incrvel.



12

00:00:46.300 --> 00:00:54.570

Ns tambm podemos adicionar algum estilo aqui.



13

00:00:54.770 --> 00:00:57.080

E para o pai envolveu todo o



14

00:00:59.070 --> 00:01:02.850

produto em um elemento de artigo, vamos dizer Agora podemos colocar esse



15

00:01:08.580 --> 00:01:15.390

cdigo nesse artigo e aqui podemos atribuir uma classe de produto que agora vai para o CSA como outono e adicionar a



16

00:01:15.390 --> 00:01:22.380

classe de produto aqui e agora aqui ser aplicado somente aos elementos nos modelos de componentes que possuem a classe de produto.



17

00:01:22.380 --> 00:01:27.210

Nenhum elemento Obert em qualquer lugar da pgina.



18

00:01:27.270 --> 00:01:29.410

E podemos dar uma borda de um



19

00:01:29.550 --> 00:01:36.570

pixel de preenchimento preto slido de 10 pixels, talvez adicionar uma margem de 10 pixels que no ser super bonita, mas  algo para comear.



20

00:01:36.570 --> 00:01:41.360

Agora, temos o nome do produto aqui e o problema ser que, nesse componente,



21

00:01:41.370 --> 00:01:46.860

podemos,  claro, adicionar o nome do produto, mas os dados para ele precisam vir de fora.



22

00:01:46.890 --> 00:01:52.250

Certo.



23

00:01:52.260 --> 00:01:52.590

Tem que vir do nosso componente de produtos.



24

00:01:52.590 --> 00:01:56.370

Sabemos que esta ser uma string e no podemos



25

00:01:56.460 --> 00:02:01.440

encontrar um empate adicionando dois pontos e, em seguida, um tipo que ser.



26

00:02:01.440 --> 00:02:01.840

Esse  um recurso de texto datilografado.



27

00:02:01.860 --> 00:02:03.290

Mas agora precisamos



28

00:02:03.630 --> 00:02:10.740

fazer essa tabela de ligao de fora, assim como ligamos a propriedade do boto com colchetes.



29

00:02:10.800 --> 00:02:12.680

Agora eu quero vincular a minha



30

00:02:12.690 --> 00:02:19.720

prpria propriedade personalizada aqui ao nome do produto e o suporte do pescador com um decorador de nmeros que podemos adicionar a uma propriedade.



31

00:02:19.720 --> 00:02:27.830

O decorador de entrada que adicionamos na entrada e nos parnteses no esquece DS na frente da propriedade que deveria ser saturvel de fora com o pai acrescentou.



32

00:02:27.840 --> 00:02:35.540

Podemos ir ao nosso componente de produtos e dizer sim, queremos



33

00:02:35.700 --> 00:02:42.360

produzir alguns componentes de produtos da Apple aqui como este.



34

00:02:42.360 --> 00:02:43.830

Ns ainda usamos



35

00:02:43.950 --> 00:02:51.360

energia para este componente personalizado aqui com produto de produtos o mesmo cdigo que tnhamos antes.



36

00:02:51.360 --> 00:02:52.210

Mas queremos passar esse produto em cada iterao para esse componente.



37

00:02:52.560 --> 00:02:58.360

E j que adicionamos a importao aqui, agora podemos vincular ao nome do produto com a sintaxe de colchetes.



38

00:02:58.490 --> 00:03:07.610

Podemos nos vincular ao nome do produto como este e compartilhar o produto de nossa matriz.



39

00:03:07.620 --> 00:03:12.650

Este com este componente e pass-lo para a propriedade do nome do produto do nosso componente.



40

00:03:12.660 --> 00:03:19.930

E esse  um padro que voc v muito, pois permite que voc adicione comunicao



41

00:03:20.250 --> 00:03:25.950

de componente cruzado ao seu aplicativo e, se salv-lo, vemos esses produtos



42

00:03:25.950 --> 00:03:34.410

como criados pelo nosso componente de produto e realmente usamos o DS para produzir os componentes adicionados .



43

00:03:34.410 --> 00:03:38.170

Ento, essa  uma propriedade customizada, um recurso super



44

00:03:38.460 --> 00:03:45.060

til que voc precisa de muitos aplicativos angulares e que tambm usar muito material angular nos bastidores.



45

00:03:45.150 --> 00:03:49.460

Agora, s vezes, voc tambm precisa ouvir eventos



46

00:03:49.470 --> 00:03:54.630

de seus componentes, ento voc quer fazer o contrrio.



47

00:03:54.630 --> 00:03:55.650

Digamos que



48

00:03:55.650 --> 00:04:03.600

no componente do produto, se clicarmos neste componente, queremos mudar algo no componente de produtos.



49

00:04:03.600 --> 00:04:04.940

Ento, no componente pai.



50

00:04:05.010 --> 00:04:06.480

Ento aqui eu vou dizer no clique e agora no componente do produto eu posso adicionar meu mtodo no clicado.



51

00:04:06.720 --> 00:04:13.890

Mas agora, como eu disse, quero fazer algo no componente de produtos, de modo que o componente em



52

00:04:13.890 --> 00:04:19.710

que inclumos o componente de produto que podemos fazer seja emitindo um evento personalizado.



53

00:04:19.710 --> 00:04:23.730

E para isso precisamos de duas coisas.



54

00:04:23.730 --> 00:04:25.800

O emissor de evento e objeto de nmero



55

00:04:25.860 --> 00:04:32.490

fornecidos pela Engler, que faz o que o nome implica, podemos emitir nossos prprios eventos personalizados com ele e sada e decorador de nmeros.



56

00:04:32.520 --> 00:04:38.310

Em seguida, adicionamos uma propriedade cujo sobrenome exibir o nome do



57

00:04:38.310 --> 00:04:46.680

evento, como produto clicado, talvez que ser inicializado com um novo valor usando a nova palavra-chave.



58

00:04:46.680 --> 00:04:50.510

Uma nova instncia do objeto emissor de evento.



59

00:04:50.670 --> 00:04:54.080

Isto d como um produto objeto clicado



60

00:04:54.420 --> 00:05:01.410

onde podemos emitir eventos quando queremos ser capazes de ouvir isso de fora.



61

00:05:01.410 --> 00:05:02.600

Ns agora adicionamos um decorador que est na sada.



62

00:05:02.610 --> 00:05:05.660

Assim, quando a entrada foi usada para receber dados



63

00:05:06.000 --> 00:05:13.290

do lado externo, a sada  usada para transmitir dados para o exterior para passar nosso evento personalizado para o exterior.



64

00:05:13.320 --> 00:05:16.390

Para ser preciso e ao clicar, podemos emitir um evento chamando esse produto e clicamos desse jeito.



65

00:05:16.410 --> 00:05:26.260

Agora tudo o que precisamos fazer  ouvir esse evento no componente de produtos.



66

00:05:26.480 --> 00:05:30.740

Ento, aqui no produto de aplicativo, podemos adicionar um ouvinte ao produto clicado.



67

00:05:30.920 --> 00:05:36.740

Ento, para esse nome, encontramos e os componentes do produto para a propriedade aqui.



68

00:05:36.890 --> 00:05:41.230

E ento podemos executar qualquer cdigo que quisermos e o componente de produtos.



69

00:05:42.460 --> 00:05:46.270

Ento, aqui entre as aspas poderamos dizer em remover o produto e passar o produto.



70

00:05:46.270 --> 00:05:54.200

Ento, nesta primavera, temos dessa iterao aqui para essa funo.



71

00:05:54.220 --> 00:05:59.380

Agora s precisamos criar essa funo no componente de produtos como este.



72

00:05:59.380 --> 00:06:04.620

E sabemos que obtemos o nome do produto aqui que  do



73

00:06:04.800 --> 00:06:11.050

tipo As definies do tipo String so sempre opcionais, mas  uma boa prtica encontr-las.



74

00:06:11.080 --> 00:06:12.790

Se no for infervel Ento, se o



75

00:06:12.790 --> 00:06:19.030

typescript no pode ver qual tipo vai ser um desperdcio como aqui, onde  usado em um bilho e agora voc est em remover o



76

00:06:19.030 --> 00:06:25.270

produto, poderamos chegar a produtos chamados de funo de filtro que obtm um funcionar como um argumento que ser executado em cada elemento da matriz.



77

00:06:25.270 --> 00:06:31.500

E, em seguida, para cada produto, podemos dizer apenas mant-lo se o produto no for igual ao nome do produto.



78

00:06:31.810 --> 00:06:39.520

Se for igual, queremos descart-lo, o que realmente nos dar uma nova matriz, ento



79

00:06:39.520 --> 00:06:45.100

devemos definir esses produtos como iguais a essa nova matriz.



80

00:06:45.100 --> 00:06:51.970

Esses produtos com isso, se voltarmos, podemos clicar nos produtos para remov-los.



81

00:06:51.970 --> 00:06:52.660

Ento, agora



82

00:06:52.690 --> 00:06:59.920

tambm podemos admitir nossos prprios eventos personalizados nesse componente do produto e ele acabou de remover todos os livros porque eles se sentem pelo nome.



83

00:07:00.010 --> 00:07:01.650

Ento, se todos tiverem o mesmo nome, todos sero removidos.



84

00:07:01.660 --> 00:07:04.740

Essa  uma propriedade customizada e uma ligao de evento.



85

00:07:04.770 --> 00:07:07.270

Como eu disse, um padro comum para comunicao entre componentes.



86

00:07:07.330 --> 00:07:11.200

&nbsp;



