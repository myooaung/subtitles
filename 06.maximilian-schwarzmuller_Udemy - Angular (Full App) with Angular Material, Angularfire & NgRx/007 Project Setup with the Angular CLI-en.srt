1
00:00:02,400 --> 00:00:09,700
Let's start building a demo angler app and for dead we need the angular C-L I the command line interface.

2
00:00:09,720 --> 00:00:16,890
This is a tool that creates new angler projects for us and we need it because angular project is more

3
00:00:16,890 --> 00:00:23,400
than just the age HTML page and ascript fall because we use strip and because a lot of optimisation

4
00:00:23,400 --> 00:00:28,560
needs to go into such app as well as the fact that we need development server to test it.

5
00:00:28,680 --> 00:00:34,890
We need a more complex set up with a more complex build workflow that uses third party packages for

6
00:00:34,920 --> 00:00:42,190
all these optimizations and build steps and Selye gives us such a workflow out of the box on CLID I

7
00:00:42,190 --> 00:00:49,590
thought angular dot I O U C DS insulations steps which you need to execute to get started with the Seelye

8
00:00:49,620 --> 00:00:53,030
and create a new project for it to work.

9
00:00:53,040 --> 00:01:00,910
You need NPM which is notes package manager so you should also install note J.S. from note JSE dot org.

10
00:01:01,110 --> 00:01:04,770
Choose the latest words there or if you're facing issues with that.

11
00:01:04,860 --> 00:01:12,420
The long term stability Worthen on the left now note is not only required because of its package manager

12
00:01:12,420 --> 00:01:18,360
which it automatically installs which we used to manage to seal it and then alter the project dependencies

13
00:01:18,780 --> 00:01:23,760
but we also need she asked for the development server which has managed by the Seelye and which we can

14
00:01:23,760 --> 00:01:24,990
spin up with it.

15
00:01:25,020 --> 00:01:30,780
This development server is required because just double clicking the nix HDMI file won't do the trick

16
00:01:31,110 --> 00:01:36,540
because double clicking the file won't actually use HTP to surf the page and therefore some features

17
00:01:36,570 --> 00:01:37,970
just won't work.

18
00:01:38,060 --> 00:01:43,260
Hence you want to have a real testing environment to see the app as it will run on a real web server

19
00:01:43,410 --> 00:01:45,260
and for that we need a real web server.

20
00:01:45,270 --> 00:01:47,230
We don't have to code it on our own though.

21
00:01:47,300 --> 00:01:50,790
The Selye has one but it needs node j s to run it.

22
00:01:51,000 --> 00:01:54,820
So if they're all out of the way let's install the Seelye for dead.

23
00:01:54,840 --> 00:02:01,170
You should navigate into your terminal or a command prompt tool on your operating system and then with

24
00:02:01,170 --> 00:02:08,420
node j s and stold run NPM install dashi at angular Seelye.

25
00:02:08,760 --> 00:02:14,250
Now on Mac and Linux you might need to add a pseudo in front of that to get the right permissions with

26
00:02:14,250 --> 00:02:17,680
that command you download and install the latest Seelye word.

27
00:02:17,850 --> 00:02:22,980
And this could take a couple of seconds and minutes and once it's done you can use a different set of

28
00:02:22,980 --> 00:02:25,700
commands to create a single or apps.

29
00:02:25,890 --> 00:02:29,300
And also to run this development server and so on.

30
00:02:29,310 --> 00:02:35,400
Now the seal I will already say that offers more features than just project creation and DiVall open

31
00:02:35,400 --> 00:02:36,810
server running.

32
00:02:37,050 --> 00:02:42,390
You can also create these angler components into which will dive with it and you should really check

33
00:02:42,390 --> 00:02:46,210
out seal either angular dot IO to learn more about it.

34
00:02:46,560 --> 00:02:50,310
So now the installation finished let's create our first project then.

35
00:02:50,610 --> 00:02:54,200
For that I never get it into the folder where I want to create the project.

36
00:02:54,210 --> 00:02:59,420
I did this here in the terminal with the cd command and now we can run engine you.

37
00:02:59,490 --> 00:03:05,340
My first angular project or whichever name you want to choose DNG command is available.

38
00:03:05,340 --> 00:03:07,680
Since we installed DCL I-and the last step.

39
00:03:07,920 --> 00:03:13,380
Now it will create a project folder with a bunch of configuration files and a very simple app to start

40
00:03:13,380 --> 00:03:14,000
with.

41
00:03:14,370 --> 00:03:17,380
And there's also no installs all the dependencies.

42
00:03:17,400 --> 00:03:24,330
So all the built dependencies as well as dangler package itself it can take a couple of seconds or minutes

43
00:03:24,510 --> 00:03:28,930
and I'll be back once it's finished once installation finished.

44
00:03:28,940 --> 00:03:35,030
You should open the folder it created with your favorite web development ID or editor that could be

45
00:03:35,030 --> 00:03:35,820
sublime.

46
00:03:35,870 --> 00:03:43,660
Adam web storm or Visual Studio code of free ID which I will also use in this course here is the project.

47
00:03:43,860 --> 00:03:48,360
Does the folder structure you'll have after creating a new angle or project.

48
00:03:48,380 --> 00:03:51,170
We've got a bunch of conflict files on the root level here.

49
00:03:51,230 --> 00:03:56,960
You don't really need to work with these and in the source folder you will find your angular app to

50
00:03:56,960 --> 00:03:59,400
be precise in the app folder there.

51
00:03:59,570 --> 00:04:02,740
This is where you find this strange component false.

52
00:04:02,840 --> 00:04:05,890
And as I said components are a core part of angular.

53
00:04:05,960 --> 00:04:08,620
So we will work with DS Deandra files.

54
00:04:08,630 --> 00:04:12,560
Also don't have to be touched as often though in the next lecture.

55
00:04:12,560 --> 00:04:17,810
I'll quickly walk you through how an angler app actually works and starts and then will dive into the

56
00:04:17,810 --> 00:04:21,500
individual core features that you gotta know when working with angular.

