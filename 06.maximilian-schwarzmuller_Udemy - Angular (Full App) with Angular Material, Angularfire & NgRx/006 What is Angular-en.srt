1
00:00:02,730 --> 00:00:06,630
So what is angular angular is a javascript framework.

2
00:00:06,630 --> 00:00:09,170
You build javascript client side.

3
00:00:09,210 --> 00:00:15,750
So in the browser apps with it to be precise it uses typescript a javascript superset.

4
00:00:15,840 --> 00:00:17,820
So the language we use is typescript.

5
00:00:17,820 --> 00:00:20,280
It's it's a language very close to javascript.

6
00:00:20,280 --> 00:00:26,100
A lot of the syntax is the same but it offers some extra features and in some cases the features look

7
00:00:26,100 --> 00:00:28,230
similar but very in details.

8
00:00:28,350 --> 00:00:33,060
We have things like classes properties decorator's interfaces.

9
00:00:33,270 --> 00:00:38,580
These are all terms you don't need to know you will see them in this course but that is essentially

10
00:00:38,580 --> 00:00:40,480
the language we use.

11
00:00:40,800 --> 00:00:45,730
Now as I said we use angular this framework to build client side.

12
00:00:45,820 --> 00:00:53,580
So browser side web apps running in the browser obviously served by a server initially but they're after

13
00:00:53,580 --> 00:00:59,310
running fully in the browser does this a huge advantage that we can create so-called single page applications

14
00:00:59,550 --> 00:01:04,860
where we only download one page from the server and thereafter everything is handled in the browser.

15
00:01:05,040 --> 00:01:07,880
This feels and looks a lot like native mobile apps.

16
00:01:07,920 --> 00:01:13,350
Things happen very fast because we don't need to wait for some of our responses or if we occasionally

17
00:01:13,350 --> 00:01:14,510
do we need to wait.

18
00:01:14,520 --> 00:01:20,250
We at least wait for a new page but we can show a spinner on the existing page while status fetched

19
00:01:20,250 --> 00:01:21,160
in the background.

20
00:01:21,210 --> 00:01:22,920
You will see this in this course.

21
00:01:23,070 --> 00:01:26,710
This native mobile app like user experience is of course very pleasant.

22
00:01:26,730 --> 00:01:32,430
We all laughed at and that is why we use frameworks like angular angular awls is a framework that's

23
00:01:32,430 --> 00:01:35,570
highly scalable and offers a great performance.

24
00:01:35,640 --> 00:01:42,090
That is why it's very popular and allows you to build big and very big apps and it's continuously developed

25
00:01:42,120 --> 00:01:43,520
and supported by Google.

26
00:01:43,530 --> 00:01:45,490
That's the company behind angular.

27
00:01:45,600 --> 00:01:49,640
So we can expect for it to all be alive in two years from now.

28
00:01:49,980 --> 00:01:51,410
Now did we know angular.

29
00:01:51,450 --> 00:01:53,600
What are its core concepts.

30
00:01:54,030 --> 00:01:58,770
The core concepts are components and of course that we have a single page.

31
00:01:59,100 --> 00:02:05,770
So we only get one page from the server engaged him a file and a bunch of javascript files and there

32
00:02:05,770 --> 00:02:08,860
after the entire page and what's on it will be managed.

33
00:02:08,860 --> 00:02:13,470
Why are javascript which we of course can use to dynamically create and remove elements.

34
00:02:13,590 --> 00:02:16,170
We don't write code for that on our own though.

35
00:02:16,260 --> 00:02:21,300
Instead we instruct angler to do so by building so-called components.

36
00:02:21,450 --> 00:02:28,010
Our whole web site is made up of components like a or component component a sidebar or a item component.

37
00:02:28,050 --> 00:02:34,500
So we basically build a bunch of building blocks and tell angular how to glue them together and angular

38
00:02:34,500 --> 00:02:36,010
will do the rendering part.

39
00:02:36,040 --> 00:02:41,450
The communication part and all these fun pieces which we don't want to code on our own.

40
00:02:41,670 --> 00:02:48,540
And if you think about web pages you of course can easily deconstruct them into components because we

41
00:02:48,540 --> 00:02:52,230
always have re-acquiring elements on all these pages.

42
00:02:52,340 --> 00:02:58,800
A component is just a template where we have HVM the code which is enhanced with some special angular

43
00:02:58,800 --> 00:03:04,620
syntax like here where we have a click listener and output some content as well as bind to some image

44
00:03:04,620 --> 00:03:06,000
property.

45
00:03:06,000 --> 00:03:10,150
Additionally to the template components are always accompanied by a typescript.

46
00:03:10,170 --> 00:03:14,340
So you could say a javascript file where we write some logic for the components.

47
00:03:14,340 --> 00:03:16,680
For example what should happen up when I click.

48
00:03:17,160 --> 00:03:23,090
And besides having components with features like that we also have a number of templates and ex-U.S.

49
00:03:23,100 --> 00:03:26,050
quite a lot and that are so-called directives.

50
00:03:26,070 --> 00:03:32,850
We use that in component templates but directives allow us to manipulate the content whereas click listeners

51
00:03:32,850 --> 00:03:38,400
and content output instructions as you see them in the middle example only change in minor pieces of

52
00:03:38,400 --> 00:03:44,820
the app with directives like energy for we can dynamically loop for our data and then render whole parts

53
00:03:44,820 --> 00:03:47,000
of the page based on that.

54
00:03:47,070 --> 00:03:49,690
These are the core features we get now.

55
00:03:49,830 --> 00:03:55,980
These components of need to communicate to from there we get various tools property and event binding

56
00:03:55,980 --> 00:04:03,780
for example but all the things which are called services and dead is angular in a very very very condensed

57
00:04:03,780 --> 00:04:04,710
nutshell.

58
00:04:04,710 --> 00:04:10,320
Now I will dive into these core features over the next lectures and briefly walk you through them to

59
00:04:10,320 --> 00:04:13,480
give you a feeling about how that all works and how we use that.

60
00:04:13,590 --> 00:04:17,840
But definitely take an entire angular course if you want to dive deeper.

61
00:04:17,850 --> 00:04:20,460
This module won't replace an entire course.

