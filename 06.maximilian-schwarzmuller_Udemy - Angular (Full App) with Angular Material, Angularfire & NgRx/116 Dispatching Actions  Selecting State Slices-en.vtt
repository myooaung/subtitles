WEBVTT
1

00:00:02.250 --> 00:00:08.310

In the last election we did a lot of refactoring and this can look very complex and setting up N-G are



2

00:00:08.320 --> 00:00:11.420

x initially is a lot of work but we'll get there.



3

00:00:11.440 --> 00:00:17.050

And once you get it running and got everything set up working with it is super easy I promise.



4

00:00:17.050 --> 00:00:21.930

So we created this app reducer with the feature selector and yabber selector.



5

00:00:21.940 --> 00:00:24.490

Now we want to dispatch actions.



6

00:00:24.640 --> 00:00:26.350

And where do we do that.



7

00:00:26.560 --> 00:00:29.310

Well for now in the same places we did it before.



8

00:00:29.470 --> 00:00:38.110

Indeed off servers for example there we still want to dispatch an action whenever we start logging in.



9

00:00:38.110 --> 00:00:41.240

The question just is how does this now work.



10

00:00:41.560 --> 00:00:48.510

Since we refactored everything we need to adjust our import we import everything as from root.



11

00:00:48.520 --> 00:00:54.460

Maybe because now I want to make it clear that we are targeting the root reducers the root store which



12

00:00:54.460 --> 00:01:00.580

combines all the ABA reducers and it still lives in the producer files so does import.



13

00:01:00.610 --> 00:01:04.960

It still is all right here when we inject the state.



14

00:01:04.990 --> 00:01:12.250

This changed now though the generic type is now from root and they are just the state because the state



15

00:01:12.310 --> 00:01:17.820

as we define it there already merge SD substate the feature States into it.



16

00:01:18.980 --> 00:01:23.570

So now we got this change from Ruda and a different type of state.



17

00:01:23.570 --> 00:01:29.240

Now for dispatching we can take a bunch of the more complex way we use to define our actions.



18

00:01:29.240 --> 00:01:33.870

So I'll import everything as you like.



19

00:01:33.890 --> 00:01:39.140

That's kind of the convention for the actions you use just the name uppercase character at the beginning



20

00:01:39.500 --> 00:01:43.850

and no actions after it from the shared folder.



21

00:01:43.850 --> 00:01:48.520

And there you are I not reducer but actions.



22

00:01:48.580 --> 00:01:57.610

Now if you want to dispatch an action as we do here we simply dispatch knew because remember in UI actions



23

00:01:57.610 --> 00:02:01.000

we defined classes so we can instantiate them here.



24

00:02:01.030 --> 00:02:09.040

These classes we simply dispatch knew you I dot.



25

00:02:09.130 --> 00:02:11.240

And now we can for example dispatch.



26

00:02:11.260 --> 00:02:12.700

Start loading here.



27

00:02:13.060 --> 00:02:13.840

Very convenient.



28

00:02:13.840 --> 00:02:17.850

We don't even have to reference a specific constant.



29

00:02:18.400 --> 00:02:24.670

So I'll do the same of course for stop loading for all stop loading instances.



30

00:02:24.670 --> 00:02:30.880

I will use stop loading which I instantiate.



31

00:02:31.150 --> 00:02:37.960

And here we got one more start loading instance which all place replace Whoops just a typo like this.



32

00:02:37.960 --> 00:02:39.700

With this we still dispatch.



33

00:02:39.700 --> 00:02:48.130

Now how do we subscribe to state changes in the log in component in NGO on it.



34

00:02:48.130 --> 00:02:50.490

We read not got an error here.



35

00:02:50.500 --> 00:02:58.050

We for one also have to change our import we're into we're importing from root here from reproducer.



36

00:02:58.060 --> 00:03:03.940

And that changes the state from our store it's from root state simply.



37

00:03:04.600 --> 00:03:10.420

And now here we no longer need to manually drill into this object.



38

00:03:10.420 --> 00:03:20.380

We can instead use a different function to select function where we simply pass from root is loading



39

00:03:22.300 --> 00:03:27.770

now the select function takes advantage of these selectors we defined and the producer you remember



40

00:03:27.830 --> 00:03:31.430

your create selector we can use them with the select function.



41

00:03:31.670 --> 00:03:41.600

And this gives us a quick and easy way of directly getting the exploding property value just like that.



42

00:03:41.610 --> 00:03:47.670

Now with that the missing thing is that we go to our app module and change the way we configure our



43

00:03:47.670 --> 00:03:49.420

store here.



44

00:03:49.560 --> 00:03:57.630

We should not also do this differently and import reducers from the app reducer file and just pass DS



45

00:03:57.720 --> 00:04:00.050

to for root reducers.



46

00:04:00.060 --> 00:04:07.230

Now if we save everything and we go back to our application letted reload we don't see a button.



47

00:04:07.560 --> 00:04:13.350

Well the issue is here in the loading template we should wrap this in parentheses.



48

00:04:13.560 --> 00:04:16.420

Otherwise the check is executed in the wrong order.



49

00:04:16.650 --> 00:04:18.890

So now with that we get the baton.



50

00:04:19.000 --> 00:04:25.140

And now let's log in and we get to Spener and this is working now with DUI state.



51

00:04:25.530 --> 00:04:31.550

So there was a lot of set up make sure to carefully go through it so that you understand all these steps.



52

00:04:31.560 --> 00:04:34.900

And now it's time for assignment in the next sector.



