1
00:00:02,420 --> 00:00:09,590
So within just the work on our toolbar and site that thus far at least Now one thing I want to prove

2
00:00:09,650 --> 00:00:15,660
is that all the logic for toolbar and site navigation lefse and the app component.

3
00:00:15,980 --> 00:00:18,860
I don't want to have that all in the app component.

4
00:00:18,860 --> 00:00:26,420
A better approach in general and angular is to split your app into multiple smaller components so that

5
00:00:26,420 --> 00:00:33,000
each component on its own doesn't contain that much code that makes it's easier to maintain and to understand.

6
00:00:33,410 --> 00:00:39,150
So for the app component we got the science half year and we got the toolbar.

7
00:00:39,310 --> 00:00:43,040
Now I will actually leave the site in here.

8
00:00:43,040 --> 00:00:50,970
So the math side of the container but the magnae of list that can be outsourced into its own component.

9
00:00:51,230 --> 00:00:56,100
And for the tool bar we can outsource the entire toolbar into its own component.

10
00:00:56,360 --> 00:01:05,800
So quit Engy Servier and with MGG all generate a new component and place it in the navigation folder.

11
00:01:05,870 --> 00:01:12,290
So the component I create is navigation slash and then I'll name it header and to add it to the right

12
00:01:12,290 --> 00:01:17,970
module I'll add dash dash module app dot module.

13
00:01:18,320 --> 00:01:22,400
With that it will create this new component in that folder.

14
00:01:22,400 --> 00:01:25,720
Now create a second component in the same folder.

15
00:01:25,880 --> 00:01:31,420
And this one will be named side nav list.

16
00:01:31,420 --> 00:01:35,870
So these are two new components now created in the navigation folder.

17
00:01:35,890 --> 00:01:38,200
With that I can restart as you serve.

18
00:01:38,440 --> 00:01:44,680
And now the goal is simple get the content from the app component into the respective newly created

19
00:01:44,680 --> 00:01:45,750
components.

20
00:01:45,790 --> 00:01:50,860
The difficult part will be to ensure that we still can click that toggle button in the tool bar and

21
00:01:50,860 --> 00:01:54,630
trigger something in the side nav which will now be in a different component.

22
00:01:54,790 --> 00:01:56,040
But step by step.

23
00:01:56,350 --> 00:02:02,590
Let's take the madness of list here from the app component and cut it and let's add it to the side nav

24
00:02:02,640 --> 00:02:06,370
list h him out file like this.

25
00:02:06,370 --> 00:02:09,240
So now we gather here and we already get an error.

26
00:02:09,330 --> 00:02:16,840
The side nav isn't found because remember this is referring to the local reference side Neph which we

27
00:02:16,840 --> 00:02:18,160
have in the app component.

28
00:02:18,340 --> 00:02:24,930
The thing about local references is that they are well local so we can only access it in the app component

29
00:02:25,210 --> 00:02:26,870
and not an average components.

30
00:02:26,990 --> 00:02:30,280
And that's the issue here and we'll solve this later.

31
00:02:30,280 --> 00:02:32,230
For now let's leave it as it is.

32
00:02:32,480 --> 00:02:38,710
And one thing we have to do though is in this site NAF list we need some styles.

33
00:02:39,040 --> 00:02:46,450
So from the components siestas file we certainly want to take the links and the caption with us and

34
00:02:46,520 --> 00:02:50,650
it to the site nav lists as file so that the things are still styled.

35
00:02:50,650 --> 00:02:51,820
All right.

36
00:02:51,940 --> 00:02:54,600
Now already drapped the link stylings here.

37
00:02:54,730 --> 00:02:59,980
And also add them to the hetero component and yes you could also outsource them in some global style

38
00:02:59,980 --> 00:03:04,840
file but you're able to find it differently because it also it wouldn't be that strange to use different

39
00:03:05,050 --> 00:03:10,770
styles in the different parts so different style and deciding immigration than the tool bar here it's

40
00:03:10,780 --> 00:03:16,450
the same but still is duplicate code in this part the hetero component HMO part of course all those

41
00:03:16,450 --> 00:03:22,450
should be populated and it will be populated with the entire match toolbar component and whatever it

42
00:03:22,450 --> 00:03:25,180
wraps from my app component.

43
00:03:25,210 --> 00:03:30,360
So let's cut that and add it to the team I'll follow the hetero component like this.

44
00:03:30,390 --> 00:03:33,510
Here we also have the issue of not reaching science.

45
00:03:33,910 --> 00:03:36,150
So is the issue we want to work on.

46
00:03:36,190 --> 00:03:39,100
We now get cleaned up see as as components.

47
00:03:39,110 --> 00:03:48,430
Yes s and h mail file we now can add app header here above our router outlet to use our newly created

48
00:03:48,450 --> 00:03:56,890
header component which has this app headers selector and of course you use the site nav list inside

49
00:03:56,890 --> 00:03:58,480
of our app component.

50
00:03:58,600 --> 00:04:02,430
Matt side nav select are here like this.

51
00:04:02,470 --> 00:04:09,550
Now we need to make Does chain work again so that we can click a button to header and toggle this side.

52
00:04:09,880 --> 00:04:14,930
And the same for Decide Neph list where we click a link and then we want to close the site.

53
00:04:15,250 --> 00:04:21,600
Now to do that let's start with the header there on a click we call the toggle method on the site nav

54
00:04:21,700 --> 00:04:24,490
reference which we can't access anymore.

55
00:04:24,760 --> 00:04:31,720
Well I'll simply call a method then on toggle side NAV or whatever you want you can give this any name

56
00:04:31,720 --> 00:04:32,760
you like.

57
00:04:33,070 --> 00:04:36,590
And we need to create this method and the hetero component now.

58
00:04:36,700 --> 00:04:40,600
So down there in the typescript file all asdis as a method.

59
00:04:40,720 --> 00:04:48,160
And my goal now is to emit a custom event in the head or a component to which I can listen from my app

60
00:04:48,160 --> 00:04:56,980
component here on my head or selector which I can use to call toggle on the side Neph reference.

61
00:04:57,020 --> 00:05:00,760
No this is a common pattern and one that should work really well.

62
00:05:01,470 --> 00:05:08,070
For this ultra a new property in the head a component types could file and I'll name it site nav toggle

63
00:05:08,160 --> 00:05:09,810
the name is solely up to you.

64
00:05:09,870 --> 00:05:13,970
The important part is that it's a new event emitter object.

65
00:05:14,070 --> 00:05:20,940
So you should import event emitter from an angle core and we can also already import output to make

66
00:05:20,940 --> 00:05:24,860
this a listener event which you can listen to from outside.

67
00:05:25,350 --> 00:05:31,540
So first of all I'm going to initialize this event dimeter create a new object based on it.

68
00:05:31,560 --> 00:05:37,950
Now even if it is a generic type but actually can set the type too wide because I don't plan on emitting

69
00:05:37,980 --> 00:05:39,000
any payload.

70
00:05:39,020 --> 00:05:45,200
Any object with the event and it will decorate CNF toggle with an output.

71
00:05:45,210 --> 00:05:49,740
Don't forget the parentheses to make this list inable from outside.

72
00:05:49,740 --> 00:05:54,680
And now the only thing is that we need to emit event here in on target side neph.

73
00:05:54,750 --> 00:05:59,150
I'll reach out to side of toggle and simply call emit.

74
00:05:59,250 --> 00:06:02,290
Now we admit any event whenever we click the menu button.

75
00:06:02,490 --> 00:06:06,180
All we have to do now is listen to seitan after.

76
00:06:06,210 --> 00:06:08,990
So back in the app component H.T. mail file.

77
00:06:09,030 --> 00:06:15,540
I'll add this as a custom Ubuntu app hatter and there I will now simply reach out to side nav and call

78
00:06:15,720 --> 00:06:17,940
toggle that's all.

79
00:06:17,970 --> 00:06:21,530
Now we won't be able to close it up and clicking links but it should open.

80
00:06:21,660 --> 00:06:23,740
Let's go back to the running happened.

81
00:06:23,880 --> 00:06:26,630
Open the side menu and this works.

82
00:06:26,760 --> 00:06:33,090
Now to the links that does work again because right now the app crashes it crashes because when clicking

83
00:06:33,090 --> 00:06:39,180
a link we try to call close on site nav which is undefined though because this is not a local reference.

84
00:06:39,180 --> 00:06:42,050
A way lable in the sign up list component.

85
00:06:42,600 --> 00:06:48,540
Now the solution is to simply follow the same approach as the header component.

86
00:06:48,540 --> 00:06:51,080
Here I will add on close Mefford.

87
00:06:51,120 --> 00:06:56,540
The name is also up to you here and then in the typescript file of that component.

88
00:06:56,540 --> 00:07:01,750
All import event emitter and output and then create my own custom event.

89
00:07:01,880 --> 00:07:08,340
I'll simply name it close sign half year which is a new event emitter type Woit because I also won't

90
00:07:08,340 --> 00:07:15,450
pass any payload here and decorated with an output and then I'll add the on Close method which I call

91
00:07:15,450 --> 00:07:20,630
from the template and cold this close side nav emit just like that.

92
00:07:21,520 --> 00:07:28,000
Know if this set up the ultimate event whenever we click a link and now we can go to the app component

93
00:07:28,030 --> 00:07:33,250
HVM m file edit listen to our acustom event which we named close site.

94
00:07:33,580 --> 00:07:40,420
And here I can then use the local reference because we can access it in the app component and call close

95
00:07:42,650 --> 00:07:44,430
just like that.

96
00:07:44,750 --> 00:07:49,040
With these changes someplace if we go back and we open this page.

97
00:07:49,040 --> 00:07:57,440
Now if I never get around the site Nev. opens closes just as before but this time we're taking advantage

98
00:07:57,500 --> 00:08:03,100
of having multiple components and therefore having a leaner app component.

99
00:08:03,290 --> 00:08:10,130
Now one important word of caution you could of course also have the idea of putting demand side nav

100
00:08:10,220 --> 00:08:13,730
into its own component and not just the content.

101
00:08:13,760 --> 00:08:19,520
There are solutions to make this work for sure but in general you can quickly end up in a situation

102
00:08:19,520 --> 00:08:21,880
where you fail to open the Met site.

103
00:08:22,040 --> 00:08:29,010
Because at least right now it looks like Matt's site Neph always needs to be a direct child of Matt's

104
00:08:29,010 --> 00:08:31,720
side and Neph container and you break that chain.

105
00:08:31,820 --> 00:08:38,540
If you add another component in between your own component does this why I don't recommend putting this

106
00:08:38,540 --> 00:08:44,110
into a component but instead putting this into a component death just one word of caution.

107
00:08:44,210 --> 00:08:48,140
Chances are it is fixed or a different behavior when you're trying this.

108
00:08:48,230 --> 00:08:50,860
But right now this does not work as expected.

109
00:08:51,050 --> 00:08:55,480
Now with that we finished the site there and the toolbar.

110
00:08:55,490 --> 00:08:59,000
Now one thing we can't check is if we increase the width.

111
00:08:59,000 --> 00:09:04,640
Here we see the stylings a bit of 40 toolbar icons or items I should say.

112
00:09:04,940 --> 00:09:13,670
So let's go to the site Neph list component s s file and here where we have our navigation items that

113
00:09:13,670 --> 00:09:20,510
of course is wrong in this site Neph list component that should go inti should go into the header component

114
00:09:20,510 --> 00:09:21,220
here.

115
00:09:21,260 --> 00:09:23,030
So this is where we add this.

116
00:09:23,210 --> 00:09:25,500
And now with that this looks good.

117
00:09:25,640 --> 00:09:29,090
And if we decrease the size deciles looks good.

118
00:09:29,330 --> 00:09:30,860
So this is now working.

119
00:09:30,920 --> 00:09:36,070
Now next I want to work on you wall come screen and of course on the training screens.

120
00:09:36,170 --> 00:09:37,560
So let's continue with that.

