1
00:00:02,140 --> 00:00:08,860
Let's add a dialogue to our application let's add it to the curred training as you saw in the last video

2
00:00:08,980 --> 00:00:15,040
we need to inject a special component or a special component a special class to do that.

3
00:00:15,040 --> 00:00:21,610
So bind it to a dialogue property here using that shortcut in typescript where does this automatically.

4
00:00:21,790 --> 00:00:29,770
Well add it to class property by adding this accessor in front of the argument name and the type is

5
00:00:29,770 --> 00:00:36,120
Matt dialogue which you must import from at a singular material.

6
00:00:36,130 --> 00:00:38,860
Now if we do it like that it would fail.

7
00:00:39,040 --> 00:00:43,420
We still also need to provide a module that didn't change.

8
00:00:43,420 --> 00:00:52,660
So here we will add Matt dialog module to import and then to the imports array and to the exports array

9
00:00:52,900 --> 00:00:58,120
and this makes sure that we can use that dialog injection.

10
00:00:58,120 --> 00:01:03,760
Now with that we're injecting dialog here and in Indiana I want to show a dialog whenever we click on

11
00:01:03,760 --> 00:01:04,610
stop.

12
00:01:04,960 --> 00:01:12,370
So I will call clear into well but then it will reach out to the dialog and call open and now we can

13
00:01:12,370 --> 00:01:13,540
configure it.

14
00:01:13,680 --> 00:01:22,240
And here we actually as you can see an example we actually point to some component.

15
00:01:22,240 --> 00:01:27,850
This one and the example which should give you dialog its content.

16
00:01:27,850 --> 00:01:36,250
So we still create a component with a template for that but we're invoking it programmatically not directly

17
00:01:36,250 --> 00:01:41,100
from the template not through NGF or anything like that but programmatically.

18
00:01:41,330 --> 00:01:49,600
Therefore let's create this component all created next to the current training component and name it

19
00:01:50,470 --> 00:01:54,970
stop training dot component dot TS That's the fall name.

20
00:01:55,000 --> 00:02:00,810
And then there are expert A-class stop training component and it is going to be our regular angular

21
00:02:00,820 --> 00:02:08,800
component and you could have used DC lighting created of course I will add the ADD component decorator

22
00:02:09,100 --> 00:02:16,480
which we need to import with him or each component from at a singular core.

23
00:02:16,480 --> 00:02:20,380
Now in a year we need selector.

24
00:02:20,440 --> 00:02:22,010
So let's name it app.

25
00:02:22,060 --> 00:02:24,440
Stop training.

26
00:02:24,440 --> 00:02:25,420
We need a template.

27
00:02:25,450 --> 00:02:30,700
And I'll use the inline template here because it's going to be a really really simple one you could

28
00:02:30,700 --> 00:02:32,800
use a more complex one of course.

29
00:02:33,070 --> 00:02:40,200
Ultimately at age 1 Tegra I say Are you sure like death.

30
00:02:41,610 --> 00:02:43,380
Now to make the title look good.

31
00:02:43,380 --> 00:02:50,550
There are a couple of helper components you can use like Matt dialog title which you add directly to

32
00:02:50,550 --> 00:02:52,590
D.H. 1 or whatever you have.

33
00:02:52,590 --> 00:02:58,680
Tech does well basically tell aler material where to position is in the dialog that is created.

34
00:02:59,130 --> 00:03:02,390
And below that I'll add a component.

35
00:03:02,440 --> 00:03:10,390
Matt dialogue actions you might recall that from the card where we all had such actions section and

36
00:03:10,390 --> 00:03:18,560
then there we add normal buttons with Mat button directives or mat rased buttons whatever you want and

37
00:03:18,660 --> 00:03:27,930
hearable say yes and then I'll add a second button where I say no and we can now add a special directive

38
00:03:27,930 --> 00:03:29,940
to these buttons.

39
00:03:29,940 --> 00:03:37,170
The mat dialogue close directive which also has an alternative set up where you bind a value to it a

40
00:03:37,170 --> 00:03:42,690
value that will be transferred to the component that opened dialog.

41
00:03:42,690 --> 00:03:50,400
So here you could set these two false and in the first case you could set this to true to check which

42
00:03:50,400 --> 00:03:52,400
option to use or actually chose.

43
00:03:52,440 --> 00:03:55,880
It doesn't have to be a boolean though can be any data.

44
00:03:56,610 --> 00:04:00,480
So this is our dialog thus far.

45
00:04:00,750 --> 00:04:02,450
I'll dive deeper into it in a second.

46
00:04:02,490 --> 00:04:05,340
Let's make sure that we can actually open it.

47
00:04:05,340 --> 00:04:08,290
Now to omit we first of all have to register it.

48
00:04:08,340 --> 00:04:17,770
So in the app module not any material one in the app module all at my stop training component.

49
00:04:17,820 --> 00:04:22,320
Make sure to also add an import pointing to the file we just created.

50
00:04:22,860 --> 00:04:24,450
And now here's something special.

51
00:04:24,450 --> 00:04:31,140
Since that component is going to create it automatically encode at runtime.

52
00:04:31,140 --> 00:04:38,750
We have to add it to some special array here in the app module which you very very rarely use.

53
00:04:39,000 --> 00:04:40,820
Entry components.

54
00:04:41,190 --> 00:04:48,300
This is an array where you have to add all components that are never instantiated by using their selector

55
00:04:48,300 --> 00:04:51,120
in your template nor by routing.

56
00:04:51,120 --> 00:04:57,900
In other words angular has no way of finding out whether this component is going to get used and when

57
00:04:57,900 --> 00:05:04,220
this is going to be the case with entry components you tell angular be prepared to use it.

58
00:05:04,470 --> 00:05:11,690
And that's all angular is now prepared and doesn't throw an error when you open it programmatically.

59
00:05:11,690 --> 00:05:16,320
Now we want to open it programmatically from within the current training component here.

60
00:05:16,340 --> 00:05:19,310
We want to open our stop training component.

61
00:05:19,490 --> 00:05:30,590
So let's first of all import this year let's import stop training component from them and now it's in

62
00:05:30,620 --> 00:05:37,290
the stop training component file and let's pass this as an argument to open.

63
00:05:37,350 --> 00:05:42,000
Now before we do anything else let's save this and see if it works.

64
00:05:42,960 --> 00:05:47,120
For click on start and then don't stop we indeed see our dialogue.

65
00:05:47,180 --> 00:05:48,810
Cool.

66
00:05:48,830 --> 00:05:56,420
Now the thing that's missing is how we hand the data we get back and also how we theoretically could

67
00:05:56,420 --> 00:06:02,450
get data into the dialogue in case you want to show something you could for example show the name of

68
00:06:02,450 --> 00:06:05,790
the currently running training or something else.

69
00:06:05,960 --> 00:06:07,820
So how do we do this.

70
00:06:07,850 --> 00:06:09,580
Let's take a look in the next lecture.

