1
00:00:02,260 --> 00:00:08,170
So even gets true or false depending on what the user chose in the dialogue if it's true.

2
00:00:08,170 --> 00:00:12,910
So if he wants to finish then we should go back to the previous page.

3
00:00:12,910 --> 00:00:20,490
So we probably somehow want to emit an event dead we are no longer in an ongoing exercise.

4
00:00:20,860 --> 00:00:22,270
If it's false.

5
00:00:22,270 --> 00:00:26,390
So if the user didn't confirm to exit then we want to receive them.

6
00:00:26,410 --> 00:00:29,410
The timer now to achieve that.

7
00:00:29,420 --> 00:00:37,820
Let's start with the exit case for dead or import the event emitter and output from an angle of core

8
00:00:38,510 --> 00:00:41,620
and create my new property here.

9
00:00:41,960 --> 00:00:53,960
Maybe at the top so that we can quickly see it decorated with at output which is training wups training

10
00:00:54,440 --> 00:00:59,870
exit new event motor like dat.

11
00:01:02,720 --> 00:01:07,130
Now I want to hold it if down here.

12
00:01:07,130 --> 00:01:11,540
Result is true because it's true if the user confirms to exit.

13
00:01:11,630 --> 00:01:20,260
So if for assault then I want to call this training exit emet just like that we made this event.

14
00:01:20,510 --> 00:01:26,840
And now in the training component where we use the current training I can listen to training excerpt

15
00:01:27,290 --> 00:01:35,190
and set ongoing training equal to force if it occurs because the user quit.

16
00:01:35,510 --> 00:01:36,500
Let's try that out.

17
00:01:36,680 --> 00:01:38,230
Let's start the training.

18
00:01:39,350 --> 00:01:41,580
And stop it and confirm.

19
00:01:41,920 --> 00:01:43,430
And we're back.

20
00:01:43,430 --> 00:01:49,630
Let's start and stop and don't confirm and we stay alert to resume the timer.

21
00:01:49,650 --> 00:01:52,830
So now to resume the timer.

22
00:01:52,900 --> 00:01:55,480
We of course all need to implement some code.

23
00:01:55,520 --> 00:02:05,490
The good thing is one thing we can do we can simply add a method maybe names start or resume timer and

24
00:02:05,520 --> 00:02:08,420
put our timer code into this method.

25
00:02:09,600 --> 00:02:13,040
Now I will call this method right in on in it.

26
00:02:13,080 --> 00:02:15,800
So this start or reassumed timer.

27
00:02:16,080 --> 00:02:18,850
And I also call it down there.

28
00:02:18,870 --> 00:02:22,540
If resoled is not true so do we continue.

29
00:02:22,710 --> 00:02:27,200
And since we always start to progress we can just continue like that.

30
00:02:27,750 --> 00:02:37,200
So if we start a new training and we stop but then decide to not quit then it will actually recede and

31
00:02:37,200 --> 00:02:38,460
continue.

32
00:02:38,460 --> 00:02:39,840
We do quit though.

33
00:02:40,020 --> 00:02:41,010
Well then we're done.

34
00:02:41,010 --> 00:02:49,650
Ragon So with that we added our dialogue and we can control our ongoing training.

35
00:02:49,670 --> 00:02:51,940
Still we're not really passing around data.

36
00:02:51,950 --> 00:02:55,550
Obviously it works without us selecting anything and that dropdown.

37
00:02:55,670 --> 00:02:57,970
These are all things we'll work on.

38
00:02:58,220 --> 00:03:01,360
But for now I really liked the progress we made.

39
00:03:01,550 --> 00:03:04,900
Now let's see what else we can do in the next lectures.

