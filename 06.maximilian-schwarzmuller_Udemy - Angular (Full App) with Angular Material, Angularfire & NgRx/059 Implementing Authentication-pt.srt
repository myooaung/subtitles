1
00:00:02,240 --> 00:00:07,920
Ento, vamos trabalhar nos dados e trabalhar nesses dados.

2
00:00:07,940 --> 00:00:09,950
Ns precisamos principalmente de duas coisas.

3
00:00:09,980 --> 00:00:17,660
Um par de servios que nos permitem adicionar pelo menos por enquanto a autenticao de um usurio

4
00:00:17,750 --> 00:00:24,620
e tambm gerenciar nossos treinamentos e modelos que nos permitem gerenciar os diferentes dados com

5
00:00:24,710 --> 00:00:29,820
os quais estamos interagindo, como lidar com dados de Educao. aquele.

6
00:00:29,840 --> 00:00:36,410
Mais tarde no curso, tambm conectaremos nosso aplicativo  Internet para usar autenticaes reais.

7
00:00:36,560 --> 00:00:39,650
Mas comeando com dados ainda simulados.

8
00:00:39,680 --> 00:00:46,160
Mas pelo menos de uma forma interactiva real  um enorme avano e nos permite simular nosso

9
00:00:46,160 --> 00:00:49,890
aplicativo como ele ser quando realmente tiver dados dinmicos.

10
00:00:49,910 --> 00:00:57,890
Ento, vamos comear com a rea de autenticao na pasta off, onde temos que fazer login e se inscrever no componente.

11
00:00:58,160 --> 00:01:00,940
Eu quero adicionar dois modelos.

12
00:01:01,040 --> 00:01:03,040
O primeiro  o modelo do usurio.

13
00:01:03,050 --> 00:01:10,220
Eu vou nomear o arquivo user model dot TS e no final eu tenho um objetivo simples aqui

14
00:01:10,220 --> 00:01:18,190
eu quero criar uma interface que eu possa usar para definir bem como um usurio deve se parecer no meu aplicativo.

15
00:01:18,590 --> 00:01:24,800
Ento, eu estou indo para exportar a interface aqui e interface  uma construo de script de tipo

16
00:01:24,800 --> 00:01:30,980
especial que no final  apenas nossa definio de tipo personalizado voc poderia dizer tudo nomeie usurio eo

17
00:01:30,980 --> 00:01:38,530
usurio deve ter dois campos digamos e e-mail que  uma string e um ID de usurio, digamos qual deve ser uma string.

18
00:01:38,540 --> 00:01:46,100
Mais tarde, quando adicionarmos um servidor e o back-end, obteremos esse usurio do servidor

19
00:01:46,100 --> 00:01:47,800
e poderemos us-lo.

20
00:01:47,840 --> 00:01:56,210
Tambm adicionarei meu modelo de dart de dados fora do trao Ts para localizar o tipo de dados que desejo obter durante a

21
00:01:56,210 --> 00:02:01,070
inscrio e o login no qual planejo enviar para o servidor para validao.

22
00:02:01,070 --> 00:02:06,160
Ento, eu vou exportar a interface ou dois dados parecem um nome apropriado.

23
00:02:06,160 --> 00:02:11,830
E depois h tudo o que eles tm e-mail, mas eu quero ter uma senha como um segundo campo.

24
00:02:11,900 --> 00:02:18,640
Ento, esses so os dados que eu quero obter quando um usurio  bem criado ou logado.

25
00:02:18,690 --> 00:02:22,220
E com isso agora podemos adicionar um servio.

26
00:02:22,220 --> 00:02:24,890
Vou nomear o arquivo do Service.

27
00:02:24,940 --> 00:02:30,630
Sim, porque o servio ser nomeado de servio e depois eu exportarei uma classe chamada.

28
00:02:30,710 --> 00:02:38,690
Bem todos os servios acabaram de definir o objetivo deste servio  para e DN nos permite falsificar um usurio logar em forma outras

29
00:02:38,900 --> 00:02:45,500
partes do aplicativo prestes a fazer o login para que possamos, por exemplo, ajustar o cabealho e mostrar apenas voc

30
00:02:45,500 --> 00:02:46,770
faz logout .

31
00:02:46,760 --> 00:02:50,280
Mas se o usurio pode sair e assim por diante.

32
00:02:50,300 --> 00:02:58,110
Essa  a ideia de que precisamos de alguns campos e mtodos em dvida de servio.

33
00:02:58,280 --> 00:03:03,920
Por exemplo, deseja armazenar o usurio atualmente autenticado e eu o transformei em um campo privado

34
00:03:03,920 --> 00:03:07,190
para que possamos sair apenas de dentro do servio.

35
00:03:07,190 --> 00:03:12,400
Isso ser do tipo usurio e esse  o tipo que acabamos de criar no arquivo de modelo de dados do usurio.

36
00:03:12,440 --> 00:03:14,910
Ento, adicione essa importao.

37
00:03:15,140 --> 00:03:22,640
Agora, com isso, adicionarei um usurio de registro Methot, que deve ser chamado quando um usurio se inscrever l. Espero

38
00:03:22,640 --> 00:03:27,430
obter alguns dados off que devem estar fora do tipo de dados.

39
00:03:27,470 --> 00:03:30,860
Voc tambm precisa importar isso desse arquivo de modelo de dados.

40
00:03:30,860 --> 00:03:35,690
Eu criei um segundo atrs no ano de mtodo de usurio de registro.

41
00:03:35,900 --> 00:03:38,130
Vamos inicializar nosso usurio.

42
00:03:38,270 --> 00:03:42,350
E assim que nos conectarmos  Internet, certamente faremos mais do que isso.

43
00:03:42,410 --> 00:03:46,420
Na verdade, enviaremos a solicitao para um servidor e criaremos o usurio l.

44
00:03:46,430 --> 00:03:49,780
Ainda no temos uma pesquisa e, por enquanto, ela simplesmente criar um usurio.

45
00:03:49,970 --> 00:03:57,420
Portanto, crie um novo objeto e armazene essa propriedade e a propriedade do usurio e essa propriedade do usurio deve ser do tipo usurio.

46
00:03:57,450 --> 00:04:02,760
Este objeto que estamos criando aqui deve ter uma propriedade de e-mail aqui.

47
00:04:02,780 --> 00:04:05,310
Vou simplesmente pegar o e-mail de dados desativado.

48
00:04:05,330 --> 00:04:12,850
Lembre-se de que o modelo de dados desativado tambm possui uma propriedade de email e tambm precisamos ter um ID de usurio.

49
00:04:12,860 --> 00:04:16,560
Agora, mais tarde, vamos criar isso em um servidor.

50
00:04:16,760 --> 00:04:25,770
Por enquanto, ele ir falsificar um ID aleatrio, chamando Moff em torno de Moff vezes aleatrias 10.000.

51
00:04:25,790 --> 00:04:29,030
Agora, por favor, esteja ciente de que esta no  uma identificao verdadeiramente nica.

52
00:04:29,030 --> 00:04:34,740
Teoricamente voc pode obter a mesma ID duas vezes, mas voc est fingindo isso.

53
00:04:34,760 --> 00:04:35,880
Isso faz o truque.

54
00:04:35,900 --> 00:04:39,330
Mais tarde,  claro, obteremos um do servidor.

55
00:04:39,740 --> 00:04:44,210
Ento, com isso, estamos armazenando um novo usurio quando registramos um usurio.

56
00:04:44,210 --> 00:04:47,370
Agora vamos tambm adicionar um mtodo de login.

57
00:04:47,630 --> 00:04:51,710
E no mtodo de login, tambm espero obter alguns dados.

58
00:04:51,740 --> 00:04:55,760
Ento, um objeto com e-mail e senha do tipo de dados.

59
00:04:55,760 --> 00:05:00,170
Portanto, aqui tambm vou criar um usurio.

60
00:05:00,440 --> 00:05:02,020
Ento, agora  a mesma lgica.

61
00:05:02,120 --> 00:05:03,280
Mais tarde isso vai mudar.

62
00:05:03,290 --> 00:05:05,930
Vamos enviar pedidos diferentes para o nosso servidor.

63
00:05:05,930 --> 00:05:08,230
 por isso que eu uso dois mtodos aqui.

64
00:05:08,300 --> 00:05:11,240
Somos capazes de registrar um usurio e fazer login.

65
00:05:11,340 --> 00:05:13,700
Agora  tudo para adicionar um mtodo de logout.

66
00:05:13,760 --> 00:05:20,980
E aqui eu simplesmente quero definir user igual a null, ento redefini-lo  indefinido inicialmente.

67
00:05:21,040 --> 00:05:24,550
 um objeto depois que nos registramos ou fazemos login.

68
00:05:24,620 --> 00:05:33,830
Agora est indefinido ou para ser preciso nulo de novo e  tudo que vamos fazer para que o usurio tenha acesso

69
00:05:33,830 --> 00:05:34,510
ao usurio.

70
00:05:34,550 --> 00:05:35,690
Ns armazenamos aqui.

71
00:05:35,840 --> 00:05:39,860
Tem uma fonte de acesso privada, por isso no  acessvel para o exterior.

72
00:05:40,100 --> 00:05:46,730
Agora podemos retornar esse usurio e, como  um objeto e, portanto, um tipo de referncia.

73
00:05:46,740 --> 00:05:53,090
Outras partes do aplicativo podem realmente alterar esse objeto e, portanto, alterar o objeto no

74
00:05:53,450 --> 00:06:01,640
servio para evitar que isso retorne um novo objeto e use o operador de propagao de objeto para distribuir as

75
00:06:01,910 --> 00:06:06,910
propriedades do objeto de usurio armazenado no servio para esse novo objeto.

76
00:06:06,920 --> 00:06:12,830
Isso quebrar essa referncia e retornar um novo usurio com as mesmas propriedades, mas

77
00:06:12,830 --> 00:06:14,470
com um objeto diferente.

78
00:06:14,480 --> 00:06:21,290
Ento, se outras partes do aplicativo comearem a manipular este objeto, que retornamos aqui, elas no manipularo esse

79
00:06:21,440 --> 00:06:26,850
usurio original, o que  uma prtica melhor do que retornar diretamente ao usurio.

80
00:06:26,860 --> 00:06:35,920
Eu tambm vou adicionar um mtodo de convenincia est desligado e aqui vou simplesmente retornar onde este usurio  igual a agora

81
00:06:35,950 --> 00:06:45,460
ou no, se  uma citao para mim, se no  igual a apenas verificar a igualdade de valor, se no  igual,

82
00:06:45,520 --> 00:06:52,120
ento o usurio  autenticado assim  de retornar verdadeiro se for igual a agora.

83
00:06:52,150 --> 00:06:54,240
Isso retornar falso.

84
00:06:54,250 --> 00:06:56,340
Ento, com isso, obtemos o servio desligado.

85
00:06:56,350 --> 00:07:03,540
Agora, vamos nos conectar ao nosso aplicativo e, na verdade, chamar o usurio de registro do componente Sign-Up e efetuar

86
00:07:03,550 --> 00:07:06,120
login no componente de login da Web.

87
00:07:06,130 --> 00:07:08,260
Vamos comear com o componente de inscrio.

88
00:07:08,300 --> 00:07:14,800
A temos em enviar o que  executado quando chegamos ao boto de envio e  aqui que

89
00:07:14,800 --> 00:07:19,600
eu quero realmente registrar o meu usurio que tenha acesso ao servio desligado.

90
00:07:19,780 --> 00:07:25,060
E isso, claro, significa que precisamos injet-lo nesse componente de inscrio.

91
00:07:25,330 --> 00:07:34,060
Agora, importante, queremos garantir que em toda a aplicao usemos a mesma classe de servio na mesma instncia

92
00:07:34,120 --> 00:07:37,680
da classe de servio que devo dizer.

93
00:07:37,690 --> 00:07:41,140
Portanto, uma coisa  super importante.

94
00:07:41,140 --> 00:07:43,190
Voc sabe qual  essa coisa.

95
00:07:45,150 --> 00:07:51,880
A questo em que ns fornecemos esse servio injetando-o como uma parte em um singular.

96
00:07:51,960 --> 00:07:59,110
Voc tambm precisa fornecer seus servios e fornec-lo no mdulo do meu aplicativo.

97
00:07:59,130 --> 00:08:06,940
Isso garante que, em todo o aplicativo, sempre utilizemos a mesma instncia do servio de escritrio.

98
00:08:06,970 --> 00:08:15,470
Assim, no modelo de aplicativo, adicionarei o servio desativado a provedores como esse, e tambm ser necessrio garantir que voc esteja no

99
00:08:15,470 --> 00:08:22,040
aeroporto e no mdulo de aplicativo no topo, importando o servio da pasta off e do arquivo

100
00:08:22,070 --> 00:08:23,310
de servio offshore.

101
00:08:24,430 --> 00:08:30,610
E com isso adicionado Agora podemos injetar os servidores Avs no componente de inscrio.

102
00:08:31,000 --> 00:08:37,750
Portanto, em um componente de inscrio aqui no construtor, todos automaticamente vinculam-no a uma propriedade privada que eu nomearei

103
00:08:37,750 --> 00:08:40,520
como servio oficial. Esse nome  com voc.

104
00:08:40,870 --> 00:08:43,840
E esse tipo vai ser de servio.

105
00:08:43,990 --> 00:08:52,270
Voc tambm deve importar o servio do arquivo do oficial no componente de inscrio para que isso funcione.

106
00:08:52,270 --> 00:08:58,810
Agora temos acesso ao servio de escritrio e, em seguida, em Enviar, vou oferecer servio e chamar

107
00:08:58,810 --> 00:09:00,070
usurio de registro.

108
00:09:00,340 --> 00:09:09,430
Agora, como voc aprendeu no registro off service, o usurio espera obter dados off de dados que, se olharmos para o

109
00:09:09,430 --> 00:09:17,090
modelo,  um objeto com um email e uma propriedade de senha, ambos mantendo valores de string.

110
00:09:17,500 --> 00:09:20,520
Ento, vamos passar esse objeto para o usurio do registro.

111
00:09:20,680 --> 00:09:28,600
Vamos passar um objeto onde temos uma propriedade de email que extramos do formulrio enviado acessando

112
00:09:28,600 --> 00:09:29,490
o formulrio.

113
00:09:29,560 --> 00:09:40,480
Ento, esse argumento ns recebemos aqui e ali o valor e sua propriedade de e-mail e  chamado de e-mail primo

114
00:09:40,520 --> 00:09:44,630
para se inscrever na entrada de e-mail aqui.

115
00:09:45,510 --> 00:09:53,370
Ns atribumos um nome de e-mail aqui para senha atribumos o nome da senha que  que poderemos

116
00:09:53,490 --> 00:09:55,800
acessar a senha nesse nome.

117
00:09:55,920 --> 00:10:03,920
Assim, e-mail para e-mail e para o campo de senha que acessamos e valorizamos a senha devido a essa atribuio de nome.

118
00:10:03,930 --> 00:10:08,490
Mostrei h um segundo atrs que estamos registrando um novo usurio.

119
00:10:08,610 --> 00:10:17,450
Agora vamos tambm certificar-se de que ns registramos os usurios no banco de dados, v para o componente de login e, assim como

120
00:10:17,460 --> 00:10:21,330
no componente de inscrio, eu preciso injetar o servio desligado.

121
00:10:21,330 --> 00:10:26,400
Agora voc oferece servios e verifica que aqui ser exatamente a mesma instncia que

122
00:10:26,630 --> 00:10:31,140
o componente Inscreva-se, pois  importante fornecermos esse servio no mdulo do aplicativo.

123
00:10:31,290 --> 00:10:37,190
Voc tambm precisa importar o servio do arquivo de servio no componente de login.

124
00:10:37,350 --> 00:10:38,630
Estamos usando para digitar aqui.

125
00:10:38,640 --> 00:10:43,950
Ento, precisamos empregar isso com essa importao e adicion-lo ao enviar.

126
00:10:43,950 --> 00:10:52,860
Podemos chegar a dias de servio e chamar o login e, assim como registrar o login, requer um objeto em que tenhamos um e-mail

127
00:10:52,860 --> 00:10:56,480
e dois anos desde que eu usei a abordagem reativa.

128
00:10:56,490 --> 00:11:04,320
Eu simplesmente entrei em contato para obter um valor e, em seguida,  e-mail, porque eu dei o meu controle um nome de

129
00:11:04,320 --> 00:11:08,770
e-mail aqui e senha ser o nome da senha que eu atribu aqui.

130
00:11:08,910 --> 00:11:17,190
Ento, eu tambm adicionarei uma segunda senha de campo, que  esse login para ele, a senha do valor.

131
00:11:17,290 --> 00:11:24,180
Ento, com isso, com um colega, voc loga em Meffert e ns estamos fingindo Bem, um log l.

132
00:11:24,240 --> 00:11:28,670
O prximo objetivo  ajustar o cabealho ou o jogo Dynevor.

133
00:11:28,680 --> 00:11:35,490
E, em geral, sempre que fizermos login ou sempre que tivermos um usurio registrado em geral, se dermos uma olhada

134
00:11:35,490 --> 00:11:41,280
em nosso aplicativo, sempre veremos o login de login e o treinamento ser bom ver apenas se

135
00:11:41,280 --> 00:11:44,100
inscrever e fazer login se no estiver logado.

136
00:11:44,310 --> 00:11:47,650
E s veja treinamento e saia se estivermos.

137
00:11:48,030 --> 00:11:58,310
Ento, para fazer esse trabalho, uma coisa que farei  adicionar um emissor de evento ao meu servio de escritrio.

138
00:11:58,590 --> 00:12:05,580
Isso  usado para que eu possa informar outras partes do aplicativo sobre alteraes no fluxo de educao ou no

139
00:12:05,580 --> 00:12:07,630
status do paciente ofensivo, devo dizer.

140
00:12:08,050 --> 00:12:13,800
Eu no vou usar o evento dimeter angular com navios porque voc deve usar isso apenas

141
00:12:13,800 --> 00:12:17,020
para criar eventos customizados que voc emite nos componentes.

142
00:12:17,050 --> 00:12:22,670
Voc  algo de um pacote diferente do nosso X J. S. que  uma dependncia de angular.

143
00:12:22,740 --> 00:12:25,800
Isso fornece os chamados observveis.

144
00:12:25,800 --> 00:12:36,270
Para isso, vamos para o arquivo TS de servios off e, em seguida, h a importao no assunto de importao muito superior do nosso X digamos J como

145
00:12:36,600 --> 00:12:43,500
barras verificadas como objeto  essencialmente o mesmo que um emissor de evento ou voc pode dizer que

146
00:12:43,500 --> 00:12:49,810
 um objeto permite ao evento emite e se inscreveu nele e em outras partes do mapa.

147
00:12:50,100 --> 00:12:58,700
Ento, sempre que registramos um usurio, eu quero emitir um evento para que eu crie uma nova propriedade pblica sem

148
00:12:58,710 --> 00:12:59,650
alterao aqui.

149
00:12:59,700 --> 00:13:01,270
Por isso, no ir adicionar privado.

150
00:13:01,470 --> 00:13:05,570
E isso vai ser um novo assunto que  um tipo genrico.

151
00:13:05,570 --> 00:13:11,340
Isso significa que ele pode conter cargas do tipo diferente e eu vou passar uma

152
00:13:11,340 --> 00:13:16,660
carga que ser um booleano verdadeiro ou falso, indicando se estamos conectados ou no.

153
00:13:18,000 --> 00:13:19,790
Isso ser executado.

154
00:13:19,920 --> 00:13:21,750
Sempre que registramos um usurio.

155
00:13:21,780 --> 00:13:23,650
Ento, vamos cancelar a mudana.

156
00:13:23,850 --> 00:13:27,210
E agora no  emitido, mas na verdade  o prximo.

157
00:13:27,480 --> 00:13:31,990
Aqui temos que passar o valor e isso ser verdade porque o prximo valor  verdadeiro.

158
00:13:32,040 --> 00:13:33,880
Lembre-se que  uma carga booleana.

159
00:13:34,140 --> 00:13:40,260
Ento, quem quer que esteja assinando todas as alteraes, receber esses dados e saber se voc est

160
00:13:40,260 --> 00:13:45,950
fora de uma trava ou se est trancado ou, como nesse caso, de Bloqueado para tranc-lo.

161
00:13:45,990 --> 00:13:53,490
E eu estou simplesmente definindo que verdade deve significar que voc est bloqueado agora todos emitem o mesmo e

162
00:13:53,490 --> 00:13:59,650
faa o login e depois bloquear todos emitidos falsos porque voc no est mais bloqueado.

163
00:13:59,930 --> 00:14:02,350
Ento agora ns temos nossos eventos aqui.

164
00:14:02,450 --> 00:14:08,900
Podemos agora us-lo em lugares onde queremos reagir a essa mudana e um bom exemplo seria em

165
00:14:08,900 --> 00:14:10,500
nossa cabea ou componente.

166
00:14:10,910 --> 00:14:15,880
Ento vamos para a navegao e depois o componente Hetrick aqui.

167
00:14:16,100 --> 00:14:24,890
Eu quero injetar o servio desligado, ento vamos adicionar esse servio off aqui do tipo de servio e a importao no topo do

168
00:14:24,920 --> 00:14:30,230
arquivo, assim como voc fez nos componentes mdios que voc est apontando para esse

169
00:14:30,230 --> 00:14:35,810
arquivo de servio, muitas vezes na pasta off no fora da seo do aplicativo.

170
00:14:36,090 --> 00:14:42,150
E com isso Engy nele que  executado quando o componente  criado.

171
00:14:42,240 --> 00:14:50,750
Eu quero configurar uma assinatura entrando em contato com voc para fazer alteraes e ligar para inscrever-se agora aqui.

172
00:14:51,500 --> 00:14:54,260
Eu vou receber esses dados admitidos.

173
00:14:54,260 --> 00:14:55,900
To verdadeiro ou falso.

174
00:14:56,120 --> 00:14:58,480
Sempre que ligamos em seguida.

175
00:14:58,610 --> 00:15:05,820
Ento sempre que executarmos este cdigo ou este cdigo ou este cdigo aqui no log in.

176
00:15:06,040 --> 00:15:14,260
Portanto, no componente Hetter de navegao, obtenho status off que  true ou false e quero configur-lo para

177
00:15:14,260 --> 00:15:18,130
alguma propriedade que esteja off, que  um booleano.

178
00:15:18,130 --> 00:15:24,020
Vamos dizer que aqui eu vou definir  igual a status off.

179
00:15:24,160 --> 00:15:30,490
Porque  verdade que, se estamos presos a uma falha, se no formos importantes agora, se voc estiver

180
00:15:30,490 --> 00:15:36,830
assinando uma observao, como estamos fazendo aqui, voc tambm deve cancelar a inscrio se no precisar mais dela.

181
00:15:36,850 --> 00:15:40,980
Isso limpa uma nova memria e evita vazamentos de memria.

182
00:15:41,140 --> 00:15:45,040
Para fazer isso voc realmente precisa importar outra coisa do nosso.

183
00:15:45,220 --> 00:15:46,240
E isso  outra coisa.

184
00:15:46,240 --> 00:15:49,490
 uma assinatura que voc importou da nossa.

185
00:15:49,550 --> 00:16:00,610
Sim subtrao de barra Isso permite que voc crie uma nova propriedade de assinatura, talvez de assinatura de tipo que 

186
00:16:02,960 --> 00:16:07,910
inicialmente indefinida, mas onde voc armazena a assinatura de dias.

187
00:16:08,030 --> 00:16:10,370
Voc est criando aqui.

188
00:16:10,520 --> 00:16:14,680
Portanto, o servio off-line ir retornar uma assinatura de notcias.

189
00:16:15,290 --> 00:16:19,090
Voc deve cancelar a inscrio sempre que este componente for destrudo.

190
00:16:19,100 --> 00:16:29,670
Ento vamos implementar no gancho do ciclo de vida do stroy voc tambm precisa importar dados do ncleo angular.

191
00:16:29,720 --> 00:16:32,520
Ento, a voc deve adicionar no stroy.

192
00:16:33,050 --> 00:16:39,210
E isso agora obriga voc a adicionar um novo mtodo  sua energia componente em destruir.

193
00:16:41,340 --> 00:16:46,520
Onde voc simplesmente liga para essa assinatura e liga para cancelar a assinatura.

194
00:16:46,530 --> 00:16:50,750
Isso limpa a memria desnecessria porque voc no precisa mais dessa assinatura.

195
00:16:50,760 --> 00:16:52,690
O componente est morto de qualquer maneira.

196
00:16:52,770 --> 00:16:54,660
No iria cancelar a inscrio por padro embora.

197
00:16:54,750 --> 00:16:58,140
Ento  por isso que voc tem que fazer isso com tudo isso configurado.

198
00:16:58,290 --> 00:17:05,460
Ns obtemos  de ouro que  indefinido Inicialmente, tambm podemos configur-lo para false inicialmente, o que nos permite

199
00:17:05,460 --> 00:17:11,620
remover a definio de tipo de dados, mas que, em seguida, definimos como true ou false sempre

200
00:17:11,740 --> 00:17:13,630
que as alteraes so alteradas.

201
00:17:13,630 --> 00:17:20,560
Ento, com isso, o que podemos fazer  ir ao modelo de cabealho ou componente e agora definir o

202
00:17:20,560 --> 00:17:22,900
que queremos exibir sob quais circunstncias.

203
00:17:23,230 --> 00:17:25,860
Ento, o link de inscrio aqui.

204
00:17:25,870 --> 00:17:30,430
Portanto, esse item de lista s deve ser exibido se no estivermos bloqueados.

205
00:17:30,430 --> 00:17:30,930
Certo.

206
00:17:30,970 --> 00:17:37,000
Ento, vamos adicionar Engy if e set  igual a ele no est desligado queremos exibi-lo se no estamos

207
00:17:37,000 --> 00:17:40,480
ofendendo odiado o mesmo para fazer o login para o treinamento.

208
00:17:40,480 --> 00:17:41,710
O oposto  o caso.

209
00:17:41,800 --> 00:17:46,990
Isso s deve ser exibido se, em geral, o mesmo ocorre para que o log l

210
00:17:46,990 --> 00:17:50,140
fora tambm seja exibido apenas se formos justificados com isso.

211
00:17:50,350 --> 00:17:57,400
Se voltarmos para o aplicativo, voc pode ver que s vemos se inscrever e log in eu ainda era capaz de acessar o treinamento vai

212
00:17:57,400 --> 00:17:59,230
trabalhar sobre isso em um segundo.

213
00:17:59,620 --> 00:18:06,130
Mas se eu for fazer login e digitar qualquer coisa aqui, no temos nenhuma verificao e envio.

214
00:18:06,130 --> 00:18:08,510
Agora voc v as mudanas no menu.

215
00:18:08,680 --> 00:18:10,150
Ns no estamos sendo redirecionados.

216
00:18:10,150 --> 00:18:12,310
Ns no estamos protegendo nossas outras rotas.

217
00:18:12,310 --> 00:18:13,840
Essas so coisas que podemos adicionar.

218
00:18:14,110 --> 00:18:20,120
Mas, por enquanto, temos uma administrao estadual em funcionamento do status de nao infratora.

219
00:18:20,150 --> 00:18:28,240
Agora, com isso fora do caminho, vamos fazer o mesmo para o lado neth, porque se ns inspecionarmos, tambm

220
00:18:28,240 --> 00:18:32,680
teremos alguns itens que no queremos mostrar se no estivermos presos.

221
00:18:32,720 --> 00:18:35,350
Este  o seu desafio na prxima aula?

