WEBVTT
1

00:00:02.470 --> 00:00:05.120

Knouted we get the basics set.



2

00:00:05.120 --> 00:00:07.880

Let me dive into forums in angular.



3

00:00:07.880 --> 00:00:11.310

Now we already have a simple form your with input and a button.



4

00:00:11.370 --> 00:00:18.230

Now forms simply means that we get a more elaborate way of handling these inputs.



5

00:00:18.260 --> 00:00:24.560

We do this by adding the normal form element but we removed the action and then we'll place our form



6

00:00:24.560 --> 00:00:30.350

inputs like the button and any other inputs we might have inside that form.



7

00:00:30.410 --> 00:00:35.960

Just as you always create forms in H.M. we can now get rid of that disabled functionals years since



8

00:00:35.960 --> 00:00:36.790

it's just annoying.



9

00:00:36.800 --> 00:00:38.220

So let's remove that.



10

00:00:38.450 --> 00:00:43.580

And now the main differences we can remove the clicked Lisner from the button here and instead set the



11

00:00:43.580 --> 00:00:48.670

button to type submit it would now submit the form and send the request to the server.



12

00:00:48.680 --> 00:00:55.970

We don't want that but thankfully because we imported the forms module Engler will automatically detect



13

00:00:55.970 --> 00:00:59.750

this form element and manage it for us behind the scenes.



14

00:00:59.750 --> 00:01:04.250

This means that will prevent the submission at least if we add a special event which will do so in a



15

00:01:04.250 --> 00:01:04.960

second.



16

00:01:05.210 --> 00:01:08.300

And it all demands just the validity and the State of the forum.



17

00:01:08.390 --> 00:01:15.110

So the values we entered wherever it's valid and so on we can at Engy submit as a special event here



18

00:01:15.110 --> 00:01:19.450

provided by Engler and now call on add product here.



19

00:01:19.760 --> 00:01:24.920

So this will now execute this whenever we submit the form which of course is still the same as clicking



20

00:01:24.920 --> 00:01:25.360

the button.



21

00:01:25.370 --> 00:01:28.100

But technically something different happens.



22

00:01:28.100 --> 00:01:34.460

We now can also remove the two way binding and simply said Engy model like this which will just register



23

00:01:34.490 --> 00:01:36.660

as input as a control to angular.



24

00:01:36.740 --> 00:01:40.490

So it will tell it hey please keep track of it and its value.



25

00:01:40.520 --> 00:01:49.540

We don't have to assign a name to this may be product name like this and we can also add validators



26

00:01:49.540 --> 00:01:56.680

like required an Engler will pick this up and determine whether this is valid or not angular Denne behind



27

00:01:56.680 --> 00:02:03.010

the scenes creates a javascript object storing all that information about our form and we can get access



28

00:02:03.010 --> 00:02:08.550

to that object by adding a so-called local reference with a hash tag to the form element.



29

00:02:08.710 --> 00:02:15.290

This by default would simply give us access to the underlying HVM element but by assigning equal ends



30

00:02:15.360 --> 00:02:21.730

you form your written like this angular actually detects the syntax and gives us access to the Form



31

00:02:21.760 --> 00:02:24.030

object it created implicitly.



32

00:02:24.040 --> 00:02:31.060

Behind the scenes we can then pass this as an argument to add product and now simply console log to



33

00:02:31.060 --> 00:02:32.480

see what's inside of it.



34

00:02:32.640 --> 00:02:41.140

So let me comment this out and simply console log forum which is an argument I receive here.



35

00:02:41.140 --> 00:02:47.440

Now if we save this with the development service still running if I enter something here and click add



36

00:02:47.440 --> 00:02:51.860

product you'll see a whole object is locked on the right.



37

00:02:51.880 --> 00:02:58.330

This is the form object angular managed it contains values like if it's valid or not and it is because



38

00:02:58.330 --> 00:03:05.350

we did enter something Sodhi required validator is fulfilled and the value which in turn is object where



39

00:03:05.350 --> 00:03:09.670

we have key value pairs where the key is the name of the form control.



40

00:03:09.700 --> 00:03:15.780

So product name which we find here and the value is what we entered.



41

00:03:16.180 --> 00:03:22.480

And the cool thing about this is if this were empty for example and we submit this the form would not



42

00:03:22.480 --> 00:03:29.830

be belet So it's false because we added the required attribute here which is detected by angular.



43

00:03:29.950 --> 00:03:35.410

So it detects that the form is invalid because this field is required but empty.



44

00:03:35.800 --> 00:03:39.240

So this is especially useful for more complex forms of course.



45

00:03:39.400 --> 00:03:45.010

And here it would allow us to check if for invalid and only in this case.



46

00:03:45.180 --> 00:03:52.630

So only if the four Miss belet we would push a new product by reaching out to products and pushing for



47

00:03:52.640 --> 00:03:53.110

them.



48

00:03:53.170 --> 00:03:55.930

Value product name.



49

00:03:55.990 --> 00:04:02.740

Keep in mind product name is the name of the control we assigned and the template with that if we save



50

00:04:02.740 --> 00:04:08.210

this we get the same behavior as before but now Frue angler foreigns.



51

00:04:08.380 --> 00:04:11.100

If I entered invalid value nothing happens.



52

00:04:11.140 --> 00:04:15.130

And I guess this is already one advancement compared to the previous solution.



