1
00:00:02,180 --> 00:00:07,490
Let's work on authentication and for then I'm going to close the training section navigation section

2
00:00:07,490 --> 00:00:14,360
and go to the off section obviously right now if we have a quick look in both log in and sign up we

3
00:00:14,360 --> 00:00:18,690
simply call a method in the off service whenever we submit the form.

4
00:00:18,890 --> 00:00:27,110
So it's the off service where we should do some work and firebase or angle or fire helps us with authentication

5
00:00:27,160 --> 00:00:28,170
too.

6
00:00:28,220 --> 00:00:35,090
Now I will inject something from the angle of fire package to get started that something has to be imported

7
00:00:35,090 --> 00:00:35,840
first.

8
00:00:35,900 --> 00:00:49,180
So import something from angular fire to slash off and that something is angular fire off like dead.

9
00:00:49,190 --> 00:00:54,870
Now to make it work we need to add the all functionality to our app module though.

10
00:00:55,040 --> 00:00:58,380
Thus far we only added the angular Firestar module.

11
00:00:58,430 --> 00:01:00,980
We should also add the off module.

12
00:01:01,100 --> 00:01:03,300
So let's duplicate this important change.

13
00:01:03,300 --> 00:01:04,740
Fire store 2 off.

14
00:01:04,940 --> 00:01:10,250
And then it's the angular fire of module.

15
00:01:10,280 --> 00:01:17,390
This now has to be added to the imports array and the app module to unlock this functionality and ensure

16
00:01:17,390 --> 00:01:21,580
that we can inject this object we're looking for.

17
00:01:21,590 --> 00:01:25,670
So any of service let's now inject off.

18
00:01:25,730 --> 00:01:31,070
You can get to any name you want which is a type angular fire that's important.

19
00:01:31,310 --> 00:01:35,050
Now on this off object we can create a new user.

20
00:01:35,270 --> 00:01:42,150
So here in register user let's no longer create a user like this let's instead reach out to.

21
00:01:42,160 --> 00:01:50,170
Off and there SSD off functionality not a name and can be strange so-named this A.F. of four angular

22
00:01:50,180 --> 00:01:51,090
fire off.

23
00:01:51,200 --> 00:01:53,420
So this is the angle of fire of package.

24
00:01:53,570 --> 00:02:00,170
And this now is the yeah kind of off functionality kind of strange that we have to it like this but

25
00:02:00,170 --> 00:02:01,320
it is what it is.

26
00:02:01,490 --> 00:02:05,250
And now we can call create user with email and password.

27
00:02:05,810 --> 00:02:11,870
And there we should pass two arguments and well guess what email and password so we can pass off data

28
00:02:11,930 --> 00:02:15,100
e-mail and all data password.

29
00:02:15,140 --> 00:02:18,770
How convenient that our model has these two fields.

30
00:02:18,910 --> 00:02:25,210
Now this returns us a promise where we can listen to the success case.

31
00:02:25,280 --> 00:02:33,490
So result let's console larg result and where we can also handle potential errors that might occur like

32
00:02:33,490 --> 00:02:35,890
maybe an e-mail address that's already taken.

33
00:02:36,070 --> 00:02:46,020
So we can also for now simply console log the error or I only want to dispatch or call this off successfully.

34
00:02:46,250 --> 00:02:49,690
If it does well did indeed go successfully.

35
00:02:50,090 --> 00:02:58,200
So let's say if doesn't go back to our angular application and click on Sign-Up and let's try this out.

36
00:02:58,210 --> 00:03:03,500
Let's take an e-mail address and some password that is at least six characters long.

37
00:03:03,940 --> 00:03:10,350
And let's take a birth date and agree and submit and get an error.

38
00:03:10,430 --> 00:03:18,150
They're given sign in provider is disabled for this firebase project well you actually need to turn

39
00:03:18,210 --> 00:03:20,570
on authentication before it works.

40
00:03:20,580 --> 00:03:28,380
So in your firebase console go to offend cation and click on set up sign in method and dare email and

41
00:03:28,380 --> 00:03:34,650
password is the method we want to use which will still work email and password values on some firebase

42
00:03:34,650 --> 00:03:43,190
server and you should simply turn this on and it's safe with that if you go back to your angular app

43
00:03:43,910 --> 00:03:46,930
you cleared a console and hit submit again.

44
00:03:46,940 --> 00:03:48,670
It now actually locks you in.

45
00:03:48,740 --> 00:03:55,820
And we get this very cryptic success response which essentially means we were successful.

46
00:03:55,880 --> 00:04:01,850
So this is working and we can confirm that it works by going back to authentication clicking on users

47
00:04:01,880 --> 00:04:02,470
there.

48
00:04:02,600 --> 00:04:07,010
And this is a user we just created through angular fire.

49
00:04:07,010 --> 00:04:10,630
Now let's also implement user log in.

50
00:04:10,640 --> 00:04:18,050
So if we're dead in the log in function our service we can use A.F. off and there of S. section so to

51
00:04:18,050 --> 00:04:18,650
say.

52
00:04:18,950 --> 00:04:23,430
And then it's signed in with email and password.

53
00:04:23,600 --> 00:04:34,920
And there again we passed of data e-mail and of data password like this does again gives us a promise.

54
00:04:35,290 --> 00:04:40,750
So we can have a success in their fail case and that will just copy the code from the sign up because

55
00:04:40,750 --> 00:04:43,730
it's essentially the same.

56
00:04:43,780 --> 00:04:45,500
And now let's try this out too.

57
00:04:45,630 --> 00:04:50,800
Let's save this and go back to the angular application and on the logon screen.

58
00:04:51,010 --> 00:04:51,670
Let me try.

59
00:04:51,670 --> 00:04:55,190
Envelop credentials and I get an error.

60
00:04:55,240 --> 00:05:00,290
Let me try the Velika ones and I get the success case.

61
00:05:00,310 --> 00:05:03,630
Now I can also access training.

62
00:05:03,680 --> 00:05:07,080
However one thing doesn't work.

63
00:05:07,130 --> 00:05:09,630
The battery shows up but I can't go there.

64
00:05:12,040 --> 00:05:18,820
Now the reason for this is that we no longer create a user object which we would store here and therefore

65
00:05:18,820 --> 00:05:23,200
it is off which we use to check whether we are offended or not.

66
00:05:23,200 --> 00:05:28,240
In our off guard will always return false because it doesn't find a user.

67
00:05:28,330 --> 00:05:31,350
So this is actually working correctly.

68
00:05:31,490 --> 00:05:36,770
We can fix this error with a little bit of refactoring that will implement in the next lecture.

