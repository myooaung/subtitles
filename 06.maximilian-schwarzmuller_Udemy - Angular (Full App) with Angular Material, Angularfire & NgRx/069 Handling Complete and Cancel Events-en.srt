1
00:00:02,210 --> 00:00:03,310
We are already connected.

2
00:00:03,320 --> 00:00:11,740
Current training to the service but when we are done we still emit an event the same for when we cancel

3
00:00:11,740 --> 00:00:12,720
the training.

4
00:00:12,790 --> 00:00:18,880
I no longer want to admit an event so let's get rid of that event Demeter let's get rid of the output

5
00:00:18,910 --> 00:00:26,090
and even dimeter imports in the current training component in the training component where we implemented.

6
00:00:26,290 --> 00:00:29,330
Let's no longer listen to training exit.

7
00:00:29,380 --> 00:00:32,410
This is not how we stop or finished his training.

8
00:00:32,830 --> 00:00:36,520
Instead we now want to use our training service.

9
00:00:36,520 --> 00:00:39,410
We got to start exercise method.

10
00:00:39,460 --> 00:00:48,320
I also want to have a complete exercise method and I also want to have a cancel exercise method.

11
00:00:48,610 --> 00:00:54,460
Both don't necessarily need to take the exercise idea as an argument because we're storing the running

12
00:00:54,460 --> 00:00:56,490
exercise in the service anyways.

13
00:00:56,890 --> 00:01:00,040
No complete success case we're simply done.

14
00:01:00,040 --> 00:01:06,610
We completed the entire duration cancell is where we well cancelled the exercise.

15
00:01:06,610 --> 00:01:11,120
I didn't want to store how much we completed and calculate the calories we burn.

16
00:01:11,470 --> 00:01:16,190
Let's start with the simpler case complete exercise in there.

17
00:01:16,300 --> 00:01:26,230
I will set this running exercise to now and emit exercise changed by calling next and also emitting

18
00:01:26,230 --> 00:01:27,370
null here.

19
00:01:27,380 --> 00:01:30,720
This will basically mean we got no running exercise.

20
00:01:31,910 --> 00:01:39,110
Now I want to store all completed or canceled exercises so let's add a new propertied training service

21
00:01:39,660 --> 00:01:47,360
the exercises property which is of type exercise array and it's an empty array.

22
00:01:47,360 --> 00:01:54,330
Initially incomplete exercise before we now running exercise.

23
00:01:54,530 --> 00:02:01,220
I will actually store it is still running exercised because we didn't suddenly called from Oleate in

24
00:02:01,220 --> 00:02:10,370
the exercises great so I will reach out to this exercises and push this running exercise so this will

25
00:02:10,370 --> 00:02:15,080
push this object to exercises if we dare after set it to null.

26
00:02:15,140 --> 00:02:21,590
We will not set it to null in the array because we just set this running exercise to now sold this property

27
00:02:21,730 --> 00:02:25,200
not de-value it was pointing to previously.

28
00:02:25,220 --> 00:02:29,970
So now we're pushing this into our exercise array.

29
00:02:30,500 --> 00:02:33,980
However I don't just want to push it like dead.

30
00:02:34,100 --> 00:02:39,470
I will instead push a new object because I want to add some properties to first of all with the spread

31
00:02:39,470 --> 00:02:40,310
operator.

32
00:02:40,490 --> 00:02:44,010
We can copy all the properties of the running exercise.

33
00:02:44,120 --> 00:02:51,410
However I now also want to set a date which is just new date so the date when we completed the exercise

34
00:02:52,130 --> 00:02:54,780
and I'll set the stage to complete.

35
00:02:56,370 --> 00:02:59,390
Dessous the object and want to push two exercises.

36
00:02:59,450 --> 00:03:07,080
If we don't cancel it but regularly finish it now for cancelling the exercise is a bit different.

37
00:03:07,130 --> 00:03:10,420
All copy the code from complete exercise.

38
00:03:10,460 --> 00:03:16,600
I still want to set the running exercise for null and amidst this event I also still want to push the

39
00:03:16,600 --> 00:03:24,820
exercise to my array of exercises but of course the state will be cancelled and I also need to override

40
00:03:24,890 --> 00:03:33,010
the duration because we didn't complete the entire exercise and the calories.

41
00:03:33,190 --> 00:03:37,620
So let's assume that uncancel exercise we get the progress we made.

42
00:03:37,930 --> 00:03:44,380
This allows us to calculate how many calories we burned and how much of the duration we actually finished

43
00:03:44,890 --> 00:03:54,460
their duration is this running exercise duration times progress divided by 100.

44
00:03:54,460 --> 00:03:57,040
Because progress goes all the way up to 100.

45
00:03:57,270 --> 00:04:06,670
And for calories it's running exercise duration times progress divided by a 100.

46
00:04:06,680 --> 00:04:12,910
Now we're storing the exercise as we well did complete or to be precise.

47
00:04:12,990 --> 00:04:19,560
Cancelbot now with all that set up we should actually already switch in training component whenever

48
00:04:19,560 --> 00:04:25,380
we stop or cancel or complete it successfully because we have a subscription to the exercise changed

49
00:04:25,410 --> 00:04:31,530
and if it's now then ongoing training is set to false and current training.

50
00:04:31,790 --> 00:04:37,250
Well here we need to adjust something we no longer emit training exit.

51
00:04:37,250 --> 00:04:42,590
Instead here I access this trading service cancel.

52
00:04:42,680 --> 00:04:49,310
In this case here because we did cancel and there I need to pass the current progress so I passed this

53
00:04:49,400 --> 00:04:59,560
progress indie resume or start a resume timer method here if progress reaches 100 were also done.

54
00:04:59,580 --> 00:05:08,550
This is where I want to call this training service complete exercise and I don't need to pass anything

55
00:05:08,550 --> 00:05:09,520
here.

56
00:05:09,780 --> 00:05:15,780
With that if we save all these files let's again log in with some dummy data and let's try this out.

57
00:05:16,110 --> 00:05:24,000
Let's start some crunches here and let's wait for this to complete regularly without as clicking stop

58
00:05:24,000 --> 00:05:25,520
or anything like that.

59
00:05:25,710 --> 00:05:34,080
And this should now take 40 seconds so I'll quickly fast forward to when this is almost done and we're

60
00:05:34,080 --> 00:05:37,220
pretty much done years so we're.

61
00:05:37,380 --> 00:05:41,200
And of course we don't see if this was saved but we'll soon see it.

62
00:05:41,220 --> 00:05:46,080
Now let's start it again and actually stop and continue.

63
00:05:46,470 --> 00:05:48,210
So that looks good to me.

64
00:05:48,450 --> 00:05:55,740
And stop and really quit and we're all the way back or this is all working would be nice to see all

65
00:05:55,740 --> 00:06:01,940
our past exercises both complete and cancelled underdosed past exercises tab now.

66
00:06:02,250 --> 00:06:08,340
Finally this is where we will use a number of angular material component and connected to our data.

