WEBVTT
1
00:00:00.330 --> 00:00:05.990
Hello and welcome to this tutorial in today's Statoil we are going to synchronize with the shared model.

2
00:00:06.150 --> 00:00:13.370
So what we're going to do is still send the function of course and then initialize the length of one

3
00:00:13.380 --> 00:00:13.980
episode.

4
00:00:14.190 --> 00:00:22.020
So we're going to call the length of an episode episode and this core lengths that we go and we are

5
00:00:22.020 --> 00:00:23.800
going to initialize it to zero.

6
00:00:23.880 --> 00:00:27.280
But then this present length will be incremental.

7
00:00:27.570 --> 00:00:30.450
And speaking of increments in that it's exactly what we'll do.

8
00:00:30.660 --> 00:00:40.600
So we're going to use a while loop and use this trick to say while true Kallen to repeat what's going

9
00:00:40.600 --> 00:00:43.840
to happen now what's going to happen inside this world.

10
00:00:44.160 --> 00:00:49.360
And so the first thing that's going to happen in this loop is this incrementation of the length of an

11
00:00:49.360 --> 00:00:50.070
episode.

12
00:00:50.260 --> 00:00:56.900
So the first thing that we're going to do is incremented by 1 and to do so we can simply take episode

13
00:00:57.010 --> 00:01:02.680
lengths and add here plus equals 1.

14
00:01:03.200 --> 00:01:06.440
And now we are going to synchronize with the share more.

15
00:01:06.560 --> 00:01:13.520
That means that it is now that the agent will get will use the shared model to do its little exploration

16
00:01:13.700 --> 00:01:18.730
on a certain number of steps and how is the model going to get this shared model.

17
00:01:18.860 --> 00:01:27.710
Well we need to take our moral than that and then use the load state Dick's method because we're going

18
00:01:27.710 --> 00:01:37.310
to use it to get the state dictionary of our shared model so we have to put the shared model first and

19
00:01:37.310 --> 00:01:41.870
apply then the static method to get the parameters of the shared model.

20
00:01:41.900 --> 00:01:48.500
And that's how our model here will get the shared model to its little exploration Okay.

21
00:01:48.500 --> 00:01:53.670
And once the model gets this shared model now we have to distinguish two cases.

22
00:01:53.840 --> 00:02:03.280
The first one is if done meaning if the game is done so the game is done then what happens in that case.

23
00:02:03.530 --> 00:02:09.840
Well we have to re-initialize the hidden states and the cell states of the LSD and the mall.

24
00:02:09.950 --> 00:02:17.510
And so that's why I'm going to take See X the cell States and also age X the hidden states and I'm going

25
00:02:17.510 --> 00:02:21.030
to re-initialize them books and how are you going to re-initialize them.

26
00:02:21.170 --> 00:02:29.080
Well with only zeroes there will be a vector of 256 zeroes because remember the outputs of the rest.

27
00:02:29.270 --> 00:02:31.770
As I mentioned 1 and 256.

28
00:02:31.820 --> 00:02:38.970
So there we go we are going to initialize them by using the torch library then the zero's function.

29
00:02:39.170 --> 00:02:46.730
And since we want a vector of 256 zeroes we are going to hear the dimensions one for the vector and

30
00:02:46.730 --> 00:02:51.560
256 for the number of elements which will be zeroes and then we go.

31
00:02:51.770 --> 00:02:58.570
But then we will convert that into a torch Voivode because then some gradients will be computed.

32
00:02:58.640 --> 00:03:02.000
So we need to integrate this with a gradient.

33
00:03:02.030 --> 00:03:02.510
All right.

34
00:03:02.540 --> 00:03:09.860
And we're going to do the same for the hidden states just below and really analyze them the same way.

35
00:03:09.980 --> 00:03:10.680
There we go.

36
00:03:10.790 --> 00:03:13.050
So that's if the game is done.

37
00:03:13.360 --> 00:03:20.810
And now the other case which we can access with Else else than what happens in that case.

38
00:03:20.990 --> 00:03:27.270
Well we're going to keep the old cell States and hidden stakes and so very easily we can keep the old

39
00:03:27.270 --> 00:03:37.910
ones this way by typing see X equals variable c x that data and same for that in the States we can simply

40
00:03:39.050 --> 00:03:45.580
add here H x equals variable x x that data are at.

41
00:03:45.650 --> 00:03:46.570
Good thing done.

42
00:03:46.580 --> 00:03:52.880
Now we can get out of the else because we we're basically done with these two cases whether the game

43
00:03:52.910 --> 00:03:58.340
is over or not but we stay in the while loop because now we're going to do some more things which basically

44
00:03:58.340 --> 00:04:00.450
are all the training process.

45
00:04:00.530 --> 00:04:05.960
And so what we're going to do now is initialize several variables which are going to be at the heart

46
00:04:06.050 --> 00:04:07.990
of the computations in the training.

47
00:04:08.180 --> 00:04:13.660
So let's do this we're going to need the values which remember is the output of the critic.

48
00:04:13.790 --> 00:04:15.170
That's the function.

49
00:04:15.170 --> 00:04:17.850
And we will initialize them as an empty nest.

50
00:04:17.960 --> 00:04:22.790
This way then we're going to need to lug probabilities.

51
00:04:22.930 --> 00:04:27.570
So luck probs and we will also initialize it as an empty list.

52
00:04:27.590 --> 00:04:33.540
Then of course we're going to need all the words that we will also initialize as an empty list.

53
00:04:33.650 --> 00:04:38.810
And finally we're going to need the entropy is something new.

54
00:04:38.960 --> 00:04:43.240
But this is indeed at the heart of the training conditions.

55
00:04:43.280 --> 00:04:45.120
So until just as well.

56
00:04:45.170 --> 00:04:50.690
So now that we initialize these four variables we can start a new FOR loop and then this nymphal will

57
00:04:50.690 --> 00:04:53.350
update the values of these four variables.

58
00:04:53.420 --> 00:04:59.330
And so this new Foluke is going to be a full hoop over the expiration steps and therefore the looping

59
00:04:59.330 --> 00:05:01.530
variable is going to be our steps.

60
00:05:01.550 --> 00:05:11.570
So for a step in range and inside we can directly put perhaps dot non-stops because parameter in some

61
00:05:11.660 --> 00:05:15.170
steps is exactly the number of steps of the acceleration.

62
00:05:15.170 --> 00:05:19.190
So for all the steps in the acceleration What do we do.

63
00:05:19.370 --> 00:05:22.690
Well we're going to get the predictions of the model.

64
00:05:22.740 --> 00:05:28.730
Now what is returned by the model and to get these predictions we can simply take the model and apply

65
00:05:28.730 --> 00:05:33.670
it to the inputs that input signal it goes through the brains in the model.

66
00:05:33.830 --> 00:05:39.020
And that will give us the outputs but it will get several outputs you know it will get us the values

67
00:05:39.020 --> 00:05:42.010
of the function which is the output of the critic.

68
00:05:42.200 --> 00:05:48.560
Then the q values QSA which is the output of the actor but also don't forget that it will also output

69
00:05:48.680 --> 00:05:54.830
the topple of Doheny states and small states because remember if we go back to our model well in the

70
00:05:54.830 --> 00:06:00.230
forward function we can see that indeed it returns the output of the critic.

71
00:06:00.320 --> 00:06:08.090
That is the value of the function yes then the output of the actor which of the cube values QSA and

72
00:06:08.090 --> 00:06:14.930
also the output of the CM which is this double checks and see X then States and the cell States.

73
00:06:14.930 --> 00:06:16.910
So we must be careful with that.

74
00:06:16.910 --> 00:06:22.310
This is quite different than what happened before and therefore we're now going to apply them all to

75
00:06:22.310 --> 00:06:24.470
the inputs which is the state.

76
00:06:24.530 --> 00:06:28.020
But now there are several things to do which are related to torture.

77
00:06:28.030 --> 00:06:31.130
But that gives of course power to what we're doing.

78
00:06:31.190 --> 00:06:39.920
The first thing we need to do is to squeeze in the states to add this dimension that must have the index

79
00:06:39.920 --> 00:06:40.880
0.

80
00:06:40.910 --> 00:06:47.080
That's because the model can only accept a batch of inputs and not an end by itself in a vector or intenser.

81
00:06:47.240 --> 00:06:53.320
That's the first thing we must do and squeeze but then that's not all we need to convert our input states

82
00:06:53.360 --> 00:06:58.950
into a torch voidable so and I in here the very.

83
00:06:59.180 --> 00:07:05.660
So now we are with the state police state but remember that the inputs of the four functions are actually

84
00:07:05.660 --> 00:07:06.990
the input image.

85
00:07:06.990 --> 00:07:14.660
That's what we just took care of but also this type of age X the states and the cell States and therefore

86
00:07:14.900 --> 00:07:16.500
we need to add here.

87
00:07:16.610 --> 00:07:23.160
This second part of the input with its appeal of age X and 6.

88
00:07:23.190 --> 00:07:23.690
All right.

89
00:07:23.730 --> 00:07:26.410
And we must take up the parenthesis.

90
00:07:26.430 --> 00:07:32.550
There we go we have our two inputs the first one is the input states that is input images all converted

91
00:07:32.550 --> 00:07:38.580
into towards variable and squeezed to add this fake dimension of the batch and they stop all of the

92
00:07:38.760 --> 00:07:40.260
states and the South states.

93
00:07:40.440 --> 00:07:41.630
So we're all good to go.

94
00:07:41.670 --> 00:07:43.890
We are ready to get our predictions.

95
00:07:44.100 --> 00:07:46.360
And now since this return.

96
00:07:46.500 --> 00:07:52.530
Well our three predictions the output of the critic the up to the actor and the top all of the reinstates

97
00:07:52.530 --> 00:07:54.430
necessitated by the CME.

98
00:07:54.630 --> 00:07:59.840
Well we're going to introduce some three new variables now which will release three outputs.

99
00:07:59.910 --> 00:08:05.380
So then we get the first output is the value of the V function which is the output of the critic.

100
00:08:05.520 --> 00:08:07.960
So we're going to call it that.

101
00:08:08.490 --> 00:08:08.960
So there we go.

102
00:08:08.970 --> 00:08:10.250
That's the first output.

103
00:08:10.350 --> 00:08:14.630
Then the second output is going to be the output of the actor.

104
00:08:14.760 --> 00:08:16.820
And that's the Q values QSA.

105
00:08:17.130 --> 00:08:24.570
But since the q values are associated to the actions we can also call them the action values.

106
00:08:24.690 --> 00:08:25.550
All right.

107
00:08:25.710 --> 00:08:28.850
And then find an output returned by the morrow.

108
00:08:28.920 --> 00:08:37.380
That's the double of the hidden sales tax and the cell states see X and then we go we have three outputs

109
00:08:37.620 --> 00:08:40.110
returned by them all perfect.

110
00:08:40.110 --> 00:08:45.750
So now that we have the preditions we need to use a soft Max to play the right action.

111
00:08:45.750 --> 00:08:48.560
And so now thats going to be exactly the same as what we did before.

112
00:08:48.600 --> 00:08:57.320
The next step is to get our probabilities so we can call them from and thats where we used to soughed

113
00:08:57.320 --> 00:09:05.570
Max method which we take from the functional module that has a shot at f f that soughed Max and that

114
00:09:05.570 --> 00:09:12.270
will generate a distribution of probabilities of the input that we're about to put right now and which

115
00:09:12.290 --> 00:09:19.150
of course the actual values that is the q values that is the outputs of the actor in the model.

116
00:09:19.220 --> 00:09:25.070
Occasionally we have our probabilities but as you noticed we're going to work with the entropy and together

117
00:09:25.130 --> 00:09:31.280
entropy would not only lead the probabilities but also the LUGG probabilities because the entropy is

118
00:09:31.280 --> 00:09:37.280
the sum of the product Lucke prob. times trub all this multiplied by minus 1.

119
00:09:37.400 --> 00:09:46.420
And so we also need to get our love of which same are going to be generated from LUGG soft max.

120
00:09:46.460 --> 00:09:51.580
So instead of taking a distribution of the probabilities we take a distribution of the probabilities

121
00:09:51.860 --> 00:10:01.260
and that's we do it with LUGG soughed knocks the Optimax function to say we apply to the cube and use

122
00:10:02.500 --> 00:10:04.490
which we call the action values.

123
00:10:04.500 --> 00:10:07.520
All right so now we have the prob and the lock up.

124
00:10:07.600 --> 00:10:11.700
And so we are ready to get the entropy and the entropy.

125
00:10:12.250 --> 00:10:13.680
What is the formula for that.

126
00:10:13.780 --> 00:10:19.830
Well as I just mentioned we take the luck prompt we multiply by the product.

127
00:10:20.200 --> 00:10:28.250
Then we're going to take the sum of all this and to do that we can add here that some one we actually

128
00:10:28.250 --> 00:10:29.920
use the street many times now.

129
00:10:30.230 --> 00:10:33.500
And as we said we multiply this by minus 1.

130
00:10:33.740 --> 00:10:37.150
So it's the minus of the sum of the product.

131
00:10:37.170 --> 00:10:38.600
Lot of times.

132
00:10:39.140 --> 00:10:39.750
Perfect.

133
00:10:39.860 --> 00:10:45.380
And now we are going to store this entropy that was just computed in our list of entropy.

134
00:10:45.650 --> 00:10:48.550
There we go we have the last computation of the entropy.

135
00:10:48.590 --> 00:10:53.660
And so we need to store it in the entropies list and to do this nothing more simple we're going to use

136
00:10:53.660 --> 00:10:57.450
the append function of course because entropies is a list.

137
00:10:57.500 --> 00:11:04.790
So we take our entropies list then start and we use the append function to add the entropy that which

138
00:11:04.790 --> 00:11:06.550
is computed.

139
00:11:06.560 --> 00:11:08.440
All right so we're going to take a break now.

140
00:11:08.450 --> 00:11:14.210
We're going to do this step by step in the next story will play the action by taking a random draw of

141
00:11:14.360 --> 00:11:16.740
this generated distribution of probabilities.

142
00:11:17.030 --> 00:11:22.310
And after we play the action we'll get the value of this state and we will eventually store our new

143
00:11:22.310 --> 00:11:24.310
transition states reward.

144
00:11:24.360 --> 00:11:29.430
And so that will be a new big step done and we will complete that in the next hurdle.

145
00:11:29.570 --> 00:11:31.020
Until then I.
