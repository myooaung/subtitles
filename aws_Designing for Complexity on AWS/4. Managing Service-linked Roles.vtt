WEBVTT
1
00:00:00.940 --> 00:00:03.780
[Autogenerated] a service linked role is a special roll

2
00:00:03.780 --> 00:00:05.890
that can only be assumed by an A.

3
00:00:05.890 --> 00:00:07.190
W s service.

4
00:00:07.190 --> 00:00:10.240
A service linked role gives the service permission to

5
00:00:10.240 --> 00:00:13.440
call other AWS services on your behalf.

6
00:00:13.440 --> 00:00:14.520
For example,

7
00:00:14.520 --> 00:00:17.870
the easy to auto scaling service needs to create

8
00:00:17.870 --> 00:00:20.340
and terminate E C two instances,

9
00:00:20.340 --> 00:00:24.990
register instances with a load balancer and manage CloudWatch alarms.

10
00:00:24.990 --> 00:00:28.870
The service linked role for easy to auto scaling gives that

11
00:00:28.870 --> 00:00:32.550
service permission to perform those activities in your AWS

12
00:00:32.550 --> 00:00:36.000
account in order to use a service linked role.

13
00:00:36.000 --> 00:00:39.160
The I am user creating the service must have

14
00:00:39.160 --> 00:00:42.340
permission to create a service linked role.

15
00:00:42.340 --> 00:00:44.240
Let me say that again.

16
00:00:44.240 --> 00:00:48.790
If a user does not have permission to create a service linked role,

17
00:00:48.790 --> 00:00:50.120
they may experience.

18
00:00:50.120 --> 00:00:54.220
I am errors when trying to launch in AWS service that

19
00:00:54.220 --> 00:00:56.840
relies on a service linked role.

20
00:00:56.840 --> 00:01:00.440
Once a service think role has been added to your account,

21
00:01:00.440 --> 00:01:02.840
then the service that needs it will be ready to do,

22
00:01:02.840 --> 00:01:09.210
and other users shouldn't have a problem using that service.

23
00:01:09.210 --> 00:01:13.950
Let's take a look at the service linked roles in an AWS account and how

24
00:01:13.950 --> 00:01:19.440
service linked roles are added when using certain AWS services.

25
00:01:19.440 --> 00:01:25.840
If you go to roles, notice how some of them are prefixed with AWS services.

26
00:01:25.840 --> 00:01:30.240
These are the service linked roles that have been added to this account.

27
00:01:30.240 --> 00:01:36.140
Suppose we wanted to create a load balancer in our AWS account.

28
00:01:36.140 --> 00:01:38.640
This is just for an example.

29
00:01:38.640 --> 00:01:41.840
I'm not really adding anything to this load balancer.

30
00:01:41.840 --> 00:01:44.690
Notice how it's in the provisioning state.

31
00:01:44.690 --> 00:01:48.000
It's going to be there for a little bit because we don't yet

32
00:01:48.000 --> 00:01:52.040
have the AWS service role for load balancers,

33
00:01:52.040 --> 00:01:55.780
so the service can't do what it needs to do in our account until it

34
00:01:55.780 --> 00:01:59.440
has permissions from that service linked role.

35
00:01:59.440 --> 00:02:01.590
When we refresh our roles list,

36
00:02:01.590 --> 00:02:05.610
notice how the elastic load balancing AWS services

37
00:02:05.610 --> 00:02:08.840
linked role has been added to our list.

38
00:02:08.840 --> 00:02:14.140
If we go back to the load balance or create now, it's active.

39
00:02:14.140 --> 00:02:19.250
Because the EEC to admin role had E C two full access, it was able to.

40
00:02:19.250 --> 00:02:23.830
Add the service role for elastic load balancing without any problem.

41
00:02:23.830 --> 00:02:26.950
If you determine that you have too many AWS service

42
00:02:26.950 --> 00:02:29.160
linked roles in your account,

43
00:02:29.160 --> 00:02:34.440
you can always check on last account activity to see if it's even being used.

44
00:02:34.440 --> 00:02:40.240
Then you can go ahead and remove those from your account.

45
00:02:40.240 --> 00:02:44.340
Keep in mind that there can be some delay with the last activity.

46
00:02:44.340 --> 00:02:47.690
So in this case we still have elastic load balancers,

47
00:02:47.690 --> 00:02:50.360
so we can't delete that until all of those load

48
00:02:50.360 --> 00:02:54.240
balancers have also been deleted.

49
00:02:54.240 --> 00:02:56.940
It's a good idea to go through from time to time and

50
00:02:56.940 --> 00:02:59.230
clean up roles that aren't being used,

51
00:02:59.230 --> 00:03:05.640
so you're not granting more permissions than you need to way to go.

52
00:03:05.640 --> 00:03:10.600
You now know about I am users and groups and how you can use those to

53
00:03:10.600 --> 00:03:14.940
improve the organization of your account and manage access.

54
00:03:14.940 --> 00:03:18.220
You've also seen how to apply policies to limit what a

55
00:03:18.220 --> 00:03:21.040
user could do within an AWS account.

56
00:03:21.040 --> 00:03:25.700
We've covered I am roles and how they could be used by allowing a user to

57
00:03:25.700 --> 00:03:31.290
assume permissions they don't normally have and how AWS services use rolls

58
00:03:31.290 --> 00:03:34.940
to interact with other AWS services for you.

59
00:03:34.940 --> 00:03:36.420
Join me in the next module,

60
00:03:36.420 --> 00:03:43.000
where we'll talk about managing cross account access with roles and resource policies

