WEBVTT
1
00:00:02.640 --> 00:00:06.280
[Autogenerated] Let's go to a multi account AWS organization and

2
00:00:06.280 --> 00:00:10.850
create a role in one account to allow access to users from a

3
00:00:10.850 --> 00:00:15.260
different AWS account in the organization will create a group in

4
00:00:15.260 --> 00:00:19.160
the trusted account and add a user to the group who we want to

5
00:00:19.160 --> 00:00:21.440
authorized to assume the role.

6
00:00:21.440 --> 00:00:26.240
We'll then see this type of cross account access in action.

7
00:00:26.240 --> 00:00:28.940
Here's our AWS organization.

8
00:00:28.940 --> 00:00:31.920
I'm currently logged in to the master account.

9
00:00:31.920 --> 00:00:37.830
This shows up as the root of the organization we can See the two accounts Demo,

10
00:00:37.830 --> 00:00:42.660
which is the master account denoted by the star and the security count,

11
00:00:42.660 --> 00:00:46.070
which is where we will create the I am users,

12
00:00:46.070 --> 00:00:51.060
which will then assume roles to access other AWS accounts in

13
00:00:51.060 --> 00:00:53.580
the organization under the Global app.

14
00:00:53.580 --> 00:01:00.240
One organizational unit is the Global app Dev AWS account.

15
00:01:00.240 --> 00:01:05.060
This will be the trusting account where we will define a role to access.

16
00:01:05.060 --> 00:01:07.600
Resource is in that account.

17
00:01:07.600 --> 00:01:11.790
Let's go to the AWS console for the Globo app Deva account

18
00:01:11.790 --> 00:01:14.690
so we can create that role on the top,

19
00:01:14.690 --> 00:01:17.870
right we can see the name of the account Globo app,

20
00:01:17.870 --> 00:01:20.790
Dev and we're on the rolls page.

21
00:01:20.790 --> 00:01:25.570
Let's create a role to allow another AWS account.

22
00:01:25.570 --> 00:01:28.820
Access to some resource is in this account.

23
00:01:28.820 --> 00:01:32.540
I'll get the account IDE of the security account.

24
00:01:32.540 --> 00:01:35.420
Then we'll set the permissions for this demo.

25
00:01:35.420 --> 00:01:39.840
We're going to allow E C two full access.

26
00:01:39.840 --> 00:01:43.940
I'll select the AWS managed policy.

27
00:01:43.940 --> 00:01:45.940
We won't create any tags.

28
00:01:45.940 --> 00:01:49.240
Then we'll give the role a name and a description.

29
00:01:49.240 --> 00:01:55.010
I'll call it, allow easy to full access and give it a description.

30
00:01:55.010 --> 00:02:00.090
Will hit, create role and let's take a look at what was created.

31
00:02:00.090 --> 00:02:05.060
I'll copy the role error n since we'll need this in the trusted account to

32
00:02:05.060 --> 00:02:09.740
create the policy that will allow users to assume this role.

33
00:02:09.740 --> 00:02:13.390
The other thing that you want to copy is the link to users

34
00:02:13.390 --> 00:02:16.830
who can switch roles in the console.

35
00:02:16.830 --> 00:02:20.050
This will pre fill the required fields when they go to

36
00:02:20.050 --> 00:02:23.840
switch role and save a little bit of time.

37
00:02:23.840 --> 00:02:29.700
Under permissions are the permissions policies or those things that say what

38
00:02:29.700 --> 00:02:34.340
access we're going to allow to the resource is in this account.

39
00:02:34.340 --> 00:02:36.700
In this case, it's Amazon, etc.

40
00:02:36.700 --> 00:02:40.410
To full access under trust relationships.

41
00:02:40.410 --> 00:02:43.680
This is the policy that's defining who we are going

42
00:02:43.680 --> 00:02:45.820
to allow to assume this role.

43
00:02:45.820 --> 00:02:48.230
Currently under trusted entities,

44
00:02:48.230 --> 00:02:52.240
it lists the account number of our security account.

45
00:02:52.240 --> 00:02:59.530
You can edit the trust relationship to add or modify any trusted entities.

46
00:02:59.530 --> 00:03:02.690
This is where you could change the principles that

47
00:03:02.690 --> 00:03:04.940
error allowed to assume the role.

48
00:03:04.940 --> 00:03:06.360
I'll go ahead and cancel out,

49
00:03:06.360 --> 00:03:11.440
since we want to allow any member of that account to assume this role.

50
00:03:11.440 --> 00:03:14.630
Now let's switch over to the security account so that we

51
00:03:14.630 --> 00:03:18.970
can create a group and define a policy that allows certain

52
00:03:18.970 --> 00:03:21.640
users to assume this role.

53
00:03:21.640 --> 00:03:25.830
Here's the security account where the I am users are defined.

54
00:03:25.830 --> 00:03:31.920
Let's first create a policy that will allow the user to assume the EEC to

55
00:03:31.920 --> 00:03:37.140
full access role that we just created in the other account.

56
00:03:37.140 --> 00:03:42.600
This policy will allow the assume roll action on the role

57
00:03:42.600 --> 00:03:46.140
that we just created from the other account.

58
00:03:46.140 --> 00:03:51.800
As you set up your account in AWS organizations with multiple AWS accounts,

59
00:03:51.800 --> 00:03:54.210
you'll probably want to come up with some sort of naming

60
00:03:54.210 --> 00:03:57.630
convention for all of your groups and policies that you're

61
00:03:57.630 --> 00:03:59.740
going to be assigning users to.

62
00:03:59.740 --> 00:04:02.300
I'll just call this one, assume global app.

63
00:04:02.300 --> 00:04:08.140
One de V C to policy, and I'll put a lot of details in the description.

64
00:04:08.140 --> 00:04:10.340
I'll create the policy.

65
00:04:10.340 --> 00:04:14.400
Now we're ready to create a group and attach this policy to.

66
00:04:14.400 --> 00:04:19.360
The group will go to groups notice there's only one group right now.

67
00:04:19.360 --> 00:04:20.660
Administrators.

68
00:04:20.660 --> 00:04:24.280
I'd like to create a new group to manage which users

69
00:04:24.280 --> 00:04:27.740
will be able to assume this role.

70
00:04:27.740 --> 00:04:30.990
We'll give it a group name again.

71
00:04:30.990 --> 00:04:33.630
You want to come up with some sort of naming convention

72
00:04:33.630 --> 00:04:35.640
to keep track of all of your groups?

73
00:04:35.640 --> 00:04:39.040
We'll search for the policy that we just created.

74
00:04:39.040 --> 00:04:40.280
Select that.

75
00:04:40.280 --> 00:04:42.040
Then go to the next step.

76
00:04:42.040 --> 00:04:46.840
We'll double check the information, then create the group.

77
00:04:46.840 --> 00:04:49.540
Let's take a look at our users.

78
00:04:49.540 --> 00:04:54.240
I've created three users so far an administrator who's in the administrators

79
00:04:54.240 --> 00:04:58.890
group than to other users that I haven't assigned to any group.

80
00:04:58.890 --> 00:05:02.990
Let's assign user one to the group that can assume the role and

81
00:05:02.990 --> 00:05:08.140
will leave user to unassigned to any group.

82
00:05:08.140 --> 00:05:11.100
Now that the user has been added to that group,

83
00:05:11.100 --> 00:05:14.370
let's log in as that user assumed the role,

84
00:05:14.370 --> 00:05:17.940
then spin up in easy to instance in the Dev account.

85
00:05:17.940 --> 00:05:21.970
We're now logged in as user one from the security account.

86
00:05:21.970 --> 00:05:26.540
Let's use the role URL to configure the role for this user.

87
00:05:26.540 --> 00:05:29.580
Notice how it pre fills theater count and roll.

88
00:05:29.580 --> 00:05:33.140
This user can customize the display name if they wish.

89
00:05:33.140 --> 00:05:35.440
I'll call it Global One Dev E C.

90
00:05:35.440 --> 00:05:41.440
Two and I'll make it blue Notice how the username

91
00:05:41.440 --> 00:05:46.000
changed from Dev one to Global One Dev.

92
00:05:46.000 --> 00:05:46.160
E.

93
00:05:46.160 --> 00:05:46.370
C.

94
00:05:46.370 --> 00:05:46.960
Two.

95
00:05:46.960 --> 00:05:49.410
I'm now in the Global One Dev account.

96
00:05:49.410 --> 00:05:54.240
Let's go to Easy to and launch an instance We successfully launched an

97
00:05:54.240 --> 00:05:59.650
instance we can See it initializing Let's go back to the Global One Dev

98
00:05:59.650 --> 00:06:04.790
account as the admin user to see this instance that we've just launched

99
00:06:04.790 --> 00:06:08.240
using a different user from a different account.

100
00:06:08.240 --> 00:06:13.620
Here's our global app Dev user we'll check out easy to was

101
00:06:13.620 --> 00:06:20.320
select the region where it was launched Ohio and we can see

102
00:06:20.320 --> 00:06:22.940
the running instantiate was launched.

103
00:06:22.940 --> 00:06:26.940
Once our user is finished doing things in the DEV account,

104
00:06:26.940 --> 00:06:33.240
they can select the menu, then go back to use her one.

105
00:06:33.240 --> 00:06:35.660
Now the user has switched back to their normal

106
00:06:35.660 --> 00:06:38.940
permissions in their original account.

107
00:06:38.940 --> 00:06:41.310
Let's try logging in as user too,

108
00:06:41.310 --> 00:06:44.640
and see what happens when we try to assume the role.

109
00:06:44.640 --> 00:06:45.480
Remember,

110
00:06:45.480 --> 00:06:49.340
User to was not added to the group that is allowed to

111
00:06:49.340 --> 00:06:52.380
assume the role we're logged in as user,

112
00:06:52.380 --> 00:06:53.240
too.

113
00:06:53.240 --> 00:06:59.440
Let's try to assume the role we've used the same URL to fill in the information.

114
00:06:59.440 --> 00:07:03.740
We'll skip the optional display name and we get an error.

115
00:07:03.740 --> 00:07:09.340
Let's go ahead and add user to to the group.

116
00:07:09.340 --> 00:07:15.200
Now, if we try again, user to is able to assume the role.

117
00:07:15.200 --> 00:07:21.130
Let's go terminate that instance that was started before the

118
00:07:21.130 --> 00:07:24.010
role allows full control over easy to.

119
00:07:24.010 --> 00:07:26.750
So we're able to terminate these instantiate.

120
00:07:26.750 --> 00:07:29.860
Remember, when you're using rolls to access,

121
00:07:29.860 --> 00:07:33.960
resource is in another account there to places where the

122
00:07:33.960 --> 00:07:37.330
access must be allowed in the trusted account,

123
00:07:37.330 --> 00:07:41.870
you must have a policy that allows users to assume the role

124
00:07:41.870 --> 00:07:44.840
that you've created in the trusting account.

125
00:07:44.840 --> 00:07:46.780
And in the trusting account,

126
00:07:46.780 --> 00:07:52.940
the trusted account must be listed as a trusted entity.

127
00:07:52.940 --> 00:07:56.440
If we were to remove this account as a principal,

128
00:07:56.440 --> 00:08:03.000
no one in the other account could assume the role. Both policies have to be in place

