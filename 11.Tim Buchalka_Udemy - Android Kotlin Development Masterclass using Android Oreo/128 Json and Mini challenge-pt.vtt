WEBVTT
1

00:00:05.970 --> 00:00:11.630

Certo, continuando do ltimo vdeo, comeamos a falar sobre esse novo formato de dados que recebemos



2

00:00:11.630 --> 00:00:17.900

quando alteramos o parmetro para @ format = Json. Os navegadores em geral no renderizam muito bem



3

00:00:17.900 --> 00:00:19.210

os dados do json.



4

00:00:19.250 --> 00:00:24.290

Ento, como eu mencionei, voc provavelmente ter a mesma exibio, independentemente do navegador que estiver usando, a menos que



5

00:00:24.290 --> 00:00:27.710

voc esteja usando o Internet Explorer, que provavelmente no conseguir manipular os dados.



6

00:00:28.100 --> 00:00:33.150

Mas isso mostra a beleza de uma API porque est fazendo todo o trabalho pesado para voc.



7

00:00:33.310 --> 00:00:38.500

Assim, voc pode ver como agora temos dados Json em vez de XML apenas alterando um argumento.



8

00:00:38.650 --> 00:00:43.400

Agora eu quero falar muito brevemente sobre isso, s para voc entender como o Json funciona.



9

00:00:43.400 --> 00:00:46.180

Agora o que voc est vendo na tela



10

00:00:46.310 --> 00:00:54.520

aqui no  um cdigo Json bastante vlido, ento ignore o feed do json Flickr e os parnteses iniciais no incio aqui, e eu voltarei



11

00:00:54.520 --> 00:00:55.960

a isso em um minuto.



12

00:00:56.320 --> 00:01:02.290

Mas qualquer coisa entre as chaves, a primeira chave esquerda e a chave direita, 



13

00:01:02.290 --> 00:01:09.450

um objeto, e qualquer coisa entre colchetes  uma matriz, ento voc pode ver que temos um colchete



14

00:01:09.460 --> 00:01:10.160

aqui, temos



15

00:01:10.180 --> 00:01:11.710

alguns itens h.



16

00:01:14.480 --> 00:01:17.860

Ns vamos ter que ir at o fundo, h os colchetes



17

00:01:21.210 --> 00:01:23.520

fechados como voc pode ver l embaixo.



18

00:01:23.840 --> 00:01:29.420

Ento, isso  uma matriz, e itens que esto dentro de um objeto so chamados de



19

00:01:29.430 --> 00:01:36.120

propriedades, ento volte para o topo do arquivo novamente, ttulo neste caso aqui, e link - ambas so propriedades.



20

00:01:36.200 --> 00:01:39.590

Ambos aparecem no objeto principal e, em seguida, as propriedades com o



21

00:01:39.650 --> 00:01:44.760

ttulo e o link dos nomes aparecem na matriz de itens, como voc pode ver aqui, ttulo e link.



22

00:01:44.810 --> 00:01:50.340

Agora itens  uma matriz de objetos e voc pode ver onde cada objeto na matriz comea



23

00:01:50.390 --> 00:01:51.650

e termina pelas chaves.



24

00:01:52.040 --> 00:01:57.020

Ento, novamente, ns temos essa chave aqui que abre e fecha, ento essa  uma entrada, que  uma entrada



25

00:01:57.160 --> 00:01:58.340

de array, se voc quiser.



26

00:01:58.580 --> 00:02:04.470

Assim, cada objeto comea e termina com uma chave e  separado do anterior com uma vrgula.



27

00:02:04.810 --> 00:02:08.530

Ento, esses objetos so os registros individuais, um para cada imagem.



28

00:02:08.530 --> 00:02:13.600

Agora voc pode estar pensando que parece um pouco complexo, mas essencialmente, se voc lembra



29

00:02:13.600 --> 00:02:16.900

que um objeto comea com uma chave e uma matriz



30

00:02:17.080 --> 00:02:21.260

 o colchete, ento faz sentido. E a boa notcia  que no precisamos nos preocupar com isso.



31

00:02:21.290 --> 00:02:26.500

Ns temos um computador para fazer isso por ns. Ento voc pode ver que temos muitos itens na



32

00:02:26.500 --> 00:02:29.710

matriz que voc esperaria, porque cada imagem  um item separado.



33

00:02:29.730 --> 00:02:36.300

Agora, cada item tem uma propriedade de tags, voc pode ver aqui em baixo para uma, que  o que pesquisamos.



34

00:02:36.370 --> 00:02:40.900

Assim, todos esses itens devem ter tags que contenham uma ou mais



35

00:02:40.900 --> 00:02:45.620

palavras que pesquisamos, Android, Oreo ou SDK. Android l, Android l para



36

00:02:46.210 --> 00:02:50.770

aquele, e Android para aquele, e assim por diante.



37

00:02:50.920 --> 00:02:55.210

Agora, a prxima coisa a fazer, e sugiro que voc sempre faa isso quando estiver trabalhando com esse



38

00:02:55.660 --> 00:02:58.430

tipo de dado,  verificar se os dados realmente so vlidos.



39

00:02:58.460 --> 00:03:05.020

Agora vlido significa que ele est em conformidade com a especificao para qualquer tipo de dados que deveria



40

00:03:05.290 --> 00:03:06.540

ser, neste caso, json.



41

00:03:06.550 --> 00:03:11.320

Agora podemos supor que o flickr est nos fornecendo dados json vlidos, mas no  bom assumir isso.



42

00:03:11.800 --> 00:03:14.590

Na verdade, no  bom assumir nada ao programar.



43

00:03:14.830 --> 00:03:20.740

O que eu sugiro que voc faa  ir a um site que lhe permita validar os dados do json, ento copie e cole



44

00:03:20.740 --> 00:03:23.020

isso literalmente e tenha certeza de que est correto.



45

00:03:23.020 --> 00:03:26.920

Agora, a razo pela qual queremos fazer isso  que no estamos gastando horas tentando depurar problemas



46

00:03:26.920 --> 00:03:27.570

em nosso cdigo



47

00:03:27.640 --> 00:03:30.390

de programa, apenas para descobrir que os dados em si so invlidos.



48

00:03:30.400 --> 00:03:34.040

Agora voc pode procurar on-line por validadores json, mas eu vou para um chamado



49

00:03:34.040 --> 00:03:42.820

Json lint que eu sei  um que funciona bastante bem. Vou colar esse link. Agora eu poderia copiar e colar todos os



50

00:03:42.820 --> 00:03:44.370

dados que esto na



51

00:03:44.710 --> 00:03:50.460

tela, mas em vez disso, vou apenas copiar a URL, porque isso  muito mais fcil



52

00:03:50.460 --> 00:03:53.520

e col-la nesse site. Ento eu vou voltar para o site onde



53

00:03:53.540 --> 00:03:59.780

ns tnhamos todos os dados, eu vou copiar isso, e voltar para o site json lint. Agora este  o validador json,



54

00:03:59.870 --> 00:04:01.620

ento voc pode



55

00:04:01.870 --> 00:04:06.010

colar aqui os dados reais do json ou url.



56

00:04:06.010 --> 00:04:11.470

Agora, sites como este esto l para ajud-lo a confirmar que uma determinada parte do json  vlida.



57

00:04:11.470 --> 00:04:17.020

Agora voc tambm pode encontrar validadores XML on-line, se estiver trabalhando com dados XML, e  sempre uma boa ideia garantir que



58

00:04:17.020 --> 00:04:21.790

seus dados de origem sejam vlidos, como eu disse. Ento, vou colar o URL que estamos



59

00:04:21.790 --> 00:04:30.400

vendo, o qual eu copiei, e vou clicar em validar, json aqui embaixo. Agora, na verdade, recebemos erros aqui.



60

00:04:30.410 --> 00:04:30.750

&nbsp;



61

00:04:30.860 --> 00:04:34.270

Ento, o que est nos dizendo  que isso no 



62

00:04:34.440 --> 00:04:39.550

vlido Json, e podemos acabar nos causando problemas se tentarmos trabalhar com ele dentro do nosso cdigo.



63

00:04:39.570 --> 00:04:43.650

Agora, se voc j est familiarizado com json, provavelmente j percebeu que o feed do



64

00:04:43.730 --> 00:04:49.590

flickr do Json e o parntese  esquerda no topo no deveria estar l e o resultado  que est mostrando um



65

00:04:49.690 --> 00:04:54.120

erro na linha um, apontando para o flickr do Json Alimente aqui embaixo na caixa vermelha.



66

00:04:54.210 --> 00:04:56.760

Por isso, esperava um dos valores listados aqui,



67

00:04:57.230 --> 00:05:00.530

mas em vez disso tem algo indefinido json flickr feed



68

00:05:00.920 --> 00:05:06.440

Agora eu vou levar voc atravs de um processo aqui, para que voc entenda como depurar



69

00:05:06.440 --> 00:05:10.850

essas coisas, porque se voc no entender o processo de passar e descobrir



70

00:05:10.850 --> 00:05:13.640

esses dados, ento voc estar atingindo barreiras intransponveis.



71

00:05:13.640 --> 00:05:18.260

Agora  sempre bom saber como resolver problemas como esse, caso voc tenha algo parecido



72

00:05:18.260 --> 00:05:20.660

com outro feed com o qual deseja trabalhar.



73

00:05:21.170 --> 00:05:25.950

Ento, claramente, isso est nos dizendo no momento que esses dados do Json que ns voltamos do flickr



74

00:05:25.960 --> 00:05:29.120

no so vlidos, e isso nos diz o que est se opondo.



75

00:05:29.690 --> 00:05:31.250

Ento, o que voc faria neste momento?



76

00:05:31.700 --> 00:05:36.420

Bem, o que eu no faria, no passaria horas na documentao porque provavelmente



77

00:05:36.430 --> 00:05:39.090

 uma resposta aqui no texto da tela.



78

00:05:39.170 --> 00:05:44.990

Ento, o que eu provavelmente faria  copiar este pequeno cdigo aqui, este texto



79

00:05:44.990 --> 00:05:56.060

json do qual ele est reclamando, eu copiaria thatn e abriria uma nova aba e faria uma busca por jsonFlickrFeed json invlido, porque obviamente  a que



80

00:05:56.060 --> 00:05:57.450

est o problema.



81

00:05:57.500 --> 00:06:03.100

So dados json invlidos e esse  o identificador que, esperamos, nos levar a uma resposta.



82

00:06:03.110 --> 00:06:07.760

A outra opo  escrever algo em nosso cdigo para remover o texto invlido, e essa  obviamente uma



83

00:06:07.760 --> 00:06:09.730

soluo se voc no conseguir encontrar mais nada.



84

00:06:09.740 --> 00:06:15.550

O problema  que, uma vez que escrevemos cdigo para analisar o Json, podemos reutiliz-lo sempre que tivermos dados



85

00:06:15.560 --> 00:06:16.900

do Json para lidar.



86

00:06:16.940 --> 00:06:20.910

Na verdade, poderamos produzir um analisador json genrico que possamos usar.



87

00:06:20.920 --> 00:06:26.240

Agora eu no vou fazer isso neste aplicativo, e existem bibliotecas json que voc pode usar, mas eles vo



88

00:06:26.240 --> 00:06:27.210

falhar com esses dados.



89

00:06:27.470 --> 00:06:33.820

Ento, vale a pena tentar obter algo vlido antes de escrevermos qualquer cdigo. Ento, colando json flickr feed json invlido ou procurando



90

00:06:33.830 --> 00:06:36.700

por isso no Google, voc pode ver que



91

00:06:37.430 --> 00:06:39.880

 produzido um par de resultados.



92

00:06:39.920 --> 00:06:42.550

O estouro de pilha, este primeiro,  um que parece interessante.



93

00:06:42.550 --> 00:06:43.360

Ento, clicamos nisso e



94

00:06:48.140 --> 00:06:51.120

voc pode ver aqui que est falando sobre a antiga API da web.



95

00:06:51.330 --> 00:06:56.460

Isso  interessante. Algum disse que a API da web Agora voc pode ver quando



96

00:06:56.460 --> 00:07:03.130

antiga  muito semelhante  URL que estamos usando. Agora no usamos ID, mas usamos format = Jason e tambm adicionamos algumas tags. eu entendi direito, que o componente json



97

00:07:03.510 --> 00:07:08.140

Agora que o comentrio fala sobre o uso da API da web atual, mas tambm adiciona esse foi removido imediatamente, ento basicamente sem o primeiro bit Agora, no momento em que estou gravando isso, o Firefox



98

00:07:08.220 --> 00:07:10.820

parmetro extra, nenhuma chamada json  igual a uma. formata o Json muito bem.



99

00:07:11.310 --> 00:07:18.120

Ento, o que est realmente acontecendo  que o Flickr est passando algo sobre Json P ao invs de Json. Ento, se voc quiser experimentar esse Json, tente o URL em Fire Fox.



100

00:07:18.200 --> 00:07:22.830

Agora, se voc experimentar outros feeds, como o Photobucket, ver que eles listam os Ento, vamos rapidamente tentar ver como .



101

00:07:22.830 --> 00:07:29.520

dois formatos separadamente, mas o flickr usa apenas o formato Json e nos permite especificar esse parmetro de retorno de E voc pode ver como a Fire Fox fez um bom trabalho com isso porque est



102

00:07:29.880 --> 00:07:33.180

chamada json para obter Json em vez de Json p. recuando bem o array, o que nos permite



103

00:07:33.540 --> 00:07:36.460

Ento, vamos tentar adicionar isso para ver se isso nos impede de ficarmos presos. especificar os itens individuais, se quisermos.



104

00:07:36.660 --> 00:07:41.710

Por isso, vou voltar para o URL do navegador onde mostramos os dados. Vamos adicionar a essa opo, Tudo bem, ento essa  uma maneira, mas eu vou mostrar-lhe uma maneira diferente de usar Json lint. Em vez do URL, vou copiar



105

00:07:41.730 --> 00:07:45.830

o argumento, no final. Ns vamos adicionar. que estava causando problemas. todos os dados e col-los. Por isso, voltarei ao Chrome e vou copiar



106

00:08:00.660 --> 00:08:02.500

o contedo desta pgina depois de reutilizarmos



107

00:08:02.640 --> 00:08:06.120

o URL sem que o retorno de chamada do Json seja igual a um. Eu vou voltar para o json lint, vou deletar o contedo existente, colar o cdigo json,



108

00:08:06.210 --> 00:08:11.740

e clicar em validar o Jso, n e desta vez ns temos uma



109

00:08:11.930 --> 00:08:13.990

boa caixa verde no fundo que diz Json vlido.



110

00:08:14.010 --> 00:08:18.300

Ento esse  o nosso problema resolvido, e agora podemos analisar os dados do json usando uma



111

00:08:18.420 --> 00:08:20.650

de nossas bibliotecas kotlin do java sem ter problemas.



112

00:08:25.440 --> 00:08:30.930

Agora, a propsito, eu teria a mesma coisa se tivesse colado na URL.



113

00:08:30.930 --> 00:08:36.330

Ento, s para confirmar que vou fazer isso, colo na URL, excluo o contedo existente, coloco a URL l novamente e valido, e



114

00:08:36.330 --> 00:08:37.980

tambm estamos obtendo o Json vlido novamente.



115

00:08:38.730 --> 00:08:42.920

Agora, com isso dito, tenho notado que s vezes voc ainda pode receber um erro, mesmo depois que o texto do json



116

00:08:42.930 --> 00:08:46.440

flickr feed foi removido dos dados, e se isso acontecer,  causado por um bug no prprio Flicker.



117

00:08:46.440 --> 00:08:54.220

O programa ainda funcionar com sucesso para que voc possa ignorar quaisquer outros erros que apaream, se tiver



118

00:08:54.250 --> 00:08:59.780

certeza de que os dados foram copiados



119

00:08:59.860 --> 00:09:07.470

e colados corretamente, e voc definitivamente no tem nenhum argumento de retorno de chamada json especificado na URL.



120

00:09:07.530 --> 00:09:09.520

Ento, se voc receber outro erro, tente colar na URL novamente.



121

00:09:09.840 --> 00:09:13.520

Se isso tambm der um



122

00:09:13.540 --> 00:09:17.370

erro, no se preocupe neste estgio.



123

00:09:17.440 --> 00:09:20.540

Tire uma captura de tela e



124

00:09:20.740 --> 00:09:26.900

arquive-a, caso seu programa no funcione e voc acha que pode



125

00:09:26.900 --> 00:09:33.300

ser a causa, mas continue com os vdeos e tudo ficar bem. Os dados que esto sendo retornados esto mudando o tempo todo, ento, no momento em que



126

00:09:33.310 --> 00:09:38.110

voc executar o aplicativo, o Flickr poder retornar os dados vlidos novamente.



127

00:09:38.110 --> 00:09:43.570

Portanto, a lio aqui  certificar-se de que seus dados de origem estejam corretos antes de comear a us-los em seu cdigo.



128

00:09:43.630 --> 00:09:47.880

Voc ficar bastante frustrado gastando horas tentando descobrir onde est o



129

00:09:48.010 --> 00:09:52.750

problema e se tudo est relacionado ao cdigo-fonte ou aos dados de origem. Voc poderia ter poupado horas de



130

00:09:53.050 --> 00:09:55.610

frustrao nesse cenrio.



131

00:09:55.990 --> 00:09:58.820

Bottom line, sempre verifique se os dados esto corretos antes de tentar qualquer



132

00:09:59.050 --> 00:10:00.310

codificao relacionada  anlise desses dados.



133

00:10:00.430 --> 00:10:01.720

Tudo bem, ento, neste momento, esperamos



134

00:10:01.780 --> 00:10:06.730

que voc entenda como adicionar parmetros ao URL, como voc me viu fazendo para modificar os dados retornados pelo feed do flickr.



135

00:10:06.730 --> 00:10:07.130

Para este mini desafio, consulte



136

00:10:07.150 --> 00:10:12.490

a pgina de feeds para obter os cdigos para os idiomas disponveis e, em seguida, insira esta URL como voc pode ver a tela l, e use o parmetro lang para ver os resultados em alemo.



137

00:10:12.490 --> 00:10:17.340

Depois de fazer isso, modifique o parmetro para visualizar os



138

00:10:17.500 --> 00:10:23.210

resultados em outro idioma ou em outros idiomas que voc possa reconhecer.



139

00:10:23.230 --> 00:10:28.270

Esteja ciente de que o seu navegador pode no ser capaz de exibir conjuntos de caracteres asiticos, por exemplo.



140

00:10:28.300 --> 00:10:33.160

A maioria pode nos dias de hoje, mas voc pode obter uma srie de pequenas caixas em vez dos caracteres chineses ou coreanos.



141

00:10:33.160 --> 00:10:35.050

Ento esse  o seu desafio.



142

00:10:35.530 --> 00:10:40.420

Veja como voc vai.



143

00:10:40.420 --> 00:10:42.130

Pause o vdeo e eu te vejo quando voc voltar.



144

00:10:42.740 --> 00:10:47.200

Tudo bem, ento esperamos que voc conseguisse fazer isso funcionar.



145

00:10:47.200 --> 00:10:51.180

Ento, em primeiro lugar, os idiomas disponveis, e voc pode ver claramente que



146

00:10:51.190 --> 00:10:57.340

que esto disponveis neste URL, voc pode ver os vrios idiomas l. estamos conseguindo isso em outro idioma agora, e estamos mostrando



147

00:10:57.340 --> 00:11:04.360

Ento, ns realmente precisamos adicionar o parmetro lang com os valores de de para o alemo. Ento, essencialmente, se voc voltar e copiar o nosso outro link E perceba aqui como o ttulo est aparecendo em alemo, esse



148

00:11:04.360 --> 00:11:08.440

que estvamos usando antes, e abri-lo em  o ttulo principal do feed. Em vez de o texto postar a foto depois do autor,



149

00:11:08.450 --> 00:11:10.510

uma nova aba. estamos obtendo os resultados em alemo. Agora o flickr no traduz texto



150

00:11:10.510 --> 00:11:14.810

Em primeiro lugar, h a verso em ingls e, se voc digitado por essas pessoas postando as fotos, ento tenha isso em mente.



151

00:11:14.980 --> 00:11:20.360

quiser usar a verso em alemo, precisamos adicionar, no final desse e comercial. isso em alemo, como exemplo, alguns dos cdigos l. E para obter o feed em chins, tudo o que precisamos fazer  mudar o cdigo do idioma de de para hh zh hk tradicional



152

00:11:20.620 --> 00:11:21.350

chins como voc



153

00:11:21.350 --> 00:11:21.910

pode ver l. e obviamente estamos pegando



154

00:11:21.910 --> 00:11:24.600

Ento vamos em frente e fazer isso. esses estranhos pequenos personagens, esses caracteres Unicode aparecendo no navegador, como eu estou tentando mostrar l, e



155

00:11:27.740 --> 00:11:30.370

se voc voltar para o flickr, para o Firefox, talvez voc possa ver isso um pouco melhor.



156

00:11:30.430 --> 00:11:33.800

Voc pode ver que o Firefox est mostrando um pouco melhor, agora mostrando claramente em chins, e novamente voc pode ver que o Firefox



157

00:11:38.270 --> 00:11:39.450

 muito melhor em ver esse tipo de dados.



158

00:11:39.470 --> 00:11:46.760

Voc volta para o alemo novamente para ver o que parece, e claramente h o alemo



159

00:11:46.760 --> 00:11:47.510

para o ttulo.



160

00:11:47.530 --> 00:11:52.200

Ento l vai voc, est resolvido.



161

00:11:52.350 --> 00:11:54.250

Tudo bem, ento vou



162

00:11:54.450 --> 00:12:01.920

finalizar o vdeo agora e vou atualizar meu Firefox porque est me dizendo que est extremamente desatualizado.



163

00:12:02.010 --> 00:12:09.080

Voc pode ver que no uso o Firefox com frequncia.



164

00:12:09.770 --> 00:12:11.110

Ento vamos terminar o vdeo aqui. Na prxima vou para o Android



165

00:12:11.250 --> 00:12:13.430

Studio, vamos iniciar o nosso projeto e iniciar alguns cdigos.



166

00:12:13.730 --> 00:12:19.910

Ento, eu vou te ver no prximo vdeo.



167

00:12:20.090 --> 00:12:26.110

&nbsp;



168

00:12:26.110 --> 00:12:28.800

&nbsp;



169

00:12:29.140 --> 00:12:36.020

&nbsp;



170

00:12:36.170 --> 00:12:38.700

&nbsp;



171

00:12:38.720 --> 00:12:41.010

&nbsp;



172

00:12:41.010 --> 00:12:42.300

&nbsp;



173

00:12:50.460 --> 00:12:55.390

&nbsp;



174

00:12:55.400 --> 00:13:02.160

&nbsp;



175

00:13:02.160 --> 00:13:03.150

&nbsp;



176

00:13:05.680 --> 00:13:07.940

&nbsp;



177

00:13:07.980 --> 00:13:13.540

&nbsp;



178

00:13:13.770 --> 00:13:16.240

&nbsp;



179

00:13:18.010 --> 00:13:21.290

&nbsp;



180

00:13:21.500 --> 00:13:23.680

&nbsp;



181

00:13:23.690 --> 00:13:27.170

&nbsp;



182

00:13:27.190 --> 00:13:27.650

&nbsp;



183

00:13:27.650 --> 00:13:29.460

&nbsp;



184

00:13:29.740 --> 00:13:35.270

&nbsp;



185

00:13:35.270 --> 00:13:36.290

&nbsp;



186

00:13:36.470 --> 00:13:37.740

&nbsp;



