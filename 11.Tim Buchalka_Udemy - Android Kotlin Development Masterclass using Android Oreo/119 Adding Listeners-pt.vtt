WEBVTT
1

00:00:05.300 --> 00:00:09.660

Tudo bem, ento agora o que queremos fazer  comear a adicionar alguns ouvintes ao nosso Player



2

00:00:09.880 --> 00:00:12.830

do YouTube, para que possamos obter algum feedback quando vrias coisas acontecerem.



3

00:00:12.920 --> 00:00:18.260

Agora, o player do YouTube pode responder a vrios eventos diferentes, como vdeos, pausas ou paradas,



4

00:00:18.260 --> 00:00:24.860

e tambm pode nos notificar quando os anncios exibidos no incio de muitos vdeos do YouTube comearem a ser reproduzidos.



5

00:00:24.860 --> 00:00:30.380

Agora, o Google os separou em dois tipos diferentes de eventos: eventos associados  reproduo de



6

00:00:30.380 --> 00:00:34.710

um vdeo e aqueles que representam uma alterao no estado do vdeo.



7

00:00:35.060 --> 00:00:38.850

Agora isso far mais sentido quando voc vir os dois ouvintes que vamos criar.



8

00:00:38.960 --> 00:00:41.620

Ento, vou seguir em frente com o cdigo e



9

00:00:41.660 --> 00:00:48.090

falar sobre isso depois, mas em primeiro lugar o que queremos fazer  criar um novo playbackEventListener, para manipular os eventos de reproduo.



10

00:00:48.180 --> 00:00:52.850

Ento, o que eu vou fazer  colocar isso depois da funo onInitializationFailure.



11

00:00:52.870 --> 00:00:54.230

Aqui embaixo eu vou



12

00:00:56.870 --> 00:01:08.350

colocar ouvinte de evento de reproduo de val privado igual ao objeto clon do YouTubePlayer. EventListener de reproduo, e vou adicionar



13

00:01:08.360 --> 00:01:12.450

um bloco de cdigo.



14

00:01:12.470 --> 00:01:15.000

Agora o playbackEventListener  uma interface, ento temos



15

00:01:15.170 --> 00:01:18.480

que implementar todos os mtodos definidos por essa interface, e 



16

00:01:18.530 --> 00:01:22.940

por isso que temos esse erro aqui no momento, que "o objeto no 



17

00:01:22.940 --> 00:01:29.030

abstrato e no implementa o membro abstrato para onSeek ". Como sempre, o Android Studio pode criar automaticamente um esboo para



18

00:01:29.030 --> 00:01:30.990

cada uma das funes que precisamos implementar.



19

00:01:31.240 --> 00:01:36.830

Ento eu vou ter certeza que meu cursor est dentro do bloco de cdigo e eu fao um controle, e vou



20

00:01:36.830 --> 00:01:39.000

selecionar todos os mtodos e clicar em OK.



21

00:01:39.690 --> 00:01:45.380

E voc pode ver agora que fizemos isso, o erro que era um objeto agora desapareceu. Agora, para que possamos ver esses mtodos



22

00:01:45.380 --> 00:01:51.940

sendo chamados, o que vou fazer  adicionar uma mensagem do Toast aos mtodos onPlaying e onPaused.



23

00:01:52.070 --> 00:01:57.080

No usaremos as funes onSeek e onBuffered, mas teremos que excluir a chamada para TODO, caso contrrio,



24

00:01:57.200 --> 00:01:59.980

nosso aplicativo ir falhar quando essas funes forem chamadas.



25

00:02:00.190 --> 00:02:04.880

Ento vamos em frente e fazer isso, ento vamos deletar este aqui,



26

00:02:04.910 --> 00:02:09.820

onSeek, delete isso, e tambm onBuffering, vamos deletar, e tambm onStopped, vamos deletar.



27

00:02:10.170 --> 00:02:15.650

Bem, isso deixa os dois aqui, o primeiro no onPlaying, vamos usar isso, e eu vou



28

00:02:15.650 --> 00:02:20.170

fazer uma mensagem do Toast, ento Toast. Parnteses makeText, passe isso



29

00:02:20.180 --> 00:02:24.410

como o contexto. Mas vamos fazer algo um pouco diferente, vamos colocar



30

00:02:24.490 --> 00:02:27.280

e perceber que h uma opo l, isso e isso no YoutubeActivity.



31

00:02:27.290 --> 00:02:29.130

Ento, eu vou



32

00:02:29.430 --> 00:02:35.240

selecionar essa segunda opo, aspas duplas, "Bom vdeo est jogando



33

00:02:35.530 --> 00:02:41.250

OK" e, em seguida, Toast. LENGTH_SHORT e novos parnteses mostram pontos.



34

00:02:41.630 --> 00:02:48.080

Ento esse  o primeiro para onPlaying, e vamos substituir o onPaused pelo mesmo cdigo, mas apenas



35

00:02:48.080 --> 00:02:51.850

mudar um pouco o texto. Em vez de colocar "Good



36

00:02:51.890 --> 00:02:54.990

video is was playing OK", colocaremos "Video has paused".



37

00:02:55.670 --> 00:02:59.990

Ento, o que temos aqui  apenas um ouvinte, como ns anexamos aos botes, por exemplo.



38

00:02:59.990 --> 00:03:04.910

Agora eu declarei dessa maneira porque h bastante cdigo, e ficaria muito confuso se ns adicionssemos todo



39

00:03:04.940 --> 00:03:07.830

esse cdigo s chamadas de funo que definem os ouvintes.



40

00:03:08.090 --> 00:03:14.180

Portanto, esse ouvinte fornece ao YouTubePlayer as funes que ele chamar quando os vrios eventos acontecerem.



41

00:03:14.330 --> 00:03:19.880

E quando um vdeo comear a ser reproduzido, por exemplo, ele chamar a funo onPlaying e onPaused, se pausarmos



42

00:03:19.880 --> 00:03:21.720

o vdeo, e assim por diante.



43

00:03:21.830 --> 00:03:26.390

Ento depende de voc o que voc quer fazer com essas funes. Eles no so necessrios para o player



44

00:03:26.390 --> 00:03:32.780

reproduzir vdeos, mas isso pode ser um aplicativo, talvez, oferecendo um curso de treinamento da empresa, por exemplo.



45

00:03:32.780 --> 00:03:37.610

E nesse caso voc pode registrar o fato de que o usurio assistiu a um vdeo e o quo longe eles



46

00:03:37.910 --> 00:03:42.370

esto por meio dele, e talvez registr-lo em seu plano de treinamento de funcionrios adicionando cdigo no mtodo onStop.



47

00:03:42.710 --> 00:03:46.940

H outro evento que veremos a seguir e que voc pode usar para registrar que



48

00:03:46.940 --> 00:03:48.530

eles assistiram ao vdeo inteiro.



49

00:03:48.530 --> 00:03:55.500

Agora, a API do player do YouTube acompanha a reproduo do vdeo e nos permite processar eventos quando eles acontecem.



50

00:03:55.760 --> 00:04:01.660

Ento esse  o playbackEventListener. Ento, vamos adicionar o StateChangeListener e ver o



51

00:04:02.390 --> 00:04:16.790

que isso faz agora: private val playerStateChangeListener  igual ao objeto de dois pontos. Desta vez, ser o YouTubePlayer. Player como PlayerStateChangeListener, e agora o bloco de cdigo, e



52

00:04:18.120 --> 00:04:22.730

vamos usar o controle I, certificando-se de que seu



53

00:04:23.260 --> 00:04:26.740

cursor esteja dentro do bloco de cdigo.



54

00:04:26.990 --> 00:04:33.190

Vamos implementar todas as funes, o que impede que o erro aparea agora. E vamos adicionar algumas mensagens do Toast a



55

00:04:33.190 --> 00:04:33.200

&nbsp;



56

00:04:33.200 --> 00:04:37.230

trs delas, para que voc possa ver quando elas so chamadas.



57

00:04:37.370 --> 00:04:39.620

Ento, no onAdStarted, vamos comear com essa,



58

00:04:42.440 --> 00:04:47.840

e eu vou colar a velha mensagem do Toast, deixando o 'this' no YoutubeActivity, e vou mudar o



59

00:04:47.840 --> 00:04:58.990

texto para que seja "Click Ad now, faa o video Criador rico! ". OK, e vou pegar uma cpia disso.



60

00:04:59.050 --> 00:05:03.550

Agora, onLoading, no vamos nos incomodar com isso, ento vou apagar o TODO l para isso.



61

00:05:03.740 --> 00:05:06.000

onVideoStarted, vamos fazer algo por isso.



62

00:05:06.000 --> 00:05:08.660

Vou substituir isso pela torradeira. makeText, mas em termos



63

00:05:08.920 --> 00:05:13.330

do texto real que vamos exibir na tela e da mensagem do Toast,



64

00:05:13.330 --> 00:05:19.370

vamos apenas fazer com que "Vdeo tenha iniciado". OK, ento isso deixa mais alguns, ento ns ainda temos onLoaded aqui,



65

00:05:19.940 --> 00:05:23.290

onLoaded vamos deletar por enquanto, ento ele no tem TODO, onVideoEnded, que 



66

00:05:23.470 --> 00:05:29.830

um bom lugar para outro ento vamos mudar o cdigo para isso. Eu vou mudar o



67

00:05:29.830 --> 00:05:37.450

texto para isso, e o texto para o onVideoEnded ser



68

00:05:41.420 --> 00:05:45.230

"Parabns", parabns! Voc completou outro vdeo ".



69

00:05:46.540 --> 00:05:50.890

OK, ns temos um erro. Vamos deletar o cdigo no nosso erro tambm.



70

00:05:50.890 --> 00:05:53.680

Agora, para ter uma ideia melhor do que so



71

00:05:53.680 --> 00:05:59.050

essas funes, voltemos  pgina de documentao do Google no meu navegador e realmente recomendo que voc



72

00:05:59.050 --> 00:06:00.320

realmente faa isso.



73

00:06:00.370 --> 00:06:05.050

Confira a documentao para descobrir mais sobre as funes que voc usa, porque  assim que voc realmente pega



74

00:06:05.050 --> 00:06:06.630

o jeito do que est acontecendo.



75

00:06:06.910 --> 00:06:11.440

E voc tambm descobrir outras coisas que pode fazer, como o dilogo de erro que



76

00:06:11.440 --> 00:06:17.290

vimos quando analisamos a documentao dos resultados de inicializao. Agora, do lado esquerdo, h uma tabela,



77

00:06:17.290 --> 00:06:21.600

uma espcie de ndice para o YouTubePlayer, e h o PlaybackEventListener.



78

00:06:21.820 --> 00:06:26.500

E l est ele, ento eu vou clicar nele agora, PlaybackEventListener, e assim que eu clicar, isso



79

00:06:26.500 --> 00:06:29.530

nos dar uma viso geral do que as vrias funes fazem.



80

00:06:29.710 --> 00:06:32.770

E voc provavelmente poderia ter adivinhado a maioria dos



81

00:06:32.770 --> 00:06:37.840

nomes das funes, mas  interessante que o mtodo onStop no PlaybackEventListener tambm seja chamado.



82

00:06:38.050 --> 00:06:43.150

Ento, isso implica que devemos chamar ambas as funes quando o vdeo for reproduzido at o final.



83

00:06:43.150 --> 00:06:48.670

Agora so coisas sutis como essas que voc descobrir quando ler a documentao. Os nomes e parmetros dos mtodos so geralmente bem



84

00:06:48.670 --> 00:06:52.330

escolhidos e do a voc uma boa idia do que eles fazem,



85

00:06:52.420 --> 00:06:54.020

mas voc s ter a



86

00:06:54.100 --> 00:06:58.890

viso completa fazendo pesquisas on-line, e a documentao  um timo lugar para comear com isso.



87

00:06:59.110 --> 00:07:04.030

Ento, depois de ler isso, o que vou fazer  adicionar uma mensagem do Toast



88

00:07:04.030 --> 00:07:05.240

ao mtodo onStopped tambm,



89

00:07:05.260 --> 00:07:14.150

para que possamos ver se estamos certos e os dois mtodos so chamados. Ento, voltando ao mtodo onStopped, vamos colar algum cdigo l e colocaremos "Video has



90

00:07:14.150 --> 00:07:14.690

stopped" tambm.



91

00:07:18.310 --> 00:07:21.880

Certo, agora ns configuramos os ouvintes que respondero aos vrios eventos, mas



92

00:07:22.130 --> 00:07:25.160

neste momento ainda no dissemos ao jogador para ligar para eles.



93

00:07:25.280 --> 00:07:28.410

Na verdade, o Android Studio mostra nossas duas variveis em cinza, como voc



94

00:07:28.430 --> 00:07:31.220

pode ver aqui, e tambm a outra acima, para indicar que



95

00:07:32.160 --> 00:07:34.170

elas no so realmente usadas em lugar algum.



96

00:07:34.680 --> 00:07:40.110

Ento, o que precisamos fazer , na funo onInitializationSuccess, chamarmos set functions e dizer ao player



97

00:07:40.110 --> 00:07:44.590

onde encontrar as funes que voc precisar chamar de volta quando os eventos acontecerem.



98

00:07:44.610 --> 00:07:49.560

Ento, vamos fazer isso no onInitializationSuccess como eu mencionei, e onde queremos



99

00:07:49.560 --> 00:07:52.150

colocar isso  antes do cdigo ifRestored.



100

00:07:52.380 --> 00:08:02.040

Ento, aqui ns vamos colocar o seu ponto de interrogao YouTubePlayer com parnteses setPlayerStateChangeListener,



101

00:08:02.220 --> 00:08:07.920

e isso vai ser playerStateChangeListener, ento youTubePlayer novamente,



102

00:08:09.060 --> 00:08:14.980

Ponto de interrogao set set, desta vez 



103

00:08:15.240 --> 00:08:18.460

parnteses playbackEventListener, e ser playbackEventListener.



104

00:08:18.780 --> 00:08:23.670

Ento, isso informa ao jogador novamente onde encontrar as funes que ele precisar chamar de volta quando esses



105

00:08:23.670 --> 00:08:25.920

eventos forem acionados ou, na verdade, quando realmente acontecerem.



106

00:08:25.940 --> 00:08:32.010

Agora, o uso de classes annimas dentro dessas chamadas para setPlayerStateChangeListener e setPlayback EventListener teria



107

00:08:32.010 --> 00:08:37.830

tornado o cdigo muito confuso, e  por isso que declaramos variveis para eles.



108

00:08:37.830 --> 00:08:42.170

Tudo bem, ento, vamos tentar executar o aplicativo e ver nossas mensagens do Toast sendo



109

00:08:46.080 --> 00:08:49.710

exibidas: inicializados com sucesso e o vdeo interrompido, como voc pode ver.



110

00:08:49.920 --> 00:08:54.980

Agora, quando eu venho aqui e clico no cone do jogo, recebemos uma mensagem, como voc pode ver, uma mensagem do



111

00:08:54.980 --> 00:08:59.020

Toast para dizer que o "Vdeo foi reproduzido", "O bom vdeo est tocando OK" tambm apareceu.



112

00:08:59.140 --> 00:09:04.480

Vou pausar por um minuto e voc pode ver que "Vdeo pausou" e, se eu comear de novo, "Bom



113

00:09:04.710 --> 00:09:07.410

vdeo est tocando OK" novamente, ento recebemos a mensagem.



114

00:09:07.590 --> 00:09:09.730

Da mesma forma, quando fao uma pausa, temos "Vdeo pausado" novamente.



115

00:09:10.110 --> 00:09:16.960

E se eu realmente tambm avanar um pouco, voc pode ver que recebemos essa mensagem novamente, e podemos reproduzi-la novamente, "Bom vdeo



116

00:09:20.380 --> 00:09:25.190

est tocando OK", como voc pode ver, ento est funcionando muito bem para ns .



117

00:09:25.190 --> 00:09:29.770

A outra coisa que vou fazer agora  pular alguns segundos a partir do final, para que voc possa ver



118

00:09:29.770 --> 00:09:31.410

o que acontece quando o vdeo termina.



119

00:09:31.750 --> 00:09:39.340

Ento chegamos s 4:16, pea: "Parabns, voc completou outro vdeo".



120

00:09:39.340 --> 00:09:41.750

Voc viu isso aparecer e, em seguida, "Vdeo foi interrompido" tambm.



121

00:09:41.950 --> 00:09:47.090

Ento, conseguimos as duas mensagens como voc pode ver. A funo onVideoEnded do playerStateChangeListener exibe seu



122

00:09:47.090 --> 00:09:51.680

Toast e, em seguida, temos o Toast da funo onStopped ou o playbackEventListener.



123

00:09:51.950 --> 00:09:57.160

Tudo bem, ento  assim que voc usa a API do YouTubePlayer para reproduzir vdeos em seus prprios aplicativos.



124

00:09:57.190 --> 00:10:02.230

Agora no tivemos que escrever uma grande quantidade de cdigo para reproduzir os vdeos, porque usamos a API



125

00:10:02.280 --> 00:10:06.110

do YouTube do Google para cuidar de todos os detalhes tcnicos para ns.



126

00:10:06.130 --> 00:10:11.920

Agora, abordamos alguns conceitos importantes, incluindo como adicionar uma biblioteca externa ao nosso cdigo e tambm como



127

00:10:11.920 --> 00:10:18.450

escrever funes de retorno de chamada que o cdigo externo chama, quando  necessrio notificar nossos aplicativos sobre eventos importantes.



128

00:10:18.460 --> 00:10:24.040

Agora vimos retornos de chamada mais cedo, porque um evento de clique de boto tambm chama uma funo de retorno de



129

00:10:24.040 --> 00:10:28.450

chamada em nosso cdigo para nos permitir responder ao clique do boto, e vamos us-los muito no



130

00:10:28.450 --> 00:10:34.330

curso, para que voc obtenha muitos exemplos de callbacks e interfaces. E vamos tentar explic-los de forma diferente a cada vez.



131

00:10:34.500 --> 00:10:36.350

Se eles no fizerem sentido agora, eles logo faro.



132

00:10:36.580 --> 00:10:39.820

Tudo bem, ento no prximo vdeo, precisamos fazer algumas melhorias no aplicativo.



133

00:10:39.850 --> 00:10:41.240

Ento, eu vou te ver no prximo vdeo.



