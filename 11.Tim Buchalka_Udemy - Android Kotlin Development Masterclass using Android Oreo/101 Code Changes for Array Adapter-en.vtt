WEBVTT
1

00:00:04.779 --> 00:00:07.069

alright so the changes we need to make



2

00:00:07.069 --> 00:00:09.469

to the code are very simple so you want



3

00:00:09.469 --> 00:00:11.389

to open up our main activity of Katie



4

00:00:11.389 --> 00:00:13.059

which I've got opened up here now and



5

00:00:13.059 --> 00:00:16.640

let's make those changes now we've seen



6

00:00:16.640 --> 00:00:19.070

how to add a synthetic import to let us



7

00:00:19.070 --> 00:00:21.669

refer to the layouts widgets directly



8

00:00:21.669 --> 00:00:24.079

but when we did it before we type the



9

00:00:24.079 --> 00:00:26.210

import in manually so this time we're



10

00:00:26.210 --> 00:00:27.770

just going to use the widget and let



11

00:00:27.770 --> 00:00:29.750

Android studio take care of the import



12

00:00:29.750 --> 00:00:31.790

for us so I'm going to be adding the



13

00:00:31.790 --> 00:00:34.040

code to the on post execute of our



14

00:00:34.040 --> 00:00:36.320

download class you can see I've got that



15

00:00:36.320 --> 00:00:38.330

on the screen there and this is where



16

00:00:38.330 --> 00:00:40.520

things get a little bit tricky so I'm



17

00:00:40.520 --> 00:00:42.950

going to start first by adding or



18

00:00:42.950 --> 00:00:45.020

creating rather the array adapter so I'm



19

00:00:45.020 --> 00:00:47.000

going to do that under this last line



20

00:00:47.000 --> 00:00:51.350

here and we're going to type Val array



21

00:00:51.350 --> 00:00:59.000

adapter equals array adapter then we



22

00:00:59.000 --> 00:01:00.649

need the Dimond operator



23

00:01:00.649 --> 00:01:06.850

feed entry and then outside parentheses



24

00:01:06.850 --> 00:01:09.350

now when we try to create the array



25

00:01:09.350 --> 00:01:11.450

adapter Android studio suggesting that



26

00:01:11.450 --> 00:01:14.509

we have to provide a context nil context



27

00:01:14.509 --> 00:01:17.240

describes the application environment or



28

00:01:17.240 --> 00:01:18.679

in the case of an activity the



29

00:01:18.679 --> 00:01:21.170

activities environment now it knows



30

00:01:21.170 --> 00:01:22.789

about things like the screen that the



31

00:01:22.789 --> 00:01:24.859

activity is using in all sorts of other



32

00:01:24.859 --> 00:01:27.889

configuration information now the usual



33

00:01:27.889 --> 00:01:29.719

things to provide when you have to use a



34

00:01:29.719 --> 00:01:31.819

context inside an activity is a



35

00:01:31.819 --> 00:01:34.579

reference to the activity instance now



36

00:01:34.579 --> 00:01:36.289

that would normally be this the current



37

00:01:36.289 --> 00:01:38.479

activity instance but our codes not



38

00:01:38.479 --> 00:01:40.789

running in main activity it's running in



39

00:01:40.789 --> 00:01:43.880

this nested download data class and if



40

00:01:43.880 --> 00:01:46.039

we left download data as an inner class



41

00:01:46.039 --> 00:01:48.409

we wouldn't have a problem but if you



42

00:01:48.409 --> 00:01:50.270

recall Android studio persuaded us to



43

00:01:50.270 --> 00:01:52.670

make it a companion object and that's



44

00:01:52.670 --> 00:01:53.990

just one here along the reference on



45

00:01:53.990 --> 00:01:56.869

line 40 to avoid memory leaks so as a



46

00:01:56.869 --> 00:01:58.789

result we no longer have access to our



47

00:01:58.789 --> 00:02:01.490

containing main activity class but okay



48

00:02:01.490 --> 00:02:03.349

that's not the end of the world what we



49

00:02:03.349 --> 00:02:05.810

can do is we can pass in a reference to



50

00:02:05.810 --> 00:02:07.819

the main activity instance when we



51

00:02:07.819 --> 00:02:10.759

create the download data object so let's



52

00:02:10.759 --> 00:02:13.099

see if that'll work so we've got this



53

00:02:13.099 --> 00:02:15.980

cell reference here on line 41 so at the



54

00:02:15.980 --> 00:02:18.599

moment we've got a sink as you can see



55

00:02:18.599 --> 00:02:20.670

yeah we've got private class download



56

00:02:20.670 --> 00:02:21.599

data async



57

00:02:21.599 --> 00:02:23.400

then don't bracket diamond operator



58

00:02:23.400 --> 00:02:26.819

stream void stream we can try changing



59

00:02:26.819 --> 00:02:28.980

that so let's go ahead and put



60

00:02:28.980 --> 00:02:32.430

parentheses after the download data and



61

00:02:32.430 --> 00:02:35.400

in there we'll put context : contact for



62

00:02:35.400 --> 00:02:39.480

the capital C comma the list view :



63

00:02:39.480 --> 00:02:41.340

list view with a capital L and the



64

00:02:41.340 --> 00:02:45.329

capital V now if Android studio didn't



65

00:02:45.329 --> 00:02:47.909

add those imports automatically like it



66

00:02:47.909 --> 00:02:49.590

did for me just use old editor to get



67

00:02:49.590 --> 00:02:51.719

them the imports added in my case



68

00:02:51.719 --> 00:02:53.250

because I've configured to Android



69

00:02:53.250 --> 00:02:55.139

studio that way it's automatically added



70

00:02:55.139 --> 00:02:58.709

the imports now we go to use the context



71

00:02:58.709 --> 00:03:01.169

and list view in our class functions so



72

00:03:01.169 --> 00:03:02.939

we need to provide backing fields for



73

00:03:02.939 --> 00:03:04.980

the both so we're going to do that down



74

00:03:04.980 --> 00:03:08.819

below the tag line here on line 44 and



75

00:03:08.819 --> 00:03:10.109

by the way we'll talk about this towards



76

00:03:10.109 --> 00:03:11.250

the end of the video this little pop-up



77

00:03:11.250 --> 00:03:12.750

in the corner because you'll probably



78

00:03:12.750 --> 00:03:15.120

get that from time to time so we're



79

00:03:15.120 --> 00:03:19.079

going to type a line 46 path prop



80

00:03:19.079 --> 00:03:23.729

context : context the capital C equals



81

00:03:23.729 --> 00:03:29.310

context in bar I'll call this one prop



82

00:03:29.310 --> 00:03:33.139

ListView : space ListView



83

00:03:33.139 --> 00:03:40.379

equals littlest you fix the typo now I



84

00:03:40.379 --> 00:03:41.639

don't recommend this naming convention



85

00:03:41.639 --> 00:03:43.769

by the way I've just made it up but I



86

00:03:43.769 --> 00:03:44.790

want to be clear that what we're



87

00:03:44.790 --> 00:03:45.629

referring to



88

00:03:45.629 --> 00:03:47.579

so prefixed both these backing



89

00:03:47.579 --> 00:03:50.609

properties with the word prop but please



90

00:03:50.609 --> 00:03:51.359

don't do this



91

00:03:51.359 --> 00:03:53.340

I've done it so there's no confusion



92

00:03:53.340 --> 00:03:55.169

between the properties and the



93

00:03:55.169 --> 00:03:56.849

parameters passed into the class to



94

00:03:56.849 --> 00:03:59.069

initialize them all right that's at this



95

00:03:59.069 --> 00:04:00.209

point though we've actually got some



96

00:04:00.209 --> 00:04:01.620

warnings and you've got some warnings



97

00:04:01.620 --> 00:04:05.120

over here and we've also got an error



98

00:04:05.120 --> 00:04:07.889

and we've still got an error both there



99

00:04:07.889 --> 00:04:09.449

which would looked at type previously



100

00:04:09.449 --> 00:04:10.829

which we were addressing and we've also



101

00:04:10.829 --> 00:04:14.219

got another error up here relating now



102

00:04:14.219 --> 00:04:17.699

to line 37 and they call turd the



103

00:04:17.699 --> 00:04:21.000

download data function so the first one



104

00:04:21.000 --> 00:04:22.560

a lot of 37 well that's just because we



105

00:04:22.560 --> 00:04:24.750

change the Declaration of download data



106

00:04:24.750 --> 00:04:26.370

but we haven't passed anything to it



107

00:04:26.370 --> 00:04:28.469

let's go ahead and change that first I'm



108

00:04:28.469 --> 00:04:31.380

up to here along 37 and what we'll do is



109

00:04:31.380 --> 00:04:32.340

we'll add this



110

00:04:32.340 --> 00:04:34.230

that's the first argument in a common



111

00:04:34.230 --> 00:04:37.290

space in XML ListView as the second



112

00:04:37.290 --> 00:04:39.260

argument that should fix that error up



113

00:04:39.260 --> 00:04:41.430

and you can sort you saw that what I



114

00:04:41.430 --> 00:04:43.380

refer to XML ListView Android studio



115

00:04:43.380 --> 00:04:46.080

adds the synthetic import for us and



116

00:04:46.080 --> 00:04:48.120

that lets us refer to any of the IDs in



117

00:04:48.120 --> 00:04:49.740

the layout without having to keep



118

00:04:49.740 --> 00:04:51.990

calling for a V my ID which obviously is



119

00:04:51.990 --> 00:04:54.810

good all right so that's fixed one of



120

00:04:54.810 --> 00:04:55.919

the errors but I've still got this



121

00:04:55.919 --> 00:04:57.630

option here this is the error here array



122

00:04:57.630 --> 00:04:59.400

adapter which we need to address we've



123

00:04:59.400 --> 00:05:02.130

also got these warnings as well now



124

00:05:02.130 --> 00:05:03.780

remember that the only reason we changed



125

00:05:03.780 --> 00:05:05.760

download data from an inner class to a



126

00:05:05.760 --> 00:05:08.460

companion object was to avoid leaks and



127

00:05:08.460 --> 00:05:11.669

if we have a look at these warnings the



128

00:05:11.669 --> 00:05:14.490

field leaks a context object well we can



129

00:05:14.490 --> 00:05:15.810

see the first one proper context has



130

00:05:15.810 --> 00:05:17.639

never used but the second warning this



131

00:05:17.639 --> 00:05:20.880

field leaks a context object now if your



132

00:05:20.880 --> 00:05:22.919

async task doesn't have to update the



133

00:05:22.919 --> 00:05:24.600

user interface then by all means use one



134

00:05:24.600 --> 00:05:27.570

if you do have to update the UI as we do



135

00:05:27.570 --> 00:05:29.910

here then I'd suggest using alternative



136

00:05:29.910 --> 00:05:31.830

approach and we'll see that one in a



137

00:05:31.830 --> 00:05:33.870

little while but first let's see if we



138

00:05:33.870 --> 00:05:36.360

get this working so what we can do is we



139

00:05:36.360 --> 00:05:37.950

can avoid these leaks by using a



140

00:05:37.950 --> 00:05:40.260

delegate which will result in only weak



141

00:05:40.260 --> 00:05:43.169

references to the context being held so



142

00:05:43.169 --> 00:05:44.370

we can come back up here to our line



143

00:05:44.370 --> 00:05:47.520

again there prop context colon contexts



144

00:05:47.520 --> 00:05:50.940

then we can put after the word context



145

00:05:50.940 --> 00:05:58.289

by delegates not know looks like with



146

00:05:58.289 --> 00:06:02.039

parentheses and we can do the same or



147

00:06:02.039 --> 00:06:04.919

the next line so they're prop ListView :



148

00:06:04.919 --> 00:06:07.849

ListView equals and we'll change it to



149

00:06:07.849 --> 00:06:11.479

delegates dot not now



150

00:06:11.479 --> 00:06:16.590

in parentheses but of course I need the



151

00:06:16.590 --> 00:06:23.850

word bias well by delegates to fix it



152

00:06:23.850 --> 00:06:26.460

get rid of vehicles so we're contacts by



153

00:06:26.460 --> 00:06:28.920

delegates not null parentheses in the



154

00:06:28.920 --> 00:06:30.660

list view by delegates doctrinal



155

00:06:30.660 --> 00:06:33.450

parentheses so that should fix the



156

00:06:33.450 --> 00:06:35.190

warnings we're there any getting the



157

00:06:35.190 --> 00:06:37.230

warning stare about the fact that they



158

00:06:37.230 --> 00:06:38.670

never used and which is correct at the



159

00:06:38.670 --> 00:06:40.080

moment but I've also got this other



160

00:06:40.080 --> 00:06:42.990

error to fix down here as well but first



161

00:06:42.990 --> 00:06:45.780

thing what we need to do now is give our



162

00:06:45.780 --> 00:06:47.670

properties given value so we need to add



163

00:06:47.670 --> 00:06:49.500

an initialization block to assign the



164

00:06:49.500 --> 00:06:52.050

arguments to our properties we can go



165

00:06:52.050 --> 00:06:54.530

ahead and do that just under there



166

00:06:54.530 --> 00:06:59.640

we can type in it in add a code block



167

00:06:59.640 --> 00:07:01.380

and input in there we can type prop



168

00:07:01.380 --> 00:07:05.670

context equals context and on the next



169

00:07:05.670 --> 00:07:08.310

line we can type prop ListView equals



170

00:07:08.310 --> 00:07:11.060

ListView



171

00:07:11.060 --> 00:07:13.350

okay so that's their initialized them as



172

00:07:13.350 --> 00:07:15.240

well and you can see that the warnings



173

00:07:15.240 --> 00:07:17.190

no disappeared because they are actually



174

00:07:17.190 --> 00:07:18.510

being used and have been initialized



175

00:07:18.510 --> 00:07:20.820

correctly so that's cleared the warnings



176

00:07:20.820 --> 00:07:22.920

and now we can complete the creation of



177

00:07:22.920 --> 00:07:24.720

our array adapter because obviously



178

00:07:24.720 --> 00:07:27.060

that's still showing an error here so we



179

00:07:27.060 --> 00:07:28.370

can change it to Val array adapter



180

00:07:28.370 --> 00:07:31.200

equals and we'll change it to adapter



181

00:07:31.200 --> 00:07:34.110

with an e and that equals array adapter



182

00:07:34.110 --> 00:07:36.330

there's feed entry and within the



183

00:07:36.330 --> 00:07:37.920

parentheses now we want to update this



184

00:07:37.920 --> 00:07:42.990

bring you the top prop context comma r



185

00:07:42.990 --> 00:07:47.120

dot layout dot list underscore item



186

00:07:47.120 --> 00:07:50.580

comma space and it's going to be Parsons



187

00:07:50.580 --> 00:07:55.110

dot applications and obviously the right



188

00:07:55.110 --> 00:07:57.750

parenthesis as well and you can see now



189

00:07:57.750 --> 00:07:59.970

that the error has disappeared we have



190

00:07:59.970 --> 00:08:01.890

got a warning here just that the fact



191

00:08:01.890 --> 00:08:03.270

that the array adapter is not used but



192

00:08:03.270 --> 00:08:05.580

that's okay for the moment so this



193

00:08:05.580 --> 00:08:08.310

definition works but it's a bit messy



194

00:08:08.310 --> 00:08:11.310

it's not also not very readable and not



195

00:08:11.310 --> 00:08:13.170

immediately obvious what exactly will



196

00:08:13.170 --> 00:08:15.840

happen if our activities destroyed while



197

00:08:15.840 --> 00:08:18.390

the async tasks still running so I'm



198

00:08:18.390 --> 00:08:20.520

going to do with that shortly now our



199

00:08:20.520 --> 00:08:23.430

data if you recall is an ArrayList which



200

00:08:23.430 --> 00:08:25.320

we can get from the pars applications



201

00:08:25.320 --> 00:08:27.470

class by using its applications property



202

00:08:27.470 --> 00:08:29.700

so you can see that if we go back to our



203

00:08:29.700 --> 00:08:33.360

parse applications and look at our



204

00:08:33.360 --> 00:08:34.610

ArrayList



205

00:08:34.610 --> 00:08:37.020

the ArrayList that contains over here



206

00:08:37.020 --> 00:08:37.380

the



207

00:08:37.380 --> 00:08:40.650

a list of applications we passed out of



208

00:08:40.650 --> 00:08:43.110

the XML data so all that really remains



209

00:08:43.110 --> 00:08:45.150

to do is connect the data to the



210

00:08:45.150 --> 00:08:47.970

ListView let's go back to our main



211

00:08:47.970 --> 00:08:51.300

activity again then of the line



212

00:08:51.300 --> 00:08:53.820

following that Val array adapter we're



213

00:08:53.820 --> 00:08:58.910

going to type prop list view dot adapter



214

00:08:58.910 --> 00:09:03.870

equals array adapter and you can see all



215

00:09:03.870 --> 00:09:05.250

the warnings in errors of disappeared



216

00:09:05.250 --> 00:09:07.830

now so we create a new array adapter



217

00:09:07.830 --> 00:09:10.590

object now that needs three arguments



218

00:09:10.590 --> 00:09:13.770

this is this code here on line 62 I'm



219

00:09:13.770 --> 00:09:16.170

talking about the first is the context



220

00:09:16.170 --> 00:09:18.510

I'm going to talk about context a bit



221

00:09:18.510 --> 00:09:20.550

later because it's probably a good idea



222

00:09:20.550 --> 00:09:22.950

to see this working first for now though



223

00:09:22.950 --> 00:09:24.480

we're just kind of pass in this instance



224

00:09:24.480 --> 00:09:27.870

of main activity this prop context now



225

00:09:27.870 --> 00:09:29.640

the second parameter is the resource



226

00:09:29.640 --> 00:09:32.430

containing the textview that the array



227

00:09:32.430 --> 00:09:34.470

adapter will use to put the data into



228

00:09:34.470 --> 00:09:36.810

now if you recall we created that in the



229

00:09:36.810 --> 00:09:38.430

layout file list and it's go right on



230

00:09:38.430 --> 00:09:41.130

Linux ml and so therefore I'm passing



231

00:09:41.130 --> 00:09:44.310

out layout dot list underscore item for



232

00:09:44.310 --> 00:09:46.260

the resource argument to link those two



233

00:09:46.260 --> 00:09:48.660

together now the third thing it needs is



234

00:09:48.660 --> 00:09:51.330

the list of objects to display and we're



235

00:09:51.330 --> 00:09:54.450

over here we're using the applications



236

00:09:54.450 --> 00:09:56.340

property of our pars up locations



237

00:09:56.340 --> 00:09:58.620

instance to provide the ArrayList of



238

00:09:58.620 --> 00:10:00.990

feed entry objects so the only other



239

00:10:00.990 --> 00:10:03.690

thing to do is use the list views set



240

00:10:03.690 --> 00:10:06.510

adapter method to tell it the adapter it



241

00:10:06.510 --> 00:10:09.210

should use to get us data and that's all



242

00:10:09.210 --> 00:10:09.930

there is to it



243

00:10:09.930 --> 00:10:11.730

you had a ListView widget to your layout



244

00:10:11.730 --> 00:10:15.150

you create a textview resource create an



245

00:10:15.150 --> 00:10:17.370

instance of an adapter and then call the



246

00:10:17.370 --> 00:10:18.810

set adaptor function to link the



247

00:10:18.810 --> 00:10:20.730

ListView to the adapter or you can see



248

00:10:20.730 --> 00:10:22.680

we're doing it here by just setting the



249

00:10:22.680 --> 00:10:25.620

property directly in Kotlin to achieve



250

00:10:25.620 --> 00:10:27.870

that and what we should be able to find



251

00:10:27.870 --> 00:10:30.540

out is if we run this application we



252

00:10:30.540 --> 00:10:32.490

should find that the top 10 free



253

00:10:32.490 --> 00:10:33.870

applications will be displayed in a



254

00:10:33.870 --> 00:10:36.360

scrollable list well just before I start



255

00:10:36.360 --> 00:10:38.730

I just wanted to briefly open up our



256

00:10:38.730 --> 00:10:41.460

emulators and to let you know that I'm



257

00:10:41.460 --> 00:10:45.720

now using the nexus 5x API 26 and I'm



258

00:10:45.720 --> 00:10:47.370

using the Google Play version of that



259

00:10:47.370 --> 00:10:49.110

now there's a few reasons for that



260

00:10:49.110 --> 00:10:50.850

firstly you notice in a previous video



261

00:10:50.850 --> 00:10:51.240

you



262

00:10:51.240 --> 00:10:52.410

to record there was lots of errors



263

00:10:52.410 --> 00:10:54.899

relating to my emulator so by switching



264

00:10:54.899 --> 00:10:58.230

to a nexus 5x which is or more



265

00:10:58.230 --> 00:10:59.970

appropriate anyway because a nexus 4



266

00:10:59.970 --> 00:11:01.860

doesn't run the latest version of



267

00:11:01.860 --> 00:11:04.020

android anyway so even in an emulator it



268

00:11:04.020 --> 00:11:06.660

makes sense to use a new version but the



269

00:11:06.660 --> 00:11:08.339

Nexus 5x is also good because it



270

00:11:08.339 --> 00:11:11.190

supports a Google Play api's and that's



271

00:11:11.190 --> 00:11:13.110

really useful for testing applications



272

00:11:13.110 --> 00:11:15.450

that are using Google Play so I suggest



273

00:11:15.450 --> 00:11:18.240

you switch to that emulator and just to



274

00:11:18.240 --> 00:11:19.800

give you a bit of a lowdown on that the



275

00:11:19.800 --> 00:11:21.060

other thing I'd recommend we just go



276

00:11:21.060 --> 00:11:23.430

back into Tools briefly they go into



277

00:11:23.430 --> 00:11:27.540

Android going to SDK manager the other



278

00:11:27.540 --> 00:11:29.370

thing I did it made sure that I had set



279

00:11:29.370 --> 00:11:32.040

and click on show package details over



280

00:11:32.040 --> 00:11:34.620

here the notice that under Android 8



281

00:11:34.620 --> 00:11:38.010

Oreo I've got the Google Play until x86



282

00:11:38.010 --> 00:11:39.899

atom system image so you want to make



283

00:11:39.899 --> 00:11:41.970

sure we're using that one and not the



284

00:11:41.970 --> 00:11:44.520

API the Google API is because the Google



285

00:11:44.520 --> 00:11:46.890

Play 1 gives you that extra option to



286

00:11:46.890 --> 00:11:49.560

run the Google Play apps or apps that



287

00:11:49.560 --> 00:11:50.910

support or you use Google Play



288

00:11:50.910 --> 00:11:53.910

functionality and that's very useful so



289

00:11:53.910 --> 00:11:55.770

the other thing to keep in mind I'm



290

00:11:55.770 --> 00:11:56.850

going to cancel out of that nail that



291

00:11:56.850 --> 00:11:58.950

going back into the emulators there's



292

00:11:58.950 --> 00:12:00.930

only a few devices that can actually run



293

00:12:00.930 --> 00:12:04.200

this Google Play version of an emulator



294

00:12:04.200 --> 00:12:07.050

Nexus 5x is one and I think Nexus 5 is



295

00:12:07.050 --> 00:12:09.120

another one most likely when the new



296

00:12:09.120 --> 00:12:11.579

pixel devices get released by Android



297

00:12:11.579 --> 00:12:12.930

they're probably finally I'll run it as



298

00:12:12.930 --> 00:12:14.910

well but if you're trying to set this



299

00:12:14.910 --> 00:12:17.279

Google Play emulator



300

00:12:17.279 --> 00:12:19.170

this particular version on another



301

00:12:19.170 --> 00:12:21.180

device more than likely it won't work in



302

00:12:21.180 --> 00:12:23.190

an emulator so just keep that in mind so



303

00:12:23.190 --> 00:12:24.720

in my case what I've done is I'm using



304

00:12:24.720 --> 00:12:27.209

the Nexus 5x from now on and I'll use



305

00:12:27.209 --> 00:12:30.600

that for all future emulator tasks in



306

00:12:30.600 --> 00:12:32.820

this course and actually got that



307

00:12:32.820 --> 00:12:34.950

running now as you can see there all



308

00:12:34.950 --> 00:12:36.899

right so let's now try running this and



309

00:12:36.899 --> 00:12:42.450

see what happens ok running on the Nexus



310

00:12:42.450 --> 00:12:47.170

5x let's have a look at it



311

00:12:47.170 --> 00:12:49.850

okay you see there's our applications



312

00:12:49.850 --> 00:12:51.560

our 10 applications appearing in the



313

00:12:51.560 --> 00:12:53.240

list and you can notice that I can



314

00:12:53.240 --> 00:12:55.490

scroll them up and down down so we're in



315

00:12:55.490 --> 00:12:57.589

a scrollable a list view and things are



316

00:12:57.589 --> 00:13:00.500

working nicely now if I go back to our



317

00:13:00.500 --> 00:13:03.110

code go back to main activity if I chose



318

00:13:03.110 --> 00:13:06.230

the limit from 10 to 25 of the URL



319

00:13:06.230 --> 00:13:07.970

that's this one here on line 40 I come



320

00:13:07.970 --> 00:13:11.779

over here and change that to 25 and run



321

00:13:11.779 --> 00:13:17.600

our app again we'll actually see the 25



322

00:13:17.600 --> 00:13:20.510

apps instead of the top 10 they can see



323

00:13:20.510 --> 00:13:22.220

the list now is actually longer than



324

00:13:22.220 --> 00:13:26.149

what the top 10 was before so we still



325

00:13:26.149 --> 00:13:27.770

have the ones that we had before but you



326

00:13:27.770 --> 00:13:28.940

can see that I'm scrolling down further



327

00:13:28.940 --> 00:13:30.709

now and getting access to other apps as



328

00:13:30.709 --> 00:13:31.070

well



329

00:13:31.070 --> 00:13:33.980

that's clearly more than 10 apps so the



330

00:13:33.980 --> 00:13:36.110

list view is able to support a variable



331

00:13:36.110 --> 00:13:38.510

number of items to be shown so you don't



332

00:13:38.510 --> 00:13:40.070

have to change any code to make it



333

00:13:40.070 --> 00:13:41.750

display more records if you've got more



334

00:13:41.750 --> 00:13:44.720

records to display all right so let's



335

00:13:44.720 --> 00:13:46.100

finish the video here but before I do



336

00:13:46.100 --> 00:13:47.930

that if you do get these updates and



337

00:13:47.930 --> 00:13:49.940

they will come through from time to time



338

00:13:49.940 --> 00:13:51.500

I suggest you actually go ahead and



339

00:13:51.500 --> 00:13:53.209

install them to do that you can just



340

00:13:53.209 --> 00:13:55.910

click on install and depending on when



341

00:13:55.910 --> 00:13:57.470

you're watching this Android studio is



342

00:13:57.470 --> 00:13:59.029

getting smarter and smarter with Kotlin



343

00:13:59.029 --> 00:14:00.950

code and giving the ability to do this



344

00:14:00.950 --> 00:14:03.770

automatically so click on install it



345

00:14:03.770 --> 00:14:05.300

should download and install that for us



346

00:14:05.300 --> 00:14:07.250

and that's just enhancements to Kotlin



347

00:14:07.250 --> 00:14:10.010

into the plugin into the language who



348

00:14:10.010 --> 00:14:11.480

will then need to restart to activate



349

00:14:11.480 --> 00:14:21.550

the changes



350

00:14:21.550 --> 00:14:23.780

and as you can see it's indexing which



351

00:14:23.780 --> 00:14:25.040

will do for the first time with the



352

00:14:25.040 --> 00:14:31.590

diversion but all our code is there and



353

00:14:31.590 --> 00:14:33.640

if you didn't get a message like this



354

00:14:33.640 --> 00:14:35.590

you click on this and click on update



355

00:14:35.590 --> 00:14:40.540

runtime and again depending on where we



356

00:14:40.540 --> 00:14:42.100

are what the status is with Android



357

00:14:42.100 --> 00:14:43.660

studio this could be an automatic thing



358

00:14:43.660 --> 00:14:45.670

but you can see that automatic library



359

00:14:45.670 --> 00:14:47.980

version update for greater practice is



360

00:14:47.980 --> 00:14:49.630

currently unsupported and that's



361

00:14:49.630 --> 00:14:51.100

relating to : you'd find that this was



362

00:14:51.100 --> 00:14:53.160

Java that would actually be working



363

00:14:53.160 --> 00:14:55.300

automatically so you may not get this by



364

00:14:55.300 --> 00:14:56.620

the time you get around to seeing this



365

00:14:56.620 --> 00:14:59.110

but if this does come up close it down



366

00:14:59.110 --> 00:15:01.660

click on the event log we can see here



367

00:15:01.660 --> 00:15:04.210

that it says your version of Kotlin



368

00:15:04.210 --> 00:15:06.100

runtime is Kotlin STD bitly but



369

00:15:06.100 --> 00:15:07.720

basically the important part is these



370

00:15:07.720 --> 00:15:10.510

numbers here 1 1 4 3 or plugin version 1



371

00:15:10.510 --> 00:15:12.780

1 5 o so you just take these numbers



372

00:15:12.780 --> 00:15:16.420

obviously 1 dot 1.5 hours greater than



373

00:15:16.420 --> 00:15:19.810

1.1 dot 4 - 3 so i'm gonna copy the 1 1



374

00:15:19.810 --> 00:15:22.420

5 oh I'm going to close down the event



375

00:15:22.420 --> 00:15:25.030

log they're gonna open my Gradle scripts



376

00:15:25.030 --> 00:15:26.530

I'm gonna click on this first



377

00:15:26.530 --> 00:15:28.930

build.gradle you can see where it's got



378

00:15:28.930 --> 00:15:31.960

xx Kotlin version equals 1 point 1 point



379

00:15:31.960 --> 00:15:34.810

1 point 4 that's 3 I'm gonna change that



380

00:15:34.810 --> 00:15:38.620

to the newer number and for some reason



381

00:15:38.620 --> 00:15:39.670

that didn't copy I'll just try it again



382

00:15:39.670 --> 00:15:40.500

copy



383

00:15:40.500 --> 00:15:42.670

it doesn't copy I'll just stop it in



384

00:15:42.670 --> 00:15:45.790

we'll close off the event log again back



385

00:15:45.790 --> 00:15:49.930

into here and paste it let's go that's



386

00:15:49.930 --> 00:15:51.490

better this time and click on sync now



387

00:15:51.490 --> 00:15:54.760

and that should actually now update our



388

00:15:54.760 --> 00:15:56.500

project to be using the latest version



389

00:15:56.500 --> 00:15:59.080

of column you can see the other bottom



390

00:15:59.080 --> 00:16:00.520

it's working away and downloading what



391

00:16:00.520 --> 00:16:02.470

it needs to make that happen and the



392

00:16:02.470 --> 00:16:04.120

downloads are generally a once-off pip



393

00:16:04.120 --> 00:16:06.670

what would self process so they can find



394

00:16:06.670 --> 00:16:07.930

that it takes a while the first time but



395

00:16:07.930 --> 00:16:10.150

then once that's done it's downloaded



396

00:16:10.150 --> 00:16:12.100

and these relevant files are on your



397

00:16:12.100 --> 00:16:14.530

computer and subsequent to compilation



398

00:16:14.530 --> 00:16:16.510

and opening projects etc will be a lot



399

00:16:16.510 --> 00:16:20.290

faster



400

00:16:20.290 --> 00:16:22.190

all right so I can see it's finally



401

00:16:22.190 --> 00:16:23.360

finished in that we can just test that



402

00:16:23.360 --> 00:16:24.350

we can actually close down the project



403

00:16:24.350 --> 00:16:27.350

and open it again this time we shouldn't



404

00:16:27.350 --> 00:16:30.590

get any warnings you see it's no happy



405

00:16:30.590 --> 00:16:33.140

and I can close down the build Gradle



406

00:16:33.140 --> 00:16:34.370

script there because so we're now



407

00:16:34.370 --> 00:16:36.440

running the latest version all right so



408

00:16:36.440 --> 00:16:38.420

let's finish the video here now so the



409

00:16:38.420 --> 00:16:39.740

next video we'll have start having a



410

00:16:39.740 --> 00:16:41.690

look at the interface because obviously



411

00:16:41.690 --> 00:16:43.340

it wasn't terribly pretty if we go back



412

00:16:43.340 --> 00:16:45.350

and have a quick look at it like so



413

00:16:45.350 --> 00:16:52.269

we'll just run it again



414

00:16:52.269 --> 00:16:54.309

so as you can see it's not terribly



415

00:16:54.309 --> 00:16:55.749

pretty but I will have a look I'm seeing



416

00:16:55.749 --> 00:16:58.209

what we can do to make that a little bit



417

00:16:58.209 --> 00:17:01.290

nicer in the next video



