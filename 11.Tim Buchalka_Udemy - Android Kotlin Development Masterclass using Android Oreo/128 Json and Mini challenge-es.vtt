WEBVTT
1

00:00:05.970 --> 00:00:11.630

Bien, continuando con el ltimo video, comenzamos a hablar sobre este nuevo formato de datos que obtuvimos



2

00:00:11.630 --> 00:00:17.900

cuando cambiamos el parmetro a @ format = Json. Los navegadores en general no rinden datos



3

00:00:17.900 --> 00:00:19.210

json muy bien.



4

00:00:19.250 --> 00:00:24.290

Como mencion, probablemente obtenga la misma pantalla independientemente del navegador que est usando, a menos que



5

00:00:24.290 --> 00:00:27.710

est usando Internet Explorer, que probablemente no podr manejar los datos.



6

00:00:28.100 --> 00:00:33.150

Pero eso muestra la belleza de una API porque hace todo el trabajo por ti.



7

00:00:33.310 --> 00:00:38.500

Entonces puede ver cmo ahora tenemos datos Json en lugar de XML simplemente cambiando un argumento.



8

00:00:38.650 --> 00:00:43.400

Ahora quiero hablar muy brevemente sobre esto, para que entiendas cmo funciona Json.



9

00:00:43.400 --> 00:00:46.180

Ahora lo que est viendo en la pantalla aqu



10

00:00:46.310 --> 00:00:54.520

no es el cdigo Json completamente vlido, as que ignore el json Flickr feed y los parntesis de apertura al inicio aqu, y voy a volver



11

00:00:54.520 --> 00:00:55.960

a eso en un minuto.



12

00:00:56.320 --> 00:01:02.290

Pero cualquier cosa que est entre las llaves, el primer cors izquierdo y el cors derecho de



13

00:01:02.290 --> 00:01:09.450

cierre es un objeto, y todo lo que est entre corchetes es una matriz, as que puedes ver que tenemos un



14

00:01:09.460 --> 00:01:10.160

corchete aqu,



15

00:01:10.180 --> 00:01:11.710

tenemos algunos elementos ah.



16

00:01:14.480 --> 00:01:17.860

Vamos a tener que ir al fondo, estn los corchetes de



17

00:01:21.210 --> 00:01:23.520

cierre, como se puede ver all abajo.



18

00:01:23.840 --> 00:01:29.420

As que eso es una matriz, y los elementos que estn dentro de un objeto se llaman propiedades, as que



19

00:01:29.430 --> 00:01:36.120

vuelva a subir a la parte superior del archivo de nuevo, el ttulo en este caso aqu, y el enlace - ambas son propiedades.



20

00:01:36.200 --> 00:01:39.590

Ambos aparecen en el objeto principal, y luego aparecen las propiedades con el



21

00:01:39.650 --> 00:01:44.760

ttulo y el enlace de los nombres, dentro de la matriz de elementos, como puede ver aqu, ttulo y enlace.



22

00:01:44.810 --> 00:01:50.340

Now items es una matriz de objetos y puede ver dnde comienza cada objeto de la matriz y dnde



23

00:01:50.390 --> 00:01:51.650

termina con las llaves.



24

00:01:52.040 --> 00:01:57.020

As que de nuevo tenemos esta llave de tuercas aqu que se abre y se cierra, as que esa es una entrada, esa es una



25

00:01:57.160 --> 00:01:58.340

entrada de matriz, si se quiere.



26

00:01:58.580 --> 00:02:04.470

Entonces, cada objeto comienza y termina con una llave y se separa del anterior con una coma.



27

00:02:04.810 --> 00:02:08.530

Entonces estos objetos son los registros individuales, uno para cada imagen.



28

00:02:08.530 --> 00:02:13.600

Ahora puede estar pensando que parece un poco complejo, pero esencialmente, si recuerda que



29

00:02:13.600 --> 00:02:16.900

un objeto comienza con una llave y una matriz



30

00:02:17.080 --> 00:02:21.260

es el corchete, entonces tiene sentido. Y la buena noticia es que realmente no tenemos que preocuparnos por todo eso.



31

00:02:21.290 --> 00:02:26.500

Tenemos una computadora para que lo haga por nosotros. Entonces puede ver que tenemos muchos elementos en la



32

00:02:26.500 --> 00:02:29.710

matriz que esperara porque cada imagen es un elemento separado.



33

00:02:29.730 --> 00:02:36.300

Ahora cada elemento tiene una propiedad de etiquetas, aqu puede ver una, que es en lo que hemos estado buscando.



34

00:02:36.370 --> 00:02:40.900

Por lo tanto, todos estos elementos deben tener etiquetas que contengan una o ms de las



35

00:02:40.900 --> 00:02:45.620

palabras que estamos buscando, Android, Oreo o SDK. Android all, Android all



36

00:02:46.210 --> 00:02:50.770

para eso, y Android para eso, y as sucesivamente.



37

00:02:50.920 --> 00:02:55.210

Ahora, lo prximo que debe hacer, y le sugiero que siempre haga esto cuando trabaje con este



38

00:02:55.660 --> 00:02:58.430

tipo de datos, es verificar que los datos sean realmente vlidos.



39

00:02:58.460 --> 00:03:05.020

Ahora vlido significa que cumple con la especificacin para cualquier tipo de datos que se supone que debe ser,



40

00:03:05.290 --> 00:03:06.540

json en este caso.



41

00:03:06.550 --> 00:03:11.320

Ahora podemos suponer que flickr nos est dando datos json vlidos, pero no es bueno suponer eso.



42

00:03:11.800 --> 00:03:14.590

De hecho, no es bueno asumir nada cuando se programa.



43

00:03:14.830 --> 00:03:20.740

Lo que sugiero que hagas es ir a un sitio que te permita validar los datos de json, y luego copiarlos y



44

00:03:20.740 --> 00:03:23.020

pegarlos literalmente y asegurarte de que son correctos.



45

00:03:23.020 --> 00:03:26.920

Ahora, la razn por la que queremos hacer eso es que no estamos pasando horas tratando de solucionar problemas



46

00:03:26.920 --> 00:03:27.570

en nuestro cdigo



47

00:03:27.640 --> 00:03:30.390

de programa, solo para descubrir que los datos en s no son vlidos.



48

00:03:30.400 --> 00:03:34.040

Ahora puedes buscar validadores json en lnea, pero voy a ir a uno llamado



49

00:03:34.040 --> 00:03:42.820

Json pelusa, que s que es uno que funciona bastante bien. Pegar ese enlace. Ahora podra copiar y pegar todos los datos



50

00:03:42.820 --> 00:03:44.370

que estn en la



51

00:03:44.710 --> 00:03:50.460

pantalla, pero en su lugar voy a copiar la URL porque es mucho ms fcil y luego



52

00:03:50.460 --> 00:03:53.520

pegarla en este sitio web. As que voy a volver al sitio web



53

00:03:53.540 --> 00:03:59.780

donde tenamos todos esos datos, voy a copiar eso y volver al sitio web json lint. Ahora bien, este es el validador json,



54

00:03:59.870 --> 00:04:01.620

por lo que puede



55

00:04:01.870 --> 00:04:06.010

pegar aqu los datos json reales o url.



56

00:04:06.010 --> 00:04:11.470

Ahora sitios como este estn ah para ayudarlo a confirmar que una pieza en particular es vlida.



57

00:04:11.470 --> 00:04:17.020

Ahora tambin puede encontrar validadores XML en lnea si est trabajando con datos XML, y siempre es una buena idea asegurarse de



58

00:04:17.020 --> 00:04:21.790

que sus datos de origen sean vlidos como dije. As que voy a pegar la URL que



59

00:04:21.790 --> 00:04:30.400

estamos viendo, que he copiado, y voy a hacer clic en validar, json aqu. Ahora realmente obtenemos errores aqu.



60

00:04:30.410 --> 00:04:30.750

&nbsp;



61

00:04:30.860 --> 00:04:34.270

Entonces, lo que nos dice es que Json no es



62

00:04:34.440 --> 00:04:39.550

vlido, y podramos terminar causndonos problemas si tratamos de trabajar con l dentro de nuestro cdigo.



63

00:04:39.570 --> 00:04:43.650

Ahora, si ya est familiarizado con json, probablemente ya haya detectado que la fuente



64

00:04:43.730 --> 00:04:49.590

de JSON flickr y el parntesis izquierdo en la parte superior no deberan estar all y el resultado es que muestra



65

00:04:49.690 --> 00:04:54.120

un error en la lnea uno, apuntando a JSON Flickr alimentar aqu en el cuadro rojo.



66

00:04:54.210 --> 00:04:56.760

As que esperaba uno de los valores enumerados



67

00:04:57.230 --> 00:05:00.530

aqu, pero en cambio obtuvo algo indefinido json flickr feed



68

00:05:00.920 --> 00:05:06.440

Ahora voy a llevarlo a travs de un proceso aqu, para que entienda cmo depurar estas cosas,



69

00:05:06.440 --> 00:05:10.850

porque si no lo hace Comprenda el proceso de bsqueda y clculo de



70

00:05:10.850 --> 00:05:13.640

estos datos, y luego estar golpeando obstculos insuperables.



71

00:05:13.640 --> 00:05:18.260

Ahora siempre es bueno saber cmo resolver problemas como este en caso de que obtengas algo



72

00:05:18.260 --> 00:05:20.660

similar con otro feed con el que quieras trabajar.



73

00:05:21.170 --> 00:05:25.950

Entonces, claramente, esto nos dice en este momento que los datos de Json que obtuvimos de flickr



74

00:05:25.960 --> 00:05:29.120

no son vlidos y nos dicen a qu se est oponiendo.



75

00:05:29.690 --> 00:05:31.250

Entonces, qu haras en este momento?



76

00:05:31.700 --> 00:05:36.420

Bueno, lo que no hara, no ira a pasar horas en la documentacin porque probablemente sea



77

00:05:36.430 --> 00:05:39.090

una respuesta aqu en el texto de la pantalla.



78

00:05:39.170 --> 00:05:44.990

Entonces, lo que probablemente hara es copiar este pequeo cdigo aqu, este



79

00:05:44.990 --> 00:05:56.060

texto json del que se est quejando, copiara eso y abrira una pestaa nueva y buscara jsonFlickrFeed Invalid Json, porque obviamente ah es donde



80

00:05:56.060 --> 00:05:57.450

est el problema



81

00:05:57.500 --> 00:06:03.100

Son datos JSON invlidos y ese es el identificador que con suerte nos conducir a una respuesta.



82

00:06:03.110 --> 00:06:07.760

La otra opcin es escribir algo en nuestro cdigo para eliminar el texto no vlido, y eso es obviamente



83

00:06:07.760 --> 00:06:09.730

una solucin si no puede encontrar nada ms.



84

00:06:09.740 --> 00:06:15.550

El problema es que una vez que hemos escrito el cdigo para analizar Json, podemos reutilizarlo siempre que



85

00:06:15.560 --> 00:06:16.900

tengamos datos de Json.



86

00:06:16.940 --> 00:06:20.910

De hecho, podramos producir un analizador json genrico que podamos usar.



87

00:06:20.920 --> 00:06:26.240

Ahora no voy a hacer eso en esta aplicacin, y hay bibliotecas json que puedes usar pero fallarn



88

00:06:26.240 --> 00:06:27.210

con estos datos.



89

00:06:27.470 --> 00:06:33.820

Entonces vale la pena tratar de obtener algo vlido antes de escribir cualquier cdigo. As que pegar JSON Flickr alimenta a JSON no



90

00:06:33.830 --> 00:06:36.700

vlido o buscar eso en Google, puedes ver



91

00:06:37.430 --> 00:06:39.880

que ha producido un par de resultados.



92

00:06:39.920 --> 00:06:42.550

El desbordamiento de pila, este primero, es uno que parece interesante.



93

00:06:42.550 --> 00:06:43.360

As que hacemos clic



94

00:06:48.140 --> 00:06:51.120

en eso, y pueden ver aqu que se trata de la antigua API web.



95

00:06:51.330 --> 00:06:56.460

Ahora eso es interesante. Alguien ha dicho que la antigua API web, Ahora puedes ver cuando



96

00:06:56.460 --> 00:07:03.130

y eso es muy similar a la URL que estamos usando. Ahora no usamos ID pero usamos format = Jason y tambin agregamos algunas etiquetas. lo entend bien, que el componente



97

00:07:03.510 --> 00:07:08.140

Ahora que el comentario habla sobre el uso de la API web actual, pero tambin agrega este json se elimin inmediatamente, bsicamente sin el primer Ahora, en el momento en que estoy grabando esto, Firefox



98

00:07:08.220 --> 00:07:10.820

parmetro adicional, ninguna llamada json es igual a uno. formatea el Json muy bien.



99

00:07:11.310 --> 00:07:18.120

Entonces, lo que realmente est sucediendo es que flickr nos est transmitiendo algo sobre Json P en lugar de Json. Entonces, si quieres experimentar para darle sentido a este Json, prueba la URL en Fire Fox.



100

00:07:18.200 --> 00:07:22.830

Ahora, si experimentas con otras fuentes como Photobucket, vers que enumeran los dos As que vamos a intentarlo rpidamente para ver qu aspecto tiene.



101

00:07:22.830 --> 00:07:29.520

formatos por separado, pero flickr solo usa el formato Json y nos permite especificar este parmetro de devolucin de Y puede ver cmo Fire Fox ha hecho un buen trabajo con esto, ya que est sangrando



102

00:07:29.880 --> 00:07:33.180

llamada json para obtener Json en lugar de Json p. muy bien la matriz, lo que nos permite



103

00:07:33.540 --> 00:07:36.460

As que intentemos agregar eso para ver si nos impide estancarnos. especificar los elementos individuales si as lo queremos.



104

00:07:36.660 --> 00:07:41.710

As que voy a volver a la URL del navegador donde mostramos los datos. Agreguemos a esa opcin, De acuerdo, esa es una de las formas, pero te mostrar una forma diferente de usar la pelusa Json. En lugar de la URL, voy a



105

00:07:41.730 --> 00:07:45.830

el argumento, al final. Vamos a agregar bit que causaba problemas. copiar todos los datos y pegarlos. As que voy a volver a Chrome, y voy



106

00:08:00.660 --> 00:08:02.500

a copiar el contenido de esta pgina despus



107

00:08:02.640 --> 00:08:06.120

de haber reutilizado la URL sin que la devolucin de llamada de Json sea igual a uno. Regresar a json lint, voy a eliminar los contenidos existentes, pegar el cdigo json y



108

00:08:06.210 --> 00:08:11.740

har clic en validar Jso, ny esta vez obtendremos un bonito cuadro



109

00:08:11.930 --> 00:08:13.990

verde en la parte inferior que dice Json vlido.



110

00:08:14.010 --> 00:08:18.300

As que ese es nuestro problema resuelto, y ahora podemos analizar los datos json utilizando una



111

00:08:18.420 --> 00:08:20.650

de nuestras bibliotecas de java kotlin sin ningn problema.



112

00:08:25.440 --> 00:08:30.930

Ahora, por cierto, obtendra lo mismo si hubiera pegado la URL.



113

00:08:30.930 --> 00:08:36.330

Entonces, para confirmar que voy a hacer eso, pegar en la URL, eliminar los contenidos existentes, pondr la URL all nuevamente y la validar,



114

00:08:36.330 --> 00:08:37.980

y tambin obtendremos Json vlido de nuevo.



115

00:08:38.730 --> 00:08:42.920

Ahora dicho esto, me he dado cuenta de que a veces an puede obtener un error incluso despus de que el texto de la



116

00:08:42.930 --> 00:08:46.440

fuente JSON Flickr haya sido eliminado de los datos, y si eso sucede, es causado por un error en Flicker.



117

00:08:46.440 --> 00:08:54.220

El programa seguir funcionando con xito para que pueda ignorar cualquier otro error que aparezca, si est seguro



118

00:08:54.250 --> 00:08:59.780

de que los datos se copiaron



119

00:08:59.860 --> 00:09:07.470

y pegaron correctamente, y definitivamente tiene ese argumento de devolucin de llamada json especificado en la URL.



120

00:09:07.530 --> 00:09:09.520

Entonces, si obtiene otro error, intente pegar nuevamente en la URL.



121

00:09:09.840 --> 00:09:13.520

Si eso tambin da un error,



122

00:09:13.540 --> 00:09:17.370

no se preocupe en esta etapa.



123

00:09:17.440 --> 00:09:20.540

Tome una captura de pantalla y



124

00:09:20.740 --> 00:09:26.900

archvela en caso de que su programa no funcione y piense que esa



125

00:09:26.900 --> 00:09:33.300

puede ser la causa, pero contine con los videos y debera estar bien. Los datos que se devuelven cambian todo el tiempo, por lo que para el momento



126

00:09:33.310 --> 00:09:38.110

en que ejecuta su aplicacin, flickr puede devolver datos vlidos nuevamente.



127

00:09:38.110 --> 00:09:43.570

Entonces, la leccin aqu es asegurarse de que sus datos de origen sean correctos antes de comenzar a usarlos en su cdigo.



128

00:09:43.630 --> 00:09:47.880

Te frustrar gastar horas tratando de descubrir dnde est el problema, y si todo



129

00:09:48.010 --> 00:09:52.750

est relacionado con el cdigo fuente o los datos de origen que vienen en primer lugar. Podras ahorrarte horas de frustracin



130

00:09:53.050 --> 00:09:55.610

en ese escenario.



131

00:09:55.990 --> 00:09:58.820

En pocas palabras, siempre asegrese de que los datos sean correctos antes de intentar cualquier codificacin



132

00:09:59.050 --> 00:10:00.310

relacionada con el anlisis de esos datos.



133

00:10:00.430 --> 00:10:01.720

De acuerdo, entonces en este momento,



134

00:10:01.780 --> 00:10:06.730

con suerte, comprenders cmo agregar parmetros a la URL como me has visto hacer para modificar los datos que devuelve la fuente de flickr.



135

00:10:06.730 --> 00:10:07.130

Para este mini desafo, consulte



136

00:10:07.150 --> 00:10:12.490

la pgina de feeds para obtener los cdigos de los idiomas disponibles y luego ingrese esta URL ya que puede ver la pantalla all, y use el parmetro lang para ver los resultados en alemn.



137

00:10:12.490 --> 00:10:17.340

Luego, una vez que haya hecho eso, modifique el parmetro para



138

00:10:17.500 --> 00:10:23.210

ver los resultados en otro idioma o en otros idiomas que pueda reconocer.



139

00:10:23.230 --> 00:10:28.270

Tenga en cuenta que su navegador no puede mostrar conjuntos de caracteres asiticos, por ejemplo.



140

00:10:28.300 --> 00:10:33.160

La mayora puede en estos das, pero puede obtener una serie de pequeas cajas en lugar de los caracteres chinos o coreanos.



141

00:10:33.160 --> 00:10:35.050

Entonces ese es tu desafo.



142

00:10:35.530 --> 00:10:40.420

Mira cmo vas.



143

00:10:40.420 --> 00:10:42.130

Pausa el video y te ver cuando vuelvas.



144

00:10:42.740 --> 00:10:47.200

Muy bien, as que con suerte lograste hacerlo funcionar.



145

00:10:47.200 --> 00:10:51.180

Entonces, en primer lugar, los idiomas disponibles, y puede ver claramente que estamos



146

00:10:51.190 --> 00:10:57.340

que estn disponibles en esta URL, puede ver los distintos idiomas all. obteniendo eso en otro idioma ahora, lo estamos mostrando en



147

00:10:57.340 --> 00:11:04.360

Entonces realmente necesitamos agregar el parmetro lang con los valores de de para alemn. Entonces, esencialmente si vuelves atrs y copias nuestro otro enlace que Y observe aqu cmo se muestra el ttulo en alemn, ese



148

00:11:04.360 --> 00:11:08.440

estbamos usando antes, y lo abres en es el ttulo principal del feed. En lugar de que el texto publique la foto despus del autor,



149

00:11:08.450 --> 00:11:10.510

una nueva pestaa. estamos obteniendo los resultados en alemn. Ahora flickr no traduce el texto



150

00:11:10.510 --> 00:11:14.810

Primero est la versin en ingls, y si quieres usar que escribieron estas personas publicando las fotos, as que tenlo en cuenta.



151

00:11:14.980 --> 00:11:20.360

la versin en alemn, tenemos que agregar, al final de ese smbolo. alemn, como un ejemplo, parte del cdigo all. Y para obtener el feed en chino, todo lo que necesitamos hacer es cambiar el cdigo de idioma de de a zh hk zh hk chino



152

00:11:20.620 --> 00:11:21.350

tradicional como se puede



153

00:11:21.350 --> 00:11:21.910

ver all. y obviamente estamos



154

00:11:21.910 --> 00:11:24.600

As que seguiremos adelante y haremos eso. obteniendo estos pequeos personajes extraos, estos caracteres Unicode mostrndose en el navegador, como estoy intentando mostrar



155

00:11:27.740 --> 00:11:30.370

all, y si vuelves a flickr, a Firefox, quizs puedas ver eso un poco mejor.



156

00:11:30.430 --> 00:11:33.800

Puedes ver que Firefox lo est mostrando un poco mejor, ahora lo muestra claramente en chino, y de nuevo puedes ver que Firefox es



157

00:11:38.270 --> 00:11:39.450

mucho mejor al ver este tipo de datos.



158

00:11:39.470 --> 00:11:46.760

Vuelves al alemn de nuevo para ver cmo se ve, y claramente est el alemn



159

00:11:46.760 --> 00:11:47.510

para el ttulo.



160

00:11:47.530 --> 00:11:52.200

As que ah lo tienes, eso es todo resuelto.



161

00:11:52.350 --> 00:11:54.250

De acuerdo, voy a



162

00:11:54.450 --> 00:12:01.920

terminar el video ahora y voy a actualizar mi Firefox porque me dice que est crticamente desactualizado.



163

00:12:02.010 --> 00:12:09.080

Puedes ver que no uso Firefox con tanta frecuencia.



164

00:12:09.770 --> 00:12:11.110

As que terminemos el video aqu. En el prximo, voy a ir a



165

00:12:11.250 --> 00:12:13.430

Android Studio, vamos a comenzar nuestro proyecto y comenzar a codificar.



166

00:12:13.730 --> 00:12:19.910

As que te ver en el siguiente video.



167

00:12:20.090 --> 00:12:26.110

&nbsp;



168

00:12:26.110 --> 00:12:28.800

&nbsp;



169

00:12:29.140 --> 00:12:36.020

&nbsp;



170

00:12:36.170 --> 00:12:38.700

&nbsp;



171

00:12:38.720 --> 00:12:41.010

&nbsp;



172

00:12:41.010 --> 00:12:42.300

&nbsp;



173

00:12:50.460 --> 00:12:55.390

&nbsp;



174

00:12:55.400 --> 00:13:02.160

&nbsp;



175

00:13:02.160 --> 00:13:03.150

&nbsp;



176

00:13:05.680 --> 00:13:07.940

&nbsp;



177

00:13:07.980 --> 00:13:13.540

&nbsp;



178

00:13:13.770 --> 00:13:16.240

&nbsp;



179

00:13:18.010 --> 00:13:21.290

&nbsp;



180

00:13:21.500 --> 00:13:23.680

&nbsp;



181

00:13:23.690 --> 00:13:27.170

&nbsp;



182

00:13:27.190 --> 00:13:27.650

&nbsp;



183

00:13:27.650 --> 00:13:29.460

&nbsp;



184

00:13:29.740 --> 00:13:35.270

&nbsp;



185

00:13:35.270 --> 00:13:36.290

&nbsp;



186

00:13:36.470 --> 00:13:37.740

&nbsp;



