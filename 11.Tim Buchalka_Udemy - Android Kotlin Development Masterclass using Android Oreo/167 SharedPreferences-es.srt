1
00:00:05,120 --> 00:00:07,340
As que estamos en camino de terminar esta aplicacin.

2
00:00:07,410 --> 00:00:12,030
Solo necesitamos algo de tiempo ahora para pasar los resultados de bsqueda a MainActivity.

3
00:00:12,050 --> 00:00:17,610
Ahora una buena solucin aqu sera usar algo llamado preferencias compartidas. Ahora las preferencias compartidas proporcionan una forma de

4
00:00:17,610 --> 00:00:22,810
almacenar datos, por lo que puede recuperarlos nuevamente la prxima vez que se inicie la aplicacin.

5
00:00:22,920 --> 00:00:27,540
No son tan potentes como una base de datos completa, pero para muchas aplicaciones donde no

6
00:00:27,540 --> 00:00:33,490
tiene que almacenar una gran cantidad de datos, son ideales. Y lo bueno es que tambin son muy fciles de usar

7
00:00:33,500 --> 00:00:36,510
y funcionan de manera similar a los paquetes que hemos usado anteriormente.

8
00:00:36,750 --> 00:00:41,910
De modo que almacena los datos en pares clave de valor y recupera los elementos de datos especificando la clave.

9
00:00:42,200 --> 00:00:47,520
As que voy a agregar el cdigo ahora a la funcin onQueryTextSubmit en la actividad de bsqueda, para que

10
00:00:47,570 --> 00:00:48,960
pueda ver lo que hace.

11
00:00:52,830 --> 00:00:57,520
Entonces onQueryTextSubmit, vamos a agregar cdigo despus

12
00:00:57,700 --> 00:01:12,380
del registro, y comenzaremos con val sharedPref igual a PreferenceManager. getDefaultSharedPreferences, luego parntesis, y va

13
00:01:12,410 --> 00:01:16,700
a ser applicationContext.

14
00:01:16,700 --> 00:01:24,730
Luego vamos a hacer la edicin de puntos sharedPref, en realidad estamos llamando a la funcin de

15
00:01:25,220 --> 00:01:28,730
edicin, por lo que hay parntesis dot

16
00:01:28,980 --> 00:01:33,730
putString entre parntesis, y va a ser flickr query comma

17
00:01:33,820 --> 00:01:41,020
space query parntesis de cierre dot apply. Estamos llamando a la funcin de aplicar, y luego vamos a hacer la

18
00:01:41,220 --> 00:01:47,390
bsqueda de ver el signo de interrogacin punto clearFocus, y luego vamos a dejar la llamada para terminar y luego devolver verdadero.

19
00:01:47,420 --> 00:01:53,840
Entonces, lo que estamos haciendo aqu est comenzando en la lnea 41. Estamos obteniendo un objeto de preferencias compartidas

20
00:01:53,840 --> 00:01:58,960
llamando a la funcin getDefaultSharedPreferences del Administrador de preferencias, pasndole un contexto.

21
00:01:58,970 --> 00:02:04,550
Ahora, aqu queremos pasar el contexto de la aplicacin en lugar de usar esto, porque la

22
00:02:04,550 --> 00:02:08,490
fecha ser recuperada por una actividad diferente a la que la guard.

23
00:02:08,540 --> 00:02:12,900
Ahora SearchActivity almacenar los datos y MainActivity los recuperar.

24
00:02:12,920 --> 00:02:19,250
Ahora tenemos que llamar a la funcin de edicin en la lnea siguiente, lnea 42, para poner las preferencias

25
00:02:19,250 --> 00:02:25,820
compartidas en un estado grabable, y luego usamos la funcin putString para almacenar la cadena de consulta de bsqueda.

26
00:02:25,820 --> 00:02:31,420
Ahora almacenamos la cadena utilizando la constante de consulta flickr que definimos en la actividad base como la clave. Ahora MainActivity y SearchActivity pueden usar la

27
00:02:31,430 --> 00:02:36,980
misma constante, lo que garantiza que ambas utilicen la misma clave al guardar

28
00:02:36,980 --> 00:02:43,090
y recuperar los datos, y los datos se instalarn cuando llamemos a la funcin apply.

29
00:02:43,120 --> 00:02:46,410
Ahora no es obvio por qu tenemos que llamar la atencin

30
00:02:46,590 --> 00:02:51,530
clara all, y normalmente no descubriras qu problema resuelve, a menos que hayas probado la aplicacin en

31
00:02:51,530 --> 00:02:53,300
un dispositivo con un teclado externo.

32
00:02:53,300 --> 00:02:55,120
Ahora, afortunadamente, nuestros emuladores pueden usar

33
00:02:55,130 --> 00:03:00,380
el teclado de la PC, por lo que puedes detectar el extrao comportamiento si lo dejamos fuera.

34
00:03:00,380 --> 00:03:06,200
Ahora el problema que soluciona es si escribe una consulta de bsqueda, luego usa la tecla enter del teclado para enviarla.

35
00:03:06,200 --> 00:03:09,000
Ahora, cuando lo hagas, el cono de bsqueda en MainActivity

36
00:03:09,050 --> 00:03:12,990
tambin recibir un evento de clic y solo iniciar la actividad de bsqueda nuevamente.

37
00:03:13,010 --> 00:03:15,410
Y, de hecho, me viste hacer eso en

38
00:03:15,560 --> 00:03:20,510
el video anterior, cuando presion ingresar, ingres una consulta de bsqueda antes de terminar presionando correctamente la

39
00:03:20,570 --> 00:03:22,050
flecha en la esquina inferior derecha.

40
00:03:22,430 --> 00:03:27,140
As que voy a dejarte comentar esa lnea e intentarlo, para que puedas ver por qu necesitamos quitar

41
00:03:27,140 --> 00:03:30,090
el foco de la barra de herramientas antes de volver a MainActivity.

42
00:03:30,160 --> 00:03:36,560
Y recuerda que solo vers el comportamiento diferente cuando presiones enter en un teclado externo. Muy bien, para recuperar los datos, solo

43
00:03:36,590 --> 00:03:37,970
leemos la misma

44
00:03:38,030 --> 00:03:42,510
clave de la preferencia compartida cuando se reanuda la actividad principal.

45
00:03:42,590 --> 00:03:48,630
As que regresemos y editemos la funcin MainActivity onResume y coloquemos algn cdigo all. As que voy a dejar la llamada

46
00:03:48,640 --> 00:03:52,350
a super en Resume. En la siguiente lnea,

47
00:03:52,820 --> 00:04:02,530
haremos val sharePref is equal to, y su PreferenceManager. El contexto de la

48
00:04:02,530 --> 00:04:14,570
aplicacin getDefaultSharedPreferences nuevamente. Entonces vamos a hacer que val query result sea igual a sharedPref. getString parntesis, y va a ser flickr

49
00:04:15,140 --> 00:04:21,410
subrayar coma de consulta y dos comillas dobles, cerrando parntesis.

50
00:04:21,540 --> 00:04:26,000
A continuacin, vamos a escribir un poco de cdigo aqu. Vamos a poner si parntesis

51
00:04:26,000 --> 00:04:29,910
queryResult dot isNotEmpty, y solo agregaremos un bloque de

52
00:04:30,100 --> 00:04:31,030
cdigo en

53
00:04:31,080 --> 00:04:33,830
blanco por el momento. Luego, en la siguiente

54
00:04:33,830 --> 00:04:40,970
lnea vamos a hacer un poco de registro, entonces Log. d parntesis TAG comas comillas dobles dotResume ends.

55
00:04:41,040 --> 00:04:44,990
Bsicamente, esto es exactamente lo contrario de lo que hicimos para almacenar los datos.

56
00:04:45,230 --> 00:04:50,910
As que estamos creando un objeto de preferencias compartidas en la lnea 120, usando exactamente el mismo cdigo en

57
00:04:50,950 --> 00:04:56,310
realidad, y luego usando la funcin getString para leer la cadena de bsqueda de las preferencias compartidas almacenadas

58
00:04:56,380 --> 00:04:59,060
en la lnea 21. Ahora no tiene sentido descargar

59
00:04:59,100 --> 00:04:59,790
nada si no

60
00:04:59,960 --> 00:05:05,930
se especificaron criterios de bsqueda, por lo que estamos verificando para asegurarnos de que la cadena de resultados de la consulta no est

61
00:05:06,230 --> 00:05:08,570
vaca antes de intentar descargar y analizar los datos.

62
00:05:08,580 --> 00:05:13,310
O al menos ese es el cdigo que vamos a usar cuando comencemos a llenarlo desde la lnea 24. La funcin getString intentar recuperar los

63
00:05:13,310 --> 00:05:16,730
datos almacenados con la consulta clave flickr, pero si

64
00:05:17,030 --> 00:05:22,930
no puede encontrar los datos con esa clave, devolver el segundo valor que hemos pasado, una

65
00:05:22,940 --> 00:05:26,260
cadena vaca en este caso. De eso se trata este segundo argumento.

66
00:05:26,480 --> 00:05:32,790
Pasar una cadena vaca nos permite verificar para asegurarnos de que obtuvimos un trmino de bsqueda del usuario. DE ACUERDO.

67
00:05:32,910 --> 00:05:37,970
Entonces, si el usuario especific algo para buscar, entonces simplemente repite el cdigo en onCreate para

68
00:05:37,970 --> 00:05:39,350
descargar los datos nuevos.

69
00:05:39,680 --> 00:05:41,430
Y, de hecho, no necesitamos repetirlo.

70
00:05:41,570 --> 00:05:44,230
Podemos simplemente mover ese cdigo en onResume.

71
00:05:44,240 --> 00:05:47,900
Recuerde que onResume se llama despus de onCreate.

72
00:05:48,200 --> 00:05:53,600
Entonces, lo que voy a hacer es cortar tres lneas de onCreate, y pegarlas en este bloque

73
00:05:53,600 --> 00:05:58,770
vaco si en la funcin onResume. As que de vuelta a onCreate. Entonces las tres lneas que

74
00:05:58,770 --> 00:05:59,700
queremos son estas

75
00:05:59,720 --> 00:06:00,130
aqu,

76
00:06:00,150 --> 00:06:04,790
val url, val getRawData y luego execute. As que voy a copiar esos,

77
00:06:04,790 --> 00:06:11,350
o cortarlos en su lugar. Lo aclarar un poco. Luego vaya al curriculum

78
00:06:11,450 --> 00:06:13,360
vitae, la funcin onResume.

79
00:06:13,360 --> 00:06:15,710
Voy a pegar eso aqu.

80
00:06:16,720 --> 00:06:18,890
Entonces eso ahora se llama en la funcin onResume.

81
00:06:19,020 --> 00:06:24,070
Y de nuevo, solo para repetir, se llama a Reesume en Create.

82
00:06:24,120 --> 00:06:29,920
Entonces, al ponerlo en Resumir, an garantizamos que este cdigo se va a ejecutar.

83
00:06:30,300 --> 00:06:37,170
Muy bien, entonces en este momento todo lo que queda por hacer es pasar el resultado de la consulta

84
00:06:37,170 --> 00:06:43,420
a la funcin Create uri, en lugar de la cadena codificada de Android Oreo que tenemos aqu.

85
00:06:43,530 --> 00:06:47,640
As que hagmoslo. Deshagmonos de esto, eliminemos la cadena

86
00:06:50,660 --> 00:06:53,670
codificada all, y vamos a reemplazarla con queryResult.

87
00:06:56,910 --> 00:06:58,500
Bien, eso debera funcionar ahora,

88
00:06:58,500 --> 00:06:59,410
as que probemos.

89
00:07:04,980 --> 00:07:10,140
Ahora, esta vez, cuando ejecut la aplicacin, no se muestran datos, pero eso se debe a que no hubo datos

90
00:07:10,140 --> 00:07:11,480
de preferencias compartidas para recuperar.

91
00:07:11,760 --> 00:07:16,440
Entonces, debemos hacer una bsqueda antes de que nos devuelva cualquier foto. Voy a continuar y buscar

92
00:07:16,440 --> 00:07:17,330
malvavisco nuevamente.

93
00:07:23,140 --> 00:07:27,620
Y el xito como puedes ver all. Tenemos un montn de fotos etiquetadas ahora con malvavisco.

94
00:07:27,890 --> 00:07:31,540
Ahora podemos reducir eso un poco buscando malvavisco de Android.

95
00:07:31,820 --> 00:07:35,690
As que vamos a probar eso, comma malvavisco de Android, y puedes ver que estamos obteniendo

96
00:07:39,330 --> 00:07:41,990
algunos resultados diferentes basados en eso tambin, que no es particularmente

97
00:07:45,770 --> 00:07:47,570
apropiado para el malvavisco de Android, as

98
00:07:47,610 --> 00:07:49,500
que intentemos con otro para estar seguros.

99
00:07:49,670 --> 00:07:50,490
Intentaremos el turrn android,

100
00:07:50,530 --> 00:07:50,950
y all

101
00:07:54,530 --> 00:08:00,290
tenemos algunos resultados ms relacionados con la computadora, mostrando el turrn android. Entonces claramente est funcionando bien.

102
00:08:00,300 --> 00:08:00,590
Bien.

103
00:08:00,600 --> 00:08:02,080
As que eso es genial, pero

104
00:08:02,220 --> 00:08:06,860
qu ocurre si un usuario decide que no quiere buscar y hace clic en la X para cancelarla?

105
00:08:06,880 --> 00:08:08,560
Probemos eso.

106
00:08:08,590 --> 00:08:14,780
Entonces, si estn aqu y deciden que no desean continuar con una bsqueda, haz clic en X. Ahora eso no es bueno.

107
00:08:15,000 --> 00:08:18,680
Cerr la vista de bsqueda pero no regres a MainActivity.

108
00:08:18,870 --> 00:08:25,020
Pero vimos, si recuerda, una funcin onClose en la documentacin, por lo que podemos implementar ese oyente y terminar la

109
00:08:25,380 --> 00:08:30,000
llamada si el usuario cierra la vista de bsqueda en lugar de enviar una bsqueda.

110
00:08:30,320 --> 00:08:35,190
As que sigamos y creemos eso, o agreguemos eso,

111
00:08:35,190 --> 00:08:38,900
a la funcin onCreateOptionsMenu en Search Activity.

112
00:08:39,080 --> 00:08:43,410
Queremos agregarlo aqu, antes de cerrar la entrada de

113
00:08:43,530 --> 00:08:46,610
registro de CreateOptionsMenu, as que agrguela all.

114
00:08:46,610 --> 00:08:48,350
Agreguemos un poco de espacio.

115
00:08:48,890 --> 00:08:58,710
As que voy a hacer searchView question mark dot, vamos a establecer un onCloseListener, como tal, y el cdigo que

116
00:08:58,740 --> 00:09:02,440
queremos ejecutar all es terminar y luego falso.

117
00:09:02,810 --> 00:09:07,840
Entonces, ahora que lo hemos hecho, deberamos poder ejecutar esto, y luego se volver a llamar a ese mtodo.

118
00:09:12,680 --> 00:09:19,530
Intentemos eso, entremos en la bsqueda y esta vez cerraremos, y regresar correctamente a

119
00:09:19,540 --> 00:09:23,030
MainActivity como puede ver. Eso es fantstico, cancelar una bsqueda ahora

120
00:09:23,160 --> 00:09:28,980
funciona, y esa es nuestra aplicacin casi terminada. Pero hay una cosa que probablemente deberamos agregar. Ahora, para mostrar lo que es,

121
00:09:29,230 --> 00:09:30,990
voy a ver, en primer lugar,

122
00:09:30,990 --> 00:09:36,200
al hacer una bsqueda, hay fotos de monos azules que conducen automviles Porsche en un huracn.

123
00:09:36,390 --> 00:09:44,220
As que voy a utilizar un trmino de bsqueda, mono azul, Porsche, bsqueda de huracanes, y no

124
00:09:48,170 --> 00:09:54,450
es sorprendente que no aparezca ninguna foto. Ahora en ese escenario, sera bueno mostrar algn tipo de mensaje

125
00:09:54,770 --> 00:09:59,450
para que el usuario sepa que ninguna de las fotos coincide con la consulta, y eso

126
00:10:00,140 --> 00:10:02,770
realmente les har saber que la aplicacin an funciona.

127
00:10:02,900 --> 00:10:04,420
No ha fallado de alguna manera.

128
00:10:04,620 --> 00:10:09,050
Ahora la forma ms fcil de hacerlo es modificar el adaptador de vista

129
00:10:09,200 --> 00:10:11,630
de reciclador, y tendremos que hacerlo ligeramente.

130
00:10:11,900 --> 00:10:16,640
As que voy a terminar el video aqu, y en el siguiente veremos por qu a veces es

131
00:10:16,640 --> 00:10:18,550
necesario hacer que tus clases digan mentiras.

132
00:10:18,560 --> 00:10:19,520
Nos vemos en el prximo video.

