1
00:00:05,380 --> 00:00:09,060
Ento surfar eu seria um exemplo muito trivial de acessar dados.

2
00:00:09,200 --> 00:00:12,480
Quando abrimos o banco de dados, pegamos os dados e depois os fechamos novamente.

3
00:00:12,830 --> 00:00:17,260
O que fazemos em uma situao de necessidade de recuperao de dados mais complexa.

4
00:00:17,300 --> 00:00:24,500
Vamos analisar outras formas de acessar dados que voc conhece aplicativos. Em primeiro lugar, o problema no  que

5
00:00:24,500 --> 00:00:30,500
estamos acessando um banco de dados quando o usurio reorienta seu site de divrcio de retrato

6
00:00:30,500 --> 00:00:31,350
para paisagem.

7
00:00:31,490 --> 00:00:33,990
Bem, eles podem voltar para casa e acessar outro aplicativo.

8
00:00:34,160 --> 00:00:39,050
Potencialmente, poderamos ter dados corrompidos, porque o ltimo software no tem a menor idia

9
00:00:39,230 --> 00:00:42,450
sobre o banco de dados que est sendo acessado.

10
00:00:42,520 --> 00:00:48,600
O que podemos fazer  abrir nosso banco de dados com eficincia uma vez e, em seguida, consultar todos os dados, conforme necessrio.

11
00:00:48,640 --> 00:00:52,080
Em qualquer caso, o banco de dados quando a atividade  destruda.

12
00:00:52,110 --> 00:00:56,920
Ento, em outras palavras, queremos que a lei esteja ciente do banco de dados de que podemos fazer coisas como

13
00:00:56,920 --> 00:00:58,530
apontar para uma visualizao na tela, por

14
00:01:01,430 --> 00:01:02,810
exemplo, voc tambm faria isso manualmente.

15
00:01:02,890 --> 00:01:07,780
Assim, podemos adicionar cdigo a qual evento de ciclo de vida para fazer a coisa relevante para o nosso banco de dados.

16
00:01:07,780 --> 00:01:12,310
Por exemplo, feche quando a atividade estiver fechada, etc. e isso significa que estamos adicionando muito cdigo a

17
00:01:12,310 --> 00:01:14,470
cada tela que voc conhece ao fazer dessa maneira.

18
00:01:16,940 --> 00:01:21,300
Eu vejo que o TASC  outro branco, ento poderamos escrever algum cdigo para

19
00:01:21,300 --> 00:01:26,380
usar essas tarefas sempre que quisermos acessar o banco de dados, mas isso acaba sendo muito cdigo.

20
00:01:26,440 --> 00:01:28,570
Ento isso nos leva ao provedor de contedo.

21
00:01:28,640 --> 00:01:33,230
Agora, essa  uma maneira padro de fornecer acesso a um conjunto estruturado de dados.

22
00:01:33,410 --> 00:01:35,390
Sequel que  um bom exemplo disso.

23
00:01:35,420 --> 00:01:39,360
Portanto, os provedores de contedo so um recurso interessante do desenvolvimento do Android.

24
00:01:40,800 --> 00:01:46,080
Portanto, configuramos um provedor de contedo que voc conhece e, em seguida, podemos fornecer um mecanismo para retornar os

25
00:01:46,080 --> 00:01:47,450
resultados ao processo de codificao.

26
00:01:47,610 --> 00:01:49,000
Como aplicativo ou qualquer outro aplicativo.

27
00:01:49,000 --> 00:01:51,980
Se escolhermos compartilhar o fornecimento como dados.

28
00:01:51,980 --> 00:01:54,390
Agora, tecnicamente, no precisamos de um provedor de contedo.

29
00:01:54,570 --> 00:01:58,190
Se voc no pretende compartilhar dados, mas eu sinto que  melhor fazer isso dessa maneira.

30
00:01:58,200 --> 00:02:03,570
Assim, seu representante configurou o caminho certo no caso de voc decidir compartilhar esses dados no futuro.

31
00:02:05,870 --> 00:02:12,170
Agora, o Android nos fornece uma boa lista de provedores de contedo da Buellton para imagens de vdeo de udio, etc. e ns trabalharemos mais naqueles

32
00:02:12,170 --> 00:02:14,600
em vdeos futuros.

33
00:02:16,820 --> 00:02:22,730
Minha recomendao  usar um provedor de contedo para todos os seus projetos de banco de dados, porque ele tem mais

34
00:02:23,060 --> 00:02:27,430
flexibilidade e, quando se trata disso, no  muito mais complicado do que outros mtodos.

35
00:02:30,790 --> 00:02:35,570
Tudo bem, ento acho que agora  hora de montar um aplicativo para que eles

36
00:02:35,570 --> 00:02:42,470
possam definir um provedor de contedo e usar um cursor loader para nos permitir manter um banco de dados de contexto adicionar

37
00:02:42,470 --> 00:02:45,350
edio de contexto e atrasar contatos existentes e exibi-los.

38
00:02:45,350 --> 00:02:47,560
Ento vamos comear a trabalhar nisso no prximo vdeo.

