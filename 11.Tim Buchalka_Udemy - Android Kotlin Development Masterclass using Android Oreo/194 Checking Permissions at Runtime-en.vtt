WEBVTT
1

00:00:05.320 --> 00:00:05.590

All right.



2

00:00:05.590 --> 00:00:10.600

So we're looking at permissions on marshmallow and above the point of being granted permission when



3

00:00:10.600 --> 00:00:14.390

it was installed and we have to request permission when the app runs.



4

00:00:14.410 --> 00:00:16.860

So we enter the code to check so permission in our code.



5

00:00:16.880 --> 00:00:22.570

The last video to find out if we have the required permission or not if the permission hasn't been granted



6

00:00:22.950 --> 00:00:27.180

and it won't have been the first time the app runs they will get permission and it's good to know that



7

00:00:27.430 --> 00:00:29.100

when we call check self permission.



8

00:00:29.230 --> 00:00:34.870

So that means we have to request the permission in our code that this should be fairly straightforward



9

00:00:35.320 --> 00:00:41.080

except that the users can deny the permission and they can also take a box so that they won't be asked



10

00:00:41.080 --> 00:00:42.080

again.



11

00:00:42.100 --> 00:00:46.990

So the flight shutter I'm putting on the screen now shows the options and the various states that our



12

00:00:46.990 --> 00:00:48.730

card has to handle.



13

00:00:48.850 --> 00:00:54.730

So when we check the permission by calling the check self permission method will automatically be granted



14

00:00:54.820 --> 00:00:55.710

permission.



15

00:00:55.800 --> 00:01:03.250

Our divorce is running IP 22 or earlier so that it's easy and there's nothing more we need to do on



16

00:01:03.250 --> 00:01:04.700

IPR 23 and above.



17

00:01:04.700 --> 00:01:08.350

So we have to request permission from the user.



18

00:01:08.710 --> 00:01:10.660

That's still quite straightforward.



19

00:01:10.660 --> 00:01:16.420

If the user grants the permission then we can proceed and everything is fine but the user may decide



20

00:01:16.420 --> 00:01:17.710

to deny the permission.



21

00:01:17.800 --> 00:01:24.670

So let's have a look at what I say the first time they're asked to grant the permission to use or allows



22

00:01:24.670 --> 00:01:26.780

the permission then that's fine.



23

00:01:26.950 --> 00:01:32.650

But if I choose to deny it we have to decide what we're going to do and how we're going to deal with



24

00:01:32.650 --> 00:01:33.940

the situation.



25

00:01:34.030 --> 00:01:39.010

In some apps you could just decide what was the particular functionality that requires that permission



26

00:01:39.490 --> 00:01:40.180

in out.



27

00:01:40.230 --> 00:01:42.190

So that's not really an option.



28

00:01:42.220 --> 00:01:45.130

All the app does is access to contacts records.



29

00:01:45.130 --> 00:01:49.050

And without the necessary permission to do that it's a bit of a pointless app.



30

00:01:49.120 --> 00:01:54.460

It gets slightly more complicated because the next time the app is launched after the permission has



31

00:01:54.460 --> 00:01:58.050

been denied the dollar offers another choice.



32

00:01:58.210 --> 00:02:02.230

So this time there's a box to take not to be asked again.



33

00:02:02.400 --> 00:02:08.180

So they use it ticks that box the only option provided is to then deny the permission.



34

00:02:08.220 --> 00:02:13.530

Now that can be a bit confusing to us as developers and the documentation doesn't make it very clear



35

00:02:13.530 --> 00:02:14.580

unfortunately.



36

00:02:14.850 --> 00:02:19.610

But when they choose to allow the permission then they won't be asked again.



37

00:02:19.810 --> 00:02:25.080

That sort of Medich once you've allowed the permission then it remains allowed unless you go into settings



38

00:02:25.080 --> 00:02:31.680

to change it and have a look at that later if to use it ticks that box and denies the permission.



39

00:02:31.680 --> 00:02:34.200

They won't be asked to allow it again.



40

00:02:34.320 --> 00:02:38.430

So I just won't get the permission and we have to cater for that in our code.



41

00:02:38.580 --> 00:02:43.320

And once again some apps could just disable that particular functionality that needs the permission



42

00:02:43.800 --> 00:02:47.020

but our contacts app becomes useless without it.



43

00:02:47.280 --> 00:02:54.240

So going back to the flowchart we can say that the situations where permission is granted are easy to



44

00:02:54.240 --> 00:03:00.660

do which will lead to situations where permission is denied for now and we'll come back to that once



45

00:03:00.660 --> 00:03:01.750

we've got the app working.



46

00:03:03.480 --> 00:03:09.290

All right so let's get back to our code now and the Antwoord framework provides methods to handle requesting



47

00:03:09.290 --> 00:03:11.820

the permission from the user at runtime.



48

00:03:11.840 --> 00:03:17.550

So the first thing we have to do is check the value we got back from calling checks self permission.



49

00:03:17.690 --> 00:03:23.600

So I get to add the code and then we'll go through it here after the log after the has read contact



50

00:03:23.600 --> 00:03:24.440

permission.



51

00:03:24.810 --> 00:03:26.480

Variables are variable line.



52

00:03:26.570 --> 00:03:33.230

We could add the code if parentheses has read contact permission.



53

00:03:33.230 --> 00:03:44.570

That's equal to package manager got permission granted that will open a code block and then we can locked



54

00:03:44.570 --> 00:03:56.580

up the parentheses tag and we'll just indicated the message on create colon missing right you get can



55

00:03:56.840 --> 00:04:00.160

read granted is equal to true.



56

00:04:00.170 --> 00:04:04.120

However I'm also going to put a comment here to do.



57

00:04:04.790 --> 00:04:09.100

Don't do this else.



58

00:04:09.300 --> 00:04:13.140

Open up a block like talk the parentheses.



59

00:04:13.150 --> 00:04:17.350

Tecoma double quotes uncreate colon.



60

00:04:17.830 --> 00:04:22.870

That's requesting permission to be denied.



61

00:04:23.240 --> 00:04:25.230

And that's kind of the activity.



62

00:04:25.700 --> 00:04:29.410

Compact dot request permissions.



63

00:04:30.020 --> 00:04:30.840

Parentheses.



64

00:04:30.860 --> 00:04:36.330

This comma spice a real parentheses.



65

00:04:36.680 --> 00:04:41.230

That's going to be redone returns more context then a closing what parentheses comma.



66

00:04:41.840 --> 00:04:43.770

Then request a scorecard.



67

00:04:43.790 --> 00:04:44.440

I was great.



68

00:04:44.450 --> 00:04:46.330

I was called context.



69

00:04:46.630 --> 00:04:48.520

In closing parentheses.



70

00:04:48.890 --> 00:04:54.750

And also take this opportunity to log when the uncreate method finishes last at a quarter.



71

00:04:54.780 --> 00:05:03.730

Then I'll talk to a parentheses comma on Create call ins.



72

00:05:04.270 --> 00:05:09.190

OK so looking at the code starting on line 32.



73

00:05:09.290 --> 00:05:11.960

So it's the result we got back from calling check.



74

00:05:11.970 --> 00:05:17.360

So permission was permission granted then we have the permission we need how we can carry on.



75

00:05:17.570 --> 00:05:19.620

We'll need to know that we have to read.



76

00:05:19.620 --> 00:05:25.400

I was called context permission later before we try to access the contacts with when the flighty action



77

00:05:25.400 --> 00:05:26.500

buttons clicked.



78

00:05:26.650 --> 00:05:30.710

So I was storing true in the right granted field on line 34.



79

00:05:30.710 --> 00:05:34.840

Now we could just call the check so permission method every time we need to know if the permissions



80

00:05:34.850 --> 00:05:35.450

granted.



81

00:05:35.630 --> 00:05:37.480

But for now I'm going to store the result.



82

00:05:37.490 --> 00:05:41.100

That's a common thing to do but it is often a bad idea.



83

00:05:41.270 --> 00:05:44.020

So I'm going to demonstrate the problems it can cause a slider.



84

00:05:44.330 --> 00:05:49.100

So following on from the code if the permission wasn't granted the else codebook is executed starting



85

00:05:49.100 --> 00:05:50.370

on line 36.



86

00:05:50.410 --> 00:05:56.270

So at that point we need to request that permission and we can do that by using the compact form of



87

00:05:56.270 --> 00:05:59.520

request permissions and you can say that carried on 1:37.



88

00:05:59.570 --> 00:06:05.420

Once again there is also a method built into the framework but that will only work on IPR 23 and above



89

00:06:05.960 --> 00:06:11.780

earlier devices don't know about this new security model so they have to use the compatibility versions



90

00:06:11.780 --> 00:06:16.120

of those methods from the Android that support the for app package.



91

00:06:16.220 --> 00:06:21.040

If you you're targeting IPR 23 and above the card will be always the same but you can leave out the



92

00:06:21.040 --> 00:06:26.440

compare the context compact and activity compare class names when calling the methods.



93

00:06:26.510 --> 00:06:31.440

Now it's almost the same because you don't have to pass this to the framework methods.



94

00:06:31.850 --> 00:06:37.640

The framework check so permission is called on the context and request permissions is called on the



95

00:06:37.640 --> 00:06:38.600

activity.



96

00:06:38.600 --> 00:06:44.540

So there's no need to parse this to provide either the context or the activity that compatible requests



97

00:06:44.550 --> 00:06:47.050

permissions method does need to know the activity though.



98

00:06:47.220 --> 00:06:51.010

And that's why the first parameter is this going on long 37.



99

00:06:51.290 --> 00:06:57.470

So next we provide an array containing the names of the permissions we were requesting.



100

00:06:57.470 --> 00:07:03.170

Now we only want to request a single permission but it still has to be provided in a string array because



101

00:07:03.170 --> 00:07:04.950

that's the top of the parameter.



102

00:07:04.970 --> 00:07:07.970

You can check that by clicking on the method name and calling up the documentation



103

00:07:11.210 --> 00:07:13.070

and it could say you've got permissions here.



104

00:07:13.130 --> 00:07:15.950

It's a string a right now there's quite a lot of description here.



105

00:07:15.950 --> 00:07:20.400

There's documentation so it's well worth a read to understand how it all works.



106

00:07:20.420 --> 00:07:25.520

You might want to read it after we've got this app working though because I will be writing the on request



107

00:07:25.520 --> 00:07:31.180

permissions result Colback method next and it may make more sense once you've seen that working code.



108

00:07:31.190 --> 00:07:35.830

Also I suggest you read through the garden I caught up in my browser in the last video.



109

00:07:36.080 --> 00:07:41.930

The other documentation itself can be a bit confusing and has resulted in some overly complex code on



110

00:07:41.930 --> 00:07:42.810

the Internet.



111

00:07:42.830 --> 00:07:48.170

Earlier versions of the documentation gave the impression that the app had to code request permissions



112

00:07:48.260 --> 00:07:49.660

every time it runs.



113

00:07:49.790 --> 00:07:52.200

Which isn't the case it's mostly what you say.



114

00:07:52.220 --> 00:07:54.040

How are we going to write the code for this app.



115

00:07:54.260 --> 00:07:58.910

Read through the documentation and it should all make more sense than trying to work from the documents



116

00:07:58.910 --> 00:08:00.330

alone.



117

00:08:00.390 --> 00:08:02.930

I can't set a follow parameter to request for missions.



118

00:08:02.950 --> 00:08:07.850

As a result code and I've used a constant that I created earlier to get back to our code.



119

00:08:07.850 --> 00:08:08.880

This one here.



120

00:08:09.420 --> 00:08:14.150

So the reason for that constant is because when you call the request permissions method you don't get



121

00:08:14.150 --> 00:08:14.730

the result.



122

00:08:14.730 --> 00:08:21.080

Next try to wipe the system pops up a dialog or the dialog that we saw in the slides earlier to ask



123

00:08:21.080 --> 00:08:22.970

the user to grant the permissions.



124

00:08:23.190 --> 00:08:29.190

No uncreate method waited for the user to either grant or deny the request.



125

00:08:29.250 --> 00:08:34.590

That would be blocking and that's almost always never a good idea with an Android application.



126

00:08:34.680 --> 00:08:38.930

Though we discussed that when we were looking at async tasks in the top 10 down Latterman flick browser



127

00:08:38.930 --> 00:08:44.090

apps it's not a good idea for apps to block the UI thread and prevent the users from answering their



128

00:08:44.090 --> 00:08:45.180

phones.



129

00:08:45.250 --> 00:08:51.110

So instead the Android framework displays the dialog and the request permissions method returns immediately



130

00:08:51.770 --> 00:08:54.540

to find out whether the permission was granted or denied.



131

00:08:54.680 --> 00:09:00.890

What we have to do is implement a Kolpak method that will be called once the user has made that decision.



132

00:09:00.920 --> 00:09:02.350

So let's actually wrought that.



133

00:09:02.420 --> 00:09:05.200

I will put this straight after the uncreate method.



134

00:09:05.400 --> 00:09:06.340

Going don't come down here.



135

00:09:07.240 --> 00:09:11.500

And start immediately below the uncreate method of a set.



136

00:09:11.500 --> 00:09:13.810

Now we can get into Judaea to generate the stub for us.



137

00:09:13.810 --> 00:09:20.870

I'm going to do a control do a search for on request topic on request permissions.



138

00:09:21.010 --> 00:09:27.380

So if we find the one we want press into there and at the stop I'm going to talk this discouraging and



139

00:09:27.550 --> 00:09:28.080

talk about it.



140

00:09:28.080 --> 00:09:31.750

For now I'm going to delete that first learn that super cool and I can add a lot.



141

00:09:31.840 --> 00:09:38.560

It looked like a print to see Tecoma double quotes on request permissions result



142

00:09:41.150 --> 00:09:53.550

call starts going to be when parentheses request code block request it was called Times corporators



143

00:09:53.560 --> 00:09:56.540

call contacts desk right and so on.



144

00:09:56.760 --> 00:09:59.080

Then left and right Kelly Price.



145

00:09:59.370 --> 00:10:09.180

Then within that we're going to put rate granted Eco's if parentheses want results.



146

00:10:09.720 --> 00:10:21.180

Dot is not empty and got results at the wrong square Bryce's and then zeros that index 0 is equal to



147

00:10:21.750 --> 00:10:23.600

package manager dot.



148

00:10:23.850 --> 00:10:26.950

Permission granted the parentheses.



149

00:10:26.990 --> 00:10:28.520

Then I've got a code block there.



150

00:10:28.970 --> 00:10:36.440

So at this point in terms of our code we can note here that permission was granted but the arrow Gawai



151

00:10:36.450 --> 00:10:39.700

short lengths of permission was granted.



152

00:10:41.440 --> 00:10:50.570

Yea and then to the contact's related task we need to do it.



153

00:10:51.860 --> 00:10:53.820

So what is a return tree there.



154

00:10:54.360 --> 00:10:56.010

Otherwise who else.



155

00:10:56.570 --> 00:10:59.550

And the code block again.



156

00:10:59.580 --> 00:11:00.300

Permission.



157

00:11:00.350 --> 00:11:04.400

At this point we get to this part of the code you know.



158

00:11:05.080 --> 00:11:14.660

So I want to disable the functionality that Tippins this permission.



159

00:11:15.360 --> 00:11:16.950

I would just add a log entry there.



160

00:11:17.210 --> 00:11:22.930

Well a print the CS on request or solitare come up quite on request



161

00:11:25.470 --> 00:11:34.030

permission permissions result Colan commission refused.



162

00:11:34.670 --> 00:11:37.820

And I should probably do that on top of that.



163

00:11:38.760 --> 00:11:46.380

Let's also put a log entry there above the true so we can see whether the permissions were successful



164

00:11:46.380 --> 00:11:46.820

or not.



165

00:11:46.920 --> 00:11:53.610

So pensions granted that one and he's going to return false and false.



166

00:11:53.670 --> 00:11:56.820

They wrote down the bottom here just before the end of the function.



167

00:11:56.830 --> 00:12:08.040

We looked at the parentheses Tecoma quotes from the quest Commission's result the mission's result Kallen



168

00:12:08.130 --> 00:12:14.400

is now lifted this code almost verbatim from a Google training document.



169

00:12:14.420 --> 00:12:15.780

I want to quickly bring that up on the screen



170

00:12:22.300 --> 00:12:27.830

because quote and the section that we're looking for is handle the permission the permission request



171

00:12:27.830 --> 00:12:35.730

response this part code the code here they can say the card is very similar to what's showing and it's



172

00:12:35.740 --> 00:12:37.510

almost verbatim.



173

00:12:37.510 --> 00:12:42.060

Now we're going to be adding a bit more to it later to do with the permission being denied.



174

00:12:42.190 --> 00:12:45.070

But this will do for now just to get an idea of what's happening.



175

00:12:45.070 --> 00:12:51.010

Basically when Android calls this method for us it'll pass in the response card that we provided when



176

00:12:51.010 --> 00:12:55.900

we call the request permissions method and get back to our code.



177

00:12:55.970 --> 00:13:02.920

That's what the constant request time is code does call rate was called contex is for when a larger



178

00:13:02.930 --> 00:13:07.940

app we may well be requesting several permissions an app that records video for example would need to



179

00:13:07.940 --> 00:13:09.250

get access to the camera.



180

00:13:09.350 --> 00:13:14.990

The maake are fired and also to storage so that it can save the video by providing a unique response



181

00:13:14.990 --> 00:13:17.610

code when calling requests permissions.



182

00:13:17.690 --> 00:13:21.940

We can tell which particular request we getting the results back for now.



183

00:13:21.980 --> 00:13:23.480

There's only one request.



184

00:13:23.590 --> 00:13:27.420

We don't need to switch statement to check which one the results apply to.



185

00:13:27.620 --> 00:13:32.310

But it is useful to see how to handle multiple requests from a single activity.



186

00:13:32.660 --> 00:13:34.470

So that's the request right.



187

00:13:34.490 --> 00:13:37.900

The first parameter the next one is permissions.



188

00:13:38.020 --> 00:13:41.300

Last year the next two arguments of both arise we got permissions.



189

00:13:41.360 --> 00:13:47.660

Also got krump results as you can say the first contains the permissions we have requested and the second



190

00:13:47.660 --> 00:13:50.210

contains the result for each permission.



191

00:13:50.270 --> 00:13:56.020

It's possible that the user could grant some permissions and annoy others if requested several at once.



192

00:13:56.030 --> 00:14:00.320

So this allows us to check which ones were accepted and which were denied.



193

00:14:00.320 --> 00:14:05.810

Now again we've only requested a single permission read the SQL contacts so we're only interested in



194

00:14:05.810 --> 00:14:08.110

the first item in the Grundt results right.



195

00:14:08.360 --> 00:14:14.180

And he can say the card for that on line 16 on if that permission is granted then we can set the Boolean



196

00:14:14.180 --> 00:14:15.960

field right granted to true.



197

00:14:16.160 --> 00:14:19.970

So we know we do have the permission we look at things we can do it.



198

00:14:19.970 --> 00:14:21.730

Permission is not a bit lighter.



199

00:14:21.970 --> 00:14:28.070

I know that with the permission is denied then rate granted will be false and once again we really shouldn't



200

00:14:28.070 --> 00:14:28.900

be doing that.



201

00:14:29.120 --> 00:14:35.600

As I mentioned it may be an obvious thing to try to do when you do it and get in a mess it's not immediately



202

00:14:35.600 --> 00:14:37.730

obvious what's causing the mess.



203

00:14:37.730 --> 00:14:42.150

And if you've done any web development work then you'll know exactly where I'm going with this.



204

00:14:42.200 --> 00:14:44.250

Don't try and sides right.



205

00:14:44.300 --> 00:14:46.930

That doesn't mean much to you Don't worry it will soon become clear.



206

00:14:47.150 --> 00:14:51.440

So that should work and we've got some luggin card now that will let us see what's going on.



207

00:14:51.530 --> 00:14:56.690

I'll stop the video here and in the next one we're run the app and see what happens when the user accepts



208

00:14:56.690 --> 00:14:58.410

and denies the permission.



209

00:14:58.430 --> 00:14:59.360

So you in the next video.



