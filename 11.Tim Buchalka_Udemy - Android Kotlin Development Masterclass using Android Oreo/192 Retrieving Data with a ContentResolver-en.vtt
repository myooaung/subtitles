WEBVTT
1

00:00:05.200 --> 00:00:09.390

In the last video we found out more about what this content resolver is.



2

00:00:09.430 --> 00:00:13.570

So back to our code now we're going to use this application applications content resolver.



3

00:00:13.810 --> 00:00:19.110

As I said this is just a single instance of the content resolver and it's responsible for resolving



4

00:00:19.200 --> 00:00:26.120

all requests for content by directing the requests to the appropriate content provider in our code and



5

00:00:26.130 --> 00:00:33.630

here on line 25 where we call content resolved or query the content resolver extracts the authority



6

00:00:33.690 --> 00:00:39.900

from the Uruguay and uses that to decide which content provider it should send or the query request



7

00:00:39.900 --> 00:00:40.670

to.



8

00:00:40.980 --> 00:00:47.660

It then gets a cursor back from that content provider and returns the cursor to our calling code.



9

00:00:47.660 --> 00:00:51.840

All right so we're going to get a bit more code now and we're going to store the contacts in a list.



10

00:00:51.920 --> 00:00:52.880

So stop doing that.



11

00:00:52.870 --> 00:00:59.500

So below the line now work we've got a deck so we're going to add some more code so we're going to do



12

00:00:59.500 --> 00:01:08.010

first is at a new line and we're going to put out contacts is equal to a realist then we're going to



13

00:01:08.010 --> 00:01:12.090

use the domino operate out a string of top string we get it back.



14

00:01:12.150 --> 00:01:15.710

Or at least what's going to be in the right list and parentheses on the end.



15

00:01:15.960 --> 00:01:16.880

And just a note there.



16

00:01:16.920 --> 00:01:23.460

That's basically going to be create a list of contacts.



17

00:01:23.600 --> 00:01:24.270

All right.



18

00:01:24.270 --> 00:01:30.640

Then on the next I'm going to curse the question how to use that or not.



19

00:01:30.680 --> 00:01:36.050

Kelly Brice's it was a note here.



20

00:01:36.510 --> 00:01:37.050

Through the case of



21

00:01:43.280 --> 00:01:50.900

the side within the block itself this time we're going to use while parentheses we can use it this time



22

00:01:50.900 --> 00:01:56.470

correctly so it got moved to next closing parentheses.



23

00:01:56.670 --> 00:02:03.070

And if I look again there would be contex which is our right list dot add parentheses.



24

00:02:03.320 --> 00:02:13.230

Art history that in parentheses again have put ita dot net column index parentheses again.



25

00:02:13.460 --> 00:02:20.480

Contex contract doc contex there's going to be dot display and it's called analytical problem.



26

00:02:20.530 --> 00:02:25.670

We've got three closing Raupp parentheses in the long run.



27

00:02:25.670 --> 00:02:30.830

So we are storing the context in a list which I've called contex and we're adding a contact to the list



28

00:02:31.190 --> 00:02:34.060

and we'll use that list shortly as the data for an adapter.



29

00:02:34.310 --> 00:02:37.010

Now we can't guarantee that we'll get any data back.



30

00:02:37.220 --> 00:02:40.420

So we use a site called operad to be for the use function.



31

00:02:40.490 --> 00:02:41.890

That's a question mark.



32

00:02:41.900 --> 00:02:47.510

Now the code to use and the while loop use the same approach that we've used in our earlier example



33

00:02:47.870 --> 00:02:51.040

using a cursor is the same even without getting the data back.



34

00:02:51.050 --> 00:02:54.290

For our content resolver and content provider.



35

00:02:54.770 --> 00:02:59.840

So the last thing we need to do now with this card to read the data is to create an adapter for the



36

00:02:59.840 --> 00:03:00.660

list view.



37

00:03:00.800 --> 00:03:02.180

So let's go ahead and do that.



38

00:03:02.200 --> 00:03:05.090

I mean to put that immediately below the line but to finish topic.



39

00:03:05.180 --> 00:03:14.120

So we're going to talk about adapter is equal to you know top right up to then Darman upright a string



40

00:03:14.120 --> 00:03:17.570

in the middle of that the top string in parentheses.



41

00:03:17.930 --> 00:03:31.750

This comma top line out dot content is Gordito comma and are taught ID nine comma in contex being our



42

00:03:31.750 --> 00:03:35.340

right list and an expert contact.



43

00:03:35.420 --> 00:03:47.660

It's called Nimes dot adapter because by the way if you are asked to select the import for contact I



44

00:03:47.660 --> 00:03:54.390

just call names choose a synthetic import that's Kotla next an android synthetic main content and it's



45

00:03:54.400 --> 00:03:56.900

called My Darkstar.



46

00:03:57.110 --> 00:04:00.170

You can see in my case there because I've got what i reports on.



47

00:04:00.170 --> 00:04:06.720

It's found that while prices had automatically for us are also maybe on by the way we've seen this before



48

00:04:07.110 --> 00:04:10.530

in the top 10 down letter it for the right adapter.



49

00:04:10.760 --> 00:04:13.390

All right so at this point the code is completed almost.



50

00:04:13.680 --> 00:04:16.070

What we still need to do without is permissions.



51

00:04:16.250 --> 00:04:19.560

So Google changed the way permissions work with Android marshmallow.



52

00:04:19.770 --> 00:04:24.930

So what has been a bit of time discussing that now we should really fully shelf what we're doing with



53

00:04:24.930 --> 00:04:27.760

these content resolvers and content providers first.



54

00:04:28.050 --> 00:04:30.680

So what I'm going to do is run this on an android lollipop.



55

00:04:30.720 --> 00:04:34.010

The IP 21 will be Lydda so that we can see it working.



56

00:04:34.110 --> 00:04:37.810

But then in the next video we're going to spend some time looking at permissions.



57

00:04:37.920 --> 00:04:42.930

Whichever version of Android we use we still need to request the permissions and the Android manifest



58

00:04:42.930 --> 00:04:44.370

at least for the app.



59

00:04:44.380 --> 00:04:46.050

So let's go ahead and do that.



60

00:04:46.140 --> 00:04:53.140

You know I put the project on the left open at manifest.



61

00:04:53.260 --> 00:04:56.920

So the permission we want here is read I was called context let's go ahead and do that.



62

00:04:56.920 --> 00:05:03.490

So we're going to come down here above the application tech and we'll create a will add rather a user's



63

00:05:03.580 --> 00:05:05.330

permission tag here.



64

00:05:05.640 --> 00:05:10.870

He can say that and what it is hopefully helping or delivering for us and what we want.



65

00:05:10.870 --> 00:05:16.390

As I mentioned read the school context have to specify that pressing enter.



66

00:05:16.420 --> 00:05:21.150

So there's no chance to be accidentally mis topping that they're going to close off the tags This is



67

00:05:21.160 --> 00:05:26.980

what they use the permission now set up for reading contacts to find you know Android benefits.



68

00:05:27.370 --> 00:05:32.240

So once you've done this now the app should work on any version of Android before IPO 23.



69

00:05:32.590 --> 00:05:36.320

So let's run it on the IPO 21 device that we set up a few years ago.



70

00:05:39.490 --> 00:05:42.560

So this is the one here that I set up 21 contextless one that



71

00:05:59.100 --> 00:06:03.140

I want to see Apple's running which it is now we should be able to attempt to flighting action button



72

00:06:03.470 --> 00:06:05.760

and say the context despite in the last few.



73

00:06:05.800 --> 00:06:10.290

Just remember to choose the emulator that you've added the context to the early video.



74

00:06:10.440 --> 00:06:13.960

Otherwise of course you won't be able to have any contact records to display.



75

00:06:14.170 --> 00:06:20.450

So then click on the send button and you can say we've got two records showing there and if we had enough



76

00:06:20.450 --> 00:06:25.000

records we could scroll through them as you see us to with a list few daily reps.



77

00:06:25.100 --> 00:06:26.750

In fact now we know it's working.



78

00:06:26.780 --> 00:06:31.490

You could run it on your phone and just see all your contacts appear in the list.



79

00:06:31.490 --> 00:06:33.650

All right but at this point that's working fine.



80

00:06:33.650 --> 00:06:37.310

And that's how we can use data using a content provider.



81

00:06:37.760 --> 00:06:42.980

Obviously this is a very basic application but it does give you the concepts of a content provider and



82

00:06:42.980 --> 00:06:45.530

also using a content resolver.



83

00:06:45.530 --> 00:06:50.660

In this case we were able to access the contacts built into the fine and she can say go back to the



84

00:06:50.660 --> 00:06:51.110

code



85

00:06:57.320 --> 00:07:03.450

the actual code to query the data is very similar to what we had when we accessed the database directly.



86

00:07:03.470 --> 00:07:09.920

So using a content provider doesn't really introduce any more complexity into our code beyond having



87

00:07:09.920 --> 00:07:16.040

to obtain the content to score your high from the content provider class so that we can pass that to



88

00:07:16.040 --> 00:07:22.460

the content resolver we queried the content resolver and that passes the query onto the content provider



89

00:07:22.850 --> 00:07:29.120

the content provider and fetches the data from its data source or in the case of an update writes the



90

00:07:29.120 --> 00:07:35.600

data to the data source and either returns a cursor to the content resolver or reports back how many



91

00:07:35.600 --> 00:07:36.960

records were updated.



92

00:07:37.040 --> 00:07:41.710

There's a direct mapping method from the content resolver to the content provider.



93

00:07:41.870 --> 00:07:47.180

For example what we call the result was query method that has to call a query method in the provider



94

00:07:47.540 --> 00:07:53.330

and the same applies to inserts and updates every method we call the resolver has a corresponding method



95

00:07:53.660 --> 00:07:59.600

that resolver calls in the provider and we'll see that in more detail when we come to create our own



96

00:07:59.600 --> 00:08:00.740

content provider.



97

00:08:00.970 --> 00:08:05.930

And in the next step will do just that and will look at creating our own content provider to provide



98

00:08:05.930 --> 00:08:08.240

access to our apps database.



99

00:08:08.240 --> 00:08:13.970

So this is more complex than just using the database directly but it does mean that other apps will



100

00:08:14.000 --> 00:08:20.160

also be able to access the data in the same way as we've just done with the phone's contacts data.



101

00:08:20.280 --> 00:08:25.280

And it also frees us from having to cater for things like the activity lifecycle we're not accessing



102

00:08:25.280 --> 00:08:30.680

the database directly and don't have to worry about opening and closing the content resolve as objects.



103

00:08:30.680 --> 00:08:34.670

Global doesn't get destroyed when an activity does.



104

00:08:34.670 --> 00:08:38.770

Of course we still have to program our activity to handle its lifecycle events.



105

00:08:38.810 --> 00:08:41.750

If I retype the emulator the list is cleared.



106

00:08:42.020 --> 00:08:46.830

Going back to the emulator so I can see if I rotate the device.



107

00:08:46.830 --> 00:08:51.950

The list view is cleared and we have to click on the button to bring the data back again.



108

00:08:52.280 --> 00:08:57.050

So that does result in the query getting executed again and surprisingly then we'll be seeing how a



109

00:08:57.050 --> 00:08:59.780

load can be used to prevent that type.



110

00:08:59.780 --> 00:09:05.300

The point I want to make about the life cycle is that we don't have to concern ourselves with coordinating



111

00:09:05.300 --> 00:09:12.320

the data access with the activity lifecycle the content resolver and content provider handle that for



112

00:09:12.320 --> 00:09:13.060

us.



113

00:09:13.370 --> 00:09:18.920

If we query the database using a curse Alerta We also don't have to worry about creating background



114

00:09:18.920 --> 00:09:22.260

threads and we'll be saying how to do that in the next section.



115

00:09:22.640 --> 00:09:27.170

But coming up in the next video we could look at the changes that Google made to permissions in IPR



116

00:09:27.170 --> 00:09:32.190

23 and had to get this app working with Android Marshman I would above.



117

00:09:32.230 --> 00:09:33.160

In the next video.



