WEBVTT
1

00:00:05.250 --> 00:00:11.530

Tudo bem, ento, seguindo em frente, uma vez que voc saiba qual  a inteno, o cdigo ser bastante fcil de entender.



2

00:00:11.530 --> 00:00:18.510

Ento, vamos at a documentao do Google e descubra mais sobre intenes.



3

00:00:18.510 --> 00:00:24.030

Certo, aqui diz que "Uma inteno  uma descrio abstrata de uma operao a ser executada".



4

00:00:24.030 --> 00:00:30.060

Portanto, o uso da palavra abstract aqui pode ser um pouco confuso, porque a inteno no  uma classe abstrata.



5

00:00:30.060 --> 00:00:34.140

O que eles realmente querem dizer aqui  que no est ligado a nenhuma operao em particular.



6

00:00:34.140 --> 00:00:39.690

Portanto, a leitura pode ser usada com um mtodo de atividade inicial para iniciar uma atividade, que  o que estamos



7

00:00:39.690 --> 00:00:46.860

usando em nosso aplicativo, e a inteno tambm pode ser usada para enviar dados a componentes registrados para receber transmisses, como uma notificao de que uma mensagem



8

00:00:46.860 --> 00:00:53.160

de texto foi recebida, por exemplo, e tambm para iniciar um servio. Mas est lanando atividades



9

00:00:53.160 --> 00:00:55.890

que nos interessam aqui.



10

00:00:55.890 --> 00:01:00.840

Agora, o prximo pargrafo  um pouco confuso, mas basicamente significa que voc pode usar



11

00:01:00.840 --> 00:01:06.420

uma inteno para iniciar uma atividade, sem vincular seu cdigo diretamente  atividade que deseja lanar.



12

00:01:06.420 --> 00:01:12.090

Portanto, se voc quiser iniciar o aplicativo de e-mail de dispositivos, basta especificar o e-mail na inteno, sem



13

00:01:12.090 --> 00:01:16.350

precisar saber qual aplicativo o usurio instalou para lidar com e-mails nesse dispositivo.



14

00:01:16.350 --> 00:01:22.800

Portanto, o uso mais significativo de intenes est no lanamento de atividades, e a documentao se refere a elas



15

00:01:22.800 --> 00:01:24.870

como a cola entre as atividades.



16

00:01:24.870 --> 00:01:30.930

Ento, em outras palavras, intenes ligam as atividades juntas. Agora, alm da documentao de referncia, o



17

00:01:30.930 --> 00:01:34.770

Google tambm fornece guias sobre muitos aspectos do Android.



18

00:01:34.770 --> 00:01:40.770

Agora, a documentao de referncia pode ser bastante formal, mas os guias geralmente so escritos em um estilo mais



19

00:01:40.770 --> 00:01:48.090

amigvel, e na verdade h guias, um guia e no intenes. Eu s vou colar esse link, ento voc pode verificar isso.



20

00:01:48.090 --> 00:01:51.180

Agora aqui est dizendo que "Uma inteno  um objeto de



21

00:01:51.180 --> 00:01:54.480

mensagem que voc pode usar para solicitar uma ao de outro componente



22

00:01:54.480 --> 00:01:59.490

de aplicativo", e essa  provavelmente uma descrio mais til do que uma descrio abstrata de uma operao



23

00:01:59.490 --> 00:02:01.380

a ser executada, como a pgina anterior.



24

00:02:01.380 --> 00:02:08.010

Agora, esta pgina tambm menciona o uso de intenes para iniciar atividades e menciona que a inteno descreve



25

00:02:08.010 --> 00:02:11.340

a atividade para iniciar e transporta os dados necessrios.



26

00:02:11.340 --> 00:02:13.530

Ento eu acho que esta pgina  mais legvel.



27

00:02:13.530 --> 00:02:19.590

Portanto, atente para URLs comeando com o desenvolvedor. android. com / guide, bem como as pginas de



28

00:02:19.590 --> 00:02:22.270

referncia de barra, porque os guias podem ser mais teis.



29

00:02:22.270 --> 00:02:28.500

Podemos ver aqui onde temos o guia de barra na URL, comparado com a barra de referncia l.



30

00:02:28.500 --> 00:02:32.720

Eu acho que os guias slash so um pouco mais legveis em muitos casos.



31

00:02:32.720 --> 00:02:36.890

Ento, quando voc terminar esta seo e j tiver visto como o cdigo inicia as



32

00:02:36.890 --> 00:02:43.370

diversas atividades de nossos botes, vale a pena ler o restante desta pgina para obter uma explicao de como o Android lida com intenes.



33

00:02:43.370 --> 00:02:47.120

Agora no se preocupe com os bits sobre servios e transmisses ainda.



34

00:02:47.120 --> 00:02:49.590

So atividades que nos interessam no momento.



35

00:02:49.590 --> 00:02:51.800

Agora vamos criar nossa prpria



36

00:02:51.800 --> 00:02:58.840

inteno em breve, mas aqui no precisamos, nem precisamos, porque a classe YouTubeStandalonePlayer ir cri-los para ns.



37

00:02:58.840 --> 00:03:03.460

Agora, se quisermos uma inteno de reproduzir um vdeo, basta chamarmos a funo de criao de inteno



38

00:03:03.460 --> 00:03:09.270

de vdeo, se voltarmos ao nosso cdigo, e estivermos usando isso como voc pode ver na linha 40 e para reproduzir



39

00:03:09.270 --> 00:03:13.060

uma lista de vdeos como uma playlist que chamamos de inteno de criar playlist.



40

00:03:13.060 --> 00:03:18.490

Agora, essas duas funes transformaro uma inteno que podemos usar, iniciar uma atividade,



41

00:03:18.490 --> 00:03:23.110

mas executar a operao desejada. Ambos os mtodos precisam saber qual atividade est iniciando a inteno,



42

00:03:23.110 --> 00:03:25.840

e  por isso que estamos fornecendo isso aqui como a atividade.



43

00:03:25.840 --> 00:03:28.210

Agora tambm precisamos fornecer a chave da



44

00:03:28.210 --> 00:03:33.670

API do Google e o ID do que queremos reproduzir, seja um nico vdeo ou



45

00:03:33.670 --> 00:03:40.390

uma playlist, dependendo da inteno que est sendo usada. E pelas funes da classe YouTubeStandalonePlayer



46

00:03:40.390 --> 00:03:45.160

esto documentadas, voltamos a um navegador, colamos esse link



47

00:03:45.160 --> 00:03:52.320

e elas esto documentadas no YouTubeStandalonePlayer aqui. Voc pode descobrir mais sobre isso l a partir do link



48

00:03:52.320 --> 00:03:54.110

 esquerda, ento verifique se



49

00:03:54.110 --> 00:03:56.520

voc quer saber mais sobre suas funes.



50

00:03:56.520 --> 00:04:02.860

Ento  isso. A documentao para intenes pode parecer um pouco assustadora, mas us-las  bem simples.



51

00:04:02.860 --> 00:04:08.340

Agora  to fcil criar nossas prprias intenes para iniciar diferentes atividades em nosso prprio aplicativo. Eu vou mudar de volta para



52

00:04:08.340 --> 00:04:12.810

o cdigo agora, e ns vamos voltar para a nossa MainActivity.



53

00:04:12.810 --> 00:04:15.910

Ns vamos adicionar o cdigo para os botes na tela principal.



54

00:04:15.910 --> 00:04:20.640

Ento, a primeira coisa que queremos fazer  fazer com que a classe implemente a lista



55

00:04:20.640 --> 00:04:24.270

de interface onClick, assim como fizemos no vdeo anterior para a classe StandaloneActivity.



56

00:04:24.270 --> 00:04:26.920

Ento, para fazer isso, vamos adicionar uma



57

00:04:26.920 --> 00:04:30.020

vrgula aqui e ver. OnClickListener, e voc pode



58

00:04:30.020 --> 00:04:32.040

ver as importaes so adicionadas automaticamente.



59

00:04:32.040 --> 00:04:37.370

Em seguida, adicionamos o cdigo para atribuir o ouvinte aos botes e



60

00:04:37.370 --> 00:04:39.900

faremos isso depois do setContinueView.



61

00:04:39.900 --> 00:04:49.230

Ento vai ser btnPlaySingle. setOnClickListener, parnteses isso, e btnPlayStandalone, ou desculpe, btnStandalone eu deveria



62

00:04:49.230 --> 00:04:58.290

dizer, ponto setOnClickListener, isso, e aceitar a importao sinttica se o Android Studio no adicion-lo automaticamente, mas voc pode



63

00:04:58.290 --> 00:05:03.210

ver aqui na linha 6 foi adicionado automaticamente para mim .



64

00:05:03.210 --> 00:05:07.570

Agora, temos um erro no momento, mas isso desaparecer assim que implementarmos o mtodo



65

00:05:07.570 --> 00:05:09.900

onClick das interfaces, ento, vou fazer isso agora.



66

00:05:09.900 --> 00:05:14.190

Ento, temos o Android Studio para gerar o mtodo de interface usando o controle I.



67

00:05:14.190 --> 00:05:17.910

Novamente, antes de fazer isso, lembre-se de ter certeza de que o cursor est dentro da



68

00:05:17.910 --> 00:05:24.260

classe quando voc fizer isso, seno voc ter um erro estranho e no funcionar. Ento eu vou pressionar enter l, e ento ns precisamos



69

00:05:24.260 --> 00:05:27.210

adicionar o cdigo para isso ento vamos realmente mudar isso.



70

00:05:27.210 --> 00:05:32.000

E o que faremos  tentar refatorar dessa vez, ento Refactor, Rename. Vamos cham-lo de



71

00:05:32.000 --> 00:05:41.880

viso novamente, entrar. Livrar-se do ponto de interrogao, vamos nos livrar do TODO. O cdigo vai ser val



72

00:05:41.880 --> 00:05:54.420

intent igual a, parnteses vista. id, ento R. identidade. btnPlaySingle, token de erro, I maisculo para inteno, certificando-se de



73

00:05:54.420 --> 00:05:58.110

que o contedo do Android  aquele que foi selecionado l.



74

00:05:58.110 --> 00:06:02.840

Este  o primeiro argumento, vrgula do Youtube, desta vez  o



75

00:06:02.840 --> 00:06:11.040

Youtube com um minsculo t, classe de clon de atividade. parnteses  direita



76

00:06:11.040 --> 00:06:20.360

de java. Ns vamos fazer o mesmo para o Standalone, ento R. identidade. token de erro



77

00:06:20.360 --> 00:06:27.380

btnStandalone, inteno novamente, parnteses, esta vrgula novamente, desta vez, ser



78

00:06:27.380 --> 00:06:37.560

a classe de dois-pontos de clon do StandaloneActivity. parnteses de fechamento de java, em seguida, um



79

00:06:37.560 --> 00:06:53.020

token de erro else throw IllegalArgument Exception, parnteses aspas duplas "Boto indefinido clicado". Ento, fora do bloco de cdigo para o nosso quando, inicie a inteno de atividade.



80

00:06:53.020 --> 00:06:57.380

Ento, esse cdigo  muito parecido com o cdigo que acabamos de criar na classe StandaloneActivity.



81

00:06:57.380 --> 00:07:00.340

A diferena aqui  que estamos criando nossas prprias intenes.



82

00:07:00.340 --> 00:07:05.390

Agora, a classe de inteno tem vrios construtores, mas sempre que voc quiser usar uma inteno para iniciar



83

00:07:05.390 --> 00:07:09.300

uma nova atividade em seu prprio aplicativo, essa  a que voc geralmente usar.



84

00:07:09.300 --> 00:07:14.170

Agora temos que fornecer um contexto para que voc possa ver que usamos isso para passar o contexto atual.



85

00:07:14.170 --> 00:07:20.720

Agora, o boto btnPlaySingle iniciar o YouTubeActivity, e btnStandalone iniciar nossa Atividade autnoma, e elas



86

00:07:20.720 --> 00:07:26.030

sero passadas como o segundo parmetro para o construtor da classe intent.



87

00:07:26.030 --> 00:07:30.920

Agora, a classe do clon do YouTubeActivity, como voc pode ver sendo usada aqui na linha 21, 



88

00:07:30.920 --> 00:07:36.230

chamada de literal de classe e  uma maneira de passar uma referncia a uma classe como um parmetro.



89

00:07:36.230 --> 00:07:38.810

Agora voc no passaria string ou inteiro como parmetro.



90

00:07:38.810 --> 00:07:43.760

Voc usaria uma string real como, por exemplo, tim entre aspas duplas, ou um nmero real como 100, e



91

00:07:43.760 --> 00:07:45.170

essa  a mesma coisa.



92

00:07:45.170 --> 00:07:52.430

Precisamos passar um objeto do tipo class, cujo valor  a classe YouTubeActivity, e  assim que voc faz no Kotlin.



93

00:07:52.430 --> 00:07:58.220

Agora no se preocupe muito com isso, lembre-se que quando voc quer passar uma classe para uma



94

00:07:58.220 --> 00:08:03.290

funo, voc tem que criar um literal de classe adicionando a classe de dois pontos



95

00:08:03.290 --> 00:08:07.450

no final, e porque estas so classes Java, tambm adicionando ponto Java.



96

00:08:07.450 --> 00:08:12.530

Agora a outra coisa que fiz foi verificar se esse mtodo no foi chamado por outro boto. Agora no deveria ser, porque temos



97

00:08:12.530 --> 00:08:15.360

apenas dois botes na tela e estamos



98

00:08:15.360 --> 00:08:18.110

lidando com os dois na declarao when.



99

00:08:18.110 --> 00:08:22.790

Ento, temos um caso para cada boto em outras palavras, mas  uma boa prtica ter



100

00:08:22.790 --> 00:08:26.180

certeza de adicionar um novo boto e esquecer de atualizar essa funo.



101

00:08:26.180 --> 00:08:30.110

Ento  por isso que eu adicionei o branch else na linha 23.



102

00:08:30.110 --> 00:08:32.550

Tudo bem ento  isso, esse  o nosso cdigo terminado.



103

00:08:32.550 --> 00:08:36.380

Agora, h mais uma coisa que o novo assistente de atividade



104

00:08:36.380 --> 00:08:40.040

faz e temos que fazer isso manualmente para a classe StandaloneActivity.



105

00:08:40.040 --> 00:08:45.230

Agora eu mencionei isso brevemente quando usamos o assistente para criar a classe YouTubeActivity, e isso tem a



106

00:08:45.230 --> 00:08:46.940

ver com o arquivo de manifesto.



107

00:08:46.940 --> 00:08:49.650

Ento, vamos dar uma olhada nisso e ver o que  tudo isso.



108

00:08:49.650 --> 00:08:57.030

Vamos abrir nosso arquivo de manifesto aqui. Agora dentro da tag do aplicativo, como voc pode ver aqui na linha 7,



109

00:08:57.030 --> 00:09:02.720

h tags para cada uma de nossas atividades e, nesse caso, voc pode ver que temos dot MainActivity e dot YoutubeActivity.



110

00:09:02.720 --> 00:09:06.440

Agora estamos perdendo uma tag para a nova StandaloneActivity, e vou adicionar



111

00:09:06.440 --> 00:09:07.860

isso em um minuto.



112

00:09:07.860 --> 00:09:13.590

Agora, quando criamos o YoutubeActivity usando o assistente e marcamos a caixa de atividade do ativador, o assistente



113

00:09:13.590 --> 00:09:18.930

adicionou uma tag de filtro de inteno com um filtro de ao e um filtro de categoria.



114

00:09:18.930 --> 00:09:24.370

Ento, temos esse filtro de inteno que tem uma ao e tambm uma tag de categoria, como voc pode ver. Agora sem estes, no poderamos iniciar



115

00:09:24.370 --> 00:09:27.390

a atividade como estamos fazendo, ento no



116

00:09:27.390 --> 00:09:32.460

poderamos ver o YoutubeActivity funcionando. Portanto, a verificao dessa caixa de



117

00:09:32.460 --> 00:09:37.860

atividade do ativador resultou na adio dessas tags extras ao manifesto do YoutubeActivity.



118

00:09:37.860 --> 00:09:41.910

E mais uma vez esses magos no fazem nada que no pudemos fazer sozinhos, eles apenas nos poupam



119

00:09:41.910 --> 00:09:43.230

um pouco de tempo e digitao.



120

00:09:43.230 --> 00:09:48.150

Ento, agora que temos uma maneira de lanar o YoutubeActivity usando um boto, na verdade no precisamos mais



121

00:09:48.150 --> 00:09:52.830

desses filtros de inteno, mas precisamos de uma tag de atividade para cada atividade, seno eles no



122

00:09:52.830 --> 00:09:56.700

podem ser vistos pelo Android sistema e no pode ser lanado em tudo.



123

00:09:56.700 --> 00:10:04.000

Agora, a tag deve incluir um atributo de nome, mas todo o resto  opcional e tambm especificarei um rtulo



124

00:10:04.000 --> 00:10:06.080

que aparecer no ttulo da atividade.



125

00:10:06.080 --> 00:10:11.940

Ento, vou modificar primeiro o elemento YoutubeActivity e adicionar outro para o novo StandaloneActivity.



126

00:10:11.940 --> 00:10:14.360

Ento, basicamente, novamente, tudo o que precisamos aqui 



127

00:10:14.360 --> 00:10:18.710

de atividade, e temos o nome do Android YoutubeActivity, e tambm vou adicionar o rtulo.



128

00:10:18.710 --> 00:10:21.290

E o que farei por clareza  colocar



129

00:10:21.290 --> 00:10:33.030

isso na prxima linha, ento o rtulo do clon do Android, e ns chamaremos esse jogador do Youtube. Ento, e ns voltaremos para l, ento eu vou deletar esse filtro de inteno como mencionei, e



130

00:10:33.030 --> 00:10:38.590

ns temos a tag de atividade de fechamento agora, e ns vamos copiar isso, e ns



131

00:10:38.590 --> 00:10:41.420

estamos vai criar outro agora para nossa StandaloneActivity.



132

00:10:41.420 --> 00:10:46.050

Tem que estar dentro do aplicativo antes da tag de fechamento do



133

00:10:46.050 --> 00:10:52.320

aplicativo, ento desta vez, em vez do YouTubeActivity, vamos chamar esse de StandaloneActivity, e voc pode ver



134

00:10:52.320 --> 00:10:58.270

que o Android Studio est se referindo corretamente  nossa classe StandaloneActivity e pressione enter l.



135

00:10:58.270 --> 00:11:02.840

Ok, livre-se dessa atividade de rastreamento e, dessa vez, ela



136

00:11:02.840 --> 00:11:04.930

ser chamada de StandaloneActivity.



137

00:11:04.930 --> 00:11:11.230

Isso vai ser o que est no nosso rtulo.



138

00:11:11.230 --> 00:11:16.390

Tudo bem, ento agora os aplicativos terminaram e podemos execut-lo em um dispositivo para garantir que tudo funcione.



139

00:11:16.390 --> 00:11:21.180

Ento eu tenho o meu emulador, e eu tenho isso definido para o modo retrato como voc pode ver l. Agora, estamos rodando o YoutubeActivity at agora,



140

00:11:21.180 --> 00:11:23.970

e o Android Studio reconfigura o boto play na



141

00:11:23.970 --> 00:11:28.700

barra de ferramentas, para que ele execute a ltima atividade que voc selecionou, voc pode



142

00:11:28.700 --> 00:11:31.660

ver aqui o YoutubeActivity. Agora, se eu clicar no



143

00:11:31.660 --> 00:11:35.920

boto de execuo, eu realmente recebo esse erro na parte inferior da tela.



144

00:11:35.920 --> 00:11:39.040

Ento eu farei isso e mostrarei a voc, veja abaixo a parte inferior, o



145

00:11:39.040 --> 00:11:40.240

erro "Erro ao executar o



146

00:11:40.240 --> 00:11:45.480

YoutubeActivity: A atividade deve ser exportada ou conter um filtro de inteno". Essencialmente, ele agora est reclamando do fato de que



147

00:11:45.480 --> 00:11:50.320

a entrada YoutubeActivity no arquivo de manifesto deve ter esse filtro de inteno, e  claro



148

00:11:50.320 --> 00:11:54.300

que acabamos de tirar isso de l. Mas tudo bem, porque no queremos



149

00:11:54.300 --> 00:11:56.400

mais exibir a atividade do Youtube diretamente.



150

00:11:56.400 --> 00:11:59.150

Vamos usar os botes que adicionamos agora.



151

00:11:59.150 --> 00:12:02.870

Agora o que vamos fazer  garantir que estamos em uma MainActivity. Agora, s vezes, quando voc



152

00:12:02.870 --> 00:12:08.100

clica com o boto direito, no h a opo de executar o MainActivity no menu.



153

00:12:08.100 --> 00:12:13.340

Voc pode ver neste caso que eu tenho que trabalhar, mas s vezes no funciona. Se isso no funcionar e voc no puder



154

00:12:13.340 --> 00:12:20.100

v-lo, venha at MainActivity e clique com o boto direito do mouse no nome real da classe e selecione Executar MainActivity.



155

00:12:20.100 --> 00:12:23.940

E se isso no funcionar, talvez seja necessrio criar e reconstruir o projeto.



156

00:12:23.940 --> 00:12:29.040

Um desses mtodos, bem, voc pode ter que reconstruir e, em seguida, qualquer um dos outros dois mtodos deve realmente funcionar.



157

00:12:29.040 --> 00:12:36.040

Ento, vou clicar com o boto direito agora e selecionar run MainActivity, e vou execut-lo no meu emulador.



158

00:12:36.040 --> 00:12:40.000

Tudo bem, ento voc pode ver agora que  a nossa tela principal com os dois botes, ento est funcionando.



159

00:12:40.000 --> 00:12:46.100

Vou tocar agora no boto REPRODUZIR UM NICO VDEO, e lanarmos o YoutubeActivity,



160

00:12:46.100 --> 00:12:48.350

 o que testamos antes.



161

00:12:48.350 --> 00:12:52.670

Ento, quando voc deseja iniciar uma nova atividade em seus aplicativos, essa  uma maneira de fazer isso.



162

00:12:52.670 --> 00:12:57.740

Ento est jogando bem. Estamos recebendo nossas mensagens Toast como voc



163

00:12:57.740 --> 00:13:03.360

pode ver, ento tudo est funcionando bem. Eu vou voltar para o menu com o boto Voltar,



164

00:13:03.360 --> 00:13:09.060

e desta vez vamos tocar no boto do submenu autnomo. Isso inicia nossa atividade autnoma e aqui



165

00:13:09.060 --> 00:13:14.640

est nosso submenu, como voc pode ver. Agora o ttulo diz Atividade autnoma, porque esse 



166

00:13:14.640 --> 00:13:17.220

o texto que colocamos no rtulo no manifesto.



167

00:13:17.220 --> 00:13:23.500

Ento, vamos verificar primeiro o primeiro vdeo. Eu vou tocar nesse boto. Voc pode ver que nosso



168

00:13:23.500 --> 00:13:26.450

vdeo foi lanado novamente. Agora ele no comea a ser reproduzido



169

00:13:26.450 --> 00:13:28.210

automaticamente, por isso voc precisa tocar no cone Reproduzir.



170

00:13:28.210 --> 00:13:33.470

Voc pode ver que ele est correndo na paisagem no momento, de lado, e isso



171

00:13:33.470 --> 00:13:36.880

porque o Player Independente est sendo executado em tela cheia.



172

00:13:36.880 --> 00:13:46.170

Ento, eu vou girar o dispositivo, reproduzi-lo novamente.



173

00:13:46.170 --> 00:13:51.040

Assim, o Google Standalone Player no se permite ser destrudo quando a orientao muda,



174

00:13:51.040 --> 00:13:53.740

mas tambm no controla a alterao em si.



175

00:13:53.740 --> 00:13:58.270

Faz sentido, neste caso, porque um vdeo em tela cheia realmente precisa ser executado na paisagem, caso



176

00:13:58.270 --> 00:13:59.950

contrrio, no seria em tela cheia.



177

00:13:59.950 --> 00:14:02.850

Agora observe que quando estou pressionando a pausa



178

00:14:02.850 --> 00:14:09.000

aqui, na verdade no estamos recebendo notificaes do Toast. Com o Player Independente, no h recursos no cdigo



179

00:14:09.000 --> 00:14:11.280

para obtermos esses retornos de chamada.



180

00:14:11.280 --> 00:14:16.500

 somente quando usamos o widget YouTubePlayer no YoutubeActivity que voc pode fazer isso.



181

00:14:16.500 --> 00:14:20.920

Ento, isso tambm est funcionando agora. Ento eu vou voltar para o menu.



182

00:14:20.920 --> 00:14:26.160

Vamos dar uma olhada na lista de reproduo.



183

00:14:26.160 --> 00:14:30.880

Agora observe essas setas, voc no consegue enxergar direito, voc ter que jogar um pouco para que



184

00:14:30.880 --> 00:14:36.210

possamos realmente ver, e ns realmente temos um anncio aparecendo. Ento vamos apenas esperar que isso termine, e eu



185

00:14:36.210 --> 00:14:38.220

vou fazer uma pausa quando puder.



186

00:14:38.220 --> 00:14:44.440

OK, ento observe esta seta aqui. Isso se move atravs da Playlist, para o prximo vdeo.



187

00:14:44.440 --> 00:14:48.670

Agora, mais uma vez, o vdeo no comea a ser reproduzido ou no comeou a ser reproduzido automaticamente, por



188

00:14:48.670 --> 00:14:54.380

isso voc pode tocar no Play como voc me viu para execut-lo. E se eu clicar no prximo agora, esta seta



189

00:14:54.380 --> 00:15:02.730

aqui, na verdade vai para o prximo vdeo na sequncia da Playlist. Aguardaremos que o anncio termine, e esse  um vdeo



190

00:15:02.730 --> 00:15:08.880

completamente diferente do que vimos anteriormente, por isso vou fazer uma pausa, e posso voltar



191

00:15:08.880 --> 00:15:13.180

ao vdeo anterior, se eu quisesse. Agora, o que eu queria te mostrar,



192

00:15:13.180 --> 00:15:17.190

espere at chegarmos um pouco mais aqui. Agora voc pode ver que  bastante aborrecido, mas quando chegamos



193

00:15:17.190 --> 00:15:21.720

ao comeo, ao primeiro vdeo da Playlist, eu no posso mais clicar nele. Ento estou clicando nisso,



194

00:15:21.720 --> 00:15:23.520

mas nada est acontecendo,



195

00:15:23.520 --> 00:15:31.810

como voc esperaria, porque estamos no primeiro vdeo. E eu posso seguir em frente vrias vezes, encaminhar novamente, e perceber que



196

00:15:31.810 --> 00:15:36.030

est nos dizendo no topo, assim que este anncio terminar, o que est



197

00:15:36.030 --> 00:15:44.000

se tornando muito chato, em qual vdeo estamos, estamos em trs das sete. Agora, eventualmente, ao fazer isso, eu poderia chegar



198

00:15:44.000 --> 00:15:46.610

ao ltimo vdeo, ento no



199

00:15:46.610 --> 00:15:50.960

poderamos avanar mais, ento eu poderia voltar aos vdeos anteriores.



200

00:15:50.960 --> 00:15:55.790

Assim, essa funcionalidade, em termos de reproduzir os vdeos nas listas de reproduo e saltar para trs



201

00:15:55.790 --> 00:16:01.250

e para frente, faz parte do YouTube Standalone Player. Ento tudo est funcionando bem.



202

00:16:01.250 --> 00:16:06.630

E o nosso aplicativo do YouTube est concludo. Agora, nesta seo, cobrimos bastante.



203

00:16:06.630 --> 00:16:12.520

Por isso, vimos como incluir uma biblioteca de terceiros em nossos prprios aplicativos, quando adicionamos o arquivo jar da API do YouTube  pasta



204

00:16:12.520 --> 00:16:16.790

libs e criamos uma referncia a ela na compilao. arquivo gradle.



205

00:16:16.790 --> 00:16:22.250

Agora tambm verificamos a documentao da API e a Internet  um recurso excelente,



206

00:16:22.250 --> 00:16:28.490

sempre que voc precisar de informaes sobre como algo funciona ou como usar vrias classes e funes.



207

00:16:28.490 --> 00:16:31.070

E no  apenas para bibliotecas de terceiros.



208

00:16:31.070 --> 00:16:36.740

A documentao do Google sobre o Android em si tambm  uma fonte de informaes muito til e, muitas



209

00:16:36.740 --> 00:16:39.860

vezes, fornece guias, bem como a documentao de referncia. Por



210

00:16:39.860 --> 00:16:43.760

isso, adquira o hbito de pesquisar documentao sobre as classes que voc usa.



211

00:16:43.760 --> 00:16:49.790

Em seguida, implementamos algumas interfaces para permitir que o YouTubePlayer, o YouTubePlayer, chamasse funes em



212

00:16:49.790 --> 00:16:53.580

nosso cdigo, quando algo interessante acontecesse durante a reproduo.



213

00:16:53.580 --> 00:16:58.010

Fizemos isso novamente como uma maneira alternativa de definir um ouvinte nos botes do nosso aplicativo.



214

00:16:58.010 --> 00:17:02.270

Agora, o aplicativo tambm usou intenes para iniciar outras atividades. Agora,



215

00:17:02.270 --> 00:17:04.460

podemos criar aplicativos mais complexos.



216

00:17:04.460 --> 00:17:06.500

que tem mais de uma tela.



217

00:17:06.500 --> 00:17:10.330

Agora h outras maneiras de fazer isso, e vamos ver algo chamado um



218

00:17:10.330 --> 00:17:15.680

fragmento um pouco mais tarde, mas iniciar atividades usando intenes  uma parte crucial da programao do Android.



219

00:17:15.680 --> 00:17:17.690

Ento, isso  apenas o



220

00:17:17.690 --> 00:17:21.220

final desta seo, mas vou terminar agora com um desafio.



221

00:17:21.220 --> 00:17:27.340

Portanto, o desafio  usar a documentao no YouTube Standalone Player para alterar o aplicativo, para que



222

00:17:27.340 --> 00:17:34.550

o vdeo seja iniciado ou os vdeos comecem a ser reproduzidos automaticamente depois que voc tocar nos botes do menu Standalone.



223

00:17:34.550 --> 00:17:39.820

Agora, no momento em que os vdeos so enfileirados, o player precisa tocar no cone Reproduzir para que eles sejam



224

00:17:39.820 --> 00:17:45.040

reproduzidos, como voc me viu neste vdeo, para que eles iniciem a reproduo automaticamente quando o boto for tocado.



225

00:17:45.040 --> 00:17:47.830

Ento faa isso tanto para o Vdeo quanto para a Lista de



226

00:17:47.830 --> 00:17:50.620

Reproduo, e no prximo vdeo, eu irei realmente passar pela minha soluo.



227

00:17:50.620 --> 00:17:51.970

Ento, eu vou te ver no prximo vdeo.



