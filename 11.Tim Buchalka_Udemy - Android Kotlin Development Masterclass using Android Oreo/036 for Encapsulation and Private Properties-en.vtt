WEBVTT
1

00:00:04.690 --> 00:00:07.390

A few videos back I mentioned that the



2

00:00:07.390 --> 00:00:08.730

way we're adding loop to the inventory



3

00:00:08.730 --> 00:00:11.200

wasn't a good idea and in this video



4

00:00:11.200 --> 00:00:12.580

we're gonna look at why that isn't a



5

00:00:12.580 --> 00:00:14.200

good idea and what we could do about it



6

00:00:14.200 --> 00:00:16.420

we're gonna start there by deleting the



7

00:00:16.420 --> 00:00:18.360

code that we used for for loops and



8

00:00:18.360 --> 00:00:21.340

uncommenting our player code, I'm just



9

00:00:21.340 --> 00:00:24.640

going to delete the for loop code I'm



10

00:00:24.640 --> 00:00:26.620

just going to select like delete the



11

00:00:26.620 --> 00:00:28.630

rest of it first and select the rest of



12

00:00:28.630 --> 00:00:31.510

the clay that was commented out I think



13

00:00:31.510 --> 00:00:33.039

if we come up to the code menu and I can



14

00:00:33.039 --> 00:00:35.550

click on comment with flying comment



15

00:00:35.550 --> 00:00:38.769

which undoes the changes if it was



16

00:00:38.769 --> 00:00:41.499

already coming to that and obviously



17

00:00:41.499 --> 00:00:42.850

these other things that were commented



18

00:00:42.850 --> 00:00:44.050

out were things that we've commented out



19

00:00:44.050 --> 00:00:46.030

previously in case somebody where



20

00:00:46.030 --> 00:00:47.530

they're still sitting there and



21

00:00:47.530 --> 00:00:50.469

commented out okay let's just run the



22

00:00:50.469 --> 00:00:59.530

program to make sure that it works okay



23

00:00:59.530 --> 00:01:00.609

let's say that we've got our code



24

00:01:00.609 --> 00:01:02.260

working again everything's working



25

00:01:02.260 --> 00:01:05.110

nicely so getting back to the problem at hand



26

00:01:05.110 --> 00:01:07.600

why isn't it a good idea for our main



27

00:01:07.600 --> 00:01:09.690

function to a dilute to Tim's imagery in



28

00:01:09.690 --> 00:01:13.450

this fashion that it's doing here well



29

00:01:13.450 --> 00:01:14.590

there's a couple of reasons why it's not



30

00:01:14.590 --> 00:01:15.370

a good idea



31

00:01:15.370 --> 00:01:18.250

one reason is that main shouldn't have



32

00:01:18.250 --> 00:01:19.780

to know that the players are using an



33

00:01:19.780 --> 00:01:22.330

ArrayList to store the loot so looking



34

00:01:22.330 --> 00:01:24.730

at our player class we've declared



35

00:01:24.730 --> 00:01:27.850

inventory to be an ArrayList now we may



36

00:01:27.850 --> 00:01:29.650

decide to change that in the future to



37

00:01:29.650 --> 00:01:32.140

use some other kind of structure now if



38

00:01:32.140 --> 00:01:34.510

we do that we might break the code in



39

00:01:34.510 --> 00:01:37.360

main our main function is expecting an



40

00:01:37.360 --> 00:01:40.060

ArrayList with an add method that it can



41

00:01:40.060 --> 00:01:42.220

use if we use something else maybe a



42

00:01:42.220 --> 00:01:43.510

structure that has an append function



43

00:01:43.510 --> 00:01:45.820

instead of add then the code in main



44

00:01:45.820 --> 00:01:47.980

will stop working now what are the



45

00:01:47.980 --> 00:01:49.450

principles of object-oriented



46

00:01:49.450 --> 00:01:52.630

programming is encapsulation so



47

00:01:52.630 --> 00:01:54.700

capsulation here basically means not



48

00:01:54.700 --> 00:01:57.280

exposing the inner workings of a class



49

00:01:57.280 --> 00:02:00.520

to code outside of that class now



50

00:02:00.520 --> 00:02:02.440

Cortland takes a more relaxed attitude



51

00:02:02.440 --> 00:02:04.330

or approach to encapsulating class



52

00:02:04.330 --> 00:02:06.670

properties everything's public by



53

00:02:06.670 --> 00:02:08.649

default now that's where the main



54

00:02:08.649 --> 00:02:11.560

function can directly access inventory



55

00:02:11.560 --> 00:02:13.540

now if we want to encapsulate our



56

00:02:13.540 --> 00:02:16.870

inventory we can mark it as private so



57

00:02:16.870 --> 00:02:18.160

come up here to the deck



58

00:02:18.160 --> 00:02:21.030

additional online seven and top private



59

00:02:21.030 --> 00:02:24.130

ahead of the available tree and now



60

00:02:24.130 --> 00:02:26.620

nothing outside of the player class can



61

00:02:26.620 --> 00:02:29.410

access the inventory now by default



62

00:02:29.410 --> 00:02:31.090

continent makes properties and functions



63

00:02:31.090 --> 00:02:32.740

public which means that they're



64

00:02:32.740 --> 00:02:35.800

available to external code anything that



65

00:02:35.800 --> 00:02:37.780

creates an instance of our player class



66

00:02:37.780 --> 00:02:39.970

for example could access all its



67

00:02:39.970 --> 00:02:42.460

properties and functions now you can



68

00:02:42.460 --> 00:02:44.260

find the documentation of visibility



69

00:02:44.260 --> 00:02:46.780

modifiers in Kotlin and it just kind of



70

00:02:46.780 --> 00:02:48.700

put the link bring the blink up into a



71

00:02:48.700 --> 00:02:58.370

browser have a quick look at that



72

00:02:58.370 --> 00:02:59.360

now I'm not actually going to go through



73

00:02:59.360 --> 00:03:01.610

this document it can be quite confusing



74

00:03:01.610 --> 00:03:04.250

at the moment but it's worth bookmarking



75

00:03:04.250 --> 00:03:06.410

this page for reference later when you



76

00:03:06.410 --> 00:03:08.060

find some code that uses the internal



77

00:03:08.060 --> 00:03:10.220

modifier for example you can check back



78

00:03:10.220 --> 00:03:12.349

here to find out what that means



79

00:03:12.349 --> 00:03:14.330

so it's crawling that quickly we'll get



80

00:03:14.330 --> 00:03:17.230

to the classes and interfaces section



81

00:03:17.230 --> 00:03:19.340

you see there's a description of the



82

00:03:19.340 --> 00:03:23.540

private modifier up here it's visible it



83

00:03:23.540 --> 00:03:25.810

means visible inside the class only



84

00:03:25.810 --> 00:03:29.660

including all its members so by marking



85

00:03:29.660 --> 00:03:32.360

the inventory property is private it's



86

00:03:32.360 --> 00:03:34.700

now no longer available to any code



87

00:03:34.700 --> 00:03:37.370

outside of the player class now of



88

00:03:37.370 --> 00:03:38.660

course that should mean that we've now



89

00:03:38.660 --> 00:03:40.910

broken bone so if I switch back to that



90

00:03:40.910 --> 00:03:45.890

now you can see we've got some errors



91

00:03:45.890 --> 00:03:48.890

showing so every time main tries to



92

00:03:48.890 --> 00:03:51.860

access a plays inventory Android studio



93

00:03:51.860 --> 00:03:54.230

is showing an error now that's not good



94

00:03:54.230 --> 00:03:56.569

but it's ok to get errors while you're



95

00:03:56.569 --> 00:03:58.370

still developing your classes that's



96

00:03:58.370 --> 00:04:00.410

normal as you try things out and modify



97

00:04:00.410 --> 00:04:02.569

your design what's not good though is



98

00:04:02.569 --> 00:04:04.670

modifying a class once it's been used



99

00:04:04.670 --> 00:04:06.739

and breaking all the code that uses it



100

00:04:06.739 --> 00:04:08.239

so that's one of the things we're trying



101

00:04:08.239 --> 00:04:11.600

to avoid here now if we don't want made



102

00:04:11.600 --> 00:04:13.639

or any other client code of our player



103

00:04:13.639 --> 00:04:15.709

class to access the inventory directly



104

00:04:15.709 --> 00:04:17.810

and we need to provide a method for



105

00:04:17.810 --> 00:04:19.970

clients to call when they need to add



106

00:04:19.970 --> 00:04:22.250

things to the inventory so I'm going to



107

00:04:22.250 --> 00:04:24.979

call that little function get loot and



108

00:04:24.979 --> 00:04:27.830

that reflects what's happening when



109

00:04:27.830 --> 00:04:30.289

loots added to a player's inventory so



110

00:04:30.289 --> 00:04:32.780

let's go ahead and do that back to the



111

00:04:32.780 --> 00:04:34.580

player class we're going to add that



112

00:04:34.580 --> 00:04:38.240

below the two string function and again



113

00:04:38.240 --> 00:04:39.590

what we're doing is we're creating a



114

00:04:39.590 --> 00:04:41.720

function for clients to call when they



115

00:04:41.720 --> 00:04:43.910

need to add things to the inventory and



116

00:04:43.910 --> 00:04:48.280

we'll start with fun space kept loot



117

00:04:48.280 --> 00:04:56.010

parentheses item call and loot



118

00:04:56.010 --> 00:04:57.870

it's mr. white curly braces it's gonna



119

00:04:57.870 --> 00:05:03.480

be inventory dot add item so now that



120

00:05:03.480 --> 00:05:04.710

we've done that we can go back to our



121

00:05:04.710 --> 00:05:07.860

main and we can change money to use the



122

00:05:07.860 --> 00:05:10.350

get loot function instead of accessing



123

00:05:10.350 --> 00:05:12.780

the inventory directly so to do that we



124

00:05:12.780 --> 00:05:16.020

type our we select it you type Tim dot



125

00:05:16.020 --> 00:05:29.220

get to loot those two changes there and



126

00:05:29.220 --> 00:05:30.690

then for the second one do something



127

00:05:30.690 --> 00:05:48.030

similar and loot get loot right there



128

00:05:48.030 --> 00:05:49.410

are parentheses there to keep everything



129

00:05:49.410 --> 00:05:52.410

consistent and working okay we've now



130

00:05:52.410 --> 00:05:56.010

changed it so that the main functions no



131

00:05:56.010 --> 00:05:57.810

longer accessing inventory directly



132

00:05:57.810 --> 00:06:00.630

rather it's doing it via the get loot



133

00:06:00.630 --> 00:06:02.940

function let's just run the program to



134

00:06:02.940 --> 00:06:11.320

make sure everything works as it did before



135

00:06:11.320 --> 00:06:13.340

and you can see we've still got the same



136

00:06:13.340 --> 00:06:15.860

results when we runner but now though



137

00:06:15.860 --> 00:06:17.870

Maine doesn't know how the player



138

00:06:17.870 --> 00:06:20.360

classes during the lute so it can call



139

00:06:20.360 --> 00:06:22.880

they get lute function passing in a



140

00:06:22.880 --> 00:06:24.470

piece of loot and leave the details of



141

00:06:24.470 --> 00:06:27.710

how to store it to the player class so



142

00:06:27.710 --> 00:06:29.720

our inventory is now encapsulated and



143

00:06:29.720 --> 00:06:32.870

isn't available to any code outside of



144

00:06:32.870 --> 00:06:35.720

the player class now another reason for



145

00:06:35.720 --> 00:06:38.330

encapsulating data like this is so let's



146

00:06:38.330 --> 00:06:39.800

say we want to store the inventory to



147

00:06:39.800 --> 00:06:42.620

disk whenever it changes that way when I



148

00:06:42.620 --> 00:06:44.720

come to play the game again my inventory



149

00:06:44.720 --> 00:06:46.880

can be loaded back up and I'll still



150

00:06:46.880 --> 00:06:48.650

have all my loot now before we



151

00:06:48.650 --> 00:06:51.020

encapsulate of the inventory we'd have



152

00:06:51.020 --> 00:06:53.000

to add code to store it each time we



153

00:06:53.000 --> 00:06:55.460

added new loot now that's something that



154

00:06:55.460 --> 00:06:57.289

we could forget to do which wouldn't



155

00:06:57.289 --> 00:06:59.510

make our players very happy so we could



156

00:06:59.510 --> 00:07:01.099

introduce a bug into our code quite



157

00:07:01.099 --> 00:07:03.650

easily but now though we just need to



158

00:07:03.650 --> 00:07:05.900

add the code to save Limu tree in the



159

00:07:05.900 --> 00:07:09.380

get loot function in other words to go



160

00:07:09.380 --> 00:07:13.780

back down to the player class and here



161

00:07:13.780 --> 00:07:20.060

go to save even tree so here they're not



162

00:07:20.060 --> 00:07:21.440

going to add the code to store the



163

00:07:21.440 --> 00:07:23.360

inventory but you can see how we only



164

00:07:23.360 --> 00:07:25.490

have to put this code in a single place



165

00:07:25.490 --> 00:07:27.830

now whenever a new piece of loot gets



166

00:07:27.830 --> 00:07:30.470

added the inventory could be saved to



167

00:07:30.470 --> 00:07:32.690

disk and it always be up-to-date and



168

00:07:32.690 --> 00:07:34.760

there's no chance of us forgetting to



169

00:07:34.760 --> 00:07:37.250

save it in Maine so that's another



170

00:07:37.250 --> 00:07:38.930

reason why our previous approach wasn't



171

00:07:38.930 --> 00:07:42.229

a good idea okay so if we go to prevent



172

00:07:42.229 --> 00:07:43.699

external code from accessing the



173

00:07:43.699 --> 00:07:46.039

inventory we should also provide a way



174

00:07:46.039 --> 00:07:48.380

to remove items from our loot so let's



175

00:07:48.380 --> 00:07:49.820

go ahead and write another function here



176

00:07:49.820 --> 00:07:52.330

I'm going to call this one drop loot



177

00:07:52.330 --> 00:07:54.770

it's slightly more complex in get loot



178

00:07:54.770 --> 00:07:56.570

because we need to make sure that we've



179

00:07:56.570 --> 00:07:58.610

got the item before trying to drop it so



180

00:07:58.610 --> 00:08:00.400

let's start with the definition



181

00:08:00.400 --> 00:08:06.440

I'm droplet parenthesis item :



182

00:08:06.440 --> 00:08:11.750

loot : brilliant then we're there code



183

00:08:11.750 --> 00:08:16.850

block then credit in return if



184

00:08:16.850 --> 00:08:24.110

inventory dot contains item close-up



185

00:08:24.110 --> 00:08:26.050

fruit the season another code block



186

00:08:26.050 --> 00:08:35.330

inventory dot remove item true



187

00:08:35.330 --> 00:08:44.240

the next line else false so I've used if



188

00:08:44.240 --> 00:08:46.370

as an expression there which we covered



189

00:08:46.370 --> 00:08:49.220

earlier in this tutorial section now if



190

00:08:49.220 --> 00:08:50.900

the item of elude exists in the



191

00:08:50.900 --> 00:08:53.680

inventory we remove it and return true



192

00:08:53.680 --> 00:08:56.300

now if it didn't exist we'll return



193

00:08:56.300 --> 00:08:58.490

false so that's letting the calling code



194

00:08:58.490 --> 00:09:00.110

know that if the item was successfully



195

00:09:00.110 --> 00:09:03.050

removed or not so let's see how that



196

00:09:03.050 --> 00:09:05.260

works in Maine we're going to lay new



197

00:09:05.260 --> 00:09:07.850

route down to the end here after the



198

00:09:07.850 --> 00:09:11.660

last show inventory let's try and drop



199

00:09:11.660 --> 00:09:14.080

the red potion so your foot if



200

00:09:14.080 --> 00:09:18.980

parentheses Tim dot drop loot it's going



201

00:09:18.980 --> 00:09:24.650

to be red potion in a code block Tim dot



202

00:09:24.650 --> 00:09:28.220

show inventory so let's run the program



203

00:09:28.220 --> 00:09:30.290

and we should find that the red persons



204

00:09:30.290 --> 00:09:39.690

were moved from the inventory



205

00:09:39.690 --> 00:09:41.620

they can see we've got our first



206

00:09:41.620 --> 00:09:43.120

printout of Tim's inventory the red



207

00:09:43.120 --> 00:09:44.920

patient was there then after the call to



208

00:09:44.920 --> 00:09:48.250

the drop loot the second time in the



209

00:09:48.250 --> 00:09:50.680

second block of code here second block



210

00:09:50.680 --> 00:09:53.290

about put the red potion is no longer



211

00:09:53.290 --> 00:09:56.529

there now we should also test what



212

00:09:56.529 --> 00:09:58.750

happens if an item can't be removed so



213

00:09:58.750 --> 00:10:00.010

I'm going to create a new piece of loot



214

00:10:00.010 --> 00:10:01.570

and try to remove it from Tim's



215

00:10:01.570 --> 00:10:04.120

inventory let's go ahead and do that and



216

00:10:04.120 --> 00:10:07.600

let's also change this to put an else in



217

00:10:07.600 --> 00:10:12.269

here else code block and it'll be



218

00:10:12.269 --> 00:10:21.160

Fruitland you don't have a dollar sign



219

00:10:21.160 --> 00:10:24.100

let's write clear braces good person



220

00:10:24.100 --> 00:10:27.190

don't know so pretty something else is



221

00:10:27.190 --> 00:10:29.050

not there but let's go ahead and create



222

00:10:29.050 --> 00:10:31.829

this other item as I mentioned the Val



223

00:10:31.829 --> 00:10:36.699

blue potion is equal to loot



224

00:10:36.699 --> 00:10:40.199

print the seas double quote blue potion



225

00:10:40.199 --> 00:10:43.390

ending double quote glute tight top



226

00:10:43.390 --> 00:10:49.839

potion and we'll say the bellies six I'm



227

00:10:49.839 --> 00:10:51.550

gonna try during a drop even though we



228

00:10:51.550 --> 00:10:53.010

haven't got it in the inventory so if



229

00:10:53.010 --> 00:11:00.370

Tim dot drop loot blue potion team got



230

00:11:00.370 --> 00:11:05.620

so inventory else a codebook again is



231

00:11:05.620 --> 00:11:13.660

gonna be print loan you don't have pulse



232

00:11:13.660 --> 00:11:22.630

on that's right curly braces blue potion dot okay



233

00:11:22.630 --> 00:11:32.990

alright so let's try reading that I want



234

00:11:32.990 --> 00:11:34.010

I should probably do to avoid some



235

00:11:34.010 --> 00:11:35.510

confusion to just delete that last line



236

00:11:35.510 --> 00:11:43.870

there so let's just try running it again



237

00:11:43.870 --> 00:11:45.829

you can see this time we've got the



238

00:11:45.829 --> 00:11:48.620

message you don't have blue potion so



239

00:11:48.620 --> 00:11:50.389

that's working well our players can now



240

00:11:50.389 --> 00:11:52.730

pick up loot and drop it again but what



241

00:11:52.730 --> 00:11:54.050

about something like the invisibility



242

00:11:54.050 --> 00:11:56.269

potion though you can see that the way



243

00:11:56.269 --> 00:11:57.889

we've defined it we haven't actually got



244

00:11:57.889 --> 00:12:00.170

a reference to it in Maine so we can't



245

00:12:00.170 --> 00:12:03.019

call the droplet function to drop it so



246

00:12:03.019 --> 00:12:03.949

the problem is that we probably



247

00:12:03.949 --> 00:12:05.660

shouldn't have called get loot the way



248

00:12:05.660 --> 00:12:07.670

we did for the ring of protection and



249

00:12:07.670 --> 00:12:11.089

visibility potion on lines 41 and 42



250

00:12:11.089 --> 00:12:13.310

here so this is what I meant earlier



251

00:12:13.310 --> 00:12:15.860

when I said that we need to consider who



252

00:12:15.860 --> 00:12:18.290

should own the objects you know both



253

00:12:18.290 --> 00:12:19.790

those objects really belonged to the



254

00:12:19.790 --> 00:12:21.769

game we should really have created



255

00:12:21.769 --> 00:12:24.170

variables to hold a reference to them in



256

00:12:24.170 --> 00:12:26.899

Maine so that so we've got a way to drop



257

00:12:26.899 --> 00:12:28.970

them the way we've got our code



258

00:12:28.970 --> 00:12:31.279

currently there's no way to reference it



259

00:12:31.279 --> 00:12:33.320

there's no reference to either of those



260

00:12:33.320 --> 00:12:35.570

bits of loot so we've got no way to get



261

00:12:35.570 --> 00:12:38.000

team to drop them now that's the sort of



262

00:12:38.000 --> 00:12:39.320

thing you need to be aware of when



263

00:12:39.320 --> 00:12:41.660

designing your programs after coding for



264

00:12:41.660 --> 00:12:43.399

a while you'll make the correct decision



265

00:12:43.399 --> 00:12:45.920

first time most of the time now you



266

00:12:45.920 --> 00:12:47.839

still make mistakes occasionally of



267

00:12:47.839 --> 00:12:49.880

course just like I did there with those



268

00:12:49.880 --> 00:12:50.480

two items



269

00:12:50.480 --> 00:12:51.980

let's find it's all part of the learning



270

00:12:51.980 --> 00:12:54.680

process but of course in a real game



271

00:12:54.680 --> 00:12:57.440

would probably give the players a way to



272

00:12:57.440 --> 00:12:59.510

go through their inventory and choose



273

00:12:59.510 --> 00:13:01.880

items to drop so in that case we



274

00:13:01.880 --> 00:13:03.769

wouldn't have this problem so when our



275

00:13:03.769 --> 00:13:05.240

code mains in charge of controlling



276

00:13:05.240 --> 00:13:08.329

everything the way to fix this then is



277

00:13:08.329 --> 00:13:10.370

to change main, so that we've got



278

00:13:10.370 --> 00:13:12.230

references to the ring and the potion



279

00:13:12.230 --> 00:13:13.910

but I'm not going to do that because



280

00:13:13.910 --> 00:13:15.589

this gives us a good excuse to look at



281

00:13:15.589 --> 00:13:17.600

overloading a function and we'll do that



282

00:13:17.600 --> 00:13:20.470

in the next video.



