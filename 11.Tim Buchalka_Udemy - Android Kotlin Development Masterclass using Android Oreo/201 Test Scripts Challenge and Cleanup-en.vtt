WEBVTT
1

00:00:05.290 --> 00:00:05.760

All right.



2

00:00:05.760 --> 00:00:09.070

So in this video I want to talk a bit about tests.



3

00:00:09.210 --> 00:00:14.320

Now we've tested the app and the various scenarios in previous videos in the section of the course.



4

00:00:14.550 --> 00:00:17.480

But there are a few more tests we should run.



5

00:00:17.820 --> 00:00:23.690

It's a good idea to create a test script to make sure that you cover all the possible situations.



6

00:00:23.700 --> 00:00:28.680

Now the script itself doesn't have to be very complicated but it should include the starting condition



7

00:00:29.070 --> 00:00:35.310

as well as the expected outcome for testing that we've got the permissions worked correctly as script



8

00:00:35.540 --> 00:00:37.830

looks something like the following.



9

00:00:37.830 --> 00:00:42.480

So we can say we've got various tests that start to go through just the first one we've got starting



10

00:00:42.480 --> 00:00:44.490

condition not installed.



11

00:00:44.490 --> 00:00:48.900

We've got various actions they can say we can run the app into the right hand side we've got the expected



12

00:00:48.900 --> 00:00:51.330

outcome for that first test.



13

00:00:51.510 --> 00:00:55.810

The expected outcome is the permissions dogs appears when they are not installed.



14

00:00:56.040 --> 00:00:58.590

And so when going through the list is basically.



15

00:00:58.860 --> 00:01:00.260

Quite a few tests there.



16

00:01:00.510 --> 00:01:05.650

And this script at the moment doesn't test allowing access when the EP is first run.



17

00:01:05.760 --> 00:01:08.310

So that should probably also be included.



18

00:01:08.340 --> 00:01:14.190

In addition it doesn't include testing on an Android version prior to IPR 23.



19

00:01:14.220 --> 00:01:19.800

So going to give you a challenge here and the challenge is to add these two Tests to the script then



20

00:01:19.800 --> 00:01:22.230

run them to make sure that everything works.



21

00:01:22.230 --> 00:01:28.020

Now when I say script I'm just talking about a set of scripts that you would write down on a piece of



22

00:01:28.020 --> 00:01:28.370

paper.



23

00:01:28.370 --> 00:01:32.770

So basically just jot down what you think the extra two tests should be here.



24

00:01:33.090 --> 00:01:36.940

And in addition to that there's also another test that we haven't included.



25

00:01:37.080 --> 00:01:38.750

So have a think about that as well.



26

00:01:38.760 --> 00:01:40.980

What that is and add that to the script.



27

00:01:40.980 --> 00:01:42.630

In other words jot that down as well.



28

00:01:42.690 --> 00:01:44.430

So have a think about those tests.



29

00:01:44.430 --> 00:01:47.760

Post the video now and I'll see you when you get back.



30

00:01:47.760 --> 00:01:48.810

Post the video now.



31

00:01:50.590 --> 00:01:50.860

OK.



32

00:01:50.860 --> 00:01:52.020

So welcome back.



33

00:01:52.090 --> 00:01:57.660

So let's talk now about what we missed out in that previous set of scripts.



34

00:01:57.700 --> 00:02:02.340

So firstly the items you can see read that the additional tests.



35

00:02:02.340 --> 00:02:07.960

So you want to make sure that the apps to behave correctly after the user revokes permissions that are



36

00:02:07.960 --> 00:02:09.800

previously being granted.



37

00:02:10.270 --> 00:02:14.290

And obviously that the other tests that you talked about was where the app was not installed at the



38

00:02:14.290 --> 00:02:14.910

top.



39

00:02:14.950 --> 00:02:17.560

We run the app permissions dialog should appear and so on.



40

00:02:17.630 --> 00:02:25.240

Then also the photo script or final test was if the app is not installed running a version of For Android



41

00:02:25.240 --> 00:02:30.500

prototype to are 23 and the very steps they had to make sure that's tested as well.



42

00:02:30.590 --> 00:02:32.390

Senate side could have done that.



43

00:02:32.390 --> 00:02:38.190

So that's actually swing back to into a studio and have a final look at the code before we leave permissions



44

00:02:38.200 --> 00:02:40.200

and get back to databases.



45

00:02:41.050 --> 00:02:47.050

So the first thing that I can help change now that we've removed the right context granted field is



46

00:02:47.050 --> 00:02:48.370

in the uncreate method.



47

00:02:48.370 --> 00:02:56.760

So let's just go up to that say that you now the condition there has an if and else part I'm talking



48

00:02:56.760 --> 00:02:58.910

about is carried here on screen.



49

00:02:59.280 --> 00:03:02.720

But the only thing we're doing is the condition is true now is logging.



50

00:03:02.900 --> 00:03:07.530

Now obviously previously you were using that Takagi to assign the value of true to our right granted



51

00:03:07.530 --> 00:03:08.190

field.



52

00:03:08.190 --> 00:03:14.160

But we've commented that out now it is useful to log the fact that we're requesting permission but it's



53

00:03:14.160 --> 00:03:17.730

not really necessary to look at the permission was already granted.



54

00:03:17.790 --> 00:03:21.800

Now with the requesting permission entry doesn't appear in the lockout.



55

00:03:22.080 --> 00:03:24.990

So consequently we can simplify this bit of code.



56

00:03:24.990 --> 00:03:30.620

So what I'm going to do is comment out the existing code and put a simplified version above that and



57

00:03:30.720 --> 00:03:36.830

probably the quickest way to do that is just to take a copy of that code.



58

00:03:37.170 --> 00:03:41.250

We're going to comment that out when we come down here and post it again.



59

00:03:41.340 --> 00:03:43.930

We're just going to change this rant a little bit.



60

00:03:43.970 --> 00:03:49.950

So first you've got a test for if has read Comtek permission is equal to commission granted but we've



61

00:03:49.950 --> 00:03:54.090

already decided that we don't really want to execute this code so I'm going to delete those two lines



62

00:03:54.090 --> 00:03:59.060

of code as well as the else and then we're going to pop up here.



63

00:03:59.070 --> 00:04:02.840

Two words not equal to and set that to not equal two.



64

00:04:03.420 --> 00:04:07.950

So essentially now we're only going to be logging the fact that we're requesting permission and then



65

00:04:07.950 --> 00:04:13.440

actually going through the process of using the Capet version of request permissions to actually request



66

00:04:13.500 --> 00:04:14.410

permission.



67

00:04:14.820 --> 00:04:21.510

That's obviously simplified that make that a lot easier to maintain the STEPNELL but one the next thing



68

00:04:21.520 --> 00:04:27.540

though is in the on request permissions result method now for them to have a look at that you might



69

00:04:27.540 --> 00:04:32.940

find changes in a previous video that we've done that really the only thing going on here in this function



70

00:04:33.420 --> 00:04:36.560

is that we're logging we're not doing anything else other than logging.



71

00:04:36.600 --> 00:04:42.090

Now this particular Colback function can be very useful and we've used it earlier to decide with the



72

00:04:42.090 --> 00:04:45.810

fighting action button if we didn't have access to the context.



73

00:04:45.990 --> 00:04:48.190

So you still want to use it sometimes.



74

00:04:48.300 --> 00:04:53.910

But here specifically we don't need to use it as you create more complex apps that might have secondary



75

00:04:53.910 --> 00:04:55.080

functionality.



76

00:04:55.080 --> 00:05:00.330

You may well find uses for the on request permission result function and now you do know how to use



77

00:05:00.330 --> 00:05:00.450

it.



78

00:05:00.450 --> 00:05:05.610

If you do actually need that one thing you might want to do in here is perhaps provide a more descriptive



79

00:05:05.610 --> 00:05:11.460

dialog explaining why the app needed a permission that's been denied and explaining what the app won't



80

00:05:11.460 --> 00:05:13.560

be able to do without access.



81

00:05:13.560 --> 00:05:18.810

In other words without that permission being enabled often though we're not really interested in knowing



82

00:05:18.810 --> 00:05:20.780

if permission was granted or not.



83

00:05:20.790 --> 00:05:23.390

You wrote the code to cope with both conditions.



84

00:05:23.490 --> 00:05:29.160

So there's really no point creating the on request permissions result function just for the sake of



85

00:05:29.160 --> 00:05:29.450

it.



86

00:05:29.580 --> 00:05:32.510

So for that reason I'm going to comment out the entire function



87

00:05:38.180 --> 00:05:38.990

luxo.



88

00:05:39.430 --> 00:05:44.340

All right so that's the end of the discussion on the permissions model introduced in Antwoord marshmallow.



89

00:05:44.360 --> 00:05:46.000

And we've covered quite a bit here.



90

00:05:46.240 --> 00:05:51.030

Now hopefully when you read through the documentation or just get back to crime.



91

00:05:51.050 --> 00:05:55.310

So basically this link hopefully when you go through this now it will make a lot more sense.



92

00:05:55.310 --> 00:05:56.750

Now you've seen it in action.



93

00:05:56.900 --> 00:06:02.540

The new system is very flexible at least for the users and doesn't really create a lot of extra work



94

00:06:02.540 --> 00:06:04.490

for us as developers.



95

00:06:04.490 --> 00:06:09.480

Most of the time you probably just copy the code for this app or from the Google documentation and you



96

00:06:09.480 --> 00:06:11.750

slightly modified versions of that.



97

00:06:11.900 --> 00:06:17.630

And if you do want to use something or do something a bit more complex you should have all you need



98

00:06:17.630 --> 00:06:21.380

to be able to do so at least from a permissions point of view.



99

00:06:21.410 --> 00:06:25.520

I haven't covered have a shared dogs yet but we'll be doing that in light of video.



100

00:06:25.610 --> 00:06:33.170

For now though on with databases so far in this section we've looked at databases and so had to perform



101

00:06:33.170 --> 00:06:38.040

basic database operations using the sequel language and the sequel a lot.



102

00:06:38.060 --> 00:06:44.360

We then experimented with content providers and we saw how they used to provide shared access to a data



103

00:06:44.360 --> 00:06:45.130

source.



104

00:06:45.350 --> 00:06:49.810

And we also used cursors to loop through the data from a data source.



105

00:06:49.820 --> 00:06:55.220

So with that done in the next section we're going to create a full app that uses a sequel like database



106

00:06:55.710 --> 00:06:58.520

we can access the data for our content provider.



107

00:06:58.670 --> 00:07:04.900

So I will be seeing how to create and register our own content provider to allow the data to be shared.



108

00:07:04.910 --> 00:07:08.510

So let's see in the video here and move on to the next section and get started.



