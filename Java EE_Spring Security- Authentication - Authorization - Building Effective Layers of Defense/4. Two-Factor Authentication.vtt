WEBVTT
1
00:00:02.228 --> 00:00:03.139
In the previous section,

2
00:00:03.139 --> 00:00:08.231
we looked at ways of authenticating a user with what the user knows.

3
00:00:08.231 --> 00:00:11.805
An additional layer of protection is something they have.

4
00:00:11.805 --> 00:00:15.267
A common approach is the user's cell phone as

5
00:00:15.267 --> 00:00:17.300
almost everyone has one these days,

6
00:00:17.300 --> 00:00:23.111
either by sending them a one-time password via SMS or a one-time software

7
00:00:23.111 --> 00:00:27.519
token generated on an application installed on their phone,

8
00:00:27.519 --> 00:00:30.021
like the Google Authenticator.

9
00:00:30.021 --> 00:00:34.674
Now Google Authenticator supports either time-based one-time password

10
00:00:34.674 --> 00:00:40.463
algorithm or HMAC-based one-time password algorithm.

11
00:00:40.463 --> 00:00:45.496
Now the way the time-based one works is the server generates a secret key.

12
00:00:45.496 --> 00:00:49.831
That is then provided to the Google Authenticator app on the user's

13
00:00:49.831 --> 00:00:53.622
phone generally using a quick reference code.

14
00:00:53.622 --> 00:00:56.637
The Authenticator app then stores the secret key.

15
00:00:56.637 --> 00:00:58.915
And when authentication is required,

16
00:00:58.915 --> 00:01:03.046
the server and the Authenticator app use the time,

17
00:01:03.046 --> 00:01:08.981
the secret key, and the TOTP algorithm to generate a one- time code.

18
00:01:08.981 --> 00:01:13.160
The server will generate a number of codes from a range of

19
00:01:13.160 --> 00:01:16.769
times around the current time in case the server or the

20
00:01:16.769 --> 00:01:18.894
user's phone is a bit fast or slow.

21
00:01:18.894 --> 00:01:21.731
If the codes match, the user authenticates.

22
00:01:21.731 --> 00:01:25.970
You can implement two-factor authentication in many different flavors.

23
00:01:25.970 --> 00:01:29.630
Banking websites tend to make it mandatory for all users

24
00:01:29.630 --> 00:01:32.394
and require it every time they log in.

25
00:01:32.394 --> 00:01:33.751
For our demo site,

26
00:01:33.751 --> 00:01:41.000
we will give the user the option to enable two-factor authentication using Google Authenticator.

