1
00:00:02,614 --> 00:00:03,092
In summary,

2
00:00:03,092 --> 00:00:06,782
you now know how to use Spring Security to integrate an

3
00:00:06,782 --> 00:00:09,111
identity store with Spring Security,

4
00:00:09,111 --> 00:00:12,976
create a registration page and validate user input,

5
00:00:12,976 --> 00:00:16,911
and force password strength policies as recommended by OWASP,

6
00:00:16,911 --> 00:00:20,455
how to use Spring Security's password encoders to

7
00:00:20,455 --> 00:00:22,774
store and treat hash passwords,

8
00:00:22,774 --> 00:00:26,815
how to effectively use bcrypt and why its preferred for password hashing,

9
00:00:26,815 --> 00:00:30,770
and how to securely store your application's secrets with

10
00:00:30,770 --> 00:00:34,538
Spring Cloud Vault using Vault by HashiCorp.

11
00:00:34,538 --> 00:00:40,578
So a key takeaway here is enforce password strength as recommended by OWASP.

12
00:00:40,578 --> 00:00:44,326
Always store your passwords encoded in a hash,

13
00:00:44,326 --> 00:00:48,649
preferably with an algorithm that scales with your hardware,

14
00:00:48,649 --> 00:00:49,634
like bcrypt.

15
00:00:49,634 --> 00:00:50,950
If you're using bcrypt,

16
00:00:50,950 --> 00:00:54,598
ensure the work factor is appropriate to ensure the

17
00:00:54,598 --> 00:00:59,773
application is still performant, but brute force attacks are less effective.

18
00:00:59,773 --> 00:01:00,050
Generally,

19
00:01:00,050 --> 00:01:05,078
the right balance is around 1 second to perform password matching as

20
00:01:05,078 --> 00:01:07,882
the user probably won't notice the difference.

21
00:01:07,882 --> 00:01:10,641
And finally, centralize your secrets.

22
00:01:10,641 --> 00:01:13,343
Ensure they are encrypted, audited,

23
00:01:13,343 --> 00:01:17,124
and clients can only access the bare minimum of function.

24
00:01:17,124 --> 00:01:18,943
That's it for this module.

25
00:01:18,943 --> 00:01:22,280
I hope you will join me in the next module where we will look

26
00:01:22,280 --> 00:01:32,000
at additional layers of authentication, like two-factor authentication, Spring event handling, and Remember me using Spring Security.

