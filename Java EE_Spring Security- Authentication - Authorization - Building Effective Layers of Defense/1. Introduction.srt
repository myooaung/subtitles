1
00:00:00,000 --> 00:00:03,996
Hi, it's Wojciech Lesniak.

2
00:00:03,996 --> 00:00:07,272
Welcome to this course on Spring Security Authentication and

3
00:00:07,272 --> 00:00:11,580
Authorization - Building Effective Layers of Defense.

4
00:00:11,580 --> 00:00:13,296
Why Spring Security?

5
00:00:13,296 --> 00:00:19,035
Spring Security has been around since 2003, and that's a long time in IT terms.

6
00:00:19,035 --> 00:00:22,421
It's supported by a large open source community who have a

7
00:00:22,421 --> 00:00:26,240
vested interest in ensuring the framework keeps up to date with

8
00:00:26,240 --> 00:00:29,028
the latest security trends and threats.

9
00:00:29,028 --> 00:00:30,942
So why reinvent the wheel?

10
00:00:30,942 --> 00:00:36,370
Spring Security provides authentication and authorization right out of the box.

11
00:00:36,370 --> 00:00:38,191
It's an application layer security framework,

12
00:00:38,191 --> 00:00:42,268
which means you're not tied to a particular web server.

13
00:00:42,268 --> 00:00:43,702
It's loosely coupled.

14
00:00:43,702 --> 00:00:46,051
You can use it in such a way that you can easily

15
00:00:46,051 --> 00:00:48,760
migrate security to another framework.

16
00:00:48,760 --> 00:00:53,962
It's very flexible as no two applications have the same security requirements.

17
00:00:53,962 --> 00:00:57,601
Spring Security allows you to tailor it to your application needs,

18
00:00:57,601 --> 00:00:59,416
and it also, by default,

19
00:00:59,416 --> 00:01:03,201
protects you against some of the common security threats.

20
00:01:03,201 --> 00:01:06,810
It begins protecting your application at the browser by instructing it

21
00:01:06,810 --> 00:01:09,329
to communicate more securely with your application,

22
00:01:09,329 --> 00:01:14,508
at the resource level by protecting your URLs and methods,

23
00:01:14,508 --> 00:01:16,842
as well as your domain objects.

24
00:01:16,842 --> 00:01:19,147
Now when considering a security approach,

25
00:01:19,147 --> 00:01:20,860
you should consider a layered approach.

26
00:01:20,860 --> 00:01:25,808
This is also known as defense in depth or the castle approach.

27
00:01:25,808 --> 00:01:29,774
Just take any defensive structure, like a castle for that matter.

28
00:01:29,774 --> 00:01:33,850
It doesn't only consist of one line of defense, like the outer wall.

29
00:01:33,850 --> 00:01:37,631
There is usually a moat, an inner wall, a keep,

30
00:01:37,631 --> 00:01:41,716
some towers perhaps, and, of course, a dragon.

31
00:01:41,716 --> 00:01:45,217
Well maybe not a dragon, but you get the point.

32
00:01:45,217 --> 00:01:47,565
There are multiple layers of defense.

33
00:01:47,565 --> 00:01:51,439
And if you want to take control of the castle and steal the crowned jewels,

34
00:01:51,439 --> 00:01:53,699
you have to penetrate all the layers.

35
00:01:53,699 --> 00:01:55,832
Penetrating just one layer is self-contained.

36
00:01:55,832 --> 00:01:59,991
Now this is how most modern well applications are secured.

37
00:01:59,991 --> 00:02:03,270
You have your network defenses, like a firewall.

38
00:02:03,270 --> 00:02:08,075
Then there is what you know, login, security questions perhaps.

39
00:02:08,075 --> 00:02:12,124
Then there is what you have, like two-factor authentication on your phone.

40
00:02:12,124 --> 00:02:14,933
And once you get authenticated, there is authorization,

41
00:02:14,933 --> 00:02:17,184
what you can and cannot access.

42
00:02:17,184 --> 00:02:20,426
And then there is hashing, encryption.

43
00:02:20,426 --> 00:02:23,194
So even if the attacker was to gain access to the resource,

44
00:02:23,194 --> 00:02:26,140
it most likely will be useless to them.

45
00:02:26,140 --> 00:02:28,159
Hence, in the subsequent modules,

46
00:02:28,159 --> 00:02:36,000
we will build layers of defense into our demo application using Spring Security and Spring Boot.

