1
00:00:02,154 --> 00:00:04,746
Remember me, or persistent login authentication,

2
00:00:04,746 --> 00:00:08,363
refers to websites being able to remember the

3
00:00:08,363 --> 00:00:10,563
identity of the user between sessions.

4
00:00:10,563 --> 00:00:15,595
In Spring, this is handled by sending an additional cookie to the user's browser,

5
00:00:15,595 --> 00:00:20,178
which is included in all future requests to the server.

6
00:00:20,178 --> 00:00:23,179
Now if the session cookie expires and the remember-me

7
00:00:23,179 --> 00:00:25,674
cookie is present and not expired,

8
00:00:25,674 --> 00:00:29,354
the server will use the details in the remember-me cookie

9
00:00:29,354 --> 00:00:32,943
to re-authenticate a user automatically.

10
00:00:32,943 --> 00:00:38,224
Spring supports two flavors, hash-bashed token and persistent token.

11
00:00:38,224 --> 00:00:40,803
Let's set up the hash-based token.

12
00:00:40,803 --> 00:00:47,285
The cookie for hash-based has the username: expiry time: and md5

13
00:00:47,285 --> 00:00:53,844
of the username: expiry time :password and key.

14
00:00:53,844 --> 00:00:56,874
The username as identifiable in the UserDetailsService,

15
00:00:56,874 --> 00:01:01,353
the password that matches the one retrieved in the UserDetails,

16
00:01:01,353 --> 00:01:02,478
expiry time,

17
00:01:02,478 --> 00:01:08,648
the date and time when the remember-me token expires expressed in milliseconds,

18
00:01:08,648 --> 00:01:14,802
and the key, a private key that prevents modification of the remember-me token.

19
00:01:14,802 --> 00:01:17,670
To set it up, it's very straightforward.

20
00:01:17,670 --> 00:01:21,149
In our Configuration class on the HttpSecurity object,

21
00:01:21,149 --> 00:01:27,946
we simply add the Remember me filter by using the rememberMe builder property.

22
00:01:27,946 --> 00:01:31,576
The Remember me filter requires the

23
00:01:31,576 --> 00:01:34,326
UserDetailsService to retrieve the role password,

24
00:01:34,326 --> 00:01:38,015
which is used in the signature of the cookie.

25
00:01:38,015 --> 00:01:39,260
In the Configuration class,

26
00:01:39,260 --> 00:01:42,824
we can override the UserDetailsService method and

27
00:01:42,824 --> 00:01:45,206
return our custom UserDetailsService,

28
00:01:45,206 --> 00:01:50,465
which we can wire into the Configuration class.

29
00:01:50,465 --> 00:01:54,008
You now need an authenticationSuccessHandler.

30
00:01:54,008 --> 00:01:57,620
You can use the same one as the login because if the user

31
00:01:57,620 --> 00:01:59,223
has two-factor authentication enabled,

32
00:01:59,223 --> 00:02:04,386
we need to prompt them to re-enter their verification code before

33
00:02:04,386 --> 00:02:07,034
authorizing them to access their portfolio.

34
00:02:07,034 --> 00:02:10,518
Now the reason for this is if the remember- me cookie was stolen,

35
00:02:10,518 --> 00:02:14,544
it is just like the password was obtained by the hacker.

36
00:02:14,544 --> 00:02:16,749
You can use the cookie to access the site.

37
00:02:16,749 --> 00:02:21,447
Hence, two-factor authentication would protect the user from that scenario.

38
00:02:21,447 --> 00:02:21,842
Finally,

39
00:02:21,842 --> 00:02:26,759
we add the Remember me checkbox to the login page with the

40
00:02:26,759 --> 00:02:30,942
name Remember me as this will be the property the Remember me

41
00:02:30,942 --> 00:02:33,748
filter will be looking out for.

42
00:02:33,748 --> 00:02:38,652
Okay, now if we log into the site with Remember me selected,

43
00:02:38,652 --> 00:02:46,103
you can see we have two cookies, the session and the remember- me cookie.

44
00:02:46,103 --> 00:02:50,004
If we remove the session cookie and close the tab and

45
00:02:50,004 --> 00:02:51,770
try to access the portfolio page,

46
00:02:51,770 --> 00:02:55,764
you can see we are prompted to re-enter our two-factor

47
00:02:55,764 --> 00:02:57,082
authentication verification code.

48
00:02:57,082 --> 00:03:02,002
However, we are not prompted to login with the password and the pin.

49
00:03:02,002 --> 00:03:05,439
Remember me saved the user from having to retype the username,

50
00:03:05,439 --> 00:03:06,940
password, and pin.

51
00:03:06,940 --> 00:03:09,921
Now a few useful properties of Remember me.

52
00:03:09,921 --> 00:03:12,066
You can set the remember-me cookie name.

53
00:03:12,066 --> 00:03:16,372
By default, it was simply Remember me and also the key.

54
00:03:16,372 --> 00:03:20,345
If you don't provide the key, Spring will autogenerate one,

55
00:03:20,345 --> 00:03:28,000
which means when the application shuts down, all remember-me cookies will be invalidated as the key will be different.

