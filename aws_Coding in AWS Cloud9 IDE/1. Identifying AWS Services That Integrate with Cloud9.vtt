WEBVTT
1
00:00:01.040 --> 00:00:03.930
Since Cloud9 is native to the AWS ecosystem,

2
00:00:03.930 --> 00:00:06.120
a key benefit is that it easily integrates with

3
00:00:06.120 --> 00:00:09.140
other AWS services and solutions.

4
00:00:09.140 --> 00:00:12.120
Let's take a quick look at some of the things within AWS

5
00:00:12.120 --> 00:00:15.460
that work nicely when paired with Cloud9.

6
00:00:15.460 --> 00:00:19.490
There are advantages of using Cloud9 when working with many AWS services.

7
00:00:19.490 --> 00:00:22.070
Let's take a look at some of the key services that integrate

8
00:00:22.070 --> 00:00:26.140
with Cloud9 well. Lightsail is an AWS service that makes it

9
00:00:26.140 --> 00:00:29.470
really easy to deploy applications in the cloud by using

10
00:00:29.470 --> 00:00:31.840
preconfigured software blueprints.

11
00:00:31.840 --> 00:00:36.270
With Lightsail, you can create applications with preconfigured operating systems,

12
00:00:36.270 --> 00:00:39.020
software stacks, or even preconfigured

13
00:00:39.020 --> 00:00:42.240
applications, such as WordPress or Drupal.

14
00:00:42.240 --> 00:00:44.750
Since Lightsail is so easily to configure to use,

15
00:00:44.750 --> 00:00:49.440
I often like to refer to the service as AWS on training wheels.

16
00:00:49.440 --> 00:00:53.510
CodeStar is another service that enables users the ability to create

17
00:00:53.510 --> 00:00:58.470
and deploy entire applications with just a few clicks. With CodeStar,

18
00:00:58.470 --> 00:01:02.290
applications are created with entire continuous delivery tool chains

19
00:01:02.290 --> 00:01:06.210
automatically. You're probably thinking that Lightsail and CodeStar

20
00:01:06.210 --> 00:01:07.590
sound very similar,

21
00:01:07.590 --> 00:01:12.230
but don't worry, I'll make sure to cover the key differences here shortly.

22
00:01:12.230 --> 00:01:17.690
Lambda is AWS's serverless service. With AWS Lambda, users can

23
00:01:17.690 --> 00:01:20.990
write code to be executed on demand without having to worry

24
00:01:20.990 --> 00:01:24.040
about provisioning any infrastructure.

25
00:01:24.040 --> 00:01:25.320
With AWS Lambda,

26
00:01:25.320 --> 00:01:29.020
you can create Lambda functions by simply uploading your code to

27
00:01:29.020 --> 00:01:33.080
AWS and letting it handle everything required to run and scale

28
00:01:33.080 --> 00:01:36.050
your code with high availability.

29
00:01:36.050 --> 00:01:37.210
And lastly,

30
00:01:37.210 --> 00:01:41.680
CodePipeline is an AWS service that provides a graphical interface

31
00:01:41.680 --> 00:01:45.440
for continuous delivery of your software solutions.

32
00:01:45.440 --> 00:01:49.740
With CodePipeline, users can automate the processes for building,

33
00:01:49.740 --> 00:01:54.850
testing, and releasing their applications in the cloud.

34
00:01:54.850 --> 00:01:57.870
Now that we know what these services look like at a high level,

35
00:01:57.870 --> 00:02:01.330
let's take a deeper look at how Cloud9 specifically can be

36
00:02:01.330 --> 00:02:04.940
leveraged to enhance the usage of these key offerings.

37
00:02:04.940 --> 00:02:08.170
However, before we take a deep dive with these services,

38
00:02:08.170 --> 00:02:11.820
I want to know that this list is not fully exhaustive and that

39
00:02:11.820 --> 00:02:15.740
many other AWS services do work well with Cloud9.

40
00:02:15.740 --> 00:02:16.350
However,

41
00:02:16.350 --> 00:02:22.000
these are just a few key ones that I like to pair together when developing solutions in the cloud.

