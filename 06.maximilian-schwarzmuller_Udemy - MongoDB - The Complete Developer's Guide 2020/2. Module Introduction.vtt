WEBVTT
1
00:00:02.270 --> 00:00:09.380
Now with the core basic set, now that you know how you can basically insert data, read data and so on

2
00:00:09.710 --> 00:00:12.870
and that you also saw how you can explore your data,

3
00:00:13.190 --> 00:00:19.930
let's take a step back and start at the basis or the start of any project

4
00:00:20.060 --> 00:00:22.910
and there you'll have to decide how you model your data,

5
00:00:22.910 --> 00:00:30.590
how do you plan to store your data in the database, which relations exist between your data and how should

6
00:00:30.620 --> 00:00:34.310
these relations be reflected in your database?

7
00:00:34.310 --> 00:00:40.610
These are all important questions and these questions will impact how you use mongodb and how you

8
00:00:40.610 --> 00:00:42.470
structure your data there.

9
00:00:42.470 --> 00:00:48.770
Therefore in this module, we'll have a look at document schemas and understand what's up with these

10
00:00:48.770 --> 00:00:56.060
and how you can create documents schemas or define documents schemas and we'll also have a look at the

11
00:00:56.060 --> 00:00:57.750
important data types

12
00:00:57.750 --> 00:01:04.490
mongodb offers to you because data types like texts, numbers but also some advanced types

13
00:01:04.490 --> 00:01:11.840
like dates and so on are of course crucial to enable you to store exactly the data your application

14
00:01:11.840 --> 00:01:18.050
or your use case needs. We'll not stop at these data types in the general document schema though, we'll

15
00:01:18.050 --> 00:01:25.670
also have a look at relations between documents or your data because in most applications, you got

16
00:01:25.670 --> 00:01:31.490
different entities, things like let's say when you're building a blog, you have posts, you have users

17
00:01:31.520 --> 00:01:37.490
you have comments and all these entities are related and these relations need to be reflected in your

18
00:01:37.490 --> 00:01:38.490
database too

19
00:01:38.690 --> 00:01:42.320
and you will see how that works in mongodb in this module too.

20
00:01:42.650 --> 00:01:49.970
And last but not least, having an idea of how your data should look like is nice but you also want to

21
00:01:49.970 --> 00:01:57.860
validate incoming data, so all your inserts and updates, you want to validate whether the data getting

22
00:01:57.860 --> 00:02:00.680
written there fulfills your requirements,

23
00:02:00.680 --> 00:02:07.280
so for example if that age of a user really is a number. And you will learn how you can perform schema

24
00:02:07.280 --> 00:02:09.740
validation in this module too therefore.
