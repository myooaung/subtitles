1
00:00:05,500 --> 00:00:10,620
Welcome to coding interview question number one for this question you're going to be given an array

2
00:00:10,620 --> 00:00:13,170
of integers both positive and negative.

3
00:00:13,170 --> 00:00:14,370
That's a big point here.

4
00:00:14,640 --> 00:00:20,850
And your task is to write a program that can find the largest continuous sum some you just need to return

5
00:00:20,850 --> 00:00:25,770
the total sum amount not the actual sequence of numbers that were part of that sum.

6
00:00:25,770 --> 00:00:30,270
So let me go in and give you a few clarifying examples so you can understand what I mean by the term

7
00:00:30,600 --> 00:00:36,800
largest continuous sum and keep in mind the integers are both positive and negative here.

8
00:00:36,810 --> 00:00:41,540
So let's take a look at this first example given in array 7 8 9 they're all positive.

9
00:00:41,580 --> 00:00:46,140
So if everything in the array is positive it makes sense that the largest continuous sum is going to

10
00:00:46,140 --> 00:00:47,130
be everything in the array.

11
00:00:47,130 --> 00:00:49,330
So you're going to say seven plus eight plus nine.

12
00:00:49,440 --> 00:00:50,710
And that gives you 24.

13
00:00:50,760 --> 00:00:56,370
So all your program has to do is given the array 79 returned the number 24.

14
00:00:56,370 --> 00:00:58,320
Now let's take a look at this second array.

15
00:00:58,320 --> 00:01:03,140
We can see we have two negative numbers on the tail and they're both at the beginning at the end.

16
00:01:03,330 --> 00:01:06,600
So still the largest continuous sum is going to be seventy nine.

17
00:01:06,600 --> 00:01:09,090
We're going to ignore the negative numbers.

18
00:01:09,140 --> 00:01:13,500
And so that's why you're not going be able to just always sum up the array because that negative numbers

19
00:01:13,500 --> 00:01:14,280
could hurt you.

20
00:01:14,280 --> 00:01:17,690
So again the answer here is 24.

21
00:01:17,700 --> 00:01:21,960
Now let's take a look at a little more complicated example here the negative number somewhere in the

22
00:01:21,960 --> 00:01:22,320
middle.

23
00:01:22,320 --> 00:01:27,630
So the largest continuous sum that we can see and what I mean by continuous are numbers basically a

24
00:01:27,630 --> 00:01:29,560
subset of the array in a row.

25
00:01:29,760 --> 00:01:33,990
And it looks like the largest subset of the Saray for the sum is going to be number nine.

26
00:01:33,990 --> 00:01:35,310
Number two put together.

27
00:01:35,370 --> 00:01:36,970
So that gives you 11.

28
00:01:37,080 --> 00:01:41,670
If we ended up including the two in the three we'd have to include the negative 10 and that wouldn't

29
00:01:41,670 --> 00:01:46,470
be worth including And they are the positive two and positive three because negative 10 would basically

30
00:01:46,470 --> 00:01:49,440
cancel them out and also have negative five on top of that.

31
00:01:49,740 --> 00:01:52,140
So third one the answer is 11.

32
00:01:52,200 --> 00:01:53,660
Take a look at this fourth one.

33
00:01:53,790 --> 00:01:55,050
Hopefully by now you get the point.

34
00:01:55,050 --> 00:02:00,600
We can see here that even if we include the negative 10 we can offset it by including the 2 and 11.

35
00:02:00,600 --> 00:02:03,480
So now it actually makes sense to include everything in the array.

36
00:02:03,510 --> 00:02:06,090
We don't have to just stop at negative 10.

37
00:02:06,090 --> 00:02:10,710
So we end up doing is say two plus 11 when a sample size plus two is equal to 14.

38
00:02:10,710 --> 00:02:17,310
So given that fourth rate your output 14 and then for the fifth array you can see here the answer is

39
00:02:17,310 --> 00:02:22,360
actually a single number 12 because it doesn't make sense to add in any other numbers.

40
00:02:22,440 --> 00:02:24,720
And then the other sort of fashion given this array.

41
00:02:25,130 --> 00:02:25,670
OK.

42
00:02:25,920 --> 00:02:27,460
So best of luck on this question.

43
00:02:27,510 --> 00:02:30,870
If you have any questions on it please feel free to post the cuneiform.

44
00:02:30,870 --> 00:02:33,920
So hopefully now you understand what I mean by large continuous sum.

45
00:02:33,930 --> 00:02:38,380
Just what subset of this array will give you the largest sum.

46
00:02:38,520 --> 00:02:39,560
I'll see you at the solutions.

