1

00:00:05,220  -->  00:00:10,320
Hello and welcome back to the course in Python programming and today we're talking about boolean variables

2

00:00:10,350  -->  00:00:11,150
and operators.

3

00:00:11,160  -->  00:00:13,110
So let's dive straight into it.

4

00:00:13,110  -->  00:00:20,040
So I'm going to create in your notebook file in your notebook and this one we're going to call boolean

5

00:00:20,280  -->  00:00:23,390
variables and operators.

6

00:00:23,400  -->  00:00:23,840
All right.

7

00:00:23,880  -->  00:00:28,520
So what are boolean variables or values in Python.

8

00:00:28,800  -->  00:00:33,170
So Boullion are basically logical another word for gillion is logical values.

9

00:00:33,210  -->  00:00:40,770
So we have two values in Python they are true and false and they basically represent answers to certain

10

00:00:40,770  -->  00:00:44,570
questions that you can ask that's like a very simple way of thinking about it.

11

00:00:44,790  -->  00:00:49,680
And let's have a look at a couple of examples So let's say I want to check for is less than five is

12

00:00:49,680  -->  00:00:50,600
for less than five.

13

00:00:50,600  -->  00:00:54,990
Then if I run this line I'll get an answer which is true which is great because four is indeed less

14

00:00:54,990  -->  00:00:55,680
than five.

15

00:00:55,920  -->  00:00:59,490
Let's have a look at 10 and 100 is 10 greater than 100.

16

00:00:59,520  -->  00:01:03,520
If I run that I will get false because indeed 10 is not greater than 100.

17

00:01:03,810  -->  00:01:06,480
And now let's check if four equals to five.

18

00:01:06,510  -->  00:01:07,130
Run that line.

19

00:01:07,170  -->  00:01:10,100
Again we get false because four is not equal to five.

20

00:01:10,110  -->  00:01:13,890
So those are just some examples of boolean operators variables.

21

00:01:13,890  -->  00:01:19,630
So now we're going to have a look at the operators that we can actually use in Python.

22

00:01:19,710  -->  00:01:23,730
So we've really just talked about the equals So that's a double equal sign.

23

00:01:23,730  -->  00:01:29,900
Be careful here because in some languages a single equal sign is a logical operator so to check four

24

00:01:29,910  -->  00:01:33,030
equals five you just put a single equal sign like that.

25

00:01:33,210  -->  00:01:35,820
But in this case it's not the right approach.

26

00:01:35,820  -->  00:01:43,620
In Python has to be double equal sign that is an operator that checks if two values are equal then the

27

00:01:43,620  -->  00:01:48,750
next one is the opposite so the not equal in Python you can approach it in two ways so the summation

28

00:01:48,750  -->  00:01:51,990
Mark equals or you can just type in the brackets.

29

00:01:51,990  -->  00:01:58,020
So less than and then more than and the this operator and this operator are exactly the same.

30

00:01:58,020  -->  00:01:59,460
They are from identical function.

31

00:01:59,460  -->  00:02:03,710
They will check if what is on the left is not equal to what is on the right.

32

00:02:03,750  -->  00:02:10,710
Then we have is less then than we have is greater than Then we have less than or equal to greater than

33

00:02:10,710  -->  00:02:11,520
or equal to.

34

00:02:11,580  -->  00:02:18,460
And then we have and or let me scroll a bit and we have not.

35

00:02:18,570  -->  00:02:23,640
So with these arms also be careful because in programming languages especially if you're coming from

36

00:02:23,730  -->  00:02:28,830
a programming language like are you would have and like that and all like that well in Python they mean

37

00:02:29,040  -->  00:02:29,820
different things.

38

00:02:29,810  -->  00:02:36,240
They're actually bitwise operators so they're not used for logical expressions the correct way of evaluating

39

00:02:36,240  -->  00:02:42,570
logical expressions are creating logical expressions is using the and or and not keywords so be careful

40

00:02:42,570  -->  00:02:43,720
about that.

41

00:02:43,920  -->  00:02:48,810
But otherwise it's very straightforward and we'll have a look at a couple of examples right now.

42

00:02:48,810  -->  00:02:54,880
So let's create another mark so escape and then enter realigns shift center.

43

00:02:54,990  -->  00:02:56,490
That gives a solid delimiter.

44

00:02:56,520  -->  00:02:57,640
And now let's have a look.

45

00:02:57,660  -->  00:03:01,150
Let's say we want to once again check that for is less than five.

46

00:03:01,170  -->  00:03:05,610
But instead of printing out the value now like we did hear what we want to do is we want to store this

47

00:03:05,620  -->  00:03:10,370
value inside a variable so let's say result equals to 4 is less than 5.

48

00:03:10,370  -->  00:03:15,570
So what will happen is this expression is logical expression will be evaluated and then the answer will

49

00:03:15,570  -->  00:03:17,750
be stored inside this variable.

50

00:03:17,760  -->  00:03:19,360
So let's go ahead and run that.

51

00:03:19,770  -->  00:03:23,040
And now if we look good result you'll see that it's true.

52

00:03:23,190  -->  00:03:28,430
If we look at type of results you'll see that it's a rule meaning it's a boolean.

53

00:03:28,430  -->  00:03:29,700
All right that's good.

54

00:03:29,970  -->  00:03:32,000
And let's have a look at another example.

55

00:03:32,220  -->  00:03:38,040
So now we're going to use the not OPERATOR So we're going to say result two equals.

56

00:03:38,040  -->  00:03:41,310
So we want to check if five is greater than 1.

57

00:03:41,370  -->  00:03:46,170
But instead of just looking at the answer of that we want to say the opposite of that so I want to say

58

00:03:46,530  -->  00:03:50,780
not 5 greater than 1 so what will happen is this expression will be evaluated.

59

00:03:50,790  -->  00:03:55,260
And as you can see because five is indeed greater than one the answer will be true.

60

00:03:55,260  -->  00:04:01,680
And then it will be placed inside these brackets for the not operator will be placed here and then the

61

00:04:01,740  -->  00:04:07,180
opposite of that expression or that's logical value will be taken.

62

00:04:07,230  -->  00:04:13,010
So basically because this is true we will have not true which means false so far on this.

63

00:04:13,110  -->  00:04:16,550
And then we look at the result too we'll have false.

64

00:04:16,920  -->  00:04:17,280
OK.

65

00:04:17,280  -->  00:04:20,900
So there we go that's how the not operator works.

66

00:04:20,920  -->  00:04:21,440
All right.

67

00:04:21,450  -->  00:04:27,910
And one more thing that I wanted to show you is how we use that and and or statements.

68

00:04:27,930  -->  00:04:28,920
So let's have a look.

69

00:04:29,070  -->  00:04:30,900
Let's say now we have two variables right.

70

00:04:30,900  -->  00:04:33,640
We can still work with them result and result 2.

71

00:04:33,780  -->  00:04:36,490
So we know that this one is true and this one is false.

72

00:04:36,510  -->  00:04:40,020
So let's see how the and and or operators work.

73

00:04:40,020  -->  00:04:44,000
So if we'll say result or result two.

74

00:04:44,010  -->  00:04:46,110
So basically what this will do is it all check.

75

00:04:46,110  -->  00:04:49,680
Is this one true or is this one true.

76

00:04:49,860  -->  00:04:54,990
And then you'll give us results so at least one of them is true then the result will be true the output

77

00:04:54,990  -->  00:04:56,480
will be true so far on this.

78

00:04:56,530  -->  00:04:58,700
It's true because one of them is indeed true.

79

00:04:58,920  -->  00:05:06,270
But if we say result and result two here both of them have to be true for this statement to be evaluated

80

00:05:06,270  -->  00:05:06,740
as true.

81

00:05:06,740  -->  00:05:09,800
So we'll have you know this one is true but this one is false.

82

00:05:09,840  -->  00:05:17,520
So true and false means what the end means that the answer will be false because once again if the and

83

00:05:17,670  -->  00:05:23,250
this one has to be true and this one has to be true for the whole thing to be true so far and that will

84

00:05:23,250  -->  00:05:24,630
get false.

85

00:05:24,630  -->  00:05:31,820
All right so that is logical expressions logical operators and logical variables and logical values

86

00:05:31,830  -->  00:05:33,440
we looked at all four of those.

87

00:05:33,570  -->  00:05:38,820
As you will see further in the course they will be very handy for us when we are working with things

88

00:05:38,820  -->  00:05:45,540
like loops and if statements Al statements and things like that so they will definitely come in very

89

00:05:45,540  -->  00:05:49,530
handy so have a play around with that and see what other combinations you can create.

90

00:05:49,530  -->  00:05:57,010
What other usage you can find for these different operators and I'll see you in the next tutorial.

91

00:05:57,030  -->  00:05:58,490
Until then I'd be coding
