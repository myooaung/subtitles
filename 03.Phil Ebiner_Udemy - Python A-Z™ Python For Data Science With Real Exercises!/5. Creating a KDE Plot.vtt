WEBVTT
1

00:00:05.310  -->  00:00:10.170
Hello and welcome back to the course and by the programming in today's tutorial we're going to create

2

00:00:10.260  -->  00:00:13.260
a kernel density estimate lot.

3

00:00:13.380  -->  00:00:14.490
It's going to be quite interesting.

4

00:00:14.520  -->  00:00:16.510
Let's dive straight into it.

5

00:00:16.560  -->  00:00:22.650
So how can we visualize audience rating versus Kriti creating what is the first thing that comes to

6

00:00:22.650  -->  00:00:23.030
mind.

7

00:00:23.220  -->  00:00:28.650
Well of course the first thing that comes to mind is a scatterplot and we've already created actually

8

00:00:28.650  -->  00:00:31.840
one of those we created one of them here.

9

00:00:32.190  -->  00:00:35.270
So there we go that's scatterplot through a joint plot.

10

00:00:35.270  -->  00:00:37.320
So it's got those on the left right.

11

00:00:37.320  -->  00:00:40.260
Let's quickly have a look at another method that we've already discussed.

12

00:00:40.350  -->  00:00:52.680
That's using the L.M. plot function so data equals movies X equals Kritik rating y equals audience rating

13

00:00:53.550  -->  00:00:55.560
and Kamaal just put a backslash here.

14

00:00:55.920  -->  00:00:57.450
And what else do we need.

15

00:00:57.450  -->  00:01:02.400
We need to get this Coreg equals full so there's no regression line.

16

00:01:02.550  -->  00:01:04.150
Q equals Giana.

17

00:01:04.290  -->  00:01:10.320
Well let's forget about that for knowledge just run that there's our scatterplot here we gonna say Hue

18

00:01:10.380  -->  00:01:16.150
equals genre and if you're on that there is our scatterplot.

19

00:01:16.200  -->  00:01:23.060
Now we can say with the colors now we can say backslash so we can say XYZ for instance equals seven

20

00:01:23.790  -->  00:01:27.240
and aspect equals 1.

21

00:01:27.240  -->  00:01:30.820
So on that I could take some more space.

22

00:01:31.210  -->  00:01:36.200
And one is a good idea because then the boxes or the squares are actually squares.

23

00:01:36.240  -->  00:01:41.990
So that's one way of creating art and that's a solution to visualizing audience rating versus critical

24

00:01:41.990  -->  00:01:42.810
rating.

25

00:01:42.840  -->  00:01:48.670
Again if this is too large you can always say five here or something less to six.

26

00:01:48.990  -->  00:01:51.780
So we're visualizing audience rating versus critique creating.

27

00:01:52.150  -->  00:01:58.470
But what is another way of visualizing that because in our hands We've got the seaborne library which

28

00:01:58.470  -->  00:02:06.920
is very powerful at creating really complex things as you saw here this chart which isn't that complicated

29

00:02:06.930  -->  00:02:09.550
when you think about it is just Baras plot on top of.

30

00:02:09.710  -->  00:02:12.390
It did take us quite some time to create.

31

00:02:12.600  -->  00:02:18.690
That's something Seaborn is not very good at is very good at creating simple stuff that doesn't come

32

00:02:18.750  -->  00:02:24.860
in it's packages that are not prepackage so Python is not the best solution to creating that.

33

00:02:24.990  -->  00:02:30.870
But at the same time if you've got a very complex chart that you want to create then sometimes seaborne

34

00:02:30.960  -->  00:02:32.880
might have the solution ready for you.

35

00:02:33.150  -->  00:02:37.380
And it's always a good idea therefore to kind of look through the seaborne gallery something we talked

36

00:02:37.380  -->  00:02:43.920
about before and see what they have available there or what other functions they have that might suit

37

00:02:44.160  -->  00:02:50.040
the analysis that you're doing and the function that we're going to talk about this time is the kernel

38

00:02:50.130  -->  00:02:52.380
density estimate Pusat.

39

00:02:52.380  -->  00:02:53.830
All right so let's create one.

40

00:02:53.850  -->  00:02:59.630
And as you'll see just now it'll take us literally a couple of seconds so I'm getting a kiddie Plaut

41

00:02:59.650  -->  00:02:59.720
.

42

00:02:59.730  -->  00:03:01.510
S and is that kiddie plot.

43

00:03:01.510  -->  00:03:08.370
Movies Daut critic rating movies darte audience rating.

44

00:03:08.610  -->  00:03:11.050
And then I'm going to say Baz's do that.

45

00:03:11.070  -->  00:03:12.440
Run that done.

46

00:03:12.540  -->  00:03:14.060
So that took less than a minute.

47

00:03:14.070  -->  00:03:21.150
And this is pretty much the same chart but instead of the dots is actually got the kernel density estimate

48

00:03:21.180  -->  00:03:25.470
and the kernel density estimate you can kind of tell by looking at the chart what it does.

49

00:03:25.500  -->  00:03:31.470
You can always look it up and read more about kernel density estimate to understand the exact definition

50

00:03:31.470  -->  00:03:32.630
or how it's created.

51

00:03:32.670  -->  00:03:39.660
But in essence it's showing you exactly what you expect to show you where the most density is so the

52

00:03:39.660  -->  00:03:42.870
most Dancy's over here as you can see that is correct.

53

00:03:42.900  -->  00:03:44.580
Does look like it's correct on my chart.

54

00:03:44.700  -->  00:03:50.430
And then it shows you how the density is distributed across your chart so you can see as you get a way

55

00:03:50.430  -->  00:03:53.080
further away from the kernel from the center.

56

00:03:53.220  -->  00:03:55.880
That means that density is lower it's fading away.

57

00:03:56.160  -->  00:03:59.430
And there we go so that's our current density estimate.

58

00:03:59.430  -->  00:04:05.860
It allows us to very quickly to see how our data is distributed across these two variables.

59

00:04:05.860  -->  00:04:11.310
It's a very various distribution it allows us to very quickly observe it like that or assess it.

60

00:04:11.490  -->  00:04:17.060
And so we're going to quickly just adjust the kernel density estimates are that looks better.

61

00:04:17.130  -->  00:04:21.280
It's a bit of a heat map or a heat diagram.

62

00:04:21.360  -->  00:04:23.430
So let's have a look at that how we're going to do that.

63

00:04:23.580  -->  00:04:28.500
Well we're going to just simply add some color we're going to say shade equals.

64

00:04:28.560  -->  00:04:29.330
True.

65

00:04:29.370  -->  00:04:30.970
So let's add in your line here.

66

00:04:31.260  -->  00:04:33.210
This is kind of a bit of a preview what's coming.

67

00:04:33.210  -->  00:04:37.950
We're going to be talking about styling at towards the end of this section but this is already something

68

00:04:37.950  -->  00:04:38.400
valuable.

69

00:04:38.400  -->  00:04:40.620
So there you go say shading equals true.

70

00:04:40.980  -->  00:04:45.000
Then if we don't want the shading we still want to see the grid right.

71

00:04:45.000  -->  00:04:50.870
For example if we want to see the grid then we'll just get rid of this last shading of the last letter

72

00:04:50.880  -->  00:05:00.020
so we'll say shaid lowest lowest he calls false so you could shift tab you'll see here shade shade lowest

73

00:05:00.020  -->  00:05:00.130
.

74

00:05:00.150  -->  00:05:05.940
Those are the ones that we're using shade lowest equals false run that you'll see now we still see the

75

00:05:05.940  -->  00:05:12.960
grid and let's change a map so you can say see maps and we'll talk more about the different color palettes

76

00:05:12.960  -->  00:05:17.090
available in seaborne and say see maps equals red.

77

00:05:17.490  -->  00:05:18.060
Get the.

78

00:05:18.070  -->  00:05:24.210
And now we've got a red one and a quick tip and sort also like another preview of what we're going to

79

00:05:24.210  -->  00:05:26.070
have further down in the course.

80

00:05:26.340  -->  00:05:30.930
What I like to do is when I have something that you can see that it's a bit rough on the edges.

81

00:05:30.960  -->  00:05:33.760
Racism see what happens if I zoom out.

82

00:05:33.780  -->  00:05:37.010
It kind of looks a bit better but it's still a bit rough on the edges.

83

00:05:37.050  -->  00:05:44.720
What I like to do kind of a little sneaky trick if I take this one is called B.

84

00:05:44.790  -->  00:05:48.380
What I like to do here is get rid of shades and just leave.

85

00:05:48.410  -->  00:05:49.410
See map equals red.

86

00:05:49.410  -->  00:05:55.980
So if I cancel this out or just comment it out and run that by itself you'll see that we've got the

87

00:05:55.980  -->  00:05:58.740
kernel density estimate but just the outline.

88

00:05:58.770  -->  00:06:04.170
So by running them together what I'm going to have is I'm going to have the shading from this code and

89

00:06:04.170  -->  00:06:06.810
I'm going to have the outline from this code and they're going to be overlaid.

90

00:06:06.840  -->  00:06:08.820
And it's going to look much better.

91

00:06:08.850  -->  00:06:11.260
So there you go so you can see now it's nice and smooth.

92

00:06:11.280  -->  00:06:15.700
It's got those edges around the separate regions.

93

00:06:15.850  -->  00:06:17.410
Looks much better than before.

94

00:06:17.410  -->  00:06:19.980
So just for comparison purposes.

95

00:06:20.190  -->  00:06:23.800
That's without a screen you want here.

96

00:06:23.850  -->  00:06:25.470
So you can see if you compare the two.

97

00:06:25.470  -->  00:06:31.770
This one's got a bit rough here it's nice and smooth and it looks much more professional So the edge

98

00:06:31.830  -->  00:06:37.430
does look like this contoured as opposed to here where it's it's all the same color.

99

00:06:37.440  -->  00:06:40.970
So the feel is the same color as edge.

100

00:06:41.040  -->  00:06:43.260
So there you go you can see them compared they're like.

101

00:06:43.260  -->  00:06:48.290
Personally I prefer this one much more it's looks smoother it looks more professional.

102

00:06:48.300  -->  00:06:48.560
All right.

103

00:06:48.570  -->  00:06:49.410
So there we go.

104

00:06:49.410  -->  00:06:57.580
That's how you create a KDE plots and that's how you also read one that's how you assess your by various

105

00:06:57.580  -->  00:07:03.180
distribution based on the kernel density estimate plot something new something different.

106

00:07:03.180  -->  00:07:10.110
It's not a standard type of chart that you would create in other languages and very frequently it would

107

00:07:10.110  -->  00:07:17.490
be quite complex to create something this sophisticated and yet in seaborne It's literally one line

108

00:07:17.490  -->  00:07:21.960
as you as you recall it took us like less than a minute to create it or something like this took us

109

00:07:21.960  -->  00:07:22.980
much longer.

110

00:07:23.250  -->  00:07:27.870
So there we go that's fascinating phenomenons of Python and the packages.

111

00:07:27.870  -->  00:07:33.170
If you if you use a different package not seaborne than some other charge will be easier to create.

112

00:07:33.180  -->  00:07:39.440
But Sybaris has got some very good looking charts that you can create literally on the fly.

113

00:07:39.780  -->  00:07:40.290
So we go.

114

00:07:40.290  -->  00:07:41.180
Hope you enjoyed this.

115

00:07:41.190  -->  00:07:47.760
Tauriel and a play around with that said try creating kiddie plots for the other numeric variables that

116

00:07:47.760  -->  00:07:50.630
we have it's going to be some good practice as always.

117

00:07:50.700  -->  00:07:53.000
And I'll see you on the next tutorial.

118

00:07:53.070  -->  00:07:57.810
Until then happy coding.
