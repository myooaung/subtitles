1

00:00:04,990  -->  00:00:08,000
Hello and welcome back to the course on Python programming.

2

00:00:08,220  -->  00:00:10,430
I'm super excited about this section.

3

00:00:10,440  -->  00:00:15,990
We've got some very interesting tutorials and some outstanding visualizations coming up and I can't

4

00:00:15,990  -->  00:00:17,250
wait to show you them.

5

00:00:17,280  -->  00:00:21,040
And to walk through them and to learn how to create them together.

6

00:00:21,270  -->  00:00:25,980
But before we do proceed there's one topic that we need to cover off and that is categorical variables

7

00:00:25,980  -->  00:00:26,290
.

8

00:00:26,310  -->  00:00:27,560
It is quite an important topic.

9

00:00:27,630  -->  00:00:32,880
As you'll see we'll be dealing both with Gnumeric daughter and categorical data in this section and

10

00:00:32,880  -->  00:00:39,090
is valuable to get this topic out of the way from the very start so that we're on the same page going

11

00:00:39,090  -->  00:00:39,650
forward.

12

00:00:39,840  -->  00:00:43,020
So that's why we're going to dedicate this tutorial to categorical variables.

13

00:00:43,020  -->  00:00:45,010
And let's dive straight into it.

14

00:00:45,330  -->  00:00:45,710
All right.

15

00:00:45,720  -->  00:00:52,260
First things first we're going to import pandas as PD as usual so that we can load our data set and

16

00:00:52,260  -->  00:00:57,000
we're going to import os so we can change the working directory if we need to.

17

00:00:57,000  -->  00:01:00,560
So now we're going to just quickly check the working directory.

18

00:01:00,750  -->  00:01:06,450
As you can see my working directory is correct that is where I put my data said make sure that you downloaded

19

00:01:06,450  -->  00:01:12,100
the data set and placed it in the working directory where you're working or if you need to then change

20

00:01:12,100  -->  00:01:15,180
the working directory and by now you should know how to do that.

21

00:01:15,180  -->  00:01:20,370
In my case I'm just going to proceed with loading the data set I'm going to create an object called

22

00:01:20,370  -->  00:01:27,970
movies and I'm going to use a read CISC function to read movie ratings dot Yes V.

23

00:01:27,990  -->  00:01:28,530
There we go.

24

00:01:28,530  -->  00:01:35,160
So now if I quickly check from our standard while something is becoming our center check the length

25

00:01:35,160  -->  00:01:38,220
of the file we got 559 rows.

26

00:01:38,440  -->  00:01:39,310
OK great.

27

00:01:39,330  -->  00:01:44,570
And if I look at the top couple of rows I go movies head.

28

00:01:44,820  -->  00:01:48,120
And then you can see here we've got the top five rows.

29

00:01:48,120  -->  00:01:48,930
That's what they look like.

30

00:01:48,930  -->  00:01:54,390
We've got one two three four five six columns films honor roll and tomorrow's ratings.

31

00:01:54,390  -->  00:01:55,970
That's the audience ratings.

32

00:01:56,070  -->  00:01:57,360
Oh that's a critical ratings.

33

00:01:57,360  -->  00:02:02,600
Audience ratings budget in millions of dollars and a year of release.

34

00:02:02,700  -->  00:02:06,580
Now the next thing we would we can always check is a movie.

35

00:02:06,590  -->  00:02:12,870
COLMES Now we can see the columns in this case but it's always a good idea to be in have a habit of

36

00:02:12,870  -->  00:02:18,870
doing these checks so that you don't forget next time you have a larger data set we cancel the columns

37

00:02:18,870  -->  00:02:19,790
for example.

38

00:02:20,080  -->  00:02:20,390
OK.

39

00:02:20,400  -->  00:02:25,800
So and another thing we noticed is that the columns have kind of like weird names as a percentage size

40

00:02:25,800  -->  00:02:31,770
lots of spaces and remember what we talked about previously that spaces can be inconvenient if you want

41

00:02:31,770  -->  00:02:36,090
to access columns through the dot operator rather than using the square brackets.

42

00:02:36,090  -->  00:02:41,100
So what we're going to do is we're going to rename I'll call them saurians and movie columns equals

43

00:02:41,160  -->  00:02:43,460
and here we're going to just parse the list.

44

00:02:43,500  -->  00:02:46,540
So first one is going to be Philonous no change.

45

00:02:46,730  -->  00:02:48,970
And I'll say genre no change again.

46

00:02:48,990  -->  00:02:54,010
And also a critic rating is faster to type than audience.

47

00:02:54,060  -->  00:03:00,240
So just for a long audience rating so that we have the same names and just I'm going to keep the singular

48

00:03:00,300  -->  00:03:02,000
audience rating critic rating.

49

00:03:02,130  -->  00:03:06,570
And then we're going to have budget millions.

50

00:03:06,570  -->  00:03:09,880
What did we say about a new line in.

51

00:03:10,110  -->  00:03:13,130
You don't have to put the backslash in other IDs.

52

00:03:13,220  -->  00:03:14,340
A good idea.

53

00:03:14,340  -->  00:03:17,040
And here you can say you're so far on this line.

54

00:03:17,130  -->  00:03:22,890
And now I look at movie movies that head or read the square forget the brackets.

55

00:03:22,890  -->  00:03:27,990
If we look at that now you can see that it's nice and neat and tidy film janitor degrading audience

56

00:03:27,990  -->  00:03:30,420
rating budget millions a year.

57

00:03:30,510  -->  00:03:30,990
Beautiful.

58

00:03:30,990  -->  00:03:33,530
So that's us preparing our data set.

59

00:03:33,570  -->  00:03:36,160
Let's quickly proceed with the exploration.

60

00:03:36,180  -->  00:03:43,260
So what we've learned to really to explore data said we're going to say movies dot info get some information

61

00:03:43,830  -->  00:03:47,270
and so we see here our columns are six columns.

62

00:03:47,310  -->  00:03:53,700
We've got to show them are objects or recognizes objects and four of them are recognized as integers

63

00:03:53,700  -->  00:03:54,140
.

64

00:03:54,180  -->  00:03:57,340
So this is where everything gets started it's getting interesting.

65

00:03:57,480  -->  00:04:03,540
You'll see that critique creating has been recognized as an integer this column or here that's 0 to

66

00:04:03,540  -->  00:04:04,320
100.

67

00:04:04,350  -->  00:04:10,230
What is the rating in percentage terms that the critics gave to that movie the audience rating.

68

00:04:10,260  -->  00:04:11,660
Again zero to 100.

69

00:04:11,660  -->  00:04:13,140
The budget in millions.

70

00:04:13,230  -->  00:04:17,490
That's from zero dollars to some huge amount as you'll see.

71

00:04:17,490  -->  00:04:21,920
There are some movies as a movie with over 300 million dollars in budget.

72

00:04:22,080  -->  00:04:23,220
So these are fair enough.

73

00:04:23,220  -->  00:04:29,820
But then we've got a column called The Year here and it is also recognized as a number.

74

00:04:29,820  -->  00:04:30,280
Right.

75

00:04:30,300  -->  00:04:33,870
Fair enough it is a number but is it really a number.

76

00:04:33,930  -->  00:04:36,650
Is it do we want to treat each year as a number.

77

00:04:36,650  -->  00:04:40,320
That's a question we should ask ourselves when are we going to be working with this data set.

78

00:04:40,320  -->  00:04:44,580
Are we going to be treating year in a similar way that we're going to be treating these three columns

79

00:04:44,910  -->  00:04:51,400
for instance here we can add them take the average take the maximum take the minimum subtract these

80

00:04:51,640  -->  00:04:57,240
these numbers from each other and work with them as normal numbers do we want to do the same of the

81

00:04:57,240  -->  00:04:57,890
year.

82

00:04:58,200  -->  00:05:03,840
And to answer that question we can just use one of the functions that we read you know and it'll make

83

00:05:03,840  -->  00:05:04,940
things a bit clearer.

84

00:05:05,100  -->  00:05:08,220
So let's go and type in movies dot describe.

85

00:05:08,340  -->  00:05:12,750
Remember that a function that tells us some stats around our numbers.

86

00:05:12,930  -->  00:05:18,780
Well if we run that you'll see that we've got the count I mean the standard deviation the minimum first

87

00:05:18,780  -->  00:05:24,620
quarter all the median Segre third quarter and the maximum.

88

00:05:24,660  -->  00:05:31,860
And so these numbers make sense for Kritik creating audience rating and Budget in millions.

89

00:05:31,860  -->  00:05:32,080
Right.

90

00:05:32,090  -->  00:05:36,550
So it makes sense to take the average of the critic rating audience a budget million.

91

00:05:36,750  -->  00:05:43,140
But as you can see for a year it makes completely no sense it says 2009 1 1 5 2.

92

00:05:43,160  -->  00:05:44,130
What does that mean.

93

00:05:44,130  -->  00:05:49,800
What does the average of the years that we're dealing with or let's say the minimum low minimum and

94

00:05:49,800  -->  00:05:51,210
maximum can kind of make sense.

95

00:05:51,210  -->  00:05:55,330
But these quartiles really don't make sense or so.

96

00:05:55,350  -->  00:06:01,350
So does the just as a standard deviation so there is no not much point in these operations.

97

00:06:01,350  -->  00:06:08,350
In fact they don't make sense and that is because we really don't want to treat year as a number.

98

00:06:08,370  -->  00:06:11,630
That's not our goal here is more of a category for us.

99

00:06:11,850  -->  00:06:18,010
Yes indeed years are now presented as numbers there resos 2009 2008.

100

00:06:18,210  -->  00:06:22,440
But for all we know they could have been named in a different way these could have been months.

101

00:06:22,440  -->  00:06:28,560
January February March April and so on and we could have still conducted our analysis so this just stands

102

00:06:28,560  -->  00:06:33,730
to show that in reality year is not meant to be on Americk favorable for us.

103

00:06:33,750  -->  00:06:36,230
It's meant to be a categorical variable.

104

00:06:36,360  -->  00:06:38,110
So how can we fix all of this.

105

00:06:38,340  -->  00:06:45,510
Well first thing we want to do is let's learn how to convert variables into categorical variables because

106

00:06:45,510  -->  00:06:50,700
even these two variables that are currently recognized not recognizes numbers.

107

00:06:50,700  -->  00:06:54,870
They aren't really recognized as categorizing recognizes just objects.

108

00:06:55,020  -->  00:06:58,570
So how do we turn them into actual categories.

109

00:06:58,590  -->  00:07:05,640
Well the correct way of doing this is you call the variable so in our case film and let's remember that

110

00:07:05,730  -->  00:07:13,950
we can run it like this and I will get films like that or we can even just put that dot same result

111

00:07:14,040  -->  00:07:16,730
because it is it doesn't have spaces in it.

112

00:07:17,010  -->  00:07:23,100
So we just call this a column and then we type in dot as type.

113

00:07:23,180  -->  00:07:24,590
So we want to change the type.

114

00:07:24,590  -->  00:07:26,760
I don't want to say category here.

115

00:07:26,870  -->  00:07:29,670
So if I run this again you'll see that it's printed out.

116

00:07:29,670  -->  00:07:37,170
Nothing has changed but what we'll do is we'll take movies Daut film equals I will override it because

117

00:07:37,170  -->  00:07:43,430
this is just returning the result although oppression is not actually changing the column itself.

118

00:07:43,440  -->  00:07:44,150
What are we going to do.

119

00:07:44,150  -->  00:07:48,630
We're going to set it as a category and then we're going to overwrite the column that we already have

120

00:07:48,630  -->  00:07:48,920
.

121

00:07:48,930  -->  00:07:55,650
So if we run this now if we look at movies on hand you'll see that really nothing has changed.

122

00:07:55,710  -->  00:08:04,860
But if we go into movies dot info you'll see that now film is recognized as a category and that's exactly

123

00:08:04,860  -->  00:08:05,850
what we want.

124

00:08:06,030  -->  00:08:10,950
Now if you've already studied Aroer if you've taken my course in our programming then you'll remember

125

00:08:10,980  -->  00:08:18,810
that in our categories are called factors and in our it is a bit more detailed you get more information

126

00:08:18,810  -->  00:08:23,850
on the carry on factor and what unique values they are in that fact call them.

127

00:08:23,910  -->  00:08:25,740
But we'll learn to do that in Python as well.

128

00:08:25,740  -->  00:08:32,120
So basically categories in Python are very similar or like two factors in our.

129

00:08:32,520  -->  00:08:38,410
And now what we're going to do is we're going to perform a celebration for the other columns.

130

00:08:38,490  -->  00:08:40,060
Let's make two of these.

131

00:08:40,320  -->  00:08:47,120
And here we're going to say genre and here we're going to see Year.

132

00:08:47,130  -->  00:08:47,790
All right.

133

00:08:47,820  -->  00:08:49,600
So let's run that.

134

00:08:49,680  -->  00:08:57,660
And now if we look at movies dot info you'll see that both of these genres and year are now categories

135

00:08:58,140  -->  00:08:59,870
and that's exactly what we wanted.

136

00:08:59,940  -->  00:09:07,560
And in terms of what we just discussed if you'd like to know what are the unique values in that category

137

00:09:07,590  -->  00:09:07,660
.

138

00:09:07,710  -->  00:09:08,610
It's very simple.

139

00:09:08,610  -->  00:09:15,500
All you need to type in is movies genre for example than say cat and categories.

140

00:09:15,540  -->  00:09:16,080
Yes.

141

00:09:16,110  -->  00:09:23,530
If you're on this you'll get the unique value so it's a very quick way to assess what levels are in

142

00:09:23,550  -->  00:09:26,440
are these would be called levels of a factor.

143

00:09:26,490  -->  00:09:28,880
And these are levels of a category in Python.

144

00:09:28,920  -->  00:09:31,890
What levels or what unique values that category holds.

145

00:09:31,890  -->  00:09:36,400
As you can see we've got seven different genres on movies.

146

00:09:36,810  -->  00:09:44,280
And finally now if we call movies and describe you'll see that a year is no longer here so Python has

147

00:09:44,280  -->  00:09:49,700
learned that the year column should be treated as a category and not a number and therefore it's not

148

00:09:49,740  -->  00:09:56,550
including it in this describe or in the statistics that it's outputting for our doorframe.

149

00:09:56,550  -->  00:09:59,350
So there we go that's how we prepare our data set.

150

00:09:59,400  -->  00:10:00,420
That's how we are.

151

00:10:00,420  -->  00:10:03,740
Once again we learned how to we revise how to explore data set.

152

00:10:03,750  -->  00:10:11,190
And also we learned how to prepare our data set in terms of dealing with categorical variables and specifying

153

00:10:11,190  -->  00:10:17,040
them manually where Python has and recognized variables correctly so for instance where years have been

154

00:10:17,040  -->  00:10:22,760
recognized as numbers Popinjay this is Tauriel and I can't wait to see you on the next one.

155

00:10:22,770  -->  00:10:27,940
Until then happy coding.
