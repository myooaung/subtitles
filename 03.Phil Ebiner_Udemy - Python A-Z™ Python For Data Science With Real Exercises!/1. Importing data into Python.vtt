WEBVTT
1

00:00:05.340  -->  00:00:11.160
Hello welcome back to the course and by programming in today's tutorial we're starting to learn how

2

00:00:11.160  -->  00:00:17.140
to work with doorframes I skritch see how to import data sets into Python.

3

00:00:17.490  -->  00:00:24.150
And in today's tutorial we're going to need a specific package which is called Pandurs is going to import

4

00:00:24.640  -->  00:00:27.260
Pandurs as PD.

5

00:00:27.300  -->  00:00:30.590
So what does this package do why why Pandurs or is it all about.

6

00:00:30.600  -->  00:00:32.450
Well Panas is a great package.

7

00:00:32.460  -->  00:00:38.910
One of the best if not the best in Python for working with doorframes as you'll see daughter frames

8

00:00:39.000  -->  00:00:40.910
are a step up for matrices.

9

00:00:40.920  -->  00:00:46.470
They are similar to tables similar to what you see in Excel so the columns usually have headers have

10

00:00:46.470  -->  00:00:47.280
names.

11

00:00:47.280  -->  00:00:52.120
And then there's a certain list of rules so it's the perfect structure for working with data sets that

12

00:00:52.120  -->  00:00:57.410
she would otherwise otherwise see in Excel or in a school or other data science tools.

13

00:00:57.480  -->  00:01:02.850
Now pandas is a very powerful package it has lots of structures that are very well thought through very

14

00:01:02.850  -->  00:01:04.630
useful functions within it.

15

00:01:04.650  -->  00:01:10.920
And as you'll see pandas is very similar to the way doorframes work in art.

16

00:01:10.950  -->  00:01:16.440
So if you've done our programming course or if you have some experience with far then you will find

17

00:01:16.440  -->  00:01:19.860
what we'll be doing in Panas very familiar to what you've done and are.

18

00:01:20.070  -->  00:01:21.590
So we're going to report this package.

19

00:01:21.590  -->  00:01:22.770
Let's run this line.

20

00:01:22.770  -->  00:01:29.430
And now we're going to focus on in this article we will focus on importing the data set into our analysis

21

00:01:29.430  -->  00:01:29.590
.

22

00:01:29.610  -->  00:01:30.900
So let's get started with this.

23

00:01:30.930  -->  00:01:33.210
We're going to look at two methods a method.

24

00:01:33.210  -->  00:01:41.100
Number one we're going to specify full path to file and what this means is that we go into we knowing

25

00:01:41.100  -->  00:01:46.680
where the file is we're going to actually specify the exact location regardless of where we are running

26

00:01:46.680  -->  00:01:52.380
right now where this Jupiter notebook is running with a home director with a working directly for Jupiter

27

00:01:52.380  -->  00:01:54.430
is we going to specify the file.

28

00:01:54.480  -->  00:02:01.200
So let's see how this is done in Windows if you need to specify the following code so stats and stats

29

00:02:01.200  -->  00:02:05.370
is going to be the name of our data from we're going to be working for a lot so feel free to say give

30

00:02:05.370  -->  00:02:06.830
it a different name if you like.

31

00:02:06.840  -->  00:02:07.770
So what do we need.

32

00:02:07.770  -->  00:02:11.860
Is that read CXXVI function from the python's package.

33

00:02:11.910  -->  00:02:16.880
And here we go in to specify where exactly our file is located.

34

00:02:16.890  -->  00:02:24.030
So if you're on Windows you would specify in quotation marks specify C then use double backslashes because

35

00:02:24.330  -->  00:02:28.140
that will allow you to avoid problems with escape sequences.

36

00:02:28.140  -->  00:02:35.110
We're just going to specify C colon double backslash users backslash curial that's me.

37

00:02:35.280  -->  00:02:38.520
Desktop by double backslash Python.

38

00:02:38.520  -->  00:02:40.200
So this is where mine is.

39

00:02:40.200  -->  00:02:47.550
Yours might be in a different location right in Python programming course and then its demographic data

40

00:02:47.670  -->  00:02:48.810
dots.

41

00:02:49.080  -->  00:02:49.600
Beautiful.

42

00:02:49.680  -->  00:02:52.980
So that's where my file is and that's how you do it on Windows.

43

00:02:52.980  -->  00:02:56.020
I'm not going to run this line because I will get an error over on that.

44

00:02:56.040  -->  00:03:05.020
On a Mac where the way to specify the same command is stat's equals PD Daut read underscores GSV.

45

00:03:05.250  -->  00:03:08.710
And then in quotation marks you specify for a slash.

46

00:03:08.880  -->  00:03:12.510
So users in this case it's curial or Menko.

47

00:03:12.510  -->  00:03:22.970
Again me again desktop slash Python programming course and slash demographic data dot csv.

48

00:03:23.100  -->  00:03:24.550
All right so there we go.

49

00:03:24.720  -->  00:03:29.460
That's the Windows version up the top with double backslashes especially if typed in everything correctly

50

00:03:29.770  -->  00:03:33.290
and that's the Mac version of the forward slashes.

51

00:03:33.300  -->  00:03:37.120
All right so I'm going to run this cell and therefore run the Mac version.

52

00:03:37.140  -->  00:03:43.980
And now I've got the stats doorframe prepared so if I look at stats you will see what we have is actually

53

00:03:44.040  -->  00:03:44.780
a table.

54

00:03:44.790  -->  00:03:49.650
It is exactly the same table that is in Excel or in the CSP file.

55

00:03:49.830  -->  00:03:56.030
And here we've gotten all of our daughter in here so you can see that there's some triple dots here

56

00:03:56.050  -->  00:04:01.980
just showing that there's a lot of lines so in order not to clutter our workspace they're skipping them

57

00:04:02.010  -->  00:04:05.270
but they tell you at the bottom one 95 roast has five columns.

58

00:04:05.450  -->  00:04:07.010
One two three four five called.

59

00:04:07.020  -->  00:04:12.340
So this as you'll see here this column with numeration doesn't count.

60

00:04:12.500  -->  00:04:19.770
And also the row with the name or with the column names doesn't count as well so actually at 195 rows

61

00:04:19.770  -->  00:04:20.800
of pure data.

62

00:04:20.820  -->  00:04:22.280
That's what we have.

63

00:04:22.290  -->  00:04:22.710
All right.

64

00:04:22.740  -->  00:04:27.390
So that was the first method that you can use to load a file and I wanted to show you a second method

65

00:04:27.390  -->  00:04:30.100
in case it's just you know two.

66

00:04:30.120  -->  00:04:33.990
And then you can use the one you're comfortable with in your own projects.

67

00:04:34.200  -->  00:04:35.560
So let's look at Myth number two.

68

00:04:35.610  -->  00:04:40.020
Method 2 is we actually change working directory.

69

00:04:40.020  -->  00:04:41.350
So what is the working directory.

70

00:04:41.520  -->  00:04:42.540
Well we'll see just now.

71

00:04:42.540  -->  00:04:46.380
So let's import os that's another package.

72

00:04:46.380  -->  00:04:50.930
And and now we're going to print OS Daut get CW D.

73

00:04:51.030  -->  00:04:53.860
So gets the working directory if you're on that.

74

00:04:53.980  -->  00:04:57.070
You'll see that my working directory currently is.

75

00:04:57.090  -->  00:05:00.060
Users Kyrle or Manco by and programming course.

76

00:05:00.060  -->  00:05:07.410
That's where this Jupiter notebook is saved and that is where Jupiter can access auxilary files so if

77

00:05:07.410  -->  00:05:13.250
I put a file in this folder then I'll be able to call it before actually specifying the full path.

78

00:05:13.380  -->  00:05:18.360
So what you'll see is that in this particular case the file I've already put the file in the correct

79

00:05:18.360  -->  00:05:20.740
folder so it's going to be super easy right.

80

00:05:20.760  -->  00:05:25.050
So my file is already in the same folder as the working directory.

81

00:05:25.140  -->  00:05:28.470
So it makes things a bit more interesting or fun.

82

00:05:28.470  -->  00:05:33.160
We're going to actually mess this up for ourselves and then we will change it back.

83

00:05:33.300  -->  00:05:34.410
So I'll show you how to do that.

84

00:05:34.410  -->  00:05:36.620
So let's go and do this.

85

00:05:36.630  -->  00:05:44.910
So on Windows is a similar process so is O S C HDI our change directory and let's say you want to change

86

00:05:44.910  -->  00:05:53.130
it to see a double backslash users that will backslash curial double backslash desktop right and then

87

00:05:53.160  -->  00:05:54.030
on a Mac.

88

00:05:54.030  -->  00:05:55.620
So I'm going to comment this out on a Mac.

89

00:05:55.860  -->  00:06:05.910
You would say OS Dotts CAGR were quotations and then you would say users will remain co slash desktop

90

00:06:06.080  -->  00:06:07.410
and I I run this.

91

00:06:07.620  -->  00:06:12.630
Nothing happens but the line ran correctly the and so if I print the working directory Now if I run

92

00:06:12.630  -->  00:06:18.500
this line you will see that my working directory directories users killer Menko desktop.

93

00:06:18.510  -->  00:06:25.710
So basically any files on my desktop are directly accessible to Jupiter notebook so I can access them

94

00:06:25.930  -->  00:06:31.140
for spacing their full Poth I can just say whatever the name of that file and Jupiter will by default

95

00:06:31.140  -->  00:06:33.300
look inside this directory.

96

00:06:33.330  -->  00:06:39.690
So therefore if I try let's say I want to import my file so how would I important.

97

00:06:39.690  -->  00:06:44.750
I would say stat's two equals PD dot read underscore CXXVI.

98

00:06:45.120  -->  00:06:48.570
And here it's a demographic dot dot CAC.

99

00:06:48.690  -->  00:06:51.130
If I try that I'll get an error.

100

00:06:51.240  -->  00:06:51.480
Right.

101

00:06:51.480  -->  00:06:52.350
So what does it say.

102

00:06:52.350  -->  00:06:54.300
It says go to the bottom.

103

00:06:54.300  -->  00:06:56.520
It says file demographic data.

104

00:06:56.520  -->  00:07:02.190
Dodd says he does not exist because by default it's looking on my desktop and the file doesn't exist

105

00:07:02.190  -->  00:07:02.660
there.

106

00:07:02.670  -->  00:07:03.620
So how can we fix this.

107

00:07:03.630  -->  00:07:08.640
Well we can either specify this approach at the top right we can either specify the full path to the

108

00:07:08.640  -->  00:07:12.480
file or what we can do is change the working directory.

109

00:07:12.480  -->  00:07:13.990
So how do we change or convert.

110

00:07:14.160  -->  00:07:15.060
Very simple.

111

00:07:15.150  -->  00:07:16.690
We just fix up these lines.

112

00:07:16.700  -->  00:07:18.200
So on Windows you'd say.

113

00:07:18.570  -->  00:07:23.080
All right so I want to be in the Python programming course folder.

114

00:07:23.280  -->  00:07:24.900
And on a Mac.

115

00:07:24.960  -->  00:07:25.520
Same thing.

116

00:07:25.530  -->  00:07:29.410
I'm just actually going to copy this but with a single slash.

117

00:07:29.580  -->  00:07:31.930
There we go so far on this.

118

00:07:32.060  -->  00:07:34.080
So I just ran this line over here.

119

00:07:34.080  -->  00:07:39.750
Now if I get the working directory on this just copy this line add another cell by clicking B.

120

00:07:39.810  -->  00:07:40.430
There we go.

121

00:07:40.500  -->  00:07:43.970
If I run this line you'll see that there it is.

122

00:07:43.980  -->  00:07:46.050
That's the new working directory.

123

00:07:46.050  -->  00:07:51.180
And now if I run the second import you'll see that it imported totally fine.

124

00:07:51.320  -->  00:07:52.580
So that's two.

125

00:07:52.680  -->  00:07:53.930
And there it is.

126

00:07:54.080  -->  00:07:55.500
2 has also been loaded.

127

00:07:55.500  -->  00:07:57.990
It's exactly the same as stat's one.

128

00:07:57.990  -->  00:08:05.140
So there we go that's how we import files into Python as a data frame and make sure your files are C

129

00:08:05.150  -->  00:08:10.920
S V because that's the function that we're using retests We hope you found this tural useful and now

130

00:08:10.920  -->  00:08:16.830
you know two ways of importing files into Python and you can always use the one that you find more comfortable

131

00:08:17.230  -->  00:08:18.660
and I'll look for you next time.

132

00:08:18.690  -->  00:08:20.220
Until then happy coding

133

00:08:22.230  -->  00:08:24.310
.
