WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.390
Another approach to go beyond card operations provided by the studio type intro Face is by

00:00:06.390 --> 00:00:11.980
using matter signatures so that you don't have to write an SQL query like we did in our

00:00:11.980 --> 00:00:18.750
previous Example is in the equity Annotation and hero smoked examples off such matters

00:00:18.750 --> 00:00:19.680
signatures.

00:00:19.680 --> 00:00:22.460
So that's part of the depositor interface.

00:00:22.460 --> 00:00:27.310
He could use one of these methods to perform charity off operations,

00:00:27.310 --> 00:00:28.330
for example,

00:00:28.330 --> 00:00:32.650
when we say Find by I D he provide the identify.

00:00:32.650 --> 00:00:34.500
Rare has an employee GIs.

00:00:34.500 --> 00:00:37.700
It would find the entity based on the Heidi,

00:00:37.700 --> 00:00:40.250
and this is one of the pre existing methods.

00:00:40.250 --> 00:00:43.040
But how about going beyond that?

00:00:43.040 --> 00:00:44.300
For example,

00:00:44.300 --> 00:00:50.780
let's I wanted to find an entity based on the title our description.

00:00:50.780 --> 00:00:58.090
So this statement in here is going to return list off movie entities whose title or

00:00:58.090 --> 00:01:02.650
description is given as the Method para meters.

00:01:02.650 --> 00:01:06.040
So if a there off this perimeters match,

00:01:06.040 --> 00:01:10.950
that particular entity would be fished from the database and stored in this list.

00:01:10.950 --> 00:01:13.480
And if no movie and myself found,

00:01:13.480 --> 00:01:17.080
then this matter would just simply return and empty list.

00:01:17.080 --> 00:01:18.330
Similarly,

00:01:18.330 --> 00:01:18.710
God,

00:01:18.710 --> 00:01:25.250
further examples we can count the number off records by age.

00:01:25.250 --> 00:01:30.800
So here I'm trying toe count number of students with a particular age,

00:01:30.800 --> 00:01:33.200
whatever the Parliament that we send.

00:01:33.200 --> 00:01:36.500
And this matter would return along value,

00:01:36.500 --> 00:01:41.020
which is basically number off records that will meet this condition.

00:01:41.020 --> 00:01:42.320
Similarly,

00:01:42.320 --> 00:01:45.100
we have a few other examples in here.

00:01:45.100 --> 00:01:45.900
Here.

00:01:45.900 --> 00:01:51.980
I'm trying to return distant students because I will use this war distinct in the method

00:01:51.980 --> 00:01:55.690
name whose age is given as another perimeter.

00:01:55.690 --> 00:01:58.660
Whatever the age that you provide as a matter perimeter,

00:01:58.660 --> 00:02:04.850
there's done that Distinct records are entities would be fished from the database.

00:02:04.850 --> 00:02:08.930
And if no student entities are found this method,

00:02:08.930 --> 00:02:10.350
Britain's an empty list.

00:02:10.350 --> 00:02:18.890
You can also limit number off records that can be fished by explicitly providing the number

00:02:18.890 --> 00:02:19.760
in this manner.

00:02:19.760 --> 00:02:27.950
Find 1st 3 So it's going to virtually the 1st 3 records and store them in the list by age

00:02:27.950 --> 00:02:31.950
and then ordered by name in ascending order.

00:02:31.950 --> 00:02:34.710
This looks somewhat similar to an a skill,

00:02:34.710 --> 00:02:36.490
greedy and in fact,

00:02:36.490 --> 00:02:37.410
behind the scenes.

00:02:37.410 --> 00:02:38.970
That's what it's going to do.

00:02:38.970 --> 00:02:41.780
It's going to generate an SQL query for us,

00:02:41.780 --> 00:02:45.130
and here's something complex,

00:02:45.130 --> 00:02:51.600
and what I'm trying to do here is this matter is going to accept couple off arguments,

00:02:51.600 --> 00:02:53.250
the description and the name,

00:02:53.250 --> 00:02:59.370
and we would like to return list off Students whose description match with the given para

00:02:59.370 --> 00:03:06.850
meter given description are the given name.

00:03:06.850 --> 00:03:12.550
So this is instant alternate away to write your creative methods.

00:03:12.550 --> 00:03:19.100
I'm going to make this file about the for you to download so that you can take a look at it

00:03:19.100 --> 00:03:19.100
.

00:03:19.100 --> 00:03:21.170
But in all honesty,

00:03:21.170 --> 00:03:23.780
if you'd like to write a query on your own,

00:03:23.780 --> 00:03:27.830
then I can defer to the spring documentation.

00:03:27.830 --> 00:03:34.450
It might take a bit off practice are trying better to get your matter working,

00:03:34.450 --> 00:03:35.670
but,

00:03:35.670 --> 00:03:36.050
uh,

00:03:36.050 --> 00:03:37.890
this might be a better option.

00:03:37.890 --> 00:03:38.060
But,

00:03:38.060 --> 00:03:38.770
however,

00:03:38.770 --> 00:03:42.220
if the method is going to get as complex as this one,

00:03:42.220 --> 00:03:48.120
and that's going to be not so readable in which gives him a better off go with the query

00:03:48.120 --> 00:03:48.940
annotation.

00:03:48.940 --> 00:03:55.750
So let's quickly take a look at a simple example of the same in a project.

00:03:55.750 --> 00:04:04.960
So I'm trying to fetch list off students by age and identify where I'm passing couple off

00:04:04.960 --> 00:04:09.980
arguments which would correspond toe age,

00:04:09.980 --> 00:04:11.650
as allows the I D.

00:04:11.650 --> 00:04:17.750
And from the controller logic,

00:04:17.750 --> 00:04:21.760
I'm saying age to before the three,

00:04:21.760 --> 00:04:26.510
because that's what I'm trying to populate and identify.

00:04:26.510 --> 00:04:32.990
I already knew that the I d off the field is one that's on your application,

00:04:32.990 --> 00:04:50.340
and it has indeed fish the record.

00:04:50.340 --> 00:04:54.650
So his official page,

00:04:54.650 --> 00:05:00.630
where you can just take a look at all the key words that you can use as part of the method

00:05:00.630 --> 00:05:01.600
signatures.

00:05:01.600 --> 00:05:05.740
And in all honesty,

00:05:05.740 --> 00:05:07.080
I think it's not what,

00:05:07.080 --> 00:05:11.060
while trying to experiment with each one of these hasn't been.

00:05:11.060 --> 00:05:11.910
You're quite right.

00:05:11.910 --> 00:05:12.750
A new method.

00:05:12.750 --> 00:05:14.950
You start exploded in Google,

00:05:14.950 --> 00:05:17.120
and in most cases,

00:05:17.120 --> 00:05:22.400
whatever the query that you're trying to write must have already been written by somebody.

00:05:22.400 --> 00:05:24.450
So you can make use off that.

00:05:24.450 --> 00:05:32.920
And in rare instances where you get to work on not so frequent queries,

00:05:32.920 --> 00:05:39.850
then you can mix and match this keywords and create the query matter.

00:05:39.850 --> 00:05:42.910
Hope it makes sense

