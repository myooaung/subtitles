WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.510
hold it.

00:00:00.510 --> 00:00:03.610
Let's try to understand what's going on here in this code.

00:00:03.610 --> 00:00:07.270
Nominee tells him that this is the business logic off your application,

00:00:07.270 --> 00:00:12.210
and he wanted to perform some kind of a transaction with the database using have been eight

00:00:12.210 --> 00:00:12.210
.

00:00:12.210 --> 00:00:16.350
So the first step is quite obvious in it to create Decision Factory,

00:00:16.350 --> 00:00:19.250
and this is how you would do so.

00:00:19.250 --> 00:00:23.020
You want to create an instance off the conflagration class,

00:00:23.020 --> 00:00:25.380
which is provided by the happen in itself.

00:00:25.380 --> 00:00:30.980
This configuration class will help you create Decision Factory using the configuration

00:00:30.980 --> 00:00:33.690
details that you set in this Cabinet XML file.

00:00:33.690 --> 00:00:39.880
So whatever you provide within this session factory DAG will be fed into the session

00:00:39.880 --> 00:00:42.480
factory to create the same.

00:00:42.480 --> 00:00:47.010
So you would make a call to this method build session factory and by default,

00:00:47.010 --> 00:00:52.340
it's going to assume that the configuration file is with the name have been eight Darcy of

00:00:52.340 --> 00:00:53.320
Did or XML.

00:00:53.320 --> 00:00:58.440
And that's the reason why I had mentioned that need to make sure that the name is same and

00:00:58.440 --> 00:00:59.150
moreover,

00:00:59.150 --> 00:01:01.730
this is this method is actually duplicated.

00:01:01.730 --> 00:01:04.290
I'm going to talk about it in the end of this video,

00:01:04.290 --> 00:01:07.820
but this will essentially create Decision Factory.

00:01:07.820 --> 00:01:10.450
The next step is to create this session.

00:01:10.450 --> 00:01:12.350
Isn't this session factory object?

00:01:12.350 --> 00:01:16.380
And the way you do it is by calling this method open session.

00:01:16.380 --> 00:01:17.520
And from that point,

00:01:17.520 --> 00:01:20.840
you can use this session object to perform your transaction.

00:01:20.840 --> 00:01:22.660
And here's how you do it.

00:01:22.660 --> 00:01:23.890
Pretty straightforward.

00:01:23.890 --> 00:01:24.790
You're too.

00:01:24.790 --> 00:01:26.510
Session dot Begin transaction.

00:01:26.510 --> 00:01:31.650
And in here he would perform all the transaction steps that you wish to perform.

00:01:31.650 --> 00:01:34.110
This could be a banking transaction.

00:01:34.110 --> 00:01:39.040
Like transferring funds are letting the user log in to his account.

00:01:39.040 --> 00:01:43.150
Except right could be anything but a single transaction in here.

00:01:43.150 --> 00:01:47.700
I'm going to keep things simple by Justin Stan Sheeting are persistent class,

00:01:47.700 --> 00:01:53.400
which is employees and that I'm sending some para meters to the Parametric constructor

00:01:53.400 --> 00:01:55.480
reciting in that persistent class.

00:01:55.480 --> 00:01:59.290
And I'm trying to say that object in the session.

00:01:59.290 --> 00:02:07.250
And this is equal into inserting this two entries into the table employees.

00:02:07.250 --> 00:02:11.010
We're going to see the end result and you'll understand what it means.

00:02:11.010 --> 00:02:13.980
And once you're done with whatever you have to do,

00:02:13.980 --> 00:02:16.850
you're going to say get transaction and come it.

00:02:16.850 --> 00:02:20.550
This is what will make the transaction complete.

00:02:20.550 --> 00:02:21.470
For example,

00:02:21.470 --> 00:02:26.080
if there is some kind of an exception that occurs within the transactional instructions

00:02:26.080 --> 00:02:29.000
that none of the operations will get saved have been.

00:02:29.000 --> 00:02:34.750
It will just simply rollback the database to its original state before the transaction.

00:02:34.750 --> 00:02:35.570
Well,

00:02:35.570 --> 00:02:39.860
this is similar to some of the transactional concepts we had covered in order the best

00:02:39.860 --> 00:02:40.310
course,

00:02:40.310 --> 00:02:44.180
but his how you do it like you begin the transaction,

00:02:44.180 --> 00:02:47.360
perform what we want and then you commit the transaction.

00:02:47.360 --> 00:02:48.820
If there is some exception,

00:02:48.820 --> 00:02:51.970
then no changes would take effect in the database.

00:02:51.970 --> 00:02:54.750
And once everything goes well,

00:02:54.750 --> 00:02:57.600
you need to take her off closing the session.

00:02:57.600 --> 00:03:00.730
As of all the Dimension session is not 1/3 safe object,

00:03:00.730 --> 00:03:03.690
so you want to keep it as short as possible.

00:03:03.690 --> 00:03:08.220
And here's how you do it now it's time to launch our application.

00:03:08.220 --> 00:03:09.360
But before that,

00:03:09.360 --> 00:03:10.850
let me show you the database,

00:03:10.850 --> 00:03:14.800
and I wanted to show you that the employee table is not already present,

00:03:14.800 --> 00:03:17.920
so it's not there now.

00:03:17.920 --> 00:03:20.470
If I run this program I'm expecting have been,

00:03:20.470 --> 00:03:25.550
it will create that table and also add this entry into the table.

00:03:25.550 --> 00:03:29.050
So let's on the program and see how it goes.

00:03:29.050 --> 00:03:48.680
It's expand this console and we're done.

00:03:48.680 --> 00:03:53.230
Let's go database and see if things are in good shape.

00:03:53.230 --> 00:03:55.290
And sure enough happen.

00:03:55.290 --> 00:03:59.550
It did create the table and also inserted the entry.

00:03:59.550 --> 00:04:00.560
In fact,

00:04:00.560 --> 00:04:03.150
you can see the instructions that have been it has executed.

00:04:03.150 --> 00:04:06.600
Now these instructions are specific to your database.

00:04:06.600 --> 00:04:11.880
So this may differ depending on the database and the dialect that you had used.

00:04:11.880 --> 00:04:14.400
So it has created the database.

00:04:14.400 --> 00:04:19.850
Isn't the fallen DTL and it has inserted an entry?

00:04:19.850 --> 00:04:22.070
Isn't the insert query as well?

00:04:22.070 --> 00:04:31.950
We're able to see all these messages because we had said these two properties.

00:04:31.950 --> 00:04:35.810
Now,

00:04:35.810 --> 00:04:38.010
if you're running this application for the first time,

00:04:38.010 --> 00:04:40.500
you may not be confident that it would work.

00:04:40.500 --> 00:04:41.750
And in fact,

00:04:41.750 --> 00:04:44.350
it's hard to say that it will work in the very first girl.

00:04:44.350 --> 00:04:47.210
I don't mean to say that I have flaws in my code,

00:04:47.210 --> 00:04:48.160
but I mean,

00:04:48.160 --> 00:04:50.640
there are certain things which are not in my control.

00:04:50.640 --> 00:04:51.300
For example,

00:04:51.300 --> 00:04:53.050
if you're using a different database,

00:04:53.050 --> 00:04:57.260
then you have to carefully provide all the required configuration details.

00:04:57.260 --> 00:04:58.500
If you mess up with it,

00:04:58.500 --> 00:05:01.580
then things may not work just in case.

00:05:01.580 --> 00:05:02.810
If things don't work,

00:05:02.810 --> 00:05:07.550
then then you would get some errors on the screen on the console.

00:05:07.550 --> 00:05:12.010
Quite understand what it is trying to fix the problem on your own.

00:05:12.010 --> 00:05:13.850
If you're still not successful,

00:05:13.850 --> 00:05:20.550
then the lot off on land resources one is a stack overflow and the other is off course.

00:05:20.550 --> 00:05:21.070
Google.

00:05:21.070 --> 00:05:22.480
If you do a quick Google search,

00:05:22.480 --> 00:05:27.520
you would most likely come across with somebody who might have faced the same issue that

00:05:27.520 --> 00:05:28.300
you're facing.

00:05:28.300 --> 00:05:30.210
If you're still not successful,

00:05:30.210 --> 00:05:31.580
I'm the last option.

00:05:31.580 --> 00:05:32.110
Now,

00:05:32.110 --> 00:05:33.260
let me tell you something.

00:05:33.260 --> 00:05:34.880
I can solve your problem.

00:05:34.880 --> 00:05:40.050
But it may not be a good idea if you want to learn because the best form off learning

00:05:40.050 --> 00:05:45.550
happens when you do mistakes and then you try to fix those errors on your own.

00:05:45.550 --> 00:05:47.590
So do keep that in mind.

00:05:47.590 --> 00:05:54.830
And I guess I also need to mention that we may not be following the best practices to write

00:05:54.830 --> 00:05:55.580
this code.

00:05:55.580 --> 00:05:56.660
For example,

00:05:56.660 --> 00:06:00.870
this method in here Bill session factory is actually the abrogated.

00:06:00.870 --> 00:06:01.650
I mean,

00:06:01.650 --> 00:06:04.850
if you go to the documentation off this configuration class,

00:06:04.850 --> 00:06:10.970
you would notice that this method is actually marked as dipper gated and is no longer

00:06:10.970 --> 00:06:17.600
recommended to use instead with your dues the same method with this perimeter service

00:06:17.600 --> 00:06:18.250
registry.

00:06:18.250 --> 00:06:19.700
Also,

00:06:19.700 --> 00:06:23.690
we're not really wrapped in this court around the try catch block.

00:06:23.690 --> 00:06:24.270
Well,

00:06:24.270 --> 00:06:25.530
I did mention that happen.

00:06:25.530 --> 00:06:28.890
It is actually going to take care off handling the exceptions.

00:06:28.890 --> 00:06:29.580
In fact,

00:06:29.580 --> 00:06:36.500
it is going to take care off handling the exceptions that are related two sq and other

00:06:36.500 --> 00:06:38.080
database later issues,

00:06:38.080 --> 00:06:42.250
but it won't handle the exception that occur in our code.

00:06:42.250 --> 00:06:44.500
So we went to take care off,

00:06:44.500 --> 00:06:46.640
wrapping the scored around the try,

00:06:46.640 --> 00:06:49.580
catch block and follow good practices.

00:06:49.580 --> 00:06:54.680
There isn't why didn't follow those good practices right now is to keep things simple,

00:06:54.680 --> 00:06:57.380
because if I have to follow those good practices,

00:06:57.380 --> 00:07:02.710
the number of lines off court with increase exponentially and our code may look little

00:07:02.710 --> 00:07:03.380
complex,

00:07:03.380 --> 00:07:05.250
although in reality it doesn't.

00:07:05.250 --> 00:07:10.140
So just to keep thing simple have written the following code just for the sake of

00:07:10.140 --> 00:07:11.000
explanation.

00:07:11.000 --> 00:07:13.840
But I'm going to make the necessary changes in this code,

00:07:13.840 --> 00:07:16.540
and I'll walk you through the court in next video.

00:07:16.540 --> 00:07:16.850
See,

00:07:16.850 --> 00:07:17.350
assume

