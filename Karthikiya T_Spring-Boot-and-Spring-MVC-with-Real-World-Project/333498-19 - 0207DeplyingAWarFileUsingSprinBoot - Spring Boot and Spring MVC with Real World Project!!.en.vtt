WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.790
OK,

00:00:00.790 --> 00:00:05.840
currently we have a springboard project that is generating a jar file that we can just run

00:00:05.840 --> 00:00:07.360
on any JV and platform.

00:00:07.360 --> 00:00:11.560
But if you're following a monolithic way off developing applications,

00:00:11.560 --> 00:00:16.100
then chances are that you want to deploy war file onto an existing Tom,

00:00:16.100 --> 00:00:20.420
gets over and not use embedded servers in this video,

00:00:20.420 --> 00:00:24.490
I'm going to walk you through how you can make some changes in your project so that you can

00:00:24.490 --> 00:00:30.660
now gender the war file and then deployed on any Tomcats over the first chain that went to

00:00:30.660 --> 00:00:37.030
make is to make sure we said the packaging type toe war inside the bomb dot xml file.

00:00:37.030 --> 00:00:38.330
If you're using maven,

00:00:38.330 --> 00:00:44.300
this will ensure that the resulting artifact that gets created after we build this project

00:00:44.300 --> 00:00:46.230
would be of our file.

00:00:46.230 --> 00:00:49.570
Another change that you need to make inside the Palm.

00:00:49.570 --> 00:00:56.290
That XML file is to make sure that you said this dependency to provide its scope because

00:00:56.290 --> 00:00:59.020
we're going to deploy on Tom gets over.

00:00:59.020 --> 00:01:03.680
We don't have to have the storm cat libraries inside our war file there,

00:01:03.680 --> 00:01:06.440
already provided by the time gets over.

00:01:06.440 --> 00:01:09.170
And so we have to set the scope to provide it.

00:01:09.170 --> 00:01:16.050
Let me say this file and since we're going to deploy it on a Tomcats over and Tomcats over

00:01:16.050 --> 00:01:20.010
can typically have any number of applications running this time,

00:01:20.010 --> 00:01:21.180
our application,

00:01:21.180 --> 00:01:22.840
your role is going to change a bit.

00:01:22.840 --> 00:01:24.590
It's going to look something like this.

00:01:24.590 --> 00:01:30.550
And this is the name of the project that we have except in here.

00:01:30.550 --> 00:01:36.150
And so we have to make those changes inside our application accordingly.

00:01:36.150 --> 00:01:39.760
Inside or index start FTL file.

00:01:39.760 --> 00:01:42.810
We had this text flash.

00:01:42.810 --> 00:01:43.380
Hello?

00:01:43.380 --> 00:01:43.890
No,

00:01:43.890 --> 00:01:45.690
since the Ural is going to change,

00:01:45.690 --> 00:01:52.900
we have to ep in destroying as well so that the request would be sold by the spring boot

00:01:52.900 --> 00:01:53.850
application.

00:01:53.850 --> 00:01:59.230
And there is one last thing that we need to do is to make changes inside our springboard

00:01:59.230 --> 00:02:00.050
conflict file.

00:02:00.050 --> 00:02:04.180
But before we talk about the changes that went into just here,

00:02:04.180 --> 00:02:09.350
let's take a look at how we created the application context without using spring boot.

00:02:09.350 --> 00:02:17.170
So here we have that last file that is implementing Web application initialize er and

00:02:17.170 --> 00:02:20.750
whatever the class that implements this particular interface,

00:02:20.750 --> 00:02:22.730
the Tomcats over,

00:02:22.730 --> 00:02:25.450
is a wear off the methods in it.

00:02:25.450 --> 00:02:31.680
So as soon as we deploy our application onto the dom gets over Tomcats over will call this

00:02:31.680 --> 00:02:39.400
particular method on start up along with passing the Soviet context object and inside here

00:02:39.400 --> 00:02:45.190
I'm creating an instance off annotation conflict web application context as we're going to

00:02:45.190 --> 00:02:52.190
create a context using the Java conflict which is right here and then we're also creating

00:02:52.190 --> 00:02:57.920
an association with the solar context so that Sprink and Dr the underlying platform which

00:02:57.920 --> 00:02:59.150
is a Tomcat server,

00:02:59.150 --> 00:03:00.980
to do a variety of things.

00:03:00.980 --> 00:03:07.080
So here is how we have created the context without using Spring Boat Well,

00:03:07.080 --> 00:03:08.000
in springboard,

00:03:08.000 --> 00:03:09.850
we have to do something similar.

00:03:09.850 --> 00:03:15.210
We're going to be using a class file that provides implementation to this interface.

00:03:15.210 --> 00:03:19.180
And here is a class that I'm talking about.

00:03:19.180 --> 00:03:21.260
Let's take a look at what's inside it.

00:03:21.260 --> 00:03:28.000
So it has implemented the Web application initialize er and has also provided the

00:03:28.000 --> 00:03:31.200
implementation for on start up method,

00:03:31.200 --> 00:03:34.550
which is exact method that we have overridden.

00:03:34.550 --> 00:03:39.880
This method has pretty much done the same with this instruction.

00:03:39.880 --> 00:03:48.810
But what this logic is not a better off is is a convict file with the instances something

00:03:48.810 --> 00:03:49.490
like this,

00:03:49.490 --> 00:03:55.050
this is a glassful that we have created and then fed this into this particular method.

00:03:55.050 --> 00:04:01.400
But here it cannot make a guess on the conflict feel that we're going to create.

00:04:01.400 --> 00:04:05.320
We have to manually provide that in order to do so.

00:04:05.320 --> 00:04:07.950
We have a method that we can override.

00:04:07.950 --> 00:04:17.250
And that method is let me such for con feeder.

00:04:17.250 --> 00:04:26.310
And here is that method Let's overwrite this mattered here like so and then we're going to

00:04:26.310 --> 00:04:27.910
provide our conflict file.

00:04:27.910 --> 00:04:28.350
And,

00:04:28.350 --> 00:04:28.770
of course,

00:04:28.770 --> 00:04:30.010
in case offspring boot,

00:04:30.010 --> 00:04:33.450
this class is a configuration file.

00:04:33.450 --> 00:04:36.450
And with this we're done with what we have to do.

00:04:36.450 --> 00:04:41.650
All we need to do now is to build this project.

00:04:41.650 --> 00:04:47.490
I'm going to go toe run as may have been built.

00:04:47.490 --> 00:04:50.940
Package is the goal that I want to sell it.

00:04:50.940 --> 00:05:03.450
And after it's done,

00:05:03.450 --> 00:05:16.580
you can dry click on the project rawness Run on server has you mean that you have

00:05:16.580 --> 00:05:27.810
configured the Tomcats over inside Eclipse Click finish and you would see our application

00:05:27.810 --> 00:05:32.350
working right here.

00:05:32.350 --> 00:05:35.550
And there you go.

00:05:35.550 --> 00:05:40.580
Ignore all the messages in here.

00:05:40.580 --> 00:05:43.700
That is something that will talk about incoming videos

