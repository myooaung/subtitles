WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.420
Let's take a look at few random concepts involved in query methods.

00:00:04.420 --> 00:00:08.350
The first off wish that were Inter discusses the sorting mechanism.

00:00:08.350 --> 00:00:12.450
If you're using matter signature approach to ride your query,

00:00:12.450 --> 00:00:16.190
then you can just simply send the sort object in this manner.

00:00:16.190 --> 00:00:22.370
He would send the field by what you want to sort and in which direction should be ascending

00:00:22.370 --> 00:00:23.150
or descending.

00:00:23.150 --> 00:00:26.350
And this particular matter said nature,

00:00:26.350 --> 00:00:31.450
would help you sort all the students by age in ascending order.

00:00:31.450 --> 00:00:36.700
If you're writing a query using the equity annotation,

00:00:36.700 --> 00:00:40.400
then here's a signature for that.

00:00:40.400 --> 00:00:42.690
You just try to fetch all the students,

00:00:42.690 --> 00:00:45.750
but you would send us as a perimeter the sort object.

00:00:45.750 --> 00:00:47.880
And in this case,

00:00:47.880 --> 00:00:50.350
we're trying to sort student list by name,

00:00:50.350 --> 00:00:54.170
and by default it would be in ascending order,

00:00:54.170 --> 00:00:58.150
meaning that it would be sorted in alphabetical order.

00:00:58.150 --> 00:01:00.250
Since this is a string,

00:01:00.250 --> 00:01:06.510
let's talk about imagination as well.

00:01:06.510 --> 00:01:11.050
Pagination is one of the key features for better performance off the application,

00:01:11.050 --> 00:01:12.150
for example,

00:01:12.150 --> 00:01:17.140
think about us not aware you'd like to fetch all the list off students that ever existed

00:01:17.140 --> 00:01:18.490
and populate them on the U.

00:01:18.490 --> 00:01:18.800
I.

00:01:18.800 --> 00:01:21.590
You don't want to populate all the students,

00:01:21.590 --> 00:01:24.140
like 10,000 records in one go right?

00:01:24.140 --> 00:01:29.140
You want to fetch a few records at a time that the user doesn't have to wait for all the

00:01:29.140 --> 00:01:30.350
students to get fished?

00:01:30.350 --> 00:01:32.850
Imagination is the answer for that.

00:01:32.850 --> 00:01:35.850
It would let you fetch a set off students at that time,

00:01:35.850 --> 00:01:43.280
and we can directly integrate this with the U I components and sort off populate and

00:01:43.280 --> 00:01:44.800
provide the pagination feature.

00:01:44.800 --> 00:01:46.560
So for that purpose,

00:01:46.560 --> 00:01:52.980
we just have to send the page herbal object with some set limit the amount off students we

00:01:52.980 --> 00:01:54.150
want to fetch at the time,

00:01:54.150 --> 00:01:59.160
and they've actually taken look at a great example off it.

00:01:59.160 --> 00:02:00.490
In our previous courses,

00:02:00.490 --> 00:02:04.250
we're trying to populate the fields isn't pagination.

00:02:04.250 --> 00:02:06.250
And finally,

00:02:06.250 --> 00:02:09.090
let's talk about the modifying annotation.

00:02:09.090 --> 00:02:13.050
If you're writing a query where abduction of databases required,

00:02:13.050 --> 00:02:16.230
just as we're trying to do in this case,

00:02:16.230 --> 00:02:22.370
we're trying to do need to SQL query and grind the past couple of para meters agent mean.

00:02:22.370 --> 00:02:26.600
But the key thing to note is a statement update,

00:02:26.600 --> 00:02:28.070
and when you're doing so,

00:02:28.070 --> 00:02:31.240
you have to annotate the matter with modifying,

00:02:31.240 --> 00:02:41.440
and this is going to return an integer basically amount off records that got impacted all

00:02:41.440 --> 00:02:41.700
right,

00:02:41.700 --> 00:02:42.760
hope it makes sense

