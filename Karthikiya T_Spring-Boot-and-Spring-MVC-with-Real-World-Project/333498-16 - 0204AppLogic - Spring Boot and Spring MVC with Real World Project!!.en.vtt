WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.850
okay,

00:00:00.850 --> 00:00:04.190
It's time to bring life to our application by writing some logic.

00:00:04.190 --> 00:00:08.450
So now we're going to be introducing some presentation as well as the controller logic.

00:00:08.450 --> 00:00:09.850
But before that,

00:00:09.850 --> 00:00:13.550
we need to choose one off the template engines that are available in the market.

00:00:13.550 --> 00:00:17.350
One of the popular options would spring is time leaf,

00:00:17.350 --> 00:00:20.350
and there is also free marker,

00:00:20.350 --> 00:00:22.740
and we'll have Apache velocity,

00:00:22.740 --> 00:00:23.840
which is now off course,

00:00:23.840 --> 00:00:24.550
outdated.

00:00:24.550 --> 00:00:27.500
You can even use JSP without any problem,

00:00:27.500 --> 00:00:33.250
but the one that I've chosen for this particular video is a party free marker.

00:00:33.250 --> 00:00:37.290
If you're not familiar with the patchy free market,

00:00:37.290 --> 00:00:37.970
that's fine.

00:00:37.970 --> 00:00:41.020
If you're familiar with any other your technology like,

00:00:41.020 --> 00:00:41.360
say,

00:00:41.360 --> 00:00:42.220
for example,

00:00:42.220 --> 00:00:43.360
Jsp.

00:00:43.360 --> 00:00:48.930
You can understand free market pretty easily because all these your technologies are pretty

00:00:48.930 --> 00:00:50.230
much in the same page,

00:00:50.230 --> 00:00:52.370
and they pretty much have the same syntax.

00:00:52.370 --> 00:00:55.650
So this shouldn't be surprising to you.

00:00:55.650 --> 00:01:00.180
But one thing that we need to do is to add the starter dependency.

00:01:00.180 --> 00:01:02.280
I copied it from the Internet,

00:01:02.280 --> 00:01:03.480
and I have it handy,

00:01:03.480 --> 00:01:05.290
and so I'm basting it in here.

00:01:05.290 --> 00:01:09.640
I look under Shift F to do proper indentation,

00:01:09.640 --> 00:01:12.400
and then once you add the dependency.

00:01:12.400 --> 00:01:17.840
You need to do a maven update off the project so that all the dependencies,

00:01:17.840 --> 00:01:23.380
including the transit dependence is would be downloaded from the remote depositary to your

00:01:23.380 --> 00:01:25.830
local depository by moving.

00:01:25.830 --> 00:01:29.650
So let's do that real quick.

00:01:29.650 --> 00:01:34.750
So now we have all the free marker libraries in place.

00:01:34.750 --> 00:01:37.850
The next thing is to just introduce accord.

00:01:37.850 --> 00:01:39.190
Brother.

00:01:39.190 --> 00:01:41.730
We didn't talk about this particular dependency,

00:01:41.730 --> 00:01:43.250
which is added by default.

00:01:43.250 --> 00:01:45.250
Typical in any kind of a project.

00:01:45.250 --> 00:01:47.710
It would definitely have unit tests in place,

00:01:47.710 --> 00:01:48.070
Right?

00:01:48.070 --> 00:01:54.190
Enter Spring has added this dependency to test your application more on it at later point

00:01:54.190 --> 00:01:54.650
of time.

00:01:54.650 --> 00:01:58.850
So I already have the cord handed with me.

00:01:58.850 --> 00:02:05.300
Our goal off our application is to show an input field to the user along with the submit

00:02:05.300 --> 00:02:05.850
button.

00:02:05.850 --> 00:02:09.860
When the user enters his or her name and clicks a suburban button,

00:02:09.860 --> 00:02:14.950
the request would then go to the silver and sort of the controller.

00:02:14.950 --> 00:02:16.810
Based on the request.

00:02:16.810 --> 00:02:25.750
Mapping and the cost mapping text will match with this action texting here.

00:02:25.750 --> 00:02:33.540
And so we can say that the request would hit this particular method and in the process were

00:02:33.540 --> 00:02:35.850
also reading the Ural para meters.

00:02:35.850 --> 00:02:37.350
I mean,

00:02:37.350 --> 00:02:44.670
whatever the name that the user enters will be read and stored inside this perimeter name.

00:02:44.670 --> 00:02:46.480
And inside this method,

00:02:46.480 --> 00:02:50.210
we're just simply populating this particular object model and view.

00:02:50.210 --> 00:02:55.490
This is a view name that we want to render back along with the results,

00:02:55.490 --> 00:02:58.440
and I'm adding couple of attributes,

00:02:58.440 --> 00:03:01.950
which will be read from inside the view.

00:03:01.950 --> 00:03:04.850
So after we returned,

00:03:04.850 --> 00:03:08.650
this particular object spring framework will take it off,

00:03:08.650 --> 00:03:11.120
giving this object to the dispatcher soul.

00:03:11.120 --> 00:03:12.580
It dispatches.

00:03:12.580 --> 00:03:18.690
So that will take help from the View resolver to identify the right view based on the name

00:03:18.690 --> 00:03:20.280
as well as extension.

00:03:20.280 --> 00:03:26.950
And it would forward the model data This couple off attributes to that particular view,

00:03:26.950 --> 00:03:30.880
and so we were able to read the information from that view.

00:03:30.880 --> 00:03:35.550
So let's quickly introduce this particular page,

00:03:35.550 --> 00:03:37.700
which is going to be the home page,

00:03:37.700 --> 00:03:43.370
so it's going to have the name index dot water the technology that you use.

00:03:43.370 --> 00:03:43.830
In my case,

00:03:43.830 --> 00:03:44.630
it's free market,

00:03:44.630 --> 00:03:48.520
so it's going to be FTL is extension for free marker.

00:03:48.520 --> 00:03:53.080
We already have the templates directory,

00:03:53.080 --> 00:03:56.170
and here is where it would go,

00:03:56.170 --> 00:04:00.750
so it's going to be indexed art FTL.

00:04:00.750 --> 00:04:05.550
Similarly,

00:04:05.550 --> 00:04:11.170
I'm going to introduce another free market file to display the results,

00:04:11.170 --> 00:04:31.160
but do make sure that you name it but the exact name and there's just one last thing before

00:04:31.160 --> 00:04:34.030
we can magical run out application,

00:04:34.030 --> 00:04:36.850
its gentle just the controller logic.

00:04:36.850 --> 00:04:45.200
Let me copy this piece off code and create a new class file inside this.

00:04:45.200 --> 00:04:55.580
Hello World Controller.

00:04:55.580 --> 00:05:04.390
Dr Java Control shipped Oh,

00:05:04.390 --> 00:05:12.360
to import all the classes and intra faces and control shift eth.

00:05:12.360 --> 00:05:16.350
The court is indented properly anyway,

00:05:16.350 --> 00:05:20.210
and that's it was seen to have another off course,

00:05:20.210 --> 00:05:22.100
but it mentioned the package.

00:05:22.100 --> 00:05:24.410
Let's do that real quick.

00:05:24.410 --> 00:05:30.950
And will you believe me if I say that we're done,

00:05:30.950 --> 00:05:32.490
we're good to go.

00:05:32.490 --> 00:05:33.700
And on our application,

00:05:33.700 --> 00:05:35.670
the answer is yes.

00:05:35.670 --> 00:05:37.110
That's a beauty Offspring boot.

00:05:37.110 --> 00:05:40.600
So let's run this particular file now.

00:05:40.600 --> 00:05:45.210
We're definitely going to get into details off how this is working and stuff like that in a

00:05:45.210 --> 00:05:45.600
while.

00:05:45.600 --> 00:05:46.610
But for now,

00:05:46.610 --> 00:05:48.350
just run the application and see,

00:05:48.350 --> 00:05:50.670
and that's working out.

00:05:50.670 --> 00:05:51.450
Just bring boat.

00:05:51.450 --> 00:05:53.050
App it.

00:05:53.050 --> 00:05:53.770
Okay,

00:05:53.770 --> 00:05:57.850
And if you notice the results here,

00:05:57.850 --> 00:06:00.300
you would notice that the M.

00:06:00.300 --> 00:06:01.000
But it's over.

00:06:01.000 --> 00:06:03.950
It's started at Port 80 80.

00:06:03.950 --> 00:06:08.450
Even the soul that engine has been started.

00:06:08.450 --> 00:06:12.780
Even the have application context is created,

00:06:12.780 --> 00:06:16.250
including the route application context.

00:06:16.250 --> 00:06:24.050
And even the spring is able to identify they in the START FTL file,

00:06:24.050 --> 00:06:30.640
which will be the default page that gets rendered when we visit the your In our case,

00:06:30.640 --> 00:06:33.900
our summaries hosted in the same PC.

00:06:33.900 --> 00:06:46.250
So it's going to be a local host and let's go to browser and type in local host.

00:06:46.250 --> 00:06:49.270
And then 80 80 hit,

00:06:49.270 --> 00:06:51.850
enter and hopefully things will go well.

00:06:51.850 --> 00:06:53.330
Ah,

00:06:53.330 --> 00:06:55.950
something is terribly wrong.

00:06:55.950 --> 00:07:02.480
Let's take a look at what's going on inside the index start FTL file.

00:07:02.480 --> 00:07:04.350
How dare you go?

00:07:04.350 --> 00:07:07.050
We're supposed to pass this code.

00:07:07.050 --> 00:07:09.980
Sorry about that.

00:07:09.980 --> 00:07:10.850
Real quick.

00:07:10.850 --> 00:07:12.550
A quick tricks.

00:07:12.550 --> 00:07:15.280
Save the file.

00:07:15.280 --> 00:07:20.150
Stop the program and run it again.

00:07:20.150 --> 00:07:29.890
Everything is as expected.

00:07:29.890 --> 00:07:33.560
That's reload the page.

00:07:33.560 --> 00:07:37.920
Let me type in something you can type in your name.

00:07:37.920 --> 00:07:45.480
But I'm going to Stipe some something.

00:07:45.480 --> 00:07:48.400
Whatever it iss click submit.

00:07:48.400 --> 00:07:50.930
And there you go.

00:07:50.930 --> 00:07:51.480
It worked,

00:07:51.480 --> 00:07:55.000
But now the $1,000,000 question.

00:07:55.000 --> 00:07:57.030
How did this happen?

00:07:57.030 --> 00:08:00.500
This looks very magical,

00:08:00.500 --> 00:08:00.940
right?

00:08:00.940 --> 00:08:03.120
Well,

00:08:03.120 --> 00:08:07.350
the magic is happening in this particular instruction.

00:08:07.350 --> 00:08:09.470
I will explain it in a while

