WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.390
in this video will try to understand what is the model view controller,

00:00:03.390 --> 00:00:06.410
architecture or simply embassy architecture?

00:00:06.410 --> 00:00:10.080
Beat mobile applications or rebelsde applications.

00:00:10.080 --> 00:00:14.220
NBC is the most popular it is and patent to create enterprise applications.

00:00:14.220 --> 00:00:16.390
And in order to explain things better,

00:00:16.390 --> 00:00:22.380
I'm actually going to consider a use case where the user tries to log into his account to

00:00:22.380 --> 00:00:24.100
perform some meaningful action.

00:00:24.100 --> 00:00:25.250
For example,

00:00:25.250 --> 00:00:27.050
think about a banking application.

00:00:27.050 --> 00:00:29.350
A user would visit the bank website,

00:00:29.350 --> 00:00:31.540
try to enter his credentials,

00:00:31.540 --> 00:00:35.950
and then he will hit the log in button Hasson as he hits the log in button.

00:00:35.950 --> 00:00:40.870
The request will be sent to the DNS server from the client.

00:00:40.870 --> 00:00:42.480
When I say claimed,

00:00:42.480 --> 00:00:48.190
it can be a browser or it can be a mobile application or it can also be another application

00:00:48.190 --> 00:00:48.190
.

00:00:48.190 --> 00:00:49.850
Whatever the client is,

00:00:49.850 --> 00:00:54.530
the request would be sent to the D in a server stands for domain names.

00:00:54.530 --> 00:00:55.080
Over.

00:00:55.080 --> 00:00:59.740
The job of being a silver is to maintain the list off all the domain names with their

00:00:59.740 --> 00:01:01.690
corresponding I p address.

00:01:01.690 --> 00:01:03.810
So depending on the domain name,

00:01:03.810 --> 00:01:09.700
the to enter its corresponding I P address would be returned back to the client the point

00:01:09.700 --> 00:01:13.110
is then aware off the actual location of the silver.

00:01:13.110 --> 00:01:18.490
It will then try to establish the connection with the server in order to send or receive

00:01:18.490 --> 00:01:19.150
the requests.

00:01:19.150 --> 00:01:25.980
So once that lined established connection with the server using protocols like TCP or UDP,

00:01:25.980 --> 00:01:32.880
it will send the request from the plane using Hester DP to the server.

00:01:32.880 --> 00:01:34.900
Once the requesters to silver,

00:01:34.900 --> 00:01:39.920
the silver would delegate that request to Port 80 by the four.

00:01:39.920 --> 00:01:41.720
Port 80 is where all that should be.

00:01:41.720 --> 00:01:42.820
Request Woodland,

00:01:42.820 --> 00:01:50.150
and that's where the Web server are the Web container or so that container would be

00:01:50.150 --> 00:01:50.640
installed.

00:01:50.640 --> 00:01:51.350
Typically,

00:01:51.350 --> 00:01:54.550
if you have your Web server installed in any other port,

00:01:54.550 --> 00:01:59.150
then you have to explicitly mention that port number in the Ural itself.

00:01:59.150 --> 00:02:04.960
So once that it was lands in Port 80 it is a responsibility off the Web server to handle

00:02:04.960 --> 00:02:07.820
the request and the way it handles the request sees.

00:02:07.820 --> 00:02:10.990
It will take a look at the web dot XML file,

00:02:10.990 --> 00:02:13.180
which will have the mapping instructions,

00:02:13.180 --> 00:02:18.460
which means here you'll have banks that will map a particular You're a pattern with the

00:02:18.460 --> 00:02:19.550
specific sold it,

00:02:19.550 --> 00:02:20.880
for example.

00:02:20.880 --> 00:02:21.850
In our case,

00:02:21.850 --> 00:02:24.910
since the users trying to log in the u.

00:02:24.910 --> 00:02:30.780
R L may have the string slash log in So inside developed or xml file.

00:02:30.780 --> 00:02:36.090
We may have a mapping the chase whenever there is a you earl or a request that has slash

00:02:36.090 --> 00:02:36.660
log in.

00:02:36.660 --> 00:02:42.690
We want to delegate that call to particular so that for every Ural Patton there is a

00:02:42.690 --> 00:02:45.300
specific so that toe handle that request.

00:02:45.300 --> 00:02:46.460
So in case off,

00:02:46.460 --> 00:02:51.230
log in one off this so that would be taking the request and the job also,

00:02:51.230 --> 00:02:53.550
that is to control the flow of that request,

00:02:53.550 --> 00:02:56.480
and that's why it's called a controller.

00:02:56.480 --> 00:02:57.840
So once the request lands,

00:02:57.840 --> 00:03:03.970
and so that the soul it will have the logic to delegate that call to model the solar will

00:03:03.970 --> 00:03:07.920
also send the Ural perimeters like user name and the password.

00:03:07.920 --> 00:03:13.950
And as part of the model will have things like the business logic.

00:03:13.950 --> 00:03:18.680
Our anything related to interacting with the data base hit is where we would perform the

00:03:18.680 --> 00:03:20.780
transactions and gets awfully.

00:03:20.780 --> 00:03:27.360
JB hit is where the session beings would be reciting or so visits and gets off spring frame

00:03:27.360 --> 00:03:27.780
book.

00:03:27.780 --> 00:03:30.940
We have entities did act subject etcetera.

00:03:30.940 --> 00:03:33.690
Hold is together well,

00:03:33.690 --> 00:03:37.880
actually process the data and would interact with the database or money.

00:03:37.880 --> 00:03:39.350
Played the data with the data base.

00:03:39.350 --> 00:03:40.380
Finally,

00:03:40.380 --> 00:03:43.450
the job off mortal his to take the details,

00:03:43.450 --> 00:03:47.200
process them and give some kind of a response in the form off air.

00:03:47.200 --> 00:03:48.650
Simple data.

00:03:48.650 --> 00:03:50.160
In our case,

00:03:50.160 --> 00:03:52.040
we have sent the user name and password,

00:03:52.040 --> 00:03:55.920
and the model will have the logic to validate the user name and password.

00:03:55.920 --> 00:03:57.470
And depending on that,

00:03:57.470 --> 00:03:59.730
it would rather send true or false.

00:03:59.730 --> 00:04:01.010
Now do taken note.

00:04:01.010 --> 00:04:07.190
That model does not have any knowledge on the view logic like JSP hatched email,

00:04:07.190 --> 00:04:07.950
etcetera.

00:04:07.950 --> 00:04:12.900
All it cares about is raw data is just going to send the raw data.

00:04:12.900 --> 00:04:14.750
It is the responsibility of the soul.

00:04:14.750 --> 00:04:21.950
It toe wrap that data with the necessary presentation logic and then send the response back

00:04:21.950 --> 00:04:26.450
to the client so that it will be represented in some meaningful manner.

00:04:26.450 --> 00:04:29.800
And this is exactly what is a moral view.

00:04:29.800 --> 00:04:31.260
Controller architecture.

00:04:31.260 --> 00:04:35.350
We have a controller logic which will control the flow of the request,

00:04:35.350 --> 00:04:41.920
and we have the mortal which will take care off crossing the data and then sending back

00:04:41.920 --> 00:04:47.350
some kind of a response and it does not care about the presentation technologies.

00:04:47.350 --> 00:04:49.310
Hold the presentation logic.

00:04:49.310 --> 00:04:55.000
All it gives about is to process the data and then send back the data as a response.

00:04:55.000 --> 00:04:57.100
The control of will then take it off,

00:04:57.100 --> 00:05:03.400
wrapping that data with some view technology like JSP or Apache velocity cascading style

00:05:03.400 --> 00:05:04.100
sheets.

00:05:04.100 --> 00:05:04.760
Charles crept,

00:05:04.760 --> 00:05:05.450
etcetera.

00:05:05.450 --> 00:05:11.160
All such technologies will come in the category off of you because these are all meant for

00:05:11.160 --> 00:05:14.450
presentation just to improve the user experience.

00:05:14.450 --> 00:05:15.620
I mean,

00:05:15.620 --> 00:05:19.770
you just can show the raw data on the browser just doesn't look friendly at all.

00:05:19.770 --> 00:05:25.510
But the main advantage off using the embassy architecture is that we're encouraging

00:05:25.510 --> 00:05:26.960
separation off concerns.

00:05:26.960 --> 00:05:28.000
For example,

00:05:28.000 --> 00:05:33.480
a person who is working on View technologies does not need to know any off the technologies

00:05:33.480 --> 00:05:35.350
that fall in the model.

00:05:35.350 --> 00:05:36.250
Similarly,

00:05:36.250 --> 00:05:38.720
the developers were working in the mortal area.

00:05:38.720 --> 00:05:42.220
Doesn't need to bother much about the view technologies,

00:05:42.220 --> 00:05:43.850
because between these two,

00:05:43.850 --> 00:05:50.050
we have a controller that is kind off acting like a mediator to control the floor frequents

00:05:50.050 --> 00:05:53.150
and is helping and separating the concerns.

00:05:53.150 --> 00:05:55.700
If you have all these layers,

00:05:55.700 --> 00:06:00.880
club together and develop an application without following this architecture.

00:06:00.880 --> 00:06:01.760
Then,

00:06:01.760 --> 00:06:02.490
along with the data,

00:06:02.490 --> 00:06:04.360
you would also have to take care off,

00:06:04.360 --> 00:06:08.040
putting the tags that are something to do with the presentation and all.

00:06:08.040 --> 00:06:09.680
It becomes a lot off mess,

00:06:09.680 --> 00:06:14.130
and it's impractical to actually write an application in that manner is just going to

00:06:14.130 --> 00:06:20.220
result in a very cluttered code that is hard to maintain our rather impossible to maintain

00:06:20.220 --> 00:06:20.220
.

00:06:20.220 --> 00:06:21.460
So for that reason,

00:06:21.460 --> 00:06:24.650
embassy is almost like a standard for creating applications.

00:06:24.650 --> 00:06:30.050
One does that wanted with this approach is that if you wanted to switch to a different view

00:06:30.050 --> 00:06:30.900
technology,

00:06:30.900 --> 00:06:35.570
then it's bit off a work to actually make those changes.

00:06:35.570 --> 00:06:36.380
For example,

00:06:36.380 --> 00:06:40.450
say that you're currently using JSP has your view technology,

00:06:40.450 --> 00:06:42.500
and now you're trying to switch to,

00:06:42.500 --> 00:06:42.780
say,

00:06:42.780 --> 00:06:43.970
Apache velocity.

00:06:43.970 --> 00:06:48.300
Then you have to make a lot of changes in all the solar.

00:06:48.300 --> 00:06:51.840
It's in your application that might be a little messy.

00:06:51.840 --> 00:06:54.220
In order to address this kind of an issue,

00:06:54.220 --> 00:06:57.950
we have another pattern called the front control of Patton,

00:06:57.950 --> 00:07:02.950
and that is a pattern that is incorporated in spring MBC.

00:07:02.950 --> 00:07:07.550
But what you have seen right now is the typical floor family see application.

00:07:07.550 --> 00:07:09.410
I hope it makes sense.

00:07:09.410 --> 00:07:10.450
I will see you soon

