WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.720
Okay,

00:00:00.720 --> 00:00:03.000
let's revisit our previous slights and see,

00:00:03.000 --> 00:00:05.750
for perception about spring boot has improved a bit.

00:00:05.750 --> 00:00:09.350
So typically without spring boot.

00:00:09.350 --> 00:00:11.750
These are all the steps that you need to follow,

00:00:11.750 --> 00:00:13.450
but with spring boot,

00:00:13.450 --> 00:00:15.680
you need to follow the step number one.

00:00:15.680 --> 00:00:17.950
Create the Maven or Griddle project,

00:00:17.950 --> 00:00:22.270
but you don't have to follow this step Number two in here,

00:00:22.270 --> 00:00:27.860
which is to find the required dependencies or libraries that your project needs off course

00:00:27.860 --> 00:00:27.860
.

00:00:27.860 --> 00:00:30.150
We need to add the start to dependencies,

00:00:30.150 --> 00:00:34.300
but you don't have to add a whole list off libraries that your project ever needs.

00:00:34.300 --> 00:00:38.560
You just have to focus on what technologies you would need in your application,

00:00:38.560 --> 00:00:41.720
not what libraries he would need in your application,

00:00:41.720 --> 00:00:45.010
and that's going to save as significant amount of time.

00:00:45.010 --> 00:00:45.510
I mean,

00:00:45.510 --> 00:00:50.330
tell me if it is easier to find the one single start to dependency our 100 different

00:00:50.330 --> 00:00:51.980
library dependencies.

00:00:51.980 --> 00:00:55.290
Obviously you would prefer to find one tag,

00:00:55.290 --> 00:01:00.740
so I don considered this all that off a pain and would exclude from the list off things

00:01:00.740 --> 00:01:04.650
that you need to do in case offspring boot coming to step.

00:01:04.650 --> 00:01:09.110
Number three wouldn't installing the software wouldn't installing Tomcats overall,

00:01:09.110 --> 00:01:10.870
installed it or even configured it.

00:01:10.870 --> 00:01:14.850
It's all taken care by spring framework with an embedded silver,

00:01:14.850 --> 00:01:18.850
and same is the case with Step number four.

00:01:18.850 --> 00:01:20.760
Although we haven't used database,

00:01:20.760 --> 00:01:22.110
even if we had toe,

00:01:22.110 --> 00:01:25.050
we don't have to install a database software,

00:01:25.050 --> 00:01:28.450
and then off course went to ride the application logic.

00:01:28.450 --> 00:01:30.900
Coming to Step number six.

00:01:30.900 --> 00:01:33.370
Create a conflict while defining all your beans.

00:01:33.370 --> 00:01:40.760
We didn't define our dispatcher Sollett or the View resolver our even our controller.

00:01:40.760 --> 00:01:44.980
It's all taken care by spring boot and again,

00:01:44.980 --> 00:01:46.280
we didn't use database.

00:01:46.280 --> 00:01:47.940
But even if we have to use,

00:01:47.940 --> 00:01:52.350
you can live raised the auto configuration functionality and let the spring boat do the

00:01:52.350 --> 00:01:53.730
conflagration for you.

00:01:53.730 --> 00:01:54.990
But if you want Oh,

00:01:54.990 --> 00:01:55.390
all right,

00:01:55.390 --> 00:01:57.250
some of the perimeters you can do that.

00:01:57.250 --> 00:01:58.950
We'll talk about that later,

00:01:58.950 --> 00:02:03.570
and then you don't have to follow step number eight.

00:02:03.570 --> 00:02:05.650
In order to see your application working,

00:02:05.650 --> 00:02:08.910
you don't have to bundle your project as a viral archive,

00:02:08.910 --> 00:02:10.860
manually copy that war,

00:02:10.860 --> 00:02:12.520
file into your mom,

00:02:12.520 --> 00:02:13.950
gets over and then tested.

00:02:13.950 --> 00:02:16.430
That's a very long and lengthy process.

00:02:16.430 --> 00:02:18.390
You just have to run one single file.

00:02:18.390 --> 00:02:19.380
That's it.

00:02:19.380 --> 00:02:25.050
you will see your application working so pretty much Everything is automated by spring boot

00:02:25.050 --> 00:02:27.640
except step number one and five.

00:02:27.640 --> 00:02:30.230
And be happy that these steps are not automated.

00:02:30.230 --> 00:02:30.830
Otherwise,

00:02:30.830 --> 00:02:32.250
we don't have jobs today.

00:02:32.250 --> 00:02:37.990
That's more and try to understand definition.

00:02:37.990 --> 00:02:41.550
Now this definition will make 100% sense to you.

00:02:41.550 --> 00:02:42.140
Well,

00:02:42.140 --> 00:02:42.850
hopefully,

00:02:42.850 --> 00:02:49.050
springboard makes it easy to create a standalone production grade spring best applications

00:02:49.050 --> 00:02:52.810
that you can just run exactly what has happened.

00:02:52.810 --> 00:02:58.950
We take an opinionated view offspring platform and third party libraries,

00:02:58.950 --> 00:03:00.670
which means auto configuring,

00:03:00.670 --> 00:03:06.370
depending on the type off libraries that you add in your project or the type off stopped or

00:03:06.370 --> 00:03:10.900
dependence is that you add configuration is taken care by springboard.

00:03:10.900 --> 00:03:12.910
That's what the Stedman means.

00:03:12.910 --> 00:03:17.910
And so you can get started with minimum fasts,

00:03:17.910 --> 00:03:21.530
which means spring good will try to auto country where everything.

00:03:21.530 --> 00:03:22.900
But if you're not happy with it,

00:03:22.900 --> 00:03:24.650
or if you want to make some amendments,

00:03:24.650 --> 00:03:27.750
you still have the flexibility to do that.

00:03:27.750 --> 00:03:31.550
So majority off the job will be taken care by spring boot.

00:03:31.550 --> 00:03:34.910
You just have to take your a few minor things if you want to,

00:03:34.910 --> 00:03:40.150
and more spring boot applications need very little spring configuration,

00:03:40.150 --> 00:03:45.920
and the features would sound very obvious to you.

00:03:45.920 --> 00:03:46.420
Now,

00:03:46.420 --> 00:03:53.370
at least a few of them automatically configure component Centre Party libraries.

00:03:53.370 --> 00:03:54.390
Of course,

00:03:54.390 --> 00:03:55.150
this is true.

00:03:55.150 --> 00:03:57.420
It is very evident in our sample.

00:03:57.420 --> 00:04:03.840
Application creates standalone spring applications with temperate servers where a true

00:04:03.840 --> 00:04:07.950
provide opinionated started dependence is super true.

00:04:07.950 --> 00:04:14.810
Provide externalized configuration is something that will talk later and provide developer

00:04:14.810 --> 00:04:15.760
tools,

00:04:15.760 --> 00:04:18.830
which is again something We'll talk later.

00:04:18.830 --> 00:04:27.010
This there are little advanced use actuator advanced and provides testing you till it is

00:04:27.010 --> 00:04:28.200
not now.

00:04:28.200 --> 00:04:32.400
So at least you have some good overview on what is spring boot.

00:04:32.400 --> 00:04:36.250
And I believe you're convinced of the fact that it is going toe.

00:04:36.250 --> 00:04:40.280
Save a lot of developers time as the dollar,

00:04:40.280 --> 00:04:45.080
but don't have to pay too much attention on creating then Roman to run the application,

00:04:45.080 --> 00:04:50.750
but rather spend a lot of time in creating the application itself.

00:04:50.750 --> 00:04:54.950
And that's the major problem that springboard is trying to solve.

00:04:54.950 --> 00:04:56.230
All right,

00:04:56.230 --> 00:04:57.650
I hope it makes sense.

00:04:57.650 --> 00:04:59.090
Have a great day.

00:04:59.090 --> 00:04:59.970
I'll see you soon

