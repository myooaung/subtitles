1
00:00:00,940 --> 00:00:03,370
[Autogenerated] thanks to the AWS tool kit and the

2
00:00:03,370 --> 00:00:06,300
simplicity of using elastic beanstalk,

3
00:00:06,300 --> 00:00:11,440
it's fairly easy to publish an s p dot net core application to AWS the

4
00:00:11,440 --> 00:00:14,150
Toolkit as a context menu option to the project,

5
00:00:14,150 --> 00:00:18,340
which will then walk you through creating a configuration file.

6
00:00:18,340 --> 00:00:20,940
And then you trigger the tool kit to run that.

7
00:00:20,940 --> 00:00:24,840
What's nice is you can use that same configuration file to

8
00:00:24,840 --> 00:00:28,870
publish using the AWS extension to the dot net cli.

9
00:00:28,870 --> 00:00:32,110
In other words, publishing from the command line as well.

10
00:00:32,110 --> 00:00:36,410
Let's start with that context menu option published to AWS Beanstalk.

11
00:00:36,410 --> 00:00:39,040
It's right under Visual Studio's published option,

12
00:00:39,040 --> 00:00:43,340
both in the Context menu and in the build menu in the toolbar.

13
00:00:43,340 --> 00:00:47,170
There are a few short pages for configuring the published details.

14
00:00:47,170 --> 00:00:47,610
First,

15
00:00:47,610 --> 00:00:50,910
you need to let it know if you're going to deploy to a new

16
00:00:50,910 --> 00:00:54,320
application environment or redeployed to an existing one.

17
00:00:54,320 --> 00:00:56,680
In our case, we don't have any existing ones,

18
00:00:56,680 --> 00:01:00,140
so, of course, will be deploying to a new environment.

19
00:01:00,140 --> 00:01:02,210
You'll need to provide a name for the APP,

20
00:01:02,210 --> 00:01:05,420
which defaults to the project name and then a name for the

21
00:01:05,420 --> 00:01:08,550
environment that the application will be published in this

22
00:01:08,550 --> 00:01:10,310
is an E C to environment.

23
00:01:10,310 --> 00:01:12,480
In other words, a virtual machine.

24
00:01:12,480 --> 00:01:15,340
The drop down provides some suggestions for that name,

25
00:01:15,340 --> 00:01:17,400
but you can use any name you want.

26
00:01:17,400 --> 00:01:18,810
I'll grab the suggestion.

27
00:01:18,810 --> 00:01:21,080
Net core AP I def.

28
00:01:21,080 --> 00:01:24,660
Next is the or else that the application will be available on.

29
00:01:24,660 --> 00:01:29,830
You need to provide a unique sub domain on the elastic beanstalk dot com domain.

30
00:01:29,830 --> 00:01:33,250
I'll toss the word plural site in front of Net core AP I

31
00:01:33,250 --> 00:01:36,410
Dev and that domain name is available.

32
00:01:36,410 --> 00:01:37,880
Of course, for a production up,

33
00:01:37,880 --> 00:01:41,230
you can hide this behind your own neural on the next page.

34
00:01:41,230 --> 00:01:41,440
Yield.

35
00:01:41,440 --> 00:01:44,040
To find the compute power and security settings for the

36
00:01:44,040 --> 00:01:46,380
EEC two instance For the environment,

37
00:01:46,380 --> 00:01:49,210
you can choose from a lot of Windows servers versions,

38
00:01:49,210 --> 00:01:53,600
and the limits environments are just starting to become available is well.

39
00:01:53,600 --> 00:01:58,060
Since this is a dot net core application and cross platform,

40
00:01:58,060 --> 00:01:59,640
I'll choose the Lennox option.

41
00:01:59,640 --> 00:02:02,490
It's a little faster than creating an environment with

42
00:02:02,490 --> 00:02:05,020
Windows Server and for production APS.

43
00:02:05,020 --> 00:02:08,540
You also want to be considerate of licensing.

44
00:02:08,540 --> 00:02:12,140
However, the instance type he select is important.

45
00:02:12,140 --> 00:02:18,820
The free tier supplies T to micro and t three micro instances of easy to,

46
00:02:18,820 --> 00:02:23,360
so I'll scroll down, down, down and select T to micro.

47
00:02:23,360 --> 00:02:25,380
Next, you'll have the deployment process.

48
00:02:25,380 --> 00:02:29,930
Create a key pair of private and public keys where the private key gets

49
00:02:29,930 --> 00:02:34,190
stored on your computer and all name mine plural site demo.

50
00:02:34,190 --> 00:02:37,190
Now it's time to take into account the fact that when I

51
00:02:37,190 --> 00:02:42,980
created the artist database instance, I chose to do so in a new VPC,

52
00:02:42,980 --> 00:02:44,790
not the default vpc.

53
00:02:44,790 --> 00:02:50,370
Because of that, I need to check the use in non default VPC check box,

54
00:02:50,370 --> 00:02:53,890
which will give me the chance on the next page to indicate

55
00:02:53,890 --> 00:02:57,910
the correct VPC to use for the environment.

56
00:02:57,910 --> 00:02:59,160
If you don't check this,

57
00:02:59,160 --> 00:03:02,660
then the environment will go into the default VPC and you'll

58
00:03:02,660 --> 00:03:06,300
have to do a little extra work to enable it to connect the VPC

59
00:03:06,300 --> 00:03:08,470
where the RTs instances start.

60
00:03:08,470 --> 00:03:10,890
The next setting is really important,

61
00:03:10,890 --> 00:03:15,680
but it's a little bit hidden by the size of the publish options window.

62
00:03:15,680 --> 00:03:19,240
The relational database access setting at the bottom is

63
00:03:19,240 --> 00:03:21,230
critical to make sure that you're deployed.

64
00:03:21,230 --> 00:03:25,490
Application will be able to access the artist database that the

65
00:03:25,490 --> 00:03:28,440
APP is relying on when I expand the window,

66
00:03:28,440 --> 00:03:30,680
you can see there's a drop down box there,

67
00:03:30,680 --> 00:03:35,160
and when I drop it down, since I only have one RDS instance,

68
00:03:35,160 --> 00:03:36,530
there's only one item.

69
00:03:36,530 --> 00:03:40,000
It's the security group that's tied to the VPC,

70
00:03:40,000 --> 00:03:44,460
where my RTs sequel server instance lives by selecting that the

71
00:03:44,460 --> 00:03:49,660
deployment process will modify the security group on that vpc so

72
00:03:49,660 --> 00:03:53,600
that the EEC two instance where the application lives is allowed

73
00:03:53,600 --> 00:03:55,510
to connect to the database.

74
00:03:55,510 --> 00:04:00,060
Next Issa Page for specifying the non default vpc.

75
00:04:00,060 --> 00:04:03,270
If I hadn't checked the non default VPC check box,

76
00:04:03,270 --> 00:04:06,210
the wizard would skip over this page completely.

77
00:04:06,210 --> 00:04:11,450
The VPC drop down is showing the Onley non default VPC available in my region,

78
00:04:11,450 --> 00:04:13,730
and that's the one that created for the database.

79
00:04:13,730 --> 00:04:16,600
And I also gave it this nickname plural site RDS,

80
00:04:16,600 --> 00:04:22,120
so I could identify it more easily as a post remembering its assigned name V P.

81
00:04:22,120 --> 00:04:22,660
C.

82
00:04:22,660 --> 00:04:22,790
O.

83
00:04:22,790 --> 00:04:23,000
C.

84
00:04:23,000 --> 00:04:24,140
Two etcetera,

85
00:04:24,140 --> 00:04:28,840
The Wizard also pre selected the default security group tied to that VPC.

86
00:04:28,840 --> 00:04:32,200
You'll need to choose at least one public sub net and by default,

87
00:04:32,200 --> 00:04:35,480
the VPC has one for each zone in the region.

88
00:04:35,480 --> 00:04:36,730
I'm selecting all three,

89
00:04:36,730 --> 00:04:41,070
although for simple demo where set up any one of them should suffice.

90
00:04:41,070 --> 00:04:45,870
The next pages pre populated with some AWS roles that the application needs.

91
00:04:45,870 --> 00:04:46,710
The first one.

92
00:04:46,710 --> 00:04:50,040
The role for the deployed application will default to

93
00:04:50,040 --> 00:04:53,740
AWS Elastic Beanstalk E C to roll.

94
00:04:53,740 --> 00:04:55,560
But watch out for this.

95
00:04:55,560 --> 00:04:57,380
It does look just right.

96
00:04:57,380 --> 00:05:02,520
But if you don't have any rules yet, it will create this default for you,

97
00:05:02,520 --> 00:05:06,280
but it's gonna be empty with no permissions at all.

98
00:05:06,280 --> 00:05:09,860
And then it's gonna be your job to specify this permissions.

99
00:05:09,860 --> 00:05:13,240
So let's not go that route for this demo.

100
00:05:13,240 --> 00:05:16,520
It will be a lot easier if you create a new role

101
00:05:16,520 --> 00:05:20,910
based on the power user role again, not for production up,

102
00:05:20,910 --> 00:05:23,050
but great for this demo.

103
00:05:23,050 --> 00:05:26,590
So click the drop down and there two sections On the top is a

104
00:05:26,590 --> 00:05:30,480
list of templates for new roles and on the bottom custom URLs

105
00:05:30,480 --> 00:05:32,300
that already exist in your account.

106
00:05:32,300 --> 00:05:36,160
We're going to create a new one based on the power user access,

107
00:05:36,160 --> 00:05:39,040
so I'll choose that and then close to drop down.

108
00:05:39,040 --> 00:05:43,430
The default role that we've got for the service permissions is just fine.

109
00:05:43,430 --> 00:05:46,140
So now we can go to the next page.

110
00:05:46,140 --> 00:05:49,400
This next page also is pre populated correctly,

111
00:05:49,400 --> 00:05:54,500
so I'll go to the next and last page, which just shows a summary of the options.

112
00:05:54,500 --> 00:05:57,480
And here I can finally click on Deploy to get this

113
00:05:57,480 --> 00:06:00,440
going as it starts doing its job.

114
00:06:00,440 --> 00:06:04,600
I want to point out the status messages in the lower left hand corner.

115
00:06:04,600 --> 00:06:05,980
They do go by quickly,

116
00:06:05,980 --> 00:06:09,970
but I think they give some interesting insight into how the application

117
00:06:09,970 --> 00:06:13,340
is uploaded and how the environment is constructed.

118
00:06:13,340 --> 00:06:16,500
So here's a quick review of them in advance.

119
00:06:16,500 --> 00:06:19,940
First, it tells us it's publishing the configuration.

120
00:06:19,940 --> 00:06:22,240
Not only does that get stored on your computer,

121
00:06:22,240 --> 00:06:25,620
but it will get stored up on AWS is well,

122
00:06:25,620 --> 00:06:29,010
then it tells us it's creating the key pair plural site demo.

123
00:06:29,010 --> 00:06:32,040
And then the status says it's starting deployment to the

124
00:06:32,040 --> 00:06:34,740
AWS elastic beanstalk environment.

125
00:06:34,740 --> 00:06:35,890
Net core AP.

126
00:06:35,890 --> 00:06:37,220
I dash deaf.

127
00:06:37,220 --> 00:06:39,300
The next status message is up.

128
00:06:39,300 --> 00:06:42,650
Loading application deployment package to Amazon is three.

129
00:06:42,650 --> 00:06:44,930
It zipped up the necessary components of the

130
00:06:44,930 --> 00:06:47,770
application and is storing them on us three.

131
00:06:47,770 --> 00:06:49,330
And when the environments ready,

132
00:06:49,330 --> 00:06:53,560
it'll deploy from the S three container into the EEC two instance.

133
00:06:53,560 --> 00:06:56,260
Then we see the progress of the upload 1%.

134
00:06:56,260 --> 00:06:58,240
2% 3% etcetera.

135
00:06:58,240 --> 00:07:03,500
Once the upload is complete, the next status messages are creating application.

136
00:07:03,500 --> 00:07:03,700
Net.

137
00:07:03,700 --> 00:07:07,790
Corey P I created E C two security group.

138
00:07:07,790 --> 00:07:10,740
Then the message says it's creating the new environment.

139
00:07:10,740 --> 00:07:11,430
This is the E.

140
00:07:11,430 --> 00:07:11,630
C.

141
00:07:11,630 --> 00:07:12,940
Two instance.

142
00:07:12,940 --> 00:07:16,330
At the same time, a new file pops into the project.

143
00:07:16,330 --> 00:07:19,220
It's a Jace on file with the configuration options I

144
00:07:19,220 --> 00:07:21,480
selected in the Polish Wizard.

145
00:07:21,480 --> 00:07:25,700
So the environments there now it's time for elastic being stock to get the

146
00:07:25,700 --> 00:07:30,980
application that it sent to S three into the new environment.

147
00:07:30,980 --> 00:07:32,870
After everything's been uploaded,

148
00:07:32,870 --> 00:07:35,660
the toolkit opens up the environment status window,

149
00:07:35,660 --> 00:07:39,110
and we can watch the rest of the steps in its events window.

150
00:07:39,110 --> 00:07:40,690
Once I click the deploy button,

151
00:07:40,690 --> 00:07:43,580
the whole process took a little under three minutes.

152
00:07:43,580 --> 00:07:46,410
And if I had chosen to create a Windows environment

153
00:07:46,410 --> 00:07:48,480
that would be closer to five minutes,

154
00:07:48,480 --> 00:07:53,470
and at the end we get a status message telling us the environment is healthy and

155
00:07:53,470 --> 00:07:56,830
the event also indicates that the application is available.

156
00:07:56,830 --> 00:08:00,830
And at the top of this window is a you Earl for the application.

157
00:08:00,830 --> 00:08:03,640
Of course, I've got to click on that.

158
00:08:03,640 --> 00:08:05,530
Once I'm at the base URL,

159
00:08:05,530 --> 00:08:08,190
I'll start by checking the weather forecast controller to

160
00:08:08,190 --> 00:08:10,540
make sure that the A p I is working.

161
00:08:10,540 --> 00:08:16,000
But it's not working. I know exactly why not.

