1
00:00:02,180 --> 00:00:04,970
[Autogenerated] you can create these instances directly in the online

2
00:00:04,970 --> 00:00:08,290
console as well as from the toolkit for visual studio.

3
00:00:08,290 --> 00:00:10,630
And while I won't be working with him in this course,

4
00:00:10,630 --> 00:00:14,440
I do want you to know that there is a command line interface for

5
00:00:14,440 --> 00:00:18,730
AWS as well as the AWS Tools for Power Shell.

6
00:00:18,730 --> 00:00:22,740
Two other great options not only for creating RTs database

7
00:00:22,740 --> 00:00:28,040
instances but also for performing myriad tasks on AWS.

8
00:00:28,040 --> 00:00:31,130
So I'll do it from the tool kit and once it's created,

9
00:00:31,130 --> 00:00:34,660
will take a look at what the tool kit exposes about that instance.

10
00:00:34,660 --> 00:00:37,320
Then we'll jump to the console to see what the consul

11
00:00:37,320 --> 00:00:40,220
management allows you to see and adjust related to.

12
00:00:40,220 --> 00:00:41,340
That instance.

13
00:00:41,340 --> 00:00:43,720
If you're following along, be prepared toe,

14
00:00:43,720 --> 00:00:47,640
wait about 10 minutes for that database to be ready to work with.

15
00:00:47,640 --> 00:00:51,210
Once AWS begins the creation process,

16
00:00:51,210 --> 00:00:53,920
the options you choose will impact the amount of time

17
00:00:53,920 --> 00:00:55,750
so we'll go for minimal options.

18
00:00:55,750 --> 00:00:59,870
Since this is just for demo purposes, why does it take so long?

19
00:00:59,870 --> 00:01:03,020
AWS isn't just creating a database server.

20
00:01:03,020 --> 00:01:06,040
It also has to create a W s resource is for that

21
00:01:06,040 --> 00:01:08,550
server to be running on for example,

22
00:01:08,550 --> 00:01:12,600
it needs to create a virtual machine for the server to be installed in,

23
00:01:12,600 --> 00:01:17,150
and also set aside what's called a V P C or virtual private cloud.

24
00:01:17,150 --> 00:01:20,810
It's also allocating storage as well as other resource is.

25
00:01:20,810 --> 00:01:23,060
And these are all things that allow your RTs

26
00:01:23,060 --> 00:01:26,540
instance to be fully managed by AWS.

27
00:01:26,540 --> 00:01:31,710
I do want to be clear about the terms I'm using related to RTs databases.

28
00:01:31,710 --> 00:01:36,840
There are database instances, which is essentially a database server,

29
00:01:36,840 --> 00:01:39,450
So this is where you specify the database engine,

30
00:01:39,450 --> 00:01:43,040
the compute power of the region and other facets about the instance.

31
00:01:43,040 --> 00:01:44,750
Once the instance exists,

32
00:01:44,750 --> 00:01:48,740
you can then create and work with data bases inside the instance,

33
00:01:48,740 --> 00:01:51,540
and you can create multiple instances.

34
00:01:51,540 --> 00:01:54,070
But again, because of the free tier,

35
00:01:54,070 --> 00:01:59,130
you should really be aware of how many hours the instances using Remember,

36
00:01:59,130 --> 00:02:02,740
you get 750 hours free each month.

37
00:02:02,740 --> 00:02:07,020
If one database instance is running for a month with 30 days in it,

38
00:02:07,020 --> 00:02:09,060
that 720 hours.

39
00:02:09,060 --> 00:02:11,800
If you've got multiple instances running as you

40
00:02:11,800 --> 00:02:13,740
might be when you're experimenting,

41
00:02:13,740 --> 00:02:17,080
you'll need to be diligent about removing instances that you don't

42
00:02:17,080 --> 00:02:21,040
really need when I first began with AWS and RTs.

43
00:02:21,040 --> 00:02:23,440
I did create a whole bunch of instances.

44
00:02:23,440 --> 00:02:27,210
I wanted to see things like if it took longer to create one from the tool cat,

45
00:02:27,210 --> 00:02:30,080
then from the console, which it doesn't they're about the same.

46
00:02:30,080 --> 00:02:30,640
Or,

47
00:02:30,640 --> 00:02:35,030
if choosing automated backups extends the initial start up time and

48
00:02:35,030 --> 00:02:38,010
it does because it creates a backup right away.

49
00:02:38,010 --> 00:02:41,500
I was also curious of sequel Server took longer to create than,

50
00:02:41,500 --> 00:02:43,340
for example, my sequel.

51
00:02:43,340 --> 00:02:44,530
And yes, it does.

52
00:02:44,530 --> 00:02:46,170
But not by much time.

53
00:02:46,170 --> 00:02:49,420
Because of all this, I had about five instances running,

54
00:02:49,420 --> 00:02:53,220
and it didn't take long before I got an email from A W s warning me

55
00:02:53,220 --> 00:03:00,000
that my 750 hours was already dwindling down. So do pay attention to that.

