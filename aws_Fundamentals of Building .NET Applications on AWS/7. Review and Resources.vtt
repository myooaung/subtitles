WEBVTT
1
00:00:01.940 --> 00:00:05.090
[Autogenerated] Let's do a quick review of how we got here after

2
00:00:05.090 --> 00:00:08.820
learning a bit about AWS Relational database service,

3
00:00:08.820 --> 00:00:13.010
and that we can use 750 hours a month with that freak

4
00:00:13.010 --> 00:00:16.090
here we created a new database instance,

5
00:00:16.090 --> 00:00:18.180
which is essentially a database server.

6
00:00:18.180 --> 00:00:21.820
Using the toolkit I chose Sequel Server expresses the engine,

7
00:00:21.820 --> 00:00:25.940
and it was important to choose options that are covered by the free tier.

8
00:00:25.940 --> 00:00:29.050
Specifically, that the compute instance.

9
00:00:29.050 --> 00:00:33.670
Size is micro and the storage is 20 gigs.

10
00:00:33.670 --> 00:00:37.680
We define this toe also create a new virtual private cloud.

11
00:00:37.680 --> 00:00:44.550
And remember, a VPC is a logically isolated section of AWS is cloud.

12
00:00:44.550 --> 00:00:49.060
Then we needed to be sure that that VPC was publicly accessible.

13
00:00:49.060 --> 00:00:54.730
That is, it can be accessed from outside of AWS that's still behind a firewall.

14
00:00:54.730 --> 00:00:59.490
So the tool kit made sure that my local I p was allowed through.

15
00:00:59.490 --> 00:01:04.110
The only other significant choice was to avoid automated backups so

16
00:01:04.110 --> 00:01:07.260
that it wouldn't had extra time to the creation.

17
00:01:07.260 --> 00:01:09.060
And once I fired it off,

18
00:01:09.060 --> 00:01:12.910
it took about 10 minutes for that DB instance to be ready,

19
00:01:12.910 --> 00:01:14.180
and once it was ready,

20
00:01:14.180 --> 00:01:18.070
we looked at some of the options from managing it from the tool kit as well

21
00:01:18.070 --> 00:01:21.690
as more options for managing it in the console online.

22
00:01:21.690 --> 00:01:24.370
And finally we had a little fun connecting to the

23
00:01:24.370 --> 00:01:26.980
database instance inside of Visual Studio,

24
00:01:26.980 --> 00:01:29.240
where we saw the system databases.

25
00:01:29.240 --> 00:01:32.810
Then I opened it up in Azure Data Studio and created a

26
00:01:32.810 --> 00:01:35.890
new test database inside that instance.

27
00:01:35.890 --> 00:01:39.870
Now, with the DB instance ready and waiting will use it for our data.

28
00:01:39.870 --> 00:01:43.240
Persistence in an s p dot net core a p I,

29
00:01:43.240 --> 00:01:46.340
which will then deploy to the AWS cloud.

30
00:01:46.340 --> 00:01:49.770
Here are links to relevant resource is including some that

31
00:01:49.770 --> 00:01:52.640
I explicitly mentioned in this module.

32
00:01:52.640 --> 00:02:01.000
I'm Julie Lierman and thanks again for watching fundamentals of building dot net applications on AWS.

