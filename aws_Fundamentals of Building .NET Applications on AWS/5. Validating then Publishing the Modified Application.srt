1
00:00:01,090 --> 00:00:03,830
[Autogenerated] I'm just about ready to redeploy the application,

2
00:00:03,830 --> 00:00:07,960
but I do want to test it out still in visual studio to make sure it's working.

3
00:00:07,960 --> 00:00:08,860
And I can do that,

4
00:00:08,860 --> 00:00:11,320
thanks to the fact that I pointed the APP settings

5
00:00:11,320 --> 00:00:13,940
development filed to my tool kits profile.

6
00:00:13,940 --> 00:00:17,750
I do want to be sure you're 100% confident that the user and

7
00:00:17,750 --> 00:00:21,070
password aren't coming from the US Peanuts secrets,

8
00:00:21,070 --> 00:00:23,640
but truly coming from AWS.

9
00:00:23,640 --> 00:00:27,640
So the first thing I'll do is open the secrets and change the property.

10
00:00:27,640 --> 00:00:31,960
Name of the password from DB password to DB Password X so and

11
00:00:31,960 --> 00:00:34,280
configurations looking for D B password.

12
00:00:34,280 --> 00:00:35,810
It won't see that,

13
00:00:35,810 --> 00:00:39,030
and there are no more DB password properties anywhere in

14
00:00:39,030 --> 00:00:41,780
this application or on my computer.

15
00:00:41,780 --> 00:00:45,240
A W S will be the only source for that property.

16
00:00:45,240 --> 00:00:49,150
I've got a break point in my startup class at the point that my code is reading

17
00:00:49,150 --> 00:00:52,960
the configurations so we can take a look at what it's found.

18
00:00:52,960 --> 00:00:58,620
And when I drill into configuration notice that it now has seven providers.

19
00:00:58,620 --> 00:01:02,710
Previously, there were only six and noticed the last provider here.

20
00:01:02,710 --> 00:01:03,870
It's the new one.

21
00:01:03,870 --> 00:01:07,270
The systems manager configuration provider.

22
00:01:07,270 --> 00:01:09,830
That's from the AWS extension,

23
00:01:09,830 --> 00:01:14,490
and it's populated with all the parameters that start with the plural site path,

24
00:01:14,490 --> 00:01:17,580
as I configured it to do in the program class.

25
00:01:17,580 --> 00:01:20,720
And here are the two properties Phoebe password in DB User.

26
00:01:20,720 --> 00:01:23,640
And again, I've just masked the password value here,

27
00:01:23,640 --> 00:01:27,120
even if I hadn't modified the DB password property name in the

28
00:01:27,120 --> 00:01:31,210
Secret Start Jason file because the systems manager provider

29
00:01:31,210 --> 00:01:33,620
comes later than the Secret start.

30
00:01:33,620 --> 00:01:38,960
Jason Provider, the systems manager, will override any matching property names,

31
00:01:38,960 --> 00:01:41,940
whether they're in the secrets or any of the other earlier

32
00:01:41,940 --> 00:01:44,670
providers when they continue running the APP.

33
00:01:44,670 --> 00:01:47,480
Here's the authors controller output in my browser,

34
00:01:47,480 --> 00:01:50,310
and when I scroll down I see that special bit of data

35
00:01:50,310 --> 00:01:54,150
that I created in the RDS database by adding the words

36
00:01:54,150 --> 00:01:55,890
coming soon to the book's title.

37
00:01:55,890 --> 00:01:59,030
So I know that everything's flowing through properly.

38
00:01:59,030 --> 00:02:01,860
The settings that I added to app settings development.

39
00:02:01,860 --> 00:02:06,380
Jason allowed visual Studio to use the Tool Kits profile,

40
00:02:06,380 --> 00:02:09,280
which has theater procreate permissions to access the

41
00:02:09,280 --> 00:02:11,750
systems manager and the parameter store.

42
00:02:11,750 --> 00:02:15,440
That file won't get packaged up with the application when I deploy it,

43
00:02:15,440 --> 00:02:16,240
though,

44
00:02:16,240 --> 00:02:21,510
and we know that the EEC two instance that hosts the application does have

45
00:02:21,510 --> 00:02:25,950
permission to access the VPC that hosts the RTs database.

46
00:02:25,950 --> 00:02:29,780
So when we deploy the up, all of that should work seamlessly.

47
00:02:29,780 --> 00:02:32,630
Remember, the problem wasn't those permissions?

48
00:02:32,630 --> 00:02:35,940
It was that we didn't have the credentials those secrets

49
00:02:35,940 --> 00:02:39,360
available anywhere on AWS before a deploy.

50
00:02:39,360 --> 00:02:42,580
I'm just gonna go back to the secrets and fix that password property

51
00:02:42,580 --> 00:02:45,540
name so that it doesn't trip me up in the future when I'm to bugging or

52
00:02:45,540 --> 00:02:48,000
just running the application for my computer.

53
00:02:48,000 --> 00:02:49,360
It shouldn't matter, really,

54
00:02:49,360 --> 00:02:52,990
because the systems manager configuration will take care of it.

55
00:02:52,990 --> 00:02:57,390
But it's just not a good idea to leave garbage code in your code base.

56
00:02:57,390 --> 00:02:59,940
Now it's time to republish the APP again,

57
00:02:59,940 --> 00:03:02,870
and this will be just like the last time I republished it.

58
00:03:02,870 --> 00:03:06,660
Remember, when choosing to deploy to an existing environment,

59
00:03:06,660 --> 00:03:10,000
you have to select the environment, not just the application name,

60
00:03:10,000 --> 00:03:12,930
before the next button will be available with click on,

61
00:03:12,930 --> 00:03:17,200
there are no other settings to change, so I'll go ahead and deploy,

62
00:03:17,200 --> 00:03:20,470
and again this process will zip up the application assets,

63
00:03:20,470 --> 00:03:24,500
upload them to S three and then Beanstalk can grab the

64
00:03:24,500 --> 00:03:27,380
application from there and install it onto the E.

65
00:03:27,380 --> 00:03:27,590
C.

66
00:03:27,590 --> 00:03:28,740
Two instance.

67
00:03:28,740 --> 00:03:29,510
When it's done,

68
00:03:29,510 --> 00:03:34,000
I'll go ahead and click the URL link and again chose because it's my habit.

69
00:03:34,000 --> 00:03:35,220
All first, validate that.

70
00:03:35,220 --> 00:03:38,380
The a P I itself is working by hitting the weather

71
00:03:38,380 --> 00:03:41,040
forecast controller and it ISS.

72
00:03:41,040 --> 00:03:45,760
So now it's on to the author's controller from the deployed app.

73
00:03:45,760 --> 00:03:47,580
That's on AWS now.

74
00:03:47,580 --> 00:03:49,200
And there's the correct output.

75
00:03:49,200 --> 00:03:51,690
The data from my RTs database.

76
00:03:51,690 --> 00:03:56,210
So the deployed app is reading my database credentials

77
00:03:56,210 --> 00:03:59,340
from the Systems Manager parameter store,

78
00:03:59,340 --> 00:04:04,220
then connecting to the VPC where my database lives and then using

79
00:04:04,220 --> 00:04:07,640
the connection string and those credentials toe executed query on

80
00:04:07,640 --> 00:04:12,330
the database by way of entity framework And when it came to

81
00:04:12,330 --> 00:04:13,730
setting up the environments.

82
00:04:13,730 --> 00:04:16,410
And all the resource is that the publish APP needs

83
00:04:16,410 --> 00:04:19,590
grabbing the application assets, publishing them onto the E.

84
00:04:19,590 --> 00:04:26,000
C. Two instance, elastic beanstalk is what took care of all of those things for me.

