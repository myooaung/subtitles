1
00:00:01,040 --> 00:00:04,340
[Autogenerated] AWS has a variety of container services that

2
00:00:04,340 --> 00:00:07,820
coordinate to provide you the right sized solution.

3
00:00:07,820 --> 00:00:12,400
You can store your doctor images on AWS and choose from two orchestrators.

4
00:00:12,400 --> 00:00:15,690
All containers run in E C two instances,

5
00:00:15,690 --> 00:00:17,760
and no matter what workflow you choose,

6
00:00:17,760 --> 00:00:21,240
the container instances are managed by AWS.

7
00:00:21,240 --> 00:00:24,740
But the various options do give you different levels of control.

8
00:00:24,740 --> 00:00:30,090
And AWS also has tools to make the deployment and management much easier.

9
00:00:30,090 --> 00:00:33,870
Elastic beanstalk is one option which you're already familiar with,

10
00:00:33,870 --> 00:00:39,000
and in this scenario you can think of that as a platform as a service option.

11
00:00:39,000 --> 00:00:42,920
The other is called fargate, which takes care of even more tasks,

12
00:00:42,920 --> 00:00:47,610
and you can think of fargate as a container as a service option.

13
00:00:47,610 --> 00:00:48,040
E C.

14
00:00:48,040 --> 00:00:51,210
R or Elastic Container Registry is the A.

15
00:00:51,210 --> 00:00:55,980
W s service that stores your docker images and partners with other services.

16
00:00:55,980 --> 00:00:57,960
When it's time to create containers,

17
00:00:57,960 --> 00:01:04,740
PCs or elastic container service is Amazon's proprietary container orchestrator,

18
00:01:04,740 --> 00:01:04,980
E.

19
00:01:04,980 --> 00:01:06,010
K s,

20
00:01:06,010 --> 00:01:10,230
which is elastic coup Bernetti service is for those who want to

21
00:01:10,230 --> 00:01:13,290
use kubernetes as their container orchestrator.

22
00:01:13,290 --> 00:01:17,720
You can just deploy your container directly into easy to instances,

23
00:01:17,720 --> 00:01:22,020
and if you want to be responsible for controlling the EEC to itself.

24
00:01:22,020 --> 00:01:23,640
You can take that path,

25
00:01:23,640 --> 00:01:27,300
or you can leverage elastic beanstalk to take care of all

26
00:01:27,300 --> 00:01:29,540
of that devil hoppsy stuff for you.

27
00:01:29,540 --> 00:01:32,570
One thing to be aware of is that if you do want to use

28
00:01:32,570 --> 00:01:35,570
elastic beanstalk to deploy to containers,

29
00:01:35,570 --> 00:01:37,610
you'll need to do that from the console.

30
00:01:37,610 --> 00:01:42,760
That particular path isn't supported in the AWS toolkit for Visual Studio.

31
00:01:42,760 --> 00:01:46,660
Fargate is a service that fully takes care of deploying and

32
00:01:46,660 --> 00:01:50,500
managing your containers in either E C S or E.

33
00:01:50,500 --> 00:01:55,110
K s, so you don't have to be responsible for managing the orchestration at all.

34
00:01:55,110 --> 00:01:59,960
It deploys and provision containers and their servers and manages thumb for you.

35
00:01:59,960 --> 00:02:01,720
And it's a server lis option.

36
00:02:01,720 --> 00:02:10,000
So that's also beneficial when it's time to think about the fees for compute time and Fargate is what will be using

