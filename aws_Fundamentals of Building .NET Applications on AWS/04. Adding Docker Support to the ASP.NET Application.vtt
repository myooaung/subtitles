WEBVTT
1
00:00:01.040 --> 00:00:04.130
[Autogenerated] Once you've got your development environment set up for Docker,

2
00:00:04.130 --> 00:00:07.410
we can focus on our A s P dot net core application,

3
00:00:07.410 --> 00:00:11.400
which also needs to be set up to be Doc Arised,

4
00:00:11.400 --> 00:00:12.200
in other words,

5
00:00:12.200 --> 00:00:15.820
has the code that Dr will need to build an image with the

6
00:00:15.820 --> 00:00:20.140
application in it and run a container based on that image.

7
00:00:20.140 --> 00:00:24.340
That's something that's really easy to do with the doctor extension.

8
00:00:24.340 --> 00:00:26.530
And also to be very clear,

9
00:00:26.530 --> 00:00:32.170
this task has nothing to do with AWS Tool kit or with AWS.

10
00:00:32.170 --> 00:00:35.150
Start by right clicking on the project Goto.

11
00:00:35.150 --> 00:00:38.190
Add on the menu and you'll see a pair of options that are

12
00:00:38.190 --> 00:00:41.420
available because of the container support tools.

13
00:00:41.420 --> 00:00:47.070
One is container orchestration support, and the other is darker support.

14
00:00:47.070 --> 00:00:48.900
Choose darker support.

15
00:00:48.900 --> 00:00:53.140
You'll be asked if you want this to be a Linux or Windows based container,

16
00:00:53.140 --> 00:00:56.430
and you do want it to be for Lennox, which is the default.

17
00:00:56.430 --> 00:00:59.960
If you were using a classic SP dot net application,

18
00:00:59.960 --> 00:01:01.840
then you would need to choose Windows.

19
00:01:01.840 --> 00:01:05.390
But since .net course cross platform, we can use Lennox,

20
00:01:05.390 --> 00:01:07.390
which is much lighter weight.

21
00:01:07.390 --> 00:01:12.540
Then click OK, and all that's happened is that two new files have been added.

22
00:01:12.540 --> 00:01:17.670
One is this docker file, but the container tools are doing something else.

23
00:01:17.670 --> 00:01:19.040
They're not adding more support.

24
00:01:19.040 --> 00:01:20.110
That's all done.

25
00:01:20.110 --> 00:01:24.680
But by default, the container tools will automatically spin up a container.

26
00:01:24.680 --> 00:01:25.610
Instance.

27
00:01:25.610 --> 00:01:30.740
If it sees that there's a Dr file, let's take a look at that docker file.

28
00:01:30.740 --> 00:01:36.170
By default, the tools have built what's referred to as a multi stage docker file.

29
00:01:36.170 --> 00:01:39.720
I'll give you a very quick overview of what's going on here,

30
00:01:39.720 --> 00:01:43.210
although to be honest, you could get away without knowing the details.

31
00:01:43.210 --> 00:01:46.480
But I won't sleep well tonight if I didn't ensure you

32
00:01:46.480 --> 00:01:48.750
have some clue about what's going on.

33
00:01:48.750 --> 00:01:52.080
It starts by building an image based on the official

34
00:01:52.080 --> 00:01:54.910
s p dot net core runtime image.

35
00:01:54.910 --> 00:01:59.330
Then it creates a second image that's based on the official

36
00:01:59.330 --> 00:02:03.750
STK image and that will have the ability to run things like

37
00:02:03.750 --> 00:02:06.840
dotnet build and other STK tasks.

38
00:02:06.840 --> 00:02:07.780
And in this stage,

39
00:02:07.780 --> 00:02:13.160
it copies your project into this image and builds the project inside the image.

40
00:02:13.160 --> 00:02:17.160
Now we're onto the next stage where it creates yet another image

41
00:02:17.160 --> 00:02:20.350
based on that sdk image that has the app in it,

42
00:02:20.350 --> 00:02:25.040
and it runs .net publish to create all the assets needed for the up to run.

43
00:02:25.040 --> 00:02:26.240
And then, finally,

44
00:02:26.240 --> 00:02:31.270
the last stage where it creates a more streamlined image with out the sdk,

45
00:02:31.270 --> 00:02:36.620
which makes it smaller and stuffs the published assets into that image that

46
00:02:36.620 --> 00:02:41.020
becomes the final image that will use to run our containers.

47
00:02:41.020 --> 00:02:45.000
Remember, I said that the doctor support added to files.

48
00:02:45.000 --> 00:02:49.030
The other one is tucked in under the docker file in Solution Explorer.

49
00:02:49.030 --> 00:02:50.930
It's dot docker ignore,

50
00:02:50.930 --> 00:02:55.130
and it lists any files that should not be copied into any of the images.

51
00:02:55.130 --> 00:02:58.900
And for our purposes, the default file should be perfectly fine.

52
00:02:58.900 --> 00:02:59.570
In the end,

53
00:02:59.570 --> 00:03:02.950
what's really going on here with a Dr file is that it's just

54
00:03:02.950 --> 00:03:07.030
instructions that will result in the image to be deployed,

55
00:03:07.030 --> 00:03:14.000
regardless of where you're deploying it, to ensuring that will always be the same wherever it's being hosted.

