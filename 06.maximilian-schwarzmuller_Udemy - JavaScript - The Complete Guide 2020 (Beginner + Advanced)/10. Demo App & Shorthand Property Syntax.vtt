WEBVTT
1
00:00:02.930 --> 00:00:08.420
So let's start working on our little demo application here and for that, I'll clear all that code, I'll

2
00:00:08.420 --> 00:00:09.200
remove it all,

3
00:00:09.260 --> 00:00:14.420
of course if you want to still access it, you'll find it attached to multiple lectures in this module and on the

4
00:00:14.450 --> 00:00:16.410
lectures prior to this one basically

5
00:00:16.940 --> 00:00:20.670
and I want to start from scratch and work on this little demo application.

6
00:00:20.780 --> 00:00:26.240
The idea of this demo application is that we have this input area up there where a user can enter

7
00:00:26.240 --> 00:00:33.620
a title of a favorite movie and then an extra information where the user can set the name of the property

8
00:00:34.070 --> 00:00:35.600
and then the value of the property,

9
00:00:35.960 --> 00:00:41.690
so you can probably already see where this dynamic square bracket notation will be able to help us.

10
00:00:42.830 --> 00:00:48.970
Well if we then click add movie, that movie with that information should be added and it should be output

11
00:00:48.980 --> 00:00:55.460
down there in a list of movies where we output the title and also the extra information,

12
00:00:55.580 --> 00:01:01.400
so of course the tricky thing there will be that we don't know the key name in advance so we'll

13
00:01:01.400 --> 00:01:03.130
have to find some solution for that

14
00:01:03.140 --> 00:01:10.040
and last but not least, we'll have that search bar here where we can enter some term or a part of

15
00:01:10.040 --> 00:01:11.870
a word and then search for that

16
00:01:11.870 --> 00:01:16.310
and if the title of a movie includes that search term, we want to show it here,

17
00:01:16.310 --> 00:01:21.010
so all movies that include that part of the search term should be shown down there.

18
00:01:21.050 --> 00:01:24.490
So that's the idea, now therefore here in objects.js,

19
00:01:24.490 --> 00:01:31.540
I will start by selecting some things in the DOM and that will be the add movie button which we'll

20
00:01:31.540 --> 00:01:36.610
need to add an event listener to to react to clicks on this button here

21
00:01:36.820 --> 00:01:41.680
and also the search button which is that other button to which I want to add an event listener.

22
00:01:41.710 --> 00:01:47.110
Now if we have a look at the HTML code, we see that this first button here, the add movie button has an

23
00:01:47.110 --> 00:01:55.030
ID of add movie button and the filter button here has an ID of search btn, search button.

24
00:01:55.090 --> 00:01:56.350
So that's what we can use here,

25
00:01:56.350 --> 00:02:02.430
good old document and then get element by ID or use query selector, whatever you prefer

26
00:02:02.710 --> 00:02:09.610
and then select the add movie button here and also the search button with document get element by ID

27
00:02:09.610 --> 00:02:12.160
and then it was search btn.

28
00:02:12.250 --> 00:02:14.220
So these are the two buttons.

29
00:02:14.320 --> 00:02:19.690
Now of course we need functions that should be triggered when such a button is pressed and I will start

30
00:02:19.690 --> 00:02:24.430
with the function that will actually add a movie because searching for movies will be hard if we can't

31
00:02:24.430 --> 00:02:26.570
even add some.

32
00:02:26.590 --> 00:02:33.550
So here, I'll again add a function and you can use any way of declaring or of defining this function you

33
00:02:33.550 --> 00:02:39.850
prefer with the function keyword declaration here, with a function expression or with an arrow function

34
00:02:39.850 --> 00:02:40.540
expression

35
00:02:40.570 --> 00:02:46.570
and I will use the latter and then add my add movie handler here which holds this arrow function

36
00:02:46.570 --> 00:02:46.900
here

37
00:02:46.930 --> 00:02:50.230
but again it doesn't have to be an arrow function.

38
00:02:50.230 --> 00:02:58.600
Now here in add movie handler, I want to gather all the user input and then add that to my movie.

39
00:02:58.600 --> 00:03:01.610
So for the user input, I have three inputs here - 

40
00:03:01.660 --> 00:03:03.830
this input with an ID of title,

41
00:03:03.970 --> 00:03:10.480
this input with an ID of extra name and this input with an ID of extra value.

42
00:03:10.480 --> 00:03:15.520
Now I will select these inputs here in the add movie handler because I don't really need them anywhere

43
00:03:15.520 --> 00:03:16.400
else in my code,

44
00:03:16.460 --> 00:03:20.410
so there is no real need to declare them globally

45
00:03:20.410 --> 00:03:29.480
and then we can have the title let's say here with document get element by ID and then it was title,

46
00:03:29.510 --> 00:03:31.160
just title as an ID here

47
00:03:31.970 --> 00:03:36.140
and that will give me the full DOM node but I'm not interested in the full DOM node but just in the

48
00:03:36.140 --> 00:03:42.680
value of that DOM node. Since it's an input element, it will have a value property which holds whatever

49
00:03:42.680 --> 00:03:44.420
the user entered.

50
00:03:44.420 --> 00:03:52.130
Now I'm always interested in the extra information, so I have the extra name which I find on document

51
00:03:52.130 --> 00:03:58.600
get element by ID and then that has the ID extra name, the value thereafter will have that ID

52
00:03:58.730 --> 00:04:00.260
of extra value.

53
00:04:00.260 --> 00:04:07.130
So here we access extra name.value because again this yields us access to this input DOM node and

54
00:04:07.130 --> 00:04:12.890
this will have a value property which holds user input and then here we have the extra value which

55
00:04:12.890 --> 00:04:18.860
is document get element by ID, extraValue.value.

56
00:04:19.790 --> 00:04:27.830
Now we can add some validation here and check if title trim is equal to an empty string which means

57
00:04:27.830 --> 00:04:28.480
it's empty

58
00:04:29.120 --> 00:04:41.120
and maybe also check with an or separator if extra name trim is an empty value or if extra value trim

59
00:04:41.600 --> 00:04:42.490
is an empty value,

60
00:04:42.500 --> 00:04:47.030
so if either of these inputs was empty and if that is the case, I will just return here,

61
00:04:47.030 --> 00:04:48.230
you could also show an alert

62
00:04:48.230 --> 00:04:50.230
but yes I'll just return here,

63
00:04:50.230 --> 00:04:53.260
not spend too much time on that validation.

64
00:04:53.300 --> 00:04:56.240
So now that we know that we do have valid inputs,

65
00:04:56.240 --> 00:05:01.500
I want to construct a new movie. So new movie could be one constant name,

66
00:05:01.520 --> 00:05:07.910
the name is of course fully up to you and this should hold an object created with the curly braces here

67
00:05:08.030 --> 00:05:11.200
using this object literal notation.

68
00:05:11.270 --> 00:05:18.860
Now this new movie should of course hold a title let's say and the value for that will be title

69
00:05:18.920 --> 00:05:21.810
and now here is a useful shorthand notation,

70
00:05:21.980 --> 00:05:30.590
if you have a property name which is exactly equal to your value name, so to the variable name you're using

71
00:05:30.590 --> 00:05:34.250
to derive the value you want to store in that key,

72
00:05:34.430 --> 00:05:40.250
you could actually omit the value name and the colon and Javascript behind the scenes will automatically

73
00:05:40.790 --> 00:05:43.150
set this to this here basically.

74
00:05:43.220 --> 00:05:47.570
So if key name and value name are the same, you can use that,

75
00:05:47.660 --> 00:05:49.400
of course that's not true if you had this here

76
00:05:49.400 --> 00:05:55.400
for example. If you hardcoded the value of title as a string here, then you can't omit this,

77
00:05:55.400 --> 00:06:01.100
this can really only be used if your value is derived dynamically from some variable and that variable

78
00:06:01.100 --> 00:06:02.810
name is equal to your key name,

79
00:06:02.810 --> 00:06:07.620
then you can use this notation. So that's one thing,

80
00:06:07.830 --> 00:06:12.290
having the title here and actually I don't just want to have the title like this, instead I'll add an

81
00:06:12.300 --> 00:06:17.450
info key and in that info key, I want to have an object which then holds that title key,

82
00:06:17.460 --> 00:06:23.150
so a nested object here. In that info object which is part of the new movie,

83
00:06:23.220 --> 00:06:29.970
I then also want to add the extra data here the user entered and here of course, I don't know what the

84
00:06:29.970 --> 00:06:35.910
user entered here for extra name. So we can't use this notation here,

85
00:06:35.910 --> 00:06:43.110
this would add a key named extra name to a new movie, not use the value entered for extra name, instead

86
00:06:43.110 --> 00:06:43.570
as you learned

87
00:06:43.580 --> 00:06:48.960
here, we can use square brackets to assign a dynamic property name.

88
00:06:48.960 --> 00:06:54.930
Now the value is also dynamic but that's something we did before, we just point at the variable here

89
00:06:55.020 --> 00:07:00.030
on the right side of the colon which holds the value we want to store in this property.

90
00:07:00.030 --> 00:07:03.270
So now we have the info nested object here in new movie,

91
00:07:03.270 --> 00:07:06.930
now there is one other property I'll add next to info,

92
00:07:06.960 --> 00:07:09.130
so not inside of info but next to it

93
00:07:09.270 --> 00:07:10.350
and that's ID

94
00:07:10.500 --> 00:07:15.780
and there I will use math.random, using this globally available math object and the random method

95
00:07:15.780 --> 00:07:22.880
there to generate a random number as a pseudo unique ID. Okay

96
00:07:22.920 --> 00:07:24.230
so that could be a movie here,

97
00:07:24.240 --> 00:07:27.470
now I want to store that in an array of movies here.

98
00:07:27.570 --> 00:07:34.340
So I'll add a new movies constant here which holds an array and because an array is an object and therefore

99
00:07:34.380 --> 00:07:40.460
a reference type, we can store this in a constant and still edit the value here with push and pop and

100
00:07:40.460 --> 00:07:41.400
so on

101
00:07:41.490 --> 00:07:44.480
and indeed, I want to push my movie onto this array,

102
00:07:44.610 --> 00:07:48.510
so movies push new movie, like that.

103
00:07:48.780 --> 00:07:53.600
This alone will add it there but of course it will not output something in the DOM,

104
00:07:53.850 --> 00:08:00.120
nonetheless let's console log new movie here to have a look at the new movie we created and see whether

105
00:08:00.120 --> 00:08:01.620
that looks all right.

106
00:08:01.860 --> 00:08:04.050
So we're now ready to test this, of course

107
00:08:04.050 --> 00:08:08.910
now we just need to connect this method to our button here and that's also something we did many

108
00:08:08.910 --> 00:08:14.370
times. Reach out to add movie button, add an event listener, should be a click listener and point at an

109
00:08:14.580 --> 00:08:20.590
add movie handler. Don't execute it as a function here, just point at the name of the function instead

110
00:08:20.610 --> 00:08:24.020
so that Javascript calls that function for us

111
00:08:24.150 --> 00:08:31.470
and with that if we now reload here, we can enter any name of our choice, for example Javascript - The Complete

112
00:08:32.070 --> 00:08:37.760
Guide and then here any name of your choice as well for this extra property,

113
00:08:37.770 --> 00:08:43.860
I'll go with level but again, you can use anything here and then a value of 5 maybe and then click add

114
00:08:43.860 --> 00:08:50.640
movie and what we see is this object with a random ID and then with this nested info object with level

115
00:08:50.640 --> 00:08:57.150
5, level is that property name I added here written exactly like this, casing is of course not ignored

116
00:08:57.190 --> 00:08:59.940
because Javascript is case sensitive

117
00:08:59.940 --> 00:09:05.850
and then here, the title which I also entered here. We're not clearing the inputs but I am not interested

118
00:09:05.850 --> 00:09:09.090
in doing that here, of course you could tweak the code to do that.

119
00:09:09.120 --> 00:09:12.040
The important thing here is that we create that object.

120
00:09:12.060 --> 00:09:17.910
Now with that created, of course I want to output it in that list which should appear here at the bottom,

121
00:09:17.910 --> 00:09:19.920
so let's make sure that this is happening as well.
