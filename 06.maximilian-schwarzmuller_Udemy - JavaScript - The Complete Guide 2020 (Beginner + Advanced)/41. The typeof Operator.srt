1
00:00:02,630 --> 00:00:09,860
Now that we had a thorough look at these basic and very important types you can use in Javascript, these

2
00:00:09,860 --> 00:00:11,450
types of data, I

3
00:00:11,660 --> 00:00:16,010
want to show you a little keyword which you can use in your code here of course as well

4
00:00:16,100 --> 00:00:23,850
and that's the typeof keyword. The typeof keyword lets you evaluate the type of a variable at runtime.

5
00:00:23,850 --> 00:00:29,480
Now we could use it here but to quickly see the result, I'll just do it here in this console. 

6
00:00:29,480 --> 00:00:35,780
You use it by typing typeof and then the name of the variable which you want to evaluate

7
00:00:35,900 --> 00:00:39,950
or of course just the hardcoded value like this string here.

8
00:00:39,950 --> 00:00:46,140
So here if I run this, you see I get back a string which contains the name of the type I used,

9
00:00:46,140 --> 00:00:48,450
so here it's a string with the name string in it

10
00:00:48,530 --> 00:00:49,910
and indeed that is the case here,

11
00:00:49,910 --> 00:00:50,180
right,

12
00:00:50,180 --> 00:00:51,500
that is a string.

13
00:00:51,520 --> 00:00:56,180
Now of course we could also use our userName variable which we initialized earlier, set this to Max

14
00:00:56,510 --> 00:01:00,260
and check typeof userName here and we'd also get string,

15
00:01:00,290 --> 00:01:00,530
right.

16
00:01:00,530 --> 00:01:06,260
So we can also use a variable here and you'll get the type of the value that's stored in the variable.

17
00:01:06,260 --> 00:01:11,570
Now we can of course also check the type of a number and you see it is number then, it's a string which

18
00:01:12,140 --> 00:01:14,490
simply contains that description of the type,

19
00:01:14,500 --> 00:01:16,610
so in this case number or the name of the type,

20
00:01:16,640 --> 00:01:22,460
so in this case number and that's the same no matter if we use an integer as here or a floating point

21
00:01:22,460 --> 00:01:28,300
number as we do here. We also can check typeof true,

22
00:01:28,300 --> 00:01:32,530
now we haven't really worked with true or false yet but these are these booleans I mentioned

23
00:01:32,530 --> 00:01:40,130
and hence of course it prints boolean here. We can also check the type of an array, like this and you

24
00:01:40,130 --> 00:01:42,300
see here we actually get object and

25
00:01:42,350 --> 00:01:50,140
that's interesting, an array is a very important feature, very technically though it's of type object,

26
00:01:50,180 --> 00:01:53,060
so there is no special array type.

27
00:01:53,060 --> 00:01:55,080
It's a special type of object if you will

28
00:01:55,160 --> 00:01:58,220
but the overall type is just object.

29
00:01:58,220 --> 00:02:04,460
So thus far, we saw a string, number, boolean and now object. Now unsurprisingly,

30
00:02:04,460 --> 00:02:08,000
if I check the type of an object which I create with curly braces here,

31
00:02:11,600 --> 00:02:14,370
I also see object being logged here.

32
00:02:14,420 --> 00:02:20,710
So they are of the same type and array is just a special type of object you could say. Now if we check

33
00:02:20,800 --> 00:02:26,270
undefined, we see as I mentioned that this has its own type, undefined,

34
00:02:26,680 --> 00:02:28,080
on the other hand null

35
00:02:28,150 --> 00:02:30,020
is also just of type object,

36
00:02:30,040 --> 00:02:36,720
so it also has a type, a special type which is not the same as undefined but it's not type null

37
00:02:36,760 --> 00:02:38,470
but instead type object,

38
00:02:38,500 --> 00:02:45,870
so another special kind of object if you will. If you on the other hand check not a number written

39
00:02:45,870 --> 00:02:47,780
like this, we see it's of type not a number,

40
00:02:47,790 --> 00:02:49,940
so this is not an object, this is not undefined,

41
00:02:49,950 --> 00:02:51,440
this is not its own type,

42
00:02:51,450 --> 00:02:53,810
this is a number instead.

43
00:02:53,820 --> 00:02:58,670
So typeof, quite nice here to get an understanding of which kind of data you're working with,

44
00:02:58,860 --> 00:03:04,560
of course we'll see all these different types of data in action throughout this course and all the examples

45
00:03:04,590 --> 00:03:09,510
where we need to work with numbers, with strings, with arrays, with objects and so much more.
