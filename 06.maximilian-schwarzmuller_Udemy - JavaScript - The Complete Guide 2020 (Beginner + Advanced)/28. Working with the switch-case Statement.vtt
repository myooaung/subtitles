WEBVTT
1
00:00:02.540 --> 00:00:09.320
Now last but not least, to conclude that if statement part, I want to introduce the switch case statement,

2
00:00:09.320 --> 00:00:13.310
which is a new statement but kind of related to if statements.

3
00:00:13.310 --> 00:00:20.780
It's great in situations like this, where you have multiple equality checks because that's where it really

4
00:00:20.780 --> 00:00:26.780
shines and where it is the most helpful and where you want to execute different code based on the condition

5
00:00:26.780 --> 00:00:27.970
that was met.

6
00:00:27.980 --> 00:00:35.150
Now you can also use switch case statements with other conditions where you don't check for equality

7
00:00:35.420 --> 00:00:39.370
but there, you save less code and they often are harder to read.

8
00:00:39.380 --> 00:00:45.470
So you typically use switch case statements or you can use them as a replacement for if, else if statements,

9
00:00:45.470 --> 00:00:51.620
with a lot of else if cases if you always check for equality and you're just checking multiple different

10
00:00:51.620 --> 00:00:52.190
values.

11
00:00:52.850 --> 00:00:57.980
So let me show you how you could translate this long block of if and else if blocks into a switch case

12
00:00:57.980 --> 00:01:04.460
statement. For that you use the switch keyword which is built into Javascript and the switch keyword doesn't

13
00:01:04.460 --> 00:01:08.840
take a condition but it takes a value, a single value,

14
00:01:08.840 --> 00:01:16.790
so in this case the event, then you add curly braces and no semicolon after them and then you can add

15
00:01:16.790 --> 00:01:19.780
the case keyword to define a case.

16
00:01:19.850 --> 00:01:27.180
The case now is a concrete value that could be stored in this variable or constant or in this case, parameter,

17
00:01:27.200 --> 00:01:33.800
so for example here, log event player attack. Of course you don't have to use a constant here which holds

18
00:01:33.800 --> 00:01:37.340
the value, you could hardcode it in here, doesn't have to be a string

19
00:01:37.350 --> 00:01:43.010
either, you could be looking for a number but by default, this looks for equality here.

20
00:01:43.010 --> 00:01:49.460
Now if you're interested in some ideas of how you could use a switch case statement with greater than

21
00:01:49.460 --> 00:01:53.120
and so on, you will find resources attached to this video

22
00:01:53.270 --> 00:01:56.180
but this is the most straightforward way of using it,

23
00:01:56.240 --> 00:02:00.350
the easiest read way, the way for which it was invented I would say

24
00:02:00.350 --> 00:02:07.640
and the way where I would use it, if you have other conditions that include more complex conditions, greater

25
00:02:07.640 --> 00:02:10.460
than and so on or combined conditions,

26
00:02:10.460 --> 00:02:15.620
I would always go for an if statement. If you have an if statement like this though, where you always have

27
00:02:15.620 --> 00:02:20.270
only one condition and you check for equality, then a switch case statement might be an idea.

28
00:02:21.140 --> 00:02:22.640
So how do you use it?

29
00:02:22.670 --> 00:02:29.240
You see I added a colon after this case definition and then typically in a new line, you define which

30
00:02:29.240 --> 00:02:30.550
code should be executed

31
00:02:30.560 --> 00:02:31.810
if this case is met,

32
00:02:32.000 --> 00:02:39.050
so if ev has a value of log event player attack. Also worth pointing out that behind the scenes, switch

33
00:02:39.230 --> 00:02:43.920
always use the triple equal sign operator to compare that,

34
00:02:44.000 --> 00:02:51.290
so it only will go into that case if the event holds log event player attack, both regarding the value

35
00:02:51.380 --> 00:02:52.520
but also the type,

36
00:02:52.580 --> 00:02:59.970
so if event really is a string in this case because that's what's stored in log event player attack.

37
00:03:00.010 --> 00:03:02.470
So now we have that case defined,

38
00:03:02.470 --> 00:03:05.680
now we define the code that should be executed if that is the case,

39
00:03:05.680 --> 00:03:12.550
so in this case I want to adjust my log entry target and then you can define a second case, in this case

40
00:03:12.550 --> 00:03:19.630
a case here that the value stored in ev is log event player strong attack and then again, colon and then

41
00:03:19.630 --> 00:03:21.300
the code that should execute.

42
00:03:21.370 --> 00:03:28.090
So either you again just manipulate target or as I do it down there, you create a brand new object which

43
00:03:28.090 --> 00:03:29.930
is stored in log entry.

44
00:03:30.010 --> 00:03:37.060
Now very important, you also should add another special keyword after each case and that's the break

45
00:03:37.060 --> 00:03:39.980
keyword followed by a semicolon.

46
00:03:40.000 --> 00:03:45.400
Now we haven't seen the break keyword before, it's a keyword built into Javascript and in the end what

47
00:03:45.400 --> 00:03:52.930
it tells Javascript is that if that case has been handled, no other case should be handled because by

48
00:03:52.930 --> 00:03:59.500
default, switch case statements do something which is called fall through, which means if you made it

49
00:03:59.500 --> 00:04:06.190
into that case, then that case would be executed as well because the default behavior is actually that

50
00:04:06.190 --> 00:04:11.050
if it made it into a case, it will also execute the cases below it automatically,

51
00:04:11.050 --> 00:04:17.290
even if these don't match the value. Sometimes this is exactly what you want, sometimes you want to have

52
00:04:17.290 --> 00:04:22.990
the same code for multiple cases and you could achieve that by not defining any code for a case,

53
00:04:23.080 --> 00:04:28.330
then thanks to that fall through mechanism, if this case is met, that goes right to the next case and executes

54
00:04:28.330 --> 00:04:35.230
this code but in other cases, you only really want to execute one piece of code for each case and then

55
00:04:35.320 --> 00:04:41.080
you add the break keyword to tell Javascript after this is finished don't evaluate any other cases, just

56
00:04:41.140 --> 00:04:45.240
leave the switch case statement, we are done.

57
00:04:45.470 --> 00:04:53.090
So now let's also add break here and then again add another case and that would be the log event

58
00:04:53.120 --> 00:04:54.320
monster attack.

59
00:04:54.320 --> 00:04:59.540
So let's add this here and thereafter that code which we had in this else if block

60
00:05:02.450 --> 00:05:05.520
and then add yet another case here,

61
00:05:05.540 --> 00:05:08.780
now here for the player heal

62
00:05:12.540 --> 00:05:16.120
so let's add that here.

63
00:05:16.140 --> 00:05:18.720
Also don't forget the break statement here, I did forget it

64
00:05:18.720 --> 00:05:20.380
so make sure you don't,

65
00:05:20.640 --> 00:05:22.540
so log event player heal,

66
00:05:22.620 --> 00:05:29.100
there of course I'll grab this code which I have down there in the else if block, add it here below case

67
00:05:29.100 --> 00:05:30.050
and add the break

68
00:05:30.050 --> 00:05:30.890
keyword

69
00:05:30.990 --> 00:05:33.660
and then add the last case

70
00:05:33.660 --> 00:05:36.630
and that's our event

71
00:05:36.630 --> 00:05:37.640
game over so

72
00:05:37.650 --> 00:05:49.890
let's add that here like this, also of course copy the code we have down there, add that here and maybe

73
00:05:49.890 --> 00:05:54.590
also add break here, of course here though you could omit it because we have no other case below it.

74
00:05:54.900 --> 00:06:00.240
Now in switch case statement, you also have another special keyword and that's default, followed by a colon

75
00:06:00.780 --> 00:06:06.390
that allows you to define some default code in case no case is met and therefore you make it into no

76
00:06:06.480 --> 00:06:07.960
entry point here,

77
00:06:08.100 --> 00:06:13.890
then you would add a default to still execute some code maybe in case no other case is met

78
00:06:13.890 --> 00:06:21.190
so here we could set log entry to an empty object for example.

79
00:06:21.200 --> 00:06:27.180
Now of course that being said, now I can comment out the if, else if statement here and just keep my battle

80
00:06:27.180 --> 00:06:29.450
log push code line

81
00:06:29.660 --> 00:06:32.040
and with that we have a valid switch case statement.

82
00:06:32.120 --> 00:06:34.440
Now is that better than if and else if?

83
00:06:34.850 --> 00:06:40.940
Well if you have such a strict equality comparisons, it can be a bit cleaner to read and therefore it's

84
00:06:40.940 --> 00:06:44.250
a real alternative which I tend to prefer

85
00:06:44.300 --> 00:06:51.200
but ultimately, you can also stick to if/else if you prefer that, if you find that easier to read and especially

86
00:06:51.200 --> 00:06:56.990
if you have more complex conditions, multiple combined conditions or greater than checks and so on,

87
00:06:57.020 --> 00:07:03.680
you definitely want to use if/else if else blocks and statements instead of the switch case statement

88
00:07:03.680 --> 00:07:07.460
because that really only shines for strict equality checks.
