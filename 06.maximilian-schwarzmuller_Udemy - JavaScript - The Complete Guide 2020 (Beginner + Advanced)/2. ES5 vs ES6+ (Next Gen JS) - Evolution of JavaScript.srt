1
00:00:02,210 --> 00:00:06,910
So what's up with this ES5 versus ES6 thing? Now

2
00:00:06,980 --> 00:00:14,510
ES stands for ECMAScript and you might remember from section one that ECMAScript

3
00:00:14,510 --> 00:00:21,440
in the end is the language behind Javascript so to say, you could say Javascript is a specific version of

4
00:00:21,440 --> 00:00:22,340
ECMAScript,

5
00:00:22,430 --> 00:00:28,100
of course the most important version. So ECMAScript in the end is the language being standardized by

6
00:00:28,100 --> 00:00:28,640
this ecma

7
00:00:28,640 --> 00:00:35,510
international body and these are the guys and of course in that process, there are many people working

8
00:00:35,510 --> 00:00:37,170
at the common browsers involved,

9
00:00:37,250 --> 00:00:44,660
so these are the guys who work on new iterations of ECMAScript and therefore of Javascript, so they decide

10
00:00:44,660 --> 00:00:50,690
what ends up in the language and what not and then the browsers adopt this into their Javascript engines,

11
00:00:50,690 --> 00:00:57,110
this is something I already explained in section one of the course. On this ecma international page,

12
00:00:57,140 --> 00:01:04,670
you can always dive into the ECMAScript specification, this is the technical description of how ECMAScript

13
00:01:04,670 --> 00:01:06,600
and therefore Javascript should work

14
00:01:06,770 --> 00:01:12,770
and yes you can really dive into that but to be honest, this is is not a resource you'll commonly work with,

15
00:01:12,770 --> 00:01:18,620
this is mostly important for browser vendors who need to make sure that their Javascript engine follows

16
00:01:18,650 --> 00:01:23,320
this ECMAScript definition. So that is what ES stands for,

17
00:01:23,370 --> 00:01:30,860
ECMAScript. Now ECMAScript and therefore also Javascript is still under active development,

18
00:01:30,860 --> 00:01:37,040
so people from the different browsers and also other people involved in that process are still working

19
00:01:37,040 --> 00:01:42,710
on the ECMAScript and therefore on the Javascript language, they are thinking about new features that

20
00:01:42,710 --> 00:01:49,460
could be added to make it better, on maybe fixing some things that don't work as expected and as you

21
00:01:49,460 --> 00:01:55,410
can imagine since Javascript is that widespread and since people use that many browsers, of course that

22
00:01:55,410 --> 00:02:01,570
it is a process that has to be done with great care because you can't change the language such that suddenly

23
00:02:01,580 --> 00:02:07,550
existing web pages stop working in older browsers, so you can basically only add new features you could

24
00:02:07,550 --> 00:02:14,750
say, you can't really remove existing features, at least that is very very difficult to do. So over time,

25
00:02:14,810 --> 00:02:21,320
ECMAScript and therefore Javascript evolved, it dates back into the 90s of course when it got started but

26
00:02:21,320 --> 00:02:27,560
then we had a slow evolvement and it became more and more important and one major version that was released

27
00:02:27,560 --> 00:02:31,070
in the past was basically ECMAScript version 5

28
00:02:31,070 --> 00:02:38,060
you could say, this is just a term that was assigned to one specific version of that standard that was released

29
00:02:38,060 --> 00:02:44,300
and that was agreed on you could say. Now ECMAScript 5 included some important improvements and most

30
00:02:44,300 --> 00:02:50,240
importantly, standardization back then because before that, a lot of browsers basically did what they

31
00:02:50,240 --> 00:02:53,890
wanted and this was the first real big standard

32
00:02:53,980 --> 00:02:59,360
after ECMAScript 3 which also went into this direction where the browsers could agree on and where

33
00:02:59,360 --> 00:03:02,860
we then had one common ground for browsers to implement features,

34
00:03:02,870 --> 00:03:04,680
so that was very important.

35
00:03:04,820 --> 00:03:12,080
Now one other very important major in which was kind of finalized in 2015 and therefore is also known

36
00:03:12,110 --> 00:03:18,210
as ECMAScript 2015 or also another version number assigned to it, ES6,

37
00:03:18,320 --> 00:03:24,380
so another major milestone was released in or was finished in 2015

38
00:03:24,380 --> 00:03:29,960
and from that point on slowly integrated into browsers and that's also important to understand.

39
00:03:29,960 --> 00:03:36,500
Just because there is a new standard, a new draft on which the people involved in the standardization

40
00:03:36,500 --> 00:03:42,500
process agreed on does not mean that all browsers suddenly ship all these features, instead features

41
00:03:42,500 --> 00:03:49,400
are getting added to browsers incrementally, so step-by-step and at different speeds and old browsers,

42
00:03:49,400 --> 00:03:52,430
so for example Internet Explorer version 9 of course

43
00:03:52,430 --> 00:03:54,610
don't include these new features.

44
00:03:54,740 --> 00:03:59,230
Now that's a totally different topic and I'll come back to that in the browser support section of this

45
00:03:59,230 --> 00:04:05,720
course where we talk about supporting different versions of browsers, especially also older browsers

46
00:04:05,930 --> 00:04:09,800
and still using modern Javascript syntax when writing the code.

47
00:04:09,800 --> 00:04:14,030
This might sound impossible but it actually is possible and I'll cover it later,

48
00:04:14,030 --> 00:04:18,860
so what you'll learn in this course is really something you can use and which will even be usable by users

49
00:04:19,040 --> 00:04:20,300
who use older browsers.

50
00:04:20,750 --> 00:04:21,890
So that's just a side note,

51
00:04:21,890 --> 00:04:28,580
ES6 was another major mark in development of Javascript and since then more, features have been added,

52
00:04:28,580 --> 00:04:31,610
we just don't have these striking new version numbers, instead

53
00:04:31,610 --> 00:04:37,700
now it's more of an incremental process where we have basically small advancements that are integrated

54
00:04:37,700 --> 00:04:40,130
by browser vendors step-by-step.

55
00:04:40,130 --> 00:04:47,240
So ES6 and later is what this course teaches from the beginning on because we have some huge syntax

56
00:04:47,240 --> 00:04:49,640
changes from ES6 to ES5

57
00:04:49,790 --> 00:04:56,120
and as I mentioned earlier, changes really means new features added, not old features removed, so you could

58
00:04:56,120 --> 00:05:03,350
still use the old syntax, the old features but ES6 introduced many new exciting features and since

59
00:05:03,350 --> 00:05:05,450
then, many more exciting features have been added

60
00:05:05,480 --> 00:05:08,860
and again in this course, we only use this modern Javascript syntax

61
00:05:08,900 --> 00:05:12,020
so that you learn the latest version of Javascript.

62
00:05:12,020 --> 00:05:18,860
Now as I mentioned, the ES5 and older versions of course have great browser support, including old versions

63
00:05:18,860 --> 00:05:19,930
of Internet Explorer

64
00:05:19,940 --> 00:05:23,160
because these versions have been around for much longer

65
00:05:23,390 --> 00:05:28,130
but for example one major difference which we have in there, which I'll come back to in the next lectures

66
00:05:28,550 --> 00:05:35,800
is that in ES5 and older, we only had a var keyword for creating variables and not let and const.

67
00:05:35,810 --> 00:05:41,000
This might sound like a minor thing but it's a huge thing actually as you will learn in the next lectures

68
00:05:41,210 --> 00:05:44,900
and it's one of the most important changes from ES5 to ES6

69
00:05:44,900 --> 00:05:49,970
though there also are a couple of other exciting changes. Generally of course Javascript still is the

70
00:05:49,970 --> 00:05:51,260
same language there

71
00:05:51,320 --> 00:05:55,910
but again ES6 and later versions introduced many exciting new features.

72
00:05:55,910 --> 00:05:59,560
Now what about browser support for ES6 and later?

73
00:05:59,570 --> 00:06:02,650
Well modern browsers have pretty decent support,

74
00:06:02,660 --> 00:06:09,290
also keep in mind that all these modern browsers and that includes Edge of course have an auto updating

75
00:06:09,350 --> 00:06:14,900
functionality which means people don't have to manually install new browser versions, which was the case

76
00:06:14,900 --> 00:06:20,660
with older versions of Internet Explorer and therefore features can be integrated into browsers at a

77
00:06:20,660 --> 00:06:26,640
much faster pace and more and more users will automatically use these latest versions of browsers because

78
00:06:26,640 --> 00:06:28,820
the browsers themselves automatically update,

79
00:06:28,820 --> 00:06:30,080
so that's really cool.

80
00:06:30,120 --> 00:06:34,260
So we have great support for all these modern Javascript features in modern browsers,

81
00:06:34,290 --> 00:06:40,800
so basically any user who uses Chrome, any user who uses Firefox and most users using Edge have access to

82
00:06:40,800 --> 00:06:45,660
these features and again in the browser support module later down the course, you'll learn how you can

83
00:06:45,660 --> 00:06:50,570
even make sure that people who are not using such modern browsers can still work with your web page

84
00:06:50,580 --> 00:06:56,500
that uses modern Javascript syntax or where you use modern Javascript syntax to build it.

85
00:06:56,520 --> 00:06:59,850
So we have great browser support in modern browsers here

86
00:06:59,850 --> 00:07:04,590
and the cool thing about ES6 and so on as I mentioned is that it introduced many new features that

87
00:07:04,650 --> 00:07:11,520
in the end all aim to help us write cleaner, better and faster code and need less workarounds or hacks

88
00:07:11,820 --> 00:07:18,780
because with ES5 and older, you had quite a lot of situations where you needed hacky workarounds,

89
00:07:18,780 --> 00:07:24,660
where you needed a third-party package which in the end just implemented the hacky workarounds then

90
00:07:25,110 --> 00:07:26,880
to solve common problems.

91
00:07:26,910 --> 00:07:32,490
So it was easier to write bad code with that older version of Javascript and many of the new features

92
00:07:32,520 --> 00:07:38,330
introduced with modern Javascript, with ES6 and later simply make it easier for us to write shorter,

93
00:07:38,350 --> 00:07:39,930
cleaner code.

94
00:07:39,960 --> 00:07:44,650
Now as I mentioned, it's still under active development but ES6 was simply a big milestone,

95
00:07:44,670 --> 00:07:48,620
it's not like the latest version and nothing happened thereafter,

96
00:07:48,630 --> 00:07:50,750
we have a continuous development process there,

97
00:07:50,760 --> 00:07:53,950
we just don't have these big labels on all these new versions,

98
00:07:54,030 --> 00:07:59,070
instead new features are getting added to the ECMAScript specification all the time and then browser

99
00:07:59,070 --> 00:07:59,680
vendors,

100
00:07:59,700 --> 00:08:05,220
so the people behind Chrome and Firefox start implementing those into their Javascript engines.

101
00:08:05,220 --> 00:08:07,540
So that's the Javascript evolution.

102
00:08:07,590 --> 00:08:11,130
Now I did highlight that var, let and const thing,

103
00:08:11,130 --> 00:08:12,150
what's up with that?
