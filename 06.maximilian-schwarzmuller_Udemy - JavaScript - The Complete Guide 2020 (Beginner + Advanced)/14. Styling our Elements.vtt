WEBVTT
1
00:00:02.510 --> 00:00:08.480
It's all nice that we have some functionality in our web component but it would now be nice to work

2
00:00:08.480 --> 00:00:14.330
on the styling for example that this tooltip does not kind of split our line here.

3
00:00:14.480 --> 00:00:20.840
But it should be like an overlay being positioned next or near to our question mark here.

4
00:00:20.900 --> 00:00:23.990
So how can we achieve this.

5
00:00:23.990 --> 00:00:31.350
Well since we are creating our tooltip container here we can of course also styled it.

6
00:00:31.580 --> 00:00:37.100
And there are a couple of ways of styling it since it's a diff we could set up some general styling

7
00:00:37.100 --> 00:00:39.110
for divs of course.

8
00:00:39.110 --> 00:00:44.540
Alternatively we access the style attribute and we add styles step by step.

9
00:00:44.720 --> 00:00:51.230
For example on the tooltip container here we can access the style property which every dorm node has

10
00:00:51.230 --> 00:00:56.900
in JavaScript and we could give this a background color of black.

11
00:00:56.900 --> 00:01:06.580
And then we duplicate this to set a text color of white maybe not with that if we save that and we reload.

12
00:01:06.710 --> 00:01:12.200
We have this stall a bit better but of course the positioning is still off.

13
00:01:12.230 --> 00:01:18.890
Now we might want to make sure that this has an absolute position so that our tooltip container style

14
00:01:19.340 --> 00:01:23.550
the position is absolute.

15
00:01:23.570 --> 00:01:29.230
That means that when it should be positioned relative to our entire custom element we should give our

16
00:01:29.250 --> 00:01:32.870
custom element a style of relative.

17
00:01:32.870 --> 00:01:39.710
So in the Connected callback where our custom element has been rendered to the dorm there we can access

18
00:01:39.800 --> 00:01:40.940
our style.

19
00:01:40.970 --> 00:01:49.150
So the style of the custom element itself the style of the U.S. tooltip and there we set the position

20
00:01:49.300 --> 00:01:56.190
equal to relative we now save that and we reload.

21
00:01:56.250 --> 00:02:01.650
Now this looks bit better doesn't split our line any more.

22
00:02:01.710 --> 00:02:10.290
Now maybe we all should set a set index here so that it is above all other elements SET Index and set

23
00:02:10.290 --> 00:02:13.140
this to a value of 10 maybe.

24
00:02:13.170 --> 00:02:19.620
Now if you reload this does looks better it now really isn't overly near to our question mark.

25
00:02:19.620 --> 00:02:20.970
I'm liking this.

26
00:02:21.480 --> 00:02:33.120
So this already is a nice way but we also have a problem here if I for some reason have a general style

27
00:02:33.180 --> 00:02:42.420
in my page with style tags or were a C as s followed to import where I let's say style all my device

28
00:02:42.870 --> 00:02:47.350
to have the border of two pixels solid and orange.

29
00:02:47.490 --> 00:02:53.970
And obviously this is a bit of a made up example but you could certainly have some global styles affecting

30
00:02:54.120 --> 00:03:02.370
all Daves or all age 16 and maybe in your custom Web component you are using h1 tag or as we are doing

31
00:03:02.370 --> 00:03:10.530
it you are using a diff and now what you will see is that if I save that and a reload this page I have

32
00:03:10.530 --> 00:03:14.450
that orange border on that David my web component too.

33
00:03:14.670 --> 00:03:16.590
And you typically don't want that.

34
00:03:16.740 --> 00:03:22.290
You typically don't want to have global styles affecting your web components and you also don't want

35
00:03:22.290 --> 00:03:28.110
to have style as you defined inside of your web components affect outside elements.

36
00:03:28.110 --> 00:03:35.580
In addition it would be nice if we don't have to create everything programmatically like this with one

37
00:03:35.580 --> 00:03:38.340
line of code after the other end.

38
00:03:38.430 --> 00:03:46.320
If we could define some H Tim Al template instead of well adding or creating aged him all elements with

39
00:03:46.320 --> 00:03:52.470
create element all the time and for that we have a solution.

40
00:03:52.530 --> 00:04:02.070
The shadow Dom and templates both these techniques will help us with ensuring that we write nice reusable

41
00:04:02.280 --> 00:04:05.850
and encapsulated custom Web component.
