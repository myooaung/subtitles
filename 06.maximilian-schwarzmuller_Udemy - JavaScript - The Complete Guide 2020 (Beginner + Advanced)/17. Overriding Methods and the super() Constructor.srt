1
00:00:02,440 --> 00:00:06,250
Now we adjusted all classes to use this concept of inheritance,

2
00:00:06,250 --> 00:00:11,470
now we can also improve that code a little bit and I will definitely say there are tons of different

3
00:00:11,470 --> 00:00:12,630
ways of implementing this,

4
00:00:12,640 --> 00:00:18,940
so if you want to try this on your own and also experiment with that and maybe find another or a better

5
00:00:18,940 --> 00:00:20,560
solution, a shorter solution,

6
00:00:20,560 --> 00:00:22,270
definitely try that.

7
00:00:22,270 --> 00:00:28,390
One thing I want to do here is these render calls here right are kind of redundant,

8
00:00:28,390 --> 00:00:33,460
we create a product list and then I manually call render, well that should be done as part of the creation

9
00:00:33,460 --> 00:00:36,670
process I think because I'm always doing it thereafter manually.

10
00:00:36,790 --> 00:00:43,770
So I'll say product list render gets removed, gets removed here for the cart hence here,

11
00:00:43,780 --> 00:00:47,110
I'm not even interested in storing the product list anywhere,

12
00:00:47,110 --> 00:00:52,850
same for the shop, can simply remove that, I need to store to shop in a constant though because I need it

13
00:00:52,870 --> 00:01:00,300
here but I don't want to call render and if we go to the product list class itself where I render all

14
00:01:00,300 --> 00:01:04,590
product items, I also don't want to call product item printer and therefore we don't need to store

15
00:01:04,590 --> 00:01:06,330
the product item anywhere.

16
00:01:06,540 --> 00:01:13,170
Instead now what we can do is we can of course call render here in the constructor or this render to

17
00:01:13,170 --> 00:01:17,490
be precise of course as my IDE corrected it because we were referring to this method on this

18
00:01:17,490 --> 00:01:23,940
object but even that would be redundant, we would add this logic to every constructor of every subclass.

19
00:01:23,940 --> 00:01:29,490
So since we are calling the parent constructor anyway, since since we're sharing this parent, let's just

20
00:01:29,490 --> 00:01:30,720
do it in the parent.

21
00:01:30,720 --> 00:01:35,700
So in component here when we construct this, I will call this render.

22
00:01:35,700 --> 00:01:42,090
The only thing I will now also do there is I will add a render method here and this is an empty method,

23
00:01:42,930 --> 00:01:45,000
so it doesn't do anything useful here.

24
00:01:45,150 --> 00:01:50,970
I'm adding it so that if someone looks at this class, this person doesn't wonder why we're calling

25
00:01:50,970 --> 00:01:55,660
render here, so that we at least see that such a method exists.

26
00:01:55,770 --> 00:02:01,740
Now we can still do something which is called overriding it because in all the parent classes, I basically

27
00:02:01,740 --> 00:02:05,120
implement a special version of rendered thereafter.

28
00:02:05,250 --> 00:02:10,470
So when we do this in a subclass, when we override a method that's defined in the parent class,

29
00:02:10,470 --> 00:02:12,180
this will fully replace it.

30
00:02:12,240 --> 00:02:16,230
So if thereafter in the parent class, we call this render here,

31
00:02:16,230 --> 00:02:22,200
it will not refer to this render method there but instead it will do this in the subclass and this can

32
00:02:22,200 --> 00:02:28,350
be counter intuitive but there is one simple rule and it's a rule you already learned actually. Always

33
00:02:28,350 --> 00:02:37,620
remember that this refers to what called the method and for the constructor, that basically is always

34
00:02:37,620 --> 00:02:43,320
the object you are creating. That can get bit strange because in the end you're creating an object by calling

35
00:02:43,560 --> 00:02:47,070
new, right, here new product item

36
00:02:47,070 --> 00:02:53,370
but in the end what the new keyword does is it make sure that a new object is created and that this

37
00:02:53,400 --> 00:02:56,400
inside of the constructor is set to that object,

38
00:02:56,430 --> 00:02:59,460
so that's a little bit of magic the new keyword does for you,

39
00:02:59,460 --> 00:03:02,340
that's something you can memorize, inside of a constructor,

40
00:03:02,340 --> 00:03:07,020
this will refer to the object that is being created,

41
00:03:07,050 --> 00:03:12,990
that's what new does for you so to say. And therefore this always refers to the object which is being

42
00:03:12,990 --> 00:03:20,880
created and the object which is being created is always product list or product item or shopping cart,

43
00:03:20,880 --> 00:03:27,200
it's not the base class. We're calling the constructor of that but we're doing that in the process of

44
00:03:27,200 --> 00:03:33,110
creating a shopping cart or a product list and only one object is being created and that is the subclass

45
00:03:33,260 --> 00:03:35,660
or an object based on that subclass.

46
00:03:35,660 --> 00:03:41,300
So when we call the constructor of shopping cart, a shopping cart is getting created, an object based on

47
00:03:41,300 --> 00:03:47,240
shopping cart. The parent constructor of component is also getting called but this in this parent constructor

48
00:03:47,360 --> 00:03:54,830
will refer to exactly the same as this in the child constructor, in the subclass constructor,

49
00:03:54,890 --> 00:04:01,910
it will refer to that object that is being created. And therefore since that object which is being created

50
00:04:02,090 --> 00:04:04,800
has its own implementation of the render method,

51
00:04:04,880 --> 00:04:12,800
this render in the parent class will refer to the render method in the to-be-created object which is

52
00:04:12,800 --> 00:04:14,540
based on the subclass.

53
00:04:14,540 --> 00:04:18,110
So now with that, we're almost there,

54
00:04:18,110 --> 00:04:23,270
the only thing that's missing now is in the shop because if you now reload, you'll see an empty screen

55
00:04:23,630 --> 00:04:29,600
and that is because when we create our shop here, the shop class doesn't have a constructor where we

56
00:04:29,600 --> 00:04:33,780
would call the parent constructor due to the way shop works.

57
00:04:33,800 --> 00:04:41,700
So in the end, here in shop, I want to add a constructor and in that constructor, I want to call super

58
00:04:42,310 --> 00:04:48,210
and we don't need to pass an argument to super actually because that render hook ID is not required

59
00:04:48,210 --> 00:04:50,370
for the shop, the way render works here,

60
00:04:50,370 --> 00:04:52,910
we're not calling this createRootElement here,

61
00:04:53,040 --> 00:04:58,170
so we don't really need a render place for shop, though we could also certainly restructure this code

62
00:04:58,200 --> 00:05:03,120
to make it work as such but we definitely need to call super to make sure that the render method is

63
00:05:03,120 --> 00:05:04,420
getting triggered.

64
00:05:04,500 --> 00:05:11,340
Now of course that also means that we need to extend component here however, otherwise there is no base

65
00:05:11,340 --> 00:05:16,690
class which we could trigger with super or where we could trigger the constructor with super.

66
00:05:17,190 --> 00:05:24,060
So now, now that shop also extends component and calls super, we can reload here and we'll actually get

67
00:05:24,060 --> 00:05:29,480
a different error but at least we can already see the cart is getting rendered. Now just before we fix

68
00:05:29,480 --> 00:05:30,020
that error,

69
00:05:30,030 --> 00:05:36,660
an alternative here of course would have been to also just call this render like this because we need

70
00:05:36,660 --> 00:05:42,220
nothing else from the base class, so you might argue that extending it might not make that much sense,

71
00:05:42,220 --> 00:05:43,670
so you can go either way,

72
00:05:43,680 --> 00:05:48,750
you can definitely also just call this render here and not extend component here because we're not

73
00:05:48,750 --> 00:05:54,420
interested in any other feature from the base class, so extending it might be a bit unnecessary.

74
00:05:54,420 --> 00:05:58,520
Whatever approach you chose, let's now make sure we understand and fix this error.
