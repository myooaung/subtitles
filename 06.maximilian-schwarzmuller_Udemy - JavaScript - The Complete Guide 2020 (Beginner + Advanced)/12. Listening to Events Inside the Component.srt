1
00:00:02,310 --> 00:00:09,090
We're making progress and we're now able to render some text through our Web component.

2
00:00:09,090 --> 00:00:12,060
Now still a lot of the logic is missing.

3
00:00:12,060 --> 00:00:16,480
For example where we hover over this we get no event listeners that would do anything.

4
00:00:16,680 --> 00:00:17,820
But we're getting there.

5
00:00:17,820 --> 00:00:19,070
Step by step.

6
00:00:19,440 --> 00:00:26,580
Let's now add such event listeners to see how we can quickly add more logic to this component which

7
00:00:26,580 --> 00:00:33,040
we then can easily reuse by reusing our custom selector our custom aged him tag.

8
00:00:33,300 --> 00:00:38,110
We want to listen to when we hover over that tooltip icon.

9
00:00:38,280 --> 00:00:43,280
And then we want to show a tooltip for this.

10
00:00:43,360 --> 00:00:47,350
I would simply add an event listener.

11
00:00:47,400 --> 00:00:53,520
This is a normal DOM element and therefore we can call add event listener and we can listen to the built

12
00:00:53,520 --> 00:00:58,560
in mouse enter event which is fired when the mouse enters.

13
00:00:58,560 --> 00:01:03,650
This span in this case because I'm attaching it to that tooltip I can span.

14
00:01:03,750 --> 00:01:10,740
Then I want to execute a function and for this I will create a new method which is simply a function

15
00:01:10,740 --> 00:01:12,090
inside of a class.

16
00:01:12,390 --> 00:01:14,640
And I will add this to this class.

17
00:01:14,640 --> 00:01:20,550
Now I will name this method show tooltip.

18
00:01:20,600 --> 00:01:26,780
Now I add it does underscore here to kind of make it clear that I only intend on calling this method

19
00:01:26,810 --> 00:01:29,180
from inside this class.

20
00:01:29,180 --> 00:01:36,320
As you learned earlier in the course JavaScript in the past didn't really have private methods and it

21
00:01:36,320 --> 00:01:37,530
doesn't even have to write.

22
00:01:37,550 --> 00:01:45,110
Now in all browsers there is is extra syntax with the hash in front of properties and methods to signal

23
00:01:45,110 --> 00:01:49,810
that they should be private but it's in the early stages it's not supported everywhere.

24
00:01:49,820 --> 00:01:55,760
So I'm using this convention which you'll find in a couple of programs out there where you add an underscore

25
00:01:55,760 --> 00:02:03,140
in front of properties or methods which you want to mark as pseudo private so that you only intend on

26
00:02:03,140 --> 00:02:06,110
calling these methods from inside the class.

27
00:02:06,110 --> 00:02:11,930
And therefore even if you name it like this you can call it from outside to a by the way if you're wondering

28
00:02:11,930 --> 00:02:14,450
what I mean with from outside.

29
00:02:14,450 --> 00:02:21,650
Well since this is now a normal html element you can of course also select it with document query selector

30
00:02:21,920 --> 00:02:27,720
and then you can access its properties and call its methods just like you can do it on any other H2

31
00:02:27,720 --> 00:02:29,150
Al element.

32
00:02:29,240 --> 00:02:35,060
So with an underscore in front of this name though I'm indicating that this is a method you should not

33
00:02:35,060 --> 00:02:35,870
call.

34
00:02:35,870 --> 00:02:41,990
You can still do it and we can't stop that but at least we're clear regarding our intention of how this

35
00:02:41,990 --> 00:02:48,620
component should be used and if our developers are then using it or we are using it some time in the

36
00:02:48,620 --> 00:02:55,370
future after we don't exactly remember how we created it then we know OK this is a method which should

37
00:02:55,370 --> 00:03:02,640
only get called internally which we don't have to care about when we work with our component from outside.

38
00:03:02,660 --> 00:03:06,290
So this show tooltip method is what I want to call.

39
00:03:06,290 --> 00:03:14,440
So here I will call this show tooltip and important I don't add parentheses because I don't want to

40
00:03:14,560 --> 00:03:16,410
execute this method here.

41
00:03:16,510 --> 00:03:22,330
I only saved a pointer to this method and set this up as my event listener.

42
00:03:22,330 --> 00:03:30,520
So did Wendy mouse entry Bento curse then the browser can automatically execute show tooltip now inside

43
00:03:30,520 --> 00:03:39,670
of show tooltip ident 1 I will create a tooltip element which I can display for this altered and you

44
00:03:40,930 --> 00:03:46,890
constant and I'll name it tooltip container and with documents create element.

45
00:03:46,900 --> 00:03:53,680
I'll create a new element of type death again using one of the built in H two male elements.

46
00:03:53,680 --> 00:03:57,880
If you have multiple custom elements you can of course also create those.

47
00:03:57,910 --> 00:04:04,930
But here I will build an element that only uses primitives so only use this built in elements.

48
00:04:04,930 --> 00:04:13,630
So I create a death here and in that tooltip container I can then set a text content of desist the tooltip

49
00:04:13,630 --> 00:04:19,650
text which will make more generic and sellable by the user later.

50
00:04:19,720 --> 00:04:26,310
And now of course it's all about attaching this container to the DOM and showing it there.

51
00:04:26,350 --> 00:04:29,290
So for dead again I will access this.

52
00:04:29,320 --> 00:04:36,650
This referring to the tooltip element and now there's just one thing to watch out for.

53
00:04:36,790 --> 00:04:46,180
Due to the way that this keyword works in JavaScript we need to call bind this here when we point at

54
00:04:46,180 --> 00:04:47,620
show tooltip.

55
00:04:47,710 --> 00:04:56,930
This ensures that this keyword instead of show tooltip always refers to this class now here I can append

56
00:04:57,410 --> 00:05:07,100
this child I can append my tooltip container to styling will be awful but it should work if we now save

57
00:05:07,100 --> 00:05:10,040
that and we reload the browser.

58
00:05:10,160 --> 00:05:12,790
If I now hover over it is question mark.

59
00:05:12,890 --> 00:05:15,930
Indeed we see this as a tool to text.

60
00:05:16,100 --> 00:05:22,340
Now it's not getting removed when I hover a way though you see that when I leave with the mouse it's

61
00:05:22,340 --> 00:05:23,010
still there.

62
00:05:23,030 --> 00:05:27,560
And if I hover over it again it adds more and more of these texts.

63
00:05:27,830 --> 00:05:34,610
That makes a lot of sense because we never remove that when we leave with the mouse.

64
00:05:34,820 --> 00:05:41,030
So I will duplicate my event listener up there and besides mouse enter.

65
00:05:41,030 --> 00:05:48,740
I will also add mouse leave here and I will add a new private method height tool tip which should in

66
00:05:48,740 --> 00:05:52,020
the end remove this tool tip container.

67
00:05:52,130 --> 00:05:58,100
Now to access the tooltip container which I create and show tooltip and which therefore is not accessible

68
00:05:58,100 --> 00:05:59,980
from insert height tooltip.

69
00:06:00,110 --> 00:06:06,800
I'll turn this from a constant and show tooltip into a property of the whole class.

70
00:06:06,800 --> 00:06:11,340
For it isn't a constructor which is a great place for basic initialization.

71
00:06:11,480 --> 00:06:18,590
I'll add a new property by using this keyword and then dot and then the name of the property and that

72
00:06:18,590 --> 00:06:26,540
property is basically just like a class wide away level variable and I will name that underscore to

73
00:06:26,540 --> 00:06:33,440
all the marks that this is only used from inside the class underscore tooltip container and I will not

74
00:06:33,440 --> 00:06:41,270
set an initial value so it's basically undefined initially but then here in Show tooltip I will store

75
00:06:41,350 --> 00:06:49,700
discrete a div not in this constant but in this underscore tooltip container and that of course means

76
00:06:49,700 --> 00:06:55,970
that the places where I used to the container like this and now have to become this underscore to the

77
00:06:55,970 --> 00:06:57,320
container.

78
00:06:57,410 --> 00:07:05,180
The advantage of this approach is that the newly created def is now stored in a class property and unlike

79
00:07:05,180 --> 00:07:11,710
the constant this property is not just accessible from inside this method but from all the methods in

80
00:07:11,710 --> 00:07:12,770
a class.

81
00:07:12,770 --> 00:07:20,810
So now in height tooltip I can also access this tooltip container and remove that note and for that

82
00:07:20,840 --> 00:07:28,380
I will actually access this remove child and I will remove that to the container.

83
00:07:28,380 --> 00:07:35,410
Child now when we leave this with the mouse if we don't hover over the question mark anymore this tool

84
00:07:35,410 --> 00:07:37,820
to container which was added should be removed.

85
00:07:38,280 --> 00:07:44,490
However of course that means that I now also need to hook high tooltip up as a method that should be

86
00:07:44,490 --> 00:07:46,560
executed for mouse leaf.

87
00:07:46,850 --> 00:07:53,280
Now if that if I save that and we reload this page now when I hover over a question mark the tooltip

88
00:07:53,280 --> 00:08:00,090
still gets added but if I now leave with the mouse it's gone and now we have a tooltip that only shows

89
00:08:00,090 --> 00:08:03,060
up whilst we hover over the question mark.

90
00:08:03,060 --> 00:08:09,840
Now obviously styling is missing and the question mark is still positioned incorrectly but this is a

91
00:08:09,840 --> 00:08:16,710
never great step forward and we can already see some custom logic doing its job in our web component

92
00:08:17,130 --> 00:08:23,520
because you must never forget that this whole hovering lodge against on all happens inside of our web

93
00:08:23,520 --> 00:08:29,300
component and that already means that if we copy that and we add another tooltip.

94
00:08:29,310 --> 00:08:34,390
So another instance of this element somewhere else.

95
00:08:34,580 --> 00:08:35,210
Here we go.

96
00:08:37,560 --> 00:08:46,050
Then there will also have this question mark or which we can hover so we can easily reuse this functionality

97
00:08:46,050 --> 00:08:46,950
already.

98
00:08:46,970 --> 00:08:54,270
Now of course it would be nice if we had more styling more flexibility regarding our tool to text and

99
00:08:54,270 --> 00:08:55,120
so on.

100
00:08:55,170 --> 00:09:01,820
So let's work on that tooltip text next because having this generic dummy text here this is the tooltip

101
00:09:01,850 --> 00:09:04,370
text does not make a lot of sense.

102
00:09:04,470 --> 00:09:08,110
The text here should be sensible from outside instead.

103
00:09:08,190 --> 00:09:10,530
So let's take care about that in the next lecture.
