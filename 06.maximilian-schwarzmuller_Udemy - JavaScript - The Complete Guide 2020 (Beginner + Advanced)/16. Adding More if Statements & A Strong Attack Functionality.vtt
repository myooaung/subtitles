WEBVTT
1
00:00:02.140 --> 00:00:05.040
So now did we got our basic attack handler.

2
00:00:05.200 --> 00:00:08.830
Let's also make sure we can do a strong attack.

3
00:00:08.830 --> 00:00:12.650
We can perform a strong attack here by clicking the strong attack button.

4
00:00:12.700 --> 00:00:18.160
Now for that and the vendor jazz file we find that strong attack button constant which in the end gives

5
00:00:18.160 --> 00:00:24.420
us access to that strong attack button in our H2 Tamala code and therefore of course snapshots.

6
00:00:24.430 --> 00:00:29.530
We can add an event listener where we again listen to a click even on that button.

7
00:00:29.530 --> 00:00:36.190
But now I want to execute a different handler a different function of course a function which deals

8
00:00:36.190 --> 00:00:38.970
more damage to the monster.

9
00:00:38.980 --> 00:00:41.550
So for that I'll add a brand new function here.

10
00:00:41.570 --> 00:00:45.980
The strong attack handler sounds like a sensible name.

11
00:00:46.180 --> 00:00:48.600
And let's connect dad to the event listener.

12
00:00:48.600 --> 00:00:56.290
Just as we connect it the attack handler and in there I generally of course want to do the same as I

13
00:00:56.290 --> 00:00:57.010
do here.

14
00:00:57.010 --> 00:01:04.630
So I will copy it over though as you already know by that point already when you copy code you most

15
00:01:04.630 --> 00:01:08.590
of the time can avoid it and write more elegant code instead.

16
00:01:08.620 --> 00:01:15.280
So I will copy it for now but this will not be the final code instead especially with if statements

17
00:01:15.520 --> 00:01:17.990
we can write this in a more reusable way.

18
00:01:18.190 --> 00:01:21.460
Nonetheless let's start like this strong attack handler.

19
00:01:21.460 --> 00:01:26.370
Let's go up there and define a strong attack values.

20
00:01:26.380 --> 00:01:33.070
So did we have some some value which can change in one central place up here in this constant which

21
00:01:33.100 --> 00:01:38.380
is our maximum strong damage to the stout and maybe let's go for 17 year.

22
00:01:38.440 --> 00:01:41.620
Again you can play around with these values.

23
00:01:41.620 --> 00:01:46.300
So the strong attack value is now of course what I use in the strong attack handler here when we deal

24
00:01:46.300 --> 00:01:51.310
damage to the monster dad damage to monster deals to US stays the same.

25
00:01:51.400 --> 00:01:57.520
So the monster only has one damage it can deal to us one maximum damage and the win condition check

26
00:01:57.520 --> 00:02:00.330
here of course all the stays the same.

27
00:02:00.340 --> 00:02:07.030
So now with that that should already be all if we now reload we can press strong attack and as you see

28
00:02:07.030 --> 00:02:12.010
the monster health declines but player health a bit more really close.

29
00:02:12.040 --> 00:02:13.580
Yeah we might be winning.

30
00:02:13.780 --> 00:02:15.940
We won so a close finish.

31
00:02:15.940 --> 00:02:18.170
We won and that works.

32
00:02:18.180 --> 00:02:23.230
And right now of course we don't reset the game thereafter after so we can continue clicking these buttons

33
00:02:23.260 --> 00:02:25.590
which is kind of redundant.

34
00:02:25.600 --> 00:02:27.640
We'll take care about this later.

35
00:02:28.030 --> 00:02:31.690
And we're also not taking care about our bonus life in case we're losing.

36
00:02:31.690 --> 00:02:34.350
That's also something we'll take care about later.

37
00:02:34.390 --> 00:02:37.980
For now let's focus on the strong attack handler which does its job.

38
00:02:37.990 --> 00:02:43.480
But as I mentioned lots of code duplication here which is never a good sign.

39
00:02:44.380 --> 00:02:47.140
So how could we minimize that.

40
00:02:47.140 --> 00:02:50.160
How could we reuse some code for that.

41
00:02:50.170 --> 00:02:53.230
Let's simply analyze which code is equal.

42
00:02:53.290 --> 00:02:56.020
And well that's a quick analysis.

43
00:02:56.020 --> 00:03:02.950
All the code is equal the only thing that really differs is the maximum damage value we're passing to

44
00:03:02.950 --> 00:03:05.420
deal monster damage.

45
00:03:05.530 --> 00:03:10.610
So that's really a redundant extra function we have here.

46
00:03:10.630 --> 00:03:15.400
Well to reduce the code duplication let's add a brand new function

47
00:03:18.090 --> 00:03:22.670
which we maybe just name attack monster because that's what we'll do.

48
00:03:22.710 --> 00:03:29.400
I don't add handler at the end because this will not be attached directly to any event handler.

49
00:03:29.400 --> 00:03:35.610
Instead attack monster should be a function which I want to call directly from inside attack handler

50
00:03:35.940 --> 00:03:38.520
and from inside strong attack handler.

51
00:03:38.520 --> 00:03:45.500
And I want to pass a parameter to this attack monster function that identifies the attack mode.

52
00:03:45.510 --> 00:03:47.320
If you want to call it like this.

53
00:03:47.430 --> 00:03:50.000
So of course you can give this parameter any name you want.

54
00:03:50.010 --> 00:03:51.900
I just go with mode here.

55
00:03:51.900 --> 00:03:53.930
But the name is totally up to you.

56
00:03:54.270 --> 00:04:00.330
And in here we can then check the mode and the if condition and let's say the mode is a string.

57
00:04:00.330 --> 00:04:08.190
You could alternatively also go with numbers and say 0 is the normal attack one this strong attack here

58
00:04:08.190 --> 00:04:09.420
since it's easier to read.

59
00:04:09.450 --> 00:04:15.750
I'll go with the string value in check if mode is equal to attack if that's the case then I want to

60
00:04:15.750 --> 00:04:18.870
do my normal attack and calculate the value based on that.

61
00:04:19.320 --> 00:04:23.370
Otherwise I will go with the strong attack.

62
00:04:23.400 --> 00:04:30.870
So in the end what I want to do here is I want to create a variable which I'll name Max damage which

63
00:04:30.870 --> 00:04:31.990
initially is empty.

64
00:04:32.100 --> 00:04:37.340
And if the mode is attacked I'll set max damage equal to attack value.

65
00:04:37.440 --> 00:04:42.660
Otherwise I'll set max damage equal to strong attack value.

66
00:04:42.840 --> 00:04:50.160
And of course here I can use else because I will call attack monster from these two functions and either

67
00:04:50.160 --> 00:04:56.850
pass in mode which is a string of attack or a passing know mode or some other string.

68
00:04:57.000 --> 00:05:00.600
And then this will automatically treat this as a strong attack.

69
00:05:00.630 --> 00:05:06.390
You could of course Justice before with the calculator and the division also be more specific and check

70
00:05:06.390 --> 00:05:12.260
of mode is equal to strong attack and simply do nothing if the mode is neither of the two values.

71
00:05:12.270 --> 00:05:20.550
So either of the two code snippets or approaches will work just what they do if you pass an invalid

72
00:05:20.550 --> 00:05:21.570
mode is different.

73
00:05:21.570 --> 00:05:28.500
You can either always perform a strong attack or as with this case here only perform a strong attack

74
00:05:28.500 --> 00:05:31.290
if the mode is really set to strong attack.

75
00:05:31.290 --> 00:05:36.720
Now why am I doing this why do I create that max damage variable which is then set to different values

76
00:05:36.720 --> 00:05:37.430
here.

77
00:05:37.680 --> 00:05:44.280
Because now we can actually grab this entire code here from attack handler and move it below it as if

78
00:05:44.280 --> 00:05:52.470
statement and now simply pass max damage here to deal monster damage because now the max damage is dynamic

79
00:05:52.740 --> 00:05:59.460
and it's dynamically set here based on the mode we receive as a parameter here in attack monster and

80
00:05:59.460 --> 00:06:03.630
all the other code is always the same which makes sense I guess.

81
00:06:03.630 --> 00:06:10.110
So now we just have to call attack monster from inside the attack handler and since DSD function gets

82
00:06:10.110 --> 00:06:16.860
executed when we clicked a normal attack button here as a value for mode I want to in the end set my

83
00:06:16.860 --> 00:06:21.650
max damage to the attack value all day for passive mode of attack in there.

84
00:06:21.720 --> 00:06:29.150
So I is simply forward attack here and now we can call the same function from inside the strong attack

85
00:06:29.150 --> 00:06:38.180
handler and forward strong attack pass in strong attack as a value for mode now in case you're wondering

86
00:06:38.180 --> 00:06:42.320
why we're not directly setting attack monster here on the event listeners.

87
00:06:42.320 --> 00:06:47.840
We could almost do that but keep in mind that here we can specify the value for the parameters we're

88
00:06:47.840 --> 00:06:55.340
passing in so this mode parameter which we expect here when we attach a function to event listener we

89
00:06:55.340 --> 00:06:57.730
can specified as actually we can.

90
00:06:57.740 --> 00:06:59.140
But we have learned it yet.

91
00:06:59.150 --> 00:07:05.570
So for now let's take this extra step of doing it in our handler functions.

92
00:07:05.660 --> 00:07:08.290
Now the handler functions are very lean.

93
00:07:08.330 --> 00:07:14.060
They execute the same function with different data which is passed in and in that function we then take

94
00:07:14.060 --> 00:07:20.000
that different data use it if statement and therefore change to one piece of logic that does differ

95
00:07:20.000 --> 00:07:21.740
for both buttons.

96
00:07:21.740 --> 00:07:28.400
So now if we save that and we reload I can launch normal attacks or strong attacks against a monster

97
00:07:28.400 --> 00:07:30.530
in both works ask before.

98
00:07:30.530 --> 00:07:32.160
Now here we have a draw actually.

99
00:07:32.420 --> 00:07:33.800
Good to see that.

100
00:07:33.800 --> 00:07:38.540
And we do this in an elegant way by reusing code with the help of a if statement.
