WEBVTT
1
00:00:02.190 --> 00:00:06.360
The continue keyword is a bit like break, it also stops

2
00:00:06.480 --> 00:00:11.820
the current execution of this code in your loop but it doesn't stop the entire loop,

3
00:00:11.820 --> 00:00:19.400
so instead it just moves on to the next iteration. I can best show how it works, here in the console

4
00:00:19.430 --> 00:00:27.350
if we add a quick for loop here, a normal for loop with i equal to zero, i smaller than 5 and i++

5
00:00:27.350 --> 00:00:34.880
let's say, curly braces and then shift enter to write some code between, and now of course if I console

6
00:00:34.880 --> 00:00:40.520
log i here, unsurprisingly we print 0 to 4.

7
00:00:40.790 --> 00:00:45.070
Now press the up arrow to be able to edit this again

8
00:00:45.260 --> 00:00:52.310
and now let's add a little if check in there where we check if i is equal to let's say three which is

9
00:00:52.310 --> 00:00:54.590
one of the values we're printing here.

10
00:00:54.740 --> 00:00:58.250
If that's the case, for whatever reason I don't want to print it here,

11
00:00:58.370 --> 00:01:00.210
well then of course we could use break,

12
00:01:00.230 --> 00:01:00.620
right,

13
00:01:00.620 --> 00:01:04.850
this will stop the loop execution. If we hit enter,

14
00:01:04.910 --> 00:01:13.480
now we see 0, 1, 2 but we don't see 3 but also not 4 because we cancelled function execution with break.

15
00:01:13.700 --> 00:01:21.680
This might or might not be what you want because I actually only wanted to skip this three value, I didn't

16
00:01:21.680 --> 00:01:27.110
want to cancel the entire loop execution and that's exactly what continue does.

17
00:01:27.350 --> 00:01:34.430
If you use continue instead of break, you just skip this loop iteration, so all the code after continue

18
00:01:34.430 --> 00:01:36.170
will not be executed

19
00:01:36.530 --> 00:01:42.320
but for the next iteration it will continue as normal, so it will not break out of the loop, it just continues

20
00:01:42.320 --> 00:01:44.040
to the next execution.

21
00:01:44.060 --> 00:01:47.260
So if I now hit enter here, we see 0, 1, 2, 4,

22
00:01:47.330 --> 00:01:53.120
we don't see 3 because there we continue and as I said, this means this code is skipped for this loop

23
00:01:53.120 --> 00:01:53.990
iteration,

24
00:01:53.990 --> 00:01:58.250
subsequent iterations like the 1, 4, 4 are executed.

25
00:01:58.250 --> 00:01:59.410
So break and continue

26
00:01:59.410 --> 00:02:03.080
give you some extra control over your loop execution,

27
00:02:03.080 --> 00:02:08.860
you definitely don't need them in every loop you write but sometimes, you have some code where you want

28
00:02:08.860 --> 00:02:15.050
to break out of a loop up on some condition being met or you want to skip an iteration based on some

29
00:02:15.050 --> 00:02:17.480
condition and then break and continue

30
00:02:17.480 --> 00:02:18.680
are your friends.
