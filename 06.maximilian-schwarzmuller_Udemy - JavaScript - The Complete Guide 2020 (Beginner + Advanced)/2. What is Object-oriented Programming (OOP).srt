1
00:00:02,490 --> 00:00:05,860
So what is object oriented programming,

2
00:00:05,970 --> 00:00:09,480
also often abbreviated as OOP?

3
00:00:09,630 --> 00:00:15,580
It's an approach, it's a way of writing and of structuring your code in the end,

4
00:00:15,660 --> 00:00:22,650
it's a way of thinking or reasoning about your code and planning your code and the idea behind object

5
00:00:22,710 --> 00:00:29,020
oriented programming is that you work with kind of real life entities in your code.

6
00:00:29,040 --> 00:00:32,970
Now I already mentioned this before when I talked about objects,

7
00:00:32,970 --> 00:00:34,920
so that's not that new.

8
00:00:34,920 --> 00:00:42,810
We use objects to group data together in the end and we do so to for example create a movie object

9
00:00:43,080 --> 00:00:51,630
so that we can work with such a movie in our code and we can think about our code in terms or in a way

10
00:00:51,630 --> 00:00:53,660
that's easier to think about

11
00:00:53,700 --> 00:01:01,750
to us humans. Now object oriented programming is just that, it's all about embracing that logic,

12
00:01:01,750 --> 00:01:09,300
that we work with objects, that we work with objects only almost in our code and we put all our code into

13
00:01:09,300 --> 00:01:13,160
different objects, so into different methods of objects in the end.

14
00:01:13,160 --> 00:01:14,310
Now here's an example,

15
00:01:14,310 --> 00:01:20,040
let's say we're building a very simple online shop. There we might have a list of products and hence

16
00:01:20,070 --> 00:01:27,350
we might build such a product list component which in the end holds all the data and in methods, also

17
00:01:27,360 --> 00:01:32,030
all the logic that is related to outputting such a list of products.

18
00:01:32,280 --> 00:01:37,800
So it holds the logic for rendering a list of products but also for fetching that list of products

19
00:01:37,860 --> 00:01:44,520
and it probably also has a property or a couple of properties which help us store that loaded product

20
00:01:44,520 --> 00:01:45,590
data.

21
00:01:45,660 --> 00:01:50,910
So it's an object that holds the rendering and fetching logic and all the data that's related to it.

22
00:01:50,910 --> 00:01:54,610
Now we might have another object which reflects a single product,

23
00:01:54,720 --> 00:02:00,690
this object might be responsible for rendering the details about a single product and maybe it also

24
00:02:00,690 --> 00:02:05,320
renders a button and it holds the logic to add a product to a cart.

25
00:02:05,340 --> 00:02:11,040
So that's the responsibility of this product and therefore of course in this example, this product would

26
00:02:11,040 --> 00:02:13,800
be kind of linked to the product list,

27
00:02:13,800 --> 00:02:21,420
so inside of methods of the product list, we might be working with this product object. And then we might

28
00:02:21,420 --> 00:02:27,270
have a shopping cart object which is also kind of linked to our product because we trigger the addition

29
00:02:27,270 --> 00:02:33,750
to the cart from inside the logic stored in this product object and that shopping cart is responsible

30
00:02:33,750 --> 00:02:40,530
for let's say outputting all the products that are part of it and the total sum and it may be also offers

31
00:02:40,530 --> 00:02:46,560
a button to the user or renders a button to the user and holds the logic that is executed when the button

32
00:02:46,560 --> 00:02:49,640
is clicked to order the items.

33
00:02:49,650 --> 00:02:51,860
So that's a theoretical example,

34
00:02:51,870 --> 00:02:59,490
it is actually the example we'll have a look at into some module to learn about object oriented programming

35
00:03:00,210 --> 00:03:04,900
and to also learn about another important feature, classes.

36
00:03:05,010 --> 00:03:10,350
But let's first of all start with this object oriented programming approach,

37
00:03:10,380 --> 00:03:14,910
let's start with this way of thinking about it because for that, we don't really need classes.
