1
00:00:02,230 --> 00:00:06,060
So we saw getBoundingClientRect which gives us some general data,

2
00:00:06,310 --> 00:00:12,450
now you can also get more specialized data by diving into your DOM element with special properties,

3
00:00:12,460 --> 00:00:20,730
for example there is offsetTop. offsetTop gives you the distance of the topmost point here to

4
00:00:20,740 --> 00:00:25,690
the top of this coordinate or to the start of this coordinate system and of course you don't just

5
00:00:25,690 --> 00:00:29,620
have offsetTop, you also have offsetLeft,

6
00:00:29,620 --> 00:00:30,790
makes sense I guess.

7
00:00:30,820 --> 00:00:36,730
So these are basically your x and y values here or your left and top values from that object we saw

8
00:00:36,730 --> 00:00:37,830
before.

9
00:00:38,140 --> 00:00:46,770
You also however have clientTop and clientLeft and now that's a different thing as you can tell, where

10
00:00:46,870 --> 00:00:50,800
offset gives you the outer positioning,

11
00:00:50,800 --> 00:00:58,330
so the position of the box in the coordinate system, the client properties give you the inner positioning

12
00:00:58,480 --> 00:01:05,020
and specifically clientTop and clientLeft tell you how far it is from your left and topmost point

13
00:01:05,470 --> 00:01:11,170
to your left and topmost point of the content of this box and the content of the box is basically the

14
00:01:11,170 --> 00:01:16,230
entire box without any borders and potential scroll bars

15
00:01:16,270 --> 00:01:18,150
that might be rendered in there.

16
00:01:18,250 --> 00:01:24,310
So at the moment, there is no scroll bar here but I have a border of 15 pixels and therefore that's

17
00:01:24,310 --> 00:01:29,400
exactly that value which we see here for clientTop and clientLeft.

18
00:01:29,470 --> 00:01:37,460
You can also get some of the sizes for that, you can get the offsetWidth and you can get the offsetHeight

19
00:01:37,880 --> 00:01:45,620
and that's the entire width and height of this box, including all borders and scroll bars. Now unsurprisingly,

20
00:01:45,640 --> 00:01:54,700
you also have clientWidth and clientHeight and that's again the inner width and height without borders

21
00:01:54,700 --> 00:01:59,740
and scroll bars, therefore for the width, it's basically the width of 300 which we saw just

22
00:01:59,740 --> 00:02:05,890
a second ago minus the border times 2 because we got a border on the left and on the right and if

23
00:02:05,890 --> 00:02:10,630
we had a scroll bar, that would be deducted as well, the same for the height.

24
00:02:10,640 --> 00:02:17,650
Also interesting, this content here is scrollable as you can see, the scroll bar here on Mac is only

25
00:02:17,650 --> 00:02:21,670
temporarily rendered and therefore not included in that calculation I just showed you

26
00:02:21,670 --> 00:02:28,370
but regarding the scrolling, we can also get some interesting data, we can for example get scrollHeight.

27
00:02:28,630 --> 00:02:33,640
Now what scrollHeight gives you is the entire height of the content including the part which is currently

28
00:02:33,640 --> 00:02:38,650
not visible in the box, so which is outside of the box at the bottom here for example or now at the

29
00:02:38,650 --> 00:02:39,730
top.

30
00:02:39,850 --> 00:02:45,610
So scrollHeight is the entire height including the non-visible parts because they're currently scrolled

31
00:02:45,610 --> 00:02:47,660
out of view.

32
00:02:47,890 --> 00:02:50,860
You also have another interesting value, scrollTop,

33
00:02:50,900 --> 00:02:58,350
scrollTop gives you information by how much you scroll that content in the box.

34
00:02:58,440 --> 00:03:04,110
So if I scroll the content all the way to the bottom for example, you see now I have a value of 240 there

35
00:03:04,380 --> 00:03:09,600
because I basically scroll the content up 240 pixels you could say. If I scroll somewhere in the middle,

36
00:03:09,870 --> 00:03:12,060
that obviously shrinks, if I go all the way to the top

37
00:03:12,090 --> 00:03:14,070
so I haven't scrolled at all,

38
00:03:14,070 --> 00:03:15,990
I got zero again.

39
00:03:16,100 --> 00:03:19,900
Now you don't need to memorize all these properties of course, on MDN,

40
00:03:19,900 --> 00:03:25,610
you can check out the HTML element article and there, you'll find all the properties there and on the

41
00:03:25,610 --> 00:03:27,560
element article to be precise

42
00:03:27,560 --> 00:03:28,900
and there you can read more about that

43
00:03:28,940 --> 00:03:33,140
and then of course also just play around with them to get a feeling for what these values do and what

44
00:03:33,140 --> 00:03:39,410
they offer. Attached you also find this simple slide where I just summarized the key values for you

45
00:03:39,740 --> 00:03:42,430
and what they mean and which values they give you.

46
00:03:42,530 --> 00:03:48,590
One note about the entire document width, if you want to get that, you got two options, you can use 

47
00:03:48,590 --> 00:03:57,140
window.innerWidth and window.innerHeight and that should give you the width and height you have here

48
00:03:57,230 --> 00:03:58,430
inside of your window,

49
00:03:58,430 --> 00:04:02,210
so without the dev tools, without that URL bar at the top and so on

50
00:04:02,960 --> 00:04:08,240
but the problem with that is that if you had a visible scroll bar on Internet Explorer for example or

51
00:04:08,240 --> 00:04:14,390
on Windows in general, you might have that, then this will actually include the scroll bar and not subtract it

52
00:04:14,510 --> 00:04:19,700
from the width and height and therefore actually give you more width and height than you actually

53
00:04:19,700 --> 00:04:24,470
have available for your content. Hence a better way of getting the real available width and height

54
00:04:24,740 --> 00:04:32,060
is to go to document, document element which is your root element including head and body so to say

55
00:04:32,060 --> 00:04:36,100
and there you use the clientWidth and the clientHeight. Here,

56
00:04:36,100 --> 00:04:42,320
this gives me the exact same values as window.innerWidth and innerHeight simply because I have no scroll

57
00:04:42,320 --> 00:04:43,090
bar here

58
00:04:43,220 --> 00:04:45,990
but again for the reason I just mentioned, if you had one,

59
00:04:46,190 --> 00:04:52,220
these values are more reliable because they will deduct any visible scroll bars and give you the real

60
00:04:52,220 --> 00:04:53,800
width and height that is available.
