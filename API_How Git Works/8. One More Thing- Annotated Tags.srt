1
00:00:00,840 --> 00:00:06,590
So let's recap. In the Git object database, you have blobs, arbitrary

2
00:00:06,590 --> 00:00:12,940
content, trees, the equivalent of directories, and commits.

3
00:00:12,940 --> 00:00:16,080
There is also a fourth kind of object in the database.

4
00:00:16,080 --> 00:00:19,440
It's something called annotated tags.

5
00:00:19,440 --> 00:00:23,920
Maybe you know what a tag is. It's like a label that you put on a commit.

6
00:00:23,920 --> 00:00:27,350
For example, you might tag a commit to mark a release.

7
00:00:27,350 --> 00:00:29,940
That's a typical reason to use a tag.

8
00:00:29,940 --> 00:00:34,170
And there is also a special kind of tag called an annotated tag that

9
00:00:34,170 --> 00:00:38,600
carries additional data like a message, and the name of the person who

10
00:00:38,600 --> 00:00:42,040
created the tag, and the date of the tag.

11
00:00:42,040 --> 00:00:45,260
Now we won't go into details about tags for now.

12
00:00:45,260 --> 00:00:48,950
We'll do it later in this training because by then it will be easier to

13
00:00:48,950 --> 00:00:55,110
understand how tags work. For now, just know that an annotated tag like this one

14
00:00:55,110 --> 00:01:00,320
is a small object in the database that contains the data, the message, author,

15
00:01:00,320 --> 00:01:05,930
and so on, and it points to a commit. So, it's another type of database object,

16
00:01:05,930 --> 00:01:08,540
very similar to a commit in a way.

17
00:01:08,540 --> 00:01:10,380
Again, the details will come later,

18
00:01:10,380 --> 00:01:15,310
but I wanted to at least mention annotated tags for completeness

19
00:01:15,310 --> 00:01:18,070
because there is nothing else in the database,

20
00:01:18,070 --> 00:01:21,340
just these four types of objects.

21
00:01:21,340 --> 00:01:31,000
So, if you know about blobs, trees, commits, and annotated tags, then congratulations! Now you know the entire Git object model.

