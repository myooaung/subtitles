WEBVTT
1
00:00:00.701 --> 00:00:04.754
To create our RowMapper I'm going to first exit full screen

2
00:00:04.754 --> 00:00:07.701
and make sure that my server has stopped.

3
00:00:07.701 --> 00:00:12.501
Then I'm going to right click on our com.

4
00:00:12.501 --> 00:00:13.034
Pluralsight.

5
00:00:13.034 --> 00:00:15.701
repository and say New Package.

6
00:00:15.701 --> 00:00:18.272
These don't have to be in their own package,

7
00:00:18.272 --> 00:00:23.086
but to reduce clutter I like to put a util package underneath my repository,

8
00:00:23.086 --> 00:00:25.855
so that'll be com.

9
00:00:25.855 --> 00:00:26.547
Pluralsight.

10
00:00:26.547 --> 00:00:27.239
repository.

11
00:00:27.239 --> 00:00:30.701
util and we'll click Finish.

12
00:00:30.701 --> 00:00:38.861
Now from here we can go ahead and say New Class and we can put in a

13
00:00:38.861 --> 00:00:43.113
name of RideRowMapper and we can add an interface.

14
00:00:43.113 --> 00:00:47.230
And we want to use the RowMapper interface and make

15
00:00:47.230 --> 00:00:50.145
sure you choose the one from org.

16
00:00:50.145 --> 00:00:50.590
springframework.

17
00:00:50.590 --> 00:00:51.034
jdbc.

18
00:00:51.034 --> 00:00:51.479
core.

19
00:00:51.479 --> 00:00:57.701
You'll oftentimes have two show up, as you can see here on my screen,

20
00:00:57.701 --> 00:01:01.434
one for swing and one for jdbc.

21
00:01:01.434 --> 00:01:01.968
core.

22
00:01:01.968 --> 00:01:05.168
We want to use the jdbc.

23
00:01:05.168 --> 00:01:05.701
core.

24
00:01:05.701 --> 00:01:10.333
Let's click OK and click Finish and now it's going to

25
00:01:10.333 --> 00:01:13.701
ask us what type we want in here.

26
00:01:13.701 --> 00:01:16.701
Let's change that to Ride.

27
00:01:16.701 --> 00:01:21.501
And rather than type all of this out,

28
00:01:21.501 --> 00:01:27.201
we can actually go into our RideRepositoryImpl and copy this

29
00:01:27.201 --> 00:01:31.701
out of the code that we had just created.

30
00:01:31.701 --> 00:01:37.590
So we have our @Override method that we can copy in

31
00:01:37.590 --> 00:01:43.812
here and that's just in our getRides,

32
00:01:43.812 --> 00:01:52.701
and go back to our RideRowMapper and paste that in.

33
00:01:52.701 --> 00:01:56.110
It should automatically do all of our imports for us and you can see it

34
00:01:56.110 --> 00:01:59.388
looks just like the anonymous inner class that we did.

35
00:01:59.388 --> 00:02:06.701
Now we can go back and change our RideRepository to use this RowMapper.

36
00:02:06.701 --> 00:02:15.257
So we can come down here and after that comma delete everything but that

37
00:02:15.257 --> 00:02:19.415
closing parenthesis and semicolon and say new RideRowMapper,

38
00:02:19.415 --> 00:02:25.415
and since it is in a separate package you will have to import it,

39
00:02:25.415 --> 00:02:28.527
and it should add the parenthesis on the end,

40
00:02:28.527 --> 00:02:30.658
if not you'll need to do that,

41
00:02:30.658 --> 00:02:35.760
and then save that and you'll see that we have our open close parenthesis on

42
00:02:35.760 --> 00:02:40.701
there that has now changed our implementation from an anonymous inner class

43
00:02:40.701 --> 00:02:44.701
to an external class for that RideRowMapper.

44
00:02:44.701 --> 00:02:50.415
Now we can exit full screen, start our server up,

45
00:02:50.415 --> 00:02:55.565
once that starts ups we can go back to our RideControllerTest,

46
00:02:55.565 --> 00:02:59.246
scroll down to our GetRides, right click on it,

47
00:02:59.246 --> 00:03:04.974
and say Run As Unit Test again and see that our unit test came

48
00:03:04.974 --> 00:03:09.883
back successful and we can verify that by looking at the results

49
00:03:09.883 --> 00:03:13.082
and that we have our green code.

50
00:03:13.082 --> 00:03:19.272
Now let's go ahead and work on changing our create ride to now

51
00:03:19.272 --> 00:03:30.000
return an object rather than just what we had originally defined not coming from the database.

