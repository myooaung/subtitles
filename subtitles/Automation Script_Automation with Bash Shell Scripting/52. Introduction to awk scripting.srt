1
00:00:02,150 --> 00:00:03,795
Hi friends.

2
00:00:03,795 --> 00:00:08,040
In this video, we are going to discuss about Ada Lovelace gripping that to

3
00:00:08,040 --> 00:00:13,040
simply very introduction part to your analagous thing, right?

4
00:00:13,040 --> 00:00:16,595
Okay, anyway, from our previous videos, right?

5
00:00:16,595 --> 00:00:22,610
We know what is the basic and replicate command syntax, right?

6
00:00:22,610 --> 00:00:24,665
So that is like a W k,

7
00:00:24,665 --> 00:00:28,655
some options than pattern or condition,

8
00:00:28,655 --> 00:00:31,460
then your action, then filename.

9
00:00:31,460 --> 00:00:33,455
And the syntax.

10
00:00:33,455 --> 00:00:36,230
You know you are providing input from firing him.

11
00:00:36,230 --> 00:00:39,875
So you can also provide input for your AWPA command.

12
00:00:39,875 --> 00:00:43,055
In this way, some command output you can do

13
00:00:43,055 --> 00:00:47,285
as input for your enemy k by using pipeline, right?

14
00:00:47,285 --> 00:00:53,030
And in this write, this action is going to perform on this file or on

15
00:00:53,030 --> 00:00:59,285
the command output based on either pattern or condition.

16
00:00:59,285 --> 00:01:01,565
Suppose if you are using pattern syntax,

17
00:01:01,565 --> 00:01:03,815
then if pattern is matching,

18
00:01:03,815 --> 00:01:09,725
then the action is going to perform on your record of your file.

19
00:01:09,725 --> 00:01:15,755
So by default, action is going to perform on each and every line of your input.

20
00:01:15,755 --> 00:01:20,120
But in case if you mentioned either pattern or a condition,

21
00:01:20,120 --> 00:01:24,215
then if pattern is matching or condition is satisfied,

22
00:01:24,215 --> 00:01:29,660
then only the action is going to perform on the input of your file.

23
00:01:29,660 --> 00:01:31,670
Write c.

24
00:01:31,670 --> 00:01:34,950
Let me give you one simple example.

25
00:01:37,930 --> 00:01:42,350
See, suppose if you see cat who'd EDC password file,

26
00:01:42,350 --> 00:01:45,935
you are having so many records on your phi.

27
00:01:45,935 --> 00:01:48,275
That means we got means number of lines right?

28
00:01:48,275 --> 00:01:53,075
Now, if I use singly AW K, this is your command.

29
00:01:53,075 --> 00:01:58,745
I'm not using any options simply I'm using directly print $1,

30
00:01:58,745 --> 00:02:01,505
then our input file.

31
00:02:01,505 --> 00:02:04,415
Then what what is your action?

32
00:02:04,415 --> 00:02:09,005
Just tried to forward printing each and every record from this file.

33
00:02:09,005 --> 00:02:11,615
Let means print each and every line from this file.

34
00:02:11,615 --> 00:02:12,935
Yes.

35
00:02:12,935 --> 00:02:18,960
Now what I'm doing is I'm going to mention some pattern.

36
00:02:18,970 --> 00:02:21,095
Right now. See the output.

37
00:02:21,095 --> 00:02:23,720
You're going to get only those two lines.

38
00:02:23,720 --> 00:02:28,460
Because in those two lanes only you how root matching word.

39
00:02:28,460 --> 00:02:30,860
Right? So this is based on pattern.

40
00:02:30,860 --> 00:02:37,400
Suppose I want to display the records based on condition.

41
00:02:37,400 --> 00:02:42,860
My condition is if record number is greater than or equal to

42
00:02:42,860 --> 00:02:50,850
some three. Now see that?

43
00:02:51,190 --> 00:02:52,940
Right?

44
00:02:52,940 --> 00:02:56,580
Oh, let me print record numbers so that he can get it.

45
00:02:59,140 --> 00:03:02,120
C only from three you are

46
00:03:02,120 --> 00:03:05,270
displaying because conditioning is greater than or equal to three.

47
00:03:05,270 --> 00:03:06,815
So from third line,

48
00:03:06,815 --> 00:03:08,510
I want display all the lines.

49
00:03:08,510 --> 00:03:12,725
That means, so based on other pattern or condition,

50
00:03:12,725 --> 00:03:15,410
if you don't write either pattern or condition,

51
00:03:15,410 --> 00:03:20,765
you are edible case going to work based on these action on each and every line.

52
00:03:20,765 --> 00:03:21,635
Right?

53
00:03:21,635 --> 00:03:25,970
That's fine. This is abort simply or edit wiki and you have some options for your AWPA.

54
00:03:25,970 --> 00:03:29,090
And already we have seen in our previous videos hyphen here for NIH funding.

55
00:03:29,090 --> 00:03:30,005
Options.

56
00:03:30,005 --> 00:03:32,165
Now you have one more option that is high funny,

57
00:03:32,165 --> 00:03:36,440
and this is helpful in your inner Lucas gripping part, right?

58
00:03:36,440 --> 00:03:39,305
Segues a replica scripting is nothing but

59
00:03:39,305 --> 00:03:43,790
including to more actions along with your, this action.

60
00:03:43,790 --> 00:03:47,990
Now whatever you are having in your public key, the action part.

61
00:03:47,990 --> 00:03:50,795
Along with these, you are going to add two more actions

62
00:03:50,795 --> 00:03:53,945
before this one action and offer this on action.

63
00:03:53,945 --> 00:03:58,609
Right. Now, see that the syntax for your Edit Wiki scripting,

64
00:03:58,609 --> 00:04:01,745
AWPA begin or start action,

65
00:04:01,745 --> 00:04:04,445
then you are actual action here.

66
00:04:04,445 --> 00:04:07,325
This, this actually is going to perform on your input.

67
00:04:07,325 --> 00:04:09,935
Then end or stop action.

68
00:04:09,935 --> 00:04:12,400
Then you are filename, right?

69
00:04:12,400 --> 00:04:16,420
See sometimes to write this lengthy logic,

70
00:04:16,420 --> 00:04:20,035
whatever the logic you have inside of your quotation, single quotations, right?

71
00:04:20,035 --> 00:04:21,460
That is Alinsky logic.

72
00:04:21,460 --> 00:04:24,070
Sometimes, if it is a lengthy logic,

73
00:04:24,070 --> 00:04:26,710
instead of writing this logic on your command line,

74
00:04:26,710 --> 00:04:30,730
you can also write that logic in one file and you can call

75
00:04:30,730 --> 00:04:35,365
while learning you're edible decay that file in this way.

76
00:04:35,365 --> 00:04:39,040
Awpa hyphen AF, U was actually whatever

77
00:04:39,040 --> 00:04:40,960
the logic you are having known that logic we are going

78
00:04:40,960 --> 00:04:43,270
to write in this file. Then you are finally.

79
00:04:43,270 --> 00:04:45,999
So you can use a stride forward this syntax.

80
00:04:45,999 --> 00:04:49,420
Or if you feel your logic is lengthy for your enemies,

81
00:04:49,420 --> 00:04:53,850
then you can write your logic in one file with extension has not AWPA file,

82
00:04:53,850 --> 00:04:55,640
and you can call that file in this way.

83
00:04:55,640 --> 00:04:59,180
Well, running your advocate command, right?

84
00:04:59,180 --> 00:05:04,055
So finally, you are edible case crypting syntax is a WK,

85
00:05:04,055 --> 00:05:06,215
begin or start action.

86
00:05:06,215 --> 00:05:07,865
Then this is actual action,

87
00:05:07,865 --> 00:05:12,305
then middle action, then end or stop action.

88
00:05:12,305 --> 00:05:16,534
So you have to remember the first, this syntax.

89
00:05:16,534 --> 00:05:18,920
So instead of writing this logic here,

90
00:05:18,920 --> 00:05:23,150
what we are doing if that logic is lengthy than you are writing that logic into

91
00:05:23,150 --> 00:05:28,505
one file and you're calling that file using these hyphenated option, right?

92
00:05:28,505 --> 00:05:32,105
And here you have to know that begin block or begin

93
00:05:32,105 --> 00:05:36,410
starting action is performed before reading the file.

94
00:05:36,410 --> 00:05:39,260
So you know that from your edit MCAT command,

95
00:05:39,260 --> 00:05:41,030
whatever the action you are having here,

96
00:05:41,030 --> 00:05:45,515
note that e is going to perform on each and every line of your input.

97
00:05:45,515 --> 00:05:47,510
But big inaction, no,

98
00:05:47,510 --> 00:05:50,375
it is not going to do anything with your input.

99
00:05:50,375 --> 00:05:53,300
Before reading the file.

100
00:05:53,300 --> 00:05:57,050
You are, whatever the logic you-how inside of your begin,

101
00:05:57,050 --> 00:06:02,610
inside of these curly braces that will execute in a straightforward way.

102
00:06:03,970 --> 00:06:05,480
Right?

103
00:06:05,480 --> 00:06:07,175
Now, end block.

104
00:06:07,175 --> 00:06:10,340
And the block is perform after processing the file.

105
00:06:10,340 --> 00:06:13,925
That means after completion of this logic.

106
00:06:13,925 --> 00:06:16,430
At the end, that is the last step.

107
00:06:16,430 --> 00:06:19,970
At the end, you're going to execute this and the logic,

108
00:06:19,970 --> 00:06:23,720
the let say suppose you how some ten lines in your file.

109
00:06:23,720 --> 00:06:26,675
So this logic is going to perform middle action,

110
00:06:26,675 --> 00:06:28,820
Hollywood ordinal action, actual action is going to

111
00:06:28,820 --> 00:06:31,310
perform an each and every line of this ten lines.

112
00:06:31,310 --> 00:06:34,925
Once this action on ten lines is completed,

113
00:06:34,925 --> 00:06:37,260
then ended block will execute.

114
00:06:37,540 --> 00:06:39,005
Right?

115
00:06:39,005 --> 00:06:44,360
So start action is before going to start your actual action on your input file.

116
00:06:44,360 --> 00:06:49,235
And Andy's offer completion of your actual action on your input file.

117
00:06:49,235 --> 00:06:52,400
Alright, so begin and the remaining is

118
00:06:52,400 --> 00:06:56,780
your actual action or you are action to perform your file.

119
00:06:56,780 --> 00:06:57,905
Write.

120
00:06:57,905 --> 00:07:01,205
Rest of the actions are performed while parsing a file.

121
00:07:01,205 --> 00:07:02,615
That's okay.

122
00:07:02,615 --> 00:07:04,595
While working with the enemy script,

123
00:07:04,595 --> 00:07:07,340
you ought to remember some points.

124
00:07:07,340 --> 00:07:08,600
They are.

125
00:07:08,600 --> 00:07:12,815
Awpa needs at least one action to run a script.

126
00:07:12,815 --> 00:07:17,390
You can use either this action now or this action, or this action.

127
00:07:17,390 --> 00:07:19,355
If you mentioned at least one action,

128
00:07:19,355 --> 00:07:21,530
then there is a US with this edible can't skip,

129
00:07:21,530 --> 00:07:22,865
otherwise there is no use.

130
00:07:22,865 --> 00:07:27,360
Let me show you that. Suppose.

131
00:07:27,460 --> 00:07:30,590
So there's, there is no much difference between your area.

132
00:07:30,590 --> 00:07:31,955
Look at command nondescript,

133
00:07:31,955 --> 00:07:34,715
only including begin and ending block. That's it.

134
00:07:34,715 --> 00:07:36,470
Now see here WK,

135
00:07:36,470 --> 00:07:39,260
I am not writing any action simply I'm providing

136
00:07:39,260 --> 00:07:43,235
empty single quotations actually inside this yard, right?

137
00:07:43,235 --> 00:07:45,170
You are actual logic.

138
00:07:45,170 --> 00:07:47,360
I'm an actual action or begin,

139
00:07:47,360 --> 00:07:49,460
orient all those things we ought right inside of

140
00:07:49,460 --> 00:07:52,205
this single quotations right on your command line.

141
00:07:52,205 --> 00:07:54,275
Then let me provide some file.

142
00:07:54,275 --> 00:07:58,680
There is no output because there is no action, no output.

143
00:07:58,870 --> 00:08:00,455
Right?

144
00:08:00,455 --> 00:08:04,400
So need at least one action to run your script.

145
00:08:04,400 --> 00:08:07,970
Then known enough input for big in action.

146
00:08:07,970 --> 00:08:11,450
Let's assume that you are having only begun action up to this,

147
00:08:11,450 --> 00:08:14,285
you have a WK, single quotation.

148
00:08:14,285 --> 00:08:16,730
Then this logic, then you are completing

149
00:08:16,730 --> 00:08:19,850
your single cottage near that means you are skipping this logic.

150
00:08:19,850 --> 00:08:22,730
Are the time you don't need to provide any input.

151
00:08:22,730 --> 00:08:28,590
Let me show you that. Suppose a WK, Right?

152
00:08:28,990 --> 00:08:32,044
You have to mention begin.

153
00:08:32,044 --> 00:08:33,980
Then simply I am writing print.

154
00:08:33,980 --> 00:08:34,970
Ok.

155
00:08:34,970 --> 00:08:38,180
That's a close.

156
00:08:38,180 --> 00:08:41,345
Even if you provide input, no problem.

157
00:08:41,345 --> 00:08:43,760
Even if you don't provide for your began

158
00:08:43,760 --> 00:08:46,250
only if you have begun action in your edible they can command,

159
00:08:46,250 --> 00:08:48,830
it will work without having any input.

160
00:08:48,830 --> 00:08:52,775
But for remaining this action and inaction,

161
00:08:52,775 --> 00:08:55,910
you need input. Right?

162
00:08:55,910 --> 00:09:00,245
Now let me write simple edible case crypto by including all you are begin,

163
00:09:00,245 --> 00:09:03,890
actual and end actions, right?

164
00:09:03,890 --> 00:09:06,800
Begin, See what I am writing here.

165
00:09:06,800 --> 00:09:14,300
Print working on quote,

166
00:09:14,300 --> 00:09:20,660
EDC password file.

167
00:09:20,660 --> 00:09:24,440
So this is my big inaction before going to work with

168
00:09:24,440 --> 00:09:29,945
your file using your AW k. This is what I want to execute.

169
00:09:29,945 --> 00:09:32,810
The actual logic, inaction logic what I need

170
00:09:32,810 --> 00:09:36,125
is the lines which are matching with the root word,

171
00:09:36,125 --> 00:09:46,295
those lines only I want to print, right?

172
00:09:46,295 --> 00:09:48,920
Then end.

173
00:09:48,920 --> 00:09:52,655
What is end? After completion of your actual logic,

174
00:09:52,655 --> 00:09:57,180
I want to simply print completed your action,

175
00:09:59,440 --> 00:10:08,010
completed work on route EDC, password file.

176
00:10:10,090 --> 00:10:12,050
That's it.

177
00:10:12,050 --> 00:10:13,535
Then provide your input,

178
00:10:13,535 --> 00:10:16,700
whatever the input actually we are going to take password file.

179
00:10:16,700 --> 00:10:21,710
Now see that before starting your actual disease,

180
00:10:21,710 --> 00:10:23,885
your actual logic, right?

181
00:10:23,885 --> 00:10:26,855
This is now you are getting output because of this logic.

182
00:10:26,855 --> 00:10:31,745
But before this, I want to print something then that you can write in your begin.

183
00:10:31,745 --> 00:10:33,080
After completion of this,

184
00:10:33,080 --> 00:10:36,170
I want to print something utterly printing and add some logical.

185
00:10:36,170 --> 00:10:40,010
So while going forward we will see that now you are getting that.

186
00:10:40,010 --> 00:10:44,900
So this is because of the end and this is because of start block.

187
00:10:44,900 --> 00:10:47,360
I will begin block. And this is your actual,

188
00:10:47,360 --> 00:10:49,040
because of your actual logic.

189
00:10:49,040 --> 00:10:51,710
So they sees you or begin,

190
00:10:51,710 --> 00:10:54,140
then you are getting this output.

191
00:10:54,140 --> 00:10:56,360
And this is your actual logic,

192
00:10:56,360 --> 00:10:58,145
and you're getting this output.

193
00:10:58,145 --> 00:11:03,150
And this is your block, right envelope logic.

194
00:11:03,390 --> 00:11:06,430
Now because of that, you are getting this.

195
00:11:06,430 --> 00:11:07,270
Okay?

196
00:11:07,270 --> 00:11:11,980
So this is very simple aboard your script, right?

197
00:11:11,980 --> 00:11:13,750
So while going forward,

198
00:11:13,750 --> 00:11:15,265
yeah, we have one more thing, right?

199
00:11:15,265 --> 00:11:18,880
Awpa, i funny, IF this option let me show you that as well.

200
00:11:18,880 --> 00:11:21,565
See what I am writing is.

201
00:11:21,565 --> 00:11:23,860
So whatever the logic you how here no,

202
00:11:23,860 --> 00:11:26,005
inside of your single quotation.

203
00:11:26,005 --> 00:11:28,430
Alright, let me copy that.

204
00:11:29,100 --> 00:11:32,590
My AWPA dot AWPA script.

205
00:11:32,590 --> 00:11:36,445
So I'm going to copy and paste in that logic here, right?

206
00:11:36,445 --> 00:11:39,680
And I'm going to rearrange in a clear way.

207
00:11:50,980 --> 00:11:54,510
So that is your begin part.

208
00:12:00,940 --> 00:12:04,340
This is my actual logic, right?

209
00:12:04,340 --> 00:12:10,130
Then you end and also write known enough,

210
00:12:10,130 --> 00:12:12,980
I mean indentations, but it's better to provide,

211
00:12:12,980 --> 00:12:14,960
but don't throw it quotations.

212
00:12:14,960 --> 00:12:19,145
Not only of quotations whenever if you are going to write your logic in a script,

213
00:12:19,145 --> 00:12:20,690
now eight WK, I,

214
00:12:20,690 --> 00:12:23,075
F, and F, You are a WK.

215
00:12:23,075 --> 00:12:26,105
Then file.

216
00:12:26,105 --> 00:12:28,055
That's it.

217
00:12:28,055 --> 00:12:31,760
Okay, this is one of the way to write

218
00:12:31,760 --> 00:12:36,110
your edible egg case script and how to execute that, right?

219
00:12:36,110 --> 00:12:39,125
So we can also write by mentioning shebang line,

220
00:12:39,125 --> 00:12:41,510
we will see that y going forward.

221
00:12:41,510 --> 00:12:42,845
Right?

222
00:12:42,845 --> 00:12:45,800
So guys, before going to write any script,

223
00:12:45,800 --> 00:12:48,965
you how to remember the standards syntax.

224
00:12:48,965 --> 00:12:49,940
Okay?

225
00:12:49,940 --> 00:12:53,130
Okay, yes. Thank you for watching this video.

