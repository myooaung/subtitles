1
00:00:00,650 --> 00:00:05,295
Friends here our concept is scheduling jobs with crontab.

2
00:00:05,295 --> 00:00:10,200
See already we know the purpose of crontab command simply to schedule a job,

3
00:00:10,200 --> 00:00:15,360
to run any script or any command with regular intervals or periodically.

4
00:00:15,360 --> 00:00:19,950
And any user can create a job using crontab command.

5
00:00:19,950 --> 00:00:23,940
Now let me give a syntax of crontab. So here's the syntax.

6
00:00:23,940 --> 00:00:30,675
If you observe here we have six fields and each field is separated with space.

7
00:00:30,675 --> 00:00:32,250
And you have to follow this order,

8
00:00:32,250 --> 00:00:34,590
I mean, maids hours, days, months.

9
00:00:34,590 --> 00:00:39,250
Right? That order you have to follow while scheduling a job using crontab command.

10
00:00:39,250 --> 00:00:44,765
And here first 25 fields or integer numbers with some pattern.

11
00:00:44,765 --> 00:00:45,995
The last one anyway,

12
00:00:45,995 --> 00:00:50,360
whatever the command or script you want to schedule by using crontab.

13
00:00:50,360 --> 00:00:55,805
Now first let me do the values for each and every field of contact.

14
00:00:55,805 --> 00:00:58,070
First is minutes write.

15
00:00:58,070 --> 00:01:01,400
Minutes can be taken between 0 to 59.

16
00:01:01,400 --> 00:01:05,120
We know that a minutes means always 0 to 5960 Minutes.

17
00:01:05,120 --> 00:01:10,595
Euro took from starting with 059 hours, Deirdre 23.

18
00:01:10,595 --> 00:01:15,995
Suppose I wanted to schedule a job to run my scraped at 09:00 AM.

19
00:01:15,995 --> 00:01:17,510
Exactly 09:00 AM.

20
00:01:17,510 --> 00:01:19,760
Then forget out first last three-fifths.

21
00:01:19,760 --> 00:01:22,200
So here, how are 9000, right?

22
00:01:22,200 --> 00:01:23,530
He had Juneau, you heard right.

23
00:01:23,530 --> 00:01:26,350
So that the meaning for that is the job whatever use

24
00:01:26,350 --> 00:01:30,220
schedule using these crontab will run at 09:00 AM.

25
00:01:30,220 --> 00:01:32,575
So likewise you how values right?

26
00:01:32,575 --> 00:01:34,840
So if you have the year date, date 1-2-3,

27
00:01:34,840 --> 00:01:38,005
one any date, month January to December.

28
00:01:38,005 --> 00:01:41,050
January is one. Likewise, up to December 12th.

29
00:01:41,050 --> 00:01:44,020
Week day, Sunday, Saturday is six.

30
00:01:44,020 --> 00:01:46,075
So in between you can count it.

31
00:01:46,075 --> 00:01:51,310
Now, let me do the some commands first to work with crontab.

32
00:01:51,310 --> 00:01:54,610
Then we will go with the how to schedule a job using your crontab.

33
00:01:54,610 --> 00:01:57,160
So there's, there are three commands to work.

34
00:01:57,160 --> 00:01:58,540
I mean, there are many commands,

35
00:01:58,540 --> 00:02:02,770
but these three are the immune commands you have to know to work with crontab.

36
00:02:02,770 --> 00:02:06,005
Now, see as of no,

37
00:02:06,005 --> 00:02:10,670
I'm under automation user crontab, hyphen v.

38
00:02:10,670 --> 00:02:13,190
By using this, I can create any job.

39
00:02:13,190 --> 00:02:14,615
So if you want to create a job,

40
00:02:14,615 --> 00:02:16,745
you had to write the first five fields.

41
00:02:16,745 --> 00:02:19,010
I am writing as if no stars.

42
00:02:19,010 --> 00:02:24,455
Then after that command or script what you want to exclude you using this.

43
00:02:24,455 --> 00:02:28,835
So I am using this syntax to execute.

44
00:02:28,835 --> 00:02:30,380
My job.

45
00:02:30,380 --> 00:02:32,705
Don't worry how to write, We will see that.

46
00:02:32,705 --> 00:02:34,400
So as of now,

47
00:02:34,400 --> 00:02:36,815
I created a one job.

48
00:02:36,815 --> 00:02:40,430
So let me see that a job I can see by using crontab,

49
00:02:40,430 --> 00:02:45,095
iPhone L. So this is the job I how created using my crontab.

50
00:02:45,095 --> 00:02:46,985
If I want to remove that.

51
00:02:46,985 --> 00:02:51,590
All jobs which are there inside of your crontab will remove.

52
00:02:51,590 --> 00:02:53,435
If you want to remove one by one,

53
00:02:53,435 --> 00:02:55,445
you how to edit it and you had to delete line.

54
00:02:55,445 --> 00:02:58,895
Suppose I assume that you have ten jobs in your crontab.

55
00:02:58,895 --> 00:03:01,025
If you want to remove all jobs,

56
00:03:01,025 --> 00:03:04,550
then use crontab iPhone or but if you want to remove one-by-one,

57
00:03:04,550 --> 00:03:08,075
open the crontab file by using crontab hyphen

58
00:03:08,075 --> 00:03:13,940
e. Then delete whatever the job you want to remove this agenda.

59
00:03:13,940 --> 00:03:18,965
And there are 34 jobs I want to remove second job or third job,

60
00:03:18,965 --> 00:03:20,990
go to that line and remove that.

61
00:03:20,990 --> 00:03:24,035
That's a fine.

62
00:03:24,035 --> 00:03:28,100
Now, I will do the scheduling,

63
00:03:28,100 --> 00:03:31,505
I mean scheduling job with the crontab with some examples.

64
00:03:31,505 --> 00:03:33,439
But for my example,

65
00:03:33,439 --> 00:03:37,055
I am taking a shell script which we already implemented.

66
00:03:37,055 --> 00:03:39,990
Let me move into my root.

67
00:03:43,480 --> 00:03:46,220
So this is the script we implemented,

68
00:03:46,220 --> 00:03:50,420
could take a backup for some directory, all files.

69
00:03:50,420 --> 00:03:52,280
We already implemented that.

70
00:03:52,280 --> 00:03:54,905
Now I want to run this regularly,

71
00:03:54,905 --> 00:03:58,550
suppose every month or every day, every week.

72
00:03:58,550 --> 00:04:00,920
So further unittest cannulate job.

73
00:04:00,920 --> 00:04:04,310
So how to schedule? So just wait.

74
00:04:04,310 --> 00:04:07,430
So first thing, you have to take complete path for

75
00:04:07,430 --> 00:04:11,135
your shell script irrespective of your location.

76
00:04:11,135 --> 00:04:15,170
Now to take complete path. So let me take it.

77
00:04:15,170 --> 00:04:17,690
So actually our shell script is there,

78
00:04:17,690 --> 00:04:20,645
I mean, on my host cell companies there in this location.

79
00:04:20,645 --> 00:04:25,470
Then let me take us off nobody's that date.

80
00:04:26,950 --> 00:04:29,900
Just for my reference, I am taking this once.

81
00:04:29,900 --> 00:04:33,290
If you get practice, you can directly write your syntax.

82
00:04:33,290 --> 00:04:35,255
Now.

83
00:04:35,255 --> 00:04:39,215
See this is the order for your crontab if you want to schedule a job,

84
00:04:39,215 --> 00:04:41,000
the last thing is either command R script,

85
00:04:41,000 --> 00:04:42,920
any way we want to execute script.

86
00:04:42,920 --> 00:04:47,060
So I can write in place of this command off-script, our Shellsort.

87
00:04:47,060 --> 00:04:50,810
But you need to decide these foster five fields that is important.

88
00:04:50,810 --> 00:04:58,325
Suppose as of now, time is 254255.

89
00:04:58,325 --> 00:05:02,525
I want to execute this shell script at 258,

90
00:05:02,525 --> 00:05:07,445
then 58 minutes, space.

91
00:05:07,445 --> 00:05:11,030
258 minutes, 2m 58 minutes.

92
00:05:11,030 --> 00:05:13,055
Then what is the third day,

93
00:05:13,055 --> 00:05:15,260
or is the date 30 at 30th?

94
00:05:15,260 --> 00:05:17,825
The date then month, what is the month?

95
00:05:17,825 --> 00:05:22,114
Suppose 11th today one I1 to execute 11th month, then weekdays.

96
00:05:22,114 --> 00:05:24,185
So this is Friday, Saturday,

97
00:05:24,185 --> 00:05:25,910
Saturday means counties sixth,

98
00:05:25,910 --> 00:05:27,905
sardine number count is six.

99
00:05:27,905 --> 00:05:34,535
Now the meaning for this is this job will execute November 30th,

100
00:05:34,535 --> 00:05:38,360
2m 58 minutes frayed Saturday.

101
00:05:38,360 --> 00:05:43,775
Now, after this, you have to give you a shell script with complete path.

102
00:05:43,775 --> 00:05:45,260
Now let me copy it.

103
00:05:45,260 --> 00:05:53,510
So we're scheduling for 258 as of no time is oh, it's already 55.

104
00:05:53,510 --> 00:05:57,410
Only write 56 Now,

105
00:05:57,410 --> 00:05:59,180
I will modify it to 5700.

106
00:05:59,180 --> 00:06:04,264
Let me create it for 50, sorry, 58.

107
00:06:04,264 --> 00:06:07,370
So if you want to create a job, crontab hyphen e,

108
00:06:07,370 --> 00:06:08,960
then the very first,

109
00:06:08,960 --> 00:06:12,880
then you can start 5858 minutes.

110
00:06:12,880 --> 00:06:17,605
We'll take it back up. See that previously there are no jobs for these root user.

111
00:06:17,605 --> 00:06:19,090
Now we have been created a job,

112
00:06:19,090 --> 00:06:21,379
it has been initialized.

113
00:06:21,690 --> 00:06:26,620
Okay, now I will do one more thing before going to execute our job anyway that

114
00:06:26,620 --> 00:06:31,060
will be triggered whenever that time occurs.

115
00:06:31,060 --> 00:06:35,050
Now what I will do is I will show you my backups location. What are the files are there.

116
00:06:35,050 --> 00:06:38,210
So I will do in this way.

117
00:06:39,210 --> 00:06:45,280
So 30th to 48 I had taken a backup. Right.

118
00:06:45,280 --> 00:06:47,215
So we'll wait for our time.

119
00:06:47,215 --> 00:06:50,110
So it is 5657.

120
00:06:50,110 --> 00:06:53,690
So we have to wait one minute.

121
00:06:53,790 --> 00:06:58,225
Meanwhile, backups.

122
00:06:58,225 --> 00:07:00,860
Now let me check in just a date.

123
00:07:01,620 --> 00:07:08,665
5711 seconds, 17.

124
00:07:08,665 --> 00:07:14,830
Just wait for four seconds so that it will be triggered.

125
00:07:14,830 --> 00:07:17,860
Your job, whatever rescheduling your crontab that will be

126
00:07:17,860 --> 00:07:21,625
triggered so that it will take a backup whenever if you take a backup,

127
00:07:21,625 --> 00:07:25,360
backup will be greater than this location with some timestamp so that we can

128
00:07:25,360 --> 00:07:29,395
observe that with our job scheduled job has been executed or not.

129
00:07:29,395 --> 00:07:36,830
5739. Meanwhile, you can see your crontab.

130
00:07:37,470 --> 00:07:39,790
So we execute our I mean,

131
00:07:39,790 --> 00:07:43,130
we created four 2m fifty eight.

132
00:07:44,340 --> 00:07:52,225
Fifty four fifty nine seconds.

133
00:07:52,225 --> 00:07:54,250
Now, 58 done.

134
00:07:54,250 --> 00:07:56,455
That means you are a crontab job has been executed.

135
00:07:56,455 --> 00:08:03,790
You can verify it simply by looking into your backups files in this backup location.

136
00:08:03,790 --> 00:08:07,510
See previously the latest to Phillies to 48.

137
00:08:07,510 --> 00:08:10,405
Now, it is there at 258.

138
00:08:10,405 --> 00:08:15,805
That means you are job has been triggered using your crontab.

139
00:08:15,805 --> 00:08:21,290
And whenever if you schedule your job in this way, by default,

140
00:08:21,290 --> 00:08:31,445
this will execute every year in November, Friday, 30th date.

141
00:08:31,445 --> 00:08:37,190
But I want to exclude these job every month.

142
00:08:37,190 --> 00:08:39,980
Not only for only Noma every month,

143
00:08:39,980 --> 00:08:42,380
I want to take a backup.

144
00:08:42,380 --> 00:08:45,545
Then simply you can modify in this way.

145
00:08:45,545 --> 00:08:49,355
Month is fourth field, right?

146
00:08:49,355 --> 00:08:51,935
1234, fourth Willie's your month.

147
00:08:51,935 --> 00:08:53,465
So in place of mn,

148
00:08:53,465 --> 00:08:54,770
if you write a star,

149
00:08:54,770 --> 00:08:58,190
that means the meaning that is for every month.

150
00:08:58,190 --> 00:09:02,300
But we know that in every month.

151
00:09:02,300 --> 00:09:04,130
In every month.

152
00:09:04,130 --> 00:09:06,110
Suppose, let me write it here itself.

153
00:09:06,110 --> 00:09:12,020
I will write now every month.

154
00:09:12,020 --> 00:09:13,535
Now if you schedule in this way,

155
00:09:13,535 --> 00:09:15,770
it will exclude up in every month.

156
00:09:15,770 --> 00:09:20,435
But in every month, is there any guarantee to get 30th a date on Saturday?

157
00:09:20,435 --> 00:09:21,785
In every month?

158
00:09:21,785 --> 00:09:26,015
Is there any guarantee to get 30 at the date as Saturday?

159
00:09:26,015 --> 00:09:27,845
No, there is no chance, right.

160
00:09:27,845 --> 00:09:31,580
I mean, there is a maybe prob probabilities then but less probable, right?

161
00:09:31,580 --> 00:09:34,580
That's why I don't want to concentrate on

162
00:09:34,580 --> 00:09:39,860
my days and that it is Friday or Saturday or Sunday.

163
00:09:39,860 --> 00:09:43,775
Simply every month, 30th date.

164
00:09:43,775 --> 00:09:46,010
First thing, Starmans every month.

165
00:09:46,010 --> 00:09:50,165
So here, last star means it may be any day,

166
00:09:50,165 --> 00:09:52,040
Sunday, Monday, Tuesday, any day,

167
00:09:52,040 --> 00:09:53,660
any day, any month.

168
00:09:53,660 --> 00:09:56,030
But it every month, 30th,

169
00:09:56,030 --> 00:09:59,780
date, 2m 58 minutes.

170
00:09:59,780 --> 00:10:01,550
I want to take it back up.

171
00:10:01,550 --> 00:10:07,115
But suppose I want to take a backup for every day.

172
00:10:07,115 --> 00:10:09,410
Then in place of date,

173
00:10:09,410 --> 00:10:12,750
whatever we have there, we had to write star.

174
00:10:13,660 --> 00:10:20,430
Suppose I want to exclude every hover then in place of, however.

175
00:10:20,680 --> 00:10:26,284
And I don't want to consult on a month and days.

176
00:10:26,284 --> 00:10:32,120
Every hour, every hour star and the remaining fields are also started.

177
00:10:32,120 --> 00:10:34,085
Have very hour.

178
00:10:34,085 --> 00:10:35,870
I want to execute my script.

179
00:10:35,870 --> 00:10:38,810
Now, have very MIT I want to execute.

180
00:10:38,810 --> 00:10:41,015
Then write all stars.

181
00:10:41,015 --> 00:10:45,050
So whenever if you write all five fields or stars,

182
00:10:45,050 --> 00:10:47,615
the meaning for that is every minute.

183
00:10:47,615 --> 00:10:50,630
Here. In the sixth line,

184
00:10:50,630 --> 00:10:55,280
the meaning is every hour, 58 minute.

185
00:10:55,280 --> 00:10:57,545
But here for every minute.

186
00:10:57,545 --> 00:11:05,225
That's fine. Now my requirement is I want to exclude my script every day.

187
00:11:05,225 --> 00:11:13,290
Suppose let me take nine AM and nine PM,

188
00:11:13,510 --> 00:11:16,520
09:00 AM, and also 09:00 PM.

189
00:11:16,520 --> 00:11:19,310
Then say first thing, nine AM,

190
00:11:19,310 --> 00:11:22,075
I won't be execute 09:00 AM exactly.

191
00:11:22,075 --> 00:11:24,215
Dominates 09:00 AM.

192
00:11:24,215 --> 00:11:26,735
The remaining three are stars.

193
00:11:26,735 --> 00:11:29,825
Then he was skipped our command what you want to execute.

194
00:11:29,825 --> 00:11:32,540
And make sure that while giving in this way,

195
00:11:32,540 --> 00:11:35,480
your script should has shebang line

196
00:11:35,480 --> 00:11:38,570
and it is also having some execution permissions are always,

197
00:11:38,570 --> 00:11:41,255
it will get fairly okay.

198
00:11:41,255 --> 00:11:43,370
Now this is for 09:00 AM.

199
00:11:43,370 --> 00:11:47,525
Then I want to execute the same script at 09:00 PM also.

200
00:11:47,525 --> 00:11:54,830
Then you have to write 12 plus 917, sorry, 21.

201
00:11:54,830 --> 00:12:04,460
At 21. I want

202
00:12:04,460 --> 00:12:06,020
to execute, that's it.

203
00:12:06,020 --> 00:12:07,610
So in the same file,

204
00:12:07,610 --> 00:12:09,660
you can write these two.

205
00:12:11,260 --> 00:12:15,485
I mean, in your crontab by using Rhonda my funny,

206
00:12:15,485 --> 00:12:19,430
you can keep your old jobs if they are unequal.

207
00:12:19,430 --> 00:12:21,605
Also write one more job here in this way.

208
00:12:21,605 --> 00:12:25,550
But let me modify this.

209
00:12:25,550 --> 00:12:31,040
Instead of writing two cron jobs to schedule your job in a same day,

210
00:12:31,040 --> 00:12:32,840
you're executing morning and evening.

211
00:12:32,840 --> 00:12:37,280
Suppose then in shut off writing 921 separately.

212
00:12:37,280 --> 00:12:45,590
Here itself, we can write in this way nine comma 21 at nine hours,

213
00:12:45,590 --> 00:12:46,970
and at 21 hours.

214
00:12:46,970 --> 00:12:56,345
That's it. Now, I want to execute my shell script.

215
00:12:56,345 --> 00:13:01,235
I mean, I want to schedule a job such that for every two hours it has to execute.

216
00:13:01,235 --> 00:13:06,665
First thing for every how're means for every hour.

217
00:13:06,665 --> 00:13:07,760
Every hour.

218
00:13:07,760 --> 00:13:12,665
Let me take 0. It means exactly starting at our Suppose 01:00 AM,

219
00:13:12,665 --> 00:13:15,470
two am, something like the gentleman's right exactly, exactly.

220
00:13:15,470 --> 00:13:17,945
M star means every hour.

221
00:13:17,945 --> 00:13:20,765
In every hour you are executing a minute.

222
00:13:20,765 --> 00:13:24,260
But I want to exclude for every alternate,

223
00:13:24,260 --> 00:13:29,420
every two hours, then slash to now for every two hours.

224
00:13:29,420 --> 00:13:33,500
Suppose that very first is zeroeth power,

225
00:13:33,500 --> 00:13:36,725
then two, then four.

226
00:13:36,725 --> 00:13:38,780
In that way it will execute.

227
00:13:38,780 --> 00:13:45,480
So likewise, you how some syntaxes to schedule your jobs using your contact.

228
00:13:47,160 --> 00:13:50,170
Now given this, right, yeah, fine.

229
00:13:50,170 --> 00:13:52,255
Now, along with this,

230
00:13:52,255 --> 00:13:53,860
you're also having some shortcuts.

231
00:13:53,860 --> 00:13:55,930
Suppose, if you go with the syntax,

232
00:13:55,930 --> 00:13:57,790
what is the meaning for this is

233
00:13:57,790 --> 00:14:02,575
Dirichlet minute geoid our means midnight exactly midnight.

234
00:14:02,575 --> 00:14:05,215
One means date, foster date.

235
00:14:05,215 --> 00:14:07,690
One means January.

236
00:14:07,690 --> 00:14:09,520
So in January here,

237
00:14:09,520 --> 00:14:12,400
star means it may be any day because we don't know

238
00:14:12,400 --> 00:14:15,340
whether first to date is at exactly Monday,

239
00:14:15,340 --> 00:14:16,570
Tuesday, Wednesday, Thursday, right?

240
00:14:16,570 --> 00:14:18,220
That's why we are giving lustful S star.

241
00:14:18,220 --> 00:14:22,090
So most of the cases you are going to take these other stars.

242
00:14:22,090 --> 00:14:23,560
Fine.

243
00:14:23,560 --> 00:14:25,405
Otherwise suppose sometimes you know,

244
00:14:25,405 --> 00:14:28,810
you may take backups only on weekends than you can write here,

245
00:14:28,810 --> 00:14:33,415
phi six comma 00 comma six.

246
00:14:33,415 --> 00:14:36,400
So that the last Filiz Sunday, Saturday.

247
00:14:36,400 --> 00:14:39,460
That's fine. Now, as of no,

248
00:14:39,460 --> 00:14:44,800
this job meaning is every year, January first midnight.

249
00:14:44,800 --> 00:14:46,675
It will execute this script.

250
00:14:46,675 --> 00:14:48,760
That means yearly once you are running.

251
00:14:48,760 --> 00:14:52,705
So whenever if you want to schedule any job for yearly ones,

252
00:14:52,705 --> 00:14:54,130
instead of writing the syntax,

253
00:14:54,130 --> 00:14:57,040
you can use simply shortcut at the rate yearly.

254
00:14:57,040 --> 00:14:59,185
So each operating these five fields,

255
00:14:59,185 --> 00:15:02,035
you can simply write at the rate yearly,

256
00:15:02,035 --> 00:15:03,550
not only for yearly ones,

257
00:15:03,550 --> 00:15:05,590
you how syntaxes form the monthly,

258
00:15:05,590 --> 00:15:08,230
once weekly one's daily ones,

259
00:15:08,230 --> 00:15:11,320
how early ones and reboot whenever you are

260
00:15:11,320 --> 00:15:14,885
somebody's rebooting at the time I want to schedule some job,

261
00:15:14,885 --> 00:15:18,215
then R, the rate reboot, right?

262
00:15:18,215 --> 00:15:20,825
And actually this reward concept is very useful.

263
00:15:20,825 --> 00:15:22,130
I mean, all are useful only,

264
00:15:22,130 --> 00:15:26,105
but debt is somewhat doom importance with your reboot or they'd reboot.

265
00:15:26,105 --> 00:15:30,710
It is useful for those tasks which you want to run on your system startup.

266
00:15:30,710 --> 00:15:33,770
See whenever I do that on your sorrows,

267
00:15:33,770 --> 00:15:35,420
your running some applications,

268
00:15:35,420 --> 00:15:39,455
let say some Tomcat middleware application or database application.

269
00:15:39,455 --> 00:15:42,980
Whenever my salary is rebooting at the time

270
00:15:42,980 --> 00:15:47,345
automatically I want to start my database or my son middleware application,

271
00:15:47,345 --> 00:15:52,890
then you can simply write out the red reboot. Let me write it.

272
00:15:52,930 --> 00:15:55,940
At the rate reboot.

273
00:15:55,940 --> 00:15:59,735
Just assume that somewhere in user home, some DB home,

274
00:15:59,735 --> 00:16:03,065
there is a start db.json,

275
00:16:03,065 --> 00:16:04,460
something there is kept.

276
00:16:04,460 --> 00:16:07,010
Just assume that now I will give in this way so that

277
00:16:07,010 --> 00:16:10,370
once you are salaries rebooted automatically descriptive we'll call,

278
00:16:10,370 --> 00:16:12,500
this will execute so that you are database servers.

279
00:16:12,500 --> 00:16:16,430
Database incentives will up, right?

280
00:16:16,430 --> 00:16:18,395
That is the importance of the literary boot.

281
00:16:18,395 --> 00:16:21,860
So anyway, I'm attached to some document for this video.

282
00:16:21,860 --> 00:16:23,420
Just download it and go through that.

283
00:16:23,420 --> 00:16:26,795
There are different ways to scheduling what jobs.

284
00:16:26,795 --> 00:16:29,100
Okay. Thank you.

