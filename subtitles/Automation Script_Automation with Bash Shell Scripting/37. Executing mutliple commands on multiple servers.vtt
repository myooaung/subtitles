WEBVTT
ï»¿1
00:00:00.110 --> 00:00:06.030
Friends here our concept is executing multiple commands on multiple servers.

2
00:00:06.030 --> 00:00:09.930
So first we will implement this concept on password authentication environment offer

3
00:00:09.930 --> 00:00:14.070
that will exclude same concept on password less authentication and environment as well.

4
00:00:14.070 --> 00:00:15.615
Let me open my terminal.

5
00:00:15.615 --> 00:00:18.555
Suppose here I have some list of remote servers.

6
00:00:18.555 --> 00:00:23.070
Now let me execute some commands on the remote server one.

7
00:00:23.070 --> 00:00:26.880
Then how we can execute a command on your remote server, simply SSH.

8
00:00:26.880 --> 00:00:31.500
Then you can provide your option called hyphen bull with strict host KEY

9
00:00:31.500 --> 00:00:36.870
checking equals to know then what is the user on your remote server?

10
00:00:36.870 --> 00:00:40.410
Automation? Suppose then let me provide the password.

11
00:00:40.410 --> 00:00:42.770
I'm in IP of that remote server.

12
00:00:42.770 --> 00:00:45.715
Then space, let's say date command.

13
00:00:45.715 --> 00:00:47.560
Now it is asking password,

14
00:00:47.560 --> 00:00:49.840
but I don't want to provide my password of the running

15
00:00:49.840 --> 00:00:52.585
my SSH command because I need to automate through Shell script.

16
00:00:52.585 --> 00:00:53.965
That's why it's better to use.

17
00:00:53.965 --> 00:00:55.375
She passed.

18
00:00:55.375 --> 00:01:00.295
Now simply, you can pass your password in your password authentication in Iran, men,

19
00:01:00.295 --> 00:01:02.905
for your SSH, using SSH pass,

20
00:01:02.905 --> 00:01:05.905
SSH pass hyphen p password.

21
00:01:05.905 --> 00:01:11.245
But providing password in your command itself is not a good practice that way,

22
00:01:11.245 --> 00:01:14.710
what we will do is we can store our password in your file.

23
00:01:14.710 --> 00:01:16.375
That file may be anything,

24
00:01:16.375 --> 00:01:17.920
and it may be in any location.

25
00:01:17.920 --> 00:01:21.535
The only thing you have to provide the file complete path.

26
00:01:21.535 --> 00:01:25.845
But as of now, uh, how my password off my remote server in these past file,

27
00:01:25.845 --> 00:01:27.830
and this file is the error in the current location.

28
00:01:27.830 --> 00:01:29.720
That's why I'm not giving complete path.

29
00:01:29.720 --> 00:01:31.730
Then now run this and see the result.

30
00:01:31.730 --> 00:01:35.150
Yes, you are getting the output for your date command, not only for that,

31
00:01:35.150 --> 00:01:41.520
let me run one more command and let me run some RAM usage.

32
00:01:46.000 --> 00:01:48.215
Yes, you are getting your output.

33
00:01:48.215 --> 00:01:53.855
Now my requirement is I want to execute these three commands on my remote server 1 first.

34
00:01:53.855 --> 00:01:57.300
So let me copy these three commands.

35
00:01:58.450 --> 00:02:07.670
So simply open a shell script called run multiple commands on multiple,

36
00:02:07.670 --> 00:02:09.695
or worse dot SH.

37
00:02:09.695 --> 00:02:16.010
So first I'm implementing just to run your multiple commands on one remote server.

38
00:02:16.010 --> 00:02:18.720
Say let me paste the commands.

39
00:02:19.870 --> 00:02:24.090
Just let me rearrange all this things.

40
00:02:25.150 --> 00:02:27.395
Now, if I run,

41
00:02:27.395 --> 00:02:30.095
this is going to output for these three commands.

42
00:02:30.095 --> 00:02:32.420
But for each and every output, I need to identify that.

43
00:02:32.420 --> 00:02:34.985
For that just simply I am writing echo command,

44
00:02:34.985 --> 00:02:42.350
the date command output on on the server.

45
00:02:42.350 --> 00:02:44.945
So whatever server you are using,

46
00:02:44.945 --> 00:02:46.670
that's our IPA one display here.

47
00:02:46.670 --> 00:02:49.230
Then let me copy this IP.

48
00:02:51.760 --> 00:02:53.555
That's it.

49
00:02:53.555 --> 00:02:56.300
Now, same command, I mean,

50
00:02:56.300 --> 00:03:01.880
same Jaco I want to display for each and every command output then.

51
00:03:01.880 --> 00:03:03.425
So instead of now date,

52
00:03:03.425 --> 00:03:05.610
this is simply uptime.

53
00:03:05.800 --> 00:03:10.070
See why I am writing this means you need to simplify

54
00:03:10.070 --> 00:03:14.270
this instead of writing these many times.

55
00:03:14.270 --> 00:03:18.110
So to understand that you have to know first of all, step-by-step.

56
00:03:18.110 --> 00:03:22.355
Now, here we are running free hyphen yum command.

57
00:03:22.355 --> 00:03:25.370
Now let me save it. And I'm running.

58
00:03:25.370 --> 00:03:28.770
Let me provide the execution permission for this.

59
00:03:29.590 --> 00:03:32.735
Now, run that cell script.

60
00:03:32.735 --> 00:03:36.875
Yes, you are getting you output the free iPhone am combined output,

61
00:03:36.875 --> 00:03:38.345
the date command output.

62
00:03:38.345 --> 00:03:41.465
Even if you want to get a clarity here.

63
00:03:41.465 --> 00:03:46.565
I mean, so here what I will do is

64
00:03:46.565 --> 00:03:53.790
after getting the outward simply I am writing a cool just for differentiation purpose.

65
00:04:05.560 --> 00:04:10.470
No, let me provide at last as well.

66
00:04:12.310 --> 00:04:15.605
No, let me save it and run it once again,

67
00:04:15.605 --> 00:04:19.325
see that you are getting your output.

68
00:04:19.325 --> 00:04:22.040
But if you observe your core,

69
00:04:22.040 --> 00:04:25.880
you are repeating same logic again and again.

70
00:04:25.880 --> 00:04:27.605
The only thing is command is different,

71
00:04:27.605 --> 00:04:29.750
but over the command you are passing that command is different.

72
00:04:29.750 --> 00:04:31.370
Buddy or repeating same logic.

73
00:04:31.370 --> 00:04:32.840
See even Jaco is also same.

74
00:04:32.840 --> 00:04:34.280
The only thing here command is different.

75
00:04:34.280 --> 00:04:38.015
That's why what I will do is I am modifying our script.

76
00:04:38.015 --> 00:04:40.880
Let me come at this code as of now, these very simple,

77
00:04:40.880 --> 00:04:42.500
very straight forward you are implementing,

78
00:04:42.500 --> 00:04:45.245
you were three commands on your remote server.

79
00:04:45.245 --> 00:04:47.735
But instead of that,

80
00:04:47.735 --> 00:04:51.770
whenever if you are repeating the same lines again and again at the time,

81
00:04:51.770 --> 00:04:53.945
you can go with the loop or loops.

82
00:04:53.945 --> 00:04:56.570
And one of the loop as of now we know only for loop.

83
00:04:56.570 --> 00:04:58.715
Now I'm implementing this with four loop.

84
00:04:58.715 --> 00:05:01.730
See what I'm doing is for each command,

85
00:05:01.730 --> 00:05:06.095
in so many commands we have date, uptime.

86
00:05:06.095 --> 00:05:08.015
And one more thing is free, hyphen him.

87
00:05:08.015 --> 00:05:10.520
But if I take in this way, freeze one command,

88
00:05:10.520 --> 00:05:11.750
hyphen Amy's one more command,

89
00:05:11.750 --> 00:05:15.499
but that entire thing is a one command that you heard mentioned in quotations.

90
00:05:15.499 --> 00:05:19.085
Then do undone. So between that,

91
00:05:19.085 --> 00:05:21.995
whatever the Yoko you are displaying at very first,

92
00:05:21.995 --> 00:05:23.930
let me copy it and paste it.

93
00:05:23.930 --> 00:05:26.300
But here command is not fixed.

94
00:05:26.300 --> 00:05:29.195
For each iteration the command should be change.

95
00:05:29.195 --> 00:05:32.645
That's why I am writing in terms of each command variable.

96
00:05:32.645 --> 00:05:36.440
That's it. Then SSH a pass.

97
00:05:36.440 --> 00:05:40.010
So let me take this entire command.

98
00:05:40.010 --> 00:05:43.520
But here command is not as tight command.

99
00:05:43.520 --> 00:05:49.860
I mean, our command is there in a variable called each command that check after that.

100
00:05:51.430 --> 00:05:57.845
Let's you see that now we are writing only one time,

101
00:05:57.845 --> 00:06:01.790
these three lines, but we are repeating those three lines for these many number of times.

102
00:06:01.790 --> 00:06:03.350
First, second, third.

103
00:06:03.350 --> 00:06:05.690
But while executing first-time automatically,

104
00:06:05.690 --> 00:06:07.475
the, each command is date command.

105
00:06:07.475 --> 00:06:10.085
Second time, uptime, thought I'm free iPhone him.

106
00:06:10.085 --> 00:06:12.930
Now let me save it and run it.

107
00:06:13.540 --> 00:06:18.855
See the output. You are getting your output 43 times 43 commands.

108
00:06:18.855 --> 00:06:20.980
And as of note, these concept,

109
00:06:20.980 --> 00:06:22.735
we are working on only one server,

110
00:06:22.735 --> 00:06:25.015
but we have two servers in our hands.

111
00:06:25.015 --> 00:06:30.025
Right. Now what I will do is I will, yeah,

112
00:06:30.025 --> 00:06:35.050
let me open a script and there I will discuss or run C.

113
00:06:35.050 --> 00:06:37.255
This is for one server.

114
00:06:37.255 --> 00:06:41.125
If you have two servers, same logic you have to repeat for two times.

115
00:06:41.125 --> 00:06:43.060
If you are three servers, same logic,

116
00:06:43.060 --> 00:06:44.200
you have to repeat for three times.

117
00:06:44.200 --> 00:06:48.700
That means you have to write this logic inside of one more for loop.

118
00:06:48.700 --> 00:06:53.230
See, what I'm doing is for each server,

119
00:06:53.230 --> 00:06:55.885
you can take any variable I am taking each server in.

120
00:06:55.885 --> 00:06:57.580
Let me take the one server.

121
00:06:57.580 --> 00:07:00.560
Then you have one more server, right.

122
00:07:04.060 --> 00:07:10.010
First server space, second server, then do.

123
00:07:10.010 --> 00:07:12.380
And between that do and done,

124
00:07:12.380 --> 00:07:13.760
you have to write your logic c.

125
00:07:13.760 --> 00:07:15.620
Now the meaningful disease,

126
00:07:15.620 --> 00:07:18.140
you are repeating this logic.

127
00:07:18.140 --> 00:07:20.570
Three commands for on one server,

128
00:07:20.570 --> 00:07:24.545
but I wonder repeat 42 times because I have two servers in my hand.

129
00:07:24.545 --> 00:07:27.965
That's why I just write this in one inside of one more for loop.

130
00:07:27.965 --> 00:07:30.140
And this for loop will repeat first-time for this,

131
00:07:30.140 --> 00:07:31.820
our second time for the server.

132
00:07:31.820 --> 00:07:33.410
Now while executing first time,

133
00:07:33.410 --> 00:07:36.140
the server is storing in a variable called each server.

134
00:07:36.140 --> 00:07:38.360
That's why wherever server IPs,

135
00:07:38.360 --> 00:07:40.745
they're just replaced that dollar each server.

136
00:07:40.745 --> 00:07:42.935
That's it. Now see.

137
00:07:42.935 --> 00:07:45.860
But here, wherever you are,

138
00:07:45.860 --> 00:07:48.545
IP is there no, I don't want to fix it.

139
00:07:48.545 --> 00:07:49.760
Automatically.

140
00:07:49.760 --> 00:07:51.545
It has to pick server by server.

141
00:07:51.545 --> 00:07:55.715
That's why dollar each server.

142
00:07:55.715 --> 00:07:58.505
That's very simple.

143
00:07:58.505 --> 00:08:00.530
So this is the way how we can exclude

144
00:08:00.530 --> 00:08:05.285
your command or commands on multiple servers with the help of your for loop.

145
00:08:05.285 --> 00:08:09.710
And while executing first-time automatically server is this 1,

146
00:08:09.710 --> 00:08:11.225
second time this one.

147
00:08:11.225 --> 00:08:15.605
So if you want to get the information before starting your inside of inside,

148
00:08:15.605 --> 00:08:17.405
I mean, for loop,

149
00:08:17.405 --> 00:08:20.360
second for loop, you can read here something like.

150
00:08:20.360 --> 00:08:25.050
So I'm giving some spaces just for looking purpose, ACO,

151
00:08:26.010 --> 00:08:33.985
executing commands on each server.

152
00:08:33.985 --> 00:08:40.010
Now let me provide some spaces so that it is good for looking purpose.

153
00:08:44.220 --> 00:08:46.390
Now by seeing these spaces,

154
00:08:46.390 --> 00:08:50.635
you can understand that this is the main loop for loop.

155
00:08:50.635 --> 00:08:53.770
And inside of a for loop you have one more for loop.

156
00:08:53.770 --> 00:08:56.425
This for loop will repeat three times.

157
00:08:56.425 --> 00:09:01.690
And this for loop will repeat two times while executing first loop first time.

158
00:09:01.690 --> 00:09:04.120
The same for loop will repeat three times by taking

159
00:09:04.120 --> 00:09:08.115
these three commands and days those three commands will execute on your first server.

160
00:09:08.115 --> 00:09:11.465
Second time, second server seems commands will execute, that's it.

161
00:09:11.465 --> 00:09:13.980
Now let me save it and run it.

162
00:09:14.950 --> 00:09:19.940
Say output, executing command on commands,

163
00:09:19.940 --> 00:09:22.955
on executing commands on it.

164
00:09:22.955 --> 00:09:25.430
Even if you want to get more differentiation

165
00:09:25.430 --> 00:09:27.725
in the output and just write some code somewhere,

166
00:09:27.725 --> 00:09:30.720
suppose here I am writing echo.

167
00:09:32.410 --> 00:09:34.145
That's it.

168
00:09:34.145 --> 00:09:35.660
Just for your understanding,

169
00:09:35.660 --> 00:09:37.860
you are writing that equal.

170
00:09:38.320 --> 00:09:41.090
So by seeing this information,

171
00:09:41.090 --> 00:09:45.155
you can understand that this is for first server and this is four seconds and that's it.

172
00:09:45.155 --> 00:09:50.330
So this is the way how we can execute multiple commands on multiple servers.

173
00:09:50.330 --> 00:09:52.850
And if you observe here as of no,

174
00:09:52.850 --> 00:09:55.595
you are running your commands using password.

175
00:09:55.595 --> 00:09:58.175
And your password is there in this file.

176
00:09:58.175 --> 00:10:00.875
Now, I don't want to use this password.

177
00:10:00.875 --> 00:10:06.230
I mean, I want to execute this script on password lesser than dedication.

178
00:10:06.230 --> 00:10:08.960
And you don't meant first, let me do one thing.

179
00:10:08.960 --> 00:10:11.280
I will copy this entire code.

180
00:10:14.950 --> 00:10:18.320
Be clear, if your environment is possible,

181
00:10:18.320 --> 00:10:22.355
less authentication, then you no need of using SSH pass.

182
00:10:22.355 --> 00:10:25.085
First, let me create password less authentication.

183
00:10:25.085 --> 00:10:28.820
So if you want to create a password lessons indication on your local server,

184
00:10:28.820 --> 00:10:32.120
you have to generate SSH keys first.

185
00:10:32.120 --> 00:10:37.070
Let me generate as such keys simply without navigating into dot SSH.

186
00:10:37.070 --> 00:10:39.395
Also you can see let me come out from that.

187
00:10:39.395 --> 00:10:41.720
Removed, not SSH.

188
00:10:41.720 --> 00:10:45.860
Now we don't have a directory called dot SSH.

189
00:10:45.860 --> 00:10:47.810
We don't have dot SSH.

190
00:10:47.810 --> 00:10:48.755
Right?

191
00:10:48.755 --> 00:10:52.490
Now what I will do is simply I will run SSH hyphen Qi Jin,

192
00:10:52.490 --> 00:10:55.040
so that it will generate keys,

193
00:10:55.040 --> 00:11:00.815
just enter four times so that it will create keys for your environment.

194
00:11:00.815 --> 00:11:02.960
Now on your local server, Node.js,

195
00:11:02.960 --> 00:11:08.075
such that it has been created and inside that you how private key and public key.

196
00:11:08.075 --> 00:11:11.015
Now you have to share this public key with your remote servers.

197
00:11:11.015 --> 00:11:13.670
So our remote servers are there here.

198
00:11:13.670 --> 00:11:16.220
Now let me navigate into dot SSH.

199
00:11:16.220 --> 00:11:18.035
Now here we have our keys.

200
00:11:18.035 --> 00:11:21.305
Now let me share our key with the first server.

201
00:11:21.305 --> 00:11:24.680
So simply SSH hyphen, copy ID.

202
00:11:24.680 --> 00:11:29.130
What is the user on your remote server, then that IP.

203
00:11:29.800 --> 00:11:32.150
So it is asking yes,

204
00:11:32.150 --> 00:11:36.150
because you're running, this is at very first time.

205
00:11:36.400 --> 00:11:40.235
Now you have to provide password automation 1-2-3.

206
00:11:40.235 --> 00:11:43.160
Now your key has been exchanged with your first server.

207
00:11:43.160 --> 00:11:47.330
Same way, let me exchange our key with second server as well.

208
00:11:47.330 --> 00:11:50.675
So once if you exceed your keys with remote servers,

209
00:11:50.675 --> 00:11:53.270
After that, you don't need to use password directly.

210
00:11:53.270 --> 00:11:56.130
You can run without a password.

211
00:11:59.470 --> 00:12:05.850
Now come out. So these are the servers right?

212
00:12:06.970 --> 00:12:08.840
Now.

213
00:12:08.840 --> 00:12:11.610
Let me open up a shell script.

214
00:12:11.890 --> 00:12:14.450
So wherever as such paths iPhone,

215
00:12:14.450 --> 00:12:15.965
you have passes there.

216
00:12:15.965 --> 00:12:17.705
Let me remove that.

217
00:12:17.705 --> 00:12:20.165
Otherwise, I will do one thing. I will comment this line below that.

218
00:12:20.165 --> 00:12:25.910
I will write a line for password authentic possible lesser than negation environment.

219
00:12:25.910 --> 00:12:26.885
That's it.

220
00:12:26.885 --> 00:12:30.319
If you are working on possible less authentication environment,

221
00:12:30.319 --> 00:12:34.280
then don't use SHE pass iPhone you have pass.

222
00:12:34.280 --> 00:12:37.250
If you're working on password authentication environment,

223
00:12:37.250 --> 00:12:40.850
then only just to provide password for your SSH automatically while running your command,

224
00:12:40.850 --> 00:12:41.900
we are using SSH pass,

225
00:12:41.900 --> 00:12:44.720
that's it. Now let me save it.

226
00:12:44.720 --> 00:12:49.460
Now see something wrong.

227
00:12:49.460 --> 00:12:52.680
Okay. Let me open it and check it.

228
00:12:53.680 --> 00:12:55.250
Yeah.

229
00:12:55.250 --> 00:12:58.110
At the end I misheard quotation.

230
00:13:00.070 --> 00:13:03.410
You are getting now hearing no need of

231
00:13:03.410 --> 00:13:08.045
any password because just now we extended our teas with remote servers.

232
00:13:08.045 --> 00:13:09.440
But Syntax is same though.

233
00:13:09.440 --> 00:13:13.265
I mean, how we are implementing your shell script that is same.

234
00:13:13.265 --> 00:13:16.400
Except this average pass iPhone you have passed.

235
00:13:16.400 --> 00:13:19.700
Remaining syntax is saying, right, fine.

236
00:13:19.700 --> 00:13:22.400
And one more thing. As of no,

237
00:13:22.400 --> 00:13:24.785
you have to servers, remote servers.

238
00:13:24.785 --> 00:13:27.200
Suppose in future you are having some ten servers,

239
00:13:27.200 --> 00:13:29.375
then you have to add eight servers, IPs here.

240
00:13:29.375 --> 00:13:31.085
But that is not a good practice.

241
00:13:31.085 --> 00:13:35.765
Instead of that, what we will do is we will store all these IPs in your file.

242
00:13:35.765 --> 00:13:40.490
So as of now, we already stored our IB1, this file.

243
00:13:40.490 --> 00:13:45.965
Now, what I will do is I will read that file with the help of a cat command.

244
00:13:45.965 --> 00:13:50.105
Now c. Now this is your final script.

245
00:13:50.105 --> 00:13:53.720
To execute your multiple commands on multiple servers.

246
00:13:53.720 --> 00:13:55.865
Simply write it dollar,

247
00:13:55.865 --> 00:13:57.080
because this is a command,

248
00:13:57.080 --> 00:13:59.870
command output we are substituting for your for loop.

249
00:13:59.870 --> 00:14:04.920
Now save it. Now running.

250
00:14:07.720 --> 00:14:10.775
Suppose I want to work with only one server,

251
00:14:10.775 --> 00:14:14.930
then what I will do is I will remove one of the IP from this.

252
00:14:14.930 --> 00:14:17.225
Let me remove second IP.

253
00:14:17.225 --> 00:14:22.710
Know automatically use QP will work now with only one server. Now see the result.

254
00:14:23.230 --> 00:14:27.365
It is not working on second-order because in your list of servers,

255
00:14:27.365 --> 00:14:30.650
we remove the second IP, right?

256
00:14:30.650 --> 00:14:36.515
So this is the way how we can execute multiple commands on multiple servers.

257
00:14:36.515 --> 00:14:38.610
Okay, thank you.

