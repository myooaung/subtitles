WEBVTT
ï»¿1
00:00:00.980 --> 00:00:04.110
Hi friends, welcome to shell scripting course.

2
00:00:04.110 --> 00:00:08.715
Let me provide the course overview before going to start our shell scripting Corps.

3
00:00:08.715 --> 00:00:09.405
C.

4
00:00:09.405 --> 00:00:10.635
In our Unix world,

5
00:00:10.635 --> 00:00:13.200
shells skipping is a great way to automate

6
00:00:13.200 --> 00:00:16.800
repetitive tasks so that we can say our valuable time.

7
00:00:16.800 --> 00:00:18.615
Then what is a shell script?

8
00:00:18.615 --> 00:00:24.075
In simple terms, shell script is a sequence of system commands pasted in a text file.

9
00:00:24.075 --> 00:00:28.215
So why we need to place our commands in a text file?

10
00:00:28.215 --> 00:00:34.035
Or why well-integrated shell script simply to automate repeated to task or tasks.

11
00:00:34.035 --> 00:00:38.290
Now let me provide a very simple example to understand the uses of shells.

12
00:00:38.290 --> 00:00:43.250
Just assume that on my host or have a web server called HTTPD.

13
00:00:43.250 --> 00:00:45.080
And with this HTTPD,

14
00:00:45.080 --> 00:00:48.110
or have a small requirement in my day-to-day life.

15
00:00:48.110 --> 00:00:49.730
That is, every day,

16
00:00:49.730 --> 00:00:55.400
I need to find what is the version of HTTP and what is the current status of HTTPD?

17
00:00:55.400 --> 00:00:58.385
And then what is the port used by HTTPD?

18
00:00:58.385 --> 00:01:02.705
Then how we can get the information generally with the help of some commands.

19
00:01:02.705 --> 00:01:04.745
Now let me try with the commands.

20
00:01:04.745 --> 00:01:06.230
So the very first command,

21
00:01:06.230 --> 00:01:09.320
I am using HTTPD hyphen v,

22
00:01:09.320 --> 00:01:14.195
so that you are getting the version for your web server that is two dot four or 41,

23
00:01:14.195 --> 00:01:21.680
then I am using some system CTL status,

24
00:01:21.680 --> 00:01:26.795
HTTPD, so that I'm getting the current status of your HTTPD that is inactive.

25
00:01:26.795 --> 00:01:29.120
That means it is not up and running.

26
00:01:29.120 --> 00:01:31.265
Then to get my port,

27
00:01:31.265 --> 00:01:32.960
I mean heterogeneity port number.

28
00:01:32.960 --> 00:01:35.990
I am using a configuration file details.

29
00:01:35.990 --> 00:01:41.360
So under ADC we how HTTPD,

30
00:01:41.360 --> 00:01:44.630
the index, we have conflict then configurations when

31
00:01:44.630 --> 00:01:48.470
actually this is a default location for configuration file of HTTPD.

32
00:01:48.470 --> 00:01:51.365
Then from this with the help of regular expression,

33
00:01:51.365 --> 00:01:55.145
I'm searching with ease and verb so that I'm getting port number.

34
00:01:55.145 --> 00:01:57.125
So you are getting

35
00:01:57.125 --> 00:02:01.910
the required information for your HTTPD with the help of three commands.

36
00:02:01.910 --> 00:02:04.595
If this task is repeated two,

37
00:02:04.595 --> 00:02:08.750
then why should we type you are three commands again and again on your command line.

38
00:02:08.750 --> 00:02:14.270
Instead of that, what we will do is simply we will pay so these three commands in a file.

39
00:02:14.270 --> 00:02:19.265
And we can run that so that we can get our required information for our HTTPD.

40
00:02:19.265 --> 00:02:22.010
Now let me open a very simple file.

41
00:02:22.010 --> 00:02:27.320
So here I am writing file name as HTTPD info

42
00:02:27.320 --> 00:02:33.065
dot SH simply I'm giving dot SH extension to know that that is a shell script.

43
00:02:33.065 --> 00:02:35.330
And the very first thing I am writing bin bash,

44
00:02:35.330 --> 00:02:36.620
don't worry about that line.

45
00:02:36.620 --> 00:02:41.000
That is actually shebang line will discuss in detail about shebang line in our course.

46
00:02:41.000 --> 00:02:48.095
Now let me provide you were three and the very first command to get version,

47
00:02:48.095 --> 00:02:51.770
then to get the status of HTTPD.

48
00:02:51.770 --> 00:02:56.225
That's fine.

49
00:02:56.225 --> 00:03:01.355
Now let me provide exclusion permission for this. Now I'm running that.

50
00:03:01.355 --> 00:03:05.090
Yes, you are getting your required information now with the help of a single file,

51
00:03:05.090 --> 00:03:06.470
instead of running three commands,

52
00:03:06.470 --> 00:03:10.460
you are running only one file so that you are getting your Abaci version,

53
00:03:10.460 --> 00:03:13.265
the status, and then port number.

54
00:03:13.265 --> 00:03:17.855
So what we did simply we pasted our commands in a text file.

55
00:03:17.855 --> 00:03:20.945
Of course that texting while we are calling it as a shell script.

56
00:03:20.945 --> 00:03:24.020
And we're providing extension for that as SH.

57
00:03:24.020 --> 00:03:27.195
That's fine. Now.

58
00:03:27.195 --> 00:03:29.710
Simply, we are pasting our commands in

59
00:03:29.710 --> 00:03:32.170
your file and we are getting the required information.

60
00:03:32.170 --> 00:03:34.405
But my requirement is,

61
00:03:34.405 --> 00:03:36.820
I don't want to get my output in this way.

62
00:03:36.820 --> 00:03:38.560
Server version Apache slash

63
00:03:38.560 --> 00:03:42.310
some parentheses and server build something like that simply I want to get to

64
00:03:42.310 --> 00:03:45.460
dot-dot-dot 4-1 is Apache version and

65
00:03:45.460 --> 00:03:49.555
the current status of Apache is inactive and the port number is 80.

66
00:03:49.555 --> 00:03:52.630
I don't want to get the remaining lines on the remaining words.

67
00:03:52.630 --> 00:03:53.770
Then.

68
00:03:53.770 --> 00:03:56.515
We how to enhance our shell script.

69
00:03:56.515 --> 00:04:01.434
Now we can enhance our shells to it by using the concepts like variables,

70
00:04:01.434 --> 00:04:04.734
filters, conditional statements, loops,

71
00:04:04.734 --> 00:04:06.940
functions, and many more.

72
00:04:06.940 --> 00:04:13.880
Now let me take some of them so that I can enhance our Shell step.

73
00:04:13.880 --> 00:04:15.350
So what I'm doing here,

74
00:04:15.350 --> 00:04:18.215
see that actually I am getting the work done in this way.

75
00:04:18.215 --> 00:04:20.255
But I want to enhance that.

76
00:04:20.255 --> 00:04:22.670
I want to get only two dot-dot-dot 4-1.

77
00:04:22.670 --> 00:04:27.990
So for that, don't worry about all these things will discuss in detail.

78
00:04:28.300 --> 00:04:34.860
Simply, I am using a WK command here.

79
00:04:45.280 --> 00:04:47.570
And I'm getting parenthesis has.

80
00:04:47.570 --> 00:04:49.770
Alright, let me remove them.

81
00:04:58.170 --> 00:04:59.380
Now.

82
00:04:59.380 --> 00:05:02.450
Let me take this command.

83
00:05:02.610 --> 00:05:06.475
Let me open up our shell script.

84
00:05:06.475 --> 00:05:10.735
And here I am using a variable and that variable,

85
00:05:10.735 --> 00:05:17.090
I'm going to store my command result, HUD PD version.

86
00:05:18.300 --> 00:05:20.545
The same way.

87
00:05:20.545 --> 00:05:22.675
For second comment also,

88
00:05:22.675 --> 00:05:27.190
I want to modify status HTTPD, right?

89
00:05:27.190 --> 00:05:30.175
So here I want to get only enact to.

90
00:05:30.175 --> 00:05:35.140
So what I am doing a simply first-time gripping with activity.

91
00:05:35.140 --> 00:05:39.220
Then here again, I'm using AWPA command.

92
00:05:39.220 --> 00:05:41.005
So based on situation you can use,

93
00:05:41.005 --> 00:05:44.125
you can use either a WK or cut command, our sed command.

94
00:05:44.125 --> 00:05:47.470
So currently I'm using a WK command,

95
00:05:47.470 --> 00:05:49.690
will discuss in detail about AW case,

96
00:05:49.690 --> 00:05:52.630
sed and grep, and cut as well.

97
00:05:52.630 --> 00:05:56.185
Now let me take that check.

98
00:05:56.185 --> 00:06:00.710
Now let me copy this command and this result.

99
00:06:02.790 --> 00:06:06.110
I'm opening a shell script.

100
00:06:08.490 --> 00:06:13.870
So HTTPD status.

101
00:06:13.870 --> 00:06:19.165
So I am storing into this the same way.

102
00:06:19.165 --> 00:06:21.070
You are lost to command.

103
00:06:21.070 --> 00:06:24.010
So you already, we have our last command and that is,

104
00:06:24.010 --> 00:06:26.455
I mean, to get the port number.

105
00:06:26.455 --> 00:06:31.705
Let me take that, this one.

106
00:06:31.705 --> 00:06:35.995
So here I want only the port number that is 80.

107
00:06:35.995 --> 00:06:38.845
So simply I am using a W k,

108
00:06:38.845 --> 00:06:41.530
then I'm getting that port.

109
00:06:41.530 --> 00:06:44.785
So simply I'm copying this command.

110
00:06:44.785 --> 00:06:46.420
Let me open again.

111
00:06:46.420 --> 00:06:54.670
You are shell script. So here

112
00:06:54.670 --> 00:06:57.685
I am taking one more variable called HTTPD port.

113
00:06:57.685 --> 00:06:59.480
Then.

114
00:07:00.570 --> 00:07:03.355
So after finding all these result,

115
00:07:03.355 --> 00:07:09.925
simply I am displaying the result like the HTTPD, what sin is.

116
00:07:09.925 --> 00:07:14.830
So simply here, I'm displaying the HTTP version.

117
00:07:14.830 --> 00:07:19.765
Then I am writing the current status of HTTPD.

118
00:07:19.765 --> 00:07:26.260
Just I'm decorating, I'm enhancing Michelle's trip by using some concepts.

119
00:07:26.260 --> 00:07:32.140
So here I used variables concept and also some filters concept.

120
00:07:32.140 --> 00:07:38.710
Then port for HTTPD.

121
00:07:38.710 --> 00:07:41.695
Anyway, we got this from configuration file.

122
00:07:41.695 --> 00:07:50.000
Of course, you can also get from running a service by netstat command. We can get that.

123
00:07:50.000 --> 00:07:51.875
Let me save it.

124
00:07:51.875 --> 00:07:53.840
So this is our shell script.

125
00:07:53.840 --> 00:07:54.470
Now.

126
00:07:54.470 --> 00:07:59.210
We enhance it that now let me run our shell script and see the result.

127
00:07:59.210 --> 00:08:04.430
Let's see now we got our required exact output.

128
00:08:04.430 --> 00:08:07.235
You are not getting any unwanted lines in the output.

129
00:08:07.235 --> 00:08:09.140
The reason is we enhanced

130
00:08:09.140 --> 00:08:14.675
our shell script C. If you want to write any effect to shell script,

131
00:08:14.675 --> 00:08:18.590
you have to know these mini concepts along with your commands.

132
00:08:18.590 --> 00:08:19.790
Anyway.

133
00:08:19.790 --> 00:08:22.910
Commands is the minimum requirement to write shell script.

134
00:08:22.910 --> 00:08:24.455
But if you want to announce,

135
00:08:24.455 --> 00:08:27.730
you ought to know the other concept like variables,

136
00:08:27.730 --> 00:08:31.720
fetus, conditional statements, loops, and functions.

137
00:08:31.720 --> 00:08:33.025
Fine.

138
00:08:33.025 --> 00:08:36.640
See whenever if you run any command or shell script

139
00:08:36.640 --> 00:08:40.060
on your command line that will reach to your operating system.

140
00:08:40.060 --> 00:08:41.800
On your operating system will react on

141
00:08:41.800 --> 00:08:46.330
the given instruction with the help of a program called shell.

142
00:08:46.330 --> 00:08:49.870
And in our Unix world we have different types of shells.

143
00:08:49.870 --> 00:08:53.260
You can use any one of the shell to exclude your command or shell script.

144
00:08:53.260 --> 00:08:56.260
And if you want to know how many shells or there are

145
00:08:56.260 --> 00:08:59.110
different types of shells present on your operating system.

146
00:08:59.110 --> 00:09:01.225
Simply you can run this command,

147
00:09:01.225 --> 00:09:03.265
slash, ETC slash shells.

148
00:09:03.265 --> 00:09:08.330
And if you observe here on my operating system how these many shells,

149
00:09:08.760 --> 00:09:10.975
among all those shells,

150
00:09:10.975 --> 00:09:14.590
bash is the advanced and latest version.

151
00:09:14.590 --> 00:09:21.760
And nowadays, the default shell for most of the Unix-like systems ease back.

152
00:09:21.760 --> 00:09:24.130
That's the reason. From now onwards,

153
00:09:24.130 --> 00:09:29.815
we are going to learn our course as Bash shell scripting.

154
00:09:29.815 --> 00:09:32.575
Say compared to your remaining shells,

155
00:09:32.575 --> 00:09:33.955
bash is the advanced one.

156
00:09:33.955 --> 00:09:36.400
That's the reason we are learning Bash shell scripting.

157
00:09:36.400 --> 00:09:40.930
But there is no much difference between your other shells and with bash,

158
00:09:40.930 --> 00:09:44.725
almost all same but the thing is batch will have some advanced features.

159
00:09:44.725 --> 00:09:45.670
That's it.

160
00:09:45.670 --> 00:09:48.415
And one more thing. By default,

161
00:09:48.415 --> 00:09:52.180
most of the operating systems in your Unix world or coming.

162
00:09:52.180 --> 00:09:54.580
Bash has that default shell.

163
00:09:54.580 --> 00:09:58.395
Now on what operating system are only worth ten.

164
00:09:58.395 --> 00:10:02.125
What is the Shell sign for your terminal?

165
00:10:02.125 --> 00:10:08.095
If you want to know that simply run which dollar shell so that it will do the,

166
00:10:08.095 --> 00:10:10.420
the default shell which is assigned to

167
00:10:10.420 --> 00:10:14.110
your terminal to run your commands or to run neighbor shell script.

168
00:10:14.110 --> 00:10:15.205
That's it.

169
00:10:15.205 --> 00:10:19.405
So finally, our courses Bash shell scripting.

170
00:10:19.405 --> 00:10:22.285
And this is the advance to one. That's fine.

171
00:10:22.285 --> 00:10:23.905
Now in my entire course,

172
00:10:23.905 --> 00:10:26.575
what are the concepts I'm going to cover?

173
00:10:26.575 --> 00:10:31.970
So these are the concepts I'm going to cover in my entire course.

174
00:10:33.760 --> 00:10:35.660
That's it.

175
00:10:35.660 --> 00:10:37.325
See, along with this,

176
00:10:37.325 --> 00:10:43.890
we are also providing some Enriquez and practice on each and every topic.

177
00:10:44.410 --> 00:10:48.695
Okay, finally, who can take the course?

178
00:10:48.695 --> 00:10:51.980
See any Unix or Linux system,

179
00:10:51.980 --> 00:10:55.550
admin or Unix or Linux user can take

180
00:10:55.550 --> 00:11:00.035
this course along with that middleware admin, database, admin,

181
00:11:00.035 --> 00:11:04.310
DevOps, admin, cloud admin or software dollar per those who are working on,

182
00:11:04.310 --> 00:11:09.840
on Unix world, they can take these scores. Okay, thank you.

