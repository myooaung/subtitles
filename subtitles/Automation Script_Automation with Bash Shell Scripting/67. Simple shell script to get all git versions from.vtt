WEBVTT
ï»¿1
00:00:00.710 --> 00:00:06.584
Hence here we are going to see the use case of Your said cut,

2
00:00:06.584 --> 00:00:10.694
a WK And arrays with one simple example.

3
00:00:10.694 --> 00:00:15.779
So simply one video to understand the uses of set cut in

4
00:00:15.779 --> 00:00:21.779
public and arrays with an example of simple shell script to get all available,

5
00:00:21.779 --> 00:00:24.780
good to wash hands from official Git website.

6
00:00:24.780 --> 00:00:27.945
So how our official website right. For good.

7
00:00:27.945 --> 00:00:32.650
Let me open it.

8
00:00:34.790 --> 00:00:38.819
So I'm going to open official website.

9
00:00:38.819 --> 00:00:43.819
Yeah. So get a C on 90.

10
00:00:43.819 --> 00:00:48.094
How your website for you are good to download too, right?

11
00:00:48.094 --> 00:00:53.220
So just go to get SEM or directly don't go to Download Options.

12
00:00:54.010 --> 00:00:56.960
Then here, just select Linux or Unix

13
00:00:56.960 --> 00:01:00.049
because we are going to work with shell script means Unix.

14
00:01:00.049 --> 00:01:03.065
Unix like systems, right?

15
00:01:03.065 --> 00:01:09.169
So here, just to go to your download a tarball and you'll get a page,

16
00:01:09.169 --> 00:01:10.954
right, some index page.

17
00:01:10.954 --> 00:01:13.264
If you observe here. Here you have

18
00:01:13.264 --> 00:01:19.189
all your good watersheds which are available currently, right?

19
00:01:19.189 --> 00:01:20.884
So you got different versions.

20
00:01:20.884 --> 00:01:24.919
Now my requirement is I'm going to write a simple shell script just

21
00:01:24.919 --> 00:01:29.675
to list all the available good fortunes from this official website.

22
00:01:29.675 --> 00:01:31.864
Right? So if you observe here guys,

23
00:01:31.864 --> 00:01:35.404
there is a geodata Node.js one, yeah, both are same.

24
00:01:35.404 --> 00:01:39.814
Here are 02, then geodata R3, right?

25
00:01:39.814 --> 00:01:42.139
So you have one digit file then sign-in file,

26
00:01:42.139 --> 00:01:44.359
and somewhere you have some documentation file.

27
00:01:44.359 --> 00:01:46.295
But if you go with the,

28
00:01:46.295 --> 00:01:48.710
any one of the representation like thought dot z, z,

29
00:01:48.710 --> 00:01:51.950
and then you will get all your good to a chance.

30
00:01:51.950 --> 00:02:00.245
Right? Now, guys, if you want to download a page or a content of your page,

31
00:02:00.245 --> 00:02:01.834
you have two options.

32
00:02:01.834 --> 00:02:05.759
First, let me show you that from your command line.

33
00:02:06.330 --> 00:02:10.285
See, let me check it whether W is there or not.

34
00:02:10.285 --> 00:02:15.384
Yes, it is their right. And curl.

35
00:02:15.384 --> 00:02:17.095
But it is there on Martin.

36
00:02:17.095 --> 00:02:18.400
Yes, it's present, right?

37
00:02:18.400 --> 00:02:24.114
So now what I'm doing is curl your URL, then see the output.

38
00:02:24.114 --> 00:02:27.370
You are going to get that into your HTML page here.

39
00:02:27.370 --> 00:02:30.399
Or if you take simply W get command.

40
00:02:30.399 --> 00:02:34.209
And if URL, it will download a page.

41
00:02:34.209 --> 00:02:37.314
Observe that which phase it has been downloaded.

42
00:02:37.314 --> 00:02:40.629
Just now it has been downloaded index.html.

43
00:02:40.629 --> 00:02:41.860
Just observed that page.

44
00:02:41.860 --> 00:02:43.150
What you how?

45
00:02:43.150 --> 00:02:47.760
So all the information you how in this page with an HTML page, right?

46
00:02:47.760 --> 00:02:51.484
So you can use either current or w get commands.

47
00:02:51.484 --> 00:02:54.605
So if you use KCl directly display or information on your command line,

48
00:02:54.605 --> 00:02:56.254
if you go with W get command,

49
00:02:56.254 --> 00:02:58.580
it will download your page by default.

50
00:02:58.580 --> 00:03:04.085
Suppose here you are getting index.html page, right?

51
00:03:04.085 --> 00:03:05.615
Fine. Now for time being,

52
00:03:05.615 --> 00:03:08.465
I am going to work with W get command to understand,

53
00:03:08.465 --> 00:03:10.219
to jump, to create,

54
00:03:10.219 --> 00:03:13.850
to develop our shells gave to

55
00:03:13.850 --> 00:03:18.934
display all get Watson's which are available with your official website.

56
00:03:18.934 --> 00:03:20.300
Right?

57
00:03:20.300 --> 00:03:22.550
So let me go and implement discrepancies.

58
00:03:22.550 --> 00:03:25.054
So I'm going to get right yet.

59
00:03:25.054 --> 00:03:27.080
So before that, let me check it.

60
00:03:27.080 --> 00:03:30.874
Which bash, so I won't use bin bash has my interpreter.

61
00:03:30.874 --> 00:03:38.299
So get get worse shunts which are available with you, our official website.

62
00:03:38.299 --> 00:03:40.475
So let me write shebang line.

63
00:03:40.475 --> 00:03:49.025
Okay, so I'm going to write, that's fine.

64
00:03:49.025 --> 00:03:54.064
So before going to implement your shell script,

65
00:03:54.064 --> 00:03:57.754
right, you are going to use very first up as W get command.

66
00:03:57.754 --> 00:04:00.605
Whether you are W get command is there or not, you have to check it.

67
00:04:00.605 --> 00:04:06.184
So what I'm doing is first-time chicken simply, which get.

68
00:04:06.184 --> 00:04:08.989
So wherever it is there or not.

69
00:04:08.989 --> 00:04:11.944
So you know how we can validate,

70
00:04:11.944 --> 00:04:15.275
often running any command where I do a success or not, right?

71
00:04:15.275 --> 00:04:17.059
So immediately after checking, after this,

72
00:04:17.059 --> 00:04:21.739
I am checking if dollar question mark is equal to 0, then it's fine.

73
00:04:21.739 --> 00:04:25.775
Else then there is no,

74
00:04:25.775 --> 00:04:29.794
sorry, W get command. Not good ways.

75
00:04:29.794 --> 00:04:33.904
We are working with W get whether an applicant is there or not.

76
00:04:33.904 --> 00:04:36.110
So if it is not equals to 0,

77
00:04:36.110 --> 00:04:38.720
then I don't have a W get command,

78
00:04:38.720 --> 00:04:41.915
then I'm not going to run my shell script. I want to stop it.

79
00:04:41.915 --> 00:04:44.429
So simply I'm displaying.

80
00:04:46.120 --> 00:04:52.985
Please install, delegate and retry. That's it.

81
00:04:52.985 --> 00:04:57.095
So here is the purpose of this if condition is if,

82
00:04:57.095 --> 00:04:59.360
suppose after running which W get,

83
00:04:59.360 --> 00:05:01.234
if W get command is not present,

84
00:05:01.234 --> 00:05:03.875
then this question mark value will become non-zero.

85
00:05:03.875 --> 00:05:06.409
Then this condition will become true than you are displaying

86
00:05:06.409 --> 00:05:09.979
this information right after this information.

87
00:05:09.979 --> 00:05:11.764
If W get command is not there,

88
00:05:11.764 --> 00:05:13.250
I want to stop my shell scripts.

89
00:05:13.250 --> 00:05:15.965
So simply I'm running with an exit status as one.

90
00:05:15.965 --> 00:05:20.929
You can take any other code with exit I'm taking as if no one see what I'm

91
00:05:20.929 --> 00:05:25.865
saying is as of now you how your double again because we are not getting any error.

92
00:05:25.865 --> 00:05:27.629
Let me remove.

93
00:05:35.460 --> 00:05:36.940
Now as you know,

94
00:05:36.940 --> 00:05:39.939
I don't have to obligate command right now if I run our shells,

95
00:05:39.939 --> 00:05:41.260
gave c one it is giving,

96
00:05:41.260 --> 00:05:43.224
please install doublet under it, right?

97
00:05:43.224 --> 00:05:48.220
So that's why just we are validating with the W get command is there or not,

98
00:05:48.220 --> 00:05:50.275
because we are going to use that in our shell script.

99
00:05:50.275 --> 00:05:52.045
That's why I'm checking whether it is there or not.

100
00:05:52.045 --> 00:05:53.965
If it is there, Nobel and VD is not there.

101
00:05:53.965 --> 00:05:56.364
We can't don't want our page.

102
00:05:56.364 --> 00:06:04.360
That's fine. Now let me open ourselves clip now.

103
00:06:04.360 --> 00:06:05.799
And before going to download,

104
00:06:05.799 --> 00:06:08.749
what I'm doing is in case if,

105
00:06:09.000 --> 00:06:13.405
if this file is Xist index.html.

106
00:06:13.405 --> 00:06:16.139
Because whenever, if you don't know, know,

107
00:06:16.139 --> 00:06:18.890
you are getting this as a file and in this file,

108
00:06:18.890 --> 00:06:20.675
you are having your information.

109
00:06:20.675 --> 00:06:27.319
If it is there, then I am removing that file from my location. If it is not there.

110
00:06:27.319 --> 00:06:29.599
More problem, right?

111
00:06:29.599 --> 00:06:32.689
See, if you observed previously whenever,

112
00:06:32.689 --> 00:06:36.320
if you've done, you're downloading this index.html.

113
00:06:36.320 --> 00:06:39.514
So because suppose you are running the shell script today,

114
00:06:39.514 --> 00:06:43.610
you may have some different options with your get official website tomorrow if you run,

115
00:06:43.610 --> 00:06:45.784
maybe there are some updated good versions.

116
00:06:45.784 --> 00:06:48.049
So if this previously downloaded file,

117
00:06:48.049 --> 00:06:50.150
maybe there is a chance to.

118
00:06:50.150 --> 00:06:52.100
Get some wrong information.

119
00:06:52.100 --> 00:06:55.264
That's why before downloading your content as index.html,

120
00:06:55.264 --> 00:06:56.330
if in the current location,

121
00:06:56.330 --> 00:06:58.234
if any file is there, I want to remove that.

122
00:06:58.234 --> 00:07:03.109
That's why I added a condition with if Xist,

123
00:07:03.109 --> 00:07:04.370
if that file is Xist,

124
00:07:04.370 --> 00:07:06.379
then only remove that. Otherwise, no problem.

125
00:07:06.379 --> 00:07:07.129
Right?

126
00:07:07.129 --> 00:07:09.320
Now I'm going to download.

127
00:07:09.320 --> 00:07:13.130
So if you want to take, you ought to really can take in this way you are L equals two.

128
00:07:13.130 --> 00:07:20.389
Let me copy my URL from here. That's it.

129
00:07:20.389 --> 00:07:22.490
So just for our understanding purpose,

130
00:07:22.490 --> 00:07:25.530
what I am doing is a co

131
00:07:26.440 --> 00:07:35.180
removing all index.html.

132
00:07:35.180 --> 00:07:36.690
That's it.

133
00:07:36.880 --> 00:07:40.429
Fine. So after this just I am downloading

134
00:07:40.429 --> 00:07:44.659
an obligate URL page. So offer that immediately.

135
00:07:44.659 --> 00:07:49.025
I am checking whether that downloading content is successful or not.

136
00:07:49.025 --> 00:07:52.654
If it is not equal to 0, it was failed.

137
00:07:52.654 --> 00:07:57.635
Then I want to say to the user, echo,

138
00:07:57.635 --> 00:08:09.229
unable to download, get info from this website.

139
00:08:09.229 --> 00:08:14.390
This URL. Again, I'm exiting now whatever code too.

140
00:08:14.390 --> 00:08:15.845
That's fine.

141
00:08:15.845 --> 00:08:17.674
If it is there no problem, right?

142
00:08:17.674 --> 00:08:23.794
See what I'm doing is as of now the core what we is weather getting there,

143
00:08:23.794 --> 00:08:25.759
sorry whether W get command is there or not.

144
00:08:25.759 --> 00:08:27.965
If it is there, it won't do anything.

145
00:08:27.965 --> 00:08:30.785
If it is not there, it will say the information to the inner,

146
00:08:30.785 --> 00:08:33.019
please install, obligate and then retried.

147
00:08:33.019 --> 00:08:37.130
Same a if index.html file is there, it will remove.

148
00:08:37.130 --> 00:08:38.344
Right?

149
00:08:38.344 --> 00:08:41.285
Then if it is not that it won't do anything,

150
00:08:41.285 --> 00:08:43.250
then you are having a URL to download.

151
00:08:43.250 --> 00:08:45.695
You are a content of your Git Washington's,

152
00:08:45.695 --> 00:08:48.305
then W get URL.

153
00:08:48.305 --> 00:08:50.720
So if this was success than Donald,

154
00:08:50.720 --> 00:08:52.250
question mark value equals to 0.

155
00:08:52.250 --> 00:08:54.694
If it is equal to 0, then this is fail.

156
00:08:54.694 --> 00:08:57.635
I mean false, then you are not going to do any.

157
00:08:57.635 --> 00:09:00.304
You're not going to execute this if condition.

158
00:09:00.304 --> 00:09:02.164
In case if it was fail,

159
00:09:02.164 --> 00:09:04.280
then this question mark is not equals to 0,

160
00:09:04.280 --> 00:09:06.634
then you are conditioned becomes true.

161
00:09:06.634 --> 00:09:09.019
Then you are displaying this information,

162
00:09:09.019 --> 00:09:11.614
then you are exiting, right?

163
00:09:11.614 --> 00:09:15.980
So as of now, see that you have w index.html.

164
00:09:15.980 --> 00:09:17.959
Let me remove that first.

165
00:09:17.959 --> 00:09:21.964
Now I'm going to run your shell script. Just observe the output.

166
00:09:21.964 --> 00:09:23.045
Right?

167
00:09:23.045 --> 00:09:28.834
See now you how your index.html file just now we downward that.

168
00:09:28.834 --> 00:09:33.080
Now if I rerun first it will remove C,

169
00:09:33.080 --> 00:09:36.844
the output, removing old index.html, then it is downloading.

170
00:09:36.844 --> 00:09:39.245
That means whenever if you are running your shell script,

171
00:09:39.245 --> 00:09:43.709
always you are getting latest information from your official website.

172
00:09:43.990 --> 00:09:45.695
That's fine.

173
00:09:45.695 --> 00:09:48.260
Now let me open your index.html,

174
00:09:48.260 --> 00:09:51.934
which is known loaded up toward the output.

175
00:09:51.934 --> 00:09:54.964
So guys, if you come to very first,

176
00:09:54.964 --> 00:10:01.999
otherwise I will take simply Cartier phi,

177
00:10:01.999 --> 00:10:05.225
let me head 20.

178
00:10:05.225 --> 00:10:08.104
Now, I need only this,

179
00:10:08.104 --> 00:10:12.904
get geodata 0-1, 0-2.

180
00:10:12.904 --> 00:10:16.279
Good geodata three. But if you observe,

181
00:10:16.279 --> 00:10:17.480
if you take these two lines,

182
00:10:17.480 --> 00:10:19.589
same machine you are getting here and here.

183
00:10:19.589 --> 00:10:21.729
But there is a small difference with this term,

184
00:10:21.729 --> 00:10:25.220
tar.gz here, thought dot sine here.

185
00:10:25.710 --> 00:10:29.799
Right? Now what I want to do is, first of all,

186
00:10:29.799 --> 00:10:31.225
from this all lines,

187
00:10:31.225 --> 00:10:34.585
I am going to filter with the help of set command.

188
00:10:34.585 --> 00:10:41.409
I want to get only these lines which are having good hyphen, some digit dot-dot-dot.

189
00:10:41.409 --> 00:10:45.010
Other than that, I don't want to get anything.

190
00:10:45.010 --> 00:10:50.754
Right. Simply, let me take this as some simple line.

191
00:10:50.754 --> 00:10:53.290
I'm going to explain this force on your command line.

192
00:10:53.290 --> 00:10:57.379
Aco, sorry, let me take a variable called line,

193
00:10:59.100 --> 00:11:02.899
echo, dollar line, sorry.

194
00:11:04.410 --> 00:11:07.809
So there is no, I want read a sed command such

195
00:11:07.809 --> 00:11:12.249
that such that I need to match the information.

196
00:11:12.249 --> 00:11:14.425
So vice Actually you were anti-Chinese in this way.

197
00:11:14.425 --> 00:11:16.239
And this is not, you are taking only this one,

198
00:11:16.239 --> 00:11:17.320
but you were anti-Chinese.

199
00:11:17.320 --> 00:11:19.179
Let me take it complete line.

200
00:11:19.179 --> 00:11:22.029
So this is your entire line, something like that.

201
00:11:22.029 --> 00:11:28.429
Okay. No echo dollar line.

202
00:11:30.570 --> 00:11:32.860
Now this is your line.

203
00:11:32.860 --> 00:11:36.234
Now in this line, right?

204
00:11:36.234 --> 00:11:39.819
Just, I am going to write some set commands such that

205
00:11:39.819 --> 00:11:43.345
if you are line consists of good some digits,

206
00:11:43.345 --> 00:11:47.070
then tar.gz, that lens only I want to print it.

207
00:11:47.070 --> 00:11:48.154
Right?

208
00:11:48.154 --> 00:11:51.019
So for 3000 data set command with some patterns.

209
00:11:51.019 --> 00:11:53.149
So how you can write your pattern.

210
00:11:53.149 --> 00:11:57.005
So initially what I'm writing is you are lying.

211
00:11:57.005 --> 00:12:02.449
Said printed the lines which are having with the get the hyphen.

212
00:12:02.449 --> 00:12:04.744
Right? So there's After that,

213
00:12:04.744 --> 00:12:06.965
I need a some number, right?

214
00:12:06.965 --> 00:12:09.010
So if we want to number,

215
00:12:09.010 --> 00:12:11.524
you have to write 0 to nine any number.

216
00:12:11.524 --> 00:12:17.764
And if you observe in your gigawatts shuns. Let me take some.

217
00:12:17.764 --> 00:12:20.660
Yeah. See you how to dot 4.1a.

218
00:12:20.660 --> 00:12:22.535
One means two digits you have here.

219
00:12:22.535 --> 00:12:25.040
But if you go with year two dot 4.1a,

220
00:12:25.040 --> 00:12:29.135
that means you are number may be minimum, one number maximum.

221
00:12:29.135 --> 00:12:30.844
You don't know exactly, right?

222
00:12:30.844 --> 00:12:33.064
So at least I should have one number.

223
00:12:33.064 --> 00:12:34.159
Then.

224
00:12:34.159 --> 00:12:37.999
Slash plus means offer Gita hyphen,

225
00:12:37.999 --> 00:12:39.215
I should have a dessert.

226
00:12:39.215 --> 00:12:41.540
That digit, maybe one digit sought to digits,

227
00:12:41.540 --> 00:12:44.209
you know, what is the meaning of slash plus?

228
00:12:44.209 --> 00:12:46.730
Already we discussed in our one-off video,

229
00:12:46.730 --> 00:12:49.550
one of the video of special characters to create

230
00:12:49.550 --> 00:12:52.700
your earlier expressions with the help of your special characters.

231
00:12:52.700 --> 00:12:55.115
Right there we discussed are bored slash plus.

232
00:12:55.115 --> 00:12:58.310
Now the meaningful slash bill is what?

233
00:12:58.310 --> 00:13:00.394
Toward the desert, you are getting here.

234
00:13:00.394 --> 00:13:04.549
That digit, maybe one digit or tourists or three digits, whatever it may be.

235
00:13:04.549 --> 00:13:06.949
So often you are deserts.

236
00:13:06.949 --> 00:13:08.210
You have dot as well.

237
00:13:08.210 --> 00:13:14.300
Now I want to match dot with dot nicely if I take simply dot.me any character,

238
00:13:14.300 --> 00:13:16.010
but I want to make it dot with dot,

239
00:13:16.010 --> 00:13:18.034
then you ought to take Slashdot.

240
00:13:18.034 --> 00:13:20.640
Allele would discuss this rule as well.

241
00:13:21.580 --> 00:13:28.294
Right? Then. These lines only I want to print.

242
00:13:28.294 --> 00:13:32.569
Let me check it whether you are able to get your output amount yes, you are getting.

243
00:13:32.569 --> 00:13:37.714
Now what I'm going to do is it is not perfect. You guys.

244
00:13:37.714 --> 00:13:43.009
Let me do one thing. Now I'm going to use a while loop

245
00:13:43.009 --> 00:13:48.170
to read your line one by one from your file called Where is your file?

246
00:13:48.170 --> 00:13:50.669
Index.html.

247
00:13:50.920 --> 00:13:55.505
Right now what I am doing is a co, your line.

248
00:13:55.505 --> 00:13:58.400
And then I'm using this said syntax.

249
00:13:58.400 --> 00:14:02.885
I mean the lines which are following this one.

250
00:14:02.885 --> 00:14:05.599
Those lines only I want to print.

251
00:14:05.599 --> 00:14:07.910
So just for our understanding purpose,

252
00:14:07.910 --> 00:14:09.364
I am writing sleep command here,

253
00:14:09.364 --> 00:14:11.495
sleep one so that we can observe the output.

254
00:14:11.495 --> 00:14:13.609
I mean, for each and every line.

255
00:14:13.609 --> 00:14:19.954
Now let me go ahead and run this. Man. Something wrong.

256
00:14:19.954 --> 00:14:23.210
The next unexpected token, Yeah,

257
00:14:23.210 --> 00:14:27.890
let me open my script. Do, done.

258
00:14:27.890 --> 00:14:29.690
Yeah, less than symbol I mystery here,

259
00:14:29.690 --> 00:14:31.619
less than symbol

260
00:14:40.840 --> 00:14:43.099
a whatsoever.

261
00:14:43.099 --> 00:14:49.160
Yeah, see that? You are getting some lines which are having only thought dot,

262
00:14:49.160 --> 00:14:52.130
sorry, get the hyphens, something, right?

263
00:14:52.130 --> 00:14:54.559
Let me stop my script here itself.

264
00:14:54.559 --> 00:14:58.025
Get hyphen number tar.gz.

265
00:14:58.025 --> 00:15:01.325
Along with that, you are getting thought dot sine as well.

266
00:15:01.325 --> 00:15:08.389
But I want to get only tar.gz because if I go with the tar.gz and thought dot sine,

267
00:15:08.389 --> 00:15:10.220
I'm getting same wash and again and again,

268
00:15:10.220 --> 00:15:18.725
that's why I can take either tar.gz line or sign one of the line, right?

269
00:15:18.725 --> 00:15:22.369
Of course you can also use simply you are grep command as well,

270
00:15:22.369 --> 00:15:26.540
which consists of.tar.gz, right?

271
00:15:26.540 --> 00:15:28.520
But if you take tar.gz,

272
00:15:28.520 --> 00:15:30.905
let me show you that as well.

273
00:15:30.905 --> 00:15:34.429
Because you may get idea.

274
00:15:34.429 --> 00:15:36.770
Why can't we use grep command, right?

275
00:15:36.770 --> 00:15:39.180
So what I'm using is

276
00:15:42.430 --> 00:15:49.339
if this consist of grep thought dot z,

277
00:15:49.339 --> 00:15:53.789
Zed, those lines only I want to print.

278
00:15:54.370 --> 00:16:01.169
Right? Let me execute this script once and see the output.

279
00:16:03.010 --> 00:16:06.439
You download it. Now, you are taking one by one line

280
00:16:06.439 --> 00:16:09.589
from URL with way or while loop on your looking.

281
00:16:09.589 --> 00:16:13.070
Is it's working as of no perfectly see somewhere.

282
00:16:13.070 --> 00:16:16.385
You will get a lot done thoughts desert,

283
00:16:16.385 --> 00:16:18.454
right? Let me show you that.

284
00:16:18.454 --> 00:16:23.700
Once if it get, then I will show you that you have to wait.

285
00:16:26.470 --> 00:16:31.519
Because our given 1 second sleep for each and every line, right?

286
00:16:31.519 --> 00:16:34.235
You need to wait for some time to observe a difference.

287
00:16:34.235 --> 00:16:38.099
Why can't we go with the grep command?

288
00:16:49.920 --> 00:16:55.270
I will do one thing. I will remove sleep command because

289
00:16:55.270 --> 00:16:57.219
you're going to waste your time actually now

290
00:16:57.219 --> 00:17:00.624
given just for our understanding purpose, this sleep comment.

291
00:17:00.624 --> 00:17:03.729
Let me run it and see the output.

292
00:17:03.729 --> 00:17:08.215
Then here I can show you. See this.

293
00:17:08.215 --> 00:17:12.835
Good to manage pages to dot-dot-dot for dot tar.gz.

294
00:17:12.835 --> 00:17:16.329
Having tar.gz, same version number.

295
00:17:16.329 --> 00:17:19.989
Is there somewhere with only ever get hyphen c,

296
00:17:19.989 --> 00:17:22.965
you are having HTML documents information as well. Let means.

297
00:17:22.965 --> 00:17:25.399
If you go with only tar.gz, No,

298
00:17:25.399 --> 00:17:27.979
you're going to get duplicate numbers again and again.

299
00:17:27.979 --> 00:17:29.284
That's why I want to filter.

300
00:17:29.284 --> 00:17:32.554
I can filter with the help of the sed command effectively.

301
00:17:32.554 --> 00:17:34.144
But how can I filter?

302
00:17:34.144 --> 00:17:36.199
That is the question here.

303
00:17:36.199 --> 00:17:38.870
Right? Now, if you go with

304
00:17:38.870 --> 00:17:43.115
your sed command with the help of regular expression, you can filter that.

305
00:17:43.115 --> 00:17:44.479
Right?

306
00:17:44.479 --> 00:17:46.264
Let me do one thing.

307
00:17:46.264 --> 00:17:49.609
Let me take your holiday.

308
00:17:49.609 --> 00:17:56.540
We did collide. Let me open your file. Where is this line?

309
00:17:56.540 --> 00:18:01.114
So instead of your grep command, just take set,

310
00:18:01.114 --> 00:18:05.550
printed the lines which are having,

311
00:18:05.550 --> 00:18:07.825
first of all, get the hyphen.

312
00:18:07.825 --> 00:18:09.774
So after that you have digits like,

313
00:18:09.774 --> 00:18:11.620
you know, get Guassian means,

314
00:18:11.620 --> 00:18:14.964
let me take one version I can explain you suppose get,

315
00:18:14.964 --> 00:18:16.299
if we run iPhone,

316
00:18:16.299 --> 00:18:19.539
iPhone version two or six dot three,

317
00:18:19.539 --> 00:18:28.039
but in your page you are having something like let me take this.

318
00:18:31.680 --> 00:18:35.800
And same information you may house somewhere

319
00:18:35.800 --> 00:18:39.819
with some what is the washroom does is to not 4.1a, right?

320
00:18:39.819 --> 00:18:43.339
Let me go with the two dot 4.1a.

321
00:18:44.730 --> 00:18:48.345
See here, pull out 4.1a.

322
00:18:48.345 --> 00:18:55.039
Now this line as well as the if I write lines.

323
00:18:55.039 --> 00:18:58.100
And now let me go with two dot followed one z,

324
00:18:58.100 --> 00:19:02.120
z two dot 4.1a.

325
00:19:02.120 --> 00:19:03.629
Desert.

326
00:19:03.820 --> 00:19:06.605
Know although these two lines,

327
00:19:06.605 --> 00:19:08.959
we have seen what SHA-1 here,

328
00:19:08.959 --> 00:19:10.894
but duplicate if I take this line,

329
00:19:10.894 --> 00:19:12.065
I have to skip this line,

330
00:19:12.065 --> 00:19:13.489
or if I take this line,

331
00:19:13.489 --> 00:19:14.825
I have to skip next lane.

332
00:19:14.825 --> 00:19:18.349
That's why I just I'm going to work with only get hyphens,

333
00:19:18.349 --> 00:19:21.589
some number dot tar.gz only I wanted to get that line so

334
00:19:21.589 --> 00:19:25.685
that I can get unique number for each and each and every version.

335
00:19:25.685 --> 00:19:30.260
Now, I need to write a set command to match, right?

336
00:19:30.260 --> 00:19:33.724
Third hyphen in whatever the line you are having,

337
00:19:33.724 --> 00:19:36.620
four that get hyphen.

338
00:19:36.620 --> 00:19:39.245
Any I don't know exactly what the number is there,

339
00:19:39.245 --> 00:19:44.224
but it should be there between 0 to nine anyone of the number, right?

340
00:19:44.224 --> 00:19:50.599
One number and sometimes even two dot c for three, something like that.

341
00:19:50.599 --> 00:19:51.950
That means there is a chance to have

342
00:19:51.950 --> 00:19:53.869
one more number as well along with your single digit.

343
00:19:53.869 --> 00:19:56.570
That's why I'm trying to map with

344
00:19:56.570 --> 00:20:00.035
the slash plus means you are number maybe one time or more than one,

345
00:20:00.035 --> 00:20:03.755
that after you or number, you have data as well.

346
00:20:03.755 --> 00:20:05.179
So I want to match dot,

347
00:20:05.179 --> 00:20:09.425
dot slash dot, right?

348
00:20:09.425 --> 00:20:13.960
So now you written a pattern for this exactly.

349
00:20:13.960 --> 00:20:16.719
You written same exact string.

350
00:20:16.719 --> 00:20:18.744
The only thing is to match your digits.

351
00:20:18.744 --> 00:20:20.095
You have to write a pattern.

352
00:20:20.095 --> 00:20:23.110
Now this is only to match a foster deceit,

353
00:20:23.110 --> 00:20:25.029
not this type of digits.

354
00:20:25.029 --> 00:20:30.250
Two dot three, dot one dot this type of sequence.

355
00:20:30.250 --> 00:20:31.855
You, you may repeat.

356
00:20:31.855 --> 00:20:33.834
I mean your watch and may repeat.

357
00:20:33.834 --> 00:20:35.410
So if you remember,

358
00:20:35.410 --> 00:20:43.810
the purpose of grouping concept is if any sequence is repeated to identify that,

359
00:20:43.810 --> 00:20:46.614
we have to group your particular pattern.

360
00:20:46.614 --> 00:20:50.920
Not this sequence may be one or more times.

361
00:20:50.920 --> 00:20:53.214
Because definitely you'll have one disease.

362
00:20:53.214 --> 00:20:55.664
If it is a merchant, at least one digit.

363
00:20:55.664 --> 00:20:58.805
Right, one digit then dot-dot-dot z, z.

364
00:20:58.805 --> 00:21:03.604
That's why I'm writing it 0 to nine to match one visit.

365
00:21:03.604 --> 00:21:05.165
If there is one more digit,

366
00:21:05.165 --> 00:21:06.694
I want to match that as well.

367
00:21:06.694 --> 00:21:09.260
That's why I am writing slash plus.

368
00:21:09.260 --> 00:21:11.930
Right? Then.

369
00:21:11.930 --> 00:21:15.155
Did this type of 2.2K,

370
00:21:15.155 --> 00:21:18.589
maybe some x dot one.me,

371
00:21:18.589 --> 00:21:20.449
same sequence you are repeating.

372
00:21:20.449 --> 00:21:22.594
That's wafers to group this sequence.

373
00:21:22.594 --> 00:21:25.144
So two group, you have to use parenthesis.

374
00:21:25.144 --> 00:21:29.209
That sequence may be minimum anyway, you have one time.

375
00:21:29.209 --> 00:21:33.260
So that's why slash plus means one or more times.

376
00:21:33.260 --> 00:21:35.809
Right? So after that, offer,

377
00:21:35.809 --> 00:21:37.369
repeating your sequence finally,

378
00:21:37.369 --> 00:21:40.684
how do we end up with the dot tar.gz?

379
00:21:40.684 --> 00:21:44.430
Right? Finally, you have to end up with tar.gz.

380
00:21:44.430 --> 00:21:48.320
That's why I'm digging ending world, tar.gz.

381
00:21:48.320 --> 00:21:51.424
So the lines which are having this pattern,

382
00:21:51.424 --> 00:21:53.569
I want to print those lines.

383
00:21:53.569 --> 00:21:57.365
There is nothing is there just a copy these two?

384
00:21:57.365 --> 00:21:59.630
So to write your patrons.

385
00:21:59.630 --> 00:22:02.670
And let me take from here also.

386
00:22:03.790 --> 00:22:07.759
So if your line consists of any one of these two patterns,

387
00:22:07.759 --> 00:22:10.039
I want to match only this pattern.

388
00:22:10.039 --> 00:22:13.265
Now first of all, observe there is a good to common.

389
00:22:13.265 --> 00:22:16.729
I mean, for all your type of Washington's get is common,

390
00:22:16.729 --> 00:22:19.879
that's why I'm taking pattern has good hyphen.

391
00:22:19.879 --> 00:22:22.190
Offer that definitely you have a number,

392
00:22:22.190 --> 00:22:23.870
then only this will match.

393
00:22:23.870 --> 00:22:27.724
If you write some number, this will skip because here do you don't have the number right?

394
00:22:27.724 --> 00:22:29.179
After I for you don't know the number.

395
00:22:29.179 --> 00:22:31.655
You have a letter. That's why you are going to skip that.

396
00:22:31.655 --> 00:22:35.194
Now. 0 to nine,

397
00:22:35.194 --> 00:22:38.799
any number, that number maybe

398
00:22:38.799 --> 00:22:42.850
one time or more than one offer that you hover dot, so Slashdot.

399
00:22:42.850 --> 00:22:48.790
And this sequence is going to repeat because suppose to dot-dot-dot 0.5c, some version.

400
00:22:48.790 --> 00:22:51.174
That's why this sequence you had to repeat.

401
00:22:51.174 --> 00:22:52.975
That's why I'm making it as a group.

402
00:22:52.975 --> 00:22:56.604
And this group, maybe one time or minimum one time.

403
00:22:56.604 --> 00:23:00.100
That's why I'm taking slash plus more than that.

404
00:23:00.100 --> 00:23:02.695
Offer that simply you how?

405
00:23:02.695 --> 00:23:05.770
Thor, sorry, non-native dot because already you,

406
00:23:05.770 --> 00:23:15.744
you are covering dot inside of your sequence like then simply thought dots isn't, right?

407
00:23:15.744 --> 00:23:17.650
No, let me copy this one.

408
00:23:17.650 --> 00:23:21.260
And I am going to write, I'm going to place this in my shell script so

409
00:23:21.260 --> 00:23:27.515
that I'm going to get the lines, unique lines.

410
00:23:27.515 --> 00:23:31.715
I mean, for what chance I'm going to get now lines, unique lines.

411
00:23:31.715 --> 00:23:37.055
Now I'm going to print the lines which are having our required pattern.

412
00:23:37.055 --> 00:23:44.930
Let me run this and see the output C. Now you are getting only your tar.gz nowhere.

413
00:23:44.930 --> 00:23:47.419
You're getting duplicated version number.

414
00:23:47.419 --> 00:23:54.694
So you can go with from starting all or only get hyphen sm, something, right?

415
00:23:54.694 --> 00:23:57.604
But I don't want to print the entire line.

416
00:23:57.604 --> 00:24:00.785
I want to print only this portion first.

417
00:24:00.785 --> 00:24:04.715
Because from this portion, if I able to fetch this portion,

418
00:24:04.715 --> 00:24:09.005
then from that I can grab my washer number.

419
00:24:09.005 --> 00:24:12.335
That's why what I am doing is if you have good here guys,

420
00:24:12.335 --> 00:24:14.659
there is a quotation, these fields operator.

421
00:24:14.659 --> 00:24:16.534
If I take with your AWPA command,

422
00:24:16.534 --> 00:24:18.050
then this is foster part,

423
00:24:18.050 --> 00:24:21.064
then this is second part, hygienic oxidation here.

424
00:24:21.064 --> 00:24:22.564
Then this is third part.

425
00:24:22.564 --> 00:24:24.154
But I need the second part.

426
00:24:24.154 --> 00:24:28.789
That's why what I am doing is I don't want to print an entire line.

427
00:24:28.789 --> 00:24:33.094
Now simply, I am using here WK command,

428
00:24:33.094 --> 00:24:35.450
hyphen f, capital F.

429
00:24:35.450 --> 00:24:38.090
I'm giving feels operator has double quotation.

430
00:24:38.090 --> 00:24:41.790
Then I want to print a second field.

431
00:24:44.850 --> 00:24:48.439
Now see the output, what you are going to get.

432
00:24:49.320 --> 00:24:52.824
C, you're getting only these lines,

433
00:24:52.824 --> 00:24:57.145
I mean.tar.gz or getting.

434
00:24:57.145 --> 00:24:59.365
But in this information what I need,

435
00:24:59.365 --> 00:25:02.590
I need only actually do Node.js one geodata 0.

436
00:25:02.590 --> 00:25:04.194
Do these Watson's I need.

437
00:25:04.194 --> 00:25:07.764
First I am trying to eliminate, get the hyphen.

438
00:25:07.764 --> 00:25:08.769
Okay?

439
00:25:08.769 --> 00:25:12.289
So k. Suppose if this is your line C,

440
00:25:14.160 --> 00:25:19.375
I can use your AWPA command with three separate RAS.

441
00:25:19.375 --> 00:25:21.560
Suppose hyphen.

442
00:25:22.050 --> 00:25:25.869
Then I can take second field.

443
00:25:25.869 --> 00:25:29.330
Why second field? If you separate this information with help of iPhone,

444
00:25:29.330 --> 00:25:30.349
this is one field,

445
00:25:30.349 --> 00:25:31.549
this is second field.

446
00:25:31.549 --> 00:25:33.829
So if I want to get second field,

447
00:25:33.829 --> 00:25:35.495
I, however I2, right?

448
00:25:35.495 --> 00:25:38.615
Printed dollar to see the output.

449
00:25:38.615 --> 00:25:42.874
Yes. But why should we write this lengthy obligate command?

450
00:25:42.874 --> 00:25:44.239
I have a cut command.

451
00:25:44.239 --> 00:25:47.224
So compared to this cut command is very useful here.

452
00:25:47.224 --> 00:25:50.719
If you observe Getty's Foster character,

453
00:25:50.719 --> 00:25:55.730
second 34, if you remove only first 24 characters from 50 characters,

454
00:25:55.730 --> 00:25:57.749
you need entire thing.

455
00:25:58.360 --> 00:26:00.200
Right?

456
00:26:00.200 --> 00:26:02.010
Don't consider like a fifth,

457
00:26:02.010 --> 00:26:04.159
sixth, seventh, eighth, ninth we need,

458
00:26:04.159 --> 00:26:06.139
because somewhere you Mohamad these eight

459
00:26:06.139 --> 00:26:10.475
position multiple leaves the see here, somebody how to 0.

460
00:26:10.475 --> 00:26:12.965
That's what I'm saying is suppose,

461
00:26:12.965 --> 00:26:25.070
if we consider only last one with the cut command 1234 from 50 character 5X 6789.

462
00:26:25.070 --> 00:26:26.359
Right?

463
00:26:26.359 --> 00:26:30.455
So if you take simply hyphen sci fi to nine,

464
00:26:30.455 --> 00:26:34.939
it will work for the last line, right?

465
00:26:34.939 --> 00:26:39.410
I will do one thing. Echo, last Lenny This one.

466
00:26:39.410 --> 00:26:40.699
Right?

467
00:26:40.699 --> 00:26:43.800
So I am applying cut command on this line.

468
00:26:43.840 --> 00:26:47.134
See the output you are getting perfectly or Washington.

469
00:26:47.134 --> 00:26:49.519
But you're writing generalized where no.

470
00:26:49.519 --> 00:26:54.214
If in case if something Watson is like two dot nine dot two.

471
00:26:54.214 --> 00:26:59.434
So nine, 2.5a, then you are missing last visit here.

472
00:26:59.434 --> 00:27:01.430
But for each and every line,

473
00:27:01.430 --> 00:27:05.270
if you observe faster for character sorts similar.

474
00:27:05.270 --> 00:27:07.159
That's why from fifth character,

475
00:27:07.159 --> 00:27:08.585
I'm printing all the lines,

476
00:27:08.585 --> 00:27:11.014
sorry, all the characters in each and every line.

477
00:27:11.014 --> 00:27:13.385
Let me open this, our script.

478
00:27:13.385 --> 00:27:15.539
Now what I'm doing is.

479
00:27:16.350 --> 00:27:22.970
Pipeline, cut characters, print from phi to last.

480
00:27:23.250 --> 00:27:30.564
Now see the output. So now you're getting good hyphen.

481
00:27:30.564 --> 00:27:33.739
Now if I run my shell script c, what you are getting.

482
00:27:33.750 --> 00:27:37.520
Now I need to remove this portion.

483
00:27:38.490 --> 00:27:41.860
Right now I can use, once again,

484
00:27:41.860 --> 00:27:46.090
you are elderly gay comment on output of this final output pipeline,

485
00:27:46.090 --> 00:27:50.019
a WK fields operate as tar.gz.

486
00:27:50.019 --> 00:27:58.850
Then I can print your Foster Field so that I will get only worse shunts printed $1.1.

487
00:28:00.420 --> 00:28:03.190
That's a knowledge other output,

488
00:28:03.190 --> 00:28:05.900
you're going to get only versions.

489
00:28:09.240 --> 00:28:11.049
Right?

490
00:28:11.049 --> 00:28:13.885
But the thing is, I don't want display,

491
00:28:13.885 --> 00:28:15.744
I mean, one-by-one sequence in this way.

492
00:28:15.744 --> 00:28:18.009
Because if we display in this way, finally,

493
00:28:18.009 --> 00:28:20.770
you are not able to see all the options in a single page.

494
00:28:20.770 --> 00:28:23.409
I want to see all the Watson Sr. single-page.

495
00:28:23.409 --> 00:28:29.020
So that's why what I'm doing is after finding your each and every git version,

496
00:28:29.020 --> 00:28:36.700
I'm going to store all these functions into one variable called array that we open this,

497
00:28:36.700 --> 00:28:39.920
let me declare somewhere summary.

498
00:28:41.100 --> 00:28:45.595
Declare iPhone, yay, good towards shunts.

499
00:28:45.595 --> 00:28:47.740
I'm taking simply this variable.

500
00:28:47.740 --> 00:28:52.659
Okay? So whatever the output you are getting, right?

501
00:28:52.659 --> 00:28:55.150
So for that, I am going to,

502
00:28:55.150 --> 00:28:57.069
that output I'm going to store into

503
00:28:57.069 --> 00:29:03.250
my array list to store your array value into your array.

504
00:29:03.250 --> 00:29:04.614
You have a Syntax.

505
00:29:04.614 --> 00:29:06.550
Let me show you that.

506
00:29:06.550 --> 00:29:13.599
I mean, first I am going to get,

507
00:29:13.599 --> 00:29:15.909
instead of displaying your output,

508
00:29:15.909 --> 00:29:21.680
I'm going to store this into an array.

509
00:29:25.200 --> 00:29:28.389
Where is it lost line ending?

510
00:29:28.389 --> 00:29:31.104
Yeah, this is okay.

511
00:29:31.104 --> 00:29:33.279
So I guess before come into this description,

512
00:29:33.279 --> 00:29:34.644
you know, I'm in this shell script.

513
00:29:34.644 --> 00:29:39.954
It's better to go with your previous concepts like we discussed in our course, right?

514
00:29:39.954 --> 00:29:42.549
Reach and every concepts,

515
00:29:42.549 --> 00:29:45.295
whatever we had as of now,

516
00:29:45.295 --> 00:29:48.789
it all concepts will be discussed in our course.

517
00:29:48.789 --> 00:29:52.750
Like your arrays, just to go to your curriculum.

518
00:29:52.750 --> 00:29:54.429
I mean newer around syllabus,

519
00:29:54.429 --> 00:29:58.404
whatever the course you have taken from Udemy,

520
00:29:58.404 --> 00:30:01.989
our course, complete Bash shell scripting, right?

521
00:30:01.989 --> 00:30:05.529
So you need RAs concepts somewhere and print,

522
00:30:05.529 --> 00:30:07.635
printf also we need for this script.

523
00:30:07.635 --> 00:30:11.540
I will show you why we need men somewhere.

524
00:30:11.540 --> 00:30:14.700
We how arrays information as well.

525
00:30:15.340 --> 00:30:17.779
Arrays we have here, right?

526
00:30:17.779 --> 00:30:19.054
And also we differ somewhere.

527
00:30:19.054 --> 00:30:21.739
Loops, guys, I'm somewhere.

528
00:30:21.739 --> 00:30:24.380
Yeah, yeah, WK we discussed here.

529
00:30:24.380 --> 00:30:26.389
Then said comma Cut command.

530
00:30:26.389 --> 00:30:28.400
We discussed here complete Cut command,

531
00:30:28.400 --> 00:30:32.899
said come and also we discussed here completely, right?

532
00:30:32.899 --> 00:30:35.704
Okay, if you go with the, all these concepts,

533
00:30:35.704 --> 00:30:38.944
then the strip is very easy for you, right?

534
00:30:38.944 --> 00:30:44.179
Fine. Now what I'm doing is after finding each and every version of your good,

535
00:30:44.179 --> 00:30:46.009
I'm adding into my array.

536
00:30:46.009 --> 00:30:49.230
So my arrays, some git version.

537
00:30:49.360 --> 00:30:58.069
Right? So, yeah, so this is the value in my array.

538
00:30:58.069 --> 00:31:01.440
So I need to apply one more parenthesis.

539
00:31:02.200 --> 00:31:04.159
That's fine.

540
00:31:04.159 --> 00:31:08.869
Alright, let me print off the completion of your while loop.

541
00:31:08.869 --> 00:31:13.830
Finally, I'm renting the all available.

542
00:31:14.290 --> 00:31:17.719
Get what's Shen saw.

543
00:31:17.719 --> 00:31:22.880
Let me bring you or get to a shuns which we collected in

544
00:31:22.880 --> 00:31:29.159
terms of your variable called This one.

545
00:31:34.410 --> 00:31:38.659
Let me check it whether it is working perfectly or not.

546
00:31:40.830 --> 00:31:46.075
It is finding now all Washington's once it is completed,

547
00:31:46.075 --> 00:31:49.884
finally, to display all the machines which are there as an array.

548
00:31:49.884 --> 00:31:52.659
Now these all, all are the versions which are there in

549
00:31:52.659 --> 00:31:58.465
your official get what Shannon official website of your good.

550
00:31:58.465 --> 00:31:59.934
So these are the versions.

551
00:31:59.934 --> 00:32:03.894
Now I collected all into a variable,

552
00:32:03.894 --> 00:32:07.359
into an array, and I am displaying the,

553
00:32:07.359 --> 00:32:09.474
all the elements from your IRA.

554
00:32:09.474 --> 00:32:11.019
But I don't want to display in the,

555
00:32:11.019 --> 00:32:12.850
So if I display in this way, what will happen?

556
00:32:12.850 --> 00:32:16.210
Somewhat clumsy, No, that's why what I wanted to ease in each line I want to print.

557
00:32:16.210 --> 00:32:20.420
Suppose three values, three versions I want to print each and every line.

558
00:32:20.420 --> 00:32:24.770
Right? So what I'm doing is I'm going to collect one-by-one from

559
00:32:24.770 --> 00:32:33.440
this variable for each version in your array.

560
00:32:33.440 --> 00:32:34.684
Right?

561
00:32:34.684 --> 00:32:36.860
So I'm going to take some count,

562
00:32:36.860 --> 00:32:39.514
the count two purposes initially 0,

563
00:32:39.514 --> 00:32:42.799
just observe the output so that you can understand.

564
00:32:42.799 --> 00:32:46.445
So after collecting all your versions,

565
00:32:46.445 --> 00:32:51.574
simply I'm doing though Dan, let me do one thing.

566
00:32:51.574 --> 00:32:59.839
Echo. See, I want

567
00:32:59.839 --> 00:33:04.115
to print simply from your geared towards Shen variable.

568
00:33:04.115 --> 00:33:08.164
That is another right. I want to print indexes 0 value.

569
00:33:08.164 --> 00:33:09.215
That's it.

570
00:33:09.215 --> 00:33:11.584
So that is the use of my count.

571
00:33:11.584 --> 00:33:13.804
At the same time, in the same line,

572
00:33:13.804 --> 00:33:18.079
I want to print two more values because in each and every line,

573
00:33:18.079 --> 00:33:19.640
while displaying my Washington's,

574
00:33:19.640 --> 00:33:21.965
I want to print three versions.

575
00:33:21.965 --> 00:33:24.989
That's why I'm taking once again.

576
00:33:29.830 --> 00:33:33.709
But now what I'm doing is for I have taken

577
00:33:33.709 --> 00:33:43.414
two curly braces, count plus one.

578
00:33:43.414 --> 00:33:47.630
Then what I will do is after slashed last T, I will do.

579
00:33:47.630 --> 00:33:50.689
Once again, you are variable.

580
00:33:50.689 --> 00:33:56.359
Then now I am going to display counter plus one plus two now,

581
00:33:56.359 --> 00:34:04.559
because I wanted to just let third value from your IRA, cone plus two.

582
00:34:05.920 --> 00:34:10.085
So here I missed her two parenthesis.

583
00:34:10.085 --> 00:34:13.200
Anything wrong?

584
00:34:14.230 --> 00:34:19.219
Square bracket. Fine.

585
00:34:19.219 --> 00:34:21.065
To execute your slash t,

586
00:34:21.065 --> 00:34:22.879
I need to use hyphen ni.

587
00:34:22.879 --> 00:34:26.750
So after that, what I'm doing is I'm increasing

588
00:34:26.750 --> 00:34:34.084
your count equals to initially or counties 0.

589
00:34:34.084 --> 00:34:36.440
But first time you are getting three elements.

590
00:34:36.440 --> 00:34:39.185
That's why next time, whenever it is going to,

591
00:34:39.185 --> 00:34:41.629
for your next iteration, whenever,

592
00:34:41.629 --> 00:34:43.070
if I want to get my elements,

593
00:34:43.070 --> 00:34:45.349
I want to make it as a count to three so that I can

594
00:34:45.349 --> 00:34:48.814
get next time fourth element from your IRA.

595
00:34:48.814 --> 00:34:51.395
Let me run this and see the output.

596
00:34:51.395 --> 00:34:53.759
Yet one more thing.

597
00:34:54.280 --> 00:34:56.059
You have, fine.

598
00:34:56.059 --> 00:35:00.989
I will do one thing. Let me run your script ones.

599
00:35:04.210 --> 00:35:07.280
So it is collecting all your questions.

600
00:35:07.280 --> 00:35:09.544
Once it is collected with LPA for loop,

601
00:35:09.544 --> 00:35:13.490
you are going to Amman nowhere we are displaying.

602
00:35:13.490 --> 00:35:16.325
Yeah, we got it right.

603
00:35:16.325 --> 00:35:19.219
But if you observe after getting your emotions anyway,

604
00:35:19.219 --> 00:35:20.675
they are not in perfect order.

605
00:35:20.675 --> 00:35:22.189
We will arrange that after getting,

606
00:35:22.189 --> 00:35:24.484
you're getting some empty space, empty lines here.

607
00:35:24.484 --> 00:35:27.755
Because once you collect all your variables,

608
00:35:27.755 --> 00:35:32.400
all oliver, good versions from your array.

609
00:35:32.890 --> 00:35:36.500
Let me show you that you are repeating

610
00:35:36.500 --> 00:35:43.370
your for loop based on how many values are there in your array.

611
00:35:43.370 --> 00:35:46.339
For first iteration, right?

612
00:35:46.339 --> 00:35:50.135
You're not printing first value only you are printing three valleys successfully.

613
00:35:50.135 --> 00:35:54.740
That's why. Let me first find out your length or for

614
00:35:54.740 --> 00:36:03.725
a number of what Shane's equals to,

615
00:36:03.725 --> 00:36:06.289
you know how to find light.

616
00:36:06.289 --> 00:36:09.814
Already we cover these with the hash symbol.

617
00:36:09.814 --> 00:36:16.174
You can get your right.

618
00:36:16.174 --> 00:36:19.369
Let me as of now what I'm doing is I'm going to

619
00:36:19.369 --> 00:36:22.054
come into your code just I want to display

620
00:36:22.054 --> 00:36:29.154
whether we are able to get you are length or not, like o.

621
00:36:29.154 --> 00:36:35.499
Number of good towards shuns equals two.

622
00:36:35.499 --> 00:36:40.459
I want to display my number of questions

623
00:36:49.170 --> 00:36:51.775
just to weight it is collecting.

624
00:36:51.775 --> 00:36:53.500
Finally, we will display so

625
00:36:53.500 --> 00:36:57.309
159 G20 actions are there as of now with your official website.

626
00:36:57.309 --> 00:37:01.780
Okay, this after collecting your 159 with the help of for loop,

627
00:37:01.780 --> 00:37:03.970
we are able to read and you're able to display.

628
00:37:03.970 --> 00:37:07.540
But the problem is unnecessarily or getting some space here because your for loop

629
00:37:07.540 --> 00:37:11.899
is going to repeat 159 times muddy.

630
00:37:11.899 --> 00:37:14.675
You are getting all the versions values,

631
00:37:14.675 --> 00:37:16.774
right, with the help of our own,

632
00:37:16.774 --> 00:37:24.200
159 by three, because you are going to print each time three values.

633
00:37:24.200 --> 00:37:29.330
So phi 53 lines by 53 lines you are getting, you are all versions.

634
00:37:29.330 --> 00:37:34.790
Then remaining lines are empty because you are not having index range for that.

635
00:37:34.790 --> 00:37:38.359
601, not six lines.

636
00:37:38.359 --> 00:37:39.499
We are getting empty lines.

637
00:37:39.499 --> 00:37:42.229
I don't want to get empty lines while displaying my output.

638
00:37:42.229 --> 00:37:48.090
That's why what I am doing is now I got the length.

639
00:37:51.490 --> 00:37:55.469
Let me uncomment my lines.

640
00:37:59.290 --> 00:38:05.629
Seen case, if if you are counting value,

641
00:38:05.629 --> 00:38:10.954
if it is greater than or equals to 159,

642
00:38:10.954 --> 00:38:15.710
that means the number of good merchants.

643
00:38:15.710 --> 00:38:18.510
Then I want to stop my loop.

644
00:38:21.040 --> 00:38:24.064
Then simply break.

645
00:38:24.064 --> 00:38:26.614
Now if I run our core,

646
00:38:26.614 --> 00:38:28.219
you won't get any empty lines,

647
00:38:28.219 --> 00:38:33.455
as you previously see that it is collecting.

648
00:38:33.455 --> 00:38:39.424
So once it is done, omen something wrong.

649
00:38:39.424 --> 00:38:46.490
What I did. Ok, spelling mistake, number of way.

650
00:38:46.490 --> 00:38:50.869
The Russians are a number of questions we are, yes.

651
00:38:50.869 --> 00:38:52.025
Fine.

652
00:38:52.025 --> 00:38:56.914
And one more thing, let me write some echo command here so that you can understand.

653
00:38:56.914 --> 00:39:03.029
Echo. Please wait.

654
00:39:03.460 --> 00:39:08.375
Collecting all can get to our sense from

655
00:39:08.375 --> 00:39:16.190
official website often get or get SCM or something like that.

656
00:39:16.190 --> 00:39:17.330
Right?

657
00:39:17.330 --> 00:39:26.195
Now. See that? Oh, we are repeating this for multiple times right now bellow.

658
00:39:26.195 --> 00:39:28.309
I will make it as outside of your while loop.

659
00:39:28.309 --> 00:39:32.459
See now you're not getting any empty lines of displaying audio or values.

660
00:39:33.670 --> 00:39:39.019
Right? Now what I want to do

661
00:39:39.019 --> 00:39:44.914
is instead of writing this line here,

662
00:39:44.914 --> 00:39:46.864
yes, right before your while loop,

663
00:39:46.864 --> 00:39:49.415
so that it will be revealed only one time.

664
00:39:49.415 --> 00:39:50.779
So because of while loop,

665
00:39:50.779 --> 00:39:53.270
you'll get collecting all your questions.

666
00:39:53.270 --> 00:39:56.330
That's fine. Okay?

667
00:39:56.330 --> 00:39:59.450
Nowadays, whatever the way you are

668
00:39:59.450 --> 00:40:02.284
displaying your good to wash hands on your command line.

669
00:40:02.284 --> 00:40:05.059
It is not in the proper order, right?

670
00:40:05.059 --> 00:40:06.919
We just use print command,

671
00:40:06.919 --> 00:40:11.045
print f command so that you can make it as clear output, right?

672
00:40:11.045 --> 00:40:12.964
So for that what I'm dignities,

673
00:40:12.964 --> 00:40:14.705
Let me do one thing.

674
00:40:14.705 --> 00:40:19.879
I want to print each and every version of width,

675
00:40:19.879 --> 00:40:24.499
width of suppose 20 spaces in country spaces,

676
00:40:24.499 --> 00:40:27.709
I want to display my bit, my Watson.

677
00:40:27.709 --> 00:40:30.740
Now instead of this echo command,

678
00:40:30.740 --> 00:40:33.270
let me do one thing.

679
00:40:34.930 --> 00:40:37.924
To understand this about print def,

680
00:40:37.924 --> 00:40:42.889
you just to go through our complete print f command information already.

681
00:40:42.889 --> 00:40:45.394
We have done that somewhere, right?

682
00:40:45.394 --> 00:40:51.020
I mean, we have a separate lecture for that section for

683
00:40:51.020 --> 00:40:56.809
that it just to go through that so that you can understand about this.

684
00:40:56.809 --> 00:41:00.305
So I want to print three versions, right?

685
00:41:00.305 --> 00:41:04.140
So that's why I want to repeat same thing for three times.

686
00:41:06.280 --> 00:41:09.050
So here's star hyphen.

687
00:41:09.050 --> 00:41:12.980
Star means to print the width, the size.

688
00:41:12.980 --> 00:41:16.619
Then hyphen means from left to right.

689
00:41:16.900 --> 00:41:23.269
Okay? Now, first is we'd,

690
00:41:23.269 --> 00:41:25.800
let me print to it first.

691
00:41:27.160 --> 00:41:37.740
And then second thing is then again, you are width.

692
00:41:40.090 --> 00:41:44.675
Then now your second value.

693
00:41:44.675 --> 00:41:53.100
Then width, then thought vacuum.

694
00:41:53.190 --> 00:41:54.655
Right?

695
00:41:54.655 --> 00:41:59.484
But after printing your h And every three lines of,

696
00:41:59.484 --> 00:42:02.620
I mean, three versions, you need to print the next information next lane.

697
00:42:02.620 --> 00:42:06.489
That's why I'm adding slash and because by default print f command,

698
00:42:06.489 --> 00:42:08.829
owned go to next line.

699
00:42:08.829 --> 00:42:11.814
Now let me check it and see the final output.

700
00:42:11.814 --> 00:42:13.720
I hope it has to work.

701
00:42:13.720 --> 00:42:19.610
So please wait, collecting all get abortions from official website of good SEM.

702
00:42:20.610 --> 00:42:23.334
See that now the somewhat clear No,

703
00:42:23.334 --> 00:42:25.539
I displayed information clearly.

704
00:42:25.539 --> 00:42:30.190
So as of now still you are not able to get your information your single page.

705
00:42:30.190 --> 00:42:31.494
Just try to do one thing.

706
00:42:31.494 --> 00:42:33.670
You just tried to display all the informations.

707
00:42:33.670 --> 00:42:35.939
I mean, well, displaying your information,

708
00:42:35.939 --> 00:42:39.725
tried to display five versions

709
00:42:39.725 --> 00:42:41.479
in each and every line so that you are entering

710
00:42:41.479 --> 00:42:43.204
information will be there in a single page.

711
00:42:43.204 --> 00:42:46.489
You just find that. Ok. So guys,

712
00:42:46.489 --> 00:42:49.340
if you observe this script, right,

713
00:42:49.340 --> 00:42:54.049
what we discuss here,

714
00:42:54.049 --> 00:42:58.760
see we discuss some uses of the obligate command to download official,

715
00:42:58.760 --> 00:43:01.010
I mean, some website information,

716
00:43:01.010 --> 00:43:03.694
to download some page information.

717
00:43:03.694 --> 00:43:08.045
And then we use somewhere sed command, right, where is it?

718
00:43:08.045 --> 00:43:10.954
Sed command, then uses of cut command somewhere,

719
00:43:10.954 --> 00:43:12.440
and then AWPA command.

720
00:43:12.440 --> 00:43:14.915
And finally we use arrays.

721
00:43:14.915 --> 00:43:19.419
We added information to our array, right?

722
00:43:19.419 --> 00:43:25.270
And then we also use print f command that to two required format to output,

723
00:43:25.270 --> 00:43:29.245
to print our output in the required format, right?

724
00:43:29.245 --> 00:43:31.974
So if you go through this subscript,

725
00:43:31.974 --> 00:43:34.089
right, you'll get some concepts,

726
00:43:34.089 --> 00:43:35.544
like you are said,

727
00:43:35.544 --> 00:43:38.725
cut a WK, And finally arrays.

728
00:43:38.725 --> 00:43:39.609
Ok.

729
00:43:39.609 --> 00:43:44.050
So just go through this video at least 23 times so that you will

730
00:43:44.050 --> 00:43:48.385
get some clear cut idea about these concepts.

731
00:43:48.385 --> 00:43:52.129
Okay? Okay guys, thank you for watching this video.

