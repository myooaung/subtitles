WEBVTT
ï»¿1
00:00:00.440 --> 00:00:05.910
Friends here our concept is redirection operator and standard input,

2
00:00:05.910 --> 00:00:09.270
standard output and standard error. Let me explain that.

3
00:00:09.270 --> 00:00:11.985
See, our Linux commands need some input.

4
00:00:11.985 --> 00:00:13.800
That input maybe a file or any

5
00:00:13.800 --> 00:00:17.580
another party vote based on which command you are executing on what Tamil.

6
00:00:17.580 --> 00:00:18.690
And once it is executed,

7
00:00:18.690 --> 00:00:20.595
it will produce some output as well.

8
00:00:20.595 --> 00:00:24.075
By default, input is being given with the keyboard.

9
00:00:24.075 --> 00:00:26.460
And keyboard is called standard input device.

10
00:00:26.460 --> 00:00:29.460
And whatever the command you are executing on your tunnel,

11
00:00:29.460 --> 00:00:32.550
that may produce success output or maybe an error also.

12
00:00:32.550 --> 00:00:35.010
So whether it is a success output or another,

13
00:00:35.010 --> 00:00:37.260
both will display on your screen itself.

14
00:00:37.260 --> 00:00:38.790
I mean on your Tamil itself.

15
00:00:38.790 --> 00:00:41.770
Let me explain with a simple example.

16
00:00:41.770 --> 00:00:48.200
Suppose I am trying to list a file C,

17
00:00:48.200 --> 00:00:51.560
there is a, you are able to see the information about that file,

18
00:00:51.560 --> 00:00:55.340
like permissions, user group when it was created.

19
00:00:55.340 --> 00:00:56.330
Right?

20
00:00:56.330 --> 00:01:00.750
Now, the same file I'm trying to read.

21
00:01:01.450 --> 00:01:05.540
But see that you are not able to see the contents of that file.

22
00:01:05.540 --> 00:01:08.225
Instead of that it is displaying permission denied.

23
00:01:08.225 --> 00:01:09.470
Actually it was fail.

24
00:01:09.470 --> 00:01:10.835
It is giving an error.

25
00:01:10.835 --> 00:01:14.660
If you observe here, there are no permissions to read other here.

26
00:01:14.660 --> 00:01:17.165
Thus the reason you are getting an error, that's fine.

27
00:01:17.165 --> 00:01:20.555
So whether you are getting a success output or an error,

28
00:01:20.555 --> 00:01:22.985
both are displaying on your screen itself.

29
00:01:22.985 --> 00:01:26.660
But sometimes you may want to redirect.

30
00:01:26.660 --> 00:01:30.035
You may want to store the output into a file,

31
00:01:30.035 --> 00:01:32.270
in short, displaying on your command line.

32
00:01:32.270 --> 00:01:37.145
Or sometimes you may want to run one more comment on the present output.

33
00:01:37.145 --> 00:01:42.740
Or sometimes you may want to provide the input as a file for your command.

34
00:01:42.740 --> 00:01:46.340
So these are nothing but redirection operations.

35
00:01:46.340 --> 00:01:50.914
So based on whether input redirection or output interaction,

36
00:01:50.914 --> 00:01:53.045
we have different types of operators.

37
00:01:53.045 --> 00:01:55.520
They are output redirection operator,

38
00:01:55.520 --> 00:01:59.884
input redirection operators, and combining redirections operators.

39
00:01:59.884 --> 00:02:01.475
Let me go with one by one.

40
00:02:01.475 --> 00:02:02.990
The very first one is

41
00:02:02.990 --> 00:02:08.480
output redirection operator that we held greater than symbol as the first operator.

42
00:02:08.480 --> 00:02:10.595
That is just to create a new file,

43
00:02:10.595 --> 00:02:12.425
I think is that it's very simple.

44
00:02:12.425 --> 00:02:14.690
Suppose as of now we are running a command and

45
00:02:14.690 --> 00:02:16.670
it is displaying your output on your command line.

46
00:02:16.670 --> 00:02:19.070
But I don't want to display my output on the command line.

47
00:02:19.070 --> 00:02:21.440
Instead of that, I wanted to create a file,

48
00:02:21.440 --> 00:02:25.325
or I want to store this or put into your file and then just use greater than symbol.

49
00:02:25.325 --> 00:02:29.195
Suppose I'm creating them 0.2x.

50
00:02:29.195 --> 00:02:32.870
Now see that isn't your content is not displaying,

51
00:02:32.870 --> 00:02:35.270
your command output is not displaying on your screen.

52
00:02:35.270 --> 00:02:39.095
Instead of that, it is storing in a file called demo 2.txt.

53
00:02:39.095 --> 00:02:40.280
That's it.

54
00:02:40.280 --> 00:02:47.745
Now let me run one more command and I want to redirect that output also into data.txt.

55
00:02:47.745 --> 00:02:51.835
And see that is what is there in your file.

56
00:02:51.835 --> 00:02:54.235
Your previous content Guan.

57
00:02:54.235 --> 00:02:57.010
Now the latest output is there in this fine.

58
00:02:57.010 --> 00:03:00.445
The reason is if you use this greater than symbol,

59
00:03:00.445 --> 00:03:02.395
if this file is already there,

60
00:03:02.395 --> 00:03:06.010
then the content will be truncated under the new output will

61
00:03:06.010 --> 00:03:09.610
be stored into that file in case if it is not there, no problem.

62
00:03:09.610 --> 00:03:12.265
Afresh file will be created on into that your result,

63
00:03:12.265 --> 00:03:14.050
your output will store.

64
00:03:14.050 --> 00:03:18.550
But if you want to keep your wold content as it is,

65
00:03:18.550 --> 00:03:20.020
and if you want to add,

66
00:03:20.020 --> 00:03:22.210
append a new content to your file,

67
00:03:22.210 --> 00:03:25.750
then you have to use 44 greater than its very simple.

68
00:03:25.750 --> 00:03:28.030
Now let me, as of now,

69
00:03:28.030 --> 00:03:29.665
your content is this one right?

70
00:03:29.665 --> 00:03:30.840
Now.

71
00:03:30.840 --> 00:03:36.755
I'm running with four foregrounded that. So what will happen?

72
00:03:36.755 --> 00:03:39.785
This content will be there as these at the end,

73
00:03:39.785 --> 00:03:45.290
the new content will be appended to your file and I'll see you at the end,

74
00:03:45.290 --> 00:03:46.925
the hub and new content that should.

75
00:03:46.925 --> 00:03:49.205
Likewise, you can then any number of times.

76
00:03:49.205 --> 00:03:51.900
Say suppose I'm rerunning

77
00:03:51.970 --> 00:03:55.070
this command with four foreground of them so

78
00:03:55.070 --> 00:03:57.710
that you were world contained will be there as it is on.

79
00:03:57.710 --> 00:03:59.255
New content will be appended.

80
00:03:59.255 --> 00:03:59.855
Sealer.

81
00:03:59.855 --> 00:04:01.970
Just know we appended this content.

82
00:04:01.970 --> 00:04:03.200
That's it.

83
00:04:03.200 --> 00:04:07.490
Now next one is input redirection operator.

84
00:04:07.490 --> 00:04:13.280
So you simply less than just to provide the input for you or come in anyway by default,

85
00:04:13.280 --> 00:04:17.825
what our, the information you are providing on your terminal, that is the input only.

86
00:04:17.825 --> 00:04:20.870
But you can also mention with the less than symbol.

87
00:04:20.870 --> 00:04:24.800
Suppose I'm doing CAT less than them, 0.2x team.

88
00:04:24.800 --> 00:04:25.895
That's it.

89
00:04:25.895 --> 00:04:29.015
So as if not, don't worry about this less than symbol,

90
00:04:29.015 --> 00:04:32.240
we will discuss in detail in our further sections.

91
00:04:32.240 --> 00:04:33.650
That's fine.

92
00:04:33.650 --> 00:04:36.650
Now, combining redirection operator,

93
00:04:36.650 --> 00:04:39.620
it is nothing but if you want to send

94
00:04:39.620 --> 00:04:45.140
the current standard output of one command to another command as standard input,

95
00:04:45.140 --> 00:04:47.450
then you how to use this pipeline symbol.

96
00:04:47.450 --> 00:04:52.250
Just observe that suppose I'm running unless siphon LRT.

97
00:04:52.250 --> 00:04:55.850
So for this command, this is the output.

98
00:04:55.850 --> 00:05:03.320
But in this output, suppose I want to get only user names,

99
00:05:03.320 --> 00:05:06.875
only permissions I want to get first to field, I want to get,

100
00:05:06.875 --> 00:05:10.460
that means this command output is this one.

101
00:05:10.460 --> 00:05:13.910
This output I want to send as an input for second command,

102
00:05:13.910 --> 00:05:18.320
c width pipeline with AWPA comments.

103
00:05:18.320 --> 00:05:22.535
Suppose I am running printed $1.1 so that you are going to get only Foster Field.

104
00:05:22.535 --> 00:05:24.560
So how it is running,

105
00:05:24.560 --> 00:05:29.285
simply, it is providing So it is producing some output.

106
00:05:29.285 --> 00:05:31.550
And with the help of pipelines in ML,

107
00:05:31.550 --> 00:05:36.920
this command will treat this command output as a input for your AWPA command.

108
00:05:36.920 --> 00:05:38.000
That's a.

109
00:05:38.000 --> 00:05:43.265
Likewise, you can combine any number of commands.

110
00:05:43.265 --> 00:05:48.515
Suppose here I am combining suppose with grep,

111
00:05:48.515 --> 00:05:54.650
D, then C, that isn't in this output in which land we,

112
00:05:54.650 --> 00:05:56.195
How did that line is this plane.

113
00:05:56.195 --> 00:05:59.120
That means first it is producing this command,

114
00:05:59.120 --> 00:06:02.585
producing the output that is giving us an input for AWPA command.

115
00:06:02.585 --> 00:06:07.370
And this final result is providing as input for this grep command. That's it.

116
00:06:07.370 --> 00:06:08.990
That's fine.

117
00:06:08.990 --> 00:06:12.465
Now, I have a small requirement.

118
00:06:12.465 --> 00:06:17.710
Stored the Java version into your file using redirection operators.

119
00:06:17.710 --> 00:06:21.580
First, let me do the command to find Java version C.

120
00:06:21.580 --> 00:06:22.300
That is a.

121
00:06:22.300 --> 00:06:29.275
Yes, no, I'm redirecting that output into a file called Java Washington dot TXT.

122
00:06:29.275 --> 00:06:32.350
But you output is not redirecting into that file.

123
00:06:32.350 --> 00:06:35.680
It is still displaying on your command line itself.

124
00:06:35.680 --> 00:06:38.890
The reason is for some commands,

125
00:06:38.890 --> 00:06:42.790
the output we be produced in airplane.

126
00:06:42.790 --> 00:06:47.020
Then how to handle it? If it is success output,

127
00:06:47.020 --> 00:06:51.055
then we are redirecting into some file with help of greater than symbol.

128
00:06:51.055 --> 00:06:55.545
So our problem is how to separate standard output and standard error.

129
00:06:55.545 --> 00:06:58.820
Simply with the help of file descriptors,

130
00:06:58.820 --> 00:07:04.640
file descriptors or Indian numbers just to identify what a standard input,

131
00:07:04.640 --> 00:07:06.605
standard output and standard error.

132
00:07:06.605 --> 00:07:08.735
So E's for standard input.

133
00:07:08.735 --> 00:07:12.320
One is first 100 output and two 0s for standard error.

134
00:07:12.320 --> 00:07:14.375
So here I'm not touching.

135
00:07:14.375 --> 00:07:19.190
That is standard input will discuss aboard in our further sessions.

136
00:07:19.190 --> 00:07:21.110
Now as of now I'm working with 12,

137
00:07:21.110 --> 00:07:22.940
I mean, output and edit.

138
00:07:22.940 --> 00:07:26.270
First thing first, let me explain with a simple command.

139
00:07:26.270 --> 00:07:27.500
Suppose if I read a less,

140
00:07:27.500 --> 00:07:30.170
greater than demo dot TXT,

141
00:07:30.170 --> 00:07:36.140
your output is storing in a file called demo dot dx d. Not only that,

142
00:07:36.140 --> 00:07:42.425
even I can mention one greater than it is storing your result into data.txt.

143
00:07:42.425 --> 00:07:45.890
So by default, whether you are going to do greater than R one greater

144
00:07:45.890 --> 00:07:52.760
than the meaningful daddy's store successor result into that file.

145
00:07:52.760 --> 00:07:55.370
Now, instead of one,

146
00:07:55.370 --> 00:08:02.270
suppose if I do to the meaning for the store only the edit outputting to demo 2.txt.

147
00:08:02.270 --> 00:08:03.950
Suppose if I get any success,

148
00:08:03.950 --> 00:08:06.905
don't store, simply display any word.

149
00:08:06.905 --> 00:08:10.475
Default, a place that is your terminal. You will see that is it.

150
00:08:10.475 --> 00:08:13.550
Unless greater than demo dot dx t,

151
00:08:13.550 --> 00:08:14.930
two greater than means,

152
00:08:14.930 --> 00:08:16.985
if you are command use any air,

153
00:08:16.985 --> 00:08:20.345
then only stored that error into demo 2.txt.

154
00:08:20.345 --> 00:08:26.540
Right? Now what I wanted to eat unless one greater than then

155
00:08:26.540 --> 00:08:33.500
1.2x or let me take a success LaTeX and two greater than error dot TXT.

156
00:08:33.500 --> 00:08:36.845
Now my intention is if ls command you success,

157
00:08:36.845 --> 00:08:38.900
then store into success dot TXT.

158
00:08:38.900 --> 00:08:40.295
If it gives any errors,

159
00:08:40.295 --> 00:08:43.055
store into two, eta dot dx, dy, fine.

160
00:08:43.055 --> 00:08:45.350
Now see that isn't first,

161
00:08:45.350 --> 00:08:46.565
see the success dot TXT.

162
00:08:46.565 --> 00:08:48.305
Yes, content is there in this file.

163
00:08:48.305 --> 00:08:49.850
But era dot TXT,

164
00:08:49.850 --> 00:08:53.870
There is no content because we know that unless Definitely will do success.

165
00:08:53.870 --> 00:08:55.415
The current location.

166
00:08:55.415 --> 00:08:58.670
That's why that success outputs stored in soccer's not dxdy.

167
00:08:58.670 --> 00:09:01.100
Now I am giving some invalid command,

168
00:09:01.100 --> 00:09:02.840
then definitely will produce an error.

169
00:09:02.840 --> 00:09:06.215
But on command line for editor and success places same.

170
00:09:06.215 --> 00:09:07.850
I mean you are a 10-minute itself.

171
00:09:07.850 --> 00:09:11.165
Now what I am doing is if this command group success,

172
00:09:11.165 --> 00:09:14.090
then store into success dot TXT file.

173
00:09:14.090 --> 00:09:18.630
And if we use an error store into error 2.txt file.

174
00:09:19.090 --> 00:09:21.635
Now CSAC test.txt.

175
00:09:21.635 --> 00:09:23.510
We know that some random command,

176
00:09:23.510 --> 00:09:25.250
a ISAF, but that is not a valid command.

177
00:09:25.250 --> 00:09:26.735
Definitely it will produce an error.

178
00:09:26.735 --> 00:09:29.360
That's why there would be no content in success,

179
00:09:29.360 --> 00:09:33.365
not dxdy, but that error is stored in now in ADA dot dx dy.

180
00:09:33.365 --> 00:09:36.155
That's the same way.

181
00:09:36.155 --> 00:09:38.990
Even though you've command is valid one,

182
00:09:38.990 --> 00:09:42.740
some commands will produce their output in the editor plays.

183
00:09:42.740 --> 00:09:45.950
In that case, if you want to store that result into,

184
00:09:45.950 --> 00:09:47.135
you are required to file,

185
00:09:47.135 --> 00:09:49.265
then you need to use file descriptors.

186
00:09:49.265 --> 00:09:55.445
Suppose I am using one greater than Jiao Shen dot TXT.

187
00:09:55.445 --> 00:09:59.780
We know that this will never story will result into jail washington dxdy,

188
00:09:59.780 --> 00:10:03.410
The reason is dow iPhone washing command giving output in the Arab place,

189
00:10:03.410 --> 00:10:08.970
but I want to store it and then used to Nazi that result, sorry.

190
00:10:09.250 --> 00:10:14.790
Not 21, simply to now see the result.

191
00:10:19.000 --> 00:10:22.685
Let's say, right.

192
00:10:22.685 --> 00:10:26.675
Suppose, if you have any confusion for some commands,

193
00:10:26.675 --> 00:10:28.850
whether it is a bird is going to give success,

194
00:10:28.850 --> 00:10:37.025
output or error, then simply what you had to do is Java's space hyphen what Shen,

195
00:10:37.025 --> 00:10:40.805
suppose, I wonder redirect one into this file.

196
00:10:40.805 --> 00:10:44.315
Java was sha1 dot TXT.

197
00:10:44.315 --> 00:10:52.100
Two also, you can do it in the same file so that you are success and error.

198
00:10:52.100 --> 00:10:58.770
What will store into this file? Now see the content.

199
00:11:00.400 --> 00:11:02.255
Fine.

200
00:11:02.255 --> 00:11:04.775
Now, instead of giving in this way,

201
00:11:04.775 --> 00:11:06.665
I mean one into this file,

202
00:11:06.665 --> 00:11:09.650
I mean success output into that file and there also into this file.

203
00:11:09.650 --> 00:11:12.350
That means whenever if you have a same file, I mean,

204
00:11:12.350 --> 00:11:15.170
if you want to store whether success,

205
00:11:15.170 --> 00:11:17.690
output or error in the same file,

206
00:11:17.690 --> 00:11:20.210
in that case, you don't need to write this syntax.

207
00:11:20.210 --> 00:11:25.310
You can also do a shortcut that is Java hyphen y.

208
00:11:25.310 --> 00:11:27.590
One greater than into.

209
00:11:27.590 --> 00:11:32.750
Suppose this file to greater than,

210
00:11:32.750 --> 00:11:34.070
I'm assigned to one.

211
00:11:34.070 --> 00:11:36.230
So that the meaning here is,

212
00:11:36.230 --> 00:11:38.165
please store my error also,

213
00:11:38.165 --> 00:11:41.195
where one is storing, where one is stirring.

214
00:11:41.195 --> 00:11:43.185
I mean success output in this file.

215
00:11:43.185 --> 00:11:46.105
So error also storing into that file.

216
00:11:46.105 --> 00:11:49.870
Or you can also write one more shortcut,

217
00:11:49.870 --> 00:11:52.720
simply java hyphen portion,

218
00:11:52.720 --> 00:12:03.520
error and success output store into this fight Nazi.

219
00:12:03.520 --> 00:12:11.050
Now see that if you are getting confusion with this syntax,

220
00:12:11.050 --> 00:12:12.565
let me create a new file.

221
00:12:12.565 --> 00:12:15.340
I'm creating new Java dot TXT.

222
00:12:15.340 --> 00:12:19.120
No, see that is a content, is there.

223
00:12:19.120 --> 00:12:20.755
So friends.

224
00:12:20.755 --> 00:12:23.830
If you want to redirect your successful putting PDF file,

225
00:12:23.830 --> 00:12:26.160
you can use only greater than,

226
00:12:26.160 --> 00:12:32.765
like a less greater than some new text dot TXT.

227
00:12:32.765 --> 00:12:35.840
Or it can also do one greater than because

228
00:12:35.840 --> 00:12:39.620
by default the greater than symbol we'll consider success output.

229
00:12:39.620 --> 00:12:43.055
And if you want to capture that output, you have to take two.

230
00:12:43.055 --> 00:12:45.950
And if you want to store success or put into one file,

231
00:12:45.950 --> 00:12:50.280
then take one greater than into some you are required to file.

232
00:12:51.190 --> 00:12:56.765
Then error into some error phi.

233
00:12:56.765 --> 00:12:58.970
Nothing.

234
00:12:58.970 --> 00:13:03.080
But if you want to redirect both the outputs,

235
00:13:03.080 --> 00:13:04.430
I mean success all put an arrow,

236
00:13:04.430 --> 00:13:05.735
put into a single file,

237
00:13:05.735 --> 00:13:09.265
then you can use directly first to file

238
00:13:09.265 --> 00:13:12.895
I'm in success output one greater than new test.txt.

239
00:13:12.895 --> 00:13:15.175
Then second means I'm in two minutes era,

240
00:13:15.175 --> 00:13:19.630
era also data redirect into such output place.

241
00:13:19.630 --> 00:13:25.810
Instead of this. You can also directly write shortcut.

242
00:13:25.810 --> 00:13:33.205
I Am percent greater than my file and suppose I am giving different file.

243
00:13:33.205 --> 00:13:34.720
Just to see that.

244
00:13:34.720 --> 00:13:36.580
Let's see the result.

245
00:13:36.580 --> 00:13:39.115
Now check. Ok.

246
00:13:39.115 --> 00:13:42.790
So please be clear with one greater than to,

247
00:13:42.790 --> 00:13:45.025
greater than and one greater than.

248
00:13:45.025 --> 00:13:46.390
Let me write that lines.

249
00:13:46.390 --> 00:13:48.530
They are very important.

250
00:13:50.280 --> 00:13:55.970
Defaults to success, output.

251
00:13:59.880 --> 00:14:07.105
Success, or I'm anyhow deployed some filename here,

252
00:14:07.105 --> 00:14:16.540
let's say some filename, some filename.

253
00:14:16.540 --> 00:14:18.715
That filename is your wish.

254
00:14:18.715 --> 00:14:20.920
And an output.

255
00:14:20.920 --> 00:14:23.215
One greater than.

256
00:14:23.215 --> 00:14:25.780
Suppose I'm reading some filename,

257
00:14:25.780 --> 00:14:28.855
then two greater than ampersand one.

258
00:14:28.855 --> 00:14:36.815
So here we'll, or in single file,

259
00:14:36.815 --> 00:14:39.830
it may be successful put out output will store into a single file.

260
00:14:39.830 --> 00:14:41.060
Now for this shortcut,

261
00:14:41.060 --> 00:14:44.735
you can also write here one more thing you should have this,

262
00:14:44.735 --> 00:14:49.580
I can also write in this way, filename, same filename.

263
00:14:49.580 --> 00:14:52.850
Or for this shortcut is filename.

264
00:14:52.850 --> 00:14:57.295
Your success or put into this and output where you are success,

265
00:14:57.295 --> 00:15:02.105
output is storing or directly you can write shortcut in this way.

266
00:15:02.105 --> 00:15:07.010
So loss of three syntaxes or to say,

267
00:15:07.010 --> 00:15:12.785
you're sorry to store your success output and that output Indian single file,

268
00:15:12.785 --> 00:15:16.560
that's a Vergennes. Thank you.

