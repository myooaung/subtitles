WEBVTT
ï»¿1
00:00:00.740 --> 00:00:06.255
And here we are going to discuss your sed command with the bigots and

2
00:00:06.255 --> 00:00:12.000
that gigs or regular expression I'm going to create with the help of special characters.

3
00:00:12.000 --> 00:00:14.805
You know, what is the Regex or regular expression?

4
00:00:14.805 --> 00:00:17.985
If any expression is using a pattern,

5
00:00:17.985 --> 00:00:20.865
then that expression is called regular expression.

6
00:00:20.865 --> 00:00:24.985
Let me explain you that once again with a small example.

7
00:00:24.985 --> 00:00:28.190
Suppose I'm having a file called this one,

8
00:00:28.190 --> 00:00:31.295
and I want to print out the lines which are having,

9
00:00:31.295 --> 00:00:38.870
let's say, you know how to print a line which are having particular word, right?

10
00:00:38.870 --> 00:00:40.940
I want to print this line.

11
00:00:40.940 --> 00:00:44.375
I want to print to the line which are having put word from your file.

12
00:00:44.375 --> 00:00:46.595
Yes, you're getting something.

13
00:00:46.595 --> 00:00:53.375
Now, I want to write one thing here,

14
00:00:53.375 --> 00:00:57.305
such that I want to print the lines which are having put on port.

15
00:00:57.305 --> 00:01:05.130
Then see what I'm doing. Now, see the output.

16
00:01:07.780 --> 00:01:14.210
All right, I'm getting the lines which consists of potent port.

17
00:01:14.210 --> 00:01:18.710
But I'm writing something that is going to show you that is going to

18
00:01:18.710 --> 00:01:23.285
represent towards one is beauty and one more is pivoting.

19
00:01:23.285 --> 00:01:28.625
So this is called a patron because this pattern is going to represent multiple words.

20
00:01:28.625 --> 00:01:30.350
If any expression is going to,

21
00:01:30.350 --> 00:01:34.955
if any given pattern is going to represent multiple words, right?

22
00:01:34.955 --> 00:01:38.000
And if you use that pattern in your expression,

23
00:01:38.000 --> 00:01:40.740
then that is called regular expression.

24
00:01:41.110 --> 00:01:42.620
Right?

25
00:01:42.620 --> 00:01:43.355
Fine.

26
00:01:43.355 --> 00:01:44.780
Now we are going to create

27
00:01:44.780 --> 00:01:49.400
this regular expressions with the help of this special characters.

28
00:01:49.400 --> 00:01:51.815
We have some other special characters as well.

29
00:01:51.815 --> 00:01:53.225
We will see them in later videos.

30
00:01:53.225 --> 00:01:56.960
As of now, I am going to take this set of special characters to create

31
00:01:56.960 --> 00:02:02.705
your regular expression or to create your pattern and using your projects, right?

32
00:02:02.705 --> 00:02:04.370
Let me go with one by one.

33
00:02:04.370 --> 00:02:07.745
The very first one is space slash.

34
00:02:07.745 --> 00:02:08.300
Yes.

35
00:02:08.300 --> 00:02:10.880
So slash yes means matches for space.

36
00:02:10.880 --> 00:02:11.975
See that?

37
00:02:11.975 --> 00:02:15.155
So first of all, this is your file.

38
00:02:15.155 --> 00:02:17.120
I want to print the,

39
00:02:17.120 --> 00:02:21.635
the lines which are having space.

40
00:02:21.635 --> 00:02:24.905
So space is represented with thick character called slash.

41
00:02:24.905 --> 00:02:31.700
Yes, I see that you're getting the lines which are having space.

42
00:02:31.700 --> 00:02:33.425
So these lines having space,

43
00:02:33.425 --> 00:02:35.990
there is no space from here to here, these lines,

44
00:02:35.990 --> 00:02:38.585
so that way you're not getting that lines, right.

45
00:02:38.585 --> 00:02:42.440
So you are getting a lines which are having a space.

46
00:02:42.440 --> 00:02:44.435
Fine.

47
00:02:44.435 --> 00:02:53.615
Now my intention is I want to print the line which are having only slash is itself.

48
00:02:53.615 --> 00:02:59.240
That means I want to match his last years with this last S only the basic meaning Force.

49
00:02:59.240 --> 00:03:01.895
Last year's means space.

50
00:03:01.895 --> 00:03:04.504
Now I don't want to look for space.

51
00:03:04.504 --> 00:03:07.280
I want to match his class yes. With the slash? Yes.

52
00:03:07.280 --> 00:03:10.910
Only if you have got somewhere I'm having slashed.

53
00:03:10.910 --> 00:03:14.540
Yes. That means if I look with the slash yes,

54
00:03:14.540 --> 00:03:18.110
then how to print only this line, right?

55
00:03:18.110 --> 00:03:25.055
So at that time you have to eliminate the special character purpose with the slash.

56
00:03:25.055 --> 00:03:26.959
So for any special character,

57
00:03:26.959 --> 00:03:29.840
if you write the slash, then the purpose will be removed.

58
00:03:29.840 --> 00:03:31.550
Actually does slash yes.

59
00:03:31.550 --> 00:03:34.550
Purposes space, no space purposes removed.

60
00:03:34.550 --> 00:03:36.020
Now you are looking first, last,

61
00:03:36.020 --> 00:03:37.595
yes, only now see the output.

62
00:03:37.595 --> 00:03:40.010
We are getting the line which is having slashes.

63
00:03:40.010 --> 00:03:42.365
So like ways not only for your slashes,

64
00:03:42.365 --> 00:03:44.060
for any special character,

65
00:03:44.060 --> 00:03:47.060
if you want to remove the special purpose of your character,

66
00:03:47.060 --> 00:03:52.415
you can add one slash and slash is called escape character,

67
00:03:52.415 --> 00:03:56.675
removing special-purpose off your special character, right?

68
00:03:56.675 --> 00:04:01.640
Find Next one is slash p. Slash t means nothing is there.

69
00:04:01.640 --> 00:04:04.460
Printed the lines which are having Tab space.

70
00:04:04.460 --> 00:04:06.150
So you output.

71
00:04:06.550 --> 00:04:08.300
Right?

72
00:04:08.300 --> 00:04:10.610
And if you observe guys,

73
00:04:10.610 --> 00:04:13.775
we even while searching with the slash Yes,

74
00:04:13.775 --> 00:04:15.170
you are getting this line.

75
00:04:15.170 --> 00:04:16.640
And while searching with the tab,

76
00:04:16.640 --> 00:04:19.085
we are getting this line, right?

77
00:04:19.085 --> 00:04:22.235
So tab is also space NOW, right?

78
00:04:22.235 --> 00:04:25.190
So slash ESU the subset of T,

79
00:04:25.190 --> 00:04:28.054
but nods last t's subset of slashes,

80
00:04:28.054 --> 00:04:30.380
slash S is the subset of velocity.

81
00:04:30.380 --> 00:04:32.480
That's why you're getting EVA, even while searching with

82
00:04:32.480 --> 00:04:35.450
his last years, they're getting this line.

83
00:04:35.450 --> 00:04:37.520
But only slash demons.

84
00:04:37.520 --> 00:04:39.980
These all are not having tabs based.

85
00:04:39.980 --> 00:04:41.300
That's why I'm not getting those lines.

86
00:04:41.300 --> 00:04:45.395
We are getting only this line because this line is having tabs space.

87
00:04:45.395 --> 00:04:48.500
Then next thing is dot.

88
00:04:48.500 --> 00:04:55.860
Dot matches any character excluding newline c. I will do one thing.

89
00:04:56.500 --> 00:04:59.660
First of all, although your file,

90
00:04:59.660 --> 00:05:06.820
now what I'm doing is said hyphen n printed the lines which are

91
00:05:06.820 --> 00:05:15.025
having PUT normal expression without objects from your file. Yes.

92
00:05:15.025 --> 00:05:17.695
Now what I am doing is between p and p,

93
00:05:17.695 --> 00:05:21.520
i am placing.means between P and T

94
00:05:21.520 --> 00:05:25.630
may be any character printed the lines which are having p,

95
00:05:25.630 --> 00:05:27.580
some character and then p.

96
00:05:27.580 --> 00:05:31.075
So you have some three letter word, right?

97
00:05:31.075 --> 00:05:35.890
Such that P, any character and then T.

98
00:05:35.890 --> 00:05:38.785
Right? Now see the output.

99
00:05:38.785 --> 00:05:42.310
We are getting all the lines which are having p something T,

100
00:05:42.310 --> 00:05:43.960
P something pe, something,

101
00:05:43.960 --> 00:05:46.650
DP something, DP something tea.

102
00:05:46.650 --> 00:05:53.060
Now I want to print the lines exactly p something t,

103
00:05:53.060 --> 00:05:54.530
but that should be a word.

104
00:05:54.530 --> 00:05:56.510
So what means you should have some space?

105
00:05:56.510 --> 00:05:57.260
No.

106
00:05:57.260 --> 00:05:58.370
Right?

107
00:05:58.370 --> 00:05:59.915
You should have some space.

108
00:05:59.915 --> 00:06:03.500
Now I'm including slash yes, C, the output.

109
00:06:03.500 --> 00:06:04.850
Oh sorry.

110
00:06:04.850 --> 00:06:08.345
I included outside of your forward slash.

111
00:06:08.345 --> 00:06:12.035
Actually this is slash yes, C, the output.

112
00:06:12.035 --> 00:06:13.790
Now you're not getting this line.

113
00:06:13.790 --> 00:06:20.160
The reason is you are looking for a word which consists of starting side some space.

114
00:06:22.480 --> 00:06:24.020
Right?

115
00:06:24.020 --> 00:06:26.300
Now let me modify your file and I

116
00:06:26.300 --> 00:06:28.200
will do something.

117
00:06:37.320 --> 00:06:38.470
Now.

118
00:06:38.470 --> 00:06:43.870
First of all, let me print the lines which are having p.me,

119
00:06:43.870 --> 00:06:45.265
any character and then T,

120
00:06:45.265 --> 00:06:47.575
c, the output, how many lines you are getting.

121
00:06:47.575 --> 00:06:51.010
So P something PP something DP something,

122
00:06:51.010 --> 00:06:55.704
DP something V. Now I want to print the lines which are on having,

123
00:06:55.704 --> 00:07:01.680
like your word means before starting your word and after ending your worry,

124
00:07:01.680 --> 00:07:04.285
you should have some space no slash Yes.

125
00:07:04.285 --> 00:07:09.010
Sorry. I forgot Blessing dot p dot p,

126
00:07:09.010 --> 00:07:12.475
p, any character then d, three letters, world.

127
00:07:12.475 --> 00:07:15.340
But starting and ending must be a space.

128
00:07:15.340 --> 00:07:20.575
See that only these two words are having space starting on ending.

129
00:07:20.575 --> 00:07:21.925
Right?

130
00:07:21.925 --> 00:07:23.110
Fine.

131
00:07:23.110 --> 00:07:25.075
Now what about your next character?

132
00:07:25.075 --> 00:07:29.965
That is yet one more thing about these guys.

133
00:07:29.965 --> 00:07:31.600
He house somewhere dot.

134
00:07:31.600 --> 00:07:35.335
Now I want to print it out lines which are having dot.

135
00:07:35.335 --> 00:07:37.645
Suppose you find such in this way,

136
00:07:37.645 --> 00:07:40.735
simply dot c, the output yard you are getting,

137
00:07:40.735 --> 00:07:43.450
you are getting more lanes.me, any character?

138
00:07:43.450 --> 00:07:47.710
No. But my intention is I want to match dot with dot only.

139
00:07:47.710 --> 00:07:50.860
That means the general purpose of your data,

140
00:07:50.860 --> 00:07:53.890
how to remove then only it matches with dot.

141
00:07:53.890 --> 00:07:56.450
So for that, how to use slash.

142
00:07:56.450 --> 00:07:59.270
Now the special purpose of your dot will be removed.

143
00:07:59.270 --> 00:08:02.915
Now you are looking for dot with a dot only.

144
00:08:02.915 --> 00:08:04.190
That's it.

145
00:08:04.190 --> 00:08:06.620
So likewise, for any special character,

146
00:08:06.620 --> 00:08:09.980
if you want to match with exactly with a special character itself,

147
00:08:09.980 --> 00:08:13.925
then you have to use one extra slash for your special characters.

148
00:08:13.925 --> 00:08:15.500
That fine.

149
00:08:15.500 --> 00:08:17.270
Now next thing is star.

150
00:08:17.270 --> 00:08:19.445
So star matches a sequence of

151
00:08:19.445 --> 00:08:25.520
0 or more instances of matches for the preceding that your expression.

152
00:08:25.520 --> 00:08:29.165
Let me explain that with an example so that he can understand.

153
00:08:29.165 --> 00:08:32.375
First of all, this one.

154
00:08:32.375 --> 00:08:37.130
Now what I am doing is I am trying to look, okay,

155
00:08:37.130 --> 00:08:42.575
the lines which are having this from your file, see the output.

156
00:08:42.575 --> 00:08:44.675
We are getting almost all lines.

157
00:08:44.675 --> 00:08:46.910
Right? But this line,

158
00:08:46.910 --> 00:08:50.045
whatever the file, the hedge I yeah.

159
00:08:50.045 --> 00:08:51.740
There is no yes in this line.

160
00:08:51.740 --> 00:08:53.945
That's why you're not getting that line here.

161
00:08:53.945 --> 00:08:57.560
But if I write a star after Yes.

162
00:08:57.560 --> 00:09:00.365
Now for yes, you are applying start not for entire world,

163
00:09:00.365 --> 00:09:03.155
simply out playing for ESL star.

164
00:09:03.155 --> 00:09:04.085
Yes.

165
00:09:04.085 --> 00:09:08.015
Means yes, maybe or maybe present.

166
00:09:08.015 --> 00:09:12.575
I mean, simply Juno times or more than 0 times.

167
00:09:12.575 --> 00:09:17.300
Now, this word, this expression meaning is this pattern meaning

168
00:09:17.300 --> 00:09:25.690
is that word representing simply this star?

169
00:09:25.690 --> 00:09:27.010
We ss star means yes,

170
00:09:27.010 --> 00:09:30.730
maybe Juno time or maybe one time or maybe two times,

171
00:09:30.730 --> 00:09:32.860
or maybe three times or maybe four times,

172
00:09:32.860 --> 00:09:34.870
likewise, up to infinity.

173
00:09:34.870 --> 00:09:36.730
Now you are going to print the,

174
00:09:36.730 --> 00:09:40.780
the lines which are having this type of words. Now.

175
00:09:40.780 --> 00:09:41.770
See that.

176
00:09:41.770 --> 00:09:46.405
Now you are going to get, this sees a line without Yes, Dee, Dee.

177
00:09:46.405 --> 00:09:49.465
But here whenever if you strictly such with this,

178
00:09:49.465 --> 00:09:51.730
you're not getting THE line,

179
00:09:51.730 --> 00:09:55.900
but you are getting NOW THE line because yeses optional.

180
00:09:55.900 --> 00:09:59.750
Yes, maybe 0 times or more than 0 times.

181
00:09:59.850 --> 00:10:01.435
Right?

182
00:10:01.435 --> 00:10:03.820
So that is the meaning of star.

183
00:10:03.820 --> 00:10:11.410
Now let me go with the slash plus exactly what's taught but matches one or more.

184
00:10:11.410 --> 00:10:12.805
So if you write simply stop,

185
00:10:12.805 --> 00:10:17.995
it is looking for c. If I write simply this, yes.

186
00:10:17.995 --> 00:10:20.499
And then slash plus.

187
00:10:20.499 --> 00:10:24.865
So the meaning is yes much to be there at least one time.

188
00:10:24.865 --> 00:10:26.380
Then or two times,

189
00:10:26.380 --> 00:10:28.765
or three times or four times.

190
00:10:28.765 --> 00:10:31.310
Likewise up to infinity.

191
00:10:32.430 --> 00:10:35.620
Exactly a star. But the thing is,

192
00:10:35.620 --> 00:10:40.720
star means that letter may or may not be present.

193
00:10:40.720 --> 00:10:43.570
But a class place means that let us, you'd be there.

194
00:10:43.570 --> 00:10:47.525
That character should be there at least one time or more than once.

195
00:10:47.525 --> 00:10:48.350
That's it.

196
00:10:48.350 --> 00:10:54.815
Now see that if I print with the slash plus,

197
00:10:54.815 --> 00:10:59.525
sorry, yes, then remove, then plus.

198
00:10:59.525 --> 00:11:03.485
Now you are going to get the lines which are having this,

199
00:11:03.485 --> 00:11:06.050
this, this, this, this,

200
00:11:06.050 --> 00:11:09.530
and tss, tss, right? See the output.

201
00:11:09.530 --> 00:11:13.490
At least yes, must be there one time or more than one time.

202
00:11:13.490 --> 00:11:18.230
Also star means 0 or more than 100 or more than 0.

203
00:11:18.230 --> 00:11:20.570
Slash plus means minimum one time,

204
00:11:20.570 --> 00:11:22.770
more than one times.

205
00:11:23.050 --> 00:11:26.720
Then star question mark.

206
00:11:26.720 --> 00:11:30.800
So it is going to match either Juno time or onetime,

207
00:11:30.800 --> 00:11:33.410
either genotype or one time.

208
00:11:33.410 --> 00:11:35.070
See that?

209
00:11:38.650 --> 00:11:45.410
Now you're going to get these DHA also because star slash star means this yes,

210
00:11:45.410 --> 00:11:48.455
may be presented genotype or one time.

211
00:11:48.455 --> 00:11:51.005
Now if you may get confused here it is fine.

212
00:11:51.005 --> 00:11:53.570
Phs, S is one time,

213
00:11:53.570 --> 00:11:55.100
and here S is 0 time.

214
00:11:55.100 --> 00:11:56.870
But what about these things?

215
00:11:56.870 --> 00:12:00.290
You are going to match up to this remaining thing you have.

216
00:12:00.290 --> 00:12:02.240
That's why you are getting entire line.

217
00:12:02.240 --> 00:12:08.345
But if you want to match exactly with the space after this dendrite S,

218
00:12:08.345 --> 00:12:14.080
now see the output, right?

219
00:12:14.080 --> 00:12:17.605
So you are going to match this or PHI,

220
00:12:17.605 --> 00:12:21.310
but after that you should have a space. Right?

221
00:12:21.310 --> 00:12:25.360
That's we're not getting multiple s This right?

222
00:12:25.360 --> 00:12:26.425
Fine.

223
00:12:26.425 --> 00:12:27.610
Then.

224
00:12:27.610 --> 00:12:30.445
Yeah, heard you discuss about the slash symbol, right?

225
00:12:30.445 --> 00:12:35.935
So these are the, some of these special characters which are using regular expressions.

226
00:12:35.935 --> 00:12:38.800
We will see some more regular expressions in the next video.

227
00:12:38.800 --> 00:12:43.630
I'm in some more regular expressions with special characters.

228
00:12:43.630 --> 00:12:44.950
Okay?

229
00:12:44.950 --> 00:12:48.020
Okay guys, thank you for watching this video.

