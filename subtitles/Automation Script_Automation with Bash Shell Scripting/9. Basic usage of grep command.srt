1
00:00:00,920 --> 00:00:04,845
Friends here our concept is grep command.

2
00:00:04,845 --> 00:00:10,530
Grep command is a filter command and it is used to search is string in a given file.

3
00:00:10,530 --> 00:00:11,760
Not only in a file,

4
00:00:11,760 --> 00:00:14,760
you can search in multiple files or maybe in textile.

5
00:00:14,760 --> 00:00:16,275
So we will see that.

6
00:00:16,275 --> 00:00:18,900
Now let me explain with a simple example

7
00:00:18,900 --> 00:00:21,300
so that you will get some idea of how to use grep command.

8
00:00:21,300 --> 00:00:26,235
Suppose I have a file called test.txt.

9
00:00:26,235 --> 00:00:33,930
Now I want to be a string called a bow in this entire file using grep command.

10
00:00:33,930 --> 00:00:35,355
Then you have to use in this way,

11
00:00:35,355 --> 00:00:37,320
you grab that is the command.

12
00:00:37,320 --> 00:00:38,850
Then you are such a string.

13
00:00:38,850 --> 00:00:44,345
What is they were requires string you want to such in a file and this filename.

14
00:00:44,345 --> 00:00:46,250
Now enter.

15
00:00:46,250 --> 00:00:50,855
And if I enter, it is going to display the lines.

16
00:00:50,855 --> 00:00:56,135
It is going to display lines from your file called test.txt,

17
00:00:56,135 --> 00:00:58,205
which are having a bowstring.

18
00:00:58,205 --> 00:01:01,160
See that isn't in this entire lanes are boys,

19
00:01:01,160 --> 00:01:02,315
they're only in one lane.

20
00:01:02,315 --> 00:01:04,715
So that empty line it is displaying.

21
00:01:04,715 --> 00:01:11,045
Now let me search with some thing called lines and see the result.

22
00:01:11,045 --> 00:01:16,775
Now it is displaying two lines in which we how lines screen.

23
00:01:16,775 --> 00:01:18,860
And it is highlighting also.

24
00:01:18,860 --> 00:01:20,780
Now let me such weight.

25
00:01:20,780 --> 00:01:24,740
Narendra, suppose you're not

26
00:01:24,740 --> 00:01:28,475
getting an output because Melinda is not there in a given text file.

27
00:01:28,475 --> 00:01:32,465
And whenever if you are searching a string in a given file,

28
00:01:32,465 --> 00:01:35,165
please use quotations for your suffering.

29
00:01:35,165 --> 00:01:37,055
If you don't use quotations,

30
00:01:37,055 --> 00:01:41,210
sometimes in some situations you will get wrong output.

31
00:01:41,210 --> 00:01:43,775
Let me do the situation.

32
00:01:43,775 --> 00:01:47,060
Suppose, again, let me take this file only.

33
00:01:47,060 --> 00:01:50,300
Now in this file, suppose I am looking for line,

34
00:01:50,300 --> 00:01:52,100
this is my required string.

35
00:01:52,100 --> 00:01:57,005
I want to search string in your file, then grip.

36
00:01:57,005 --> 00:01:58,775
You were required to string.

37
00:01:58,775 --> 00:02:02,810
Then you were filename C, that isn't there.

38
00:02:02,810 --> 00:02:04,865
Getting very first plan as an error.

39
00:02:04,865 --> 00:02:07,235
If no such file or directory,

40
00:02:07,235 --> 00:02:10,595
actually you are Grip command is taking ease as a file.

41
00:02:10,595 --> 00:02:14,810
Only this as he was string and ease test.txt.

42
00:02:14,810 --> 00:02:17,315
Both are taken as a file names.

43
00:02:17,315 --> 00:02:18,995
That's the reason.

44
00:02:18,995 --> 00:02:22,565
Please take quotations for your searching string.

45
00:02:22,565 --> 00:02:25,205
Then it will work perfectly.

46
00:02:25,205 --> 00:02:27,150
Now see there is.

47
00:02:27,490 --> 00:02:33,050
Now, this is the simple way to such a string in one file.

48
00:02:33,050 --> 00:02:35,240
Not only in one file, you can search,

49
00:02:35,240 --> 00:02:38,660
your string are dead time in multiple files also.

50
00:02:38,660 --> 00:02:44,615
Suppose I'm searching for bashes stream in a file called one dot SH.

51
00:02:44,615 --> 00:02:48,590
Yes, it is that I want to look in one more file.

52
00:02:48,590 --> 00:02:51,890
Then immediately provide with the space is brew.sh.

53
00:02:51,890 --> 00:02:55,130
Now see the result in one dot SH bashes there,

54
00:02:55,130 --> 00:02:57,485
in two dot SH bashes there.

55
00:02:57,485 --> 00:03:00,455
So likewise, you can search in any number of files,

56
00:03:00,455 --> 00:03:03,500
just you can provide your files with the spaces.

57
00:03:03,500 --> 00:03:04,970
That's a grip.

58
00:03:04,970 --> 00:03:06,275
It was searching string,

59
00:03:06,275 --> 00:03:08,450
then file names with spaces.

60
00:03:08,450 --> 00:03:10,985
Suppose if you want to suck in

61
00:03:10,985 --> 00:03:15,035
all files which are there in the current location for you are required to string.

62
00:03:15,035 --> 00:03:18,095
Then simply search with the star.

63
00:03:18,095 --> 00:03:21,605
Star means all files in the current location.

64
00:03:21,605 --> 00:03:22,730
That's it.

65
00:03:22,730 --> 00:03:25,220
Anyway, this is a directory name.

66
00:03:25,220 --> 00:03:26,495
That's why you can't such,

67
00:03:26,495 --> 00:03:29,990
you will string in directory name only in the content of your file.

68
00:03:29,990 --> 00:03:32,105
That's the reason you are getting here error.

69
00:03:32,105 --> 00:03:33,155
No problem.

70
00:03:33,155 --> 00:03:38,270
Only in files you can such it is showing you a result.

71
00:03:38,270 --> 00:03:40,085
That's it.

72
00:03:40,085 --> 00:03:42,530
In which files you are having.

73
00:03:42,530 --> 00:03:45,890
You are, but that is a display.

74
00:03:45,890 --> 00:03:47,540
Fine.

75
00:03:47,540 --> 00:03:51,590
Now, let me do the syntax of your Grip command.

76
00:03:51,590 --> 00:03:55,085
Grep, options, string or pattern,

77
00:03:55,085 --> 00:03:56,330
then file or files.

78
00:03:56,330 --> 00:04:04,025
You can search in one file or in multiple files and hear how returns Klingon pattern,

79
00:04:04,025 --> 00:04:05,825
don't worry about pattern,

80
00:04:05,825 --> 00:04:09,290
will discuss in detail about pattern in

81
00:04:09,290 --> 00:04:13,085
advance or uses of Grip command that is in next session.

82
00:04:13,085 --> 00:04:15,755
As of now, just to concentrate on string,

83
00:04:15,755 --> 00:04:18,290
grep, some options, then string,

84
00:04:18,290 --> 00:04:19,955
then file or files.

85
00:04:19,955 --> 00:04:21,710
See not only in a file,

86
00:04:21,710 --> 00:04:24,695
you can also use Grip command directly on a text.

87
00:04:24,695 --> 00:04:28,385
I mean, suppose I'm displaying it texture.

88
00:04:28,385 --> 00:04:34,760
This is a simple Info.

89
00:04:34,760 --> 00:04:36,455
This is a text no.

90
00:04:36,455 --> 00:04:40,505
On this text, I can use Grip command in these wave Pipeline, grep.

91
00:04:40,505 --> 00:04:41,945
What is your searching strings?

92
00:04:41,945 --> 00:04:46,175
Suppose I wanted to search for simple than space.

93
00:04:46,175 --> 00:04:52,220
Just enter C. That is, this is a text.

94
00:04:52,220 --> 00:04:54,515
On this text you can use pipeline.

95
00:04:54,515 --> 00:04:57,065
Then grep command, actually grep command needs input.

96
00:04:57,065 --> 00:04:58,565
That input will take from this,

97
00:04:58,565 --> 00:05:00,350
we know that uses up pipeline.

98
00:05:00,350 --> 00:05:02,179
Whenever if you use pipeline,

99
00:05:02,179 --> 00:05:08,825
this pipeline provides for this command input as from this command output.

100
00:05:08,825 --> 00:05:11,195
So whatever the output you are getting from here,

101
00:05:11,195 --> 00:05:15,545
that output will provide as a input for this second command.

102
00:05:15,545 --> 00:05:18,740
Instead of file, we are providing a text c.

103
00:05:18,740 --> 00:05:21,545
Suppose previously we done this, grip,

104
00:05:21,545 --> 00:05:25,625
a bow, then test.txt file. Same thing.

105
00:05:25,625 --> 00:05:26,780
I can also run it in this way.

106
00:05:26,780 --> 00:05:29,705
First, I can content on that.

107
00:05:29,705 --> 00:05:31,355
I can apply Grip command.

108
00:05:31,355 --> 00:05:33,170
So based on your requirement,

109
00:05:33,170 --> 00:05:35,210
you can proceed with Anyway.

110
00:05:35,210 --> 00:05:36,410
That's it.

111
00:05:36,410 --> 00:05:38,030
There is no difference, right?

112
00:05:38,030 --> 00:05:40,505
Fine. Now.

113
00:05:40,505 --> 00:05:43,445
So that is the second way to use your grep command.

114
00:05:43,445 --> 00:05:45,770
Now coming two options.

115
00:05:45,770 --> 00:05:48,785
We hold different types of options here.

116
00:05:48,785 --> 00:05:53,075
These are the basic options and these are the advanced options.

117
00:05:53,075 --> 00:05:55,940
So advanced options will discuss with the pattern,

118
00:05:55,940 --> 00:05:57,200
I mean, in the next session.

119
00:05:57,200 --> 00:06:01,129
So in this video we are discussing about basic options.

120
00:06:01,129 --> 00:06:04,565
So these all are basic options for your grep command.

121
00:06:04,565 --> 00:06:06,350
Let me go with that.

122
00:06:06,350 --> 00:06:10,580
So this is the basic uses of your Grip command without any options.

123
00:06:10,580 --> 00:06:12,530
Options are always optional.

124
00:06:12,530 --> 00:06:13,700
If you want, you can use,

125
00:06:13,700 --> 00:06:15,800
if you want to skip, you can skip them.

126
00:06:15,800 --> 00:06:16,880
Fine.

127
00:06:16,880 --> 00:06:19,580
Now with options, if you want to use in this place,

128
00:06:19,580 --> 00:06:21,619
you have to mention you are options.

129
00:06:21,619 --> 00:06:25,880
So now grep, options in quotations he was string,

130
00:06:25,880 --> 00:06:28,805
forget about pattern, then file or files.

131
00:06:28,805 --> 00:06:30,845
So first I will work with the single file.

132
00:06:30,845 --> 00:06:32,795
Then if you want to work with multiple files, yes,

133
00:06:32,795 --> 00:06:37,010
you can find very first option is hyphen.

134
00:06:37,010 --> 00:06:40,550
I let me open my terminal.

135
00:06:40,550 --> 00:06:49,220
And suppose I am looking for capital yea a bow in a file called test.txt c,

136
00:06:49,220 --> 00:06:52,725
there is an there is no capital F0.

137
00:06:52,725 --> 00:06:54,985
In a given text to file.

138
00:06:54,985 --> 00:07:00,040
Now, I don't want to consider the case sensitivity,

139
00:07:00,040 --> 00:07:03,835
then you can ignore your case sensitivity is simply by hyphen.

140
00:07:03,835 --> 00:07:04,615
I.

141
00:07:04,615 --> 00:07:06,310
Now see the result.

142
00:07:06,310 --> 00:07:08,020
Yes, you are getting.

143
00:07:08,020 --> 00:07:11,230
So if you want to ignore case sensitivity,

144
00:07:11,230 --> 00:07:13,480
then you can use hyphen I option.

145
00:07:13,480 --> 00:07:19,525
Now, second one, hyphen w v w to match your whole world.

146
00:07:19,525 --> 00:07:29,995
Suppose first let me such grip line in test.txt.

147
00:07:29,995 --> 00:07:36,400
C line is a string and I am looking for a string line in this file and see the result,

148
00:07:36,400 --> 00:07:38,440
this line, these lines.

149
00:07:38,440 --> 00:07:40,015
Actually if you observe here,

150
00:07:40,015 --> 00:07:42,100
this entire thing is a word lines,

151
00:07:42,100 --> 00:07:45,190
but line is the part of this word.

152
00:07:45,190 --> 00:07:48,955
Thus the reason I want to skip this type of matching,

153
00:07:48,955 --> 00:07:51,490
I want to look at exactly four line,

154
00:07:51,490 --> 00:07:54,325
exactly four lane word matching.

155
00:07:54,325 --> 00:07:57,340
Then he had to do optionals hyphen w,

156
00:07:57,340 --> 00:08:02,980
so that you are Grep command will understand that this string is like an exact word.

157
00:08:02,980 --> 00:08:04,750
So in this file,

158
00:08:04,750 --> 00:08:06,580
wherever you how exact word,

159
00:08:06,580 --> 00:08:08,185
complete word called Nine,

160
00:08:08,185 --> 00:08:09,850
that lines on leading will display.

161
00:08:09,850 --> 00:08:13,060
Now c that is here, line is there.

162
00:08:13,060 --> 00:08:14,815
That's why the centerline is displaying.

163
00:08:14,815 --> 00:08:18,325
And here line is there and the headline is there.

164
00:08:18,325 --> 00:08:23,905
See the difference. So in this line, you're having lines.

165
00:08:23,905 --> 00:08:26,605
And previously without a hyphen W option,

166
00:08:26,605 --> 00:08:28,795
it is printing this also a match,

167
00:08:28,795 --> 00:08:31,930
but now I'm looking for exact word match.

168
00:08:31,930 --> 00:08:34,750
Thus the reason I use option called W,

169
00:08:34,750 --> 00:08:40,000
so that you are getting the lines which are having exactly line world.

170
00:08:40,000 --> 00:08:42,850
You know what it means before that word and after that,

171
00:08:42,850 --> 00:08:45,080
what do you have? Some space?

172
00:08:45,780 --> 00:08:48,595
That's it. Fine.

173
00:08:48,595 --> 00:08:50,455
Next one, hyphen v,

174
00:08:50,455 --> 00:08:54,850
to display the lines which are not having given string or text.

175
00:08:54,850 --> 00:09:00,660
I mean, suppose if I search with grip,

176
00:09:00,660 --> 00:09:03,260
a bow in a, in a given file,

177
00:09:03,260 --> 00:09:07,460
then it is printing the lines which are having a bot a bowstring.

178
00:09:07,460 --> 00:09:12,005
But I want to print it the lines other than abu,

179
00:09:12,005 --> 00:09:14,540
i mean, the lines which are not having a bot.

180
00:09:14,540 --> 00:09:15,990
That's it.

181
00:09:16,180 --> 00:09:21,095
So that is the uses of hyphen v. Hyphen Wu,

182
00:09:21,095 --> 00:09:26,435
simply to display only matter parts from Machu lines.

183
00:09:26,435 --> 00:09:29,630
Suppose first see the result.

184
00:09:29,630 --> 00:09:32,645
It is printing the entire lend by default.

185
00:09:32,645 --> 00:09:34,715
But I don't want to print the entire line.

186
00:09:34,715 --> 00:09:36,785
I want to print exactly the matching.

187
00:09:36,785 --> 00:09:43,470
They use hyphen Wu option. That's it.

188
00:09:43,740 --> 00:09:49,390
The next one, hyphen yen to display the match line numbers.

189
00:09:49,390 --> 00:09:53,680
So in which line you are match was there anywhere given five?

190
00:09:53,680 --> 00:09:55,435
Then simply use iPhone yen.

191
00:09:55,435 --> 00:09:59,710
It will give you the line number as well.

192
00:09:59,710 --> 00:10:02,410
Now line number and exactly match,

193
00:10:02,410 --> 00:10:05,180
then you can club your previous option.

194
00:10:05,220 --> 00:10:12,955
That's next hyphen C to display matching number of lines.

195
00:10:12,955 --> 00:10:17,935
So in how many lines you are match was there with your text to file?

196
00:10:17,935 --> 00:10:20,590
Now, let me remove these two options.

197
00:10:20,590 --> 00:10:23,320
We know ABL Is there a only in one line.

198
00:10:23,320 --> 00:10:25,755
That's why you're going to get count as one.

199
00:10:25,755 --> 00:10:28,220
Now if I search with the line, line,

200
00:10:28,220 --> 00:10:32,360
is there in not lines,

201
00:10:32,360 --> 00:10:35,780
I'm taking simply line that to not a word.

202
00:10:35,780 --> 00:10:37,955
I am taking simply this as a string.

203
00:10:37,955 --> 00:10:45,275
Now if you observe first let me grip line,

204
00:10:45,275 --> 00:10:49,775
then you were filed in these many number of lanes.

205
00:10:49,775 --> 00:10:52,610
You align string, is there line string, not a word.

206
00:10:52,610 --> 00:10:56,195
I'm not looking for a word simply I am looking for a string.

207
00:10:56,195 --> 00:11:01,520
A string means in this also line is there

208
00:11:01,520 --> 00:11:06,965
are simply if there is a line but is also matching 41 line from your file.

209
00:11:06,965 --> 00:11:10,610
Now I'm writing with a hyphen.

210
00:11:10,610 --> 00:11:14,105
See count, how many number of times,

211
00:11:14,105 --> 00:11:16,610
sorry, in how many lines you were.

212
00:11:16,610 --> 00:11:20,735
Line audio, string is there in a given file in four lines.

213
00:11:20,735 --> 00:11:24,305
Now I want to look, exert word match.

214
00:11:24,305 --> 00:11:26,795
Then only in three lines,

215
00:11:26,795 --> 00:11:29,465
in three lanes, the word line is there.

216
00:11:29,465 --> 00:11:30,740
Now this line string,

217
00:11:30,740 --> 00:11:33,050
we can call it as a word because we have given options

218
00:11:33,050 --> 00:11:37,860
w. So in three lines you are word line is there.

219
00:11:37,990 --> 00:11:41,810
Then very, very important uses options.

220
00:11:41,810 --> 00:11:43,835
These three capital letters, hyphen,

221
00:11:43,835 --> 00:11:47,315
hyphen v and iPhone C. Abc options.

222
00:11:47,315 --> 00:11:51,245
Hyphen yea means to display yen lines,

223
00:11:51,245 --> 00:11:55,220
means you're required number of lines or after the match C,

224
00:11:55,220 --> 00:11:57,605
the result, how we can use it.

225
00:11:57,605 --> 00:12:01,055
First, let me show you were fine.

226
00:12:01,055 --> 00:12:04,460
So I will take your same file I can take.

227
00:12:04,460 --> 00:12:06,545
Suppose I've always there.

228
00:12:06,545 --> 00:12:08,390
If abu is there,

229
00:12:08,390 --> 00:12:11,135
then after that I want to print one line.

230
00:12:11,135 --> 00:12:12,770
If above is there.

231
00:12:12,770 --> 00:12:14,375
And in my given text file,

232
00:12:14,375 --> 00:12:18,455
I mean any fight, then I want to print offer that one line.

233
00:12:18,455 --> 00:12:21,590
See that grip hyphen yea.

234
00:12:21,590 --> 00:12:24,395
After that, I wanted to print one line.

235
00:12:24,395 --> 00:12:26,855
After a bow.

236
00:12:26,855 --> 00:12:29,525
If a boy is there in my file,

237
00:12:29,525 --> 00:12:31,520
only if that is satisfied,

238
00:12:31,520 --> 00:12:37,355
then print one line offer that suppose this is not there in a file, right?

239
00:12:37,355 --> 00:12:39,600
Then there is no output.

240
00:12:40,300 --> 00:12:43,280
So after A-B-O matched line,

241
00:12:43,280 --> 00:12:44,855
print one more line.

242
00:12:44,855 --> 00:12:48,995
And before match, print one line, then use hyphen b.

243
00:12:48,995 --> 00:12:53,570
Not only one line, you can take any number of lanes based on your requirement.

244
00:12:53,570 --> 00:12:56,525
See that before a bold line,

245
00:12:56,525 --> 00:12:58,430
actually in this Lenovo is there,

246
00:12:58,430 --> 00:13:01,070
I mean matches there before that we are printing one line.

247
00:13:01,070 --> 00:13:03,770
And if you see in our file before that there is an empty line.

248
00:13:03,770 --> 00:13:05,630
That line is displayed.

249
00:13:05,630 --> 00:13:09,650
And along with that, I want to print before and after.

250
00:13:09,650 --> 00:13:13,715
I want to print one line before one lane, offer one length,

251
00:13:13,715 --> 00:13:18,200
that is hyphen see, see that empty line,

252
00:13:18,200 --> 00:13:19,820
an offer that one line.

253
00:13:19,820 --> 00:13:23,030
So anyway, even though if it is empty in your file itself,

254
00:13:23,030 --> 00:13:25,385
that is an empty line, that's a.

255
00:13:25,385 --> 00:13:28,160
So these three lines are very, very, sorry,

256
00:13:28,160 --> 00:13:29,360
these three options are very,

257
00:13:29,360 --> 00:13:31,160
very useful in your real time.

258
00:13:31,160 --> 00:13:36,830
These three, and let me do the hyphen I, iPhone W,

259
00:13:36,830 --> 00:13:39,005
hyphen v, foster, three options,

260
00:13:39,005 --> 00:13:41,180
then hyphen ABC, or very,

261
00:13:41,180 --> 00:13:42,950
very useful in your real time.

262
00:13:42,950 --> 00:13:46,835
And the remaining are maybe rare uses.

263
00:13:46,835 --> 00:13:54,320
Then hyphen or two such under current directory and subdirectory as well. I suppose.

264
00:13:54,320 --> 00:13:56,405
We are in this location,

265
00:13:56,405 --> 00:13:58,910
and this location we have some subdirectory as well.

266
00:13:58,910 --> 00:14:00,395
This is my directory.

267
00:14:00,395 --> 00:14:07,910
I want to look for a string in the current two files and also in this directory.

268
00:14:07,910 --> 00:14:12,484
Then recursively I want to simply grip bash.

269
00:14:12,484 --> 00:14:14,510
And if I use star,

270
00:14:14,510 --> 00:14:19,235
it is going to such for batch and stream in the current location.

271
00:14:19,235 --> 00:14:22,100
But I wanted to look recursively in sub-directories also,

272
00:14:22,100 --> 00:14:24,770
I wanted to look then use iPhone or option.

273
00:14:24,770 --> 00:14:29,090
Now see that this is how sub directory in that there is a file,

274
00:14:29,090 --> 00:14:30,785
in that file there is a bash.

275
00:14:30,785 --> 00:14:33,995
So recursively you can, such with iPhone or option.

276
00:14:33,995 --> 00:14:37,520
Then hyphens to display only filenames.

277
00:14:37,520 --> 00:14:40,115
If there is a match, don't print the content.

278
00:14:40,115 --> 00:14:43,290
Print only filenames.

279
00:14:43,360 --> 00:14:46,100
With hyphen yelled, that's it.

280
00:14:46,100 --> 00:14:48,200
So it is displaying only filenames.

281
00:14:48,200 --> 00:14:52,010
See that in this file there is imagined is file that is image.

282
00:14:52,010 --> 00:14:56,030
Next hyphen edge to hide filenames.

283
00:14:56,030 --> 00:14:59,460
So suppose we are searching in this way, right?

284
00:14:59,470 --> 00:15:02,840
I don't want to print this filenames only.

285
00:15:02,840 --> 00:15:05,690
I want to print the content matching content.

286
00:15:05,690 --> 00:15:08,105
Then simply use hyphen hedge.

287
00:15:08,105 --> 00:15:15,995
It will hide files with recursively hedgehog.

288
00:15:15,995 --> 00:15:18,680
That's it. Ok.

289
00:15:18,680 --> 00:15:24,245
So there is a how given mostly used options in your real time for your grep command.

290
00:15:24,245 --> 00:15:27,275
But if you want to learn some more options,

291
00:15:27,275 --> 00:15:31,565
the remaining options simply go to your command line, man,

292
00:15:31,565 --> 00:15:36,545
grip, and enter your having your all options here.

293
00:15:36,545 --> 00:15:38,615
You can practice, at least.

294
00:15:38,615 --> 00:15:40,745
Please have a look once.

295
00:15:40,745 --> 00:15:43,760
So that whenever if you get any requirement in real time,

296
00:15:43,760 --> 00:15:45,995
you can get at least idea, yes,

297
00:15:45,995 --> 00:15:48,950
with the grep command, there is something option called in this way.

298
00:15:48,950 --> 00:15:52,590
And at the time you can come back and you can look for it.

299
00:15:55,480 --> 00:15:57,260
Fine.

300
00:15:57,260 --> 00:16:01,790
So if you press Q, it will exit. Okay.

301
00:16:01,790 --> 00:16:07,160
Now, let me show you the important concept from your Grip command that is how to

302
00:16:07,160 --> 00:16:11,735
apply Grip command on the output of other Command C. If you remember,

303
00:16:11,735 --> 00:16:14,195
at very first, we have done something like this.

304
00:16:14,195 --> 00:16:18,020
This is a simple info on, on this.

305
00:16:18,020 --> 00:16:23,645
We are applying grep command just to such simple and we are getting some output.

306
00:16:23,645 --> 00:16:25,970
If you observe this entire syntax.

307
00:16:25,970 --> 00:16:27,380
Actually this is a command.

308
00:16:27,380 --> 00:16:30,230
Echo is also a command and it is giving some output.

309
00:16:30,230 --> 00:16:33,170
What is the output? It is displaying your texts under text,

310
00:16:33,170 --> 00:16:36,080
we ran Grip command to such simple.

311
00:16:36,080 --> 00:16:37,475
The same way.

312
00:16:37,475 --> 00:16:41,510
Suppose I am running HTTPD hyphen v and see the result.

313
00:16:41,510 --> 00:16:43,010
You are getting some wash em.

314
00:16:43,010 --> 00:16:47,780
Anyway, you are Washington is there in the line where Watson keys

315
00:16:47,780 --> 00:16:52,760
that are watching string is that so this is the version on your this Watson is there.

316
00:16:52,760 --> 00:16:55,520
If Watson string is there in that line,

317
00:16:55,520 --> 00:16:57,695
that's why I don't want to print second line.

318
00:16:57,695 --> 00:17:00,410
Then I can fritter with the help of grep command,

319
00:17:00,410 --> 00:17:07,265
simply pipeline grid, printed the lines which are having Wusheng, that's it.

320
00:17:07,265 --> 00:17:13,775
So applying the grep command on output of other command is very, very important.

321
00:17:13,775 --> 00:17:18,065
We will use this situation many times in our course.

322
00:17:18,065 --> 00:17:21,470
So I will run some command and that output.

323
00:17:21,470 --> 00:17:24,680
I'm applying grep command just by using biplane symbol.

324
00:17:24,680 --> 00:17:26,675
This is also very, very important.

325
00:17:26,675 --> 00:17:27,860
Okay?

326
00:17:27,860 --> 00:17:29,670
Thank you.

