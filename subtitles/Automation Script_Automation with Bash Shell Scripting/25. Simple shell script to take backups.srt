1
00:00:00,000 --> 00:00:04,380
Friends here we're implementing a simple shell script for backup.

2
00:00:04,380 --> 00:00:07,815
And this concept is useful for Linux admins, middleware admins,

3
00:00:07,815 --> 00:00:12,900
and database admins just assume that I'm running a website on webserver.

4
00:00:12,900 --> 00:00:17,175
And whenever if you run any website it will create some loves like access logs,

5
00:00:17,175 --> 00:00:19,170
logging logs, something like that.

6
00:00:19,170 --> 00:00:21,510
Now I want to take a backup for them.

7
00:00:21,510 --> 00:00:24,015
For that, I am writing a shell script.

8
00:00:24,015 --> 00:00:26,025
Now before implementing your shell scripts,

9
00:00:26,025 --> 00:00:29,775
let me show you where the locks of storing for my website.

10
00:00:29,775 --> 00:00:30,945
So in my case,

11
00:00:30,945 --> 00:00:34,200
this is the location where logs are storing for my website.

12
00:00:34,200 --> 00:00:35,790
In your case, it may be different.

13
00:00:35,790 --> 00:00:38,205
You had to point out that first.

14
00:00:38,205 --> 00:00:40,450
Now these are the log files,

15
00:00:40,450 --> 00:00:42,470
these files and could take a backup.

16
00:00:42,470 --> 00:00:45,665
So instead of taking individually for each and every file back-up,

17
00:00:45,665 --> 00:00:49,640
I will take a backup for this directory right now.

18
00:00:49,640 --> 00:00:51,485
So this is your source.

19
00:00:51,485 --> 00:00:53,584
So from this location,

20
00:00:53,584 --> 00:00:54,830
you have to take a backup.

21
00:00:54,830 --> 00:00:57,740
Then where do you want to store your backup profiles?

22
00:00:57,740 --> 00:00:59,405
So let just assume that.

23
00:00:59,405 --> 00:01:00,275
And one more thing.

24
00:01:00,275 --> 00:01:03,470
Now this is a root access files.

25
00:01:03,470 --> 00:01:05,750
Let me switch into root first.

26
00:01:05,750 --> 00:01:10,175
Now am route, so somewhere or how?

27
00:01:10,175 --> 00:01:13,250
Some backups directly.

28
00:01:13,250 --> 00:01:16,145
So this is the location where I want to take him my backups.

29
00:01:16,145 --> 00:01:20,810
So in your case, so this location also maybe changed based on your requirement,

30
00:01:20,810 --> 00:01:24,110
you have to create the location for your backups.

31
00:01:24,110 --> 00:01:26,375
Now let me implement a shell script.

32
00:01:26,375 --> 00:01:28,370
C, I'm implementing a shell script.

33
00:01:28,370 --> 00:01:30,500
That shell script we can implement anywhere.

34
00:01:30,500 --> 00:01:37,835
Now, let me implement in this way my website backup dot SH.

35
00:01:37,835 --> 00:01:41,840
Let me write the very first line has user bin bash.

36
00:01:41,840 --> 00:01:43,625
So if you want write some commands.

37
00:01:43,625 --> 00:01:46,820
Who is the author or what is the purpose of this cryptic and write the comments.

38
00:01:46,820 --> 00:01:48,200
Just I am writing only author.

39
00:01:48,200 --> 00:01:51,260
You can write the purpose of your script also.

40
00:01:51,260 --> 00:01:55,010
Then, before implementing UDL shell script,

41
00:01:55,010 --> 00:01:59,594
you have to know what is your source and where you want to store that its destination.

42
00:01:59,594 --> 00:02:01,135
Now let me take a source.

43
00:02:01,135 --> 00:02:04,705
I'm taking source as a variable in that I'm storing

44
00:02:04,705 --> 00:02:09,550
the path where my logs or storing. Then destination.

45
00:02:09,550 --> 00:02:10,780
Let me take destination

46
00:02:10,780 --> 00:02:18,415
as you can take any variable names I'm taking simply these are the variable names.

47
00:02:18,415 --> 00:02:22,210
That's it. Now if you want to take a backup,

48
00:02:22,210 --> 00:02:27,340
you can use either simply copy command or you can use some tar command.

49
00:02:27,340 --> 00:02:30,940
So here I'm taking tar command to unzip the file.

50
00:02:30,940 --> 00:02:33,370
Let me show you a simple tar command.

51
00:02:33,370 --> 00:02:36,640
So here's the syntax for your tar command.

52
00:02:36,640 --> 00:02:40,930
So these are the options and destination and source.

53
00:02:40,930 --> 00:02:45,230
Sources, simply our HTML directory destination.

54
00:02:45,230 --> 00:02:47,015
Inside of your backups,

55
00:02:47,015 --> 00:02:48,920
there is a directory inside of that.

56
00:02:48,920 --> 00:02:55,790
You have to create your backup file with some name, something like that.

57
00:02:55,790 --> 00:02:57,890
Right now, see, I'm

58
00:02:57,890 --> 00:03:07,865
taking your options here, v for verbose.

59
00:03:07,865 --> 00:03:10,895
So if you include the V tar command,

60
00:03:10,895 --> 00:03:14,375
it will display while keeping your files.

61
00:03:14,375 --> 00:03:17,675
It will display what other files it is.

62
00:03:17,675 --> 00:03:19,145
Taking.

63
00:03:19,145 --> 00:03:24,510
So simply, you can keep hyphen v option or you can keep that.

64
00:03:24,850 --> 00:03:27,935
Then destination.

65
00:03:27,935 --> 00:03:32,015
See our destination is there in a variable called DSD, D, D.

66
00:03:32,015 --> 00:03:36,890
Let me write. You can take anything just I'm taking

67
00:03:36,890 --> 00:03:42,470
that destination insight that you need to create with some name.

68
00:03:42,470 --> 00:03:48,530
Now I'm creating with some name called my website back-up.

69
00:03:48,530 --> 00:03:56,930
My website.com backup dot dot dot z.

70
00:03:56,930 --> 00:03:58,940
Then what is the source?

71
00:03:58,940 --> 00:04:03,935
That is your source, say our sources there in a variable called SRC.

72
00:04:03,935 --> 00:04:06,860
Given that, let me save it.

73
00:04:06,860 --> 00:04:10,770
Let me do the execution permissions for that.

74
00:04:12,160 --> 00:04:14,540
See your core.

75
00:04:14,540 --> 00:04:15,695
Very simple.

76
00:04:15,695 --> 00:04:21,080
Now I'm running that. So backup is done.

77
00:04:21,080 --> 00:04:25,070
Now you can verify just by navigating into that back-ups directory.

78
00:04:25,070 --> 00:04:27,065
Yes, there is a backup.

79
00:04:27,065 --> 00:04:30,410
Now, we have a small problem with your shell script.

80
00:04:30,410 --> 00:04:35,105
So in case if there is no directory called backups location,

81
00:04:35,105 --> 00:04:37,115
see your destination is nothing but backups, right?

82
00:04:37,115 --> 00:04:38,720
If this directory is not there,

83
00:04:38,720 --> 00:04:40,955
then your shells could will fail.

84
00:04:40,955 --> 00:04:47,060
Now let me remove that barrier tree and we will run our shell script.

85
00:04:47,060 --> 00:04:53,720
It's getting fail. That's the reason you have to take care for that inside

86
00:04:53,720 --> 00:05:00,800
of your shells can see what I'm doing is I'm using test a condition.

87
00:05:00,800 --> 00:05:03,665
Existence c, hyphen e.

88
00:05:03,665 --> 00:05:06,305
Easy word destination is already there.

89
00:05:06,305 --> 00:05:08,975
If it is there, then it will get success.

90
00:05:08,975 --> 00:05:11,030
If it is success, I don't want to create that.

91
00:05:11,030 --> 00:05:12,350
If it is not success,

92
00:05:12,350 --> 00:05:15,020
if it will fail any to make that directory,

93
00:05:15,020 --> 00:05:17,075
to make your directly have a command.

94
00:05:17,075 --> 00:05:19,175
But you have to club ecological art.

95
00:05:19,175 --> 00:05:21,830
Why illogical or why not logical and means.

96
00:05:21,830 --> 00:05:23,720
If this is not there,

97
00:05:23,720 --> 00:05:24,950
if directory is not there,

98
00:05:24,950 --> 00:05:26,705
then this will get failed.

99
00:05:26,705 --> 00:05:31,025
If it will fail, then only I want run some other commands to create your directory.

100
00:05:31,025 --> 00:05:33,995
If it is success, I want to skip the command which is there here.

101
00:05:33,995 --> 00:05:35,960
First, let me get a command.

102
00:05:35,960 --> 00:05:40,700
Make directory, whatever that dire destination you how insight

103
00:05:40,700 --> 00:05:46,445
that if you're first to command is fail the meaningful that there is no destination,

104
00:05:46,445 --> 00:05:47,975
then all I wanted in this command,

105
00:05:47,975 --> 00:05:50,600
that's why you have to club your two commands with logical r.

106
00:05:50,600 --> 00:05:52,145
If I take logical end,

107
00:05:52,145 --> 00:05:54,425
if it will fail, it will skip.

108
00:05:54,425 --> 00:05:57,335
That's why I'm not taking logical and to club these two commands,

109
00:05:57,335 --> 00:05:59,675
and that's it. Now let me save it.

110
00:05:59,675 --> 00:06:03,240
First, see that there is no backup directory.

111
00:06:05,290 --> 00:06:08,945
C, there is no backup there to here.

112
00:06:08,945 --> 00:06:11,910
Now I'm running our shell script.

113
00:06:13,800 --> 00:06:16,510
Now see the content. There is a backup,

114
00:06:16,510 --> 00:06:21,655
but it has been created and your backup has been taken into inside of that.

115
00:06:21,655 --> 00:06:23,200
So if this directory,

116
00:06:23,200 --> 00:06:25,780
if this destination directory is not there,

117
00:06:25,780 --> 00:06:27,400
so we are creating,

118
00:06:27,400 --> 00:06:28,645
if it is not there,

119
00:06:28,645 --> 00:06:29,890
then only we are creating it.

120
00:06:29,890 --> 00:06:32,275
That's fine.

121
00:06:32,275 --> 00:06:34,555
And one more problem is there.

122
00:06:34,555 --> 00:06:39,760
Suppose we had taken a backup yesterday by using the shell strip.

123
00:06:39,760 --> 00:06:42,265
Now today also I wanna pick a backup,

124
00:06:42,265 --> 00:06:45,020
then you will run simply.

125
00:06:45,060 --> 00:06:47,785
Now see the backups.

126
00:06:47,785 --> 00:06:50,320
Then what about your Yesterday backups?

127
00:06:50,320 --> 00:06:53,890
Today we have taken a backup and I should also we have taken a backup.

128
00:06:53,890 --> 00:06:55,600
Then what I would do yesterday backup.

129
00:06:55,600 --> 00:06:57,580
This is your latest tobacco

130
00:06:57,580 --> 00:07:01,285
So the reason why you are old backup is deleting.

131
00:07:01,285 --> 00:07:02,125
For that.

132
00:07:02,125 --> 00:07:06,010
The reason is whenever you are taking a backup today or tomorrow or day after tomorrow,

133
00:07:06,010 --> 00:07:07,195
you are using same name.

134
00:07:07,195 --> 00:07:10,105
That's why you are wold backup is war writing.

135
00:07:10,105 --> 00:07:12,445
Now whenever if you are taking a backup,

136
00:07:12,445 --> 00:07:18,235
please include some timestamp so that the backup file name will be changed everyday.

137
00:07:18,235 --> 00:07:22,765
So how we can create a file with some timestamp, very simple.

138
00:07:22,765 --> 00:07:24,235
C, we know date command.

139
00:07:24,235 --> 00:07:25,540
In your date command,

140
00:07:25,540 --> 00:07:27,610
we have some special syntax.

141
00:07:27,610 --> 00:07:29,574
Based on our requirement.

142
00:07:29,574 --> 00:07:35,245
We can display particular value from your data output number.

143
00:07:35,245 --> 00:07:37,690
Then space I am giving.

144
00:07:37,690 --> 00:07:38,980
You.

145
00:07:38,980 --> 00:07:44,880
See that date, then space percent a year.

146
00:07:45,070 --> 00:07:53,945
Then I'm including One more thing called hours, minutes, seconds.

147
00:07:53,945 --> 00:07:58,175
If you want, you can include but in case if you are taking backup every day,

148
00:07:58,175 --> 00:07:59,960
known it includes hours, minutes, and seconds.

149
00:07:59,960 --> 00:08:02,375
In case if you want, you can take options.

150
00:08:02,375 --> 00:08:05,810
See there is a but whenever if you're creating a directory,

151
00:08:05,810 --> 00:08:08,825
you should not be created editor name by including spaces.

152
00:08:08,825 --> 00:08:11,250
That's why you see what I'm doing here.

153
00:08:11,460 --> 00:08:16,260
Simply, I am replacing spaces with underscores.

154
00:08:22,120 --> 00:08:27,320
That's a Nazi, That is an now this command output I will

155
00:08:27,320 --> 00:08:31,925
store into one variable or directly you can include that in your variable name itself.

156
00:08:31,925 --> 00:08:33,665
Just for your clarity,

157
00:08:33,665 --> 00:08:38,029
I will take first a variable every day timestamp.

158
00:08:38,029 --> 00:08:42,785
Yes. That is my variable everyday timestamp for backup.

159
00:08:42,785 --> 00:08:48,425
Then I'm storing into this hour date command output by including these options.

160
00:08:48,425 --> 00:08:51,530
And while creating your filename somewhere,

161
00:08:51,530 --> 00:08:53,945
I will include the timestamp.

162
00:08:53,945 --> 00:08:59,420
So how can we include simply here underscore backup,

163
00:08:59,420 --> 00:09:04,770
dollar, every day, time stamp for backup.

164
00:09:05,070 --> 00:09:09,550
So, but better clarity just I'm using curly braces so that up to that,

165
00:09:09,550 --> 00:09:11,320
that is a variable, that's a.

166
00:09:11,320 --> 00:09:13,510
Now let me save it.

167
00:09:13,510 --> 00:09:16,090
So before running our shell script C,

168
00:09:16,090 --> 00:09:17,710
what are the backups are there in your file?

169
00:09:17,710 --> 00:09:19,375
Now I'm running our shells tip.

170
00:09:19,375 --> 00:09:24,625
It has taken a back up, see the content with the timestamp your backup is creating.

171
00:09:24,625 --> 00:09:27,820
So what are the options you need in timestamps based on that,

172
00:09:27,820 --> 00:09:29,470
you just modify your date command.

173
00:09:29,470 --> 00:09:32,320
Again, I'm running. Now see the content.

174
00:09:32,320 --> 00:09:36,625
So if you run your shell script any number of times,

175
00:09:36,625 --> 00:09:39,890
each time it will create new backup.

176
00:09:40,050 --> 00:09:44,590
That's it. So these are the simple logic to create a backup

177
00:09:44,590 --> 00:09:48,575
based on timestamp. That's fine.

178
00:09:48,575 --> 00:09:49,985
No.

179
00:09:49,985 --> 00:09:55,190
Here we are running manually our shell script to take a backup every day.

180
00:09:55,190 --> 00:09:58,610
But in case if you have a requirements such

181
00:09:58,610 --> 00:10:01,940
that every day if you need a backup 40 word logs file,

182
00:10:01,940 --> 00:10:06,035
no need to run manually or shell script just to create a cron job such that,

183
00:10:06,035 --> 00:10:08,720
that con job will run automatically based

184
00:10:08,720 --> 00:10:12,245
on the time which we scheduled in that cron job.

185
00:10:12,245 --> 00:10:18,485
So how to schedule a cron job to run our shell script based on particular time.

186
00:10:18,485 --> 00:10:20,720
So that we'll discuss in further sessions.

187
00:10:20,720 --> 00:10:24,920
We have separate concert for cron jobs scheduling with Dell, perfect contact.

188
00:10:24,920 --> 00:10:28,620
Okay. Okay. Thank you.

