1
00:00:00,350 --> 00:00:01,995
Hi friends.

2
00:00:01,995 --> 00:00:06,945
In this video, we are going to discuss about basics of arrays in Bash shell scripting.

3
00:00:06,945 --> 00:00:08,835
So after completion of this video,

4
00:00:08,835 --> 00:00:11,880
you can able to define what is an array CO2,

5
00:00:11,880 --> 00:00:18,750
define how to access values of an array and how to read array values with Reid command.

6
00:00:18,750 --> 00:00:22,320
So guys, before going to start this Perez concept,

7
00:00:22,320 --> 00:00:26,320
just assume that I have a small requirement.

8
00:00:28,640 --> 00:00:33,570
Let's say I need to define one simple shell script to there.

9
00:00:33,570 --> 00:00:36,899
I had to take some five variables.

10
00:00:36,899 --> 00:00:42,850
Let say, suppose some values.

11
00:00:42,910 --> 00:00:46,190
So just I want to define some variables.

12
00:00:46,190 --> 00:00:47,825
You can define any variables,

13
00:00:47,825 --> 00:00:50,345
but here I want to take some of them.

14
00:00:50,345 --> 00:00:55,205
Let's say, right?

15
00:00:55,205 --> 00:00:58,440
So I defined phi variables.

16
00:00:58,780 --> 00:01:02,480
So instead of defining phi variables,

17
00:01:02,480 --> 00:01:08,570
right, I want to take one variable and in which I want to store all these values.

18
00:01:08,570 --> 00:01:11,630
Sometimes you may get situation non-equity.

19
00:01:11,630 --> 00:01:14,420
Suppose if I want to defend some a 100 variables, right?

20
00:01:14,420 --> 00:01:17,435
Then you have to take like X1, X2, X3,

21
00:01:17,435 --> 00:01:20,390
because anyway, let us not sufficient right? Edges it.

22
00:01:20,390 --> 00:01:22,955
So that's why instead of even in this way,

23
00:01:22,955 --> 00:01:24,635
what I will do take A's,

24
00:01:24,635 --> 00:01:26,870
I will take X1,

25
00:01:26,870 --> 00:01:33,440
X2, suppose X3, X4.

26
00:01:33,440 --> 00:01:37,460
Likewise, I can take you and up to a 100 values.

27
00:01:37,460 --> 00:01:38,435
It's better, right?

28
00:01:38,435 --> 00:01:39,920
Interrupt making ABCD.

29
00:01:39,920 --> 00:01:42,980
If you want to define some a 100 variables or some five variables,

30
00:01:42,980 --> 00:01:44,090
let us take suppose X1,

31
00:01:44,090 --> 00:01:46,115
X2, X3, X4, and X5.

32
00:01:46,115 --> 00:01:49,055
But he also, right,

33
00:01:49,055 --> 00:01:51,860
I don't want to define these many number of variables.

34
00:01:51,860 --> 00:01:53,330
I want to store only one.

35
00:01:53,330 --> 00:01:58,190
I mean, I want to take only one variable and which I want to store all these values.

36
00:01:58,190 --> 00:02:01,250
Then yes, there is option in shell scripting that is like,

37
00:02:01,250 --> 00:02:02,300
you know, foster value,

38
00:02:02,300 --> 00:02:05,180
sequence six was third,

39
00:02:05,180 --> 00:02:09,560
fourth, then fifth value. That's it.

40
00:02:09,560 --> 00:02:11,315
Right? Now.

41
00:02:11,315 --> 00:02:16,730
This is, this is one of the valid way to define your number of values into one variable.

42
00:02:16,730 --> 00:02:19,220
And actually this is called array.

43
00:02:19,220 --> 00:02:21,380
But once if you define in this way,

44
00:02:21,380 --> 00:02:23,855
how do you access all those things we will discuss?

45
00:02:23,855 --> 00:02:24,965
Right?

46
00:02:24,965 --> 00:02:26,930
Now, this is called simply array.

47
00:02:26,930 --> 00:02:30,575
Now you have to understand that array is nothing but storing multiple values

48
00:02:30,575 --> 00:02:34,325
in one variable, right?

49
00:02:34,325 --> 00:02:38,340
Or array is a sequence of values.

50
00:02:38,470 --> 00:02:40,070
Right?

51
00:02:40,070 --> 00:02:43,565
See, let me now start your slides.

52
00:02:43,565 --> 00:02:49,070
So R is a variable containing multiple values or sequence of values.

53
00:02:49,070 --> 00:02:52,640
And any variable may be used as an array.

54
00:02:52,640 --> 00:02:54,665
That means, so you know,

55
00:02:54,665 --> 00:02:56,270
if you want to define some variable,

56
00:02:56,270 --> 00:02:57,635
right, what you are taking,

57
00:02:57,635 --> 00:03:00,815
like XY Jeddah, based on some newer variable rules,

58
00:03:00,815 --> 00:03:03,185
you're defining some variable name, right?

59
00:03:03,185 --> 00:03:06,050
So you should not start with numbers.

60
00:03:06,050 --> 00:03:08,015
Your variables should not contain spaces.

61
00:03:08,015 --> 00:03:11,435
These are the rules for your variables write while taking a variable name.

62
00:03:11,435 --> 00:03:16,505
The same way, even array variable names also you can take it exert rule.

63
00:03:16,505 --> 00:03:18,905
This is nothing is that these also variable?

64
00:03:18,905 --> 00:03:23,600
That's why you have to follow the same rules of your variables to define variable name.

65
00:03:23,600 --> 00:03:27,155
So that's why any variable may be used as an array.

66
00:03:27,155 --> 00:03:30,230
And there is no maximum limit to the size of an array.

67
00:03:30,230 --> 00:03:33,770
Suppose we define here variable like x and here we are storing.

68
00:03:33,770 --> 00:03:36,020
Suppose phi values, not only file,

69
00:03:36,020 --> 00:03:38,585
if you want to define 1000 thousand, you can take it.

70
00:03:38,585 --> 00:03:41,000
There is no limit for that based on your requirement,

71
00:03:41,000 --> 00:03:44,280
you can store any number of values with your array.

72
00:03:44,380 --> 00:03:50,135
Right? And RA's in Bash shell scripts accepts multiple data types.

73
00:03:50,135 --> 00:03:52,700
That means suppose here we store all numbers, right?

74
00:03:52,700 --> 00:03:55,535
Not only numbers, you can take some string also.

75
00:03:55,535 --> 00:03:57,410
But while taking instance,

76
00:03:57,410 --> 00:04:01,460
Don't forget to provide quotations for your strings.

77
00:04:01,460 --> 00:04:04,235
That is a good practice.

78
00:04:04,235 --> 00:04:07,280
Now, in a one single variable,

79
00:04:07,280 --> 00:04:10,745
e can store numbers, strings, right?

80
00:04:10,745 --> 00:04:15,305
So that's why, that's why we are saying that it accepts and multiple data types.

81
00:04:15,305 --> 00:04:16,475
That's it.

82
00:04:16,475 --> 00:04:18,035
Now defining an array.

83
00:04:18,035 --> 00:04:22,010
So already we defined this is nothing but defining an array.

84
00:04:22,010 --> 00:04:24,035
Right? That's fine.

85
00:04:24,035 --> 00:04:30,080
So now we define RA, Right?

86
00:04:30,080 --> 00:04:32,060
This is the way how you can define your array.

87
00:04:32,060 --> 00:04:33,440
Of course, this is one simple way.

88
00:04:33,440 --> 00:04:36,080
We have some different ways we will discuss them.

89
00:04:36,080 --> 00:04:39,875
So this is one of the way how to define your array.

90
00:04:39,875 --> 00:04:42,125
So array is nothing but multiple values.

91
00:04:42,125 --> 00:04:45,110
You're storing India single-variable. That's it.

92
00:04:45,110 --> 00:04:48,800
Now I stored all these values into one variable called x,

93
00:04:48,800 --> 00:04:49,880
but I want to get it,

94
00:04:49,880 --> 00:04:52,220
I wanted to get phi or four or six or two.

95
00:04:52,220 --> 00:04:56,345
I mean, I want to get this value, or this value,

96
00:04:56,345 --> 00:04:58,985
or this center thing is one value because we

97
00:04:58,985 --> 00:05:02,495
enclosed within double quotations write this entire thing is a one value.

98
00:05:02,495 --> 00:05:04,895
So how you can get all these values.

99
00:05:04,895 --> 00:05:06,140
So, you know, right?

100
00:05:06,140 --> 00:05:08,060
Suppose if you have a variable called phi,

101
00:05:08,060 --> 00:05:10,250
how you can display the variable value.

102
00:05:10,250 --> 00:05:13,640
White, simply dollar way, right?

103
00:05:13,640 --> 00:05:15,680
Of course you can take a laborious also, no problem.

104
00:05:15,680 --> 00:05:17,974
That is actually good practice.

105
00:05:17,974 --> 00:05:19,130
Right?

106
00:05:19,130 --> 00:05:22,830
Suppose, let's say, let me take my,

107
00:05:23,440 --> 00:05:26,090
I'm taking suppose some number.

108
00:05:26,090 --> 00:05:28,025
So I want to display the value of y.

109
00:05:28,025 --> 00:05:29,135
Yes, right?

110
00:05:29,135 --> 00:05:33,065
The same way, let me define our array.

111
00:05:33,065 --> 00:05:39,530
Yes, I'm defining, I am trying to display the right because x is also a variable.

112
00:05:39,530 --> 00:05:40,250
No.

113
00:05:40,250 --> 00:05:44,645
This time trying to use normal variable to display your value.

114
00:05:44,645 --> 00:05:46,745
That syntax I'm using for array also,

115
00:05:46,745 --> 00:05:48,710
but see what you are getting output.

116
00:05:48,710 --> 00:05:51,170
So you are getting only foster value.

117
00:05:51,170 --> 00:05:54,395
But I want to get emptied array, right?

118
00:05:54,395 --> 00:05:56,480
So for that, this is the syntax, nothing is there.

119
00:05:56,480 --> 00:05:57,920
So if it is a very,

120
00:05:57,920 --> 00:06:00,065
sorry, if the variable is an array,

121
00:06:00,065 --> 00:06:02,945
then to display your all valleys which are there in your array,

122
00:06:02,945 --> 00:06:06,110
you have to use either this one or with the star.

123
00:06:06,110 --> 00:06:08,840
Both are valid ones, right?

124
00:06:08,840 --> 00:06:15,500
So display an entire array.

125
00:06:15,500 --> 00:06:17,750
So it's important when guys,

126
00:06:17,750 --> 00:06:21,920
you people may forget sometimes because it's like a normal variable.

127
00:06:21,920 --> 00:06:25,170
Syntax only buddy how to provide.

128
00:06:25,650 --> 00:06:28,120
That's it.

129
00:06:28,120 --> 00:06:29,575
Okay.

130
00:06:29,575 --> 00:06:31,765
Of course you can also take it, right?

131
00:06:31,765 --> 00:06:41,230
I mean, instead of

132
00:06:41,230 --> 00:06:45,050
this underrated can also take star also know Barlow.

133
00:06:45,240 --> 00:06:47,005
Okay?

134
00:06:47,005 --> 00:06:51,190
So that is the way how you can get all your values from URL.

135
00:06:51,190 --> 00:06:56,035
But I want to get only Butler value from this,

136
00:06:56,035 --> 00:06:57,940
this value I wanted to get already,

137
00:06:57,940 --> 00:06:59,320
this value I want to get.

138
00:06:59,320 --> 00:07:02,320
So there is whenever if you define RA by default,

139
00:07:02,320 --> 00:07:07,500
shall we use some positions for you on betas which are there in your x.

140
00:07:07,500 --> 00:07:10,670
So you know, right, while working out though our strings,

141
00:07:10,670 --> 00:07:13,130
right, we have taken some myString glucose to some shell,

142
00:07:13,130 --> 00:07:18,470
something like and whenever if you define your string in this way by default,

143
00:07:18,470 --> 00:07:23,220
shall we use some positions for string characters?

144
00:07:24,460 --> 00:07:26,300
Right?

145
00:07:26,300 --> 00:07:28,249
So for one string,

146
00:07:28,249 --> 00:07:30,860
you are Shelley's giving in this way index values.

147
00:07:30,860 --> 00:07:33,065
Positions are nothing but index values, right?

148
00:07:33,065 --> 00:07:35,600
The same way whenever if you assign an array,

149
00:07:35,600 --> 00:07:37,430
again for this also you are shall.

150
00:07:37,430 --> 00:07:38,690
We'll use some positions.

151
00:07:38,690 --> 00:07:40,595
They are called again index only.

152
00:07:40,595 --> 00:07:44,435
So this is our nixon GO first value is always at index 0.

153
00:07:44,435 --> 00:07:45,980
Seconds value is index 1.

154
00:07:45,980 --> 00:07:47,795
Third value is index 3.

155
00:07:47,795 --> 00:07:50,750
Fourth value, 1234.

156
00:07:50,750 --> 00:07:53,450
Fifth value is at index 246.

157
00:07:53,450 --> 00:07:58,310
The value is at index two, phi and seventh valleys at index 06.

158
00:07:58,310 --> 00:08:00,425
Now based on index,

159
00:08:00,425 --> 00:08:02,180
you can access your particular value,

160
00:08:02,180 --> 00:08:03,935
which is there in your x.

161
00:08:03,935 --> 00:08:08,810
Suppose if I want to get some number three,

162
00:08:08,810 --> 00:08:11,180
number three is that index of fine,

163
00:08:11,180 --> 00:08:14,495
then see that echo you have to write.

164
00:08:14,495 --> 00:08:20,645
So get values based on get arrays values, right?

165
00:08:20,645 --> 00:08:25,350
Get RA values based on index.

166
00:08:25,600 --> 00:08:30,425
Simply nothing is that x just in square brackets,

167
00:08:30,425 --> 00:08:38,165
just to mention your required position of from your array such that it will do the value.

168
00:08:38,165 --> 00:08:39,695
Let me print this.

169
00:08:39,695 --> 00:08:42,800
What is there at index four ation fine.

170
00:08:42,800 --> 00:08:45,620
Index patient phi is that value is three, right?

171
00:08:45,620 --> 00:08:48,335
Let me display that on your command line and see that.

172
00:08:48,335 --> 00:08:50,525
Now I want to get this value.

173
00:08:50,525 --> 00:08:52,325
This is at index six, right?

174
00:08:52,325 --> 00:08:54,680
See, let me take six now.

175
00:08:54,680 --> 00:08:56,670
That's it.

176
00:08:57,820 --> 00:08:59,210
Right?

177
00:08:59,210 --> 00:09:03,080
Were able to get your particular value based on index values.

178
00:09:03,080 --> 00:09:09,785
That's a OK. That's fine.

179
00:09:09,785 --> 00:09:12,739
No, I want to get range of values.

180
00:09:12,739 --> 00:09:14,465
So what is that?

181
00:09:14,465 --> 00:09:20,045
I will explain you get a range of values.

182
00:09:20,045 --> 00:09:21,695
So what is this means?

183
00:09:21,695 --> 00:09:28,700
Suppose I want to

184
00:09:28,700 --> 00:09:35,165
get from six to 23, right?

185
00:09:35,165 --> 00:09:37,700
I want to get from sixth value.

186
00:09:37,700 --> 00:09:41,330
Value six means index position is at two, right?

187
00:09:41,330 --> 00:09:46,085
Gyro Pfizer for is at 16 is 22 index.

188
00:09:46,085 --> 00:09:47,810
So from second index two,

189
00:09:47,810 --> 00:09:53,330
I want to get 2345 up to phi index I want to get, right.

190
00:09:53,330 --> 00:09:56,255
See already we how you are x in this way.

191
00:09:56,255 --> 00:09:57,740
Let me do step-by-step.

192
00:09:57,740 --> 00:10:01,010
So if I am, if I want to display an entire array,

193
00:10:01,010 --> 00:10:02,885
what I could do, right?

194
00:10:02,885 --> 00:10:07,110
This is the way how I can get my entire array.

195
00:10:08,650 --> 00:10:13,980
But what I am doing is I want to get,

196
00:10:14,590 --> 00:10:21,335
let's say number six means index two.

197
00:10:21,335 --> 00:10:23,855
Suppose let's say first index to then enter,

198
00:10:23,855 --> 00:10:25,355
see that what you are getting,

199
00:10:25,355 --> 00:10:27,815
index two is nothing but sixth value,

200
00:10:27,815 --> 00:10:29,270
like this operations again,

201
00:10:29,270 --> 00:10:33,215
same as your string operations already we discussed about string operations, right?

202
00:10:33,215 --> 00:10:35,465
Same exit operations.

203
00:10:35,465 --> 00:10:38,285
So second index to up to last,

204
00:10:38,285 --> 00:10:40,025
what are the values you are having in your array?

205
00:10:40,025 --> 00:10:42,635
You are getting all range of values from index two.

206
00:10:42,635 --> 00:10:43,850
Index two is six, right?

207
00:10:43,850 --> 00:10:48,425
From there you are getting, suppose I want to get from index one.

208
00:10:48,425 --> 00:10:50,525
Index one is nothing but fourth while right, right,

209
00:10:50,525 --> 00:10:53,645
value for not fourth value, value four.

210
00:10:53,645 --> 00:10:55,370
So from this value I want to get

211
00:10:55,370 --> 00:10:59,015
all the values and then just to provide index1 and see the output.

212
00:10:59,015 --> 00:11:06,780
That's it. But I want to start from index one and I want to get after the two values,

213
00:11:06,970 --> 00:11:10,670
C. From that value,

214
00:11:10,670 --> 00:11:12,500
I want to get two values.

215
00:11:12,500 --> 00:11:14,720
I want to get some three values.

216
00:11:14,720 --> 00:11:16,500
That's it.

217
00:11:17,230 --> 00:11:18,815
Ok?

218
00:11:18,815 --> 00:11:21,830
So this is the way how you can get range of values.

219
00:11:21,830 --> 00:11:25,850
So guys, you just practice once so that you can get some clarity.

220
00:11:25,850 --> 00:11:27,365
So only by watching this,

221
00:11:27,365 --> 00:11:31,070
you can't produce some practical knowledge, right?

222
00:11:31,070 --> 00:11:33,785
Just to do your practice simultaneously.

223
00:11:33,785 --> 00:11:35,900
Okay, fine.

224
00:11:35,900 --> 00:11:44,825
So range of values you are going to get using Echo, euler x.

225
00:11:44,825 --> 00:11:47,990
All values. This is the syntax.

226
00:11:47,990 --> 00:11:50,000
But offer that I wanted to get.

227
00:11:50,000 --> 00:11:54,530
Suppose second index to see if this will.

228
00:11:54,530 --> 00:11:57,680
Do you have to remember that this will

229
00:11:57,680 --> 00:12:05,730
display index two to last values.

230
00:12:07,720 --> 00:12:16,160
Then dollar x, suppose I want to get right second index two.

231
00:12:16,160 --> 00:12:18,770
From there onwards I wanted to get three values.

232
00:12:18,770 --> 00:12:22,460
That's it. So this

233
00:12:22,460 --> 00:12:29,410
will display index two.

234
00:12:29,410 --> 00:12:35,065
And from there, three values.

235
00:12:35,065 --> 00:12:38,095
That's acting right.

236
00:12:38,095 --> 00:12:43,540
That's fine. Now, I want to get how many values are there in my array C,

237
00:12:43,540 --> 00:12:49,090
that 1234567 values are there, right?

238
00:12:49,090 --> 00:12:52,075
So I want to get the length of my array, right?

239
00:12:52,075 --> 00:12:56,755
So get the length of an array.

240
00:12:56,755 --> 00:12:59,635
So guys, we know, suppose if some string is there,

241
00:12:59,635 --> 00:13:03,475
how can we get the length of the string already we have seen, right?

242
00:13:03,475 --> 00:13:06,885
So simply dollar, curly brace, hash.

243
00:13:06,885 --> 00:13:11,135
Our variable x, right?

244
00:13:11,135 --> 00:13:13,535
So body here we are having some array.

245
00:13:13,535 --> 00:13:17,430
So let say our arrays.

246
00:13:19,030 --> 00:13:22,715
This one, but I want to get length of the entire array.

247
00:13:22,715 --> 00:13:25,475
So NTIA is nothing but this is right.

248
00:13:25,475 --> 00:13:28,115
So for that you are going to find length.

249
00:13:28,115 --> 00:13:31,190
So already we defined on our command line, our array.

250
00:13:31,190 --> 00:13:33,380
Now I am displaying the length of that array.

251
00:13:33,380 --> 00:13:35,870
We're having seven values.

252
00:13:35,870 --> 00:13:37,355
Right?

253
00:13:37,355 --> 00:13:40,670
Now, guys here one more important point.

254
00:13:40,670 --> 00:13:43,520
This will do your entire array length.

255
00:13:43,520 --> 00:13:51,155
But I want to get, get the length of len,

256
00:13:51,155 --> 00:13:57,180
of particular index value.

257
00:13:58,000 --> 00:14:04,460
Suppose index value is nothing but see for thes at index one, right?

258
00:14:04,460 --> 00:14:07,330
Let me take 0123.

259
00:14:07,330 --> 00:14:09,950
Fourth index value length.

260
00:14:09,950 --> 00:14:11,960
I want to find fourth index.

261
00:14:11,960 --> 00:14:13,355
You're having shell word, right?

262
00:14:13,355 --> 00:14:14,465
Shelley's, I mean shell,

263
00:14:14,465 --> 00:14:16,550
string shall is having phi.

264
00:14:16,550 --> 00:14:21,380
Let us write, just observed that I'm giving forth and see the output you are getting.

265
00:14:21,380 --> 00:14:25,400
So without hash what you are getting index for whatever the value is

266
00:14:25,400 --> 00:14:29,615
there in your x that we are getting so far that I want to find length. That's it.

267
00:14:29,615 --> 00:14:31,230
Very simple.

268
00:14:31,230 --> 00:14:32,380
Right?

269
00:14:32,380 --> 00:14:35,500
So this is the way how to find length of your array and length

270
00:14:35,500 --> 00:14:39,145
of particular value from your array.

271
00:14:39,145 --> 00:14:41,750
Let me copy this.

272
00:14:46,650 --> 00:14:48,925
And that's it.

273
00:14:48,925 --> 00:14:50,245
Okay?

274
00:14:50,245 --> 00:14:58,495
Okay. Now guys, we are done at different ways to define an array c. You can,

275
00:14:58,495 --> 00:15:00,985
of course, it is not recommended,

276
00:15:00,985 --> 00:15:02,605
but if you want, you can also define in this way.

277
00:15:02,605 --> 00:15:05,545
Suppose I want to define the next steps, some array.

278
00:15:05,545 --> 00:15:09,670
Yes, I can take declared hyphen a array.

279
00:15:09,670 --> 00:15:14,730
So here also I can do it X equals to some 4-5-6 days one of the array.

280
00:15:14,730 --> 00:15:16,625
See that echo.

281
00:15:16,625 --> 00:15:20,615
Dollar, your ex, entire elements which are there,

282
00:15:20,615 --> 00:15:23,120
are values which are there in your X.

283
00:15:23,120 --> 00:15:25,070
So I mean this is also valid syntax.

284
00:15:25,070 --> 00:15:26,900
We can use it but not recommended.

285
00:15:26,900 --> 00:15:29,210
You can use one literately x equals two.

286
00:15:29,210 --> 00:15:30,680
Right?

287
00:15:30,680 --> 00:15:33,440
Now, let's say as of now, right?

288
00:15:33,440 --> 00:15:36,950
Do we have any variable called y?

289
00:15:36,950 --> 00:15:40,530
Yeah, we have let me take some Mother.

290
00:15:42,310 --> 00:15:44,360
I don't know, have any variable,

291
00:15:44,360 --> 00:15:48,890
calls it on my terminal C. Now what I'm doing is as I've no,

292
00:15:48,890 --> 00:15:53,675
I know only one value and I want to make it as an array.

293
00:15:53,675 --> 00:15:56,600
Just, you can write jet of 0 means indexes 0,

294
00:15:56,600 --> 00:15:59,720
interpolation means foster value. I can say 45.

295
00:15:59,720 --> 00:16:03,470
And after some time I came to know that I have one more value

296
00:16:03,470 --> 00:16:07,355
now and I want to store this into my array then just write a giraffe one,

297
00:16:07,355 --> 00:16:11,790
an odd title display you assert and see the output what you are getting.

298
00:16:16,480 --> 00:16:20,930
You are getting an array means based on index.

299
00:16:20,930 --> 00:16:23,570
Also, you can assign some values to your variable.

300
00:16:23,570 --> 00:16:27,185
So I want to store so and so value in the index position of something,

301
00:16:27,185 --> 00:16:29,840
let's say as of no, you're having only two values, right?

302
00:16:29,840 --> 00:16:33,525
That means these indexes 0 and this is at index one.

303
00:16:33,525 --> 00:16:39,890
Alright, I want to store some value which is at index of phi. Let me do something.

304
00:16:40,080 --> 00:16:42,280
Index file.

305
00:16:42,280 --> 00:16:44,875
Now guys, you are having index 0,

306
00:16:44,875 --> 00:16:48,130
index one, and directly index five between index one and phi,

307
00:16:48,130 --> 00:16:49,750
you actually you have to insert,

308
00:16:49,750 --> 00:16:52,285
I'm in sequence 234,

309
00:16:52,285 --> 00:16:54,040
but we are not taking them.

310
00:16:54,040 --> 00:16:55,750
No problem. But if it display,

311
00:16:55,750 --> 00:16:59,270
you see how you're getting your output.

312
00:16:59,610 --> 00:17:02,230
So you're, by seeing this,

313
00:17:02,230 --> 00:17:03,640
you may feel that,

314
00:17:03,640 --> 00:17:06,100
right, there are three values and index,

315
00:17:06,100 --> 00:17:08,245
this is 0, this is one and this is two.

316
00:17:08,245 --> 00:17:13,645
But we are hard coding like the index of last values we have given index phi.

317
00:17:13,645 --> 00:17:16,170
We are not taking default index values.

318
00:17:16,170 --> 00:17:20,300
That's why I suppose if I try to display indexer to what is the value

319
00:17:20,300 --> 00:17:24,530
actually help you get in case if this array is defined in a normal way,

320
00:17:24,530 --> 00:17:27,965
then you have to get 45 is at index position two,

321
00:17:27,965 --> 00:17:29,225
but c dot would what you are getting,

322
00:17:29,225 --> 00:17:32,315
you are getting empty because this is 0.

323
00:17:32,315 --> 00:17:33,620
We define this here.

324
00:17:33,620 --> 00:17:34,895
This is index one.

325
00:17:34,895 --> 00:17:40,610
We define here an offer that directly we are defining Jeddah phi means index file.

326
00:17:40,610 --> 00:17:45,815
Now between this one and phi 342,

327
00:17:45,815 --> 00:17:47,510
there are no values and that's it.

328
00:17:47,510 --> 00:17:52,145
But if you try to display the fifth index value, you are getting.

329
00:17:52,145 --> 00:17:53,075
Right?

330
00:17:53,075 --> 00:17:56,225
So that is called a based on index.

331
00:17:56,225 --> 00:17:57,680
That's it.

332
00:17:57,680 --> 00:17:59,150
Okay?

333
00:17:59,150 --> 00:18:04,835
Okay, fine. Now last one is reading an array values with 3D command.

334
00:18:04,835 --> 00:18:07,835
So guys, you know, in your shell script write,

335
00:18:07,835 --> 00:18:11,850
you can write some real hyphen p, enter your number.

336
00:18:12,370 --> 00:18:15,950
Right? And I only or taking some, let's say x,

337
00:18:15,950 --> 00:18:22,625
let say some p. And I am defining some 45 right now with our P,

338
00:18:22,625 --> 00:18:24,845
You can see 45, same a,

339
00:18:24,845 --> 00:18:27,185
I want to read an array, right?

340
00:18:27,185 --> 00:18:28,670
Let's say if you want to read an array,

341
00:18:28,670 --> 00:18:31,820
simply read hyphen a, right.

342
00:18:31,820 --> 00:18:33,575
Take any variable name.

343
00:18:33,575 --> 00:18:38,720
Let's say suppose my array I'm taking,

344
00:18:38,720 --> 00:18:42,095
you can take any variable in here and it is waiting.

345
00:18:42,095 --> 00:18:44,045
You have to provide a suppose numbers.

346
00:18:44,045 --> 00:18:46,460
You have to provide your numbers with spaces, guys,

347
00:18:46,460 --> 00:18:49,955
for 78, some string.

348
00:18:49,955 --> 00:18:53,420
Again, some numbers, then offer that just enter.

349
00:18:53,420 --> 00:18:55,535
Now your array has been created.

350
00:18:55,535 --> 00:18:59,970
Now see that what you are having in your array.

351
00:19:00,010 --> 00:19:02,300
Oh sorry.

352
00:19:02,300 --> 00:19:04,355
The syntax right?

353
00:19:04,355 --> 00:19:06,080
At the rate, all value.

354
00:19:06,080 --> 00:19:11,585
So I want to see, see that you are getting.

355
00:19:11,585 --> 00:19:15,650
So this is the way how you can read your array from command line with LPA fried command.

356
00:19:15,650 --> 00:19:18,650
So what you have to do, just include this in your shell script.

357
00:19:18,650 --> 00:19:21,125
Write, let me write simple shell script,

358
00:19:21,125 --> 00:19:24,335
read array dot SH,

359
00:19:24,335 --> 00:19:27,635
I think is the very simple bin bash.

360
00:19:27,635 --> 00:19:35,405
So I'm writing suppose echo iPhone en, enter array values.

361
00:19:35,405 --> 00:19:36,170
Right?

362
00:19:36,170 --> 00:19:40,010
Then I'm taking the read hyphen yea, my array.

363
00:19:40,010 --> 00:19:41,450
Right?

364
00:19:41,450 --> 00:19:43,640
Then after that I'm going to display a code that

365
00:19:43,640 --> 00:19:48,065
given array values sees or the given array is.

366
00:19:48,065 --> 00:19:50,195
So here I'm going to display my array,

367
00:19:50,195 --> 00:19:52,835
my array, right?

368
00:19:52,835 --> 00:19:55,140
All values.

369
00:19:55,240 --> 00:19:57,515
That's it.

370
00:19:57,515 --> 00:20:04,580
Just run it. So you enter array values.

371
00:20:04,580 --> 00:20:07,504
Let me lay arithmetic.

372
00:20:07,504 --> 00:20:09,965
Some numbers like this one,

373
00:20:09,965 --> 00:20:11,510
any values you can provide, right?

374
00:20:11,510 --> 00:20:18,870
Even shell, Python or all are scripting.

375
00:20:20,770 --> 00:20:23,330
Just enter.

376
00:20:23,330 --> 00:20:26,195
Let's see what are the values you enter.

377
00:20:26,195 --> 00:20:30,485
Those values you are getting as it is while displaying your array.

378
00:20:30,485 --> 00:20:35,850
Okay, how good I thank you for watching this video.

