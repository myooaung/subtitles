1
00:00:02,190 --> 00:00:04,660
Hi friends. In this video,

2
00:00:04,660 --> 00:00:09,805
we are going to discuss the next functionality of your set command functionality or

3
00:00:09,805 --> 00:00:12,565
the next operation of your set command that is

4
00:00:12,565 --> 00:00:16,510
searching content with sed command from your file.

5
00:00:16,510 --> 00:00:19,705
C. We know that we can do

6
00:00:19,705 --> 00:00:22,915
different operations with your set command

7
00:00:22,915 --> 00:00:26,005
or the different functionalities of your set command.

8
00:00:26,005 --> 00:00:28,930
Or like you know, we will file content,

9
00:00:28,930 --> 00:00:32,740
searching, Find, and Replace, insertion or deletion.

10
00:00:32,740 --> 00:00:36,760
And we can also use some regular expression in your set command.

11
00:00:36,760 --> 00:00:38,260
So already in our previous video,

12
00:00:38,260 --> 00:00:41,920
we have seen viewing file content with your set command.

13
00:00:41,920 --> 00:00:44,155
Now we are going to work with searching.

14
00:00:44,155 --> 00:00:46,315
So what is searching?

15
00:00:46,315 --> 00:00:50,560
So you just assume that you have some number of lines in your file.

16
00:00:50,560 --> 00:00:55,000
And you want to print the lines which are having your required word,

17
00:00:55,000 --> 00:00:59,890
or you want to delete the lines which are having your required work.

18
00:00:59,890 --> 00:01:00,940
Right?

19
00:01:00,940 --> 00:01:02,470
So for that purpose,

20
00:01:02,470 --> 00:01:05,080
how you can use your set command, right?

21
00:01:05,080 --> 00:01:06,940
Let me open my terminal.

22
00:01:06,940 --> 00:01:10,270
See you the basic syntax of your sed command,

23
00:01:10,270 --> 00:01:13,075
right, said with options, then quotations.

24
00:01:13,075 --> 00:01:15,520
That quotation is maybe single quotations or double quotations.

25
00:01:15,520 --> 00:01:22,120
Guys. Say, suppose I want to print the lines from three to six.

26
00:01:22,120 --> 00:01:26,070
So already we know that how to use that from our previous video.

27
00:01:26,070 --> 00:01:28,129
You can also use double quotations,

28
00:01:28,129 --> 00:01:31,580
but there is a small difference between double quotation, single condition.

29
00:01:31,580 --> 00:01:34,190
We are going to see that in this video.

30
00:01:34,190 --> 00:01:35,525
Right?

31
00:01:35,525 --> 00:01:40,790
So here you are printing the line numbers information

32
00:01:40,790 --> 00:01:46,760
or you are printing the content of your file based on your required line numbers.

33
00:01:46,760 --> 00:01:51,440
But now I want to print the lines which are having you are required word

34
00:01:51,440 --> 00:01:56,495
or I want to delete the lines which are having your required word. Let me do it.

35
00:01:56,495 --> 00:02:01,670
Suppose I want to print the lines which are having a covert,

36
00:02:01,670 --> 00:02:03,590
which are having a coin.

37
00:02:03,590 --> 00:02:06,380
So to print the ADA, use p whenever if you are using P,

38
00:02:06,380 --> 00:02:08,690
you have to use iPhone Yan'an option also.

39
00:02:08,690 --> 00:02:10,940
Why? Because already we know that by

40
00:02:10,940 --> 00:02:13,715
default said we'll display the information from your file.

41
00:02:13,715 --> 00:02:16,760
Now with the pre, you are going to print one more time.

42
00:02:16,760 --> 00:02:20,855
You are information, duplicate information you are getting to suppress that.

43
00:02:20,855 --> 00:02:23,570
You had to use hyphen yen, right?

44
00:02:23,570 --> 00:02:26,780
So echo a p, then you are fine.

45
00:02:26,780 --> 00:02:31,880
Now you are going to get the lines which are having echo word. See that.

46
00:02:31,880 --> 00:02:34,460
Not only that you can also search for,

47
00:02:34,460 --> 00:02:35,600
suppose I have a need to print the,

48
00:02:35,600 --> 00:02:38,240
the lines which are having a bin.

49
00:02:38,240 --> 00:02:42,240
Or I wanted to print the lines which are having some, if.

50
00:02:42,550 --> 00:02:44,165
That's it.

51
00:02:44,165 --> 00:02:46,730
So guys, remember that you can also use double quotations.

52
00:02:46,730 --> 00:02:51,360
No problem. Let me do that.

53
00:02:53,110 --> 00:02:57,080
Right? So you are getting same information whenever,

54
00:02:57,080 --> 00:02:59,690
if you use even double quotations also.

55
00:02:59,690 --> 00:03:06,410
Now my requirement is I want to print the lines which are having

56
00:03:06,410 --> 00:03:16,430
either a CO or which are having some, let's say bin.

57
00:03:16,430 --> 00:03:22,235
So I want to print the lines which are having Either bin or Jaco or one more role also,

58
00:03:22,235 --> 00:03:23,705
you can take it, right?

59
00:03:23,705 --> 00:03:27,755
Whenever if you want to search with multiple words in this way,

60
00:03:27,755 --> 00:03:33,650
you ought to use hierophany extra option to execute multiple commands on your file.

61
00:03:33,650 --> 00:03:38,690
See that you are getting the lines which are having Either bin or echo.

62
00:03:38,690 --> 00:03:44,160
Not only that, it can execute one more command, hyphen e. Then.

63
00:03:45,880 --> 00:03:50,330
See that wherever you are having IV or echo,

64
00:03:50,330 --> 00:03:54,390
or when you are printing those lines.

65
00:03:54,970 --> 00:03:58,130
Right? Fine.

66
00:03:58,130 --> 00:04:01,565
Now, let me do one thing.

67
00:04:01,565 --> 00:04:04,715
Echo hyphenation.

68
00:04:04,715 --> 00:04:12,575
So let me take simply again once again ECO P. Then he were file.txt.

69
00:04:12,575 --> 00:04:13,535
Right?

70
00:04:13,535 --> 00:04:20,305
What happened? Sorry. Not like oh, I have an n, right?

71
00:04:20,305 --> 00:04:22,855
It's the sed command.

72
00:04:22,855 --> 00:04:24,955
Right? Fine.

73
00:04:24,955 --> 00:04:29,305
Now guys, what I'm doing is sometimes while writing your shell scripts, right?

74
00:04:29,305 --> 00:04:33,985
What it will do is based on required what unit two such that what you are,

75
00:04:33,985 --> 00:04:36,085
maybe you're going to read from command line.

76
00:04:36,085 --> 00:04:38,500
So let say some variable in that variable,

77
00:04:38,500 --> 00:04:40,525
let say you have a CFO,

78
00:04:40,525 --> 00:04:42,955
or let's say such word,

79
00:04:42,955 --> 00:04:45,250
it goes to simply, I'm taking echo.

80
00:04:45,250 --> 00:04:47,830
Now inside of your search what you may have anything.

81
00:04:47,830 --> 00:04:53,575
But based on that variable I had two such than simply said, hyphen yen.

82
00:04:53,575 --> 00:04:55,840
First, let me go with single quotation.

83
00:04:55,840 --> 00:04:59,995
So guys, I need to substitute the variable value.

84
00:04:59,995 --> 00:05:03,340
And I notice such it. See the output.

85
00:05:03,340 --> 00:05:07,855
You are not getting anything because whenever if you're single quotation, it won't work.

86
00:05:07,855 --> 00:05:10,060
I made one sub shoot your variable value.

87
00:05:10,060 --> 00:05:14,965
Instead of that, it will look exactly dollar SEN Moscow W word.

88
00:05:14,965 --> 00:05:17,380
But you're going to have this type of war inside of this file.

89
00:05:17,380 --> 00:05:20,680
But our intention is a value which is there

90
00:05:20,680 --> 00:05:24,220
inside of this variable that we do that what you need to such it.

91
00:05:24,220 --> 00:05:28,180
So whenever if you want to substitute a variable inside of your set command,

92
00:05:28,180 --> 00:05:29,680
you how to use double quotations.

93
00:05:29,680 --> 00:05:32,395
Now see that, right?

94
00:05:32,395 --> 00:05:34,300
So this is the difference between

95
00:05:34,300 --> 00:05:37,105
single quotation and double quotation with your set command.

96
00:05:37,105 --> 00:05:39,055
Like, fine.

97
00:05:39,055 --> 00:05:44,425
Now, what I'm doing is so there is,

98
00:05:44,425 --> 00:05:47,275
you know, how to delete a lines.

99
00:05:47,275 --> 00:05:50,545
Suppose I want the lid from one to two, right?

100
00:05:50,545 --> 00:05:52,720
So you can do in this way.

101
00:05:52,720 --> 00:05:54,790
So guys, you are not,

102
00:05:54,790 --> 00:05:58,015
I mean, deleting material file content, right?

103
00:05:58,015 --> 00:05:59,650
Let me do one more thing.

104
00:05:59,650 --> 00:06:06,115
Let's say I want to delete from ten to nine to last line.

105
00:06:06,115 --> 00:06:07,300
Right?

106
00:06:07,300 --> 00:06:09,129
This is the remaining information.

107
00:06:09,129 --> 00:06:15,475
Now guys, if I place instead of D experimentally D, then reverse action.

108
00:06:15,475 --> 00:06:24,025
That means the lines which are other than this range will delete c that right,

109
00:06:24,025 --> 00:06:25,935
one to nine, it is deleting.

110
00:06:25,935 --> 00:06:28,385
The remaining lines are not deleting.

111
00:06:28,385 --> 00:06:33,455
That is the on elementary D option, right?

112
00:06:33,455 --> 00:06:35,795
We forget to discuss this in our previous video.

113
00:06:35,795 --> 00:06:37,040
Right?

114
00:06:37,040 --> 00:06:43,445
Now, my requirement is I want to delete the lines which are having,

115
00:06:43,445 --> 00:06:47,900
suppose echo word right in your file.

116
00:06:47,900 --> 00:06:52,715
Yes, they mining lines your getting right. Fine.

117
00:06:52,715 --> 00:06:58,400
Now what I want to do is I want to delete the lines which are not having a code.

118
00:06:58,400 --> 00:06:59,570
Be clear.

119
00:06:59,570 --> 00:07:03,125
I wanted to delete the lines which are not having echo.

120
00:07:03,125 --> 00:07:07,715
So basing your realtime instead of p option D option is more useful.

121
00:07:07,715 --> 00:07:11,075
And most of the cases you are not going to use p option.

122
00:07:11,075 --> 00:07:13,835
You should have that you are going to use a D option.

123
00:07:13,835 --> 00:07:19,505
Now my requirement is I want to delete the lines which are not having a CO.

124
00:07:19,505 --> 00:07:22,250
That means if I stride forward,

125
00:07:22,250 --> 00:07:25,055
if I use d, what will happen?

126
00:07:25,055 --> 00:07:27,800
It will delete the lines which are having echo.

127
00:07:27,800 --> 00:07:30,995
I mean, whatever the searching what you are using right?

128
00:07:30,995 --> 00:07:32,720
Now, instead of that,

129
00:07:32,720 --> 00:07:36,305
if I make excellent mentally D, then what will happen?

130
00:07:36,305 --> 00:07:39,650
It will delete the lines which are not having a coat.

131
00:07:39,650 --> 00:07:42,830
And if I want to delete the lines which are not

132
00:07:42,830 --> 00:07:45,605
having echo permanently newer virginal file.

133
00:07:45,605 --> 00:07:49,280
What I have to do, I have to include iPhone I option.

134
00:07:49,280 --> 00:07:50,375
Right?

135
00:07:50,375 --> 00:07:56,990
So iPhone I I go no,

136
00:07:56,990 --> 00:07:59,645
r d then your file.

137
00:07:59,645 --> 00:08:02,870
So you know that iPhone I0 is dangerous, right?

138
00:08:02,870 --> 00:08:05,030
Because you are going to modify source file.

139
00:08:05,030 --> 00:08:06,545
So before going to modify it,

140
00:08:06,545 --> 00:08:07,805
if you want to take a backup,

141
00:08:07,805 --> 00:08:10,670
you can also use the iPhone I dot back.

142
00:08:10,670 --> 00:08:13,175
Now see the output, right?

143
00:08:13,175 --> 00:08:14,435
C.

144
00:08:14,435 --> 00:08:18,320
So let us to file file.txt and observed that in that what you

145
00:08:18,320 --> 00:08:21,920
how you how the lines which are having a co right.

146
00:08:21,920 --> 00:08:25,325
And see the original file, I'm in backup file.

147
00:08:25,325 --> 00:08:27,335
It is original file itself.

148
00:08:27,335 --> 00:08:29,210
Okay, so guys here, very,

149
00:08:29,210 --> 00:08:32,570
very important thing is this one.

150
00:08:32,570 --> 00:08:36,725
Excellent Battery D and it is very useful in your real time.

151
00:08:36,725 --> 00:08:41,840
So you are going to delete the lines which are not having your required word.

152
00:08:41,840 --> 00:08:44,840
Right? And guys, here as of now,

153
00:08:44,840 --> 00:08:47,570
I am using only one word if you want to use multiple words,

154
00:08:47,570 --> 00:08:52,655
actually, it is a better or to use regular expressions, right?

155
00:08:52,655 --> 00:08:53,870
So while going forward,

156
00:08:53,870 --> 00:08:56,390
we will see that or not in this video.

157
00:08:56,390 --> 00:09:02,180
In later videos we will see how to delete or how to use multiple words while

158
00:09:02,180 --> 00:09:08,480
searching your words in a given file with your set command, right?

159
00:09:08,480 --> 00:09:12,270
Okay. Thank you for watching this video.

