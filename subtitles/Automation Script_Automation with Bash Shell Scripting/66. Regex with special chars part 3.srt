1
00:00:00,020 --> 00:00:06,045
Prince, We have seen some of the special characters to create a pattern.

2
00:00:06,045 --> 00:00:12,225
An already we use that pattern in order let expressions for your set command, right?

3
00:00:12,225 --> 00:00:13,560
If you go through loss of two videos,

4
00:00:13,560 --> 00:00:17,249
you will come to know some other special characters to create your patterns.

5
00:00:17,249 --> 00:00:22,140
Now here we are going to see some more special characters to create your patterns.

6
00:00:22,140 --> 00:00:24,525
And we're also going to see how to use

7
00:00:24,525 --> 00:00:28,700
those patrons in your regular expression solves sed command, right?

8
00:00:28,700 --> 00:00:31,550
So we are going to see these three special characters,

9
00:00:31,550 --> 00:00:34,730
square brackets, curly braces, and then parenthesis.

10
00:00:34,730 --> 00:00:36,515
Let me go with one by one.

11
00:00:36,515 --> 00:00:39,020
The very first one is square brackets.

12
00:00:39,020 --> 00:00:41,480
So guys, these are used to a,

13
00:00:41,480 --> 00:00:44,510
matches any single character in a list.

14
00:00:44,510 --> 00:00:47,225
That means just assume that first of all,

15
00:00:47,225 --> 00:00:49,010
you how some list.

16
00:00:49,010 --> 00:00:52,505
And in that you are going to mention some letters, some characters.

17
00:00:52,505 --> 00:00:58,340
Let's say I'm going to represent a IOU, anything.

18
00:00:58,340 --> 00:00:59,945
Right?

19
00:00:59,945 --> 00:01:03,530
Now, if you use this pattern,

20
00:01:03,530 --> 00:01:10,670
now your study is going to look to match either or either either o, right?

21
00:01:10,670 --> 00:01:14,270
Or either o or r then r, u.

22
00:01:14,270 --> 00:01:17,960
So it is going to take anyone of that, right?

23
00:01:17,960 --> 00:01:21,020
It is trying to match for at least anyone of

24
00:01:21,020 --> 00:01:24,845
the character in a given line or in a given text file.

25
00:01:24,845 --> 00:01:29,220
Let me explain this with an example from my command line.

26
00:01:30,790 --> 00:01:34,115
So we have a file called this one.

27
00:01:34,115 --> 00:01:37,940
Now, initially, I am trying to look I am trying to print

28
00:01:37,940 --> 00:01:43,070
the lines which are having put word from your file.

29
00:01:43,070 --> 00:01:47,615
Yes, I'm getting now my requirement is if you are doing here guys,

30
00:01:47,615 --> 00:01:56,045
you hose put port somewhere, PYT.

31
00:01:56,045 --> 00:01:57,020
Right?

32
00:01:57,020 --> 00:01:59,915
Now, I want to write a pattern such that,

33
00:01:59,915 --> 00:02:09,020
that pattern has to match for either port or part or PYT.

34
00:02:09,020 --> 00:02:11,570
First of all, after these three words,

35
00:02:11,570 --> 00:02:15,680
starting and ending characters are same that way.

36
00:02:15,680 --> 00:02:20,960
Just write P, then some space here we need to fill it, then T.

37
00:02:20,960 --> 00:02:26,645
So what is the required letter or character to match for first 1,

38
00:02:26,645 --> 00:02:28,910
second, 1, third, 1 y.

39
00:02:28,910 --> 00:02:31,205
So any one of that for first 1,

40
00:02:31,205 --> 00:02:32,645
second, 1, third, 1 way.

41
00:02:32,645 --> 00:02:35,570
That's why you had to write a list which consists

42
00:02:35,570 --> 00:02:40,430
of you will not need to follow any order. You can right away.

43
00:02:40,430 --> 00:02:44,585
You also, right now the meaningful this is,

44
00:02:44,585 --> 00:02:49,520
it is going to represent very first what is P from this list,

45
00:02:49,520 --> 00:02:53,435
you will take one character and then t. So first one is,

46
00:02:53,435 --> 00:03:00,875
BUT then again, second it will try to consider P war t,

47
00:03:00,875 --> 00:03:03,875
then it is going to match for this also.

48
00:03:03,875 --> 00:03:08,075
Then p y t d is also going to look for PYT.

49
00:03:08,075 --> 00:03:11,465
Now this pattern is going to represent three words.

50
00:03:11,465 --> 00:03:15,110
So in this way you have to use your square brackets.

51
00:03:15,110 --> 00:03:17,450
Now let me try to use that.

52
00:03:17,450 --> 00:03:22,055
Here in shut off PUT what I'm doing is between p and p,

53
00:03:22,055 --> 00:03:27,065
I may how either you or walk our way nano to follow any order.

54
00:03:27,065 --> 00:03:28,970
You can also write simply YOU also,

55
00:03:28,970 --> 00:03:31,925
because between P and T characters,

56
00:03:31,925 --> 00:03:34,790
I may, how wide our whoa, are you?

57
00:03:34,790 --> 00:03:37,415
Now I want to print the lines which are having

58
00:03:37,415 --> 00:03:42,665
PYT POD ON PUB of the output. We are getting No.

59
00:03:42,665 --> 00:03:47,525
So here PUT POD, PYT, POD, PUT.

60
00:03:47,525 --> 00:03:50,300
Now this is represented in multiple worlds.

61
00:03:50,300 --> 00:03:53,660
This pattern is going to represent three words, right?

62
00:03:53,660 --> 00:03:56,270
So based on that, you are getting the lines.

63
00:03:56,270 --> 00:03:58,790
Not only this C,

64
00:03:58,790 --> 00:04:01,580
i can also write a range of values engine off writing where you are.

65
00:04:01,580 --> 00:04:08,030
You suppose I want to match the words which are either PAT are PBT,

66
00:04:08,030 --> 00:04:09,635
RPC, t. I mean,

67
00:04:09,635 --> 00:04:10,880
let's say first right, sequence.

68
00:04:10,880 --> 00:04:16,520
Suppose I want to match for these words PAD PBD,

69
00:04:16,520 --> 00:04:26,630
or let's say specie di PDD ET EF T.

70
00:04:26,630 --> 00:04:35,255
Let me write something. Pgd, PIT,

71
00:04:35,255 --> 00:04:40,535
or finally, now starting and ending characters are same.

72
00:04:40,535 --> 00:04:42,410
And if you have done a middle, characters,

73
00:04:42,410 --> 00:04:45,650
that range of characters in sequence right here to, I,

74
00:04:45,650 --> 00:04:49,520
orient to vote, right?

75
00:04:49,520 --> 00:04:55,940
So in that case, what I can do is I can write like yay, up to woo.

76
00:04:55,940 --> 00:04:59,375
So not the character between P and T.

77
00:04:59,375 --> 00:05:01,565
Maybe a, maybe be, maybe C.

78
00:05:01,565 --> 00:05:02,780
Likewise out to war.

79
00:05:02,780 --> 00:05:04,970
Now see the output o you are getting.

80
00:05:04,970 --> 00:05:08,464
You are getting either p or PHP,

81
00:05:08,464 --> 00:05:10,985
or yeah, both two only,

82
00:05:10,985 --> 00:05:14,280
because only for them only you have a matching here.

83
00:05:14,710 --> 00:05:16,385
Right?

84
00:05:16,385 --> 00:05:18,090
Fine.

85
00:05:18,090 --> 00:05:23,395
So that is a simple way to use your square brackets.

86
00:05:23,395 --> 00:05:25,165
Not only that guys,

87
00:05:25,165 --> 00:05:27,710
I can write one more thing.

88
00:05:28,830 --> 00:05:34,160
Suppose instead of you are sequence.

89
00:05:34,710 --> 00:05:37,750
Let me write words like this.

90
00:05:37,750 --> 00:05:39,565
So how suppose P8,

91
00:05:39,565 --> 00:05:42,865
I need PAT, PBT matching, PCT matching.

92
00:05:42,865 --> 00:05:44,380
And then after that I

93
00:05:44,380 --> 00:05:54,290
need then I need some,

94
00:05:57,270 --> 00:06:01,100
sorry, it is not a sequence here right?

95
00:06:04,470 --> 00:06:08,120
Under them I need suppose.

96
00:06:14,460 --> 00:06:17,170
So for this set of words,

97
00:06:17,170 --> 00:06:18,805
I need to write a matching word.

98
00:06:18,805 --> 00:06:19,915
I need to write a pattern.

99
00:06:19,915 --> 00:06:23,935
Then first thing starting and ending is same.

100
00:06:23,935 --> 00:06:27,070
Now if you observe for foster three,

101
00:06:27,070 --> 00:06:29,055
there is a sequence a, b, c, not.

102
00:06:29,055 --> 00:06:36,820
So you can write yea 2i or hedge to i or the m2,

103
00:06:36,820 --> 00:06:40,240
q or X to Z.

104
00:06:40,240 --> 00:06:42,160
Now this is the pattern.

105
00:06:42,160 --> 00:06:45,390
It is going to match all these words.

106
00:06:45,390 --> 00:06:48,300
Let me write it this on your command line.

107
00:06:49,960 --> 00:06:53,075
And let me run this and see the output.

108
00:06:53,075 --> 00:06:56,495
That's it. Right?

109
00:06:56,495 --> 00:06:59,120
So that is the uses of your square brackets.

110
00:06:59,120 --> 00:07:00,905
No, the next one is,

111
00:07:00,905 --> 00:07:02,705
let me go with your next one.

112
00:07:02,705 --> 00:07:08,165
Curly braces matches for required number of repetitions.

113
00:07:08,165 --> 00:07:14,315
So first thing is, curly braces are generally we are using to display or variable value.

114
00:07:14,315 --> 00:07:16,160
Now whenever if you are going to use with

115
00:07:16,160 --> 00:07:20,360
your normal set commander let expressions you have to write for your curly braces,

116
00:07:20,360 --> 00:07:23,525
slashes before curly brace on it for these curly brace.

117
00:07:23,525 --> 00:07:24,980
Then between jihad, right?

118
00:07:24,980 --> 00:07:26,704
You weren't required number of repetitions.

119
00:07:26,704 --> 00:07:29,155
I mean, Let's say,

120
00:07:29,155 --> 00:07:33,040
I'm going to write suppose a go high.

121
00:07:33,040 --> 00:07:34,810
Right?

122
00:07:34,810 --> 00:07:38,455
Now I'm using sed command on this, in this way.

123
00:07:38,455 --> 00:07:40,345
So if in that line,

124
00:07:40,345 --> 00:07:44,020
if I have a high,

125
00:07:44,020 --> 00:07:47,875
then I want to put into that line.

126
00:07:47,875 --> 00:07:55,060
Yes, you are getting now let's say I have only one.

127
00:07:55,060 --> 00:08:03,415
Hi. I mean, I know I want to look for there is no match right?

128
00:08:03,415 --> 00:08:10,130
Now. Let me write your file once again.

129
00:08:11,070 --> 00:08:14,125
Yeah, here it is better I can use this.

130
00:08:14,125 --> 00:08:17,380
This, this, yeah. No, actually,

131
00:08:17,380 --> 00:08:23,920
my requirement is printed the lines which are having yes.

132
00:08:23,920 --> 00:08:26,560
So three times or more than that.

133
00:08:26,560 --> 00:08:31,030
If there is a match for three times Orpheus.

134
00:08:31,030 --> 00:08:32,275
Right?

135
00:08:32,275 --> 00:08:37,240
Now, see, I am going to right side combined on this.

136
00:08:37,240 --> 00:08:38,380
Let me write it.

137
00:08:38,380 --> 00:08:45,730
Said printed the lines which are having this but yes.

138
00:08:45,730 --> 00:08:47,470
Is three times.

139
00:08:47,470 --> 00:08:48,880
Three times, yes.

140
00:08:48,880 --> 00:08:51,205
If then only printed that lines,

141
00:08:51,205 --> 00:08:53,510
otherwise don't print the line.

142
00:08:53,670 --> 00:08:58,060
See that? The lines which are having three times yes,

143
00:08:58,060 --> 00:08:59,965
those lines only you are getting.

144
00:08:59,965 --> 00:09:01,060
Right?

145
00:09:01,060 --> 00:09:05,095
If you want to get exactly only for three times obvious, right?

146
00:09:05,095 --> 00:09:07,015
Then what you have to do after yes,

147
00:09:07,015 --> 00:09:10,330
you have some space, you know how to represent the space backslash.

148
00:09:10,330 --> 00:09:16,760
Now see that we are getting only the line which are having is three times this.

149
00:09:17,220 --> 00:09:18,730
Ok?

150
00:09:18,730 --> 00:09:24,325
No, I am writing either three times or maybe four times.

151
00:09:24,325 --> 00:09:26,500
Three times, 44 times.

152
00:09:26,500 --> 00:09:27,940
See that?

153
00:09:27,940 --> 00:09:30,070
More than three times?

154
00:09:30,070 --> 00:09:32,170
Maybe three times or four times or five times,

155
00:09:32,170 --> 00:09:34,000
or maybe infinite number of times.

156
00:09:34,000 --> 00:09:35,690
I see that.

157
00:09:35,920 --> 00:09:39,020
So if you write only three, right?

158
00:09:39,020 --> 00:09:43,010
Three times, yes, matching three comma 43 to four,

159
00:09:43,010 --> 00:09:45,185
maybe three times or four times.

160
00:09:45,185 --> 00:09:46,130
Right.

161
00:09:46,130 --> 00:09:49,880
So I guess I'm I'm looking for a word not in a something.

162
00:09:49,880 --> 00:09:57,290
Suppose if you observe somewhere here this offer that you're having one more extra.

163
00:09:57,290 --> 00:09:58,085
Yes.

164
00:09:58,085 --> 00:10:00,935
But I am looking for exact matching.

165
00:10:00,935 --> 00:10:03,620
Only this an S3 times the 5x after yes,

166
00:10:03,620 --> 00:10:06,260
you should have a space not to represent that space.

167
00:10:06,260 --> 00:10:08,690
I'm using here a slash b.

168
00:10:08,690 --> 00:10:13,790
Three comma means maybe three times or maybe four times, yes.

169
00:10:13,790 --> 00:10:15,680
Or fight anxious like that.

170
00:10:15,680 --> 00:10:16,880
So only for this yes,

171
00:10:16,880 --> 00:10:18,680
you are applying this.

172
00:10:18,680 --> 00:10:23,000
So that is the uses of your curly brace.

173
00:10:23,000 --> 00:10:26,030
Now last one is parenthesis.

174
00:10:26,030 --> 00:10:29,045
Actually this is a group matching.

175
00:10:29,045 --> 00:10:34,010
This will search for Juno or more war, whole sequence.

176
00:10:34,010 --> 00:10:35,315
Right?

177
00:10:35,315 --> 00:10:37,890
Let me explain this here.

178
00:10:38,770 --> 00:10:43,790
So is there any required thing in this? Let me check it.

179
00:10:43,790 --> 00:10:53,255
Or yeah, I will write one more thing.

180
00:10:53,255 --> 00:10:58,205
Okay, so this, this line and this line.

181
00:10:58,205 --> 00:11:00,215
So in this line,

182
00:11:00,215 --> 00:11:03,170
house somewhere ASD on in this lane,

183
00:11:03,170 --> 00:11:06,515
you how he is df is the ASD right.

184
00:11:06,515 --> 00:11:07,400
Now.

185
00:11:07,400 --> 00:11:09,170
First of all, I'm writing something already.

186
00:11:09,170 --> 00:11:09,980
We know this.

187
00:11:09,980 --> 00:11:12,860
What is that means? I want to look I want to

188
00:11:12,860 --> 00:11:16,145
print out the lines which are having yay yes, vf work.

189
00:11:16,145 --> 00:11:19,860
So now you're going to get to do those two lines.

190
00:11:20,620 --> 00:11:23,660
So yeah, yeah, I'll show you how he HDF is,

191
00:11:23,660 --> 00:11:25,460
df is the, is the,

192
00:11:25,460 --> 00:11:30,350
the lines which are having ASD F dot lines you are getting right

193
00:11:30,350 --> 00:11:35,540
now my requirement is I should have EA S D of the entire world,

194
00:11:35,540 --> 00:11:38,420
at least to two times entire world.

195
00:11:38,420 --> 00:11:43,410
Suppose guys, you know, what is the meaning of my writing?

196
00:11:45,820 --> 00:11:53,000
So you are looking UASB EF yay. Yes.

197
00:11:53,000 --> 00:11:56,225
Def buddy f is two times.

198
00:11:56,225 --> 00:12:00,904
But my requirement is I want to look for AAS BF,

199
00:12:00,904 --> 00:12:02,585
and then immediately ASD,

200
00:12:02,585 --> 00:12:06,900
same pattern should be repeat.

201
00:12:07,030 --> 00:12:11,690
So at that time what you have to do is you want to group your required

202
00:12:11,690 --> 00:12:15,830
a patron so that you can do with the help of parentheses,

203
00:12:15,830 --> 00:12:17,525
but for this parenthesis also,

204
00:12:17,525 --> 00:12:19,640
how to use slash symbol.

205
00:12:19,640 --> 00:12:25,550
Now see the output. You are printing the lines which are having yay SDF two times.

206
00:12:25,550 --> 00:12:27,500
So at least two times is satisfying.

207
00:12:27,500 --> 00:12:30,785
That's why you are getting right.

208
00:12:30,785 --> 00:12:34,310
Let me write one more line in this file itself.

209
00:12:34,310 --> 00:12:36,425
So below this line,

210
00:12:36,425 --> 00:12:42,510
I am writing the ASD F AS BF monotonous or I'm writing something.

211
00:12:43,390 --> 00:12:46,370
Now, I'm trying to look.

212
00:12:46,370 --> 00:12:48,080
Yes, in these two lines,

213
00:12:48,080 --> 00:12:49,520
you how VA is d of two times.

214
00:12:49,520 --> 00:12:52,250
That's why you are getting what I want to print to the lines which are

215
00:12:52,250 --> 00:12:56,000
having the AAAS DFE entire word three times.

216
00:12:56,000 --> 00:13:01,220
Now getting only one line because in second lane you don't know is DEF three times.

217
00:13:01,220 --> 00:13:03,350
That's why you're not getting that line.

218
00:13:03,350 --> 00:13:12,230
So to match, to repeat your entire require patron for your required number of times,

219
00:13:12,230 --> 00:13:15,210
then you ought to go and use a SDF.

220
00:13:15,760 --> 00:13:17,195
Right?

221
00:13:17,195 --> 00:13:23,210
Now guys, I want to print the lines which are having ASD of at least one time.

222
00:13:23,210 --> 00:13:26,180
So you know how good our present at least one time plus symbol.

223
00:13:26,180 --> 00:13:29,390
So one time or more than one time. Now see the output.

224
00:13:29,390 --> 00:13:31,670
You are getting, the lines which are having is the

225
00:13:31,670 --> 00:13:34,235
if at least one time or more than that.

226
00:13:34,235 --> 00:13:39,965
Now, I want to print the lines which are having ASD as a word,

227
00:13:39,965 --> 00:13:42,500
as a word, right?

228
00:13:42,500 --> 00:13:44,720
So before that you should have a space right?

229
00:13:44,720 --> 00:13:46,715
Before sequence, you have space.

230
00:13:46,715 --> 00:13:48,620
Now see the output, what you are getting.

231
00:13:48,620 --> 00:13:53,150
You are not getting this word because a is df is the part of this word.

232
00:13:53,150 --> 00:13:55,070
So before ASD, if you don't have any space,

233
00:13:55,070 --> 00:13:56,615
that is why this is not a separate word.

234
00:13:56,615 --> 00:13:59,840
You are not getting this line and you are not getting this line.

235
00:13:59,840 --> 00:14:03,125
So that is the use of backslash b.

236
00:14:03,125 --> 00:14:10,190
So here we combined backslash B with your grouping and also your curly braces, right?

237
00:14:10,190 --> 00:14:17,900
So guys, these the way how to use your special characters like square brackets,

238
00:14:17,900 --> 00:14:20,390
curly braces, and parentheses.

239
00:14:20,390 --> 00:14:24,195
So here parentheses is very, very important dice.

240
00:14:24,195 --> 00:14:29,680
Okay, to match your entire group for repeated number of times,

241
00:14:29,680 --> 00:14:32,380
you how to group your pattern with the help of

242
00:14:32,380 --> 00:14:35,830
parenthesis and while using parentheses and square brackets,

243
00:14:35,830 --> 00:14:38,920
because, you know, you are going to use square brackets while,

244
00:14:38,920 --> 00:14:41,365
while displaying your variables.

245
00:14:41,365 --> 00:14:42,805
Right?

246
00:14:42,805 --> 00:14:45,760
And to define, while defining functions,

247
00:14:45,760 --> 00:14:50,800
function block you are taking as a curly braces, right?

248
00:14:50,800 --> 00:14:54,310
Or while defining function name or function name,

249
00:14:54,310 --> 00:14:55,644
you are taking parenthesis.

250
00:14:55,644 --> 00:14:59,200
And that's why whenever if you're using a normal set command,

251
00:14:59,200 --> 00:15:05,485
you how to use slash for this either curly braces or for your parenthesis,

252
00:15:05,485 --> 00:15:07,155
but not for square brackets.

253
00:15:07,155 --> 00:15:10,385
Remember this point in your set command.

254
00:15:10,385 --> 00:15:11,420
Okay?

255
00:15:11,420 --> 00:15:13,115
So guys, in the next video,

256
00:15:13,115 --> 00:15:16,955
we are going to use this set command usage,

257
00:15:16,955 --> 00:15:20,675
right, to grip some information.

258
00:15:20,675 --> 00:15:23,045
Yet, I will update that in next video.

259
00:15:23,045 --> 00:15:23,975
Okay. Yes.

260
00:15:23,975 --> 00:15:26,280
Thank you for watching this video.

