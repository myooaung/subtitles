1
00:00:01,370 --> 00:00:06,734
Hyphens will come back to real time practice with shells cooking course.

2
00:00:06,734 --> 00:00:07,994
Friends.

3
00:00:07,994 --> 00:00:13,214
Here we are going to work with some inventory for multiple servers.

4
00:00:13,214 --> 00:00:16,679
See sometimes in your real time knowing you are,

5
00:00:16,679 --> 00:00:17,789
you are going to maintain,

6
00:00:17,789 --> 00:00:19,830
suppose some hundreds of servers,

7
00:00:19,830 --> 00:00:21,854
some of servers, right?

8
00:00:21,854 --> 00:00:26,879
Let's suppose I'm having some servers that might take

9
00:00:26,879 --> 00:00:32,130
four or five serovars I'm having right now supposing this is my local server.

10
00:00:32,130 --> 00:00:34,380
And for all my remote servers,

11
00:00:34,380 --> 00:00:36,430
I need to find out some parameters.

12
00:00:36,430 --> 00:00:39,349
It may be anything like your waist type,

13
00:00:39,349 --> 00:00:43,925
ways version, CPU type, site architecture.

14
00:00:43,925 --> 00:00:45,830
Or suppose if installed on Java,

15
00:00:45,830 --> 00:00:47,749
what is the question of your Java?

16
00:00:47,749 --> 00:00:50,869
So all those things you need to find out on all,

17
00:00:50,869 --> 00:00:52,640
on each and every server.

18
00:00:52,640 --> 00:00:56,225
So if you want to find all these parameters on each and every server,

19
00:00:56,225 --> 00:00:59,210
what you ought to do, you have to login with each and

20
00:00:59,210 --> 00:01:02,704
every server and you have to find out all the values, right?

21
00:01:02,704 --> 00:01:04,954
So instead of finding in that way,

22
00:01:04,954 --> 00:01:07,340
you can also automate this thing.

23
00:01:07,340 --> 00:01:10,115
I mean, what are the parameters you want to find out?

24
00:01:10,115 --> 00:01:12,154
Right? You can automate that.

25
00:01:12,154 --> 00:01:13,444
30 shall skip.

26
00:01:13,444 --> 00:01:18,304
And you can run your shells taped in a single shot on all multiple servers.

27
00:01:18,304 --> 00:01:22,040
Right? Suppose, let me take, I need to find out,

28
00:01:22,040 --> 00:01:30,030
suppose some parameters like let me take waste types and ways for Shen.

29
00:01:30,070 --> 00:01:35,010
Right? Let me take all our capital. We can take anything.

30
00:01:35,410 --> 00:01:37,520
Then.

31
00:01:37,520 --> 00:01:44,119
Architecture type, CPU type.

32
00:01:44,119 --> 00:01:48,125
Not only this, suppose if you have some installed java,

33
00:01:48,125 --> 00:01:50,899
denoted that Java was shen, right?

34
00:01:50,899 --> 00:01:54,140
Suppose you are running some web logic then what is a rational web logic?

35
00:01:54,140 --> 00:01:55,460
If you are running some Tomcat,

36
00:01:55,460 --> 00:01:57,230
what is a washing off your Tomcat?

37
00:01:57,230 --> 00:02:00,890
And these parameters you have to find out on each and every server.

38
00:02:00,890 --> 00:02:04,400
So if you want to find all these values on each and every server,

39
00:02:04,400 --> 00:02:06,199
you have to login with each and every server.

40
00:02:06,199 --> 00:02:09,289
And you need to find out that suppose I have a requirement

41
00:02:09,289 --> 00:02:13,399
that how suppose some hundreds are worse for all a 100 servers.

42
00:02:13,399 --> 00:02:16,670
I need to find out suppose these four values and I need to

43
00:02:16,670 --> 00:02:20,930
export all those four values into a CSV, CSV file.

44
00:02:20,930 --> 00:02:24,380
Then you had to open excel sheet and you have to find

45
00:02:24,380 --> 00:02:27,740
out ways type waves washing our picture pipe on CPU type on a,

46
00:02:27,740 --> 00:02:28,969
on each and every server.

47
00:02:28,969 --> 00:02:34,820
And manually you have to copy those information into your CSV, right?

48
00:02:34,820 --> 00:02:35,974
It will take some time.

49
00:02:35,974 --> 00:02:39,800
Of course we can do it, but unnecessarily you are going to waste your time.

50
00:02:39,800 --> 00:02:40,925
Right?

51
00:02:40,925 --> 00:02:43,640
So finding this type of information on

52
00:02:43,640 --> 00:02:49,099
multiple servers from one place is called suppose inventory.

53
00:02:49,099 --> 00:02:51,274
Inventory script.

54
00:02:51,274 --> 00:02:55,894
Now we are going to design one inventory script.

55
00:02:55,894 --> 00:02:56,900
Right?

56
00:02:56,900 --> 00:03:00,470
That is, automate sorrow our inventory using shell script.

57
00:03:00,470 --> 00:03:05,179
And after finding all you are required parameters or values, whatever.

58
00:03:05,179 --> 00:03:07,430
But other parameters you need.

59
00:03:07,430 --> 00:03:10,339
Finally, through our shell script itself,

60
00:03:10,339 --> 00:03:13,475
I want to export my data into csv file.

61
00:03:13,475 --> 00:03:16,564
So this thing we are going to automate,

62
00:03:16,564 --> 00:03:21,694
just assume you're going to find out some parameters for a hundreds of servers.

63
00:03:21,694 --> 00:03:22,760
Right.

64
00:03:22,760 --> 00:03:25,084
Just assume in case if you want to do it manually,

65
00:03:25,084 --> 00:03:26,839
how much time do we take?

66
00:03:26,839 --> 00:03:30,335
Instead of that, we are going to write him shell script.

67
00:03:30,335 --> 00:03:32,555
Right? See that?

68
00:03:32,555 --> 00:03:39,245
So just assume that first I'm going to find out only these four values, right?

69
00:03:39,245 --> 00:03:44,720
And assume that you are going to use this.

70
00:03:44,720 --> 00:03:46,129
Suppose for a 100 servers,

71
00:03:46,129 --> 00:03:47,780
hundreds of sorrow, whatever it may be.

72
00:03:47,780 --> 00:03:51,269
But here I'm going to take only two servers.

73
00:03:52,150 --> 00:03:55,039
I am going to work with this shell script.

74
00:03:55,039 --> 00:03:57,859
I mean, I'm going to test it by using two servers.

75
00:03:57,859 --> 00:04:01,820
And guys maybe just assume that I'm going to work with.

76
00:04:01,820 --> 00:04:04,820
Suppose Rachel, also open

77
00:04:04,820 --> 00:04:11,000
to see some commands may be similar with your armature and open to.

78
00:04:11,000 --> 00:04:14,030
And some commands maybe differs, right?

79
00:04:14,030 --> 00:04:15,544
So in that case,

80
00:04:15,544 --> 00:04:18,380
how you can handle your shell scripts, right?

81
00:04:18,380 --> 00:04:19,474
That's fine.

82
00:04:19,474 --> 00:04:22,655
And guy, suppose if you are going to login with any server,

83
00:04:22,655 --> 00:04:26,524
definitely you are going to login with one user, right?

84
00:04:26,524 --> 00:04:27,904
With some password.

85
00:04:27,904 --> 00:04:30,559
Just assume that you don't have any possible less authentication.

86
00:04:30,559 --> 00:04:32,330
You have to connect with your remote servers

87
00:04:32,330 --> 00:04:35,135
using password and it will be particular user.

88
00:04:35,135 --> 00:04:40,549
Now in our case, just assume that I'm having same user called DevOps across all users,

89
00:04:40,549 --> 00:04:42,229
I mean across all systems.

90
00:04:42,229 --> 00:04:45,200
And I'm having password called automation.

91
00:04:45,200 --> 00:04:53,285
Right? Now. If you want to execute some commands on your remote server,

92
00:04:53,285 --> 00:04:56,869
you know, you have SSH, right?

93
00:04:56,869 --> 00:05:00,605
Using your SSH, you can run your commands on your remote server.

94
00:05:00,605 --> 00:05:03,290
And one more thing, while learning

95
00:05:03,290 --> 00:05:06,170
your command on the remote server with the help of SSH,

96
00:05:06,170 --> 00:05:07,985
it will prompt your password.

97
00:05:07,985 --> 00:05:11,285
So to our that we are using SSH pass.

98
00:05:11,285 --> 00:05:12,275
Right?

99
00:05:12,275 --> 00:05:15,784
See, first let me form complete command to run

100
00:05:15,784 --> 00:05:19,759
your command on your remote server without to prompting your password.

101
00:05:19,759 --> 00:05:22,624
That is SSH pass.

102
00:05:22,624 --> 00:05:28,489
Iphone IAAF. Suppose in this I am going to have a remote pass.

103
00:05:28,489 --> 00:05:31,670
This is a file. In this I have a my password.

104
00:05:31,670 --> 00:05:36,049
Right? Then as such, right?

105
00:05:36,049 --> 00:05:38,674
So nice. I'm including hyphen and option.

106
00:05:38,674 --> 00:05:44,540
So it will avoid taking history input, right?

107
00:05:44,540 --> 00:05:47,510
That's fine. Now, I need

108
00:05:47,510 --> 00:05:53,599
some options for your SSH only we discussed in our SSH concepts, right?

109
00:05:53,599 --> 00:05:54,754
So what are those means?

110
00:05:54,754 --> 00:05:59,570
Let me so you know, man as such.

111
00:05:59,570 --> 00:06:02,839
So if it come down, you're having hyphen WE Options.

112
00:06:02,839 --> 00:06:05,660
And here we are using hostess heat-seeking nodes,

113
00:06:05,660 --> 00:06:06,949
strict host Tukey checking.

114
00:06:06,949 --> 00:06:10,069
No, we are taking right. So I needed that.

115
00:06:10,069 --> 00:06:12,510
Just let me go with that.

116
00:06:13,630 --> 00:06:16,175
Strict hosted key checking.

117
00:06:16,175 --> 00:06:17,705
I'm going to enable it as,

118
00:06:17,705 --> 00:06:19,430
Sorry, I'm going to disable it.

119
00:06:19,430 --> 00:06:23,404
So it won't ask like yes or no, right?

120
00:06:23,404 --> 00:06:30,935
Even if you want to disable your public authentication public-key as indication,

121
00:06:30,935 --> 00:06:33,530
yes, you can add it to one more hyphen WE option.

122
00:06:33,530 --> 00:06:35,840
That's it, right?

123
00:06:35,840 --> 00:06:40,550
And you are having user called DevOps are the rate.

124
00:06:40,550 --> 00:06:43,009
Now year. We can't fix it for

125
00:06:43,009 --> 00:06:45,365
one server because it is going to work with multiple server.

126
00:06:45,365 --> 00:06:47,300
Let me take some variable here.

127
00:06:47,300 --> 00:06:48,620
That's it.

128
00:06:48,620 --> 00:06:51,780
Now here you need to write some command.

129
00:06:52,320 --> 00:06:56,680
But what the command you want to execute, right?

130
00:06:56,680 --> 00:06:59,799
So guys here, based on with

131
00:06:59,799 --> 00:07:03,594
what server you're going to work at the time your server name will change.

132
00:07:03,594 --> 00:07:05,095
That's why first of all,

133
00:07:05,095 --> 00:07:08,360
I'm going to change this entire thing.

134
00:07:09,000 --> 00:07:11,589
Okay, first I will do one thing.

135
00:07:11,589 --> 00:07:15,909
I will exclude manually and tested Sid DevOps,

136
00:07:15,909 --> 00:07:18,774
let me take any one of the server name.

137
00:07:18,774 --> 00:07:23,124
So where's my local sorrow is also I am treating as one remote server.

138
00:07:23,124 --> 00:07:26,169
Then if config, I need IP address.

139
00:07:26,169 --> 00:07:31,960
So in your real time, you can provide your FQ DNS server name. This thing.

140
00:07:31,960 --> 00:07:33,039
Suppose I want to check

141
00:07:33,039 --> 00:07:42,304
it or is released value.

142
00:07:42,304 --> 00:07:45,889
Let me just run it and see the output neuron missing.

143
00:07:45,889 --> 00:07:52,624
What is that? Ok, I need to probably public authentication has no,

144
00:07:52,624 --> 00:07:55,649
I forgot to do that. Let me write it.

145
00:08:03,820 --> 00:08:08,809
We don't have filed a remote bus.

146
00:08:08,809 --> 00:08:12,350
Let me update my password in this remote pass file.

147
00:08:12,350 --> 00:08:14,855
Other exotic ligand also mentioned your password.

148
00:08:14,855 --> 00:08:17,490
Let me write my password here.

149
00:08:20,850 --> 00:08:23,050
Now let me check it.

150
00:08:23,050 --> 00:08:24,624
Yes, see that?

151
00:08:24,624 --> 00:08:28,659
Now you are able to run your command on your remote server, right?

152
00:08:28,659 --> 00:08:30,699
So I'm going to take one more server,

153
00:08:30,699 --> 00:08:36,145
ask some open to Sarawak now let me run my command on remote server.

154
00:08:36,145 --> 00:08:43,209
Let me copy my o12 IP address one seventy two thirty one.

155
00:08:43,209 --> 00:08:53,209
Let me write 172 dot-dot-dot T1 dot 87.94.

156
00:08:54,630 --> 00:08:57,339
Now let me run this and see the output.

157
00:08:57,339 --> 00:08:59,605
So now you're getting open to information here.

158
00:08:59,605 --> 00:09:03,279
You are getting here, suppose RHO l information, right?

159
00:09:03,279 --> 00:09:08,784
So this now you have a command to run your commands on your remote server.

160
00:09:08,784 --> 00:09:12,024
So this is our complete command, right?

161
00:09:12,024 --> 00:09:15,560
First, let me take it, this perfect command.

162
00:09:19,590 --> 00:09:23,470
So let's to get your waist type right.

163
00:09:23,470 --> 00:09:25,404
You're, you are having this command.

164
00:09:25,404 --> 00:09:26,920
So if you observe here on line,

165
00:09:26,920 --> 00:09:31,360
if you are having named Red Hat Enterprise Linux server on the same command,

166
00:09:31,360 --> 00:09:33,565
if you run for 012, you are getting in this way.

167
00:09:33,565 --> 00:09:36,535
But I need to get only this name part, right?

168
00:09:36,535 --> 00:09:37,765
Then what you have to do,

169
00:09:37,765 --> 00:09:42,669
just run your command and applying a W k, suppose hyphen.

170
00:09:42,669 --> 00:09:45,124
Let me first to grab that line Butler length,

171
00:09:45,124 --> 00:09:50,704
grep, hyphen W, name and see the output.

172
00:09:50,704 --> 00:09:51,845
Right.

173
00:09:51,845 --> 00:09:54,740
Now from that, I don't want to get name equals two.

174
00:09:54,740 --> 00:09:56,029
I need only open to.

175
00:09:56,029 --> 00:09:59,450
Then let me do pipeline AWPA command.

176
00:09:59,450 --> 00:10:05,764
So I am going to separate fields based on this name equals two,

177
00:10:05,764 --> 00:10:10,969
and I am printing $1.2 means second field.

178
00:10:10,969 --> 00:10:12,589
Now see the output, what you are getting.

179
00:10:12,589 --> 00:10:14,479
So if you run online x, you are getting,

180
00:10:14,479 --> 00:10:16,444
sorry, 012 and getting, you are getting in this way.

181
00:10:16,444 --> 00:10:20,900
Suppose if you run the same command on your Linux server.

182
00:10:20,900 --> 00:10:27,539
So you are Linux server IP is not this.

183
00:10:27,870 --> 00:10:33,595
So even though if you have some multiple servers know bottom, same command will walk.

184
00:10:33,595 --> 00:10:35,875
See now you're getting rid identifies lining server.

185
00:10:35,875 --> 00:10:38,140
And I don't want to get some of these quotations,

186
00:10:38,140 --> 00:10:41,469
then what I will do, transfer command you are having.

187
00:10:41,469 --> 00:10:46,465
So transfer, so whatever the quotation places there that I want to replace with empty.

188
00:10:46,465 --> 00:10:48,564
Now see that what you are going to get,

189
00:10:48,564 --> 00:10:53,379
I'm sorry. It's syntax.

190
00:10:53,379 --> 00:10:56,959
Single quotation. Now see the output.

191
00:10:57,120 --> 00:10:59,770
Right? Fine.

192
00:10:59,770 --> 00:11:01,074
So not only this,

193
00:11:01,074 --> 00:11:03,969
we need different types of parameters based on our requirement.

194
00:11:03,969 --> 00:11:05,889
Now we need to modify this command.

195
00:11:05,889 --> 00:11:08,575
Now whatever the command you are having,

196
00:11:08,575 --> 00:11:11,830
if you observe in this entire command, right?

197
00:11:11,830 --> 00:11:16,120
Only. This is the common point is up

198
00:11:16,120 --> 00:11:21,500
to this if you observe where it is, public authentication.

199
00:11:21,750 --> 00:11:25,600
Devops, right?

200
00:11:25,600 --> 00:11:29,650
And this year based on which server you're going to work,

201
00:11:29,650 --> 00:11:31,734
that's our name will change remaining thing, right?

202
00:11:31,734 --> 00:11:36,019
That's what I am doing is I will sail this entire thing.

203
00:11:36,510 --> 00:11:42,140
Ssh options as one variable.

204
00:11:46,500 --> 00:11:52,875
Now what I will do is now instead of running your command now, I will do in this way.

205
00:11:52,875 --> 00:11:56,570
Ssh underscore options. I think he's,

206
00:11:56,570 --> 00:11:59,645
I just, I'm trying to avoid some lengthy commands.

207
00:11:59,645 --> 00:12:01,669
Now inside of this, what you are having already,

208
00:12:01,669 --> 00:12:04,880
we are having whatever you need to execute your command on the remote server.

209
00:12:04,880 --> 00:12:08,944
That's it, right?

210
00:12:08,944 --> 00:12:10,970
That's fine. Okay.

211
00:12:10,970 --> 00:12:15,960
Now guys, let me go with your script to implement.

212
00:12:16,060 --> 00:12:18,214
Nowadays in your hand,

213
00:12:18,214 --> 00:12:19,460
you are having a list of servers.

214
00:12:19,460 --> 00:12:21,740
And one more thing before running this shell script,

215
00:12:21,740 --> 00:12:23,570
before implementing these cells kept it,

216
00:12:23,570 --> 00:12:25,535
just tried to do one thing.

217
00:12:25,535 --> 00:12:33,019
You just save your password in remote past file and username, remote user.

218
00:12:33,019 --> 00:12:39,784
And suppose a list of servers just in this file is stopService.doc or.txt file.

219
00:12:39,784 --> 00:12:42,485
Or the similarly stuffs are words.

220
00:12:42,485 --> 00:12:46,549
So these three files I need to implement our shells clip and

221
00:12:46,549 --> 00:12:50,509
to execute our shell script because see it today.

222
00:12:50,509 --> 00:12:52,609
You may have some password.

223
00:12:52,609 --> 00:12:56,224
Tomorrow you may change your password that in that case,

224
00:12:56,224 --> 00:12:58,339
you don't want to go and open your shell script

225
00:12:58,339 --> 00:13:00,680
and you should not change your password inside of that.

226
00:13:00,680 --> 00:13:04,610
I mean, to avoid changing password inside of shells gave to

227
00:13:04,610 --> 00:13:08,600
what we will do is we will store your password in this file in case if it changes,

228
00:13:08,600 --> 00:13:11,839
will open this file and we will change the password in this file.

229
00:13:11,839 --> 00:13:13,040
Right?

230
00:13:13,040 --> 00:13:16,459
Suppose in tomorrow I want to work with some 50 servers,

231
00:13:16,459 --> 00:13:20,299
then just open this file and list out you're all servers.

232
00:13:20,299 --> 00:13:23,285
So that's why I'm taking these three files first.

233
00:13:23,285 --> 00:13:25,430
So before implementing our shell script,

234
00:13:25,430 --> 00:13:27,770
Let me do one thing.

235
00:13:27,770 --> 00:13:31,400
Vi, remote past.

236
00:13:31,400 --> 00:13:32,945
So here you're already does that.

237
00:13:32,945 --> 00:13:35,540
Just let me save that. Then.

238
00:13:35,540 --> 00:13:37,189
Remote user.

239
00:13:37,189 --> 00:13:42,799
So I'm going to take, as of now, DevOps, that's it.

240
00:13:42,799 --> 00:13:48,260
And I need list off servers.

241
00:13:48,260 --> 00:13:57,305
All right, so here I want to store my all the IP addresses of my all remote servers.

242
00:13:57,305 --> 00:13:59,464
So I'm taking, I'm considering

243
00:13:59,464 --> 00:14:02,749
my local summary is also one of the remote server because I don't want to

244
00:14:02,749 --> 00:14:04,789
create one more server and I don't want to take that as

245
00:14:04,789 --> 00:14:07,940
a remote server simply I'm filling that local server itself.

246
00:14:07,940 --> 00:14:10,594
One remotes are all Nobel and it can work like that.

247
00:14:10,594 --> 00:14:11,644
Right?

248
00:14:11,644 --> 00:14:13,235
So you have one more.

249
00:14:13,235 --> 00:14:15,619
That is one seventy,

250
00:14:15,619 --> 00:14:17,510
two eighty one something.

251
00:14:17,510 --> 00:14:21,004
Let me do this. In your real time guys.

252
00:14:21,004 --> 00:14:23,059
You can provide your IP's, but instead of that,

253
00:14:23,059 --> 00:14:26,795
it's better to provide if q Dn names of your servers.

254
00:14:26,795 --> 00:14:29,569
That's a good practice. Right?

255
00:14:29,569 --> 00:14:35,180
Sum sorrow or some cloud dot something, right?

256
00:14:35,180 --> 00:14:36,875
Nazi.

257
00:14:36,875 --> 00:14:40,700
Nowadays, if you have jury or having your three files,

258
00:14:40,700 --> 00:14:45,679
now I want to implement inventory script invented dot SH.

259
00:14:45,679 --> 00:14:49,774
Let me start this first. Bin bash.

260
00:14:49,774 --> 00:14:52,024
Ok. Nice.

261
00:14:52,024 --> 00:14:53,645
Before running our shell script,

262
00:14:53,645 --> 00:14:58,445
I want to display some message like welcome to inventory Bash shell script.

263
00:14:58,445 --> 00:14:59,329
Right?

264
00:14:59,329 --> 00:15:01,385
Suppose if our Simply Eco inventory,

265
00:15:01,385 --> 00:15:04,474
Welcome to Bash shell script, what it will do.

266
00:15:04,474 --> 00:15:07,024
It will display your message.

267
00:15:07,024 --> 00:15:09,725
But see that first.

268
00:15:09,725 --> 00:15:13,669
When it come to inventory script,

269
00:15:13,669 --> 00:15:19,610
simply suppose if I

270
00:15:19,610 --> 00:15:24,349
run this, it is displaying here.

271
00:15:24,349 --> 00:15:26,314
But I don't want to display in this way.

272
00:15:26,314 --> 00:15:31,369
I want display exactly in the middle of your terminal irrespective of your tunnel size.

273
00:15:31,369 --> 00:15:37,070
So automatically, our shell script has to identify the number of columns in each row.

274
00:15:37,070 --> 00:15:43,039
And automatically it has to place our message in the center of your row, right?

275
00:15:43,039 --> 00:15:45,995
So for that, how you can do it, right?

276
00:15:45,995 --> 00:15:48,454
So let me write some simple code for that.

277
00:15:48,454 --> 00:15:51,930
So it's very easy. Let me do that.

278
00:15:57,840 --> 00:16:05,739
Okay, fine. See what I'm doing is I'm going to define one function first.

279
00:16:05,739 --> 00:16:09,490
The purpose of that function is centering our message,

280
00:16:09,490 --> 00:16:12,670
whatever you are sending to this function,

281
00:16:12,670 --> 00:16:17,829
that message will be displayed incentive, right?

282
00:16:17,829 --> 00:16:20,380
So for that, I am writing my meshes.

283
00:16:20,380 --> 00:16:23,110
And even before printing your messages,

284
00:16:23,110 --> 00:16:29,409
I want to write some header like I will show if I write can print header.

285
00:16:29,409 --> 00:16:32,559
So I will write this as a one function.

286
00:16:32,559 --> 00:16:36,010
So here I am writing,

287
00:16:36,010 --> 00:16:38,740
suppose one more thing, bring to head up.

288
00:16:38,740 --> 00:16:42,589
So between this, so print

289
00:16:42,589 --> 00:16:45,830
out results of one function under defined somewhere. Let me do one thing.

290
00:16:45,830 --> 00:16:46,910
I quote.

291
00:16:46,910 --> 00:16:51,660
Suppose welcome, do shell are welcome to inventory.

292
00:16:51,880 --> 00:16:54,210
Right?

293
00:16:54,430 --> 00:16:55,954
Fine.

294
00:16:55,954 --> 00:17:02,735
C As of now just I'm calling this function, right?

295
00:17:02,735 --> 00:17:07,024
Okay, not only for this message, let me do one thing.

296
00:17:07,024 --> 00:17:11,284
So I want to write this function as for any message,

297
00:17:11,284 --> 00:17:17,404
Let me take simply misses as $1.1 means while calling this function,

298
00:17:17,404 --> 00:17:20,119
I will pass my requirements is whatever the message you

299
00:17:20,119 --> 00:17:23,629
want to display using that message function.

300
00:17:23,629 --> 00:17:28,744
Welcome to inventory script.

301
00:17:28,744 --> 00:17:31,279
That's it. Alright.

302
00:17:31,279 --> 00:17:38,959
So first I'm trying to print simply print f percentile.

303
00:17:38,959 --> 00:17:43,759
Yes. So this is very easy with you or print f command.

304
00:17:43,759 --> 00:17:48,049
Years tried to use that $1.1.

305
00:17:48,049 --> 00:17:50,660
Right? Now, what is this print of head of the function?

306
00:17:50,660 --> 00:17:52,519
So I'm going to define that here.

307
00:17:52,519 --> 00:17:54,350
The purpose of printf,

308
00:17:54,350 --> 00:18:00,125
I'm in print header is nothing but displaying some character like a header.

309
00:18:00,125 --> 00:18:02,840
So I will do this in this way.

310
00:18:02,840 --> 00:18:08,705
Simply, you can do this using your printf function.

311
00:18:08,705 --> 00:18:10,490
I mean print f command.

312
00:18:10,490 --> 00:18:15,319
Let me do this. Hash symbol I want to display, right?

313
00:18:15,319 --> 00:18:17,495
So geodata S.

314
00:18:17,495 --> 00:18:25,745
Just check while running this command so that it will write C dollar.

315
00:18:25,745 --> 00:18:32,614
So I want to display this hash symbol in the entire line, right?

316
00:18:32,614 --> 00:18:36,260
So I don't know how many columns are there based on your see,

317
00:18:36,260 --> 00:18:38,104
this columns are not fixed, right?

318
00:18:38,104 --> 00:18:40,490
So you may have different width for your terminal.

319
00:18:40,490 --> 00:18:42,530
I'm how different width or might add null but

320
00:18:42,530 --> 00:18:45,244
automatically through Shell script if you want to identify that,

321
00:18:45,244 --> 00:18:50,014
yes, you can identify with the help of t put columns.

322
00:18:50,014 --> 00:18:51,799
That's it.

323
00:18:51,799 --> 00:18:53,614
So after that, you know,

324
00:18:53,614 --> 00:18:58,040
printf won't send your cursor to next length forcefully unit ascended next line.

325
00:18:58,040 --> 00:18:59,929
Right? Now just to see this,

326
00:18:59,929 --> 00:19:04,174
if I run this, what you are getting, c.

327
00:19:04,174 --> 00:19:07,804
Okay, maybe printf.

328
00:19:07,804 --> 00:19:10,009
Second time YOU calling my function,

329
00:19:10,009 --> 00:19:13,830
this is Hetchy Ying De.

330
00:19:15,310 --> 00:19:19,654
Let's say, right?

331
00:19:19,654 --> 00:19:22,939
And you may get confused.

332
00:19:22,939 --> 00:19:25,230
Let me do one more thing.

333
00:19:26,980 --> 00:19:33,289
Print f slash n,

334
00:19:33,289 --> 00:19:35,959
So that your customer will go to next line.

335
00:19:35,959 --> 00:19:39,920
That's it. But I want to display this message at the center of

336
00:19:39,920 --> 00:19:43,174
your line and the center of your row, right?

337
00:19:43,174 --> 00:19:44,585
So for that, nothing is there.

338
00:19:44,585 --> 00:19:45,979
You need to calculate.

339
00:19:45,979 --> 00:19:48,240
Let me do one thing.

340
00:19:50,620 --> 00:19:56,014
So terminal columns I am taking equals to simply,

341
00:19:56,014 --> 00:19:57,214
it is a command, right?

342
00:19:57,214 --> 00:20:00,034
T put columns. Right?

343
00:20:00,034 --> 00:20:03,065
Then I'm finding my message length.

344
00:20:03,065 --> 00:20:06,360
Where I'm finding, I will let you know.

345
00:20:12,420 --> 00:20:17,754
Now see just up there that if you are,

346
00:20:17,754 --> 00:20:19,735
this is the total length of line.

347
00:20:19,735 --> 00:20:21,534
I mean number of columns.

348
00:20:21,534 --> 00:20:23,050
Suppose you have some misses.

349
00:20:23,050 --> 00:20:26,004
You want display somewhere in the middle of that.

350
00:20:26,004 --> 00:20:27,654
Right?

351
00:20:27,654 --> 00:20:30,160
Now if I am able to find out this point,

352
00:20:30,160 --> 00:20:32,530
then from that I can print my message.

353
00:20:32,530 --> 00:20:36,280
That means what I am doing is in this entire MSAs,

354
00:20:36,280 --> 00:20:38,514
I'm subtracting my Required message,

355
00:20:38,514 --> 00:20:39,789
then just remove that.

356
00:20:39,789 --> 00:20:43,704
Then in this I am finding half of the length so that you will get out this point.

357
00:20:43,704 --> 00:20:45,684
You'll get this point, right.

358
00:20:45,684 --> 00:20:47,485
So that's what I'm doing here.

359
00:20:47,485 --> 00:20:50,660
So for that, I am finding.

360
00:20:51,330 --> 00:20:58,059
Please spaces for your message equals two just to do arithmetic operation for

361
00:20:58,059 --> 00:21:04,939
your terminal columns minus your message length.

362
00:21:05,070 --> 00:21:06,489
Right?

363
00:21:06,489 --> 00:21:08,769
And then just to do divide to,

364
00:21:08,769 --> 00:21:11,709
then do once again you are one more arithmetic operator.

365
00:21:11,709 --> 00:21:16,585
So for that I am applying once again this automatic operators.

366
00:21:16,585 --> 00:21:22,015
Right now I want to print a string. Okay?

367
00:21:22,015 --> 00:21:24,699
See how I'm going to print c.

368
00:21:24,699 --> 00:21:26,485
I want to print your string,

369
00:21:26,485 --> 00:21:29,379
but before going to print the string, right,

370
00:21:29,379 --> 00:21:32,649
I need to print some empty spaces, right?

371
00:21:32,649 --> 00:21:41,094
So print f percentile geodata s. Then I want to pray.

372
00:21:41,094 --> 00:21:43,404
How many number of spaces?

373
00:21:43,404 --> 00:21:50,600
So sequence 123 spaces in this you're having how many spaces unit to print?

374
00:21:52,890 --> 00:21:54,505
That's a.

375
00:21:54,505 --> 00:22:03,429
Now let me tie this one's okay.

376
00:22:03,429 --> 00:22:07,699
Sequence one.

377
00:22:25,980 --> 00:22:29,604
Oh, I need to print the spaces here, right?

378
00:22:29,604 --> 00:22:34,974
Yeah, that's it.

379
00:22:34,974 --> 00:22:38,815
See now, dynamically, you are able to print

380
00:22:38,815 --> 00:22:42,340
your message in the middle of your line, right?

381
00:22:42,340 --> 00:22:45,400
It is just for design purpose, that's it. Nothing is that.

382
00:22:45,400 --> 00:22:49,164
See the code completely so that you can get some idea.

383
00:22:49,164 --> 00:22:53,005
Right now, we are able to print out message at the center.

384
00:22:53,005 --> 00:22:54,265
Not only that messes you,

385
00:22:54,265 --> 00:22:57,190
call this function with any message so that that message will

386
00:22:57,190 --> 00:23:00,264
be displayed at the center of your line.

387
00:23:00,264 --> 00:23:04,970
Now what I'm doing is I'm going to write one more thing, Center message.

388
00:23:04,970 --> 00:23:08,099
Thank you for using this shell script.

389
00:23:09,910 --> 00:23:13,654
Or even resell, skip something, whatever it may be.

390
00:23:13,654 --> 00:23:15,004
Message.

391
00:23:15,004 --> 00:23:19,520
Right now, see if I run this,

392
00:23:19,520 --> 00:23:24,139
see now between this unit implementing our logic.

393
00:23:24,139 --> 00:23:26,344
So before going to implement your logic,

394
00:23:26,344 --> 00:23:28,970
you need some remote past File,

395
00:23:28,970 --> 00:23:32,329
Remote username, and a list of files,

396
00:23:32,329 --> 00:23:34,100
I mean list of servers.

397
00:23:34,100 --> 00:23:42,035
So that is there in terms of one is remote pass first, let me check it.

398
00:23:42,035 --> 00:23:44,269
See, I am going to write something first.

399
00:23:44,269 --> 00:23:48,619
I want to check whether remote pascal is there or not because I need password.

400
00:23:48,619 --> 00:23:51,469
So I'm going to store my password in remote past file.

401
00:23:51,469 --> 00:23:54,629
That's why check.

402
00:23:55,930 --> 00:24:02,135
Remote pass file are simply remote past four that I'm going to write some function,

403
00:24:02,135 --> 00:24:06,449
check the remote Bus.

404
00:24:09,250 --> 00:24:14,929
See here what I'm writing is if file is there no problem.

405
00:24:14,929 --> 00:24:17,494
We file is not there, right?

406
00:24:17,494 --> 00:24:21,830
If not hyphen e, your file,

407
00:24:21,830 --> 00:24:28,980
then I want to stop myself script and I want to say something. Let me right.

408
00:24:32,070 --> 00:24:39,369
Please save your password on Play,

409
00:24:39,369 --> 00:24:45,624
store your password in

410
00:24:45,624 --> 00:24:50,979
remote pass file and retry.

411
00:24:50,979 --> 00:24:52,509
So for that I want to exit.

412
00:24:52,509 --> 00:24:54,610
I don't want to run because I don't have password.

413
00:24:54,610 --> 00:24:56,799
How can I execute my SSH command?

414
00:24:56,799 --> 00:24:58,524
That's why simply I'm exiting,

415
00:24:58,524 --> 00:25:00,744
exit with some error as one.

416
00:25:00,744 --> 00:25:04,795
That's a, that's fine. That is over.

417
00:25:04,795 --> 00:25:07,390
Now, same way I want to check remote user as well.

418
00:25:07,390 --> 00:25:11,174
So check remote user.

419
00:25:11,174 --> 00:25:12,829
So for this, again,

420
00:25:12,829 --> 00:25:14,570
I'm going to write one more function,

421
00:25:14,570 --> 00:25:18,169
that is this function.

422
00:25:18,169 --> 00:25:21,965
So here also I am checking if not,

423
00:25:21,965 --> 00:25:26,104
you are filed called remote user.

424
00:25:26,104 --> 00:25:28,760
If it is not there, right,

425
00:25:28,760 --> 00:25:32,779
then seaway, I'm using central message function.

426
00:25:32,779 --> 00:25:35,789
I want to display my message in the center.

427
00:25:36,760 --> 00:25:39,079
Please.

428
00:25:39,079 --> 00:25:44,970
Store you were remote user name

429
00:25:45,280 --> 00:25:53,999
in remote user filing under a time.

430
00:26:04,170 --> 00:26:05,784
That's it.

431
00:26:05,784 --> 00:26:08,874
So in case if you don't have remote user name than what you had to do,

432
00:26:08,874 --> 00:26:10,525
simply just you have to exit.

433
00:26:10,525 --> 00:26:13,510
So now I'm exiting with their record as to you can

434
00:26:13,510 --> 00:26:16,749
take any record that is based on what we write.

435
00:26:16,749 --> 00:26:18,805
C, I'm running these.

436
00:26:18,805 --> 00:26:23,650
You're not getting any exceptions because already how all your files let me do one thing.

437
00:26:23,650 --> 00:26:30,100
I am moving my remote user name file as remote user someone.

438
00:26:30,100 --> 00:26:31,929
Now I'm running our shall skip C.

439
00:26:31,929 --> 00:26:33,055
What did you swing?

440
00:26:33,055 --> 00:26:37,105
Please store your remote user name in remote user file, unretrieved.

441
00:26:37,105 --> 00:26:43,240
So that means you should how you were remote user file in the location.

442
00:26:43,240 --> 00:26:44,350
Now shall ship.

443
00:26:44,350 --> 00:26:47,235
It will work perfectly. That's it.

444
00:26:47,235 --> 00:26:54,409
So write the same Vegas unit to check list of servers file, right in it,

445
00:26:54,409 --> 00:26:56,929
a handle this in your shell script could sell because

446
00:26:56,929 --> 00:26:59,570
you are trying to connect with the number of servers and you know,

447
00:26:59,570 --> 00:27:03,589
you are going to store your number of servers in your file called list of servers files.

448
00:27:03,589 --> 00:27:06,200
But in case if that file is not there in the current location,

449
00:27:06,200 --> 00:27:08,170
then you cannot work with you're all servers.

450
00:27:08,170 --> 00:27:11,840
That's why check list off servers,

451
00:27:11,840 --> 00:27:13,940
file list stops or worse.

452
00:27:13,940 --> 00:27:16,559
Write one more function for that.

453
00:27:19,090 --> 00:27:29,879
Now let me write one more function just to check out your list of servers.

454
00:27:30,480 --> 00:27:33,400
So each step I am writing as a function race,

455
00:27:33,400 --> 00:27:35,544
there is a good practice in your real time.

456
00:27:35,544 --> 00:27:44,890
Now here also I am doing if not hyphen e to a list of servers file is not there,

457
00:27:44,890 --> 00:27:51,595
then I want to say center.

458
00:27:51,595 --> 00:27:55,389
So you have a functionality to display your message in the center.

459
00:27:55,389 --> 00:28:03,610
Please update the liftoff servers file with

460
00:28:03,610 --> 00:28:13,640
all your IP's or F q Dn names.

461
00:28:16,330 --> 00:28:19,295
Offering more servers.

462
00:28:19,295 --> 00:28:21,570
That's it.

463
00:28:24,100 --> 00:28:25,594
Alright.

464
00:28:25,594 --> 00:28:27,139
So now you know everything,

465
00:28:27,139 --> 00:28:31,445
not the next thing is you need to find out your required variable.

466
00:28:31,445 --> 00:28:34,820
I mean, you required parameters on your all remote servers.

467
00:28:34,820 --> 00:28:39,289
See guys, here, I need to find out ways type,

468
00:28:39,289 --> 00:28:41,839
ways fortune, or a picture type on CPU type.

469
00:28:41,839 --> 00:28:44,570
And I know whenever if you want to run any command,

470
00:28:44,570 --> 00:28:48,574
this is the common part, SSH, right?

471
00:28:48,574 --> 00:28:50,840
So off to this, these the common part.

472
00:28:50,840 --> 00:28:52,145
That's why.

473
00:28:52,145 --> 00:28:56,310
So I'm writing inside my shell script in this way.

474
00:28:56,310 --> 00:29:02,620
As a such options equals two just I am storing this.

475
00:29:02,620 --> 00:29:07,179
Let's say now I am going to work on all servers.

476
00:29:07,179 --> 00:29:12,579
Let me read my server one-by-one with the while loop.

477
00:29:12,579 --> 00:29:18,564
So you guys, reading line by line is a good practice by using while loop.

478
00:29:18,564 --> 00:29:21,220
So that's why I'm taking while read server.

479
00:29:21,220 --> 00:29:23,560
Do, done, you know,

480
00:29:23,560 --> 00:29:28,974
your servers are there in the file called list of servers, right?

481
00:29:28,974 --> 00:29:31,480
C I am writing simply for your understanding,

482
00:29:31,480 --> 00:29:35,530
a co-working on dollar server.

483
00:29:35,530 --> 00:29:37,659
We're not we're not implementing your coat,

484
00:29:37,659 --> 00:29:42,364
just we are testing where it is working perfectly or not. See that.

485
00:29:42,364 --> 00:29:46,639
Working on working on and guys unit,

486
00:29:46,639 --> 00:29:48,905
right, this tank you for imaging the shell script at the end.

487
00:29:48,905 --> 00:29:54,484
That's why what I'm doing is I'm going to call that function last.

488
00:29:54,484 --> 00:30:00,899
So simply just comment this line here or just copy this line from here.

489
00:30:02,410 --> 00:30:05,759
Test right at the end.

490
00:30:09,640 --> 00:30:17,600
Right? So in case if you need some extra code you can include, that's a lot.

491
00:30:17,600 --> 00:30:20,735
Just check it. No. That's it.

492
00:30:20,735 --> 00:30:22,309
Now, working on the first server,

493
00:30:22,309 --> 00:30:23,599
working on second server.

494
00:30:23,599 --> 00:30:25,685
So while working with your first server,

495
00:30:25,685 --> 00:30:26,975
the command should be in this way.

496
00:30:26,975 --> 00:30:29,960
I mean for different parameters, year,

497
00:30:29,960 --> 00:30:35,120
your IP address should be there in this V c. So what I want to do first OAS type,

498
00:30:35,120 --> 00:30:39,695
I want, I need to find out for first server inside of your loop, right?

499
00:30:39,695 --> 00:30:43,415
Whatever the code you are going to write that will repeat for each and every server.

500
00:30:43,415 --> 00:30:45,695
So now what King on your first server,

501
00:30:45,695 --> 00:30:51,199
I'm trying to find out waste pipe is nothing but I am running some command.

502
00:30:51,199 --> 00:30:53,809
That command I'm going to store into some variable,

503
00:30:53,809 --> 00:30:56,795
you know how to store the output of a commodity, a variable.

504
00:30:56,795 --> 00:30:57,709
Right?

505
00:30:57,709 --> 00:31:00,559
So this command, actually you are going to add some command,

506
00:31:00,559 --> 00:31:03,109
that command output you're going to store into your waste.

507
00:31:03,109 --> 00:31:06,185
Type variable. You should know,

508
00:31:06,185 --> 00:31:08,314
you should not have any space new variable name.

509
00:31:08,314 --> 00:31:10,114
That's why I'm taking that.

510
00:31:10,114 --> 00:31:11,074
First thing.

511
00:31:11,074 --> 00:31:15,274
There is the command to run SSH options user name, right?

512
00:31:15,274 --> 00:31:18,064
Then at the rate, your server name,

513
00:31:18,064 --> 00:31:19,760
then whatever the command you want to run,

514
00:31:19,760 --> 00:31:23,104
suppose I need to find out my OS type, right?

515
00:31:23,104 --> 00:31:24,649
So to find out your OS type,

516
00:31:24,649 --> 00:31:26,000
suppose this is the command.

517
00:31:26,000 --> 00:31:36,680
Let me copy this. Right?

518
00:31:36,680 --> 00:31:38,524
So suppose if I run this,

519
00:31:38,524 --> 00:31:40,385
just observe the output first.

520
00:31:40,385 --> 00:31:43,474
It will run for your two servers, right?

521
00:31:43,474 --> 00:31:48,275
See that? 1 second,

522
00:31:48,275 --> 00:31:50,790
Maybe I didn't mistake.

523
00:31:51,130 --> 00:31:54,989
Oh, what is that?

524
00:31:56,740 --> 00:32:01,909
At the rate dollar Hour because inside of this dollar server variable segues,

525
00:32:01,909 --> 00:32:05,405
you are able to read your server name with the help of while loop with this variable,

526
00:32:05,405 --> 00:32:06,800
I need to substitute the variable value.

527
00:32:06,800 --> 00:32:09,379
That's why need to place a dollar server.

528
00:32:09,379 --> 00:32:12,485
Now let me run this ones and see the output.

529
00:32:12,485 --> 00:32:14,614
So you are getting RedHat and you've been to,

530
00:32:14,614 --> 00:32:16,549
so for this server, you are getting this one.

531
00:32:16,549 --> 00:32:18,155
For the server you are getting this one.

532
00:32:18,155 --> 00:32:18,860
Same way.

533
00:32:18,860 --> 00:32:22,129
You need to find out different values, right?

534
00:32:22,129 --> 00:32:24,469
Let me do one more thing.

535
00:32:24,469 --> 00:32:28,624
So finally, I will, OK,

536
00:32:28,624 --> 00:32:33,485
this is because of this command you are able to find out you are ways type.

537
00:32:33,485 --> 00:32:36,304
But I want to store this into one variable.

538
00:32:36,304 --> 00:32:37,790
That's why I'm taking c,

539
00:32:37,790 --> 00:32:43,325
that OS underscore type equals $2 parenthesis.

540
00:32:43,325 --> 00:32:49,204
That's it. Now inside of this variable you how your ways type, right?

541
00:32:49,204 --> 00:32:52,080
Next thing, you need to find out.

542
00:32:52,270 --> 00:32:55,565
What is the next parameter you are having.

543
00:32:55,565 --> 00:32:59,029
Ways, Washington, let me take this way swaption.

544
00:32:59,029 --> 00:33:02,014
I need to find out my voice version.

545
00:33:02,014 --> 00:33:05,885
So guys, before going to find out your ways, Washington, right?

546
00:33:05,885 --> 00:33:07,084
If it is RedHat,

547
00:33:07,084 --> 00:33:09,755
you are having different file to find out the work.

548
00:33:09,755 --> 00:33:12,769
If it is open to you have ways release file.

549
00:33:12,769 --> 00:33:19,250
So that's why what I'm doing is see just I'm ticking, echo.

550
00:33:19,250 --> 00:33:24,500
Whatever the waste type you are getting in the previous line in that,

551
00:33:24,500 --> 00:33:30,420
whether do we, how open to or not.

552
00:33:31,810 --> 00:33:33,844
If you have a one do,

553
00:33:33,844 --> 00:33:38,764
then you will get dollar question mark of value as 0, right?

554
00:33:38,764 --> 00:33:46,110
So I'm redirecting my output and error into diagonal.

555
00:33:48,160 --> 00:33:53,450
So now I'm checking if dollar question mark value,

556
00:33:53,450 --> 00:33:54,920
if it is equals to 0,

557
00:33:54,920 --> 00:33:57,419
then it is a open to server.

558
00:33:57,760 --> 00:34:00,649
Then for a woman to,

559
00:34:00,649 --> 00:34:02,825
if you want to find out your waist version,

560
00:34:02,825 --> 00:34:09,499
you have a file called the Hadley.

561
00:34:09,499 --> 00:34:11,329
I'm assigning the my outputting two ways.

562
00:34:11,329 --> 00:34:12,514
Wash invariable guys.

563
00:34:12,514 --> 00:34:15,149
So for urban to URL,

564
00:34:15,850 --> 00:34:18,965
let me write first command.

565
00:34:18,965 --> 00:34:21,889
Yeah, cat ways release.

566
00:34:21,889 --> 00:34:23,389
In this you are

567
00:34:23,389 --> 00:34:25,020
having

568
00:34:31,720 --> 00:34:33,800
release.

569
00:34:33,800 --> 00:34:39,659
Some ID. Of course you can also use even this Fall River.

570
00:34:40,420 --> 00:34:44,614
Let me write it by plane.

571
00:34:44,614 --> 00:34:55,560
Grep, coercion underscore ID.

572
00:34:55,600 --> 00:34:58,829
Right? So often finding my Watson underscore ID,

573
00:34:58,829 --> 00:35:03,410
you can observe by taking my executing command manually.

574
00:35:03,410 --> 00:35:11,690
So I need to take what's Shun underscore ID equals two,

575
00:35:11,690 --> 00:35:15,755
then with the print f command.

576
00:35:15,755 --> 00:35:20,465
All right, I need to take $1.2 variable value.

577
00:35:20,465 --> 00:35:21,995
That's it.

578
00:35:21,995 --> 00:35:25,114
If it is not o12,

579
00:35:25,114 --> 00:35:34,459
then what I have to do is let me take and we up to this common part right?

580
00:35:34,459 --> 00:35:38,090
Then for your Linux systems,

581
00:35:38,090 --> 00:35:39,620
see you have cathode,

582
00:35:39,620 --> 00:35:44,555
ETC, Red Hat release.

583
00:35:44,555 --> 00:35:46,505
So in this directory you are having this.

584
00:35:46,505 --> 00:35:48,980
In this, if you are able to separate it with release word,

585
00:35:48,980 --> 00:35:50,599
you can able to get discerned dot six.

586
00:35:50,599 --> 00:35:52,775
So that means biplane,

587
00:35:52,775 --> 00:35:55,339
K, WK, hyphen F separately.

588
00:35:55,339 --> 00:35:58,470
I am taking a release.

589
00:35:59,740 --> 00:36:03,005
Right now. See the output, what you are, sorry.

590
00:36:03,005 --> 00:36:11,209
Yeah, then I am printing too and see the output now what you are getting, right?

591
00:36:11,209 --> 00:36:14,059
That's a in case you weren't going to only sound out six.

592
00:36:14,059 --> 00:36:18,180
Just once again, apply your AWPA command.

593
00:36:18,490 --> 00:36:22,050
Now print only $1.1.

594
00:36:22,390 --> 00:36:29,494
That's it. Now, this is for my rachel servers.

595
00:36:29,494 --> 00:36:35,010
So that's why I'm going to take it and see how I'm going to walk it.

596
00:36:43,680 --> 00:36:49,930
That's it. So just take this in this way.

597
00:36:49,930 --> 00:36:52,419
Alright, so now just close your eyes.

598
00:36:52,419 --> 00:36:55,299
If condition, now I'm displaying the value,

599
00:36:55,299 --> 00:37:03,289
displaying the values of our OAS type equals $2 ways underscore Thai.

600
00:37:03,480 --> 00:37:08,680
Then echo, waste, Wusheng equals

601
00:37:08,680 --> 00:37:15,849
$2 ways underscore version.

602
00:37:15,849 --> 00:37:17,890
Now let me run this shell script so that you will get

603
00:37:17,890 --> 00:37:20,870
your output for each and every server.

604
00:37:24,430 --> 00:37:29,539
Sea waves type RedHat and it's Watson shown dot six,

605
00:37:29,539 --> 00:37:33,410
o12 and it's worse in 14.04, right?

606
00:37:33,410 --> 00:37:36,380
So likewise guys, you can also find out your architecture type.

607
00:37:36,380 --> 00:37:38,389
So just I'm giving commands directly.

608
00:37:38,389 --> 00:37:42,800
You can write your name Ivan p. You will get your architecture type, right.

609
00:37:42,800 --> 00:37:46,490
See if you want to find out your CPU type information, right?

610
00:37:46,490 --> 00:37:49,325
You are having a file called, I mean,

611
00:37:49,325 --> 00:37:51,484
under root, you have a file called,

612
00:37:51,484 --> 00:37:53,284
let me execute on command line.

613
00:37:53,284 --> 00:37:57,670
Root proc, CPU info, right, just other,

614
00:37:57,670 --> 00:38:01,880
other file information in this model type you are having here.

615
00:38:01,880 --> 00:38:05,625
That means after these just pipeline grip.

616
00:38:05,625 --> 00:38:11,200
Just use your and see the output.

617
00:38:11,200 --> 00:38:17,605
So from this you just do your AWPA command manipulations and tried to get out this part.

618
00:38:17,605 --> 00:38:18,954
That's it.

619
00:38:18,954 --> 00:38:20,515
So to find out architecture,

620
00:38:20,515 --> 00:38:24,069
architecture type, simply you name hyphen p.

621
00:38:24,069 --> 00:38:25,314
Right?

622
00:38:25,314 --> 00:38:28,359
So after getting all these values guys in this shell script,

623
00:38:28,359 --> 00:38:30,339
you just tried to implement for the remaining

624
00:38:30,339 --> 00:38:32,694
two information's already how given a command,

625
00:38:32,694 --> 00:38:36,835
you just try to work out with that so that you will get some idea while executing them.

626
00:38:36,835 --> 00:38:42,290
So what I want to find out is our picture type.

627
00:38:42,420 --> 00:38:46,670
You just find out you have already commands.

628
00:38:48,670 --> 00:38:53,134
Then CPU type.

629
00:38:53,134 --> 00:38:54,920
So all they are given command.

630
00:38:54,920 --> 00:38:58,835
You just tried to execute it.

631
00:38:58,835 --> 00:39:03,769
And try to understand so that it will be useful for your realtime place.

632
00:39:03,769 --> 00:39:05,660
Not only this opera finding your information,

633
00:39:05,660 --> 00:39:08,314
I want to store this information into even,

634
00:39:08,314 --> 00:39:11,165
I mean, I want to export this data into csv file.

635
00:39:11,165 --> 00:39:19,925
So see, what I'm doing is I'm writing server name comma.

636
00:39:19,925 --> 00:39:24,019
So first I need to find out OS type.

637
00:39:24,019 --> 00:39:32,979
So way as type I am adding head of the first ways was shunned architecture type.

638
00:39:32,979 --> 00:39:34,420
So guys, you need to find out

639
00:39:34,420 --> 00:39:40,089
this article type value and you are CPU type for these two values,

640
00:39:40,089 --> 00:39:43,599
just find oh, I'm giving as an assignment for you.

641
00:39:43,599 --> 00:39:47,630
So this data just let me write into

642
00:39:47,730 --> 00:39:54,924
servers in foods.csv that's now offer finding all your values.

643
00:39:54,924 --> 00:39:57,505
Just tried to append your data into your CSV file.

644
00:39:57,505 --> 00:40:00,879
I mean, simply a KOH.

645
00:40:00,879 --> 00:40:03,114
Let me take whatever you are having.

646
00:40:03,114 --> 00:40:04,959
First thing you need to find out server name,

647
00:40:04,959 --> 00:40:06,474
right? So simply server.

648
00:40:06,474 --> 00:40:10,630
Because from here you're able to get your server right comma.

649
00:40:10,630 --> 00:40:13,845
Then you are able to get your way as type.

650
00:40:13,845 --> 00:40:16,280
So already you know what is the waste type?

651
00:40:16,280 --> 00:40:22,650
You are getting that data and then you are ways version.

652
00:40:24,220 --> 00:40:28,499
And then there were architecture type.

653
00:40:29,140 --> 00:40:33,709
And finally, you are CPU type case,

654
00:40:33,709 --> 00:40:35,900
not only these parameters in your real-time,

655
00:40:35,900 --> 00:40:42,874
you may hold different parameters requirement to find out your inventory, right?

656
00:40:42,874 --> 00:40:44,585
That's it.

657
00:40:44,585 --> 00:40:48,305
Alright, see, let me save this and run it.

658
00:40:48,305 --> 00:40:50,044
So before going to run it,

659
00:40:50,044 --> 00:40:51,410
just absorbed in the location,

660
00:40:51,410 --> 00:40:52,805
you don't have any CSV file.

661
00:40:52,805 --> 00:40:56,449
So after running right now,

662
00:40:56,449 --> 00:40:58,160
observe that you have a CSV file.

663
00:40:58,160 --> 00:41:00,065
And if you open that CSV file,

664
00:41:00,065 --> 00:41:01,744
you have information in this way,

665
00:41:01,744 --> 00:41:04,084
you are getting these values are empty because

666
00:41:04,084 --> 00:41:07,009
you need to find out your Arctic type on CPU type.

667
00:41:07,009 --> 00:41:11,899
Undoubtedly you can export this file to your main, right,

668
00:41:11,899 --> 00:41:17,149
or you can download that using WinSCP and offer downloading your file to WinSCP.

669
00:41:17,149 --> 00:41:20,674
Suppose if fidelity open that with the help of your excel sheet,

670
00:41:20,674 --> 00:41:25,369
automatically will rearrange clearly you are a header and rows and columns.

671
00:41:25,369 --> 00:41:31,910
So that is the importance using this inventory and exploiting your data into csv file.

672
00:41:31,910 --> 00:41:34,639
So this concept is very,

673
00:41:34,639 --> 00:41:37,939
very important while working with your real times.

674
00:41:37,939 --> 00:41:41,690
All right, so now you are able to implement any type of

675
00:41:41,690 --> 00:41:44,990
inventory for your realtime, right?

676
00:41:44,990 --> 00:41:48,110
Just try to practice with different parameters so that you will be

677
00:41:48,110 --> 00:41:51,440
good with your realtime scripts for rework these type of,

678
00:41:51,440 --> 00:41:54,304
I mean, inventory typeof shell scripts.

679
00:41:54,304 --> 00:41:55,595
Right?

680
00:41:55,595 --> 00:42:00,120
Okay. Okay guys, thank you for watching this video.

