WEBVTT
ï»¿1
00:00:00.920 --> 00:00:04.530
Friends here our concept is cut command.

2
00:00:04.530 --> 00:00:09.555
Cut command is a powerful tool to extract parts of each line from my file,

3
00:00:09.555 --> 00:00:11.250
each line or each rule.

4
00:00:11.250 --> 00:00:13.845
You can call line as row in a file.

5
00:00:13.845 --> 00:00:17.835
See whenever if you apply cut command on your file,

6
00:00:17.835 --> 00:00:23.670
got command, it will extract some parts from each and every line for a given file.

7
00:00:23.670 --> 00:00:29.970
Then how you work cut command will extract the parts from each and every line.

8
00:00:29.970 --> 00:00:31.620
For a given file.

9
00:00:31.620 --> 00:00:36.900
Simply, it is based on byte position or character position,

10
00:00:36.900 --> 00:00:39.240
or maybe based on feeds.

11
00:00:39.240 --> 00:00:42.205
Fields are based on delimiter.

12
00:00:42.205 --> 00:00:44.780
Don't worry about delimiter will discuss that.

13
00:00:44.780 --> 00:00:46.730
And one more thing.

14
00:00:46.730 --> 00:00:49.190
If you observe bite our character.

15
00:00:49.190 --> 00:00:51.005
Actually they are same.

16
00:00:51.005 --> 00:00:55.160
If you're using Ascii UTF eight encoding.

17
00:00:55.160 --> 00:01:00.155
Suppose in UT 32 encoding technique,

18
00:01:00.155 --> 00:01:03.350
character is represented with four bytes.

19
00:01:03.350 --> 00:01:11.570
But in UD, 81 byte is nothing but one character or one character, one byte.

20
00:01:11.570 --> 00:01:12.875
Fine.

21
00:01:12.875 --> 00:01:17.120
First let me give you some practice so that you will get some idea of what I

22
00:01:17.120 --> 00:01:18.650
will do the complete document for

23
00:01:18.650 --> 00:01:21.590
your cut command so that you will be good with Cut command.

24
00:01:21.590 --> 00:01:24.815
First thing, let me open any file.

25
00:01:24.815 --> 00:01:27.620
Let me open password file.

26
00:01:27.620 --> 00:01:29.960
So it having some content into this.

27
00:01:29.960 --> 00:01:36.335
Now I want to get faster character from each and every line for this file.

28
00:01:36.335 --> 00:01:42.545
Then simply use third option as I fancy because I want to get first character, then one.

29
00:01:42.545 --> 00:01:44.420
Then you were filename.

30
00:01:44.420 --> 00:01:48.215
Now see that you are getting first character.

31
00:01:48.215 --> 00:01:51.815
Now let me try with iPhone b. I, and b means bytes.

32
00:01:51.815 --> 00:01:54.710
But this is A1 coding technique.

33
00:01:54.710 --> 00:02:00.180
That's why there is no difference between either foster bite or foster character.

34
00:02:01.210 --> 00:02:03.740
Fine. So better practices,

35
00:02:03.740 --> 00:02:06.225
just take hyphen character.

36
00:02:06.225 --> 00:02:10.870
Now, suppose I want to get faster character or let me

37
00:02:10.870 --> 00:02:15.190
take some 40 character I want to get from each and every length form from this file.

38
00:02:15.190 --> 00:02:17.725
Then you can apply simple iPhone S4.

39
00:02:17.725 --> 00:02:20.409
Now I want to get for the character.

40
00:02:20.409 --> 00:02:24.130
Along with that, I want to get suppose some character.

41
00:02:24.130 --> 00:02:26.095
Then for command line.

42
00:02:26.095 --> 00:02:30.055
Now I want to get four to nine range.

43
00:02:30.055 --> 00:02:32.860
Then I write, just write for iPhone nine,

44
00:02:32.860 --> 00:02:37.240
you're going to get characters from four to 94 to nine.

45
00:02:37.240 --> 00:02:41.080
And then I want to get one more character coral tool,

46
00:02:41.080 --> 00:02:43.315
the character, yes, you can write it.

47
00:02:43.315 --> 00:02:46.825
Comma two will not say.

48
00:02:46.825 --> 00:02:52.220
And suppose if I want to get one to two will maybe one to ten characters,

49
00:02:52.220 --> 00:02:56.000
then I can write one hyphen ten, that is the range.

50
00:02:56.000 --> 00:03:01.310
If you provide 12, ten or without mentioning any starting range,

51
00:03:01.310 --> 00:03:05.180
then C, That isn't the same result.

52
00:03:05.180 --> 00:03:07.850
If you don't mention the starting range by default,

53
00:03:07.850 --> 00:03:09.215
that will be digitalized.

54
00:03:09.215 --> 00:03:10.715
Foster character.

55
00:03:10.715 --> 00:03:14.435
And one more thing, suppose I want to get first to character.

56
00:03:14.435 --> 00:03:18.230
Let me take some 40 character to last character from each and every line.

57
00:03:18.230 --> 00:03:21.440
Then simply write for hyphen so that it will do for

58
00:03:21.440 --> 00:03:24.965
the character to last a character from each and every lane.

59
00:03:24.965 --> 00:03:25.880
That's it.

60
00:03:25.880 --> 00:03:30.155
That is the simple uses of cut command with a based on.

61
00:03:30.155 --> 00:03:31.295
Character.

62
00:03:31.295 --> 00:03:37.475
Now we have very, very important uses of cut command that is based on fields.

63
00:03:37.475 --> 00:03:40.730
First thing, fields means columns.

64
00:03:40.730 --> 00:03:43.685
Suppose if a, let me write one file.

65
00:03:43.685 --> 00:03:46.640
So practice with the cut 1.2x.

66
00:03:46.640 --> 00:03:48.095
I'm writing some file here.

67
00:03:48.095 --> 00:03:49.325
So I am writing one.

68
00:03:49.325 --> 00:03:50.990
I'm giving tab space,

69
00:03:50.990 --> 00:03:53.645
then to tab three,

70
00:03:53.645 --> 00:03:59.195
then four tab phi m giving tabs spaces.

71
00:03:59.195 --> 00:04:01.775
So becomes a 100 on that.

72
00:04:01.775 --> 00:04:08.060
Then 789.

73
00:04:08.060 --> 00:04:09.650
Oh, let me save this.

74
00:04:09.650 --> 00:04:11.990
Now if you open this file,

75
00:04:11.990 --> 00:04:19.205
you are having three rows and some columns as well.

76
00:04:19.205 --> 00:04:21.155
So this is one column,

77
00:04:21.155 --> 00:04:22.985
which is one column, which is one column.

78
00:04:22.985 --> 00:04:24.785
Column is nothing but a field.

79
00:04:24.785 --> 00:04:27.920
Or field is nothing but a column in your fine.

80
00:04:27.920 --> 00:04:29.315
Fine.

81
00:04:29.315 --> 00:04:37.160
Now, if you observe in this file we how fields, three fields.

82
00:04:37.160 --> 00:04:40.625
But those three fields are separated with a tab space.

83
00:04:40.625 --> 00:04:43.790
I have given tab while typing this content.

84
00:04:43.790 --> 00:04:45.440
So faster thing.

85
00:04:45.440 --> 00:04:47.765
Whenever if you want to work with Cut command,

86
00:04:47.765 --> 00:04:51.635
you will feel too should be separated with the tab.

87
00:04:51.635 --> 00:04:54.545
Then only by default your cut command will work.

88
00:04:54.545 --> 00:04:59.990
Suppose if your fields are separated with any other separator,

89
00:04:59.990 --> 00:05:04.655
then your cut, you have to provide some extra options for your cut command.

90
00:05:04.655 --> 00:05:08.315
So Fields operator is nothing but delimiter.

91
00:05:08.315 --> 00:05:10.190
Now, from here onwards,

92
00:05:10.190 --> 00:05:11.285
if I said delimiter,

93
00:05:11.285 --> 00:05:13.805
You have to understand that what you are cut command,

94
00:05:13.805 --> 00:05:15.650
it is a field separator.

95
00:05:15.650 --> 00:05:21.290
And by default, cut command will work based on tab as if wheels operator.

96
00:05:21.290 --> 00:05:24.575
Let me try with the hyphen UAV option.

97
00:05:24.575 --> 00:05:25.940
I want to get fields.

98
00:05:25.940 --> 00:05:29.810
Suppose I wanted to get second field from this file.

99
00:05:29.810 --> 00:05:32.150
Now see that yes, you are getting,

100
00:05:32.150 --> 00:05:35.045
I want to get first third field.

101
00:05:35.045 --> 00:05:36.290
You can take one comma three,

102
00:05:36.290 --> 00:05:38.690
same as your character syntax.

103
00:05:38.690 --> 00:05:41.915
Yes, I'm getting what I wanted to get.

104
00:05:41.915 --> 00:05:45.320
Foster two last than simply going to add one hyphen mouseY.

105
00:05:45.320 --> 00:05:50.720
That isn't what I wanted to get foster two last VI had gone that right.

106
00:05:50.720 --> 00:05:53.825
I want to get foster 2 third.

107
00:05:53.825 --> 00:05:58.910
That's why I wanted to get foster 2 second node iterate one comma two

108
00:05:58.910 --> 00:06:03.470
R1 hyphen to simply iPhone too,

109
00:06:03.470 --> 00:06:06.620
so that it will do foster 22 because by default starting is

110
00:06:06.620 --> 00:06:10.845
always one in your range. The presentation.

111
00:06:10.845 --> 00:06:12.430
Fine.

112
00:06:12.430 --> 00:06:16.750
Now, let me add some more content into that file.

113
00:06:16.750 --> 00:06:18.655
So now I am adding some lines.

114
00:06:18.655 --> 00:06:21.685
But while adding the lines, I mean content.

115
00:06:21.685 --> 00:06:25.975
I have given simply spaces between the words, not the tab.

116
00:06:25.975 --> 00:06:28.975
Simply I'm using space on my keyboard.

117
00:06:28.975 --> 00:06:33.370
Now if I try to apply cut comment on this,

118
00:06:33.370 --> 00:06:38.350
but let me apply.

119
00:06:38.350 --> 00:06:42.475
I wanted to get suppose second field from this file.

120
00:06:42.475 --> 00:06:47.395
Now see the result. For first three lines it's working,

121
00:06:47.395 --> 00:06:50.200
but for last two lines it is not working.

122
00:06:50.200 --> 00:06:53.160
The reason is, we know that.

123
00:06:53.160 --> 00:06:56.720
Whenever if you are using Cut command with iPhone year for option,

124
00:06:56.720 --> 00:07:00.425
the fields should be separated with tap.

125
00:07:00.425 --> 00:07:02.660
Then only cut command will work.

126
00:07:02.660 --> 00:07:05.165
If fields are not separated with a tab,

127
00:07:05.165 --> 00:07:09.800
then that entire land will be considered as one field only.

128
00:07:09.800 --> 00:07:11.570
So that if you do hyphen e,

129
00:07:11.570 --> 00:07:13.010
F one R2, R3,

130
00:07:13.010 --> 00:07:14.960
it will do entire line.

131
00:07:14.960 --> 00:07:18.140
So before going to apply your cut command,

132
00:07:18.140 --> 00:07:21.305
you are fields should be separated with the tap.

133
00:07:21.305 --> 00:07:24.695
I mean, if you want to work with the default separator,

134
00:07:24.695 --> 00:07:27.965
otherwise, let me take one more file.

135
00:07:27.965 --> 00:07:30.500
It is see password file.

136
00:07:30.500 --> 00:07:33.065
Now if you observe in this entire content,

137
00:07:33.065 --> 00:07:34.355
I want to assume,

138
00:07:34.355 --> 00:07:37.910
suppose this colon as the field separator,

139
00:07:37.910 --> 00:07:39.440
then this is foster field,

140
00:07:39.440 --> 00:07:41.210
then x is the second field, Gero,

141
00:07:41.210 --> 00:07:46.430
third, fourth, root, fifth, Slashdot, sixth, seven.

142
00:07:46.430 --> 00:07:51.515
If you, if you consider colon is the separator delimiter.

143
00:07:51.515 --> 00:07:55.550
Now see the first time a playing card iPhone, you have one.

144
00:07:55.550 --> 00:07:59.825
I wanted to get foster field from this password file.

145
00:07:59.825 --> 00:08:01.190
We are getting entirely.

146
00:08:01.190 --> 00:08:03.305
And instead of getting foster field,

147
00:08:03.305 --> 00:08:06.425
I want to get rude the bin name on ADM LB,

148
00:08:06.425 --> 00:08:09.485
But it is not giving the reason is first thing,

149
00:08:09.485 --> 00:08:11.960
you were fields are not separated with the tab.

150
00:08:11.960 --> 00:08:15.455
But we know that here fields are supplemented with the colon.

151
00:08:15.455 --> 00:08:19.850
That's why you have to mention our field separator with iPhone D,

152
00:08:19.850 --> 00:08:24.035
hyphen D in quotation just mentioned the word fields operator.

153
00:08:24.035 --> 00:08:27.350
Now see the result. So this is very,

154
00:08:27.350 --> 00:08:29.820
very important in your real time.

155
00:08:30.970 --> 00:08:37.740
Not only first field, now you can get either foster field on the field and any field.

156
00:08:38.260 --> 00:08:42.365
So in some lines you how 800 field in some lens you don't know how 800 feet.

157
00:08:42.365 --> 00:08:44.135
Let me take one comma four.

158
00:08:44.135 --> 00:08:46.080
Yes, it's giving.

159
00:08:46.210 --> 00:08:50.915
And be clear while giving the output.

160
00:08:50.915 --> 00:08:53.090
It is giving fields operator also.

161
00:08:53.090 --> 00:08:56.105
So this is the first and this is the fourth field.

162
00:08:56.105 --> 00:09:00.630
So between that, there is a field subreddit called colon.

163
00:09:00.640 --> 00:09:05.585
Now, why displaying your output on the out output,

164
00:09:05.585 --> 00:09:08.525
I want to display with the different fields operator.

165
00:09:08.525 --> 00:09:12.200
Then you can write hyphen, hyphen output.

166
00:09:12.200 --> 00:09:17.720
Output delimiter equals two.

167
00:09:17.720 --> 00:09:19.655
I am writing space.

168
00:09:19.655 --> 00:09:24.305
Now see the result. It is giving spaces in your fields, I mean in the output.

169
00:09:24.305 --> 00:09:27.365
Actually if you don't provide this option,

170
00:09:27.365 --> 00:09:30.140
it is giving first fourth field.

171
00:09:30.140 --> 00:09:32.870
But while giving first fourth field,

172
00:09:32.870 --> 00:09:35.510
the fields are separated by the colon because that is

173
00:09:35.510 --> 00:09:38.315
the actual suburban which is there in your file.

174
00:09:38.315 --> 00:09:42.020
But I want to get a different field separator while displaying the content,

175
00:09:42.020 --> 00:09:44.090
then you can use this option.

176
00:09:44.090 --> 00:09:47.100
So see the spaces is that.

177
00:09:47.260 --> 00:09:52.805
And be clear whenever if you are applying this delimiters here out here,

178
00:09:52.805 --> 00:09:55.940
that should be a single character in your cut command.

179
00:09:55.940 --> 00:09:57.665
But if you go with a WK,

180
00:09:57.665 --> 00:10:00.665
You can apply some group of characters, some patterns.

181
00:10:00.665 --> 00:10:03.275
But in cut command you have to replace single character.

182
00:10:03.275 --> 00:10:05.225
That is the limitation with Cut command.

183
00:10:05.225 --> 00:10:07.205
Of course sometimes your cut,

184
00:10:07.205 --> 00:10:08.930
cut command is very useful.

185
00:10:08.930 --> 00:10:12.335
So once if you are good with cut and a blue, a WK commands,

186
00:10:12.335 --> 00:10:13.940
then based on situation,

187
00:10:13.940 --> 00:10:15.875
you will apply either cut or a WK.

188
00:10:15.875 --> 00:10:17.720
So as of now, forget about AWPA,

189
00:10:17.720 --> 00:10:20.135
concentrated on that command.

190
00:10:20.135 --> 00:10:21.935
Fine.

191
00:10:21.935 --> 00:10:25.175
Now let me go in this way.

192
00:10:25.175 --> 00:10:26.825
One comma four.

193
00:10:26.825 --> 00:10:31.220
Otherwise, suppose I want to get faster for you to fourth fields,

194
00:10:31.220 --> 00:10:35.090
then you can take simply one hyphen for,

195
00:10:35.090 --> 00:10:39.740
instead of that hyphen for. That's it.

196
00:10:39.740 --> 00:10:41.300
And see the result in output,

197
00:10:41.300 --> 00:10:42.980
you are getting wheels up address colon.

198
00:10:42.980 --> 00:10:46.760
But I want to separate output field separator

199
00:10:46.760 --> 00:10:53.794
as we'll separate amines delimiter.

200
00:10:53.794 --> 00:10:57.950
Suppose I want to operate with any, let's say pipeline.

201
00:10:57.950 --> 00:11:00.455
Now see the result. That's it.

202
00:11:00.455 --> 00:11:01.865
But make sure that,

203
00:11:01.865 --> 00:11:04.819
that delimiter is a single character.

204
00:11:04.819 --> 00:11:06.425
That's it.

205
00:11:06.425 --> 00:11:09.785
Now, let me come back with your practice.

206
00:11:09.785 --> 00:11:11.720
So cut dxdy.

207
00:11:11.720 --> 00:11:18.995
Now I'm applying cut comment on these hyphen Jeff.

208
00:11:18.995 --> 00:11:21.485
I want to get suppose foster feel.

209
00:11:21.485 --> 00:11:25.910
Then for first three lunch it will work for last two entities not working.

210
00:11:25.910 --> 00:11:28.220
Now, I want to apply

211
00:11:28.220 --> 00:11:35.210
these two fields operator under default to tab on the default delimited called tab.

212
00:11:35.210 --> 00:11:40.625
Then I don't want to display the remaining lines in which you don't have your delimiter,

213
00:11:40.625 --> 00:11:42.305
then I can use hyphen.

214
00:11:42.305 --> 00:11:45.615
Yes, I can club with iPhone and see the result.

215
00:11:45.615 --> 00:11:48.835
So if you club with the iPhone yes,

216
00:11:48.835 --> 00:11:52.045
for your field is operator the meaning for the reason,

217
00:11:52.045 --> 00:11:56.755
please execute this field separator option in which we have,

218
00:11:56.755 --> 00:11:59.590
I mean, execute on the lines,

219
00:11:59.590 --> 00:12:02.335
which lines are having separator.

220
00:12:02.335 --> 00:12:03.880
So in these three lines,

221
00:12:03.880 --> 00:12:07.000
we help separator delimiter in these two lanes.

222
00:12:07.000 --> 00:12:09.070
You don't have delimiter as a tab,

223
00:12:09.070 --> 00:12:12.385
but now don't get confused.

224
00:12:12.385 --> 00:12:16.160
I'm applying delimiter as this space.

225
00:12:17.160 --> 00:12:23.799
And I want to print the first two field from your practice 2.txt.

226
00:12:23.799 --> 00:12:26.560
Now it is working for last two lanes because for

227
00:12:26.560 --> 00:12:29.675
last two lines only you are having the limit as space.

228
00:12:29.675 --> 00:12:32.195
But for first to three lanes you delimiter is a tab.

229
00:12:32.195 --> 00:12:35.960
That's why you want to cut command is not working for first three lines.

230
00:12:35.960 --> 00:12:38.375
It is working only for last two lines.

231
00:12:38.375 --> 00:12:44.990
No, I want to print the output such that in which lines you how your delimiter.

232
00:12:44.990 --> 00:12:49.055
And I want to skip the remaining lanes in which we don't have our delimiter.

233
00:12:49.055 --> 00:12:50.855
So actually you don't have delimiter here.

234
00:12:50.855 --> 00:12:52.280
I mean space delimiter.

235
00:12:52.280 --> 00:12:54.305
I don't want to print this data.

236
00:12:54.305 --> 00:13:00.845
Then you can suppress that output by providing hyphen Yes option with your F.

237
00:13:00.845 --> 00:13:11.490
You can separately apply in this way or you can club both S and that's fine.

238
00:13:11.550 --> 00:13:16.720
Last one, see, we are applying cut command in this way.

239
00:13:16.720 --> 00:13:20.230
Cut hyphen any, any,

240
00:13:20.230 --> 00:13:23.050
maybe B or I see our iPhone f.

241
00:13:23.050 --> 00:13:26.260
Then you are providing your filename.

242
00:13:26.260 --> 00:13:31.915
Instead of that, you can apply cat command.

243
00:13:31.915 --> 00:13:35.170
Then by using this,

244
00:13:35.170 --> 00:13:37.480
you can see the content on this output also,

245
00:13:37.480 --> 00:13:40.165
you can apply cut command simply by using pipeline.

246
00:13:40.165 --> 00:13:43.465
Third, iPhone if your required fields.

247
00:13:43.465 --> 00:13:48.010
So you actually, the syntax which we are using mostly no real-time.

248
00:13:48.010 --> 00:13:49.840
First we will run some command on that output.

249
00:13:49.840 --> 00:13:51.640
We will apply our cut command.

250
00:13:51.640 --> 00:13:52.570
Right?

251
00:13:52.570 --> 00:13:55.035
Let me give one very simple example.

252
00:13:55.035 --> 00:13:59.615
And this example, I'm going to club with the grep command that is actually

253
00:13:59.615 --> 00:14:04.460
most powerful combination grip and cut or grep and AWS,

254
00:14:04.460 --> 00:14:07.520
or maybe combination of grip cut on a WK.

255
00:14:07.520 --> 00:14:12.305
See, suppose our known command,

256
00:14:12.305 --> 00:14:14.390
I'm running HTTPD hyphen b.

257
00:14:14.390 --> 00:14:16.500
You are getting some output.

258
00:14:16.630 --> 00:14:21.125
But here I want to get only two dot-dot-dot for one,

259
00:14:21.125 --> 00:14:22.805
I don't want to get the remaining length.

260
00:14:22.805 --> 00:14:28.760
The how can I separate that directly if I apply cut command on these outputs,

261
00:14:28.760 --> 00:14:31.550
suppose I am a plane pipeline.

262
00:14:31.550 --> 00:14:34.865
If you observe before you are number there is a separate recalled a slash.

263
00:14:34.865 --> 00:14:37.070
That's why a before applying cut command,

264
00:14:37.070 --> 00:14:39.605
I'm applying delimiters slash.

265
00:14:39.605 --> 00:14:42.575
Please separate lines based on slash,

266
00:14:42.575 --> 00:14:45.620
then slash, then before that, this is one field.

267
00:14:45.620 --> 00:14:47.465
After that, the second field,

268
00:14:47.465 --> 00:14:50.480
I need to get second freedom so that I can see the version.

269
00:14:50.480 --> 00:14:53.209
But you are getting two lines of information.

270
00:14:53.209 --> 00:14:56.000
Actually were washing. Is there only in the first line?

271
00:14:56.000 --> 00:14:57.950
I don't want second line.

272
00:14:57.950 --> 00:15:00.680
Then why should I get second line?

273
00:15:00.680 --> 00:15:02.330
I can skip that, right?

274
00:15:02.330 --> 00:15:05.000
So before applying cut command,

275
00:15:05.000 --> 00:15:06.470
if you grip with version,

276
00:15:06.470 --> 00:15:09.785
because in these two lines, if you observe version is there in the first line.

277
00:15:09.785 --> 00:15:11.915
So if we grappled with version,

278
00:15:11.915 --> 00:15:15.755
you can get only first-line offer that I will apply cut command S0,

279
00:15:15.755 --> 00:15:21.050
HTTPD, hyphen v pipeline grip, hyphen e.

280
00:15:21.050 --> 00:15:24.380
One can see the result we're getting first-line.

281
00:15:24.380 --> 00:15:26.270
Then on this output,

282
00:15:26.270 --> 00:15:31.670
I can apply cut command by providing the limit rise slash.

283
00:15:31.670 --> 00:15:33.185
Then if you apply,

284
00:15:33.185 --> 00:15:34.715
if applied delimiter as slash,

285
00:15:34.715 --> 00:15:36.350
then based on slash,

286
00:15:36.350 --> 00:15:38.390
your data is divided into fields.

287
00:15:38.390 --> 00:15:40.235
So before slash one part,

288
00:15:40.235 --> 00:15:41.915
offer slash, second part,

289
00:15:41.915 --> 00:15:43.760
I mean this is one field,

290
00:15:43.760 --> 00:15:46.850
the second field, our content is there in the second field.

291
00:15:46.850 --> 00:15:48.605
That's why I'm printing second field.

292
00:15:48.605 --> 00:15:52.340
Now see there is a, but you are getting this parenthesis also.

293
00:15:52.340 --> 00:15:53.600
I wanted to remove them.

294
00:15:53.600 --> 00:15:57.605
Then just apply one more time cart command.

295
00:15:57.605 --> 00:16:01.025
And if you observe between these two, there is a space.

296
00:16:01.025 --> 00:16:05.690
And whenever if you are playing cut command called command willow will work based on tab,

297
00:16:05.690 --> 00:16:07.805
but I need to work based on space.

298
00:16:07.805 --> 00:16:09.635
Then you have to apply your delimited,

299
00:16:09.635 --> 00:16:11.540
That is a space.

300
00:16:11.540 --> 00:16:15.245
Then if you apply delimit resist space,

301
00:16:15.245 --> 00:16:17.300
that means based on space,

302
00:16:17.300 --> 00:16:20.120
your data is divided into fields before that spaced

303
00:16:20.120 --> 00:16:23.840
one field after that space, one field.

304
00:16:23.840 --> 00:16:25.445
But we need to get first a field.

305
00:16:25.445 --> 00:16:26.570
That's why I'm writing hyphen.

306
00:16:26.570 --> 00:16:29.760
You have one Nazi.

307
00:16:30.010 --> 00:16:33.815
Now this entire result you can store in a variable also,

308
00:16:33.815 --> 00:16:38.375
if you remember somewhere we discussed how to store the command output into a variable.

309
00:16:38.375 --> 00:16:41.645
It may be on or maybe on command line.

310
00:16:41.645 --> 00:16:47.750
Suppose I am taking a variable called HTTPD was Shun equals $2 parentheses inside that,

311
00:16:47.750 --> 00:16:49.190
write your entire command.

312
00:16:49.190 --> 00:16:53.224
That should now see a quote Dollar HTTP,

313
00:16:53.224 --> 00:16:56.600
PD underscore Washington, that is our variable.

314
00:16:56.600 --> 00:17:01.265
Now let me print it that can see the content NO3.

315
00:17:01.265 --> 00:17:02.825
So in this way,

316
00:17:02.825 --> 00:17:07.550
we can modify our output by using your grip and cut command.

317
00:17:07.550 --> 00:17:08.930
Okay?

318
00:17:08.930 --> 00:17:14.120
Okay, now let me finally do the document for you or cut command, and I will share this.

319
00:17:14.120 --> 00:17:16.970
You can download this document.

320
00:17:16.970 --> 00:17:22.340
Say cut options, positions, maybe fields.

321
00:17:22.340 --> 00:17:23.930
Position means first quarter,

322
00:17:23.930 --> 00:17:25.100
second quarter or foster byte.

323
00:17:25.100 --> 00:17:28.520
Second byte fails means foster feel or second will, something like that.

324
00:17:28.520 --> 00:17:32.945
Then you can also provide a range of fields or range of positions.

325
00:17:32.945 --> 00:17:36.650
Or you can first run some command on that output.

326
00:17:36.650 --> 00:17:38.570
Also, you can apply your cut command.

327
00:17:38.570 --> 00:17:42.290
Now here we have options for your cut command as hyphen, hyphen,

328
00:17:42.290 --> 00:17:45.020
see an iPhone if please concentrate on iPhone C and

329
00:17:45.020 --> 00:17:48.890
hyphen here and mostly uses one is hyphen year.

330
00:17:48.890 --> 00:17:51.800
Then ranges means.

331
00:17:51.800 --> 00:17:55.400
Suppose if I give you only two for iPhone B or iPhones,

332
00:17:55.400 --> 00:17:58.610
your iPhone you have for iPhone B and F and C,

333
00:17:58.610 --> 00:18:01.280
two means second byte or second character for

334
00:18:01.280 --> 00:18:05.570
iPhone IAAF option two means second field to iPhone,

335
00:18:05.570 --> 00:18:07.145
second byte to two,

336
00:18:07.145 --> 00:18:10.385
last byte, or second to last character.

337
00:18:10.385 --> 00:18:13.490
And in iPhone you have second field to last field.

338
00:18:13.490 --> 00:18:16.130
Now you know the uses of remaining things.

339
00:18:16.130 --> 00:18:17.120
Right?

340
00:18:17.120 --> 00:18:22.700
Now, I am giving the syntax for biden character separately and for field separately.

341
00:18:22.700 --> 00:18:27.995
Kurt hyphen b, then position orange oppositions,

342
00:18:27.995 --> 00:18:29.915
characters or range of characters.

343
00:18:29.915 --> 00:18:33.830
That's it. Okay.

344
00:18:33.830 --> 00:18:36.935
So please take this document and the practice

345
00:18:36.935 --> 00:18:40.925
along with this video so that you will be good with your cut command.

346
00:18:40.925 --> 00:18:46.235
So you can also use iphone IS complement to complement the output.

347
00:18:46.235 --> 00:18:49.460
Suppose you want to get second character,

348
00:18:49.460 --> 00:18:51.695
then you are taking hyphen C2.

349
00:18:51.695 --> 00:18:54.950
But before I fancy, suppose you've have play hyphen, hyphen compliment.

350
00:18:54.950 --> 00:18:58.115
You are going to get characters other than to second character,

351
00:18:58.115 --> 00:19:00.035
but say, same thing,

352
00:19:00.035 --> 00:19:03.300
same complement will apply for fields also.

353
00:19:06.910 --> 00:19:09.300
That's it.

354
00:19:09.970 --> 00:19:13.670
Okay, please download this document and practice along with

355
00:19:13.670 --> 00:19:17.495
this document by watching this video so that you will be good width cut command.

356
00:19:17.495 --> 00:19:18.650
Okay?

357
00:19:18.650 --> 00:19:20.970
Okay, thank you.

