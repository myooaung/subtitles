WEBVTT
ï»¿1
00:00:00.800 --> 00:00:05.280
Friends, this is a simple practice session with Grip command.

2
00:00:05.280 --> 00:00:06.330
Let me start there.

3
00:00:06.330 --> 00:00:10.725
Nobody force requirement is write a pattern to match only directories.

4
00:00:10.725 --> 00:00:13.380
Suppose if I run ls siphon LRT command,

5
00:00:13.380 --> 00:00:15.675
it is giving the list of directories and files,

6
00:00:15.675 --> 00:00:17.804
but I want to get only directories.

7
00:00:17.804 --> 00:00:22.455
I mean, I need to filter such that it has to skip files information,

8
00:00:22.455 --> 00:00:25.155
and it has to display directories.

9
00:00:25.155 --> 00:00:28.500
So for that, an Iterator pattern for Grip command.

10
00:00:28.500 --> 00:00:31.920
So if you want to play Grip command on this output, firstly,

11
00:00:31.920 --> 00:00:34.200
how to write Ls siphoned LRT because from not only

12
00:00:34.200 --> 00:00:36.615
orbiting your basic code put then on that,

13
00:00:36.615 --> 00:00:39.190
you have to apply a filter by using grep command.

14
00:00:39.190 --> 00:00:44.375
Here, I'm taking option has hyphen capitally because I want write a pattern.

15
00:00:44.375 --> 00:00:46.385
Otherwise by default just to take

16
00:00:46.385 --> 00:00:49.190
hyphen capitalists are default option for your grep command.

17
00:00:49.190 --> 00:00:50.675
That is the best-practice.

18
00:00:50.675 --> 00:00:51.755
Fine.

19
00:00:51.755 --> 00:00:56.314
Now here I need to write a pattern such that it has to identify only directories.

20
00:00:56.314 --> 00:00:59.435
First observe the output of your LSI fidelity.

21
00:00:59.435 --> 00:01:03.290
If you observe in this entire output the lines of just starting with

22
00:01:03.290 --> 00:01:07.595
a D or the directories on the lanes which are starting with iPhone or the files.

23
00:01:07.595 --> 00:01:10.070
That's why I am writing cap

24
00:01:10.070 --> 00:01:14.630
d. That means printed the lanes which are starting with the d,

25
00:01:14.630 --> 00:01:16.595
then you are getting their address information.

26
00:01:16.595 --> 00:01:21.830
That's it. That is a simple pattern to filter only directories.

27
00:01:21.830 --> 00:01:25.580
Next thing, write a pattern to match only Files.

28
00:01:25.580 --> 00:01:26.645
C here.

29
00:01:26.645 --> 00:01:29.075
If it is a file that is starting with iPhone,

30
00:01:29.075 --> 00:01:31.925
then instead of D, if it take hyphen,

31
00:01:31.925 --> 00:01:34.640
then it will do the list of files.

32
00:01:34.640 --> 00:01:36.215
That's it.

33
00:01:36.215 --> 00:01:39.260
Now let me go with one more requirement.

34
00:01:39.260 --> 00:01:42.860
Find these servers IPV4 info from if.

35
00:01:42.860 --> 00:01:45.890
Finally, suppose, just assume

36
00:01:45.890 --> 00:01:50.480
that we have is some file in that we have some IPv4 addresses.

37
00:01:50.480 --> 00:01:52.340
And if we observe here,

38
00:01:52.340 --> 00:01:54.320
this is one IPv4 address.

39
00:01:54.320 --> 00:01:58.190
Second one, part fourth, fifth,

40
00:01:58.190 --> 00:02:03.890
but 50 is not a valid IPV4 because at very first part you are having four digits.

41
00:02:03.890 --> 00:02:06.080
See basically IPV4 means.

42
00:02:06.080 --> 00:02:09.470
So there are four parts in each and every part you

43
00:02:09.470 --> 00:02:13.100
may have either one visit our two digits or three digits,

44
00:02:13.100 --> 00:02:14.315
but not four digits.

45
00:02:14.315 --> 00:02:17.660
If you observe here three valid here, one valid.

46
00:02:17.660 --> 00:02:19.250
Suppose here to valid,

47
00:02:19.250 --> 00:02:20.915
but here we are having four digits.

48
00:02:20.915 --> 00:02:23.550
That is not a valid IPV4.

49
00:02:23.590 --> 00:02:25.730
Fine.

50
00:02:25.730 --> 00:02:28.640
Now on these output or how to apply

51
00:02:28.640 --> 00:02:33.065
a Grip command such that I have to write a pattern such that

52
00:02:33.065 --> 00:02:40.250
I how to fetch match only IPV4 addresses from this entire output.

53
00:02:40.250 --> 00:02:42.815
Then how you can write up pattern here.

54
00:02:42.815 --> 00:02:45.260
So before going to write a pattern first,

55
00:02:45.260 --> 00:02:47.599
observe your IPV4 addresses.

56
00:02:47.599 --> 00:02:50.480
If you go with any IPv4 address,

57
00:02:50.480 --> 00:02:52.880
it is having always four parts.

58
00:02:52.880 --> 00:02:56.750
First part, second part, third, fourth.

59
00:02:56.750 --> 00:02:58.700
And in each and every part,

60
00:02:58.700 --> 00:03:03.530
you may how either one visit or two digits or three digits.

61
00:03:03.530 --> 00:03:05.720
If you go with any part,

62
00:03:05.720 --> 00:03:09.275
you may have either one or two or three digits, that's it.

63
00:03:09.275 --> 00:03:12.105
Not more than three, not less than one.

64
00:03:12.105 --> 00:03:13.570
Fine.

65
00:03:13.570 --> 00:03:16.585
Then that is our logic to write a pattern.

66
00:03:16.585 --> 00:03:19.750
First, let me write a pattern for only one part.

67
00:03:19.750 --> 00:03:25.780
If I take only one part and if I if I assume that parties having only one deceit,

68
00:03:25.780 --> 00:03:28.090
that dessert may be 0 or one,

69
00:03:28.090 --> 00:03:30.295
or two, or three or four, up to nine.

70
00:03:30.295 --> 00:03:34.015
That's why I am writing 0 to nine.

71
00:03:34.015 --> 00:03:39.340
Now the meaning for any one number from this range.

72
00:03:39.340 --> 00:03:41.125
But in each and every part,

73
00:03:41.125 --> 00:03:45.715
you may how either one does it for one digit, this is correct.

74
00:03:45.715 --> 00:03:47.470
Suppose if you have two digits,

75
00:03:47.470 --> 00:03:51.040
then again you have to write 0 to nine.

76
00:03:51.040 --> 00:03:55.440
If you have three digits, 0 to nine.

77
00:03:55.440 --> 00:04:00.545
But you may have either one or two times or three times.

78
00:04:00.545 --> 00:04:01.865
So instead of writing in this way,

79
00:04:01.865 --> 00:04:04.730
I can write one comma three in curly braces,

80
00:04:04.730 --> 00:04:07.325
you know, the meaningful curly brace.

81
00:04:07.325 --> 00:04:10.700
So 123 curly braces.

82
00:04:10.700 --> 00:04:13.910
If you write one comma three, this number,

83
00:04:13.910 --> 00:04:18.500
or any desert, maybe one time or two times or three times. That's it.

84
00:04:18.500 --> 00:04:22.610
An offer. They offer your first two part you will having dot.

85
00:04:22.610 --> 00:04:24.380
But if I write it down to,

86
00:04:24.380 --> 00:04:28.730
to match a dot in the regular in your grep command pattern,

87
00:04:28.730 --> 00:04:32.300
then that is not a correct because.me any character.

88
00:04:32.300 --> 00:04:34.820
But if you want to match dot with the dot,

89
00:04:34.820 --> 00:04:36.695
you had to write Slashdot.

90
00:04:36.695 --> 00:04:43.145
Now, this is the 40 were first two-part pattern,

91
00:04:43.145 --> 00:04:45.875
but this type of parts are there four times,

92
00:04:45.875 --> 00:04:49.295
then let me write same thing four times.

93
00:04:49.295 --> 00:04:51.920
But for last apart you are not having

94
00:04:51.920 --> 00:04:55.220
dot c is if this is last apart, you don't have any dot.

95
00:04:55.220 --> 00:05:00.320
That's it. And suppose this is the valid part.

96
00:05:00.320 --> 00:05:03.785
Valid a pattern to fit your IPV4 addresses.

97
00:05:03.785 --> 00:05:06.860
But let me try, see the result.

98
00:05:06.860 --> 00:05:08.630
You are getting for this.

99
00:05:08.630 --> 00:05:10.100
It is matching this IP,

100
00:05:10.100 --> 00:05:11.300
the IP, the IP,

101
00:05:11.300 --> 00:05:15.170
this IB, and it is also matching this IB.

102
00:05:15.170 --> 00:05:16.250
That is not a valid IP,

103
00:05:16.250 --> 00:05:17.495
right? But you are getting that lane.

104
00:05:17.495 --> 00:05:20.090
I don't want to get that line then.

105
00:05:20.090 --> 00:05:24.509
Just the right starting and ending some space.

106
00:05:27.430 --> 00:05:34.020
Now see there isn't. You are getting your IPV 400 assess only.

107
00:05:36.340 --> 00:05:37.925
Right?

108
00:05:37.925 --> 00:05:39.600
That's it.

