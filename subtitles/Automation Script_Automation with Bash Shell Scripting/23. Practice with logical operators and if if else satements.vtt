WEBVTT
ï»¿1
00:00:00.260 --> 00:00:04.260
Prince, Here we are practicing on our known concepts.

2
00:00:04.260 --> 00:00:09.435
They are like logical AND logical or if an if else statements with simple shell script.

3
00:00:09.435 --> 00:00:14.280
The purpose of shells copies just to verify whether HTTPD is installed or not.

4
00:00:14.280 --> 00:00:15.930
And if it is installed,

5
00:00:15.930 --> 00:00:19.635
then I need to find the washing off that installed history, DBT.

6
00:00:19.635 --> 00:00:21.450
Let me go with step-by-step.

7
00:00:21.450 --> 00:00:24.450
First, I will implement the logic just to verify whether actually

8
00:00:24.450 --> 00:00:27.090
BD is installed or mark and friends,

9
00:00:27.090 --> 00:00:30.050
we can implement this logic with the different ways.

10
00:00:30.050 --> 00:00:32.615
There are different possibilities to implement this logic.

11
00:00:32.615 --> 00:00:35.405
I will show you all the possibilities you just go with,

12
00:00:35.405 --> 00:00:37.085
whichever is simple for you.

13
00:00:37.085 --> 00:00:42.560
Let me open a shell script L. Let me take subscript name as suppose HTTPD,

14
00:00:42.560 --> 00:00:45.980
Washington dot SH, The very first line.

15
00:00:45.980 --> 00:00:47.795
I am writing our shebang line.

16
00:00:47.795 --> 00:00:50.435
Then after that, I'm writing some comments.

17
00:00:50.435 --> 00:00:53.825
Let's say who implemented this shell script?

18
00:00:53.825 --> 00:00:56.825
Then what is the purpose of this shell script?

19
00:00:56.825 --> 00:01:00.200
Finding HTTPD was shen.

20
00:01:00.200 --> 00:01:04.760
If it is installed, let me save it.

21
00:01:04.760 --> 00:01:08.690
As of now, we don't have any logic to execute in

22
00:01:08.690 --> 00:01:13.190
our shell script because we have only shebang line and two comments.

23
00:01:13.190 --> 00:01:16.955
Anyway, comments won't execute while learning your shell script.

24
00:01:16.955 --> 00:01:20.300
C that I'm running, that is notebook.

25
00:01:20.300 --> 00:01:24.140
Now, before going to write your logic inside of your shell script,

26
00:01:24.140 --> 00:01:27.365
suppose if HTTPD services installed on your host,

27
00:01:27.365 --> 00:01:32.900
then you can verify with which HTTPD so that you will get the location of that HUD.

28
00:01:32.900 --> 00:01:36.380
But if it is installed, and after running that command,

29
00:01:36.380 --> 00:01:39.725
cd status of that success,

30
00:01:39.725 --> 00:01:41.480
if HTTPD is there,

31
00:01:41.480 --> 00:01:44.360
this command will do exit status as 0.

32
00:01:44.360 --> 00:01:46.580
Let me verify with HTTPD.

33
00:01:46.580 --> 00:01:49.145
Suppose some other package.

34
00:01:49.145 --> 00:01:51.995
Then offer that CD exit status.

35
00:01:51.995 --> 00:01:55.255
That means while working with which command,

36
00:01:55.255 --> 00:01:56.680
if that's obvious is there,

37
00:01:56.680 --> 00:02:00.295
it will do the Xist raters as if it is not there,

38
00:02:00.295 --> 00:02:02.440
it will exit status as one.

39
00:02:02.440 --> 00:02:05.740
We know how to club two commands by using

40
00:02:05.740 --> 00:02:11.545
logical AND logical OR Let me Club two commands using logical and operator.

41
00:02:11.545 --> 00:02:13.720
First, let me show you that simple syntax.

42
00:02:13.720 --> 00:02:15.505
We already know that command one,

43
00:02:15.505 --> 00:02:17.965
logical end commander to.

44
00:02:17.965 --> 00:02:22.810
Now we know that command will execute if command one is success.

45
00:02:22.810 --> 00:02:26.845
So what I'm doing is command when I'm taking which HTTPD,

46
00:02:26.845 --> 00:02:29.860
if it is success means actually buddies present on this host.

47
00:02:29.860 --> 00:02:38.390
That's why the second command I am writing simply echo HTTPD is installed on this host.

48
00:02:38.390 --> 00:02:42.560
Let me copy this and paste it on your terminal and see the result.

49
00:02:42.560 --> 00:02:44.840
Httpd is installed on this host.

50
00:02:44.840 --> 00:02:48.455
Anyway, we no need this output.

51
00:02:48.455 --> 00:02:52.370
That's why what I'm doing is 4y foster command,

52
00:02:52.370 --> 00:02:54.965
whether you are going to get an output out success output.

53
00:02:54.965 --> 00:02:57.170
I don't want to see that because

54
00:02:57.170 --> 00:03:01.475
our second command is depending on the exit status of this command.

55
00:03:01.475 --> 00:03:03.920
And if it is success, it will execute.

56
00:03:03.920 --> 00:03:06.065
If it is failed, it would exclude.

57
00:03:06.065 --> 00:03:09.965
So what I am doing is that output foster command output I am nullifying.

58
00:03:09.965 --> 00:03:11.225
I don't want to capture that.

59
00:03:11.225 --> 00:03:12.515
Now, see that.

60
00:03:12.515 --> 00:03:14.210
Now I will do one more thing.

61
00:03:14.210 --> 00:03:17.670
Let me remove my HUD beauty.

62
00:03:17.670 --> 00:03:22.255
And my host, I removed.

63
00:03:22.255 --> 00:03:24.430
Now let me run our command and see the result.

64
00:03:24.430 --> 00:03:28.765
It is not displayed because now this command was failed.

65
00:03:28.765 --> 00:03:32.005
If it is phase, then logical and operator,

66
00:03:32.005 --> 00:03:33.580
operator doesn't allow px.

67
00:03:33.580 --> 00:03:37.930
Good next to command, a second command will execute only if the first command is success.

68
00:03:37.930 --> 00:03:40.855
Why it is getting fail because he's not installed.

69
00:03:40.855 --> 00:03:47.200
Let me take this logic and let me write copy that into our shell script.

70
00:03:47.200 --> 00:03:48.670
These very first way,

71
00:03:48.670 --> 00:03:51.370
simple way just to display.

72
00:03:51.370 --> 00:03:56.590
If heterogeneity is installed. Let me open that.

73
00:03:56.590 --> 00:04:02.360
But that's, let me save it underneath.

74
00:04:02.490 --> 00:04:05.920
You're not getting an awkward because actually it is not installed.

75
00:04:05.920 --> 00:04:07.435
Suppose, if actually believes there,

76
00:04:07.435 --> 00:04:10.070
let me install my history degree.

77
00:04:16.110 --> 00:04:20.260
Now he cheated buddies there, you are getting your output.

78
00:04:20.260 --> 00:04:23.560
So as of now you are shell script is displaying

79
00:04:23.560 --> 00:04:27.445
the output like Hetchy deputies installed on this host.

80
00:04:27.445 --> 00:04:28.765
If everybody is present,

81
00:04:28.765 --> 00:04:32.215
if it is not present, then we are not displaying any information.

82
00:04:32.215 --> 00:04:36.490
That's fine. Now, same command.

83
00:04:36.490 --> 00:04:39.595
If you remember, this command also,

84
00:04:39.595 --> 00:04:42.160
we can implement in terms of if condition as well,

85
00:04:42.160 --> 00:04:47.890
only simply IF which HTTPD.

86
00:04:47.890 --> 00:04:50.770
Let me take that redirection.

87
00:04:50.770 --> 00:04:52.030
I want to read it out,

88
00:04:52.030 --> 00:04:54.295
put into del null VCF file.

89
00:04:54.295 --> 00:04:56.170
We're nullifying the output.

90
00:04:56.170 --> 00:04:59.590
Let me copy and paste this entire thing.

91
00:04:59.590 --> 00:05:04.120
Otherwise, cost, let me write the syntax of your simple if condition,

92
00:05:04.120 --> 00:05:08.425
if command one, then close with their fight,

93
00:05:08.425 --> 00:05:11.710
then here you can add any number of commands.

94
00:05:11.710 --> 00:05:15.760
So the way how this syntax is working,

95
00:05:15.760 --> 00:05:17.080
the same way you are simple.

96
00:05:17.080 --> 00:05:20.065
If will work. Combined one is success,

97
00:05:20.065 --> 00:05:21.550
then only command we will excuse.

98
00:05:21.550 --> 00:05:23.290
Or simply if command one is success,

99
00:05:23.290 --> 00:05:25.755
then the lines which are there between then and phi,

100
00:05:25.755 --> 00:05:27.845
those lines will execute.

101
00:05:27.845 --> 00:05:30.920
That one day with the if condition is,

102
00:05:30.920 --> 00:05:34.115
you can execute a number of lines here.

103
00:05:34.115 --> 00:05:37.520
A number of commands that to independently.

104
00:05:37.520 --> 00:05:39.830
But if I want to execute one more command here,

105
00:05:39.830 --> 00:05:42.995
I need to club with suppose logical end, then command.

106
00:05:42.995 --> 00:05:45.560
But command three will exclude if command to

107
00:05:45.560 --> 00:05:48.365
his success and command legs could have command one is success.

108
00:05:48.365 --> 00:05:50.120
Finally, to exclude command three,

109
00:05:50.120 --> 00:05:52.250
these two commands must be success.

110
00:05:52.250 --> 00:05:55.025
But here if command one is success, commands,

111
00:05:55.025 --> 00:05:57.170
and command three will execute without

112
00:05:57.170 --> 00:06:00.050
depending command three on the exit status of command.

113
00:06:00.050 --> 00:06:02.060
That is that one digit symbol.

114
00:06:02.060 --> 00:06:05.690
But as of now, you can go with either first logic.

115
00:06:05.690 --> 00:06:07.980
I mean, with this logic.

116
00:06:07.980 --> 00:06:10.600
Let me remove last command three.

117
00:06:10.600 --> 00:06:13.675
So first-line logic, simple if condition,

118
00:06:13.675 --> 00:06:15.025
you can use any one of that.

119
00:06:15.025 --> 00:06:22.280
So this Laozi is nothing but the first recommend, whatever we have.

120
00:06:23.340 --> 00:06:26.620
Then close with their file.

121
00:06:26.620 --> 00:06:28.285
And between then and therefore,

122
00:06:28.285 --> 00:06:30.610
whatever the lines you want to execute,

123
00:06:30.610 --> 00:06:32.260
this command is success.

124
00:06:32.260 --> 00:06:33.820
Those lines we can write here.

125
00:06:33.820 --> 00:06:37.525
So as of now, if that command is success means HUD buddies present.

126
00:06:37.525 --> 00:06:40.030
That's why I'm running this command.

127
00:06:40.030 --> 00:06:42.565
Let say. So this is one more way.

128
00:06:42.565 --> 00:06:44.540
Let me copy.

129
00:06:44.820 --> 00:06:48.925
Open your heterogeneity Wusheng shell script.

130
00:06:48.925 --> 00:06:51.055
Let me comment this line.

131
00:06:51.055 --> 00:06:54.235
Now I'm pasting our logic.

132
00:06:54.235 --> 00:06:57.550
Let me rearrange spaces so guys be clear.

133
00:06:57.550 --> 00:06:59.035
Between then and F phi,

134
00:06:59.035 --> 00:07:03.175
you can add any number of lines without giving any spaces at very first,

135
00:07:03.175 --> 00:07:05.079
without giving any indentation.

136
00:07:05.079 --> 00:07:06.955
Indentation is nothing but space.

137
00:07:06.955 --> 00:07:08.590
But just upon looking purpose,

138
00:07:08.590 --> 00:07:10.540
I'm giving at least two or four spaces.

139
00:07:10.540 --> 00:07:12.850
Nazi, That is my intention.

140
00:07:12.850 --> 00:07:15.700
1234

141
00:07:15.700 --> 00:07:17.725
You can do any number of spaces.

142
00:07:17.725 --> 00:07:21.670
Let me save it and run.

143
00:07:21.670 --> 00:07:22.825
Your getting.

144
00:07:22.825 --> 00:07:24.460
Everybody is installed on the source.

145
00:07:24.460 --> 00:07:26.500
In case if HTTPD is not installed,

146
00:07:26.500 --> 00:07:28.045
then you won't get output here.

147
00:07:28.045 --> 00:07:30.205
We will see that as of now,

148
00:07:30.205 --> 00:07:33.180
if HTTPD is installed, then only you will get output.

149
00:07:33.180 --> 00:07:35.765
This allows the console.

150
00:07:35.765 --> 00:07:38.030
You can implement with one more way.

151
00:07:38.030 --> 00:07:42.680
What is that means weekly up there is somewhat confused but very simple.

152
00:07:42.680 --> 00:07:45.035
First, I will run this command.

153
00:07:45.035 --> 00:07:48.920
First. I will run that command after that.

154
00:07:48.920 --> 00:07:51.005
See you after earning any command,

155
00:07:51.005 --> 00:07:53.150
if you display a chordal question-mark value,

156
00:07:53.150 --> 00:07:54.650
that is nothing but existed,

157
00:07:54.650 --> 00:07:57.995
a software command, whatever you ran previously.

158
00:07:57.995 --> 00:08:00.140
So after running this command,

159
00:08:00.140 --> 00:08:03.740
I'm storing the HTTPD status.

160
00:08:03.740 --> 00:08:08.630
I'm, I mean, I'm taking a variable called HTTPD status equals $2 question mark.

161
00:08:08.630 --> 00:08:12.770
So if this command is success than dollar percent mark evaluates to

162
00:08:12.770 --> 00:08:17.170
0 and that value we are storing into this in case if it is failed,

163
00:08:17.170 --> 00:08:19.165
then it will do.

164
00:08:19.165 --> 00:08:22.345
You can status as non-zero that we're storing into this.

165
00:08:22.345 --> 00:08:24.280
Now, this variable value,

166
00:08:24.280 --> 00:08:25.930
I will use an if condition.

167
00:08:25.930 --> 00:08:31.780
If you remember, we have a test command to compress some numbers or some strings.

168
00:08:31.780 --> 00:08:35.335
Now what I'm using, what I am doing here is this value,

169
00:08:35.335 --> 00:08:37.660
whatever it is that inside of this dot value,

170
00:08:37.660 --> 00:08:39.595
I'm comparing with 0.

171
00:08:39.595 --> 00:08:41.365
See how I'm comparing.

172
00:08:41.365 --> 00:08:45.070
You heard right, some command here that is test to command for testicle manually 100,

173
00:08:45.070 --> 00:08:46.570
take double square brackets.

174
00:08:46.570 --> 00:08:52.060
So whatever the value is there inside of your HTTPD dot value,

175
00:08:52.060 --> 00:08:54.205
I'm comparing with 0.

176
00:08:54.205 --> 00:08:59.390
If it is 0, this value is equal to 0, means not optional.

177
00:08:59.390 --> 00:09:02.165
Mac value is 0. Then this command was success.

178
00:09:02.165 --> 00:09:06.065
That means first let me write syntax.

179
00:09:06.065 --> 00:09:07.835
Now here I can write now,

180
00:09:07.835 --> 00:09:10.520
if it is success means Not a question

181
00:09:10.520 --> 00:09:13.490
mark because that value only we are sorting into this.

182
00:09:13.490 --> 00:09:15.875
You really do domains. This command is success.

183
00:09:15.875 --> 00:09:17.345
That means actually been installed.

184
00:09:17.345 --> 00:09:20.510
That's why this logic I can write here.

185
00:09:20.510 --> 00:09:24.230
Now, this one and this one both are same,

186
00:09:24.230 --> 00:09:26.915
but the unnecessary writing two extra lengths.

187
00:09:26.915 --> 00:09:30.500
But sometimes you may need this type of logic also.

188
00:09:30.500 --> 00:09:35.810
Fine. Now, let me Xcode that logic as well.

189
00:09:35.810 --> 00:09:37.760
Copy this entire logic,

190
00:09:37.760 --> 00:09:40.725
whatever script open us.

191
00:09:40.725 --> 00:09:43.255
And let me comment this multiple lines.

192
00:09:43.255 --> 00:09:45.025
So to come into your multiple lines,

193
00:09:45.025 --> 00:09:47.755
you have to take multi-line comments syntax.

194
00:09:47.755 --> 00:09:49.255
That's it.

195
00:09:49.255 --> 00:09:53.180
Let me copy and paste your logic.

196
00:09:53.250 --> 00:09:55.780
See while running your shell script,

197
00:09:55.780 --> 00:09:58.780
this line will execute so that the operating system knows

198
00:09:58.780 --> 00:10:04.195
that bash is the shell to execute this shell script.

199
00:10:04.195 --> 00:10:06.025
Then, which actually booty,

200
00:10:06.025 --> 00:10:07.690
if HTTPD is present,

201
00:10:07.690 --> 00:10:14.125
then the exit status of this command is that we are storing into this and that value.

202
00:10:14.125 --> 00:10:19.600
I'm comparing annuity if condition if both valleys or these value I'm combining with 0.

203
00:10:19.600 --> 00:10:23.685
If this is 0, then there is success. If it is success, you know.

204
00:10:23.685 --> 00:10:26.405
In case if everybody's not installed,

205
00:10:26.405 --> 00:10:28.310
the odd question mark values non-GMO,

206
00:10:28.310 --> 00:10:31.790
that value we are storing into this dot value we are comparing with 0.

207
00:10:31.790 --> 00:10:33.050
So if it is non-zero,

208
00:10:33.050 --> 00:10:34.820
then these two are not equal.

209
00:10:34.820 --> 00:10:37.445
If they are not equal, this entire thing will get fail.

210
00:10:37.445 --> 00:10:39.485
Fail means you are if doesn't

211
00:10:39.485 --> 00:10:41.900
allow to execute the lines which are there between, then and.

212
00:10:41.900 --> 00:10:44.000
That's very nice.

213
00:10:44.000 --> 00:10:47.885
All three logics are same, same purpose.

214
00:10:47.885 --> 00:10:52.190
Now let me save it. And I'm running that.

215
00:10:52.190 --> 00:10:55.650
Let me remove your HTTPD.

216
00:11:00.370 --> 00:11:02.765
I removed my HUD pretty,

217
00:11:02.765 --> 00:11:05.330
but I am running, no, I'm not getting output.

218
00:11:05.330 --> 00:11:09.725
So now if you're HTTPD is installed,

219
00:11:09.725 --> 00:11:11.150
then we are displaying the output.

220
00:11:11.150 --> 00:11:12.230
If it is not installed,

221
00:11:12.230 --> 00:11:13.310
it we have not displayed.

222
00:11:13.310 --> 00:11:15.665
But my intention is if it is installed,

223
00:11:15.665 --> 00:11:18.005
I have to say yes, hatchability installed.

224
00:11:18.005 --> 00:11:22.955
If it is not, then how to display HTTPD is not installed.

225
00:11:22.955 --> 00:11:28.200
C. Now, I'm taking these two commands concept.

226
00:11:29.110 --> 00:11:32.360
If you remember, if you combine them with

227
00:11:32.360 --> 00:11:35.810
some other command by using logical or operator,

228
00:11:35.810 --> 00:11:40.790
command three will execute if command one is failed or command is fair.

229
00:11:40.790 --> 00:11:43.595
If any one of these two commands or fail,

230
00:11:43.595 --> 00:11:45.215
then command through links skewed.

231
00:11:45.215 --> 00:11:46.910
So when this command one will fail,

232
00:11:46.910 --> 00:11:55.520
command one is nothing but let me take this to command one.

233
00:11:55.520 --> 00:11:57.665
We fail if actually please not installed,

234
00:11:57.665 --> 00:12:02.255
i've datetime command tree will fail means attribute is not there.

235
00:12:02.255 --> 00:12:04.790
That's why I'm covering with the logical OR,

236
00:12:04.790 --> 00:12:11.150
and here I am writing a HUD beauty is not installed.

237
00:12:11.150 --> 00:12:14.495
So this is actually we need for our concept.

238
00:12:14.495 --> 00:12:18.060
Let me copy it and go to your shell script.

239
00:12:21.220 --> 00:12:26.060
And let me comment now your previous logic.

240
00:12:26.060 --> 00:12:30.170
So finally we will create our complete code. Comment 22.

241
00:12:30.170 --> 00:12:33.515
I am writing suppose on the here.

242
00:12:33.515 --> 00:12:38.915
And now let me run our shell script. Be clear.

243
00:12:38.915 --> 00:12:41.120
As of now you have only one line in your shell script

244
00:12:41.120 --> 00:12:44.135
and this is the line remaining. All are commentary.

245
00:12:44.135 --> 00:12:49.370
Now let me run on, see that is HTTPD is not installed.

246
00:12:49.370 --> 00:12:53.700
Now, if you install your hips to the beauty on this host.

247
00:12:55.030 --> 00:12:58.325
And after dark, if you run your shell script,

248
00:12:58.325 --> 00:12:59.540
now it will say, hey,

249
00:12:59.540 --> 00:13:01.205
chip, it is installed.

250
00:13:01.205 --> 00:13:04.265
Let's say one more thing.

251
00:13:04.265 --> 00:13:06.830
Same syntax, same logic.

252
00:13:06.830 --> 00:13:11.775
You can implement in terms of if and else statements.

253
00:13:11.775 --> 00:13:15.625
Let me get the syntax Costs. Command one.

254
00:13:15.625 --> 00:13:19.555
Then L Ye Fei.

255
00:13:19.555 --> 00:13:21.820
Knife command one is success.

256
00:13:21.820 --> 00:13:25.420
Whatever you want to run the command or commands you

257
00:13:25.420 --> 00:13:29.335
want to run those commands you have to write here between then and else.

258
00:13:29.335 --> 00:13:31.390
And if command when is faith?

259
00:13:31.390 --> 00:13:33.775
Whatever commands you want be excluded.

260
00:13:33.775 --> 00:13:35.080
If command one is fail,

261
00:13:35.080 --> 00:13:36.505
those commands you heard right,

262
00:13:36.505 --> 00:13:40.810
between L and M are simply then block and block.

263
00:13:40.810 --> 00:13:43.990
Now, based on this,

264
00:13:43.990 --> 00:13:45.790
you can not only single command,

265
00:13:45.790 --> 00:13:47.590
you can add multiple number of commands here.

266
00:13:47.590 --> 00:13:51.290
If you take, if statements.

267
00:13:54.940 --> 00:13:58.640
That's, you know, I will use this concept.

268
00:13:58.640 --> 00:14:00.290
Of course that is fine.

269
00:14:00.290 --> 00:14:02.645
But he can also implement it in this way.

270
00:14:02.645 --> 00:14:04.760
Now let me run, let me create it.

271
00:14:04.760 --> 00:14:07.730
If whatever the first command you are

272
00:14:07.730 --> 00:14:12.470
having that will decide whether actually liquidity is not there are installed.

273
00:14:12.470 --> 00:14:19.760
Then. Else, if I now between then and else,

274
00:14:19.760 --> 00:14:22.655
whatever the commands you are writing, those will execute.

275
00:14:22.655 --> 00:14:26.970
If this is success, this is success means HUD beauties.

276
00:14:29.530 --> 00:14:34.010
And if this fails, if this is fail,

277
00:14:34.010 --> 00:14:38.540
that means you will this block between then and else,

278
00:14:38.540 --> 00:14:40.610
whatever the lines you are having, those will skip.

279
00:14:40.610 --> 00:14:44.870
An else block will execute any one of the legs.

280
00:14:44.870 --> 00:14:46.640
Good, either then block or else block,

281
00:14:46.640 --> 00:14:48.650
then it legs good if this is success.

282
00:14:48.650 --> 00:14:51.080
As we legs good, if this is fail.

283
00:14:51.080 --> 00:14:53.390
Now if it is failed, we know what is the meaning for

284
00:14:53.390 --> 00:14:56.014
that Hetchy liquidity is not installed.

285
00:14:56.014 --> 00:14:57.870
That's a

286
00:15:11.110 --> 00:15:13.730
pretty simple one.

287
00:15:13.730 --> 00:15:16.325
Now opening a shell script,

288
00:15:16.325 --> 00:15:19.010
price all our possibilities.

289
00:15:19.010 --> 00:15:25.775
Sometimes you need one line command to decide whether something is there or not.

290
00:15:25.775 --> 00:15:27.530
Sometimes you may need multiple,

291
00:15:27.530 --> 00:15:29.705
but try to understand

292
00:15:29.705 --> 00:15:34.610
different approaches so that whenever you have a requirement based on that,

293
00:15:34.610 --> 00:15:38.165
we will select, as I've not tried to practice this concept Nazi.

294
00:15:38.165 --> 00:15:42.590
Anyway, I will show you when you need if and when you read

295
00:15:42.590 --> 00:15:47.930
only single-line comments combining with the logical AND logical OR operator.

296
00:15:47.930 --> 00:15:51.830
Now let me save it and run it.

297
00:15:51.830 --> 00:15:54.395
Hedge anybody's installed on this host?

298
00:15:54.395 --> 00:15:59.045
Let me remove because you need to verify each and every one.

299
00:15:59.045 --> 00:16:08.285
Each and every lousy. Now I'm running.

300
00:16:08.285 --> 00:16:10.385
Heterogeneity is not installed.

301
00:16:10.385 --> 00:16:11.660
That's fine.

302
00:16:11.660 --> 00:16:14.120
Suppose if you are HTTPD is there,

303
00:16:14.120 --> 00:16:15.995
then I need to find Watson as well.

304
00:16:15.995 --> 00:16:18.335
That is actually our concept.

305
00:16:18.335 --> 00:16:21.485
Now, be clear.

306
00:16:21.485 --> 00:16:23.690
If I go with command one, command two,

307
00:16:23.690 --> 00:16:26.405
command three concepts in a single line.

308
00:16:26.405 --> 00:16:28.580
If this is success,

309
00:16:28.580 --> 00:16:32.030
HUD buddies, I need to run this command.

310
00:16:32.030 --> 00:16:34.070
And along with that, I need to add one more comment.

311
00:16:34.070 --> 00:16:35.810
Of course, you can also clubbing here itself.

312
00:16:35.810 --> 00:16:38.120
But that is not a good practice that way.

313
00:16:38.120 --> 00:16:40.775
Based on foster command, if it is success,

314
00:16:40.775 --> 00:16:45.305
if you want to run multiple commands are based on foster command. If it is.

315
00:16:45.305 --> 00:16:47.285
If you want to run multiple commands,

316
00:16:47.285 --> 00:16:49.670
please go with if-else concept.

317
00:16:49.670 --> 00:16:51.710
You can also write single end,

318
00:16:51.710 --> 00:16:54.425
but as a beginner, you may get confused for that.

319
00:16:54.425 --> 00:16:56.990
And better brackets is if else,

320
00:16:56.990 --> 00:17:01.130
When we go with if-else based on this command,

321
00:17:01.130 --> 00:17:03.110
if you want to execute multiple commands,

322
00:17:03.110 --> 00:17:05.375
multiple logics here, are here,

323
00:17:05.375 --> 00:17:06.860
then block or else block.

324
00:17:06.860 --> 00:17:11.180
If you want to execute multiple commands or logics, then go with the.

325
00:17:11.180 --> 00:17:16.460
Now what I am doing is if this is success,

326
00:17:16.460 --> 00:17:20.300
then here I want to be split this along that I need to find HUD Billy Watson,

327
00:17:20.300 --> 00:17:21.755
and then I need to display that.

328
00:17:21.755 --> 00:17:24.180
Let me open your shell scripts.

329
00:17:24.310 --> 00:17:26.135
Before that.

330
00:17:26.135 --> 00:17:27.740
How to financially pretty Russian,

331
00:17:27.740 --> 00:17:30.710
If you remember HTTPD hyphen v.

332
00:17:30.710 --> 00:17:34.160
And on this output that it'll apply your AW k with

333
00:17:34.160 --> 00:17:39.845
the fields operator as space under slash ways based on slash.

334
00:17:39.845 --> 00:17:43.880
If you see in this line, based on spaces,

335
00:17:43.880 --> 00:17:46.355
if you split your line, this is foster,

336
00:17:46.355 --> 00:17:50.000
these secondary and this is, this is port two.

337
00:17:50.000 --> 00:17:52.745
But we needed our Wusheng from here.

338
00:17:52.745 --> 00:17:56.015
So before the Russians class is the now time,

339
00:17:56.015 --> 00:17:59.660
if I can able to split the one line based on spaces and

340
00:17:59.660 --> 00:18:04.415
slashes so that I can feel these Foster Field secondary particles.

341
00:18:04.415 --> 00:18:09.860
That's why I'm taking here pattern for your fields. Fields operator.

342
00:18:09.860 --> 00:18:11.195
If you go with Cut command,

343
00:18:11.195 --> 00:18:15.800
you cannot write this type of patterns only in AWS. You can, right?

344
00:18:15.800 --> 00:18:21.110
Then, after that, first I am trying to print the line in which we have Wusheng.

345
00:18:21.110 --> 00:18:24.275
Let me write down what Shen.

346
00:18:24.275 --> 00:18:28.970
Then let me first printer that entitling and seed output.

347
00:18:28.970 --> 00:18:36.510
Something means I need to write one more single quotation here. Yes.

348
00:18:41.350 --> 00:18:46.620
Oh, yes.

349
00:18:46.770 --> 00:18:51.415
Now you are getting your coastline bailed on Washington.

350
00:18:51.415 --> 00:18:54.460
But do you also give an feels operator as space and slash?

351
00:18:54.460 --> 00:18:56.620
That's why this will become four to field.

352
00:18:56.620 --> 00:18:58.315
Now instead of printing and tie line,

353
00:18:58.315 --> 00:19:00.025
I'm printing for the,

354
00:19:00.025 --> 00:19:06.759
let's say now this is the command to find the Wusheng for HTTPD.

355
00:19:06.759 --> 00:19:11.230
Let me open yourself script. Now.

356
00:19:11.230 --> 00:19:14.125
I'm using if and else concept.

357
00:19:14.125 --> 00:19:18.055
Because if actually bid is there any takes goto commands.

358
00:19:18.055 --> 00:19:22.430
If I want to execute only one command and I can go with this type of logic.

359
00:19:23.070 --> 00:19:25.195
Now.

360
00:19:25.195 --> 00:19:28.105
This output, I will store it into some variable,

361
00:19:28.105 --> 00:19:31.220
let's say HTTPD shen equals two.

362
00:19:31.220 --> 00:19:34.190
That is the command. We know how to store the command output

363
00:19:34.190 --> 00:19:37.565
India variable by using dollar parenthesis.

364
00:19:37.565 --> 00:19:39.665
Now I will display echo.

365
00:19:39.665 --> 00:19:44.165
The Wusheng of HTTPD is simply your variable,

366
00:19:44.165 --> 00:19:46.325
which we have in our hands.

367
00:19:46.325 --> 00:19:52.490
Let's try to understand the difference between if-else and simply with

368
00:19:52.490 --> 00:19:55.010
one lane combining with three commands by using

369
00:19:55.010 --> 00:19:59.765
logical AND logical OR in place of this actually I need to execute three lines.

370
00:19:59.765 --> 00:20:03.575
See 123. That's why I'm not going with this logic.

371
00:20:03.575 --> 00:20:06.485
I'm going with if and else.

372
00:20:06.485 --> 00:20:08.930
Anyone else has only one length.

373
00:20:08.930 --> 00:20:12.155
Maybe if you want to write any number of lenses, you can write it.

374
00:20:12.155 --> 00:20:14.330
That is the advantage with if-else.

375
00:20:14.330 --> 00:20:17.640
Now let me save it and run it.

376
00:20:18.490 --> 00:20:21.830
And here also you can modify one more or less.

377
00:20:21.830 --> 00:20:23.990
Like if you observe here.

378
00:20:23.990 --> 00:20:25.685
First I will run this,

379
00:20:25.685 --> 00:20:27.095
then I will take this status.

380
00:20:27.095 --> 00:20:28.400
I will compare in this way.

381
00:20:28.400 --> 00:20:30.895
But why should I have done is a little more extra lines and that's

382
00:20:30.895 --> 00:20:34.055
quite directly in each collision self I'm writing command one.

383
00:20:34.055 --> 00:20:37.325
Anyone is correct, you can go with this one or this one.

384
00:20:37.325 --> 00:20:43.130
So finally, this is the logic to verify whether hedge rebooted installed or not.

385
00:20:43.130 --> 00:20:47.280
If it is installed, you can find the Watson for that. That's it.

386
00:20:47.740 --> 00:20:50.610
Ok. Thank you.

