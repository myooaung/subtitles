WEBVTT
ï»¿1
00:00:01.040 --> 00:00:06.000
Friends here our concept is executing commands on the remote server.

2
00:00:06.000 --> 00:00:10.860
See already we know how to login into your remote server using SSH.

3
00:00:10.860 --> 00:00:15.630
Now, we are using that SSH to execute our commands on the remote server.

4
00:00:15.630 --> 00:00:20.130
But there are two ways to execute your commands on the remote server using SSH.

5
00:00:20.130 --> 00:00:22.950
And these two ways are applicable for me were

6
00:00:22.950 --> 00:00:26.395
both password and password less authentication enrollments.

7
00:00:26.395 --> 00:00:28.385
Let me go with the first way.

8
00:00:28.385 --> 00:00:30.005
So here we have some steps.

9
00:00:30.005 --> 00:00:31.490
Let me go with step-by-step.

10
00:00:31.490 --> 00:00:32.990
The very first step is firstly,

11
00:00:32.990 --> 00:00:35.390
how to login into your remote server.

12
00:00:35.390 --> 00:00:38.750
We know how to login into remote server, simply SSH,

13
00:00:38.750 --> 00:00:43.625
user name or the rate remote server IP or fully qualified domain name.

14
00:00:43.625 --> 00:00:45.320
And after running this command,

15
00:00:45.320 --> 00:00:47.060
if your environment is possible,

16
00:00:47.060 --> 00:00:51.710
less authentication, then directly it will log in into your remote server.

17
00:00:51.710 --> 00:00:54.635
Suppose if your environment is password authentication,

18
00:00:54.635 --> 00:00:56.810
then it will prompt for password.

19
00:00:56.810 --> 00:01:01.955
Let me show you that. Suppose I have two servers to remote servers.

20
00:01:01.955 --> 00:01:04.310
And those two remote servers I saved in this file.

21
00:01:04.310 --> 00:01:08.000
Let me take one of the server and copy.

22
00:01:08.000 --> 00:01:13.840
Now see for my first remote server or how a user called automation.

23
00:01:13.840 --> 00:01:18.715
That's why simply SSH automation user or the rate IP of that.

24
00:01:18.715 --> 00:01:22.930
And if I enter, it is asking yes or no confirmation,

25
00:01:22.930 --> 00:01:27.895
like adding fingerprint to your local server up about your remote server.

26
00:01:27.895 --> 00:01:31.960
Whenever if you try to connect at very first-time, then only you will ask.

27
00:01:31.960 --> 00:01:35.905
But I don't want to display this information without asking confirmation.

28
00:01:35.905 --> 00:01:38.785
I want to make it as by default as yes.

29
00:01:38.785 --> 00:01:44.080
Then for that there is a option with your SSH,

30
00:01:44.080 --> 00:01:45.970
simply search with man SSH.

31
00:01:45.970 --> 00:01:51.040
So here if you observe there are different options just to go down some very hyphen,

32
00:01:51.040 --> 00:01:54.740
Woo, hyphen WE option is there for your SSH.

33
00:01:54.740 --> 00:01:58.305
And in that we have a number of options based on requirement you have to sell it,

34
00:01:58.305 --> 00:02:00.860
you are required option for your SSH.

35
00:02:00.860 --> 00:02:06.200
Now my requirement, I will show you just to go down in last year house somewhere.

36
00:02:06.200 --> 00:02:08.840
Strict hosted heat-seeking option.

37
00:02:08.840 --> 00:02:11.210
I want to take that just to go down,

38
00:02:11.210 --> 00:02:14.930
see that strict host Stuckey checking just to copy it.

39
00:02:14.930 --> 00:02:17.855
Now I will show you how to use that.

40
00:02:17.855 --> 00:02:20.825
So if you run in this way, right?

41
00:02:20.825 --> 00:02:22.145
It is asking SR No,

42
00:02:22.145 --> 00:02:23.495
but I don't want to ask this.

43
00:02:23.495 --> 00:02:26.210
I want to make it as the fault as yes.

44
00:02:26.210 --> 00:02:29.150
That means you don't need to ask the CSR no option.

45
00:02:29.150 --> 00:02:31.580
So for that, you can run simply SSH,

46
00:02:31.580 --> 00:02:34.910
hyphen wall, strict host Stuckey checking equals two.

47
00:02:34.910 --> 00:02:36.860
No means don't ask.

48
00:02:36.860 --> 00:02:38.345
That's it.

49
00:02:38.345 --> 00:02:42.065
Now, if I enter see that without asking yes or no confirmation.

50
00:02:42.065 --> 00:02:43.385
It is asking password.

51
00:02:43.385 --> 00:02:46.670
No, let me let me do the password for my remote server.

52
00:02:46.670 --> 00:02:49.565
Now you login with your remote server.

53
00:02:49.565 --> 00:02:51.680
Now you can run your command here,

54
00:02:51.680 --> 00:02:54.005
any command, and you can see the result.

55
00:02:54.005 --> 00:02:56.900
And in case once if you've done your work,

56
00:02:56.900 --> 00:02:59.405
then you can exit the session.

57
00:02:59.405 --> 00:03:02.705
You can close the session connection by using exit command.

58
00:03:02.705 --> 00:03:06.365
Now you are on a local server, right?

59
00:03:06.365 --> 00:03:08.810
So these are the steps for your first way.

60
00:03:08.810 --> 00:03:11.375
But this is not good for automation.

61
00:03:11.375 --> 00:03:13.640
If you want to implement some shell script such a way that

62
00:03:13.640 --> 00:03:15.830
your shell script has to connect with your remote server,

63
00:03:15.830 --> 00:03:17.495
then this is not the good way,

64
00:03:17.495 --> 00:03:19.685
is only for manual steps.

65
00:03:19.685 --> 00:03:22.070
Whenever, if you want to verify manually,

66
00:03:22.070 --> 00:03:24.245
you can use this procedure.

67
00:03:24.245 --> 00:03:25.745
Now.

68
00:03:25.745 --> 00:03:30.335
Then, what is the other way for your automation?

69
00:03:30.335 --> 00:03:36.095
See that simply the same can nothing is there clubbing all these steps,

70
00:03:36.095 --> 00:03:39.110
SSH, user name or the rate remote server.

71
00:03:39.110 --> 00:03:41.390
Then here at the end,

72
00:03:41.390 --> 00:03:43.400
I am providing in quotations command.

73
00:03:43.400 --> 00:03:44.385
That's it.

74
00:03:44.385 --> 00:03:47.960
Anyway, if your environment is postulates authentication dilated legs,

75
00:03:47.960 --> 00:03:49.850
good, your comment on remote server.

76
00:03:49.850 --> 00:03:51.965
But if it is password authentication,

77
00:03:51.965 --> 00:03:53.150
then it will ask,

78
00:03:53.150 --> 00:03:56.480
it will prompt for password. Let me show you that.

79
00:03:56.480 --> 00:03:58.295
Same steps there is.

80
00:03:58.295 --> 00:03:59.395
I will use this hyphen,

81
00:03:59.395 --> 00:04:02.555
whether you are going to connect at very first time or not always.

82
00:04:02.555 --> 00:04:05.480
I will use from here onwards for your SSH hyphen

83
00:04:05.480 --> 00:04:09.065
war with option as strictly who's teaching equals to know.

84
00:04:09.065 --> 00:04:12.575
Then same syntax, SSH, username,

85
00:04:12.575 --> 00:04:13.955
or they'd host name,

86
00:04:13.955 --> 00:04:16.550
colon space, not colon space.

87
00:04:16.550 --> 00:04:20.300
In quotations, you can write any command, then enter.

88
00:04:20.300 --> 00:04:21.095
Anyway.

89
00:04:21.095 --> 00:04:24.935
As of now, my environment is password authentication environment.

90
00:04:24.935 --> 00:04:27.170
That's why I need to provide a password here.

91
00:04:27.170 --> 00:04:30.320
Automation password.

92
00:04:30.320 --> 00:04:31.850
I have given that password, no,

93
00:04:31.850 --> 00:04:36.215
see that is you are getting output for your command, date command.

94
00:04:36.215 --> 00:04:39.320
And this command has been executed on the server by

95
00:04:39.320 --> 00:04:43.250
using this user that output it is displaying.

96
00:04:43.250 --> 00:04:47.030
Now whenever if you run your command without SSH option,

97
00:04:47.030 --> 00:04:49.850
then your command is running on your local server.

98
00:04:49.850 --> 00:04:55.535
But if you run with SSH by providing user and some host name,

99
00:04:55.535 --> 00:05:00.410
now your command is going to execute on the server and after execution of your command.

100
00:05:00.410 --> 00:05:01.730
But oh, the result you are getting,

101
00:05:01.730 --> 00:05:05.585
that result will be get back to your local server by using your SSH.

102
00:05:05.585 --> 00:05:07.520
That's what it is doing.

103
00:05:07.520 --> 00:05:10.110
But it will ask password.

104
00:05:10.590 --> 00:05:12.535
That's it.

105
00:05:12.535 --> 00:05:14.755
Now instead of displaying these output,

106
00:05:14.755 --> 00:05:17.485
you can store in a variable or into your file.

107
00:05:17.485 --> 00:05:20.290
You know how to store the command output India variable.

108
00:05:20.290 --> 00:05:24.550
Suppose I am taking a variable called server one date.

109
00:05:24.550 --> 00:05:27.940
Just for your understanding, I am taking that Lindsey variable name,

110
00:05:27.940 --> 00:05:31.510
then dollar, parenthesis inside that,

111
00:05:31.510 --> 00:05:38.860
just write your command C that it is asking password,

112
00:05:38.860 --> 00:05:40.840
I'm going to provide the password.

113
00:05:40.840 --> 00:05:45.130
Now, whatever the output you got from this command,

114
00:05:45.130 --> 00:05:47.335
that output is stored in this variable.

115
00:05:47.335 --> 00:05:49.960
Now you can display that variable so that he

116
00:05:49.960 --> 00:05:52.665
can see the value which is there in that variable.

117
00:05:52.665 --> 00:05:56.885
That's a incase if you don't want to store in the variable,

118
00:05:56.885 --> 00:05:59.780
and if you want to store this command output into a file,

119
00:05:59.780 --> 00:06:03.785
you know how to redirect a command output India variable.

120
00:06:03.785 --> 00:06:10.250
Now simply greater than suppose server one, info.plist.

121
00:06:10.250 --> 00:06:12.035
Be clear.

122
00:06:12.035 --> 00:06:15.200
Your command is executing on this server,

123
00:06:15.200 --> 00:06:18.050
but result is storing on your local server.

124
00:06:18.050 --> 00:06:20.195
It should be clear with this,

125
00:06:20.195 --> 00:06:24.230
you are dead command is executing on the remote server, but the result,

126
00:06:24.230 --> 00:06:28.235
whatever you are getting the output for this command that is storing into this file.

127
00:06:28.235 --> 00:06:31.850
But this file will be created on your local server only.

128
00:06:31.850 --> 00:06:35.040
Now let me provide the password.

129
00:06:35.530 --> 00:06:40.745
Now see the result in the server one Info.plist file.

130
00:06:40.745 --> 00:06:41.930
That's it.

131
00:06:41.930 --> 00:06:44.120
I can then some other command as well.

132
00:06:44.120 --> 00:06:45.890
Let's say I want to run up time,

133
00:06:45.890 --> 00:06:50.705
but I want to redirect that output also into my server one, info.plist.

134
00:06:50.705 --> 00:06:57.260
But I don't want to delete old content and I want to keep my old content as DES.

135
00:06:57.260 --> 00:07:00.380
And I want to append the new command output into this file.

136
00:07:00.380 --> 00:07:02.105
That's why I'm using double greater than.

137
00:07:02.105 --> 00:07:06.180
Now, just run it and provide the password.

138
00:07:06.370 --> 00:07:08.000
That's it.

139
00:07:08.000 --> 00:07:10.565
Now see the content which is their newer file.

140
00:07:10.565 --> 00:07:12.830
So previous data output is there,

141
00:07:12.830 --> 00:07:15.620
now present uptime output also there.

142
00:07:15.620 --> 00:07:16.835
Right?

143
00:07:16.835 --> 00:07:19.699
See if you are a neuron mentees possible less authentication,

144
00:07:19.699 --> 00:07:24.080
then you no need to provide password while earning your SHE commands.

145
00:07:24.080 --> 00:07:27.050
But sometimes, you know, for some environments there is

146
00:07:27.050 --> 00:07:29.900
a possible less authentication for some minimal elements there.

147
00:07:29.900 --> 00:07:32.450
In case if you don't help password authentication,

148
00:07:32.450 --> 00:07:35.460
then you have to provide this password.

149
00:07:35.560 --> 00:07:40.130
That's it. Now, let me run one more command.

150
00:07:40.130 --> 00:07:43.055
Suppose I want to run a command called top.

151
00:07:43.055 --> 00:07:44.450
On my remote server.

152
00:07:44.450 --> 00:07:46.400
I want to see load.

153
00:07:46.400 --> 00:07:49.820
I am providing the password for my remote server user.

154
00:07:49.820 --> 00:07:56.090
But it is saying that some environment variable not set c Actually,

155
00:07:56.090 --> 00:07:57.920
you know, whenever you run top command,

156
00:07:57.920 --> 00:08:01.145
it is a thermal interaction outputs either.

157
00:08:01.145 --> 00:08:03.020
It is not ending your session, right?

158
00:08:03.020 --> 00:08:05.675
Whenever if you run top comment on your local server,

159
00:08:05.675 --> 00:08:08.180
you have to press Control-C to close that.

160
00:08:08.180 --> 00:08:13.535
So some commands, you need an interaction with your remote server tunnel.

161
00:08:13.535 --> 00:08:14.990
So in that case,

162
00:08:14.990 --> 00:08:17.930
you have to provide one more option for your SSH That

163
00:08:17.930 --> 00:08:21.065
is called hyphen T. Now see the result.

164
00:08:21.065 --> 00:08:24.110
I am running the command top on my remote server.

165
00:08:24.110 --> 00:08:26.570
Now you are getting output for your remote server.

166
00:08:26.570 --> 00:08:29.270
Anyway, if you want to close it and just press control C,

167
00:08:29.270 --> 00:08:32.930
and that's it so that you are remote session close.

168
00:08:32.930 --> 00:08:36.275
So if you are getting confusion always you can take hyphen T,

169
00:08:36.275 --> 00:08:38.750
whether it is a top comment or date command.

170
00:08:38.750 --> 00:08:47.720
But for dead command unit hyphen T. Yeah,

171
00:08:47.720 --> 00:08:49.730
maybe I'll given Wrong password.

172
00:08:49.730 --> 00:08:53.790
Verify it. See that you are getting your output.

173
00:08:54.970 --> 00:08:57.425
Software, getting your output.

174
00:08:57.425 --> 00:09:00.110
This is automatically closing your terminal.

175
00:09:00.110 --> 00:09:04.610
Iphone Tea thermal is closing off the getting your output.

176
00:09:04.610 --> 00:09:08.060
So these combine output also you can store into any variable.

177
00:09:08.060 --> 00:09:11.540
Without iPhone TR, with hyphen T. You can

178
00:09:11.540 --> 00:09:14.465
run your commands and you can store that output India variable or file.

179
00:09:14.465 --> 00:09:16.235
Let me store into variable.

180
00:09:16.235 --> 00:09:20.375
New output equals $2 parenthesis,

181
00:09:20.375 --> 00:09:21.590
you are command SSH,

182
00:09:21.590 --> 00:09:24.210
command, close the session.

183
00:09:25.770 --> 00:09:30.820
Right now, see the result in new out.

184
00:09:30.820 --> 00:09:33.280
Yes, you are getting your date command output.

185
00:09:33.280 --> 00:09:35.590
So actually while running this command,

186
00:09:35.590 --> 00:09:37.420
your command is executing on,

187
00:09:37.420 --> 00:09:38.915
you're getting your output at the same time,

188
00:09:38.915 --> 00:09:42.565
you are getting some info connection to your IP close,

189
00:09:42.565 --> 00:09:45.580
but this won't store into your output variable or India file.

190
00:09:45.580 --> 00:09:51.310
Be clear, only the command outputting to store a variable or in pdf file.

191
00:09:51.310 --> 00:09:52.465
Alright?

192
00:09:52.465 --> 00:09:54.970
So this is the way how we can execute

193
00:09:54.970 --> 00:09:58.645
a comment on your remote server without logging into heat.

194
00:09:58.645 --> 00:10:01.750
But here the problem is always you need to run,

195
00:10:01.750 --> 00:10:03.475
always you have to provide password.

196
00:10:03.475 --> 00:10:08.305
Suppose I want to run 5X six commands on my remote server.

197
00:10:08.305 --> 00:10:10.945
For each and every command you need to provide a password.

198
00:10:10.945 --> 00:10:13.450
That is somewhat disadvantage here,

199
00:10:13.450 --> 00:10:15.055
but we can work on that.

200
00:10:15.055 --> 00:10:16.990
In our next session,

201
00:10:16.990 --> 00:10:18.460
we will see about that.

202
00:10:18.460 --> 00:10:23.530
Now suppose if you want to run multiple commands are daytime, Yes, we can run it.

203
00:10:23.530 --> 00:10:27.175
There is an option, so simply just separate your commands with

204
00:10:27.175 --> 00:10:33.050
semicolon date, uptime, memory usage.

205
00:10:35.010 --> 00:10:38.485
Now it is asking only password at one time,

206
00:10:38.485 --> 00:10:40.930
but relays good three commands to see the result.

207
00:10:40.930 --> 00:10:45.655
Your date command, uptime, and RAM usage.

208
00:10:45.655 --> 00:10:49.000
So this is the way how we can execute multiple commands,

209
00:10:49.000 --> 00:10:54.230
simply semi-colons, right? Okay.

210
00:10:54.230 --> 00:10:57.090
Okay, yes, thank you for watching this video.

