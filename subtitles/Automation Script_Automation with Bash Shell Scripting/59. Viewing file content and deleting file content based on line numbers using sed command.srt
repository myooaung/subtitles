1
00:00:01,220 --> 00:00:02,895
Hi friends.

2
00:00:02,895 --> 00:00:08,700
In this video, we are going to see one of the use case of your set command that is

3
00:00:08,700 --> 00:00:14,700
viewing file content with set command C from our previous video, right?

4
00:00:14,700 --> 00:00:20,085
We know that the different functionalities of your sed command or like, you know,

5
00:00:20,085 --> 00:00:22,545
viewing file content, searching,

6
00:00:22,545 --> 00:00:25,935
Find and Replace, insertion or deletion.

7
00:00:25,935 --> 00:00:30,405
And you can also use some regular expressions in your set command right?

8
00:00:30,405 --> 00:00:33,705
Now in this video, we are going to work with

9
00:00:33,705 --> 00:00:38,315
viewing file content with your set command, right?

10
00:00:38,315 --> 00:00:39,905
Let me start that.

11
00:00:39,905 --> 00:00:47,090
See we know the basic syntax of your sed command is said some options,

12
00:00:47,090 --> 00:00:48,560
then comment, I mean,

13
00:00:48,560 --> 00:00:51,380
what are the command or actually you want to perform on

14
00:00:51,380 --> 00:00:56,195
your file and then the file which you want to work with your set command.

15
00:00:56,195 --> 00:00:57,410
Right?

16
00:00:57,410 --> 00:01:02,750
See, first let me show you the sed command without any options and commands,

17
00:01:02,750 --> 00:01:04,835
that means simply said,

18
00:01:04,835 --> 00:01:08,210
single source, single quotations,

19
00:01:08,210 --> 00:01:11,615
empty conditions, then file to work with said,

20
00:01:11,615 --> 00:01:13,775
now this will work like a cat command.

21
00:01:13,775 --> 00:01:16,680
Let me show you this on my command line.

22
00:01:19,030 --> 00:01:22,445
Here. Suppose I'm having a command core,

23
00:01:22,445 --> 00:01:25,145
sort of how a file called file.txt.

24
00:01:25,145 --> 00:01:29,450
Let me open that cad file.txt sees that there is

25
00:01:29,450 --> 00:01:34,565
the file and this file I opened with your cat command.

26
00:01:34,565 --> 00:01:36,065
So for my files,

27
00:01:36,065 --> 00:01:39,455
I inserted some line numbers as well for beauty,

28
00:01:39,455 --> 00:01:41,735
more clarity with your sed command.

29
00:01:41,735 --> 00:01:47,555
Now, whatever the file content you're seeing with your CAD,

30
00:01:47,555 --> 00:01:49,760
the same thing you can also see with US.

31
00:01:49,760 --> 00:01:54,365
Sed command said, write empty quotations,

32
00:01:54,365 --> 00:01:56,870
then you are filed. See that?

33
00:01:56,870 --> 00:02:01,790
Now this syntax will work like a cat command.

34
00:02:01,790 --> 00:02:03,335
Right?

35
00:02:03,335 --> 00:02:05,780
So of course anyway it is not that much useful,

36
00:02:05,780 --> 00:02:08,315
but we have an option with your set command.

37
00:02:08,315 --> 00:02:12,095
I mean, using, you can use sed command like a cat command.

38
00:02:12,095 --> 00:02:14,270
Now, the next thing is,

39
00:02:14,270 --> 00:02:21,275
so there is I want to print all the lines of my file using sed command.

40
00:02:21,275 --> 00:02:22,850
I mean, whatever we are doing,

41
00:02:22,850 --> 00:02:26,105
this is no, we are printing your file content.

42
00:02:26,105 --> 00:02:28,145
We have one more option to print that.

43
00:02:28,145 --> 00:02:32,165
Let me take it as a P print.

44
00:02:32,165 --> 00:02:33,785
Now see the content.

45
00:02:33,785 --> 00:02:39,319
If we observe the output you are getting each and every line two times.

46
00:02:39,319 --> 00:02:41,720
The reason is by default,

47
00:02:41,720 --> 00:02:43,730
sed command will print your lines.

48
00:02:43,730 --> 00:02:46,970
Now externally again, you are saying that please print.

49
00:02:46,970 --> 00:02:48,650
That's why we are getting two times.

50
00:02:48,650 --> 00:02:52,880
Now if you want to suppress your default output of your set command,

51
00:02:52,880 --> 00:02:55,790
you how to use said hyphen yen, then print.

52
00:02:55,790 --> 00:03:00,935
Now see that we are getting only one time your output for each and every line.

53
00:03:00,935 --> 00:03:02,165
Right?

54
00:03:02,165 --> 00:03:04,250
Now let's just observe that.

55
00:03:04,250 --> 00:03:07,070
Now from here onwards it just tried to concentrate.

56
00:03:07,070 --> 00:03:11,015
Now if you want to print all lines with your sed command,

57
00:03:11,015 --> 00:03:13,070
you can use either said.

58
00:03:13,070 --> 00:03:15,200
It's empty single quotations,

59
00:03:15,200 --> 00:03:19,235
then you are filename or send hyphen Yana option.

60
00:03:19,235 --> 00:03:22,520
Then in place of commands simply p, then file.js.

61
00:03:22,520 --> 00:03:25,010
I mean, what are the file you want to work?

62
00:03:25,010 --> 00:03:26,180
Right?

63
00:03:26,180 --> 00:03:32,555
Now what I'm doing is I'm taking suppose simply some 3p. Observe the output.

64
00:03:32,555 --> 00:03:34,730
Third line number is printing.

65
00:03:34,730 --> 00:03:39,500
So I want to print, suppose some seventh line on.

66
00:03:39,500 --> 00:03:41,135
I wanted to print some,

67
00:03:41,135 --> 00:03:43,160
any line number you want to print.

68
00:03:43,160 --> 00:03:45,965
It will print that particular line it will print.

69
00:03:45,965 --> 00:03:47,480
I want to print the last line.

70
00:03:47,480 --> 00:03:49,700
I don't know what is the line number four last,

71
00:03:49,700 --> 00:03:52,070
then simply US dollar and see the output.

72
00:03:52,070 --> 00:03:52,895
Yes.

73
00:03:52,895 --> 00:03:57,395
Now seeing 49th line is your file.

74
00:03:57,395 --> 00:04:00,545
Now anyway, 49 number is also there in my file.

75
00:04:00,545 --> 00:04:01,055
Right?

76
00:04:01,055 --> 00:04:05,030
Now I'm using sed command to print my last line.

77
00:04:05,030 --> 00:04:10,820
Then. Yes, you are getting last line as 49 and it's was 49 space L phi.

78
00:04:10,820 --> 00:04:13,655
That is the last line in my file.

79
00:04:13,655 --> 00:04:16,835
Now I want to print the range of lines.

80
00:04:16,835 --> 00:04:21,425
Let us say suppose I want to print from third line to some tenth line.

81
00:04:21,425 --> 00:04:22,715
So three comma ten p.

82
00:04:22,715 --> 00:04:24,210
That's it.

83
00:04:25,210 --> 00:04:26,780
Right?

84
00:04:26,780 --> 00:04:29,030
So no, nothing like that.

85
00:04:29,030 --> 00:04:31,250
You can also print from any number to any number.

86
00:04:31,250 --> 00:04:37,955
Let me print some tend to tool no problem. 101112.

87
00:04:37,955 --> 00:04:39,260
Right?

88
00:04:39,260 --> 00:04:41,270
I want to print from, suppose,

89
00:04:41,270 --> 00:04:43,475
let say any number you can take it.

90
00:04:43,475 --> 00:04:47,345
But I want to print suppose from 13 line number two,

91
00:04:47,345 --> 00:04:51,900
last line number, last means dollar, and that's it.

92
00:04:53,800 --> 00:04:57,350
Right? So if you want to print one line,

93
00:04:57,350 --> 00:04:59,915
then just simply use some particular number here.

94
00:04:59,915 --> 00:05:03,380
Line number here, range, range of numbers.

95
00:05:03,380 --> 00:05:06,470
If you want to print from Portland number two, last line number,

96
00:05:06,470 --> 00:05:10,040
you can use dollar than print, right?

97
00:05:10,040 --> 00:05:14,150
Otherwise I want to print a line from suppose,

98
00:05:14,150 --> 00:05:18,140
let's say from line number two.

99
00:05:18,140 --> 00:05:24,030
From there onwards, I want to print some seven lengths, ten plus seven.

100
00:05:24,790 --> 00:05:30,695
Observed output, 12 plus 719 years you are getting.

101
00:05:30,695 --> 00:05:33,995
So from Tool number 219,

102
00:05:33,995 --> 00:05:38,450
line number you are getting because you are starting from 2L and frame from,

103
00:05:38,450 --> 00:05:43,970
from that onwards you want to print seven more lines, right?

104
00:05:43,970 --> 00:05:47,060
That's why we are getting up to 19.

105
00:05:47,060 --> 00:05:53,300
Ok, so this is the simple way to print your required line numbers with your sed command.

106
00:05:53,300 --> 00:05:54,665
Right?

107
00:05:54,665 --> 00:05:58,100
Fine. There is just viewing your file content.

108
00:05:58,100 --> 00:06:05,240
Not only that. See I want to print alternate numbers or otherwise.

109
00:06:05,240 --> 00:06:07,640
Let me take simple example like I want to print,

110
00:06:07,640 --> 00:06:10,520
suppose first number, I mean first-line number.

111
00:06:10,520 --> 00:06:13,850
After that I want to print a suppose some fourth line number.

112
00:06:13,850 --> 00:06:16,040
And then after that I want to print seven.

113
00:06:16,040 --> 00:06:18,845
Then ten, then 13, right?

114
00:06:18,845 --> 00:06:21,005
That means difference is three, right?

115
00:06:21,005 --> 00:06:24,380
So if you want to print the line numbers in this way,

116
00:06:24,380 --> 00:06:25,970
what is the difference, three, right?

117
00:06:25,970 --> 00:06:29,850
C, Let me take very simple command you how?

118
00:06:30,310 --> 00:06:34,070
Let line number one,

119
00:06:34,070 --> 00:06:38,330
then home symbol, then 3p.

120
00:06:38,330 --> 00:06:44,180
So already we have p. Let us now see the output 1471013.

121
00:06:44,180 --> 00:06:47,120
So whatever the ranging between two lines,

122
00:06:47,120 --> 00:06:51,425
that range you have to provide here so that you will get that required line numbers.

123
00:06:51,425 --> 00:06:53,420
Suppose if I want to get alternate number,

124
00:06:53,420 --> 00:06:54,740
alternate line number site,

125
00:06:54,740 --> 00:06:56,990
you can provide 2pi so that what you will get,

126
00:06:56,990 --> 00:06:59,270
you will get first-line, then third line,

127
00:06:59,270 --> 00:07:01,130
then fifth line, then 79, right?

128
00:07:01,130 --> 00:07:03,290
You are missing. I'm in second,

129
00:07:03,290 --> 00:07:06,935
fourth, sixth, eighth, right?

130
00:07:06,935 --> 00:07:08,690
So that's it.

131
00:07:08,690 --> 00:07:11,540
So home symbol, right?

132
00:07:11,540 --> 00:07:18,905
So there's, this is the way how you can see file content using your sed command.

133
00:07:18,905 --> 00:07:20,285
Right?

134
00:07:20,285 --> 00:07:24,330
Now are how one more concept here.

135
00:07:24,490 --> 00:07:30,920
See if I print a simply hyphen in some print your file,

136
00:07:30,920 --> 00:07:34,865
you're getting all your lines from your file.

137
00:07:34,865 --> 00:07:36,575
Now instead of printing,

138
00:07:36,575 --> 00:07:44,440
suppose I want to print like you know,

139
00:07:44,440 --> 00:07:45,880
set are not print.

140
00:07:45,880 --> 00:07:48,325
I want to remove but little lines.

141
00:07:48,325 --> 00:07:51,040
Let's say in your entire file,

142
00:07:51,040 --> 00:07:55,000
I don't want to print last line number while printing then just delimited

143
00:07:55,000 --> 00:07:59,215
line number so that what will happen except to 49th line number,

144
00:07:59,215 --> 00:08:01,630
you will get remaining all lines in the output.

145
00:08:01,630 --> 00:08:04,610
See that you're getting up to 48, only.

146
00:08:04,710 --> 00:08:07,030
Same as your previous sprint.

147
00:08:07,030 --> 00:08:08,650
I mean, with the print,

148
00:08:08,650 --> 00:08:11,890
whatever we did, no same thing we can delete also.

149
00:08:11,890 --> 00:08:16,210
See set, right for Nellie denoted to use

150
00:08:16,210 --> 00:08:19,960
iPhone Yan because you're deleting that line only for printing HUB use iPhone,

151
00:08:19,960 --> 00:08:26,990
an option said, I want to delete the line numbers from four to last,

152
00:08:26,990 --> 00:08:30,275
last, you know, write dollar means last.

153
00:08:30,275 --> 00:08:34,010
So I want to delete from fourth line to lost number,

154
00:08:34,010 --> 00:08:37,160
last line number that I can take

155
00:08:37,160 --> 00:08:41,105
that Italy dollar so that you can identify that as a last line, right?

156
00:08:41,105 --> 00:08:42,770
So from 42 last,

157
00:08:42,770 --> 00:08:45,410
i don't want to print the remaining lines I want to print.

158
00:08:45,410 --> 00:08:46,565
That's what you have to use.

159
00:08:46,565 --> 00:08:48,335
You have to delete the remaining lines.

160
00:08:48,335 --> 00:08:49,970
So for that option is b.

161
00:08:49,970 --> 00:08:54,410
Now see that only you are getting 123 from four to 49.

162
00:08:54,410 --> 00:08:56,750
You're removing way I'm saying 14,

163
00:08:56,750 --> 00:08:59,240
Ms. inside my file, how fought in mine line numbers.

164
00:08:59,240 --> 00:09:05,600
Suppose I want to delete from tenth align to, let's say 45.

165
00:09:05,600 --> 00:09:09,320
Remaining lines. I want only during this range,

166
00:09:09,320 --> 00:09:11,915
whatever the lines you how those length will delete.

167
00:09:11,915 --> 00:09:14,990
See that up to nine you are getting,

168
00:09:14,990 --> 00:09:17,225
because from ten to 45 you are removing,

169
00:09:17,225 --> 00:09:19,640
then 46 to 49 you are getting right.

170
00:09:19,640 --> 00:09:23,720
Only during this range you're deleting, right?

171
00:09:23,720 --> 00:09:25,145
Not only like that, let,

172
00:09:25,145 --> 00:09:30,575
let say suppose start from tenth line and from there onwards,

173
00:09:30,575 --> 00:09:32,450
delete, suppose from 2A lines.

174
00:09:32,450 --> 00:09:33,680
I mean, you can take any number just,

175
00:09:33,680 --> 00:09:35,930
I'm taking two lines, right?

176
00:09:35,930 --> 00:09:42,725
So plus 12 from tenth line just to delete tool more lengths.

177
00:09:42,725 --> 00:09:46,730
C, the output. Then you are missing, right?

178
00:09:46,730 --> 00:09:47,705
Then.

179
00:09:47,705 --> 00:09:50,555
Between that you're missing two or more lines.

180
00:09:50,555 --> 00:09:53,070
Now you are getting remaining lines.

181
00:09:53,230 --> 00:09:57,030
That's it. Alright?

182
00:09:58,150 --> 00:10:02,705
So as I will do one thing, I will,

183
00:10:02,705 --> 00:10:07,610
I will do all these lines so that it will be helpful for you.

184
00:10:07,610 --> 00:10:11,940
You can take any file content, okay?

185
00:10:11,980 --> 00:10:14,240
I will paste this lines in

186
00:10:14,240 --> 00:10:17,030
the description of this video just to go through that and you can,

187
00:10:17,030 --> 00:10:19,770
it will helpful to practice.

188
00:10:34,620 --> 00:10:36,790
And that's it.

189
00:10:36,790 --> 00:10:39,985
So guys, if you're observing the output,

190
00:10:39,985 --> 00:10:41,440
right, whatever that command,

191
00:10:41,440 --> 00:10:44,635
deletion command we are using NMF print,

192
00:10:44,635 --> 00:10:48,010
printing your printing your required line numbers.

193
00:10:48,010 --> 00:10:48,790
Right?

194
00:10:48,790 --> 00:10:54,580
Now my requirement is I'm removing some line numbers,

195
00:10:54,580 --> 00:10:57,400
write in this way, I mean, with the d option.

196
00:10:57,400 --> 00:11:01,330
But the original file content is not going to change.

197
00:11:01,330 --> 00:11:04,780
After that. Your file content will be there as it is.

198
00:11:04,780 --> 00:11:08,845
That means only while displaying, right?

199
00:11:08,845 --> 00:11:12,550
Oil, only while displaying you are removing,

200
00:11:12,550 --> 00:11:21,640
let say suppose some ten to last line number I am deleting, right?

201
00:11:21,640 --> 00:11:23,380
And if you have another virtual file content,

202
00:11:23,380 --> 00:11:26,349
it is not changing only while displaying.

203
00:11:26,349 --> 00:11:28,705
You are deleting require line numbers,

204
00:11:28,705 --> 00:11:34,375
and then you are printing the remaining lines with this sed command, right?

205
00:11:34,375 --> 00:11:38,530
But my intention is what our the command I'm running now because of that,

206
00:11:38,530 --> 00:11:40,675
you are getting output from one to nine.

207
00:11:40,675 --> 00:11:45,235
So if I want to change the virginal file information,

208
00:11:45,235 --> 00:11:50,980
that means I want to keep in my file only one to 999 line numbers.

209
00:11:50,980 --> 00:11:54,370
And then I want to remove remaining all lines.

210
00:11:54,370 --> 00:11:58,820
Instead of displaying in this one on your output in the original file itself,

211
00:11:58,820 --> 00:12:01,670
I want to remove tend to last line.

212
00:12:01,670 --> 00:12:05,855
So in that case simply you can use said hyphen IE,

213
00:12:05,855 --> 00:12:08,135
inserting my Virgil file itself,

214
00:12:08,135 --> 00:12:11,195
whatever the command you are performing, right?

215
00:12:11,195 --> 00:12:14,810
So this is very important and very dangerous.

216
00:12:14,810 --> 00:12:15,815
Right?

217
00:12:15,815 --> 00:12:22,520
Said hyphen, I remove the line numbers from ten to last in my original file.

218
00:12:22,520 --> 00:12:32,975
So before removing, Let me take a backup for this or copy something.

219
00:12:32,975 --> 00:12:33,995
Right?

220
00:12:33,995 --> 00:12:35,435
And now we have two lines.

221
00:12:35,435 --> 00:12:36,890
Now see, first of all,

222
00:12:36,890 --> 00:12:39,275
in your file you have this many number of lines.

223
00:12:39,275 --> 00:12:42,080
Now what I am doing set hyphen IE

224
00:12:42,080 --> 00:12:46,010
means instead of displaying your output on your terminal,

225
00:12:46,010 --> 00:12:49,970
what I want to do is delete the files in the elite,

226
00:12:49,970 --> 00:12:54,035
the lines in the file itself from ten to last.

227
00:12:54,035 --> 00:12:56,660
Now if I enter, you won't get an output,

228
00:12:56,660 --> 00:12:59,240
but whatever the modification you need,

229
00:12:59,240 --> 00:13:03,740
that will be done on your original file itself so that you're not getting an output.

230
00:13:03,740 --> 00:13:06,245
Now opening your file and see the content.

231
00:13:06,245 --> 00:13:08,060
You only want to line, line,

232
00:13:08,060 --> 00:13:10,985
line numbers, remaining lines or deleted.

233
00:13:10,985 --> 00:13:13,340
So if you want to change the original file,

234
00:13:13,340 --> 00:13:15,710
you are to include hyphen II option.

235
00:13:15,710 --> 00:13:18,620
Not only here guys, wherever while going forward.

236
00:13:18,620 --> 00:13:21,830
Also, if you do some command here, right.

237
00:13:21,830 --> 00:13:25,205
If you don't include iPhone I option,

238
00:13:25,205 --> 00:13:29,480
this command will perform on your file and it will

239
00:13:29,480 --> 00:13:33,590
display the final output on your terminal itself.

240
00:13:33,590 --> 00:13:36,005
We'd want to disturb original file.

241
00:13:36,005 --> 00:13:41,120
But if you want to perform your command on your virginal file itself,

242
00:13:41,120 --> 00:13:44,790
then you have to include iPhone I option here.

243
00:13:45,370 --> 00:13:52,385
Right? Now, suppose because IE is danger, right?

244
00:13:52,385 --> 00:13:56,165
See before going to perform your action on your original file,

245
00:13:56,165 --> 00:13:57,785
if you want to take a backup.

246
00:13:57,785 --> 00:13:59,990
Yes, you how backup optional.

247
00:13:59,990 --> 00:14:06,095
So I found I dot back, not back.

248
00:14:06,095 --> 00:14:06,665
Then.

249
00:14:06,665 --> 00:14:08,780
Let me do one thing I want to delete,

250
00:14:08,780 --> 00:14:12,005
except the first, second,

251
00:14:12,005 --> 00:14:15,365
remaining all lines I want to delete in my virginal file.

252
00:14:15,365 --> 00:14:16,220
Right?

253
00:14:16,220 --> 00:14:20,105
Now see the output file.txt.

254
00:14:20,105 --> 00:14:21,860
You have only 102 lines,

255
00:14:21,860 --> 00:14:27,125
but already you created a backup because of these hyphenated dot back.

256
00:14:27,125 --> 00:14:29,735
So it is very, very important guys.

257
00:14:29,735 --> 00:14:33,569
See, you have your original lines 129.

258
00:14:33,610 --> 00:14:35,105
Right?

259
00:14:35,105 --> 00:14:38,070
Same thing. Let me do it on your own.

260
00:14:40,480 --> 00:14:47,180
From 59 to last Lynn and tie lines I want to delete in my demo 2.txt.

261
00:14:47,180 --> 00:14:51,500
Right now observe the output cat named 2.txt.

262
00:14:51,500 --> 00:14:57,725
Yes, you have only 1.2.4 because from 59 to last line number I am deleting all the lines.

263
00:14:57,725 --> 00:15:02,270
But for this, before performing your action on your file,

264
00:15:02,270 --> 00:15:06,095
set has taken a backup file called demo 2.txt dot bag.

265
00:15:06,095 --> 00:15:07,340
Now see the original content,

266
00:15:07,340 --> 00:15:09,320
what it is there in your file.

267
00:15:09,320 --> 00:15:13,355
You'll see how complete data in your back of fine, right?

268
00:15:13,355 --> 00:15:17,900
So, so there's because hyphen I option is danger.

269
00:15:17,900 --> 00:15:18,935
Ok.

270
00:15:18,935 --> 00:15:22,460
So before performing any I mean,

271
00:15:22,460 --> 00:15:24,620
any said iphone i option,

272
00:15:24,620 --> 00:15:26,300
it better to take the asset,

273
00:15:26,300 --> 00:15:28,235
the iPhone I dot back so that

274
00:15:28,235 --> 00:15:32,910
the original file backup will be present in your required location.

275
00:15:33,460 --> 00:15:35,555
Right?

276
00:15:35,555 --> 00:15:39,860
So this is all about how to view the file content and outdoor delete

277
00:15:39,860 --> 00:15:47,480
some file information in your original file with your sed command with Typhon eye option.

278
00:15:47,480 --> 00:15:48,650
Right?

279
00:15:48,650 --> 00:15:52,955
So said hyphen I is the very, very important one.

280
00:15:52,955 --> 00:15:54,320
Right?

281
00:15:54,320 --> 00:15:57,210
So this take the,

282
00:16:04,990 --> 00:16:08,495
so this is just for your backup.

283
00:16:08,495 --> 00:16:09,950
You can take any file.

284
00:16:09,950 --> 00:16:15,560
So there is just to try to practice with your sed command just to view the file content.

285
00:16:15,560 --> 00:16:19,380
Okay. While practicing, you can take any file.

286
00:16:19,540 --> 00:16:26,970
Okay. Okay. Yes. Thank you for watching this video.

