WEBVTT
ï»¿1
00:00:00.050 --> 00:00:03.510
Friends here our concept is print f command,

2
00:00:03.510 --> 00:00:07.695
C print f command is similar to echo command with some advantages,

3
00:00:07.695 --> 00:00:09.210
let me go with step-by-step.

4
00:00:09.210 --> 00:00:15.195
Basically both ICO and printed commands or used to display string or value of a variable.

5
00:00:15.195 --> 00:00:18.885
But the basic difference between echo and print f command

6
00:00:18.885 --> 00:00:23.205
is echoes sends a new line at the end of its output by default,

7
00:00:23.205 --> 00:00:25.395
but it is not in print f command.

8
00:00:25.395 --> 00:00:27.435
Let me show you that with an example.

9
00:00:27.435 --> 00:00:34.380
Suppose I am displaying the string using echo command S0, the output.

10
00:00:34.380 --> 00:00:38.935
No, let me display the same string using print f command and observe the output.

11
00:00:38.935 --> 00:00:43.925
By default, echo is sending in newline at the end of its output,

12
00:00:43.925 --> 00:00:46.145
but it is not in print f command.

13
00:00:46.145 --> 00:00:49.760
Of course, we can send forcefully the new line at the end

14
00:00:49.760 --> 00:00:53.510
of its output just by adding slash n at the end of your printer.

15
00:00:53.510 --> 00:00:54.710
That's it.

16
00:00:54.710 --> 00:00:57.035
Now let me take a variable.

17
00:00:57.035 --> 00:01:00.305
You know how to display variable value using a COCOMO.

18
00:01:00.305 --> 00:01:03.755
Same thing you can do with your printf as well.

19
00:01:03.755 --> 00:01:06.170
But while working with your print def,

20
00:01:06.170 --> 00:01:10.775
you need to add slash and at the end, not so fine.

21
00:01:10.775 --> 00:01:14.030
Then what is the advantage with print f command S0?

22
00:01:14.030 --> 00:01:17.750
The advantage is we can format the output.

23
00:01:17.750 --> 00:01:21.540
Let me explain this with an, with an example.

24
00:01:22.450 --> 00:01:26.810
Suppose I'm implementing a shell script called Git installed dot-dot-dot

25
00:01:26.810 --> 00:01:32.435
H. Just assume that no,

26
00:01:32.435 --> 00:01:34.700
I want to decorate my output.

27
00:01:34.700 --> 00:01:36.290
Then using echo command.

28
00:01:36.290 --> 00:01:39.199
Suppose I am writing these many hyphens.

29
00:01:39.199 --> 00:01:42.185
Then echo in the middle of this.

30
00:01:42.185 --> 00:01:47.670
Suppose I want to write get installation.

31
00:01:50.260 --> 00:01:55.835
Yeah, let me write that. Then in the next line,

32
00:01:55.835 --> 00:01:59.479
again, I want to write these mini hyphens.

33
00:01:59.479 --> 00:02:03.440
Just I want to decorate my output while learning my shell script.

34
00:02:03.440 --> 00:02:07.040
Let me provide the execution permissions for this.

35
00:02:07.040 --> 00:02:08.645
Now let me run this.

36
00:02:08.645 --> 00:02:10.010
Yes, you are getting.

37
00:02:10.010 --> 00:02:14.615
Now my requirement is I need to write these hyphens in the entire line.

38
00:02:14.615 --> 00:02:18.860
Then I want to get this get installation in the middle of this line.

39
00:02:18.860 --> 00:02:19.955
Then.

40
00:02:19.955 --> 00:02:21.710
How many hyphens you heard, right?

41
00:02:21.710 --> 00:02:23.990
So how many columns are there per

42
00:02:23.990 --> 00:02:27.020
line that many hyphens you ought to write a new echo command.

43
00:02:27.020 --> 00:02:30.560
C, there is a default command called peep, put columns.

44
00:02:30.560 --> 00:02:36.545
By using that, you will get number of columns per line or per row.

45
00:02:36.545 --> 00:02:39.215
So how many lines are there for your terminal?

46
00:02:39.215 --> 00:02:41.195
How many rows are there for your terminal?

47
00:02:41.195 --> 00:02:43.310
You can get by using P put command.

48
00:02:43.310 --> 00:02:45.815
Now one Montreal or there.

49
00:02:45.815 --> 00:02:50.780
Now, if you want to get 103 hyphens per line,

50
00:02:50.780 --> 00:02:52.955
then you have to open the word script.

51
00:02:52.955 --> 00:02:56.210
And then here you have to write 103 times.

52
00:02:56.210 --> 00:02:58.730
So this hyphen, Of course you can write it.

53
00:02:58.730 --> 00:03:03.425
But manual work is that more manual work is that instead of that,

54
00:03:03.425 --> 00:03:06.755
if you know about print f command,

55
00:03:06.755 --> 00:03:09.935
there is a shortcut with your printf command, print def.

56
00:03:09.935 --> 00:03:11.795
Suppose I am writing,

57
00:03:11.795 --> 00:03:14.880
don't worry about this. We'll discuss are voting.

58
00:03:15.130 --> 00:03:18.890
Then you are getting all lines are empty lines.

59
00:03:18.890 --> 00:03:23.300
No, I'm using you or p or command all empty spaces.

60
00:03:23.300 --> 00:03:25.040
Convert into hyphens.

61
00:03:25.040 --> 00:03:27.950
That's a same output.

62
00:03:27.950 --> 00:03:30.095
You can also get using echo command,

63
00:03:30.095 --> 00:03:33.065
but for that you need to use this much logic.

64
00:03:33.065 --> 00:03:35.165
You how to use this much logic.

65
00:03:35.165 --> 00:03:37.565
See how many lines we are having here.

66
00:03:37.565 --> 00:03:40.610
But using print f command, it is very simple.

67
00:03:40.610 --> 00:03:45.815
So sometimes your print f command is very helpful to decorate your output,

68
00:03:45.815 --> 00:03:48.590
not only for your output declaration,

69
00:03:48.590 --> 00:03:52.190
it is also useful in your AWPA command as well.

70
00:03:52.190 --> 00:03:55.115
Now, let me show you the syntax.

71
00:03:55.115 --> 00:03:58.640
So printf, format slash and

72
00:03:58.640 --> 00:04:01.970
we know why will it use lesion on it is often sometimes we can use it,

73
00:04:01.970 --> 00:04:03.170
sometimes you can skip it.

74
00:04:03.170 --> 00:04:08.405
Then arguments format with modifiers and then arguments.

75
00:04:08.405 --> 00:04:09.710
So what is this format?

76
00:04:09.710 --> 00:04:11.765
What is this modifier, as we will see.

77
00:04:11.765 --> 00:04:16.250
And this format or format with modifies or optional.

78
00:04:16.250 --> 00:04:18.695
But if you are using print f command,

79
00:04:18.695 --> 00:04:21.020
most of the cases you will use format or

80
00:04:21.020 --> 00:04:24.155
format with modifies concept in your print f command.

81
00:04:24.155 --> 00:04:27.245
First, let me go with the format command with only,

82
00:04:27.245 --> 00:04:30.320
sorry, print f command with only format option.

83
00:04:30.320 --> 00:04:32.030
Now the, here's the syntax.

84
00:04:32.030 --> 00:04:35.090
Then these are the formats.

85
00:04:35.090 --> 00:04:36.980
So if you are the ways developer,

86
00:04:36.980 --> 00:04:39.304
then you ought to know about all formats.

87
00:04:39.304 --> 00:04:41.360
But if you are the automation engineer,

88
00:04:41.360 --> 00:04:43.265
you just to go with the percentile, D,

89
00:04:43.265 --> 00:04:45.500
percentile, EF, and percentile, yes.

90
00:04:45.500 --> 00:04:47.795
And that is enough most of the cases.

91
00:04:47.795 --> 00:04:49.910
Now, let me show you that.

92
00:04:49.910 --> 00:04:55.745
Suppose I am taking a variable called x equals to phi and y equals to some float number.

93
00:04:55.745 --> 00:04:59.990
Now, if you go with a command directly,

94
00:04:59.990 --> 00:05:02.630
you can display your x and y values using dollar

95
00:05:02.630 --> 00:05:06.510
x delta V. Now let me drive it, print f command.

96
00:05:10.270 --> 00:05:14.435
And let me add slash. And at the end.

97
00:05:14.435 --> 00:05:17.960
This is fine. This is the straightforward.

98
00:05:17.960 --> 00:05:19.565
We're using print f command.

99
00:05:19.565 --> 00:05:21.035
But if you want to decorate,

100
00:05:21.035 --> 00:05:24.335
then the how to use format or format with modifies.

101
00:05:24.335 --> 00:05:28.205
First, let me use format to print my two variable values.

102
00:05:28.205 --> 00:05:29.690
So print f.

103
00:05:29.690 --> 00:05:35.255
Suppose I am using percentile d four x percent wasn't able default white.

104
00:05:35.255 --> 00:05:37.235
Then at the end I'm adding slash and

105
00:05:37.235 --> 00:05:41.360
then make sure that you have to always write your arguments.

106
00:05:41.360 --> 00:05:44.209
You are variables inside of quotations.

107
00:05:44.209 --> 00:05:45.755
So first the already,

108
00:05:45.755 --> 00:05:47.090
then second I wanted to split.

109
00:05:47.090 --> 00:05:49.835
All right, now the meaningful disease.

110
00:05:49.835 --> 00:05:51.140
So if you know C language,

111
00:05:51.140 --> 00:05:52.820
this is similar to C language.

112
00:05:52.820 --> 00:05:54.890
Print f command, print f,

113
00:05:54.890 --> 00:05:57.155
a functional statement in your C.

114
00:05:57.155 --> 00:06:00.680
So in place of this x value will be displayed in

115
00:06:00.680 --> 00:06:04.250
place of this second percentile D-Wave value will be display.

116
00:06:04.250 --> 00:06:08.990
But after the output, what happened?

117
00:06:08.990 --> 00:06:12.720
Yeah, I missed one quotation.

118
00:06:12.720 --> 00:06:14.485
See the output.

119
00:06:14.485 --> 00:06:16.315
You are getting phi and seven,

120
00:06:16.315 --> 00:06:18.760
you are not getting 7890.

121
00:06:18.760 --> 00:06:22.480
You are getting an error because here x is a integer.

122
00:06:22.480 --> 00:06:26.695
Then if for integers you how to use percentile D. But y is a float point.

123
00:06:26.695 --> 00:06:28.465
That's why you had to use percent alia.

124
00:06:28.465 --> 00:06:30.440
Now see the output.

125
00:06:31.140 --> 00:06:33.500
That's it.

126
00:06:33.540 --> 00:06:36.205
If you want to display any string,

127
00:06:36.205 --> 00:06:37.810
let me take my name.

128
00:06:37.810 --> 00:06:40.345
I am taking shell scripting.

129
00:06:40.345 --> 00:06:42.805
Now suppose I want to display string,

130
00:06:42.805 --> 00:06:46.120
integer and float point order is your wish.

131
00:06:46.120 --> 00:06:47.815
Suppose first I want to display string,

132
00:06:47.815 --> 00:06:49.210
then take percent alias.

133
00:06:49.210 --> 00:06:51.730
Then I'm taking some spaces.

134
00:06:51.730 --> 00:06:53.920
Then I want to display integer.

135
00:06:53.920 --> 00:06:55.675
Then Spaces.

136
00:06:55.675 --> 00:07:03.130
Then f, then just write slash and then my name.

137
00:07:03.130 --> 00:07:06.790
Then your x.

138
00:07:06.790 --> 00:07:11.155
You have to write quotations for your variables or arguments.

139
00:07:11.155 --> 00:07:15.625
Then Y, C, the output that you see.

140
00:07:15.625 --> 00:07:18.640
Along with this, you can also write some misses here.

141
00:07:18.640 --> 00:07:21.670
Suppose I'm writing before percent LES,

142
00:07:21.670 --> 00:07:24.055
I'm writing my name equals two.

143
00:07:24.055 --> 00:07:26.455
You can decorate your output.

144
00:07:26.455 --> 00:07:29.950
My number, my integer number,

145
00:07:29.950 --> 00:07:36.800
or simply my number equals two, my float.

146
00:07:37.630 --> 00:07:40.980
Let's say that output.

147
00:07:40.990 --> 00:07:46.640
So that is the uses of format or print f command width format.

148
00:07:46.640 --> 00:07:52.880
Then next important one is print f command with format with modifiers.

149
00:07:52.880 --> 00:08:00.755
Let me show you that. See these all are different modifiers for your format.

150
00:08:00.755 --> 00:08:02.660
Let me go with one by one.

151
00:08:02.660 --> 00:08:13.325
Suppose we, let me take this print f percent ld.

152
00:08:13.325 --> 00:08:15.710
I want to display x value,

153
00:08:15.710 --> 00:08:17.780
then I can display in this way.

154
00:08:17.780 --> 00:08:21.560
But I want to display my x value.

155
00:08:21.560 --> 00:08:24.455
After four spaces.

156
00:08:24.455 --> 00:08:31.850
Then see that I'm taking number five and see the output 1234.

157
00:08:31.850 --> 00:08:34.505
After that, you are displaying your number.

158
00:08:34.505 --> 00:08:36.335
Right? Now.

159
00:08:36.335 --> 00:08:41.195
I want to pad with zeros in foster for patients,

160
00:08:41.195 --> 00:08:42.560
then 0 phi c,

161
00:08:42.560 --> 00:08:47.420
That is your axes phi.

162
00:08:47.420 --> 00:08:50.480
Suppose I am taking, you may get confused.

163
00:08:50.480 --> 00:08:51.740
Instead of phi I am taking here.

164
00:08:51.740 --> 00:08:53.090
Suppose some seven, no,

165
00:08:53.090 --> 00:08:55.460
see that is a, that's it.

166
00:08:55.460 --> 00:08:59.645
So this is one of the modifier for your format.

167
00:08:59.645 --> 00:09:01.280
Format is percent ld.

168
00:09:01.280 --> 00:09:03.260
For that you are modifying your output.

169
00:09:03.260 --> 00:09:05.870
That is Modifier format modifier.

170
00:09:05.870 --> 00:09:11.180
Now let me take print f for Santa L,

171
00:09:11.180 --> 00:09:15.980
E F. Now I am displaying, sorry,

172
00:09:15.980 --> 00:09:23.405
y-value, sorry, dollar Y-value.

173
00:09:23.405 --> 00:09:27.875
Now I want to get only two fractional parts here.

174
00:09:27.875 --> 00:09:30.260
Then see that how I'm doing that,

175
00:09:30.260 --> 00:09:34.340
how I'm modifying my format geodata to.

176
00:09:34.340 --> 00:09:40.610
Now see the output. Geodata three means three fractional parts.

177
00:09:40.610 --> 00:09:44.610
I want our ten fractional parts I want.

178
00:09:45.850 --> 00:09:49.260
And I want to display this.

179
00:09:49.690 --> 00:09:56.030
Suppose, let me take some 20 positions in key positions,

180
00:09:56.030 --> 00:10:02.105
I want to display my y-value and preferences by default, a right alignment.

181
00:10:02.105 --> 00:10:08.345
See that total 20 spaces and write down meant by default.

182
00:10:08.345 --> 00:10:12.950
Now are remaining spaces are what our space are there.

183
00:10:12.950 --> 00:10:15.395
And left aside, I want to fill with zeros,

184
00:10:15.395 --> 00:10:20.585
then write g 025.

185
00:10:20.585 --> 00:10:25.250
And suppose if you want to make your alignment to towards left,

186
00:10:25.250 --> 00:10:27.455
and this is by default towards right.

187
00:10:27.455 --> 00:10:29.465
Now we can write simply minus here,

188
00:10:29.465 --> 00:10:32.345
minus 20 C, the output.

189
00:10:32.345 --> 00:10:34.250
That's it.

190
00:10:34.250 --> 00:10:36.305
So under here, yen,

191
00:10:36.305 --> 00:10:38.330
any number directly can provide.

192
00:10:38.330 --> 00:10:42.005
Then minus 0. By default.

193
00:10:42.005 --> 00:10:45.830
Is there you don't need to provide a place just if you write minus that is the right,

194
00:10:45.830 --> 00:10:47.630
left alignment by default,

195
00:10:47.630 --> 00:10:54.830
right element that is four plus and 02 pads with bad results with the leading zeros.

196
00:10:54.830 --> 00:10:57.035
Then there is a star.

197
00:10:57.035 --> 00:10:58.295
So same meaning.

198
00:10:58.295 --> 00:10:59.780
Let me show you that.

199
00:10:59.780 --> 00:11:07.790
Suppose I am taking some position or alignment position.

200
00:11:07.790 --> 00:11:11.215
Let me take P position as sum 90.

201
00:11:11.215 --> 00:11:14.960
Men don't take 90. Yeah, let me take 40.

202
00:11:15.030 --> 00:11:17.680
Now first thing directly,

203
00:11:17.680 --> 00:11:21.340
I can write print f for sente 40,

204
00:11:21.340 --> 00:11:26.665
EF slash n, Then you want dollar value.

205
00:11:26.665 --> 00:11:28.840
So in 40 positions,

206
00:11:28.840 --> 00:11:30.805
right element is there by default.

207
00:11:30.805 --> 00:11:32.665
So this is fixed.

208
00:11:32.665 --> 00:11:38.185
Suppose if you want to read a variable value four to align your position,

209
00:11:38.185 --> 00:11:43.210
then take one variable and really were alignment required element into that

210
00:11:43.210 --> 00:11:45.820
variable and that variable also you can substitute

211
00:11:45.820 --> 00:11:49.360
here so far that you can just take star here, star.

212
00:11:49.360 --> 00:11:50.770
Now for this a star,

213
00:11:50.770 --> 00:11:52.630
you have to write your variable here.

214
00:11:52.630 --> 00:11:54.385
Dollar p.

215
00:11:54.385 --> 00:11:58.360
That's directly if you have a number,

216
00:11:58.360 --> 00:12:00.310
if you want to write, you can probably hear.

217
00:12:00.310 --> 00:12:02.665
But if your number is there in a variable,

218
00:12:02.665 --> 00:12:04.735
you can use this syntax.

219
00:12:04.735 --> 00:12:06.190
There is one more syntax.

220
00:12:06.190 --> 00:12:13.285
Instead of writing here dollar p directly in place of star also you can write dollar t,

221
00:12:13.285 --> 00:12:16.960
dollar, but use curly braces here.

222
00:12:16.960 --> 00:12:18.760
That's it.

223
00:12:18.760 --> 00:12:22.135
Now let me take p equals some 70.

224
00:12:22.135 --> 00:12:23.755
Now see the output.

225
00:12:23.755 --> 00:12:25.280
That's it.

226
00:12:25.470 --> 00:12:32.065
So friends, this is the way how to use print f command to decorate your output.

227
00:12:32.065 --> 00:12:33.325
Right?

228
00:12:33.325 --> 00:12:35.235
Now let me show you one more output.

229
00:12:35.235 --> 00:12:39.320
Suppose I have a simple shell script just to center your string,

230
00:12:39.320 --> 00:12:43.370
c, that c the code.

231
00:12:43.370 --> 00:12:45.200
So this is my tidy.

232
00:12:45.200 --> 00:12:47.510
I want to display this title in the center.

233
00:12:47.510 --> 00:12:51.440
And for that I am giving borders top and don't

234
00:12:51.440 --> 00:12:55.655
further see that print f command I'm using here printf command.

235
00:12:55.655 --> 00:12:57.800
And here I'm using print f command.

236
00:12:57.800 --> 00:13:01.550
Between that I'm printing my tidy in the middle.

237
00:13:01.550 --> 00:13:04.220
So for to find the middle position simply I'm

238
00:13:04.220 --> 00:13:07.340
calculating total columns and the size of my title.

239
00:13:07.340 --> 00:13:11.780
Then I'm taking average so that you will get your title in the middle of your line.

240
00:13:11.780 --> 00:13:14.195
That's it. Okay.

241
00:13:14.195 --> 00:13:15.120
Okay.

242
00:13:15.120 --> 00:13:17.430
Thank you for watching this video.

