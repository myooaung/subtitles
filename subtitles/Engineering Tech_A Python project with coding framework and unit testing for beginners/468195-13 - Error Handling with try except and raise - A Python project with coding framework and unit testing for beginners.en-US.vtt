WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.680 --> 00:00:04.815
Let's understand how to do error handling in Python.

00:00:04.815 --> 00:00:07.170
We'll implement error handling within

00:00:07.170 --> 00:00:11.500
the persist module in the file processing application.

00:00:12.650 --> 00:00:15.765
In Python to catch error in code,

00:00:15.765 --> 00:00:18.300
you can put the coordinate try-block.

00:00:18.300 --> 00:00:21.300
Let's create it try block within

00:00:21.300 --> 00:00:26.650
the stored data function and put the code within the try block.

00:00:27.110 --> 00:00:31.460
Next, we'll define an except block where will

00:00:31.460 --> 00:00:36.060
tell the program what to do if an error occurs within the try-block.

00:00:36.310 --> 00:00:39.380
Let's have a simple log statement.

00:00:39.380 --> 00:00:44.855
And this time we can use lower.tail here so that it will always get printed.

00:00:44.855 --> 00:00:49.250
Let's put some text in error has occurred.

00:00:49.250 --> 00:00:52.700
Also, along with the except statement,

00:00:52.700 --> 00:00:56.210
you need to specify what exception you are expecting.

00:00:56.210 --> 00:00:58.610
Let's have excepts and four now,

00:00:58.610 --> 00:01:01.680
which will catch all kinds of exceptions.

00:01:03.670 --> 00:01:08.390
And we can print that to the log and to print the error to the console,

00:01:08.390 --> 00:01:10.250
we need to make sure it's in string format.

00:01:10.250 --> 00:01:13.460
So we will convert the exception to a string and print it.

00:01:13.460 --> 00:01:16.790
Now let's run it here.

00:01:16.790 --> 00:01:19.295
Integrate exception as EXP.

00:01:19.295 --> 00:01:23.345
Now everything runs fine because this doesn't throw an exception.

00:01:23.345 --> 00:01:25.850
Let's have a variable,

00:01:25.850 --> 00:01:30.005
var one and have a value a 100 divided by g.

00:01:30.005 --> 00:01:36.630
This should throw an error or exception which should get caught within the except block.

00:01:38.920 --> 00:01:44.840
We can see that the program entered the except block and printed there.

00:01:44.840 --> 00:01:47.960
There are the exception in this case is division by

00:01:47.960 --> 00:01:52.440
0 because we're trying to divide 100 by 0.

00:01:52.540 --> 00:01:55.175
Let's try to do the same thing.

00:01:55.175 --> 00:01:56.495
Try-block.

00:01:56.495 --> 00:02:00.800
We can see that the program exited with exit code one.

00:02:00.800 --> 00:02:04.475
We got the same except some division by 0.

00:02:04.475 --> 00:02:06.965
But because it was outside the try-block,

00:02:06.965 --> 00:02:09.320
you did not get caught within the except block.

00:02:09.320 --> 00:02:12.200
So the program throws an error and exit it.

00:02:12.200 --> 00:02:16.925
So it's always a best practice to use try and except block within Python.

00:02:16.925 --> 00:02:19.550
If you think your code is likely to throw any error,

00:02:19.550 --> 00:02:22.700
then your program will handle the error and I got exit

00:02:22.700 --> 00:02:26.045
gracefully or continue the execution of the flow.

00:02:26.045 --> 00:02:30.530
After stored data, I feel in the other function invocation that would continue,

00:02:30.530 --> 00:02:35.700
but your program would not stop if there is an error within the stored data function.
