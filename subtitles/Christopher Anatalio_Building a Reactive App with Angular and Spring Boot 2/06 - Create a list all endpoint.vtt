WEBVTT
1
00:00:00.050 --> 00:00:02.040
- [Instructor] Now, let's create an endpoint

2
00:00:02.040 --> 00:00:04.060
that will return every reservation

3
00:00:04.060 --> 00:00:07.010
that's currently in the table.

4
00:00:07.010 --> 00:00:10.040
Additional enhancements that we may want to make

5
00:00:10.040 --> 00:00:14.010
include PatchNation, Sorting and Filtering.

6
00:00:14.010 --> 00:00:16.040
But at this point, we're just going to return

7
00:00:16.040 --> 00:00:20.020
every record currently in the table.

8
00:00:20.020 --> 00:00:24.000
Let's open up the Reservation Service interface

9
00:00:24.000 --> 00:00:28.020
and add in a new method.

10
00:00:28.020 --> 00:00:31.040
Let's set the return type to Flux.

11
00:00:31.040 --> 00:00:35.020
That will emit any number of reservations.

12
00:00:35.020 --> 00:00:39.030
Let's use alt, enter to import,

13
00:00:39.030 --> 00:00:46.000
and let's name the method, list all reservations.

14
00:00:46.000 --> 00:00:50.010
Now, let's open up the Reservation Service ITPL.

15
00:00:50.010 --> 00:00:53.070
Use the keyboard shortcut, command plus n,

16
00:00:53.070 --> 00:00:57.000
and scroll down to implement methods.

17
00:00:57.000 --> 00:01:03.050
Select list all reservations and then click okay.

18
00:01:03.050 --> 00:01:06.090
Okay, now let's build out the method stub.

19
00:01:06.090 --> 00:01:11.000
Let's invoke the ReactiveMongo operations,

20
00:01:11.000 --> 00:01:13.050
and let's call it the find all method

21
00:01:13.050 --> 00:01:18.050
passing in the reservation class.

22
00:01:18.050 --> 00:01:21.000
In an actual production application,

23
00:01:21.000 --> 00:01:23.030
generally you'd be finding all

24
00:01:23.030 --> 00:01:26.030
for a specific user or entity.

25
00:01:26.030 --> 00:01:29.000
However, in this example we are not

26
00:01:29.000 --> 00:01:37.060
implementing authentication or authorization.

27
00:01:37.060 --> 00:01:40.030
Now, let's create an endpoint mapping.

28
00:01:40.030 --> 00:01:44.080
Let's open up Reservation Resource,

29
00:01:44.080 --> 00:01:53.060
and let's copy lines 24 through 28, our existing GetMapping.

30
00:01:53.060 --> 00:01:56.090
Let's paste it in right below.

31
00:01:56.090 --> 00:02:03.050
Let's remove the path variable,

32
00:02:03.050 --> 00:02:09.050
and let's rename the method to get all reservations.

33
00:02:09.050 --> 00:02:11.040
Let's update the method call on the

34
00:02:11.040 --> 00:02:16.070
reservation service to list all reservations.

35
00:02:16.070 --> 00:02:23.050
Then, let's update the return type to a Flux.

36
00:02:23.050 --> 00:02:24.060
Okay, that's it.

37
00:02:24.060 --> 00:02:30.040
So now, let's try restarting our application.

38
00:02:30.040 --> 00:02:34.030
Then, let's open up Postman,

39
00:02:34.030 --> 00:02:37.020
let's open up the create reservation tab,

40
00:02:37.020 --> 00:02:40.090
and let's create several records.

41
00:02:40.090 --> 00:02:47.020
Let's add a reservation for room 175,

42
00:02:47.020 --> 00:02:51.090
room 275 at the price 250,

43
00:02:51.090 --> 00:03:00.000
and room 375 for the price 300.

44
00:03:00.000 --> 00:03:03.050
Now, let's click on the get reservation entry,

45
00:03:03.050 --> 00:03:07.070
click on the ellipses icon, duplicate.

46
00:03:07.070 --> 00:03:17.010
Now on the copy, let's rename it to get all reservations.

47
00:03:17.010 --> 00:03:21.060
Let's update the URL to remove the path variable,

48
00:03:21.060 --> 00:03:24.050
and let's go ahead and save it.

49
00:03:24.050 --> 00:03:29.020
Now, let's execute that request.

50
00:03:29.020 --> 00:03:35.000
As we can see, we return all three reservations now.

