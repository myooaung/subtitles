WEBVTT
1
00:00:00.050 --> 00:00:02.000
- [Instructor] In this next video,

2
00:00:02.000 --> 00:00:04.040
we're going to build out a post endpoint

3
00:00:04.040 --> 00:00:07.030
to create a new room reservation

4
00:00:07.030 --> 00:00:10.050
representing a document in MongoDB.

5
00:00:10.050 --> 00:00:12.070
Let's navigate to Intellij,

6
00:00:12.070 --> 00:00:15.050
and let's create a new public method

7
00:00:15.050 --> 00:00:18.060
that returns a Mono

8
00:00:18.060 --> 00:00:21.090
that emits a string.

9
00:00:21.090 --> 00:00:24.060
We will change this to reservation later.

10
00:00:24.060 --> 00:00:28.040
Let's name the method CreateReservation.

11
00:00:28.040 --> 00:00:32.010
Let's accept a Mono that emits a reservation

12
00:00:32.010 --> 00:00:36.060
as a method parameter.

13
00:00:36.060 --> 00:00:43.080
Then, let's add in the RequestBody annotation.

14
00:00:43.080 --> 00:00:46.040
This annotation will deserialize

15
00:00:46.040 --> 00:00:54.030
a JSON RequestBody into a reservation object.

16
00:00:54.030 --> 00:00:58.020
Let's add in a PostMapping annotation.

17
00:00:58.020 --> 00:01:01.050
Let's set the path to an empty string.

18
00:01:01.050 --> 00:01:05.000
Let's set produces = MediaType

19
00:01:05.000 --> 00:01:09.040
APPLICATON_JSON_UTF8_VALUE.

20
00:01:09.040 --> 00:01:15.090
Now, let's set consumes to that same value.

21
00:01:15.090 --> 00:01:18.040
This indicates that this endpoint

22
00:01:18.040 --> 00:01:22.070
will use the base string RequestMapping.

23
00:01:22.070 --> 00:01:25.040
It will produce a JSON response.

24
00:01:25.040 --> 00:01:30.070
It also expect a JSON RequestBody.

25
00:01:30.070 --> 00:01:34.050
For now, let's just return a empty JSON string.

26
00:01:34.050 --> 00:01:36.060
Let's type in return

27
00:01:36.060 --> 00:01:38.020
Mono

28
00:01:38.020 --> 00:01:40.020
.just

29
00:01:40.020 --> 00:01:48.010
passing in a string literal of curly braces.

30
00:01:48.010 --> 00:01:54.040
Let's restart our application.

31
00:01:54.040 --> 00:01:56.090
Then, let's use a tool called Postman

32
00:01:56.090 --> 00:01:59.070
to test our post endpoint.

33
00:01:59.070 --> 00:02:04.070
You could download the tool at getpostman.com.

34
00:02:04.070 --> 00:02:09.050
Okay, let's grab our URI.

35
00:02:09.050 --> 00:02:12.090
I have Postman installed locally already.

36
00:02:12.090 --> 00:02:14.060
So go ahead and open up Postman

37
00:02:14.060 --> 00:02:17.050
when you download and install it.

38
00:02:17.050 --> 00:02:22.040
Let's go ahead and type in localhost8080.

39
00:02:22.040 --> 00:02:25.040
Then, type in our RequestMapping

40
00:02:25.040 --> 00:02:30.000
room/v1/reservation.

41
00:02:30.000 --> 00:02:33.010
Let's change it a post request,

42
00:02:33.010 --> 00:02:37.050
and then let's set the RequestBody.

43
00:02:37.050 --> 00:02:40.050
Click the raw radio button.

44
00:02:40.050 --> 00:02:46.010
Then, click on the drop-down and pick JSON.

45
00:02:46.010 --> 00:02:50.030
Now, let's manually create a reservation JSON.

46
00:02:50.030 --> 00:02:52.090
Let's create a field called roomNumber,

47
00:02:52.090 --> 00:02:55.050
using camel-case, and let's enter

48
00:02:55.050 --> 00:02:59.020
in the room number 123.

49
00:02:59.020 --> 00:03:05.000
Then, let's create a string field called checkIn.

50
00:03:05.000 --> 00:03:11.030
Now, let's add a string field called checkOut

51
00:03:11.030 --> 00:03:18.020
and, finally, let's add a field called price.

52
00:03:18.020 --> 00:03:22.020
Lastly, press Send.

53
00:03:22.020 --> 00:03:24.060
Looks like we've got a 200 OK,

54
00:03:24.060 --> 00:03:27.000
and our expected response.

