WEBVTT
1
00:00:00.050 --> 00:00:01.090
- Now, let's implement

2
00:00:01.090 --> 00:00:03.000
a rest call

3
00:00:03.000 --> 00:00:04.090
to get all reservation data,

4
00:00:04.090 --> 00:00:07.070
using our REST API.

5
00:00:07.070 --> 00:00:09.040
Let's hop into IntelliJ,

6
00:00:09.040 --> 00:00:13.090
and let's open up ReseverationService.ts.

7
00:00:13.090 --> 00:00:17.090
Let's create a method called getReservations,

8
00:00:17.090 --> 00:00:20.040
that takes in no parameters,

9
00:00:20.040 --> 00:00:22.080
and returns a Observable

10
00:00:22.080 --> 00:00:24.030
that emits

11
00:00:24.030 --> 00:00:29.050
a collection of Reservations.

12
00:00:29.050 --> 00:00:31.050
Now, let's return the result

13
00:00:31.050 --> 00:00:34.090
of calling your http client

14
00:00:34.090 --> 00:00:37.090
evoking a get request,

15
00:00:37.090 --> 00:00:42.050
that returns an array of Reservations,

16
00:00:42.050 --> 00:00:49.090
passing in the reservationUrl.

17
00:00:49.090 --> 00:00:54.060
Now, let's open up app.component.ts.

18
00:00:54.060 --> 00:01:00.010
Let's create a variable called currentReservations,

19
00:01:00.010 --> 00:01:06.070
and let's make it a collection of Revervations.

20
00:01:06.070 --> 00:01:14.070
Now, let's create a method called getCurrentReservatons,

21
00:01:14.070 --> 00:01:18.040
that takes in no parameters.

22
00:01:18.040 --> 00:01:25.090
And let's call our reservationService,

23
00:01:25.090 --> 00:01:32.030
calling the getReservations method in our service,

24
00:01:32.030 --> 00:01:37.050
then let's subscribe to that observable

25
00:01:37.050 --> 00:01:48.050
and let's pass an a lambda that takes that result,

26
00:01:48.050 --> 00:01:50.080
prints it out to console,

27
00:01:50.080 --> 00:01:53.060
and also sets it equal to the local variable

28
00:01:53.060 --> 00:02:06.000
currentReservations.

29
00:02:06.000 --> 00:02:12.010
Let's be sure to call the getCurrentReservations method

30
00:02:12.010 --> 00:02:16.010
in the ngOnInit block,

31
00:02:16.010 --> 00:02:20.080
so that we get a list of current reservations on page load.

32
00:02:20.080 --> 00:02:25.010
Now, let's start up our Spring application.

33
00:02:25.010 --> 00:02:28.000
Let's take a look at that error.

34
00:02:28.000 --> 00:02:29.050
It looks like

35
00:02:29.050 --> 00:02:33.050
we should add in a this statement

36
00:02:33.050 --> 00:02:35.080
when calling getCurrentReservations

37
00:02:35.080 --> 00:02:42.050
In our init block.

38
00:02:42.050 --> 00:02:46.050
On line 22 let's make sure the type name is correct.

39
00:02:46.050 --> 00:02:50.080
This is an array of Reservations.

40
00:02:50.080 --> 00:02:55.000
Let's also be sure to import the type Reservation

41
00:02:55.000 --> 00:02:59.000
from reservationService.

42
00:02:59.000 --> 00:03:00.050
Let's go ahead and restart

43
00:03:00.050 --> 00:03:04.050
at our Angular service.

44
00:03:04.050 --> 00:03:07.010
Let's open up a browser,

45
00:03:07.010 --> 00:03:14.090
and head to localhost at 4200,

46
00:03:14.090 --> 00:03:16.090
and we can see on load

47
00:03:16.090 --> 00:03:20.010
that when we get a list of current reservations,

48
00:03:20.010 --> 00:03:22.040
the list is empty.

49
00:03:22.040 --> 00:03:32.020
Let's try adding one.

50
00:03:32.020 --> 00:03:36.000
And then let's refresh.

51
00:03:36.000 --> 00:03:37.050
And now on page load,

52
00:03:37.050 --> 00:03:40.000
we get a list of current reservations.

