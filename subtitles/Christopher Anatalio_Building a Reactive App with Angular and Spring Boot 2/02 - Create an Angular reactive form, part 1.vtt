WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Instructor] Now let's create a form

2
00:00:02.050 --> 00:00:06.030
to be able to create a reservation.

3
00:00:06.030 --> 00:00:12.060
We've already imported FormControl and FormGroup.

4
00:00:12.060 --> 00:00:14.050
Now let's create a new variable

5
00:00:14.050 --> 00:00:22.000
called roomSearchForm of the type FormGroup.

6
00:00:22.000 --> 00:00:28.000
In the block ngOnInit, let's initialize the roomSearchForm.

7
00:00:28.000 --> 00:00:33.070
Let's type in this.roomSearchForm

8
00:00:33.070 --> 00:00:38.040
is equal to new FormGroup,

9
00:00:38.040 --> 00:00:43.050
and then let's add in three form controls.

10
00:00:43.050 --> 00:00:46.000
The first one called checkin,

11
00:00:46.000 --> 00:00:51.030
and set it equal to a new form control instance.

12
00:00:51.030 --> 00:01:00.010
Then another form control called checkout,

13
00:01:00.010 --> 00:01:08.010
and then one last form control called roomNumber.

14
00:01:08.010 --> 00:01:11.010
Now let's create four variables to store

15
00:01:11.010 --> 00:01:14.060
the current values for checkin, checkout,

16
00:01:14.060 --> 00:01:21.030
roomNumber, and price.

17
00:01:21.030 --> 00:01:34.050
Now let's subscribe to roomSearchForm.valueChanges.

18
00:01:34.050 --> 00:01:39.010
When we subscribe to roomSearchForm.valueChanges,

19
00:01:39.010 --> 00:01:41.090
when elements in the front end UI change,

20
00:01:41.090 --> 00:01:46.020
those changes are reflected here.

21
00:01:46.020 --> 00:01:49.070
This lambda will allow us to perform actions

22
00:01:49.070 --> 00:01:56.040
every time an element on the front end changes in that form.

23
00:01:56.040 --> 00:01:59.070
So first let's set the current checkIn value

24
00:01:59.070 --> 00:02:04.040
to the most recent change in the form field checkin.

25
00:02:04.040 --> 00:02:10.010
Let's type in this.currentCheckInVal

26
00:02:10.010 --> 00:02:16.000
is equal to form.checkin.

27
00:02:16.000 --> 00:02:21.030
This field maps to this form control here on line 25,

28
00:02:21.030 --> 00:02:24.040
the checkin form control.

29
00:02:24.040 --> 00:02:28.020
Now let's do the same thing for the checkout value,

30
00:02:28.020 --> 00:02:38.020
this.currentCheckOutVal is equal to form.checkout.

31
00:02:38.020 --> 00:02:40.080
The next form element we're going to add

32
00:02:40.080 --> 00:02:43.010
is a dropdown for room number.

33
00:02:43.010 --> 00:02:45.060
The value that comes back to the back end

34
00:02:45.060 --> 00:02:47.090
will be a pipe-separated string

35
00:02:47.090 --> 00:02:51.020
containing the room number and the price.

36
00:02:51.020 --> 00:02:57.090
So let's create a string array named roomValues,

37
00:02:57.090 --> 00:03:02.030
and set that equal to form.roomNumber,

38
00:03:02.030 --> 00:03:05.080
which returns a string, which we will split

39
00:03:05.080 --> 00:03:13.090
on the pipe separator character.

40
00:03:13.090 --> 00:03:16.020
Let's add in an if statement to make sure

41
00:03:16.020 --> 00:03:21.090
form.roomNumber is populated.

42
00:03:21.090 --> 00:03:25.050
Then let's populate the value of the current room number,

43
00:03:25.050 --> 00:03:33.020
this.currentRoomNumber,

44
00:03:33.020 --> 00:03:34.080
and let's set that to the value

45
00:03:34.080 --> 00:03:39.050
of the first item in the room values array.

46
00:03:39.050 --> 00:03:44.090
Let's cast it to a number,

47
00:03:44.090 --> 00:03:47.070
and now we should have the room number available

48
00:03:47.070 --> 00:03:51.060
to send to our post request.

49
00:03:51.060 --> 00:03:58.020
We can do the same thing for the current price.

50
00:03:58.020 --> 00:04:03.000
Grabbing the second value from the room values collection.

