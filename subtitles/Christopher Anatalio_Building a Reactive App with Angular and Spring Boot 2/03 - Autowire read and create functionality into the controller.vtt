WEBVTT
1
00:00:00.030 --> 00:00:03.030
- [Instructor] In this video, we are going to auto-wire,

2
00:00:03.030 --> 00:00:07.070
read, and create functionality into our controller.

3
00:00:07.070 --> 00:00:09.090
We will finally be able to call an endpoint

4
00:00:09.090 --> 00:00:13.040
in our Postman client and actually create a docment

5
00:00:13.040 --> 00:00:16.050
in our MongoDB instance.

6
00:00:16.050 --> 00:00:18.060
Let's open up IntelliJ

7
00:00:18.060 --> 00:00:23.020
and navigate to src, main, java,

8
00:00:23.020 --> 00:00:26.000
into the controller package.

9
00:00:26.000 --> 00:00:31.000
Let's open up the ReservationResource class

10
00:00:31.000 --> 00:00:37.000
and let's add in an instance of the ReservationService.

11
00:00:37.000 --> 00:00:40.050
Type in private final

12
00:00:40.050 --> 00:00:44.000
ReservationService.

13
00:00:44.000 --> 00:00:48.060
Then let's use the keyboard shortcut Command-N

14
00:00:48.060 --> 00:00:51.050
and create a constructor.

15
00:00:51.050 --> 00:00:57.020
Be sure ReservationService is selected and click OK.

16
00:00:57.020 --> 00:01:01.070
Now, let's add in an Autowired annotation.

17
00:01:01.070 --> 00:01:04.020
Spring will now inject a instance

18
00:01:04.020 --> 00:01:06.090
of the ReservationService implementation

19
00:01:06.090 --> 00:01:09.070
into our controller.

20
00:01:09.070 --> 00:01:15.060
Let's go down to line 29 in the getReservation by id method.

21
00:01:15.060 --> 00:01:18.060
Let's call the ReservationService

22
00:01:18.060 --> 00:01:25.050
and then call the getReservation method, passing in the id.

23
00:01:25.050 --> 00:01:28.010
Looks like we misnamed the id here as well,

24
00:01:28.010 --> 00:01:33.040
so let's right-click, go to Refactor, Rename,

25
00:01:33.040 --> 00:01:37.060
and change it to id.

26
00:01:37.060 --> 00:01:42.040
Let's also change it in the path.

27
00:01:42.040 --> 00:01:50.050
Now, let's update the return type to Reservation.

28
00:01:50.050 --> 00:01:55.020
Next up, let's go to the createReservation method.

29
00:01:55.020 --> 00:01:58.080
Let's call the ReservationService

30
00:01:58.080 --> 00:02:03.000
and let's call the createReservation method,

31
00:02:03.000 --> 00:02:05.030
passing in that reservation.

32
00:02:05.030 --> 00:02:09.080
Then let's update the return type.

33
00:02:09.080 --> 00:02:13.010
Okay, our controller is hooked up to our service now.

34
00:02:13.010 --> 00:02:16.010
Let's try starting up our application.

35
00:02:16.010 --> 00:02:20.020
Let's open up the project window.

36
00:02:20.020 --> 00:02:24.050
Right-click on the Reactive Service Application class

37
00:02:24.050 --> 00:02:31.050
and select Run.

38
00:02:31.050 --> 00:02:35.090
So it looks like we have a duplicate bean definition.

39
00:02:35.090 --> 00:02:37.090
We can fix that by going into

40
00:02:37.090 --> 00:02:41.060
the ReactiveSpringApplication class

41
00:02:41.060 --> 00:02:46.000
and modifying the SpringBootApplication annotation

42
00:02:46.000 --> 00:02:50.060
and adding in a exclude parameter.

43
00:02:50.060 --> 00:02:59.050
Let's exclude the MongoDataAutoConfiguration class.

44
00:02:59.050 --> 00:03:02.000
We don't need the AutoConfiguration class

45
00:03:02.000 --> 00:03:06.070
'cause we are manually defining our reactiveMongoTemplate

46
00:03:06.070 --> 00:03:11.060
in our class DataConfig.

47
00:03:11.060 --> 00:03:18.050
So now, let's try running again.

48
00:03:18.050 --> 00:03:22.030
Let's take a look at this error message.

49
00:03:22.030 --> 00:03:27.040
Let's scroll over.

50
00:03:27.040 --> 00:03:28.060
Let's copy the name

51
00:03:28.060 --> 00:03:34.030
of this MongoReactiveDataAutoConfiguration class

52
00:03:34.030 --> 00:03:39.040
and add that into the exclude statement.

53
00:03:39.040 --> 00:03:43.050
Let's go ahead and save

54
00:03:43.050 --> 00:03:47.080
and restart.

55
00:03:47.080 --> 00:03:50.080
Okay, great, it starts up correctly now.

56
00:03:50.080 --> 00:03:52.090
Now, let's open up Postman.

57
00:03:52.090 --> 00:03:55.060
Let's import the collection that contains

58
00:03:55.060 --> 00:03:57.050
all the requests we need.

59
00:03:57.050 --> 00:04:03.010
Click on Import

60
00:04:03.010 --> 00:04:05.080
and then go into chapter six,

61
00:04:05.080 --> 00:04:07.070
video three,

62
00:04:07.070 --> 00:04:08.090
end,

63
00:04:08.090 --> 00:04:10.040
and you should find a file

64
00:04:10.040 --> 00:04:17.080
labelled reactive-app.postman_collection.json.

65
00:04:17.080 --> 00:04:21.090
If you import that into Postman,

66
00:04:21.090 --> 00:04:25.050
it will automatically create the post, put, delete,

67
00:04:25.050 --> 00:04:28.030
and get requests you need.

68
00:04:28.030 --> 00:04:32.050
So let's go ahead and try to create a reservation.

69
00:04:32.050 --> 00:04:35.050
Click on Create Reservation,

70
00:04:35.050 --> 00:04:39.010
click on the Body tab,

71
00:04:39.010 --> 00:04:43.080
and review the data here.

72
00:04:43.080 --> 00:04:48.010
We are creating a reservation for this date range

73
00:04:48.010 --> 00:04:50.080
for room 123

74
00:04:50.080 --> 00:04:55.000
at the price 150.

75
00:04:55.000 --> 00:04:59.060
Okay, let's go ahead and send.

76
00:04:59.060 --> 00:05:03.010
We got a 200 OK

77
00:05:03.010 --> 00:05:05.050
and a JSON body response

78
00:05:05.050 --> 00:05:09.020
for the reservation we just created.

79
00:05:09.020 --> 00:05:13.020
Let's go ahead and grab that id,

80
00:05:13.020 --> 00:05:16.020
open up Get Reservation.

81
00:05:16.020 --> 00:05:20.000
Let's enter in that id as a path variable

82
00:05:20.000 --> 00:05:23.050
and then issue that request.

83
00:05:23.050 --> 00:05:28.060
As you can see, we can now look up a reservation by id.

84
00:05:28.060 --> 00:05:32.050
If you do a lookup for a nonexistent reservation,

85
00:05:32.050 --> 00:05:35.000
you get a empty response body.

