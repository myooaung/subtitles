WEBVTT
1
00:00:00.050 --> 00:00:02.060
- [Instructor] In this video we will demonstrate

2
00:00:02.060 --> 00:00:05.070
how we make remote HTTP calls

3
00:00:05.070 --> 00:00:08.070
with a Reactive Angular web app.

4
00:00:08.070 --> 00:00:12.050
We will be using the Angular HTTPClient

5
00:00:12.050 --> 00:00:16.010
to preform requests to our REST API.

6
00:00:16.010 --> 00:00:20.080
We can inject the client as a dependency into our service.

7
00:00:20.080 --> 00:00:23.080
It streamlines the process of making

8
00:00:23.080 --> 00:00:28.050
and processing an HTTP request.

9
00:00:28.050 --> 00:00:30.050
The client provides a capacity

10
00:00:30.050 --> 00:00:34.050
for type check request and responses.

11
00:00:34.050 --> 00:00:37.050
We will be able to define interfaces

12
00:00:37.050 --> 00:00:40.060
that facilitate interaction with our request

13
00:00:40.060 --> 00:00:44.060
and response objects in a more formalized manner.

14
00:00:44.060 --> 00:00:49.010
In addition we also get request and response interception.

15
00:00:49.010 --> 00:00:53.050
We get access to the RxJS observable APIs

16
00:00:53.050 --> 00:00:57.050
and finally we get streamlined error handling.

17
00:00:57.050 --> 00:01:02.000
Now let's take a look at the high level flow of a request.

18
00:01:02.000 --> 00:01:05.040
First off we have our Angular component.

19
00:01:05.040 --> 00:01:11.000
It's composed of HTML, CSS styling, static resources

20
00:01:11.000 --> 00:01:14.030
such as images, and our TypeScript files

21
00:01:14.030 --> 00:01:17.020
that contain our program logic.

22
00:01:17.020 --> 00:01:20.000
Next we're going to create a service to abstract away

23
00:01:20.000 --> 00:01:23.050
some of the interactions from making a request

24
00:01:23.050 --> 00:01:25.080
and then finally we're going to leverage

25
00:01:25.080 --> 00:01:29.020
the HTTPClient to make the actual call

26
00:01:29.020 --> 00:01:32.010
to our Spring REST API.

27
00:01:32.010 --> 00:01:37.060
You can read more about the HTTP client in the Angular docs.

28
00:01:37.060 --> 00:01:42.000
You can find the docs at Angular.io/guide/http.

