WEBVTT
1

00:00:00.660  -->  00:00:04.580
Hi and welcome back in this video we're going to be creating the menu.

2

00:00:05.220  -->  00:00:08.480
And also we're going to be finalizing our app.

3

00:00:09.300  -->  00:00:12.170
I've written a quick outline for what the menu might do.

4

00:00:12.480  -->  00:00:18.630
First ask for the user's name and check if they have a file for them.

5

00:00:18.630  -->  00:00:26.010
If they do have a file welcome them and load the data from that file and if not create a user object

6

00:00:26.010  -->  00:00:28.200
for them.

7

00:00:28.200  -->  00:00:31.230
Then we give them a list of options such as add a movie.

8

00:00:31.290  -->  00:00:32.450
See a list of movies.

9

00:00:32.490  -->  00:00:37.490
Set a movie or watched the leading movie by name on see List of watched movies.

10

00:00:37.620  -->  00:00:45.480
Finally we'll also let them save their data to a file and quit the file names are going to be equal

11

00:00:45.480  -->  00:00:48.200
to the users names and the will to do that.

12

00:00:48.210  -->  00:00:54.400
Just so we can identify the user quickly whether they exist or not.

13

00:00:54.510  -->  00:00:55.190
The first line.

14

00:00:55.230  -->  00:00:56.050
You know how to do.

15

00:00:56.160  -->  00:00:58.680
Ask for a user's name.

16

00:00:58.680  -->  00:01:00.040
We can use the input method.

17

00:01:00.040  -->  00:01:07.730
So go ahead and write a line that asks the user for their name.

18

00:01:07.800  -->  00:01:14.760
This would be input into your name and this would allow the user to enter their name and that would

19

00:01:14.760  -->  00:01:16.450
get saved in the variable name.

20

00:01:16.480  -->  00:01:28.020
As we know then we're going to check if a file exists for a user and the file name is going to be dropped

21

00:01:28.020  -->  00:01:28.300
here.

22

00:01:28.320  -->  00:01:34.860
The format name and what we want to do is check if the file exists.

23

00:01:34.870  -->  00:01:39.180
So just like Jose doc DXP we want to check if that file exists.

24

00:01:39.180  -->  00:01:47.820
So if file exists finally pass pass just means do nothing.

25

00:01:47.820  -->  00:01:51.530
As you know and we're going to create this file exists method

26

00:01:57.480  -->  00:02:05.580
and the way to check whether a file exists or not is using the OS module the OS library.

27

00:02:05.580  -->  00:02:09.440
So we're going to see return OS path exists.

28

00:02:09.450  -->  00:02:12.090
So why is file file name.

29

00:02:12.560  -->  00:02:20.490
We have to import os and that's the way we would check for whether something is a file or not.

30

00:02:20.490  -->  00:02:25.880
If it's not a file it means it doesn't exist or it's a directory folder.

31

00:02:27.360  -->  00:02:28.870
OK we've got that.

32

00:02:28.920  -->  00:02:38.250
So if the file exists we want to say user is user dot from Jason.

33

00:02:38.460  -->  00:02:45.610
Jason data and the Jayson data is going to be Jason.

34

00:02:45.600  -->  00:02:50.040
Data equals Jason dot load.

35

00:02:50.190  -->  00:02:57.450
We have to import the Egyptian model and the Jewson load method takes in a file pointer which is with

36

00:02:57.450  -->  00:03:09.210
open file name as read that's if to that with F. OK.

37

00:03:10.220  -->  00:03:16.320
As you can see I worked backwards in there because I knew what I wanted the user to do and the rest

38

00:03:16.320  -->  00:03:18.090
kind of just came naturally.

39

00:03:18.300  -->  00:03:25.140
I wanted to create a user from Jason with some JS and data and that Jewson data had to be loaded naturally

40

00:03:25.740  -->  00:03:32.610
and to load it I need the file pointer which prompted me to create this with construct and that means

41

00:03:32.640  -->  00:03:35.580
I didn't need to know exactly what I was going to do from the beginning.

42

00:03:35.580  -->  00:03:40.090
I didn't need to know how to open the file and then load the data and then open the user up.

43

00:03:40.110  -->  00:03:47.620
I just wanted to get data in there and that prompted me to think about previous steps as well.

44

00:03:47.640  -->  00:03:49.930
There is no correct way to do programming.

45

00:03:50.010  -->  00:03:51.850
Just whatever works for you.

46

00:03:52.360  -->  00:03:54.200
We also naturally have to import user.

47

00:03:54.270  -->  00:03:57.970
So let's do that.

48

00:03:58.060  -->  00:03:59.530
That's what we've done here.

49

00:04:00.150  -->  00:04:08.370
And if the user does not exist Elle's user is going to be a new user with name which is the name they

50

00:04:08.370  -->  00:04:11.360
give us here.

51

00:04:13.140  -->  00:04:16.640
OK and then we give them a list of options.

52

00:04:16.850  -->  00:04:28.410
The list of options are going to be print or import enter a to add movie X to see movies.

53

00:04:28.410  -->  00:04:43.380
See the list of movies w to set a movie I watched D2 deletes a movie am able to see the list of watched

54

00:04:43.440  -->  00:04:46.970
movies and I know you guys can't see this very well in Michigan and do that

55

00:04:50.880  -->  00:04:58.050
or q to save and quit there we go.

56

00:04:58.240  -->  00:05:00.660
Well a lot of options we're giving our users

57

00:05:03.390  -->  00:05:08.340
now came and now we have to be able to deal with these options naturally.

58

00:05:09.880  -->  00:05:14.180
So user input is going to be that.

59

00:05:16.180  -->  00:05:25.260
And then if user input equals a then we're going to do something.

60

00:05:26.810  -->  00:05:29.850
Whoops.

61

00:05:30.310  -->  00:05:33.460
If user input equals s We're going to use something else.

62

00:05:33.450  -->  00:05:38.090
W d l.

63

00:05:38.170  -->  00:05:44.020
Q These are the options and not really the user can only do one of them.

64

00:05:44.130  -->  00:05:48.110
So if she'd be the first if the others are going to be Elif

65

00:05:53.220  -->  00:05:56.320
that's it.

66

00:05:56.310  -->  00:06:01.620
And that's what we're going to be asking the user.

67

00:06:01.650  -->  00:06:12.390
So if the user input is a we want to add a new movies or we'll say user dot add movie name genre and

68

00:06:12.430  -->  00:06:20.100
we need to ask the user for the name or genre movie name movie name because name is already used up

69

00:06:20.110  -->  00:06:20.410
there.

70

00:06:20.520  -->  00:06:28.950
So I'm gonna call it different the movie name is input into the movie name movie Jonah equals input

71

00:06:29.110  -->  00:06:30.190
into that movie genre

72

00:06:34.040  -->  00:06:36.870
and that's it.

73

00:06:36.880  -->  00:06:42.300
So that's how we would add a movie if they type s they want to see a list of movies.

74

00:06:42.310  -->  00:06:49.650
So we are going to print a list of movies for movie in use in movies print

75

00:06:53.500  -->  00:07:05.040
name not genre that watched quite a simple way to print things out isn't it.

76

00:07:05.280  -->  00:07:10.570
Movie don't name movie star John-Roger movie don't watch it.

77

00:07:10.810  -->  00:07:11.590
Simple enough.

78

00:07:11.740  -->  00:07:17.570
That's how we would print out a list of movies w to set the movie watched.

79

00:07:17.740  -->  00:07:26.050
So we'll say OK we want to set a specific movie as having been watched and we don't have a way to do

80

00:07:26.050  -->  00:07:37.830
that in the User class so we'll have to create that will say movie name in put into the movie name to

81

00:07:37.840  -->  00:07:48.560
set at watched and then we'll see user set watched movie name.

82

00:07:49.090  -->  00:07:50.850
We're going to have to create that.

83

00:07:50.880  -->  00:07:59.230
So let's go into the user and say they have sent watched name.

84

00:07:59.980  -->  00:08:08.010
And here we will simply iterate over the movies find the one that has that name and set be watched.

85

00:08:08.020  -->  00:08:08.910
Too true.

86

00:08:09.310  -->  00:08:11.300
And this is something that you can do.

87

00:08:11.500  -->  00:08:17.640
You can iterate over the movies if the movie name matches this name sets the movie's named two watched

88

00:08:18.120  -->  00:08:19.590
the movies watched to true.

89

00:08:19.650  -->  00:08:22.910
Sorry I'm going mental here.

90

00:08:25.430  -->  00:08:26.420
OK.

91

00:08:26.440  -->  00:08:36.290
I'm sure you were able to do that for movie in self movies if movie don't name equally cool name movie

92

00:08:36.310  -->  00:08:39.300
don't watch it is true.

93

00:08:39.310  -->  00:08:41.470
That's what that does.

94

00:08:41.500  -->  00:08:43.700
Iterate over the movies.

95

00:08:44.080  -->  00:08:49.380
And then if the movie's name is equal to the name that we are passing in then we set the watch to troop

96

00:08:50.470  -->  00:08:53.250
so that will now work.

97

00:08:53.250  -->  00:09:02.920
D to the lead a movie movie name equals input into the movie name to delete user delete.

98

00:09:02.920  -->  00:09:04.430
Movies with movie name.

99

00:09:04.480  -->  00:09:10.680
And we've already got this method so that we just work l to see a list of watched movies.

100

00:09:11.510  -->  00:09:17.680
And here I'm just going to copy what was in S which is a list of movies but instead of using movies

101

00:09:17.760  -->  00:09:21.460
I'm going to say user dot watched movies.

102

00:09:21.620  -->  00:09:22.300
That.

103

00:09:22.750  -->  00:09:30.220
Finally the queue to save in Kuwait and here we're going to have to save the user to the file.

104

00:09:30.450  -->  00:09:32.740
So what we'll do is with open

105

00:09:35.640  -->  00:09:37.830
the same file as before.

106

00:09:38.190  -->  00:09:45.850
Finally file name in w this time pass f f Jason.

107

00:09:45.890  -->  00:09:53.000
Don't dump user on Jason that that's on the way.

108

00:09:53.080  -->  00:09:59.610
Use it on Jason and that'll just dump the users Jason into f.

109

00:09:59.670  -->  00:10:02.830
Which is the file that we've opened in write mode.

110

00:10:06.230  -->  00:10:11.640
And that's everything except for the fact that this is only going to run once we're going to start here

111

00:10:11.660  -->  00:10:17.140
the top we're going to ask the user for their input and then we're going to run doing one of these things

112

00:10:17.200  -->  00:10:17.820
and then we're going to.

113

00:10:17.830  -->  00:10:25.480
And so what we want to do is run this many times.

114

00:10:25.480  -->  00:10:32.230
So while I am user input

115

00:10:35.250  -->  00:10:40.910
is not who will do this.

116

00:10:41.710  -->  00:10:45.270
And at the end we're going to have to ask the user once again for their input.

117

00:10:45.340  -->  00:10:48.970
And now this is a small problem that this is going to cause.

118

00:10:49.510  -->  00:10:55.630
But see if you can spot what problem might arise if we do this.

119

00:10:55.960  -->  00:11:00.260
We're going to ask the user for input while the input is not.

120

00:11:00.260  -->  00:11:05.740
Q We're going to do a s w d a rail

121

00:11:08.740  -->  00:11:09.970
if the input is.

122

00:11:09.970  -->  00:11:14.130
Q This is not going to run.

123

00:11:14.600  -->  00:11:17.770
This is not going to run which means this will never happen.

124

00:11:18.130  -->  00:11:21.260
And that's where the problem was.

125

00:11:22.420  -->  00:11:26.100
So we need a different way to run this.

126

00:11:26.560  -->  00:11:37.900
And the way is that we might as well always save for the user it's just a better way of doing things

127

00:11:39.040  -->  00:11:42.980
instead of asking the user to save and quit.

128

00:11:43.060  -->  00:11:49.440
We can always save and then the user will never lose their date.

129

00:11:49.510  -->  00:11:53.630
The problem without the obvious caveat is that if they delete their movies by accident and we overwrite

130

00:11:53.650  -->  00:11:57.150
them then they will be mad.

131

00:11:57.320  -->  00:12:05.760
But the other obvious option is to add an S for Save and a Q to quit and we can also do that.

132

00:12:05.950  -->  00:12:07.780
So you can choose what you want to do.

133

00:12:07.780  -->  00:12:17.200
We can just always save by putting this at the end of the method or we can add an S option to save if

134

00:12:17.200  -->  00:12:22.940
you wanted to add to the option to save and

135

00:12:25.600  -->  00:12:29.080
q to quit.

136

00:12:29.410  -->  00:12:29.830
But

137

00:12:33.340  -->  00:12:39.350
that would be an option if this were s we could save but as is already used.

138

00:12:39.370  -->  00:12:40.390
So I'm going to use

139

00:12:43.480  -->  00:12:47.180
F for files that are stretching the imagination a bit.

140

00:12:47.200  -->  00:12:54.010
But you know we could do this or as I mentioned we can just put this at the very end of the method and

141

00:12:54.010  -->  00:12:55.240
then it will always run.

142

00:12:55.400  -->  00:12:57.070
That's another option.

143

00:12:57.070  -->  00:13:00.640
But if we use Q That will never run when needed.

144

00:13:00.640  -->  00:13:03.430
Q So that wouldn't really work

145

00:13:07.670  -->  00:13:09.650
without that.

146

00:13:09.850  -->  00:13:13.710
Let's save that and run it and then it gets to us.

147

00:13:13.720  -->  00:13:18.760
My name I'm going to put in another name because Jose got TXI he doesn't have adjacent file so I'm going

148

00:13:18.760  -->  00:13:25.560
to put something else Roth and I get a really long string here of options.

149

00:13:25.580  -->  00:13:37.390
I'm going to type a two hour movie The Matrix cipher and then I'm going to save with F and then I'm

150

00:13:37.390  -->  00:13:41.160
going to quit and then I'm going to play again with the same name.

151

00:13:41.160  -->  00:13:44.410
What is how Rowlf that has been created up there.

152

00:13:45.150  -->  00:13:51.200
And now I'm going to see a list of movies and I get the Matrix which is what I wrote earlier.

153

00:13:52.210  -->  00:13:57.900
And this is how you can write a pretty useful app to be honest.

154

00:13:58.000  -->  00:14:03.700
OK some of the most useful thing in the world but this will persist to your data and will let you to

155

00:14:04.030  -->  00:14:07.000
let you interact with the app with a command line.

156

00:14:07.000  -->  00:14:13.840
Save things to a file but you add movies in there and I'm sure you can find plenty more uses for this

157

00:14:14.260  -->  00:14:18.190
sort of flow if you wish.

158

00:14:18.310  -->  00:14:21.780
And now the part I like the least about this.

159

00:14:21.970  -->  00:14:23.050
There are two parts.

160

00:14:23.050  -->  00:14:24.570
The first is writing a menu.

161

00:14:24.640  -->  00:14:27.110
It just feels really ugly and unclean.

162

00:14:27.550  -->  00:14:30.380
And we we get to that later on.

163

00:14:30.850  -->  00:14:36.970
And the other thing I don't like is the use of files and we have a lot of files that potentially we

164

00:14:36.970  -->  00:14:41.160
have a lot of users we have a lot of files and that's just not very nice naturally.

165

00:14:41.500  -->  00:14:46.670
Using a database is better and we will get to that very soon as well.

166

00:14:46.780  -->  00:14:52.510
After all the Course is about Python and possed Gras postchaise is one of the best if not the best relational

167

00:14:52.510  -->  00:14:53.560
database system.

168

00:14:53.650  -->  00:14:59.540
So we're not we are going to get into saving things to our database base very soon.

169

00:15:00.700  -->  00:15:04.300
But congratulations on reaching the end of this section.

170

00:15:04.390  -->  00:15:11.390
We have created a very nice app that lets us create users create movies and save them.

171

00:15:11.590  -->  00:15:18.700
And there's a fair amount of interaction between them and now we can we can move on into the next section

172

00:15:18.700  -->  00:15:19.450
.

173

00:15:19.570  -->  00:15:23.370
So I'm pretty excited for that and I'll see you in the next video.
