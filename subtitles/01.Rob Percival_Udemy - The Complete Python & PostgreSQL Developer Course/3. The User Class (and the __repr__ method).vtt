WEBVTT
1

00:00:00.400  -->  00:00:07.470
Hard will come back in this video we're going to be creating the user class in the last video we created

2

00:00:07.500  -->  00:00:13.560
a movie class and we specified the name and genre of a movie and then we saw how we could access the

3

00:00:13.560  -->  00:00:15.020
properties of it.

4

00:00:15.120  -->  00:00:21.060
And what happened when we accessed a property that didn't exist.

5

00:00:21.060  -->  00:00:26.490
What we're going to do in this video is create another class that is going to be our user and this is

6

00:00:26.490  -->  00:00:29.480
the user of the system.

7

00:00:29.700  -->  00:00:35.310
Users of the system are going to have a library of movies and they're going to be able to mark them

8

00:00:35.340  -->  00:00:39.030
as watched or not watched.

9

00:00:39.090  -->  00:00:45.840
So let's right click our project and create a new python file and I'm going to call that user and in

10

00:00:45.840  -->  00:00:49.250
here I'm going to create my class user.

11

00:00:49.610  -->  00:00:55.770
And as we know we are going to put an init method that is going to accept some properties that we're

12

00:00:55.770  -->  00:00:59.740
going to be setting for the specific user.

13

00:00:59.970  -->  00:01:04.140
And that's going to be the name of the user.

14

00:01:05.070  -->  00:01:12.150
And as you know we are going to set the user's name to be the name we passed in as a parameter.

15

00:01:12.810  -->  00:01:16.320
So I'm sure you guys know how to do that already.

16

00:01:16.350  -->  00:01:18.410
Post the video and implement that yourselves.

17

00:01:18.420  -->  00:01:26.100
Remember it is vital for you to be typing code as I explain it as opposed to just listening and not

18

00:01:26.130  -->  00:01:31.560
doing the coding.

19

00:01:31.560  -->  00:01:36.570
Now that that's done as I'm sure you've got it we do self don't.

20

00:01:36.600  -->  00:01:47.010
And then the name of the property that we want to create or access equals name and that since the name

21

00:01:47.070  -->  00:01:48.190
of the user.

22

00:01:48.760  -->  00:01:53.470
Another property I'm going to create in the user is self-taught movies.

23

00:01:53.610  -->  00:02:01.950
And once again that's going to be an empty list as we did with our students.

24

00:02:02.010  -->  00:02:09.200
Now let's go into our app and create a user.

25

00:02:11.290  -->  00:02:13.960
And I'm going to give it my name.

26

00:02:14.430  -->  00:02:22.850
If you use a class without importing it pyjama will allow you to import it directly from here.

27

00:02:23.070  -->  00:02:29.760
So you have to import that and then you can use it.

28

00:02:29.800  -->  00:02:34.050
We're creating a movie here but we've not used it yet in this program.

29

00:02:34.060  -->  00:02:40.380
So what I'm going to do is just comment it out and then I'm going to print the user notice that this

30

00:02:40.380  -->  00:02:42.320
is a user object.

31

00:02:42.960  -->  00:02:45.090
What do you think is going to get printed out.

32

00:02:45.150  -->  00:02:48.630
When I do this.

33

00:02:50.130  -->  00:02:51.300
Well let's have a look.

34

00:02:51.300  -->  00:02:52.880
I'll press play.

35

00:02:53.580  -->  00:03:01.680
And what gets printed out is user Daut user with a capital you object at some address.

36

00:03:01.680  -->  00:03:09.360
This address is the memory address of where the user object is defined not defined but has been created

37

00:03:09.390  -->  00:03:10.960
and allocate some memory.

38

00:03:11.280  -->  00:03:20.160
We don't care about that at all and it's inside the file user and it's a User class type of object.

39

00:03:20.400  -->  00:03:23.550
To be honest none of that is particularly helpful.

40

00:03:23.550  -->  00:03:28.980
So what I'm going to do is I'm going to change the way that the user is printed out when I print the

41

00:03:28.980  -->  00:03:31.830
object.

42

00:03:31.890  -->  00:03:38.880
Let's do that with another special Python method which is the underscore underscore our EPR underscore

43

00:03:38.880  -->  00:03:48.960
underscore and that Stansel representation and it allows me to define a string that represents the object

44

00:03:48.990  -->  00:03:51.210
when it gets printed out.

45

00:03:51.290  -->  00:04:00.060
So I'm going to return user and format self-taught.

46

00:04:01.560  -->  00:04:06.630
And what that does is it puts self-taught name in place of the opening and Culbert exclusive formats

47

00:04:06.630  -->  00:04:06.900
.

48

00:04:07.050  -->  00:04:13.620
The string here with a self-taught name which makes a self-taught name appear here and that would be

49

00:04:13.620  -->  00:04:14.610
user Jose.

50

00:04:14.630  -->  00:04:15.990
In this case.

51

00:04:16.100  -->  00:04:16.600
OK.

52

00:04:16.860  -->  00:04:20.580
Now that we've done that let's go back to the app and run it again.

53

00:04:20.700  -->  00:04:27.480
And now we get that there may be a bit more helpful whenever you want to verify your programs are working

54

00:04:27.480  -->  00:04:30.260
.

55

00:04:30.270  -->  00:04:38.040
Something to remember is that once you've created your movie you can at any point do user dot movies

56

00:04:38.430  -->  00:04:45.050
dot append my movie and then you can also print user or dot movies.

57

00:04:45.870  -->  00:04:54.240
And when we do this we get the user representation there and then a list of movie objects and each one

58

00:04:54.240  -->  00:04:59.830
is represented by movie or movie object at some memory address.

59

00:04:59.910  -->  00:05:06.870
So why don't you pause the video go and implement a wrapper method for the movie that we make this slightly

60

00:05:06.870  -->  00:05:17.880
nicer to look at maybe make it represent some useful properties of them of the movie like the name.

61

00:05:17.880  -->  00:05:21.000
Once that's done let's go over it how we would do that here.

62

00:05:21.390  -->  00:05:24.480
Once again we would go inside the movie class.

63

00:05:24.480  -->  00:05:36.030
Remember to indent your code four spaces and then repr method should return movie with a name that format

64

00:05:36.150  -->  00:05:37.380
self-taught.

65

00:05:37.920  -->  00:05:43.290
Notice that this can be anything you want it doesn't have to be the string representation string can

66

00:05:43.290  -->  00:05:48.480
be anything that you want the movie to show as when it's printed.

67

00:05:48.480  -->  00:05:56.610
Now if we run this again we'll see that the movies is The Matrix being one of them.

68

00:05:56.610  -->  00:05:58.490
So now we've created the user.

69

00:05:58.710  -->  00:06:05.790
We've been able to give it's movies and we've created representational formats for them so that when

70

00:06:05.790  -->  00:06:08.520
we print them out it does print something out.

71

00:06:08.520  -->  00:06:12.020
That is a bit more useful than the memory address.

72

00:06:12.300  -->  00:06:13.620
So that's everything for this video.

73

00:06:13.890  -->  00:06:15.850
And I see you in the next one.
