1

00:00:00,210  -->  00:00:06,210
Hi and welcome back in this video we're going to be defining our own methods.

2

00:00:06,240  -->  00:00:08,910
The first thing to know is what is a method.

3

00:00:09,180  -->  00:00:16,320
A method is nothing other than a name for a block of code so you can get a few lines of code give them

4

00:00:16,320  -->  00:00:22,580
a name and then run them whenever you execute that name.

5

00:00:22,740  -->  00:00:25,300
Right now our program runs from top to bottom.

6

00:00:25,320  -->  00:00:29,400
We execute the first line and then the next line and then the next one and so on.

7

00:00:29,400  -->  00:00:32,050
However it doesn't have to be this way.

8

00:00:32,400  -->  00:00:40,140
We can create a method and then execute that method multiple times for example without having to duplicate

9

00:00:40,530  -->  00:00:42,540
the lines many times.

10

00:00:42,540  -->  00:00:48,120
So what we're going to do is we're going to get these few lines the lines that ask the user for a number

11

00:00:48,390  -->  00:00:51,090
and then verify whether the number is right or not.

12

00:00:51,090  -->  00:01:01,080
We are going to select them and cut them and then we're going to come up here and say def ask user and

13

00:01:01,230  -->  00:01:07,500
check number and then we're going to write open and close bracket and the colon.

14

00:01:07,680  -->  00:01:12,170
And now we've defined a method def is a keyword to define a method.

15

00:01:12,300  -->  00:01:16,690
Then we type in the new name for a method we can type whatever we want.

16

00:01:16,770  -->  00:01:18,480
It follows the same conventions as variables.

17

00:01:18,480  -->  00:01:24,440
You can't stop them with a number that's all or with an underscore.

18

00:01:24,450  -->  00:01:27,090
Actually you can start with an underscore just not with a number.

19

00:01:27,540  -->  00:01:29,230
So the not the name.

20

00:01:29,250  -->  00:01:30,650
And then open and close brackets.

21

00:01:30,690  -->  00:01:35,460
Then a colon and then press enter and type in our code then are pasted.

22

00:01:36,000  -->  00:01:39,360
And now we've got ourselves a brand new method.

23

00:01:39,420  -->  00:01:45,750
This method is called Ask user and check number and what it does is it does exactly that.

24

00:01:45,750  -->  00:01:46,990
It asks the user.

25

00:01:47,100  -->  00:01:51,540
And then checks the number in order to run that code.

26

00:01:51,540  -->  00:01:57,660
The only thing we have to do now is call our method the action of calling our method is the same as

27

00:01:57,690  -->  00:01:59,250
executing the method.

28

00:01:59,250  -->  00:02:05,100
Just type in here ask user and check number.

29

00:02:06,900  -->  00:02:14,850
OK so now we can save this and run it and actually you can see we get the chance to type in our three

30

00:02:14,850  -->  00:02:18,060
numbers and then it tells us whether we got it right or not.

31

00:02:18,060  -->  00:02:24,240
So we know that this code is running which is exactly what we wanted.

32

00:02:24,240  -->  00:02:30,420
Something that we can do is we can also create a method for this code down here the code that runs our

33

00:02:30,420  -->  00:02:32,990
program three times.

34

00:02:33,630  -->  00:02:41,160
So let's create a method def run program X times and I'm calling it run program X times for a reason

35

00:02:41,160  -->  00:02:41,330
.

36

00:02:41,490  -->  00:02:44,520
And we're going to get to that reason in just a moment.

37

00:02:45,220  -->  00:02:49,300
OK so now I'm going to save this program and run it.

38

00:02:49,410  -->  00:02:53,620
And what do you think is going to happen when I run this program.

39

00:02:54,720  -->  00:02:57,590
Well let's find out.

40

00:02:57,800  -->  00:02:59,680
That's what happens when I run this program.

41

00:02:59,730  -->  00:03:01,380
Absolutely nothing.

42

00:03:01,950  -->  00:03:09,500
And the reason is because even though we've defined the method that actually does stuff we've not executed

43

00:03:09,510  -->  00:03:14,680
we've not called that method so we have to call our method down here.

44

00:03:15,450  -->  00:03:20,880
If not if we don't call the method all the program does is import random define a method that bosal

45

00:03:20,880  -->  00:03:22,990
something but doesn't run the method.

46

00:03:23,130  -->  00:03:26,050
Define a variable define another variable and find another method.

47

00:03:26,070  -->  00:03:27,930
It never actually does things.

48

00:03:27,930  -->  00:03:31,110
It never runs the for loop if we don't execute the method.

49

00:03:31,290  -->  00:03:33,020
So that's why we need this line down there.

50

00:03:33,060  -->  00:03:41,780
So now let's save it and run it again as we can see and we get the output as expected.

51

00:03:42,040  -->  00:03:47,760
OK so now let's go back and actually fulfill the name of this method.

52

00:03:47,870  -->  00:03:53,820
This method says Run Program X times but really change is equal to 3.

53

00:03:53,910  -->  00:03:55,430
So it's running at three times.

54

00:03:55,430  -->  00:03:58,590
It's not running that X times right now.

55

00:03:58,590  -->  00:04:01,840
This method should be called non-program three times.

56

00:04:02,520  -->  00:04:04,230
But we're going to change that.

57

00:04:04,260  -->  00:04:10,500
We're going to pass in a parameter or an argument.

58

00:04:10,500  -->  00:04:18,090
So for example I'm going to pass in the argument to and what I want what I want this method to do is

59

00:04:18,090  -->  00:04:22,610
to get this to and run the program two times.

60

00:04:22,710  -->  00:04:28,240
And if I put 5 in here I want this method to get this 5 and run the program 5 times.

61

00:04:28,260  -->  00:04:30,380
But right now change is equal to 3.

62

00:04:30,450  -->  00:04:31,920
So that's never going to happen.

63

00:04:32,040  -->  00:04:39,230
Even if I put the 5 in there right now and I run the program then what comes out is just an error.

64

00:04:39,240  -->  00:04:45,600
So let's let's do that just for convenience and then that's what happens is as run program X times takes

65

00:04:45,690  -->  00:04:51,970
0 arguments but one was given it doesn't have any arguments but we gave it one.

66

00:04:52,070  -->  00:04:57,660
So we're going to find out exactly how we can make it accept an argument we've given as an argument

67

00:04:57,990  -->  00:05:03,180
the method is not accepting any and the way we make the method except argument is we put the argument

68

00:05:03,270  -->  00:05:06,130
name inside these brackets.

69

00:05:06,150  -->  00:05:13,140
So for example I'm going to cheat coalmines chances so not what's going to happen is this five is going

70

00:05:13,140  -->  00:05:16,690
to be placed inside a variable called chances.

71

00:05:17,040  -->  00:05:20,750
And then that variable chancet is going to be used up below.

72

00:05:20,940  -->  00:05:24,210
That means I no longer need this chances up there.

73

00:05:25,110  -->  00:05:25,600
OK.

74

00:05:25,650  -->  00:05:30,430
So instead of 5 Let's do it once and let's run that and run.

75

00:05:30,990  -->  00:05:35,250
And now we only get one attempt.

76

00:05:35,250  -->  00:05:37,400
So here's the challenge for you.

77

00:05:38,070  -->  00:05:43,550
Make it so the user can be assigned How many times they want to run the program.

78

00:05:44,160  -->  00:05:46,110
You've got the skills for those already.

79

00:05:46,110  -->  00:05:49,640
You just have to ask the user using the input method.

80

00:05:49,680  -->  00:05:53,660
Convert that to an integer and then pass it in as the parameter.

81

00:05:53,670  -->  00:05:58,020
So pause the video if you need to and try an attempt to that.

82

00:05:58,020  -->  00:05:58,410
Now

83

00:06:01,970  -->  00:06:04,190
none of that's attempted.

84

00:06:04,410  -->  00:06:07,280
Let's do it here together.

85

00:06:07,620  -->  00:06:15,690
The way I would do it is user attempts equals input and then input and then enter the number of attempts

86

00:06:18,030  -->  00:06:21,360
and then close the brackets and finally put it down.

87

00:06:21,650  -->  00:06:28,050
Here is how simple it is now that this method has the parameter and we can pass it the number of chances

88

00:06:28,050  -->  00:06:28,610
.

89

00:06:28,650  -->  00:06:35,010
The only change we have to make is in there create a variable that will hold the number of attempts

90

00:06:35,040  -->  00:06:38,610
we want and then pass it in as a parameter and that's it.

91

00:06:38,610  -->  00:06:40,230
So let's save that and run it.

92

00:06:40,410  -->  00:06:44,420
And now we can type in two and that's it.

93

00:06:44,430  -->  00:06:48,110
It says there's Adam 0 on this attempt.

94

00:06:49,650  -->  00:06:50,330
So that's it.

95

00:06:50,370  -->  00:06:54,590
That's how you can create your own methods and how you can pass parameters to them.

96

00:06:54,750  -->  00:07:01,470
And in the next video we're going to look at how we can not only pass things to the method but also

97

00:07:01,470  -->  00:07:03,470
get things back from a method.

98

00:07:03,540  -->  00:07:05,410
So let's look at that in the very next video.

99

00:07:05,490  -->  00:07:08,110
I'll see you there.
