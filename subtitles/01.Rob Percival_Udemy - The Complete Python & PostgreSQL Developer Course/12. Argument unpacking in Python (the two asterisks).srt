1

00:00:00,330  -->  00:00:05,910
Hi welcome back in this video we're looking at argument unpacking and that's the last thing we're going

2

00:00:05,910  -->  00:00:14,220
to look at in the sort of Jason loading and saving series argument I'm backing is just going to make

3

00:00:14,220  -->  00:00:16,430
your life slightly easier.

4

00:00:16,620  -->  00:00:19,140
And that's really all it's going to do.

5

00:00:20,670  -->  00:00:28,420
Let's talk about before argument on unpacking named parameters in Python.

6

00:00:28,500  -->  00:00:34,950
This is the way we've been looking at passing parameters is we've got the movie object here with the

7

00:00:34,950  -->  00:00:40,740
movie class where initialising and then the name genre and watched the first three parameters to the

8

00:00:40,740  -->  00:00:41,790
init method.

9

00:00:42,140  -->  00:00:48,810
And therefore Jason data name matches the name Jason did a genre it matches the genre.

10

00:00:48,990  -->  00:00:50,820
They'd have watched matches that watched.

11

00:00:50,940  -->  00:00:53,560
They are in order and that make sense.

12

00:00:53,580  -->  00:00:57,150
They should be but they don't have to be.

13

00:00:57,150  -->  00:00:59,160
They could be not in order.

14

00:00:59,430  -->  00:01:04,210
And then you'll see what how he's going to know Python which is which.

15

00:01:04,530  -->  00:01:15,350
And that's when named comes in we could say genre equals Jason data genre watched equals Giese and they

16

00:01:15,510  -->  00:01:22,750
watched name equals cheese and data watched so name rather.

17

00:01:23,610  -->  00:01:27,480
This is totally valid as well.

18

00:01:27,480  -->  00:01:39,840
And that is interesting because it means that with the name Python doesn't need an order it means that

19

00:01:40,590  -->  00:01:44,880
if we give names to everything they can be on order.

20

00:01:45,570  -->  00:01:50,120
Similarly we can also not give names to some.

21

00:01:51,210  -->  00:01:52,380
You can do this as well.

22

00:01:52,380  -->  00:01:55,320
The first one is ordered is the name.

23

00:01:55,500  -->  00:01:57,580
The second one has a name so it goes to that one.

24

00:01:57,600  -->  00:02:00,160
And the third one has a name for that one.

25

00:02:00,210  -->  00:02:07,680
So you cannot do is skip the name in a parameter after a name.

26

00:02:07,680  -->  00:02:14,370
So if you have a named parameter you cannot have a non name parameter after we have a named parameter

27

00:02:14,380  -->  00:02:14,580
.

28

00:02:14,760  -->  00:02:21,920
All parameters after it have to be named as well.

29

00:02:21,960  -->  00:02:27,630
So what I was getting at before is there is no longer a need for order.

30

00:02:27,630  -->  00:02:38,700
If we give names and this is where argument unpacking comes into play we have a dictionary of data and

31

00:02:38,700  -->  00:02:40,770
this data is isn't the format

32

00:02:43,770  -->  00:02:57,910
name is some name genre is some Anjana watched is true for example.

33

00:02:58,380  -->  00:03:05,820
And what I'm telling you is if we give these parameters their names in the method call we don't care

34

00:03:05,820  -->  00:03:11,080
about the order and that's important because as you know dictionaries do not have to be ordered.

35

00:03:11,130  -->  00:03:17,480
So potentially the genre could be first and then we could have the name.

36

00:03:17,890  -->  00:03:26,110
And so so what I'm going to do is with the simple command which is called argument and unpacking is

37

00:03:26,370  -->  00:03:31,300
unpack this dictionary into a set of named parameters.

38

00:03:31,800  -->  00:03:39,060
So what I'm going to do is instead of name equals name watch the quolls watched John Rickles genre.

39

00:03:39,650  -->  00:03:40,440
Sorry about that.

40

00:03:40,710  -->  00:03:49,380
I'm going to say asterisk asterisk Jason data and what that does is it says OK you want me to pass this

41

00:03:49,380  -->  00:03:51,810
dictionary as a set of named parameters.

42

00:03:51,840  -->  00:03:57,170
So what I'm going to do is say the first parameter a genre equals the content.

43

00:03:57,540  -->  00:03:59,950
Second parameter is name equals the Condon's.

44

00:03:59,970  -->  00:04:08,240
The third parameter is watched equal to the contents and that is the same as before.

45

00:04:08,340  -->  00:04:17,880
It works well that allows us to do is pass data that is a dictionary but allows us to pass it as a set

46

00:04:17,880  -->  00:04:25,050
of named parameters which is you can see makes your life easier because this less to type and that is

47

00:04:25,110  -->  00:04:26,480
good.

48

00:04:27,600  -->  00:04:28,020
OK.

49

00:04:28,080  -->  00:04:29,300
Thats everything for this video.

50

00:04:29,400  -->  00:04:32,370
I'm sure you are extremely disappointed.

51

00:04:32,370  -->  00:04:40,860
You probably felt this was going to be something really exciting but it is it is exciting because it

52

00:04:40,920  -->  00:04:48,080
now means that if we make a change to the properties of movie we only have to make the change in here

53

00:04:49,350  -->  00:04:58,950
and we no longer have to worry about this code down here which is great and it also means a few more

54

00:04:58,950  -->  00:05:03,780
things that we will get into as the course progresses.

55

00:05:04,410  -->  00:05:09,780
Which are all very exciting and it's really important this in python you will encounter these two asterisks

56

00:05:10,380  -->  00:05:12,800
countless times when you look in the Python code.

57

00:05:13,080  -->  00:05:17,270
So it's important that you know what it means because a lot of people don't.

58

00:05:17,400  -->  00:05:18,360
So that's what it means.

59

00:05:18,420  -->  00:05:22,910
It's a dictionary that you're passing as a set of named parameters.

60

00:05:22,950  -->  00:05:25,460
Now with that said let's move on to the next video.

61

00:05:25,590  -->  00:05:27,880
We're going to be creating the menu for our app.

62

00:05:27,990  -->  00:05:29,870
So I'll see you there.
