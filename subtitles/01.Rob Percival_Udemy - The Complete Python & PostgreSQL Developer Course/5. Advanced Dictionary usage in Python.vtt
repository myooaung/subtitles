WEBVTT
1

00:00:00.630  -->  00:00:01.980
Hi and welcome come back.

2

00:00:01.990  -->  00:00:05.800
This video we're looking at advanced dictionary usage.

3

00:00:06.120  -->  00:00:07.190
And if that sounds scary.

4

00:00:07.350  -->  00:00:09.000
Don't be scanned at all.

5

00:00:09.000  -->  00:00:16.020
The only thing that we're concerned about in this video is what happens when a dictionary is not enough

6

00:00:16.040  -->  00:00:16.770
.

7

00:00:17.550  -->  00:00:20.490
What happens when we're going to store more data.

8

00:00:20.490  -->  00:00:27.340
For example let's assume that this dictionary here represents and I'm going to use Shift f six different

9

00:00:27.340  -->  00:00:30.730
functions in ASCII to represent each student.

10

00:00:30.750  -->  00:00:38.730
So let's assume that and then I'm going to just make sure that this is indented properly that make sure

11

00:00:38.730  -->  00:00:41.150
that everything is on the same line.

12

00:00:41.490  -->  00:00:48.480
So let's assume this dictionary represents a student and normally students do not have a single mark

13

00:00:48.570  -->  00:00:49.760
as OJT with them.

14

00:00:49.860  -->  00:00:55.890
They might have 10 different marks that they've achieved in a different course works on exams and things

15

00:00:55.890  -->  00:00:57.460
like that.

16

00:00:57.540  -->  00:01:02.270
So naturally a single value isn't very good.

17

00:01:02.700  -->  00:01:08.130
And then you might be tempted to say OK if a single value is not good then let's do this.

18

00:01:08.190  -->  00:01:16.490
Martu and then Avie and then Mark 3 and then 50 and so on.

19

00:01:17.130  -->  00:01:20.040
However the problem with this approach.

20

00:01:20.610  -->  00:01:21.680
There are two problems.

21

00:01:21.690  -->  00:01:26.270
One is a slightly minor problem.

22

00:01:26.370  -->  00:01:30.140
I wouldn't say really minor but slightly less important than the other.

23

00:01:30.150  -->  00:01:35.480
The first problem is slightly less important problem is that this is quite messy.

24

00:01:35.640  -->  00:01:41.190
If you have 50 marks then you have to type a lot of things and a lot of keys and that makes your dictionary

25

00:01:41.190  -->  00:01:42.000
really big.

26

00:01:42.270  -->  00:01:44.130
So that's not very good.

27

00:01:44.130  -->  00:01:49.290
The other issue is how do you calculate an average.

28

00:01:50.070  -->  00:01:59.070
If you have an unknown number of keys and each one with a number but some of them with a name for example

29

00:01:59.080  -->  00:01:59.640
.

30

00:01:59.970  -->  00:02:02.160
And the answer is really difficult.

31

00:02:02.160  -->  00:02:04.720
You don't know what your keys are called.

32

00:02:04.770  -->  00:02:08.160
They might be called Mark Mark to mark three but you don't know where it ends.

33

00:02:08.400  -->  00:02:10.040
So this is not the best approach.

34

00:02:10.170  -->  00:02:11.720
Let's not do that.

35

00:02:12.510  -->  00:02:18.210
And the solution is to use the list as we've seen before.

36

00:02:18.270  -->  00:02:27.550
Take a wild guess as to how we could make sure that this student has not only one mark associated with

37

00:02:27.550  -->  00:02:30.520
them but rather a list of marks.

38

00:02:30.600  -->  00:02:33.960
For example five different marks.

39

00:02:34.080  -->  00:02:40.530
Suppose the video and try that see if you can make it work and if you're using pi charm if it's going

40

00:02:40.530  -->  00:02:45.560
to fail it will give you a red line under it saying this is not good.

41

00:02:45.690  -->  00:02:51.780
So give it up give it a quick pause and try to make sure that this student has five marks associated

42

00:02:51.780  -->  00:02:58.210
with them all inside the same key.

43

00:02:58.260  -->  00:03:06.240
Now that we've got that the solution to the problem is to just do what would be logical and substitute

44

00:03:06.300  -->  00:03:11.620
the 70 for a list that we've seen before.

45

00:03:14.400  -->  00:03:19.790
And there we go asked you to now has five marks associated with him.

46

00:03:20.240  -->  00:03:27.420
The small problem is now what if we want to access the first one as opposed to all of them because if

47

00:03:27.420  -->  00:03:31.660
we do print shoot and mark what we get is what you'd expect.

48

00:03:31.680  -->  00:03:33.040
We get the list back.

49

00:03:33.360  -->  00:03:35.670
So how would we access the 70.

50

00:03:35.670  -->  00:03:39.380
How would we print 70 out.

51

00:03:39.660  -->  00:03:48.810
I would recommend giving that a goat seeing if you can print the 70 out reasonably easily.

52

00:03:48.840  -->  00:03:53.430
An approach might be to create a variable to hold the list and then access that specific element of

53

00:03:53.430  -->  00:03:55.190
the list.

54

00:03:55.320  -->  00:03:59.950
So try that number we've done that.

55

00:03:59.970  -->  00:04:05.900
Let's go over the two approaches that you might want to take for this the first approach.

56

00:04:05.970  -->  00:04:06.890
Very simple.

57

00:04:06.990  -->  00:04:11.060
We know when we print the student Mark out we get a list.

58

00:04:11.380  -->  00:04:21.180
Therefore student and mark inside it this thing is this set of canisters represents or is replaced by

59

00:04:21.480  -->  00:04:22.860
this list here.

60

00:04:22.940  -->  00:04:24.090
That's what that means.

61

00:04:24.120  -->  00:04:27.960
That's what we're getting at when we get the mark of this student.

62

00:04:27.980  -->  00:04:36.480
We get that list therefore if we wanted to access the first element we would just put 0 and we were

63

00:04:36.510  -->  00:04:40.180
accessing the zeroth element of the list.

64

00:04:40.230  -->  00:04:45.660
And the fact that there are multiple square brackets one after the other is not a problem.

65

00:04:45.720  -->  00:04:47.420
This is the list.

66

00:04:47.880  -->  00:04:49.900
And then when accessing element number 0.

67

00:04:49.950  -->  00:04:55.520
So by the time the we're accessing element number 0 this is no longer student Mark.

68

00:04:55.680  -->  00:04:58.420
This is now the list here.

69

00:04:59.160  -->  00:05:08.550
And these may be clearer if instead of that we say Marks equals shouldn't mark and then in here we can

70

00:05:08.550  -->  00:05:13.500
print marks to zero.

71

00:05:13.560  -->  00:05:16.800
Now there's no square brackets one after another.

72

00:05:16.850  -->  00:05:25.200
However you have to create a another variable which is just a bit slower just slightly less optimal

73

00:05:25.590  -->  00:05:26.300
if you wish.

74

00:05:26.310  -->  00:05:28.730
So maybe doing that is the best way.

75

00:05:29.130  -->  00:05:31.800
And that is how you would access the first element

76

00:05:35.970  -->  00:05:41.270
not only lists but we can also put dictionaries in.

77

00:05:41.580  -->  00:05:48.510
So a key may be associated with another dictionary and I'm going to add here another key which is going

78

00:05:48.510  -->  00:05:52.170
to be exams and that is going to be a dictionary.

79

00:05:52.170  -->  00:05:59.550
And now we've got final and he got 70 in the final midterm.

80

00:05:59.590  -->  00:06:01.730
That was the 50 and so on.

81

00:06:01.770  -->  00:06:02.610
If you want.

82

00:06:02.700  -->  00:06:05.520
So we've got the marks here which should now be marks.

83

00:06:05.520  -->  00:06:11.820
By the way because this is a list but you can also put more detail in if you want and you can do that

84

00:06:11.830  -->  00:06:17.190
you can associate a dictionary to one of the keys and then you can do that again and so on and so on

85

00:06:17.190  -->  00:06:18.290
.

86

00:06:18.300  -->  00:06:21.990
So the question now is how would you get this 70.

87

00:06:21.990  -->  00:06:30.410
How would you get the final exam mark out through here so give that a go.

88

00:06:30.420  -->  00:06:31.630
I'm sure you can do it.

89

00:06:31.650  -->  00:06:33.010
It's essentially the same thing.

90

00:06:33.030  -->  00:06:39.590
But remember that instead of a list we are now accessing a dictionary that is inside a key.

91

00:06:39.600  -->  00:06:40.110
Go for that.

92

00:06:40.110  -->  00:06:45.870
Post the video real quick and do that and then we'll come back to it.

93

00:06:46.320  -->  00:06:51.450
Now that we've got that the solution as I'm sure you got it is just to do exactly the same as with the

94

00:06:51.460  -->  00:07:00.060
list but instead of the index put the key that we want to access and remember to substitute marks for

95

00:07:00.120  -->  00:07:07.560
exams and then we can do that and we get 70 out which is what we wanted.

96

00:07:07.590  -->  00:07:13.890
This is advanced usage of dictionaries because it involves putting lists inside dictionaries and dictionaries

97

00:07:13.890  -->  00:07:15.540
inside dictionaries and accessing them.

98

00:07:15.660  -->  00:07:18.370
And notice how you can do this more and more.

99

00:07:18.420  -->  00:07:23.220
You can have many nested ones but as you may guess that gets quite messy and quite difficult to read

100

00:07:23.220  -->  00:07:23.430
.

101

00:07:23.520  -->  00:07:31.350
So it's never recommended that you have more than two if you have three or four or five that's getting

102

00:07:31.350  -->  00:07:37.170
quite cumbersome quite difficult to process for you as a person not for the computer.

103

00:07:37.170  -->  00:07:41.790
The computer can deal with it for you as a person it becomes difficult to read and then for you to try

104

00:07:41.790  -->  00:07:44.270
to avoid that whenever possible.

105

00:07:44.850  -->  00:07:45.210
OK.

106

00:07:45.270  -->  00:07:46.380
So that's it for this video.

107

00:07:46.410  -->  00:07:52.160
We've looked at advanced dictionary usage and we're going to move on now onto the next one.

108

00:07:52.240  -->  00:07:53.190
See you there.
