1

00:00:00,180  -->  00:00:07,120
One will come back in this video we're looking at getting the access token from the user.

2

00:00:07,140  -->  00:00:13,180
Now we've got the request token and we've gotten the oil to verify it which is the pin code.

3

00:00:13,180  -->  00:00:16,200
This very file would be sent to us by Twitter.

4

00:00:16,200  -->  00:00:22,320
If we had a web application instead of a control application in console applications we need the user

5

00:00:22,320  -->  00:00:23,510
to give us the pin code.

6

00:00:23,820  -->  00:00:31,050
And in web applications Twitter can send does that so the user doesn't have to enter it himself.

7

00:00:31,170  -->  00:00:36,480
The next thing we're going to do is we're going to create a token and the Torgan is going to be just

8

00:00:36,600  -->  00:00:39,810
the request token but made into an object.

9

00:00:39,810  -->  00:00:46,360
So it's not really anything complicated it's just an oil to sort of object knobs that comes from the

10

00:00:46,360  -->  00:00:47,360
library.

11

00:00:47,400  -->  00:00:53,640
So let's do that let's say that the token is going to be wealth to token.

12

00:00:53,910  -->  00:01:02,160
And what we put inside that token is the request tokens of our token and the request tokens or token

13

00:01:02,280  -->  00:01:03,360
secret.

14

00:01:04,320  -->  00:01:09,060
And that just essentially binds these two together and puts them inside one object which is called a

15

00:01:09,060  -->  00:01:12,710
token so that we can do a couple of operations with that.

16

00:01:12,900  -->  00:01:18,210
The first operation we want to do now that we've got this request to can put into an object if we have

17

00:01:18,210  -->  00:01:20,400
the most different strings it's a bit more difficult to deal with.

18

00:01:20,400  -->  00:01:22,000
So that's why this object exists.

19

00:01:22,260  -->  00:01:31,800
Now we can also say token don't set very far and we can sense the verifier to be very high.

20

00:01:31,890  -->  00:01:33,690
So nothing complicated is going here.

21

00:01:33,690  -->  00:01:36,390
Don't overthink this at all.

22

00:01:36,390  -->  00:01:46,190
Just remember that a token object is used to combine the token and the author can see it and to either

23

00:01:46,200  -->  00:01:49,580
verify it to it.

24

00:01:49,650  -->  00:01:54,380
OK if here I'd just print tie and I set a breakpoint there.

25

00:01:54,420  -->  00:01:57,400
Let's look at what this token really looks like.

26

00:01:58,240  -->  00:01:58,990
OK.

27

00:01:59,490  -->  00:02:03,860
So I've run the debugger and now it's telling me to go to this site and put in the pin code.

28

00:02:03,870  -->  00:02:11,460
I'm just going to go there authorize the application and get my PIN code and then go back to my project

29

00:02:11,460  -->  00:02:12,930
and put it in here.

30

00:02:13,600  -->  00:02:18,600
Another the debugger stops and we can look at what the token is.

31

00:02:19,700  -->  00:02:24,910
OK the token object is just an object that has a few properties.

32

00:02:24,910  -->  00:02:32,910
It's essentially like a data store and the properties it has is the key which is the token that we put

33

00:02:32,910  -->  00:02:41,460
in a secret which is that Otakon secret and the verifier and the all out to Liberty now can use this

34

00:02:41,460  -->  00:02:45,130
token to perform requests with it.

35

00:02:45,180  -->  00:02:53,160
So it's just a way of the oil to liberty creates this token to simplify its inner workings of really

36

00:02:54,190  -->  00:02:55,500
delusional stability ball.

37

00:02:55,710  -->  00:03:01,800
So this talken just think of it as it stores the off tokened the off book and secrets and the verifier

38

00:03:01,820  -->  00:03:02,390
.

39

00:03:02,400  -->  00:03:11,370
And now we can create a client which is wealth to dot client and like we did above here we created our

40

00:03:11,370  -->  00:03:19,020
client parting from the consumer which was our application the consumer and the consumer secret are

41

00:03:19,020  -->  00:03:22,230
used to identify our application in to them.

42

00:03:22,230  -->  00:03:29,340
Now we're going to use the consumer again but we're also going to use the talken that's going to do

43

00:03:29,340  -->  00:03:33,030
is it's going to set this client a bit different status.

44

00:03:33,030  -->  00:03:38,070
It's no longer a completely unknown client to Twitter.

45

00:03:38,310  -->  00:03:44,030
Now Twitter knows that it has a request token And also we verify it with it.

46

00:03:44,070  -->  00:03:53,340
So now we can use this client to get the access token and the way we do that is just as we did above

47

00:03:53,370  -->  00:03:55,470
here to get the request token.

48

00:03:55,830  -->  00:04:00,890
We're going to decline that request but it's going to be accessed.

49

00:04:00,900  -->  00:04:03,040
Can you tell instead of request can you

50

00:04:05,570  -->  00:04:07,230
keep.

51

00:04:07,680  -->  00:04:13,590
And now just like we did here where we parsed the query string and they converted it to a dictionary

52

00:04:13,920  -->  00:04:21,840
we're going to do the exact same but for the access to can notice this content.

53

00:04:21,840  -->  00:04:28,180
Now is this variable here because it got overwritten as we defined the value again.

54

00:04:28,440  -->  00:04:35,030
So the content variable gets defined up here and it gets the content of this request the request and

55

00:04:35,040  -->  00:04:41,070
your request and then we parse it and we said it to be the request token and then down here we overwrite

56

00:04:41,070  -->  00:04:42,320
it.

57

00:04:42,330  -->  00:04:48,750
So now this contains the access token data and we then parse it and put it inside this other variable

58

00:04:48,750  -->  00:04:51,470
called access token.

59

00:04:51,660  -->  00:04:56,710
So let's print that out and see what it looks like when I press play.

60

00:04:56,970  -->  00:05:02,720
Go into the site of the app.

61

00:05:03,090  -->  00:05:07,320
Copy that pasted in there.

62

00:05:09,580  -->  00:05:10,450
And there we go.

63

00:05:10,470  -->  00:05:16,950
Now we've got this data back from Twitter and this is the access token that we've printed out and in

64

00:05:16,950  -->  00:05:21,960
here now it has more information such as the screen name.

65

00:05:21,990  -->  00:05:30,650
That is my Twitter username for example and it has also a bunch of token and or token secret token orthogonal

66

00:05:30,680  -->  00:05:37,490
to configure it and that is what we now can use to do requests to Twitter.

67

00:05:38,280  -->  00:05:44,940
So just like we did here we created a token for the reader for the access token for that solely for

68

00:05:44,940  -->  00:05:45,840
the request.

69

00:05:46,050  -->  00:05:50,780
We are not going to do the same but for the access token instead.

70

00:05:51,610  -->  00:05:54,950
OK but I wouldn't want to confuse you any longer.

71

00:05:54,990  -->  00:05:57,420
So let's do it in the very next video.

72

00:05:57,570  -->  00:06:02,630
What we've done here created a request to can and set a verifier.

73

00:06:02,670  -->  00:06:07,980
We're going to do the same but we no longer need to verify it because the access token does not need

74

00:06:07,980  -->  00:06:10,740
a pin code which is going to be that.

75

00:06:10,950  -->  00:06:17,190
But with the access logon that but with the token that we create for the access token and then we can

76

00:06:17,190  -->  00:06:21,390
set up a form in request I see in the very next video and we're going to be just quickly looking into

77

00:06:21,390  -->  00:06:22,530
that and see C-Leg
