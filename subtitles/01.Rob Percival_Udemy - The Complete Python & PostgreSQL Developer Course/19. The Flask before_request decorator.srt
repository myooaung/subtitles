1

00:00:01,140  -->  00:00:06,620
Hi welcome back in this video we're going to look at flasks before request decorator.

2

00:00:06,960  -->  00:00:16,260
Remember a decorator is just this at thing that appears before the method the flasks before request

3

00:00:16,320  -->  00:00:25,890
decorator allows us to run something before each request remember a request is just when the user arrives

4

00:00:25,890  -->  00:00:27,710
at any one of our pages.

5

00:00:27,750  -->  00:00:35,880
That is a request the user made a request to our server and we are responding with some sort of template

6

00:00:36,570  -->  00:00:46,590
or a redirection or some data or something else so we can execute some code before each request.

7

00:00:46,640  -->  00:00:52,050
And now you're wondering well why would we ever want to do that execute the same code before each request

8

00:00:52,050  -->  00:00:52,080
.

9

00:00:52,080  -->  00:00:59,670
All of these methods are completely different and you are right now whether there is a use case for

10

00:00:59,940  -->  00:01:04,420
one method to be around before each request.

11

00:01:04,530  -->  00:01:06,720
Let's go down here to our profile.

12

00:01:07,050  -->  00:01:12,340
And as you can see when we rendered the template which is the profile the hatred e-mail template we

13

00:01:12,370  -->  00:01:18,780
are passing in the screen name and that is stored in the session.

14

00:01:18,780  -->  00:01:27,780
Now what we wanted not the screen name but the entire user object so the user had other details that

15

00:01:27,780  -->  00:01:31,340
we wanted to show in that profile.

16

00:01:31,500  -->  00:01:38,490
For example their email address or their name or something like that an option would be to store all

17

00:01:38,490  -->  00:01:39,890
of those things in the session.

18

00:01:39,900  -->  00:01:42,020
That's something we could do.

19

00:01:43,140  -->  00:01:49,680
But we are able of searching the database by screen name to retrieve a user object.

20

00:01:49,860  -->  00:01:57,310
So why not pass in a user so passing user equals.

21

00:01:58,470  -->  00:02:00,060
And here we would pass in a user

22

00:02:03,480  -->  00:02:06,390
but we don't have a user to pass it.

23

00:02:06,390  -->  00:02:09,150
The only thing we've got is the sessions screen name.

24

00:02:09,150  -->  00:02:15,270
So easy fix user don't load from the screen name session screen name.

25

00:02:15,630  -->  00:02:16,700
Perfect.

26

00:02:16,770  -->  00:02:18,950
Easy enough right.

27

00:02:19,680  -->  00:02:25,500
Well yes but what if then we needed to get the user somewhere else.

28

00:02:25,500  -->  00:02:32,220
For example when we're searching for tweets we're going to need the user an object as well.

29

00:02:32,220  -->  00:02:37,580
Wouldn't it be nice if we could have access to the user object in every method.

30

00:02:38,380  -->  00:02:40,060
The answer is yes yes it would.

31

00:02:40,440  -->  00:02:43,230
So let's do it.

32

00:02:43,410  -->  00:02:48,030
I'm going to write a wee bit of code first and then show you exactly what I'm doing so that you can

33

00:02:48,030  -->  00:02:52,260
understand where I'm going to create the top of the file it doesn't have to be at the top but I'm putting

34

00:02:52,270  -->  00:02:55,620
out the tab anyway and not before request

35

00:03:00,270  -->  00:03:01,900
and I'm calling the method load.

36

00:03:01,890  -->  00:03:05,210
Underscore user you can call it whatever you want.

37

00:03:05,280  -->  00:03:09,260
Any name is fine but make sure it kind of describes what it we're doing or what we're doing when it

38

00:03:09,290  -->  00:03:23,520
load and use what we're going to say is if screen name in session and what that does is say is there

39

00:03:23,610  -->  00:03:27,760
a key called screen name in the session variable.

40

00:03:28,350  -->  00:03:33,030
And if there is what we're going to do is we're going to load up the user.

41

00:03:33,030  -->  00:03:40,540
So we're going to say gee that user equals user data load the wrote on the screen name session screen

42

00:03:40,540  -->  00:03:43,530
name and we have to import G.

43

00:03:43,590  -->  00:03:46,110
So let's import G from flask.

44

00:03:48,320  -->  00:03:50,850
Why is this interesting.

45

00:03:50,850  -->  00:03:57,180
The only thing we're doing is we're creating some sort of jihad user variable and we are putting in

46

00:03:57,180  -->  00:03:59,180
it the user object.

47

00:04:00,180  -->  00:04:05,000
Yes but now the variable is special.

48

00:04:05,040  -->  00:04:08,720
It does not die off when we exit this method.

49

00:04:09,120  -->  00:04:13,500
It is globally available during the entire request.

50

00:04:13,860  -->  00:04:21,450
So this thing here happens before the request we load up the user and we put it inside the variable

51

00:04:21,750  -->  00:04:23,780
we call it user G dot.

52

00:04:24,750  -->  00:04:25,880
And we load the user object.

53

00:04:25,890  -->  00:04:32,560
And now this G variable is available throughout the entire request.

54

00:04:32,630  -->  00:04:34,140
So if we go to the profile page.

55

00:04:34,280  -->  00:04:37,020
So we go here to the profile page.

56

00:04:37,290  -->  00:04:42,190
The first thing we do is we execute this before request and we create geed out user.

57

00:04:42,280  -->  00:04:46,710
And now I said that this variable is available through the entire request which means it is available

58

00:04:46,710  -->  00:04:47,570
in the profile page.

59

00:04:47,580  -->  00:04:48,860
That's what we requested.

60

00:04:49,140  -->  00:04:53,080
So the other method happens first and then we go to this one and we have g.

61

00:04:53,130  -->  00:05:00,740
So instead of user equals all this we can just say usually equals geed or to user.

62

00:05:01,590  -->  00:05:08,730
And this is especially interesting because as long as screen name does exist in the session we're always

63

00:05:08,730  -->  00:05:15,180
going to have access to the user object and that is interesting because the user object not only has

64

00:05:15,180  -->  00:05:21,900
properties although it does not only does it have a screen name on stuff it also has a method which

65

00:05:21,900  -->  00:05:26,540
allows us to make Twitter requests and we're going to be using that shortly.

66

00:05:27,300  -->  00:05:28,740
Let's go back into the app.

67

00:05:29,100  -->  00:05:33,560
And now here we've got the profile which now has a variable user.

68

00:05:33,570  -->  00:05:40,590
So let's go into the profile page and instead of screen name we can do user dot screen name so we can

69

00:05:40,590  -->  00:05:46,520
access the screen name property of the human object just as if this were Python only it's Jinja too

70

00:05:46,540  -->  00:05:47,130
.

71

00:05:47,760  -->  00:05:50,650
So that's also quite interesting.

72

00:05:50,790  -->  00:05:52,380
And now we are able to do that.

73

00:05:52,410  -->  00:06:00,930
So in every method as long as screen name is sent we are going to be able to have the dot user property

74

00:06:00,930  -->  00:06:02,220
.

75

00:06:02,220  -->  00:06:08,490
This also does mean that now that we have a user object we can do Twitter requests but it also means

76

00:06:08,490  -->  00:06:16,650
that whenever the browser with a cookie comes in then they are going to be logged in and we're going

77

00:06:16,650  -->  00:06:18,620
to have access to the user property.

78

00:06:18,690  -->  00:06:24,060
So it makes sense to also have a log out endpoint so that users can clear this action and make sure

79

00:06:24,060  -->  00:06:30,030
that nobody else has access to their not only their screen name but also the ability to perform searches

80

00:06:30,180  -->  00:06:31,020
on their behalf.

81

00:06:31,020  -->  00:06:35,730
We're going to be doing that in the next video but now we're going to be implementing the logout button

82

00:06:35,730  -->  00:06:37,560
.

83

00:06:37,770  -->  00:06:45,390
So below the logon let's just create another route app route log out

84

00:06:48,570  -->  00:06:54,120
and there's a logo building has to do is to section not clear.

85

00:06:54,120  -->  00:06:58,940
And then it has to redirect the user to the home page for example return.

86

00:06:59,340  -->  00:07:04,450
Redirect your L4 homepage.

87

00:07:05,460  -->  00:07:11,160
And you know that that's redirects the user to a page Yura for calculates the Eurail that we're reacting

88

00:07:11,160  -->  00:07:16,610
to by getting the associated endpoint to the method home page.

89

00:07:17,640  -->  00:07:18,490
OK.

90

00:07:18,630  -->  00:07:24,180
I'm also going to use this time to go into the home page home not HD M-L and below Hello world.

91

00:07:24,420  -->  00:07:28,290
I'm going to put a link to the logon page.

92

00:07:28,290  -->  00:07:35,010
I'm tired of them constantly going in and having to modify the the address bar so I'm going to put in

93

00:07:35,010  -->  00:07:43,590
a link a link in a page DML is an A which stands for and Kuhr and it actually anchors a page to another

94

00:07:43,590  -->  00:07:47,330
page it links it and hates ref.

95

00:07:47,520  -->  00:07:50,280
Is that the address that we are linking to.

96

00:07:50,570  -->  00:07:58,270
And in here you guess that we can once again do an open double and calibres plausible calibrates and

97

00:07:58,290  -->  00:08:02,030
putting your l4.

98

00:08:02,130  -->  00:08:02,820
And here we go.

99

00:08:02,820  -->  00:08:10,130
Twitter logging Ramba that has to be the method name of this method.

100

00:08:11,070  -->  00:08:17,190
Let's go back in here and close the anchor and you can here put in the text that is going to be linked

101

00:08:17,190  -->  00:08:17,390
.

102

00:08:17,400  -->  00:08:20,190
So log in with Twitter.

103

00:08:20,730  -->  00:08:25,550
OK let's restart our app and go over to it.

104

00:08:25,590  -->  00:08:27,960
I'm going to open it up.

105

00:08:27,960  -->  00:08:29,310
And now we get this button here.

106

00:08:29,310  -->  00:08:30,380
Log in to it.

107

00:08:30,760  -->  00:08:36,420
Now we can go there and then that initialises the log in we no longer have to modify the address bar

108

00:08:38,500  -->  00:08:40,620
.

109

00:08:41,100  -->  00:08:42,850
So everything still works.

110

00:08:42,900  -->  00:08:43,770
So let's keep going.

111

00:08:43,770  -->  00:08:44,960
And I see you in the very next video
