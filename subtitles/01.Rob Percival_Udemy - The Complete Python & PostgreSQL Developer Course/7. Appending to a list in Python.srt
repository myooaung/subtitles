1

00:00:00,210  -->  00:00:07,860
Hi and welcome back in this video we're going to look at a pending to a list in the last video we were

2

00:00:07,860  -->  00:00:14,670
able to create a student with this Creech student method that encapsulates and contains that functionality

3

00:00:15,300  -->  00:00:21,480
that allows us to ask the user for the student's name and then it returns a dictionary that represents

4

00:00:21,810  -->  00:00:27,200
the properties of a student the name and the marks and it could have more if we wanted.

5

00:00:27,450  -->  00:00:29,770
And also remember we no longer need this thing up here.

6

00:00:29,910  -->  00:00:32,740
So I'm just going to delete that to clean it up.

7

00:00:32,760  -->  00:00:41,820
Now we in this with you I wanted to make sure that we could make this more useful by adding marks to

8

00:00:41,820  -->  00:00:43,500
each student.

9

00:00:44,760  -->  00:00:54,990
So what we have to do is somehow get this list and then modify it and add another element.

10

00:00:56,850  -->  00:01:04,080
Let's let's work from the beginning let's forget about the student itself first and just worry about

11

00:01:04,590  -->  00:01:06,930
how do we add an element to the list.

12

00:01:06,930  -->  00:01:08,960
How do we add a number to a list.

13

00:01:09,100  -->  00:01:11,440
Because I don't think we've done that before.

14

00:01:12,750  -->  00:01:17,630
So let's create a list which I'm going to call my list but you can call it whatever you want and it's

15

00:01:17,640  -->  00:01:19,710
going to be an empty list.

16

00:01:20,360  -->  00:01:27,810
And at the end of the last video I give you a subtle hint as to what the method to append to a list

17

00:01:27,870  -->  00:01:32,120
might be called that if I just gave you another hint right there.

18

00:01:33,140  -->  00:01:34,020
Yes.

19

00:01:34,590  -->  00:01:38,770
So it'll be my honest goal list and then full stop.

20

00:01:38,850  -->  00:01:44,190
And as the first one never mind I was going to ask you if you could guess but it is the first one.

21

00:01:44,310  -->  00:01:48,500
So you can just do my list not append five.

22

00:01:48,510  -->  00:01:54,420
So my question to you is since I didn't ask you that what is going to happen when I do this when I print

23

00:01:55,020  -->  00:01:57,300
my list append 5.

24

00:01:57,510  -->  00:01:59,160
What do you think will come out.

25

00:01:59,160  -->  00:02:00,970
What do you think is going to get printed out.

26

00:02:01,350  -->  00:02:07,750
Is it going to be a list with the number five.

27

00:02:08,790  -->  00:02:11,060
And what comes out is none.

28

00:02:11,580  -->  00:02:13,280
And well that's surprising.

29

00:02:13,860  -->  00:02:24,550
And the reason why it comes out as none is because these Penda method that we call on that list we're

30

00:02:24,570  -->  00:02:30,980
saying my list we're going to call this apan method that you own.

31

00:02:31,020  -->  00:02:32,440
That's where the full stop means.

32

00:02:32,430  -->  00:02:35,340
This list Ohmes and contains this app hand method.

33

00:02:35,350  -->  00:02:38,870
So we're calling the append method of that specific list.

34

00:02:38,910  -->  00:02:46,560
This specific empty list and what it does is it puts the five in the list as you would assume that it

35

00:02:46,560  -->  00:02:47,370
would do.

36

00:02:47,880  -->  00:02:52,280
But it doesn't return anything doesn't give us back the list.

37

00:02:52,290  -->  00:02:55,510
It simply modifies the list in place.

38

00:02:55,890  -->  00:03:02,520
And now my list should contain the number five.

39

00:03:02,580  -->  00:03:03,820
I'm going to run this again.

40

00:03:04,230  -->  00:03:07,270
And indeed you can see that the number five is now in it.

41

00:03:07,290  -->  00:03:13,950
So even though the append method didn't return anything it did modify the list and that makes sense

42

00:03:13,980  -->  00:03:21,180
because appending things does not involve returning what's been appended or the thing that has been

43

00:03:21,180  -->  00:03:27,220
modified or pending is just appending it isn't giving you anything back.

44

00:03:27,420  -->  00:03:29,150
So I deleted too many things.

45

00:03:29,310  -->  00:03:31,930
So I just delete the print method.

46

00:03:32,770  -->  00:03:37,380
And now we can append something to my list.

47

00:03:37,860  -->  00:03:43,440
And notice how when we do this Pinetree was actually quite smart and it tells us this list creation

48

00:03:43,530  -->  00:03:45,760
could be rewritten as a list literal.

49

00:03:45,860  -->  00:03:52,770
And what that means is it's asking is What are you doing that you are clearly not very smart because

50

00:03:52,770  -->  00:04:00,770
you could instead just do that and it's right we could do that but that's not the point.

51

00:04:01,290  -->  00:04:05,230
That's how we can append elements to a list.

52

00:04:05,340  -->  00:04:09,690
And this is going to add to the five as a new element into that list.

53

00:04:09,990  -->  00:04:14,460
And that is exactly what we want to do with the student data.

54

00:04:14,460  -->  00:04:19,070
We want to get that list and then append to it.

55

00:04:19,440  -->  00:04:26,630
What I would ask you to attempt is to create another method that will do that.

56

00:04:26,690  -->  00:04:37,830
Now that's going to be a bit more difficult because the method that it being a separate method it won't

57

00:04:37,830  -->  00:04:39,990
know about the student that you've created here.

58

00:04:40,140  -->  00:04:51,330
But nevertheless if I just ask you to try and create a method that will allow you to append to the marks

59

00:04:51,330  -->  00:04:57,380
list of a student see what you can come up with just to have a think about it and then we'll move onto

60

00:04:57,420  -->  00:04:58,500
the next video.

61

00:04:58,670  -->  00:05:00,830
Well we're going to be implementing just that.

62

00:05:00,870  -->  00:05:06,900
So give it a give it a bit of thought try it and then we'll move on to the next video and all your doubts

63

00:05:07,170  -->  00:05:08,820
will be solved there.

64

00:05:08,900  -->  00:05:09,330
So you were
