WEBVTT
1

00:00:00.150  -->  00:00:05.880
Hi and welcome back in this video we're talking about other data types that are available for you in

2

00:00:05.880  -->  00:00:08.520
Pasqua sequel.

3

00:00:08.580  -->  00:00:13.610
There's plenty of other data types aside from numbers and strings and dates.

4

00:00:13.770  -->  00:00:19.980
Although these are the most commonly used for example that you know you can store images in Pasqua sequel

5

00:00:19.990  -->  00:00:20.690
.

6

00:00:21.340  -->  00:00:27.300
There is a special type of data that you can use in Pasqua sequel that allows you to store images up

7

00:00:27.300  -->  00:00:29.310
to 1 gigabyte in size.

8

00:00:29.310  -->  00:00:37.140
Naturally this is also limited by the computer which is hosting the database the field or the data type

9

00:00:37.230  -->  00:00:44.700
that is used for storing images can also be used to store other binary files such as anything you can

10

00:00:44.700  -->  00:00:53.910
think of really the the data type is called byte A and is and is used in Patras sequel to store bytes

11

00:00:54.120  -->  00:00:58.870
which can be anything you want in order to store images.

12

00:00:58.920  -->  00:01:07.860
Remember how images are made when an image is not just or magical entity as you know but rather it is

13

00:01:07.860  -->  00:01:15.900
composed of pixels and each of the pixels each with the small dots that make up the image has a color

14

00:01:16.470  -->  00:01:20.900
and some more information associated with it.

15

00:01:21.090  -->  00:01:26.880
If we get that information for each of the pixels we get the color and the transparency and other things

16

00:01:27.810  -->  00:01:30.410
then we can just get them all.

17

00:01:30.420  -->  00:01:37.830
Each of the individual pixels and we can put all that information into a byte a field and that's quite

18

00:01:37.830  -->  00:01:38.740
a long field.

19

00:01:38.760  -->  00:01:45.390
But all the characters that compose an image say of a couple of megapixels are actually only a few kilobytes

20

00:01:45.780  -->  00:01:50.980
or depending on how large your image is it can be up to a few megabytes.

21

00:01:51.330  -->  00:01:55.810
But as I said they feel supported up to one gigabyte in size them.

22

00:01:55.980  -->  00:01:59.300
So that's something you can do.

23

00:01:59.370  -->  00:02:06.270
Usually people recommend that you store images in the file system outside of the database and then your

24

00:02:06.270  -->  00:02:12.270
database can contain a path of where the image is stored.

25

00:02:12.270  -->  00:02:24.000
For example you could have your images in see images my image don't jpeg and your sequel database could

26

00:02:24.000  -->  00:02:31.440
contain this and then your python program could go into that path and read the image and show it to

27

00:02:31.440  -->  00:02:32.240
the user.

28

00:02:32.250  -->  00:02:34.250
That's also another option.

29

00:02:34.290  -->  00:02:37.650
So those are just two ways that you might go about storing images.

30

00:02:37.800  -->  00:02:39.990
And we're going to get into that in the next few sections.

31

00:02:40.170  -->  00:02:42.010
So that's why I'm not going into too much detail.

32

00:02:42.030  -->  00:02:46.350
I just wanted you to know that this is possible using sequel.

33

00:02:46.350  -->  00:02:54.000
Another type of data that is quite useful is the you know the enumeration type of data and enim is just

34

00:02:54.000  -->  00:02:57.290
a string but it is more than that.

35

00:02:57.420  -->  00:03:06.560
It is a set of strings that can limit what type of diet type type of data you can put in to a row.

36

00:03:07.140  -->  00:03:13.980
For example they can be used to limit and the gender of customers or the possible color of items and

37

00:03:13.980  -->  00:03:14.970
so on.

38

00:03:15.990  -->  00:03:22.440
Let's quickly show you a sample ENM and how you might go about using it in your table.

39

00:03:22.470  -->  00:03:30.640
I'm going to create a type called mood and that is going to be as ENM.

40

00:03:30.990  -->  00:03:35.390
So what I'm doing here is I'm creating a new data type called Mood.

41

00:03:35.880  -->  00:03:45.600
But I can use it in my tables column definitions and inside brackets after them we can put in the options

42

00:03:46.470  -->  00:03:49.200
that are going to limit the values.

43

00:03:49.350  -->  00:03:52.920
So here we can put for example extremely unhappy

44

00:03:56.130  -->  00:03:57.720
unhappy.

45

00:03:57.740  -->  00:04:04.140
OK happy and extremely happy.

46

00:04:04.230  -->  00:04:10.200
What this is doing once again is creating a new data type that you can use in your and create table

47

00:04:10.210  -->  00:04:11.260
.

48

00:04:12.030  -->  00:04:19.560
And the only values of that that role will be able to contain is one of these five values.

49

00:04:20.910  -->  00:04:26.480
So that's quite useful when you want to limit the sort of input that can go in.

50

00:04:26.730  -->  00:04:35.000
So I'm going to create that type and then we can create a table called students because we know the

51

00:04:35.000  -->  00:04:42.270
moods vary and there's going to have a name which is going to be character varying to 5:5 and he's going

52

00:04:42.270  -->  00:04:48.870
to have a current mood which is going to be of type mood which is the type that we just created that

53

00:04:48.930  -->  00:04:50.490
in him.

54

00:04:51.650  -->  00:04:52.920
OK.

55

00:04:53.640  -->  00:04:55.040
And as you can see that works.

56

00:04:55.080  -->  00:04:59.640
It says ok mood is a valid data type I can accept that because we've just created it.

57

00:05:00.060  -->  00:05:07.550
So now our table exists and if we select start from students we can see that the name is a character

58

00:05:07.560  -->  00:05:08.100
varing.

59

00:05:08.190  -->  00:05:12.620
And the current mood is of type mood which is what we've just created.

60

00:05:13.260  -->  00:05:22.530
And then we can insert values insert into students values and I'm going to put in a name just moey and

61

00:05:22.530  -->  00:05:27.210
then I'm going to on purpose make a mistake there.

62

00:05:27.510  -->  00:05:29.090
What do you think is going to happen.

63

00:05:33.390  -->  00:05:41.190
And you probably guessed that an arrow should pop up and it does invalid input value for in a mood happy

64

00:05:41.190  -->  00:05:42.060
.

65

00:05:42.150  -->  00:05:45.910
It just tells you that that's not something that that you can accept.

66

00:05:46.320  -->  00:05:49.940
So if we put another P then that is fine.

67

00:05:50.670  -->  00:05:56.820
OK let's put in a couple more years so I can show you a couple of things about them that are quite interesting

68

00:05:57.150  -->  00:06:02.450
especially when you do comparisons and stuff like that

69

00:06:06.990  -->  00:06:09.210
sort

70

00:06:11.370  -->  00:06:17.640
of this and just typing quickly.

71

00:06:19.880  -->  00:06:20.310
OK.

72

00:06:20.430  -->  00:06:24.100
We've put in some data and I'm going to select staff from students now.

73

00:06:24.510  -->  00:06:30.390
And as you can see we've got a bit of a variety there in terms of the happiness of our students.

74

00:06:30.390  -->  00:06:32.070
We've got three that are happy.

75

00:06:32.100  -->  00:06:38.400
One that I was extremely happy when they're extremely unhappy and when they're just unhappy if you remember

76

00:06:38.730  -->  00:06:47.400
from when we created our ENM we put extremely unhappy first then unhappy then OK then happy and then

77

00:06:47.400  -->  00:06:48.600
extremely happy.

78

00:06:48.600  -->  00:06:53.880
And that's important because Ephraim's are ordered to be extremely unhappy.

79

00:06:53.880  -->  00:07:02.400
Is volume number zero and the extremely happy is a value number four which means that we can filter

80

00:07:03.150  -->  00:07:12.860
by these in them so we can see where the current mood is greater than OK and that is going to or should

81

00:07:13.290  -->  00:07:23.120
give us happy and extremely happy and it does because OK A's value number two and happies three and

82

00:07:23.120  -->  00:07:26.250
actually Happy's for three and four are greater than two.

83

00:07:26.540  -->  00:07:28.530
And that's it.

84

00:07:29.730  -->  00:07:30.370
OK.

85

00:07:30.660  -->  00:07:35.400
And this is something that you can do with names and they are sometimes useful maybe not useful in terms

86

00:07:35.400  -->  00:07:42.630
of comparison like this for genders but in terms of happiness or scores and things like that that you

87

00:07:42.630  -->  00:07:48.930
may want to limit the inputs and then still be able to perform filters like this one.

88

00:07:49.010  -->  00:07:53.830
Then the names are quite useful and also because they limit the input.

89

00:07:53.910  -->  00:07:59.670
It means that you can then share and responsibility with other people entering data into a database

90

00:08:00.210  -->  00:08:06.970
and still make sure that no incorrect data is input because the ynot is going to limit that.

91

00:08:07.200  -->  00:08:08.940
So enim is a very useful thing.

92

00:08:09.360  -->  00:08:18.210
And now let's move on to a bit of talking which I apologize for because I know that hearing me blab

93

00:08:18.210  -->  00:08:23.340
on about things is maybe not the most fun thing but nevertheless I want to tell you about something

94

00:08:23.340  -->  00:08:26.060
that's new in Pasqua sequel.

95

00:08:26.370  -->  00:08:33.150
And it has been for the last couple of versions which is the ability to store Jason javascript object

96

00:08:33.150  -->  00:08:38.590
notation formatted strings in Pasqua sequel.

97

00:08:38.590  -->  00:08:44.190
Now if you think this is not interesting at all if you if you're thinking well why do I care if I can

98

00:08:44.190  -->  00:08:46.900
store Jason or not.

99

00:08:46.920  -->  00:08:49.040
Then you're probably right.

100

00:08:49.110  -->  00:08:55.920
You know relational databases have always just worked with tables and each table has a bunch of columns

101

00:08:56.300  -->  00:09:00.810
and an image of rows and then you can do your filtering and your sorting and things like that as normal

102

00:09:00.820  -->  00:09:01.800
.

103

00:09:02.670  -->  00:09:14.150
Jason is less structured which means you can have a column that has a string of Jason and then I call

104

00:09:14.150  -->  00:09:22.890
them the has a completely differently formatted Jason string whereas now we've got this table here it

105

00:09:22.890  -->  00:09:28.130
has a name and a mood and we cannot have an extra column just for one user.

106

00:09:28.230  -->  00:09:34.320
If we add an extra column all our users have that extra call in Jason if we store Jason it means that

107

00:09:34.330  -->  00:09:37.550
some users can have more columns than others and things like that.

108

00:09:37.590  -->  00:09:42.200
And why is that interesting it just gives you a bit more flexibility.

109

00:09:42.320  -->  00:09:48.120
However it comes at a price because it is more flexible it means that searching and filtering is slower

110

00:09:48.440  -->  00:09:49.040
.

111

00:09:49.420  -->  00:09:58.980
And normally you would use a new sequel's database which specializes in storing Jason formatted strings

112

00:09:59.700  -->  00:10:06.660
versus a relational database which which specializes in storing tables and with related data.

113

00:10:06.960  -->  00:10:14.100
But now that Pasqua sequel come support Jason then this is something that you may in the future consider

114

00:10:14.190  -->  00:10:17.080
storing depending on your applications.

115

00:10:17.270  -->  00:10:23.390
And I am just telling you this because it's important remember that postscripts can store Jason and

116

00:10:23.400  -->  00:10:27.720
if at some point in the future you find they that would be an interesting thing to do then you know

117

00:10:27.720  -->  00:10:33.500
that it can be done and throughout the course we might find scenarios where using Jason's door injection

118

00:10:33.570  -->  00:10:38.900
might be a good idea and if we do then we will get into that there but for now.

119

00:10:39.230  -->  00:10:42.180
And that's everything that I wanted to tell you about in this video.

120

00:10:42.300  -->  00:10:48.980
We've learned about a couple of apps and Jason Ephraim's and bite a for images.

121

00:10:49.490  -->  00:10:55.500
And now in the next video we're going to be looking at the nested select which is also very interesting

122

00:10:55.530  -->  00:10:55.870
.

123

00:10:56.170  -->  00:10:56.890
See you in the next video
