1

00:00:00,210  -->  00:00:06,630
Hi and welcome back in this video we're looking at the sequel sequence which is going to allow us to

2

00:00:06,660  -->  00:00:12,840
give our user IDs incremental values without us having to do anything.

3

00:00:12,840  -->  00:00:15,960
Let's once again revisit the contents of our users table

4

00:00:21,570  -->  00:00:24,000
and notice how we've got to use them.

5

00:00:24,120  -->  00:00:30,690
We've got ID one and then 82 and we've got our two names there as we remember.

6

00:00:30,690  -->  00:00:38,550
The problem came because we wanted to be able to enter user data but not have to remember which ID we're

7

00:00:38,550  -->  00:00:39,810
entering.

8

00:00:39,810  -->  00:00:46,080
So once again insert into public don't users name I only want to enter the name because that's the only

9

00:00:46,080  -->  00:00:56,070
thing that I know values and we know that this doesn't work because we're trying to enter null as the

10

00:00:56,070  -->  00:00:57,990
ID by default.

11

00:00:57,990  -->  00:01:08,190
So when we do this this doesn't work because the default value for the ID column is null and we cannot

12

00:01:08,220  -->  00:01:10,140
enter null in a primary key.

13

00:01:10,380  -->  00:01:16,580
So what we have to do is change the default value of the ID column to be something other than null.

14

00:01:17,070  -->  00:01:25,080
But we also have to remember that it has to be unique which is where the sequence comes in a sequence

15

00:01:25,080  -->  00:01:31,320
in Pasqua sequel is not available in many other sequel management systems.

16

00:01:31,320  -->  00:01:36,810
So use it carefully in other systems you have things like auto increment but we're not going to look

17

00:01:36,810  -->  00:01:40,380
into them because it doesn't exist in post-race impossible sequel.

18

00:01:40,440  -->  00:01:46,290
We have to create a sequence and the sequence is just that it's a generator of numbers sequentially

19

00:01:46,800  -->  00:01:51,310
and the numbers are unique because one comes after another.

20

00:01:51,840  -->  00:01:56,390
So the first thing we have to do is create the sequence and give it a name.

21

00:01:56,490  -->  00:02:00,190
So we're going to a create sequence and then we're going to give it a name.

22

00:02:00,210  -->  00:02:05,940
Normally you call these things for example the table name which is uses the column that you're going

23

00:02:05,940  -->  00:02:12,780
to be applying the sequence to which is the ID column and then you usually put CEQ at the end for sequence

24

00:02:12,780  -->  00:02:14,040
.

25

00:02:14,040  -->  00:02:19,080
Now if we do this this would create a sequence starting at the value 1.

26

00:02:19,290  -->  00:02:20,780
Because that's what's normal.

27

00:02:20,970  -->  00:02:23,470
You start one and then you've got two and three and so on.

28

00:02:23,760  -->  00:02:26,370
However we've already got some users in our table.

29

00:02:26,430  -->  00:02:31,260
So if we start with the value one the next time we try to use this sequence it's going to try to put

30

00:02:31,260  -->  00:02:34,690
in a one and that's when I give it an error because one is already there.

31

00:02:35,090  -->  00:02:45,940
What to do is to start at 3 and that will start of the value 3 which makes sense and that's it.

32

00:02:46,140  -->  00:02:49,750
Then just execute that and return successfully with no result.

33

00:02:49,770  -->  00:02:52,710
And that's created.

34

00:02:53,190  -->  00:03:01,530
And then what we have to do is change the default value of the ID column in our users table to do this

35

00:03:01,530  -->  00:03:01,770
.

36

00:03:01,800  -->  00:03:07,890
We're going to introduce another thing which is alter table alter table is used to do that alter table

37

00:03:07,890  -->  00:03:09,560
and change it.

38

00:03:09,780  -->  00:03:11,190
So we do alter table.

39

00:03:11,460  -->  00:03:16,310
Public Art uses that I'm going to put a new line but again that is not required.

40

00:03:16,920  -->  00:03:19,680
And then when we do we can do a lot of things with ALTER TABLE.

41

00:03:19,890  -->  00:03:24,140
And the one we're going to look at in this video specifically is alter columned.

42

00:03:24,670  -->  00:03:28,910
And then here we can alter a specific column inside the public top users table.

43

00:03:29,270  -->  00:03:32,220
The column we want to alter is ID.

44

00:03:32,670  -->  00:03:38,110
And then what we want to do is set a default value and the default value.

45

00:03:38,140  -->  00:03:40,980
We're going to put it could be something like nine.

46

00:03:41,100  -->  00:03:46,140
And then all new users would have the value 9 unless we specified another value.

47

00:03:46,200  -->  00:03:51,250
But again that would be problematic if we had multiple users with the same ID.

48

00:03:51,270  -->  00:03:55,950
So what to do is use the sequence and to use the sequence we say next vowel.

49

00:03:56,040  -->  00:04:01,530
And this is a possible sequel function and that gives us the next available value in the sequence and

50

00:04:01,530  -->  00:04:02,430
where we put in here.

51

00:04:02,670  -->  00:04:09,660
Is it the sequence name the sequence name inside quotation marks and that equals name as you remember

52

00:04:09,680  -->  00:04:09,850
.

53

00:04:09,990  -->  00:04:17,390
We call it user's ID sec and then we put in a semicolon at the end and that's it.

54

00:04:17,410  -->  00:04:22,160
And then we execute this and it says that that's fine.

55

00:04:22,170  -->  00:04:28,830
And finally the last thing that we want to do is to tell Pasco sequel that although the ID column is

56

00:04:28,830  -->  00:04:36,810
using that sequence that the ID column owns the sequence and what that achieves is that when we delete

57

00:04:36,990  -->  00:04:40,760
the table for example this you can you will also get deleted.

58

00:04:40,860  -->  00:04:45,570
And that makes sense because we're probably not going to want to use reuse the sequence in another table

59

00:04:46,050  -->  00:04:51,460
because a sequence will be for example at 15000 and there's not really much use for that.

60

00:04:51,510  -->  00:04:59,550
So let's tell postgrads that this sequence is owned by the ID column of our table so that if we delete

61

00:04:59,550  -->  00:05:05,880
that column or with the table then that can cascade into the sequence.

62

00:05:05,880  -->  00:05:12,970
So we say alter sequence and then we put in the sequences name and we say owned by.

63

00:05:13,440  -->  00:05:18,660
And this is public use users dot ID because that's the schema.

64

00:05:18,810  -->  00:05:24,240
The table and the column name and that works as well.

65

00:05:24,780  -->  00:05:26,580
And naturally we haven't seen any output.

66

00:05:26,580  -->  00:05:28,560
We don't know if this is doing stuff.

67

00:05:28,560  -->  00:05:30,110
So let's try that again.

68

00:05:30,300  -->  00:05:39,300
Let's go into our previous queries and select this one insert into public don't use this and we're going

69

00:05:39,300  -->  00:05:43,170
to only enter a name and the name is going to be my name in this case.

70

00:05:43,170  -->  00:05:52,440
So not as we're not putting in an ID and the value that is going to go in the ID is the IDs default

71

00:05:52,440  -->  00:05:58,980
value and we know that a default value of the ID column is now the next value of the sequence because

72

00:05:58,980  -->  00:06:02,840
we've just said that when we pressed play.

73

00:06:02,850  -->  00:06:04,190
Now this works.

74

00:06:04,830  -->  00:06:13,290
So what do you think is going to come up when we select from our table.

75

00:06:18,690  -->  00:06:24,330
As you would expect we get the ID 3 which is the next value under the name which is what we've put in

76

00:06:24,330  -->  00:06:24,960
.

77

00:06:25,410  -->  00:06:27,090
If we weren't to run the thing again.

78

00:06:27,210  -->  00:06:33,240
Believe me the value would be 4 and that's how you create a sequence and how you apply it to the column

79

00:06:33,250  -->  00:06:33,560
.

80

00:06:33,820  -->  00:06:39,800
And that allows you to do auto incremental IDs like this one.

81

00:06:40,350  -->  00:06:41,010
That's it.

82

00:06:41,010  -->  00:06:42,810
Thanks for watching and I'll see you in the next video
