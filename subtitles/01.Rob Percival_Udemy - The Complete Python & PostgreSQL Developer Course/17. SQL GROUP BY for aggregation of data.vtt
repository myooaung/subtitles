WEBVTT
1

00:00:00.120  -->  00:00:06.300
Find will come back in this video we're looking at group by group by is going to be fantastic because

2

00:00:06.300  -->  00:00:09.810
it's going to let us remove duplicates when we do joins.

3

00:00:09.830  -->  00:00:15.720
It's going to let us make sure that we are grouping our data and getting all the data related to customers

4

00:00:16.170  -->  00:00:18.590
that we are interested in.

5

00:00:18.600  -->  00:00:21.330
So he always gonna work.

6

00:00:21.330  -->  00:00:25.740
We're going to do a join and then we're going to get a bunch of duplicate data and then we're going

7

00:00:25.740  -->  00:00:26.700
to group.

8

00:00:27.030  -->  00:00:29.390
And then the because is going to get removed.

9

00:00:29.400  -->  00:00:33.370
But naturally we're going to lose some of that granularity.

10

00:00:33.450  -->  00:00:38.270
So let's look at an example so you can understand what I'm going on about.

11

00:00:38.640  -->  00:00:42.300
Let's say we've got select staff from customers and you know this gives us our customers.

12

00:00:42.780  -->  00:00:50.840
And then I'm going to do the left join on purchases on customers dot ID equals purchases to our customer

13

00:00:50.850  -->  00:00:51.900
on the score ID.

14

00:00:52.260  -->  00:00:56.370
And you know what that is going to do going to give me all my customers and that is going to join the

15

00:00:56.370  -->  00:00:57.660
purchase data onto them.

16

00:00:57.870  -->  00:01:02.090
But I'm still going to get customers that have no data on purchases.

17

00:01:02.100  -->  00:01:10.500
So what I get is Rolf's Smith twice Michael Adam three times Chris caught twice and then Jose and then

18

00:01:10.770  -->  00:01:13.050
with no purchase date.

19

00:01:14.100  -->  00:01:19.340
So what's going on here is that Smith has two purchases associated with him.

20

00:01:19.350  -->  00:01:24.100
So what I get is the purchase data for for both purchases.

21

00:01:24.150  -->  00:01:29.160
But naturally I have to get that into rows because that's two separate purchases.

22

00:01:29.580  -->  00:01:37.260
But let's say that I'm not interested in the purchase info that the data stored here in these columns

23

00:01:37.260  -->  00:01:37.310
.

24

00:01:37.320  -->  00:01:46.020
I just want to know how many purchases is done which is too big for me to have two purchases.

25

00:01:46.110  -->  00:01:52.950
That means I don't really need two rows for Rocksmith because I'm no longer interested in separate data

26

00:01:53.160  -->  00:01:53.880
for each purchase.

27

00:01:53.880  -->  00:01:58.230
I'm only interested in how many in total he made.

28

00:01:59.010  -->  00:02:07.830
So what I can do is say select I'm going to select is customers not first on this morning.

29

00:02:07.950  -->  00:02:14.310
Customers thought last underscore name and purchases dot I.D. and that's the first thing I'm going to

30

00:02:14.310  -->  00:02:15.320
do the first change.

31

00:02:15.480  -->  00:02:21.930
And if I press play I get now no longer the item ID and customer ID that I wasn't really interested

32

00:02:21.930  -->  00:02:22.730
in from the purchase.

33

00:02:22.800  -->  00:02:27.020
Now you're looking at the purchase I.D. It's still there twice however.

34

00:02:27.480  -->  00:02:32.890
But this is an important first step and you'll see why in a moment.

35

00:02:33.510  -->  00:02:44.760
So we've got the I.D. there 2 3 5 and 6 and so what I can then do is put a function here around purchases

36

00:02:44.760  -->  00:02:48.990
dot I.D. which is count.

37

00:02:49.980  -->  00:02:55.220
And what that does is it counts the total number of purchases dot ID that I've got there.

38

00:02:55.260  -->  00:02:59.990
Now here's what happens when a Pressplay era.

39

00:03:00.800  -->  00:03:06.810
And what does that is call them customers not first name must appear in a group by clause or be used

40

00:03:06.810  -->  00:03:08.640
in an aggregate function.

41

00:03:08.640  -->  00:03:17.910
What it's saying is that I'm an idiot because purchases dot ID if I count purchases or I.D. I'm going

42

00:03:17.910  -->  00:03:23.400
to get 1 1 1 1 1 1 1 and it's telling me that that's probably not what you want to do.

43

00:03:23.670  -->  00:03:24.700
And they are right.

44

00:03:24.750  -->  00:03:25.900
That's not what I want to do.

45

00:03:26.130  -->  00:03:33.600
What I want to do is when I count the grouped amount of purchases and I can do that by seeing group

46

00:03:34.530  -->  00:03:38.860
by customers dot ID.

47

00:03:39.200  -->  00:03:41.050
That is because somebody is not here.

48

00:03:41.370  -->  00:03:49.590
But if it was Rowlf would be 1 1 and so on and so what's going to happen now is that I'm going to group

49

00:03:49.740  -->  00:03:53.240
by customer I.D. which is going to give me only one customer.

50

00:03:53.550  -->  00:03:58.660
And now I can count how many purchases are associated with that customer.

51

00:04:00.240  -->  00:04:02.680
And naturally I have to retype this.

52

00:04:02.980  -->  00:04:05.370
And there we go.

53

00:04:05.400  -->  00:04:07.570
So now Craig Scott has two purchases.

54

00:04:07.590  -->  00:04:08.570
Michael has three.

55

00:04:08.570  -->  00:04:09.720
Ralph Smith has two.

56

00:04:09.720  -->  00:04:18.300
And then these two have ZERO him which is now adding a lot more value to what we can do with a sequel

57

00:04:18.750  -->  00:04:24.910
because now we were able to get sanitized and transformed information from sequel.

58

00:04:24.910  -->  00:04:26.070
It's no longer just data.

59

00:04:26.080  -->  00:04:27.900
Now it's turning into information.

60

00:04:27.910  -->  00:04:31.150
Now this is things that we can action a business on.

61

00:04:31.230  -->  00:04:37.770
We can say OK this guy has two two pages is we can send him a promotion now you know things like that

62

00:04:37.770  -->  00:04:40.470
.

63

00:04:40.650  -->  00:04:41.040
OK.

64

00:04:41.130  -->  00:04:43.570
So this is the group by.

65

00:04:43.650  -->  00:04:51.030
And similarly if we were to just do select staff from customers and group by customers not ID.

66

00:04:51.660  -->  00:04:57.750
And this gives me just the normal customer data even though it's grouped because that's what the customer

67

00:04:57.750  -->  00:05:02.080
table holds just a customer data.

68

00:05:02.970  -->  00:05:09.900
But if we join it with something else then the grouping starts to make sense because we reduce the data

69

00:05:09.930  -->  00:05:13.790
and we only get one row for each customer ID.

70

00:05:13.890  -->  00:05:15.180
So that's what the group buying does

71

00:05:18.480  -->  00:05:18.950
the next week.

72

00:05:18.960  -->  00:05:22.790
I wanted to show you is one that uses the function some.

73

00:05:22.920  -->  00:05:29.850
We're going to calculate here is how much money our customer has spent in our business.

74

00:05:29.850  -->  00:05:38.050
So I'm going to select store select staff from items and this gives me just my items.

75

00:05:38.100  -->  00:05:45.020
And notice how each item has a price which is a number which means I can add these prices together and

76

00:05:45.030  -->  00:05:54.750
I'm going to do in the end join on purchases on items start ID equals purchases don't item ID and you

77

00:05:54.750  -->  00:05:57.420
know what this it's going to do.

78

00:05:57.420  -->  00:06:02.740
This is going to once again give me those items that have purchased Atascocita with them.

79

00:06:02.760  -->  00:06:04.630
So the pain is going to disappear.

80

00:06:05.280  -->  00:06:08.700
But now I might get some duplicates which is fine

81

00:06:12.540  -->  00:06:21.450
and then I'm going to do an inner join customers on purchases dot customer id equal customers or ID

82

00:06:21.900  -->  00:06:25.530
and you know what this is going to do once again we looked at this in the last video which is now going

83

00:06:25.530  -->  00:06:29.210
to give me customer information for each of these orders.

84

00:06:29.300  -->  00:06:38.310
So when I have Rocksmith and biner screen for $275 and now comes the more interesting part I want to

85

00:06:38.310  -->  00:06:47.250
make sure that I only get one row per customer group by customers not ID.

86

00:06:48.000  -->  00:06:54.300
If I if I do this what happens is that I can select everything because everything is no longer accessible

87

00:06:54.450  -->  00:07:03.020
because weve grouped things when we group by customer id these two rows here become one.

88

00:07:03.090  -->  00:07:07.680
So naturally we are losing they from these rows.

89

00:07:07.740  -->  00:07:14.220
Were losing this data here because if we merge those two together what happens to this data well it

90

00:07:14.220  -->  00:07:14.890
disappears.

91

00:07:14.910  -->  00:07:23.490
But we can still access the grouped data if we want which means we can access a count of item names

92

00:07:23.490  -->  00:07:29.220
for example that would be true we could access a count of item IDs for example that would be 2 or we

93

00:07:29.220  -->  00:07:34.900
could access a sum of item prices and that would be something around 300 and something.

94

00:07:35.430  -->  00:07:42.750
So lets do a group by customers to ID and now in the select instant of stock we can do.

95

00:07:42.810  -->  00:07:51.870
Customers dont first name customers dot last name and now we cannot select anything that has not been

96

00:07:52.170  -->  00:07:52.790
duped.

97

00:07:52.800  -->  00:07:57.930
For example if I do items don't name I'll get an error because I don't have access to items not a name

98

00:07:57.930  -->  00:07:59.540
because it's being grouped been reduced.

99

00:07:59.550  -->  00:08:02.670
So that is no longer in the table.

100

00:08:02.730  -->  00:08:09.090
I could do count of items not name and that would give me the number of orders essentially that they've

101

00:08:09.090  -->  00:08:12.290
done but I could also do with some.

102

00:08:12.330  -->  00:08:16.980
And that adds things together of items not price.

103

00:08:16.980  -->  00:08:24.420
And that gives me the total amount that they have spent in the business which is a handy number to have

104

00:08:25.490  -->  00:08:27.850
them which is fantastic.

105

00:08:27.900  -->  00:08:35.460
Similarly a challenge for you could be to find out how much money in total has to be spent on your business

106

00:08:35.730  -->  00:08:43.560
and buy all your customers and you could do this by selecting from purchases joining on items grouping

107

00:08:43.560  -->  00:08:50.040
by an item id and then summing all the item prices together I think.

108

00:08:50.340  -->  00:08:52.460
Anyway that's up to you to find out.

109

00:08:52.530  -->  00:08:55.500
And we're going to look at how we could do that in the next video.

110

00:08:55.830  -->  00:08:59.250
So try not to give it a go have a play around with it.

111

00:08:59.310  -->  00:09:04.590
I'll be seeing you soon for some more sequel advanced stuff.

112

00:09:04.620  -->  00:09:05.340
So actually
