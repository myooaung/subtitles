WEBVTT
1

00:00:00.150  -->  00:00:02.360
Hi We'll come back in this with you.

2

00:00:02.370  -->  00:00:07.420
We're going to be looking at the connection from pool class in the last video.

3

00:00:07.440  -->  00:00:08.900
It was a bit of a disappointment.

4

00:00:08.910  -->  00:00:12.890
We did all these work and then it just wasn't the right thing.

5

00:00:13.650  -->  00:00:16.490
Let's just quickly go over what we did in the last video.

6

00:00:16.560  -->  00:00:26.280
Just to recap we first created a connection pool class that in the init method defined a property of

7

00:00:26.400  -->  00:00:33.210
the object which was connection pool and that was a simple connection pool which as we know just creates

8

00:00:33.300  -->  00:00:39.470
a connection pool with one connection at minimum and one at maximum.

9

00:00:39.480  -->  00:00:48.240
So one connection then we also define the enter and exit methods which are required to enter into the

10

00:00:48.240  -->  00:00:49.500
with clause.

11

00:00:49.830  -->  00:00:53.570
And what happens when we exit the with clause.

12

00:00:54.090  -->  00:01:00.750
Let's go into the User class at the start of the with clause the end method gets called and at the end

13

00:01:00.750  -->  00:01:05.760
of the with clause the exit method gets called.

14

00:01:05.760  -->  00:01:13.770
What we did was to at the start of the with method return a new connection from the connection pool

15

00:01:13.780  -->  00:01:14.120
.

16

00:01:14.690  -->  00:01:18.660
And that gets assigned to the connection variable.

17

00:01:18.720  -->  00:01:21.560
However this calls the init method as well.

18

00:01:21.690  -->  00:01:27.060
So what was happening is that we were creating a new connection pool object which was initializing a

19

00:01:27.060  -->  00:01:28.360
new connection pool.

20

00:01:28.800  -->  00:01:32.640
And then we were getting the only connection available in that pool.

21

00:01:32.970  -->  00:01:38.940
So whenever we were entering into this with statement we were creating an entirely new connection pool

22

00:01:39.210  -->  00:01:42.450
and we were creating an entirely new connection in that pool.

23

00:01:42.660  -->  00:01:46.540
And then we were assigning that new connection to connection.

24

00:01:47.430  -->  00:01:51.870
And what that means is that we have a lot of overhead because we were creating not only new connections

25

00:01:52.140  -->  00:01:54.820
but also new connection pools.

26

00:01:55.950  -->  00:02:02.340
We learned how to implement the with clause using enter that gets executed beginning and exit at the

27

00:02:02.340  -->  00:02:02.840
end.

28

00:02:03.210  -->  00:02:08.500
But we didn't find the correct solution for our problem.

29

00:02:08.550  -->  00:02:18.440
The solution requires that at the end we are able to return the connection to the pool.

30

00:02:19.860  -->  00:02:27.570
And that would be self connection pool dot put corn and in here we need to put the connection that we

31

00:02:27.570  -->  00:02:31.020
want to return.

32

00:02:31.080  -->  00:02:35.910
However we don't have access to that connection because we're returning it.

33

00:02:35.910  -->  00:02:44.730
The connection goes over to the user class in this variable and then it is not given back to this exit

34

00:02:44.730  -->  00:02:46.440
method so we don't have access to it.

35

00:02:46.440  -->  00:02:49.430
We can't put it back.

36

00:02:49.470  -->  00:02:50.650
So here's the solution.

37

00:02:50.670  -->  00:03:00.330
And then I'll explain why this is I'm going to cut this thing from there put it in here and then I'm

38

00:03:00.330  -->  00:03:06.180
going to rename the connection pool class to be connection from pool and this connection from pool class

39

00:03:06.480  -->  00:03:12.230
is representing one connection from this pool here.

40

00:03:13.650  -->  00:03:20.130
And instead of self not Connection Pool what I'm going to keep track of in each of the objects is the

41

00:03:20.130  -->  00:03:23.270
connection that it represents.

42

00:03:24.210  -->  00:03:28.500
So I'm going to say something like self-dual connection is none.

43

00:03:29.130  -->  00:03:35.090
When we create a new connection from pool object the connection that it represents is none.

44

00:03:35.280  -->  00:03:42.090
It doesn't represent any connections when we call the enter method which is at the beginning of the

45

00:03:42.090  -->  00:03:43.670
with statement.

46

00:03:43.950  -->  00:03:55.690
It is going to get a new connection from the pool and then it's going to return that connection.

47

00:03:56.460  -->  00:04:06.030
So another connection that we've gotten from the pool goes over to this variable there because we have

48

00:04:06.030  -->  00:04:11.130
that in the property self-dual connection when we get to the exit method.

49

00:04:11.130  -->  00:04:20.690
We can do connection pool or put on self talk connection and that is how we can return these connections

50

00:04:20.690  -->  00:04:21.990
.

51

00:04:21.990  -->  00:04:26.490
The next thing to do is to go to a User class and instead of importing connection pool which no longer

52

00:04:26.490  -->  00:04:27.270
exists.

53

00:04:27.450  -->  00:04:33.930
Import connection from pool and then just replace those there as well.

54

00:04:33.930  -->  00:04:39.090
So now this seems to be method is getting a new connection from pool and calling it connection.

55

00:04:39.110  -->  00:04:41.130
Now this makes sense.

56

00:04:41.130  -->  00:04:46.380
This is creating a new connection from the pool and calling it connection before we saw that was sort

57

00:04:46.380  -->  00:04:49.430
of creating a new connection pool which is what he was doing.

58

00:04:49.470  -->  00:04:54.700
So that didn't make sense but this does with a new connection from the pool called connection.

59

00:04:54.810  -->  00:04:56.340
Perform the following.

60

00:04:56.340  -->  00:04:59.240
That is how it reads and it makes sense.

61

00:04:59.400  -->  00:05:06.780
And now we know that at the beginning what this does is get a new connection from the pool and then

62

00:05:06.780  -->  00:05:07.380
return it.

63

00:05:07.380  -->  00:05:15.300
Which means that new connection goes into this variable connection and then at the end that variable

64

00:05:15.300  -->  00:05:19.360
connection calls this exit method with itself that's self.

65

00:05:19.860  -->  00:05:26.380
And then it puts itself back into the connection pool.

66

00:05:27.150  -->  00:05:30.790
I've been talking a lot today so apologies if I do sound a bit rough.

67

00:05:31.420  -->  00:05:33.550
Okay let's let's have a play around with this.

68

00:05:33.570  -->  00:05:38.550
I'm going to go into Peasey hetmans three run this thing here we can see that we've called these five

69

00:05:38.550  -->  00:05:45.240
rows and I'm going to go into the app and we're going to create a new Smith put in a database then load

70

00:05:45.240  -->  00:05:46.240
this from the file.

71

00:05:46.260  -->  00:05:48.740
We should see this printed out as down there.

72

00:05:49.080  -->  00:05:52.890
And finally we are going to be saving another use of the database.

73

00:05:52.890  -->  00:05:53.630
Let's run the app.

74

00:05:53.670  -->  00:05:54.630
What do you think is going to happen.

75

00:05:54.870  -->  00:05:57.490
Do you think is going to work.

76

00:05:57.870  -->  00:05:59.120
What do you think is not going to work.

77

00:05:59.130  -->  00:06:03.000
And if so why.

78

00:06:03.870  -->  00:06:05.220
I would recommend Really.

79

00:06:05.310  -->  00:06:10.650
Now if you want to really learn and understand what's going on pause the video.

80

00:06:11.100  -->  00:06:16.560
I'll tell you it's not a work and think about why it's not going to work.

81

00:06:16.800  -->  00:06:18.140
Let's press play.

82

00:06:18.980  -->  00:06:19.380
OK.

83

00:06:19.440  -->  00:06:21.930
It seems to work that's going to be the main three.

84

00:06:21.930  -->  00:06:26.230
We've got five rows and we've still got five rows.

85

00:06:26.700  -->  00:06:31.690
So evidently our inserts did not work in area.

86

00:06:31.680  -->  00:06:34.180
Why.

87

00:06:34.200  -->  00:06:38.030
Any idea why it may not work.

88

00:06:40.080  -->  00:06:40.660
OK.

89

00:06:40.830  -->  00:06:44.690
I hope you got it.

90

00:06:44.700  -->  00:06:47.440
We have to commit that connection.

91

00:06:47.730  -->  00:06:53.530
And now you're seeing what we're using with this committee commits the connection at the end and you

92

00:06:53.550  -->  00:06:55.370
are right it does.

93

00:06:55.530  -->  00:07:02.460
If this here is a connection but that is no longer a connection that is a connection from pool which

94

00:07:02.460  -->  00:07:03.630
we've created.

95

00:07:03.750  -->  00:07:11.770
We need to deal with everything else we need to deal now with returning the connection to the pool in

96

00:07:11.770  -->  00:07:16.650
the same way that we need to deal with closing the connection and committing it because we don't want

97

00:07:16.650  -->  00:07:17.760
to close the connection.

98

00:07:17.790  -->  00:07:19.540
We just want to put them back in the pool.

99

00:07:19.560  -->  00:07:21.340
We still have to deal with committing them.

100

00:07:21.870  -->  00:07:23.300
And I think that's fair.

101

00:07:23.430  -->  00:07:31.520
If this was a connection that's psycho-BS the two don't connect thing already deals with this with the

102

00:07:31.530  -->  00:07:32.550
statement.

103

00:07:32.880  -->  00:07:35.100
But our class did not.

104

00:07:35.100  -->  00:07:35.850
So now it does.

105

00:07:35.850  -->  00:07:37.270
Now it is able to commit.

106

00:07:37.440  -->  00:07:42.830
And if we run the app again which I just did and we go to Jetman 3 and we run this again.

107

00:07:42.900  -->  00:07:44.840
Now we have a few more.

108

00:07:45.010  -->  00:07:48.540
As you can see it's had jumped a few numbers.

109

00:07:48.540  -->  00:07:54.690
I find it disturbing that they are all these Smiths are called the Rowlf but nevertheless it's going

110

00:07:54.690  -->  00:07:56.360
to stay like that.

111

00:07:57.360  -->  00:07:57.730
OK.

112

00:07:57.750  -->  00:08:03.900
So this was quite a dance video with a lot of stuff going on in it.

113

00:08:03.970  -->  00:08:11.910
But essentially what we've done is created a connection pool which is outside of any class and then

114

00:08:12.000  -->  00:08:18.090
we have created a classical connection from pool which when we initiated it creates a connection property

115

00:08:18.600  -->  00:08:20.790
when we enter the with statement.

116

00:08:20.790  -->  00:08:23.280
It gets a connection from the pool.

117

00:08:23.670  -->  00:08:29.970
And when we exit the with statement or the with clause we commits the connection and then we put it

118

00:08:29.970  -->  00:08:33.490
back in the pool and that's all we've done in this video.

119

00:08:33.690  -->  00:08:41.400
And that really explains sort of I'm trying to get you into the zone where you understand that the computer

120

00:08:41.400  -->  00:08:51.300
is extremely extremely frustratingly stupid and you need to remember and think what is the computer

121

00:08:51.300  -->  00:08:54.290
doing and what is it not doing.

122

00:08:54.450  -->  00:08:57.710
And both of those questions are really important to remember.

123

00:08:57.840  -->  00:09:00.050
You need to be thinking about those two.

124

00:09:00.090  -->  00:09:01.470
What is the computer doing.

125

00:09:01.470  -->  00:09:04.220
What is it not doing and what do I want it to do.

126

00:09:04.350  -->  00:09:05.400
And how do I accomplish that.

127

00:09:05.400  -->  00:09:12.660
That's the objective of this we not only to teach you how to do X Y and Zed with Python but rather to

128

00:09:12.660  -->  00:09:18.120
teach you a set of skills that will allow you to do that with any programming language.

129

00:09:18.120  -->  00:09:20.730
So with that said let's move on to the next video and I show you
