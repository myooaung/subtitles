1

00:00:00,780  -->  00:00:08,070
Hi and welcome back in this studio we're looking at what is a join this video is going to be a presentation

2

00:00:08,070  -->  00:00:14,130
style video just because it lets me show you table samples and diagrams and things like that a lot easier

3

00:00:14,130  -->  00:00:14,830
.

4

00:00:14,880  -->  00:00:20,290
So bear with me for this video is one of the few videos that is going to be in a lecture format and

5

00:00:20,310  -->  00:00:23,660
it's just a lot easier for me and for you as well.

6

00:00:24,060  -->  00:00:31,110
And this really we're looking at what Joines are and Joines are essential elements of relational databases

7

00:00:31,230  -->  00:00:38,490
and on the Pascua sequel and my sequel are relational database systems and joins are key elements of

8

00:00:38,490  -->  00:00:44,790
those systems because they allow us to retrieve data from multiple tables at once instead of being limited

9

00:00:45,090  -->  00:00:47,150
to getting data from one table.

10

00:00:47,160  -->  00:00:52,600
We can now get data from multiple tables and join it together using sequel.

11

00:00:52,600  -->  00:00:59,310
And that's really powerful because the whole purpose of relational databases is to have data that is

12

00:00:59,310  -->  00:01:00,950
related to one another.

13

00:01:00,960  -->  00:01:07,290
For example you could have a Customers table and the customer Stabil can be related to an Orders table

14

00:01:07,290  -->  00:01:07,990
.

15

00:01:08,250  -->  00:01:15,780
For example the orders could also tell you which customer did which order without joins you'd be limited

16

00:01:15,930  -->  00:01:22,470
in finding out customer details for a particular order but with a join you can select data from both

17

00:01:22,470  -->  00:01:25,770
the customer and the order tables at the same time.

18

00:01:25,830  -->  00:01:28,350
And that's really nice.

19

00:01:28,440  -->  00:01:29,900
Let's go over the different types of join.

20

00:01:29,900  -->  00:01:35,350
I'll give you a few examples of what you may be able to do with Joines and why they're powerful.

21

00:01:36,180  -->  00:01:39,360
But first remember that joins olic sense.

22

00:01:39,500  -->  00:01:40,630
We've looked at sets.

23

00:01:40,710  -->  00:01:47,850
They are unordered groups of unique elements and we saw this in Python and Joines treat rows of data

24

00:01:47,880  -->  00:01:50,020
as if they were sense.

25

00:01:50,100  -->  00:01:58,230
So we can perform a set operations on the tables and I'm going to give you one example of how a set

26

00:01:58,230  -->  00:02:03,030
operation can be translated to a join and how they're similar.

27

00:02:03,030  -->  00:02:10,210
Remember the Intersect operation the set intersection is the elements common to two sets.

28

00:02:10,500  -->  00:02:17,730
For example as we saw in this diagram a while back we've got set a which has the elements 1 3 5 and

29

00:02:17,730  -->  00:02:22,560
6 and we've got a set B which has the elements 2 4 5 and 6.

30

00:02:22,800  -->  00:02:25,580
As you can see five and six is common to both sets.

31

00:02:25,770  -->  00:02:32,620
So if we were to calculate the intersection between A and B we get the elements 5 and 6.

32

00:02:33,210  -->  00:02:39,630
So 5 and 6 are the elements common to both sets and the first and most common type of join We're going

33

00:02:39,630  -->  00:02:45,330
to be looking at today is akin to the intersect and that's the inner join.

34

00:02:45,330  -->  00:02:49,840
So the sequel INNER JOIN is similar to the set in dissection.

35

00:02:50,460  -->  00:02:52,810
And here's a quick description of where the indigenes.

36

00:02:52,830  -->  00:02:55,490
But we're going to look at an example as well.

37

00:02:56,070  -->  00:03:04,700
THE INNER JOIN selects rose from table 1 and from table to where they match the selecting column.

38

00:03:05,310  -->  00:03:09,300
So it's only selecting rows when they match the selecting column.

39

00:03:09,300  -->  00:03:17,640
And we're going to look at an example just now imagine we have a Customers table where each customer

40

00:03:17,640  -->  00:03:21,060
has a unique identifier an ID and a name.

41

00:03:21,060  -->  00:03:26,990
So for example here I.D. one is Jose I.D. to Ralph and so on.

42

00:03:27,300  -->  00:03:29,800
And then we also have an Orders table.

43

00:03:30,360  -->  00:03:35,460
This orders table and gives a unique identifier to each order.

44

00:03:35,790  -->  00:03:42,090
Each order has a customer ID and also a product that the customer bought.

45

00:03:42,090  -->  00:03:50,310
So here Order Number one you order with I.D. one tells us that customer 1 bought a chat order number

46

00:03:50,310  -->  00:03:56,730
to tell the customer one bought a pen or the number three tells us that customer 1 bought a monitor

47

00:03:57,060  -->  00:04:02,400
an order number for tells us that customer 3 bought a pair of headphones.

48

00:04:02,430  -->  00:04:10,080
However just from looking at the Orders table we don't know the customer name to do that we would have

49

00:04:10,080  -->  00:04:13,120
to go to the customers table and see OK.

50

00:04:13,230  -->  00:04:14,500
Customer 1 is Jose.

51

00:04:14,490  -->  00:04:21,420
So orders 1 2 and 3 are for Jose and Order Number four is for Anna and we would have to do that manually

52

00:04:22,500  -->  00:04:24,780
which is not ideal.

53

00:04:24,870  -->  00:04:33,570
What I'd like is to be able to query my database in a way that gives me the customers and the orders

54

00:04:33,570  -->  00:04:35,300
that they have done.

55

00:04:35,580  -->  00:04:41,830
And that way I don't have to go looking for the customer name in a different table and there's a way

56

00:04:41,830  -->  00:04:48,970
to do that which is with the inner join the inner join to be constructed like this we would first select

57

00:04:49,090  -->  00:04:58,330
star from customers but we're not only selecting from customers we're selecting from customers or join

58

00:04:58,330  -->  00:04:59,710
orders.

59

00:05:00,080  -->  00:05:09,640
We are selecting from the result of joining the customers table with the orders table and to perform

60

00:05:09,640  -->  00:05:10,380
this joint.

61

00:05:10,450  -->  00:05:20,010
We have to give it a selecting column and we do that by seeing on customers dot ID equals orders dot

62

00:05:20,050  -->  00:05:28,120
customer id lets go over that once again with one or two tables and the first thing we do is select

63

00:05:28,120  -->  00:05:32,070
stuff from customers in or join orders.

64

00:05:32,080  -->  00:05:36,260
So were joining on the table on the right would join in the table on the left.

65

00:05:36,260  -->  00:05:44,390
Customers with a table on the right orders on the customer ID equals orders not customer ID.

66

00:05:44,710  -->  00:05:53,860
So were saying join those two tables when the customer ID is equal to the orders not customer ID and

67

00:05:53,860  -->  00:06:00,070
what that creates for us what this inner join and result creates for us is we're selecting everything

68

00:06:00,250  -->  00:06:09,340
from the resulting table which is customer id the customer name and also the order ID order customer

69

00:06:09,340  -->  00:06:11,050
ID and the order product.

70

00:06:11,050  -->  00:06:19,510
So what happens here is that because the customer number one has an order in the Orders table we get

71

00:06:19,600  -->  00:06:24,950
all the data related to customer number one and to the order that they have done.

72

00:06:25,300  -->  00:06:32,410
And we know that the order is belonging to customer number one because the customer ID is equal to the

73

00:06:32,560  -->  00:06:35,120
orders not customer ID.

74

00:06:35,420  -->  00:06:39,640
Thats one that matching call them or selecting call them does.

75

00:06:39,640  -->  00:06:44,660
Then the next row of the orders table is also for Customer ID 1.

76

00:06:44,770  -->  00:06:46,570
So that also gets shown there.

77

00:06:46,600  -->  00:06:50,590
We get another replica of the customer data and we can't.

78

00:06:50,620  -->  00:06:53,250
Also the order.

79

00:06:53,620  -->  00:06:58,950
And finally the third column the third row rather of the orders table also for Customer 1.

80

00:06:58,960  -->  00:07:02,560
So we get the same data again but this time with a third order.

81

00:07:02,560  -->  00:07:09,000
And finally the last row of the Orders table is not for Customer 2 but for customer 3.

82

00:07:09,010  -->  00:07:14,860
So what we get is the data belong into customer 3 and their order.

83

00:07:14,860  -->  00:07:23,350
Notice that this is the inner join it gets data from the table on the left and from the table on the

84

00:07:23,350  -->  00:07:23,970
right.

85

00:07:24,070  -->  00:07:26,620
If they match the selecting column.

86

00:07:26,680  -->  00:07:34,450
So here the the the result on the table that weve got only has customers 1 and 3 because they are the

87

00:07:34,450  -->  00:07:41,240
only customers that are present in the Orders table.

88

00:07:41,380  -->  00:07:43,250
So that would be the result.

89

00:07:43,250  -->  00:07:48,480
And notice that the result in table is what we are selecting from.

90

00:07:48,910  -->  00:07:55,280
So we are selecting from the customers in a join orders on customers ID equals order to our customer

91

00:07:55,360  -->  00:07:56,210
.

92

00:07:57,070  -->  00:07:59,780
And so thats the result in table.

93

00:08:00,400  -->  00:08:01,170
Okay.

94

00:08:01,590  -->  00:08:08,470
The next type of join is the left join and this is also a fairly popular type of join this join selects

95

00:08:08,530  -->  00:08:15,640
all rows from table 1 on the left and the rows from table to access table one has been able to on the

96

00:08:15,640  -->  00:08:18,040
right if they match.

97

00:08:18,550  -->  00:08:21,580
If they don't match the data for the right table is blank.

98

00:08:21,610  -->  00:08:23,490
So let's have a look again at an example.

99

00:08:23,860  -->  00:08:30,750
We've got the customers table and the orders table and now we're doing select staff from customers left

100

00:08:30,740  -->  00:08:38,270
to join orders on customers ID equals orders dot customer ID as you can see the customers 2 and 4 don't

101

00:08:38,270  -->  00:08:39,080
have any orders.

102

00:08:39,100  -->  00:08:44,430
So let's look at what happens in the resulting table.

103

00:08:44,560  -->  00:08:51,340
The first thing we get is customer number one with his first order because in a bid to the second order

104

00:08:51,940  -->  00:08:54,110
customer and the three with his third order.

105

00:08:54,550  -->  00:09:00,430
And then we can start becoming a one with third or and guest customer number three with his or her first

106

00:09:00,430  -->  00:09:01,080
order.

107

00:09:01,570  -->  00:09:05,830
And then he had with a difference begins but we've got so far is the same as the inner join.

108

00:09:06,070  -->  00:09:10,530
But now we're going to get the data from the left table.

109

00:09:10,960  -->  00:09:15,350
Even if they don't have anything matching on the right type.

110

00:09:15,580  -->  00:09:22,300
So we get customer number two with a blank order and customer number four with a blank order.

111

00:09:22,900  -->  00:09:24,240
So this is a left join.

112

00:09:24,430  -->  00:09:30,880
We've got all the data on the left table and we've got data from the right table where it matches and

113

00:09:30,880  -->  00:09:32,310
if it doesn't match then it's back

114

00:09:35,100  -->  00:09:37,120
to the next type which is the right join.

115

00:09:37,330  -->  00:09:40,540
And I'm sure you can guess now what this is going to do.

116

00:09:41,080  -->  00:09:46,480
And it is the opposite to the left join and they select all the roads on the table on the right and

117

00:09:46,480  -->  00:09:48,340
then the rows on the table on the left.

118

00:09:48,340  -->  00:09:54,400
If they match and if they don't match then the data for the table on the left is blank.

119

00:09:55,420  -->  00:09:57,130
So here's an example.

120

00:09:57,130  -->  00:10:00,280
And notice how I have changed the orders table.

121

00:10:00,640  -->  00:10:05,140
Now Order Number two has no customer ID associated with it.

122

00:10:05,260  -->  00:10:07,260
We can pretend that this was part of a promotion.

123

00:10:07,270  -->  00:10:11,460
Nobody bought this item was given away for free for example.

124

00:10:12,790  -->  00:10:16,470
So what happens now is I'm sure you can guess what happens.

125

00:10:16,480  -->  00:10:23,830
We get customer number one with his order customer number one with his other order which has now order

126

00:10:23,830  -->  00:10:25,090
number three.

127

00:10:25,960  -->  00:10:30,360
And then we get the second order but with no customer.

128

00:10:30,550  -->  00:10:32,620
So we getting the data from the right.

129

00:10:32,770  -->  00:10:33,620
But in this instance.

130

00:10:33,640  -->  00:10:36,110
Order number two doesn't have a customer.

131

00:10:36,340  -->  00:10:41,290
So it is blank and then we've got Anna with this other word.

132

00:10:41,740  -->  00:10:50,260
So what we're showing here is data from the right table and then we are putting in data from the left

133

00:10:50,260  -->  00:10:50,730
table.

134

00:10:50,860  -->  00:10:53,990
If it exists and if it doesn't exist it is blank.

135

00:10:54,040  -->  00:11:00,040
But we still show the data from the right table which is orders.

136

00:11:00,100  -->  00:11:06,940
Finally the last type of join is the join and then selects all rows from both tables and it matches

137

00:11:06,940  -->  00:11:11,650
them if there is a match and if not then it doesn't match and it's blank and you can think of it as

138

00:11:11,650  -->  00:11:14,410
both a left and a right to join.

139

00:11:14,410  -->  00:11:16,520
So once again the same data as before.

140

00:11:16,540  -->  00:11:19,090
This time we're doing a full join.

141

00:11:19,090  -->  00:11:26,770
And what happens is that the first wrote the first customer with his order then the first customer with

142

00:11:26,770  -->  00:11:32,890
his other order number three then we've got the second customer with no orders.

143

00:11:32,890  -->  00:11:36,610
So it's blank and then we've got the second order with no customer.

144

00:11:36,670  -->  00:11:42,790
So the customer side is blank and then we've got the third customer with order and then we've called

145

00:11:42,790  -->  00:11:45,040
the fourth customer with no order.

146

00:11:45,070  -->  00:11:50,260
So as you can see we've got all the data in those tables and we're matching the data where possible

147

00:11:50,260  -->  00:11:50,680
.

148

00:11:50,680  -->  00:11:57,330
But if these are cannot be matched then it is just blank for the part that's missing and that's it.

149

00:11:57,400  -->  00:12:04,300
As you can see that is not particularly useful in an application because there's too much too many bits

150

00:12:04,300  -->  00:12:06,320
missing essentially.

151

00:12:06,650  -->  00:12:12,130
But although it can still be used and it is still used but maybe it is more useful if you're doing data

152

00:12:12,130  -->  00:12:13,990
analysis and things like that.

153

00:12:14,540  -->  00:12:21,310
Nevertheless you're going to find these four types of joints throughout your journey of sequel.

154

00:12:21,310  -->  00:12:22,170
Plenty of times.

155

00:12:22,180  -->  00:12:25,700
So it's important that you know what they all are.

156

00:12:26,430  -->  00:12:33,480
OK to review Joines are essential to relational data as it lets us get data from various tables and

157

00:12:33,470  -->  00:12:39,220
there is always a various and not two tables because a join allows us to get data from three tables

158

00:12:39,220  -->  00:12:41,810
or append tables if we wanted.

159

00:12:42,640  -->  00:12:48,150
And we're going to look at how to do that throughout the next few videos and joins real quick.

160

00:12:48,160  -->  00:12:53,560
There are a lot quicker than if you were to get the data from the table separately and matching the

161

00:12:53,560  -->  00:12:55,510
data in your application.

162

00:12:55,510  -->  00:13:01,600
So for example if you were to get the customer's data in Python and then the orders data in Python and

163

00:13:01,600  -->  00:13:06,760
you were to go through the data and match customers to orders in your Python application that would

164

00:13:06,760  -->  00:13:07,950
be quite slow.

165

00:13:08,170  -->  00:13:13,480
But if you do it with sequel that's really fast and you actually don't really have to worry about performance

166

00:13:13,480  -->  00:13:19,210
issues at all unless you have many many millions of rows.

167

00:13:19,270  -->  00:13:25,890
The most common type of join is by far the inner join followed by the left join but they are all used

168

00:13:25,900  -->  00:13:27,780
and you should know what they all are.

169

00:13:28,040  -->  00:13:32,010
And to recap the inner join is a set intersection.

170

00:13:32,020  -->  00:13:38,490
It matches when both tables are both the rows match.

171

00:13:38,590  -->  00:13:44,070
In both tables the left join gets the data on the left that matches it with date on the right.

172

00:13:44,260  -->  00:13:47,170
The right join matches with the data on the right.

173

00:13:47,380  -->  00:13:52,240
I guess the on the right and matches it with the date on the left and the full join gets the data from

174

00:13:52,240  -->  00:13:55,910
both tables and matches it where possible.

175

00:13:56,990  -->  00:13:57,420
OK.

176

00:13:57,550  -->  00:14:00,480
That's everything for this video and I know it was a bit hefty.

177

00:14:00,520  -->  00:14:05,110
There's a few things to cover but Joines are all identical.

178

00:14:05,110  -->  00:14:09,760
It just depends which data you get first and where the matching happens.

179

00:14:09,910  -->  00:14:12,100
That is going to change the output.

180

00:14:12,100  -->  00:14:15,240
Just remember the different types and come back to this and review them.

181

00:14:15,250  -->  00:14:17,610
If you ever forget that's it.

182

00:14:17,650  -->  00:14:18,400
And thanks for watching
