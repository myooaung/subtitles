WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.470
Whenever you try to access a server resource with a suitable request,

00:00:04.470 --> 00:00:06.600
the request would land in dispatches.

00:00:06.600 --> 00:00:11.450
So that and then the dispatch Issel that will take care of delegating that call to the

00:00:11.450 --> 00:00:12.650
desired controller.

00:00:12.650 --> 00:00:18.410
But what if the controller is not found by the dispatch of sold it well,

00:00:18.410 --> 00:00:24.550
so what would just respond back with 404 not for ever with this default page,

00:00:24.550 --> 00:00:28.880
this default page is not so user friendly as in India,

00:00:28.880 --> 00:00:33.040
So you want to say something more meaningful and visually appealing.

00:00:33.040 --> 00:00:38.350
If we wanted to show a message saying that the requested your does not exist or whatever

00:00:38.350 --> 00:00:41.360
and then put a link to the home page.

00:00:41.360 --> 00:00:43.250
So let's see how it's done.

00:00:43.250 --> 00:00:49.430
I'm going to show you how it's done without using spring boot,

00:00:49.430 --> 00:00:53.300
and then we'll take a look at how we can do the same with Spring Boat.

00:00:53.300 --> 00:00:58.190
First and foremost thing is to design the page that you want to render and gets off for

00:00:58.190 --> 00:00:58.810
forever.

00:00:58.810 --> 00:01:04.040
And here's a page I'm talking about in order to keep things simple.

00:01:04.040 --> 00:01:05.900
I'm just displaying this message,

00:01:05.900 --> 00:01:11.580
but we can introduce all the CSS and other styling aspect into your page and make it look

00:01:11.580 --> 00:01:12.450
more appealing.

00:01:12.450 --> 00:01:17.590
And I also named the speech as photo forever.

00:01:17.590 --> 00:01:19.400
You can give any name off a choice,

00:01:19.400 --> 00:01:23.170
and since I'm going to correspond this page with photo for better,

00:01:23.170 --> 00:01:24.390
I just named it so.

00:01:24.390 --> 00:01:31.410
The second thing that you need to do is to manually enable the exception,

00:01:31.410 --> 00:01:32.870
my default dispatches,

00:01:32.870 --> 00:01:36.390
all that will not throw did this was not found exception.

00:01:36.390 --> 00:01:43.230
We have to enable it manually in this manner by setting this flag set through exception.

00:01:43.230 --> 00:01:46.350
If no handler found too true,

00:01:46.350 --> 00:01:52.200
so that the dispatches all that we'll throw this exception in case it does not find any

00:01:52.200 --> 00:01:54.650
handle logic or the controller logic.

00:01:54.650 --> 00:01:57.550
And once you enable it,

00:01:57.550 --> 00:01:59.460
we have to know take care off,

00:01:59.460 --> 00:02:05.180
creating a class or method that would be called in case often exception.

00:02:05.180 --> 00:02:14.500
And that method would be annotated with exception handler with the exception itself.

00:02:14.500 --> 00:02:17.050
So whenever we have this exception,

00:02:17.050 --> 00:02:26.050
then this method would be more and in here were just simply returning a string,

00:02:26.050 --> 00:02:33.150
which is essentially the view name that we want to render in case off this exception.

00:02:33.150 --> 00:02:34.230
Well,

00:02:34.230 --> 00:02:37.680
we could have this matter as part of the controller class itself,

00:02:37.680 --> 00:02:39.540
but it would be applicable.

00:02:39.540 --> 00:02:44.510
Only written that controller in order for this method to be applicable across all the

00:02:44.510 --> 00:02:46.550
controllers that are existing in our project,

00:02:46.550 --> 00:02:53.010
we have to have this method inside a class that is annotated with controller Ed wise.

00:02:53.010 --> 00:02:55.490
And when you have the sanitation,

00:02:55.490 --> 00:02:59.850
this class would be identified as a spring bean with competent scan.

00:02:59.850 --> 00:03:06.050
Or you can even manually declare this as it being inside your conflict file any which ways

00:03:06.050 --> 00:03:07.450
this is all there is to it.

00:03:07.450 --> 00:03:11.250
So now if you try to access the resource that is not present,

00:03:11.250 --> 00:03:16.470
then this exception would be raised by the dispatch of solar.

00:03:16.470 --> 00:03:19.570
Enter this method logic would be executed,

00:03:19.570 --> 00:03:28.400
which would ultimately render how jsp page you can actually add list off exceptions inside

00:03:28.400 --> 00:03:28.700
a car.

00:03:28.700 --> 00:03:29.350
Libraries,

00:03:29.350 --> 00:03:30.680
for example,

00:03:30.680 --> 00:03:36.230
say that I won't execute this mattered whenever there is a handler,

00:03:36.230 --> 00:03:40.260
not phone exception as well as a null point exception.

00:03:40.260 --> 00:03:47.680
Say the fine and no.

00:03:47.680 --> 00:03:50.470
Whenever you have an ALP under exception,

00:03:50.470 --> 00:03:52.690
the same behavior would take place.

00:03:52.690 --> 00:03:56.250
And in order to make sure that we get another point exception,

00:03:56.250 --> 00:04:04.130
let's go inside our controller logic and then do something here that would explicitly throw

00:04:04.130 --> 00:04:05.550
in a blunder exception,

00:04:05.550 --> 00:04:10.460
I'm going to say if true,

00:04:10.460 --> 00:04:17.950
and then throw no point exception.

00:04:17.950 --> 00:04:21.170
Of course,

00:04:21.170 --> 00:04:24.150
we need to throw an object.

00:04:24.150 --> 00:04:28.690
All right,

00:04:28.690 --> 00:04:33.470
let's say the file build our project and then on the application,

00:04:33.470 --> 00:04:35.060
let me pause the video,

00:04:35.060 --> 00:04:40.550
do all those stuff and get back just to save some off your time.

00:04:40.550 --> 00:04:45.250
So here we are again,

00:04:45.250 --> 00:04:47.460
have old it on the application.

00:04:47.460 --> 00:04:53.190
Let me type in something and click Submit button district,

00:04:53.190 --> 00:04:55.060
throw an Al Ponte exception,

00:04:55.060 --> 00:04:59.170
and so we're able to see Theater Page.

00:04:59.170 --> 00:05:00.620
Of course,

00:05:00.620 --> 00:05:03.050
this is not a 44 patter,

00:05:03.050 --> 00:05:05.450
but I hope you got my point.

00:05:05.450 --> 00:05:06.620
And no,

00:05:06.620 --> 00:05:14.890
this tried to access a resource that is not present and again en garde.

00:05:14.890 --> 00:05:15.850
The exception.

00:05:15.850 --> 00:05:18.170
Hence we're seeing this page.

00:05:18.170 --> 00:05:20.550
This is more user friendly.

00:05:20.550 --> 00:05:22.740
Also,

00:05:22.740 --> 00:05:27.410
if you wish you can get more specific on which are all classes,

00:05:27.410 --> 00:05:29.850
it won't apply this method on.

00:05:29.850 --> 00:05:33.270
That's by sending para meters to the sanitation,

00:05:33.270 --> 00:05:42.240
and he knows the various ways you can do so you can have Controller Edwards annotation with

00:05:42.240 --> 00:05:47.250
the following Param Eter and this were targeting all the classes that are annotated with

00:05:47.250 --> 00:05:48.820
rest controller.

00:05:48.820 --> 00:05:49.790
The sanitation,

00:05:49.790 --> 00:05:50.180
by the way,

00:05:50.180 --> 00:05:57.300
comes into picture for rest ful FBI Similarly conspiracy If I a specific class and now you

00:05:57.300 --> 00:06:02.530
can target all the classes that are reciting inside the package Wherever this class is

00:06:02.530 --> 00:06:03.150
reciting,

00:06:03.150 --> 00:06:09.950
similarly can also target a package so that all the methods would be applicable in all the

00:06:09.950 --> 00:06:11.950
classes residing in this package.

00:06:11.950 --> 00:06:16.690
In our case,

00:06:16.690 --> 00:06:20.990
we left it to default so that it is applicable for all the controllers.

00:06:20.990 --> 00:06:22.990
I hope it makes sense cells easily.

