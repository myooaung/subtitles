WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.630
How can let us take a look at how you can add interceptors and traditional way without

00:00:04.630 --> 00:00:05.750
using spring boot?

00:00:05.750 --> 00:00:08.250
The approach is pretty much similar.

00:00:08.250 --> 00:00:12.400
All you have to do is to introduce the interceptor class in this manner,

00:00:12.400 --> 00:00:14.420
along with required methods.

00:00:14.420 --> 00:00:15.500
Pre handle,

00:00:15.500 --> 00:00:17.850
post handle after completion.

00:00:17.850 --> 00:00:18.900
And then,

00:00:18.900 --> 00:00:19.860
just as in the case,

00:00:19.860 --> 00:00:20.750
offspring boot,

00:00:20.750 --> 00:00:24.310
you do have to register this interceptor inside your conflict file.

00:00:24.310 --> 00:00:27.750
So here we have our Web conflict file,

00:00:27.750 --> 00:00:30.950
and we defined,

00:00:30.950 --> 00:00:32.190
however,

00:00:32.190 --> 00:00:34.240
bean Interceptor example.

00:00:34.240 --> 00:00:36.310
Just interceptor class,

00:00:36.310 --> 00:00:41.750
and then you have to register it by implementing dis mattered.

00:00:41.750 --> 00:00:47.310
This matter belongs to the Web gem basic conficker interface,

00:00:47.310 --> 00:00:50.860
and once you do so you're done.

00:00:50.860 --> 00:00:55.260
You're interceptor is in place and will be activated.

00:00:55.260 --> 00:00:58.750
Let's run our application,

00:00:58.750 --> 00:01:00.040
but pray out.

00:01:00.040 --> 00:01:01.050
Running the application.

00:01:01.050 --> 00:01:08.030
Do make sure that you build the project so that you will have an artifact ready to get

00:01:08.030 --> 00:01:09.850
deployed onto the server.

00:01:09.850 --> 00:01:20.280
Let's enter something,

00:01:20.280 --> 00:01:24.350
and it worked pretty well

