WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.070
Sometimes you may be required to generate queries.

00:00:03.070 --> 00:00:07.900
Dynamical it because it may not selfies that you read a static equity.

00:00:07.900 --> 00:00:09.100
For instance,

00:00:09.100 --> 00:00:17.710
you're trained to fetch list off students whose name would match with Sunder our Bob,

00:00:17.710 --> 00:00:19.450
our Jon.

00:00:19.450 --> 00:00:23.750
And it would pass these as arguments to the method.

00:00:23.750 --> 00:00:25.120
Well,

00:00:25.120 --> 00:00:26.600
if you write a static equity,

00:00:26.600 --> 00:00:27.800
something like this,

00:00:27.800 --> 00:00:32.250
it may not suffice because you're actually sending a list off names.

00:00:32.250 --> 00:00:33.090
And you,

00:00:33.090 --> 00:00:33.650
too accordingly,

00:00:33.650 --> 00:00:34.580
create the query.

00:00:34.580 --> 00:00:35.360
For example,

00:00:35.360 --> 00:00:36.650
if we have one more name,

00:00:36.650 --> 00:00:44.190
then we need to add one more clause like this so you don't know ahead of time how maney

00:00:44.190 --> 00:00:47.620
like clauses you should put in that case,

00:00:47.620 --> 00:00:53.120
the solution is JPs criteria equity and here is how we would use it.

00:00:53.120 --> 00:01:01.350
So in order to demonstrate this have added couple off more entries and here all day,

00:01:01.350 --> 00:01:05.680
and I'm trying to save them all to the database.

00:01:05.680 --> 00:01:12.610
And I'm also creating a hash set to add all the list off names so that we can search the

00:01:12.610 --> 00:01:13.800
records accordingly.

00:01:13.800 --> 00:01:19.890
And I'm using a set because I wanted to avoid any duplicate names.

00:01:19.890 --> 00:01:25.450
And then I'm trying to send that set as an argument to this method.

00:01:25.450 --> 00:01:27.150
Find students by name,

00:01:27.150 --> 00:01:33.950
which is in this class you cannot provide a behavior inside an interface.

00:01:33.950 --> 00:01:41.300
And so I have to create another class market as their depository and then provide the logic

00:01:41.300 --> 00:01:41.300
.

00:01:41.300 --> 00:01:48.050
And what we're trying to do in all these statements is we're trying to build a query that

00:01:48.050 --> 00:01:50.740
will dynamically used these names,

00:01:50.740 --> 00:01:52.410
all the set names.

00:01:52.410 --> 00:01:55.850
So we're going to be needing a criteria builder object,

00:01:55.850 --> 00:01:58.850
which can be provided by the container.

00:01:58.850 --> 00:02:04.840
So I'm using this particular annotation persistence context so that this would be

00:02:04.840 --> 00:02:10.150
dependence injected by the container and makes it available for us to use in this method

00:02:10.150 --> 00:02:12.510
and using that object,

00:02:12.510 --> 00:02:17.340
I'm trying to get the credit a builder object to build our query.

00:02:17.340 --> 00:02:22.100
And I'm trying to create criteria quickly object,

00:02:22.100 --> 00:02:28.580
which essentially means that we wanted to perform very operation on this particular entity

00:02:28.580 --> 00:02:28.580
.

00:02:28.580 --> 00:02:35.750
And I'm doing quitted out from stood in our class.

00:02:35.750 --> 00:02:39.890
So this would represent the student entity,

00:02:39.890 --> 00:02:42.050
this particular object,

00:02:42.050 --> 00:02:46.250
And then I'm getting more specific and choosing the particular field in it,

00:02:46.250 --> 00:02:47.530
which in this case,

00:02:47.530 --> 00:02:48.950
is going to be name.

00:02:48.950 --> 00:02:55.780
And then I'm trying to look through all these names using this for each construct and I'm

00:02:55.780 --> 00:02:59.660
creating list off predicates in this manner.

00:02:59.660 --> 00:03:04.150
And after that I'm trying to build the query itself.

00:03:04.150 --> 00:03:11.220
So I want to select list off students where the falling clauses with all the predicates

00:03:11.220 --> 00:03:12.850
that we had populated.

00:03:12.850 --> 00:03:15.850
And then finally,

00:03:15.850 --> 00:03:18.950
I'm trying to execute the query and get back the results,

00:03:18.950 --> 00:03:21.680
which would be sent back to the controller.

00:03:21.680 --> 00:03:27.250
And I'm trying to just displayed with sort statement that's when our application.

00:03:27.250 --> 00:03:44.650
So this should ideally fetch the records that match with stolen name Sunder and John and

00:03:44.650 --> 00:03:44.880
here,

00:03:44.880 --> 00:03:45.350
aren't they?

00:03:45.350 --> 00:03:49.250
We got the record cinder as we last,

00:03:49.250 --> 00:03:51.750
and John,

00:03:51.750 --> 00:04:00.050
I hope it makes sense.

