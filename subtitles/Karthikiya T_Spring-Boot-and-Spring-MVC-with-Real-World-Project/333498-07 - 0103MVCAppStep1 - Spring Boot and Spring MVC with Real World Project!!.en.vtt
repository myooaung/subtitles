WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.240
okay,

00:00:05.240 --> 00:00:07.950
It's time to create our for spring embassy project.

00:00:07.950 --> 00:00:13.670
And in order to explain things better have actually broken down the task into multiple

00:00:13.670 --> 00:00:14.250
steps.

00:00:14.250 --> 00:00:15.700
In the first step,

00:00:15.700 --> 00:00:21.730
we're going to be creating our project and add the dependencies are the required libraries

00:00:21.730 --> 00:00:22.850
to build our project.

00:00:22.850 --> 00:00:25.000
And as I've mentioned before,

00:00:25.000 --> 00:00:26.520
we're going to be using it to,

00:00:26.520 --> 00:00:26.850
like,

00:00:26.850 --> 00:00:29.410
maven to fulfill that purpose.

00:00:29.410 --> 00:00:31.110
And then after that,

00:00:31.110 --> 00:00:33.570
we're going to be introducing a JSP page,

00:00:33.570 --> 00:00:35.750
which will be the entry point.

00:00:35.750 --> 00:00:39.750
And this is the place where the user would interact from the browser.

00:00:39.750 --> 00:00:41.660
He would enter some retails,

00:00:41.660 --> 00:00:47.110
and those details will be sent along with destructive request to the front controller and

00:00:47.110 --> 00:00:48.100
then the dispatcher soul.

00:00:48.100 --> 00:00:51.540
It will delegate that call to the controller logic,

00:00:51.540 --> 00:00:53.050
using the hand of mapping.

00:00:53.050 --> 00:00:54.350
And then after that,

00:00:54.350 --> 00:00:54.730
finally,

00:00:54.730 --> 00:00:59.650
we will render back some result by using a view result war.

00:00:59.650 --> 00:01:05.650
So let's take it off the step one where we want to create a project.

00:01:05.650 --> 00:01:12.170
So inside the eclipse Goto file New Maven project.

00:01:12.170 --> 00:01:14.150
If you don't see maven project in here,

00:01:14.150 --> 00:01:17.450
click on other and search for maven.

00:01:17.450 --> 00:01:25.550
You should be able to look at me even project in here and you don't have to install any

00:01:25.550 --> 00:01:29.480
additional plug ins in order for your eclipse and Roman to stop supporting maven.

00:01:29.480 --> 00:01:34.090
Moving is such a popular thing that Eclipse has built in support for Megan.

00:01:34.090 --> 00:01:37.060
Choose the project and click next.

00:01:37.060 --> 00:01:43.200
What we're seeing right now is a prompt that is specific to maven Project.

00:01:43.200 --> 00:01:47.950
Going into details about this prompt is definitely beyond the scope of this course.

00:01:47.950 --> 00:01:52.680
So just fall along with me and do exactly what I'm doing.

00:01:52.680 --> 00:01:56.480
Just leave everything to default and click next.

00:01:56.480 --> 00:02:01.250
But in this prompt where you have to choose the archetype,

00:02:01.250 --> 00:02:09.470
I would recommend you to choose maven archetype who are back because this is the kind of

00:02:09.470 --> 00:02:11.700
project that will help us create the war file,

00:02:11.700 --> 00:02:16.950
which we can then deploy onto the Tomcats over to see our application running.

00:02:16.950 --> 00:02:19.090
Choose that and click next.

00:02:19.090 --> 00:02:22.260
And as part of the group I d.

00:02:22.260 --> 00:02:23.880
Just Entercom got company.

00:02:23.880 --> 00:02:29.080
There are certain naming conventions that we need to follow again.

00:02:29.080 --> 00:02:32.590
It's beyond the scope of this course to talk about all of that.

00:02:32.590 --> 00:02:36.360
Just try to type in exactly what I typed group.

00:02:36.360 --> 00:02:44.270
It is going to become the company and we lived Abortion toe the default one as part off

00:02:44.270 --> 00:02:44.890
artifact I.

00:02:44.890 --> 00:02:45.320
D.

00:02:45.320 --> 00:02:55.640
I'm going to be entering spring hyphen garage stands for a spring project and then hit

00:02:55.640 --> 00:02:56.140
Finish.

00:02:56.140 --> 00:02:58.150
It's going to take a while.

00:02:58.150 --> 00:03:02.450
You can see the progress on the bottom right corner,

00:03:02.450 --> 00:03:05.450
and once it's done,

00:03:05.450 --> 00:03:11.450
you should be able to see that project getting populated on this left hand side panel.

00:03:11.450 --> 00:03:14.350
We are having another.

00:03:14.350 --> 00:03:16.380
And if you notice,

00:03:16.380 --> 00:03:16.880
actually,

00:03:16.880 --> 00:03:22.550
we have a JSP page created by Maven already with some country to tell the world.

00:03:22.550 --> 00:03:26.270
But we're seeing another because we don't have this older.

00:03:26.270 --> 00:03:27.900
Maybe I in the class part.

00:03:27.900 --> 00:03:34.700
So let's try to introduce this holiday P I as well as this spring libraries required for a

00:03:34.700 --> 00:03:35.370
project.

00:03:35.370 --> 00:03:42.670
And the way we're going to do that is by opening this pile called Palmer XML File stands

00:03:42.670 --> 00:03:43.970
for Project Object mortal.

00:03:43.970 --> 00:03:47.070
And if you're not used to maven,

00:03:47.070 --> 00:03:49.110
this may look a little intimidating.

00:03:49.110 --> 00:03:53.890
But always concerned about here is to add few tags,

00:03:53.890 --> 00:04:02.090
has spot off the dependencies so that maven will download all the libraries for us in order

00:04:02.090 --> 00:04:03.910
to create a spring Web application.

00:04:03.910 --> 00:04:06.980
We would basically need couple off libraries.

00:04:06.980 --> 00:04:08.100
The first off,

00:04:08.100 --> 00:04:14.870
which is a spring core which will enable all the spring core functionalities and the other

00:04:14.870 --> 00:04:18.780
is the spring Web Embassy to create above applications.

00:04:18.780 --> 00:04:20.250
Along with that,

00:04:20.250 --> 00:04:23.550
we're also going to be including this all that FBI library.

00:04:23.550 --> 00:04:28.020
Once I had all these types inside our project,

00:04:28.020 --> 00:04:32.600
let me copy it and passed it inside the dependencies.

00:04:32.600 --> 00:04:36.570
Stag Hello,

00:04:36.570 --> 00:04:39.650
Contra shift Death to give proper indentation.

00:04:39.650 --> 00:04:41.660
And then after that,

00:04:41.660 --> 00:04:44.150
let me also add the following property in here.

00:04:44.150 --> 00:04:45.820
Well,

00:04:45.820 --> 00:04:49.750
I could actually copy this portion everywhere,

00:04:49.750 --> 00:04:57.450
but the reason why I had to separate it out is because at the moment I'm using release.

00:04:57.450 --> 00:05:01.160
Why 16 for all the spring libraries in future.

00:05:01.160 --> 00:05:03.750
If I would like to upgrade to a latest wash in,

00:05:03.750 --> 00:05:10.350
then I could just simply change in here and don't have to change in all the locations.

00:05:10.350 --> 00:05:14.850
So let me also add this property inside our formed a maximal file.

00:05:14.850 --> 00:05:21.560
And after that,

00:05:21.560 --> 00:05:31.690
all you have to do is to right click on the project maven a bit project only then will may

00:05:31.690 --> 00:05:39.420
even go and download all the required libraries into your local depository and that's about

00:05:39.420 --> 00:05:39.750
it.

00:05:39.750 --> 00:05:45.580
The beauty of it may even is that maybe it is not only going to download these particular

00:05:45.580 --> 00:05:46.310
libraries,

00:05:46.310 --> 00:05:50.350
but also the jar files that these libraries rely on.

00:05:50.350 --> 00:05:57.960
So it will just simply download everything into end that your project ever need.

00:05:57.960 --> 00:06:00.870
And with this we're done with step number one,

00:06:00.870 --> 00:06:03.480
we will move on with step number two.

