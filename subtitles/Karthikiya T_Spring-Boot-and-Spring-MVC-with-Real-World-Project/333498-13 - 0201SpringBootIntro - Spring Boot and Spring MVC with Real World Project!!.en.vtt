WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.940
I'm pretty sure that you have been hearing about spring boot for a while,

00:00:03.940 --> 00:00:07.300
doing the fact that it is such a buzz word in the industry,

00:00:07.300 --> 00:00:09.600
but you don't know exactly what it is.

00:00:09.600 --> 00:00:10.110
Well,

00:00:10.110 --> 00:00:15.150
hopefully with this we will have some better picture on Spring Boat and the problem that it

00:00:15.150 --> 00:00:16.370
is trying to address.

00:00:16.370 --> 00:00:19.630
So before we talk about the spring boot,

00:00:19.630 --> 00:00:23.720
let us try to understand the problem that it is trying to address.

00:00:23.720 --> 00:00:24.220
I mean,

00:00:24.220 --> 00:00:28.930
all the tools out there must have come into existence to solve a problem created by some

00:00:28.930 --> 00:00:29.680
other technology.

00:00:29.680 --> 00:00:32.510
Right and springboard is no exception there.

00:00:32.510 --> 00:00:36.620
So let's talk about the problem first as a developer,

00:00:36.620 --> 00:00:41.150
even if you were to write a simple hello world application using spring framework,

00:00:41.150 --> 00:00:44.950
the following are the typical steps that you need to take.

00:00:44.950 --> 00:00:50.360
You would create the project using a project management to like Meghan or Gradel,

00:00:50.360 --> 00:00:52.730
and this is going to take place,

00:00:52.730 --> 00:00:55.020
probably in an idea like eclipse.

00:00:55.020 --> 00:00:56.750
And after you do that,

00:00:56.750 --> 00:00:58.460
you'll have to take care off,

00:00:58.460 --> 00:01:04.380
adding the dependencies or the required libraries or the jar files that you're going to use

00:01:04.380 --> 00:01:05.250
in your project.

00:01:05.250 --> 00:01:06.570
No,

00:01:06.570 --> 00:01:07.910
this mess on simple,

00:01:07.910 --> 00:01:12.840
but practically takes a while to do the research on what are all the libraries you'd be

00:01:12.840 --> 00:01:14.170
requiring in your project.

00:01:14.170 --> 00:01:20.730
And then you have to take care of finding the ideal tags that you need to add in the palm

00:01:20.730 --> 00:01:26.900
the maximal file so that men will take care of fetching all those libraries into the class

00:01:26.900 --> 00:01:27.250
part.

00:01:27.250 --> 00:01:29.560
And after that,

00:01:29.560 --> 00:01:30.940
you have to take care up,

00:01:30.940 --> 00:01:32.260
installing all the required.

00:01:32.260 --> 00:01:33.160
So first,

00:01:33.160 --> 00:01:35.300
you have to download the Tomcats over,

00:01:35.300 --> 00:01:41.280
install it and also configure it in your I D so that you can run your application directly

00:01:41.280 --> 00:01:43.050
from your I D.

00:01:43.050 --> 00:01:46.150
And if you're using a database software,

00:01:46.150 --> 00:01:48.090
you have to install that as well.

00:01:48.090 --> 00:01:53.840
And only after performing all these steps will you actually jump into writing the

00:01:53.840 --> 00:01:55.150
application logic.

00:01:55.150 --> 00:01:57.920
And the story continues.

00:01:57.920 --> 00:01:59.700
After you write the application logic,

00:01:59.700 --> 00:02:02.250
you have to create a lot of convict files.

00:02:02.250 --> 00:02:03.620
For example,

00:02:03.620 --> 00:02:09.330
you have to define the dispatcher Soviet in the web dot xml file or equal and java file,

00:02:09.330 --> 00:02:11.710
and you also need to define all the beans,

00:02:11.710 --> 00:02:12.740
for example,

00:02:12.740 --> 00:02:16.270
something like a view resolver in the Web conflict file,

00:02:16.270 --> 00:02:17.350
etcetera,

00:02:17.350 --> 00:02:18.670
and similarly,

00:02:18.670 --> 00:02:19.870
for using database,

00:02:19.870 --> 00:02:21.640
you need to take care off,

00:02:21.640 --> 00:02:27.760
introducing some additional conflict files along with the data source and entity manager to

00:02:27.760 --> 00:02:29.300
be able to talk to the database,

00:02:29.300 --> 00:02:29.890
etcetera.

00:02:29.890 --> 00:02:31.780
And then after that,

00:02:31.780 --> 00:02:34.440
you take care of building the project,

00:02:34.440 --> 00:02:35.740
deploying Dart,

00:02:35.740 --> 00:02:36.370
in fact,

00:02:36.370 --> 00:02:39.450
onto the server to see it working.

00:02:39.450 --> 00:02:41.810
But what is the problem here?

00:02:41.810 --> 00:02:43.380
The problem here is,

00:02:43.380 --> 00:02:47.750
as a developer is supposed to be focused on writing your application logic.

00:02:47.750 --> 00:02:53.040
But you're forced to pay attention to a lot of other aspects which will help you run your

00:02:53.040 --> 00:02:53.870
application.

00:02:53.870 --> 00:02:55.140
And remember,

00:02:55.140 --> 00:03:00.290
all the steps are required to run a very simple application like Hello world.

00:03:00.290 --> 00:03:04.460
You're probably not going to work on a hello world app when you're working on real world

00:03:04.460 --> 00:03:04.890
projects,

00:03:04.890 --> 00:03:05.220
right?

00:03:05.220 --> 00:03:07.610
You're going to deal with a lot of conflict files.

00:03:07.610 --> 00:03:09.820
You're going to deal with thousands off lines off court.

00:03:09.820 --> 00:03:11.900
Imagine amount of time that the dollar,

00:03:11.900 --> 00:03:18.450
perhaps to spend on all these aspect about from reading the actual application logic.

00:03:18.450 --> 00:03:21.330
That's a huge waste of time,

00:03:21.330 --> 00:03:24.890
and it would severely impact the overall productivity off the company.

00:03:24.890 --> 00:03:28.020
They're going to be delay in the project deliveries,

00:03:28.020 --> 00:03:28.850
etcetera.

00:03:28.850 --> 00:03:36.150
So how about having some kind off a tool that will take care off step 1234 and six on eight

00:03:36.150 --> 00:03:36.150
.

00:03:36.150 --> 00:03:37.790
And as a dollar per you,

00:03:37.790 --> 00:03:41.800
the only required to focus on writing the application logic.

00:03:41.800 --> 00:03:46.380
That's exactly what Springboard does it's going to add.

00:03:46.380 --> 00:03:47.900
The dependence is for you.

00:03:47.900 --> 00:03:50.960
It's going to use an embedded silver there.

00:03:50.960 --> 00:03:53.180
We don't have to install the silver manually.

00:03:53.180 --> 00:03:55.090
Same is the case with the database.

00:03:55.090 --> 00:03:59.740
Spring boot will also take care off at in the conflict files for you,

00:03:59.740 --> 00:04:03.840
depending on the kind off libraries that are required in your project.

00:04:03.840 --> 00:04:05.550
So on and so forth.

00:04:05.550 --> 00:04:06.410
Well,

00:04:06.410 --> 00:04:08.600
all this Miss own little futuristic,

00:04:08.600 --> 00:04:10.340
but it is in place.

00:04:10.340 --> 00:04:13.580
Spring Boot is already doing that for us.

00:04:13.580 --> 00:04:16.170
Once we take a look at an example,

00:04:16.170 --> 00:04:18.450
you'll have a better picture on the same.

00:04:18.450 --> 00:04:20.920
And here is official definition.

00:04:20.920 --> 00:04:25.610
Off the spring boot springboard makes it easy to create standalone production.

00:04:25.610 --> 00:04:32.860
Great spring based applications that you can just run were taken opinionated view off the

00:04:32.860 --> 00:04:33.910
spring platform.

00:04:33.910 --> 00:04:38.150
Enter party libraries so you can get started with the minimum,

00:04:38.150 --> 00:04:43.080
plus more springboard applications need where a little spring configuration.

00:04:43.080 --> 00:04:47.650
I'm pretty sure that this definition may not make complete sense to you at this point,

00:04:47.650 --> 00:04:50.420
but once after we take a look at a simple example,

00:04:50.420 --> 00:04:51.340
offspring boot.

00:04:51.340 --> 00:04:53.670
This definition will make a perfect sense,

00:04:53.670 --> 00:04:55.350
so we'll get back on this letter.

00:04:55.350 --> 00:05:00.160
And here are some of the features that spring boot offers at a very high level.

00:05:00.160 --> 00:05:01.080
Again,

00:05:01.080 --> 00:05:03.790
we're not going to talk about these right now.

00:05:03.790 --> 00:05:05.750
We'll take a look an example first,

00:05:05.750 --> 00:05:09.910
and then we'll get back here to uncover some of these features,

00:05:09.910 --> 00:05:11.850
thereby you will understand better.

