WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.650
Let's talk about various different mapping annotations you can include as part of the

00:00:04.650 --> 00:00:07.450
controller class are controller logic.

00:00:07.450 --> 00:00:07.950
First,

00:00:07.950 --> 00:00:10.350
let's talk about the request mapping annotation.

00:00:10.350 --> 00:00:13.900
The request mapping annotation is the gender can notation,

00:00:13.900 --> 00:00:19.670
meaning that whatever the Ural pattern that you specify has an attribute is applicable for

00:00:19.670 --> 00:00:21.050
all scdp methods.

00:00:21.050 --> 00:00:24.120
So be to get request or post request.

00:00:24.120 --> 00:00:25.550
It doesn't matter.

00:00:25.550 --> 00:00:29.780
The annotation is applicable for all those cases.

00:00:29.780 --> 00:00:30.760
However,

00:00:30.760 --> 00:00:35.450
if you would like to get more specific and target only a specific actually being method,

00:00:35.450 --> 00:00:37.680
then you can have the following syntax.

00:00:37.680 --> 00:00:40.750
He's a stab to add an additional attribute,

00:00:40.750 --> 00:00:43.370
telling the matter that you want to target.

00:00:43.370 --> 00:00:44.810
So in this case,

00:00:44.810 --> 00:00:52.340
we're just targeting only the get requests and would like to map for the following your

00:00:52.340 --> 00:00:52.910
baton.

00:00:52.910 --> 00:00:55.090
However,

00:00:55.090 --> 00:01:01.460
this is all the way off declaring the sanitation in the reason abortions offspring we know

00:01:01.460 --> 00:01:05.500
have more specific annotations specific toe a Chester diplomatic.

00:01:05.500 --> 00:01:07.360
We have get mapping,

00:01:07.360 --> 00:01:10.090
which will accept only get requests.

00:01:10.090 --> 00:01:11.210
Similarly,

00:01:11.210 --> 00:01:13.100
we have post mapping,

00:01:13.100 --> 00:01:14.170
put mapping,

00:01:14.170 --> 00:01:16.350
delete mapping and patch mapping.

00:01:16.350 --> 00:01:18.520
If you're using Web browser,

00:01:18.520 --> 00:01:22.650
then only these two annotations would be relevant.

00:01:22.650 --> 00:01:27.650
Brother is not capable off sending other types off requests like Put,

00:01:27.650 --> 00:01:28.740
delete or patch.

00:01:28.740 --> 00:01:29.590
However,

00:01:29.590 --> 00:01:31.500
if you're using restaurant Web services,

00:01:31.500 --> 00:01:34.750
then definitely other matters will come into picture as well.

00:01:34.750 --> 00:01:41.900
In rest Web services get would mean that want to retrieve a resource or a database entry

00:01:41.900 --> 00:01:49.350
post would mean insert a resource put would mean you want to replace a resource.

00:01:49.350 --> 00:01:55.560
The late would mean just as the name suggests you wanted the leader Resource patch would

00:01:55.560 --> 00:01:59.490
mean you want to partial update a resource or an entry in the database.

00:01:59.490 --> 00:02:03.090
Since we're not concerned with restaurant Web services at the moment,

00:02:03.090 --> 00:02:06.460
we're only going to focus on these two annotations.

00:02:06.460 --> 00:02:07.180
In fact,

00:02:07.180 --> 00:02:12.830
we're going to take a look at a very good example by creating a very simple application and

00:02:12.830 --> 00:02:18.460
by using these annotations does not mean that we're going to neglect the request mapping

00:02:18.460 --> 00:02:19.150
annotation.

00:02:19.150 --> 00:02:20.290
In fact,

00:02:20.290 --> 00:02:25.940
the perfect design practice is to have the sanitation added at the control of class level

00:02:25.940 --> 00:02:31.270
and then get more specific with these annotations at method level.

00:02:31.270 --> 00:02:35.210
Once we take a look at how we write our example application,

00:02:35.210 --> 00:02:40.150
you'll have a better picture on the same his application that we're going to create.

00:02:40.150 --> 00:02:42.590
Imagine that you're given with the project off,

00:02:42.590 --> 00:02:44.980
creating an application we're in.

00:02:44.980 --> 00:02:45.920
When the user visits,

00:02:45.920 --> 00:02:50.680
a website they use must be able to design his or her own T shirt.

00:02:50.680 --> 00:02:53.390
So this is the home page off our application.

00:02:53.390 --> 00:02:55.710
And when we click on design,

00:02:55.710 --> 00:02:56.750
which is a link,

00:02:56.750 --> 00:03:01.850
we're going to send a get request to a controller logic where and we're going to populate

00:03:01.850 --> 00:03:02.720
some data,

00:03:02.720 --> 00:03:09.290
which will then be sent back as a mortal data to this view technology in order to render

00:03:09.290 --> 00:03:10.660
all those details.

00:03:10.660 --> 00:03:11.470
In this case,

00:03:11.470 --> 00:03:16.490
we would let the user customers a T shirt by selecting all these options,

00:03:16.490 --> 00:03:20.950
including the name that he want to give to his T shirt.

00:03:20.950 --> 00:03:26.820
And this time I have chosen time leave has a template engine just so that we can touch on

00:03:26.820 --> 00:03:29.980
all those view technologies that are popular with spring.

00:03:29.980 --> 00:03:33.690
Once the user chooses all the required customization,

00:03:33.690 --> 00:03:35.950
they use the word,

00:03:35.950 --> 00:03:42.580
then click on proceed and we're going to send a post request toe yet another matter inside

00:03:42.580 --> 00:03:43.650
the same controller.

00:03:43.650 --> 00:03:48.650
And that method logic would just simply right back the text.

00:03:48.650 --> 00:03:50.400
Basically,

00:03:50.400 --> 00:03:55.030
all the options that the user had selected in the previous page down the line.

00:03:55.030 --> 00:03:56.490
As we progress through the course,

00:03:56.490 --> 00:04:02.090
we're going to introduce some additional models inside our application one off,

00:04:02.090 --> 00:04:07.430
which is going to be a database so that we can actually store the data into the database

00:04:07.430 --> 00:04:08.750
and do some processing.

00:04:08.750 --> 00:04:10.200
But for now,

00:04:10.200 --> 00:04:12.450
this is how our application is going to look like.

00:04:12.450 --> 00:04:14.740
Once we have a project,

00:04:14.740 --> 00:04:15.520
walk through,

00:04:15.520 --> 00:04:17.950
you'll understand things in much better way.

