WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.630
So let's take a look at a simple example offspring Jerry B.

00:00:03.630 --> 00:00:04.030
C.

00:00:04.030 --> 00:00:07.850
So that you'll get a better picture on the problem that it is trying to solve.

00:00:07.850 --> 00:00:09.260
Possible.

00:00:09.260 --> 00:00:12.600
Let us take a look at an example without using spring boot,

00:00:12.600 --> 00:00:16.570
and then we'll move on and do the same thing using spring boot.

00:00:16.570 --> 00:00:19.000
And since we're not using spring boot,

00:00:19.000 --> 00:00:22.080
we have to add the dependencies on our own.

00:00:22.080 --> 00:00:27.100
Here are the dependence is that any spring embassy project should be having.

00:00:27.100 --> 00:00:28.480
In addition to that,

00:00:28.480 --> 00:00:32.650
we're going to add a few more dependence is to interact with the data bases in jail.

00:00:32.650 --> 00:00:34.740
ABC The first off,

00:00:34.740 --> 00:00:36.000
which is optional,

00:00:36.000 --> 00:00:38.880
incur severe using transactions in your project.

00:00:38.880 --> 00:00:42.050
Then you would be needing these two dependencies.

00:00:42.050 --> 00:00:43.830
And of course,

00:00:43.830 --> 00:00:45.320
our example is pretty simple.

00:00:45.320 --> 00:00:47.280
We may not be needing transactions,

00:00:47.280 --> 00:00:49.480
but just for demonstration sake,

00:00:49.480 --> 00:00:53.350
I'm going to be using transactions inside our logic.

00:00:53.350 --> 00:00:56.350
Hence our been eating these dependencies.

00:00:56.350 --> 00:00:57.470
The next stop,

00:00:57.470 --> 00:00:59.450
which is the most obvious fund.

00:00:59.450 --> 00:01:04.550
You would need the spring very busy library and depending on the database that you're using

00:01:04.550 --> 00:01:09.960
unit to had its specific driver dependencies.

00:01:09.960 --> 00:01:10.780
In my case,

00:01:10.780 --> 00:01:12.660
I'm using post area school database.

00:01:12.660 --> 00:01:15.390
And so I wanted to have this dependency.

00:01:15.390 --> 00:01:17.730
This is a jet visit.

00:01:17.730 --> 00:01:20.650
Driver Pop was great skill,

00:01:20.650 --> 00:01:26.060
and here is the console off was were skill accordingly.

00:01:26.060 --> 00:01:27.990
Must be having your own database,

00:01:27.990 --> 00:01:32.250
and you should be able to log into the database and run some commands.

00:01:32.250 --> 00:01:36.850
So do make sure that your database is working before you run the project.

00:01:36.850 --> 00:01:38.480
Next,

00:01:38.480 --> 00:01:44.630
let's go toe the controller and take a look at the larger Connect here.

00:01:44.630 --> 00:01:46.680
I'm trying to dependents Inject something.

00:01:46.680 --> 00:01:49.090
Student depository.

00:01:49.090 --> 00:01:50.850
Let's take a look at it.

00:01:50.850 --> 00:01:54.200
Here's a class student depositary.

00:01:54.200 --> 00:02:01.330
This is essentially like a date access object in a typical J two EE application and in

00:02:01.330 --> 00:02:03.400
spring applications for such objects,

00:02:03.400 --> 00:02:09.610
we would annotate it with had direct repository so that it can be found by spring with

00:02:09.610 --> 00:02:10.570
competent scan.

00:02:10.570 --> 00:02:14.520
And inside here we just have one method find,

00:02:14.520 --> 00:02:20.260
all with which would be able to fetch all the students that are available in the database.

00:02:20.260 --> 00:02:29.040
So basically what I'm going to do is we have a database called School DB inside which we

00:02:29.040 --> 00:02:33.600
have a table with the name students with list off students.

00:02:33.600 --> 00:02:34.550
Well,

00:02:34.550 --> 00:02:40.890
our databases not populated yet We have a script that would populate the database once

00:02:40.890 --> 00:02:42.090
we're on our application.

00:02:42.090 --> 00:02:44.970
So it is Ah,

00:02:44.970 --> 00:02:48.550
SQL statement with which I can fetch all the students.

00:02:48.550 --> 00:02:53.930
But here's something really cool jelly busy template,

00:02:53.930 --> 00:02:55.940
which I'm trying toe dependence.

00:02:55.940 --> 00:02:56.550
Inject.

00:02:56.550 --> 00:03:01.450
Let's take a look at the Web conflict file and see what's happening in there.

00:03:01.450 --> 00:03:06.580
So we have the data visit template defined in here,

00:03:06.580 --> 00:03:09.240
and it is taken one argument,

00:03:09.240 --> 00:03:10.700
which is the data source.

00:03:10.700 --> 00:03:13.560
And here is where I'm populating the date.

00:03:13.560 --> 00:03:18.560
A sore subject with all the connection para meters specific to the database that you're

00:03:18.560 --> 00:03:19.150
using.

00:03:19.150 --> 00:03:20.350
In my case,

00:03:20.350 --> 00:03:25.590
I'm using Post Grad school until all the connection batter meters are specific to my

00:03:25.590 --> 00:03:26.370
database.

00:03:26.370 --> 00:03:28.330
Well,

00:03:28.330 --> 00:03:33.350
you don't see them Action battle matters in here because I'm fetching them from the

00:03:33.350 --> 00:03:38.400
external conflagration application or properties which recites in the Resources folder.

00:03:38.400 --> 00:03:41.990
And here are the connection para meters.

00:03:41.990 --> 00:03:45.650
You must be having similar perimeters no matter what database you're using,

00:03:45.650 --> 00:03:49.890
but do make sure that you point to the correct database.

00:03:49.890 --> 00:03:50.750
Correct.

00:03:50.750 --> 00:03:51.480
I p address.

00:03:51.480 --> 00:03:57.770
We're about your databases running and the port number in which your software is running.

00:03:57.770 --> 00:04:06.170
Here's a name and password off the database and the driver class name specific to your

00:04:06.170 --> 00:04:06.880
database.

00:04:06.880 --> 00:04:13.340
I'm trying to fetch all these details using these keys inside our Web conflict file.

00:04:13.340 --> 00:04:16.850
So we're using this and Roman Variable,

00:04:16.850 --> 00:04:25.250
which is auto wired so that we can fetch all those properties.

00:04:25.250 --> 00:04:30.650
And once we populate all the connection perimeters,

00:04:30.650 --> 00:04:36.690
Hamilton is in this class provided by spring framework results database populate.

00:04:36.690 --> 00:04:36.950
Er,

00:04:36.950 --> 00:04:46.280
here's in which I'm trying to execute a script inside my database and here is a script with

00:04:46.280 --> 00:04:47.850
the daughter school extension,

00:04:47.850 --> 00:04:51.380
and this is going to go inside the Resources folder as well.

00:04:51.380 --> 00:04:57.800
And all I'm trying to do is I'm trying to first drop the table just in case if it is

00:04:57.800 --> 00:05:02.610
already present and then I'm trying to create the student table.

00:05:02.610 --> 00:05:06.020
It would have these four fields Heidi,

00:05:06.020 --> 00:05:13.650
name of the student age of the student and some description about the student and here,

00:05:13.650 --> 00:05:15.850
a couple off interested on trying to insert.

00:05:15.850 --> 00:05:20.680
And finally,

00:05:20.680 --> 00:05:23.250
isn't this matter?

00:05:23.250 --> 00:05:24.700
Execute off database,

00:05:24.700 --> 00:05:26.250
populate er metals.

00:05:26.250 --> 00:05:36.160
I'm telling spring to execute the script inside the database and returning the data source

00:05:36.160 --> 00:05:36.160
,

00:05:36.160 --> 00:05:41.480
which will be fed to the data best template Let's go back.

00:05:41.480 --> 00:05:45.850
So once you have this object,

00:05:45.850 --> 00:05:48.570
we can call the smart that query.

00:05:48.570 --> 00:05:53.110
We have a lot of other methods which will be exporting incoming videos,

00:05:53.110 --> 00:05:56.110
and this meant that takes a couple off arguments.

00:05:56.110 --> 00:05:57.140
The first off,

00:05:57.140 --> 00:06:04.450
which is SQL in the form of string and second is a class that implements row mapper.

00:06:04.450 --> 00:06:11.860
What this allows us to do is to map all the first data to a list off student so that we can

00:06:11.860 --> 00:06:12.950
display them.

00:06:12.950 --> 00:06:17.760
And since I'm going to need this pro mapper only within this class,

00:06:17.760 --> 00:06:21.440
I'm using the No Class to do that job for me.

00:06:21.440 --> 00:06:27.550
Here's a class a temperamental mapper and this interface has only one method.

00:06:27.550 --> 00:06:29.040
My pro.

00:06:29.040 --> 00:06:31.200
That takes a couple off arguments.

00:06:31.200 --> 00:06:31.740
The first off,

00:06:31.740 --> 00:06:37.270
which is a result set which is fetched from the database and the second argument is the

00:06:37.270 --> 00:06:38.350
current rule number.

00:06:38.350 --> 00:06:46.450
And here we have said all statements that would map each of the elements in the results set

00:06:46.450 --> 00:06:53.050
with that did evil object which I've created specifically for this purpose.

00:06:53.050 --> 00:07:00.630
So we have a student class with the exact same feels with the gators and centres,

00:07:00.630 --> 00:07:04.600
including the to stream method so that when we try to display these objects,

00:07:04.600 --> 00:07:06.650
we can see something meaningful.

00:07:06.650 --> 00:07:10.960
And finally,

00:07:10.960 --> 00:07:14.140
we're going to written back the list off students,

00:07:14.140 --> 00:07:17.950
which will be received inside the controller.

00:07:17.950 --> 00:07:24.560
And I'm trying to display here as a last on the browser with the response writer.

00:07:24.560 --> 00:07:28.560
That's from our application and see how things are going.

00:07:28.560 --> 00:07:32.810
Of course,

00:07:32.810 --> 00:07:36.950
it's always a good idea to clean the server,

00:07:36.950 --> 00:07:57.050
do a mean clean off the project so that all the old artifacts would be wiped out and then

00:07:57.050 --> 00:08:00.270
finally run has do.

00:08:00.270 --> 00:08:01.910
Make sure that you do may have an update,

00:08:01.910 --> 00:08:05.780
though once after you add the dependence is have already done that.

00:08:05.780 --> 00:08:07.050
So I'm not doing it again.

00:08:07.050 --> 00:08:23.150
But you should and then install Let's from our application.

00:08:23.150 --> 00:08:35.030
Well,

00:08:35.030 --> 00:08:36.550
this form is it element.

00:08:36.550 --> 00:08:42.250
All we want is to send a request with this mapping,

00:08:42.250 --> 00:08:43.560
and sure enough,

00:08:43.560 --> 00:08:44.690
we're getting the results.

00:08:44.690 --> 00:08:54.880
I'm going to make this project available for you to download.

00:08:54.880 --> 00:08:57.950
You can take a look at it are you can experiment with it.

00:08:57.950 --> 00:09:03.740
Next.

00:09:03.740 --> 00:09:08.580
We're going to take a look at how we can do the same isn't spring boot and then we'll talk

00:09:08.580 --> 00:09:10.090
about a list of problems that spring.

00:09:10.090 --> 00:09:11.110
Jarvis's hold

