WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.730
Okay,

00:00:01.730 --> 00:00:05.360
let's talk about what spring does or see a sort off attack.

00:00:05.360 --> 00:00:07.690
See a sort of or cross site request.

00:00:07.690 --> 00:00:11.450
Forgery attack is one of the common at next number hackers.

00:00:11.450 --> 00:00:15.250
The best way to understand it is with a quick demonstration.

00:00:15.250 --> 00:00:21.310
So what I have here is a very minimal banking application which would allow me to send

00:00:21.310 --> 00:00:23.850
funds to my friend and many states.

00:00:23.850 --> 00:00:26.990
A banking application has a minimal security measure.

00:00:26.990 --> 00:00:27.790
It needs toe,

00:00:27.790 --> 00:00:30.250
have authentication in place.

00:00:30.250 --> 00:00:35.850
And also what are the forms that I use Had to make sure that I use them at the post,

00:00:35.850 --> 00:00:40.820
not get post is more secure combat to get No,

00:00:40.820 --> 00:00:44.600
it enabled your indication of added the security dependency,

00:00:44.600 --> 00:00:49.280
and this will automatically enable the authentication for our application.

00:00:49.280 --> 00:00:54.050
And here I have a form which goes inside the index file.

00:00:54.050 --> 00:00:57.010
So the moment I log into our application,

00:00:57.010 --> 00:00:58.790
this is a page that I would see.

00:00:58.790 --> 00:01:02.450
And once after I filled the form and submit the details,

00:01:02.450 --> 00:01:05.750
a post request would be sent to the following the source.

00:01:05.750 --> 00:01:07.510
So this is the map.

00:01:07.510 --> 00:01:09.450
Did that will be in worked,

00:01:09.450 --> 00:01:16.020
and all I'm trying to do here is I'm just adding the name as well as the amount as part of

00:01:16.020 --> 00:01:20.980
para meters and then trying to display them in the next page or the view.

00:01:20.980 --> 00:01:28.870
So money the Monterey wanted to send successfully send to the person that I wanted to send

00:01:28.870 --> 00:01:28.870
.

00:01:28.870 --> 00:01:33.940
So let's take a look at the quick demonstration off this application.

00:01:33.940 --> 00:01:35.440
Let's go to Broza.

00:01:35.440 --> 00:01:36.350
But before that,

00:01:36.350 --> 00:01:44.550
that start out application and copied this past for generated By spring,

00:01:44.550 --> 00:01:51.290
I would say User and I want to log in.

00:01:51.290 --> 00:01:56.410
I'm going to enter the recipient name.

00:01:56.410 --> 00:01:59.520
It's a Bob and I corn number blah,

00:01:59.520 --> 00:01:59.690
blah,

00:01:59.690 --> 00:01:59.930
blah.

00:01:59.930 --> 00:02:00.610
Whatever.

00:02:00.610 --> 00:02:08.050
Doesn't matter just doesn't matter in just any type in any random number.

00:02:08.050 --> 00:02:12.150
And the moon that I wanted to send them is 1 $20.

00:02:12.150 --> 00:02:17.250
So money 1 $20 successfully sent to Bob.

00:02:17.250 --> 00:02:18.110
Now,

00:02:18.110 --> 00:02:20.470
before I longer from this application,

00:02:20.470 --> 00:02:25.340
I was browsing other websites and suddenly I came across with something like this.

00:02:25.340 --> 00:02:26.360
Congratulations.

00:02:26.360 --> 00:02:31.780
You won a lot to your 50,000 click here to receive your $50,000.

00:02:31.780 --> 00:02:33.140
I'm very excited.

00:02:33.140 --> 00:02:33.380
Limit.

00:02:33.380 --> 00:02:35.650
Click it well,

00:02:35.650 --> 00:02:37.510
see what just happened?

00:02:37.510 --> 00:02:42.450
I sent 50,000 dollars to a hacker.

00:02:42.450 --> 00:02:47.000
This is exactly what is he a sort of attack?

00:02:47.000 --> 00:02:50.050
So let me show you what I've done behind the scenes.

00:02:50.050 --> 00:02:54.070
Let me show you this page first.

00:02:54.070 --> 00:02:58.350
Hacker Clickbait page dot s Tamil.

00:02:58.350 --> 00:03:04.010
It's a pretty simple as Tim Ill page.

00:03:04.010 --> 00:03:08.650
It has one link that would take you to steal money.

00:03:08.650 --> 00:03:11.790
Torres TML Let's go inside of what's happening in there.

00:03:11.790 --> 00:03:19.300
It just has pretty much the same exact form as we have in here.

00:03:19.300 --> 00:03:24.640
Except not all the fields in here.

00:03:24.640 --> 00:03:25.650
We're actually hidden.

00:03:25.650 --> 00:03:29.560
And these fields are actually populated with some default values.

00:03:29.560 --> 00:03:36.910
Basically all the hacker con details and the M own that he wanted to snatch and then,

00:03:36.910 --> 00:03:40.430
using JavaScript on with Jon Lord,

00:03:40.430 --> 00:03:46.150
method were able to submit the form the moment somebody visit this particular page.

00:03:46.150 --> 00:03:48.950
So,

00:03:48.950 --> 00:03:51.520
as a victim,

00:03:51.520 --> 00:03:52.720
I click this link.

00:03:52.720 --> 00:03:58.110
I would land in this page which would automatically submit this form and would send a

00:03:58.110 --> 00:04:00.180
request to this particular you on.

00:04:00.180 --> 00:04:05.340
And if you notice this is exact your with which were able to send a request to this

00:04:05.340 --> 00:04:08.340
controller to process a transaction,

00:04:08.340 --> 00:04:09.090
etcetera.

00:04:09.090 --> 00:04:12.680
So that's how hacking is done.

00:04:12.680 --> 00:04:13.970
How can we prevent this?

00:04:13.970 --> 00:04:18.650
The answer is see a sort of token provided best spring security.

00:04:18.650 --> 00:04:22.150
And by default,

00:04:22.150 --> 00:04:25.650
this protection is enabled by spring security.

00:04:25.650 --> 00:04:28.620
So in order to demonstrate you this,

00:04:28.620 --> 00:04:35.750
I have to go ahead and disable this year sort of protection.

00:04:35.750 --> 00:04:39.100
Otherwise I wouldn't be able to demonstrate you this.

00:04:39.100 --> 00:04:42.070
So let me get rid off this first,

00:04:42.070 --> 00:04:51.700
I can actually get it off the entire conflict altogether and looking.

00:04:51.700 --> 00:04:53.050
Stop the application.

00:04:53.050 --> 00:04:56.650
So this time,

00:04:56.650 --> 00:05:06.250
let's relaunch your application and see if the hacker can still steal the money.

00:05:06.250 --> 00:05:08.550
Let me go back.

00:05:08.550 --> 00:05:11.440
Enough course,

00:05:11.440 --> 00:05:13.420
the password would change with me.

00:05:13.420 --> 00:05:14.270
Copy this.

00:05:14.270 --> 00:05:21.310
I would go to the home page and try to log in again.

00:05:21.310 --> 00:05:28.670
You God.

00:05:28.670 --> 00:05:36.850
So Michael Number and they won $20 and the records would fail.

00:05:36.850 --> 00:05:42.550
That's because we don't have to see a sort of token inside off form.

00:05:42.550 --> 00:05:47.060
Hacker cannot still the money as well.

00:05:47.060 --> 00:05:51.960
So in order for the transaction toe happen from inside the application and not from the

00:05:51.960 --> 00:05:52.650
hacker,

00:05:52.650 --> 00:06:00.450
we have to add to see a sort of token inside our farm in this manner.

00:06:00.450 --> 00:06:08.470
So once you had this hidden talking,

00:06:08.470 --> 00:06:10.750
the moment you submit this form,

00:06:10.750 --> 00:06:15.650
this talking would become bad with the original talking generated by spring framework.

00:06:15.650 --> 00:06:19.990
So if they bought match than the farm would be processed,

00:06:19.990 --> 00:06:20.890
If they don't,

00:06:20.890 --> 00:06:24.600
then that means that it questions coming from a North resources.

00:06:24.600 --> 00:06:26.330
So let me say this file.

00:06:26.330 --> 00:06:27.850
They launch the application.

00:06:27.850 --> 00:06:47.710
Let me copy this password from here and user whatever the name that you wish to you.

00:06:47.710 --> 00:06:49.500
But before click submit,

00:06:49.500 --> 00:06:54.260
I guess I'm going wrong with the token that I added in the HTML.

00:06:54.260 --> 00:06:58.260
Let me pause the video and get the right token and I'll get back to you.

00:06:58.260 --> 00:07:00.450
Okay,

00:07:00.450 --> 00:07:01.500
Here we are again.

00:07:01.500 --> 00:07:05.490
Have corrected the token.

00:07:05.490 --> 00:07:08.250
It's supposed to be this.

00:07:08.250 --> 00:07:30.980
Now let's go ahead and try our application user and let me send funds to Bob 123 or

00:07:30.980 --> 00:07:31.640
whatever.

00:07:31.640 --> 00:07:35.550
I want to send him to all dollars and it worked.

00:07:35.550 --> 00:07:36.950
And this time,

00:07:36.950 --> 00:07:41.250
if I try to access the hacker page,

00:07:41.250 --> 00:07:50.150
it will not work because the form that we're trying to submit from the Hacker website does

00:07:50.150 --> 00:07:51.880
not have the CIA sort of token.

00:07:51.880 --> 00:07:54.120
Even if it does have see a sort of token,

00:07:54.120 --> 00:07:56.350
it does not match with the original one.

00:07:56.350 --> 00:07:59.450
So this will prevent CSR off attack.

00:07:59.450 --> 00:08:01.390
Hope it makes sense

