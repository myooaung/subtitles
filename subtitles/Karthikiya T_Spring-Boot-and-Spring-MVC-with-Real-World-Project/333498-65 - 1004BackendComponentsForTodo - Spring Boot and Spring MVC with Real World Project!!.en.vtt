WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.950
Just as we have various components for security feature,

00:00:03.950 --> 00:00:06.850
we do need set off components for to do feature,

00:00:06.850 --> 00:00:13.750
and all we went need is one single entity that corresponds to the to do stable.

00:00:13.750 --> 00:00:16.360
And it has a couple of feels,

00:00:16.360 --> 00:00:17.660
along with unidentified air,

00:00:17.660 --> 00:00:20.290
which will be auto generated by hibernate.

00:00:20.290 --> 00:00:23.380
And we have a user name,

00:00:23.380 --> 00:00:28.750
field and a description field as well as target date.

00:00:28.750 --> 00:00:33.150
So while adding the to do in our application,

00:00:33.150 --> 00:00:35.490
we entered the description and the target date.

00:00:35.490 --> 00:00:43.350
That's why we have these fields in here and use the name is to create that association

00:00:43.350 --> 00:00:50.220
between a user name and a to do so down the line we went to fetch set off to disassociated

00:00:50.220 --> 00:00:51.450
with the user name.

00:00:51.450 --> 00:00:53.950
So we're going to be needing this.

00:00:53.950 --> 00:00:57.890
The rest of the stuff are pretty standard.

00:00:57.890 --> 00:01:02.450
Get us in that US methods along with a couple of constructors,

00:01:02.450 --> 00:01:06.560
and similarly,

00:01:06.560 --> 00:01:10.390
you also need a repository that corresponds to this entity.

00:01:10.390 --> 00:01:12.800
And we have a couple of extra Matt.

00:01:12.800 --> 00:01:16.050
That's which will be needing in our application.

00:01:16.050 --> 00:01:20.850
We also have a service layer for to do,

00:01:20.850 --> 00:01:24.150
and here are the set off methods that will be using.

00:01:24.150 --> 00:01:25.450
And as that mentioned before,

00:01:25.450 --> 00:01:28.350
when we go through the complete flew off the application,

00:01:28.350 --> 00:01:31.550
I will walk it through how these pieces off court.

00:01:31.550 --> 00:01:37.750
One thing that you should remember is whenever you're writing a service,

00:01:37.750 --> 00:01:44.620
all the strait of First introduce an interface and then implement that interface to provide

00:01:44.620 --> 00:01:45.350
the behavior.

00:01:45.350 --> 00:01:47.460
It's just good practice.

00:01:47.460 --> 00:01:49.660
So everywhere you use the service,

00:01:49.660 --> 00:01:53.050
you're gonna have the reference type as the interface.

00:01:53.050 --> 00:01:56.700
Hoping makes sense.

