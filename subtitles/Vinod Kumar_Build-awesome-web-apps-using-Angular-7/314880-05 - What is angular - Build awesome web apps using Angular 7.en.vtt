WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.790
angular is one of the most popular framework for building client applications.

00:00:04.790 --> 00:00:07.080
Unlike the original angular days,

00:00:07.080 --> 00:00:12.850
the new angular uses typescript for developing applications along with HTML and CSS.

00:00:12.850 --> 00:00:18.800
The basic building blocks of an angular application consists off components directives,

00:00:18.800 --> 00:00:21.120
pipes on injectables,

00:00:21.120 --> 00:00:23.900
which are also known as services competence.

00:00:23.900 --> 00:00:24.880
Defined views,

00:00:24.880 --> 00:00:27.950
which are sets off screen elements along with your program.

00:00:27.950 --> 00:00:33.190
Logic and data directives are lovers to control the appearance and behavior off HTML

00:00:33.190 --> 00:00:33.820
elements.

00:00:33.820 --> 00:00:34.160
Pipes,

00:00:34.160 --> 00:00:34.950
on the other hand,

00:00:34.950 --> 00:00:38.990
are used for transforming components data into different formats,

00:00:38.990 --> 00:00:39.920
for example,

00:00:39.920 --> 00:00:45.350
and where the string value into uppercase injectables are reusable typescript classes that

00:00:45.350 --> 00:00:50.650
defined the business logic off your applications Services are Singleton's and generally

00:00:50.650 --> 00:00:52.550
injected tau component triangular.

00:00:52.550 --> 00:00:56.080
In order for us to use any of this in our application,

00:00:56.080 --> 00:00:58.840
we must group them into an N G model.

00:00:58.840 --> 00:01:01.400
Every angler has a rude module,

00:01:01.400 --> 00:01:03.260
conventionally named as at Marty.

00:01:03.260 --> 00:01:07.170
This provides the bootstrap mechanism that launches the application.

00:01:07.170 --> 00:01:08.370
Typically,

00:01:08.370 --> 00:01:11.050
this model imports other functional models,

00:01:11.050 --> 00:01:15.130
organizing your core into distinct from still models,

00:01:15.130 --> 00:01:20.850
help in managing development of complex applications and in designing for usability.

00:01:20.850 --> 00:01:22.170
In addition,

00:01:22.170 --> 00:01:28.110
this technique lets you take a one digital lazy loading that is loading models on demand to

00:01:28.110 --> 00:01:31.450
minimize the amount of court that needs to be loaded at start up.

