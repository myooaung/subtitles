WEBVTT
1
00:00:00.040 --> 00:00:02.010
- [Instructor] Let's take a look at the code needed

2
00:00:02.010 --> 00:00:05.080
to implement a get endpoint in our API.

3
00:00:05.080 --> 00:00:07.090
Let's right click on base package,

4
00:00:07.090 --> 00:00:12.030
go to New and create a new package called rest.

5
00:00:12.030 --> 00:00:16.000
Next, let's right click on the rest package

6
00:00:16.000 --> 00:00:18.010
and create a new class.

7
00:00:18.010 --> 00:00:23.030
Let's name it, ReservationResource.

8
00:00:23.030 --> 00:00:26.050
The ReservationResource class will represent

9
00:00:26.050 --> 00:00:29.060
the resource remodeled in the last video.

10
00:00:29.060 --> 00:00:31.000
We will create a method

11
00:00:31.000 --> 00:00:35.040
that will let you view available rooms for reservation.

12
00:00:35.040 --> 00:00:37.070
First, let's annotate this class

13
00:00:37.070 --> 00:00:41.000
with a RestController annotation,

14
00:00:41.000 --> 00:00:44.010
then let's import that annotation.

15
00:00:44.010 --> 00:00:47.030
RestController is a convenience annotation

16
00:00:47.030 --> 00:00:49.080
that combines the controller annotation

17
00:00:49.080 --> 00:00:52.090
with the RequestBody annotation.

18
00:00:52.090 --> 00:00:56.020
The controller annotation is a specialization

19
00:00:56.020 --> 00:00:59.050
of the component annotation that marks a candidate

20
00:00:59.050 --> 00:01:03.040
for auto-detection through classpath scanning.

21
00:01:03.040 --> 00:01:08.060
HTTP requests are intercepted by the DispatcherServlet

22
00:01:08.060 --> 00:01:12.040
which looks for handler mappings and it's type,

23
00:01:12.040 --> 00:01:16.080
then routes request to the correct RestController method.

24
00:01:16.080 --> 00:01:21.070
A response body annotation indicates a method return value

25
00:01:21.070 --> 00:01:25.030
should be bound to the web response body.

26
00:01:25.030 --> 00:01:29.020
Next, let's add a request mapping endpoint.

27
00:01:29.020 --> 00:01:34.010
Let's import that annotation and then let's set the value

28
00:01:34.010 --> 00:01:39.080
to /room/reservation/v1.

29
00:01:39.080 --> 00:01:44.080
Next, let's create a public method called getAvailableRooms.

30
00:01:44.080 --> 00:01:47.020
This will return a ResponseEntity

31
00:01:47.020 --> 00:01:50.030
containing a ReservationResponse.

32
00:01:50.030 --> 00:01:53.040
This method will take in two parameters,

33
00:01:53.040 --> 00:01:58.010
a local date object, an iso date format called checkin,

34
00:01:58.010 --> 00:02:03.040
and a local date object in iso date format called checkout.

35
00:02:03.040 --> 00:02:06.080
Local date is a Java 8 date class.

36
00:02:06.080 --> 00:02:12.000
Okay, let's add the checkin and checkout parameters.

37
00:02:12.000 --> 00:02:16.030
Let's import the ResponseEntity object.

38
00:02:16.030 --> 00:02:20.080
Next, let's import the local date class.

39
00:02:20.080 --> 00:02:24.090
Okay, now, let's add a RequestParameter annotation

40
00:02:24.090 --> 00:02:27.000
to checkin.

41
00:02:27.000 --> 00:02:29.070
Let's import that annotation,

42
00:02:29.070 --> 00:02:32.030
then let's add the field value

43
00:02:32.030 --> 00:02:34.090
and set that value to checkin.

44
00:02:34.090 --> 00:02:38.090
Next, let's add a DateTimeFormat annotation.

45
00:02:38.090 --> 00:02:41.050
Let's import that annotation,

46
00:02:41.050 --> 00:02:43.090
then let's add a a field called iso

47
00:02:43.090 --> 00:02:48.090
and set iso to DateTimeFormat.ISO.DATE.

48
00:02:48.090 --> 00:02:51.090
Next, let's add those two annotations

49
00:02:51.090 --> 00:03:01.070
to the parameter checkout.

50
00:03:01.070 --> 00:03:05.040
Next, let's return a ResponseEntity

51
00:03:05.040 --> 00:03:08.090
containing a empty ReservationResponse

52
00:03:08.090 --> 00:03:14.020
and the HTTP status code of 200 OK.

53
00:03:14.020 --> 00:03:19.000
Next, let's at a request mapping annotation to this method.

54
00:03:19.000 --> 00:03:23.080
Let's add three fields, path, method, and produces.

55
00:03:23.080 --> 00:03:28.090
Path will be set the empty, method will be set to get,

56
00:03:28.090 --> 00:03:31.000
produces will be set

57
00:03:31.000 --> 00:03:38.000
to MediaType.APPLICATION.JSON.UTF8 value.

58
00:03:38.000 --> 00:03:42.030
Next, let's create the ReservationResponse class.

59
00:03:42.030 --> 00:03:44.040
Right click on the base package

60
00:03:44.040 --> 00:03:47.050
and create a new package called model.

61
00:03:47.050 --> 00:03:52.070
Within model, let's create another package called response.

62
00:03:52.070 --> 00:03:55.020
Within response, let's create a class

63
00:03:55.020 --> 00:03:57.090
called ReservationResponse.

64
00:03:57.090 --> 00:04:02.050
Within ReservationResponse, let's create four variables.

65
00:04:02.050 --> 00:04:06.000
First, let's create a private class member called ID

66
00:04:06.000 --> 00:04:08.020
which is of the type long.

67
00:04:08.020 --> 00:04:11.090
Next, let's create a private integer called roomNumber,

68
00:04:11.090 --> 00:04:15.090
then, let's create another private integer called price.

69
00:04:15.090 --> 00:04:17.000
Then finally,

70
00:04:17.000 --> 00:04:20.090
let's create another class member called links.

71
00:04:20.090 --> 00:04:24.090
Use the keyboard shortcut, Command + Alt + S

72
00:04:24.090 --> 00:04:27.000
to bring up your source menu.

73
00:04:27.000 --> 00:04:31.070
Let's create getters and setters for each of our variables.

74
00:04:31.070 --> 00:04:35.030
Click on Select All then OK.

75
00:04:35.030 --> 00:04:38.040
Next, let's create a constructor.

76
00:04:38.040 --> 00:04:43.010
Open up the source menu again using Command + Alt + S

77
00:04:43.010 --> 00:04:46.010
and click on Generate Constructor.

78
00:04:46.010 --> 00:04:48.000
The first constructor will take in

79
00:04:48.000 --> 00:04:51.070
room number and price as parameters.

80
00:04:51.070 --> 00:04:56.000
Next, let's create a parameter list constructor.

81
00:04:56.000 --> 00:04:59.020
Click Deselect All and OK.

82
00:04:59.020 --> 00:05:03.040
Then, let's clean up the formatting and save.

83
00:05:03.040 --> 00:05:10.060
Next, let's create the links object in the model package.

84
00:05:10.060 --> 00:05:14.090
Let's add a private class member called self.

85
00:05:14.090 --> 00:05:19.050
Let's open up the source menu and add a getter and setter,

86
00:05:19.050 --> 00:05:23.060
click on self and OK, then save.

87
00:05:23.060 --> 00:05:29.000
Next, let's create a self object.

88
00:05:29.000 --> 00:05:33.040
Within self, let's create a private string called ref,

89
00:05:33.040 --> 00:05:34.090
bring up the source menu

90
00:05:34.090 --> 00:05:37.070
and then generate a getter and setter.

91
00:05:37.070 --> 00:05:41.080
Click on ref and OK, then save.

92
00:05:41.080 --> 00:05:44.070
Let's go back to our ReservationResponse

93
00:05:44.070 --> 00:05:49.060
and import the links object we just created, then save.

94
00:05:49.060 --> 00:05:53.050
Next, let's go back to the ReservationResource

95
00:05:53.050 --> 00:05:56.060
and import the ReservationResponse.

96
00:05:56.060 --> 00:05:58.060
Now, let's open up a browser

97
00:05:58.060 --> 00:06:08.090
and search for com.fasterxml.jackson.datatype jsr310 maven,

98
00:06:08.090 --> 00:06:12.040
click on the link to Maven Repository,

99
00:06:12.040 --> 00:06:15.010
click on the latest table of release,

100
00:06:15.010 --> 00:06:20.000
click on the Gradle tab, copy the import statement,

101
00:06:20.000 --> 00:06:25.080
navigate to build.gradle in your root project directory,

102
00:06:25.080 --> 00:06:29.010
scroll down to the dependency sections,

103
00:06:29.010 --> 00:06:32.090
then paste in the dependency we copied

104
00:06:32.090 --> 00:06:38.030
from the Maven Repository, save your bill.gradle file,

105
00:06:38.030 --> 00:06:42.050
click on the Gradle Task window, expand build,

106
00:06:42.050 --> 00:06:47.070
and double-click on the build gradle task, okay?

107
00:06:47.070 --> 00:06:49.030
Our build was successful,

108
00:06:49.030 --> 00:06:52.070
let's close that gradle task window,

109
00:06:52.070 --> 00:06:56.030
and then open up application.properties.

110
00:06:56.030 --> 00:06:58.070
Let's add a new property,

111
00:06:58.070 --> 00:07:08.010
spring.jackson.serialization.write-dates-as-timestamps.

112
00:07:08.010 --> 00:07:11.020
Then, set that to false and save.

113
00:07:11.020 --> 00:07:13.010
Next, in the rest package,

114
00:07:13.010 --> 00:07:19.040
let's create a new class called ResourceConstants.

115
00:07:19.040 --> 00:07:23.050
Let's pull the request mapping into a constant.

116
00:07:23.050 --> 00:07:27.070
So, let's go back to the ReservationResource class,

117
00:07:27.070 --> 00:07:32.010
copy the request mapping, go back to ResourceConstance,

118
00:07:32.010 --> 00:07:38.020
and add a public static final String

119
00:07:38.020 --> 00:07:42.010
called ROOM in all caps

120
00:07:42.010 --> 00:07:46.070
_RESERVATION_V1

121
00:07:46.070 --> 00:07:51.000
and set it equal to your request mapping.

122
00:07:51.000 --> 00:07:53.020
Copy that constant.

123
00:07:53.020 --> 00:07:56.070
Let's go back to the ReservationResource

124
00:07:56.070 --> 00:08:01.070
and add in the constant into the request mapping, then save.

125
00:08:01.070 --> 00:08:05.050
Let's right click on the root project directory,

126
00:08:05.050 --> 00:08:09.020
go to Run As, Spring Boot App.

127
00:08:09.020 --> 00:08:11.030
Now, that our application has started up,

128
00:08:11.030 --> 00:08:15.030
let's go to a browser, and let's test the endpoint.

129
00:08:15.030 --> 00:08:22.070
Type in localhost:8080/room/reservation/v1

130
00:08:22.070 --> 00:08:26.000
and add the parameter checkin and checkout,

131
00:08:26.000 --> 00:08:29.020
both of which are iso formatted dates.

132
00:08:29.020 --> 00:08:33.010
Iso format is a four-character year,

133
00:08:33.010 --> 00:08:36.070
a two-character month, and a two-character day.

134
00:08:36.070 --> 00:08:38.070
After submitting the request,

135
00:08:38.070 --> 00:08:41.080
we get back a response containing

136
00:08:41.080 --> 00:08:45.000
a empty ReservationResponse.

