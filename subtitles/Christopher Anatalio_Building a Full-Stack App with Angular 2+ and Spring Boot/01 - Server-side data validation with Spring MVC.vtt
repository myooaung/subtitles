WEBVTT
1
00:00:00.040 --> 00:00:02.060
- [Instructor] Let's take a look at the server side data

2
00:00:02.060 --> 00:00:06.000
validation that we have built in to our API.

3
00:00:06.000 --> 00:00:10.050
When you add in a request parameter annotation, by default,

4
00:00:10.050 --> 00:00:15.040
the field required is set to true.

5
00:00:15.040 --> 00:00:19.010
That will add the validation where that field is required

6
00:00:19.010 --> 00:00:21.080
to have a valued API call.

7
00:00:21.080 --> 00:00:25.030
Defining the type of parameter will also ensure

8
00:00:25.030 --> 00:00:28.010
that the passed in data is valid.

9
00:00:28.010 --> 00:00:32.000
Let's demonstrate this validation in Postman.

10
00:00:32.000 --> 00:00:35.060
If we remove the parameter checkout,

11
00:00:35.060 --> 00:00:42.000
and then try to execute the get available rooms get call,

12
00:00:42.000 --> 00:00:46.090
we get a validation message, checkout is not present.

13
00:00:46.090 --> 00:00:54.000
If we pass in an invalid date, such as March 41,

14
00:00:54.000 --> 00:00:59.070
we get a type conversion error and a 400 bad request.

15
00:00:59.070 --> 00:01:04.000
This validation will also occur in the request body.

16
00:01:04.000 --> 00:01:09.090
If you look in ReservationRequest, we expect an ID,

17
00:01:09.090 --> 00:01:14.040
a LocalDate checkin and another LocalDate checkout.

18
00:01:14.040 --> 00:01:19.060
If we attempt to remove a field, which is required,

19
00:01:19.060 --> 00:01:22.030
we will get a validation error.

20
00:01:22.030 --> 00:01:25.030
If you close that tab, click Don't Save,

21
00:01:25.030 --> 00:01:29.050
and then reopen, click on Body, and then let's try

22
00:01:29.050 --> 00:01:32.010
passing in an invalid date.

23
00:01:32.010 --> 00:01:34.080
March 48th.

24
00:01:34.080 --> 00:01:38.080
In that case we also get a validation error.

25
00:01:38.080 --> 00:01:41.010
And a 400 Bad Request.

26
00:01:41.010 --> 00:01:46.010
If you pass in a bad URL, you just get a 404 Not Found.

27
00:01:46.010 --> 00:01:49.060
Our API returns preview scripted error messages.

28
00:01:49.060 --> 00:01:53.010
They should give the user enough info to fix their request

29
00:01:53.010 --> 00:01:55.000
if they get an error.

