WEBVTT
1
00:00:00.060 --> 00:00:02.070
- [Narrator] Alright, let's add the functionality

2
00:00:02.070 --> 00:00:05.050
to your reserve a room from our front end.

3
00:00:05.050 --> 00:00:09.080
Let's open up app.component.ts.

4
00:00:09.080 --> 00:00:12.010
We added getAll previously,

5
00:00:12.010 --> 00:00:15.080
but executed a get request to our API.

6
00:00:15.080 --> 00:00:18.030
Now, we want to execute a post.

7
00:00:18.030 --> 00:00:22.000
First, let's create two fields to keep track of

8
00:00:22.000 --> 00:00:26.000
the values check in ad check out from the form.

9
00:00:26.000 --> 00:00:27.090
Let's name it current check in value

10
00:00:27.090 --> 00:00:31.040
and current check out value.

11
00:00:31.040 --> 00:00:35.070
Next in ngOnInit, let's subscribe to changes

12
00:00:35.070 --> 00:00:37.070
from our form group.

13
00:00:37.070 --> 00:00:42.030
Let's define a field called roomsearchValueChanges.

14
00:00:42.030 --> 00:00:46.090
First, let's define a constant, roomsearchValueChanges,

15
00:00:46.090 --> 00:00:52.070
and let's set that equal to roomsearch,

16
00:00:52.070 --> 00:00:55.080
which is our form group,

17
00:00:55.080 --> 00:00:58.090
and we're going to set it to valueChanges.

18
00:00:58.090 --> 00:01:00.060
Now that we have that set,

19
00:01:00.060 --> 00:01:05.010
we can subscribe to these value change events.

20
00:01:05.010 --> 00:01:07.090
Let's pass in a lamda.

21
00:01:07.090 --> 00:01:12.080
Let's copy currentCheckInVal and set it equal

22
00:01:12.080 --> 00:01:16.040
to the value in that form field.

23
00:01:16.040 --> 00:01:22.060
Same thing on currentCheckOutValue.

24
00:01:22.060 --> 00:01:26.050
That was any time we omit a value change event,

25
00:01:26.050 --> 00:01:31.010
we are capturing the current value in these two strings.

26
00:01:31.010 --> 00:01:34.060
Next, let's create a function called reserve room.

27
00:01:34.060 --> 00:01:38.060
We'll take in a parameter called value on the type string.

28
00:01:38.060 --> 00:01:41.080
Let's create a new request body object.

29
00:01:41.080 --> 00:01:46.050
Let's name it ReserveRoomRequest.

30
00:01:46.050 --> 00:01:50.030
Let's add a roomId string, checkin string,

31
00:01:50.030 --> 00:01:53.020
and a checkout string.

32
00:01:53.020 --> 00:01:57.030
Then, let's create a constructor,

33
00:01:57.030 --> 00:02:01.040
and then let's copy these three fields,

34
00:02:01.040 --> 00:02:06.010
and paste them into the constructor parameters.

35
00:02:06.010 --> 00:02:08.040
Let's take off the semi-colons,

36
00:02:08.040 --> 00:02:12.010
and delimit each parameter with a comma.

37
00:02:12.010 --> 00:02:14.050
Then, within the body of the constructor,

38
00:02:14.050 --> 00:02:20.040
let's set all the fields.

39
00:02:20.040 --> 00:02:23.040
Then shift F to format,

40
00:02:23.040 --> 00:02:28.030
then let's head back to the reserveroom function.

41
00:02:28.030 --> 00:02:32.000
It actually looks like we had reserveroom defined,

42
00:02:32.000 --> 00:02:34.080
so let's use that existing function.

43
00:02:34.080 --> 00:02:43.000
Let's create a request body, passing in the parameter value,

44
00:02:43.000 --> 00:02:46.030
which will be the room ID that you want to reserve,

45
00:02:46.030 --> 00:02:51.030
the current value in the field currentCheckInValue,

46
00:02:51.030 --> 00:02:54.020
which is populated from the form element,

47
00:02:54.020 --> 00:02:57.040
and the currectCheckOutValue.

48
00:02:57.040 --> 00:03:01.010
Next, let's create a createReservation function.

49
00:03:01.010 --> 00:03:03.010
Let's pass in that request body,

50
00:03:03.010 --> 00:03:12.060
let's copy ReserveRoomRequest class name.

51
00:03:12.060 --> 00:03:16.000
Let's serialize that ReserveRoomRequest object

52
00:03:16.000 --> 00:03:19.040
into a JSON string.

53
00:03:19.040 --> 00:03:24.020
Let's add some headers and let's create an array in place

54
00:03:24.020 --> 00:03:25.070
and pass in the

55
00:03:25.070 --> 00:03:31.080
single header Content-Type equals to application JSON.

56
00:03:31.080 --> 00:03:34.090
Then let's set the request options.

57
00:03:34.090 --> 00:03:42.000
Fix the typo in content type, and let's add these headers.

58
00:03:42.000 --> 00:03:47.000
Let's use the HTTP module to execute a post

59
00:03:47.000 --> 00:03:54.010
passing in the base URL and the domain and resource,

60
00:03:54.010 --> 00:03:58.030
the request body, and headers.

61
00:03:58.030 --> 00:04:02.070
Then let's subscribe to the observable that gets returned.

62
00:04:02.070 --> 00:04:06.090
Let's pass in a lamda, and at this point,

63
00:04:06.090 --> 00:04:12.090
all we're going to do is log that response to the console.

64
00:04:12.090 --> 00:04:17.000
Let's save and webpack compiled our changes,

65
00:04:17.000 --> 00:04:19.080
so let's head back to our application.

66
00:04:19.080 --> 00:04:22.050
Let's do a refresh.

67
00:04:22.050 --> 00:04:25.000
Let's search for available rooms,

68
00:04:25.000 --> 00:04:27.060
let's right click and inspect,

69
00:04:27.060 --> 00:04:29.010
and then open up the console.

70
00:04:29.010 --> 00:04:34.000
When you click reserve, we can see that we made a request

71
00:04:34.000 --> 00:04:38.080
to our API and got back a successful 201.

72
00:04:38.080 --> 00:04:40.070
Let's check on our API,

73
00:04:40.070 --> 00:04:47.050
and let's look at that room with ID one and room number 405.

74
00:04:47.050 --> 00:04:49.080
Now, it looks like we have two reservations

75
00:04:49.080 --> 00:04:51.090
attached to that room.

76
00:04:51.090 --> 00:04:54.000
So it looks like we were successfully able

77
00:04:54.000 --> 00:04:57.050
to reserve a room from our front end UI

78
00:04:57.050 --> 00:05:01.080
using AngularJS2, and the HTTP module.

79
00:05:01.080 --> 00:05:03.020
Now that we are tracking

80
00:05:03.020 --> 00:05:07.030
the current value of the CheckIn field,

81
00:05:07.030 --> 00:05:11.030
let's go ahead an update the get URL

82
00:05:11.030 --> 00:05:14.030
so that we're passing in the actual value

83
00:05:14.030 --> 00:05:23.080
of that form field instead of the hard-coded value.

84
00:05:23.080 --> 00:05:26.030
Let's save our changes, let's refresh,

85
00:05:26.030 --> 00:05:31.050
and let's make sure our get still works.

86
00:05:31.050 --> 00:05:34.030
We are now passing in the CheckIn and CheckOut

87
00:05:34.030 --> 00:05:36.000
from the form fields dynamically.

