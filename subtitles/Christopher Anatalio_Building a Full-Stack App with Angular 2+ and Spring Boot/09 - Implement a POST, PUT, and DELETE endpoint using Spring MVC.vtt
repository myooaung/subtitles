WEBVTT
1
00:00:01.000 --> 00:00:02.040
- [Instructor] Okay, now let's build out

2
00:00:02.040 --> 00:00:04.010
the remaining endpoints.

3
00:00:04.010 --> 00:00:06.010
First, let's add a post endpoint.

4
00:00:06.010 --> 00:00:08.050
Post is a HTTP verb that is used

5
00:00:08.050 --> 00:00:11.050
to create a new resource.

6
00:00:11.050 --> 00:00:14.080
Let's open the class called reservation resource

7
00:00:14.080 --> 00:00:16.080
and add a method which will allow us

8
00:00:16.080 --> 00:00:18.060
to reserve a room.

9
00:00:18.060 --> 00:00:20.020
Let's add a public method

10
00:00:20.020 --> 00:00:21.080
called create reservation

11
00:00:21.080 --> 00:00:23.080
that returns a response entity

12
00:00:23.080 --> 00:00:27.000
that contains an empty reservation response

13
00:00:27.000 --> 00:00:30.080
and a 201-created status quote.

14
00:00:30.080 --> 00:00:34.020
Create reservation will take in a parameter

15
00:00:34.020 --> 00:00:39.010
called reservation request, which is a request body.

16
00:00:39.010 --> 00:00:41.090
Next, let's add a request body annotation

17
00:00:41.090 --> 00:00:44.000
to that parameter.

18
00:00:44.000 --> 00:00:47.020
Let's import that annotation.

19
00:00:47.020 --> 00:00:52.000
Next, let's add a request mapping annotation to the method.

20
00:00:52.000 --> 00:00:53.060
Let's add in four fields,

21
00:00:53.060 --> 00:00:57.060
path, method, produces, and consumes.

22
00:00:57.060 --> 00:01:00.040
Let's set path to an empty string.

23
00:01:00.040 --> 00:01:04.060
Next, let's set method to post.

24
00:01:04.060 --> 00:01:12.080
Let's set produces to application JSON UTF8 value.

25
00:01:12.080 --> 00:01:14.080
Finally, let's set consumes

26
00:01:14.080 --> 00:01:20.020
to application JSON UTF8 value.

27
00:01:20.020 --> 00:01:25.010
Next, let's make sure the method returns a response entity

28
00:01:25.010 --> 00:01:28.070
containing that empty reservation response

29
00:01:28.070 --> 00:01:31.060
and the status code created.

30
00:01:31.060 --> 00:01:34.080
Next, we need to create the reservation request.

31
00:01:34.080 --> 00:01:37.010
Reservation request is a class

32
00:01:37.010 --> 00:01:39.040
which will represent the request body

33
00:01:39.040 --> 00:01:42.000
which is sent during a post.

34
00:01:42.000 --> 00:01:45.070
First, let's create a new package called request in model.

35
00:01:45.070 --> 00:01:47.080
Let's right click on the model package

36
00:01:47.080 --> 00:01:50.080
and add a new package called request.

37
00:01:50.080 --> 00:01:53.010
Within request, let's create a class

38
00:01:53.010 --> 00:01:56.020
called reservation request.

39
00:01:56.020 --> 00:02:00.010
Let's add three class members to this request,

40
00:02:00.010 --> 00:02:03.080
id, date start, and date end.

41
00:02:03.080 --> 00:02:06.040
Id is a private long.

42
00:02:06.040 --> 00:02:10.010
Check in is a private local date.

43
00:02:10.010 --> 00:02:13.080
Check out is also private local date.

44
00:02:13.080 --> 00:02:15.090
Let's import local date,

45
00:02:15.090 --> 00:02:20.000
then let's add a date time format annotation to check in.

46
00:02:20.000 --> 00:02:23.020
Let's import that annotation,

47
00:02:23.020 --> 00:02:26.000
and then pass in a field called iso,

48
00:02:26.000 --> 00:02:28.050
with a value iso date.

49
00:02:28.050 --> 00:02:31.080
Now let's add that same date time annotation format

50
00:02:31.080 --> 00:02:33.040
to check out.

51
00:02:33.040 --> 00:02:35.040
Next, let's use a keyboard shortcut,

52
00:02:35.040 --> 00:02:39.040
Command + Alt + S to open up the source menu.

53
00:02:39.040 --> 00:02:42.020
Let's click Generate Getters and Setters,

54
00:02:42.020 --> 00:02:45.070
click on Select All, and OK.

55
00:02:45.070 --> 00:02:48.020
Next, let's create a constructor.

56
00:02:48.020 --> 00:02:50.020
Open up the source menu,

57
00:02:50.020 --> 00:02:52.040
and click Generate Constructor.

58
00:02:52.040 --> 00:02:55.040
Select all the fields, and click OK.

59
00:02:55.040 --> 00:02:59.010
Next, let's also create a parameter list constructor.

60
00:02:59.010 --> 00:03:03.010
Open up source, generate a constructor,

61
00:03:03.010 --> 00:03:06.060
click Deselect All, and OK.

62
00:03:06.060 --> 00:03:08.070
Let's clean up the spacing,

63
00:03:08.070 --> 00:03:10.070
and save our changes.

64
00:03:10.070 --> 00:03:14.060
Next, let's go back into reservation resource.

65
00:03:14.060 --> 00:03:17.050
Let's import the reservation request class

66
00:03:17.050 --> 00:03:19.030
we just created.

67
00:03:19.030 --> 00:03:21.040
Now, let's save our changes.

68
00:03:21.040 --> 00:03:24.050
Now, let's jump back in to the api config class,

69
00:03:24.050 --> 00:03:27.020
and update the object mapper

70
00:03:27.020 --> 00:03:31.000
so that is able to parse iso-formatted dates.

71
00:03:31.000 --> 00:03:36.010
First, let's create a new object mapper.

72
00:03:36.010 --> 00:03:38.040
Next, let's register a module

73
00:03:38.040 --> 00:03:43.030
with that object mapper called JavaTimeModule.

74
00:03:43.030 --> 00:03:46.010
Then, let's import JavaTimeModule.

75
00:03:46.010 --> 00:03:48.050
Okay, let's save our changes.

76
00:03:48.050 --> 00:03:51.080
Now, we should be all set to test the endpoint.

77
00:03:51.080 --> 00:03:53.090
Let's go back to Postman,

78
00:03:53.090 --> 00:03:55.080
and add our post endpoint.

79
00:03:55.080 --> 00:03:57.050
Click on your existing

80
00:03:57.050 --> 00:04:00.050
get available room reservations endpoint,

81
00:04:00.050 --> 00:04:03.080
click on the dropdown by Save, click Save As,

82
00:04:03.080 --> 00:04:09.090
then rename the request, create room reservation.

83
00:04:09.090 --> 00:04:13.050
Click on the endpoint create room reservation,

84
00:04:13.050 --> 00:04:16.050
and then let's change the method to post.

85
00:04:16.050 --> 00:04:20.080
Next, let's remove the check in and check out parameter.

86
00:04:20.080 --> 00:04:23.060
Then, click on the Body tab.

87
00:04:23.060 --> 00:04:27.060
Click raw, then click JSON.

88
00:04:27.060 --> 00:04:30.020
We want to create a JSON string

89
00:04:30.020 --> 00:04:34.020
that will represent a reservation request.

90
00:04:34.020 --> 00:04:37.020
Let's add a field id,

91
00:04:37.020 --> 00:04:40.060
and then we can set it to an arbitrary value.

92
00:04:40.060 --> 00:04:42.080
Next, let's add a check in field,

93
00:04:42.080 --> 00:04:46.050
and set it to an iso-formatted date.

94
00:04:46.050 --> 00:04:49.020
Next, let's add a check out field,

95
00:04:49.020 --> 00:04:52.040
and also set it to an iso-formatted date.

96
00:04:52.040 --> 00:04:55.030
Okay, let's Save the request,

97
00:04:55.030 --> 00:04:58.030
and then let's go back to Eclipse.

98
00:04:58.030 --> 00:05:01.010
Let's right-click on the project directory,

99
00:05:01.010 --> 00:05:03.060
click Run As, Spring Boot App.

100
00:05:03.060 --> 00:05:05.080
Okay, after it starts up,

101
00:05:05.080 --> 00:05:07.090
let's head back to Postman,

102
00:05:07.090 --> 00:05:10.020
and submit that post request.

103
00:05:10.020 --> 00:05:13.080
We can see, we get a 201-created response

104
00:05:13.080 --> 00:05:17.020
and a empty reservation response.

105
00:05:17.020 --> 00:05:19.070
Let's head back to Eclipse,

106
00:05:19.070 --> 00:05:22.050
then open up reservation resource.

107
00:05:22.050 --> 00:05:25.020
Next up, let's add a put endpoint.

108
00:05:25.020 --> 00:05:28.010
Put is a HTTP verb that is used

109
00:05:28.010 --> 00:05:31.010
to update a existing resource.

110
00:05:31.010 --> 00:05:34.060
Our put endpoint will be exactly like our post endpoint,

111
00:05:34.060 --> 00:05:38.000
except with a different request method.

112
00:05:38.000 --> 00:05:42.030
Let's add a new public method called update reservation

113
00:05:42.030 --> 00:05:44.070
that returns a response entity

114
00:05:44.070 --> 00:05:48.040
that contains a empty reservation response

115
00:05:48.040 --> 00:05:51.050
in a 200-okay status code.

116
00:05:51.050 --> 00:05:55.010
Let's copy the method create reservation.

117
00:05:55.010 --> 00:05:58.090
Let's update the method name to update reservation.

118
00:05:58.090 --> 00:06:02.030
Then, update the method to put.

119
00:06:02.030 --> 00:06:05.000
Next, let's change the status code

120
00:06:05.000 --> 00:06:09.060
from 201-created to 200-okay.

121
00:06:09.060 --> 00:06:15.010
Let's save, and then restart the server.

122
00:06:15.010 --> 00:06:19.040
Okay, once it's back up, let's go back to Postman.

123
00:06:19.040 --> 00:06:23.010
Click on your post, click on the dropdown by Save,

124
00:06:23.010 --> 00:06:26.090
click Save As, then update the request name

125
00:06:26.090 --> 00:06:32.060
to Update room reservation, and Save.

126
00:06:32.060 --> 00:06:35.020
Click on the request you just created,

127
00:06:35.020 --> 00:06:37.020
update the method to put,

128
00:06:37.020 --> 00:06:40.010
save it, and then send.

129
00:06:40.010 --> 00:06:43.030
We should get back a 200-okay status

130
00:06:43.030 --> 00:06:47.000
and an empty reservation object.

131
00:06:47.000 --> 00:06:49.070
Finally, let's add a delete endpoint.

132
00:06:49.070 --> 00:06:52.070
Coming back to reservation resource one more time,

133
00:06:52.070 --> 00:06:55.020
let's go ahead and add a new public method

134
00:06:55.020 --> 00:06:57.030
called delete reservation

135
00:06:57.030 --> 00:07:00.000
that returns a response entity

136
00:07:00.000 --> 00:07:05.090
that contains no body in a 204 no content status code.

137
00:07:05.090 --> 00:07:08.080
Next, let's add a reservation id

138
00:07:08.080 --> 00:07:11.080
of the type long, as a parameter.

139
00:07:11.080 --> 00:07:15.010
Let's add the type annotation path variable.

140
00:07:15.010 --> 00:07:17.090
Let's import the annotation,

141
00:07:17.090 --> 00:07:22.000
then let's add a request mapping annotation to the method.

142
00:07:22.000 --> 00:07:26.030
Let's add two fields, path and method.

143
00:07:26.030 --> 00:07:30.010
Let's set path to the reservation id,

144
00:07:30.010 --> 00:07:34.020
then let's set method to delete.

145
00:07:34.020 --> 00:07:38.040
Next, let's return a empty response entity

146
00:07:38.040 --> 00:07:42.000
with the status no content.

147
00:07:42.000 --> 00:07:43.080
Let's save our changes,

148
00:07:43.080 --> 00:07:46.070
and restart the server one more time.

149
00:07:46.070 --> 00:07:48.050
Okay, once we start back up,

150
00:07:48.050 --> 00:07:50.070
let's head back to Postman.

151
00:07:50.070 --> 00:07:53.030
Alright, let's click on our get,

152
00:07:53.030 --> 00:07:57.030
click on the dropdown by Save, Save As,

153
00:07:57.030 --> 00:08:00.010
then let's update the request name

154
00:08:00.010 --> 00:08:03.050
to Delete room reservation.

155
00:08:03.050 --> 00:08:06.070
Let's click on Delete room reservation

156
00:08:06.070 --> 00:08:09.090
and change the method to delete.

157
00:08:09.090 --> 00:08:14.020
Let's remove the check in and check out parameters,

158
00:08:14.020 --> 00:08:17.010
and add a path variable.

159
00:08:17.010 --> 00:08:20.020
This variable will be the id of the reservation

160
00:08:20.020 --> 00:08:21.070
which you want to delete.

161
00:08:21.070 --> 00:08:24.080
Okay, now let's test it out.

162
00:08:24.080 --> 00:08:27.070
Okay, we got a 204 no content

163
00:08:27.070 --> 00:08:29.000
and a empty body as a response.

