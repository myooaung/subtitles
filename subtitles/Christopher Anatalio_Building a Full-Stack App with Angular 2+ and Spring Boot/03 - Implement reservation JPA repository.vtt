WEBVTT
1
00:00:00.070 --> 00:00:02.050
- [Narrator] Next up let's implement

2
00:00:02.050 --> 00:00:05.050
the reservation JPA repository.

3
00:00:05.050 --> 00:00:10.000
Reservations will be another table in our database.

4
00:00:10.000 --> 00:00:12.020
There will be a one to many relationship

5
00:00:12.020 --> 00:00:14.090
between room and reservation.

6
00:00:14.090 --> 00:00:19.020
One room can potentially have many different reservations.

7
00:00:19.020 --> 00:00:23.050
First off, let's rename reservation response

8
00:00:23.050 --> 00:00:27.020
to reservable room response.

9
00:00:27.020 --> 00:00:30.060
This will more accurately reflect the purpose.

10
00:00:30.060 --> 00:00:33.070
Let's right click on reservation response,

11
00:00:33.070 --> 00:00:41.030
go to refactor, rename.

12
00:00:41.030 --> 00:00:46.020
Make sure update references is checked, and click finish.

13
00:00:46.020 --> 00:00:49.030
Let's also take a look at the room entity

14
00:00:49.030 --> 00:00:53.010
to reservation response converter.

15
00:00:53.010 --> 00:00:55.030
We can see the type was updated,

16
00:00:55.030 --> 00:00:59.080
but not the base class name.

17
00:00:59.080 --> 00:01:02.020
So let's right click on the name,

18
00:01:02.020 --> 00:01:08.080
go to refactor, and rename.

19
00:01:08.080 --> 00:01:13.060
Okay, let's double check in our conversion config,

20
00:01:13.060 --> 00:01:17.040
and we can see the name was properly updated.

21
00:01:17.040 --> 00:01:21.000
Next up, let's add a reservation entity

22
00:01:21.000 --> 00:01:24.070
to model the reservation table.

23
00:01:24.070 --> 00:01:31.010
Let's create a new class in entity called reservation entity

24
00:01:31.010 --> 00:01:33.050
and click finish.

25
00:01:33.050 --> 00:01:37.090
Okay, first up let's add a entity annotation.

26
00:01:37.090 --> 00:01:39.090
Be sure to import the entity

27
00:01:39.090 --> 00:01:44.080
annotation from Java X persistence.

28
00:01:44.080 --> 00:01:50.010
Next up, add a table annotation, and then let's import it.

29
00:01:50.010 --> 00:01:54.070
Let's pass in the table name to that table annotation.

30
00:01:54.070 --> 00:01:59.090
Let's set the name equal to reservation.

31
00:01:59.090 --> 00:02:03.090
First let's add a ID of the type long.

32
00:02:03.090 --> 00:02:06.010
Let's add the annotation ID.

33
00:02:06.010 --> 00:02:07.030
Let's import it.

34
00:02:07.030 --> 00:02:10.000
Then let's make sure this ID gets

35
00:02:10.000 --> 00:02:13.070
automatically generated upon creation.

36
00:02:13.070 --> 00:02:16.040
Let's add that generated value annotation,

37
00:02:16.040 --> 00:02:19.020
make sure it gets imported, and then let's pass

38
00:02:19.020 --> 00:02:23.070
in the field strategy equals generation type auto.

39
00:02:23.070 --> 00:02:26.000
Next up let's add a private

40
00:02:26.000 --> 00:02:28.050
local date field called check in.

41
00:02:28.050 --> 00:02:31.060
Let's add a not null annotation to make sure

42
00:02:31.060 --> 00:02:34.030
it gets populated upon creation.

43
00:02:34.030 --> 00:02:38.040
Let's import that local date class.

44
00:02:38.040 --> 00:02:41.090
Let's create another field local date check out.

45
00:02:41.090 --> 00:02:44.020
Now let's be sure to add that

46
00:02:44.020 --> 00:02:48.090
not null annotation, all right?

47
00:02:48.090 --> 00:02:52.070
As a reminder, the keyboard shortcut to generate getters

48
00:02:52.070 --> 00:02:57.030
and setters is command alt S.

49
00:02:57.030 --> 00:02:59.070
Go to generate getters and setters

50
00:02:59.070 --> 00:03:03.050
and click on select all then OK.

51
00:03:03.050 --> 00:03:06.080
Let's add our constructors.

52
00:03:06.080 --> 00:03:09.090
First one takes in check in and check out.

53
00:03:09.090 --> 00:03:13.060
Next one is parameter list, deselect all, and OK.

54
00:03:13.060 --> 00:03:19.060
Then command shift F to autoformat and then save.

55
00:03:19.060 --> 00:03:23.040
Now let's open up the room entity.

56
00:03:23.040 --> 00:03:26.030
Let's add a list of reservations entities

57
00:03:26.030 --> 00:03:29.080
called reservation entity list.

58
00:03:29.080 --> 00:03:33.060
Command shift O, view our imports, then let's add

59
00:03:33.060 --> 00:03:36.040
an annotation one to many.

60
00:03:36.040 --> 00:03:39.070
Command shift O, this one to many annotation

61
00:03:39.070 --> 00:03:41.090
indicates that there is a relationship

62
00:03:41.090 --> 00:03:46.030
between room entity and reservation entity.

63
00:03:46.030 --> 00:03:49.010
A room may have multiple reservations.

64
00:03:49.010 --> 00:03:53.070
That's why this room has a list.

65
00:03:53.070 --> 00:03:56.080
Let's add fetch type set to eager,

66
00:03:56.080 --> 00:04:02.090
and let's say cascade to persist.

67
00:04:02.090 --> 00:04:06.000
Then when we save this entity, any reservation entity

68
00:04:06.000 --> 00:04:09.000
children connected to this room entity

69
00:04:09.000 --> 00:04:14.040
will also be persisted.

70
00:04:14.040 --> 00:04:16.070
Then let's add a getter and setter

71
00:04:16.070 --> 00:04:19.050
for the field we just added.

72
00:04:19.050 --> 00:04:23.060
Command alt S, generate, select reservation entity list,

73
00:04:23.060 --> 00:04:25.060
and OK.

74
00:04:25.060 --> 00:04:33.060
Let's also add a method called add reservation entity.

75
00:04:33.060 --> 00:04:36.090
If reservation entity list is currently null,

76
00:04:36.090 --> 00:04:39.060
let's create a new one.

77
00:04:39.060 --> 00:04:47.090
Control space to autopopulate.

78
00:04:47.090 --> 00:04:52.070
And let's set it to a new array list if null.

79
00:04:52.070 --> 00:04:56.070
Control shift O to import, then let's add

80
00:04:56.070 --> 00:05:00.040
the new reservation entity to the list.

81
00:05:00.040 --> 00:05:06.040
Control space, add and then let's make sure

82
00:05:06.040 --> 00:05:09.040
we're operating on the list, all right?

83
00:05:09.040 --> 00:05:11.010
And then save.

84
00:05:11.010 --> 00:05:15.050
Next, let's open up reservation request.

85
00:05:15.050 --> 00:05:19.030
Let's add in a field private long room ID.

86
00:05:19.030 --> 00:05:22.000
Room ID is the ID of the room that

87
00:05:22.000 --> 00:05:25.030
you want to attach your reservation to.

88
00:05:25.030 --> 00:05:30.010
Let's delete the constructor, control alt S,

89
00:05:30.010 --> 00:05:39.050
and create a new one with every field except ID.

90
00:05:39.050 --> 00:05:45.020
Then let's add a getter and setter for that room ID field.

91
00:05:45.020 --> 00:05:52.020
Control shift F to reformat, and then save.

92
00:05:52.020 --> 00:05:55.020
Let's create a new class in response.

93
00:05:55.020 --> 00:05:58.070
New class, and let's name it

94
00:05:58.070 --> 00:06:02.060
reservation response, and finish.

95
00:06:02.060 --> 00:06:03.070
Okay?

96
00:06:03.070 --> 00:06:07.030
Let's add in two fields, check in and check out,

97
00:06:07.030 --> 00:06:09.040
of the type local date.

98
00:06:09.040 --> 00:06:12.010
Command shift O to import, and let's not forget

99
00:06:12.010 --> 00:06:19.050
the ID field as well, of the type long, all right?

100
00:06:19.050 --> 00:06:23.040
Let's throw in the getters and setters,

101
00:06:23.040 --> 00:06:29.000
and then add in the fronter.

102
00:06:29.000 --> 00:06:31.080
And then one more.

103
00:06:31.080 --> 00:06:38.020
Deselect all, command shift F, format, and save.

104
00:06:38.020 --> 00:06:42.040
Next up, let's add a JPA repository.

105
00:06:42.040 --> 00:06:46.050
Right click on repository, new, class.

106
00:06:46.050 --> 00:06:51.060
Let's name it reservation repository, and create.

107
00:06:51.060 --> 00:06:56.060
All right, let's make sure it extends the crud repository.

108
00:06:56.060 --> 00:07:00.070
It'll take in a reservation entity and a long.

109
00:07:00.070 --> 00:07:06.070
Command shift O, let's make sure this is a interface.

110
00:07:06.070 --> 00:07:09.070
Command shift O, and save.

111
00:07:09.070 --> 00:07:13.020
All right, let's create some converters.

112
00:07:13.020 --> 00:07:17.050
Right click on converter, new, class, all right?

113
00:07:17.050 --> 00:07:20.010
This one will be reservation request

114
00:07:20.010 --> 00:07:23.010
to reservation entity converter.

115
00:07:23.010 --> 00:07:27.050
This class will take in a request body from a rest API

116
00:07:27.050 --> 00:07:31.000
call and convert it to a reservation entity

117
00:07:31.000 --> 00:07:33.010
so that we can save it.

118
00:07:33.010 --> 00:07:36.040
Let's implement the converter, passing in a reservation

119
00:07:36.040 --> 00:07:39.060
request and a reservation entity.

120
00:07:39.060 --> 00:07:42.060
Fix that typo.

121
00:07:42.060 --> 00:07:46.010
Command shift O to import and let's make sure

122
00:07:46.010 --> 00:07:49.090
we grab the spring framework converter.

123
00:07:49.090 --> 00:07:53.040
If you click on this error and click on add unimplemented

124
00:07:53.040 --> 00:07:56.050
methods, it will stub out the method

125
00:07:56.050 --> 00:07:59.050
that you have to override, all right?

126
00:07:59.050 --> 00:08:06.020
Let's create a reservation entity.

127
00:08:06.020 --> 00:08:09.050
Make sure that gets returned.

128
00:08:09.050 --> 00:08:14.040
Let's set the check in to the source check in.

129
00:08:14.040 --> 00:08:19.030
Let's set the check out to the source check out,

130
00:08:19.030 --> 00:08:23.010
and then if the source ID is not null,

131
00:08:23.010 --> 00:08:26.010
let's also set that.

132
00:08:26.010 --> 00:08:29.020
Control space to autopopulate, dot set ID.

133
00:08:29.020 --> 00:08:35.040
Command shift F to format, and save.

134
00:08:35.040 --> 00:08:38.000
Let's create one more converter.

135
00:08:38.000 --> 00:08:40.090
This one going from a reservation

136
00:08:40.090 --> 00:08:43.090
entity to a reservation response.

137
00:08:43.090 --> 00:08:47.090
Make sure it's an interface.

138
00:08:47.090 --> 00:08:50.020
Let's make sure it implements converter

139
00:08:50.020 --> 00:08:56.030
going from reservation entity to reservation response.

140
00:08:56.030 --> 00:09:00.060
Let's make sure that's class, actually.

141
00:09:00.060 --> 00:09:04.070
Okay, let's import converter, command shift O to do

142
00:09:04.070 --> 00:09:09.080
our imports, click on the error, add unimplemented methods.

143
00:09:09.080 --> 00:09:15.040
Create a reservation response.

144
00:09:15.040 --> 00:09:19.000
Make sure that gets returned.

145
00:09:19.000 --> 00:09:24.000
Set the check in and set the check out.

146
00:09:24.000 --> 00:09:26.070
Okay, and save.

147
00:09:26.070 --> 00:09:29.040
Next, let's open up conversion config

148
00:09:29.040 --> 00:09:41.040
and add those two converters.

149
00:09:41.040 --> 00:09:44.070
Let's make sure this is named correctly.

150
00:09:44.070 --> 00:09:48.000
Let's right click, refactor and rename,

151
00:09:48.000 --> 00:09:53.030
and let's append converter to that name, and save.

152
00:09:53.030 --> 00:09:57.080
Let's open up the reservation resource, all right?

153
00:09:57.080 --> 00:09:58.090
It's in rest.

154
00:09:58.090 --> 00:10:05.040
First, let's add the reservation repository.

155
00:10:05.040 --> 00:10:10.020
Get it autowired, head back to the post end point,

156
00:10:10.020 --> 00:10:14.000
then let's convert the reservation request

157
00:10:14.000 --> 00:10:18.050
into a reservation entity.

158
00:10:18.050 --> 00:10:25.010
Let's autowire the conversion service.

159
00:10:25.010 --> 00:10:29.030
Okay, now we have access to that beam.

160
00:10:29.030 --> 00:10:34.000
Let's pass in the reservation request

161
00:10:34.000 --> 00:10:36.050
and set the expected target type

162
00:10:36.050 --> 00:10:41.010
to reservation entity dot class.

163
00:10:41.010 --> 00:10:44.020
Let's grab the reservation repository beam,

164
00:10:44.020 --> 00:10:48.040
and then save that entity.

165
00:10:48.040 --> 00:10:51.000
Let's grab the room repository beam.

166
00:10:51.000 --> 00:10:52.090
Let's call a find by ID

167
00:10:52.090 --> 00:10:58.080
and get the room ID from the reservation request.

168
00:10:58.080 --> 00:11:04.050
Let's grab the response.

169
00:11:04.050 --> 00:11:08.030
Then in that room entity let's add reservation entity

170
00:11:08.030 --> 00:11:12.050
to the list of linked reservations.

171
00:11:12.050 --> 00:11:18.000
Then using room repository, let's save that room entity.

172
00:11:18.000 --> 00:11:24.020
We are also going to persist the linked reservation entity.

173
00:11:24.020 --> 00:11:28.050
Let's actually head back to the reservation entity

174
00:11:28.050 --> 00:11:31.090
and add a room entity field,

175
00:11:31.090 --> 00:11:37.020
and let's add a many to one annotation,

176
00:11:37.020 --> 00:11:41.060
since we could have many reservations for one room.

177
00:11:41.060 --> 00:11:47.070
Let's save and add a getter and setter.

178
00:11:47.070 --> 00:11:50.070
Select room entity and OK.

179
00:11:50.070 --> 00:11:57.010
Command shift F to format and save.

180
00:11:57.010 --> 00:12:00.090
Let's set the room entity to return in the response,

181
00:12:00.090 --> 00:12:05.050
then let's create the reservation response.

182
00:12:05.050 --> 00:12:12.020
Use the conversion service, passing in a reservation entity

183
00:12:12.020 --> 00:12:16.070
and expecting a reservation response back.

184
00:12:16.070 --> 00:12:21.010
All right, let's grab that reservation response,

185
00:12:21.010 --> 00:12:25.090
and make sure that gets returned in the response entity.

186
00:12:25.090 --> 00:12:32.050
Let's make sure we have the correct return type,

187
00:12:32.050 --> 00:12:33.090
and then save.

188
00:12:33.090 --> 00:12:37.030
Let's restart.

189
00:12:37.030 --> 00:12:40.090
And let's test our post.

190
00:12:40.090 --> 00:12:46.070
Getting a 404, 'cause I might be expecting an ID field.

191
00:12:46.070 --> 00:12:50.030
Let's close.

192
00:12:50.030 --> 00:12:55.030
Let's reopen the post.

193
00:12:55.030 --> 00:12:58.010
Okay, after we open up a fresh query,

194
00:12:58.010 --> 00:13:05.010
we submitted the post, and we got a 201 created in response.

195
00:13:05.010 --> 00:13:06.090
Let's do a get.

196
00:13:06.090 --> 00:13:11.000
Let's click on the self referential link.

197
00:13:11.000 --> 00:13:13.050
We could see that reservation entity

198
00:13:13.050 --> 00:13:18.000
has been linked to the room with the ID of one.

199
00:13:18.000 --> 00:13:21.020
So we could see that the reservation entity

200
00:13:21.020 --> 00:13:24.090
was properly cascaded and linked to this room entity

201
00:13:24.090 --> 00:13:29.000
when save was executed on room repository.

