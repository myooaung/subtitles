WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.949
Spring is a very popular open source

00:00:01.949 --> 00:00:05.850
framework in the Java EE space in this

00:00:05.850 --> 00:00:08.099
lecture I will introduce you to what

00:00:08.099 --> 00:00:10.349
spring is and why it is so popular

00:00:10.349 --> 00:00:13.469
spring is a dependency injection

00:00:13.469 --> 00:00:17.460
mechanism that is if Class A depends on

00:00:17.460 --> 00:00:20.580
Class B instead of we creating the

00:00:20.580 --> 00:00:23.970
instance of class B in class A we will

00:00:23.970 --> 00:00:26.640
simply ask spring to do it so spring

00:00:26.640 --> 00:00:29.460
will come in and it will create an

00:00:29.460 --> 00:00:32.009
instance of B and it will then inject

00:00:32.009 --> 00:00:34.440
that instance into class A either

00:00:34.440 --> 00:00:36.989
through a constructor or setter methods

00:00:36.989 --> 00:00:39.780
that we provide so when we create a

00:00:39.780 --> 00:00:41.399
constructor we'll make sure that the

00:00:41.399 --> 00:00:43.950
constructor of A can take an instance of

00:00:43.950 --> 00:00:47.160
B or when we create a instead of

00:00:47.160 --> 00:00:48.780
creating a constructor we can create a

00:00:48.780 --> 00:00:51.270
setter method on Class A where we can

00:00:51.270 --> 00:00:53.670
set an instance of class B and then we

00:00:53.670 --> 00:00:55.710
can start using that instance of class B

00:00:55.710 --> 00:00:59.430
everywhere in the methods of A so that

00:00:59.430 --> 00:01:01.379
is called dependency injection so that

00:01:01.379 --> 00:01:03.329
we can focus on the business logic we

00:01:03.329 --> 00:01:05.369
need not worry how to create a huge

00:01:05.369 --> 00:01:07.320
object or how to instantiate an object

00:01:07.320 --> 00:01:11.760
it is very complicated to do that it is

00:01:11.760 --> 00:01:14.430
also called an IOC container inversion

00:01:14.430 --> 00:01:17.430
of control container because it is

00:01:17.430 --> 00:01:20.250
taking away this responsibility of

00:01:20.250 --> 00:01:23.040
creating instances from our code to the

00:01:23.040 --> 00:01:25.770
container itself so spring is also kind

00:01:25.770 --> 00:01:28.229
of a mini container which runs on other

00:01:28.229 --> 00:01:31.680
application servers that is the reason

00:01:31.680 --> 00:01:33.840
it is called inversion of control

00:01:33.840 --> 00:01:36.420
container it took away the control from

00:01:36.420 --> 00:01:41.280
our code onto itself spring also does

00:01:41.280 --> 00:01:43.350
several cool things in the Java EE space

00:01:43.350 --> 00:01:47.100
but before we go there strings can wire

00:01:47.100 --> 00:01:50.399
all the layers within a java ee

00:01:50.399 --> 00:01:52.619
application typically we have a UI layer

00:01:52.619 --> 00:01:54.540
we have a service layer we have a dao

00:01:54.540 --> 00:01:56.640
layer we also have web services layers

00:01:56.640 --> 00:01:59.340
integration JMS layer and so on so

00:01:59.340 --> 00:02:02.640
spring can be used to wire these layers

00:02:02.640 --> 00:02:05.070
together so we can create a DAO inject

00:02:05.070 --> 00:02:07.770
the DAO into a service using spring we

00:02:07.770 --> 00:02:09.569
will create a service and inject that

00:02:09.569 --> 00:02:11.970
service into the UI layer

00:02:11.970 --> 00:02:14.340
using spring so we simply tell spring to

00:02:14.340 --> 00:02:17.040
do it and it will do it for us provided

00:02:17.040 --> 00:02:19.410
we give it a constructor or a setter

00:02:19.410 --> 00:02:23.340
method to do it we can also simply use

00:02:23.340 --> 00:02:25.320
auto wiring you will see all that in

00:02:25.320 --> 00:02:28.350
action in the next few lectures along

00:02:28.350 --> 00:02:30.390
with dependency injection spring also

00:02:30.390 --> 00:02:32.190
provides several cool things like spring

00:02:32.190 --> 00:02:34.710
jdbc so the spring community the open

00:02:34.710 --> 00:02:37.050
source community if they feel that there

00:02:37.050 --> 00:02:39.390
is something in the open source world

00:02:39.390 --> 00:02:42.240
that is slightly sophisticated to use

00:02:42.240 --> 00:02:45.209
they will try to simplify things for us

00:02:45.209 --> 00:02:46.950
it will they will add one more layer

00:02:46.950 --> 00:02:49.500
over that sophistication and we can use

00:02:49.500 --> 00:02:51.150
it in our application to build our

00:02:51.150 --> 00:02:54.120
applications so jdbc they make they make

00:02:54.120 --> 00:02:57.750
usage of jdbc very using easy through

00:02:57.750 --> 00:03:00.720
spring jdbc similarly spring MVC they

00:03:00.720 --> 00:03:02.400
have seen several MVC frameworks like

00:03:02.400 --> 00:03:04.740
struts which are slightly sophisticated

00:03:04.740 --> 00:03:07.050
to use and maintain so Spring has come

00:03:07.050 --> 00:03:08.610
up with their own version of

00:03:08.610 --> 00:03:11.370
implementing MVC framework for web

00:03:11.370 --> 00:03:14.280
applications or the web layer spring MVC

00:03:14.280 --> 00:03:16.680
can also be used to implement a restful

00:03:16.680 --> 00:03:19.860
web services spring ORM support

00:03:19.860 --> 00:03:22.140
string has beautiful or great support

00:03:22.140 --> 00:03:26.700
for tools like hibernate jpa etc so it

00:03:26.700 --> 00:03:28.800
will make our job of using hibernate and

00:03:28.800 --> 00:03:32.070
JPA tools very easy spring integration

00:03:32.070 --> 00:03:35.850
this is similar to how we do JMS so

00:03:35.850 --> 00:03:37.830
Spring has an implementation on how to

00:03:37.830 --> 00:03:40.560
put messages on to queues and topics

00:03:40.560 --> 00:03:43.500
spring web services we can implement soap

00:03:43.500 --> 00:03:45.390
based services using the spring Web

00:03:45.390 --> 00:03:47.250
Services module so all these are

00:03:47.250 --> 00:03:48.840
additional things in addition to

00:03:48.840 --> 00:03:50.400
dependency injection that spring

00:03:50.400 --> 00:03:52.950
community provides so in the next few

00:03:52.950 --> 00:03:55.799
lectures it will come up with a spring

00:03:55.799 --> 00:03:58.590
application string maven project you

00:03:58.590 --> 00:03:59.970
will create a services layer and you

00:03:59.970 --> 00:04:01.260
will create a dao layer and then you

00:04:01.260 --> 00:04:03.540
will test it using j unit mockito and

00:04:03.540 --> 00:04:07.230
support of spring test so the main thing

00:04:07.230 --> 00:04:09.269
here is spring test I want to show you

00:04:09.269 --> 00:04:11.640
how you can test your spring based

00:04:11.640 --> 00:04:16.640
applications using this combination here.

