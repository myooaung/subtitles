WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.909
What is maven the developers call it a

00:00:02.909 --> 00:00:05.580
build automation tool but it is much

00:00:05.580 --> 00:00:07.620
more than that it is a project

00:00:07.620 --> 00:00:11.550
management tool. Building a project means

00:00:11.550 --> 00:00:14.190
compiling the source code running the

00:00:14.190 --> 00:00:16.740
tests which could be unit tests as well

00:00:16.740 --> 00:00:19.859
as integration tests packaging the

00:00:19.859 --> 00:00:22.949
compiled code into jar files bundling

00:00:22.949 --> 00:00:25.560
these jar files into a web archive or a

00:00:25.560 --> 00:00:28.590
war file deploying these wars on to the

00:00:28.590 --> 00:00:31.590
servers and several other tasks all

00:00:31.590 --> 00:00:34.620
these tasks can be automated using tools

00:00:34.620 --> 00:00:39.180
such as maven and etc if you have worked

00:00:39.180 --> 00:00:42.480
with tools like ant apache ant then you

00:00:42.480 --> 00:00:44.070
know that we have to come up with a lot

00:00:44.070 --> 00:00:47.190
of XML configuration to perform these

00:00:47.190 --> 00:00:49.890
tasks or to automate these tasks for our

00:00:49.890 --> 00:00:53.879
application whereas maven uses

00:00:53.879 --> 00:00:57.870
convention over configuration that is if

00:00:57.870 --> 00:00:59.820
we follow a certain project structure

00:00:59.820 --> 00:01:03.690
when we create our projects such as here

00:01:03.690 --> 00:01:05.549
is the base project directory under it

00:01:05.549 --> 00:01:10.170
source main Java source folder has a

00:01:10.170 --> 00:01:12.720
child folder called main under it we

00:01:12.720 --> 00:01:14.640
have Java this is where all our source

00:01:14.640 --> 00:01:17.939
code should go source main SRC main

00:01:17.939 --> 00:01:20.189
resources is where any resources such as

00:01:20.189 --> 00:01:22.740
property files or XML configuration that

00:01:22.740 --> 00:01:25.950
we use in our Java classes should go

00:01:25.950 --> 00:01:29.220
SRC test Java is where all our unit

00:01:29.220 --> 00:01:31.110
and integration tests should be placed

00:01:31.110 --> 00:01:34.170
and finally SRC test resources is

00:01:34.170 --> 00:01:36.960
where all the property files or XML

00:01:36.960 --> 00:01:39.479
configuration that we use on our tests

00:01:39.479 --> 00:01:44.250
should be placed once we use this folder

00:01:44.250 --> 00:01:46.799
structure we can simply execute a maven

00:01:46.799 --> 00:01:49.950
command such as maven install and maven

00:01:49.950 --> 00:01:52.110
will compile the source code under the

00:01:52.110 --> 00:01:57.030
SRC main Java run the unit tests under

00:01:57.030 --> 00:01:59.670
SRC test Java and if the tests pass it

00:01:59.670 --> 00:02:02.399
will bundle or package the compiled

00:02:02.399 --> 00:02:04.680
classes into a jar file if it is a

00:02:04.680 --> 00:02:07.290
standalone java application if it is a

00:02:07.290 --> 00:02:09.149
web application it will bundle it into a

00:02:09.149 --> 00:02:13.560
war file and it can also deploy

00:02:13.560 --> 00:02:15.390
the war file onto a web application.

00:02:15.390 --> 00:02:18.330
This folder structure will be slightly

00:02:18.330 --> 00:02:20.280
different for a standalone Java project

00:02:20.280 --> 00:02:22.680
for a web application and for different

00:02:22.680 --> 00:02:25.230
types of projects but the beauty is that

00:02:25.230 --> 00:02:27.690
we need not create these folders

00:02:27.690 --> 00:02:30.750
manually for each type of project maven

00:02:30.750 --> 00:02:34.470
provides several archetypes think about

00:02:34.470 --> 00:02:37.560
these archetypes as templates we can

00:02:37.560 --> 00:02:39.989
execute a command with an archetype and

00:02:39.989 --> 00:02:42.930
it will create the folder structure the

00:02:42.930 --> 00:02:44.910
standard folder structure required by

00:02:44.910 --> 00:02:47.910
maven for us there are different types

00:02:47.910 --> 00:02:51.299
of archetypes like standalone, webapp, EAR

00:02:51.299 --> 00:02:54.930
etc another additional advantage is that

00:02:54.930 --> 00:02:57.720
all the popular ides such as Eclipse

00:02:57.720 --> 00:03:01.590
IntelliJ come with inbuilt support for

00:03:01.590 --> 00:03:05.340
these archetypes we can create the

00:03:05.340 --> 00:03:06.870
project's the different types of maven

00:03:06.870 --> 00:03:10.380
projects from within an IDE and also

00:03:10.380 --> 00:03:12.989
run and execute our build from within

00:03:12.989 --> 00:03:17.299
eclipse from within intelliJ.

