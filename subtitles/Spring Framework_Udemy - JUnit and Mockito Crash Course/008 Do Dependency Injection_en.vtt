WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.850
Now we have all the amination that is

00:00:02.850 --> 00:00:04.890
required to do spring dependency

00:00:04.890 --> 00:00:07.109
injection so let's open up the ticket

00:00:07.109 --> 00:00:09.690
service impl double click to maximize

00:00:09.690 --> 00:00:13.049
it we have defined or declared the

00:00:13.049 --> 00:00:14.580
ticketing DAO but we haven't

00:00:14.580 --> 00:00:17.160
instantiated it at anywhere in our

00:00:17.160 --> 00:00:20.100
service simple so let's use spring to do

00:00:20.100 --> 00:00:22.590
that dependency injection the first step

00:00:22.590 --> 00:00:26.670
is to define these as components so

00:00:26.670 --> 00:00:29.550
instead of defining them as beans in

00:00:29.550 --> 00:00:31.470
this configuration file which is one way

00:00:31.470 --> 00:00:34.200
of doing it we can use the annotation

00:00:34.200 --> 00:00:37.590
way which is much easier so we will

00:00:37.590 --> 00:00:40.950
define these as spring components at

00:00:40.950 --> 00:00:49.649
component control one import the

00:00:49.649 --> 00:00:52.110
component annotation from the spring API

00:00:52.110 --> 00:00:57.989
similarly go to the service impl at

00:00:57.989 --> 00:01:00.270
component so we are defining both

00:01:00.270 --> 00:01:02.969
the it's from org spring framework

00:01:02.969 --> 00:01:08.220
stereotype package so the service impl

00:01:08.220 --> 00:01:10.770
and DAO impl are now spring

00:01:10.770 --> 00:01:13.770
components inside service impl the

00:01:13.770 --> 00:01:17.759
next annotation is at auto void from

00:01:17.759 --> 00:01:19.619
Spring framework this tells spring that

00:01:19.619 --> 00:01:24.210
this DAO should be automatically wide so

00:01:24.210 --> 00:01:26.790
spring scans through it has to scan

00:01:26.790 --> 00:01:28.619
through these packages and our

00:01:28.619 --> 00:01:30.720
application is loaded so we have to tell

00:01:30.720 --> 00:01:33.150
spring now that which packages here

00:01:33.150 --> 00:01:36.360
should be scanned for the beans to do

00:01:36.360 --> 00:01:39.000
that go back to the application context

00:01:39.000 --> 00:01:42.210
hifen context dot xml here will

00:01:42.210 --> 00:01:43.619
not be defining the beans but we'll

00:01:43.619 --> 00:01:48.060
simply use the context components can

00:01:48.060 --> 00:01:52.259
element and for the base package take

00:01:52.259 --> 00:01:54.000
any package here right click on the

00:01:54.000 --> 00:01:58.649
package name refactor rename that save

00:01:58.649 --> 00:02:00.960
application context it okay instead of

00:02:00.960 --> 00:02:03.750
saying dao will take up to spring

00:02:03.750 --> 00:02:08.310
because we want spring to scan both the

00:02:08.310 --> 00:02:11.039
dao as well as the service packages

00:02:11.039 --> 00:02:12.560
because that is

00:02:12.560 --> 00:02:15.500
we have defined all our components so it

00:02:15.500 --> 00:02:18.080
will scan through these packages it will

00:02:18.080 --> 00:02:20.270
find that DAO is a component so it

00:02:20.270 --> 00:02:21.920
will remember that then it will go to

00:02:21.920 --> 00:02:24.110
the service it will see that this is

00:02:24.110 --> 00:02:26.150
also a spring component so it will go in

00:02:26.150 --> 00:02:29.750
and it will look at this this is where

00:02:29.750 --> 00:02:30.860
we are telling spring that we

00:02:30.860 --> 00:02:33.050
automatically want to inject this DAO

00:02:33.050 --> 00:02:35.269
any class that implements this DAO

00:02:35.269 --> 00:02:38.510
interface can be injected into it so

00:02:38.510 --> 00:02:40.489
spring will look which class implements

00:02:40.489 --> 00:02:43.099
this DAO here we have only one class

00:02:43.099 --> 00:02:44.870
so no issues spring will instantiate

00:02:44.870 --> 00:02:47.000
this create an instance of it and it

00:02:47.000 --> 00:02:50.390
will inject it into our service then we

00:02:50.390 --> 00:02:53.690
can use it as we are doing currently so

00:02:53.690 --> 00:02:55.760
go back to the application context that

00:02:55.760 --> 00:02:57.349
is all we need in the application

00:02:57.349 --> 00:03:00.049
context ctrl shift F to format it let me

00:03:00.049 --> 00:03:01.640
add a line so that you can see it

00:03:01.640 --> 00:03:04.160
clearly so here we are just telling

00:03:04.160 --> 00:03:06.019
spring that it should scan through the

00:03:06.019 --> 00:03:08.599
com bharathj-unit spring and all its

00:03:08.599 --> 00:03:11.410
sub packages.

