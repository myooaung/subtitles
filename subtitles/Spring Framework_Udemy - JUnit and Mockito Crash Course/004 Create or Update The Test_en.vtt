WEBVTT
Kind: captions
Language: en

00:00:00.465 --> 00:00:01.465
In this lecture

00:00:02.100 --> 00:00:04.580
our parameterized test by

00:00:04.580 --> 00:00:06.820
updating the test methods since we already

00:00:06.825 --> 00:00:09.595
have a test method we are not going to  create it we are going to

00:00:09.595 --> 00:00:12.865
update it to use the parameterized values

00:00:12.865 --> 00:00:15.925
and then finally we mark our test class with the

00:00:16.495 --> 00:00:19.515
@parameterized class so that junit will use

00:00:19.515 --> 00:00:22.455
this class to run our test and not the

00:00:22.455 --> 00:00:24.175
default junit runner.

00:00:24.635 --> 00:00:27.185
Lets go back to eclipse

00:00:28.705 --> 00:00:31.665
and in our test method its very simple

00:00:31.665 --> 00:00:32.805
instead of this 10

00:00:33.255 --> 00:00:34.455
and 20

00:00:34.915 --> 00:00:37.905
the hardcoded values here we are going to use num 1

00:00:38.555 --> 00:00:40.255
and num 2

00:00:40.615 --> 00:00:43.615
and in place of 30 we are going to simply say

00:00:43.615 --> 00:00:46.495
this result or we can better

00:00:46.495 --> 00:00:49.465
rename this result to expected

00:00:50.135 --> 00:00:51.135
result

00:00:53.125 --> 00:00:55.085
and use it everywhere

00:00:55.085 --> 00:00:57.795
update the constructor to use it

00:00:57.795 --> 00:00:59.005
and then instead of this

00:00:59.495 --> 00:01:02.915
30 exchanges this to expected result.

00:01:04.525 --> 00:01:07.495
The last and final step is to mark this class

00:01:07.495 --> 00:01:08.635
with the

00:01:09.295 --> 00:01:12.305
@run with annotation and give it

00:01:12.785 --> 00:01:14.485
the runner which is

00:01:15.785 --> 00:01:19.055
parmeters or

00:01:19.055 --> 00:01:21.895
parameterized.class so this is another runner

00:01:21.895 --> 00:01:25.205
from the junit API which you should use  when you are

00:01:25.245 --> 00:01:28.455
writing parameterized test when we run this test now

00:01:28.555 --> 00:01:30.205
junit instead of

00:01:30.735 --> 00:01:33.725
using the default runner it will use the parameterized runner

00:01:33.725 --> 00:01:36.865
so lets run it , go to the play button run as

00:01:36.895 --> 00:01:38.275
junit test

00:01:38.795 --> 00:01:41.835
everything is green as you can see we have one single test

00:01:41.835 --> 00:01:44.825
method but if you see its being run

00:01:44.825 --> 00:01:45.855
3 times

00:01:46.765 --> 00:01:50.065
with different data sets and its green

00:01:50.065 --> 00:01:51.215
for all the three cases.

00:01:51.765 --> 00:01:54.625
Now let me change the data  sets for one of these

00:01:54.625 --> 00:01:57.335
let say 1 and 2 1+2 when they are added

00:01:57.865 --> 00:02:00.885
lets expect a result which is 5

00:02:00.885 --> 00:02:01.885
instead of 3

00:02:02.195 --> 00:02:03.455
and lets rerun our test

00:02:03.965 --> 00:02:05.885
as you can see two of the

00:02:06.705 --> 00:02:08.215
data sets go green whereas

00:02:10.075 --> 00:02:11.515
one of the datasets

00:02:12.205 --> 00:02:15.085
has failed and if you click on it

00:02:15.085 --> 00:02:17.715
you can see that expected result is 5

00:02:17.715 --> 00:02:20.525
but was 3  so thats the beauty of

00:02:20.525 --> 00:02:22.785
parameterized tests, ill explain the flow

00:02:23.485 --> 00:02:26.565
the next lecture, lets fix this test

00:02:26.565 --> 00:02:29.855
lets make it all green 1+2 should return 3

00:02:30.145 --> 00:02:32.545
rerun the test and its all green.

