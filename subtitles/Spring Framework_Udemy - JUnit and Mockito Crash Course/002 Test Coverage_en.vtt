WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.970
Test coverage or code coverage is the

00:00:02.970 --> 00:00:05.580
number of lines of our source code that

00:00:05.580 --> 00:00:08.130
is tested when our unit tests are run

00:00:08.130 --> 00:00:10.290
against the source code.

00:00:10.290 --> 00:00:12.300
This includes conditional statement

00:00:12.300 --> 00:00:14.549
looping statement the number of

00:00:14.549 --> 00:00:16.560
parameters that we pass into a method

00:00:16.560 --> 00:00:18.390
the type of parameters we pass into the

00:00:18.390 --> 00:00:20.939
method and everything that has to do

00:00:20.939 --> 00:00:24.330
with our source code we measure code

00:00:24.330 --> 00:00:29.189
coverage using tools, these to run our tests

00:00:29.189 --> 00:00:32.279
against the source code and will give us

00:00:32.279 --> 00:00:36.059
the percentage of code coverage and will also

00:00:36.059 --> 00:00:39.090
show us which lines of source code are

00:00:39.090 --> 00:00:42.270
tested which lines are not tested and

00:00:42.270 --> 00:00:45.629
which need more testing for example here

00:00:45.629 --> 00:00:48.780
is the ifelse block wherein we do a

00:00:48.780 --> 00:00:51.000
money transfer if there is money in the

00:00:51.000 --> 00:00:53.579
account and we will a throw an exception if

00:00:53.579 --> 00:00:56.910
there is no sufficient funds if for some

00:00:56.910 --> 00:00:59.879
reason we have only tested the if

00:00:59.879 --> 00:01:03.359
portion and because of our lazinesswe dint

00:01:03.359 --> 00:01:05.070
test the else portion of it we didn't

00:01:05.070 --> 00:01:06.720
write a unit test method for this else

00:01:06.720 --> 00:01:09.570
portion then we run test coverage tools

00:01:09.570 --> 00:01:14.400
they will pinpoint as to show that this

00:01:14.400 --> 00:01:16.439
particular piece is tested to show this

00:01:16.439 --> 00:01:18.630
piece in green and it will show this

00:01:18.630 --> 00:01:21.869
piece in red because it scans through our code

00:01:21.869 --> 00:01:24.270
as the tests are run it will look at which

00:01:24.270 --> 00:01:26.610
lines of source code are being executed and

00:01:26.610 --> 00:01:28.740
which are not being executed kind of

00:01:28.740 --> 00:01:33.299
enlyzes at our code time there are

00:01:33.299 --> 00:01:36.580
several open source tools starting with

00:01:36.580 --> 00:01:38.340
eclipse Emma which uses the  Jacoco open

00:01:38.340 --> 00:01:40.590
source library Cobertura is

00:01:40.590 --> 00:01:42.270
another famous open source tool that

00:01:42.270 --> 00:01:45.090
measures unit test coverage then we have

00:01:45.090 --> 00:01:48.600
Jtest as well. All these tools can be easily

00:01:48.600 --> 00:01:50.130
integrated into our continuous

00:01:50.130 --> 00:01:51.990
integration and build process for

00:01:51.990 --> 00:01:53.729
example we can integrate it with Jenkins

00:01:53.729 --> 00:01:56.189
and we can easily make them a part of

00:01:56.189 --> 00:01:57.960
our build process like Maven, ANT

00:01:57.960 --> 00:02:03.180
or ANT builds. These build these tools at the end of it when they use these tools

00:02:03.180 --> 00:02:05.759
internally they will generate beautiful reports of

00:02:05.759 --> 00:02:08.489
code coverage which can be published on to

00:02:08.489 --> 00:02:10.920
Jenkins dashboard or any other build tool  or

00:02:10.920 --> 00:02:13.230
continuous integration tools dashboard

00:02:13.230 --> 00:02:13.380
 

00:02:13.380 --> 00:02:15.840
and our management and architects can log in

00:02:15.840 --> 00:02:19.800
and see how much tests or coverage we are

00:02:19.800 --> 00:02:21.690
maintaining on each of our projects or

00:02:21.690 --> 00:02:23.700
how good we are writing our unit tests.

00:02:23.700 --> 00:02:27.930
These tools also provice plugins for

00:02:27.930 --> 00:02:30.600
various Ides in the next lecture we'll be

00:02:30.600 --> 00:02:33.480
installing the eclipse Emma or ACL Emma

00:02:33.480 --> 00:02:36.420
old coverage plug-in in eclipse and

00:02:36.420 --> 00:02:41.930
we'll be measuring test coverage using ECL Emma.

