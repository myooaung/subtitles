WEBVTT

0
00:00.090 --> 00:05.970
In this lecture, we'll see what we have to test in the product service to do that, go to the product

1
00:05.970 --> 00:08.400
rest controller in the product service project.

2
00:09.920 --> 00:15.560
Take a look at the dependencies we have two dependencies being auto wired, the product repo and also the

3
00:15.560 --> 00:16.640
rest template.

4
00:16.670 --> 00:20.830
This time we are going to mock the rest template as well, along with the repository.

5
00:21.170 --> 00:28.520
And one issue we have here and we are using Mockito and working with Spring is that this @ value annotation

6
00:28.820 --> 00:34.310
from spring won't take into effect when we are running our unit tests and using Mockito.

7
00:34.310 --> 00:36.260
There are alternatives for that.

8
00:36.260 --> 00:42.310
You can Google and figure out and maybe one day we can directly use Mockito and Springboot together.

9
00:42.740 --> 00:44.390
But I'm going to take a shortcut.

10
00:44.390 --> 00:47.390
I'm going to generate getter and setter methods for this hit control

11
00:47.390 --> 00:49.820
One create Getter and setter methods.

12
00:50.450 --> 00:51.350
Say OK.

13
00:52.790 --> 00:58.070
So the getter method will be used even here, if you take a look earlier, it was directly the property.

14
00:58.370 --> 01:03.690
Now it is the getter method that is being used when we run this application.

15
01:03.740 --> 01:04.310
Yes.

16
01:05.490 --> 01:09.720
This url will be injected from the application dot properties, but when we write that unit test,

17
01:09.720 --> 01:15.390
I'm going to use this setter method and I'm going to set the url directly instead of reading from

18
01:15.390 --> 01:22.560
the property file just for the unit test, because mockito and Springboot @ value, have some issues.

19
01:22.560 --> 01:28.270
You can go ahead and do a Google search and figure out alternatives, or you can follow my approach.

20
01:28.560 --> 01:33.780
The first thing we need to do here, once you have these getters and setters is to go to the coupon service,

21
01:34.380 --> 01:36.300
go to the Pom Dot XML.

22
01:37.320 --> 01:41.340
Grab the mockito dependancy, copy that.

23
01:42.490 --> 01:47.080
Come back to the product service, open the Pom dot xml, DoubleClick to maximize that.

24
01:50.410 --> 01:56.950
Add that right after the test dependancy do a control shift F to format, we have the mockito dependency

25
01:56.950 --> 02:02.640
go to the product service application tests and we'll start writing our test in the next lecture.