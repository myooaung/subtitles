WEBVTT

0
00:00.090 --> 00:06.180
A step is to add a services layer so that we can mock  it later on to do that right, click on the package,

1
00:06.480 --> 00:14.850
new interface call it  greeting service, the greeting service.

2
00:14.850 --> 00:21.330
You can take this method  signature here from the greeting imple paste it  inside the interface.

3
00:21.360 --> 00:22.800
This will be an abstract method.

4
00:22.800 --> 00:25.170
We don't have to declare it as public.

5
00:27.750 --> 00:29.220
Implement this interface right.

6
00:29.220 --> 00:33.750
Like new class call it  grouping service.

7
00:34.050 --> 00:39.900
IMPL  click on add search for greeting service.

8
00:40.770 --> 00:41.820
Select that interface click.

9
00:41.820 --> 00:45.360
OK, finish the implementation here.

10
00:45.360 --> 00:50.370
You can grab the implementation from the greet method inside the greeting Impl.

11
00:51.510 --> 00:54.370
Cut it out, come to the greeting service IMPL 

12
00:54.540 --> 00:58.200
Select everything paste it  do a control shift F2 format 

13
00:58.200 --> 01:01.900
So the implementation has now been moved to the greeting service IMPL 

14
01:02.340 --> 01:05.910
The greeting implementation will be very simple.

15
01:06.210 --> 01:07.620
It simply will.

16
01:09.230 --> 01:20.090
Inject the greeting service IMPL here private greeting service service, and it simply returns whatever

17
01:20.090 --> 01:30.650
the service Dot greet, MÃ©thod  returns a very simple services Layer  has been added then entire  logic

18
01:30.650 --> 01:37.280
is now hosted  by this service, including the exception part, and we will be invoking this method 

19
01:37.280 --> 01:43.340
will be testing this method inside, greeting implementation while mocking the greeting service implementation

20
01:43.340 --> 01:45.050
or  the greeting service interface.