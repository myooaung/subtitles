WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.979
In this lecture, we will learn a few more

00:00:01.979 --> 00:00:04.620
base to use the verify method to make

00:00:04.620 --> 00:00:07.109
sure that the methods on the mockedout

00:00:07.109 --> 00:00:09.690
object are getting called you have already

00:00:09.690 --> 00:00:13.500
seen the verify in action wherein by default

00:00:13.500 --> 00:00:15.089
if you go to this first test

00:00:15.089 --> 00:00:17.850
method the place order tests we are

00:00:17.850 --> 00:00:20.310
verifying that the create order for the

00:00:20.310 --> 00:00:22.260
create method on the DAO is getting

00:00:22.260 --> 00:00:24.420
called by default this verify checks

00:00:24.420 --> 00:00:27.150
if this method is getting called once by

00:00:27.150 --> 00:00:29.849
the verify method has overloaded

00:00:29.849 --> 00:00:33.329
versions, control space as you can

00:00:33.329 --> 00:00:35.610
see the second overloaded or the overloaded

00:00:35.610 --> 00:00:37.260
version of verify will allow us to

00:00:37.260 --> 00:00:39.930
passin a verification mode, this is an

00:00:39.930 --> 00:00:41.850
interface and there are multiple methods

00:00:41.850 --> 00:00:43.950
using which we can get an implementation

00:00:43.950 --> 00:00:49.559
of this first way to get it is times we

00:00:49.559 --> 00:00:52.170
can say there is a times method available on

00:00:52.170 --> 00:00:55.020
the mockito object here mockito

00:00:55.020 --> 00:00:56.280
class here it is a static method

00:00:56.280 --> 00:00:58.079
available on the mockito class so we

00:00:58.079 --> 00:01:00.239
can save times and the number of times

00:01:00.239 --> 00:01:02.489
we want this method will be called by

00:01:02.489 --> 00:01:04.739
default it is one anyway but i'm using

00:01:04.739 --> 00:01:08.880
one again let's run this test run as junit

00:01:08.880 --> 00:01:11.880
test everything is green now if i change

00:01:11.880 --> 00:01:16.530
this to, to save time thing create method

00:01:16.530 --> 00:01:18.450
should be called twice when we call the

00:01:18.450 --> 00:01:20.729
place order method which is a wrong so

00:01:20.729 --> 00:01:22.860
let's try running this unit test again

00:01:22.860 --> 00:01:24.810
as you can see the test fails and it

00:01:24.810 --> 00:01:28.200
says two little actual invocations so we

00:01:28.200 --> 00:01:29.640
are expecting too many invocations but

00:01:29.640 --> 00:01:32.670
there are two little actual invocations

00:01:32.670 --> 00:01:36.450
that's the error message. The other

00:01:36.450 --> 00:01:39.299
methods that are available are atleast

00:01:39.299 --> 00:01:44.790
very similar to times at least make sure

00:01:44.790 --> 00:01:47.280
that at least this method is called these

00:01:47.280 --> 00:01:48.840
many times so we can pass in whatever

00:01:48.840 --> 00:01:51.270
number we want 2 3 again this test

00:01:51.270 --> 00:01:53.790
should fail because we are saying at

00:01:53.790 --> 00:01:58.350
least twice bypass in one save it run it

00:01:58.350 --> 00:02:00.299
this test will pass again the

00:02:00.299 --> 00:02:03.869
verification mode allows us to verify in

00:02:03.869 --> 00:02:06.149
that different way we can tell how many

00:02:06.149 --> 00:02:08.129
times this method should be invoked by

00:02:08.129 --> 00:02:10.440
default it is one there are other

00:02:10.440 --> 00:02:12.420
verification modes that are available you can

00:02:12.420 --> 00:02:14.010
refer to the mockito

00:02:14.010 --> 00:02:16.430
documentation.

