WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
In this final installment , I will explain the flow of

00:00:04.000 --> 00:00:06.720
how exact the parameterized test work

00:00:06.720 --> 00:00:09.960
so when we run our test at runtime

00:00:09.960 --> 00:00:12.720
the junit will immediately know

00:00:12.720 --> 00:00:16.160
that it should use the parameterized class to run this test

00:00:16.160 --> 00:00:18.920
we use it and this parameterized class

00:00:18.920 --> 00:00:22.040
knows to invoke a static method

00:00:22.040 --> 00:00:24.800
which is marked with the @parameters annotation.

00:00:24.800 --> 00:00:29.200
that is the first thing it does and it gets this data set.

00:00:29.200 --> 00:00:35.920
It then uses this data set to create an intance of our class

00:00:35.920 --> 00:00:38.880
or it calls this particular constructor

00:00:39.960 --> 00:00:44.200
and then when it executes this test method automatically

00:00:44.200 --> 00:00:48.720
these 3 values will be substituted in here.

00:00:50.080 --> 00:00:52.920
So it first does it with this data set it creates or it calls this constructor

00:00:52.940 --> 00:00:57.240
and then it calls the constructor again with this data set

00:00:57.240 --> 00:01:04.040
runs this set again it does the same thing for the last and final data set

00:01:04.040 --> 00:01:07.440
So that is the power pf parameterized test

00:01:07.440 --> 00:01:14.000
we can execute one single test multiple times with different data sets by simply

00:01:14.000 --> 00:01:19.040
coming up with a static method first we have created the fields at the test class level

00:01:19.040 --> 00:01:23.160
then we have come up with the constructor when we have a static method

00:01:23.160 --> 00:01:25.160
that provides different data sets.

00:01:25.160 --> 00:01:28.480
we have to mark this static method with the @parameters annotation

00:01:28.480 --> 00:01:32.000
and we have to use the parameterized runner.

