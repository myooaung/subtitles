WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.550
So far we have tested our BO

00:00:02.550 --> 00:00:05.879
for a positive scenario and a negative

00:00:05.879 --> 00:00:08.280
scenario we'll be testing the place

00:00:08.280 --> 00:00:10.710
order for an exception scenario in this

00:00:10.710 --> 00:00:14.190
lecture that is in the BOimpl if the

00:00:14.190 --> 00:00:16.710
DAO.create method throws a

00:00:16.710 --> 00:00:20.100
sequel exception we or our place orders

00:00:20.100 --> 00:00:22.560
should wrap it up inside BOexception

00:00:22.560 --> 00:00:24.539
and throw a BOexception back that

00:00:24.539 --> 00:00:26.070
is the behavior which we are going to

00:00:26.070 --> 00:00:28.199
test it for will be using the power of

00:00:28.199 --> 00:00:30.779
junit as well as mockito.

00:00:30.779 --> 00:00:31.710
Go back to the test

00:00:31.710 --> 00:00:38.969
copy one of the test methods paste it, let me

00:00:38.969 --> 00:00:40.410
enter some lines so that you can easily

00:00:40.410 --> 00:00:44.070
see it and instead of place order should

00:00:44.070 --> 00:00:46.739
not create an order we simply place order

00:00:46.739 --> 00:00:52.379
should throw BOexception

00:00:52.379 --> 00:00:54.660
it should throw a BOexception that is

00:00:54.660 --> 00:00:58.350
what we are testing it for and in

00:00:58.350 --> 00:01:00.239
here will be using instead of then return

00:01:00.239 --> 00:01:02.190
when DAO.create order we are

00:01:02.190 --> 00:01:05.100
going to stub it for then control space

00:01:05.100 --> 00:01:10.320
using then through in here we can

00:01:10.320 --> 00:01:12.570
specify what exception should be thrown

00:01:12.570 --> 00:01:16.799
so remove everything else then throw

00:01:16.799 --> 00:01:20.070
sequel control space sequelexception.class

00:01:20.070 --> 00:01:26.790
can ignore the warning we are

00:01:26.790 --> 00:01:28.170
stubbing it out so that our DAOcreate

00:01:28.170 --> 00:01:30.630
method will throw a sequel exception

00:01:30.630 --> 00:01:33.000
we are not going to assert or verify

00:01:33.000 --> 00:01:34.799
for anything in this case you can remove

00:01:34.799 --> 00:01:37.380
those two lines because an exception is

00:01:37.380 --> 00:01:40.229
being thrown and here on the test

00:01:40.229 --> 00:01:44.670
annotation will use the expected attribute

00:01:44.670 --> 00:01:46.079
which you have learned from the

00:01:46.079 --> 00:01:48.240
junit section and the exception we are

00:01:48.240 --> 00:01:52.860
expecting is BOexception.class

00:01:52.860 --> 00:01:56.520
that simple, we have stubbed out that

00:01:56.520 --> 00:01:59.219
DAO to throw a sequel exception and we are

00:01:59.219 --> 00:02:01.530
using the expected attribute on the test

00:02:01.530 --> 00:02:03.659
annotation to ensure that we are getting

00:02:03.659 --> 00:02:04.350
 

00:02:04.350 --> 00:02:06.299
a BO exception back when we call the

00:02:06.299 --> 00:02:10.470
BO.placeorder run it we are going to

00:02:10.470 --> 00:02:13.090
the play button here run as

00:02:13.090 --> 00:02:17.440
junit test everything is green.

00:02:17.440 --> 00:02:20.500
That simple to test a exception

00:02:20.500 --> 00:02:22.569
scenario we can use the Then throw method

00:02:22.569 --> 00:02:24.400
available in the mockito API instead

00:02:24.400 --> 00:02:26.590
of thenreturen and we can tell whatever

00:02:26.590 --> 00:02:30.510
exception should be thrown.

