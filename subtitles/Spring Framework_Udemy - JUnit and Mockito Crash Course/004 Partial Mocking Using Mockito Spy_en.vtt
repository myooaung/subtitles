WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.979
In this lecture, I will show you how

00:00:01.979 --> 00:00:05.730
mockito spy works and how we can use

00:00:05.730 --> 00:00:09.389
it to implement partial mocking to do

00:00:09.389 --> 00:00:11.250
that you will be reusing the order

00:00:11.250 --> 00:00:14.130
processing service but will not be

00:00:14.130 --> 00:00:16.650
testing the order processing code but will  be

00:00:16.650 --> 00:00:19.470
testing the java dot.itil.list class

00:00:19.470 --> 00:00:22.769
itself by is writing a very small

00:00:22.769 --> 00:00:25.170
test against it the reason I want to

00:00:25.170 --> 00:00:27.210
use this is we don't want to spend time

00:00:27.210 --> 00:00:28.949
on adding the mockito dependencies

00:00:28.949 --> 00:00:31.890
and all that so right click on the test

00:00:31.890 --> 00:00:37.350
folder here say New go to other type in

00:00:37.350 --> 00:00:40.290
junit select the junit test case

00:00:40.290 --> 00:00:44.700
click on next change the package name

00:00:44.700 --> 00:00:52.590
from com.bharath to com.bharath.mockito.spy and the name of the

00:00:52.590 --> 00:00:56.879
class let's call it list test click

00:00:56.879 --> 00:01:00.390
finish so we have our test case here maximize

00:01:00.390 --> 00:01:04.199
by double clicking on the name declare

00:01:04.199 --> 00:01:09.930
a failed lists my list is equal to lets have a

00:01:09.930 --> 00:01:21.090
type string new array list control one to

00:01:21.090 --> 00:01:24.390
import it ctrl one again to import

00:01:24.390 --> 00:01:28.710
java.utl.list save it now to

00:01:28.710 --> 00:01:31.860
partially mock this list will mark it

00:01:31.860 --> 00:01:36.090
with @spy annotation from mockito so

00:01:36.090 --> 00:01:39.479
hit ctrl one on the spy import it from

00:01:39.479 --> 00:01:43.920
org.mockito.spy so now all the

00:01:43.920 --> 00:01:47.280
methods on this list will be called the

00:01:47.280 --> 00:01:50.549
real method will be called if we don't

00:01:50.549 --> 00:01:51.899
stub them out

00:01:51.899 --> 00:01:56.759
let's initialize mockito by having public

00:01:56.759 --> 00:02:03.360
void init method and in here and say

00:02:03.360 --> 00:02:09.429
mockito annotations.finish mock this

00:02:09.429 --> 00:02:12.459
mark this method with the @before

00:02:12.459 --> 00:02:18.760
junit annotation ctrl1 import it so far we

00:02:18.760 --> 00:02:24.340
have declared this object to be spied and

00:02:24.340 --> 00:02:27.159
we aren't stubbed out any methods let's

00:02:27.159 --> 00:02:29.409
stubbout some methods now or even

00:02:29.409 --> 00:02:31.930
before we stubout let's call my list.add bharath

00:02:31.930 --> 00:02:43.239
my list.add one more name

00:02:43.239 --> 00:02:44.980
here you can add your name if you want

00:02:44.980 --> 00:02:46.480
i'm going to add my brother's name

00:02:46.480 --> 00:02:51.189
sarath so this call here he's calling

00:02:51.189 --> 00:02:53.980
the real method now let me show you how

00:02:53.980 --> 00:02:57.280
to stubout something on a spy to stub a method

00:02:57.280 --> 00:03:01.750
call on a spy  we can't do when we can't

00:03:01.750 --> 00:03:03.790
directly use when class i will show you why in

00:03:03.790 --> 00:03:07.689
in in the next step we have to use do

00:03:07.689 --> 00:03:13.959
mockito. doreturn and then my

00:03:13.959 --> 00:03:28.239
list.do return 3. when my list dot size is

00:03:28.239 --> 00:03:31.659
called although the size here is only 2

00:03:31.659 --> 00:03:35.650
i'm mocking out just to show you that the

00:03:35.650 --> 00:03:41.439
size is 3 now we can assert, assert same

00:03:41.439 --> 00:03:49.479
three comma my list.size I'll

00:03:49.479 --> 00:03:52.870
explain everything in a minute once we wrap this up

00:03:52.870 --> 00:03:59.139
right click go to run as junit test

00:03:59.139 --> 00:04:02.530
everything is green so what exactly

00:04:02.530 --> 00:04:05.560
happened here is we have partially

00:04:05.560 --> 00:04:11.919
mocked the list array list class here and

00:04:11.919 --> 00:04:15.129
we have used the syntax do written to

00:04:15.129 --> 00:04:17.529
mockout one of the methods which is the

00:04:17.529 --> 00:04:20.260
size method on this my list and when we

00:04:20.260 --> 00:04:22.240
are calling the ad it is really calling

00:04:22.240 --> 00:04:27.840
the add method on the arraylist now let me

00:04:27.840 --> 00:04:29.969
show you what happens if I try to add

00:04:29.969 --> 00:04:46.229
when mockito.when my list.add or

00:04:46.229 --> 00:04:58.620
my list dot get 0 dot then return so I'm

00:04:58.620 --> 00:05:02.159
mocking out a method call of get when get

00:05:02.159 --> 00:05:06.029
0 is called I want to return a value of

00:05:06.029 --> 00:05:15.240
let's say rambo i just want to show you

00:05:15.240 --> 00:05:18.599
why we can't use the when syntax to start

00:05:18.599 --> 00:05:20.789
with then we are using a spy now if I

00:05:20.789 --> 00:05:24.810
take these two out from here and run

00:05:24.810 --> 00:05:32.219
this test case junit you will see a index

00:05:32.219 --> 00:05:35.339
out of bounds because my list dot get

00:05:35.339 --> 00:05:38.039
here is actually calling the real method

00:05:38.039 --> 00:05:40.589
so you can never use this syntax because

00:05:40.589 --> 00:05:43.080
spy by default it will be calling the

00:05:43.080 --> 00:05:44.940
real methods so you should always use

00:05:44.940 --> 00:05:47.430
this syntax wherein you first say do

00:05:47.430 --> 00:05:52.289
written and then the when class. In the next

00:05:52.289 --> 00:05:53.580
lecture i'll explain the difference

00:05:53.580 --> 00:05:56.099
between a mock and a spy in little more

00:05:56.099 --> 00:05:58.379
detail and how it works in mockito but

00:05:58.379 --> 00:06:00.479
always remember that if you want to do

00:06:00.479 --> 00:06:03.029
partial mocking you can use the spy

00:06:03.029 --> 00:06:06.120
mark a class with spy and the real

00:06:06.120 --> 00:06:08.159
methods will be called by default if you

00:06:08.159 --> 00:06:10.439
want to stub out you should use the do

00:06:10.439 --> 00:06:14.009
return syntax there is another way to do

00:06:14.009 --> 00:06:16.080
partial mocking which i will talk

00:06:16.080 --> 00:06:18.979
about in the next lecture.

