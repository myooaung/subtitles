WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.640
In this lecture, I will explain you the flow of exactly what happened

00:00:03.640 --> 00:00:05.640
when we ran our test

00:00:05.640 --> 00:00:10.960
maximize this, we are using spring junit for class runner here

00:00:12.440 --> 00:00:15.880
with against the run with annotation here so spring junit for runner

00:00:15.880 --> 00:00:19.760
will use this configuration file

00:00:19.920 --> 00:00:22.840
because we have used the @context configuration  we told the

00:00:22.840 --> 00:00:24.840
spring junit  class runner that we use the

00:00:24.840 --> 00:00:26.840
configuration file so it will go in here

00:00:26.840 --> 00:00:28.840
it knows which packages to scan

00:00:28.840 --> 00:00:30.840
it will scan through those packages

00:00:30.840 --> 00:00:33.740
and go through the DAO impl

00:00:33.740 --> 00:00:37.740
will create an instance of the DAO since we have marked it with @component

00:00:37.740 --> 00:00:39.740
then when it hits the service impl

00:00:39.740 --> 00:00:42.760
it will create an instance of this service impl as well and it will inject

00:00:42.760 --> 00:00:46.320
since we have marked the DAO

00:00:46.320 --> 00:00:50.640
the dependency with auto wide it will inject the dependency into the  service impl

00:00:50.640 --> 00:00:52.640
through the setter injection

00:00:55.440 --> 00:00:58.520
and it will also inject this service impl into our

00:00:58.640 --> 00:01:02.240
test itself because we have used the auto-wide annotation again

00:01:02.240 --> 00:01:05.480
so this service impl here wll be injected

00:01:07.600 --> 00:01:12.120
then it will call the setup method annotation because we have marked it with @before annotation

00:01:12.120 --> 00:01:14.120
the setup method will kickin all the

00:01:14.120 --> 00:01:17.520
mockito annotations it will tell mockito to initialize all the mocks

00:01:17.600 --> 00:01:21.160
and it will scan through, mockito will now scan through

00:01:22.320 --> 00:01:27.120
this instance since it sees the mockiot API here or the mock annotation here

00:01:27.120 --> 00:01:32.720
it will mock the DAO then it will see the inject mocks it will

00:01:32.720 --> 00:01:37.040
inject the stubbed out or mocked out DAO

00:01:37.040 --> 00:01:39.520
into the service that was injected by spring

00:01:39.520 --> 00:01:42.360
then you know the flow simply it calls the test

00:01:42.360 --> 00:01:46.280
wherein we are stubbing out the method on this mocked out object

00:01:46.280 --> 00:01:48.280
and we are verifying the results.

