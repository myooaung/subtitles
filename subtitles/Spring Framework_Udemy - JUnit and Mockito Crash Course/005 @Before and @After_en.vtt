WEBVTT
Kind: captions
Language: en

00:00:00.205 --> 00:00:03.245
In the Junit framework introduction lecture

00:00:03.245 --> 00:00:06.285
I have mentioned about the @Before and @After annotations

00:00:06.285 --> 00:00:08.985
that can be used to mark the

00:00:08.985 --> 00:00:12.105
setup and cleanup methods or teardown methods

00:00:12.105 --> 00:00:14.965
that will be executed before each test method

00:00:14.965 --> 00:00:18.255
and after each test method respectively

00:00:18.305 --> 00:00:20.845
so that we can setup all the objects or the data

00:00:20.845 --> 00:00:23.915
that we require for each test case in the setup method

00:00:23.915 --> 00:00:27.055
that is marked with @Before and we can

00:00:27.055 --> 00:00:29.635
clean up those objects and data in the method

00:00:29.635 --> 00:00:32.725
that is marked with a @After annotation.

00:00:32.775 --> 00:00:36.005
In this lecture, we will see those two in action

00:00:36.005 --> 00:00:39.265
will be refactoring our test class in here so maximize it go in here

00:00:39.275 --> 00:00:42.205
lets start with @Before annotation

00:00:43.495 --> 00:00:46.425
from the org.junit package

00:00:47.435 --> 00:00:50.455
type in a method public void setup

00:00:50.455 --> 00:00:53.055
we can call it what ever you want it doesn't matter

00:00:53.055 --> 00:00:54.935
but from the earlier versions of junit

00:00:54.935 --> 00:00:57.845
we had a naming convension where we had to call it setup

00:00:58.235 --> 00:01:01.245
in this method we will move this

00:01:01.245 --> 00:01:03.565
greeting creation to that method

00:01:03.935 --> 00:01:06.905
you can just point your mouse pointer onto this line

00:01:06.905 --> 00:01:09.125
hold the alt key and press the

00:01:09.835 --> 00:01:10.835
up arrow.

00:01:10.875 --> 00:01:14.185
Now we will split this and move this variable

00:01:14.185 --> 00:01:17.575
or will make this greeting object a field

00:01:18.145 --> 00:01:21.065
place the mouse curser on greeting

00:01:21.385 --> 00:01:24.665
hit ctrl1 convert local variable to fields select that

00:01:24.845 --> 00:01:26.525
and now greeting is

00:01:26.525 --> 00:01:29.835
field and we are creating instance inside the setup method

00:01:29.955 --> 00:01:31.995
we can remove

00:01:31.995 --> 00:01:35.055
it a creation of instance from the other

00:01:35.055 --> 00:01:37.425
two test methods place your mouse curser on the

00:01:38.095 --> 00:01:41.125
greeting implementation creation line hit ctrl D

00:01:41.125 --> 00:01:43.485
save for the other test method as well

00:01:43.485 --> 00:01:46.365
we are creating it in one single place in the setup method

00:01:46.365 --> 00:01:49.145
which will be executed

00:01:49.145 --> 00:01:52.455
before each of these test methods

00:01:52.455 --> 00:01:55.355
setup method will run 3 times because we have

00:01:55.355 --> 00:01:57.215
3 test methods in here.

00:01:58.295 --> 00:02:00.805
Now lets do the clean up portion

00:02:01.035 --> 00:02:02.235
will come up with the

00:02:03.055 --> 00:02:06.135
let me add some lines so that you can see it clearly

00:02:06.195 --> 00:02:07.485
 

00:02:07.795 --> 00:02:08.795
in here @After

00:02:09.275 --> 00:02:12.075
hit ctrl space

00:02:12.075 --> 00:02:14.775
again After annotation from the junit API

00:02:14.895 --> 00:02:18.035
public void you can call it whatever you want

00:02:18.035 --> 00:02:19.955
general practice teardown

00:02:19.955 --> 00:02:22.915
again from the earlier versions of junit

00:02:22.915 --> 00:02:25.655
we call it teardown you can call it cleanup or whatever you want.

00:02:26.045 --> 00:02:28.595
In here, in this scenario we don't have much to do

00:02:28.595 --> 00:02:31.075
simply trig the greeting class instance

00:02:31.075 --> 00:02:34.045
for global field and make it null which is very obvious

00:02:34.045 --> 00:02:36.415
you need not do this , I just wanted to demostrate

00:02:36.415 --> 00:02:39.775
how we should be using setup and teardown

00:02:39.775 --> 00:02:42.775
methods.As our test grow in size

00:02:42.775 --> 00:02:44.875
will be using setup and treadown ina better way.

00:02:45.445 --> 00:02:48.185
lets add some system.out.println statements here

00:02:48.185 --> 00:02:51.085
just to see the order

00:02:51.085 --> 00:02:53.415
in which these methods are executed.

00:02:54.275 --> 00:02:56.675
lets put setup here

00:02:56.675 --> 00:02:59.715
copy the system.out.println and paste it in one of our test

00:03:01.655 --> 00:03:04.635
and also paste it in teardown

00:03:04.635 --> 00:03:07.885
now take the method name

00:03:08.215 --> 00:03:10.715
replace the

00:03:10.715 --> 00:03:11.955
setup with that

00:03:12.375 --> 00:03:15.475
you can also add system.out.println

00:03:15.475 --> 00:03:16.475
to other methods

00:03:16.495 --> 00:03:18.945
copy it again

00:03:18.945 --> 00:03:20.465
go into the personal senario test

00:03:21.315 --> 00:03:22.745
hit the method name

00:03:23.205 --> 00:03:24.275
paste it

00:03:24.745 --> 00:03:26.165
lets also do it

00:03:26.935 --> 00:03:29.025
in the other test method

00:03:29.065 --> 00:03:30.675
I'll leave that alone

00:03:31.595 --> 00:03:33.825
paste it , hit the method name

00:03:34.295 --> 00:03:35.425
copy paste it

00:03:36.945 --> 00:03:38.765
now lets run this test

00:03:39.355 --> 00:03:42.225
run it you can simply go here run as

00:03:42.245 --> 00:03:43.475
junit test

00:03:44.055 --> 00:03:47.215
everything is green that is not what we are looking for

00:03:47.215 --> 00:03:50.545
we look at the console for our system.out.println

00:03:50.545 --> 00:03:53.105
you see that the system gets called first

00:03:53.105 --> 00:03:55.815
then one of the test we don't know

00:03:55.815 --> 00:03:58.855
in which order they get called but the important thing is setup

00:03:58.855 --> 00:04:01.225
then the test method teardown again the setup again a test method and teardown and so on.

00:04:01.225 --> 00:04:03.895
So thats the improtant thing.

00:04:03.895 --> 00:04:06.615
In this lecture, you have learnt

00:04:06.675 --> 00:04:07.915
how to use the

00:04:08.385 --> 00:04:11.365
@Before and @After annotations

00:04:11.365 --> 00:04:14.625
to initialize any data that is required for each test

00:04:14.625 --> 00:04:17.965
and to cleanup the data after execution of each test method.

