WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.310
In this lecture you will learn what

00:00:02.310 --> 00:00:03.240
mocking is?

00:00:03.240 --> 00:00:06.420
why we needed and how it works?

00:00:06.420 --> 00:00:09.840
To mock means to mimic or to imitate.

00:00:09.840 --> 00:00:13.799
In day-to-day life we do it to make fun

00:00:13.799 --> 00:00:15.660
of someone but in the world of

00:00:15.660 --> 00:00:18.990
programming we do it for very serious

00:00:18.990 --> 00:00:23.490
unit testing if class-A depends on users

00:00:23.490 --> 00:00:26.099
Class B and if we are unit testing Class-A

00:00:26.099 --> 00:00:27.869
then we will

00:00:27.869 --> 00:00:31.410
mockout class B and all the methods on

00:00:31.410 --> 00:00:36.180
class B that class A uses.The mark

00:00:36.180 --> 00:00:38.550
object will then take the place of the

00:00:38.550 --> 00:00:42.899
real object be the idea of unit testing

00:00:42.899 --> 00:00:46.680
is to test our cold with all testing its

00:00:46.680 --> 00:00:51.539
dependencies the pier is that each unit

00:00:51.539 --> 00:00:54.809
is tested on its own and when they all

00:00:54.809 --> 00:00:57.360
are integrated they will work great.

00:00:57.360 --> 00:01:01.890
Let's consider a java EE example wherein

00:01:01.890 --> 00:01:04.199
we have the reservation controller or

00:01:04.199 --> 00:01:07.979
UI component calling into the reservation BO

00:01:07.979 --> 00:01:09.600
so the reservation controller

00:01:09.600 --> 00:01:11.340
depends on the reservation BO which

00:01:11.340 --> 00:01:13.590
post the business logic in the BO

00:01:13.590 --> 00:01:15.540
calls into a DAO which does the

00:01:15.540 --> 00:01:18.750
database operations for us using DBC

00:01:18.750 --> 00:01:22.080
hibernate extra. Now if we are testing

00:01:22.080 --> 00:01:24.900
the reservation controller unit testing

00:01:24.900 --> 00:01:27.570
it with mock out the reservation BO

00:01:27.570 --> 00:01:30.659
and all the methods on that reservation BO

00:01:30.659 --> 00:01:33.810
which the reservation controllers method

00:01:33.810 --> 00:01:36.750
are using and test all the public

00:01:36.750 --> 00:01:38.640
methods on the reservation controller in

00:01:38.640 --> 00:01:39.930
isolation.

00:01:39.930 --> 00:01:42.299
similarly we are testing the reservation

00:01:42.299 --> 00:01:44.729
BO will mock out the reservation DAO

00:01:44.729 --> 00:01:47.430
and all the method calls that the

00:01:47.430 --> 00:01:49.590
reservation BOs method are making

00:01:49.590 --> 00:01:51.720
into the reservation DAOs method

00:01:51.720 --> 00:01:54.060
and test the public methods

00:01:54.060 --> 00:01:58.439
on reservation BO in isolation. Locking

00:01:58.439 --> 00:02:01.920
involves three important steps stubbing

00:02:01.920 --> 00:02:04.590
Setting the expectations and then

00:02:04.590 --> 00:02:07.560
Verifying.We first stubout the

00:02:07.560 --> 00:02:09.810
reservation BO class or mock the

00:02:09.810 --> 00:02:12.180
reservation BO class and set the

00:02:12.180 --> 00:02:13.530
expectations on

00:02:13.530 --> 00:02:17.280
what the methods of the reservation BO

00:02:17.280 --> 00:02:18.930
should do and the reservation

00:02:18.930 --> 00:02:21.569
controllers unit test are run and the

00:02:21.569 --> 00:02:23.550
restoration controller method calls into

00:02:23.550 --> 00:02:25.620
the reservation BOs method, we are

00:02:25.620 --> 00:02:27.870
going to tell what those methods or

00:02:27.870 --> 00:02:30.090
how those methods should behave using a

00:02:30.090 --> 00:02:33.090
mocking framework. Finally we will

00:02:33.090 --> 00:02:35.880
verify using the mocking frameworks API

00:02:35.880 --> 00:02:37.101
we will verify that the reservation

00:02:37.101 --> 00:02:38.670
controller is

00:02:38.670 --> 00:02:40.800
in fact calling into the

00:02:40.800 --> 00:02:43.770
methods of the reservation BO as we

00:02:43.770 --> 00:02:46.830
have expected. Those are the mockout methods.

00:02:46.830 --> 00:02:50.700
Mockito is one popular mocking framework

00:02:50.700 --> 00:02:53.130
that provides us all these three to stub

00:02:53.130 --> 00:02:55.440
and set expectations we can either use

00:02:55.440 --> 00:02:58.260
annotations are there are static methods

00:02:58.260 --> 00:03:00.269
which we can use like mock which will

00:03:00.269 --> 00:03:03.630
stub out the dependent objects for us.

00:03:03.630 --> 00:03:06.269
Then we can use the when methods the

00:03:06.269 --> 00:03:08.130
thenReturn the thenThrow and there are a  lot of

00:03:08.130 --> 00:03:11.010
other methods which we can use to set

00:03:11.010 --> 00:03:13.140
the expectations or to stubout all the

00:03:13.140 --> 00:03:16.560
methods on the dependant classes

00:03:16.560 --> 00:03:20.760
Finally, we can verify if the mockedout

00:03:20.760 --> 00:03:23.280
methods are being called by using

00:03:23.280 --> 00:03:26.040
verify , matchers and so on

00:03:26.040 --> 00:03:28.860
To summarize from this lecture you have

00:03:28.860 --> 00:03:31.799
learned that mocking is where we test

00:03:31.799 --> 00:03:34.350
a unit in isolation that is unit testing

00:03:34.350 --> 00:03:37.110
mocking enables it or mocking

00:03:37.110 --> 00:03:39.510
compliments unit testing by allowing us

00:03:39.510 --> 00:03:42.060
to mockout all the dependent classes

00:03:42.060 --> 00:03:46.560
and the methods that are used. We usually

00:03:46.560 --> 00:03:48.870
have three steps when we mock one is stubbing

00:03:48.870 --> 00:03:51.060
out then setting expectations and

00:03:51.060 --> 00:03:53.370
verifying it marketing is a very popular

00:03:53.370 --> 00:03:58.079
mocking framework that used as the API to

00:03:58.079 --> 00:04:00.480
do those three that is stubbing, setting

00:04:00.480 --> 00:04:04.250
expectations and verifying.

