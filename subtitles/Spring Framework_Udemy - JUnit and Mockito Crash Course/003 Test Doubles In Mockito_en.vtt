WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.520
In this lecture, I will explain for of

00:00:02.520 --> 00:00:05.910
the test doubles and how mockito API

00:00:05.910 --> 00:00:12.090
supports them starting with dummy before

00:00:12.090 --> 00:00:14.519
we do that launch the eclipse ID have the

00:00:14.519 --> 00:00:16.920
order processing service project ready

00:00:16.920 --> 00:00:19.439
and open up the orderBOimpl test

00:00:19.439 --> 00:00:23.100
double click on it to maximize it as we go

00:00:23.100 --> 00:00:24.869
through the test doubles i will explain

00:00:24.869 --> 00:00:27.990
how we have already used most of them in

00:00:27.990 --> 00:00:33.000
our orderBOimpl test the very first

00:00:33.000 --> 00:00:35.070
pattern in the test doubles is the dummy

00:00:35.070 --> 00:00:38.129
as the name itself says these are the

00:00:38.129 --> 00:00:41.790
objects that are passed as parameters but

00:00:41.790 --> 00:00:44.820
are not really required for testing a

00:00:44.820 --> 00:00:49.170
particular scenario we go to our order

00:00:49.170 --> 00:00:51.030
BO impl the very first test here

00:00:51.030 --> 00:00:54.480
place order should create an order when

00:00:54.480 --> 00:00:57.300
we are stubbing out the method called

00:00:57.300 --> 00:01:00.480
called create instead of creating an

00:01:00.480 --> 00:01:02.489
actual order filling it in with all the

00:01:02.489 --> 00:01:04.650
values and then passing it we are using

00:01:04.650 --> 00:01:08.820
mockito any to create a dummy order on

00:01:08.820 --> 00:01:10.470
the fly

00:01:10.470 --> 00:01:12.299
mockito allows us to create dummies

00:01:12.299 --> 00:01:18.330
using any etc so when we use a dummy

00:01:18.330 --> 00:01:21.240
object in this scenario we don't care

00:01:21.240 --> 00:01:22.920
about the exact object that is the

00:01:22.920 --> 00:01:24.840
reason we can use a dummy object but

00:01:24.840 --> 00:01:26.400
there could be scenarios where we need

00:01:26.400 --> 00:01:28.619
to create an order instance fillin with

00:01:28.619 --> 00:01:29.759
all the details.

00:01:29.759 --> 00:01:34.710
The second one is stub these provide

00:01:34.710 --> 00:01:38.189
fixed answers or return values and

00:01:38.189 --> 00:01:43.290
will do only what we asked them to do so

00:01:43.290 --> 00:01:45.479
we can create stubs using the when class

00:01:45.479 --> 00:01:47.909
and by using the then return method in

00:01:47.909 --> 00:01:55.950
mockito. mocks are little more than stubs

00:01:55.950 --> 00:01:59.399
they can throw exceptions as well as they

00:01:59.399 --> 00:02:02.340
allow us to verify if certain other methods

00:02:02.340 --> 00:02:04.140
were called when we are testing a

00:02:04.140 --> 00:02:08.280
method by now you would have guessed so

00:02:08.280 --> 00:02:11.020
we can throw exceptions

00:02:11.020 --> 00:02:15.940
mockito using then throw like we have

00:02:15.940 --> 00:02:22.390
done then throw that is the mockito

00:02:22.390 --> 00:02:24.940
API to throw exceptions and then we have

00:02:24.940 --> 00:02:27.160
used verify to verify if certain other

00:02:27.160 --> 00:02:31.660
methods where being called the next

00:02:31.660 --> 00:02:34.360
test double pattern is fake as the name

00:02:34.360 --> 00:02:36.880
itself says these are some shortcuts

00:02:36.880 --> 00:02:39.640
like in-memory databases that are rarely

00:02:39.640 --> 00:02:45.790
used in unit testing and spies again as

00:02:45.790 --> 00:02:47.560
the name itself says there are stubs

00:02:47.560 --> 00:02:51.430
that can spy or record any side effects

00:02:51.430 --> 00:02:53.410
when we are testing a particular method

00:02:53.410 --> 00:02:56.050
i'll explain more on spies will write a

00:02:56.050 --> 00:02:59.470
small hands test in the next lectures

00:02:59.470 --> 00:03:01.750
and we'll explore how we can use spies

00:03:01.750 --> 00:03:05.940
by using the mockito API.

