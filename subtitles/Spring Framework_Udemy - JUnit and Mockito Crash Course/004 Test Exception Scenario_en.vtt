WEBVTT

0
00:00.150 --> 00:06.060
In this lecture will add validation logic to the create method wherein if the coupon is null, we'll

1
00:06.060 --> 00:11.000
throw out a legal argument exception and will test that functionality as well.

2
00:11.520 --> 00:24.690
Go to the create method if coupon double equals null and through  new  illegal argument exception.

3
00:24.930 --> 00:32.070
Optionally we can pass in a string coupon is required or coupon cannot be null, whatever message you

4
00:32.070 --> 00:33.560
want to pass in that exception.

5
00:33.790 --> 00:35.090
Now go back to the test.

6
00:35.910 --> 00:42.660
Create a new test method public void test create give it a meaningful name.

7
00:42.660 --> 00:54.180
Underscore null coupon or when null coupon underscore throws exception.

8
00:58.070 --> 01:06.290
So when coupon is null would be much more readable when coupon is underscore null

9
01:06.650 --> 01:12.050
So you can give as meaningful names, as you can to your tests so that when another developer looks

10
01:12.050 --> 01:17.660
at the test method name, he knows what exactly is going on on your test code should also be readable.

11
01:18.620 --> 01:24.110
Oh, here we don't have to mock any calls or stub any calls because we can invoke this method right

12
01:24.110 --> 01:24.380
away.

13
01:24.620 --> 01:27.980
Pass in a null coupon and it will throw this exception.

14
01:27.980 --> 01:33.650
If this exception was being throwed in another layer class, like a services layer class or dao layer class 

15
01:33.650 --> 01:36.530
then we would mocked that layer's call. 

16
01:36.720 --> 01:38.420
But here we don't have to do that.

17
01:38.600 --> 01:42.260
Simply invoke controller dot.

18
01:43.370 --> 01:55.490
Create pass a null this entire logic will go into the assert, throws assert throws, takes expected

19
01:55.490 --> 02:02.360
exception type which is illegal argument, exception dot class and its executable is where you can use a

20
02:02.360 --> 02:06.080
lambda syntax arrow within brackets.

21
02:06.860 --> 02:13.130
We can cut this code and put it inside these brackets and a semicolon at the end, control shift f to

22
02:13.130 --> 02:14.630
format so assert throws.

23
02:14.660 --> 02:22.310
I'm expecting a illegal argument exception when this code is invoked with null argument.

24
02:22.700 --> 02:27.110
Right click run as Junit tests run.

25
02:28.070 --> 02:32.490
Let's see if all the tests, three tests turn green on the left side.

26
02:32.510 --> 02:33.170
There we go.

27
02:33.180 --> 02:34.870
All the tests pass.

28
02:34.900 --> 02:38.610
So that is how you can test exceptions scenarios or negative scenarios.

29
02:38.630 --> 02:43.130
Go ahead and do the same validation logic inside the get coupon method.

30
02:43.130 --> 02:48.500
If the code is null, you should throw a illegal argument exception with the appropriate message and write

31
02:48.500 --> 02:49.820
a test for that.