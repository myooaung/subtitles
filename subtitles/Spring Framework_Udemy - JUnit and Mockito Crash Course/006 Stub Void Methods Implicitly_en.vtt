WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.800
In this lecture

00:00:01.800 --> 00:00:05.759
the test method in a test test that uses

00:00:05.759 --> 00:00:09.660
void method in class A this method uses

00:00:09.660 --> 00:00:11.610
the void method on B which will be

00:00:11.610 --> 00:00:15.330
stubbing out before we do that let's

00:00:15.330 --> 00:00:17.939
change this return value from 0 to 1 as it

00:00:17.939 --> 00:00:20.519
makes more sense to return a positive value instead

00:00:20.519 --> 00:00:22.650
of 0 when everything goes through as

00:00:22.650 --> 00:00:26.009
expected go back to the test rename

00:00:26.009 --> 00:00:33.720
this test method from test to users void

00:00:33.720 --> 00:00:39.120
method should call the void method, will  verify the

00:00:39.120 --> 00:00:43.260
results as will see if the void method

00:00:43.260 --> 00:00:48.120
gets called.Hit ctrlD to delete this

00:00:48.120 --> 00:00:52.410
line from here let's create a new

00:00:52.410 --> 00:00:57.089
instance of A new A we know that this

00:00:57.089 --> 00:00:59.760
constructor expects to hit ctrl one here

00:00:59.760 --> 00:01:02.100
or if you just point your curser it tells you that the

00:01:02.100 --> 00:01:05.520
construction needs an instance of class B

00:01:05.520 --> 00:01:08.580
so let's create an instance of class B

00:01:08.580 --> 00:01:13.770
globally b b will not be creating any

00:01:13.770 --> 00:01:15.660
instance but we know that we should mock

00:01:15.660 --> 00:01:18.420
it out using this mockitos mock API

00:01:18.420 --> 00:01:22.440
mock annotation we have B we can simply

00:01:22.440 --> 00:01:24.168
pass that B here

00:01:24.168 --> 00:01:26.760
assign this variable to a local

00:01:26.760 --> 00:01:31.380
variable control 1 can even make this

00:01:31.380 --> 00:01:33.300
a global by hitting control 1 here

00:01:33.300 --> 00:01:38.580
convert local variable to field let's

00:01:38.580 --> 00:01:41.760
create the before method now @before

00:01:41.760 --> 00:01:46.290
public void setup is there will be

00:01:46.290 --> 00:01:48.420
calling the init mocks initialize our

00:01:48.420 --> 00:01:51.870
mocks you know how to do that

00:01:51.870 --> 00:01:56.700
mockito annotations dot in it mocks

00:01:56.700 --> 00:01:59.220
this will be passing the instance of

00:01:59.220 --> 00:02:01.620
this test class so that at runtime all

00:02:01.620 --> 00:02:03.240
our mocks are scanned and

00:02:03.240 --> 00:02:06.600
initialized let's move this line A

00:02:06.600 --> 00:02:11.640
equal to newA by holding alt and up arrow

00:02:11.640 --> 00:02:14.910
into the setup method so that our test

00:02:14.910 --> 00:02:18.870
methods are clean, let's start stubbing

00:02:18.870 --> 00:02:21.900
there is not much to stub when it comes

00:02:21.900 --> 00:02:24.870
to void methods when you throw exceptions or

00:02:24.870 --> 00:02:27.120
when you test exceptions there is something we need to

00:02:27.120 --> 00:02:30.540
do but by default all the methods on a

00:02:30.540 --> 00:02:34.170
mockedout objects or stubbed out

00:02:34.170 --> 00:02:39.900
objects do nothing so we

00:02:39.900 --> 00:02:42.420
need not really have a when class and mock it

00:02:42.420 --> 00:02:44.910
out by defaultt if we mockout a

00:02:44.910 --> 00:02:46.080
object like this

00:02:46.080 --> 00:02:48.810
the void methods on it will not return

00:02:48.810 --> 00:02:51.420
anything or do anything so we are fine

00:02:51.420 --> 00:02:57.299
we can simply call A dot use void

00:02:57.299 --> 00:03:00.330
method and we can start verifying verify

00:03:00.330 --> 00:03:10.410
B dot lets import this verify here

00:03:10.410 --> 00:03:12.810
let's add the static static imports

00:03:12.810 --> 00:03:20.340
import static org dot mockito dot  mockito class.star

00:03:20.340 --> 00:03:32.040
verify B dot void

00:03:32.040 --> 00:03:36.720
method hit control one there is an

00:03:36.720 --> 00:03:38.489
exception that B is throwing so let's

00:03:38.489 --> 00:03:42.690
add a throws declaration and that's it to

00:03:42.690 --> 00:03:44.459
test void methods it's that simple

00:03:44.459 --> 00:03:47.100
simply create a stub of that

00:03:47.100 --> 00:03:50.140
class pr mockout that class we need not add a when class

00:03:50.140 --> 00:03:53.910
explicitly there are uses of when class i

00:03:53.910 --> 00:03:56.220
will show you later on to run this test

00:03:56.220 --> 00:04:02.810
go to run as junit test and our test

00:04:02.810 --> 00:04:06.080
passes as expected you can also assert

00:04:06.080 --> 00:04:14.510
equals take this call from here move it to

00:04:14.510 --> 00:04:19.700
actual place and then expected is one

00:04:19.700 --> 00:04:25.639
and delete this line from here we can

00:04:25.639 --> 00:04:36.740
also do assert same let's run the test again

00:04:36.740 --> 00:04:41.540
so we do get a value called one back in

00:04:41.540 --> 00:04:42.830
the next lecture I will show you how to

00:04:42.830 --> 00:04:45.350
explicitly stubout a void method although

00:04:45.350 --> 00:04:46.400
it is not required

00:04:46.400 --> 00:04:48.650
there are usecases where we can use the

00:04:48.650 --> 00:04:51.139
do-nothing method that is available in

00:04:51.139 --> 00:04:54.130
mockito API

