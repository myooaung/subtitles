WEBVTT

0
00:00.180 --> 00:05.380
In this lecture, we will run and test the product service before we do that, go to the application

1
00:05.380 --> 00:09.480
dot properties and add a server port property server

2
00:09.870 --> 00:16.650
dot port is equal to 1990 because by default it will start on 8080.

3
00:16.650 --> 00:20.790
We already have the coupon service running on 8080, so we don't want any conflicts.

4
00:21.030 --> 00:23.580
So we are going to run this on 9090.

5
00:24.270 --> 00:27.740
Right click run as Springboot app.

6
00:30.360 --> 00:36.990
That will start the server in the meantime, you can go to Posman, open up a new tab, and the end

7
00:36.990 --> 00:43.680
point we want to test in the product rest controller is create the url is product API slash product so

8
00:43.680 --> 00:49.800
you can grab the previously urls from the coupon service, come back paste it, change the method from

9
00:49.800 --> 00:52.350
get to post the url instead of coupon API.

10
00:52.680 --> 00:57.090
It is a product API slash products.

11
00:57.660 --> 00:58.460
That's the url.

12
00:58.470 --> 01:00.840
We are adding a new product to the collection of products.

13
01:01.080 --> 01:05.340
Click on Body click on raw change this from text to Jason.

14
01:05.700 --> 01:08.070
Open up the flower bracket within that.

15
01:09.060 --> 01:14.040
If you go to the product model we need to pass a name, description and price.

16
01:14.850 --> 01:20.190
So name within double quotes name of the product Colon within double quotes iPhone ,

17
01:23.550 --> 01:27.210
Next we have a description and then the price description.

18
01:30.250 --> 01:38.500
Is awesome, at least for a few people, but a lot of people description then the price of iPhone,

19
01:38.500 --> 01:45.550
which is very expensive in some cases, price Colen say thousand bucks.

20
01:46.550 --> 01:53.780
We take this to the end, there we go, so we have given the name description and the price hit send.

21
01:55.730 --> 02:01.910
The port number should be changed, so 8080 is not the correct port number for product service, it

22
02:01.910 --> 02:03.590
should be 1990.

23
02:03.860 --> 02:07.220
So do change that hit send, there we go, 200.

24
02:07.220 --> 02:08.480
OK, is the response.

25
02:08.480 --> 02:15.300
And you see Id name, description and price so a new record should have been created in the product

26
02:15.300 --> 02:16.310
table as well

27
02:16.310 --> 02:25.790
If we execute select on the product table, that's to select right there select start from product.

28
02:28.400 --> 02:30.020
Execute that guy.

29
02:30.080 --> 02:30.650
There we go.

30
02:30.890 --> 02:36.200
So we have a database record, so the only API here is creation of product and it works successfully.