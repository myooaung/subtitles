WEBVTT

0
00:00.290 --> 00:06.470
In this lecture I will show you how to migrate to J-Unit five or how to use the annotations in Junit

1
00:06.600 --> 00:07.950
5 to do that.

2
00:08.100 --> 00:10.820
Let's get rid of all these imports from here.

3
00:10.920 --> 00:12.480
Delete all of them.

4
00:13.260 --> 00:14.760
Go to the first error.

5
00:14.820 --> 00:21.690
where it says before cannot be resolved in Junit four if you want a particular method to run before every

6
00:21.690 --> 00:26.430
test used at before but now in junit 5 its called

7
00:26.460 --> 00:35.280
If you hit control one on this it says change to before all if you do that it will run before all the

8
00:35.340 --> 00:36.050
tests.

9
00:36.060 --> 00:42.320
Only once that is one's for the entire junit test should use before each.

10
00:42.360 --> 00:50.620
If you use that annotation from org dot junit dot jupiter  dot API then this set up method will be executed

11
00:50.620 --> 00:56.410
before each and every test we have and the test annotation itself is from a different package we

12
00:56.410 --> 00:59.030
can still continue using the test annotation.

13
00:59.160 --> 01:08.020
But if we hit Control 1 you should imported from org dot j-Unit dot Jupiter dot API instead of directly importing

14
01:08.020 --> 01:09.850
it from org dot J-Unit.

15
01:10.030 --> 01:12.000
So that error is gone as well.

16
01:12.010 --> 01:22.520
Now the assert not null these should come from assertions which is the class from Jupiter API again  import assertions

17
01:22.540 --> 01:25.450
from org dot J-Unit dot Jupiter dot API.

18
01:25.460 --> 01:33.260
So everything still remains the same it's just a matter of changing the imports and their names.

19
01:33.400 --> 01:37.340
So we have changed it to assertions now from Jupiter API.

20
01:37.430 --> 01:42.530
You can copy this and paste it on the next assert as well.

21
01:42.530 --> 01:49.900
That will resolve resolve most of the errors and the after We'll come back to expected in the next lecture

22
01:49.920 --> 01:56.890
But the after annotations which marks a method to be executed after each and every test method in the

23
01:56.890 --> 02:03.190
Junit API has been changed to if we hit control one after each use.

24
02:03.220 --> 02:08.390
After all that means after all the tests are executed that the tear down will be invoked.

25
02:08.400 --> 02:12.580
But we want this method to be invoked after each and every test.

26
02:12.580 --> 02:17.700
The cleanup should happen so use after each instead of after.

27
02:17.710 --> 02:24.770
So in this lecture we have used 3 new annotations or at least two new annotations and old annotation.

28
02:25.000 --> 02:27.430
One old annotation from a new package.

29
02:27.640 --> 02:33.340
Before each annotation when you mark  a method with that that method will be used as a set up and

30
02:33.340 --> 02:41.190
it will be executed before each and every test method and the method that is marked with after each will

31
02:41.190 --> 02:47.540
be executed after each test method is run so we can do any clean up in their.

32
02:47.780 --> 02:52.370
And also the test annotation itself is from a org dot junit dot

33
02:52.490 --> 02:59.510
Jupiter package in the next Lecture will fix how we handle exceptions or how we test for exceptions.