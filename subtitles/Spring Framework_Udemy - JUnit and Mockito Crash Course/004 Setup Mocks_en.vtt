WEBVTT

0
00:00.150 --> 00:06.690
In this lecture will start updating our test class so that it will use Mockito to do that, go to the test class,

1
00:06.690 --> 00:13.650
get rid of these unused imports or un compiled  imports, get rid of this run with annotation.

2
00:13.860 --> 00:23.940
Mark your  class with @ Extend with annotation provide the  Mockito extension class Mockito  extension dot

3
00:23.940 --> 00:28.290
class that will take care of mocking and running our test.

4
00:29.380 --> 00:35.130
The first step once you add this annotation is to add the mock object.

5
00:35.140 --> 00:41.310
So this greeting class under test now requires the service.

6
00:41.460 --> 00:46.620
So if you go to the greeting implementation, it requires  this service class inside this method the  service.greet 

7
00:46.980 --> 00:47.790
is invoked.

8
00:47.820 --> 00:53.250
We need to mock out this guy and this invocation should be stubbed out to do that.

9
00:53.250 --> 01:00.880
Go back to the test, define a field at a global level, private greeting service service.

10
01:00.890 --> 01:02.870
This is the interface that you  want to mock.

11
01:02.880 --> 01:06.750
So mark this with @ mock annotation from Mockito.

12
01:07.200 --> 01:15.720
Then we need to inject this into this greeting implementation so we need not do it manually, thanks

13
01:15.720 --> 01:16.380
to Mockito.

14
01:16.620 --> 01:18.840
Go back, get rid of this before each.

15
01:18.840 --> 01:22.620
We are not going to create the instance of greeting implementation like this.

16
01:22.950 --> 01:23.940
You can remove that.

17
01:24.750 --> 01:28.950
You will directly use the implementation class here instead of the interface.

18
01:29.190 --> 01:32.870
Mark this  with @ inject Mocks

19
01:32.880 --> 01:34.140
That's all that is required.

20
01:34.470 --> 01:36.900
Mockito when  this runner  runs our test.

21
01:37.290 --> 01:41.340
It will look at this marked  with at inject Mock's.

22
01:41.520 --> 01:45.680
It will immediately create an object or an instance of this greeting impl.

23
01:45.900 --> 01:51.990
When it does that it will look at that implementation and it knows that it has this dependency.

24
01:52.260 --> 01:54.200
So it will inject the mock.

25
01:54.270 --> 01:56.130
That is what this annotation is saying.

26
01:56.130 --> 01:57.360
Inject the mock's.

27
01:57.360 --> 02:00.770
So whatever are already mocked out, Mockito is aware of them.

28
02:01.170 --> 02:03.900
So inject them into this guy.

29
02:03.900 --> 02:11.280
So at runtime and we run this test, this reading impl will get a mocked implementation into this service

30
02:11.280 --> 02:15.510
just with two annotations or three annotation extends with 

31
02:15.960 --> 02:22.320
Then at Mock you can use this on any number of services or other classes we want to mock and then inject.

32
02:22.320 --> 02:28.350
Mock should be used on the class under test into which the Mock  should be injected.

33
02:28.930 --> 02:32.460
So you have successfully injected everything that is required for the test.

34
02:32.470 --> 02:37.980
In the next lecture you  will test the positive  scenario and following that will test the negative scenarios.

35
02:37.980 --> 02:44.670
You can get it off any unused annotations before each and also you can remove  after each at the end,

36
02:44.670 --> 02:47.190
which were added earlier for demonstration reasons.

37
02:48.360 --> 02:52.710
Scroll up, get rid  of after each hit control D and that is gone.