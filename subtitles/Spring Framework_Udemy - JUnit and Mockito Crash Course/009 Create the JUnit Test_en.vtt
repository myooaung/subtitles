WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.570
Now we have the thing service project we

00:00:03.570 --> 00:00:05.250
have created the DAO layer we have

00:00:05.250 --> 00:00:07.259
created the services layer and then we

00:00:07.259 --> 00:00:10.110
have wired the DAO under services layer

00:00:10.110 --> 00:00:13.740
using spring annotations it's time to

00:00:13.740 --> 00:00:15.809
write a unit test for our ticket service

00:00:15.809 --> 00:00:18.060
impl before we do that let's delete

00:00:18.060 --> 00:00:21.119
this package and the test that got

00:00:21.119 --> 00:00:24.180
generated by maven plugin because maven

00:00:24.180 --> 00:00:26.609
plugin in Eclipse by default is using a

00:00:26.609 --> 00:00:29.580
unit 3 which is useless as of now so

00:00:29.580 --> 00:00:32.099
right-click on the package delete it

00:00:32.099 --> 00:00:35.790
okay to create a new test right click on

00:00:35.790 --> 00:00:39.960
the ticket service impl say new Junit

00:00:39.960 --> 00:00:44.190
test case change this SRC main Java

00:00:44.190 --> 00:00:46.440
for the source folder to SRC test

00:00:46.440 --> 00:00:50.820
java click finish so we have our test

00:00:50.820 --> 00:00:53.250
delete this fail line by hitting control

00:00:53.250 --> 00:00:57.239
D let's create an instance of the class

00:00:57.239 --> 00:00:59.579
under test which is new test service

00:00:59.579 --> 00:01:04.170
ticket service new ticket service impl

00:01:04.170 --> 00:01:07.200
hit control one on that line to assign

00:01:07.200 --> 00:01:10.290
this to a new local variable let's call

00:01:10.290 --> 00:01:15.030
this service service dot by tickets is

00:01:15.030 --> 00:01:17.939
the method under test lets pass it a

00:01:17.939 --> 00:01:21.930
passenger name which is bharath and the

00:01:21.930 --> 00:01:24.810
phone number one two three four five six

00:01:24.810 --> 00:01:27.900
seven eight nine zero yep you can try

00:01:27.900 --> 00:01:31.350
calling me on that can assign this to a

00:01:31.350 --> 00:01:36.869
local variable call it the result and

00:01:36.869 --> 00:01:43.470
then we can assert assert equals result

00:01:43.470 --> 00:01:50.700
is one so let's remove these magic

00:01:50.700 --> 00:01:52.740
strings and numbers from here

00:01:52.740 --> 00:01:57.570
right-click refractor extract

00:01:57.570 --> 00:02:04.360
constant passenger capitals

00:02:04.360 --> 00:02:09.580
underscore name finish same for the

00:02:09.580 --> 00:02:15.220
phone number right click refactor extract

00:02:15.220 --> 00:02:21.280
constant phone all capitals and also

00:02:21.280 --> 00:02:27.820
this result here can also hit command

00:02:27.820 --> 00:02:30.910
one extract to constant control one

00:02:30.910 --> 00:02:37.720
instead of one here this is the result

00:02:37.720 --> 00:02:40.240
so we are going to test only one

00:02:40.240 --> 00:02:42.130
scenario the purpose is here is not to

00:02:42.130 --> 00:02:44.560
show you how to write test the purpose

00:02:44.560 --> 00:02:47.650
is to use spring j unit and mockito

00:02:47.650 --> 00:02:52.330
together so we have our test ready let's

00:02:52.330 --> 00:02:54.880
declare that dependency which is the DAO

00:02:54.880 --> 00:03:02.320
the ticket now impl is the dependency

00:03:02.320 --> 00:03:04.540
that we have testing it against the

00:03:04.540 --> 00:03:06.340
interface is a good idea we are going to

00:03:06.340 --> 00:03:10.090
mock this using the at mock annotation

00:03:10.090 --> 00:03:17.290
from mockito and we will create the

00:03:17.290 --> 00:03:21.519
before method at before method for the

00:03:21.519 --> 00:03:23.170
setup method which will be marked with

00:03:23.170 --> 00:03:25.989
the at before annotation so that we can

00:03:25.989 --> 00:03:28.630
initialize our mocks all we will do in

00:03:28.630 --> 00:03:30.280
this method by now you know mockito

00:03:30.280 --> 00:03:36.160
annotations dot in it mocks this so

00:03:36.160 --> 00:03:37.450
we are passing the instance of this

00:03:37.450 --> 00:03:40.000
objects so that mockito knows that it

00:03:40.000 --> 00:03:41.560
should initialize all the mocks which

00:03:41.560 --> 00:03:44.890
are mocked with at mock annotation in

00:03:44.890 --> 00:03:48.489
the next lecture we will inject this dao

00:03:48.489 --> 00:03:51.190
into the service and we will also use

00:03:51.190 --> 00:03:54.700
the few spring test related annotations

00:03:54.700 --> 00:03:57.670
to inject this dependency the dao

00:03:57.670 --> 00:04:01.860
dependency into our service impl.

