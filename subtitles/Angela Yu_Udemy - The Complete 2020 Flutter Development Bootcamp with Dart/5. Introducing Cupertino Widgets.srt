0
1
00:00:00,420 --> 00:00:08,310
Now if you're somebody who's quite sensitive to design and user interface styles, then you would have
1

2
00:00:08,310 --> 00:00:12,570
noticed that there are no such things as dropdown lists on
2

3
00:00:12,590 --> 00:00:17,860
iOS. You almost never see this unless the designers really screwed up.
3

4
00:00:17,940 --> 00:00:26,610
So this is very much a Android style user interface element. On iOS the way that we would select from
4

5
00:00:26,640 --> 00:00:32,170
different options is not a dropdown list but instead it's a picker view.
5

6
00:00:32,220 --> 00:00:38,250
So it's something that scrolls and we can use the scroll behavior to choose a new selection.
6

7
00:00:38,790 --> 00:00:45,090
So how can we implement this in our app? When we're using the widgets from Flutter,
7

8
00:00:45,390 --> 00:00:52,950
so far we've limited ourselves to material components things such as the sliders and buttons and the
8

9
00:00:52,950 --> 00:00:59,010
things that we've use so far exists both on iOS  and Android. And they'll look good on apps which are
9

10
00:00:59,010 --> 00:01:00,840
run on both platforms.
10

11
00:01:01,140 --> 00:01:08,700
But for some things such as the picker view, it's a very iOS  specific user interface element.
11

12
00:01:08,700 --> 00:01:15,420
So if we take a look at inside this set of Cupertino or iOS style widgets, then the Flutter team
12

13
00:01:15,420 --> 00:01:18,430
has already thought about this for you.
13

14
00:01:18,870 --> 00:01:27,150
If you wanted certain things to display in your iOS app which are iOS specific for example the Cupertino
14

15
00:01:27,150 --> 00:01:36,000
picker or the Cupertino switch or things such as the Cupertino style navigation bar, then we can use
15

16
00:01:36,090 --> 00:01:39,120
this particular library of widgets,
16

17
00:01:39,260 --> 00:01:40,820
the Cupertino widgets.
17

18
00:01:41,040 --> 00:01:49,500
So let's go ahead and change out our code to instead of using the dropdown button, to use a Cupertino
18

19
00:01:49,500 --> 00:01:51,070
style picker.
19

20
00:01:51,150 --> 00:01:55,650
So I'm going to select everything that contains my dropdown button,
20

21
00:01:55,830 --> 00:01:59,720
I'm going to cut it out and I'm going to put it aside for later.
21

22
00:01:59,820 --> 00:02:03,300
So I'm gonna comment it out of the code as well.
22

23
00:02:03,300 --> 00:02:11,010
And now I want to provide a child to my container which is a picker. So to be able to use the widgets
23

24
00:02:11,130 --> 00:02:12,990
from the Cupertino catalogue
24

25
00:02:13,170 --> 00:02:15,710
we have to import the Cupertino package.
25

26
00:02:15,780 --> 00:02:21,540
So if you search for Cupertino, you'll find packages:flutter/cupertino.dart
26

27
00:02:21,720 --> 00:02:27,470
And now we can use that widget we saw here which is the Cupertino picker.
27

28
00:02:27,480 --> 00:02:34,290
And in order to create it, we simply create a new Cupertino picker widget just like every other widget
28

29
00:02:34,320 --> 00:02:35,230
we've used.
29

30
00:02:35,460 --> 00:02:37,100
So let's put that in here.
30

31
00:02:37,530 --> 00:02:40,990
So Cupertino picker requires three properties to be filled.
31

32
00:02:41,070 --> 00:02:49,560
The item extent which is the height of each of the items inside the picker, the on selected item changed,
32

33
00:02:49,770 --> 00:02:56,920
so this is what should happened when the user scrolls through that wheel and changes the selection,
33

34
00:02:57,000 --> 00:03:01,200
and finally the children what's going to be displayed inside the picker.
34

35
00:03:01,290 --> 00:03:04,810
So let's go ahead and fill these things out now.
35

36
00:03:04,830 --> 00:03:11,590
The item extent I'm going to set to 32 pixels because I think to my eye it looks quite natural.
36

37
00:03:11,610 --> 00:03:13,460
Feel free to make it taller or shorter
37

38
00:03:13,560 --> 00:03:22,710
if you want to. Now the on selected item changed is going to take a callback similar to our dropdown
38

39
00:03:22,770 --> 00:03:29,710
button. And when the user changes the picker, then it's going to scroll through the wheel
39

40
00:03:29,880 --> 00:03:35,710
and once they've settled on one of those items, then it's going to trigger this callback.
40

41
00:03:35,760 --> 00:03:40,610
So it will give you the selected index in the picker.
41

42
00:03:40,650 --> 00:03:44,670
So if it fell on the first line of the picker, that will be zero.
42

43
00:03:44,670 --> 00:03:51,780
If it fell on the on the third line of the picker, it will be two etc. And then we'll be able to use
43

44
00:03:51,810 --> 00:03:55,420
this callback to access what the user selected.
44

45
00:03:55,470 --> 00:04:00,420
So let's print it out for now, selected index into the console.
45

46
00:04:00,420 --> 00:04:08,680
And finally for the children property, we have to specify what we want to display in that picker. If
46

47
00:04:08,680 --> 00:04:09,740
we take a look at this
47

48
00:04:09,760 --> 00:04:15,010
children property, you can see that it's actually got a very simple type that it wants.
48

49
00:04:15,010 --> 00:04:18,400
It's just a list of plain widgets.
49

50
00:04:18,400 --> 00:04:22,420
It's not like picker widgets or the drop down menu item widgets.
50

51
00:04:22,420 --> 00:04:29,970
It just wants a simple list of widgets. So we can very simply just add a list of text widgets into here.
51

52
00:04:30,430 --> 00:04:37,360
So let's use a text widget and let's call this one USD and then I'm going to copy it a few times just
52

53
00:04:37,360 --> 00:04:41,700
as when we started out for the material dropdown button.
53

54
00:04:41,740 --> 00:04:50,410
So I'm going to add euros and also pounds. And now I've provided all three required properties.
54

55
00:04:50,410 --> 00:04:58,480
So let's hit save and if we take a look inside our app, you can see we now have a picker. We can scroll
55

56
00:04:58,480 --> 00:05:01,410
through and pick the item that we want.
56

57
00:05:01,570 --> 00:05:07,820
And once we've settled on an item, you can see we get the index of the item being shown.
57

58
00:05:08,170 --> 00:05:15,010
So if I scroll up a bit, you can see we get the first item and then if I scroll even further we get the
58

59
00:05:15,010 --> 00:05:23,590
zeroth item. That is all because our on selected item changed is getting triggered and the picker is passing over
59

60
00:05:23,650 --> 00:05:31,400
the value that the user selected into our callback where we are printing it into the console.
60

61
00:05:31,490 --> 00:05:37,850
So in terms of the color scheme, I think it will look nice if it matches that blue background color which
61

62
00:05:37,850 --> 00:05:44,840
is a light blue color. So I can change the Cupertino picker's background color property to that same
62

63
00:05:44,840 --> 00:05:50,110
color which is colors.lightBlue, let's hit save.
63

64
00:05:50,180 --> 00:05:56,060
So now it matches with everything else and it blends into one piece.
64

65
00:05:56,060 --> 00:06:01,760
Now it's time to populate the picker with all the currencies from a list of currencies with a FOR loop.
65

66
00:06:01,760 --> 00:06:10,010
And I'd like you to complete this as a challenge. Similar to what we did for the dropdown items instead
66

67
00:06:10,010 --> 00:06:12,660
of creating this list manually,
67

68
00:06:12,710 --> 00:06:15,970
I want you to create a new method up here.
68

69
00:06:16,190 --> 00:06:26,180
So it's going to be called getPickerItems and it's going to return a list of widgets which we are
69

70
00:06:26,180 --> 00:06:30,920
going to put into our picker as it's children
70

71
00:06:30,920 --> 00:06:37,220
right here. So we're going to replace this hard coded list and of course we're going to be using the currencies
71

72
00:06:37,220 --> 00:06:40,100
from our currencies list just as we did before.
72

73
00:06:40,310 --> 00:06:46,340
And if successful, you should have a picker that should be able to scroll through all of those currencies
73

74
00:06:46,370 --> 00:06:46,970
in the list.
74

75
00:06:47,330 --> 00:06:50,150
So pause the video and try to complete this challenge.
75

76
00:06:53,770 --> 00:06:54,040
All right.
76

77
00:06:54,070 --> 00:07:01,880
So as we did before we had to use a FOR loop to loop through our currency's list for simplicity's sake.
77

78
00:07:01,900 --> 00:07:07,900
And again I'm going to use a for in loop and I'm going to create a string that's going to be called currency
78

79
00:07:08,410 --> 00:07:16,420
and it's going to loop through each currency in our currencies list. And inside the loop, I'm going to
79

80
00:07:16,420 --> 00:07:23,780
create a new text widget which is going to have the currency in the text widget.
80

81
00:07:23,840 --> 00:07:31,440
Now I can create a new list of text widgets if you really want to be specific, and we could call this
81

82
00:07:31,500 --> 00:07:37,790
pickerItems and we can set it to equal a empty list.
82

83
00:07:37,800 --> 00:07:42,320
Now it's really important that you don't just initialize it as null.
83

84
00:07:42,330 --> 00:07:50,070
Because if we have a null list and we tried to add to it, say pickerItems.add this isn't going to
84

85
00:07:50,070 --> 00:07:50,700
work.
85

86
00:07:50,730 --> 00:07:55,690
And it's actually going to crash because we can't add to a null list.
86

87
00:07:55,710 --> 00:08:02,810
We can however add to an empty list which is just a new list constructed with nothing in sight.
87

88
00:08:02,820 --> 00:08:07,160
So this is a really important point to note for both lists and maps.
88

89
00:08:07,200 --> 00:08:08,520
This can cause some bugs
89

90
00:08:08,580 --> 00:08:15,930
if you're not careful. Now that we have a empty picker items which is a list of text widgets, we can now
90

91
00:08:16,050 --> 00:08:24,150
add to it and we're going to add that text widget with the currency inside. Our loop is going to go through
91

92
00:08:24,240 --> 00:08:30,390
every currency in our currencies list, insert it into a text widget and add that text widget to our list
92

93
00:08:30,450 --> 00:08:42,180
of text widgets. And then we're going to return that picker items list as the output of our method.
93

94
00:08:42,180 --> 00:08:46,040
Now it's important that you don't return it inside the FOR loop,
94

95
00:08:46,050 --> 00:08:53,580
so inside these curly braces right here, because that way you're going to return the first text widget
95

96
00:08:53,880 --> 00:09:00,150
prematurely and you're not letting the FOR loop loop through all of the currencies in the currencies
96

97
00:09:00,150 --> 00:09:01,320
list.
97

98
00:09:01,410 --> 00:09:07,230
So now you can also change this to be more specific saying that our output is going to be a list of
98

99
00:09:07,230 --> 00:09:08,870
text widgets.
99

100
00:09:08,910 --> 00:09:16,200
Now the reason I can do this is because a text widget is a subclass of stateless widget which is a subclass
100

101
00:09:16,290 --> 00:09:23,090
of widget. And you can see this outlined under the inheritance section in the Flutter documentation.
101

102
00:09:23,220 --> 00:09:29,080
And now we're ready to call this method in our build method to it right here.
102

103
00:09:29,100 --> 00:09:36,510
We can delete this hardcoded list of children and instead we're going to call get picker items which
103

104
00:09:36,510 --> 00:09:38,410
is going to slot into here.
104

105
00:09:38,970 --> 00:09:44,970
So now let's save and let's check out our picker and you can see we can now scroll all the way from
105

106
00:09:44,970 --> 00:09:54,100
Australian dollars to Canadian dollars to all of the currencies that we have in our list. As you can
106

107
00:09:54,100 --> 00:10:01,870
see we can use Cupertino widgets from the Cupertino package as easily as we've been using material widgets.
107

108
00:10:01,870 --> 00:10:08,500
It's just a case of adding it to our build method and initializing it with various properties that we
108

109
00:10:08,500 --> 00:10:11,990
can set. Now in the next lesson
109

110
00:10:12,000 --> 00:10:18,390
we're going to talk about how can we have both in existence? How can we get the Cupertino widget to show
110

111
00:10:18,390 --> 00:10:25,500
up when the user is running our app on iOS and to get the material widget to show up when a user is running
111

112
00:10:25,500 --> 00:10:26,760
an app on Android?
112

113
00:10:27,180 --> 00:10:30,360
So for all of that and more, I'll see you on the next lesson.
