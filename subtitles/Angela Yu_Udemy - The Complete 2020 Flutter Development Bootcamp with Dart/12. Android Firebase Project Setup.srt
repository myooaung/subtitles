0
1
00:00:00,360 --> 00:00:05,600
Now that we've created a Firebase  account and created our first project through the Firebase  website,
1

2
00:00:06,000 --> 00:00:08,460
it's time to get set up for Android.
2

3
00:00:08,490 --> 00:00:14,330
If you're only using Flutter to make us apps, then you can skip this lesson and proceed to the next lesson
3

4
00:00:14,430 --> 00:00:16,680
where we set up for iOS.
4

5
00:00:17,220 --> 00:00:23,610
So first let's add our Android app and you can see the little Android symbol here. And we're going to
5

6
00:00:23,610 --> 00:00:27,270
have to figure out what our Android package name is.
6

7
00:00:27,270 --> 00:00:28,970
So how do we find this?
7

8
00:00:28,980 --> 00:00:31,890
Well as it suggests, it's in the app level
8

9
00:00:31,890 --> 00:00:37,230
build gradle file and it's under something called application ID.
9

10
00:00:37,230 --> 00:00:44,220
So if we head back into our project and we open up the android folder in our project and make sure that
10

11
00:00:44,220 --> 00:00:51,690
we're in the project view, then if we go into the app folder and we go into the build gradle that's
11

12
00:00:52,080 --> 00:00:55,660
inside the app folder and not the one that's in the project,
12

13
00:00:56,040 --> 00:00:57,970
well then we end up here.
13

14
00:00:58,230 --> 00:01:04,890
And if we look through here then you'll find your application ID. And this is what we need to supply
14

15
00:01:04,920 --> 00:01:06,380
to Firebase.
15

16
00:01:06,510 --> 00:01:12,350
Now usually your application ID should be unique across the Android app store.
16

17
00:01:12,420 --> 00:01:16,200
So I recommend changing this part to your name.
17

18
00:01:16,200 --> 00:01:20,730
So it could be Angela Yu or it could be whatever your name is.
18

19
00:01:20,880 --> 00:01:25,830
Now if you have a company, then be sure to put in your reverse domain name.
19

20
00:01:25,830 --> 00:01:28,590
Now how did Flutter come up with this name?
20

21
00:01:28,590 --> 00:01:35,190
Well whenever we create a new Flutter project one of the things that we have to supply is a company
21

22
00:01:35,190 --> 00:01:37,680
domain in this setup wizard.
22

23
00:01:37,800 --> 00:01:45,180
So say if your company was www.google.com, then it would create a package name of com.google.
23

24
00:01:45,210 --> 00:01:46,850
the name of your app.
24

25
00:01:46,860 --> 00:01:50,880
So this is how we came about the co.appbrewery.flash_chat.
25

26
00:01:52,200 --> 00:02:00,630
So once you've modified this to your own name or your own domain, then go ahead and copy the entire string
26

27
00:02:01,200 --> 00:02:05,450
over to here and paste it in here.
27

28
00:02:05,730 --> 00:02:12,110
Now it's really important that what you see here matches what you have as the key for the application
28

29
00:02:12,120 --> 00:02:18,540
ID exactly, not including the quotation marks of course.
29

30
00:02:18,540 --> 00:02:22,920
Now once you're done with that go ahead and click on register app.
30

31
00:02:22,920 --> 00:02:33,110
And once the spinner stops, we'll get to download our google-services.json configuration file now.
31

32
00:02:33,130 --> 00:02:41,530
It's really important that if you click on this once, you get the google-services.json downloaded
32

33
00:02:41,860 --> 00:02:49,120
but on a lot of computers, if you click on it twice say maybe by accident, you'll get another file downloaded
33

34
00:02:49,480 --> 00:02:54,810
but you'll see that it actually has one after the name of the file.
34

35
00:02:54,940 --> 00:03:01,180
And it's really important that you only have one of these files in your Downloads folder so you don't
35

36
00:03:01,180 --> 00:03:05,170
end up with a one added to the name of the file.
36

37
00:03:05,170 --> 00:03:11,980
And the reason is because Firebase is going to look to find a file called google-services.json
37

38
00:03:12,430 --> 00:03:17,260
and not something called google-services(1).json.
38

39
00:03:17,260 --> 00:03:23,460
So this is a really common place where people trip up so it's important to be aware of that.
39

40
00:03:23,500 --> 00:03:30,880
Now once you've gotten this file, go ahead and open up Android Studio and have your Finder or your Windows
40

41
00:03:30,880 --> 00:03:34,540
Explorer open up where that file's located.
41

42
00:03:34,540 --> 00:03:40,540
And we're going to drag it aiming for the app folders. So make sure the app folder is the one that's
42

43
00:03:40,540 --> 00:03:41,880
highlighted.
43

44
00:03:41,890 --> 00:03:48,820
So now, we get to go ahead and add it to the app folder and it doesn't matter if you want to add it to
44

45
00:03:48,820 --> 00:03:49,540
Git or not.
45

46
00:03:49,540 --> 00:03:51,870
It doesn't really affect your project.
46

47
00:03:51,910 --> 00:03:54,590
So now we can see the google-services.json
47

48
00:03:54,610 --> 00:04:03,050
json in its entirety inside our app folder and we're ready to move on to the next step of setup.
48

49
00:04:03,160 --> 00:04:05,080
So let's go ahead and click next.
49

50
00:04:05,170 --> 00:04:08,320
And now there's just a few more things we have to do.
50

51
00:04:08,890 --> 00:04:12,720
So we have to open up our project level build gradle,
51

52
00:04:12,720 --> 00:04:15,860
so it's under our project/build.gradle.
52

53
00:04:15,910 --> 00:04:23,310
So that refers to the one that's inside our Android project under the name of build gradle.
53

54
00:04:23,320 --> 00:04:27,080
And here we have something called dependencies.
54

55
00:04:27,310 --> 00:04:35,470
And what it's asking us to do is to copy this line of codeand add it below any other dependencies.
55

56
00:04:35,470 --> 00:04:41,650
but making sure that it's still inside the curly braces of our dependencies.
56

57
00:04:41,650 --> 00:04:46,090
And then we have to open up the App-level build.gradle
57

58
00:04:46,090 --> 00:04:52,690
So this is under our project/app/build.gradle and it's the one that's inside here.
58

59
00:04:52,710 --> 00:04:56,340
So inside the app folder we've got our build.gradle.
59

60
00:04:56,410 --> 00:05:00,100
And here we also have some dependencies down here.
60

61
00:05:00,310 --> 00:05:07,050
And we're going to copy this line and add it into the dependencies inside our App-level build.gradle.
61

62
00:05:07,570 --> 00:05:09,550
I'm going to paste it right here.
62

63
00:05:09,550 --> 00:05:17,260
And we're also going to copy this line which implements our Google services file right at the bottom
63

64
00:05:17,290 --> 00:05:24,440
of the file, below everything else and outside of all the other curly braces. Now once you're done, you
64

65
00:05:24,440 --> 00:05:31,450
can go ahead and close up all of those files and make sure that you've got the android emulator selected.
65

66
00:05:31,580 --> 00:05:37,600
Go ahead and run your app just to make sure that everything is working as expected.
66

67
00:05:43,290 --> 00:05:48,870
All going well, you should see the app run in the emulator or in your device.
67

68
00:05:48,870 --> 00:05:56,400
And if you take a look inside the run tab, you might see something about something being deprecated or
68

69
00:05:56,400 --> 00:05:58,580
a couple of messages from Firebase.
69

70
00:05:58,590 --> 00:06:05,040
But don't worry about this as long as you don't see anything in red inside your console under the run
70

71
00:06:05,040 --> 00:06:11,820
tab and your app actually loads up, then that means you've setup Firebase to work with your Android app
71

72
00:06:11,820 --> 00:06:14,110
successfully.
72

73
00:06:14,370 --> 00:06:22,800
So now you can hit next and you're going to skip this last step and continue to console. And we're now
73

74
00:06:22,800 --> 00:06:26,880
ready to move on to the next part which is setting up the iOS app.
