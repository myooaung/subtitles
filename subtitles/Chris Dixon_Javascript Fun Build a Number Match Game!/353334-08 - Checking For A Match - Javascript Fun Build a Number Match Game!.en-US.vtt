WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.100 --> 00:00:04.140
The next step inside of our game is to handle

00:00:04.140 --> 00:00:08.235
the functionality if the user clicks on the tick or the cross.

00:00:08.235 --> 00:00:11.280
We are going to provide two functions which is going to check if

00:00:11.280 --> 00:00:15.870
the user's guess is correct or incorrect and update the score.

00:00:15.870 --> 00:00:18.570
To do this inside of our index.html,

00:00:18.570 --> 00:00:21.930
we need to add a click handler to our buttons.

00:00:21.930 --> 00:00:25.815
These are our two buttons inside of the match area.

00:00:25.815 --> 00:00:28.770
For the correct button, we'll set up a function which is

00:00:28.770 --> 00:00:32.265
triggered with a onclick event handler called match.

00:00:32.265 --> 00:00:34.530
Then just below this, we'll also do the same,

00:00:34.530 --> 00:00:37.275
but this time the function is going to be called noMatch,

00:00:37.275 --> 00:00:42.045
and we'll handle what to do if the user thinks his choice is incorrect.

00:00:42.045 --> 00:00:45.420
I go to our transcript, save this file,

00:00:45.420 --> 00:00:48.560
and before we get to work with adding these two functions,

00:00:48.560 --> 00:00:51.745
I'm going to create some variables over the very top.

00:00:51.745 --> 00:00:54.710
We need to store both the correct number of items in

00:00:54.710 --> 00:00:57.980
image and also the number which is displayed.

00:00:57.980 --> 00:01:00.170
This is so we're going to compare both of

00:01:00.170 --> 00:01:03.655
these values to see if the user's choice was correct.

00:01:03.655 --> 00:01:08.520
The first variable is going to be called currentImageValue.

00:01:10.370 --> 00:01:14.525
We can set this to be equal to an initial value of zero,

00:01:14.525 --> 00:01:18.530
and then update these once a new image has been generated.

00:01:18.530 --> 00:01:24.025
Separated by comma, we can create a second variable called displayNumber,

00:01:24.025 --> 00:01:27.470
and again, initialize this as a value of zero.

00:01:27.470 --> 00:01:29.300
Just as a quick side note here,

00:01:29.300 --> 00:01:31.970
we are not using the let keyword in

00:01:31.970 --> 00:01:35.795
both occurrences here because we've separated these by a comma,

00:01:35.795 --> 00:01:38.640
so this is fine to do this way.

00:01:40.010 --> 00:01:43.320
Add a new comma just after our display number,

00:01:43.320 --> 00:01:49.720
and we set a variable to set the current score which is going to be initialized as zero.

00:01:49.720 --> 00:01:54.140
Now we have these values we actually need to update these with the correct numbers.

00:01:54.140 --> 00:01:56.980
Let's start with our current image value.

00:01:56.980 --> 00:01:59.830
The way we can grab this if we go down to our function,

00:01:59.830 --> 00:02:02.060
which is generate display number,

00:02:02.060 --> 00:02:05.975
inside of here we have the variable called numberOfItems.

00:02:05.975 --> 00:02:10.660
Therefore, we can grab this number and set our current image value.

00:02:10.660 --> 00:02:13.400
Let's do this at the bottom of our function.

00:02:13.400 --> 00:02:19.480
We can set our current image value to be equal to our number of items.

00:02:19.480 --> 00:02:22.205
Now we have our current image value set,

00:02:22.205 --> 00:02:25.130
which is the correct number of items in the image,

00:02:25.130 --> 00:02:28.070
but now we need to also update our display number,

00:02:28.070 --> 00:02:31.525
which is the same number which the user sees in the game.

00:02:31.525 --> 00:02:34.515
Remember, this is either the correct number,

00:02:34.515 --> 00:02:36.875
which we set inside the if section,

00:02:36.875 --> 00:02:40.655
or a false value which is either one higher or lower,

00:02:40.655 --> 00:02:43.450
and we'll set this in the else section.

00:02:43.450 --> 00:02:48.165
First of all, inside if section which was the correct number.

00:02:48.165 --> 00:02:53.275
With that, our display number to be equal to number of items.

00:02:53.275 --> 00:02:57.020
Just like above where we set this to the user interface.

00:02:57.020 --> 00:02:59.675
Just below this inside the else section,

00:02:59.675 --> 00:03:02.030
we're displaying the number of items,

00:03:02.030 --> 00:03:04.735
which is either one higher or one lower.

00:03:04.735 --> 00:03:07.230
Inside this section we can also set

00:03:07.230 --> 00:03:13.020
our display number to be exactly the same which is number of items,

00:03:13.020 --> 00:03:15.750
and then either one higher or one lower.

00:03:15.750 --> 00:03:19.460
Just before we create our functions which are linked to our buttons,

00:03:19.460 --> 00:03:22.510
let's check our variables are currently working.

00:03:22.510 --> 00:03:24.360
Inside the generate function,

00:03:24.360 --> 00:03:26.335
we can do two console logs.

00:03:26.335 --> 00:03:30.690
The first one is the current image value,

00:03:31.190 --> 00:03:34.125
which is the correct number of items,

00:03:34.125 --> 00:03:36.755
then the second one is the display number,

00:03:36.755 --> 00:03:40.025
which is the number the user will compare against.

00:03:40.025 --> 00:03:43.980
Inside the console, right-click "Inspect",

00:03:45.140 --> 00:03:47.805
and then let's click on "Play".

00:03:47.805 --> 00:03:50.130
To begin, we see the value of zero,

00:03:50.130 --> 00:03:53.300
zero since we have not generated an image just yet,

00:03:53.300 --> 00:03:57.125
therefore have a correct match, a correct match,

00:03:57.125 --> 00:03:59.390
nine and 10 is incorrect,

00:03:59.390 --> 00:04:03.900
incorrect, incorrect, and so on.

00:04:03.900 --> 00:04:07.040
Now we have these two values to compare against.

00:04:07.040 --> 00:04:12.140
We're going to create our two functions to check if the user is correct or incorrect.

00:04:12.140 --> 00:04:16.150
Let's remove this, and we can create our two functions.

00:04:16.150 --> 00:04:20.200
The first button trigger a function called match.

00:04:22.670 --> 00:04:26.120
The match function is going to be responsible for checking if

00:04:26.120 --> 00:04:29.500
the current image value is equal to our display number.

00:04:29.500 --> 00:04:33.620
If it is, the user is correct and we'll update our score.

00:04:33.640 --> 00:04:38.990
We can update the score by using a JavaScript ternary operator so we can check

00:04:38.990 --> 00:04:44.370
if the current image value is equal to the display number.

00:04:45.070 --> 00:04:47.090
After the question mark,

00:04:47.090 --> 00:04:48.740
this means the section is true.

00:04:48.740 --> 00:04:52.770
We want to update the score with score plus plus.

00:04:53.410 --> 00:04:57.185
If not, we add a colon and the second condition.

00:04:57.185 --> 00:05:00.845
We want to deduct the score by the value of one.

00:05:00.845 --> 00:05:03.500
If the user has got this correct,

00:05:03.500 --> 00:05:04.940
the score will increase.

00:05:04.940 --> 00:05:08.225
If not, the score will decrease by one, two.

00:05:08.225 --> 00:05:13.985
Then we can also update the DOM with document.getElementById,

00:05:13.985 --> 00:05:17.845
and this is the section just here which we want to update.

00:05:17.845 --> 00:05:20.085
Over to our index.html,

00:05:20.085 --> 00:05:25.185
we can update this span with the ID of current score, so let's grab this.

00:05:25.185 --> 00:05:31.020
We can also remove the default value at this end,

00:05:31.020 --> 00:05:36.390
and then we can set the innerHTML to be equal to our score variable.

00:05:37.200 --> 00:05:43.570
Next we have the second button which has the function name called noMatch.

00:05:43.570 --> 00:05:45.370
This is going to be pretty similar,

00:05:45.370 --> 00:05:49.950
so let's copy this, paste this just below.

00:05:49.950 --> 00:05:52.379
This is going to be called noMatch,

00:05:52.379 --> 00:05:56.600
and we want to pretty much do the reverse of what we've done here.

00:05:56.720 --> 00:05:59.860
We want to check if the user believes that

00:05:59.860 --> 00:06:05.095
the current image value is not equal to the number which is being displayed.

00:06:05.095 --> 00:06:07.870
We can do this rather than the triple equals.

00:06:07.870 --> 00:06:09.985
We're going to use the exclamation mark,

00:06:09.985 --> 00:06:15.685
and this will check if the current image value is not equal to our display number.

00:06:15.685 --> 00:06:20.430
If this is correct, this means the user has got these right and it will update the score.

00:06:20.430 --> 00:06:25.910
If they are wrong, it will deduct a point and then update the DOM. Let's give this a try.

00:06:25.910 --> 00:06:29.810
We can click on "Play". In fact,

00:06:29.810 --> 00:06:33.080
we'll just update our timer to give us some more time,

00:06:33.080 --> 00:06:35.845
so five seconds they can play.

00:06:35.845 --> 00:06:38.835
There's six docs, so let's click on the tick.

00:06:38.835 --> 00:06:41.145
This is correct, and we get a score.

00:06:41.145 --> 00:06:46.755
Twelve pencils, that one's fine.

00:06:46.755 --> 00:06:49.040
There's seven cakes, but if you click on the x,

00:06:49.040 --> 00:06:52.380
we should see a score has been deducted.

00:06:52.430 --> 00:06:56.915
Good. Now this is our working and we can update the score.

00:06:56.915 --> 00:06:58.790
In the next video, we're going to come back to

00:06:58.790 --> 00:07:03.060
the score and display it to the user at the end of the game.
