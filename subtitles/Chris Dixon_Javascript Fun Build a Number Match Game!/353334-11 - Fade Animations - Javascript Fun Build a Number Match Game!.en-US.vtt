WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.530 --> 00:00:02.700
You finish off this project,

00:00:02.700 --> 00:00:07.725
we're going to make the transitions between each one of our images a little smoother.

00:00:07.725 --> 00:00:12.195
Currently, each one of our images is just placed inside the DOM.

00:00:12.195 --> 00:00:16.110
But we're going to make this smoother by adding a fade effect.

00:00:16.110 --> 00:00:20.670
The way we can do this is by adding a class to our image.

00:00:20.670 --> 00:00:22.575
Once this has been generated.

00:00:22.575 --> 00:00:27.900
We can now move over to our CSS and add this as a animation.

00:00:27.900 --> 00:00:31.905
If we head over to our SetImageSource function,

00:00:31.905 --> 00:00:37.550
inside here is where we generate a new image element to display inside the browser.

00:00:37.550 --> 00:00:44.135
We can access our image variable and I'm going to do this just after we set the source.

00:00:44.135 --> 00:00:48.395
We can do this by selecting the classList property,

00:00:48.395 --> 00:00:51.320
which has a method called add.

00:00:51.320 --> 00:00:54.170
This will allow us to add a new class name to

00:00:54.170 --> 00:00:58.350
our image elements and we're going to go for a name of fade.

00:00:58.720 --> 00:01:02.255
We can now use this over in our style sheets,

00:01:02.255 --> 00:01:05.255
so head over to our Styles.css.

00:01:05.255 --> 00:01:08.090
We can add this anywhere inside of our style sheets,

00:01:08.090 --> 00:01:11.575
I'm going to go for just above our media query.

00:01:11.575 --> 00:01:15.355
We could begin to target our fade element.

00:01:15.355 --> 00:01:17.030
But just before we do this,

00:01:17.030 --> 00:01:22.620
we need to create our animation and we could do this with the keyframes rule.

00:01:22.770 --> 00:01:27.355
We then give our animation a name and I'm going to go for fade.

00:01:27.355 --> 00:01:33.784
Here we said, which CSS property we want to change over the course of this animation.

00:01:33.784 --> 00:01:38.230
From this, we can use from and to where we specify which CSS

00:01:38.230 --> 00:01:42.670
properties we want to begin with and then which ones we want to end with.

00:01:42.670 --> 00:01:46.630
So to create a fade effect we're going to set the CSS property,

00:01:46.630 --> 00:01:50.685
of the opacity to be equal to zero.

00:01:50.685 --> 00:01:56.635
This means that this is completely transparent and we won't see anything on the screen.

00:01:56.635 --> 00:02:00.010
In our case, we won't see the image inside the browser.

00:02:00.010 --> 00:02:02.770
At the end of this fade or this animation,

00:02:02.770 --> 00:02:06.470
we want the opacity to be a value of one.

00:02:07.320 --> 00:02:10.450
This means that our image will be completely visible

00:02:10.450 --> 00:02:13.590
or opaque once our animation has finished.

00:02:13.590 --> 00:02:17.595
The way we can use this is up inside of our fade class.

00:02:17.595 --> 00:02:20.320
Remember fade is the class which we've added to

00:02:20.320 --> 00:02:25.805
our image element and we can add our keyframes with the animation name.

00:02:25.805 --> 00:02:30.090
The animation-name is fade.

00:02:30.090 --> 00:02:33.935
This is its name just here and now we have

00:02:33.935 --> 00:02:37.480
an animation which is going to go from zero opacity,

00:02:37.480 --> 00:02:40.540
to be fully opaque or fully visible on the screen.

00:02:40.540 --> 00:02:45.330
But at the moment this is probably not going to create any effect.

00:02:45.330 --> 00:02:48.190
Let's just check this and reload.

00:02:49.930 --> 00:02:53.840
We don't see anything different inside the browser.

00:02:53.840 --> 00:02:58.040
This is because this is happening pretty much straight away and

00:02:58.040 --> 00:03:02.405
there's no time delay between the start and the end of our animation.

00:03:02.405 --> 00:03:06.020
To do this, we can set the animation duration

00:03:06.020 --> 00:03:09.680
and this is the number of seconds we want this to happen over.

00:03:09.680 --> 00:03:13.925
We want to set this animation to happen over one second.

00:03:13.925 --> 00:03:17.430
Now if we try it in the browser and click on Play,

00:03:18.880 --> 00:03:23.225
we see that each image which is loaded has an animation,

00:03:23.225 --> 00:03:25.690
which is over one second.

00:03:25.690 --> 00:03:30.260
This just makes the game a little smoother for the end-user and of course,

00:03:30.260 --> 00:03:31.850
you can play around with these and make

00:03:31.850 --> 00:03:35.800
these animations more custom and make this project your own.

00:03:35.800 --> 00:03:38.420
This is now the end of our Number Match game,

00:03:38.420 --> 00:03:41.940
I hope you've enjoyed it. Thank you for watching.
