1
1

00:00:00,130  -->  00:00:02,570
<v Instructor>Hello and welcome to this Python tutorial.</v>
2

2

00:00:02,570  -->  00:00:04,320
So today we are going to convert
3

3

00:00:04,320  -->  00:00:06,540
our training set and our test set
4

4

00:00:06,540  -->  00:00:08,585
into an array with users in lines
5

5

00:00:08,585  -->  00:00:10,760
and movies in columns.
6

6

00:00:10,760  -->  00:00:12,820
So first why do we need to do that?
7

7

00:00:12,820  -->  00:00:14,800
Well, the reason is that we need to make
8

8

00:00:14,800  -->  00:00:17,900
a specific structure of data that will correspond
9

9

00:00:17,900  -->  00:00:21,400
to what the restricted Boltzmann machine expects as inputs.
10

10

00:00:21,400  -->  00:00:23,130
The restricted Boltzmann machines
11

11

00:00:23,130  -->  00:00:24,630
are a type of neural network
12

12

00:00:24,630  -->  00:00:27,560
where you have some input nodes that are the features,
13

13

00:00:27,560  -->  00:00:29,900
and you have some observations going one by one
14

14

00:00:29,900  -->  00:00:32,690
into the networks starting with the input nodes.
15

15

00:00:32,690  -->  00:00:35,220
And so what we have to do is create a structure
16

16

00:00:35,220  -->  00:00:37,280
that will contain these observations
17

17

00:00:37,280  -->  00:00:38,700
that will go into the network
18

18

00:00:38,700  -->  00:00:40,120
and their different features
19

19

00:00:40,120  -->  00:00:42,410
that are going to be in the input nodes.
20

20

00:00:42,410  -->  00:00:44,640
And that's exactly what we are about to do
21

21

00:00:44,640  -->  00:00:47,060
by creating this array with the users in lines
22

22

00:00:47,060  -->  00:00:48,510
and the movies in columns
23

23

00:00:48,510  -->  00:00:50,600
because we will have the observations in lines
24

24

00:00:50,600  -->  00:00:52,540
and the features in columns.
25

25

00:00:52,540  -->  00:00:54,060
And so basically we're just making
26

26

00:00:54,060  -->  00:00:56,960
the usual structure of data for neural networks
27

27

00:00:56,960  -->  00:00:58,930
or even for machine learning in general
28

28

00:00:58,930  -->  00:01:00,620
that is with the observations in lines
29

29

00:01:00,620  -->  00:01:02,080
and the features in columns.
30

30

00:01:02,080  -->  00:01:03,750
That was exactly the same
31

31

00:01:03,750  -->  00:01:06,510
for the dataset of our journaling problem.
32

32

00:01:06,510  -->  00:01:08,860
Remember we had the observations in lines
33

33

00:01:08,860  -->  00:01:10,390
which were the customers,
34

34

00:01:10,390  -->  00:01:11,930
and the features in columns
35

35

00:01:11,930  -->  00:01:14,380
which were the information of these customers,
36

36

00:01:14,380  -->  00:01:16,170
and that's exactly the structure of data
37

37

00:01:16,170  -->  00:01:17,780
expected by a neural network,
38

38

00:01:17,780  -->  00:01:19,530
and that's why we are now converting
39

39

00:01:19,530  -->  00:01:21,560
our data into such a structure.
40

40

00:01:21,560  -->  00:01:23,160
Okay so now that we understand,
41

41

00:01:23,160  -->  00:01:26,560
let's convert our data into such a structure.
42

42

00:01:26,560  -->  00:01:28,170
So since we're gonna do this
43

43

00:01:28,170  -->  00:01:30,880
for both the training set and the test set,
44

44

00:01:30,880  -->  00:01:33,830
we're gonna create a function that we will apply then
45

45

00:01:33,830  -->  00:01:36,540
on the training set and the test set separately.
46

46

00:01:36,540  -->  00:01:38,250
So let's create this function.
47

47

00:01:38,250  -->  00:01:39,560
To create a function in Python
48

48

00:01:39,560  -->  00:01:42,980
we need to start with def for definition,
49

49

00:01:42,980  -->  00:01:46,000
and then we need to give a name to the function,
50

50

00:01:46,000  -->  00:01:48,203
and we're gonna call this function convert.
51

51

00:01:50,020  -->  00:01:53,090
Okay then we need to give some arguments to the function
52

52

00:01:53,090  -->  00:01:55,060
and actually we only need one argument
53

53

00:01:55,060  -->  00:01:56,660
because you know we will apply this function
54

54

00:01:56,660  -->  00:01:59,860
to only a set which will be the training set first
55

55

00:01:59,860  -->  00:02:01,220
and then the test set.
56

56

00:02:01,220  -->  00:02:03,240
And so here we only need one argument
57

57

00:02:03,240  -->  00:02:05,650
that we're gonna call data.
58

58

00:02:05,650  -->  00:02:07,310
So that's our argument.
59

59

00:02:07,310  -->  00:02:09,110
And then when we apply the convert function
60

60

00:02:09,110  -->  00:02:11,010
to our training set and our test set,
61

61

00:02:11,010  -->  00:02:12,690
we will just need to replace data
62

62

00:02:12,690  -->  00:02:15,360
by training set and then test set.
63

63

00:02:15,360  -->  00:02:18,380
Alright, then colon, that's just Python syntax,
64

64

00:02:18,380  -->  00:02:21,960
and then Enter to go into the function
65

65

00:02:21,960  -->  00:02:23,660
to give its definition that is
66

66

00:02:23,660  -->  00:02:25,920
tell the function what we want it to do.
67

67

00:02:25,920  -->  00:02:30,080
Okay so as you understood we are about to create an array
68

68

00:02:30,080  -->  00:02:32,080
where the lines are going to be the users
69

69

00:02:32,080  -->  00:02:34,260
and the columns are going to be the movies.
70

70

00:02:34,260  -->  00:02:36,760
So I guess what you're thinking about right now
71

71

00:02:36,760  -->  00:02:38,960
is a two-dimensional NumPy array.
72

72

00:02:38,960  -->  00:02:40,540
We could do that, however,
73

73

00:02:40,540  -->  00:02:43,600
and that's just because we're gonna use Torch afterwards,
74

74

00:02:43,600  -->  00:02:46,340
we won't create a two-dimensional NumPy array,
75

75

00:02:46,340  -->  00:02:48,890
we will create a list of lists.
76

76

00:02:48,890  -->  00:02:51,370
So list of lists, what does that mean?
77

77

00:02:51,370  -->  00:02:53,950
That means that we're gonna have several lists.
78

78

00:02:53,950  -->  00:02:57,910
One list for each line, that is one list for each user.
79

79

00:02:57,910  -->  00:03:01,500
And therefore since we have 943 users,
80

80

00:03:01,500  -->  00:03:04,830
that means that we'll have 943 lists,
81

81

00:03:04,830  -->  00:03:06,740
and these will be horizontal lists,
82

82

00:03:06,740  -->  00:03:10,120
so these will correspond to our observations in lines
83

83

00:03:10,120  -->  00:03:12,890
in this special structure that we've just described.
84

84

00:03:12,890  -->  00:03:13,950
So it will go like this.
85

85

00:03:13,950  -->  00:03:16,600
The first list will correspond to the first user,
86

86

00:03:16,600  -->  00:03:18,940
the second list will correspond to the second user,
87

87

00:03:18,940  -->  00:03:20,090
and et cetera.
88

88

00:03:20,090  -->  00:03:22,660
And then what will we get in each list?
89

89

00:03:22,660  -->  00:03:27,660
Well, of course we will get the ratings of the 1,682 movies
90

90

00:03:28,030  -->  00:03:30,630
by the user corresponding to the list.
91

91

00:03:30,630  -->  00:03:32,900
And so we'll get the rating for each of the movie,
92

92

00:03:32,900  -->  00:03:35,200
and remember if the user didn't rate the movie,
93

93

00:03:35,200  -->  00:03:37,420
then we'll get a zero for that set.
94

94

00:03:37,420  -->  00:03:40,130
And that's why the new converted training set and test set
95

95

00:03:40,130  -->  00:03:42,210
will have the same size because basically
96

96

00:03:42,210  -->  00:03:44,210
for both the training set and the test set,
97

97

00:03:44,210  -->  00:03:46,970
we are considering all the users and all the movies,
98

98

00:03:46,970  -->  00:03:50,590
and we just put a zero when the user didn't rate the movie.
99

99

00:03:50,590  -->  00:03:52,070
Okay so to recap.
100

100

00:03:52,070  -->  00:03:53,760
This whole list of lists
101

101

00:03:53,760  -->  00:03:56,610
will be a list of 943 lists
102

102

00:03:56,610  -->  00:03:59,090
because we have 943 users,
103

103

00:03:59,090  -->  00:04:01,670
and each of these 943 lists
104

104

00:04:01,670  -->  00:04:05,140
will be a list of 1,682 elements
105

105

00:04:05,140  -->  00:04:09,230
because we have 1,682 movies.
106

106

00:04:09,230  -->  00:04:12,420
Alright so now let's create this list of lists.
107

107

00:04:12,420  -->  00:04:16,530
So we're gonna start by giving a name to this list of lists,
108

108

00:04:16,530  -->  00:04:18,363
and we're gonna call it new_data,
109

109

00:04:19,600  -->  00:04:21,540
and that will be our final output
110

110

00:04:21,540  -->  00:04:22,730
that the function will return,
111

111

00:04:22,730  -->  00:04:24,240
that is it's going to be
112

112

00:04:24,240  -->  00:04:26,350
our final array with the users in lines
113

113

00:04:26,350  -->  00:04:27,920
and the movies in columns.
114

114

00:04:27,920  -->  00:04:30,600
And so since new_data is a list of lists,
115

115

00:04:30,600  -->  00:04:32,920
we need to initialize it as a list.
116

116

00:04:32,920  -->  00:04:34,610
And how do we do that in Python?
117

117

00:04:34,610  -->  00:04:35,670
Well, that's very simple.
118

118

00:04:35,670  -->  00:04:37,240
We need to initialize it this way
119

119

00:04:37,240  -->  00:04:39,600
with an equal and then brackets.
120

120

00:04:39,600  -->  00:04:42,220
That initializes the list.
121

121

00:04:42,220  -->  00:04:43,890
Okay next step.
122

122

00:04:43,890  -->  00:04:45,890
Next step is to make a for loop
123

123

00:04:45,890  -->  00:04:48,890
because we wanna create a list for each user,
124

124

00:04:48,890  -->  00:04:51,700
the list of all the ratings of the movies by this user,
125

125

00:04:51,700  -->  00:04:52,930
and therefore we need a for loop
126

126

00:04:52,930  -->  00:04:55,410
that will get the ratings for each user.
127

127

00:04:55,410  -->  00:04:57,850
And so here we start with for,
128

128

00:04:57,850  -->  00:05:00,060
and now we need to introduce a local variable
129

129

00:05:00,060  -->  00:05:02,690
that will loop over all the users of the data
130

130

00:05:02,690  -->  00:05:04,760
that is the training set or the test set.
131

131

00:05:04,760  -->  00:05:07,173
And so we're gonna call this variable id_users,
132

132

00:05:09,550  -->  00:05:11,950
and this will take the values of all the IDs
133

133

00:05:11,950  -->  00:05:14,060
of the users in our database.
134

134

00:05:14,060  -->  00:05:18,450
And then we need to specify a range for these user IDs,
135

135

00:05:18,450  -->  00:05:22,200
and that will simply going to be all the user IDs
136

136

00:05:22,200  -->  00:05:27,120
from one to the max that is the total number of users
137

137

00:05:27,120  -->  00:05:29,310
which we got in this variable here,
138

138

00:05:29,310  -->  00:05:30,280
and so now you understand
139

139

00:05:30,280  -->  00:05:32,970
why we got to create this variable.
140

140

00:05:32,970  -->  00:05:37,970
So for id_users going from one up to nb_users,
141

141

00:05:40,270  -->  00:05:42,250
but now be careful there is a trick,
142

142

00:05:42,250  -->  00:05:44,880
the upper bound in a range is excluded,
143

143

00:05:44,880  -->  00:05:47,890
and therefore nb_users will not be included here.
144

144

00:05:47,890  -->  00:05:49,170
This will go from one
145

145

00:05:49,170  -->  00:05:51,920
to the number of users minus one,
146

146

00:05:51,920  -->  00:05:54,540
that is, 942.
147

147

00:05:54,540  -->  00:05:56,740
And we want it to go up to 943
148

148

00:05:56,740  -->  00:05:59,230
because we want to consider all the users.
149

149

00:05:59,230  -->  00:06:00,980
And therefore what we simply need to do
150

150

00:06:00,980  -->  00:06:05,277
is to add here plus one so that it goes up to 944,
151

151

00:06:06,230  -->  00:06:09,230
but 944 will be excluded and therefore
152

152

00:06:09,230  -->  00:06:13,070
we will go up to 943 which is what we want.
153

153

00:06:13,070  -->  00:06:16,560
Okay and now we need to introduce a colon
154

154

00:06:16,560  -->  00:06:18,580
still because of Python syntax,
155

155

00:06:18,580  -->  00:06:21,453
and we press Enter to go into the loop.
156

156

00:06:22,450  -->  00:06:25,210
And so now what are we going to do in this loop?
157

157

00:06:25,210  -->  00:06:28,230
Well, right now what we wanna do is to create
158

158

00:06:28,230  -->  00:06:31,910
the first list of this new data list.
159

159

00:06:31,910  -->  00:06:33,900
And what is this first list going to be?
160

160

00:06:33,900  -->  00:06:35,030
Well, as you understood,
161

161

00:06:35,030  -->  00:06:38,090
that's going to be the ratings of the first user
162

162

00:06:38,090  -->  00:06:41,240
because id_users here starts at one,
163

163

00:06:41,240  -->  00:06:43,380
and so we are starting with the first user,
164

164

00:06:43,380  -->  00:06:44,700
and so we're starting to add
165

165

00:06:44,700  -->  00:06:47,020
the list of ratings of the first user,
166

166

00:06:47,020  -->  00:06:49,210
and we're gonna add it in this list here
167

167

00:06:49,210  -->  00:06:50,900
which is the whole list.
168

168

00:06:50,900  -->  00:06:52,270
Okay so now the question is
169

169

00:06:52,270  -->  00:06:55,030
how can we create the list of all the ratings
170

170

00:06:55,030  -->  00:06:57,000
of the movies by this first user?
171

171

00:06:57,000  -->  00:07:00,130
Well, first what we'll do is get all the movies' IDs
172

172

00:07:00,130  -->  00:07:03,930
of all the movies that were rated by this first user.
173

173

00:07:03,930  -->  00:07:06,900
And so we're gonna put all these movies' IDs into a variable
174

174

00:07:06,900  -->  00:07:08,583
which we're gonna call id_movies.
175

175

00:07:11,230  -->  00:07:14,350
Alright and this will contain the movies' IDs
176

176

00:07:14,350  -->  00:07:16,900
that were rated by the first user.
177

177

00:07:16,900  -->  00:07:18,510
So how can we get that now?
178

178

00:07:18,510  -->  00:07:21,900
Well, we need to take our data,
179

179

00:07:21,900  -->  00:07:24,210
and you can imagine the data to be the training set
180

180

00:07:24,210  -->  00:07:26,920
because then we will apply convert to the training set.
181

181

00:07:26,920  -->  00:07:28,900
And so let's say that data is the training set,
182

182

00:07:28,900  -->  00:07:31,350
from the training set we wanna take
183

183

00:07:31,350  -->  00:07:34,550
first the column that contains all the movie IDs,
184

184

00:07:34,550  -->  00:07:38,060
and that's the second column, that is of index one.
185

185

00:07:38,060  -->  00:07:39,490
And so that's the first thing we'll do.
186

186

00:07:39,490  -->  00:07:44,490
We'll get the first index of the training set which is one.
187

187

00:07:44,620  -->  00:07:46,740
And then we'll take all the observations,
188

188

00:07:46,740  -->  00:07:48,830
and to do this we use this colon here
189

189

00:07:48,830  -->  00:07:51,930
and we separate the colon and the one by a comma.
190

190

00:07:51,930  -->  00:07:54,680
So here so far we're just taking the whole colon
191

191

00:07:54,680  -->  00:07:57,230
of the movies' IDs in the training set.
192

192

00:07:57,230  -->  00:08:00,060
So so far we're taking the whole column here,
193

193

00:08:00,060  -->  00:08:02,540
the whole one with all the users.
194

194

00:08:02,540  -->  00:08:05,070
Okay but now we just want
195

195

00:08:05,070  -->  00:08:07,560
the movies' IDs of this first user,
196

196

00:08:07,560  -->  00:08:10,020
the first user because we are at the beginning of the loop.
197

197

00:08:10,020  -->  00:08:13,370
So how can we only get the ratings of this first user?
198

198

00:08:13,370  -->  00:08:15,370
While I'm explaining, try to pause the video
199

199

00:08:15,370  -->  00:08:18,200
and try to guess the next thing I'm going to code.
200

200

00:08:18,200  -->  00:08:20,910
So basically what we want is the movies' IDs
201

201

00:08:20,910  -->  00:08:25,140
going from this one up to this one,
202

202

00:08:25,140  -->  00:08:27,400
that is basically we want all the movies' IDs
203

203

00:08:27,400  -->  00:08:29,650
when the first column equals one.
204

204

00:08:29,650  -->  00:08:33,300
So what we need to do is make some kind of a syntax
205

205

00:08:33,300  -->  00:08:36,620
that will tell we want the first column of the data,
206

206

00:08:36,620  -->  00:08:37,890
that is the training set,
207

207

00:08:37,890  -->  00:08:41,320
such that the first column equals one.
208

208

00:08:41,320  -->  00:08:43,710
And the trick to do this in Python
209

209

00:08:43,710  -->  00:08:45,590
is to add a new condition,
210

210

00:08:45,590  -->  00:08:48,250
and we add it in a new pair of brackets,
211

211

00:08:48,250  -->  00:08:50,040
and inside this new pair of brackets,
212

212

00:08:50,040  -->  00:08:51,920
we're gonna put the condition.
213

213

00:08:51,920  -->  00:08:54,540
And as we said, the condition is that
214

214

00:08:54,540  -->  00:08:56,650
data, that is the training set,
215

215

00:08:56,650  -->  00:09:01,430
well, actually the first column of data that has index zero,
216

216

00:09:01,430  -->  00:09:04,880
and we take all the lines again equals equals.
217

217

00:09:04,880  -->  00:09:07,083
And so now as we understood we want one,
218

218

00:09:07,083  -->  00:09:11,010
that one is id_users because id_users starts at one,
219

219

00:09:11,010  -->  00:09:12,463
and so we put id_users.
220

220

00:09:14,940  -->  00:09:16,210
And so this will take
221

221

00:09:16,210  -->  00:09:17,620
all the movies' IDs
222

222

00:09:17,620  -->  00:09:20,010
of this first user.
223

223

00:09:20,010  -->  00:09:22,140
Okay perfect, we get our movies' IDs,
224

224

00:09:22,140  -->  00:09:25,150
and now we're gonna get the same for the ratings,
225

225

00:09:25,150  -->  00:09:27,520
that is we're gonna get all the ratings
226

226

00:09:27,520  -->  00:09:29,260
of that same first user.
227

227

00:09:29,260  -->  00:09:31,050
And so this is going to be very simple
228

228

00:09:31,050  -->  00:09:32,530
now that we get how it works.
229

229

00:09:32,530  -->  00:09:35,670
We're just gonna take this line here,
230

230

00:09:35,670  -->  00:09:39,010
copy it then paste it below.
231

231

00:09:39,010  -->  00:09:40,940
And here instead of id_movies,
232

232

00:09:40,940  -->  00:09:42,800
we'll create id_ratings.
233

233

00:09:44,080  -->  00:09:45,460
And so here that's the same.
234

234

00:09:45,460  -->  00:09:48,130
We wanna take all the ratings of the training set,
235

235

00:09:48,130  -->  00:09:50,380
and the ratings in the training set
236

236

00:09:50,380  -->  00:09:51,800
are in the third column,
237

237

00:09:51,800  -->  00:09:53,150
that is index two.
238

238

00:09:53,150  -->  00:09:56,900
So here we need to replace one by two.
239

239

00:09:56,900  -->  00:09:59,980
So we're taking all the ratings from the training set
240

240

00:09:59,980  -->  00:10:02,970
such that the first column is equal to one.
241

241

00:10:02,970  -->  00:10:05,230
And so this will get us all the ratings
242

242

00:10:05,230  -->  00:10:07,070
given by this first user.
243

243

00:10:07,070  -->  00:10:11,660
Okay and now we have what we need to create this first list,
244

244

00:10:11,660  -->  00:10:14,100
that is the list of the ratings of the first user.
245

245

00:10:14,100  -->  00:10:15,900
But be careful, this is not this one,
246

246

00:10:15,900  -->  00:10:17,520
because the one we would like to get
247

247

00:10:17,520  -->  00:10:20,450
is not only the ratings of the movies that the user rated,
248

248

00:10:20,450  -->  00:10:23,540
but also the zeros when the user didn't rate the movie.
249

249

00:10:23,540  -->  00:10:25,460
So what we exactly want to create right now
250

250

00:10:25,460  -->  00:10:29,440
is this list of 1,682 elements
251

251

00:10:29,440  -->  00:10:30,750
where the elements of this list
252

252

00:10:30,750  -->  00:10:33,610
corresponds to 1,682 movies.
253

253

00:10:33,610  -->  00:10:34,970
And for each of the movie,
254

254

00:10:34,970  -->  00:10:36,710
we get the rating of the movie
255

255

00:10:36,710  -->  00:10:38,290
if the user rated the movie,
256

256

00:10:38,290  -->  00:10:41,010
and a zero if the user didn't rate the movie.
257

257

00:10:41,010  -->  00:10:42,690
So that's what we wanna create right now.
258

258

00:10:42,690  -->  00:10:45,060
And so far with id_ratings
259

259

00:10:45,060  -->  00:10:46,600
we only have the ratings of the movies
260

260

00:10:46,600  -->  00:10:48,150
that the user rated.
261

261

00:10:48,150  -->  00:10:49,670
So what do we have to do right now?
262

262

00:10:49,670  -->  00:10:54,670
Well, we have to create this new list of 1,682 elements.
263

263

00:10:54,780  -->  00:10:58,380
And we are going to initialize it as a list of zeros.
264

264

00:10:58,380  -->  00:11:03,380
You know we will initialize it as a list of 1,682 zeros.
265

265

00:11:03,610  -->  00:11:05,180
And then what we're gonna do is that
266

266

00:11:05,180  -->  00:11:07,550
for the movies that the user rated,
267

267

00:11:07,550  -->  00:11:11,370
we will replace the zero by the rating for that movie,
268

268

00:11:11,370  -->  00:11:13,560
the rating of that movie by the user.
269

269

00:11:13,560  -->  00:11:14,393
So let's do this.
270

270

00:11:14,393  -->  00:11:18,910
Let's initialize this list of 1,682 movies,
271

271

00:11:18,910  -->  00:11:22,900
and so we're gonna call this list ratings equals,
272

272

00:11:22,900  -->  00:11:27,900
and to initialize such a list of 1,682 zeros,
273

273

00:11:28,470  -->  00:11:33,380
we're gonna use Numpy which has a shortcut np then dot,
274

274

00:11:33,380  -->  00:11:35,560
and then we're gonna use this very practical function
275

275

00:11:35,560  -->  00:11:39,010
that is called zeros and parenthesis,
276

276

00:11:39,010  -->  00:11:41,550
and inside this parenthesis we just need to put
277

277

00:11:41,550  -->  00:11:44,230
the number of zeros we want to have in that list.
278

278

00:11:44,230  -->  00:11:45,290
And so what is it?
279

279

00:11:45,290  -->  00:11:49,810
That is 1,682 and that is nb_movies.
280

280

00:11:49,810  -->  00:11:52,087
So here we input nb_movies.
281

281

00:11:54,240  -->  00:11:56,560
Here we go, that's taking shape.
282

282

00:11:56,560  -->  00:11:59,630
And so now what we have to do is replace the zeros
283

283

00:11:59,630  -->  00:12:02,570
by the ratings for the movies that the user rated.
284

284

00:12:02,570  -->  00:12:03,850
So how do we do that?
285

285

00:12:03,850  -->  00:12:05,250
Well, there is a trick here.
286

286

00:12:05,250  -->  00:12:07,280
Try to guess what I'm gonna code next.
287

287

00:12:07,280  -->  00:12:10,900
Well, first of course we need to take our ratings,
288

288

00:12:10,900  -->  00:12:12,240
and now what do we do?
289

289

00:12:12,240  -->  00:12:13,517
So we just need to replace
290

290

00:12:13,517  -->  00:12:15,270
the zeros by the real ratings,
291

291

00:12:15,270  -->  00:12:16,690
when rating that was.
292

292

00:12:16,690  -->  00:12:18,160
So we're gonna try to access
293

293

00:12:18,160  -->  00:12:21,210
the indexes of the ratings that exist.
294

294

00:12:21,210  -->  00:12:23,610
So I'm gonna add here some brackets,
295

295

00:12:23,610  -->  00:12:24,910
and inside these brackets,
296

296

00:12:24,910  -->  00:12:26,660
we will get the indexes
297

297

00:12:26,660  -->  00:12:28,720
of the movies that were rated.
298

298

00:12:28,720  -->  00:12:30,920
And so what are these indices?
299

299

00:12:30,920  -->  00:12:34,240
Well, the good news is that we already have them,
300

300

00:12:34,240  -->  00:12:38,230
because that's exactly id_movies that we created here.
301

301

00:12:38,230  -->  00:12:40,890
That's why we had to create id_movies here.
302

302

00:12:40,890  -->  00:12:43,690
So this id_movies contains all the indexes
303

303

00:12:43,690  -->  00:12:45,560
of the movies that were rated,
304

304

00:12:45,560  -->  00:12:46,920
and so that's exactly what we want.
305

305

00:12:46,920  -->  00:12:50,680
So I'm going to copy these indexes here
306

306

00:12:50,680  -->  00:12:53,480
and based them in our ratings.
307

307

00:12:53,480  -->  00:12:56,080
Okay but now there is another trick.
308

308

00:12:56,080  -->  00:12:57,230
What is the trick?
309

309

00:12:57,230  -->  00:13:01,100
The trick is that indexes in Python start at zero,
310

310

00:13:01,100  -->  00:13:04,230
and our movies' IDs start at one.
311

311

00:13:04,230  -->  00:13:05,580
And so how do we fix this?
312

312

00:13:05,580  -->  00:13:07,410
Try to guess what I'm about to add?
313

313

00:13:07,410  -->  00:13:10,020
Well, we basically need the movies' IDs to start
314

314

00:13:10,020  -->  00:13:12,610
at the same base as the indexes of the ratings,
315

315

00:13:12,610  -->  00:13:17,230
that is zero and therefore we need to add here a minus one.
316

316

00:13:17,230  -->  00:13:18,630
That way for example let's say
317

317

00:13:18,630  -->  00:13:22,220
that the first user rated the first movie,
318

318

00:13:22,220  -->  00:13:25,130
the first movie has its id_movie equal to one,
319

319

00:13:25,130  -->  00:13:27,480
but the first movie will be the first element
320

320

00:13:27,480  -->  00:13:29,360
of this ratings list,
321

321

00:13:29,360  -->  00:13:33,410
and the first element of this ratings list has index zero,
322

322

00:13:33,410  -->  00:13:36,610
and therefore the first movie that has movie ID one,
323

323

00:13:36,610  -->  00:13:40,200
well, to put it in the first position of this ratings list,
324

324

00:13:40,200  -->  00:13:43,610
well, we need to subtract one so that we get one minus one,
325

325

00:13:43,610  -->  00:13:46,070
that is zero, and therefore this first movie
326

326

00:13:46,070  -->  00:13:48,510
will have the index zero in this ratings list,
327

327

00:13:48,510  -->  00:13:50,650
and therefore will go in first position
328

328

00:13:50,650  -->  00:13:52,440
and not in second position.
329

329

00:13:52,440  -->  00:13:54,680
If we didn't have id_movies minus one,
330

330

00:13:54,680  -->  00:13:56,760
well, id_movies would be equal to one,
331

331

00:13:56,760  -->  00:13:59,550
and therefore it will go in the second position,
332

332

00:13:59,550  -->  00:14:00,740
and that wouldn't make sense.
333

333

00:14:00,740  -->  00:14:03,670
So that's a thing we must be very careful in Python,
334

334

00:14:03,670  -->  00:14:06,270
but be relieved that's just practice
335

335

00:14:06,270  -->  00:14:08,700
if it is your first steps in Python.
336

336

00:14:08,700  -->  00:14:10,720
This will get very obvious soon.
337

337

00:14:10,720  -->  00:14:13,000
So id_movies minus one,
338

338

00:14:13,000  -->  00:14:14,610
and then what do we need to do?
339

339

00:14:14,610  -->  00:14:17,380
Well, now that we managed to get
340

340

00:14:17,380  -->  00:14:20,150
the indexes of the movies that were rated
341

341

00:14:20,150  -->  00:14:22,920
in this ratings list of all the movies,
342

342

00:14:22,920  -->  00:14:26,760
well, for these movies we need to give the real ratings,
343

343

00:14:26,760  -->  00:14:28,600
that is we need to put the real rating
344

344

00:14:28,600  -->  00:14:30,920
of these movies in this ratings list.
345

345

00:14:30,920  -->  00:14:33,250
And so what we need to do is add an equal,
346

346

00:14:33,250  -->  00:14:35,950
and since this corresponds to the ratings
347

347

00:14:35,950  -->  00:14:37,650
of the movies that were rated,
348

348

00:14:37,650  -->  00:14:41,140
then this will be equal to the real ratings,
349

349

00:14:41,140  -->  00:14:42,940
and what are the real ratings?
350

350

00:14:42,940  -->  00:14:44,320
Well, double good news,
351

351

00:14:44,320  -->  00:14:46,310
we also already have them
352

352

00:14:46,310  -->  00:14:48,900
because they are in id_ratings here.
353

353

00:14:48,900  -->  00:14:49,733
So here we go.
354

354

00:14:49,733  -->  00:14:51,840
We just need to add the real ratings
355

355

00:14:51,840  -->  00:14:53,410
of the movies that were rated,
356

356

00:14:53,410  -->  00:14:55,100
and that is id_ratings.
357

357

00:14:57,280  -->  00:14:59,910
Alright perfect, we are almost done.
358

358

00:14:59,910  -->  00:15:02,570
Now we managed to create for each user
359

359

00:15:02,570  -->  00:15:04,420
the list of all the ratings
360

360

00:15:04,420  -->  00:15:08,300
including the zeros for the movies that were not rated.
361

361

00:15:08,300  -->  00:15:11,240
Perfect, and so now we have only one thing to do left,
362

362

00:15:11,240  -->  00:15:14,920
and that is to add this list of ratings here
363

363

00:15:14,920  -->  00:15:18,653
corresponding to one user to this huge list
364

364

00:15:18,653  -->  00:15:20,720
that will contain all the different lists
365

365

00:15:20,720  -->  00:15:22,300
for all the different users.
366

366

00:15:22,300  -->  00:15:23,930
And therefore what we need to do
367

367

00:15:23,930  -->  00:15:25,783
is to take this whole list,
368

368

00:15:25,783  -->  00:15:28,690
new_data, underscore data,
369

369

00:15:28,690  -->  00:15:30,200
and now what we're gonna do is take
370

370

00:15:30,200  -->  00:15:31,830
another very practical function
371

371

00:15:31,830  -->  00:15:34,490
that is the append function,
372

372

00:15:34,490  -->  00:15:38,960
and that will append this list of ratings here for one user,
373

373

00:15:38,960  -->  00:15:41,240
for the user of the loop, id_users,
374

374

00:15:41,240  -->  00:15:44,490
to this whole new_data list.
375

375

00:15:44,490  -->  00:15:46,080
So how do we do that?
376

376

00:15:46,080  -->  00:15:47,690
Well, we add a dot here,
377

377

00:15:47,690  -->  00:15:50,530
and then we use the append function,
378

378

00:15:50,530  -->  00:15:52,300
and inside the parenthesis
379

379

00:15:52,300  -->  00:15:55,400
we're gonna put this whole list of ratings
380

380

00:15:55,400  -->  00:15:57,110
for this one particular user.
381

381

00:15:57,110  -->  00:15:59,050
And to make sure this is a list,
382

382

00:15:59,050  -->  00:16:02,950
we need to put ratings into the list function
383

383

00:16:02,950  -->  00:16:04,830
just to make sure it's a list.
384

384

00:16:04,830  -->  00:16:07,120
Alright because we really need a list of lists,
385

385

00:16:07,120  -->  00:16:09,373
because that's exactly what Torch expects.
386

386

00:16:10,640  -->  00:16:12,890
Alright perfect and now we are done.
387

387

00:16:12,890  -->  00:16:13,940
This function is over.
388

388

00:16:13,940  -->  00:16:15,460
I hope this was not too hard.
389

389

00:16:15,460  -->  00:16:17,560
We had a lot of mechanism to understand
390

390

00:16:17,560  -->  00:16:19,220
especially with the indexes,
391

391

00:16:19,220  -->  00:16:21,250
but now it's done, congratulations.
392

392

00:16:21,250  -->  00:16:23,940
Our function is ready and now we are going to apply it
393

393

00:16:23,940  -->  00:16:27,100
to our training set and our test set.
394

394

00:16:27,100  -->  00:16:29,590
But before of course we're going to add here
395

395

00:16:29,590  -->  00:16:31,970
the final line to return what we want,
396

396

00:16:31,970  -->  00:16:32,830
but that's very simple,
397

397

00:16:32,830  -->  00:16:35,230
we just need to add return,
398

398

00:16:35,230  -->  00:16:37,700
and then what we want to return is the list
399

399

00:16:37,700  -->  00:16:39,400
of all the different lists of ratings,
400

400

00:16:39,400  -->  00:16:43,350
and that is new_data of course.
401

401

00:16:43,350  -->  00:16:46,750
So perfect, now the function is really ready.
402

402

00:16:46,750  -->  00:16:48,940
And so now we are going to apply this function
403

403

00:16:48,940  -->  00:16:51,350
to the training set and the test set.
404

404

00:16:51,350  -->  00:16:53,710
And to do this, there is nothing more simple,
405

405

00:16:53,710  -->  00:16:55,863
we just need to take our training set,
406

406

00:16:56,970  -->  00:17:00,880
and then we're gonna use the convert function on it,
407

407

00:17:00,880  -->  00:17:02,030
and what we do need to input?
408

408

00:17:02,030  -->  00:17:04,100
We'll, that's of course the training set,
409

409

00:17:04,100  -->  00:17:06,670
the old version of the training set,
410

410

00:17:06,670  -->  00:17:09,010
that is this version right here.
411

411

00:17:09,010  -->  00:17:10,420
And this version right here
412

412

00:17:10,420  -->  00:17:12,950
is going to become this new version
413

413

00:17:12,950  -->  00:17:15,030
that is an array with the users in the lines
414

414

00:17:15,030  -->  00:17:17,020
and the movies in the columns.
415

415

00:17:17,020  -->  00:17:20,020
So here we paste training_set.
416

416

00:17:20,020  -->  00:17:22,210
And now we're gonna do the same for the test set.
417

417

00:17:22,210  -->  00:17:25,810
So I'm copying this line and pasting that here.
418

418

00:17:25,810  -->  00:17:29,359
And we're gonna replace training_set by test_set,
419

419

00:17:29,359  -->  00:17:32,713
and training_set again by test_set.
420

420

00:17:33,930  -->  00:17:35,760
Alright here we go, let's do this.
421

421

00:17:35,760  -->  00:17:38,910
Let's convert our training set and our test set.
422

422

00:17:38,910  -->  00:17:42,920
So first what I'm gonna do is select the whole function
423

423

00:17:42,920  -->  00:17:44,540
just to define the function.
424

424

00:17:44,540  -->  00:17:48,460
And so I'm going to execute, here we go,
425

425

00:17:48,460  -->  00:17:50,967
and now let's convert the training set
426

426

00:17:50,967  -->  00:17:52,630
and the test set one by one.
427

427

00:17:52,630  -->  00:17:54,890
So we're gonna start with the training set,
428

428

00:17:54,890  -->  00:17:56,590
and just to check what we expect
429

429

00:17:56,590  -->  00:17:58,100
because we're gonna lose
430

430

00:17:58,100  -->  00:17:59,940
the old version of the training set,
431

431

00:17:59,940  -->  00:18:01,370
well, let's check that we will get
432

432

00:18:01,370  -->  00:18:02,820
the right values for the first list,
433

433

00:18:02,820  -->  00:18:04,670
that is for the first user.
434

434

00:18:04,670  -->  00:18:06,240
Well, as you understood,
435

435

00:18:06,240  -->  00:18:07,710
the first list will contain
436

436

00:18:07,710  -->  00:18:10,000
the list of ratings of the first user,
437

437

00:18:10,000  -->  00:18:11,590
that is this user one here,
438

438

00:18:11,590  -->  00:18:13,550
including the zeros for the movies
439

439

00:18:13,550  -->  00:18:14,980
that this user didn't rate.
440

440

00:18:14,980  -->  00:18:16,500
So here we can see that since
441

441

00:18:16,500  -->  00:18:18,610
the movies' IDs start at two,
442

442

00:18:18,610  -->  00:18:20,130
well, that means that the user
443

443

00:18:20,130  -->  00:18:23,150
didn't rate the first movie, of movie ID one.
444

444

00:18:23,150  -->  00:18:25,110
And therefore the first element
445

445

00:18:25,110  -->  00:18:27,580
of the first list should be a zero.
446

446

00:18:27,580  -->  00:18:28,710
And then the second element
447

447

00:18:28,710  -->  00:18:30,900
will be the rating of the second movie,
448

448

00:18:30,900  -->  00:18:33,343
and the rating of the second movie is three.
449

449

00:18:34,454  -->  00:18:37,590
So the second element of the first list should be three.
450

450

00:18:37,590  -->  00:18:39,820
And then the third element of this first list
451

451

00:18:39,820  -->  00:18:42,210
will be the rating of movie number three
452

452

00:18:42,210  -->  00:18:44,230
because the user rated the movie number three,
453

453

00:18:44,230  -->  00:18:47,200
and the rating of the movie number three is four.
454

454

00:18:47,200  -->  00:18:50,610
So the third element of this first list should be four.
455

455

00:18:50,610  -->  00:18:53,880
So let's just check that in the first list,
456

456

00:18:53,880  -->  00:18:57,880
the three first elements will be zero, three, and four,
457

457

00:18:57,880  -->  00:19:00,120
and then we'll just trust what happens for the rest.
458

458

00:19:00,120  -->  00:19:02,440
So I'm gonna press OK here,
459

459

00:19:02,440  -->  00:19:05,580
and I'm going to select this line,
460

460

00:19:05,580  -->  00:19:08,010
and here we go, let's hope that it's going to work.
461

461

00:19:08,010  -->  00:19:08,843
Here we go.
462

462

00:19:08,843  -->  00:19:11,230
Okay, so first we don't get an error, that's great.
463

463

00:19:11,230  -->  00:19:16,230
Then as you can see, training_set is a list of 943 lists.
464

464

00:19:16,870  -->  00:19:19,490
You're gonna see that these 943 elements
465

465

00:19:19,490  -->  00:19:20,950
are going to be lists,
466

466

00:19:20,950  -->  00:19:22,750
so that's another good sign.
467

467

00:19:22,750  -->  00:19:25,000
And so now let's open this training set.
468

468

00:19:25,000  -->  00:19:26,920
Here it is, and as you can see,
469

469

00:19:26,920  -->  00:19:31,920
this huge list contains 943 horizontal lists,
470

470

00:19:32,220  -->  00:19:34,560
so each of these 943 lists
471

471

00:19:34,560  -->  00:19:37,010
corresponds to each user of our database,
472

472

00:19:37,010  -->  00:19:38,500
so this first list corresponds
473

473

00:19:38,500  -->  00:19:40,510
to the ratings of the first user.
474

474

00:19:40,510  -->  00:19:42,480
And so we check that for the first movie,
475

475

00:19:42,480  -->  00:19:44,320
the second movie, and the third movie,
476

476

00:19:44,320  -->  00:19:49,270
the ratings are, as expected, zero, three, and four.
477

477

00:19:49,270  -->  00:19:50,900
Perfect, we did it.
478

478

00:19:50,900  -->  00:19:53,220
Alright and then that's the same for the other users.
479

479

00:19:53,220  -->  00:19:54,840
For each user we get the ratings
480

480

00:19:54,840  -->  00:19:57,240
of all the movies of the database,
481

481

00:19:57,240  -->  00:19:59,640
and we get a zero when the movie wasn't rated,
482

482

00:19:59,640  -->  00:20:02,590
and the real rating when the user rated the movie.
483

483

00:20:02,590  -->  00:20:04,660
Okay great so that works.
484

484

00:20:04,660  -->  00:20:07,920
And now we're going to do the same for the test set.
485

485

00:20:07,920  -->  00:20:09,410
And so we're gonna trust this.
486

486

00:20:09,410  -->  00:20:13,600
We are going to select this line as well and execute.
487

487

00:20:13,600  -->  00:20:14,433
And here we go.
488

488

00:20:14,433  -->  00:20:16,970
We have our new version of the test set
489

489

00:20:16,970  -->  00:20:20,270
and it's still a list of 943 elements,
490

490

00:20:20,270  -->  00:20:24,630
and we get the same thing that is a list of lists
491

491

00:20:24,630  -->  00:20:26,230
with all the ratings inside
492

492

00:20:26,230  -->  00:20:28,070
including the zeros for the movies
493

493

00:20:28,070  -->  00:20:30,900
that the users of the test set didn't rate.
494

494

00:20:30,900  -->  00:20:33,540
Excellent, so I'm going to close this.
495

495

00:20:33,540  -->  00:20:35,200
And that's it for this tutorial.
496

496

00:20:35,200  -->  00:20:37,910
Now the next tutorial is going to be much more simple
497

497

00:20:37,910  -->  00:20:40,130
because basically what we'll do is convert
498

498

00:20:40,130  -->  00:20:43,100
this list of lists into Torch Tensors
499

499

00:20:43,100  -->  00:20:44,800
because that's exactly now
500

500

00:20:44,800  -->  00:20:46,750
that we're starting with Torch.
501

501

00:20:46,750  -->  00:20:48,720
So I'm super excited to start.
502

502

00:20:48,720  -->  00:20:51,360
We will create very soon the architecture of our network.
503

503

00:20:51,360  -->  00:20:53,160
And until then, enjoy deep learning.
