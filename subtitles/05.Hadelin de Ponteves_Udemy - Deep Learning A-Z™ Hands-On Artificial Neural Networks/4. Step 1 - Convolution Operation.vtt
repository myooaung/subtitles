WEBVTT
1
1

00:00:00.570  -->  00:00:01.870
<v Male Speaker>Hello and welcome back to the course</v>
2

2

00:00:01.870  -->  00:00:03.070
on Deep Learning.
3

3

00:00:03.070  -->  00:00:04.530
In the previous tutorial we found out
4

4

00:00:04.530  -->  00:00:07.220
what Convolutional Neural Networks were all about
5

5

00:00:07.220  -->  00:00:10.990
and today we are going to dive into Step 1 Convolution.
6

6

00:00:10.990  -->  00:00:14.900
So, this is the Convolution function.
7

7

00:00:14.900  -->  00:00:17.040
I know we tried to stay away from mathematics
8

8

00:00:17.040  -->  00:00:18.470
and keep things intuitive,
9

9

00:00:18.470  -->  00:00:21.390
but I couldn't help but share this formula for you
10

10

00:00:21.390  -->  00:00:23.070
because it is so simple.
11

11

00:00:23.070  -->  00:00:26.160
A Convolution is basically a combined integration
12

12

00:00:26.160  -->  00:00:27.220
of two functions,
13

13

00:00:27.220  -->  00:00:31.380
and it shows you how one function modifies the other
14

14

00:00:31.380  -->  00:00:32.630
modifies the shape of the other,
15

15

00:00:32.630  -->  00:00:35.170
and if you've done any signal processing
16

16

00:00:35.170  -->  00:00:36.290
or electrical engineering
17

17

00:00:36.290  -->  00:00:39.440
or a profession where signal processing is required
18

18

00:00:39.440  -->  00:00:41.430
you would have inevitably come across
19

19

00:00:41.430  -->  00:00:43.740
the Convolution function, it is quite popular.
20

20

00:00:43.740  -->  00:00:47.900
Now once again we're going to keep the mathematics light
21

21

00:00:47.900  -->  00:00:49.390
or keep them separate,
22

22

00:00:49.390  -->  00:00:52.870
and if you'd like to get into the math behind
23

23

00:00:52.870  -->  00:00:54.840
the Convolutional Neural Networks
24

24

00:00:54.840  -->  00:00:57.230
a great additional read is
25

25

00:00:57.230  -->  00:01:01.400
Introduction to Convolutional Neural Networks by Jianxin Wu
26

26

00:01:02.260  -->  00:01:05.710
who is a professor at the Nanjing University in China.
27

27

00:01:05.710  -->  00:01:08.740
This paper was published literally days ago
28

28

00:01:08.740  -->  00:01:12.700
like five or six days ago, and it is oriented specifically
29

29

00:01:12.700  -->  00:01:13.940
at people who are starting out
30

30

00:01:13.940  -->  00:01:16.110
and beginners who are getting to know
31

31

00:01:16.110  -->  00:01:17.330
Convolutional Neural Networks
32

32

00:01:17.330  -->  00:01:20.060
so the mathematics there should be accessible.
33

33

00:01:20.060  -->  00:01:23.630
I actually emailed Professor Jianxin Wu
34

34

00:01:23.630  -->  00:01:26.440
and yeah he said his whole goal is
35

35

00:01:26.440  -->  00:01:28.170
to make,
36

36

00:01:28.170  -->  00:01:30.560
break the complex things down
37

37

00:01:30.560  -->  00:01:33.860
so that people who are new to this field can understand.
38

38

00:01:33.860  -->  00:01:37.240
Also he mentioned that he's got some materials available
39

39

00:01:37.240  -->  00:01:38.880
on his homepage.
40

40

00:01:38.880  -->  00:01:42.140
So if you, in the URL, if you just remove the last two parts
41

41

00:01:42.140  -->  00:01:46.560
and you just go to like slash, w, j, x to that part
42

42

00:01:46.560  -->  00:01:47.870
that's his homepage
43

43

00:01:47.870  -->  00:01:50.760
and you'll be able to find more additional tutorials
44

44

00:01:50.760  -->  00:01:53.320
and materials which haven't been published as papers,
45

45

00:01:53.320  -->  00:01:55.820
but he uses them in his tutorials
46

46

00:01:55.820  -->  00:01:57.860
so you might find those useful.
47

47

00:01:57.860  -->  00:02:01.430
So browse around there if you'd like to get an introduction
48

48

00:02:01.430  -->  00:02:04.710
into the mathematics behind Convolutional Neural Networks
49

49

00:02:04.710  -->  00:02:08.460
and kind of build a solid base around that area.
50

50

00:02:08.460  -->  00:02:09.880
But, we're going to move on
51

51

00:02:09.880  -->  00:02:12.460
and we're going to talk about the Convolution.
52

52

00:02:12.460  -->  00:02:16.410
So, what is a Convolution in intuitive terms?
53

53

00:02:16.410  -->  00:02:18.950
Here on the left we have an Input Image as we discussed
54

54

00:02:18.950  -->  00:02:21.610
that's how we're going to look at images just 1s and 0s
55

55

00:02:21.610  -->  00:02:24.950
to simplify things, and you can see the smiley face there.
56

56

00:02:24.950  -->  00:02:26.280
Then we've got a Feature Detector.
57

57

00:02:26.280  -->  00:02:28.730
So Feature Detectors are three-by-three matrix.
58

58

00:02:28.730  -->  00:02:30.060
Does it have to be three-by-three?
59

59

00:02:30.060  -->  00:02:34.700
No it doesn't, Alex-Net I think uses seven-by-seven
60

60

00:02:35.750  -->  00:02:38.610
and then some other, one of those other famous ones
61

61

00:02:38.610  -->  00:02:40.660
uses like five-by-five Feature Detectors.
62

62

00:02:41.550  -->  00:02:42.630
They can be different,
63

63

00:02:42.630  -->  00:02:45.930
but usually you'll see that they are three-by-three
64

64

00:02:45.930  -->  00:02:49.290
and there are, you know, reasons to make them three-by-three
65

65

00:02:49.290  -->  00:02:52.080
so we're going to stick to the conventional way
66

66

00:02:52.080  -->  00:02:54.530
having a three-by-three Feature Detector.
67

67

00:02:54.530  -->  00:02:56.380
Also the Feature Detector's called,
68

68

00:02:56.380  -->  00:02:58.650
these are important terms because you might come across them
69

69

00:02:58.650  -->  00:03:01.680
there are many different terms for the Feature Detector
70

70

00:03:01.680  -->  00:03:04.030
but the most common ones are Feature Detector
71

71

00:03:04.030  -->  00:03:06.940
or you might hear it being called Kernel
72

72

00:03:06.940  -->  00:03:09.420
or you might hear it being called Filter.
73

73

00:03:09.420  -->  00:03:11.440
So in this course we are going to be using
74

74

00:03:11.440  -->  00:03:14.340
either Filter or Feature Detector interchangeably,
75

75

00:03:14.340  -->  00:03:16.950
but just bear in mind that it has those names.
76

76

00:03:16.950  -->  00:03:21.490
And a Convolutional operation is signified by an X
77

77

00:03:21.490  -->  00:03:25.670
in a circle just as you saw on the formulas before.
78

78

00:03:25.670  -->  00:03:29.730
And here what happens is on an intuitive level,
79

79

00:03:29.730  -->  00:03:31.680
or just to think of it
80

80

00:03:31.680  -->  00:03:33.660
in terms of what is actually happening in the background
81

81

00:03:33.660  -->  00:03:34.910
rather than the mathematics,
82

82

00:03:34.910  -->  00:03:38.260
well you take this Feature Detector, or Filter,
83

83

00:03:38.260  -->  00:03:40.610
and you put it on your image like you see on the left
84

84

00:03:40.610  -->  00:03:44.410
so you cover the, for instance in this case,
85

85

00:03:44.410  -->  00:03:48.310
the top left-corner, the 9 pixels in the top left-corner
86

86

00:03:48.310  -->  00:03:52.016
and you basically multiply
87

87

00:03:52.016  -->  00:03:54.020
each value by each value
88

88

00:03:54.020  -->  00:03:57.280
so respective values, so the top 0 by,
89

89

00:03:57.280  -->  00:04:01.590
the top-left value by the top-left value, then basically
90

90

00:04:01.590  -->  00:04:03.720
position number 1-1 by position number 1-1
91

91

00:04:04.990  -->  00:04:08.600
or 0-1 by 0-1, 0-2 by 0-2 and so on.
92

92

00:04:08.600  -->  00:04:13.310
So it's element-wise multiplicational these matrices.
93

93

00:04:13.310  -->  00:04:14.390
And then you add up the results.
94

94

00:04:14.390  -->  00:04:16.600
So in this case nothing matches up,
95

95

00:04:16.600  -->  00:04:19.910
so it's always either 0 by 0, or 0 by 1
96

96

00:04:19.910  -->  00:04:21.450
so the result is 0.
97

97

00:04:21.450  -->  00:04:23.860
Here, you can see that one of them matched up
98

98

00:04:23.860  -->  00:04:27.680
the one on the left matched up and therefore we've got a 1.
99

99

00:04:27.680  -->  00:04:29.700
Here nothing matched up, nothing matched up,
100

100

00:04:29.700  -->  00:04:32.630
nothing matched up, here we move onto the next row.
101

101

00:04:32.630  -->  00:04:37.530
And the step at which we're moving this whole Filter
102

102

00:04:37.530  -->  00:04:38.530
is called the stride.
103

103

00:04:38.530  -->  00:04:40.440
So here we have a stride of 1 pixel
104

104

00:04:40.440  -->  00:04:42.180
so here you can see again something matched up
105

105

00:04:42.180  -->  00:04:44.070
the bottom right corner matched up.
106

106

00:04:44.070  -->  00:04:48.210
The stride, bottom one in the middle matched up.
107

107

00:04:48.210  -->  00:04:50.890
Here top right one matched up, then nothing matched up.
108

108

00:04:50.890  -->  00:04:54.230
The stride is 1, you can change the stride
109

109

00:04:54.230  -->  00:04:57.270
you can make it one, 2, you can make it 3
110

110

00:04:57.270  -->  00:04:58.343
whatever you like.
111

111

00:04:59.700  -->  00:05:02.720
Conventionally, the one that works well is usually at 2,
112

112

00:05:02.720  -->  00:05:04.470
so that's what people stick to
113

113

00:05:04.470  -->  00:05:07.500
and we'll talk about what the stride is
114

114

00:05:07.500  -->  00:05:09.420
towards the end of this tutorial.
115

115

00:05:09.420  -->  00:05:12.230
So here we've got, we're matching up,
116

116

00:05:12.230  -->  00:05:13.550
oh here you can see we've got a two,
117

117

00:05:13.550  -->  00:05:15.650
because two of them matched up.
118

118

00:05:15.650  -->  00:05:18.170
And so on, and so on, so on, and there we go
119

119

00:05:18.170  -->  00:05:19.970
there's another one that matched up.
120

120

00:05:21.300  -->  00:05:24.740
There we go, and then we're done.
121

121

00:05:24.740  -->  00:05:27.720
So, what have we created,
122

122

00:05:27.720  -->  00:05:28.553
right?
123

123

00:05:28.553  -->  00:05:31.910
A couple of important things here.
124

124

00:05:31.910  -->  00:05:35.200
The image on the right is called a Feature Map.
125

125

00:05:35.200  -->  00:05:36.570
Also has several terms,
126

126

00:05:36.570  -->  00:05:40.900
it also can be called sometimes a Convolved Feature.
127

127

00:05:40.900  -->  00:05:44.100
So when you apply Convolution Operator to something
128

128

00:05:44.100  -->  00:05:46.943
it doesn't become convoluted it becomes convolved,
129

129

00:05:47.783  -->  00:05:49.650
and yeah sometimes I like
130

130

00:05:49.650  -->  00:05:51.570
I think to myself in the wrong way,
131

131

00:05:51.570  -->  00:05:54.540
but it's the correct term is convolved.
132

132

00:05:54.540  -->  00:05:55.690
It's a Convolved Feature
133

133

00:05:55.690  -->  00:05:57.960
or it can also be called the Activation Map,
134

134

00:05:57.960  -->  00:05:59.810
but we're going to be calling it a Feature Map
135

135

00:05:59.810  -->  00:06:00.643
in this course.
136

136

00:06:00.643  -->  00:06:03.380
So it can be called any one of those things.
137

137

00:06:03.380  -->  00:06:06.220
And, what have we done here?
138

138

00:06:06.220  -->  00:06:09.810
Well, as you can see we've reduced the size of the image
139

139

00:06:09.810  -->  00:06:10.643
that's number one,
140

140

00:06:10.643  -->  00:06:12.620
and that's the important thing I wanted to mention
141

141

00:06:12.620  -->  00:06:15.777
about your input image and the Feature Detector
142

142

00:06:15.777  -->  00:06:18.610
and the stride, right, that if you have a stride of 1
143

143

00:06:18.610  -->  00:06:19.940
you can see the image reduced a bit.
144

144

00:06:19.940  -->  00:06:21.230
But if you have a stride of 2
145

145

00:06:21.230  -->  00:06:23.120
the image is going to reduce more
146

146

00:06:23.120  -->  00:06:25.490
so the Feature Map is going to be even smaller,
147

147

00:06:25.490  -->  00:06:30.490
and that's a very important function of the Feature Detector
148

148

00:06:30.870  -->  00:06:32.930
of this whole Convolution step
149

149

00:06:32.930  -->  00:06:36.000
is to make the image smaller
150

150

00:06:36.000  -->  00:06:38.970
because it'll be easier to process it
151

151

00:06:40.060  -->  00:06:42.123
and it'll be just faster,
152

152

00:06:46.043  -->  00:06:46.876
it will be just faster
153

153

00:06:46.876  -->  00:06:51.800
because imagine, like here we've got a, what, a 7-by-7 image
154

154

00:06:51.800  -->  00:06:55.640
but imagine if you have a proper photo, right,
155

155

00:06:55.640  -->  00:06:59.217
or you have like a 256-by-256 pixel image
156

156

00:06:59.217  -->  00:07:04.217
that's a huge number of pixels, like 256 squared.
157

157

00:07:04.310  -->  00:07:07.140
Or like, let's say, you have 300-by-300 pixels,
158

158

00:07:07.140  -->  00:07:09.860
so we don't get confused with the RGB 256,
159

159

00:07:09.860  -->  00:07:12.860
let's just say like we have a 300-by-300 image
160

160

00:07:12.860  -->  00:07:14.670
in terms of size and pixels.
161

161

00:07:14.670  -->  00:07:17.340
Then you have 300 squared number of pixels
162

162

00:07:17.340  -->  00:07:20.800
that's a huge number, and therefore Feature Detectors
163

163

00:07:21.940  -->  00:07:24.430
will reduce the size of the image
164

164

00:07:24.430  -->  00:07:27.660
and therefore stride of 2 has actually been official.
165

165

00:07:27.660  -->  00:07:29.880
But then the question is do we lose information?
166

166

00:07:29.880  -->  00:07:31.840
Are we losing information
167

167

00:07:31.840  -->  00:07:34.430
when we're applying the Feature Detector?
168

168

00:07:34.430  -->  00:07:37.200
Well, some information we are losing, of course,
169

169

00:07:37.200  -->  00:07:40.610
because we have less values in our resulting matrix
170

170

00:07:40.610  -->  00:07:43.270
but at the same time the purpose of the Feature Detector
171

171

00:07:43.270  -->  00:07:44.810
is to detect certain features,
172

172

00:07:44.810  -->  00:07:48.500
certain parts of the image that are integral.
173

173

00:07:48.500  -->  00:07:50.950
And so, for instance, if you think about it this way
174

174

00:07:50.950  -->  00:07:53.890
like the Feature Detector has a certain pattern on it.
175

175

00:07:53.890  -->  00:07:56.250
The highest number in your Feature Map
176

176

00:07:56.250  -->  00:07:57.860
is when that pattern matches up.
177

177

00:07:57.860  -->  00:08:00.460
In fact the highest number you can get is,
178

178

00:08:00.460  -->  00:08:02.140
in our simplified example,
179

179

00:08:02.140  -->  00:08:05.560
is when the feature matches exactly.
180

180

00:08:05.560  -->  00:08:07.850
And you can see with that number 4
181

181

00:08:07.850  -->  00:08:10.450
we have in our Feature Map, that's exactly
182

182

00:08:10.450  -->  00:08:12.060
so if you look over here,
183

183

00:08:12.060  -->  00:08:15.680
that's exactly where this Feature Detector
184

184

00:08:15.680  -->  00:08:19.010
because there's only four 1s in it, matched perfectly.
185

185

00:08:19.010  -->  00:08:21.380
So you can see this part over here,
186

186

00:08:21.380  -->  00:08:23.310
so the feature was detected here.
187

187

00:08:23.310  -->  00:08:27.200
And as we discussed at the very start of this section
188

188

00:08:28.940  -->  00:08:33.000
features is how we see things, is how we recognise things.
189

189

00:08:33.000  -->  00:08:37.320
We don't look at every single pixel, so to speak,
190

190

00:08:37.320  -->  00:08:40.290
in what we see on an image or in real life
191

191

00:08:40.290  -->  00:08:42.690
we don't look at every single pixel we look at features
192

192

00:08:42.690  -->  00:08:46.503
we look at the nose, the hat, the feather,
193

193

00:08:47.820  -->  00:08:49.790
the eyes under
194

194

00:08:49.790  -->  00:08:53.173
or the little black marks under the cheetah's eyes
195

195

00:08:53.173  -->  00:08:55.570
to distinguish it between a cheetah and a leopard,
196

196

00:08:55.570  -->  00:08:58.110
or the shape of the train
197

197

00:08:58.110  -->  00:09:00.300
to distinguish it between a bullet train and normal train.
198

198

00:09:00.300  -->  00:09:02.520
And so on, so we don't look at everything
199

199

00:09:02.520  -->  00:09:04.560
we look at features and that's what we're preserving,
200

200

00:09:04.560  -->  00:09:08.420
and that's what the Feature Map helps us preserve, actually
201

201

00:09:08.420  -->  00:09:12.500
that's what it, it allows us to bring forward
202

202

00:09:12.500  -->  00:09:15.440
and get rid of all the unnecessary things that
203

203

00:09:15.440  -->  00:09:16.773
even as humans we don't process,
204

204

00:09:16.773  -->  00:09:21.460
there's so much information going into your eyes
205

205

00:09:21.460  -->  00:09:24.150
at any given time, like gigabytes of information
206

206

00:09:24.150  -->  00:09:26.850
if you look at every single dot,
207

207

00:09:26.850  -->  00:09:28.180
if not terabytes of information
208

208

00:09:28.180  -->  00:09:30.340
going into your eyes per second.
209

209

00:09:30.340  -->  00:09:32.650
And still, we're able to process that
210

210

00:09:32.650  -->  00:09:35.040
because we get rid of what is unnecessary
211

211

00:09:35.040  -->  00:09:36.540
we only focus on the important features,
212

212

00:09:36.540  -->  00:09:38.840
features that are important to us.
213

213

00:09:38.840  -->  00:09:42.150
And that is exactly what the feature map does.
214

214

00:09:42.150  -->  00:09:46.200
So now, moving on, this is out Input Image
215

215

00:09:46.200  -->  00:09:49.420
and you, we create a Feature Map.
216

216

00:09:49.420  -->  00:09:50.620
So the front one,
217

217

00:09:50.620  -->  00:09:52.650
let's say the front one is the one we just created,
218

218

00:09:52.650  -->  00:09:54.230
but then how come there is many of them.
219

219

00:09:54.230  -->  00:09:56.870
But we create multiple Feature Maps
220

220

00:09:58.140  -->  00:10:00.510
because we use different filters, right,
221

221

00:10:00.510  -->  00:10:01.920
and that's another way
222

222

00:10:01.920  -->  00:10:03.760
that we preserve lots of the information
223

223

00:10:03.760  -->  00:10:05.760
so we don't just have one Feature Map,
224

224

00:10:05.760  -->  00:10:08.313
we look for certain features and then,
225

225

00:10:09.240  -->  00:10:12.250
or basically the network decides through its training,
226

226

00:10:12.250  -->  00:10:13.300
and this is something we'll discuss
227

227

00:10:13.300  -->  00:10:15.480
towards the end of the section, through its training
228

228

00:10:15.480  -->  00:10:18.840
it decides which features are important
229

229

00:10:18.840  -->  00:10:21.560
for certain types or certain categories
230

230

00:10:21.560  -->  00:10:22.510
and it looks for them,
231

231

00:10:22.510  -->  00:10:24.600
and therefore it'll have different filters.
232

232

00:10:24.600  -->  00:10:26.090
And we'll talk about filters just now.
233

233

00:10:26.090  -->  00:10:27.730
But basically it'll apply these filters,
234

234

00:10:27.730  -->  00:10:31.570
so to get this Feature Map it applied a filter
235

235

00:10:31.570  -->  00:10:32.460
like with the one we saw.
236

236

00:10:32.460  -->  00:10:33.700
But then to get this Feature Map
237

237

00:10:33.700  -->  00:10:34.640
it applied a different filter.
238

238

00:10:34.640  -->  00:10:36.740
To get this Feature Map it applied a different filter.
239

239

00:10:36.740  -->  00:10:37.573
And so on.
240

240

00:10:39.810  -->  00:10:43.510
So basically it just creates these Feature Maps
241

241

00:10:43.510  -->  00:10:45.230
and actually that's why personally
242

242

00:10:45.230  -->  00:10:49.500
I think the term Feature Detector is better than Filter.
243

243

00:10:49.500  -->  00:10:52.860
So remember over here we have this Filter
244

244

00:10:52.860  -->  00:10:54.990
which we also can call a Feature Detector.
245

245

00:10:54.990  -->  00:10:57.690
Well actually the word Feature Detector
246

246

00:10:57.690  -->  00:10:59.400
I think is better suited
247

247

00:10:59.400  -->  00:11:03.330
and the reason for that is that's what the purpose is, right
248

248

00:11:03.330  -->  00:11:06.450
we don't want to just filter our image,
249

249

00:11:06.450  -->  00:11:08.810
but even though that's the same,
250

250

00:11:08.810  -->  00:11:10.130
it's just a question of terminology,
251

251

00:11:10.130  -->  00:11:12.227
but basically we want to detect features alright.
252

252

00:11:12.227  -->  00:11:15.210
In this layer we're going to,
253

253

00:11:15.210  -->  00:11:17.280
or in this Feature Map
254

254

00:11:17.280  -->  00:11:20.200
we've detected where certain features are in the image.
255

255

00:11:20.200  -->  00:11:21.080
In this Feature Map
256

256

00:11:21.080  -->  00:11:23.000
we've detected where certain other features are,
257

257

00:11:23.000  -->  00:11:25.329
where a certain specific feature is located.
258

258

00:11:25.329  -->  00:11:28.210
In this Feature Map we've detected where
259

259

00:11:28.210  -->  00:11:31.310
a certain other feature is located on the image.
260

260

00:11:31.310  -->  00:11:33.300
So that's what we're doing.
261

261

00:11:33.300  -->  00:11:34.550
And let's have a look at a couple of examples,
262

262

00:11:34.550  -->  00:11:37.100
so here we're using,
263

263

00:11:37.100  -->  00:11:40.450
and this is from gimp.org
264

264

00:11:40.450  -->  00:11:45.220
their documentation it's a free kind of tool like paint
265

265

00:11:45.220  -->  00:11:48.610
and you can use it to adjust you images
266

266

00:11:48.610  -->  00:11:49.460
or work with your images
267

267

00:11:49.460  -->  00:11:52.410
but basically they have some valuable examples
268

268

00:11:52.410  -->  00:11:53.490
in their documentation
269

269

00:11:53.490  -->  00:11:57.070
and here they have a picture of the Taj Mahal
270

270

00:11:57.070  -->  00:11:59.760
and you can choose which filter you want to apply.
271

271

00:11:59.760  -->  00:12:01.470
So if you download this program
272

272

00:12:01.470  -->  00:12:03.140
and you upload a photo into it and then
273

273

00:12:03.140  -->  00:12:06.560
you can actually start a Convolution Matrix
274

274

00:12:06.560  -->  00:12:10.810
and apply filters and you will see that these things,
275

275

00:12:10.810  -->  00:12:12.510
these Convolution Matrices actually applied
276

276

00:12:12.510  -->  00:12:15.150
in image processing and designed and so on.
277

277

00:12:15.150  -->  00:12:16.824
So let's have a look at what we get.
278

278

00:12:16.824  -->  00:12:19.410
So if we apply this filter, 5 in the middle,
279

279

00:12:19.410  -->  00:12:21.560
minus 1, minus 1, minus 1, minus 1,
280

280

00:12:21.560  -->  00:12:24.373
you can see that it sharpens the image and,
281

281

00:12:25.330  -->  00:12:26.780
yeah so this is,
282

282

00:12:26.780  -->  00:12:28.040
it's quite intuitive
283

283

00:12:28.040  -->  00:12:31.770
if you think of it so 5 is the pixel, the main pixel like
284

284

00:12:31.770  -->  00:12:36.480
in the middle of the filter, or the Feature Detector.
285

285

00:12:36.480  -->  00:12:37.988
And then minus 1, minus 1, minus 1
286

286

00:12:37.988  -->  00:12:41.929
just so you just kind of like reduces the pixels around it,
287

287

00:12:41.929  -->  00:12:44.943
in an intuitive sense.
288

288

00:12:46.110  -->  00:12:50.270
Then Blur, so basically it takes equal significance,
289

289

00:12:50.270  -->  00:12:53.250
it gives equal significance to all of the pixels
290

290

00:12:53.250  -->  00:12:54.500
around the one in the center
291

291

00:12:54.500  -->  00:12:58.190
and therefore it combines them together and you get a blur.
292

292

00:12:58.190  -->  00:13:02.510
Edge Enhance, so here you can see that's minus 1 and 1
293

293

00:13:02.510  -->  00:13:06.020
and you get 0s right, so you delete,
294

294

00:13:06.020  -->  00:13:09.550
remove the pixels around the main one in the middle
295

295

00:13:09.550  -->  00:13:12.040
and you only keep this one at a minus 1
296

296

00:13:12.040  -->  00:13:12.940
and it gives you an edge.
297

297

00:13:12.940  -->  00:13:15.360
This one's a bit harder to understand how it works
298

298

00:13:16.230  -->  00:13:19.480
like probably harder just to think of it intuitively.
299

299

00:13:19.480  -->  00:13:23.280
Edge Detect, right, so this one probably makes more sense
300

300

00:13:23.280  -->  00:13:27.480
right you take the middle one, you reduce the middle one
301

301

00:13:29.590  -->  00:13:32.440
probably like the strength of the middle pixel
302

302

00:13:32.440  -->  00:13:36.910
and then you look for the 1s, you look for these 1s
303

303

00:13:38.128  -->  00:13:42.000
you increase the strength of the 1s around them
304

304

00:13:42.000  -->  00:13:43.253
so you have the 1s there.
305

305

00:13:44.610  -->  00:13:47.180
Yeah so that gives you like an Edge Detection
306

306

00:13:47.180  -->  00:13:49.140
that you can see once you get there.
307

307

00:13:49.140  -->  00:13:50.620
Emboss, another one
308

308

00:13:50.620  -->  00:13:53.980
so the key here is that
309

309

00:13:53.980  -->  00:13:55.600
it's asymmetrical
310

310

00:13:55.600  -->  00:13:58.070
and you can see the image becomes asymmetrical as well
311

311

00:13:58.070  -->  00:14:01.320
so you got that like kind of feeling
312

312

00:14:01.320  -->  00:14:03.660
that it's standing out towards you
313

313

00:14:03.660  -->  00:14:05.800
and that's what you get when you have like
314

314

00:14:05.800  -->  00:14:07.130
minuses here and pluses here.
315

315

00:14:07.130  -->  00:14:09.980
Again this is very, this is getting a bit technical now,
316

316

00:14:09.980  -->  00:14:12.660
but at least we can get some kind of intuitive understanding
317

317

00:14:12.660  -->  00:14:14.720
let's just go quickly through them again.
318

318

00:14:14.720  -->  00:14:18.270
There's Sharpen, there's Blur, there's Edge Enhance
319

319

00:14:18.270  -->  00:14:20.790
there's Edge Detect, there's Emboss.
320

320

00:14:20.790  -->  00:14:21.700
And so as you can see
321

321

00:14:21.700  -->  00:14:24.640
these are great examples of the same image
322

322

00:14:24.640  -->  00:14:27.250
but we're getting Feature Maps,
323

323

00:14:27.250  -->  00:14:29.150
so we use different Feature Detectors
324

324

00:14:29.150  -->  00:14:31.770
to get different Feature Maps of the same image,
325

325

00:14:31.770  -->  00:14:36.340
and therefore now we have lots of versions of this image
326

326

00:14:37.690  -->  00:14:41.080
where in each one we've tried to detect certain things.
327

327

00:14:41.080  -->  00:14:45.648
These terms they're not applicable to us,
328

328

00:14:45.648  -->  00:14:47.840
like Emboss is probably not applicable to us
329

329

00:14:47.840  -->  00:14:50.030
in terms of Convolutional Neural Networks,
330

330

00:14:50.030  -->  00:14:53.200
but Edge Detect that's important we want to detect the edges
331

331

00:14:53.200  -->  00:14:56.440
Edge Enhance probably not, Blur, Sharpen,
332

332

00:14:56.440  -->  00:14:58.480
so certain things like Edge Detect
333

333

00:14:58.480  -->  00:15:02.360
is probably the most important one for our type of work
334

334

00:15:02.360  -->  00:15:04.090
and in terms of understanding
335

335

00:15:04.090  -->  00:15:06.520
like computers they will decide for themselves
336

336

00:15:06.520  -->  00:15:07.880
Neural Network will decide for itself
337

337

00:15:07.880  -->  00:15:08.930
what's important what's not
338

338

00:15:08.930  -->  00:15:12.810
and it probably won't even recognizable to the human eye
339

339

00:15:12.810  -->  00:15:14.820
you won't be able to understand what those features mean
340

340

00:15:14.820  -->  00:15:16.710
but the computer will decide
341

341

00:15:16.710  -->  00:15:19.720
and that's the beauty of Neural Networks
342

342

00:15:19.720  -->  00:15:23.100
that they can process so many different things
343

343

00:15:23.100  -->  00:15:26.560
and understand without even having that intuition
344

344

00:15:26.560  -->  00:15:29.330
without having that explanation why
345

345

00:15:29.330  -->  00:15:32.320
they will understand which features are important to them.
346

346

00:15:32.320  -->  00:15:34.840
Whether we have a name for them or not
347

347

00:15:34.840  -->  00:15:37.650
that's a whole, that's an irrelevant question
348

348

00:15:37.650  -->  00:15:39.850
for the Convolutional Neural Network.
349

349

00:15:39.850  -->  00:15:43.603
And my favorite one, here's an image of Geoffrey Hinton
350

350

00:15:43.603  -->  00:15:46.000
a photo of Geoffrey Hinton
351

351

00:15:46.000  -->  00:15:47.090
passed through
352

352

00:15:49.490  -->  00:15:50.830
one of these filters.
353

353

00:15:50.830  -->  00:15:52.970
Alright so that brings us to the end of today's tutorial.
354

354

00:15:52.970  -->  00:15:55.350
I hope you enjoyed learning about Convolution.
355

355

00:15:55.350  -->  00:15:58.280
The key take away is that Convolution,
356

356

00:15:58.280  -->  00:16:00.340
the primary purpose of a Convolution
357

357

00:16:00.340  -->  00:16:03.480
is to find features in your image
358

358

00:16:03.480  -->  00:16:06.210
using the Feature Detector, put them into a Feature map
359

359

00:16:06.210  -->  00:16:08.210
and by having them in a Feature Map
360

360

00:16:08.210  -->  00:16:12.950
it still preserves the spacial relationships between pixels
361

361

00:16:12.950  -->  00:16:14.740
which is very important for us
362

362

00:16:15.610  -->  00:16:17.070
because if they're completely jumbled up
363

363

00:16:17.070  -->  00:16:19.220
then we've lost the pattern.
364

364

00:16:19.220  -->  00:16:21.510
And at the same time it's important to understand
365

365

00:16:21.510  -->  00:16:24.090
that most of the time the features
366

366

00:16:24.090  -->  00:16:27.540
a Neural Network will detect and use
367

367

00:16:27.540  -->  00:16:30.270
to recognize certain images and classes
368

368

00:16:30.270  -->  00:16:33.000
will mean nothing to humans, but nevertheless they work.
369

369

00:16:33.000  -->  00:16:34.320
And that's what Convolution is,
370

370

00:16:34.320  -->  00:16:36.190
and I look forward to seeing you on the next tutorial.
371

371

00:16:36.190  -->  00:16:38.073
Until then, enjoy Deep Learning.
