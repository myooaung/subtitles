WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.300
Let's look at the page we have built till now.

00:00:03.300 --> 00:00:09.345
We have applied Bootstrap grid layout and applied to make the page responsive,

00:00:09.345 --> 00:00:11.385
but easy to fully responsive.

00:00:11.385 --> 00:00:13.900
Let's check it out.

00:00:14.720 --> 00:00:24.885
We'll go to Inspect and tried to load this page on a smaller device, let's say iPhone.

00:00:24.885 --> 00:00:30.610
If you see this text is now overlapping the image section.

00:00:31.220 --> 00:00:35.265
So up to a certain point, it looks fine.

00:00:35.265 --> 00:00:39.345
But then when we gradually reduce the width of the page,

00:00:39.345 --> 00:00:42.820
this starts overlapping the other section.

00:00:43.030 --> 00:00:49.250
Bootstrap provides an easy way of handling this for different device sizes.

00:00:49.250 --> 00:00:54.020
Bootstrap has different responsive classes for different device types.

00:00:54.020 --> 00:00:57.510
Let me capture it here as a comment.

00:01:00.400 --> 00:01:04.069
So depending on the width of the device,

00:01:04.069 --> 00:01:07.205
we can decide what class to use.

00:01:07.205 --> 00:01:11.060
For example, the call class is the default class

00:01:11.060 --> 00:01:15.440
that we've been using to styling on our columns.

00:01:15.440 --> 00:01:17.840
We also have small, medium,

00:01:17.840 --> 00:01:20.990
large, and extra large called classes.

00:01:20.990 --> 00:01:24.050
They are defined like this call does,

00:01:24.050 --> 00:01:26.300
is same for small and so on.

00:01:26.300 --> 00:01:31.910
So what this means is if a page width is greater than 576 pixel,

00:01:31.910 --> 00:01:34.880
then only this time you'll get applied.

00:01:34.880 --> 00:01:37.220
So this is called big point.

00:01:37.220 --> 00:01:41.105
When you increase your page width beyond the breakpoint,

00:01:41.105 --> 00:01:42.935
beyond the minimum width,

00:01:42.935 --> 00:01:45.080
then a particular style gets applied.

00:01:45.080 --> 00:01:48.630
So let's understand this with an example.

00:01:49.300 --> 00:01:52.070
Instead of call Das For,

00:01:52.070 --> 00:02:00.215
we'll call conceived for and for the image will sick call SM eight.

00:02:00.215 --> 00:02:03.995
If your page with his more than 576 pixel,

00:02:03.995 --> 00:02:07.490
then this four by eight layout will be applied.

00:02:07.490 --> 00:02:10.385
Otherwise, everything will appear in one column.

00:02:10.385 --> 00:02:13.640
Let's check it out. So this is the full width of

00:02:13.640 --> 00:02:18.215
the page and will gradually reduce the pace size.

00:02:18.215 --> 00:02:22.940
And at some point you would see that everything is appearing in one column.

00:02:22.940 --> 00:02:26.030
This takes section and the images appearing in one column.

00:02:26.030 --> 00:02:33.845
Now, four by eight layout is applicable only when the pace with this more than 576 pixel.

00:02:33.845 --> 00:02:38.310
Let's now put this page on a mobile device.

00:02:39.660 --> 00:02:43.360
Now when we open the page using iPhone,

00:02:43.360 --> 00:02:49.790
you can see that it's a peering in one single column because I have one as a woodcut 375.

00:02:50.010 --> 00:02:52.615
Now the issue of heading one,

00:02:52.615 --> 00:02:55.285
overlapping the image 600 is gone.

00:02:55.285 --> 00:02:58.760
The paces fitting nicely to a mobile device.

00:02:59.430 --> 00:03:01.780
If we opened it an iPad,

00:03:01.780 --> 00:03:04.765
which is a 768 pixel width,

00:03:04.765 --> 00:03:07.010
it appears into column.

00:03:08.340 --> 00:03:15.580
Let's change it to 5765 76 its two column.

00:03:15.580 --> 00:03:20.215
And if we reduce it to just below breakpoint 575,

00:03:20.215 --> 00:03:22.660
then it occurs in one column.

00:03:22.660 --> 00:03:27.535
In the web development, it's a best practice to design your pages for smaller devices.

00:03:27.535 --> 00:03:30.355
That's way. The approach is called mobile-first.

00:03:30.355 --> 00:03:33.745
You first check how your page is going to look like in smaller devices.

00:03:33.745 --> 00:03:38.635
Then we gradually build the pages for larger size devices.

00:03:38.635 --> 00:03:42.580
You can also convenience and of these, for example,

00:03:42.580 --> 00:03:47.395
we can have a certain layout for up to 768 pixels.

00:03:47.395 --> 00:03:49.480
We want that we can have another layout.

00:03:49.480 --> 00:03:57.115
So let's check it out. So we have said four by eight layout for smaller sized devices.

00:03:57.115 --> 00:03:58.540
And for medium size,

00:03:58.540 --> 00:04:02.320
we would say six by six.

00:04:02.320 --> 00:04:05.570
And let's say eight by four.

00:04:05.940 --> 00:04:12.190
Up to 576 pixel is going to appear in one column from 576 to

00:04:12.190 --> 00:04:18.440
768 will have four by eight beyond 76 eight we levied for. Let's check it out.

00:04:18.780 --> 00:04:22.210
So this is more than 76 eight.

00:04:22.210 --> 00:04:24.625
So when it is more than 768,

00:04:24.625 --> 00:04:27.010
we're seeing eat by Ford layout.

00:04:27.010 --> 00:04:29.020
Let's gradually reduce it.

00:04:29.020 --> 00:04:33.415
Now below 768. It is four by eight.

00:04:33.415 --> 00:04:35.810
Alert was eight waveform.

00:04:37.080 --> 00:04:40.570
If it is less than 576 pixel,

00:04:40.570 --> 00:04:43.390
it's not picking any of the two layouts you have defined.

00:04:43.390 --> 00:04:45.240
That is four by eight or eight wafer,

00:04:45.240 --> 00:04:48.870
putting the entire contentedness single column.

00:04:50.470 --> 00:04:52.865
So while building your page,

00:04:52.865 --> 00:04:56.840
always design it for smaller devices and then

00:04:56.840 --> 00:05:01.550
gradually check how the page is going to look like in higher resolution devices.

00:05:01.550 --> 00:05:03.350
And depending on your requirements,

00:05:03.350 --> 00:05:06.214
you can decide how to apply these breakpoints effectively

00:05:06.214 --> 00:05:10.409
to make your page look good on all devices.
