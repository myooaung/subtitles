WEBVTT

147
1

00:06:15.940  -->  00:06:17.530
will contain the information for a
and contact data now the contact class
148

2

00:06:17.530  -->  00:06:19.810
single contact and the contact data
will contain the information for a
149

3

00:06:19.810  -->  00:06:22.720
class will contain all the contacts so
single contact and the contact data
150

4

00:06:22.720  -->  00:06:24.460
this is where we'll initialize the list
class will contain all the contacts so
151

5

00:06:24.460  -->  00:06:27.400
of contacts load contacts and save
this is where we'll initialize the list
152

6

00:06:27.400  -->  00:06:30.160
contacts and if we ever want to change
of contacts load contacts and save
153

7

00:06:30.160  -->  00:06:32.380
how we load the store contacts this class
contacts and if we ever want to change
154

8

00:06:32.380  -->  00:06:34.420
the contact data class will be the only
how we load the store contacts this class
155

9

00:06:34.420  -->  00:06:36.790
class that would have to change so we'll
the contact data class will be the only
156

10

00:06:36.790  -->  00:06:38.500
start by working on the contact class
class that would have to change so we'll
157

11

00:06:38.500  -->  00:06:41.320
first let's go ahead and create that in the
start by working on the contact class
158

12

00:06:41.320  -->  00:06:43.420
data model package new Java class
first let's go ahead and create that in the
159

13

00:06:43.420  -->  00:06:49.120
contact will be the name....
data model package new Java class
160

14

00:06:49.120  -->  00:06:52.270
...so
contact will be the name....
161

15

00:06:52.270  -->  00:06:54.190
let's start by adding fields for all the
...so
162

16

00:06:54.190  -->  00:06:56.860
information we want for each contact so
let's start by adding fields for all the
163

17

00:06:56.860  -->  00:06:59.790
that's the first name last name cell
information we want for each contact so
164

18

00:06:59.790  -->  00:07:02.440
number as in phone number and any notes
that's the first name last name cell
165

19

00:07:02.440  -->  00:07:05.440
we want to add for that contact now will
number as in phone number and any notes
166

20

00:07:05.440  -->  00:07:08.380
store all those as strings so you might start
we want to add for that contact now will
167

21

00:07:08.380  -->  00:07:10.360
out by declaring them all as string
store all those as strings so you might start
168

22

00:07:10.360  -->  00:07:13.630
variables that wouldn't be wrong but if
out by declaring them all as string
169

23

00:07:13.630  -->  00:07:15.100
we want to take advantage of data
variables that wouldn't be wrong but if
170

24

00:07:15.100  -->  00:07:16.750
binding to update the user interface
we want to take advantage of data
171

25

00:07:16.750  -->  00:07:19.480
then we want each piece of contact data
binding to update the user interface
172

26

00:07:19.480  -->  00:07:22.510
to be a property so as I alluded to the
then we want each piece of contact data
173

27

00:07:22.510  -->  00:07:25.180
slides instead of declaring the strings
to be a property so as I alluded to the
174

28

00:07:25.180  -->  00:07:27.220
going to use the simple string properly
slides instead of declaring the strings
175

29

00:07:27.220  -->  00:07:29.290
type instead so let's go ahead and do
going to use the simple string properly
176

30

00:07:29.290  -->  00:07:30.480
those so private
type instead so let's go ahead and do
177

31

00:07:30.480  -->  00:07:35.440
so these simple string property first
those so private
178

32

00:07:35.440  -->  00:07:39.670
name set that equal to....
so these simple string property first
179

33

00:07:39.670  -->  00:07:41.290
....
name set that equal to....
180

34

00:07:41.290  -->  00:07:43.960
...
....
181

35

00:07:43.960  -->  00:07:59.000
...
...
182

36

00:07:59.000  -->  00:08:04.690
ok so next we want to do is declare a
...
183

37

00:08:04.690  -->  00:08:06.700
constructor that accepts all these
ok so next we want to do is declare a
184

38

00:08:06.700  -->  00:08:08.530
values and then updates the properties
constructor that accepts all these
185

39

00:08:08.530  -->  00:08:10.940
now we can actually use intellijs
values and then updates the properties
186

40

00:08:10.940  -->  00:08:13.450
generate feature to do this because it will
now we can actually use intellijs
187

41

00:08:13.450  -->  00:08:15.440
create a constructors the accepts simple
generate feature to do this because it will
188

42

00:08:15.440  -->  00:08:17.600
string properly arguments we don't
create a constructors the accepts simple
189

43

00:08:17.600  -->  00:08:19.430
actually want to do that what we want to
string properly arguments we don't
190

44

00:08:19.430  -->  00:08:21.410
do is accept strings we don't want to
actually want to do that what we want to
191

45

00:08:21.410  -->  00:08:23.930
contact data class to have to know that
do is accept strings we don't want to
192

46

00:08:23.930  -->  00:08:25.630
we're storing every bit of contact
contact data class to have to know that
193

47

00:08:25.630  -->  00:08:28.130
information as a simple string property
we're storing every bit of contact
194

48

00:08:28.130  -->  00:08:30.410
so we have to write the constructor by
information as a simple string property
195

49

00:08:30.410  -->  00:08:33.010
hand I guess we could could have
so we have to write the constructor by
196

50

00:08:33.010  -->  00:08:34.570
generated it and then changed it but
hand I guess we could could have
197

51

00:08:34.570  -->  00:08:36.790
I'll just write it by hand....
generated it and then changed it but
198

52

00:08:36.790  -->  00:08:40.660
...
I'll just write it by hand....
199

53

00:08:40.660  -->  00:09:13.880
...
...
200

54

00:09:13.880  -->  00:09:17.060
and i'm using a set method to set the
...
201

55

00:09:17.060  -->  00:09:19.790
value of a string property now in
and i'm using a set method to set the
202

56

00:09:19.790  -->  00:09:21.580
addition to this constructor that's over
value of a string property now in
203

57

00:09:21.580  -->  00:09:24.260
that has got the four parameters for
addition to this constructor that's over
204

58

00:09:24.260  -->  00:09:26.300
our four fields we also wanted a default
that has got the four parameters for
205

59

00:09:26.300  -->  00:09:27.920
constructor that accepts no values
our four fields we also wanted a default
206

60

00:09:27.920  -->  00:09:29.930
that's for when we're loading our saved
constructor that accepts no values
207

61

00:09:29.930  -->  00:09:31.730
contacts so let's go ahead and add
that's for when we're loading our saved
208

62

00:09:31.730  -->  00:09:36.320
that now...
contacts so let's go ahead and add
209

63

00:09:36.320  -->  00:09:39.460
...
that now...
210

64

00:09:39.460  -->  00:09:43.310
now we need setters and getters
...
211

65

00:09:43.310  -->  00:09:45.340
for all the variables the four fields
now we need setters and getters
212

66

00:09:45.340  -->  00:09:47.420
that we defined fortunately we can use
for all the variables the four fields
213

67

00:09:47.420  -->  00:09:48.860
intellij generate feature in this
that we defined fortunately we can use
214

68

00:09:48.860  -->  00:09:52.090
case so place the cursor where we want to
intellij generate feature in this
215

69

00:09:52.090  -->  00:09:56.420
generate them as always getters and setters use
case so place the cursor where we want to
216

70

00:09:56.420  -->  00:09:58.700
all four fields and that's
generate them as always getters and setters use
217

71

00:09:58.700  -->  00:10:01.970
our setters and getters
all four fields and that's
218

72

00:10:01.970  -->  00:10:04.820
so as you scroll down here will notice that
our setters and getters
219

73

00:10:04.820  -->  00:10:06.380
intellij has actually generated two
so as you scroll down here will notice that
220

74

00:10:06.380  -->  00:10:09.230
setters one that return string and one
intellij has actually generated two
221

75

00:10:09.230  -->  00:10:10.760
that returns simple string property
setters one that return string and one
222

76

00:10:10.760  -->  00:10:14.360
that is actually fine so get first name is
that returns simple string property
223

77

00:10:14.360  -->  00:10:16.340
there but also first name property so
that is actually fine so get first name is
224

78

00:10:16.340  -->  00:10:18.230
both of those one returns a string and
there but also first name property so
225

79

00:10:18.230  -->  00:10:20.090
one returns a string property as generated
both of those one returns a string and
226

80

00:10:20.090  -->  00:10:21.980
by IntelliJ that's fine we don't need to
one returns a string property as generated
227

81

00:10:21.980  -->  00:10:24.230
worry about that but we do want to do is
by IntelliJ that's fine we don't need to
228

82

00:10:24.230  -->  00:10:26.810
override the two-string method now we
worry about that but we do want to do is
229

83

00:10:26.810  -->  00:10:28.670
may not want to use it but actually
override the two-string method now we
230

84

00:10:28.670  -->  00:10:30.710
if we ever want to print a contact we want to
may not want to use it but actually
231

85

00:10:30.710  -->  00:10:32.330
see the contact values not the object
if we ever want to print a contact we want to
232

86

00:10:32.330  -->  00:10:34.070
reference so lets add a two-string method
see the contact values not the object
233

87

00:10:34.070  -->  00:10:41.180
and just use the form fields and just use
reference so lets add a two-string method
234

88

00:10:41.180  -->  00:10:43.910
the default that actually is generated by
and just use the form fields and just use
235

89

00:10:43.910  -->  00:10:46.520
intellij which is fine and i'm going to
the default that actually is generated by
236

90

00:10:46.520  -->  00:10:48.320
leave that on the default but you may have
intellij which is fine and i'm going to
237

91

00:10:48.320  -->  00:10:50.810
not overridden that method at all or
leave that on the default but you may have
238

92

00:10:50.810  -->  00:10:52.370
you may have overridden it and return the data
not overridden that method at all or
239

93

00:10:52.370  -->  00:10:53.720
differently that's okay
you may have overridden it and return the data
240

94

00:10:53.720  -->  00:10:54.560
that isn't part of the challenge
differently that's okay
241

95

00:10:54.560  -->  00:10:56.360
solution but it's just something that I
that isn't part of the challenge
242

96

00:10:56.360  -->  00:10:58.970
would typically recommend to do
solution but it's just something that I
243

97

00:10:58.970  -->  00:11:00.080
so next we're going to work on our
would typically recommend to do
244

98

00:11:00.080  -->  00:11:02.810
contact data class which will hold all our
so next we're going to work on our
245

99

00:11:02.810  -->  00:11:05.750
contacts if you recall that i gave you
contact data class which will hold all our
246

100

00:11:05.750  -->  00:11:07.490
access to that file and mentioned in the
contacts if you recall that i gave you
247

101

00:11:07.490  -->  00:11:09.140
challenge that's available in the
access to that file and mentioned in the
248

102

00:11:09.140  -->  00:11:11.480
resources section of this video so I'm
challenge that's available in the
249

103

00:11:11.480  -->  00:11:13.070
just going to copy and paste that in now
resources section of this video so I'm
250

104

00:11:13.070  -->  00:11:16.340
but what i do first obviously is create
just going to copy and paste that in now
251

105

00:11:16.340  -->  00:11:19.940
the class so in the data model package java
but what i do first obviously is create
252

106

00:11:19.940  -->  00:11:22.580
class we're creating is contact data
the class so in the data model package java
253

107

00:11:22.580  -->  00:11:27.080
alright so we're just going to paste
class we're creating is contact data
254

108

00:11:27.080  -->  00:11:27.920
this code in
alright so we're just going to paste
255

109

00:11:27.920  -->  00:11:34.940
ok we got a set phone number and I think
this code in
256

110

00:11:34.940  -->  00:11:36.500
because i called the field phone number
ok we got a set phone number and I think
257

111

00:11:36.500  -->  00:11:39.140
in contacts so what I might do is just
because i called the field phone number
258

112

00:11:39.140  -->  00:11:41.420
quickly change that because we call it
in contacts so what I might do is just
259

113

00:11:41.420  -->  00:11:43.280
....
quickly change that because we call it
260

114

00:11:43.280  -->  00:11:46.430
....to make sure that actually phone
....
261

115

00:11:46.430  -->  00:11:47.570
name doesn't make sense does it
....to make sure that actually phone
262

116

00:11:47.570  -->  00:11:49.220
so let's go back and change that just
name doesn't make sense does it
263

117

00:11:49.220  -->  00:11:55.160
undo that go back to contact lets just call this
so let's go back and change that just
264

118

00:11:55.160  -->  00:11:56.570
phone number which should be so going
undo that go back to contact lets just call this
265

119

00:11:56.570  -->  00:11:59.990
to refactor that refactor
phone number which should be so going
266

120

00:11:59.990  -->  00:12:05.590
rename will call that phone number
to refactor that refactor
267

121

00:12:05.590  -->  00:12:10.630
...and the click yes to named
rename will call that phone number
268

122

00:12:10.630  -->  00:12:15.560
them all as well and do refactor we
...and the click yes to named
269

123

00:12:15.560  -->  00:12:17.000
should find that's all been completed
them all as well and do refactor we
270

124

00:12:17.000  -->  00:12:18.800
successfully
should find that's all been completed
271

125

00:12:18.800  -->  00:12:21.980
if we go back to contact data now it
successfully
272

126

00:12:21.980  -->  00:12:23.320
should now be happy with those changes
if we go back to contact data now it
273

127

00:12:23.320  -->  00:12:26.950
alright on full screen
should now be happy with those changes
274

128

00:12:26.950  -->  00:12:29.870
alright so this is the class and you
alright on full screen
275

129

00:12:29.870  -->  00:12:31.150
probably have a look at this if you
alright so this is the class and you
276

130

00:12:31.150  -->  00:12:33.760
attempted to challenge yourself and you
probably have a look at this if you
277

131

00:12:33.760  -->  00:12:35.000
can see that we've got various methods
attempted to challenge yourself and you
278

132

00:12:35.000  -->  00:12:36.640
here we've got this method here to load
can see that we've got various methods
279

133

00:12:36.640  -->  00:12:39.820
the contacts but again this isn't part of
here we've got this method here to load
280

134

00:12:39.820  -->  00:12:41.950
the challenge solution this XML
the contacts but again this isn't part of
281

135

00:12:41.950  -->  00:12:44.650
processing so it's not something we're
the challenge solution this XML
282

136

00:12:44.650  -->  00:12:46.250
going to discuss here but it is
processing so it's not something we're
283

137

00:12:46.250  -->  00:12:47.560
something that you would typically do
going to discuss here but it is
284

138

00:12:47.560  -->  00:12:50.260
and again note that you can change where the
something that you would typically do
285

139

00:12:50.260  -->  00:12:53.080
contacts are stored though by updating
and again note that you can change where the
286

140

00:12:53.080  -->  00:12:55.090
the contacts _file constant up
contacts are stored though by updating
287

141

00:12:55.090  -->  00:12:58.940
here on line 24 change that to the name
the contacts _file constant up
288

142

00:12:58.940  -->  00:13:00.980
of the file right now the file is going
here on line 24 change that to the name
289

143

00:13:00.980  -->  00:13:03.130
to be created in the my contacts project
of the file right now the file is going
290

144

00:13:03.130  -->  00:13:04.430
directories so you can add a path and do
to be created in the my contacts project
291

145

00:13:04.430  -->  00:13:06.520
whatever you wanted to do their so
directories so you can add a path and do
292

146

00:13:06.520  -->  00:13:07.510
looking down the list here we've got
whatever you wanted to do their so
293

147

00:13:07.510  -->  00:13:10.190
this observable list and once again
looking down the list here we've got
294

148

00:13:10.190  -->  00:13:11.620
we're doing that so that we can take
this observable list and once again
295

149

00:13:11.620  -->  00:13:14.120
advantage of data binding and the actual
we're doing that so that we can take
296

150

00:13:14.120  -->  00:13:17.120
constructor we need to create that least
advantage of data binding and the actual
297

151

00:13:17.120  -->  00:13:19.000
let's go ahead and do that so
constructor we need to create that least
298

152

00:13:19.000  -->  00:13:20.650
initializer list their was the comment view
let's go ahead and do that so
299

153

00:13:20.650  -->  00:13:22.630
we're going to change that to be
initializer list their was the comment view
300

154

00:13:22.630  -->  00:13:27.460
contacts equals FX collections dot
we're going to change that to be
301

155

00:13:27.460  -->  00:13:31.550
observable array list to initialize it as just
contacts equals FX collections dot
302

156

00:13:31.550  -->  00:13:33.920
as a reminder remember that when working
observable array list to initialize it as just
303

157

00:13:33.920  -->  00:13:35.260
with data that will display in the
as a reminder remember that when working
304

158

00:13:35.260  -->  00:13:38.500
javafx ui you I always
with data that will display in the
305

159

00:13:38.500  -->  00:13:41.080
recommend to use the javafx version of
javafx ui you I always
306

160

00:13:41.080  -->  00:13:43.610
any lists that you create we did discuss
recommend to use the javafx version of
307

161

00:13:43.610  -->  00:13:45.110
that in detail this section the reasons
any lists that you create we did discuss
308

162

00:13:45.110  -->  00:13:45.940
for that
that in detail this section the reasons
309

163

00:13:45.940  -->  00:13:47.890
in this case we're creating a list by
for that
310

164

00:13:47.890  -->  00:13:49.210
calling the observable array list method
in this case we're creating a list by
311

165

00:13:49.210  -->  00:13:52.630
from the FX collections class alright
calling the observable array list method
312

166

00:13:52.630  -->  00:13:54.110
just before we finish this video will
from the FX collections class alright
313

167

00:13:54.110  -->  00:13:55.490
need some methods for getting the
just before we finish this video will
314

168

00:13:55.490  -->  00:13:58.070
contacts adding a contact and also
need some methods for getting the
315

169

00:13:58.070  -->  00:14:01.210
deleting contact this is where we can
contacts adding a contact and also
316

170

00:14:01.210  -->  00:14:02.770
putting that code here so I'm going to leave
deleting contact this is where we can
317

171

00:14:02.770  -->  00:14:05.080
that comment out now so i'm going to
putting that code here so I'm going to leave
318

172

00:14:05.080  -->  00:14:06.860
put firstly the method to get them
that comment out now so i'm going to
319

173

00:14:06.860  -->  00:14:12.130
...
put firstly the method to get them
320

174

00:14:12.130  -->  00:14:48.980
...
...
321

175

00:14:48.980  -->  00:14:52.730
alright so we made good progress in these
...
322

176

00:14:52.730  -->  00:14:54.400
methods our self-explanatory they
alright so we made good progress in these
323

177

00:14:54.400  -->  00:14:56.110
should be pretty straightforward at this
methods our self-explanatory they
324

178

00:14:56.110  -->  00:14:57.110
point of the course
should be pretty straightforward at this
325

179

00:14:57.110  -->  00:14:58.870
so in addition to the code that I
point of the course
326

180

00:14:58.870  -->  00:15:00.520
provided for loading and storing the
so in addition to the code that I
327

181

00:15:00.520  -->  00:15:03.610
data from xml this is all we really need
provided for loading and storing the
328

182

00:15:03.610  -->  00:15:06.460
in the contact data class at this point
data from xml this is all we really need
329

183

00:15:06.460  -->  00:15:09.070
our data model classes are complete
in the contact data class at this point
330

184

00:15:09.070  -->  00:15:11.180
so in the next video will start work on the
our data model classes are complete
331

185

00:15:11.180  -->  00:15:18.310
user interface see you in the next video
so in the next video will start work on the

