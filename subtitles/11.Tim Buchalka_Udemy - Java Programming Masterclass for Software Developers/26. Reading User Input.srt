1
1

00:00:05,491  -->  00:00:07,720
<v Instructor>All right, so let's discuss reading input</v>
2

2

00:00:07,720  -->  00:00:08,990
from a user.
3

3

00:00:08,990  -->  00:00:10,750
So the goal of this video, is to make
4

4

00:00:10,750  -->  00:00:14,490
an interactive application where a user will enter his
5

5

00:00:14,490  -->  00:00:17,570
or her name and year of birth and then the application
6

6

00:00:17,570  -->  00:00:21,180
will calculate the current age of the user.
7

7

00:00:21,180  -->  00:00:23,110
Now in one of the previous videos.
8

8

00:00:23,110  -->  00:00:25,970
We learned how to parse, in other words how to convert
9

9

00:00:25,970  -->  00:00:30,490
a string type into a number by using the methods Pass Int
10

10

00:00:30,490  -->  00:00:32,160
and Pass Double.
11

11

00:00:32,160  -->  00:00:34,870
In this video we're going to cover another useful method
12

12

00:00:34,870  -->  00:00:38,160
called Next Line as well as a few others.
13

13

00:00:38,160  -->  00:00:41,010
And we'll also use a class called Scanner.
14

14

00:00:41,010  -->  00:00:43,930
Which is a simple text scanner that can pass
15

15

00:00:43,930  -->  00:00:46,880
both Primitive types and Strings.
16

16

00:00:46,880  -->  00:00:48,730
So essentially scanner uses methods
17

17

00:00:48,730  -->  00:00:51,150
like parse Int Internally.
18

18

00:00:51,150  -->  00:00:54,900
Now one method called Next returns a string allowing us
19

19

00:00:54,900  -->  00:00:57,503
to save the returned value to a variable.
20

20

00:00:58,390  -->  00:01:01,560
So the application we're going to write will prompt a user
21

21

00:01:01,560  -->  00:01:02,550
for their name.
22

22

00:01:02,550  -->  00:01:04,640
In other words we want the user of the application
23

23

00:01:04,640  -->  00:01:07,660
to enter their name and then our application will store
24

24

00:01:07,660  -->  00:01:09,710
that as a variable.
25

25

00:01:09,710  -->  00:01:13,380
So to start let's actually get our scanner set up.
26

26

00:01:13,380  -->  00:01:15,800
We're going to type some code in our main method,
27

27

00:01:15,800  -->  00:01:18,280
noting that I've created a new project
28

28

00:01:18,280  -->  00:01:19,580
called reading user input.
29

29

00:01:21,390  -->  00:01:23,860
So I'm going to type Scanner with a capital S
30

30

00:01:23,860  -->  00:01:28,160
then a lowercase scanner and I'm going to select
31

31

00:01:28,160  -->  00:01:29,550
that option.
32

32

00:01:29,550  -->  00:01:31,970
And I'm going to make sure that I'm importing this scanner
33

33

00:01:31,970  -->  00:01:32,960
Java dot util.
34

34

00:01:32,960  -->  00:01:35,040
So if you get prompted for multiple options,
35

35

00:01:35,040  -->  00:01:37,730
make sure the scanner dot util is the one you choose.
36

36

00:01:37,730  -->  00:01:42,587
So the code scanner, scanner equals new scanner
37

37

00:01:42,587  -->  00:01:44,640
but in parentheses it's going to be System with
38

38

00:01:44,640  -->  00:01:49,640
a capital S dot in and semicolon to complete the log.
39

39

00:01:49,940  -->  00:01:52,720
Now you've seen system dot out before and
40

40

00:01:52,720  -->  00:01:55,510
that dumps text to the console in other words
41

41

00:01:55,510  -->  00:01:56,950
it outputs information.
42

42

00:01:56,950  -->  00:01:59,230
And in fact we've used that in all who actually use
43

43

00:01:59,230  -->  00:02:01,800
that all the time and pretty much every project
44

44

00:02:01,800  -->  00:02:02,990
that we've worked on.
45

45

00:02:02,990  -->  00:02:06,220
So System dot in on the other hand is the opposite
46

46

00:02:06,220  -->  00:02:09,810
in that it allows you to type input into the console
47

47

00:02:09,810  -->  00:02:12,210
which then gets returned back to the programme.
48

48

00:02:12,210  -->  00:02:14,540
So that's what we're doing here, when we're defining
49

49

00:02:14,540  -->  00:02:16,750
a variable of type scanner.
50

50

00:02:16,750  -->  00:02:20,240
So let's mentioned previously, case here is very important.
51

51

00:02:20,240  -->  00:02:24,060
So scanner is one of Java's built-in classes
52

52

00:02:24,060  -->  00:02:26,970
and it allows us to read user import.
53

53

00:02:26,970  -->  00:02:28,860
So in other words, we can pass primitive types
54

54

00:02:28,860  -->  00:02:31,290
and strings using methods from this scanner.
55

55

00:02:31,290  -->  00:02:33,100
And notice also there's this new keyword
56

56

00:02:33,100  -->  00:02:35,780
that I'm using here as well you know line eight.
57

57

00:02:35,780  -->  00:02:39,120
We use that to create what's called an Instance of Scanner,
58

58

00:02:39,120  -->  00:02:43,460
meaning that we are creating a new object of type scanner.
59

59

00:02:43,460  -->  00:02:45,670
Now, so far we've been using primitive types.
60

60

00:02:45,670  -->  00:02:49,000
So we haven't needed to use the new keyword but later
61

61

00:02:49,000  -->  00:02:51,500
in the course we're going to discuss in depth
62

62

00:02:51,500  -->  00:02:54,540
what an Instance is and why we use new
63

63

00:02:54,540  -->  00:02:55,940
when creating an Instance.
64

64

00:02:55,940  -->  00:02:58,620
So keep in mind that we can create as many Scanner instances
65

65

00:02:58,620  -->  00:03:02,680
as we need by using a new line with the new keyword again
66

66

00:03:02,680  -->  00:03:05,240
but for our current example we're just going to use
67

67

00:03:05,240  -->  00:03:06,980
a single scanner.
68

68

00:03:06,980  -->  00:03:10,990
All right, so we've defined our scanner or the next line
69

69

00:03:10,990  -->  00:03:14,920
let's now type system dot out dot println I'm gonna put in
70

70

00:03:14,920  -->  00:03:19,860
double quotes enter your name colon the space the close off
71

71

00:03:19,860  -->  00:03:23,253
the double quote parentheses and semicolon.
72

72

00:03:24,090  -->  00:03:26,690
We've seen that before we're just outputting a message there
73

73

00:03:26,690  -->  00:03:31,690
and on the next line let's type string name equals scanner
74

74

00:03:32,890  -->  00:03:36,800
this time using the lower case scanner dot next line.
75

75

00:03:36,800  -->  00:03:39,770
So I'm selecting next line in parentheses.
76

76

00:03:39,770  -->  00:03:42,490
Alright and then after we've finished using a scanner,
77

77

00:03:42,490  -->  00:03:45,510
we should close it using the close method.
78

78

00:03:45,510  -->  00:03:48,560
So note that after closing the scanner calling methods
79

79

00:03:48,560  -->  00:03:51,220
like Next Line or Next Intimal cause errors.
80

80

00:03:51,220  -->  00:03:54,140
So we should really ensure we're done with using the scanner
81

81

00:03:54,140  -->  00:03:55,350
before closing it.
82

82

00:03:55,350  -->  00:03:57,520
So it's recommended that we close the scanner
83

83

00:03:57,520  -->  00:04:00,870
after we don't need it anymore as it then releases
84

84

00:04:00,870  -->  00:04:04,670
the underlying memory that scanner was using internally.
85

85

00:04:04,670  -->  00:04:06,140
Now this might seem a bit confusing
86

86

00:04:06,140  -->  00:04:07,820
but later we're going to scan...
87

87

00:04:07,820  -->  00:04:10,110
We're going to use scanner more frequently,
88

88

00:04:10,110  -->  00:04:11,790
so things will become clearer.
89

89

00:04:11,790  -->  00:04:13,120
So for now though what I'm going to do
90

90

00:04:13,120  -->  00:04:14,633
is add an extra line there.
91

91

00:04:15,510  -->  00:04:18,563
I put scanner.close with parentheses on the end.
92

92

00:04:19,430  -->  00:04:22,060
Alright, so what are we done here well to sum up
93

93

00:04:22,060  -->  00:04:25,410
we're using the variable scanner defined on line eight
94

94

00:04:25,410  -->  00:04:27,410
and we're calling the method Next Line,
95

95

00:04:27,410  -->  00:04:31,890
this one here on line 10 scanner dot nextLine to read a line
96

96

00:04:31,890  -->  00:04:33,910
of input from the console.
97

97

00:04:33,910  -->  00:04:35,520
And then what we're going to do now you're going to add
98

98

00:04:35,520  -->  00:04:38,240
some output to print out what was typed.
99

99

00:04:38,240  -->  00:04:40,510
So I'm going to put after the next line method,
100

100

00:04:40,510  -->  00:04:42,590
put another space there we're going to print out another
101

101

00:04:42,590  -->  00:04:47,590
message and the message in double quote to be your name
102

102

00:04:49,120  -->  00:04:53,490
is space another double quote plus name.
103

103

00:04:53,490  -->  00:04:56,210
We're now using the next line method here on line 10
104

104

00:04:56,210  -->  00:04:59,150
to retrieve some information from the console
105

105

00:04:59,150  -->  00:05:01,830
then on line 12 we're printing out a message your name is
106

106

00:05:01,830  -->  00:05:04,830
then whatever was typed in by the user.
107

107

00:05:04,830  -->  00:05:06,640
So let's now try running the application
108

108

00:05:06,640  -->  00:05:07,810
and see what happens.
109

109

00:05:12,213  -->  00:05:13,046
All right so you can see down here in the bottom
110

110

00:05:13,046  -->  00:05:14,910
of the screen is asking for entering your name,
111

111

00:05:14,910  -->  00:05:17,870
enter your name, we're asking to enter your name.
112

112

00:05:17,870  -->  00:05:20,175
So I'm going to type Tim into the console.
113

113

00:05:20,175  -->  00:05:21,883
(typing)
114

114

00:05:21,883  -->  00:05:24,007
and I'm gonna press enter.
115

115

00:05:24,007  -->  00:05:26,530
And notice that come up and said your name is Tim
116

116

00:05:26,530  -->  00:05:28,590
and then the price is finished at the bottom.
117

117

00:05:28,590  -->  00:05:31,770
So in other words our programme finished after doing that.
118

118

00:05:31,770  -->  00:05:33,930
Though it always that IntelliJ displayed
119

119

00:05:33,930  -->  00:05:35,780
what I typed in green.
120

120

00:05:35,780  -->  00:05:38,900
Which is that really a handy way of knowing that these were
121

121

00:05:38,900  -->  00:05:41,670
the letters that were actually typed in from the console.
122

122

00:05:41,670  -->  00:05:44,670
So you can see now that by using this next line method
123

123

00:05:44,670  -->  00:05:47,910
in conjunction with scanner we were able to retrieve some
124

124

00:05:47,910  -->  00:05:51,090
input from the console in other words from the keyboard
125

125

00:05:51,090  -->  00:05:54,120
and they were able to store that in a variable in this case
126

126

00:05:54,120  -->  00:05:57,430
called Name and then we were able to print out the value
127

127

00:05:57,430  -->  00:05:59,813
in other words what was entered by the user.
128

128

00:06:00,935  -->  00:06:04,010
All right, so, so far so good but obviously the main goal
129

129

00:06:04,010  -->  00:06:06,580
for this application is to not only ask the user
130

130

00:06:06,580  -->  00:06:09,930
for their name but also for the year of birth,
131

131

00:06:09,930  -->  00:06:13,210
so that we can then calculate the current users age based on
132

132

00:06:13,210  -->  00:06:15,720
what the current year is that the programme is running in.
133

133

00:06:15,720  -->  00:06:17,810
Now we've already handled reading the name.
134

134

00:06:17,810  -->  00:06:20,160
So let's move on to the next part.
135

135

00:06:20,160  -->  00:06:22,590
In a previous video we learned how to parse a number
136

136

00:06:22,590  -->  00:06:25,240
from a string by using the parse int method.
137

137

00:06:25,240  -->  00:06:28,080
Now let's try retrieving in int from the scanner
138

138

00:06:28,080  -->  00:06:29,900
so that we can calculate the users age
139

139

00:06:29,900  -->  00:06:31,519
from their birth year.
140

140

00:06:31,519  -->  00:06:33,200
You know, we should begin by displaying a message
141

141

00:06:33,200  -->  00:06:35,980
to the user so he machine knows what to do.
142

142

00:06:35,980  -->  00:06:37,800
In other words what data to top.
143

143

00:06:37,800  -->  00:06:40,820
So let's ask the user for their birth year before asking
144

144

00:06:40,820  -->  00:06:42,060
for their name.
145

145

00:06:42,060  -->  00:06:44,280
So I'm gonna put that code above the code where we've asked
146

146

00:06:44,280  -->  00:06:48,330
for their name and I'm gonna put a line after the nine-eight
147

147

00:06:48,330  -->  00:06:50,692
that had our definition of a scanner.
148

148

00:06:50,692  -->  00:06:55,040
And I'm gonna start by outputting message into your year
149

149

00:06:55,040  -->  00:06:56,287
of birth.
150

150

00:06:56,287  -->  00:06:58,980
(typing)
151

151

00:06:58,980  -->  00:07:02,610
Then on the next slide, I'm going to type int space year
152

152

00:07:02,610  -->  00:07:07,610
of birth is equal to scanner dot
153

153

00:07:08,050  -->  00:07:10,053
this time I'm going to select Next Int.
154

154

00:07:11,800  -->  00:07:14,440
And put an extra line there just to make sure that
155

155

00:07:14,440  -->  00:07:15,940
it's clear.
156

156

00:07:15,940  -->  00:07:18,720
Now to read the age we could have used a string,
157

157

00:07:18,720  -->  00:07:20,080
in other words we could have used the dot...
158

158

00:07:20,080  -->  00:07:23,710
the next line method like we did for the user's name
159

159

00:07:23,710  -->  00:07:26,870
on line 14 and then converted that to an integer as
160

160

00:07:26,870  -->  00:07:28,420
we've done previously.
161

161

00:07:28,420  -->  00:07:31,000
But scanner actually has a method that will pass the string
162

162

00:07:31,000  -->  00:07:33,804
to an integer for us and we were able to use that
163

163

00:07:33,804  -->  00:07:37,550
by using this scanner dot next int method call here.
164

164

00:07:37,550  -->  00:07:40,100
So essentially what's happening there is that the integer
165

165

00:07:40,100  -->  00:07:43,410
at the what the user has typed is automatically converted
166

166

00:07:43,410  -->  00:07:46,870
into an integer and saved into our variable called year
167

167

00:07:46,870  -->  00:07:48,503
of birth which is of type int.
168

168

00:07:49,570  -->  00:07:51,690
Now I'm going to explain shortly while we put this code
169

169

00:07:51,690  -->  00:07:53,660
above the name retrieval section.
170

170

00:07:53,660  -->  00:07:55,860
So don't worry about that too much for now.
171

171

00:07:55,860  -->  00:07:58,830
But now we've got an int value for year of birth thanks
172

172

00:07:58,830  -->  00:08:02,260
to the next int method we're using on line 11 allowing us
173

173

00:08:02,260  -->  00:08:05,100
to read an integer from the console.
174

174

00:08:05,100  -->  00:08:08,230
So to figure out the user's age, we just need to calculate
175

175

00:08:08,230  -->  00:08:11,410
now the difference between the current year and the year
176

176

00:08:11,410  -->  00:08:14,030
of birth entered by the user.
177

177

00:08:14,030  -->  00:08:16,640
So let's calculate the age of the user
178

178

00:08:16,640  -->  00:08:18,450
and then we'll print it to the console.
179

179

00:08:18,450  -->  00:08:22,920
So to do that, I'm going to add the code after the code
180

180

00:08:22,920  -->  00:08:24,430
that has asked for their name.
181

181

00:08:25,360  -->  00:08:29,370
I'm going to type int age equals we want to enter
182

182

00:08:29,370  -->  00:08:34,370
our current year which is 2018 minus year of birth,
183

183

00:08:34,540  -->  00:08:36,370
you put a semicolon there.
184

184

00:08:36,370  -->  00:08:40,620
That's how we calculate how old the person is based on
185

185

00:08:40,620  -->  00:08:44,060
the year of birth that they've entered and deducting that
186

186

00:08:44,060  -->  00:08:47,600
from the current year which is 2018.
187

187

00:08:47,600  -->  00:08:49,460
So now that we've got the user's age.
188

188

00:08:49,460  -->  00:08:52,230
Let's print out a different message to the user.
189

189

00:08:52,230  -->  00:08:54,180
Now in the existing print in statement,
190

190

00:08:54,180  -->  00:08:57,040
I'm going to add age as well as some additional text.
191

191

00:08:57,040  -->  00:08:58,870
So let's go ahead and do that.
192

192

00:08:58,870  -->  00:09:00,830
So remember we've got your name is.
193

193

00:09:00,830  -->  00:09:03,586
Let's change that to your name is plus name,
194

194

00:09:03,586  -->  00:09:04,770
we're going to the end of it here.
195

195

00:09:04,770  -->  00:09:09,770
You'll put plus comma and you are...
196

196

00:09:12,645  -->  00:09:16,100
and it's place another double quote plus age
197

197

00:09:16,100  -->  00:09:20,210
plus and another double quote the space there
198

198

00:09:20,210  -->  00:09:24,453
for years old and closing up the line like so.
199

199

00:09:25,314  -->  00:09:27,010
Alright, so let's do run this application and see
200

200

00:09:27,010  -->  00:09:27,843
if it works.
201

201

00:09:30,240  -->  00:09:33,230
So enter your year of birth is being asked for first.
202

202

00:09:33,230  -->  00:09:36,850
So I'm going to enter my birth year which is 1964,
203

203

00:09:36,850  -->  00:09:41,560
press enter and notice what happened.
204

204

00:09:41,560  -->  00:09:45,390
Automatically I did get a chance to enter my name
205

205

00:09:45,390  -->  00:09:46,950
and it automatically came up and says your name
206

206

00:09:46,950  -->  00:09:50,820
is a space comma and you are 54 years old.
207

207

00:09:50,820  -->  00:09:54,310
So the application didn't give us a chance to enter a name
208

208

00:09:54,310  -->  00:09:57,380
even though the message "enter your name" was printed.
209

209

00:09:57,380  -->  00:09:58,820
So what's going on there just to make sure,
210

210

00:09:58,820  -->  00:10:00,020
let's just run it again.
211

211

00:10:01,669  -->  00:10:04,307
I've been very careful, gonna enter my year of birth
212

212

00:10:05,610  -->  00:10:06,543
and press enter.
213

213

00:10:07,850  -->  00:10:09,790
And you can see it automatically goes past the enter
214

214

00:10:09,790  -->  00:10:12,170
your name and prints out the message
215

215

00:10:12,170  -->  00:10:14,800
and didn't give me a chance to enter my name.
216

216

00:10:14,800  -->  00:10:16,830
So what's actually going on here?
217

217

00:10:16,830  -->  00:10:19,450
Well, this is actually one of the mistakes that beginners
218

218

00:10:19,450  -->  00:10:21,840
usually make, which is why I've ordered
219

219

00:10:21,840  -->  00:10:24,670
the birth year prompt before the name one.
220

220

00:10:24,670  -->  00:10:27,140
Whenever we relate a number from the scanner,
221

221

00:10:27,140  -->  00:10:30,040
being an Int or Float or Double or some other type,
222

222

00:10:30,040  -->  00:10:33,070
we press the Enter key on the keyboard as we just did
223

223

00:10:33,070  -->  00:10:34,300
with the age.
224

224

00:10:34,300  -->  00:10:36,390
So doing that ends the line.
225

225

00:10:36,390  -->  00:10:40,130
So it's recommended after a next enter or call to next int
226

226

00:10:40,130  -->  00:10:44,780
to call next line again without assigning it to a variable.
227

227

00:10:44,780  -->  00:10:47,640
In other words to handle the Enter key issue,
228

228

00:10:47,640  -->  00:10:50,970
we have to call next line, so that the scanner works
229

229

00:10:50,970  -->  00:10:52,530
as expected.
230

230

00:10:52,530  -->  00:10:57,110
Now internally the scanner is checking for a line separator
231

231

00:10:57,110  -->  00:11:00,440
and when we hit Enter we're typing a line separator
232

232

00:11:00,440  -->  00:11:02,640
so that's interpreted as input.
233

233

00:11:02,640  -->  00:11:05,960
When we reach the next line method that retrieves the name
234

234

00:11:05,960  -->  00:11:07,930
the input for a name becomes Enter,
235

235

00:11:07,930  -->  00:11:10,130
so is essentially skipped.
236

236

00:11:10,130  -->  00:11:12,330
So knowing that and knowing that that's an issue.
237

237

00:11:12,330  -->  00:11:15,150
We can now add another call to next line
238

238

00:11:15,150  -->  00:11:18,360
right off the next int and include a comment to that effect
239

239

00:11:18,360  -->  00:11:21,990
as well so we know that we had a reason for doing so.
240

240

00:11:21,990  -->  00:11:24,943
So after the year of birth up here,
241

241

00:11:25,860  -->  00:11:30,520
I'm going to types scanner dot next line
242

242

00:11:31,730  -->  00:11:33,460
to call that.
243

243

00:11:33,460  -->  00:11:35,870
I'm going to put a comma here to say handle
244

244

00:11:35,870  -->  00:11:40,163
next line character enter key.
245

245

00:11:41,020  -->  00:11:42,220
So now that I've actually done that,
246

246

00:11:42,220  -->  00:11:44,320
let's run this again and see what happens.
247

247

00:11:45,950  -->  00:11:50,950
Into my year of birth again my case 1964 this time
248

248

00:11:51,330  -->  00:11:54,790
it's now asking me for my name I'm going to enter Tim,
249

249

00:11:54,790  -->  00:11:58,450
press Enter your name is Tim in your 54 years old,
250

250

00:11:58,450  -->  00:12:01,890
so the programme is now working as expected.
251

251

00:12:01,890  -->  00:12:03,960
So keep this in mind for the future,
252

252

00:12:03,960  -->  00:12:06,660
after you reading a number with a scanner
253

253

00:12:06,660  -->  00:12:09,200
there must be a next line method call
254

254

00:12:09,200  -->  00:12:12,223
to handle the Enter key like we've done on line 12.
255

255

00:12:13,110  -->  00:12:15,050
All right, so upon looking at the birth year entered
256

256

00:12:15,050  -->  00:12:17,580
by the user, we can see that our application
257

257

00:12:17,580  -->  00:12:19,800
easily calculated the age.
258

258

00:12:19,800  -->  00:12:22,120
However there are a few potential problems
259

259

00:12:22,120  -->  00:12:25,233
and let's talk over those problems, in the next video.
