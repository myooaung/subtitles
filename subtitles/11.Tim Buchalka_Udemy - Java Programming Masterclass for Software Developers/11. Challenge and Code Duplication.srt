1
00:00:05,170 --> 00:00:05,450
Gut.

2
00:00:05,460 --> 00:00:10,200
Wie ich am Ende des letzten Videos angedeutet habe, ist es jetzt Zeit für eine Herausforderung, und ich

3
00:00:10,200 --> 00:00:12,180
kann sagen, dass es die Herausforderung ist.

4
00:00:12,330 --> 00:00:17,400
Die Herausforderung für Sie besteht nun darin, dieses Mal einen zweiten Druckkopf auf dem

5
00:00:17,400 --> 00:00:23,810
Bildschirm zu erstellen, dessen Punktzahl auf 10000 und dessen Abschlussstufe auf acht und dessen Bonus auf 200 festgelegt ist.

6
00:00:23,880 --> 00:00:27,470
Sie müssen also etwas sehr Ähnliches tun, wie wir es hier im ersten Beispiel getan haben.

7
00:00:27,570 --> 00:00:32,660
Sie müssen jedoch auch sicherstellen, dass die endgültige Punktzahl mit den ursprünglichen Werten vier

8
00:00:32,670 --> 00:00:34,920
abgeschlossene Punktzahl und Bonus angezeigt wird.

9
00:00:35,340 --> 00:00:40,470
Im Wesentlichen können Sie auf dem Bildschirm die Zeilen 19 bis 22 sehen, dass im Wesentlichen die

10
00:00:40,470 --> 00:00:45,510
erste Zeile angezeigt wird, aber darunter möchten wir sagen, dass Sie eine zweite Zeile mit einem Szenario

11
00:00:45,540 --> 00:00:48,960
einfügen müssen, das ich tatsächlich kommentiert habe Linien 24 bis 28.

12
00:00:48,960 --> 00:00:51,670
Also beides und sollte hier auf dem Bildschirm angezeigt werden.

13
00:00:51,720 --> 00:00:55,190
Also los, pausiere das Video und schau, ob du das umsetzen kannst.

14
00:00:55,190 --> 00:00:59,190
Und wenn Sie bereit sind, starten Sie das Video erneut und kehren Sie zurück, und Sie haben gesehen, wie ich die Lösung richtig durchgearbeitet

15
00:01:01,360 --> 00:01:01,600
habe.

16
00:01:01,610 --> 00:01:02,150
Willkommen zurück.

17
00:01:02,150 --> 00:01:02,720
Wie bist du vorangekommen.

18
00:01:02,720 --> 00:01:03,710
Hast du es geschafft, es herauszufinden?

19
00:01:04,040 --> 00:01:06,240
Nun, es gibt ein paar Möglichkeiten, dies zu tun.

20
00:01:06,260 --> 00:01:11,510
Was wir als erstes tun könnten, wäre, einen vollständigen neuen Satz von Variablen zu erstellen und im Wesentlichen ein Kopieren

21
00:01:11,510 --> 00:01:16,160
und Einfügen in den Code vorzunehmen, aber alle neuen Variablennamen zu verwenden, und das würde funktionieren.

22
00:01:16,160 --> 00:01:19,360
Wir könnten so etwas wie eine Kopie machen und das werde ich tun.

23
00:01:19,370 --> 00:01:21,420
Ich werde hier rauf und rauf kommen.

24
00:01:21,440 --> 00:01:28,700
Die drei Variablennamen Ich werde eine Kopie davon machen und wir werden Dan hierher bringen und ich werde aufhören,

25
00:01:28,700 --> 00:01:32,980
den Code in Zeile 30 einzufügen und brauche ihn eigentlich nicht.

26
00:01:33,080 --> 00:01:37,760
Es ist das Spiel vorbei, aber ich werde es ändern, um es vorerst zu löschen. Wenn

27
00:01:38,090 --> 00:01:44,740
das Level abgeschlossen ist, wird das neue Level abgeschlossen, damit das neue Wort in der Hauptstadt L Namenskonventionen und neue Boni geschrieben werden können.

28
00:01:45,090 --> 00:01:51,830
Die Regeln, nach denen ich zurückkam und die Punkte für das Grep-Ergebnis gutgeschrieben bekam, wurden übertroffen, aber ich nehme einfach eine Kopie

29
00:01:51,830 --> 00:01:58,940
davon und füge sie erneut in Zeile 30 ein oder ändere sie in eine neue Punktzahl, bei der sich auch die Werte geändert haben.

30
00:01:58,940 --> 00:02:01,070
Denken Sie daran, dass wir die Punktzahl

31
00:02:04,180 --> 00:02:11,080
auf 10000 setzen müssen, damit ein Level abgeschlossen wird. Diesmal ist acht festgelegt, und neue Bonuspunkte setzen diese auf 200 anstelle von

32
00:02:11,080 --> 00:02:11,500
100.

33
00:02:12,370 --> 00:02:14,190
Also könnte ich das machen.

34
00:02:14,320 --> 00:02:16,270
Sie können entweder eine Kopie seines

35
00:02:19,570 --> 00:02:26,340
Spiels einfügen, indem Sie das in Zeile 34 tun, und den Nicht-Operator entfernen, über den wir in den letzten vier Jahren gesprochen haben.

36
00:02:26,370 --> 00:02:28,360
Das Spiel ist also vorbei.

37
00:02:28,420 --> 00:02:29,920
Und wir benutzten das Wissen, dass es auch Namen gab.

38
00:02:29,940 --> 00:02:37,450
Anstatt also wie eine Kopie zu punkten, die ich nur einfügen werde, um die Partiturebene zu beenden, wähle ich eine neue Ebene aus, indem

39
00:02:37,830 --> 00:02:42,410
ich sie über die andere füge, und doppelklicke sie einfach an, um sie auszuwählen.

40
00:02:42,850 --> 00:02:49,120
Doppelklicken Sie hier, um die Notiz einzufügen, dass ich die Endnote im zweiten Codeblock noch verwenden kann. Wenn Sie

41
00:02:49,510 --> 00:02:54,760
sich daran erinnern, dass der Job die Variablen automatisch löscht, sobald der Codeblock fertig ist.

42
00:02:54,760 --> 00:02:58,540
Aus diesem Grund können wir eine weitere Variable mit demselben Namen erneut erstellen.

43
00:02:58,600 --> 00:03:03,220
Sie können sehen, dass die anderen in Zeile 20 verwendet werden und die, die wir gerade noch verwendet haben, in Zeile 35.

44
00:03:04,150 --> 00:03:08,750
Aber natürlich mussten wir neue Variablen, eine neue Schule, ein neues Level und einen neuen Bonus erstellen und Sie haben gesehen, was mit einem passiert

45
00:03:08,750 --> 00:03:10,390
ist, um zu versuchen, zu kopieren und einzufügen.

46
00:03:10,570 --> 00:03:12,810
Und das liegt daran, dass wir sie im selben Codeblock verwenden.

47
00:03:12,940 --> 00:03:17,710
Mit anderen Worten, der Code, den wir ausgeführt haben, befindet sich immer noch in dem einen Codeblock hier oben, und Sie

48
00:03:17,710 --> 00:03:21,960
können sehen, dass wir eine abgeschlossene Punktzahl und einen Bonus erhalten haben. Deshalb musste ich sie dort ändern.

49
00:03:22,990 --> 00:03:23,920
Das ist also eine Lösung.

50
00:03:23,920 --> 00:03:28,460
Wenn wir das ausführen, was wir tun müssen, um auch das erste Stück der Ausgabe zu sehen, denken Sie daran, dass wir es hatten,

51
00:03:28,480 --> 00:03:31,150
um dort im vorherigen Video nicht zu operieren, werde ich das auch los.

52
00:03:31,360 --> 00:03:37,000
Wenn wir dies jetzt ausführen, sollten wir sagen, dass beide Ergebnisse Ihre endgültigen Ergebnisse dreizehnhundert auf dem Bildschirm anzeigen.

53
00:03:37,000 --> 00:03:39,790
Ihre endgültige Punktzahl war elftausendsechshundert.

54
00:03:40,120 --> 00:03:47,340
Im Fall von elftausendsechshundert auf dem Bildschirm können Sie also die Variablen zehntausend plus acht mal

55
00:03:47,400 --> 00:03:50,220
zweihundert sehen, also sechzehnhundertzehntausend plus.

56
00:03:50,220 --> 00:03:54,720
Sechzehnhundert ist gleich elftausendsechshundert, was bedeutet, dass ich diese Ausgabe habe.

57
00:03:55,200 --> 00:03:59,450
Das war sicherlich eine Möglichkeit, nur Variablen zu erstellen.

58
00:03:59,550 --> 00:04:04,760
Der Nachteil dieses Ansatzes besteht darin, dass Sie übermäßig viel Arbeitsspeicher verwenden und neue Variablen erstellen,

59
00:04:04,770 --> 00:04:07,010
die möglicherweise nicht erstellt werden müssen.

60
00:04:07,020 --> 00:04:08,930
Was könnten Sie als Alternative tun?

61
00:04:08,940 --> 00:04:14,100
Nun, wir hätten diese Variablen einfach wieder verwenden können, also hätten wir es tun können, und was ich jetzt tun werde, ist einfach

62
00:04:14,100 --> 00:04:18,890
den Code zu tippen, den ich getan habe, um eine Lösung zu finden, weil es auf jeden Fall funktioniert hat.

63
00:04:18,920 --> 00:04:22,070
Ich lasse es dort, damit Sie Zugriff auf den Quellcode haben, wenn Sie ihn später noch einmal überprüfen möchten.

64
00:04:22,090 --> 00:04:23,580
Ich werde das auskommentieren.

65
00:04:23,640 --> 00:04:27,370
Ein anderer Ansatz wäre es gewesen, nur die Variable zu ändern.

66
00:04:27,370 --> 00:04:30,960
Jetzt werden wir die Variablen dieses Mal nicht definieren, weil ich bereits früher im Code gefunden habe,

67
00:04:30,960 --> 00:04:35,580
als wir wollten, ob wir sie einfach kopieren könnten, also gehe ich zurück und kopiere sie erneut und ich werde es tun

68
00:04:36,110 --> 00:04:37,220
Kopieren Sie Ihre vollständigen Zeilen.

69
00:04:37,230 --> 00:04:43,650
Auch wenn wir nicht brauchen, dass das Spiel vorbei ist, wird dieses Programm hier unten gelöscht und wir werden dies in Zeile 38

70
00:04:43,650 --> 00:04:44,150
tun.

71
00:04:44,160 --> 00:04:46,660
Ich werde das einfügen und ich werde löschen.

72
00:04:46,670 --> 00:04:48,570
Erstens ist das Spiel vorbei.

73
00:04:48,570 --> 00:04:54,210
Sie haben es Fehler auf all diesen im Moment und der Fehler ist variable Punktzahl ist bereits im Bereich

74
00:04:54,210 --> 00:04:54,720
definiert.

75
00:04:55,050 --> 00:04:57,510
Wir müssen jedoch nicht lesen, um sie wiederzufinden.

76
00:04:57,630 --> 00:05:04,470
Wir können zu Beginn nur das Oberteil entfernen, und wir ändern lediglich die Werte für jedes von ihnen.

77
00:05:04,470 --> 00:05:08,280
Sie können sehen, dass die Fehler verschwunden sind, wenn ich das getan habe, weil ich nicht versuche, die Variable erneut zu deklarieren.

78
00:05:08,430 --> 00:05:09,780
Wir versuchen nur, die Werte zu ändern.

79
00:05:10,170 --> 00:05:16,650
Nachdem ich das nun getan habe, können wir buchstäblich zu unserem früheren Code zurückkehren, nämlich zu dieser ersten if-Anweisung.

80
00:05:16,650 --> 00:05:17,260
Kopiere das.

81
00:05:17,300 --> 00:05:24,840
Dabei werden die ursprünglichen Variablennamen verwendet, die hier eingefügt werden.

82
00:05:25,110 --> 00:05:28,350
Nein, du hast jetzt keine Fehler und es ist, weil es genau das gleiche ist.

83
00:05:28,550 --> 00:05:34,130
Und das wird nur die Punktzahl ändern, so dass ich die Punktzahl nicht wieder auf 10000 ändern werde.

84
00:05:34,130 --> 00:05:35,950
Wir wollen das Level abschließen, um 8 zu sein.

85
00:05:35,970 --> 00:05:44,290
Das war Teil der Herausforderung und des Bonus von 200, und wir können das schaffen, und Sie sehen, wir haben die

86
00:05:44,290 --> 00:05:45,180
gleiche Leistung.

87
00:05:45,190 --> 00:05:47,290
Ihre endgültige Punktzahl war elftausendsechshundert.

88
00:05:47,300 --> 00:05:49,600
Wir haben immer noch die ursprüngliche Ausgabe von dreizehnhundert.

89
00:05:50,630 --> 00:05:52,900
Das ist also eine andere Art, es zu tun.

90
00:05:52,950 --> 00:05:57,870
Das war buchstäblich nur das Kopieren und Einfügen und dann das Entfernen des Typs aus den Variablen, um im Grunde genommen

91
00:05:57,870 --> 00:06:02,070
Java zu verwenden. Wir wollten nur die vorhandenen Variablen aktualisieren. Wir wollten keine neue Kopie erstellen. Der

92
00:06:02,870 --> 00:06:05,520
Vorteil dieses Ansatzes ist also, dass es schneller geht .

93
00:06:05,520 --> 00:06:11,940
Wir haben diesmal keine neuen Variablen erstellt, um den Speicher effektiver zu nutzen, aber die richtigen Nachteile.

94
00:06:11,940 --> 00:06:14,700
Erstens haben wir keine permanente Aufzeichnung dieser Variablen.

95
00:06:15,300 --> 00:06:19,620
Wenn wir also die Tatsache beibehalten wollten, dass das erste Ziel achthundert war und

96
00:06:19,630 --> 00:06:27,450
das Level abgeschlossen war, fünf und der Bonus 100, können wir das nicht tun, weil wir die Allianz mit variablen Werten 38 340 neu definiert haben.

97
00:06:27,450 --> 00:06:30,600
Zweitens haben wir verwendet, ist vorbei gekommen, es war für beide wahr.

98
00:06:30,600 --> 00:06:36,980
Für dieses Szenario in Zeile 42, das wir verwendet haben, ist das Spiel also vorbei, aber auch hier oben in Zeile 19.

99
00:06:36,990 --> 00:06:38,870
Das haben wir auch gemacht.

100
00:06:39,150 --> 00:06:43,640
Wenn wir also zwei Spielerergebnisse verfolgen, war vielleicht jedes Spiel für nur einen von ihnen der Fall.

101
00:06:43,650 --> 00:06:46,320
In diesem Fall haben wir es möglicherweise gar nicht gedruckt.

102
00:06:46,320 --> 00:06:48,360
Wenn das Spiel nicht vorbei wäre, wenn das Sinn macht.

103
00:06:49,110 --> 00:06:55,720
In diesem Fall verwenden wir eine Variable für zwei Dinge und um besser zu verstehen, was ich hier zu sagen versuche.

104
00:06:55,770 --> 00:07:00,810
Angenommen, wir haben beschlossen, die Formel für die Definition unserer Endpunktzahl zu ändern, und wir fügen

105
00:07:00,810 --> 00:07:05,970
der berechneten Endpunktzahl einen Bonus von 1000 hinzu, damit ich hier auf diese eine Seite in Zeile

106
00:07:06,000 --> 00:07:12,360
19 und 21 zugreifen kann für das endgültige Ergebnis, was ich tun werde, ist runterzukommen und eine Zeile einundzwanzig. Ich werde

107
00:07:12,360 --> 00:07:20,100
über das endgültige Ergebnis plus gleich 1000 sprechen. Erinnern plus gleich ist eine Abkürzung für das endgültige Ergebnis, dessen endgültiges Ergebnis plus 1000, also addieren

108
00:07:20,100 --> 00:07:24,510
wir 1000 zu dem Wert der Endpunktzahl und wenn wir das jetzt ausführen, können

109
00:07:28,120 --> 00:07:32,860
wir sagen, dass die Endpunktzahl zweitausenddreihundert war, was für unser erstes Stück Code, unseren Code,

110
00:07:32,860 --> 00:07:34,460
der online ist, richtig ist.

111
00:07:34,570 --> 00:07:39,910
Grundsätzlich der Codeblock, der in den Zeilen 23 und 22 ausgeführt wird.

112
00:07:40,210 --> 00:07:46,060
Beachten Sie jedoch, dass der zweite Wert des zweiten Codeblocks für unseren zweiten Test

113
00:07:46,060 --> 00:07:49,090
der ursprüngliche Wert von elftausendsechshundert ist.

114
00:07:49,190 --> 00:07:52,250
Mit anderen Worten, wir haben vergessen, die Änderungen in diesem zweiten Teil des Codes vorzunehmen.

115
00:07:52,260 --> 00:07:55,300
Normalerweise müssten wir das nicht manuell durchgehen und es erneut tun.

116
00:07:55,330 --> 00:07:59,440
Im Grunde geht es hier also um das Konzept der Code-Vervielfältigung.

117
00:07:59,440 --> 00:08:04,610
Infolgedessen wurden dem Endergebnis für das zweite Szenario die letzten 1000 Punkte

118
00:08:04,630 --> 00:08:06,030
nicht korrekt hinzugefügt.

119
00:08:06,040 --> 00:08:08,760
Dies ist der Nachteil beim Kopieren und Einfügen von Code, wie wir es hier getan haben.

120
00:08:08,770 --> 00:08:14,770
Weil wir natürlich den Code in Zeile 43 kopiert und eingefügt haben, der

121
00:08:14,770 --> 00:08:22,670
im Grunde genommen der Code war, bevor ich den Code in Zeile 19 323 allein 21 geändert habe.

122
00:08:22,760 --> 00:08:27,380
Langfristig verlangt es wirklich nach Fehlern, denn seien wir ehrlich, wir sind alle Menschen, wir vergessen die Dinge von

123
00:08:27,380 --> 00:08:28,390
Zeit zu Zeit.

124
00:08:28,520 --> 00:08:34,640
Und wenn Sie vergessen, die Änderungen an allen Stellen vorzunehmen, um Fehler zu verursachen, so machen wir Fehler, wir vergessen Dinge und

125
00:08:34,640 --> 00:08:39,830
es ist sehr verbreitet, wenn Sie programmieren, zumal der Code, an dem Sie arbeiten, immer komplizierter wird, wenn

126
00:08:40,000 --> 00:08:44,570
Sie viel Code duplizieren wo all dieser Code ist und welche Änderungen Sie vornehmen müssen.

127
00:08:45,320 --> 00:08:50,660
Was ich hier sage, ist, dass Sie definitiv nicht in dieses Szenario des Duplizierens von Code eintauchen

128
00:08:50,660 --> 00:08:55,610
möchten, und es gibt viele Möglichkeiten, die Notwendigkeit für doppelten Code in Ihren Projekten wirklich zu

129
00:08:55,940 --> 00:08:57,430
reduzieren oder zu eliminieren.

130
00:08:57,440 --> 00:09:02,090
In den nächsten Tagen werde ich dieses Beispiel erweitern und Ihnen zeigen,

131
00:09:02,090 --> 00:09:05,570
wie Sie Duplikate mithilfe eines Methodenkonzepts entfernen können.

132
00:09:05,570 --> 00:09:10,910
Methods hebt also das Konzept eines Codeblocks auf die nächste Ebene und ermöglicht es Ihnen

133
00:09:10,910 --> 00:09:13,680
effektiv, Code wiederzuverwenden, anstatt Code zu duplizieren.

134
00:09:14,020 --> 00:09:20,360
Was ich damit meine, ist, den Code einmal zu tippen, um ihn mehrmals wiederzuverwenden. Sagen wir im Video hier, und ich

135
00:09:20,360 --> 00:09:22,420
werde im nächsten Video damit beginnen.
