1
1

00:00:05,510  -->  00:00:08,370
So this is Part 2 of
the encapsulation videos.
2

2

00:00:08,370  -->  00:00:10,690
This is the challenge exercise.
3

3

00:00:10,690  -->  00:00:12,610
So let's type up what the challenge is.
4

4

00:00:18,960  -->  00:00:27,240
[NOISE] So this is the encapsulation
challenge to create a class and
5

5

00:00:27,240  -->  00:00:34,170
to demonstrate proper
encapsulation techniques such
6

6

00:00:34,170  -->  00:00:39,310
you've learned in the previous video.
7

7

00:00:39,310  -->  00:00:41,890
The class to create will
be called printer, and
8

8

00:00:41,890  -->  00:00:46,150
it's going to simulate a real
computer printer a laser printer.
9

9

00:00:46,150  -->  00:00:49,840
So some of the fields that should
exist in the class, should be one for
10

10

00:00:49,840  -->  00:00:54,670
the toner level, the percentage of how
much toner level is left, the number of
11

11

00:00:54,670  -->  00:00:59,350
pages that have been printed, and
also whether it's a duplex printer.
12

12

00:00:59,350  -->  00:01:04,000
Now duplex printer is capable of
printing on both sides of the paper.
13

13

00:01:04,000  -->  00:01:06,380
So you'll want to add
methods to fill up the toner,
14

14

00:01:06,380  -->  00:01:11,720
which should fill it up to a maximum
of 100% based on the current value.
15

15

00:01:11,720  -->  00:01:15,190
So if it's only 50% full, you have to
figure out a way to make sure that
16

16

00:01:15,190  -->  00:01:19,290
it doesn't go up beyond 100%, and you need
to add another method to simulate printing
17

17

00:01:19,290  -->  00:01:23,070
a page, which should increase the number
of pages printed variable as well.
18

18

00:01:23,070  -->  00:01:28,230
And you also want to take into
account the duplex functionality,
19

19

00:01:28,230  -->  00:01:32,780
and print out a message if the printer
is a duplex printer when it's printing.
20

20

00:01:32,780  -->  00:01:35,850
Finally, decide on the scope,
whether to use constructors or anything
21

21

00:01:35,850  -->  00:01:41,190
else you think is needed to demonstrate
proper encapsulation techniques.
22

22

00:01:41,190  -->  00:01:45,370
So pause the video now, go away and
check that out and try that out.
23

23

00:01:45,370  -->  00:01:49,120
And when you're ready to come back and
see my solution, start the video again and
24

24

00:01:49,120  -->  00:01:49,980
I'll go through it with you.
25

25

00:01:52,330  -->  00:01:53,340
Okay.
How did you get on,
26

26

00:01:53,340  -->  00:01:56,810
did you create a solution for
the printer class, using good sound and
27

27

00:01:56,810  -->  00:01:58,890
capitulation techniques?
28

28

00:01:58,890  -->  00:01:59,760
So, let's give it a go.
29

29

00:01:59,760  -->  00:02:02,870
We're gonna create a new
class called printer.
30

30

00:02:02,870  -->  00:02:03,450
So I'm going to go and do that now.
31

31

00:02:09,570  -->  00:02:10,490
Printer.
32

32

00:02:10,490  -->  00:02:12,620
And we need some fields.
33

33

00:02:12,620  -->  00:02:15,850
We need a field for the toner level, so
34

34

00:02:15,850  -->  00:02:19,340
I'm going to create just an integer,
private int tonerLevel.
35

35

00:02:19,340  -->  00:02:22,760
And what I'm going to do there is,
I'm gonna set that to make
36

36

00:02:22,760  -->  00:02:26,760
the only allowable values to
be between one and 100, and
37

37

00:02:26,760  -->  00:02:32,090
each number, from one to 100, is going to
be the percentage full that the toner is.
38

38

00:02:32,090  -->  00:02:36,080
Pages printer printed is going
to be an integer as well.
39

39

00:02:37,720  -->  00:02:43,230
Pages printed, and lastly whether
the printer is a duplex printer,
40

40

00:02:43,230  -->  00:02:46,840
in other words capable of printing
both double sided I should say.
41

41

00:02:46,840  -->  00:02:49,930
I'm gonna create a Boolean variable,
42

42

00:02:52,630  -->  00:02:56,290
We're gonna call it Duplex.
43

43

00:02:56,290  -->  00:03:01,280
That's set to true, that means it
is a two-sided page printer and
44

44

00:03:01,280  -->  00:03:04,560
if it's false, it's just a single page.
45

45

00:03:04,560  -->  00:03:07,820
So next we need to create a constructor.
46

46

00:03:07,820  -->  00:03:11,170
So what I'm going to do is just
that: create a constructor.
47

47

00:03:12,210  -->  00:03:13,880
And what I'm going to do is,
48

48

00:03:13,880  -->  00:03:17,910
I'm going to set two fields as
the constructor parameters.
49

49

00:03:17,910  -->  00:03:21,040
The toner level and
also whether it's duplex.
50

50

00:03:21,040  -->  00:03:25,230
I'm going to leave printers, pages
printed rather, out of the constructor,
51

51

00:03:25,230  -->  00:03:28,740
because that would normally be something
that's set in the actual printer itself.
52

52

00:03:28,740  -->  00:03:31,350
It wouldn't be something
that you would create, or
53

53

00:03:31,350  -->  00:03:33,070
you need to add into the constructor.
54

54

00:03:33,070  -->  00:03:34,350
I'm going to initialize that to zero.
55

55

00:03:34,350  -->  00:03:35,450
We're gonna click on those two.
56

56

00:03:35,450  -->  00:03:38,110
And set those as you can see there.
57

57

00:03:38,110  -->  00:03:43,780
And I'm also going to put
this.pagePrinted = 0;.
58

58

00:03:43,780  -->  00:03:47,010
We're also going to do a test here.
59

59

00:03:47,010  -->  00:03:50,770
We're going to put, If tonerLevel
60

60

00:03:52,110  -->  00:03:55,450
greater than negative 1, because we
can't allow the toner to be empty.
61

61

00:03:55,450  -->  00:03:59,500
So I want to make sure the value that
we're going to accept is between zero and
62

62

00:03:59,500  -->  00:04:04,430
100, and the toner level is less than or
equal to a 100.
63

63

00:04:04,430  -->  00:04:10,600
Then we're gonna put else.
64

64

00:04:10,600  -->  00:04:15,020
What we're going to do is we're going to
put this.tonerLevel equals negative 1.
65

65

00:04:15,020  -->  00:04:18,480
So, that's often a way
to set a variable and
66

66

00:04:18,480  -->  00:04:22,040
make it just indicate that it
hasn't been set correctly,
67

67

00:04:22,040  -->  00:04:26,090
by setting it to negative 1 if it
doesn't fulfill some validation.
68

68

00:04:26,090  -->  00:04:26,960
So that's our constructor.
69

69

00:04:28,270  -->  00:04:30,010
So next we need to create a few methods.
70

70

00:04:30,010  -->  00:04:32,870
The first one, we want to create
a method to replace the toner.
71

71

00:04:32,870  -->  00:04:36,250
Making sure we can't get it beyond 100%.
72

72

00:04:36,250  -->  00:04:39,690
So I'm gonna create a public method.
73

73

00:04:39,690  -->  00:04:44,590
It's not going to be void, it's going
to actually return and the integer is
74

74

00:04:44,590  -->  00:04:48,760
going to be how much toner we actually
added, making sure we don't exceed 100.
75

75

00:04:48,760  -->  00:04:51,090
So we're going put addToner.
76

76

00:04:51,090  -->  00:04:56,780
We're going to accept a parameter
which is the TonerAmount.
77

77

00:04:58,380  -->  00:05:03,340
So the first thing we need to do
is make sure that the amount of
78

78

00:05:03,340  -->  00:05:07,630
toner that's been passed
to this method is valid.
79

79

00:05:07,630  -->  00:05:12,350
So to do that,
by putting if(tonerLevel >0 ).
80

80

00:05:12,350  -->  00:05:17,370
Now we're doing a > in this case, because
the very effect of adding toner to a cart,
81

81

00:05:17,370  -->  00:05:21,740
to a printer is,
you need to actually add something.
82

82

00:05:21,740  -->  00:05:26,550
And like the constructor, which we set up,
which actually created printer object,
83

83

00:05:26,550  -->  00:05:29,440
that could have a value of
zero to set the initial level.
84

84

00:05:29,440  -->  00:05:32,420
We're actually now creating
a method called add toner.
85

85

00:05:32,420  -->  00:05:36,190
We're actually adding some toner
to the printer, so therefore,
86

86

00:05:36,190  -->  00:05:39,550
we want to make sure that the toner
level is actually greater than zero.
87

87

00:05:39,550  -->  00:05:42,270
So, it's greater than zero and
toner level.
88

88

00:05:42,270  -->  00:05:45,830
So, the toner amount that should
be is less than or equal to 100.
89

89

00:05:45,830  -->  00:05:48,990
This one there should be toner amount.
90

90

00:05:48,990  -->  00:05:51,540
So, that's the toner amount that
we're actually trying to add to it.
91

91

00:05:51,540  -->  00:05:53,700
And we'll come back and
add that code shortly.
92

92

00:05:53,700  -->  00:05:58,120
But we're gonna put an else Return- 1;.
93

93

00:05:58,120  -->  00:06:02,380
Again that's another way of returning
some sort of way of validation.
94

94

00:06:02,380  -->  00:06:03,860
Some sort of status.
95

95

00:06:03,860  -->  00:06:07,810
In this case we're saying,
if it falls outside
96

96

00:06:07,810  -->  00:06:11,580
of the return amount being greater than
zero and less than or equal to a hundred.
97

97

00:06:11,580  -->  00:06:16,200
We're going to return -1, which is our way
of saying you attempted to add some toner
98

98

00:06:16,200  -->  00:06:19,920
to the printer but
it was outside our valid ranges.
99

99

00:06:19,920  -->  00:06:21,370
So therefore what we need to do now is,
100

100

00:06:21,370  -->  00:06:26,460
we need to actually test the amount
of toner that's already on hand.
101

101

00:06:26,460  -->  00:06:30,960
So, we need to add to that the toner
amount that was passed to this method.
102

102

00:06:30,960  -->  00:06:35,520
And if it actually exceeds
the total amount of 100%,
103

103

00:06:35,520  -->  00:06:36,900
we need to return an error.
104

104

00:06:36,900  -->  00:06:42,550
To do that,
we are going to put if(this.tonerLevel
105

105

00:06:42,550  -->  00:06:49,490
+ tonerAmount) Is greater than 100,
Return negative one.
106

106

00:06:49,490  -->  00:06:53,090
So there's our test to say that if,
for example,
107

107

00:06:53,090  -->  00:06:55,910
there was 50% fo the toner was half full.
108

108

00:06:55,910  -->  00:06:59,570
So the value of level
of toner was set to 50.
109

109

00:06:59,570  -->  00:07:04,530
If we get past an amount of 60,
if we added the 60% to the 50,
110

110

00:07:04,530  -->  00:07:08,030
that would be actually 110% full,
which is not possible.
111

111

00:07:08,030  -->  00:07:09,470
So, we're not going to allow that.
112

112

00:07:09,470  -->  00:07:11,970
So, we're doing a test to
add those two together.
113

113

00:07:11,970  -->  00:07:14,710
And if they're greater than 100,
that means we're trying to overfill it,
114

114

00:07:14,710  -->  00:07:16,070
which is impossible.
115

115

00:07:16,070  -->  00:07:18,220
So, we're just gonna
return an invalid number.
116

116

00:07:18,220  -->  00:07:21,770
Otherwise, at this point,
we're now able to add the values,
117

117

00:07:21,770  -->  00:07:23,850
because we know that we've
validated it correctly.
118

118

00:07:23,850  -->  00:07:29,110
So, we're gonna this.tonerLevel
+= tonerAmount.
119

119

00:07:30,610  -->  00:07:31,820
Like so.
120

120

00:07:31,820  -->  00:07:40,950
And then we can put
return dot toner level.
121

121

00:07:40,950  -->  00:07:44,410
So, we're gonna actually return
the amount that it's now set to.
122

122

00:07:44,410  -->  00:07:50,440
So adding the toner and it's returning how
much toner is now in the toner cartridge.
123

123

00:07:50,440  -->  00:07:53,110
I mean returning a negative
one if there was an error.
124

124

00:07:53,110  -->  00:07:55,420
And if that's the case we're
not actually setting anything,
125

125

00:07:55,420  -->  00:07:58,320
we're not changing the value
of our toner level.
126

126

00:07:58,320  -->  00:08:01,020
So let's have a go by adding
the toner in our method.
127

127

00:08:01,020  -->  00:08:04,320
So the next thing to do is now to
actually implement the printing.
128

128

00:08:04,320  -->  00:08:06,890
So I'm going to add the printing method.
129

129

00:08:06,890  -->  00:08:10,850
So I'm going to click on public
130

130

00:08:10,850  -->  00:08:15,780
int Print pages, we're gonna call it print
131

131

00:08:15,780  -->  00:08:18,360
pages even though it's possible
to print just the one page.
132

132

00:08:18,360  -->  00:08:21,990
We're gonna put int pages,
the number of pages to print.
133

133

00:08:21,990  -->  00:08:22,490
Print.
134

134

00:08:23,910  -->  00:08:27,360
What we're going to do is we're going to
assume that the page count is actually
135

135

00:08:27,360  -->  00:08:32,250
the number of physical pieces of paper
that are going through the printer.
136

136

00:08:32,250  -->  00:08:34,990
So therefore, if we are in duplex mode,
137

137

00:08:34,990  -->  00:08:38,780
If we're printing on both sides, what we
need to do is divide the total number of
138

138

00:08:38,780  -->  00:08:43,280
pages by two because that's the net
number of pages that were printed.
139

139

00:08:43,280  -->  00:08:50,520
So what we're going to do is, we're going
to put int pages to print equals pages.
140

140

00:08:52,250  -->  00:08:58,230
And we're going to put if this.duplex,
141

141

00:08:58,230  -->  00:09:03,120
we are going to put pages to
print divided equals two.
142

142

00:09:03,120  -->  00:09:06,190
We are going to divide the total
number of pages by two
143

143

00:09:07,220  -->  00:09:08,590
if we are printing in JPEG mode.
144

144

00:09:08,590  -->  00:09:13,730
Then we also have to print out a message
to put printing in duplex mode,
145

145

00:09:13,730  -->  00:09:17,090
just so it's clear that we're
actually printing in the duplex mode.
146

146

00:09:17,090  -->  00:09:18,710
So that's our print pages method.
147

147

00:09:18,710  -->  00:09:21,800
And the other thing we need to do
is return the number of pages that
148

148

00:09:21,800  -->  00:09:22,320
were printed.
149

149

00:09:22,320  -->  00:09:25,550
So we're gonna type return,
pages to print.
150

150

00:09:25,550  -->  00:09:30,730
And of course there's also another thing
we need to do, we need to update the pages
151

151

00:09:30,730  -->  00:09:37,980
printed but for this.pagesPrinted
plus=pagesToPrint like so.
152

152

00:09:37,980  -->  00:09:40,950
alright so
153

153

00:09:40,950  -->  00:09:43,860
inside the print pages method there's a
154

154

00:09:43,860  -->  00:09:46,440
logical error now when printing the odd
155

155

00:09:46,440  -->  00:09:48,810
number of pages the result is in fact
156

156

00:09:48,810  -->  00:09:51,360
not correct for example printing five
157

157

00:09:51,360  -->  00:09:52,470
pages in duplex
158

158

00:09:52,470  -->  00:09:56,460
prints two pages instead of three so to
159

159

00:09:56,460  -->  00:09:58,140
fix that the code inside the if
160

160

00:09:58,140  -->  00:09:59,940
statement should be and i'm showing that
161

161

00:09:59,940  -->  00:10:02,600
on the screen now pages to print equals
162

162

00:10:02,600  -->  00:10:06,420
parentheses pages divided by 2 plus
163

163

00:10:06,420  -->  00:10:10,620
parentheses pages modulus 2 the modulus
164

164

00:10:10,620  -->  00:10:12,930
operator in other words and the modulus
165

165

00:10:12,930  -->  00:10:15,240
by the way or remainder operator it
166

166

00:10:15,240  -->  00:10:16,800
requires two operands and it's a
167

167

00:10:16,800  -->  00:10:18,720
division operation the remainder is
168

168

00:10:18,720  -->  00:10:21,060
returned by using that operator so
169

169

00:10:21,060  -->  00:10:23,640
basically in this scenario in case the
170

170

00:10:23,640  -->  00:10:25,770
result is an odd number of pages the
171

171

00:10:25,770  -->  00:10:27,150
remainder will be one
172

172

00:10:27,150  -->  00:10:29,250
and therefore the page to print number
173

173

00:10:29,250  -->  00:10:31,440
will in fact be correct and just to
174

174

00:10:31,440  -->  00:10:32,910
thanks to quite a few students who
175

175

00:10:32,910  -->  00:10:34,980
pointed this out i've now updated this
176

176

00:10:34,980  -->  00:10:36,750
video to reflect that all right so
177

177

00:10:36,750  -->  00:10:38,700
moving on
178

178

00:10:38,700  -->  00:10:41,730
So that's that, and the last thing
we want to do is to add a getter.
179

179

00:10:42,800  -->  00:10:45,610
So that we can actually retrieve
the number of pages printed
180

180

00:10:47,400  -->  00:10:49,070
to check that the value
was correct like so.
181

181

00:10:49,070  -->  00:10:51,900
So that's our basic class now.
182

182

00:10:51,900  -->  00:10:54,480
So let's go and try using this class.
183

183

00:10:57,640  -->  00:11:00,520
When we go to this class here now,
the main class and printer.
184

184

00:11:02,680  -->  00:11:03,400
Call it new printer.
185

185

00:11:06,220  -->  00:11:08,970
Of course the parameters are toner level,
we're gonna start with 50%,
186

186

00:11:08,970  -->  00:11:10,970
and we're gonna say true initially.
187

187

00:11:13,430  -->  00:11:16,560
So let's try doing the page count,
so we know what the page count is,
188

188

00:11:16,560  -->  00:11:22,420
it should be equal to zero, so
we'll put Initial page count is,
189

189

00:11:22,420  -->  00:11:29,160
equals printer.get pages printed.
190

190

00:11:29,160  -->  00:11:33,470
And again we're using encapsulation here
with our constructor, and also with our
191

191

00:11:33,470  -->  00:11:36,980
getter here so we're not accessing
the field directly which is correct.
192

192

00:11:36,980  -->  00:11:41,690
Encapsulation techniques object r and
data programming So lets now print say,
193

193

00:11:41,690  -->  00:11:42,500
four pages.
194

194

00:11:43,860  -->  00:11:48,970
So we are going put printer,
what we will do is put int pages
195

195

00:11:48,970  -->  00:11:56,840
printed equals printer dot print pages,
and we will say four initially.
196

196

00:11:58,710  -->  00:12:03,250
We are going to put pages printed was,
197

197

00:12:06,140  -->  00:12:09,140
because remember this is how many
physical sheets of paper were printed,
198

198

00:12:10,980  -->  00:12:18,190
pages printed and then we will
put plus new total print count.
199

199

00:12:18,190  -->  00:12:22,050
For printer = and that's gonna be our " +
200

200

00:12:22,050  -->  00:12:27,710
printer.getPagesPrinted ());.
201

201

00:12:27,710  -->  00:12:30,950
Like so, so let's try running
that first and see what it does.
202

202

00:12:34,000  -->  00:12:35,630
I'll just move this over so
we can see it a bit better.
203

203

00:12:35,630  -->  00:12:38,690
So the initial page count was zero,
which is correct.
204

204

00:12:38,690  -->  00:12:43,540
Printing in duplex mode has been set
because we just defined that to true.
205

205

00:12:43,540  -->  00:12:48,580
Pages printed was two, because that's the
total number of pages was actually four,
206

206

00:12:48,580  -->  00:12:51,360
but because we're printing on both sides,
it's only two.
207

207

00:12:51,360  -->  00:12:53,940
New total print count for
printer equals two as well.
208

208

00:12:55,230  -->  00:12:56,150
That's correct.
209

209

00:12:56,150  -->  00:12:57,490
And just to make sure,
let's do another one.
210

210

00:12:57,490  -->  00:13:04,310
Let's put, we'll put pages
printed = printer.printPages.
211

211

00:13:04,310  -->  00:13:08,880
Let's say there's another two pages.
212

212

00:13:08,880  -->  00:13:10,840
And let's just print it out again.
213

213

00:13:13,340  -->  00:13:13,840
So, let's now run that.
214

214

00:13:17,070  -->  00:13:19,760
And you can see that what's
happened here is working correctly.
215

215

00:13:19,760  -->  00:13:21,390
It's now the second example.
216

216

00:13:21,390  -->  00:13:23,110
It's printing in duplex mode again.
217

217

00:13:23,110  -->  00:13:26,590
The pages printed was one,
because we passed only two pages.
218

218

00:13:26,590  -->  00:13:29,490
We have two pages to print,
and it printed on both sides.
219

219

00:13:29,490  -->  00:13:31,560
New count print for the printer overall,
220

220

00:13:31,560  -->  00:13:35,470
is now = 3, which of course is
one more than the previous count.
221

221

00:13:35,470  -->  00:13:40,250
So that's the total number of pages, 84
pages, that have gone through the printer.
222

222

00:13:41,570  -->  00:13:45,230
So that's working, and then just to
confirm, let's set duplex to false,
223

223

00:13:45,230  -->  00:13:47,790
and what we should do is
get some different values
224

224

00:13:47,790  -->  00:13:51,070
here now because we're not printing
on both sides of the printer.
225

225

00:13:51,070  -->  00:13:52,640
Of all the paper I should say.
226

226

00:13:52,640  -->  00:13:56,140
Run that,
this your page count was equal to zero.
227

227

00:13:56,140  -->  00:13:59,970
Pages printed with a four,
new total count for printer equals four.
228

228

00:13:59,970  -->  00:14:02,030
That's because we're now
not printing in duplex,
229

229

00:14:02,030  -->  00:14:03,380
maybe we're not printing double sided.
230

230

00:14:03,380  -->  00:14:06,930
So four pages to print used
four sheets of paper, and
231

231

00:14:06,930  -->  00:14:11,710
in the second example we used another two
pieces of paper, and it needed two pages.
232

232

00:14:11,710  -->  00:14:16,240
Two, because that's we actually
passed too as a parameter.
233

233

00:14:16,240  -->  00:14:18,410
And the total print count was six.
234

234

00:14:18,410  -->  00:14:21,430
So that's the printer
class using encapsulation.
235

235

00:14:21,430  -->  00:14:26,240
So it's very, very good object
orientated sound programming practice
236

236

00:14:26,240  -->  00:14:31,150
to use encapsulation to hide that
functionality from your other classes.
237

237

00:14:31,150  -->  00:14:34,150
In this case, you can see that we're
not accessing any fields directly,
238

238

00:14:34,150  -->  00:14:38,990
and we've got proper methods that
are actually doing the appropriate
239

239

00:14:40,160  -->  00:14:45,040
calculations or adding and subtraction
numbers hidden away from the user.
240

240

00:14:45,040  -->  00:14:47,720
So if you are someone who's
using this printer class,
241

241

00:14:47,720  -->  00:14:52,100
you've got no idea of the internal
workings of that class.
242

242

00:14:52,100  -->  00:14:55,180
And in fact you don't need to know it,
because all you're doing is you're using
243

243

00:14:55,180  -->  00:14:58,170
any of these methods that
have been set to public.
244

244

00:14:58,170  -->  00:14:59,270
Scope of public.
245

245

00:14:59,270  -->  00:15:02,730
And you're using those in a correct manner
and everything's working perfectly.
246

246

00:15:02,730  -->  00:15:05,310
So that's it,
that's the encapsulation challenge.
247

247

00:15:05,310  -->  00:15:06,930
I hope you got a lot out of that.
248

248

00:15:06,930  -->  00:15:11,040
Let's move on now to the next video, where
we're gonna be talking about polymorphism
249

249

00:15:11,040  -->  00:15:13,700
and what that is and
how to use that in our Java programs.
