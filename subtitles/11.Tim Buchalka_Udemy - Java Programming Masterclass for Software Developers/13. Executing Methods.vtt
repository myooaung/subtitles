WEBVTT
1
00:00:05.240 --> 00:00:11.150
O lo que vi en el video anterior creamos un método y en este vamos a comenzar a descubrir cómo

2
00:00:11.150 --> 00:00:15.450
ejecutar ese código que hemos puesto en este nuevo método para calcular la escuela.

3
00:00:15.470 --> 00:00:17.590
Entonces, ¿cómo hacemos para ejecutar este código?

4
00:00:18.340 --> 00:00:24.690
Bueno, en primer lugar, confirme que la alineación del 28 al treinta y siete es el código que hemos pegado, por lo que lo que vamos a

5
00:00:24.690 --> 00:00:27.330
hacer hasta aquí es que eliminaremos parte de este código.

6
00:00:27.470 --> 00:00:32.310
Ahora, para el temporizador, vamos a dejar la línea seis a nueve como está, pero vamos a tomar este código.

7
00:00:32.310 --> 00:00:37.110
Este es específicamente el código que queremos ejecutar varias veces. Voy a eliminarlo y hablaremos de los motivos

8
00:00:37.110 --> 00:00:40.040
por los que no eliminaremos el otro código en breve.

9
00:00:40.130 --> 00:00:41.620
Así que tengo que borrar eso.

10
00:00:41.880 --> 00:00:42.630
Entonces ya no.

11
00:00:42.630 --> 00:00:43.530
Ahora tenemos ese código.

12
00:00:43.530 --> 00:00:45.990
Solo nos queda una aparición del código.

13
00:00:46.020 --> 00:00:48.860
Ese es el que comienza en la línea 16.

14
00:00:49.070 --> 00:00:51.140
Entonces, lo que haremos ahora es invocar nuestro nuevo método.

15
00:00:51.140 --> 00:00:53.460
Puedes ver eso en la última línea 122.

16
00:00:53.620 --> 00:00:59.030
Entonces, para invocar el método, comenzamos a escribir su nombre para calcular cómo detenerlo, sí, puede

17
00:00:59.030 --> 00:01:04.190
ver allí y calcular los puntajes en la pantalla como presionar enter allí ahora

18
00:01:04.190 --> 00:01:12.970
sabiendo que hasta que termine eso, presione enter y ese código que leerlo ahora le dice a Java que ejecute nuestro método de cálculo de puntaje.

19
00:01:13.480 --> 00:01:20.670
Entonces, básicamente, va a venir aquí automáticamente y ejecutará el código a partir de la línea 24.

20
00:01:20.690 --> 00:01:26.010
La otra cosa que quiero señalar, aunque tampoco va a deshacer ese cambio.

21
00:01:27.040 --> 00:01:27.800
Y eso quiere hacer eso.

22
00:01:27.800 --> 00:01:29.000
Eso ha cambiado de nuevo a gris.

23
00:01:29.730 --> 00:01:32.870
Si paso el mouse sobre él, dice método de cálculo de puntajes nunca utilizado.

24
00:01:32.900 --> 00:01:38.150
Esa es una forma práctica de decirle si realmente ha enseñado el nombre de un método correctamente, a

25
00:01:38.150 --> 00:01:41.900
veces puede encontrar un error y cree que lo ha enseñado correctamente.

26
00:01:41.930 --> 00:01:45.440
Si ve a un evaluador de métodos como ese, sabrá que probablemente se equivocó de nombre.

27
00:01:45.440 --> 00:01:53.510
Por ejemplo, si escribí calcular puntaje con una S mayúscula es posible que esté viendo bien ese dicho por qué no

28
00:01:53.510 --> 00:01:58.760
funciona porque tengo que calcular la puntuación allí y, como cálculo de la puntuación aquí, Java distingue

29
00:01:58.760 --> 00:02:02.830
entre mayúsculas y minúsculas, tiene que superarlo exactamente para que vuelva a funcionar.

30
00:02:02.870 --> 00:02:08.380
El hecho de que sea genial te dará una idea de ese tipo de solución para comenzar a completar y tratar

31
00:02:08.960 --> 00:02:13.250
de hacer que el editor haga el trabajo por nosotros si aparece, dice: ¿quieres decir

32
00:02:13.250 --> 00:02:19.100
calcular puntaje que efectivamente presiona enter? hace el trabajo por usted y se da cuenta ahora de que la definición del método

33
00:02:19.100 --> 00:02:24.050
de cálculo de puntaje en el almuerzo para esta frase no es excelente en absoluto, se cierne sobre

34
00:02:24.050 --> 00:02:29.720
el aire que ya no está allí o esa advertencia debería decir básicamente que es inteligencia diciendo que entiendo calcular puntaje

35
00:02:29.960 --> 00:02:34.430
y yo puede ejecutarlo realmente, es Java más que inteligente, solo nos da la advertencia que ahora

36
00:02:34.430 --> 00:02:35.060
es válida.

37
00:02:36.230 --> 00:02:41.180
Muy bien, así que llegamos al punto en el que realmente hemos configurado el código para ejecutar lo último

38
00:02:41.180 --> 00:02:42.530
que debemos hacer es ejecutarlo.

39
00:02:42.560 --> 00:02:47.330
Así que ahora tenemos que comenzar el coraje, puedes decir que tenemos nuestras definiciones de variables en la línea

40
00:02:47.330 --> 00:02:52.970
6 3 9, tienes este punto de cálculo entre paréntesis punto y coma que le dice a Java que ejecute el método y

41
00:02:52.970 --> 00:02:56.810
luego tenemos otro código después de eso y luego tenemos un método aquí abajo.

42
00:02:56.960 --> 00:02:58.670
Así que simplemente ejecutemos el código y veamos

43
00:03:02.570 --> 00:03:06.720
qué sucede y él puede decir que tenemos la misma aplicación que teníamos anteriormente, el puntaje final fue de dos mil trescientos.

44
00:03:06.720 --> 00:03:10.570
Tu puntaje final fue once mil seiscientos hasta ahora tan bueno.

45
00:03:11.830 --> 00:03:13.130
Voy a cerrar esto ahora.

46
00:03:13.190 --> 00:03:14.570
Han corrido dolor.

47
00:03:14.570 --> 00:03:15.490
La próxima vez tenemos que mirar.

48
00:03:15.500 --> 00:03:19.880
Obviamente, solo hemos hecho la mitad aquí, todavía tenemos el segundo componente, un código que comienza en la

49
00:03:19.880 --> 00:03:20.630
línea 17.

50
00:03:20.630 --> 00:03:22.850
Entonces, ¿cómo abordaremos el segundo componente?

51
00:03:22.850 --> 00:03:26.080
Bueno, ese será el tema o el tema del próximo video.

52
00:03:26.150 --> 00:03:27.080
Nos vemos en el próximo video.
