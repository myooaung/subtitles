WEBVTT
1
1

00:00:04.690  -->  00:00:06.600
- [Tim] Alright, so in the last video,
2

2

00:00:06.600  -->  00:00:09.070
we created this code that
actually copied a file
3

3

00:00:09.070  -->  00:00:11.680
and we can see that the file1.txt there
4

4

00:00:11.680  -->  00:00:14.810
got copied correctly to file1copy.txt,
5

5

00:00:14.810  -->  00:00:16.890
but I wanna show you what happens
6

6

00:00:16.890  -->  00:00:18.490
if we actually run it again
7

7

00:00:18.490  -->  00:00:21.600
and we're gonna make a
change to the IOException.
8

8

00:00:21.600  -->  00:00:24.010
What we'll do is instead
of putting the StackTrace,
9

9

00:00:24.010  -->  00:00:26.390
let's actually just print out the message,
10

10

00:00:26.390  -->  00:00:27.720
so e.getMessage.
11

11

00:00:29.890  -->  00:00:31.730
The other thing, just before
I run it just to confirm,
12

12

00:00:31.730  -->  00:00:33.310
we've got file1.txt
13

13

00:00:34.510  -->  00:00:37.370
and file1copy.txt, so you
can see they are in fact,
14

14

00:00:37.370  -->  00:00:39.170
they do have the same content,
15

15

00:00:39.170  -->  00:00:41.320
so it was a proper copy in that sense.
16

16

00:00:41.320  -->  00:00:44.090
Right, so this time we
should at the moment
17

17

00:00:44.090  -->  00:00:46.730
with the way we've configured
things, get an Exception,
18

18

00:00:46.730  -->  00:00:47.570
because the file already exists.
19

19

00:00:47.570  -->  00:00:51.730
So, let's actually run that
and see that that does happen.
20

20

00:00:52.670  -->  00:00:54.520
There you can see the
Exception was thrown,
21

21

00:00:54.520  -->  00:00:59.100
Examples/file1copy.txt was
the actual e.getMessage
22

22

00:00:59.100  -->  00:01:02.760
from the Exception that
was actually generated
23

23

00:01:02.760  -->  00:01:05.370
and the reason for that is
that the destination file,
24

24

00:01:05.370  -->  00:01:08.000
the copy already exists and by default,
25

25

00:01:08.000  -->  00:01:11.420
the Copy method then throws
an Exception, if that happens.
26

26

00:01:11.420  -->  00:01:13.560
But fortunately, we can change that.
27

27

00:01:13.560  -->  00:01:15.000
If you want the file to be copied,
28

28

00:01:15.000  -->  00:01:17.130
even when the destination
file already exists,
29

29

00:01:17.130  -->  00:01:20.110
you can pass an optional third
parameter to the Copy method,
30

30

00:01:20.110  -->  00:01:21.830
so let's actually do that.
31

31

00:01:21.830  -->  00:01:24.530
Up here on line 14, we'll
pass the third parameter
32

32

00:01:24.530  -->  00:01:27.530
StandardCopyOption.REPLACE_EXISTING.
33

33

00:01:30.600  -->  00:01:32.660
Now, if we run that again, we should avoid
34

34

00:01:32.660  -->  00:01:36.270
the Execution block being executed,
35

35

00:01:36.270  -->  00:01:38.400
the Exception block, I should say,
36

36

00:01:38.400  -->  00:01:40.260
and now we haven't got
any errors on the screen
37

37

00:01:40.260  -->  00:01:43.550
and any that the file copy
successfully went through,
38

38

00:01:43.550  -->  00:01:45.050
when the file got replaced
39

39

00:01:45.050  -->  00:01:47.550
and we didn't get the message printing out
40

40

00:01:47.550  -->  00:01:48.960
in the Exception block of code,
41

41

00:01:48.960  -->  00:01:50.760
'cause of course there
wasn't an Exception.
42

42

00:01:50.760  -->  00:01:52.130
Now, the other thing you can do is
43

43

00:01:52.130  -->  00:01:54.470
you can actually copy
directories, as well as files,
44

44

00:01:54.470  -->  00:01:55.690
using the Copy method.
45

45

00:01:55.690  -->  00:01:57.670
So, let's have a go at
actually doing that instead.
46

46

00:01:57.670  -->  00:02:00.650
We're gonna come down after that code
47

47

00:02:00.650  -->  00:02:02.260
and we're gonna put source file,
48

48

00:02:02.260  -->  00:02:04.870
well, actually what we'll
do is we'll put that here
49

49

00:02:04.870  -->  00:02:07.170
after the Copy method,
we'll put it in the block,
50

50

00:02:07.170  -->  00:02:09.670
because that's where we've
defined our path source file
51

51

00:02:09.670  -->  00:02:13.980
and copy file, so we'll
put sourceFile is equal to
52

52

00:02:13.980  -->  00:02:16.480
FileSystems.getDefault.getPath
53

53

00:02:20.330  -->  00:02:23.200
then we're gonna type
in Examples as the path
54

54

00:02:23.200  -->  00:02:25.800
and you can see in the
left project window,
55

55

00:02:25.800  -->  00:02:27.680
we've got the Examples folder,
56

56

00:02:27.680  -->  00:02:29.800
that we created in the last video,
57

57

00:02:29.800  -->  00:02:32.370
so I'm gonna put the
getPath will be Examples,
58

58

00:02:32.370  -->  00:02:35.580
that's the first argument
and the second argument,
59

59

00:02:35.580  -->  00:02:37.750
or parameter will be Dir1.
60

60

00:02:38.580  -->  00:02:39.980
So we're basically trying to copy,
61

61

00:02:39.980  -->  00:02:43.760
the source file is the directory Dir1,
62

62

00:02:43.760  -->  00:02:48.410
which is a subfolder of
the Examples directory.
63

63

00:02:48.410  -->  00:02:51.340
And the destination, we're
gonna do copyFile equals
64

64

00:02:51.340  -->  00:02:53.920
FileSystems.getDefault.getPath,
65

65

00:02:58.030  -->  00:03:00.250
we're gonna go with Examples,
66

66

00:03:00.250  -->  00:03:03.400
this time we're gonna do Dir4
67

67

00:03:03.400  -->  00:03:06.990
and you can see over here
that we've got Dir1 and Dir2
68

68

00:03:06.990  -->  00:03:08.230
and we've got a Dir3 subfolder,
69

69

00:03:08.230  -->  00:03:10.380
but we've actually got
nothing at that level
70

70

00:03:10.380  -->  00:03:12.610
at all that's relating to Dir4.
71

71

00:03:12.610  -->  00:03:14.440
And then we'll just...
72

72

00:03:16.320  -->  00:03:19.750
copy this code here and paste it,
73

73

00:03:19.750  -->  00:03:21.460
'cause that's gonna do
exactly the same thing,
74

74

00:03:21.460  -->  00:03:24.520
but this time it's going
to copy that Dir1 folder
75

75

00:03:24.520  -->  00:03:26.900
into the Dir4 folder.
76

76

00:03:26.900  -->  00:03:29.400
Let's actually try running it.
77

77

00:03:32.460  -->  00:03:35.450
And you can see over here,
I've got the Dir4 folder
78

78

00:03:35.450  -->  00:03:37.540
was successfully created
from that operation,
79

79

00:03:37.540  -->  00:03:40.370
but note that the actual
files weren't copied,
80

80

00:03:40.370  -->  00:03:41.660
so you can see that there's no way
81

81

00:03:41.660  -->  00:03:43.460
for me to navigate into that folder,
82

82

00:03:43.460  -->  00:03:46.050
because there isn't any files
and we're obviously getting
83

83

00:03:46.050  -->  00:03:47.980
this disclosure triangle on my Mac,
84

84

00:03:47.980  -->  00:03:50.480
if there are files in that folder.
85

85

00:03:50.480  -->  00:03:53.170
So, it's actually expected by
default for it not to do that.
86

86

00:03:53.170  -->  00:03:55.440
When you wanna copy a
directory and all the files
87

87

00:03:55.440  -->  00:03:56.830
and directories it contains,
88

88

00:03:56.830  -->  00:03:59.170
you have to actually walk the file tree
89

89

00:03:59.170  -->  00:04:02.080
and we'll be talking about
that in a future video
90

90

00:04:02.080  -->  00:04:04.310
in this section of the
course, how to do that.
91

91

00:04:04.310  -->  00:04:05.980
But by default, when we're copying,
92

92

00:04:05.980  -->  00:04:07.950
it copies just the folders only.
93

93

00:04:07.950  -->  00:04:12.120
I'm gonna delete Dir4, since
we won't need that anymore.
94

94

00:04:13.190  -->  00:04:15.450
But as another option,
instead of copying a file,
95

95

00:04:15.450  -->  00:04:18.470
you may wanna move it to
another directory or rename it
96

96

00:04:18.470  -->  00:04:21.500
and you can do that using
the Files.move method.
97

97

00:04:21.500  -->  00:04:22.870
So let's have a go at doing this.
98

98

00:04:22.870  -->  00:04:26.220
We'll just move the Examples/file1copy.
99

99

00:04:26.220  -->  00:04:29.250
It's this one here, that we created.
100

100

00:04:29.250  -->  00:04:32.230
Move that to the Examples/Dir1 folder,
101

101

00:04:32.230  -->  00:04:35.440
move it into this folder here.
102

102

00:04:35.440  -->  00:04:37.310
So, what we're going to do is
comment out the existing code,
103

103

00:04:37.310  -->  00:04:39.610
so that's not run each time,
104

104

00:04:39.610  -->  00:04:41.080
'cause that file of course already exists.
105

105

00:04:41.080  -->  00:04:43.090
Comment that out
106

106

00:04:43.090  -->  00:04:46.250
and let's put this at the top of the try
107

107

00:04:46.250  -->  00:04:47.750
and we'll put path
108

108

00:04:51.200  -->  00:04:53.690
fileToMove is equal to
109

109

00:04:53.690  -->  00:04:56.190
FileSystems.getDefault.getPath
110

110

00:04:58.610  -->  00:05:02.730
and we'll go Examples as the main folder
111

111

00:05:02.730  -->  00:05:05.750
and then file1copy being
the file that we wanna copy.
112

112

00:05:05.750  -->  00:05:08.130
Notice the capitalization
etc. is important here
113

113

00:05:08.130  -->  00:05:09.770
to get it exactly the same, as you can see
114

114

00:05:09.770  -->  00:05:12.880
over in the left-hand project window.
115

115

00:05:12.880  -->  00:05:14.670
That's PathToMove and the destination
116

116

00:05:14.670  -->  00:05:16.590
Path destination equals
117

117

00:05:18.780  -->  00:05:21.360
FileSystems.getDefault.getPath.
118

118

00:05:22.790  -->  00:05:26.140
We're gonna move that into
the Examples subfolder
119

119

00:05:26.140  -->  00:05:29.440
and then Dir1 folder, which is a subfolder
120

120

00:05:29.440  -->  00:05:32.130
from the Examples folder
and we're gonna use
121

121

00:05:32.130  -->  00:05:34.800
the same filename, file1copy.txt
122

122

00:05:36.430  -->  00:05:38.930
and then we just do Files.move
123

123

00:05:40.760  -->  00:05:42.670
FileToMove, destination
124

124

00:05:45.180  -->  00:05:46.990
and we'll leave the
Exception code in there,
125

125

00:05:46.990  -->  00:05:48.990
in case we get an error.
126

126

00:05:49.900  -->  00:05:51.110
Alright, so we should see
that that will appear,
127

127

00:05:51.110  -->  00:05:53.210
that file will appear
in the Dir1 subfolder
128

128

00:05:53.210  -->  00:05:55.070
of the Examples folder.
129

129

00:05:55.070  -->  00:05:56.240
We'll run that
130

130

00:05:57.530  -->  00:06:00.180
and we can see over here, file1copy.txt
131

131

00:06:00.180  -->  00:06:02.340
appears in the Dir1 folder
132

132

00:06:03.620  -->  00:06:05.470
and note that you have to specify
133

133

00:06:05.470  -->  00:06:07.330
the full path of the destination,
134

134

00:06:07.330  -->  00:06:09.390
that's down here on line 13.
135

135

00:06:09.390  -->  00:06:13.450
It's not enough to only
specify the directory.
136

136

00:06:13.450  -->  00:06:15.720
And note also that this
was a move, by the way,
137

137

00:06:15.720  -->  00:06:16.990
I didn't make that clear,
138

138

00:06:16.990  -->  00:06:19.760
so file1copy is now in the
Dir1 folder, but of course,
139

139

00:06:19.760  -->  00:06:21.260
it's also moved from where it was,
140

140

00:06:21.260  -->  00:06:23.380
which was in the Examples
folder down there,
141

141

00:06:23.380  -->  00:06:24.740
when we did the initial copy.
142

142

00:06:24.740  -->  00:06:27.920
So that was a move, but if
you wanted to rename a file,
143

143

00:06:27.920  -->  00:06:29.730
then you can just use the new filename
144

144

00:06:29.730  -->  00:06:31.790
and the destination path, as follows.
145

145

00:06:31.790  -->  00:06:34.300
So, let's actually do that.
146

146

00:06:34.300  -->  00:06:36.210
What I'll do first is comment this out.
147

147

00:06:36.210  -->  00:06:38.070
You don't want that to run again,
148

148

00:06:38.070  -->  00:06:40.200
because the source file no longer exists.
149

149

00:06:40.200  -->  00:06:42.540
So I'll put Path fileToMove,
150

150

00:06:43.940  -->  00:06:48.860
actually what I'll do, let's
just undo that change I made
151

151

00:06:48.860  -->  00:06:51.510
and we'll just change the locations.
152

152

00:06:51.510  -->  00:06:55.260
Now this time, I'm going
to specify file1.txt
153

153

00:06:57.010  -->  00:06:59.000
and let's just say I wanna rename that.
154

154

00:06:59.000  -->  00:07:01.650
What I'll do is I'll get
rid of this second argument,
155

155

00:07:01.650  -->  00:07:03.490
because we're gonna keep
it in the same folder
156

156

00:07:03.490  -->  00:07:05.820
and we'll call it file2.txt.
157

157

00:07:07.950  -->  00:07:09.900
So basically in this
case, what we're doing is
158

158

00:07:09.900  -->  00:07:13.650
we're going to rename
file1.txt to file2.txt.
159

159

00:07:15.270  -->  00:07:16.960
We're effectively moving
it into a new filename,
160

160

00:07:16.960  -->  00:07:18.880
which is the equivalent of the rename,
161

161

00:07:18.880  -->  00:07:20.260
because it's actually moving,
162

162

00:07:20.260  -->  00:07:22.740
which in essence is actually renaming.
163

163

00:07:22.740  -->  00:07:23.990
If we run this,
164

164

00:07:26.720  -->  00:07:31.010
we've now got file2.txt
from the Examples folder.
165

165

00:07:31.010  -->  00:07:32.650
Now when renaming a file,
166

166

00:07:32.650  -->  00:07:34.950
the source and destination
directories have to be the same
167

167

00:07:34.950  -->  00:07:36.380
and just to confirm that,
168

168

00:07:36.380  -->  00:07:37.560
let's actually just run this again.
169

169

00:07:37.560  -->  00:07:39.880
So, I'm just going back
and I'll rename that,
170

170

00:07:39.880  -->  00:07:42.590
I can refactor that, rename,
171

171

00:07:42.590  -->  00:07:45.340
change it back to file1.txt again
172

172

00:07:46.810  -->  00:07:49.310
and just try running it again.
173

173

00:07:51.900  -->  00:07:56.070
You can see here file1, so
let's actually make that file2
174

174

00:07:57.990  -->  00:08:00.680
and that's what I was
trying to do, file2.txt,
175

175

00:08:00.680  -->  00:08:02.600
so you can see there has been renamed.
176

176

00:08:02.600  -->  00:08:03.720
What I am going to do though,
177

177

00:08:03.720  -->  00:08:04.600
I'm gonna still need to use that file,
178

178

00:08:04.600  -->  00:08:07.320
so I'm going to refactor it again,
179

179

00:08:07.320  -->  00:08:09.740
rename and move that back to,
180

180

00:08:11.040  -->  00:08:13.950
calling it file1.txt again
181

181

00:08:13.950  -->  00:08:15.480
and I'll just comment out those lines,
182

182

00:08:15.480  -->  00:08:19.690
so that move or that rename
doesn't happen again.
183

183

00:08:19.690  -->  00:08:21.950
Now just as with the Copy method,
184

184

00:08:21.950  -->  00:08:24.260
you can actually pass
the standard Copy option
185

185

00:08:24.260  -->  00:08:27.090
.REPLACE_EXISTING as a third parameter,
186

186

00:08:27.090  -->  00:08:30.050
if you wanna move a file to
a file that already exists.
187

187

00:08:30.050  -->  00:08:32.110
An example of when you'd
want to do this might be
188

188

00:08:32.110  -->  00:08:34.110
when your application
uses temporary files,
189

189

00:08:34.110  -->  00:08:37.330
until the user explicitly asks to save.
190

190

00:08:37.330  -->  00:08:40.070
You then wanna move the temp
file to the permanent file
191

191

00:08:40.070  -->  00:08:43.020
and that file may already
exist, if the user is working on
192

192

00:08:43.020  -->  00:08:44.770
a file that they've saved before.
193

193

00:08:44.770  -->  00:08:48.000
Now you can also use the
Move method with a directory,
194

194

00:08:48.000  -->  00:08:49.890
but depending on the operating system,
195

195

00:08:49.890  -->  00:08:52.730
it might not actually work
for empty directories,
196

196

00:08:52.730  -->  00:08:54.680
which of course isn't very useful.
197

197

00:08:54.680  -->  00:08:56.780
Alright, so at this point,
we don't actually need
198

198

00:08:56.780  -->  00:08:59.450
this file1copy.txt file anymore,
199

199

00:09:00.390  -->  00:09:01.750
so it's time to delete it.
200

200

00:09:01.750  -->  00:09:02.820
Now, as you may have guessed,
201

201

00:09:02.820  -->  00:09:05.850
you can use the Files.delete
method to do this.
202

202

00:09:05.850  -->  00:09:07.700
So, we've commented out all the code,
203

203

00:09:07.700  -->  00:09:09.840
so make sure you do
that before you do this
204

204

00:09:09.840  -->  00:09:11.660
and moving forward for
the rest of this video,
205

205

00:09:11.660  -->  00:09:13.050
make sure you do comment out the code
206

206

00:09:13.050  -->  00:09:14.660
before you run it each time,
207

207

00:09:14.660  -->  00:09:17.860
'cause we're making changes to
files, or deleting them, etc.
208

208

00:09:17.860  -->  00:09:21.460
So to delete a file, file,
so it's gonna be Path,
209

209

00:09:21.460  -->  00:09:23.420
fileToDelete is equal to
210

210

00:09:23.420  -->  00:09:25.920
FileSystems.getDefault.getPath
211

211

00:09:27.970  -->  00:09:30.980
we'll go for Examples as the main folder,
212

212

00:09:30.980  -->  00:09:33.850
subfolder second argument Dir1,
213

213

00:09:33.850  -->  00:09:37.770
third argument being the
filename file1copy.txt
214

214

00:09:38.980  -->  00:09:43.300
and you guessed it
Files.delete fileToDelete.
215

215

00:09:43.300  -->  00:09:45.060
That's literally it.
216

216

00:09:45.060  -->  00:09:48.730
We should see the
file1copy.txt get deleted.
217

217

00:09:51.220  -->  00:09:53.780
And it's deleted, as you can see there.
218

218

00:09:53.780  -->  00:09:56.150
Now if we run this again at
this point, that deleted file,
219

219

00:09:56.150  -->  00:09:58.660
you should get the Exception
code block showing,
220

220

00:09:58.660  -->  00:10:01.000
so we're getting a message
there, which at this stage,
221

221

00:10:01.000  -->  00:10:03.420
the e.getMessage from the Exception
222

222

00:10:03.420  -->  00:10:05.520
is just giving us the name of
the file, which in this case,
223

223

00:10:05.520  -->  00:10:08.910
doesn't exist, because
we've already deleted it.
224

224

00:10:08.910  -->  00:10:11.100
But what we can do to avoid an Exception
225

225

00:10:11.100  -->  00:10:15.230
if a file doesn't exist is,
instead of using Files.delete,
226

226

00:10:15.230  -->  00:10:17.950
we can put Files.delete,
but call another method
227

227

00:10:17.950  -->  00:10:19.200
deleteIfExists.
228

228

00:10:20.910  -->  00:10:22.250
Now, you can probably guess
what that actually does,
229

229

00:10:22.250  -->  00:10:24.070
so if we run that again now,
230

230

00:10:24.070  -->  00:10:25.760
you can see we no longer get an error,
231

231

00:10:25.760  -->  00:10:27.930
but in this case the file doesn't exist.
232

232

00:10:27.930  -->  00:10:31.600
If we actually just
take a copy of this file
233

233

00:10:35.880  -->  00:10:37.960
and call it file1copy.txt
234

234

00:10:40.860  -->  00:10:43.690
and now if we run this code again,
235

235

00:10:46.080  -->  00:10:47.440
you can see it's deleted the file.
236

236

00:10:47.440  -->  00:10:49.330
So either way, we're not
getting an Exception anymore.
237

237

00:10:49.330  -->  00:10:51.830
So, that's a good method
to use if you don't want
238

238

00:10:51.830  -->  00:10:55.560
an Exception to be thrown
if the file doesn't exist.
239

239

00:10:55.560  -->  00:10:58.860
Now, you can use the ToDelete
method to delete directories,
240

240

00:10:58.860  -->  00:11:00.520
but they have to be empty.
241

241

00:11:00.520  -->  00:11:02.340
Now once again, when
dealing with directories,
242

242

00:11:02.340  -->  00:11:03.870
you have to walk the file tree
243

243

00:11:03.870  -->  00:11:06.070
and again, we'll be doing
that in a future video
244

244

00:11:06.070  -->  00:11:08.090
in this section of the course.
245

245

00:11:08.090  -->  00:11:09.760
Now let's end the video here.
246

246

00:11:09.760  -->  00:11:11.360
In the next video, we're
gonna actually start looking
247

247

00:11:11.360  -->  00:11:13.550
at creating files, how to go about that.
248

248

00:11:13.550  -->  00:11:15.610
So, I'll see you in the next video.
