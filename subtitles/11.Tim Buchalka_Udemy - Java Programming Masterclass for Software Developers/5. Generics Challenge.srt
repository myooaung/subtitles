1
1

00:00:05,530  -->  00:00:07,740
So it's time now for
the generics challenge.
2

2

00:00:07,740  -->  00:00:11,550
And if you haven't actually looked at the
previous videos, I do suggest you'd make
3

3

00:00:11,550  -->  00:00:15,690
sure you do that because you'll need
to understand the concepts of generics.
4

4

00:00:15,690  -->  00:00:18,740
And what I've done is I've just added this
little bit of code that I talked about
5

5

00:00:18,740  -->  00:00:21,510
right at the end of
the previous video relating to
6

6

00:00:21,510  -->  00:00:25,490
how to go about actually sorting an array
list of teams that we had in that example.
7

7

00:00:25,490  -->  00:00:27,970
You'll need to know something like
that when you're actually implementing
8

8

00:00:27,970  -->  00:00:29,590
this challenge.
9

9

00:00:29,590  -->  00:00:32,650
Let me go now and
actually type out the generics challenge.
10

10

00:00:46,480  -->  00:00:48,250
Okay, so here is the challenge.
11

11

00:00:48,250  -->  00:00:53,820
So, you'll need to create a generic class
to implement a league table for a sport.
12

12

00:00:53,820  -->  00:00:56,750
Now the class should allow teams
to be added to the list, and
13

13

00:00:56,750  -->  00:01:00,300
it should also store a list of teams
that actually belong to the league.
14

14

00:01:00,300  -->  00:01:03,740
Now, your class should have a method
to print out the teams in order.
15

15

00:01:03,740  -->  00:01:06,710
And the team at the top of
the league should be printed first.
16

16

00:01:06,710  -->  00:01:09,980
Now only teams of the same type should
be added to any particular instance of
17

17

00:01:09,980  -->  00:01:11,230
the lead class.
18

18

00:01:11,230  -->  00:01:14,090
And the program should actually
fail to compile even if an attempt
19

19

00:01:14,090  -->  00:01:15,850
is made to add it in compatible team.
20

20

00:01:15,850  -->  00:01:19,670
And this is relating to the concepts
you've learned in the last four videos
21

21

00:01:19,670  -->  00:01:20,900
in this generic section.
22

22

00:01:20,900  -->  00:01:23,590
So basically if you've watched
those videos you'll have basically
23

23

00:01:23,590  -->  00:01:27,320
everything you need to be able to go
ahead and actually do this challenge.
24

24

00:01:27,320  -->  00:01:30,200
All right, so when you're ready
pause the video and go away.
25

25

00:01:30,200  -->  00:01:32,620
And see if you can actually
figure out this challenge and
26

26

00:01:32,620  -->  00:01:34,020
come up with your own solution.
27

27

00:01:34,020  -->  00:01:36,920
When you're ready to come back and
see what my implementation is,
28

28

00:01:36,920  -->  00:01:39,790
start the video again, and
I'll actually show you how to do it.
29

29

00:01:39,790  -->  00:01:43,020
So for now, pause the video and
I'll be waiting here patiently for
30

30

00:01:43,020  -->  00:01:43,840
you to get back.
31

31

00:01:47,480  -->  00:01:49,770
Okay, so how did you get on,
did you figure out the solution?
32

32

00:01:49,770  -->  00:01:53,920
Hopefully you figured it out, and
have come up with a good alternative.
33

33

00:01:53,920  -->  00:01:56,140
And just a reminder,
I know I've said this a few times,
34

34

00:01:56,140  -->  00:01:59,040
is there is no one answer that's perfect.
35

35

00:01:59,040  -->  00:02:02,730
So if you're basically fulfilling
the criteria that I've typed in here in
36

36

00:02:02,730  -->  00:02:05,880
the challenge, and your programs
does that, then that's great.
37

37

00:02:05,880  -->  00:02:07,880
You don't have to have typed
the same code as me, so
38

38

00:02:07,880  -->  00:02:09,460
it's important to actually know that.
39

39

00:02:09,460  -->  00:02:12,240
Let's continue and start work on it.
40

40

00:02:12,240  -->  00:02:16,710
So firstly we actually need a class,
we're gonna call it league.
41

41

00:02:16,710  -->  00:02:20,100
New class, call it League.
42

42

00:02:20,100  -->  00:02:23,440
And what we're going to do
with the league, we're gonna
43

43

00:02:23,440  -->  00:02:28,070
be using generics of course, so we're
gonna come over here, T extends Team.
44

44

00:02:28,070  -->  00:02:29,780
And what I will need to
do which I haven't yet
45

45

00:02:29,780  -->  00:02:31,680
is I will need to actually
paste the Team code in.
46

46

00:02:31,680  -->  00:02:32,850
I'm gonna do that in a sec.
47

47

00:02:32,850  -->  00:02:36,590
The Team code is obviously
the code that we used previously.
48

48

00:02:36,590  -->  00:02:42,820
So I'm gonna do public String name,
49

49

00:02:42,820  -->  00:02:49,050
private ArrayList, of the same type
50

50

00:02:49,050  -->  00:02:55,090
league = new ArrayList, like so.
51

51

00:02:55,090  -->  00:02:56,880
So, I'm not sure if I've shown
you how to do this before.
52

52

00:02:56,880  -->  00:02:57,840
I think I may have.
53

53

00:02:57,840  -->  00:03:01,130
But, if you've got one IntelliJ
project open you can actually open
54

54

00:03:01,130  -->  00:03:01,940
up a second one.
55

55

00:03:01,940  -->  00:03:05,470
So, we're going to leave this one
open under File > Open Recent.
56

56

00:03:05,470  -->  00:03:09,140
I'm gonna go to the generics
challenge which was the last video
57

57

00:03:09,140  -->  00:03:10,110
prior to this one.
58

58

00:03:10,110  -->  00:03:12,740
I'll open that and
it should come up with an option here and
59

59

00:03:12,740  -->  00:03:13,930
I'm gonna select New Window.
60

60

00:03:13,930  -->  00:03:15,390
I'll select this window.
61

61

00:03:15,390  -->  00:03:19,170
It's going to effectively close this
current project, and open another one.
62

62

00:03:19,170  -->  00:03:20,520
But click on New Window.
63

63

00:03:20,520  -->  00:03:22,610
It's going to have both open at once.
64

64

00:03:22,610  -->  00:03:25,950
Then I can either come up here,
to Windows, probably the easiest way, and
65

65

00:03:25,950  -->  00:03:28,770
then choose GenericsChallenge,
which is the other project.
66

66

00:03:28,770  -->  00:03:31,610
So, what I'm going to do is start
copying some of these over, so
67

67

00:03:31,610  -->  00:03:32,680
I'm going to tab over.
68

68

00:03:32,680  -->  00:03:35,970
Now I'm gonna actually use the command
tutor on a Mac, which actually switches,
69

69

00:03:35,970  -->  00:03:38,210
and you can see down there
it's a new window project.
70

70

00:03:38,210  -->  00:03:40,960
Ctrl+Alt+Close Bracket for
Windows or Linux.
71

71

00:03:40,960  -->  00:03:45,120
And I can go to my generics challenge and
I can actually select say a player first.
72

72

00:03:45,120  -->  00:03:49,910
I can copy that, copy,
tab back over, and then paste.
73

73

00:03:52,240  -->  00:03:54,440
Now if this is depending on
the number of classes, it may or
74

74

00:03:54,440  -->  00:03:57,660
may not be appropriate for
you to actually do this amount of work.
75

75

00:03:57,660  -->  00:04:00,050
It should get tedious doing
sort of a heap like this.
76

76

00:04:00,050  -->  00:04:02,330
But, if it's only got a few classes,
it can be a good way of doing it.
77

77

00:04:02,330  -->  00:04:07,420
It's a couple and
we'd have a few more football.
78

78

00:04:07,420  -->  00:04:11,120
We might see whether we can get by with
just football and we'll come back and
79

79

00:04:11,120  -->  00:04:12,540
do some more when we need to.
80

80

00:04:12,540  -->  00:04:14,710
We'll paste that as well.
81

81

00:04:14,710  -->  00:04:20,670
Now that we've done that,
we'd just actually do a build.
82

82

00:04:20,670  -->  00:04:23,570
And I got the same error, source 1.6.
83

83

00:04:23,570  -->  00:04:25,580
I need to make sure I'm
running source 1.8.
84

84

00:04:25,580  -->  00:04:28,070
And I fixed that.
85

85

00:04:28,070  -->  00:04:31,560
That should actually make
that problem go away, okay?
86

86

00:04:31,560  -->  00:04:34,480
I'll get rid of that
window down at the bottom.
87

87

00:04:34,480  -->  00:04:37,370
Okay, so we've got now the basic
mechanism so we can go back and
88

88

00:04:37,370  -->  00:04:38,220
continue with our league.
89

89

00:04:38,220  -->  00:04:40,260
I'm gonna close down these other classes.
90

90

00:04:40,260  -->  00:04:41,510
We don't need them for a while.
91

91

00:04:41,510  -->  00:04:42,230
Go back to our league.
92

92

00:04:42,230  -->  00:04:46,590
Our league has now got an array list, got
a type there, the parameter so that we're
93

93

00:04:46,590  -->  00:04:50,790
using the team, and we're going to make
sure that that's actually enforced.
94

94

00:04:50,790  -->  00:04:52,960
And just a note here we don't
actually need to have that in there.
95

95

00:04:52,960  -->  00:04:56,930
We have always put the diamond by itself
to actually get rid of any errant,
96

96

00:04:56,930  -->  00:04:58,530
any warnings.
97

97

00:04:58,530  -->  00:05:00,350
Okay, we need to add a constructor.
98

98

00:05:00,350  -->  00:05:02,030
Constructor's only gonna
be the name of the league.
99

99

00:05:03,320  -->  00:05:10,000
We're going to add a function for add, the
public boolean add which will be the team.
100

100

00:05:11,650  -->  00:05:16,490
And to simply if(league.contains(team),
101

101

00:05:16,490  -->  00:05:20,510
return false, except any duplicates,
102

102

00:05:20,510  -->  00:05:24,780
otherwise we're gonna do a league.add.
103

103

00:05:24,780  -->  00:05:30,740
Add to the array list with team,
and return true.
104

104

00:05:30,740  -->  00:05:37,030
That is a mechanism now to allow us
to actually save teams to the league.
105

105

00:05:37,030  -->  00:05:39,020
Then the other thing we wanna
do is actually go through and
106

106

00:05:39,020  -->  00:05:39,860
show the league table.
107

107

00:05:39,860  -->  00:05:44,570
We can do that quite simply with
108

108

00:05:44,570  -->  00:05:49,460
public void showLeagueTable.
109

109

00:05:49,460  -->  00:05:56,210
And we use that Collections.sort(league).
110

110

00:05:56,210  -->  00:05:57,390
And we're gonna accept import and
111

111

00:05:57,390  -->  00:05:59,380
that should come in through
automatically by IntelliJ.
112

112

00:05:59,380  -->  00:06:03,510
Now again the reason that sort works,
is because within team
113

113

00:06:03,510  -->  00:06:07,900
we've actually written or compared to,
or obviously implements the comparable.
114

114

00:06:07,900  -->  00:06:09,490
But we've actually written
our compare to and
115

115

00:06:09,490  -->  00:06:13,460
this will be used automatically by the
collection's framework when we're sorting.
116

116

00:06:13,460  -->  00:06:17,140
As you can see that this is incredibly
powerful to have our own compare to method
117

117

00:06:17,140  -->  00:06:19,110
because it makes sorting quite trivial.
118

118

00:06:19,110  -->  00:06:21,870
And this is sort of like an automatic
thing that will actually take that into
119

119

00:06:21,870  -->  00:06:23,400
account now which is fantastic.
120

120

00:06:23,400  -->  00:06:25,410
So now that's now sorted in this method.
121

121

00:06:25,410  -->  00:06:30,280
Then we can go through and
we could put for top,
122

122

00:06:30,280  -->  00:06:34,910
the top and T call league cuz for
each entry,
123

123

00:06:34,910  -->  00:06:41,550
you can do an output of a t.getName,
+ t.ranking, like so.
124

124

00:06:41,550  -->  00:06:43,630
So that's our showLeagueTable method.
125

125

00:06:43,630  -->  00:06:46,390
And again, we defined league
to be a parameterized type.
126

126

00:06:46,390  -->  00:06:47,850
That's bound by the Team class.
127

127

00:06:47,850  -->  00:06:50,810
So in other words a Team or
any subclasses would be allowed
128

128

00:06:50,810  -->  00:06:54,160
as the type argument when we
create an instance of this league.
129

129

00:06:54,160  -->  00:06:57,860
And the parameterized type
is used in the declaration
130

130

00:06:57,860  -->  00:06:59,580
of the ArrayList up here as well.
131

131

00:06:59,580  -->  00:07:01,290
And that's obviously gonna
hold the league's teams.
132

132

00:07:01,290  -->  00:07:03,760
And also we're using that
again in the add team.
133

133

00:07:03,760  -->  00:07:06,730
And finally when we're in the for
loop in the showLeagueTable.
134

134

00:07:06,730  -->  00:07:10,280
That method sorts the arrays as
I talked about Collections.sort.
135

135

00:07:10,280  -->  00:07:12,500
And you can see that I'm
actually going through now and
136

136

00:07:12,500  -->  00:07:14,900
actually printing that
out in the right order.
137

137

00:07:14,900  -->  00:07:18,100
And again we've got the parameterized
type as well in use there.
138

138

00:07:18,100  -->  00:07:21,610
So to actually go back to the main now
we can actually write a bit of code
139

139

00:07:21,610  -->  00:07:22,230
there now.
140

140

00:07:22,230  -->  00:07:28,740
So we could put something like
League<Team<FootballPlayer>,
141

141

00:07:28,740  -->  00:07:33,200
like so, so
we're defining the type of team.
142

142

00:07:33,200  -->  00:07:38,420
And we'll call that
a footballLeague = new League and
143

143

00:07:38,420  -->  00:07:44,110
we'll say that's that AFL string,
footballLeague AFL.
144

144

00:07:44,110  -->  00:07:47,450
And what we'll need to do is to go
back and copy those variables for
145

145

00:07:47,450  -->  00:07:48,610
those various teams.
146

146

00:07:48,610  -->  00:07:51,190
So I'm just gonna head back
over to that other class.
147

147

00:07:51,190  -->  00:07:54,210
And from our main method we're
gonna add some of these.
148

148

00:07:54,210  -->  00:07:58,750
And so what I'll do is I'll
just copy a heap of these.
149

149

00:07:58,750  -->  00:08:00,530
And then I'll actually just
remove what we need to.
150

150

00:08:02,050  -->  00:08:04,040
Paste that in, so with Adelaide Crows.
151

151

00:08:06,200  -->  00:08:10,920
And then we also have these other teams
here, Melbourne, and we had Hawthorn and
152

152

00:08:10,920  -->  00:08:14,400
Fremantle, so we actually had,
in this case we actually had four teams.
153

153

00:08:14,400  -->  00:08:16,350
Let's actually go ahead now and
actually add those.
154

154

00:08:16,350  -->  00:08:22,550
So, it'd be
footballLeague.add(adelaideCrows),
155

155

00:08:22,550  -->  00:08:31,040
footballLeague.add(melbourne),
footballLeague.add(hawthorn),
156

156

00:08:31,040  -->  00:08:35,750
and footballLeague.add(fremantle).
157

157

00:08:35,750  -->  00:08:40,740
Fremantle like so, and that's actually
all working perfectly as we'd expect.
158

158

00:08:40,740  -->  00:08:44,590
But also let's go back and just copy
from the other project, the baseball
159

159

00:08:44,590  -->  00:08:47,930
league which I probably shouldn't have
deleted that, so let's just copy that one.
160

160

00:08:49,000  -->  00:08:50,190
And we come up here and
we put that in there.
161

161

00:08:50,190  -->  00:08:51,310
It's our definition.
162

162

00:08:51,310  -->  00:08:54,300
So what we need to do is copy
the BaseballPlayer class as well.
163

163

00:08:54,300  -->  00:08:59,250
So I'm just gonna come back here,
BaseballPlayer, right-click, copy, come
164

164

00:08:59,250  -->  00:09:04,360
back to our generics challenge project,
right-click and paste BaseballPlayer.
165

165

00:09:04,360  -->  00:09:07,480
And obviously that now if we go back
to league, should fix that error, so
166

166

00:09:07,480  -->  00:09:09,080
if I go back to main, I should say.
167

167

00:09:09,080  -->  00:09:10,050
And you've got that.
168

168

00:09:10,050  -->  00:09:15,180
So, if we actually now try and
add it, so footballLeague.add,
169

169

00:09:15,180  -->  00:09:18,730
baseball player team, we actually get
a compile time error, as we should now
170

170

00:09:18,730  -->  00:09:22,380
because obviously the baseball player
cannot be applied to the league,
171

171

00:09:22,380  -->  00:09:25,960
because we've actually said this
particular league, we're using generics.
172

172

00:09:25,960  -->  00:09:29,730
Yes, it's a team but
this is the type of FootballPlayer only.
173

173

00:09:29,730  -->  00:09:31,300
So that's good.
That's actually working.
174

174

00:09:31,300  -->  00:09:36,340
And now to actually print out the results,
we can do footballleague.showLeagueTable.
175

175

00:09:36,340  -->  00:09:38,480
If we do that by default,
we should run that.
176

176

00:09:38,480  -->  00:09:41,770
Haven't got any results
in there at the moment.
177

177

00:09:41,770  -->  00:09:43,040
So everything's on zero.
178

178

00:09:43,040  -->  00:09:46,000
So what we'll need to do is actually
again copy through results.
179

179

00:09:46,000  -->  00:09:49,060
We'll copy these three results.
180

180

00:09:49,060  -->  00:09:52,220
Paste those in,
let's put them in there, some results,
181

181

00:09:52,220  -->  00:09:54,290
we'll have to actually run it again.
182

182

00:09:56,430  -->  00:09:57,830
And we've actually got
things in the right order.
183

183

00:09:57,830  -->  00:10:02,130
Adelaide Crows on 4 points, Hawthorn,
2, Melbourne, 0 and Fremantle, 0.
184

184

00:10:02,130  -->  00:10:03,220
So that's actually good.
185

185

00:10:03,220  -->  00:10:04,560
So that's the basic challenge.
186

186

00:10:04,560  -->  00:10:09,230
But what I wanna do is, before I finish,
I wanna just talk a little bit more about,
187

187

00:10:09,230  -->  00:10:11,220
go through the warnings
about using raw types,
188

188

00:10:11,220  -->  00:10:13,870
cuz it's really important
to actually understand.
189

189

00:10:13,870  -->  00:10:17,910
Well actually we don't wanna do that, and
probably a little bit of code will help,
190

190

00:10:17,910  -->  00:10:21,740
cuz again the raw types are actually
allowed in order to allow the legacy code.
191

191

00:10:21,740  -->  00:10:23,370
That's code prior to Java 1.5 or
192

192

00:10:23,370  -->  00:10:29,040
code written before the generics was
introduced to Java to allow that to work.
193

193

00:10:29,040  -->  00:10:31,820
But you can't rely on the root, compiling
it to give you an error when you use those
194

194

00:10:31,820  -->  00:10:33,560
raw types,
should actually getting a warning.
195

195

00:10:33,560  -->  00:10:36,210
IntelliJ will also warn you,
but the code will compile.
196

196

00:10:36,210  -->  00:10:38,890
So again just as a confirmation we're
gonna paste a bit of code in here.
197

197

00:10:40,700  -->  00:10:45,740
And I just need,
we'll change that to Adelaide, Adelaide.
198

198

00:10:45,740  -->  00:10:48,060
And we need a couple of players.
199

199

00:10:48,060  -->  00:10:50,000
We'll go back to Beckham.
200

200

00:10:50,000  -->  00:10:54,040
Pat, we'll copy those two.
201

201

00:10:54,040  -->  00:10:57,850
And so now I probably should
have done this at the start,
202

202

00:10:57,850  -->  00:11:03,540
copy the soccer class as well, copy that,
paste it over here into this [INAUDIBLE].
203

203

00:11:03,540  -->  00:11:06,470
Okay, go back to main again.
204

204

00:11:06,470  -->  00:11:09,390
So again, in this example
this code will actually run.
205

205

00:11:09,390  -->  00:11:10,490
It's an unchecked warning.
206

206

00:11:10,490  -->  00:11:13,120
So if I actually close down the run
window you can probably see this
207

207

00:11:13,120  -->  00:11:13,770
a little bit easier.
208

208

00:11:13,770  -->  00:11:16,280
IntelliJ is gonna be telling you
that this is an unchecked call.
209

209

00:11:16,280  -->  00:11:19,790
So we're not actually defining
the types as we have up here.
210

210

00:11:19,790  -->  00:11:22,880
So the code will still actually run,
but we'll get those warnings.
211

211

00:11:22,880  -->  00:11:25,010
And notice how we can actually
add literally whatever we want.
212

212

00:11:25,010  -->  00:11:29,520
We're adding Adelaide Crows baseball
team and rawTeam to this league.
213

213

00:11:29,520  -->  00:11:32,490
And it's quite happily allowing us to do
that even though of course they're all
214

214

00:11:32,490  -->  00:11:35,480
parts of different types of sports, and
you wouldn't normally wanna do that.
215

215

00:11:35,480  -->  00:11:39,740
And this is all because we're using
the raw types, not the generics.
216

216

00:11:39,740  -->  00:11:42,940
So it's really, should hopefully really
sort of hitting home to you that you wanna
217

217

00:11:42,940  -->  00:11:46,690
be using these generics whenever you can,
cuz it makes your code cleaner,
218

218

00:11:46,690  -->  00:11:50,230
less likely to have crashes and
easy to debug essentially, cuz
219

219

00:11:50,230  -->  00:11:53,620
the errors that you're getting are gonna
be there at compile time and not obviously
220

220

00:11:53,620  -->  00:11:56,360
when the code's in production when
you're trying to fix these weird bugs.
221

221

00:11:56,360  -->  00:11:58,420
So again the real issue is the line,
something like this,
222

222

00:11:58,420  -->  00:12:01,440
where we're actually just not
specifying a type for the team.
223

223

00:12:01,440  -->  00:12:04,360
So without going into it any further,
we could actually mitigate some
224

224

00:12:04,360  -->  00:12:09,080
of these problems, to at least prevent
the rawLeague declaration from compiling.
225

225

00:12:09,080  -->  00:12:14,030
We could actually go back into our
League class where it's got T extends T,
226

226

00:12:14,030  -->  00:12:15,470
T extends Player.
227

227

00:12:15,470  -->  00:12:20,190
We could put something
like U extends Player.
228

228

00:12:23,640  -->  00:12:26,620
T extends Team, something along
those lines, if you go back and
229

229

00:12:26,620  -->  00:12:28,650
actually have a look at main.
230

230

00:12:28,650  -->  00:12:29,990
It's now requiring two parameters.
231

231

00:12:29,990  -->  00:12:31,340
And we could actually put League.
232

232

00:12:31,340  -->  00:12:38,050
We could actually force it there by
putting something like FootballPlayer,
233

233

00:12:38,050  -->  00:12:39,490
Team.
234

234

00:12:39,490  -->  00:12:42,270
That would be one way that you're solving
the problem cuz it's now actually coming
235

235

00:12:42,270  -->  00:12:45,400
up and saying that there's
a problem with the baseball team.
236

236

00:12:45,400  -->  00:12:47,510
But still not an ideal solution.
237

237

00:12:47,510  -->  00:12:48,240
And for that reason,
238

238

00:12:48,240  -->  00:12:52,050
I would actually recommend you do
yourself down in the challenge.
239

239

00:12:52,050  -->  00:12:53,840
And you actually come back and
that you do something
240

240

00:12:55,720  -->  00:12:59,750
Like we did there to actually make
it far easy to actually work with.
241

241

00:12:59,750  -->  00:13:00,820
So, that's it with generics.
242

242

00:13:00,820  -->  00:13:02,690
I hope you got a lot out of this section.
243

243

00:13:02,690  -->  00:13:07,080
And, we'll see you in the next section,
when we continue on our journey into Java.
