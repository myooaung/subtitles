WEBVTT
1
1

00:00:05.180  -->  00:00:09.430
so continue on with the challenge
our set challenge now I've mentioned at the end
2

2

00:00:09.430  -->  00:00:14.220
of the previous video that their could
potentially be a problem with our solar
3

3

00:00:14.220  -->  00:00:14.730
system map
4

4

00:00:14.730  -->  00:00:21.000
or I talk about it their being a map issue and
the issue is with the solar system because if
5

5

00:00:21.000  -->  00:00:24.600
we have a look and see how that is actually
defined what we're doing is defining it
6

6

00:00:24.600  -->  00:00:28.440
purely with the name of the body a string and there is no way to cater
7

7

00:00:28.440  -->  00:00:32.240
for the Body type and obviously because
we're using a map we only got the
8

8

00:00:32.240  -->  00:00:36.250
concept of a key and the values so how do we
get around that well its actually very
9

9

00:00:36.250  -->  00:00:40.390
common problem when attempting to store
and retrieve more complex objects
10

10

00:00:40.390  -->  00:00:43.270
whether using one of the collection
classes or a database for that matter
11

11

00:00:43.270  -->  00:00:46.320
and there are many solutions to this
problem
12

12

00:00:46.320  -->  00:00:51.020
now databases allow records to be
selected on several fields so it is
13

13

00:00:51.020  -->  00:00:55.710
possible to make a primary key that consists
of all the fields that uniquely defined
14

14

00:00:55.710  -->  00:01:00.190
each record now another instance or
another approach is creating unique
15

15

00:01:00.190  -->  00:01:03.890
serial numbers for each record such a
social security number for
16

16

00:01:03.890  -->  00:01:07.600
people in the USA National Insurance
numbers in the UK and text phone numbers
17

17

00:01:07.600  -->  00:01:11.090
in Australia and one drawback of this
approach is that you couldn't retrieve
18

18

00:01:11.090  -->  00:01:15.850
if someone's record from a map unless you
actually know their serial number now most
19

19

00:01:15.850  -->  00:01:18.750
objects that have been discovered in
the universe interestingly
20

20

00:01:18.750  -->  00:01:21.900
enough are given a serial number by the
21

21

00:01:21.900  -->  00:01:25.930
International Astronomical Union that's
these guys I'll just that on the
22

22

00:01:25.930  -->  00:01:31.020
screen out of interest these guts
actually assign that unique serial number
23

23

00:01:31.020  -->  00:01:36.610
effectively for every object that
actually found in the universe so what
24

24

00:01:36.610  -->  00:01:39.860
we could do we could replace our string
with that but that also has got
25

25

00:01:39.860  -->  00:01:44.390
disadvantages and the big one is that
the number of course must be know in
26

26

00:01:44.390  -->  00:01:46.630
order to retrieve the appropriate entity or
27

27

00:01:46.630  -->  00:01:51.530
entry from the map so in this
specific example that will probably be
28

28

00:01:51.530  -->  00:01:55.180
the best option but these examples and
challenges is designed to demonstrate
29

29

00:01:55.180  -->  00:01:59.350
techniques that can be used in many
different applications so if you have
30

30

00:01:59.350  -->  00:02:05.710
added an IAU number field to the class the
International Astronomical Union and used
31

31

00:02:05.710  -->  00:02:08.930
that and that is a perfectly valid
solution so in other words you would
32

32

00:02:08.930  -->  00:02:14.980
change referencing the name and refer instead to the IAU field use that in your look ups
33

33

00:02:14.980  -->  00:02:18.860
and obviously have that in your
heavenly body summary as well so your linking
34

34

00:02:18.860  -->  00:02:22.870
it back to that that's a valid solution
you may also concatenated the name and body
35

35

00:02:22.870  -->  00:02:28.310
type[ to create strings such as Pluto planet and planet dwarf_planet
36

36

00:02:28.310  -->  00:02:31.910
and those type of things that would also be
fine because that's covering both the
37

37

00:02:31.910  -->  00:02:36.940
name and also the body type as well but
for my solution what I'm gonna do is
38

38

00:02:36.940  -->  00:02:42.340
create a class a key class and give the
heavenly body class a field of type key
39

39

00:02:42.340  -->  00:02:45.980
because this key is gonna be closely
tied to the heavenly body class I'm
40

40

00:02:45.980  -->  00:02:50.030
gonna make it a static inner class of
the heavenly body class
41

41

00:02:50.030  -->  00:02:56.310
so lets go and that I'm going to heavenly body and come
down and put it within the class so
42

42

00:02:56.310  -->  00:03:11.720
its going to be.....
43

43

00:03:11.720  -->  00:03:38.380
.....
44

44

00:03:38.380  -->  00:03:47.930
...we are going to
create a getter for both of them Im in the
45

45

00:03:47.930  -->  00:03:55.030
wrong place it should be there so.....
46

46

00:03:55.030  -->  00:04:01.730
.....so we're
going to override that....override both our equals
47

47

00:04:01.730  -->  00:04:07.230
and our hash code so...and we'll
come back to hash code in a minute will
48

48

00:04:07.230  -->  00:04:20.310
actually do the equals first we're going to
start off...
49

49

00:04:20.310  -->  00:04:27.140
.....
50

50

00:04:27.140  -->  00:04:35.480
...we need to also check the body type and
we saw this first in the previous video so...
51

51

00:04:35.480  -->  00:04:41.020
..so we are doing a check their so if name matches then we also do
52

52

00:04:41.020  -->  00:04:45.520
a search and return the results of
comparing this.bodytype to key.getbodytype
53

53

00:04:45.520  -->  00:04:49.130
so obviously that returns
true we know that there is a match
54

54

00:04:49.130  -->  00:04:56.470
otherwise returns false....so. that's our
equals method and the hash code we are going to do
55

55

00:04:56.470  -->  00:04:59.490
very similar to what we did in fact the
same as we did so we could copy some
56

56

00:04:59.490  -->  00:05:06.260
of this code but will just type it again.....
57

57

00:05:06.260  -->  00:05:13.650
.....so as you can see the
58

58

00:05:13.650  -->  00:05:18.760
key class is very simple and gives a way to deal
with a combination of name and body type in
59

59

00:05:18.760  -->  00:05:23.660
a single object because we're gonna be
using the key in a map that's why we've
60

60

00:05:23.660  -->  00:05:27.680
needed to override equals and hashCode
methods and as you saw when I typed it
61

61

00:05:27.680  -->  00:05:31.970
pretty much identical to the methods that we previously just overrode in heavenly body
62

62

00:05:31.970  -->  00:05:35.580
itself generally speaking it's a bad
idea to have to duplicated code like
63

63

00:05:35.580  -->  00:05:40.230
this but we can fix that by making
heavenly body methods just call the method
64

64

00:05:40.230  -->  00:05:44.460
in our new key class and the equals
method still needs to check that the
65

65

00:05:44.460  -->  00:05:48.620
object being compared is a heavenly body
and must cast to a heavenly body type in
66

66

00:05:48.620  -->  00:05:52.020
order to access as a key so lets do that so go back to the
67

67

00:05:52.020  -->  00:05:57.440
equals method for heavenly body not
within the inner class that we just
68

68

00:05:57.440  -->  00:06:02.840
created this one here were going back to
the equals within the heavenly body
69

69

00:06:02.840  -->  00:06:08.310
class itself so you saw the code
on line 54 can stay the same if
70

70

00:06:08.310  -->  00:06:13.500
this equals equals object return true so if we're trying to compare the exact
71

71

00:06:13.500  -->  00:06:16.880
same object in memory we know that
that's ok we do not need to do any other
72

72

00:06:16.880  -->  00:06:20.790
checking but will change this a little bit will still
leave the test in there for checking to
73

73

00:06:20.790  -->  00:06:25.080
see whether the object instance of
heavenly body when we create our reference
74

74

00:06:25.080  -->  00:06:29.830
here heavenly body object the object equals
heavenly body objects so we need that then what
75

75

00:06:29.830  -->  00:06:34.270
we're going to do their is that is going to take this code out here because we are going to use the key code
76

76

00:06:34.270  -->  00:06:49.240
...now we got an error their and we are
77

77

00:06:49.240  -->  00:06:53.120
expecting that error because we haven't
actually added the key field to the
78

78

00:06:53.120  -->  00:06:57.880
heavenly body class the key object is gonna be effectively going to be
79

79

00:06:57.880  -->  00:07:03.190
field which is our key so we have to do that and the error will go away once we done that and
80

80

00:07:03.190  -->  00:07:06.530
the heavenly bodies hash code is actually in simpler
as a result of that because what we want
81

81

00:07:06.530  -->  00:07:11.310
to do is get rid of all of this and just
make it literally return the contents
82

82

00:07:11.310  -->  00:07:19.840
so its gonna be.......and we are getting the error because we haven't added the key to the heavenly body class so
83

83

00:07:19.840  -->  00:07:24.880
what we can now do is replace the 2 key fields name and body type with a key so I'm coming up here
84

84

00:07:24.880  -->  00:07:30.940
to the top of heavenly body and where we've
got name and body type we can delete those
85

85

00:07:30.940  -->  00:07:43.460
....instead we put.....we need to also initialize
86

86

00:07:43.460  -->  00:07:47.020
a constructor to get rid of
that error so we need to get rid of the
87

87

00:07:47.020  -->  00:07:53.630
other 2 field that we previously had that we have now deletes and.....
88

88

00:07:53.630  -->  00:08:02.150
....and even
though we've defined this as a private
89

89

00:08:02.150  -->  00:08:06.880
constructor on line 78 that
works because this is an inner class to
90

90

00:08:06.880  -->  00:08:11.050
our heavenly body and that's where we were
instantiated on line 24 in the public
91

91

00:08:11.050  -->  00:08:16.460
constructor the heavenly body and we need to remove some of those methods the getter
92

92

00:08:16.460  -->  00:08:23.840
for name and body type because they aren't in their anymore we also need to add a getter and its gonna be there for
93

93

00:08:23.840  -->  00:08:28.310
our key.....
94

94

00:08:28.310  -->  00:08:34.130
....and if we go down and
check and the other thing we need to change is
95

95

00:08:34.130  -->  00:08:40.360
the toString and can do that a little bit
different we can.....
96

96

00:08:40.360  -->  00:08:45.690
....to get that to work now
the other thing we need to do is we need to
97

97

00:08:45.690  -->  00:08:46.690
add
98

98

00:08:46.690  -->  00:08:51.200
the method or a method to make a key so
the actual implementation of the keys
99

99

00:08:51.200  -->  00:08:54.520
is not something that uses of the class
should have to know about but in order
100

100

00:08:54.520  -->  00:08:58.590
to retrieve a heavenly body from the map we need a key when all we
101

101

00:08:58.590  -->  00:09:02.600
really have is a name and a body type so in
other words what we want to do is pass
102

102

00:09:02.600  -->  00:09:08.650
and a name and body type and have a
method return the valid key which is gonna
103

103

00:09:08.650  -->  00:09:13.460
be use to look up an
entry in our map effectively so what we
104

104

00:09:13.460  -->  00:09:17.910
gonna do to do that we're going to add
that here so going to make that method
105

105

00:09:17.910  -->  00:09:20.790
public static....
106

106

00:09:20.790  -->  00:09:24.920
I'm making it static so that the key can be obtained without an instance of heavenly body to
107

107

00:09:24.920  -->  00:09:34.150
call the method on so public static....
108

108

00:09:34.150  -->  00:09:48.810
......and again
109

109

00:09:48.810  -->  00:09:53.040
they can then use what we return that key
object and they can use that to then
110

110

00:09:53.040  -->  00:09:57.950
lookups in the map object and we change to
string so we shouldn't have any errors
111

111

00:09:57.950  -->  00:10:04.330
and if we went back to equals the equals method is
now working you can see on line 55
112

112

00:10:04.330  -->  00:10:08.640
return this.key.equals this is the
equals method that's used in heavenly
113

113

00:10:08.640  -->  00:10:12.300
body and also the hash code is now this.key
because we've got the key field
114

114

00:10:12.300  -->  00:10:17.750
their as well that's working nicely ok
so we've now finished making our changes so
115

115

00:10:17.750  -->  00:10:24.780
what we need to do is go back to main and
first things first we need to add or
116

116

00:10:24.780  -->  00:10:29.270
change our new map because at the moment you can see on line 9 its got
117

117

00:10:29.270  -->  00:10:34.240
a string and a heavenly body what we
want to do is make the key no longer be
118

118

00:10:34.240  -->  00:10:39.680
a string but we want it to be the
actual key objective that we created so we can have that
119

119

00:10:39.680  -->  00:10:44.500
as....and obviously we need to change some code
120

120

00:10:44.500  -->  00:10:47.860
as well and what we need to do we got
all these references to temp.getName
121

121

00:10:47.860  -->  00:10:52.300
we wanna change all of those instead of getting the name to actually
122

122

00:10:52.300  -->  00:10:56.980
get the actual key instead so what we're
going to do is copy those and we're going to
123

123

00:10:56.980  -->  00:10:59.730
do a search and replace
124

124

00:10:59.730  -->  00:11:11.950
...temp.getName and we're
going to fix that with temp.getKey and will do a
125

125

00:11:11.950  -->  00:11:21.540
replace all and we got tempMoon.getname so we are gonna do the same thing....and replace that with....
126

126

00:11:21.540  -->  00:11:30.510
...ok so we still got some errors here plane.getName we can do the same again we just
127

127

00:11:30.510  -->  00:11:44.680
making these changes.... and again
128

128

00:11:44.680  -->  00:11:49.080
because we removed the name and the
body type and replace it with the key
129

129

00:11:49.080  -->  00:11:56.260
we need to change all those entries body.getName is another one so......
130

130

00:11:56.260  -->  00:12:12.700
...we are going to replace that as well....we
131

131

00:12:12.700  -->  00:12:20.160
must be getting down to most of these errors now ok and to go
back and check if you have look in our
132

132

00:12:20.160  -->  00:12:25.310
key the other thing is because we are referencing key what
we haven't done yet is we haven't added
133

133

00:12:25.310  -->  00:12:29.360
a  toSting to that so we should really add a toString to that method at the moment we only got
134

134

00:12:29.360  -->  00:12:34.360
the toString which is in the heavenly
body but we really need one in the keys
135

135

00:12:34.360  -->  00:12:40.160
as well if we are gonna be referencing that so what we can
do is come down here and override to
136

136

00:12:40.160  -->  00:12:52.500
string....
137

137

00:12:52.500  -->  00:12:56.060
so if we are referencing just the key we got a to
string that returns just those two items
138

138

00:12:56.060  -->  00:13:00.870
and of course in the heavenly body the
toString is the name the body type and
139

139

00:13:00.870  -->  00:13:05.740
the orbital period but they are because they are different objects now the other
140

140

00:13:05.740  -->  00:13:10.550
thing here is we need to start checking
these warnings because if we come down here on this line
141

141

00:13:10.550  -->  00:13:16.720
here on line 82 we've clearly got a
problem here and it's because we trying
142

142

00:13:16.720  -->  00:13:22.430
to access the object using the name and now we are
obviously using key so we need to change
143

143

00:13:22.430  -->  00:13:26.700
that so that we can actually pass that
parameter and get back a key because
144

144

00:13:26.700  -->  00:13:29.900
clearly that's not gonna work anymore
that now that we replace the keys
145

145

00:13:29.900  -->  00:13:35.530
which was originally a string we've now replace
that with a key object what we need to
146

146

00:13:35.530  -->  00:13:40.640
do is use our make key method for that very reason
so we know its mars so we can change
147

147

00:13:40.640  -->  00:13:47.750
that two heavenly body.....remember its a static method so that we can call this
148

148

00:13:47.750  -->  00:13:53.060
without having instance of the heavenly
body so.....
149

149

00:13:53.060  -->  00:14:04.330
....
150

150

00:14:04.330  -->  00:14:09.170
....now that's got a valid call their and
another one down here that just giving us a
151

151

00:14:09.170  -->  00:14:12.580
different message basically its saying we can replace it with a for each call so we can leave
152

152

00:14:12.580  -->  00:14:18.070
that that's no problems for now so if we run this we
should get the code all working without
153

153

00:14:18.070  -->  00:14:23.890
errors and our previous tests should still
work and I need to make a change their and that should be.....
154

154

00:14:23.890  -->  00:14:30.210
.....because
obviously we've now got a key object so that will
155

155

00:14:30.210  -->  00:14:32.940
fixed that up so run it
again
156

156

00:14:32.940  -->  00:14:40.120
ok so w should have everything working like it
was before you can see we got
157

157

00:14:40.120  -->  00:14:45.240
the Pluto is now appearing twice
as we change the body type
158

158

00:14:45.240  -->  00:14:48.760
planet to dwarf planet we still got our trues and false and everything else looks
159

159

00:14:48.760  -->  00:14:54.370
good there we got all our planets moons of Mars and
then obviously all the moons in our solar
160

160

00:14:54.370  -->  00:14:57.710
system all the ones that we've actually
defined in the code so we are now ready to
161

161

00:14:57.710  -->  00:15:03.140
test the test cases 4 and 6 and just
going back to our code again
162

162

00:15:03.140  -->  00:15:04.440
.....
163

163

00:15:04.440  -->  00:15:09.740
remember 4 we are attempting to add a duplicate to a map results in the original
164

164

00:15:09.740  -->  00:15:13.860
being replaced by a new object and number
6 2 bodies with the same name but different
165

165

00:15:13.860  -->  00:15:17.840
designations can be added to the same map
and can be retrieved from the maps so we're
166

166

00:15:17.840  -->  00:15:22.660
ready to test those now so lets go
back to main so lets do test 6 first
167

167

00:15:22.660  -->  00:15:29.650
so we can do solar system......
168

168

00:15:29.650  -->  00:15:57.020
......
169

169

00:15:57.020  -->  00:16:01.340
...and we need do the same thing but with our other
entry which of course was Pluto with a dwarf
170

170

00:16:01.340  -->  00:16:02.270
planet
171

171

00:16:02.270  -->  00:16:06.910
so we change that to the body type......we should be able to confirm that
172

172

00:16:06.910  -->  00:16:09.860
they're both in their so lets check
whether we get the output from both which will
173

173

00:16:09.860  -->  00:16:15.540
confirm basically test six is working
and you can see there from the map the
174

174

00:16:15.540  -->  00:16:21.060
last two printouts Pluto planet and 248 is the orbital period and Pluto dwarf planet
175

175

00:16:21.060  -->  00:16:25.160
so that's clearly working and the last one
test case 4 we can check that by
176

176

00:16:25.160  -->  00:16:30.670
changing the new Pluto back to a planet remember we added this new dwarf planet so if we
177

177

00:16:30.670  -->  00:16:36.650
change that and make that just a planet again
and we want to do is check the planet
178

178

00:16:36.650  -->  00:16:40.790
Pluto so it should have an orbital
period of 842 because that's the new
179

179

00:16:40.790  -->  00:16:44.660
one bearing in mind that what we wanted
to do was replaced that that was part of
180

180

00:16:44.660  -->  00:16:49.040
the challenge if it there was a duplicate
so if we do that and run it you can see
181

181

00:16:49.040  -->  00:16:53.680
that Pluto planet 842 so it has
updated it and the second entry is now null
182

182

00:16:53.680  -->  00:16:57.390
because it's no longer a dwarf planet and
that's what we are expecting it to actually
183

183

00:16:57.390  -->  00:17:01.850
do alright so we are basically done let's just
add one final bit of code because I know this
184

184

00:17:01.850  -->  00:17:06.850
video is becoming an epic again we can just
as a final check print out the entire
185

185

00:17:06.850  -->  00:17:12.590
solar system map so lets do that so make a bit of space and put....
186

186

00:17:12.590  -->  00:17:36.550
......
187

187

00:17:36.550  -->  00:17:41.600
...remember we got a toSting so that will work just fine....
188

188

00:17:41.600  -->  00:17:48.030
....and lets just run that
189

189

00:17:48.030  -->  00:17:51.790
and their you can see that we've got
the various moons and planets and so forth
190

190

00:17:51.790  -->  00:17:56.130
that's all working nicely and just to
be complete lets just change this back to a dwarf
191

191

00:17:56.130  -->  00:18:04.680
planet just to be sure that we can
actually see that in our final run and we now got our
192

192

00:18:04.680  -->  00:18:08.950
two plants back again so that's it
that's the set challenge I hope that you got a lot of of that
193

193

00:18:08.950  -->  00:18:13.440
and you enjoyed your version of creating a
solution to this
194

194

00:18:13.440  -->  00:18:15.570
so I'm going to end this video here and I'll
see you in the next video
