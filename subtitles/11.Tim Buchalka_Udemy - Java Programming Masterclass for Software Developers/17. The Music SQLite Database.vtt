WEBVTT
1
1

00:00:05.010  -->  00:00:06.960
alright so we are now going to switch to
2

2

00:00:06.960  -->  00:00:09.300
using the music database that we used in
3

3

00:00:09.300  -->  00:00:11.630
previous videos so we have a decent set
4

4

00:00:11.630  -->  00:00:14.100
of data to work with as we look into
5

5

00:00:14.100  -->  00:00:16.260
more detail performing queries using
6

6

00:00:16.260  -->  00:00:19.200
jdbc to make sure that we're all
7

7

00:00:19.200  -->  00:00:21.330
starting with the same data i've already
8

8

00:00:21.330  -->  00:00:23.520
downloaded the database again from a
9

9

00:00:23.520  -->  00:00:25.740
previous lecture that's that music .zip file
10

10

00:00:25.740  -->  00:00:28.260
I've already unzipped it and
11

11

00:00:28.260  -->  00:00:30.110
you can see here I've unzipped it into
12

12

00:00:30.110  -->  00:00:32.220
this project and this is actually a new
13

13

00:00:32.220  -->  00:00:34.380
project that i've created in IntelliJ
14

14

00:00:34.380  -->  00:00:37.400
called music so again I've just copied the
15

15

00:00:37.400  -->  00:00:40.220
music zip file from previous videos in
16

16

00:00:40.220  -->  00:00:41.940
this section of the course when we were
17

17

00:00:41.940  -->  00:00:44.280
doing command line queries unzip the file
18

18

00:00:44.280  -->  00:00:46.620
music . DB and its now in the same
19

19

00:00:46.620  -->  00:00:50.690
folder location as this new project
20

20

00:00:50.690  -->  00:00:52.970
alright so next swing over to DB browser
21

21

00:00:52.970  -->  00:00:56.300
of a sqlite and open the file to
22

22

00:00:56.300  -->  00:00:57.920
just to check it out so i'm going to
23

23

00:00:57.920  -->  00:01:00.140
come up here and click on open database
24

24

00:01:00.140  -->  00:01:03.740
i'm going to open the music db and
25

25

00:01:03.740  -->  00:01:07.710
that's in my music project and you can
26

26

00:01:07.710  -->  00:01:09.300
see there we've got some representation
27

27

00:01:09.300  -->  00:01:12.900
of the three tables albums artists and
28

28

00:01:12.900  -->  00:01:15.870
songs and we can browse but if we want
29

29

00:01:15.870  -->  00:01:17.520
to by clicking on browse data can be
30

30

00:01:17.520  -->  00:01:20.220
quite useful and we can actually see the
31

31

00:01:20.220  -->  00:01:23.370
various records as we scroll down I can
32

32

00:01:23.370  -->  00:01:26.910
change table i'm looking at artists or
33

33

00:01:26.910  -->  00:01:30.030
songs again we got a pretty good visual
34

34

00:01:30.030  -->  00:01:33.000
representation of the data in the
35

35

00:01:33.000  -->  00:01:35.970
previous videos we talked about jdbc and
36

36

00:01:35.970  -->  00:01:38.160
we weren't really that fussy on how we
37

37

00:01:38.160  -->  00:01:40.980
write the code that's because I was more
38

38

00:01:40.980  -->  00:01:43.080
interested in teaching the basics of how
39

39

00:01:43.080  -->  00:01:45.090
to connect to a database and how to
40

40

00:01:45.090  -->  00:01:48.390
perform the basic crud operations but in
41

41

00:01:48.390  -->  00:01:49.590
this video we're going to start paying
42

42

00:01:49.590  -->  00:01:51.870
more attention to how we structure our
43

43

00:01:51.870  -->  00:01:54.300
code especially since will eventually
44

44

00:01:54.300  -->  00:01:55.530
want to work with the music database
45

45

00:01:55.530  -->  00:01:59.100
from a GUI type application so what we're
46

46

00:01:59.100  -->  00:02:00.840
going to do first is start by connecting
47

47

00:02:00.840  -->  00:02:03.030
to a database and this time we're going
48

48

00:02:03.030  -->  00:02:04.320
to use string constants from the
49

49

00:02:04.320  -->  00:02:06.240
beginning i'm going to create a new
50

50

00:02:06.240  -->  00:02:08.850
package in our project called model so
51

51

00:02:08.850  -->  00:02:11.580
let's go ahead and do that expand
52

52

00:02:11.580  -->  00:02:15.850
the source folder so can see
53

53

00:02:15.850  -->  00:02:18.010
going to create a new package new
54

54

00:02:18.010  -->  00:02:24.220
package will call it model we're
55

55

00:02:24.220  -->  00:02:27.670
going to right-click model and we're
56

56

00:02:27.670  -->  00:02:29.590
going to create a class and call this
57

57

00:02:29.590  -->  00:02:35.260
one data source
58

58

00:02:35.260  -->  00:02:38.700
ok we're going to need constant for the
59

59

00:02:38.700  -->  00:02:41.260
connection string the database name the
60

60

00:02:41.260  -->  00:02:44.620
table names and also the table columns
61

61

00:02:44.620  -->  00:02:46.180
let's go ahead and do that so I'm going
62

62

00:02:46.180  -->  00:02:53.310
to start with....
63

63

00:02:53.310  -->  00:03:15.570
...
64

64

00:03:15.570  -->  00:03:17.310
now if you're on Windows machine you type
65

65

00:03:17.310  -->  00:03:19.290
....
66

66

00:03:19.290  -->  00:03:32.370
...
67

67

00:03:32.370  -->  00:03:35.470
so you that if your database your music Db is
68

68

00:03:35.470  -->  00:03:38.560
in the on the d drive in a folder called
69

69

00:03:38.560  -->  00:03:40.720
databases but in my case you can see
70

70

00:03:40.720  -->  00:03:43.320
that I'm on a mac and that's the path to
71

71

00:03:43.320  -->  00:03:46.290
the file I'm going to change that but
72

72

00:03:46.290  -->  00:03:47.260
what i would do as i did in the last
73

73

00:03:47.260  -->  00:03:49.540
video I just leave a copy of that they're so
74

74

00:03:49.540  -->  00:03:50.790
you can refer to that just to get the
75

75

00:03:50.790  -->  00:03:53.590
right syntax in my case on a mac I'm
76

76

00:03:53.590  -->  00:03:57.190
going to put....
77

77

00:03:57.190  -->  00:04:11.730
...
78

78

00:04:11.730  -->  00:04:13.900
if your on linux you do something similar
79

79

00:04:13.900  -->  00:04:15.510
because the path will be pretty much the
80

80

00:04:15.510  -->  00:04:17.760
same or at least the past structure will be
81

81

00:04:17.760  -->  00:04:19.260
obviously to be a different path for
82

82

00:04:19.260  -->  00:04:20.190
your computer
83

83

00:04:20.190  -->  00:04:23.220
alright so moving on we want to now add
84

84

00:04:23.220  -->  00:04:26.680
the table for album so it's....
85

85

00:04:26.680  -->  00:04:29.160
....
86

86

00:04:29.160  -->  00:05:18.620
...
87

87

00:05:18.620  -->  00:05:22.670
....
88

88

00:05:22.670  -->  00:06:02.270
...
89

89

00:06:02.270  -->  00:06:05.150
....because all the tables
90

90

00:06:05.150  -->  00:06:06.710
have a column called _ID
91

91

00:06:06.710  -->  00:06:09.200
and 2 of the tables have a column called
92

92

00:06:09.200  -->  00:06:11.480
name you might be tempted to have only
93

93

00:06:11.480  -->  00:06:14.210
one string constants for name and one for ID
94

94

00:06:14.210  -->  00:06:17.690
or underscore ID that we use for every
95

95

00:06:17.690  -->  00:06:19.940
table but it's better to have one string
96

96

00:06:19.940  -->  00:06:22.430
constant per table that way we can
97

97

00:06:22.430  -->  00:06:23.990
change the name of any column in a table
98

98

00:06:23.990  -->  00:06:26.720
without worrying about impacting on
99

99

00:06:26.720  -->  00:06:27.710
other tables
100

100

00:06:27.710  -->  00:06:29.240
this makes our code a lot easier to
101

101

00:06:29.240  -->  00:06:32.240
work with alright so let's keep all our
102

102

00:06:32.240  -->  00:06:34.160
databases code within the model package
103

103

00:06:34.160  -->  00:06:36.230
so instead of connecting to the database
104

104

00:06:36.230  -->  00:06:38.450
directly from the main method let's
105

105

00:06:38.450  -->  00:06:40.160
create a method within the data source
106

106

00:06:40.160  -->  00:06:42.650
class to do that we're going to declare
107

107

00:06:42.650  -->  00:06:45.140
a connection instance variable because
108

108

00:06:45.140  -->  00:06:46.880
now will want the user of the data source
109

109

00:06:46.880  -->  00:06:49.430
class to call a close method when its
110

110

00:06:49.430  -->  00:06:51.830
finished working with the database so we
111

111

00:06:51.830  -->  00:06:54.860
want do a private.....
112

112

00:06:54.860  -->  00:06:58.750
....
113

113

00:06:58.750  -->  00:07:02.440
....alright so the next thing
114

114

00:07:02.440  -->  00:07:05.030
we need to do is add an open method to
115

115

00:07:05.030  -->  00:07:07.460
open the database and a close method to
116

116

00:07:07.460  -->  00:07:16.210
close it so public boolean open....
117

117

00:07:16.210  -->  00:07:25.210
...
118

118

00:07:25.210  -->  00:07:26.840
....
119

119

00:07:26.840  -->  00:07:29.330
...
120

120

00:07:29.330  -->  00:07:33.130
....
121

121

00:07:33.130  -->  00:08:06.250
...
122

122

00:08:06.250  -->  00:08:08.690
....
123

123

00:08:08.690  -->  00:08:12.500
...
124

124

00:08:12.500  -->  00:08:14.120
....so that's the open method so the
125

125

00:08:14.120  -->  00:08:15.740
close method is....
126

126

00:08:15.740  -->  00:08:20.900
....
127

127

00:08:20.900  -->  00:08:37.760
...
128

128

00:08:37.760  -->  00:08:43.130
....
129

129

00:08:43.130  -->  00:08:50.810
...
130

130

00:08:50.810  -->  00:08:55.250
....
131

131

00:08:55.250  -->  00:08:57.740
alright so in the open method that we
132

132

00:08:57.740  -->  00:09:00.080
use driver manager to get a connection
133

133

00:09:00.080  -->  00:09:01.940
the method returns true if the
134

134

00:09:01.940  -->  00:09:04.100
connections successfully established and
135

135

00:09:04.100  -->  00:09:06.170
false otherwise and in the close method
136

136

00:09:06.170  -->  00:09:07.790
unsurprisingly we closed the
137

137

00:09:07.790  -->  00:09:09.320
connection
138

138

00:09:09.320  -->  00:09:11.160
so going back now to main dot
139

139

00:09:11.160  -->  00:09:14.810
java let's actually test this out so
140

140

00:09:14.810  -->  00:09:17.690
we're going to start by creating a new
141

141

00:09:17.690  -->  00:09:19.640
instance of our class....
142

142

00:09:19.640  -->  00:09:26.750
....
143

143

00:09:26.750  -->  00:09:47.970
...
144

144

00:09:47.970  -->  00:09:55.160
alright so lets just run this and you can
145

145

00:09:55.160  -->  00:09:56.730
see we got an error here so let's just
146

146

00:09:56.730  -->  00:10:01.070
put this down the bottom again you can
147

147

00:10:01.070  -->  00:10:02.540
see the error message there couldn't
148

148

00:10:02.540  -->  00:10:04.310
connect to database no suitable driver
149

149

00:10:04.310  -->  00:10:07.640
found and then for our sqlite jdbc
150

150

00:10:07.640  -->  00:10:10.980
driver and of course the path as well so
151

151

00:10:10.980  -->  00:10:12.770
we missed an important step
152

152

00:10:12.770  -->  00:10:14.810
we haven't added the sqlite jdbc
153

153

00:10:14.810  -->  00:10:17.100
driver and database classes to the
154

154

00:10:17.100  -->  00:10:19.490
project so let's go ahead now and go to
155

155

00:10:19.490  -->  00:10:21.170
the project structure libraries and add
156

156

00:10:21.170  -->  00:10:26.640
sqlite jar fall
157

157

00:10:26.640  -->  00:10:28.650
while I'm here going to change the
158

158

00:10:28.650  -->  00:10:35.070
project level to 8 select libraries click
159

159

00:10:35.070  -->  00:10:41.040
on + select java i'm going to select the
160

160

00:10:41.040  -->  00:10:43.440
jdbc driver that we use previously in
161

161

00:10:43.440  -->  00:10:46.740
this section of the course click on ok click on
162

162

00:10:46.740  -->  00:10:48.960
ok again try running it again this
163

163

00:10:48.960  -->  00:10:54.360
time this time we have don't have any errors so
164

164

00:10:54.360  -->  00:10:56.190
obviously the drivers now working fine
165

165

00:10:56.190  -->  00:10:58.950
now incidentally if you get your path
166

166

00:10:58.950  -->  00:10:59.850
wrong
167

167

00:10:59.850  -->  00:11:01.410
so in other words back here in the
168

168

00:11:01.410  -->  00:11:04.140
data source if you ever accidentally
169

169

00:11:04.140  -->  00:11:06.210
typed that wrong what you find will
170

170

00:11:06.210  -->  00:11:07.920
happen is if it's still a valid folder
171

171

00:11:07.920  -->  00:11:10.350
the database will get created for you
172

172

00:11:10.350  -->  00:11:12.870
but it will be an empty database and you
173

173

00:11:12.870  -->  00:11:14.340
might be wondering at that point why you
174

174

00:11:14.340  -->  00:11:15.660
aren't able to see that the various
175

175

00:11:15.660  -->  00:11:17.610
tables and that's because you've got the
176

176

00:11:17.610  -->  00:11:18.930
path wrong so do make sure you
177

177

00:11:18.930  -->  00:11:20.940
double-check and triple-check that
178

178

00:11:20.940  -->  00:11:22.890
you've got the right path especially if
179

179

00:11:22.890  -->  00:11:24.630
you've got any problems opening and
180

180

00:11:24.630  -->  00:11:26.730
getting any errors because remembering
181

181

00:11:26.730  -->  00:11:29.340
that the sqlite driver creates the
182

182

00:11:29.340  -->  00:11:31.680
database if it can't find it
183

183

00:11:31.680  -->  00:11:34.320
alright so lets now go ahead and
184

184

00:11:34.320  -->  00:11:38.460
perform our first query so the artist
185

185

00:11:38.460  -->  00:11:40.950
table has the fewest number of rows so
186

186

00:11:40.950  -->  00:11:42.270
let's select all the rows in the table
187

187

00:11:42.270  -->  00:11:45.270
and print them to the console once again
188

188

00:11:45.270  -->  00:11:46.800
we're going to add a method to the
189

189

00:11:46.800  -->  00:11:49.680
datasource class to do this now in large
190

190

00:11:49.680  -->  00:11:51.930
enterprise applications we may well create
191

191

00:11:51.930  -->  00:11:54.060
a class in the model package for each
192

192

00:11:54.060  -->  00:11:55.890
table and the connections might be
193

193

00:11:55.890  -->  00:11:58.080
coming from a connection pool but for a
194

194

00:11:58.080  -->  00:12:00.030
small database like the music one we are
195

195

00:12:00.030  -->  00:12:01.590
going to keep our database method within
196

196

00:12:01.590  -->  00:12:05.010
a data source class now in this scenario do
197

197

00:12:05.010  -->  00:12:06.780
we want the method to return results it
198

198

00:12:06.780  -->  00:12:10.080
will actually no we don't because we
199

199

00:12:10.080  -->  00:12:11.850
don't want classes that use methods in
200

200

00:12:11.850  -->  00:12:14.160
the model package to have to understand
201

201

00:12:14.160  -->  00:12:16.320
the implementation details of the model
202

202

00:12:16.320  -->  00:12:18.810
that way if we changed databases later
203

203

00:12:18.810  -->  00:12:20.730
or change to something that isn't a
204

204

00:12:20.730  -->  00:12:24.060
database an xml file for example we only
205

205

00:12:24.060  -->  00:12:25.710
have to change the code in the model
206

206

00:12:25.710  -->  00:12:28.110
package so instead of returning a
207

207

00:12:28.110  -->  00:12:30.540
resultset we can return a list of
208

208

00:12:30.540  -->  00:12:32.310
artists and that means that we're going
209

209

00:12:32.310  -->  00:12:34.440
to need classes for the artist the album
210

210

00:12:34.440  -->  00:12:37.200
and the song we're going to create these
211

211

00:12:37.200  -->  00:12:39.620
in the model package
212

212

00:12:39.620  -->  00:12:40.820
let's actually start work on that in the
213

213

00:12:40.820  -->  00:12:46.420
next video
