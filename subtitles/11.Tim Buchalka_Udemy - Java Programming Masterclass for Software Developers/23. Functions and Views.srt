1
1

00:00:05,000  -->  00:00:07,270
now before we look at prepared
2

2

00:00:07,270  -->  00:00:09,770
statements and transactions just want to
3

3

00:00:09,770  -->  00:00:12,710
quickly tie up a few loose ends first one
4

4

00:00:12,710  -->  00:00:15,950
is functions now as we saw in the previous
5

5

00:00:15,950  -->  00:00:18,620
video when we want to perform a query we
6

6

00:00:18,620  -->  00:00:21,140
build up a query string and then we pass
7

7

00:00:21,140  -->  00:00:24,280
it to statement . execute query now the
8

8

00:00:24,280  -->  00:00:25,780
same applies when our query contains
9

9

00:00:25,780  -->  00:00:28,100
functions but how do we get to the
10

10

00:00:28,100  -->  00:00:31,310
result for example if there's a query
11

11

00:00:31,310  -->  00:00:33,920
and i'll just type this in here now the
12

12

00:00:33,920  -->  00:00:36,290
query......
13

13

00:00:36,290  -->  00:00:41,230
....so how
14

14

00:00:41,230  -->  00:00:43,910
do we get to the results of that query
15

15

00:00:43,910  -->  00:00:46,040
so how do we get the count in other words
16

16

00:00:46,040  -->  00:00:47,270
from the results set
17

17

00:00:47,270  -->  00:00:49,730
let's have a look at that by adding a
18

18

00:00:49,730  -->  00:00:53,710
method to our data source class....
19

19

00:00:53,710  -->  00:00:55,120
....
20

20

00:00:55,120  -->  00:02:06,200
...
21

21

00:02:06,200  -->  00:02:09,830
alright so in other words to get the
22

22

00:02:09,830  -->  00:02:14,360
result as you can see here on line 217 we
23

23

00:02:14,360  -->  00:02:17,030
treat the function result as a column in
24

24

00:02:17,030  -->  00:02:18,590
this case since we're only asking for
25

25

00:02:18,590  -->  00:02:19,580
the count
26

26

00:02:19,580  -->  00:02:21,800
the result will be at column one let's just
27

27

00:02:21,800  -->  00:02:23,390
try this out we'll go back to our main
28

28

00:02:23,390  -->  00:02:27,290
method in the main class and just after
29

29

00:02:27,290  -->  00:02:29,570
the last query will actually add a call
30

30

00:02:29,570  -->  00:02:32,150
we'll just type....
31

31

00:02:32,150  -->  00:02:56,360
...
32

32

00:02:56,360  -->  00:03:00,560
...just in case
33

33

00:03:00,560  -->  00:03:02,660
you're wondering the fact that our
34

34

00:03:02,660  -->  00:03:05,030
constant name has table in it doesn't break
35

35

00:03:05,030  -->  00:03:07,820
the separation between our model code and
36

36

00:03:07,820  -->  00:03:09,470
the rest of the application i'm talking
37

37

00:03:09,470  -->  00:03:12,260
about this line 49 nothing about it
38

38

00:03:12,260  -->  00:03:14,000
forces me to know that the data is
39

39

00:03:14,000  -->  00:03:16,220
stored in a database
40

40

00:03:16,220  -->  00:03:17,870
alright so let's now temporarily
41

41

00:03:17,870  -->  00:03:19,610
changed to get count method to do a bit
42

42

00:03:19,610  -->  00:03:20,180
more
43

43

00:03:20,180  -->  00:03:22,130
let's bring back over to data source and
44

44

00:03:22,130  -->  00:03:24,040
they get count method again
45

45

00:03:24,040  -->  00:03:26,330
so what we're going to do is also
46

46

00:03:26,330  -->  00:03:29,690
retrieve the minimum song ID value so
47

47

00:03:29,690  -->  00:03:31,280
to do that will change our sql
48

48

00:03:31,280  -->  00:03:33,320
statement up here on line 213 to be
49

49

00:03:33,320  -->  00:04:12,120
...
50

50

00:04:12,120  -->  00:04:19,020
...alright so
51

51

00:04:19,020  -->  00:04:20,700
we're getting the min result now from our
52

52

00:04:20,700  -->  00:04:23,480
function call here on line 213 as
53

53

00:04:23,480  -->  00:04:26,580
the column 2 and adding it or
54

54

00:04:26,580  -->  00:04:29,100
extracting it into our min integer
55

55

00:04:29,100  -->  00:04:35,550
variable if we run this we can see we
56

56

00:04:35,550  -->  00:04:38,370
got count equals 53 to 15 min equals 1 so the
57

57

00:04:38,370  -->  00:04:39,930
minimum ID value is one which would be
58

58

00:04:39,930  -->  00:04:41,820
correct as the first entry in the table
59

59

00:04:41,820  -->  00:04:45,780
this works but it is good practice to
60

60

00:04:45,780  -->  00:04:48,000
assign names as the resulting columns
61

61

00:04:48,000  -->  00:04:50,730
using as so let's get back and modify
62

62

00:04:50,730  -->  00:04:53,910
the code to do that back in data source
63

63

00:04:53,910  -->  00:04:56,400
again so what we should really be doing up
64

64

00:04:56,400  -->  00:04:59,550
here on line 213 is put select count
65

65

00:04:59,550  -->  00:05:04,980
start in parentheses....
66

66

00:05:04,980  -->  00:05:09,180
...
67

67

00:05:09,180  -->  00:05:12,270
...and by doing that we can
68

68

00:05:12,270  -->  00:05:14,790
change this and using another overloaded method here
69

69

00:05:14,790  -->  00:05:17,190
instead of returning the column
70

70

00:05:17,190  -->  00:05:19,620
index number we can change that to
71

71

00:05:19,620  -->  00:05:21,720
return count....
72

72

00:05:21,720  -->  00:05:25,140
...
73

73

00:05:25,140  -->  00:05:27,780
....so we're assigning
74

74

00:05:27,780  -->  00:05:30,990
as you can see up here on line 213 the
75

75

00:05:30,990  -->  00:05:33,690
value or the return value from count and
76

76

00:05:33,690  -->  00:05:35,490
using the name count and from min
77

77

00:05:35,490  -->  00:05:37,220
we are returning that using the min_
78

78

00:05:37,220  -->  00:05:39,840
ID and we also change the
79

79

00:05:39,840  -->  00:05:42,810
result set getter methods to use column
80

80

00:05:42,810  -->  00:05:45,510
names should get the same results i'll
81

81

00:05:45,510  -->  00:05:50,250
just run this to confirm and same result
82

82

00:05:50,250  -->  00:05:53,760
counting equals 5 to 50 min equals one
83

83

00:05:53,760  -->  00:05:55,680
now doing it this way back to show you the
84

84

00:05:55,680  -->  00:05:57,990
code again up here on line 213 the
85

85

00:05:57,990  -->  00:06:01,320
means that if we alter the query to
86

86

00:06:01,320  -->  00:06:03,150
retrieve more results and the
87

87

00:06:03,150  -->  00:06:04,970
column positions of the resulting values
88

88

00:06:04,970  -->  00:06:07,320
change we won't have to change the getter
89

89

00:06:07,320  -->  00:06:08,250
calls
90

90

00:06:08,250  -->  00:06:09,990
alright so that's all there really is to
91

91

00:06:09,990  -->  00:06:12,450
working with functions but before we
92

92

00:06:12,450  -->  00:06:14,030
continue lets remove those changes we
93

93

00:06:14,030  -->  00:06:14,910
made to query min
94

94

00:06:14,910  -->  00:06:17,520
we won't be needing those so I'm going
95

95

00:06:17,520  -->  00:06:22,050
to just put it back to what it was so
96

96

00:06:22,050  -->  00:06:27,390
delete the min there so we just got
97

97

00:06:27,390  -->  00:06:29,790
select count star and parentheses that is
98

98

00:06:29,790  -->  00:06:33,630
count and i'll delete this line for
99

99

00:06:33,630  -->  00:06:36,720
minimum...
100

100

00:06:36,720  -->  00:06:40,800
....
101

101

00:06:40,800  -->  00:06:44,640
...
102

102

00:06:44,640  -->  00:06:46,380
....
103

103

00:06:46,380  -->  00:06:47,280
running it again
104

104

00:06:47,280  -->  00:06:50,340
alright still got the same result
105

105

00:06:50,340  -->  00:06:53,460
okay now let's briefly take a look at
106

106

00:06:53,460  -->  00:06:56,790
creating and querying views now I say
107

107

00:06:56,790  -->  00:06:58,140
briefly because there's really nothing
108

108

00:06:58,140  -->  00:07:00,540
special about working with views using
109

109

00:07:00,540  -->  00:07:04,410
jdbc we do exactly what we did from the
110

110

00:07:04,410  -->  00:07:06,900
command line when we need to use views
111

111

00:07:06,900  -->  00:07:09,300
from an application its possible that the
112

112

00:07:09,300  -->  00:07:11,520
views will ship with the database in
113

113

00:07:11,520  -->  00:07:13,230
addition we don't want to create the view
114

114

00:07:13,230  -->  00:07:15,900
every time the application runs so let's
115

115

00:07:15,900  -->  00:07:18,540
create the same view we created when
116

116

00:07:18,540  -->  00:07:20,370
working from the command line the one
117

117

00:07:20,370  -->  00:07:21,960
that contains the following columns the
118

118

00:07:21,960  -->  00:07:25,830
artist album track and title when the
119

119

00:07:25,830  -->  00:07:27,180
user wants to know the artist for a
120

120

00:07:27,180  -->  00:07:30,330
song we can query the view instead of a
121

121

00:07:30,330  -->  00:07:34,080
join so what we can do is go back to
122

122

00:07:34,080  -->  00:07:37,500
our db browser and execute the SQL to
123

123

00:07:37,500  -->  00:07:38,850
create the view so let's go ahead and do that
124

124

00:07:38,850  -->  00:07:44,430
db browser and just gonna open the
125

125

00:07:44,430  -->  00:07:45,870
database the previous one we worked on
126

126

00:07:45,870  -->  00:07:50,370
music DB that's now
127

127

00:07:50,370  -->  00:07:54,450
execute sql and just to save a bit of time
128

128

00:07:54,450  -->  00:07:56,880
i'm just going to paste the sql code
129

129

00:07:56,880  -->  00:08:00,390
just size it that one up you can see that
130

130

00:08:00,390  -->  00:08:02,790
basically it's just creating the view of
131

131

00:08:02,790  -->  00:08:05,460
we've worked on before take
132

132

00:08:05,460  -->  00:08:07,290
note that were using the if not exists
133

133

00:08:07,290  -->  00:08:09,690
clause though at the top so sqlite will
134

134

00:08:09,690  -->  00:08:11,220
only create the view it doesn't already
135

135

00:08:11,220  -->  00:08:14,220
exist so that's how we would normally
136

136

00:08:14,220  -->  00:08:16,620
created but i'm not actually going to
137

137

00:08:16,620  -->  00:08:19,050
run it in db browser let's go back and
138

138

00:08:19,050  -->  00:08:22,590
actually created in java code and go
139

139

00:08:22,590  -->  00:08:24,210
back to data source back up to the top
140

140

00:08:24,210  -->  00:08:27,000
and what we'll do is we'll actually add
141

141

00:08:27,000  -->  00:08:28,560
this view
142

142

00:08:28,560  -->  00:08:33,180
to our public static constants so we added
143

143

00:08:33,180  -->  00:08:36,630
below the query artists for song sort so
144

144

00:08:36,630  -->  00:08:40,140
what we need firstly is a....
145

145

00:08:40,140  -->  00:09:29,100
....
146

146

00:09:29,100  -->  00:09:32,670
space plus let's just go back to DB
147

147

00:09:32,670  -->  00:09:36,000
browser briefly and just copy this code
148

148

00:09:36,000  -->  00:09:38,430
going to paste it in here too so we
149

149

00:09:38,430  -->  00:09:40,740
can see what we're trying to create it
150

150

00:09:40,740  -->  00:09:43,650
so that's the sql code and just
151

151

00:09:43,650  -->  00:09:47,910
comment it out so that's what we're
152

152

00:09:47,910  -->  00:09:49,740
creating here with this line of code well this
153

153

00:09:49,740  -->  00:09:52,680
create artist for song views string
154

154

00:09:52,680  -->  00:09:55,440
alright so moving on we've got to now
155

155

00:09:55,440  -->  00:09:56,820
at the album's...
156

156

00:09:56,820  -->  00:12:55,000
...
157

157

00:12:55,000  -->  00:12:57,700
that's it hope we haven't made any typos
158

158

00:12:57,700  -->  00:13:00,370
but will check that as well so now
159

159

00:13:00,370  -->  00:13:01,930
what we're going to do is create the
160

160

00:13:01,930  -->  00:13:04,600
method that will use to create the view
161

161

00:13:04,600  -->  00:13:08,620
lets go and do that.....
162

162

00:13:08,620  -->  00:14:28,200
....
163

163

00:14:28,200  -->  00:14:31,770
alright so there's our method to create
164

164

00:14:31,770  -->  00:14:36,480
the view for song artist so we're
165

165

00:14:36,480  -->  00:14:38,460
returning true to the caller when the
166

166

00:14:38,460  -->  00:14:40,320
view is successfully created and false
167

167

00:14:40,320  -->  00:14:42,540
otherwise now what we'll do is
168

168

00:14:42,540  -->  00:14:44,460
we'll get back to main and just try
169

169

00:14:44,460  -->  00:14:45,960
running this to make sure that it
170

170

00:14:45,960  -->  00:14:47,010
does work
171

171

00:14:47,010  -->  00:14:51,330
so do...
172

172

00:14:51,330  -->  00:14:58,200
....just try running that we haven't
173

173

00:14:58,200  -->  00:14:59,700
got any messages here indicating there's
174

174

00:14:59,700  -->  00:15:01,260
any sort of an error so that's a good sign
175

175

00:15:01,260  -->  00:15:04,230
that we got the typing correct
176

176

00:15:04,230  -->  00:15:06,720
now let's swing over before I finish
177

177

00:15:06,720  -->  00:15:09,780
this video to the Db sqlite browser and
178

178

00:15:09,780  -->  00:15:11,700
confirm that it's in there so switching
179

179

00:15:11,700  -->  00:15:14,910
over to that again we're going to browse
180

180

00:15:14,910  -->  00:15:17,130
data tab and if you're already in the
181

181

00:15:17,130  -->  00:15:18,870
you might need to do a refresh by clicking on
182

182

00:15:18,870  -->  00:15:21,930
that button and now if we click on tables you see
183

183

00:15:21,930  -->  00:15:23,340
the artist_list here note
184

184

00:15:23,340  -->  00:15:24,930
that the icons a little bit different
185

185

00:15:24,930  -->  00:15:26,520
to the other ones so that's the icon
186

186

00:15:26,520  -->  00:15:28,080
for a view as opposed to these other
187

187

00:15:28,080  -->  00:15:30,300
ones albums artists and songs which is a
188

188

00:15:30,300  -->  00:15:33,660
table so that's the data but also the database
189

189

00:15:33,660  -->  00:15:35,880
structure can see down here views
190

190

00:15:35,880  -->  00:15:39,540
we've got this artist_list we
191

191

00:15:39,540  -->  00:15:41,310
can see what fields are represented
192

192

00:15:41,310  -->  00:15:44,550
it is pretty cool so go
193

193

00:15:44,550  -->  00:15:47,460
back now to browse data select artist_list
194

194

00:15:47,460  -->  00:15:50,220
there's our data and the view
195

195

00:15:50,220  -->  00:15:52,290
is obviously working and returning
196

196

00:15:52,290  -->  00:15:54,270
things in the right order theirs one record
197

197

00:15:54,270  -->  00:15:56,940
per song effectively you can see down here
198

198

00:15:56,940  -->  00:15:59,190
1 -11 of 5350 which was the
199

199

00:15:59,190  -->  00:16:01,020
number that we will be saw returned in
200

200

00:16:01,020  -->  00:16:03,360
the count earlier in this video so it's
201

201

00:16:03,360  -->  00:16:04,590
obviously the number of songs in the
202

202

00:16:04,590  -->  00:16:07,380
database and just to confirm if i go
203

203

00:16:07,380  -->  00:16:12,000
back and run this again we're still not
204

204

00:16:12,000  -->  00:16:13,650
getting an error and that's because in
205

205

00:16:13,650  -->  00:16:17,520
the data source in the view that we
206

206

00:16:17,520  -->  00:16:21,240
created up at the top the code
207

207

00:16:21,240  -->  00:16:24,060
we used if not exists so therefore
208

208

00:16:24,060  -->  00:16:25,520
because it's now existing is not trying
209

209

00:16:25,520  -->  00:16:27,690
to recreate the view alright let me
210

210

00:16:27,690  -->  00:16:30,480
just clean this up deleting that now and
211

211

00:16:30,480  -->  00:16:32,010
that will finish the video at this point
212

212

00:16:32,010  -->  00:16:35,330
in the next video will continue on and
213

213

00:16:35,330  -->  00:16:37,560
start using this query see you in the
214

214

00:16:37,560  -->  00:16:42,980
next video
