WEBVTT
1
1

00:00:04.870  -->  00:00:06.280
<v Narrator>In this video, we'll extend</v>
2

2

00:00:06.280  -->  00:00:10.470
what we've done to using other variables in expressions.
3

3

00:00:10.470  -->  00:00:13.240
Today we've used literal values in our expressions,
4

4

00:00:13.240  -->  00:00:16.740
and used operators such as in the example we ended up with
5

5

00:00:16.740  -->  00:00:19.920
on line six, which is 10 plus five in parenthesis
6

6

00:00:19.920  -->  00:00:23.100
plus two times 10 in parenthesis.
7

7

00:00:23.100  -->  00:00:25.107
We need to declare two more variables,
8

8

00:00:25.107  -->  00:00:26.580
and I think it's time for a challenge
9

9

00:00:26.580  -->  00:00:27.930
to get you to do just that.
10

10

00:00:28.970  -->  00:00:31.410
So the challenge is to create additional variables,
11

11

00:00:31.410  -->  00:00:32.590
two in fact.
12

12

00:00:32.590  -->  00:00:33.423
So we're going to clear
13

13

00:00:33.423  -->  00:00:35.910
the following variables and add them to our programme.
14

14

00:00:35.910  -->  00:00:39.490
We want a variable called mySecondNumber which is an int,
15

15

00:00:39.490  -->  00:00:42.648
and you want to find a value of 12 to that variable.
16

16

00:00:42.648  -->  00:00:46.570
The second variable to caret is called myThirdNumber,
17

17

00:00:46.570  -->  00:00:50.720
also of type int and assign a value six to that.
18

18

00:00:50.720  -->  00:00:52.300
So put the declaration statements
19

19

00:00:52.300  -->  00:00:53.923
above the system.out.prinln.
20

20

00:00:54.900  -->  00:00:57.340
And you'll see why later on in the video.
21

21

00:00:57.340  -->  00:00:58.760
So for now, pause the video,
22

22

00:00:58.760  -->  00:01:02.000
add the declarations for our two variables to the programme,
23

23

00:01:02.000  -->  00:01:04.500
and come back and resume when you're ready to move forward.
24

24

00:01:04.500  -->  00:01:05.533
Pause the video now.
25

25

00:01:08.050  -->  00:01:09.130
All right, so welcome back.
26

26

00:01:09.130  -->  00:01:11.650
Let's go ahead and add our two additional variables.
27

27

00:01:11.650  -->  00:01:13.568
We'll declare two lines there.
28

28

00:01:13.568  -->  00:01:15.300
Immediately under our first line
29

29

00:01:15.300  -->  00:01:17.483
and above our System.out.println.
30

30

00:01:18.874  -->  00:01:21.270
The first one will be int mySecondNumber
31

31

00:01:24.270  -->  00:01:27.930
is equal to, we want a value of 12 for that.
32

32

00:01:27.930  -->  00:01:30.767
Semicolon, turn the line, then int myThirdNumber
33

33

00:01:32.500  -->  00:01:34.623
equals six, semicolon.
34

34

00:01:35.540  -->  00:01:37.240
All right, I'll just put a return there
35

35

00:01:37.240  -->  00:01:38.590
just to space out the code.
36

36

00:01:39.640  -->  00:01:43.230
All right so let's add two additional variables.
37

37

00:01:43.230  -->  00:01:45.210
Is there a way that we can sum
38

38

00:01:45.210  -->  00:01:46.267
the values of mySecondNumber
39

39

00:01:46.267  -->  00:01:49.270
and myThirdNumber into another variable?
40

40

00:01:49.270  -->  00:01:51.540
Why yes, yes there is.
41

41

00:01:51.540  -->  00:01:53.500
So instead of using a literal number,
42

42

00:01:53.500  -->  00:01:55.890
which is all we've really seen so far in the course
43

43

00:01:55.890  -->  00:01:59.110
for assigning a value to our variables,
44

44

00:01:59.110  -->  00:02:02.287
let's use a variable name directly in the expression.
45

45

00:02:02.287  -->  00:02:05.110
And we can do that by typing int, myTotal
46

46

00:02:07.040  -->  00:02:10.630
is equal to, and let's actually start by typing
47

47

00:02:10.630  -->  00:02:12.074
myFirstNumber.
48

48

00:02:12.074  -->  00:02:14.520
Noticing that intellij's help thing is here.
49

49

00:02:14.520  -->  00:02:16.023
Plus, mySecondNumber,
50

50

00:02:16.980  -->  00:02:18.240
and the good thing about this is
51

51

00:02:18.240  -->  00:02:20.240
we're not limited to two parts in this expression.
52

52

00:02:20.240  -->  00:02:22.580
We can continue, so let's add another one.
53

53

00:02:22.580  -->  00:02:23.863
Plus myThirdNumber.
54

54

00:02:25.510  -->  00:02:28.220
I'm gonna add a semicolon to complete the line.
55

55

00:02:28.220  -->  00:02:31.110
Now if you have the variables or expressions
56

56

00:02:31.110  -->  00:02:31.943
that you wanted to add,
57

57

00:02:31.943  -->  00:02:33.190
you could keep going and make this
58

58

00:02:33.190  -->  00:02:35.820
an extremely complicated expression.
59

59

00:02:35.820  -->  00:02:37.300
Java will quite happily read that
60

60

00:02:37.300  -->  00:02:39.763
and convert it and be able to process that.
61

61

00:02:40.630  -->  00:02:42.530
Right, so the expression now, according to me,
62

62

00:02:42.530  -->  00:02:44.760
should be myFirstNumber,
63

63

00:02:44.760  -->  00:02:46.900
and we know that myFirstNumber was 35,
64

64

00:02:46.900  -->  00:02:48.170
cause we can still see in the output.
65

65

00:02:48.170  -->  00:02:52.120
MySecondNumber is 12, and MyThirdNumber is six.
66

66

00:02:52.120  -->  00:02:55.860
So 35 plus 12 is 47, plus six is 53.
67

67

00:02:55.860  -->  00:02:58.700
Let's try printing that out, but just to note here first,
68

68

00:02:58.700  -->  00:03:00.760
that note that we're printing out
69

69

00:03:00.760  -->  00:03:03.120
myFirstNumber and not myTotal.
70

70

00:03:03.120  -->  00:03:04.170
Now I just wanted to point out there
71

71

00:03:04.170  -->  00:03:06.200
that if you hover over this one here,
72

72

00:03:06.200  -->  00:03:07.983
this variable of myTotal,
73

73

00:03:07.983  -->  00:03:11.020
Intellij helping tells us that it's not in use.
74

74

00:03:11.020  -->  00:03:12.170
This is a great know to know
75

75

00:03:12.170  -->  00:03:14.620
of any variables that you've created
76

76

00:03:14.620  -->  00:03:17.590
or declared and haven't actually used in your programme.
77

77

00:03:17.590  -->  00:03:19.380
So here it's just telling us it's never been used.
78

78

00:03:19.380  -->  00:03:22.830
And notice that It's also in a light grey to indicate that.
79

79

00:03:22.830  -->  00:03:25.030
So what we need to do is change this myFirstNumber,
80

80

00:03:25.030  -->  00:03:26.560
and I've just double clicked that.
81

81

00:03:26.560  -->  00:03:28.690
We want to double click any part of that name.
82

82

00:03:28.690  -->  00:03:30.400
Intellij helpfully highlights the whole thing
83

83

00:03:30.400  -->  00:03:31.810
so I can just type,
84

84

00:03:31.810  -->  00:03:34.030
and since I start typing, it gets deleted,
85

85

00:03:34.030  -->  00:03:35.760
and we've got the variable down on the bottom there.
86

86

00:03:35.760  -->  00:03:36.700
Total.
87

87

00:03:36.700  -->  00:03:39.129
Use up or down arrow keys if I want to select it.
88

88

00:03:39.129  -->  00:03:41.020
And there's the output,
89

89

00:03:41.020  -->  00:03:42.230
which I this case is my total,
90

90

00:03:42.230  -->  00:03:43.442
so now if I run this programme,
91

91

00:03:43.442  -->  00:03:45.296
we should see the value of 53
92

92

00:03:45.296  -->  00:03:48.890
and there it is 53 shining on the screen.
93

93

00:03:48.890  -->  00:03:50.880
And just to show you another example,
94

94

00:03:50.880  -->  00:03:52.860
let's change myThirdNumber,
95

95

00:03:52.860  -->  00:03:55.290
currently that's defined to be the value six.
96

96

00:03:55.290  -->  00:03:56.280
Let's change that to be,
97

97

00:03:56.280  -->  00:04:00.533
instead of six, to be myFirstNumber multiplied by two.
98

98

00:04:01.610  -->  00:04:04.006
So now what we've done is we've assigned myFirstNumber,
99

99

00:04:04.006  -->  00:04:06.620
under the value is 35 times two is seventy,
100

100

00:04:06.620  -->  00:04:09.190
so myThirdNumber has now got a value of 70.
101

101

00:04:09.190  -->  00:04:14.190
So my total equals 35 plus 12 is 47 plus 70 should be 117.
102

102

00:04:16.130  -->  00:04:18.980
So let's run this, and confirm that we've got that value.
103

103

00:04:22.000  -->  00:04:26.020
And there's the result, 117, okay.
104

104

00:04:26.020  -->  00:04:28.530
Alright, so let's send the video now with a challenge.
105

105

00:04:28.530  -->  00:04:31.090
So your challenge is to create a new variable
106

106

00:04:31.090  -->  00:04:33.060
and call it myLastOne,
107

107

00:04:33.060  -->  00:04:37.300
with the value to be 1000 less the current value of myTotal,
108

108

00:04:37.300  -->  00:04:39.350
and the data type should also be an int.
109

109

00:04:39.350  -->  00:04:40.183
And then you want to print out
110

110

00:04:40.183  -->  00:04:43.920
the value of myLastOne on the line after you declare it.
111

111

00:04:43.920  -->  00:04:46.770
Now as a hint here, we need to use another operator
112

112

00:04:46.770  -->  00:04:49.220
that we haven't actually used in the code before,
113

113

00:04:49.220  -->  00:04:50.290
but if you think about this,
114

114

00:04:50.290  -->  00:04:51.400
it should be easy to figure out
115

115

00:04:51.400  -->  00:04:53.250
which operator you need to use for this.
116

116

00:04:53.250  -->  00:04:55.110
All right, so pause the video.
117

117

00:04:55.110  -->  00:04:56.350
See if you can complete the challenge,
118

118

00:04:56.350  -->  00:04:58.043
and when you're ready, come back and resume the video.
119

119

00:04:58.043  -->  00:04:59.760
Go ahead, I'll wait here.
120

120

00:04:59.760  -->  00:05:00.823
Pause the video now.
121

121

00:05:03.710  -->  00:05:05.220
All right, so welcome back.
122

122

00:05:05.220  -->  00:05:06.377
So hopefully you managed to complete the challenge.
123

123

00:05:06.377  -->  00:05:08.220
And let's see what we can do here.
124

124

00:05:08.220  -->  00:05:10.550
What I'm going to do is start after the
125

125

00:05:10.550  -->  00:05:14.193
System.out.println, and I'm going to type in there int,
126

126

00:05:15.340  -->  00:05:18.760
myLastOne is equal to.
127

127

00:05:18.760  -->  00:05:20.740
We need to figure out a thousand less
128

128

00:05:20.740  -->  00:05:22.900
the current value of myTotal.
129

129

00:05:22.900  -->  00:05:24.360
We can just type 1000
130

130

00:05:24.360  -->  00:05:26.650
and use the new operator we haven't specifically used
131

131

00:05:26.650  -->  00:05:31.040
which is the minus, or subtraction, myTotal.
132

132

00:05:31.040  -->  00:05:33.880
So we wanted the value of a thousand, minus myTotal,
133

133

00:05:33.880  -->  00:05:35.370
which is what we've done here.
134

134

00:05:35.370  -->  00:05:36.900
Semicolon to end the line.
135

135

00:05:36.900  -->  00:05:38.920
And let's use the Sout template
136

136

00:05:39.970  -->  00:05:43.680
and then we'll type in myLastOne to print out the value.
137

137

00:05:43.680  -->  00:05:45.629
Let's run this and we should see one thousand.
138

138

00:05:45.629  -->  00:05:48.750 line:15% 
Take 187, and if my calculations are correct,
139

139

00:05:48.750  -->  00:05:50.693 line:15% 
it should be 883.
140

140

00:05:53.140  -->  00:05:53.973
And there we go.
141

141

00:05:53.973  -->  00:05:55.693
That's the value of 883.
142

142

00:05:56.740  -->  00:05:58.070
All right, I just want to end by saying
143

143

00:05:58.070  -->  00:05:59.107
if you ever get stuck here
144

144

00:05:59.107  -->  00:06:00.830
and you're finding weird errors,
145

145

00:06:00.830  -->  00:06:02.086
one of the first things to look at
146

146

00:06:02.086  -->  00:06:04.740
is it's spelling of a variable name
147

147

00:06:04.740  -->  00:06:07.310
and the case you use, whether it's up or lowercase.
148

148

00:06:07.310  -->  00:06:08.143
You'll see later on
149

149

00:06:08.143  -->  00:06:10.070
that there is a need for things to be in uppercase,
150

150

00:06:10.070  -->  00:06:11.755
but most of the time, things will be,
151

151

00:06:11.755  -->  00:06:13.750
the keywords will be in lowercase.
152

152

00:06:13.750  -->  00:06:17.010
And variables need to be defined exactly how you specify it.
153

153

00:06:17.010  -->  00:06:18.960
So in other words, like with myLastOne,
154

154

00:06:18.960  -->  00:06:21.330
I couldn't put a capital N here.
155

155

00:06:21.330  -->  00:06:24.150
When I tried to print it out, I'm getting an error there
156

156

00:06:24.150  -->  00:06:26.820
because myLastOne was defined on line 11
157

157

00:06:26.820  -->  00:06:29.540
as myLastOne with a lowercase m,
158

158

00:06:29.540  -->  00:06:32.420
and it's using an uppercase M on line 12.
159

159

00:06:32.420  -->  00:06:33.860
And that's the hint there.
160

160

00:06:33.860  -->  00:06:34.693
We saw this before,
161

161

00:06:34.693  -->  00:06:36.360
but we're getting a note here from intellij that
162

162

00:06:36.360  -->  00:06:37.720
that variable is not being used.
163

163

00:06:37.720  -->  00:06:38.800
That can often be a good hint
164

164

00:06:38.800  -->  00:06:42.280
that you made a typo and to go back and actually fix it,
165

165

00:06:42.280  -->  00:06:43.113
like so.
166

166

00:06:43.113  -->  00:06:45.680
We'll just run it again to make sure we're good to go.
167

167

00:06:45.680  -->  00:06:47.610
All right, so that's variables.
168

168

00:06:47.610  -->  00:06:48.610
Now later on in the course,
169

169

00:06:48.610  -->  00:06:51.490
we'll be looking at best practises for naming variables
170

170

00:06:51.490  -->  00:06:53.360
cause there is specific rules we should follow,
171

171

00:06:53.360  -->  00:06:56.190
but we'll check with that later on in the course.
172

172

00:06:56.190  -->  00:06:59.010
For now though, we've looked at one data type so far
173

173

00:06:59.010  -->  00:07:00.700
which is of type int.
174

174

00:07:00.700  -->  00:07:03.220
In the next video, we'll be looking at some more,
175

175

00:07:03.220  -->  00:07:05.043
so see you in that next video.
