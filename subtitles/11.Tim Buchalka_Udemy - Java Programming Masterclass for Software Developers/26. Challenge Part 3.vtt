WEBVTT
1
1

00:00:05.130  -->  00:00:09.500
now just before we get to the stage of
updating main to actually start testing
2

2

00:00:09.500  -->  00:00:16.340
this code the other thing we need to do now is
add another method in basket and what we
3

3

00:00:16.340  -->  00:00:19.920
need to do is when the contents of the
shopping basket are actually checked out
4

4

00:00:19.920  -->  00:00:23.940
we need a mechanism to empty the basket
so what we going to do is write that
5

5

00:00:23.940  -->  00:00:34.110
method here in basket its gonna be....and we are just going to do....
6

6

00:00:34.110  -->  00:00:40.870
....now we are just calling the clear method of the underlined
7

7

00:00:40.870  -->  00:00:47.030
map object because that's a lot faster
to clear all options or all items out of the map other
8

8

00:00:47.030  -->  00:00:50.600
than iterating through the map removing
objects one by one which would be
9

9

00:00:50.600  -->  00:00:53.700
another alternative so we're adding it
that way which is much faster
10

10

00:00:54.630  -->  00:01:01.070
let's go back now to main and start at looking
at doing some testing so what we need to
11

11

00:01:01.070  -->  00:01:05.410

do is before we start we need to look at this
sell item method that we write initially
12

12

00:01:05.410  -->  00:01:10.600
because it needs some new functional well it is a small change actually now
13

13

00:01:10.600  -->  00:01:13.570
that we've got this reserve stock
method from the stock list we need
14

14

00:01:13.570  -->  00:01:17.890
to use that rather than sell stock so
let's look at changing that as well so
15

15

00:01:17.890  -->  00:01:19.280
here on line 87
16

16

00:01:19.280  -->  00:01:22.560
its got if stock list.sell stock we are gonna  change
that
17

17

00:01:22.560  -->  00:01:31.490
and make that reserve stock now the other thing I want to
point out is that this does contain the
18

18

00:01:31.490  -->  00:01:36.200
potential bug which won't caused a problem in
this example but is still an example of
19

19

00:01:36.200  -->  00:01:41.130
bad coding that I want to highlight so basically on
line 89 it returns quantity
20

20

00:01:41.130  -->  00:01:45.770
so it is assuming that the call to add to basket
on the previous line actually worked ok
21

21

00:01:45.770  -->  00:01:49.670
now their is not much point of going to all the
trouble of designing methods to return it
22

22

00:01:49.670  -->  00:01:53.970
for in the results that ignore this results
so instead of
23

23

00:01:53.970  -->  00:01:57.700
actually returning quantity we should
return the result of calling the baskets
24

24

00:01:57.700  -->  00:02:02.540
add to basket method so we can change
that so instead of quantity here we are gonna
25

25

00:02:02.540  -->  00:02:06.460
put......
26

26

00:02:07.600  -->  00:02:10.600
.....
27

27

00:02:13.350  -->  00:02:17.940
now the remove item method it is very similar as
you know to the sell item but we need
28

28

00:02:17.940  -->  00:02:21.700
to do a similar thing to that and
obviously if your looking in this class we
29

29

00:02:21.700  -->  00:02:25.290
haven't got anything for that so let's add
add to that so I'm just copy this entire
30

30

00:02:25.290  -->  00:02:32.300
method first because it's very similar but there are a couple of changes we need to make so paste that
31

31

00:02:32.300  -->  00:02:43.180
in and lets call it remove item.......so the first part is where it is
actually getting the items ok....
32

32

00:02:43.180  -->  00:02:53.800
......
33

33

00:02:53.800  -->  00:02:56.800
.....
34

34

00:02:57.510  -->  00:03:04.770
.....
35

35

00:03:04.770  -->  00:03:17.330
......
36

36

00:03:17.330  -->  00:03:23.040
and if that is the case then what we're
going to do is actually return unreserved
37

37

00:03:23.040  -->  00:03:27.150
stocks so.....
38

38

00:03:27.150  -->  00:03:30.400
.....
39

39

00:03:32.710  -->  00:03:40.850
.....
40

40

00:03:40.850  -->  00:03:44.880
....whereas in that case we are only passing we are only using the string though so we are just
41

41

00:03:44.880  -->  00:03:48.140
going to return the string there so that is valid so basically
42

42

00:03:48.140  -->  00:03:51.610
we're checking that the remove basket
returns the quantity that was specified
43

43

00:03:51.610  -->  00:03:57.500
only if it does meaning that we are able to
successfully do that do we then try and
44

44

00:03:57.500  -->  00:04:02.200
unreserve the stock by calling stock list.unreserve
stock with the stock
45

45

00:04:02.200  -->  00:04:07.110
name that is the string item and the quantity
and obviously I made a mistake here as well because
46

46

00:04:07.110  -->  00:04:10.920
we're returning it what we should be
doing there is in fact deleting that
47

47

00:04:10.920  -->  00:04:14.890
line because remember I was returning
quantity before we just don't call it
48

48

00:04:14.890  -->  00:04:18.460
was we only want to call basket.add
basket once we are actually selling the
49

49

00:04:18.460  -->  00:04:22.820
item so that's why I'm returning now
the result instead of just returning the
50

50

00:04:22.820  -->  00:04:25.870
quantity which of course would have
potentially been a bug if
51

51

00:04:25.870  -->  00:04:29.470
whatever reason we didn't get the right
value back so we are now returning that
52

52

00:04:29.470  -->  00:04:34.130
correctly in the cell item method so
next we need a check out method so the
53

53

00:04:34.130  -->  00:04:37.970
check out method is used when the customer finally decides to purchase their items and it
54

54

00:04:37.970  -->  00:04:41.300
loops through all the items in the
basket using the unmodifiable map
55

55

00:04:41.300  -->  00:04:46.210
thats returned by the items method and for
each item them calls the sell
56

56

00:04:46.210  -->  00:04:50.440
stock method of the stock list class and
once they are all being sold it clears the basket
57

57

00:04:50.440  -->  00:04:59.380
so let's go ahead and write that so it's
going to be....
58

58

00:04:59.380  -->  00:05:28.560
......
59

59

00:05:28.560  -->  00:05:42.130
.....
60

60

00:05:42.130  -->  00:05:48.240
.......so go through
and sell all the stock in the basket and
61

61

00:05:48.240  -->  00:05:54.620
then we finished....... to clear out the basket
62

62

00:05:54.620  -->  00:05:58.680
effectively because the purchase has now
been completed and the stock has been
63

63

00:05:58.680  -->  00:06:02.660
deducted we sold the stock in other
words so we can clear the basket now
64

64

00:06:02.660  -->  00:06:06.070
strictly speaking it should really be
checking the return value of sell stock
65

65

00:06:06.070  -->  00:06:10.470
this is a line 108 I'm talking about but
here as the quantities are coming from
66

66

00:06:10.470  -->  00:06:14.560
the baskets items and we checked before
being added to the basket and this
67

67

00:06:14.560  -->  00:06:18.660
approach is safe now once I have covered exceptions
later in the course I would write this
68

68

00:06:18.660  -->  00:06:23.210
method to throw an exception in the
unlikely event that sell stock return 0
69

69

00:06:23.790  -->  00:06:29.730
ok so we are now in a position were pretty much ready to give this program a run so one other thing I need to
70

70

00:06:29.730  -->  00:06:34.670
change is we need to go back into the
stock item.compared to method and I'll tell
71

71

00:06:34.670  -->  00:06:38.960
you why when we get in there and in the
compared to we got this print out entering stock
72

72

00:06:38.960  -->  00:06:44.480
item. compared to let's comment that out
just so it doesn't ease up all our space
73

73

00:06:44.480  -->  00:06:47.630
on the screen because it will clutter our display
when we actually gonna run this program
74

74

00:06:47.630  -->  00:07:02.840
so we're going to comment that out and if I
know run this you can still see
75

75

00:07:02.840  -->  00:07:07.040
that it seems to be working ok contains
1 items reserved we don't sell spanners
76

76

00:07:07.040  -->  00:07:11.910
don't sell a spanner which you can see there
shopping
77

77

00:07:11.910  -->  00:07:20.190
basket contains 1 item the items are going to our stock list
seems to be ok so the basic programs
78

78

00:07:20.190  -->  00:07:29.750
working and we now need to start looking at the main method we need to
79

79

00:07:29.750  -->  00:07:35.400
start rejigging this little bit more so
we've got a basic bit of code here that
80

80

00:07:35.400  -->  00:07:39.900
what we do in the next video is do a little
bit more tests will actually cleaned up
81

81

00:07:39.900  -->  00:07:44.400
a little bit and also look at removing some of the items
we've added to the basket etc
82

82

00:07:45.650  -->  00:07:50.170
remove some of the stock listings etcetera
and clean it up a little bit and
83

83

00:07:50.170  -->  00:07:54.470
give it a final run so we should be able to finish the
challenge and get this all working
84

84

00:07:54.470  -->  00:07:55.470
completely in the next video
