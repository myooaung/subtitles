WEBVTT
1
00:00:05.040 --> 00:00:10.580
Im vorherigen Video haben wir über das Schlüsselwort gesprochen und uns dann eingehender mit den Codeblöcken befasst.

2
00:00:10.620 --> 00:00:15.300
Wir sprachen auch über einige Probleme mit Codeblöcken und der Vervielfältigung von Code.

3
00:00:15.450 --> 00:00:17.740
In diesem Video werden wir über Methoden sprechen.

4
00:00:18.600 --> 00:00:25.260
Methoden sind daher eine Möglichkeit, Ihren Code zu organisieren, um Duplizierungen zu reduzieren und die Pflege Ihres Codes zu vereinfachen.

5
00:00:25.260 --> 00:00:30.400
Wir haben heute in diesem Kurs viele Methoden gesehen, aber ich habe nicht wirklich viel darüber gesprochen.

6
00:00:30.600 --> 00:00:36.570
So können Methoden in einer Datei in Java in beliebiger Reihenfolge im allgemeinen Format platziert werden oder es wird wie folgt nach

7
00:00:36.570 --> 00:00:37.680
einer Methode gesucht.

8
00:00:37.710 --> 00:00:39.040
Sie haben also einen Modifikator.

9
00:00:39.090 --> 00:00:45.810
Wir haben einen Rückgabetyp mit dem Namen der Methodenklammern und in diesen Klammern haben wir optionale Parameter und

10
00:00:45.810 --> 00:00:53.080
dann haben wir eine geschweifte Klammer von links nach rechts, also eine Beispiel Methodendeklaration, die Sie bisher in der gesehen

11
00:00:53.080 --> 00:00:55.900
haben Natürlich ist dieses auf dem Bildschirm.

12
00:00:55.900 --> 00:00:57.880
Public static void Main.

13
00:00:57.920 --> 00:01:03.520
Dann haben wir Klammern und von links nach rechts stehende eckige Klammern, die die ARGs eines String-Arrays angeben, und dann haben wir

14
00:01:03.520 --> 00:01:06.400
unsere Kelly-Preise von links nach rechts, wie ich bereits erwähnt habe.

15
00:01:06.460 --> 00:01:10.240
Das ist natürlich die Hauptmethode, die wir in diesem Kurs bisher ziemlich oft angewendet haben.

16
00:01:10.690 --> 00:01:11.810
Also, was machen wir hier?

17
00:01:11.830 --> 00:01:17.450
Wir haben zwei Modifikatoren public und static und einen Rückgabetyp void.

18
00:01:17.510 --> 00:01:20.010
Und das bedeutet, dass die Methode überhaupt nichts zurückgibt.

19
00:01:20.060 --> 00:01:24.940
Und wir haben dort auch einen Parameter, der die Zeichenfolge in eckigen Klammern links und rechts ist, und

20
00:01:24.940 --> 00:01:27.250
darüber werden wir im nächsten Video mehr sprechen.

21
00:01:27.250 --> 00:01:31.060
Jetzt werden noch keine Modifikatoren oder der Rückgabetyp besprochen.

22
00:01:31.150 --> 00:01:34.440
Beachten Sie jedoch, dass dies später im Kurs im Detail erfolgen wird.

23
00:01:37.440 --> 00:01:42.240
Wichtig ist, dass auf einen Methodennamen immer die offene geschweifte Klammer folgt und immer

24
00:01:42.240 --> 00:01:48.090
eine passende schließende geschweifte Klammer enthält. Wenn Sie eine Methode nach guter Programmierpraxis erstellen, müssen Sie einen

25
00:01:48.150 --> 00:01:52.850
Methodennamen mit einem oder mehreren Wörtern auswählen, die eine bestimmte Aktion beschreiben.

26
00:01:52.860 --> 00:01:53.160
Gut.

27
00:01:53.170 --> 00:01:57.790
Was ich hier gemacht habe, ist, dass ich ein neues Intelligenzprojekt erstellt habe, das auf dem Bildschirm

28
00:01:57.790 --> 00:02:01.080
als Methoden angezeigt wird. Wir werden also eine neue Klasse erstellen.

29
00:02:01.080 --> 00:02:05.200
Jetzt, in zukünftigen Videos, kopiere ich von Zeit zu Zeit einfach den Code und füge ihn direkt ein und wir

30
00:02:05.200 --> 00:02:06.480
fangen mit dem Code an.

31
00:02:06.580 --> 00:02:09.490
Aber beim ersten Mal möchte ich Ihnen nur den Vorgang zeigen.

32
00:02:09.520 --> 00:02:12.680
Deshalb möchte ich in diesem leeren Projekt eine neue Klasse erstellen.

33
00:02:12.730 --> 00:02:14.850
Ich werde die Klassenmethoden aufrufen.

34
00:02:14.880 --> 00:02:15.850
Lass uns das tun.

35
00:02:15.910 --> 00:02:21.550
Ich komme hierher und klicke mit der rechten Maustaste auf die Quelle der neuen Java-Klasse.

36
00:02:21.580 --> 00:02:22.810
Jetzt brauchen wir tatsächlich ein Paket.

37
00:02:22.810 --> 00:02:26.500
Wir haben ein wenig über Pakete gesprochen, wie Sie

38
00:02:26.500 --> 00:02:31.030
wahrscheinlich in den vorherigen Videos gesehen haben, aber wir werden später

39
00:02:31.030 --> 00:02:38.230
noch mehr über Pakete sprechen, um diese Gutschrift zu erhalten Punkt und dann Name der Klasse, die wir

40
00:02:38.230 --> 00:02:39.880
Methoden aufrufen werden.

41
00:02:39.880 --> 00:02:45.040
Auf diese Weise können Sie einen zweistufigen Prozess zum Erstellen des Pakets und der Methode einsparen.

42
00:02:45.040 --> 00:02:50.920
Wenn Sie also die Eingabetaste drücken, um diese Art von Methode auf dem Bildschirm anzuzeigen, beachten Sie die Paketanweisung in

43
00:02:50.920 --> 00:02:56.120
Zeile 1, aber auch hier können Sie sehen, dass es aus der Quelle stammt. Wir haben eine Akademie,

44
00:02:56.140 --> 00:02:59.540
die das Programmieren lernt, und darunter befindet sich unsere Klasse Das.

45
00:02:59.820 --> 00:03:05.170
Wenn Sie es jetzt anders sagen möchten und hierher kommen und auf das Zahnrad klicken und kompakte kleine Pakete prüfen,

46
00:03:05.260 --> 00:03:09.970
können Sie hier sehen, dass sich die Pakete ändern, um die Akademie zum Programmieren zu lernen, aber

47
00:03:10.090 --> 00:03:13.680
ich bevorzuge es mit dem Häkchen, um es zu sagen dieser Weg.

48
00:03:13.720 --> 00:03:16.010
Auf jeden Fall werden wir später noch mehr über Pakete sprechen.

49
00:03:16.090 --> 00:03:20.280
Lassen Sie uns die Projektseite jetzt schließen, weil wir sie nicht brauchen.

50
00:03:20.290 --> 00:03:22.950
Also, was ich jetzt tun werde, ist Kopieren und Einfügen in Code.

51
00:03:22.960 --> 00:03:26.470
Dies befindet sich im Abschnitt Ressourcen für dieses Video.

52
00:03:26.470 --> 00:03:30.880
Sie folgen also dem Beispiel und erstellen die Klasse mit dem Paket genau so, wie ich es erstellt

53
00:03:30.880 --> 00:03:36.480
habe. Wählen Sie dann den gesamten Code aus und fügen Sie alles richtig ein, damit der Code und im Wesentlichen dieser Code vorhanden sind.

54
00:03:36.750 --> 00:03:41.600
Nun, das ist genau derselbe Code, den wir in einem vorherigen Video ohne vorheriges Video verwendet haben.

55
00:03:41.700 --> 00:03:47.050
Wenn wir darüber reden und so weiter, aber wir starten gerade ein neues Projekt und auch eine neue Klasse, damit unsere

56
00:03:47.060 --> 00:03:51.560
Hauptmethode, die sie in der Online-Apotheke sehen können, und es ist derselbe Code, der säkular gesehen wurde,

57
00:03:51.570 --> 00:03:52.860
derselbe Geist wie zuvor.

58
00:03:52.860 --> 00:03:54.210
Also führen Sie das einfach aus, um

59
00:03:57.490 --> 00:03:59.600
zu bestätigen, und Sie sehen, dass wir am unteren Rand ausgeben können.

60
00:03:59.600 --> 00:04:00.910
Das Endergebnis war dreiundzwanzighundert.

61
00:04:00.910 --> 00:04:03.800
Ihr Endergebnis war elftausendsechshundert.

62
00:04:03.820 --> 00:04:09.340
Wenn Sie sich an das große Problem erinnern, das ich angesprochen habe, war, dass ich den Code an einer Stelle in diesem

63
00:04:09.340 --> 00:04:12.960
ersten Codeblock geändert habe, wo ich die Endnote plus gleich 1000 hinzugefügt habe.

64
00:04:13.210 --> 00:04:17.730
Aber ich habe die Änderung im zweiten Codeblock nicht vorgenommen, obwohl der Code im Wesentlichen derselbe war.

65
00:04:17.840 --> 00:04:22.570
Ich habe Ihnen nur gezeigt, wie einfach es ist, Fehler zu haben, denn hier haben wir jetzt

66
00:04:22.570 --> 00:04:25.090
eine Vervielfältigung von Code, die im Wesentlichen dasselbe bewirkt.

67
00:04:25.090 --> 00:04:29.170
Wir haben jedoch etwas hinzugefügt, das wir in einem und nicht in beiden Bereichen geändert haben.

68
00:04:29.170 --> 00:04:34.960
Und selbst wenn ich es bei der zusätzlichen Änderung erfolgreich hinzugefügt habe und dies die endgültige Punktzahl plus 2000 für den

69
00:04:35.350 --> 00:04:40.540
zweiten Code-Block zum Kopieren und Einfügen ist, ist es immer noch nicht wirklich praktisch, und wenn nichts anderes

70
00:04:40.540 --> 00:04:45.580
tatsächlich mehr Aufwand für Sie bedeutet, gehen zu müssen und Nehmen Sie die Änderungen an allen Stellen mehrmals

71
00:04:45.580 --> 00:04:48.700
vor, wenn Sie dieselbe Codemenge tatsächlich duplizieren und wiederverwenden müssen.

72
00:04:48.960 --> 00:04:54.790
Ein einfacher Ansatz wäre, den Code zu erstellen, sobald er in einem bestimmten Bereich abgelegt ist, und ihn dann immer wieder zu verwenden,

73
00:04:54.790 --> 00:04:57.000
ohne ihn tatsächlich kopieren und einfügen zu müssen.

74
00:04:57.610 --> 00:05:03.250
Und das ist, was eine Methode für uns tut. Sie gibt uns die Möglichkeit, den Code an einer

75
00:05:03.250 --> 00:05:06.820
Stelle zu definieren und ihn aus mehreren anderen Bereichen aufzurufen.

76
00:05:06.890 --> 00:05:09.410
Versuchen wir also, eine Methode zu erstellen.

77
00:05:09.460 --> 00:05:12.810
Vielleicht haben Sie das noch nicht gewusst, aber wir haben die ganze Zeit über eine Methode angewendet.

78
00:05:12.850 --> 00:05:15.650
Und darauf habe ich in den Folien in diesem Video kurz angespielt.

79
00:05:16.480 --> 00:05:21.820
Hier ist also der Code, den ich in den Hauptmethoden zeige, im Grunde vier

80
00:05:21.820 --> 00:05:24.110
Zeilen, sechs bis einschließlich Zeile 25.

81
00:05:24.250 --> 00:05:25.910
Nun, das ist eigentlich eine Methode.

82
00:05:26.590 --> 00:05:31.570
Die Methode hier heißt also Main. Sie heißt Zugriffsmodifikatoren public und static und return top

83
00:05:31.570 --> 00:05:32.410
of void.

84
00:05:32.440 --> 00:05:35.710
Wie ich bereits erwähnte, werden wir später über Modifikatoren und Rückgabetypen sprechen.

85
00:05:35.740 --> 00:05:41.830
Es gibt auch eine Argumentzeichenfolge in eckigen Klammern links oder rechts, und das ist ein Parameter, und Sie können mehr als

86
00:05:41.830 --> 00:05:42.850
einen Parameter haben.

87
00:05:42.870 --> 00:05:45.790
Worüber wir in einem kommenden Video sprechen werden.

88
00:05:45.790 --> 00:05:48.940
Der Punkt hier ist also, dass wir die ganze Zeit tatsächlich eine Methode angewendet haben.

89
00:05:49.420 --> 00:05:52.250
Aber was wir jetzt tun werden, ist, einen anderen zu finden.

90
00:05:52.540 --> 00:05:56.400
Und was wir tun werden, ist im Grunde eine Kreditmethode, die einen Teil dieses Codes verwendet.

91
00:05:56.400 --> 00:06:01.120
Die Codes werden von 12 bis 14 gestartet. Wir werden das in eine Methode einfügen und dann einen Prozess verwenden,

92
00:06:01.120 --> 00:06:03.100
um diese Methode aus unserem Code heraus aufzurufen.

93
00:06:03.100 --> 00:06:07.390
Sobald wir die Methode gefunden haben, wird der Code nicht mehr dupliziert.

94
00:06:07.390 --> 00:06:11.140
Es ist wichtig sicherzustellen, dass Sie außerhalb einer anderen Methode starten.

95
00:06:11.140 --> 00:06:16.540
Mit anderen Worten, wir würden nicht aufhören, eine neue Methode hier oder anderswo innerhalb einer bestehenden

96
00:06:16.540 --> 00:06:17.560
Methode zu erstellen.

97
00:06:17.680 --> 00:06:22.000
Und das Gute an der Intelligenz ist, dass Sie diese Zeilen hier lesen, um anzuzeigen, dass dies alles

98
00:06:22.000 --> 00:06:23.140
Teil derselben Methode ist.

99
00:06:23.140 --> 00:06:28.480
Ich möchte also im Grunde darunter gehen, aber vor den letzten schließenden geschweiften Klammern, die das Ende der gesamten

100
00:06:28.480 --> 00:06:31.730
Klasse bedeuten würden, und genau hier setzen wir unsere Methode an.

101
00:06:31.750 --> 00:06:37.050
Also möchte ich da unten in Zeile 27 anfangen und wir müssen die Definition übersteigen.

102
00:06:37.050 --> 00:06:40.630
Jetzt müssen wir unsere Methode Punktzahl berechnen aufrufen, weil sie

103
00:06:40.630 --> 00:06:45.820
nur den Code erhält, den wir zur Berechnung der Punktzahl verwenden, und damit Ihr Code leichter

104
00:06:45.860 --> 00:06:51.300
lesbar ist. Sie versteht, warum die Konvention von befolgt werden muss Benennen einer Methode unter Verwendung der

105
00:06:51.400 --> 00:06:55.870
Aktion, die sie ausführen werden, da das Ziel dieser Methode darin besteht, den

106
00:06:55.870 --> 00:06:59.920
gesamten Code zu haben, den wir zur Berechnung der Punktzahl verwendet haben.

107
00:07:00.310 --> 00:07:10.060
Also, was wir tun werden, ist Top Public Static Void Score berechnen Die Noten aus einem Top Score von Top 10 Großbuchstaben. Es ist eine Konvention

108
00:07:10.090 --> 00:07:14.800
in Java, die über ein anstehendes Video spricht, das in Klammern links

109
00:07:14.800 --> 00:07:16.160
oder rechts steht.

110
00:07:16.290 --> 00:07:19.540
Und wieder wird in zukünftigen Videos von der öffentlichen statischen Lücke gesprochen.

111
00:07:19.540 --> 00:07:24.850
Der Hauptteil, auf den Sie sich konzentrieren müssen, ist das Berechnen der Punktzahl sowie der Klammern und der linken oder rechten geschweiften Klammern.

112
00:07:24.850 --> 00:07:27.550
Das ist unsere Definition einer Methode.

113
00:07:27.820 --> 00:07:27.980
Recht.

114
00:07:28.060 --> 00:07:32.890
Nun müssen wir also etwas Code zwischen die linke oder rechte Kelly-Klammer

115
00:07:32.890 --> 00:07:33.740
setzen.

116
00:07:33.800 --> 00:07:38.650
Alles, was zwischen den Preisen liegt, ist eine Aussage oder Aussagen, die Teil der Methode sind, die

117
00:07:38.650 --> 00:07:40.660
wir als Punktzahl berechnen bezeichnet haben.

118
00:07:40.660 --> 00:07:44.770
Und wenn wir diese Methode ausführen und das in einem kommenden Video durchgehen, wird der gesamte

119
00:07:44.770 --> 00:07:47.830
Code ausgeführt, den wir definiert und in die Methode eingefügt haben.

120
00:07:48.970 --> 00:07:51.310
Also gehe ich zurück zum Anfang der Methode.

121
00:07:51.340 --> 00:07:56.650
Ihre Hauptmethode ist es, eine Kopie der Online-Code-Studie von Zeile 6 bis einschließlich Zeile

122
00:07:56.650 --> 00:07:57.910
15 zu erstellen.

123
00:07:57.970 --> 00:08:00.520
Ich möchte ein Steuerelement C ausführen, weil ich einen Windows-Maschinenbefehl möchte.

124
00:08:00.520 --> 00:08:05.280
Also, wenn Sie auf einem Mac eine Kopie dieser anderen machen, kommen Sie hier runter und ich werde meinen

125
00:08:05.320 --> 00:08:10.280
Cursor irgendwo in die Methode setzen, die zwischen den linken oder rechten geschweiften Klammern steht und ich werde eine Kontrolle v

126
00:08:10.300 --> 00:08:15.220
vielleicht auf einem machen Mac und Sie können sehen, dass der Code jetzt in die Berechnung der Punktzahl eingefügt wurde.

127
00:08:15.460 --> 00:08:22.660
Sarah, eine Methode, die wir jetzt definiert haben, enthält einen Code, der aus den Zeilen 28 bis 337 stammt. Sehen wir uns

128
00:08:22.660 --> 00:08:25.120
also das Video hier im nächsten an.

129
00:08:25.120 --> 00:08:29.070
Jetzt haben wir begonnen, eine Methode zu erstellen und dort Code einzufügen.

130
00:08:29.260 --> 00:08:34.100
Wir werden herausfinden, wie man diesen Code tatsächlich ausführt und mit anderen Worten, wie man ihn von einer anderen Stelle

131
00:08:34.100 --> 00:08:35.240
in unserem Quellcode aufruft.

132
00:08:35.320 --> 00:08:36.830
Das machen wir im nächsten Video.

133
00:08:36.850 --> 00:08:37.780
Wir sehen uns im nächsten.
