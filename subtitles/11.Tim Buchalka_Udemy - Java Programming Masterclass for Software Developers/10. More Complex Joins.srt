1
1

00:00:03,820  -->  00:00:07,780
alright so i'm actually quit out of the
sql lite and I've started it up again I'm
2

2

00:00:07,780  -->  00:00:11,620
just going to type this command in and you can
just see that there's actually a
3

3

00:00:11,620  -->  00:00:15,660
tremendous number of Records here that
have appeared on the screen and
4

4

00:00:15,660  -->  00:00:17,770
scrolling up as you can see there's tons of
them
5

5

00:00:17,770  -->  00:00:21,940
now depending on the speed of your Mac
you might find it a lot slower to output
6

6

00:00:21,940  -->  00:00:26,860
thease and you can actually use ctrl z to
stop the listing and that also let you
7

7

00:00:26,860  -->  00:00:29,860
see some record from the middle of the
list rather than just the same view from
8

8

00:00:29,860  -->  00:00:34,390
the end now you can do the same thing on
windows with ctrl Z but there's
9

9

00:00:34,390  -->  00:00:39,670
apparently a bug that causes ctrl z to
quit sql lite as well so you might
10

10

00:00:39,670  -->  00:00:45,250
have to start sql lite again with the
sql lite 3 space music.DB to get back
11

11

00:00:45,250  -->  00:00:49,350
into the database if you're on windows
and you press ctrl z on linux you
12

12

00:00:49,350  -->  00:00:54,100
might find as well that you should find ctrl z will stop the listing as
13

13

00:00:54,100  -->  00:00:54,600
well
14

14

00:00:54,600  -->  00:00:58,780
alright so let's just changed
around a little bit and it might
15

15

00:00:58,780  -->  00:01:02,080
actually look neater the other way
around if we list the album name before
16

16

00:01:02,080  -->  00:01:09,090
the song title so to do that we type....
17

17

00:01:09,090  -->  00:01:23,400
....
18

18

00:01:23,400  -->  00:01:37,440
....as you
19

19

00:01:37,440  -->  00:01:41,430
can see that does look a little bit
neater so you're free to return any
20

20

00:01:41,430  -->  00:01:44,730
columns you want in any order you don't
have to keep them in the same order that
21

21

00:01:44,730  -->  00:01:48,720
they appear in the table nor in the
order the actual table are joined either
22

22

00:01:48,720  -->  00:01:51,720
alright time for another mini challenge
23

23

00:01:54,610  -->  00:01:58,900
alright so the challenges is to produce a
list of all the artists with their
24

24

00:01:58,900  -->  00:02:04,420
albums in alphabetical order of artists
name so go away and see if you can figure out
25

25

00:02:04,420  -->  00:02:07,990
the sql code for that pause the video
and when you're ready to see my solution
26

26

00:02:07,990  -->  00:02:11,290
come back toward and i'll show you how
to do it so pause the video now
27

27

00:02:15,220  -->  00:02:23,350
alright so the way to solve that would
be....
28

28

00:02:23,350  -->  00:02:46,450
....
29

29

00:02:46,450  -->  00:02:51,670
and because I can't use my up arrow i'm
going to type in in again so...
30

30

00:02:51,670  -->  00:03:13,630
....
31

31

00:03:13,630  -->  00:03:20,020
....okay there you go that's the solution
now what if you wanted to find out which
32

32

00:03:20,020  -->  00:03:24,730
artist produced a song though now the
songs table doesn't have any direct
33

33

00:03:24,730  -->  00:03:29,080
links to artists and we just go back and
look at the relationship between the
34

34

00:03:29,080  -->  00:03:34,800
tables again it will help us to see how
we can get the artist for a song alright
35

35

00:03:34,800  -->  00:03:39,790
here's a representation just zoom in
so you can see that little bit better so
36

36

00:03:39,790  -->  00:03:43,110
if we have a look at the relationships
between these tables again that's going
37

37

00:03:43,110  -->  00:03:47,140
to help to see how we can get that
artist for a particular song now although
38

38

00:03:47,140  -->  00:03:52,000
we can't go directly to an artist from a
song record we can find out which album
39

39

00:03:52,000  -->  00:03:55,720
contains the song and from there it
should be easy to find out who the
40

40

00:03:55,720  -->  00:04:01,360
artist is and we do that by joining
songs to albums and then albums to
41

41

00:04:01,360  -->  00:04:04,360
artists let's have a go at typing
the code for that
42

42

00:04:06,230  -->  00:04:18,110
so we type.....
43

43

00:04:18,110  -->  00:04:54,170
....
44

44

00:04:54,170  -->  00:05:01,670
....so that's actually quite a lot of
45

45

00:05:01,670  -->  00:05:05,720
statements you can see so it was good
that sql lite allows us to split
46

46

00:05:05,720  -->  00:05:10,160
over more than one line and doesn't try
to execute the statement until it finds
47

47

00:05:10,160  -->  00:05:12,260
an ending semicolon
48

48

00:05:12,260  -->  00:05:16,250
so what I've done here is just chain
the inner joins together so we have
49

49

00:05:16,250  -->  00:05:21,140
songs inner join albums inner join artists now of course we have to specify
50

50

00:05:21,140  -->  00:05:25,430
which columns to join on but hopefully
the syntax as I've shown up there does make
51

51

00:05:25,430  -->  00:05:31,640
sense and we'll just run this to make sure
it works and you can see that we've got
52

52

00:05:31,640  -->  00:05:36,980
the results that we're looking for the
actual artist who produced the song so
53

53

00:05:36,980  -->  00:05:40,850
the Select statement is pretty flexible
we can include as many columns as we
54

54

00:05:40,850  -->  00:05:45,800
need joining tables as we need them and
then sort of as many columns as we need to
55

55

00:05:45,800  -->  00:05:50,720
produce decent output and you can also
nest select inside another select
56

56

00:05:50,720  -->  00:05:55,130
statement but if you get to the stage of
needing to do that then you really
57

57

00:05:55,130  -->  00:05:58,220
getting into more advanced sql and
that's above what we have time to cover
58

58

00:05:58,220  -->  00:05:59,780
in this course
59

59

00:05:59,780  -->  00:06:02,990
just keep in mind that the sql
language is very powerful and really
60

60

00:06:02,990  -->  00:06:07,250
quite simple considering what you can do
with it now one thing that i haven't
61

61

00:06:07,250  -->  00:06:12,050
mentioned so far is that the ordering of
the clauses is important so you can't go
62

62

00:06:12,050  -->  00:06:16,510
putting the order by Clause before the
joins for example the order is strict
63

63

00:06:16,510  -->  00:06:19,860
in that regard so the order that we've
been doing things so far is actually
64

64

00:06:19,860  -->  00:06:23,730
correct way to do it now if you want to
include a where clause it has to go
65

65

00:06:23,730  -->  00:06:28,380
before the order by Clause let's
restrict the previous query to just the
66

66

00:06:28,380  -->  00:06:31,170
album do little which has the id 19
67

67

00:06:31,170  -->  00:06:37,020
alright so what I actually did was I
actually copy and pasted off-screen so
68

68

00:06:37,020  -->  00:06:40,890
you ignore those little dots and the
greater than sign it's because i pasted
69

69

00:06:40,890  -->  00:06:44,490
it all in the at the same time then it's
actually come up with what would have
70

70

00:06:44,490  -->  00:06:47,760
happened if we had press enter but the
point is that what i've done is i put
71

71

00:06:47,760  -->  00:06:52,380
the where clause you can see before the
order by clause and I've got a semicolon
72

72

00:06:52,380  -->  00:06:57,390
on the end so this should work
when I press enter so we're only getting the
73

73

00:06:57,390  -->  00:07:01,950
rows back for the album do little which
again have the ID 19 that's where the
74

74

00:07:01,950  -->  00:07:06,330
where clause came in now splitting
the command over several lines like this
75

75

00:07:06,330  -->  00:07:10,410
does make it easy to understand but it
does make calling the command back a
76

76

00:07:10,410  -->  00:07:11,310
little tricky
77

77

00:07:11,310  -->  00:07:14,970
you have to do it line by line so the
trick would be there if this up arrow was
78

78

00:07:14,970  -->  00:07:19,470
working for you is to actually keep
pressing the up arrow to call back the
79

79

00:07:19,470  -->  00:07:23,520
first line in the statement the select
line here then press enter then use the
80

80

00:07:23,520  -->  00:07:25,770
up arrow to call back the next line and
so on
81

81

00:07:25,770  -->  00:07:28,710
I can't actually show you that because as I've outlined its not working
82

82

00:07:28,710  -->  00:07:33,750
properly on the mac but what i can do is
paste in part of the command like so
83

83

00:07:33,750  -->  00:07:40,620
then what i'm going to do is add the
claus again so...
84

84

00:07:40,620  -->  00:07:54,570
....
85

85

00:07:54,570  -->  00:08:01,770
....so as you can see the
structure of the Select statement is
86

86

00:08:01,770  -->  00:08:06,150
quite straightforward you specify the
columns that you're interested in you
87

87

00:08:06,150  -->  00:08:09,630
join any other tables that are needed
filter the selection using a where
88

88

00:08:09,630  -->  00:08:15,480
clause and finally you order the results
now sometimes you have a rough idea of
89

89

00:08:15,480  -->  00:08:17,940
what you want to find but you don't know
what exactly
90

90

00:08:17,940  -->  00:08:21,360
or perhaps you're interested in several
rows have similar but not identical
91

91

00:08:21,360  -->  00:08:26,760
names now the sql where clause can
use wildcards to match on partial
92

92

00:08:26,760  -->  00:08:32,100
strings to cope with these situations
now I'm going to actually change sql
93

93

00:08:32,100  -->  00:08:33,480
commands that span a few lines
94

94

00:08:33,480  -->  00:08:37,320
in this next bit and as you've seen
editing the statements from within the
95

95

00:08:37,320  -->  00:08:42,090
sql lite show there's a bit
fiddly a useful tip when working with the
96

96

00:08:42,090  -->  00:08:46,410
sql lite shell is to keep a text editor
handy and copy and paste between the two
97

97

00:08:46,410  -->  00:08:51,060
windows and you also need to know to copy
from that terminal command line if you
98

98

00:08:51,060  -->  00:08:54,060
want to take the output from the .
schema command and paste it into your
99

99

00:08:54,060  -->  00:08:59,490
code going to digress slightly and show
you how to do that so i can just come up
100

100

00:08:59,490  -->  00:09:03,270
here and actually just copy these
commands that I've type in here selected here
101

101

00:09:05,580  -->  00:09:08,670
I do get a line at time I can just select the part you've seen
102

102

00:09:08,670  -->  00:09:14,130
me doing this in the previous videos I
can actually copy that and what i can do
103

103

00:09:14,130  -->  00:09:18,180
is i can drag that down with my mouse
and put into this line here and you can
104

104

00:09:18,180  -->  00:09:21,120
see that's been added or I could have
done that or I could have right-click it
105

105

00:09:21,120  -->  00:09:27,180
and select and copy and paste which is
also saw me do previously now on Windows
106

106

00:09:27,180  -->  00:09:30,630
you can copy the selected text into the
clipboard after you've selected by
107

107

00:09:30,630  -->  00:09:34,410
pressing enter and on linux you need to
click the right mouse button and choose
108

108

00:09:34,410  -->  00:09:37,710
copy from the context menu that actually
appears so it does depend on the
109

109

00:09:37,710  -->  00:09:41,310
operating system as to how you go about
copying that the bottom line is at that
110

110

00:09:41,310  -->  00:09:44,760
point the text is now in the clipboard
and you can paste it into the text
111

111

00:09:44,760  -->  00:09:50,460
editor that you want to use and
manipulate the sql statement on the
112

112

00:09:50,460  -->  00:09:53,250
case of here what I'm going to do
is I'm just going to copy all of this
113

113

00:09:53,250  -->  00:09:58,440
here and i can do a copy here if I could do it that way and i can open
114

114

00:09:58,440  -->  00:10:04,680
the text editor in my case I'm just
going to open text edit but you can use
115

115

00:10:04,680  -->  00:10:09,510
notepad or a linux editor as appropriate
and I can just paste it in there and
116

116

00:10:09,510  -->  00:10:13,710
notice that if we just zoom in there we
might have to clean a little bit of this
117

117

00:10:13,710  -->  00:10:17,400
up so we need to just delete this part
here with those extra parts were added
118

118

00:10:17,400  -->  00:10:21,060
by sql lite when enter was meant to be pressed and I just press enter the
119

119

00:10:21,060  -->  00:10:24,930
relevant place to just to build up the
clause like that and eventually I got the
120

120

00:10:24,930  -->  00:10:29,460
thing working and ready to be
manipulated and what do is I'm just
121

121

00:10:29,460  -->  00:10:33,300
going to put this to the side so we can
see both things at the same time for now
122

122

00:10:33,300  -->  00:10:36,870
so you can see we're now ready to
actually be able to work in both windows
123

123

00:10:36,870  -->  00:10:41,760
so just gonna close that off and come
back here and obviously i can just
124

124

00:10:41,760  -->  00:10:45,480
select this here i can copy it and i can
paste it directly in
125

125

00:10:46,090  -->  00:10:48,880
because it's got a semicolon at the end
I can press enter and i can get the
126

126

00:10:48,880  -->  00:10:52,030
results that I want and I can go back to
my text editor and have been
127

127

00:10:52,030  -->  00:10:56,620
manipulating anything that i actually
need to do so this is also useful when
128

128

00:10:56,620  -->  00:11:00,130
you're working you're going to be
working with code because you'll
129

129

00:11:00,130  -->  00:11:03,880
be typing in a command interactively to
make sure that it works then you'll be
130

130

00:11:03,880  -->  00:11:08,260
taking this code which i've copied into
my in this case and text edit which is a
131

131

00:11:08,260  -->  00:11:11,890
standard text editor that comes with the
mac but you might also be pasting that
132

132

00:11:11,890  -->  00:11:14,520
into code
as well so it's a good sort of thing to
133

133

00:11:14,520  -->  00:11:17,760
know how to do because you'll be doing
that that would normally be the sequence
134

134

00:11:17,760  -->  00:11:21,270
of things you test to make sure that the
queries the sql code that you're
135

135

00:11:21,270  -->  00:11:25,740
typing is correct and valid in sql lite first and then once you sure that
136

136

00:11:25,740  -->  00:11:26,580
it's working
137

137

00:11:26,580  -->  00:11:29,610
that's when you copy the code and then
put it back in
138

138

00:11:29,610  -->  00:11:31,470
the relevant java file
139

139

00:11:31,470  -->  00:11:34,890
alright so I'm going to finish the video
here now in the next video we're going
140

140

00:11:34,890  -->  00:11:39,000
to talk about the wild-card where
I started telling you about the fact that
141

141

00:11:39,000  -->  00:11:41,700
you can actually match on partial
strings so we'll actually have a look at
142

142

00:11:41,700  -->  00:11:43,410
how to do that in the next video
