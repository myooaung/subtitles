1
1

00:00:06,090  -->  00:00:10,860
So, in this section, we're gonna start
talking about naming conventions.
2

2

00:00:10,860  -->  00:00:13,020
And lead on to packages and
statics and so on.
3

3

00:00:13,020  -->  00:00:15,160
But I'm gonna start with
naming conventions.
4

4

00:00:15,160  -->  00:00:18,260
And there's actually good
reason why you wanna do this.
5

5

00:00:18,260  -->  00:00:21,440
And two of the biggest reasons for
adopting these accepted conventions,
6

6

00:00:21,440  -->  00:00:24,900
which we're gonna be going through in
this video, for naming your variables,
7

7

00:00:24,900  -->  00:00:29,880
methods and objects in Java, is that it
makes your code easier for others to read.
8

8

00:00:29,880  -->  00:00:33,940
Now, others here actually include yourself
when you come to look at your code weeks,
9

9

00:00:33,940  -->  00:00:37,470
or perhaps months, or maybe even years
after you've originally written it.
10

10

00:00:37,470  -->  00:00:40,800
Cuz trust me when I say that you will
forget why you've done something.
11

11

00:00:40,800  -->  00:00:42,200
So if you can make your life easier and
12

12

00:00:42,200  -->  00:00:45,110
the life of other programmers,
by following these accepted conventions,
13

13

00:00:45,110  -->  00:00:47,530
it's just going to make things
a lot easier for all concerned.
14

14

00:00:50,130  -->  00:00:53,170
So let's start off talking about packages.
15

15

00:00:53,170  -->  00:00:57,030
So the things you actually get to
name in Java are packages, classes,
16

16

00:00:57,030  -->  00:01:01,720
interface, methods, constants,
variables as well as type parameters.
17

17

00:01:01,720  -->  00:01:06,950
And pretty well all of those you've
actually seen in the course so far.
18

18

00:01:06,950  -->  00:01:10,160
Let's actually start talking
about packages first.
19

19

00:01:10,160  -->  00:01:13,360
And the format of the package
is to always be in lower case.
20

20

00:01:13,360  -->  00:01:17,470
Now, the package name should be unique,
and you need to use your Internet domain
21

21

00:01:17,470  -->  00:01:20,060
name, reversed, as a prefix for
the package name.
22

22

00:01:20,060  -->  00:01:22,980
And you've seen me using that in
the course with com.timbuchalka.
23

23

00:01:22,980  -->  00:01:25,980
And Oracle actually specified
conventions for package names and
24

24

00:01:25,980  -->  00:01:30,310
there's a link to that, quite a long which
you can actually find out more about that.
25

25

00:01:30,310  -->  00:01:31,710
But I'm gonna give you
a bit of an overview what
26

26

00:01:31,710  -->  00:01:32,770
they are anyway on the next slide.
27

27

00:01:37,590  -->  00:01:40,020
Now some of the invalid
domain name components.
28

28

00:01:40,020  -->  00:01:43,310
Firstly, if your domain name has got
a dash in it, which is fairly common for
29

29

00:01:43,310  -->  00:01:46,150
domain names, you need to change that,
when using a package, to an underscore.
30

30

00:01:46,150  -->  00:01:49,070
Now the domain name components,
starting with a number,
31

31

00:01:49,070  -->  00:01:51,310
should instead start with an underscore.
32

32

00:01:51,310  -->  00:01:54,590
And also, importantly, domain name
components that are Java keywords should
33

33

00:01:54,590  -->  00:01:57,010
have that component starting
with an underscore as well.
34

34

00:02:02,150  -->  00:02:05,590
So here's some examples of converting
invalid domain name components to
35

35

00:02:05,590  -->  00:02:06,600
valid ones.
36

36

00:02:06,600  -->  00:02:09,010
In the first case, switch.supplier.com,
37

37

00:02:09,010  -->  00:02:13,920
if that was your package name, you should
actually make that com.supplier._switch,
38

38

00:02:13,920  -->  00:02:16,440
because, of course,
switch is a Java keyword.
39

39

00:02:16,440  -->  00:02:18,880
Second example,
1world.com with a numeric one.
40

40

00:02:18,880  -->  00:02:22,680
You should actually change
that to com._1world.
41

41

00:02:22,680  -->  00:02:29,090
And the third one, experts-exchange.com
would be com.experts_exchange.
42

42

00:02:31,070  -->  00:02:32,890
I have some example of some package names.
43

43

00:02:32,890  -->  00:02:38,660
java.lang, java.io,
org.xml.sax.helpers, com.timbuchalka,
44

44

00:02:38,660  -->  00:02:43,830
which you've seen throughout this course,
.autoboxing.
45

45

00:02:43,830  -->  00:02:46,230
Okay, let's move on to class names now.
46

46

00:02:46,230  -->  00:02:48,150
Now class names should use camel case,
47

47

00:02:48,150  -->  00:02:52,180
the class name should also be nouns,
because the represent things.
48

48

00:02:52,180  -->  00:02:54,130
They should start with a capital letter.
49

49

00:02:54,130  -->  00:02:56,650
And each word in the name should
also start with a capital.
50

50

00:02:56,650  -->  00:02:59,910
For example LinkedList, as you can see
there, the capital for the word linked and
51

51

00:02:59,910  -->  00:03:01,250
a capital also for the word list.
52

52

00:03:07,230  -->  00:03:08,740
There are some example class names.
53

53

00:03:08,740  -->  00:03:13,030
ArrayList, LinkedList, String, TopSong,
GearBox, and main, as you can see there.
54

54

00:03:13,030  -->  00:03:16,120
And, again, we're capitalizing
each word for the class name.
55

55

00:03:19,220  -->  00:03:22,360
Okay, interface names, very similar rules.
56

56

00:03:22,360  -->  00:03:24,740
Capitalize like class names,
like CamelCase.
57

57

00:03:24,740  -->  00:03:28,370
Consider what objects implementing
the interface will become or
58

58

00:03:28,370  -->  00:03:31,150
what they will be able to do when you're
actually coming up with the name.
59

59

00:03:31,150  -->  00:03:34,460
Some examples for that would be lists,
comparable, serializable.
60

60

00:03:38,110  -->  00:03:39,480
Method names, let's talk about that now.
61

61

00:03:39,480  -->  00:03:41,600
Method names should be mixed case.
62

62

00:03:41,600  -->  00:03:46,690
They're often verbs, because I reflect the
function performed or the result returned.
63

63

00:03:46,690  -->  00:03:49,220
Examples would be size, getName,
64

64

00:03:49,220  -->  00:03:50,880
or addPlayer as you can see on the screen,
there.
65

65

00:03:54,730  -->  00:03:56,370
Let's talk about constants.
66

66

00:03:56,370  -->  00:03:59,410
A constant, so we haven't used
those much in the course, but
67

67

00:03:59,410  -->  00:04:02,690
they're actually to do to define something
which is actually a constant value,
68

68

00:04:02,690  -->  00:04:05,800
in other words a value that's never
going to change in your program.
69

69

00:04:05,800  -->  00:04:11,260
And you can see there's a couple examples
there of MAX_INT, SEVERITY_ERROR and PI.
70

70

00:04:11,260  -->  00:04:14,490
And some of those are actually used
within the Java framework itself.
71

71

00:04:14,490  -->  00:04:16,540
So constants should be all upper case.
72

72

00:04:16,540  -->  00:04:19,880
You need to separate words with
an underscore as you can see below,
73

73

00:04:19,880  -->  00:04:23,310
and they should also be declared
using the final keyword
74

74

00:04:23,310  -->  00:04:26,570
which actually tells Java that
you won't be changing the value.
75

75

00:04:26,570  -->  00:04:28,790
And you'll be learning more about
what final and static and so
76

76

00:04:28,790  -->  00:04:30,480
forth is in this section
of the course as well.
77

77

00:04:33,680  -->  00:04:37,280
Okay, variable names,
also field names as well.
78

78

00:04:38,330  -->  00:04:41,540
And just to remind you,
a variable name, I'm using
79

79

00:04:41,540  -->  00:04:45,920
pretty much what covers any variable
that you're defining in your class.
80

80

00:04:45,920  -->  00:04:47,960
But also this applies to fields,
which, of course,
81

81

00:04:47,960  -->  00:04:52,140
are basically variables assigned at
the class level that we actually signed
82

82

00:04:52,140  -->  00:04:54,260
using our scope and so
forth at the top of the class.
83

83

00:04:54,260  -->  00:04:55,740
So, in both cases,
84

84

00:04:55,740  -->  00:04:59,720
you should follow these rules
generally speaking to be a mixed case.
85

85

00:04:59,720  -->  00:05:02,340
The actual name should be meaningful and
indicative.
86

86

00:05:02,340  -->  00:05:04,420
Start with a lower case letter and
like classes,
87

87

00:05:04,420  -->  00:05:06,760
which are our interfaces
which are upper case.
88

88

00:05:06,760  -->  00:05:08,910
Don't use underscores for
their variable names.
89

89

00:05:08,910  -->  00:05:10,980
And you could see some examples there.
90

90

00:05:10,980  -->  00:05:13,120
i, league, SydneySwans.
91

91

00:05:13,120  -->  00:05:16,820
And in case you're playing along at home,
SydneySwans is actually incorrect.
92

92

00:05:16,820  -->  00:05:18,590
Because that's actually
showing a capital S.
93

93

00:05:18,590  -->  00:05:21,570
So, that should actually
be lower case S for Sydney.
94

94

00:05:21,570  -->  00:05:24,900
But then after that,
the second word is in uppercase.
95

95

00:05:24,900  -->  00:05:28,290
I can just confirmation there that
you start off in lowercase, but
96

96

00:05:28,290  -->  00:05:31,570
then the second and subsequent words,
as you can see that in the case with
97

97

00:05:31,570  -->  00:05:34,320
boxLength at the end,
should actually be in uppercase.
98

98

00:05:34,320  -->  00:05:35,850
So that's camel case essentially.
99

99

00:05:38,840  -->  00:05:40,710
Okay, moving on.
100

100

00:05:40,710  -->  00:05:42,060
Type parameters.
101

101

00:05:42,060  -->  00:05:46,120
Type parameters generally are a single
character and capital letters as well.
102

102

00:05:46,120  -->  00:05:48,850
And you saw that in the generic section
of this course where we actually use
103

103

00:05:48,850  -->  00:05:51,770
type parameters and
we used just a single letter.
104

104

00:05:51,770  -->  00:05:54,670
And there's a link there you can go
to to find out more about it for
105

105

00:05:54,670  -->  00:05:58,750
the guidelines given by Oracle,
who, of course, look after Java.
106

106

00:05:58,750  -->  00:06:01,440
And they got extended information
if you want to go in there and
107

107

00:06:01,440  -->  00:06:02,270
find out more about that.
108

108

00:06:05,200  -->  00:06:07,220
And just as an example
of some type parameters,
109

109

00:06:07,220  -->  00:06:09,660
you saw this in the generic section.
110

110

00:06:09,660  -->  00:06:12,860
E as in element, which is used extensively
by the Java collections framework
111

111

00:06:12,860  -->  00:06:15,200
actually, which you'll be
seeing when we get to that.
112

112

00:06:15,200  -->  00:06:20,150
K for key, N for a number, T for
type, V for value, and S, U, V, etc,
113

113

00:06:20,150  -->  00:06:22,560
second, third and fourth types.
114

114

00:06:22,560  -->  00:06:26,800
So that just gives you a bit of a standard
way to actually come up with type
115

115

00:06:26,800  -->  00:06:29,850
parameters when you need
to use those in your code.
116

116

00:06:31,630  -->  00:06:32,440
So that's actually it.
117

117

00:06:32,440  -->  00:06:35,910
I know it's a quick overview, but I just
thought it was important to give you a bit
118

118

00:06:35,910  -->  00:06:39,100
of an overview of some of the standard
naming conventions used by Oracle.
119

119

00:06:39,100  -->  00:06:41,240
And there were links in the slides,
as I mentioned,
120

120

00:06:41,240  -->  00:06:43,540
where you can actually
find out more about that.
121

121

00:06:43,540  -->  00:06:47,580
And it's just important to try, again as
I mentioned at the start of this video,
122

122

00:06:47,580  -->  00:06:51,150
to follow these conventions,
because they can ultimately help you and
123

123

00:06:51,150  -->  00:06:54,900
other developers in the future who may
have to look at your code at some point
124

124

00:06:54,900  -->  00:06:59,040
down the track when you've actually
forgotten, how you did a particular thing.
125

125

00:06:59,040  -->  00:07:01,420
But just by looking at these
standard conventions and
126

126

00:07:01,420  -->  00:07:04,810
making sure your code implements them,
you can save yourself a lot of time.
127

127

00:07:04,810  -->  00:07:07,750
All right, thanks for watching, and
I'll see you in the next video.
