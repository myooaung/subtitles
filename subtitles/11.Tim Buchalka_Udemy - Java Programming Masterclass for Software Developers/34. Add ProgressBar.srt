1
1

00:00:05,380  -->  00:00:06,210
- [Tim] Alright,
2

2

00:00:06,210  -->  00:00:07,950
so let's just run our application again
3

3

00:00:07,950  -->  00:00:10,040
to list the albums for given artist
4

4

00:00:10,040  -->  00:00:12,290
so I'm just going to run it
5

5

00:00:15,050  -->  00:00:18,100
so we get our artists
coming up at the start
6

6

00:00:18,100  -->  00:00:19,700
and I can select the particular artist
7

7

00:00:19,700  -->  00:00:22,090
or select AC/DC in the last video,
8

8

00:00:22,090  -->  00:00:23,730
but let's use one that
what I've used previously
9

9

00:00:23,730  -->  00:00:24,850
Fleedwood Mac
10

10

00:00:24,850  -->  00:00:27,270
and click Show Albums Artist.
11

11

00:00:28,220  -->  00:00:29,670
So obviously, the contents of the table,
12

12

00:00:29,670  -->  00:00:30,560
now onscreen are being
13

13

00:00:30,560  -->  00:00:32,810
replaced by the five Fleetwood Mac albums
14

14

00:00:32,810  -->  00:00:34,640
that are in the database.
15

15

00:00:34,640  -->  00:00:35,600
I (chuckles) seem to have quite a few
16

16

00:00:35,600  -->  00:00:38,780
greatest hits and best of albums there.
17

17

00:00:38,780  -->  00:00:40,110
Alright, so if you wanted to go back
18

18

00:00:40,110  -->  00:00:41,930
to the list of artists,
19

19

00:00:41,930  -->  00:00:44,640
we have to click on this
List Artists button.
20

20

00:00:44,640  -->  00:00:46,970
But first, we need to
assign an event handler
21

21

00:00:46,970  -->  00:00:48,170
to that button.
22

22

00:00:48,170  -->  00:00:50,220
Now, what we can do is use the same method
23

23

00:00:50,220  -->  00:00:53,060
we call from application.start
24

24

00:00:53,060  -->  00:00:54,300
and we'll have to go back
25

25

00:00:54,300  -->  00:00:55,750
to the controller to do that.
26

26

00:00:55,750  -->  00:00:57,430
So let's do that.
27

27

00:00:57,430  -->  00:00:59,790
So basically, we're just going to call
28

28

00:00:59,790  -->  00:01:01,910
the List Artist method again,
29

29

00:01:01,910  -->  00:01:04,820
but obviously, we are
going to do it as an event
30

30

00:01:04,820  -->  00:01:06,280
for the button when it's clicked.
31

31

00:01:06,280  -->  00:01:09,250
So I'm going to go back to controller
32

32

00:01:09,250  -->  00:01:12,490
and we're going to add a new method.
33

33

00:01:12,490  -->  00:01:13,710
And what we need to do first
34

34

00:01:13,710  -->  00:01:16,920
is looking at our List Artist method,
35

35

00:01:16,920  -->  00:01:19,340
now we're going to use it in the FXML.
36

36

00:01:19,340  -->  00:01:22,020
We need to annotate it at FXML
37

37

00:01:22,020  -->  00:01:23,290
like we've done before
38

38

00:01:23,290  -->  00:01:24,850
and that won't affect it running
39

39

00:01:24,850  -->  00:01:27,540
from the main method though at the start.
40

40

00:01:27,540  -->  00:01:28,940
But, what it will do is allow us
41

41

00:01:28,940  -->  00:01:30,830
to use that as an event
42

42

00:01:30,830  -->  00:01:32,070
or rather an event handler, if you will
43

43

00:01:32,070  -->  00:01:34,150
for the button.
44

44

00:01:34,150  -->  00:01:37,830
So to do that, we go back to our main.fxml
45

45

00:01:37,830  -->  00:01:39,720
and we find a button.
46

46

00:01:39,720  -->  00:01:42,630
It's the second one here
that "Show Albums (artist)".
47

47

00:01:42,630  -->  00:01:43,670
Well actually, that's one we fixed
48

48

00:01:43,670  -->  00:01:44,990
on the last video.
49

49

00:01:44,990  -->  00:01:45,820
This is the one we want.
50

50

00:01:45,820  -->  00:01:47,770
The first one, the ListArtists.
51

51

00:01:47,770  -->  00:01:49,500
We want that to add a known action
52

52

00:01:49,500  -->  00:01:50,820
so when that's clicked,
53

53

00:01:50,820  -->  00:01:52,440
we get our list of artists back again.
54

54

00:01:52,440  -->  00:01:53,670
So let's try doing that.
55

55

00:01:53,670  -->  00:01:54,500
So it's going to be
56

56

00:01:54,500  -->  00:01:56,920
onAction="#List Artists"
57

57

00:02:00,600  -->  00:02:03,760
Alright, so if you run that again now,
58

58

00:02:06,520  -->  00:02:08,350
I would select a particular artist
59

59

00:02:08,350  -->  00:02:10,070
and Show Albums
60

60

00:02:10,070  -->  00:02:10,900
and now we should be able
61

61

00:02:10,900  -->  00:02:12,010
to click on List Artists
62

62

00:02:12,010  -->  00:02:13,570
and we get our artists back now
63

63

00:02:13,570  -->  00:02:15,390
showing on the screen.
64

64

00:02:15,390  -->  00:02:17,930
The one thing we haven't
talk much about is
65

65

00:02:17,930  -->  00:02:20,480
what happens if we haven't selected
66

66

00:02:20,480  -->  00:02:22,500
an artist in the table
67

67

00:02:22,500  -->  00:02:25,510
and we click on Show Albums,
68

68

00:02:25,510  -->  00:02:26,680
you noticed down in the (mumbles)
69

69

00:02:26,680  -->  00:02:27,520
at the buttom left,
70

70

00:02:27,520  -->  00:02:29,710
we got a message popping up, saying
71

71

00:02:29,710  -->  00:02:31,670
NO ARTIST SELECTED
72

72

00:02:31,670  -->  00:02:32,500
and just to confirm
73

73

00:02:32,500  -->  00:02:35,430
I can select AC/DC again
74

74

00:02:35,430  -->  00:02:36,260
and it does work,
75

75

00:02:36,260  -->  00:02:38,430
obviously, we don't get another message.
76

76

00:02:38,430  -->  00:02:39,640
And then back to the List Artists
77

77

00:02:39,640  -->  00:02:42,530
to get a list of all the artists again.
78

78

00:02:42,530  -->  00:02:43,610
Alright, so it's been a bit of a heck
79

79

00:02:43,610  -->  00:02:46,060
what we've done here
by using the same table
80

80

00:02:46,060  -->  00:02:46,890
for different data
81

81

00:02:46,890  -->  00:02:47,860
but otherwise you could see
82

82

00:02:47,860  -->  00:02:50,020
we've managed to get it to work.
83

83

00:02:50,020  -->  00:02:51,270
So this will be probably the sort of thing
84

84

00:02:51,270  -->  00:02:55,790
you would do as a developer
while prototyping.
85

85

00:02:55,790  -->  00:02:58,050
Now let's turn to the progress bar
86

86

00:02:58,050  -->  00:03:00,120
that's currently in the layout
87

87

00:03:00,120  -->  00:03:01,660
but not visible.
88

88

00:03:01,660  -->  00:03:03,770
Now, we covered how to use a progress bar
89

89

00:03:03,770  -->  00:03:05,920
with a background task
in the threaded section,
90

90

00:03:05,920  -->  00:03:07,780
so we're not going to spend too much time
91

91

00:03:07,780  -->  00:03:09,900
on the implementation here.
92

92

00:03:09,900  -->  00:03:11,440
We we're fetching a large number records
93

93

00:03:11,440  -->  00:03:12,580
from the database,
94

94

00:03:12,580  -->  00:03:14,010
it would be nice to let the user know
95

95

00:03:14,010  -->  00:03:16,790
that the application is working.
96

96

00:03:16,790  -->  00:03:19,110
Now we use an indeterminate progress bar
97

97

00:03:19,110  -->  00:03:21,540
because we fetched the
records using one query
98

98

00:03:21,540  -->  00:03:24,030
and we don't know how
many records there are.
99

99

00:03:24,030  -->  00:03:25,520
Now even if we queried the count,
100

100

00:03:25,520  -->  00:03:27,640
we still couldn't report progress
101

101

00:03:27,640  -->  00:03:28,730
and that's because we get the records
102

102

00:03:28,730  -->  00:03:32,060
back in one lump rather than individually.
103

103

00:03:32,060  -->  00:03:33,210
Another way of doing it, possibly,
104

104

00:03:33,210  -->  00:03:35,700
would be to query the records in blocks.
105

105

00:03:35,700  -->  00:03:38,260
For example, we could
ask for records 1 to 100,
106

106

00:03:38,260  -->  00:03:41,730
then 101 to 200, etc. and report progress
107

107

00:03:41,730  -->  00:03:42,990
between each query,
108

108

00:03:42,990  -->  00:03:44,870
but that's probably outside
of the scope of this
109

109

00:03:44,870  -->  00:03:47,860
and the previous sequel
videos in this section.
110

110

00:03:47,860  -->  00:03:49,640
So all we can really
do is let the user know
111

111

00:03:49,640  -->  00:03:51,620
that the application is working.
112

112

00:03:51,620  -->  00:03:53,470
Alright so let's go
back and close this down
113

113

00:03:53,470  -->  00:03:55,630
and set up our progress bar first.
114

114

00:03:55,630  -->  00:03:57,460
So go back to the FXML
115

115

00:03:58,850  -->  00:04:00,470
and we got this progress bar down here,
116

116

00:04:00,470  -->  00:04:01,550
down the bottom.
117

117

00:04:01,550  -->  00:04:03,030
So first, all we need to do is
118

118

00:04:03,030  -->  00:04:05,710
have a reference stored in the controller
119

119

00:04:05,710  -->  00:04:08,190
so we're gonna add an FX ID to it.
120

120

00:04:08,190  -->  00:04:10,190
fx:id="progressBar"
121

121

00:04:11,160  -->  00:04:13,580
(Tim typing)
122

122

00:04:15,860  -->  00:04:17,460
Alright, then we're going to go back
123

123

00:04:17,460  -->  00:04:19,400
to our controller
124

124

00:04:19,400  -->  00:04:22,650
and we're going to add an entry for it.
125

125

00:04:24,850  -->  00:04:26,250
And it's going to be
126

126

00:04:26,250  -->  00:04:28,910
private ProgressBar progressBar.
127

127

00:04:32,350  -->  00:04:35,290
So when we're fetching
data from the database,
128

128

00:04:35,290  -->  00:04:37,240
we need to make the progress bar visible
129

129

00:04:37,240  -->  00:04:38,600
and when that task completes
130

130

00:04:38,600  -->  00:04:40,850
we need to make it invisible
131

131

00:04:40,850  -->  00:04:43,380
by setting its visible property to false.
132

132

00:04:43,380  -->  00:04:47,550
So let's implement this for
the get all artists task.
133

133

00:04:49,600  -->  00:04:51,020
Down here, down at the bottom.
134

134

00:04:51,020  -->  00:04:53,550
Now keep in mind that we
can't set the visibility
135

135

00:04:53,550  -->  00:04:55,850
from inside the core method
136

136

00:04:55,850  -->  00:04:57,550
and that's because any code that touches
137

137

00:04:57,550  -->  00:05:00,920
a UI control has to run on the UI thread.
138

138

00:05:00,920  -->  00:05:04,420
So we will use task.setOn(succeeded)
139

139

00:05:04,420  -->  00:05:06,920
and task.set on file methods
140

140

00:05:06,920  -->  00:05:10,160
to set the progress bar
visibility back to false.
141

141

00:05:10,160  -->  00:05:11,630
And the other thing we have to do is bond
142

142

00:05:11,630  -->  00:05:13,480
the progress bar to the task.
143

143

00:05:13,480  -->  00:05:15,470
So let's go ahead and
write the code to do that
144

144

00:05:15,470  -->  00:05:18,190
and obviously we're coding
this to get all tasks
145

145

00:05:18,190  -->  00:05:19,360
from the List Artists.
146

146

00:05:19,360  -->  00:05:22,100
So as I mentioned we can't
put the code in there,
147

147

00:05:22,100  -->  00:05:23,770
in the core method
148

148

00:05:23,770  -->  00:05:25,630
because the UI, any code that touches
149

149

00:05:25,630  -->  00:05:27,440
a UI control has to run on UI threads.
150

150

00:05:27,440  -->  00:05:30,590
So we'll actually have
to do it in listArtists.
151

151

00:05:30,590  -->  00:05:32,320
So we got that line there that's right.
152

152

00:05:32,320  -->  00:05:34,270
The first line that actually (mumbles)
153

153

00:05:34,270  -->  00:05:35,500
to get (mumbles) tasks
154

154

00:05:35,500  -->  00:05:37,830
and then setting the items properly
155

155

00:05:37,830  -->  00:05:39,880
and binding their tasks
156

156

00:05:39,880  -->  00:05:40,720
that's correct
157

157

00:05:40,720  -->  00:05:41,730
but we would also want to add one now
158

158

00:05:41,730  -->  00:05:42,710
for the progress bar.
159

159

00:05:42,710  -->  00:05:44,580
So progressBar.
160

160

00:05:44,580  -->  00:05:45,410
That's going to be
161

161

00:05:45,410  -->  00:05:46,250
progressProperty().bind
162

162

00:05:46,250  -->  00:05:48,830
and we're going to bind that to
163

163

00:05:50,240  -->  00:05:54,130
(task.progressProperty())
164

164

00:05:54,130  -->  00:05:55,630
then we're going to do
165

165

00:05:55,630  -->  00:05:59,380
progressBar.setVisible(true)
166

166

00:06:04,100  -->  00:06:04,930
and then we're going to do a
167

167

00:06:04,930  -->  00:06:09,100
task.setOnSucceeded (e ->
progressBar.setVisible(false))
168

168

00:06:17,760  -->  00:06:20,680
and same (mumbles)
169

169

00:06:25,110  -->  00:06:29,280
task.setOnFailed (e ->
progressBar.setVisible(false))
170

170

00:06:30,880  -->  00:06:32,050
So whether we succeed or fail,
171

171

00:06:32,050  -->  00:06:34,390
we do want the progress bar to disappear
172

172

00:06:34,390  -->  00:06:36,280
so just to confirm, we're
using Lander expressions
173

173

00:06:36,280  -->  00:06:38,110
on line 29 and 30 here
174

174

00:06:39,790  -->  00:06:42,560
to set the progress bar visibility.
175

175

00:06:42,560  -->  00:06:44,270
Now there are other setOn methods
176

176

00:06:44,270  -->  00:06:45,600
in the task class,
177

177

00:06:45,600  -->  00:06:47,610
for example, we can set
code to run if the task
178

178

00:06:47,610  -->  00:06:50,290
is cancelled, perhaps due to user action,
179

179

00:06:50,290  -->  00:06:52,050
but in this case we
only need to worry about
180

180

00:06:52,050  -->  00:06:53,940
the success and failure cases
181

181

00:06:53,940  -->  00:06:56,200
for this (mumbles) application.
182

182

00:06:56,200  -->  00:06:57,030
Now again,
183

183

00:06:57,030  -->  00:06:59,290
because our task doesn't
report any progress,
184

184

00:06:59,290  -->  00:07:01,850
the progress bar will be indeterminant.
185

185

00:07:01,850  -->  00:07:03,510
Now we could run this now
186

186

00:07:03,510  -->  00:07:04,920
but the query complete so quickly
187

187

00:07:04,920  -->  00:07:07,560
that we wouldn't see the progress bar.
188

188

00:07:07,560  -->  00:07:08,540
So what I'm going to do
189

189

00:07:08,540  -->  00:07:10,250
is slow things down, a
little bit, by adding a
190

190

00:07:10,250  -->  00:07:12,890
code to thread.sleep while we're looping
191

191

00:07:12,890  -->  00:07:13,920
through the result set
192

192

00:07:13,920  -->  00:07:17,170
in the data source.list artists method.
193

193

00:07:18,070  -->  00:07:21,320
Let's go ahead and have a look at that.
194

194

00:07:22,650  -->  00:07:24,730
Okay, so query artist method I mean.
195

195

00:07:24,730  -->  00:07:26,350
Alright so,
196

196

00:07:26,350  -->  00:07:28,640
what we're going to do
is put the code in here
197

197

00:07:28,640  -->  00:07:30,600
just to slow things down a little bit
198

198

00:07:30,600  -->  00:07:32,390
and will put it in the (mumbles) loops
199

199

00:07:32,390  -->  00:07:34,810
while results start next
200

200

00:07:34,810  -->  00:07:36,480
we're gonna simulate...
201

201

00:07:36,480  -->  00:07:38,060
A bit of a delay there, sorry,
202

202

00:07:38,060  -->  00:07:40,720
again we can see the
progress bar on operation
203

203

00:07:40,720  -->  00:07:44,980
and we're going to do a Thread.sleep(20.)
204

204

00:07:44,980  -->  00:07:45,810
We're going to
205

205

00:07:45,810  -->  00:07:49,730
catch(InterruptedException e).
206

206

00:07:51,720  -->  00:07:54,140
(Tim typing)
207

207

00:07:57,700  -->  00:07:59,150
We don't need to do
this but we'll just put
208

208

00:07:59,150  -->  00:08:01,180
something there, just in case
209

209

00:08:01,180  -->  00:08:03,390
and then, let it continue on afterwards.
210

210

00:08:03,390  -->  00:08:05,040
So basically, now we've added the code
211

211

00:08:05,040  -->  00:08:06,840
so that for every artist, the threads
212

212

00:08:06,840  -->  00:08:09,450
going to sleep for 20 milliseconds.
213

213

00:08:09,450  -->  00:08:11,860
Right, so if we run this now,
214

214

00:08:15,200  -->  00:08:19,350
you'll see the progress
bar down the bottom
215

215

00:08:19,350  -->  00:08:21,330
and then it disappears once the artists
216

216

00:08:21,330  -->  00:08:24,410
actually are loaded up successfully.
217

217

00:08:24,410  -->  00:08:25,760
And again you saw that it was an
218

218

00:08:25,760  -->  00:08:27,180
indeterminate progress bar so
219

219

00:08:27,180  -->  00:08:29,860
rather than showing increasing progress,
220

220

00:08:29,860  -->  00:08:31,240
the bar is gonna animate backwards
221

221

00:08:31,240  -->  00:08:33,080
and forwards, as you
saw, from left to right
222

222

00:08:33,080  -->  00:08:34,670
and then back from right to left.
223

223

00:08:34,670  -->  00:08:37,320
And obviously, it
disappeared when the table
224

224

00:08:37,320  -->  00:08:39,850
was finished loading.
225

225

00:08:39,850  -->  00:08:41,570
And again, if we just do a query here,
226

226

00:08:41,570  -->  00:08:43,760
Show Albums Artists
227

227

00:08:43,760  -->  00:08:45,380
and then click on 'List Artists' again,
228

228

00:08:45,380  -->  00:08:48,050
we get the same thing happening.
229

229

00:08:49,950  -->  00:08:52,730
And there's our artists again.
230

230

00:08:52,730  -->  00:08:54,640
Alright so that's it for queries.
231

231

00:08:54,640  -->  00:08:56,490
The important thing to remember is that
232

232

00:08:56,490  -->  00:08:57,790
we always want to run the query
233

233

00:08:57,790  -->  00:08:59,570
on a background thread
234

234

00:08:59,570  -->  00:09:01,920
using something like a task.
235

235

00:09:01,920  -->  00:09:04,220
When we're ready to
update the user interface,
236

236

00:09:04,220  -->  00:09:06,110
we have to do so on the
237

237

00:09:06,110  -->  00:09:09,360
Java FX application UI thread.
238

238

00:09:09,360  -->  00:09:11,190
And if we're using data binding,
239

239

00:09:11,190  -->  00:09:12,610
the UI code will run
240

240

00:09:12,610  -->  00:09:14,810
on the UI thread automatically.
241

241

00:09:14,810  -->  00:09:17,410
If not, you'd want to
use platform.run later
242

242

00:09:17,410  -->  00:09:20,750
or a method like task.setOn(succeed)
243

243

00:09:20,750  -->  00:09:23,850
to run the UI code on the UI thread.
244

244

00:09:23,850  -->  00:09:25,910
Alright, so let's finish
this video here now,
245

245

00:09:25,910  -->  00:09:26,940
in the next video let's start
246

246

00:09:26,940  -->  00:09:29,940
having a bit of discussion about inserts,
247

247

00:09:29,940  -->  00:09:31,670
updates and deletes,
248

248

00:09:31,670  -->  00:09:34,020
specifically, how do we
update the UI when dealing
249

249

00:09:34,020  -->  00:09:35,670
with those.
250

250

00:09:35,670  -->  00:09:37,950
So, see you in the next video.
