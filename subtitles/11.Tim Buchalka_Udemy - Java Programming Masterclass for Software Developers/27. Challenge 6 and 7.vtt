WEBVTT
1
1

00:00:04.990  -->  00:00:06.760
alright so just before we start
2

2

00:00:06.760  -->  00:00:08.410
challenge six let's actually make a
3

3

00:00:08.410  -->  00:00:10.470
change to both the deposit and withdraw
4

4

00:00:10.470  -->  00:00:12.550
methods we're going to add a status
5

5

00:00:12.550  -->  00:00:15.000
variable to both methods we're going to
6

6

00:00:15.000  -->  00:00:17.130
initialize it to false and if the thread
7

7

00:00:17.130  -->  00:00:19.080
gets the lock we're going to set the
8

8

00:00:19.080  -->  00:00:21.600
status variable to true and at the end
9

9

00:00:21.600  -->  00:00:22.840
of each method we're going to print the
10

10

00:00:22.840  -->  00:00:25.440
status to the console so let's just go
11

11

00:00:25.440  -->  00:00:26.650
ahead and make those changes which
12

12

00:00:26.650  -->  00:00:27.730
shouldn't take too long
13

13

00:00:27.730  -->  00:00:29.920
we're going to introduce a local
14

14

00:00:29.920  -->  00:00:32.580
variable boolean status...
15

15

00:00:32.580  -->  00:00:36.310
....
16

16

00:00:36.310  -->  00:00:38.590
...
17

17

00:00:38.590  -->  00:00:40.060
....
18

18

00:00:40.060  -->  00:00:42.040
....
19

19

00:00:42.040  -->  00:00:44.680
...
20

20

00:00:44.680  -->  00:00:59.020
...
21

21

00:00:59.020  -->  00:01:00.340
so that's it so we would do the same here
22

22

00:01:00.340  -->  00:01:03.460
for the withdraw method....
23

23

00:01:03.460  -->  00:01:07.620
....
24

24

00:01:07.620  -->  00:01:09.390
...
25

25

00:01:09.390  -->  00:01:12.030
....
26

26

00:01:12.030  -->  00:01:14.430
...
27

27

00:01:14.430  -->  00:01:17.740
....
28

28

00:01:17.740  -->  00:01:21.720
....
29

29

00:01:21.720  -->  00:01:25.110
...
30

30

00:01:25.110  -->  00:01:25.890
....
31

31

00:01:25.890  -->  00:01:28.960
alright so let's go ahead now and look
32

32

00:01:28.960  -->  00:01:36.380
at challenge six
33

33

00:01:36.380  -->  00:01:38.680
so challenge six is to update the
34

34

00:01:38.680  -->  00:01:41.600
code so that the status variable is
35

35

00:01:41.600  -->  00:01:44.270
thread-safe use whatever method you like
36

36

00:01:44.270  -->  00:01:45.950
the synchronized keyword or the lock
37

37

00:01:45.950  -->  00:01:48.280
object so the idea again is to make sure
38

38

00:01:48.280  -->  00:01:50.530
that the status variable is thread-safe
39

39

00:01:50.530  -->  00:01:53.810
so go ahead and try that now pause
40

40

00:01:53.810  -->  00:01:55.360
the video and I'll see you when you get
41

41

00:01:55.360  -->  00:01:57.110
back and i'll show you the solution
42

42

00:01:57.110  -->  00:02:00.800
pause the video now
43

43

00:02:00.800  -->  00:02:03.020
alright so let's talk about the solution
44

44

00:02:03.020  -->  00:02:07.400
to challenge six
45

45

00:02:07.400  -->  00:02:09.620
and sorry to tell you that was
46

46

00:02:09.620  -->  00:02:12.410
a trick challenge since the status
47

47

00:02:12.410  -->  00:02:14.570
variable is a local variable it's
48

48

00:02:14.570  -->  00:02:17.570
already thread-safe if you recall we
49

49

00:02:17.570  -->  00:02:18.590
learned in this section of the course
50

50

00:02:18.590  -->  00:02:21.260
that local variables are stored on
51

51

00:02:21.260  -->  00:02:23.750
the thread stack so each thread will
52

52

00:02:23.750  -->  00:02:26.120
have its own copy threads won't
53

53

00:02:26.120  -->  00:02:28.160
interfere with each other when it comes
54

54

00:02:28.160  -->  00:02:29.870
to setting and getting the status value
55

55

00:02:29.870  -->  00:02:31.340
in this case so you didn't need to make
56

56

00:02:31.340  -->  00:02:33.170
any changes to the source code
57

57

00:02:33.170  -->  00:02:34.190
alright let's move on to the next
58

58

00:02:34.190  -->  00:02:38.180
challenge alright so for this challenge
59

59

00:02:38.180  -->  00:02:41.480
challenge challenge 7 this is a spot
60

60

00:02:41.480  -->  00:02:43.010
and fix the problem so what I'm going to
61

61

00:02:43.010  -->  00:02:45.860
do is put some more or paste
62

62

00:02:45.860  -->  00:02:47.990
some code into this project and get you to
63

63

00:02:47.990  -->  00:02:50.090
look at it and the see if you can come up with
64

64

00:02:50.090  -->  00:02:50.810
a fix
65

65

00:02:50.810  -->  00:02:52.850
so the code i'm going to place is
66

66

00:02:52.850  -->  00:02:55.040
available in the resources section but
67

67

00:02:55.040  -->  00:02:57.740
we need to create a new class i'm going to
68

68

00:02:57.740  -->  00:03:01.040
create that and call it challenge 7
69

69

00:03:01.040  -->  00:03:04.670
for a lack of better term we're going to paste in
70

70

00:03:04.670  -->  00:03:11.830
the code
71

71

00:03:11.830  -->  00:03:20.230
ok so there's the code and i'll just go
72

72

00:03:20.230  -->  00:03:21.880
over to a slide briefly and just tell you
73

73

00:03:21.880  -->  00:03:23.980
what is comprised of this was comprised
74

74

00:03:23.980  -->  00:03:25.960
of what's in this class and then
75

75

00:03:25.960  -->  00:03:35.560
ultimately what you need to do
76

76

00:03:35.560  -->  00:03:37.510
alright so this challenge challenge 7
77

77

00:03:37.510  -->  00:03:39.610
spot and fix the problem
78

78

00:03:39.610  -->  00:03:41.290
so we're going to take a look at a
79

79

00:03:41.290  -->  00:03:43.150
similar application which also deals
80

80

00:03:43.150  -->  00:03:45.280
with bank accounts but in this case it
81

81

00:03:45.280  -->  00:03:47.950
performs performs transfers from one
82

82

00:03:47.950  -->  00:03:49.750
bank account to another
83

83

00:03:49.750  -->  00:03:51.700
now this version of the bank account
84

84

00:03:51.700  -->  00:03:53.110
class which I called new bank account
85

85

00:03:53.110  -->  00:03:56.980
has three methods deposit withdraw and
86

86

00:03:56.980  -->  00:03:59.920
transfer now the deposit and withdraw
87

87

00:03:59.920  -->  00:04:02.590
methods are very similar to what we had
88

88

00:04:02.590  -->  00:04:05.920
before the transfer method first tries
89

89

00:04:05.920  -->  00:04:07.510
to withdraw the money from the source
90

90

00:04:07.510  -->  00:04:10.000
account if it's successful and it
91

91

00:04:10.000  -->  00:04:11.860
deposits the money into the destination
92

92

00:04:11.860  -->  00:04:14.310
account and returns true and if it's not
93

93

00:04:14.310  -->  00:04:16.450
successful then it's going to refund the
94

94

00:04:16.450  -->  00:04:21.480
source account and return false
95

95

00:04:21.480  -->  00:04:24.280
now in the main method we create two
96

96

00:04:24.280  -->  00:04:27.000
bank accounts and start two threads each
97

97

00:04:27.000  -->  00:04:29.020
thread will perform a transfer using an
98

98

00:04:29.020  -->  00:04:31.660
instance of the transfer class the
99

99

00:04:31.660  -->  00:04:34.060
transfer classes run method loops until
100

100

00:04:34.060  -->  00:04:36.190
the transfer is successful
101

101

00:04:36.190  -->  00:04:38.440
so the challenge is to spot what's wrong
102

102

00:04:38.440  -->  00:04:41.050
with this code and to fix it so what do
103

103

00:04:41.050  -->  00:04:42.940
we call this particular situation that's
104

104

00:04:42.940  -->  00:04:45.660
in the code deadlock live locking etc
105

105

00:04:45.660  -->  00:04:47.340
why is it happening is another question
106

106

00:04:47.340  -->  00:04:49.840
for you to answer and also how would we
107

107

00:04:49.840  -->  00:04:52.410
fix it and as a hint the quickest way
108

108

00:04:52.410  -->  00:04:55.120
to get an inkling of what's wrong is to
109

109

00:04:55.120  -->  00:04:57.780
type or copy/paste the code that I'm about to
110

110

00:04:57.780  -->  00:04:59.830
show you again into a new intellij
111

111

00:04:59.830  -->  00:05:02.080
project and to run it so let's get back to
112

112

00:05:02.080  -->  00:05:03.610
the code before we start talking about
113

113

00:05:03.610  -->  00:05:05.680
solutions just to go over the code again
114

114

00:05:05.680  -->  00:05:08.680
alright so here's the code that i pasted
115

115

00:05:08.680  -->  00:05:10.530
it so you can see that we were
116

116

00:05:10.530  -->  00:05:13.470
creating two new bank objects
117

117

00:05:13.470  -->  00:05:15.880
based on this class which have created
118

118

00:05:15.880  -->  00:05:19.470
as a class in this file and it's
119

119

00:05:19.470  -->  00:05:20.400
a little bit different we've got the
120

120

00:05:20.400  -->  00:05:22.330
withdrawal methods and the deposit
121

121

00:05:22.330  -->  00:05:24.310
methods which are very similar and you
122

122

00:05:24.310  -->  00:05:25.650
can see that were using we are still using
123

123

00:05:25.650  -->  00:05:28.590
the try lock method and also got this
124

124

00:05:28.590  -->  00:05:31.900
new one here this transfer we've got
125

125

00:05:31.900  -->  00:05:34.630
a destination class we go through and we
126

126

00:05:34.630  -->  00:05:36.750
look at transferring the money and
127

127

00:05:36.750  -->  00:05:38.680
there's also this class transfer as well
128

128

00:05:38.680  -->  00:05:41.220
so you can study the source code and I
129

129

00:05:41.220  -->  00:05:43.090
suggest you do study it to see if you can
130

130

00:05:43.090  -->  00:05:45.630
come up the answers to what's wrong with
131

131

00:05:45.630  -->  00:05:47.280
it and how to go about fixing it and in
132

132

00:05:47.280  -->  00:05:49.900
fact what the situation is so pause the
133

133

00:05:49.900  -->  00:05:51.520
video now and see if you can get that
134

134

00:05:51.520  -->  00:05:53.280
working when we come back we'll go
135

135

00:05:53.280  -->  00:05:54.520
through the solution
136

136

00:05:54.520  -->  00:06:04.560
pause the video
137

137

00:06:04.560  -->  00:06:06.360
so the code actually gives rise to a
138

138

00:06:06.360  -->  00:06:09.870
live lock situation the two threads aren't
139

139

00:06:09.870  -->  00:06:12.690
blocked but they can't progress so
140

140

00:06:12.690  -->  00:06:14.640
they'll keep withdrawing money trying to
141

141

00:06:14.640  -->  00:06:16.980
do the transfer failing and then
142

142

00:06:16.980  -->  00:06:18.810
refunding the money then they'll loop
143

143

00:06:18.810  -->  00:06:20.910
back and try to do the transfer again
144

144

00:06:20.910  -->  00:06:23.280
until we manually terminate the
145

145

00:06:23.280  -->  00:06:26.040
application so to fix it what we need to
146

146

00:06:26.040  -->  00:06:26.910
do is figure out
147

147

00:06:26.910  -->  00:06:29.340
firstly why it's happening and then
148

148

00:06:29.340  -->  00:06:31.860
proceed but in this case the codes never
149

149

00:06:31.860  -->  00:06:33.990
releasing the lock so therefore the
150

150

00:06:33.990  -->  00:06:36.300
first thread that gets the lock for a
151

151

00:06:36.300  -->  00:06:38.160
bank account hangs onto that lock
152

152

00:06:38.160  -->  00:06:40.560
forever and the second thread can then
153

153

00:06:40.560  -->  00:06:42.360
never get the lock for the destination
154

154

00:06:42.360  -->  00:06:46.160
account
155

155

00:06:46.160  -->  00:06:48.620
so here is one potential sequence of
156

156

00:06:48.620  -->  00:06:50.120
execution
157

157

00:06:50.120  -->  00:06:52.550
firstly the thread data transfer one
158

158

00:06:52.550  -->  00:06:54.920
calls the transfer method to transfer
159

159

00:06:54.920  -->  00:06:57.440
money from the account 1 to account 2
160

160

00:06:57.440  -->  00:07:00.530
transfer one thread gets account one
161

161

00:07:00.530  -->  00:07:02.690
lock when the transfer method calls the
162

162

00:07:02.690  -->  00:07:04.460
withdrawal method and withdraws the
163

163

00:07:04.460  -->  00:07:06.980
money to be transferred from the account
164

164

00:07:06.980  -->  00:07:09.470
one transfer 2 thread called
165

165

00:07:09.470  -->  00:07:12.530
transfer transfer method to transfer
166

166

00:07:12.530  -->  00:07:15.500
money from account 2 to account one the
167

167

00:07:15.500  -->  00:07:17.570
transferred 2 thread gets account the
168

168

00:07:17.570  -->  00:07:19.700
account 2 lock and withdraws the
169

169

00:07:19.700  -->  00:07:21.260
money to be transferred from account 2
170

170

00:07:21.260  -->  00:07:25.010
transfer one is thread for
171

171

00:07:25.010  -->  00:07:27.110
transfer one calls account 2 deposit
172

172

00:07:27.110  -->  00:07:29.840
method but transferred 2 at this point is
173

173

00:07:29.840  -->  00:07:32.510
holding the lock so the transfer fails
174

174

00:07:32.510  -->  00:07:34.940
so it refund the money back to account
175

175

00:07:34.940  -->  00:07:37.160
one which is still holding the lock and
176

176

00:07:37.160  -->  00:07:42.050
then loops back
177

177

00:07:42.050  -->  00:07:43.870
then transferred 2 the transfer 2
178

178

00:07:43.870  -->  00:07:46.060
thread calls account 2 deposit method
179

179

00:07:46.060  -->  00:07:48.860
but transfer one the thread is holding
180

180

00:07:48.860  -->  00:07:51.500
the lock so the transfer fails so it
181

181

00:07:51.500  -->  00:07:53.120
refund their money back to account 2
182

182

00:07:53.120  -->  00:07:55.520
which is still holding the lock and then
183

183

00:07:55.520  -->  00:07:58.030
loops back now since the transfer one
184

184

00:07:58.030  -->  00:07:59.650
and the transfer two threads never
185

185

00:07:59.650  -->  00:08:01.720
release the locks they're holding they
186

186

00:08:01.720  -->  00:08:04.060
keep looping until we terminate the
187

187

00:08:04.060  -->  00:08:06.770
application so the fix in this case is
188

188

00:08:06.770  -->  00:08:08.960
to have the threads release the lock by
189

189

00:08:08.960  -->  00:08:11.120
calling the unlock method and remember
190

190

00:08:11.120  -->  00:08:12.860
that we always want to use a tri finally
191

191

00:08:12.860  -->  00:08:14.750
block when dealing with lock objects
192

192

00:08:14.750  -->  00:08:17.330
once we implement the code changes when
193

193

00:08:17.330  -->  00:08:19.120
we run it the transfers will eventually
194

194

00:08:19.120  -->  00:08:21.310
be successful and the application will
195

195

00:08:21.310  -->  00:08:24.190
terminate normally so lets now go and make the
196

196

00:08:24.190  -->  00:08:28.090
code changes in IntelliJ alright so
197

197

00:08:28.090  -->  00:08:29.410
we're going to start off now we're going
198

198

00:08:29.410  -->  00:08:30.940
to go to the deposit and withdraw
199

199

00:08:30.940  -->  00:08:34.150
methods noting we're looking at them
200

200

00:08:34.150  -->  00:08:37.940
we've got if in here if lock . try lock and
201

201

00:08:37.940  -->  00:08:40.700
that's putting the code into go ahead
202

202

00:08:40.700  -->  00:08:41.950
and do the balance transfers of it
203

203

00:08:41.950  -->  00:08:44.120
successfully gets a lock but what its not
204

204

00:08:44.120  -->  00:08:46.030
doing is we haven't got any code in here
205

205

00:08:46.030  -->  00:08:49.010
to unlock anything we never unlock the
206

206

00:08:49.010  -->  00:08:50.270
lock at the end so what we really need
207

207

00:08:50.270  -->  00:08:54.170
to do is under the try lock introduce
208

208

00:08:54.170  -->  00:08:55.370
another try
209

209

00:08:55.370  -->  00:08:59.420
outside here so try and put all this
210

210

00:08:59.420  -->  00:09:04.100
code that was actually in the triblock
211

211

00:09:04.100  -->  00:09:08.420
paste that into the inner triblock then
212

212

00:09:08.420  -->  00:09:10.270
the outer one needs to have a finally
213

213

00:09:10.270  -->  00:09:15.350
it's going to be....
214

214

00:09:15.350  -->  00:09:17.300
it'll be all we need to do so we are
215

215

00:09:17.300  -->  00:09:18.770
guaranteeing that the lock is going to
216

216

00:09:18.770  -->  00:09:19.910
be unlocked
217

217

00:09:19.910  -->  00:09:23.390
once we've completed the processing and
218

218

00:09:23.390  -->  00:09:25.940
again we are only trying to unlock if we
219

219

00:09:25.940  -->  00:09:28.370
manage to acquire lock which we have the
220

220

00:09:28.370  -->  00:09:30.860
code is being executed within the if
221

221

00:09:30.860  -->  00:09:32.750
block this code here
222

222

00:09:32.750  -->  00:09:36.680
alright so let's do the same for the
223

223

00:09:36.680  -->  00:09:38.870
deposit method so we're going to
224

224

00:09:38.870  -->  00:09:41.810
add a try block and add it in the if
225

225

00:09:41.810  -->  00:09:46.430
block and get the existing try block
226

226

00:09:46.430  -->  00:09:48.000
code
227

227

00:09:48.000  -->  00:09:50.400
copy all of that into the inner triblock
228

228

00:09:50.400  -->  00:09:54.720
and the outer one is just going to
229

229

00:09:54.720  -->  00:10:00.390
finally....so that
230

230

00:10:00.390  -->  00:10:02.400
literally should be all we need to do so
231

231

00:10:02.400  -->  00:10:03.630
just to confirm this
232

232

00:10:03.630  -->  00:10:05.850
and given that I actually got to some
233

233

00:10:05.850  -->  00:10:08.040
code in here in the main method for
234

234

00:10:08.040  -->  00:10:10.500
challenge 7 and firstly run this to make
235

235

00:10:10.500  -->  00:10:12.690
sure i'm running the right class and run
236

236

00:10:12.690  -->  00:10:14.460
challenge 7 . main and we should find
237

237

00:10:14.460  -->  00:10:17.820
that the code works now we can see
238

238

00:10:17.820  -->  00:10:20.310
that the transfer withdrew the money we
239

239

00:10:20.310  -->  00:10:22.020
have a situation at one point where the
240

240

00:10:22.020  -->  00:10:24.060
destination account was busy and
241

241

00:10:24.060  -->  00:10:26.010
refunded money but it went through and
242

242

00:10:26.010  -->  00:10:27.600
did it again and eventually got through
243

243

00:10:27.600  -->  00:10:29.220
and everything completed and work
244

244

00:10:29.220  -->  00:10:31.710
successfully you can see that transfer
245

245

00:10:31.710  -->  00:10:33.360
one withdrew ten dollars and deposited
246

246

00:10:33.360  -->  00:10:36.270
$10 likewise for the first calls here
247

247

00:10:36.270  -->  00:10:38.700
withdrew ten dollars and you can see
248

248

00:10:38.700  -->  00:10:40.890
the second section here withdrew 55 dollars
249

249

00:10:40.890  -->  00:10:42.900
and deposited the 55 so we've got two
250

250

00:10:42.900  -->  00:10:45.990
completed here transfer 2 transfer 1
251

251

00:10:45.990  -->  00:10:47.880
we're both completed so that is
252

252

00:10:47.880  -->  00:10:51.600
challenge 7 completed alright so I'm
253

253

00:10:51.600  -->  00:10:53.640
going to finish the video here now in
254

254

00:10:53.640  -->  00:10:54.750
the next video we still got some
255

255

00:10:54.750  -->  00:10:56.760
challenges to do so lets work on
256

256

00:10:56.760  -->  00:10:58.620
challenge eight in that video so I'll
257

257

00:10:58.620  -->  00:11:04.580
see you in the next video
