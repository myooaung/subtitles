1
1

00:00:04,660  -->  00:00:07,480
In this video, we're just gonna go over and talk
2

2

00:00:07,480  -->  00:00:10,840
about references versus objects versus
3

3

00:00:10,840  -->  00:00:14,530
instances versus classes. Now, by now
4

4

00:00:14,530  -->  00:00:16,599
you've probably noticed that these words
5

5

00:00:16,599  -->  00:00:18,790
have been used in this section, reference
6

6

00:00:18,790  -->  00:00:22,180
object instance in class. Now these new
7

7

00:00:22,180  -->  00:00:24,180
concepts may well be confusing at first.
8

8

00:00:24,180  -->  00:00:26,800
So in this video I'm going to try and go
9

9

00:00:26,800  -->  00:00:28,360
through the process and show you exactly
10

10

00:00:28,360  -->  00:00:30,790
what each of these words actually mean
11

11

00:00:30,790  -->  00:00:34,649
in the context of Java programming.
12

12

00:00:34,649  -->  00:00:36,880
Alright, so let's start by using the
13

13

00:00:36,880  -->  00:00:39,070
analogy of building a house to
14

14

00:00:39,070  -->  00:00:42,310
understand classes. Now a class is
15

15

00:00:42,310  -->  00:00:45,640
basically a blueprint for a house,
16

16

00:00:45,640  -->  00:00:47,410
so thinking back to the physical world,
17

17

00:00:47,410  -->  00:00:49,630
so you use the blueprint or the plans for a
18

18

00:00:49,630  -->  00:00:51,820
house using that, we can build as many
19

19

00:00:51,820  -->  00:00:54,720
houses as we like based on those plans.
20

20

00:00:54,720  -->  00:00:57,970
Now each house you build in other words
21

21

00:00:57,970  -->  00:01:01,180
back in programming terms each house you
22

22

00:01:01,180  -->  00:01:02,950
would instantiate using the new
23

23

00:01:02,950  -->  00:01:06,250
operator is an object which can also be
24

24

00:01:06,250  -->  00:01:08,290
known as an instance or is known as an
25

25

00:01:08,290  -->  00:01:10,719
instance. Getting back to the physical
26

26

00:01:10,719  -->  00:01:12,549
world, each house you build has an
27

27

00:01:12,549  -->  00:01:13,990
address it's built at a physical
28

28

00:01:13,990  -->  00:01:16,569
location, in other words if you want to
29

29

00:01:16,569  -->  00:01:18,520
tell someone where you live you give
30

30

00:01:18,520  -->  00:01:20,170
them your address perhaps written on a
31

31

00:01:20,170  -->  00:01:23,170
piece of paper. So that that piece of
32

32

00:01:23,170  -->  00:01:25,240
paper if your address on it is known as
33

33

00:01:25,240  -->  00:01:27,609
a reference. Now you can copy that
34

34

00:01:27,609  -->  00:01:30,369
reference as many times as you like but
35

35

00:01:30,369  -->  00:01:32,289
there is still just one house that
36

36

00:01:32,289  -->  00:01:34,149
you're referring to. In other words, we're
37

37

00:01:34,149  -->  00:01:36,310
copying the paper that has the address
38

38

00:01:36,310  -->  00:01:37,869
on it not the house itself all we're
39

39

00:01:37,869  -->  00:01:39,369
writing that address on another piece of
40

40

00:01:39,369  -->  00:01:42,189
paper. Now back to programming terms,
41

41

00:01:42,189  -->  00:01:44,619
we can pass references as parameters to
42

42

00:01:44,619  -->  00:01:47,289
constructors and methods. Let's now just
43

43

00:01:47,289  -->  00:01:49,090
go a little bit deeper to about to make
44

44

00:01:49,090  -->  00:01:52,359
this a little bit more clearer. Alright,
45

45

00:01:52,359  -->  00:01:53,889
so we've got some code on the screen now.
46

46

00:01:53,889  -->  00:01:56,170
Now on the left hand side we've got the
47

47

00:01:56,170  -->  00:01:59,049
class house with an instance variable
48

48

00:01:59,049  -->  00:02:02,590
also known as a field called color now
49

49

00:02:02,590  -->  00:02:04,420
on the right hand side we have the main
50

50

00:02:04,420  -->  00:02:07,569
class with the main method. Now this code
51

51

00:02:07,569  -->  00:02:09,640
in the main method is creating instances
52

52

00:02:09,640  -->  00:02:12,430
of the house class, changing the color
53

53

00:02:12,430  -->  00:02:15,070
and printing out the result. So let's
54

54

00:02:15,070  -->  00:02:16,660
actually go through line by line and see
55

55

00:02:16,660  -->  00:02:19,500
what happens when this code is executed.
56

56

00:02:19,500  -->  00:02:21,760
Alright, so looking at this first line
57

57

00:02:21,760  -->  00:02:23,170
that I've got highlighted in red into
58

58

00:02:23,170  -->  00:02:25,959
the right hand side, the house blueprint
59

59

00:02:25,959  -->  00:02:28,000
equals new house blue in parentheses and
60

60

00:02:28,000  -->  00:02:30,519
double quotes, well that creates a new
61

61

00:02:30,519  -->  00:02:32,830
instance of the house class.
62

62

00:02:32,830  -->  00:02:35,530
So remember house is a blueprint and
63

63

00:02:35,530  -->  00:02:38,230
more assigning it to the blue house
64

64

00:02:38,230  -->  00:02:40,959
variable, so in other words it's a
65

65

00:02:40,959  -->  00:02:44,709
reference to the object in memory and
66

66

00:02:44,709  -->  00:02:45,819
you can see that hopefully on the left
67

67

00:02:45,819  -->  00:02:47,319
hand side that it makes a bit more sense
68

68

00:02:47,319  -->  00:02:50,140
there, blue house is the variable we're
69

69

00:02:50,140  -->  00:02:52,540
creating a new instance of the house
70

70

00:02:52,540  -->  00:02:56,129
class and assigning it the color blue.
71

71

00:02:56,129  -->  00:02:58,239
Alright so this next line that I've
72

72

00:02:58,239  -->  00:03:00,519
got highlighted house another house
73

73

00:03:00,519  -->  00:03:02,829
equals blue house that creates another
74

74

00:03:02,829  -->  00:03:05,799
reference to the same object in memory.
75

75

00:03:05,799  -->  00:03:08,620
So what we've got now is two references
76

76

00:03:08,620  -->  00:03:12,220
pointing to the same object in memory,
77

77

00:03:12,220  -->  00:03:14,739
so let's do one house but two references to
78

78

00:03:14,739  -->  00:03:17,230
that one object, so in other words we've
79

79

00:03:17,230  -->  00:03:19,209
got two pieces of paper with the
80

80

00:03:19,209  -->  00:03:20,680
physical address of where the house is
81

81

00:03:20,680  -->  00:03:23,019
built, written down if we came back to a
82

82

00:03:23,019  -->  00:03:26,220
real-world example to make that clearer.
83

83

00:03:26,220  -->  00:03:28,389
So next on the right-hand side I've got
84

84

00:03:28,389  -->  00:03:30,790
two print line statements highlighted,
85

85

00:03:30,790  -->  00:03:32,500
so they print the value of the color
86

86

00:03:32,500  -->  00:03:35,109
variable for blue house and another
87

87

00:03:35,109  -->  00:03:37,660
house. Now in this scenario, both will
88

88

00:03:37,660  -->  00:03:40,269
actually print blue and that's because
89

89

00:03:40,269  -->  00:03:42,459
again, we've got two references to the
90

90

00:03:42,459  -->  00:03:44,169
same object and again you can see on the
91

91

00:03:44,169  -->  00:03:46,000
left-hand side there, hopefully that
92

92

00:03:46,000  -->  00:03:47,739
image makes that clear as to how this is
93

93

00:03:47,739  -->  00:03:51,129
actually working. Alright, so this next
94

94

00:03:51,129  -->  00:03:52,889
line another house dot set color
95

95

00:03:52,889  -->  00:03:55,120
parentheses in double quotes yellow,
96

96

00:03:55,120  -->  00:03:57,699
well that's calling the method set color
97

97

00:03:57,699  -->  00:04:01,359
and setting the color to yellow. Now to
98

98

00:04:01,359  -->  00:04:02,829
the left you can see that both blue
99

99

00:04:02,829  -->  00:04:05,590
house and another house now have the
100

100

00:04:05,590  -->  00:04:08,260
same color, now why is that?
101

101

00:04:08,260  -->  00:04:10,209
Well, remember that we've got two references
102

102

00:04:10,209  -->  00:04:13,060
that point to the same object in memory.
103

103

00:04:13,060  -->  00:04:16,449
Now once we change the color of one,
104

104

00:04:16,449  -->  00:04:18,459
both references still point to the same
105

105

00:04:18,459  -->  00:04:20,500
object, so consequently they've both got
106

106

00:04:20,500  -->  00:04:23,580
the same value of yellow, in this example.
107

107

00:04:23,580  -->  00:04:26,349
Now in a real world example there's
108

108

00:04:26,349  -->  00:04:28,090
still just one physical house at that
109

109

00:04:28,090  -->  00:04:29,890
one address even though we've written
110

110

00:04:29,890  -->  00:04:32,050
the same address on two pieces of paper.
111

111

00:04:32,050  -->  00:04:33,759
So if you go here then we could paint
112

112

00:04:33,759  -->  00:04:35,800
the house yellow and obviously both
113

113

00:04:35,800  -->  00:04:37,569
references to the physical house still
114

114

00:04:37,569  -->  00:04:41,500
point to a house that is yellow.
115

115

00:04:41,500  -->  00:04:42,699
Alright so we've got a couple more print
116

116

00:04:42,699  -->  00:04:44,949
line statements here, so these two print
117

117

00:04:44,949  -->  00:04:46,210
line statements are printing the same
118

118

00:04:46,210  -->  00:04:49,210
color, both are printing yellow because
119

119

00:04:49,210  -->  00:04:50,740
again we've got two references that
120

120

00:04:50,740  -->  00:04:53,110
point to the same object in memory and
121

121

00:04:53,110  -->  00:04:54,669
again you can see that to find with the
122

122

00:04:54,669  -->  00:04:55,960
arrows on the left-hand side of the
123

123

00:04:55,960  -->  00:04:58,360
image, one instance pointed to by two
124

124

00:04:58,360  -->  00:05:02,409
objects. Okay, so moving on what we're
125

125

00:05:02,409  -->  00:05:04,270
doing now is with that next line house
126

126

00:05:04,270  -->  00:05:07,060
green house equals new house parenthesis
127

127

00:05:07,060  -->  00:05:08,620
double quotes green.
128

128

00:05:08,620  -->  00:05:11,169
Well, we're creating another new instance
129

129

00:05:11,169  -->  00:05:14,080
of the house class, this time with the
130

130

00:05:14,080  -->  00:05:16,599
color set to green. So now we've got two
131

131

00:05:16,599  -->  00:05:18,880
objects in memory, but we've got three
132

132

00:05:18,880  -->  00:05:21,490
references and those references are blue
133

133

00:05:21,490  -->  00:05:24,520
house, another house and green house.
134

134

00:05:24,520  -->  00:05:26,560
Now the variable or reference green house
135

135

00:05:26,560  -->  00:05:29,050
points now to a different object in
136

136

00:05:29,050  -->  00:05:31,509
memory but blue house and another house
137

137

00:05:31,509  -->  00:05:34,090
point to the same object in memory
138

138

00:05:34,090  -->  00:05:37,270
at this point. Alright, so this statement
139

139

00:05:37,270  -->  00:05:40,240
another house equals green house, so what
140

140

00:05:40,240  -->  00:05:41,729
we're doing here is we're assigning
141

141

00:05:41,729  -->  00:05:44,889
green house to another house, so in other
142

142

00:05:44,889  -->  00:05:47,259
words, we're dereferencing another house
143

143

00:05:47,259  -->  00:05:49,539
and it will now point to a different
144

144

00:05:49,539  -->  00:05:52,690
object in memory. Now previously it was
145

145

00:05:52,690  -->  00:05:54,669
pointing to a house that had the yellow
146

146

00:05:54,669  -->  00:05:57,880
color but now it's pointing to a house
147

147

00:05:57,880  -->  00:06:00,849
that's got the green color, so in this
148

148

00:06:00,849  -->  00:06:03,430
scenario we still have three references
149

149

00:06:03,430  -->  00:06:06,539
and two objects in memory but blue house
150

150

00:06:06,539  -->  00:06:09,310
points to one object while another house
151

151

00:06:09,310  -->  00:06:11,889
and green house now point to the same
152

152

00:06:11,889  -->  00:06:15,909
object in memory. And finally we've
153

153

00:06:15,909  -->  00:06:17,620
got those last three print line
154

154

00:06:17,620  -->  00:06:20,520
statements, the first will print yellow
155

155

00:06:20,520  -->  00:06:22,960
since the blue house variable or
156

156

00:06:22,960  -->  00:06:25,389
reference points to the object in memory
157

157

00:06:25,389  -->  00:06:28,509
that has the yellow color, well the next
158

158

00:06:28,509  -->  00:06:31,029
two lines will print green and that's
159

159

00:06:31,029  -->  00:06:33,069
because another house in green house
160

160

00:06:33,069  -->  00:06:36,520
point to the same object in memory.
161

161

00:06:36,520  -->  00:06:38,289
So keep in mind that in Java, you always
162

162

00:06:38,289  -->  00:06:40,229
have a references to an object in memory.
163

163

00:06:40,229  -->  00:06:42,339
There's no way to access an object
164

164

00:06:42,339  -->  00:06:45,430
directly, everything is done using that
165

165

00:06:45,430  -->  00:06:46,030
reference.
166

166

00:06:46,030  -->  00:06:48,160
Alright so hopefully that now
167

167

00:06:48,160  -->  00:06:49,810
made it a little bit clearer, let's move
168

168

00:06:49,810  -->  00:06:52,680
on to the next video.
