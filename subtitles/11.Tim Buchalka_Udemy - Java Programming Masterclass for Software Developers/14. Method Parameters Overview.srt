1
00:00:05,490 --> 00:00:09,880
Also gut, in den beiden vorherigen Videos haben wir uns angeschaut, wie man Methoden einsetzt, um den Code effizienter

2
00:00:10,210 --> 00:00:12,800
zu machen, indem man den Prozess des Eliminierens von Code startet.

3
00:00:12,970 --> 00:00:18,710
In dieser Vorlesung werden wir die Entfernung unseres doppelten Codes vervollständigen und untersuchen, wie Daten an Methoden übergeben

4
00:00:18,710 --> 00:00:25,250
werden, um sie für verschiedene Situationen nützlich zu machen. Daher besteht eine Verwendung für Methoden darin, Berechnungen dort durchzuführen, wo sie

5
00:00:25,250 --> 00:00:30,200
gleich sind Die Berechnung wird im gesamten Code wiederholt benötigt, und genau damit haben wir

6
00:00:30,200 --> 00:00:35,060
begonnen, als wir im letzten Video unsere Methode zum Berechnen der Punktzahl erstellt haben.

7
00:00:35,630 --> 00:00:39,800
Dies würde unsere Methoden jedoch nützlicher machen, wenn wir andere

8
00:00:39,800 --> 00:00:45,940
Werte übergeben könnten, um diese Berechnungen durchzuführen, die Parameter für unsere Methoden definieren, und genau das ermöglichen.

9
00:00:46,110 --> 00:00:52,040
Lassen Sie uns noch einmal das allgemeine Format für die Suche nach einer Methode in Java zusammenfassen: Der Modifikator oder die

10
00:00:52,040 --> 00:00:56,930
Modifikatoren geben den Methodennamen zurück. Wir haben die Parameter in Klammern angegeben und dann die geschweiften Klammern

11
00:00:56,930 --> 00:01:01,580
links und rechts, um ein Codefeld für die Suche nach unserer Methode zu definieren jetzt.

12
00:01:01,590 --> 00:01:04,710
Jede Methode kann null oder mehr Parameter haben.

13
00:01:04,710 --> 00:01:10,790
Für einen einzelnen Parameter muss ein Punkt als Variablenname angegeben werden, und mehrere Parameter

14
00:01:10,800 --> 00:01:18,770
müssen durch Komma getrennt werden. Hier ist eine Beispieldeklaration einer Methode, die derzeit vier Parameter verwendet rechte runde

15
00:01:18,900 --> 00:01:22,910
Klammern, aber hier können wir sagen, dass die öffentliche

16
00:01:22,920 --> 00:01:29,490
statische Leere die Punktzahl in Klammern berechnet. Innerhalb derer, die wir haben, ist Boolesch gekommen.

17
00:01:29,580 --> 00:01:33,420
Ich habe ein Komma in der Punktzahl.

18
00:01:33,490 --> 00:01:35,670
Dann haben wir eine schließende Klammer und dann bin ich links oder rechts.

19
00:01:35,670 --> 00:01:41,790
Kelly Klammern und ein anderes Methodenbeispiel hier ohne Parameter, die der Art und Weise, wie ich die Schulmethode berechne,

20
00:01:41,790 --> 00:01:43,860
ähneln, wurden im letzten Video fertiggestellt.

21
00:01:43,860 --> 00:01:48,810
Öffentliche statische Leerzeichen machen etwas Sinnvolles, wenn der Name der Methode in runde Klammern und linke oder rechte

22
00:01:48,840 --> 00:01:50,100
geschweifte Klammern gesetzt wird.

23
00:01:51,800 --> 00:01:56,270
Beachten Sie also, dass die Klammern erforderlich sind, unabhängig davon, ob Sie Parameter verwenden

24
00:01:56,270 --> 00:02:01,490
oder nicht. Sie müssen entweder die Parameter dort eingeben oder die linken oder rechten Klammern leer sein,

25
00:02:01,490 --> 00:02:06,320
damit es sich um eine gültige Methodendeklaration handelt Gehen wir also zurück zum Code, um

26
00:02:06,320 --> 00:02:09,240
zu sehen, wie Methodenparameter im Code verwendet werden.

27
00:02:09,440 --> 00:02:14,630
Nun wollen wir hier die endgültige Punktzahl für einen anderen Satz von Werten für die abgeschlossene

28
00:02:14,630 --> 00:02:16,580
Punktzahlstufe und den Bonus berechnen.

29
00:02:16,580 --> 00:02:20,240
Eine Möglichkeit wäre, den Code wie in einem vorherigen Video zu duplizieren.

30
00:02:20,260 --> 00:02:25,130
Es wurde also im Prinzip zweimal in der Hauptmethode dupliziert, bis tatsächlich zum Aufruf gewechselt wurde,

31
00:02:25,130 --> 00:02:32,580
um die Punktzahl zu berechnen. Eine andere Möglichkeit wäre, eine zweite Methode zu erstellen, um diesen zweiten Teil des Codes auszuführen und im Prinzip

32
00:02:32,580 --> 00:02:34,030
die zweiten Methoden aufzurufen.

33
00:02:34,050 --> 00:02:38,850
Vielleicht würde man das als Punktzahl 2 berechnen bezeichnen, aber natürlich würde dies bedeuten, dass

34
00:02:38,850 --> 00:02:42,130
wir unsere Arbeit erneut duplizieren, damit nichts wirklich repariert wird.

35
00:02:42,140 --> 00:02:45,720
Es wäre sicherlich nicht effizient, denn alles, was wir wirklich getan hätten, und das

36
00:02:45,720 --> 00:02:49,890
ist die NRA, wäre nur in Codeblöcke umzuwandeln, die sich in dieser Hauptmethode in zwei getrennte Methoden befanden.

37
00:02:49,950 --> 00:02:51,650
Es muss also einen besseren Weg dafür geben.

38
00:02:51,760 --> 00:02:58,760
Aber es gibt tatsächlich Methoden, bei denen das Konzept der Parameter verwendet wird. Wenn Sie also darüber nachdenken, was wir

39
00:02:58,760 --> 00:03:00,400
hier wirklich tun möchten.

40
00:03:00,410 --> 00:03:05,180
Ideal wäre es, wenn wir diese Informationen an die Methoden weitergeben könnten, um festzustellen,

41
00:03:05,470 --> 00:03:11,080
ob die Bewertung abgeschlossen ist, und auch an den Bonus, wenn jemand diese Informationen an diese Methode weitergibt.

42
00:03:11,180 --> 00:03:17,000
Um die Score-Methode selbst zu berechnen, müssen diese Variablen nur erstellt werden, was an sie

43
00:03:17,090 --> 00:03:20,140
gesendet wurde, und diese Daten verarbeitet werden.

44
00:03:20,150 --> 00:03:23,630
Wir müssen zu ihrer Definition unserer Methode zurückkehren.

45
00:03:23,630 --> 00:03:30,270
Dies ist der Code für mein Fazit 23 und wir müssen ihm mitteilen, welche Parameter wir akzeptieren möchten.

46
00:03:30,290 --> 00:03:31,800
Also mache ich hier etwas Richtfest.

47
00:03:31,800 --> 00:03:36,440
Ich werde hier nicht näher darauf eingehen, kurz nach den

48
00:03:36,440 --> 00:03:44,160
linken Klammern zu sagen, dass Boolesche Zahlen das Komma in Punktzahl-Komma sind, wenn die erste Variable ganz oben steht.

49
00:03:44,180 --> 00:03:48,110
Jetzt drücke ich hier die Eingabetaste, weil ich hier nicht viel Platz habe, aber du musst das nicht tun,

50
00:03:48,110 --> 00:03:51,230
du kannst weiter nach oben und wenn du das tun willst, ist das in Ordnung.

51
00:03:51,230 --> 00:03:55,640
Ich drücke mich einfach hier rein und du kannst sehen, dass intelligent und glücklich der

52
00:03:55,640 --> 00:04:00,580
Code für uns ist und ich kann weiter tippen, also werde ich ihn für unser abgeschlossenes Level tippen.

53
00:04:01,100 --> 00:04:05,470
Schließlich musste ich an diesem Punkt für einen Bonus aufhören zu tippen.

54
00:04:05,470 --> 00:04:07,370
Sie können jetzt sehen, dass in dieser Zeile keine Fehler vorhanden sind.

55
00:04:07,400 --> 00:04:12,080
In den Zeilen 25 bis 28 treten Codefehler auf, auf die wir in

56
00:04:12,080 --> 00:04:17,800
Kürze eingehen werden. Dies ist jedoch unsere Definition für die Parameter, die ich für die Berechnung der

57
00:04:17,800 --> 00:04:23,040
Score-Methode einsetze kann in der Tat sagen, der Code 25 bis 28 ins Leben gerufen.

58
00:04:23,050 --> 00:04:24,820
Es ist für Parameter identisch.

59
00:04:24,820 --> 00:04:30,960
Der einzige Unterschied besteht darin, dass wir die einzelnen Parameter in Klammern durch Kommas trennen.

60
00:04:31,150 --> 00:04:36,190
Wir haben jetzt gesagt, dass diese Methode festgelegt werden muss, damit Parameter verwendet werden können, und es

61
00:04:36,190 --> 00:04:38,390
gibt Boolesche Werte und drei Ganzzahlen.

62
00:04:38,650 --> 00:04:44,260
Und wenn Sie dies tun, bemerken Sie, dass in den Zeilen 25 bis 28 die Fehler angezeigt werden, über die Sie den Mauszeiger bewegen, können

63
00:04:44,260 --> 00:04:49,060
Sie feststellen, dass die Variable wie bereits definiert übergeben wurde und tatsächlich derselbe Fehler auch für die anderen drei Variablen vorliegt.

64
00:04:49,090 --> 00:04:54,520
Nachdem wir also diese Namen verwendet haben, sind Fehler aufgetreten, da wir keine Variablen verwenden können,

65
00:04:54,520 --> 00:04:59,920
da Java im Grunde genommen hier in den Parametern Variablen dieser Namen für uns erstellt,

66
00:04:59,920 --> 00:05:03,200
die die Werte enthalten, die wir senden .

67
00:05:03,290 --> 00:05:06,700
Und genau das beklagt sich jetzt, da wir diese anderen Variablen haben, die

68
00:05:06,700 --> 00:05:10,960
bereits im Gültigkeitsbereich definiert sind, oder genauer gesagt, dass diese bereits definiert sind, was bedeutet, dass die

69
00:05:10,960 --> 00:05:16,390
Variablen, die wir in unseren Klammern definiert haben, jetzt gültig sind und erstellt wurden Aus diesem Grund können diese nicht mit denselben

70
00:05:16,390 --> 00:05:21,430
Namen verwendet werden, da sie bereits im Gültigkeitsbereich zu finden sind. Wir können sie jetzt immer noch verwenden, wenn wir

71
00:05:21,460 --> 00:05:24,310
ändern, um jeweils eine Zwei am Ende davon zu setzen.

72
00:05:24,850 --> 00:05:30,050
Diese waren ziemlich gültig und der Grund, warum sie gültig sind, ist, dass sie jetzt nicht genau den gleichen Namen haben.

73
00:05:30,280 --> 00:05:33,460
Und es wird eine Fehlermeldung angezeigt, die besagt, dass sie niemals verwendet werden, weil wir einen anderen Namen verwendet haben

74
00:05:33,460 --> 00:05:34,930
und sie natürlich nicht im Code verwendet werden.

75
00:05:35,550 --> 00:05:42,050
Also mache ich diese Änderung einfach rückgängig, aber die andere Sache ist, wenn ein Geruch und ein Blick hierher zeigt, dass Sie auch

76
00:05:42,080 --> 00:05:42,940
einen Fehler haben.

77
00:05:42,950 --> 00:05:48,140
Jetzt können Sie in Zeile 11 sagen, dass Sie die Punktzahl berechnen können, mit welchem Buchstaben Sie arbeiten. Dies ist eine Methode,

78
00:05:48,170 --> 00:05:53,270
die nicht auf die linke Seite angewendet werden kann. Sie können davon ausgehen, dass es sich um die vier Parameter handelt,

79
00:05:53,270 --> 00:05:59,390
die wir definiert haben, wenn das Spiel über der Punktzahlstufe abgeschlossen und der Bonus abgeschlossen ist Die tatsächlichen Argumente auf der rechten Seite sind leer und das

80
00:05:59,390 --> 00:06:00,850
sagt uns, dass wir keine haben.

81
00:06:00,890 --> 00:06:05,450
Wenn wir uns die linke oder rechte Klammer ansehen, um die Punktzahl hier am 11. September zu berechnen, haben wir

82
00:06:05,450 --> 00:06:06,240
dort nichts gesagt.

83
00:06:06,800 --> 00:06:11,270
Nachdem wir die Methode so definiert haben, dass sie vier Parameter enthält, können wir sie

84
00:06:11,270 --> 00:06:17,570
nur aufrufen, wenn wir diese vier Parameter an sie übergeben. Nur um die Definitionen zu verdeutlichen, gibt es hier zwei Dinge,

85
00:06:17,570 --> 00:06:19,010
die verwirrend sein können.

86
00:06:19,010 --> 00:06:23,100
Wir haben Parameter oder Parameter, die wir hier in diesem Abschnitt definieren.

87
00:06:23,330 --> 00:06:28,460
Grundsätzlich ist der Code von Zeile 23 in Klammern bis 24 der Parameter, den wir

88
00:06:28,460 --> 00:06:33,740
für eine Methode definieren, aber das technisch korrekte Wort, wenn wir Daten an die Methode übergeben.

89
00:06:33,770 --> 00:06:38,180
Mit anderen Worten, was wir hier eingeben, wenn wir eine Methode aufrufen, werden die Argumente genannt,

90
00:06:38,180 --> 00:06:40,950
die wir tatsächlich an die Methode "score berechnen" senden.

91
00:06:40,970 --> 00:06:43,740
Also gut, wie schicken wir diese Täler eigentlich?

92
00:06:43,790 --> 00:06:49,430
Nun, wir geben einfach die gewünschten Werte ein und stellen sicher, dass der Datentyp mit der Parameterdefinition

93
00:06:49,430 --> 00:06:49,970
übereinstimmt.

94
00:06:49,980 --> 00:06:54,130
Offensichtlich muss der erste Boolesche Wert eine Milliarde überschreiten.

95
00:06:54,130 --> 00:06:59,390
Richtig, ihre zweite Aussage ist, was passiert ist, als sie über Intelligenz sprechen wollten, hat uns ein Pop-up

96
00:06:59,390 --> 00:07:04,730
gegeben, und es hebt hervor, was als nächstes erwartet wird, was eine Ganzzahl-Bewertung ist, und es erhält diese

97
00:07:04,910 --> 00:07:11,660
Informationen aus den Parameterdefinitionszeilen 23 und 24, aber beachtet auch diesen intelligenten Dienst Es ist über Doppelpunkt gekommen. Sie müssen eigentlich nicht darüber

98
00:07:12,140 --> 00:07:16,670
hinausgehen, dass es nur für Sie da ist, um es als Bestätigung des Namens dieser

99
00:07:17,060 --> 00:07:20,880
bestimmten Variablen zu sehen. Dies ist nur eine gute Methode, um zu

100
00:07:20,900 --> 00:07:24,800
wissen, was es ist, und es bezieht auch diese Informationen automatisch für

101
00:07:24,800 --> 00:07:29,520
Sie Als nächstes müssen wir uns in der Schule unterhalten. Wir möchten, dass eine Passnummer die

102
00:07:29,550 --> 00:07:38,070
gleichen Informationen verwendet, die wir für die Definition der Zeilen 6 bis 9 haben dann gehe ich auf die oberste Ebene abgeschlossenes Komma Nein, ich gehe auf die oberste

103
00:07:38,190 --> 00:07:42,830
Ebene und das ist meine oberste Ebene, die letzten Fehler, die sie dort unten zumindest

104
00:07:42,830 --> 00:07:43,630
verschwunden sind.

105
00:07:43,700 --> 00:07:49,880
Das sind also die Argumente, die ich definiert habe, um sie an unsere Berechnungs-Score-Methode weiterzuleiten. In den ersten beiden Fällen

106
00:07:49,880 --> 00:07:56,000
haben wir einen Literalwert von true und achthundert verwendet, und ich habe den Namen der Variablen für uns angegeben, aber

107
00:07:56,000 --> 00:08:01,700
die letzten zwei Ebenen Abgeschlossen und Bonus Wir senden den Wert der Variablen, die wir in den Zeilen

108
00:08:01,700 --> 00:08:06,790
acht und neun definiert haben, automatisch an die entsprechende Stelle. Infolgedessen hat Intelligent diese Informationen nicht

109
00:08:06,890 --> 00:08:11,390
hinzugefügt, da wir genau wissen, was gesagt wird Um sicherzustellen, dass wir einen gültigen

110
00:08:11,390 --> 00:08:17,110
Code haben, werden diese vier anderen Variablen gelöscht. Diese werden auch nicht benötigt. Der Grund, warum ich sie

111
00:08:17,600 --> 00:08:22,400
lösche, liegt darin, dass Sie beim Erstellen eines Parameters einen Parameter für den Sie einen

112
00:08:22,400 --> 00:08:28,190
Parameter einrichten Eine Methode, mit der Java diese Variablen für uns erstellt und die Täler, die wir an sie

113
00:08:28,190 --> 00:08:31,170
senden, in diese Variablen einfügt, und das geschieht automatisch.

114
00:08:31,250 --> 00:08:37,280
Sie können sagen, dass wir nur auf diese Variablen zugreifen, die Zeilen

115
00:08:37,280 --> 00:08:42,410
26 bis 27. In diesem Fall verwenden wir diese Werte.

116
00:08:42,440 --> 00:08:46,040
Wir müssen sie also nicht neu definieren, da sie bereits für uns definiert wurden.

117
00:08:46,040 --> 00:08:51,260
Und wie Sie im nächsten Video sagen, werden diese Variablen automatisch mit den Werten gefüllt, die wir

118
00:08:51,260 --> 00:08:57,080
in Zeile 11 als Argumente definiert haben. Wir haben den Wert von level so richtig gesendet abgeschlossen, was fünf

119
00:08:57,080 --> 00:09:02,720
sein sollte, sowie der Wert des Bonus, der beim nächsten Video 100 Prozent sein sollte, aber lassen Sie

120
00:09:02,870 --> 00:09:07,130
uns dies jetzt kurz ausführen, bevor wir im Video bestätigen, dass es funktioniert, und

121
00:09:08,160 --> 00:09:12,330
Sie können sagen, dass wir immer noch den gleichen Flughafen haben Das

122
00:09:12,330 --> 00:09:13,400
Endergebnis war dreiundzwanzighundert.

123
00:09:13,400 --> 00:09:18,060
Die endgültige Punktzahl war elftausendsechshundert, und Sie können in Bezug auf den Code sehen, dass wir jetzt diesen

124
00:09:18,060 --> 00:09:21,630
Methodenaufruf zum Berechnen der Punktzahl haben, und das erledigt die Arbeit für uns.

125
00:09:21,630 --> 00:09:21,890
Gut.

126
00:09:21,900 --> 00:09:26,670
Lassen Sie uns also das Video hier beenden, in dem das nächste fortgesetzt wird, und wir werden

127
00:09:26,670 --> 00:09:32,080
diesen zusätzlichen Code, den wir hier als spezifisch in Zeile 17 bis einschließlich 20 definiert haben, loswerden und dann von

128
00:09:32,080 --> 00:09:32,960
dort aus weitermachen.

129
00:09:32,970 --> 00:09:34,200
Wir sehen uns also im nächsten Video.
