WEBVTT
1
00:00:01.310 --> 00:00:04.290
Hello everyone and welcome to this python tutorial.

2
00:00:04.400 --> 00:00:07.970
In the previous video we trained and tested our model.

3
00:00:07.970 --> 00:00:10.940
Now it's time to save it so we can use it in production.

4
00:00:12.490 --> 00:00:19.180
The first part of the saving process is to create model directory where the tensor flow serving library

5
00:00:19.330 --> 00:00:28.610
will look for the model define a variable called Model dir and set its value to model slash.

6
00:00:28.620 --> 00:00:33.570
This is the path of the model directory in the root folder of the project.

7
00:00:33.660 --> 00:00:37.020
Then we need to define the current version of the model.

8
00:00:37.020 --> 00:00:42.980
So right version equals to one and a new code cell.

9
00:00:43.000 --> 00:00:50.080
Let us combine our model the rectory with the model version to create the full path define the variable

10
00:00:50.410 --> 00:01:00.160
expert path equals two I's dot path dot the drawing model there and string version of version variable

11
00:01:01.750 --> 00:01:04.290
after that let's print it out.

12
00:01:04.600 --> 00:01:12.310
As you can see this is the folder that we need to create model slash one since this is the first version

13
00:01:12.310 --> 00:01:20.540
of our model and the last step before we save the model is to make sure that this path of model does

14
00:01:20.540 --> 00:01:22.190
not exist.

15
00:01:22.300 --> 00:01:29.970
It is not a necessary step but let us do it anyways to make sure everything works correctly right.

16
00:01:30.090 --> 00:01:40.300
If I's dot path dot easy there are expert path if this statement is true we will call a bash command

17
00:01:40.330 --> 00:01:42.160
to delete it right.

18
00:01:42.160 --> 00:01:49.300
Exclamation mark I am sure therefore remove and because this path is our folder we need to remove it

19
00:01:49.420 --> 00:01:58.570
recursively so add a flagged dash aha and finally provide our path like this in curly brackets expert

20
00:01:58.690 --> 00:02:03.230
path because we want the value of this expert path.

21
00:02:03.430 --> 00:02:10.370
Now we have everything ready to save our model in the previous sections we saved our model by saving

22
00:02:10.370 --> 00:02:16.550
our structure and the weight separately but in the case of using modelling production there are some

23
00:02:16.580 --> 00:02:22.970
additional information that we need such as what is the input of the model and what outputs to expect

24
00:02:23.210 --> 00:02:31.470
and so on to save the model for production use t of that save model that simple save.

25
00:02:32.320 --> 00:02:34.970
And this model takes a lot of arguments.

26
00:02:35.080 --> 00:02:41.710
The first one is our session where the model is currently running the second one is our expert path

27
00:02:42.320 --> 00:02:48.820
and then the last two arguments our model inputs and model outputs we have to provide this information

28
00:02:48.820 --> 00:02:55.540
as well because of the library itself it needs to know what parts of the model it should return to a

29
00:02:55.540 --> 00:02:59.110
user for example so let's do that.

30
00:02:59.320 --> 00:03:04.340
The first argument is a session and two accessed session in terms of flow 2.0.

31
00:03:04.480 --> 00:03:05.090
Right.

32
00:03:05.170 --> 00:03:14.470
Do you have dot cross dot backend dot get session this will get the current session and return it then

33
00:03:14.470 --> 00:03:21.640
we have the second argument where we need to provide our model or path to the model we defined above.

34
00:03:21.640 --> 00:03:29.380
So that is export path for inputs we need to provide a Python dictionary the library needs to map model

35
00:03:29.380 --> 00:03:39.280
parts to an individual key for inputs let's put input image is a key and for a value let's access inputs

36
00:03:39.280 --> 00:03:40.110
to in a bottle.

37
00:03:40.390 --> 00:03:43.550
So just type model dot input.

38
00:03:43.780 --> 00:03:50.810
Lastly we have to provide outputs from the model the model could have multiple outputs from it.

39
00:03:50.980 --> 00:03:58.240
So we want to use hardcoded key value pairs as we did for inputs instead we are going to use a technique

40
00:03:58.300 --> 00:04:07.120
called dictionary comprehension to do this inside the dictionary brackets right for t in model dot outputs

41
00:04:07.610 --> 00:04:16.760
and for our key value pair of right d dot name column D execute a cell and as you can see it saved the

42
00:04:16.760 --> 00:04:25.220
model to our directory if we go to files you can find there a newly created folder called model inside

43
00:04:25.230 --> 00:04:31.940
the reader we have a sub folder one because our version of the model is 1 and congratulations.

44
00:04:31.940 --> 00:04:38.330
Now we have saved the model for the first time for the production purposes the only thing left to do

45
00:04:38.330 --> 00:04:44.210
for us is to load the model and send the request to it if you have any questions or comments please

46
00:04:44.210 --> 00:04:48.050
post them in the comments section otherwise of seeing the next tutorial.
