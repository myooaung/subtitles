WEBVTT
1
00:00:00.180 --> 00:00:07.280
Hello everyone and welcome to despite editorial in the previous we do we finally defined our a traitor.

2
00:00:07.290 --> 00:00:14.580
But now it's time to define our training gloop and this will take two videos of our time since it is

3
00:00:14.580 --> 00:00:16.480
going to be a bit longer.

4
00:00:16.500 --> 00:00:19.080
We want to find everything in this video.

5
00:00:19.140 --> 00:00:24.020
Instead we will stop at one point and continue in the next one OK.

6
00:00:24.030 --> 00:00:26.360
Let's start immediately with our implementation.

7
00:00:26.400 --> 00:00:28.680
So we don't lose time anymore.

8
00:00:28.860 --> 00:00:31.930
As always it is going to be a for loop.

9
00:00:31.980 --> 00:00:38.580
So define for episode our main loop is going to iterate through all episodes that we define.

10
00:00:38.790 --> 00:00:46.900
And if you remember we defined to be 1000 episodes so right in the range of episodes plus one.

11
00:00:46.950 --> 00:00:52.650
The next thing to do is to print out the current episode so we can keep track of the training process.

12
00:00:53.630 --> 00:00:58.100
So let's print episode and let's use these kind of formatting.

13
00:00:58.700 --> 00:01:05.510
So if you remember we can use this format function but here we need to specify two things since we have

14
00:01:05.600 --> 00:01:13.520
two curly brackets that we need to populate we will specify episode and episodes we are just counting

15
00:01:13.520 --> 00:01:17.690
how many episodes has left now that we are done with that.

16
00:01:17.730 --> 00:01:22.410
Let us define our initial state the initial state is always the same.

17
00:01:22.440 --> 00:01:29.880
At the very beginning of the episode so define that as a state and that is equal to state creator which

18
00:01:29.880 --> 00:01:32.760
takes three arguments data.

19
00:01:32.970 --> 00:01:37.410
Then we have zero because at this point our timestamp is zero.

20
00:01:37.440 --> 00:01:45.780
And lastly we have window size plus 1 then we are going to define 2 variables so we can keep track of

21
00:01:45.780 --> 00:01:46.670
that.

22
00:01:47.010 --> 00:01:49.240
The first one is total profit.

23
00:01:49.260 --> 00:01:55.890
We don't have to specify this but if you want to see how the model is progressing over time it is recommended

24
00:01:55.890 --> 00:02:00.020
to have this variable after we define this one.

25
00:02:00.020 --> 00:02:07.280
Let's call trader dot inventory to access our inventory and said to be an empty list.

26
00:02:08.000 --> 00:02:16.080
If you remember our inventory is just a python list that stores all stocks that we bought but sometimes

27
00:02:16.080 --> 00:02:23.910
we can finish our episode without selling all the stocks we want to start our episode clean without

28
00:02:23.970 --> 00:02:25.920
any stocks in the inventory.

29
00:02:25.920 --> 00:02:32.790
So here at this point we are just making sure that we have clean inventory before we start our episode

30
00:02:33.600 --> 00:02:42.060
after that let's define our time stamp and that times that represent how many samples we have one time

31
00:02:42.060 --> 00:02:43.640
step is one day.

32
00:02:43.830 --> 00:02:48.240
And that's why timestamps represent how many samples we have.

33
00:02:48.240 --> 00:02:55.950
So write for t in Daegu D.M. and TDM is just used to visually the progress bar.

34
00:02:55.950 --> 00:03:04.850
If you don't want to use this one does not it is just viz. preferences from my side then use range and

35
00:03:04.850 --> 00:03:11.050
there's always provide data samples that we defined above is our hyper parameter.

36
00:03:11.100 --> 00:03:17.850
The first thing that we have to assess is an action that action is going to be taken by the model.

37
00:03:18.090 --> 00:03:22.840
So we will say action is equal to trader dot trade.

38
00:03:22.860 --> 00:03:24.830
And here we need to provide our state.

39
00:03:25.680 --> 00:03:30.390
And we are done as you remember at the very beginning of the training process.

40
00:03:30.390 --> 00:03:37.170
These actions are going to be totally randomly selected after some time when the model is trained enough.

41
00:03:37.200 --> 00:03:40.360
It is going to take these action by itself.

42
00:03:40.380 --> 00:03:47.490
So now we have an action and it's time to perform it to get to the next state let us define next state

43
00:03:47.560 --> 00:03:55.690
is equal to and then we have to see state creator which takes data as always then D plus 1 since we

44
00:03:55.690 --> 00:04:02.380
want the next state and not the current one and again window size plus 1.

45
00:04:02.400 --> 00:04:08.370
Now we need to define a reward because we didn't calculate anything at this point.

46
00:04:08.370 --> 00:04:10.530
The reward is going to be zero.

47
00:04:10.680 --> 00:04:15.860
So action 1 is buying and action to the selling.

48
00:04:16.020 --> 00:04:20.040
We can only trade with actions or a stock that we already bought.

49
00:04:20.040 --> 00:04:26.820
The next thing to do is to define an if statement which checks if an action performed right now by the

50
00:04:26.820 --> 00:04:34.500
model is one or if we bought a stock we are going to say if an action is equal to 1.

51
00:04:34.670 --> 00:04:37.990
And if that is the case the agent is buying.

52
00:04:38.000 --> 00:04:44.450
In that case the only thing that we have to do is to append the current stock to the inventory to do

53
00:04:44.450 --> 00:04:45.290
that.

54
00:04:45.290 --> 00:04:53.790
We are going to define trader dot inventory since it is on the people list and call a band of data of

55
00:04:53.820 --> 00:05:01.730
T because we want the current data information to be our both stock we can add here up bring statement

56
00:05:01.730 --> 00:05:08.530
something like agent bought the stock for X price we are going to do this maybe in the next video.

57
00:05:08.950 --> 00:05:12.630
For now we are going to stop our implementation right here.

58
00:05:12.830 --> 00:05:15.050
There are only a few things left to do.

59
00:05:15.130 --> 00:05:21.340
We have to check in the Candler case if the action is too or if you want to sell a stock we need to

60
00:05:21.340 --> 00:05:26.320
perform a few tracks before we calculate the reward total profit and so on.

61
00:05:27.010 --> 00:05:30.010
Then we need to perform the training process as well.

62
00:05:30.130 --> 00:05:33.450
We are going to complete all of that in the next video.

63
00:05:33.460 --> 00:05:38.800
Stay tuned for that and for now if you have any questions or comments please bother them in the comments

64
00:05:38.800 --> 00:05:39.590
section.

65
00:05:39.820 --> 00:05:41.770
Otherwise I'll see you in the next material.
