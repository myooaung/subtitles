WEBVTT
1
00:00:00.700 --> 00:00:05.140
Hello everyone and welcome to this python tutorial in the previous with you.

2
00:00:05.140 --> 00:00:12.260
We defined our A.I. trader class and now it's time to build its brain our neural network.

3
00:00:12.310 --> 00:00:16.810
So let's start defining the function called model builder.

4
00:00:16.810 --> 00:00:25.030
And it doesn't take any arguments just provide keyword self let's define the model with our DNA.

5
00:00:25.030 --> 00:00:29.200
Dot carries dot models dot sequential.

6
00:00:29.370 --> 00:00:32.750
And now we have to define our model for this task.

7
00:00:32.760 --> 00:00:39.180
Our states are nothing more than previous end days and stock prices over those days.

8
00:00:39.220 --> 00:00:46.380
Our state is nothing more here than a vector of numbers and we can simply use a fully connected network

9
00:00:46.740 --> 00:00:54.640
or dense network let's define the first layer model dot add in here we will add our first dance layer

10
00:00:54.970 --> 00:01:03.250
with d don't care US DOT the layers dot dance and now we have to specify a few arguments for the later

11
00:01:03.850 --> 00:01:10.980
the first one is how many units or neurons we have in that layer I found this architecture on the give

12
00:01:11.020 --> 00:01:18.510
help so we'll now check it if it works or not in the first layer set units to 32 and the activation

13
00:01:18.510 --> 00:01:26.840
function to Rallo we will have free hidden layers inside our network so to complete the model faster

14
00:01:27.200 --> 00:01:31.870
let's copy the first one and paste it below two more times.

15
00:01:32.070 --> 00:01:39.480
Now we have free same layers let's perform some changes in the second layer change number of units from

16
00:01:39.480 --> 00:01:48.860
32 to 64 and the last hidden layer set one hundred and twenty eight units but now there is a one piece

17
00:01:48.860 --> 00:01:53.300
missing and that is our input shape from the first layer.

18
00:01:53.300 --> 00:02:01.850
So the first layer add input them is equal to self-doubt state size and that is basically it for our

19
00:02:01.850 --> 00:02:08.900
model in the next video we will define our output layer and compile the network stay tuned for that

20
00:02:09.220 --> 00:02:14.950
and if you have any questions or comments so far please post them in the comments section otherwise

21
00:02:15.030 --> 00:02:16.130
I'll see in the next tutorial.
