WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Instructor] Up until this point in the course,

2
00:00:02.003 --> 00:00:04.009
we focused mainly on the collection interface

3
00:00:04.009 --> 00:00:06.002
and its methods

4
00:00:06.002 --> 00:00:09.005
Now, we'll start to examine specific collection interfaces

5
00:00:09.005 --> 00:00:13.009
and implementations, starting with a quick look at sets.

6
00:00:13.009 --> 00:00:16.000
The main thing that differentiates a set

7
00:00:16.000 --> 00:00:17.006
from other collections is that

8
00:00:17.006 --> 00:00:20.004
it does not store duplicate elements.

9
00:00:20.004 --> 00:00:23.001
This is controlled internally by the collection,

10
00:00:23.001 --> 00:00:26.004
which performs a comparison of new elements inserted

11
00:00:26.004 --> 00:00:28.007
via the add method or a constructor

12
00:00:28.007 --> 00:00:33.001
against those that already reside in the collection.

13
00:00:33.001 --> 00:00:35.005
Our deep dive on the collection interface

14
00:00:35.005 --> 00:00:38.004
will come in very useful when working with a set.

15
00:00:38.004 --> 00:00:41.008
That's because the set only adds two additional methods

16
00:00:41.008 --> 00:00:45.001
beyond those found on a collection interface.

17
00:00:45.001 --> 00:00:48.005
These two additional methods, of() and copyOf(),

18
00:00:48.005 --> 00:00:50.006
were added in later versions of Java

19
00:00:50.006 --> 00:00:53.002
to help us create immutable sets.

20
00:00:53.002 --> 00:00:55.005
If we examine the type hierarchy of a set,

21
00:00:55.005 --> 00:00:57.008
you'll see the interfaces that extend it

22
00:00:57.008 --> 00:01:00.005
and other set implementations.

23
00:01:00.005 --> 00:01:01.007
You'll be very familiar with

24
00:01:01.007 --> 00:01:04.000
the basic HashSet implementation

25
00:01:04.000 --> 00:01:06.009
because it doesn't contain any additional methods

26
00:01:06.009 --> 00:01:10.006
beyond those specified on the set interface.

27
00:01:10.006 --> 00:01:13.005
The actual implementation uses a hash map

28
00:01:13.005 --> 00:01:17.007
to back the set and elements in it do not retain any order.

29
00:01:17.007 --> 00:01:21.002
It's subclass, LinkedHashSet, uses a linked list

30
00:01:21.002 --> 00:01:24.002
to order elements, according to when they were inserted.

31
00:01:24.002 --> 00:01:27.000
The SortedSet interface is used for sets

32
00:01:27.000 --> 00:01:29.006
that iterate through elements in ascending order.

33
00:01:29.006 --> 00:01:31.009
And its sub interface, NavigableSet,

34
00:01:31.009 --> 00:01:36.000
extends that behavior to allow us to search for elements.

35
00:01:36.000 --> 00:01:38.005
When working with the TreeSet implementation

36
00:01:38.005 --> 00:01:41.003
of these interfaces elements must implement

37
00:01:41.003 --> 00:01:43.009
the comparable interface,, or we need to provide

38
00:01:43.009 --> 00:01:47.000
a comparator to determine the ordering.

39
00:01:47.000 --> 00:01:49.002
So, that's a high level look at sets.

40
00:01:49.002 --> 00:01:52.000
Let's jump into some code in our next lesson.

