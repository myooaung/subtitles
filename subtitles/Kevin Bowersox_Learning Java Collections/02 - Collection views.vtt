WEBVTT
1
00:00:00.005 --> 00:00:02.006
- [Instructor] Collection Views are another feature

2
00:00:02.006 --> 00:00:04.003
provided by the map interface

3
00:00:04.003 --> 00:00:06.000
that you'll commonly work with.

4
00:00:06.000 --> 00:00:08.005
They are used when you want to obtain parts of the map,

5
00:00:08.005 --> 00:00:12.002
like its entries, keys, or values as a collection.

6
00:00:12.002 --> 00:00:14.001
It's common to use a collection view

7
00:00:14.001 --> 00:00:16.004
when you need to iterate through a map's entries,

8
00:00:16.004 --> 00:00:18.003
keys, or values.

9
00:00:18.003 --> 00:00:19.007
So you can see in the code,

10
00:00:19.007 --> 00:00:24.000
we are getting the keys as a set using the keySet method.

11
00:00:24.000 --> 00:00:27.006
Currently, it just returns a set holding the key A.

12
00:00:27.006 --> 00:00:29.009
There is a small caveat to be aware of

13
00:00:29.009 --> 00:00:32.000
when working with the collection view.

14
00:00:32.000 --> 00:00:34.008
The collection view is backed by the map.

15
00:00:34.008 --> 00:00:37.006
So any changes to the map will be reflected

16
00:00:37.006 --> 00:00:39.002
in the collection view.

17
00:00:39.002 --> 00:00:42.000
You'll notice I've added a new entry to the map,

18
00:00:42.000 --> 00:00:45.006
and now the collection view contains A and B.

19
00:00:45.006 --> 00:00:48.000
So if your map entries change,

20
00:00:48.000 --> 00:00:51.005
you'll see the changes reflected in the collection view.

21
00:00:51.005 --> 00:00:53.002
If you're not aware of these mechanics,

22
00:00:53.002 --> 00:00:55.007
it can lead to some painful runtime issues.

23
00:00:55.007 --> 00:00:58.007
These map interface methods provide collection views

24
00:00:58.007 --> 00:01:01.009
for a map's entries, keys, and values.

25
00:01:01.009 --> 00:01:03.009
I'll draw your attention to the entrySet,

26
00:01:03.009 --> 00:01:08.001
which is frequently used to loop through a map's contents.

27
00:01:08.001 --> 00:01:10.009
The entrySet returns a set containing objects

28
00:01:10.009 --> 00:01:12.004
of type Entry.

29
00:01:12.004 --> 00:01:15.002
These provide access to the key and value

30
00:01:15.002 --> 00:01:17.007
of each association in the map.

31
00:01:17.007 --> 00:01:19.008
Entry is a generic type.

32
00:01:19.008 --> 00:01:23.005
It mimics the typing of the map backing the collection.

33
00:01:23.005 --> 00:01:26.003
So if a map uses a string for its key

34
00:01:26.003 --> 00:01:28.002
and stores integer values,

35
00:01:28.002 --> 00:01:30.008
you can expect those types to be returned from the getKey

36
00:01:30.008 --> 00:01:34.007
and getValue methods on the entry.

37
00:01:34.007 --> 00:01:37.005
There's quite a bit to learn about working with the map.

38
00:01:37.005 --> 00:01:39.004
But they're heavily used in Java.

39
00:01:39.004 --> 00:01:41.000
So we'll go even deeper

40
00:01:41.000 --> 00:01:44.000
as we start to explore map implementations.

