1
00:00:00,000 --> 00:00:04,537
Hi, it's Wojciech Lesniak.

2
00:00:04,537 --> 00:00:08,274
Welcome to this module on Persisting Access with Remember-Me.

3
00:00:08,274 --> 00:00:11,960
Security has to be balanced with user experience.

4
00:00:11,960 --> 00:00:14,214
If you make security to onerous,

5
00:00:14,214 --> 00:00:18,181
it could discourage your users from using your site due to frequently

6
00:00:18,181 --> 00:00:22,136
having to reset their credentials because they forgot them,

7
00:00:22,136 --> 00:00:27,393
being locked out or throttled due to unsuccessful password attempts.

8
00:00:27,393 --> 00:00:30,564
It can result in them using your site less often.

9
00:00:30,564 --> 00:00:33,393
Just think of Amazon or EBay.

10
00:00:33,393 --> 00:00:36,876
You generally don't need to log in each time you access their site to

11
00:00:36,876 --> 00:00:41,099
browse their catalog or to add times to your basket.

12
00:00:41,099 --> 00:00:43,375
Now Spring provides a solution to this with

13
00:00:43,375 --> 00:00:46,679
persistent login through Remember me.

14
00:00:46,679 --> 00:00:47,563
In this module,

15
00:00:47,563 --> 00:00:52,764
you will learn how to securely implement Remember me using Spring Security,

16
00:00:52,764 --> 00:00:55,762
the security challenges it introduces,

17
00:00:55,762 --> 00:00:59,855
and the pros and cons between the different flavors

18
00:00:59,855 --> 00:01:03,034
of Remember me offered by Spring.

19
00:01:03,034 --> 00:01:03,678
Also,

20
00:01:03,678 --> 00:01:08,185
you will learn how to add a CAPTCHA using Google reCAPTCHA API to

21
00:01:08,185 --> 00:01:12,097
protect your site against scripts and bots.

22
00:01:12,097 --> 00:01:15,245
So I hope you will join me for the remainder of this module where

23
00:01:15,245 --> 00:01:24,000
you will learn how easy it is to add Remember me and CAPTCHA to your application using Spring Security.

