WEBVTT
1
00:00:02.134 --> 00:00:05.004
The use of the Spring Expression Language,

2
00:00:05.004 --> 00:00:05.691
SpEL,

3
00:00:05.691 --> 00:00:10.295
in Spring Security for authorization is one of the features

4
00:00:10.295 --> 00:00:13.314
which makes Spring Security so powerful.

5
00:00:13.314 --> 00:00:17.974
SpEL supports querying and manipulating an object graph at runtime,

6
00:00:17.974 --> 00:00:24.540
both within XML- based and annotation-based configuration and bean definitions.

7
00:00:24.540 --> 00:00:28.125
It supports many different operations for relational,

8
00:00:28.125 --> 00:00:32.913
for comparison, logical, such as and or not,

9
00:00:32.913 --> 00:00:36.344
conditional, if, then, else, regular expressions,

10
00:00:36.344 --> 00:00:38.330
and many more,

11
00:00:38.330 --> 00:00:42.619
which can be used in conjunction with Spring Security expressions to simplify

12
00:00:42.619 --> 00:00:47.025
customizing your authorization requirements at the URL,

13
00:00:47.025 --> 00:00:49.138
method, and domain levels.

14
00:00:49.138 --> 00:00:51.848
Now some of the key security expressions we will be

15
00:00:51.848 --> 00:00:55.264
using in this module are the has role,

16
00:00:55.264 --> 00:00:59.720
which returns true if the current principal has a specified role,

17
00:00:59.720 --> 00:01:05.819
hasAnyRole returns true if the current principal has any of the supplied roles,

18
00:01:05.819 --> 00:01:07.045
the principal object.

19
00:01:07.045 --> 00:01:09.547
Now this gives you direct access to the principal,

20
00:01:09.547 --> 00:01:13.242
which represents the currently logged in user.

21
00:01:13.242 --> 00:01:17.246
The authentication gives you access to the Authentication

22
00:01:17.246 --> 00:01:20.302
object that is added to the SecurityContext.

23
00:01:20.302 --> 00:01:20.906
The permitAll.

24
00:01:20.906 --> 00:01:25.842
This just evaluates to true and allows everybody to access the resource.

25
00:01:25.842 --> 00:01:30.233
And the denyAll basically blocks all access by returning false.

26
00:01:30.233 --> 00:01:35.055
IsAnonymous returns true if the current principal is an anonymous user.

27
00:01:35.055 --> 00:01:39.958
IsRememberMe returns true if the current principal is a remember-me user.

28
00:01:39.958 --> 00:01:44.475
And isAuthenticated returns true if the user is not anonymous.

29
00:01:44.475 --> 00:01:47.159
Now these three allow you to fine-tune your authorization

30
00:01:47.159 --> 00:01:50.565
based on how the user was authenticated.

31
00:01:50.565 --> 00:01:51.976
And finally,

32
00:01:51.976 --> 00:01:55.336
isFullyAuthenticated returns true if the user is not

33
00:01:55.336 --> 00:01:57.475
an anonymous or a remember-me user.

34
00:01:57.475 --> 00:01:59.572
Now as you can see,

35
00:01:59.572 --> 00:02:02.516
these expressions give you a lot of flexibility to

36
00:02:02.516 --> 00:02:05.281
restrict access to your application.

37
00:02:05.281 --> 00:02:12.000
We will be heavily using these expressions in the next sections, so you will become a lot more familiar with them.

