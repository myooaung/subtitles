WEBVTT

00:05.180 --> 00:10.690
So far we've created arrays that have strong values like these.

00:11.540 --> 00:16.510
However a race can contain elements of any type for example.

00:16.520 --> 00:33.530
Let's create another areti with a string element an integer a float a boolean and a null value.

00:33.590 --> 00:40.700
Now if manually specified the keys for these values as we saw in the previous video remember that the

00:40.700 --> 00:46.900
keys are indexes always need to be integers are strings like this.

00:46.970 --> 00:57.410
Let's dump this variable out like that and when we look at this in the browser it looks like this a

00:57.410 --> 01:05.510
5 elements array with a 12 character string an integer of 150 and so on.

01:10.060 --> 01:15.040
You can also assign other variables as a values of an array.

01:15.040 --> 01:24.100
For example let's add a couple of variables at the top like that and put these variables into the array

01:24.130 --> 01:27.060
instead of these values.

01:30.140 --> 01:36.290
When you do that is the value of the variable is placed into the array.

01:36.320 --> 01:44.330
I won't specify the indexes so we don't need to split this onto several lines as it's only schadt Now

01:44.420 --> 01:47.670
when we Voudon this array.

01:48.110 --> 01:55.490
We have a two elements array with the first value being the value of the first variable in integer value

01:55.490 --> 02:00.870
3 and the second value the value of the second variable.

02:04.060 --> 02:08.460
You can mix explicit values and variables however you like.

02:08.530 --> 02:12.000
When you create an array it's very flexible.

02:15.160 --> 02:21.260
If you can put elements of any type into an array then why not another array.

02:21.360 --> 02:23.580
Well you can do exactly that.

02:23.580 --> 02:31.020
This is called a multi dimensional array multi-dimensional arrays are useful for representing tables

02:31.020 --> 02:32.210
of data.

02:32.790 --> 02:36.630
For example let's say we have some data like this.

02:36.630 --> 02:42.380
We have details about three people with their name email address and height.

02:43.260 --> 02:45.850
We can represent each line of the table.

02:45.960 --> 02:48.340
Each person with one Ray.

02:48.420 --> 02:50.520
Like this.

02:50.670 --> 02:57.630
This is an associate of array with the name of the person's attributes as the key and then the value

02:57.830 --> 03:00.880
has the value of the array elements like this.

03:04.050 --> 03:10.890
We can represent the complete table by putting each of these individual arrays into another array like

03:10.890 --> 03:12.030
this.

03:15.040 --> 03:22.240
We could also create the array without creating a variable for each person putting in each array directly

03:22.240 --> 03:23.300
like this.

03:23.710 --> 03:28.880
Although if you have a lot of elements this can start to look confusing.

03:31.810 --> 03:38.030
So how do we access elements of a multidimensional array for one day.

03:38.080 --> 03:46.510
We saw earlier how we use square brackets after the array variable with the index to get the value to

03:46.510 --> 03:54.590
access an element in a two dimensional array simply add another set of square brackets with an index.

03:54.790 --> 04:04.270
For example in our two dimensional array of people data if we want to get alliss email we use two keys.

04:04.270 --> 04:12.850
The first element of the people array is another array with alliss data as we didn't specify the index.

04:12.850 --> 04:23.430
It has an index of zero to this we can add the e-mail index to get Atlas's email address like this.

04:28.110 --> 04:31.190
Let's look at another example in code.

04:31.220 --> 04:36.690
Previously we had an array of simple article titles like this.

04:36.690 --> 04:42.520
Let's change this so that we have an array of articles that have titles and also content.

04:45.210 --> 04:54.330
So now this is an array with three elements each of those is an array with two elements with the indexes

04:54.340 --> 04:57.710
title and content.

04:58.770 --> 05:04.780
Let's use a VAR dump as before to print out this variable like that.

05:07.750 --> 05:13.280
And in the browser it looks like this a bit difficult to see the structure.

05:13.510 --> 05:23.710
So if we right click and choose View page sarce it's easier to see will learn what view sarce means

05:23.710 --> 05:25.570
later on.

05:25.570 --> 05:30.330
So you can see the variable is an array with three elements.

05:32.290 --> 05:41.830
The first element has an automatic index of zero and that in itself is an array with two elements.

05:41.830 --> 05:47.560
The first element has an index of title and a value of first post.

05:47.710 --> 05:53.270
The second element has an index of content and there's a string with the value of.

05:53.290 --> 05:57.050
This is the first post and so on.

06:00.820 --> 06:04.330
Let's access one of these values individually.

06:04.510 --> 06:14.560
If we add the index of one to get the second element then add title to get its title like that.

06:17.590 --> 06:21.530
We get the title of the second article like this.

06:26.780 --> 06:31.550
You can have as many dimensions as you like in an array in p p.

06:31.940 --> 06:34.610
But I've never had a reason to use more than 2.

06:34.640 --> 06:35.970
Ah 3.

06:35.990 --> 06:41.460
And if you need more you might need to redesign how your data is structured.

06:41.480 --> 06:44.550
Dont worry about that too much at the moment though.
