1
00:00:00,866 --> 00:00:03,321
Now that we've promoted the last release into production,

2
00:00:03,321 --> 00:00:05,644
we'll likely have some application maintenance,

3
00:00:05,644 --> 00:00:11,866
and let's explore and define application maintenance in this section.

4
00:00:11,866 --> 00:00:15,866
Application maintenance is the activity consisting of planned

5
00:00:15,866 --> 00:00:19,775
minor fixes and enhancements into an application that is in

6
00:00:19,775 --> 00:00:21,411
production for user organizations.

7
00:00:21,411 --> 00:00:26,321
For purposes of this course it excludes hot fixes,

8
00:00:26,321 --> 00:00:28,466
user ID management and authorization.

9
00:00:28,466 --> 00:00:33,558
I will discuss these in operational support section since I look at these

10
00:00:33,558 --> 00:00:36,466
items as op support and not application maintenance.

11
00:00:36,466 --> 00:00:39,937
You may not agree with all my definitions in this module,

12
00:00:39,937 --> 00:00:44,533
but I need to set up some definitions, put some scope around it,

13
00:00:44,533 --> 00:00:47,866
so you know what I'm talking about in the context.

14
00:00:47,866 --> 00:00:49,502
You may use different definitions and different terms in

15
00:00:49,502 --> 00:00:53,866
your environment and that is okay.

16
00:00:53,866 --> 00:00:57,866
Project versus hot fix versus application maintenance.

17
00:00:57,866 --> 00:01:02,866
So for context, I would like to divide up the world as follows,

18
00:01:02,866 --> 00:01:07,866
for larger, chunkier backlog items I like to call them a project.

19
00:01:07,866 --> 00:01:11,533
In one company I was helping it was 80 hours or more was considered a project.

20
00:01:11,533 --> 00:01:14,866
So anything over that was identified as a project and

21
00:01:14,866 --> 00:01:17,174
the work followed a different process.

22
00:01:17,174 --> 00:01:19,866
It had a project manager, et cetera.

23
00:01:19,866 --> 00:01:24,866
I will talk about this later in this module in the project management section.

24
00:01:24,866 --> 00:01:27,616
For a production problem, or what I call a hot fix,

25
00:01:27,616 --> 00:01:32,635
I see this as more of a production ops or operational issue.

26
00:01:32,635 --> 00:01:37,481
I also include user ID management and feature authorization in ops as well.

27
00:01:37,481 --> 00:01:43,230
And I will talk about operations in a later section of this module too.

28
00:01:43,230 --> 00:01:44,866
Lastly, application maintenance,

29
00:01:44,866 --> 00:01:47,866
such as new requirements that fall under the project threshold,

30
00:01:47,866 --> 00:01:51,866
and bugs, but they are bugs that can be lived with or tolerated,

31
00:01:51,866 --> 00:01:55,866
they're not quick fixes, got to have it right now.

32
00:01:55,866 --> 00:01:56,066
Okay,

33
00:01:56,066 --> 00:02:00,366
of course you can design your world any way you want as long as you design it,

34
00:02:00,366 --> 00:02:05,866
document it, and train everyone and it is not just chaos.

35
00:02:05,866 --> 00:02:06,789
Okay, as a reminder,

36
00:02:06,789 --> 00:02:10,230
all normal work comes into the work intake process that we already

37
00:02:10,230 --> 00:02:13,866
discussed in the first section of this module,

38
00:02:13,866 --> 00:02:16,866
except for hot fixe and production failures.

39
00:02:16,866 --> 00:02:21,866
Okay let's dig deeper into application maintenance.

40
00:02:21,866 --> 00:02:24,866
Here is a real simple process for application maintenance,

41
00:02:24,866 --> 00:02:28,366
it can be certainly improved and elaborated upon.

42
00:02:28,366 --> 00:02:33,080
Your application maintenance backlog, that is all of your potential work items,

43
00:02:33,080 --> 00:02:37,048
and again we are not considering projects or hot fixes for

44
00:02:37,048 --> 00:02:38,866
this section on application maintenance.

45
00:02:38,866 --> 00:02:41,404
A backlog item might remain in your backlog for months or

46
00:02:41,404 --> 00:02:43,533
even years if the priority warrants it.

47
00:02:43,533 --> 00:02:45,866
We actually want to groom the backlog,

48
00:02:45,866 --> 00:02:48,009
that is in this phase we want to describe the

49
00:02:48,009 --> 00:02:52,616
process of view with your customer, typically reviewing the items,

50
00:02:52,616 --> 00:02:55,366
their priority, timing, need, estimates,

51
00:02:55,366 --> 00:02:56,366
et cetera.

52
00:02:56,366 --> 00:03:00,230
You might consider performing the grooming process once a week,

53
00:03:00,230 --> 00:03:02,789
determine the right cadence for you and your customer.

54
00:03:02,789 --> 00:03:08,009
The outcome of the grooming is that you have identified work items to be worked.

55
00:03:08,009 --> 00:03:11,866
They are basically released for work into your team.

56
00:03:11,866 --> 00:03:14,328
Therefore, next you want to assign the work,

57
00:03:14,328 --> 00:03:18,866
that is select your resources, the people on your team to work that item.

58
00:03:18,866 --> 00:03:22,866
You may pick more than one person to work on an item if you want to, of course.

59
00:03:22,866 --> 00:03:25,593
Then you work the work.

60
00:03:25,593 --> 00:03:28,866
Then the work gets, well, worked.

61
00:03:28,866 --> 00:03:29,866
Next, determine a release.

62
00:03:29,866 --> 00:03:31,866
A release is like a bucket, that is,

63
00:03:31,866 --> 00:03:35,866
what are all the work items that you are targeting for in the next release.

64
00:03:35,866 --> 00:03:38,437
There may be just one, there may be a half a dozen,

65
00:03:38,437 --> 00:03:40,097
it depends what works for you.

66
00:03:40,097 --> 00:03:44,199
Then you're going to create a build that includes all of the

67
00:03:44,199 --> 00:03:46,866
work items determined for this release.

68
00:03:46,866 --> 00:03:47,533
And then of course,

69
00:03:47,533 --> 00:03:48,866
you're going to promote to production and we've

70
00:03:48,866 --> 00:03:50,684
already discussed that process earlier.

71
00:03:50,684 --> 00:03:55,783
So now let's talk about actually doing the work and how

72
00:03:55,783 --> 00:03:59,866
you might manage your daily work tasks.

73
00:03:59,866 --> 00:04:04,866
Here is a quick simple technique known as Kanban, originally from Japan.

74
00:04:04,866 --> 00:04:09,866
So Kanban is a Japanese term for visual signal or card.

75
00:04:09,866 --> 00:04:13,009
Toyota line workers use a Kanban, that is an actual card,

76
00:04:13,009 --> 00:04:15,644
to signal steps in their manufacturing process.

77
00:04:15,644 --> 00:04:19,404
The system's highly visible nature allowed teams to communicate more

78
00:04:19,404 --> 00:04:22,775
easily on what work needed to be done and when.

79
00:04:22,775 --> 00:04:25,957
It also standardized cues and refined processes,

80
00:04:25,957 --> 00:04:28,866
which helped to reduce waste and maximize value.

81
00:04:28,866 --> 00:04:33,558
So this technique can be used as well for software development.

82
00:04:33,558 --> 00:04:40,723
So a simple Kanban board, if you will, may have a list of to do items,

83
00:04:40,723 --> 00:04:43,174
which would be the backlog items, doing,

84
00:04:43,174 --> 00:04:45,328
the things you're actually doing in work,

85
00:04:45,328 --> 00:04:47,666
or items that are done, that are complete.

86
00:04:47,666 --> 00:04:51,593
So you can be really creative as well and you can have different categories.

87
00:04:51,593 --> 00:04:57,219
Maybe you have one for re-do, in other words it was done and a defect was found,

88
00:04:57,219 --> 00:05:02,775
so it's in the re-do pile, if you will, or maybe the feature is moved into UAT,

89
00:05:02,775 --> 00:05:06,048
User Acceptance Testing, or maybe a feature is moved into production,

90
00:05:06,048 --> 00:05:07,789
it's actually completed into production.

91
00:05:07,789 --> 00:05:12,866
So let's see a real simple example in the next slide.

92
00:05:12,866 --> 00:05:13,937
Here's a sample Kanban board,

93
00:05:13,937 --> 00:05:16,789
just to give you a general idea of what they're all about.

94
00:05:16,789 --> 00:05:21,066
First we may have a little grid pattern like this and we're going to have a

95
00:05:21,066 --> 00:05:23,933
column for the to do items and a column for the doing items,

96
00:05:23,933 --> 00:05:26,866
the things in work, and a column for the done items.

97
00:05:26,866 --> 00:05:29,266
And we could use cards like you see at the left there,

98
00:05:29,266 --> 00:05:32,866
here are all the things we need to do, these are our backlog items.

99
00:05:32,866 --> 00:05:35,466
And then as they get released and then we start working on them,

100
00:05:35,466 --> 00:05:36,991
they'll be moved over, the card might just be picked up,

101
00:05:36,991 --> 00:05:39,295
it could be a post it note or something like that,

102
00:05:39,295 --> 00:05:43,366
there are a lot of Kanban board tools in the industry today,

103
00:05:43,366 --> 00:05:44,366
check them out online.

104
00:05:44,366 --> 00:05:47,042
And the last column, of course, is the done column.

105
00:05:47,042 --> 00:05:50,866
So we can all easily see what is it we have to do,

106
00:05:50,866 --> 00:05:52,199
what are we working on,

107
00:05:52,199 --> 00:05:55,116
and what's done and you can do a simple standup every

108
00:05:55,116 --> 00:05:56,866
morning and discuss it with the team.

109
00:05:56,866 --> 00:06:01,533
Now a particular card might look something like this, it might say task 3.

110
00:06:01,533 --> 00:06:03,616
2, this is the 12 month scheduling feature,

111
00:06:03,616 --> 00:06:05,723
so that's the feature that's being worked on.

112
00:06:05,723 --> 00:06:10,097
In the lower left corner of the card Joe and Mary are working on it,

113
00:06:10,097 --> 00:06:14,866
and in the right corner it's identified as having maybe 32 hours of effort.

114
00:06:14,866 --> 00:06:20,321
You can design your card any way you want to so the team can

115
00:06:20,321 --> 00:06:22,866
quickly understand what it is all about.

116
00:06:22,866 --> 00:06:26,866
Now let's look at another example.

117
00:06:26,866 --> 00:06:28,116
So here's another sample.

118
00:06:28,116 --> 00:06:31,866
Of course we have the grid, we have the to do items,

119
00:06:31,866 --> 00:06:36,866
we have the doing items and I added a re-do column and then a done.

120
00:06:36,866 --> 00:06:39,266
So if something was done and was found to be a defect,

121
00:06:39,266 --> 00:06:41,733
I would move the card back to the re-do column.

122
00:06:41,733 --> 00:06:47,866
So we have all our to do items, our doing items, our re-do and our done.

123
00:06:47,866 --> 00:06:51,866
Now you could add even more columns to represent UAT or promote to production,

124
00:06:51,866 --> 00:06:52,699
as examples.

125
00:06:52,699 --> 00:06:58,199
Be creative with not only your columns, but the information on the card as well.

126
00:06:58,199 --> 00:07:00,066
Just be sure it is very simple,

127
00:07:00,066 --> 00:07:03,723
easy to read and easy to understand by your team and even easy

128
00:07:03,723 --> 00:07:08,295
to read and understand by your manager or your customer so they

129
00:07:08,295 --> 00:07:10,866
can easily see what you're doing.

130
00:07:10,866 --> 00:07:11,593
Very transparent,

131
00:07:11,593 --> 00:07:15,509
very powerful and I would suggest a stand up every morning to

132
00:07:15,509 --> 00:07:18,199
review with the team where you're at and what you're doing and

133
00:07:18,199 --> 00:07:20,533
everyone knows their assignments for the day,

134
00:07:20,533 --> 00:07:28,000
and things will move very smoothly forward. Now let's move to the next section on operational support.

