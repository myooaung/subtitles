1
00:00:00,709 --> 00:00:04,709
So how are you going to do requirements analysis?

2
00:00:04,709 --> 00:00:08,146
Whether it's a simple 2 hour job or a large project,

3
00:00:08,146 --> 00:00:11,042
well you need an approach, that is a process.

4
00:00:11,042 --> 00:00:14,542
So whether you're Agile, Scrum, waterfall or something in between,

5
00:00:14,542 --> 00:00:17,876
good quality requirements will also be required as

6
00:00:17,876 --> 00:00:22,042
part of your job or your team's job.

7
00:00:22,042 --> 00:00:23,709
Let's look further.

8
00:00:23,709 --> 00:00:28,709
Requirements analysis, in systems engineering and software engineering,

9
00:00:28,709 --> 00:00:33,153
requirements analysis encompasses those tasks that go into

10
00:00:33,153 --> 00:00:37,995
determining the needs or conditions to meet for a new or

11
00:00:37,995 --> 00:00:39,709
updated product or service.

12
00:00:39,709 --> 00:00:42,109
They take into account various stakeholders,

13
00:00:42,109 --> 00:00:44,959
they do some analysis, documenting, validating,

14
00:00:44,959 --> 00:00:48,709
and managing software or system requirements.

15
00:00:48,709 --> 00:00:51,709
Sometimes this is also called functional specifications.

16
00:00:51,709 --> 00:00:52,995
Here's a note,

17
00:00:52,995 --> 00:00:58,209
I typically see in so many IT organizations that they hire only

18
00:00:58,209 --> 00:01:02,209
software engineers and leave the determination of the

19
00:01:02,209 --> 00:01:04,852
requirements also to the software engineers.

20
00:01:04,852 --> 00:01:08,709
Now this can be a major flaw to me.

21
00:01:08,709 --> 00:01:10,891
Developers typically do not like to write requirements,

22
00:01:10,891 --> 00:01:15,709
so they either don't get written or maybe get written poorly.

23
00:01:15,709 --> 00:01:20,709
So please be sure your team is staffed with professional business analysts,

24
00:01:20,709 --> 00:01:23,709
or BAs as they're called, to augment your team.

25
00:01:23,709 --> 00:01:26,982
Also many BAs are suited for project management activities,

26
00:01:26,982 --> 00:01:33,709
which is coming in another section of this module.

27
00:01:33,709 --> 00:01:37,709
Now let's talk for a moment about why requirements analysis is so important.

28
00:01:37,709 --> 00:01:41,709
Do you know what a major cause of failed software is?

29
00:01:41,709 --> 00:01:43,709
Well it's poor definition of requirements,

30
00:01:43,709 --> 00:01:46,959
that's one of the major causes of failed software and after

31
00:01:46,959 --> 00:01:50,555
all my years in the software business, I truly believe this.

32
00:01:50,555 --> 00:01:55,280
Now Agile, waterfall or blend, well the same issue applies,

33
00:01:55,280 --> 00:01:58,709
creating quality requirements is still essential.

34
00:01:58,709 --> 00:02:01,254
When the activity of defining requirements is

35
00:02:01,254 --> 00:02:03,109
either skipped or poorly performed,

36
00:02:03,109 --> 00:02:06,309
the resulting application software is likely not to

37
00:02:06,309 --> 00:02:07,800
meet your customer's requirements.

38
00:02:07,800 --> 00:02:13,209
Now that is what I think about Scrum, for example, and Agile methodology.

39
00:02:13,209 --> 00:02:17,487
Because you build things incrementally in relatively shortly sprints,

40
00:02:17,487 --> 00:02:19,709
you can make course corrections.

41
00:02:19,709 --> 00:02:21,376
This process, in my opinion,

42
00:02:21,376 --> 00:02:24,265
greatly improves your chances of a successful product,

43
00:02:24,265 --> 00:02:28,153
but remember quality requirements are still necessary,

44
00:02:28,153 --> 00:02:31,852
either in sprint forms or prior to sprints or something like that,

45
00:02:31,852 --> 00:02:37,709
you still need good requirements in order to build out software.

46
00:02:37,709 --> 00:02:41,042
Next, define and follow your process,

47
00:02:41,042 --> 00:02:45,017
successful software development is often hindered by the poor

48
00:02:45,017 --> 00:02:47,709
state of the process of requirements analysis.

49
00:02:47,709 --> 00:02:51,709
Most organizations do not have any rigor or process to gather requirements,

50
00:02:51,709 --> 00:02:54,709
resulting in vague and imprecise requirements.

51
00:02:54,709 --> 00:02:56,709
So define your process.

52
00:02:56,709 --> 00:03:01,042
Create templates to be easily reused, keep your artifacts,

53
00:03:01,042 --> 00:03:03,376
that is requirements that you've written before,

54
00:03:03,376 --> 00:03:07,709
easily accessible by the developers and the customers alike.

55
00:03:07,709 --> 00:03:12,209
Now requirements should be documented, actionable,

56
00:03:12,209 --> 00:03:17,209
testable, traceable, and tied to the business as well,

57
00:03:17,209 --> 00:03:21,073
and related to identified business needs or opportunities,

58
00:03:21,073 --> 00:03:24,254
and defined to a level of detail,

59
00:03:24,254 --> 00:03:27,709
sufficient for system design and architecture to take place.

60
00:03:27,709 --> 00:03:30,709
And that's another section coming up later.

61
00:03:30,709 --> 00:03:35,709
Alright now let's look at some tools for requirements analysis.

62
00:03:35,709 --> 00:03:39,940
Here's a really good quote, "we don't need an accurate document,

63
00:03:39,940 --> 00:03:44,209
we need a shared understanding, " by Jeff Patton.

64
00:03:44,209 --> 00:03:50,042
This really resonated with me, so it is the process of gathering requirements,

65
00:03:50,042 --> 00:03:52,820
the meetings, the analysis, the research,

66
00:03:52,820 --> 00:03:56,153
talking to people, workflow diagrams, documents,

67
00:03:56,153 --> 00:03:57,800
mockups, prototypes, et cetera,

68
00:03:57,800 --> 00:04:01,618
that will enable a common understanding of the intended outcome.

69
00:04:01,618 --> 00:04:04,800
Yes, I certainly prefer an accurate document,

70
00:04:04,800 --> 00:04:05,709
of course,

71
00:04:05,709 --> 00:04:09,459
but not at the expense of losing a common

72
00:04:09,459 --> 00:04:11,459
understanding between software engineers,

73
00:04:11,459 --> 00:04:12,959
business analysts,

74
00:04:12,959 --> 00:04:18,073
project managers and most importantly the customers and the users.

75
00:04:18,073 --> 00:04:20,527
Okay, have I piqued your interest in requirements gathering?

76
00:04:20,527 --> 00:04:27,709
Let's see where you can learn more about requirements gathering.

77
00:04:27,709 --> 00:04:28,940
As I mentioned earlier,

78
00:04:28,940 --> 00:04:32,401
each section in this module could in fact be a complete course.

79
00:04:32,401 --> 00:04:36,209
Well I would like to recommend to you another one of my Pluralsight

80
00:04:36,209 --> 00:04:39,709
courses titled Best Practices for Requirements Gathering,

81
00:04:39,709 --> 00:04:49,000
which would be a nice adjunct or companion course for this course. Okay, let's go estimate some work.

