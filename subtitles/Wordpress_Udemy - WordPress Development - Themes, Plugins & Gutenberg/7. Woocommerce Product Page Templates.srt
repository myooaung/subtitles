1
00:00:07,390 --> 00:00:11,000
In the previous lecture we got started with commerce development.

2
00:00:11,080 --> 00:00:16,780
Right now we have this dilemma where we have two pages that aren't padded and have the sidebar messing

3
00:00:16,780 --> 00:00:18,560
up the structure of the page.

4
00:00:18,670 --> 00:00:24,600
The two pages are what we do commerce calls product pages in the resource section of this lecture.

5
00:00:24,610 --> 00:00:28,330
I provide a link to the Template structure documentation page.

6
00:00:28,330 --> 00:00:33,040
This page goes over how you'd go about overwriting the templates from commerce.

7
00:00:33,070 --> 00:00:37,450
It's very similar to how you would go about overwriting templates in Buddy press.

8
00:00:37,450 --> 00:00:43,510
It says that templates can be found inside the world commerce slash templates directory right below

9
00:00:43,660 --> 00:00:49,320
you can find a link to the latest template changes the latest changes were made in three point five.

10
00:00:49,360 --> 00:00:53,810
It should be noted that not every world commerce update comes with a template change.

11
00:00:53,860 --> 00:00:58,540
If you can't find a version that's not here it's because there were no template changes made during

12
00:00:58,540 --> 00:00:59,790
that time.

13
00:00:59,890 --> 00:01:06,370
Click on one of these links you'll be taken to get hub where the repository is hosted this repo is the

14
00:01:06,370 --> 00:01:10,450
same file and folder structure we have downloaded in our WordPress site.

15
00:01:10,480 --> 00:01:15,950
If you take a look around you'll notice we have a plethora of templates made available to us.

16
00:01:15,970 --> 00:01:21,970
Two things I want to highlight is that we have these folders called emails and Global's if I open the

17
00:01:22,030 --> 00:01:27,730
emails folder you'll find all the email templates that will commerce will use whenever it needs to email

18
00:01:27,730 --> 00:01:32,830
a user about anything specific like resetting a password or placing a new order.

19
00:01:32,830 --> 00:01:39,190
We'll be taking a more in-depth look at these in the future lecture the other folder locals are templates

20
00:01:39,190 --> 00:01:41,860
that are used globally throughout world commerce.

21
00:01:41,860 --> 00:01:44,570
This is what we'll want to override in just a moment.

22
00:01:44,590 --> 00:01:46,680
Let's tackle one thing at a time.

23
00:01:46,750 --> 00:01:51,850
The very first thing I want to do is remove the sidebar from these two pages since we commerce thinks

24
00:01:51,910 --> 00:01:54,550
it's necessary to take a full width page.

25
00:01:54,550 --> 00:01:59,080
We should just force Woo commerce to take the same amount of space as any other post.

26
00:01:59,290 --> 00:02:01,460
But I like this full width style.

27
00:02:01,630 --> 00:02:06,610
Just like last time we have to search through all these templates to find the correct file to modify.

28
00:02:07,090 --> 00:02:13,090
I did this already and it's easier than you may think the two files will want to modify are the archive

29
00:02:13,120 --> 00:02:18,370
dash products dot HP and single dash product dot P. HP Temple of files

30
00:02:21,680 --> 00:02:27,260
if I were to open these two files you'll see that world commerce provides helpful block comments stating

31
00:02:27,260 --> 00:02:30,730
that these two templates are used for displaying products.

32
00:02:30,830 --> 00:02:37,160
This is one way to save yourself time instead of studying H2 UML and comparing code you can just read

33
00:02:37,160 --> 00:02:41,990
these comments where Wu commerce will describe what these templates do in more detail.

34
00:02:41,990 --> 00:02:47,230
Now that we've determined which two templates to modify let's open them up inside the editor.

35
00:02:47,660 --> 00:02:53,390
Initially the next step you may want to take is to copy this file paste it into our themes folder and

36
00:02:53,390 --> 00:02:54,740
modify it from there.

37
00:02:54,800 --> 00:02:58,400
But this would actually be the wrong action to take at this point.

38
00:02:58,430 --> 00:03:03,230
The reason for this is because the world commerce does things slightly different than what most plugins

39
00:03:03,230 --> 00:03:04,070
do.

40
00:03:04,070 --> 00:03:09,520
This approach is very flexible and easier to work with once you understand how it works.

41
00:03:09,530 --> 00:03:11,330
So what am I talking about.

42
00:03:11,330 --> 00:03:15,830
Well let's examine the code from the single product template for a moment.

43
00:03:15,920 --> 00:03:21,270
After looking around you'll eventually find a spot in the code where it begins to load the side bar

44
00:03:21,320 --> 00:03:24,100
using the Wu commerce sidebar hook.

45
00:03:24,140 --> 00:03:26,250
This might look a little weird at first.

46
00:03:26,360 --> 00:03:30,380
Commerce uses a hook to load the sidebar but how.

47
00:03:30,380 --> 00:03:33,000
Well let's take it one step at a time.

48
00:03:33,050 --> 00:03:39,090
Well Commerce is calling a function called do action and running the hook Woo commerce sidebar.

49
00:03:39,140 --> 00:03:41,080
We already know what this does.

50
00:03:41,120 --> 00:03:44,330
Any code that hooks into this hook will be executed.

51
00:03:44,330 --> 00:03:47,270
That includes us as well right above this code.

52
00:03:47,270 --> 00:03:50,430
You'll see a block comment which is very important.

53
00:03:50,480 --> 00:03:54,250
It might seem like random information but it's very useful to us.

54
00:03:54,500 --> 00:04:00,440
The at hooked symbol is telling us that we'll commerce hooks into this hook within itself.

55
00:04:00,440 --> 00:04:06,020
That may seem strange but it's completely valid to do something like that reading further you'll see

56
00:04:06,020 --> 00:04:08,770
the name of the function and the priority.

57
00:04:08,810 --> 00:04:12,080
Let's double check this to make sure this comment is in line.

58
00:04:12,080 --> 00:04:14,990
Feel free to follow along just watch what I do.

59
00:04:14,990 --> 00:04:17,810
If you can't I'm going to copy the hook.

60
00:04:17,820 --> 00:04:18,140
Woo.

61
00:04:18,140 --> 00:04:19,520
Commerce sidebar.

62
00:04:19,520 --> 00:04:24,920
Then I'm going to right click on the Wu commerce plugin folder and select finding folder.

63
00:04:24,920 --> 00:04:29,270
We only want to search through the code inside this plugin almost immediately.

64
00:04:29,300 --> 00:04:34,580
Visual Studio code will show me all the locations where I can find this text within the web commerce

65
00:04:34,580 --> 00:04:41,210
plug and folder will be returned with five results two of which are comments which we can ignore.

66
00:04:41,510 --> 00:04:43,580
Another two results will be inside.

67
00:04:43,620 --> 00:04:49,400
Do action function right above each of these is the name of the files where the searched texts can be

68
00:04:49,400 --> 00:04:50,300
found.

69
00:04:50,300 --> 00:04:55,340
The two files where this is used are the archive product and single product files.

70
00:04:55,400 --> 00:05:01,350
Just what that information alone we can determine that this hook is specifically for product pages only.

71
00:05:01,640 --> 00:05:06,470
What we care most about is this first result which uses the add action function.

72
00:05:06,470 --> 00:05:12,220
Let's click that and preview the code you'll see that Woo Commerce wants to call a function called Woo

73
00:05:12,230 --> 00:05:15,580
commerce get sidebar with a priority of 10.

74
00:05:15,650 --> 00:05:19,930
This is the same information that was given to us in the comment block previously.

75
00:05:20,120 --> 00:05:22,380
Let's check out what this function does.

76
00:05:22,400 --> 00:05:24,410
I'm going to do what I did last time.

77
00:05:24,530 --> 00:05:29,320
I'm going to copy the name of this function and then search for it from within the Wu commerce plugin

78
00:05:29,330 --> 00:05:32,440
folder.

79
00:05:32,470 --> 00:05:34,650
We don't care about most of these results.

80
00:05:34,690 --> 00:05:37,630
We only care about where the function is defined.

81
00:05:37,630 --> 00:05:41,130
I'm going to double click on the result where the function is defined.

82
00:05:41,230 --> 00:05:46,330
Visual Studio code will open that file and take you to where that function is defined.

83
00:05:46,420 --> 00:05:52,690
All this function does is call the function W C get template which will load a template file the template

84
00:05:52,720 --> 00:05:59,380
that will be loaded is the global slash side bar dot P HP file just like Buddy press will.

85
00:05:59,380 --> 00:06:03,370
Commerce has a function that loads Woo commerce specific templates.

86
00:06:03,400 --> 00:06:09,520
This function will search for the template into locations the first location is inside our theme folder.

87
00:06:09,520 --> 00:06:14,800
Even though we don't have any world commerce templates it will look for a folder named Wu commerce and

88
00:06:14,800 --> 00:06:20,740
then find the template relative to the path passed in if it doesn't find it there then it'll look for

89
00:06:20,740 --> 00:06:25,480
the template inside the Wu commerce slash templates plugin folder.

90
00:06:25,570 --> 00:06:28,300
Let's open this template from the Wu commerce plugin folder

91
00:06:33,920 --> 00:06:37,770
there's quite a bit of code going on here but it's mostly just comments.

92
00:06:37,880 --> 00:06:41,440
We're going to focus on this line here to load a sidebar.

93
00:06:41,570 --> 00:06:46,730
All the symbol it does is call the function get sidebar and pass in the string shop.

94
00:06:46,790 --> 00:06:47,960
If you don't remember.

95
00:06:47,960 --> 00:06:51,140
Let me give you a brief overview of what this function does.

96
00:06:51,140 --> 00:06:56,900
This function will look for example at named sidebar dot P. HP inside the themes folder.

97
00:06:56,900 --> 00:07:03,110
However if you pass in a string it'll then look for a file named sidebar dash followed by the name of

98
00:07:03,110 --> 00:07:06,190
the string and then end it with DOT P HP.

99
00:07:06,200 --> 00:07:12,320
In this example it will look for a template named sidebar dash shop dot P HP.

100
00:07:12,320 --> 00:07:17,370
This file doesn't exist in our theme so WordPress will default to the sidebar.

101
00:07:17,380 --> 00:07:20,470
Dot P HP file which is what's happening here.

102
00:07:20,510 --> 00:07:25,730
This is why the sidebar is being loaded inside this shot page even though it doesn't really work with

103
00:07:25,730 --> 00:07:27,450
a full with page.

104
00:07:27,530 --> 00:07:29,370
Now do we understand what's happening.

105
00:07:29,390 --> 00:07:31,030
We just have to remove it.

106
00:07:31,040 --> 00:07:32,980
There are a couple of solutions here.

107
00:07:33,050 --> 00:07:39,140
We can copy the archive products and single product templates to our theme and remove this line of code

108
00:07:39,200 --> 00:07:44,750
or we can just grab the sidebar dot P HP far from the Global's folder and just remove it.

109
00:07:44,750 --> 00:07:46,820
Both approaches are wrong.

110
00:07:46,850 --> 00:07:49,870
The correct solution is to just remove the action.

111
00:07:49,940 --> 00:07:54,810
We have done this before but you're completely allowed to do so and it's easy to do.

112
00:07:54,830 --> 00:07:59,150
I'll explain why this is the best solution in a moment but first let's try it out.

113
00:07:59,930 --> 00:08:08,570
I want you to open the things functions file and call the function remove action.

114
00:08:08,590 --> 00:08:14,040
This does the opposite of what the add action function does which is remove an action function from

115
00:08:14,040 --> 00:08:14,860
money.

116
00:08:14,950 --> 00:08:18,630
The first parameter is the name of the action hook which will be.

117
00:08:18,710 --> 00:08:20,020
Commerce sidebar.

118
00:08:20,200 --> 00:08:24,770
The second parameter is the name of the function that we want to remove which is the Wu.

119
00:08:25,000 --> 00:08:26,740
Get sidebar function.

120
00:08:26,740 --> 00:08:34,240
The last parameter is the priority which was 10 all this information can be grabbed from the comment

121
00:08:34,240 --> 00:08:36,460
blog that contains this information.

122
00:08:36,460 --> 00:08:39,290
You don't have to search through the files like I did.

123
00:08:39,310 --> 00:08:44,150
Well Commerce does a good job of commenting everything as you can see throughout this template.

124
00:08:44,410 --> 00:08:47,110
With this one line of code we have removed the sidebar.

125
00:08:47,470 --> 00:08:50,380
Let's refresh the page and see if everything worked.

126
00:08:50,470 --> 00:08:53,260
As you can see the sidebar is now gone.

127
00:08:53,260 --> 00:08:53,640
All right.

128
00:08:53,800 --> 00:08:59,890
Let's talk about the benefits of doing it like this instead of copying the templates and just modifying

129
00:08:59,890 --> 00:09:00,270
them.

130
00:09:00,340 --> 00:09:03,790
We save ourselves the time by doing something like this.

131
00:09:03,790 --> 00:09:08,190
Another benefit is that this code is so much easier to maintain.

132
00:09:08,230 --> 00:09:13,090
I would rather maintain one line of code as opposed to maintaining a whole template.

133
00:09:13,090 --> 00:09:19,420
Lastly we actually open ourselves up to more flexibility even though we removed this function from the

134
00:09:19,420 --> 00:09:19,860
hook.

135
00:09:20,110 --> 00:09:23,770
Other functions will still be allowed to run even us.

136
00:09:23,830 --> 00:09:25,760
Let's test this out really quick.

137
00:09:25,780 --> 00:09:30,040
I'm going to create an action hook for the world commerce sidebar.

138
00:09:30,040 --> 00:09:33,760
I'm going to run an anonymous function just for example sake.

139
00:09:33,760 --> 00:09:42,100
I'm going to simply echo out the word test refresh the page and you'll now see the message being output

140
00:09:42,100 --> 00:09:42,780
it.

141
00:09:42,990 --> 00:09:48,690
If we were to remove the do action function call from the template then we limit ourselves and other

142
00:09:48,690 --> 00:09:51,300
plugins from needing to use this hook.

143
00:09:51,330 --> 00:09:55,590
This would be considered bad practice and would give more problems down the road.

144
00:09:55,620 --> 00:10:00,510
It is so much easier and simpler to just remove the function from the hook.

145
00:10:00,510 --> 00:10:07,620
I'm going to remove our anonymous function as we don't want to use it in production.

146
00:10:07,680 --> 00:10:13,740
The next step is to just add some padding which is easier and doesn't require as much research inside

147
00:10:13,740 --> 00:10:15,060
the Global's folder.

148
00:10:15,060 --> 00:10:19,580
You'll find HCM L that applies to almost all pages in commerce.

149
00:10:19,590 --> 00:10:23,660
There are two templates called Wrapper START AND wrapper ends.

150
00:10:23,700 --> 00:10:29,880
These two templates generate code that wraps around all woo commerce content specifically templates

151
00:10:29,880 --> 00:10:33,940
that require their own templates rather than a short code open.

152
00:10:33,960 --> 00:10:39,570
Either of these files if you take a look you'll see that world commerce grabs the current name of the

153
00:10:39,570 --> 00:10:45,480
theme activated it checks if any of the official wordpress themes are activated and while output different

154
00:10:45,480 --> 00:10:48,150
types of HCM l depending on the theme.

155
00:10:48,180 --> 00:10:54,090
However if the current theme isn't an official wordpress theme then it'll just load these default div

156
00:10:54,090 --> 00:10:55,320
tags.

157
00:10:55,350 --> 00:11:01,170
Here's what we're going to do in order to override existing templates we have to create a folder named

158
00:11:01,190 --> 00:11:01,490
Wu.

159
00:11:01,500 --> 00:11:03,750
Commerce inside the theme folder.

160
00:11:03,870 --> 00:11:04,850
Let's do that now

161
00:11:07,560 --> 00:11:11,550
then we can just copy the templates respectively into this folder.

162
00:11:11,670 --> 00:11:17,360
I'm going to copy and paste the Global's footer into the Wu commerce folder in our theme.

163
00:11:17,580 --> 00:11:23,040
Then I'm going to delete everything inside this folder except for the wrapper start and wrapper end

164
00:11:23,040 --> 00:11:23,640
files

165
00:11:29,720 --> 00:11:31,150
open both files.

166
00:11:31,190 --> 00:11:36,020
I'm going to remove the conditional statement since we already know that this isn't an official wordpress

167
00:11:36,020 --> 00:11:36,670
theme.

168
00:11:36,800 --> 00:11:41,690
I'm just going to leave the last set of opening and closing div tags in both files

169
00:11:51,600 --> 00:11:58,170
then I'm going to apply some classes to the first opening div tag I want to empty content dash wrap

170
00:11:58,170 --> 00:11:58,710
class

171
00:12:01,410 --> 00:12:08,510
then I'm going to apply the class container to the second main element.

172
00:12:08,630 --> 00:12:11,970
These are the same classes we use in our other templates.

173
00:12:12,020 --> 00:12:18,340
I'm going to refresh the page you should now see our content being paid correctly for the most part.

174
00:12:18,380 --> 00:12:23,930
I don't mind modifying these templates since they don't have any significant code that would cause problems

175
00:12:23,930 --> 00:12:28,280
with other plugins or our theme before I wrap up this lecture.

176
00:12:28,400 --> 00:12:31,020
I want to talk about keeping up with updates.

177
00:12:31,100 --> 00:12:36,890
If you look at the documentation page I linked earlier you'll find a link to fixing outdated with commerce

178
00:12:36,890 --> 00:12:37,900
templates.

179
00:12:37,910 --> 00:12:40,700
This page goes over what the title suggests.

180
00:12:40,700 --> 00:12:42,520
It's very simple to do.

181
00:12:42,770 --> 00:12:48,860
If you were to go to the admin dashboard and navigate to woo commerce system status you'll find information

182
00:12:48,860 --> 00:12:53,450
about how well commerce is operating and if everything is working smoothly.

183
00:12:53,540 --> 00:12:57,800
If you scroll to the very bottom you'll come across the templates box.

184
00:12:57,830 --> 00:13:01,030
This box tells you what templates are being overridden.

185
00:13:01,190 --> 00:13:04,610
In our case it would be the wrapper template files.

186
00:13:04,610 --> 00:13:08,600
Whenever an update occurs you will always want to check this box.

187
00:13:08,630 --> 00:13:13,630
It'll give you a warning to let you know if the current template you have overridden is outdated.

188
00:13:13,730 --> 00:13:19,040
If it is then you just simply need to paste in the new version and redo the changes you made.

189
00:13:19,040 --> 00:13:22,020
It's kind of a pain but it's what you have to do.

190
00:13:22,070 --> 00:13:26,000
So how does Wu commerce know when a template is outdated.

191
00:13:26,000 --> 00:13:31,790
Well if you were to open up one of the overridden templates you'll find a block comment inside this

192
00:13:31,790 --> 00:13:32,510
block comment.

193
00:13:32,540 --> 00:13:38,500
You'll find this one piece of data that says version followed by the version of the template will commerce

194
00:13:38,510 --> 00:13:41,180
will check this value to see if it's outdated.

195
00:13:41,270 --> 00:13:46,430
It's extremely important that you always leave the block comments intact when overwriting them.

196
00:13:46,460 --> 00:13:49,730
It's how you keep yourself up to date with the latest changes.
