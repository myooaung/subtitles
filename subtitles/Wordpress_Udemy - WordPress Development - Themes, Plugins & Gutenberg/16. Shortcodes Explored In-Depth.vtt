WEBVTT
1
00:00:07.740 --> 00:00:12.190
So before we move onto the next section I want to talk more about short codes.

2
00:00:12.270 --> 00:00:16.530
We've used short codes to display forms but I haven't really gone beyond that.

3
00:00:16.740 --> 00:00:20.940
In this lecture we'll explore more about what you can do with short codes.

4
00:00:20.940 --> 00:00:22.530
We're going to keep things simple.

5
00:00:22.920 --> 00:00:28.290
I want to create a button where the user will be taken to a Twitter page inside the main plugin file

6
00:00:28.320 --> 00:00:29.640
add a new short code.

7
00:00:29.730 --> 00:00:34.510
I'm going to call it Twitter follow.

8
00:00:34.610 --> 00:00:39.530
I'm not going to bother names spacing it since this will be a rather generic short code.

9
00:00:39.530 --> 00:00:47.610
The function to call will be named our twitter follow short code inside the short codes folder create

10
00:00:47.670 --> 00:00:52.490
a file named Twitter dash followed up BHP and define the function here.

11
00:00:52.500 --> 00:00:53.850
Lastly included

12
00:00:57.850 --> 00:01:00.250
basically a short code is very simple.

13
00:01:00.250 --> 00:01:05.020
You just have to return a String and that's what will be output it onto the screen.

14
00:01:05.110 --> 00:01:10.600
We can take this a step further by allowing the user to add attributes and content just like a regular

15
00:01:10.630 --> 00:01:12.120
HCM email tag.

16
00:01:12.310 --> 00:01:13.890
Let's set things up first.

17
00:01:13.900 --> 00:01:17.270
I'm going to paste in the following code.

18
00:01:17.350 --> 00:01:19.330
There's nothing special going on here.

19
00:01:19.330 --> 00:01:24.040
I'm just returning a link with some classes applied to it to make it look nice.

20
00:01:24.040 --> 00:01:26.630
I also have this nice little Twitter icon.

21
00:01:26.650 --> 00:01:30.280
This is completely static and we'll take the user to Twitter.

22
00:01:30.280 --> 00:01:33.640
I'm going to create a brand new page and use this short code.

23
00:01:33.670 --> 00:01:35.160
I want you to do the same.

24
00:01:35.170 --> 00:01:41.340
Make sure you publish the page.

25
00:01:41.580 --> 00:01:46.330
All right so I'm on the page and as you can see the short code is working as intended.

26
00:01:46.330 --> 00:01:52.180
This is nothing we haven't done before the real power of short codes comes from allowing users to customize

27
00:01:52.180 --> 00:01:53.740
its behavior.

28
00:01:53.740 --> 00:01:59.380
Let's start with that you use just like regular HDMI all short codes can have attributes and they are

29
00:01:59.380 --> 00:02:02.560
written in the same fashion back inside the edit page.

30
00:02:02.560 --> 00:02:10.790
I'm going to add an attribute called handle with the value of Udemy you can name your attributes whatever

31
00:02:10.790 --> 00:02:16.940
you want but WordPress does have a few rules in the resource section of this lecture I provide a link

32
00:02:16.970 --> 00:02:19.010
to the short codes API.

33
00:02:19.010 --> 00:02:24.530
This page gives really great explanations about how to use the short codes API.

34
00:02:24.530 --> 00:02:28.960
If you scroll down a bit you'll find that WordPress says important tip.

35
00:02:29.060 --> 00:02:33.050
Don't use camel case or uppercase for your attribute names.

36
00:02:33.050 --> 00:02:36.950
We're going to keep things simple and just use all lowercase letters.

37
00:02:36.980 --> 00:02:42.460
Now that we're specifying an attribute we can use it inside the code back inside the function.

38
00:02:42.470 --> 00:02:46.490
You can accept all the attributes by adding the parameter acts.

39
00:02:46.550 --> 00:02:51.800
This will be an array with all the attributes where the key is the name of the attribute and the value

40
00:02:51.800 --> 00:02:53.450
is the value itself.

41
00:02:53.630 --> 00:02:59.310
Before we use any attributes it's always good practice to make sure each one has the default value.

42
00:02:59.330 --> 00:03:05.610
I'm going to reassign my attributes to the function short code adds.

43
00:03:05.750 --> 00:03:09.330
This is a special function meant especially for short codes.

44
00:03:09.350 --> 00:03:14.320
It will take in an array of attributes and make sure all default values are set.

45
00:03:14.570 --> 00:03:18.220
The first parameter is an array of default attributes.

46
00:03:18.320 --> 00:03:26.610
I only have one attribute which is handle and I'm going to give this a default value of you to me the

47
00:03:26.610 --> 00:03:30.670
second parameter to this function is the attributes itself.

48
00:03:30.720 --> 00:03:34.790
So what this will do is set a default value for the handle attribute.

49
00:03:34.800 --> 00:03:38.720
If the user didn't input this attribute we can now use this.

50
00:03:38.780 --> 00:03:43.920
I'm going to replace the static link with the handle name and use the attribute handle instead

51
00:03:46.700 --> 00:03:49.490
just like that the handle name will be dynamic.

52
00:03:49.490 --> 00:03:52.690
I'm going to refresh the page and the links should be updated.

53
00:03:52.880 --> 00:03:55.620
So that's one way to extend short codes.

54
00:03:55.640 --> 00:04:00.080
The next thing you can do with sort codes is using closed sort codes.

55
00:04:00.080 --> 00:04:04.250
If you look at the short code on the edit page you'll notice it's by itself.

56
00:04:04.250 --> 00:04:13.430
However just like h t email tags we can add an enclosed version like some it's just a short code itself.

57
00:04:13.510 --> 00:04:18.310
But this time you're adding in a forward slash you let WordPress know where it ends.

58
00:04:18.370 --> 00:04:22.780
Anything placed in between these two short codes will be passed into our function.

59
00:04:22.780 --> 00:04:27.520
I'm going to set this to follow us.

60
00:04:27.600 --> 00:04:32.060
Let's go back to the function and accept this new data inside the parameters.

61
00:04:32.070 --> 00:04:35.430
I can add a second parameter called content.

62
00:04:35.550 --> 00:04:38.960
This will contain the text inside an enclosed short code.

63
00:04:38.970 --> 00:04:43.050
Keep in mind that enclosed short codes are optional for users.

64
00:04:43.050 --> 00:04:46.870
I'm going to set this to a default value which will be no.

65
00:04:46.890 --> 00:04:54.970
Then I'm going to replace this text with the content variable like so I'm going to refresh the page

66
00:04:55.000 --> 00:05:01.300
and as you can see the text inside the button was replaced short codes are very simple to use as a user

67
00:05:01.300 --> 00:05:02.380
and developer.

68
00:05:02.500 --> 00:05:05.490
They do make our code look cleaner and more readable.

69
00:05:05.500 --> 00:05:07.910
There is one last thing I want to show you.

70
00:05:08.080 --> 00:05:14.140
The content placed inside the enclosed short codes can also contain HCM CML and even shorter codes.

71
00:05:14.140 --> 00:05:17.260
However short codes cannot be processed by short codes.

72
00:05:17.260 --> 00:05:22.990
Naturally if you would like to process short codes inside a short code then you'll need to do one simple

73
00:05:22.990 --> 00:05:25.530
thing back inside the function.

74
00:05:25.540 --> 00:05:33.970
I'm going to wrap the content variable with a function called do short code this function does as its

75
00:05:33.970 --> 00:05:39.840
name suggests it will take in a string and process the code inside it'll process short codes.

76
00:05:39.850 --> 00:05:40.750
If there are any.

77
00:05:41.530 --> 00:05:44.900
Just like that our short code now supports short codes.

78
00:05:44.920 --> 00:05:48.190
This is optional to do because I usually recommended.

79
00:05:48.190 --> 00:05:52.660
If you have a short code that's very complex and you want it to be flexible.

80
00:05:52.660 --> 00:05:53.140
All right.

81
00:05:53.170 --> 00:05:55.090
That's basically it for short codes.

82
00:05:55.150 --> 00:06:00.250
You can read the documentation to learn more cool tips and tricks for using short codes.
