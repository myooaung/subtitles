1
00:00:07,890 --> 00:00:09,980
We're making great progress so far.

2
00:00:09,990 --> 00:00:12,260
It's time to start working on the posts.

3
00:00:12,420 --> 00:00:13,570
Before we do that.

4
00:00:13,590 --> 00:00:18,780
We'll have to talk about the loop first in the resource section of this lecture.

5
00:00:18,780 --> 00:00:21,960
I provide a link to the loops handbook page.

6
00:00:21,960 --> 00:00:22,970
Let's check it out.

7
00:00:23,020 --> 00:00:29,430
Here's what WordPress has to say about the loop the loop is the default mechanism WordPress uses for

8
00:00:29,430 --> 00:00:32,750
outputting posts through a themes template files.

9
00:00:32,820 --> 00:00:38,700
How many posts are retrieved is determined by the number of posts to show per page defined in the reading

10
00:00:38,700 --> 00:00:45,210
settings within the loop WordPress retrieves each post to be displayed on the current page and formatted

11
00:00:45,240 --> 00:00:47,850
according to your themes instructions.

12
00:00:47,850 --> 00:00:54,270
The Loop extracts the data for each post from the WordPress database and inserts the appropriate information

13
00:00:54,270 --> 00:00:56,410
in place of each template tag.

14
00:00:56,550 --> 00:01:04,560
Any h t email or HB code in the loop will be processed for each post to put it simply the loop is true

15
00:01:04,560 --> 00:01:05,470
to its name.

16
00:01:05,640 --> 00:01:11,730
It loops through each post retrieved for the current page one at a time and performs the action specified

17
00:01:11,730 --> 00:01:13,110
in your theme.

18
00:01:13,110 --> 00:01:18,390
So what WordPress is saying is that it's just a set of functions that WordPress provides.

19
00:01:18,390 --> 00:01:20,460
So you can display your posts.

20
00:01:20,460 --> 00:01:25,930
It's called the loop because you actually have to use these functions inside of a loop.

21
00:01:26,190 --> 00:01:29,060
The loop is basically an array of posts.

22
00:01:29,130 --> 00:01:34,370
Sometimes the loop will only have one post and sometimes it can have several posts.

23
00:01:34,560 --> 00:01:36,730
It varies from page to page.

24
00:01:36,750 --> 00:01:39,480
It's pretty simple so let's get started.

25
00:01:39,480 --> 00:01:43,200
First things first we have to add support for featured images.

26
00:01:43,500 --> 00:01:48,850
I'm currently looking at a function called Ad theme support on the WordPress developer site.

27
00:01:48,930 --> 00:01:53,250
I'll provide a link to it in the resource section of this lecture.

28
00:01:53,250 --> 00:01:57,790
WordPress comes with some features that we can take advantage of right out of the box.

29
00:01:57,840 --> 00:02:03,540
It is possible and allowed for us to create our own version of these features but that's beyond the

30
00:02:03,540 --> 00:02:05,060
scope of this course.

31
00:02:05,070 --> 00:02:10,300
It's also not common practice to do this even in commercial themes.

32
00:02:10,350 --> 00:02:13,710
One of these features is called Post thumbnails.

33
00:02:13,710 --> 00:02:19,730
All you have to do is call this function and pass him the post dash thumbnails argument and WordPress

34
00:02:19,740 --> 00:02:21,990
will activate the thumbnail feature.

35
00:02:21,990 --> 00:02:26,510
This feature will take care of generating a featured image in various sizes.

36
00:02:26,640 --> 00:02:32,100
If we take a look at the documentation you'll notice that there is a second argument that allows you

37
00:02:32,100 --> 00:02:35,490
to specify certain options that come with each feature.

38
00:02:35,640 --> 00:02:41,850
If you scroll down far enough you'll find more information specifically for the second parameter.

39
00:02:41,850 --> 00:02:44,850
We can pass in an array of post types.

40
00:02:44,850 --> 00:02:51,480
We haven't talked about post types yet but basically it's a way to categorize certain pieces of content.

41
00:02:51,630 --> 00:02:56,430
We can choose to specify which post types should have post thumbnails.

42
00:02:56,430 --> 00:03:02,340
If you don't pass in an array then post thumbnails will be enabled for all post types.

43
00:03:02,370 --> 00:03:08,350
I prefer to enable thumbnails for all post types so I'm not going to take advantage of the second parameter.

44
00:03:08,550 --> 00:03:12,750
It's always good practice to check to see if you can pass in more options.

45
00:03:12,750 --> 00:03:16,110
It allows you to customize certain features for your theme.

46
00:03:16,900 --> 00:03:22,660
Let's use this function now open your editor and edit the setup file right at the top.

47
00:03:22,660 --> 00:03:31,500
I'm going to call the ad theme support function and pass in the value post dash thumbnails to iterate

48
00:03:31,680 --> 00:03:37,920
inside the function we tell WordPress we'd like to support one of its built in features we pass in which

49
00:03:37,920 --> 00:03:45,120
feature we'd like to use in our case we want to use the post dash thumbnails feature not set to check

50
00:03:45,120 --> 00:03:49,500
if this feature is enabled go to the admin dashboard and try viewing a post

51
00:03:54,890 --> 00:03:58,650
on the side you'll see a section for the featured image.

52
00:03:58,820 --> 00:04:05,400
Previously this didn't exist but with one line of code we were able to add this feature to our site.

53
00:04:05,420 --> 00:04:09,430
Keep in mind that enabling these features are totally optional.

54
00:04:09,500 --> 00:04:15,230
You are allowed to make your own versions of these features but that's not generally common.

55
00:04:15,230 --> 00:04:19,870
It's much better to take advantage of the inbuilt solutions to help save time.

56
00:04:19,910 --> 00:04:23,180
Now that we're done let's move onto the loop.

57
00:04:23,180 --> 00:04:28,940
Go to your editor and OPEN THE INDEX template you'll find a comment that says posts.

58
00:04:28,940 --> 00:04:31,440
This is where we will be running the loop.

59
00:04:31,460 --> 00:04:34,340
You'll notice I have some static blog posts.

60
00:04:34,400 --> 00:04:40,580
We don't need these anymore so let's delete all of them except one will be using this one as a reference

61
00:04:42,940 --> 00:04:43,480
next.

62
00:04:43,480 --> 00:04:47,160
Let's add some p p tags and start coding the loop.

63
00:04:47,350 --> 00:04:51,700
I want to create a conditional statement.

64
00:04:51,850 --> 00:05:00,180
We're going to call a function called have posts this function has no parameters and it does one simple

65
00:05:00,180 --> 00:05:00,790
thing.

66
00:05:01,020 --> 00:05:05,570
It checks to see whether or not the current page has any posts.

67
00:05:05,580 --> 00:05:11,040
The question is how does it know that what WordPress will do is read the you are out.

68
00:05:11,070 --> 00:05:17,380
Just based on the you are WordPress will determine what posts should be displayed and how many.

69
00:05:17,460 --> 00:05:19,410
It's all handled for you.

70
00:05:19,500 --> 00:05:25,020
Moving on this function will return true or false depending on what it finds.

71
00:05:25,020 --> 00:05:30,240
If true then we should start displaying some posts before I continue.

72
00:05:30,240 --> 00:05:33,810
You'll notice I'm using curly brackets for my conditional statements.

73
00:05:34,140 --> 00:05:37,070
Let's open up the index template for the theme.

74
00:05:37,100 --> 00:05:38,070
2017

75
00:05:40,690 --> 00:05:43,910
you'll notice that this theme doesn't use curly brackets.

76
00:05:43,930 --> 00:05:49,570
Instead the developers use the end if statement for their conditional statements.

77
00:05:49,570 --> 00:05:53,460
This right here is preference and what makes your code readable to you.

78
00:05:53,620 --> 00:05:56,950
If you want to use this style of coding then go for it.

79
00:05:56,950 --> 00:06:02,320
You won't face any performance or security issues by using end f or curly brackets.

80
00:06:02,350 --> 00:06:04,750
It's all preference for this course.

81
00:06:04,750 --> 00:06:14,160
I'll be using curly brackets continuing on will create a while loop and call the same function again.

82
00:06:14,170 --> 00:06:19,580
This may seem like it'll run an infinite loop but we can fix that easily in just a moment.

83
00:06:19,930 --> 00:06:30,810
Before we go any further let's go into the reading settings page in the admin dashboard.

84
00:06:30,850 --> 00:06:34,870
There is an option for restricting the number of posts per page.

85
00:06:34,870 --> 00:06:39,290
Let's set this to 4 so we can set up some pages nation later on.

86
00:06:39,340 --> 00:06:43,570
Let's also set for each article in feed show to summary.

87
00:06:46,010 --> 00:06:50,040
After you saved your changes let's go back to the index template.

88
00:06:50,270 --> 00:06:57,940
Inside the loop we're going to call a function called the post this function does two things.

89
00:06:57,960 --> 00:07:02,370
First it will query the database and get the current post in the loop.

90
00:07:02,430 --> 00:07:06,990
Once again WordPress is smart enough to know which post to grab.

91
00:07:06,990 --> 00:07:12,510
The second thing it does is check to see if there are any more posts after the current post.

92
00:07:12,570 --> 00:07:18,450
If there isn't then the value returned by the have posts function will be false.

93
00:07:18,510 --> 00:07:21,680
This will stop the loop from running infinitely.

94
00:07:21,720 --> 00:07:26,860
It's very important we call this function first before we do anything else inside the loop.

95
00:07:26,910 --> 00:07:31,640
Otherwise we'll end up just using the same post over and over again.

96
00:07:31,680 --> 00:07:38,250
This assures us that we'll get a new post on each iteration so remember that static posts I told you

97
00:07:38,250 --> 00:07:39,470
to leave in the template.

98
00:07:39,540 --> 00:07:42,390
Let's cut and paste that inside the loop like so

99
00:07:53,120 --> 00:07:54,320
that I'll do it.

100
00:07:54,320 --> 00:07:57,200
Let's refresh the home page and see what we get.

101
00:07:57,260 --> 00:08:02,010
You should now see the list of posts all of them will be the same.

102
00:08:02,030 --> 00:08:05,780
It's pretty broken but that's fine we'll fix this soon.

103
00:08:05,810 --> 00:08:12,170
There should only be four posts since that's what we set in the reading settings page and the next lecture

104
00:08:12,240 --> 00:08:14,150
will continue working on this.
