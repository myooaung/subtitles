WEBVTT
1
00:00:07.320 --> 00:00:13.020
The next step to building our block is to create the inspector controls what our inspector controls

2
00:00:13.260 --> 00:00:16.710
the inspector controls are the settings that appear on the sidebar.

3
00:00:16.740 --> 00:00:19.710
Let's select the recipe block for a moment.

4
00:00:19.710 --> 00:00:25.110
If you look at the sidebar you'll see the custom class field all fields that appear here.

5
00:00:25.110 --> 00:00:26.670
Our Inspector controls.

6
00:00:26.730 --> 00:00:29.260
Let's see how WordPress uses this.

7
00:00:29.280 --> 00:00:37.310
I'm going to add the paragraph block the paragraph block is simple but if you look at the sidebar then

8
00:00:37.310 --> 00:00:39.190
you'll see that it's very flexible.

9
00:00:39.290 --> 00:00:44.670
We can change the size of the text the background color and even change the alignment.

10
00:00:44.690 --> 00:00:46.610
It's a very clean and simple design.

11
00:00:46.970 --> 00:00:53.330
We can create our own custom controls or use the ones that come bundled by default for our recipe block.

12
00:00:53.330 --> 00:00:59.800
We won't eat anything super complex but we will go over how to use these components later in the course.

13
00:00:59.810 --> 00:01:02.240
Let's get started back inside the scripts.

14
00:01:02.240 --> 00:01:07.910
We're going to need to load in a component at the very top destruct the inspector controls property

15
00:01:07.910 --> 00:01:14.560
from the WP dot editor object.

16
00:01:14.770 --> 00:01:21.940
This is a component just like any other component we can use it J.S. X name back inside the edit function

17
00:01:22.080 --> 00:01:28.210
will want to return this component that may seem strange but just keep following along and it'll make

18
00:01:28.210 --> 00:01:29.830
sense soon enough.

19
00:01:29.830 --> 00:01:36.090
Here's the problem though we were already returning some JSA X code we need to be able to return.

20
00:01:36.100 --> 00:01:38.440
The inspector controls component.

21
00:01:38.440 --> 00:01:43.850
Luckily there is a way to return multiple components instead of just returning the block.

22
00:01:43.870 --> 00:01:48.650
We're going to return an array.

23
00:01:48.780 --> 00:01:52.640
This is a little tricky with react as I mentioned previously.

24
00:01:52.680 --> 00:01:55.230
You can't have multiple root elements.

25
00:01:55.260 --> 00:01:58.050
This will cause react to give you errors.

26
00:01:58.050 --> 00:02:05.160
However you can return array of J six components allowing you to have multiple root elements right before

27
00:02:05.160 --> 00:02:05.790
our block.

28
00:02:05.910 --> 00:02:12.630
I'm going to use the inspector controls component.

29
00:02:12.750 --> 00:02:14.160
I'm going to input the text.

30
00:02:14.160 --> 00:02:14.750
Hello.

31
00:02:14.760 --> 00:02:22.460
In between these two tags you'll notice that I'm not wrapping this around with a pair of parentheses.

32
00:02:22.550 --> 00:02:27.230
If we're returning an array of components then we can omit the parentheses.

33
00:02:27.260 --> 00:02:30.440
I'm going to remove the parentheses from our block.

34
00:02:30.560 --> 00:02:33.900
I'll break this down in a moment but let's see if this works.

35
00:02:34.110 --> 00:02:39.070
D into the blocks directory and run the NPM run Dev command

36
00:02:43.230 --> 00:02:46.830
next go to the recipe post we created previously.

37
00:02:47.130 --> 00:02:49.650
You should see everything working normally.

38
00:02:49.680 --> 00:02:53.400
If you look inside the console then you should see no errors.

39
00:02:53.400 --> 00:02:56.730
I'm going to select the recipe block we have here.

40
00:02:56.730 --> 00:02:59.070
It should work without any errors.

41
00:02:59.100 --> 00:03:03.710
If you look inside the inspector controls you'll see the hello message we input it.

42
00:03:06.040 --> 00:03:09.190
Let's break down what's going on back inside the script.

43
00:03:09.220 --> 00:03:12.100
We're returning an array of components.

44
00:03:12.130 --> 00:03:17.890
This will tell WordPress that you have multiple components for it to use it will scan the array and

45
00:03:17.890 --> 00:03:20.860
look for a component named Inspector controls.

46
00:03:20.860 --> 00:03:25.530
If it finds this component then anything inside it will be rendered on the sidebar.

47
00:03:25.540 --> 00:03:29.650
Anything else will be rendered as the block on the content portion itself.

48
00:03:29.650 --> 00:03:34.050
With that said you don't have to arrange this in any particular order.

49
00:03:34.090 --> 00:03:39.430
You can put the block itself as the first item in the array whatever you prefer.

50
00:03:39.760 --> 00:03:45.670
In order to use the inspector controls you have to grab it from the WP or enter object like we're doing

51
00:03:45.670 --> 00:03:46.600
above.

52
00:03:46.600 --> 00:03:50.000
WordPress provides this component for you out of the box.

53
00:03:50.140 --> 00:03:55.300
It will take care of placing your content in the correct area and we'll make sure it only displays if

54
00:03:55.300 --> 00:03:57.460
the user selects your block.

55
00:03:57.520 --> 00:04:01.360
Right now if we look at our UI it's not really appealing.

56
00:04:01.360 --> 00:04:08.410
If you look below the title an icon you'll see that they see SS class field is under the advanced box.

57
00:04:08.410 --> 00:04:10.270
This is what's called a panel.

58
00:04:10.270 --> 00:04:14.170
Panels are toggle making them great for organization.

59
00:04:14.260 --> 00:04:17.840
WordPress allows us to create our own panels easily.

60
00:04:17.860 --> 00:04:19.580
Let's look at how that's done.

61
00:04:19.600 --> 00:04:22.240
I want you to open the Gutenberg handbook.

62
00:04:22.240 --> 00:04:25.300
You should have bookmarked it earlier on the sidebar.

63
00:04:25.300 --> 00:04:30.640
Click on the components link WordPress states the following about this section.

64
00:04:30.640 --> 00:04:36.670
This package is includes a library of generic WordPress components to be used for creating common UI

65
00:04:36.670 --> 00:04:40.880
elements shared between screens and features of the WordPress dashboard.

66
00:04:40.990 --> 00:04:46.250
The components found here can be used to create our own UI under this section.

67
00:04:46.240 --> 00:04:49.990
You'll find loads of components we can use in our plugin.

68
00:04:49.990 --> 00:04:55.330
One important thing I want to note is that some of the components here are not exclusive to the Gutenberg

69
00:04:55.330 --> 00:04:56.200
editor.

70
00:04:56.290 --> 00:05:00.240
A lot of these are generic components that can be used outside of Gutenberg.

71
00:05:00.250 --> 00:05:08.020
If you wish components that are placed inside the components section are general components.

72
00:05:08.080 --> 00:05:14.410
These components can be used anywhere in the Gutenberg UI they can be inside the sidebar or in the top

73
00:05:14.410 --> 00:05:15.070
bar.

74
00:05:15.130 --> 00:05:20.950
This isn't completely confirmed but there's a possibility that the whole WordPress admin dashboard will

75
00:05:20.950 --> 00:05:27.700
be converted into a react app to prepare for that WordPress has gone ahead and prepared some generic

76
00:05:27.700 --> 00:05:35.380
components like the ones you'll find in this section if you scroll down just a little further click

77
00:05:35.380 --> 00:05:37.390
on the panel component.

78
00:05:37.390 --> 00:05:41.030
This page will go over on how to use the panel components.

79
00:05:41.170 --> 00:05:47.890
Feel free to read up on it to learn more about panels let's begin using the components listed here to

80
00:05:47.890 --> 00:05:50.920
use a component from the components section.

81
00:05:50.920 --> 00:05:58.060
We'll have to access them from the WP components object just like last time I want to d structure the

82
00:05:58.090 --> 00:06:01.670
WP components object to make our code readable.

83
00:06:01.840 --> 00:06:10.980
I'm going to grab two things which are at the panel body and panel row components the panel body component

84
00:06:11.010 --> 00:06:17.010
will take care of creating the toggle panel you see in the sidebar the panel Rho component will take

85
00:06:17.010 --> 00:06:20.210
care of spacing the content within the body of the panel.

86
00:06:20.310 --> 00:06:26.010
This component is optional but the spacing will help with organization and readability.

87
00:06:26.040 --> 00:06:31.770
Now that we're importing these components let's go back down to the inspector controls component and

88
00:06:31.830 --> 00:06:37.800
add these in like so.

89
00:06:37.970 --> 00:06:44.540
The panel body component has an attribute called title which we can use to assign a title to the panel.

90
00:06:44.540 --> 00:06:48.590
I'm going to set this to basics and make it translatable as well.

91
00:06:51.810 --> 00:06:56.500
Save your changes and refresh the page if you select the recipe block.

92
00:06:56.510 --> 00:06:58.340
Then you'll see the panel appear.

93
00:06:58.520 --> 00:07:00.670
It should have the title basics.

94
00:07:00.740 --> 00:07:02.750
You can even toggle this panel.

95
00:07:02.750 --> 00:07:04.070
This is great.

96
00:07:04.160 --> 00:07:06.290
We did very little to make this work.

97
00:07:06.320 --> 00:07:12.530
Now that we have a panel let's add the input fields so that the user can manipulate the block back inside

98
00:07:12.530 --> 00:07:13.350
the editor.

99
00:07:13.370 --> 00:07:20.690
I'm going to change the text inside the panel row and add a paragraph tag the text inside will be configure

100
00:07:20.690 --> 00:07:22.670
the contents of the block here.

101
00:07:22.760 --> 00:07:24.560
It will also be translatable

102
00:07:29.510 --> 00:07:31.580
below the panel row component.

103
00:07:31.580 --> 00:07:33.440
We're going to add our text fields.

104
00:07:33.500 --> 00:07:38.570
You may be wondering why aren't we going to add the fields inside the panel row component.

105
00:07:38.570 --> 00:07:40.400
Well to better explain why.

106
00:07:40.400 --> 00:07:44.690
First we have to understand how form fields work in Gutenberg.

107
00:07:44.690 --> 00:07:47.310
There are two ways to create form fields.

108
00:07:47.330 --> 00:07:51.500
We can create them manually like we would for any typical female form.

109
00:07:51.920 --> 00:07:55.470
Alternatively we can let WordPress create the fields.

110
00:07:55.490 --> 00:07:57.070
There is no wrong answer here.

111
00:07:57.110 --> 00:08:00.230
However one way is easier than the other.

112
00:08:00.260 --> 00:08:06.870
It may not look like it but WordPress handles a lot for us behind the scenes to better understand this.

113
00:08:06.890 --> 00:08:12.950
Let's look at one of the fields we'll be using go back to the handbook and under the component section

114
00:08:13.160 --> 00:08:15.260
click the text control component

115
00:08:18.570 --> 00:08:25.200
one of the components we'll be using is called text control the text control component is pretty straightforward

116
00:08:25.620 --> 00:08:28.710
you just added in and define a few properties.

117
00:08:28.710 --> 00:08:30.250
Let's dive even deeper.

118
00:08:30.300 --> 00:08:32.920
I want you to open the get hub repository.

119
00:08:33.090 --> 00:08:39.180
Just like last time you'll be able to find the components section inside the package directory.

120
00:08:39.180 --> 00:08:42.690
All components can be found inside the source directory.

121
00:08:42.720 --> 00:08:45.840
Let's quickly open the text control directory.

122
00:08:47.930 --> 00:08:54.620
Most components start at the next dot J.S. file you may see more files and other components but that's

123
00:08:54.620 --> 00:08:58.640
usually the case for more complex things inside this file.

124
00:08:58.640 --> 00:09:04.110
There are quite a few things going on but I want our main focus to be on the input field.

125
00:09:04.400 --> 00:09:09.510
As you can see all WordPress is doing is creating a regular input element.

126
00:09:09.530 --> 00:09:14.510
This may not seem like much but all this here provides a better user experience.

127
00:09:14.510 --> 00:09:20.000
Let's use this component to see what exactly is generated back inside the editor.

128
00:09:20.000 --> 00:09:26.030
We're going to need to grab the text control component since this is INSIDE THE COMPONENTS folder.

129
00:09:26.030 --> 00:09:30.360
It's safe to assume it's inside the WP components object.

130
00:09:30.530 --> 00:09:37.040
If you're not sure where something is then feel free to long the WP object or read the documentation

131
00:09:37.810 --> 00:09:38.340
inside.

132
00:09:38.360 --> 00:09:47.690
The restructuring of the WP dot components object grab the text control component inside the inspector

133
00:09:47.690 --> 00:09:48.920
control component.

134
00:09:48.920 --> 00:09:53.520
We're going to add the text control component.

135
00:09:53.550 --> 00:09:56.240
There are a couple of required attributes.

136
00:09:56.250 --> 00:09:58.620
The first is the label attribute.

137
00:09:58.710 --> 00:10:01.620
Set this to ingredients and make it translatable

138
00:10:06.850 --> 00:10:09.440
then we're going to set the help attribute.

139
00:10:09.520 --> 00:10:15.220
This is optional but if you have it then WordPress will add text below the field with additional instructions

140
00:10:15.220 --> 00:10:17.060
on how to use this field.

141
00:10:17.110 --> 00:10:18.730
The value for this will be.

142
00:10:18.790 --> 00:10:22.670
Example tomatoes lettuce all of oil etc..

143
00:10:27.770 --> 00:10:30.300
Up next is the value action view.

144
00:10:30.380 --> 00:10:32.620
This will be the value of the field.

145
00:10:32.660 --> 00:10:36.210
This should be dynamic but we're going to make it static for now.

146
00:10:36.260 --> 00:10:42.630
We haven't talked about attributes yet so we're going to set this to test.

147
00:10:42.650 --> 00:10:45.650
Lastly we have the on change attribute.

148
00:10:45.710 --> 00:10:51.050
You may be used to listening for events in javascript but this is already javascript since that's the

149
00:10:51.050 --> 00:10:56.080
case then J.S. sex provides a way to listen for events by using attributes.

150
00:10:56.180 --> 00:11:00.580
Most events start with the word on followed by the name of the event.

151
00:11:00.620 --> 00:11:07.130
In this case it would be when the input field is updated if it is then the value inside will be triggered.

152
00:11:07.130 --> 00:11:10.820
Ninety nine percent of the time you'll want to run a function.

153
00:11:10.850 --> 00:11:14.240
I'm going to pass an arrow function that will accept in a value

154
00:11:18.990 --> 00:11:21.670
the value will be referred to as new Val.

155
00:11:22.020 --> 00:11:31.630
Then I'm going to console dot log the value the new value variable will be whatever the user input it.

156
00:11:31.690 --> 00:11:36.940
I know what may not make complete sense but react gives us the opportunity to work with the new value

157
00:11:36.970 --> 00:11:38.280
before we save it.

158
00:11:38.320 --> 00:11:43.550
We won't be saving it in this lecture we just want to log it to see if it works.

159
00:11:43.720 --> 00:11:48.820
Save your changes and refresh the Gutenberg Ed. everything should be working fine.

160
00:11:48.820 --> 00:11:51.190
Make sure your console is opened.

161
00:11:51.190 --> 00:11:57.750
Select the recipe block you should see the input field up here before we go over what's generated.

162
00:11:57.760 --> 00:12:00.820
Let's see if the on changed function is working.

163
00:12:00.820 --> 00:12:02.370
Input anything you like.

164
00:12:02.530 --> 00:12:07.360
You should see the value appear inside the console.

165
00:12:07.570 --> 00:12:12.600
All right now that we've confirmed that the function is working let's see what's generated.

166
00:12:12.760 --> 00:12:15.080
I want you to inspect the input field.

167
00:12:15.160 --> 00:12:21.490
First things first the panel row component we use created this div tag with the class component panel

168
00:12:21.490 --> 00:12:22.320
row.

169
00:12:22.390 --> 00:12:28.560
If you look inside this you'll see the paragraph tag we created earlier right below this.

170
00:12:28.570 --> 00:12:35.020
We should have the input field created by using the text control component WordPress generated some

171
00:12:35.020 --> 00:12:43.150
extra HCM l the input itself will be inside the div tag with the class component base control all these

172
00:12:43.150 --> 00:12:46.470
elements and classes bring structure to our input.

173
00:12:46.510 --> 00:12:50.710
If you look at the input field you'll see that it matches in design as well.

174
00:12:50.710 --> 00:12:56.140
We could have created this ourselves but why do that when WordPress takes care of it for us.

175
00:12:56.140 --> 00:13:00.040
This makes our code look cleaner and easier to manage.

176
00:13:00.040 --> 00:13:03.040
Another thing worth mentioning is the accessibility.

177
00:13:03.220 --> 00:13:07.150
The Gutenberg Project has put emphasis on accessibility.

178
00:13:07.240 --> 00:13:11.400
If you look at the input field you'll find an Ashby called Aria.

179
00:13:11.410 --> 00:13:15.580
These attributes help people with disabilities use your component.

180
00:13:15.730 --> 00:13:20.250
Accessibility is something that shouldn't be overlooked in a future lecture.

181
00:13:20.260 --> 00:13:25.980
I go over accessibility a little more in-depth but for now we'll let WordPress handle it.

182
00:13:26.020 --> 00:13:31.480
Hopefully I convinced you to use the components WordPress provides rather than creating this on your

183
00:13:31.480 --> 00:13:32.570
own.

184
00:13:32.590 --> 00:13:36.470
Let's go back to the editor and create fields for the other options.

185
00:13:36.490 --> 00:13:42.910
I'm going to copy and paste this two more times I'll update each one for the cooking time and utensils

186
00:13:54.520 --> 00:13:57.460
pause the video so you can have what I have.

187
00:13:57.460 --> 00:14:04.120
We're going to need two more fields for the cooking experience and meal type options rather than using

188
00:14:04.120 --> 00:14:05.180
an input field.

189
00:14:05.200 --> 00:14:07.920
We're going to use a dropdown field.

190
00:14:08.050 --> 00:14:09.860
Let's go back to the handbook.

191
00:14:09.880 --> 00:14:17.640
The name of the component will be using this time is called Select control here's what WordPress has

192
00:14:17.640 --> 00:14:18.770
to say.

193
00:14:18.870 --> 00:14:25.350
Select control component is used to generate select input fields just by reading that we know that this

194
00:14:25.350 --> 00:14:27.940
is indeed the component we want to use.

195
00:14:28.050 --> 00:14:29.370
Just to double check.

196
00:14:29.430 --> 00:14:33.540
Let's view the indexed J.S. file in the get Hub Repository.

197
00:14:33.540 --> 00:14:40.620
You can find this inside the packages slash components slash the source slash select control directory

198
00:14:42.920 --> 00:14:49.660
if you look inside the code you'll find the element generated is a select element with the options inside.

199
00:14:49.690 --> 00:14:52.820
All right let's begin back inside the scripts.

200
00:14:52.820 --> 00:14:58.670
We need to d structure these select control component from the WP components object

201
00:15:02.050 --> 00:15:04.770
then under the input text fields.

202
00:15:04.870 --> 00:15:06.820
Use these select control component

203
00:15:10.800 --> 00:15:17.280
the label will be cooking experience and the help attribute will be how skilled should the reader be.

204
00:15:17.310 --> 00:15:18.810
Both will be translatable

205
00:15:27.360 --> 00:15:29.440
next is the value attribute.

206
00:15:29.580 --> 00:15:32.220
Just like last time we'll make this static.

207
00:15:32.220 --> 00:15:36.260
I'm going to set it to beginner.

208
00:15:36.390 --> 00:15:39.090
Next we have the options attribute.

209
00:15:39.210 --> 00:15:41.880
This will be set to an array of all the values.

210
00:15:42.000 --> 00:15:44.010
Each value should be an object.

211
00:15:44.010 --> 00:15:55.190
Each object will need two properties called value end label.

212
00:15:55.240 --> 00:15:59.520
I'm going to set both two beginner.

213
00:15:59.740 --> 00:16:03.760
I'm going to add two more objects with the values intermediate and expert

214
00:16:08.820 --> 00:16:12.870
this array will be used to generate the options for the select field.

215
00:16:12.990 --> 00:16:18.960
The value will be used for the value attribute and the label should be human readable text.

216
00:16:19.020 --> 00:16:23.540
The very last attribute will need to set is the on change attribute.

217
00:16:25.790 --> 00:16:29.450
Once again this will be an arrow function where we'll log the new value

218
00:16:35.500 --> 00:16:38.980
I'm now going to do the same for the meal type option.

219
00:16:38.980 --> 00:16:43.210
This time the values for the options will be breakfast lunch and dinner

220
00:16:53.530 --> 00:16:59.790
paused the video if you need to have what I have save your changes and refresh the page one last time.

221
00:16:59.860 --> 00:17:05.290
If you select the recipe block then you'll find the select input fields appear.

222
00:17:05.320 --> 00:17:08.560
These will not work but that's to be expected.

223
00:17:08.650 --> 00:17:12.460
If you were to change the value then you'll see that the value is longer.

224
00:17:12.730 --> 00:17:16.450
However the value inside the dropdown does not change.

225
00:17:16.450 --> 00:17:18.610
This is because the value is static.

226
00:17:18.660 --> 00:17:21.940
We will be making this dynamic in a future lecture.

227
00:17:21.940 --> 00:17:25.240
If you have what I have then congrats we're finished.

228
00:17:25.240 --> 00:17:29.370
We went through a lot just to get this far but it was well worth it.

229
00:17:29.380 --> 00:17:32.270
We have a consistent and clean you want.

230
00:17:32.440 --> 00:17:37.330
Feel free to explore the options and values documented in the documentation.

231
00:17:37.330 --> 00:17:40.900
Check out the code change the values create more fields.

232
00:17:40.990 --> 00:17:46.870
Better yet check out the other components we'll be going over the other components but feed into your

233
00:17:46.870 --> 00:17:50.770
curiosity and explore the other components before continuing.

234
00:17:50.770 --> 00:17:53.620
Once you're ready I'll see you in the next lecture.
