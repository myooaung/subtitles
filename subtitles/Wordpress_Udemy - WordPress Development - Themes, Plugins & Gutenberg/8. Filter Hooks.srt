1
00:00:07,590 --> 00:00:10,620
Throughout this course we've been using action hooks.

2
00:00:10,620 --> 00:00:16,110
There is another type of hook called filter hooks filter hooks are similar to action hooks except for

3
00:00:16,110 --> 00:00:21,570
one thing they are passive value and you're expected to return a value in most cases.

4
00:00:21,570 --> 00:00:24,960
It's a modified version of the past in value.

5
00:00:24,960 --> 00:00:27,350
We're going to be using our first filter hook.

6
00:00:27,360 --> 00:00:30,840
So get ready Let's view the recipe posts on the front end.

7
00:00:30,990 --> 00:00:33,390
You may receive this forum for error.

8
00:00:33,390 --> 00:00:36,750
Initially you may think this is strange and it is.

9
00:00:36,780 --> 00:00:37,790
We did everything right.

10
00:00:37,800 --> 00:00:40,530
So why are we getting a forum for here.

11
00:00:40,530 --> 00:00:45,160
Well WordPress is not aware that we have updated the permanent structure.

12
00:00:45,240 --> 00:00:50,970
What I mean by this is that when you create a post type you will receive a special yourself format for

13
00:00:50,970 --> 00:00:52,170
your post type.

14
00:00:52,170 --> 00:00:56,560
In our case it would be recipe followed by the slug over the post.

15
00:00:56,580 --> 00:00:59,510
Take a look at the URL bar to see this new format.

16
00:00:59,520 --> 00:01:01,700
There are two ways we can fix this.

17
00:01:01,710 --> 00:01:05,160
There is the manual way which is updating the perma link structure.

18
00:01:05,160 --> 00:01:09,230
And then there is the developer way by flushing the rewrite rules.

19
00:01:09,250 --> 00:01:14,790
I will be doing this the first week because it'll be a lot faster to do so I will definitely show you

20
00:01:14,790 --> 00:01:21,420
how to flush rules through BHP but that deserves a lecture of its own for now updating the structure

21
00:01:21,420 --> 00:01:22,720
will suffice.

22
00:01:22,740 --> 00:01:29,280
Go to the admin dashboard and under settings perma links just update the settings once you don't need

23
00:01:29,280 --> 00:01:30,630
to make any changes.

24
00:01:30,660 --> 00:01:36,840
Now you can go to the recipe posts and everything should display just fine as you can see the post is

25
00:01:36,840 --> 00:01:39,110
displaying just like any other post.

26
00:01:39,120 --> 00:01:41,700
The only thing missing is the recipe data.

27
00:01:41,700 --> 00:01:45,350
Go back to the main plugin file so we can begin this process.

28
00:01:45,360 --> 00:01:47,660
There are a couple ways we can go about this.

29
00:01:47,700 --> 00:01:54,000
The recommended way is by using a filter hook filter hooks can be used by using the add filter function

30
00:01:56,280 --> 00:02:01,550
this function works exactly the same as the add action function for our post.

31
00:02:01,560 --> 00:02:10,560
I want to add the recipe data right above the content so I want to use a hook called the content this

32
00:02:10,560 --> 00:02:14,880
hook is triggered when the content of a post or page is being displayed.

33
00:02:14,880 --> 00:02:23,250
The name of the function I want to run is called Our filter recipe content let's create a file inside

34
00:02:23,250 --> 00:02:29,350
the process folder called filter dash content dot p p and define the function here.

35
00:02:29,370 --> 00:02:31,380
Make sure to include it from the plugin file

36
00:02:36,100 --> 00:02:42,550
unlike action hooks filter hooks will always pass and something for you to filter the content hook we

37
00:02:42,560 --> 00:02:44,810
passed in the contents of the post.

38
00:02:44,990 --> 00:02:48,800
We'll call this argument content inside the function.

39
00:02:48,800 --> 00:02:51,740
You should always return the content.

40
00:02:51,830 --> 00:02:54,530
Let's see what happens if you don't return anything.

41
00:02:54,530 --> 00:02:57,930
Refresh the post and you'll see the content disappears.

42
00:02:58,220 --> 00:03:07,400
Let's return the content from the post if you go back to the page then you should see the content reappear.

43
00:03:07,400 --> 00:03:09,930
This function will apply to all post types.

44
00:03:10,010 --> 00:03:13,200
We need to make sure this only applies to recipes.

45
00:03:13,220 --> 00:03:17,140
We also need to check if this is a single post and not an excerpt.

46
00:03:17,180 --> 00:03:24,860
We're going to check both cases by using one function called is singular this function will check if

47
00:03:24,860 --> 00:03:26,370
this is a single post.

48
00:03:26,390 --> 00:03:32,470
We can also pass this function a post type the post type we want to check is for recipe.

49
00:03:32,600 --> 00:03:36,530
If this function returns false then we'll just return the content

50
00:03:39,050 --> 00:03:42,390
otherwise we'll continue on with filtering the post.

51
00:03:42,530 --> 00:03:49,430
Let's create the H team L that will be used to display the recipe data create a file inside the process

52
00:03:49,430 --> 00:03:59,280
folder called recipe dash template dot P HP inside the assets slash extra folder you'll find a file

53
00:03:59,370 --> 00:04:02,490
named recipe dash template dot P HP.

54
00:04:02,490 --> 00:04:10,200
Copy and paste everything here to our HP template this is just a regular HMO.

55
00:04:10,230 --> 00:04:12,420
We have an unordered list.

56
00:04:12,420 --> 00:04:18,600
There is one thing you'll notice though we have all these capitalized words such as rates underscore

57
00:04:18,750 --> 00:04:20,590
ie 1 8 N.

58
00:04:20,760 --> 00:04:22,170
These are placeholders.

59
00:04:22,260 --> 00:04:28,260
You don't have to name them like this but I like to make them all caps so that they're easier to identify.

60
00:04:28,320 --> 00:04:34,020
We're going to grab this file and its contents and replace the place holders with our data.

61
00:04:34,020 --> 00:04:38,210
First things first let's grab the template from within the filter function.

62
00:04:38,220 --> 00:04:42,050
I'm going to create a variable named recipe on HCM out.

63
00:04:42,540 --> 00:04:50,520
I will assign it to the value returned by the function file get contents the file I want to get is the

64
00:04:50,520 --> 00:04:54,280
template recipe dash template dot P HP.

65
00:04:54,330 --> 00:04:59,320
I'm also going to set the second parameter to true.

66
00:04:59,420 --> 00:05:04,640
This will make the function work just like the include function to check if this is working.

67
00:05:04,640 --> 00:05:13,700
I'm going to return the recipe HCM El variable and concatenate the content let's refresh the page and

68
00:05:13,700 --> 00:05:16,780
you should now see the template right before the content.

69
00:05:16,790 --> 00:05:21,660
Now all we have to do is replace these place holders with the recipe data.

70
00:05:21,740 --> 00:05:25,400
First we have to grab the metadata just like last time.

71
00:05:25,430 --> 00:05:30,550
We can use the get post meta function however first we need the post I.D..

72
00:05:30,860 --> 00:05:38,060
Luckily for us WordPress will create a variable name to post this variable is a global variable.

73
00:05:38,060 --> 00:05:41,000
Now we have access to all this posts properties.

74
00:05:41,330 --> 00:05:49,960
Let's create the recipe data variable and grab the metadata like so from here we can use a function

75
00:05:49,990 --> 00:05:59,040
called S T TR replace we're basically going to use this function to replace the tax with a new template.

76
00:05:59,080 --> 00:06:02,420
The first parameter is the name of the string you want to replace.

77
00:06:02,500 --> 00:06:08,860
In this case we want to replace the rating placeholder with the text rating.

78
00:06:08,990 --> 00:06:12,130
Make sure that the string is translation ready.

79
00:06:12,140 --> 00:06:20,520
The third parameter is a string that will be searched which is the recipe a male variable.

80
00:06:20,540 --> 00:06:22,200
It's as simple as that.

81
00:06:22,280 --> 00:06:24,520
You should now have something similar to what I have.

82
00:06:24,920 --> 00:06:27,910
Let's refresh the page and you'll now see our data.

83
00:06:27,920 --> 00:06:30,360
This is the power of filter hooks.

84
00:06:30,380 --> 00:06:36,680
They're similar to action hooks except you will receive data to filter and be expected to return that

85
00:06:36,680 --> 00:06:38,120
filter data.

86
00:06:38,150 --> 00:06:41,100
We kept it simple by just translating the text.

87
00:06:41,210 --> 00:06:43,710
We'll be adding the rating itself soon enough.

88
00:06:43,970 --> 00:06:49,380
Before I end this lecture I want to talk about what this I 18 in phrase you see here means.

89
00:06:49,390 --> 00:06:52,630
I 18 it simply means internationalisation.

90
00:06:52,730 --> 00:06:58,940
The name comes from the first and last letters of internationalization with 18 being the number of letters

91
00:06:58,940 --> 00:07:00,750
between these two letters.

92
00:07:00,860 --> 00:07:06,530
To reiterate what's going on all I'm doing is grabbing the recipe data and the HCM El template.

93
00:07:06,650 --> 00:07:09,030
The H2 email template is pretty basic.

94
00:07:09,140 --> 00:07:12,280
It just contains place holders for our data.

95
00:07:12,290 --> 00:07:15,480
This makes it so that it's always dynamic and fresh.

96
00:07:15,530 --> 00:07:21,200
Then we just replace the place holders with the data using the function as TR replace.

97
00:07:21,200 --> 00:07:25,550
Then we just return the template with the modified data right before the content.
