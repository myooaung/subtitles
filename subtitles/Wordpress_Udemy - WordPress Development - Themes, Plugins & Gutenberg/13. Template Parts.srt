1
00:00:07,640 --> 00:00:13,840
After we pasted in the code into the loop I started to notice that our code is becoming really nested.

2
00:00:13,880 --> 00:00:20,360
Not only that I know for a fact that this part of the template is reusable in future lectures we'll

3
00:00:20,360 --> 00:00:23,620
be reusing this part of the template multiple times.

4
00:00:23,660 --> 00:00:26,460
Therefore I want this to be reusable.

5
00:00:26,480 --> 00:00:33,080
Luckily WordPress provides a solution for this by providing something called template parts template

6
00:00:33,110 --> 00:00:38,690
parts are reusable templates that we can add into any template we want by themselves.

7
00:00:38,750 --> 00:00:40,030
They don't do anything.

8
00:00:40,160 --> 00:00:48,850
A template parts are meant to be used inside another template in the resource section of this lecture.

9
00:00:48,880 --> 00:00:51,970
I provide a link to the function get template part.

10
00:00:52,030 --> 00:00:55,570
This function will load a template part into your template.

11
00:00:55,630 --> 00:00:59,200
It's similar to the get header and get footer functions.

12
00:00:59,200 --> 00:01:03,730
The only difference is that you can give your template parts any name you want.

13
00:01:03,730 --> 00:01:09,370
If we take a look at the parameters you'll see there's only to the first parameter is the slug for the

14
00:01:09,370 --> 00:01:14,960
generic template and the second is for the specialized template.

15
00:01:15,000 --> 00:01:19,320
What does WordPress mean by generic and specialized templates.

16
00:01:19,320 --> 00:01:21,930
This function tends to confuse some developers.

17
00:01:21,930 --> 00:01:24,420
So let me break down how it works.

18
00:01:24,420 --> 00:01:29,460
This function will load a template but it performs a lot of checks before it loads the template you

19
00:01:29,460 --> 00:01:30,500
specify.

20
00:01:30,510 --> 00:01:36,120
Here is the simplest example of the function being used in order to load a template.

21
00:01:36,150 --> 00:01:39,770
You need to specify the path relative to the theme folder.

22
00:01:39,840 --> 00:01:46,680
In this case WordPress will load a template named content dot P. HP pretty simple so far.

23
00:01:46,770 --> 00:01:50,050
Let's take a look at the second parameter being used now.

24
00:01:50,220 --> 00:01:55,080
In this example we're passing in the phrase foo for the second parameter.

25
00:01:55,080 --> 00:01:58,320
WordPress will load either one of two templates.

26
00:01:58,320 --> 00:02:06,480
First it will combine both content and food together into the file name content dash food up HP.

27
00:02:06,540 --> 00:02:12,630
If that template doesn't exist then it'll search for the content dot P. HP template and load that instead

28
00:02:13,140 --> 00:02:15,510
you can think of this as a backup.

29
00:02:15,510 --> 00:02:18,900
At this point you may be thinking why don't we just do this.

30
00:02:19,020 --> 00:02:22,800
Why don't we just use the first parameter exclusively.

31
00:02:22,800 --> 00:02:25,860
You may be tempted to do this for the most part.

32
00:02:25,890 --> 00:02:27,480
This is completely valid.

33
00:02:27,750 --> 00:02:30,060
However I don't recommend it.

34
00:02:30,120 --> 00:02:36,000
The purpose of the second parameter is to give yourself a backup template just in case WordPress is

35
00:02:36,060 --> 00:02:38,280
unable to find your first choice.

36
00:02:38,310 --> 00:02:43,920
The only time you don't want to use the second parameter is when you know for a fact that you don't

37
00:02:43,920 --> 00:02:48,010
need a backup template.

38
00:02:48,050 --> 00:02:53,210
I'm gonna go back to my editor and I'm going to create a new folder called partials.

39
00:02:53,220 --> 00:02:56,660
This is where we'll be storing all our template parts.

40
00:02:56,660 --> 00:03:03,050
You can name this folder whenever you want partials is just a fancy word for parts of a template.

41
00:03:03,260 --> 00:03:09,530
Sometimes referred to as template parts or views by other developers inside this folder.

42
00:03:09,560 --> 00:03:13,010
I'm going to create another folder called Post.

43
00:03:13,010 --> 00:03:16,790
This is where will store template parts related to posts.

44
00:03:16,790 --> 00:03:26,990
Lastly I'm going to create a file named content dash excerpt up HP once again you can name this whatever

45
00:03:26,990 --> 00:03:31,050
you want but it should accurately describe what's inside.

46
00:03:31,070 --> 00:03:48,520
I'm going to cut and paste the HP email code into this template like so.

47
00:03:48,680 --> 00:03:51,650
Now we have the excerpt in its own file.

48
00:03:51,650 --> 00:03:58,700
All we need to do now is load it inside the loop right after the post function call the function get

49
00:03:58,700 --> 00:03:59,830
template part.

50
00:04:00,110 --> 00:04:04,160
The path you have to pass it must be relative to the theme folder.

51
00:04:04,160 --> 00:04:08,550
This function basically does what the required function does.

52
00:04:08,570 --> 00:04:14,420
You may be thinking why don't we just use the required function that well it's because this function

53
00:04:14,420 --> 00:04:19,670
does a whole lot of checks for you and makes sure it'll grab the template relative to the current install

54
00:04:19,670 --> 00:04:20,850
directory.

55
00:04:20,870 --> 00:04:25,430
Keep in mind that you can use this function inside of template parts.

56
00:04:25,430 --> 00:04:30,200
So trying to keep track of where you are in your folder structure can get tricky.

57
00:04:30,200 --> 00:04:34,370
This function eases that by always pointing to the theme folder.

58
00:04:34,370 --> 00:04:38,660
All you have to do is point the path relative to the current theme.

59
00:04:38,690 --> 00:04:43,670
The great thing about this function is that you don't have to worry where you are in your template.

60
00:04:43,670 --> 00:04:49,490
If you're inside a nested folder structure then the path you input here will always be the same.

61
00:04:49,490 --> 00:04:56,000
This is because it'll append the path you pass in onto the directory of the current activated theme.

62
00:04:56,120 --> 00:05:01,660
The path to our file is partials slash post slash content Dash.

63
00:05:01,700 --> 00:05:09,230
Excerpt you do not need to add the extension as it's added for you already.

64
00:05:09,240 --> 00:05:14,790
Let's check to see if this works and then we'll explore this function a bit more after refreshing the

65
00:05:14,790 --> 00:05:15,390
page.

66
00:05:15,480 --> 00:05:19,090
You should see the static blog post appearing a few times.

67
00:05:19,140 --> 00:05:21,530
This is exactly what we wanted.

68
00:05:21,540 --> 00:05:25,600
Now let's go back and examine the two parameters for this function.

69
00:05:25,620 --> 00:05:29,450
I'm going to make a copy of this function and make one small change.

70
00:05:29,550 --> 00:05:36,300
I'm going to move the word excerpt into the second parameter like so.

71
00:05:36,410 --> 00:05:39,960
This is also a valid way to use this function.

72
00:05:40,010 --> 00:05:44,500
Earlier I told you about General and specialized templates.

73
00:05:44,510 --> 00:05:51,080
This function provides a way to display a default template in case a certain template is unavailable.

74
00:05:51,080 --> 00:05:53,620
Let's examine the first function first.

75
00:05:53,690 --> 00:06:00,110
I'm going to add a comment above the template that will be loaded when this function runs is the content

76
00:06:00,170 --> 00:06:00,660
Dash.

77
00:06:00,710 --> 00:06:03,440
Excerpt BHP template file.

78
00:06:03,440 --> 00:06:09,680
However if WordPress doesn't find this file then nothing will be loaded for this second function.

79
00:06:09,680 --> 00:06:11,920
WordPress behaves a bit differently.

80
00:06:12,110 --> 00:06:15,450
WordPress will look for a template called content dash.

81
00:06:15,500 --> 00:06:20,600
Excerpt up HP WordPress will combine the two paths together.

82
00:06:20,600 --> 00:06:22,640
Separating them with a dash.

83
00:06:22,640 --> 00:06:24,990
This is similar to what we did above.

84
00:06:25,070 --> 00:06:27,400
However here's where things get different.

85
00:06:27,590 --> 00:06:34,730
If WordPress doesn't find the template content dash excerpt copy HP and WordPress will look for a template

86
00:06:34,760 --> 00:06:37,680
called content dot P HP.

87
00:06:37,840 --> 00:06:40,910
So basically whatever is in the first parameter.

88
00:06:41,200 --> 00:06:45,140
If WordPress doesn't find this template then nothing will be loaded.

89
00:06:45,160 --> 00:06:50,860
This behavior is really great as it allows you to create a fallback or default template.

90
00:06:50,860 --> 00:06:56,680
If we go back to the documentation you should now understand that WordPress describes the default or

91
00:06:56,680 --> 00:06:59,300
fallback template as the generic template.

92
00:06:59,650 --> 00:07:05,020
If you want to load a template for a particular situation then you can use the second parameter to your

93
00:07:05,020 --> 00:07:06,100
advantage.

94
00:07:06,100 --> 00:07:09,640
This is really great as you won't have to do the checks yourself.

95
00:07:09,640 --> 00:07:12,970
It's taken care of for you behind the scenes.

96
00:07:12,970 --> 00:07:17,230
A practical example would be loading a template for a specific month.

97
00:07:17,230 --> 00:07:23,710
For example let's say I had a function called Get month that returns the current month and this imaginary

98
00:07:23,710 --> 00:07:24,310
example.

99
00:07:24,340 --> 00:07:26,740
I'll have a template for the month Dec.

100
00:07:27,040 --> 00:07:32,150
I'll end up having a file named content dash Dec dot BHP.

101
00:07:32,260 --> 00:07:35,140
This will be the only template for this month.

102
00:07:35,230 --> 00:07:37,660
Any other month will not have a template.

103
00:07:37,690 --> 00:07:43,420
Therefore I would just let all the other months fall back to just content up BHP.

104
00:07:43,600 --> 00:07:45,460
That's just the basic example.

105
00:07:45,700 --> 00:07:48,060
That's up to you how you want to use this.

106
00:07:48,220 --> 00:07:54,940
Anyway I'm going to change this back to excerpt and comment it out.

107
00:07:54,980 --> 00:07:59,170
I don't plan on having multiple templates for the content dash excerpt.

108
00:07:59,210 --> 00:08:02,200
So this first line will do just fine in the next lecture.

109
00:08:02,210 --> 00:08:04,810
We'll make the content generated dynamic.
