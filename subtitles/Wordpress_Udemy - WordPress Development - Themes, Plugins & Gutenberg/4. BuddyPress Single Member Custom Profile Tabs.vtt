WEBVTT
1
00:00:07.230 --> 00:00:08.850
Here's what I want to do now.

2
00:00:09.000 --> 00:00:15.000
I want to add some profile tabs so other users can view any recipes a user has submitted.

3
00:00:15.000 --> 00:00:20.240
This will take some time to do so bear with me here in the resource section of this lecture.

4
00:00:20.250 --> 00:00:24.570
I provide a link to the BP core new nav item function.

5
00:00:24.600 --> 00:00:27.610
This function will add a tab to the profile page.

6
00:00:27.630 --> 00:00:32.480
This function can be found by going to documentation developer resources.

7
00:00:32.490 --> 00:00:36.360
This page gives more of a technical overview for Buddy press.

8
00:00:36.360 --> 00:00:38.910
You'll find a list of functions on the sidebar.

9
00:00:39.000 --> 00:00:41.280
One of them being the function I just showed you.

10
00:00:41.970 --> 00:00:47.360
Unfortunately this example usage doesn't really explain everything to get started using it.

11
00:00:47.370 --> 00:00:52.220
Don't worry though I'll explain the extra steps you need to take in order to use this function.

12
00:00:52.540 --> 00:00:56.970
Open the functions file and use an action hook called BP setup nav

13
00:01:01.290 --> 00:01:07.170
this hook isn't documented by Buddy press on their site but this is the hook you need to use to begin

14
00:01:07.170 --> 00:01:10.120
setting up navigation items on the profile page.

15
00:01:10.170 --> 00:01:14.880
The function I want to call will be named Jay you buddy Press profile taps

16
00:01:17.560 --> 00:01:18.460
as you may know.

17
00:01:18.520 --> 00:01:20.170
I like to stay organized.

18
00:01:20.230 --> 00:01:24.970
I'm going to create a folder inside the includes folder called Buddy press.

19
00:01:25.150 --> 00:01:31.030
This folder will include all functions and code related to extending and modifying buddy press.

20
00:01:31.030 --> 00:01:37.320
Inside this folder I'm going to create a file named profile dash tabs dot HP.

21
00:01:37.450 --> 00:01:39.700
I'm going to define the function here.

22
00:01:39.700 --> 00:01:42.760
Lastly I'm going to include it from the functions file

23
00:01:49.210 --> 00:01:50.440
inside this function.

24
00:01:50.470 --> 00:01:53.380
We're going to need the global BP variable.

25
00:01:53.380 --> 00:01:57.650
This global variable is defined and provided to you by Buddy press.

26
00:01:57.670 --> 00:02:02.400
The function we're about to call needs this variable so that it can function correctly.

27
00:02:02.530 --> 00:02:08.680
Next let's call the function BP core new nav item.

28
00:02:08.780 --> 00:02:11.780
It has one parameter which is an array of settings.

29
00:02:11.780 --> 00:02:15.700
The first setting is the name which will set to recipes.

30
00:02:15.740 --> 00:02:17.820
This will appear as the tab name.

31
00:02:17.840 --> 00:02:19.810
Make sure it's translatable as well.

32
00:02:22.420 --> 00:02:26.890
The next setting is the slug which is what will be appended to the member you are out.

33
00:02:27.310 --> 00:02:29.290
You'll see what this looks like in a minute.

34
00:02:29.290 --> 00:02:31.180
I'm going to set it to recipes

35
00:02:33.740 --> 00:02:40.580
the next setting is the position I'm going to set this to 100.

36
00:02:40.620 --> 00:02:43.550
This will determine the spot it appears in the menu.

37
00:02:43.710 --> 00:02:47.830
The lower the number the chances are it'll appear first inside the menu.

38
00:02:47.850 --> 00:02:51.800
I want this to appear laughed so I'm setting this to a high number.

39
00:02:52.110 --> 00:02:54.690
The next setting is the screen function.

40
00:02:54.780 --> 00:02:59.430
You can pass in the name of the function that will take care of displaying the content to the user when

41
00:02:59.430 --> 00:03:00.940
this page is loaded.

42
00:03:00.960 --> 00:03:03.060
I'm going to set this to J you.

43
00:03:03.090 --> 00:03:07.010
Recent recipes tab.

44
00:03:07.070 --> 00:03:10.230
Up next is the show for displayed user setting.

45
00:03:12.420 --> 00:03:18.360
This option will determine if the menu and Page will appear if the page belongs to the current logged

46
00:03:18.360 --> 00:03:19.480
in user.

47
00:03:19.530 --> 00:03:24.810
If a user is logged in and they're viewing someone else's profile should they be able to view this page.

48
00:03:24.840 --> 00:03:27.870
Or is it just for the page owners eyes.

49
00:03:27.870 --> 00:03:29.840
I'm going to set this to true.

50
00:03:29.910 --> 00:03:36.270
This will mean everyone will be able to see this page the next setting is the item CSX I.D. setting

51
00:03:36.270 --> 00:03:40.350
which is just the I.D. attribute you can use to style this menu item.

52
00:03:40.410 --> 00:03:43.680
I'm going to set this to J you user recipes

53
00:03:46.330 --> 00:03:53.550
the very last setting is the default sub nav slug that will set two recipes.

54
00:03:53.690 --> 00:03:56.080
This is for the sub menu navigation.

55
00:03:56.180 --> 00:03:59.980
There are usually two navigation menus for profiles.

56
00:04:00.080 --> 00:04:05.620
If you were to look at the profile page you'll see this main menu and under it is another menu which

57
00:04:05.620 --> 00:04:08.420
is relative to the active main menu item.

58
00:04:08.420 --> 00:04:14.500
If I were to change the item in the primary menu you'll notice the sub navigation changes accordingly.

59
00:04:14.510 --> 00:04:18.890
You'll also notice our recipes menu item appearing now.

60
00:04:18.890 --> 00:04:24.710
I don't plan on having a sub navigation menu so I've decided to set the sub menu to the same name as

61
00:04:24.710 --> 00:04:25.970
the primary menu.

62
00:04:26.180 --> 00:04:31.130
Buddy press will be able to determine that there's no need for a sub menu and that it doesn't have to

63
00:04:31.130 --> 00:04:35.160
worry about it before we move forward with displaying the content.

64
00:04:35.210 --> 00:04:38.540
I want to perform one check before we run this bit of code.

65
00:04:38.780 --> 00:04:44.270
The content I want to display will only display submitted recipe posts by the user.

66
00:04:44.270 --> 00:04:49.970
However there is a chance that the ad men will not even have this plugin installed or activated.

67
00:04:49.970 --> 00:04:53.820
If that's the case I don't want to display this menu item.

68
00:04:53.840 --> 00:04:56.180
There are three solutions we can use.

69
00:04:56.180 --> 00:05:00.520
The first solution is to use the function exists function like we've always done.

70
00:05:00.980 --> 00:05:05.500
However I want to take it a step further and check if the plugin is activated.

71
00:05:05.510 --> 00:05:11.330
The second solution would be to move all the buddy press code into the recipe plugin itself.

72
00:05:11.330 --> 00:05:16.760
While this might seem like a great solution and completely acceptable by Buddy press it does cause a

73
00:05:16.760 --> 00:05:20.790
problem with having the recipe plugin be usable with anything.

74
00:05:20.840 --> 00:05:24.500
Keep in mind that plug ins should be compatible with most things by default.

75
00:05:24.950 --> 00:05:29.640
I only want this functionality to be available with my Udemy theme and nothing else.

76
00:05:29.660 --> 00:05:32.620
That's why we're doing all this in the theme itself.

77
00:05:32.630 --> 00:05:36.230
The third solution would be to check if the plugin is activated.

78
00:05:36.230 --> 00:05:38.010
This is very simple to do.

79
00:05:38.030 --> 00:05:40.450
This is the solution we'll be using.

80
00:05:40.490 --> 00:05:49.620
First I'm going to create a new file inside the includes folder called utility dot HP this file will

81
00:05:49.620 --> 00:05:55.860
contain all our utility functions utility functions are just normal page functions that really can't

82
00:05:55.860 --> 00:05:59.880
do anything by themselves but make it easier to process data.

83
00:05:59.880 --> 00:06:02.880
Make sure to include this file from the main functions file

84
00:06:07.240 --> 00:06:08.810
before we define a function.

85
00:06:08.860 --> 00:06:14.890
I want to make sure if it's been defined beforehand I'm going to check if a function called J you plug

86
00:06:14.890 --> 00:06:19.750
in activated check exists if it doesn't.

87
00:06:19.780 --> 00:06:21.610
We'll define it ourselves.

88
00:06:21.610 --> 00:06:27.580
This function will accept the plug and file name which will be required to use this function inside

89
00:06:27.580 --> 00:06:28.420
this function.

90
00:06:28.420 --> 00:06:35.320
We need to require the file WP dash admin slash includes slash plug in dot P HP

91
00:06:41.040 --> 00:06:46.500
the function I want to use is not loaded on every page load we'll need to include it ourselves just

92
00:06:46.500 --> 00:06:56.100
in case then I'm going to return the value returned by B is plug in active function will pass him the

93
00:06:56.130 --> 00:06:57.570
plug and file name.

94
00:06:57.570 --> 00:07:02.870
This is a wordpress function that will check if the plugin we passed in is activated and installed.

95
00:07:03.000 --> 00:07:08.190
You can think of the function we just made as a sugar function because it's just a shorthand way of

96
00:07:08.190 --> 00:07:11.570
writing these two lines of code into one line.

97
00:07:11.580 --> 00:07:16.740
It's also common practice to check if certain utility functions have already been defined.

98
00:07:16.740 --> 00:07:21.340
I've been in situations where I've developed multiple plugins for the same site.

99
00:07:21.360 --> 00:07:27.180
This has resulted in me reusing functions checking off a function has already been defined is a good

100
00:07:27.180 --> 00:07:31.270
way to prevent collisions with your own code with the function defined.

101
00:07:31.290 --> 00:07:34.620
Let's use it inside the profile taps file.

102
00:07:34.650 --> 00:07:38.930
Let's use a conditional statement and call the utility function we just created

103
00:07:45.850 --> 00:07:51.580
the plugin file name is the file path relative to the plugins directory in our case it would be.

104
00:07:51.580 --> 00:07:52.270
Recipe.

105
00:07:52.300 --> 00:07:56.110
And then the main plugin file which is the index top HP file.

106
00:07:56.410 --> 00:08:02.260
If this function returns false we're going to simply return the function preventing it from executing

107
00:08:02.260 --> 00:08:09.680
the rest of this code now that we've got that established we can begin to display the actual content.

108
00:08:09.690 --> 00:08:15.930
I'm going to create a brand new file inside the includes slash buddy press directory called profile

109
00:08:15.990 --> 00:08:17.640
dash post stop HP

110
00:08:20.230 --> 00:08:24.500
define the screen function we passed into the TAM function which should be J.

111
00:08:24.530 --> 00:08:29.590
You recent recipes tab lastly include this file from the function's file

112
00:08:34.240 --> 00:08:37.150
inside this function we have to do three things.

113
00:08:37.150 --> 00:08:42.770
We are allowed to just start outputting content but that's not really the correct way to do things.

114
00:08:42.850 --> 00:08:48.520
Buddy press is a plugin that is easily extendable if you looked through any of the templates you'll

115
00:08:48.520 --> 00:08:48.940
notice.

116
00:08:48.940 --> 00:08:54.670
There were a lot of do action and apply filters functions spread throughout the code.

117
00:08:54.670 --> 00:09:01.180
This means that Buddy press even allows other developers to extend it like we're doing right now creating

118
00:09:01.180 --> 00:09:03.350
tab pages is no different.

119
00:09:03.370 --> 00:09:08.810
We should allow developers to extend this tab page just like any other buddy press page.

120
00:09:08.830 --> 00:09:11.140
Luckily it's pretty easy to do.

121
00:09:11.230 --> 00:09:19.470
I want to call the function BP core load template this function will load a core template from Buddy

122
00:09:19.470 --> 00:09:26.010
press with fallback support the template that's loaded depends on the string you pass in before I pass

123
00:09:26.010 --> 00:09:26.730
in a string.

124
00:09:26.790 --> 00:09:28.080
I want to filter it.

125
00:09:28.140 --> 00:09:31.740
We have to use the apply filters function the filter hook.

126
00:09:31.740 --> 00:09:36.970
I want to call is BP core template plug in.

127
00:09:37.070 --> 00:09:41.990
This is a buddy press hook that other developers can use to modify the path of a template.

128
00:09:41.990 --> 00:09:46.370
Specifically this will modify the path to the plugin template.

129
00:09:46.370 --> 00:09:49.940
The plugin template is a very special template in Buddy press.

130
00:09:49.940 --> 00:09:53.310
Its purpose is specifically for plugins plugins.

131
00:09:53.330 --> 00:09:55.390
Get a template to load their content.

132
00:09:55.400 --> 00:10:00.200
The path to this template is members slash single slash plugins.

133
00:10:00.230 --> 00:10:03.730
Let's take a look at this template inside the buddy press plugin.

134
00:10:03.740 --> 00:10:12.120
Let's open this template file.

135
00:10:12.190 --> 00:10:16.390
Here is what Buddy press says about this plug in inside this block comment.

136
00:10:16.810 --> 00:10:22.240
Third party plug ins should use this template to easily add template support to their plugins for the

137
00:10:22.240 --> 00:10:23.860
members component.

138
00:10:23.890 --> 00:10:26.910
This is the template that will load our plugins content.

139
00:10:26.980 --> 00:10:32.920
I'm fine with the way it is so I'm going to leave this template as is now the question is how do we

140
00:10:32.920 --> 00:10:35.670
load our content inside this template.

141
00:10:35.680 --> 00:10:42.460
Well if you scroll down this template you'll find two calls to the BP nouveau member hook function.

142
00:10:42.460 --> 00:10:46.990
We won't go down the rabbit hole for this function because there's quite a bit going on with it.

143
00:10:47.020 --> 00:10:49.030
I'll just explain what they do.

144
00:10:49.030 --> 00:10:52.000
You pass into value and it'll prepare the text.

145
00:10:52.000 --> 00:10:58.360
BP on your score template underscore then it'll call the do action function and trigger a hook for you

146
00:10:58.360 --> 00:11:04.810
to use the first example will trigger the BP template tidal hook and the second example will trigger

147
00:11:04.870 --> 00:11:07.570
the BP template content hook.

148
00:11:07.570 --> 00:11:10.000
You can use these hooks to load your content.

149
00:11:10.000 --> 00:11:15.490
It's important to understand that this template is meant for plugins other than Buddy press buddy press

150
00:11:15.490 --> 00:11:18.060
does not use this page for its own pages.

151
00:11:18.160 --> 00:11:23.060
Because of this we're expected to use these hooks ourselves to load our content.

152
00:11:23.080 --> 00:11:29.140
Normally we would open the functions file and hook into these two hooks but these two hooks are available

153
00:11:29.140 --> 00:11:30.720
on those templates.

154
00:11:30.730 --> 00:11:36.010
This is a problem as we could potentially divide or display information that we don't want to.

155
00:11:36.040 --> 00:11:39.490
We only want our code to apply to the recipe page.

156
00:11:39.490 --> 00:11:45.940
Luckily we don't have to use the ad action function in just the function's file back inside the tab

157
00:11:45.940 --> 00:11:46.620
function.

158
00:11:46.630 --> 00:11:50.860
I'm going to call the ad action function twice for both hooks.

159
00:11:50.860 --> 00:11:53.980
I'm going to pass in the two hooks and call the functions.

160
00:11:53.970 --> 00:11:59.980
Jay you buddy press recent post title and Jay you buddy press post content respectively

161
00:12:07.590 --> 00:12:11.350
since the screen function will only run if the TAB is clicked and loaded.

162
00:12:11.400 --> 00:12:16.230
We can safely assume these two hooks will only be added and called at this point too.

163
00:12:16.230 --> 00:12:21.030
This code will be placed right before we load the template since the template is the one calling these

164
00:12:21.030 --> 00:12:23.610
two hooks right below this code.

165
00:12:23.610 --> 00:12:25.830
I'm going to define both functions.

166
00:12:25.830 --> 00:12:30.980
The title function will just have a div tag with the class text center.

167
00:12:30.990 --> 00:12:33.150
My text will be my recipes

168
00:12:40.030 --> 00:12:44.830
the content function will have a list of the recipes the user has submitted.

169
00:12:44.830 --> 00:12:48.530
The first thing I want to do is grab the idea of the current profile.

170
00:12:48.730 --> 00:12:55.420
Create a variable called profile user I.D. and assign its value returned by the function BP displayed.

171
00:12:55.420 --> 00:12:59.280
User I.D. which will grab the I.D. of the current user profile.

172
00:13:02.030 --> 00:13:06.620
I'm going to make a conditional statement to make sure this I.D. is not empty.

173
00:13:06.620 --> 00:13:10.960
If it is empty we'll simply return the function and not display anything at all

174
00:13:14.850 --> 00:13:16.360
now that we have an I.D..

175
00:13:16.380 --> 00:13:21.370
I'm going to create a new variable named posts which will be a custom query.

176
00:13:21.390 --> 00:13:23.940
There are only three things I want to set.

177
00:13:23.940 --> 00:13:27.540
The first is the author which will be set to the user I.D.

178
00:13:32.820 --> 00:13:36.810
We only want to grab posts based on the profile being viewed.

179
00:13:36.990 --> 00:13:46.350
Then I want to set the posts per page setting to 10 I only want the 10 most recent posts since this

180
00:13:46.350 --> 00:13:47.790
is a custom post type.

181
00:13:47.790 --> 00:13:52.560
We have to set the post type 2 recipes so that it'll only grab recipe posts

182
00:13:55.230 --> 00:14:00.480
then just like any other loop I'm going to begin the process of looping through all of this.

183
00:14:08.490 --> 00:14:12.100
Nothing new so far I only want to output the excerpts.

184
00:14:12.120 --> 00:14:14.870
Luckily we don't have to rewrite the code for that.

185
00:14:14.970 --> 00:14:18.380
If you can recall we already have a template for excerpts.

186
00:14:18.480 --> 00:14:25.740
I'm going to call the get template part function and pass in partials slash post slash content dash

187
00:14:25.800 --> 00:14:30.190
excerpt which will use the template part we use in the index template.

188
00:14:32.830 --> 00:14:38.170
Lastly I'm just going to reset the data using the WP reset post data function

189
00:14:44.480 --> 00:14:49.970
let's check out the recipe tab now everything is coming out great except that the images are a bit too

190
00:14:49.970 --> 00:14:50.770
big.

191
00:14:50.810 --> 00:14:53.120
We really don't need all this space.

192
00:14:53.150 --> 00:14:55.390
I'm going to adjust my template a bit.

193
00:14:55.430 --> 00:14:59.030
I'm going to wrap my loop with two sets of div tags.

194
00:14:59.030 --> 00:15:05.510
I'll apply the ideas post to the first div with the classes row justify content M.D. Center

195
00:15:17.630 --> 00:15:26.060
the second div tag will how the classes CIOL M.D. 8 the classes I'm currently applying are bootstrap

196
00:15:26.060 --> 00:15:31.530
classes I recommend you check out the bootstrap documentation to learn more about these classes.

197
00:15:31.700 --> 00:15:36.980
All they do is center the content for us refresh the page and you should see everything looking a bit

198
00:15:36.980 --> 00:15:37.830
better.

199
00:15:37.880 --> 00:15:43.520
The classes I just used are bootstrap classes and are not specific to WordPress or buddy press in any

200
00:15:43.520 --> 00:15:43.850
way.

201
00:15:44.800 --> 00:15:46.400
Let me go over what happened.

202
00:15:46.480 --> 00:15:50.960
The first thing we did was tell Buddy press about a new menu item we'd like to add.

203
00:15:51.130 --> 00:15:56.470
If a user clicks on this menu item then the screen function will be called the screen function does

204
00:15:56.470 --> 00:15:57.740
a few things.

205
00:15:57.820 --> 00:16:00.430
What we want to do is display our content.

206
00:16:00.430 --> 00:16:02.840
There are a couple of ways to go about this.

207
00:16:02.860 --> 00:16:07.960
We could if we wanted to just output t email directly from the function.

208
00:16:07.960 --> 00:16:09.330
That's perfectly fine.

209
00:16:09.340 --> 00:16:14.770
However it's always good practice to make the page match the site and allow other plugins to extend

210
00:16:14.770 --> 00:16:20.500
the page if they need to Buddy press provides a template for plugins to use so that plugins don't have

211
00:16:20.500 --> 00:16:24.450
to worry about a lot of the markup or calling any required functions.

212
00:16:24.670 --> 00:16:29.380
A special thing about this template is that there are action hooks called at certain points to allow

213
00:16:29.380 --> 00:16:31.780
developers to display content.

214
00:16:31.780 --> 00:16:33.570
That's exactly what we do here.

215
00:16:33.580 --> 00:16:40.600
We use those action hooks specifically we hook into the title in content action hooks the functions

216
00:16:40.600 --> 00:16:44.140
that are called will output a title and the content respectively.

217
00:16:44.170 --> 00:16:46.640
It's a lot of work but well worth the effort.

218
00:16:46.780 --> 00:16:48.010
That should do it for now.

219
00:16:48.070 --> 00:16:49.990
Let's continue onto the next lecture.
