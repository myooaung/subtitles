1
00:00:07,710 --> 00:00:10,820
It's time to learn about web packed loaders and Babel.

2
00:00:10,860 --> 00:00:16,410
It is completely possible to use the latest tools on libraries without note in web pack.

3
00:00:16,410 --> 00:00:17,960
There is a problem with this.

4
00:00:17,970 --> 00:00:22,590
The first is that you'll end up writing more code than usual to accomplish a lot of the things you'd

5
00:00:22,590 --> 00:00:23,700
like to do.

6
00:00:23,700 --> 00:00:28,380
In truth we're already writing a lot of code just to accomplish these tasks.

7
00:00:28,380 --> 00:00:31,380
However this is just for setting things up.

8
00:00:31,560 --> 00:00:36,400
Once you have everything set up you don't have to worry about viewing this code for quite a while.

9
00:00:36,450 --> 00:00:41,460
On the other hands if you are trying to do these things without these tools you'll find that you'll

10
00:00:41,460 --> 00:00:44,570
constantly have to update multiple files.

11
00:00:44,580 --> 00:00:46,840
This becomes very hard to manage.

12
00:00:46,860 --> 00:00:49,120
It's just not worth it in the end.

13
00:00:49,200 --> 00:00:55,110
I highly encourage you to keep pushing through on learning these tools as they will speed up development.

14
00:00:55,140 --> 00:00:59,880
We're almost close to finishing up the basics before we can learn how to integrate all of this with

15
00:00:59,880 --> 00:01:01,200
Wordpress.

16
00:01:01,260 --> 00:01:03,780
The next tool we need to learn is Babel.

17
00:01:03,780 --> 00:01:08,920
Babel takes javascript to the next level in the resource section of this lecture.

18
00:01:09,000 --> 00:01:11,520
I provide a link to the official Babel site.

19
00:01:11,670 --> 00:01:17,640
What Babel will do is allow you to write JavaScript that is not implemented in both browsers and note

20
00:01:18,300 --> 00:01:23,640
it will then convert that code into code that the browser or no can understand.

21
00:01:23,640 --> 00:01:28,270
This may seem strange because web packets seem to do something similar to this.

22
00:01:28,350 --> 00:01:35,340
That's true but web pack doesn't cover every single feature will need web pack just covers the basics

23
00:01:35,550 --> 00:01:36,570
by using Babel.

24
00:01:36,570 --> 00:01:39,240
We are rest assured that we cover everything.

25
00:01:39,450 --> 00:01:45,750
It's important to note that Babel and Westpac are two completely different tools you can use Babel without

26
00:01:45,750 --> 00:01:47,480
web pack and vice versa.

27
00:01:47,490 --> 00:01:55,360
However these two worked very well together and using them both is very easy in order to use Babel.

28
00:01:55,360 --> 00:02:01,390
We have to load three different modules Babel is a very modular tool meaning that the code is split

29
00:02:01,390 --> 00:02:05,810
up into different modules so you can pick what you want to use and leave the rest behind.

30
00:02:05,830 --> 00:02:09,840
Usually you'll end up using a minimum of three Babel modules.

31
00:02:10,000 --> 00:02:12,840
The first module is the Babel dash core.

32
00:02:12,880 --> 00:02:14,880
This is the heart of Babel.

33
00:02:14,950 --> 00:02:20,120
This module has the core functionality in order to make everything Babel related work.

34
00:02:20,260 --> 00:02:25,270
This module will take care of reading your code and then transforming it into code that the browser

35
00:02:25,300 --> 00:02:26,730
can understand.

36
00:02:26,740 --> 00:02:30,140
The second module is the Babel dash loader module.

37
00:02:30,220 --> 00:02:34,600
This module makes it easy to connect web pack and Babel together.

38
00:02:34,600 --> 00:02:36,910
It handles a lot of the work for you.

39
00:02:37,060 --> 00:02:42,250
All you have to do is load and then configure it inside the config file and everything else will be

40
00:02:42,250 --> 00:02:43,420
connected.

41
00:02:43,420 --> 00:02:46,940
The last module will vary depending on what you want.

42
00:02:46,960 --> 00:02:52,670
Basically the Babel dash core module is just a way for you to read and pass javascript code.

43
00:02:53,110 --> 00:03:00,730
However it doesn't handle what should and shouldn't be converted iOS 6 isn't the latest version of JavaScript.

44
00:03:00,760 --> 00:03:08,300
There's also iOS 7 and iOS 8 the latest versions are barely supported in browsers or note iOS 6.

45
00:03:08,320 --> 00:03:11,590
It's considered to be the next standard in web development.

46
00:03:11,590 --> 00:03:16,490
With that being said if you wish you can use iOS 7 or iOS 8.

47
00:03:16,540 --> 00:03:22,600
However for this course we will only be using iOS 6 code.

48
00:03:22,630 --> 00:03:26,570
There are various modules with their own set of rules for converting code.

49
00:03:26,710 --> 00:03:32,780
If you were to go to the Babel site under docks you'll find a link to the official plugins you can use.

50
00:03:32,800 --> 00:03:36,830
There are two types of plugins experimental and official.

51
00:03:36,880 --> 00:03:42,430
We won't bother with using experimental plugins as we don't need to go that far under the Official set.

52
00:03:42,430 --> 00:03:44,710
You'll find a list of modules to use.

53
00:03:44,740 --> 00:03:46,660
So which one do we use.

54
00:03:46,660 --> 00:03:49,230
Well it really depends on what you want to use.

55
00:03:49,600 --> 00:03:56,260
However for most cases the Babel dash preset dash in the module is the recommended one.

56
00:03:56,350 --> 00:04:01,540
It's usually reviewed by the team of Babel and is considered the most stable and usable module out of

57
00:04:01,540 --> 00:04:02,750
them all.

58
00:04:02,770 --> 00:04:05,140
Let's get started with all these modules.

59
00:04:05,140 --> 00:04:13,480
I'm going to enter the following commands npm install dash dash save dash Dev Babel dash core Babel

60
00:04:13,510 --> 00:04:21,840
dash loader Babel dash preset dash EMV.

61
00:04:21,870 --> 00:04:23,030
This may take a while.

62
00:04:23,130 --> 00:04:27,010
Pause the video if you need to wait.

63
00:04:27,250 --> 00:04:30,310
You may get a couple of warnings and that's perfectly fine.

64
00:04:30,370 --> 00:04:36,640
A good way to confirm if a module was installed is by looking at the package dot Jason File node will

65
00:04:36,640 --> 00:04:39,860
usually add your modules to the dependencies list.

66
00:04:39,880 --> 00:04:44,950
If the module was installed successfully it's a good indicator of determining if your modules are good

67
00:04:44,950 --> 00:04:46,180
to go.

68
00:04:46,180 --> 00:04:46,720
All right.

69
00:04:46,720 --> 00:04:49,030
We can now use Babel as a loader.

70
00:04:49,030 --> 00:04:51,580
What exactly are loaders web hack.

71
00:04:51,580 --> 00:04:57,000
Has a feature called loaders loaders or a way to extend the way web pack functions.

72
00:04:57,010 --> 00:05:03,370
It's the same idea for using Wordpress hooks you are allowing to load in certain code that will modify

73
00:05:03,370 --> 00:05:05,470
the final result in some fashion.

74
00:05:05,470 --> 00:05:11,700
The Babel dash loader module we installed earlier makes it easy to integrate Babel with web pack.

75
00:05:11,770 --> 00:05:17,200
All we have to do is update our config file to use this module inside the config file.

76
00:05:17,200 --> 00:05:25,760
Create a new property called module since we're using a third party module we need to set this property.

77
00:05:25,760 --> 00:05:30,350
This property allows you to modify how third party modules are used with Westpac.

78
00:05:30,350 --> 00:05:36,240
Keep in mind that Babel is technically a module so if we want to load the Babel module we have to set

79
00:05:36,240 --> 00:05:37,530
up this property.

80
00:05:37,540 --> 00:05:40,210
Westpac will take care of loading it for you.

81
00:05:40,310 --> 00:05:44,440
All we have to specify is what modules should be loaded with Westpac.

82
00:05:44,540 --> 00:05:49,850
The value of this property will be an object which will contain even more properties about how modules

83
00:05:49,850 --> 00:05:51,170
work with Westpac.

84
00:05:51,260 --> 00:05:55,000
The only property I want to set is the rules property.

85
00:05:55,010 --> 00:05:59,730
This will be an array of modules we want to use with Westpac to load a module.

86
00:05:59,750 --> 00:06:05,830
You have to create an object like so each object in this array will represent a module.

87
00:06:05,900 --> 00:06:09,550
We only have one module which is the Babel dash loader.

88
00:06:09,740 --> 00:06:15,890
We installed three modules but the Babel loader module is the module that allows us to connect Babel

89
00:06:15,890 --> 00:06:24,580
with Westpac to specify a module you need to set the use property to Babel dash loader.

90
00:06:24,590 --> 00:06:30,860
This will tell Westpac to look for a module called Babel dash loader the Babel dash loader will take

91
00:06:30,860 --> 00:06:36,110
care of the rest with connecting the other two modules together there is one last thing I want to do

92
00:06:36,110 --> 00:06:42,980
before we're finished with configuring Westpac I want to set a property called Test Westpac is not just

93
00:06:42,980 --> 00:06:49,820
for JavaScript Westpac will also apply to images and style sheets since we're using Babel Babel will

94
00:06:49,820 --> 00:06:52,340
be applied to images and style sheets.

95
00:06:52,490 --> 00:06:59,330
However Babel does not process or work with images and style sheets will get errors on top of that web

96
00:06:59,440 --> 00:07:05,210
Westpac can also be applied to other extensions and file types if it's configured to do so.

97
00:07:05,210 --> 00:07:11,720
We only want be able to work on JavaScript files to make sure Babel will only work with JavaScript files

98
00:07:11,810 --> 00:07:17,930
then we'll have to set this property the value of this property will be a regular expression the regular

99
00:07:17,930 --> 00:07:26,940
expression will be forward slash backslash dot J.S. percent forward slash if you're unfamiliar with

100
00:07:26,940 --> 00:07:32,550
regular expressions then I highly recommend you take the time to study them regular expressions are

101
00:07:32,550 --> 00:07:38,610
kind of beyond the scope of this course as they're complicated to explain all this will do is make web

102
00:07:38,610 --> 00:07:41,860
park use Babel for JavaScript files only.

103
00:07:41,940 --> 00:07:43,380
All right that's it.

104
00:07:43,380 --> 00:07:46,450
There was one last thing we need to do before everything will work.

105
00:07:46,500 --> 00:07:52,700
We need to create a file named dot Babel R seat.

106
00:07:52,850 --> 00:07:56,910
It's very important that you name it this there is no file extension.

107
00:07:56,960 --> 00:07:58,680
It's just dot Babel.

108
00:07:58,680 --> 00:08:03,200
Ah see inside this file you can configure how Babel works.

109
00:08:03,200 --> 00:08:08,750
You have to create an object and the property you want to set is the presets property.

110
00:08:08,750 --> 00:08:14,180
You simply pass in an array of modules that contain rules on how to modify the output of javascript

111
00:08:14,690 --> 00:08:23,670
to put it simply you pass in the Babel dash preset dash e and V module Babel will look at this array

112
00:08:23,700 --> 00:08:30,420
and will load the modules inside this array the Babel dash preset dash in V is a module that will look

113
00:08:30,420 --> 00:08:36,110
at your code and tell people how it should convert that code into something that browsers can understand.

114
00:08:36,150 --> 00:08:39,820
It's important that you make one distinction between these two files.

115
00:08:39,900 --> 00:08:44,510
The web page config files allows you to control how Web pack works.

116
00:08:44,580 --> 00:08:50,220
The module property allows you to make the bridge between Westpac and a third party module.

117
00:08:50,220 --> 00:08:56,700
However it does not completely control that module Babel needs its own configuration file so you can

118
00:08:56,700 --> 00:08:59,110
specify exactly how it'll work.

119
00:08:59,280 --> 00:09:00,400
All right that's it.

120
00:09:00,720 --> 00:09:02,340
Let's test things out.

121
00:09:02,400 --> 00:09:10,050
I'm going to run the NPM run start command you should receive no errors.

122
00:09:10,050 --> 00:09:14,840
Let's view the H team I'll file again and see if we still see the message being output.

123
00:09:17,450 --> 00:09:22,930
We can also view the bundle dot J.S. file and you'll find it's exactly the same as before.

124
00:09:22,970 --> 00:09:27,760
The reason for this is because we aren't using any advanced features of JavaScript yet.

125
00:09:27,890 --> 00:09:30,160
This will lead us into the next lecture.

126
00:09:30,230 --> 00:09:34,280
We're going to begin using some of the new features that JavaScript has to offer.

127
00:09:34,280 --> 00:09:35,870
Also you in the next lecture.
