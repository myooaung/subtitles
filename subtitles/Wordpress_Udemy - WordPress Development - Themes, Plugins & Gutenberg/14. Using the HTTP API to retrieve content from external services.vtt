WEBVTT
1
00:00:07.840 --> 00:00:12.280
In some cases you will need to make requests to third party sources.

2
00:00:12.280 --> 00:00:16.440
For example you may need to grab a Twitter feed or grab an image.

3
00:00:16.450 --> 00:00:21.710
There are various methods out there for retrieving content from external sources with CHP.

4
00:00:21.760 --> 00:00:23.950
WordPress isn't very biased.

5
00:00:23.950 --> 00:00:31.270
Instead it provides an ATP API that tries all methods out there so that you aren't limited to just one.

6
00:00:31.360 --> 00:00:38.830
The GDP API can make any request you want whether it's a post or get request in the resource section

7
00:00:38.830 --> 00:00:39.650
of this lecture.

8
00:00:39.670 --> 00:00:42.640
I provide a link to learn more about this API.

9
00:00:42.640 --> 00:00:46.580
Here's what WordPress has to say about it within BHP.

10
00:00:46.600 --> 00:00:51.460
There are many possible ways to send in a GDP request for simplicity.

11
00:00:51.460 --> 00:00:56.390
These methods will be referred to collectively as transports for this article.

12
00:00:56.470 --> 00:01:02.770
The purpose for the ACP API is to support as many of them as possible with an API that is simple and

13
00:01:02.770 --> 00:01:05.470
standard for each of the transports.

14
00:01:05.470 --> 00:01:11.500
The problem is that web hosting servers support different transports and some might support none.

15
00:01:11.590 --> 00:01:17.220
The solution then is to support as many as possible to allow for those who have hosts that this one

16
00:01:17.260 --> 00:01:23.350
or two to still access the Web through one of the other transports that might still be enabled or supported

17
00:01:24.460 --> 00:01:26.000
by using this API.

18
00:01:26.050 --> 00:01:31.630
We save ourselves the headaches of determining what method to use to make HDP requests.

19
00:01:31.720 --> 00:01:34.250
Let's try using this API now.

20
00:01:34.270 --> 00:01:37.170
Right now I'm looking at one of the recipes.

21
00:01:37.210 --> 00:01:40.330
Do you remember how we created this piece of info.

22
00:01:40.330 --> 00:01:46.840
If you can recall we created a template separate from our code and used the file get contents function

23
00:01:46.840 --> 00:01:47.860
to get this info.

24
00:01:48.280 --> 00:01:54.730
However a lot of hosts out there disable this function and its extension relying on this one method

25
00:01:54.730 --> 00:01:58.710
to retrieve content will eventually cause us to run into errors.

26
00:01:58.720 --> 00:02:03.120
We should let WordPress handle the best method for retrieving content.

27
00:02:03.130 --> 00:02:10.210
We're going to update the filter dash content dot p p file so that it can use the WordPress HDP API

28
00:02:10.210 --> 00:02:12.690
to retrieve and process the template.

29
00:02:12.910 --> 00:02:19.240
If you scroll down this page you'll find a list of helper functions for using the H CTP API.

30
00:02:19.240 --> 00:02:22.840
The WP remote get function is what we want to use.

31
00:02:23.110 --> 00:02:26.990
Let's use this function now inside the filter function.

32
00:02:27.010 --> 00:02:34.720
Define a variable named recipe TPL Ari yes its value will be set to the value returned by the WP or

33
00:02:34.720 --> 00:02:34.990
mode.

34
00:02:34.990 --> 00:02:35.740
Get function

35
00:02:38.590 --> 00:02:40.770
this function has two parameters.

36
00:02:40.780 --> 00:02:42.400
First is the you are out.

37
00:02:42.550 --> 00:02:47.690
I'm going to use the plugins you are El function to retrieve the URL to the plugins folder.

38
00:02:49.960 --> 00:02:55.270
Keep in mind that this must be an HD GDP you are L and not a system path.

39
00:02:55.270 --> 00:02:59.140
Also note that the you rail doesn't have to be from our own site.

40
00:02:59.260 --> 00:03:02.430
You can make requests to your Ls outside of the site.

41
00:03:02.440 --> 00:03:08.860
The plugin is installed on the second parameter we can set is additional headers or info about this

42
00:03:08.860 --> 00:03:09.950
request.

43
00:03:09.970 --> 00:03:15.760
This is optional and we don't need this kind of power at the moment so we'll let WordPress decide the

44
00:03:15.760 --> 00:03:17.380
default settings.

45
00:03:17.380 --> 00:03:22.420
This function will end up returning an array that will contain various pieces of information about the

46
00:03:22.420 --> 00:03:23.980
response receives.

47
00:03:23.980 --> 00:03:30.520
Fortunately WordPress also provides a set of utility functions to help process and grab the information

48
00:03:30.520 --> 00:03:31.650
we care about.

49
00:03:32.080 --> 00:03:37.650
Replace the contents function with a function called WP remote retrieve body.

50
00:03:37.660 --> 00:03:43.110
This function will pass a response object and return the contents of the response.

51
00:03:43.180 --> 00:03:46.410
So replace these values with the response like so.

52
00:03:50.100 --> 00:03:51.670
Let's refresh the page.

53
00:03:51.720 --> 00:03:53.600
We should receive no errors.

54
00:03:53.640 --> 00:03:58.620
Our content should still be displaying along with the recipe template and its data.

55
00:03:58.620 --> 00:04:01.330
That's it for the eight CTP API.

56
00:04:01.380 --> 00:04:03.020
To recap what's going on.

57
00:04:03.060 --> 00:04:09.570
The WP remote get function will make a request to a euro and return the results of that request.

58
00:04:09.600 --> 00:04:16.270
The WP remote retrieve body will pass that response and return only the contents of that response.

59
00:04:16.350 --> 00:04:19.000
In our case it would be the template.

60
00:04:19.050 --> 00:04:23.890
Feel free to read up on the documentation to learn more about it as an exercise.

61
00:04:23.960 --> 00:04:29.850
Try and doing the same thing to our recipe create or short code if you can remember this short code

62
00:04:29.940 --> 00:04:33.120
also uses the file get contents function.

63
00:04:33.320 --> 00:04:36.840
Replace that using the WordPress H GDP API.
