WEBVTT
1
00:00:07.600 --> 00:00:13.530
WordPress is very smart and powerful as you can already tell it handled most of the logic for us.

2
00:00:13.660 --> 00:00:17.730
It can handle even more logic for us by selecting which templates to load.

3
00:00:17.830 --> 00:00:21.850
Right now we only have one template which is the index template.

4
00:00:21.850 --> 00:00:26.790
However we can create multiple templates for different pages such as for all fours.

5
00:00:26.800 --> 00:00:30.900
Single blog posts pages archives and so much more.

6
00:00:30.910 --> 00:00:36.490
The question is how do we make WordPress acknowledge we have multiple templates and which one is meant

7
00:00:36.490 --> 00:00:42.520
for which type of page in the resource section on this lecture I provide a link to the WordPress template

8
00:00:42.520 --> 00:00:43.440
hierarchy.

9
00:00:43.630 --> 00:00:46.490
What you'll see here isn't the WordPress codex.

10
00:00:46.600 --> 00:00:51.420
What this actually is is a free theme handbook created by WordPress.

11
00:00:51.460 --> 00:00:56.950
You'll find a lot of information on how to create themes and it's especially useful if you're new to

12
00:00:56.950 --> 00:00:59.200
theme development right now.

13
00:00:59.210 --> 00:01:02.440
I've skipped to the Template hierarchy chapter of this book.

14
00:01:02.590 --> 00:01:09.220
You'll find a diagram here that diagram shows us the order in which WordPress uses to load a particular

15
00:01:09.220 --> 00:01:10.330
template.

16
00:01:10.330 --> 00:01:12.230
It starts from left to right.

17
00:01:12.370 --> 00:01:18.370
First things first WordPress will check what kind of page type is being loaded is it loading an archive

18
00:01:18.580 --> 00:01:21.830
single post or maybe a four or four has occurred.

19
00:01:22.000 --> 00:01:26.860
Then it'll go through the diagram and try to find the correct file to load.

20
00:01:26.890 --> 00:01:30.070
For example let's say we're on a 4 0 4 page.

21
00:01:30.100 --> 00:01:35.920
If we look at the diagram and follow the line you'll see WordPress will first look for a forum for dot

22
00:01:35.940 --> 00:01:38.860
BHP file if it finds that file.

23
00:01:38.860 --> 00:01:43.410
Then it'll use that as a template and stop searching for a template to use.

24
00:01:43.480 --> 00:01:47.500
Otherwise WordPress will just load the index template.

25
00:01:47.500 --> 00:01:53.860
Actually if you take a look at the overall diagram all points eventually lead to the index template.

26
00:01:53.860 --> 00:02:01.150
If nothing is found we could if we wanted to just use an index template and then add our own logic to

27
00:02:01.150 --> 00:02:05.210
check to see what kind of pages being loaded but that's overkill.

28
00:02:05.290 --> 00:02:10.620
It would be so much simpler to just use the template hierarchy WordPress provides out of the box.

29
00:02:10.750 --> 00:02:15.440
You don't have to write any logic WordPress handles at all for us.

30
00:02:15.490 --> 00:02:21.880
Let's go back to the Template hierarchy page on this page you'll find more info on how the process works

31
00:02:21.970 --> 00:02:24.760
and which templates have precedence over others.

32
00:02:24.760 --> 00:02:31.810
For example if I scroll down further I'll eventually find information about the forum for template WordPress

33
00:02:31.810 --> 00:02:35.080
documents what template files WordPress will search for.

34
00:02:35.770 --> 00:02:41.530
It's usually best to go through this document to better understand how the template hierarchy works

35
00:02:41.950 --> 00:02:45.580
especially if you have a hard time following the diagram.

36
00:02:45.580 --> 00:02:52.480
Another useful resource is this site called WP hierarchy dot com which I also provide in the resource

37
00:02:52.480 --> 00:02:54.060
section of this lecture.

38
00:02:54.100 --> 00:02:58.150
It's very similar to the image we looked at earlier except it's interactive.

39
00:02:58.150 --> 00:03:03.370
You can click on a particular template and you'll be taken to the page with relevant information.

40
00:03:03.370 --> 00:03:08.820
I highly recommend you bookmark this for future reference after you finish this lecture.

41
00:03:08.830 --> 00:03:12.880
I also recommend you read this guide on how it works and our theme.

42
00:03:12.880 --> 00:03:19.660
We will be creating templates for single posts pages categories search results for all four pages and

43
00:03:19.660 --> 00:03:20.790
even more.

44
00:03:20.890 --> 00:03:27.040
Right now I want you to go to your site and click on a single blog post you'll see that WordPress takes

45
00:03:27.040 --> 00:03:31.270
care of querying everything and displaying only a single post.

46
00:03:31.270 --> 00:03:34.140
That's great but there's a few noticeable problems.

47
00:03:34.270 --> 00:03:39.870
Our post is only showing the excerpt it has this read more button which we don't need.

48
00:03:39.940 --> 00:03:43.430
And it also isn't showing tags or comments.

49
00:03:43.510 --> 00:03:49.360
We could add logic to the index template to check to see if this is a single post but I think creating

50
00:03:49.360 --> 00:03:54.570
a template for this would be so much better cleaner and efficient before we move forward.

51
00:03:54.580 --> 00:04:00.830
I want to talk about post types post types are a way to describe different types of content.

52
00:04:00.880 --> 00:04:07.000
If you were to go to the admin dashboard then you'll see that WordPress provides two post types called

53
00:04:07.000 --> 00:04:08.900
posts and pages.

54
00:04:09.040 --> 00:04:14.800
If you were to view their edit pages then you'll see that there are some similarities in terms of UI

55
00:04:15.220 --> 00:04:18.240
however they're meant for different types of content.

56
00:04:18.280 --> 00:04:24.160
WordPress provides you the ability to create your own custom post types but we'll discuss that when

57
00:04:24.160 --> 00:04:26.260
we start plugin development.

58
00:04:26.290 --> 00:04:31.240
All you need to know is that post types are a way to categorize different pieces of content.

59
00:04:33.670 --> 00:04:38.060
The template we're going to create is a template for the post post type.

60
00:04:38.260 --> 00:04:41.360
WordPress will look for five certain templates.

61
00:04:41.410 --> 00:04:48.070
First it'll look for a file called single dash followed by the name of the post type and then the slug.

62
00:04:48.220 --> 00:04:54.990
For example if I had a post with the slug hello then the file name would be single dash post dash Hello

63
00:04:55.020 --> 00:04:56.410
Dot BHP.

64
00:04:56.560 --> 00:05:01.550
This can be very helpful if you want to create a specific template for a specific page.

65
00:05:01.630 --> 00:05:06.910
WordPress really allows you to control the design of your site with the template hierarchy.

66
00:05:07.150 --> 00:05:12.490
The next template to look for is the single dash followed by the name of the post type.

67
00:05:12.610 --> 00:05:19.670
For example it will look for a file named single dash post dot P HP then WordPress will search for the

68
00:05:19.670 --> 00:05:21.640
single dot P HP template.

69
00:05:21.640 --> 00:05:23.780
Then these singular dot HP.

70
00:05:23.830 --> 00:05:31.530
And lastly the index top P HP template the index top P HP is the fallback template for every situation.

71
00:05:31.540 --> 00:05:36.940
This is why WordPress forces us to create it in order for our theme to be officially recognized.

72
00:05:37.510 --> 00:05:43.650
So you may be wondering what's the difference between single dot P HP and singular dot P HP.

73
00:05:43.810 --> 00:05:48.160
The single dot P HP template is custom post types only.

74
00:05:48.160 --> 00:05:51.010
This also includes the post post type.

75
00:05:51.010 --> 00:05:53.660
WordPress provides its own post types.

76
00:05:53.660 --> 00:05:56.460
There's about 6 but we'll look into that later.

77
00:05:56.470 --> 00:06:01.840
This means that there's two types of post types which are the ones provided by Wordpress and ones that

78
00:06:01.840 --> 00:06:03.680
come bundled with Wordpress.

79
00:06:03.880 --> 00:06:10.150
The ones that come bundled with with the exception of posts don't use the single dot P HP template.

80
00:06:10.150 --> 00:06:13.060
Instead they get assigned their own templates.

81
00:06:13.060 --> 00:06:17.590
These singular dot P HP template is a universal post type template.

82
00:06:17.650 --> 00:06:23.750
It doesn't matter if the post type is custom or inbuilt the singular dot P HP template will be used.

83
00:06:23.830 --> 00:06:24.780
That's all there is to it.

84
00:06:27.400 --> 00:06:29.180
We're going to keep things simple.

85
00:06:29.320 --> 00:06:32.860
We'll be creating the single dot page template.

86
00:06:32.860 --> 00:06:34.400
Create this file now.

87
00:06:34.420 --> 00:06:41.630
I'm going to just simply copy and paste the code from the index template to the single template we can

88
00:06:41.630 --> 00:06:44.870
now begin modifying this template to suit our needs.

89
00:06:44.900 --> 00:06:51.860
First I want to remove everything inside this div tag with the idea of posts and the padding nation.

90
00:06:51.860 --> 00:06:55.280
I also want to remove the breaking news wedges at the very top

91
00:07:01.000 --> 00:07:06.160
next open the single dot HCM email template file inside the assets folder.

92
00:07:06.310 --> 00:07:14.450
I want you to look for the div tag with the class single dash post copy everything here and then paste

93
00:07:14.450 --> 00:07:21.580
it in the spot where we deleted the previous div tag so we're kind of back to where we started.

94
00:07:21.600 --> 00:07:25.670
But that's fine because this gives us the opportunity to fix everything.

95
00:07:25.860 --> 00:07:30.540
Unlike the index template there are a couple of sections here we didn't go over.

96
00:07:30.540 --> 00:07:34.470
That's fine I'll show you how to tackle those extra sections.

97
00:07:34.710 --> 00:07:39.990
For now what I want you to do is to remake the loop and fill in all the blanks as much as you can.

98
00:07:40.440 --> 00:07:44.750
Pause the video if you need to All right let's do this together.

99
00:07:44.790 --> 00:07:48.900
The first step is to check if there are any posts using a conditional statement

100
00:07:53.280 --> 00:07:55.920
then we'll begin the loop inside the loop.

101
00:07:55.920 --> 00:08:00.810
We'll call the post function.

102
00:08:00.890 --> 00:08:05.000
Now I'm just going to cut and paste this code inside the loop like so

103
00:08:15.140 --> 00:08:18.950
if you need a refresher I suggest you read watch the previous lectures.

104
00:08:18.950 --> 00:08:24.680
If you were confused by what we did so far at this point the only thing we need to do is use template

105
00:08:24.680 --> 00:08:27.950
tag functions to replace the static content.

106
00:08:27.950 --> 00:08:30.090
First up is the actual post itself.

107
00:08:30.410 --> 00:08:39.410
Let's go through this one by one replace the text inside the tag with the title function echo out the

108
00:08:39.410 --> 00:08:40.100
date.

109
00:08:40.100 --> 00:08:45.530
Use the category template tag then use the comments number template tag

110
00:08:52.850 --> 00:08:58.060
for the single template we display more information about the author other than their name.

111
00:08:58.100 --> 00:09:01.970
In this case we want to keep our code clean and not repeat code.

112
00:09:01.970 --> 00:09:06.420
The best way to do this is by using variables at the top of the loop.

113
00:09:06.440 --> 00:09:12.700
I'm going to include the Global Post variable this variable is created for you by WordPress.

114
00:09:12.710 --> 00:09:15.700
WordPress will define a lot of variables for you.

115
00:09:15.860 --> 00:09:22.340
This variable in particular will contain properties about the post one of these properties is Post author

116
00:09:22.370 --> 00:09:25.130
which contains the ideas of the author.

117
00:09:25.130 --> 00:09:29.810
Let's create a variable named author I.D. and set its value to post.

118
00:09:29.810 --> 00:09:33.370
Post author next.

119
00:09:33.370 --> 00:09:39.130
Create a variable named author you are L and set its value returned by the get author posts you are

120
00:09:39.130 --> 00:09:40.070
L function.

121
00:09:40.150 --> 00:09:42.280
Make sure to pass in the author i.e.

122
00:09:47.380 --> 00:09:52.570
now we can just echo out the URL and use the author template tag like so

123
00:09:59.600 --> 00:10:00.720
for the featured image.

124
00:10:00.710 --> 00:10:05.960
I'm going to use the same code from the index template and paste it into the single template like so

125
00:10:13.580 --> 00:10:15.740
I'm going to make a small modification.

126
00:10:15.890 --> 00:10:19.550
I'm going to remove this array since I don't need the fade effect.

127
00:10:20.240 --> 00:10:26.930
Let's move onto the content itself instead of using the the excerpt function will be using the content.

128
00:10:26.930 --> 00:10:27.380
Function

129
00:10:33.990 --> 00:10:38.730
this function will display the full contents of the post which is what we want instead of a summary.

130
00:10:39.270 --> 00:10:42.980
Lastly I'm going to call a function called the tags.

131
00:10:43.020 --> 00:10:51.400
I'm going to place this function inside the div tag with the class tag cloud this function will include

132
00:10:51.430 --> 00:10:56.330
all tags related to this post and take care of comma separating all the tanks.

133
00:10:56.350 --> 00:10:59.250
It will also generate a link for each tag.

134
00:10:59.290 --> 00:11:04.780
This function has three parameters which are all optional will only concern ourselves with the first

135
00:11:04.780 --> 00:11:05.280
two.

136
00:11:05.380 --> 00:11:08.830
The first parameter will display text before the tags.

137
00:11:08.830 --> 00:11:13.420
I don't want to display any text so I'll just pass in an empty string.

138
00:11:13.420 --> 00:11:15.940
The second parameter will be the separator.

139
00:11:15.940 --> 00:11:19.720
I'm just going to pass in this space the default value is common.

140
00:11:20.320 --> 00:11:27.980
Let's check out the single post and see if everything is working if you don't see tags then it's probably

141
00:11:27.980 --> 00:11:31.060
because you don't have tags attached to the post.

142
00:11:31.120 --> 00:11:34.750
In that case just quickly add some and then check back on the page.

143
00:11:34.790 --> 00:11:37.960
You should see something similar to what I have.

144
00:11:37.970 --> 00:11:39.140
We're almost done.

145
00:11:39.150 --> 00:11:44.660
There's actually a few things WordPress recommends we do to make our theme compatible with most WordPress

146
00:11:44.660 --> 00:11:47.050
sites in the resource section.

147
00:11:47.090 --> 00:11:52.170
I provide a link to the theme development Codex on the contents sidebar.

148
00:11:52.280 --> 00:11:54.460
I want you to click single post.

149
00:11:54.590 --> 00:11:59.900
If you scroll up and down you'll notice WordPress jots down some important notes for us to know when

150
00:11:59.900 --> 00:12:01.330
creating templates.

151
00:12:01.370 --> 00:12:05.360
You shouldn't consider these rules but more as recommendations.

152
00:12:05.360 --> 00:12:09.860
So let's see what WordPress has to say about the single post template.

153
00:12:09.860 --> 00:12:15.650
The first thing and recommends is that we should call a function called WP link pages per page needed

154
00:12:15.650 --> 00:12:16.960
posts.

155
00:12:16.970 --> 00:12:19.750
What exactly does this do and how does it work.

156
00:12:19.760 --> 00:12:26.090
Well WordPress provides a feature called Patch needed posts rather than create multiple posts.

157
00:12:26.090 --> 00:12:30.740
You can create one single post with page breaks to test this out.

158
00:12:30.770 --> 00:12:36.020
You'll need to edit a post any post will do then somewhere in the middle.

159
00:12:36.140 --> 00:12:40.660
Add a block the block you should add should be called page break.

160
00:12:40.910 --> 00:12:44.810
What this will do is break the content into multiple pages.

161
00:12:44.810 --> 00:12:50.180
This is useful if you have an extremely long post and would like to pageant it into separate pages.

162
00:12:50.180 --> 00:12:56.090
This way you don't have to manually create a post for one long post and link all the posts together

163
00:12:56.090 --> 00:12:57.350
yourself.

164
00:12:57.350 --> 00:13:03.610
Save this and then let's do the post you'll notice it won't work right away.

165
00:13:03.610 --> 00:13:07.840
This is because we haven't called the WP link pages function.

166
00:13:07.840 --> 00:13:10.720
Call this function right after the content function

167
00:13:14.930 --> 00:13:20.420
let's refresh the post and you should now see the post being pageant aged into separate pages.

168
00:13:20.420 --> 00:13:21.580
This is really great.

169
00:13:21.590 --> 00:13:25.130
The best part is we didn't have to do much to get it's working.

170
00:13:25.130 --> 00:13:28.910
I'm going to provide a link to this function to learn more about it.

171
00:13:29.060 --> 00:13:32.720
Actually now that I look at it I want to center this.

172
00:13:32.720 --> 00:13:38.810
If we take a look at the documentation you'll see it says we can pass an array to customize this further

173
00:13:39.290 --> 00:13:46.430
the before and after keys is the text SLAs HDMI all that is displayed before the list.

174
00:13:46.430 --> 00:13:48.860
There's even an example usage provided.

175
00:13:49.010 --> 00:13:55.670
Let's use that and remove everything but the before and after keys in the array bootstrap provides a

176
00:13:55.670 --> 00:13:58.340
handy class called text dash center.

177
00:13:58.460 --> 00:14:03.350
So we'll just modify this paragraph tag and add the class text bash center

178
00:14:08.150 --> 00:14:16.250
let's refresh the page to see if our text is now centered let's keep going down the list we're already

179
00:14:16.250 --> 00:14:22.820
displaying the title and content so we can skip those the post date is already being displayed we're

180
00:14:22.910 --> 00:14:25.610
already displaying the categories and links.

181
00:14:25.610 --> 00:14:32.630
So let's skip that while it's suggesting we provide an edit link but I'm going to ignore this suggestion.

182
00:14:32.900 --> 00:14:38.420
If we were to be the post you'll notice WordPress already provides this top bar with a link to edit

183
00:14:38.420 --> 00:14:45.320
the current post so we don't need to add our own now it's recommending we display comments in a form

184
00:14:45.320 --> 00:14:46.550
for submission.

185
00:14:46.550 --> 00:14:52.460
I'm going to cover this in a future lecture as comments deserve its own kind of lecture so let's skip

186
00:14:52.460 --> 00:14:56.210
over this one for now and move on to the last and final point.

187
00:14:56.270 --> 00:15:02.870
WordPress now recommends we add links to any posts posted previously or after this post.

188
00:15:02.870 --> 00:15:09.260
We can do this by simply calling the previous post link and next post link functions.

189
00:15:09.260 --> 00:15:14.720
I want you to know that you shouldn't confuse these two functions with his plural form the plural form

190
00:15:14.750 --> 00:15:21.670
is used for pages with multiple posts while the singular form is for single posts inside the template.

191
00:15:21.680 --> 00:15:28.220
We have a section for the next and previous posts searched for the div tag with the class post dash

192
00:15:28.220 --> 00:15:29.420
navigation.

193
00:15:29.420 --> 00:15:33.780
There should also be a comment right above the element that says Page navigation.

194
00:15:33.780 --> 00:15:38.210
Let's replace these static HDMI links with their respective functions like so

195
00:15:43.210 --> 00:15:46.100
refresh the page and check if the links are working.

196
00:15:46.150 --> 00:15:50.920
WordPress will automatically generate these links with the appropriate title.

197
00:15:51.010 --> 00:15:56.230
That's it for now and the next lecture will finish up our template by adding comments and a form to

198
00:15:56.230 --> 00:15:57.870
submit additional comments.
