WEBVTT
1
00:00:07.460 --> 00:00:10.430
Media is a great way to enhance our content.

2
00:00:10.430 --> 00:00:16.070
WordPress fully supports all kinds of media from images to videos to audio files.

3
00:00:16.070 --> 00:00:21.860
You can view all the media you have uploaded on the media page in the WordPress admin dashboard you

4
00:00:21.860 --> 00:00:23.960
may see some images here already.

5
00:00:23.990 --> 00:00:26.930
These were provided by faker press when we ran it.

6
00:00:26.960 --> 00:00:32.240
We're going to create a block that will allow the user to select an image from the media uploader and

7
00:00:32.240 --> 00:00:33.980
render it on the page.

8
00:00:33.980 --> 00:00:39.410
WordPress already provides this feature but you may end up having to create your own version later down

9
00:00:39.410 --> 00:00:42.620
the road in the resource section of this lecture.

10
00:00:42.620 --> 00:00:48.530
I provided zip file that contains everything you'll need download it and unzip the contents into the

11
00:00:48.530 --> 00:00:49.850
app directory.

12
00:00:49.970 --> 00:00:56.830
You'll be provided a folder called Media upload block inside this folder should be two files and indexed

13
00:00:56.840 --> 00:01:04.500
dot J.S. file and editor dot SPSS file the ed. file will contain some stylings to position of Remove

14
00:01:04.520 --> 00:01:05.050
button.

15
00:01:05.270 --> 00:01:11.510
We will give our users the choice to remove an image they select the index file contains the usual we

16
00:01:11.570 --> 00:01:16.170
are D structuring some components and registering the block to get started.

17
00:01:16.190 --> 00:01:23.180
We'll need to d structure a couple more components from the WP dot editor object D structure the media

18
00:01:23.270 --> 00:01:25.940
upload and media upload share components

19
00:01:32.670 --> 00:01:41.880
from the WP components object D structure the dash icon object the media upload component will generate

20
00:01:41.880 --> 00:01:48.180
the UI for selecting and uploading images to the media uploader the media upload check component does

21
00:01:48.180 --> 00:01:53.850
something different than any other component we've encountered so far it was specifically made to check

22
00:01:53.850 --> 00:01:59.330
to see if the user currently logged in has the correct permissions to upload and manage files.

23
00:01:59.400 --> 00:02:03.170
This component must be wrapped around the media upload component.

24
00:02:03.390 --> 00:02:05.620
You'll see how that's done soon enough.

25
00:02:05.820 --> 00:02:11.490
The dash icon component allows you to use the dash icon set anywhere on your block.

26
00:02:11.550 --> 00:02:17.280
Previously we used the name to display an icon but that's because WordPress took the time to render

27
00:02:17.280 --> 00:02:18.870
this component for you.

28
00:02:18.870 --> 00:02:25.170
If we want to use a dash icon in a custom location then it will need to be the ones to render the icon.

29
00:02:25.260 --> 00:02:29.190
It's super simple so don't worry with the components these structured.

30
00:02:29.190 --> 00:02:35.050
Let's set some attributes the attribute we're going to create will revolve around what the media upload

31
00:02:35.060 --> 00:02:40.710
returns will be returned and I.D. you URL and alternative text.

32
00:02:40.710 --> 00:02:42.300
Let's start with the idea.

33
00:02:42.480 --> 00:02:44.610
The name will be image I.D..

34
00:02:44.700 --> 00:02:53.650
That type will be no the I.D. will be the I.D. of the media item which is stored in the database.

35
00:02:53.650 --> 00:02:57.930
We won't be using it but it's still something you may need later down the road.

36
00:02:57.940 --> 00:03:00.760
I'm also not going to store it in the element.

37
00:03:00.760 --> 00:03:03.580
Instead I'll just stored in the comments.

38
00:03:03.580 --> 00:03:15.310
Next is the image you are out the type will be string and the source will be attribute.

39
00:03:15.410 --> 00:03:20.360
We are essentially telling WordPress that the value can be found inside an attribute when it's loading

40
00:03:20.360 --> 00:03:22.400
the HDMI out from the database.

41
00:03:22.400 --> 00:03:28.420
If you set the source to attribute then you'll need to set the attribute property next.

42
00:03:28.430 --> 00:03:32.240
This will allow you to specify the attribute the value is stored in.

43
00:03:32.330 --> 00:03:37.900
Set this to source we'll be using an image tag.

44
00:03:38.050 --> 00:03:40.450
It would make sense that the euro would be stored there.

45
00:03:40.840 --> 00:03:47.160
Lastly define the selector property and set it to image.

46
00:03:47.230 --> 00:03:52.750
I'm going to make a copy of this as the alternative text will be the same thing except the attribute

47
00:03:52.780 --> 00:03:53.500
will be all at

48
00:03:58.030 --> 00:03:58.570
all right.

49
00:03:58.660 --> 00:04:00.020
The attributes are ready.

50
00:04:00.190 --> 00:04:06.950
The next step is to set up the UI the UI will require a bit of work to set up so prepare yourself first.

51
00:04:07.000 --> 00:04:09.790
We're going to need to return some J.S. ex

52
00:04:17.660 --> 00:04:21.920
then we'll need to display a button that will render the media uploader.

53
00:04:21.950 --> 00:04:28.040
Here's the problem no we only want to display the button if there is no media currently being displayed.

54
00:04:28.130 --> 00:04:33.230
Want to use a conditional statement for this but we can't use traditional conditional statements in

55
00:04:33.240 --> 00:04:38.900
NJ OSX x instead we'll have to use a ternary operator for the condition.

56
00:04:38.900 --> 00:04:41.800
I'm going to check if the prompts got attributes.

57
00:04:41.810 --> 00:04:48.320
Dot image I.D. is set if it is then it will display the image.

58
00:04:48.320 --> 00:04:51.740
Otherwise will display the button for the media uploader.

59
00:04:51.740 --> 00:04:57.710
We'll start with the media uploader output the media upload check and media upload components

60
00:05:09.830 --> 00:05:15.920
I'm wrapping the media upload component inside the media upload check component this is required if

61
00:05:15.920 --> 00:05:22.850
you want to limit who can and who can't upload images you're not required to pass in any special attribute

62
00:05:22.850 --> 00:05:29.330
to the media upload check component it's already properly configured for you in the resource section

63
00:05:29.390 --> 00:05:35.540
of this lecture I provide a link to his components documentation this page will provide an example on

64
00:05:35.540 --> 00:05:38.510
how to use this component and its attributes.

65
00:05:38.510 --> 00:05:41.780
Feel free to read up on it after you finish this lecture.

66
00:05:41.930 --> 00:05:43.220
Back inside the script.

67
00:05:43.220 --> 00:05:46.930
The first attribute will define is allowed to types.

68
00:05:46.940 --> 00:05:50.680
This should be set to an array of file types you'd like to allow.

69
00:05:50.690 --> 00:05:56.450
We only want to allow one type of file which is image.

70
00:05:56.510 --> 00:06:02.810
This is optional but if you set it WordPress will limit what media file type of user can select.

71
00:06:02.810 --> 00:06:06.280
We only want to allow users to select images.

72
00:06:06.350 --> 00:06:09.390
Next we'll need to set the value attribute.

73
00:06:09.500 --> 00:06:18.740
Set this to prompts dot attributes dot image I.D. If you pass into a value then WordPress will automatically

74
00:06:18.740 --> 00:06:21.240
select the media item with the same idea.

75
00:06:21.590 --> 00:06:27.680
This way the user doesn't have to scroll around to find the media item they selected previously the

76
00:06:27.680 --> 00:06:30.070
next attribute is on select.

77
00:06:30.170 --> 00:06:34.450
Set this to select image.

78
00:06:34.470 --> 00:06:38.490
This is an event that will be triggered when the user selects an image.

79
00:06:38.490 --> 00:06:44.040
The value for this attribute should be a function that will process the image we're passing in a named

80
00:06:44.040 --> 00:06:50.280
function that currently isn't define we'll define it in just a moment but let's keep moving forward.

81
00:06:50.280 --> 00:06:56.220
Lastly we'll need to set the renderer attribute this attribute is used to render the button that will

82
00:06:56.220 --> 00:07:03.150
open the media uploader the media upload component will not display the media uploader immediately instead

83
00:07:03.270 --> 00:07:09.300
it gets rendered when a certain function is called The Media upload component gives us the opportunity

84
00:07:09.300 --> 00:07:11.410
to create that button ourselves.

85
00:07:11.490 --> 00:07:16.650
The value for this attribute will be an anonymous function that will be passed in an object.

86
00:07:16.800 --> 00:07:21.430
We only care about one property from this object and that's the open function.

87
00:07:21.530 --> 00:07:29.660
The structure that the open function will open the media uploader we'll call this in a moment but let's

88
00:07:29.660 --> 00:07:32.150
create a button using the button component

89
00:07:37.050 --> 00:07:42.570
I'm applying the button and button dash large classes the text in sign will be upload.

90
00:07:42.570 --> 00:07:47.790
Image.

91
00:07:47.880 --> 00:07:51.780
Now let's set the on click event to the open function.

92
00:07:51.780 --> 00:07:53.310
Here's what's going to happen.

93
00:07:53.340 --> 00:07:58.240
The media upload component will display the button we created in the render attribute.

94
00:07:58.380 --> 00:08:02.710
The button will call the open function when the click event is triggered.

95
00:08:02.820 --> 00:08:08.910
The open function will take care of displaying the media uploader when called before we begin displaying

96
00:08:08.910 --> 00:08:10.920
the image after it's been selected.

97
00:08:10.920 --> 00:08:17.770
We'll need to store the image data for the on select attribute we're calling the select image function.

98
00:08:17.910 --> 00:08:19.200
Let's define that above

99
00:08:26.890 --> 00:08:29.980
the function will we pass in an object called image.

100
00:08:29.980 --> 00:08:35.620
This object will contain the properties and values related to the image selected from the media uploader

101
00:08:36.130 --> 00:08:37.320
using this object.

102
00:08:37.330 --> 00:08:40.540
I'm going to set each attribute to their respective property

103
00:08:50.610 --> 00:08:51.440
to do this.

104
00:08:51.450 --> 00:08:55.560
I'm calling the set attributes function in a previous lecture.

105
00:08:55.560 --> 00:09:01.350
We would only set one value but it is possible to set multiple values like I'm doing here.

106
00:09:01.350 --> 00:09:07.020
The idea of the image is stored in the ideas property the image you are well is stored in the your l

107
00:09:07.020 --> 00:09:11.380
property and the alternative text is stored in the altered property.

108
00:09:11.400 --> 00:09:16.800
I was able to find out the names by simply logging the object and reviewing it in the console.

109
00:09:16.800 --> 00:09:19.910
I recommend you try logging the object yourself.

110
00:09:19.920 --> 00:09:24.290
This will give you a better idea of what properties are inside the object.

111
00:09:24.330 --> 00:09:28.940
The next step is to display the image back inside the return statement.

112
00:09:28.950 --> 00:09:33.720
I'm going to add the code to the section that will run if the condition is true which is checking if

113
00:09:33.720 --> 00:09:38.250
there is an image i.e. I'm going to wrap everything with a div tag.

114
00:09:38.400 --> 00:09:41.280
The tank should have the class image container

115
00:09:47.930 --> 00:09:53.480
I'm adding this because we're going to have a button with absolute positioning in order to have elements

116
00:09:53.480 --> 00:09:54.890
with absolute positioning.

117
00:09:54.890 --> 00:09:59.770
We need a tag with relative positioning which is what this class does from here.

118
00:09:59.780 --> 00:10:06.200
I'm going to add the image tag with the source and all attributes I'll set them to their respective

119
00:10:06.200 --> 00:10:13.450
attribute values.

120
00:10:13.450 --> 00:10:18.770
Lastly we need to add the button that will remove the image if the user clicks on it.

121
00:10:18.820 --> 00:10:22.060
We're going to use another ternary operator for this.

122
00:10:22.090 --> 00:10:25.980
We only want to display the button if the block is currently selected.

123
00:10:25.990 --> 00:10:28.920
This is a user experience design decision.

124
00:10:29.020 --> 00:10:34.450
If the user is editing the block then it makes sense to display options related to editing the block.

125
00:10:34.780 --> 00:10:40.660
However if the block isn't selected then we want to hide the options to prevent adding clutter to the

126
00:10:40.660 --> 00:10:41.740
interface.

127
00:10:41.740 --> 00:10:45.690
Once again this step is optional but I think it makes sense here.

128
00:10:45.910 --> 00:10:51.210
We're going to check if the props dot is selected property is set to true.

129
00:10:51.220 --> 00:10:57.170
Remember this is a property WordPress will automatically update for you if the block is being edited.

130
00:10:57.220 --> 00:11:01.060
If this returns true then we'll display the button component.

131
00:11:01.150 --> 00:11:07.200
I'm applying the class button remove and setting the on click event to remove image.

132
00:11:07.210 --> 00:11:12.380
This function doesn't exist but we'll be adding it soon enough for the content inside.

133
00:11:12.400 --> 00:11:15.010
I'm going to add the dash icon component

134
00:11:19.790 --> 00:11:26.700
you have the option of adding in your own custom SPG icon but I think a dash icon will suffice here.

135
00:11:26.720 --> 00:11:30.410
You can use any of the Nash icons provided by WordPress.

136
00:11:30.410 --> 00:11:36.290
All you need to do is add the icon actually view and pass in the name of the icon you'd like to use.

137
00:11:36.290 --> 00:11:42.530
You don't have to add the dash icon dash prefix as it's added for you the icon and we're going to use

138
00:11:42.590 --> 00:11:45.820
is the no icon which is an x mark.

139
00:11:45.890 --> 00:11:49.320
I'm also going to set the size attribute to 20.

140
00:11:49.430 --> 00:11:52.970
This is measured in pixels that should display the button.

141
00:11:52.970 --> 00:11:54.860
It has absolute positioning.

142
00:11:54.860 --> 00:11:59.170
Check out the editor file for the CSX code to finish things off.

143
00:11:59.210 --> 00:12:04.400
We'll need to set the second half of the ternary operator to know which will display nothing.

144
00:12:04.400 --> 00:12:10.880
If the block isn't selected the last step is to create the remove image function we specified for the

145
00:12:10.880 --> 00:12:12.140
on click event.

146
00:12:12.140 --> 00:12:13.510
I'll create it above.

147
00:12:13.730 --> 00:12:24.660
It will be the same thing as before except all set all attributes to know like so.

148
00:12:24.740 --> 00:12:27.730
All right let's recap what this function will do.

149
00:12:27.740 --> 00:12:30.570
Let's assume the block was added for the first time.

150
00:12:30.740 --> 00:12:35.900
The first thing that will happen is this condition check it will check if there is a value for image

151
00:12:35.930 --> 00:12:40.130
I.D. by default it should be no since that's the case.

152
00:12:40.130 --> 00:12:46.250
The second half of this code will run the media upload component will be rendered that media upload

153
00:12:46.250 --> 00:12:51.800
component will display whatever is in the render property the render property will display a button

154
00:12:51.800 --> 00:12:58.100
that will run the open function when it's clicked the open function was provided to us by the component.

155
00:12:58.100 --> 00:13:00.540
So we don't have to do anything else.

156
00:13:00.590 --> 00:13:05.720
The media library model will open and allow the user to select or upload an image.

157
00:13:05.900 --> 00:13:11.330
If an image is selected then the function inside the on select function will run.

158
00:13:11.330 --> 00:13:16.970
Scrolling up all we're doing here is using the image object and setting the attributes to their respective

159
00:13:16.970 --> 00:13:17.960
values.

160
00:13:17.960 --> 00:13:24.680
This will cause the block to re render again this time since the image I.D. attribute has a value.

161
00:13:24.680 --> 00:13:30.350
The code inside the first half will render this will render the image the user selected.

162
00:13:30.350 --> 00:13:35.360
This will also display a button that will allow them to remove the image of the block as active.

163
00:13:35.360 --> 00:13:39.620
If they click the button then the remove image function will run.

164
00:13:39.620 --> 00:13:42.520
This will set all the attributes to note.

165
00:13:42.620 --> 00:13:43.970
That's basically it.

166
00:13:43.970 --> 00:13:46.610
The save function will display the image.

167
00:13:46.610 --> 00:13:51.970
Use the image tag and set the source and alter attributes to their respective values.

168
00:13:56.650 --> 00:14:06.280
Save your changes and import this block from the app slash index dot J.S. file then D into the blocks

169
00:14:06.340 --> 00:14:11.800
rectory and run the NPM run Dev command.

170
00:14:11.800 --> 00:14:16.450
Lastly try creating a new recipe post and add this block to your content

171
00:14:21.850 --> 00:14:22.560
initially.

172
00:14:22.600 --> 00:14:26.390
You should see a button if you click it then a modal should appear.

173
00:14:26.410 --> 00:14:32.980
This is the media library you can select any image and then press select the button should disappear

174
00:14:33.010 --> 00:14:35.680
and instead the image should appear in its place.

175
00:14:35.680 --> 00:14:38.240
There is also the option of removing the button.

176
00:14:38.350 --> 00:14:42.550
If I were to D select the block then the Remove button should go away.

177
00:14:42.580 --> 00:14:48.350
If I were to select the block again then it will reappear clicking on this should remove the image.

178
00:14:48.430 --> 00:14:56.090
I'm going to add the image back in and save the post viewing the post on the front end should just display

179
00:14:56.090 --> 00:14:56.860
the image.

180
00:14:56.990 --> 00:14:58.040
We're finished.

181
00:14:58.040 --> 00:15:01.180
We know how to add the media uploader to our blocks.

182
00:15:01.220 --> 00:15:03.020
Feel free to play around with this.
