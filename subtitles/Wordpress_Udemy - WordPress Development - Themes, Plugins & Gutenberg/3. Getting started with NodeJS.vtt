WEBVTT
1
00:00:07.560 --> 00:00:14.130
In order to use react we need to use something called No J.S. no Jesus is a program that allows you

2
00:00:14.130 --> 00:00:16.920
to run javascript on your computer or server.

3
00:00:17.040 --> 00:00:19.820
The official description is no dot.

4
00:00:19.820 --> 00:00:24.690
J.S. is a javascript runtime built on Chrome's V8 JavaScript engine.

5
00:00:24.960 --> 00:00:31.420
No dot GSK uses an event driven non blocking Io model that makes it lightweight and efficient.

6
00:00:31.590 --> 00:00:39.300
No dot J.S. is package eco system NPM is the largest eco system of open source libraries in the world

7
00:00:40.000 --> 00:00:42.070
in the resource section of this lecture.

8
00:00:42.150 --> 00:00:45.250
I provide a link to the official no GSK site.

9
00:00:45.390 --> 00:00:50.900
I want you to download the latest version as of this course the latest version is version 10.

10
00:00:51.360 --> 00:00:55.080
If you see a newer version then feel free to use that as well.

11
00:00:55.110 --> 00:01:00.330
You'll also notice that there's an earlier version available for download but that's only for those

12
00:01:00.330 --> 00:01:03.540
who are unable to upgrade for one reason or another.

13
00:01:03.690 --> 00:01:09.570
I've already installed no JSF on my computer so I won't be going through the default installation.

14
00:01:09.570 --> 00:01:15.810
Your installation should just be the default one you do not need to configure any of the settings.

15
00:01:16.050 --> 00:01:22.340
All right so once you've installed no J.S. let's explore what comes with it and how you can use it.

16
00:01:22.420 --> 00:01:25.740
You'll be provided this program called No j us.

17
00:01:25.800 --> 00:01:28.110
It should look something like this.

18
00:01:28.110 --> 00:01:32.670
Initially you may think this is a command prompt or terminal but it isn't.

19
00:01:32.730 --> 00:01:35.790
You can't run commands inside this program.

20
00:01:35.790 --> 00:01:41.000
For example if I were to run the commands less than you'll see I get this error.

21
00:01:41.160 --> 00:01:46.790
This program right here will allow you to run javascript code without having to create a file.

22
00:01:46.830 --> 00:01:52.050
It's a great way to test things out really quick before you get into real or complex projects.

23
00:01:52.050 --> 00:01:58.980
If I were to create a variable named foo and assign its value to 5 then I'll see this message called

24
00:01:59.070 --> 00:02:00.420
undefined.

25
00:02:00.420 --> 00:02:06.960
However this variable line created is now available and I can get the value by simply typing in foo.

26
00:02:06.960 --> 00:02:11.490
Every line of code you write here will be output it onto the console.

27
00:02:11.490 --> 00:02:15.890
I'm going to exit out of this program as he won't be using it throughout this course.

28
00:02:15.900 --> 00:02:17.360
I just wanted to show you this.

29
00:02:17.370 --> 00:02:21.530
As you may want to test things out feel free to play around with it.

30
00:02:21.630 --> 00:02:27.630
The real power of no J.S. is the commands modules and package ecosystem that comes with it.

31
00:02:28.170 --> 00:02:32.720
I want you to open your text editor and pointed to any folder you want.

32
00:02:32.730 --> 00:02:36.930
The great thing about no J.S. is that you can use it anywhere on your system.

33
00:02:36.960 --> 00:02:40.370
You don't have to use it in any particular folder.

34
00:02:40.590 --> 00:02:45.240
That means you can use it in your documents desktop or even windows folder.

35
00:02:45.330 --> 00:02:49.860
I'm going to keep things simple and continue working inside my HP docs folder.

36
00:02:49.860 --> 00:02:54.190
I'm inside a folder called Node dash example next.

37
00:02:54.310 --> 00:02:59.600
I'm going to create a javascript file called index Doc J.S. inside this file.

38
00:02:59.620 --> 00:03:02.610
I'm simply going to console Doc along the message.

39
00:03:02.620 --> 00:03:09.410
Hello then I want you to open your terminal and point it to this directory.

40
00:03:09.410 --> 00:03:11.010
This is very important.

41
00:03:11.030 --> 00:03:15.560
This will not work unless you're inside the same directory as your file.

42
00:03:15.560 --> 00:03:21.830
I'm using Visual Studio code and it automatically points to this folder whenever I open my terminal.

43
00:03:21.830 --> 00:03:26.840
If you're not using Visual Studio code then it's perfectly fine to use the command line that comes with

44
00:03:26.840 --> 00:03:28.490
your operating system.

45
00:03:28.490 --> 00:03:33.230
You may have to use the C D and less commands to help you navigate around.

46
00:03:33.410 --> 00:03:42.260
Once you're inside this directory I then want you to run the following command node index after running

47
00:03:42.260 --> 00:03:46.130
this command you'll see the message being output it onto the console.

48
00:03:46.130 --> 00:03:47.930
So what exactly is going on.

49
00:03:48.230 --> 00:03:52.940
Let's take it one step at a time when you installed no Jess.

50
00:03:53.030 --> 00:03:56.180
You will be provided with a new command called node.

51
00:03:56.270 --> 00:04:00.380
This command allows you to run a javascript file on your computer.

52
00:04:00.380 --> 00:04:03.980
Actually you don't even have to use a javascript file.

53
00:04:04.040 --> 00:04:07.470
Let's just call the node command by itself.

54
00:04:07.700 --> 00:04:14.140
What will happen is that no J.S. will turn your command line into a javascript environment on the spot.

55
00:04:14.180 --> 00:04:18.660
So if I were to type the commands L S then I'll get this error.

56
00:04:18.680 --> 00:04:21.490
This is the same error we got last time.

57
00:04:21.500 --> 00:04:27.820
This is basically the same as opening and using that program we used earlier to exit out of this.

58
00:04:27.830 --> 00:04:31.060
You need to press control C on your keyboard.

59
00:04:31.190 --> 00:04:37.270
The node command allows you to run javascript through the command line to take it a step further.

60
00:04:37.280 --> 00:04:42.890
You don't have to use javascript inside the command line right after the node command.

61
00:04:42.890 --> 00:04:47.000
You can pass in the name of the file that contains your javascript code.

62
00:04:47.150 --> 00:04:51.240
In our case this would be the indexed dot J.S. file.

63
00:04:51.260 --> 00:04:57.320
However you don't have to pass in the dot J.S. file extension as node will automatically assume the

64
00:04:57.320 --> 00:04:59.320
file is a javascript file.

65
00:04:59.450 --> 00:05:04.560
Once you run this command node will run whatever javascript is inside this file.

66
00:05:04.970 --> 00:05:08.320
And this example all we did was output a simple message.

67
00:05:08.420 --> 00:05:12.320
I'm going to move up one directory using the C.D. command.

68
00:05:12.320 --> 00:05:17.660
Then I'm going to try and run the node index command again right away.

69
00:05:17.660 --> 00:05:21.050
I'll get an error saying that the file can't be found.

70
00:05:21.050 --> 00:05:23.400
This is very important to highlight.

71
00:05:23.450 --> 00:05:28.070
I have to be inside the same directory yes this file to use this command properly.

72
00:05:28.070 --> 00:05:30.200
Otherwise I'll just get an error.

73
00:05:30.320 --> 00:05:34.880
If you want to you can just pass in the path and that will work as well.

74
00:05:34.880 --> 00:05:40.010
For example if I type in the following node will and run the file index Dot.

75
00:05:40.010 --> 00:05:41.150
J.S..

76
00:05:41.150 --> 00:05:46.850
However I always recommend to just be in the same directory so you don't have to type as much.

77
00:05:46.850 --> 00:05:48.300
It makes things easier.

78
00:05:48.350 --> 00:05:51.770
I'm going to d back into my directory.

79
00:05:51.770 --> 00:05:55.350
This is just a basic example of what you can do with no J.

80
00:05:55.370 --> 00:05:59.970
Yes you can run javascript on your computer instead of a web browser.

81
00:06:00.140 --> 00:06:06.200
You can do so many things such as work with the file system create a web server or even create your

82
00:06:06.200 --> 00:06:07.370
own commands.

83
00:06:07.370 --> 00:06:10.450
The possibilities are endless for this course.

84
00:06:10.490 --> 00:06:12.820
We won't be doing any of that.

85
00:06:12.830 --> 00:06:18.640
The reason being is that we're already doing this kind of stuffing P HP Apache and my sequel.

86
00:06:18.680 --> 00:06:24.290
We also have WordPress that handles a lot of the logic for us so we don't need to use node for that

87
00:06:24.290 --> 00:06:24.970
kind of stuff.

88
00:06:25.760 --> 00:06:27.270
So why are we using no.

89
00:06:27.650 --> 00:06:33.740
Well no it can also help with organizing code and use advanced features that simply aren't available

90
00:06:33.740 --> 00:06:35.420
in regular browsers.

91
00:06:35.420 --> 00:06:39.980
These tools will also be helpful when developing blocks for Gutenberg.

92
00:06:39.980 --> 00:06:45.500
Before we can do anything else we need to understand how modules work and why they're needed.

93
00:06:45.530 --> 00:06:47.650
There is one last thing I want to highlight.

94
00:06:47.660 --> 00:06:53.240
You don't have to name your file indexed dot J Yes you can name your files whenever you want.

95
00:06:53.360 --> 00:07:00.110
You can name this blue dot jackass and run the command node foo which will run the JavaScript in that

96
00:07:00.110 --> 00:07:00.480
file.

97
00:07:01.220 --> 00:07:04.190
All right let's move onto modules in the next lecture.
