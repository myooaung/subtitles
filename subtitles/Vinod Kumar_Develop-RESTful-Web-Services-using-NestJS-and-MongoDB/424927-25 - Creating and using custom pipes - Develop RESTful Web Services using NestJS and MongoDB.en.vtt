WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.190
in this lecture,

00:00:01.190 --> 00:00:03.750
let's see how to create a custom pipe.

00:00:03.750 --> 00:00:10.540
A pipe is a class that is annotated with injectable decorator pipes should implement the

00:00:10.540 --> 00:00:15.850
pipe transform interface to understand the requirement off creating a custom pipe.

00:00:15.850 --> 00:00:22.640
Let's first create a handler for receiving a payload that consists off a contact object so

00:00:22.640 --> 00:00:25.430
that we can add it to this particular context at it.

00:00:25.430 --> 00:00:30.950
You will not be doing the functionality off adding the contact into the context today that

00:00:30.950 --> 00:00:32.060
we have already done.

00:00:32.060 --> 00:00:35.550
We want to see some basic set off valuations.

00:00:35.550 --> 00:00:36.610
So first,

00:00:36.610 --> 00:00:37.770
let's write a function.

00:00:37.770 --> 00:00:38.660
Let's call it dies,

00:00:38.660 --> 00:00:45.750
create contact it receives a body and let simply it on the body without doing any change

00:00:45.750 --> 00:00:50.850
and decorate dysfunction with other great post onda.

00:00:50.850 --> 00:00:53.850
This perimeter with a great body.

00:00:53.850 --> 00:00:56.760
So let's go to postmen.

00:00:56.760 --> 00:00:59.510
Send that post request and see what happens.

00:00:59.510 --> 00:01:02.250
So I'm gonna change this toe post.

00:01:02.250 --> 00:01:05.890
Remove this question mark on perimeters.

00:01:05.890 --> 00:01:09.880
We want to send the body raw on.

00:01:09.880 --> 00:01:12.150
That's going to be a Jason content.

00:01:12.150 --> 00:01:16.060
So let's read a name on email.

00:01:16.060 --> 00:01:18.470
I'm going to send my name.

00:01:18.470 --> 00:01:20.310
Email is going to be,

00:01:20.310 --> 00:01:20.840
Let's say,

00:01:20.840 --> 00:01:21.180
you know,

00:01:21.180 --> 00:01:22.370
I'd be no dot co.

00:01:22.370 --> 00:01:24.320
If I click on send,

00:01:24.320 --> 00:01:26.500
you should simply get the data back.

00:01:26.500 --> 00:01:30.230
But let's assume that when I'm posting this data,

00:01:30.230 --> 00:01:34.660
this particular payload must to contain minimum name,

00:01:34.660 --> 00:01:36.080
email and phone number.

00:01:36.080 --> 00:01:38.570
In case if I don't supply that,

00:01:38.570 --> 00:01:40.100
I should be getting another.

00:01:40.100 --> 00:01:46.450
We can achieve this by creating our own pipe and pass it toe at the rate body as a

00:01:46.450 --> 00:01:47.110
perimeter.

00:01:47.110 --> 00:01:53.070
Because the pipes get executed before the actual control comes to the handler function.

00:01:53.070 --> 00:01:59.500
We can do certain validation and then throw an exception in case of the validation face to

00:01:59.500 --> 00:02:00.130
do so.

00:02:00.130 --> 00:02:03.130
Let's create a file under SRC.

00:02:03.130 --> 00:02:05.930
I'm gonna call this as mandatory.

00:02:05.930 --> 00:02:14.390
Dash feels dark pipe dot ts and then export a class called mandatory themes.

00:02:14.390 --> 00:02:14.950
Pipe,

00:02:14.950 --> 00:02:20.790
which is supposed to implement by transform and by transform,

00:02:20.790 --> 00:02:23.180
comes from at the redness J is common.

00:02:23.180 --> 00:02:27.000
This is forcing us to write a function called Transform.

00:02:27.000 --> 00:02:28.880
If you're from angular Baghran,

00:02:28.880 --> 00:02:30.570
this is pretty much the same thing.

00:02:30.570 --> 00:02:37.900
So I'm gonna press command art on this error on it says implement interface by transform

00:02:37.900 --> 00:02:45.930
that select the same thing and also import arguments moderate up from the import that

00:02:45.930 --> 00:02:47.000
already exists,

00:02:47.000 --> 00:02:48.100
so once again,

00:02:48.100 --> 00:02:52.620
I'm gonna press command Dart are controlled out on Windows Cintas Center.

00:02:52.620 --> 00:02:54.350
You can see it has gone over here.

00:02:54.350 --> 00:02:56.140
As you can see,

00:02:56.140 --> 00:03:01.470
that the transform receives two parameters on if you're from angular background.

00:03:01.470 --> 00:03:05.830
You know that designator is little bit different here because you can have any number of

00:03:05.830 --> 00:03:08.150
perimeters how we were here.

00:03:08.150 --> 00:03:11.480
A pipe always works on a single input.

00:03:11.480 --> 00:03:13.980
The input could be a quiet resting perimeter.

00:03:13.980 --> 00:03:17.390
It could be a You're a segment which is not the perimeter itself.

00:03:17.390 --> 00:03:18.160
What?

00:03:18.160 --> 00:03:19.750
It could be a body.

00:03:19.750 --> 00:03:23.890
That information is available in the metadata.

00:03:23.890 --> 00:03:25.610
For our example,

00:03:25.610 --> 00:03:27.360
this is off no use.

00:03:27.360 --> 00:03:28.260
Also,

00:03:28.260 --> 00:03:31.480
the pipe transform can define the data.

00:03:31.480 --> 00:03:34.600
Type off this value and the return value of dysfunction.

00:03:34.600 --> 00:03:35.110
So you can,

00:03:35.110 --> 00:03:35.740
for example,

00:03:35.740 --> 00:03:38.450
say that this should be an object.

00:03:38.450 --> 00:03:43.030
So I can say any as well as the return value is supposed to be any.

00:03:43.030 --> 00:03:44.640
But in this case,

00:03:44.640 --> 00:03:46.320
we don't want toe do this.

00:03:46.320 --> 00:03:49.430
That's get it off This We will try that in another example.

00:03:49.430 --> 00:03:51.100
And to use this pipe.

00:03:51.100 --> 00:03:55.600
Let's goto our up controller 30 years and in the body here,

00:03:55.600 --> 00:04:02.470
I can say that I want certain number off feels to be checked in the body so I can't simply

00:04:02.470 --> 00:04:05.120
supply the class name because if I supply the last name,

00:04:05.120 --> 00:04:07.330
then next James will have to instant.

00:04:07.330 --> 00:04:10.290
Yet we need to supply the list off.

00:04:10.290 --> 00:04:12.060
Feels that we want to check on.

00:04:12.060 --> 00:04:14.750
That could be done through the constructor.

00:04:14.750 --> 00:04:22.160
So let's type your new mandatory fields by and then I can supply an array off fields.

00:04:22.160 --> 00:04:23.100
For example.

00:04:23.100 --> 00:04:25.150
I want to check if name is present.

00:04:25.150 --> 00:04:28.950
Email is present as the last phone is present,

00:04:28.950 --> 00:04:34.950
but right now I'm getting another because mandatory fields five doesn't take a constructor

00:04:34.950 --> 00:04:35.790
with an R E.

00:04:35.790 --> 00:04:38.250
So let's go and fix the same thing here.

00:04:38.250 --> 00:04:38.710
That's right.

00:04:38.710 --> 00:04:42.660
A constructor on the constructor is going to receive an array.

00:04:42.660 --> 00:04:45.240
Let's call it us feels on.

00:04:45.240 --> 00:04:49.220
That is supposed to be an array off string type Onda.

00:04:49.220 --> 00:04:52.540
We will not write any court inside the constructor,

00:04:52.540 --> 00:04:56.540
but then the fields is going to be a local variable of the constructor.

00:04:56.540 --> 00:04:58.160
I cannot use that over here,

00:04:58.160 --> 00:05:05.030
so make use of the fields in other functions you have to mark this as private and now feels

00:05:05.030 --> 00:05:10.610
become a private member variable off this class and I can start using the same thing over

00:05:10.610 --> 00:05:14.860
here on the very first thing that I want to do is to get off this default court.

00:05:14.860 --> 00:05:16.390
I have to write some code,

00:05:16.390 --> 00:05:18.750
so I don't want to really throw just like that.

00:05:18.750 --> 00:05:24.750
But in case if the payload is not coming with any content,

00:05:24.750 --> 00:05:31.480
I want to probably throw an error saying that you must supply payload as an object so I can

00:05:31.480 --> 00:05:32.020
say here,

00:05:32.020 --> 00:05:33.390
if not value.

00:05:33.390 --> 00:05:35.450
That means if value is undefined,

00:05:35.450 --> 00:05:41.850
are type of value is not equals toe an object,

00:05:41.850 --> 00:05:46.610
then I want to throw another on the editor or exception that I wanted through.

00:05:46.610 --> 00:05:49.660
If it is an unknown exception,

00:05:49.660 --> 00:05:53.250
then you will simply get another court of fire under description.

00:05:53.250 --> 00:05:54.730
Off internals are better,

00:05:54.730 --> 00:05:56.020
however,

00:05:56.020 --> 00:05:59.110
if you want to supply more meaningful messages,

00:05:59.110 --> 00:06:04.580
you can always throw http exception or it's a plus off the same I'm gonna simply say,

00:06:04.580 --> 00:06:04.960
Here,

00:06:04.960 --> 00:06:10.400
throw new http exception on the first perimeter is the message.

00:06:10.400 --> 00:06:11.010
For example,

00:06:11.010 --> 00:06:16.100
I can say payload must be an object on,

00:06:16.100 --> 00:06:17.960
but then I can give a 400.

00:06:17.960 --> 00:06:23.010
As an editor of 400 status scored represents bad request,

00:06:23.010 --> 00:06:24.990
which is meaningful in this case.

00:06:24.990 --> 00:06:25.890
However,

00:06:25.890 --> 00:06:33.360
if you have received a valued object now we have to check whether or not the object.

00:06:33.360 --> 00:06:38.080
The paler contains all the fields which are mandatory and deal of the mandatory fields

00:06:38.080 --> 00:06:44.160
which are there in the constructor in the form of a private variable on this logic can very

00:06:44.160 --> 00:06:45.950
from developer to developer.

00:06:45.950 --> 00:06:46.800
What?

00:06:46.800 --> 00:06:47.340
I'm gonna do it.

00:06:47.340 --> 00:06:50.200
I'm going to create a local variable called missing fields,

00:06:50.200 --> 00:06:52.140
which is going to be an empty agree on.

00:06:52.140 --> 00:06:58.000
Then I check whether each of these fields in this member variable is it present are not in

00:06:58.000 --> 00:06:58.770
this value.

00:06:58.770 --> 00:07:01.320
If it is not presented in the missing field,

00:07:01.320 --> 00:07:03.960
I'm gonna add that toe the local variable.

00:07:03.960 --> 00:07:07.050
But otherwise I'm just going toe.

00:07:07.050 --> 00:07:07.950
Leave it as it is,

00:07:07.950 --> 00:07:10.920
which means at the end of this process you're missing,

00:07:10.920 --> 00:07:15.680
feels is either zero elements are it contains one or more values.

00:07:15.680 --> 00:07:18.780
I'm going to create a variable called missing fields,

00:07:18.780 --> 00:07:20.670
which is an empty ari.

00:07:20.670 --> 00:07:23.700
And then I'll say you're feels dark,

00:07:23.700 --> 00:07:24.650
forage,

00:07:24.650 --> 00:07:27.450
and then I take one field at a time,

00:07:27.450 --> 00:07:32.460
and then I'll check if this field is present in this value.

00:07:32.460 --> 00:07:34.010
If it is not,

00:07:34.010 --> 00:07:36.980
I have toe add this toe the missing fields.

00:07:36.980 --> 00:07:40.450
So I'm gonna use a curly bracket over here to check.

00:07:40.450 --> 00:07:43.370
It's not value off field.

00:07:43.370 --> 00:07:47.000
That means that the value object doesn't contain this field.

00:07:47.000 --> 00:07:50.770
Then I want to say missing fields dark,

00:07:50.770 --> 00:07:52.150
push off feed.

00:07:52.150 --> 00:07:58.760
So this entire condition when you check if the field is not there in the value that is the

00:07:58.760 --> 00:08:00.510
payload by missing fields,

00:08:00.510 --> 00:08:02.850
will be pushed with that field that is missing.

00:08:02.850 --> 00:08:09.890
Now I can come down here and then check if missing field start length is greater than zero

00:08:09.890 --> 00:08:09.890
.

00:08:09.890 --> 00:08:16.060
Then I said throw new http exception and I need to give a message.

00:08:16.060 --> 00:08:22.760
So I use this template string format and then give the 400 as the state of school on here

00:08:22.760 --> 00:08:23.450
and say,

00:08:23.450 --> 00:08:24.060
Hey,

00:08:24.060 --> 00:08:28.050
Lord should include and then I'll give dollar.

00:08:28.050 --> 00:08:29.300
What are the missing?

00:08:29.300 --> 00:08:35.560
Feels dot join Giant will convert that into a string with this deal emitter,

00:08:35.560 --> 00:08:36.970
whatever the deal emitter you give,

00:08:36.970 --> 00:08:39.370
that will be added on eventually.

00:08:39.370 --> 00:08:41.400
A string is going to be substituted over here.

00:08:41.400 --> 00:08:43.430
But if everything is ok,

00:08:43.430 --> 00:08:48.170
there is no allegation problem unless implicated in the value as if nothing happened.

00:08:48.170 --> 00:08:51.910
So now you see that I told her that name,

00:08:51.910 --> 00:08:52.310
email,

00:08:52.310 --> 00:08:53.750
phone are mandatory.

00:08:53.750 --> 00:08:55.820
They're going to be checked.

00:08:55.820 --> 00:08:58.230
If the payload doesn't contain any one of them,

00:08:58.230 --> 00:09:01.730
you're going to actually get this exception being thrown.

00:09:01.730 --> 00:09:04.450
Let's go on very for the same thing Now,

00:09:04.450 --> 00:09:08.250
I already have a payload that doesn't contain phone number.

00:09:08.250 --> 00:09:08.910
Let's implicate.

00:09:08.910 --> 00:09:14.450
Click the send button over here and you can see that we got the state of scored 400 on a

00:09:14.450 --> 00:09:15.340
message off.

00:09:15.340 --> 00:09:17.020
Payload should include phone,

00:09:17.020 --> 00:09:21.230
and if I remove name and click the send button,

00:09:21.230 --> 00:09:25.350
you can see that it's going to say should include name and phone off course.

00:09:25.350 --> 00:09:27.880
If I don't send any data at all,

00:09:27.880 --> 00:09:33.230
then you will see that it's going to be a message that says payload should implored name,

00:09:33.230 --> 00:09:34.250
email and phone.

00:09:34.250 --> 00:09:35.340
However,

00:09:35.340 --> 00:09:37.400
if I think all the three data,

00:09:37.400 --> 00:09:46.820
let the name Ramesh email Ramesh at example dot com for some number.

00:09:46.820 --> 00:09:49.410
If you are sending additional data,

00:09:49.410 --> 00:09:50.150
for example,

00:09:50.150 --> 00:09:50.980
like this,

00:09:50.980 --> 00:09:53.300
that's absolutely no problem.

00:09:53.300 --> 00:09:54.280
However,

00:09:54.280 --> 00:09:58.990
minimum mandatory feels are supposed to be included in the request,

00:09:58.990 --> 00:09:59.890
which we have done,

00:09:59.890 --> 00:10:05.310
and now you can see we are able toe get our payload back because that's exactly what we're

00:10:05.310 --> 00:10:06.730
doing in our handler.

00:10:06.730 --> 00:10:09.090
So if there is a problem,

00:10:09.090 --> 00:10:11.340
this pipe will take her off the same.

00:10:11.340 --> 00:10:12.920
If there is no problem,

00:10:12.920 --> 00:10:14.300
we're simply returning the body.

00:10:14.300 --> 00:10:18.780
One thing you can observe in our mandatory fields pipe is that,

00:10:18.780 --> 00:10:20.470
according to the documentation,

00:10:20.470 --> 00:10:25.050
our class is supposed to be decorated with accurate injectable.

00:10:25.050 --> 00:10:26.220
I haven't done that.

00:10:26.220 --> 00:10:27.770
You saw that it works,

00:10:27.770 --> 00:10:29.280
but in the documentation,

00:10:29.280 --> 00:10:33.180
it is very clearly mentioned that you have to use at their it injectable.

00:10:33.180 --> 00:10:36.990
So let's go and use that as a best practice like this.

00:10:36.990 --> 00:10:39.840
Now let's create one more pipe.

00:10:39.840 --> 00:10:40.620
But this time,

00:10:40.620 --> 00:10:43.360
instead of we creating a file over here,

00:10:43.360 --> 00:10:45.290
let's make use of the nest,

00:10:45.290 --> 00:10:48.530
generate command toe automatically gender the pipe for us.

00:10:48.530 --> 00:10:50.400
So let's go to the command front.

00:10:50.400 --> 00:10:54.870
I have a new tab over here where I am in my project directory.

00:10:54.870 --> 00:11:00.360
I have to give the command nest G pipe and then give the name of the pipe.

00:11:00.360 --> 00:11:04.430
Let's say we want to create a pipe called uppercase pipes.

00:11:04.430 --> 00:11:08.630
I'm gonna simply type your upper case and then press enter.

00:11:08.630 --> 00:11:16.580
This creates air filed for uppercase by 30 years on a test case for the same Let's goto our

00:11:16.580 --> 00:11:17.340
cord.

00:11:17.340 --> 00:11:18.460
Onda,

00:11:18.460 --> 00:11:19.310
Look at that.

00:11:19.310 --> 00:11:24.380
There is a uppercase dot by dot es It is an injectable.

00:11:24.380 --> 00:11:26.560
It implements pipe transform.

00:11:26.560 --> 00:11:28.420
There is already a transformed function.

00:11:28.420 --> 00:11:35.550
But this time I want to say that the transform should take string as an input and then

00:11:35.550 --> 00:11:40.890
string as an output as well because we can convert only strings into uppercase.

00:11:40.890 --> 00:11:45.350
So obviously the value here should be off string type,

00:11:45.350 --> 00:11:49.440
and then the written type also is gonna be off string type.

00:11:49.440 --> 00:11:51.550
This is gonna be very simple.

00:11:51.550 --> 00:11:51.990
Pipe.

00:11:51.990 --> 00:11:55.060
All have to do is to check if value is presented.

00:11:55.060 --> 00:11:57.150
Then we want to convert that into an upper case.

00:11:57.150 --> 00:11:59.670
We know for sure that it's gonna be string,

00:11:59.670 --> 00:12:01.890
because off this other ways,

00:12:01.890 --> 00:12:05.760
it would given other enemies before we actually do that.

00:12:05.760 --> 00:12:10.940
Let's print what is the value on whether it is coming as a quiet resting perimeter?

00:12:10.940 --> 00:12:11.930
Our body,

00:12:11.930 --> 00:12:14.020
our visitor part perimeter.

00:12:14.020 --> 00:12:17.350
We can check the theme by doing a console log.

00:12:17.350 --> 00:12:18.730
Let's do that over here.

00:12:18.730 --> 00:12:25.750
Consoled a long that's a value camo value and then consoled out law,

00:12:25.750 --> 00:12:26.990
you can also check.

00:12:26.990 --> 00:12:28.850
What is the data type off that.

00:12:28.850 --> 00:12:29.780
Of course,

00:12:29.780 --> 00:12:31.590
it is gonna be a string all the time.

00:12:31.590 --> 00:12:32.510
However,

00:12:32.510 --> 00:12:38.420
we want to say whether it came as a perimeter are requesting or is it a body?

00:12:38.420 --> 00:12:39.390
We can stay here.

00:12:39.390 --> 00:12:42.270
Meta data dot Right,

00:12:42.270 --> 00:12:45.920
He is nothing but meta data dot type.

00:12:45.920 --> 00:12:50.270
So this is going to be consisting off one off those three values.

00:12:50.270 --> 00:12:52.730
You can just go and do a command.

00:12:52.730 --> 00:12:53.420
Click on this,

00:12:53.420 --> 00:12:54.080
our control.

00:12:54.080 --> 00:12:58.200
Click on that and you can see that there is a read only type.

00:12:58.200 --> 00:13:01.210
This is the one that is going to be either body quietly.

00:13:01.210 --> 00:13:03.520
Param are any other custom perimeter.

00:13:03.520 --> 00:13:04.840
And of course,

00:13:04.840 --> 00:13:07.840
there is other thing called meta type as well as data.

00:13:07.840 --> 00:13:10.540
So we're more interested in the perimeter type,

00:13:10.540 --> 00:13:12.490
so I can just type that over here.

00:13:12.490 --> 00:13:15.500
Let also print a line separators.

00:13:15.500 --> 00:13:18.670
So we get our output clearly on the console,

00:13:18.670 --> 00:13:21.660
and now we'll do the actual logic.

00:13:21.660 --> 00:13:22.070
Over here,

00:13:22.070 --> 00:13:22.480
we say,

00:13:22.480 --> 00:13:24.040
if not value,

00:13:24.040 --> 00:13:25.900
we're gonna simply return value.

00:13:25.900 --> 00:13:28.800
But if the value is present,

00:13:28.800 --> 00:13:31.810
we're gonna say value dot to upper case,

00:13:31.810 --> 00:13:37.350
and that's a built in string function which converts the input in tow and upper case and

00:13:37.350 --> 00:13:38.520
just for our demonstration.

00:13:38.520 --> 00:13:38.910
Say,

00:13:38.910 --> 00:13:42.890
Let's write a new handler for receiving little,

00:13:42.890 --> 00:13:43.450
for example,

00:13:43.450 --> 00:13:44.670
some kind of qualities.

00:13:44.670 --> 00:13:47.380
So I would like the new function.

00:13:47.380 --> 00:13:48.980
That's gotta disquiet.

00:13:48.980 --> 00:13:53.230
E Let's say we want a quiet contacts based on city,

00:13:53.230 --> 00:14:02.090
state and country will declare three variables like this on simply return the same city,

00:14:02.090 --> 00:14:03.660
state and country.

00:14:03.660 --> 00:14:07.620
Notice that I'm not giving a name Value pairs over here,

00:14:07.620 --> 00:14:13.280
but this is same as a property call city with a value off city like this.

00:14:13.280 --> 00:14:16.100
So whenever you have a variable colon,

00:14:16.100 --> 00:14:18.490
the same variables value you want to produce,

00:14:18.490 --> 00:14:23.130
you can just reduce the toe variable like this so it is equal enough.

00:14:23.130 --> 00:14:23.840
City colon,

00:14:23.840 --> 00:14:27.630
whatever the city is that ST Paul and ST Country Colin Country.

00:14:27.630 --> 00:14:31.640
Now let's map this function toe get handler on.

00:14:31.640 --> 00:14:34.310
Since we already have a get contact,

00:14:34.310 --> 00:14:39.640
let's have one more that s slash Q and then map each one off them with,

00:14:39.640 --> 00:14:40.620
Let's say,

00:14:40.620 --> 00:14:41.980
added it quietly.

00:14:41.980 --> 00:14:45.340
And then the quality corresponds to Kristen.

00:14:45.340 --> 00:14:51.750
Tell a meter called City on the same thing I'm gonna copy and then page for all of them.

00:14:51.750 --> 00:14:54.460
But make the necessary changes here.

00:14:54.460 --> 00:14:57.820
So state on this is supposed to be country.

00:14:57.820 --> 00:15:04.650
So let's make a request toe contacts slash Q Caution mark City equals toe.

00:15:04.650 --> 00:15:11.860
Let the bangle or on state equals toe Karnataka on a country equals toe.

00:15:11.860 --> 00:15:15.030
India were supposed to make a get request,

00:15:15.030 --> 00:15:16.050
not post.

00:15:16.050 --> 00:15:22.350
Let's click on send and see what happens and you can see we got the response as city,

00:15:22.350 --> 00:15:22.650
state,

00:15:22.650 --> 00:15:24.050
country with the respective values.

00:15:24.050 --> 00:15:24.710
No,

00:15:24.710 --> 00:15:27.670
it is when you're sending get the payload is off.

00:15:27.670 --> 00:15:28.490
No use.

00:15:28.490 --> 00:15:31.450
So even though you see here it is never being sent,

00:15:31.450 --> 00:15:32.900
For example,

00:15:32.900 --> 00:15:40.080
I can copy this from here and based over here and click on send we still get the same

00:15:40.080 --> 00:15:40.590
output.

00:15:40.590 --> 00:15:44.190
So get on the deal it do not carry a payload.

00:15:44.190 --> 00:15:47.030
Payload is only meant for post and put.

00:15:47.030 --> 00:15:53.260
Now suppose I want to convert city in tow uppercase so I can simply come down here and then

00:15:53.260 --> 00:16:02.090
in the quality decorator I can add comma upper case pipe press enter If it has not imported

00:16:02.090 --> 00:16:02.090
,

00:16:02.090 --> 00:16:07.190
you can just go and are that by pressing Commander are controlled out on Windows and Linux

00:16:07.190 --> 00:16:08.180
Express enter.

00:16:08.180 --> 00:16:09.280
You can see it is important.

00:16:09.280 --> 00:16:11.280
Now I go back,

00:16:11.280 --> 00:16:12.390
click the send button.

00:16:12.390 --> 00:16:15.850
You can see that city is in upper case.

00:16:15.850 --> 00:16:19.720
But if I want to do the same thing for all the three imports,

00:16:19.720 --> 00:16:24.440
what you can do is you can go back and then remove it from here and then stop.

00:16:24.440 --> 00:16:26.440
Lie that at the function levels,

00:16:26.440 --> 00:16:29.560
I can take her at the rate use pipes.

00:16:29.560 --> 00:16:32.620
Notice the decorator use pipes this floral.

00:16:32.620 --> 00:16:34.710
That means you can give one or more pipes on.

00:16:34.710 --> 00:16:37.170
I want to give here uppercase pipe.

00:16:37.170 --> 00:16:39.780
And now when I send the request,

00:16:39.780 --> 00:16:44.260
you will see that all the three off them get converted into uppercase.

00:16:44.260 --> 00:16:45.040
Now,

00:16:45.040 --> 00:16:48.250
since we use the pipe one time over here,

00:16:48.250 --> 00:16:50.980
but it is applied on on the three perimeter,

00:16:50.980 --> 00:16:57.480
you must guess that the transform function off the uppercase pipe is executed three times

00:16:57.480 --> 00:16:59.290
and that's where the large were given.

00:16:59.290 --> 00:17:01.230
Here can help us understand the same.

00:17:01.230 --> 00:17:04.360
So if you go back to the console where the server is running,

00:17:04.360 --> 00:17:10.530
you can see that we got the pipe transformed function executed three times and in each one

00:17:10.530 --> 00:17:12.200
of them the metadata.

00:17:12.200 --> 00:17:13.430
That type is qari,

00:17:13.430 --> 00:17:16.670
indicating it is coming from undated quality.

00:17:16.670 --> 00:17:17.420
In other words,

00:17:17.420 --> 00:17:19.020
quiet resting perimeter.

00:17:19.020 --> 00:17:25.130
So the most common use cases off pipes are transformation on validation.

00:17:25.130 --> 00:17:25.970
Now,

00:17:25.970 --> 00:17:31.590
even though you can create your own pipes for basic primitive transformation,

00:17:31.590 --> 00:17:36.950
we have the past into possible part a and part you ready pipe,

00:17:36.950 --> 00:17:38.980
but for validation.

00:17:38.980 --> 00:17:41.290
You also have validation pipe.

00:17:41.290 --> 00:17:44.920
Instead of writing our own pipes for validation,

00:17:44.920 --> 00:17:48.310
are making use of the building valuation pipe,

00:17:48.310 --> 00:17:49.660
which is very minimalistic.

00:17:49.660 --> 00:17:52.410
There are third party pipe that are available,

00:17:52.410 --> 00:17:57.220
which we're going to use when we are building our rest full Web services in the subsequent

00:17:57.220 --> 00:17:57.880
process.

00:17:57.880 --> 00:17:59.270
So that's all for now.

00:17:59.270 --> 00:18:00.660
See in the next lecture.

