WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.390
in this lecture.

00:00:01.390 --> 00:00:04.010
Let's create a new nest project toe,

00:00:04.010 --> 00:00:06.200
understand the use off Providence.

00:00:06.200 --> 00:00:10.310
So I'm gonna go into my stop and then create a new,

00:00:10.310 --> 00:00:15.150
less Js project by typing nest new and then give the name of the project.

00:00:15.150 --> 00:00:21.400
I'm gonna give a name called Nest Dash Providers Dash demo and then press enter.

00:00:21.400 --> 00:00:25.490
I'm going to select NPM and then press enter.

00:00:25.490 --> 00:00:29.030
The project has been created.

00:00:29.030 --> 00:00:33.000
I'm gonna city into the folder called Nestor Dash Providers.

00:00:33.000 --> 00:00:38.100
That's demo and then type NPM run start colon there,

00:00:38.100 --> 00:00:41.550
this is going toe watch all the changes in my cold.

00:00:41.550 --> 00:00:42.650
Also,

00:00:42.650 --> 00:00:46.950
make sure that the previously run project is stopped by pressing control.

00:00:46.950 --> 00:00:47.380
See,

00:00:47.380 --> 00:00:51.750
otherwise the port number 3000 will be blocked and you will not be able to run this current

00:00:51.750 --> 00:00:52.250
project.

00:00:52.250 --> 00:00:55.580
I'm gonna breast enter on.

00:00:55.580 --> 00:00:57.650
My server is up and running.

00:00:57.650 --> 00:01:01.770
I'm going to open a new tab and then type CD,

00:01:01.770 --> 00:01:09.340
desktop slash nest providers demo And then I'll that court dot that will bring up the

00:01:09.340 --> 00:01:12.240
Visual Studio Court on opens the current folder.

00:01:12.240 --> 00:01:20.840
Let me full screen this and close the welcome screen and expand the SRC where I have this

00:01:20.840 --> 00:01:21.530
app model.

00:01:21.530 --> 00:01:22.350
Dirty ears.

00:01:22.350 --> 00:01:25.510
Notice that there is already a provider over here.

00:01:25.510 --> 00:01:27.070
But let's not worry about that.

00:01:27.070 --> 00:01:27.960
Instead,

00:01:27.960 --> 00:01:31.850
let's create our own model a controller on the service.

00:01:31.850 --> 00:01:35.820
So let's go to the terminal on then type in the command nest,

00:01:35.820 --> 00:01:39.150
generate or just G and then type model.

00:01:39.150 --> 00:01:40.690
That's college has contacts.

00:01:40.690 --> 00:01:42.600
We created a contacts more deal,

00:01:42.600 --> 00:01:44.330
but that was in a different project.

00:01:44.330 --> 00:01:46.080
So this doesn't conflict with that.

00:01:46.080 --> 00:01:47.250
I'm gonna press enter.

00:01:47.250 --> 00:01:48.770
And as you can see,

00:01:48.770 --> 00:01:53.270
it has created a file called Context that model tortillas in a separate folder called

00:01:53.270 --> 00:01:58.210
Contacts and also has imported our new model in the APP Modern,

00:01:58.210 --> 00:01:59.400
which is called route model.

00:01:59.400 --> 00:02:00.730
So if you go back over here,

00:02:00.730 --> 00:02:04.170
you can see that in the list off imports are contacts,

00:02:04.170 --> 00:02:05.170
model has come up.

00:02:05.170 --> 00:02:06.060
Of course,

00:02:06.060 --> 00:02:11.150
the context model itself is currently empty because there is no other imports.

00:02:11.150 --> 00:02:12.410
There is no controller on.

00:02:12.410 --> 00:02:14.400
There are no service providence.

00:02:14.400 --> 00:02:17.050
So what I'm gonna do is I'm gonna go back to the command,

00:02:17.050 --> 00:02:18.160
prompt or terminal,

00:02:18.160 --> 00:02:21.730
and then type nest G and then type controller,

00:02:21.730 --> 00:02:23.250
and then I'm gonna our contacts.

00:02:23.250 --> 00:02:30.320
Now this controller is going to be a part of the context that moderate RTs as well This is

00:02:30.320 --> 00:02:34.100
gonna be the consumer off our for wider our survey.

00:02:34.100 --> 00:02:35.360
So I'm gonna press enter.

00:02:35.360 --> 00:02:40.680
You can again see that there will be a context controller tears as well as a corresponding

00:02:40.680 --> 00:02:46.010
test respect and it is also updated Our context modeled RTs that's very important.

00:02:46.010 --> 00:02:47.350
So if I go back over here,

00:02:47.350 --> 00:02:53.180
you can see that it has added an entry in the controllers are off at Model Decorator.

00:02:53.180 --> 00:02:57.010
Let's do one last task here in the command front or terminal.

00:02:57.010 --> 00:03:02.610
I'm gonna type your nest G and then type surveys even though what we need to create a

00:03:02.610 --> 00:03:03.350
provider.

00:03:03.350 --> 00:03:06.140
That command is nest G service.

00:03:06.140 --> 00:03:06.560
Now,

00:03:06.560 --> 00:03:11.560
this is because nest is heavily influenced by angular and even in angular.

00:03:11.560 --> 00:03:16.580
Though it is called US provider back chill command is n g generate service.

00:03:16.580 --> 00:03:18.450
The same thing is followed over here.

00:03:18.450 --> 00:03:22.350
So with a nest generate service and then we're gonna take contacts.

00:03:22.350 --> 00:03:22.860
Now,

00:03:22.860 --> 00:03:25.660
Since the name contacts is used over here,

00:03:25.660 --> 00:03:29.930
it assumes that it's going to be inside this folder and seeing the inside this folder there

00:03:29.930 --> 00:03:31.160
is already a Model five.

00:03:31.160 --> 00:03:34.800
This becomes part of the contact start model tortillas.

00:03:34.800 --> 00:03:40.980
I'm gonna press enter and you can see that the service class as well as their testes spec

00:03:40.980 --> 00:03:45.350
created on the context Art model tortillas has been updated.

00:03:45.350 --> 00:03:51.250
Onda update is nothing but in the area called providers and entry has been made over here.

00:03:51.250 --> 00:03:51.780
Now,

00:03:51.780 --> 00:03:56.490
this is what is called the destruction off the service our porters with the model.

00:03:56.490 --> 00:03:58.140
So inside this model,

00:03:58.140 --> 00:04:03.150
now any controller can have access to this wire dependency injection.

00:04:03.150 --> 00:04:06.100
Now to do the basic set up for our contacts.

00:04:06.100 --> 00:04:06.500
Our waste.

00:04:06.500 --> 00:04:08.810
Let's go to the source court off the scene on.

00:04:08.810 --> 00:04:12.070
Then we're gonna write some court over here on this time.

00:04:12.070 --> 00:04:16.450
Unlike the previous example baby used there in memory data.

00:04:16.450 --> 00:04:18.550
We want to use an array here,

00:04:18.550 --> 00:04:21.440
but the data is going to be persisted into a file.

00:04:21.440 --> 00:04:27.100
So I'm going to use the FS model which is not the model file system model off no jays which

00:04:27.100 --> 00:04:34.910
we can import in the form off imports Star as Fs from Fs Fs is one of the core modern which

00:04:34.910 --> 00:04:35.630
is built in tow.

00:04:35.630 --> 00:04:42.450
Norges And we get the members off that as fs and this efforts model provides functions like

00:04:42.450 --> 00:04:44.710
Read file right File Exeter,

00:04:44.710 --> 00:04:46.980
which are all asynchronous by nature.

00:04:46.980 --> 00:04:49.400
But if you want to read or write synchronously,

00:04:49.400 --> 00:04:51.590
then you also have the sink wash in.

00:04:51.590 --> 00:04:52.250
For example,

00:04:52.250 --> 00:04:54.670
there is a function called efforts dot reid.

00:04:54.670 --> 00:04:55.600
File Sync.

00:04:55.600 --> 00:04:59.490
Our efforts dot right find think are depending on your need.

00:04:59.490 --> 00:05:01.050
You can choose whichever you want,

00:05:01.050 --> 00:05:03.340
so in orderto persist over file,

00:05:03.340 --> 00:05:05.840
we need the name and location off a file.

00:05:05.840 --> 00:05:09.120
Let's define a constant filing equals two.

00:05:09.120 --> 00:05:13.650
Let's say in the project directly that DOT Slash would correspond to the project director

00:05:13.650 --> 00:05:15.690
that is our SRC folder on.

00:05:15.690 --> 00:05:18.570
I'm gonna give the name as contact start Jason,

00:05:18.570 --> 00:05:20.230
you can get the name of the file,

00:05:20.230 --> 00:05:21.020
anything you want.

00:05:21.020 --> 00:05:23.250
But since we want to store the contacts,

00:05:23.250 --> 00:05:28.030
I'm going to simply stay with us context or Jason on our contacts of his classes.

00:05:28.030 --> 00:05:32.820
Going to maintain an a day on the content of the area can be persistent into this file in

00:05:32.820 --> 00:05:33.460
the form off.

00:05:33.460 --> 00:05:36.200
Jason using the Jays on a P A.

00:05:36.200 --> 00:05:38.340
We'll have a look into that in a couple of minutes,

00:05:38.340 --> 00:05:39.060
But first,

00:05:39.060 --> 00:05:45.400
let's create an array representing the data even though I didn't use in memory periodical,

00:05:45.400 --> 00:05:47.230
it's going to be persisted into the fight.

00:05:47.230 --> 00:05:49.710
I'm gonna clear the variable called contacts,

00:05:49.710 --> 00:05:52.030
which is going to be assigned with an empty array here.

00:05:52.030 --> 00:05:54.020
Andi in the constructor.

00:05:54.020 --> 00:05:59.350
Let's try to read this file and then copy the content off that into this contact.

00:05:59.350 --> 00:06:02.950
But if the file doesn't exist out of the file contains nothing,

00:06:02.950 --> 00:06:05.250
then we're gonna just leave it as it is.

00:06:05.250 --> 00:06:06.350
So for that,

00:06:06.350 --> 00:06:10.240
I'm generator Constructor on the constructor is going toe.

00:06:10.240 --> 00:06:13.320
Make use of the F s model to read the file.

00:06:13.320 --> 00:06:19.310
I'm going to say let content equals two fs start read file Sync.

00:06:19.310 --> 00:06:25.070
Now the reason I'm using sink is if I use the a sink washing off dysfunction then of course

00:06:25.070 --> 00:06:25.070
,

00:06:25.070 --> 00:06:26.410
there is no return value,

00:06:26.410 --> 00:06:32.220
but the actual function is going to be executed only after the Constructivist called Andi.

00:06:32.220 --> 00:06:37.620
That would be a problem because we want that context to contain as soon as we read this.

00:06:37.620 --> 00:06:39.520
So that's why we want to use the reed finds.

00:06:39.520 --> 00:06:40.640
Think so.

00:06:40.640 --> 00:06:42.200
Let's go and use the same thing.

00:06:42.200 --> 00:06:44.000
This request couple of perimeter.

00:06:44.000 --> 00:06:46.650
The 1st 1 is the name and location of the fight.

00:06:46.650 --> 00:06:50.850
I'm gonna give the fine name which is declared in Lane number four.

00:06:50.850 --> 00:06:56.800
We also to specify what is the content to be read as I'm going to say utf eight,

00:06:56.800 --> 00:06:58.380
That is the character,

00:06:58.380 --> 00:07:00.750
including that I want to read now.

00:07:00.750 --> 00:07:02.730
In case this file doesn't exist,

00:07:02.730 --> 00:07:04.280
it's going toe throwing exceptions.

00:07:04.280 --> 00:07:05.630
Obviously there's no return value,

00:07:05.630 --> 00:07:07.200
but they will be an exception thrown.

00:07:07.200 --> 00:07:10.670
What I want to do now is to surround this with a try,

00:07:10.670 --> 00:07:11.460
catch blood.

00:07:11.460 --> 00:07:16.560
So I'm gonna cut this and then put a try block and then inside that I'm gonna paste and in

00:07:16.560 --> 00:07:18.980
the catch block where there is an exception.

00:07:18.980 --> 00:07:21.740
I just want toe leave their contacts,

00:07:21.740 --> 00:07:26.470
as is our reckon explicitly said this start contracts equals to an interior,

00:07:26.470 --> 00:07:29.740
But in case there was no other over here,

00:07:29.740 --> 00:07:35.740
I simply want toe assign the content toe this but the fs don't read files.

00:07:35.740 --> 00:07:41.840
Think Retton's a string if everything is OK But I wanted in the form of an a day.

00:07:41.840 --> 00:07:47.880
So I have to convert this string into a Jason which I can do by typing contacts which is

00:07:47.880 --> 00:07:48.200
nothing more.

00:07:48.200 --> 00:07:54.700
Distort contacts equals toe Jason dirt parts This is the Jason AP a function that we want

00:07:54.700 --> 00:07:55.770
to use on.

00:07:55.770 --> 00:07:58.350
I'm gonna supply content now in kids.

00:07:58.350 --> 00:08:00.090
If this doesn't contain anything,

00:08:00.090 --> 00:08:02.030
even this would have thrown an exception.

00:08:02.030 --> 00:08:05.710
And that exception will go into the catch block on off course I'm ascending.

00:08:05.710 --> 00:08:07.130
An empty are over here,

00:08:07.130 --> 00:08:12.490
which means if the file contains some content and that happens to be some valid Jason

00:08:12.490 --> 00:08:16.650
content that would be converted into a JavaScript object and will be assigned.

00:08:16.650 --> 00:08:19.050
But in case off any problem,

00:08:19.050 --> 00:08:22.130
this start contact is going to be an empty every now.

00:08:22.130 --> 00:08:26.490
That's what is gonna happen first time because I don't have this context or Jason in my

00:08:26.490 --> 00:08:27.330
source folder.

00:08:27.330 --> 00:08:28.540
So from now on,

00:08:28.540 --> 00:08:32.310
any function that is called toe read all right,

00:08:32.310 --> 00:08:35.570
it's actually going to access the content from context.

00:08:35.570 --> 00:08:36.050
Ari.

00:08:36.050 --> 00:08:36.770
Of course,

00:08:36.770 --> 00:08:38.860
if the contact is modified,

00:08:38.860 --> 00:08:44.230
we want that content to be updated back to the context or Jason on this is going to be done

00:08:44.230 --> 00:08:47.730
when I add a new contract or when I add a multiple contacts.

00:08:47.730 --> 00:08:49.420
When I updated contact out.

00:08:49.420 --> 00:08:50.800
When I do a partial update,

00:08:50.800 --> 00:08:55.390
our when I do a deal it I require writing the contacts in tow,

00:08:55.390 --> 00:08:56.610
the file on.

00:08:56.610 --> 00:09:00.010
That's why I'm gonna write a kind of a private function over here,

00:09:00.010 --> 00:09:02.050
which is like a utility function.

00:09:02.050 --> 00:09:03.240
So God is us,

00:09:03.240 --> 00:09:05.420
right toe find.

00:09:05.420 --> 00:09:08.850
And then I'm going toe simply take this contact,

00:09:08.850 --> 00:09:13.580
converted this into a string and then right to that and that can be done very simply by

00:09:13.580 --> 00:09:17.460
typing efforts dot Right file either a canoe,

00:09:17.460 --> 00:09:18.260
the right file,

00:09:18.260 --> 00:09:24.380
our rightful think the best suited method here is right for in sync on I'm gonna supply the

00:09:24.380 --> 00:09:25.110
perimeter.

00:09:25.110 --> 00:09:27.450
The part which is nothing but the fine name.

00:09:27.450 --> 00:09:33.280
The 2nd 1 is supposed to be the content which in the Demeter data I haven't other here

00:09:33.280 --> 00:09:34.090
called contacts.

00:09:34.090 --> 00:09:37.470
But that object I have spoken word this interesting.

00:09:37.470 --> 00:09:38.020
Once again,

00:09:38.020 --> 00:09:41.770
I can use the Jason a p I that has a function called string.

00:09:41.770 --> 00:09:42.350
If I,

00:09:42.350 --> 00:09:43.740
as the name suggested,

00:09:43.740 --> 00:09:46.610
can words any Jason object in tow?

00:09:46.610 --> 00:09:47.450
A string.

00:09:47.450 --> 00:09:49.900
And I hope this up like this dark context,

00:09:49.900 --> 00:09:53.580
the third perimeter would be a bunch of options like what is the character,

00:09:53.580 --> 00:09:55.470
including a By default,

00:09:55.470 --> 00:09:57.470
it is going to be a beautif age.

00:09:57.470 --> 00:10:01.300
I can explicitly specify utf dash eight like this.

00:10:01.300 --> 00:10:03.160
Now this is going toe right.

00:10:03.160 --> 00:10:09.250
The content off distort contacts in the string format to or context or Jason.

00:10:09.250 --> 00:10:15.860
But this is a simple utility function on a private member function off contact service,

00:10:15.860 --> 00:10:18.480
which needs to be used whenever required.

00:10:18.480 --> 00:10:19.120
Like I said,

00:10:19.120 --> 00:10:19.950
when we want toe,

00:10:19.950 --> 00:10:21.560
add update or deal it,

00:10:21.560 --> 00:10:23.340
that's when we're gonna make use off this.

00:10:23.340 --> 00:10:25.420
Let's now write another function,

00:10:25.420 --> 00:10:27.280
which is goingto take ideas.

00:10:27.280 --> 00:10:30.250
A perimeter on check whether the i d.

00:10:30.250 --> 00:10:33.630
That represents any contact inside this Harry on.

00:10:33.630 --> 00:10:38.370
I can simply call this function as exists on then ideas the perimeter.

00:10:38.370 --> 00:10:43.840
I have to now written tour falls depending on whether that idea is found in one of the

00:10:43.840 --> 00:10:44.810
contact in the area,

00:10:44.810 --> 00:10:51.670
and where you can do is you can actually check the index often object Whose idea matches

00:10:51.670 --> 00:10:52.270
with this.

00:10:52.270 --> 00:10:54.890
If the index is not equal to minus one,

00:10:54.890 --> 00:10:58.290
that means it is phone if it is equal to minus when it is not fun.

00:10:58.290 --> 00:10:59.200
For example,

00:10:59.200 --> 00:11:03.580
I can say this dot contact start find index Onda,

00:11:03.580 --> 00:11:06.220
like in the previous examples we have seen,

00:11:06.220 --> 00:11:08.480
Finding Decks takes a callback.

00:11:08.480 --> 00:11:11.820
The callback is given one element at a time.

00:11:11.820 --> 00:11:13.690
We take that one element and check.

00:11:13.690 --> 00:11:16.580
If it's idea is it equals to the idea that is supply,

00:11:16.580 --> 00:11:17.430
That's perimeter.

00:11:17.430 --> 00:11:19.160
If this is true,

00:11:19.160 --> 00:11:22.770
then the index off this object will be given as a return value.

00:11:22.770 --> 00:11:27.160
If that is funds than the finding decks continues the loop on,

00:11:27.160 --> 00:11:31.000
then use me the second contact and again we're going to do the same thing.

00:11:31.000 --> 00:11:32.080
If this is true,

00:11:32.080 --> 00:11:34.250
then the index of the second object is given.

00:11:34.250 --> 00:11:35.370
If no,

00:11:35.370 --> 00:11:36.880
it is going to continue the loop.

00:11:36.880 --> 00:11:40.790
So in case if none of the objects contain this idee,

00:11:40.790 --> 00:11:42.800
then it's going to give you a minus one.

00:11:42.800 --> 00:11:44.350
And that's what we want to check.

00:11:44.350 --> 00:11:45.320
We say here,

00:11:45.320 --> 00:11:45.670
Hey,

00:11:45.670 --> 00:11:48.350
is it not equals toe minus one?

00:11:48.350 --> 00:11:50.670
Then that means it is found,

00:11:50.670 --> 00:11:51.850
so I can simply say,

00:11:51.850 --> 00:11:52.860
return this.

00:11:52.860 --> 00:11:53.900
Enter expression.

00:11:53.900 --> 00:11:55.910
But in case if it is not fun,

00:11:55.910 --> 00:11:59.110
it is equal to minus one minus one articles to minus one.

00:11:59.110 --> 00:11:59.810
It's false.

00:11:59.810 --> 00:12:01.920
It will simples their return falls.

00:12:01.920 --> 00:12:03.150
So you're asking Hey,

00:12:03.150 --> 00:12:05.120
does this idea exist on you?

00:12:05.120 --> 00:12:06.750
Get the interest false.

00:12:06.750 --> 00:12:12.820
So that is a function that we can make yourself in our controller on the check if I d given

00:12:12.820 --> 00:12:15.450
by the user existing or did of it or not.

00:12:15.450 --> 00:12:18.860
Before we conclude this lecture,

00:12:18.860 --> 00:12:19.920
let's also right.

00:12:19.920 --> 00:12:26.120
One more function and dysfunction is supposed toe generate the next idea that can be given

00:12:26.120 --> 00:12:27.250
to a new contract,

00:12:27.250 --> 00:12:31.790
and this is required whenever user sends one contact or an area of contacts.

00:12:31.790 --> 00:12:37.460
We want to gender the next idee so we can write a function called Get Next Idee,

00:12:37.460 --> 00:12:40.850
which is simply supposed toe written the next Heidi.

00:12:40.850 --> 00:12:42.610
In the previous examples,

00:12:42.610 --> 00:12:48.290
we have seen how to convert an array of contacts into another of ideas and then take that,

00:12:48.290 --> 00:12:50.880
give it as an input to the mac dot max,

00:12:50.880 --> 00:12:53.180
which gives it a maximum value in the collection.

00:12:53.180 --> 00:12:56.050
And then we can simply return the plus one off the same.

00:12:56.050 --> 00:12:57.210
But before that,

00:12:57.210 --> 00:13:00.210
let's also check if the context is empty.

00:13:00.210 --> 00:13:02.180
Will template on the next tide is one,

00:13:02.180 --> 00:13:04.930
because that's gonna be the very 1st 1 So I'm gonna type here.

00:13:04.930 --> 00:13:10.400
If this start contact start Lent is equals to zero,

00:13:10.400 --> 00:13:13.450
simply return one that's going to be the new I D.

00:13:13.450 --> 00:13:14.350
But of course,

00:13:14.350 --> 00:13:16.920
if the contacts has one or more elements,

00:13:16.920 --> 00:13:19.970
then we have to find what is its maximum values.

00:13:19.970 --> 00:13:22.170
So I'm gonna say you're let ideas,

00:13:22.170 --> 00:13:23.850
which is going to be an array of ideas,

00:13:23.850 --> 00:13:27.150
is nothing but this start contact start map,

00:13:27.150 --> 00:13:30.510
which converts a given object in tow.

00:13:30.510 --> 00:13:31.760
Something else in our case,

00:13:31.760 --> 00:13:35.490
we're gonna convert a single object into an idee map,

00:13:35.490 --> 00:13:38.420
will convert all the objects in tow,

00:13:38.420 --> 00:13:39.560
a bunch of ideas,

00:13:39.560 --> 00:13:41.870
and that's going to return an array of all the ideas.

00:13:41.870 --> 00:13:43.290
That's what we have here,

00:13:43.290 --> 00:13:44.840
which is the area of ideas.

00:13:44.840 --> 00:13:49.530
And then I can say return one plus mad dot max,

00:13:49.530 --> 00:13:51.380
where I will simply spread,

00:13:51.380 --> 00:13:52.150
I least.

00:13:52.150 --> 00:13:57.610
So whenever we want toe find what is the next idea I can use for adding a new content?

00:13:57.610 --> 00:14:00.650
I simply have to call this function in year six.

00:14:00.650 --> 00:14:05.300
We also have a function that can be marked as they get to property.

00:14:05.300 --> 00:14:07.250
All I have to do is tow.

00:14:07.250 --> 00:14:10.260
Just use the key were called get.

00:14:10.260 --> 00:14:15.590
So I like to give a space here and then use a lower case letter as a convention.

00:14:15.590 --> 00:14:18.000
So use what's called camel caps.

00:14:18.000 --> 00:14:18.830
Now you see,

00:14:18.830 --> 00:14:21.220
we have a get function,

00:14:21.220 --> 00:14:22.760
so it's getting the key word.

00:14:22.760 --> 00:14:23.720
Now what?

00:14:23.720 --> 00:14:24.440
It does it it?

00:14:24.440 --> 00:14:24.710
No,

00:14:24.710 --> 00:14:26.190
it all knows us toe.

00:14:26.190 --> 00:14:28.190
Treat this as if it's a variable.

00:14:28.190 --> 00:14:28.760
So,

00:14:28.760 --> 00:14:29.320
for example,

00:14:29.320 --> 00:14:31.000
against the next tidy plus one,

00:14:31.000 --> 00:14:32.470
our next tidy plus two.

00:14:32.470 --> 00:14:36.500
So which means you can never call this as a function anymore.

00:14:36.500 --> 00:14:38.500
But you can treat this like a variable,

00:14:38.500 --> 00:14:40.080
but it's a really don't be variable.

00:14:40.080 --> 00:14:43.310
So this is very nice when we use this human.

00:14:43.310 --> 00:14:44.040
Understand?

00:14:44.040 --> 00:14:47.800
If you don't know this already Now let's go to our controller,

00:14:47.800 --> 00:14:52.130
which is there here As contact start controller Dirty s on.

00:14:52.130 --> 00:14:55.270
We're gonna know Ask for this particular context salaries.

00:14:55.270 --> 00:14:56.970
And I can do that in two ways.

00:14:56.970 --> 00:14:59.550
Number one is a constructor based injection.

00:14:59.550 --> 00:15:01.470
Number two is a center based injection.

00:15:01.470 --> 00:15:05.910
Settled best injection is by using a decorator called at Inject.

00:15:05.910 --> 00:15:09.510
But instead we're going to use the classic Onda suggested one,

00:15:09.510 --> 00:15:11.290
which is the constructor based injection.

00:15:11.290 --> 00:15:15.150
So I'm gonna tape your constructor and then inside the constructor,

00:15:15.150 --> 00:15:21.720
I'm gonna say surveys off my contacts service on the constrictor doesn't have any body here

00:15:21.720 --> 00:15:21.720
.

00:15:21.720 --> 00:15:26.150
It's only job is to receive available from next year's.

00:15:26.150 --> 00:15:27.220
However,

00:15:27.220 --> 00:15:29.970
if I read a function year For example,

00:15:29.970 --> 00:15:31.910
add one contact,

00:15:31.910 --> 00:15:33.350
which takes some perimeter.

00:15:33.350 --> 00:15:35.750
But that's gonna be for later here.

00:15:35.750 --> 00:15:40.910
I can't make it off this variable because the variable declared here the perimeter variable

00:15:40.910 --> 00:15:43.550
is local to this particular constructor body.

00:15:43.550 --> 00:15:44.380
Now,

00:15:44.380 --> 00:15:48.950
the only thing that I might have to do is to declare and new variable over here on.

00:15:48.950 --> 00:15:53.600
Then assign these dorks always equals to service and so on and so forth.

00:15:53.600 --> 00:15:54.720
So ultimately,

00:15:54.720 --> 00:16:00.720
we can simply mark this particular variable with private public are protected on den on

00:16:00.720 --> 00:16:01.160
words.

00:16:01.160 --> 00:16:06.470
I can use them here because typescript will automatically convert that variable in tow A

00:16:06.470 --> 00:16:07.360
member variable.

00:16:07.360 --> 00:16:08.530
So I'm gonna go in.

00:16:08.530 --> 00:16:08.830
Mark,

00:16:08.830 --> 00:16:10.050
this s private.

00:16:10.050 --> 00:16:15.260
And now I can come down here and then say this dot and you can t I have your access to

00:16:15.260 --> 00:16:19.290
service now that we have done the basic set up for our controller.

00:16:19.290 --> 00:16:24.450
We have registered that with our model and we have injected that service to our controller

00:16:24.450 --> 00:16:25.810
in the next lecture.

00:16:25.810 --> 00:16:32.480
Let's implement the handler for post requests for adding one are more contacts to our

00:16:32.480 --> 00:16:33.650
contacts database

