WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.590
When I submit this form,

00:00:01.590 --> 00:00:03.200
there are two types off errors.

00:00:03.200 --> 00:00:09.650
Possible number one for numerical values such as unit price units in stock units.

00:00:09.650 --> 00:00:11.590
On order reorder level,

00:00:11.590 --> 00:00:15.100
I may endure some non numerical values.

00:00:15.100 --> 00:00:20.510
This is a data type condition problem because here spring is the one that is creating an

00:00:20.510 --> 00:00:23.690
object off product plus and passing on the request.

00:00:23.690 --> 00:00:26.340
Perimeters toe the respective sectors.

00:00:26.340 --> 00:00:27.560
Since the request,

00:00:27.560 --> 00:00:33.230
perimeters are all strings spring attempts to convert a string into a number.

00:00:33.230 --> 00:00:35.560
So if I have typed here is DF,

00:00:35.560 --> 00:00:41.260
then Spring tries to convert this into a number and fails because it's a number former

00:00:41.260 --> 00:00:45.030
exception and eventually spring will collect it as an era,

00:00:45.030 --> 00:00:49.080
and the moves on to the next to field convert this into a string.

00:00:49.080 --> 00:00:49.950
No problem.

00:00:49.950 --> 00:00:51.480
But when it comes here again,

00:00:51.480 --> 00:00:57.230
if this is a problem in converting a string into a number again that will be collected as

00:00:57.230 --> 00:00:57.850
an editor,

00:00:57.850 --> 00:01:02.170
so eventually for all the data type conversion errors,

00:01:02.170 --> 00:01:07.470
Spring would have collected all the editors and then eventually it breaks the application

00:01:07.470 --> 00:01:08.060
flow.

00:01:08.060 --> 00:01:08.850
So,

00:01:08.850 --> 00:01:10.040
just to show you,

00:01:10.040 --> 00:01:10.840
for example,

00:01:10.840 --> 00:01:15.830
for unit president wanted a type a non numerical value for units in stock again,

00:01:15.830 --> 00:01:19.050
I'm gonna take some alphabet's units on order.

00:01:19.050 --> 00:01:22.780
Some other junk character really level something else.

00:01:22.780 --> 00:01:24.650
If I click on submit,

00:01:24.650 --> 00:01:27.100
you'll see that it is going toe.

00:01:27.100 --> 00:01:32.050
Break The execution of the program by giving and errors hits TDP Status 400.

00:01:32.050 --> 00:01:35.500
But if I goto eclipse on in the console,

00:01:35.500 --> 00:01:37.090
you can see that it gave an error.

00:01:37.090 --> 00:01:39.450
There are four fielders.

00:01:39.450 --> 00:01:42.180
Let's take the one for unit price.

00:01:42.180 --> 00:01:47.350
That was the 1st 1 So it is your field error in object product.

00:01:47.350 --> 00:01:53.640
So product is the object that it constructed on field unit price rejected Value is a SD

00:01:53.640 --> 00:01:55.310
after the value that I have given,

00:01:55.310 --> 00:01:57.840
and it's looking through some courts.

00:01:57.840 --> 00:01:58.850
This is the era,

00:01:58.850 --> 00:01:59.550
of course.

00:01:59.550 --> 00:02:00.660
Have a look at this.

00:02:00.660 --> 00:02:03.880
It says Type mismatch dot product dot unit price.

00:02:03.880 --> 00:02:08.050
It is trying to look it and add a message for this particular property value.

00:02:08.050 --> 00:02:09.970
All if it is not fun.

00:02:09.970 --> 00:02:12.850
It's trying to look for a type mismatch star unit place.

00:02:12.850 --> 00:02:15.710
Since the little type of unit prices double,

00:02:15.710 --> 00:02:17.110
it's also looking for tight,

00:02:17.110 --> 00:02:18.430
mismatched or job or not,

00:02:18.430 --> 00:02:20.550
Langer double and then finally,

00:02:20.550 --> 00:02:24.240
it's also looking for a type mismatch as a property.

00:02:24.240 --> 00:02:26.420
If none of the properties are formed,

00:02:26.420 --> 00:02:29.500
it's just going to give its own other message.

00:02:29.500 --> 00:02:30.680
But at this point of them,

00:02:30.680 --> 00:02:32.310
it's not even displaying that message.

00:02:32.310 --> 00:02:35.650
Just give out 400 and going further here.

00:02:35.650 --> 00:02:35.930
There,

00:02:35.930 --> 00:02:36.170
miss,

00:02:36.170 --> 00:02:36.960
it says,

00:02:36.960 --> 00:02:41.350
failed to convert property value off type of our language string.

00:02:41.350 --> 00:02:42.680
That's the request perimeter.

00:02:42.680 --> 00:02:48.190
Do the required a time job ordered lying the double that is the perimeter off the set unit

00:02:48.190 --> 00:02:50.060
price function in the product object.

00:02:50.060 --> 00:02:51.740
And that's what it actually telling.

00:02:51.740 --> 00:02:55.500
And eventually it says here number former exception being thrown.

00:02:55.500 --> 00:02:58.450
But instead of throwing the exception at that point in time,

00:02:58.450 --> 00:03:02.410
it collected that as another and then continued with the next to property.

00:03:02.410 --> 00:03:03.850
Even that also is collected.

00:03:03.850 --> 00:03:04.550
Eventually,

00:03:04.550 --> 00:03:08.930
you can think off that spring now has a pocket off Others,

00:03:08.930 --> 00:03:09.840
however,

00:03:09.840 --> 00:03:12.210
since really don't handle the errors,

00:03:12.210 --> 00:03:14.050
spring is breaking the application.

00:03:14.050 --> 00:03:15.270
Ultimately,

00:03:15.270 --> 00:03:21.610
what we can do is we can go to our same product function and ask for the collection off

00:03:21.610 --> 00:03:25.390
errors that it got and then we can handle ourselves.

00:03:25.390 --> 00:03:26.600
So what we have to do?

00:03:26.600 --> 00:03:28.270
We just started type here.

00:03:28.270 --> 00:03:33.820
Another para middle called finally result on the variable name is yours.

00:03:33.820 --> 00:03:35.250
You can give any name you want.

00:03:35.250 --> 00:03:36.490
Let's call it just at us.

00:03:36.490 --> 00:03:38.070
It makes more sense now.

00:03:38.070 --> 00:03:41.420
We're asking spring to give the errors that it got.

00:03:41.420 --> 00:03:45.570
So we're telling spring that we are going to handle that are you don't have to break the

00:03:45.570 --> 00:03:46.840
execution of the program.

00:03:46.840 --> 00:03:52.600
So this time now spring is going to give you that Harris object and proceed for the Of

00:03:52.600 --> 00:03:52.910
course,

00:03:52.910 --> 00:03:53.660
this will fail.

00:03:53.660 --> 00:03:53.890
No,

00:03:53.890 --> 00:03:58.570
because high Bennett is not trying to insert non numerical values in tow numerical columns

00:03:58.570 --> 00:03:58.570
.

00:03:58.570 --> 00:04:00.130
So that will be a different error.

00:04:00.130 --> 00:04:01.430
So just to check the road,

00:04:01.430 --> 00:04:03.260
let's save this restart.

00:04:03.260 --> 00:04:03.950
Dunk it.

00:04:03.950 --> 00:04:07.740
So once the dunkers started,

00:04:07.740 --> 00:04:09.710
let's go back to the browser,

00:04:09.710 --> 00:04:13.610
click the back button and then if I submit this now,

00:04:13.610 --> 00:04:17.150
because spring is giving you the others collection now,

00:04:17.150 --> 00:04:19.620
Spring is not going to break the execution of the program.

00:04:19.620 --> 00:04:20.500
But of course,

00:04:20.500 --> 00:04:24.600
our hibernate when it is trying to save the later is going toe fail.

00:04:24.600 --> 00:04:26.870
If the subject changes this time.

00:04:26.870 --> 00:04:27.360
Ah,

00:04:27.360 --> 00:04:30.370
now we see you got a 500 because it's an exception,

00:04:30.370 --> 00:04:35.270
and if you see it's all about Springs data integrated violation exception coming from

00:04:35.270 --> 00:04:36.560
somewhere Hibernian Exception.

00:04:36.560 --> 00:04:37.300
As you can see,

00:04:37.300 --> 00:04:39.700
that could not execute the SQL.

00:04:39.700 --> 00:04:42.090
And if you come down and see proper error,

00:04:42.090 --> 00:04:43.470
message will be at the bottom.

00:04:43.470 --> 00:04:44.590
It is no,

00:04:44.590 --> 00:04:46.670
not a lot for discontinued.

00:04:46.670 --> 00:04:48.550
That's one of the other that came up.

00:04:48.550 --> 00:04:53.340
And that's probably because discontinued happens to be the 1st 1 that caused a problem.

00:04:53.340 --> 00:04:54.310
But if that was OK,

00:04:54.310 --> 00:04:59.840
then probably it would have given an error for reorder level on then unit prize units in

00:04:59.840 --> 00:05:00.810
stock Exeter.

00:05:00.810 --> 00:05:01.800
In any case,

00:05:01.800 --> 00:05:03.850
we need to know handle this errors.

00:05:03.850 --> 00:05:05.430
So let's click the back button.

00:05:05.430 --> 00:05:07.150
Keep this form like this itself.

00:05:07.150 --> 00:05:12.180
What I want to do is I want to come back to this particular form in case often error,

00:05:12.180 --> 00:05:13.700
and that's pretty simple.

00:05:13.700 --> 00:05:15.900
We can come here and then say,

00:05:15.900 --> 00:05:16.990
even before we do,

00:05:16.990 --> 00:05:19.020
anything will say here.

00:05:19.020 --> 00:05:23.550
If this errors collection has any errors at all,

00:05:23.550 --> 00:05:24.520
that's obvious,

00:05:24.520 --> 00:05:29.050
because now there are four others in this related 04 off those numerical fields,

00:05:29.050 --> 00:05:34.360
we simply have to go back to return a product from that.

00:05:34.360 --> 00:05:38.310
This has another issue because when this form is rendered,

00:05:38.310 --> 00:05:42.390
it is looking for an optic called PR in the request cope.

00:05:42.390 --> 00:05:43.010
As you can see,

00:05:43.010 --> 00:05:46.040
we haven't stored anything in the request scope so far,

00:05:46.040 --> 00:05:47.470
and apart from the PR,

00:05:47.470 --> 00:05:50.020
it also looks for categories and supplier.

00:05:50.020 --> 00:05:53.960
So if I again save this and restart and go back to the browser,

00:05:53.960 --> 00:05:56.650
I will get another related toe PR.

00:05:56.650 --> 00:05:58.090
And if PR is found,

00:05:58.090 --> 00:06:01.430
then it's going to give another for categories on if categories,

00:06:01.430 --> 00:06:03.660
that phone is going to give another for suppliers.

00:06:03.660 --> 00:06:07.870
So one of the way you can do is you can ask for another dependency here,

00:06:07.870 --> 00:06:09.280
such as modern on,

00:06:09.280 --> 00:06:14.450
then Say model dot add attributes or basically have to copy this and paste over here,

00:06:14.450 --> 00:06:16.220
but instead off new product,

00:06:16.220 --> 00:06:20.050
I have to supply the same product object because that contains errors.

00:06:20.050 --> 00:06:21.270
Ultimately,

00:06:21.270 --> 00:06:23.900
we can simply adhere after it.

00:06:23.900 --> 00:06:25.250
Modern attribute.

00:06:25.250 --> 00:06:31.120
This will ensure that the same object that I receive will also be kept in the request scope

00:06:31.120 --> 00:06:32.350
as a model attribute.

00:06:32.350 --> 00:06:34.030
But that's only for PR.

00:06:34.030 --> 00:06:36.550
How about these two So far this to again,

00:06:36.550 --> 00:06:38.170
I still have to store that in the modern,

00:06:38.170 --> 00:06:39.850
not this is rare,

00:06:39.850 --> 00:06:44.360
since multiple controller handler functions required these two objects.

00:06:44.360 --> 00:06:50.400
What we can do is we can remove it from there and then actually right to separate functions

00:06:50.400 --> 00:06:50.400
,

00:06:50.400 --> 00:06:53.390
which will be automatically called on the return value.

00:06:53.390 --> 00:06:53.580
Off.

00:06:53.580 --> 00:06:57.350
The function will be automatically kept in the request hope as model etiquette.

00:06:57.350 --> 00:06:59.700
So the way you do is you write a function here.

00:06:59.700 --> 00:07:06.350
Public list from ciabatta duty category from our entity package.

00:07:06.350 --> 00:07:10.980
Let's call it us get category list or any name you want.

00:07:10.980 --> 00:07:13.920
Doesn't matter what it is and then take your return.

00:07:13.920 --> 00:07:14.530
Ph.

00:07:14.530 --> 00:07:18.560
D deer were dot get all categories that throws an exception.

00:07:18.560 --> 00:07:23.550
Let's throw it away for them and all I have to do is tow are here at the late model

00:07:23.550 --> 00:07:24.450
attribute,

00:07:24.450 --> 00:07:26.690
just like the one that we did over here.

00:07:26.690 --> 00:07:28.850
Remember in the Request Co.

00:07:28.850 --> 00:07:33.070
We want this name off this particular category list as categories,

00:07:33.070 --> 00:07:36.930
so we can give you the name as categories here.

00:07:36.930 --> 00:07:37.440
However,

00:07:37.440 --> 00:07:39.940
it took the name from this variable PR,

00:07:39.940 --> 00:07:40.690
but if you want,

00:07:40.690 --> 00:07:44.790
you can also explicitly type your PR like this.

00:07:44.790 --> 00:07:47.320
But it's not record because the variable name is matching.

00:07:47.320 --> 00:07:48.760
In my case now,

00:07:48.760 --> 00:07:54.620
this is automatically kept in the request scope for every control function off this

00:07:54.620 --> 00:07:56.190
particular controller.

00:07:56.190 --> 00:07:59.610
So let's copy this based forward here,

00:07:59.610 --> 00:08:02.100
this is gonna be suppliers for me.

00:08:02.100 --> 00:08:06.390
And it's gonna be a supplier list on any other name.

00:08:06.390 --> 00:08:07.000
It doesn't matter.

00:08:07.000 --> 00:08:07.710
Over here.

00:08:07.710 --> 00:08:10.150
This is get all suppliers.

00:08:10.150 --> 00:08:16.760
And one last is that this is supposed to be supplier to supplier is supposed to be imported

00:08:16.760 --> 00:08:19.050
from our entity package.

00:08:19.050 --> 00:08:19.970
Let's do that.

00:08:19.970 --> 00:08:20.990
Save it.

00:08:20.990 --> 00:08:23.420
Now we can see if there is an error.

00:08:23.420 --> 00:08:25.450
It is going back to the product form,

00:08:25.450 --> 00:08:27.480
but in the request scope,

00:08:27.480 --> 00:08:29.790
it finds a moderate to good called PR,

00:08:29.790 --> 00:08:31.380
it finds another model.

00:08:31.380 --> 00:08:32.540
It's a good called category,

00:08:32.540 --> 00:08:33.860
which is the list of categories,

00:08:33.860 --> 00:08:36.810
and it finds a model execute called suppliers,

00:08:36.810 --> 00:08:38.750
which is a list off supplier object.

00:08:38.750 --> 00:08:41.340
So since it is going back over here,

00:08:41.340 --> 00:08:42.830
so this is big skipped.

00:08:42.830 --> 00:08:43.740
However,

00:08:43.740 --> 00:08:48.180
we also want the other messages to be displayed right below those text boxes.

00:08:48.180 --> 00:08:48.990
For that,

00:08:48.990 --> 00:08:51.380
let's go to the product form dot jsp,

00:08:51.380 --> 00:08:56.460
which is here and right below the HTML elements that correspond with the restrictive

00:08:56.460 --> 00:08:57.350
properties.

00:08:57.350 --> 00:08:59.400
We want to display other messages.

00:08:59.400 --> 00:09:01.550
This is common for all of them,

00:09:01.550 --> 00:09:04.080
so I'm going to give it at once for each one of them.

00:09:04.080 --> 00:09:06.310
So right below this SF call on import,

00:09:06.310 --> 00:09:12.740
I'm gonna give your sf colon errors and then say you're part equals toe product.

00:09:12.740 --> 00:09:14.050
Liam for this,

00:09:14.050 --> 00:09:15.410
of course.

00:09:15.410 --> 00:09:17.050
Product name being a string.

00:09:17.050 --> 00:09:19.740
There is no data that conversion errors here.

00:09:19.740 --> 00:09:21.600
So this is a this point in time off.

00:09:21.600 --> 00:09:22.270
No use.

00:09:22.270 --> 00:09:26.950
We also had a CSS class called Fixed Danger.

00:09:26.950 --> 00:09:30.030
This is gonna be colored in red if you want.

00:09:30.030 --> 00:09:31.840
You can also add additional styling,

00:09:31.840 --> 00:09:32.480
but for now,

00:09:32.480 --> 00:09:33.380
this is okay.

00:09:33.380 --> 00:09:36.380
I'm gonna copy this and based in each one off them,

00:09:36.380 --> 00:09:38.180
making necessary changes.

00:09:38.180 --> 00:09:38.960
For example,

00:09:38.960 --> 00:09:40.020
this is category.

00:09:40.020 --> 00:09:45.960
I'd be allowed to specify a year that this is category two or category ivy like this I'm

00:09:45.960 --> 00:09:47.880
supposed to do for each one of them.

00:09:47.880 --> 00:09:50.050
And I'm gonna do that and come back.

00:09:50.050 --> 00:09:52.580
All right.

00:09:52.580 --> 00:09:57.380
So I have given for each one off these fields with the respective property names.

00:09:57.380 --> 00:10:02.780
But the one that I am right now interested in is the unit price on off course,

00:10:02.780 --> 00:10:04.810
the units in stock and couple of others,

00:10:04.810 --> 00:10:06.620
which are numerical values.

00:10:06.620 --> 00:10:09.190
Where if I enter a non numerical value,

00:10:09.190 --> 00:10:11.980
this should display the respective errors.

00:10:11.980 --> 00:10:12.550
So,

00:10:12.550 --> 00:10:17.800
as you can see that spring would have stored all those errors in some kind of a map.

00:10:17.800 --> 00:10:20.490
And from where this is going to be read on,

00:10:20.490 --> 00:10:22.900
it's going to display their respective Adama theaters,

00:10:22.900 --> 00:10:25.990
and the other messages are completely customizable.

00:10:25.990 --> 00:10:27.930
But we'll see that in a couple of minutes.

00:10:27.930 --> 00:10:28.630
First,

00:10:28.630 --> 00:10:31.150
let's go and restart our Tomcat.

00:10:31.150 --> 00:10:33.630
Now that the server is ready,

00:10:33.630 --> 00:10:35.100
let's go back to the frozen.

00:10:35.100 --> 00:10:39.770
Submit this once again and you'll see that for each of the non numeric fields,

00:10:39.770 --> 00:10:44.760
you'll get a big and a message that correspond toe number format exception.

00:10:44.760 --> 00:10:48.340
It says your failed to convert property value off type,

00:10:48.340 --> 00:10:53.680
job ordered language string to require the type as job order lander double for property

00:10:53.680 --> 00:10:54.450
unit place.

00:10:54.450 --> 00:10:55.380
So basically,

00:10:55.380 --> 00:11:00.190
it says that there is a number of former exception in converting a SDF into a unit price,

00:11:00.190 --> 00:11:02.650
which is off Java language double.

00:11:02.650 --> 00:11:07.380
So obviously we don't want this kind of huge other messages because this is more off

00:11:07.380 --> 00:11:08.460
technical type.

00:11:08.460 --> 00:11:10.690
We want to give customers the error message.

00:11:10.690 --> 00:11:14.250
Now the other messages can be configured in a properties file,

00:11:14.250 --> 00:11:16.890
so let's go back to your project stop.

00:11:16.890 --> 00:11:20.300
Don't get for a while and go unclear.

00:11:20.300 --> 00:11:24.940
A new properties file under SRC Main Resources.

00:11:24.940 --> 00:11:26.120
We already have jelly.

00:11:26.120 --> 00:11:29.620
Bc properties WE want to know another property file.

00:11:29.620 --> 00:11:30.120
That's right.

00:11:30.120 --> 00:11:31.950
Click here and say new.

00:11:31.950 --> 00:11:33.210
I don't see a file.

00:11:33.210 --> 00:11:38.750
So let's goto other and then say your general file That's the one that I want.

00:11:38.750 --> 00:11:43.660
You can get a name off the file anything you want because we're going to specify Watch the

00:11:43.660 --> 00:11:46.390
name of the file in our at conflict.

00:11:46.390 --> 00:11:53.000
So we're gonna say you're error dash messages dot properties extension here is important.

00:11:53.000 --> 00:11:56.350
Let's give this Now here you can do keys.

00:11:56.350 --> 00:11:59.730
That can be either Something that spring is looking for.

00:11:59.730 --> 00:12:00.350
If you remember,

00:12:00.350 --> 00:12:05.010
we had a type mismatch dot exquisite type off key value pairs.

00:12:05.010 --> 00:12:07.920
It was looking for the other things our customers,

00:12:07.920 --> 00:12:09.290
the other messages we can have.

00:12:09.290 --> 00:12:10.720
So we will do that later.

00:12:10.720 --> 00:12:17.500
But for now we're gonna just your type mismatch dog John Bardot lang dot double.

00:12:17.500 --> 00:12:21.900
That means if there is any error in converting a string into a double type,

00:12:21.900 --> 00:12:24.500
this would be the message that is taken.

00:12:24.500 --> 00:12:32.190
Let's give you something like expecting a decimal value you can also narrow Don't to a

00:12:32.190 --> 00:12:33.430
particular property.

00:12:33.430 --> 00:12:33.710
Like,

00:12:33.710 --> 00:12:34.230
for example,

00:12:34.230 --> 00:12:39.290
I can say type mismatch dot unit price equals toe.

00:12:39.290 --> 00:12:44.180
I can say unit price must be a decimal value.

00:12:44.180 --> 00:12:49.180
You can also be specific toe the property core product or in our case,

00:12:49.180 --> 00:12:51.310
it's gonna be up tight,

00:12:51.310 --> 00:12:54.160
mismatched pr dot unit price,

00:12:54.160 --> 00:12:56.000
equal store and something else.

00:12:56.000 --> 00:12:57.060
Similarly,

00:12:57.060 --> 00:12:58.560
for indigenous types,

00:12:58.560 --> 00:13:06.840
I can see your type mismatch dot java dot langert vintage er and I can say expecting a

00:13:06.840 --> 00:13:07.790
whole number.

00:13:07.790 --> 00:13:10.020
You can also give it,

00:13:10.020 --> 00:13:10.340
like,

00:13:10.340 --> 00:13:16.350
miss much as a fallback message so I can say your invalid type off value.

00:13:16.350 --> 00:13:18.810
Save this on.

00:13:18.810 --> 00:13:23.880
Now we can go back to our app country where we have to lure these properties.

00:13:23.880 --> 00:13:24.010
Now,

00:13:24.010 --> 00:13:26.040
if you remember for Jerry busy properties,

00:13:26.040 --> 00:13:27.290
we used this.

00:13:27.290 --> 00:13:29.740
But for other messages,

00:13:29.740 --> 00:13:34.430
you will not be able to use this property source our property sources.

00:13:34.430 --> 00:13:39.820
What we have to do is we have to come down somewhere at the bottom at another B on this

00:13:39.820 --> 00:13:42.500
bill can be off type message source.

00:13:42.500 --> 00:13:48.250
So I'm gonna take your public message source that certain type that's important,

00:13:48.250 --> 00:13:52.150
that force from our spring from well that's got it as a message source,

00:13:52.150 --> 00:13:57.520
we need to create a being off type something called resource Bundle.

00:13:57.520 --> 00:14:01.850
Message sores are reloadable resource bundle methods.

00:14:01.850 --> 00:14:06.550
Or so we're gonna type your reloadable resource bundle message source and then I'll call it

00:14:06.550 --> 00:14:06.950
us.

00:14:06.950 --> 00:14:13.840
Let's a SRC equals toe new reloadable resource bundle methods source.

00:14:13.840 --> 00:14:17.780
And then we have to specify what is the name of the file?

00:14:17.780 --> 00:14:24.650
Say you're a sausage or set based name on you can supply based names as a bad out,

00:14:24.650 --> 00:14:26.460
So let's use this so that engaged.

00:14:26.460 --> 00:14:27.930
If I have to add one more,

00:14:27.930 --> 00:14:28.950
that will be easy.

00:14:28.950 --> 00:14:31.100
I had to see your class spot.

00:14:31.100 --> 00:14:34.860
That's where is phoned and it's got better dash messages.

00:14:34.860 --> 00:14:38.220
This the base names or not the complete filing.

00:14:38.220 --> 00:14:41.330
So we're gonna get that just the base name on it gets.

00:14:41.330 --> 00:14:42.760
If it was in a package,

00:14:42.760 --> 00:14:44.830
then you like to be the package name also.

00:14:44.830 --> 00:14:47.550
So since it is directly under resources,

00:14:47.550 --> 00:14:50.390
we have to just give other dash messages.

00:14:50.390 --> 00:14:51.840
That's what I've given over here.

00:14:51.840 --> 00:14:53.080
And if you want,

00:14:53.080 --> 00:14:57.650
you can also optionally give SRC dot set default,

00:14:57.650 --> 00:14:58.940
including toe,

00:14:58.940 --> 00:15:00.850
something like beauty of eight.

00:15:00.850 --> 00:15:03.460
This is totally optional because there's the before.

00:15:03.460 --> 00:15:04.010
Anyways,

00:15:04.010 --> 00:15:05.710
in case if you're trying to get something else,

00:15:05.710 --> 00:15:06.420
it's useful.

00:15:06.420 --> 00:15:14.280
Let's just say return a serc on our this as a B So the being that I have defined here with

00:15:14.280 --> 00:15:20.110
now override the accurate property source on tradition that we have used over here.

00:15:20.110 --> 00:15:21.320
Because of it,

00:15:21.320 --> 00:15:24.460
the GBC properties will not be read on.

00:15:24.460 --> 00:15:26.330
These things will not cause a problem.

00:15:26.330 --> 00:15:27.210
That's give it a try.

00:15:27.210 --> 00:15:28.570
And then if we get another,

00:15:28.570 --> 00:15:29.470
let's fix that.

00:15:29.470 --> 00:15:34.290
So I'm gonna start the server So the thorough has started.

00:15:34.290 --> 00:15:37.730
Let's go to consume and you see that there is a huge bunch of errors,

00:15:37.730 --> 00:15:42.970
and all it is is that it's not ableto find this particular property called dollar jelly

00:15:42.970 --> 00:15:43.750
with driver.

00:15:43.750 --> 00:15:47.300
It's unable toe lord this property from anywhere,

00:15:47.300 --> 00:15:48.750
And that's mainly because,

00:15:48.750 --> 00:15:49.750
as I mentioned,

00:15:49.750 --> 00:15:53.680
the acted properly source has bean overdone because of this,

00:15:53.680 --> 00:15:56.130
so we need both of them toe.

00:15:56.130 --> 00:16:00.490
Make sure that the property source also is being read with another being.

00:16:00.490 --> 00:16:04.880
This bill is basically have bean that loads the property sources.

00:16:04.880 --> 00:16:10.500
So let's at your public static and the reason why they study gets because this function is

00:16:10.500 --> 00:16:13.450
called even before an object off this class is created,

00:16:13.450 --> 00:16:15.880
so they are property source.

00:16:15.880 --> 00:16:16.850
Placeholder,

00:16:16.850 --> 00:16:17.530
configure.

00:16:17.530 --> 00:16:20.050
Let's get a function in the same,

00:16:20.050 --> 00:16:23.010
but probably starting with the Lord gets later on.

00:16:23.010 --> 00:16:27.860
But all I have to do is tow return a new instance off this particular class.

00:16:27.860 --> 00:16:28.910
Nothing else,

00:16:28.910 --> 00:16:31.020
except that this is supposed to be appealed.

00:16:31.020 --> 00:16:36.150
This ensures that added property source is also being executed,

00:16:36.150 --> 00:16:39.850
and this being will now read the data from error messages.

00:16:39.850 --> 00:16:43.240
So let's now give it a try on then Goto Tomcat.

00:16:43.240 --> 00:16:44.850
Restart on Once.

00:16:44.850 --> 00:16:48.190
Don't get started.

00:16:48.190 --> 00:16:49.640
Let's go back to the browser.

00:16:49.640 --> 00:16:50.430
And now,

00:16:50.430 --> 00:16:53.260
if I click on the submit changes again,

00:16:53.260 --> 00:16:58.640
you'll see that the messages have been picked up from the properties fight it is.

00:16:58.640 --> 00:17:00.720
Unit price must be a decimal value.

00:17:00.720 --> 00:17:02.510
That's because for unit price,

00:17:02.510 --> 00:17:05.100
we gave a special at a message,

00:17:05.100 --> 00:17:07.730
whereas for others you can see it's giving,

00:17:07.730 --> 00:17:09.130
expecting a whole number,

00:17:09.130 --> 00:17:10.220
expecting a whole number,

00:17:10.220 --> 00:17:11.450
expecting a whole number.

00:17:11.450 --> 00:17:12.760
But if you want,

00:17:12.760 --> 00:17:18.780
I can change this on say they're expecting an integer for units in stock.

00:17:18.780 --> 00:17:20.290
Let's give that one last try,

00:17:20.290 --> 00:17:23.220
so we go back to our property file now and then say,

00:17:23.220 --> 00:17:26.870
for individual it is that expecting a whole number?

00:17:26.870 --> 00:17:29.910
But I can say your fight mismatch.

00:17:29.910 --> 00:17:35.710
Don't I can say pr dot but that's optional.

00:17:35.710 --> 00:17:42.510
Units in stock units in stock must be an interview.

00:17:42.510 --> 00:17:48.960
So save this because we used a reloadable resource bundle message source.

00:17:48.960 --> 00:17:50.250
I should be able to know,

00:17:50.250 --> 00:17:55.760
get the new error message and you can see it says Unit in stock must be an integer.

00:17:55.760 --> 00:17:56.730
Also,

00:17:56.730 --> 00:17:58.840
if I change this to a numerical value,

00:17:58.840 --> 00:18:00.950
let's if five and then say,

00:18:00.950 --> 00:18:01.930
submit changes.

00:18:01.930 --> 00:18:04.100
Now you see the other messages corresponding,

00:18:04.100 --> 00:18:06.230
but that has gone because there's no other over here.

00:18:06.230 --> 00:18:08.750
So all these errors are server side errors,

00:18:08.750 --> 00:18:11.200
not JavaScript on the front and others.

00:18:11.200 --> 00:18:16.270
So if a type your say 55 then say submit changes,

00:18:16.270 --> 00:18:18.260
the others corresponding to that is gone.

00:18:18.260 --> 00:18:19.360
However,

00:18:19.360 --> 00:18:20.260
for example,

00:18:20.260 --> 00:18:26.850
units on artery for type your minus 98 it will still take because minus 98 in still a valid

00:18:26.850 --> 00:18:27.430
integer.

00:18:27.430 --> 00:18:28.410
There's no problem,

00:18:28.410 --> 00:18:31.580
but I don't want that to be taken.

00:18:31.580 --> 00:18:37.180
This is a custom room that I want to say Units and order units in stock reorder level as

00:18:37.180 --> 00:18:39.210
well as unit price cannot be negative.

00:18:39.210 --> 00:18:40.520
Plus,

00:18:40.520 --> 00:18:43.210
the category must be selected as well.

00:18:43.210 --> 00:18:44.540
A supply must be selected.

00:18:44.540 --> 00:18:45.300
Other raising Freeman.

00:18:45.300 --> 00:18:48.440
But the Category 80 and supply Ready will take as minus one.

00:18:48.440 --> 00:18:49.620
We don't want minus one,

00:18:49.620 --> 00:18:51.070
and apart from that product,

00:18:51.070 --> 00:18:53.680
name must be a mandatory field unit.

00:18:53.680 --> 00:18:55.660
Price is a mandatory field product.

00:18:55.660 --> 00:18:56.520
Name must have,

00:18:56.520 --> 00:18:57.580
Let's say a minimum off.

00:18:57.580 --> 00:19:02.630
Let's say five characters on all these custom rules can also be validated,

00:19:02.630 --> 00:19:08.120
but distant were only taken care off the data that condition we just detected by spring.

00:19:08.120 --> 00:19:09.180
In the next video,

00:19:09.180 --> 00:19:15.040
we're gonna learn about custom validation rules so that wrong values and empty values are

00:19:15.040 --> 00:19:17.240
not added as fields of a record.

