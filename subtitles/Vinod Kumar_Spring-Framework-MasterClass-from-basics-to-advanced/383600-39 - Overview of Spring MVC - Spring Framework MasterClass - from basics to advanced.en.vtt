WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.130
in this video.

00:00:01.130 --> 00:00:04.360
Let us understand how spring NBC works.

00:00:04.360 --> 00:00:07.750
Consider this is your Apache Tom Kit,

00:00:07.750 --> 00:00:10.550
which is also a GV in.

00:00:10.550 --> 00:00:13.070
Let's call this Estanguet over here.

00:00:13.070 --> 00:00:16.440
The first thing you have to do is to create a Sprinkle dinner,

00:00:16.440 --> 00:00:21.350
and this time we will be using something called annotation Conflict Web application context

00:00:21.350 --> 00:00:21.350
.

00:00:21.350 --> 00:00:23.080
So that's gonna be over.

00:00:23.080 --> 00:00:25.180
Sprinkle dinner over here.

00:00:25.180 --> 00:00:31.880
This will be loaded with all the beans that are configured in a file called App.

00:00:31.880 --> 00:00:32.430
Conflict.

00:00:32.430 --> 00:00:33.340
Dark Java.

00:00:33.340 --> 00:00:34.850
You can name it anything you want.

00:00:34.850 --> 00:00:36.930
So this is Finger Dealer.

00:00:36.930 --> 00:00:38.360
In our example,

00:00:38.360 --> 00:00:41.450
we have a being off type called Deal.

00:00:41.450 --> 00:00:49.080
So we named It Does Pitch Todo that got injected with a hybrid template object that got

00:00:49.080 --> 00:00:53.080
injected with a session factory on board session.

00:00:53.080 --> 00:00:55.770
Factory was injected with a data source.

00:00:55.770 --> 00:00:58.350
We also had a transaction manager.

00:00:58.350 --> 00:01:03.860
Transaction manager was also injected with the session factory and few other beats.

00:01:03.860 --> 00:01:06.090
When you configure spring NBC,

00:01:06.090 --> 00:01:08.970
they'll be additional beings from Spring,

00:01:08.970 --> 00:01:10.590
NBC AP itself.

00:01:10.590 --> 00:01:13.250
One of them is called handler mapping.

00:01:13.250 --> 00:01:14.770
So let's name of that picture,

00:01:14.770 --> 00:01:17.600
and there's another one called Viewed is over.

00:01:17.600 --> 00:01:21.630
The second thing that you have to do is tow create a dispatcher,

00:01:21.630 --> 00:01:25.770
separate and map it toe all the request that you want.

00:01:25.770 --> 00:01:27.040
So in our example,

00:01:27.040 --> 00:01:27.850
we're gonna map,

00:01:27.850 --> 00:01:28.550
dispatches,

00:01:28.550 --> 00:01:28.910
sublet.

00:01:28.910 --> 00:01:35.810
Let's call it s DS to a Europe called slash indicating any request that is coming to your

00:01:35.810 --> 00:01:38.180
application should be handled by dispatches.

00:01:38.180 --> 00:01:38.750
Select.

00:01:38.750 --> 00:01:39.830
And of course,

00:01:39.830 --> 00:01:41.930
now we're gonna write our controllers.

00:01:41.930 --> 00:01:47.620
A controller is simply a component that gets automatically loaded into single data and

00:01:47.620 --> 00:01:49.450
because it is managed by spring,

00:01:49.450 --> 00:01:55.270
it has access toe all other beings so my HDD roo can be injected toe the same thing.

00:01:55.270 --> 00:01:57.960
That's Collett US product controller.

00:01:57.960 --> 00:02:05.400
So if the user or reclined is making a request toe something called Let's a slash products

00:02:05.400 --> 00:02:11.510
off local host aged radio slash your application name slash products.

00:02:11.510 --> 00:02:15.100
The claims request is received by dispatches.

00:02:15.100 --> 00:02:20.880
Sell it because off this slash mapping over here dispatches a little will check with

00:02:20.880 --> 00:02:21.890
handler mapping.

00:02:21.890 --> 00:02:26.100
Do you have a handler object for this particular request?

00:02:26.100 --> 00:02:31.000
Handler object is nothing but a function which is annotated with request mapping.

00:02:31.000 --> 00:02:36.530
So any off these beings have functions which are annotated with a charity quest mapping

00:02:36.530 --> 00:02:41.310
they would have been scanned in the beginning by this 100 mapping and collected and stored

00:02:41.310 --> 00:02:43.170
in a map like object.

00:02:43.170 --> 00:02:49.070
So when dispatches select checks for a request called slash products,

00:02:49.070 --> 00:02:50.790
maybe they get request.

00:02:50.790 --> 00:02:52.660
It supplies that request object toe.

00:02:52.660 --> 00:02:57.860
The under mapping handler mapping will simply give a handler object back to the dispatches

00:02:57.860 --> 00:02:57.860
.

00:02:57.860 --> 00:02:57.960
A.

00:02:57.960 --> 00:02:59.550
Let in case is the handler.

00:02:59.550 --> 00:03:01.630
Mapping doesn't have that mapping.

00:03:01.630 --> 00:03:05.430
Then it's going to get the dispatches alert and value and dispatches from that then well

00:03:05.430 --> 00:03:07.280
deserved a 40 for other.

00:03:07.280 --> 00:03:13.330
But as you that your product controller has a function over here that is annotated with a

00:03:13.330 --> 00:03:14.560
direct request mapping,

00:03:14.560 --> 00:03:17.900
and it's Ural mapping is slash products that,

00:03:17.900 --> 00:03:18.710
despite its alert,

00:03:18.710 --> 00:03:22.250
is goingto go over here because that's the handler object now.

00:03:22.250 --> 00:03:26.680
And because your function in the controller has access to deal,

00:03:26.680 --> 00:03:31.800
it can now get the data from the TV and then give back toe the controller,

00:03:31.800 --> 00:03:32.970
which is the dispatches.

00:03:32.970 --> 00:03:37.590
A let along with it is also going to give a logical view name.

00:03:37.590 --> 00:03:41.400
So basically what you have here is a model on view.

00:03:41.400 --> 00:03:44.000
That information is given back to the dispatches of it,

00:03:44.000 --> 00:03:50.350
while modern leader is kept in request scope view is just a logical name.

00:03:50.350 --> 00:03:53.350
It is now given toe a result.

00:03:53.350 --> 00:03:58.800
Over here it's called The View Result were they takes the logical view name and identifies

00:03:58.800 --> 00:04:04.130
the physical file corresponding to that which happens to be a JSP in our case.

00:04:04.130 --> 00:04:05.740
So this is our view,

00:04:05.740 --> 00:04:12.050
and that view file name is given back to the dispatches.

00:04:12.050 --> 00:04:14.820
Sell it as a physical file this better.

00:04:14.820 --> 00:04:20.580
Sellers will then pass the control toe jsp off the view view combines the modern reader

00:04:20.580 --> 00:04:22.050
which is kept in the request.

00:04:22.050 --> 00:04:27.200
Cope with the HTML template gives the finished HTML back to the dispatches alert.

00:04:27.200 --> 00:04:31.060
And then this practice a little gives that output back to the user.

00:04:31.060 --> 00:04:36.730
So this is the working off spring NBC application To summarize,

00:04:36.730 --> 00:04:38.530
you have to configure two things.

00:04:38.530 --> 00:04:42.240
Number one is the stink and dinner number two is the dispatcher.

00:04:42.240 --> 00:04:46.240
Separate dispatches Select Object takes a reference of the spring container.

00:04:46.240 --> 00:04:48.660
So it knows that in the stinker Dana,

00:04:48.660 --> 00:04:53.780
there is a handle mapping that have you and then we write our controllers toe handle.

00:04:53.780 --> 00:04:54.910
The client requests

