WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.190
when you're working with Jerry.

00:00:01.190 --> 00:00:04.670
Bc applications There are a lot of boilerplate court that you can a wide.

00:00:04.670 --> 00:00:05.880
For example,

00:00:05.880 --> 00:00:09.590
if you want to get the list off on the products from a database,

00:00:09.590 --> 00:00:12.250
you first Heurtaux open a Devi connection.

00:00:12.250 --> 00:00:14.850
Then you have to create a prepared statement.

00:00:14.850 --> 00:00:17.530
If the SQL Command has a lot of question,

00:00:17.530 --> 00:00:18.640
marks are perimeters,

00:00:18.640 --> 00:00:20.410
you have to set all the parameters.

00:00:20.410 --> 00:00:23.010
Then you have to execute that.

00:00:23.010 --> 00:00:28.230
Then you have to collect the results that then you have to eat a rich over the results.

00:00:28.230 --> 00:00:28.650
That,

00:00:28.650 --> 00:00:32.920
and then for every room you're converted a row in tow,

00:00:32.920 --> 00:00:34.990
the mind object or an entity object,

00:00:34.990 --> 00:00:40.650
and then you have to collect them into an array list or some kind of a data structure.

00:00:40.650 --> 00:00:44.130
And then you have to close the results that close the statement,

00:00:44.130 --> 00:00:45.230
close the connection,

00:00:45.230 --> 00:00:50.600
handle all exceptions and then written the list off data that you collected.

00:00:50.600 --> 00:00:52.450
If you observe all these,

00:00:52.450 --> 00:00:55.990
a lot of things are common for getting a list off.

00:00:55.990 --> 00:00:59.050
Employees are getting a list off customers.

00:00:59.050 --> 00:01:03.200
The only thing that changes here would be what did the SQL command.

00:01:03.200 --> 00:01:09.680
What are the parameters that we need to assign on how I can convert a role in tow,

00:01:09.680 --> 00:01:12.650
a product or an employee or a customer object.

00:01:12.650 --> 00:01:15.560
The rest of the things are called boilerplate cord,

00:01:15.560 --> 00:01:22.350
which are like a template since spring follows almost all kinds off designed patterns.

00:01:22.350 --> 00:01:24.330
Spring follows one of the pattern,

00:01:24.330 --> 00:01:25.610
called template pattern,

00:01:25.610 --> 00:01:31.200
and has given a class called jelly busy template in orderto makers off this jelly busy

00:01:31.200 --> 00:01:31.780
template.

00:01:31.780 --> 00:01:32.210
First,

00:01:32.210 --> 00:01:32.710
we have toe.

00:01:32.710 --> 00:01:40.180
Add the jelly busy dependency so you can simply copy this particular section based it right

00:01:40.180 --> 00:01:41.010
next to that,

00:01:41.010 --> 00:01:48.300
and change this context toe Jerry BC and save this as soon as you say you will see that

00:01:48.300 --> 00:01:50.310
there is some download activity.

00:01:50.310 --> 00:01:53.440
And if I expand my maybe dependencies,

00:01:53.440 --> 00:01:55.490
you will see that there is a spring.

00:01:55.490 --> 00:02:00.320
Jerry BC Dependency has been added as the less the spring transaction.

00:02:00.320 --> 00:02:02.660
AP is also our in our bill part.

00:02:02.660 --> 00:02:03.250
Now,

00:02:03.250 --> 00:02:04.930
if a press command shift,

00:02:04.930 --> 00:02:06.180
which are controlled,

00:02:06.180 --> 00:02:07.450
shifted on windows,

00:02:07.450 --> 00:02:12.770
you get the open type in hierarchy and then take your Jerry BC template.

00:02:12.770 --> 00:02:17.150
Take open and you'd see the members off the GBC template class.

00:02:17.150 --> 00:02:21.850
Let's say we want to see only the public members off the same number one.

00:02:21.850 --> 00:02:24.030
You can see that there are a couple of constructors over here.

00:02:24.030 --> 00:02:30.790
The constructor here takes data source as a dependency coming from the GBC access er.

00:02:30.790 --> 00:02:33.220
There is also a set of data source.

00:02:33.220 --> 00:02:34.320
So in other words,

00:02:34.320 --> 00:02:37.820
you can say Jerry Busy template depends on data source.

00:02:37.820 --> 00:02:40.910
That's a dependency that we can ask spring toe inject.

00:02:40.910 --> 00:02:42.190
But apart from that,

00:02:42.190 --> 00:02:44.550
if you have a look at the functions,

00:02:44.550 --> 00:02:47.980
there are a lot of functions which help us execute.

00:02:47.980 --> 00:02:48.800
A still command,

00:02:48.800 --> 00:02:49.370
for example,

00:02:49.370 --> 00:02:51.390
here doesn't execute command.

00:02:51.390 --> 00:02:54.640
There's a bunch off quietly functions which are nothing but functions.

00:02:54.640 --> 00:02:56.970
Toe execute SQL Select statements.

00:02:56.970 --> 00:03:03.470
There is also a function called update which is used for executing any insert update delete

00:03:03.470 --> 00:03:04.110
statements.

00:03:04.110 --> 00:03:04.870
Basically,

00:03:04.870 --> 00:03:10.810
almost all the Byler Pit court is handled by this particular template class only the things

00:03:10.810 --> 00:03:12.420
that spring is not aware of,

00:03:12.420 --> 00:03:14.260
such as a skill command,

00:03:14.260 --> 00:03:20.740
the perimeters and the way spring has to convert a result in tow and the mine object that

00:03:20.740 --> 00:03:21.670
we have to supply.

00:03:21.670 --> 00:03:24.870
So let's clear the new APP configuration,

00:03:24.870 --> 00:03:30.090
where I have a data source on a daily basis template wild with each other So let's copy

00:03:30.090 --> 00:03:31.110
this conflict.

00:03:31.110 --> 00:03:37.670
Frito Up conflict for open the scene and I don't need this time the components can,

00:03:37.670 --> 00:03:40.780
because I'm not going to make use of the deal at this point in time.

00:03:40.780 --> 00:03:45.190
So let's get it off that we need all these Jerry BC values.

00:03:45.190 --> 00:03:47.290
We need a data source on.

00:03:47.290 --> 00:03:48.690
We want toe injured.

00:03:48.690 --> 00:03:51.250
This data source toe Jerry BC tempered class.

00:03:51.250 --> 00:03:54.900
So let's go and create a big on her public jelly.

00:03:54.900 --> 00:03:57.540
Bc template Let's call this as jelly.

00:03:57.540 --> 00:03:59.510
BC template itself on.

00:03:59.510 --> 00:04:03.940
Let's ask for a data source here so we can wire them manually.

00:04:03.940 --> 00:04:04.690
Let's call it US.

00:04:04.690 --> 00:04:12.190
Data source on with the return new GBC template off data source.

00:04:12.190 --> 00:04:14.100
We have to end it.

00:04:14.100 --> 00:04:18.290
This as being other resting doesn't care about this particular function.

00:04:18.290 --> 00:04:19.590
So basically,

00:04:19.590 --> 00:04:22.230
what we have done is were defined as being over here.

00:04:22.230 --> 00:04:28.180
We have injected that over here and then we are wild with this jelly busy template using

00:04:28.180 --> 00:04:31.170
the constructor on in our programs.

00:04:31.170 --> 00:04:36.370
We're gonna ask for this particular Jerry busy template and test the functionalities in the

00:04:36.370 --> 00:04:37.790
subsequent videos

