WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.580
first,

00:00:00.580 --> 00:00:07.070
let's create our aspect loss under a new package called Aspect Are They Will Be.

00:00:07.070 --> 00:00:10.250
So let's right click on an existing package New Class.

00:00:10.250 --> 00:00:12.760
But let's change the package toe.

00:00:12.760 --> 00:00:15.450
Let's they aspect or aspects.

00:00:15.450 --> 00:00:19.460
I'm gonna write different devices over here,

00:00:19.460 --> 00:00:21.010
so they're very generates.

00:00:21.010 --> 00:00:24.650
So I'm gonna give it us my custom aspect.

00:00:24.650 --> 00:00:26.140
Click on finish,

00:00:26.140 --> 00:00:29.350
and that's a little regular Jolla class.

00:00:29.350 --> 00:00:34.450
But if I want string toe instance shit this automatically I have toe mark.

00:00:34.450 --> 00:00:34.670
This,

00:00:34.670 --> 00:00:41.270
as a component on also should make this particular package as part of the competence can.

00:00:41.270 --> 00:00:43.250
So is there at the rate component.

00:00:43.250 --> 00:00:50.100
And let's go toe at Conflict four on the Aspects package in our list off base packages.

00:00:50.100 --> 00:00:53.320
So I'm gonna take your cold up in order aspects.

00:00:53.320 --> 00:00:57.530
Save this just to check if this instance is created.

00:00:57.530 --> 00:00:59.850
Let's add a constructor over here.

00:00:59.850 --> 00:01:07.700
Did the to do on Put That's the South statement saying that my custom aspect is instant

00:01:07.700 --> 00:01:12.450
shooted that's on the program to see if you are able to see that output,

00:01:12.450 --> 00:01:18.810
and you can see it is my custom aspect is instance created so spring is able to scan to the

00:01:18.810 --> 00:01:24.170
package finds that this is a component and loads that instance now that we got it,

00:01:24.170 --> 00:01:25.450
Let's get it off this one.

00:01:25.450 --> 00:01:29.390
We'll also mark this as accurate aspect.

00:01:29.390 --> 00:01:32.620
This is required by the aspect J runtime,

00:01:32.620 --> 00:01:38.450
so that it can create an interceptor on a proxy and give that to your beer whenever you're

00:01:38.450 --> 00:01:38.890
asking.

00:01:38.890 --> 00:01:39.610
For now,

00:01:39.610 --> 00:01:43.900
the aspect class contains functions which are called advisers,

00:01:43.900 --> 00:01:45.900
so that's rated public wide.

00:01:45.900 --> 00:01:50.990
Let's say we want to just type in a function called Long Before,

00:01:50.990 --> 00:01:53.100
which takes no perimeter at this time,

00:01:53.100 --> 00:01:59.730
and we simply type in a message saying that logging before they get method execution.

00:01:59.730 --> 00:02:05.200
We also want to bring out what is the actual target method that is being intercepted.

00:02:05.200 --> 00:02:07.250
But let's do that a bit later.

00:02:07.250 --> 00:02:07.950
Now,

00:02:07.950 --> 00:02:10.770
in orderto market this as an otherwise,

00:02:10.770 --> 00:02:15.000
you have to first identify what kind of advice is this going to be?

00:02:15.000 --> 00:02:20.360
It said before advise after returning a voice after throwing out ways out on our own.

00:02:20.360 --> 00:02:25.240
The toys since I mentioned in my function that it's supposed to be a long before I can say

00:02:25.240 --> 00:02:30.250
here that this is a before advice and there is an annotation called before.

00:02:30.250 --> 00:02:31.750
That's what you have to use.

00:02:31.750 --> 00:02:36.440
This is supposed to be supplied with what is called as a point guard expression.

00:02:36.440 --> 00:02:36.790
Ah,

00:02:36.790 --> 00:02:37.140
bind.

00:02:37.140 --> 00:02:40.910
Good expression is given by aspect J expression.

00:02:40.910 --> 00:02:42.790
Now that aspect expression is very,

00:02:42.790 --> 00:02:43.640
very simple.

00:02:43.640 --> 00:02:48.450
You simply have to take your execution off a matter.

00:02:48.450 --> 00:02:51.000
That method is identified by this expression.

00:02:51.000 --> 00:02:51.550
Here.

00:02:51.550 --> 00:02:54.030
The expression identifies art matters.

00:02:54.030 --> 00:02:56.570
Don't be a function in this expression.

00:02:56.570 --> 00:03:01.480
The first thing we're specify is what kind of modifier we have is the public private,

00:03:01.480 --> 00:03:02.080
etcetera.

00:03:02.080 --> 00:03:02.840
And if you're not sure,

00:03:02.840 --> 00:03:04.220
you can just put a start.

00:03:04.220 --> 00:03:09.930
So star indicates that the respect of the methods modifier it will be executed on optional

00:03:09.930 --> 00:03:10.320
origin.

00:03:10.320 --> 00:03:12.150
Tight also can be given here.

00:03:12.150 --> 00:03:13.780
If you don't mention it is okay,

00:03:13.780 --> 00:03:18.440
it'll assume that you are intercepting any matter off any religion type.

00:03:18.440 --> 00:03:19.210
Ultimately,

00:03:19.210 --> 00:03:20.520
for type here hint.

00:03:20.520 --> 00:03:25.010
That means you're only going toe intercept a method which returns an inter type.

00:03:25.010 --> 00:03:26.940
So I'm gonna skip that part.

00:03:26.940 --> 00:03:32.140
The next part in this expression is the declaring data type.

00:03:32.140 --> 00:03:33.250
For example,

00:03:33.250 --> 00:03:35.280
you have a functioning on executive,

00:03:35.280 --> 00:03:37.330
but where has it been declared in arcade?

00:03:37.330 --> 00:03:38.850
It's part of the product deal,

00:03:38.850 --> 00:03:43.890
but you also specify that the product the war is part of the quarter.

00:03:43.890 --> 00:03:47.240
We know dot deal package You can simply say quarter,

00:03:47.240 --> 00:03:50.990
we know dot dot to indicate it could be a corner.

00:03:50.990 --> 00:03:53.040
We know package itself called up,

00:03:53.040 --> 00:03:54.560
you know Nardiello Corner.

00:03:54.560 --> 00:03:56.520
Be no idea whether I am Bill.

00:03:56.520 --> 00:04:01.450
So are you can be more specific and say it is inside the Dior package,

00:04:01.450 --> 00:04:02.930
then the declaring type,

00:04:02.930 --> 00:04:04.980
which is product deal.

00:04:04.980 --> 00:04:08.350
If you want to intercept any function off any deal,

00:04:08.350 --> 00:04:09.640
then we can say here,

00:04:09.640 --> 00:04:12.370
start Deol instead of product deal.

00:04:12.370 --> 00:04:15.130
That's where these naming conventions are very important.

00:04:15.130 --> 00:04:16.060
But for the time being,

00:04:16.060 --> 00:04:21.540
let's give this product deal because that's the only deal where we have on inside this.

00:04:21.540 --> 00:04:24.140
What function you want to intercept if you want.

00:04:24.140 --> 00:04:28.290
You can be very specific and say Count are you can say Here,

00:04:28.290 --> 00:04:34.410
star all you can say get Star are probably any other white card combination that you want

00:04:34.410 --> 00:04:34.700
to use.

00:04:34.700 --> 00:04:39.330
You can try in this case and reuse only count to start with later.

00:04:39.330 --> 00:04:43.050
We want to intercept all the functions and also print the name of the functions.

00:04:43.050 --> 00:04:47.850
One last thing you mentioned is the argument to take for count.

00:04:47.850 --> 00:04:50.240
If you don't know what arguments for,

00:04:50.240 --> 00:04:56.210
County can simply put two dots to indicate there could be zero or more arguments.

00:04:56.210 --> 00:05:01.260
But if you know on you want to intercept the particular function with a specific type of

00:05:01.260 --> 00:05:02.080
arguments,

00:05:02.080 --> 00:05:04.210
you can mention that over here also,

00:05:04.210 --> 00:05:08.670
which we will take that in another example for the time being.

00:05:08.670 --> 00:05:12.760
Now the execution as victory expression is really so.

00:05:12.760 --> 00:05:15.300
If you run the court rise off no,

00:05:15.300 --> 00:05:21.040
you may not see any change at all to your dear will still corresponds to,

00:05:21.040 --> 00:05:24.350
on instance off hybrid template product dio.

00:05:24.350 --> 00:05:27.970
And this is where we actually call the con function and printed the results.

00:05:27.970 --> 00:05:30.840
So before this I should have seen the log,

00:05:30.840 --> 00:05:32.160
but I didn't see.

00:05:32.160 --> 00:05:35.670
We know that the aspect has been instance dated,

00:05:35.670 --> 00:05:36.380
but it's off.

00:05:36.380 --> 00:05:37.170
No use.

00:05:37.170 --> 00:05:42.850
One last thing we have to do is tow tell spring that it has toe load around and called

00:05:42.850 --> 00:05:44.090
aspect your on time.

00:05:44.090 --> 00:05:47.350
Once that lords out of all the beans in the container,

00:05:47.350 --> 00:05:52.450
it is only going to look for aspects and then starts looking at the noises.

00:05:52.450 --> 00:05:54.950
And based on the point that expressions were given.

00:05:54.950 --> 00:05:58.260
It's gonna create a proxy for target objects,

00:05:58.260 --> 00:06:03.200
and the way you do it is by adding an annotation called enable aspect j.

00:06:03.200 --> 00:06:03.500
R A.

00:06:03.500 --> 00:06:04.140
Proxy.

00:06:04.140 --> 00:06:05.500
Let's save this.

00:06:05.500 --> 00:06:12.450
Run the program once and see the difference this time and you see no deal is an instance

00:06:12.450 --> 00:06:15.980
off conduct sunder Proxy Dollar proxy 40.

00:06:15.980 --> 00:06:21.500
This is a dynamic proxy that got created on We have an instance off that and if you see

00:06:21.500 --> 00:06:24.350
carefully that there are 77 products.

00:06:24.350 --> 00:06:30.050
This log is coming because of my after long PC equals to the order count.

00:06:30.050 --> 00:06:31.550
This is the one that we got.

00:06:31.550 --> 00:06:33.450
But just before this,

00:06:33.450 --> 00:06:37.500
we got this logging before the target method execution.

00:06:37.500 --> 00:06:37.840
Now,

00:06:37.840 --> 00:06:38.810
if you want,

00:06:38.810 --> 00:06:43.620
you can go back to the my custom aspect of Java and start playing around here.

00:06:43.620 --> 00:06:44.180
For example,

00:06:44.180 --> 00:06:49.750
I can just put a star to indicate I'm interested in handling all kinds of functions.

00:06:49.750 --> 00:06:51.800
So if I run the program now,

00:06:51.800 --> 00:06:56.640
you should see that it gets printed off five times because I have called the award

00:06:56.640 --> 00:06:59.070
functions fight times five different functions,

00:06:59.070 --> 00:07:03.360
so you can see that for every function I called it's just spending,

00:07:03.360 --> 00:07:04.140
of course,

00:07:04.140 --> 00:07:04.880
just printing,

00:07:04.880 --> 00:07:06.420
logging before target method.

00:07:06.420 --> 00:07:07.390
Execution is off.

00:07:07.390 --> 00:07:08.100
No use.

00:07:08.100 --> 00:07:10.190
We really want toe print a lot.

00:07:10.190 --> 00:07:13.150
Some very useful information to do that.

00:07:13.150 --> 00:07:16.930
Let's add a perimeter over here called Join Point.

00:07:16.930 --> 00:07:20.160
So Joint Point is from Aspect J.

00:07:20.160 --> 00:07:23.180
Langer package that's called SJP now,

00:07:23.180 --> 00:07:26.310
since Spring is the one which in walks this function,

00:07:26.310 --> 00:07:29.290
Spring knows that it has to pass on this dependency,

00:07:29.290 --> 00:07:33.900
and spring knows the information about the function being intercepted,

00:07:33.900 --> 00:07:35.850
which is what it's called Giant Point.

00:07:35.850 --> 00:07:36.850
If you sell it,

00:07:36.850 --> 00:07:42.160
this joint point and press function key for it will open in type hierarchy,

00:07:42.160 --> 00:07:45.400
where you can see all the functions and its type hierarchy.

00:07:45.400 --> 00:07:50.260
You'll see that there are some functions like get the arguments being supplied.

00:07:50.260 --> 00:07:53.760
I'll get the kind off joint point it is.

00:07:53.760 --> 00:07:57.350
Get the method signature signature itself is another interface.

00:07:57.350 --> 00:08:02.330
Get the target objects reference on a few other functions that you have here.

00:08:02.330 --> 00:08:05.050
Let's make you have some of these functions over here.

00:08:05.050 --> 00:08:09.110
I'm gonna delete this system that are not Wendelin on.

00:08:09.110 --> 00:08:14.890
Let's first we want a print that we are intercepting a particular function so they sits out

00:08:14.890 --> 00:08:18.850
before executing GP dark.

00:08:18.850 --> 00:08:22.150
Get signature get name.

00:08:22.150 --> 00:08:26.050
So this will give me the name of the function being intercepted.

00:08:26.050 --> 00:08:30.330
If you also want to print the arguments off the political function,

00:08:30.330 --> 00:08:31.840
you can say it's assault.

00:08:31.840 --> 00:08:35.610
Arguments are and then take your JP.

00:08:35.610 --> 00:08:37.210
Don't get artists,

00:08:37.210 --> 00:08:42.620
but this is going to give you an object you interest in Dari object just like that.

00:08:42.620 --> 00:08:49.450
So what you can do is you can say you're always taught to string and then supply this gypsy

00:08:49.450 --> 00:08:49.450
.

00:08:49.450 --> 00:08:50.470
Don't get ox.

00:08:50.470 --> 00:08:51.430
Let's give it a try.

00:08:51.430 --> 00:08:54.150
By running the previous program,

00:08:54.150 --> 00:09:01.160
I noticed that for every function we're also getting the name of the function.

00:09:01.160 --> 00:09:04.050
Get all products and there are no arguments to that.

00:09:04.050 --> 00:09:07.830
And there is a function being called Get products by price rates.

00:09:07.830 --> 00:09:09.820
Documents are 50 and 200.

00:09:09.820 --> 00:09:11.220
Here is another function.

00:09:11.220 --> 00:09:14.920
Get product to which we supply the product ready one.

00:09:14.920 --> 00:09:17.050
And the same thing is being printed over here

