WEBVTT

00:00.150 --> 00:02.760
That we have a really strong point working.

00:04.200 --> 00:07.500
We have to take care of some details.

00:08.970 --> 00:14.610
It's a very poor security practice to store passwords directly on the database.

00:14.970 --> 00:24.000
When you protect your things, when you put a password on on something, you need to protect that password

00:24.000 --> 00:25.590
from everyone else.

00:26.010 --> 00:29.420
And everyone else also means do it.

00:29.730 --> 00:35.700
People that work in the websites that you visits or in the companies that you register.

00:36.510 --> 00:46.800
So as a user, as a professional, you should not really have access to any other passwords than your

00:46.800 --> 00:48.510
own, your own, your own passwords.

00:49.290 --> 00:52.630
And the way we are storing information today.

00:52.980 --> 00:54.480
It doesn't reflect that.

00:54.820 --> 00:54.990
Okay.

00:55.110 --> 01:01.950
So the next step is for us, for us to take care of this of these things.

01:03.540 --> 01:05.970
I'm going to create a new file in the config folder.

01:07.140 --> 01:08.940
I will call it being config.

01:12.120 --> 01:12.450
Okay.

01:13.350 --> 01:18.930
I will use this file to store all the bin configuration that we are going to use.

01:19.560 --> 01:25.020
First thing is to say it's a configuration class, so I'm going to annotate with this class and then

01:25.020 --> 01:26.070
I will define a bin.

01:29.930 --> 01:31.730
Uh, the friend of mine.

01:31.910 --> 01:32.870
I will call it.

01:35.850 --> 01:36.780
Password encoder.

01:44.140 --> 01:47.080
And the type would be password encoder.

01:49.830 --> 01:50.100
Okay.

01:50.730 --> 01:51.780
And this will return.

01:54.380 --> 01:55.980
The group's password.

01:56.450 --> 01:59.280
This is the main reason why we're using spring security.

02:00.350 --> 02:03.140
It's to be able to use this script password encoder.

02:03.740 --> 02:06.440
It's out of the context.

02:06.510 --> 02:11.120
It's not really needed to build a encoder ourselves.

02:11.450 --> 02:18.110
And even if we do, it's likely that it's not going to be as secure as something that is audited audited

02:18.110 --> 02:19.940
by a lot of people around the world.

02:19.970 --> 02:27.590
So we create this password and call the team and we go back to our service where we say that we have

02:27.590 --> 02:30.020
all the service logic.

02:32.660 --> 02:33.590
And what we do.

02:35.420 --> 02:37.670
Is the what private?

02:38.730 --> 02:39.270
Final.

02:40.500 --> 02:40.950
Password.

02:40.950 --> 02:41.490
Encoder.

02:42.450 --> 02:42.870
Password.

02:42.870 --> 02:43.350
Encoder.

02:45.680 --> 02:48.500
I will need to add these constructed perimeter.

02:50.030 --> 02:55.970
I do the validation if the passwords match and after that I was just to password and coder.

02:59.530 --> 03:00.100
Ankles.

03:01.230 --> 03:03.200
And I will encode this password here.

03:06.890 --> 03:07.220
Okay.

03:08.000 --> 03:09.350
The same method I had before.

03:09.650 --> 03:12.380
The only change I am doing is to encode the password.

03:14.710 --> 03:18.490
Before saving, we relaunch my application.

03:21.470 --> 03:26.930
Before I cleaned up the database from the previous tests.

03:34.100 --> 03:34.580
So.

03:37.640 --> 03:39.080
I have my table now.

03:39.350 --> 03:39.710
Okay.

03:39.770 --> 03:40.610
They build these empty.

03:42.490 --> 03:46.510
And if I register my user again with the same test case I had before.

03:47.980 --> 03:50.020
So we'd still feel as if the buzzers don't much.

03:50.020 --> 03:50.710
They don't match.

03:51.730 --> 03:52.690
And if they match.

03:55.790 --> 03:57.200
If I go to my database.

03:58.880 --> 04:01.430
My password is now saved, encoded.

04:01.910 --> 04:10.820
It's not possible to take this ash and find your to take these encoded passwords and find out your original

04:10.820 --> 04:11.240
password.

04:11.240 --> 04:11.900
And that's all.

04:12.470 --> 04:19.790
The passwords are usually secured when stored in databases.

04:22.620 --> 04:28.200
Now close because this as always, we commit.

04:29.360 --> 04:31.400
Before moving to the next step.

04:52.950 --> 04:53.400
Okay.

04:54.560 --> 04:55.250
And that's it.
