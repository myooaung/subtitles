WEBVTT

00:00.720 --> 00:06.410
We created the logging end point, we created logging service methods and we created defined by email,

00:06.420 --> 00:09.900
email and metadata on the user repository.

00:10.380 --> 00:16.590
And this implementation makes a very strong assumption, which is that the user, um, the email is

00:16.590 --> 00:16.940
unique.

00:16.950 --> 00:20.310
So we are assuming that we will never have two users be the same email.

00:20.670 --> 00:22.260
If we do, this call will fail.

00:23.700 --> 00:24.810
And this is not true.

00:24.810 --> 00:26.760
We didn't define this on the database level.

00:26.760 --> 00:32.550
If we go to the schemas profile, we don't define email as unique, so we are going to define it.

00:32.550 --> 00:36.960
Now we need to, to say that this, uh, email is unique.

00:36.960 --> 00:44.790
So alternative user add constraint, uh, uk-eu.

00:46.000 --> 00:48.160
Email Emily used to.

00:50.440 --> 00:51.920
Haskell surfer.

00:52.600 --> 00:54.130
Naming convention for these.

00:56.900 --> 00:57.140
Okay.

00:57.530 --> 00:57.980
So.

00:58.880 --> 01:07.160
And because database management is out of the scope of, of this video, I will just, uh, write an

01:07.160 --> 01:08.270
incremental script.

01:08.270 --> 01:12.980
So if I exist in that constraint, if not exists, I will use this.

01:12.980 --> 01:15.200
Um, I will use it this way.

01:15.440 --> 01:20.450
We always run the full schema, so every change that we do, we will never change back.

01:20.450 --> 01:21.800
We always change forward.

01:23.450 --> 01:27.770
So we are we added uniquely, we can now run the application.

01:29.300 --> 01:34.820
And if I try to create a user with an email that already exists, now I receive an exception.

01:35.330 --> 01:37.340
This exception is error 500.

01:37.340 --> 01:39.770
So it's a server side error.

01:40.700 --> 01:45.440
It means that something went wrong on a server, which is not really the case.

01:45.490 --> 01:49.250
We can anticipate that this will happen.

01:49.250 --> 01:53.210
This is a behavior that we are protecting, so it's not a server error.

01:53.630 --> 01:59.030
What we can do is go to the exception to this line error and we will see the exception that was thrown

01:59.510 --> 01:59.870
here.

02:01.010 --> 02:01.300
Okay.

02:01.700 --> 02:04.130
Uh, DB action execution exception.

02:05.180 --> 02:11.990
And now I will write code that will protect, uh, these exception to be thrown like that.

02:12.500 --> 02:13.220
Uh.

02:15.570 --> 02:16.350
In response.

02:17.550 --> 02:18.840
So I'll try to try to catch block.

02:24.470 --> 02:24.720
Uh.

02:24.860 --> 02:25.070
Right.

02:25.070 --> 02:25.820
To try to catch.

02:36.100 --> 02:36.760
Like this.

02:37.120 --> 02:39.730
Uh, I've got this DB action execution.

02:39.730 --> 02:40.390
Exceptional.

02:40.390 --> 02:41.920
Call it simply exception.

02:43.240 --> 02:44.890
I need to import this.

02:49.480 --> 02:50.290
Uh.

02:50.290 --> 02:51.370
Yes, I mean this.

02:56.990 --> 02:59.360
So in this case, I will import.

03:01.400 --> 03:09.920
And when this exceptional happens, I will throw a new, uh, response status, exception HTP status

03:09.920 --> 03:10.730
by the request.

03:14.200 --> 03:16.480
Email already exists.

03:24.600 --> 03:24.980
Here.

03:24.990 --> 03:27.510
Javert wants these as well.

03:29.740 --> 03:31.450
Just need to do my tribe block.

03:31.990 --> 03:37.000
Uh, I would say that my user user equals.

03:39.060 --> 03:40.350
This that have here.

03:43.280 --> 03:44.960
And I will return user.

03:46.020 --> 03:49.080
And we see that this user doesn't exist.

03:49.740 --> 03:53.520
So I need to actually move this out.

03:55.320 --> 03:57.240
I would create my user share.

04:10.090 --> 04:10.190
Okay.

04:10.270 --> 04:13.750
So now I'll try to I will try to save my user.

04:13.750 --> 04:18.850
And if I have an execution exception, I will say that the email already exists.

04:20.880 --> 04:22.560
And then I returned my user.

04:24.200 --> 04:25.670
So my point is saved.

04:26.840 --> 04:29.930
However, there is one thing that we notice.

04:29.930 --> 04:33.680
We noticed where where we code and we noticed that in the code.

04:34.340 --> 04:41.330
I have too many times the response status exception per request with this, uh, this message, this

04:41.330 --> 04:44.900
message and here I have twice the same message.

04:45.530 --> 04:47.180
So in fact, what I could do.

04:48.880 --> 04:51.850
Is to create an error package.

04:56.750 --> 04:57.890
Error or exception.

04:58.310 --> 05:07.430
I prefer to call it, uh, error and I will implement a Java class and we have 3 to 3 errors of your

05:07.430 --> 05:08.870
password and do not much error.

05:09.380 --> 05:10.640
Email already exists.

05:10.640 --> 05:11.030
Error.

05:11.030 --> 05:15.730
And if I leave the credentials error I will start with invalid.

05:16.610 --> 05:18.530
Could have been shows error.

05:21.660 --> 05:21.930
Okay.

05:23.690 --> 05:28.610
And this will extend, uh, response studies exception.

05:30.850 --> 05:34.000
And in my constructor.

05:37.790 --> 05:39.440
And we authorized this.

05:41.300 --> 05:41.590
Okay.

05:43.320 --> 05:44.280
Uh, actually, I don't.

05:44.700 --> 05:53.010
I will call, uh, this, uh, exception without, uh, without arguments.

05:53.730 --> 05:56.060
And I will create it with both requests.

05:56.070 --> 05:59.580
And in the reason he violates.

06:00.670 --> 06:01.570
Credentials.

06:10.740 --> 06:10.930
Okay.

06:10.950 --> 06:15.780
So I have my all these credentials are in my service now.

06:15.780 --> 06:16.620
I don't need this.

06:16.620 --> 06:20.310
I can just simply throw invalid credentials error.

06:22.640 --> 06:23.630
Uh.

06:24.980 --> 06:25.850
I still need my.

06:27.760 --> 06:28.240
Is your.

06:32.180 --> 06:34.400
And here are the same invalid credentials error.

06:37.420 --> 06:42.230
And he would allow me to write in a bit more succinct way.

06:42.250 --> 06:43.360
So my the reference.

06:47.050 --> 06:47.820
I'm still missing.

06:47.820 --> 06:48.920
Email already exists.

06:48.930 --> 06:49.320
Error.

06:53.060 --> 06:56.780
Email already exists at our.

07:01.290 --> 07:02.370
So extents.

07:02.780 --> 07:07.490
Response, status, exception and.

07:08.900 --> 07:12.300
In the already existing errors will be implemented.

07:15.870 --> 07:17.170
Uh.

07:25.910 --> 07:26.120
Yeah.

07:26.360 --> 07:26.710
Okay.

07:26.730 --> 07:27.990
So in.

07:30.090 --> 07:30.600
No, it's fine.

07:34.140 --> 07:37.320
Super HTP status by request.

07:40.990 --> 07:43.120
He may already ceased.

07:53.620 --> 07:56.950
And the other one missing is passwords.

08:01.180 --> 08:03.310
Don't much.

08:04.490 --> 08:04.910
After.

08:11.400 --> 08:13.590
Extends response status.

08:21.660 --> 08:24.420
But the response state the exception.

08:26.560 --> 08:28.870
Super htp.

08:31.230 --> 08:33.200
GDP status pet requests.

08:35.240 --> 08:35.780
And.

08:38.080 --> 08:41.470
Passwords do not match.

08:50.930 --> 08:52.190
It's their on line here.

08:52.190 --> 08:53.420
So it is one of the tenets.

08:55.610 --> 08:57.020
So not in my service.

08:58.400 --> 08:59.600
I just have to throw.

09:01.830 --> 09:03.660
Passwords don't match at all.

09:03.690 --> 09:05.130
I would like to name this.

09:08.300 --> 09:09.680
Two passwords do.

09:10.950 --> 09:11.760
Not much.

09:14.370 --> 09:15.780
Indeed, I will return.

09:18.130 --> 09:19.640
Emails already exists.

09:21.190 --> 09:23.440
So my code is a bit, um.

09:24.490 --> 09:24.970
Better.

09:25.960 --> 09:26.740
I was still test.

09:26.740 --> 09:27.930
I didn't relaunch.

09:27.940 --> 09:33.220
So now I'm, uh, sending trying to register new user.

09:33.970 --> 09:35.560
I get the same error.

09:36.400 --> 09:38.650
Now I will relaunch the application.

09:46.490 --> 09:50.270
If I try to resist, register and get this password.

09:50.690 --> 09:53.810
If the passwords do not match, the validation will be done in advance.

09:54.500 --> 09:55.670
So I get passwords?

09:55.700 --> 09:56.300
Not much.

09:57.140 --> 09:59.840
So I get exactly the same errors as before.

10:00.140 --> 10:01.580
And my code is a bit.

10:01.760 --> 10:02.390
Uh.

10:04.300 --> 10:05.020
He's improved.

10:06.120 --> 10:15.860
And he's a bit more prone to, uh, to, to change if, if we need, if we need to change the password

10:15.870 --> 10:21.660
to messages, for example, if we need to put capital letters or if we want to give more descriptive,

10:21.780 --> 10:25.020
uh, error message, we don't have to look everywhere in the code.

10:25.020 --> 10:27.990
We have everything in the same, in the same place.
