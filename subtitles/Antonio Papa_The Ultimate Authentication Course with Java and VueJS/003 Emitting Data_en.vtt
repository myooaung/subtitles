WEBVTT

00:00.210 --> 00:04.080
Now it's time to use two factor authentication on the frontend.

00:04.260 --> 00:08.760
So the first change that I will do either will create a new folder.

00:10.040 --> 00:17.450
Logging, because now the logging will be a complicated, uh, component.

00:17.510 --> 00:25.200
So I'll move, uh, logging that view here and, uh, make sure to also make this change, uh, in the

00:25.250 --> 00:25.670
order.

00:27.040 --> 00:34.290
India now split the logging component into, uh, multiple components.

00:34.290 --> 00:36.370
So the first change is old cut.

00:36.370 --> 00:37.390
Uh, the code here.

00:39.330 --> 00:44.910
Or create a new view component or call it login form.

00:46.310 --> 00:50.390
And I'll be the same called there.

00:51.080 --> 00:52.850
So why did I make this change?

00:53.960 --> 00:55.460
I'll explain it to.

00:56.790 --> 00:59.590
When I make all the changes.

00:59.590 --> 01:03.720
Sold copy also for the set up and the old biscuit.

01:03.720 --> 01:04.060
Here.

01:04.740 --> 01:05.070
Here.

01:05.100 --> 01:07.590
We need the data to be reactive.

01:07.650 --> 01:08.490
That is correct.

01:08.970 --> 01:11.460
But we don't need the the rotor.

01:11.970 --> 01:13.050
We need action.

01:14.910 --> 01:19.680
But no, when we log in, we will not get the bear token.

01:19.710 --> 01:21.270
So this will change.

01:22.620 --> 01:26.970
So remove both the token and the redirect.

01:27.450 --> 01:33.450
And, uh, for the moment, we want to use this component like this.

01:35.710 --> 01:36.520
Log in form.

01:38.810 --> 01:42.920
Don't forget also to import the log in form here and the components here.

01:44.450 --> 01:48.940
No, this data reactive should be added in that component.

01:48.950 --> 01:52.400
And also this submit functions should not belong here.

01:53.850 --> 01:57.750
We still need the router, but we are not using it yet.

01:58.590 --> 02:03.510
So what do we do now?

02:03.540 --> 02:07.780
In this, uh, component, we will get the.

02:08.360 --> 02:17.130
The logging data from this request and we will pass it to the indicator form which will create it in

02:17.130 --> 02:18.090
the next tutorial.

02:18.600 --> 02:30.480
So what I will do right now is either this emits and this will limit some logging data.

02:32.840 --> 02:35.240
Which is needed on the other component.

02:35.720 --> 02:39.080
And in the set up here, we need the props.

02:40.970 --> 02:43.010
So I will change this to TypeScript.

02:43.010 --> 02:44.570
So length does here.

02:45.800 --> 02:48.070
And for TypeScript we need to cast it.

02:48.080 --> 02:50.390
I will cast the properties any.

02:50.930 --> 02:53.480
And the second parameter is context.

02:54.860 --> 03:00.020
Set up context in both set up context from view.

03:00.530 --> 03:02.960
So why do we need these two values?

03:03.200 --> 03:05.070
So we don't need the props.

03:05.090 --> 03:18.350
Actually, we need just the context, because when we log in, we will use context, emit logging data,

03:18.890 --> 03:31.040
the value that we emit and the value will be response or actually the constructed directly data or not.

03:31.040 --> 03:34.310
I will not deconstructed because the data is this variable.

03:34.310 --> 03:37.940
So we will emit response that data

03:41.060 --> 03:42.290
and await here.

03:42.710 --> 03:48.440
So, uh, we will get the information from this request.

03:48.530 --> 03:49.700
We will emit it.

03:49.850 --> 03:58.010
And in our log in here we will get the, the log in data like this.

03:58.250 --> 04:08.120
And for the moment, I will just consult, log the value that we get from logging data.

04:08.120 --> 04:11.240
So we'll pass the event here.

04:12.020 --> 04:18.110
So the event is of the data that we sent in this image here.

04:18.860 --> 04:21.240
So let's try it out.

04:22.820 --> 04:23.900
Let's inspect.

04:24.380 --> 04:27.830
Let's see the console and I will try.

04:28.010 --> 04:29.180
Be it be dot com.

04:29.390 --> 04:31.250
Be here signing.

04:32.740 --> 04:35.590
And, uh, we actually get, uh.

04:37.290 --> 04:38.730
An invited credential.

04:38.730 --> 04:40.140
So that is my bed.

04:40.620 --> 04:42.750
I forgot that we change the password here.

04:43.260 --> 04:44.220
One, two, three, four.

04:44.700 --> 04:45.240
Signing.

04:46.340 --> 04:50.570
We got the correct information and we should, uh.

04:51.380 --> 04:51.760
Uh.

04:53.230 --> 04:59.050
Maybe this console.log is not working, then I probably need the function here.

05:04.140 --> 05:05.820
That I will console.log now.

05:07.230 --> 05:12.080
So the data is here and I'll just console.log it.

05:15.180 --> 05:21.450
And I'll return the function log in data like this and we will get it here.

05:24.830 --> 05:27.920
So this for sure it will work.

05:28.610 --> 05:30.470
Let's try it again.

05:30.950 --> 05:32.180
Be it b dot com.

05:32.330 --> 05:33.290
One, two, three, four.

05:34.400 --> 05:37.220
And we got a response.

05:37.640 --> 05:45.950
So this is the event from the logging form and we got it in this form.

05:46.380 --> 05:49.310
So right now we haven't done much.

05:49.850 --> 05:53.420
We will see why we need this in the next material.

05:53.570 --> 05:56.720
When we create the authenticator form.
