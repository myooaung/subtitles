WEBVTT

00:01.640 --> 00:03.590
Let's do some cleanup.

00:03.770 --> 00:05.720
First, we have this elephant point.

00:05.720 --> 00:06.440
We don't need it.

00:06.860 --> 00:08.660
So deleting.

00:12.290 --> 00:16.940
And then I mentioned in the previous video that we have a password to confirm.

00:18.330 --> 00:24.450
So we put always most of the time or passwords twice to avoid any mistake between password and password

00:24.450 --> 00:24.990
to confirm.

00:25.500 --> 00:33.140
However, we are not doing any validation here, so I will add this validation additional and I will

00:33.480 --> 00:38.940
introduce also the topic of exception and link on these frameworks on on string framework.

00:39.780 --> 00:40.440
So if.

00:43.040 --> 00:47.270
I will lose the safe way to compare objects in Java.

00:47.270 --> 00:54.950
So object equals if my registered request.

00:59.190 --> 00:59.630
Uh.

00:59.640 --> 01:02.700
You may if my request password.

01:06.020 --> 01:08.910
It doesn't match my register request buzzer to confirm.

01:12.310 --> 01:12.790
Negation.

01:12.800 --> 01:14.050
So if they don't match.

01:19.820 --> 01:24.590
Uh, not much I want to throw.

01:27.350 --> 01:29.210
A new exception.

01:29.210 --> 01:30.020
And there is a.

01:31.290 --> 01:32.790
Response status exception.

01:33.600 --> 01:34.770
It's again a.

01:38.100 --> 01:39.420
Exception in spring.

01:41.760 --> 01:43.500
And I am going to raise this exception.

01:44.910 --> 01:46.920
With HTP status badge request.

01:48.060 --> 01:51.240
And I am going to add the message.

01:51.870 --> 01:54.210
Passwords do not match.

01:56.160 --> 01:56.760
And I will.

01:59.690 --> 02:00.150
Close.

02:02.780 --> 02:03.140
Here.

02:05.230 --> 02:05.560
Okay.

02:05.980 --> 02:08.470
So I'm adding these, uh, foundation.

02:10.910 --> 02:11.930
Can leave the.

02:14.210 --> 02:14.930
There's almost.

02:16.610 --> 02:23.720
So if your passwords don't match, I raise an exception and this is the way we are in the spring MVC

02:23.720 --> 02:24.230
framework.

02:24.230 --> 02:26.150
We handle HDP orders.

02:26.360 --> 02:34.190
So every time that you are somewhere and you you find a situation where you clearly see that, okay,

02:34.190 --> 02:35.450
my request will fail.

02:36.300 --> 02:37.430
This is the way you make it.

02:37.670 --> 02:39.380
You raise the response that is exception.

02:39.740 --> 02:49.210
You identify which error type you want to send and you put a message if you if you wish.

02:49.700 --> 02:51.260
So if I run my application now.

02:53.950 --> 02:56.290
If I go to post money, if I try to create.

02:58.080 --> 02:59.820
A user with password a.

03:01.250 --> 03:02.210
User is created.

03:03.900 --> 03:05.280
If the passwords don't match.

03:07.340 --> 03:12.020
It gets status bed requests and they get the message do not match.

03:13.370 --> 03:13.700
Okay.

03:14.030 --> 03:16.810
As we specify password, do not much.

03:17.510 --> 03:18.650
The other message we get.

03:19.280 --> 03:23.730
So this is how we handle, um, exceptions within spring.

03:24.110 --> 03:27.360
And this is how we return error cases.

03:27.380 --> 03:29.150
Every time that something happens.

03:29.950 --> 03:35.300
And in this case, if I go on the database, you will see that this was, of course, raised before

03:36.170 --> 03:37.130
anything was saved.

03:37.130 --> 03:46.580
So if I open, I if I don't have the idiot, I have only the 87 that I created on the request below.
