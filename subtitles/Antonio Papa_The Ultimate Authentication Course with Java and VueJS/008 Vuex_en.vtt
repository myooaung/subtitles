WEBVTT

00:00.270 --> 00:02.730
So we successfully logged in and logged out.

00:02.910 --> 00:10.440
But we have some UI issues for the look out button here and we are requesting the user two times.

00:10.920 --> 00:12.780
So how do we fix that?

00:12.990 --> 00:16.380
We will fix that by using view X.

00:16.860 --> 00:19.350
So why do we need to view x?

00:19.350 --> 00:29.010
So view x is needed in case we want to use the for example, in our case authenticated user in the different

00:29.010 --> 00:29.850
components.

00:30.420 --> 00:35.820
So we will get the user in of the home component.

00:35.940 --> 00:44.670
But we also needed in the NAV component view X will help us send this user via events from the View

00:44.670 --> 00:45.710
X Store.

00:45.810 --> 00:49.380
So let's see how to do that first.

00:50.160 --> 00:53.520
The state is the allowed here.

00:53.520 --> 00:58.920
The default state will be authenticated to false.

00:59.550 --> 01:08.190
So first we have to create the default state and the default state is that the user is not authenticated.

01:08.790 --> 01:11.490
Then we need to add actions.

01:11.490 --> 01:17.490
So actions user in case the user is authenticated, we want to change that state.

01:18.090 --> 01:30.720
So we have to add an action which is a function set oath in our case, and this function will have the

01:30.720 --> 01:31.560
context here.

01:33.900 --> 01:40.020
And the second parameter is the health value, which will be a boolean.

01:41.700 --> 01:43.350
This is a view x.

01:45.720 --> 01:47.070
Let's put it here.

01:48.690 --> 01:51.060
Context, auction, context.

01:54.240 --> 01:56.690
And, uh, I'll put in you there.

01:56.730 --> 01:58.020
It doesn't matter.

01:58.860 --> 02:06.660
So we have the context, and we have, uh, the value here that we want to change.

02:07.230 --> 02:08.320
To change that value.

02:08.340 --> 02:10.200
We have to use it like this.

02:10.200 --> 02:17.070
We have the context, and we will commit that context to a mutation.

02:17.610 --> 02:17.940
So.

02:19.190 --> 02:19.540
In view.

02:20.550 --> 02:23.150
This state is immutable.

02:23.570 --> 02:25.760
What does immutable mean?

02:26.450 --> 02:29.660
Immutable means that we cannot change the state.

02:29.780 --> 02:31.040
Like these, for example.

02:31.370 --> 02:34.850
This state all is equal to all.

02:34.880 --> 02:37.550
No, this should not happen.

02:39.770 --> 02:44.350
In case something changes, we will create another state.

02:44.360 --> 02:47.780
And for that we need to commit to a mutation.

02:48.590 --> 02:54.440
And the first parameter is the function of the mutation.

02:54.470 --> 02:55.580
I'll call it again.

02:55.580 --> 02:57.660
Set out in the value.

02:57.660 --> 03:03.740
It will be this out boolean there and that's it for the action.

03:04.040 --> 03:10.010
Now let's go with the mutation which we need the same function set also.

03:10.640 --> 03:14.240
And here the first parameter is the state.

03:15.500 --> 03:19.610
And the second parameter is again that our variable is a boolean.

03:22.670 --> 03:29.900
And the state we can cost the state here is uh, having another variable is a boolean.

03:30.110 --> 03:31.630
We can do it like this.

03:32.350 --> 03:38.780
Now here we can set the state like this state is equal to ours.

03:40.520 --> 03:42.680
Now, let me explain it again.

03:43.880 --> 03:44.870
Uh, here.

03:45.320 --> 03:49.730
When we do the action, we will commit to a mutation.

03:50.360 --> 03:53.990
But the mutation will create a new state.

03:54.000 --> 04:01.790
It will not change this value directly here, but instead it will create a new state here, which we

04:01.790 --> 04:06.470
will assign this value and the value will be changed.

04:07.430 --> 04:14.330
If all is very confusing, we will see now that the actual usage is very simple.

04:15.020 --> 04:16.370
So let's use it.

04:16.400 --> 04:18.170
Let's go to our home component.

04:18.770 --> 04:24.710
So here the first thing that I will do is wrap this function with a trick which.

04:27.580 --> 04:30.100
So I erupted in the.

04:30.420 --> 04:39.400
The first case here is when the user is authenticated or create another variable here and this will

04:39.400 --> 04:43.590
be the store and this will be equal to youth store.

04:43.600 --> 04:52.930
So don't forget to import store from view x and now we have access to that the our variable.

04:54.620 --> 05:02.750
When the when we get the user, when we successfully get the user, it means that we will wait here

05:03.060 --> 05:03.590
store.

05:03.890 --> 05:11.750
We will dispatch an event and that event is set out in the value of the authenticated user.

05:11.960 --> 05:15.620
User is true so we are authenticated.

05:16.190 --> 05:20.960
This set out here is actually the action.

05:21.860 --> 05:27.350
So as I said, the action is something that we do.

05:27.350 --> 05:29.660
So this is the action that we want.

05:30.410 --> 05:38.110
We will make the action, we will set the value and later on that action will change to them.

05:38.150 --> 05:42.440
You will call them mutation that will actually change the state.

05:43.130 --> 05:44.300
Let's go to the home again.

05:44.810 --> 05:45.890
I'll copy this code.

05:46.550 --> 05:47.300
Base it here.

05:47.450 --> 05:52.550
In case we have an error, we will dispatch set our earth to false.

05:54.230 --> 05:56.870
And that's it for this component.

05:57.350 --> 06:03.230
Now, we dispatched an event and we should handle that event to our Navidad view.

06:04.190 --> 06:07.400
And here we want to get to that event.

06:07.400 --> 06:11.180
And what I will do is I will change this auth variable.

06:11.180 --> 06:13.760
We will not use ref anymore.

06:14.690 --> 06:18.290
Instead we will use the computer.

06:18.410 --> 06:29.630
So first let's get the store is equal to use store from view x and then the other variable now will

06:29.630 --> 06:32.930
be like this we have to get computed.

06:35.300 --> 06:38.600
So we need to import also computers from view.

06:39.200 --> 06:51.290
This will be a computer to value and this will be equal to store that state that oh, and that's it.

06:51.800 --> 06:52.910
The computer, the value.

06:53.210 --> 07:04.040
It means that, uh, we will, uh, every time this value changes, it will be reassigned to this variable.

07:04.460 --> 07:10.010
So it is a function and it is behaving just like a variable, and that's it.

07:10.040 --> 07:17.400
So now this value will be the same as the value in the inner component.

07:17.750 --> 07:20.060
So we can remove this on mounted here.

07:20.930 --> 07:25.730
We don't need it anymore and I will save it.

07:26.000 --> 07:31.010
And as you can see, we are not seeing logout anymore and we are not logged in.

07:31.460 --> 07:31.970
And the.

07:33.440 --> 07:36.870
If we fill the network to the user is called.

07:36.890 --> 07:37.700
Only once.

07:37.920 --> 07:38.420
No.

07:38.510 --> 07:39.710
Let's try to logging.

07:40.940 --> 07:45.650
So if we sign in with this user, we can see immediately.

07:45.950 --> 07:46.350
Hi.

07:46.970 --> 07:51.500
The name and the surname and the logo button is appearing.

07:51.530 --> 07:53.760
Now let's make a small fix.

07:53.780 --> 07:57.680
When we click logout, we are not actually logging out here.

07:58.070 --> 07:59.600
We have to refresh.

08:00.140 --> 08:01.940
So why is that happening?

08:02.360 --> 08:09.800
So the first thing that we need to do when we logout, which we haven't done, is we have to use the

08:10.040 --> 08:11.030
authorization.

08:12.350 --> 08:21.530
And we have to set the authorization to empty because the we removed the the refresh token, so we should

08:21.530 --> 08:23.330
remove also the access token.

08:23.720 --> 08:29.600
And the second thing is we have to dispatch again store.

08:30.290 --> 08:32.000
Uh, set dispatch.

08:32.000 --> 08:32.330
Sorry.

08:34.010 --> 08:35.690
Set of two.

08:35.690 --> 08:36.320
False.

08:38.790 --> 08:42.520
And with this, uh, our.

08:43.200 --> 08:45.810
Oh, let's go back to our home here.

08:45.870 --> 08:52.530
We need to get again the event from the navigation, which we haven't got it.

08:52.650 --> 08:54.060
So let's go to the navigation.

08:54.090 --> 08:57.150
We have to copy this part.

08:57.780 --> 09:01.050
Let's go to our home old biscuit here.

09:01.800 --> 09:03.930
A computer is out to import it.

09:04.170 --> 09:07.560
We got out and I will return it here.

09:08.310 --> 09:11.200
Oh, in the message.

09:11.220 --> 09:13.930
Now I will show it like this.

09:13.950 --> 09:18.210
So if oth then we show the message.

09:18.330 --> 09:21.780
Otherwise we will show.

09:22.650 --> 09:24.080
You are not logged in.

09:28.280 --> 09:30.170
So that should be it.

09:30.590 --> 09:31.970
Let's try to log in now.

09:34.220 --> 09:36.110
And we successfully logged in.

09:36.140 --> 09:39.590
Let's try to look out and we can see this changed.

09:39.590 --> 09:42.160
And it's saying you are not logged in.

09:42.170 --> 09:44.600
And when we refresh, it is the same.

09:44.960 --> 09:48.470
So this is how View X works.
