WEBVTT

00:02.030 --> 00:02.510
Software.

00:02.510 --> 00:10.070
The controller I need to attend to post mapping have to be for the same structure.

00:10.080 --> 00:24.110
So in this case I forgot I we lost public I forgot response method called forgot I would needs and.

00:26.370 --> 00:27.270
What about requests?

00:29.950 --> 00:34.570
That request and that we need we need the servant container here.

00:35.440 --> 00:37.840
They have to annotate these weeds, request body.

00:41.610 --> 00:43.380
HTP said.

00:43.380 --> 00:44.460
What requests?

00:46.770 --> 00:47.100
Here.

00:53.000 --> 01:00.620
And I need to define above records for God's request.

01:01.490 --> 01:03.350
In this case, it would be just email.

01:05.630 --> 01:06.530
So I forgot.

01:06.650 --> 01:07.820
I forgot to request.

01:08.480 --> 01:17.990
Just need to say to this email I forgot my password and I will have also forgot response, which in

01:17.990 --> 01:19.640
this case will be just message.

01:19.640 --> 01:21.350
So strange message.

01:23.200 --> 01:24.520
And that's it.

01:25.270 --> 01:29.080
And to implement the method, what I will create is not service.

01:29.920 --> 01:32.770
I will create the method reset password.

01:35.110 --> 01:37.600
And so create the method forgot.

01:43.990 --> 01:46.870
And I was sent the email.

01:47.590 --> 01:50.860
So for God's request to email.

01:54.020 --> 01:54.390
And.

01:55.070 --> 01:57.380
My origin URL.

01:58.070 --> 01:58.400
Okay.

01:58.880 --> 02:01.940
Now will explain this so far.

02:03.470 --> 02:04.640
What is your URL?

02:04.940 --> 02:07.070
And I will get this from the server request.

02:10.610 --> 02:13.940
I will get their origin.

02:14.090 --> 02:15.620
So this will be used.

02:19.050 --> 02:24.480
In India when we implemented the reset password.

02:25.170 --> 02:32.490
The goal is that you receive an email when when the password is reset, which will see in the coming

02:32.490 --> 02:32.820
weeks.

02:33.180 --> 02:40.860
So what we are doing here already is to take this origin request so that in the email when it says click

02:41.010 --> 02:46.070
and click on this link to reset the password, you have your origin from it.

02:46.080 --> 02:49.770
So if you are using the English frontend or if you are using

02:52.620 --> 02:55.680
other frontend, react something else.

02:55.680 --> 03:02.880
Or if you have hosted in your local machine or if you have posted online in somewhere in some other

03:02.880 --> 03:08.400
DNS, you'll always get your origin email to do the reset instead of doing it at Goddard.

03:09.870 --> 03:13.260
So we are starting this already here.

03:17.970 --> 03:18.020
A.

03:20.390 --> 03:21.020
Okay.

03:21.050 --> 03:27.460
So I can create method of authentication in the authentication service.

03:30.920 --> 03:33.170
And here it will be.

03:33.170 --> 03:34.070
Void.

03:34.160 --> 03:34.790
Yes.

03:36.620 --> 03:37.580
String email.

03:40.900 --> 03:41.230
Yes.

03:41.350 --> 03:41.680
So.

03:43.280 --> 03:47.060
I will generate a token

03:50.000 --> 03:55.490
to, to identify these uh to 25 these on, on database.

03:58.290 --> 03:59.210
How it is.

03:59.220 --> 04:03.310
You already run them to string.

04:03.500 --> 04:10.690
And I will replace and replace to this which.

04:13.270 --> 04:16.180
That's so with empty chair.

04:25.010 --> 04:25.370
Okay.

04:25.370 --> 04:30.560
And list you empty string because there's no such thing as an empty chair.

04:36.470 --> 04:40.790
So I will use this and then I will get my user.

04:47.950 --> 04:48.760
Find by email.

04:51.390 --> 04:51.840
Email.

04:55.540 --> 04:56.050
Then.

04:56.830 --> 05:01.690
Or else through, uh, not fonts.

05:01.690 --> 05:04.480
So let me see the errors that they have already.

05:04.870 --> 05:08.920
Some of them much used are not found that are.

05:08.920 --> 05:11.080
So I already have a user not folder.

05:11.110 --> 05:14.470
I'm finding the user so I'll return here.

05:15.190 --> 05:16.660
User not found error.

05:16.750 --> 05:16.990
Yeah.

05:18.400 --> 05:18.760
Okay.

05:18.760 --> 05:22.510
So if I'm not funny finding the user, I will return my exception.

05:26.530 --> 05:32.050
And I will take then this user and I add password recovery.

05:32.590 --> 05:32.950
Okay.

05:33.400 --> 05:37.180
Now create a new password recovery with the token that I just create.

05:39.070 --> 05:41.110
This is a password recovery attempt.

05:41.290 --> 05:46.840
So what I'm saying is I'm going to create, uh, a unique universal identifier.

05:48.910 --> 05:54.490
I will not use to add a dash here because we will put it later on the URL.

05:55.090 --> 05:56.470
That's why I'm replacing this.

05:56.680 --> 06:01.630
But I'm saving this token on the database as my password recovery attempt.

06:02.890 --> 06:12.160
And then I just have to add the logic of sending emails later.

06:12.610 --> 06:17.290
So for the moment, the only thing I do is use a repo save user.

06:23.310 --> 06:28.050
And that's, that's, it's my method is complete.

06:28.650 --> 06:34.170
So in the controller, I have the forgot email here.

06:36.330 --> 06:41.370
So if this is done, I will just return.

06:41.790 --> 06:45.210
And you forgot response.

06:47.390 --> 06:48.410
My message will be.

06:50.350 --> 06:51.010
Success.

06:55.320 --> 06:59.670
So I can just launch my application.

07:04.080 --> 07:07.410
I will open my database to visualize the information that I have.

07:07.410 --> 07:08.370
I can refresh.

07:12.660 --> 07:16.320
So I have no password recovery table here.

07:18.390 --> 07:19.680
I only log in with my user.

07:22.610 --> 07:23.030
Okay.

07:23.390 --> 07:26.630
And now I will say that I forgot my password.

07:27.320 --> 07:29.210
So I'll change this call.

07:30.530 --> 07:31.640
I need a title to come.

07:32.600 --> 07:34.010
I have success.

07:34.310 --> 07:43.460
So if I go to my, uh, database now, if I refresh and for user one, I have a recovery attempt that

07:43.460 --> 07:45.020
is recorded in registered here.
