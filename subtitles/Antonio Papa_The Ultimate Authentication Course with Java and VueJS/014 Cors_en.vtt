WEBVTT

00:00.330 --> 00:07.440
On what application is to handle coarse, coarse or cross resource across origin resource sharing.

00:08.100 --> 00:08.610
It's a.

00:09.610 --> 00:17.710
HDP other base mechanism that allows a server to indicate any origins other than its own from which

00:17.710 --> 00:19.750
a browser should permit loading resources.

00:20.170 --> 00:26.620
This is very common when you have a front end running in one place and the back end running somewhere

00:26.620 --> 00:26.920
else.

00:27.400 --> 00:33.430
You need to tell your browser that is okay for that front end to load resources from somewhere else.

00:34.180 --> 00:37.360
So you need to set up this.

00:37.930 --> 00:41.980
It's exactly what is defined with your domain.

00:42.010 --> 00:45.970
A dot com doesn't request a domain b dot com.

00:45.970 --> 00:50.200
And this is reality with, you know, a lot of applications.

00:50.680 --> 00:52.900
F This is reality.

00:53.200 --> 00:56.140
So we will have to implement this.

00:56.920 --> 01:00.520
We are going to do this with the security glasses.

01:02.150 --> 01:11.750
We started in the beginning, uh, already we were disabling, uh, serious RF And we will also have

01:11.750 --> 01:15.770
to, to implement this further.

01:16.740 --> 01:18.480
So we disabled CRF.

01:21.270 --> 01:22.130
Who let this.

01:23.340 --> 01:34.920
Course and to put course management in the scope of this spring configurator adapter.

01:36.120 --> 01:37.620
And here I will define it in.

01:39.700 --> 01:42.760
And in this bin I will implement.

01:44.560 --> 01:47.320
What is called course configuration sauce.

01:52.040 --> 01:53.840
They call it course configuration sauce.

01:59.830 --> 02:00.580
My final.

02:03.900 --> 02:05.170
Course configuration.

02:11.830 --> 02:14.380
And we'll set up here my course configuration.

02:19.020 --> 02:20.130
Configuration.

02:25.040 --> 02:32.270
Set the loads origins where you set the origins and they will actually write a variable here.

02:33.680 --> 02:35.810
I will call it private.

02:40.440 --> 02:46.860
Private lists be final private list of string.

02:49.230 --> 02:50.670
I'll call it a load.

02:52.180 --> 02:52.870
Origins.

03:02.800 --> 03:03.730
Not origins.

03:04.780 --> 03:09.370
My configuration also set load methods.

03:13.440 --> 03:14.530
Leaves a list of.

03:17.020 --> 03:19.390
I will allow ads.

03:20.170 --> 03:21.130
I will allow.

03:22.800 --> 03:23.520
Get.

03:23.910 --> 03:24.780
I will allow.

03:26.390 --> 03:27.050
Posts.

03:29.220 --> 03:30.780
I will allow put.

03:37.720 --> 03:38.290
Much.

03:43.220 --> 03:44.510
And I will go delete.

03:46.830 --> 03:50.340
Those are the HTP methods or GTP verbs.

03:51.570 --> 03:53.250
And this list of.

03:54.650 --> 03:55.580
Can be gleaned here.

04:02.070 --> 04:02.820
Like this.

04:04.710 --> 04:10.830
My next step will be configuration set and load credentials.

04:12.420 --> 04:12.720
To.

04:17.400 --> 04:18.390
Configuration.

04:21.050 --> 04:22.820
Set the loads and there's.

04:30.020 --> 04:35.840
Sad letters and b also least of.

04:38.050 --> 04:43.150
Uh, least of all with the law authorization ever.

04:45.160 --> 04:46.780
I would allow cash control.

04:50.890 --> 04:52.190
Allow content type.

05:06.860 --> 05:11.300
Of course, I don't know all of these others by.

05:12.880 --> 05:19.660
By art, but it's, uh, information that you can find, um, online.

05:19.660 --> 05:26.410
And sometimes it's better to document this, this kind of setup because it's is usually something that

05:26.410 --> 05:28.000
you do often.

05:29.560 --> 05:36.370
So my, your home based course configuration source.

05:37.900 --> 05:38.630
Source.

05:39.070 --> 05:39.880
Equals.

05:41.810 --> 05:43.090
You, Earl.

05:46.390 --> 05:47.920
Base configuration source.

05:51.470 --> 05:52.640
And here.

05:54.280 --> 05:57.150
Source register, of course.

05:57.160 --> 05:58.060
Configuration.

05:59.660 --> 06:01.010
My configuration above.

06:04.400 --> 06:10.950
And I need to specify the path so huge it will be everywhere.

06:10.970 --> 06:11.840
So slush.

06:13.350 --> 06:13.680
Star.

06:13.680 --> 06:14.040
Star.

06:15.700 --> 06:17.050
And I will return.

06:18.080 --> 06:18.650
My source.

06:20.800 --> 06:22.330
So I'm defining these being.

06:24.500 --> 06:33.440
It's a bit it's a long text, but it's something that you implement one time usually document and you

06:33.620 --> 06:36.920
using in all of your applications in spring.

06:37.580 --> 06:49.130
This is the way that we need to to implement, to have a course configuration working and to, uh,

06:49.850 --> 06:57.230
to allow us to have uh, or frontend or backend, uh, running, um, one way or the other.

06:58.400 --> 07:06.890
There is still one thing to do which is to define this allowed, uh, origins, because this is a string,

07:06.890 --> 07:09.380
but we are not defining this anywhere.

07:11.000 --> 07:16.290
Usually this, uh, these things, they will change, right?

07:16.310 --> 07:22.700
You can have a frontend today in Angular, but tomorrow we have a new one in, I don't know, React

07:22.700 --> 07:23.720
or something else.

07:24.290 --> 07:26.870
So what I'm going to do is to make this configurable.

07:27.230 --> 07:32.540
In fact, what I will say is that there is a configuration property.

07:34.280 --> 07:38.170
I will call it application security.

07:39.430 --> 07:41.980
Uh, mid single application.

07:44.590 --> 07:50.140
Security dot allows origins.

08:00.760 --> 08:01.030
Okay.

08:01.060 --> 08:04.630
I will actually uncomment this first, because if I run like this.

08:06.510 --> 08:06.940
Uh.

08:08.840 --> 08:13.430
Nothing will be done because these allowed origins will be empty or new.

08:13.850 --> 08:17.570
So in fact, we are not registering anything here.

08:20.010 --> 08:21.820
But we should, um.

08:23.330 --> 08:26.180
Add this and then we go to our application properties.

08:28.880 --> 08:36.320
And we define application security allows origins and then we need to add.

08:37.530 --> 08:40.080
Uh, we need to add to the values that we need.

08:41.220 --> 08:45.980
In this case, we are going to allow HTP.

08:47.460 --> 08:48.120
Two points.

08:48.130 --> 08:49.710
Slash localhost.

08:50.460 --> 08:51.190
Uh.

08:53.030 --> 08:54.440
4200.

08:59.810 --> 09:01.160
And copy paste

09:03.850 --> 09:11.630
will all three dozen and they will also allow 8080 for the multiple front ends that we are going to

09:11.630 --> 09:14.450
test this code with.

09:16.550 --> 09:18.110
So we have the.

09:19.520 --> 09:21.050
Configuration sets.

09:22.950 --> 09:25.930
It will run, so this property will be injected.

09:25.950 --> 09:33.030
We have a warning from it because it is not defined it yet.

09:33.450 --> 09:42.840
But if we go to the usages, if we go here, in fact, we will see that when this application is running,

09:42.840 --> 09:45.840
we will see Intel actually loading the values here.

09:46.260 --> 09:54.620
The ID usually will load here and we can see, uh, if we, we do a mouse over, we see what we see

09:54.660 --> 09:58.080
that what is the value that's is in the application property.

09:58.080 --> 10:00.960
So this value will be mapped when we run the application.

10:01.260 --> 10:07.110
We loaded the value if we ever need to add a new frontend, something like that we added on the configuration

10:07.110 --> 10:07.620
properties.
