WEBVTT

00:01.920 --> 00:10.230
When we created the logging endpoint, when we changed logging endpoint return and JWT, we only tackled

00:10.230 --> 00:14.230
one type of token which we are going to call access token.

00:14.700 --> 00:17.400
We still have to implement the refresh token.

00:18.360 --> 00:24.030
In fact, when I want to log in, I want to have access to two types of tokens.

00:24.450 --> 00:30.330
So one for access and another one to manage the refresh of the authorization process.

00:31.350 --> 00:37.470
To do that, I'm going to create a new type here, new Java class.

00:38.460 --> 00:40.620
I will call it logging.

00:43.210 --> 00:43.630
Okay.

00:44.710 --> 00:51.100
My logging class will have a private final token field called access token.

00:53.890 --> 00:59.230
And a private final token field called refresh token.

01:05.390 --> 01:06.050
L do.

01:06.770 --> 01:10.400
Same constructor to be a private one.

01:11.720 --> 01:13.170
I want to have a factory method.

01:13.190 --> 01:13.790
We will not.

01:14.690 --> 01:17.900
Those are objects that we don't change during their lifetime.

01:17.900 --> 01:18.590
They are created.

01:18.590 --> 01:19.160
They are returned.

01:19.160 --> 01:19.620
That's it.

01:21.260 --> 01:22.700
And then public.

01:24.630 --> 01:26.580
Static token.

01:27.950 --> 01:28.250
Uh.

01:28.250 --> 01:31.520
Not token public static logging of.

01:34.520 --> 01:36.140
And he usually if.

01:37.550 --> 01:38.630
Uh, long.

01:40.870 --> 01:41.650
User I.D..

01:51.860 --> 01:52.730
And.

01:54.200 --> 01:55.460
I think that's it's.

02:01.250 --> 02:02.460
I'm going to pass as well.

02:02.480 --> 02:03.200
Two strings.

02:03.860 --> 02:05.210
My access.

02:10.620 --> 02:11.250
Secret.

02:15.540 --> 02:18.030
And my refresh secret.

02:23.680 --> 02:25.060
And he tried to turn.

02:27.200 --> 02:28.460
And you log in.

02:34.800 --> 02:36.120
Token of.

02:39.370 --> 02:39.910
He's right.

02:51.500 --> 02:54.230
This one will be valid for one minute.

02:54.230 --> 02:56.210
My access token will be valid for one minute.

02:58.010 --> 02:58.880
Access token.

02:58.880 --> 02:59.750
Access secret.

03:02.640 --> 03:03.150
One.

03:03.180 --> 03:03.540
L.

03:07.750 --> 03:11.080
Token of user I.D..

03:12.800 --> 03:15.590
Uh, 1440.

03:15.600 --> 03:16.340
This is one day.

03:16.700 --> 03:16.970
Okay.

03:18.230 --> 03:19.880
And my refresh secret.

03:27.480 --> 03:28.680
And it sits.

03:41.690 --> 03:43.160
And I need to get through here.

03:46.670 --> 03:48.080
And they also need to get their here.

03:56.470 --> 04:00.460
So now in my oath service, I will return logging information.

04:03.710 --> 04:05.450
They'll return a login of.

04:06.860 --> 04:08.060
I will not use this.

04:08.170 --> 04:08.440
Okay.

04:08.450 --> 04:10.780
This information is on my log in class.

04:12.920 --> 04:15.140
But I will return this very long.

04:16.780 --> 04:17.590
KING okay.

04:21.750 --> 04:22.890
And they will also at this.

04:26.210 --> 04:28.670
But in the last video we also introduced.

04:29.730 --> 04:32.550
The possibility at Wendell.

04:34.390 --> 04:43.180
It went to a little too properly and all these kind of configurations to properly end and all these,

04:43.930 --> 04:46.420
uh, these situations where we need.

04:48.080 --> 04:48.890
We need this.

04:52.000 --> 04:52.780
We need this

04:55.570 --> 04:58.990
configuration, information, keys, secrets, all of that.

05:01.950 --> 05:04.200
Just you know, also the important as we are here.

05:05.020 --> 05:06.420
Just notice they are not used.

05:07.830 --> 05:16.260
So what I am going to define is that in this service, I am going to define to a private

05:19.280 --> 05:23.250
right to define a private final string.

05:26.670 --> 05:27.300
Access.

05:29.440 --> 05:30.850
Access token secret.

05:35.020 --> 05:37.480
And the private final string.

05:39.020 --> 05:39.880
Secret.

05:41.460 --> 05:42.840
Uh, refresh.

05:44.500 --> 05:45.790
Token secret.

05:46.680 --> 05:46.890
Okay.

05:49.640 --> 05:51.950
I will inject it with constructor.

05:55.870 --> 05:56.440
And we will.

05:58.130 --> 05:59.540
Intent is a bit better.

06:07.300 --> 06:09.100
So it be my string.

06:11.780 --> 06:12.560
Access tokens.

06:12.770 --> 06:14.840
Secret mastering.

06:15.290 --> 06:16.070
Refresh tokens.

06:16.070 --> 06:19.820
Secret and these dot access tokens.

06:19.820 --> 06:21.650
Secret equals access tokens.

06:21.650 --> 06:25.760
Secret these dot refresh tokens.

06:25.760 --> 06:28.520
Secret equals refresh tokens secret.

06:29.810 --> 06:34.040
So I'm not complaining, but I'm going to add this value.

06:44.470 --> 06:47.500
And I'm going to load from this from the properties as well.

06:47.530 --> 06:52.210
So I will define this and it's a string.

06:54.540 --> 06:56.940
Little sign, curly brackets.

07:00.160 --> 07:01.990
Application Dot.

07:04.010 --> 07:10.790
Security dot refresh access.

07:12.670 --> 07:15.210
Token secret.

07:21.710 --> 07:27.830
Application security refresh token.

07:30.780 --> 07:31.320
Secret.

07:33.900 --> 07:35.100
Now we just have to go.

07:37.360 --> 07:39.670
To your application properties file.

07:42.660 --> 07:42.990
Here.

07:48.470 --> 07:50.930
And we need to enter here.

07:50.970 --> 07:52.520
So one is for access.

07:52.550 --> 07:55.520
The other one is for refresh.

07:57.880 --> 07:59.740
And if we go to war.

08:02.110 --> 08:05.920
Authorization service we have for a very long piece.

08:06.100 --> 08:07.180
These disappears.

08:09.220 --> 08:10.060
Access.

08:10.480 --> 08:11.470
Talk secret.

08:17.320 --> 08:18.730
Refresh, talk and secret.

08:21.660 --> 08:22.860
In my configuration.

08:22.860 --> 08:24.900
I just started like this.

08:27.450 --> 08:27.600
I.

08:44.510 --> 08:45.760
Here like that.

08:45.800 --> 08:48.920
So access key.

08:49.610 --> 08:50.990
This will be a refresh key.

08:54.430 --> 08:55.160
Refresh scheme.

08:55.600 --> 08:58.300
So the configuration is set.

08:58.810 --> 09:03.580
I now have these two keys defining configurations if I ever need to change it for any reason.

09:04.090 --> 09:05.260
It's much easier to do so.

09:07.270 --> 09:12.550
The only thing missing is that I want to return my refresh token as.

09:16.620 --> 09:21.120
So in comptroller, I want this actually to be step looking.

09:23.450 --> 09:26.780
I want to return here, steal my access token.

09:27.080 --> 09:30.680
But in this case, this is no longer a token, is a log in information.

09:31.190 --> 09:38.930
So I want to return logging dot get access token dot token.

09:40.770 --> 09:45.930
And I want what the refresh token in the cookies.

09:47.830 --> 09:49.810
So in fact, what they need to do.

09:52.830 --> 09:59.400
Is to excess my in my several response.

10:00.090 --> 10:05.430
So in in spring this is done by injecting HDP cells.

10:05.520 --> 10:06.210
What response?

10:07.170 --> 10:08.460
This will be my response

10:11.130 --> 10:14.620
and is my response directly on the servlet container.

10:15.360 --> 10:20.010
So if this log in information, then I need to create a cookie.

10:24.570 --> 10:27.480
Cookie to be a new cookie.

10:31.480 --> 10:33.700
I will call it refresh token.

10:36.140 --> 10:42.470
And you contain my logging note, get refresh token, not a token.

10:44.690 --> 10:45.620
I will set.

10:47.710 --> 10:48.550
Max H.

10:51.610 --> 10:52.960
3600.

10:57.040 --> 10:58.230
Cookie sets.

10:58.240 --> 10:59.380
HTP only true.

11:04.030 --> 11:08.890
Cookie set path slush EPA.

11:13.640 --> 11:16.190
And the response as.

11:17.270 --> 11:17.690
Cookie.

11:19.340 --> 11:20.120
Maybe not this cookie.

11:20.270 --> 11:21.560
I lost my application.

11:24.780 --> 11:26.010
You have an error somewhere.

11:34.840 --> 11:35.140
Okay.

11:35.590 --> 11:42.790
So I launched my login and now I have two different tokens here.

11:45.230 --> 11:50.210
We can check again on, uh, Jason were talking token page.

11:53.540 --> 11:55.250
Oh, I have this one year.

12:02.500 --> 12:06.970
And we can also f the one in the cookie.

12:09.700 --> 12:10.870
We also contain a value.

12:16.340 --> 12:18.920
And this one will be different.

12:29.410 --> 12:32.410
We see that the villages are different.

12:38.830 --> 12:41.230
So it's working as we expected.
