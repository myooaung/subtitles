WEBVTT

00:00.570 --> 00:04.980
The next step on your application is to create the two factor authentication endpoint.

00:05.550 --> 00:11.030
So it's the endpoint that we are going to call to validate or two factor authentication.

00:11.040 --> 00:11.310
Okay.

00:11.760 --> 00:17.370
So starting this year, I'll just copy paste and go to the values really quick.

00:17.790 --> 00:25.890
So what I'm creating is post mapping to factor two, factor response to factor request, and my request

00:25.890 --> 00:28.500
is ID secret and code.

00:30.410 --> 00:32.700
This is now.

00:32.790 --> 00:34.010
It's what we ate.

00:34.190 --> 00:36.220
Uh, what we.

00:36.350 --> 00:36.590
A bit.

00:36.590 --> 00:39.800
What we had changed on the logging in point.

00:39.830 --> 00:46.220
So in logging point to the return ID secret and the URL we that URL we will get going to get a code.

00:46.580 --> 00:52.160
So I'm here, I'm taking the code the same secret and the same ID to do the validation.

00:52.880 --> 00:57.740
And I'm returning the token after I successfully authenticate.

01:00.600 --> 01:04.190
So this method is not yet created.

01:04.200 --> 01:12.030
I will create I will say that these returns log in and then I will implement the logic.

01:12.300 --> 01:16.170
The first thing that I am going to do is to find user by idea here.

01:17.180 --> 01:18.290
So he's a rebel.

01:20.290 --> 01:22.210
Fine by d i d.

01:24.440 --> 01:26.030
I'm missing the equals sign here.

01:28.270 --> 01:29.410
Or else.

01:30.430 --> 01:31.120
Or else.

01:32.300 --> 01:32.780
Through.

01:34.510 --> 01:35.800
If all these credentials.

01:43.060 --> 01:43.270
Okay.

01:43.300 --> 01:47.530
So I'm going to throw in credentials if this doesn't exist.

01:48.640 --> 01:51.580
The second thing that I'm going to do here.

01:54.110 --> 02:00.050
Is to actually check and, uh, and validate the secrets.

02:00.050 --> 02:06.860
So I'm going to do, uh, create a new variable DFA secret.

02:07.520 --> 02:11.390
So two factor authentication secret and this variable.

02:11.720 --> 02:12.350
I will.

02:12.740 --> 02:13.460
It will be.

02:14.460 --> 02:14.710
Uh.

02:15.030 --> 02:15.690
So if.

02:19.050 --> 02:24.570
If user dots get the FAA to secret is not empty.

02:27.360 --> 02:28.650
So if this is not true.

02:31.120 --> 02:36.940
Then in this valley it will be user that get a secret.

02:37.780 --> 02:41.290
But if it is empty, I will take the secret from the request.

02:43.300 --> 02:43.570
Okay.

02:45.730 --> 02:46.510
And the next step.

02:46.510 --> 02:48.430
It would be to validate this secret.

02:48.730 --> 02:51.670
To validate this secret, we are going to create a new bin.

02:53.230 --> 02:55.380
So in this case, I will.

02:55.930 --> 02:59.850
I will also first, I would like to change my my dependencies.

03:01.180 --> 03:07.170
So I need a new dependency here to be left or right.

03:09.880 --> 03:10.930
Some Stephens.

03:12.670 --> 03:16.630
And he will also wish because I no longer need this dependency.

03:17.620 --> 03:19.150
We can always optimize a bit.

03:19.160 --> 03:25.470
So this library also contains something that will replace what we were doing before.

03:25.480 --> 03:28.960
So we can reload this and then we will fix our issues.

03:29.350 --> 03:30.560
Back to the config.

03:30.580 --> 03:38.080
I will create a been here to be a public beam of type code verifier.

03:41.400 --> 03:45.870
And I will return a new default called Verifier.

03:46.200 --> 03:47.930
And this takes as argument.

03:47.970 --> 03:54.390
First, I will create a new default code generator and.

03:54.390 --> 03:57.630
And you system time provider.

03:57.810 --> 04:07.110
Okay this is my my being that I was going to provide my login now is broken and this is broken because

04:07.110 --> 04:09.090
I remove the liability that I was using.

04:09.330 --> 04:17.220
So here I will use a default default secret generator.

04:18.900 --> 04:21.330
And you default secret generator actually.

04:22.350 --> 04:26.850
And I will just call metal generate soil generate the secret like this.

04:30.450 --> 04:36.350
I have some cleanup to do on my imports, and after this, everything should be fine.

04:37.520 --> 04:42.770
So on my authorization service, I need to inject the bean I just created, so.

04:44.050 --> 04:45.190
Private photo.

04:47.350 --> 04:50.470
I forgot I called the bin quote verifier.

04:53.410 --> 04:54.220
Got very fire.

04:56.470 --> 05:04.150
So now that I added this code it here, I can use it here.

05:06.250 --> 05:07.480
How do if.

05:10.480 --> 05:11.570
God verify it.

05:13.100 --> 05:13.700
He's valid.

05:13.700 --> 05:15.710
Could you pass the secret?

05:16.340 --> 05:19.220
So my secret and my code.

05:21.830 --> 05:27.980
And if this is valid, actually, I'll do the opposite.

05:28.280 --> 05:28.940
Not valid.

05:29.360 --> 05:34.940
So if this is not valid, I will throw again invalid.

05:35.450 --> 05:37.880
New invalid credentials error.

05:39.920 --> 05:40.430
If it is not.

05:40.430 --> 05:41.210
Is not valid.

05:41.750 --> 05:42.950
I'm not authenticated.

05:45.350 --> 05:49.390
And then the last step, if not less.

05:50.030 --> 05:50.690
But almost.

05:51.170 --> 05:54.200
If this DFA secret.

05:54.680 --> 05:55.850
If user.

05:57.970 --> 05:58.750
If this is true.

06:01.460 --> 06:02.600
If these objects.

06:05.140 --> 06:05.860
Objects.

06:10.670 --> 06:19.520
If this is true, I want to update this and I want to do user set DFA secrets with the secret I received

06:19.520 --> 06:25.460
in request and I want to do user repo, not safe user.

06:27.910 --> 06:28.180
Okay.

06:28.540 --> 06:29.350
After this.

06:29.620 --> 06:33.940
What I'm going to do is the same thing that I did that I do in logging.

06:35.860 --> 06:37.270
This is my two factor logging.

06:37.270 --> 06:41.050
So I will do exactly the same thing as I do in logging.

06:41.200 --> 06:43.120
And everything should be fine.

06:44.780 --> 06:56.870
We can always optimize a bit and we should always correct or code when we see that we have the wrong

06:56.870 --> 06:57.230
things.

06:57.680 --> 07:03.230
So in the case of the log in, I still have one issue here.

07:03.230 --> 07:05.120
Let me try to find it out.

07:06.380 --> 07:06.710
Yes.

07:06.710 --> 07:08.390
I didn't add this to the constructor.

07:10.360 --> 07:12.960
So now it's here, we can always optimize.

07:12.970 --> 07:23.350
So in logging method we, we should, uh, we should return a new values when, uh, when to do two

07:23.350 --> 07:24.430
factor was already done.

07:24.430 --> 07:24.700
So.

07:26.720 --> 07:31.710
In fact here we impacted in.

07:31.760 --> 07:39.080
So in logging these and these should not be present if the indication two factor authentication was

07:39.080 --> 07:39.590
already done.

07:40.130 --> 07:42.620
So to do that, first, I'm going to change this.

07:43.730 --> 07:48.470
I'm going to have a different implementation here.

07:48.470 --> 08:02.990
So string OTP secret equals no string OTP URL equals no.

08:07.910 --> 08:10.040
And I will have the boolean variable here.

08:10.040 --> 08:10.490
Boolean.

08:11.180 --> 08:13.940
Generate secret.

08:20.270 --> 08:30.380
Generate ATP and here if generate ATP, I will do ATP secret's equals.

08:32.670 --> 08:33.180
This.

08:39.650 --> 08:50.150
You know to keep secret and OTP URL equals get OTP or what I all for this OTP secret so I can then delete

08:50.150 --> 08:50.630
this.

08:52.990 --> 08:58.210
And they can change this OTP secret here to OTP zero.

08:59.320 --> 09:08.830
I will change these to OTP URL and I will copy this to here as well.

09:13.140 --> 09:13.500
Like this.

09:15.100 --> 09:18.190
So my first issue is that I forgot this here.

09:22.170 --> 09:28.710
Second issue is that I'm using these methods in three places and I don't have the boolean best.

09:29.640 --> 09:44.940
So here what am I going to do in the in the log in is objects equals user dot get DFA secret empty.

09:51.960 --> 09:53.490
And here is the same.

09:53.520 --> 09:55.500
So here, refresh Texas.

09:56.220 --> 09:59.130
If we are refreshing Texas, we, uh.

09:59.130 --> 10:00.600
We are not doing this shake here.

10:01.020 --> 10:02.760
So in this case, I would just say false.

10:02.760 --> 10:04.560
We're not using the output anywhere.

10:05.220 --> 10:14.100
And in the other case, we are also, uh, doing this because we already tackled this here.

10:14.670 --> 10:16.980
So this is after we log in.

10:16.980 --> 10:20.130
So in this case, it will be oops.

10:21.810 --> 10:23.400
It will be also false.

10:28.040 --> 10:29.330
So all change is done.

10:29.990 --> 10:37.100
We are going to run the application just to see if we missed something and or two factor.

10:37.460 --> 10:40.310
Application configuration is now complete.
