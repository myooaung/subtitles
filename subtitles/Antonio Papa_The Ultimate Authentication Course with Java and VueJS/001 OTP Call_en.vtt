WEBVTT

00:00.030 --> 00:05.300
Except for for our application is to prepare it to use multi-factor authentication.

00:05.300 --> 00:10.890
In this case, two factor authentication and this discharge will be predominantly two things.

00:10.890 --> 00:17.790
We are going to change the response of the login method and we are already preparing the database to

00:17.790 --> 00:20.190
store the secret that we need.

00:20.520 --> 00:28.830
I will start actually with the database so it will be a new column that I need to add to the user table.

00:29.100 --> 00:32.760
In this case because this script is incremental, I will just add it here.

00:33.630 --> 00:35.250
So I will alter the table user.

00:35.280 --> 00:41.370
Add a column if doesn't exist called DFA secret to be a string and default to be empty.

00:42.660 --> 00:49.290
So my change in schemas then I need to change also the user class to accommodate this.

00:49.560 --> 01:00.240
So I need my getter, I need my setter and it will be a private string DFA secret.

01:04.140 --> 01:06.240
You face two factor authentication secret.

01:06.840 --> 01:07.650
I will have it here.

01:08.010 --> 01:12.510
I will need to add it to my constructor as well.

01:13.260 --> 01:18.930
So string DFA secret and I will do this.

01:20.430 --> 01:26.700
DFA Secrets equals DFA secrets in the constructor.

01:27.030 --> 01:30.300
When my factory method I will initialize these as new.

01:31.080 --> 01:40.290
And in that case, if it's not a set, then it will be saved as it is in the database.

01:41.040 --> 01:47.670
Ideally, this is well, the situation where you create the user is when you register it and we are

01:47.670 --> 01:50.940
not going to to do it immediately upon registration.

01:50.940 --> 01:57.990
So that's why we put the new here, because ideally when we create a new user, we don't immediately

01:57.990 --> 02:04.380
have a two factor authentication because there was no indication yet and it's done here.

02:05.130 --> 02:08.370
Next thing I will do is to change my logging object.

02:08.370 --> 02:13.890
So logging object is the one that I return to.

02:14.640 --> 02:21.630
To the controller, my controller, my logging in the control, uh, receives the logging object.

02:23.520 --> 02:24.600
Oops.

02:26.550 --> 02:29.850
So here my logging it receives my logging object.

02:30.420 --> 02:32.310
I can change this right now.

02:32.310 --> 02:35.940
So it will be actually an ID.

02:36.390 --> 02:44.100
So long ID and I will also change to have a string gold secret.

02:44.100 --> 02:50.100
I will return my secret and then a string called OTP auth.

02:50.610 --> 02:57.660
That's that OTP url which will be my URL here.

02:58.080 --> 03:05.010
And for this one I need to change its name so I'll use at Jason property.

03:07.360 --> 03:08.320
I would write it here.

03:08.950 --> 03:13.870
OTP Both and I'd like this.

03:13.870 --> 03:15.200
OTP you.

03:16.210 --> 03:18.970
So this is my response now.

03:18.970 --> 03:20.170
I changed my response.

03:20.950 --> 03:34.000
I need to change my service and in logging I will add here get their private final string OTP secret.

03:41.030 --> 03:43.040
And also.

03:44.110 --> 03:51.220
Get their preferred final string OTP hero.

03:54.030 --> 03:54.330
Okay.

03:55.170 --> 03:56.070
That's it.

03:56.130 --> 04:00.750
So I would love to add this to the constructed parameters.

04:02.610 --> 04:02.940
Okay.

04:03.420 --> 04:16.350
Then for OTP Secret's default value to be get generate generate general rate OTP.

04:17.740 --> 04:18.310
Secret.

04:20.530 --> 04:21.150
Like this.

04:26.630 --> 04:31.550
OC like these and for multiple oral it will be.

04:33.600 --> 04:37.050
And gets OTP.

04:39.510 --> 04:41.160
Your oral argument.

04:46.960 --> 04:50.950
Actually strong, meant to be a deep secret.

04:54.070 --> 04:59.470
And in this one it will be not this, but we'll keep secret.

05:01.910 --> 05:02.390
Here.

05:02.480 --> 05:03.530
I will do the refactor.

05:03.980 --> 05:06.350
Now, what is missing to do is.

05:09.050 --> 05:14.080
Uh var OTP secrets equals this.

05:16.500 --> 05:17.940
And this method doesn't exist.

05:18.390 --> 05:19.500
So I will create.

05:23.400 --> 05:24.270
Democrat here.

05:28.430 --> 05:29.830
And these will not return void.

05:29.840 --> 05:31.250
It'll return string.

05:32.930 --> 05:34.400
So I will use shrink here.

05:36.450 --> 05:39.120
These will also be used here.

05:42.280 --> 05:43.670
So these will go down.

05:43.690 --> 05:45.790
I prefer to have it indented like this.

05:47.050 --> 05:48.280
These will go here.

05:48.640 --> 05:50.380
These will go also here.

05:51.400 --> 05:53.780
And these methods, he's also missing.

05:53.800 --> 05:58.540
So I will generate this.

06:00.520 --> 06:01.300
There will also.

06:03.250 --> 06:03.720
Movietone.

06:06.740 --> 06:15.740
I will use an external library to do simply to do the encoding in base 32.

06:17.270 --> 06:20.240
So I would like here a Google dependency.

06:23.490 --> 06:23.880
Com.

06:23.880 --> 06:31.020
Look, Google will dot guava to be guava here.

06:33.480 --> 06:37.290
I think the latest one is 31.1 cherries to reload.

06:41.350 --> 06:46.750
So in my noggin now, I will generate a unique identifier.

06:48.340 --> 06:49.600
I will do this as a string.

06:49.840 --> 06:51.610
So we love you.

06:52.240 --> 06:56.530
Write the random two string.

06:58.540 --> 07:04.330
And then what I will do is base encoding, base 32.

07:05.310 --> 07:15.330
ENCODE never left my you id in bytes should be what it is return.

07:20.930 --> 07:23.540
If I can convert his directly to whites.

07:24.920 --> 07:25.110
Well.

07:26.000 --> 07:27.200
So it works like this.

07:28.670 --> 07:29.240
Okay.

07:29.240 --> 07:29.900
And code.

07:32.560 --> 07:32.860
Okay.

07:32.950 --> 07:34.210
This has to be returned.

07:36.020 --> 07:36.640
That's it.

07:37.000 --> 07:48.580
So then to generate the endpoint here, I will return to string format and my my string it to be on

07:48.580 --> 07:52.630
this this form so it will be OTP of.

07:58.300 --> 08:02.850
T all tip Danny to be.

08:04.480 --> 08:05.420
Secret.

08:06.700 --> 08:08.170
Sorry, percentage has.

08:10.590 --> 08:11.250
Secret.

08:14.580 --> 08:15.420
Question mark.

08:18.620 --> 08:19.280
Secrets.

08:21.030 --> 08:23.070
Equals percentage.

08:24.240 --> 08:24.720
Yes.

08:26.600 --> 08:27.650
Hands.

08:29.730 --> 08:36.950
Uh, percentage is sure equals percentage.

08:36.960 --> 08:39.630
S So we need three arguments here.

08:40.740 --> 08:46.920
First one we love and we find of are called up name.

08:49.220 --> 08:52.940
Up name equals map.

08:54.800 --> 08:57.530
We will also analyze these in the next step.

08:59.340 --> 09:04.470
So my up name, it would be my secret.

09:06.180 --> 09:09.060
And then it would be my name again.

09:11.280 --> 09:11.520
Okay.

09:11.520 --> 09:17.110
So this is done and needs to be missing.

09:17.130 --> 09:18.450
Yeah, I see this.

09:19.560 --> 09:22.080
So login is done off controller.

09:23.490 --> 09:24.810
What are we missing?

09:24.810 --> 09:30.750
So we need the ID and FDA ID to get access token.

09:31.920 --> 09:35.940
Uh, so in this case, get user id.

09:38.310 --> 09:49.890
I need to from my login, I need to get my OTP secret from the login I need to get my OTP url so if

09:49.890 --> 09:51.180
I run my application now.

09:55.460 --> 10:03.560
If I call it, I get my ID, my secrets and my or both URL.

10:03.890 --> 10:06.470
So I have here my URL.

10:09.100 --> 10:20.080
And he added My app name is not encoded so contains the space I will encode it with to be URL safe.

10:22.600 --> 10:24.130
So in my log in class.

10:25.330 --> 10:27.280
I know this by heart.

10:27.730 --> 10:29.060
So I will do here.

10:30.010 --> 10:32.140
Percentage 20.

10:38.970 --> 10:45.210
So if I run again, I have my secrets and I have my Eurotunnel generated.
