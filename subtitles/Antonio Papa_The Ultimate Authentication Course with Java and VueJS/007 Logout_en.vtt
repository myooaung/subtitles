WEBVTT

00:00.330 --> 00:00.750
No.

00:00.750 --> 00:07.860
We go to the authenticated user, but we want to change this header to just a logout button.

00:08.280 --> 00:17.070
So for that, for the moment, we will just copy this on mounted function and we will pass it to our

00:17.070 --> 00:17.370
NAV.

00:17.370 --> 00:18.900
That the view.

00:19.260 --> 00:20.790
So a lot here set up.

00:23.130 --> 00:25.680
In the old piece to this function.

00:25.920 --> 00:30.060
So don't forget to import on mount it from view.

00:31.950 --> 00:33.360
Also Axios.

00:34.160 --> 00:34.380
Uh.

00:34.410 --> 00:40.080
Here we don't need a message to the value, but we need a variable.

00:43.390 --> 00:48.640
Oh, which means if it is authenticated or not.

00:48.700 --> 00:53.680
So don't forget to import ref and by default it is false.

00:54.460 --> 00:57.340
In the end we will return oath.

00:59.670 --> 01:04.620
And we don't want to get to the authenticated user here.

01:05.660 --> 01:08.930
We will just wrap this with a trite catch.

01:13.840 --> 01:14.230
So.

01:15.310 --> 01:23.470
If it is successful, then we will set oath that the value is equal to true.

01:24.220 --> 01:26.470
So it is all authenticated.

01:27.070 --> 01:31.240
In case we fail, then we will set it to false.

01:32.610 --> 01:35.020
And now let's use this variable.

01:35.830 --> 01:38.380
So for that, we have to use the variable here.

01:38.500 --> 01:43.920
And this is the case where the user is not authenticated.

01:43.930 --> 01:45.070
So a lot here.

01:45.430 --> 01:45.850
If.

01:47.710 --> 01:48.740
Not oath.

01:50.110 --> 01:55.270
So this is the case when it is unauthenticated.

01:55.900 --> 01:56.350
The key.

01:56.390 --> 01:59.050
So when is authenticated.

01:59.290 --> 02:04.450
We need to add just a link to logout here.

02:05.830 --> 02:08.110
This will be a router link to the main page.

02:08.170 --> 02:09.060
That is correct.

02:09.070 --> 02:13.050
But we also need to add a click here.

02:13.060 --> 02:20.770
So we'll let the function here logout and when we click here.

02:23.070 --> 02:26.160
We will call the logout function.

02:26.170 --> 02:28.470
So I forgot to return it here.

02:33.190 --> 02:35.470
And we called it successfully.

02:37.300 --> 02:39.340
And for the moment, let's console.log.

02:41.960 --> 02:43.980
And we can see it here.

02:44.040 --> 02:48.350
Now we are logged in and we can see the look out button.

02:48.800 --> 02:50.840
Now let's actually logout.

02:50.840 --> 02:54.500
So we need to send the request to the backend.

02:54.710 --> 02:59.600
So I'll make this synchronous and to logout we will wait here.

03:00.830 --> 03:13.640
Actions we will post to look out will send the node data in the we need to use with credentials to through

03:14.870 --> 03:21.290
because when we logout we will remove our access token and that's it.

03:21.530 --> 03:23.780
So this is the logout function.

03:24.440 --> 03:28.910
Uh, let's try it out and we will have an error here.

03:29.900 --> 03:30.590
So first.

03:31.460 --> 03:37.460
Let's see if we remove the axis token, but we will see that we are actually seeing it right now.

03:37.880 --> 03:39.560
We have a lot of requests.

03:39.680 --> 03:45.530
So if we refresh, it is correct, but that is the error that will happen soon.

03:46.280 --> 03:49.100
Let's logout and the refresh token.

03:49.100 --> 03:59.390
It is removed and when we restart now we will see a lot of refresh requests which I will stop the server

03:59.390 --> 04:03.290
right now in the way that happening.

04:05.210 --> 04:09.920
The reason is because let's go to our interceptor.

04:11.320 --> 04:11.630
Oh.

04:11.920 --> 04:19.360
If we remove the refresh token, we will get an error of 401 with the Stardust.

04:19.380 --> 04:24.850
401 will send the request here to refresh the token.

04:24.850 --> 04:26.830
But still, we do not have the refresh token.

04:26.830 --> 04:33.850
So this request will return 401 again and this will be an infinite loop here.

04:34.450 --> 04:41.260
So we should make a change that we should call this refresh endpoint only once.

04:41.860 --> 04:44.230
And for that we need to create a new variable.

04:44.350 --> 04:46.360
Let refresh all call.

04:46.360 --> 04:51.550
It is equal to false and the the condition.

04:51.550 --> 04:58.300
Now it is like this if the thought of is 401 and we haven't refreshed.

05:00.180 --> 05:04.350
If we go here, we will set refresh.

05:05.590 --> 05:07.030
Is equal to true.

05:09.070 --> 05:13.180
And if this fails, it will go here again.

05:13.180 --> 05:18.550
But this time refresh is true, so it won't go to request again.

05:19.240 --> 05:25.690
And if we go here, we will reset the refresh to false again.

05:26.440 --> 05:27.290
And that's it.

05:27.310 --> 05:34.780
Using this way, we will refresh only once and let's try it out now.

05:36.870 --> 05:42.630
We can see that we are not requesting a lot, but we can see to user requests and to refresh request.

05:43.140 --> 05:48.720
Don't worry about this because the first time we use it on our home component and the second time we

05:48.720 --> 05:54.400
use it in our nav component, which is not okay.

05:55.340 --> 05:57.810
Uh, still, we have also this logo there.

05:57.810 --> 06:05.230
So we have some issues now which we will solve in the next tutorial by using view x.
