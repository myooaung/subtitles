WEBVTT

00:00.600 --> 00:06.960
Now that we implemented the logic or not application that will add to the database sites.

00:06.960 --> 00:15.410
So the the entity and we updated this these classes that we we we know that we will needs for the friendly

00:15.900 --> 00:20.640
the um to log out properly and for a and link to.

00:22.360 --> 00:23.380
Refresh lifecycle.

00:23.380 --> 00:29.170
Also on the application site, it's time to go to the actual implementation implementation of that logic.

00:29.590 --> 00:30.850
I will start with repository.

00:31.660 --> 00:33.940
We will need to create a new method here.

00:34.990 --> 00:40.690
To be a matter of type optional user.

00:42.700 --> 00:54.910
And I will also use the named, uh, name and methods, uh, syntax so find by I.D and token.

00:56.890 --> 00:57.910
Refresh token.

01:00.620 --> 01:08.390
And token expiration expired at.

01:11.290 --> 01:11.860
Greater.

01:13.630 --> 01:17.360
Then Long Heidi.

01:19.560 --> 01:20.130
String.

01:22.200 --> 01:23.100
Refresh token.

01:25.510 --> 01:26.530
Look all the time.

01:28.660 --> 01:30.190
Experts at.

01:32.980 --> 01:33.790
These are the methods.

01:33.910 --> 01:36.550
But he doesn't detect.

01:38.080 --> 01:40.060
This token, refresh, token.

01:40.600 --> 01:46.540
This is the syntax to to fetch a nested property.

01:48.560 --> 01:51.590
But we will see that it doesn't it doesn't work.

01:52.710 --> 01:53.670
So we could use.

01:54.800 --> 01:57.680
Uh, tokens refreshed.

01:58.760 --> 02:04.190
We will build the method, but we will see that this method, uh, doesn't work.

02:05.390 --> 02:06.770
But we'll still try.

02:07.250 --> 02:11.690
And then we will also do the correction afterwards.

02:13.610 --> 02:14.840
So we have the method here.

02:16.550 --> 02:18.890
Now we just need to go to the service.

02:20.480 --> 02:24.980
When we do the log in, we will extract this.

02:24.980 --> 02:25.520
Log in.

02:26.450 --> 02:26.960
First of all.

02:28.150 --> 02:30.490
So it would be far more akin.

02:32.470 --> 02:33.460
He calls this.

02:37.770 --> 02:44.730
Then I will user dot a token new token.

02:46.590 --> 02:48.900
From refresh tokens secrets.

02:51.980 --> 02:55.150
So from many of my talk here.

02:55.740 --> 02:56.540
Make it easier.

02:58.340 --> 02:59.390
Refresh talking.

03:02.010 --> 03:09.420
Uh, refresh j over t equals log gain dot refresh token.

03:12.020 --> 03:16.460
And you have to refresh creativity.

03:17.910 --> 03:24.030
Get token refresh to get it should that refresh.

03:24.390 --> 03:25.230
Celebrity.

03:26.160 --> 03:27.270
Gets expedition.

03:30.100 --> 03:31.750
And then I want to use a triple.

03:34.360 --> 03:36.460
Report, not say user.

03:44.940 --> 03:46.560
And we'll still return my location here.

03:49.590 --> 03:53.460
But I already know that in the logging I need to do this.

03:54.640 --> 03:55.810
Uh, these validations.

03:55.810 --> 04:06.790
So I need to save the refresh token when I, uh, added to the user and save when I build it, then

04:06.790 --> 04:11.890
refresh axis will also need to be, um, changed.

04:15.170 --> 04:17.900
So refresh exercise also needs to be to be changed.

04:18.530 --> 04:28.730
So what this means is that when I refresh, I will need to find my user and I will do I will lose the

04:28.730 --> 04:29.840
method that I just created.

04:29.840 --> 04:35.900
So find by user I.D. and it will be refresh.

04:36.530 --> 04:40.100
Get user ready id refresh with T.

04:43.090 --> 04:46.640
Get token and refresh the witty.

04:48.320 --> 04:50.390
Get inspiration.

04:52.320 --> 04:54.130
This is my method call.

04:58.080 --> 04:58.740
Or else.

05:01.550 --> 05:02.660
Because it's optional.

05:05.450 --> 05:06.350
Or else through.

05:10.440 --> 05:15.060
And here I will need to create, uh, a new exception.

05:15.060 --> 05:19.290
So an authenticated error.

05:23.680 --> 05:25.520
And there creates this.

05:27.630 --> 05:28.350
Class.

05:30.060 --> 05:30.570
Here's.

05:33.350 --> 05:37.550
To cheer as extents response.

05:37.670 --> 05:38.780
That was exception.

05:44.230 --> 05:44.770
Public.

05:48.040 --> 05:49.570
Unauthenticated error.

05:51.400 --> 05:52.330
Like these.

05:52.450 --> 05:53.230
Super.

05:55.160 --> 05:56.870
It should be starters.

05:58.920 --> 06:00.120
Uh, she.

06:00.290 --> 06:03.840
He stutters.

06:04.140 --> 06:06.180
I'm not surprised.

06:10.620 --> 06:13.740
I think this is for one not right.

06:13.770 --> 06:14.070
Yes.

06:14.070 --> 06:21.720
So we'll use this one and the message or say an authenticated.

06:24.550 --> 06:24.850
Okay.

06:24.850 --> 06:26.950
So I have my attitude, my service.

06:26.950 --> 06:27.970
I will do this fine.

06:28.780 --> 06:31.240
I will see if the refresh works.

06:32.890 --> 06:36.190
So the next thing that I need to do is in the logout.

06:41.920 --> 06:43.840
I don't have a logo yet.

06:46.620 --> 06:47.670
I will create it now.

06:49.380 --> 06:50.610
So public.

06:54.160 --> 06:58.300
Moving more goats in the logout.

06:59.200 --> 07:01.540
I will receive a refresh token as well.

07:07.310 --> 07:07.610
Here.

07:09.380 --> 07:13.780
What I'm going to do is far.

07:16.580 --> 07:18.800
Refresh shade over to.

07:21.170 --> 07:21.800
Token.

07:24.800 --> 07:25.700
She had a witty.

07:26.940 --> 07:32.790
From refreshed and secrets refresh took and secret.

07:33.720 --> 07:35.910
So I have my g t here.

07:37.950 --> 07:39.470
I need user

07:42.220 --> 07:43.530
user pool.

07:47.770 --> 07:52.620
Find by refresh that user I.D..

07:54.390 --> 07:55.710
Or else through.

07:59.100 --> 08:00.200
And authenticated.

08:00.210 --> 08:04.020
So it's these.

08:09.890 --> 08:10.250
That's.

08:16.550 --> 08:17.190
And.

08:23.980 --> 08:27.150
I will create a flag token.

08:27.160 --> 08:27.580
He's.

08:28.870 --> 08:29.320
Removed.

08:34.840 --> 08:36.910
User remove.

08:39.260 --> 08:40.520
I have a mistake here.

08:40.530 --> 08:43.430
So refactor rename.

08:45.670 --> 08:47.680
Remove token if.

08:53.480 --> 08:54.020
Token.

08:56.330 --> 09:00.920
It's a lot of function objects it calls.

09:03.620 --> 09:08.480
Token dot, refresh, token, refresh, token.

09:10.370 --> 09:16.490
So if there is a token that matches the one that I'm refreshing with related.

09:17.830 --> 09:19.750
If Token is removed.

09:22.510 --> 09:23.280
Are we safe?

09:28.070 --> 09:29.740
I need my parenthesis here.

09:29.760 --> 09:36.220
So this is user PWM.

09:37.330 --> 09:38.380
So your user.

09:41.510 --> 09:44.510
And we return tokens removed.

09:50.290 --> 09:50.670
Okay.

09:50.680 --> 09:53.140
And then on the controller.

09:54.890 --> 09:56.900
We need also to call.

09:57.890 --> 10:03.070
To the new method that we just created.

10:03.080 --> 10:04.460
We haven't done it.

10:05.880 --> 10:06.210
Yet.

10:06.210 --> 10:12.030
This time we started by implementing the service just because just because we were there.

10:12.780 --> 10:17.970
But we will need also to add in the beginning of the service.

10:18.630 --> 10:23.610
Look out and I will need to inject the cookie here as well.

10:26.390 --> 10:27.080
Let's start.

10:29.690 --> 10:30.290
Like this.

10:31.520 --> 10:33.530
And I got you refreshed again.

10:35.540 --> 10:37.760
So we will run this application.

10:40.960 --> 10:41.620
And we'll see.

10:43.320 --> 10:45.900
That we have an issue in repository.

10:56.730 --> 11:01.260
So it's firstservice because it will fail in our triple.

11:04.680 --> 11:07.630
Because we are quite getting nested.

11:08.910 --> 11:09.830
Uh, property.

11:11.540 --> 11:14.150
And we cannot, uh, we cannot do that.

11:14.160 --> 11:23.870
So spring data, A.C. doesn't allow that a spring data GPA allows, but spring data GDC doesn't allow.

11:24.560 --> 11:33.420
So we will have to implement, uh, the manually, the, the query are we leave the, the name as is,

11:34.160 --> 11:38.420
but we need to implement it, um, manually.

11:39.170 --> 11:41.230
It's not that hard.

11:41.240 --> 11:41.660
So.

11:42.690 --> 11:43.080
Query.

11:48.210 --> 11:51.480
And it will be like this.

11:54.090 --> 11:55.110
It used to.

11:56.710 --> 11:57.490
Multi-lane.

12:01.950 --> 12:02.790
Tulane string.

12:05.130 --> 12:06.120
Something very nice.

12:06.120 --> 12:08.190
That's Javelin from Peyton.

12:12.470 --> 12:23.090
To be select you do not store from user you in or join.

12:25.660 --> 12:27.370
Token tea.

12:29.500 --> 12:30.000
On.

12:30.010 --> 12:30.820
You don't.

12:33.160 --> 12:33.760
All righty.

12:38.660 --> 12:42.440
Equals T dot user.

12:54.610 --> 12:55.420
Is there.

12:55.780 --> 12:56.440
Where?

12:58.690 --> 13:00.520
You know, that's the.

13:02.220 --> 13:04.140
He calls arguments.

13:04.440 --> 13:04.680
He.

13:07.210 --> 13:07.960
Hands.

13:09.300 --> 13:11.000
T don't refresh.

13:13.900 --> 13:14.530
Token.

13:17.250 --> 13:18.990
He calls refresh token.

13:24.460 --> 13:26.410
And she thought.

13:29.930 --> 13:31.460
Experts at.

13:36.700 --> 13:38.050
Uh, greater.

13:39.990 --> 13:41.550
What are you going to?

13:43.890 --> 13:44.820
Experts.

13:46.970 --> 13:50.570
And this is my query.

13:52.410 --> 13:56.760
It doesn't protect table, but it's there.

13:58.020 --> 13:59.730
So this is the query I have.

13:59.940 --> 14:01.500
I really run my application.

14:04.190 --> 14:05.120
It's working now.

14:07.760 --> 14:09.080
So I will do my logging.

14:11.630 --> 14:12.710
I will confirm.

14:14.470 --> 14:16.480
And the database to see what they have that.

14:18.500 --> 14:21.770
So I will force refresh.

14:23.660 --> 14:26.360
I have a token table for you up on the token table.

14:27.260 --> 14:29.000
I see that I have my token.

14:31.540 --> 14:31.830
There.

14:38.620 --> 14:44.230
This is my refresh token that I will have here.

14:47.010 --> 14:48.990
And if I get.

14:50.100 --> 14:51.390
The authenticate user.

14:53.530 --> 14:54.440
Nothing changes.

14:54.460 --> 14:55.870
So I will still have.

14:56.910 --> 14:59.160
I authenticated user here.

15:00.870 --> 15:03.150
For a refreshment token, it would still work.

15:05.140 --> 15:06.010
And in this case.

15:09.130 --> 15:10.150
I still.

15:16.840 --> 15:18.160
I refreshed my access token.

15:20.190 --> 15:21.750
But my research token is the same.

15:25.230 --> 15:26.130
And he fell or got.

15:28.250 --> 15:34.160
My table is clean, so I keep the tokens that are issued.

15:34.760 --> 15:38.210
I keep them on my on the side of the application.

15:38.720 --> 15:44.330
And I see if the application is working or not.

15:44.870 --> 15:51.770
I see if the two users are logged in or not on application site.
