WEBVTT
1
00:00:00.940 --> 00:00:02.150
In the previous clips,

2
00:00:02.150 --> 00:00:06.940
when talking about the configuration options of the Gradle and Maven plugins,

3
00:00:06.940 --> 00:00:12.460
I mentioned something about using tags to include or exclude tests

4
00:00:12.460 --> 00:00:16.040
from the overall test discovery and execution.

5
00:00:16.040 --> 00:00:22.940
Well, Tag is an annotation that receives a string to tag a class or a method.

6
00:00:22.940 --> 00:00:26.540
You can apply more than one tag to an element.

7
00:00:26.540 --> 00:00:28.720
Tags can be used on interfaces,

8
00:00:28.720 --> 00:00:31.990
and you know that the classes that implement an annotated

9
00:00:31.990 --> 00:00:35.840
interface also inherit its semantics.

10
00:00:35.840 --> 00:00:40.120
A Tag annotation can also meta‑annotate another annotation,

11
00:00:40.120 --> 00:00:42.950
just like Test and ExtendWith.

12
00:00:42.950 --> 00:00:46.560
About the string value, the Tag annotation receives,

13
00:00:46.560 --> 00:00:49.540
there are a few rules you must consider.

14
00:00:49.540 --> 00:00:53.740
Well, first of all, a tag must not be null or blank.

15
00:00:53.740 --> 00:00:56.050
In fact, the string value is trimmed.

16
00:00:56.050 --> 00:01:00.600
Deleting and trailing whitespace characters are removed. And then,

17
00:01:00.600 --> 00:01:04.630
it's validated so it doesn't contain whitespaces,

18
00:01:04.630 --> 00:01:10.560
ISO control characters, or some reserved characters like a comma,

19
00:01:10.560 --> 00:01:15.840
parentheses, ampersand, pipe, and an exclamation mark.

20
00:01:15.840 --> 00:01:21.740
Remember, in Gradle, tags are configured in the useJUnitPlatform section,

21
00:01:21.740 --> 00:01:26.730
and you can specify more than one tag in a comma‑separated list,

22
00:01:26.730 --> 00:01:33.640
just like in Maven, but, in this case, inside groups or excludedGroups elements,

23
00:01:33.640 --> 00:01:36.440
which are part of the configuration element.

24
00:01:36.440 --> 00:01:41.430
In both Gradle and Maven, you can also use tag expressions,

25
00:01:41.430 --> 00:01:45.150
boolean expressions that use operators for not,

26
00:01:45.150 --> 00:01:49.350
and, and or in that order of preference,

27
00:01:49.350 --> 00:01:52.340
which can be modified with parentheses.

28
00:01:52.340 --> 00:01:56.940
In addition to this, any and none are also supported.

29
00:01:56.940 --> 00:02:02.420
They select all tests with any tags and all tests without any tags,

30
00:02:02.420 --> 00:02:03.840
respectively.

31
00:02:03.840 --> 00:02:09.440
For example, with this expression, we can select all version 1 tests,

32
00:02:09.440 --> 00:02:12.040
but not give tests.

33
00:02:12.040 --> 00:02:13.470
And with this expression,

34
00:02:13.470 --> 00:02:17.790
we can select all gift or conversion tests that are

35
00:02:17.790 --> 00:02:21.940
also tagged as version 1 or 2.

36
00:02:21.940 --> 00:02:29.140
All right, let's see how tags work, first using Gradle and then using Maven.

37
00:02:29.140 --> 00:02:33.410
I have opened the project named Tags that you can find in the

38
00:02:33.410 --> 00:02:36.440
directory for the demos of this module.

39
00:02:36.440 --> 00:02:40.510
It contains configuration files for Gradle and Maven,

40
00:02:40.510 --> 00:02:46.140
so you can import the project in your IDE using either tool.

41
00:02:46.140 --> 00:02:50.040
Let's review the Gradle configuration first.

42
00:02:50.040 --> 00:02:53.360
We are already filtering tests by package,

43
00:02:53.360 --> 00:02:59.940
so we are going to add another filter to include the test tagged with Interface,

44
00:02:59.940 --> 00:03:01.940
for example.

45
00:03:01.940 --> 00:03:02.680
This way,

46
00:03:02.680 --> 00:03:07.470
only the tests with this tag that are contained in the package

47
00:03:07.470 --> 00:03:13.740
com.wiredbraincoffee.reward.test will be executed.

48
00:03:13.740 --> 00:03:19.810
However, notice that to filter by tags you have to use useJUnitPlatform,

49
00:03:19.810 --> 00:03:21.740
not filter.

50
00:03:21.740 --> 00:03:23.940
There's no need to import the changes.

51
00:03:23.940 --> 00:03:30.800
So let's add the tag interface to the interface TestHelper in test,

52
00:03:30.800 --> 00:03:36.440
java, com.wiredbraincoffee.reward.tests.

53
00:03:36.440 --> 00:03:39.550
This way, only the classes that implement this

54
00:03:39.550 --> 00:03:43.340
interface are going to be executed.

55
00:03:43.340 --> 00:03:48.540
These are RewardByConversionServiceTest, which has one,

56
00:03:48.540 --> 00:03:49.340
two,

57
00:03:49.340 --> 00:03:54.500
three, and four tests, and RewardByGiftServiceRepeatTest,

58
00:03:54.500 --> 00:03:59.640
which has one test executed five times.

59
00:03:59.640 --> 00:04:05.840
So five tests of this class plus four of the other class plus one test

60
00:04:05.840 --> 00:04:10.480
that is defined in the interface, that's ten. However,

61
00:04:10.480 --> 00:04:14.130
the test defined in the interface is executed once

62
00:04:14.130 --> 00:04:16.310
for each class that implements it.

63
00:04:16.310 --> 00:04:23.040
So adding 1 more test gives us 11 tests that will be executed.

64
00:04:23.040 --> 00:04:27.240
Let's see.

65
00:04:27.240 --> 00:04:28.140
Great.

66
00:04:28.140 --> 00:04:36.840
Now, if we open the test report located in build, reports, tests, test,

67
00:04:36.840 --> 00:04:41.440
you'll see that Gradle executed 11 tests.

68
00:04:41.440 --> 00:04:45.720
Now let's see what happens if we add a comma, one of the

69
00:04:45.720 --> 00:04:52.040
reserved characters, to Interface. Let's execute the test task

70
00:04:52.040 --> 00:04:58.740
with the ‑‑info flag. The build failed.

71
00:04:58.740 --> 00:05:11.040
Let's see. WARNING: Configuration error: invalid syntax. Tag will be ignored.

72
00:05:11.040 --> 00:05:16.290
Now for Maven, in the pom.xml file, let's include inside the

73
00:05:16.290 --> 00:05:22.390
configuration of the Surefire plugin the element groups to include

74
00:05:22.390 --> 00:05:26.240
only the tests with the Interface tag.

75
00:05:26.240 --> 00:05:31.010
There is no need to import the changes. Now, in the terminal,

76
00:05:31.010 --> 00:05:41.440
I'm going to execute mvnw test, and Tests run: 0.

77
00:05:41.440 --> 00:05:47.540
Configuration error: invalid tag syntax.

78
00:05:47.540 --> 00:05:54.700
If we delete the comma in the tag and execute mvnw test

79
00:05:54.700 --> 00:06:04.000
one more time, there you have it. Tests run 11.

