WEBVTT
1
00:00:02.540 --> 00:00:06.280
Let us carry on and try to write a text file.

2
00:00:06.280 --> 00:00:09.990
I just created a path on a file that's called debug.log and a

3
00:00:09.990 --> 00:00:13.460
BufferedWriter using the same kind of pattern as the reader.

4
00:00:13.460 --> 00:00:17.440
And we're just going to try to write Hello world in that file.

5
00:00:17.440 --> 00:00:19.670
What is going to happen if I run this code?

6
00:00:19.670 --> 00:00:25.950
So let me just add something telling us that we did something,

7
00:00:25.950 --> 00:00:28.420
that we are done with the execution of this class.

8
00:00:28.420 --> 00:00:31.620
Let me run this code. Done has been displayed,

9
00:00:31.620 --> 00:00:37.210
and odds are you are not going to see anything in your Files folder.

10
00:00:37.210 --> 00:00:41.940
The reason is that Eclipse not refreshing its interface by default.

11
00:00:41.940 --> 00:00:45.260
So you can just click on this Files folder,

12
00:00:45.260 --> 00:00:49.090
hit the F5 key just to refresh it, and now the

13
00:00:49.090 --> 00:00:52.240
debug.log file is going to be displayed.

14
00:00:52.240 --> 00:00:54.040
What do we have in this file?

15
00:00:54.040 --> 00:00:57.260
Well, it turns out that we do not have anything.

16
00:00:57.260 --> 00:01:01.980
And if I check WritingFiles, I can see that I tried to write something in it,

17
00:01:01.980 --> 00:01:06.140
but it turns out that they did not appear in this debug.log file.

18
00:01:06.140 --> 00:01:11.540
If you see that, it means that most probably, you haven't closed your file.

19
00:01:11.540 --> 00:01:13.490
So I'm going to close it.

20
00:01:13.490 --> 00:01:15.380
Run this code again.

21
00:01:15.380 --> 00:01:16.530
Check the debug log.

22
00:01:16.530 --> 00:01:20.640
And now I have my Hello world sentence in my file.

23
00:01:20.640 --> 00:01:21.090
In fact,

24
00:01:21.090 --> 00:01:26.340
this close method is calling a flush method itself, and

25
00:01:26.340 --> 00:01:29.850
this is the flush method that is going to transfer what

26
00:01:29.850 --> 00:01:32.470
has been written to the disk.

27
00:01:32.470 --> 00:01:37.610
Now if you do not throw the exception from your main method, which is good

28
00:01:37.610 --> 00:01:44.820
practice, and call the try with resources pattern on it.

29
00:01:44.820 --> 00:01:54.790
Let us get rid of that. Write this catch clause IOException ioe and just call

30
00:01:54.790 --> 00:02:00.450
ioe printStackTrace. Now the close method from our writer is automatically

31
00:02:00.450 --> 00:02:11.000
called when exiting this try with resource block. So if I run this code and check debug.log, Hello world is still written in it.

