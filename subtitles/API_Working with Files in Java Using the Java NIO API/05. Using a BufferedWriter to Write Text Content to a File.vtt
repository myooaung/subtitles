WEBVTT
1
00:00:02.640 --> 00:00:06.170
Now that you saw how to read a text from file,

2
00:00:06.170 --> 00:00:09.680
let us see how to write text to a file.

3
00:00:09.680 --> 00:00:13.140
The pattern is almost as simple as the previous one.

4
00:00:13.140 --> 00:00:16.170
First step, you need to get a BufferedWriter.

5
00:00:16.170 --> 00:00:17.500
And we're going to see the pattern.

6
00:00:17.500 --> 00:00:21.870
Second step, well you just write to that file through this writer,

7
00:00:21.870 --> 00:00:23.300
and that's it.

8
00:00:23.300 --> 00:00:24.900
So, the pattern is the following.

9
00:00:24.900 --> 00:00:27.140
Suppose we have a path.

10
00:00:27.140 --> 00:00:32.880
You create your writer using this factory method from the Files factory class,

11
00:00:32.880 --> 00:00:35.140
passing this path as a parameter.

12
00:00:35.140 --> 00:00:39.890
And then, since this writer is just a plain ordinary writer,

13
00:00:39.890 --> 00:00:42.580
all you have to do is pass, for instance,

14
00:00:42.580 --> 00:00:47.400
a string of characters to the write method to write it to the file.

15
00:00:47.400 --> 00:00:48.140
And that's it.

16
00:00:48.140 --> 00:00:51.440
It's going to work out of the box.

17
00:00:51.440 --> 00:00:55.940
And then, once again, what could possibly go wrong with this pattern?

18
00:00:55.940 --> 00:00:57.950
Well, there are still many things, you know,

19
00:00:57.950 --> 00:01:01.390
the file that is not there that is not readable or writable,

20
00:01:01.390 --> 00:01:02.240
whatever.

21
00:01:02.240 --> 00:01:06.770
But the main issue you may encounter when dealing with this pattern is

22
00:01:06.770 --> 00:01:11.390
an issue with flushing and closing your writer properly because if you

23
00:01:11.390 --> 00:01:15.420
do not do that then you will have missing content in your file and

24
00:01:15.420 --> 00:01:18.240
this is also very confusing.

25
00:01:18.240 --> 00:01:21.040
And trust me, this is always very confusing.

26
00:01:21.040 --> 00:01:22.190
So, let us see that.

27
00:01:22.190 --> 00:01:31.000
We are going to cover that in an example directly in the IDE and see how we can deal with it.

