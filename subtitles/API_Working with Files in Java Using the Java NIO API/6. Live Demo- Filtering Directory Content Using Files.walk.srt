1
00:00:02,540 --> 00:00:06,460
There is a second pattern to visit the content of a directory,

2
00:00:06,460 --> 00:00:10,060
which is simpler, which is a walk pattern.

3
00:00:10,060 --> 00:00:14,160
So I just need to call this walk factory method from the files and factory

4
00:00:14,160 --> 00:00:20,280
class, pass the route path as a parameter, and it's going to return the stream

5
00:00:20,280 --> 00:00:25,940
of path with all the path available in the directory.

6
00:00:25,940 --> 00:00:28,340
So, for instance,

7
00:00:28,340 --> 00:00:35,330
I could count all of the elements file on directories. So let me just

8
00:00:35,330 --> 00:00:39,900
adjust this display, run this code, and indeed,

9
00:00:39,900 --> 00:00:45,130
I have 28 elements, 16 files, and 12 directories.

10
00:00:45,130 --> 00:00:49,960
If I want to separate out the files under directories,

11
00:00:49,960 --> 00:00:56,120
I need to take this walk here and, for instance,

12
00:00:56,120 --> 00:01:07,340
filter on the path checking if this path is a directory or not and count it.

13
00:01:07,340 --> 00:01:12,990
I'm going to call this p because I have a clash in my local variable names.

14
00:01:12,990 --> 00:01:21,460
This is the count of the directories. So let me just display the count of the

15
00:01:21,460 --> 00:01:27,970
directories, run this code, and indeed, I have 12 directories.

16
00:01:27,970 --> 00:01:30,730
If I want to count the number of files,

17
00:01:30,730 --> 00:01:35,730
I just need to call isRegularFile, pass p as a parameter.

18
00:01:35,730 --> 00:01:42,590
Let me just duplicate this and return the files, and you can see

19
00:01:42,590 --> 00:01:45,440
that I have the same result as previously.

20
00:01:45,440 --> 00:01:46,600
By the way,

21
00:01:46,600 --> 00:01:52,490
those are method references, so I can just write those

22
00:01:52,490 --> 00:01:58,240
down as using method references, which is going to be much more readable.

23
00:01:58,240 --> 00:02:02,520
So here is the second pattern, the walk pattern that just creates a

24
00:02:02,520 --> 00:02:05,930
stream of all the elements within a directory.

25
00:02:05,930 --> 00:02:10,940
Now you need to be aware that this stream is lazily computed, meaning

26
00:02:10,940 --> 00:02:15,540
that if you have a fine first shortcuts terminal operation on that

27
00:02:15,540 --> 00:02:24,000
stream, it will not explore all the hierarchy, thus saving on performances.

