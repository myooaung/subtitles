WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.995
So far we have setup our Marvin's her work as a slave,

00:00:04.995 --> 00:00:07.245
our agent to our Jenkins server.

00:00:07.245 --> 00:00:09.525
Now it's time to create our foster job.

00:00:09.525 --> 00:00:12.750
Nothing but we have the faster demo project, right?

00:00:12.750 --> 00:00:15.689
So that one I would like to build from the Jenkins,

00:00:15.689 --> 00:00:17.940
but the builders should happen on my mountains.

00:00:17.940 --> 00:00:19.620
However, if that is the case,

00:00:19.620 --> 00:00:21.840
we need to create our foster job.

00:00:21.840 --> 00:00:24.585
So if you are familiar with the Jenkins well and good.

00:00:24.585 --> 00:00:28.080
If not, just follow along with me because I just want to show

00:00:28.080 --> 00:00:32.775
you how usually we use Jenkins and madmen in the real-world.

00:00:32.775 --> 00:00:37.860
So I'm going to create first two demo project and it is a Maven project.

00:00:37.860 --> 00:00:38.935
Select it.

00:00:38.935 --> 00:00:40.355
And the next thing is,

00:00:40.355 --> 00:00:42.305
if you scroll down, you can see here,

00:00:42.305 --> 00:00:46.160
there is the option that restrict to whether this project can be run.

00:00:46.160 --> 00:00:47.930
Means if you want to restrict,

00:00:47.930 --> 00:00:51.470
where do you want to run this project that you can mention it over here?

00:00:51.470 --> 00:00:55.340
Of course, we need to restrict the sun onto run on our mountains. What about right way?

00:00:55.340 --> 00:00:59.525
Because it is a Java project and Marvin server only can able to run.

00:00:59.525 --> 00:01:04.895
Usually in the real world you will have multiple slip systems, are Asian systems.

00:01:04.895 --> 00:01:09.275
Each system can run one kind of application if it is a Marvin,

00:01:09.275 --> 00:01:10.625
of course we can run Java.

00:01:10.625 --> 00:01:11.750
If it is a NodeJS,

00:01:11.750 --> 00:01:13.115
it runs on other system.

00:01:13.115 --> 00:01:15.890
If it is a dotnet are C-sharp publication it

00:01:15.890 --> 00:01:19.085
runs on another build server like that it would be.

00:01:19.085 --> 00:01:23.885
So in this case we want to restrict it java applications to run on our server.

00:01:23.885 --> 00:01:28.235
So selected this application and we need to search for our Marvin system.

00:01:28.235 --> 00:01:30.890
So we have named it as Marvin build server.

00:01:30.890 --> 00:01:32.615
So there is no space.

00:01:32.615 --> 00:01:34.640
Marvin build server.

00:01:34.640 --> 00:01:38.734
Once this is done, we need to do the URL of our application.

00:01:38.734 --> 00:01:40.835
So we have our code in our GitHub.

00:01:40.835 --> 00:01:42.335
So select the good.

00:01:42.335 --> 00:01:45.005
And I have already opened our GitHub URL.

00:01:45.005 --> 00:01:48.920
So that is ready for us to demo project to undertake the copy

00:01:48.920 --> 00:01:53.015
of the URL and the URL in the GitHub.

00:01:53.015 --> 00:01:57.995
And the next thing branch to build nothing but on which branch this code is available.

00:01:57.995 --> 00:01:59.525
Of course it is master.

00:01:59.525 --> 00:02:01.985
And you can go and check it out over here.

00:02:01.985 --> 00:02:04.565
Once you have given this one, next,

00:02:04.565 --> 00:02:06.560
we need to provide Marvin version,

00:02:06.560 --> 00:02:07.745
okay, there is an error.

00:02:07.745 --> 00:02:09.800
I will talk about the cetera in event.

00:02:09.800 --> 00:02:12.410
So we know the goal state that is clean.

00:02:12.410 --> 00:02:15.425
Install, okay, these are the goals we are executing.

00:02:15.425 --> 00:02:17.255
See this error or warning.

00:02:17.255 --> 00:02:20.945
Jenkins need to know where you were manganese installed.

00:02:20.945 --> 00:02:21.935
So far.

00:02:21.935 --> 00:02:25.160
We have installed them Avenue in our Marvin system,

00:02:25.160 --> 00:02:27.500
but our Jenkins server doesn't know.

00:02:27.500 --> 00:02:31.430
That is we're global tool configuration comes into the picture there.

00:02:31.430 --> 00:02:34.385
We need to specify where is our Java located,

00:02:34.385 --> 00:02:35.975
varies over good to located,

00:02:35.975 --> 00:02:37.595
varies over mapping located,

00:02:37.595 --> 00:02:39.680
all this information we need to provide.

00:02:39.680 --> 00:02:42.425
So let me apply under job,

00:02:42.425 --> 00:02:44.960
we cannot able to run this job, even though we run,

00:02:44.960 --> 00:02:48.050
it is not going to successful way because we haven't

00:02:48.050 --> 00:02:52.595
configured our Marvin server details where our Git is located,

00:02:52.595 --> 00:02:55.070
Marvin is located under Java is located.

00:02:55.070 --> 00:02:57.035
So once you save this job,

00:02:57.035 --> 00:03:02.015
let it be the job and go to Dashboard and go to managing kids.

00:03:02.015 --> 00:03:05.270
Here we have the option called global tool configuration.

00:03:05.270 --> 00:03:06.725
So select this option.

00:03:06.725 --> 00:03:10.085
If you scroll down, you can see here JDK installations,

00:03:10.085 --> 00:03:13.040
nothing but where is your Java here we need to provide

00:03:13.040 --> 00:03:16.820
the path of Java where it is installed on our Marvin server,

00:03:16.820 --> 00:03:18.500
not on the Jenkins server.

00:03:18.500 --> 00:03:21.335
Install automatically, I'm just too disabling it.

00:03:21.335 --> 00:03:23.870
So just to go to our mountains, our work.

00:03:23.870 --> 00:03:25.850
So this is our Marvin server, right?

00:03:25.850 --> 00:03:29.030
So we have already configured. So this is Jenkins.

00:03:29.030 --> 00:03:30.380
And if you do remember,

00:03:30.380 --> 00:03:33.740
Java path is there under a core dollar path,

00:03:33.740 --> 00:03:34.820
but I don't think so.

00:03:34.820 --> 00:03:39.200
It will be affected over here because we haven't configured in the Jenkins server.

00:03:39.200 --> 00:03:43.040
So we need to search for root bash profile path.

00:03:43.040 --> 00:03:50.135
So pseudo cat slash roots slash dot bash underscored profile.

00:03:50.135 --> 00:03:50.960
Okay?

00:03:50.960 --> 00:03:52.265
So you can see here,

00:03:52.265 --> 00:03:53.765
this is the Java home birthright.

00:03:53.765 --> 00:03:58.580
Just to take this one and provided in the Java here name,

00:03:58.580 --> 00:04:00.665
we just need to go Java home.

00:04:00.665 --> 00:04:01.385
Okay?

00:04:01.385 --> 00:04:05.105
Even Java one dot-dot-dot also I can give, okay,

00:04:05.105 --> 00:04:08.090
there is no hard-coded value for this,

00:04:08.090 --> 00:04:10.550
but this should be the path of your Java Home.

00:04:10.550 --> 00:04:13.550
Similar with good, where exactly does it and start.

00:04:13.550 --> 00:04:15.394
So Jenkins is installed,

00:04:15.394 --> 00:04:17.285
okay, this is default to just two.

00:04:17.285 --> 00:04:22.220
This can be anything and if I search for where it is,

00:04:22.220 --> 00:04:24.245
good to, sorry, Good.

00:04:24.245 --> 00:04:26.720
So this is the path that gets installed.

00:04:26.720 --> 00:04:31.070
So let me go to get okay,

00:04:31.070 --> 00:04:32.270
Next to grad school and,

00:04:32.270 --> 00:04:33.815
and that these are not required,

00:04:33.815 --> 00:04:35.660
but these plugins we have in standard,

00:04:35.660 --> 00:04:37.445
that is the reason it is propagating.

00:04:37.445 --> 00:04:38.810
Next thing is mapping.

00:04:38.810 --> 00:04:40.775
So where is our Marvin is installed?

00:04:40.775 --> 00:04:43.845
I'm going to do Marvin.

00:04:43.845 --> 00:04:46.255
Three dot, dot.

00:04:46.255 --> 00:04:49.300
This is the wash and we have installed on Marvin.

00:04:49.300 --> 00:04:52.390
You can check out that under OPT.

00:04:52.390 --> 00:04:54.685
Ok, here we have,

00:04:54.685 --> 00:04:58.465
you can see this is the Apache Maven and this is the path, right?

00:04:58.465 --> 00:05:00.850
You, when you can check the path to underscore home,

00:05:00.850 --> 00:05:04.280
but this is the path we need to provide.

00:05:04.320 --> 00:05:10.870
So I don't want to install automatically and do the path that ship with this information,

00:05:10.870 --> 00:05:13.780
we can able to run our job without any issues.

00:05:13.780 --> 00:05:16.795
Let us go back to our job faster demo project.

00:05:16.795 --> 00:05:17.740
Let's build it.

00:05:17.740 --> 00:05:27.230
Whenever we build it is going to create a cd minus PWD Survey CD, CD tilde PWD.

00:05:27.230 --> 00:05:29.870
I am under my home Jenkins.

00:05:29.870 --> 00:05:34.100
This is the path we have given in our slave configuration, right?

00:05:34.100 --> 00:05:35.990
And if I go to workspace here,

00:05:35.990 --> 00:05:39.185
it is going to create the project and build the project,

00:05:39.185 --> 00:05:42.545
which means that it copies the our source code into this location,

00:05:42.545 --> 00:05:46.235
build it, and it generates the artifacts out of it.

00:05:46.235 --> 00:05:50.225
So let's build it now and let me open it.

00:05:50.225 --> 00:05:53.870
So it is pulling the code under it started executing.

00:05:53.870 --> 00:05:55.895
You can see goals, clean install,

00:05:55.895 --> 00:05:58.205
and it is doing all the jobs.

00:05:58.205 --> 00:05:59.060
Okay.

00:05:59.060 --> 00:06:00.995
I'll read our buildings successful.

00:06:00.995 --> 00:06:02.390
I ran it sometime back.

00:06:02.390 --> 00:06:06.740
That's the reason all the packages are copied into the local repository.

00:06:06.740 --> 00:06:08.420
That's way there is no issue.

00:06:08.420 --> 00:06:10.699
So building successful.

00:06:10.699 --> 00:06:14.270
And if I go back to my Marvin server and if I check for ls,

00:06:14.270 --> 00:06:16.205
you can see here faster demo project.

00:06:16.205 --> 00:06:18.200
If I go insert and if I check ls,

00:06:18.200 --> 00:06:21.860
you can see your palm dot xml ISRC under Target.

00:06:21.860 --> 00:06:23.285
And three, if I go,

00:06:23.285 --> 00:06:26.120
You can see AP test dot class.

00:06:26.120 --> 00:06:28.805
Even we should have AP class, okay,

00:06:28.805 --> 00:06:32.000
which is classmates are generated after built.

00:06:32.000 --> 00:06:37.925
And if I do ls minus CLR timestamp also 754 if we're due date.

00:06:37.925 --> 00:06:38.420
Okay.

00:06:38.420 --> 00:06:39.950
It's just to 755.

00:06:39.950 --> 00:06:40.970
One minute ago.

00:06:40.970 --> 00:06:42.485
It has been created.

00:06:42.485 --> 00:06:47.210
This is how we can able to build our applications from the Jenkins,

00:06:47.210 --> 00:06:51.845
okay, So in math when we don't use or we don't execute commands directly.

00:06:51.845 --> 00:06:54.410
Usually we use integration tool,

00:06:54.410 --> 00:06:56.705
continuous integration tool called the Jenkins,

00:06:56.705 --> 00:07:02.405
which can interact with our build servers or build systems to build the artifacts.

00:07:02.405 --> 00:07:07.415
Hope this has given enough information how the Jenkins master and slave does work,

00:07:07.415 --> 00:07:11.300
and also how we can use Marvin in the real world.

00:07:11.300 --> 00:07:14.225
One last thing I'm going to do in the next video that is,

00:07:14.225 --> 00:07:18.275
we are going to build our secondary demo project as well quickly.

00:07:18.275 --> 00:07:21.620
So that given you can understand a little more better, how does it work?

00:07:21.620 --> 00:07:24.300
Thanks for watching and see you there.
