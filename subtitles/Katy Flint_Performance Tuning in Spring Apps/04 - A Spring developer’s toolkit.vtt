WEBVTT
1
00:00:00.005 --> 00:00:01.006
- [Instructor] In this course,

2
00:00:01.006 --> 00:00:04.007
we will learn about various aspects of Spring Performance.

3
00:00:04.007 --> 00:00:06.000
And in our studies,

4
00:00:06.000 --> 00:00:08.003
we will cover several valuable measuring

5
00:00:08.003 --> 00:00:10.008
and monitoring tools.

6
00:00:10.008 --> 00:00:13.003
There is every reason that any Spring developer

7
00:00:13.003 --> 00:00:15.000
can have at their fingertips,

8
00:00:15.000 --> 00:00:16.005
on their workstation,

9
00:00:16.005 --> 00:00:18.000
all the tools and capabilities

10
00:00:18.000 --> 00:00:20.008
that we will cover in this course.

11
00:00:20.008 --> 00:00:21.008
So in this lesson,

12
00:00:21.008 --> 00:00:23.008
we're going to review those tools,

13
00:00:23.008 --> 00:00:26.001
give a quick overview of their usage

14
00:00:26.001 --> 00:00:27.005
and give you some ideas

15
00:00:27.005 --> 00:00:29.008
for how to configure your local laptop

16
00:00:29.008 --> 00:00:32.004
in order to have them accessible and convenient.

17
00:00:32.004 --> 00:00:37.002
VisualVM is a handy and popular JVM profiler.

18
00:00:37.002 --> 00:00:40.009
It's bundled with the JDK through Java 8.

19
00:00:40.009 --> 00:00:42.007
After Java 8, you can leverage it

20
00:00:42.007 --> 00:00:44.008
as a standalone download

21
00:00:44.008 --> 00:00:47.008
at visualvm.github.io,

22
00:00:47.008 --> 00:00:50.005
that is where you can get the download for this tool.

23
00:00:50.005 --> 00:00:53.005
Basically in order to install and use this tool,

24
00:00:53.005 --> 00:00:56.003
you download the compressed package,

25
00:00:56.003 --> 00:00:59.008
extract it on your system and run the executable.

26
00:00:59.008 --> 00:01:01.003
Once you have it running,

27
00:01:01.003 --> 00:01:03.009
you can see all of the live Java applications

28
00:01:03.009 --> 00:01:05.009
that are running on your workstation,

29
00:01:05.009 --> 00:01:07.009
including whatever application you're developing

30
00:01:07.009 --> 00:01:09.002
and testing on.

31
00:01:09.002 --> 00:01:11.008
Java Flight Recorder is another tool

32
00:01:11.008 --> 00:01:14.008
in the JVM profiling universe.

33
00:01:14.008 --> 00:01:17.004
It is available both from open JDK

34
00:01:17.004 --> 00:01:18.009
and also from Oracle.

35
00:01:18.009 --> 00:01:21.006
Java Flight Recorder is bundled as a component

36
00:01:21.006 --> 00:01:24.001
of JDK Mission Control.

37
00:01:24.001 --> 00:01:28.005
It's a handy utility for event capture and visualization.

38
00:01:28.005 --> 00:01:29.003
In our lesson,

39
00:01:29.003 --> 00:01:31.006
we will use it to capture startup events

40
00:01:31.006 --> 00:01:33.005
and see nice visualizations

41
00:01:33.005 --> 00:01:37.001
of our demo application's startup details.

42
00:01:37.001 --> 00:01:39.009
Glowroot is another tool that we'll use.

43
00:01:39.009 --> 00:01:41.003
Glowroot is a lightweight,

44
00:01:41.003 --> 00:01:45.002
open-source Java Application Performance Monitor tool.

45
00:01:45.002 --> 00:01:48.003
We'll use it for transaction reporting, trend reporting

46
00:01:48.003 --> 00:01:52.000
and show some instrumentation capabilities of Glowroot.

47
00:01:52.000 --> 00:01:53.003
It's a great tool.

48
00:01:53.003 --> 00:01:55.006
It's open-source, easy to run.

49
00:01:55.006 --> 00:01:57.007
All you need to do to use it is

50
00:01:57.007 --> 00:02:01.009
put a javaagent VM parameter on your application

51
00:02:01.009 --> 00:02:03.002
that you're developing.

52
00:02:03.002 --> 00:02:04.003
Then once you start up,

53
00:02:04.003 --> 00:02:08.001
all of your application's metrics are not only captured

54
00:02:08.001 --> 00:02:09.003
and reported in Glowroot,

55
00:02:09.003 --> 00:02:10.008
but maintained over time.

56
00:02:10.008 --> 00:02:12.003
Glowroot is backed by a database

57
00:02:12.003 --> 00:02:15.003
that will remember all of your development work over time.

58
00:02:15.003 --> 00:02:18.003
And finally Prometheus is another tool that we will use.

59
00:02:18.003 --> 00:02:22.005
It's an open-source Java Application Performance Monitor

60
00:02:22.005 --> 00:02:27.000
in the same category of tools that Glowroot belongs.

61
00:02:27.000 --> 00:02:28.009
It has some different capabilities.

62
00:02:28.009 --> 00:02:30.001
We'll use it in our lessons

63
00:02:30.001 --> 00:02:32.008
to capture Spring Boot actuator metrics

64
00:02:32.008 --> 00:02:35.000
and observe those trending over time.

65
00:02:35.000 --> 00:02:37.004
It's also open-source, easy to run.

66
00:02:37.004 --> 00:02:39.008
You can get it at prometheus.io

67
00:02:39.008 --> 00:02:44.005
and it's basic usage requires a configuration file.

68
00:02:44.005 --> 00:02:47.004
And once you set up Prometheus to look

69
00:02:47.004 --> 00:02:49.004
for your application to be running,

70
00:02:49.004 --> 00:02:51.006
then it will automatically detect your application

71
00:02:51.006 --> 00:02:54.006
and interact it, with it from there.

72
00:02:54.006 --> 00:02:56.003
Let me show you just a little bit

73
00:02:56.003 --> 00:02:58.008
about how I have my workstation set up.

74
00:02:58.008 --> 00:03:04.001
I have all 4 of these measuring and monitoring tools

75
00:03:04.001 --> 00:03:08.007
in a performance utiles directory in my laptop.

76
00:03:08.007 --> 00:03:10.009
They all come in as compressed JAR files.

77
00:03:10.009 --> 00:03:11.009
I extract them here.

78
00:03:11.009 --> 00:03:14.006
So they're all locally in one same place.

79
00:03:14.006 --> 00:03:16.003
Locally, I use IntelliJ.

80
00:03:16.003 --> 00:03:18.005
And so one of the things I like to do is set up

81
00:03:18.005 --> 00:03:21.000
each of these tools as an external tool

82
00:03:21.000 --> 00:03:23.003
on my IntelliJ tool bar,

83
00:03:23.003 --> 00:03:25.003
that looks something like this.

84
00:03:25.003 --> 00:03:28.001
In IntelliJ, you can go to File,

85
00:03:28.001 --> 00:03:31.004
Settings, External Tools.

86
00:03:31.004 --> 00:03:33.000
You can add a tool here.

87
00:03:33.000 --> 00:03:35.004
Let's just for example, add Prometheus.

88
00:03:35.004 --> 00:03:38.009
(keyboard clacks)

89
00:03:38.009 --> 00:03:41.003
Simply browse for it.

90
00:03:41.003 --> 00:03:45.003
Here's the executable, enter it.

91
00:03:45.003 --> 00:03:47.003
And then I can quickly from my toolbar,

92
00:03:47.003 --> 00:03:49.009
access Prometheus and open it up.

93
00:03:49.009 --> 00:03:51.002
When I want to leverage it

94
00:03:51.002 --> 00:03:54.000
to gather some statistics on my application.

95
00:03:54.000 --> 00:03:56.005
Each of these tools have additional plugins

96
00:03:56.005 --> 00:03:58.006
for the various IDEs.

97
00:03:58.006 --> 00:04:00.003
They're different for every IDE.

98
00:04:00.003 --> 00:04:04.004
And so I strongly encourage you to explore the capabilities

99
00:04:04.004 --> 00:04:07.002
that are available in your specific IDE,

100
00:04:07.002 --> 00:04:09.005
so that you have them at your fingertips.

101
00:04:09.005 --> 00:04:11.007
So that performance monitoring becomes second nature

102
00:04:11.007 --> 00:04:13.000
and easy for you.

