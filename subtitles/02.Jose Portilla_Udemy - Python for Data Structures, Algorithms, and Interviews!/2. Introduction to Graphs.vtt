WEBVTT
1

00:00:01.260  -->  00:00:07.380
Hello everyone and welcome to Introduction to Graf's lecture in the graphs section of the course we're

2

00:00:07.380  -->  00:00:10.500
going to learn what a graph is and how to use it.

3

00:00:10.560  -->  00:00:16.470
Also learn how to implement the graph abstract data type using multiple internal representations and

4

00:00:16.470  -->  00:00:22.500
you're also going to see how graphs can be used to solve a wide variety of problems.

5

00:00:22.620  -->  00:00:28.830
So what are graphs graphs are actually a more general structure than trees and we can think of a tree

6

00:00:29.190  -->  00:00:34.920
as a special kind of graphs graphs can be used to represent many real world things such as systems of

7

00:00:34.920  -->  00:00:35.750
roads.

8

00:00:35.910  -->  00:00:41.060
Airline flights that connect from city to city how the Internet is connected from web site to Web site

9

00:00:41.200  -->  00:00:47.760
etc. Once we have a good representation for a problem we can use some standard graph algorithms to solve

10

00:00:47.880  -->  00:00:52.790
otherwise might seem to be a very difficult problem.

11

00:00:52.830  -->  00:00:57.800
So computers can operate well with information presented as a graph in an example graph.

12

00:00:57.810  -->  00:01:00.700
Maybe the course requirements for a computer science major.

13

00:01:01.230  -->  00:01:07.650
So a really simple graph would look maybe something like this where each vertex on this graph is a class

14

00:01:07.890  -->  00:01:13.410
and then you have some edges pointing from vertex to vertex and we'll go over the vocabulary in just

15

00:01:13.410  -->  00:01:15.270
a second.

16

00:01:15.270  -->  00:01:19.470
So we just looked at an example of a graph and now what we want to do is formally define a graph in

17

00:01:19.470  -->  00:01:24.420
its components and will actually already know some of these terms from our discussion of trees earlier

18

00:01:24.420  -->  00:01:26.670
.

19

00:01:26.670  -->  00:01:32.800
First off is a vertex which is also called a node and it's the most fundamental part of a graph.

20

00:01:33.150  -->  00:01:37.980
It can have a name which you will call the key and a vertex may also have additional information and

21

00:01:37.980  -->  00:01:41.650
we'll call this additional information the payload.

22

00:01:41.820  -->  00:01:46.460
You have an edge an edge connects two vertices to show that there's a relationship between.

23

00:01:46.740  -->  00:01:52.280
And it just may be just one way or two way if the edges in a graph are all one way.

24

00:01:52.380  -->  00:01:55.570
We say that the graph is directed graph.

25

00:01:55.620  -->  00:02:02.900
So for example that class prerequisites klap graph that you just saw is actually a directed graph.

26

00:02:03.150  -->  00:02:05.280
Since you must take some classes before others.

27

00:02:05.280  -->  00:02:09.210
So if we go back to it and check it out here we have some classes.

28

00:02:09.240  -->  00:02:14.530
And if you notice all the edges just go from one note or one vertex to another.

29

00:02:15.150  -->  00:02:19.920
There's actually no two way ones here meaning this is a direct hit a graph which makes sense because

30

00:02:19.920  -->  00:02:23.380
you have to take a class before going onto the next one.

31

00:02:23.490  -->  00:02:26.990
You don't go back and forth between classes.

32

00:02:27.060  -->  00:02:32.820
So we talk to nodes and are vertices of vertexes talked about edges.

33

00:02:32.820  -->  00:02:34.140
Now I'll talk about weight.

34

00:02:34.150  -->  00:02:38.900
It just may be weighted to show that there's a cost to go from one vertex to another.

35

00:02:38.910  -->  00:02:44.190
So for example in a graph of roads that connect one city to another the way on the edge might represent

36

00:02:44.190  -->  00:02:47.650
the distance between two cities.

37

00:02:47.670  -->  00:02:52.980
OK now let's discuss a formal definition of a graph and how we can actually write it out.

38

00:02:52.980  -->  00:02:55.510
We could represent a graph by for example.

39

00:02:55.530  -->  00:03:03.720
G g is equal to the E and for the graph G v is a set of vertices and ease a set of edges.

40

00:03:04.170  -->  00:03:06.720
And we'll see this right now in just a second.

41

00:03:07.500  -->  00:03:16.140
Each edge is a tuple lowercase V W where that lowercase VW pair is an element of that larger set of

42

00:03:16.140  -->  00:03:17.200
vertices.

43

00:03:17.340  -->  00:03:23.190
And then you can actually add a third component to the edge tuple to represent a weight and then a subgraph

44

00:03:23.310  -->  00:03:34.020
S is a set of edges lowercase and vertices lowercase v such that lowercase he is a sub part of the set

45

00:03:34.020  -->  00:03:40.370
of edges and lowercase b is a subset of uppercase V set overseas.

46

00:03:40.380  -->  00:03:46.800
So basically what this is just saying in notation form is that lowercase E and lower case v are subsets

47

00:03:47.400  -->  00:03:52.530
of the larger set of vertices and large set of edges which makes sense because it's a subgraph.

48

00:03:52.530  -->  00:03:59.250
So let's go ahead and actually look at a more formal graph and then see how we can write this out.

49

00:03:59.250  -->  00:04:01.560
So here we have an image of a graph.

50

00:04:01.560  -->  00:04:04.260
We have the vertices zero V one of the two.

51

00:04:04.260  -->  00:04:06.330
These three of the four of the five.

52

00:04:06.330  -->  00:04:11.040
Notice how we have the edges pointing from one vertex to another and then we have the weights to them

53

00:04:11.060  -->  00:04:12.210
.

54

00:04:13.380  -->  00:04:20.220
So if we actually look and draw this out for or write this out formally Well see here we have a set

55

00:04:20.430  -->  00:04:25.440
which stands for all the vertices in the graph which goes from the zero of the one to the two acts that

56

00:04:25.440  -->  00:04:26.970
are all the way to be five.

57

00:04:27.030  -->  00:04:34.300
So you can use a set notation for each vertex and then the edges is a set of tuples.

58

00:04:34.320  -->  00:04:40.250
You can see each edge is one vertex then another vertex and then the weight.

59

00:04:40.260  -->  00:04:41.640
So we look at this edge.

60

00:04:41.640  -->  00:04:48.180
It goes from zero to V-1 way to five and you can see how the set notation actually starts to make sense

61

00:04:48.190  -->  00:04:48.260
.

62

00:04:48.260  -->  00:04:56.610
Now a computer will be able to process this now suck about a path path is a simple concept in a graphic

63

00:04:56.710  -->  00:04:59.820
a sequence of vertices that are connected by edges.

64

00:05:00.270  -->  00:05:02.360
And this is how you would formulate the find a path.

65

00:05:02.370  -->  00:05:03.380
Well let's go ahead and see it.

66

00:05:03.380  -->  00:05:11.130
In comparison to that picture we just saw here the path from the three to V1 is a sequence of vertices

67

00:05:11.130  -->  00:05:11.160
.

68

00:05:11.160  -->  00:05:14.130
These three four these are going to be one.

69

00:05:14.520  -->  00:05:16.050
And then it has a set of edges.

70

00:05:16.050  -->  00:05:24.570
Right here these three tuples actually go from v3 to the one we'll see since the edges are basically

71

00:05:24.570  -->  00:05:27.170
a directed graph right there only going one way.

72

00:05:27.300  -->  00:05:33.580
We have to go from the 3 to the 4 to zero to V1 and that means we have 3 edges this one that's way to

73

00:05:33.580  -->  00:05:34.440
7.

74

00:05:34.470  -->  00:05:38.820
This one that's way to 1 and this one that's weighted 5.

75

00:05:38.970  -->  00:05:44.820
Finally we could talk about a cycle a cycle in a directed graph is a path that starts and ends at the

76

00:05:44.820  -->  00:05:46.220
same vertex.

77

00:05:46.260  -->  00:05:53.130
So a graph of no cycles is called a cyclical graph a directed graph of snow cycles is called a directed

78

00:05:53.130  -->  00:05:55.190
acyclic graph or.

79

00:05:55.560  -->  00:06:00.390
And later on we'll see that we can solve several important problems if the problem can be represented

80

00:06:00.810  -->  00:06:03.180
as a DHV or Dagh.

81

00:06:04.110  -->  00:06:06.780
So quick example of what a cycle would look like.

82

00:06:06.780  -->  00:06:14.070
In this case the five to the two to V three to the five this little triangle is a cycle.

83

00:06:14.070  -->  00:06:18.220
Since we started and ended at the same vertex.

84

00:06:18.360  -->  00:06:18.750
All right.

85

00:06:18.840  -->  00:06:25.350
So what do we do in this lecture we solve the definition of a graph is both just informally and formally

86

00:06:25.860  -->  00:06:28.640
we learn about some important graph vocabulary terms.

87

00:06:28.680  -->  00:06:32.300
And up next we're going to learn how to represent and implement a graph.

88

00:06:32.600  -->  00:06:35.550
OK thanks everyone and I'll see you at the next lecture
