WEBVTT
1

00:00:01.380  -->  00:00:05.610
Hello everyone and welcome to your first linked list interview problem.

2

00:00:05.610  -->  00:00:08.970
This is called singly linked list cycle check.

3

00:00:09.000  -->  00:00:12.940
Here's the problem statement given a singly linked list.

4

00:00:12.990  -->  00:00:18.030
Write a function which takes in the first note in a singly linked list and returns a boolean in the

5

00:00:18.030  -->  00:00:22.130
Kidding of the linked list contains what's known as a cycle.

6

00:00:22.200  -->  00:00:27.480
A cycle is on the nodes next point actually points back to a previous node in the list.

7

00:00:27.480  -->  00:00:31.020
This is also sometimes known as a circularly linked list.

8

00:00:31.020  -->  00:00:35.670
I mentioned this topic when we were implementing the doubly linked list in Python.

9

00:00:36.360  -->  00:00:38.040
Here's what's going to happen.

10

00:00:38.070  -->  00:00:46.260
You've been given a linked list node class code so you have a class Node value next node.

11

00:00:46.860  -->  00:00:51.880
What I want you to do is fill out your solution below that is.

12

00:00:51.870  -->  00:00:54.390
Here you have your function called Cycle check.

13

00:00:54.630  -->  00:01:00.630
You should be able to take in a node and based on its attributes specifically the next node attribute

14

00:01:01.050  -->  00:01:02.970
your function should return a boolean.

15

00:01:02.970  -->  00:01:10.170
If this linked list contains a cycle meaning that a nodes next point actually points back to a previous

16

00:01:10.170  -->  00:01:14.640
node in the list instead of a new node that has never been pointed to.

17

00:01:14.850  -->  00:01:20.430
So that's a circularly linked list meaning you don't have a straight line but there's actually a loop

18

00:01:20.790  -->  00:01:26.660
somewhere within your linked list and your job is to create a function which does that cycle check.

19

00:01:26.880  -->  00:01:32.300
Once you filled out that solution function you can go out and test your solution by running this cell

20

00:01:32.300  -->  00:01:33.030
.

21

00:01:33.060  -->  00:01:38.140
What this cell does is it creates three notes creates a cycle.

22

00:01:38.130  -->  00:01:43.330
Note here how we have see that next note equals a meaning we have a perfect loop here.

23

00:01:43.680  -->  00:01:50.510
Then we also create a non-cyclists and then we just check to see if the cycle linked list is true in

24

00:01:50.520  -->  00:01:53.740
the non-cyclists the list is false.

25

00:01:53.760  -->  00:01:56.070
All right that's the problem.

26

00:01:56.070  -->  00:01:59.970
Best of luck in the next lecture will go over the solution to it.

27

00:01:59.970  -->  00:02:00.630
Thanks everyone
