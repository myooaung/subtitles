1

00:00:01,410  -->  00:00:06,320
Hello everyone and welcome to the lecture on doubly linked list implementation.

2

00:00:06,870  -->  00:00:11,910
In this lecture as you might have guessed we're going to implement a doubly linked list in Python.

3

00:00:11,910  -->  00:00:15,840
As always you have all the sample code in the corresponding Jupiter notebook.

4

00:00:16,050  -->  00:00:19,190
This is called doubly linked list implementation.

5

00:00:19,200  -->  00:00:22,390
Let's go ahead and get started.

6

00:00:22,410  -->  00:00:27,850
First thing we're going to do is just go ahead and create a node class.

7

00:00:28,850  -->  00:00:36,960
Go ahead and call this class Stubley playing list node in an actual interview setting you would probably

8

00:00:36,960  -->  00:00:39,000
just call this a node class

9

00:00:41,760  -->  00:00:46,980
and then we'll go ahead and initialize the attributes we're going to be using.

10

00:00:46,980  -->  00:00:48,410
That's going to be self.

11

00:00:48,720  -->  00:00:50,160
And then the value of that node

12

00:00:56,830  -->  00:01:05,040
Persinger say is just self-taught valuables value just like the previous singly link in this singly

13

00:01:05,040  -->  00:01:11,120
link list node implementation we have a next node will have a default to none.

14

00:01:11,220  -->  00:01:17,090
But now since we're doing a doubly linked list node we have the previous node reference as well.

15

00:01:18,090  -->  00:01:23,670
And that's going to be equal to none.

16

00:01:23,670  -->  00:01:24,390
All right.

17

00:01:24,390  -->  00:01:25,380
That's all there is to it.

18

00:01:25,380  -->  00:01:30,180
So let's go ahead and build our linked lists now that we have a node that can reference both next and

19

00:01:30,210  -->  00:01:38,790
previous values will say A equals the linked list node and I'm just putting tab as a reminder.

20

00:01:38,790  -->  00:01:44,790
So if I just do the 0 and then click tab should auto complete for me that way to save myself some typing

21

00:01:44,790  -->  00:01:46,620
.

22

00:01:47,190  -->  00:01:53,010
So you have one to three is the values in an ABC are the actual nodes themselves.

23

00:01:53,010  -->  00:01:58,170
Now let's go ahead and define the double linked list.

24

00:01:58,170  -->  00:02:10,140
I'll do this by saying a thought next node is equal to B meaning B that previous node is equal to a

25

00:02:10,140  -->  00:02:11,790
.

26

00:02:11,850  -->  00:02:21,720
So that's setting B after a and I'm going to set C after a song to say B that next node equals C and

27

00:02:21,720  -->  00:02:28,500
then c the previous node equals B and that's all there is to it.

28

00:02:28,500  -->  00:02:33,690
Now we have a doubly linked list that allows us to go through our linked lists both forwards and backwards

29

00:02:34,050  -->  00:02:36,760
through this previous node.

30

00:02:38,170  -->  00:02:44,910
But more quick know is that you could have also created using this note class a circularly linked list

31

00:02:45,480  -->  00:02:50,290
meaning just that this final node next node reference would be a.

32

00:02:50,520  -->  00:02:54,260
So you would just have a loop a b c going around to each other.

33

00:02:54,390  -->  00:02:55,940
That's also an option for you to do.

34

00:02:56,040  -->  00:02:57,580
It has its own use cases.

35

00:02:57,600  -->  00:02:59,040
So just keep that in mind.

36

00:02:59,220  -->  00:03:02,970
But in this case we have our Hetter a in our trailer.

37

00:03:03,000  -->  00:03:05,370
See for it doubly linked list.

38

00:03:05,830  -->  00:03:08,090
OK that's all there is to it.

39

00:03:08,100  -->  00:03:12,900
Hopefully this was pretty forward and straightforward and basic free especially after implementing a

40

00:03:12,900  -->  00:03:14,430
singly linked list.

41

00:03:14,640  -->  00:03:18,880
Coming up next we'll discuss more about linked lists and how to approach interview problems.

42

00:03:18,940  -->  00:03:22,310
BORLING Louis thanks and I'll see you at the next lecture.
