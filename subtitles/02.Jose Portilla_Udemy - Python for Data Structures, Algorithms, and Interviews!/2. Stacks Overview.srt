1

00:00:01,230  -->  00:00:05,210
Hello everyone and welcome to the stacks overview lecture.

2

00:00:05,310  -->  00:00:11,670
So what is a stack stack is an ordered collection of items where the addition of new items and the removal

3

00:00:11,670  -->  00:00:14,270
of existing items always takes place at the same.

4

00:00:14,280  -->  00:00:21,180
And so this and where the addition and removal is taking place is commonly referred to as the top and

5

00:00:21,180  -->  00:00:25,050
then the end opposite to the top is known as the base of that stack.

6

00:00:25,050  -->  00:00:29,580
So you can almost think of a stack as a stack of books on a table.

7

00:00:29,880  -->  00:00:35,400
So the base of a stack is significant since items stored in the stack that are closer to the base represent

8

00:00:35,400  -->  00:00:40,260
those that have been in the stack the longest and the most recently added item is the one that is in

9

00:00:40,260  -->  00:00:43,650
the position to be removed first.

10

00:00:43,680  -->  00:00:47,750
So this is known as a last in first out principle.

11

00:00:47,850  -->  00:00:51,480
The stack ordering sometimes called LIFO.

12

00:00:52,050  -->  00:00:57,750
So it provides an ordering based on the length of time in the collection when your items are near the

13

00:00:57,750  -->  00:01:01,170
top and older items are near the base.

14

00:01:01,170  -->  00:01:04,010
Let's go ahead and see a diagram to show this.

15

00:01:04,020  -->  00:01:09,170
So here we have an example of building a stack and then removing items from the stack.

16

00:01:09,900  -->  00:01:17,700
So in this first figure here Section 1 we can see that we start with a elements 1 and then we push a

17

00:01:17,700  -->  00:01:20,830
new element to the top of the stack.

18

00:01:21,030  -->  00:01:26,110
Then three also goes to the top of the stack and same before five and six.

19

00:01:26,130  -->  00:01:30,880
So we're pushing them to the top of the stack but basically almost like he had a stack of books on a

20

00:01:30,880  -->  00:01:34,540
table and you were piling them on top each other.

21

00:01:34,870  -->  00:01:39,300
Push is just a term that's commonly used for this method or operation.

22

00:01:39,300  -->  00:01:42,480
And we'll see that when we implement a stack in the next lecture.

23

00:01:42,480  -->  00:01:47,440
Now when you're removing items from a stack the last in is the first out to go.

24

00:01:47,640  -->  00:01:50,760
So for instance 6 was the last one to go in.

25

00:01:50,790  -->  00:01:52,890
So it's going to be the first one to come out.

26

00:01:52,890  -->  00:01:57,660
So when you're popping the items off you're basically taking them off from the very top of that stack

27

00:01:57,680  -->  00:01:58,330
.

28

00:01:58,980  -->  00:01:59,900
OK.

29

00:02:00,600  -->  00:02:04,800
So note how those first items are being pushed to the stack begin at the base.

30

00:02:04,950  -->  00:02:10,560
And as the items are popped out stacks are fundamentally important as they can be used to reverse the

31

00:02:10,560  -->  00:02:15,480
order of items in the order of insertion is the reverse of the order of removal.

32

00:02:15,870  -->  00:02:22,230
So if we go back we'll notice that we'd be able to reverse this entire stack by merely popping it out

33

00:02:22,240  -->  00:02:22,470
.

34

00:02:22,680  -->  00:02:27,250
So right now I have one two three four five six as I push them in.

35

00:02:27,660  -->  00:02:33,600
But if I decided to pop these out into a stack that would basically reverse the order I have six five

36

00:02:33,600  -->  00:02:36,180
four three two and then one finally.

37

00:02:36,210  -->  00:02:41,350
So just keep that in mind considering this reversal property.

38

00:02:41,430  -->  00:02:45,520
You can perhaps think of examples of stacks that occur as you use your own computer.

39

00:02:45,540  -->  00:02:49,310
So for example every web browser has a back button.

40

00:02:49,520  -->  00:02:54,090
And as you navigate from web page to web page those pages are placed on a stack.

41

00:02:54,240  -->  00:02:57,170
Actually it's to you or else that are going onto that stack.

42

00:02:57,240  -->  00:03:01,890
So the current page that you're viewing is on the top and the first page you look that is at the base

43

00:03:01,890  -->  00:03:02,400
.

44

00:03:02,400  -->  00:03:08,180
So if you click the back button you begin to move in reverse order through the pages.

45

00:03:08,190  -->  00:03:08,780
OK.

46

00:03:09,060  -->  00:03:13,050
So hopefully stacks was pretty basic and you understood the concept.

47

00:03:13,200  -->  00:03:17,550
Go ahead and go over that figure or even go over the Wikipedia page on stacks in case you're having

48

00:03:17,550  -->  00:03:18,940
any trouble understanding.

49

00:03:19,200  -->  00:03:23,600
But it's basically a last in first out principle to get a better idea of this.

50

00:03:23,610  -->  00:03:27,240
We're going to go ahead and implement our own stack class in the next lecture.

51

00:03:27,570  -->  00:03:28,530
Okay.

52

00:03:28,530  -->  00:03:29,430
Thanks everyone.

53

00:03:29,430  -->  00:03:30,410
I'll see you at the next lecture
