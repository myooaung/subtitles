1

00:00:00,990  -->  00:00:05,760
Hello everyone and welcome to your last interview problem for the trees section of the Course.

2

00:00:05,880  -->  00:00:09,530
This problem is called trim a binary search tree.

3

00:00:09,570  -->  00:00:14,840
Here's the problem statement given the roots of the binary search tree and two numbers.

4

00:00:14,910  -->  00:00:22,670
MIN and MAX trim the tree such that all the numbers in the new tree are between the min and max inclusive

5

00:00:22,720  -->  00:00:23,080
.

6

00:00:23,370  -->  00:00:26,500
The resulting tree should still be a valid binary search tree.

7

00:00:26,790  -->  00:00:30,510
So for example imagine you got this tree as the input you were given.

8

00:00:30,510  -->  00:00:37,020
The roots of the tree and the methods and attributes of that root contain all the subtrees on it or

9

00:00:37,060  -->  00:00:42,380
have the root 8 and you have some other children and branches on it.

10

00:00:42,630  -->  00:00:48,360
And if you were given the minimum value of 5 and a maximum value of 13 you would essentially trim the

11

00:00:48,360  -->  00:00:50,630
trees so it would look like this.

12

00:00:50,640  -->  00:00:55,860
So now you only have values between 5 and 13 in the tree.

13

00:00:55,860  -->  00:01:00,490
So we should remove all the notes whose value is not between the min and the max.

14

00:01:00,550  -->  00:01:04,350
Want you to feel free to reference the lecture on the binary search tree for the no class.

15

00:01:04,530  -->  00:01:05,860
Well it's really more in here.

16

00:01:05,880  -->  00:01:10,380
As I've mentioned in other lectures the logic of your function in which case your function should be

17

00:01:10,380  -->  00:01:14,570
in the form of this you should be able to take in a tree node.

18

00:01:14,730  -->  00:01:20,310
You can either just have this is the root or the tree itself and that a minimal value and a max value

19

00:01:21,150  -->  00:01:25,720
and you can just assume methods such as left right and value.

20

00:01:26,250  -->  00:01:31,020
OK so there again there is no solution sell here because the nature of the code should really be more

21

00:01:31,020  -->  00:01:37,100
logical and any sort of official test would essentially give away the answer structure.

22

00:01:37,140  -->  00:01:42,590
Just focus your answer to fill out the logic of the solution using the methods described above.

23

00:01:42,810  -->  00:01:46,160
Ok if that being said again it is a pretty common problem.

24

00:01:46,200  -->  00:01:50,080
You can just basically Google trim the binary search tree if you want more information on it.

25

00:01:50,340  -->  00:01:52,980
But in the next lecture we'll go ahead and go over the solution.

26

00:01:53,270  -->  00:01:55,860
OK thanks everyone and I'll see at the next lecture
