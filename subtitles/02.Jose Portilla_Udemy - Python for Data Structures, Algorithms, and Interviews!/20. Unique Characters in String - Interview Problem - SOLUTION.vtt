WEBVTT
1

00:00:01.290  -->  00:00:05.800
Hello everyone and welcome to the solution of the unique characters in a string.

2

00:00:06.240  -->  00:00:11.010
So the problem statement was if you were given a string determine if it's comprised of all unique characters

3

00:00:11.010  -->  00:00:11.430
.

4

00:00:11.700  -->  00:00:18.980
So for instance the string A B C D E would be true because it has all unique characters.

5

00:00:19.170  -->  00:00:19.710
All right.

6

00:00:19.980  -->  00:00:25.740
So we're going to show two possible solutions one using a built in data structure and a built in function

7

00:00:26.250  -->  00:00:28.360
and another using a built in data structure.

8

00:00:28.610  -->  00:00:32.640
But creating our own lookup method to check if the characters are unique.

9

00:00:32.790  -->  00:00:39.150
So the first one which is basically a simple one liner uses advantage to Python an advantage of the

10

00:00:39.150  -->  00:00:48.930
set data state or a data structure that say your base is just going to say return and we're going to

11

00:00:48.930  -->  00:00:56.070
say it the length of the set of the string is equal to the length

12

00:00:59.250  -->  00:01:00.680
of the string itself.

13

00:01:01.090  -->  00:01:03.970
Then we know it has all unique characters.

14

00:01:04.170  -->  00:01:05.820
So let's go ahead and try that out.

15

00:01:06.240  -->  00:01:08.000
ABC.

16

00:01:08.490  -->  00:01:09.830
So we know that's true.

17

00:01:10.020  -->  00:01:13.120
And if we add another a we get false.

18

00:01:13.230  -->  00:01:15.600
So that makes sense since we're basically taking the set.

19

00:01:15.870  -->  00:01:18.190
So that's grabbing everything that's unique.

20

00:01:18.210  -->  00:01:22.290
Check the length of it and if that's equal to the length the original string then you know you had all

21

00:01:22.290  -->  00:01:23.960
unique characters.

22

00:01:23.960  -->  00:01:28.980
So in an interview setting usually for these type of solutions you want to make your interviewer aware

23

00:01:29.070  -->  00:01:34.200
that you're able to do it and you know about it but you also want to manually do as much as possible

24

00:01:34.210  -->  00:01:34.810
.

25

00:01:35.430  -->  00:01:42.060
So let's go ahead and again use a builtin data type set but then use our own lookup method.

26

00:01:42.510  -->  00:01:47.790
So I call this unique care to the postering.

27

00:01:47.790  -->  00:01:56.470
So we're going to do is create a set called S.H. A are standing for characters and say sets.

28

00:01:57.150  -->  00:02:08.860
So I'm going to say for let's see her letter basically in S in that stream if the LeT is in characters

29

00:02:11.280  -->  00:02:15.710
and let me go ahead and rename this plural so we know it's going to be more than one there.

30

00:02:16.050  -->  00:02:21.540
So what is in characters return false.

31

00:02:21.640  -->  00:02:30.920
Else we're just going to add it to the sets down a little bit there at LTT.

32

00:02:31.440  -->  00:02:36.740
So if it never returns false throughout that statement then we know we can just return true.

33

00:02:37.020  -->  00:02:39.080
Since all the characters were unique.

34

00:02:39.210  -->  00:02:42.320
All right let's go ahead and walk through this one more time.

35

00:02:42.570  -->  00:02:44.110
So we have our set here.

36

00:02:44.120  -->  00:02:49.530
Characters and there we're going through out every element basically every letter in that string and

37

00:02:49.530  -->  00:02:54.910
seeing if that letter was in the set then return false.

38

00:02:55.170  -->  00:02:58.640
Else add the letter to that set.

39

00:02:58.720  -->  00:03:04.380
Now what this basically doing is essentially the same thing as checking if it already exists in the

40

00:03:04.380  -->  00:03:04.800
set.

41

00:03:04.800  -->  00:03:08.080
So I imagine we're going along for the simple example.

42

00:03:08.430  -->  00:03:14.200
All the letters A B C D E wouldn't trigger this if statement.

43

00:03:14.310  -->  00:03:17.170
Instead they would just be added to that set.

44

00:03:17.430  -->  00:03:19.380
But on this final letter A.

45

00:03:19.560  -->  00:03:22.770
It would have been already in that character set.

46

00:03:22.890  -->  00:03:24.870
So to return false.

47

00:03:24.870  -->  00:03:28.060
If this never gets triggered then we know all the characters are unique.

48

00:03:28.110  -->  00:03:31.030
And we can just return true right.

49

00:03:31.410  -->  00:03:34.380
So hopefully both of the solutions make sense to you.

50

00:03:34.440  -->  00:03:40.350
Again make sure you do them manually on pen and paper or practice on a white board when coding them

51

00:03:40.360  -->  00:03:42.190
out and that's it.

52

00:03:42.270  -->  00:03:46.710
You can go ahead and check out the solution note book case you want more notes on this but that's essentially

53

00:03:46.710  -->  00:03:48.480
all there is to this problem.

54

00:03:48.570  -->  00:03:51.200
We might see it again in the mock interview section.

55

00:03:51.270  -->  00:03:52.710
So just a heads up.

56

00:03:53.100  -->  00:03:54.030
OK everyone.

57

00:03:54.030  -->  00:03:55.470
Thanks and I'll see you at the next lecture
