WEBVTT
1

00:00:01.410  -->  00:00:04.920
Hello everyone and welcome to your next interview problem.

2

00:00:05.190  -->  00:00:08.210
This one's called balanced parentheses check.

3

00:00:08.220  -->  00:00:14.220
So here's the problem statement given a string of opening and closing parentheses check whether it's

4

00:00:14.220  -->  00:00:15.510
balance.

5

00:00:15.510  -->  00:00:21.540
So we have three general types of these parentheses round brackets which look like just general parentheses

6

00:00:21.540  -->  00:00:22.350
here.

7

00:00:22.350  -->  00:00:28.590
Square brackets like the ones you use when you index list and curly brackets like the ones you use for

8

00:00:28.590  -->  00:00:30.020
a dictionary in Python.

9

00:00:30.630  -->  00:00:36.150
So assume that the string doesn't contain any other character besides these three types of parentheses

10

00:00:36.660  -->  00:00:40.930
and it won't have any spaces words or numbers as a reminder.

11

00:00:41.100  -->  00:00:47.220
Balance parentheses require every opening parentheses to be close in the reverse order open.

12

00:00:47.220  -->  00:00:49.830
So for example if we just zoom in here

13

00:00:52.650  -->  00:00:59.100
you'll see I have a open print parentheses an open square bracket that a close square bracket and a

14

00:00:59.100  -->  00:01:00.680
closing parentheses.

15

00:01:00.690  -->  00:01:02.680
So this is balanced.

16

00:01:02.680  -->  00:01:10.890
But however this one right here open parentheses open square bracket and then close parentheses before

17

00:01:10.890  -->  00:01:13.950
you close that square bracket is not balanced.

18

00:01:14.400  -->  00:01:18.440
So you can assume that the input string has no spaces.

19

00:01:18.450  -->  00:01:19.020
All right.

20

00:01:19.380  -->  00:01:21.710
So you can go ahead and fill out your solution below.

21

00:01:21.810  -->  00:01:22.860
You'll be given a string.

22

00:01:22.860  -->  00:01:26.310
So for example here we check if this is a balance checked.

23

00:01:26.410  -->  00:01:32.460
Excuse me we check here if we have a balance parentheses using the function Balash Check this is truly

24

00:01:32.460  -->  00:01:33.640
balanced.

25

00:01:33.660  -->  00:01:36.720
This one if you look at it it's balanced as well.

26

00:01:36.750  -->  00:01:37.830
This one is not balanced.

27

00:01:37.830  -->  00:01:39.050
You can see the error here.

28

00:01:39.060  -->  00:01:40.610
We're missing a square bracket.

29

00:01:41.070  -->  00:01:41.750
All right.

30

00:01:42.000  -->  00:01:50.010
You can run this test so we're here to test your solution for various cases of brackets as strings.

31

00:01:50.010  -->  00:01:51.030
All right.

32

00:01:51.030  -->  00:01:56.010
Best of luck and I'll see you at the next lecture where we're going to be going over the solution for

33

00:01:56.010  -->  00:01:57.350
this problem.

34

00:01:57.360  -->  00:01:59.070
Thanks everyone.
