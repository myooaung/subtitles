WEBVTT
﻿1
00:00:00.730 --> 00:00:06.460
‫In this lecture, we're going to learn about the entire selection, joining data can become complex

2
00:00:06.460 --> 00:00:09.750
‫when the ratio between data and elements is not one to one.

3
00:00:10.120 --> 00:00:14.740
‫If we have more elements than we have data, we should remove excess elements.

4
00:00:15.190 --> 00:00:21.100
‫If there are fewer elements than we have data, we should add more elements in the developer tools.

5
00:00:21.130 --> 00:00:25.720
‫The selection object we will return is different from previous selection objects.

6
00:00:25.990 --> 00:00:28.480
‫A new property is available called Enter.

7
00:00:28.870 --> 00:00:31.120
‫This is what's called the enter selection.

8
00:00:31.420 --> 00:00:37.210
‫The enter selection contains a list of data items that haven't been joined to an element looking inside

9
00:00:37.210 --> 00:00:39.360
‫the array, we will find an empty array.

10
00:00:39.640 --> 00:00:44.770
‫That's because every piece of data was Joynes to an element that may not always be the case.

11
00:00:44.980 --> 00:00:48.430
‫Let's look at what happens when there aren't enough elements in the document.

12
00:00:48.640 --> 00:00:50.080
‫Switch over to the editor.

13
00:00:52.460 --> 00:00:57.020
‫In the HTML file removed three lists, items from the unordered list.

14
00:00:59.390 --> 00:01:01.220
‫Next, refresh the page.

15
00:01:03.590 --> 00:01:06.870
‫This time, the entire selection is not empty anymore.

16
00:01:07.160 --> 00:01:10.590
‫The entire selection will have a total of five items in the array.

17
00:01:11.420 --> 00:01:13.260
‫The first two items are empty.

18
00:01:13.580 --> 00:01:18.680
‫It's because the first two items in the data array were able to be joined to an element.

19
00:01:18.950 --> 00:01:25.040
‫If we want to know which data is joined to which element we can look in the group's property, the entire

20
00:01:25.040 --> 00:01:27.710
‫selection will only contain what hasn't been joined.

21
00:01:28.130 --> 00:01:34.760
‫The last three items in the array hold what's called an Internode D three creates a virtual element

22
00:01:35.030 --> 00:01:38.300
‫as an element that doesn't occupy space in the document.

23
00:01:38.570 --> 00:01:39.820
‫It's stored in memory.

24
00:01:40.040 --> 00:01:45.860
‫If we look inside any of the nodes, we will find that the Virtua element doesn't hold any attributes

25
00:01:45.860 --> 00:01:46.670
‫or content.

26
00:01:46.970 --> 00:01:48.580
‫It purely holds the data.

27
00:01:49.280 --> 00:01:54.850
‫The purpose of the entire selection is to tell us how many items of data haven't been joined to an element.

28
00:01:55.130 --> 00:01:56.660
‫The next step becomes clear.

29
00:01:56.930 --> 00:02:02.120
‫We want to start the process of creating new elements that can be joined with the remaining data.

30
00:02:02.690 --> 00:02:06.200
‫D3 comes with the function that can handle this entire process.

31
00:02:06.470 --> 00:02:07.880
‫Switch back to the editor.

32
00:02:10.320 --> 00:02:14.100
‫In the script file, we are going to add a new function to our chain.

33
00:02:14.370 --> 00:02:17.910
‫We're going to chain the joint function after joining the data.

34
00:02:20.510 --> 00:02:26.180
‫The join method, we'll look at our current selection, if the entire selection exists, it'll begin

35
00:02:26.180 --> 00:02:32.240
‫the process of creating new elements in the document for each item in the array as it adds a new element.

36
00:02:32.390 --> 00:02:36.580
‫The data will be moved from the virtual element to the element in the document.

37
00:02:36.950 --> 00:02:40.640
‫The new elements will be joined with the data that hasn't been joined.

38
00:02:41.270 --> 00:02:43.330
‫The join method has one argument.

39
00:02:43.550 --> 00:02:45.850
‫It's the name of the tag it should generate.

40
00:02:45.980 --> 00:02:48.530
‫We will pass in a list item tag.

41
00:02:51.040 --> 00:02:53.320
‫Let's refresh the page to see what we get.

42
00:02:55.760 --> 00:03:01.640
‫On the page, we can see that new elements have been generated, three dots are appearing on the page.

43
00:03:01.800 --> 00:03:04.850
‫However, there isn't anything appearing next to them.

44
00:03:05.180 --> 00:03:08.560
‫On top of that, they're not aligned with the other list items.

45
00:03:08.870 --> 00:03:13.310
‫Let's inspect the elements panel and the developer tools to find out what's the problem.

46
00:03:15.810 --> 00:03:19.210
‫There are three list item elements appearing in the document.

47
00:03:19.500 --> 00:03:22.620
‫Strangely, they do not appear under the unordered list.

48
00:03:22.860 --> 00:03:26.840
‫Instead, they're added as children elements to the HTML element.

49
00:03:27.120 --> 00:03:28.510
‫Each item will be empty.

50
00:03:29.100 --> 00:03:33.150
‫The reason they're empty is because the joint method will generate new elements.

51
00:03:33.330 --> 00:03:37.300
‫It doesn't add attributes or insert content into the elements.

52
00:03:37.500 --> 00:03:39.560
‫It's possible to add that behavior.

53
00:03:39.900 --> 00:03:43.170
‫We'll look at how we can manipulate the new elements in a moment.

54
00:03:43.740 --> 00:03:50.100
‫First, I want to address the second problem we're facing to better understand why the list item elements

55
00:03:50.100 --> 00:03:52.010
‫are inserted in the wrong location.

56
00:03:52.140 --> 00:03:53.910
‫We will need to view the console.

57
00:03:54.450 --> 00:03:57.390
‫The console is still logging the selection object.

58
00:03:57.660 --> 00:04:00.330
‫The joint method will return a new selection.

59
00:04:00.630 --> 00:04:04.500
‫The selection object will not have the enter and exit properties.

60
00:04:04.740 --> 00:04:09.870
‫It's because the join method will merge the new elements with the elements that were found in the group's

61
00:04:09.870 --> 00:04:10.450
‫property.

62
00:04:11.040 --> 00:04:16.710
‫If we look inside the group's property, we will find the first two original list items along with the

63
00:04:16.710 --> 00:04:17.850
‫new list items.

64
00:04:20.320 --> 00:04:25.010
‫It doesn't make sense for D3 to also have an interest election when it'll be empty.

65
00:04:25.300 --> 00:04:27.280
‫So everything seems to be working.

66
00:04:27.520 --> 00:04:31.030
‫The issue we're encountering has to do with the parents property.

67
00:04:31.660 --> 00:04:35.820
‫The parents property will contain the parents selection of the current selection.

68
00:04:36.130 --> 00:04:37.900
‫Here's the code we've written so far.

69
00:04:38.140 --> 00:04:42.160
‫We are directly calling these select all method on the D3 object.

70
00:04:42.490 --> 00:04:48.040
‫When we do this, D3 will always set the parents property to the HTML element.

71
00:04:48.550 --> 00:04:54.060
‫The join method will add the new elements it generates to the element that's stored in the parents property.

72
00:04:54.460 --> 00:04:57.670
‫That's why the list items are inserted in the wrong location.

73
00:04:57.910 --> 00:05:01.210
‫It will not insert the new element in the current selection.

74
00:05:01.390 --> 00:05:04.530
‫Rather, it'll prioritize the parents property.

75
00:05:05.050 --> 00:05:06.280
‫How do we fix this?

76
00:05:06.370 --> 00:05:10.660
‫We can fix this problem by changing the element stored in the parents property.

77
00:05:10.960 --> 00:05:12.550
‫Let's go back to the ED.

78
00:05:15.110 --> 00:05:20.450
‫We can change the parents selection by changing the select method before they select all method.

79
00:05:22.900 --> 00:05:29.530
‫If we were to change, select or select all methods, D3 will change the parent selection the first

80
00:05:29.530 --> 00:05:35.830
‫time we call either of these methods, D3 will set the parent selection to the HTML element because

81
00:05:35.830 --> 00:05:38.240
‫there isn't a parent selection to begin with.

82
00:05:38.770 --> 00:05:44.980
‫However, when we call either method a second time, D3 will update the parent selection to their previous

83
00:05:44.980 --> 00:05:45.580
‫selection.

84
00:05:45.850 --> 00:05:51.310
‫In our example, the parent selection for these select all method will be whatever selection we made

85
00:05:51.310 --> 00:05:54.580
‫in the select method we will pass in the unordered list.

86
00:05:55.800 --> 00:05:57.870
‫Then we will refresh the page.

87
00:06:00.250 --> 00:06:05.980
‫On the page, the dots are aligning correctly, if you look inside the console panel, the selection

88
00:06:05.980 --> 00:06:07.630
‫panel has also been updated.

89
00:06:07.900 --> 00:06:11.410
‫The parents property has been updated to the unordered list.

90
00:06:11.770 --> 00:06:14.900
‫That's because the previous selection was the unordered list.

91
00:06:15.400 --> 00:06:18.210
‫Let's address the last issue we have in our document.

92
00:06:18.430 --> 00:06:20.170
‫The new list items are empty.

93
00:06:20.380 --> 00:06:21.490
‫Here's a fun fact.

94
00:06:21.670 --> 00:06:23.830
‫We've already learned how we can fix this.

95
00:06:24.100 --> 00:06:25.500
‫Think about it for a moment.

96
00:06:25.690 --> 00:06:27.930
‫How do we add text to a selection?

97
00:06:28.210 --> 00:06:34.630
‫I want you to try this as an exercise, trying to add text to the new list items, pause the video and

98
00:06:34.630 --> 00:06:35.360
‫give it a try.

99
00:06:35.680 --> 00:06:36.310
‫Good luck.

100
00:06:37.800 --> 00:06:38.640
‫Welcome back.

101
00:06:38.730 --> 00:06:43.270
‫If you are able to solve this issue, that's great, if not, that's fine as well.

102
00:06:43.440 --> 00:06:46.750
‫We will go over the solution together in our file.

103
00:06:46.770 --> 00:06:49.230
‫We are going to change a function called text.

104
00:06:51.630 --> 00:06:57.600
‫Keep in mind, the join method will return a selection, as with any other selection, we can use the

105
00:06:57.600 --> 00:07:00.600
‫same methods and properties we learned about previously.

106
00:07:00.960 --> 00:07:04.250
‫The text method is available on all selection objects.

107
00:07:04.530 --> 00:07:08.280
‫We will use the same dummy text for the contents of the elements.

108
00:07:10.810 --> 00:07:16.680
‫There's one important thing to understand, every list item element will have its content updated.

109
00:07:16.960 --> 00:07:20.210
‫This includes the two lists, items that were already in the document.

110
00:07:20.470 --> 00:07:25.900
‫It's because the joint method will merge the groups and enter properties together, thus giving us a

111
00:07:25.900 --> 00:07:26.800
‫new selection.

112
00:07:27.280 --> 00:07:33.220
‫To demonstrate this, I will update the dummy content we had in the HTML document for the list items.

113
00:07:35.600 --> 00:07:37.850
‫We will refresh the page one more time.

114
00:07:40.420 --> 00:07:46.240
‫The list items have been updated, the transformation methods can work with an array of elements, they

115
00:07:46.240 --> 00:07:49.290
‫don't always have to be called on individual elements.

116
00:07:49.570 --> 00:07:52.570
‫These three won't have a problem with matching the changes.

117
00:07:52.990 --> 00:07:55.510
‫We're finished with learning about the entire selection.

118
00:07:55.720 --> 00:07:58.750
‫There's another selection we will learn about in the next lecture.

