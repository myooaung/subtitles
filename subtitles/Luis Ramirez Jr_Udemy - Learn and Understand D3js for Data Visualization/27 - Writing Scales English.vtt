WEBVTT
﻿1
00:00:00.300 --> 00:00:03.600
‫In this lecture, we are going to learn how to write a scale.

2
00:00:03.900 --> 00:00:05.670
‫Currently I'm on code pen.

3
00:00:06.030 --> 00:00:09.860
‫Code pen is a sandbox environment for prototyping projects.

4
00:00:10.050 --> 00:00:13.490
‫It'll save us time from having to generate a separate project.

5
00:00:13.830 --> 00:00:17.400
‫I've created a code pen to demonstrate how scales work.

6
00:00:17.700 --> 00:00:23.390
‫In the resource section of this lecture, I provide a link to this environment at the top.

7
00:00:23.430 --> 00:00:27.710
‫There are three sections of our HTML success and JavaScript.

8
00:00:28.050 --> 00:00:30.670
‫Our focus will be solely on JavaScript.

9
00:00:31.170 --> 00:00:35.460
‫The other two sections can be minimized by clicking on the drop down menu button.

10
00:00:35.610 --> 00:00:38.250
‫An option called MINIMIZE will be present.

11
00:00:40.680 --> 00:00:46.410
‫Lastly, at the top right corner, we will change the view to have the panels on the left side of the

12
00:00:46.410 --> 00:00:46.950
‫page.

13
00:00:49.380 --> 00:00:56.330
‫I've already included D3 with this code pen, we can immediately start using it in the JavaScript section,

14
00:00:56.340 --> 00:00:58.500
‫we have an array called slices.

15
00:00:58.800 --> 00:01:02.640
‫The array is based on the example we talked about in the previous lecture.

16
00:01:02.880 --> 00:01:06.800
‫We want to convert this data into something that can be drawn onto the screen.

17
00:01:07.470 --> 00:01:10.410
‫We are going to create a scale first.

18
00:01:10.410 --> 00:01:12.960
‫We need to store a scale in a variable.

19
00:01:13.200 --> 00:01:15.450
‫Scales are generated by three.

20
00:01:15.720 --> 00:01:18.090
‫They aren't ready to go out of the box.

21
00:01:18.240 --> 00:01:21.270
‫We need to construct D three to prepare a scale.

22
00:01:21.660 --> 00:01:23.880
‫Each scale is tailored to our needs.

23
00:01:24.060 --> 00:01:27.060
‫Since it's unique, we should store it for future use.

24
00:01:27.570 --> 00:01:30.210
‫We will declare a variable called scale.

25
00:01:30.510 --> 00:01:35.010
‫It'll be assigned to a function called D three scale linear.

26
00:01:37.540 --> 00:01:43.390
‫There are various scales available, but the linear scale is the simplest one, we are going to start

27
00:01:43.390 --> 00:01:45.670
‫by learning this scale just like that.

28
00:01:45.680 --> 00:01:46.920
‫We now have a scale.

29
00:01:47.140 --> 00:01:49.150
‫Let's try logging it in the console.

30
00:01:55.450 --> 00:02:00.560
‫The scale variable is a function, the function return can transform our data.

31
00:02:00.850 --> 00:02:07.030
‫Let's try and transforming a random number we will call the scale function with a numeric value Pastan.

32
00:02:09.570 --> 00:02:15.060
‫The scale will return the same value, we're getting the same value because we haven't added an input

33
00:02:15.060 --> 00:02:21.130
‫domain or output range, without this information, the scale won't know how to transform the data.

34
00:02:21.420 --> 00:02:25.090
‫By default, it'll return the same data that gets inputted.

35
00:02:25.440 --> 00:02:27.750
‫This is the basics of creating a scale.

36
00:02:28.350 --> 00:02:31.300
‫We want to change the numbers, not keep them the same.

37
00:02:31.590 --> 00:02:34.340
‫Let's explore how that's done in our script.

38
00:02:34.530 --> 00:02:38.610
‫We will change a function to these scale linear function called domain.

39
00:02:41.220 --> 00:02:47.880
‫The domain function allows us to set the input domain for a scale, the input domain should be the smallest

40
00:02:47.880 --> 00:02:50.120
‫and largest values in our data set.

41
00:02:50.400 --> 00:02:55.100
‫We need to pass in an array where the first item in the array is the smallest value.

42
00:02:55.410 --> 00:02:58.960
‫The second item should be the largest number from this example.

43
00:02:59.010 --> 00:03:01.200
‫This would be one hundred and five hundred.

44
00:03:03.750 --> 00:03:09.630
‫The domain function will tell our skill function about the range in our data set, the next step is

45
00:03:09.630 --> 00:03:13.010
‫to give it the output range or the data we want to scale it to.

46
00:03:13.350 --> 00:03:16.500
‫We can set the output range by changing the range function.

47
00:03:19.040 --> 00:03:24.920
‫This function will accept an array with the data we want to scale our original data to, we can scale

48
00:03:24.920 --> 00:03:26.680
‫down the data or scale it up.

49
00:03:26.690 --> 00:03:29.300
‫I'm going to input 10 and 350.

50
00:03:31.900 --> 00:03:38.740
‫In most examples, the higher end of the range will be set to the images, height or width, the lower

51
00:03:38.740 --> 00:03:40.810
‫end of the range can be anything we want.

52
00:03:41.080 --> 00:03:47.150
‫You may be tempted to put zero that can work in some cases, but there is a problem with inputting zero.

53
00:03:47.680 --> 00:03:50.300
‫This is because zero usually means nothing.

54
00:03:50.530 --> 00:03:54.530
‫However, the number one hundred is something we want to represent in a chart.

55
00:03:54.850 --> 00:03:59.110
‫If we set the corresponding value to zero, the shape may not even appear.

56
00:03:59.470 --> 00:04:02.230
‫So I like to pick a number that gives it some room.

57
00:04:02.470 --> 00:04:08.170
‫The number 10 corresponds to one hundred and the number three fifty corresponds to five hundred.

58
00:04:08.770 --> 00:04:13.510
‫To reiterate, this will return a function that will scale any data we pass into it.

59
00:04:13.900 --> 00:04:18.250
‫The function returned will be modified according to the methods we change after it.

60
00:04:18.700 --> 00:04:20.110
‫Lets see this in action.

61
00:04:20.230 --> 00:04:24.700
‫In the console, we will run the scale function with the number five hundred.

62
00:04:27.110 --> 00:04:32.780
‫The function has returned three fifty, if I put one hundred, it's been scaled down to ten.

63
00:04:35.260 --> 00:04:40.870
‫I'm allowed to input any number I like, including numbers higher or lower than the ranges, we input

64
00:04:40.870 --> 00:04:41.030
‫it.

65
00:04:41.380 --> 00:04:46.390
‫For example, if I put 600, that should be scaled down to 435.

66
00:04:48.780 --> 00:04:53.160
‫You can even input numbers in between, we can pass in the number 300.

67
00:04:55.720 --> 00:04:58.170
‫This function will return the number one 80.

68
00:04:58.510 --> 00:05:01.390
‫Let's look at the chart we saw in the previous lecture.

69
00:05:03.800 --> 00:05:10.850
‫As you can see, both the domain and range stayed the same length, D3 takes care of making the numbers

70
00:05:10.850 --> 00:05:11.720
‫proportional.

71
00:05:14.140 --> 00:05:16.820
‫Our scale works great, but it's not perfect yet.

72
00:05:17.110 --> 00:05:21.480
‫Currently, we are hard coating the numbers into the array of the domain function.

73
00:05:21.820 --> 00:05:23.560
‫What if our dataset changes?

74
00:05:23.710 --> 00:05:26.800
‫We would have to update the domain function constantly.

75
00:05:27.070 --> 00:05:32.360
‫In a real project, you would have to calculate the smallest and largest values in an array.

76
00:05:32.800 --> 00:05:38.800
‫We can make our code scalable by letting D3 determine the smallest and largest values in an array.

77
00:05:39.190 --> 00:05:44.800
‫In the resource section of this lecture, I provide a link to a package called D three Array.

78
00:05:47.370 --> 00:05:54.420
‫If we scroll down to the description, the library says the following data in JavaScript is often represented

79
00:05:54.420 --> 00:05:58.490
‫by an iterable such as an array set or a generator.

80
00:05:58.680 --> 00:06:04.280
‫And so iterable manipulation is a common task when analyzing or visualizing data.

81
00:06:04.890 --> 00:06:10.950
‫The three array package defines a set of methods for interacting with arrays by default.

82
00:06:11.190 --> 00:06:14.130
‫This package is included in the core of D three.

83
00:06:14.470 --> 00:06:18.040
‫We don't have to do anything to make sure it's available to us.

84
00:06:18.330 --> 00:06:22.410
‫There are three methods available in this package for solving our dilemma.

85
00:06:22.950 --> 00:06:29.400
‫In the domain method, we will replace the first item in the array with the three main function.

86
00:06:31.880 --> 00:06:38.150
‫The main function you can accept in Iran, we will pass him the slices array, it'll be able to search

87
00:06:38.150 --> 00:06:41.180
‫through the array for the smallest number in our data set.

88
00:06:41.630 --> 00:06:45.780
‫The volume was returned by the method or the second item in the array.

89
00:06:45.890 --> 00:06:50.090
‫We will replace this method with the three max function.

90
00:06:52.600 --> 00:06:58.600
‫It does the same thing as they did three main function, except it overturned the largest value in a

91
00:06:58.600 --> 00:07:01.630
‫data set, we will pass him these slices away.

92
00:07:04.150 --> 00:07:10.240
‫These two methods have made our code scalable at any time we can swap out our data with a different

93
00:07:10.240 --> 00:07:13.090
‫data set, we can shorten this even further.

94
00:07:13.390 --> 00:07:18.610
‫We will replace the entire array with a function called 3.0 extent.

95
00:07:21.140 --> 00:07:27.710
‫The three extent function will return an era where the first item in the array is the smallest value

96
00:07:27.860 --> 00:07:35.880
‫and the second item is the largest value, it does the same thing as the three men and three max functions.

97
00:07:36.200 --> 00:07:38.960
‫It's a shorter way to write out what we had before.

98
00:07:39.170 --> 00:07:41.150
‫We will pass him these slices array.

99
00:07:43.680 --> 00:07:48.120
‫In the console, let's test out the scale function with the random value.

100
00:07:50.630 --> 00:07:56.780
‫These scale function works as expected, all right, at this point, you shouldn't have a basic understanding

101
00:07:56.780 --> 00:07:58.920
‫of scales in the next lecture.

102
00:07:58.970 --> 00:08:03.200
‫We'll take a look at how to apply scales to our visualizations.

