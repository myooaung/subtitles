1
00:00:00,480 --> 00:00:06,210
‫Nesta aula, aprenderíamos sobre funções de acessador, parece um termo complicado, mas prometo que

2
00:00:06,510 --> 00:00:07,820
‫não é.

3
00:00:08,040 --> 00:00:12,350
‫Vamos aprender por que precisamos de uma função de acessador para começar em nosso script.

4
00:00:12,360 --> 00:00:13,800
‫Já fizemos muito.

5
00:00:14,040 --> 00:00:18,540
‫Os dados foram recuperados, as dimensões foram definidas e desenhamos a imagem.

6
00:00:18,990 --> 00:00:23,100
‫A próxima etapa é começar a desenhar algumas formas, o primeiro conjunto de formas.

7
00:00:23,100 --> 00:00:24,930
‫Vamos desenhar nossos círculos.

8
00:00:25,230 --> 00:00:28,710
‫Os dados em um gráfico de dispersão são representados por um grupo de pontos.

9
00:00:28,890 --> 00:00:31,320
‫Podemos desenhar um ponto com esses elementos de círculo.

10
00:00:31,800 --> 00:00:35,250
‫Já temos uma ideia de como podemos adicionar círculos à nossa imagem.

11
00:00:35,670 --> 00:00:39,420
‫Cada círculo que desenhamos deve ser unido aos dados em nosso conjunto de dados.

12
00:00:39,690 --> 00:00:45,240
‫Não queremos desenhar mais círculos do que o necessário, nem queremos desenhar menos círculos do que o que está em

13
00:00:45,240 --> 00:00:45,940
‫nossos dados.

14
00:00:46,440 --> 00:00:47,480
‫Aqui está o que faremos.

15
00:00:47,610 --> 00:00:49,860
‫Vamos criar uma seleção de círculos.

16
00:00:50,190 --> 00:00:55,020
‫Esses três retornarão uma seleção vazia porque não desenhamos nenhum círculo em nossa imagem.

17
00:00:55,320 --> 00:00:58,630
‫A seguir, juntaremos o conjunto de dados com a seleção vazia.

18
00:00:59,220 --> 00:01:03,320
‫Isso forçará D3 a colocar o conjunto de dados em uma seleção inteira.

19
00:01:03,630 --> 00:01:08,940
‫A partir daí, podemos iniciar o processo de desenho de círculos para cada item em toda a seleção.

20
00:01:09,300 --> 00:01:11,790
‫Este é um processo com o qual já estamos familiarizados.

21
00:01:12,090 --> 00:01:18,420
‫A diferença é que trabalharemos com SVG em vez de elementos HTML regulares na parte inferior da

22
00:01:18,420 --> 00:01:19,090
‫função.

23
00:01:19,110 --> 00:01:21,540
‫Vamos remover as linhas onde desenhamos um círculo.

24
00:01:21,780 --> 00:01:26,130
‫Vamos substituí-lo por um comentário que diz os seguintes círculos desenhados.

25
00:01:28,550 --> 00:01:34,160
‫Abaixo deste comentário, vamos começar criando uma seleção, vamos fazer a seleção na seleção

26
00:01:34,160 --> 00:01:37,010
‫do container com o método select all.

27
00:01:39,560 --> 00:01:44,120
‫Estamos chamando o método select all porque estaremos desenhando vários círculos.

28
00:01:44,420 --> 00:01:46,370
‫Vamos passar neste elemento de círculo.

29
00:01:48,880 --> 00:01:53,770
‫A função irá retornar uma seleção vazia, é perfeitamente normal que isso aconteça.

30
00:01:53,920 --> 00:02:00,490
‫Na verdade, você encontrará muitos exemplos em que os desenvolvedores farão uma seleção vazia, fazendo uma

31
00:02:00,490 --> 00:02:01,600
‫seleção vazia.

32
00:02:01,730 --> 00:02:05,110
‫Todos os nossos dados serão colocados na seleção de entrada.

33
00:02:05,440 --> 00:02:10,450
‫Isso garante que seremos capazes de desenhar uma forma para cada dado de uma só vez.

34
00:02:11,050 --> 00:02:16,680
‫Depois de criar a seleção, vamos alterar o método de dados para juntar os dados à nossa seleção.

35
00:02:17,080 --> 00:02:19,710
‫O método de dados exigirá nossos dados.

36
00:02:19,930 --> 00:02:22,300
‫Vamos passar para ele a variável do conjunto de dados.

37
00:02:24,770 --> 00:02:27,440
‫A seguir, vamos alterar o método de junção.

38
00:02:30,170 --> 00:02:35,250
‫O método de junção percorrerá as seleções de entrada e saída retornadas pelo método de dados.

39
00:02:35,570 --> 00:02:39,980
‫Não temos formas que precisam ser removidas, portanto, a seleção de saída estará vazia.

40
00:02:40,370 --> 00:02:43,120
‫A seleção de entrada é o que mais nos interessa.

41
00:02:43,430 --> 00:02:46,250
‫Podemos passar o nome da forma que queremos desenhar.

42
00:02:46,460 --> 00:02:48,020
‫Vamos passar em círculo.

43
00:02:50,610 --> 00:02:53,310
‫O método join retornará uma nova seleção.

44
00:02:53,610 --> 00:02:57,670
‫A seleção deve conter uma lista de círculos que foram adicionados ao documento.

45
00:02:57,990 --> 00:03:01,380
‫Deve haver aproximadamente trezentos e sessenta e cinco círculos.

46
00:03:01,650 --> 00:03:03,300
‫Vamos fazer o aplicativo no navegador.

47
00:03:05,820 --> 00:03:12,930
‫Sob o painel de elementos, se espiarmos dentro do elemento SVG, encontraremos uma longa lista de elementos de círculo em que

48
00:03:13,230 --> 00:03:15,330
‫cada círculo representará o desenho.

49
00:03:15,330 --> 00:03:20,890
‫Um dia, a página aparecerá vazia porque precisamos adicionar um raio aos nossos círculos.

50
00:03:21,210 --> 00:03:24,650
‫Vamos trabalhar para adicionar a posição e o tamanho de cada círculo.

51
00:03:27,260 --> 00:03:30,710
‫De volta à edição, vamos mudar o método dos atributos.

52
00:03:33,310 --> 00:03:37,570
‫O nome do atributo que vamos modificar é Atributo DCX.

53
00:03:40,030 --> 00:03:45,490
‫É aqui que as coisas podem ficar complicadas, a exposição de um círculo deve ser baseada nos dados.

54
00:03:45,700 --> 00:03:47,980
‫A questão é: como obtemos os dados?

55
00:03:47,980 --> 00:03:49,890
‫Joynes para um círculo específico.

56
00:03:50,140 --> 00:03:52,630
‫Podemos usar o que é chamado de função de acessador.

57
00:03:55,200 --> 00:04:01,050
‫E função de acesso é uma função que retorna uma propriedade em um objeto, é uma

58
00:04:01,050 --> 00:04:07,950
‫função que tenta acessar uma propriedade aninhada profundamente dentro de um objeto, portanto, a palavra acessador DNA pode ser complexa.

59
00:04:08,130 --> 00:04:11,760
‫Nossos dados se são um exemplo de uma estrutura de dados complexa.

60
00:04:12,030 --> 00:04:18,250
‫É uma matriz de objetos onde cada objeto representa um dia de um ano inteiro dentro de cada objeto.

61
00:04:18,300 --> 00:04:20,370
‫Existem mais propriedades e objetos.

62
00:04:20,790 --> 00:04:27,360
‫D3 não sabe qual propriedade deve usar como valor para o atributo que precisamos para construir D três,

63
00:04:27,360 --> 00:04:29,190
‫qual propriedade deve acessar.

64
00:04:29,430 --> 00:04:36,690
‫Como uma observação lateral, em alguns casos, você pode ver a documentação se referir a funções de acessador apenas como acessadores.

65
00:04:36,960 --> 00:04:38,160
‫Eles significam a mesma coisa.

66
00:04:40,740 --> 00:04:46,680
‫O segundo argumento para o método de atributo pode ser uma função acessadora que permite passar uma função de seta.

67
00:04:49,130 --> 00:04:54,980
‫Isso vale para os outros métodos de transformação também, nem sempre precisamos codificar permanentemente um valor que podemos passar

68
00:04:54,980 --> 00:04:58,460
‫em uma função que deve retornar o valor para o atributo.

69
00:04:58,850 --> 00:05:01,390
‫É aqui que a beleza do D3 entra em jogo.

70
00:05:01,730 --> 00:05:08,810
‫Se nossa seleção tiver dados associados a ela, D3 nos permitirá acessar os dados associados ao elemento

71
00:05:08,810 --> 00:05:09,350
‫atual.

72
00:05:09,920 --> 00:05:13,060
‫D3 pode fazer um loop em cada elemento da seleção.

73
00:05:13,400 --> 00:05:17,800
‫A junção de dados a um elemento será passada para nossa função de acessador.

74
00:05:18,170 --> 00:05:23,180
‫É algo que o D3 cuida para que possamos entender melhor.

75
00:05:23,270 --> 00:05:27,710
‫Vamos aceitar os dados como D, então registraremos esse argumento.

76
00:05:30,140 --> 00:05:31,940
‫Vamos mudar para o navegador.

77
00:05:34,420 --> 00:05:39,940
‫No console, haverá mais de trezentos registros lá, os objetos em nosso array de conjuntos de dados.

78
00:05:40,270 --> 00:05:43,390
‫Não precisamos percorrer cada elemento em nossa seleção.

79
00:05:43,660 --> 00:05:45,870
‫Esses três vão cuidar disso para nós.

80
00:05:46,090 --> 00:05:52,110
‫A função de acessador será fornecida com cada objeto unido a um elemento específico que está em nossa seleção.

81
00:05:52,450 --> 00:05:55,700
‫Isso nos permitirá modificar cada atributo de acordo.

82
00:05:56,320 --> 00:05:57,940
‫Voltemos ao nosso editor.

83
00:05:58,150 --> 00:06:04,330
‫Em vez de registrar o objeto, retornaremos a propriedade D atualmente de umidade do ponto.

84
00:06:06,940 --> 00:06:13,450
‫O objeto atual contém os dados meteorológicos para o dia dentro deste objeto, a propriedade umidade irá

85
00:06:13,450 --> 00:06:14,800
‫armazenar a umidade.

86
00:06:15,130 --> 00:06:17,440
‫Existem dois eixos em um gráfico de dispersão.

87
00:06:17,710 --> 00:06:22,060
‫Cada eixo representará a umidade ou a temperatura aparente.

88
00:06:22,390 --> 00:06:26,130
‫Vamos desenhar a umidade no eixo x.

89
00:06:26,440 --> 00:06:29,660
‫A temperatura aparente será desenhada no eixo Y.

90
00:06:30,160 --> 00:06:34,890
‫O objetivo de um gráfico de dispersão é mostrar uma relação entre dois conjuntos de dados.

91
00:06:35,110 --> 00:06:40,290
‫Normalmente, o objetivo é verificar se um conjunto de dados afeta o outro conjunto de dados.

92
00:06:40,690 --> 00:06:44,290
‫Nossa teoria original era que a umidade pode afetar a temperatura.

93
00:06:44,740 --> 00:06:49,050
‫Podemos pensar na umidade como a causa e na temperatura como o efeito.

94
00:06:49,390 --> 00:06:51,250
‫A regra geral é esta.

95
00:06:51,400 --> 00:06:53,950
‫A causa deve ser desenhada no eixo x.

96
00:06:54,190 --> 00:06:57,010
‫O efeito deve ser desenhado no eixo Y.

97
00:06:57,280 --> 00:07:03,190
‫Portanto, a umidade será representada pelo eixo X e a temperatura será representada pelo

98
00:07:03,190 --> 00:07:04,280
‫eixo Y.

99
00:07:04,750 --> 00:07:08,800
‫Vamos atualizar o atributo Y alterando outro método de atributo.

100
00:07:09,070 --> 00:07:11,980
‫O nome do atributo é C. y.

101
00:07:14,580 --> 00:07:21,450
‫Passaremos uma função de seta onde retornaremos a propriedade D de temperatura aparente atualmente.

102
00:07:23,990 --> 00:07:29,330
‫Acessar essas propriedades é algo que faremos repetidamente, pois é o caso, devemos terceirizar

103
00:07:29,330 --> 00:07:31,720
‫as funções e duas variáveis.

104
00:07:32,060 --> 00:07:35,270
‫Vamos cortar a função de acesso para o eixo x.

105
00:07:37,640 --> 00:07:44,120
‫No topo da função abaixo da variável do conjunto de dados, criaremos uma variável chamada acessador X, seu

106
00:07:44,480 --> 00:07:47,030
‫valor será a função que capturamos anteriormente.

107
00:07:49,360 --> 00:07:53,050
‫A seguir, definiremos uma variável chamada Por que acessor.

108
00:07:55,490 --> 00:08:01,190
‫Seu valor será a função que criamos para esses atributos específicos, vamos cortá-la do método de

109
00:08:01,190 --> 00:08:01,610
‫atributo.

110
00:08:07,090 --> 00:08:14,050
‫Nossos acessores agora são reutilizáveis, vamos voltar aos métodos de atributo e nos respectivos acessadores.

111
00:08:16,430 --> 00:08:22,250
‫Existem mais dois atributos que vamos adicionar e vamos mudar outro método de atributo para o atributo

112
00:08:22,250 --> 00:08:22,880
‫radius.

113
00:08:23,120 --> 00:08:25,130
‫O raio será de cinco pixels.

114
00:08:27,550 --> 00:08:32,950
‫O próximo atributo será adicionado, será o atributo Phil, a cor desses círculos será vermelha.

115
00:08:35,500 --> 00:08:37,390
‫Vamos ver o gráfico no navegador.

116
00:08:39,840 --> 00:08:45,930
‫Nossos círculos estão aparecendo no gráfico, pode parecer uma linha, mas garanto que eles não são

117
00:08:45,930 --> 00:08:47,580
‫realmente o que pretendíamos.

118
00:08:47,730 --> 00:08:49,510
‫Esses círculos devem ser espalhados.

119
00:08:49,710 --> 00:08:51,790
‫É muito difícil ler os dados.

120
00:08:52,020 --> 00:08:57,810
‫A razão pela qual os círculos são desenhados assim é porque nossos dados não são escalados para serem desenhados na próxima

121
00:08:57,810 --> 00:08:58,360
‫aula.

122
00:08:58,470 --> 00:09:02,370
‫Exploraremos como podemos resolver esse problema aprendendo sobre escalas.

