WEBVTT
﻿1
00:00:00.570 --> 00:00:04.170
‫In this section, we're finally going to start drawing some graphs.

2
00:00:04.380 --> 00:00:06.570
‫The foundation has been laid for D3.

3
00:00:06.870 --> 00:00:11.120
‫We can take some knowledge we've learned so far to begin drawing advanced graphs.

4
00:00:11.400 --> 00:00:14.040
‫The first graph will be drawing is a scatterplot.

5
00:00:14.250 --> 00:00:17.700
‫Let's review what a scatterplot is, a scatterplot.

6
00:00:17.700 --> 00:00:21.470
‫It's a type of chart for showing the relationship between two sets of data.

7
00:00:21.720 --> 00:00:24.750
‫They were a great way of viewing a correlation if there is any.

8
00:00:25.050 --> 00:00:29.220
‫Another benefit of a scatter plot is being able to view large amounts of data.

9
00:00:29.700 --> 00:00:33.930
‫Here's an example of a scatterplot scatter plants have two axes.

10
00:00:33.960 --> 00:00:36.780
‫A dot is drawn to represent two values.

11
00:00:36.990 --> 00:00:41.400
‫In some cases, the size of the dot can be another way of representing data.

12
00:00:41.400 --> 00:00:42.780
‫But that's not to comment.

13
00:00:42.960 --> 00:00:48.440
‫In this example, we are looking at the relationship between a tree's height and its diameter.

14
00:00:48.960 --> 00:00:51.450
‫The goal of a chart is to answer a question.

15
00:00:51.660 --> 00:00:57.710
‫In this case, we may ask ourselves, is there a relationship between the height of a tree and its diameter?

16
00:00:57.930 --> 00:01:02.940
‫According to this chart, there is the taller tree, the larger its diameter.

17
00:01:03.180 --> 00:01:09.000
‫This chart makes it clear other examples may be the relationship between height and weight.

18
00:01:09.270 --> 00:01:11.370
‫Taller people will generally weigh more.

19
00:01:11.610 --> 00:01:14.910
‫Another example can be the cost of health care by age.

20
00:01:15.090 --> 00:01:18.740
‫The older you are, the more likely you are to spend on health care.

21
00:01:18.990 --> 00:01:22.800
‫Scatter plots are incredible at displaying relationships in our data.

22
00:01:24.200 --> 00:01:29.020
‫Let's learn about what we're going to draw currently, I'm viewing the weather for New York City.

23
00:01:29.240 --> 00:01:32.900
‫New York has seasonal weather on most weather tracking sites.

24
00:01:32.910 --> 00:01:35.110
‫You will be presented with two temperatures.

25
00:01:35.360 --> 00:01:39.140
‫There's the actual temperature and then there's the apparent temperature.

26
00:01:39.290 --> 00:01:41.910
‫It may have different names across different apps.

27
00:01:42.290 --> 00:01:45.140
‫The actual temperature is the measurable temperature.

28
00:01:45.350 --> 00:01:48.890
‫The apparent temperature is the temperature perceived by humans.

29
00:01:49.070 --> 00:01:53.630
‫In some locations, the weather can feel a hotter or colder than it actually is.

30
00:01:53.840 --> 00:01:58.640
‫For example, if it's windy outside, you may feel cooler than the current temperature.

31
00:01:58.850 --> 00:02:02.690
‫On the other hand, if it's humid, you can feel hot and sticky.

32
00:02:02.990 --> 00:02:09.380
‫The apparent temperature is to give a better idea of how people may feel going outside the scatterplot.

33
00:02:09.380 --> 00:02:13.690
‫We're going to draw will show the relationship between humidity and the temperature.

34
00:02:14.000 --> 00:02:15.500
‫Here's my hypothesis.

35
00:02:15.650 --> 00:02:19.280
‫The more humid it is, the higher the apparent temperature may be.

36
00:02:19.500 --> 00:02:20.380
‫Is that true?

37
00:02:20.450 --> 00:02:21.320
‫Let's find out.

38
00:02:21.630 --> 00:02:23.900
‫That's the purpose of data visualization.

39
00:02:24.080 --> 00:02:26.480
‫It can help answer questions like these.

40
00:02:26.900 --> 00:02:32.600
‫In the resource section of this lecture, I provide a zip file with some starter files, download the

41
00:02:32.600 --> 00:02:37.820
‫file, unpack the files anywhere on your system, and point your editor to the project.

42
00:02:38.030 --> 00:02:41.570
‫I recommend working in an empty directory to reduce clutter.

43
00:02:41.810 --> 00:02:43.490
‫Pause the video if you need to.

44
00:02:45.450 --> 00:02:48.250
‫There are a total of four files in the zip file.

45
00:02:48.420 --> 00:02:50.030
‫Let's review each file.

46
00:02:50.070 --> 00:02:52.350
‫We will start with the HTML file.

47
00:02:52.650 --> 00:02:57.750
‫The HTML file contains a basic template in the head section of the template.

48
00:02:57.870 --> 00:02:59.720
‫We are loading a serious file.

49
00:02:59.970 --> 00:03:03.030
‫If we open this file, we won't find much going on.

50
00:03:05.630 --> 00:03:09.000
‫The access file has one selector called Chart.

51
00:03:09.380 --> 00:03:12.970
‫The reason I've added this in is to center the chart when we draw it.

52
00:03:13.220 --> 00:03:15.580
‫It's not necessary to have this styling.

53
00:03:15.800 --> 00:03:22.990
‫However, I think it'll make things visually clearer when we start drawing charts back in the HTML file,

54
00:03:23.030 --> 00:03:26.600
‫we will find the development with the idea of charge.

55
00:03:26.900 --> 00:03:28.410
‫At the moment, it's empty.

56
00:03:28.700 --> 00:03:32.330
‫Generally, we will draw our chart in a specific element.

57
00:03:32.570 --> 00:03:39.040
‫In most examples, charts are drawn in a specific location rather than as a child to the body tag.

58
00:03:39.290 --> 00:03:40.610
‫It's common practice.

59
00:03:40.850 --> 00:03:43.280
‫We will follow this practice throughout the course.

60
00:03:43.790 --> 00:03:50.880
‫Lastly, we have two script tags, one for D3 and another for a file called Apgar's.

61
00:03:51.110 --> 00:03:54.170
‫This is the third file that was included with the zip file.

62
00:03:56.630 --> 00:03:57.690
‫It's empty, too.

63
00:03:57.890 --> 00:04:04.250
‫We are going to be writing some code in a moment, the last file in the zip file is the data JSON file.

64
00:04:06.690 --> 00:04:11.730
‫Your editor may not highlight the syntax of the file because it's an incredibly large file.

65
00:04:12.060 --> 00:04:17.670
‫I've taken the liberty of scraping the weather data of New York in the past 365 days.

66
00:04:17.970 --> 00:04:21.510
‫This file is an array of objects for each object represents.

67
00:04:21.510 --> 00:04:25.590
‫One day we will take a better look at this file after loading it in.

68
00:04:26.010 --> 00:04:29.070
‫Before we do, I want to stress one important point.

69
00:04:29.430 --> 00:04:34.080
‫D3 is a library that can be used to draw any type of visualization.

70
00:04:34.380 --> 00:04:38.530
‫This is what makes these three the most popular choice for data visualization.

71
00:04:38.820 --> 00:04:42.270
‫It's not bias towards any particular chart or graph.

72
00:04:42.450 --> 00:04:45.180
‫It's flexible for any kind of visual task.

73
00:04:45.630 --> 00:04:47.170
‫All right, let's get started.

74
00:04:47.400 --> 00:04:50.930
‫The first task for drawing any chart is to grab the data.

75
00:04:51.150 --> 00:04:53.670
‫Data can come from an API or a file.

76
00:04:53.820 --> 00:04:57.430
‫We are going to be using the data from the data JSON file.

77
00:04:57.690 --> 00:05:01.540
‫We are going to make a request for this file in our app JS file.

78
00:05:01.770 --> 00:05:04.860
‫We will define an asynchronous function called Draw.

79
00:05:07.460 --> 00:05:12.710
‫The function is a Synchronoss, because we are going to be performing in SCDP request for this file

80
00:05:13.010 --> 00:05:15.230
‫below the draw function, we will call it.

81
00:05:17.840 --> 00:05:21.210
‫The draw function will be responsible for drawing our charts.

82
00:05:21.530 --> 00:05:27.140
‫We will be writing majority of our code inside this function, inside this function, we will call the

83
00:05:27.140 --> 00:05:30.470
‫D3 JSON function with the await keyword.

84
00:05:33.020 --> 00:05:38.870
‫The jasen function has one argument, the name of the file we'd like to grab, we will pass in the data

85
00:05:39.110 --> 00:05:40.370
‫JSON file name.

86
00:05:42.880 --> 00:05:46.690
‫We are going to be storing this data in a variable called data set.

87
00:05:49.120 --> 00:05:51.140
‫We will need it in upcoming lectures.

88
00:05:51.310 --> 00:05:52.860
‫It's a good idea to store it.

89
00:05:53.140 --> 00:05:57.880
‫Let's view the data in our browser, open the file with the live server extension.

90
00:06:00.350 --> 00:06:06.170
‫The page will be blank, that's to be expected since we didn't draw anything yet and the developer tools

91
00:06:06.170 --> 00:06:07.640
‫open the network panel.

92
00:06:10.110 --> 00:06:15.990
‫The network panel will display information about requests made by our page, it may be blank because

93
00:06:15.990 --> 00:06:22.260
‫we opened it after opening the page to be able to view the requests we may need to refresh the page

94
00:06:22.740 --> 00:06:24.330
‫after refreshing the page.

95
00:06:24.360 --> 00:06:27.470
‫We will see the list of requests made by our browser.

96
00:06:27.750 --> 00:06:31.830
‫The one request we're interested in is the data JSON file.

97
00:06:34.270 --> 00:06:39.850
‫If we view this file, we will be able to view the data under the preview tab, the browser doesn't

98
00:06:39.850 --> 00:06:43.510
‫have any problem with displaying the data, unlike our editors.

99
00:06:43.750 --> 00:06:46.780
‫This should give us a clear view of what's inside this file.

100
00:06:47.050 --> 00:06:51.640
‫The file will contain an array of objects since there are so many objects.

101
00:06:51.670 --> 00:06:57.210
‫The browser will break the array into multiple arrays where each array contains one hundred objects.

102
00:06:57.520 --> 00:07:00.550
‫We will look inside of the first object of the first array.

103
00:07:03.290 --> 00:07:10.010
‫Each object has the same properties, the property we care most about is the currently property, it

104
00:07:10.010 --> 00:07:13.570
‫contains the weather data for the day the object represents.

105
00:07:13.880 --> 00:07:16.730
‫There are a lot of properties available about the weather.

106
00:07:16.940 --> 00:07:24.590
‫We can grab things such as the dew point, ozone, UV index, etc. The two properties we care most about

107
00:07:24.590 --> 00:07:27.940
‫are the humidity and apparent temperature properties.

108
00:07:28.190 --> 00:07:30.100
‫There's also the temperature property.

109
00:07:30.290 --> 00:07:32.330
‫However, we aren't going to need it.

110
00:07:32.580 --> 00:07:36.440
‫The goal is to see if the humidity can affect the apparent temperature.

111
00:07:36.680 --> 00:07:40.730
‫In some cases, the apparent temperature and temperature may be the same.

112
00:07:40.910 --> 00:07:42.520
‫That happens from time to time.

113
00:07:42.950 --> 00:07:45.380
‫Our data is ready in the next lecture.

114
00:07:45.410 --> 00:07:48.770
‫We're going to continue working on these scatterplot project.

