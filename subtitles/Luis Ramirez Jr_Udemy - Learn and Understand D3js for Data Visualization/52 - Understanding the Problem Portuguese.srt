1
00:00:00,560 --> 00:00:05,990
‫Nesta palestra, vamos falar sobre o problema com o nosso encarregado, atualmente, há trezentos e sessenta

2
00:00:05,990 --> 00:00:07,870
‫e cinco barras no gráfico.

3
00:00:08,090 --> 00:00:09,990
‫Alguns deles se sobrepõem.

4
00:00:10,250 --> 00:00:12,250
‫Esse não é necessariamente o problema.

5
00:00:12,410 --> 00:00:15,740
‫O problema é que cada barra representa um valor.

6
00:00:15,920 --> 00:00:19,280
‫Os histogramas não são cobrados para exibir um único valor.

7
00:00:19,550 --> 00:00:23,300
‫O objetivo de um histograma é mostrar a frequência em um conjunto de dados.

8
00:00:25,370 --> 00:00:31,490
‫Vejamos nosso exemplo fictício para entender como um histograma funciona novamente; neste exemplo, temos uma matriz

9
00:00:31,490 --> 00:00:34,880
‫de 10 números variando de dez a cem.

10
00:00:35,330 --> 00:00:39,440
‫Um histograma mostrará quantas vezes um número aparece e organiza.

11
00:00:39,650 --> 00:00:42,140
‫Os intervalos são escritos no eixo x.

12
00:00:42,440 --> 00:00:45,410
‫A primeira barra varia de 10 a 30.

13
00:00:45,740 --> 00:00:49,820
‫O eixo Y nos diz quantos números aparecem em um determinado intervalo.

14
00:00:49,970 --> 00:00:54,080
‫De acordo com o gráfico, cinco números aparecem entre 10 e 30.

15
00:00:54,590 --> 00:00:59,750
‫Um histograma mostra essencialmente a frequência com que um valor aparece para cada segmento.

16
00:01:00,140 --> 00:01:02,870
‫Uma coisa que você notará é quantos baldes existem.

17
00:01:03,170 --> 00:01:07,530
‫Há um total de cinco baldes, apesar de haver 10 números na matriz.

18
00:01:07,880 --> 00:01:12,260
‫Normalmente, sempre haverá menos baldes do que itens em uma matriz.

19
00:01:12,680 --> 00:01:14,900
‫Portanto, nosso problema fica claro.

20
00:01:15,200 --> 00:01:16,760
‫Os dados são formatados.

21
00:01:16,880 --> 00:01:19,010
‫Não é que os dados estejam incompletos.

22
00:01:19,250 --> 00:01:20,570
‫Esse é um problema comum.

23
00:01:20,570 --> 00:01:21,560
‫Você vai encontrar.

24
00:01:21,830 --> 00:01:27,030
‫Os dados que você tem podem estar completos, mas podem não estar formatados da maneira que você gostaria.

25
00:01:27,590 --> 00:01:31,650
‫Estamos tentando percorrer trezentos e sessenta e cinco itens em uma matriz.

26
00:01:31,860 --> 00:01:34,740
‫No entanto, não é por isso que devemos fazer um loop.

27
00:01:34,990 --> 00:01:38,570
‫Em vez disso, os dados devem ser agrupados com base nas frequências.

28
00:01:38,840 --> 00:01:41,780
‫Então queremos ser capazes de percorrer os grupos.

29
00:01:42,140 --> 00:01:47,550
‫Isso nos leva à questão de qual é o formato preferido para os dados quando desenhamos histogramas?

30
00:01:47,840 --> 00:01:50,210
‫Aqui está um exemplo de como os dados se parecem.

31
00:01:50,210 --> 00:01:55,160
‫Se foi formatado corretamente à esquerda, temos o conjunto de dados original.

32
00:01:55,490 --> 00:02:00,020
‫Não está formatado corretamente para ser desenhado como um histograma à direita.

33
00:02:00,050 --> 00:02:03,870
‫Temos os mesmos dados formatados para serem desenhados como um histograma.

34
00:02:04,250 --> 00:02:06,710
‫Observe como os dados permanecem inalterados.

35
00:02:06,890 --> 00:02:09,870
‫Ainda temos os mesmos números na versão formatada.

36
00:02:10,160 --> 00:02:12,170
‫É importante entender isso.

37
00:02:12,650 --> 00:02:15,920
‫Estamos tentando formatar os dados, não transformá-los.

38
00:02:16,490 --> 00:02:20,420
‫A matriz de números foi formatada em uma matriz de matrizes.

39
00:02:20,600 --> 00:02:22,520
‫Cada array contém os números.

40
00:02:22,700 --> 00:02:27,570
‫Eu adicionei comentários para mostrar a faixa de valores que você pode esperar encontrar em cada array.

41
00:02:27,950 --> 00:02:31,520
‫A primeira matriz conterá números entre 10 e 30.

42
00:02:31,880 --> 00:02:37,250
‫O segundo júri conterá números entre 30 e 50, e assim por diante.

43
00:02:37,760 --> 00:02:41,150
‫Aqui estão os dados formatados e o histograma lado a lado.

44
00:02:41,450 --> 00:02:45,430
‫Espero que você possa ver a importância de formatar seus dados.

45
00:02:45,740 --> 00:02:48,710
‫Se os dados vierem no formato desejado, ótimo.

46
00:02:48,920 --> 00:02:51,310
‫É totalmente opcional formatar dados.

47
00:02:51,650 --> 00:02:55,130
‫No entanto, as coisas nem sempre funcionam da maneira que queremos.

48
00:02:55,400 --> 00:03:00,230
‫Se os dados vierem em um formato incorreto, precisaremos formatá-los antes de desenhá-los.

49
00:03:01,490 --> 00:03:08,090
‫Como eu disse antes, este é um problema comum, é tão comum que o D3 fornece um conjunto de funções

50
00:03:08,090 --> 00:03:10,640
‫para formatar seus dados para gráficos específicos.

51
00:03:10,880 --> 00:03:16,280
‫Na seção de recursos desta palestra, forneço um link para o pacote do array D3.

52
00:03:16,580 --> 00:03:19,730
‫Vinculei a uma seção específica chamada Binz.

53
00:03:20,180 --> 00:03:27,440
‫A função D3 Behn é uma função que formatará seus dados em dois baldes. D três a chama de Binz em vez

54
00:03:27,440 --> 00:03:31,830
‫de baldes, um bean conterá o número de itens em um determinado intervalo.

55
00:03:32,030 --> 00:03:38,720
‫Vamos ler a descrição juntos em grupos de amostras discretas em um número menor de

56
00:03:38,720 --> 00:03:40,600
‫intervalos consecutivos não sobrepostos.

57
00:03:40,880 --> 00:03:46,340
‫Eles são freqüentemente usados para visualizar a distribuição de dados numéricos como histogramas.

58
00:03:46,790 --> 00:03:51,410
‫As três funções Dobbyn foram introduzidas especificamente para histogramas.

59
00:03:51,980 --> 00:03:57,890
‫Isso nos ajudará a formatar nossos dados no formato desejado que será perfeito para desenhar um histograma.

60
00:03:58,070 --> 00:04:01,610
‫Na próxima aula, exploraremos como essa função funciona.

