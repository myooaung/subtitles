WEBVTT
﻿1
00:00:00.390 --> 00:00:06.300
‫In this lecture, we're going to add some labels to the pie chart, labels will help the reader understand

2
00:00:06.300 --> 00:00:07.700
‫each slice of the pie.

3
00:00:07.980 --> 00:00:11.410
‫Once we add some labels, a new problem will become apparent.

4
00:00:11.700 --> 00:00:13.420
‫We'll talk about that in a moment.

5
00:00:13.590 --> 00:00:14.730
‫Let's begin adding.

6
00:00:14.730 --> 00:00:19.110
‫Some labels will be working under the section where we drew the shapes.

7
00:00:19.140 --> 00:00:22.110
‫We're going to create a group separate from the ARC's.

8
00:00:22.380 --> 00:00:26.040
‫We're going to create a copy of the ARC's group selection.

9
00:00:26.370 --> 00:00:29.580
‫The variable will be renamed to Labels Group.

10
00:00:33.490 --> 00:00:39.520
‫The group will be positioned at the center of the pie D3 comes with a function that opposition a label

11
00:00:39.520 --> 00:00:41.500
‫relative to the center of the pie.

12
00:00:41.890 --> 00:00:43.690
‫This is why we're censoring the group.

13
00:00:43.930 --> 00:00:47.290
‫Otherwise, the labels may not get positioned correctly.

14
00:00:47.650 --> 00:00:52.420
‫Next will change the class function to add a class called labels.

15
00:00:54.950 --> 00:01:01.250
‫The label's class will set the font size and family, you can check the access file for the sales that

16
00:01:01.250 --> 00:01:02.440
‫come with this class.

17
00:01:02.700 --> 00:01:04.460
‫They are not these three specific.

18
00:01:05.000 --> 00:01:10.880
‫Let's start adding some text elements to this group at the bottom of a function will make a selection

19
00:01:10.880 --> 00:01:12.500
‫with the select all function.

20
00:01:12.770 --> 00:01:15.650
‫The element will select is the text element.

21
00:01:18.100 --> 00:01:22.930
‫Then we'll join these slices data with the selection by calling the data function.

22
00:01:25.450 --> 00:01:31.510
‫Next will create new elements with the data by calling the joint function with the text element passed

23
00:01:31.510 --> 00:01:31.780
‫in.

24
00:01:34.370 --> 00:01:39.830
‫Before we write some text, we're going to reposition the labels at the moment, they'll be positioned

25
00:01:39.830 --> 00:01:41.160
‫at the center of the pie.

26
00:01:41.510 --> 00:01:45.500
‫The labels should be positioned at the center of their respective arcs.

27
00:01:45.830 --> 00:01:49.460
‫We're going to move the elements by setting the transform attribute.

28
00:01:52.020 --> 00:01:57.660
‫The value for the transform attribute will be an Arab function that accepts Amede argument.

29
00:01:59.940 --> 00:02:04.360
‫We'll return the following translate Argott Centroid.

30
00:02:08.160 --> 00:02:13.920
‫The translate function will move in elements current position, it expects to arguments which are the

31
00:02:13.920 --> 00:02:16.490
‫X and Y coordinates to move the label.

32
00:02:17.040 --> 00:02:20.310
‫We're using a function called Arc Centroid.

33
00:02:20.820 --> 00:02:24.660
‫The centroid function is available on arc generator function.

34
00:02:24.990 --> 00:02:28.200
‫It'll return an array with X and Y coordinates.

35
00:02:28.590 --> 00:02:32.790
‫The coordinates will be based on the arc the label should be relative to.

36
00:02:33.000 --> 00:02:38.760
‫In our case, we're passing on the argument which references the objects in these slices.

37
00:02:38.760 --> 00:02:44.690
‫Array D3 will return coordinates that'll position the label at the center of the arc.

38
00:02:45.270 --> 00:02:50.360
‫Now that our labels are centered, we can start adding the inner content of each label.

39
00:02:50.670 --> 00:02:54.450
‫There are two things the labels will display or are going to display.

40
00:02:54.450 --> 00:02:56.490
‫The age group and the population.

41
00:02:56.850 --> 00:02:58.970
‫The age group will appear on top.

42
00:02:58.980 --> 00:03:01.020
‫The population will appear under it.

43
00:03:01.560 --> 00:03:08.130
‫Since we're working with SVG text element, we will need to create two separate elements for each part

44
00:03:08.130 --> 00:03:08.880
‫of the label.

45
00:03:09.300 --> 00:03:12.960
‫We can separate the two parts by using the T stand element.

46
00:03:13.230 --> 00:03:17.670
‫You can think of the T stand element as the spin element for HTML.

47
00:03:18.150 --> 00:03:20.550
‫We're going to change a function called call.

48
00:03:23.050 --> 00:03:28.960
‫The call function is a JavaScript function that is available on all objects, if we decide to call it

49
00:03:29.170 --> 00:03:34.060
‫D, three will pass on the current selection to the function we pass into the call function.

50
00:03:34.450 --> 00:03:38.050
‫Lets pass in an era where we'll accept the selection as text.

51
00:03:40.440 --> 00:03:45.890
‫You may be wondering why aren't we manipulating the selection directly after the attribute function,

52
00:03:46.200 --> 00:03:51.880
‫we're using the call function because we want to append to certain elements to the current selection.

53
00:03:52.150 --> 00:03:58.490
‫However, if we were to call the append function, the selection will get updated to that standard element.

54
00:03:58.770 --> 00:03:59.850
‫We don't want that.

55
00:04:00.060 --> 00:04:04.050
‫Otherwise we won't be able to append another KeySpan element.

56
00:04:04.590 --> 00:04:10.230
‫The call function is a clever way to manipulate the selection without losing the original selection.

57
00:04:10.620 --> 00:04:16.230
‫D3 will return the initial selection even if we return a new selection from the function.

58
00:04:16.590 --> 00:04:17.940
‫Let me show you what I mean.

59
00:04:18.240 --> 00:04:21.420
‫We're going to return the text append function.

60
00:04:21.720 --> 00:04:24.420
‫The element will append is called KeySpan.

61
00:04:26.930 --> 00:04:29.420
‫We're going to make a copy of the call function.

62
00:04:31.970 --> 00:04:38.450
‫The second call function will upend the t stand element to the Texas election, even though the previous

63
00:04:38.450 --> 00:04:42.850
‫call function returns at Span's election, it won't be the selection.

64
00:04:42.860 --> 00:04:45.110
‫The second call function will manipulate.

65
00:04:45.500 --> 00:04:50.440
‫These three will always return the original selection by using the call function.

66
00:04:50.450 --> 00:04:53.990
‫We can manipulate the current selection as many times as we want.

67
00:04:54.440 --> 00:04:59.810
‫This is incredibly helpful for when we need to append multiple elements to the same selection.

68
00:05:00.380 --> 00:05:03.560
‫The first KeySpan element will hold the age group.

69
00:05:03.800 --> 00:05:05.510
‫We're going to make it stand out by.

70
00:05:05.510 --> 00:05:11.450
‫Changing the font weight property to Bould will change the attribute function to make this change.

71
00:05:13.920 --> 00:05:16.290
‫Then we'll change the text function.

72
00:05:18.800 --> 00:05:24.760
‫Inside, the function will pass in an arrow function that accepts the argument, it will return the

73
00:05:25.610 --> 00:05:26.010
‫data.

74
00:05:26.450 --> 00:05:27.440
‫Name property.

75
00:05:29.870 --> 00:05:35.950
‫Keep in mind, we're working with the formatted data, we can access the name via the data object,

76
00:05:36.230 --> 00:05:41.750
‫we're going to do the same for the second call function, will copy and paste the text function.

77
00:05:44.210 --> 00:05:49.010
‫Then we'll update the return value to data value.

78
00:05:51.450 --> 00:05:52.830
‫Let's refresh the page.

79
00:05:55.200 --> 00:05:58.870
‫Each arc has a label, the label is centered in the arc.

80
00:05:59.140 --> 00:06:02.500
‫However, there are a few problems with this implementation.

81
00:06:02.820 --> 00:06:05.010
‫There are a lot of things we'll need to fix.

82
00:06:05.280 --> 00:06:07.590
‫We'll go over the issues in the next lecture.

