WEBVTT
﻿1
00:00:00.730 --> 00:00:06.460
‫Nesta aula, vamos aprender sobre toda a seleção, juntar dados pode se tornar complexo quando a proporção entre

2
00:00:06.460 --> 00:00:09.750
‫os dados e os elementos não é um para um.

3
00:00:10.120 --> 00:00:14.740
‫Se tivermos mais elementos do que dados, devemos remover os elementos em excesso.

4
00:00:15.190 --> 00:00:21.100
‫Se houver menos elementos do que dados, devemos adicionar mais elementos nas ferramentas do desenvolvedor.

5
00:00:21.130 --> 00:00:25.720
‫O objeto de seleção que retornaremos é diferente dos objetos de seleção anteriores.

6
00:00:25.990 --> 00:00:28.480
‫Uma nova propriedade está disponível chamada Enter.

7
00:00:28.870 --> 00:00:31.120
‫Isso é chamado de seleção de entrada.

8
00:00:31.420 --> 00:00:37.210
‫A seleção de entrada contém uma lista de itens de dados que não foram unidos a um elemento procurando

9
00:00:37.210 --> 00:00:39.360
‫dentro do array, encontraremos um array vazio.

10
00:00:39.640 --> 00:00:44.770
‫Isso porque cada pedaço de dados foi Joynes para um elemento que pode nem sempre ser o caso.

11
00:00:44.980 --> 00:00:48.430
‫Vejamos o que acontece quando não há elementos suficientes no documento.

12
00:00:48.640 --> 00:00:50.080
‫Mude para o editor.

13
00:00:52.460 --> 00:00:57.020
‫No arquivo HTML removeu três listas, itens da lista não ordenada.

14
00:00:59.390 --> 00:01:01.220
‫Em seguida, atualize a página.

15
00:01:03.590 --> 00:01:06.870
‫Desta vez, a seleção inteira não está mais vazia.

16
00:01:07.160 --> 00:01:10.590
‫A seleção inteira terá um total de cinco itens na matriz.

17
00:01:11.420 --> 00:01:13.260
‫Os primeiros dois itens estão vazios.

18
00:01:13.580 --> 00:01:18.680
‫É porque os dois primeiros itens na matriz de dados puderam ser unidos a um elemento.

19
00:01:18.950 --> 00:01:25.040
‫Se quisermos saber quais dados estão associados a qual elemento podemos olhar na propriedade do grupo, a seleção inteira

20
00:01:25.040 --> 00:01:27.710
‫conterá apenas o que não foi associado.

21
00:01:28.130 --> 00:01:34.760
‫Os últimos três itens no array contêm o que é chamado de Internode D três cria um elemento virtual

22
00:01:35.030 --> 00:01:38.300
‫como um elemento que não ocupa espaço no documento.

23
00:01:38.570 --> 00:01:39.820
‫É armazenado na memória.

24
00:01:40.040 --> 00:01:45.860
‫Se olharmos dentro de qualquer um dos nós, descobriremos que o elemento Virtua não contém nenhum atributo

25
00:01:45.860 --> 00:01:46.670
‫ou conteúdo.

26
00:01:46.970 --> 00:01:48.580
‫Ele contém puramente os dados.

27
00:01:49.280 --> 00:01:54.850
‫O objetivo de toda a seleção é nos dizer quantos itens de dados não foram unidos a um elemento.

28
00:01:55.130 --> 00:01:56.660
‫O próximo passo fica claro.

29
00:01:56.930 --> 00:02:02.120
‫Queremos iniciar o processo de criação de novos elementos que podem ser agregados aos dados restantes.

30
00:02:02.690 --> 00:02:06.200
‫O D3 vem com a função que pode controlar todo o processo.

31
00:02:06.470 --> 00:02:07.880
‫Volte para o editor.

32
00:02:10.320 --> 00:02:14.100
‫No arquivo de script, vamos adicionar uma nova função à nossa cadeia.

33
00:02:14.370 --> 00:02:17.910
‫Vamos encadear a função conjunta depois de juntar os dados.

34
00:02:20.510 --> 00:02:26.180
‫O método join, veremos nossa seleção atual, se a seleção inteira existir, ele iniciará o processo

35
00:02:26.180 --> 00:02:32.240
‫de criação de novos elementos no documento para cada item do array à medida que adiciona um novo elemento.

36
00:02:32.390 --> 00:02:36.580
‫Os dados serão movidos do elemento virtual para o elemento no documento.

37
00:02:36.950 --> 00:02:40.640
‫Os novos elementos serão unidos aos dados que não foram unidos.

38
00:02:41.270 --> 00:02:43.330
‫O método join tem um argumento.

39
00:02:43.550 --> 00:02:45.850
‫É o nome da tag que deve gerar.

40
00:02:45.980 --> 00:02:48.530
‫Vamos passar uma tag de item de lista.

41
00:02:51.040 --> 00:02:53.320
‫Vamos atualizar a página para ver o que temos.

42
00:02:55.760 --> 00:03:01.640
‫Na página, podemos ver que novos elementos foram gerados, três pontos estão aparecendo na página.

43
00:03:01.800 --> 00:03:04.850
‫No entanto, não há nada aparecendo próximo a eles.

44
00:03:05.180 --> 00:03:08.560
‫Além disso, eles não estão alinhados com os outros itens da lista.

45
00:03:08.870 --> 00:03:13.310
‫Vamos inspecionar o painel de elementos e as ferramentas do desenvolvedor para descobrir qual é o problema.

46
00:03:15.810 --> 00:03:19.210
‫Existem três elementos de item de lista que aparecem no documento.

47
00:03:19.500 --> 00:03:22.620
‫Estranhamente, eles não aparecem na lista não ordenada.

48
00:03:22.860 --> 00:03:26.840
‫Em vez disso, eles são adicionados como elementos filhos ao elemento HTML.

49
00:03:27.120 --> 00:03:28.510
‫Cada item estará vazio.

50
00:03:29.100 --> 00:03:33.150
‫Eles estão vazios porque o método joint irá gerar novos elementos.

51
00:03:33.330 --> 00:03:37.300
‫Ele não adiciona atributos ou insere conteúdo nos elementos.

52
00:03:37.500 --> 00:03:39.560
‫É possível adicionar esse comportamento.

53
00:03:39.900 --> 00:03:43.170
‫Veremos como podemos manipular os novos elementos em um momento.

54
00:03:43.740 --> 00:03:50.100
‫Primeiro, quero abordar o segundo problema que estamos enfrentando para entender melhor por que os elementos do item da lista

55
00:03:50.100 --> 00:03:52.010
‫foram inseridos no local errado.

56
00:03:52.140 --> 00:03:53.910
‫Precisamos ver o console.

57
00:03:54.450 --> 00:03:57.390
‫O console ainda está registrando o objeto de seleção.

58
00:03:57.660 --> 00:04:00.330
‫O método de junção retornará uma nova seleção.

59
00:04:00.630 --> 00:04:04.500
‫O objeto de seleção não terá as propriedades de entrada e saída.

60
00:04:04.740 --> 00:04:09.870
‫É porque o método join irá mesclar os novos elementos com os elementos que foram encontrados na propriedade

61
00:04:09.870 --> 00:04:10.450
‫do grupo.

62
00:04:11.040 --> 00:04:16.710
‫Se olharmos dentro da propriedade do grupo, encontraremos os dois primeiros itens da lista original junto com os novos

63
00:04:16.710 --> 00:04:17.850
‫itens da lista.

64
00:04:20.320 --> 00:04:25.010
‫Não faz sentido que D3 também tenha uma eleição de interesse quando estiver vazio.

65
00:04:25.300 --> 00:04:27.280
‫Então, tudo parece estar funcionando.

66
00:04:27.520 --> 00:04:31.030
‫O problema que encontramos tem a ver com a propriedade dos pais.

67
00:04:31.660 --> 00:04:35.820
‫A propriedade dos pais conterá a seleção dos pais da seleção atual.

68
00:04:36.130 --> 00:04:37.900
‫Aqui está o código que escrevemos até agora.

69
00:04:38.140 --> 00:04:42.160
‫Estamos chamando diretamente esses métodos select all no objeto D3.

70
00:04:42.490 --> 00:04:48.040
‫Quando fazemos isso, D3 sempre definirá a propriedade parent para o elemento HTML.

71
00:04:48.550 --> 00:04:54.060
‫O método de junção adicionará os novos elementos que gera ao elemento armazenado na propriedade parent.

72
00:04:54.460 --> 00:04:57.670
‫É por isso que os itens da lista são inseridos no local errado.

73
00:04:57.910 --> 00:05:01.210
‫Não irá inserir o novo elemento na seleção atual.

74
00:05:01.390 --> 00:05:04.530
‫Em vez disso, priorizará a propriedade dos pais.

75
00:05:05.050 --> 00:05:06.280
‫Como nós consertamos isso?

76
00:05:06.370 --> 00:05:10.660
‫Podemos corrigir esse problema alterando o elemento armazenado na propriedade parent.

77
00:05:10.960 --> 00:05:12.550
‫Voltemos ao ED.

78
00:05:15.110 --> 00:05:20.450
‫Podemos alterar a seleção dos pais alterando o método de seleção antes de selecionarem todos os métodos.

79
00:05:22.900 --> 00:05:29.530
‫Se tivéssemos que mudar, selecionar ou selecionar todos os métodos, D3 mudará a seleção pai na primeira vez

80
00:05:29.530 --> 00:05:35.830
‫que chamarmos um desses métodos, D3 definirá a seleção pai para o elemento HTML porque não

81
00:05:35.830 --> 00:05:38.240
‫há uma seleção pai para começar.

82
00:05:38.770 --> 00:05:44.980
‫No entanto, quando chamamos um dos métodos uma segunda vez, o D3 atualizará a seleção pai para a seleção

83
00:05:44.980 --> 00:05:45.580
‫anterior.

84
00:05:45.850 --> 00:05:51.310
‫Em nosso exemplo, a seleção pai para esses métodos select all será qualquer seleção que fizemos

85
00:05:51.310 --> 00:05:54.580
‫no método select que passaremos na lista não ordenada.

86
00:05:55.800 --> 00:05:57.870
‫Então vamos atualizar a página.

87
00:06:00.250 --> 00:06:05.980
‫Na página, os pontos estão se alinhando corretamente, se você olhar dentro do painel do console, o painel

88
00:06:05.980 --> 00:06:07.630
‫de seleção também foi atualizado.

89
00:06:07.900 --> 00:06:11.410
‫A propriedade dos pais foi atualizada para a lista não ordenada.

90
00:06:11.770 --> 00:06:14.900
‫Isso porque a seleção anterior era a lista não ordenada.

91
00:06:15.400 --> 00:06:18.210
‫Vamos abordar o último problema que temos em nosso documento.

92
00:06:18.430 --> 00:06:20.170
‫Os novos itens da lista estão vazios.

93
00:06:20.380 --> 00:06:21.490
‫Aqui está um fato engraçado.

94
00:06:21.670 --> 00:06:23.830
‫Já aprendemos como podemos consertar isso.

95
00:06:24.100 --> 00:06:25.500
‫Pense nisso por um momento.

96
00:06:25.690 --> 00:06:27.930
‫Como adicionamos texto a uma seleção?

97
00:06:28.210 --> 00:06:34.630
‫Quero que você tente fazer isso como um exercício, tentando adicionar texto aos novos itens da lista, pause o vídeo

98
00:06:34.630 --> 00:06:35.360
‫e experimente.

99
00:06:35.680 --> 00:06:36.310
‫Boa sorte.

100
00:06:37.800 --> 00:06:38.640
‫Bem vindo de volta.

101
00:06:38.730 --> 00:06:43.270
‫Se você for capaz de resolver esse problema, ótimo; se não, tudo bem.

102
00:06:43.440 --> 00:06:46.750
‫Examinaremos a solução juntos em nosso arquivo.

103
00:06:46.770 --> 00:06:49.230
‫Vamos mudar uma função chamada texto.

104
00:06:51.630 --> 00:06:57.600
‫Lembre-se de que o método join retornará uma seleção, como com qualquer outra seleção, podemos usar

105
00:06:57.600 --> 00:07:00.600
‫os mesmos métodos e propriedades que aprendemos anteriormente.

106
00:07:00.960 --> 00:07:04.250
‫O método de texto está disponível em todos os objetos de seleção.

107
00:07:04.530 --> 00:07:08.280
‫Usaremos o mesmo texto fictício para o conteúdo dos elementos.

108
00:07:10.810 --> 00:07:16.680
‫Há uma coisa importante a entender: cada elemento de item da lista terá seu conteúdo atualizado.

109
00:07:16.960 --> 00:07:20.210
‫Isso inclui as duas listas, itens que já estavam no documento.

110
00:07:20.470 --> 00:07:25.900
‫É porque o método conjunto irá mesclar os grupos e inserir propriedades juntos, dando-nos uma

111
00:07:25.900 --> 00:07:26.800
‫nova seleção.

112
00:07:27.280 --> 00:07:33.220
‫Para demonstrar isso, atualizarei o conteúdo fictício que tínhamos no documento HTML para os itens da lista.

113
00:07:35.600 --> 00:07:37.850
‫Atualizaremos a página mais uma vez.

114
00:07:40.420 --> 00:07:46.240
‫Os itens da lista foram atualizados, os métodos de transformação podem funcionar com uma matriz de elementos, eles

115
00:07:46.240 --> 00:07:49.290
‫nem sempre precisam ser chamados em elementos individuais.

116
00:07:49.570 --> 00:07:52.570
‫Esses três não terão problemas em combinar as mudanças.

117
00:07:52.990 --> 00:07:55.510
‫Terminamos de aprender sobre toda a seleção.

118
00:07:55.720 --> 00:07:58.750
‫Há outra seleção que aprenderemos na próxima aula.

