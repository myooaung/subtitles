1
00:00:00,630 --> 00:00:03,900
‫In this lecture, we are going to start drawing the chart container.

2
00:00:04,080 --> 00:00:06,450
‫It's the next logical step for drawing a chart.

3
00:00:06,690 --> 00:00:12,000
‫Throughout this course, we will follow a specific series of steps for drawing a chart, regardless

4
00:00:12,000 --> 00:00:14,100
‫of what visualization you'll be making.

5
00:00:14,250 --> 00:00:16,880
‫The steps for drawing a chart are mostly the same.

6
00:00:17,430 --> 00:00:19,260
‫We've taken care of the first step.

7
00:00:19,410 --> 00:00:21,630
‫We performed a request for the data.

8
00:00:21,990 --> 00:00:24,440
‫Grabbing the data is the most important step.

9
00:00:24,450 --> 00:00:26,780
‫We can't draw a chart without the data.

10
00:00:27,090 --> 00:00:29,610
‫The next step is to draw the charts dimensions.

11
00:00:29,820 --> 00:00:33,590
‫The dimensions of a chart will affect the size and position of our shapes.

12
00:00:33,840 --> 00:00:37,860
‫We want to make sure our shapes don't appear outside the bounds of the image.

13
00:00:38,160 --> 00:00:41,430
‫After calculating the dimensions, we can draw the image.

14
00:00:43,860 --> 00:00:46,870
‫Let's start drawing the container in the ant file.

15
00:00:46,920 --> 00:00:50,700
‫I'm going to add a comment above the JSON function that says data.

16
00:00:53,070 --> 00:00:55,620
‫It's always good practice to document our code.

17
00:00:55,830 --> 00:00:58,860
‫I'm going to be documenting our script step by step.

18
00:00:59,190 --> 00:01:04,500
‫The first step was to grab the data below this function, all out of comment for the second step.

19
00:01:04,890 --> 00:01:07,110
‫It'll say the following dimensions.

20
00:01:09,450 --> 00:01:12,510
‫We're going to create an object called dimension's.

21
00:01:14,870 --> 00:01:19,940
‫The dimensions object will store the dimensions for our charge, we are storing the dimensions because

22
00:01:19,940 --> 00:01:22,800
‫we may need to alter the dimensions at a later point.

23
00:01:23,090 --> 00:01:27,380
‫It's a good idea to create a variable to reference the mentions when we need them.

24
00:01:27,620 --> 00:01:31,940
‫In this object, we will add two properties called width and height.

25
00:01:32,300 --> 00:01:36,170
‫Their values will be 800 and 800 respectively.

26
00:01:38,500 --> 00:01:44,430
‫We want our chart to fit inside the chart element when we draw it, if you want to make the chart bigger,

27
00:01:44,470 --> 00:01:45,240
‫that's fine.

28
00:01:45,490 --> 00:01:48,460
‫However, you will need to adjust the chart element.

29
00:01:48,470 --> 00:01:51,080
‫SEIA says properties to the new dimensions.

30
00:01:51,610 --> 00:01:53,260
‫Let's move on to the next step.

31
00:01:53,620 --> 00:01:57,450
‫We can start drawing the image below this variable definition.

32
00:01:57,490 --> 00:01:59,590
‫I'll add a comment that says the following.

33
00:01:59,770 --> 00:02:00,730
‫Draw an image.

34
00:02:03,170 --> 00:02:10,250
‫We are going to insert the SVG element into the chart element, we will call the three select function.

35
00:02:12,870 --> 00:02:19,500
‫Since we want to insert an SVG element in the chart element, we all need to select it first will pass

36
00:02:19,500 --> 00:02:20,760
‫in hash chart.

37
00:02:23,360 --> 00:02:27,380
‫Next, we will change the appen method with the SVG element.

38
00:02:29,860 --> 00:02:35,680
‫Then we will add the dimensions to the image, we can add attributes to the current selection by changing

39
00:02:35,680 --> 00:02:40,240
‫the attribute method, the first attribute will set is the width attribute.

40
00:02:40,570 --> 00:02:44,950
‫The value for this attribute will be the dimensions with property.

41
00:02:47,520 --> 00:02:53,310
‫Let's change another attribute method for the height, the height attribute will be set to the dimensions,

42
00:02:53,580 --> 00:02:54,480
‫height, property.

43
00:02:57,040 --> 00:03:02,920
‫One last thing we are going to assign this election returned by our chain of functions to a variable

44
00:03:02,920 --> 00:03:04,150
‫called SVG.

45
00:03:06,750 --> 00:03:10,600
‫We are going to be inserting various shapes into the SVG element.

46
00:03:10,890 --> 00:03:13,630
‫It's going to be referenced a few times in our script.

47
00:03:13,950 --> 00:03:16,350
‫It would be a good idea to store the reference.

48
00:03:16,560 --> 00:03:19,860
‫It'll save us time from having to create the selection again.

49
00:03:20,190 --> 00:03:22,380
‫Time to view our image in the browser.

50
00:03:24,860 --> 00:03:31,820
‫If we refresh the page, nothing changes, we haven't drawn shapes yet, so the SFG container will be

51
00:03:31,820 --> 00:03:32,260
‫empty.

52
00:03:32,600 --> 00:03:38,720
‫We'll need to open the developer tools to verify the SVG element was inserted with the correct dimensions

53
00:03:38,990 --> 00:03:39,950
‫under the elements.

54
00:03:39,950 --> 00:03:42,440
‫Panel, search for the SVG image.

55
00:03:44,880 --> 00:03:45,820
‫Fantastic.

56
00:03:45,930 --> 00:03:51,480
‫The image has been generated if we hover our mouse over the elements, the image will be highlighted

57
00:03:51,480 --> 00:03:52,230
‫on the page.

58
00:03:52,530 --> 00:03:57,840
‫The tooltip around the high and lighted area will tell us the dimensions of the image they match, the

59
00:03:57,840 --> 00:03:59,870
‫dimensions we had in our object.

60
00:04:00,330 --> 00:04:02,450
‫We've successfully drawn an image.

61
00:04:02,460 --> 00:04:06,070
‫However, there's a small problem with their images dimensions.

62
00:04:06,330 --> 00:04:09,330
‫I'll discuss what those problems are in the next lecture.

