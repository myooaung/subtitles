1
00:00:00,300 --> 00:00:03,600
‫Nesta palestra, aprenderemos a escrever uma escala.

2
00:00:03,900 --> 00:00:05,670
‫Atualmente estou usando a caneta de código.

3
00:00:06,030 --> 00:00:09,860
‫Code pen é um ambiente de sandbox para projetos de prototipagem.

4
00:00:10,050 --> 00:00:13,490
‫Isso nos poupará tempo de ter que gerar um projeto separado.

5
00:00:13,830 --> 00:00:17,400
‫Criei uma caneta de código para demonstrar como as escalas funcionam.

6
00:00:17,700 --> 00:00:23,390
‫Na seção de recursos desta palestra, forneço um link para este ambiente no topo.

7
00:00:23,430 --> 00:00:27,710
‫Existem três seções de nosso sucesso de HTML e JavaScript.

8
00:00:28,050 --> 00:00:30,670
‫Nosso foco será exclusivamente em JavaScript.

9
00:00:31,170 --> 00:00:35,460
‫As outras duas seções podem ser minimizadas clicando no botão do menu suspenso.

10
00:00:35,610 --> 00:00:38,250
‫Uma opção chamada MINIMIZE estará presente.

11
00:00:40,680 --> 00:00:46,410
‫Por fim, no canto superior direito, mudaremos a visualização para ter os painéis do lado esquerdo da

12
00:00:46,410 --> 00:00:46,950
‫página.

13
00:00:49,380 --> 00:00:56,330
‫Já incluí D3 com esta caneta de código, podemos começar a usá-la imediatamente na seção JavaScript, temos

14
00:00:56,340 --> 00:00:58,500
‫um array chamado fatias.

15
00:00:58,800 --> 00:01:02,640
‫A matriz é baseada no exemplo sobre o qual falamos na aula anterior.

16
00:01:02,880 --> 00:01:06,800
‫Queremos converter esses dados em algo que possa ser desenhado na tela.

17
00:01:07,470 --> 00:01:10,410
‫Vamos criar uma escala primeiro.

18
00:01:10,410 --> 00:01:12,960
‫Precisamos armazenar uma escala em uma variável.

19
00:01:13,200 --> 00:01:15,450
‫As escalas são geradas por três.

20
00:01:15,720 --> 00:01:18,090
‫Eles não estão prontos para sair da caixa.

21
00:01:18,240 --> 00:01:21,270
‫Precisamos construir D três para preparar uma escala.

22
00:01:21,660 --> 00:01:23,880
‫Cada escala é adaptada às nossas necessidades.

23
00:01:24,060 --> 00:01:27,060
‫Por ser único, devemos armazená-lo para uso futuro.

24
00:01:27,570 --> 00:01:30,210
‫Vamos declarar uma variável chamada escala.

25
00:01:30,510 --> 00:01:35,010
‫Ele será atribuído a uma função chamada D linear de três escalas.

26
00:01:37,540 --> 00:01:43,390
‫Existem várias escalas disponíveis, mas a escala linear é a mais simples, vamos

27
00:01:43,390 --> 00:01:45,670
‫começar aprendendo esta escala assim.

28
00:01:45,680 --> 00:01:46,920
‫Agora temos uma escala.

29
00:01:47,140 --> 00:01:49,150
‫Vamos tentar registrá-lo no console.

30
00:01:55,450 --> 00:02:00,560
‫A variável de escala é uma função, o retorno da função pode transformar nossos dados.

31
00:02:00,850 --> 00:02:07,030
‫Vamos tentar transformar um número aleatório que chamaremos de função de escala com um valor numérico Pastan.

32
00:02:09,570 --> 00:02:15,060
‫A escala retornará o mesmo valor, estamos obtendo o mesmo valor porque não adicionamos um

33
00:02:15,060 --> 00:02:21,130
‫domínio de entrada ou intervalo de saída, sem esta informação a escala não saberá como transformar os dados.

34
00:02:21,420 --> 00:02:25,090
‫Por padrão, ele retornará os mesmos dados que são inseridos.

35
00:02:25,440 --> 00:02:27,750
‫Este é o básico para criar uma escala.

36
00:02:28,350 --> 00:02:31,300
‫Queremos mudar os números, não mantê-los iguais.

37
00:02:31,590 --> 00:02:34,340
‫Vamos explorar como isso é feito em nosso script.

38
00:02:34,530 --> 00:02:38,610
‫Vamos mudar uma função para essa função linear de escala chamada domínio.

39
00:02:41,220 --> 00:02:47,880
‫A função de domínio nos permite definir o domínio de entrada para uma escala, o domínio de entrada deve ser o menor e o

40
00:02:47,880 --> 00:02:50,120
‫maior valor em nosso conjunto de dados.

41
00:02:50,400 --> 00:02:55,100
‫Precisamos passar em um array onde o primeiro item do array é o menor valor.

42
00:02:55,410 --> 00:02:58,960
‫O segundo item deve ser o maior número deste exemplo.

43
00:02:59,010 --> 00:03:01,200
‫Isso seria cento e quinhentos.

44
00:03:03,750 --> 00:03:09,630
‫A função de domínio dirá à nossa função de habilidade sobre a faixa em nosso conjunto de dados, a próxima etapa

45
00:03:09,630 --> 00:03:13,010
‫é fornecer a faixa de saída ou os dados que queremos escalar.

46
00:03:13,350 --> 00:03:16,500
‫Podemos definir a faixa de saída alterando a função de faixa.

47
00:03:19,040 --> 00:03:24,920
‫Esta função aceitará um array com os dados para os quais queremos dimensionar nossos dados originais, podemos

48
00:03:24,920 --> 00:03:26,680
‫reduzir os dados ou aumentá-los.

49
00:03:26,690 --> 00:03:29,300
‫Vou inserir 10 e 350.

50
00:03:31,900 --> 00:03:38,740
‫Na maioria dos exemplos, o limite superior do intervalo será definido para as imagens, altura ou largura, o limite inferior do

51
00:03:38,740 --> 00:03:40,810
‫intervalo pode ser o que quisermos.

52
00:03:41,080 --> 00:03:47,150
‫Você pode ficar tentado a colocar zero, o que pode funcionar em alguns casos, mas há um problema em inserir zero.

53
00:03:47,680 --> 00:03:50,300
‫Isso ocorre porque zero geralmente não significa nada.

54
00:03:50,530 --> 00:03:54,530
‫No entanto, o número cem é algo que queremos representar em um gráfico.

55
00:03:54,850 --> 00:03:59,110
‫Se definirmos o valor correspondente para zero, a forma pode nem aparecer.

56
00:03:59,470 --> 00:04:02,230
‫Então, eu gosto de escolher um número que dê espaço.

57
00:04:02,470 --> 00:04:08,170
‫O número 10 corresponde a cem e o número três e cinquenta corresponde a quinhentos.

58
00:04:08,770 --> 00:04:13,510
‫Para reiterar, isso retornará uma função que escalará todos os dados que passarmos para ela.

59
00:04:13,900 --> 00:04:18,250
‫A função retornada será modificada de acordo com os métodos que mudamos depois dela.

60
00:04:18,700 --> 00:04:20,110
‫Vamos ver isso em ação.

61
00:04:20,230 --> 00:04:24,700
‫No console, executaremos a função de escala com o número quinhentos.

62
00:04:27,110 --> 00:04:32,780
‫A função retornou três e cinquenta, se eu colocar cem, foi reduzida para dez.

63
00:04:35,260 --> 00:04:41,030
‫Posso inserir qualquer número que eu quiser, incluindo números maiores ou menores que os intervalos, nós inserimos.

64
00:04:41,380 --> 00:04:46,390
‫Por exemplo, se eu colocar 600, isso deve ser reduzido para 435.

65
00:04:48,780 --> 00:04:53,160
‫Você pode até inserir números intermediários, podemos passar o número 300.

66
00:04:55,720 --> 00:04:58,170
‫Esta função retornará o número um 80.

67
00:04:58,510 --> 00:05:01,390
‫Vejamos o gráfico que vimos na aula anterior.

68
00:05:03,800 --> 00:05:10,850
‫Como você pode ver, tanto o domínio quanto o intervalo permaneceram com o mesmo comprimento, D3 se encarrega de tornar os

69
00:05:10,850 --> 00:05:11,720
‫números proporcionais.

70
00:05:14,140 --> 00:05:16,820
‫Nossa escala funciona muito bem, mas ainda não é perfeita.

71
00:05:17,110 --> 00:05:21,480
‫Atualmente, estamos aplicando os números na matriz da função de domínio.

72
00:05:21,820 --> 00:05:23,560
‫E se nosso conjunto de dados mudar?

73
00:05:23,710 --> 00:05:26,800
‫Teríamos que atualizar a função de domínio constantemente.

74
00:05:27,070 --> 00:05:32,360
‫Em um projeto real, você teria que calcular os menores e maiores valores em uma matriz.

75
00:05:32,800 --> 00:05:38,800
‫Podemos tornar nosso código escalável, permitindo que D3 determine os menores e maiores valores em uma matriz.

76
00:05:39,190 --> 00:05:44,800
‫Na seção de recursos desta palestra, forneço um link para um pacote chamado D three Array.

77
00:05:47,370 --> 00:05:54,420
‫Se rolarmos para baixo até a descrição, a biblioteca diz que os seguintes dados em JavaScript são frequentemente representados

78
00:05:54,420 --> 00:05:58,490
‫por um iterável, como um conjunto de matrizes ou gerador.

79
00:05:58,680 --> 00:06:04,280
‫E, portanto, a manipulação iterável é uma tarefa comum ao analisar ou visualizar dados.

80
00:06:04,890 --> 00:06:10,950
‫O pacote de três arrays define um conjunto de métodos para interagir com arrays por padrão.

81
00:06:11,190 --> 00:06:14,130
‫Este pacote está incluído no núcleo do D três.

82
00:06:14,470 --> 00:06:18,040
‫Não precisamos fazer nada para ter certeza de que está disponível para nós.

83
00:06:18,330 --> 00:06:22,410
‫Existem três métodos disponíveis neste pacote para resolver nosso dilema.

84
00:06:22,950 --> 00:06:29,400
‫No método de domínio, substituiremos o primeiro item da matriz pelas três funções principais.

85
00:06:31,880 --> 00:06:38,150
‫A principal função que você pode aceitar no Irã, nós vamos passar a ele o array de fatias, ele será capaz de pesquisar

86
00:06:38,150 --> 00:06:41,180
‫no array o menor número em nosso conjunto de dados.

87
00:06:41,630 --> 00:06:45,780
‫O volume foi retornado pelo método ou segundo item na matriz.

88
00:06:45,890 --> 00:06:50,090
‫Substituiremos esse método pela função three max.

89
00:06:52,600 --> 00:06:58,600
‫Ele faz a mesma coisa que eles faziam com as três funções principais, exceto que inverteu o maior valor em

90
00:06:58,600 --> 00:07:01,630
‫um conjunto de dados, vamos passar para ele essas fatias.

91
00:07:04,150 --> 00:07:10,240
‫Esses dois métodos tornaram nosso código escalável a qualquer momento, podemos trocar nossos dados por um conjunto de

92
00:07:10,240 --> 00:07:13,090
‫dados diferente, podemos encurtar isso ainda mais.

93
00:07:13,390 --> 00:07:18,610
‫Substituiremos todo o array por uma função chamada 3. 0 extensão.

94
00:07:21,140 --> 00:07:27,710
‫A função de três extensões retornará uma era em que o primeiro item na matriz é o menor

95
00:07:27,860 --> 00:07:35,880
‫valor e o segundo item é o maior valor, ela faz a mesma coisa que as três funções men e três max.

96
00:07:36,200 --> 00:07:38,960
‫É uma maneira mais rápida de escrever o que tínhamos antes.

97
00:07:39,170 --> 00:07:41,150
‫Vamos passar para ele essa matriz de fatias.

98
00:07:43,680 --> 00:07:48,120
‫No console, vamos testar a função de escala com o valor aleatório.

99
00:07:50,630 --> 00:07:56,780
‫Essa função de escala funciona como esperado, certo, neste ponto, você não deve ter um conhecimento básico

100
00:07:56,780 --> 00:07:58,920
‫de escalas na próxima aula.

101
00:07:58,970 --> 00:08:03,200
‫Vamos dar uma olhada em como aplicar escalas às nossas visualizações.

