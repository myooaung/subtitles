WEBVTT
﻿1
00:00:00.500 --> 00:00:04.020
‫In this lecture, we're going to draw the line for our line chart.

2
00:00:04.280 --> 00:00:07.720
‫We need a way to calculate the coordinates for the points in the line.

3
00:00:08.030 --> 00:00:10.040
‫Then we need to connect the points.

4
00:00:10.320 --> 00:00:12.240
‫We have five years worth of data.

5
00:00:12.470 --> 00:00:14.600
‫There's a lot of points that need to be drawn.

6
00:00:14.780 --> 00:00:17.740
‫D3 comes with something it calls generators.

7
00:00:18.080 --> 00:00:25.040
‫One, what our generators and three generators are functions that can generate a path, the value produced

8
00:00:25.040 --> 00:00:25.840
‫by a generator.

9
00:00:25.840 --> 00:00:29.210
‫It can be used with the attribute of the path element.

10
00:00:29.630 --> 00:00:34.760
‫The path element is our best bet for drawing a line chart because of how many points that will need

11
00:00:34.760 --> 00:00:35.530
‫to be drawn.

12
00:00:35.840 --> 00:00:40.300
‫There isn't another shape available that can accomplish our needs for drawing a line chart.

13
00:00:40.760 --> 00:00:44.990
‫However, the path element is a very complex shape to work with.

14
00:00:45.350 --> 00:00:49.970
‫D3 introduces generators to make it easy for working with the path shape.

15
00:00:50.390 --> 00:00:52.520
‫There's a generator for producing a line.

16
00:00:52.790 --> 00:00:56.930
‫Let's look at how we can use this generator to help us draw our line chart.

17
00:00:57.940 --> 00:01:03.320
‫In the resource section of this lecture, I provide a link to a package called D3 Shape.

18
00:01:03.700 --> 00:01:06.700
‫This package comes bundled with the core of D3.

19
00:01:07.030 --> 00:01:10.790
‫We don't need to do anything to make sure it's included with these three.

20
00:01:11.440 --> 00:01:15.760
‫This package comes with a list of generators for drawing different kinds of shapes.

21
00:01:15.910 --> 00:01:19.300
‫If we scroll down to the description, we'll find the following.

22
00:01:19.750 --> 00:01:27.430
‫Visualizations typically consist of discrete graphical marks such as symbols, arcs, lines and areas.

23
00:01:27.700 --> 00:01:34.000
‫While the rectangles of a bar chart may be easy enough to generate directly using SVG or canvas other

24
00:01:34.000 --> 00:01:37.610
‫shapes or complex, such as rounded annular sectors.

25
00:01:37.900 --> 00:01:42.070
‫This model provides a variety of shape generators for your convenience.

26
00:01:42.610 --> 00:01:47.850
‫As the description states, the purpose of this package is to help draw complex shapes.

27
00:01:48.110 --> 00:01:53.440
‫If we were to go through, the documentation will find that this package can help us draw things like

28
00:01:53.440 --> 00:01:57.280
‫lines, Pye's arcs, curves and areas.

29
00:01:57.550 --> 00:02:00.610
‫We'll be exploring some of the generators throughout this section.

30
00:02:01.090 --> 00:02:02.070
‫Let's get started.

31
00:02:02.170 --> 00:02:06.570
‫Switch back to the Ed. We're going to continue working on the script file.

32
00:02:06.820 --> 00:02:08.980
‫We left off with preparing the scales.

33
00:02:09.200 --> 00:02:11.520
‫The next step is to prepare the generator.

34
00:02:11.800 --> 00:02:15.340
‫We aren't going to draw the line yet because we don't know how to draw.

35
00:02:15.340 --> 00:02:17.290
‫It will need 3s help.

36
00:02:17.440 --> 00:02:23.620
‫Therefore, we're going to define the generators after defining the scales, create a variable called

37
00:02:23.620 --> 00:02:24.700
‫line generator.

38
00:02:24.910 --> 00:02:28.000
‫Its value will be the three line function.

39
00:02:30.500 --> 00:02:36.860
‫The three line function will return a generator, the generator, it returns as a function that can

40
00:02:36.860 --> 00:02:39.010
‫draw a line with the path element.

41
00:02:39.230 --> 00:02:42.670
‫At the moment, D three doesn't know how to draw the line.

42
00:02:42.920 --> 00:02:45.470
‫It's going to need more information about our schadt.

43
00:02:45.710 --> 00:02:47.810
‫We are going to chain the X function.

44
00:02:50.270 --> 00:02:56.000
‫When we use this generator, we are going to provide it with our data lines are made up of points that

45
00:02:56.000 --> 00:02:56.720
‫are connected.

46
00:02:56.990 --> 00:03:02.290
‫The generator is going to need to know the X and Y coordinates for each point in the line.

47
00:03:02.600 --> 00:03:08.180
‫The X function will allow us to tell the generator how it should calculate the X coordinate for each

48
00:03:08.180 --> 00:03:09.120
‫point in the line.

49
00:03:09.740 --> 00:03:13.220
‫This function has one argument, which is an arrow function.

50
00:03:13.520 --> 00:03:16.480
‫The arrow function will have one parameter called.

51
00:03:19.280 --> 00:03:25.910
‫The argument refers to the data being passed into the generator when we use this generator, we're going

52
00:03:25.910 --> 00:03:29.760
‫to provide it with the data set if we have an array of data.

53
00:03:29.960 --> 00:03:33.500
‫The argument will reference each object in the array.

54
00:03:33.920 --> 00:03:38.030
‫We need to check the generator, how it should access the value in the object.

55
00:03:38.600 --> 00:03:43.010
‫We will use the scale and accessor functions to help us with this step.

56
00:03:43.370 --> 00:03:48.620
‫We are going to return the following X scale X Accessor D.

57
00:03:51.180 --> 00:03:53.880
‫Next, we are going to change the way we function.

58
00:03:56.310 --> 00:03:57.690
‫It's the same as before.

59
00:03:57.900 --> 00:04:03.810
‫We need to tell these three the Y coordinate for each point we are going to pass in an arrow function

60
00:04:03.810 --> 00:04:05.730
‫that accepts the D parameter.

61
00:04:08.320 --> 00:04:13.150
‫We'll return the following why scale, why Accessor D..

62
00:04:15.740 --> 00:04:21.560
‫The generator is ready, our generator will be a function that can produce a line, the line will not

63
00:04:21.560 --> 00:04:23.900
‫be drawn immediately after creating it.

64
00:04:24.200 --> 00:04:29.010
‫This gives us the freedom to draw the line when we're ready before we draw the line.

65
00:04:29.030 --> 00:04:33.500
‫Let's check out the value that gets generated by this function below.

66
00:04:33.500 --> 00:04:38.480
‫In a console statement, we will log the line generator function with the data.

67
00:04:40.960 --> 00:04:44.050
‫Let's switch over to the browser with the console opened.

68
00:04:46.450 --> 00:04:52.330
‫In the console, we will be overwhelmed with a large value, the value that's been logged in the console

69
00:04:52.450 --> 00:04:54.460
‫can be used with the path element.

70
00:04:54.730 --> 00:04:59.590
‫Thanks to D3, we didn't have to worry about trying to figure out how to draw the line.

71
00:04:59.770 --> 00:05:02.410
‫It was able to help us with three lines of code.

72
00:05:02.890 --> 00:05:05.710
‫Let's begin using this value for drawing the line.

73
00:05:05.950 --> 00:05:07.360
‫Switch back to the editor.

74
00:05:07.540 --> 00:05:11.080
‫We're going to comments help the console statement we made in the function.

75
00:05:13.630 --> 00:05:19.870
‫Next, we will add a half element to the container, we are going to change the appen function on the

76
00:05:19.870 --> 00:05:22.150
‫container to create a path element.

77
00:05:24.670 --> 00:05:30.700
‫We are creating a path element because the value generated by our line generator is only compatible

78
00:05:30.700 --> 00:05:37.510
‫with this element in general, most generators will return values that can only be used with the path

79
00:05:37.510 --> 00:05:38.080
‫element.

80
00:05:38.410 --> 00:05:41.980
‫After creating the shape, we will join the data with the element.

81
00:05:41.980 --> 00:05:46.000
‫By changing the data and function, we will pass in the data set array.

82
00:05:48.500 --> 00:05:54.920
‫I'm introducing a new function previously, we would join data with the data function, the data function

83
00:05:54.920 --> 00:05:59.030
‫is perfect for joining multiple pieces of data with multiple elements.

84
00:05:59.240 --> 00:06:05.590
‫On the other hand, you may be in a situation where you'll need to join one piece of data with one element.

85
00:06:05.960 --> 00:06:08.990
‫The data function allows you to perform that task.

86
00:06:09.440 --> 00:06:11.480
‫A line is one continuous path.

87
00:06:11.750 --> 00:06:17.600
‫It may look like multiple lines combined together, but it will be a single element in our document.

88
00:06:18.020 --> 00:06:22.360
‫Since we have one element, we will need to join the entire data set to it.

89
00:06:22.700 --> 00:06:24.940
‫This is possible with the data and function.

90
00:06:25.700 --> 00:06:28.360
‫The next step is to set the attributes.

91
00:06:28.520 --> 00:06:33.770
‫We will change the attribute function, to set the attribute to the line generator function.

92
00:06:36.210 --> 00:06:41.990
‫D3 will provide our generator with the data because the data has been Joynes to the element with the

93
00:06:41.990 --> 00:06:45.250
‫data and function, the line should be drawn in the document.

94
00:06:45.470 --> 00:06:47.740
‫Let's refresh the page to view the results.

95
00:06:50.400 --> 00:06:56.040
‫A sheep has been drawn, but it looks bizarre, it's not a problem with these three, it's the default

96
00:06:56.040 --> 00:06:57.930
‫behavior of the half element.

97
00:06:58.230 --> 00:07:00.210
‫The path element will have a fill.

98
00:07:00.480 --> 00:07:02.960
‫Typically, lines don't have filles.

99
00:07:03.180 --> 00:07:06.430
‫We will want to remove the fill so that only the line appears.

100
00:07:06.630 --> 00:07:08.430
‫Let's switch back to the ED.

101
00:07:08.880 --> 00:07:13.650
‫After seeing the attribute, we're going to set the fill attribute to none.

102
00:07:16.120 --> 00:07:21.270
‫By setting the Phil attribute to none, the browser will not paint the insides of the shape.

103
00:07:21.580 --> 00:07:25.210
‫We are also going to change the color of the line and make it thicker.

104
00:07:25.510 --> 00:07:30.580
‫We will set the stroke attribute to hash three zero four seven five eight.

105
00:07:33.090 --> 00:07:36.720
‫Lastly, we all set the Shok with attribute to to.

106
00:07:39.240 --> 00:07:42.330
‫This should fix our problems, let's refresh the page.

107
00:07:44.710 --> 00:07:45.380
‫Perfect.

108
00:07:45.580 --> 00:07:51.670
‫The line is being generated as desired, we're a finish with drawing the line in the next few lectures

109
00:07:51.700 --> 00:07:55.300
‫will add additional details to make it easier to read the charge.

