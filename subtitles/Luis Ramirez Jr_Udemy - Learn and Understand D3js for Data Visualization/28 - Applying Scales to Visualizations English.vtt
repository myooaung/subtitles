WEBVTT
﻿1
00:00:00.550 --> 00:00:06.020
‫In this lecture, we are going to apply our knowledge of scales to the scatterplot we've been building.

2
00:00:06.430 --> 00:00:12.550
‫There are four properties we can change on the circle there, the X, coordinate Y, coordinate color

3
00:00:12.550 --> 00:00:13.480
‫and size.

4
00:00:13.690 --> 00:00:19.360
‫We are going to focus on the coordinates, even though it's possible we aren't going to use the color

5
00:00:19.360 --> 00:00:22.120
‫and size of a circle to represent a data point.

6
00:00:22.420 --> 00:00:25.390
‫The exclusion of a circle will represent humidity.

7
00:00:25.720 --> 00:00:28.240
‫The Y position will represent the temperature.

8
00:00:28.690 --> 00:00:31.790
‫We are going to transform the X and Y coordinates.

9
00:00:31.810 --> 00:00:36.400
‫The question is what are we going to transform them to the coordinates for?

10
00:00:36.400 --> 00:00:40.470
‫Any circle should stay within the bounds of the continuum we drew in our image.

11
00:00:40.780 --> 00:00:43.140
‫It's important we draw them in the container.

12
00:00:43.300 --> 00:00:47.910
‫The purpose of the container was to prevent a shape from appearing on the edge of the image.

13
00:00:48.070 --> 00:00:50.610
‫If that happened, the shape would be cut off.

14
00:00:51.070 --> 00:00:56.380
‫We want to transform the X coordinate of a shape between zero and the width of the container.

15
00:00:56.800 --> 00:01:01.230
‫The Y coordinate of a shape should be between zero and the height of the container.

16
00:01:01.630 --> 00:01:07.930
‫Now that we know what will transform our data to let's create scales that will take care of transforming

17
00:01:07.930 --> 00:01:13.510
‫our values, we are going to create the scales before drawing the circles above.

18
00:01:13.510 --> 00:01:16.000
‫We will write a comment that says Scales.

19
00:01:18.480 --> 00:01:25.050
‫We'll start with you scale for the X coordinate, create a variable called X scale, its value will

20
00:01:25.050 --> 00:01:27.900
‫be the D 3.0 scale linear function.

21
00:01:30.310 --> 00:01:36.160
‫This method will create the initial scale function, the scale will always return the original value

22
00:01:36.310 --> 00:01:42.130
‫we need to tell it the original image, which is called the input domain, we can set the input domain

23
00:01:42.130 --> 00:01:43.900
‫by changing the domain function.

24
00:01:46.360 --> 00:01:50.960
‫The domain expects an array with the lowest and highest number in our data set.

25
00:01:51.280 --> 00:01:55.090
‫The chart we're drawing should be able to work with weather data from any city.

26
00:01:55.430 --> 00:01:57.970
‫Currently, the weather data comes from New York.

27
00:01:58.120 --> 00:02:05.200
‫We can let D3 handle searching for the lowest and highest numbers in our data by calling the D 3.0 extent

28
00:02:05.200 --> 00:02:05.750
‫function.

29
00:02:06.160 --> 00:02:08.410
‫We will pass this function into our method.

30
00:02:11.000 --> 00:02:16.680
‫The D3 extent function will return an array with the lowest and highest numbers in our data set.

31
00:02:16.940 --> 00:02:23.030
‫It has one argument, which is the data set will pass on our data set variable to the function.

32
00:02:25.590 --> 00:02:32.810
‫The three extent function doesn't know where to find the numbers previously when we used this function,

33
00:02:32.820 --> 00:02:34.560
‫we gave it an array of numbers.

34
00:02:34.720 --> 00:02:37.110
‫It's capable of working with a basic array.

35
00:02:37.350 --> 00:02:43.510
‫However, this time we're passing in an array of objects where each object has various properties.

36
00:02:43.800 --> 00:02:47.880
‫Luckily, we can resolve this issue by using accessor functions.

37
00:02:48.090 --> 00:02:51.540
‫In fact, we've already created one for the x axis.

38
00:02:52.050 --> 00:02:57.720
‫The three dot extent function has an optional second argument for an accessor function.

39
00:02:58.110 --> 00:03:03.690
‫Since the scale we're creating is for the x axis, we will pass in the X accessor function.

40
00:03:06.180 --> 00:03:11.940
‫The next thing we need to do is tell our skill function what our data should be scaled to, we will

41
00:03:11.940 --> 00:03:15.060
‫change the range function to set the output range.

42
00:03:17.490 --> 00:03:21.360
‫We will pass in an era where the first item in the array is zero.

43
00:03:23.860 --> 00:03:29.470
‫The lowest number in the data set will be positioned on the left edge of the container, one thing to

44
00:03:29.470 --> 00:03:32.560
‫keep in mind is that we're drawing these circles in the container.

45
00:03:32.830 --> 00:03:35.970
‫We are using the G element to draw the container.

46
00:03:36.250 --> 00:03:41.210
‫Any properties we applying to the G element are passed down to its children.

47
00:03:41.500 --> 00:03:43.120
‫This includes our circles.

48
00:03:43.390 --> 00:03:48.480
‫Our circles will be moved an additional 50 pixels to the left because of our margins.

49
00:03:48.760 --> 00:03:52.660
‫Therefore, we don't need to account for the margins in our scales.

50
00:03:53.200 --> 00:03:56.490
‫The second item in the array should be the width of the container.

51
00:03:56.770 --> 00:03:59.860
‫We have the width of the image, but not the container.

52
00:04:00.160 --> 00:04:06.220
‫The containers width can be calculated by subtracting the width of the image by the margins on the sides.

53
00:04:06.550 --> 00:04:10.720
‫It would be a good idea to store the dimensions of the container in our dimensions.

54
00:04:10.720 --> 00:04:14.750
‫Object below where we define the dimensions object.

55
00:04:14.770 --> 00:04:17.830
‫We will add a new property called container width.

56
00:04:20.470 --> 00:04:28.600
‫The value for this property will be the following dimensions with minus dimensions, margin left, minus

57
00:04:28.600 --> 00:04:30.820
‫dimensions, margin right.

58
00:04:36.390 --> 00:04:41.610
‫While we're here, let's define a property for the height of the chart, the name of the property will

59
00:04:41.610 --> 00:04:43.200
‫be called container height.

60
00:04:45.710 --> 00:04:53.060
‫The value for this property will be the following dimensions, height minus dimensions, margin, top

61
00:04:53.180 --> 00:04:55.880
‫minus dimensions, margin, dot bottom.

62
00:04:58.360 --> 00:05:00.860
‫Great, we've got the dimensions of our container.

63
00:05:01.090 --> 00:05:03.610
‫Let's go back to the X scale function.

64
00:05:03.910 --> 00:05:09.340
‫We will pass him the dimensions container with property as the second item in the array.

65
00:05:11.910 --> 00:05:13.110
‫Our scale is ready.

66
00:05:13.230 --> 00:05:18.900
‫Let's update the circles to take advantage of the scale, we are going to modify the function we passed

67
00:05:18.900 --> 00:05:24.780
‫onto this attribute, we will replace this with an arrow function where we will accept the data.

68
00:05:27.330 --> 00:05:32.790
‫The reason we are replacing the value with an arrow function is because we'll need to provide our skill

69
00:05:32.790 --> 00:05:35.220
‫with the data in the aero function.

70
00:05:35.250 --> 00:05:40.110
‫We will return the following X scale X Accessor D.

71
00:05:42.650 --> 00:05:49.190
‫In this example, the argument will reference the object Joynes to the element we need to provide the

72
00:05:49.190 --> 00:05:50.280
‫data to the scale.

73
00:05:50.510 --> 00:05:54.110
‫However, the scale is expecting a number, not an object.

74
00:05:54.410 --> 00:05:57.940
‫We're using the accessor function to help retrieve the humidity.

75
00:05:58.310 --> 00:06:00.590
‫Let's refresh the page to see the result.

76
00:06:03.070 --> 00:06:06.230
‫This is so much better, our data has been spread out.

77
00:06:06.460 --> 00:06:10.420
‫The next thing we need to fix are the circles we coordinate trying.

78
00:06:10.430 --> 00:06:11.800
‫This is an exercise.

79
00:06:11.810 --> 00:06:15.220
‫I want you to create a second scale for the Y axis.

80
00:06:15.580 --> 00:06:20.810
‫The scale should be able to position the circle on the Y axis within the bounds of the container.

81
00:06:21.190 --> 00:06:25.390
‫The process is very similar to creating the scale for the x axis.

82
00:06:25.750 --> 00:06:27.550
‫Pause the video and good luck.

83
00:06:29.290 --> 00:06:30.100
‫Welcome back.

84
00:06:30.280 --> 00:06:35.500
‫If you were able to accomplish this task, that's great, if not, that's fine as well.

85
00:06:35.740 --> 00:06:39.510
‫We'll walk through it together below the X scale function.

86
00:06:39.520 --> 00:06:42.490
‫We will define a variable called Y scale.

87
00:06:42.790 --> 00:06:46.540
‫Its value will be the D 3.0 scale linear function.

88
00:06:49.080 --> 00:06:54.270
‫We will provide the scale with the range of the current data set, we are going to change the domain

89
00:06:54.270 --> 00:06:54.810
‫function.

90
00:06:57.380 --> 00:07:03.890
‫Next, we will pass amid three extent function with the data set and why accessor functions.

91
00:07:06.420 --> 00:07:12.420
‫The wine accessor function will tell the D three extent function to grab the lowest and highest numbers

92
00:07:12.420 --> 00:07:18.240
‫for the temperature in our data set, the y axis of our chart will be used to measure the temperature

93
00:07:18.240 --> 00:07:19.320
‫in these scatterplot.

94
00:07:19.680 --> 00:07:24.480
‫The next thing we'll do is change the range function we will pass in an array.

95
00:07:24.780 --> 00:07:30.600
‫The range function will allow us to tell the scale function what values the data set should be transformed

96
00:07:30.600 --> 00:07:31.020
‫to.

97
00:07:31.440 --> 00:07:34.350
‫The lower end of our data set will be set to zero.

98
00:07:34.620 --> 00:07:38.700
‫The higher end will be the dimensions don't contain or height property.

99
00:07:41.290 --> 00:07:46.220
‫We don't want a circle to be drawn outside the bounds, which is why we're using the containers height

100
00:07:46.240 --> 00:07:49.260
‫instead of the images height, the scale is ready.

101
00:07:49.480 --> 00:07:51.190
‫Let's apply it to the circles.

102
00:07:51.760 --> 00:07:54.490
‫We are going to update these seewhy attribute.

103
00:07:54.730 --> 00:07:58.600
‫The value for this attribute will be the same as DCX attribute.

104
00:07:58.930 --> 00:08:04.960
‫The difference will be replacing the functions with the Y scale and y axis or functions respectively.

105
00:08:07.600 --> 00:08:09.700
‫Let's view you the chart in the browser again.

106
00:08:12.260 --> 00:08:18.620
‫It's all starting to come together with the help of D3, we can use skills to help us position the circles

107
00:08:18.620 --> 00:08:19.360
‫in our chart.

108
00:08:19.760 --> 00:08:25.430
‫The skill functions we created will work with any data set with a similar structure to our current data

109
00:08:25.430 --> 00:08:25.790
‫set.

110
00:08:26.180 --> 00:08:27.710
‫That's the beauty of D three.

111
00:08:27.980 --> 00:08:31.570
‫It can scale out of the box as long as we use its features.

112
00:08:32.090 --> 00:08:35.630
‫We didn't have to worry about calculating most of these values.

113
00:08:35.780 --> 00:08:38.890
‫We simply told D3 what data to expect.

114
00:08:39.230 --> 00:08:42.710
‫Then we told it how we want the data drawn on the document.

115
00:08:42.980 --> 00:08:47.330
‫In the next set of lectures, we are going to continue working on the scatterplot.

