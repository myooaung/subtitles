1
00:00:00,390 --> 00:00:06,420
‫In this lecture, we're going to learn how to apply classes to an element properly in our script, the

2
00:00:06,420 --> 00:00:09,800
‫attribute method allowed us to add a class to an element.

3
00:00:10,080 --> 00:00:13,480
‫It's handy, but it's not the ideal method for adding classes.

4
00:00:13,740 --> 00:00:17,760
‫There is one caveat we should be aware of when working with the attribute method.

5
00:00:18,330 --> 00:00:23,380
‫The attribute method will override the existing value of an attribute if it already exists.

6
00:00:23,670 --> 00:00:27,240
‫For example, let's say we wanted to add an additional class.

7
00:00:27,420 --> 00:00:28,330
‫That's a problem.

8
00:00:28,590 --> 00:00:31,090
‫The second class will remove the first class.

9
00:00:31,350 --> 00:00:36,780
‫Let me show you what happens if we attempt to change the attribute method multiple times for the same

10
00:00:36,780 --> 00:00:41,760
‫HTML attribute, we will change another attribute method after the first one.

11
00:00:44,470 --> 00:00:46,810
‫The arguments will be class and bar.

12
00:00:49,420 --> 00:00:55,060
‫This should add the bar class to the element after making those changes, let's refresh the page.

13
00:00:57,560 --> 00:01:03,320
‫The paragraph looks fine on the page, focusing our attention on the elements panel, we will find the

14
00:01:03,320 --> 00:01:05,540
‫paragraph tag with the bar class.

15
00:01:05,840 --> 00:01:07,820
‫The food class is completely gone.

16
00:01:08,120 --> 00:01:11,600
‫The astrobee replaced the food class with the bar class.

17
00:01:11,810 --> 00:01:15,720
‫If this was the desired behavior, we don't need to do anything else.

18
00:01:16,140 --> 00:01:21,470
‫However, in some cases you may want to add additional classes at a later time.

19
00:01:21,590 --> 00:01:26,320
‫If the goal is to add additional classes, the attribute method may cause headaches.

20
00:01:26,780 --> 00:01:28,970
‫There are two ways we can resolve this issue.

21
00:01:29,150 --> 00:01:32,430
‫We can update the attribute method to add both classes.

22
00:01:32,600 --> 00:01:34,960
‫Unfortunately, that's not practical.

23
00:01:35,180 --> 00:01:38,720
‫The more classes you have, the more you will have to manage them.

24
00:01:38,930 --> 00:01:40,880
‫They can become a nightmare very fast.

25
00:01:41,330 --> 00:01:45,140
‫Luckily, D3 provides an alternative method for this problem.

26
00:01:45,350 --> 00:01:46,760
‫Switch back to the ED.

27
00:01:49,140 --> 00:01:51,720
‫We will comment about both our tribute methods.

28
00:01:54,000 --> 00:01:56,430
‫Next, we'll change the last method.

29
00:01:58,840 --> 00:02:04,010
‫The last method was introduced to address the problem of toggling classes on an element.

30
00:02:04,300 --> 00:02:05,760
‫It has two arguments.

31
00:02:06,010 --> 00:02:10,750
‫The first argument is a string of class names will pass and the few class.

32
00:02:13,220 --> 00:02:19,370
‫The second argument for this function is a boolean value if we pass in true, the class will be added

33
00:02:19,370 --> 00:02:20,150
‫to the element.

34
00:02:20,420 --> 00:02:22,780
‫A false value will remove the class.

35
00:02:23,060 --> 00:02:27,820
‫The best part about this method is that it will not remove existing classes on the element.

36
00:02:28,070 --> 00:02:31,290
‫It only affects the class or passing in for the first argument.

37
00:02:31,580 --> 00:02:33,980
‫Let's set the second argument to true.

38
00:02:36,500 --> 00:02:42,380
‫If this class already exists, nothing happens, we will change the class method one more time.

39
00:02:44,910 --> 00:02:51,210
‫For this second call, we will pass in the bar class, we want to add it to the element so we pass in

40
00:02:51,210 --> 00:02:53,070
‫true for the second argument.

41
00:02:55,670 --> 00:02:57,170
‫Let's refresh the page.

42
00:02:59,590 --> 00:03:05,030
‫In the Elements panel, both classes have been added to the paragraph element perfect.

43
00:03:05,230 --> 00:03:09,250
‫We have a working solution thanks to 3D transformation methods.

44
00:03:09,640 --> 00:03:13,120
‫Next, let's explore how we can add styles to an element.

45
00:03:13,420 --> 00:03:17,880
‫D3 comes with a transformation method for adding inline styles to an element.

46
00:03:18,160 --> 00:03:19,870
‫Let's switch over to the editor.

47
00:03:22,390 --> 00:03:25,780
‫At the end of the chain, we will change a method called style.

48
00:03:28,270 --> 00:03:33,350
‫The stalemate will add inline access to an element it has two arguments.

49
00:03:33,610 --> 00:03:37,090
‫The first is the name of the CSAs property we'd like to modify.

50
00:03:37,390 --> 00:03:40,590
‫The second argument is the value for the CSFs property.

51
00:03:40,900 --> 00:03:43,210
‫We will set the first argument to color.

52
00:03:43,600 --> 00:03:45,640
‫For this example, we will be changing.

53
00:03:45,640 --> 00:03:48,820
‫The color of the text will change the color to blue.

54
00:03:51,460 --> 00:03:53,200
‫Let's switch over to the page.

55
00:03:55,610 --> 00:03:57,140
‫The text has turned blue.

56
00:03:57,530 --> 00:04:00,800
‫We're finished with reviewing how its transformation methods work.

57
00:04:03,500 --> 00:04:09,620
‫In the past few lectures, we've looked at how to work with Selection's, we can make selections with

58
00:04:09,620 --> 00:04:12,170
‫the select and select all methods.

59
00:04:12,470 --> 00:04:16,510
‫If we want to modify an element, we can use transformation methods.

60
00:04:16,790 --> 00:04:21,530
‫The most important concept to understand is what is returned by these methods.

61
00:04:22,010 --> 00:04:24,920
‫We will always be returned with a new selection object.

62
00:04:25,190 --> 00:04:28,760
‫The documentation will always tell you what selection is returned.

63
00:04:29,060 --> 00:04:34,940
‫Generally, if a method selects or creates an element, we will be returned a new selection.

64
00:04:35,240 --> 00:04:39,950
‫If a method manipulates the current selection, we will be returned the same selection.

65
00:04:40,450 --> 00:04:44,450
‫It's critical that you understand this as you'll be working with selections a lot.

66
00:04:44,450 --> 00:04:44,800
‫Indeed.

67
00:04:44,810 --> 00:04:48,380
‫Three Sometimes you may end up working with the wrong selection.

68
00:04:48,560 --> 00:04:49,460
‫It happens.

69
00:04:49,700 --> 00:04:52,460
‫Knowing why it happened will help you debug the issue.

70
00:04:52,670 --> 00:04:57,770
‫At the end of the day, you can always log the selection to verify that you're working with the correct

71
00:04:57,770 --> 00:04:58,430
‫selection.

