1
00:00:00,480 --> 00:00:06,210
‫In this lecture, we were going to learn about accessor functions, it sounds like a complicated term,

2
00:00:06,510 --> 00:00:07,820
‫but I promise it's not.

3
00:00:08,040 --> 00:00:12,350
‫Let's learn why we need an accessor function to begin with in our script.

4
00:00:12,360 --> 00:00:13,800
‫We've already done so much.

5
00:00:14,040 --> 00:00:18,540
‫The data has been retrieved, the dimensions are set, and we drew the image.

6
00:00:18,990 --> 00:00:23,100
‫The next step is to start drawing some shapes, the first set of shapes.

7
00:00:23,100 --> 00:00:24,930
‫We are going to draw our circles.

8
00:00:25,230 --> 00:00:28,710
‫The data in a scatterplot is represented by a group of dots.

9
00:00:28,890 --> 00:00:31,320
‫We can draw a dot with these circle elements.

10
00:00:31,800 --> 00:00:35,250
‫We already have an idea of how we can add circles to our image.

11
00:00:35,670 --> 00:00:39,420
‫Each circle we draw should be joined with the data in our data set.

12
00:00:39,690 --> 00:00:45,240
‫We don't want to draw more circles than we have to, nor do we want to draw fewer circles than what's

13
00:00:45,240 --> 00:00:45,940
‫in our data.

14
00:00:46,440 --> 00:00:47,480
‫Here's what we'll do.

15
00:00:47,610 --> 00:00:49,860
‫We will create a selection of circles.

16
00:00:50,190 --> 00:00:55,020
‫These three will return an empty selection because we haven't drawn any circles in our image.

17
00:00:55,320 --> 00:00:58,630
‫Next, we will join the dataset with the empty selection.

18
00:00:59,220 --> 00:01:03,320
‫This will force D three to put the dataset into an entire selection.

19
00:01:03,630 --> 00:01:08,940
‫From there, we can begin the process of drawing circles for each item in the entire selection.

20
00:01:09,300 --> 00:01:11,790
‫This is a process we are already familiar with.

21
00:01:12,090 --> 00:01:18,420
‫The difference is that we'll be working with SVG instead of regular HTML elements at the bottom of the

22
00:01:18,420 --> 00:01:19,090
‫function.

23
00:01:19,110 --> 00:01:21,540
‫Let's remove the lines where we drew a circle.

24
00:01:21,780 --> 00:01:26,130
‫We're going to replace it with a comment that says the following draw circles.

25
00:01:28,550 --> 00:01:34,160
‫Below this comment, we will start with creating a selection, we are going to make the selection on

26
00:01:34,160 --> 00:01:37,010
‫the container selection with the select all method.

27
00:01:39,560 --> 00:01:44,120
‫We are calling the select all method because we will be drawing multiple circles.

28
00:01:44,420 --> 00:01:46,370
‫We will pass in these circle element.

29
00:01:48,880 --> 00:01:53,770
‫The function will return and empty selection, it's perfectly normal for this to happen.

30
00:01:53,920 --> 00:02:00,490
‫In fact, you will come across many examples where developers will perform an empty selection by making

31
00:02:00,490 --> 00:02:01,600
‫an empty selection.

32
00:02:01,730 --> 00:02:05,110
‫Our entire data will be put into the enter selection.

33
00:02:05,440 --> 00:02:10,450
‫This guarantees we will be able to draw a shape for every piece of data all at once.

34
00:02:11,050 --> 00:02:16,680
‫After creating the selection, we will change the data method to join the data to our selection.

35
00:02:17,080 --> 00:02:19,710
‫The data method will require our data.

36
00:02:19,930 --> 00:02:22,300
‫Let's pass him the data set variable.

37
00:02:24,770 --> 00:02:27,440
‫Up next, we will change the join method.

38
00:02:30,170 --> 00:02:35,250
‫The join method will go through the entry and exit selections returned by the data method.

39
00:02:35,570 --> 00:02:39,980
‫We don't have shapes that need to be removed, so the exit selection will be empty.

40
00:02:40,370 --> 00:02:43,120
‫The enter selection is what we're most interested in.

41
00:02:43,430 --> 00:02:46,250
‫We can pass in the name of the shape we want to draw.

42
00:02:46,460 --> 00:02:48,020
‫We will pass in circle.

43
00:02:50,610 --> 00:02:53,310
‫The join method will return a new selection.

44
00:02:53,610 --> 00:02:57,670
‫The selection should contain a list of circles that have been added to the document.

45
00:02:57,990 --> 00:03:01,380
‫There should be approximately three hundred and sixty five circles.

46
00:03:01,650 --> 00:03:03,300
‫Let's do the app in the browser.

47
00:03:05,820 --> 00:03:12,930
‫Under the elements panel, if we peek inside the SVG element, we will find a long list of circle elements

48
00:03:13,230 --> 00:03:15,330
‫each circle where drawing will represent.

49
00:03:15,330 --> 00:03:20,890
‫One day the page will appear empty because we need to add a radius to our circles.

50
00:03:21,210 --> 00:03:24,650
‫Let's work on adding the position and size of each circle.

51
00:03:27,260 --> 00:03:30,710
‫Back in the ed, we are going to change the attribute method.

52
00:03:33,310 --> 00:03:37,570
‫The name of the attribute we are going to modify is DCX Attribute.

53
00:03:40,030 --> 00:03:45,490
‫This is where things can get tricky, the exposition of a circle should be based on the data.

54
00:03:45,700 --> 00:03:47,980
‫The question is, how do we get the data?

55
00:03:47,980 --> 00:03:49,890
‫Joynes to a specific circle.

56
00:03:50,140 --> 00:03:52,630
‫We can use what's called an accessor function.

57
00:03:55,200 --> 00:04:01,050
‫And accessor function is a function that returns a property in an object, it's a function that attempts

58
00:04:01,050 --> 00:04:07,950
‫to access a property nested deep inside an object, hence the word accessor DNA can be complex.

59
00:04:08,130 --> 00:04:11,760
‫Our whether data is an example of a complex data structure.

60
00:04:12,030 --> 00:04:18,250
‫It's an array of objects where each object represents one day of a full year inside each object.

61
00:04:18,300 --> 00:04:20,370
‫There are more properties and objects.

62
00:04:20,790 --> 00:04:27,360
‫D3 doesn't know which property it should use as the value for the attribute we need to construct D three,

63
00:04:27,360 --> 00:04:29,190
‫which property it should access.

64
00:04:29,430 --> 00:04:36,690
‫As a side note, in some cases you may see the documentation refer to accessor functions as just accessors.

65
00:04:36,960 --> 00:04:38,160
‫They mean the same thing.

66
00:04:40,740 --> 00:04:46,680
‫The second argument for the attribute method can be an accessor function lets passing an arrow function.

67
00:04:49,130 --> 00:04:54,980
‫This goes for the other transformation methods, too, we don't always need to hard code a value we

68
00:04:54,980 --> 00:04:58,460
‫can pass in a function that must return the value for the attribute.

69
00:04:58,850 --> 00:05:01,390
‫Here's where the beauty of D3 comes into play.

70
00:05:01,730 --> 00:05:08,810
‫If our selection has data joined to it, D3 will allow us to access the data associated with the current

71
00:05:08,810 --> 00:05:09,350
‫element.

72
00:05:09,920 --> 00:05:13,060
‫D3 can loop through each element in the selection.

73
00:05:13,400 --> 00:05:17,800
‫The data join to an element will be passed onto our accessor function.

74
00:05:18,170 --> 00:05:23,180
‫It's something D three takes care of for us behind the scenes to better understand.

75
00:05:23,270 --> 00:05:27,710
‫Let's accept the data as D then we will log this argument.

76
00:05:30,140 --> 00:05:31,940
‫Let's switch over to the browser.

77
00:05:34,420 --> 00:05:39,940
‫In the console, there will be over three hundred logs there, the objects in our data sets array.

78
00:05:40,270 --> 00:05:43,390
‫We don't have to loop through each element in our selection.

79
00:05:43,660 --> 00:05:45,870
‫These three will take care of that for us.

80
00:05:46,090 --> 00:05:52,110
‫The accessor function will be provided with each object joined to a specific element that's in our selection.

81
00:05:52,450 --> 00:05:55,700
‫This will allow us to modify each attribute accordingly.

82
00:05:56,320 --> 00:05:57,940
‫Let's go back to our editor.

83
00:05:58,150 --> 00:06:04,330
‫Instead of logging the object, we will return the D currently dot humidity property.

84
00:06:06,940 --> 00:06:13,450
‫The currently object contains the weather data for the day inside this object, the humidity property

85
00:06:13,450 --> 00:06:14,800
‫will store the humidity.

86
00:06:15,130 --> 00:06:17,440
‫There are two axes in a scatterplot.

87
00:06:17,710 --> 00:06:22,060
‫Each axis will represent either the humidity or apparent temperature.

88
00:06:22,390 --> 00:06:26,130
‫We are going to draw the humidity across the x axis.

89
00:06:26,440 --> 00:06:29,660
‫The apparent temperature will be drawn on the Y axis.

90
00:06:30,160 --> 00:06:34,890
‫The purpose of a scatterplot is to show a relationship between two sets of data.

91
00:06:35,110 --> 00:06:40,290
‫Typically, the goal is to check if one set of data affects the other set of data.

92
00:06:40,690 --> 00:06:44,290
‫Our original theory was that humidity can affect the temperature.

93
00:06:44,740 --> 00:06:49,050
‫We can think of humidity as the cause and the temperature as the effect.

94
00:06:49,390 --> 00:06:51,250
‫The general rule of thumb is this.

95
00:06:51,400 --> 00:06:53,950
‫The cause should be drawn on the x axis.

96
00:06:54,190 --> 00:06:57,010
‫The effect should be drawn on the Y axis.

97
00:06:57,280 --> 00:07:03,190
‫Therefore, the humidity will be represented by the X axis and the temperature will be represented on

98
00:07:03,190 --> 00:07:04,280
‫the Y axis.

99
00:07:04,750 --> 00:07:08,800
‫Let's update the Y attribute by changing another attribute method.

100
00:07:09,070 --> 00:07:11,980
‫The name of the attribute is called C. y.

101
00:07:14,580 --> 00:07:21,450
‫We will pass on an arrow function where we will return the D currently apparent temperature property.

102
00:07:23,990 --> 00:07:29,330
‫Accessing these properties is something we will repeatedly be doing since that's the case, we should

103
00:07:29,330 --> 00:07:31,720
‫outsource the functions and two variables.

104
00:07:32,060 --> 00:07:35,270
‫Let's cut the accessor function for the x axis.

105
00:07:37,640 --> 00:07:44,120
‫At the top of the function below the data set variable, we will create a variable called X accessor,

106
00:07:44,480 --> 00:07:47,030
‫its value will be the function we grabbed earlier.

107
00:07:49,360 --> 00:07:53,050
‫Next, we will define a variable called Why accessor.

108
00:07:55,490 --> 00:08:01,190
‫Its value will be the function we created for these seewhy attribute, we will cut it from the attribute

109
00:08:01,190 --> 00:08:01,610
‫method.

110
00:08:07,090 --> 00:08:14,050
‫Our accessors are now reuseable, let's go back to the attribute methods and in the respective accessors.

111
00:08:16,430 --> 00:08:22,250
‫There are two more attributes we are going to add we will change another attribute method for the radius

112
00:08:22,250 --> 00:08:22,880
‫attribute.

113
00:08:23,120 --> 00:08:25,130
‫The radius will be five pixels.

114
00:08:27,550 --> 00:08:32,950
‫The next attribute will add, will be the Phil attribute, the color of these circles will be red.

115
00:08:35,500 --> 00:08:37,390
‫Let's view the chart in the browser.

116
00:08:39,840 --> 00:08:45,930
‫Our circles are appearing in the chart, it might look like a line, but I assure you they circles it's

117
00:08:45,930 --> 00:08:47,580
‫not really what we were going for.

118
00:08:47,730 --> 00:08:49,510
‫These circles should be spread out.

119
00:08:49,710 --> 00:08:51,790
‫It's very difficult to read the data.

120
00:08:52,020 --> 00:08:57,810
‫The reason the circles are drawn like this is because our data is not scaled to be drawn in the next

121
00:08:57,810 --> 00:08:58,360
‫lecture.

122
00:08:58,470 --> 00:09:02,370
‫We'll explore how we can resolve this issue by learning about scales.

