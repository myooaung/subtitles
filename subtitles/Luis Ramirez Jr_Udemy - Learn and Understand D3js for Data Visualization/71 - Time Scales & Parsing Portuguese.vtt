WEBVTT
﻿1
00:00:00.510 --> 00:00:06.120
‫Nesta aula, vamos desenhar o gráfico de linhas no arquivo de script, a maior parte do código

2
00:00:06.120 --> 00:00:07.950
‫foi preparada na parte inferior.

3
00:00:07.980 --> 00:00:12.210
‫Estamos criando uma escala para o eixo y, mas não para o eixo x.

4
00:00:12.480 --> 00:00:15.050
‫É porque o eixo X medirá a data.

5
00:00:15.420 --> 00:00:18.990
‫Não tivemos a oportunidade de discutir como dimensionar o tempo.

6
00:00:19.290 --> 00:00:22.740
‫D3 apresenta duas escalas para tempo de escala.

7
00:00:23.040 --> 00:00:25.440
‫Estaremos olhando para as duas escalas nesta aula.

8
00:00:26.040 --> 00:00:28.560
‫Ambas as escalas são baseadas na escala linear.

9
00:00:28.740 --> 00:00:32.430
‫Eles podem transformar dados contínuos em dados contínuos.

10
00:00:32.640 --> 00:00:35.360
‫Em geral, o tempo é considerado contínuo.

11
00:00:35.610 --> 00:00:39.250
‫Portanto, precisaremos de uma escala que possa trabalhar com dados contínuos.

12
00:00:39.570 --> 00:00:44.730
‫O que torna as escalas especiais é que elas podem trabalhar com datas em vez de números regulares.

13
00:00:46.810 --> 00:00:52.930
‫Vamos criar a habilidade para o eixo x, estaremos trabalhando neste arquivo de script na parte inferior da

14
00:00:52.930 --> 00:00:56.740
‫função de desenho para encontrar uma variável chamada escala X.

15
00:01:00.560 --> 00:01:04.190
‫Seu valor será a função de tempo de escala de três pontos.

16
00:01:06.610 --> 00:01:12.220
‫A escala e a função irão gerar uma escala que pode transformar datas em números, o não significa deve ser

17
00:01:12.220 --> 00:01:14.350
‫o intervalo de datas que se espera.

18
00:01:14.650 --> 00:01:19.540
‫Vamos mudar a função de domínio com a função de extensão D3 passada em.

19
00:01:22.040 --> 00:01:27.800
‫E o primeiro argumento da função extend vamos passar e os dados do segundo argumento,

20
00:01:27.800 --> 00:01:30.200
‫vamos passar e a função acessadora.

21
00:01:32.630 --> 00:01:38.930
‫A função de acesso retornará a data, podemos usar a função de extensão para encontrar as datas mais antigas e

22
00:01:38.930 --> 00:01:41.230
‫mais recentes, é flexível a esse respeito.

23
00:01:41.480 --> 00:01:44.060
‫Não é exclusivamente para trabalhar com números.

24
00:01:44.210 --> 00:01:45.850
‫Pode funcionar com datas facilmente.

25
00:01:46.130 --> 00:01:49.340
‫Vamos alterar a função de intervalo com uma matriz no passado.

26
00:01:51.810 --> 00:01:55.990
‫A linha será desenhada em toda a largura do contêiner em nossa imagem.

27
00:01:56.160 --> 00:01:59.690
‫Queremos que o ponto de partida da linha comece no lado esquerdo.

28
00:01:59.970 --> 00:02:05.430
‫O ponto final da linha deve ser à direita do container, pois passará em

29
00:02:05.430 --> 00:02:08.700
‫zero e o container de dimensões com propriedade.

30
00:02:11.140 --> 00:02:17.150
‫Nossa balança está pronta, ou assim parece, há um problema com nossa balança para descobrir o problema.

31
00:02:17.230 --> 00:02:21.930
‫Vamos registrar um valor que foi transformado nesta escala abaixo.

32
00:02:21.970 --> 00:02:23.920
‫Vamos criar uma declaração de log.

33
00:02:26.370 --> 00:02:34.350
‫O primeiro valor será registrado como um valor de retorno pela função de escala que passaremos no seguinte conjunto de dados do

34
00:02:34.350 --> 00:02:35.610
‫acessador X zero.

35
00:02:38.020 --> 00:02:40.730
‫Estamos acessando o primeiro objeto do array.

36
00:02:40.930 --> 00:02:43.760
‫Queremos testar se ele é capaz de dimensionar este estágio.

37
00:02:44.110 --> 00:02:48.190
‫Também vamos registrar a propriedade sem passar pela balança.

38
00:02:50.630 --> 00:02:56.450
‫Queremos comparar os valores lado a lado, vamos atualizar a página no navegador com o console

39
00:02:56.450 --> 00:02:56.990
‫aberto.

40
00:02:59.390 --> 00:03:05.630
‫No console, descobriremos que a escala transformou a propriedade em um valor indefinido, pode ser possível que

41
00:03:05.630 --> 00:03:10.640
‫estejamos passando o valor errado, mas não parece ser o caso porque a data

42
00:03:10.640 --> 00:03:12.720
‫está sendo registrada próximo a.

43
00:03:12.950 --> 00:03:14.250
‫Então qual é o problema?

44
00:03:14.390 --> 00:03:20.660
‫O problema era com nossa data em JavaScript, há um objeto de data oficial para armazenar datas.

45
00:03:20.960 --> 00:03:24.880
‫D3 espera que as datas em nossos dados para objetos de data.

46
00:03:25.040 --> 00:03:28.160
‫No entanto, as datas estão sendo armazenadas como strings.

47
00:03:28.410 --> 00:03:34.550
‫Se quisermos ser capazes de transformar datas em números, precisaremos transformar as datas de strings em

48
00:03:34.550 --> 00:03:35.930
‫objetos de data.

49
00:03:36.200 --> 00:03:41.590
‫Na seção de recursos desta palestra, forneço um link para um pacote chamado Formato de hora.

50
00:03:42.050 --> 00:03:44.030
‫Já falei sobre este pacote antes.

51
00:03:44.180 --> 00:03:47.300
‫É capaz de formatar a data de um objeto de data.

52
00:03:47.570 --> 00:03:51.200
‫Outro recurso deste pacote é a capacidade de analisar strings.

53
00:03:51.590 --> 00:03:55.090
‫Ele pode converter um valor de uma string em um objeto de data.

54
00:03:55.250 --> 00:03:58.550
‫Íamos usar esse recurso para nos ajudar a resolver nosso problema.

55
00:03:58.760 --> 00:04:00.200
‫Volte para o editor.

56
00:04:02.570 --> 00:04:08.870
‫Vá até o topo da função, vamos atualizar nossas funções de acessador, atualizando as funções de

57
00:04:08.870 --> 00:04:09.590
‫acessador.

58
00:04:09.650 --> 00:04:14.360
‫Todo o resto será atualizado, pois as escalas dependem do acesso ou funções.

59
00:04:14.660 --> 00:04:19.900
‫Precisamos passar a data de uma string para um objeto sobre o acesso ou funções.

60
00:04:20.000 --> 00:04:22.790
‫Vamos definir uma variável chamada data de passagem.

61
00:04:25.290 --> 00:04:28.860
‫Seu valor será a função de análise de três tempos.

62
00:04:31.450 --> 00:04:37.390
‫A função time parties irá retornar uma função que pode passar uma string, ela retornará um objeto

63
00:04:37.390 --> 00:04:43.270
‫de data baseado na string, nós precisamos dizer a esta função o formato que deve ser

64
00:04:43.270 --> 00:04:50.050
‫esperado para a data será passado a seguir como uma string porcentagem Y menos porcentagem M menos% s d.

65
00:04:52.610 --> 00:04:59.240
‫A string que passamos é o formato em que nossas datas são formatadas nos caracteres, estamos usando nossos marcadores.

66
00:04:59.480 --> 00:05:04.240
‫D3 interpretará isso como o ano, seguido pelo mês, seguido pelo dia.

67
00:05:04.550 --> 00:05:09.470
‫Você pode ver os diferentes marcadores de posição na página de documentação a que me referi anteriormente.

68
00:05:10.010 --> 00:05:11.210
‫O analisador está pronto.

69
00:05:11.360 --> 00:05:17.330
‫Vamos atualizar o eixo x ou função envolvendo o argumento com a função de estado PA.

70
00:05:19.810 --> 00:05:26.110
‫Além disso, vamos atualizar a função de acessador wine envolvendo o argumento com a função

71
00:05:26.230 --> 00:05:26.860
‫president.

72
00:05:29.360 --> 00:05:34.940
‫Estamos envolvendo o argumento com a função de análise porque queremos realizar uma conversão de tipo, o

73
00:05:35.270 --> 00:05:37.240
‫preço será armazenado como uma string.

74
00:05:37.520 --> 00:05:40.040
‫Queremos ter certeza de que ele é analisado como um número.

75
00:05:40.340 --> 00:05:42.830
‫A função percentual nos ajudará com isso.

76
00:05:43.070 --> 00:05:45.470
‫Vamos atualizar a página para ver os resultados.

77
00:05:47.940 --> 00:05:54.670
‫D3 está gerando zero, o motivo pelo qual ele produz zero é porque os dados já estão em ordem cronológica.

78
00:05:54.990 --> 00:05:57.750
‫O primeiro item da matriz é a data mais antiga.

79
00:05:58.080 --> 00:06:00.780
‫Portanto, ele será transformado em zero.

80
00:06:00.960 --> 00:06:03.300
‫É o valor esperado que é ótimo.

81
00:06:03.430 --> 00:06:06.120
‫Nossa escala funciona graças ao D três.

82
00:06:06.150 --> 00:06:08.100
‫Podemos trabalhar com datas de forma eficiente.

83
00:06:08.370 --> 00:06:10.590
‫Não tivemos que fazer muito para que isso funcionasse.

84
00:06:10.590 --> 00:06:12.260
‫Além de trocar escalas.

85
00:06:12.540 --> 00:06:15.780
‫Eu mencionei que existem duas escalas para trabalhar com datas.

86
00:06:15.990 --> 00:06:17.550
‫A escala de tempo é um deles.

87
00:06:17.730 --> 00:06:19.680
‫Vamos examinar a outra escala rapidamente.

88
00:06:19.830 --> 00:06:21.390
‫Volte para o editor.

89
00:06:21.900 --> 00:06:28.770
‫Vamos atualizar a função de escala X que substitui a função de tempo de escala por essas funções de escala UTC.

90
00:06:31.220 --> 00:06:37.250
‫A escala UTC faz a mesma coisa que a escala de tempo, ela transforma uma data em um número.

91
00:06:37.490 --> 00:06:40.550
‫A diferença é que pode funcionar com datas UTC.

92
00:06:40.760 --> 00:06:45.170
‫A escala de tempo assumirá que as datas estão relacionadas ao fuso horário local do usuário.

93
00:06:45.560 --> 00:06:48.190
‫Os estoques podem ser comprados e vendidos em todo o mundo.

94
00:06:48.380 --> 00:06:51.260
‫Podemos ter usuários em fusos horários diferentes.

95
00:06:51.380 --> 00:06:57.320
‫Se for esse o caso, devemos tentar manter um fuso horário específico em vez de usar o fuso

96
00:06:57.320 --> 00:07:02.710
‫horário do usuário para consistência, a escala UTC é muito mais adequada para o nosso caso.

97
00:07:02.960 --> 00:07:09.500
‫Vamos ficar com a escala UTC na próxima aula começaremos a traçar a linha com nossas escalas.

98
00:07:09.710 --> 00:07:11.370
‫Antes de encerrar esta palestra.

99
00:07:11.390 --> 00:07:13.970
‫Vou comentar sobre a declaração do console.

