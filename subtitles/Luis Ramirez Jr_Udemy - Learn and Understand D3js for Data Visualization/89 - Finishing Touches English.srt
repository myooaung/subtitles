1
00:00:00,360 --> 00:00:04,750
‫In this lecture, we're going to make some final adjustments to the stacked bar chart.

2
00:00:05,100 --> 00:00:08,290
‫First, I want to add some spacing between each bar.

3
00:00:08,610 --> 00:00:10,510
‫They seem too crowded at the moment.

4
00:00:10,650 --> 00:00:12,450
‫I think a little spacing will help.

5
00:00:12,630 --> 00:00:17,610
‫Second, we are going to sort the bars even though the bars are sorted by state.

6
00:00:17,940 --> 00:00:21,070
‫I think it would be better if they were sorted by population.

7
00:00:21,390 --> 00:00:24,450
‫The primary focus of this shark is population.

8
00:00:24,810 --> 00:00:28,420
‫Most readers will want to know where their states rank in population.

9
00:00:28,890 --> 00:00:29,910
‫Let's get started.

10
00:00:30,030 --> 00:00:31,680
‫Switch over to your editor.

11
00:00:31,920 --> 00:00:33,570
‫We'll tackle the spacing issue.

12
00:00:33,570 --> 00:00:38,490
‫First, we can configure spacing between bars by modifying the band scale.

13
00:00:38,850 --> 00:00:43,530
‫The band scale is responsible for distributing the bars across the x axis.

14
00:00:43,950 --> 00:00:46,800
‫We can modify the band scale by adding padding.

15
00:00:47,130 --> 00:00:48,660
‫There are two types of padding.

16
00:00:48,660 --> 00:00:51,120
‫We can add inner and outer padding.

17
00:00:51,390 --> 00:00:55,860
‫We're going to change two functions called padding inner and padding outer.

18
00:00:58,260 --> 00:01:01,620
‫Will pass in zero point one and two, both functions.

19
00:01:04,030 --> 00:01:09,760
‫Both functions can be passed in a value between zero and one, the number will be multiplied against

20
00:01:09,760 --> 00:01:10,510
‫the bandwidth.

21
00:01:10,840 --> 00:01:14,380
‫Therefore the padding will be 10 percent of the bandwidth.

22
00:01:14,680 --> 00:01:20,230
‫The outer padding is the space on the outside of the chart, whereas the inner padding is the space

23
00:01:20,230 --> 00:01:21,330
‫between each bar.

24
00:01:21,640 --> 00:01:24,760
‫We're setting both padding values to zero point one.

25
00:01:25,300 --> 00:01:29,950
‫Alternatively, we can shame the padding function to set both paddlings.

26
00:01:32,350 --> 00:01:36,670
‫We'll pass in zero point one and comment out the other two functions.

27
00:01:39,040 --> 00:01:43,130
‫The padding function will configure the inner and outer padding settings.

28
00:01:43,420 --> 00:01:46,470
‫This is useful if you plan on using the same values.

29
00:01:46,660 --> 00:01:49,060
‫Let's refresh the page to see what we get.

30
00:01:51,560 --> 00:01:57,440
‫The bars are more spaced out, that's great, we'll start working on sorting the bars, switch back

31
00:01:57,440 --> 00:01:58,250
‫to the ED.

32
00:02:00,720 --> 00:02:04,360
‫We're going to sort the data after performing a request for it.

33
00:02:04,710 --> 00:02:08,610
‫The data should be sorted by the total population at the moment.

34
00:02:08,640 --> 00:02:11,660
‫We don't have the total population for each state.

35
00:02:11,970 --> 00:02:15,300
‫It's because the population is split in two age groups.

36
00:02:15,560 --> 00:02:20,130
‫If we want the total population, we'll need to add the age groups together.

37
00:02:20,670 --> 00:02:25,480
‫Earlier, we added a callback function for handling type conversion on our data.

38
00:02:25,830 --> 00:02:29,760
‫We're going to update this function to calculate the total population.

39
00:02:30,150 --> 00:02:35,640
‫After the auto type function, we're going to add a property called total to the data.

40
00:02:38,140 --> 00:02:42,460
‫The value for this property will be the following three some.

41
00:02:44,960 --> 00:02:50,780
‫Did three some function, we'll loop through an array, it'll have this sun from each item in the array.

42
00:02:51,110 --> 00:02:52,550
‫There are two arguments.

43
00:02:52,820 --> 00:02:55,520
‫The first argument is the array to loop through.

44
00:02:55,700 --> 00:02:59,840
‫We need to tell you three to loop through the age groups in a given state.

45
00:03:00,050 --> 00:03:03,290
‫However, we don't know the property names for an age group.

46
00:03:03,800 --> 00:03:10,670
‫Luckily, the callback function for the DS 3.0 CSFI function has a third argument we can accept called

47
00:03:10,670 --> 00:03:11,360
‫columns.

48
00:03:11,690 --> 00:03:16,820
‫We'll update the arguments in the function to accept the index and columns arguments.

49
00:03:19,320 --> 00:03:25,980
‫The index argument refers to the current index in the iteration, the columns argument contains a list

50
00:03:25,980 --> 00:03:27,730
‫of properties within an array.

51
00:03:28,050 --> 00:03:31,620
‫We can pass this onto the D three some function.

52
00:03:34,080 --> 00:03:37,380
‫Then we'll add an arrow function as the second argument.

53
00:03:39,990 --> 00:03:45,870
‫The eral function will be provided the column name, which are used as the property names, will accept

54
00:03:45,870 --> 00:03:50,730
‫the argument as C next will return the following D. c..

55
00:03:53,300 --> 00:04:00,050
‫Overall, we'll be given the sum of a state's population, we can begin to sort the data after the CSFI

56
00:04:00,050 --> 00:04:03,950
‫function will call these sort of function on the data set array.

57
00:04:06,520 --> 00:04:10,030
‫We'll pass in a comparative function for comparing the values.

58
00:04:12,340 --> 00:04:18,190
‫The function will be provided to objects in the array to compare, we'll call them A and B.

59
00:04:20,860 --> 00:04:28,480
‫We're going to sort the data in descending order, therefore we'll return the following B total, minus

60
00:04:28,510 --> 00:04:29,740
‫a total.

61
00:04:32,250 --> 00:04:33,760
‫Our data should be sorted.

62
00:04:33,900 --> 00:04:35,310
‫Let's refresh the page.

63
00:04:37,730 --> 00:04:38,660
‫Fantastic.

64
00:04:38,780 --> 00:04:44,600
‫The bars are being sorted in descending order, it's much clearer as to which states have the biggest

65
00:04:44,600 --> 00:04:47,060
‫population, according to our chart.

66
00:04:47,300 --> 00:04:50,420
‫California has the population out of the other states.

67
00:04:50,600 --> 00:04:52,120
‫Wyoming ranks last.

68
00:04:52,580 --> 00:04:54,760
‫We're finished with the stacked bar chart.

69
00:04:55,010 --> 00:04:57,440
‫We'll continue our studies in the next section.

70
00:04:57,620 --> 00:04:58,640
‫I'll see you there.

