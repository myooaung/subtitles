WEBVTT
﻿1
00:00:00.570 --> 00:00:06.240
‫In this lecture, we are going to prepare the project to save time, I've prepared a set of files for

2
00:00:06.240 --> 00:00:12.030
‫this project in the resource section of this lecture I provide is it file with everything you'll need,

3
00:00:12.330 --> 00:00:17.370
‫download the zip file, unzip the contents and point your editor to the files.

4
00:00:17.610 --> 00:00:19.270
‫Pause the video if you need to.

5
00:00:19.830 --> 00:00:21.740
‫Let's quickly review the files.

6
00:00:21.750 --> 00:00:24.770
‫We will start with the indexed HTML file.

7
00:00:25.020 --> 00:00:26.490
‫We have a basic setup.

8
00:00:26.730 --> 00:00:28.710
‫There's an element called charge.

9
00:00:29.160 --> 00:00:32.250
‫This element will be the container for the histogram.

10
00:00:34.790 --> 00:00:40.700
‫The next vial is the access file, which comes with some basic styles to help center the image.

11
00:00:43.440 --> 00:00:46.980
‫Let's move onto the James file inside this file.

12
00:00:47.100 --> 00:00:52.350
‫We have a function called Draw the draw function is where we will be writing our code.

13
00:00:52.680 --> 00:00:58.650
‫The first thing happening in this function is a request is made for a file called Data JSON.

14
00:00:59.040 --> 00:01:00.870
‫Let's switch over to this file.

15
00:01:03.290 --> 00:01:08.370
‫This file contains our weather data, we are already familiar with the structure of this data.

16
00:01:08.540 --> 00:01:10.770
‫It's the same data we worked with before.

17
00:01:11.060 --> 00:01:15.050
‫It contains the weather data for New York City over a period of a year.

18
00:01:15.380 --> 00:01:17.690
‫Let's switch back to the script file.

19
00:01:20.190 --> 00:01:25.920
‫The next thing happening in the function is the dimensions are being set along with the dimensions for

20
00:01:25.920 --> 00:01:28.970
‫the image, we are adding dimensions for the container.

21
00:01:29.310 --> 00:01:32.370
‫We will be drawing a lot of shapes and labels for this chart.

22
00:01:32.820 --> 00:01:38.240
‫It would be a good idea to leave room so that shapes don't get drawn outside the images bounds.

23
00:01:38.430 --> 00:01:42.590
‫Otherwise they would get cut off after setting the dimensions.

24
00:01:42.630 --> 00:01:49.020
‫The image and container for the chart are being drawn there, being stored in variables called SPG and

25
00:01:49.020 --> 00:01:50.560
‫container respectively.

26
00:01:50.910 --> 00:01:54.480
‫We are going to be drawing the chart inside the container selection.

27
00:01:55.050 --> 00:01:56.950
‫That wraps it up for the files.

28
00:01:56.970 --> 00:01:58.140
‫Let's start drawing.

29
00:01:58.300 --> 00:02:00.430
‫The question is where do we begin?

30
00:02:00.630 --> 00:02:02.370
‫We'll start with the rectangles.

31
00:02:02.580 --> 00:02:06.500
‫This step is going to be challenging for reasons that will learn in a moment.

32
00:02:06.750 --> 00:02:08.880
‫Our data is not ready to be drawn.

33
00:02:09.060 --> 00:02:12.760
‫To understand why, let's start drawing the chart with our data.

34
00:02:13.050 --> 00:02:16.020
‫The problem will become visually clear once we do.

35
00:02:16.590 --> 00:02:21.480
‫According to the steps I outlined in an earlier section, we should write some scales.

36
00:02:21.660 --> 00:02:25.650
‫We are going to write one scale, which will be for the x axis.

37
00:02:26.010 --> 00:02:31.800
‫The Y axis is something we'll focus on after we get the bars arranged across the x axis.

38
00:02:32.160 --> 00:02:35.220
‫The main focus will be the x axis for this lecture.

39
00:02:35.790 --> 00:02:39.600
‫We aren't going to be using a complicated scale to draw some bars.

40
00:02:39.840 --> 00:02:44.610
‫We will be able to get away with a linear scale below the container selection.

41
00:02:44.610 --> 00:02:47.070
‫We will add a comment that says scale's.

42
00:02:49.400 --> 00:02:57.050
‫Next, we will create a variable called X scale, its value will be the D 3.0 scale linear function.

43
00:02:59.430 --> 00:03:02.310
‫Afterward, we will change the domain function.

44
00:03:04.800 --> 00:03:10.020
‫Inside this function, we will pass in the three extent function with the data.

45
00:03:12.480 --> 00:03:18.450
‫At the moment, the scale won't know which metric to use from our data set, we will create an accessor

46
00:03:18.450 --> 00:03:21.810
‫function under the data requests called X Accessor.

47
00:03:25.860 --> 00:03:31.830
‫Its value will be an arrow function that returns the currently humidity property.

48
00:03:34.350 --> 00:03:40.200
‫The chant we're building should be able to display any metric in our data set, however, to start things

49
00:03:40.200 --> 00:03:42.780
‫off, we're going to focus on the humidity.

50
00:03:43.050 --> 00:03:48.870
‫Once we have the basics covered, we will refactor our function to work with any metric in our data.

51
00:03:51.530 --> 00:03:58.040
‫Back in the X scale, we are going to pass the X accessor function to the D three extent function in

52
00:03:58.040 --> 00:03:58.670
‫the domain.

53
00:04:01.200 --> 00:04:06.000
‫The next thing we'll add is the range we will chain the range function with an array.

54
00:04:08.600 --> 00:04:12.470
‫The bars in the histogram will take up the entire width of the container.

55
00:04:12.680 --> 00:04:16.910
‫We will pass in zero and the dimensions container with property.

56
00:04:19.510 --> 00:04:25.450
‫The container with property is calculated at the top when we created the dimensions, if we look at

57
00:04:25.450 --> 00:04:31.060
‫this property, we will find that the images with is subtracted by the margins on both sides of the

58
00:04:31.060 --> 00:04:31.590
‫image.

59
00:04:31.600 --> 00:04:35.470
‫Hence why the margins property is being multiplied by two.

60
00:04:36.500 --> 00:04:41.330
‫Let's go back to our scale, we are going to change one more function called nice.

61
00:04:43.930 --> 00:04:49.930
‫The will round the domain in this scale, this is to prevent the axis from looking weird when we draw

62
00:04:49.940 --> 00:04:52.630
‫it, the scale for the X axis is ready.

63
00:04:52.900 --> 00:04:54.610
‫Let's move on to the next step.

64
00:04:54.610 --> 00:04:58.080
‫We will draw the bars in the image below the scale.

65
00:04:58.120 --> 00:05:00.970
‫We will add a comment that says Draw Barres.

66
00:05:03.290 --> 00:05:09.560
‫Next, we will perform a selection with these select all function on the container selection, the element

67
00:05:09.560 --> 00:05:11.840
‫we will select is the rectangle element.

68
00:05:14.260 --> 00:05:20.560
‫Afterward, we will chain the data function with the data set array to join the data with the selection.

69
00:05:23.030 --> 00:05:29.120
‫Since the selection will be empty, the data will be placed into an entire selection, we can move the

70
00:05:29.120 --> 00:05:33.160
‫data from the entire selection to the document by changing the join function.

71
00:05:33.470 --> 00:05:37.210
‫This function requires the name of the element we would like to create.

72
00:05:37.460 --> 00:05:39.230
‫We will pass and rectangle.

73
00:05:41.660 --> 00:05:47.390
‫The last thing we'll do is add some attributes first, we will start with the with attribute.

74
00:05:49.850 --> 00:05:56.180
‫The width attribute will be set to five, next, we will set the height attribute to one hundred.

75
00:05:58.620 --> 00:06:04.290
‫We are using a fixed width and height because our main focus is to position the rectangles across the

76
00:06:04.290 --> 00:06:10.530
‫x axis, the width and height attributes will be turned into dynamic values after we've dealt with the

77
00:06:10.530 --> 00:06:13.500
‫x axis after setting these attributes.

78
00:06:13.650 --> 00:06:19.470
‫We will set the X attribute to an arrow function that accepts in the data joined to the rectangle.

79
00:06:22.080 --> 00:06:28.200
‫The return value will be the X scale and X accessor functions with the data argument passed in.

80
00:06:30.880 --> 00:06:35.830
‫The last attribute will add is the wine attribute, its value will be zero.

81
00:06:38.440 --> 00:06:44.350
‫We're using zero because we don't have a scale for this attribute yet, we'll deal with this attribute

82
00:06:44.350 --> 00:06:45.560
‫in a future lecture.

83
00:06:45.850 --> 00:06:48.310
‫Let's refresh that page to see what we have.

84
00:06:50.760 --> 00:06:52.840
‫We will find a line of rectangles.

85
00:06:53.070 --> 00:06:58.800
‫There are a total of three hundred and sixty five rectangles because our data set represents the weather

86
00:06:58.800 --> 00:07:04.530
‫in a year, some rectangles will be on top of others because it's possible for days to have the same

87
00:07:04.530 --> 00:07:05.200
‫humidity.

88
00:07:05.610 --> 00:07:09.030
‫It's also the reason why there's a gap at both ends of the chart.

89
00:07:09.420 --> 00:07:12.820
‫There are certain humidities that don't exist in our data.

90
00:07:13.230 --> 00:07:16.320
‫Unfortunately, this is not what we were looking for.

91
00:07:16.500 --> 00:07:20.790
‫A histogram does not consist of bars that represent a single value.

92
00:07:21.060 --> 00:07:24.330
‫Bars in a histogram represent multiple values.

93
00:07:24.600 --> 00:07:28.200
‫Let's talk about this problem more in depth in the next lecture.

