1
00:00:00,420 --> 00:00:05,970
‫In this lecture, we are going to learn about scales, we are going to step away from our project for

2
00:00:05,970 --> 00:00:06,490
‫a moment.

3
00:00:06,720 --> 00:00:09,120
‫I want to discuss scales in isolation.

4
00:00:09,420 --> 00:00:14,310
‫After we've learned about scales, we will learn how to apply them to our visualizations.

5
00:00:14,530 --> 00:00:17,520
‫It'll be much easier to learn about scales separately.

6
00:00:18,060 --> 00:00:24,540
‫Scales took me a long time to figure out the concept is simple, but the logic behind it is very complicated.

7
00:00:24,810 --> 00:00:27,510
‫Here is how D3 describes scales.

8
00:00:28,020 --> 00:00:33,960
‫Scales are a convenient abstraction for a fundamental task in visualization, mapping a dimension of

9
00:00:33,960 --> 00:00:36,700
‫abstract data to a visual representation.

10
00:00:37,230 --> 00:00:40,320
‫That's a good summary if you're already familiar with scales.

11
00:00:40,320 --> 00:00:42,370
‫But to beginners, that's really confusing.

12
00:00:42,600 --> 00:00:45,150
‫Let's break down scales in a simpler manner.

13
00:00:45,690 --> 00:00:48,030
‫First, let's identify the problem.

14
00:00:48,330 --> 00:00:52,050
‫The data we use will not always be suitable for drawing shapes.

15
00:00:52,050 --> 00:00:56,760
‫In the previous lecture, we attempted to position the circles with the weather data.

16
00:00:57,030 --> 00:00:58,890
‫We didn't do anything to the data.

17
00:00:59,070 --> 00:01:01,110
‫We are using it in its raw form.

18
00:01:01,290 --> 00:01:03,350
‫Unfortunately, that didn't work.

19
00:01:03,600 --> 00:01:06,620
‫It was difficult to discern between different circles.

20
00:01:06,930 --> 00:01:09,540
‫We were left with a lot of empty room on the chart.

21
00:01:10,080 --> 00:01:15,870
‫It's not uncommon to face problems like these, the shapes we draw and need to represent our data.

22
00:01:16,080 --> 00:01:20,370
‫How do we represent temperature, humidity or any other type of data?

23
00:01:20,640 --> 00:01:24,630
‫We can try using math to calculate better positions and sciences.

24
00:01:24,840 --> 00:01:27,860
‫However, data comes in all shapes and sizes.

25
00:01:28,110 --> 00:01:31,530
‫What might work for one chart may not work for another.

26
00:01:32,100 --> 00:01:34,890
‫The dataset we have is the weather in New York.

27
00:01:35,100 --> 00:01:41,030
‫But what if we want to do swap out the data with the weather data for Arizona, California or even Alaska?

28
00:01:41,310 --> 00:01:45,390
‫Our custom map equations might not work for different types of weather data.

29
00:01:45,660 --> 00:01:48,540
‫Writing out algorithms can become more complex.

30
00:01:48,540 --> 00:01:52,800
‫The more advanced a chart is, it becomes very difficult to manage.

31
00:01:53,250 --> 00:01:57,660
‫The problem becomes compounded when we want to start supporting mobile devices.

32
00:01:57,810 --> 00:02:01,830
‫We live in an age where users will view our sites on various devices.

33
00:02:02,100 --> 00:02:05,070
‫Most sites can adapt to using responsive design.

34
00:02:05,460 --> 00:02:07,290
‫Let's take a look at an example.

35
00:02:07,440 --> 00:02:09,750
‫This example is an array with the numbers.

36
00:02:09,750 --> 00:02:11,550
‫Ten, twenty and thirty.

37
00:02:11,850 --> 00:02:14,310
‫The numbers aren't large enough to draw a graph.

38
00:02:14,460 --> 00:02:17,100
‫It would make our chart look small on any screen.

39
00:02:17,340 --> 00:02:21,450
‫We can make the chart more visible by multiplying the original numbers by ten.

40
00:02:21,730 --> 00:02:23,580
‫This would result in a new array.

41
00:02:23,850 --> 00:02:27,320
‫Our numbers would be one hundred, two hundred and three hundred.

42
00:02:27,780 --> 00:02:29,640
‫This will work for most devices.

43
00:02:29,760 --> 00:02:34,230
‫But what about people who view our visualizations on very large resolutions?

44
00:02:34,500 --> 00:02:37,370
‫We could multiply the original data by one hundred.

45
00:02:37,620 --> 00:02:41,370
‫The result would be one thousand, two thousand and three thousand.

46
00:02:41,610 --> 00:02:45,240
‫However, now the numbers are too large for mobile devices.

47
00:02:45,660 --> 00:02:49,140
‫On top of this problem, our data won't always be linear.

48
00:02:49,260 --> 00:02:52,500
‫Sometimes we'll have data with a wide range of values.

49
00:02:52,740 --> 00:02:56,550
‫Sometimes numbers will have to be decreased and others increased.

50
00:02:56,820 --> 00:02:58,440
‫All of this gets complicated.

51
00:02:58,440 --> 00:03:00,510
‫The more ambitious your project is.

52
00:03:00,990 --> 00:03:05,280
‫This is where D three comes in and save the day with something called scales.

53
00:03:05,670 --> 00:03:08,580
‫A scale is a function that can transform your data.

54
00:03:08,790 --> 00:03:10,470
‫Scales can be fed data.

55
00:03:10,770 --> 00:03:14,670
‫It'll return a brand new set of data that can be used for drawing a chart.

56
00:03:15,060 --> 00:03:21,000
‫The new set of data can be used for positioning a shape, changing its size or even change its color.

57
00:03:21,450 --> 00:03:23,280
‫A scale takes an input.

58
00:03:23,580 --> 00:03:26,700
‫It'll calculate the appropriate values for your chart.

59
00:03:27,000 --> 00:03:30,450
‫The transformed data is what is returned by a scale.

60
00:03:30,720 --> 00:03:33,450
‫There are a lot of advantages to using scales.

61
00:03:33,960 --> 00:03:37,080
‫D3 comes with dozens of scales out of the box.

62
00:03:37,260 --> 00:03:40,500
‫They can account for almost every scenario you can think of.

63
00:03:40,710 --> 00:03:45,360
‫Scales can generate numbers, dates, colors and other types of data.

64
00:03:45,660 --> 00:03:48,390
‫There are scales for working with exponential data.

65
00:03:48,720 --> 00:03:52,680
‫D3 isn't biased towards any particular visualization.

66
00:03:52,920 --> 00:03:55,980
‫It tries its best to accommodate all scenarios.

67
00:03:56,550 --> 00:03:59,730
‫There's one important point I want to stress about scales.

68
00:03:59,880 --> 00:04:01,140
‫They're just functions.

69
00:04:01,410 --> 00:04:03,420
‫They don't draw anything on the document.

70
00:04:03,690 --> 00:04:06,540
‫It's still up to us to draw the shapes for our chart.

71
00:04:06,840 --> 00:04:13,110
‫Scales are functions that help us by providing data we can use to draw our shapes before we can get

72
00:04:13,110 --> 00:04:14,430
‫started with scales.

73
00:04:14,430 --> 00:04:21,000
‫We need to understand two core concepts domains and range to better understand scales.

74
00:04:21,030 --> 00:04:22,350
‫Let's look at some data.

75
00:04:22,650 --> 00:04:26,070
‫Let's say we have a pizza shop over the past few days.

76
00:04:26,190 --> 00:04:31,080
‫We can't track of how many slices we sold to represent this scenario.

77
00:04:31,170 --> 00:04:33,210
‫We can create an array with the numbers.

78
00:04:33,210 --> 00:04:37,440
‫One hundred, two hundred, three hundred, four hundred and five hundred.

79
00:04:37,840 --> 00:04:41,610
‫Our job may be to draw a chart based on this data.

80
00:04:42,060 --> 00:04:45,750
‫The original data may need to be adjusted to be drawn on a page.

81
00:04:45,870 --> 00:04:48,780
‫We can use a scale to transform our data.

82
00:04:49,080 --> 00:04:55,980
‫A scale requires what's called an input domain and input domain is a range of possible values within

83
00:04:55,980 --> 00:04:56,610
‫our data.

84
00:04:56,820 --> 00:04:59,550
‫You can also refer to this as just the domain.

85
00:05:00,170 --> 00:05:06,400
‫Let's look at the array again, typically the domain is the smallest and largest numbers in the array.

86
00:05:06,680 --> 00:05:09,720
‫In this example, the smallest number is one hundred.

87
00:05:09,890 --> 00:05:11,600
‫The largest is five hundred.

88
00:05:11,870 --> 00:05:14,780
‫So the domain would be one hundred and five hundred.

89
00:05:15,080 --> 00:05:21,230
‫By providing these two numbers to three, it'll assume your data will contain values between one hundred

90
00:05:21,230 --> 00:05:22,180
‫and five hundred.

91
00:05:22,520 --> 00:05:27,320
‫Now that D3 knows the original range, it needs to know the output range.

92
00:05:27,830 --> 00:05:31,700
‫The output range is the range of possible output values.

93
00:05:31,970 --> 00:05:36,270
‫For example, let's say we wanted numbers between ten and 350.

94
00:05:36,710 --> 00:05:42,250
‫D3 will make sure the original data will be transformed into values within this range.

95
00:05:42,680 --> 00:05:46,010
‫Typically, the range will be the size of the viewing area.

96
00:05:46,190 --> 00:05:50,840
‫In some cases, the documentation will refer to this as just the range.

97
00:05:51,080 --> 00:05:56,450
‫For example, let's say we were reviewing the data on a screen with a max width of three fifty.

98
00:05:56,720 --> 00:05:59,560
‫The range of that would be zero two three fifty.

99
00:06:00,140 --> 00:06:03,290
‫Here is a visual example of what you can expect to see.

100
00:06:03,590 --> 00:06:06,110
‫The first axis is the input domain.

101
00:06:06,320 --> 00:06:12,470
‫The second axis represents the output range, the number one hundred, and the domain is tied to the

102
00:06:12,470 --> 00:06:14,440
‫number ten in the output range.

103
00:06:14,750 --> 00:06:20,240
‫Likewise, the number of five hundred in the domain is tied to the number three fifty in the output

104
00:06:20,240 --> 00:06:20,780
‫range.

105
00:06:21,110 --> 00:06:23,840
‫Any numbers in between will be scaled accordingly.

106
00:06:24,350 --> 00:06:28,700
‫Scales are handy because they can transform our data for our charts.

107
00:06:28,970 --> 00:06:33,410
‫We won't have to worry about writing down algorithms to calculate the values.

108
00:06:33,740 --> 00:06:36,560
‫The scale function will take care of the calculation.

109
00:06:36,890 --> 00:06:40,160
‫All it needs is our data and the size of the viewing area.

110
00:06:40,340 --> 00:06:43,460
‫Once it has that data, it'll take care of the rest.

111
00:06:43,910 --> 00:06:46,790
‫We are going to start writing skills in the next lecture.

112
00:06:46,940 --> 00:06:47,900
‫I'll see you there.

