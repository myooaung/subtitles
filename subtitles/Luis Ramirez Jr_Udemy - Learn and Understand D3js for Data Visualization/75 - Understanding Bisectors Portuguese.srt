1
00:00:00,270 --> 00:00:05,520
‫Nesta aula, vamos precisar descobrir onde exibir a dica de ferramenta no momento, sabemos onde o

2
00:00:05,520 --> 00:00:07,540
‫leitor está cobrindo a boca.

3
00:00:07,710 --> 00:00:10,730
‫No entanto, não sabemos onde exibir a dica de ferramenta.

4
00:00:10,980 --> 00:00:13,540
‫Nem mesmo sabemos que ponto o leitor deseja visualizar.

5
00:00:13,830 --> 00:00:19,890
‫A única informação que temos à nossa disposição são as coordenadas X e Y do mouse que usaremos por

6
00:00:19,890 --> 00:00:23,780
‫setor para nos ajudar a descobrir onde exibir a dica de ferramenta.

7
00:00:24,090 --> 00:00:30,570
‫Um bi setor é uma função que nos permite localizar onde inserir um elemento em uma matriz para manter

8
00:00:30,570 --> 00:00:32,310
‫uma matriz sórdida ali.

9
00:00:32,310 --> 00:00:33,990
‫Um recurso extremamente útil.

10
00:00:34,230 --> 00:00:37,030
‫Antes de discutirmos como um setor de BI nos ajudará.

11
00:00:37,140 --> 00:00:40,210
‫Vejamos um exemplo de como funciona um setor de BI.

12
00:00:40,650 --> 00:00:42,990
‫Digamos que temos uma matriz de cinco números.

13
00:00:43,200 --> 00:00:46,140
‫Os números nesta matriz variam de 10 a 50.

14
00:00:46,440 --> 00:00:48,960
‫Podemos querer inserir um novo número na matriz.

15
00:00:49,290 --> 00:00:53,560
‫Por exemplo, podemos querer inserir o número trinta e cinco na matriz.

16
00:00:53,880 --> 00:00:56,610
‫Uma solução seria chamar a função push.

17
00:00:56,940 --> 00:01:00,000
‫O número seria inserido no final da matriz.

18
00:01:00,420 --> 00:01:04,770
‫JavaScript irá criar um novo array com nosso número inserido no final.

19
00:01:05,250 --> 00:01:08,700
‫Essa solução funciona, mas deixa nosso array sem classificação.

20
00:01:08,910 --> 00:01:12,030
‫O número trinta e cinco deve estar entre 30 e 40.

21
00:01:12,330 --> 00:01:14,870
‫Podemos corrigir esse problema classificando a matriz.

22
00:01:15,150 --> 00:01:18,090
‫Essa é uma solução totalmente válida e aceitável.

23
00:01:18,670 --> 00:01:20,370
‫Existe uma solução alternativa.

24
00:01:20,550 --> 00:01:26,310
‫Em vez de inserir o número no final da matriz, podemos inserir o número na posição correta.

25
00:01:26,610 --> 00:01:31,830
‫JavaScript tem uma função para inserir elemento em um índice específico chamado Splice.

26
00:01:32,160 --> 00:01:37,520
‫No entanto, a função de emenda não insere automaticamente o elemento no local correto.

27
00:01:37,830 --> 00:01:40,950
‫Precisamos dizer a esta função onde inserir o elemento.

28
00:01:41,400 --> 00:01:46,060
‫Antes de fazermos isso, precisamos descobrir onde o número de trinta e cinco se encaixa nessa matriz.

29
00:01:46,440 --> 00:01:50,250
‫É aqui que a função D3 bisect entra em ação.

30
00:01:50,580 --> 00:01:54,930
‫A função básica tem dois argumentos, a matriz e o elemento.

31
00:01:55,230 --> 00:02:00,810
‫D3 tentará procurar um índice onde o número possa ser inserido enquanto mantém a matriz classificada.

32
00:02:01,110 --> 00:02:04,200
‫O valor de retorno por esta função será o índice.

33
00:02:04,560 --> 00:02:07,110
‫Neste exemplo, o índice será três.

34
00:02:07,440 --> 00:02:12,900
‫Depois de armazenar o índice, estamos inserindo o número na matriz, chamando a função spliffs que será

35
00:02:13,230 --> 00:02:19,020
‫retornada a uma matriz onde o número trinta e cinco é inserido após trinta, mas antes de 40 a

36
00:02:19,440 --> 00:02:20,810
‫matriz ainda está classificada.

37
00:02:20,880 --> 00:02:22,530
‫Não precisamos classificar a matriz.

38
00:02:24,050 --> 00:02:30,620
‫Atualmente, estou no console das ferramentas de desenvolvedor de nosso projeto dentro do console que colei no código

39
00:02:30,620 --> 00:02:35,640
‫que escrevi nesta linha, se eu executar este código, um array será retornado.

40
00:02:35,810 --> 00:02:36,830
‫Não é relevante.

41
00:02:36,980 --> 00:02:38,990
‫Vou registrar a matriz de números.

42
00:02:41,500 --> 00:02:47,470
‫Depois de registrar esse array, fica claro que o número foi inserido no local correto, o

43
00:02:47,470 --> 00:02:50,280
‫array foi afirmado em ordem crescente, fantástico.

44
00:02:50,470 --> 00:02:53,950
‫Então você pode estar pensando, como essa função resolverá nosso problema?

45
00:02:54,100 --> 00:02:55,200
‫Essa é uma ótima pergunta.

46
00:02:55,630 --> 00:02:58,350
‫Precisamos descobrir onde inserir a dica de ferramenta.

47
00:02:58,600 --> 00:03:01,450
‫As únicas informações que temos são as coordenadas.

48
00:03:01,600 --> 00:03:07,050
‫No entanto, temos escalas que convertem os valores em nossos dados em valores de coordenadas.

49
00:03:07,300 --> 00:03:11,770
‫Podemos fazer engenharia reversa em nossas escalas para nos ajudar a encontrar onde exibir a dica de ferramenta.

50
00:03:12,070 --> 00:03:16,210
‫Vai ser um pouco complexo, mas iremos examiná-lo passo a passo.

51
00:03:16,870 --> 00:03:20,830
‫Em primeiro lugar, precisamos decidir quais coordenadas a dica de ferramenta precisará.

52
00:03:21,130 --> 00:03:24,340
‫Queremos posicionar a ponta da ferramenta diretamente sobre a linha.

53
00:03:24,640 --> 00:03:29,790
‫Se eu passar o mouse sobre o gráfico, as coordenadas X e Y do mouse serão registradas.

54
00:03:30,040 --> 00:03:36,220
‫Se pensarmos sobre isso, já temos a coordenada X para a dica de ferramenta conforme movemos o mouse sobre o

55
00:03:36,220 --> 00:03:37,800
‫eixo x do gráfico.

56
00:03:37,930 --> 00:03:39,310
‫O mesmo deve acontecer com a dica da ferramenta.

57
00:03:39,640 --> 00:03:41,950
‫A dica de ferramenta deve ser alinhada com o mouse.

58
00:03:42,460 --> 00:03:49,120
‫A coordenada que não temos é a coordenada Y, a coordenada y das dicas de ferramenta deve ser definida para um valor que

59
00:03:49,120 --> 00:03:51,610
‫posicione a dica de ferramenta acima da linha.

60
00:03:51,940 --> 00:03:52,920
‫É disso que precisamos.

61
00:03:53,230 --> 00:03:58,050
‫Vamos mudar para o editor para começar a descobrir como podemos obter a coordenada Y.

62
00:03:58,630 --> 00:04:00,970
‫Estaremos trabalhando no evento de movimentação do mouse.

63
00:04:00,970 --> 00:04:04,570
‫Aplicamos ao retângulo transparente na função.

64
00:04:04,600 --> 00:04:06,760
‫Vamos remover a instrução do console.

65
00:04:09,280 --> 00:04:15,490
‫Veja como obteremos a coordenada Y - o gráfico de linha é baseado em dois valores, a data e o preço de

66
00:04:15,490 --> 00:04:16,010
‫fechamento.

67
00:04:16,300 --> 00:04:19,390
‫Esses dois valores são agrupados como objetos na matriz.

68
00:04:19,720 --> 00:04:22,690
‫Sabemos que a data é desenhada no eixo x.

69
00:04:22,900 --> 00:04:28,660
‫Se pudermos reverter a coordenada X da posição do mouse para a data, encontraremos o objeto no array que

70
00:04:28,660 --> 00:04:30,200
‫possui a mesma data.

71
00:04:30,550 --> 00:04:35,800
‫Em seguida, pegaremos o preço de fechamento, que podemos executar por meio da função Windscale para ajudar a

72
00:04:35,800 --> 00:04:40,790
‫encontrar a coordenada Y para a dica de ferramenta após criar a variável de posição do mouse.

73
00:04:40,870 --> 00:04:43,270
‫Vamos definir uma variável chamada data.

74
00:04:43,630 --> 00:04:46,990
‫Seu valor será a função de inversão da escala X.

75
00:04:49,550 --> 00:04:56,480
‫Essas funções de escala não precisam ser usadas como funções, podemos usá-las como objetos para escalas, transformar valores

76
00:04:56,480 --> 00:04:59,090
‫em nossos dados, definir em coordenadas.

77
00:04:59,270 --> 00:05:04,910
‫Em alguns casos, pode ser necessário reverter a coordenada em seus valores originais no conjunto de dados.

78
00:05:05,270 --> 00:05:07,390
‫A função inversa permite que você faça isso.

79
00:05:07,580 --> 00:05:09,320
‫Ele está disponível em todas as escalas.

80
00:05:10,290 --> 00:05:13,650
‫Podemos passar na seguinte posição do mouse zero.

81
00:05:16,110 --> 00:05:22,290
‫A função invert aceita o valor que queremos inverter, estamos passando o primeiro valor no array porque

82
00:05:22,290 --> 00:05:25,340
‫é onde o XCOR do mouse é armazenado.

83
00:05:25,590 --> 00:05:26,880
‫Vamos comprar o valor.

84
00:05:29,200 --> 00:05:31,330
‫No navegador, atualize a página.

85
00:05:33,690 --> 00:05:39,570
‫Se posicionarmos nossos mouses do lado esquerdo da carga, o console registrará datas que começam em dois

86
00:05:39,570 --> 00:05:40,720
‫mil e sete.

87
00:05:41,040 --> 00:05:41,950
‫Perfeito.

88
00:05:42,180 --> 00:05:44,880
‫O conjunto de dados também começa em dois mil e sete.

89
00:05:45,090 --> 00:05:51,470
‫Conforme arrastamos nossos ratos sobre o eixo x, as datas aumentam lentamente até vinte e doze.

90
00:05:51,810 --> 00:05:56,970
‫Não importa para onde arrastamos o mouse, sempre obteremos a data correta que corresponde ao

91
00:05:56,970 --> 00:05:58,260
‫ponto na linha.

92
00:05:58,770 --> 00:06:04,500
‫A próxima etapa é pesquisar em nossa matriz de conjunto de dados para encontrar a data que corresponda à data que

93
00:06:04,500 --> 00:06:06,120
‫invertemos das coordenadas do mouse.

94
00:06:06,420 --> 00:06:09,090
‫É aqui que a função bisect entra em ação.

95
00:06:09,420 --> 00:06:12,720
‫De volta à edição, vamos remover a instrução do console.

96
00:06:15,150 --> 00:06:18,310
‫A seguir, criaremos uma variável chamada índice.

97
00:06:18,510 --> 00:06:21,780
‫Seu valor será a função de três seções.

98
00:06:24,290 --> 00:06:30,350
‫A função bisect tem dois argumentos, o array e o elemento que queremos inserir, vamos passar o array do

99
00:06:30,350 --> 00:06:33,290
‫conjunto de dados e a variável de data.

100
00:06:35,700 --> 00:06:39,420
‫Vamos bloquear o índice no navegador, atualizar a página.

101
00:06:41,800 --> 00:06:43,990
‫Vamos passar o mouse sobre o gráfico.

102
00:06:44,290 --> 00:06:50,020
‫O conselho está registrando o mesmo valor, não importa para onde arrastamos o mouse, o valor permanece o

103
00:06:50,020 --> 00:06:50,560
‫mesmo.

104
00:06:50,830 --> 00:06:51,850
‫Isso é um problema.

105
00:06:51,850 --> 00:06:57,820
‫Devemos obter um índice exclusivo toda vez que obtivermos o mesmo índice, porque o D3 não sabe

106
00:06:57,820 --> 00:07:00,040
‫como comparar os objetos no array.

107
00:07:00,580 --> 00:07:03,180
‫Anteriormente, trabalhávamos com um array simples.

108
00:07:03,400 --> 00:07:04,960
‫Era uma série de números.

109
00:07:05,140 --> 00:07:07,480
‫Comparar uma série de números é fácil.

110
00:07:07,750 --> 00:07:11,260
‫Por outro lado, comparar objetos requer algum trabalho.

111
00:07:11,500 --> 00:07:15,640
‫Precisamos dizer a D3 três com quais propriedades ele deve estar comparando a data.

112
00:07:16,060 --> 00:07:22,270
‫Infelizmente, a função bisect não nos permite personalizar a comparação necessária para criar

113
00:07:22,270 --> 00:07:24,660
‫uma função personalizada por setor.

114
00:07:25,120 --> 00:07:29,470
‫Veremos como podemos definir uma função de biossegurança personalizada na próxima aula.

