1
00:00:00,770 --> 00:00:05,010
‫In this lecture, we'll explore how to create some shapes with SPG.

2
00:00:05,390 --> 00:00:09,810
‫There are three shapes will cover rectangles, circles and lines.

3
00:00:10,040 --> 00:00:12,910
‫We'll start with rectangles in my editor.

4
00:00:12,950 --> 00:00:16,060
‫I open the file we created in the previous lecture.

5
00:00:16,610 --> 00:00:18,200
‫Let's create some shapes.

6
00:00:18,380 --> 00:00:23,770
‫I can draw a rectangle by adding the rectangle element inside the SVG element.

7
00:00:26,270 --> 00:00:32,930
‫It's important we add this element inside the SPG element, the browser will not draw the shape unless

8
00:00:32,930 --> 00:00:35,660
‫it's contained inside the SVG element.

9
00:00:35,990 --> 00:00:41,230
‫This rule goes for the other shapes to Recht is short for a rectangle.

10
00:00:41,450 --> 00:00:46,960
‫I'm using opening and closing tags, SG support, self-closing tags as well.

11
00:00:47,330 --> 00:00:49,520
‫I prefer opening and closing tags.

12
00:00:49,700 --> 00:00:56,640
‫When we start using D3, it'll generate the elements with opening and closing tags for the sake of consistency.

13
00:00:56,780 --> 00:01:03,320
‫I encourage you to do the same, even if there isn't any content inside the rectangle shape requires

14
00:01:03,320 --> 00:01:07,960
‫some attributes, otherwise we won't be able to see the shape on the page.

15
00:01:08,210 --> 00:01:10,480
‫We have to set a width and height.

16
00:01:10,820 --> 00:01:13,490
‫We will set both attributes to one hundred.

17
00:01:16,150 --> 00:01:20,470
‫We've created our first SFG element, let's view it in the browser.

18
00:01:23,000 --> 00:01:30,080
‫A black rectangle will render on the screen by default, the rectangle element will draw a black rectangle.

19
00:01:30,230 --> 00:01:32,430
‫It's a great start, but it's kind of dull.

20
00:01:32,900 --> 00:01:35,580
‫Let's change the color to something more lively.

21
00:01:35,810 --> 00:01:37,670
‫Let's go back to our editors.

22
00:01:40,080 --> 00:01:44,010
‫On the rectangle, elements add a new attribute called Phil.

23
00:01:46,640 --> 00:01:53,150
‫The Phil attribute allows us to change the color of a shape, the feel attribute can be applied to all

24
00:01:53,150 --> 00:01:54,550
‫shapes in ACG.

25
00:01:54,890 --> 00:01:56,960
‫It's not exclusive to rectangles.

26
00:01:57,230 --> 00:02:00,490
‫The value for this attribute can be a hex code value.

27
00:02:00,830 --> 00:02:02,150
‫Let's add it to hash.

28
00:02:02,150 --> 00:02:04,670
‫Five, four, four, three, three, six.

29
00:02:07,260 --> 00:02:13,290
‫Shave's can have borders, they're completely optional, we can add a different attribute to our shape

30
00:02:13,290 --> 00:02:15,600
‫elements called the stroke attribute.

31
00:02:18,190 --> 00:02:24,790
‫This attribute can be applied to any of the shapes, the value for this attribute can be any color we'd

32
00:02:24,790 --> 00:02:25,230
‫like.

33
00:02:25,570 --> 00:02:29,350
‫We're going to set this attribute to hash eight B, C.

34
00:02:29,350 --> 00:02:30,640
‫Three for A.

35
00:02:33,330 --> 00:02:36,040
‫This value will give us a border with the color green.

36
00:02:36,390 --> 00:02:40,080
‫There's one last attribute will add to the rectangle.

37
00:02:40,380 --> 00:02:45,440
‫If we decide to add a border to our shape, we're required to add the borders whip.

38
00:02:45,840 --> 00:02:49,500
‫We can set the border by adding the stroke with attribute.

39
00:02:52,020 --> 00:02:57,240
‫I'm going to set the width of this stroke to 10, which is fairly large with that set.

40
00:02:57,270 --> 00:02:58,890
‫Let's check out the page again.

41
00:03:01,440 --> 00:03:07,230
‫We'll get a rectangle with a red background and a green stroke, the value of these attributes can be

42
00:03:07,230 --> 00:03:09,060
‫any valid CSFs color.

43
00:03:09,330 --> 00:03:14,810
‫You can use named colors, hex values are cheeba and HSV.

44
00:03:15,180 --> 00:03:21,480
‫I prefer to use Hex whenever possible because it's easier to read, use whatever's comfortable to you.

45
00:03:22,260 --> 00:03:27,930
‫The fill, stroke and stroke with attributes are specific to SVG elements.

46
00:03:27,930 --> 00:03:34,230
‫Only a common mistake beginners make is attempting to change the shapes appearance with the wrong S.O.S

47
00:03:34,230 --> 00:03:35,050
‫properties.

48
00:03:35,310 --> 00:03:38,640
‫Let me show you an example in the developer tools.

49
00:03:38,640 --> 00:03:40,800
‫Select the rectangle elements.

50
00:03:43,280 --> 00:03:48,120
‫On the right side, we'll find a list of six properties applied to this element.

51
00:03:48,410 --> 00:03:50,540
‫It's showing us the width, height.

52
00:03:50,690 --> 00:03:53,840
‫Stroke, stroke, width and fill properties.

53
00:03:54,230 --> 00:03:58,620
‫At the very top of the list, there's a block called Element dot style.

54
00:03:58,970 --> 00:04:04,430
‫This section will allow us to apply excess properties to the element we have selected.

55
00:04:04,880 --> 00:04:08,510
‫We can use this to apply inline styles to the element.

56
00:04:08,730 --> 00:04:11,840
‫I'm going to apply the background color property.

57
00:04:14,320 --> 00:04:19,750
‫Right off the bat, I want you to know that this will not work, the background color does not work

58
00:04:19,750 --> 00:04:21,670
‫with SFG based elements.

59
00:04:21,820 --> 00:04:24,070
‫I'm going to change the color to yellow.

60
00:04:26,610 --> 00:04:32,520
‫The color does not get applied to the element SPG elements have separate properties for changing their

61
00:04:32,520 --> 00:04:32,950
‫color.

62
00:04:33,300 --> 00:04:38,190
‫We can't use standard CCWs properties for manipulating SPG elements.

63
00:04:38,380 --> 00:04:41,870
‫If we want to change the color, we'll need to set the fill.

64
00:04:41,880 --> 00:04:46,950
‫Property will set the property to yellow with the developer tools.

65
00:04:49,450 --> 00:04:53,800
‫After adding this property, the element will change to the color yellow.

66
00:04:54,070 --> 00:05:00,760
‫This is important to note certain see a sense properties can only be applied to SFG elements and vice

67
00:05:00,760 --> 00:05:01,300
‫versa.

68
00:05:01,900 --> 00:05:05,320
‫Another thing I want to highlight is a problem with the stroke.

69
00:05:05,540 --> 00:05:07,260
‫I'm not sure if you can see it.

70
00:05:07,270 --> 00:05:09,400
‫So I'm going to zoom in on the document.

71
00:05:12,130 --> 00:05:18,820
‫The stroke is thinner on the left and top, as opposed to the bottom and right, the bottom and right

72
00:05:18,820 --> 00:05:21,310
‫sides are displaying 10 pixels each.

73
00:05:21,790 --> 00:05:25,330
‫The reason the stroke is being cut off is because of overflow.

74
00:05:25,570 --> 00:05:30,910
‫By default, browsers will hide shapes outside the bounds of the SVG element.

75
00:05:31,390 --> 00:05:36,550
‫Strokes are generated by applying half the width inside and half the width outside.

76
00:05:36,940 --> 00:05:43,480
‫This means that for each side there are five pixels that are inside the element and five pixels outside

77
00:05:43,480 --> 00:05:44,250
‫of the element.

78
00:05:44,950 --> 00:05:48,240
‫I'm going to hover my mouse over the SVG element.

79
00:05:48,580 --> 00:05:51,280
‫It's clear the rectangle fits inside the element.

80
00:05:51,490 --> 00:05:58,180
‫However, if I hover my mouse over the rectangle element, it looks like it doesn't fit as I toggle

81
00:05:58,180 --> 00:06:00,110
‫my mouse between both elements.

82
00:06:00,130 --> 00:06:02,380
‫You'll be able to see the slight difference.

83
00:06:04,960 --> 00:06:12,020
‫The rectangle is outside of the SVG element, thanks to the overflow property, it gets cut off.

84
00:06:12,580 --> 00:06:15,030
‫There are a couple of solutions to fix this.

85
00:06:15,220 --> 00:06:17,140
‫Let's go over them one by one.

86
00:06:17,440 --> 00:06:23,560
‫The fastest solution is to set the overflow property to visible and the developer tools.

87
00:06:23,620 --> 00:06:30,730
‫We also let the SPG element on the right will and the overflow property with a value of visible.

88
00:06:33,320 --> 00:06:37,340
‫After making this change, the rectangles edges are fully visible.

89
00:06:37,580 --> 00:06:40,930
‫It works, but it may not be the change we're looking for.

90
00:06:41,180 --> 00:06:43,670
‫Sometimes we may want to hide shapes.

91
00:06:43,670 --> 00:06:48,530
‫If they leave the bounds of an image, there's an alternative solution we can implement.

92
00:06:49,760 --> 00:06:53,640
‫SPG uses a coordinate system to position shapes.

93
00:06:54,230 --> 00:06:57,930
‫Let's pretend this gray area is in SVG element.

94
00:06:57,980 --> 00:07:01,040
‫It has a width and height of five hundred pixels.

95
00:07:01,520 --> 00:07:04,280
‫Every SPG image has two axes.

96
00:07:04,430 --> 00:07:06,920
‫The first axis is the x axis.

97
00:07:07,160 --> 00:07:08,720
‫It goes from left to right.

98
00:07:09,050 --> 00:07:16,010
‫If we want to move a shape from left to right, we would need to modify its X, coordinate a shape position

99
00:07:16,010 --> 00:07:18,680
‫to the left has an X coordinate of zero.

100
00:07:18,890 --> 00:07:24,530
‫A shape position to the right of the image has an X coordinate of five hundred.

101
00:07:25,190 --> 00:07:27,560
‫The second axis is the Y axis.

102
00:07:28,010 --> 00:07:29,780
‫It goes from top to bottom.

103
00:07:31,160 --> 00:07:37,850
‫A sheet positioned at the top of the SVG image has a Y coordinate of zero if it's positioned at the

104
00:07:37,850 --> 00:07:38,440
‫bottom.

105
00:07:38,480 --> 00:07:41,010
‫It has a Y coordinate of five hundred.

106
00:07:41,540 --> 00:07:46,370
‫By default, all shapes will have their X and Y coordinates set to zero.

107
00:07:46,730 --> 00:07:50,900
‫This will position them at the top left corner of the SVG element.

108
00:07:51,200 --> 00:07:57,890
‫In addition, we're not restricted to the bounds of the SVG element were allowed to use negative numbers

109
00:07:57,890 --> 00:08:01,190
‫or numbers that exceed the width and height of the image.

110
00:08:02,570 --> 00:08:09,020
‫Let's try using the coordinate system to move the rectangle, we can modify the shapes coordinates by

111
00:08:09,020 --> 00:08:12,740
‫adding the X and Y attributes to the rectangle element.

112
00:08:15,290 --> 00:08:20,630
‫We're going to set both coordinates to twenty five to nudge the rectangle shape over.

113
00:08:23,260 --> 00:08:28,180
‫After applying both properties, go back to your browser and refresh the page.

114
00:08:30,780 --> 00:08:37,350
‫The rectangle has been moved over, this small change has made the stroke fully visible, the coordinate

115
00:08:37,350 --> 00:08:39,180
‫system applies to all shapes.

116
00:08:39,420 --> 00:08:43,650
‫It's the primary method in which we'll position shapes in our graphs.

117
00:08:43,950 --> 00:08:47,130
‫We'll get plenty of practice with the coordinate system.

118
00:08:47,730 --> 00:08:50,660
‫We've played with the rectangle shape enough already.

119
00:08:50,970 --> 00:08:52,710
‫Let's move on to the next shape.

120
00:08:53,040 --> 00:08:53,940
‫The next shape.

121
00:08:53,940 --> 00:08:55,860
‫I want to cover our circles.

122
00:08:56,160 --> 00:09:02,070
‫Creating a circle element is a bit different from creating a rectangle switched back to the editor.

123
00:09:04,660 --> 00:09:08,320
‫To create a circle, we need to add this circle element.

124
00:09:10,850 --> 00:09:18,020
‫This will create a perfect circle for you, the circle element has one required attribute called Ah,

125
00:09:18,440 --> 00:09:25,220
‫this attribute name is short for radius as a refresher, the radius is the distance from the center

126
00:09:25,220 --> 00:09:29,930
‫of the circle to any of its edges will set the radius to one hundred.

127
00:09:32,540 --> 00:09:38,180
‫We're going to suffer from the same problems we had with the rectangle, the circle will get cut off

128
00:09:38,180 --> 00:09:39,100
‫unless we move it.

129
00:09:39,470 --> 00:09:42,820
‫We can use the same solution we used for the rectangle.

130
00:09:43,160 --> 00:09:49,550
‫We can change these circles coordinates to move it over the attributes for setting these circles coordinates

131
00:09:49,550 --> 00:09:51,680
‫have different names than the rectangle.

132
00:09:51,920 --> 00:09:56,900
‫However, the coordinate system still applies for the x axis.

133
00:09:56,930 --> 00:10:01,670
‫We need to add DCX attribute said it to any value you'd like.

134
00:10:01,850 --> 00:10:04,370
‫Will set this attribute to 250.

135
00:10:07,020 --> 00:10:12,630
‫For the Y-axis we can add, these seewhy attribute will set this to one 50.

136
00:10:15,280 --> 00:10:17,750
‫I'm not using any special coordinates.

137
00:10:17,980 --> 00:10:23,360
‫The goal is to make the circle fully visible, aside from the three attributes we've added.

138
00:10:23,500 --> 00:10:25,050
‫Everything else is the same.

139
00:10:25,330 --> 00:10:29,290
‫We can change the color of the circle by adding the attribute.

140
00:10:29,620 --> 00:10:35,260
‫We'll add it with the following color hash nine C to seven, B zero.

141
00:10:37,730 --> 00:10:41,850
‫I'm not going to add a stroke, but feel free to do so on your end.

142
00:10:42,290 --> 00:10:44,810
‫Let's refresh the page to see what we get.

143
00:10:47,380 --> 00:10:54,270
‫We get a purple circle positioned near the center of the element, so that's the circle element.

144
00:10:54,610 --> 00:10:57,210
‫The final shape I want to show you is a line.

145
00:10:57,430 --> 00:10:59,020
‫Let's go back to the ED.

146
00:11:01,460 --> 00:11:04,640
‫To create a line, we can use the line element.

147
00:11:07,130 --> 00:11:13,330
‫While lines are simple, the line element requires we define a couple of attributes to draw one.

148
00:11:13,610 --> 00:11:20,030
‫The first four are the coordinates we need to tell the browser the starting and end points for the line.

149
00:11:20,360 --> 00:11:25,880
‫The first set of attributes we need to add are the X one and why one attributes.

150
00:11:28,340 --> 00:11:34,730
‫The values for these attributes must be the coordinates for the starting point will set both to 50.

151
00:11:37,220 --> 00:11:41,570
‫Next, we need to add the X two and Y two attributes.

152
00:11:43,980 --> 00:11:49,500
‫These attributes here represent the end point, let's set both attributes to 200.

153
00:11:52,060 --> 00:12:00,040
‫SVG will draw a line from the first set of coordinates, 50 50 to the second set of coordinates, two

154
00:12:00,040 --> 00:12:03,700
‫hundred two hundred will need to add two more attributes.

155
00:12:03,880 --> 00:12:08,710
‫The stroke and stroke with attributes lines do not have a fill.

156
00:12:08,950 --> 00:12:10,960
‫So you're stuck with using the stroke.

157
00:12:11,290 --> 00:12:14,680
‫We're going to set the color to blue and the width to ten.

158
00:12:17,350 --> 00:12:23,800
‫Let's refresh the page and check out the final result, as we expected, we get a blue line, nothing

159
00:12:23,800 --> 00:12:24,990
‫too spectacular.

160
00:12:25,180 --> 00:12:26,740
‫These are the basic shapes.

161
00:12:26,980 --> 00:12:30,460
‫You will most likely work with them the most when building charts.

162
00:12:30,940 --> 00:12:33,090
‫There's one last thing I want to go over.

163
00:12:33,310 --> 00:12:36,230
‫It's important we consider how shapes get layered.

164
00:12:36,580 --> 00:12:39,640
‫Let's look at the shapes and documents side by side.

165
00:12:46,890 --> 00:12:52,770
‫The rectangle is the first element that appears in the document, it will be placed in the back, followed

166
00:12:52,770 --> 00:12:54,240
‫by the circle and line.

167
00:12:54,570 --> 00:13:02,010
‫SVG will naturally layer shapes and order shapes drawn first will appear in the back, shapes drawn

168
00:13:02,010 --> 00:13:03,870
‫last will appear in the front.

169
00:13:04,230 --> 00:13:08,970
‫If two shapes overlap with one another, the second shape will appear above it.

170
00:13:09,480 --> 00:13:15,990
‫For example, in my developer tools using the elements panel, I can drag these circle element to the

171
00:13:15,990 --> 00:13:16,410
‫top.

172
00:13:18,920 --> 00:13:21,870
‫This is the only way to change the order of appearance.

173
00:13:22,490 --> 00:13:28,790
‫It is one of the flaws of SFG when you're working with Graff's, the order of elements really does matter.

174
00:13:29,300 --> 00:13:32,030
‫We can't change the index of a shape.

175
00:13:32,240 --> 00:13:37,740
‫Therefore, we need to consider what shapes to draw first before drawing the next set of shapes.

176
00:13:38,000 --> 00:13:43,060
‫Luckily, when we start using D3, it'll be able to manage some of that for us.

177
00:13:43,280 --> 00:13:45,490
‫We'll get to that soon, I promise.

178
00:13:45,500 --> 00:13:49,670
‫In the next lecture, we'll start working on more complex shapes.

