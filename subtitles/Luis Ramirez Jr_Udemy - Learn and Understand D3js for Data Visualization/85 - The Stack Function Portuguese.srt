1
00:00:00,240 --> 00:00:06,260
‫Nesta aula, vamos ver outra função D3 para formatar nossos dados no momento, nossos dados não

2
00:00:06,360 --> 00:00:08,340
‫estão prontos para serem desenhados.

3
00:00:08,640 --> 00:00:13,280
‫Isso pode parecer estranho porque à primeira vista parece formatado corretamente.

4
00:00:13,560 --> 00:00:15,890
‫Vamos verificar o arquivo de dados por um momento.

5
00:00:16,440 --> 00:00:19,310
‫Há um total de 53 linhas neste arquivo.

6
00:00:19,590 --> 00:00:21,870
‫A primeira linha contém os nomes das colunas.

7
00:00:22,050 --> 00:00:27,720
‫As outras 52 linhas são estados no U. S. , incluindo Washington, D. C. e Porto Rico.

8
00:00:27,900 --> 00:00:30,330
‫Além disso, existem nove grupos de idade.

9
00:00:30,720 --> 00:00:33,290
‫Nosso objetivo é desenhar um gráfico de barras empilhadas.

10
00:00:33,600 --> 00:00:39,180
‫Devemos ter um total de quatrocentos e sessenta e oito barras desenhadas no gráfico porque 52 multiplicado por nove é

11
00:00:39,180 --> 00:00:40,880
‫quarenta e sessenta e oito.

12
00:00:41,220 --> 00:00:47,190
‫Lembre-se de que precisamos desenhar cada faixa etária para cada estado porque as barras em um gráfico de barras representam

13
00:00:47,190 --> 00:00:48,020
‫um valor.

14
00:00:48,270 --> 00:00:50,430
‫No entanto, há um problema com este arquivo.

15
00:00:50,910 --> 00:00:52,970
‫Existem apenas cinquenta e duas linhas.

16
00:00:53,190 --> 00:00:58,080
‫Isso significa que, quando juntarmos os dados com uma seleção vazia, os dados só serão

17
00:00:58,080 --> 00:00:59,370
‫repetidos 52 vezes.

18
00:00:59,640 --> 00:01:01,800
‫Isso não será suficiente para puxar as barras.

19
00:01:02,130 --> 00:01:07,830
‫Portanto, vamos precisar formatar nossos dados de maneira diferente se quisermos desenhar todos os dados.

20
00:01:08,460 --> 00:01:13,020
‫O D3 vem com uma função para formatar e seus dados para uma situação como essa.

21
00:01:13,230 --> 00:01:18,540
‫No arquivo de script, vamos remover a instrução do console para a variável do conjunto de dados.

22
00:01:20,960 --> 00:01:26,960
‫Vá até a seção de escalas do arquivo e definiremos uma variável chamada gerador de pilha.

23
00:01:27,260 --> 00:01:30,350
‫Seu valor será a função de pilha D3.

24
00:01:32,910 --> 00:01:39,150
‫O formato da função de pilha, seus dados semelhantes às funções de pizza ou bean, ele organizará seus dados com base

25
00:01:39,150 --> 00:01:41,960
‫em uma chave de propriedade específica em seus dados.

26
00:01:42,270 --> 00:01:45,660
‫Podemos definir a chave alterando uma função chamada keys.

27
00:01:48,180 --> 00:01:53,640
‫A função Keys tem um argumento, que é uma função que tem acesso aos dados que são passados para

28
00:01:53,640 --> 00:01:54,190
‫ela.

29
00:01:54,570 --> 00:01:57,810
‫Essas funções Steck retornarão uma função para uma formatação.

30
00:01:57,810 --> 00:02:02,070
‫Seus dados, quando chamamos a função de pilha, os fornecerão com nossos dados.

31
00:02:02,370 --> 00:02:04,380
‫A função que estamos passando será chamada.

32
00:02:04,380 --> 00:02:05,420
‫Quando isso acontecer.

33
00:02:05,700 --> 00:02:08,930
‫Esta função deve retornar uma matriz de nomes de propriedades.

34
00:02:09,270 --> 00:02:12,840
‫D3 formatará os dados com base na lista que passarmos.

35
00:02:13,440 --> 00:02:16,430
‫Queremos formatar nossos dados com base nas faixas etárias.

36
00:02:16,650 --> 00:02:23,640
‫Felizmente, ao usar essas funções CSC, o D3 armazenará os nomes das colunas em uma propriedade chamada colunas.

37
00:02:23,970 --> 00:02:26,550
‫Poderemos acessar os números da faixa etária.

38
00:02:26,550 --> 00:02:33,210
‫Sob essa propriedade, a função retornará as seguintes colunas do conjunto de dados, divisão de pontos um.

39
00:02:35,800 --> 00:02:41,620
‫Essa função de fatia retornará uma cópia do array, é chamada, estamos chamando a função de fatia

40
00:02:41,620 --> 00:02:45,060
‫porque não queremos a primeira propriedade na propriedade de colunas.

41
00:02:45,460 --> 00:02:49,600
‫A primeira propriedade conterá o nome do estado, que não é o que queremos.

42
00:02:49,840 --> 00:02:51,460
‫Queremos apenas as faixas etárias.

43
00:02:51,670 --> 00:02:55,720
‫Portanto, estamos criando uma nova matriz onde os nomes dos estados são cortados.

44
00:02:56,050 --> 00:02:59,620
‫A função slice tem um argumento, que é o ponto de partida.

45
00:03:00,130 --> 00:03:04,180
‫Vamos usar nossa nova função de pilha para formatar nossos dados abaixo.

46
00:03:04,180 --> 00:03:06,870
‫Vamos criar uma variável chamada dados da pilha.

47
00:03:07,180 --> 00:03:11,920
‫Seu valor será a função do gerador estático com a variável do conjunto de dados passada.

48
00:03:14,420 --> 00:03:17,180
‫A seguir, registraremos essas variáveis de dados empilhados.

49
00:03:19,540 --> 00:03:21,820
‫Em seguida, atualize a página no navegador.

50
00:03:24,240 --> 00:03:29,940
‫E nas ferramentas do desenvolvedor, podemos ver que os dados foram registrados, os dados são muito diferentes desta

51
00:03:29,940 --> 00:03:30,360
‫vez.

52
00:03:30,570 --> 00:03:36,950
‫Em vez de um array de 52 objetos, encontraremos um array de nove dias em cada um dos arrays.

53
00:03:36,990 --> 00:03:39,030
‫Existem mais cinquenta e duas matrizes.

54
00:03:39,330 --> 00:03:43,830
‫Os dados foram formatados de forma que possam desenhar um gráfico de barras empilhadas.

55
00:03:44,070 --> 00:03:47,760
‫No geral, haverá um total de quatrocentos e sessenta e oito arrays.

56
00:03:50,170 --> 00:03:55,510
‫Vamos dar uma olhada dentro de qualquer uma das áreas, cada array terá uma propriedade chamada key.

57
00:03:58,910 --> 00:04:05,060
‫A propriedade chave deve ser definida para um dos nove grupos de idade, as matrizes são agrupadas por grupo de idade.

58
00:04:05,240 --> 00:04:11,220
‫Como você pode ver, cada array no primeiro array pertence à faixa etária abaixo de 10 anos.

59
00:04:11,750 --> 00:04:15,140
‫A seguir, vamos examinar qualquer um dos 52 arrays.

60
00:04:15,350 --> 00:04:17,750
‫Vou abrir o primeiro deste grupo.

61
00:04:18,080 --> 00:04:21,200
‫Os dados originais podem ser encontrados na propriedade de dados.

62
00:04:23,730 --> 00:04:30,120
‫Uma das coisas mais interessantes que D3 fez foi definir os pontos inicial e final para cada array

63
00:04:30,120 --> 00:04:30,910
‫neste objeto.

64
00:04:30,990 --> 00:04:36,180
‫Existem chaves chamadas zero e uma, o Zerok pode ser considerado o ponto de partida.

65
00:04:36,450 --> 00:04:38,960
‫A única chave pode ser considerada o ponto de extremidade.

66
00:04:39,270 --> 00:04:42,720
‫A única chave para este objeto é definida em cerca de cinco milhões.

67
00:04:45,290 --> 00:04:47,330
‫Vejamos o segundo grupo de idade.

68
00:04:49,950 --> 00:04:56,580
‫A segunda faixa etária é para pessoas com idades entre 11 e 19 anos no primeiro ano desse grupo, o Zerok,

69
00:04:56,610 --> 00:05:00,540
‫ele é definido com o mesmo valor que vimos na primeira idade.

70
00:05:00,540 --> 00:05:05,450
‫O grupo três organizou os dados de forma que eles fossem empilhados uns sobre os outros.

71
00:05:05,790 --> 00:05:10,020
‫O ponto de partida para esta matriz é o ponto final para a última faixa etária.

72
00:05:10,330 --> 00:05:13,110
‫O mesmo acontecerá com o restante das matrizes.

73
00:05:13,290 --> 00:05:18,170
‫Como você pode imaginar, isso tornará mais fácil fazer com que os dados pareçam empilhados em um gráfico de barras.

74
00:05:18,750 --> 00:05:21,180
‫Há um problema que tenho com essa formatação.

75
00:05:21,420 --> 00:05:26,970
‫Mesmo que a faixa etária seja armazenada sob a propriedade key nas matrizes pai, acho que seria bom

76
00:05:26,970 --> 00:05:30,520
‫se a faixa etária também fosse armazenada nas matrizes filhos.

77
00:05:30,840 --> 00:05:35,040
‫Digamos que para a faixa etária e as matrizes filho voltem para o editor.

78
00:05:35,550 --> 00:05:39,690
‫Vamos encadear uma função chamada map à função do gerador de pilha.

79
00:05:43,550 --> 00:05:48,600
‫A função de mapa nos permite fazer um loop em um array, ele retornará uma cópia do array.

80
00:05:48,920 --> 00:05:54,240
‫Podemos modificar a matriz passando uma função de retorno de chamada que será passada em cada item.

81
00:05:54,260 --> 00:05:56,120
‫A função de mapa é iterada.

82
00:05:58,730 --> 00:06:02,060
‫Vamos nos referir a cada item da matriz como faixa etária.

83
00:06:04,520 --> 00:06:10,370
‫A seguir, precisaremos fazer um loop através do array filho, chamaremos a faixa etária de cada função

84
00:06:10,370 --> 00:06:11,780
‫para iniciar esse processo.

85
00:06:14,240 --> 00:06:19,070
‫O posfácio vai passar e uma função de seta onde cada array será chamado de estado.

86
00:06:21,580 --> 00:06:27,250
‫E esta função irá definir essas propriedades de estado de dormência para a propriedade de grupo de idade Dorcy.

87
00:06:29,810 --> 00:06:34,820
‫D três definiu a faixa etária Dorcy Property Ital Store a faixa etária.

88
00:06:35,090 --> 00:06:40,670
‫O que estamos fazendo é adicionar a faixa etária a cada uma das 52 matrizes filhos, que são os estados.

89
00:06:40,910 --> 00:06:43,370
‫Por fim, retornaremos a faixa etária.

90
00:06:45,840 --> 00:06:51,220
‫Isso deve gerar uma nova matriz em que cada estado também terá a faixa etária anexada a ele.

91
00:06:51,480 --> 00:06:52,830
‫Vamos atualizar a página.

92
00:06:55,070 --> 00:07:01,730
‫No console, você verá que uma propriedade chamada QI foi adicionada a todas as matrizes de filhos, agora temos acesso à

93
00:07:01,730 --> 00:07:04,700
‫faixa etária e a qualquer uma das matrizes.

94
00:07:05,060 --> 00:07:10,730
‫É hora de passar para a próxima etapa para criar habilidades com base em nossos dados na próxima aula.

