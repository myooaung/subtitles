1
00:00:00,570 --> 00:00:04,170
‫Nesta seção, vamos finalmente começar a desenhar alguns gráficos.

2
00:00:04,380 --> 00:00:06,570
‫A base foi lançada para D3.

3
00:00:06,870 --> 00:00:11,120
‫Podemos usar alguns conhecimentos que aprendemos até agora para começar a desenhar gráficos avançados.

4
00:00:11,400 --> 00:00:14,040
‫O primeiro gráfico a ser desenhado é um gráfico de dispersão.

5
00:00:14,250 --> 00:00:17,700
‫Vamos revisar o que é um gráfico de dispersão, um gráfico de dispersão.

6
00:00:17,700 --> 00:00:21,470
‫É um tipo de gráfico para mostrar a relação entre dois conjuntos de dados.

7
00:00:21,720 --> 00:00:24,750
‫Eles são uma ótima maneira de ver uma correlação, se houver alguma.

8
00:00:25,050 --> 00:00:29,220
‫Outro benefício de um gráfico de dispersão é a capacidade de visualizar grandes quantidades de dados.

9
00:00:29,700 --> 00:00:33,930
‫Aqui está um exemplo de um gráfico de dispersão, as plantas de dispersão têm dois eixos.

10
00:00:33,960 --> 00:00:36,780
‫Um ponto é desenhado para representar dois valores.

11
00:00:36,990 --> 00:00:41,400
‫Em alguns casos, o tamanho do ponto pode ser outra maneira de representar os dados.

12
00:00:41,400 --> 00:00:42,780
‫Mas isso não é comentário.

13
00:00:42,960 --> 00:00:48,440
‫Neste exemplo, estamos observando a relação entre a altura de uma árvore e seu diâmetro.

14
00:00:48,960 --> 00:00:51,450
‫O objetivo de um gráfico é responder a uma pergunta.

15
00:00:51,660 --> 00:00:57,710
‫Nesse caso, podemos nos perguntar: existe relação entre a altura de uma árvore e seu diâmetro?

16
00:00:57,930 --> 00:01:02,940
‫De acordo com este gráfico, quanto mais alta for a árvore, maior será o seu diâmetro.

17
00:01:03,180 --> 00:01:09,000
‫Este gráfico deixa claro que outros exemplos podem ser a relação entre altura e peso.

18
00:01:09,270 --> 00:01:11,370
‫Pessoas mais altas geralmente pesam mais.

19
00:01:11,610 --> 00:01:14,910
‫Outro exemplo pode ser o custo dos cuidados de saúde por idade.

20
00:01:15,090 --> 00:01:18,740
‫Quanto mais velho você for, maior a probabilidade de gastar com saúde.

21
00:01:18,990 --> 00:01:22,800
‫Os gráficos de dispersão são incríveis para exibir relações em nossos dados.

22
00:01:24,200 --> 00:01:29,020
‫Vamos aprender sobre o que vamos desenhar agora. Estou vendo o tempo para a cidade de Nova York.

23
00:01:29,240 --> 00:01:32,900
‫Nova York tem clima sazonal na maioria dos sites de rastreamento de clima.

24
00:01:32,910 --> 00:01:35,110
‫Você será apresentado a duas temperaturas.

25
00:01:35,360 --> 00:01:39,140
‫Existe a temperatura real e a temperatura aparente.

26
00:01:39,290 --> 00:01:41,910
‫Ele pode ter nomes diferentes em aplicativos diferentes.

27
00:01:42,290 --> 00:01:45,140
‫A temperatura real é a temperatura mensurável.

28
00:01:45,350 --> 00:01:48,890
‫A temperatura aparente é a temperatura percebida pelos humanos.

29
00:01:49,070 --> 00:01:53,630
‫Em alguns locais, o clima pode ser mais quente ou mais frio do que realmente é.

30
00:01:53,840 --> 00:01:58,640
‫Por exemplo, se estiver ventando muito, você pode se sentir mais frio do que a temperatura atual.

31
00:01:58,850 --> 00:02:02,690
‫Por outro lado, se estiver úmido, você pode sentir calor e pegajoso.

32
00:02:02,990 --> 00:02:09,380
‫A temperatura aparente serve para dar uma ideia melhor de como as pessoas se sentirão ao sair do gráfico de dispersão.

33
00:02:09,380 --> 00:02:13,690
‫Vamos desenhar vai mostrar a relação entre umidade e temperatura.

34
00:02:14,000 --> 00:02:15,500
‫Aqui está minha hipótese.

35
00:02:15,650 --> 00:02:19,280
‫Quanto mais úmido estiver, mais alta pode ser a temperatura aparente.

36
00:02:19,500 --> 00:02:20,380
‫Isso é verdade?

37
00:02:20,450 --> 00:02:21,320
‫Vamos descobrir.

38
00:02:21,630 --> 00:02:23,900
‫Esse é o propósito da visualização de dados.

39
00:02:24,080 --> 00:02:26,480
‫Pode ajudar a responder a perguntas como essas.

40
00:02:26,900 --> 00:02:32,600
‫Na seção de recursos desta palestra, forneço um arquivo zip com alguns arquivos iniciais, faço o download do arquivo,

41
00:02:32,600 --> 00:02:37,820
‫descompacta os arquivos em qualquer lugar em seu sistema e aponto seu editor para o projeto.

42
00:02:38,030 --> 00:02:41,570
‫Eu recomendo trabalhar em um diretório vazio para reduzir a desordem.

43
00:02:41,810 --> 00:02:43,490
‫Pause o vídeo, se necessário.

44
00:02:45,450 --> 00:02:48,250
‫Há um total de quatro arquivos no arquivo zip.

45
00:02:48,420 --> 00:02:50,030
‫Vamos revisar cada arquivo.

46
00:02:50,070 --> 00:02:52,350
‫Começaremos com o arquivo HTML.

47
00:02:52,650 --> 00:02:57,750
‫O arquivo HTML contém um modelo básico na seção principal do modelo.

48
00:02:57,870 --> 00:02:59,720
‫Estamos carregando um arquivo sério.

49
00:02:59,970 --> 00:03:03,030
‫Se abrirmos este arquivo, não encontraremos muita coisa acontecendo.

50
00:03:05,630 --> 00:03:09,000
‫O arquivo de acesso possui um seletor denominado Gráfico.

51
00:03:09,380 --> 00:03:12,970
‫A razão pela qual adicionei isso é para centralizar o gráfico quando o desenhamos.

52
00:03:13,220 --> 00:03:15,580
‫Não é necessário ter esse estilo.

53
00:03:15,800 --> 00:03:22,990
‫Porém, acho que vai deixar as coisas visualmente mais claras quando começarmos a desenhar gráficos de volta no arquivo

54
00:03:23,030 --> 00:03:26,600
‫HTML, encontraremos o desenvolvimento com a ideia de cobrar.

55
00:03:26,900 --> 00:03:28,410
‫No momento, está vazio.

56
00:03:28,700 --> 00:03:32,330
‫Geralmente, desenharemos nosso gráfico em um elemento específico.

57
00:03:32,570 --> 00:03:39,040
‫Na maioria dos exemplos, os gráficos são desenhados em um local específico, e não como um filho da tag body.

58
00:03:39,290 --> 00:03:40,610
‫É uma prática comum.

59
00:03:40,850 --> 00:03:43,280
‫Seguiremos essa prática ao longo do curso.

60
00:03:43,790 --> 00:03:50,880
‫Por último, temos duas tags de script, uma para D3 e outra para um arquivo chamado Apgar's.

61
00:03:51,110 --> 00:03:54,170
‫Este é o terceiro arquivo incluído com o arquivo zip.

62
00:03:56,630 --> 00:03:57,690
‫Também está vazio.

63
00:03:57,890 --> 00:04:04,250
‫Estaremos escrevendo algum código em um momento, o último arquivo no arquivo zip é o arquivo JSON de dados.

64
00:04:06,690 --> 00:04:11,730
‫Seu editor pode não destacar a sintaxe do arquivo porque é um arquivo incrivelmente grande.

65
00:04:12,060 --> 00:04:17,670
‫Tomei a liberdade de obter os dados meteorológicos de Nova York nos últimos 365 dias.

66
00:04:17,970 --> 00:04:21,510
‫Este arquivo é uma matriz de objetos para cada objeto representa.

67
00:04:21,510 --> 00:04:25,590
‫Um dia daremos uma olhada melhor neste arquivo após carregá-lo.

68
00:04:26,010 --> 00:04:29,070
‫Antes de fazermos isso, quero enfatizar um ponto importante.

69
00:04:29,430 --> 00:04:34,080
‫D3 é uma biblioteca que pode ser usada para desenhar qualquer tipo de visualização.

70
00:04:34,380 --> 00:04:38,530
‫Isso é o que torna esses três a escolha mais popular para visualização de dados.

71
00:04:38,820 --> 00:04:42,270
‫Não é preconceito para nenhum gráfico ou gráfico em particular.

72
00:04:42,450 --> 00:04:45,180
‫É flexível para qualquer tipo de tarefa visual.

73
00:04:45,630 --> 00:04:47,170
‫Tudo bem, vamos começar.

74
00:04:47,400 --> 00:04:50,930
‫A primeira tarefa para desenhar qualquer gráfico é pegar os dados.

75
00:04:51,150 --> 00:04:53,670
‫Os dados podem vir de uma API ou de um arquivo.

76
00:04:53,820 --> 00:04:57,430
‫Usaremos os dados do arquivo JSON de dados.

77
00:04:57,690 --> 00:05:01,540
‫Vamos fazer uma solicitação para este arquivo em nosso arquivo JS do aplicativo.

78
00:05:01,770 --> 00:05:04,860
‫Vamos definir uma função assíncrona chamada Draw.

79
00:05:07,460 --> 00:05:12,710
‫A função é um Synchronoss, pois vamos realizar uma requisição SCDP para esse arquivo abaixo

80
00:05:13,010 --> 00:05:15,230
‫da função draw, vamos chamá-la.

81
00:05:17,840 --> 00:05:21,210
‫A função de desenho será responsável por desenhar nossos gráficos.

82
00:05:21,530 --> 00:05:27,140
‫Estaremos escrevendo a maior parte do nosso código dentro desta função, dentro desta função, chamaremos

83
00:05:27,140 --> 00:05:30,470
‫a função JSON D3 com a palavra-chave await.

84
00:05:33,020 --> 00:05:38,870
‫A função jasen tem um argumento, o nome do arquivo que gostaríamos de obter, passaremos o nome do arquivo

85
00:05:39,110 --> 00:05:40,370
‫JSON de dados.

86
00:05:42,880 --> 00:05:46,690
‫Vamos armazenar esses dados em uma variável chamada conjunto de dados.

87
00:05:49,120 --> 00:05:51,140
‫Vamos precisar disso nas próximas palestras.

88
00:05:51,310 --> 00:05:52,860
‫É uma boa ideia armazená-lo.

89
00:05:53,140 --> 00:05:57,880
‫Vamos ver os dados em nosso navegador, abra o arquivo com a extensão do servidor ao vivo.

90
00:06:00,350 --> 00:06:06,170
‫A página ficará em branco, o que era de se esperar, pois ainda não desenhamos nada e as ferramentas do desenvolvedor

91
00:06:06,170 --> 00:06:07,640
‫abrem o painel de rede.

92
00:06:10,110 --> 00:06:15,990
‫O painel de rede exibirá informações sobre as solicitações feitas por nossa página, pode estar em branco porque

93
00:06:15,990 --> 00:06:22,260
‫o abrimos após abrir a página para poder visualizar as solicitações de que podemos precisar para atualizar a página após

94
00:06:22,740 --> 00:06:24,330
‫a atualização da página.

95
00:06:24,360 --> 00:06:27,470
‫Veremos a lista de solicitações feitas por nosso navegador.

96
00:06:27,750 --> 00:06:31,830
‫A única solicitação em que estamos interessados é o arquivo JSON de dados.

97
00:06:34,270 --> 00:06:39,850
‫Se visualizarmos este arquivo, poderemos visualizar os dados na guia de visualização, o navegador não tem nenhum

98
00:06:39,850 --> 00:06:43,510
‫problema em exibir os dados, ao contrário de nossos editores.

99
00:06:43,750 --> 00:06:46,780
‫Isso deve nos dar uma visão clara do que está dentro deste arquivo.

100
00:06:47,050 --> 00:06:51,640
‫O arquivo conterá uma matriz de objetos, pois há muitos objetos.

101
00:06:51,670 --> 00:06:57,210
‫O navegador irá dividir o array em vários arrays, onde cada array contém cem objetos.

102
00:06:57,520 --> 00:07:00,550
‫Vamos olhar dentro do primeiro objeto do primeiro array.

103
00:07:03,290 --> 00:07:10,010
‫Cada objeto tem as mesmas propriedades, a propriedade que mais nos interessa é a propriedade atual, ela contém os

104
00:07:10,010 --> 00:07:13,570
‫dados meteorológicos para o dia que o objeto representa.

105
00:07:13,880 --> 00:07:16,730
‫Existem muitas propriedades disponíveis sobre o clima.

106
00:07:16,940 --> 00:07:24,590
‫Podemos pegar coisas como ponto de orvalho, ozônio, índice UV, etc. As duas propriedades com que mais nos importamos são

107
00:07:24,590 --> 00:07:27,940
‫as propriedades de umidade e temperatura aparente.

108
00:07:28,190 --> 00:07:30,100
‫Há também a propriedade da temperatura.

109
00:07:30,290 --> 00:07:32,330
‫No entanto, não vamos precisar disso.

110
00:07:32,580 --> 00:07:36,440
‫O objetivo é ver se a umidade pode afetar a temperatura aparente.

111
00:07:36,680 --> 00:07:40,730
‫Em alguns casos, a temperatura aparente e a temperatura podem ser iguais.

112
00:07:40,910 --> 00:07:42,520
‫Isso acontece de vez em quando.

113
00:07:42,950 --> 00:07:45,380
‫Nossos dados estão prontos na próxima aula.

114
00:07:45,410 --> 00:07:48,770
‫Vamos continuar trabalhando neste projeto de gráfico de dispersão.

