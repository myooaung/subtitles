WEBVTT
﻿1
00:00:00.300 --> 00:00:05.940
‫In this lecture, we are going to use the log scale, we will look at a real example to allow us to

2
00:00:05.940 --> 00:00:08.670
‫understand why we would want to use a log scale.

3
00:00:09.000 --> 00:00:16.080
‫In the resource section of this lecture, I provide a zip file with starter files, download it, unzip

4
00:00:16.080 --> 00:00:19.190
‫the files and appoint your editor to these files.

5
00:00:19.350 --> 00:00:21.140
‫Pause the video if you need to.

6
00:00:21.690 --> 00:00:23.900
‫Let's review the contents of each file.

7
00:00:24.120 --> 00:00:26.490
‫We'll start with the HTML file.

8
00:00:26.640 --> 00:00:28.980
‫It contains a basic HTML setup.

9
00:00:29.220 --> 00:00:33.050
‫We have a chart with the ID of chart afterward.

10
00:00:33.120 --> 00:00:35.580
‫We we're loading D3 and a local scripts.

11
00:00:36.060 --> 00:00:38.130
‫Let's check out the access file.

12
00:00:40.280 --> 00:00:45.960
‫It contains some basic styles to center the chart in the document, not much else is going on.

13
00:00:46.400 --> 00:00:49.400
‫Let's move onto the data JSON file.

14
00:00:51.630 --> 00:00:57.420
‫This file contains the data will be using to draw the chart, it's an array of things in the universe.

15
00:00:57.420 --> 00:01:00.140
‫At the top we have the Milky Way galaxy.

16
00:01:00.420 --> 00:01:02.580
‫It's the largest thing in our universe.

17
00:01:02.790 --> 00:01:06.270
‫If we scroll to the bottom, the smallest thing would be a proton.

18
00:01:06.600 --> 00:01:09.390
‫This data comes from the University of Colorado.

19
00:01:09.910 --> 00:01:13.950
‫Each object in this array contains the name and size of an object.

20
00:01:14.190 --> 00:01:16.310
‫The size is measured in kilometres.

21
00:01:16.500 --> 00:01:20.190
‫One thing you'll notice about the size is the format of the value.

22
00:01:20.460 --> 00:01:22.810
‫The letter E is being used in the number.

23
00:01:23.040 --> 00:01:25.350
‫This is a valid JavaScript value.

24
00:01:28.020 --> 00:01:31.830
‫The E is a shorthand way of writing exponential numbers.

25
00:01:32.010 --> 00:01:35.730
‫For example, let's say we have the number three E five.

26
00:01:36.030 --> 00:01:41.250
‫This value is the equivalent of saying three times ten to the power of five.

27
00:01:41.550 --> 00:01:45.480
‫If you were to calculate this, it would come out to three hundred thousand.

28
00:01:48.030 --> 00:01:53.760
‫It's just a different way of writing very large numbers, these three will be able to understand this

29
00:01:53.760 --> 00:01:56.330
‫data when we provide our skills, the data.

30
00:01:56.610 --> 00:01:58.710
‫Let's move on to the JavaScript file.

31
00:02:01.200 --> 00:02:07.770
‫The script file contains some code, we have a function called draw, it's an asynchronous function

32
00:02:07.770 --> 00:02:10.840
‫because we are requesting the data inside the function.

33
00:02:11.130 --> 00:02:12.930
‫It's the very first thing we're doing.

34
00:02:13.170 --> 00:02:19.110
‫After grabbing the data, we are defining some accessor functions for retrieving specific values in

35
00:02:19.110 --> 00:02:20.670
‫each object of the array.

36
00:02:21.300 --> 00:02:24.080
‫Next, we are setting the dimensions of the chart.

37
00:02:24.420 --> 00:02:28.930
‫The dimensions object holds the width, height and margins of the chart.

38
00:02:29.280 --> 00:02:34.250
‫The last thing happening in this script is the image is being drawn with the dimensions.

39
00:02:34.740 --> 00:02:36.810
‫Here's the objective for this lecture.

40
00:02:37.110 --> 00:02:41.840
‫We are going to draw a chart that displays the size of each object in the array.

41
00:02:42.270 --> 00:02:46.080
‫The order of the objects should go from the smallest to largest.

42
00:02:46.360 --> 00:02:48.770
‫We will be reading the chart from top to bottom.

43
00:02:49.110 --> 00:02:51.460
‫You will see what I mean when we draw the chart.

44
00:02:51.630 --> 00:02:52.770
‫Let's get started.

45
00:02:53.280 --> 00:02:55.500
‫The first few steps are taken care of.

46
00:02:55.650 --> 00:02:57.570
‫We can move on to the next steps.

47
00:02:57.810 --> 00:03:00.180
‫Normally we would create a scale.

48
00:03:00.180 --> 00:03:04.680
‫After drawing the image, however, we are going to draw the shapes first.

49
00:03:05.010 --> 00:03:07.980
‫We will introduce the scale once the shapes are ready.

50
00:03:08.370 --> 00:03:13.320
‫We are drawing the shapes first because I want to focus on the scales when we get to them.

51
00:03:13.530 --> 00:03:15.540
‫I want to get the shapes out of the way.

52
00:03:16.110 --> 00:03:18.990
‫We are going to create a group for our circles.

53
00:03:19.170 --> 00:03:24.300
‫It's not necessary, but recommended to keep things organized below the image.

54
00:03:24.300 --> 00:03:29.070
‫We are going to create a variable for storing the group called Circles Group.

55
00:03:31.680 --> 00:03:35.950
‫The value for this variable will be the SPG append method.

56
00:03:36.300 --> 00:03:38.700
‫We are going to open a group element.

57
00:03:41.320 --> 00:03:44.840
‫We are going to be drawing these circles and labels in this group.

58
00:03:44.860 --> 00:03:48.180
‫We'll start with the circles below this variable.

59
00:03:48.220 --> 00:03:53.860
‫We will use the circles group selection to select all the circles inside this group.

60
00:03:56.620 --> 00:04:02.680
‫This election will be empty, which is expected since we don't have any circles in the document, we

61
00:04:02.680 --> 00:04:05.310
‫can begin to join the data with the election.

62
00:04:05.620 --> 00:04:09.250
‫We will change the data method with the data passed in.

63
00:04:11.770 --> 00:04:15.910
‫Next, we will change the join method to add some circles.

64
00:04:18.410 --> 00:04:23.540
‫They join Method will begin looping through the entire selection to add circles to the group.

65
00:04:23.930 --> 00:04:29.640
‫This method will return a new selection with the original selection merged with the new circles.

66
00:04:29.990 --> 00:04:33.160
‫We can begin to apply attributes to the selection.

67
00:04:33.530 --> 00:04:40.580
‫We are going to change the attribute method for DCX and see why attributes their values will be the

68
00:04:40.580 --> 00:04:42.770
‫dimensions margin property.

69
00:04:47.760 --> 00:04:50.130
‫The positions of the circles will be the same.

70
00:04:50.400 --> 00:04:51.580
‫That's perfectly fine.

71
00:04:51.900 --> 00:04:54.360
‫The goal is to start drawing the circles.

72
00:04:54.630 --> 00:04:57.120
‫We will apply skills to the coordinates.

73
00:04:57.120 --> 00:05:02.700
‫After we've drawn the circles, we will change one last attribute for the radius.

74
00:05:02.700 --> 00:05:04.380
‫Its value will be six.

75
00:05:06.870 --> 00:05:08.900
‫Let's start working on the labels.

76
00:05:09.090 --> 00:05:14.880
‫It'll be a similar process since the labels will be next to the circle, the label will be the name

77
00:05:14.880 --> 00:05:17.540
‫of the object that's being measured in our data.

78
00:05:17.880 --> 00:05:22.950
‫We will create another selection with these circles group for an element called text.

79
00:05:25.460 --> 00:05:28.160
‫We will chain the data method with the data.

80
00:05:34.100 --> 00:05:37.970
‫Then we will change the join method to draw text elements.

81
00:05:40.410 --> 00:05:47.010
‫Lastly, we will change the attribute methods to set the X and Y coordinates, their values will be

82
00:05:47.010 --> 00:05:49.140
‫the dimensions that margin property.

83
00:05:53.290 --> 00:05:59.170
‫For the X attribute, we are going to nudge the text 15 pixels to the right by adding 15.

84
00:06:01.570 --> 00:06:05.060
‫We are moving it over so that it doesn't hover over the circle.

85
00:06:05.170 --> 00:06:08.030
‫We want the label to be to the right of the circle.

86
00:06:08.320 --> 00:06:12.580
‫The last thing will change is the text method to Apte label text.

87
00:06:12.820 --> 00:06:16.900
‫We will pass in the name accessor function we created earlier.

88
00:06:18.690 --> 00:06:20.180
‫All right, we're finished.

89
00:06:20.220 --> 00:06:21.390
‫Let's do the page.

90
00:06:23.870 --> 00:06:30.380
‫In the browser, we will find these circles and labels stacked on top of one another that's to be expected

91
00:06:30.380 --> 00:06:32.730
‫since they share the same coordinates.

92
00:06:33.020 --> 00:06:36.530
‫We are going to spread everything out across the Y axis.

93
00:06:36.860 --> 00:06:39.650
‫We want the largest object to be placed on top.

94
00:06:40.040 --> 00:06:42.280
‫The smallest will be placed at the bottom.

95
00:06:42.920 --> 00:06:46.160
‫The X coordinate for our shapes will remain the same.

96
00:06:46.460 --> 00:06:49.470
‫This way we can read the chart from top to bottom.

97
00:06:49.820 --> 00:06:52.730
‫The only thing we need to change is the Y axis.

98
00:06:53.030 --> 00:06:58.470
‫Therefore, we will create one scale for calculating the Y coordinate of our shapes.

99
00:06:58.700 --> 00:07:00.200
‫Let's go back to the editor.

100
00:07:02.740 --> 00:07:08.140
‫We are going to write the code above where we drew the group for these circles and labels, we will

101
00:07:08.140 --> 00:07:09.210
‫have one scale.

102
00:07:09.460 --> 00:07:12.520
‫The name of the scale will be called universe scale.

103
00:07:15.100 --> 00:07:17.920
‫The scale will create will be a linear scale.

104
00:07:20.570 --> 00:07:25.940
‫The reason we're going to be using a linear scale is so that we can see the problems that arise with

105
00:07:25.940 --> 00:07:26.640
‫this scale.

106
00:07:26.930 --> 00:07:29.080
‫It's not the best scale for our data.

107
00:07:29.330 --> 00:07:31.970
‫We will see what happens if we use this scale.

108
00:07:32.330 --> 00:07:36.590
‫Once we understand the problem, we will swamp these scale with a long scale.

109
00:07:36.910 --> 00:07:39.470
‫Next, let's change the domain function.

110
00:07:42.070 --> 00:07:47.760
‫The scale is going to be transforming the data into coordinates that can be used to draw up a chart,

111
00:07:48.160 --> 00:07:52.020
‫we will need to provide the lowest and highest values in our data set.

112
00:07:52.390 --> 00:07:56.460
‫We will pass in the three extent function with the data.

113
00:07:59.040 --> 00:08:04.710
‫The extent function doesn't know which property it should work with, we will provide it with the size

114
00:08:04.710 --> 00:08:08.010
‫accessor function to grab the object sized property.

115
00:08:10.550 --> 00:08:13.310
‫The next thing we will change is the range function.

116
00:08:15.890 --> 00:08:22.070
‫The data will be transformed into Kurnitz for the Y-axis, we will be reading the chart from top to

117
00:08:22.070 --> 00:08:22.530
‫bottom.

118
00:08:22.880 --> 00:08:30.200
‫Therefore, we're going to pass in an array with the following values, dimensions, height minus dimensions,

119
00:08:30.470 --> 00:08:32.900
‫margin, dimensions, margin.

120
00:08:35.510 --> 00:08:41.090
‫The first item in the array will give us the height of the image minus the margin, we are scaling the

121
00:08:41.090 --> 00:08:48.950
‫lowest value to the highest value in the range because of how the Y axis works in SVG images, the higher

122
00:08:48.950 --> 00:08:52.520
‫the value, the lower a shape will be positioned in the image.

123
00:08:52.880 --> 00:08:55.670
‫We want the smallest data to appear on the bottom.

124
00:08:55.940 --> 00:08:59.180
‫Hence why we are stealing our data like this.

125
00:08:59.720 --> 00:09:00.940
‫Our scale is ready.

126
00:09:01.070 --> 00:09:02.870
‫Let's apply it to the images.

127
00:09:03.050 --> 00:09:07.370
‫We'll start with the circles for the Y attributes value.

128
00:09:07.760 --> 00:09:12.890
‫We will replace it with an arrow function where we will accept the data joined with the circle.

129
00:09:15.390 --> 00:09:21.480
‫We are going to return the universal scale with the size accessor and the argument passed in.

130
00:09:24.080 --> 00:09:30.530
‫We will move on to the text elements, the why attribute will be the same value, we will copy and paste

131
00:09:30.530 --> 00:09:34.070
‫the value from these circles, see why attribute to the text.

132
00:09:34.070 --> 00:09:35.090
‫Why attribute?

133
00:09:37.600 --> 00:09:39.010
‫Let's refresh the page.

134
00:09:41.460 --> 00:09:44.860
‫The circles and labels will have dynamic Y coordinates.

135
00:09:45.060 --> 00:09:50.970
‫However, it's not coming out like we want it to, the Milky Way Galaxy is appearing at the top of the

136
00:09:50.970 --> 00:09:54.930
‫chart, which makes sense since it's the largest object in the array.

137
00:09:55.440 --> 00:09:58.350
‫We want the largest object to appear at the top.

138
00:09:58.650 --> 00:10:03.010
‫The problem is with the other objects, everything is stacking at the very bottom.

139
00:10:03.480 --> 00:10:07.660
‫The goal was to display the objects across the Y axis evenly.

140
00:10:08.010 --> 00:10:11.700
‫We want the objects to be organized from largest to smallest.

141
00:10:11.910 --> 00:10:13.170
‫That's not what's happening.

142
00:10:13.290 --> 00:10:14.560
‫So what's the problem?

143
00:10:15.060 --> 00:10:16.910
‫The scale is working as intended.

144
00:10:17.070 --> 00:10:22.290
‫It's scaling our data, but it's having difficulty scaling the data because of the distribution.

145
00:10:22.590 --> 00:10:25.130
‫Let's use the data in our editor for a moment.

146
00:10:27.690 --> 00:10:31.530
‫The distance between each object is unevenly distributed.

147
00:10:31.740 --> 00:10:37.650
‫It's very difficult to draw this data since we will always experience skewing if you were to do some

148
00:10:37.650 --> 00:10:38.380
‫research.

149
00:10:38.430 --> 00:10:41.040
‫The problem we're facing is called skewing.

150
00:10:41.340 --> 00:10:45.700
‫It's when the chart is skewed towards one direction, leaving a lot of empty space.

151
00:10:45.930 --> 00:10:48.050
‫It makes it difficult to read the chart.

152
00:10:48.660 --> 00:10:51.590
‫We can solve this issue by swapping out the scale.

153
00:10:51.840 --> 00:10:55.350
‫Let's try and changing the linear scale to the log scale.

154
00:10:55.590 --> 00:10:59.670
‫Then we will discuss what's happening back in the script file.

155
00:10:59.700 --> 00:11:02.070
‫Scroll to where we created this scale.

156
00:11:02.340 --> 00:11:06.810
‫We will change the scale linear function to these scale log function.

157
00:11:09.310 --> 00:11:11.740
‫We don't need to make any further changes.

158
00:11:11.770 --> 00:11:13.210
‫Let's refresh the page.

159
00:11:15.610 --> 00:11:19.580
‫Much better, the shapes are being spaced out on the y axis.

160
00:11:19.750 --> 00:11:21.690
‫We can clearly see each label.

161
00:11:21.880 --> 00:11:23.520
‫Let's talk about what's happening.

162
00:11:24.160 --> 00:11:28.330
‫We need a scale that can scale continuous data into continuous data.

163
00:11:28.540 --> 00:11:34.380
‫As we learned at the beginning of this lecture, data is considered continuous if it can be measured.

164
00:11:34.720 --> 00:11:38.260
‫We are dealing with sizes of various objects and the universe.

165
00:11:38.530 --> 00:11:43.180
‫The data contains a list of measurements that makes our data continuous.

166
00:11:43.660 --> 00:11:46.540
‫Firstly, we try using the linear scale.

167
00:11:46.810 --> 00:11:52.510
‫The linear scale is perfect for data that is close to one another, with very few data points that are

168
00:11:52.510 --> 00:11:54.510
‫far off from the median or mean.

169
00:11:54.850 --> 00:11:59.800
‫However, the data we're dealing with in this chart is far apart from one another.

170
00:12:00.220 --> 00:12:02.770
‫There's too much distance between them in the array.

171
00:12:03.100 --> 00:12:07.050
‫This made it difficult for a linear scale to transform the data.

172
00:12:07.600 --> 00:12:10.000
‫That's where the long scale comes into play.

173
00:12:10.390 --> 00:12:16.230
‫The long scale can scale continuous data into continuous data, just like the linear scale.

174
00:12:16.570 --> 00:12:22.480
‫The difference is that the long scale can deal with a data set with a wide, uneven distribution.

175
00:12:22.810 --> 00:12:27.130
‫It'll make sure each object has enough room to be drawn in the chart.

176
00:12:27.760 --> 00:12:33.550
‫If you're ever dealing with data that is exponentially different from one another, the long scale may

177
00:12:33.550 --> 00:12:35.310
‫be the solution you're looking for.

178
00:12:35.590 --> 00:12:39.260
‫If you have trouble deciding a scale, follow this recommendation.

179
00:12:39.550 --> 00:12:42.310
‫Start by drawing the chart with a linear scale.

180
00:12:42.610 --> 00:12:49.030
‫If you ever experience skewing, as we did with this chart, try swapping the scale with a long scale.

181
00:12:49.300 --> 00:12:52.210
‫It may help evenly distribute the data for you.

182
00:12:52.720 --> 00:12:56.290
‫Before we end this lecture, let's make some final adjustments.

183
00:12:56.500 --> 00:12:58.750
‫There are three things that want to change.

184
00:12:59.030 --> 00:13:02.860
‫Firstly, I want to make the font size bigger for the labels.

185
00:13:03.100 --> 00:13:06.410
‫Secondly, the labels are not matching with the circles.

186
00:13:06.700 --> 00:13:13.240
‫Lastly, we will add an axis so that the reader can understand the distances switched back to the editor.

187
00:13:15.780 --> 00:13:21.930
‫We will start with the first two issues, the text can be modified by applying styles to the group.

188
00:13:22.290 --> 00:13:29.040
‫Since the text elements are inserted into the circles group selection, we can apply styles to the group

189
00:13:29.040 --> 00:13:31.620
‫to be reflected in all children elements.

190
00:13:31.980 --> 00:13:35.250
‫We will change the style method after appending the group.

191
00:13:37.850 --> 00:13:41.540
‫We will set the font size property to 16 pixels.

192
00:13:44.010 --> 00:13:46.510
‫We can solve the other issue with success.

193
00:13:46.830 --> 00:13:48.810
‫We will add another style method.

194
00:13:49.110 --> 00:13:53.130
‫This time the dominant baseline property will be set to middle.

195
00:13:55.750 --> 00:14:02.290
‫The dominant baseline will change how text elements are moved by setting it to middle, the elements

196
00:14:02.290 --> 00:14:03.850
‫will be moved from the center.

197
00:14:04.090 --> 00:14:06.530
‫Circles are also moved from their center.

198
00:14:06.850 --> 00:14:10.610
‫This should result in a circle and labels aligned with one another.

199
00:14:11.140 --> 00:14:13.720
‫The last thing we'll do is draw an axis.

200
00:14:13.900 --> 00:14:16.570
‫We will write the code at the bottom or the function.

201
00:14:16.870 --> 00:14:19.660
‫We will create a variable called axis.

202
00:14:19.960 --> 00:14:25.810
‫Its value will be the D three axis left function with the universe scale passed in.

203
00:14:28.480 --> 00:14:34.330
‫This function will provide us with a function we can call to draw the axis, we will draw it inside

204
00:14:34.330 --> 00:14:41.710
‫a group to keep things organized below this variable, we will append a new group element on the SPG

205
00:14:41.710 --> 00:14:42.430
‫selection.

206
00:14:44.980 --> 00:14:48.130
‫Next, we will add a transform attribute.

207
00:14:50.730 --> 00:14:56.910
‫By default, the axis will be positioned at the top left corner, will want to position it right on

208
00:14:56.910 --> 00:15:03.840
‫top of the circles, we are going to use the transform attribute to move the axis position before drawing

209
00:15:03.840 --> 00:15:04.090
‫it.

210
00:15:04.440 --> 00:15:10.320
‫We will set this attribute to the following translate dimension's margin zero.

211
00:15:15.380 --> 00:15:19.670
‫The last thing will change is the call function to call the axis function.

212
00:15:22.140 --> 00:15:23.550
‫Let's refresh the page.

213
00:15:25.970 --> 00:15:31.970
‫The axis is appearing right on top of the circles, the reader will now be able to know the measurements

214
00:15:31.970 --> 00:15:32.910
‫of each object.

215
00:15:33.140 --> 00:15:35.430
‫With that, we've completed the chart.

216
00:15:35.600 --> 00:15:37.430
‫Let's move on to the next lecture.

