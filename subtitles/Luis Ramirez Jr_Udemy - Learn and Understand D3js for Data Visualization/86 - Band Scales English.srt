1
00:00:00,540 --> 00:00:06,600
‫In this lecture, we're going to start creating scales, we're going to learn a new skill called aband

2
00:00:06,600 --> 00:00:07,120
‫scale.

3
00:00:07,440 --> 00:00:09,150
‫We'll talk about it in a moment.

4
00:00:09,150 --> 00:00:12,570
‫But first, let's create a scale for the Y axis.

5
00:00:12,870 --> 00:00:15,200
‫The y axis will measure the population.

6
00:00:15,480 --> 00:00:22,170
‫We're going to use a linear scale for the y axis in the script file, remove the console statement for

7
00:00:22,170 --> 00:00:23,730
‫these stacked data variable.

8
00:00:23,910 --> 00:00:25,230
‫We don't need it anymore.

9
00:00:27,750 --> 00:00:35,220
‫Next, we'll create a variable called Why Scale, its value will be the three dot scale linear function.

10
00:00:37,630 --> 00:00:40,990
‫Will change the domain function with an array passed in.

11
00:00:43,520 --> 00:00:45,930
‫The lower end of the range will be zero.

12
00:00:46,190 --> 00:00:52,050
‫As for the higher end of the domain, we need to grab the largest population from our data set.

13
00:00:52,460 --> 00:00:58,460
‫This is going to be a bit challenging because the population for each state is divided into age groups.

14
00:00:58,730 --> 00:01:00,800
‫We'll need to check each age group.

15
00:01:01,220 --> 00:01:04,330
‫Then we'll need to compare the population sizes.

16
00:01:04,640 --> 00:01:08,450
‫We're going to use the three day max function to help us.

17
00:01:10,900 --> 00:01:12,790
‫We'll pass him these stacked data.

18
00:01:15,340 --> 00:01:21,010
‫For the second day, arguments will pass in an arrow function that accepts the ag argument.

19
00:01:23,680 --> 00:01:30,340
‫The stacked data is an array that contains nine arrays, each array is for an age group, hence why

20
00:01:30,340 --> 00:01:33,820
‫we're calling the argument AG, which is short for age group.

21
00:01:34,240 --> 00:01:40,780
‫Each age group will hold 50 to arrays, will need to search for the highest population count from each

22
00:01:40,780 --> 00:01:41,250
‫array.

23
00:01:41,650 --> 00:01:44,740
‫We'll call the D 3.0 max function again.

24
00:01:47,590 --> 00:01:53,950
‫The second D three max function will search through each age group will pass in an arrow function that

25
00:01:53,950 --> 00:01:55,990
‫accepts an argument called state.

26
00:01:56,350 --> 00:01:58,840
‫We're referring to each array as state.

27
00:01:58,840 --> 00:02:04,780
‫Since the age group will hold fifty two states, we're going to return the following state one.

28
00:02:07,380 --> 00:02:14,250
‫There are two sizes being stored in each child array, the size stored in the one index will hold the

29
00:02:14,250 --> 00:02:15,330
‫larger size.

30
00:02:15,630 --> 00:02:21,420
‫The second D three max function will return the largest population size from the states.

31
00:02:21,900 --> 00:02:28,750
‫The first D three max function will return the largest population size from the age groups overall.

32
00:02:28,800 --> 00:02:31,020
‫This will grab the largest population.

33
00:02:31,560 --> 00:02:35,760
‫Let's move on to the range, will change the range round function.

34
00:02:38,330 --> 00:02:44,090
‫We'll be dealing with a lot of data to make things simpler, we'll round the values that get outputted

35
00:02:44,090 --> 00:02:51,650
‫by the scale will pass in an era where the values will be the dimensions, container, height and dimensions,

36
00:02:51,950 --> 00:02:53,270
‫margins, properties.

37
00:02:55,810 --> 00:03:02,890
‫Let's work on creating the scale for x axis to define a variable called X scale, its value will be

38
00:03:02,890 --> 00:03:05,500
‫the three dot scale band function.

39
00:03:07,900 --> 00:03:11,020
‫I'm introducing a new scale called the band scale.

40
00:03:12,900 --> 00:03:17,080
‫A band scale transforms discrete data into continuous data.

41
00:03:17,400 --> 00:03:20,030
‫The states will be drawn across the x axis.

42
00:03:20,280 --> 00:03:25,590
‫We can consider our data discrete since there are 52 states, states can be counted.

43
00:03:25,830 --> 00:03:28,010
‫Therefore, our data is discrete.

44
00:03:28,350 --> 00:03:31,560
‫We're going to transform this data into coordinates.

45
00:03:31,800 --> 00:03:38,610
‫The band scale was introduced specifically for transforming categorical data such as our states into

46
00:03:38,610 --> 00:03:39,230
‫numbers.

47
00:03:39,690 --> 00:03:45,120
‫Let's talk about how the scale works or trying to draw the states across the x axis.

48
00:03:45,420 --> 00:03:48,120
‫The width of the chart is one thousand pixels.

49
00:03:48,450 --> 00:03:50,790
‫Let's say we had two states in our data.

50
00:03:51,030 --> 00:03:54,270
‫Each state should occupy five hundred pixels each.

51
00:03:54,480 --> 00:03:59,970
‫As you can see from this chart, this is what the bar chart would look like if we had two states.

52
00:04:00,390 --> 00:04:05,400
‫The band scale will help us by evenly distributing the states into equal widths.

53
00:04:05,730 --> 00:04:08,760
‫But with each bar takes up is called a bandwidth.

54
00:04:09,270 --> 00:04:13,530
‫The band scale can even perform other actions, such as add padding.

55
00:04:13,860 --> 00:04:16,500
‫We can add inner padding and outer padding.

56
00:04:16,830 --> 00:04:20,430
‫Outer padding is the space on the left and right side of the chart.

57
00:04:20,640 --> 00:04:24,450
‫And this example, the outer padding is set to fifty pixels.

58
00:04:24,750 --> 00:04:28,200
‫The outer padding will reduce the overall space for the bars.

59
00:04:28,680 --> 00:04:32,580
‫Inner padding is this space between each bar and this example.

60
00:04:32,610 --> 00:04:35,070
‫The inner padding is set to fifty pixels.

61
00:04:37,550 --> 00:04:43,910
‫Lastly, we can access something called a step by step is the distance of the van with an inner padding

62
00:04:43,910 --> 00:04:49,910
‫added together that they in scale can be configured to help us customize the width and spacing of our

63
00:04:49,910 --> 00:04:50,780
‫bar charts.

64
00:04:53,170 --> 00:04:54,830
‫Let's create a band scale.

65
00:04:55,180 --> 00:04:57,790
‫Next, we will change the domain function.

66
00:05:00,270 --> 00:05:06,330
‫The domain should be the 52 states in our data, we're going to use the original data set because it's

67
00:05:06,330 --> 00:05:13,320
‫easier to access the states through the original data we're going to pass in the data set map function.

68
00:05:15,760 --> 00:05:19,840
‫We're going to pass in the following state state name.

69
00:05:22,380 --> 00:05:28,770
‫We're referencing each object in the array as states in the Arrow function, we're returning the name

70
00:05:28,770 --> 00:05:30,250
‫that's stored in the object.

71
00:05:30,510 --> 00:05:33,050
‫This will give us an array of state names.

72
00:05:33,330 --> 00:05:37,230
‫Next will change the range function with an array past in.

73
00:05:39,830 --> 00:05:45,710
‫We'll add the dimension, stop margins and dimension's container with properties to the array.

74
00:05:48,180 --> 00:05:49,950
‫We're finished with our scales.

75
00:05:50,100 --> 00:05:52,480
‫We aren't going to add padding at the moment.

76
00:05:52,680 --> 00:05:58,770
‫I'll show you how padding works once we draw the chart so that you can see the effects padding can have

77
00:05:58,770 --> 00:06:03,570
‫on a chart in the next lecture, we'll begin using the scales to draw the charge.

