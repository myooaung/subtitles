1
00:00:00,360 --> 00:00:06,540
‫In this lecture, we're going to fix a problem with the Voronoi diagram, if I hover my mouse over any

2
00:00:06,540 --> 00:00:09,780
‫of the dots, the tooltip appears that's great.

3
00:00:09,840 --> 00:00:12,660
‫But we've lost the effect we have on the circles.

4
00:00:12,930 --> 00:00:15,420
‫These circles remain the same color and size.

5
00:00:15,630 --> 00:00:19,170
‫It isn't clear as to which dot the reader is hovering over.

6
00:00:19,440 --> 00:00:21,870
‫This can become even more difficult to read.

7
00:00:21,870 --> 00:00:27,060
‫If we're hovering dots clustered close together, we can fix this problem by drawing.

8
00:00:27,060 --> 00:00:30,930
‫Another circle will draw a circle over the original circle.

9
00:00:31,170 --> 00:00:35,150
‫The newly drawn circle will be enlarged with its color change.

10
00:00:35,430 --> 00:00:38,040
‫This will give us the same effect we had before.

11
00:00:38,310 --> 00:00:43,030
‫When the reader hovers away from the dot, the newly drawn dots should be removed.

12
00:00:43,500 --> 00:00:45,330
‫Let's switch over to the editor.

13
00:00:47,730 --> 00:00:53,950
‫We are going to start by drawing a circle, the news circle will be drawn in our mouse center event.

14
00:00:54,270 --> 00:00:58,440
‫We are going to change the selection we're performing at the beginning of the function.

15
00:00:58,770 --> 00:01:02,210
‫The this keyword no longer references the circle.

16
00:01:02,370 --> 00:01:07,920
‫Instead, it references the path element using the container selection.

17
00:01:07,950 --> 00:01:12,780
‫We are going to replace this selection with the append function to add a new circle.

18
00:01:15,270 --> 00:01:20,760
‫Next, we will add a class to the element called covered with the class function.

19
00:01:23,350 --> 00:01:29,380
‫We are adding a class so that we can identify this circle as the newly drawn circle, we are going to

20
00:01:29,380 --> 00:01:31,900
‫need to remove it by adding a class.

21
00:01:31,930 --> 00:01:36,490
‫We will be able to select it again when removing it, after adding the class.

22
00:01:36,520 --> 00:01:42,350
‫We will start adding the other attributes since we want to position this circle above another circle.

23
00:01:42,400 --> 00:01:44,400
‫We need to use the same values.

24
00:01:44,770 --> 00:01:46,710
‫We don't have to rewrite the logic.

25
00:01:46,960 --> 00:01:49,240
‫We can copy the logic we had before.

26
00:01:49,540 --> 00:01:52,360
‫Scroll to the section where we drew the circles.

27
00:01:52,600 --> 00:01:57,490
‫We are going to copy the SCIEX and see why attributes from this selection.

28
00:01:59,910 --> 00:02:03,750
‫Then we will paste these attributes for our new circle.

29
00:02:06,280 --> 00:02:11,830
‫We will need to update the arguments we pass into the accessor function as to the datum argument.

30
00:02:14,240 --> 00:02:20,210
‫The new circle is ready, let's remove it after the mouse hovers away from the path, go to the handler

31
00:02:20,210 --> 00:02:25,820
‫function for the mouse leave event, we will replace the selection we're making in the function with

32
00:02:25,820 --> 00:02:27,380
‫the Harvard class.

33
00:02:33,560 --> 00:02:38,720
‫Instead of modifying the attributes, we're going to remove the circle with the remove function.

34
00:02:41,210 --> 00:02:42,100
‫We're finished.

35
00:02:42,140 --> 00:02:44,210
‫Let's refresh the page in the browser.

36
00:02:46,650 --> 00:02:53,010
‫If we were to hover over any of the circles, they would change their color, we've got the same functionality

37
00:02:53,010 --> 00:02:53,440
‫again.

38
00:02:53,760 --> 00:02:55,680
‫However, there's another problem.

39
00:02:55,920 --> 00:02:59,610
‫This effect becomes funky if we directly hover over the circle.

40
00:03:00,180 --> 00:03:04,790
‫The reason this is happening is because the new circle will be placed above the path.

41
00:03:05,100 --> 00:03:08,930
‫Keep in mind, the path and circle are two different elements.

42
00:03:09,420 --> 00:03:13,560
‫The events we're listening to are applied to the path elements.

43
00:03:13,830 --> 00:03:19,570
‫When we draw a new circle while the mouse is hovering over it, the mouse leave event gets emitted.

44
00:03:19,980 --> 00:03:23,850
‫This causes the circle to revert back to its original appearance.

45
00:03:24,330 --> 00:03:27,760
‫We can fix this issue by removing events from the circle.

46
00:03:27,990 --> 00:03:29,520
‫Let me show you what I mean.

47
00:03:29,710 --> 00:03:31,200
‫Switch back to the editor.

48
00:03:31,440 --> 00:03:37,620
‫Back in the mouse enter event, we're going to change a new style to the circle with the style function.

49
00:03:40,230 --> 00:03:43,140
‫The point your event property will be set to none.

50
00:03:45,740 --> 00:03:51,860
‫The point event property can tell the browser how events should be handled on an element by setting

51
00:03:51,860 --> 00:03:55,930
‫this property to none, any events on this element will be ignored.

52
00:03:56,210 --> 00:04:00,700
‫Therefore, the original mouse enter event will remain uninterrupted.

53
00:04:00,950 --> 00:04:02,350
‫Let's refresh the page.

54
00:04:02,810 --> 00:04:05,460
‫This time, the circle doesn't flicker anymore.

55
00:04:05,660 --> 00:04:06,340
‫Perfect.

56
00:04:06,470 --> 00:04:10,270
‫We've successfully added an interactive tool tip to our chart.

57
00:04:10,550 --> 00:04:11,880
‫Pat yourself on the back.

58
00:04:12,080 --> 00:04:13,330
‫This was a lot of work.

59
00:04:13,550 --> 00:04:17,210
‫We will continue our journey of D three in the next section.

