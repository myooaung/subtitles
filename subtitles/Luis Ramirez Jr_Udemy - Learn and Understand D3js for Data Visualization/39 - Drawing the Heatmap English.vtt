WEBVTT
﻿1
00:00:00.650 --> 00:00:06.830
‫In this lecture, we are going to begin drawing the heat map, a heat map is a set of squares organized

2
00:00:06.830 --> 00:00:07.420
‫in a grid.

3
00:00:07.790 --> 00:00:10.310
‫We are going to focus on drawing the squares.

4
00:00:10.670 --> 00:00:12.800
‫We will be working in the app file.

5
00:00:13.040 --> 00:00:15.500
‫The first few steps have been taken care of.

6
00:00:15.710 --> 00:00:17.930
‫We can proceed to draw the squares.

7
00:00:17.930 --> 00:00:22.280
‫After drawing the image, we will add a comment that says rectangles.

8
00:00:24.910 --> 00:00:29.980
‫Below this comment, we will append a group element on the SFG selection.

9
00:00:32.520 --> 00:00:38.970
‫The sheets for the heat map will be drawn in a group we want to keep our code organized after appending

10
00:00:38.970 --> 00:00:43.350
‫the group element, we will create a selection with the select all method.

11
00:00:43.680 --> 00:00:47.610
‫The selection we want to create will be for the rectangle elements.

12
00:00:50.020 --> 00:00:55.750
‫Presently, there aren't any rectangles, we are making an empty selection because we want to join the

13
00:00:55.750 --> 00:00:57.070
‫data with the selection.

14
00:00:57.370 --> 00:01:03.110
‫The data will wound up in the end, her selection will be able to loop through this selection.

15
00:01:03.340 --> 00:01:07.110
‫We will change the data function with the data set to join the data.

16
00:01:09.490 --> 00:01:14.770
‫Next, we will chain the joint function to start adding rectangle elements with the data.

17
00:01:17.310 --> 00:01:19.480
‫There are one hundred items in the array.

18
00:01:19.710 --> 00:01:22.680
‫We should find one hundred rectangles in the document.

19
00:01:22.960 --> 00:01:24.960
‫We will look at the document in a moment.

20
00:01:25.200 --> 00:01:27.780
‫First, I want to add some attributes.

21
00:01:27.960 --> 00:01:33.920
‫After calling the join method, we will be returned deselection with the elements appended to the document.

22
00:01:34.200 --> 00:01:36.450
‫We can begin manipulating the selection.

23
00:01:37.020 --> 00:01:39.360
‫We are going to chain an attribute method.

24
00:01:39.720 --> 00:01:43.170
‫The first attribute will update is the stroke attribute.

25
00:01:43.470 --> 00:01:45.540
‫The color of the stroke will be black.

26
00:01:48.100 --> 00:01:55.090
‫We will chain another attribute method for these fill attribute, the color of the fill will be Hashd.

27
00:01:57.630 --> 00:02:03.330
‫Every rectangle will have these two attributes applied rather than applying these attributes to these

28
00:02:03.330 --> 00:02:04.110
‫selection.

29
00:02:04.140 --> 00:02:06.420
‫We can move the attributes to the group.

30
00:02:08.890 --> 00:02:12.650
‫Attributes added to the group will apply to shapes drawn inside it.

31
00:02:12.970 --> 00:02:17.140
‫There isn't a difference between adding the attributes to the group or shapes.

32
00:02:17.440 --> 00:02:20.710
‫The reason we're moving the attributes is to clean up our code.

33
00:02:21.070 --> 00:02:25.840
‫The more attributes there are on an element, the more clutter we add to the element.

34
00:02:26.020 --> 00:02:29.500
‫Fewer attributes will allow us to focus on what's important.

35
00:02:29.740 --> 00:02:31.550
‫That's just my personal opinion.

36
00:02:32.050 --> 00:02:35.560
‫The next set of attributes we'll add are the width and height.

37
00:02:35.890 --> 00:02:40.210
‫The shape we're drawing will be a square where all the signs are equal length.

38
00:02:40.520 --> 00:02:44.200
‫We should store the length of each side in a variable above.

39
00:02:44.200 --> 00:02:49.770
‫In the function where we defined the dimensions, we will add another variable called box.

40
00:02:49.990 --> 00:02:51.640
‫Its value will be 30.

41
00:02:54.130 --> 00:02:57.320
‫I'm using 30 because of how the grid should be laid out.

42
00:02:57.550 --> 00:03:03.610
‫We will be drawing five rows of rectangles where each row will have 20 squares doing the math.

43
00:03:03.790 --> 00:03:07.610
‫That will be enough to fit one hundred squares to get the width.

44
00:03:07.750 --> 00:03:11.900
‫We can divide the width of the image by 20, then will give us 30.

45
00:03:12.100 --> 00:03:16.190
‫The same goes for the height back in the rectangle section.

46
00:03:16.360 --> 00:03:18.990
‫We are going to change to attribute methods.

47
00:03:19.360 --> 00:03:23.200
‫We will set the width and height attributes to the box variable.

48
00:03:30.120 --> 00:03:32.280
‫Let's preview the chart in the browser.

49
00:03:34.750 --> 00:03:40.060
‫All rectangles have been drawn in the image, they'll be layered on top of one another because we didn't

50
00:03:40.060 --> 00:03:41.570
‫modify their positions.

51
00:03:41.860 --> 00:03:45.570
‫One problem with the rectangles is that the shapes are being cut off.

52
00:03:45.880 --> 00:03:49.800
‫We can get rid of this error by moving the group back in the ed.

53
00:03:49.840 --> 00:03:51.730
‫We are going to modify the group.

54
00:03:52.090 --> 00:03:57.460
‫After appending the group, we will change the attribute method for the transform property.

55
00:04:00.060 --> 00:04:04.200
‫The value will be the translate function with the values to to.

56
00:04:06.830 --> 00:04:12.860
‫This sanction will move the group to pixels to the left and two pixels down, since we're applying this

57
00:04:12.860 --> 00:04:15.970
‫property to the group, the rectangles will also move.

58
00:04:16.130 --> 00:04:17.540
‫Let's refresh the page.

59
00:04:19.970 --> 00:04:22.790
‫Fantastic, the rectangles have been moved.

60
00:04:23.000 --> 00:04:27.300
‫We can move on to the next step, which is to position the rectangles in a grid.

61
00:04:27.650 --> 00:04:29.210
‫Let's go back to the ED.

62
00:04:31.800 --> 00:04:36.420
‫We are going to chain another attribute method for the X attribute.

63
00:04:39.000 --> 00:04:44.970
‫For the second argument, we will pass in an arrow function with the arguments D and I.

64
00:04:47.570 --> 00:04:54.230
‫Previously, we learned that the argument references the data joined to the element, there's another

65
00:04:54.230 --> 00:04:57.260
‫optional argument we can accept called index.

66
00:04:57.560 --> 00:05:00.990
‫The index argument references the index in the array.

67
00:05:01.340 --> 00:05:06.920
‫We are going to need this argument for correctly positioning the rectangle on the x axis.

68
00:05:07.370 --> 00:05:08.470
‫Here's what we'll do.

69
00:05:08.720 --> 00:05:15.410
‫We're going to return the box variable multiplied by the result of the index argument divided by 20.

70
00:05:17.990 --> 00:05:24.560
‫The operator we're using in this part of the equation is the modulus operator, the modulus operator

71
00:05:24.560 --> 00:05:30.410
‫will return the division remainder all out a comment to show some examples of what we can expect from

72
00:05:30.410 --> 00:05:31.120
‫this function.

73
00:05:31.760 --> 00:05:33.320
‫If the index is zero.

74
00:05:33.380 --> 00:05:34.930
‫The remainder will be zero.

75
00:05:35.210 --> 00:05:39.680
‫The box variable will be multiplied by zero, which will return zero.

76
00:05:39.980 --> 00:05:44.320
‫Therefore, the X coordinate for the first rectangle will be zero.

77
00:05:44.870 --> 00:05:51.640
‫If the index is one, the remainder will be one one times the box variable will result in 30.

78
00:05:51.890 --> 00:05:58.160
‫We can repeat this process multiple times each time the function will increment the X coordinate by

79
00:05:58.160 --> 00:05:58.640
‫30.

80
00:05:58.970 --> 00:06:05.600
‫Once the index surpasses 20, the X coordinate will be reset back to zero because twenty divided by

81
00:06:05.600 --> 00:06:10.430
‫20 will result in zero zero multiplied by 30 will give us zero.

82
00:06:10.760 --> 00:06:15.390
‫Therefore, the twenty first rectangle will have an X coordinate of zero.

83
00:06:15.620 --> 00:06:17.120
‫Let's check out the page.

84
00:06:19.580 --> 00:06:23.240
‫We will find 20 rectangles positioned, one after the other.

85
00:06:23.480 --> 00:06:25.710
‫What about the other 80 rectangles?

86
00:06:25.790 --> 00:06:28.850
‫Let's view the elements panel and the developer tools.

87
00:06:31.290 --> 00:06:37.200
‫As a hobby of my mouse over the rectangles, the other rectangles are layered over the other rectangles,

88
00:06:37.200 --> 00:06:38.630
‫which isn't what we want.

89
00:06:39.000 --> 00:06:43.560
‫If we don't want them to be layered on one another, we need to move their y coordinate.

90
00:06:43.890 --> 00:06:49.840
‫The most important thing is that none of the rectangles are drawn outside the bounds of the image switched

91
00:06:49.890 --> 00:06:50.880
‫back to the editor.

92
00:06:53.310 --> 00:06:57.240
‫We will chain another attribute method for the wine attribute.

93
00:06:59.600 --> 00:07:03.380
‫We will pass in an arrow function with the arguments D and I.

94
00:07:06.110 --> 00:07:13.250
‫The return value of this function will be the following box times I divide divided by 20 or zero.

95
00:07:15.840 --> 00:07:22.280
‫The formula is the same as the X attribute with some differences instead of calculating the remainder.

96
00:07:22.320 --> 00:07:24.360
‫We just divide the index by 20.

97
00:07:24.630 --> 00:07:28.020
‫In some cases, we may get a decimal value below one.

98
00:07:28.330 --> 00:07:32.480
‫If that's the case, we will return zero from this part of the equation.

99
00:07:32.760 --> 00:07:38.200
‫Otherwise, the value computed by the multiplication equation will give us an awkward value.

100
00:07:38.430 --> 00:07:40.370
‫It's better to deal with whole numbers.

101
00:07:40.530 --> 00:07:41.970
‫Let's refresh the page.

102
00:07:44.480 --> 00:07:46.590
‫We've successfully created a grid.

103
00:07:46.940 --> 00:07:51.020
‫There are five rows of rectangles with 20 rectangles in each row.

104
00:07:51.350 --> 00:07:54.830
‫The only problem we have left are the colors of the rectangle.

105
00:07:54.950 --> 00:07:55.970
‫They're all the same.

106
00:07:56.180 --> 00:08:00.860
‫In the next set of lectures, we are going to start adding color to each rectangle.

107
00:08:01.010 --> 00:08:02.780
‫This is where the challenge will begin.

