1
00:00:00,510 --> 00:00:06,720
‫Nesta aula, vamos começar a desenhar um gráfico de barras empilhadas. Os gráficos de barras são um tipo

2
00:00:06,720 --> 00:00:07,800
‫popular de visualização.

3
00:00:08,070 --> 00:00:10,480
‫Eles não devem ser confundidos com histogramas.

4
00:00:10,800 --> 00:00:12,510
‫Há uma diferença entre os dois.

5
00:00:12,810 --> 00:00:15,650
‫Ambos os gráficos usam barras para representar os dados.

6
00:00:15,870 --> 00:00:21,680
‫Ambos têm um eixo xe o histograma do eixo y mostra uma frequência de dados.

7
00:00:22,020 --> 00:00:26,330
‫Vimos um exemplo de histograma quando desenhamos diferentes tipos de dados meteorológicos.

8
00:00:26,700 --> 00:00:29,550
‫Cada barra não representou um único valor.

9
00:00:29,750 --> 00:00:34,830
‫Em vez disso, as barras representam a frequência dos valores dentro de um determinado intervalo.

10
00:00:35,310 --> 00:00:39,570
‫Os gráficos de barras são diferentes porque cada barra representa um valor.

11
00:00:39,810 --> 00:00:43,470
‫Ao representar um valor, podemos comparar os dados facilmente.

12
00:00:45,000 --> 00:00:50,790
‫Na seção de recursos desta palestra, forneço um link para um artigo que quebra ainda mais as diferenças

13
00:00:50,790 --> 00:00:52,900
‫entre histogramas e gráficos de barras.

14
00:00:53,220 --> 00:00:56,130
‫Eu recomendo dar uma boa leitura antes de continuar.

15
00:00:56,670 --> 00:01:00,730
‫Para este exemplo, vamos criar uma variação de um gráfico de barras.

16
00:01:00,990 --> 00:01:03,420
‫Vamos desenhar um gráfico de barras empilhadas.

17
00:01:03,810 --> 00:01:07,650
‫Um gráfico de barras empilhadas é quando as barras são empilhadas umas sobre as outras.

18
00:01:07,950 --> 00:01:11,960
‫Eles nos permitem dividir os dados em várias categorias.

19
00:01:12,270 --> 00:01:14,790
‫Vejamos o que desenharemos para este exemplo.

20
00:01:15,330 --> 00:01:22,290
‫Na seção de recursos desta palestra, eu forneço um arquivo zip, faço o download desse arquivo, descompacta o conteúdo e aponto

21
00:01:22,290 --> 00:01:24,590
‫o seu editor para esses arquivos.

22
00:01:24,600 --> 00:01:26,370
‫Pause o vídeo, se necessário.

23
00:01:26,820 --> 00:01:29,570
‫O conteúdo do arquivo zip não é nada especial.

24
00:01:29,760 --> 00:01:32,160
‫Vamos pular direto para o arquivo de script.

25
00:01:32,520 --> 00:01:34,560
‫Três coisas estão acontecendo neste arquivo.

26
00:01:34,740 --> 00:01:37,290
‫Uma solicitação de arquivo está sendo executada.

27
00:01:37,410 --> 00:01:39,030
‫As dimensões estão sendo definidas.

28
00:01:39,060 --> 00:01:42,500
‫E por último, a imagem está sendo desenhada com um container.

29
00:01:42,810 --> 00:01:46,380
‫Vamos inspecionar o conteúdo dos dados desse arquivo CSV.

30
00:01:48,970 --> 00:01:55,060
‫Os dados com os quais trabalharemos conterão o tamanho da população de cada estado nos EUA. S. , incluindo Washington,

31
00:01:55,060 --> 00:02:01,030
‫D. C. e Porto Rico, a primeira coluna conterá os nomes dos estados em ordem alfabética.

32
00:02:01,180 --> 00:02:05,210
‫A população de cada estado é dividida em diferentes grupos de idade.

33
00:02:05,680 --> 00:02:07,440
‫Veja como desenharemos esses dados.

34
00:02:07,600 --> 00:02:09,290
‫Vamos desenhar um gráfico de barras.

35
00:02:09,580 --> 00:02:11,410
‫Haverá um bar para cada estado.

36
00:02:11,770 --> 00:02:15,200
‫Cada barra será dividida em mais barras para cada faixa etária.

37
00:02:15,460 --> 00:02:17,890
‫As barras serão empilhadas umas sobre as outras.

38
00:02:18,160 --> 00:02:21,130
‫Vamos desenhar os estados no eixo x.

39
00:02:21,370 --> 00:02:26,510
‫A população será medida no eixo Y antes de começarmos a desenhar os dados.

40
00:02:26,560 --> 00:02:32,110
‫Tenho um problema com a maneira como o D3 armazena nossos dados comutados de volta para o arquivo de script.

41
00:02:32,380 --> 00:02:38,200
‫Os dados estão sendo solicitados com estes csv função D três analisa o arquivo em um array.

42
00:02:38,500 --> 00:02:42,580
‫Vamos bloquear a variável do conjunto de dados para inspecionar o conteúdo do array.

43
00:02:45,200 --> 00:02:47,030
‫Atualize a página no navegador.

44
00:02:49,550 --> 00:02:53,970
‫No Conselho do Desenvolvedor, as Ferramentas descobrirão que os dados foram registrados.

45
00:02:54,260 --> 00:03:00,980
‫É uma matriz de objetos e qualquer um dos objetos encontrará o nome do estado junto com as faixas etárias.

46
00:03:01,280 --> 00:03:03,860
‫O valor para cada faixa etária é uma string.

47
00:03:04,220 --> 00:03:08,480
‫Por padrão, a função CSC armazenará cada valor como uma string.

48
00:03:08,790 --> 00:03:11,240
‫A população deve ser armazenada como números.

49
00:03:11,510 --> 00:03:16,850
‫Precisamos dizer a três para armazenar esses valores conforme os números voltam para o editor.

50
00:03:19,390 --> 00:03:25,830
‫A função CSP possui um segundo argumento opcional que nos permite configurar como os dados são armazenados, vamos

51
00:03:26,080 --> 00:03:30,140
‫passar uma função de seta que aceita um argumento chamado.

52
00:03:32,950 --> 00:03:39,170
‫D3 fará um loop pelos dados em nosso arquivo, o argumento fará referência a cada objeto na matriz.

53
00:03:39,400 --> 00:03:43,350
‫A função deve retornar os dados antes de retornarmos os dados.

54
00:03:43,360 --> 00:03:45,870
‫Podemos converter qualquer um dos tipos de propriedades.

55
00:03:46,090 --> 00:03:49,390
‫Por exemplo, existe uma faixa etária chamada menos de 10 anos.

56
00:03:49,720 --> 00:03:53,980
‫Podemos atualizar essas propriedades envolvendo-as com a função de análise.

57
00:03:59,730 --> 00:04:05,520
‫Podemos realizar a conversão de tipo para cada propriedade, no entanto, existe uma maneira mais curta de realizar essa

58
00:04:05,520 --> 00:04:06,100
‫tarefa.

59
00:04:06,390 --> 00:04:12,750
‫Vou substituir esta linha pela função de tipo automático D3 com o argumento passado.

60
00:04:15,410 --> 00:04:21,560
‫A função de tipo automático detectará quais tipos são apropriados para seus dados, automatizando o processo de

61
00:04:21,560 --> 00:04:22,700
‫atribuição de tipos.

62
00:04:22,970 --> 00:04:24,920
‫Não é a função mais confiável.

63
00:04:25,220 --> 00:04:28,630
‫Às vezes, pode definir um tipo incorreto para seus dados.

64
00:04:28,910 --> 00:04:32,680
‫É sempre uma boa prática registrar os dados para inspecionar os novos tipos.

65
00:04:32,870 --> 00:04:34,190
‫Para nossos propósitos.

66
00:04:34,230 --> 00:04:35,180
‫Vai funcionar bem.

67
00:04:35,450 --> 00:04:37,400
‫Vamos atualizar a página no navegador.

68
00:04:40,020 --> 00:04:43,980
‫O console está nos mostrando que os tipos de grupos de idade são números.

69
00:04:44,280 --> 00:04:47,380
‫Isso é indicado pelo fato de que a cor do texto é azul.

70
00:04:47,730 --> 00:04:53,900
‫Anteriormente, a cor do texto era vermelha, que é a cor das ferramentas de desenvolvimento usadas para exibir strings.

71
00:04:54,120 --> 00:04:54,590
‫Ótimo.

72
00:04:54,720 --> 00:04:56,840
‫Convertemos os tipos em números.

73
00:04:57,240 --> 00:05:01,830
‫É sempre importante trabalhar com os tipos corretos para obter resultados mais precisos.

74
00:05:02,100 --> 00:05:07,470
‫Mesmo que o JavaScript seja uma linguagem digitada dinamicamente, pode haver problemas no futuro.

75
00:05:07,470 --> 00:05:13,110
‫Se usarmos os tipos errados na próxima aula, continuaremos trabalhando no gráfico de barras empilhadas.

