WEBVTT
1
00:00:00.050 --> 00:00:01.080
- [Instructor] For this course, we will use

2
00:00:01.080 --> 00:00:05.000
a simple Java application built using Spring Boot.

3
00:00:05.000 --> 00:00:07.020
Now we are using Spring Boot, but you're definitely welcome

4
00:00:07.020 --> 00:00:09.040
to choose a framework of your choice.

5
00:00:09.040 --> 00:00:12.010
End of the day, you need a Java application

6
00:00:12.010 --> 00:00:14.060
that needs to be Kubernetes-sized.

7
00:00:14.060 --> 00:00:17.080
This particular application publishes a REST endpoint

8
00:00:17.080 --> 00:00:20.040
that can be invoked at a certain endpoint.

9
00:00:20.040 --> 00:00:22.050
Now, this application is available as

10
00:00:22.050 --> 00:00:24.090
part of the GitHub repo of the course.

11
00:00:24.090 --> 00:00:27.090
It's a Maven based project, and now have it open here

12
00:00:27.090 --> 00:00:28.090
in IntelliJ.

13
00:00:28.090 --> 00:00:31.040
Let's take a look at this application.

14
00:00:31.040 --> 00:00:34.020
First thing we do is take a look at the source code.

15
00:00:34.020 --> 00:00:36.030
It's a very simple application by design

16
00:00:36.030 --> 00:00:39.000
because the focus here is on how to package

17
00:00:39.000 --> 00:00:41.000
a Java application as a Docker container

18
00:00:41.000 --> 00:00:42.080
and Kubernetes-ize it,

19
00:00:42.080 --> 00:00:44.010
not on the complexity

20
00:00:44.010 --> 00:00:47.000
of the Java application.

21
00:00:47.000 --> 00:00:49.030
So here is my simple greeting controller.

22
00:00:49.030 --> 00:00:50.010
As you can see,

23
00:00:50.010 --> 00:00:53.060
this is a very standard Spring Boot application.

24
00:00:53.060 --> 00:00:56.030
Here is the endpoint where the application is accessible,

25
00:00:56.030 --> 00:01:00.060
and it just returns a simple response, call is Hello.

26
00:01:00.060 --> 00:01:04.020
Let's look at the Palm XML next.

27
00:01:04.020 --> 00:01:05.000
Now you can see

28
00:01:05.000 --> 00:01:08.030
this is a very standard Spring Boot starter application.

29
00:01:08.030 --> 00:01:10.070
Here are my dependencies.

30
00:01:10.070 --> 00:01:12.090
Here is my Spring Boot Maven plug-in that allows me

31
00:01:12.090 --> 00:01:15.090
to run the application from Maven itself

32
00:01:15.090 --> 00:01:18.000
and I have a Maven profile here

33
00:01:18.000 --> 00:01:20.010
which we'll talk later in the cycle.

34
00:01:20.010 --> 00:01:22.020
Now in this application,

35
00:01:22.020 --> 00:01:24.090
you can see there are multiple files over here as well,

36
00:01:24.090 --> 00:01:26.070
and we'll talk through each one of them

37
00:01:26.070 --> 00:01:29.010
as we progress through the course.

38
00:01:29.010 --> 00:01:30.050
So the first step for us

39
00:01:30.050 --> 00:01:34.050
is now to really go and run the application.

40
00:01:34.050 --> 00:01:37.060
I've got two terminal windows open here.

41
00:01:37.060 --> 00:01:40.090
Let's go to my repo directory

42
00:01:40.090 --> 00:01:44.080
and App is where my application is setting.

43
00:01:44.080 --> 00:01:49.020
I'm just going to give a command Maven Spring Boot run.

44
00:01:49.020 --> 00:01:51.010
Now as I give the command,

45
00:01:51.010 --> 00:01:52.090
if this is the first time I'm giving the command

46
00:01:52.090 --> 00:01:53.080
on my machine,

47
00:01:53.080 --> 00:01:56.060
then it will download all the Maven dependencies,

48
00:01:56.060 --> 00:01:59.000
so it could take awhile, but because I have run

49
00:01:59.000 --> 00:02:01.000
this command on this machine earlier,

50
00:02:01.000 --> 00:02:03.090
it'll run rather quickly.

51
00:02:03.090 --> 00:02:07.000
So at this point it's really building my application,

52
00:02:07.000 --> 00:02:08.050
packaging my application,

53
00:02:08.050 --> 00:02:09.090
and the application rather started

54
00:02:09.090 --> 00:02:11.020
very quickly.

55
00:02:11.020 --> 00:02:14.000
So now, let's go ahead and access this application

56
00:02:14.000 --> 00:02:17.050
and see what response do we get back.

57
00:02:17.050 --> 00:02:23.070
So I'm going to say curl, http, localhost, colon,

58
00:02:23.070 --> 00:02:27.030
80 80, hello.

59
00:02:27.030 --> 00:02:28.080
Voila, we get a response.

60
00:02:28.080 --> 00:02:29.070
Hello.

61
00:02:29.070 --> 00:02:31.050
This is our simple application here.

62
00:02:31.050 --> 00:02:33.050
It just returns the response back hello.

63
00:02:33.050 --> 00:02:35.090
And that's all we're going to show in this section.

64
00:02:35.090 --> 00:02:38.060
So once again we built our application.

65
00:02:38.060 --> 00:02:40.040
We tested out the application.

66
00:02:40.040 --> 00:02:43.000
We got a response back call is Hello.

67
00:02:43.000 --> 00:02:45.090
And throughout the course we'll see as we are progressing

68
00:02:45.090 --> 00:02:48.010
through the course, this is the response that

69
00:02:48.010 --> 00:02:49.030
we are expecting.

70
00:02:49.030 --> 00:02:51.080
Hello is a simple word, but very valuable

71
00:02:51.080 --> 00:02:54.000
for us in this particular course.

